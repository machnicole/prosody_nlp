# Time of run:
# Sat Jul 31 12:12:27 2021
# Command:
# ./berkeley_parse_analyser/classify_german_vm.py sample_data/turn_vm_ger_with_speech_output_top.txt sample_data/turn_dev_top_ger.trees classified.vm_ger_turn.with_speech_TOP
#
Printing tree transformations
Sentence 1:
0 Initial errors
0 on fringe, 0 iterations

Sentence 2:
0 Initial errors
0 on fringe, 0 iterations

Sentence 3:
6 Initial errors
0 on fringe, 4 iterations
2 Error:Single Word Phrase
2 Error:NP Attachment
1 Error:UNSET remove
1 Error:UNSET add
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP [01;33m(SIMPX[00m
	(TURN
		(SU
			(SIMPX ich mache ihnen das jetzt fertig)
			[01;31m(SIMPX[00m
				(LK konnen) [01;33mSIMPX)[00m
				(MF sie)[01;31m)[00m
			(SIMPX
				[01;36m(NX[00m
					(VF
						[01;31m(ADVX[00m
							(ADV morgen)[01;31m)[00m)[01;36m)[00m
				(LK kommt)
				(MF die bestatigung))
			(SIMPX
				(LK konnen)
				[01;36m(MF[00m
					[01;31m(MF[00m
						(NX sie)
						(NX es)[01;31m)[00m
					(NX ticket)[01;36m)[00m
				(VC abholen)))))
Step:Single Word Phrase
{'family': ['NX'], 'auto preterminal span': (8, 9), 'span': (8, 9), 'subtrees': ['ADV'], 'parent': 'VF', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'NX')}
(TOP [01;33m(SIMPX[00m
	(TURN
		(SU
			(SIMPX ich mache ihnen das jetzt fertig)
			[01;31m(SIMPX[00m
				(LK konnen) [01;33mSIMPX)[00m
				(MF sie)[01;31m)[00m
			(SIMPX morgen kommt die bestatigung)
			(SIMPX
				(LK konnen)
				[01;36m(MF[00m
					[01;31m(MF[00m
						(NX sie)
						(NX es)[01;31m)[00m
					(NX ticket)[01;36m)[00m
				(VC abholen)))))
Step:NP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'NX', 'NX'], 'mover info': [('NX', (15, 16))], 'old_family': ['LK', 'MF', 'NX', 'VC'], 'start left siblings': ['LK', 'MF'], 'auto preterminals': ('VMFIN', 'PPER', 'PPER', 'NN', 'VVINF'), 'start right siblings': ['VC'], 'end left siblings': ['NX', 'NX'], 'auto preterminal span': (12, 17), 'movers': ['NX'], 'old_parent': 'SIMPX', 'POS confusion': ('NN', 'NN'), 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP [01;33m(SIMPX[00m
	(TURN
		(SU
			(SIMPX ich mache ihnen das jetzt fertig)
			[01;31m(SIMPX[00m
				(LK konnen) [01;33mSIMPX)[00m
				(MF sie)[01;31m)[00m
			(SIMPX morgen kommt die bestatigung)
			(SIMPX konnen sie es ticket abholen))))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'PPER', 'PDS', 'ADV', 'PTKVZ', 'VMFIN', 'PPER', 'ADV', 'VVFIN', 'ART', 'NN', 'VMFIN', 'PPER', 'PPER', 'NN', 'VVINF'), 'right siblings': ['SIMPX', 'SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 17), 'span': (6, 8), 'left siblings': ['SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU
			[01;36m(SIMPX[00m
				(SIMPX ich mache ihnen das jetzt fertig)
				(LK konnen)[01;36m)[00m
			(MF sie)
			(SIMPX morgen kommt die bestatigung)
			(SIMPX konnen sie es ticket abholen))))
Step:UNSET add
{'subtrees': ['SIMPX', 'LK'], 'family': ['SIMPX', 'MF', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'PPER', 'PDS', 'ADV', 'PTKVZ', 'VMFIN'), 'right siblings': [(MF (NX (PPER sie))), (SIMPX (VF (NX (ADV morgen))) (LK (VXFIN (VVFIN kommt))) (MF (NX (ART die) (NN bestatigung)))), (SIMPX (LK (VXFIN (VMFIN konnen))) (MF (NX (PPER sie)) (NX (PPER es)) (NX (NN ticket))) (VC (VXINF (VVINF abholen))))], 'left siblings': [], 'auto preterminal span': (0, 7), 'span': (0, 7), 'parent': 'SU', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP ich mache ihnen das jetzt fertig konnen sie morgen kommt die bestatigung konnen sie es ticket abholen)

Sentence 4:
0 Initial errors
0 on fringe, 0 iterations

Sentence 5:
0 Initial errors
0 on fringe, 0 iterations

Sentence 6:
0 Initial errors
0 on fringe, 0 iterations

Sentence 7:
0 Initial errors
0 on fringe, 0 iterations

Sentence 8:
0 Initial errors
0 on fringe, 0 iterations

Sentence 9:
0 Initial errors
0 on fringe, 0 iterations

Sentence 10:
0 Initial errors
0 on fringe, 0 iterations

Sentence 11:
0 Initial errors
0 on fringe, 0 iterations

Sentence 12:
3 Initial errors
0 on fringe, 2 iterations
2 Error:UNSET move
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			[01;31m(SIMPX[00m
				[01;31m(LV[00m
					(PX
						(APPR in)
						(NX zwei wochen))[01;31m)[00m
				[01;36m(SIMPX[00m
					(VF das)
					(LK ware)
					(MF der wievielte)[01;36m)[00m[01;31m)[00m)))
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['LV', 'SIMPX'], 'mover info': [('LV', (0, 3))], 'old_family': ['LV', 'VF', 'LK', 'MF'], 'start left siblings': [], 'auto preterminals': ('APPR', 'CARD', 'NN', 'PDS', 'VAFIN', 'ART', 'NN'), 'start right siblings': ['VF', 'LK', 'MF'], 'end left siblings': [], 'auto preterminal span': (0, 7), 'movers': ['LV'], 'old_parent': 'SIMPX', 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			[01;31m(LV[00m
				(PX
					(APPR in)
					(NX zwei wochen))[01;31m)[00m
			(SIMPX das ware der wievielte))))
Step:Unary
{'subtrees': ['PX'], 'family': ['LV', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'CARD', 'NN', 'PDS', 'VAFIN', 'ART', 'NN'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 7), 'span': (0, 3), 'left siblings': [], 'label': 'LV', 'classified_type': 'Unary', 'type': 'remove'}
(TOP in zwei wochen das ware der wievielte)

Sentence 13:
0 Initial errors
0 on fringe, 0 iterations

Sentence 14:
0 Initial errors
0 on fringe, 0 iterations

Sentence 15:
0 Initial errors
0 on fringe, 0 iterations

Sentence 16:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(SIMPX
				(KOORD und)
				(C wenn)
				(FKOORD
					(MVC wir sonntags fahren)
					(KON und)
					(MVC
						(MF
							[01;36m(ADVX[00m
								(ADVX noch)
								[01;31m(ADVX[00m
									(ADV vorher)[01;31m)[00m[01;36m)[00m
							(PX ins theater))
						(VC gehen))))
			(ADVX oder so))))
Step:Modifier Attachment
{'new_parent': 'ADVX', 'new_family': ['ADVX', 'ADV'], 'mover info': [('ADVX', (6, 7))], 'old_family': ['ADVX', 'ADVX', 'PX'], 'start left siblings': [], 'auto preterminals': ('ADV', 'ADV', 'APPRART', 'NN'), 'start right siblings': ['ADVX', 'PX'], 'end left siblings': [], 'auto preterminal span': (6, 10), 'movers': ['ADVX'], 'old_parent': 'MF', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['ADV'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP und wenn wir sonntags fahren und noch vorher ins theater gehen oder so)

Sentence 17:
0 Initial errors
0 on fringe, 0 iterations

Sentence 18:
0 Initial errors
0 on fringe, 0 iterations

Sentence 19:
0 Initial errors
0 on fringe, 0 iterations

Sentence 20:
0 Initial errors
0 on fringe, 0 iterations

Sentence 21:
0 Initial errors
0 on fringe, 0 iterations

Sentence 22:
0 Initial errors
0 on fringe, 0 iterations

Sentence 23:
0 Initial errors
0 on fringe, 0 iterations

Sentence 24:
0 Initial errors
0 on fringe, 0 iterations

Sentence 25:
0 Initial errors
0 on fringe, 0 iterations

Sentence 26:
0 Initial errors
0 on fringe, 0 iterations

Sentence 27:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX
				(VF vielleicht)
				(LK konnen)
				(MF
					(NX sie)
					(ADVX dann)
					(ADVX auch)
					[01;36m(PX[00m
						(ADVX direkt)
						[01;31m(PX[00m
							(APPR nach)
							(NX dem intercityhotel)[01;31m)[00m[01;36m)[00m)
				(VC fragen)))))
Step:Modifier Attachment
{'new_parent': 'PX', 'new_family': ['ADVX', 'APPR', 'NX'], 'mover info': [('ADVX', (6, 7))], 'old_family': ['NX', 'ADVX', 'ADVX', 'ADVX', 'PX'], 'start left siblings': ['NX', 'ADVX', 'ADVX'], 'auto preterminals': ('PPER', 'ADV', 'ADV', 'ADV', 'APPR', 'ART', 'NE'), 'start right siblings': ['PX'], 'end left siblings': [], 'auto preterminal span': (3, 10), 'movers': ['ADVX'], 'old_parent': 'MF', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['APPR', 'NX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP ja vielleicht konnen sie dann auch direkt nach dem intercityhotel fragen)

Sentence 28:
0 Initial errors
0 on fringe, 0 iterations

Sentence 29:
0 Initial errors
0 on fringe, 0 iterations

Sentence 30:
9 Initial errors
0 on fringe, 7 iterations
2 Error:NP Attachment
2 Error:Co-ordination
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:Unary
1 Error:NP Internal Structure
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			[01;31m(SIMPX[00m
				(LK wissen)
				[01;31m(MF[00m
					[01;36m(MF[00m
						(NX
							(PPER sie))[01;36m)[00m
					(NX was)[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				(VF ich)
				(FKOORD
					(LKMVC rufe im reiseburo an)
					(KON und)
					[01;36m(LKM[00m
						[01;31m(LKM[00m
							(LK klare)
							[01;31m(MF[00m
								[01;31m(NX[00m
									(NX das)
									(NX alles)[01;31m)[00m[01;31m)[00m[01;31m)[00m
						[01;31m(LKM[00m
							(LK kaufe)
							(MF die tickets)[01;31m)[00m[01;36m)[00m)[01;31m)[00m
			(SIMPX und dann rufe ich sie noch mal an wegen dem programm im ballhaus))))
Step:NP Attachment
{'new_parent': 'SIMPX', 'new_family': ['NX', 'VF', 'FKOORD'], 'mover info': [('NX', (2, 3))], 'old_family': ['NX', 'NX'], 'start left siblings': ['NX'], 'auto preterminals': ('VVFIN', 'PPER', 'PIS', 'PPER', 'VVFIN', 'APPRART', 'NN', 'PTKVZ', 'KON', 'VVFIN', 'PDS', 'PIS', 'VVFIN', 'ART', 'NN', 'KON', 'ADV', 'VVFIN', 'PPER', 'PPER', 'ADV', 'ADV', 'PTKVZ', 'APPR', 'ART', 'NN', 'APPRART', 'NE'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 28), 'movers': ['NX'], 'old_parent': 'MF', 'POS confusion': ('PIS', 'PIS'), 'end right siblings': ['VF', 'FKOORD'], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU
			[01;31m(SIMPX[00m
				(LK wissen)
				(MF sie)[01;31m)[00m
			[01;31m(SIMPX[00m
				(NX was)
				(VF ich)
				(FKOORD
					(LKMVC rufe im reiseburo an)
					(KON und)
					[01;36m(LKM[00m
						[01;31m(LKM[00m
							(LK klare)
							[01;31m(MF[00m
								[01;31m(NX[00m
									(NX das)
									(NX alles)[01;31m)[00m[01;31m)[00m[01;31m)[00m
						[01;31m(LKM[00m
							(LK kaufe)
							(MF die tickets)[01;31m)[00m[01;36m)[00m)[01;31m)[00m
			(SIMPX und dann rufe ich sie noch mal an wegen dem programm im ballhaus))))
Step:Co-ordination
{'new_parent': 'LKM', 'new_family': ['LKM', 'LK', 'MF'], 'mover info': [('LKM', (9, 12))], 'old_family': ['LKMVC', 'KON', 'LKM', 'LKM'], 'start left siblings': ['LKMVC', 'KON'], 'auto preterminals': ('VVFIN', 'APPRART', 'NN', 'PTKVZ', 'KON', 'VVFIN', 'PDS', 'PIS', 'VVFIN', 'ART', 'NN'), 'start right siblings': ['LKM'], 'end left siblings': [], 'auto preterminal span': (4, 15), 'movers': ['LKM'], 'old_parent': 'FKOORD', 'end right siblings': ['LK', 'MF'], 'classified_type': 'Co-ordination', 'type': 'move'}
(TOP
	(TURN
		(SU
			[01;31m(SIMPX[00m
				(LK wissen)
				(MF sie)[01;31m)[00m
			[01;31m(SIMPX[00m
				(NX was)
				(VF ich)
				(FKOORD
					(LKMVC rufe im reiseburo an)
					(KON und)
					(LKM
						[01;31m(LKM[00m
							(LK klare)
							[01;31m(MF[00m
								[01;31m(NX[00m
									(NX das)
									(NX alles)[01;31m)[00m[01;31m)[00m[01;31m)[00m
						(LK kaufe)
						(MF die tickets)))[01;31m)[00m
			(SIMPX und dann rufe ich sie noch mal an wegen dem programm im ballhaus))))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'PIS', 'PPER', 'VVFIN', 'APPRART', 'NN', 'PTKVZ', 'KON', 'VVFIN', 'PDS', 'PIS', 'VVFIN', 'ART', 'NN', 'KON', 'ADV', 'VVFIN', 'PPER', 'PPER', 'ADV', 'ADV', 'PTKVZ', 'APPR', 'ART', 'NN', 'APPRART', 'NE'), 'right siblings': ['SIMPX', 'SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 28), 'span': (0, 2), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(LK wissen)
			(MF sie)
			[01;31m(SIMPX[00m
				(NX was)
				(VF ich)
				(FKOORD
					(LKMVC rufe im reiseburo an)
					(KON und)
					(LKM
						[01;31m(LKM[00m
							(LK klare)
							[01;31m(MF[00m
								[01;31m(NX[00m
									(NX das)
									(NX alles)[01;31m)[00m[01;31m)[00m[01;31m)[00m
						(LK kaufe)
						(MF die tickets)))[01;31m)[00m
			(SIMPX und dann rufe ich sie noch mal an wegen dem programm im ballhaus))))
Step:UNSET remove
{'subtrees': ['NX', 'VF', 'FKOORD'], 'family': ['LK', 'MF', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'PIS', 'PPER', 'VVFIN', 'APPRART', 'NN', 'PTKVZ', 'KON', 'VVFIN', 'PDS', 'PIS', 'VVFIN', 'ART', 'NN', 'KON', 'ADV', 'VVFIN', 'PPER', 'PPER', 'ADV', 'ADV', 'PTKVZ', 'APPR', 'ART', 'NN', 'APPRART', 'NE'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 28), 'span': (2, 15), 'left siblings': ['LK', 'MF'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(LK wissen)
			(MF sie)
			(NX was)
			(VF ich)
			(FKOORD
				(LKMVC rufe im reiseburo an)
				(KON und)
				(LKM
					[01;31m(LKM[00m
						(LK klare)
						[01;31m(MF[00m
							[01;31m(NX[00m
								(NX das)
								(NX alles)[01;31m)[00m[01;31m)[00m[01;31m)[00m
					(LK kaufe)
					(MF die tickets)))
			(SIMPX und dann rufe ich sie noch mal an wegen dem programm im ballhaus))))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['LKM', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PDS', 'PIS', 'VVFIN', 'ART', 'NN'), 'right siblings': ['LK', 'MF'], 'parent': 'LKM', 'auto preterminal span': (9, 15), 'span': (9, 12), 'left siblings': [], 'label': 'LKM', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(LK wissen)
			(MF sie)
			(NX was)
			(VF ich)
			(FKOORD
				(LKMVC rufe im reiseburo an)
				(KON und)
				(LKM
					(LK klare)
					[01;31m(MF[00m
						[01;31m(NX[00m
							(NX das)
							(NX alles)[01;31m)[00m[01;31m)[00m
					(LK kaufe)
					(MF die tickets)))
			(SIMPX und dann rufe ich sie noch mal an wegen dem programm im ballhaus))))
Step:Unary
{'subtrees': ['NX'], 'family': ['LK', 'MF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PDS', 'PIS', 'VVFIN', 'ART', 'NN'), 'right siblings': ['LK', 'MF'], 'parent': 'LKM', 'auto preterminal span': (9, 15), 'span': (10, 12), 'left siblings': ['LK'], 'label': 'MF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(LK wissen)
			(MF sie)
			(NX was)
			(VF ich)
			(FKOORD
				(LKMVC rufe im reiseburo an)
				(KON und)
				(LKM
					(LK klare)
					[01;31m(NX[00m
						(NX das)
						(NX alles)[01;31m)[00m
					(LK kaufe)
					(MF die tickets)))
			(SIMPX und dann rufe ich sie noch mal an wegen dem programm im ballhaus))))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['LK', 'NX', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PDS', 'PIS', 'VVFIN', 'ART', 'NN'), 'right siblings': ['LK', 'MF'], 'parent': 'LKM', 'auto preterminal span': (9, 15), 'span': (10, 12), 'left siblings': ['LK'], 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'remove'}
(TOP wissen sie was ich rufe im reiseburo an und klare das alles kaufe die tickets und dann rufe ich sie noch mal an wegen dem programm im ballhaus)

Sentence 31:
10 Initial errors
0 on fringe, 9 iterations
2 Error:Modifier Attachment
1 Error:Co-ordination
1 Error:UNSET add
1 Error:Unary
1 Error:Modifier Attachment
1 Error:UNSET add
1 Error:Unary
1 Error:Single Word Phrase
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			[01;31m(P[00m
				(SIMPX
					(VF wir)
					(LK brauchten)
					[01;31m(MF[00m
						(ADVX vielleicht)
						(ADVX vorher)
						(ADVX noch)
						[01;31m(NX[00m
							[01;31m(ADVX[00m
								(ADV ungefahr)[01;31m)[00m
							[01;36m(NX[00m
								(ART [01;33m(SIMPX (NF[00m einen)
								(NN zug)[01;36m)[00m[01;31m)[00m[01;31m)[00m
					(NF mit dem wir zuruckfahren)) [01;33mNF) SIMPX)[00m
				(KOUS weil)
				(SIMPX
					(VF ich)
					(LK mus)
					(APPRART am)
					[01;36m(DM[00m
						(DM nee)
						(DM nee)[01;36m)[00m
					[01;31m(MF[00m
						(PX
							(PX am vierundzwanzigsten)
							(PX
								(ADVX ungefahr)
								[01;36m(PX[00m
									(APPR um)
									(NX vier uhr)[01;36m)[00m))
						(ADVX wieder)
						(ADVX hier)[01;31m)[00m
					(VC sein)
					(NF weil ich einen termin habe))[01;31m)[00m)))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['ADVX', 'ADVX', 'ADVX', 'ADVX', 'NX'], 'mover info': [('ADVX', (5, 6))], 'old_family': ['ADVX', 'ART', 'NN'], 'start left siblings': [], 'auto preterminals': ('ADV', 'ADV', 'ADV', 'ADV', 'ART', 'NN'), 'start right siblings': ['ART', 'NN'], 'end left siblings': ['ADVX', 'ADVX', 'ADVX'], 'auto preterminal span': (2, 8), 'movers': ['ADVX'], 'old_parent': 'NX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['NX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU
			[01;31m(P[00m
				(SIMPX
					(VF wir)
					(LK brauchten)
					[01;31m(MF[00m
						(ADVX vielleicht)
						(ADVX vorher)
						(ADVX noch)
						[01;31m(ADVX[00m
							(ADV ungefahr)[01;31m)[00m
						[01;33m(SIMPX (NF[00m (NX einen zug)[01;31m)[00m
					(NF mit dem wir zuruckfahren)) [01;33mNF) SIMPX)[00m
				(KOUS weil)
				(SIMPX
					(VF ich)
					(LK mus)
					(APPRART am)
					[01;36m(DM[00m
						(DM nee)
						(DM nee)[01;36m)[00m
					[01;31m(MF[00m
						(PX
							(PX am vierundzwanzigsten)
							(PX
								(ADVX ungefahr)
								[01;36m(PX[00m
									(APPR um)
									(NX vier uhr)[01;36m)[00m))
						(ADVX wieder)
						(ADVX hier)[01;31m)[00m
					(VC sein)
					(NF weil ich einen termin habe))[01;31m)[00m)))
Step:Co-ordination
{'subtrees': ['DM', 'DM'], 'family': ['VF', 'LK', 'APPRART', 'DM', 'MF', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PTKANT'), 'right siblings': [(MF (PX (PX (APPRART am) (NX (NN vierundzwanzigsten))) (PX (ADVX (ADV ungefahr)) (APPR um) (NX (ADJX (CARD vier)) (NN uhr)))) (ADVX (ADV wieder)) (ADVX (ADV hier))), (VC (VXINF (VAINF sein))), (NF (SIMPX (C (KOUS weil)) (MF (NX (PPER ich)) (NX (ART einen) (NN termin))) (VC (VXFIN (VAFIN habe)))))], 'left siblings': [(VF (NX (PPER ich))), (LK (VXFIN (VMFIN mus))), (APPRART am)], 'auto preterminal span': (16, 18), 'span': (16, 18), 'parent': 'SIMPX', 'label': 'DM', 'classified_type': 'Co-ordination', 'type': 'add'}
(TOP
	(TURN
		(SU
			[01;31m(P[00m
				(SIMPX
					(VF wir)
					(LK brauchten)
					[01;31m(MF[00m
						(ADVX vielleicht)
						(ADVX vorher)
						(ADVX noch)
						[01;31m(ADVX[00m
							(ADV ungefahr)[01;31m)[00m
						[01;33m(SIMPX (NF[00m (NX einen zug)[01;31m)[00m
					(NF mit dem wir zuruckfahren)) [01;33mNF) SIMPX)[00m
				(KOUS weil)
				(SIMPX
					(VF ich)
					(LK mus)
					(APPRART am)
					(DM nee nee)
					[01;31m(MF[00m
						(PX
							(PX am vierundzwanzigsten)
							(PX
								(ADVX ungefahr)
								[01;36m(PX[00m
									(APPR um)
									(NX vier uhr)[01;36m)[00m))
						(ADVX wieder)
						(ADVX hier)[01;31m)[00m
					(VC sein)
					(NF weil ich einen termin habe))[01;31m)[00m)))
Step:UNSET add
{'subtrees': ['APPR', 'NX'], 'family': ['ADVX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'CARD', 'NN'), 'right siblings': [], 'left siblings': [(ADVX (ADV ungefahr))], 'auto preterminal span': (21, 24), 'span': (21, 24), 'parent': 'PX', 'label': 'PX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU
			[01;31m(P[00m
				(SIMPX
					(VF wir)
					(LK brauchten)
					[01;31m(MF[00m
						(ADVX vielleicht)
						(ADVX vorher)
						(ADVX noch)
						[01;31m(ADVX[00m
							(ADV ungefahr)[01;31m)[00m
						[01;33m(SIMPX (NF[00m (NX einen zug)[01;31m)[00m
					(NF mit dem wir zuruckfahren)) [01;33mNF) SIMPX)[00m
				(KOUS weil)
				(SIMPX
					(VF ich)
					(LK mus)
					(APPRART am)
					(DM nee nee)
					[01;31m(MF[00m
						(PX am vierundzwanzigsten ungefahr um vier uhr)
						(ADVX wieder)
						(ADVX hier)[01;31m)[00m
					(VC sein)
					(NF weil ich einen termin habe))[01;31m)[00m)))
Step:Unary
{'subtrees': ['SIMPX', 'KOUS', 'SIMPX'], 'family': ['P'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'ADV', 'ADV', 'ADV', 'ART', 'NN', 'APPR', 'PRELS', 'PPER', 'VVFIN', 'KOUS', 'PPER', 'VMFIN', 'APPRART', 'PTKANT', 'PTKANT', 'APPRART', 'NN', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'ADV', 'VAINF', 'KOUS', 'PPER', 'ART', 'NN', 'VAFIN'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (0, 32), 'span': (0, 32), 'left siblings': [], 'label': 'P', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(SIMPX
				(VF wir)
				(LK brauchten)
				[01;31m(MF[00m
					(ADVX vielleicht)
					(ADVX vorher)
					(ADVX noch)
					[01;31m(ADVX[00m
						(ADV ungefahr)[01;31m)[00m
					[01;33m(SIMPX (NF[00m (NX einen zug)[01;31m)[00m
				(NF mit dem wir zuruckfahren)) [01;33mNF) SIMPX)[00m
			(KOUS weil)
			(SIMPX
				(VF ich)
				(LK mus)
				(APPRART am)
				(DM nee nee)
				[01;31m(MF[00m
					(PX am vierundzwanzigsten ungefahr um vier uhr)
					(ADVX wieder)
					(ADVX hier)[01;31m)[00m
				(VC sein)
				(NF weil ich einen termin habe)))))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'ADVX', 'ADVX', 'ADVX', 'NX'], 'family': ['VF', 'LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'ADV', 'ADV', 'ADV', 'ART', 'NN', 'APPR', 'PRELS', 'PPER', 'VVFIN'), 'right siblings': ['NF'], 'parent': 'SIMPX', 'auto preterminal span': (0, 12), 'span': (2, 8), 'left siblings': ['VF', 'LK'], 'label': 'MF', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(SIMPX
				(VF wir)
				(LK brauchten)
				(ADVX vielleicht)
				(ADVX vorher)
				(ADVX noch)
				[01;31m(ADVX[00m
					(ADV ungefahr)[01;31m)[00m
				[01;36m(NF[00m
					[01;36m(SIMPX[00m
						(NX einen zug)
						(NF mit dem wir zuruckfahren)[01;36m)[00m[01;36m)[00m)
			(KOUS weil)
			(SIMPX
				(VF ich)
				(LK mus)
				(APPRART am)
				(DM nee nee)
				[01;31m(MF[00m
					(PX am vierundzwanzigsten ungefahr um vier uhr)
					(ADVX wieder)
					(ADVX hier)[01;31m)[00m
				(VC sein)
				(NF weil ich einen termin habe)))))
Step:UNSET add
{'subtrees': ['NX', 'NF'], 'family': ['VF', 'LK', 'ADVX', 'ADVX', 'ADVX', 'ADVX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'APPR', 'PRELS', 'PPER', 'VVFIN'), 'right siblings': [], 'left siblings': [(VF (NX (PPER wir))), (LK (VXFIN (VVFIN brauchten))), (ADVX (ADV vielleicht)), (ADVX (ADV vorher)), (ADVX (ADV noch)), (ADVX (ADV ungefahr))], 'auto preterminal span': (6, 12), 'span': (6, 12), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU
			(SIMPX
				(VF wir)
				(LK brauchten)
				(ADVX vielleicht)
				(ADVX vorher)
				(ADVX noch)
				[01;31m(ADVX[00m
					(ADV ungefahr)[01;31m)[00m
				[01;36m(NF[00m
					(SIMPX
						(NX einen zug)
						(NF mit dem wir zuruckfahren))[01;36m)[00m)
			(KOUS weil)
			(SIMPX
				(VF ich)
				(LK mus)
				(APPRART am)
				(DM nee nee)
				[01;31m(MF[00m
					(PX am vierundzwanzigsten ungefahr um vier uhr)
					(ADVX wieder)
					(ADVX hier)[01;31m)[00m
				(VC sein)
				(NF weil ich einen termin habe)))))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['VF', 'LK', 'ADVX', 'ADVX', 'ADVX', 'ADVX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'APPR', 'PRELS', 'PPER', 'VVFIN'), 'right siblings': [], 'left siblings': [(VF (NX (PPER wir))), (LK (VXFIN (VVFIN brauchten))), (ADVX (ADV vielleicht)), (ADVX (ADV vorher)), (ADVX (ADV noch)), (ADVX (ADV ungefahr))], 'auto preterminal span': (6, 12), 'span': (6, 12), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU
			(SIMPX
				(VF wir)
				(LK brauchten)
				(ADVX vielleicht)
				(ADVX vorher)
				(ADVX noch)
				[01;31m(ADVX[00m
					(ADV ungefahr)[01;31m)[00m
				(NF einen zug mit dem wir zuruckfahren))
			(KOUS weil)
			(SIMPX
				(VF ich)
				(LK mus)
				(APPRART am)
				(DM nee nee)
				[01;31m(MF[00m
					(PX am vierundzwanzigsten ungefahr um vier uhr)
					(ADVX wieder)
					(ADVX hier)[01;31m)[00m
				(VC sein)
				(NF weil ich einen termin habe)))))
Step:Single Word Phrase
{'subtrees': ['ADV'], 'family': ['VF', 'LK', 'ADVX', 'ADVX', 'ADVX', 'ADVX', 'NF'], 'over_word': True, 'over words': True, 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'ADV', 'ADV', 'ADV', 'ART', 'NN', 'APPR', 'PRELS', 'PPER', 'VVFIN'), 'right siblings': ['NF'], 'parent': 'SIMPX', 'auto preterminal span': (0, 12), 'span': (5, 6), 'left siblings': ['VF', 'LK', 'ADVX', 'ADVX', 'ADVX'], 'label': 'ADVX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(SIMPX wir brauchten vielleicht vorher noch ungefahr einen zug mit dem wir zuruckfahren)
			(KOUS weil)
			(SIMPX
				(VF ich)
				(LK mus)
				(APPRART am)
				(DM nee nee)
				[01;31m(MF[00m
					(PX am vierundzwanzigsten ungefahr um vier uhr)
					(ADVX wieder)
					(ADVX hier)[01;31m)[00m
				(VC sein)
				(NF weil ich einen termin habe)))))
Step:Modifier Attachment
{'subtrees': ['PX', 'ADVX', 'ADVX'], 'family': ['VF', 'LK', 'APPRART', 'DM', 'MF', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VMFIN', 'APPRART', 'PTKANT', 'PTKANT', 'APPRART', 'NN', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'ADV', 'VAINF', 'KOUS', 'PPER', 'ART', 'NN', 'VAFIN'), 'right siblings': ['VC', 'NF'], 'parent': 'SIMPX', 'auto preterminal span': (13, 32), 'span': (18, 26), 'left siblings': ['VF', 'LK', 'APPRART', 'DM'], 'label': 'MF', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP wir brauchten vielleicht vorher noch ungefahr einen zug mit dem wir zuruckfahren weil ich mus am nee nee am vierundzwanzigsten ungefahr um vier uhr wieder hier sein weil ich einen termin habe)

Sentence 32:
7 Initial errors
0 on fringe, 5 iterations
2 Error:Single Word Phrase
2 Error:PP Attachment
1 Error:PP Attachment
1 Error:UNSET add
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(SIMPX
				(VF ich)
				(LK sehe)
				(MF grade)
				(NF
					(SIMPX
						(VF ab hannover)
						(LK geht)
						[01;31m(MF[00m
							[01;36m(MF[00m
								(ADJX stundlich)
								(NX ein zug)[01;36m)[00m
							[01;36m(VC[00m [01;31m(ADVX[00m
								(ADV zuruck)[01;31m)[00m[01;36m)[00m
							[01;33m(PX[00m (PX von bonn)[01;31m)[00m
						[01;31m(NF[00m
							(PX
								(ADVX immer)
								[01;36m(PX[00m
									(APPR um)
									(NX achtundfunfzig)[01;36m)[00m)[01;31m)[00m)))))) [01;33mPX)[00m
Step:Single Word Phrase
{'family': ['ADJX', 'NX', 'VC', 'PX'], 'auto preterminal span': (9, 10), 'span': (9, 10), 'subtrees': ['ADV'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'VC')}
(TOP
	(TURN
		(SU
			(SIMPX
				(VF ich)
				(LK sehe)
				(MF grade)
				(NF
					(SIMPX
						(VF ab hannover)
						(LK geht)
						[01;31m(MF[00m
							[01;36m(MF[00m
								(ADJX stundlich)
								(NX ein zug)[01;36m)[00m
							(VC zuruck)
							[01;33m(PX[00m (PX von bonn)[01;31m)[00m
						[01;31m(NF[00m
							(PX
								(ADVX immer)
								[01;36m(PX[00m
									(APPR um)
									(NX achtundfunfzig)[01;36m)[00m)[01;31m)[00m)))))) [01;33mPX)[00m
Step:PP Attachment
{'new_parent': 'NF', 'new_family': ['VC', 'PX', 'PX'], 'mover info': [('VC', (9, 10)), ('PX', (10, 12))], 'old_family': ['ADJX', 'NX', 'VC', 'PX'], 'start left siblings': ['ADJX', 'NX'], 'auto preterminals': ('APPR', 'NE', 'VVFIN', 'ADJD', 'ART', 'NN', 'ADV', 'APPR', 'NE', 'ADV', 'APPR', 'CARD'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (3, 15), 'movers': ['VC', 'PX'], 'old_parent': 'MF', 'end right siblings': ['PX'], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU
			(SIMPX
				(VF ich)
				(LK sehe)
				(MF grade)
				(NF
					(SIMPX
						(VF ab hannover)
						(LK geht)
						(MF stundlich ein zug)
						[01;31m(NF[00m
							(VC zuruck)
							[01;36m(PX[00m
								(PX von bonn)
								(PX
									(ADVX immer)
									[01;36m(PX[00m
										(APPR um)
										(NX achtundfunfzig)[01;36m)[00m)[01;36m)[00m[01;31m)[00m))))))
Step:PP Attachment
{'subtrees': ['PX', 'PX'], 'family': ['VC', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'NE', 'ADV', 'APPR', 'CARD'), 'right siblings': [], 'left siblings': [(VC (ADV zuruck))], 'auto preterminal span': (10, 15), 'span': (10, 15), 'parent': 'NF', 'label': 'PX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU
			(SIMPX
				(VF ich)
				(LK sehe)
				(MF grade)
				(NF
					(SIMPX
						(VF ab hannover)
						(LK geht)
						(MF stundlich ein zug)
						[01;31m(NF[00m
							(VC zuruck)
							(PX
								(PX von bonn)
								(PX
									(ADVX immer)
									[01;36m(PX[00m
										(APPR um)
										(NX achtundfunfzig)[01;36m)[00m))[01;31m)[00m))))))
Step:UNSET add
{'subtrees': ['APPR', 'NX'], 'family': ['ADVX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'CARD'), 'right siblings': [], 'left siblings': [(ADVX (ADV immer))], 'auto preterminal span': (13, 15), 'span': (13, 15), 'parent': 'PX', 'label': 'PX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU
			(SIMPX
				(VF ich)
				(LK sehe)
				(MF grade)
				(NF
					(SIMPX
						(VF ab hannover)
						(LK geht)
						(MF stundlich ein zug)
						[01;31m(NF[00m
							(VC zuruck)
							(PX von bonn immer um achtundfunfzig)[01;31m)[00m))))))
Step:PP Attachment
{'subtrees': ['VC', 'PX'], 'family': ['VF', 'LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'NE', 'VVFIN', 'ADJD', 'ART', 'NN', 'ADV', 'APPR', 'NE', 'ADV', 'APPR', 'CARD'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (3, 15), 'span': (9, 15), 'left siblings': ['VF', 'LK', 'MF'], 'label': 'NF', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP ich sehe grade ab hannover geht stundlich ein zug zuruck von bonn immer um achtundfunfzig)

Sentence 33:
4 Initial errors
0 on fringe, 2 iterations
2 Error:Different label
2 Error:UNSET move
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM ja)
			[01;31m(SIMPX[00m
				[01;36m(SIMPX[00m
					(LK konnen)
					(MF sie ja gleich ein doppelzimmer)
					(VC nehmen)[01;36m)[00m
				[01;36m(DM[00m [01;31m(NF[00m
					(NX
						(NN frau)
						(NE schmidt))[01;31m)[00m[01;36m)[00m[01;31m)[00m
			(DM oder))))
Step:Different label
{'family': ['LK', 'MF', 'VC', 'DM'], 'auto preterminal span': (8, 10), 'span': (8, 10), 'subtrees': ['NX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('NN', 'NE'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('NF', 'DM')}
(TOP
	(TURN
		(SU
			(DM ja)
			[01;31m(SIMPX[00m
				[01;36m(SIMPX[00m
					(LK konnen)
					(MF sie ja gleich ein doppelzimmer)
					(VC nehmen)[01;36m)[00m
				(DM frau schmidt)[01;31m)[00m
			(DM oder))))
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['DM', 'SIMPX', 'DM', 'DM'], 'mover info': [('DM', (8, 10))], 'old_family': ['LK', 'MF', 'VC', 'DM'], 'start left siblings': ['LK', 'MF', 'VC'], 'auto preterminals': ('PTKANT', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'NN', 'VVINF', 'NN', 'NE', 'ITJ'), 'start right siblings': [], 'end left siblings': ['DM', 'SIMPX'], 'auto preterminal span': (0, 11), 'movers': ['DM'], 'old_parent': 'SIMPX', 'end right siblings': ['DM'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP ja konnen sie ja gleich ein doppelzimmer nehmen frau schmidt oder)

Sentence 34:
0 Initial errors
0 on fringe, 0 iterations

Sentence 35:
0 Initial errors
0 on fringe, 0 iterations

Sentence 36:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			[01;36m(NX[00m
				(DM
					(ITJ tschus))[01;36m)[00m
			(DM frau meurer))))
Step:Unary
{'subtrees': ['DM'], 'family': ['NX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ',), 'right siblings': [(DM (NX (NN frau) (NE meurer)))], 'left siblings': [], 'auto preterminal span': (0, 1), 'span': (0, 1), 'parent': 'SU', 'label': 'NX', 'classified_type': 'Unary', 'type': 'add'}
(TOP tschus frau meurer)

Sentence 37:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			[01;36m(NX[00m
				(DM
					(ITJ tschus))[01;36m)[00m
			(DM frau fischenbeck))))
Step:Unary
{'subtrees': ['DM'], 'family': ['NX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ',), 'right siblings': [(DM (NX (NN frau) (NE fischenbeck)))], 'left siblings': [], 'auto preterminal span': (0, 1), 'span': (0, 1), 'parent': 'SU', 'label': 'NX', 'classified_type': 'Unary', 'type': 'add'}
(TOP tschus frau fischenbeck)

Sentence 38:
1 Initial errors
0 on fringe, 1 iterations
1 Error:UNSET add
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM ha)
			[01;36m(SIMPX[00m
				(SIMPX wenn es denn sein soll)
				(DM okay)[01;36m)[00m)))
Step:UNSET add
{'subtrees': ['SIMPX', 'DM'], 'family': ['DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'VAINF', 'VMFIN', 'ITJ'), 'right siblings': [], 'left siblings': [(DM (ITJ ha))], 'auto preterminal span': (1, 7), 'span': (1, 7), 'parent': 'SU', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP ha wenn es denn sein soll okay)

Sentence 39:
0 Initial errors
0 on fringe, 0 iterations

Sentence 40:
0 Initial errors
0 on fringe, 0 iterations

Sentence 41:
0 Initial errors
0 on fringe, 0 iterations

Sentence 42:
0 Initial errors
0 on fringe, 0 iterations

Sentence 43:
0 Initial errors
0 on fringe, 0 iterations

Sentence 44:
0 Initial errors
0 on fringe, 0 iterations

Sentence 45:
0 Initial errors
0 on fringe, 0 iterations

Sentence 46:
8 Initial errors
0 on fringe, 5 iterations
2 Error:Different label
2 Error:Different label
2 Error:UNSET move
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SIMPX[00m
	(TOP
		(TURN
			(SU
				[01;36m(PX[00m [01;36m(VF[00m [01;31m(ADJX[00m
					(PX am zehnten juli)
					[01;36m(VF[00m [01;36m(PX[00m [01;31m(ADJX[00m
						(PX von hannover)
						(ADVX zuruck)[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m
				[01;31m(SIMPX[00m
					(LK ginge)
					(MF das denn dann ab achtzehn uhr)[01;31m)[00m)))[01;36m)[00m
Step:Different label
{'family': ['VF', 'SIMPX'], 'auto preterminal span': (0, 6), 'span': (0, 6), 'subtrees': ['PX', 'ADJX'], 'parent': 'SU', 'over_word': False, 'auto preterminals': ('APPRART', 'ADJA', 'NN', 'APPR', 'NE', 'ADV'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('ADJX', 'VF')}
[01;36m(SIMPX[00m
	(TOP
		(TURN
			(SU
				[01;36m(PX[00m
					(VF
						(PX am zehnten juli)
						[01;36m(VF[00m [01;36m(PX[00m [01;31m(ADJX[00m
							(PX von hannover)
							(ADVX zuruck)[01;31m)[00m[01;36m)[00m[01;36m)[00m)[01;36m)[00m
				[01;31m(SIMPX[00m
					(LK ginge)
					(MF das denn dann ab achtzehn uhr)[01;31m)[00m)))[01;36m)[00m
Step:Different label
{'family': ['PX', 'PX'], 'auto preterminal span': (3, 6), 'span': (3, 6), 'subtrees': ['PX', 'ADVX'], 'parent': 'VF', 'over_word': False, 'auto preterminals': ('APPR', 'NE', 'ADV'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('ADJX', 'PX')}
[01;36m(SIMPX[00m
	(TOP
		(TURN
			(SU
				[01;36m(PX[00m
					(VF
						(PX am zehnten juli)
						[01;36m(VF[00m
							(PX
								(PX von hannover)
								(ADVX zuruck))[01;36m)[00m)[01;36m)[00m
				[01;31m(SIMPX[00m
					(LK ginge)
					(MF das denn dann ab achtzehn uhr)[01;31m)[00m)))[01;36m)[00m
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF'], 'mover info': [('VF', (0, 6))], 'old_family': ['VF', 'SIMPX'], 'start left siblings': [], 'auto preterminals': ('APPRART', 'ADJA', 'NN', 'APPR', 'NE', 'ADV', 'VVFIN', 'PDS', 'ADV', 'ADV', 'APPR', 'CARD', 'NN'), 'start right siblings': ['SIMPX'], 'end left siblings': [], 'auto preterminal span': (0, 13), 'movers': ['VF'], 'old_parent': 'SU', 'end right siblings': ['LK', 'MF'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			(SIMPX
				[01;36m(PX[00m
					(VF
						(PX am zehnten juli)
						[01;36m(VF[00m
							(PX
								(PX von hannover)
								(ADVX zuruck))[01;36m)[00m)[01;36m)[00m
				(LK ginge)
				(MF das denn dann ab achtzehn uhr)))))
Step:Unary
{'subtrees': ['VF'], 'family': ['PX', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'ADJA', 'NN', 'APPR', 'NE', 'ADV'), 'right siblings': [(LK (VXFIN (VVFIN ginge))), (MF (NX (PDS das)) (ADVX (ADV denn)) (ADVX (ADV dann)) (PX (APPR ab) (NX (ADJX (CARD achtzehn)) (NN uhr))))], 'left siblings': [], 'auto preterminal span': (0, 6), 'span': (0, 6), 'parent': 'SIMPX', 'label': 'PX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU
			(SIMPX
				(PX
					(VF
						(PX am zehnten juli)
						[01;36m(VF[00m
							(PX
								(PX von hannover)
								(ADVX zuruck))[01;36m)[00m))
				(LK ginge)
				(MF das denn dann ab achtzehn uhr)))))
Step:Unary
{'subtrees': ['PX'], 'family': ['PX', 'VF'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'NE', 'ADV'), 'right siblings': [], 'left siblings': [(PX (APPRART am) (NX (ADJX (ADJA zehnten)) (NN juli)))], 'auto preterminal span': (3, 6), 'span': (3, 6), 'parent': 'VF', 'label': 'VF', 'classified_type': 'Unary', 'type': 'add'}
(TOP am zehnten juli von hannover zuruck ginge das denn dann ab achtzehn uhr)

Sentence 47:
0 Initial errors
0 on fringe, 0 iterations

Sentence 48:
0 Initial errors
0 on fringe, 0 iterations

Sentence 49:
0 Initial errors
0 on fringe, 0 iterations

Sentence 50:
0 Initial errors
0 on fringe, 0 iterations

Sentence 51:
8 Initial errors
0 on fringe, 4 iterations
3 Error:NP Attachment
2 Error:Different label
2 Error:Modifier Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM also)
			(SIMPX
				(VF es)
				(LK ware)
				[01;31m(MF[00m [01;33m(MF[00m
					(ADVX ja)
					[01;31m(ADJX[00m
						[01;31m(ADJX[00m
							(ADVX dreimal)
							[01;36m(ADJX[00m
								(ADVX so)
								(ADJD lang)[01;36m)[00m[01;31m)[00m [01;33mMF)[00m
						[01;36m(NF[00m [01;36m(SIMPX[00m [01;31m(NX[00m
							(KOKOM wie)
							(NN fliegen)[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m))))
Step:NP Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'NX'], 'mover info': [('NX', (7, 9))], 'old_family': ['ADJX', 'NX'], 'start left siblings': ['ADJX'], 'auto preterminals': ('PPER', 'VAFIN', 'ADV', 'ADV', 'ADV', 'ADJD', 'KOKOM', 'NN'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (1, 9), 'movers': ['NX'], 'old_parent': 'ADJX', 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU
			(DM also)
			(SIMPX
				(VF es)
				(LK ware)
				(MF
					(ADVX ja)
					[01;31m(ADJX[00m
						(ADVX dreimal)
						[01;36m(ADJX[00m
							(ADVX so)
							(ADJD lang)[01;36m)[00m[01;31m)[00m)
				[01;36m(NF[00m [01;36m(SIMPX[00m [01;31m(NX[00m
					(KOKOM wie)
					(NN fliegen)[01;31m)[00m[01;36m)[00m[01;36m)[00m))))
Step:Different label
{'family': ['VF', 'LK', 'MF', 'SIMPX'], 'auto preterminal span': (7, 9), 'span': (7, 9), 'subtrees': ['KOKOM', 'NN'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('KOKOM', 'NN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('NX', 'SIMPX')}
(TOP
	(TURN
		(SU
			(DM also)
			(SIMPX
				(VF es)
				(LK ware)
				(MF
					(ADVX ja)
					[01;31m(ADJX[00m
						(ADVX dreimal)
						[01;36m(ADJX[00m
							(ADVX so)
							(ADJD lang)[01;36m)[00m[01;31m)[00m)
				[01;36m(NF[00m
					(SIMPX
						(KOKOM wie)
						(NN fliegen))[01;36m)[00m))))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['ADVX', 'ADVX', 'ADJX'], 'mover info': [('ADVX', (4, 5))], 'old_family': ['ADVX', 'ADVX', 'ADJD'], 'start left siblings': [], 'auto preterminals': ('ADV', 'ADV', 'ADV', 'ADJD'), 'start right siblings': ['ADVX', 'ADJD'], 'end left siblings': ['ADVX'], 'auto preterminal span': (3, 7), 'movers': ['ADVX'], 'old_parent': 'ADJX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['ADJX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU
			(DM also)
			(SIMPX
				(VF es)
				(LK ware)
				(MF ja dreimal so lang)
				[01;36m(NF[00m
					(SIMPX
						(KOKOM wie)
						(NN fliegen))[01;36m)[00m))))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['VF', 'LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOKOM', 'NN'), 'right siblings': [], 'left siblings': [(VF (NX (PPER es))), (LK (VXFIN (VAFIN ware))), (MF (ADVX (ADV ja)) (ADVX (ADV dreimal)) (ADJX (ADVX (ADV so)) (ADJD lang)))], 'auto preterminal span': (7, 9), 'span': (7, 9), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP also es ware ja dreimal so lang wie fliegen)

Sentence 52:
2 Initial errors
0 on fringe, 2 iterations
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM also)
			[01;36m(VF[00m
				(SIMPX
					(VF ich)
					(LK werde)
					(MF jetzt gleich noch mal)
					(VC nachgucken))[01;36m)[00m
			[01;31m(SIMPX[00m
				(LK konnte)
				(MF sie dann)
				(VC zuruckrufen)[01;31m)[00m)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['DM', 'VF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'ADV', 'ADV', 'ADV', 'ADV', 'VVINF'), 'right siblings': [(SIMPX (LK (VXFIN (VMFIN konnte))) (MF (NX (PPER sie)) (ADVX (ADV dann))) (VC (VXINF (VVINF zuruckrufen))))], 'left siblings': [(DM (ADVX (ADV also)))], 'auto preterminal span': (1, 8), 'span': (1, 8), 'parent': 'SU', 'label': 'VF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM also)
			(VF ich werde jetzt gleich noch mal nachgucken)
			[01;31m(SIMPX[00m
				(LK konnte)
				(MF sie dann)
				(VC zuruckrufen)[01;31m)[00m)))
Step:UNSET remove
{'subtrees': ['LK', 'MF', 'VC'], 'family': ['DM', 'VF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPER', 'VAFIN', 'ADV', 'ADV', 'ADV', 'ADV', 'VVINF', 'VMFIN', 'PPER', 'ADV', 'VVINF'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (0, 12), 'span': (8, 12), 'left siblings': ['DM', 'VF'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP also ich werde jetzt gleich noch mal nachgucken konnte sie dann zuruckrufen)

Sentence 53:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(PX[00m
	(TOP
		(TURN
			(SU
				(PX in zehn minuten)
				(ADVX oder so))))[01;36m)[00m
Step:Unary
{'subtrees': ['TURN'], 'family': ['PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'CARD', 'NN', 'KON', 'ADV'), 'right siblings': [], 'left siblings': [], 'auto preterminal span': (0, 5), 'span': (0, 5), 'parent': 'TOP', 'label': 'PX', 'classified_type': 'Unary', 'type': 'add'}
(TOP in zehn minuten oder so)

Sentence 54:
1 Initial errors
0 on fringe, 1 iterations
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			[01;31m(SIMPX[00m
				(LK sieht)
				(MF das mit dem hotel)
				(VC aus)[01;31m)[00m
			(SIMPX konnen sie das auch buchen fur mich))))
Step:UNSET remove
{'subtrees': ['LK', 'MF', 'VC'], 'family': ['SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PDS', 'APPR', 'ART', 'NN', 'PTKVZ', 'VMFIN', 'PPER', 'PDS', 'ADV', 'VVINF', 'APPR', 'PPER'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 13), 'span': (0, 6), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP sieht das mit dem hotel aus konnen sie das auch buchen fur mich)

Sentence 55:
4 Initial errors
0 on fringe, 2 iterations
3 Error:UNSET move
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SIMPX[00m
	(TOP
		(TURN
			(SU
				(SIMPX konnen sie sich dann bitte um den flug kummern)
				[01;31m(SIMPX[00m
					[01;31m(KOORD[00m
						(KON oder)[01;31m)[00m
					[01;36m(SIMPX[00m
						(LK wollen)
						(MF sie mit dem zug)
						(VC reisen)[01;36m)[00m[01;31m)[00m)))[01;36m)[00m
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SIMPX', 'KOORD', 'SIMPX'], 'mover info': [('KOORD', (9, 10))], 'old_family': ['KOORD', 'LK', 'MF', 'VC'], 'start left siblings': [], 'auto preterminals': ('VMFIN', 'PPER', 'PRF', 'ADV', 'PTKANT', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'VMFIN', 'PPER', 'APPR', 'ART', 'NN', 'VVINF'), 'start right siblings': ['LK', 'MF', 'VC'], 'end left siblings': ['SIMPX'], 'auto preterminal span': (0, 16), 'adding node already present': False, 'movers': ['KOORD'], 'old_parent': 'SIMPX', 'POS confusion': ('KON', 'KON'), 'added and moved': True, 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'SIMPX'}
(TOP
	(SIMPX
		(TURN
			(SU
				(SIMPX konnen sie sich dann bitte um den flug kummern)
				[01;31m(KOORD[00m
					(KON oder)[01;31m)[00m
				(SIMPX wollen sie mit dem zug reisen)))))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['SIMPX', 'KOORD', 'SIMPX'], 'over_word': True, 'over words': True, 'auto preterminals': ('VMFIN', 'PPER', 'PRF', 'ADV', 'PTKANT', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'VMFIN', 'PPER', 'APPR', 'ART', 'NN', 'VVINF'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 16), 'span': (9, 10), 'left siblings': ['SIMPX'], 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP konnen sie sich dann bitte um den flug kummern oder wollen sie mit dem zug reisen)

Sentence 56:
0 Initial errors
0 on fringe, 0 iterations

Sentence 57:
0 Initial errors
0 on fringe, 0 iterations

Sentence 58:
0 Initial errors
0 on fringe, 0 iterations

Sentence 59:
3 Initial errors
0 on fringe, 2 iterations
2 Error:PP Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX
				(KOORD und)
				(LK wissen)
				(MF sie schon)
				(NF
					(SIMPX
						[01;31m(MF[00m
							[01;36m(C[00m
								(PX
									(APPR in)
									(NX welcher preiskategorie))[01;36m)[00m
							[01;36m(MF[00m
								(NX
									(PDS das))[01;36m)[00m[01;31m)[00m
						(VC liegen sollte)))))))
Step:PP Attachment
{'new_parent': 'SIMPX', 'new_family': ['PX', 'MF', 'VC'], 'mover info': [('PX', (5, 8))], 'old_family': ['PX', 'NX'], 'start left siblings': [], 'auto preterminals': ('APPR', 'PWAT', 'NN', 'PDS', 'VVINF', 'VMFIN'), 'start right siblings': ['NX'], 'end left siblings': [], 'auto preterminal span': (5, 11), 'movers': ['PX'], 'old_parent': 'MF', 'end right siblings': ['MF', 'VC'], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX
				(KOORD und)
				(LK wissen)
				(MF sie schon)
				(NF
					(SIMPX
						[01;36m(C[00m
							(PX
								(APPR in)
								(NX welcher preiskategorie))[01;36m)[00m
						(MF das)
						(VC liegen sollte)))))))
Step:Unary
{'subtrees': ['PX'], 'family': ['C', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'PWAT', 'NN'), 'right siblings': [(MF (NX (PDS das))), (VC (VXINF (VVINF liegen)) (VXFIN (VMFIN sollte)))], 'left siblings': [], 'auto preterminal span': (5, 8), 'span': (5, 8), 'parent': 'SIMPX', 'label': 'C', 'classified_type': 'Unary', 'type': 'add'}
(TOP ja und wissen sie schon in welcher preiskategorie das liegen sollte)

Sentence 60:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM ja)
			(DM also)
			(SIMPX
				(VF es)
				(LK sollte)
				(MF
					(NX
						(NX
							(ADVX
								(ADVX so)
								[01;36m(ADVX[00m
									(ADV ungefahr)[01;36m)[00m)
							(ADJX hundert)
							(NN mark))
						(PX pro ubernachtung mit fruhstuck)))))))
Step:Single Word Phrase
{'subtrees': ['ADV'], 'family': ['ADVX', 'ADVX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADV',), 'right siblings': [], 'left siblings': [(ADVX (ADV so))], 'auto preterminal span': (5, 6), 'span': (5, 6), 'parent': 'ADVX', 'label': 'ADVX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP ja also es sollte so ungefahr hundert mark pro ubernachtung mit fruhstuck)

Sentence 61:
0 Initial errors
0 on fringe, 0 iterations

Sentence 62:
0 Initial errors
0 on fringe, 0 iterations

Sentence 63:
8 Initial errors
0 on fringe, 4 iterations
2 Error:Single Word Phrase
2 Error:Different label
2 Error:UNSET move
2 Error:UNSET move
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP [01;33m(SIMPX[00m
	(TURN
		(SU
			[01;31m(SIMPX[00m
				(VF das)
				(LK ware)
				[01;31m(MF[00m
					[01;36m(MF[00m
						(ADVX
							(ADV jetzt)) [01;33mSIMPX)[00m[01;36m)[00m
					[01;36m(DM[00m [01;31m(ADVX[00m
						(ADV ja)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
			(SIMPX
				(VF das)
				(LK ist)
				(MF das billigste)
				[01;36m(SIMPX[00m
					(NF
						[01;31m(R[00m
							(C was)
							(MF ich ihnen jetzt gerade im moment)
							(VC anbieten konnte)[01;31m)[00m)[01;36m)[00m))))
Step:Single Word Phrase
{'family': ['ADVX', 'DM'], 'auto preterminal span': (3, 4), 'span': (3, 4), 'subtrees': ['ADV'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'DM')}
(TOP [01;33m(SIMPX[00m
	(TURN
		(SU
			[01;31m(SIMPX[00m
				(VF das)
				(LK ware)
				[01;31m(MF[00m
					[01;36m(MF[00m
						(ADVX
							(ADV jetzt)) [01;33mSIMPX)[00m[01;36m)[00m
					(DM ja)[01;31m)[00m[01;31m)[00m
			(SIMPX
				(VF das)
				(LK ist)
				(MF das billigste)
				[01;36m(SIMPX[00m
					(NF
						[01;31m(R[00m
							(C was)
							(MF ich ihnen jetzt gerade im moment)
							(VC anbieten konnte)[01;31m)[00m)[01;36m)[00m))))
Step:Different label
{'family': ['SIMPX'], 'auto preterminal span': (8, 17), 'span': (8, 17), 'subtrees': ['C', 'MF', 'VC'], 'parent': 'NF', 'over_word': False, 'auto preterminals': ('PRELS', 'PPER', 'PPER', 'ADV', 'ADV', 'APPRART', 'NN', 'VVINF', 'VMFIN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('R', 'SIMPX')}
(TOP [01;33m(SIMPX[00m
	(TURN
		(SU
			[01;31m(SIMPX[00m
				(VF das)
				(LK ware)
				[01;31m(MF[00m
					[01;36m(MF[00m
						(ADVX
							(ADV jetzt)) [01;33mSIMPX)[00m[01;36m)[00m
					(DM ja)[01;31m)[00m[01;31m)[00m
			(SIMPX das ist das billigste was ich ihnen jetzt gerade im moment anbieten konnte))))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'DM'], 'mover info': [('DM', (3, 4))], 'old_family': ['ADVX', 'DM'], 'start left siblings': ['ADVX'], 'auto preterminals': ('PDS', 'VAFIN', 'ADV', 'ADV'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (0, 4), 'movers': ['DM'], 'old_parent': 'MF', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			[01;31m(SIMPX[00m
				[01;36m(SIMPX[00m
					(VF das)
					(LK ware)
					(MF jetzt)[01;36m)[00m
				(DM ja)[01;31m)[00m
			(SIMPX das ist das billigste was ich ihnen jetzt gerade im moment anbieten konnte))))
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SIMPX', 'DM', 'SIMPX'], 'mover info': [('DM', (3, 4))], 'old_family': ['VF', 'LK', 'MF', 'DM'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('PDS', 'VAFIN', 'ADV', 'ADV', 'PDS', 'VAFIN', 'ART', 'NN', 'PRELS', 'PPER', 'PPER', 'ADV', 'ADV', 'APPRART', 'NN', 'VVINF', 'VMFIN'), 'start right siblings': [], 'end left siblings': ['SIMPX'], 'auto preterminal span': (0, 17), 'movers': ['DM'], 'old_parent': 'SIMPX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP das ware jetzt ja das ist das billigste was ich ihnen jetzt gerade im moment anbieten konnte)

Sentence 64:
11 Initial errors
0 on fringe, 7 iterations
5 Error:NP Internal Structure
1 Error:Single Word Phrase
1 Error:Single Word Phrase
1 Error:PP Attachment
1 Error:Unary
1 Error:PP Attachment
1 Error:Co-ordination
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(SIMPX
				(VF das hotel)
				(LK heist)
				[01;31m(MF[00m
					[01;31m(NX[00m
						[01;31m(NX[00m
							(NX hotel)
							(PX am thielenplatz)[01;31m)[00m
						(PX [01;33m(PX[00m
							(APPR mit)
							[01;31m(NX[00m [01;33m(NX[00m
								[01;31m(NX[00m
									[01;36m(ADVX[00m
										(BS t)[01;36m)[00m
									(BS h)[01;31m)[00m
								(KON und)
								[01;31m(NX[00m
									[01;36m(NX[00m
										(BS i) [01;33mNX) PX)[00m[01;36m)[00m
									[01;36m(ADJX[00m
										(BS e)[01;36m)[00m[01;31m)[00m[01;31m)[00m)[01;31m)[00m[01;31m)[00m))))
Step:NP Internal Structure
{'new_parent': 'NX', 'new_family': ['NX', 'PX', 'BS'], 'mover info': [('BS', (11, 12))], 'old_family': ['BS', 'BS'], 'start left siblings': ['BS'], 'auto preterminals': ('NN', 'APPRART', 'NE', 'APPR', 'BS', 'BS', 'KON', 'BS', 'BS'), 'start right siblings': [], 'end left siblings': ['NX', 'PX'], 'auto preterminal span': (3, 12), 'adding node already present': False, 'movers': ['BS'], 'old_parent': 'NX', 'POS confusion': ('BS', 'BS'), 'added and moved': True, 'end right siblings': [], 'classified_type': 'NP Internal Structure', 'type': 'move', 'added label': 'ADJX'}
(TOP
	(TURN
		(SU
			(SIMPX
				(VF das hotel)
				(LK heist)
				[01;31m(MF[00m
					[01;31m(NX[00m
						[01;31m(NX[00m
							(NX hotel)
							(PX am thielenplatz)[01;31m)[00m
						(PX
							(PX
								(APPR mit)
								(NX
									[01;31m(NX[00m
										[01;36m(ADVX[00m
											(BS t)[01;36m)[00m
										(BS h)[01;31m)[00m
									(KON und)
									(NX i)))
							[01;36m(ADJX[00m
								(BS e)[01;36m)[00m)[01;31m)[00m[01;31m)[00m))))
Step:Single Word Phrase
{'subtrees': ['BS'], 'family': ['ADVX', 'BS'], 'over_word': True, 'over words': True, 'auto preterminals': ('BS',), 'right siblings': [(BS h)], 'left siblings': [], 'auto preterminal span': (7, 8), 'span': (7, 8), 'parent': 'NX', 'label': 'ADVX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SU
			(SIMPX
				(VF das hotel)
				(LK heist)
				[01;31m(MF[00m
					[01;31m(NX[00m
						[01;31m(NX[00m
							(NX hotel)
							(PX am thielenplatz)[01;31m)[00m
						(PX
							(PX
								(APPR mit)
								(NX
									[01;31m(NX[00m
										(ADVX t)
										(BS h)[01;31m)[00m
									(KON und)
									(NX i)))
							[01;36m(ADJX[00m
								(BS e)[01;36m)[00m)[01;31m)[00m[01;31m)[00m))))
Step:Single Word Phrase
{'subtrees': ['BS'], 'family': ['PX', 'ADJX'], 'over_word': True, 'over words': True, 'auto preterminals': ('BS',), 'right siblings': [], 'left siblings': [(PX (APPR mit) (NX (NX (ADVX (BS t)) (BS h)) (KON und) (NX (BS i))))], 'auto preterminal span': (11, 12), 'span': (11, 12), 'parent': 'PX', 'label': 'ADJX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SU
			(SIMPX
				(VF das hotel)
				(LK heist)
				[01;31m(MF[00m
					[01;31m(NX[00m
						[01;31m(NX[00m
							(NX hotel)
							(PX am thielenplatz)[01;31m)[00m
						(PX
							(PX
								(APPR mit)
								(NX
									[01;31m(NX[00m
										(ADVX t)
										(BS h)[01;31m)[00m
									(KON und)
									(NX i)))
							(ADJX e))[01;31m)[00m[01;31m)[00m))))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'APPRART', 'NE', 'APPR', 'BS', 'BS', 'KON', 'BS', 'BS'), 'right siblings': ['PX'], 'parent': 'NX', 'auto preterminal span': (3, 12), 'span': (3, 6), 'left siblings': [], 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(SIMPX
				(VF das hotel)
				(LK heist)
				[01;31m(MF[00m
					[01;31m(NX[00m
						(NX hotel)
						(PX am thielenplatz)
						(PX
							(PX
								(APPR mit)
								(NX
									[01;31m(NX[00m
										(ADVX t)
										(BS h)[01;31m)[00m
									(KON und)
									(NX i)))
							(ADJX e))[01;31m)[00m[01;31m)[00m))))
Step:Unary
{'subtrees': ['NX', 'PX', 'PX'], 'family': ['NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'APPRART', 'NE', 'APPR', 'BS', 'BS', 'KON', 'BS', 'BS'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (3, 12), 'span': (3, 12), 'left siblings': [], 'label': 'NX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(SIMPX
				(VF das hotel)
				(LK heist)
				[01;31m(MF[00m
					(NX hotel)
					(PX am thielenplatz)
					(PX
						(PX
							(APPR mit)
							(NX
								[01;31m(NX[00m
									(ADVX t)
									(BS h)[01;31m)[00m
								(KON und)
								(NX i)))
						(ADJX e))[01;31m)[00m))))
Step:PP Attachment
{'subtrees': ['NX', 'PX', 'PX'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'VVFIN', 'NN', 'APPRART', 'NE', 'APPR', 'BS', 'BS', 'KON', 'BS', 'BS'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (0, 12), 'span': (3, 12), 'left siblings': ['VF', 'LK'], 'label': 'MF', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(SIMPX
				(VF das hotel)
				(LK heist)
				(NX hotel)
				(PX am thielenplatz)
				(PX
					(PX
						(APPR mit)
						(NX
							[01;31m(NX[00m
								(ADVX t)
								(BS h)[01;31m)[00m
							(KON und)
							(NX i)))
					(ADJX e))))))
Step:Co-ordination
{'subtrees': ['ADVX', 'BS'], 'family': ['NX', 'KON', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('BS', 'BS', 'KON', 'BS'), 'right siblings': ['KON', 'NX'], 'parent': 'NX', 'auto preterminal span': (7, 11), 'span': (7, 9), 'left siblings': [], 'label': 'NX', 'classified_type': 'Co-ordination', 'type': 'remove'}
(TOP das hotel heist hotel am thielenplatz mit t h und i e)

Sentence 65:
3 Initial errors
0 on fringe, 2 iterations
2 Error:Modifier Attachment
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM also)
			(SIMPX
				(LK soll)
				(MF
					(NX ich)
					(ADVX jetzt)
					(PX fur sie)
					[01;36m(NX[00m
						(NX den flug vom kolnbonner flughafen)
						(PX am siebten juli)[01;36m)[00m)
				(VC buchen)
				(NF um sieben uhr zehn))
			(SIMPX sie sind dann um acht uhr zehn in hannover)
			(SIMPX
				(KOORD und)
				(VF dann)
				(LK informiere)
				(MF ich mich noch)
				(NF
					(SIMPX
						(C ob)
						(MF
							(NX sie)
							[01;31m(PX[00m
								(ADVX abends)
								[01;36m(PX[00m
									(APPRART am)
									(NX zehnten juli)[01;36m)[00m[01;31m)[00m)
						(VC zuruckfliegen konnten)))))))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'ADVX', 'PX'], 'mover info': [('ADVX', (36, 37))], 'old_family': ['ADVX', 'APPRART', 'NX'], 'start left siblings': [], 'auto preterminals': ('PPER', 'ADV', 'APPRART', 'ADJA', 'NN'), 'start right siblings': ['APPRART', 'NX'], 'end left siblings': ['NX'], 'auto preterminal span': (35, 40), 'movers': ['ADVX'], 'old_parent': 'PX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['PX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU
			(DM also)
			(SIMPX
				(LK soll)
				(MF
					(NX ich)
					(ADVX jetzt)
					(PX fur sie)
					[01;36m(NX[00m
						(NX den flug vom kolnbonner flughafen)
						(PX am siebten juli)[01;36m)[00m)
				(VC buchen)
				(NF um sieben uhr zehn))
			(SIMPX sie sind dann um acht uhr zehn in hannover)
			(SIMPX und dann informiere ich mich noch ob sie abends am zehnten juli zuruckfliegen konnten))))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['NX', 'ADVX', 'PX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'APPRART', 'ADJA', 'NN', 'APPRART', 'ADJA', 'NN'), 'right siblings': [], 'left siblings': [(NX (PPER ich)), (ADVX (ADV jetzt)), (PX (APPR fur) (NX (PPER sie)))], 'auto preterminal span': (6, 14), 'span': (6, 14), 'parent': 'MF', 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP also soll ich jetzt fur sie den flug vom kolnbonner flughafen am siebten juli buchen um sieben uhr zehn sie sind dann um acht uhr zehn in hannover und dann informiere ich mich noch ob sie abends am zehnten juli zuruckfliegen konnten)

Sentence 66:
0 Initial errors
0 on fringe, 0 iterations

Sentence 67:
4 Initial errors
0 on fringe, 3 iterations
2 Error:Different label
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(SIMPX
				(LK gucke)
				(MF ich dann)
				(NF
					(SIMPX
						[01;31m(SIMPX[00m
							(C wie)
							(MF das)
							(VC funktioniert)
							[01;36m(MF[00m [01;31m(NF[00m
								(PX
									(APPR mit)
									(NX dem hotel))[01;31m)[00m[01;36m)[00m[01;31m)[00m
						[01;36m(NF[00m
							(SIMPX
								(C ob)
								(MF noch was frei)
								(VC ist))[01;36m)[00m))))))
Step:Different label
{'family': ['C', 'MF', 'VC', 'MF'], 'auto preterminal span': (6, 9), 'span': (6, 9), 'subtrees': ['PX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('APPR', 'ART', 'NN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('NF', 'MF')}
(TOP
	(TURN
		(SU
			(SIMPX
				(LK gucke)
				(MF ich dann)
				(NF
					(SIMPX
						[01;31m(SIMPX[00m
							(C wie)
							(MF das)
							(VC funktioniert)
							(MF mit dem hotel)[01;31m)[00m
						[01;36m(NF[00m
							(SIMPX
								(C ob)
								(MF noch was frei)
								(VC ist))[01;36m)[00m))))))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SIMPX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'ADV', 'PIS', 'ADJD', 'VAFIN'), 'right siblings': [], 'left siblings': [(SIMPX (C (KOUS wie)) (MF (NX (PDS das))) (VC (VXFIN (VVFIN funktioniert))) (MF (PX (APPR mit) (NX (ART dem) (NN hotel)))))], 'auto preterminal span': (9, 14), 'span': (9, 14), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU
			(SIMPX
				(LK gucke)
				(MF ich dann)
				(NF
					(SIMPX
						[01;31m(SIMPX[00m
							(C wie)
							(MF das)
							(VC funktioniert)
							(MF mit dem hotel)[01;31m)[00m
						(NF ob noch was frei ist)))))))
Step:UNSET remove
{'subtrees': ['C', 'MF', 'VC', 'MF'], 'family': ['SIMPX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PDS', 'VVFIN', 'APPR', 'ART', 'NN', 'KOUS', 'ADV', 'PIS', 'ADJD', 'VAFIN'), 'right siblings': ['NF'], 'parent': 'SIMPX', 'auto preterminal span': (3, 14), 'span': (3, 9), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP gucke ich dann wie das funktioniert mit dem hotel ob noch was frei ist)

Sentence 68:
0 Initial errors
0 on fringe, 0 iterations

Sentence 69:
0 Initial errors
0 on fringe, 0 iterations

Sentence 70:
0 Initial errors
0 on fringe, 0 iterations

Sentence 71:
0 Initial errors
0 on fringe, 0 iterations

Sentence 72:
3 Initial errors
0 on fringe, 3 iterations
1 Error:Co-ordination
1 Error:UNSET add
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM hallo)
			(DM frau offergeld)
			(SIMPX
				(VF wie)
				(LK machen)
				(MF wir das denn jetzt)
				(NF
					(SIMPX
						(C wenn)
						[01;31m(FKOORD[00m
							[01;31m(MVC[00m
								(MF wir im am ersten juliwochenende nach hannover)
								[01;33m(VC[00m (VC fliegen wollen)[01;31m)[00m
							(KON oder)
							(MVC nach hannover fahren wollen)[01;31m)[00m)))))) [01;33mVC)[00m
Step:Co-ordination
{'subtrees': ['MF', 'VC'], 'family': ['MVC', 'KON', 'MVC'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'APPRART', 'APPRART', 'ADJA', 'NN', 'APPR', 'NE', 'VVINF', 'VMFIN', 'KON', 'APPR', 'NE', 'VVINF', 'VMFIN'), 'right siblings': ['KON', 'MVC'], 'parent': 'FKOORD', 'auto preterminal span': (10, 24), 'span': (10, 19), 'left siblings': [], 'label': 'MVC', 'classified_type': 'Co-ordination', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM hallo)
			(DM frau offergeld)
			(SIMPX
				(VF wie)
				(LK machen)
				(MF wir das denn jetzt)
				(NF
					(SIMPX
						(C wenn)
						[01;31m(FKOORD[00m
							(MF wir im am ersten juliwochenende nach hannover)
							[01;36m(VC[00m
								(VC fliegen wollen)
								(KON oder)
								(MVC nach hannover fahren wollen)[01;36m)[00m[01;31m)[00m))))))
Step:UNSET add
{'subtrees': ['VC', 'KON', 'MVC'], 'family': ['MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVINF', 'VMFIN', 'KON', 'APPR', 'NE', 'VVINF', 'VMFIN'), 'right siblings': [], 'left siblings': [(MF (NX (PPER wir)) (APPRART im) (PX (APPRART am) (NX (ADJX (ADJA ersten)) (NN juliwochenende))) (PX (APPR nach) (NX (NE hannover))))], 'auto preterminal span': (17, 24), 'span': (17, 24), 'parent': 'FKOORD', 'label': 'VC', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM hallo)
			(DM frau offergeld)
			(SIMPX
				(VF wie)
				(LK machen)
				(MF wir das denn jetzt)
				(NF
					(SIMPX
						(C wenn)
						[01;31m(FKOORD[00m
							(MF wir im am ersten juliwochenende nach hannover)
							(VC fliegen wollen oder nach hannover fahren wollen)[01;31m)[00m))))))
Step:UNSET remove
{'subtrees': ['MF', 'VC'], 'family': ['C', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'APPRART', 'APPRART', 'ADJA', 'NN', 'APPR', 'NE', 'VVINF', 'VMFIN', 'KON', 'APPR', 'NE', 'VVINF', 'VMFIN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (9, 24), 'span': (10, 24), 'left siblings': ['C'], 'label': 'FKOORD', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP hallo frau offergeld wie machen wir das denn jetzt wenn wir im am ersten juliwochenende nach hannover fliegen wollen oder nach hannover fahren wollen)

Sentence 73:
4 Initial errors
0 on fringe, 2 iterations
2 Error:UNSET move
2 Error:Clause Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM ja)
			(DM gut)
			[01;31m(SIMPX[00m
				[01;36m(SIMPX[00m
					(VF dann)
					[01;31m(SIMPX[00m
						(LK lassen)
						(MF wir)[01;31m)[00m[01;36m)[00m
				[01;36m(SIMPX[00m
					(LK konnen)
					(MF wir uns besser)
					(VC unterhalten)[01;36m)[00m[01;31m)[00m
			(DM ja))))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF'], 'mover info': [('VF', (2, 3))], 'old_family': ['VF', 'SIMPX', 'LK', 'MF', 'VC'], 'start left siblings': [], 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'VMFIN', 'PPER', 'PRF', 'ADJD', 'VVINF'), 'start right siblings': ['SIMPX', 'LK', 'MF', 'VC'], 'end left siblings': [], 'auto preterminal span': (2, 10), 'movers': ['VF'], 'old_parent': 'SIMPX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['LK', 'MF'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			(DM ja)
			(DM gut)
			[01;31m(SIMPX[00m
				(SIMPX dann lassen wir)
				[01;36m(SIMPX[00m
					(LK konnen)
					(MF wir uns besser)
					(VC unterhalten)[01;36m)[00m[01;31m)[00m
			(DM ja))))
Step:Clause Attachment
{'new_parent': 'SU', 'new_family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'DM'], 'mover info': [('SIMPX', (2, 5))], 'old_family': ['SIMPX', 'LK', 'MF', 'VC'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'ITJ', 'ADV', 'VVFIN', 'PPER', 'VMFIN', 'PPER', 'PRF', 'ADJD', 'VVINF', 'PTKANT'), 'start right siblings': ['LK', 'MF', 'VC'], 'end left siblings': ['DM', 'DM'], 'auto preterminal span': (0, 11), 'movers': ['SIMPX'], 'old_parent': 'SIMPX', 'end right siblings': ['SIMPX', 'DM'], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP ja gut dann lassen wir konnen wir uns besser unterhalten ja)

Sentence 74:
4 Initial errors
0 on fringe, 3 iterations
2 Error:PP Attachment
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM ja)
			[01;36m(SIMPX[00m
				[01;31m(SIMPX[00m
					(LK ware)
					(MF vielleicht gar nicht so schlecht)[01;31m)[00m
				[01;36m(NF[00m
					(PX
						[01;36m(NF[00m
							(PX
								(APPR wegen)
								(NX der expo))[01;36m)[00m
						(ADVX dann))[01;36m)[00m[01;36m)[00m)))
Step:PP Attachment
{'new_parent': 'SIMPX', 'new_family': ['LK', 'MF', 'PX'], 'mover info': [('PX', (7, 11))], 'old_family': ['DM', 'SIMPX', 'PX'], 'start left siblings': ['DM', 'SIMPX'], 'auto preterminals': ('PTKANT', 'VAFIN', 'ADV', 'ADV', 'PTKNEG', 'ADV', 'ADJD', 'APPR', 'ART', 'NE', 'ADV'), 'start right siblings': [], 'end left siblings': ['LK', 'MF'], 'auto preterminal span': (0, 11), 'movers': ['PX'], 'old_parent': 'SU', 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX
				(LK ware)
				(MF vielleicht gar nicht so schlecht)
				[01;36m(NF[00m
					(PX
						[01;36m(NF[00m
							(PX
								(APPR wegen)
								(NX der expo))[01;36m)[00m
						(ADVX dann))[01;36m)[00m))))
Step:Unary
{'subtrees': ['PX'], 'family': ['NF', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NE'), 'right siblings': [(ADVX (ADV dann))], 'left siblings': [], 'auto preterminal span': (7, 10), 'span': (7, 10), 'parent': 'PX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX
				(LK ware)
				(MF vielleicht gar nicht so schlecht)
				[01;36m(NF[00m
					(PX
						(NF wegen der expo)
						(ADVX dann))[01;36m)[00m))))
Step:Unary
{'subtrees': ['PX'], 'family': ['LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NE', 'ADV'), 'right siblings': [], 'left siblings': [(LK (VXFIN (VAFIN ware))), (MF (ADVX (ADV vielleicht)) (ADVX (ADVX (ADV gar)) (PTKNEG nicht)) (ADJX (ADVX (ADV so)) (ADJD schlecht)))], 'auto preterminal span': (7, 11), 'span': (7, 11), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP ja ware vielleicht gar nicht so schlecht wegen der expo dann)

Sentence 75:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX
				(VF da)
				(LK mussen)
				(MF
					(NX wir)
					(NX uns)
					(ADVX noch)
					[01;36m(ADJX[00m [01;31m(PX[00m
						(PROP daruber)[01;31m)[00m[01;36m)[00m)
				(VC unterhalten))
			(SIMPX wollen sie mit dem zug fahren oder wollen sie fliegen))))
Step:Single Word Phrase
{'family': ['NX', 'NX', 'ADVX', 'ADJX'], 'auto preterminal span': (6, 7), 'span': (6, 7), 'subtrees': ['PROP'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('PROP',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('PX', 'ADJX')}
(TOP ja da mussen wir uns noch daruber unterhalten wollen sie mit dem zug fahren oder wollen sie fliegen)

Sentence 76:
0 Initial errors
0 on fringe, 0 iterations

Sentence 77:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX
				(LK ist)
				(MF
					(ADVX auch)
					(NX
						(ART eine)
						[01;36m(ADJX[00m
							(ADVX sehr)
							(NN unbequeme)[01;36m)[00m))))))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'NN'], 'family': ['ART', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'NN'), 'right siblings': [], 'left siblings': [(ART eine)], 'auto preterminal span': (4, 6), 'span': (4, 6), 'parent': 'NX', 'label': 'ADJX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP ja ist auch eine sehr unbequeme)

Sentence 78:
0 Initial errors
0 on fringe, 0 iterations

Sentence 79:
9 Initial errors
0 on fringe, 7 iterations
2 Error:Different label
2 Error:NP Attachment
1 Error:UNSET add
1 Error:UNSET remove
1 Error:Single Word Phrase
1 Error:UNSET remove
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM ja)
			(DM also)
			(SIMPX ich kann beim reiseburo anrufen)
			[01;31m(SIMPX[00m
				(VF dann)
				[01;36m(FKOORD[00m
					(SIMPX gucke ich)
					(FKOORD
						[01;36m(LKMVCN[00m [01;31m(LKMN[00m
							(LK erkundige)
							[01;36m(MF[00m
								[01;31m(MF[00m
									(NX ich)
									(NX mich)[01;31m)[00m
								[01;31m(DM[00m
									(ITJ ah)[01;31m)[00m
								[01;31m(NX[00m
									(ADVX hier)
									(NX die fluge)[01;31m)[00m[01;36m)[00m
							(NF wann die fluge stattfinden)[01;31m)[00m[01;36m)[00m
						(KON und)
						(LKM
							(LK buche)
							(MF
								(ADVX dann)
								[01;31m(PX[00m
									(APPR fur)
									(NX uns beiden)[01;31m)[00m)))[01;36m)[00m[01;31m)[00m)))
Step:Different label
{'family': ['LKMVCN', 'KON', 'LKM'], 'auto preterminal span': (10, 21), 'span': (10, 21), 'subtrees': ['LK', 'MF', 'DM', 'NX', 'NF'], 'parent': 'FKOORD', 'over_word': False, 'auto preterminals': ('VVFIN', 'PPER', 'PRF', 'ITJ', 'ADV', 'ART', 'NN', 'PWAV', 'ART', 'NN', 'VVFIN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('LKMN', 'LKMVCN')}
(TOP
	(TURN
		(SU
			(DM ja)
			(DM also)
			(SIMPX ich kann beim reiseburo anrufen)
			[01;31m(SIMPX[00m
				(VF dann)
				[01;36m(FKOORD[00m
					(SIMPX gucke ich)
					(FKOORD
						(LKMVCN
							(LK erkundige)
							[01;36m(MF[00m
								[01;31m(MF[00m
									(NX ich)
									(NX mich)[01;31m)[00m
								[01;31m(DM[00m
									(ITJ ah)[01;31m)[00m
								[01;31m(NX[00m
									(ADVX hier)
									(NX die fluge)[01;31m)[00m[01;36m)[00m
							(NF wann die fluge stattfinden))
						(KON und)
						(LKM
							(LK buche)
							(MF
								(ADVX dann)
								[01;31m(PX[00m
									(APPR fur)
									(NX uns beiden)[01;31m)[00m)))[01;36m)[00m[01;31m)[00m)))
Step:NP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'NX', 'DM', 'NX'], 'mover info': [('DM', (13, 14)), ('NX', (14, 17))], 'old_family': ['LK', 'MF', 'DM', 'NX', 'NF'], 'start left siblings': ['LK', 'MF'], 'auto preterminals': ('VVFIN', 'PPER', 'PRF', 'ITJ', 'ADV', 'ART', 'NN', 'PWAV', 'ART', 'NN', 'VVFIN'), 'start right siblings': ['NF'], 'end left siblings': ['NX', 'NX'], 'auto preterminal span': (10, 21), 'movers': ['DM', 'NX'], 'old_parent': 'LKMVCN', 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU
			(DM ja)
			(DM also)
			(SIMPX ich kann beim reiseburo anrufen)
			[01;31m(SIMPX[00m
				(VF dann)
				[01;36m(FKOORD[00m
					(SIMPX gucke ich)
					(FKOORD
						(LKMVCN
							(LK erkundige)
							(MF
								(NX ich)
								(NX mich)
								[01;31m(DM[00m
									(ITJ ah)[01;31m)[00m
								[01;31m(NX[00m
									(ADVX hier)
									(NX die fluge)[01;31m)[00m)
							(NF wann die fluge stattfinden))
						(KON und)
						(LKM
							(LK buche)
							(MF
								(ADVX dann)
								[01;31m(PX[00m
									(APPR fur)
									(NX uns beiden)[01;31m)[00m)))[01;36m)[00m[01;31m)[00m)))
Step:UNSET add
{'subtrees': ['SIMPX', 'FKOORD'], 'family': ['VF', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'VVFIN', 'PPER', 'PRF', 'ITJ', 'ADV', 'ART', 'NN', 'PWAV', 'ART', 'NN', 'VVFIN', 'KON', 'VVFIN', 'ADV', 'APPR', 'PPER', 'PIS'), 'right siblings': [], 'left siblings': [(VF (ADVX (ADV dann)))], 'auto preterminal span': (8, 27), 'span': (8, 27), 'parent': 'SIMPX', 'label': 'FKOORD', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM ja)
			(DM also)
			(SIMPX ich kann beim reiseburo anrufen)
			[01;31m(SIMPX[00m
				(VF dann)
				(FKOORD
					(SIMPX gucke ich)
					(FKOORD
						(LKMVCN
							(LK erkundige)
							(MF
								(NX ich)
								(NX mich)
								[01;31m(DM[00m
									(ITJ ah)[01;31m)[00m
								[01;31m(NX[00m
									(ADVX hier)
									(NX die fluge)[01;31m)[00m)
							(NF wann die fluge stattfinden))
						(KON und)
						(LKM
							(LK buche)
							(MF
								(ADVX dann)
								[01;31m(PX[00m
									(APPR fur)
									(NX uns beiden)[01;31m)[00m))))[01;31m)[00m)))
Step:UNSET remove
{'subtrees': ['VF', 'FKOORD'], 'family': ['DM', 'DM', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADV', 'PPER', 'VMFIN', 'APPRART', 'NN', 'VVINF', 'ADV', 'VVFIN', 'PPER', 'VVFIN', 'PPER', 'PRF', 'ITJ', 'ADV', 'ART', 'NN', 'PWAV', 'ART', 'NN', 'VVFIN', 'KON', 'VVFIN', 'ADV', 'APPR', 'PPER', 'PIS'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (0, 27), 'span': (7, 27), 'left siblings': ['DM', 'DM', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM ja)
			(DM also)
			(SIMPX ich kann beim reiseburo anrufen)
			(VF dann)
			(FKOORD
				(SIMPX gucke ich)
				(FKOORD
					(LKMVCN
						(LK erkundige)
						(MF
							(NX ich)
							(NX mich)
							[01;31m(DM[00m
								(ITJ ah)[01;31m)[00m
							[01;31m(NX[00m
								(ADVX hier)
								(NX die fluge)[01;31m)[00m)
						(NF wann die fluge stattfinden))
					(KON und)
					(LKM
						(LK buche)
						(MF
							(ADVX dann)
							[01;31m(PX[00m
								(APPR fur)
								(NX uns beiden)[01;31m)[00m)))))))
Step:Single Word Phrase
{'subtrees': ['ITJ'], 'family': ['NX', 'NX', 'DM', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('PPER', 'PRF', 'ITJ', 'ADV', 'ART', 'NN'), 'right siblings': ['NX'], 'parent': 'MF', 'auto preterminal span': (11, 17), 'span': (13, 14), 'left siblings': ['NX', 'NX'], 'label': 'DM', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM ja)
			(DM also)
			(SIMPX ich kann beim reiseburo anrufen)
			(VF dann)
			(FKOORD
				(SIMPX gucke ich)
				(FKOORD
					(LKMVCN
						(LK erkundige)
						(MF
							(NX ich)
							(NX mich)
							(ITJ ah)
							[01;31m(NX[00m
								(ADVX hier)
								(NX die fluge)[01;31m)[00m)
						(NF wann die fluge stattfinden))
					(KON und)
					(LKM
						(LK buche)
						(MF
							(ADVX dann)
							[01;31m(PX[00m
								(APPR fur)
								(NX uns beiden)[01;31m)[00m)))))))
Step:UNSET remove
{'subtrees': ['ADVX', 'NX'], 'family': ['NX', 'NX', 'ITJ', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'PRF', 'ITJ', 'ADV', 'ART', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (11, 17), 'span': (14, 17), 'left siblings': ['NX', 'NX', 'ITJ'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM ja)
			(DM also)
			(SIMPX ich kann beim reiseburo anrufen)
			(VF dann)
			(FKOORD
				(SIMPX gucke ich)
				(FKOORD
					(LKMVCN erkundige ich mich ah hier die fluge wann die fluge stattfinden)
					(KON und)
					(LKM
						(LK buche)
						(MF
							(ADVX dann)
							[01;31m(PX[00m
								(APPR fur)
								(NX uns beiden)[01;31m)[00m)))))))
Step:UNSET remove
{'subtrees': ['APPR', 'NX'], 'family': ['ADVX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'APPR', 'PPER', 'PIS'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (23, 27), 'span': (24, 27), 'left siblings': ['ADVX'], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ja also ich kann beim reiseburo anrufen dann gucke ich erkundige ich mich ah hier die fluge wann die fluge stattfinden und buche dann fur uns beiden)

Sentence 80:
8 Initial errors
0 on fringe, 6 iterations
2 Error:UNSET move
2 Error:Modifier Attachment
1 Error:Clause Attachment
1 Error:UNSET remove
1 Error:Unary
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM ja)
			(NX wir)
			[01;31m(SIMPX[00m
				(SIMPX ich hatte mich auch informiert)
				(KON und)
				[01;31m(SIMPX[00m
					(VF das)
					(LK ist)
					[01;36m(MF[00m
						[01;31m(MF[00m
							(ADVX immer)
							(ADVX noch)
							(ADVX so)[01;31m)[00m
						[01;31m(NF[00m
							[01;31m(PX[00m
								[01;31m(PX[00m
									(ADVX nur)
									[01;36m(PX[00m
										(APPRART am)
										(NX wochenende)[01;36m)[00m[01;31m)[00m
								(ADVX nicht)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
			(SIMPX aber wir mussen ja auch sowieso nicht am wochenende fliegen))))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['ADVX', 'ADVX', 'ADVX', 'NF'], 'mover info': [('NF', (13, 17))], 'old_family': ['VF', 'LK', 'MF', 'NF'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('PDS', 'VAFIN', 'ADV', 'ADV', 'ADV', 'ADV', 'APPRART', 'NN', 'PTKNEG'), 'start right siblings': [], 'end left siblings': ['ADVX', 'ADVX', 'ADVX'], 'auto preterminal span': (8, 17), 'movers': ['NF'], 'old_parent': 'SIMPX', 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			(DM ja)
			(NX wir)
			[01;31m(SIMPX[00m
				(SIMPX ich hatte mich auch informiert)
				(KON und)
				[01;31m(SIMPX[00m
					(VF das)
					(LK ist)
					(MF
						(ADVX immer)
						(ADVX noch)
						(ADVX so)
						[01;31m(NF[00m
							[01;31m(PX[00m
								[01;31m(PX[00m
									(ADVX nur)
									[01;36m(PX[00m
										(APPRART am)
										(NX wochenende)[01;36m)[00m[01;31m)[00m
								(ADVX nicht)[01;31m)[00m[01;31m)[00m)[01;31m)[00m[01;31m)[00m
			(SIMPX aber wir mussen ja auch sowieso nicht am wochenende fliegen))))
Step:Modifier Attachment
{'new_parent': 'PX', 'new_family': ['ADVX', 'PX', 'ADVX'], 'mover info': [('ADVX', (13, 14))], 'old_family': ['ADVX', 'APPRART', 'NX'], 'start left siblings': [], 'auto preterminals': ('ADV', 'APPRART', 'NN', 'PTKNEG'), 'start right siblings': ['APPRART', 'NX'], 'end left siblings': [], 'auto preterminal span': (13, 17), 'movers': ['ADVX'], 'old_parent': 'PX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['PX', 'ADVX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU
			(DM ja)
			(NX wir)
			[01;31m(SIMPX[00m
				(SIMPX ich hatte mich auch informiert)
				(KON und)
				[01;31m(SIMPX[00m
					(VF das)
					(LK ist)
					(MF
						(ADVX immer)
						(ADVX noch)
						(ADVX so)
						[01;31m(NF[00m
							[01;31m(PX[00m
								(ADVX nur)
								(PX am wochenende)
								(ADVX nicht)[01;31m)[00m[01;31m)[00m)[01;31m)[00m[01;31m)[00m
			(SIMPX aber wir mussen ja auch sowieso nicht am wochenende fliegen))))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'KON', 'SIMPX'], 'family': ['DM', 'NX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'PPER', 'VAFIN', 'PRF', 'ADV', 'VVPP', 'KON', 'PDS', 'VAFIN', 'ADV', 'ADV', 'ADV', 'ADV', 'APPRART', 'NN', 'PTKNEG', 'KON', 'PPER', 'VMFIN', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'APPRART', 'NN', 'VVINF'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 27), 'span': (2, 17), 'left siblings': ['DM', 'NX'], 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM ja)
			(NX wir)
			(SIMPX ich hatte mich auch informiert)
			(KON und)
			[01;31m(SIMPX[00m
				(VF das)
				(LK ist)
				(MF
					(ADVX immer)
					(ADVX noch)
					(ADVX so)
					[01;31m(NF[00m
						[01;31m(PX[00m
							(ADVX nur)
							(PX am wochenende)
							(ADVX nicht)[01;31m)[00m[01;31m)[00m)[01;31m)[00m
			(SIMPX aber wir mussen ja auch sowieso nicht am wochenende fliegen))))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['DM', 'NX', 'SIMPX', 'KON', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'PPER', 'VAFIN', 'PRF', 'ADV', 'VVPP', 'KON', 'PDS', 'VAFIN', 'ADV', 'ADV', 'ADV', 'ADV', 'APPRART', 'NN', 'PTKNEG', 'KON', 'PPER', 'VMFIN', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'APPRART', 'NN', 'VVINF'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 27), 'span': (8, 17), 'left siblings': ['DM', 'NX', 'SIMPX', 'KON'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM ja)
			(NX wir)
			(SIMPX ich hatte mich auch informiert)
			(KON und)
			(VF das)
			(LK ist)
			(MF
				(ADVX immer)
				(ADVX noch)
				(ADVX so)
				[01;31m(NF[00m
					[01;31m(PX[00m
						(ADVX nur)
						(PX am wochenende)
						(ADVX nicht)[01;31m)[00m[01;31m)[00m)
			(SIMPX aber wir mussen ja auch sowieso nicht am wochenende fliegen))))
Step:Unary
{'subtrees': ['PX'], 'family': ['ADVX', 'ADVX', 'ADVX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'ADV', 'ADV', 'APPRART', 'NN', 'PTKNEG'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (10, 17), 'span': (13, 17), 'left siblings': ['ADVX', 'ADVX', 'ADVX'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM ja)
			(NX wir)
			(SIMPX ich hatte mich auch informiert)
			(KON und)
			(VF das)
			(LK ist)
			(MF
				(ADVX immer)
				(ADVX noch)
				(ADVX so)
				[01;31m(PX[00m
					(ADVX nur)
					(PX am wochenende)
					(ADVX nicht)[01;31m)[00m)
			(SIMPX aber wir mussen ja auch sowieso nicht am wochenende fliegen))))
Step:PP Attachment
{'subtrees': ['ADVX', 'PX', 'ADVX'], 'family': ['ADVX', 'ADVX', 'ADVX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'ADV', 'ADV', 'APPRART', 'NN', 'PTKNEG'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (10, 17), 'span': (13, 17), 'left siblings': ['ADVX', 'ADVX', 'ADVX'], 'label': 'PX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP ja wir ich hatte mich auch informiert und das ist immer noch so nur am wochenende nicht aber wir mussen ja auch sowieso nicht am wochenende fliegen)

Sentence 81:
0 Initial errors
0 on fringe, 0 iterations

Sentence 82:
0 Initial errors
0 on fringe, 0 iterations

Sentence 83:
0 Initial errors
0 on fringe, 0 iterations

Sentence 84:
0 Initial errors
0 on fringe, 0 iterations

Sentence 85:
5 Initial errors
0 on fringe, 3 iterations
2 Error:Different label
2 Error:UNSET move
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			[01;31m(SIMPX[00m
				[01;31m(LV[00m
					(SIMPX
						(KOORD und)
						[01;36m(VF[00m [01;31m(C[00m
							(NX
								(PWS was))[01;31m)[00m[01;36m)[00m
						(MF naturlich auch sehr komfortabel)
						(VC ist))[01;31m)[00m
				[01;36m(SIMPX[00m
					(VF es)
					(LK hat)
					(MF eine eigene sauna)[01;36m)[00m[01;31m)[00m)))
Step:Different label
{'family': ['KOORD', 'VF', 'MF', 'VC'], 'auto preterminal span': (1, 2), 'span': (1, 2), 'subtrees': ['NX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('PWS',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('C', 'VF')}
(TOP
	(TURN
		(SU
			[01;31m(SIMPX[00m
				[01;31m(LV[00m
					(SIMPX
						(KOORD und)
						(VF was)
						(MF naturlich auch sehr komfortabel)
						(VC ist))[01;31m)[00m
				[01;36m(SIMPX[00m
					(VF es)
					(LK hat)
					(MF eine eigene sauna)[01;36m)[00m[01;31m)[00m)))
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['LV', 'SIMPX'], 'mover info': [('LV', (0, 7))], 'old_family': ['LV', 'VF', 'LK', 'MF'], 'start left siblings': [], 'auto preterminals': ('KON', 'PWS', 'ADV', 'ADV', 'ADV', 'ADJD', 'VAFIN', 'PPER', 'VAFIN', 'ART', 'ADJA', 'NN'), 'start right siblings': ['VF', 'LK', 'MF'], 'end left siblings': [], 'auto preterminal span': (0, 12), 'movers': ['LV'], 'old_parent': 'SIMPX', 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			[01;31m(LV[00m
				(SIMPX
					(KOORD und)
					(VF was)
					(MF naturlich auch sehr komfortabel)
					(VC ist))[01;31m)[00m
			(SIMPX es hat eine eigene sauna))))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['LV', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'PWS', 'ADV', 'ADV', 'ADV', 'ADJD', 'VAFIN', 'PPER', 'VAFIN', 'ART', 'ADJA', 'NN'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 12), 'span': (0, 7), 'left siblings': [], 'label': 'LV', 'classified_type': 'Unary', 'type': 'remove'}
(TOP und was naturlich auch sehr komfortabel ist es hat eine eigene sauna)

Sentence 86:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(NX[00m
	(TOP
		(TURN
			(SU
				(NX und ein hallenbad)
				(SIMPX wie ich grade sehe))))[01;36m)[00m
Step:Unary
{'subtrees': ['TURN'], 'family': ['NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'ART', 'NN', 'KOUS', 'PPER', 'ADV', 'VVFIN'), 'right siblings': [], 'left siblings': [], 'auto preterminal span': (0, 7), 'span': (0, 7), 'parent': 'TOP', 'label': 'NX', 'classified_type': 'Unary', 'type': 'add'}
(TOP und ein hallenbad wie ich grade sehe)

Sentence 87:
0 Initial errors
0 on fringe, 0 iterations

Sentence 88:
0 Initial errors
0 on fringe, 0 iterations

Sentence 89:
0 Initial errors
0 on fringe, 0 iterations

Sentence 90:
0 Initial errors
0 on fringe, 0 iterations

Sentence 91:
0 Initial errors
0 on fringe, 0 iterations

Sentence 92:
0 Initial errors
0 on fringe, 0 iterations

Sentence 93:
0 Initial errors
0 on fringe, 0 iterations

Sentence 94:
0 Initial errors
0 on fringe, 0 iterations

Sentence 95:
0 Initial errors
0 on fringe, 0 iterations

Sentence 96:
4 Initial errors
0 on fringe, 2 iterations
2 Error:UNSET move
2 Error:UNSET move
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM auf wiedersehen)
			[01;31m(DM[00m
				[01;31m(NX[00m
					(NN fraulein)
					[01;36m(NX[00m
						[01;36m(DM[00m
							(NE schmidt)[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m)))
Step:UNSET move
{'new_parent': 'DM', 'new_family': ['NN', 'NX'], 'mover info': [('NN', (2, 3))], 'old_family': ['NN', 'NE'], 'start left siblings': [], 'auto preterminals': ('NN', 'NE'), 'start right siblings': ['NE'], 'end left siblings': [], 'auto preterminal span': (2, 4), 'movers': ['NN'], 'old_parent': 'NX', 'POS confusion': ('NN', 'NN'), 'end right siblings': ['NX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			(DM auf wiedersehen)
			[01;31m(DM[00m
				(NN fraulein)
				[01;36m(DM[00m
					(NX
						(NE schmidt))[01;36m)[00m[01;31m)[00m)))
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['DM', 'NN', 'DM'], 'mover info': [('NN', (2, 3))], 'old_family': ['NN', 'NX'], 'start left siblings': [], 'auto preterminals': ('APPR', 'NN', 'NN', 'NE'), 'start right siblings': ['NX'], 'end left siblings': ['DM'], 'auto preterminal span': (0, 4), 'movers': ['NN'], 'old_parent': 'DM', 'POS confusion': ('NN', 'NN'), 'end right siblings': ['DM'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP auf wiedersehen fraulein schmidt)

Sentence 97:
0 Initial errors
0 on fringe, 0 iterations

Sentence 98:
0 Initial errors
0 on fringe, 0 iterations

Sentence 99:
1 Initial errors
0 on fringe, 1 iterations
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM ja)
			(DM also)
			(SIMPX bei mir sieht es etwas eng aus)
			(SIMPX
				(VF ich)
				(LK konnte)
				(MF
					(PX
						(PX in der zweiten juniwoche)
						[01;36m(PX[00m
							(PX in der letzten juliwoche)
							(KON oder)
							(PX in der ersten augustwoche)[01;36m)[00m))))))
Step:PP Attachment
{'subtrees': ['PX', 'KON', 'PX'], 'family': ['PX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'ADJA', 'NN', 'KON', 'APPR', 'ART', 'ADJA', 'NN'), 'right siblings': [], 'left siblings': [(PX (APPR in) (NX (ART der) (ADJX (ADJA zweiten)) (NN juniwoche)))], 'auto preterminal span': (15, 24), 'span': (15, 24), 'parent': 'PX', 'label': 'PX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP ja also bei mir sieht es etwas eng aus ich konnte in der zweiten juniwoche in der letzten juliwoche oder in der ersten augustwoche)

Sentence 100:
0 Initial errors
0 on fringe, 0 iterations

Sentence 101:
0 Initial errors
0 on fringe, 0 iterations

Sentence 102:
0 Initial errors
0 on fringe, 0 iterations

Sentence 103:
0 Initial errors
0 on fringe, 0 iterations

Sentence 104:
0 Initial errors
0 on fringe, 0 iterations

Sentence 105:
0 Initial errors
0 on fringe, 0 iterations

Sentence 106:
18 Initial errors
0 on fringe, 15 iterations
2 Error:Different label
2 Error:Single Word Phrase
2 Error:UNSET move
1 Error:Single Word Phrase
1 Error:Single Word Phrase
1 Error:UNSET add
1 Error:PP Attachment
1 Error:Unary
1 Error:PP Attachment
1 Error:PP Attachment
1 Error:Modifier Attachment
1 Error:PP Attachment
1 Error:Single Word Phrase
1 Error:UNSET remove
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM ja)
			[01;31m(SIMPX[00m
				[01;36m(SIMPX[00m
					(LK fahren)
					[01;31m(MF[00m
						(NX wir)
						(ADVX wieder)
						(PX mit dem zug)[01;31m)[00m[01;36m)[00m
				[01;31m(NF[00m [01;33m(PX[00m
					[01;31m(ADVX[00m
						(ADVX vielleicht)
						(ADVX abends)
						[01;31m(PX[00m
							(PX so um achtzehn uhr) [01;33mPX)[00m
							(ADVX so zirka)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				(LK muste)
				(MF ich dann noch mal)
				(VC nachkucken)
				[01;36m(DM[00m [01;31m(NF[00m
					[01;31m(ADJX[00m
						(ADJD genau)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m
			(PX
				[01;36m(ADVX[00m
					(KON aber)[01;36m)[00m
				(ADVX so)
				[01;36m(ADVX[00m
					(ADV so)[01;36m)[00m
				[01;31m(PX[00m
					[01;31m(PX[00m
						(APPR um)
						(NX den dreh)[01;31m)[00m
					[01;36m(VC[00m [01;31m(ADVX[00m
						(ADV rum)[01;31m)[00m[01;36m)[00m[01;31m)[00m)
			(SIMPX
				(KOORD und)
				(VF dann)
				(LK waren)
				(MF
					(NX wir)
					(PX
						(ADVX so)
						(APPR um)
						[01;36m(PX[00m
							(APPR um)
							(NX halb elf)[01;36m)[00m)
					(PX in hannover)))
			(SIMPX da konnten wir noch was unternehmen))))
Step:Different label
{'family': ['LK', 'MF', 'VC', 'DM'], 'auto preterminal span': (21, 22), 'span': (21, 22), 'subtrees': ['ADJX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('ADJD',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('NF', 'DM')}
(TOP
	(TURN
		(SU
			(DM ja)
			[01;31m(SIMPX[00m
				[01;36m(SIMPX[00m
					(LK fahren)
					[01;31m(MF[00m
						(NX wir)
						(ADVX wieder)
						(PX mit dem zug)[01;31m)[00m[01;36m)[00m
				[01;31m(NF[00m [01;33m(PX[00m
					[01;31m(ADVX[00m
						(ADVX vielleicht)
						(ADVX abends)
						[01;31m(PX[00m
							(PX so um achtzehn uhr) [01;33mPX)[00m
							(ADVX so zirka)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				(LK muste)
				(MF ich dann noch mal)
				(VC nachkucken)
				(DM
					[01;31m(ADJX[00m
						(ADJD genau)[01;31m)[00m)[01;31m)[00m
			(PX
				[01;36m(ADVX[00m
					(KON aber)[01;36m)[00m
				(ADVX so)
				[01;36m(ADVX[00m
					(ADV so)[01;36m)[00m
				[01;31m(PX[00m
					[01;31m(PX[00m
						(APPR um)
						(NX den dreh)[01;31m)[00m
					[01;36m(VC[00m [01;31m(ADVX[00m
						(ADV rum)[01;31m)[00m[01;36m)[00m[01;31m)[00m)
			(SIMPX
				(KOORD und)
				(VF dann)
				(LK waren)
				(MF
					(NX wir)
					(PX
						(ADVX so)
						(APPR um)
						[01;36m(PX[00m
							(APPR um)
							(NX halb elf)[01;36m)[00m)
					(PX in hannover)))
			(SIMPX da konnten wir noch was unternehmen))))
Step:Single Word Phrase
{'family': ['PX', 'VC'], 'auto preterminal span': (28, 29), 'span': (28, 29), 'subtrees': ['ADV'], 'parent': 'PX', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'VC')}
(TOP
	(TURN
		(SU
			(DM ja)
			[01;31m(SIMPX[00m
				[01;36m(SIMPX[00m
					(LK fahren)
					[01;31m(MF[00m
						(NX wir)
						(ADVX wieder)
						(PX mit dem zug)[01;31m)[00m[01;36m)[00m
				[01;31m(NF[00m [01;33m(PX[00m
					[01;31m(ADVX[00m
						(ADVX vielleicht)
						(ADVX abends)
						[01;31m(PX[00m
							(PX so um achtzehn uhr) [01;33mPX)[00m
							(ADVX so zirka)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				(LK muste)
				(MF ich dann noch mal)
				(VC nachkucken)
				(DM
					[01;31m(ADJX[00m
						(ADJD genau)[01;31m)[00m)[01;31m)[00m
			(PX
				[01;36m(ADVX[00m
					(KON aber)[01;36m)[00m
				(ADVX so)
				[01;36m(ADVX[00m
					(ADV so)[01;36m)[00m
				[01;31m(PX[00m
					[01;31m(PX[00m
						(APPR um)
						(NX den dreh)[01;31m)[00m
					(VC rum)[01;31m)[00m)
			(SIMPX
				(KOORD und)
				(VF dann)
				(LK waren)
				(MF
					(NX wir)
					(PX
						(ADVX so)
						(APPR um)
						[01;36m(PX[00m
							(APPR um)
							(NX halb elf)[01;36m)[00m)
					(PX in hannover)))
			(SIMPX da konnten wir noch was unternehmen))))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['NF', 'LK', 'MF', 'VC', 'DM'], 'mover info': [('NF', (7, 15))], 'old_family': ['LK', 'MF', 'NF'], 'start left siblings': ['LK', 'MF'], 'auto preterminals': ('PTKANT', 'VVFIN', 'PPER', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'ADV', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'VVINF', 'ADJD', 'KON', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'KON', 'ADV', 'VAFIN', 'PPER', 'ADV', 'APPR', 'APPR', 'ADJD', 'CARD', 'APPR', 'NE', 'ADV', 'VMFIN', 'PPER', 'ADV', 'PIS', 'VVINF'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 46), 'movers': ['NF'], 'old_parent': 'SIMPX', 'end right siblings': ['LK', 'MF', 'VC', 'DM'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX
				(LK fahren)
				[01;31m(MF[00m
					(NX wir)
					(ADVX wieder)
					(PX mit dem zug)[01;31m)[00m)
			[01;31m(SIMPX[00m [01;33m(PX[00m
				[01;31m(NF[00m
					[01;31m(ADVX[00m
						(ADVX vielleicht)
						(ADVX abends)
						[01;31m(PX[00m
							(PX so um achtzehn uhr) [01;33mPX)[00m
							(ADVX so zirka)[01;31m)[00m[01;31m)[00m[01;31m)[00m
				(LK muste)
				(MF ich dann noch mal)
				(VC nachkucken)
				(DM
					[01;31m(ADJX[00m
						(ADJD genau)[01;31m)[00m)[01;31m)[00m
			(PX
				[01;36m(ADVX[00m
					(KON aber)[01;36m)[00m
				(ADVX so)
				[01;36m(ADVX[00m
					(ADV so)[01;36m)[00m
				[01;31m(PX[00m
					[01;31m(PX[00m
						(APPR um)
						(NX den dreh)[01;31m)[00m
					(VC rum)[01;31m)[00m)
			(SIMPX
				(KOORD und)
				(VF dann)
				(LK waren)
				(MF
					(NX wir)
					(PX
						(ADVX so)
						(APPR um)
						[01;36m(PX[00m
							(APPR um)
							(NX halb elf)[01;36m)[00m)
					(PX in hannover)))
			(SIMPX da konnten wir noch was unternehmen))))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['ADVX', 'ADVX', 'ADV', 'PX'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON',), 'right siblings': [(ADVX (ADV so)), (ADV so), (PX (PX (APPR um) (NX (ART den) (NN dreh))) (VC (ADV rum)))], 'left siblings': [], 'auto preterminal span': (22, 23), 'span': (22, 23), 'parent': 'PX', 'label': 'ADVX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX
				(LK fahren)
				[01;31m(MF[00m
					(NX wir)
					(ADVX wieder)
					(PX mit dem zug)[01;31m)[00m)
			[01;31m(SIMPX[00m [01;33m(PX[00m
				[01;31m(NF[00m
					[01;31m(ADVX[00m
						(ADVX vielleicht)
						(ADVX abends)
						[01;31m(PX[00m
							(PX so um achtzehn uhr) [01;33mPX)[00m
							(ADVX so zirka)[01;31m)[00m[01;31m)[00m[01;31m)[00m
				(LK muste)
				(MF ich dann noch mal)
				(VC nachkucken)
				(DM
					[01;31m(ADJX[00m
						(ADJD genau)[01;31m)[00m)[01;31m)[00m
			(PX
				(ADVX aber)
				(ADVX so)
				[01;36m(ADVX[00m
					(ADV so)[01;36m)[00m
				[01;31m(PX[00m
					[01;31m(PX[00m
						(APPR um)
						(NX den dreh)[01;31m)[00m
					(VC rum)[01;31m)[00m)
			(SIMPX
				(KOORD und)
				(VF dann)
				(LK waren)
				(MF
					(NX wir)
					(PX
						(ADVX so)
						(APPR um)
						[01;36m(PX[00m
							(APPR um)
							(NX halb elf)[01;36m)[00m)
					(PX in hannover)))
			(SIMPX da konnten wir noch was unternehmen))))
Step:Single Word Phrase
{'subtrees': ['ADV'], 'family': ['ADVX', 'ADVX', 'ADVX', 'PX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADV',), 'right siblings': [(PX (PX (APPR um) (NX (ART den) (NN dreh))) (VC (ADV rum)))], 'left siblings': [(ADVX (KON aber)), (ADVX (ADV so))], 'auto preterminal span': (24, 25), 'span': (24, 25), 'parent': 'PX', 'label': 'ADVX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX
				(LK fahren)
				[01;31m(MF[00m
					(NX wir)
					(ADVX wieder)
					(PX mit dem zug)[01;31m)[00m)
			[01;31m(SIMPX[00m [01;33m(PX[00m
				[01;31m(NF[00m
					[01;31m(ADVX[00m
						(ADVX vielleicht)
						(ADVX abends)
						[01;31m(PX[00m
							(PX so um achtzehn uhr) [01;33mPX)[00m
							(ADVX so zirka)[01;31m)[00m[01;31m)[00m[01;31m)[00m
				(LK muste)
				(MF ich dann noch mal)
				(VC nachkucken)
				(DM
					[01;31m(ADJX[00m
						(ADJD genau)[01;31m)[00m)[01;31m)[00m
			(PX
				(ADVX aber)
				(ADVX so)
				(ADVX so)
				[01;31m(PX[00m
					[01;31m(PX[00m
						(APPR um)
						(NX den dreh)[01;31m)[00m
					(VC rum)[01;31m)[00m)
			(SIMPX
				(KOORD und)
				(VF dann)
				(LK waren)
				(MF
					(NX wir)
					(PX
						(ADVX so)
						(APPR um)
						[01;36m(PX[00m
							(APPR um)
							(NX halb elf)[01;36m)[00m)
					(PX in hannover)))
			(SIMPX da konnten wir noch was unternehmen))))
Step:UNSET add
{'subtrees': ['APPR', 'NX'], 'family': ['ADVX', 'APPR', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ADJD', 'CARD'), 'right siblings': [], 'left siblings': [(ADVX (ADV so)), (APPR um)], 'auto preterminal span': (35, 38), 'span': (35, 38), 'parent': 'PX', 'label': 'PX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX
				(LK fahren)
				[01;31m(MF[00m
					(NX wir)
					(ADVX wieder)
					(PX mit dem zug)[01;31m)[00m)
			[01;31m(SIMPX[00m [01;33m(PX[00m
				[01;31m(NF[00m
					[01;31m(ADVX[00m
						(ADVX vielleicht)
						(ADVX abends)
						[01;31m(PX[00m
							(PX so um achtzehn uhr) [01;33mPX)[00m
							(ADVX so zirka)[01;31m)[00m[01;31m)[00m[01;31m)[00m
				(LK muste)
				(MF ich dann noch mal)
				(VC nachkucken)
				(DM
					[01;31m(ADJX[00m
						(ADJD genau)[01;31m)[00m)[01;31m)[00m
			(PX
				(ADVX aber)
				(ADVX so)
				(ADVX so)
				[01;31m(PX[00m
					[01;31m(PX[00m
						(APPR um)
						(NX den dreh)[01;31m)[00m
					(VC rum)[01;31m)[00m)
			(SIMPX und dann waren wir so um um halb elf in hannover)
			(SIMPX da konnten wir noch was unternehmen))))
Step:PP Attachment
{'subtrees': ['NX', 'ADVX', 'PX'], 'family': ['LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'ADV', 'APPR', 'ART', 'NN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (1, 7), 'span': (2, 7), 'left siblings': ['LK'], 'label': 'MF', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX fahren wir wieder mit dem zug)
			[01;31m(SIMPX[00m [01;33m(PX[00m
				[01;31m(NF[00m
					[01;31m(ADVX[00m
						(ADVX vielleicht)
						(ADVX abends)
						[01;31m(PX[00m
							(PX so um achtzehn uhr) [01;33mPX)[00m
							(ADVX so zirka)[01;31m)[00m[01;31m)[00m[01;31m)[00m
				(LK muste)
				(MF ich dann noch mal)
				(VC nachkucken)
				(DM
					[01;31m(ADJX[00m
						(ADJD genau)[01;31m)[00m)[01;31m)[00m
			(PX
				(ADVX aber)
				(ADVX so)
				(ADVX so)
				[01;31m(PX[00m
					[01;31m(PX[00m
						(APPR um)
						(NX den dreh)[01;31m)[00m
					(VC rum)[01;31m)[00m)
			(SIMPX und dann waren wir so um um halb elf in hannover)
			(SIMPX da konnten wir noch was unternehmen))))
Step:Unary
{'subtrees': ['ADVX', 'ADVX', 'PX'], 'family': ['ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'ADV'), 'right siblings': [], 'parent': 'NF', 'auto preterminal span': (7, 15), 'span': (7, 15), 'left siblings': [], 'label': 'ADVX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX fahren wir wieder mit dem zug)
			[01;31m(SIMPX[00m [01;33m(PX[00m
				[01;31m(NF[00m
					(ADVX vielleicht)
					(ADVX abends)
					[01;31m(PX[00m
						(PX so um achtzehn uhr) [01;33mPX)[00m
						(ADVX so zirka)[01;31m)[00m[01;31m)[00m
				(LK muste)
				(MF ich dann noch mal)
				(VC nachkucken)
				(DM
					[01;31m(ADJX[00m
						(ADJD genau)[01;31m)[00m)[01;31m)[00m
			(PX
				(ADVX aber)
				(ADVX so)
				(ADVX so)
				[01;31m(PX[00m
					[01;31m(PX[00m
						(APPR um)
						(NX den dreh)[01;31m)[00m
					(VC rum)[01;31m)[00m)
			(SIMPX und dann waren wir so um um halb elf in hannover)
			(SIMPX da konnten wir noch was unternehmen))))
Step:PP Attachment
{'subtrees': ['ADVX', 'ADVX', 'PX'], 'family': ['NF', 'LK', 'MF', 'VC', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'VVINF', 'ADJD'), 'right siblings': ['LK', 'MF', 'VC', 'DM'], 'parent': 'SIMPX', 'auto preterminal span': (7, 22), 'span': (7, 15), 'left siblings': [], 'label': 'NF', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX fahren wir wieder mit dem zug)
			[01;31m(SIMPX[00m [01;33m(PX[00m
				(ADVX vielleicht)
				(ADVX abends)
				[01;31m(PX[00m
					(PX so um achtzehn uhr) [01;33mPX)[00m
					(ADVX so zirka)[01;31m)[00m
				(LK muste)
				(MF ich dann noch mal)
				(VC nachkucken)
				(DM
					[01;31m(ADJX[00m
						(ADJD genau)[01;31m)[00m)[01;31m)[00m
			(PX
				(ADVX aber)
				(ADVX so)
				(ADVX so)
				[01;31m(PX[00m
					[01;31m(PX[00m
						(APPR um)
						(NX den dreh)[01;31m)[00m
					(VC rum)[01;31m)[00m)
			(SIMPX und dann waren wir so um um halb elf in hannover)
			(SIMPX da konnten wir noch was unternehmen))))
Step:PP Attachment
{'subtrees': ['ADVX', 'ADVX', 'PX', 'LK', 'MF', 'VC', 'DM'], 'family': ['DM', 'SIMPX', 'SIMPX', 'PX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'VVFIN', 'PPER', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'ADV', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'VVINF', 'ADJD', 'KON', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'KON', 'ADV', 'VAFIN', 'PPER', 'ADV', 'APPR', 'APPR', 'ADJD', 'CARD', 'APPR', 'NE', 'ADV', 'VMFIN', 'PPER', 'ADV', 'PIS', 'VVINF'), 'right siblings': ['PX', 'SIMPX', 'SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 46), 'span': (7, 22), 'left siblings': ['DM', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX fahren wir wieder mit dem zug)
			[01;33m(PX[00m (ADVX vielleicht)
			(ADVX abends)
			[01;31m(PX[00m
				(PX so um achtzehn uhr) [01;33mPX)[00m
				(ADVX so zirka)[01;31m)[00m
			(LK muste)
			(MF ich dann noch mal)
			(VC nachkucken)
			(DM
				[01;31m(ADJX[00m
					(ADJD genau)[01;31m)[00m)
			(PX
				(ADVX aber)
				(ADVX so)
				(ADVX so)
				[01;31m(PX[00m
					[01;31m(PX[00m
						(APPR um)
						(NX den dreh)[01;31m)[00m
					(VC rum)[01;31m)[00m)
			(SIMPX und dann waren wir so um um halb elf in hannover)
			(SIMPX da konnten wir noch was unternehmen))))
Step:Modifier Attachment
{'subtrees': ['PX', 'ADVX'], 'family': ['DM', 'SIMPX', 'ADVX', 'ADVX', 'PX', 'LK', 'MF', 'VC', 'DM', 'PX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'VVFIN', 'PPER', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'ADV', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'VVINF', 'ADJD', 'KON', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'KON', 'ADV', 'VAFIN', 'PPER', 'ADV', 'APPR', 'APPR', 'ADJD', 'CARD', 'APPR', 'NE', 'ADV', 'VMFIN', 'PPER', 'ADV', 'PIS', 'VVINF'), 'right siblings': ['LK', 'MF', 'VC', 'DM', 'PX', 'SIMPX', 'SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 46), 'span': (9, 15), 'left siblings': ['DM', 'SIMPX', 'ADVX', 'ADVX'], 'label': 'PX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX fahren wir wieder mit dem zug)
			[01;36m(PX[00m
				(ADVX vielleicht)
				(ADVX abends)
				(PX so um achtzehn uhr)[01;36m)[00m
			(ADVX so zirka)
			(LK muste)
			(MF ich dann noch mal)
			(VC nachkucken)
			(DM
				[01;31m(ADJX[00m
					(ADJD genau)[01;31m)[00m)
			(PX
				(ADVX aber)
				(ADVX so)
				(ADVX so)
				[01;31m(PX[00m
					[01;31m(PX[00m
						(APPR um)
						(NX den dreh)[01;31m)[00m
					(VC rum)[01;31m)[00m)
			(SIMPX und dann waren wir so um um halb elf in hannover)
			(SIMPX da konnten wir noch was unternehmen))))
Step:PP Attachment
{'subtrees': ['ADVX', 'ADVX', 'PX'], 'family': ['DM', 'SIMPX', 'PX', 'ADVX', 'LK', 'MF', 'VC', 'DM', 'PX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'ADV', 'APPR', 'CARD', 'NN'), 'right siblings': [(ADVX (ADVX (ADV so)) (ADV zirka)), (LK (VXFIN (VMFIN muste))), (MF (NX (PPER ich)) (ADVX (ADV dann)) (ADVX (ADV noch)) (ADVX (ADV mal))), (VC (VXINF (VVINF nachkucken))), (DM (ADJX (ADJD genau))), (PX (ADVX (KON aber)) (ADVX (ADV so)) (ADVX (ADV so)) (PX (PX (APPR um) (NX (ART den) (NN dreh))) (VC (ADV rum)))), (SIMPX (KOORD (KON und)) (VF (ADVX (ADV dann))) (LK (VXFIN (VAFIN waren))) (MF (NX (PPER wir)) (PX (ADVX (ADV so)) (APPR um) (PX (APPR um) (NX (ADJX (ADJD halb)) (CARD elf)))) (PX (APPR in) (NX (NE hannover))))), (SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VMFIN konnten))) (MF (NX (PPER wir)) (ADVX (ADV noch)) (NX (PIS was))) (VC (VXINF (VVINF unternehmen))))], 'left siblings': [(DM (PTKANT ja)), (SIMPX (LK (VXFIN (VVFIN fahren))) (NX (PPER wir)) (ADVX (ADV wieder)) (PX (APPR mit) (NX (ART dem) (NN zug))))], 'auto preterminal span': (7, 13), 'span': (7, 13), 'parent': 'SU', 'label': 'PX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX fahren wir wieder mit dem zug)
			(PX vielleicht abends so um achtzehn uhr)
			(ADVX so zirka)
			(LK muste)
			(MF ich dann noch mal)
			(VC nachkucken)
			(DM
				[01;31m(ADJX[00m
					(ADJD genau)[01;31m)[00m)
			(PX
				(ADVX aber)
				(ADVX so)
				(ADVX so)
				[01;31m(PX[00m
					[01;31m(PX[00m
						(APPR um)
						(NX den dreh)[01;31m)[00m
					(VC rum)[01;31m)[00m)
			(SIMPX und dann waren wir so um um halb elf in hannover)
			(SIMPX da konnten wir noch was unternehmen))))
Step:Single Word Phrase
{'subtrees': ['ADJD'], 'family': ['ADJX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADJD',), 'right siblings': [], 'parent': 'DM', 'auto preterminal span': (21, 22), 'span': (21, 22), 'left siblings': [], 'label': 'ADJX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX fahren wir wieder mit dem zug)
			(PX vielleicht abends so um achtzehn uhr)
			(ADVX so zirka)
			(LK muste)
			(MF ich dann noch mal)
			(VC nachkucken)
			(DM genau)
			(PX
				(ADVX aber)
				(ADVX so)
				(ADVX so)
				[01;31m(PX[00m
					[01;31m(PX[00m
						(APPR um)
						(NX den dreh)[01;31m)[00m
					(VC rum)[01;31m)[00m)
			(SIMPX und dann waren wir so um um halb elf in hannover)
			(SIMPX da konnten wir noch was unternehmen))))
Step:UNSET remove
{'subtrees': ['APPR', 'NX'], 'family': ['PX', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NN', 'ADV'), 'right siblings': ['VC'], 'parent': 'PX', 'auto preterminal span': (25, 29), 'span': (25, 28), 'left siblings': [], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX fahren wir wieder mit dem zug)
			(PX vielleicht abends so um achtzehn uhr)
			(ADVX so zirka)
			(LK muste)
			(MF ich dann noch mal)
			(VC nachkucken)
			(DM genau)
			(PX
				(ADVX aber)
				(ADVX so)
				(ADVX so)
				[01;31m(PX[00m
					(APPR um)
					(NX den dreh)
					(VC rum)[01;31m)[00m)
			(SIMPX und dann waren wir so um um halb elf in hannover)
			(SIMPX da konnten wir noch was unternehmen))))
Step:UNSET remove
{'subtrees': ['APPR', 'NX', 'VC'], 'family': ['ADVX', 'ADVX', 'ADVX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'ADV'), 'right siblings': [], 'parent': 'PX', 'auto preterminal span': (22, 29), 'span': (25, 29), 'left siblings': ['ADVX', 'ADVX', 'ADVX'], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ja fahren wir wieder mit dem zug vielleicht abends so um achtzehn uhr so zirka muste ich dann noch mal nachkucken genau aber so so um den dreh rum und dann waren wir so um um halb elf in hannover da konnten wir noch was unternehmen)

Sentence 107:
0 Initial errors
0 on fringe, 0 iterations

Sentence 108:
0 Initial errors
0 on fringe, 0 iterations

Sentence 109:
0 Initial errors
0 on fringe, 0 iterations

Sentence 110:
0 Initial errors
0 on fringe, 0 iterations

Sentence 111:
0 Initial errors
0 on fringe, 0 iterations

Sentence 112:
0 Initial errors
0 on fringe, 0 iterations

Sentence 113:
0 Initial errors
0 on fringe, 0 iterations

Sentence 114:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(SIMPX
				(VF das)
				(LK ware)
				(MF
					(NX es)
					(ADVX dann)
					[01;36m(ADJX[00m [01;31m(ADVX[00m
						(ADV schon)[01;31m)[00m[01;36m)[00m)))))
Step:Single Word Phrase
{'family': ['NX', 'ADVX', 'ADJX'], 'auto preterminal span': (4, 5), 'span': (4, 5), 'subtrees': ['ADV'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'ADJX')}
(TOP das ware es dann schon)

Sentence 115:
0 Initial errors
0 on fringe, 0 iterations

Sentence 116:
0 Initial errors
0 on fringe, 0 iterations

Sentence 117:
0 Initial errors
0 on fringe, 0 iterations

Sentence 118:
0 Initial errors
0 on fringe, 0 iterations

Sentence 119:
0 Initial errors
0 on fringe, 0 iterations

Sentence 120:
0 Initial errors
0 on fringe, 0 iterations

Sentence 121:
17 Initial errors
0 on fringe, 9 iterations
5 Error:NP Attachment
2 Error:Different label
2 Error:Single Word Phrase
2 Error:Clause Attachment
2 Error:Modifier Attachment
1 Error:NP Internal Structure
1 Error:Single Word Phrase
1 Error:Single Word Phrase
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM also)
			(SIMPX ich denke wir sollten es einfach mal ausprobieren)
			[01;31m(SIMPX[00m
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				(VF wir)
				(LK hatten)
				(VC gesagt)
				(NF
					(SIMPX
						(VF anderthalb tage)
						(LK fahren)
						[01;31m(MF[00m
							[01;36m(MF[00m
								(NX wir)
								(PX nach hannover)[01;36m)[00m
							[01;36m(NF[00m [01;36m(SIMPX[00m [01;31m(PX[00m
								(APPRART im)
								[01;31m(NX[00m [01;33m(NX (NX (NX[00m
									(NX zeitraum)
									[01;31m(NX[00m
										[01;31m(NX[00m
											[01;36m(ADVX[00m [01;31m(NX[00m
												(NN januar)[01;31m)[00m [01;33mNX)[00m[01;36m)[00m
											(NX februar) [01;33mNX)[00m
											(NX marz)[01;31m)[00m [01;33mNX)[00m
										[01;36m(ADVX[00m [01;31m(NX[00m
											(CARD achtundneunzig)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;31m)[00m))[01;31m)[00m)))
Step:NP Attachment
{'new_parent': 'NX', 'new_family': ['NX', 'NN'], 'mover info': [('NX', (20, 21))], 'old_family': ['NX', 'NX'], 'start left siblings': [], 'auto preterminals': ('NN', 'NN', 'NN', 'NN', 'CARD'), 'start right siblings': ['NX'], 'end left siblings': [], 'auto preterminal span': (20, 25), 'movers': ['NX'], 'old_parent': 'NX', 'POS confusion': ('NN', 'NN'), 'end right siblings': ['NN'], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU
			(DM also)
			(SIMPX ich denke wir sollten es einfach mal ausprobieren)
			[01;31m(SIMPX[00m
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				(VF wir)
				(LK hatten)
				(VC gesagt)
				(NF
					(SIMPX
						(VF anderthalb tage)
						(LK fahren)
						[01;31m(MF[00m
							[01;36m(MF[00m
								(NX wir)
								(PX nach hannover)[01;36m)[00m
							[01;36m(NF[00m [01;36m(SIMPX[00m [01;31m(PX[00m
								(APPRART im)
								[01;31m(NX[00m
									(NX
										[01;36m(NX[00m
											(NX
												(NX zeitraum)
												[01;36m(ADVX[00m
													(NN januar)[01;36m)[00m)
											(NX februar)[01;36m)[00m
										(NX marz))
									[01;36m(ADVX[00m [01;31m(NX[00m
										(CARD achtundneunzig)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;31m)[00m))[01;31m)[00m)))
Step:Different label
{'family': ['NX', 'PX', 'SIMPX'], 'auto preterminal span': (19, 25), 'span': (19, 25), 'subtrees': ['APPRART', 'NX'], 'parent': 'MF', 'over_word': False, 'auto preterminals': ('APPRART', 'NN', 'NN', 'NN', 'NN', 'CARD'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('PX', 'SIMPX')}
(TOP
	(TURN
		(SU
			(DM also)
			(SIMPX ich denke wir sollten es einfach mal ausprobieren)
			[01;31m(SIMPX[00m
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				(VF wir)
				(LK hatten)
				(VC gesagt)
				(NF
					(SIMPX
						(VF anderthalb tage)
						(LK fahren)
						[01;31m(MF[00m
							[01;36m(MF[00m
								(NX wir)
								(PX nach hannover)[01;36m)[00m
							[01;36m(NF[00m
								(SIMPX
									(APPRART im)
									[01;31m(NX[00m
										(NX
											[01;36m(NX[00m
												(NX
													(NX zeitraum)
													[01;36m(ADVX[00m
														(NN januar)[01;36m)[00m)
												(NX februar)[01;36m)[00m
											(NX marz))
										[01;36m(ADVX[00m [01;31m(NX[00m
											(CARD achtundneunzig)[01;31m)[00m[01;36m)[00m[01;31m)[00m)[01;36m)[00m[01;31m)[00m))[01;31m)[00m)))
Step:Single Word Phrase
{'family': ['NX', 'ADVX'], 'auto preterminal span': (24, 25), 'span': (24, 25), 'subtrees': ['CARD'], 'parent': 'NX', 'over_word': True, 'auto preterminals': ('CARD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('NX', 'ADVX')}
(TOP
	(TURN
		(SU
			(DM also)
			(SIMPX ich denke wir sollten es einfach mal ausprobieren)
			[01;31m(SIMPX[00m
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				(VF wir)
				(LK hatten)
				(VC gesagt)
				(NF
					(SIMPX
						(VF anderthalb tage)
						(LK fahren)
						[01;31m(MF[00m
							[01;36m(MF[00m
								(NX wir)
								(PX nach hannover)[01;36m)[00m
							[01;36m(NF[00m
								(SIMPX
									(APPRART im)
									[01;31m(NX[00m
										(NX
											[01;36m(NX[00m
												(NX
													(NX zeitraum)
													[01;36m(ADVX[00m
														(NN januar)[01;36m)[00m)
												(NX februar)[01;36m)[00m
											(NX marz))
										(ADVX achtundneunzig)[01;31m)[00m)[01;36m)[00m[01;31m)[00m))[01;31m)[00m)))
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'SIMPX'], 'mover info': [('SIMPX', (19, 25))], 'old_family': ['NX', 'PX', 'SIMPX'], 'start left siblings': ['NX', 'PX'], 'auto preterminals': ('CARD', 'NN', 'VVFIN', 'PPER', 'APPR', 'NE', 'APPRART', 'NN', 'NN', 'NN', 'NN', 'CARD'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (13, 25), 'movers': ['SIMPX'], 'old_parent': 'MF', 'end right siblings': [], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU
			(DM also)
			(SIMPX ich denke wir sollten es einfach mal ausprobieren)
			[01;31m(SIMPX[00m
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				(VF wir)
				(LK hatten)
				(VC gesagt)
				(NF
					(SIMPX
						(VF anderthalb tage)
						(LK fahren)
						(MF wir nach hannover)
						[01;36m(NF[00m
							(SIMPX
								(APPRART im)
								[01;31m(NX[00m
									(NX
										[01;36m(NX[00m
											(NX
												(NX zeitraum)
												[01;36m(ADVX[00m
													(NN januar)[01;36m)[00m)
											(NX februar)[01;36m)[00m
										(NX marz))
									(ADVX achtundneunzig)[01;31m)[00m)[01;36m)[00m))[01;31m)[00m)))
Step:Modifier Attachment
{'new_parent': 'SIMPX', 'new_family': ['APPRART', 'NX', 'ADVX'], 'mover info': [('ADVX', (24, 25))], 'old_family': ['NX', 'ADVX'], 'start left siblings': ['NX'], 'auto preterminals': ('APPRART', 'NN', 'NN', 'NN', 'NN', 'CARD'), 'start right siblings': [], 'end left siblings': ['APPRART', 'NX'], 'auto preterminal span': (19, 25), 'adding node already present': False, 'movers': ['ADVX'], 'old_parent': 'NX', 'POS confusion': ('CARD', 'CARD'), 'added and moved': True, 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'ADVX'}
(TOP
	(TURN
		(SU
			(DM also)
			(SIMPX ich denke wir sollten es einfach mal ausprobieren)
			[01;31m(SIMPX[00m
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				(VF wir)
				(LK hatten)
				(VC gesagt)
				(NF
					(SIMPX
						(VF anderthalb tage)
						(LK fahren)
						(MF wir nach hannover)
						(NF
							(SIMPX
								(APPRART im)
								(NX
									[01;36m(NX[00m
										(NX
											(NX zeitraum)
											[01;36m(ADVX[00m
												(NN januar)[01;36m)[00m)
										(NX februar)[01;36m)[00m
									(NX marz))
								(ADVX achtundneunzig)))))[01;31m)[00m)))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'NN', 'NN'), 'right siblings': [(NX (NN marz))], 'left siblings': [], 'auto preterminal span': (20, 23), 'span': (20, 23), 'parent': 'NX', 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM also)
			(SIMPX ich denke wir sollten es einfach mal ausprobieren)
			[01;31m(SIMPX[00m
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				(VF wir)
				(LK hatten)
				(VC gesagt)
				(NF
					(SIMPX
						(VF anderthalb tage)
						(LK fahren)
						(MF wir nach hannover)
						(NF
							(SIMPX
								(APPRART im)
								(NX
									(NX
										(NX
											(NX zeitraum)
											[01;36m(ADVX[00m
												(NN januar)[01;36m)[00m)
										(NX februar))
									(NX marz))
								(ADVX achtundneunzig)))))[01;31m)[00m)))
Step:Single Word Phrase
{'subtrees': ['NN'], 'family': ['NX', 'ADVX'], 'over_word': True, 'over words': True, 'auto preterminals': ('NN',), 'right siblings': [], 'left siblings': [(NX (NN zeitraum))], 'auto preterminal span': (21, 22), 'span': (21, 22), 'parent': 'NX', 'label': 'ADVX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM also)
			(SIMPX ich denke wir sollten es einfach mal ausprobieren)
			[01;31m(SIMPX[00m
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				(VF wir)
				(LK hatten)
				(VC gesagt)
				(NF anderthalb tage fahren wir nach hannover im zeitraum januar februar marz achtundneunzig)[01;31m)[00m)))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['KOORD', 'VF', 'LK', 'VC', 'NF'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON', 'PPER', 'VAFIN', 'VVPP', 'CARD', 'NN', 'VVFIN', 'PPER', 'APPR', 'NE', 'APPRART', 'NN', 'NN', 'NN', 'NN', 'CARD'), 'right siblings': ['VF', 'LK', 'VC', 'NF'], 'parent': 'SIMPX', 'auto preterminal span': (9, 25), 'span': (9, 10), 'left siblings': [], 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM also)
			(SIMPX ich denke wir sollten es einfach mal ausprobieren)
			[01;31m(SIMPX[00m
				(KON und)
				(VF wir)
				(LK hatten)
				(VC gesagt)
				(NF anderthalb tage fahren wir nach hannover im zeitraum januar februar marz achtundneunzig)[01;31m)[00m)))
Step:UNSET remove
{'subtrees': ['KON', 'VF', 'LK', 'VC', 'NF'], 'family': ['DM', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPER', 'VVFIN', 'PPER', 'VMFIN', 'PPER', 'ADV', 'ADV', 'VVINF', 'KON', 'PPER', 'VAFIN', 'VVPP', 'CARD', 'NN', 'VVFIN', 'PPER', 'APPR', 'NE', 'APPRART', 'NN', 'NN', 'NN', 'NN', 'CARD'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (0, 25), 'span': (9, 25), 'left siblings': ['DM', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP also ich denke wir sollten es einfach mal ausprobieren und wir hatten gesagt anderthalb tage fahren wir nach hannover im zeitraum januar februar marz achtundneunzig)

Sentence 122:
0 Initial errors
0 on fringe, 0 iterations

Sentence 123:
0 Initial errors
0 on fringe, 0 iterations

Sentence 124:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(SIMPX
				(VF wir)
				(LK konnten)
				(MF
					[01;31m(PX[00m
						(ADVX gleich)
						[01;36m(PX[00m
							(APPR zu)
							(NX beginn des januar)[01;36m)[00m[01;31m)[00m)
				(VC versuchen)
				(NF einen termin zu finden)))))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['ADVX', 'PX'], 'mover info': [('ADVX', (2, 3))], 'old_family': ['ADVX', 'APPR', 'NX'], 'start left siblings': [], 'auto preterminals': ('ADV', 'APPR', 'NN', 'ART', 'NN'), 'start right siblings': ['APPR', 'NX'], 'end left siblings': [], 'auto preterminal span': (2, 7), 'movers': ['ADVX'], 'old_parent': 'PX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['PX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP wir konnten gleich zu beginn des januar versuchen einen termin zu finden)

Sentence 125:
0 Initial errors
0 on fringe, 0 iterations

Sentence 126:
0 Initial errors
0 on fringe, 0 iterations

Sentence 127:
0 Initial errors
0 on fringe, 0 iterations

Sentence 128:
0 Initial errors
0 on fringe, 0 iterations

Sentence 129:
11 Initial errors
0 on fringe, 5 iterations
2 Error:Single Word Phrase
1 Error:PP Attachment
3 Error:Modifier Attachment
4 Error:UNSET move
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP [01;33m(SIMPX[00m
	(TURN
		(SU
			(SIMPX
				[01;36m(PX[00m
					(VF
						[01;31m(NX[00m
							(NN siebenundzwanzigster)[01;31m)[00m)[01;36m)[00m
				(LK konnte)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX ich)
					(ADVX naturlich)
					[01;31m(PX[00m [01;33m(PX[00m
						(APPR nach)
						[01;31m(NX[00m
							(NX meinem zahnarzttermin) [01;33mPX) MF) SIMPX)[00m
							[01;31m(R[00m [01;33m(R (NF[00m
								(C der)
								(MF um acht uhr)
								(VC stattfindet)[01;31m)[00m[01;31m)[00m[01;31m)[00m
					(ADVX dann)[01;31m)[00m
				(VC weg))))) [01;33mNF) R)[00m
Step:Single Word Phrase
{'family': ['PX'], 'auto preterminal span': (0, 1), 'span': (0, 1), 'subtrees': ['NN'], 'parent': 'VF', 'over_word': True, 'auto preterminals': ('NN',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('NX', 'PX')}
(TOP [01;33m(SIMPX[00m
	(TURN
		(SU
			(SIMPX
				(VF siebenundzwanzigster)
				(LK konnte)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX ich)
					(ADVX naturlich)
					[01;31m(PX[00m [01;33m(PX[00m
						(APPR nach)
						[01;31m(NX[00m
							(NX meinem zahnarzttermin) [01;33mPX) MF) SIMPX)[00m
							[01;31m(R[00m [01;33m(R (NF[00m
								(C der)
								(MF um acht uhr)
								(VC stattfindet)[01;31m)[00m[01;31m)[00m[01;31m)[00m
					(ADVX dann)[01;31m)[00m
				(VC weg))))) [01;33mNF) R)[00m
Step:PP Attachment
{'subtrees': ['NX', 'ADVX', 'PX', 'ADVX'], 'family': ['VF', 'LK', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'VVFIN', 'PPER', 'ADV', 'APPR', 'PPOSAT', 'NN', 'PRELS', 'APPR', 'CARD', 'NN', 'VVFIN', 'ADV', 'PTKVZ'), 'right siblings': ['VC'], 'parent': 'SIMPX', 'auto preterminal span': (0, 14), 'span': (2, 13), 'left siblings': ['VF', 'LK'], 'label': 'MF', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP [01;33m(SIMPX[00m
	(TURN
		(SU
			(SIMPX
				(VF siebenundzwanzigster)
				(LK konnte)
				[01;33m(MF[00m (NX ich)
				(ADVX naturlich)
				[01;31m(PX[00m [01;33m(PX[00m
					(APPR nach)
					[01;31m(NX[00m
						(NX meinem zahnarzttermin) [01;33mPX) MF) SIMPX)[00m
						[01;31m(R[00m [01;33m(R (NF[00m
							(C der)
							(MF um acht uhr)
							(VC stattfindet)[01;31m)[00m[01;31m)[00m[01;31m)[00m
				(ADVX dann)
				(VC weg))))) [01;33mNF) R)[00m
Step:Modifier Attachment
{'new_parent': 'R', 'new_family': ['C', 'MF', 'VC', 'ADVX', 'VC'], 'mover info': [('ADVX', (12, 13)), ('VC', (13, 14))], 'old_family': ['VF', 'LK', 'NX', 'ADVX', 'PX', 'ADVX', 'VC'], 'start left siblings': ['VF', 'LK', 'NX', 'ADVX', 'PX'], 'auto preterminals': ('NN', 'VVFIN', 'PPER', 'ADV', 'APPR', 'PPOSAT', 'NN', 'PRELS', 'APPR', 'CARD', 'NN', 'VVFIN', 'ADV', 'PTKVZ'), 'start right siblings': [], 'end left siblings': ['C', 'MF', 'VC'], 'auto preterminal span': (0, 14), 'adding node already present': False, 'movers': ['ADVX', 'VC'], 'old_parent': 'SIMPX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'NF'}
(TOP [01;33m(SIMPX[00m
	(TURN
		(SU
			(SIMPX
				(VF siebenundzwanzigster)
				(LK konnte)
				[01;33m(MF[00m (NX ich)
				(ADVX naturlich)
				[01;31m(PX[00m [01;33m(PX[00m
					(APPR nach)
					[01;31m(NX[00m
						(NX meinem zahnarzttermin) [01;33mPX) MF) SIMPX)[00m
						(NF der um acht uhr stattfindet dann weg)[01;31m)[00m[01;31m)[00m))))
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SIMPX', 'NF'], 'mover info': [('NF', (7, 14))], 'old_family': ['NX', 'NF'], 'start left siblings': ['NX'], 'auto preterminals': ('NN', 'VVFIN', 'PPER', 'ADV', 'APPR', 'PPOSAT', 'NN', 'PRELS', 'APPR', 'CARD', 'NN', 'VVFIN', 'ADV', 'PTKVZ'), 'start right siblings': [], 'end left siblings': ['SIMPX'], 'auto preterminal span': (0, 14), 'adding node already present': False, 'movers': ['NF'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'MF'}
(TOP
	(SIMPX
		(TURN
			(SU
				(SIMPX
					(VF siebenundzwanzigster)
					(LK konnte)
					[01;36m(MF[00m
						(NX ich)
						(ADVX naturlich)
						(PX nach meinem zahnarzttermin)[01;36m)[00m)
				(NF der um acht uhr stattfindet dann weg)))))
Step:PP Attachment
{'subtrees': ['NX', 'ADVX', 'PX'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV', 'APPR', 'PPOSAT', 'NN'), 'right siblings': [], 'left siblings': [(VF (PX (NN siebenundzwanzigster))), (LK (VXFIN (VVFIN konnte)))], 'auto preterminal span': (2, 7), 'span': (2, 7), 'parent': 'SIMPX', 'label': 'MF', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP siebenundzwanzigster konnte ich naturlich nach meinem zahnarzttermin der um acht uhr stattfindet dann weg)

Sentence 130:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			[01;31m(PX[00m
				(NX acht uhr morgens)
				(PX zum zahnarzt)[01;31m)[00m)))
Step:Unary
{'subtrees': ['NX', 'PX'], 'family': ['PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'NN', 'ADV', 'APPRART', 'NN'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (0, 5), 'span': (0, 5), 'left siblings': [], 'label': 'PX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP acht uhr morgens zum zahnarzt)

Sentence 131:
0 Initial errors
0 on fringe, 0 iterations

Sentence 132:
0 Initial errors
0 on fringe, 0 iterations

Sentence 133:
0 Initial errors
0 on fringe, 0 iterations

Sentence 134:
3 Initial errors
0 on fringe, 3 iterations
1 Error:UNSET add
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(SIMPX
				(LK wird)
				[01;36m(PX[00m
					[01;36m(MF[00m
						(MF knapp)
						[01;31m(NF[00m
							(PX
								(APPR ab)
								(NX zehn uhr))[01;31m)[00m[01;36m)[00m[01;36m)[00m))))
Step:UNSET add
{'subtrees': ['MF', 'NF'], 'family': ['LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJD', 'APPR', 'CARD', 'NN'), 'right siblings': [], 'left siblings': [(LK (VXFIN (VAFIN wird)))], 'auto preterminal span': (1, 5), 'span': (1, 5), 'parent': 'SIMPX', 'label': 'MF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU
			(SIMPX
				(LK wird)
				[01;36m(PX[00m
					(MF
						(MF knapp)
						[01;31m(NF[00m
							(PX
								(APPR ab)
								(NX zehn uhr))[01;31m)[00m)[01;36m)[00m))))
Step:Unary
{'subtrees': ['MF'], 'family': ['LK', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJD', 'APPR', 'CARD', 'NN'), 'right siblings': [], 'left siblings': [(LK (VXFIN (VAFIN wird)))], 'auto preterminal span': (1, 5), 'span': (1, 5), 'parent': 'SIMPX', 'label': 'PX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU
			(SIMPX
				(LK wird)
				(PX
					(MF
						(MF knapp)
						[01;31m(NF[00m
							(PX
								(APPR ab)
								(NX zehn uhr))[01;31m)[00m))))))
Step:Unary
{'subtrees': ['PX'], 'family': ['MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJD', 'APPR', 'CARD', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (1, 5), 'span': (2, 5), 'left siblings': ['MF'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP wird knapp ab zehn uhr)

Sentence 135:
4 Initial errors
0 on fringe, 3 iterations
2 Error:Modifier Attachment
1 Error:NP Internal Structure
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			[01;31m(NX[00m
				(ADVX knapp)
				[01;36m(NX[00m
					(ADJX zehn)
					(NN uhr)[01;36m)[00m[01;31m)[00m
			[01;31m(NX[00m
				(NX elf)
				(NX zwolf)
				(NX eins)
				(NX zwei)[01;31m)[00m
			[01;31m(SIMPX[00m
				(LK sind)
				(MF wir um drei uhr da)[01;31m)[00m)))
Step:Modifier Attachment
{'new_parent': 'SU', 'new_family': ['ADVX', 'NX', 'NX', 'SIMPX'], 'mover info': [('ADVX', (0, 1))], 'old_family': ['ADVX', 'ADJX', 'NN'], 'start left siblings': [], 'auto preterminals': ('ADV', 'CARD', 'NN', 'CARD', 'CARD', 'CARD', 'CARD', 'VAFIN', 'PPER', 'APPR', 'CARD', 'NN', 'ADV'), 'start right siblings': ['ADJX', 'NN'], 'end left siblings': [], 'auto preterminal span': (0, 13), 'movers': ['ADVX'], 'old_parent': 'NX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['NX', 'NX', 'SIMPX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU
			(ADVX knapp)
			(NX zehn uhr)
			[01;31m(NX[00m
				(NX elf)
				(NX zwolf)
				(NX eins)
				(NX zwei)[01;31m)[00m
			[01;31m(SIMPX[00m
				(LK sind)
				(MF wir um drei uhr da)[01;31m)[00m)))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX', 'NX', 'NX'], 'family': ['ADVX', 'NX', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'CARD', 'NN', 'CARD', 'CARD', 'CARD', 'CARD', 'VAFIN', 'PPER', 'APPR', 'CARD', 'NN', 'ADV'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 13), 'span': (3, 7), 'left siblings': ['ADVX', 'NX'], 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(ADVX knapp)
			(NX zehn uhr)
			(NX elf)
			(NX zwolf)
			(NX eins)
			(NX zwei)
			[01;31m(SIMPX[00m
				(LK sind)
				(MF wir um drei uhr da)[01;31m)[00m)))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['ADVX', 'NX', 'NX', 'NX', 'NX', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'CARD', 'NN', 'CARD', 'CARD', 'CARD', 'CARD', 'VAFIN', 'PPER', 'APPR', 'CARD', 'NN', 'ADV'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (0, 13), 'span': (7, 13), 'left siblings': ['ADVX', 'NX', 'NX', 'NX', 'NX', 'NX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP knapp zehn uhr elf zwolf eins zwei sind wir um drei uhr da)

Sentence 136:
7 Initial errors
0 on fringe, 5 iterations
2 Error:Single Word Phrase
2 Error:UNSET move
1 Error:Unary
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			[01;31m(SIMPX[00m
				[01;36m(ADJX[00m [01;31m(LK[00m
					[01;31m(VXFIN[00m
						(VVFIN genugt)[01;31m)[00m[01;31m)[00m[01;36m)[00m
				[01;31m(MF[00m [01;33m(NX[00m
					(NX
						(PDS das))[01;31m)[00m[01;31m)[00m
			[01;31m(NX[00m
				(NX ein halber tag)
				(ADVX dann)
				(ADVX noch)[01;31m)[00m))) [01;33mNX)[00m
Step:Single Word Phrase
{'family': ['ADJX'], 'auto preterminal span': (0, 1), 'span': (0, 1), 'subtrees': ['VVFIN'], 'parent': 'LK', 'over_word': True, 'auto preterminals': ('VVFIN',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VXFIN', 'ADJX')}
(TOP
	(TURN
		(SU
			[01;31m(SIMPX[00m
				[01;31m(LK[00m
					(ADJX
						(VVFIN genugt))[01;31m)[00m
				[01;31m(MF[00m [01;33m(NX[00m
					(NX
						(PDS das))[01;31m)[00m[01;31m)[00m
			[01;31m(NX[00m
				(NX ein halber tag)
				(ADVX dann)
				(ADVX noch)[01;31m)[00m))) [01;33mNX)[00m
Step:UNSET move
{'new_parent': 'NX', 'new_family': ['MF', 'NX', 'ADVX', 'ADVX'], 'mover info': [('MF', (1, 2))], 'old_family': ['LK', 'MF'], 'start left siblings': ['LK'], 'auto preterminals': ('VVFIN', 'PDS', 'ART', 'ADJA', 'NN', 'ADV', 'ADV'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 7), 'movers': ['MF'], 'old_parent': 'SIMPX', 'POS confusion': ('PDS', 'PDS'), 'end right siblings': ['NX', 'ADVX', 'ADVX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			[01;31m(SIMPX[00m
				[01;31m(LK[00m
					(ADJX
						(VVFIN genugt))[01;31m)[00m[01;31m)[00m
			(NX
				[01;31m(MF[00m
					(NX
						(PDS das))[01;31m)[00m
				(NX ein halber tag)
				(ADVX dann)
				(ADVX noch)))))
Step:Unary
{'subtrees': ['LK'], 'family': ['SIMPX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PDS', 'ART', 'ADJA', 'NN', 'ADV', 'ADV'), 'right siblings': ['NX'], 'parent': 'SU', 'auto preterminal span': (0, 7), 'span': (0, 1), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU
			[01;31m(LK[00m
				(ADJX
					(VVFIN genugt))[01;31m)[00m
			(NX
				[01;31m(MF[00m
					(NX
						(PDS das))[01;31m)[00m
				(NX ein halber tag)
				(ADVX dann)
				(ADVX noch)))))
Step:Unary
{'subtrees': ['ADJX'], 'family': ['LK', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PDS', 'ART', 'ADJA', 'NN', 'ADV', 'ADV'), 'right siblings': ['NX'], 'parent': 'SU', 'auto preterminal span': (0, 7), 'span': (0, 1), 'left siblings': [], 'label': 'LK', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(ADJX genugt)
			(NX
				[01;31m(MF[00m
					(NX
						(PDS das))[01;31m)[00m
				(NX ein halber tag)
				(ADVX dann)
				(ADVX noch)))))
Step:Unary
{'subtrees': ['NX'], 'family': ['MF', 'NX', 'ADVX', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'ART', 'ADJA', 'NN', 'ADV', 'ADV'), 'right siblings': ['NX', 'ADVX', 'ADVX'], 'parent': 'NX', 'auto preterminal span': (1, 7), 'span': (1, 2), 'left siblings': [], 'label': 'MF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP genugt das ein halber tag dann noch)

Sentence 137:
7 Initial errors
0 on fringe, 7 iterations
1 Error:Clause Attachment
1 Error:Clause Attachment
1 Error:UNSET add
1 Error:Single Word Phrase
1 Error:Single Word Phrase
1 Error:Unary
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			[01;36m(SIMPX[00m
				(SIMPX das muste also)
				(SIMPX fur den ersten halben tag muste das eigentlich reichen)[01;36m)[00m
			(DM also)
			(NX die)
			(SIMPX dann quetschen wir die termine ein bischen zusammen)
			(DM also)
			[01;36m(SIMPX[00m
				(SIMPX da mussen die leute jetzt auch mal etwas variabel sein)
				(SIMPX
					(VF ich)
					[01;36m(NX[00m
						[01;31m(LK[00m
							[01;31m(VXFIN[00m
								(VVFIN meine)[01;31m)[00m[01;31m)[00m
						[01;31m(MF[00m
							[01;31m(ADJX[00m
								(ADJD flexibel)[01;31m)[00m[01;31m)[00m[01;36m)[00m)[01;36m)[00m)))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['SIMPX', 'DM', 'NX', 'SIMPX', 'DM', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VMFIN', 'ADV', 'APPR', 'ART', 'ADJA', 'ADJA', 'NN', 'VMFIN', 'PDS', 'ADV', 'VVINF'), 'right siblings': [(DM (ADVX (ADV also))), (NX (PDS die)), (SIMPX (VF (ADVX (ADV dann))) (LK (VXFIN (VVFIN quetschen))) (MF (NX (PPER wir)) (NX (ART die) (NN termine)) (NX (ART ein) (PIS bischen))) (VC (PTKVZ zusammen))), (DM (ADVX (ADV also))), (SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VMFIN mussen))) (MF (NX (ART die) (NN leute)) (ADVX (ADV jetzt)) (ADVX (ADV auch)) (ADVX (ADV mal)) (ADJX (ADVX (ADV etwas)) (ADJD variabel))) (VC (VXINF (VAINF sein)))), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN meine))) (MF (ADJX (ADJD flexibel))))], 'left siblings': [], 'auto preterminal span': (0, 12), 'span': (0, 12), 'parent': 'SU', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU
			(SIMPX das muste also fur den ersten halben tag muste das eigentlich reichen)
			(DM also)
			(NX die)
			(SIMPX dann quetschen wir die termine ein bischen zusammen)
			(DM also)
			[01;36m(SIMPX[00m
				(SIMPX da mussen die leute jetzt auch mal etwas variabel sein)
				(SIMPX
					(VF ich)
					[01;36m(NX[00m
						[01;31m(LK[00m
							[01;31m(VXFIN[00m
								(VVFIN meine)[01;31m)[00m[01;31m)[00m
						[01;31m(MF[00m
							[01;31m(ADJX[00m
								(ADJD flexibel)[01;31m)[00m[01;31m)[00m[01;36m)[00m)[01;36m)[00m)))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['SIMPX', 'DM', 'NX', 'SIMPX', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VMFIN', 'ART', 'NN', 'ADV', 'ADV', 'ADV', 'ADV', 'ADJD', 'VAINF', 'PPER', 'VVFIN', 'ADJD'), 'right siblings': [], 'left siblings': [(SIMPX (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VMFIN muste))) (MF (ADVX (ADV also)))) (SIMPX (VF (PX (APPR fur) (NX (ART den) (ADJX (ADJA ersten)) (ADJX (ADJA halben)) (NN tag)))) (LK (VXFIN (VMFIN muste))) (MF (NX (PDS das)) (ADVX (ADV eigentlich))) (VC (VXINF (VVINF reichen))))), (DM (ADVX (ADV also))), (NX (PDS die)), (SIMPX (VF (ADVX (ADV dann))) (LK (VXFIN (VVFIN quetschen))) (MF (NX (PPER wir)) (NX (ART die) (NN termine)) (NX (ART ein) (PIS bischen))) (VC (PTKVZ zusammen))), (DM (ADVX (ADV also)))], 'auto preterminal span': (23, 36), 'span': (23, 36), 'parent': 'SU', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU
			(SIMPX das muste also fur den ersten halben tag muste das eigentlich reichen)
			(DM also)
			(NX die)
			(SIMPX dann quetschen wir die termine ein bischen zusammen)
			(DM also)
			(SIMPX
				(SIMPX da mussen die leute jetzt auch mal etwas variabel sein)
				(SIMPX
					(VF ich)
					[01;36m(NX[00m
						[01;31m(LK[00m
							[01;31m(VXFIN[00m
								(VVFIN meine)[01;31m)[00m[01;31m)[00m
						[01;31m(MF[00m
							[01;31m(ADJX[00m
								(ADJD flexibel)[01;31m)[00m[01;31m)[00m[01;36m)[00m)))))
Step:UNSET add
{'subtrees': ['LK', 'MF'], 'family': ['VF', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'ADJD'), 'right siblings': [], 'left siblings': [(VF (NX (PPER ich)))], 'auto preterminal span': (34, 36), 'span': (34, 36), 'parent': 'SIMPX', 'label': 'NX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU
			(SIMPX das muste also fur den ersten halben tag muste das eigentlich reichen)
			(DM also)
			(NX die)
			(SIMPX dann quetschen wir die termine ein bischen zusammen)
			(DM also)
			(SIMPX
				(SIMPX da mussen die leute jetzt auch mal etwas variabel sein)
				(SIMPX
					(VF ich)
					(NX
						[01;31m(LK[00m
							[01;31m(VXFIN[00m
								(VVFIN meine)[01;31m)[00m[01;31m)[00m
						[01;31m(MF[00m
							[01;31m(ADJX[00m
								(ADJD flexibel)[01;31m)[00m[01;31m)[00m))))))
Step:Single Word Phrase
{'subtrees': ['VVFIN'], 'family': ['VXFIN'], 'over_word': True, 'over words': True, 'auto preterminals': ('VVFIN',), 'right siblings': [], 'parent': 'LK', 'auto preterminal span': (34, 35), 'span': (34, 35), 'left siblings': [], 'label': 'VXFIN', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(SIMPX das muste also fur den ersten halben tag muste das eigentlich reichen)
			(DM also)
			(NX die)
			(SIMPX dann quetschen wir die termine ein bischen zusammen)
			(DM also)
			(SIMPX
				(SIMPX da mussen die leute jetzt auch mal etwas variabel sein)
				(SIMPX
					(VF ich)
					(NX
						[01;31m(LK[00m
							(VVFIN meine)[01;31m)[00m
						[01;31m(MF[00m
							[01;31m(ADJX[00m
								(ADJD flexibel)[01;31m)[00m[01;31m)[00m))))))
Step:Single Word Phrase
{'subtrees': ['VVFIN'], 'family': ['LK', 'MF'], 'over_word': True, 'over words': True, 'auto preterminals': ('VVFIN', 'ADJD'), 'right siblings': ['MF'], 'parent': 'NX', 'auto preterminal span': (34, 36), 'span': (34, 35), 'left siblings': [], 'label': 'LK', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(SIMPX das muste also fur den ersten halben tag muste das eigentlich reichen)
			(DM also)
			(NX die)
			(SIMPX dann quetschen wir die termine ein bischen zusammen)
			(DM also)
			(SIMPX
				(SIMPX da mussen die leute jetzt auch mal etwas variabel sein)
				(SIMPX
					(VF ich)
					(NX
						(VVFIN meine)
						[01;31m(MF[00m
							[01;31m(ADJX[00m
								(ADJD flexibel)[01;31m)[00m[01;31m)[00m))))))
Step:Unary
{'subtrees': ['ADJX'], 'family': ['VVFIN', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'ADJD'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (34, 36), 'span': (35, 36), 'left siblings': ['VVFIN'], 'label': 'MF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(SIMPX das muste also fur den ersten halben tag muste das eigentlich reichen)
			(DM also)
			(NX die)
			(SIMPX dann quetschen wir die termine ein bischen zusammen)
			(DM also)
			(SIMPX
				(SIMPX da mussen die leute jetzt auch mal etwas variabel sein)
				(SIMPX
					(VF ich)
					(NX
						(VVFIN meine)
						[01;31m(ADJX[00m
							(ADJD flexibel)[01;31m)[00m))))))
Step:Single Word Phrase
{'subtrees': ['ADJD'], 'family': ['VVFIN', 'ADJX'], 'over_word': True, 'over words': True, 'auto preterminals': ('VVFIN', 'ADJD'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (34, 36), 'span': (35, 36), 'left siblings': ['VVFIN'], 'label': 'ADJX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP das muste also fur den ersten halben tag muste das eigentlich reichen also die dann quetschen wir die termine ein bischen zusammen also da mussen die leute jetzt auch mal etwas variabel sein ich meine flexibel)

Sentence 138:
0 Initial errors
0 on fringe, 0 iterations

Sentence 139:
0 Initial errors
0 on fringe, 0 iterations

Sentence 140:
0 Initial errors
0 on fringe, 0 iterations

Sentence 141:
0 Initial errors
0 on fringe, 0 iterations

Sentence 142:
5 Initial errors
0 on fringe, 3 iterations
2 Error:Single Word Phrase
2 Error:Different label
1 Error:UNSET add
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			[01;36m(PX[00m
				(APPR mit)
				[01;36m(NX[00m [01;31m(PX[00m
					[01;36m(NX[00m [01;31m(ADVX[00m
						(ADV naturlich)[01;31m)[00m[01;36m)[00m
					(PX mit schwimm und dampfbad)[01;31m)[00m[01;36m)[00m[01;36m)[00m
			(PX direkt am hauptbahnhof)
			(SIMPX das hort sich gut an))))
Step:Single Word Phrase
{'family': ['NX', 'PX'], 'auto preterminal span': (1, 2), 'span': (1, 2), 'subtrees': ['ADV'], 'parent': 'PX', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'NX')}
(TOP
	(TURN
		(SU
			[01;36m(PX[00m
				(APPR mit)
				[01;36m(NX[00m [01;31m(PX[00m
					(NX naturlich)
					(PX mit schwimm und dampfbad)[01;31m)[00m[01;36m)[00m[01;36m)[00m
			(PX direkt am hauptbahnhof)
			(SIMPX das hort sich gut an))))
Step:Different label
{'family': ['APPR', 'NX', 'PX', 'SIMPX'], 'auto preterminal span': (1, 6), 'span': (1, 6), 'subtrees': ['NX', 'PX'], 'parent': 'SU', 'over_word': False, 'auto preterminals': ('ADV', 'APPR', 'TRUNC', 'KON', 'NN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('PX', 'NX')}
(TOP
	(TURN
		(SU
			[01;36m(PX[00m
				(APPR mit)
				(NX naturlich mit schwimm und dampfbad)[01;36m)[00m
			(PX direkt am hauptbahnhof)
			(SIMPX das hort sich gut an))))
Step:UNSET add
{'subtrees': ['APPR', 'NX'], 'family': ['PX', 'PX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ADV', 'APPR', 'TRUNC', 'KON', 'NN'), 'right siblings': [(PX (ADVX (ADV direkt)) (APPRART am) (NX (NN hauptbahnhof))), (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VVFIN hort))) (MF (NX (PRF sich)) (ADJX (ADJD gut))) (VC (PTKVZ an)))], 'left siblings': [], 'auto preterminal span': (0, 6), 'span': (0, 6), 'parent': 'SU', 'label': 'PX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP mit naturlich mit schwimm und dampfbad direkt am hauptbahnhof das hort sich gut an)

Sentence 143:
4 Initial errors
0 on fringe, 4 iterations
1 Error:Clause Attachment
1 Error:Unary
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM also)
			[01;36m(SIMPX[00m
				(SIMPX dann wurde ich lieber das einzelzimmer mal vorschlagen)
				(SIMPX und da wir es nicht selber bezahlen und wir schon dann lange im zug gesessen haben)[01;36m)[00m
			(DM also)
			[01;31m(SIMPX[00m
				(VF ich)
				(LK wurde)
				(MF
					[01;36m(MF[00m
						(NX
							(PPER es))[01;36m)[00m
					[01;36m(DM[00m
						(ADVX
							(ADV also))[01;36m)[00m)[01;31m)[00m
			(SIMPX ich wurde es dann mal machen))))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['DM', 'SIMPX', 'DM', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'ADV', 'ART', 'NN', 'ADV', 'VVINF', 'KON', 'KOUS', 'PPER', 'PPER', 'PTKNEG', 'ADV', 'VVFIN', 'KON', 'PPER', 'ADV', 'ADV', 'ADJD', 'APPRART', 'NN', 'VVPP', 'VAFIN'), 'right siblings': [(DM (ADVX (ADV also))), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VAFIN wurde))) (MF (NX (PPER es)) (ADVX (ADV also)))), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VAFIN wurde))) (MF (NX (PPER es)) (ADVX (ADV dann)) (ADVX (ADV mal))) (VC (VXINF (VVINF machen))))], 'left siblings': [(DM (ADVX (ADV also)))], 'auto preterminal span': (1, 25), 'span': (1, 25), 'parent': 'SU', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM also)
			(SIMPX dann wurde ich lieber das einzelzimmer mal vorschlagen und da wir es nicht selber bezahlen und wir schon dann lange im zug gesessen haben)
			(DM also)
			[01;31m(SIMPX[00m
				(VF ich)
				(LK wurde)
				(MF
					[01;36m(MF[00m
						(NX
							(PPER es))[01;36m)[00m
					[01;36m(DM[00m
						(ADVX
							(ADV also))[01;36m)[00m)[01;31m)[00m
			(SIMPX ich wurde es dann mal machen))))
Step:Unary
{'subtrees': ['NX'], 'family': ['MF', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER',), 'right siblings': [(ADVX (ADV also))], 'left siblings': [], 'auto preterminal span': (28, 29), 'span': (28, 29), 'parent': 'MF', 'label': 'MF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM also)
			(SIMPX dann wurde ich lieber das einzelzimmer mal vorschlagen und da wir es nicht selber bezahlen und wir schon dann lange im zug gesessen haben)
			(DM also)
			[01;31m(SIMPX[00m
				(VF ich)
				(LK wurde)
				(MF
					(MF es)
					[01;36m(DM[00m
						(ADVX
							(ADV also))[01;36m)[00m)[01;31m)[00m
			(SIMPX ich wurde es dann mal machen))))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['MF', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV',), 'right siblings': [], 'left siblings': [(MF (NX (PPER es)))], 'auto preterminal span': (29, 30), 'span': (29, 30), 'parent': 'MF', 'label': 'DM', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM also)
			(SIMPX dann wurde ich lieber das einzelzimmer mal vorschlagen und da wir es nicht selber bezahlen und wir schon dann lange im zug gesessen haben)
			(DM also)
			[01;31m(SIMPX[00m
				(VF ich)
				(LK wurde)
				(MF es also)[01;31m)[00m
			(SIMPX ich wurde es dann mal machen))))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['DM', 'SIMPX', 'DM', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'VAFIN', 'PPER', 'ADV', 'ART', 'NN', 'ADV', 'VVINF', 'KON', 'KOUS', 'PPER', 'PPER', 'PTKNEG', 'ADV', 'VVFIN', 'KON', 'PPER', 'ADV', 'ADV', 'ADJD', 'APPRART', 'NN', 'VVPP', 'VAFIN', 'ADV', 'PPER', 'VAFIN', 'PPER', 'ADV', 'PPER', 'VAFIN', 'PPER', 'ADV', 'ADV', 'VVINF'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 36), 'span': (26, 30), 'left siblings': ['DM', 'SIMPX', 'DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP also dann wurde ich lieber das einzelzimmer mal vorschlagen und da wir es nicht selber bezahlen und wir schon dann lange im zug gesessen haben also ich wurde es also ich wurde es dann mal machen)

Sentence 144:
4 Initial errors
0 on fringe, 3 iterations
2 Error:Clause Attachment
1 Error:UNSET remove
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SIMPX[00m
	(TOP
		(TURN
			(SU
				[01;31m(SIMPX[00m
					(VF ich)
					(LK denke)
					(MF auch)[01;31m)[00m
				(DM mein gott)
				[01;31m(SIMPX[00m
					[01;31m(C[00m
						(NX
							(PWS wer))[01;31m)[00m
					(MF hier schon wieder eine nacht)
					(VC opfert)[01;31m)[00m)))[01;36m)[00m
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['SIMPX', 'DM', 'C', 'MF', 'VC'], 'mover info': [('SIMPX', (0, 3)), ('DM', (3, 5))], 'old_family': ['SIMPX', 'DM', 'SIMPX'], 'start left siblings': [], 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'PPOSAT', 'NE', 'PWS', 'ADV', 'ADV', 'ADV', 'ART', 'NN', 'VVFIN'), 'start right siblings': ['SIMPX'], 'end left siblings': [], 'auto preterminal span': (0, 12), 'movers': ['SIMPX', 'DM'], 'old_parent': 'SU', 'end right siblings': ['C', 'MF', 'VC'], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU
			(SIMPX
				[01;31m(SIMPX[00m
					(VF ich)
					(LK denke)
					(MF auch)[01;31m)[00m
				(DM mein gott)
				[01;31m(C[00m
					(NX
						(PWS wer))[01;31m)[00m
				(MF hier schon wieder eine nacht)
				(VC opfert)))))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['SIMPX', 'DM', 'C', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'PPOSAT', 'NE', 'PWS', 'ADV', 'ADV', 'ADV', 'ART', 'NN', 'VVFIN'), 'right siblings': ['DM', 'C', 'MF', 'VC'], 'parent': 'SIMPX', 'auto preterminal span': (0, 12), 'span': (0, 3), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(SIMPX
				(VF ich)
				(LK denke)
				(MF auch)
				(DM mein gott)
				[01;31m(C[00m
					(NX
						(PWS wer))[01;31m)[00m
				(MF hier schon wieder eine nacht)
				(VC opfert)))))
Step:Unary
{'subtrees': ['NX'], 'family': ['VF', 'LK', 'MF', 'DM', 'C', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'PPOSAT', 'NE', 'PWS', 'ADV', 'ADV', 'ADV', 'ART', 'NN', 'VVFIN'), 'right siblings': ['MF', 'VC'], 'parent': 'SIMPX', 'auto preterminal span': (0, 12), 'span': (5, 6), 'left siblings': ['VF', 'LK', 'MF', 'DM'], 'label': 'C', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ich denke auch mein gott wer hier schon wieder eine nacht opfert)

Sentence 145:
0 Initial errors
0 on fringe, 0 iterations

Sentence 146:
12 Initial errors
0 on fringe, 9 iterations
3 Error:NP Attachment
2 Error:Co-ordination
1 Error:Unary
1 Error:PP Attachment
1 Error:Unary
1 Error:Single Word Phrase
1 Error:Modifier Attachment
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM also)
			[01;36m(NX[00m
				[01;31m(NX[00m [01;33m(NX[00m
					(NX kino)
					(ADVX nicht)[01;31m)[00m
				[01;31m(NX[00m
					(NX theater) [01;33mNX)[00m
					(ADVX nicht)[01;31m)[00m[01;36m)[00m
			(ADVX dann)
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(ADVX
						(ADV vielleicht))[01;31m)[00m
				[01;36m(VF[00m
					(NX
						(PPER wir))[01;36m)[00m
				(LK gehen)
				(MF
					(NX wir)
					(ADVX einfach)
					(PX in eine kneipe)
					[01;36m(PX[00m
						(APPR nach)
						(ART der)
						[01;36m(NF[00m
							(PX
								(APPR nach)
								(NX dem meeting))[01;36m)[00m[01;36m)[00m)[01;31m)[00m
			[01;36m(SIMPX[00m
				[01;36m(KOORD[00m
					(KON und)[01;36m)[00m
				(DM ja)
				[01;31m(SIMPX[00m
					(VF dann)
					(LK brauchen)
					(MF wir nicht weiter grosartig)
					(VC planen)[01;31m)[00m[01;36m)[00m)))
Step:NP Attachment
{'new_parent': 'NX', 'new_family': ['NX', 'NX', 'ADVX'], 'mover info': [('NX', (1, 3))], 'old_family': ['DM', 'NX', 'NX', 'ADVX', 'SIMPX', 'KON', 'DM', 'SIMPX'], 'start left siblings': ['DM'], 'auto preterminals': ('ADV', 'NN', 'PTKNEG', 'NN', 'PTKNEG', 'ADV', 'ADV', 'PPER', 'VVFIN', 'PPER', 'ADV', 'APPR', 'ART', 'NN', 'APPR', 'ART', 'APPR', 'ART', 'NN', 'KON', 'PTKANT', 'ADV', 'VVFIN', 'PPER', 'PTKNEG', 'ADV', 'ADJD', 'VVINF'), 'start right siblings': ['NX', 'ADVX', 'SIMPX', 'KON', 'DM', 'SIMPX'], 'end left siblings': [], 'auto preterminal span': (0, 28), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'SU', 'added and moved': True, 'end right siblings': ['NX', 'ADVX'], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'SIMPX'}
(TOP
	(TURN
		(SU
			(DM also)
			(NX
				(NX
					[01;31m(NX[00m
						(NX kino)
						(ADVX nicht)[01;31m)[00m
					(NX theater))
				(ADVX nicht))
			(ADVX dann)
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(ADVX
						(ADV vielleicht))[01;31m)[00m
				[01;36m(VF[00m
					(NX
						(PPER wir))[01;36m)[00m
				(LK gehen)
				(MF
					(NX wir)
					(ADVX einfach)
					(PX in eine kneipe)
					[01;36m(PX[00m
						(APPR nach)
						(ART der)
						[01;36m(NF[00m
							(PX
								(APPR nach)
								(NX dem meeting))[01;36m)[00m[01;36m)[00m)[01;31m)[00m
			[01;36m(SIMPX[00m
				[01;36m(KOORD[00m
					(KON und)[01;36m)[00m
				(DM ja)
				[01;31m(SIMPX[00m
					(VF dann)
					(LK brauchen)
					(MF wir nicht weiter grosartig)
					(VC planen)[01;31m)[00m[01;36m)[00m)))
Step:Co-ordination
{'new_parent': 'SIMPX', 'new_family': ['KON', 'DM', 'VF', 'LK', 'MF', 'VC'], 'mover info': [('KON', (19, 20)), ('DM', (20, 21))], 'old_family': ['DM', 'NX', 'ADVX', 'SIMPX', 'KON', 'DM', 'SIMPX'], 'start left siblings': ['DM', 'NX', 'ADVX', 'SIMPX'], 'auto preterminals': ('ADV', 'NN', 'PTKNEG', 'NN', 'PTKNEG', 'ADV', 'ADV', 'PPER', 'VVFIN', 'PPER', 'ADV', 'APPR', 'ART', 'NN', 'APPR', 'ART', 'APPR', 'ART', 'NN', 'KON', 'PTKANT', 'ADV', 'VVFIN', 'PPER', 'PTKNEG', 'ADV', 'ADJD', 'VVINF'), 'start right siblings': ['SIMPX'], 'end left siblings': [], 'auto preterminal span': (0, 28), 'movers': ['KON', 'DM'], 'old_parent': 'SU', 'end right siblings': ['VF', 'LK', 'MF', 'VC'], 'classified_type': 'Co-ordination', 'type': 'move'}
(TOP
	(TURN
		(SU
			(DM also)
			(NX
				(NX
					[01;31m(NX[00m
						(NX kino)
						(ADVX nicht)[01;31m)[00m
					(NX theater))
				(ADVX nicht))
			(ADVX dann)
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(ADVX
						(ADV vielleicht))[01;31m)[00m
				[01;36m(VF[00m
					(NX
						(PPER wir))[01;36m)[00m
				(LK gehen)
				(MF
					(NX wir)
					(ADVX einfach)
					(PX in eine kneipe)
					[01;36m(PX[00m
						(APPR nach)
						(ART der)
						[01;36m(NF[00m
							(PX
								(APPR nach)
								(NX dem meeting))[01;36m)[00m[01;36m)[00m)[01;31m)[00m
			(SIMPX
				[01;36m(KOORD[00m
					(KON und)[01;36m)[00m
				(DM ja)
				(VF dann)
				(LK brauchen)
				(MF wir nicht weiter grosartig)
				(VC planen)))))
Step:Unary
{'subtrees': ['NX'], 'family': ['VF', 'VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER',), 'right siblings': [(LK (VXFIN (VVFIN gehen))), (MF (NX (PPER wir)) (ADVX (ADV einfach)) (PX (APPR in) (NX (ART eine) (NN kneipe))) (APPR nach) (ART der) (PX (APPR nach) (NX (ART dem) (NN meeting))))], 'left siblings': [(VF (ADVX (ADV vielleicht)))], 'auto preterminal span': (7, 8), 'span': (7, 8), 'parent': 'SIMPX', 'label': 'VF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM also)
			(NX
				(NX
					[01;31m(NX[00m
						(NX kino)
						(ADVX nicht)[01;31m)[00m
					(NX theater))
				(ADVX nicht))
			(ADVX dann)
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(ADVX
						(ADV vielleicht))[01;31m)[00m
				(VF wir)
				(LK gehen)
				(MF
					(NX wir)
					(ADVX einfach)
					(PX in eine kneipe)
					[01;36m(PX[00m
						(APPR nach)
						(ART der)
						[01;36m(NF[00m
							(PX
								(APPR nach)
								(NX dem meeting))[01;36m)[00m[01;36m)[00m)[01;31m)[00m
			(SIMPX
				[01;36m(KOORD[00m
					(KON und)[01;36m)[00m
				(DM ja)
				(VF dann)
				(LK brauchen)
				(MF wir nicht weiter grosartig)
				(VC planen)))))
Step:PP Attachment
{'subtrees': ['APPR', 'ART', 'PX'], 'family': ['NX', 'ADVX', 'PX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'APPR', 'ART', 'NN'), 'right siblings': [], 'left siblings': [(NX (PPER wir)), (ADVX (ADV einfach)), (PX (APPR in) (NX (ART eine) (NN kneipe)))], 'auto preterminal span': (14, 19), 'span': (14, 19), 'parent': 'MF', 'label': 'PX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM also)
			(NX
				(NX
					[01;31m(NX[00m
						(NX kino)
						(ADVX nicht)[01;31m)[00m
					(NX theater))
				(ADVX nicht))
			(ADVX dann)
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(ADVX
						(ADV vielleicht))[01;31m)[00m
				(VF wir)
				(LK gehen)
				(MF
					(NX wir)
					(ADVX einfach)
					(PX in eine kneipe)
					(PX
						(APPR nach)
						(ART der)
						[01;36m(NF[00m
							(PX
								(APPR nach)
								(NX dem meeting))[01;36m)[00m))[01;31m)[00m
			(SIMPX
				[01;36m(KOORD[00m
					(KON und)[01;36m)[00m
				(DM ja)
				(VF dann)
				(LK brauchen)
				(MF wir nicht weiter grosartig)
				(VC planen)))))
Step:Unary
{'subtrees': ['PX'], 'family': ['APPR', 'ART', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NN'), 'right siblings': [], 'left siblings': [(APPR nach), (ART der)], 'auto preterminal span': (16, 19), 'span': (16, 19), 'parent': 'PX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM also)
			(NX
				(NX
					[01;31m(NX[00m
						(NX kino)
						(ADVX nicht)[01;31m)[00m
					(NX theater))
				(ADVX nicht))
			(ADVX dann)
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(ADVX
						(ADV vielleicht))[01;31m)[00m
				(VF wir)
				(LK gehen)
				(MF wir einfach in eine kneipe nach der nach dem meeting)[01;31m)[00m
			(SIMPX
				[01;36m(KOORD[00m
					(KON und)[01;36m)[00m
				(DM ja)
				(VF dann)
				(LK brauchen)
				(MF wir nicht weiter grosartig)
				(VC planen)))))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['KOORD', 'DM', 'VF', 'LK', 'MF', 'VC'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON',), 'right siblings': [(DM (PTKANT ja)), (VF (ADVX (ADV dann))), (LK (VXFIN (VVFIN brauchen))), (MF (NX (PPER wir)) (ADVX (PTKNEG nicht)) (ADVX (ADV weiter)) (ADJX (ADJD grosartig))), (VC (VXINF (VVINF planen)))], 'left siblings': [], 'auto preterminal span': (19, 20), 'span': (19, 20), 'parent': 'SIMPX', 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM also)
			(NX
				(NX
					[01;31m(NX[00m
						(NX kino)
						(ADVX nicht)[01;31m)[00m
					(NX theater))
				(ADVX nicht))
			(ADVX dann)
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(ADVX
						(ADV vielleicht))[01;31m)[00m
				(VF wir)
				(LK gehen)
				(MF wir einfach in eine kneipe nach der nach dem meeting)[01;31m)[00m
			(SIMPX und ja dann brauchen wir nicht weiter grosartig planen))))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADVX'], 'family': ['NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'PTKNEG', 'NN'), 'right siblings': ['NX'], 'parent': 'NX', 'auto preterminal span': (1, 4), 'span': (1, 3), 'left siblings': [], 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM also)
			(NX kino nicht theater nicht)
			(ADVX dann)
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(ADVX
						(ADV vielleicht))[01;31m)[00m
				(VF wir)
				(LK gehen)
				(MF wir einfach in eine kneipe nach der nach dem meeting)[01;31m)[00m
			(SIMPX und ja dann brauchen wir nicht weiter grosartig planen))))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['VF', 'VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPER', 'VVFIN', 'PPER', 'ADV', 'APPR', 'ART', 'NN', 'APPR', 'ART', 'APPR', 'ART', 'NN'), 'right siblings': ['VF', 'LK', 'MF'], 'parent': 'SIMPX', 'auto preterminal span': (6, 19), 'span': (6, 7), 'left siblings': [], 'label': 'VF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM also)
			(NX kino nicht theater nicht)
			(ADVX dann)
			[01;31m(SIMPX[00m
				(ADVX vielleicht)
				(VF wir)
				(LK gehen)
				(MF wir einfach in eine kneipe nach der nach dem meeting)[01;31m)[00m
			(SIMPX und ja dann brauchen wir nicht weiter grosartig planen))))
Step:UNSET remove
{'subtrees': ['ADVX', 'VF', 'LK', 'MF'], 'family': ['DM', 'NX', 'ADVX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'NN', 'PTKNEG', 'NN', 'PTKNEG', 'ADV', 'ADV', 'PPER', 'VVFIN', 'PPER', 'ADV', 'APPR', 'ART', 'NN', 'APPR', 'ART', 'APPR', 'ART', 'NN', 'KON', 'PTKANT', 'ADV', 'VVFIN', 'PPER', 'PTKNEG', 'ADV', 'ADJD', 'VVINF'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 28), 'span': (6, 19), 'left siblings': ['DM', 'NX', 'ADVX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP also kino nicht theater nicht dann vielleicht wir gehen wir einfach in eine kneipe nach der nach dem meeting und ja dann brauchen wir nicht weiter grosartig planen)

Sentence 147:
0 Initial errors
0 on fringe, 0 iterations

Sentence 148:
0 Initial errors
0 on fringe, 0 iterations

Sentence 149:
0 Initial errors
0 on fringe, 0 iterations

Sentence 150:
0 Initial errors
0 on fringe, 0 iterations

Sentence 151:
0 Initial errors
0 on fringe, 0 iterations

Sentence 152:
0 Initial errors
0 on fringe, 0 iterations

Sentence 153:
0 Initial errors
0 on fringe, 0 iterations

Sentence 154:
0 Initial errors
0 on fringe, 0 iterations

Sentence 155:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			[01;31m(PX[00m
				(PX wann)
				(ADVX denn)
				(NX donnerstag)[01;31m)[00m)))
Step:Unary
{'subtrees': ['PX', 'ADVX', 'NX'], 'family': ['PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PWAV', 'ADV', 'NN'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (0, 3), 'span': (0, 3), 'left siblings': [], 'label': 'PX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP wann denn donnerstag)

Sentence 156:
0 Initial errors
0 on fringe, 0 iterations

Sentence 157:
0 Initial errors
0 on fringe, 0 iterations

Sentence 158:
0 Initial errors
0 on fringe, 0 iterations

Sentence 159:
0 Initial errors
0 on fringe, 0 iterations

Sentence 160:
3 Initial errors
0 on fringe, 2 iterations
2 Error:Modifier Attachment
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(SIMPX
				(LK haben)
				(MF
					(NX wir)
					[01;36m(NX[00m
						[01;31m(ADVX[00m
							(ADV uberhaupt)[01;31m)[00m
						[01;31m(NX[00m
							(NN zeit)[01;31m)[00m[01;36m)[00m)
				(NF in die sauna zu gehen)))))
Step:Modifier Attachment
{'new_parent': 'NX', 'new_family': ['ADVX', 'NN'], 'mover info': [('ADVX', (2, 3))], 'old_family': ['NX', 'ADVX', 'NX'], 'start left siblings': ['NX'], 'auto preterminals': ('PPER', 'ADV', 'NN'), 'start right siblings': ['NX'], 'end left siblings': [], 'auto preterminal span': (1, 4), 'movers': ['ADVX'], 'old_parent': 'MF', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['NN'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU
			(SIMPX
				(LK haben)
				(MF
					(NX wir)
					(NX
						[01;31m(ADVX[00m
							(ADV uberhaupt)[01;31m)[00m
						(NN zeit)))
				(NF in die sauna zu gehen)))))
Step:Single Word Phrase
{'subtrees': ['ADV'], 'family': ['ADVX', 'NN'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADV', 'NN'), 'right siblings': ['NN'], 'parent': 'NX', 'auto preterminal span': (2, 4), 'span': (2, 3), 'left siblings': [], 'label': 'ADVX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP haben wir uberhaupt zeit in die sauna zu gehen)

Sentence 161:
2 Initial errors
0 on fringe, 1 iterations
2 Error:UNSET move
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM also)
			[01;31m(SIMPX[00m
				(LV ein hotel in hannover fur hundert neunzehn mark)
				[01;36m(SIMPX[00m
					(VF das)
					(LK mus)
					(MF schon eine absteige)
					(VC sein)[01;36m)[00m[01;31m)[00m
			(DM oder))))
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['DM', 'LV', 'SIMPX', 'DM'], 'mover info': [('LV', (1, 9))], 'old_family': ['LV', 'VF', 'LK', 'MF', 'VC'], 'start left siblings': [], 'auto preterminals': ('ADV', 'ART', 'NN', 'APPR', 'NE', 'APPR', 'CARD', 'CARD', 'NN', 'PDS', 'VMFIN', 'ADV', 'ART', 'NN', 'VAINF', 'ITJ'), 'start right siblings': ['VF', 'LK', 'MF', 'VC'], 'end left siblings': ['DM'], 'auto preterminal span': (0, 16), 'movers': ['LV'], 'old_parent': 'SIMPX', 'end right siblings': ['SIMPX', 'DM'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP also ein hotel in hannover fur hundert neunzehn mark das mus schon eine absteige sein oder)

Sentence 162:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Different label
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			[01;36m(PX[00m [01;31m(DM[00m
				(ADVX immer)
				(ADVX doch)[01;31m)[00m[01;36m)[00m
			(DM oder))))
Step:Different label
{'family': ['PX', 'DM'], 'auto preterminal span': (0, 2), 'span': (0, 2), 'subtrees': ['ADVX', 'ADVX'], 'parent': 'SU', 'over_word': False, 'auto preterminals': ('ADV', 'ADV'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('DM', 'PX')}
(TOP immer doch oder)

Sentence 163:
5 Initial errors
0 on fringe, 1 iterations
5 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SIMPX[00m
	(TOP [01;33m(VF (PX[00m
		(TURN
			(SU
				(PX vor allem)
				[01;31m(SIMPX[00m
					[01;31m(VF[00m
						(PX
							(APPR in)
							(NX munchen))[01;31m)[00m [01;33mPX) VF)[00m
					(LK haben)
					(MF wir eh alles)[01;31m)[00m)))[01;36m)[00m
Step:PP Attachment
{'new_parent': 'VF', 'new_family': ['PX', 'PX'], 'mover info': [('PX', (0, 2))], 'old_family': ['PX', 'SIMPX'], 'start left siblings': [], 'auto preterminals': ('APPR', 'PIS', 'APPR', 'NE', 'VAFIN', 'PPER', 'ADV', 'PIS'), 'start right siblings': ['SIMPX'], 'end left siblings': [], 'auto preterminal span': (0, 8), 'adding node already present': False, 'movers': ['PX'], 'old_parent': 'SU', 'added and moved': True, 'end right siblings': ['PX'], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'PX'}
(TOP vor allem in munchen haben wir eh alles)

Sentence 164:
0 Initial errors
0 on fringe, 0 iterations

Sentence 165:
0 Initial errors
0 on fringe, 0 iterations

Sentence 166:
0 Initial errors
0 on fringe, 0 iterations

Sentence 167:
0 Initial errors
0 on fringe, 0 iterations

Sentence 168:
0 Initial errors
0 on fringe, 0 iterations

Sentence 169:
0 Initial errors
0 on fringe, 0 iterations

Sentence 170:
0 Initial errors
0 on fringe, 0 iterations

Sentence 171:
0 Initial errors
0 on fringe, 0 iterations

Sentence 172:
8 Initial errors
0 on fringe, 4 iterations
5 Error:UNSET move
1 Error:Single Word Phrase
1 Error:Clause Attachment
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			[01;31m(P[00m
				(SIMPX konnen wir ruhig machen)
				(KON denn)
				(SIMPX
					(VF
						(SIMPX
							(C bis)
							[01;31m(MF[00m [01;33m(MF[00m
								(NX du)
								(ADVX immer)
								[01;31m(PX[00m
									(PX am flughafen) [01;33mMF)[00m
									[01;36m(VXINF[00m
										(PROP [01;33m(VC[00m drausen)[01;36m)[00m[01;31m)[00m[01;31m)[00m
							[01;31m(VC[00m
								(VXFIN
									(VAFIN bist))[01;31m)[00m)) [01;33mVC)[00m
					(LK ist)
					[01;31m(MF[00m
						(ADVX schon)
						(NX die erste stunde)
						(ADVX vorbei)[01;31m)[00m)[01;31m)[00m
			(SIMPX und mit dem ice ist es bequem))))
Step:UNSET move
{'new_parent': 'VC', 'new_family': ['PROP', 'VXFIN'], 'mover info': [('PROP', (10, 11))], 'old_family': ['PX', 'PROP'], 'start left siblings': ['PX'], 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'PROP', 'VAFIN'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (5, 12), 'movers': ['PROP'], 'old_parent': 'PX', 'POS confusion': ('PROP', 'PROP'), 'end right siblings': ['VXFIN'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			[01;31m(P[00m
				(SIMPX konnen wir ruhig machen)
				(KON denn)
				(SIMPX
					(VF
						(SIMPX
							(C bis)
							(MF du immer am flughafen)
							(VC
								[01;36m(VXINF[00m
									(PROP drausen)[01;36m)[00m
								(VXFIN bist))))
					(LK ist)
					[01;31m(MF[00m
						(ADVX schon)
						(NX die erste stunde)
						(ADVX vorbei)[01;31m)[00m)[01;31m)[00m
			(SIMPX und mit dem ice ist es bequem))))
Step:Single Word Phrase
{'subtrees': ['PROP'], 'family': ['VXINF', 'VXFIN'], 'over_word': True, 'over words': True, 'auto preterminals': ('PROP',), 'right siblings': [(VXFIN (VAFIN bist))], 'left siblings': [], 'auto preterminal span': (10, 11), 'span': (10, 11), 'parent': 'VC', 'label': 'VXINF', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SU
			[01;31m(P[00m
				(SIMPX konnen wir ruhig machen)
				(KON denn)
				(SIMPX
					(VF bis du immer am flughafen drausen bist)
					(LK ist)
					[01;31m(MF[00m
						(ADVX schon)
						(NX die erste stunde)
						(ADVX vorbei)[01;31m)[00m)[01;31m)[00m
			(SIMPX und mit dem ice ist es bequem))))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'KON', 'SIMPX'], 'family': ['P', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VMFIN', 'PPER', 'ADV', 'VVINF', 'KON', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'PROP', 'VAFIN', 'VAFIN', 'ADV', 'ART', 'ADJA', 'NN', 'ADV', 'KON', 'APPR', 'ART', 'NE', 'VAFIN', 'PPER', 'ADJD'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 25), 'span': (0, 18), 'left siblings': [], 'label': 'P', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(SIMPX konnen wir ruhig machen)
			(KON denn)
			(SIMPX
				(VF bis du immer am flughafen drausen bist)
				(LK ist)
				[01;31m(MF[00m
					(ADVX schon)
					(NX die erste stunde)
					(ADVX vorbei)[01;31m)[00m)
			(SIMPX und mit dem ice ist es bequem))))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'NX', 'ADVX'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'PROP', 'VAFIN', 'VAFIN', 'ADV', 'ART', 'ADJA', 'NN', 'ADV'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (5, 18), 'span': (13, 18), 'left siblings': ['VF', 'LK'], 'label': 'MF', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP konnen wir ruhig machen denn bis du immer am flughafen drausen bist ist schon die erste stunde vorbei und mit dem ice ist es bequem)

Sentence 173:
8 Initial errors
0 on fringe, 5 iterations
2 Error:Different label
2 Error:Single Word Phrase
2 Error:Different label
1 Error:Single Word Phrase
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM
				[01;31m(ADVX[00m
					(ADV also)[01;31m)[00m)
			[01;31m(SIMPX[00m
				[01;36m(DM[00m [01;31m(VF[00m
					(ADVX
						(ADV also))[01;31m)[00m[01;36m)[00m
				(LK wurden)
				(MF wir)
				(VC sagen)
				(NF
					(SIMPX
						(VF wir)
						(LK konnten)
						[01;36m(NX[00m
							(MF
								[01;31m(ADJX[00m
									[01;36m(ADVX[00m [01;31m(ADJX[00m
										(ADJD stundlich)[01;31m)[00m[01;36m)[00m
									(NX vier uhr dreiundvierzig)[01;31m)[00m)[01;36m)[00m))[01;31m)[00m
			(SIMPX ich wurde sagen acht uhr dreiundvierzig))))
Step:Different label
{'family': ['DM', 'LK', 'MF', 'VC', 'NF'], 'auto preterminal span': (1, 2), 'span': (1, 2), 'subtrees': ['ADVX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('ADV',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('VF', 'DM')}
(TOP
	(TURN
		(SU
			(DM
				[01;31m(ADVX[00m
					(ADV also)[01;31m)[00m)
			[01;31m(SIMPX[00m
				(DM also)
				(LK wurden)
				(MF wir)
				(VC sagen)
				(NF
					(SIMPX
						(VF wir)
						(LK konnten)
						[01;36m(NX[00m
							(MF
								[01;31m(ADJX[00m
									[01;36m(ADVX[00m [01;31m(ADJX[00m
										(ADJD stundlich)[01;31m)[00m[01;36m)[00m
									(NX vier uhr dreiundvierzig)[01;31m)[00m)[01;36m)[00m))[01;31m)[00m
			(SIMPX ich wurde sagen acht uhr dreiundvierzig))))
Step:Single Word Phrase
{'family': ['ADVX', 'NX'], 'auto preterminal span': (7, 8), 'span': (7, 8), 'subtrees': ['ADJD'], 'parent': 'ADJX', 'over_word': True, 'auto preterminals': ('ADJD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'ADVX')}
(TOP
	(TURN
		(SU
			(DM
				[01;31m(ADVX[00m
					(ADV also)[01;31m)[00m)
			[01;31m(SIMPX[00m
				(DM also)
				(LK wurden)
				(MF wir)
				(VC sagen)
				(NF
					(SIMPX
						(VF wir)
						(LK konnten)
						[01;36m(NX[00m
							(MF
								[01;31m(ADJX[00m
									(ADVX stundlich)
									(NX vier uhr dreiundvierzig)[01;31m)[00m)[01;36m)[00m))[01;31m)[00m
			(SIMPX ich wurde sagen acht uhr dreiundvierzig))))
Step:Different label
{'family': ['NX'], 'auto preterminal span': (7, 11), 'span': (7, 11), 'subtrees': ['ADVX', 'NX'], 'parent': 'MF', 'over_word': False, 'auto preterminals': ('ADJD', 'CARD', 'NN', 'CARD'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('ADJX', 'NX')}
(TOP
	(TURN
		(SU
			(DM
				[01;31m(ADVX[00m
					(ADV also)[01;31m)[00m)
			[01;31m(SIMPX[00m
				(DM also)
				(LK wurden)
				(MF wir)
				(VC sagen)
				(NF wir konnten stundlich vier uhr dreiundvierzig)[01;31m)[00m
			(SIMPX ich wurde sagen acht uhr dreiundvierzig))))
Step:Single Word Phrase
{'subtrees': ['ADV'], 'family': ['ADVX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADV',), 'right siblings': [], 'parent': 'DM', 'auto preterminal span': (0, 1), 'span': (0, 1), 'left siblings': [], 'label': 'ADVX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM also)
			[01;31m(SIMPX[00m
				(DM also)
				(LK wurden)
				(MF wir)
				(VC sagen)
				(NF wir konnten stundlich vier uhr dreiundvierzig)[01;31m)[00m
			(SIMPX ich wurde sagen acht uhr dreiundvierzig))))
Step:UNSET remove
{'subtrees': ['DM', 'LK', 'MF', 'VC', 'NF'], 'family': ['DM', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'VAFIN', 'PPER', 'VVINF', 'PPER', 'VMFIN', 'ADJD', 'CARD', 'NN', 'CARD', 'PPER', 'VAFIN', 'VVINF', 'CARD', 'NN', 'CARD'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 17), 'span': (1, 11), 'left siblings': ['DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP also also wurden wir sagen wir konnten stundlich vier uhr dreiundvierzig ich wurde sagen acht uhr dreiundvierzig)

Sentence 174:
0 Initial errors
0 on fringe, 0 iterations

Sentence 175:
0 Initial errors
0 on fringe, 0 iterations

Sentence 176:
0 Initial errors
0 on fringe, 0 iterations

Sentence 177:
0 Initial errors
0 on fringe, 0 iterations

Sentence 178:
0 Initial errors
0 on fringe, 0 iterations

Sentence 179:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(DM[00m
	(TOP
		(TURN
			(SU
				[01;31m(NX[00m
					(NE schloshotel)[01;31m)[00m)))[01;36m)[00m
Step:Single Word Phrase
{'family': ['DM'], 'auto preterminal span': (0, 1), 'span': (0, 1), 'subtrees': ['NE'], 'parent': 'SU', 'over_word': True, 'auto preterminals': ('NE',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('NX', 'DM')}
(TOP schloshotel)

Sentence 180:
0 Initial errors
0 on fringe, 0 iterations

Sentence 181:
0 Initial errors
0 on fringe, 0 iterations

Sentence 182:
11 Initial errors
0 on fringe, 8 iterations
2 Error:Single Word Phrase
2 Error:UNSET move
2 Error:Clause Attachment
1 Error:PP Attachment
1 Error:Clause Attachment
1 Error:Modifier Attachment
1 Error:UNSET remove
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(SIMPX wir konnten mal kucken ob irgendwas im theater lauft)
			[01;31m(SIMPX[00m
				(KOORD aber)
				(VF eigentlich)
				(LK ist)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX das)
					(ADVX doch)[01;31m)[00m
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						[01;31m(MF[00m
							[01;36m(ADVX[00m [01;31m(NX[00m
								(NN eulen)[01;31m)[00m[01;36m)[00m
							[01;31m(PX[00m
								(APPR nach)
								(NX athen)[01;31m)[00m[01;31m)[00m [01;33mMF)[00m
						(VC tragen)[01;31m)[00m
					[01;36m(NF[00m
						(SIMPX
							(C wenn)
							(FKOORD
								(MVC wir in hannover ins theater gehen)
								(KON und)
								(MVC
									(MF
										(PX in munchen)
										[01;36m(NX[00m
											(NX alles)
											(PX vor der haustur)[01;36m)[00m)
									(VC haben))))[01;36m)[00m[01;31m)[00m[01;31m)[00m
			(DM oder))))
Step:Single Word Phrase
{'family': ['ADVX', 'PX'], 'auto preterminal span': (14, 15), 'span': (14, 15), 'subtrees': ['NN'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('NN',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('NX', 'ADVX')}
(TOP
	(TURN
		(SU
			(SIMPX wir konnten mal kucken ob irgendwas im theater lauft)
			[01;31m(SIMPX[00m
				(KOORD aber)
				(VF eigentlich)
				(LK ist)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX das)
					(ADVX doch)[01;31m)[00m
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						[01;31m(MF[00m
							(ADVX eulen)
							[01;31m(PX[00m
								(APPR nach)
								(NX athen)[01;31m)[00m[01;31m)[00m [01;33mMF)[00m
						(VC tragen)[01;31m)[00m
					[01;36m(NF[00m
						(SIMPX
							(C wenn)
							(FKOORD
								(MVC wir in hannover ins theater gehen)
								(KON und)
								(MVC
									(MF
										(PX in munchen)
										[01;36m(NX[00m
											(NX alles)
											(PX vor der haustur)[01;36m)[00m)
									(VC haben))))[01;36m)[00m[01;31m)[00m[01;31m)[00m
			(DM oder))))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['MF', 'ADVX', 'PX'], 'mover info': [('MF', (12, 14))], 'old_family': ['KOORD', 'VF', 'LK', 'MF', 'NF'], 'start left siblings': ['KOORD', 'VF', 'LK'], 'auto preterminals': ('KON', 'ADV', 'VAFIN', 'PDS', 'ADV', 'NN', 'APPR', 'NE', 'VVINF', 'KOUS', 'PPER', 'APPR', 'NE', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPR', 'NE', 'PIS', 'APPR', 'ART', 'NN', 'VAFIN'), 'start right siblings': ['NF'], 'end left siblings': [], 'auto preterminal span': (9, 33), 'movers': ['MF'], 'old_parent': 'SIMPX', 'end right siblings': ['ADVX', 'PX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			(SIMPX wir konnten mal kucken ob irgendwas im theater lauft)
			[01;31m(SIMPX[00m
				(KOORD aber)
				(VF eigentlich)
				(LK ist)
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						(MF
							[01;31m(MF[00m
								(NX das)
								(ADVX doch)[01;31m)[00m
							(ADVX eulen)
							[01;31m(PX[00m
								(APPR nach)
								(NX athen)[01;31m)[00m)
						(VC tragen)[01;31m)[00m
					[01;36m(NF[00m
						(SIMPX
							(C wenn)
							(FKOORD
								(MVC wir in hannover ins theater gehen)
								(KON und)
								(MVC
									(MF
										(PX in munchen)
										[01;36m(NX[00m
											(NX alles)
											(PX vor der haustur)[01;36m)[00m)
									(VC haben))))[01;36m)[00m[01;31m)[00m[01;31m)[00m
			(DM oder))))
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['KOORD', 'VF', 'LK', 'SIMPX', 'NF'], 'mover info': [('SIMPX', (12, 18))], 'old_family': ['SIMPX', 'SIMPX'], 'start left siblings': [], 'auto preterminals': ('KON', 'ADV', 'VAFIN', 'PDS', 'ADV', 'NN', 'APPR', 'NE', 'VVINF', 'KOUS', 'PPER', 'APPR', 'NE', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPR', 'NE', 'PIS', 'APPR', 'ART', 'NN', 'VAFIN'), 'start right siblings': ['SIMPX'], 'end left siblings': ['KOORD', 'VF', 'LK'], 'auto preterminal span': (9, 33), 'movers': ['SIMPX'], 'old_parent': 'NF', 'end right siblings': ['NF'], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU
			(SIMPX wir konnten mal kucken ob irgendwas im theater lauft)
			[01;31m(SIMPX[00m
				(KOORD aber)
				(VF eigentlich)
				(LK ist)
				[01;31m(SIMPX[00m
					(MF
						[01;31m(MF[00m
							(NX das)
							(ADVX doch)[01;31m)[00m
						(ADVX eulen)
						[01;31m(PX[00m
							(APPR nach)
							(NX athen)[01;31m)[00m)
					(VC tragen)[01;31m)[00m
				(NF
					(SIMPX
						(C wenn)
						(FKOORD
							(MVC wir in hannover ins theater gehen)
							(KON und)
							(MVC
								(MF
									(PX in munchen)
									[01;36m(NX[00m
										(NX alles)
										(PX vor der haustur)[01;36m)[00m)
								(VC haben)))))[01;31m)[00m
			(DM oder))))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['PX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PIS', 'APPR', 'ART', 'NN'), 'right siblings': [], 'left siblings': [(PX (APPR in) (NX (NE munchen)))], 'auto preterminal span': (28, 32), 'span': (28, 32), 'parent': 'MF', 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU
			(SIMPX wir konnten mal kucken ob irgendwas im theater lauft)
			[01;31m(SIMPX[00m
				(KOORD aber)
				(VF eigentlich)
				(LK ist)
				[01;31m(SIMPX[00m
					(MF
						[01;31m(MF[00m
							(NX das)
							(ADVX doch)[01;31m)[00m
						(ADVX eulen)
						[01;31m(PX[00m
							(APPR nach)
							(NX athen)[01;31m)[00m)
					(VC tragen)[01;31m)[00m
				(NF wenn wir in hannover ins theater gehen und in munchen alles vor der haustur haben)[01;31m)[00m
			(DM oder))))
Step:Clause Attachment
{'subtrees': ['KOORD', 'VF', 'LK', 'SIMPX', 'NF'], 'family': ['SIMPX', 'SIMPX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VMFIN', 'ADV', 'VVINF', 'KOUS', 'PIS', 'APPRART', 'NN', 'VVFIN', 'KON', 'ADV', 'VAFIN', 'PDS', 'ADV', 'NN', 'APPR', 'NE', 'VVINF', 'KOUS', 'PPER', 'APPR', 'NE', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPR', 'NE', 'PIS', 'APPR', 'ART', 'NN', 'VAFIN', 'ITJ'), 'right siblings': ['DM'], 'parent': 'SU', 'auto preterminal span': (0, 34), 'span': (9, 33), 'left siblings': ['SIMPX'], 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(SIMPX wir konnten mal kucken ob irgendwas im theater lauft)
			(KOORD aber)
			(VF eigentlich)
			(LK ist)
			[01;31m(SIMPX[00m
				(MF
					[01;31m(MF[00m
						(NX das)
						(ADVX doch)[01;31m)[00m
					(ADVX eulen)
					[01;31m(PX[00m
						(APPR nach)
						(NX athen)[01;31m)[00m)
				(VC tragen)[01;31m)[00m
			(NF wenn wir in hannover ins theater gehen und in munchen alles vor der haustur haben)
			(DM oder))))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADVX'], 'family': ['MF', 'ADVX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'ADV', 'NN', 'APPR', 'NE'), 'right siblings': ['ADVX', 'PX'], 'parent': 'MF', 'auto preterminal span': (12, 17), 'span': (12, 14), 'left siblings': [], 'label': 'MF', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(SIMPX wir konnten mal kucken ob irgendwas im theater lauft)
			(KOORD aber)
			(VF eigentlich)
			(LK ist)
			[01;31m(SIMPX[00m
				(MF
					(NX das)
					(ADVX doch)
					(ADVX eulen)
					[01;31m(PX[00m
						(APPR nach)
						(NX athen)[01;31m)[00m)
				(VC tragen)[01;31m)[00m
			(NF wenn wir in hannover ins theater gehen und in munchen alles vor der haustur haben)
			(DM oder))))
Step:UNSET remove
{'subtrees': ['MF', 'VC'], 'family': ['SIMPX', 'KOORD', 'VF', 'LK', 'SIMPX', 'NF', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VMFIN', 'ADV', 'VVINF', 'KOUS', 'PIS', 'APPRART', 'NN', 'VVFIN', 'KON', 'ADV', 'VAFIN', 'PDS', 'ADV', 'NN', 'APPR', 'NE', 'VVINF', 'KOUS', 'PPER', 'APPR', 'NE', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPR', 'NE', 'PIS', 'APPR', 'ART', 'NN', 'VAFIN', 'ITJ'), 'right siblings': ['NF', 'DM'], 'parent': 'SU', 'auto preterminal span': (0, 34), 'span': (12, 18), 'left siblings': ['SIMPX', 'KOORD', 'VF', 'LK'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(SIMPX wir konnten mal kucken ob irgendwas im theater lauft)
			(KOORD aber)
			(VF eigentlich)
			(LK ist)
			(MF
				(NX das)
				(ADVX doch)
				(ADVX eulen)
				[01;31m(PX[00m
					(APPR nach)
					(NX athen)[01;31m)[00m)
			(VC tragen)
			(NF wenn wir in hannover ins theater gehen und in munchen alles vor der haustur haben)
			(DM oder))))
Step:UNSET remove
{'subtrees': ['APPR', 'NX'], 'family': ['NX', 'ADVX', 'ADVX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'ADV', 'NN', 'APPR', 'NE'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (12, 17), 'span': (15, 17), 'left siblings': ['NX', 'ADVX', 'ADVX'], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP wir konnten mal kucken ob irgendwas im theater lauft aber eigentlich ist das doch eulen nach athen tragen wenn wir in hannover ins theater gehen und in munchen alles vor der haustur haben oder)

Sentence 183:
0 Initial errors
0 on fringe, 0 iterations

Sentence 184:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Different label
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(ADJX[00m
	(TOP
		(TURN
			(SU
				[01;31m(ADVX[00m
					(ADVX nicht)
					(SIMPX das ich wuste)[01;31m)[00m)))[01;36m)[00m
Step:Different label
{'family': ['ADJX'], 'auto preterminal span': (0, 4), 'span': (0, 4), 'subtrees': ['ADVX', 'SIMPX'], 'parent': 'SU', 'over_word': False, 'auto preterminals': ('PTKNEG', 'KOUS', 'PPER', 'VVFIN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('ADVX', 'ADJX')}
(TOP nicht das ich wuste)

Sentence 185:
4 Initial errors
0 on fringe, 4 iterations
1 Error:UNSET add
1 Error:Single Word Phrase
1 Error:Single Word Phrase
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(SIMPX
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				[01;36m(MVC[00m
					(MF
						(ADVX dann)
						(ADVX eben)
						(NX
							[01;31m(ADJX[00m
								[01;31m(ADJX[00m
									(CARD ein)[01;31m)[00m
								(KON oder)
								(ADJX zwei)[01;31m)[00m
							(NN nachte)))
					(VC buchen)[01;36m)[00m))))
Step:UNSET add
{'subtrees': ['MF', 'VC'], 'family': ['KOORD', 'MVC'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'CARD', 'KON', 'CARD', 'NN', 'VVINF'), 'right siblings': [], 'left siblings': [(KOORD (KON und))], 'auto preterminal span': (1, 8), 'span': (1, 8), 'parent': 'SIMPX', 'label': 'MVC', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU
			(SIMPX
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				(MVC
					(MF
						(ADVX dann)
						(ADVX eben)
						(NX
							[01;31m(ADJX[00m
								[01;31m(ADJX[00m
									(CARD ein)[01;31m)[00m
								(KON oder)
								(ADJX zwei)[01;31m)[00m
							(NN nachte)))
					(VC buchen))))))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['KOORD', 'MVC'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON', 'ADV', 'ADV', 'CARD', 'KON', 'CARD', 'NN', 'VVINF'), 'right siblings': ['MVC'], 'parent': 'SIMPX', 'auto preterminal span': (0, 8), 'span': (0, 1), 'left siblings': [], 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(SIMPX
				(KON und)
				(MVC
					(MF
						(ADVX dann)
						(ADVX eben)
						(NX
							[01;31m(ADJX[00m
								[01;31m(ADJX[00m
									(CARD ein)[01;31m)[00m
								(KON oder)
								(ADJX zwei)[01;31m)[00m
							(NN nachte)))
					(VC buchen))))))
Step:Single Word Phrase
{'subtrees': ['CARD'], 'family': ['ADJX', 'KON', 'ADJX'], 'over_word': True, 'over words': True, 'auto preterminals': ('CARD', 'KON', 'CARD'), 'right siblings': ['KON', 'ADJX'], 'parent': 'ADJX', 'auto preterminal span': (3, 6), 'span': (3, 4), 'left siblings': [], 'label': 'ADJX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(SIMPX
				(KON und)
				(MVC
					(MF
						(ADVX dann)
						(ADVX eben)
						(NX
							[01;31m(ADJX[00m
								(CARD ein)
								(KON oder)
								(ADJX zwei)[01;31m)[00m
							(NN nachte)))
					(VC buchen))))))
Step:Modifier Attachment
{'subtrees': ['CARD', 'KON', 'ADJX'], 'family': ['ADJX', 'NN'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'KON', 'CARD', 'NN'), 'right siblings': ['NN'], 'parent': 'NX', 'auto preterminal span': (3, 7), 'span': (3, 6), 'left siblings': [], 'label': 'ADJX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP und dann eben ein oder zwei nachte buchen)

Sentence 186:
0 Initial errors
0 on fringe, 0 iterations

Sentence 187:
0 Initial errors
0 on fringe, 0 iterations

Sentence 188:
13 Initial errors
0 on fringe, 6 iterations
7 Error:NP Attachment
2 Error:Single Word Phrase
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:UNSET add
1 Error:UNSET add
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM gut)
			(ADVX dann)
			[01;31m(SIMPX[00m
				(VF dann)
				(LK schlage)
				(MF ich)
				(VC vor)
				[01;36m(NF[00m
					[01;36m(SIMPX[00m
						[01;33m(VF (NX (NX[00m (NX mitte)
						(APPR [01;33m(PX[00m bis)
						[01;31m(NF[00m
							[01;31m(SIMPX[00m
								[01;31m(VF[00m
									[01;31m(PX[00m
										[01;36m(NX[00m [01;31m(ADVX[00m
											(ADV spatestens)[01;31m)[00m [01;33mPX) NX)[00m[01;36m)[00m
										(APPR bis)
										(NX mitte nachster woche)[01;31m)[00m[01;31m)[00m [01;33mNX) VF)[00m
								(LK haben)
								(MF wir sie)
								(VC informiert)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;31m)[00m
			(SIMPX das muste ja dann auch noch reichen wenn wir erst im august))))
Step:NP Attachment
{'new_parent': 'VF', 'new_family': ['NX', 'APPR', 'PX'], 'mover info': [('NX', (6, 7)), ('APPR', (7, 8))], 'old_family': ['VF', 'LK', 'MF', 'VC', 'NX', 'APPR', 'NF'], 'start left siblings': ['VF', 'LK', 'MF', 'VC'], 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'PTKVZ', 'NN', 'APPR', 'ADV', 'APPR', 'NN', 'ADJA', 'NN', 'VAFIN', 'PPER', 'PPER', 'VVPP'), 'start right siblings': ['NF'], 'end left siblings': [], 'auto preterminal span': (2, 17), 'adding node already present': False, 'movers': ['NX', 'APPR'], 'old_parent': 'SIMPX', 'added and moved': True, 'end right siblings': ['PX'], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(SU
			(DM gut)
			(ADVX dann)
			[01;31m(SIMPX[00m
				(VF dann)
				(LK schlage)
				(MF ich)
				(VC vor)
				(NF [01;33m(NX[00m
					(SIMPX
						(NX
							(VF
								(NX mitte)
								(APPR [01;33m(PX[00m bis)
								[01;31m(PX[00m
									[01;36m(NX[00m [01;31m(ADVX[00m
										(ADV spatestens)[01;31m)[00m [01;33mPX) NX)[00m[01;36m)[00m
									(APPR bis)
									(NX mitte nachster woche)[01;31m)[00m))
						(LK haben)
						(MF wir sie)
						(VC informiert)))[01;31m)[00m
			(SIMPX das muste ja dann auch noch reichen wenn wir erst im august))))
Step:Single Word Phrase
{'family': ['NX', 'APPR', 'NX'], 'auto preterminal span': (8, 9), 'span': (8, 9), 'subtrees': ['ADV'], 'parent': 'PX', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'NX')}
(TOP
	(TURN
		(SU
			(DM gut)
			(ADVX dann)
			[01;31m(SIMPX[00m
				(VF dann)
				(LK schlage)
				(MF ich)
				(VC vor)
				(NF [01;33m(NX[00m
					(SIMPX
						(NX
							(VF
								(NX mitte)
								(APPR [01;33m(PX[00m bis)
								[01;31m(PX[00m
									(NX spatestens) [01;33mPX) NX)[00m
									(APPR bis)
									(NX mitte nachster woche)[01;31m)[00m))
						(LK haben)
						(MF wir sie)
						(VC informiert)))[01;31m)[00m
			(SIMPX das muste ja dann auch noch reichen wenn wir erst im august))))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'VC', 'NF'], 'family': ['DM', 'ADVX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'ADV', 'VVFIN', 'PPER', 'PTKVZ', 'NN', 'APPR', 'ADV', 'APPR', 'NN', 'ADJA', 'NN', 'VAFIN', 'PPER', 'PPER', 'VVPP', 'PDS', 'VMFIN', 'ADV', 'ADV', 'ADV', 'ADV', 'VVINF', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 29), 'span': (2, 17), 'left siblings': ['DM', 'ADVX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM gut)
			(ADVX dann)
			(VF dann)
			(LK schlage)
			(MF ich)
			(VC vor)
			(NF [01;33m(NX[00m
				(SIMPX
					(NX
						(VF
							(NX mitte)
							(APPR [01;33m(PX[00m bis)
							[01;31m(PX[00m
								(NX spatestens) [01;33mPX) NX)[00m
								(APPR bis)
								(NX mitte nachster woche)[01;31m)[00m))
					(LK haben)
					(MF wir sie)
					(VC informiert)))
			(SIMPX das muste ja dann auch noch reichen wenn wir erst im august))))
Step:UNSET remove
{'subtrees': ['NX', 'APPR', 'NX'], 'family': ['NX', 'APPR', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'APPR', 'ADV', 'APPR', 'NN', 'ADJA', 'NN'), 'right siblings': [], 'parent': 'VF', 'auto preterminal span': (6, 13), 'span': (8, 13), 'left siblings': ['NX', 'APPR'], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM gut)
			(ADVX dann)
			(VF dann)
			(LK schlage)
			(MF ich)
			(VC vor)
			(NF
				(SIMPX
					(NX
						(VF
							[01;36m(NX[00m
								(NX mitte)
								[01;36m(PX[00m
									(APPR bis)
									(NX spatestens)[01;36m)[00m[01;36m)[00m
							(APPR bis)
							(NX mitte nachster woche)))
					(LK haben)
					(MF wir sie)
					(VC informiert)))
			(SIMPX das muste ja dann auch noch reichen wenn wir erst im august))))
Step:UNSET add
{'subtrees': ['NX', 'APPR', 'NX'], 'family': ['NX', 'APPR', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'APPR', 'ADV'), 'right siblings': [(APPR bis), (NX (NX (NN mitte)) (NX (ADJX (ADJA nachster)) (NN woche)))], 'left siblings': [], 'auto preterminal span': (6, 9), 'span': (6, 9), 'parent': 'VF', 'label': 'NX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM gut)
			(ADVX dann)
			(VF dann)
			(LK schlage)
			(MF ich)
			(VC vor)
			(NF
				(SIMPX
					(NX
						(VF
							(NX
								(NX mitte)
								[01;36m(PX[00m
									(APPR bis)
									(NX spatestens)[01;36m)[00m)
							(APPR bis)
							(NX mitte nachster woche)))
					(LK haben)
					(MF wir sie)
					(VC informiert)))
			(SIMPX das muste ja dann auch noch reichen wenn wir erst im august))))
Step:UNSET add
{'subtrees': ['APPR', 'NX'], 'family': ['NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ADV'), 'right siblings': [], 'left siblings': [(NX (NN mitte))], 'auto preterminal span': (7, 9), 'span': (7, 9), 'parent': 'NX', 'label': 'PX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP gut dann dann schlage ich vor mitte bis spatestens bis mitte nachster woche haben wir sie informiert das muste ja dann auch noch reichen wenn wir erst im august)

Sentence 189:
0 Initial errors
0 on fringe, 0 iterations

Sentence 190:
0 Initial errors
0 on fringe, 0 iterations

Sentence 191:
0 Initial errors
0 on fringe, 0 iterations

Sentence 192:
0 Initial errors
0 on fringe, 0 iterations

Sentence 193:
0 Initial errors
0 on fringe, 0 iterations

Sentence 194:
0 Initial errors
0 on fringe, 0 iterations

Sentence 195:
0 Initial errors
0 on fringe, 0 iterations

Sentence 196:
0 Initial errors
0 on fringe, 0 iterations

Sentence 197:
0 Initial errors
0 on fringe, 0 iterations

Sentence 198:
8 Initial errors
0 on fringe, 8 iterations
1 Error:Co-ordination
1 Error:Clause Attachment
1 Error:Unary
1 Error:Co-ordination
1 Error:UNSET add
1 Error:Single Word Phrase
1 Error:Unary
1 Error:Co-ordination
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM gut)
			[01;31m(P[00m
				[01;31m(SIMPX[00m
					(VF dann)
					(LK gibt)
					[01;33m(MF[00m (MF es auch hervorragende zugverbindungen)
					[01;31m(NF[00m
						[01;31m(R[00m
							(C die)
							(MF
								(ADJX
									[01;31m(ADJX[00m
										(ADJD stundlich)[01;31m)[00m
									(PX ab vier uhr dreiundvierzig))) [01;33mMF)[00m
							(VC bestehen)
							[01;31m(NF[00m
								[01;31m(SIMPX[00m
									(C wie)
									(MF ich hier grade)
									(VC lese)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
				(KON denn)
				(SIMPX ich habe den fahrplan vor mir liegen)[01;31m)[00m)))
Step:Co-ordination
{'subtrees': ['VF', 'LK', 'MF', 'NF'], 'family': ['SIMPX', 'KON', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'ADV', 'ADJA', 'NN', 'PRELS', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'VVFIN', 'KOUS', 'PPER', 'ADV', 'ADV', 'VVFIN', 'KON', 'PPER', 'VAFIN', 'ART', 'NN', 'APPR', 'PRF', 'VVINF'), 'right siblings': ['KON', 'SIMPX'], 'parent': 'P', 'auto preterminal span': (1, 27), 'span': (1, 19), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'Co-ordination', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM gut)
			[01;31m(P[00m
				(VF dann)
				(LK gibt)
				[01;33m(MF[00m (MF es auch hervorragende zugverbindungen)
				[01;31m(NF[00m
					[01;31m(R[00m
						(C die)
						(MF
							(ADJX
								[01;31m(ADJX[00m
									(ADJD stundlich)[01;31m)[00m
								(PX ab vier uhr dreiundvierzig))) [01;33mMF)[00m
						(VC bestehen)
						[01;31m(NF[00m
							[01;31m(SIMPX[00m
								(C wie)
								(MF ich hier grade)
								(VC lese)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
				(KON denn)
				(SIMPX ich habe den fahrplan vor mir liegen)[01;31m)[00m)))
Step:Clause Attachment
{'subtrees': ['VF', 'LK', 'MF', 'NF', 'KON', 'SIMPX'], 'family': ['DM', 'P'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'VVFIN', 'PPER', 'ADV', 'ADJA', 'NN', 'PRELS', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'VVFIN', 'KOUS', 'PPER', 'ADV', 'ADV', 'VVFIN', 'KON', 'PPER', 'VAFIN', 'ART', 'NN', 'APPR', 'PRF', 'VVINF'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (0, 27), 'span': (1, 27), 'left siblings': ['DM'], 'label': 'P', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM gut)
			(VF dann)
			(LK gibt)
			[01;33m(MF[00m (MF es auch hervorragende zugverbindungen)
			[01;31m(NF[00m
				[01;31m(R[00m
					(C die)
					(MF
						(ADJX
							[01;31m(ADJX[00m
								(ADJD stundlich)[01;31m)[00m
							(PX ab vier uhr dreiundvierzig))) [01;33mMF)[00m
					(VC bestehen)
					[01;31m(NF[00m
						[01;31m(SIMPX[00m
							(C wie)
							(MF ich hier grade)
							(VC lese)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
			(KON denn)
			(SIMPX ich habe den fahrplan vor mir liegen))))
Step:Unary
{'subtrees': ['C', 'MF', 'VC', 'NF'], 'family': ['R'], 'over_word': False, 'over words': False, 'auto preterminals': ('PRELS', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'VVFIN', 'KOUS', 'PPER', 'ADV', 'ADV', 'VVFIN'), 'right siblings': [], 'parent': 'NF', 'auto preterminal span': (7, 19), 'span': (7, 19), 'left siblings': [], 'label': 'R', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM gut)
			(VF dann)
			(LK gibt)
			[01;33m(MF[00m (MF es auch hervorragende zugverbindungen)
			[01;31m(NF[00m
				(C die)
				(MF
					(ADJX
						[01;31m(ADJX[00m
							(ADJD stundlich)[01;31m)[00m
						(PX ab vier uhr dreiundvierzig))) [01;33mMF)[00m
				(VC bestehen)
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						(C wie)
						(MF ich hier grade)
						(VC lese)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			(KON denn)
			(SIMPX ich habe den fahrplan vor mir liegen))))
Step:Co-ordination
{'subtrees': ['C', 'MF', 'VC', 'NF'], 'family': ['DM', 'VF', 'LK', 'MF', 'NF', 'KON', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'VVFIN', 'PPER', 'ADV', 'ADJA', 'NN', 'PRELS', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'VVFIN', 'KOUS', 'PPER', 'ADV', 'ADV', 'VVFIN', 'KON', 'PPER', 'VAFIN', 'ART', 'NN', 'APPR', 'PRF', 'VVINF'), 'right siblings': ['KON', 'SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 27), 'span': (7, 19), 'left siblings': ['DM', 'VF', 'LK', 'MF'], 'label': 'NF', 'classified_type': 'Co-ordination', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM gut)
			(VF dann)
			(LK gibt)
			[01;36m(MF[00m
				(MF es auch hervorragende zugverbindungen)
				(C die)
				(MF
					(ADJX
						[01;31m(ADJX[00m
							(ADJD stundlich)[01;31m)[00m
						(PX ab vier uhr dreiundvierzig)))[01;36m)[00m
			(VC bestehen)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					(C wie)
					(MF ich hier grade)
					(VC lese)[01;31m)[00m[01;31m)[00m
			(KON denn)
			(SIMPX ich habe den fahrplan vor mir liegen))))
Step:UNSET add
{'subtrees': ['MF', 'C', 'MF'], 'family': ['DM', 'VF', 'LK', 'MF', 'VC', 'NF', 'KON', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV', 'ADJA', 'NN', 'PRELS', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD'), 'right siblings': [(VC (VXFIN (VVFIN bestehen))), (NF (SIMPX (C (KOUS wie)) (MF (NX (PPER ich)) (ADVX (ADV hier)) (ADVX (ADV grade))) (VC (VXFIN (VVFIN lese))))), (KON denn), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VAFIN habe))) (MF (NX (ART den) (NN fahrplan)) (PX (APPR vor) (NX (PRF mir)))) (VC (VXINF (VVINF liegen))))], 'left siblings': [(DM (ITJ gut)), (VF (ADVX (ADV dann))), (LK (VXFIN (VVFIN gibt)))], 'auto preterminal span': (3, 13), 'span': (3, 13), 'parent': 'SU', 'label': 'MF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM gut)
			(VF dann)
			(LK gibt)
			(MF
				(MF es auch hervorragende zugverbindungen)
				(C die)
				(MF
					(ADJX
						[01;31m(ADJX[00m
							(ADJD stundlich)[01;31m)[00m
						(PX ab vier uhr dreiundvierzig))))
			(VC bestehen)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					(C wie)
					(MF ich hier grade)
					(VC lese)[01;31m)[00m[01;31m)[00m
			(KON denn)
			(SIMPX ich habe den fahrplan vor mir liegen))))
Step:Single Word Phrase
{'subtrees': ['ADJD'], 'family': ['ADJX', 'PX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADJD', 'APPR', 'CARD', 'NN', 'CARD'), 'right siblings': ['PX'], 'parent': 'ADJX', 'auto preterminal span': (8, 13), 'span': (8, 9), 'left siblings': [], 'label': 'ADJX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM gut)
			(VF dann)
			(LK gibt)
			(MF es auch hervorragende zugverbindungen die stundlich ab vier uhr dreiundvierzig)
			(VC bestehen)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					(C wie)
					(MF ich hier grade)
					(VC lese)[01;31m)[00m[01;31m)[00m
			(KON denn)
			(SIMPX ich habe den fahrplan vor mir liegen))))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['DM', 'VF', 'LK', 'MF', 'VC', 'NF', 'KON', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'VVFIN', 'PPER', 'ADV', 'ADJA', 'NN', 'PRELS', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'VVFIN', 'KOUS', 'PPER', 'ADV', 'ADV', 'VVFIN', 'KON', 'PPER', 'VAFIN', 'ART', 'NN', 'APPR', 'PRF', 'VVINF'), 'right siblings': ['KON', 'SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 27), 'span': (14, 19), 'left siblings': ['DM', 'VF', 'LK', 'MF', 'VC'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM gut)
			(VF dann)
			(LK gibt)
			(MF es auch hervorragende zugverbindungen die stundlich ab vier uhr dreiundvierzig)
			(VC bestehen)
			[01;31m(SIMPX[00m
				(C wie)
				(MF ich hier grade)
				(VC lese)[01;31m)[00m
			(KON denn)
			(SIMPX ich habe den fahrplan vor mir liegen))))
Step:Co-ordination
{'subtrees': ['C', 'MF', 'VC'], 'family': ['DM', 'VF', 'LK', 'MF', 'VC', 'SIMPX', 'KON', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'VVFIN', 'PPER', 'ADV', 'ADJA', 'NN', 'PRELS', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'VVFIN', 'KOUS', 'PPER', 'ADV', 'ADV', 'VVFIN', 'KON', 'PPER', 'VAFIN', 'ART', 'NN', 'APPR', 'PRF', 'VVINF'), 'right siblings': ['KON', 'SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 27), 'span': (14, 19), 'left siblings': ['DM', 'VF', 'LK', 'MF', 'VC'], 'label': 'SIMPX', 'classified_type': 'Co-ordination', 'type': 'remove'}
(TOP gut dann gibt es auch hervorragende zugverbindungen die stundlich ab vier uhr dreiundvierzig bestehen wie ich hier grade lese denn ich habe den fahrplan vor mir liegen)

Sentence 199:
0 Initial errors
0 on fringe, 0 iterations

Sentence 200:
0 Initial errors
0 on fringe, 0 iterations

Sentence 201:
0 Initial errors
0 on fringe, 0 iterations

Sentence 202:
0 Initial errors
0 on fringe, 0 iterations

Sentence 203:
0 Initial errors
0 on fringe, 0 iterations

Sentence 204:
0 Initial errors
0 on fringe, 0 iterations

Sentence 205:
0 Initial errors
0 on fringe, 0 iterations

Sentence 206:
0 Initial errors
0 on fringe, 0 iterations

Sentence 207:
0 Initial errors
0 on fringe, 0 iterations

Sentence 208:
0 Initial errors
0 on fringe, 0 iterations

Sentence 209:
0 Initial errors
0 on fringe, 0 iterations

Sentence 210:
0 Initial errors
0 on fringe, 0 iterations

Sentence 211:
0 Initial errors
0 on fringe, 0 iterations

Sentence 212:
0 Initial errors
0 on fringe, 0 iterations

Sentence 213:
0 Initial errors
0 on fringe, 0 iterations

Sentence 214:
0 Initial errors
0 on fringe, 0 iterations

Sentence 215:
2 Initial errors
0 on fringe, 2 iterations
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM ja)
			[01;36m(LV[00m
				(SIMPX
					(C wenn)
					(MF ihnen oktober nicht so gut)
					(VC past))[01;36m)[00m
			[01;31m(SIMPX[00m
				(VF da)
				(LK habe)
				(MF ich auch urlaub)
				(NF ende oktober)[01;31m)[00m
			(DM also))))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['DM', 'LV', 'SIMPX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'NN', 'PTKNEG', 'ADV', 'ADJD', 'VVFIN'), 'right siblings': [(SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VAFIN habe))) (MF (NX (PPER ich)) (ADVX (ADV auch)) (NX (NN urlaub))) (NF (NX (NX (NN ende)) (NX (NN oktober))))), (DM (ADVX (ADV also)))], 'left siblings': [(DM (PTKANT ja))], 'auto preterminal span': (1, 8), 'span': (1, 8), 'parent': 'SU', 'label': 'LV', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM ja)
			(LV wenn ihnen oktober nicht so gut past)
			[01;31m(SIMPX[00m
				(VF da)
				(LK habe)
				(MF ich auch urlaub)
				(NF ende oktober)[01;31m)[00m
			(DM also))))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'NF'], 'family': ['DM', 'LV', 'SIMPX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'KOUS', 'PPER', 'NN', 'PTKNEG', 'ADV', 'ADJD', 'VVFIN', 'ADV', 'VAFIN', 'PPER', 'ADV', 'NN', 'NN', 'NN', 'ADV'), 'right siblings': ['DM'], 'parent': 'SU', 'auto preterminal span': (0, 16), 'span': (8, 15), 'left siblings': ['DM', 'LV'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ja wenn ihnen oktober nicht so gut past da habe ich auch urlaub ende oktober also)

Sentence 216:
0 Initial errors
0 on fringe, 0 iterations

Sentence 217:
0 Initial errors
0 on fringe, 0 iterations

Sentence 218:
0 Initial errors
0 on fringe, 0 iterations

Sentence 219:
0 Initial errors
0 on fringe, 0 iterations

Sentence 220:
0 Initial errors
0 on fringe, 0 iterations

Sentence 221:
12 Initial errors
0 on fringe, 7 iterations
3 Error:Modifier Attachment
3 Error:UNSET move
2 Error:PP Attachment
1 Error:Modifier Attachment
1 Error:Unary
1 Error:Single Word Phrase
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SIMPX[00m
	(TOP
		(TURN
			(SU
				(SIMPX
					(VF ab munchen)
					(LK dauert)
					(MF
						(NX es)
						[01;36m(NX[00m [01;31m(PX[00m
							[01;36m(NX[00m
								(ADVX nur)
								[01;31m(ADVX[00m
									(ADV etwas)[01;31m)[00m[01;36m)[00m
							[01;36m(PX[00m
								(APPR uber)
								(NX vier stunden)[01;36m)[00m[01;31m)[00m[01;36m)[00m))
				[01;31m(SIMPX[00m
					[01;31m(KOORD[00m
						(KON und)[01;31m)[00m
					[01;36m(SIMPX[00m
						(VF wir)
						(LK konnten)
						(MF ab halb sechs schon)
						(VC losfahren)
						[01;36m(SIMPX[00m
							(NF
								[01;31m(SIMPX[00m
									(C so das)
									(MF wir mittags die geschaftspartner)
									(VC treffen)[01;31m)[00m
								[01;36m(NF[00m
									(PX
										(KON oder)
										(PX am fruhen nachmittag))[01;36m)[00m)[01;36m)[00m[01;36m)[00m[01;31m)[00m)))[01;36m)[00m
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'ADVX', 'ADVX', 'PX'], 'mover info': [('ADVX', (4, 5)), ('ADVX', (5, 6))], 'old_family': ['ADVX', 'ADVX', 'APPR', 'NX'], 'start left siblings': [], 'auto preterminals': ('PPER', 'ADV', 'ADV', 'APPR', 'CARD', 'NN'), 'start right siblings': ['APPR', 'NX'], 'end left siblings': ['NX'], 'auto preterminal span': (3, 9), 'adding node already present': False, 'movers': ['ADVX', 'ADVX'], 'old_parent': 'PX', 'added and moved': True, 'end right siblings': ['PX'], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'NF'}
[01;36m(SIMPX[00m
	(TOP
		(TURN
			(SU
				(SIMPX
					(VF ab munchen)
					(LK dauert)
					(MF
						(NX es)
						(NX
							[01;36m(NX[00m
								(ADVX nur)
								[01;31m(ADVX[00m
									(ADV etwas)[01;31m)[00m[01;36m)[00m
							(PX uber vier stunden))))
				[01;31m(SIMPX[00m
					[01;31m(KOORD[00m
						(KON und)[01;31m)[00m
					[01;36m(SIMPX[00m
						(VF wir)
						(LK konnten)
						(MF ab halb sechs schon)
						(VC losfahren)
						[01;36m(SIMPX[00m
							(NF
								[01;31m(SIMPX[00m
									(C so das)
									(MF wir mittags die geschaftspartner)
									(VC treffen)[01;31m)[00m
								[01;36m(NF[00m
									(PX
										(KON oder)
										(PX am fruhen nachmittag))[01;36m)[00m)[01;36m)[00m[01;36m)[00m[01;31m)[00m)))[01;36m)[00m
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SIMPX', 'KOORD', 'SIMPX'], 'mover info': [('KOORD', (9, 10))], 'old_family': ['KOORD', 'VF', 'LK', 'MF', 'VC', 'NF'], 'start left siblings': [], 'auto preterminals': ('APPR', 'NE', 'VVFIN', 'PPER', 'ADV', 'ADV', 'APPR', 'CARD', 'NN', 'KON', 'PPER', 'VMFIN', 'APPR', 'ADJD', 'CARD', 'ADV', 'VVINF', 'KOUS', 'KOUS', 'PPER', 'ADV', 'ART', 'NN', 'VVFIN', 'KON', 'APPRART', 'ADJA', 'NN'), 'start right siblings': ['VF', 'LK', 'MF', 'VC', 'NF'], 'end left siblings': ['SIMPX'], 'auto preterminal span': (0, 28), 'adding node already present': False, 'movers': ['KOORD'], 'old_parent': 'SIMPX', 'POS confusion': ('KON', 'KON'), 'added and moved': True, 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'NF'}
(TOP
	(SIMPX
		(TURN
			(SU
				(SIMPX
					(VF ab munchen)
					(LK dauert)
					(MF
						(NX es)
						(NX
							[01;36m(NX[00m
								(ADVX nur)
								[01;31m(ADVX[00m
									(ADV etwas)[01;31m)[00m[01;36m)[00m
							(PX uber vier stunden))))
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				(SIMPX
					(VF wir)
					(LK konnten)
					(MF ab halb sechs schon)
					(VC losfahren)
					[01;36m(SIMPX[00m
						(NF
							[01;31m(SIMPX[00m
								(C so das)
								(MF wir mittags die geschaftspartner)
								(VC treffen)[01;31m)[00m
							[01;36m(NF[00m
								(PX
									(KON oder)
									(PX am fruhen nachmittag))[01;36m)[00m)[01;36m)[00m)))))
Step:PP Attachment
{'new_parent': 'SIMPX', 'new_family': ['C', 'MF', 'VC', 'PX'], 'mover info': [('PX', (24, 28))], 'old_family': ['SIMPX', 'PX'], 'start left siblings': ['SIMPX'], 'auto preterminals': ('KOUS', 'KOUS', 'PPER', 'ADV', 'ART', 'NN', 'VVFIN', 'KON', 'APPRART', 'ADJA', 'NN'), 'start right siblings': [], 'end left siblings': ['C', 'MF', 'VC'], 'auto preterminal span': (17, 28), 'movers': ['PX'], 'old_parent': 'NF', 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(SIMPX
		(TURN
			(SU
				(SIMPX
					(VF ab munchen)
					(LK dauert)
					(MF
						(NX es)
						(NX
							[01;36m(NX[00m
								(ADVX nur)
								[01;31m(ADVX[00m
									(ADV etwas)[01;31m)[00m[01;36m)[00m
							(PX uber vier stunden))))
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				(SIMPX
					(VF wir)
					(LK konnten)
					(MF ab halb sechs schon)
					(VC losfahren)
					(NF
						(SIMPX
							(C so das)
							(MF wir mittags die geschaftspartner)
							(VC treffen)
							[01;36m(NF[00m
								(PX
									(KON oder)
									(PX am fruhen nachmittag))[01;36m)[00m)))))))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'ADVX'], 'family': ['NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV'), 'right siblings': [(PX (APPR uber) (NX (ADJX (CARD vier)) (NN stunden)))], 'left siblings': [], 'auto preterminal span': (4, 6), 'span': (4, 6), 'parent': 'NX', 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(SIMPX
		(TURN
			(SU
				(SIMPX
					(VF ab munchen)
					(LK dauert)
					(MF
						(NX es)
						(NX
							(NX
								(ADVX nur)
								[01;31m(ADVX[00m
									(ADV etwas)[01;31m)[00m)
							(PX uber vier stunden))))
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				(SIMPX
					(VF wir)
					(LK konnten)
					(MF ab halb sechs schon)
					(VC losfahren)
					(NF
						(SIMPX
							(C so das)
							(MF wir mittags die geschaftspartner)
							(VC treffen)
							[01;36m(NF[00m
								(PX
									(KON oder)
									(PX am fruhen nachmittag))[01;36m)[00m)))))))
Step:Unary
{'subtrees': ['PX'], 'family': ['C', 'MF', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'APPRART', 'ADJA', 'NN'), 'right siblings': [], 'left siblings': [(C (KOUS so) (KOUS das)), (MF (NX (PPER wir)) (ADVX (ADV mittags)) (NX (ART die) (NN geschaftspartner))), (VC (VXFIN (VVFIN treffen)))], 'auto preterminal span': (24, 28), 'span': (24, 28), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(SIMPX
		(TURN
			(SU
				(SIMPX
					(VF ab munchen)
					(LK dauert)
					(MF
						(NX es)
						(NX
							(NX
								(ADVX nur)
								[01;31m(ADVX[00m
									(ADV etwas)[01;31m)[00m)
							(PX uber vier stunden))))
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				(SIMPX wir konnten ab halb sechs schon losfahren so das wir mittags die geschaftspartner treffen oder am fruhen nachmittag)))))
Step:Single Word Phrase
{'subtrees': ['ADV'], 'family': ['ADVX', 'ADVX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADV', 'ADV'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (4, 6), 'span': (5, 6), 'left siblings': ['ADVX'], 'label': 'ADVX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(SIMPX
		(TURN
			(SU
				(SIMPX ab munchen dauert es nur etwas uber vier stunden)
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				(SIMPX wir konnten ab halb sechs schon losfahren so das wir mittags die geschaftspartner treffen oder am fruhen nachmittag)))))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['SIMPX', 'KOORD', 'SIMPX'], 'over_word': True, 'over words': True, 'auto preterminals': ('APPR', 'NE', 'VVFIN', 'PPER', 'ADV', 'ADV', 'APPR', 'CARD', 'NN', 'KON', 'PPER', 'VMFIN', 'APPR', 'ADJD', 'CARD', 'ADV', 'VVINF', 'KOUS', 'KOUS', 'PPER', 'ADV', 'ART', 'NN', 'VVFIN', 'KON', 'APPRART', 'ADJA', 'NN'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 28), 'span': (9, 10), 'left siblings': ['SIMPX'], 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP ab munchen dauert es nur etwas uber vier stunden und wir konnten ab halb sechs schon losfahren so das wir mittags die geschaftspartner treffen oder am fruhen nachmittag)

Sentence 222:
0 Initial errors
0 on fringe, 0 iterations

Sentence 223:
0 Initial errors
0 on fringe, 0 iterations

Sentence 224:
0 Initial errors
0 on fringe, 0 iterations

Sentence 225:
2 Initial errors
0 on fringe, 1 iterations
2 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(SIMPX
				(LK nehmen)
				(MF
					[01;36m(MF[00m
						(NX wir)
						(ADVX dann)
						(ADVX doch)
						[01;31m(NX[00m
							(NX das)
							(PX in der mitte)[01;31m)[00m[01;36m)[00m
					(ADVX vielleicht)))
			(SIMPX das ware das zentralhotel))))
Step:PP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'ADVX', 'ADVX', 'NX', 'PX', 'ADVX'], 'mover info': [('PX', (5, 8))], 'old_family': ['NX', 'PX'], 'start left siblings': ['NX'], 'auto preterminals': ('PPER', 'ADV', 'ADV', 'PDS', 'APPR', 'ART', 'NN', 'ADV'), 'start right siblings': [], 'end left siblings': ['NX', 'ADVX', 'ADVX', 'NX'], 'auto preterminal span': (1, 9), 'adding node already present': False, 'movers': ['PX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': ['ADVX'], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'MF'}
(TOP nehmen wir dann doch das in der mitte vielleicht das ware das zentralhotel)

Sentence 226:
0 Initial errors
0 on fringe, 0 iterations

Sentence 227:
5 Initial errors
0 on fringe, 3 iterations
3 Error:UNSET move
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SIMPX[00m
	(TOP
		(TURN
			(SU
				[01;31m(SIMPX[00m
					(KOORD und)
					[01;36m(LV[00m
						[01;36m(SIMPX[00m
							(C ob)
							(MF wir am abend noch was)
							(VC unternehmen)[01;36m)[00m[01;36m)[00m[01;31m)[00m
				[01;31m(SIMPX[00m
					(VF das)
					(LK konnen)
					(MF wir ja dort)
					(VC absprechen)[01;31m)[00m)))[01;36m)[00m
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['KOORD', 'SIMPX', 'SIMPX'], 'mover info': [('KOORD', (0, 1))], 'old_family': ['KOORD', 'C', 'MF', 'VC'], 'start left siblings': [], 'auto preterminals': ('KON', 'KOUS', 'PPER', 'APPRART', 'NN', 'ADV', 'PIS', 'VVFIN', 'PDS', 'VMFIN', 'PPER', 'ADV', 'ADV', 'VVINF'), 'start right siblings': ['C', 'MF', 'VC'], 'end left siblings': [], 'auto preterminal span': (0, 14), 'adding node already present': True, 'movers': ['KOORD'], 'old_parent': 'SIMPX', 'POS confusion': ('KON', 'KON'), 'added and moved': True, 'end right siblings': ['SIMPX', 'SIMPX'], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'LV'}
(TOP
	(SIMPX
		(TURN
			(SU
				(KOORD und)
				[01;36m(LV[00m
					(SIMPX
						(C ob)
						(MF wir am abend noch was)
						(VC unternehmen))[01;36m)[00m
				[01;31m(SIMPX[00m
					(VF das)
					(LK konnen)
					(MF wir ja dort)
					(VC absprechen)[01;31m)[00m))))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['KOORD', 'LV', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'APPRART', 'NN', 'ADV', 'PIS', 'VVFIN'), 'right siblings': [(SIMPX (VF (NX (PDS das))) (LK (VXFIN (VMFIN konnen))) (MF (NX (PPER wir)) (ADVX (ADV ja)) (ADVX (ADV dort))) (VC (VXINF (VVINF absprechen))))], 'left siblings': [(KOORD (KON und))], 'auto preterminal span': (1, 8), 'span': (1, 8), 'parent': 'SU', 'label': 'LV', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(SIMPX
		(TURN
			(SU
				(KOORD und)
				(LV ob wir am abend noch was unternehmen)
				[01;31m(SIMPX[00m
					(VF das)
					(LK konnen)
					(MF wir ja dort)
					(VC absprechen)[01;31m)[00m))))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['KOORD', 'LV', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'KOUS', 'PPER', 'APPRART', 'NN', 'ADV', 'PIS', 'VVFIN', 'PDS', 'VMFIN', 'PPER', 'ADV', 'ADV', 'VVINF'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (0, 14), 'span': (8, 14), 'left siblings': ['KOORD', 'LV'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP und ob wir am abend noch was unternehmen das konnen wir ja dort absprechen)

Sentence 228:
0 Initial errors
0 on fringe, 0 iterations

Sentence 229:
0 Initial errors
0 on fringe, 0 iterations

Sentence 230:
0 Initial errors
0 on fringe, 0 iterations

Sentence 231:
0 Initial errors
0 on fringe, 0 iterations

Sentence 232:
0 Initial errors
0 on fringe, 0 iterations

Sentence 233:
0 Initial errors
0 on fringe, 0 iterations

Sentence 234:
0 Initial errors
0 on fringe, 0 iterations

Sentence 235:
0 Initial errors
0 on fringe, 0 iterations

Sentence 236:
0 Initial errors
0 on fringe, 0 iterations

Sentence 237:
0 Initial errors
0 on fringe, 0 iterations

Sentence 238:
0 Initial errors
0 on fringe, 0 iterations

Sentence 239:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			[01;31m(DM[00m
				(ADVX
					(ADV so))[01;31m)[00m
			(SIMPX wie wollen wir denn hinkommen))))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PWAV', 'VMFIN', 'PPER', 'ADV', 'VVINF'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 6), 'span': (0, 1), 'left siblings': [], 'label': 'DM', 'classified_type': 'Unary', 'type': 'remove'}
(TOP so wie wollen wir denn hinkommen)

Sentence 240:
1 Initial errors
0 on fringe, 1 iterations
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX
				(LK hatten)
				(MF
					(NX sie)
					[01;31m(NX[00m
						(NX lust)
						(PX auf eine zugfahrt)[01;31m)[00m)))))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'NN', 'APPR', 'ART', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (2, 7), 'span': (3, 7), 'left siblings': ['NX'], 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP ja hatten sie lust auf eine zugfahrt)

Sentence 241:
0 Initial errors
0 on fringe, 0 iterations

Sentence 242:
0 Initial errors
0 on fringe, 0 iterations

Sentence 243:
0 Initial errors
0 on fringe, 0 iterations

Sentence 244:
4 Initial errors
0 on fringe, 3 iterations
2 Error:Modifier Attachment
1 Error:UNSET remove
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM also)
			[01;31m(SIMPX[00m
				(VF es)
				(LK fahrt)
				(MF
					[01;31m(PX[00m
						(PX ab vier uhr dreiundvierzig)
						(ADJX stundlich)[01;31m)[00m
					(NX ein zug))[01;31m)[00m
			(SIMPX
				(KOORD und)
				(VF die fahrtdauer)
				(LK betragt)
				[01;36m(NX[00m
					(MF
						(ADVX ubrigens)
						[01;31m(NX[00m
							(ADJX viereinhalb)
							(NN stunden)[01;31m)[00m)[01;36m)[00m))))
Step:Modifier Attachment
{'new_parent': 'NX', 'new_family': ['ADVX', 'ADJX', 'NN'], 'mover info': [('ADVX', (14, 15))], 'old_family': ['ADVX', 'NX'], 'start left siblings': [], 'auto preterminals': ('ADV', 'CARD', 'NN'), 'start right siblings': ['NX'], 'end left siblings': [], 'auto preterminal span': (14, 17), 'movers': ['ADVX'], 'old_parent': 'MF', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['ADJX', 'NN'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU
			(DM also)
			[01;31m(SIMPX[00m
				(VF es)
				(LK fahrt)
				(MF
					[01;31m(PX[00m
						(PX ab vier uhr dreiundvierzig)
						(ADJX stundlich)[01;31m)[00m
					(NX ein zug))[01;31m)[00m
			(SIMPX und die fahrtdauer betragt ubrigens viereinhalb stunden))))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['DM', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPER', 'VVFIN', 'APPR', 'CARD', 'NN', 'CARD', 'ADJD', 'ART', 'NN', 'KON', 'ART', 'NN', 'VVFIN', 'ADV', 'CARD', 'NN'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 17), 'span': (1, 10), 'left siblings': ['DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM also)
			(VF es)
			(LK fahrt)
			(MF
				[01;31m(PX[00m
					(PX ab vier uhr dreiundvierzig)
					(ADJX stundlich)[01;31m)[00m
				(NX ein zug))
			(SIMPX und die fahrtdauer betragt ubrigens viereinhalb stunden))))
Step:Modifier Attachment
{'subtrees': ['PX', 'ADJX'], 'family': ['PX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'CARD', 'NN', 'CARD', 'ADJD', 'ART', 'NN'), 'right siblings': ['NX'], 'parent': 'MF', 'auto preterminal span': (3, 10), 'span': (3, 8), 'left siblings': [], 'label': 'PX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP also es fahrt ab vier uhr dreiundvierzig stundlich ein zug und die fahrtdauer betragt ubrigens viereinhalb stunden)

Sentence 245:
0 Initial errors
0 on fringe, 0 iterations

Sentence 246:
0 Initial errors
0 on fringe, 0 iterations

Sentence 247:
9 Initial errors
0 on fringe, 8 iterations
2 Error:Different label
1 Error:Co-ordination
1 Error:Clause Attachment
1 Error:UNSET add
1 Error:Unary
1 Error:PP Attachment
1 Error:UNSET remove
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX [01;33m(SIMPX[00m
				(VF die anderen beiden)
				[01;31m(FKOORD[00m
					[01;31m(LKMN[00m
						(LK sind)
						(MF zwar beide zentral)
						[01;31m(NF[00m
							[01;31m(PX[00m
								(ADVX aber)
								(ADVX nicht)
								[01;31m(PX[00m
									(APPR in)
									(NX der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m [01;33mSIMPX)[00m
					(KON und)
					[01;36m(SIMPX[00m [01;31m(LKM[00m
						(LK liegen)
						(MF auch etwas hoher)[01;31m)[00m[01;36m)[00m[01;31m)[00m)
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF ich)
				(LK weis)
				(MF nicht)
				(NF wie ihr budget aussieht)[01;31m)[00m
			(SIMPX aber mir wurde eigentlich dieses schloshotel hannover am besten passen))))
Step:Different label
{'family': ['LKMN', 'KON', 'SIMPX'], 'auto preterminal span': (16, 20), 'span': (16, 20), 'subtrees': ['LK', 'MF'], 'parent': 'FKOORD', 'over_word': False, 'auto preterminals': ('VVFIN', 'ADV', 'ADV', 'ADJD'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('LKM', 'SIMPX')}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX [01;33m(SIMPX[00m
				(VF die anderen beiden)
				[01;31m(FKOORD[00m
					[01;31m(LKMN[00m
						(LK sind)
						(MF zwar beide zentral)
						[01;31m(NF[00m
							[01;31m(PX[00m
								(ADVX aber)
								(ADVX nicht)
								[01;31m(PX[00m
									(APPR in)
									(NX der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m [01;33mSIMPX)[00m
					(KON und)
					(SIMPX liegen auch etwas hoher)[01;31m)[00m)
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF ich)
				(LK weis)
				(MF nicht)
				(NF wie ihr budget aussieht)[01;31m)[00m
			(SIMPX aber mir wurde eigentlich dieses schloshotel hannover am besten passen))))
Step:Co-ordination
{'subtrees': ['LK', 'MF', 'NF'], 'family': ['LKMN', 'KON', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'ADV', 'PIS', 'ADJD', 'ADV', 'PTKNEG', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'KON', 'VVFIN', 'ADV', 'ADV', 'ADJD'), 'right siblings': ['KON', 'SIMPX'], 'parent': 'FKOORD', 'auto preterminal span': (4, 20), 'span': (4, 15), 'left siblings': [], 'label': 'LKMN', 'classified_type': 'Co-ordination', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX [01;33m(SIMPX[00m
				(VF die anderen beiden)
				[01;31m(FKOORD[00m
					(LK sind)
					(MF zwar beide zentral)
					[01;31m(NF[00m
						[01;31m(PX[00m
							(ADVX aber)
							(ADVX nicht)
							[01;31m(PX[00m
								(APPR in)
								(NX der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m[01;31m)[00m [01;33mSIMPX)[00m
					(KON und)
					(SIMPX liegen auch etwas hoher)[01;31m)[00m)
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF ich)
				(LK weis)
				(MF nicht)
				(NF wie ihr budget aussieht)[01;31m)[00m
			(SIMPX aber mir wurde eigentlich dieses schloshotel hannover am besten passen))))
Step:Clause Attachment
{'subtrees': ['LK', 'MF', 'NF', 'KON', 'SIMPX'], 'family': ['VF', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'ADJA', 'PIS', 'VAFIN', 'ADV', 'PIS', 'ADJD', 'ADV', 'PTKNEG', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'KON', 'VVFIN', 'ADV', 'ADV', 'ADJD'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (1, 20), 'span': (4, 20), 'left siblings': ['VF'], 'label': 'FKOORD', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX
				[01;36m(SIMPX[00m
					(VF die anderen beiden)
					(LK sind)
					(MF zwar beide zentral)
					[01;31m(NF[00m
						[01;31m(PX[00m
							(ADVX aber)
							(ADVX nicht)
							[01;31m(PX[00m
								(APPR in)
								(NX der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m
				(KON und)
				(SIMPX liegen auch etwas hoher))
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF ich)
				(LK weis)
				(MF nicht)
				(NF wie ihr budget aussieht)[01;31m)[00m
			(SIMPX aber mir wurde eigentlich dieses schloshotel hannover am besten passen))))
Step:UNSET add
{'subtrees': ['VF', 'LK', 'MF', 'NF'], 'family': ['SIMPX', 'KON', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'ADJA', 'PIS', 'VAFIN', 'ADV', 'PIS', 'ADJD', 'ADV', 'PTKNEG', 'APPR', 'ART', 'NN', 'APPRART', 'NN'), 'right siblings': [(KON und), (SIMPX (LK (VXFIN (VVFIN liegen))) (MF (ADVX (ADV auch)) (ADJX (ADVX (ADV etwas)) (ADJD hoher))))], 'left siblings': [], 'auto preterminal span': (1, 15), 'span': (1, 15), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX
				(SIMPX
					(VF die anderen beiden)
					(LK sind)
					(MF zwar beide zentral)
					[01;31m(NF[00m
						[01;31m(PX[00m
							(ADVX aber)
							(ADVX nicht)
							[01;31m(PX[00m
								(APPR in)
								(NX der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m[01;31m)[00m)
				(KON und)
				(SIMPX liegen auch etwas hoher))
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF ich)
				(LK weis)
				(MF nicht)
				(NF wie ihr budget aussieht)[01;31m)[00m
			(SIMPX aber mir wurde eigentlich dieses schloshotel hannover am besten passen))))
Step:Unary
{'subtrees': ['PX'], 'family': ['VF', 'LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'ADJA', 'PIS', 'VAFIN', 'ADV', 'PIS', 'ADJD', 'ADV', 'PTKNEG', 'APPR', 'ART', 'NN', 'APPRART', 'NN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (1, 15), 'span': (8, 15), 'left siblings': ['VF', 'LK', 'MF'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX
				(SIMPX
					(VF die anderen beiden)
					(LK sind)
					(MF zwar beide zentral)
					[01;31m(PX[00m
						(ADVX aber)
						(ADVX nicht)
						[01;31m(PX[00m
							(APPR in)
							(NX der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m)
				(KON und)
				(SIMPX liegen auch etwas hoher))
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF ich)
				(LK weis)
				(MF nicht)
				(NF wie ihr budget aussieht)[01;31m)[00m
			(SIMPX aber mir wurde eigentlich dieses schloshotel hannover am besten passen))))
Step:PP Attachment
{'subtrees': ['ADVX', 'ADVX', 'PX'], 'family': ['VF', 'LK', 'MF', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'ADJA', 'PIS', 'VAFIN', 'ADV', 'PIS', 'ADJD', 'ADV', 'PTKNEG', 'APPR', 'ART', 'NN', 'APPRART', 'NN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (1, 15), 'span': (8, 15), 'left siblings': ['VF', 'LK', 'MF'], 'label': 'PX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX
				(SIMPX
					(VF die anderen beiden)
					(LK sind)
					(MF zwar beide zentral)
					(ADVX aber)
					(ADVX nicht)
					[01;31m(PX[00m
						(APPR in)
						(NX der nahe vom hauptbahnhof)[01;31m)[00m)
				(KON und)
				(SIMPX liegen auch etwas hoher))
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF ich)
				(LK weis)
				(MF nicht)
				(NF wie ihr budget aussieht)[01;31m)[00m
			(SIMPX aber mir wurde eigentlich dieses schloshotel hannover am besten passen))))
Step:UNSET remove
{'subtrees': ['APPR', 'NX'], 'family': ['VF', 'LK', 'MF', 'ADVX', 'ADVX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'ADJA', 'PIS', 'VAFIN', 'ADV', 'PIS', 'ADJD', 'ADV', 'PTKNEG', 'APPR', 'ART', 'NN', 'APPRART', 'NN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (1, 15), 'span': (10, 15), 'left siblings': ['VF', 'LK', 'MF', 'ADVX', 'ADVX'], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX die anderen beiden sind zwar beide zentral aber nicht in der nahe vom hauptbahnhof und liegen auch etwas hoher)
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF ich)
				(LK weis)
				(MF nicht)
				(NF wie ihr budget aussieht)[01;31m)[00m
			(SIMPX aber mir wurde eigentlich dieses schloshotel hannover am besten passen))))
Step:UNSET remove
{'subtrees': ['KOORD', 'VF', 'LK', 'MF', 'NF'], 'family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ART', 'ADJA', 'PIS', 'VAFIN', 'ADV', 'PIS', 'ADJD', 'ADV', 'PTKNEG', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'KON', 'VVFIN', 'ADV', 'ADV', 'ADJD', 'KON', 'PPER', 'VVFIN', 'PTKNEG', 'KOUS', 'PPOSAT', 'NN', 'VVFIN', 'KON', 'PPER', 'VAFIN', 'ADV', 'PDAT', 'NE', 'NE', 'PTKA', 'ADJD', 'VVINF'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 38), 'span': (20, 28), 'left siblings': ['DM', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ja die anderen beiden sind zwar beide zentral aber nicht in der nahe vom hauptbahnhof und liegen auch etwas hoher und ich weis nicht wie ihr budget aussieht aber mir wurde eigentlich dieses schloshotel hannover am besten passen)

Sentence 248:
0 Initial errors
0 on fringe, 0 iterations

Sentence 249:
5 Initial errors
0 on fringe, 2 iterations
3 Error:Modifier Attachment
2 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX
				(VF da)
				(LK musten)
				(MF wir uns)
				(VC erkundigen)
				(NF
					(SIMPX
						(C ob)
						[01;31m(MF[00m
							[01;36m(MF[00m
								(NX die)
								(ADVX abends)[01;36m)[00m
							[01;36m(VXINF[00m [01;31m(ADJX[00m [01;33m(VC[00m
								(ADJD geoffnet)[01;31m)[00m[01;36m)[00m[01;31m)[00m
						(VC haben)))) [01;33mVC)[00m
			(SIMPX aber museumsbesuche finde ich auch sehr reizvoll))))
Step:Modifier Attachment
{'new_parent': 'SIMPX', 'new_family': ['C', 'MF', 'ADJX', 'VC'], 'mover info': [('ADJX', (9, 10))], 'old_family': ['NX', 'ADVX', 'ADJX'], 'start left siblings': ['NX', 'ADVX'], 'auto preterminals': ('KOUS', 'PDS', 'ADV', 'ADJD', 'VAFIN'), 'start right siblings': [], 'end left siblings': ['C', 'MF'], 'auto preterminal span': (6, 11), 'adding node already present': False, 'movers': ['ADJX'], 'old_parent': 'MF', 'POS confusion': ('ADJD', 'ADJD'), 'added and moved': True, 'end right siblings': ['VC'], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'VC'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX
				(VF da)
				(LK musten)
				(MF wir uns)
				(VC erkundigen)
				(NF
					(SIMPX
						(C ob)
						(MF die abends)
						(VC
							[01;36m(VXINF[00m [01;31m(ADJX[00m
								(ADJD geoffnet)[01;31m)[00m[01;36m)[00m
							(VC haben)))))
			(SIMPX aber museumsbesuche finde ich auch sehr reizvoll))))
Step:Single Word Phrase
{'family': ['VXINF', 'VC'], 'auto preterminal span': (9, 10), 'span': (9, 10), 'subtrees': ['ADJD'], 'parent': 'VC', 'over_word': True, 'auto preterminals': ('ADJD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'VXINF')}
(TOP ja da musten wir uns erkundigen ob die abends geoffnet haben aber museumsbesuche finde ich auch sehr reizvoll)

Sentence 250:
0 Initial errors
0 on fringe, 0 iterations

Sentence 251:
0 Initial errors
0 on fringe, 0 iterations

Sentence 252:
0 Initial errors
0 on fringe, 0 iterations

Sentence 253:
0 Initial errors
0 on fringe, 0 iterations

Sentence 254:
0 Initial errors
0 on fringe, 0 iterations

Sentence 255:
0 Initial errors
0 on fringe, 0 iterations

Sentence 256:
0 Initial errors
0 on fringe, 0 iterations

Sentence 257:
0 Initial errors
0 on fringe, 0 iterations

Sentence 258:
0 Initial errors
0 on fringe, 0 iterations

Sentence 259:
0 Initial errors
0 on fringe, 0 iterations

Sentence 260:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			[01;36m(ADJX[00m [01;31m(VXINF[00m
				(VVPP abgedeckt)[01;31m)[00m[01;36m)[00m
			(DM ja))))
Step:Single Word Phrase
{'family': ['ADJX', 'DM'], 'auto preterminal span': (0, 1), 'span': (0, 1), 'subtrees': ['VVPP'], 'parent': 'SU', 'over_word': True, 'auto preterminals': ('VVPP',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VXINF', 'ADJX')}
(TOP abgedeckt ja)

Sentence 261:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			[01;36m(ADJX[00m [01;31m(VXINF[00m
				(VVPP abgedeckt)[01;31m)[00m[01;36m)[00m
			(DM ja))))
Step:Single Word Phrase
{'family': ['ADJX', 'DM'], 'auto preterminal span': (0, 1), 'span': (0, 1), 'subtrees': ['VVPP'], 'parent': 'SU', 'over_word': True, 'auto preterminals': ('VVPP',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VXINF', 'ADJX')}
(TOP abgedeckt ja)

Sentence 262:
2 Initial errors
0 on fringe, 2 iterations
1 Error:Unary
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM ja)
			(DM gut)
			(ADVX dann)
			[01;31m(DM[00m
				(NX
					(PIDAT vielen)
					(NN dank))[01;31m)[00m
			[01;31m(ADVX[00m
				(ADVX erst)
				(ADVX mal)[01;31m)[00m
			(DM und auf wiedersehen))))
Step:Unary
{'subtrees': ['NX'], 'family': ['DM', 'DM', 'ADVX', 'DM', 'ADVX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'ADV', 'PIDAT', 'NN', 'ADV', 'ADV', 'KON', 'APPR', 'NN'), 'right siblings': ['ADVX', 'DM'], 'parent': 'SU', 'auto preterminal span': (0, 10), 'span': (3, 5), 'left siblings': ['DM', 'DM', 'ADVX'], 'label': 'DM', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM ja)
			(DM gut)
			(ADVX dann)
			(NX vielen dank)
			[01;31m(ADVX[00m
				(ADVX erst)
				(ADVX mal)[01;31m)[00m
			(DM und auf wiedersehen))))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'ADVX'], 'family': ['DM', 'DM', 'ADVX', 'NX', 'ADVX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'ADV', 'PIDAT', 'NN', 'ADV', 'ADV', 'KON', 'APPR', 'NN'), 'right siblings': ['DM'], 'parent': 'SU', 'auto preterminal span': (0, 10), 'span': (5, 7), 'left siblings': ['DM', 'DM', 'ADVX', 'NX'], 'label': 'ADVX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP ja gut dann vielen dank erst mal und auf wiedersehen)

Sentence 263:
0 Initial errors
0 on fringe, 0 iterations

Sentence 264:
0 Initial errors
0 on fringe, 0 iterations

Sentence 265:
0 Initial errors
0 on fringe, 0 iterations

Sentence 266:
0 Initial errors
0 on fringe, 0 iterations

Sentence 267:
2 Initial errors
0 on fringe, 2 iterations
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM
				(NX
					[01;36m(DM[00m
						(NX
							(NN reiseburo))[01;36m)[00m
					(NX bonn)))
			[01;31m(DM[00m
				(NX
					(NE flammersfeld))[01;31m)[00m
			(DM guten tag))))
Step:Unary
{'subtrees': ['NX'], 'family': ['DM', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN',), 'right siblings': [(NX (NE bonn))], 'left siblings': [], 'auto preterminal span': (0, 1), 'span': (0, 1), 'parent': 'NX', 'label': 'DM', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM reiseburo bonn)
			[01;31m(DM[00m
				(NX
					(NE flammersfeld))[01;31m)[00m
			(DM guten tag))))
Step:Unary
{'subtrees': ['NX'], 'family': ['DM', 'DM', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'NE', 'NE', 'ADJA', 'NN'), 'right siblings': ['DM'], 'parent': 'SU', 'auto preterminal span': (0, 5), 'span': (2, 3), 'left siblings': ['DM'], 'label': 'DM', 'classified_type': 'Unary', 'type': 'remove'}
(TOP reiseburo bonn flammersfeld guten tag)

Sentence 268:
0 Initial errors
0 on fringe, 0 iterations

Sentence 269:
0 Initial errors
0 on fringe, 0 iterations

Sentence 270:
0 Initial errors
0 on fringe, 0 iterations

Sentence 271:
0 Initial errors
0 on fringe, 0 iterations

Sentence 272:
0 Initial errors
0 on fringe, 0 iterations

Sentence 273:
5 Initial errors
0 on fringe, 3 iterations
3 Error:PP Attachment
1 Error:UNSET remove
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(SIMPX
				(VF die reiseunterlagen)
				(LK kann)
				(MF
					(NX ich)
					(ADVX dann)
					[01;36m(PX[00m [01;31m(ADVX[00m
						[01;31m(PX[00m
							(APPRART am)
							[01;33m(NX[00m (NX tag)[01;31m)[00m
						[01;36m(ADVX[00m
							(ADV vorher)[01;36m)[00m[01;31m)[00m [01;33mNX)[00m[01;36m)[00m
					(PX im buro))
				(VC abholen)))))
Step:PP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'ADVX', 'PX', 'ADVX', 'PX'], 'mover info': [('PX', (5, 7))], 'old_family': ['PX', 'ADV'], 'start left siblings': [], 'auto preterminals': ('PPER', 'ADV', 'APPRART', 'NN', 'ADV', 'APPRART', 'NN'), 'start right siblings': ['ADV'], 'end left siblings': ['NX', 'ADVX'], 'auto preterminal span': (3, 10), 'adding node already present': False, 'movers': ['PX'], 'old_parent': 'ADVX', 'added and moved': True, 'end right siblings': ['ADVX', 'PX'], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'PX'}
(TOP
	(TURN
		(SU
			(SIMPX
				(VF die reiseunterlagen)
				(LK kann)
				(MF
					(NX ich)
					(ADVX dann)
					(PX
						[01;31m(PX[00m
							(APPRART am)
							[01;33m(NX[00m (NX tag)[01;31m)[00m
						(ADVX vorher)) [01;33mNX)[00m
					(PX im buro))
				(VC abholen)))))
Step:UNSET remove
{'subtrees': ['APPRART', 'NX'], 'family': ['PX', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'NN', 'ADV'), 'right siblings': ['ADVX'], 'parent': 'PX', 'auto preterminal span': (5, 8), 'span': (5, 7), 'left siblings': [], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(SIMPX
				(VF die reiseunterlagen)
				(LK kann)
				(MF
					(NX ich)
					(ADVX dann)
					(PX
						(APPRART am)
						[01;36m(NX[00m
							(NX tag)
							(ADVX vorher)[01;36m)[00m)
					(PX im buro))
				(VC abholen)))))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADVX'], 'family': ['APPRART', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'ADV'), 'right siblings': [], 'left siblings': [(APPRART am)], 'auto preterminal span': (6, 8), 'span': (6, 8), 'parent': 'PX', 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP die reiseunterlagen kann ich dann am tag vorher im buro abholen)

Sentence 274:
0 Initial errors
0 on fringe, 0 iterations

Sentence 275:
0 Initial errors
0 on fringe, 0 iterations

Sentence 276:
4 Initial errors
0 on fringe, 3 iterations
2 Error:Single Word Phrase
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM schonen guten tag)
			[01;31m(DM[00m
				[01;31m(NX[00m
					(NX reiseburo)
					[01;36m(DM[00m [01;31m(NX[00m
						(NE okpue)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m)))
Step:Single Word Phrase
{'family': ['NX', 'DM'], 'auto preterminal span': (4, 5), 'span': (4, 5), 'subtrees': ['NE'], 'parent': 'NX', 'over_word': True, 'auto preterminals': ('NE',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('NX', 'DM')}
(TOP
	(TURN
		(SU
			(DM schonen guten tag)
			[01;31m(DM[00m
				[01;31m(NX[00m
					(NX reiseburo)
					(DM okpue)[01;31m)[00m[01;31m)[00m)))
Step:Unary
{'subtrees': ['NX', 'DM'], 'family': ['NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'NE'), 'right siblings': [], 'parent': 'DM', 'auto preterminal span': (3, 5), 'span': (3, 5), 'left siblings': [], 'label': 'NX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM schonen guten tag)
			[01;31m(DM[00m
				(NX reiseburo)
				(DM okpue)[01;31m)[00m)))
Step:UNSET remove
{'subtrees': ['NX', 'DM'], 'family': ['DM', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJA', 'ADJA', 'NN', 'NN', 'NE'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (0, 5), 'span': (3, 5), 'left siblings': ['DM'], 'label': 'DM', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP schonen guten tag reiseburo okpue)

Sentence 277:
0 Initial errors
0 on fringe, 0 iterations

Sentence 278:
10 Initial errors
0 on fringe, 9 iterations
2 Error:Modifier Attachment
1 Error:UNSET add
1 Error:Unary
1 Error:UNSET remove
1 Error:PP Attachment
1 Error:Modifier Attachment
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM also)
			(SIMPX die termin der ware am samstag den funften juli)
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF ich)
				(LK dachte)
				[01;31m(MF[00m
					(ADVX da)
					[01;31m(PX[00m
						(PX an eine anreise)
						(ADVX freitags den vierten juli)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			[01;31m(NX[00m
				(KON und)
				(NX die abreise)[01;31m)[00m
			[01;31m(SIMPX[00m
				(VF das)
				(LK weis)
				(MF
					(NX ich)
					[01;31m(ADVX[00m
						(ADVX noch)
						[01;36m(ADVX[00m
							(PTKNEG nicht)[01;36m)[00m[01;31m)[00m
					(ADJX so genau))
				(NF
					(SIMPX
						[01;36m(NF[00m
							[01;36m(SIMPX[00m
								(C da)
								(MF ich eventuell ein paar tage noch in hannover)
								(VC verbringen will)[01;36m)[00m[01;36m)[00m
						[01;31m(NF[00m
							(PX
								(ADVX so)
								(APPR um)
								(NX den siebten achten juli))[01;31m)[00m))[01;31m)[00m)))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'ADVX', 'ADVX', 'ADJX'], 'mover info': [('ADVX', (27, 28))], 'old_family': ['ADVX', 'PTKNEG'], 'start left siblings': [], 'auto preterminals': ('PPER', 'ADV', 'PTKNEG', 'ADV', 'ADJD'), 'start right siblings': ['PTKNEG'], 'end left siblings': ['NX'], 'auto preterminal span': (26, 31), 'movers': ['ADVX'], 'old_parent': 'ADVX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['ADVX', 'ADJX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU
			(DM also)
			(SIMPX die termin der ware am samstag den funften juli)
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF ich)
				(LK dachte)
				[01;31m(MF[00m
					(ADVX da)
					[01;31m(PX[00m
						(PX an eine anreise)
						(ADVX freitags den vierten juli)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			[01;31m(NX[00m
				(KON und)
				(NX die abreise)[01;31m)[00m
			[01;31m(SIMPX[00m
				(VF das)
				(LK weis)
				(MF ich noch nicht so genau)
				(NF
					(SIMPX
						[01;36m(NF[00m
							[01;36m(SIMPX[00m
								(C da)
								(MF ich eventuell ein paar tage noch in hannover)
								(VC verbringen will)[01;36m)[00m[01;36m)[00m
						[01;31m(NF[00m
							(PX
								(ADVX so)
								(APPR um)
								(NX den siebten achten juli))[01;31m)[00m))[01;31m)[00m)))
Step:UNSET add
{'subtrees': ['C', 'MF', 'VC'], 'family': ['SIMPX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'ART', 'PIDAT', 'NN', 'ADV', 'APPR', 'NE', 'VVINF', 'VMFIN'), 'right siblings': [(NF (PX (ADVX (ADV so)) (APPR um) (NX (ART den) (ADJX (ADJX (ADJA siebten)) (ADJX (ADJA achten))) (NN juli))))], 'left siblings': [], 'auto preterminal span': (31, 42), 'span': (31, 42), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM also)
			(SIMPX die termin der ware am samstag den funften juli)
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF ich)
				(LK dachte)
				[01;31m(MF[00m
					(ADVX da)
					[01;31m(PX[00m
						(PX an eine anreise)
						(ADVX freitags den vierten juli)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			[01;31m(NX[00m
				(KON und)
				(NX die abreise)[01;31m)[00m
			[01;31m(SIMPX[00m
				(VF das)
				(LK weis)
				(MF ich noch nicht so genau)
				(NF
					(SIMPX
						[01;36m(NF[00m
							(SIMPX
								(C da)
								(MF ich eventuell ein paar tage noch in hannover)
								(VC verbringen will))[01;36m)[00m
						[01;31m(NF[00m
							(PX
								(ADVX so)
								(APPR um)
								(NX den siebten achten juli))[01;31m)[00m))[01;31m)[00m)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['NF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'ART', 'PIDAT', 'NN', 'ADV', 'APPR', 'NE', 'VVINF', 'VMFIN'), 'right siblings': [(NF (PX (ADVX (ADV so)) (APPR um) (NX (ART den) (ADJX (ADJX (ADJA siebten)) (ADJX (ADJA achten))) (NN juli))))], 'left siblings': [], 'auto preterminal span': (31, 42), 'span': (31, 42), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM also)
			(SIMPX die termin der ware am samstag den funften juli)
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF ich)
				(LK dachte)
				[01;31m(MF[00m
					(ADVX da)
					[01;31m(PX[00m
						(PX an eine anreise)
						(ADVX freitags den vierten juli)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			[01;31m(NX[00m
				(KON und)
				(NX die abreise)[01;31m)[00m
			[01;31m(SIMPX[00m
				(VF das)
				(LK weis)
				(MF ich noch nicht so genau)
				(NF
					(SIMPX
						(NF da ich eventuell ein paar tage noch in hannover verbringen will)
						[01;31m(NF[00m
							(PX
								(ADVX so)
								(APPR um)
								(NX den siebten achten juli))[01;31m)[00m))[01;31m)[00m)))
Step:UNSET remove
{'subtrees': ['KOORD', 'VF', 'LK', 'MF'], 'family': ['DM', 'SIMPX', 'SIMPX', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ART', 'NN', 'PDS', 'VAFIN', 'APPRART', 'NN', 'ART', 'ADJA', 'NN', 'KON', 'PPER', 'VVFIN', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'ART', 'ADJA', 'NN', 'KON', 'ART', 'NN', 'PDS', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'ART', 'PIDAT', 'NN', 'ADV', 'APPR', 'NE', 'VVINF', 'VMFIN', 'ADV', 'APPR', 'ART', 'ADJA', 'ADJA', 'NN'), 'right siblings': ['NX', 'SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 48), 'span': (10, 21), 'left siblings': ['DM', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM also)
			(SIMPX die termin der ware am samstag den funften juli)
			(KOORD und)
			(VF ich)
			(LK dachte)
			[01;31m(MF[00m
				(ADVX da)
				[01;31m(PX[00m
					(PX an eine anreise)
					(ADVX freitags den vierten juli)[01;31m)[00m[01;31m)[00m
			[01;31m(NX[00m
				(KON und)
				(NX die abreise)[01;31m)[00m
			[01;31m(SIMPX[00m
				(VF das)
				(LK weis)
				(MF ich noch nicht so genau)
				(NF
					(SIMPX
						(NF da ich eventuell ein paar tage noch in hannover verbringen will)
						[01;31m(NF[00m
							(PX
								(ADVX so)
								(APPR um)
								(NX den siebten achten juli))[01;31m)[00m))[01;31m)[00m)))
Step:PP Attachment
{'subtrees': ['ADVX', 'PX'], 'family': ['DM', 'SIMPX', 'KOORD', 'VF', 'LK', 'MF', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ART', 'NN', 'PDS', 'VAFIN', 'APPRART', 'NN', 'ART', 'ADJA', 'NN', 'KON', 'PPER', 'VVFIN', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'ART', 'ADJA', 'NN', 'KON', 'ART', 'NN', 'PDS', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'ART', 'PIDAT', 'NN', 'ADV', 'APPR', 'NE', 'VVINF', 'VMFIN', 'ADV', 'APPR', 'ART', 'ADJA', 'ADJA', 'NN'), 'right siblings': ['NX', 'SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 48), 'span': (13, 21), 'left siblings': ['DM', 'SIMPX', 'KOORD', 'VF', 'LK'], 'label': 'MF', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM also)
			(SIMPX die termin der ware am samstag den funften juli)
			(KOORD und)
			(VF ich)
			(LK dachte)
			(ADVX da)
			[01;31m(PX[00m
				(PX an eine anreise)
				(ADVX freitags den vierten juli)[01;31m)[00m
			[01;31m(NX[00m
				(KON und)
				(NX die abreise)[01;31m)[00m
			[01;31m(SIMPX[00m
				(VF das)
				(LK weis)
				(MF ich noch nicht so genau)
				(NF
					(SIMPX
						(NF da ich eventuell ein paar tage noch in hannover verbringen will)
						[01;31m(NF[00m
							(PX
								(ADVX so)
								(APPR um)
								(NX den siebten achten juli))[01;31m)[00m))[01;31m)[00m)))
Step:Modifier Attachment
{'subtrees': ['PX', 'ADVX'], 'family': ['DM', 'SIMPX', 'KOORD', 'VF', 'LK', 'ADVX', 'PX', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ART', 'NN', 'PDS', 'VAFIN', 'APPRART', 'NN', 'ART', 'ADJA', 'NN', 'KON', 'PPER', 'VVFIN', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'ART', 'ADJA', 'NN', 'KON', 'ART', 'NN', 'PDS', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'ART', 'PIDAT', 'NN', 'ADV', 'APPR', 'NE', 'VVINF', 'VMFIN', 'ADV', 'APPR', 'ART', 'ADJA', 'ADJA', 'NN'), 'right siblings': ['NX', 'SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 48), 'span': (14, 21), 'left siblings': ['DM', 'SIMPX', 'KOORD', 'VF', 'LK', 'ADVX'], 'label': 'PX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM also)
			(SIMPX die termin der ware am samstag den funften juli)
			(KOORD und)
			(VF ich)
			(LK dachte)
			(ADVX da)
			(PX an eine anreise)
			(ADVX freitags den vierten juli)
			[01;31m(NX[00m
				(KON und)
				(NX die abreise)[01;31m)[00m
			[01;31m(SIMPX[00m
				(VF das)
				(LK weis)
				(MF ich noch nicht so genau)
				(NF
					(SIMPX
						(NF da ich eventuell ein paar tage noch in hannover verbringen will)
						[01;31m(NF[00m
							(PX
								(ADVX so)
								(APPR um)
								(NX den siebten achten juli))[01;31m)[00m))[01;31m)[00m)))
Step:UNSET remove
{'subtrees': ['KON', 'NX'], 'family': ['DM', 'SIMPX', 'KOORD', 'VF', 'LK', 'ADVX', 'PX', 'ADVX', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ART', 'NN', 'PDS', 'VAFIN', 'APPRART', 'NN', 'ART', 'ADJA', 'NN', 'KON', 'PPER', 'VVFIN', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'ART', 'ADJA', 'NN', 'KON', 'ART', 'NN', 'PDS', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'ART', 'PIDAT', 'NN', 'ADV', 'APPR', 'NE', 'VVINF', 'VMFIN', 'ADV', 'APPR', 'ART', 'ADJA', 'ADJA', 'NN'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 48), 'span': (21, 24), 'left siblings': ['DM', 'SIMPX', 'KOORD', 'VF', 'LK', 'ADVX', 'PX', 'ADVX'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM also)
			(SIMPX die termin der ware am samstag den funften juli)
			(KOORD und)
			(VF ich)
			(LK dachte)
			(ADVX da)
			(PX an eine anreise)
			(ADVX freitags den vierten juli)
			(KON und)
			(NX die abreise)
			[01;31m(SIMPX[00m
				(VF das)
				(LK weis)
				(MF ich noch nicht so genau)
				(NF
					(SIMPX
						(NF da ich eventuell ein paar tage noch in hannover verbringen will)
						[01;31m(NF[00m
							(PX
								(ADVX so)
								(APPR um)
								(NX den siebten achten juli))[01;31m)[00m))[01;31m)[00m)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'NF'], 'family': ['DM', 'SIMPX', 'KOORD', 'VF', 'LK', 'ADVX', 'PX', 'ADVX', 'KON', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ART', 'NN', 'PDS', 'VAFIN', 'APPRART', 'NN', 'ART', 'ADJA', 'NN', 'KON', 'PPER', 'VVFIN', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'ART', 'ADJA', 'NN', 'KON', 'ART', 'NN', 'PDS', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'ART', 'PIDAT', 'NN', 'ADV', 'APPR', 'NE', 'VVINF', 'VMFIN', 'ADV', 'APPR', 'ART', 'ADJA', 'ADJA', 'NN'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (0, 48), 'span': (24, 48), 'left siblings': ['DM', 'SIMPX', 'KOORD', 'VF', 'LK', 'ADVX', 'PX', 'ADVX', 'KON', 'NX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM also)
			(SIMPX die termin der ware am samstag den funften juli)
			(KOORD und)
			(VF ich)
			(LK dachte)
			(ADVX da)
			(PX an eine anreise)
			(ADVX freitags den vierten juli)
			(KON und)
			(NX die abreise)
			(VF das)
			(LK weis)
			(MF ich noch nicht so genau)
			(NF
				(SIMPX
					(NF da ich eventuell ein paar tage noch in hannover verbringen will)
					[01;31m(NF[00m
						(PX
							(ADVX so)
							(APPR um)
							(NX den siebten achten juli))[01;31m)[00m)))))
Step:Unary
{'subtrees': ['PX'], 'family': ['NF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'ART', 'PIDAT', 'NN', 'ADV', 'APPR', 'NE', 'VVINF', 'VMFIN', 'ADV', 'APPR', 'ART', 'ADJA', 'ADJA', 'NN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (31, 48), 'span': (42, 48), 'left siblings': ['NF'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP also die termin der ware am samstag den funften juli und ich dachte da an eine anreise freitags den vierten juli und die abreise das weis ich noch nicht so genau da ich eventuell ein paar tage noch in hannover verbringen will so um den siebten achten juli)

Sentence 279:
0 Initial errors
0 on fringe, 0 iterations

Sentence 280:
0 Initial errors
0 on fringe, 0 iterations

Sentence 281:
0 Initial errors
0 on fringe, 0 iterations

Sentence 282:
28 Initial errors
0 on fringe, 18 iterations
4 Error:Modifier Attachment
3 Error:NP Attachment
2 Error:Different label
2 Error:Single Word Phrase
2 Error:Single Word Phrase
2 Error:UNSET move
2 Error:Co-ordination
1 Error:Single Word Phrase
1 Error:Unary
1 Error:Unary
1 Error:Unary
1 Error:UNSET remove
1 Error:Clause Attachment
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:PP Attachment
1 Error:UNSET add
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM ja)
			(DM also)
			(SIMPX wir haben hier jetzt drei hotels die wir wieder gerne empfehlen)
			[01;31m(SIMPX[00m
				[01;31m(LV[00m
					[01;31m(NX[00m
						(PX zum einen)
						(NX [01;33m(NX[00m
							(NX
								(ART das)
								[01;36m(NX[00m
									(NN hotel)[01;36m)[00m)
							(PX am thielenplatz))[01;31m)[00m[01;31m)[00m
				[01;36m(SIMPX[00m
					(VF das)
					(LK liegt)
					[01;36m(PX[00m
						(MF [01;33m(PX[00m
							(ADVX so)
							[01;31m(PX[00m
								[01;31m(PX[00m
									(APPR bis)
									(NX hundert dreisig mark)[01;31m)[00m [01;33mPX)[00m
								(PX pro zimmer)[01;31m)[00m)[01;36m)[00m[01;36m)[00m[01;31m)[00m [01;33mNX)[00m
			(SIMPX und dann gibt es ein zentralhotel)
			(SIMPX das ist wirklich auch sehr zentral)
			[01;36m(SU[00m
				[01;36m(SIMPX[00m
					[01;31m(SIMPX[00m
						(VF das)
						[01;33m(FKOORD[00m (LK geht)
						[01;36m(PX[00m [01;31m(MF[00m [01;33m(PX (PX[00m
							(ADVX so)
							[01;31m(PX[00m
								(APPR bis)
								[01;31m(NX[00m
									(CARD zweihundert)
									(CARD zwanzig)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m
					[01;31m(NX[00m
						(KON und)
						[01;31m(PX[00m
							[01;36m(NX[00m [01;31m(ADVX[00m
								(ADV naturlich)[01;31m)[00m [01;33mPX)[00m[01;36m)[00m
							(ADVX jetzt)
							(PX fur gehobene anspruche)[01;31m)[00m [01;33mPX)[00m
						[01;36m(NF[00m
							(NX
								(ART das)
								(NE grandhotel))[01;36m)[00m[01;31m)[00m [01;33mFKOORD)[00m[01;36m)[00m[01;36m)[00m
			[01;31m(SIMPX[00m
				(VF da)
				(LK musten)
				(MF sie allerdings schon funfhundert mark)
				(VC hinlegen)[01;31m)[00m
			[01;36m(C[00m [01;31m(DM[00m
				(PWAV wobei)[01;31m)[00m[01;36m)[00m
			(SIMPX ich weis ja nicht ob das))))
Step:Modifier Attachment
{'new_parent': 'PX', 'new_family': ['ADVX', 'APPR', 'NX'], 'mover info': [('ADVX', (21, 22))], 'old_family': ['ADVX', 'PX'], 'start left siblings': [], 'auto preterminals': ('ADV', 'APPR', 'CARD', 'CARD', 'NN', 'APPR', 'NN'), 'start right siblings': ['PX'], 'end left siblings': [], 'auto preterminal span': (21, 28), 'movers': ['ADVX'], 'old_parent': 'MF', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['APPR', 'NX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU
			(DM ja)
			(DM also)
			(SIMPX wir haben hier jetzt drei hotels die wir wieder gerne empfehlen)
			[01;31m(SIMPX[00m
				[01;31m(LV[00m
					[01;31m(NX[00m
						(PX zum einen)
						(NX [01;33m(NX[00m
							(NX
								(ART das)
								[01;36m(NX[00m
									(NN hotel)[01;36m)[00m)
							(PX am thielenplatz))[01;31m)[00m[01;31m)[00m
				[01;36m(SIMPX[00m
					(VF das)
					(LK liegt)
					(MF so bis hundert dreisig mark pro zimmer)[01;36m)[00m[01;31m)[00m [01;33mNX)[00m
			(SIMPX und dann gibt es ein zentralhotel)
			(SIMPX das ist wirklich auch sehr zentral)
			[01;36m(SU[00m
				[01;36m(SIMPX[00m
					[01;31m(SIMPX[00m
						(VF das)
						[01;33m(FKOORD[00m (LK geht)
						[01;36m(PX[00m [01;31m(MF[00m [01;33m(PX (PX[00m
							(ADVX so)
							[01;31m(PX[00m
								(APPR bis)
								[01;31m(NX[00m
									(CARD zweihundert)
									(CARD zwanzig)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m
					[01;31m(NX[00m
						(KON und)
						[01;31m(PX[00m
							[01;36m(NX[00m [01;31m(ADVX[00m
								(ADV naturlich)[01;31m)[00m [01;33mPX)[00m[01;36m)[00m
							(ADVX jetzt)
							(PX fur gehobene anspruche)[01;31m)[00m [01;33mPX)[00m
						[01;36m(NF[00m
							(NX
								(ART das)
								(NE grandhotel))[01;36m)[00m[01;31m)[00m [01;33mFKOORD)[00m[01;36m)[00m[01;36m)[00m
			[01;31m(SIMPX[00m
				(VF da)
				(LK musten)
				(MF sie allerdings schon funfhundert mark)
				(VC hinlegen)[01;31m)[00m
			[01;36m(C[00m [01;31m(DM[00m
				(PWAV wobei)[01;31m)[00m[01;36m)[00m
			(SIMPX ich weis ja nicht ob das))))
Step:NP Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'NX'], 'mover info': [('NX', (46, 54))], 'old_family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX', 'DM', 'SIMPX'], 'start left siblings': ['DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'auto preterminals': ('PTKANT', 'ADV', 'PPER', 'VAFIN', 'ADV', 'ADV', 'CARD', 'NN', 'PRELS', 'PPER', 'ADV', 'ADV', 'VVFIN', 'APPRART', 'PIS', 'ART', 'NN', 'APPRART', 'NE', 'PDS', 'VVFIN', 'ADV', 'APPR', 'CARD', 'CARD', 'NN', 'APPR', 'NN', 'KON', 'ADV', 'VVFIN', 'PPER', 'ART', 'NE', 'PDS', 'VAFIN', 'ADV', 'ADV', 'ADV', 'ADJD', 'PDS', 'VVFIN', 'ADV', 'APPR', 'CARD', 'CARD', 'KON', 'ADV', 'ADV', 'APPR', 'ADJA', 'NN', 'ART', 'NE', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'CARD', 'NN', 'VVINF', 'PWAV', 'PPER', 'VVFIN', 'ADV', 'PTKNEG', 'KOUS', 'PDS'), 'start right siblings': ['SIMPX', 'DM', 'SIMPX'], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (0, 69), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'SU', 'added and moved': True, 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'C'}
(TOP
	(TURN
		(SU
			(DM ja)
			(DM also)
			(SIMPX wir haben hier jetzt drei hotels die wir wieder gerne empfehlen)
			[01;31m(SIMPX[00m
				[01;31m(LV[00m
					[01;31m(NX[00m
						(PX zum einen)
						(NX [01;33m(NX[00m
							(NX
								(ART das)
								[01;36m(NX[00m
									(NN hotel)[01;36m)[00m)
							(PX am thielenplatz))[01;31m)[00m[01;31m)[00m
				[01;36m(SIMPX[00m
					(VF das)
					(LK liegt)
					(MF so bis hundert dreisig mark pro zimmer)[01;36m)[00m[01;31m)[00m [01;33mNX)[00m
			(SIMPX und dann gibt es ein zentralhotel)
			(SIMPX das ist wirklich auch sehr zentral)
			[01;36m(SU[00m
				(SIMPX
					(VF das)
					(FKOORD
						(LK geht)
						[01;36m(PX[00m [01;31m(MF[00m [01;33m(PX (PX[00m
							(ADVX so)
							[01;31m(PX[00m
								(APPR bis)
								[01;31m(NX[00m
									(CARD zweihundert)
									(CARD zwanzig)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m
						[01;31m(NX[00m
							(KON und)
							[01;31m(PX[00m
								[01;36m(NX[00m [01;31m(ADVX[00m
									(ADV naturlich)[01;31m)[00m [01;33mPX)[00m[01;36m)[00m
								(ADVX jetzt)
								(PX fur gehobene anspruche)[01;31m)[00m [01;33mPX)[00m
							[01;36m(NF[00m
								(NX
									(ART das)
									(NE grandhotel))[01;36m)[00m[01;31m)[00m))[01;36m)[00m
			[01;31m(SIMPX[00m
				(VF da)
				(LK musten)
				(MF sie allerdings schon funfhundert mark)
				(VC hinlegen)[01;31m)[00m
			[01;36m(C[00m [01;31m(DM[00m
				(PWAV wobei)[01;31m)[00m[01;36m)[00m
			(SIMPX ich weis ja nicht ob das))))
Step:Different label
{'family': ['LK', 'PX', 'NX'], 'auto preterminal span': (42, 46), 'span': (42, 46), 'subtrees': ['ADVX', 'PX'], 'parent': 'FKOORD', 'over_word': False, 'auto preterminals': ('ADV', 'APPR', 'CARD', 'CARD'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('MF', 'PX')}
(TOP
	(TURN
		(SU
			(DM ja)
			(DM also)
			(SIMPX wir haben hier jetzt drei hotels die wir wieder gerne empfehlen)
			[01;31m(SIMPX[00m
				[01;31m(LV[00m
					[01;31m(NX[00m
						(PX zum einen)
						(NX [01;33m(NX[00m
							(NX
								(ART das)
								[01;36m(NX[00m
									(NN hotel)[01;36m)[00m)
							(PX am thielenplatz))[01;31m)[00m[01;31m)[00m
				[01;36m(SIMPX[00m
					(VF das)
					(LK liegt)
					(MF so bis hundert dreisig mark pro zimmer)[01;36m)[00m[01;31m)[00m [01;33mNX)[00m
			(SIMPX und dann gibt es ein zentralhotel)
			(SIMPX das ist wirklich auch sehr zentral)
			[01;36m(SU[00m
				(SIMPX
					(VF das)
					(FKOORD
						(LK geht)
						(PX [01;33m(PX (PX[00m
							(ADVX so)
							[01;31m(PX[00m
								(APPR bis)
								[01;31m(NX[00m
									(CARD zweihundert)
									(CARD zwanzig)[01;31m)[00m[01;31m)[00m)
						[01;31m(NX[00m
							(KON und)
							[01;31m(PX[00m
								[01;36m(NX[00m [01;31m(ADVX[00m
									(ADV naturlich)[01;31m)[00m [01;33mPX)[00m[01;36m)[00m
								(ADVX jetzt)
								(PX fur gehobene anspruche)[01;31m)[00m [01;33mPX)[00m
							[01;36m(NF[00m
								(NX
									(ART das)
									(NE grandhotel))[01;36m)[00m[01;31m)[00m))[01;36m)[00m
			[01;31m(SIMPX[00m
				(VF da)
				(LK musten)
				(MF sie allerdings schon funfhundert mark)
				(VC hinlegen)[01;31m)[00m
			[01;36m(C[00m [01;31m(DM[00m
				(PWAV wobei)[01;31m)[00m[01;36m)[00m
			(SIMPX ich weis ja nicht ob das))))
Step:Single Word Phrase
{'family': ['NX', 'ADVX', 'PX'], 'auto preterminal span': (47, 48), 'span': (47, 48), 'subtrees': ['ADV'], 'parent': 'PX', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'NX')}
(TOP
	(TURN
		(SU
			(DM ja)
			(DM also)
			(SIMPX wir haben hier jetzt drei hotels die wir wieder gerne empfehlen)
			[01;31m(SIMPX[00m
				[01;31m(LV[00m
					[01;31m(NX[00m
						(PX zum einen)
						(NX [01;33m(NX[00m
							(NX
								(ART das)
								[01;36m(NX[00m
									(NN hotel)[01;36m)[00m)
							(PX am thielenplatz))[01;31m)[00m[01;31m)[00m
				[01;36m(SIMPX[00m
					(VF das)
					(LK liegt)
					(MF so bis hundert dreisig mark pro zimmer)[01;36m)[00m[01;31m)[00m [01;33mNX)[00m
			(SIMPX und dann gibt es ein zentralhotel)
			(SIMPX das ist wirklich auch sehr zentral)
			[01;36m(SU[00m
				(SIMPX
					(VF das)
					(FKOORD
						(LK geht)
						(PX [01;33m(PX (PX[00m
							(ADVX so)
							[01;31m(PX[00m
								(APPR bis)
								[01;31m(NX[00m
									(CARD zweihundert)
									(CARD zwanzig)[01;31m)[00m[01;31m)[00m)
						[01;31m(NX[00m
							(KON und)
							[01;31m(PX[00m
								(NX naturlich) [01;33mPX)[00m
								(ADVX jetzt)
								(PX fur gehobene anspruche)[01;31m)[00m [01;33mPX)[00m
							[01;36m(NF[00m
								(NX
									(ART das)
									(NE grandhotel))[01;36m)[00m[01;31m)[00m))[01;36m)[00m
			[01;31m(SIMPX[00m
				(VF da)
				(LK musten)
				(MF sie allerdings schon funfhundert mark)
				(VC hinlegen)[01;31m)[00m
			[01;36m(C[00m [01;31m(DM[00m
				(PWAV wobei)[01;31m)[00m[01;36m)[00m
			(SIMPX ich weis ja nicht ob das))))
Step:Single Word Phrase
{'family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'C', 'SIMPX'], 'auto preterminal span': (62, 63), 'span': (62, 63), 'subtrees': ['PWAV'], 'parent': 'SU', 'over_word': True, 'auto preterminals': ('PWAV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('DM', 'C')}
(TOP
	(TURN
		(SU
			(DM ja)
			(DM also)
			(SIMPX wir haben hier jetzt drei hotels die wir wieder gerne empfehlen)
			[01;31m(SIMPX[00m
				[01;31m(LV[00m
					[01;31m(NX[00m
						(PX zum einen)
						(NX [01;33m(NX[00m
							(NX
								(ART das)
								[01;36m(NX[00m
									(NN hotel)[01;36m)[00m)
							(PX am thielenplatz))[01;31m)[00m[01;31m)[00m
				[01;36m(SIMPX[00m
					(VF das)
					(LK liegt)
					(MF so bis hundert dreisig mark pro zimmer)[01;36m)[00m[01;31m)[00m [01;33mNX)[00m
			(SIMPX und dann gibt es ein zentralhotel)
			(SIMPX das ist wirklich auch sehr zentral)
			[01;36m(SU[00m
				(SIMPX
					(VF das)
					(FKOORD
						(LK geht)
						(PX [01;33m(PX (PX[00m
							(ADVX so)
							[01;31m(PX[00m
								(APPR bis)
								[01;31m(NX[00m
									(CARD zweihundert)
									(CARD zwanzig)[01;31m)[00m[01;31m)[00m)
						[01;31m(NX[00m
							(KON und)
							[01;31m(PX[00m
								(NX naturlich) [01;33mPX)[00m
								(ADVX jetzt)
								(PX fur gehobene anspruche)[01;31m)[00m [01;33mPX)[00m
							[01;36m(NF[00m
								(NX
									(ART das)
									(NE grandhotel))[01;36m)[00m[01;31m)[00m))[01;36m)[00m
			[01;31m(SIMPX[00m
				(VF da)
				(LK musten)
				(MF sie allerdings schon funfhundert mark)
				(VC hinlegen)[01;31m)[00m
			(C wobei)
			(SIMPX ich weis ja nicht ob das))))
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['DM', 'DM', 'SIMPX', 'LV', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'C', 'SIMPX'], 'mover info': [('LV', (13, 19))], 'old_family': ['LV', 'VF', 'LK', 'MF'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'ADV', 'PPER', 'VAFIN', 'ADV', 'ADV', 'CARD', 'NN', 'PRELS', 'PPER', 'ADV', 'ADV', 'VVFIN', 'APPRART', 'PIS', 'ART', 'NN', 'APPRART', 'NE', 'PDS', 'VVFIN', 'ADV', 'APPR', 'CARD', 'CARD', 'NN', 'APPR', 'NN', 'KON', 'ADV', 'VVFIN', 'PPER', 'ART', 'NE', 'PDS', 'VAFIN', 'ADV', 'ADV', 'ADV', 'ADJD', 'PDS', 'VVFIN', 'ADV', 'APPR', 'CARD', 'CARD', 'KON', 'ADV', 'ADV', 'APPR', 'ADJA', 'NN', 'ART', 'NE', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'CARD', 'NN', 'VVINF', 'PWAV', 'PPER', 'VVFIN', 'ADV', 'PTKNEG', 'KOUS', 'PDS'), 'start right siblings': ['VF', 'LK', 'MF'], 'end left siblings': ['DM', 'DM', 'SIMPX'], 'auto preterminal span': (0, 69), 'movers': ['LV'], 'old_parent': 'SIMPX', 'end right siblings': ['SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'C', 'SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			(DM ja)
			(DM also)
			(SIMPX wir haben hier jetzt drei hotels die wir wieder gerne empfehlen)
			[01;31m(LV[00m
				[01;31m(NX[00m
					(PX zum einen)
					(NX [01;33m(NX[00m
						(NX
							(ART das)
							[01;36m(NX[00m
								(NN hotel)[01;36m)[00m)
						(PX am thielenplatz))[01;31m)[00m[01;31m)[00m
			(SIMPX das liegt so bis hundert dreisig mark pro zimmer) [01;33mNX)[00m
			(SIMPX und dann gibt es ein zentralhotel)
			(SIMPX das ist wirklich auch sehr zentral)
			[01;36m(SU[00m
				(SIMPX
					(VF das)
					(FKOORD
						(LK geht)
						(PX [01;33m(PX (PX[00m
							(ADVX so)
							[01;31m(PX[00m
								(APPR bis)
								[01;31m(NX[00m
									(CARD zweihundert)
									(CARD zwanzig)[01;31m)[00m[01;31m)[00m)
						[01;31m(NX[00m
							(KON und)
							[01;31m(PX[00m
								(NX naturlich) [01;33mPX)[00m
								(ADVX jetzt)
								(PX fur gehobene anspruche)[01;31m)[00m [01;33mPX)[00m
							[01;36m(NF[00m
								(NX
									(ART das)
									(NE grandhotel))[01;36m)[00m[01;31m)[00m))[01;36m)[00m
			[01;31m(SIMPX[00m
				(VF da)
				(LK musten)
				(MF sie allerdings schon funfhundert mark)
				(VC hinlegen)[01;31m)[00m
			(C wobei)
			(SIMPX ich weis ja nicht ob das))))
Step:Co-ordination
{'new_parent': 'FKOORD', 'new_family': ['LK', 'PX', 'KON', 'PX', 'NX'], 'mover info': [('KON', (46, 47)), ('PX', (47, 52))], 'old_family': ['KON', 'PX', 'NX'], 'start left siblings': [], 'auto preterminals': ('VVFIN', 'ADV', 'APPR', 'CARD', 'CARD', 'KON', 'ADV', 'ADV', 'APPR', 'ADJA', 'NN', 'ART', 'NE'), 'start right siblings': ['NX'], 'end left siblings': ['LK', 'PX'], 'auto preterminal span': (41, 54), 'adding node already present': False, 'movers': ['KON', 'PX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': ['NX'], 'classified_type': 'Co-ordination', 'type': 'move', 'added label': 'NF'}
(TOP
	(TURN
		(SU
			(DM ja)
			(DM also)
			(SIMPX wir haben hier jetzt drei hotels die wir wieder gerne empfehlen)
			[01;31m(LV[00m
				[01;31m(NX[00m
					(PX zum einen)
					(NX [01;33m(NX[00m
						(NX
							(ART das)
							[01;36m(NX[00m
								(NN hotel)[01;36m)[00m)
						(PX am thielenplatz))[01;31m)[00m[01;31m)[00m
			(SIMPX das liegt so bis hundert dreisig mark pro zimmer) [01;33mNX)[00m
			(SIMPX und dann gibt es ein zentralhotel)
			(SIMPX das ist wirklich auch sehr zentral)
			[01;36m(SU[00m
				(SIMPX
					(VF das)
					(FKOORD
						(LK geht)
						(PX [01;33m(PX[00m
							(PX
								(ADVX so)
								[01;31m(PX[00m
									(APPR bis)
									[01;31m(NX[00m
										(CARD zweihundert)
										(CARD zwanzig)[01;31m)[00m[01;31m)[00m)
							(KON und)
							[01;31m(PX[00m
								(NX naturlich) [01;33mPX)[00m
								(ADVX jetzt)
								(PX fur gehobene anspruche)[01;31m)[00m)
						[01;36m(NF[00m
							(NX
								(ART das)
								(NE grandhotel))[01;36m)[00m))[01;36m)[00m
			[01;31m(SIMPX[00m
				(VF da)
				(LK musten)
				(MF sie allerdings schon funfhundert mark)
				(VC hinlegen)[01;31m)[00m
			(C wobei)
			(SIMPX ich weis ja nicht ob das))))
Step:Single Word Phrase
{'subtrees': ['NN'], 'family': ['ART', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('NN',), 'right siblings': [], 'left siblings': [(ART das)], 'auto preterminal span': (16, 17), 'span': (16, 17), 'parent': 'NX', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM ja)
			(DM also)
			(SIMPX wir haben hier jetzt drei hotels die wir wieder gerne empfehlen)
			[01;31m(LV[00m
				[01;31m(NX[00m
					(PX zum einen)
					[01;33m(NX[00m (NX das hotel am thielenplatz)[01;31m)[00m[01;31m)[00m
			(SIMPX das liegt so bis hundert dreisig mark pro zimmer) [01;33mNX)[00m
			(SIMPX und dann gibt es ein zentralhotel)
			(SIMPX das ist wirklich auch sehr zentral)
			[01;36m(SU[00m
				(SIMPX
					(VF das)
					(FKOORD
						(LK geht)
						(PX [01;33m(PX[00m
							(PX
								(ADVX so)
								[01;31m(PX[00m
									(APPR bis)
									[01;31m(NX[00m
										(CARD zweihundert)
										(CARD zwanzig)[01;31m)[00m[01;31m)[00m)
							(KON und)
							[01;31m(PX[00m
								(NX naturlich) [01;33mPX)[00m
								(ADVX jetzt)
								(PX fur gehobene anspruche)[01;31m)[00m)
						[01;36m(NF[00m
							(NX
								(ART das)
								(NE grandhotel))[01;36m)[00m))[01;36m)[00m
			[01;31m(SIMPX[00m
				(VF da)
				(LK musten)
				(MF sie allerdings schon funfhundert mark)
				(VC hinlegen)[01;31m)[00m
			(C wobei)
			(SIMPX ich weis ja nicht ob das))))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['DM', 'DM', 'SIMPX', 'LV', 'SIMPX', 'SIMPX', 'SIMPX', 'SU', 'SIMPX', 'C', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VVFIN', 'ADV', 'APPR', 'CARD', 'CARD', 'KON', 'ADV', 'ADV', 'APPR', 'ADJA', 'NN', 'ART', 'NE'), 'right siblings': [(SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VMFIN musten))) (MF (NX (PPER sie)) (ADVX (ADV allerdings)) (ADVX (ADV schon)) (NX (ADJX (CARD funfhundert)) (NN mark))) (VC (VXINF (VVINF hinlegen)))), (C (PWAV wobei)), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN weis))) (MF (ADVX (ADV ja)) (ADVX (PTKNEG nicht))) (NF (SIMPX (C (KOUS ob)) (MF (NX (PDS das))))))], 'left siblings': [(DM (PTKANT ja)), (DM (ADVX (ADV also))), (SIMPX (VF (NX (PPER wir))) (LK (VXFIN (VAFIN haben))) (MF (ADVX (ADV hier)) (ADVX (ADV jetzt)) (NX (ADJX (CARD drei)) (NN hotels))) (NF (R (C (NX (PRELS die))) (MF (NX (PPER wir)) (ADVX (ADV wieder)) (ADVX (ADV gerne))) (VC (VXFIN (VVFIN empfehlen)))))), (LV (NX (PX (APPRART zum) (NX (PIS einen))) (NX (NX (ART das) (NX (NN hotel))) (PX (APPRART am) (NX (NE thielenplatz)))))), (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VVFIN liegt))) (MF (PX (PX (ADVX (ADV so)) (APPR bis) (NX (ADJX (CARD hundert) (CARD dreisig)) (NN mark))) (PX (APPR pro) (NX (NN zimmer)))))), (SIMPX (KOORD (KON und)) (VF (ADVX (ADV dann))) (LK (VXFIN (VVFIN gibt))) (MF (NX (PPER es)) (NX (ART ein) (NE zentralhotel)))), (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VAFIN ist))) (MF (ADVX (ADV wirklich)) (ADVX (ADV auch)) (ADJX (ADVX (ADV sehr)) (ADJD zentral))))], 'auto preterminal span': (40, 54), 'span': (40, 54), 'parent': 'SU', 'label': 'SU', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM ja)
			(DM also)
			(SIMPX wir haben hier jetzt drei hotels die wir wieder gerne empfehlen)
			[01;31m(LV[00m
				[01;31m(NX[00m
					(PX zum einen)
					[01;33m(NX[00m (NX das hotel am thielenplatz)[01;31m)[00m[01;31m)[00m
			(SIMPX das liegt so bis hundert dreisig mark pro zimmer) [01;33mNX)[00m
			(SIMPX und dann gibt es ein zentralhotel)
			(SIMPX das ist wirklich auch sehr zentral)
			(SU
				(SIMPX
					(VF das)
					(FKOORD
						(LK geht)
						(PX [01;33m(PX[00m
							(PX
								(ADVX so)
								[01;31m(PX[00m
									(APPR bis)
									[01;31m(NX[00m
										(CARD zweihundert)
										(CARD zwanzig)[01;31m)[00m[01;31m)[00m)
							(KON und)
							[01;31m(PX[00m
								(NX naturlich) [01;33mPX)[00m
								(ADVX jetzt)
								(PX fur gehobene anspruche)[01;31m)[00m)
						[01;36m(NF[00m
							(NX
								(ART das)
								(NE grandhotel))[01;36m)[00m)))
			[01;31m(SIMPX[00m
				(VF da)
				(LK musten)
				(MF sie allerdings schon funfhundert mark)
				(VC hinlegen)[01;31m)[00m
			(C wobei)
			(SIMPX ich weis ja nicht ob das))))
Step:Unary
{'subtrees': ['NX'], 'family': ['LK', 'PX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NE'), 'right siblings': [], 'left siblings': [(LK (VXFIN (VVFIN geht))), (PX (PX (ADVX (ADV so)) (PX (APPR bis) (NX (CARD zweihundert) (CARD zwanzig)))) (KON und) (PX (NX (ADV naturlich)) (ADVX (ADV jetzt)) (PX (APPR fur) (NX (ADJX (ADJA gehobene)) (NN anspruche)))))], 'auto preterminal span': (52, 54), 'span': (52, 54), 'parent': 'FKOORD', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM ja)
			(DM also)
			(SIMPX wir haben hier jetzt drei hotels die wir wieder gerne empfehlen)
			[01;31m(LV[00m
				[01;31m(NX[00m
					(PX zum einen)
					[01;33m(NX[00m (NX das hotel am thielenplatz)[01;31m)[00m[01;31m)[00m
			(SIMPX das liegt so bis hundert dreisig mark pro zimmer) [01;33mNX)[00m
			(SIMPX und dann gibt es ein zentralhotel)
			(SIMPX das ist wirklich auch sehr zentral)
			(SU
				(SIMPX
					(VF das)
					(FKOORD
						(LK geht)
						(PX [01;33m(PX[00m
							(PX
								(ADVX so)
								[01;31m(PX[00m
									(APPR bis)
									[01;31m(NX[00m
										(CARD zweihundert)
										(CARD zwanzig)[01;31m)[00m[01;31m)[00m)
							(KON und)
							[01;31m(PX[00m
								(NX naturlich) [01;33mPX)[00m
								(ADVX jetzt)
								(PX fur gehobene anspruche)[01;31m)[00m)
						(NF das grandhotel))))
			[01;31m(SIMPX[00m
				(VF da)
				(LK musten)
				(MF sie allerdings schon funfhundert mark)
				(VC hinlegen)[01;31m)[00m
			(C wobei)
			(SIMPX ich weis ja nicht ob das))))
Step:Unary
{'subtrees': ['NX'], 'family': ['DM', 'DM', 'SIMPX', 'LV', 'SIMPX', 'SIMPX', 'SIMPX', 'SU', 'SIMPX', 'C', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADV', 'PPER', 'VAFIN', 'ADV', 'ADV', 'CARD', 'NN', 'PRELS', 'PPER', 'ADV', 'ADV', 'VVFIN', 'APPRART', 'PIS', 'ART', 'NN', 'APPRART', 'NE', 'PDS', 'VVFIN', 'ADV', 'APPR', 'CARD', 'CARD', 'NN', 'APPR', 'NN', 'KON', 'ADV', 'VVFIN', 'PPER', 'ART', 'NE', 'PDS', 'VAFIN', 'ADV', 'ADV', 'ADV', 'ADJD', 'PDS', 'VVFIN', 'ADV', 'APPR', 'CARD', 'CARD', 'KON', 'ADV', 'ADV', 'APPR', 'ADJA', 'NN', 'ART', 'NE', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'CARD', 'NN', 'VVINF', 'PWAV', 'PPER', 'VVFIN', 'ADV', 'PTKNEG', 'KOUS', 'PDS'), 'right siblings': ['SIMPX', 'SIMPX', 'SIMPX', 'SU', 'SIMPX', 'C', 'SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 69), 'span': (13, 19), 'left siblings': ['DM', 'DM', 'SIMPX'], 'label': 'LV', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM ja)
			(DM also)
			(SIMPX wir haben hier jetzt drei hotels die wir wieder gerne empfehlen)
			[01;31m(NX[00m
				(PX zum einen)
				[01;33m(NX[00m (NX das hotel am thielenplatz)[01;31m)[00m
			(SIMPX das liegt so bis hundert dreisig mark pro zimmer) [01;33mNX)[00m
			(SIMPX und dann gibt es ein zentralhotel)
			(SIMPX das ist wirklich auch sehr zentral)
			(SU
				(SIMPX
					(VF das)
					(FKOORD
						(LK geht)
						(PX [01;33m(PX[00m
							(PX
								(ADVX so)
								[01;31m(PX[00m
									(APPR bis)
									[01;31m(NX[00m
										(CARD zweihundert)
										(CARD zwanzig)[01;31m)[00m[01;31m)[00m)
							(KON und)
							[01;31m(PX[00m
								(NX naturlich) [01;33mPX)[00m
								(ADVX jetzt)
								(PX fur gehobene anspruche)[01;31m)[00m)
						(NF das grandhotel))))
			[01;31m(SIMPX[00m
				(VF da)
				(LK musten)
				(MF sie allerdings schon funfhundert mark)
				(VC hinlegen)[01;31m)[00m
			(C wobei)
			(SIMPX ich weis ja nicht ob das))))
Step:UNSET remove
{'subtrees': ['PX', 'NX'], 'family': ['DM', 'DM', 'SIMPX', 'NX', 'SIMPX', 'SIMPX', 'SIMPX', 'SU', 'SIMPX', 'C', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADV', 'PPER', 'VAFIN', 'ADV', 'ADV', 'CARD', 'NN', 'PRELS', 'PPER', 'ADV', 'ADV', 'VVFIN', 'APPRART', 'PIS', 'ART', 'NN', 'APPRART', 'NE', 'PDS', 'VVFIN', 'ADV', 'APPR', 'CARD', 'CARD', 'NN', 'APPR', 'NN', 'KON', 'ADV', 'VVFIN', 'PPER', 'ART', 'NE', 'PDS', 'VAFIN', 'ADV', 'ADV', 'ADV', 'ADJD', 'PDS', 'VVFIN', 'ADV', 'APPR', 'CARD', 'CARD', 'KON', 'ADV', 'ADV', 'APPR', 'ADJA', 'NN', 'ART', 'NE', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'CARD', 'NN', 'VVINF', 'PWAV', 'PPER', 'VVFIN', 'ADV', 'PTKNEG', 'KOUS', 'PDS'), 'right siblings': ['SIMPX', 'SIMPX', 'SIMPX', 'SU', 'SIMPX', 'C', 'SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 69), 'span': (13, 19), 'left siblings': ['DM', 'DM', 'SIMPX'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM ja)
			(DM also)
			(SIMPX wir haben hier jetzt drei hotels die wir wieder gerne empfehlen)
			(PX zum einen)
			[01;36m(NX[00m
				(NX das hotel am thielenplatz)
				(SIMPX das liegt so bis hundert dreisig mark pro zimmer)[01;36m)[00m
			(SIMPX und dann gibt es ein zentralhotel)
			(SIMPX das ist wirklich auch sehr zentral)
			(SU
				(SIMPX
					(VF das)
					(FKOORD
						(LK geht)
						(PX [01;33m(PX[00m
							(PX
								(ADVX so)
								[01;31m(PX[00m
									(APPR bis)
									[01;31m(NX[00m
										(CARD zweihundert)
										(CARD zwanzig)[01;31m)[00m[01;31m)[00m)
							(KON und)
							[01;31m(PX[00m
								(NX naturlich) [01;33mPX)[00m
								(ADVX jetzt)
								(PX fur gehobene anspruche)[01;31m)[00m)
						(NF das grandhotel))))
			[01;31m(SIMPX[00m
				(VF da)
				(LK musten)
				(MF sie allerdings schon funfhundert mark)
				(VC hinlegen)[01;31m)[00m
			(C wobei)
			(SIMPX ich weis ja nicht ob das))))
Step:Clause Attachment
{'subtrees': ['NX', 'SIMPX'], 'family': ['DM', 'DM', 'SIMPX', 'PX', 'NX', 'SIMPX', 'SIMPX', 'SU', 'SIMPX', 'C', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'APPRART', 'NE', 'PDS', 'VVFIN', 'ADV', 'APPR', 'CARD', 'CARD', 'NN', 'APPR', 'NN'), 'right siblings': [(SIMPX (KOORD (KON und)) (VF (ADVX (ADV dann))) (LK (VXFIN (VVFIN gibt))) (MF (NX (PPER es)) (NX (ART ein) (NE zentralhotel)))), (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VAFIN ist))) (MF (ADVX (ADV wirklich)) (ADVX (ADV auch)) (ADJX (ADVX (ADV sehr)) (ADJD zentral)))), (SU (SIMPX (VF (NX (PDS das))) (FKOORD (LK (VXFIN (VVFIN geht))) (PX (PX (ADVX (ADV so)) (PX (APPR bis) (NX (CARD zweihundert) (CARD zwanzig)))) (KON und) (PX (NX (ADV naturlich)) (ADVX (ADV jetzt)) (PX (APPR fur) (NX (ADJX (ADJA gehobene)) (NN anspruche))))) (NF (NX (ART das) (NE grandhotel)))))), (SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VMFIN musten))) (MF (NX (PPER sie)) (ADVX (ADV allerdings)) (ADVX (ADV schon)) (NX (ADJX (CARD funfhundert)) (NN mark))) (VC (VXINF (VVINF hinlegen)))), (C (PWAV wobei)), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN weis))) (MF (ADVX (ADV ja)) (ADVX (PTKNEG nicht))) (NF (SIMPX (C (KOUS ob)) (MF (NX (PDS das))))))], 'left siblings': [(DM (PTKANT ja)), (DM (ADVX (ADV also))), (SIMPX (VF (NX (PPER wir))) (LK (VXFIN (VAFIN haben))) (MF (ADVX (ADV hier)) (ADVX (ADV jetzt)) (NX (ADJX (CARD drei)) (NN hotels))) (NF (R (C (NX (PRELS die))) (MF (NX (PPER wir)) (ADVX (ADV wieder)) (ADVX (ADV gerne))) (VC (VXFIN (VVFIN empfehlen)))))), (PX (APPRART zum) (NX (PIS einen)))], 'auto preterminal span': (15, 28), 'span': (15, 28), 'parent': 'SU', 'label': 'NX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM ja)
			(DM also)
			(SIMPX wir haben hier jetzt drei hotels die wir wieder gerne empfehlen)
			(PX zum einen)
			(NX das hotel am thielenplatz das liegt so bis hundert dreisig mark pro zimmer)
			(SIMPX und dann gibt es ein zentralhotel)
			(SIMPX das ist wirklich auch sehr zentral)
			(SU
				(SIMPX
					(VF das)
					(FKOORD
						(LK geht)
						(PX [01;33m(PX[00m
							(PX
								(ADVX so)
								[01;31m(PX[00m
									(APPR bis)
									[01;31m(NX[00m
										(CARD zweihundert)
										(CARD zwanzig)[01;31m)[00m[01;31m)[00m)
							(KON und)
							[01;31m(PX[00m
								(NX naturlich) [01;33mPX)[00m
								(ADVX jetzt)
								(PX fur gehobene anspruche)[01;31m)[00m)
						(NF das grandhotel))))
			[01;31m(SIMPX[00m
				(VF da)
				(LK musten)
				(MF sie allerdings schon funfhundert mark)
				(VC hinlegen)[01;31m)[00m
			(C wobei)
			(SIMPX ich weis ja nicht ob das))))
Step:UNSET remove
{'subtrees': ['APPR', 'NX'], 'family': ['ADVX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'APPR', 'CARD', 'CARD'), 'right siblings': [], 'parent': 'PX', 'auto preterminal span': (42, 46), 'span': (43, 46), 'left siblings': ['ADVX'], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM ja)
			(DM also)
			(SIMPX wir haben hier jetzt drei hotels die wir wieder gerne empfehlen)
			(PX zum einen)
			(NX das hotel am thielenplatz das liegt so bis hundert dreisig mark pro zimmer)
			(SIMPX und dann gibt es ein zentralhotel)
			(SIMPX das ist wirklich auch sehr zentral)
			(SU
				(SIMPX
					(VF das)
					(FKOORD
						(LK geht)
						(PX [01;33m(PX[00m
							(PX
								(ADVX so)
								(APPR bis)
								[01;31m(NX[00m
									(CARD zweihundert)
									(CARD zwanzig)[01;31m)[00m)
							(KON und)
							[01;31m(PX[00m
								(NX naturlich) [01;33mPX)[00m
								(ADVX jetzt)
								(PX fur gehobene anspruche)[01;31m)[00m)
						(NF das grandhotel))))
			[01;31m(SIMPX[00m
				(VF da)
				(LK musten)
				(MF sie allerdings schon funfhundert mark)
				(VC hinlegen)[01;31m)[00m
			(C wobei)
			(SIMPX ich weis ja nicht ob das))))
Step:UNSET remove
{'subtrees': ['CARD', 'CARD'], 'family': ['ADVX', 'APPR', 'NX'], 'over_word': False, 'over words': True, 'auto preterminals': ('ADV', 'APPR', 'CARD', 'CARD'), 'right siblings': [], 'parent': 'PX', 'auto preterminal span': (42, 46), 'span': (44, 46), 'left siblings': ['ADVX', 'APPR'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM ja)
			(DM also)
			(SIMPX wir haben hier jetzt drei hotels die wir wieder gerne empfehlen)
			(PX zum einen)
			(NX das hotel am thielenplatz das liegt so bis hundert dreisig mark pro zimmer)
			(SIMPX und dann gibt es ein zentralhotel)
			(SIMPX das ist wirklich auch sehr zentral)
			(SU
				(SIMPX
					(VF das)
					(FKOORD
						(LK geht)
						(PX [01;33m(PX[00m
							(PX so bis zweihundert zwanzig)
							(KON und)
							[01;31m(PX[00m
								(NX naturlich) [01;33mPX)[00m
								(ADVX jetzt)
								(PX fur gehobene anspruche)[01;31m)[00m)
						(NF das grandhotel))))
			[01;31m(SIMPX[00m
				(VF da)
				(LK musten)
				(MF sie allerdings schon funfhundert mark)
				(VC hinlegen)[01;31m)[00m
			(C wobei)
			(SIMPX ich weis ja nicht ob das))))
Step:PP Attachment
{'subtrees': ['NX', 'ADVX', 'PX'], 'family': ['PX', 'KON', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'APPR', 'CARD', 'CARD', 'KON', 'ADV', 'ADV', 'APPR', 'ADJA', 'NN'), 'right siblings': [], 'parent': 'PX', 'auto preterminal span': (42, 52), 'span': (47, 52), 'left siblings': ['PX', 'KON'], 'label': 'PX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM ja)
			(DM also)
			(SIMPX wir haben hier jetzt drei hotels die wir wieder gerne empfehlen)
			(PX zum einen)
			(NX das hotel am thielenplatz das liegt so bis hundert dreisig mark pro zimmer)
			(SIMPX und dann gibt es ein zentralhotel)
			(SIMPX das ist wirklich auch sehr zentral)
			(SU
				(SIMPX
					(VF das)
					(FKOORD
						(LK geht)
						(PX
							[01;36m(PX[00m
								(PX so bis zweihundert zwanzig)
								(KON und)
								(NX naturlich)[01;36m)[00m
							(ADVX jetzt)
							(PX fur gehobene anspruche))
						(NF das grandhotel))))
			[01;31m(SIMPX[00m
				(VF da)
				(LK musten)
				(MF sie allerdings schon funfhundert mark)
				(VC hinlegen)[01;31m)[00m
			(C wobei)
			(SIMPX ich weis ja nicht ob das))))
Step:UNSET add
{'subtrees': ['PX', 'KON', 'NX'], 'family': ['PX', 'ADVX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'APPR', 'CARD', 'CARD', 'KON', 'ADV'), 'right siblings': [(ADVX (ADV jetzt)), (PX (APPR fur) (NX (ADJX (ADJA gehobene)) (NN anspruche)))], 'left siblings': [], 'auto preterminal span': (42, 48), 'span': (42, 48), 'parent': 'PX', 'label': 'PX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM ja)
			(DM also)
			(SIMPX wir haben hier jetzt drei hotels die wir wieder gerne empfehlen)
			(PX zum einen)
			(NX das hotel am thielenplatz das liegt so bis hundert dreisig mark pro zimmer)
			(SIMPX und dann gibt es ein zentralhotel)
			(SIMPX das ist wirklich auch sehr zentral)
			(SU das geht so bis zweihundert zwanzig und naturlich jetzt fur gehobene anspruche das grandhotel)
			[01;31m(SIMPX[00m
				(VF da)
				(LK musten)
				(MF sie allerdings schon funfhundert mark)
				(VC hinlegen)[01;31m)[00m
			(C wobei)
			(SIMPX ich weis ja nicht ob das))))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['DM', 'DM', 'SIMPX', 'PX', 'NX', 'SIMPX', 'SIMPX', 'SU', 'SIMPX', 'C', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADV', 'PPER', 'VAFIN', 'ADV', 'ADV', 'CARD', 'NN', 'PRELS', 'PPER', 'ADV', 'ADV', 'VVFIN', 'APPRART', 'PIS', 'ART', 'NN', 'APPRART', 'NE', 'PDS', 'VVFIN', 'ADV', 'APPR', 'CARD', 'CARD', 'NN', 'APPR', 'NN', 'KON', 'ADV', 'VVFIN', 'PPER', 'ART', 'NE', 'PDS', 'VAFIN', 'ADV', 'ADV', 'ADV', 'ADJD', 'PDS', 'VVFIN', 'ADV', 'APPR', 'CARD', 'CARD', 'KON', 'ADV', 'ADV', 'APPR', 'ADJA', 'NN', 'ART', 'NE', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'CARD', 'NN', 'VVINF', 'PWAV', 'PPER', 'VVFIN', 'ADV', 'PTKNEG', 'KOUS', 'PDS'), 'right siblings': ['C', 'SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 69), 'span': (54, 62), 'left siblings': ['DM', 'DM', 'SIMPX', 'PX', 'NX', 'SIMPX', 'SIMPX', 'SU'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ja also wir haben hier jetzt drei hotels die wir wieder gerne empfehlen zum einen das hotel am thielenplatz das liegt so bis hundert dreisig mark pro zimmer und dann gibt es ein zentralhotel das ist wirklich auch sehr zentral das geht so bis zweihundert zwanzig und naturlich jetzt fur gehobene anspruche das grandhotel da musten sie allerdings schon funfhundert mark hinlegen wobei ich weis ja nicht ob das)

Sentence 283:
0 Initial errors
0 on fringe, 0 iterations

Sentence 284:
0 Initial errors
0 on fringe, 0 iterations

Sentence 285:
0 Initial errors
0 on fringe, 0 iterations

Sentence 286:
4 Initial errors
0 on fringe, 3 iterations
2 Error:Single Word Phrase
1 Error:Modifier Attachment
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM ja)
			[01;31m(ADVX[00m
				[01;36m(DM[00m [01;31m(ADVX[00m
					(ADV naturlich)[01;31m)[00m[01;36m)[00m
				(ADVX da)[01;31m)[00m
			[01;31m(PX[00m
				(ADVX grade)
				(PX am wochenende)[01;31m)[00m)))
Step:Single Word Phrase
{'family': ['DM', 'ADVX'], 'auto preterminal span': (1, 2), 'span': (1, 2), 'subtrees': ['ADV'], 'parent': 'ADVX', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'DM')}
(TOP
	(TURN
		(SU
			(DM ja)
			[01;31m(ADVX[00m
				(DM naturlich)
				(ADVX da)[01;31m)[00m
			[01;31m(PX[00m
				(ADVX grade)
				(PX am wochenende)[01;31m)[00m)))
Step:Modifier Attachment
{'subtrees': ['DM', 'ADVX'], 'family': ['DM', 'ADVX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADV', 'ADV', 'ADV', 'APPRART', 'NN'), 'right siblings': ['PX'], 'parent': 'SU', 'auto preterminal span': (0, 6), 'span': (1, 3), 'left siblings': ['DM'], 'label': 'ADVX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM ja)
			(DM naturlich)
			(ADVX da)
			[01;31m(PX[00m
				(ADVX grade)
				(PX am wochenende)[01;31m)[00m)))
Step:PP Attachment
{'subtrees': ['ADVX', 'PX'], 'family': ['DM', 'DM', 'ADVX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADV', 'ADV', 'ADV', 'APPRART', 'NN'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (0, 6), 'span': (3, 6), 'left siblings': ['DM', 'DM', 'ADVX'], 'label': 'PX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP ja naturlich da grade am wochenende)

Sentence 287:
0 Initial errors
0 on fringe, 0 iterations

Sentence 288:
0 Initial errors
0 on fringe, 0 iterations

Sentence 289:
0 Initial errors
0 on fringe, 0 iterations

Sentence 290:
2 Initial errors
0 on fringe, 2 iterations
1 Error:Unary
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM ja)
			[01;31m(DM[00m
				[01;31m(NX[00m
					(NX schonen dank)
					(PX fur den anruf)[01;31m)[00m[01;31m)[00m)))
Step:Unary
{'subtrees': ['NX'], 'family': ['DM', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADJA', 'NN', 'APPR', 'ART', 'NN'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (0, 6), 'span': (1, 6), 'left siblings': ['DM'], 'label': 'DM', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM ja)
			[01;31m(NX[00m
				(NX schonen dank)
				(PX fur den anruf)[01;31m)[00m)))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['DM', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADJA', 'NN', 'APPR', 'ART', 'NN'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (0, 6), 'span': (1, 6), 'left siblings': ['DM'], 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP ja schonen dank fur den anruf)

Sentence 291:
0 Initial errors
0 on fringe, 0 iterations

Sentence 292:
0 Initial errors
0 on fringe, 0 iterations

Sentence 293:
9 Initial errors
0 on fringe, 5 iterations
3 Error:UNSET move
2 Error:Different label
2 Error:Modifier Attachment
1 Error:Modifier Attachment
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			[01;31m(SIMPX[00m
				(VF da)
				(LK fahren)
				[01;36m(MF[00m
					[01;31m(MF[00m
						(ADVX erst)
						(ADVX mal)
						[01;33m(NX[00m (NX verschiedene zuge)[01;31m)[00m
					[01;36m(NX[00m [01;31m(NF[00m [01;33m(NX (NX[00m
						(NX drei)
						[01;31m(ADVX[00m
							(ADVX morgens) [01;33mNX)[00m
							(ADVX mittags) [01;33mNX)[00m
							(KON und)
							(ADVX abends)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;31m)[00m [01;33mNX)[00m
			(SIMPX da konnten sie sich schon mal auswahlen))))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['ADVX', 'ADVX', 'NX', 'NF'], 'mover info': [('NF', (6, 11))], 'old_family': ['VF', 'LK', 'MF', 'NF'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('ADV', 'VVFIN', 'ADV', 'ADV', 'ADJA', 'NN', 'CARD', 'ADV', 'ADV', 'KON', 'ADV'), 'start right siblings': [], 'end left siblings': ['ADVX', 'ADVX', 'NX'], 'auto preterminal span': (0, 11), 'adding node already present': False, 'movers': ['NF'], 'old_parent': 'SIMPX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(SU
			[01;31m(SIMPX[00m
				(VF da)
				(LK fahren)
				(MF
					(ADVX erst)
					(ADVX mal)
					(NX
						(NX verschiedene zuge)
						[01;36m(NX[00m [01;31m(NF[00m [01;33m(NX (NX[00m
							(NX drei)
							[01;31m(ADVX[00m
								(ADVX morgens) [01;33mNX)[00m
								(ADVX mittags) [01;33mNX)[00m
								(KON und)
								(ADVX abends)[01;31m)[00m[01;31m)[00m[01;36m)[00m))[01;31m)[00m
			(SIMPX da konnten sie sich schon mal auswahlen))))
Step:Different label
{'family': ['NX', 'NX'], 'auto preterminal span': (6, 11), 'span': (6, 11), 'subtrees': ['NX', 'ADVX'], 'parent': 'NX', 'over_word': False, 'auto preterminals': ('CARD', 'ADV', 'ADV', 'KON', 'ADV'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('NF', 'NX')}
(TOP
	(TURN
		(SU
			[01;31m(SIMPX[00m
				(VF da)
				(LK fahren)
				(MF
					(ADVX erst)
					(ADVX mal)
					(NX
						(NX verschiedene zuge)
						(NX [01;33m(NX (NX[00m
							(NX drei)
							[01;31m(ADVX[00m
								(ADVX morgens) [01;33mNX)[00m
								(ADVX mittags) [01;33mNX)[00m
								(KON und)
								(ADVX abends)[01;31m)[00m)))[01;31m)[00m
			(SIMPX da konnten sie sich schon mal auswahlen))))
Step:Modifier Attachment
{'new_parent': 'NX', 'new_family': ['NX', 'NX', 'ADVX', 'KON', 'ADVX'], 'mover info': [('ADVX', (8, 9)), ('KON', (9, 10)), ('ADVX', (10, 11))], 'old_family': ['ADVX', 'ADVX', 'KON', 'ADVX'], 'start left siblings': ['ADVX'], 'auto preterminals': ('ADJA', 'NN', 'CARD', 'ADV', 'ADV', 'KON', 'ADV'), 'start right siblings': [], 'end left siblings': ['NX', 'NX'], 'auto preterminal span': (4, 11), 'adding node already present': False, 'movers': ['ADVX', 'KON', 'ADVX'], 'old_parent': 'ADVX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(SU
			[01;31m(SIMPX[00m
				(VF da)
				(LK fahren)
				(MF
					(ADVX erst)
					(ADVX mal)
					(NX
						(NX verschiedene zuge)
						(NX
							[01;36m(NX[00m
								(NX drei morgens)
								(ADVX mittags)[01;36m)[00m
							(KON und)
							(ADVX abends))))[01;31m)[00m
			(SIMPX da konnten sie sich schon mal auswahlen))))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADVX'], 'family': ['NX', 'KON', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'ADV', 'ADV'), 'right siblings': [(KON und), (ADVX (ADV abends))], 'left siblings': [], 'auto preterminal span': (6, 9), 'span': (6, 9), 'parent': 'NX', 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU
			[01;31m(SIMPX[00m
				(VF da)
				(LK fahren)
				(MF erst mal verschiedene zuge drei morgens mittags und abends)[01;31m)[00m
			(SIMPX da konnten sie sich schon mal auswahlen))))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN', 'ADV', 'ADV', 'ADJA', 'NN', 'CARD', 'ADV', 'ADV', 'KON', 'ADV', 'ADV', 'VMFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'VVINF'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 18), 'span': (0, 11), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP da fahren erst mal verschiedene zuge drei morgens mittags und abends da konnten sie sich schon mal auswahlen)

Sentence 294:
0 Initial errors
0 on fringe, 0 iterations

Sentence 295:
7 Initial errors
0 on fringe, 6 iterations
2 Error:Single Word Phrase
1 Error:PP Attachment
1 Error:Modifier Attachment
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:NP Internal Structure
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			[01;31m(NX[00m
				(KON und)
				(ADVX dann)
				[01;31m(NX[00m
					(NX diese zwei nachte)
					(R die sie da bleiben mochten)[01;31m)[00m[01;31m)[00m
			(SIMPX da wurde ich mal nachschauen)
			(SIMPX da haben wir verschiedene preisklassen)
			(SIMPX
				(VF und zwar)
				(LK gibt)
				(MF
					(NX es)
					[01;36m(PX[00m
						(APPR zwischen)
						(PX
							(PX von funfundachtzig)
							(PX
								[01;31m(PX[00m
									(APPR bis)
									[01;33m(NX[00m (NX funfhundert)[01;31m)[00m
								[01;36m(NX[00m [01;31m(ADVX[00m
									(ADV aufwarts)[01;31m)[00m[01;36m)[00m))[01;36m)[00m))))) [01;33mNX)[00m
Step:Single Word Phrase
{'family': ['PX', 'NX'], 'auto preterminal span': (29, 30), 'span': (29, 30), 'subtrees': ['ADV'], 'parent': 'PX', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'NX')}
(TOP
	(TURN
		(SU
			[01;31m(NX[00m
				(KON und)
				(ADVX dann)
				[01;31m(NX[00m
					(NX diese zwei nachte)
					(R die sie da bleiben mochten)[01;31m)[00m[01;31m)[00m
			(SIMPX da wurde ich mal nachschauen)
			(SIMPX da haben wir verschiedene preisklassen)
			(SIMPX
				(VF und zwar)
				(LK gibt)
				(MF
					(NX es)
					[01;36m(PX[00m
						(APPR zwischen)
						(PX
							(PX von funfundachtzig)
							(PX
								[01;31m(PX[00m
									(APPR bis)
									[01;33m(NX[00m (NX funfhundert)[01;31m)[00m
								(NX aufwarts)))[01;36m)[00m))))) [01;33mNX)[00m
Step:PP Attachment
{'subtrees': ['APPR', 'PX'], 'family': ['NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'APPR', 'CARD', 'APPR', 'CARD', 'ADV'), 'right siblings': [], 'left siblings': [(NX (PPER es))], 'auto preterminal span': (24, 30), 'span': (24, 30), 'parent': 'MF', 'label': 'PX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU
			[01;31m(NX[00m
				(KON und)
				(ADVX dann)
				[01;31m(NX[00m
					(NX diese zwei nachte)
					(R die sie da bleiben mochten)[01;31m)[00m[01;31m)[00m
			(SIMPX da wurde ich mal nachschauen)
			(SIMPX da haben wir verschiedene preisklassen)
			(SIMPX
				(VF und zwar)
				(LK gibt)
				(MF
					(NX es)
					(PX
						(APPR zwischen)
						(PX
							(PX von funfundachtzig)
							(PX
								[01;31m(PX[00m
									(APPR bis)
									[01;33m(NX[00m (NX funfhundert)[01;31m)[00m
								(NX aufwarts))))))))) [01;33mNX)[00m
Step:Modifier Attachment
{'subtrees': ['KON', 'ADVX', 'NX'], 'family': ['NX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'ADV', 'PDAT', 'CARD', 'NN', 'PRELS', 'PPER', 'ADV', 'VVINF', 'VMFIN', 'ADV', 'VAFIN', 'PPER', 'ADV', 'VVINF', 'ADV', 'VAFIN', 'PPER', 'ADJA', 'NN', 'KON', 'ADV', 'VVFIN', 'PPER', 'APPR', 'APPR', 'CARD', 'APPR', 'CARD', 'ADV'), 'right siblings': ['SIMPX', 'SIMPX', 'SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 30), 'span': (0, 10), 'left siblings': [], 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(KON und)
			(ADVX dann)
			[01;31m(NX[00m
				(NX diese zwei nachte)
				(R die sie da bleiben mochten)[01;31m)[00m
			(SIMPX da wurde ich mal nachschauen)
			(SIMPX da haben wir verschiedene preisklassen)
			(SIMPX
				(VF und zwar)
				(LK gibt)
				(MF
					(NX es)
					(PX
						(APPR zwischen)
						(PX
							(PX von funfundachtzig)
							(PX
								[01;31m(PX[00m
									(APPR bis)
									[01;33m(NX[00m (NX funfhundert)[01;31m)[00m
								(NX aufwarts))))))))) [01;33mNX)[00m
Step:UNSET remove
{'subtrees': ['NX', 'R'], 'family': ['KON', 'ADVX', 'NX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'ADV', 'PDAT', 'CARD', 'NN', 'PRELS', 'PPER', 'ADV', 'VVINF', 'VMFIN', 'ADV', 'VAFIN', 'PPER', 'ADV', 'VVINF', 'ADV', 'VAFIN', 'PPER', 'ADJA', 'NN', 'KON', 'ADV', 'VVFIN', 'PPER', 'APPR', 'APPR', 'CARD', 'APPR', 'CARD', 'ADV'), 'right siblings': ['SIMPX', 'SIMPX', 'SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 30), 'span': (2, 10), 'left siblings': ['KON', 'ADVX'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(KON und)
			(ADVX dann)
			(NX diese zwei nachte)
			(R die sie da bleiben mochten)
			(SIMPX da wurde ich mal nachschauen)
			(SIMPX da haben wir verschiedene preisklassen)
			(SIMPX
				(VF und zwar)
				(LK gibt)
				(MF
					(NX es)
					(PX
						(APPR zwischen)
						(PX
							(PX von funfundachtzig)
							(PX
								[01;31m(PX[00m
									(APPR bis)
									[01;33m(NX[00m (NX funfhundert)[01;31m)[00m
								(NX aufwarts))))))))) [01;33mNX)[00m
Step:UNSET remove
{'subtrees': ['APPR', 'NX'], 'family': ['PX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'CARD', 'ADV'), 'right siblings': ['NX'], 'parent': 'PX', 'auto preterminal span': (27, 30), 'span': (27, 29), 'left siblings': [], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(KON und)
			(ADVX dann)
			(NX diese zwei nachte)
			(R die sie da bleiben mochten)
			(SIMPX da wurde ich mal nachschauen)
			(SIMPX da haben wir verschiedene preisklassen)
			(SIMPX
				(VF und zwar)
				(LK gibt)
				(MF
					(NX es)
					(PX
						(APPR zwischen)
						(PX
							(PX von funfundachtzig)
							(PX
								(APPR bis)
								[01;36m(NX[00m
									(NX funfhundert)
									(NX aufwarts)[01;36m)[00m))))))))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['APPR', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'ADV'), 'right siblings': [], 'left siblings': [(APPR bis)], 'auto preterminal span': (28, 30), 'span': (28, 30), 'parent': 'PX', 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'add'}
(TOP und dann diese zwei nachte die sie da bleiben mochten da wurde ich mal nachschauen da haben wir verschiedene preisklassen und zwar gibt es zwischen von funfundachtzig bis funfhundert aufwarts)

Sentence 296:
10 Initial errors
0 on fringe, 5 iterations
3 Error:UNSET move
3 Error:Modifier Attachment
2 Error:Single Word Phrase
1 Error:Single Word Phrase
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SIMPX[00m
	(TOP
		(TURN
			(SU
				(SIMPX es kann schon eine gehobene preisklasse sein)
				[01;31m(SIMPX[00m
					[01;31m(KOORD[00m
						(KON und)[01;31m)[00m
					[01;36m(SIMPX[00m
						(VF hauptsache)
						(LK ist)
						(NF
							(SIMPX
								(C das)
								[01;36m(NX[00m
									(MF
										[01;31m(NX[00m
											(ART das)
											[01;36m(NX[00m
												(NN [01;33m(NX[00m hotel)[01;36m)[00m[01;31m)[00m
										[01;36m(NX[00m [01;31m(ADJX[00m
											(ADJD zentral)[01;31m)[00m[01;36m)[00m) [01;33mNX)[00m[01;36m)[00m
								(VC liegt)))[01;36m)[00m[01;31m)[00m)))[01;36m)[00m
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SIMPX', 'KOORD', 'SIMPX'], 'mover info': [('KOORD', (7, 8))], 'old_family': ['KOORD', 'VF', 'LK', 'NF'], 'start left siblings': [], 'auto preterminals': ('PPER', 'VMFIN', 'ADV', 'ART', 'ADJA', 'NN', 'VAINF', 'KON', 'NN', 'VAFIN', 'KOUS', 'ART', 'NN', 'ADJD', 'VVFIN'), 'start right siblings': ['VF', 'LK', 'NF'], 'end left siblings': ['SIMPX'], 'auto preterminal span': (0, 15), 'adding node already present': False, 'movers': ['KOORD'], 'old_parent': 'SIMPX', 'POS confusion': ('KON', 'KON'), 'added and moved': True, 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'NX'}
(TOP
	(SIMPX
		(TURN
			(SU
				(SIMPX es kann schon eine gehobene preisklasse sein)
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				(SIMPX
					(VF hauptsache)
					(LK ist)
					(NF
						(SIMPX
							(C das)
							[01;36m(NX[00m
								(MF
									[01;31m(NX[00m
										(ART das)
										[01;36m(NX[00m
											(NN [01;33m(NX[00m hotel)[01;36m)[00m[01;31m)[00m
									[01;36m(NX[00m [01;31m(ADJX[00m
										(ADJD zentral)[01;31m)[00m[01;36m)[00m) [01;33mNX)[00m[01;36m)[00m
							(VC liegt))))))))
Step:Modifier Attachment
{'new_parent': 'NX', 'new_family': ['ART', 'NN', 'ADJX'], 'mover info': [('ADJX', (13, 14))], 'old_family': ['NX', 'ADJX'], 'start left siblings': ['NX'], 'auto preterminals': ('ART', 'NN', 'ADJD'), 'start right siblings': [], 'end left siblings': ['ART', 'NN'], 'auto preterminal span': (11, 14), 'adding node already present': False, 'movers': ['ADJX'], 'old_parent': 'MF', 'POS confusion': ('ADJD', 'ADJD'), 'added and moved': True, 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'NX'}
(TOP
	(SIMPX
		(TURN
			(SU
				(SIMPX es kann schon eine gehobene preisklasse sein)
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				(SIMPX
					(VF hauptsache)
					(LK ist)
					(NF
						(SIMPX
							(C das)
							(MF
								(NX
									(ART das)
									(NX
										[01;36m(NX[00m
											(NN hotel)[01;36m)[00m
										[01;36m(NX[00m [01;31m(ADJX[00m
											(ADJD zentral)[01;31m)[00m[01;36m)[00m)))
							(VC liegt))))))))
Step:Single Word Phrase
{'family': ['NN', 'NX'], 'auto preterminal span': (13, 14), 'span': (13, 14), 'subtrees': ['ADJD'], 'parent': 'NX', 'over_word': True, 'auto preterminals': ('ADJD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'NX')}
(TOP
	(SIMPX
		(TURN
			(SU
				(SIMPX es kann schon eine gehobene preisklasse sein)
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				(SIMPX
					(VF hauptsache)
					(LK ist)
					(NF
						(SIMPX
							(C das)
							(MF
								(NX
									(ART das)
									(NX
										[01;36m(NX[00m
											(NN hotel)[01;36m)[00m
										(NX zentral))))
							(VC liegt))))))))
Step:Single Word Phrase
{'subtrees': ['NN'], 'family': ['NX', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('NN',), 'right siblings': [(NX (ADJD zentral))], 'left siblings': [], 'auto preterminal span': (12, 13), 'span': (12, 13), 'parent': 'NX', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(SIMPX
		(TURN
			(SU
				(SIMPX es kann schon eine gehobene preisklasse sein)
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				(SIMPX hauptsache ist das das hotel zentral liegt)))))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['SIMPX', 'KOORD', 'SIMPX'], 'over_word': True, 'over words': True, 'auto preterminals': ('PPER', 'VMFIN', 'ADV', 'ART', 'ADJA', 'NN', 'VAINF', 'KON', 'NN', 'VAFIN', 'KOUS', 'ART', 'NN', 'ADJD', 'VVFIN'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 15), 'span': (7, 8), 'left siblings': ['SIMPX'], 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP es kann schon eine gehobene preisklasse sein und hauptsache ist das das hotel zentral liegt)

Sentence 297:
0 Initial errors
0 on fringe, 0 iterations

Sentence 298:
0 Initial errors
0 on fringe, 0 iterations

Sentence 299:
0 Initial errors
0 on fringe, 0 iterations

Sentence 300:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			[01;31m(DM[00m
				(NX
					(NE oborski))[01;31m)[00m)))
Step:Unary
{'subtrees': ['NX'], 'family': ['DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('NE',), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (0, 1), 'span': (0, 1), 'left siblings': [], 'label': 'DM', 'classified_type': 'Unary', 'type': 'remove'}
(TOP oborski)

Sentence 301:
3 Initial errors
0 on fringe, 3 iterations
1 Error:NP Internal Structure
1 Error:NP Internal Structure
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM ja)
			(DM einen moment)
			(SIMPX da mus ich erst mal mein portemonnaie aufmachen)
			(SIMPX
				(VF die kontonummer)
				(LK ist)
				(MF
					(NX
						[01;31m(NX[00m
							(CARD neun)[01;31m)[00m
						[01;36m(NX[00m
							(NX vier)
							(NX sechs)[01;36m)[00m
						[01;36m(NX[00m
							(NX zwo)
							(NX drei)[01;36m)[00m
						(NX acht)))))))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['NX', 'NX', 'NX', 'NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'CARD'), 'right siblings': [(NX (CARD zwo)), (NX (CARD drei)), (NX (CARD acht))], 'left siblings': [(NX (CARD neun))], 'auto preterminal span': (15, 17), 'span': (15, 17), 'parent': 'NX', 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM ja)
			(DM einen moment)
			(SIMPX da mus ich erst mal mein portemonnaie aufmachen)
			(SIMPX
				(VF die kontonummer)
				(LK ist)
				(MF
					(NX
						[01;31m(NX[00m
							(CARD neun)[01;31m)[00m
						(NX vier sechs)
						[01;36m(NX[00m
							(NX zwo)
							(NX drei)[01;36m)[00m
						(NX acht)))))))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['NX', 'NX', 'NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'CARD'), 'right siblings': [(NX (CARD acht))], 'left siblings': [(NX (CARD neun)), (NX (NX (CARD vier)) (NX (CARD sechs)))], 'auto preterminal span': (17, 19), 'span': (17, 19), 'parent': 'NX', 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM ja)
			(DM einen moment)
			(SIMPX da mus ich erst mal mein portemonnaie aufmachen)
			(SIMPX
				(VF die kontonummer)
				(LK ist)
				(MF
					(NX
						[01;31m(NX[00m
							(CARD neun)[01;31m)[00m
						(NX vier sechs)
						(NX zwo drei)
						(NX acht)))))))
Step:Single Word Phrase
{'subtrees': ['CARD'], 'family': ['NX', 'NX', 'NX', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('CARD', 'CARD', 'CARD', 'CARD', 'CARD', 'CARD'), 'right siblings': ['NX', 'NX', 'NX'], 'parent': 'NX', 'auto preterminal span': (14, 20), 'span': (14, 15), 'left siblings': [], 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP ja einen moment da mus ich erst mal mein portemonnaie aufmachen die kontonummer ist neun vier sechs zwo drei acht)

Sentence 302:
0 Initial errors
0 on fringe, 0 iterations

Sentence 303:
0 Initial errors
0 on fringe, 0 iterations

Sentence 304:
0 Initial errors
0 on fringe, 0 iterations

Sentence 305:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM ja)
			(NX
				[01;31m(NX[00m
					(NE raiffeisenbank)[01;31m)[00m
				(NX bonn)))))
Step:Single Word Phrase
{'subtrees': ['NE'], 'family': ['NX', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('NE', 'NE'), 'right siblings': ['NX'], 'parent': 'NX', 'auto preterminal span': (1, 3), 'span': (1, 2), 'left siblings': [], 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP ja raiffeisenbank bonn)

Sentence 306:
0 Initial errors
0 on fringe, 0 iterations

Sentence 307:
5 Initial errors
0 on fringe, 5 iterations
1 Error:Single Word Phrase
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:UNSET add
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM aha)
			(DM ach gut)
			(SIMPX
				(VF das)
				(LK hort)
				(MF sich immer so)
				(VC an)
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						(C
							(KOUS als)
							[01;36m(C[00m
								(KOUS ob)[01;36m)[00m)
						(MF [01;33m(MVC[00m
							(NX das)
							[01;31m(NX[00m
								(NX nix halbes) [01;33mMVC)[00m
								(KON und)
								(NX nix ganzes)[01;31m)[00m)
						(VC ist)[01;31m)[00m[01;31m)[00m)
			(SIMPX oder wie sehe ich das))))
Step:Single Word Phrase
{'subtrees': ['KOUS'], 'family': ['KOUS', 'C'], 'over_word': True, 'over words': True, 'auto preterminals': ('KOUS',), 'right siblings': [], 'left siblings': [(KOUS als)], 'auto preterminal span': (10, 11), 'span': (10, 11), 'parent': 'C', 'label': 'C', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM aha)
			(DM ach gut)
			(SIMPX
				(VF das)
				(LK hort)
				(MF sich immer so)
				(VC an)
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						(C als ob)
						(MF [01;33m(MVC[00m
							(NX das)
							[01;31m(NX[00m
								(NX nix halbes) [01;33mMVC)[00m
								(KON und)
								(NX nix ganzes)[01;31m)[00m)
						(VC ist)[01;31m)[00m[01;31m)[00m)
			(SIMPX oder wie sehe ich das))))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['VF', 'LK', 'MF', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VVFIN', 'PRF', 'ADV', 'ADV', 'PTKVZ', 'KOUS', 'KOUS', 'PDS', 'PIS', 'NN', 'KON', 'PIS', 'NN', 'VAFIN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (3, 18), 'span': (9, 18), 'left siblings': ['VF', 'LK', 'MF', 'VC'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM aha)
			(DM ach gut)
			(SIMPX
				(VF das)
				(LK hort)
				(MF sich immer so)
				(VC an)
				[01;31m(SIMPX[00m
					(C als ob)
					(MF [01;33m(MVC[00m
						(NX das)
						[01;31m(NX[00m
							(NX nix halbes) [01;33mMVC)[00m
							(KON und)
							(NX nix ganzes)[01;31m)[00m)
					(VC ist)[01;31m)[00m)
			(SIMPX oder wie sehe ich das))))
Step:UNSET remove
{'subtrees': ['C', 'MF', 'VC'], 'family': ['VF', 'LK', 'MF', 'VC', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VVFIN', 'PRF', 'ADV', 'ADV', 'PTKVZ', 'KOUS', 'KOUS', 'PDS', 'PIS', 'NN', 'KON', 'PIS', 'NN', 'VAFIN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (3, 18), 'span': (9, 18), 'left siblings': ['VF', 'LK', 'MF', 'VC'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM aha)
			(DM ach gut)
			(SIMPX
				(VF das)
				(LK hort)
				(MF sich immer so)
				(VC an)
				(C als ob)
				(MF [01;33m(MVC[00m
					(NX das)
					[01;31m(NX[00m
						(NX nix halbes) [01;33mMVC)[00m
						(KON und)
						(NX nix ganzes)[01;31m)[00m)
				(VC ist))
			(SIMPX oder wie sehe ich das))))
Step:UNSET remove
{'subtrees': ['NX', 'KON', 'NX'], 'family': ['NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'PIS', 'NN', 'KON', 'PIS', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (11, 17), 'span': (12, 17), 'left siblings': ['NX'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM aha)
			(DM ach gut)
			(SIMPX
				(VF das)
				(LK hort)
				(MF sich immer so)
				(VC an)
				(C als ob)
				(MF
					[01;36m(MVC[00m
						(NX das)
						(NX nix halbes)[01;36m)[00m
					(KON und)
					(NX nix ganzes))
				(VC ist))
			(SIMPX oder wie sehe ich das))))
Step:UNSET add
{'subtrees': ['NX', 'NX'], 'family': ['MVC', 'KON', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'PIS', 'NN'), 'right siblings': [(KON und), (NX (NX (PIS nix)) (NX (NN ganzes)))], 'left siblings': [], 'auto preterminal span': (11, 14), 'span': (11, 14), 'parent': 'MF', 'label': 'MVC', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP aha ach gut das hort sich immer so an als ob das nix halbes und nix ganzes ist oder wie sehe ich das)

Sentence 308:
12 Initial errors
0 on fringe, 7 iterations
4 Error:UNSET move
2 Error:NP Attachment
2 Error:NP Attachment
1 Error:Modifier Attachment
1 Error:Unary
1 Error:Single Word Phrase
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM nein)
			(SIMPX
				(VF jetzt)
				(LK habe)
				[01;36m(MF[00m
					[01;31m(MF[00m
						(NX ich)
						[01;31m(NX[00m [01;33m(NX[00m
							(PDS das)[01;31m)[00m[01;31m)[00m
					[01;31m(VC[00m
						[01;31m(VXINF[00m
							(VVPP vermerkt)[01;31m)[00m[01;31m)[00m[01;36m)[00m) [01;33mNX)[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF ich)
				(LK schicke)
				[01;31m(MF[00m
					[01;36m(MF[00m
						(NX ihnen)
						(ADVX dann)[01;36m)[00m
					[01;36m(SIMPX[00m
						[01;36m(NF[00m
							(SIMPX
								(C wenn)
								(MF sie mir ihre adresse grade noch)
								(VC geben wurden))[01;36m)[00m
						[01;36m(MF[00m
							(NX
								(PDS das))[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m)))
Step:UNSET move
{'new_parent': 'NX', 'new_family': ['PDS', 'VC'], 'mover info': [('VC', (5, 6))], 'old_family': ['VF', 'LK', 'MF', 'VC'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'PDS', 'VVPP'), 'start right siblings': [], 'end left siblings': ['PDS'], 'auto preterminal span': (1, 6), 'movers': ['VC'], 'old_parent': 'SIMPX', 'POS confusion': ('VVPP', 'VVPP'), 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			(DM nein)
			(SIMPX
				(VF jetzt)
				(LK habe)
				(MF
					(NX ich)
					(NX
						(PDS das)
						[01;31m(VC[00m
							[01;31m(VXINF[00m
								(VVPP vermerkt)[01;31m)[00m[01;31m)[00m)))
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF ich)
				(LK schicke)
				[01;31m(MF[00m
					[01;36m(MF[00m
						(NX ihnen)
						(ADVX dann)[01;36m)[00m
					[01;36m(SIMPX[00m
						[01;36m(NF[00m
							(SIMPX
								(C wenn)
								(MF sie mir ihre adresse grade noch)
								(VC geben wurden))[01;36m)[00m
						[01;36m(MF[00m
							(NX
								(PDS das))[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m)))
Step:NP Attachment
{'new_parent': 'SIMPX', 'new_family': ['KOORD', 'VF', 'LK', 'NX', 'ADVX', 'SIMPX', 'MF'], 'mover info': [('NX', (9, 10)), ('ADVX', (10, 11)), ('SIMPX', (11, 20))], 'old_family': ['NX', 'ADVX', 'SIMPX', 'NX'], 'start left siblings': [], 'auto preterminals': ('KON', 'PPER', 'VVFIN', 'PPER', 'ADV', 'KOUS', 'PPER', 'PPER', 'PPOSAT', 'NN', 'ADV', 'ADV', 'VVINF', 'VAFIN', 'PDS'), 'start right siblings': ['NX'], 'end left siblings': ['KOORD', 'VF', 'LK'], 'auto preterminal span': (6, 21), 'movers': ['NX', 'ADVX', 'SIMPX'], 'old_parent': 'MF', 'end right siblings': ['MF'], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU
			(DM nein)
			(SIMPX
				(VF jetzt)
				(LK habe)
				(MF
					(NX ich)
					(NX
						(PDS das)
						[01;31m(VC[00m
							[01;31m(VXINF[00m
								(VVPP vermerkt)[01;31m)[00m[01;31m)[00m)))
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF ich)
				(LK schicke)
				[01;36m(MF[00m
					(NX ihnen)
					(ADVX dann)[01;36m)[00m
				[01;36m(SIMPX[00m
					[01;36m(NF[00m
						(SIMPX
							(C wenn)
							(MF sie mir ihre adresse grade noch)
							(VC geben wurden))[01;36m)[00m
					(MF das)[01;36m)[00m[01;31m)[00m)))
Step:NP Attachment
{'new_parent': 'SU', 'new_family': ['DM', 'SIMPX', 'KOORD', 'VF', 'LK', 'NX', 'ADVX', 'SIMPX'], 'mover info': [('KOORD', (6, 7)), ('VF', (7, 8)), ('LK', (8, 9)), ('NX', (9, 10)), ('ADVX', (10, 11))], 'old_family': ['KOORD', 'VF', 'LK', 'NX', 'ADVX', 'SIMPX', 'MF'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'ADV', 'VAFIN', 'PPER', 'PDS', 'VVPP', 'KON', 'PPER', 'VVFIN', 'PPER', 'ADV', 'KOUS', 'PPER', 'PPER', 'PPOSAT', 'NN', 'ADV', 'ADV', 'VVINF', 'VAFIN', 'PDS'), 'start right siblings': ['SIMPX', 'MF'], 'end left siblings': ['DM', 'SIMPX'], 'auto preterminal span': (0, 21), 'movers': ['KOORD', 'VF', 'LK', 'NX', 'ADVX'], 'old_parent': 'SIMPX', 'end right siblings': ['SIMPX'], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU
			(DM nein)
			(SIMPX
				(VF jetzt)
				(LK habe)
				(MF
					(NX ich)
					(NX
						(PDS das)
						[01;31m(VC[00m
							[01;31m(VXINF[00m
								(VVPP vermerkt)[01;31m)[00m[01;31m)[00m)))
			(KOORD und)
			(VF ich)
			(LK schicke)
			[01;36m(MF[00m
				(NX ihnen)
				(ADVX dann)[01;36m)[00m
			(SIMPX
				[01;36m(NF[00m
					(SIMPX
						(C wenn)
						(MF sie mir ihre adresse grade noch)
						(VC geben wurden))[01;36m)[00m
				(MF das)))))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADVX'], 'family': ['DM', 'SIMPX', 'KOORD', 'VF', 'LK', 'MF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV'), 'right siblings': [(SIMPX (SIMPX (C (KOUS wenn)) (MF (NX (PPER sie)) (NX (PPER mir)) (NX (PPOSAT ihre) (NN adresse)) (ADVX (ADV grade)) (ADVX (ADV noch))) (VC (VXINF (VVINF geben)) (VXFIN (VAFIN wurden)))) (MF (NX (PDS das))))], 'left siblings': [(DM (PTKANT nein)), (SIMPX (VF (ADVX (ADV jetzt))) (LK (VXFIN (VAFIN habe))) (MF (NX (PPER ich)) (NX (PDS das) (VC (VXINF (VVPP vermerkt)))))), (KOORD (KON und)), (VF (NX (PPER ich))), (LK (VXFIN (VVFIN schicke)))], 'auto preterminal span': (9, 11), 'span': (9, 11), 'parent': 'SU', 'label': 'MF', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM nein)
			(SIMPX
				(VF jetzt)
				(LK habe)
				(MF
					(NX ich)
					(NX
						(PDS das)
						[01;31m(VC[00m
							[01;31m(VXINF[00m
								(VVPP vermerkt)[01;31m)[00m[01;31m)[00m)))
			(KOORD und)
			(VF ich)
			(LK schicke)
			(MF ihnen dann)
			(SIMPX
				[01;36m(NF[00m
					(SIMPX
						(C wenn)
						(MF sie mir ihre adresse grade noch)
						(VC geben wurden))[01;36m)[00m
				(MF das)))))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['NF', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'PPER', 'PPOSAT', 'NN', 'ADV', 'ADV', 'VVINF', 'VAFIN'), 'right siblings': [(MF (NX (PDS das)))], 'left siblings': [], 'auto preterminal span': (11, 20), 'span': (11, 20), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM nein)
			(SIMPX
				(VF jetzt)
				(LK habe)
				(MF
					(NX ich)
					(NX
						(PDS das)
						[01;31m(VC[00m
							[01;31m(VXINF[00m
								(VVPP vermerkt)[01;31m)[00m[01;31m)[00m)))
			(KOORD und)
			(VF ich)
			(LK schicke)
			(MF ihnen dann)
			(SIMPX wenn sie mir ihre adresse grade noch geben wurden das))))
Step:Single Word Phrase
{'subtrees': ['VVPP'], 'family': ['VXINF'], 'over_word': True, 'over words': True, 'auto preterminals': ('VVPP',), 'right siblings': [], 'parent': 'VC', 'auto preterminal span': (5, 6), 'span': (5, 6), 'left siblings': [], 'label': 'VXINF', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM nein)
			(SIMPX
				(VF jetzt)
				(LK habe)
				(MF
					(NX ich)
					(NX
						(PDS das)
						[01;31m(VC[00m
							(VVPP vermerkt)[01;31m)[00m)))
			(KOORD und)
			(VF ich)
			(LK schicke)
			(MF ihnen dann)
			(SIMPX wenn sie mir ihre adresse grade noch geben wurden das))))
Step:Single Word Phrase
{'subtrees': ['VVPP'], 'family': ['PDS', 'VC'], 'over_word': True, 'over words': True, 'auto preterminals': ('PDS', 'VVPP'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (4, 6), 'span': (5, 6), 'left siblings': ['PDS'], 'label': 'VC', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP nein jetzt habe ich das vermerkt und ich schicke ihnen dann wenn sie mir ihre adresse grade noch geben wurden das)

Sentence 309:
12 Initial errors
0 on fringe, 8 iterations
2 Error:Single Word Phrase
2 Error:Single Word Phrase
2 Error:NP Attachment
2 Error:Single Word Phrase
1 Error:UNSET remove
1 Error:Single Word Phrase
1 Error:UNSET remove
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX
				(VF da)
				(LK ist)
				(MF
					[01;31m(NX[00m
						[01;31m(NX[00m
							[01;31m(NX[00m
								[01;36m(NX[00m [01;31m(ADJX[00m
									(ADJA hirschberger)[01;31m)[00m[01;36m)[00m
								[01;36m(ADVX[00m
									(NN [01;33m(NX[00m strase)[01;36m)[00m[01;31m)[00m
							[01;31m(NX[00m
								(CARD vierundsechzig)[01;31m)[00m[01;31m)[00m
						(PX
							(APPR in)
							(NX
								[01;31m(NX[00m
									[01;36m(ADJX[00m [01;31m(NX[00m
										(CARD funf)[01;31m)[00m[01;36m)[00m
									(NX drei)
									(NX eins)
									(NX eins)
									[01;31m(NX[00m
										(CARD neun)[01;31m)[00m[01;31m)[00m
								(NE bonn)))[01;31m)[00m))))) [01;33mNX)[00m
Step:Single Word Phrase
{'family': ['NX', 'NN'], 'auto preterminal span': (3, 4), 'span': (3, 4), 'subtrees': ['ADJA'], 'parent': 'NX', 'over_word': True, 'auto preterminals': ('ADJA',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'NX')}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX
				(VF da)
				(LK ist)
				(MF
					[01;31m(NX[00m
						[01;31m(NX[00m
							[01;31m(NX[00m
								(NX hirschberger)
								[01;36m(ADVX[00m
									(NN [01;33m(NX[00m strase)[01;36m)[00m[01;31m)[00m
							[01;31m(NX[00m
								(CARD vierundsechzig)[01;31m)[00m[01;31m)[00m
						(PX
							(APPR in)
							(NX
								[01;31m(NX[00m
									[01;36m(ADJX[00m [01;31m(NX[00m
										(CARD funf)[01;31m)[00m[01;36m)[00m
									(NX drei)
									(NX eins)
									(NX eins)
									[01;31m(NX[00m
										(CARD neun)[01;31m)[00m[01;31m)[00m
								(NE bonn)))[01;31m)[00m))))) [01;33mNX)[00m
Step:Single Word Phrase
{'family': ['ADJX', 'NX', 'NX', 'NX', 'NX'], 'auto preterminal span': (7, 8), 'span': (7, 8), 'subtrees': ['CARD'], 'parent': 'NX', 'over_word': True, 'auto preterminals': ('CARD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('NX', 'ADJX')}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX
				(VF da)
				(LK ist)
				(MF
					[01;31m(NX[00m
						[01;31m(NX[00m
							[01;31m(NX[00m
								(NX hirschberger)
								[01;36m(ADVX[00m
									(NN [01;33m(NX[00m strase)[01;36m)[00m[01;31m)[00m
							[01;31m(NX[00m
								(CARD vierundsechzig)[01;31m)[00m[01;31m)[00m
						(PX
							(APPR in)
							(NX
								[01;31m(NX[00m
									(ADJX funf)
									(NX drei)
									(NX eins)
									(NX eins)
									[01;31m(NX[00m
										(CARD neun)[01;31m)[00m[01;31m)[00m
								(NE bonn)))[01;31m)[00m))))) [01;33mNX)[00m
Step:NP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'NX'], 'mover info': [('NX', (3, 4))], 'old_family': ['NX', 'NN'], 'start left siblings': [], 'auto preterminals': ('ADJA', 'NN', 'CARD', 'APPR', 'CARD', 'CARD', 'CARD', 'CARD', 'CARD', 'NE'), 'start right siblings': ['NN'], 'end left siblings': [], 'auto preterminal span': (3, 13), 'movers': ['NX'], 'old_parent': 'NX', 'POS confusion': ('ADJA', 'ADJA'), 'end right siblings': ['NX'], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX
				(VF da)
				(LK ist)
				(MF
					(NX hirschberger)
					(NX
						[01;31m(NX[00m
							[01;36m(ADVX[00m [01;31m(NX[00m
								(NN strase)[01;31m)[00m[01;36m)[00m
							[01;31m(NX[00m
								(CARD vierundsechzig)[01;31m)[00m[01;31m)[00m
						(PX
							(APPR in)
							(NX
								[01;31m(NX[00m
									(ADJX funf)
									(NX drei)
									(NX eins)
									(NX eins)
									[01;31m(NX[00m
										(CARD neun)[01;31m)[00m[01;31m)[00m
								(NE bonn)))))))))
Step:Single Word Phrase
{'family': ['ADVX', 'NX'], 'auto preterminal span': (4, 5), 'span': (4, 5), 'subtrees': ['NN'], 'parent': 'NX', 'over_word': True, 'auto preterminals': ('NN',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('NX', 'ADVX')}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX
				(VF da)
				(LK ist)
				(MF
					(NX hirschberger)
					(NX
						[01;31m(NX[00m
							(ADVX strase)
							[01;31m(NX[00m
								(CARD vierundsechzig)[01;31m)[00m[01;31m)[00m
						(PX
							(APPR in)
							(NX
								[01;31m(NX[00m
									(ADJX funf)
									(NX drei)
									(NX eins)
									(NX eins)
									[01;31m(NX[00m
										(CARD neun)[01;31m)[00m[01;31m)[00m
								(NE bonn)))))))))
Step:UNSET remove
{'subtrees': ['ADVX', 'NX'], 'family': ['NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'CARD', 'APPR', 'CARD', 'CARD', 'CARD', 'CARD', 'CARD', 'NE'), 'right siblings': ['PX'], 'parent': 'NX', 'auto preterminal span': (4, 13), 'span': (4, 6), 'left siblings': [], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX
				(VF da)
				(LK ist)
				(MF
					(NX hirschberger)
					(NX
						(ADVX strase)
						[01;31m(NX[00m
							(CARD vierundsechzig)[01;31m)[00m
						(PX
							(APPR in)
							(NX
								[01;31m(NX[00m
									(ADJX funf)
									(NX drei)
									(NX eins)
									(NX eins)
									[01;31m(NX[00m
										(CARD neun)[01;31m)[00m[01;31m)[00m
								(NE bonn)))))))))
Step:Single Word Phrase
{'subtrees': ['CARD'], 'family': ['ADVX', 'NX', 'PX'], 'over_word': True, 'over words': True, 'auto preterminals': ('NN', 'CARD', 'APPR', 'CARD', 'CARD', 'CARD', 'CARD', 'CARD', 'NE'), 'right siblings': ['PX'], 'parent': 'NX', 'auto preterminal span': (4, 13), 'span': (5, 6), 'left siblings': ['ADVX'], 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX
				(VF da)
				(LK ist)
				(MF
					(NX hirschberger)
					(NX
						(ADVX strase)
						(CARD vierundsechzig)
						(PX
							(APPR in)
							(NX
								[01;31m(NX[00m
									(ADJX funf)
									(NX drei)
									(NX eins)
									(NX eins)
									[01;31m(NX[00m
										(CARD neun)[01;31m)[00m[01;31m)[00m
								(NE bonn)))))))))
Step:UNSET remove
{'subtrees': ['ADJX', 'NX', 'NX', 'NX', 'NX'], 'family': ['NX', 'NE'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'CARD', 'CARD', 'CARD', 'CARD', 'NE'), 'right siblings': ['NE'], 'parent': 'NX', 'auto preterminal span': (7, 13), 'span': (7, 12), 'left siblings': [], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX
				(VF da)
				(LK ist)
				(MF
					(NX hirschberger)
					(NX
						(ADVX strase)
						(CARD vierundsechzig)
						(PX
							(APPR in)
							(NX
								(ADJX funf)
								(NX drei)
								(NX eins)
								(NX eins)
								[01;31m(NX[00m
									(CARD neun)[01;31m)[00m
								(NE bonn)))))))))
Step:Single Word Phrase
{'subtrees': ['CARD'], 'family': ['ADJX', 'NX', 'NX', 'NX', 'NX', 'NE'], 'over_word': True, 'over words': True, 'auto preterminals': ('CARD', 'CARD', 'CARD', 'CARD', 'CARD', 'NE'), 'right siblings': ['NE'], 'parent': 'NX', 'auto preterminal span': (7, 13), 'span': (11, 12), 'left siblings': ['ADJX', 'NX', 'NX', 'NX'], 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP ja da ist hirschberger strase vierundsechzig in funf drei eins eins neun bonn)

Sentence 310:
0 Initial errors
0 on fringe, 0 iterations

Sentence 311:
0 Initial errors
0 on fringe, 0 iterations

Sentence 312:
12 Initial errors
0 on fringe, 5 iterations
6 Error:Co-ordination
3 Error:Clause Attachment
1 Error:Unary
1 Error:Unary
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			[01;31m(NX[00m
				[01;36m(NX[00m
					(ADVX erst)
					(ADVX mal)
					(NX die frage)[01;36m)[00m
				[01;33m(SIMPX (NF[00m (SIMPX wie sie anreisen mochten)[01;31m)[00m
			[01;31m(SIMPX[00m [01;33m(SIMPX (NF[00m
				(C ob)
				(MF sie mit der bahn)
				(VC fahren)
				[01;31m(NF[00m
					[01;31m(PX[00m
						[01;36m(PX[00m
							[01;36m(NF[00m
								(KON oder)
								(PX mit dem bus) [01;33mNF) SIMPX) NF) SIMPX)[00m[01;36m)[00m[01;36m)[00m
						[01;36m(DM[00m
							(KON oder)[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m)))
Step:Co-ordination
{'new_parent': 'SU', 'new_family': ['NX', 'SIMPX', 'KON'], 'mover info': [('KON', (18, 19))], 'old_family': ['KON', 'PX', 'KON'], 'start left siblings': ['KON', 'PX'], 'auto preterminals': ('ADV', 'ADV', 'ART', 'NN', 'KOUS', 'PPER', 'VVINF', 'VMFIN', 'KOUS', 'PPER', 'APPR', 'ART', 'NN', 'VVFIN', 'KON', 'APPR', 'ART', 'NN', 'KON'), 'start right siblings': [], 'end left siblings': ['NX', 'SIMPX'], 'auto preterminal span': (0, 19), 'movers': ['KON'], 'old_parent': 'PX', 'POS confusion': ('KON', 'KON'), 'end right siblings': [], 'classified_type': 'Co-ordination', 'type': 'move'}
(TOP
	(TURN
		(SU
			[01;31m(NX[00m
				[01;36m(NX[00m
					(ADVX erst)
					(ADVX mal)
					(NX die frage)[01;36m)[00m
				[01;33m(SIMPX (NF[00m (SIMPX wie sie anreisen mochten)[01;31m)[00m
			[01;36m(NF[00m
				(SIMPX
					(C ob)
					(MF sie mit der bahn)
					(VC fahren)
					(NF oder mit dem bus)) [01;33mNF) SIMPX)[00m[01;36m)[00m
			[01;36m(DM[00m
				(KON oder)[01;36m)[00m)))
Step:Clause Attachment
{'new_parent': 'SU', 'new_family': ['NX', 'SIMPX', 'SIMPX', 'KON'], 'mover info': [('SIMPX', (4, 8))], 'old_family': ['ADVX', 'ADVX', 'NX', 'SIMPX'], 'start left siblings': ['ADVX', 'ADVX', 'NX'], 'auto preterminals': ('ADV', 'ADV', 'ART', 'NN', 'KOUS', 'PPER', 'VVINF', 'VMFIN', 'KOUS', 'PPER', 'APPR', 'ART', 'NN', 'VVFIN', 'KON', 'APPR', 'ART', 'NN', 'KON'), 'start right siblings': [], 'end left siblings': ['NX'], 'auto preterminal span': (0, 19), 'adding node already present': False, 'movers': ['SIMPX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': ['SIMPX', 'KON'], 'classified_type': 'Clause Attachment', 'type': 'move', 'added label': 'DM'}
(TOP
	(TURN
		(SU
			(NX erst mal die frage)
			[01;36m(NF[00m
				(SIMPX
					(SIMPX wie sie anreisen mochten)
					[01;36m(NF[00m
						(SIMPX
							(C ob)
							(MF sie mit der bahn)
							(VC fahren)
							(NF oder mit dem bus))[01;36m)[00m)[01;36m)[00m
			[01;36m(DM[00m
				(KON oder)[01;36m)[00m)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['NX', 'NF', 'KON'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'VVINF', 'VMFIN', 'KOUS', 'PPER', 'APPR', 'ART', 'NN', 'VVFIN', 'KON', 'APPR', 'ART', 'NN'), 'right siblings': [(KON oder)], 'left siblings': [(NX (ADVX (ADV erst)) (ADVX (ADV mal)) (NX (ART die) (NN frage)))], 'auto preterminal span': (4, 18), 'span': (4, 18), 'parent': 'SU', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU
			(NX erst mal die frage)
			(NF
				(SIMPX
					(SIMPX wie sie anreisen mochten)
					[01;36m(NF[00m
						(SIMPX
							(C ob)
							(MF sie mit der bahn)
							(VC fahren)
							(NF oder mit dem bus))[01;36m)[00m))
			[01;36m(DM[00m
				(KON oder)[01;36m)[00m)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SIMPX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'APPR', 'ART', 'NN', 'VVFIN', 'KON', 'APPR', 'ART', 'NN'), 'right siblings': [], 'left siblings': [(SIMPX (C (KOUS wie)) (MF (NX (PPER sie))) (VC (VXINF (VVINF anreisen)) (VXFIN (VMFIN mochten))))], 'auto preterminal span': (8, 18), 'span': (8, 18), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU
			(NX erst mal die frage)
			(NF wie sie anreisen mochten ob sie mit der bahn fahren oder mit dem bus)
			[01;36m(DM[00m
				(KON oder)[01;36m)[00m)))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['NX', 'NF', 'DM'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON',), 'right siblings': [], 'left siblings': [(NX (ADVX (ADV erst)) (ADVX (ADV mal)) (NX (ART die) (NN frage))), (NF (SIMPX (SIMPX (C (KOUS wie)) (MF (NX (PPER sie))) (VC (VXINF (VVINF anreisen)) (VXFIN (VMFIN mochten)))) (NF (SIMPX (C (KOUS ob)) (MF (NX (PPER sie)) (PX (APPR mit) (NX (ART der) (NN bahn)))) (VC (VXFIN (VVFIN fahren))) (NF (PX (KON oder) (PX (APPR mit) (NX (ART dem) (NN bus)))))))))], 'auto preterminal span': (18, 19), 'span': (18, 19), 'parent': 'SU', 'label': 'DM', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP erst mal die frage wie sie anreisen mochten ob sie mit der bahn fahren oder mit dem bus oder)

Sentence 313:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX
				(VF ich)
				(LK dachte)
				(MF
					(NX mir)
					[01;31m(PX[00m
						(ADVX moglichst)
						[01;36m(PX[00m
							(APPR mit)
							(NX der bahn)[01;36m)[00m[01;31m)[00m)))))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'ADVX', 'PX'], 'mover info': [('ADVX', (4, 5))], 'old_family': ['ADVX', 'APPR', 'NX'], 'start left siblings': [], 'auto preterminals': ('PRF', 'ADV', 'APPR', 'ART', 'NN'), 'start right siblings': ['APPR', 'NX'], 'end left siblings': ['NX'], 'auto preterminal span': (3, 8), 'movers': ['ADVX'], 'old_parent': 'PX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['PX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP ja ich dachte mir moglichst mit der bahn)

Sentence 314:
0 Initial errors
0 on fringe, 0 iterations

Sentence 315:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(ADVX
				[01;36m(ADVX[00m [01;31m(ADJX[00m
					(ADJD lieber)[01;31m)[00m[01;36m)[00m
				(ADVX gern)
				(ADVX morgens)))))
Step:Single Word Phrase
{'family': ['ADVX', 'ADVX', 'ADVX'], 'auto preterminal span': (0, 1), 'span': (0, 1), 'subtrees': ['ADJD'], 'parent': 'ADVX', 'over_word': True, 'auto preterminals': ('ADJD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'ADVX')}
(TOP lieber gern morgens)

Sentence 316:
0 Initial errors
0 on fringe, 0 iterations

Sentence 317:
0 Initial errors
0 on fringe, 0 iterations

Sentence 318:
0 Initial errors
0 on fringe, 0 iterations

Sentence 319:
0 Initial errors
0 on fringe, 0 iterations

Sentence 320:
0 Initial errors
0 on fringe, 0 iterations

Sentence 321:
0 Initial errors
0 on fringe, 0 iterations

Sentence 322:
0 Initial errors
0 on fringe, 0 iterations

Sentence 323:
0 Initial errors
0 on fringe, 0 iterations

Sentence 324:
0 Initial errors
0 on fringe, 0 iterations

Sentence 325:
0 Initial errors
0 on fringe, 0 iterations

Sentence 326:
2 Initial errors
0 on fringe, 2 iterations
1 Error:UNSET add
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM nee)
			(SIMPX das musten sie)
			(SIMPX
				(VF das)
				(LK musten)
				[01;31m(FKOORD[00m
					(MVC sie schon selber zum zum bahnhof bringen)
					(KON und)
					(MVCN
						[01;36m(MVC[00m
							(MF von da aus dann halt)
							(VC transportieren lassen)[01;36m)[00m
						(NF vielleicht))[01;31m)[00m))))
Step:UNSET add
{'subtrees': ['MF', 'VC'], 'family': ['MVC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ADV', 'APZR', 'ADV', 'ADV', 'VVINF', 'VVINF'), 'right siblings': [(NF (ADVX (ADV vielleicht)))], 'left siblings': [], 'auto preterminal span': (14, 21), 'span': (14, 21), 'parent': 'MVCN', 'label': 'MVC', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM nee)
			(SIMPX das musten sie)
			(SIMPX
				(VF das)
				(LK musten)
				[01;31m(FKOORD[00m
					(MVC sie schon selber zum zum bahnhof bringen)
					(KON und)
					(MVCN von da aus dann halt transportieren lassen vielleicht)[01;31m)[00m))))
Step:UNSET remove
{'subtrees': ['MVC', 'KON', 'MVCN'], 'family': ['VF', 'LK', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VMFIN', 'PPER', 'ADV', 'ADV', 'APPRART', 'APPRART', 'NN', 'VVINF', 'KON', 'APPR', 'ADV', 'APZR', 'ADV', 'ADV', 'VVINF', 'VVINF', 'ADV'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (4, 22), 'span': (6, 22), 'left siblings': ['VF', 'LK'], 'label': 'FKOORD', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP nee das musten sie das musten sie schon selber zum zum bahnhof bringen und von da aus dann halt transportieren lassen vielleicht)

Sentence 327:
0 Initial errors
0 on fringe, 0 iterations

Sentence 328:
4 Initial errors
0 on fringe, 2 iterations
3 Error:UNSET move
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM ja)
			(DM sicher)
			(DM herr klein)
			[01;36m(SIMPX[00m
				(SIMPX ich mache das fertig)
				[01;31m(SIMPX[00m
					[01;31m(KOORD[00m
						(KON und)[01;31m)[00m
					[01;36m(SIMPX[00m
						(VF dann)
						(LK werde)
						(MF ich sie noch mal)
						(VC anrufen)[01;36m)[00m[01;31m)[00m[01;36m)[00m)))
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['DM', 'DM', 'DM', 'SIMPX', 'KOORD', 'SIMPX'], 'mover info': [('KOORD', (8, 9))], 'old_family': ['KOORD', 'VF', 'LK', 'MF', 'VC'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'ITJ', 'NN', 'NE', 'PPER', 'VVFIN', 'PDS', 'PTKVZ', 'KON', 'ADV', 'VAFIN', 'PPER', 'PPER', 'ADV', 'ADV', 'VVINF'), 'start right siblings': ['VF', 'LK', 'MF', 'VC'], 'end left siblings': ['DM', 'DM', 'DM', 'SIMPX'], 'auto preterminal span': (0, 16), 'adding node already present': False, 'movers': ['KOORD'], 'old_parent': 'SIMPX', 'POS confusion': ('KON', 'KON'), 'added and moved': True, 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'SIMPX'}
(TOP
	(TURN
		(SU
			(DM ja)
			(DM sicher)
			(DM herr klein)
			(SIMPX
				(SIMPX ich mache das fertig)
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				(SIMPX dann werde ich sie noch mal anrufen)))))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['SIMPX', 'KOORD', 'SIMPX'], 'over_word': True, 'over words': True, 'auto preterminals': ('PPER', 'VVFIN', 'PDS', 'PTKVZ', 'KON', 'ADV', 'VAFIN', 'PPER', 'PPER', 'ADV', 'ADV', 'VVINF'), 'right siblings': ['SIMPX'], 'parent': 'SIMPX', 'auto preterminal span': (4, 16), 'span': (8, 9), 'left siblings': ['SIMPX'], 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP ja sicher herr klein ich mache das fertig und dann werde ich sie noch mal anrufen)

Sentence 329:
0 Initial errors
0 on fringe, 0 iterations

Sentence 330:
0 Initial errors
0 on fringe, 0 iterations

Sentence 331:
0 Initial errors
0 on fringe, 0 iterations

Sentence 332:
0 Initial errors
0 on fringe, 0 iterations

Sentence 333:
2 Initial errors
0 on fringe, 2 iterations
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM ja)
			[01;31m(SIMPX[00m
				(LK denke)
				(MF ich schon)[01;31m)[00m
			[01;36m(NF[00m
				(SIMPX
					(VF das)
					(LK ware)
					(MF vielleicht vernunftig))[01;36m)[00m)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['DM', 'SIMPX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VAFIN', 'ADV', 'ADJD'), 'right siblings': [], 'left siblings': [(DM (PTKANT ja)), (SIMPX (LK (VXFIN (VVFIN denke))) (MF (NX (PPER ich)) (ADVX (ADV schon))))], 'auto preterminal span': (4, 8), 'span': (4, 8), 'parent': 'SU', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM ja)
			[01;31m(SIMPX[00m
				(LK denke)
				(MF ich schon)[01;31m)[00m
			(NF das ware vielleicht vernunftig))))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['DM', 'SIMPX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'VVFIN', 'PPER', 'ADV', 'PDS', 'VAFIN', 'ADV', 'ADJD'), 'right siblings': ['NF'], 'parent': 'SU', 'auto preterminal span': (0, 8), 'span': (1, 4), 'left siblings': ['DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ja denke ich schon das ware vielleicht vernunftig)

Sentence 334:
0 Initial errors
0 on fringe, 0 iterations

Sentence 335:
3 Initial errors
0 on fringe, 2 iterations
2 Error:Single Word Phrase
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX
				(VF ich)
				(LK wurde)
				(VC sagen)
				(NF
					(SIMPX
						(VF wir)
						(LK wurden)
						(MF
							[01;36m(ADVX[00m [01;31m(ADJX[00m
								(ADJD besser)[01;31m)[00m[01;36m)[00m
							(ADJX ziemlich fruh))
						(VC fahren)
						(NF
							(SIMPX
								(C damit)
								(FKOORD
									(MVC wir morgens direkt da sind)
									(KON und)
									(MVC
										(MF
											(ADVX dann)
											[01;36m(PX[00m
												(ADVX direkt)
												(PX auf die messe)[01;36m)[00m)
										(VC losgehen konnen)))))))))))
Step:Single Word Phrase
{'family': ['ADVX', 'ADJX'], 'auto preterminal span': (6, 7), 'span': (6, 7), 'subtrees': ['ADJD'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('ADJD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'ADVX')}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX
				(VF ich)
				(LK wurde)
				(VC sagen)
				(NF
					(SIMPX
						(VF wir)
						(LK wurden)
						(MF besser ziemlich fruh)
						(VC fahren)
						(NF
							(SIMPX
								(C damit)
								(FKOORD
									(MVC wir morgens direkt da sind)
									(KON und)
									(MVC
										(MF
											(ADVX dann)
											[01;36m(PX[00m
												(ADVX direkt)
												(PX auf die messe)[01;36m)[00m)
										(VC losgehen konnen)))))))))))
Step:PP Attachment
{'subtrees': ['ADVX', 'PX'], 'family': ['ADVX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'APPR', 'ART', 'NN'), 'right siblings': [], 'left siblings': [(ADVX (ADV dann))], 'auto preterminal span': (18, 22), 'span': (18, 22), 'parent': 'MF', 'label': 'PX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP ja ich wurde sagen wir wurden besser ziemlich fruh fahren damit wir morgens direkt da sind und dann direkt auf die messe losgehen konnen)

Sentence 336:
0 Initial errors
0 on fringe, 0 iterations

Sentence 337:
0 Initial errors
0 on fringe, 0 iterations

Sentence 338:
0 Initial errors
0 on fringe, 0 iterations

Sentence 339:
0 Initial errors
0 on fringe, 0 iterations

Sentence 340:
0 Initial errors
0 on fringe, 0 iterations

Sentence 341:
0 Initial errors
0 on fringe, 0 iterations

Sentence 342:
6 Initial errors
0 on fringe, 2 iterations
5 Error:NP Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP [01;33m(VF (NX (NX[00m
	(TURN
		(SU
			(NX das)
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					[01;31m(NX[00m
						(NX was) [01;33mNX)[00m
						(PX fur ein hotel)[01;31m)[00m[01;31m)[00m [01;33mNX) VF)[00m
				(LK wurden)
				(MF sie)
				(VC vorziehen)[01;31m)[00m)))
Step:NP Attachment
{'new_parent': 'NX', 'new_family': ['NX', 'NX', 'PX'], 'mover info': [('NX', (0, 1))], 'old_family': ['NX', 'SIMPX'], 'start left siblings': [], 'auto preterminals': ('PDS', 'PWS', 'APPR', 'ART', 'NN', 'VAFIN', 'PPER', 'VVINF'), 'start right siblings': ['SIMPX'], 'end left siblings': [], 'auto preterminal span': (0, 8), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'SU', 'POS confusion': ('PDS', 'PDS'), 'added and moved': True, 'end right siblings': ['NX', 'PX'], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(SU
			[01;31m(SIMPX[00m
				(VF das was fur ein hotel)
				(LK wurden)
				(MF sie)
				(VC vorziehen)[01;31m)[00m)))
Step:Unary
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'PWS', 'APPR', 'ART', 'NN', 'VAFIN', 'PPER', 'VVINF'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (0, 8), 'span': (0, 8), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP das was fur ein hotel wurden sie vorziehen)

Sentence 343:
0 Initial errors
0 on fringe, 0 iterations

Sentence 344:
0 Initial errors
0 on fringe, 0 iterations

Sentence 345:
0 Initial errors
0 on fringe, 0 iterations

Sentence 346:
0 Initial errors
0 on fringe, 0 iterations

Sentence 347:
0 Initial errors
0 on fringe, 0 iterations

Sentence 348:
0 Initial errors
0 on fringe, 0 iterations

Sentence 349:
0 Initial errors
0 on fringe, 0 iterations

Sentence 350:
0 Initial errors
0 on fringe, 0 iterations

Sentence 351:
0 Initial errors
0 on fringe, 0 iterations

Sentence 352:
0 Initial errors
0 on fringe, 0 iterations

Sentence 353:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM ja)
			(DM
				[01;36m(DM[00m
					(ITJ tschus)[01;36m)[00m
				(ADVX dann)))))
Step:Single Word Phrase
{'subtrees': ['ITJ'], 'family': ['DM', 'ADVX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ITJ',), 'right siblings': [(ADVX (ADV dann))], 'left siblings': [], 'auto preterminal span': (1, 2), 'span': (1, 2), 'parent': 'DM', 'label': 'DM', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP ja tschus dann)

Sentence 354:
0 Initial errors
0 on fringe, 0 iterations

Sentence 355:
11 Initial errors
0 on fringe, 6 iterations
5 Error:UNSET move
2 Error:Single Word Phrase
1 Error:Unary
1 Error:Unary
1 Error:PP Attachment
1 Error:UNSET add
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			[01;36m(NX[00m
				[01;36m(DM[00m
					[01;31m(DM[00m
						[01;31m(NX[00m
							(NX reiseagentur)
							[01;33m(NX (NX[00m (NX maritim)[01;31m)[00m[01;31m)[00m
					[01;31m(DM[00m
						[01;31m(NX[00m
							[01;36m(LK[00m [01;36m(VXFIN[00m [01;31m(NX[00m
								(NE fischenbeck)[01;31m)[00m [01;33mNX)[00m[01;36m)[00m[01;36m)[00m
							(PX am apparat)[01;31m)[00m[01;31m)[00m [01;33mNX)[00m[01;36m)[00m[01;36m)[00m
			(DM guten tag))))
Step:UNSET move
{'new_parent': 'NX', 'new_family': ['NX', 'NX', 'DM'], 'mover info': [('DM', (2, 5))], 'old_family': ['DM', 'DM', 'DM'], 'start left siblings': ['DM'], 'auto preterminals': ('NN', 'NE', 'NE', 'APPRART', 'NN', 'ADJA', 'NN'), 'start right siblings': ['DM'], 'end left siblings': ['NX', 'NX'], 'auto preterminal span': (0, 7), 'adding node already present': False, 'movers': ['DM'], 'old_parent': 'SU', 'added and moved': True, 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'LK'}
(TOP
	(TURN
		(SU
			(DM
				(NX
					(NX reiseagentur)
					(NX [01;33m(NX[00m
						(NX maritim)
						[01;31m(DM[00m
							[01;31m(NX[00m
								[01;36m(LK[00m [01;36m(VXFIN[00m [01;31m(NX[00m
									(NE fischenbeck)[01;31m)[00m [01;33mNX)[00m[01;36m)[00m[01;36m)[00m
								(PX am apparat)[01;31m)[00m[01;31m)[00m)))
			(DM guten tag))))
Step:Single Word Phrase
{'family': ['VXFIN', 'PX'], 'auto preterminal span': (2, 3), 'span': (2, 3), 'subtrees': ['NE'], 'parent': 'NX', 'over_word': True, 'auto preterminals': ('NE',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('NX', 'VXFIN')}
(TOP
	(TURN
		(SU
			(DM
				(NX
					(NX reiseagentur)
					(NX [01;33m(NX[00m
						(NX maritim)
						[01;31m(DM[00m
							[01;31m(NX[00m
								[01;36m(LK[00m
									(VXFIN
										(NE fischenbeck)) [01;33mNX)[00m[01;36m)[00m
								(PX am apparat)[01;31m)[00m[01;31m)[00m)))
			(DM guten tag))))
Step:Unary
{'subtrees': ['VXFIN'], 'family': ['LK', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NE',), 'right siblings': [(PX (APPRART am) (NX (NN apparat)))], 'left siblings': [], 'auto preterminal span': (2, 3), 'span': (2, 3), 'parent': 'NX', 'label': 'LK', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM
				(NX
					(NX reiseagentur)
					(NX [01;33m(NX[00m
						(NX maritim)
						[01;31m(DM[00m
							[01;31m(NX[00m
								(LK fischenbeck) [01;33mNX)[00m
								(PX am apparat)[01;31m)[00m[01;31m)[00m)))
			(DM guten tag))))
Step:Unary
{'subtrees': ['NX'], 'family': ['NX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('NE', 'NE', 'APPRART', 'NN'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (1, 5), 'span': (2, 5), 'left siblings': ['NX'], 'label': 'DM', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM
				(NX
					(NX reiseagentur)
					(NX [01;33m(NX[00m
						(NX maritim)
						[01;31m(NX[00m
							(LK fischenbeck) [01;33mNX)[00m
							(PX am apparat)[01;31m)[00m)))
			(DM guten tag))))
Step:PP Attachment
{'subtrees': ['LK', 'PX'], 'family': ['NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NE', 'NE', 'APPRART', 'NN'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (1, 5), 'span': (2, 5), 'left siblings': ['NX'], 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM
				(NX
					(NX reiseagentur)
					(NX
						[01;36m(NX[00m
							(NX maritim)
							(LK fischenbeck)[01;36m)[00m
						(PX am apparat))))
			(DM guten tag))))
Step:UNSET add
{'subtrees': ['NX', 'LK'], 'family': ['NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NE', 'NE'), 'right siblings': [(PX (APPRART am) (NX (NN apparat)))], 'left siblings': [], 'auto preterminal span': (1, 3), 'span': (1, 3), 'parent': 'NX', 'label': 'NX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP reiseagentur maritim fischenbeck am apparat guten tag)

Sentence 356:
0 Initial errors
0 on fringe, 0 iterations

Sentence 357:
0 Initial errors
0 on fringe, 0 iterations

Sentence 358:
0 Initial errors
0 on fringe, 0 iterations

Sentence 359:
5 Initial errors
0 on fringe, 1 iterations
5 Error:NP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SIMPX[00m
	(TOP [01;33m(VF (NX[00m
		(TURN
			(SU
				(NX geschaft)
				[01;31m(SIMPX[00m
					[01;31m(VF[00m
						(NX
							(NN geschaft))[01;31m)[00m [01;33mNX) VF)[00m
					(LK ist)
					(MF geschaft)[01;31m)[00m)))[01;36m)[00m
Step:NP Attachment
{'new_parent': 'VF', 'new_family': ['NX', 'NX'], 'mover info': [('NX', (0, 1))], 'old_family': ['NX', 'SIMPX'], 'start left siblings': [], 'auto preterminals': ('NN', 'NN', 'VAFIN', 'NN'), 'start right siblings': ['SIMPX'], 'end left siblings': [], 'auto preterminal span': (0, 4), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'SU', 'POS confusion': ('NN', 'NN'), 'added and moved': True, 'end right siblings': ['NX'], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'NX'}
(TOP geschaft geschaft ist geschaft)

Sentence 360:
3 Initial errors
0 on fringe, 2 iterations
2 Error:Single Word Phrase
1 Error:UNSET add
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(NX
				[01;36m(NX[00m [01;31m(ADVX[00m
					(ADV ungefahr)[01;31m)[00m[01;36m)[00m
				[01;36m(NX[00m
					(ADJX zweihundert dreisig)
					(NN mark)[01;36m)[00m))))
Step:Single Word Phrase
{'family': ['NX', 'ADJX', 'NN'], 'auto preterminal span': (0, 1), 'span': (0, 1), 'subtrees': ['ADV'], 'parent': 'NX', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'NX')}
(TOP
	(TURN
		(SU
			(NX
				(NX ungefahr)
				[01;36m(NX[00m
					(ADJX zweihundert dreisig)
					(NN mark)[01;36m)[00m))))
Step:UNSET add
{'subtrees': ['ADJX', 'NN'], 'family': ['NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'CARD', 'NN'), 'right siblings': [], 'left siblings': [(NX (ADV ungefahr))], 'auto preterminal span': (1, 4), 'span': (1, 4), 'parent': 'NX', 'label': 'NX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP ungefahr zweihundert dreisig mark)

Sentence 361:
0 Initial errors
0 on fringe, 0 iterations

Sentence 362:
0 Initial errors
0 on fringe, 0 iterations

Sentence 363:
0 Initial errors
0 on fringe, 0 iterations

Sentence 364:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(SIMPX
				(VF das)
				(LK macht)
				(MF
					(ADVX dann)
					[01;31m(NX[00m
						(NX achtundsiebzig mark)
						(ADVX einfach)[01;31m)[00m)))))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADVX'], 'family': ['ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'CARD', 'NN', 'ADV'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (2, 6), 'span': (3, 6), 'left siblings': ['ADVX'], 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP das macht dann achtundsiebzig mark einfach)

Sentence 365:
0 Initial errors
0 on fringe, 0 iterations

Sentence 366:
14 Initial errors
0 on fringe, 8 iterations
4 Error:UNSET move
3 Error:PP Attachment
2 Error:NP Attachment
1 Error:Unary
1 Error:UNSET remove
1 Error:Unary
1 Error:UNSET remove
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(SIMPX
				(VF da)
				(LK kann)
				(MF
					(NX ich)
					(NX ihnen)
					(NX [01;33m(NX[00m
						(ART das)
						[01;31m(NX[00m
							(NX grandhotel) [01;33mNX)[00m
							(NX musmann)[01;31m)[00m))
				(VC anbieten))
			[01;36m(LV[00m
				[01;36m(NX[00m
					(ART [01;33m(NX[00m das)
					[01;31m(NX[00m
						[01;31m(NX[00m
							(ADJX zentrale)
							(NN lage)[01;31m)[00m [01;33mNX)[00m
						(PX mit garage)[01;31m)[00m[01;36m)[00m[01;36m)[00m
			[01;31m(SIMPX[00m
				(VF die)
				(LK brauchen)
				(MF sie zwar nicht)[01;31m)[00m
			(SIMPX
				(VF da)
				(LK liegt)
				(MF
					[01;31m(NX[00m
						(NX die preiskategorie)
						[01;31m(PX[00m [01;33m(PX[00m
							(APPR fur)
							[01;33m(NX[00m (NX ein einzelzimmer)[01;31m)[00m[01;31m)[00m
					(PX
						(APPR bei)
						(NX [01;33m(ADJX[00m
							(NX hundert achtundsiebzig mark)
							(APPR bis)
							[01;31m(NX[00m
								(ADJX funfhundert achtzehn) [01;33mADJX)[00m
								(NN mark)[01;31m)[00m))))))) [01;33mNX) PX)[00m
Step:UNSET move
{'new_parent': 'NX', 'new_family': ['ART', 'ADJX', 'NN'], 'mover info': [('ART', (8, 9))], 'old_family': ['SIMPX', 'ART', 'NX', 'SIMPX', 'SIMPX'], 'start left siblings': ['SIMPX'], 'auto preterminals': ('ADV', 'VMFIN', 'PPER', 'PPER', 'ART', 'NE', 'NE', 'VVINF', 'ART', 'ADJA', 'NN', 'APPR', 'NN', 'PDS', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADV', 'VVFIN', 'ART', 'NN', 'APPR', 'ART', 'NN', 'APPR', 'CARD', 'CARD', 'NN', 'APPR', 'CARD', 'CARD', 'NN'), 'start right siblings': ['NX', 'SIMPX', 'SIMPX'], 'end left siblings': [], 'auto preterminal span': (0, 33), 'movers': ['ART'], 'old_parent': 'SU', 'POS confusion': ('ART', 'ART'), 'end right siblings': ['ADJX', 'NN'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			(SIMPX
				(VF da)
				(LK kann)
				(MF
					(NX ich)
					(NX ihnen)
					(NX [01;33m(NX[00m
						(ART das)
						[01;31m(NX[00m
							(NX grandhotel) [01;33mNX)[00m
							(NX musmann)[01;31m)[00m))
				(VC anbieten))
			[01;36m(LV[00m
				(NX
					(NX das zentrale lage)
					(PX mit garage))[01;36m)[00m
			[01;31m(SIMPX[00m
				(VF die)
				(LK brauchen)
				(MF sie zwar nicht)[01;31m)[00m
			(SIMPX
				(VF da)
				(LK liegt)
				(MF
					[01;31m(NX[00m
						(NX die preiskategorie)
						[01;31m(PX[00m [01;33m(PX[00m
							(APPR fur)
							[01;33m(NX[00m (NX ein einzelzimmer)[01;31m)[00m[01;31m)[00m
					(PX
						(APPR bei)
						(NX [01;33m(ADJX[00m
							(NX hundert achtundsiebzig mark)
							(APPR bis)
							[01;31m(NX[00m
								(ADJX funfhundert achtzehn) [01;33mADJX)[00m
								(NN mark)[01;31m)[00m))))))) [01;33mNX) PX)[00m
Step:PP Attachment
{'new_parent': 'PX', 'new_family': ['APPR', 'NX', 'PX'], 'mover info': [('PX', (25, 33))], 'old_family': ['NX', 'PX'], 'start left siblings': ['NX'], 'auto preterminals': ('ART', 'NN', 'APPR', 'ART', 'NN', 'APPR', 'CARD', 'CARD', 'NN', 'APPR', 'CARD', 'CARD', 'NN'), 'start right siblings': [], 'end left siblings': ['APPR', 'NX'], 'auto preterminal span': (20, 33), 'adding node already present': False, 'movers': ['PX'], 'old_parent': 'MF', 'added and moved': True, 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(SU
			(SIMPX
				(VF da)
				(LK kann)
				(MF
					(NX ich)
					(NX ihnen)
					(NX [01;33m(NX[00m
						(ART das)
						[01;31m(NX[00m
							(NX grandhotel) [01;33mNX)[00m
							(NX musmann)[01;31m)[00m))
				(VC anbieten))
			[01;36m(LV[00m
				(NX
					(NX das zentrale lage)
					(PX mit garage))[01;36m)[00m
			[01;31m(SIMPX[00m
				(VF die)
				(LK brauchen)
				(MF sie zwar nicht)[01;31m)[00m
			(SIMPX
				(VF da)
				(LK liegt)
				(MF
					[01;31m(NX[00m
						(NX die preiskategorie)
						(PX
							(APPR fur)
							(NX
								(NX ein einzelzimmer)
								(PX
									(APPR bei)
									(NX [01;33m(ADJX[00m
										(NX hundert achtundsiebzig mark)
										(APPR bis)
										[01;31m(NX[00m
											(ADJX funfhundert achtzehn) [01;33mADJX)[00m
											(NN mark)[01;31m)[00m))))[01;31m)[00m)))))
Step:NP Attachment
{'new_parent': 'NX', 'new_family': ['ART', 'NX', 'NX'], 'mover info': [('NX', (5, 6))], 'old_family': ['NX', 'NX'], 'start left siblings': [], 'auto preterminals': ('ART', 'NE', 'NE'), 'start right siblings': ['NX'], 'end left siblings': ['ART'], 'auto preterminal span': (4, 7), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'NX', 'POS confusion': ('NE', 'NE'), 'added and moved': True, 'end right siblings': ['NX'], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'LV'}
(TOP
	(TURN
		(SU
			(SIMPX da kann ich ihnen das grandhotel musmann anbieten)
			[01;36m(LV[00m
				(NX
					(NX das zentrale lage)
					(PX mit garage))[01;36m)[00m
			[01;31m(SIMPX[00m
				(VF die)
				(LK brauchen)
				(MF sie zwar nicht)[01;31m)[00m
			(SIMPX
				(VF da)
				(LK liegt)
				(MF
					[01;31m(NX[00m
						(NX die preiskategorie)
						(PX
							(APPR fur)
							(NX
								(NX ein einzelzimmer)
								(PX
									(APPR bei)
									(NX [01;33m(ADJX[00m
										(NX hundert achtundsiebzig mark)
										(APPR bis)
										[01;31m(NX[00m
											(ADJX funfhundert achtzehn) [01;33mADJX)[00m
											(NN mark)[01;31m)[00m))))[01;31m)[00m)))))
Step:Unary
{'subtrees': ['NX'], 'family': ['SIMPX', 'LV', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'ADJA', 'NN', 'APPR', 'NN'), 'right siblings': [(SIMPX (VF (NX (PDS die))) (LK (VXFIN (VVFIN brauchen))) (MF (NX (PPER sie)) (ADVX (ADV zwar)) (ADVX (PTKNEG nicht)))), (SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VVFIN liegt))) (MF (NX (NX (ART die) (NN preiskategorie)) (PX (APPR fur) (NX (NX (ART ein) (NN einzelzimmer)) (PX (APPR bei) (NX (NX (ADJX (CARD hundert) (CARD achtundsiebzig)) (NN mark)) (APPR bis) (NX (ADJX (CARD funfhundert) (CARD achtzehn)) (NN mark)))))))))], 'left siblings': [(SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VMFIN kann))) (MF (NX (PPER ich)) (NX (PPER ihnen)) (NX (NX (ART das) (NX (NE grandhotel))) (NX (NE musmann)))) (VC (VXINF (VVINF anbieten))))], 'auto preterminal span': (8, 13), 'span': (8, 13), 'parent': 'SU', 'label': 'LV', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU
			(SIMPX da kann ich ihnen das grandhotel musmann anbieten)
			(LV das zentrale lage mit garage)
			[01;31m(SIMPX[00m
				(VF die)
				(LK brauchen)
				(MF sie zwar nicht)[01;31m)[00m
			(SIMPX
				(VF da)
				(LK liegt)
				(MF
					[01;31m(NX[00m
						(NX die preiskategorie)
						(PX
							(APPR fur)
							(NX
								(NX ein einzelzimmer)
								(PX
									(APPR bei)
									(NX [01;33m(ADJX[00m
										(NX hundert achtundsiebzig mark)
										(APPR bis)
										[01;31m(NX[00m
											(ADJX funfhundert achtzehn) [01;33mADJX)[00m
											(NN mark)[01;31m)[00m))))[01;31m)[00m)))))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['SIMPX', 'LV', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VMFIN', 'PPER', 'PPER', 'ART', 'NE', 'NE', 'VVINF', 'ART', 'ADJA', 'NN', 'APPR', 'NN', 'PDS', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADV', 'VVFIN', 'ART', 'NN', 'APPR', 'ART', 'NN', 'APPR', 'CARD', 'CARD', 'NN', 'APPR', 'CARD', 'CARD', 'NN'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 33), 'span': (13, 18), 'left siblings': ['SIMPX', 'LV'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(SIMPX da kann ich ihnen das grandhotel musmann anbieten)
			(LV das zentrale lage mit garage)
			(VF die)
			(LK brauchen)
			(MF sie zwar nicht)
			(SIMPX
				(VF da)
				(LK liegt)
				(MF
					[01;31m(NX[00m
						(NX die preiskategorie)
						(PX
							(APPR fur)
							(NX
								(NX ein einzelzimmer)
								(PX
									(APPR bei)
									(NX [01;33m(ADJX[00m
										(NX hundert achtundsiebzig mark)
										(APPR bis)
										[01;31m(NX[00m
											(ADJX funfhundert achtzehn) [01;33mADJX)[00m
											(NN mark)[01;31m)[00m))))[01;31m)[00m)))))
Step:Unary
{'subtrees': ['NX', 'PX'], 'family': ['NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'APPR', 'ART', 'NN', 'APPR', 'CARD', 'CARD', 'NN', 'APPR', 'CARD', 'CARD', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (20, 33), 'span': (20, 33), 'left siblings': [], 'label': 'NX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(SIMPX da kann ich ihnen das grandhotel musmann anbieten)
			(LV das zentrale lage mit garage)
			(VF die)
			(LK brauchen)
			(MF sie zwar nicht)
			(SIMPX
				(VF da)
				(LK liegt)
				(MF
					(NX die preiskategorie)
					(PX
						(APPR fur)
						(NX
							(NX ein einzelzimmer)
							(PX
								(APPR bei)
								(NX [01;33m(ADJX[00m
									(NX hundert achtundsiebzig mark)
									(APPR bis)
									[01;31m(NX[00m
										(ADJX funfhundert achtzehn) [01;33mADJX)[00m
										(NN mark)[01;31m)[00m)))))))))
Step:UNSET remove
{'subtrees': ['ADJX', 'NN'], 'family': ['NX', 'APPR', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'CARD', 'NN', 'APPR', 'CARD', 'CARD', 'NN'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (26, 33), 'span': (30, 33), 'left siblings': ['NX', 'APPR'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(SIMPX da kann ich ihnen das grandhotel musmann anbieten)
			(LV das zentrale lage mit garage)
			(VF die)
			(LK brauchen)
			(MF sie zwar nicht)
			(SIMPX
				(VF da)
				(LK liegt)
				(MF
					(NX die preiskategorie)
					(PX
						(APPR fur)
						(NX
							(NX ein einzelzimmer)
							(PX
								(APPR bei)
								(NX
									[01;36m(ADJX[00m
										(NX hundert achtundsiebzig mark)
										(APPR bis)
										(ADJX funfhundert achtzehn)[01;36m)[00m
									(NN mark))))))))))
Step:Modifier Attachment
{'subtrees': ['NX', 'APPR', 'ADJX'], 'family': ['ADJX', 'NN'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'CARD', 'NN', 'APPR', 'CARD', 'CARD'), 'right siblings': [(NN mark)], 'left siblings': [], 'auto preterminal span': (26, 32), 'span': (26, 32), 'parent': 'NX', 'label': 'ADJX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP da kann ich ihnen das grandhotel musmann anbieten das zentrale lage mit garage die brauchen sie zwar nicht da liegt die preiskategorie fur ein einzelzimmer bei hundert achtundsiebzig mark bis funfhundert achtzehn mark)

Sentence 367:
0 Initial errors
0 on fringe, 0 iterations

Sentence 368:
0 Initial errors
0 on fringe, 0 iterations

Sentence 369:
0 Initial errors
0 on fringe, 0 iterations

Sentence 370:
0 Initial errors
0 on fringe, 0 iterations

Sentence 371:
11 Initial errors
0 on fringe, 4 iterations
4 Error:NP Attachment
4 Error:NP Attachment
2 Error:Single Word Phrase
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM ja)
			(DM ja)
			(SIMPX
				(VF dann)
				(LK wurde)
				(MF ich aber)
				(VC sagen)
				(NF
					(SIMPX
						(VF ich)
						(LK nehme)
						(MF auf jeden fall mal den hinflug)
						[01;31m(NF[00m
							(ADVX
								(ADV einfach))[01;31m)[00m)))
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(VF das)
				(LK waren)
				[01;31m(MF[00m
					[01;36m(MF[00m
						(ADVX
							(ADV dann)) [01;33mSIMPX)[00m[01;36m)[00m
					[01;36m(SIMPX[00m
						[01;31m(SIMPX[00m
							(VF wieviel)
							(LK sagten)
							[01;31m(MF[00m [01;33m(MF[00m
								(NX
									(PPER sie))[01;31m)[00m[01;31m)[00m
						[01;36m(ADJX[00m [01;31m(NX[00m
							(CARD zweihundert)[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m))) [01;33mMF)[00m
Step:NP Attachment
{'new_parent': 'SU', 'new_family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'NX'], 'mover info': [('SIMPX', (19, 22)), ('NX', (22, 23))], 'old_family': ['ADVX', 'SIMPX', 'NX'], 'start left siblings': ['ADVX'], 'auto preterminals': ('PTKANT', 'PTKANT', 'ADV', 'VAFIN', 'PPER', 'ADV', 'VVINF', 'PPER', 'VVFIN', 'APPR', 'PIDAT', 'NN', 'ADV', 'ART', 'NN', 'ADV', 'PDS', 'VAFIN', 'ADV', 'PWS', 'VVFIN', 'PPER', 'CARD'), 'start right siblings': [], 'end left siblings': ['DM', 'DM', 'SIMPX', 'SIMPX'], 'auto preterminal span': (0, 23), 'movers': ['SIMPX', 'NX'], 'old_parent': 'MF', 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU
			(DM ja)
			(DM ja)
			(SIMPX
				(VF dann)
				(LK wurde)
				(MF ich aber)
				(VC sagen)
				(NF
					(SIMPX
						(VF ich)
						(LK nehme)
						(MF auf jeden fall mal den hinflug)
						[01;31m(NF[00m
							(ADVX
								(ADV einfach))[01;31m)[00m)))
			(SIMPX das waren dann)
			[01;36m(SIMPX[00m
				[01;31m(SIMPX[00m
					(VF wieviel)
					(LK sagten)
					[01;31m(MF[00m [01;33m(MF[00m
						(NX
							(PPER sie))[01;31m)[00m[01;31m)[00m
				[01;36m(ADJX[00m [01;31m(NX[00m
					(CARD zweihundert)[01;31m)[00m[01;36m)[00m[01;36m)[00m))) [01;33mMF)[00m
Step:NP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'NX'], 'mover info': [('NX', (22, 23))], 'old_family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'NX'], 'start left siblings': ['DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'auto preterminals': ('PTKANT', 'PTKANT', 'ADV', 'VAFIN', 'PPER', 'ADV', 'VVINF', 'PPER', 'VVFIN', 'APPR', 'PIDAT', 'NN', 'ADV', 'ART', 'NN', 'ADV', 'PDS', 'VAFIN', 'ADV', 'PWS', 'VVFIN', 'PPER', 'CARD'), 'start right siblings': [], 'end left siblings': ['NX'], 'auto preterminal span': (0, 23), 'movers': ['NX'], 'old_parent': 'SU', 'POS confusion': ('CARD', 'CARD'), 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU
			(DM ja)
			(DM ja)
			(SIMPX
				(VF dann)
				(LK wurde)
				(MF ich aber)
				(VC sagen)
				(NF
					(SIMPX
						(VF ich)
						(LK nehme)
						(MF auf jeden fall mal den hinflug)
						[01;31m(NF[00m
							(ADVX
								(ADV einfach))[01;31m)[00m)))
			(SIMPX das waren dann)
			(SIMPX
				(VF wieviel)
				(LK sagten)
				(MF
					(NX sie)
					[01;36m(ADJX[00m [01;31m(NX[00m
						(CARD zweihundert)[01;31m)[00m[01;36m)[00m)))))
Step:Single Word Phrase
{'family': ['NX', 'ADJX'], 'auto preterminal span': (22, 23), 'span': (22, 23), 'subtrees': ['CARD'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('CARD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('NX', 'ADJX')}
(TOP
	(TURN
		(SU
			(DM ja)
			(DM ja)
			(SIMPX
				(VF dann)
				(LK wurde)
				(MF ich aber)
				(VC sagen)
				(NF
					(SIMPX
						(VF ich)
						(LK nehme)
						(MF auf jeden fall mal den hinflug)
						[01;31m(NF[00m
							(ADVX
								(ADV einfach))[01;31m)[00m)))
			(SIMPX das waren dann)
			(SIMPX wieviel sagten sie zweihundert))))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['VF', 'LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'APPR', 'PIDAT', 'NN', 'ADV', 'ART', 'NN', 'ADV'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (7, 16), 'span': (15, 16), 'left siblings': ['VF', 'LK', 'MF'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja ja dann wurde ich aber sagen ich nehme auf jeden fall mal den hinflug einfach das waren dann wieviel sagten sie zweihundert)

Sentence 372:
0 Initial errors
0 on fringe, 0 iterations

Sentence 373:
3 Initial errors
0 on fringe, 3 iterations
1 Error:UNSET remove
1 Error:Modifier Attachment
1 Error:UNSET add
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP [01;33m(NX[00m
	(TURN
		(SU
			(NX zweihundert dreisig mark)
			[01;31m(NX[00m
				(KON und)
				[01;31m(NX[00m
					(NX eine einfache fahrt) [01;33mNX)[00m
					(ADVX zuruck)[01;31m)[00m[01;31m)[00m
			(DM ja))))
Step:UNSET remove
{'subtrees': ['KON', 'NX'], 'family': ['NX', 'NX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'CARD', 'NN', 'KON', 'ART', 'ADJA', 'NN', 'ADV', 'PTKANT'), 'right siblings': ['DM'], 'parent': 'SU', 'auto preterminal span': (0, 9), 'span': (3, 8), 'left siblings': ['NX'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP [01;33m(NX[00m
	(TURN
		(SU
			(NX zweihundert dreisig mark)
			(KON und)
			[01;31m(NX[00m
				(NX eine einfache fahrt) [01;33mNX)[00m
				(ADVX zuruck)[01;31m)[00m
			(DM ja))))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADVX'], 'family': ['NX', 'KON', 'NX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'CARD', 'NN', 'KON', 'ART', 'ADJA', 'NN', 'ADV', 'PTKANT'), 'right siblings': ['DM'], 'parent': 'SU', 'auto preterminal span': (0, 9), 'span': (4, 8), 'left siblings': ['NX', 'KON'], 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU
			[01;36m(NX[00m
				(NX zweihundert dreisig mark)
				(KON und)
				(NX eine einfache fahrt)[01;36m)[00m
			(ADVX zuruck)
			(DM ja))))
Step:UNSET add
{'subtrees': ['NX', 'KON', 'NX'], 'family': ['NX', 'ADVX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'CARD', 'NN', 'KON', 'ART', 'ADJA', 'NN'), 'right siblings': [(ADVX (ADV zuruck)), (DM (PTKANT ja))], 'left siblings': [], 'auto preterminal span': (0, 7), 'span': (0, 7), 'parent': 'SU', 'label': 'NX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP zweihundert dreisig mark und eine einfache fahrt zuruck ja)

Sentence 374:
0 Initial errors
0 on fringe, 0 iterations

Sentence 375:
0 Initial errors
0 on fringe, 0 iterations

Sentence 376:
0 Initial errors
0 on fringe, 0 iterations

Sentence 377:
0 Initial errors
0 on fringe, 0 iterations

Sentence 378:
0 Initial errors
0 on fringe, 0 iterations

Sentence 379:
0 Initial errors
0 on fringe, 0 iterations

Sentence 380:
0 Initial errors
0 on fringe, 0 iterations

Sentence 381:
0 Initial errors
0 on fringe, 0 iterations

Sentence 382:
0 Initial errors
0 on fringe, 0 iterations

Sentence 383:
4 Initial errors
0 on fringe, 1 iterations
4 Error:UNSET move
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SIMPX[00m
	(TOP
		(TURN
			(SU
				[01;31m(SIMPX[00m
					(LK sagen)
					[01;31m(MF[00m [01;33m(MF[00m
						(NX sie)
						(NX mir)
						(NX ihren namen)
						(ADVX noch)
						(ADVX mal)[01;31m)[00m[01;31m)[00m
				(DM bitte)))) [01;33mMF)[00m[01;36m)[00m
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['NX', 'NX', 'NX', 'ADVX', 'ADVX', 'DM'], 'mover info': [('DM', (7, 8))], 'old_family': ['SIMPX', 'DM'], 'start left siblings': ['SIMPX'], 'auto preterminals': ('VVIMP', 'PPER', 'PPER', 'PPOSAT', 'NN', 'ADV', 'ADV', 'PTKANT'), 'start right siblings': [], 'end left siblings': ['NX', 'NX', 'NX', 'ADVX', 'ADVX'], 'auto preterminal span': (0, 8), 'movers': ['DM'], 'old_parent': 'SU', 'POS confusion': ('PTKANT', 'PTKANT'), 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP sagen sie mir ihren namen noch mal bitte)

Sentence 384:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM
				[01;31m(NX[00m
					(NE meurer)[01;31m)[00m))))
Step:Single Word Phrase
{'subtrees': ['NE'], 'family': ['NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('NE',), 'right siblings': [], 'parent': 'DM', 'auto preterminal span': (0, 1), 'span': (0, 1), 'left siblings': [], 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP meurer)

Sentence 385:
0 Initial errors
0 on fringe, 0 iterations

Sentence 386:
3 Initial errors
0 on fringe, 3 iterations
1 Error:Unary
1 Error:PP Attachment
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			[01;36m(VF[00m
				(PX
					(APPRART im)
					(NX august))[01;36m)[00m
			(DM ja)
			[01;31m(SIMPX[00m
				(LK gibt)
				(MF
					(NX es)
					(ADVX da)
					[01;36m(NX[00m
						(NX einen romantischen termin)
						(PX im august)[01;36m)[00m)[01;31m)[00m)))
Step:Unary
{'subtrees': ['PX'], 'family': ['VF', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'NN'), 'right siblings': [(DM (PTKANT ja)), (SIMPX (LK (VXFIN (VVFIN gibt))) (MF (NX (PPER es)) (ADVX (ADV da)) (NX (ART einen) (ADJX (ADJA romantischen)) (NN termin)) (PX (APPRART im) (NX (NN august)))))], 'left siblings': [], 'auto preterminal span': (0, 2), 'span': (0, 2), 'parent': 'SU', 'label': 'VF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU
			(VF im august)
			(DM ja)
			[01;31m(SIMPX[00m
				(LK gibt)
				(MF
					(NX es)
					(ADVX da)
					[01;36m(NX[00m
						(NX einen romantischen termin)
						(PX im august)[01;36m)[00m)[01;31m)[00m)))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['NX', 'ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'ADJA', 'NN', 'APPRART', 'NN'), 'right siblings': [], 'left siblings': [(NX (PPER es)), (ADVX (ADV da))], 'auto preterminal span': (6, 11), 'span': (6, 11), 'parent': 'MF', 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU
			(VF im august)
			(DM ja)
			[01;31m(SIMPX[00m
				(LK gibt)
				(MF es da einen romantischen termin im august)[01;31m)[00m)))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['VF', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'NN', 'PTKANT', 'VVFIN', 'PPER', 'ADV', 'ART', 'ADJA', 'NN', 'APPRART', 'NN'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (0, 11), 'span': (3, 11), 'left siblings': ['VF', 'DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP im august ja gibt es da einen romantischen termin im august)

Sentence 387:
3 Initial errors
0 on fringe, 3 iterations
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:UNSET add
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(SIMPX
				(KOORD und)
				(LK wurden)
				(MF
					(NX sie)
					(NX mir)
					(ADVX bitte)
					(ADVX noch)
					[01;31m(PX[00m [01;33m(PX[00m
						(APPR fur)
						[01;31m(NX[00m
							(NX die nachte) [01;33mPX)[00m
							(APPRART vom)
							(DM also)
							(NX dienstag nacht bis freitag nacht)[01;31m)[00m[01;31m)[00m
					(ADVX noch)
					(NX das hotel))
				(VC buchen)))))
Step:UNSET remove
{'subtrees': ['APPR', 'NX'], 'family': ['NX', 'NX', 'ADVX', 'ADVX', 'PX', 'ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'PPER', 'PTKANT', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'ADV', 'NN', 'ADV', 'APPR', 'NN', 'ADV', 'ADV', 'ART', 'NN'), 'right siblings': ['ADVX', 'NX'], 'parent': 'MF', 'auto preterminal span': (2, 19), 'span': (6, 16), 'left siblings': ['NX', 'NX', 'ADVX', 'ADVX'], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(SIMPX
				(KOORD und)
				(LK wurden)
				(MF
					(NX sie)
					(NX mir)
					(ADVX bitte)
					(ADVX noch)
					(APPR [01;33m(PX[00m fur)
					[01;31m(NX[00m
						(NX die nachte) [01;33mPX)[00m
						(APPRART vom)
						(DM also)
						(NX dienstag nacht bis freitag nacht)[01;31m)[00m
					(ADVX noch)
					(NX das hotel))
				(VC buchen)))))
Step:UNSET remove
{'subtrees': ['NX', 'APPRART', 'DM', 'NX'], 'family': ['NX', 'NX', 'ADVX', 'ADVX', 'APPR', 'NX', 'ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'PPER', 'PTKANT', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'ADV', 'NN', 'ADV', 'APPR', 'NN', 'ADV', 'ADV', 'ART', 'NN'), 'right siblings': ['ADVX', 'NX'], 'parent': 'MF', 'auto preterminal span': (2, 19), 'span': (7, 16), 'left siblings': ['NX', 'NX', 'ADVX', 'ADVX', 'APPR'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(SIMPX
				(KOORD und)
				(LK wurden)
				(MF
					(NX sie)
					(NX mir)
					(ADVX bitte)
					(ADVX noch)
					[01;36m(PX[00m
						(APPR fur)
						(NX die nachte)[01;36m)[00m
					(APPRART vom)
					(DM also)
					(NX dienstag nacht bis freitag nacht)
					(ADVX noch)
					(NX das hotel))
				(VC buchen)))))
Step:UNSET add
{'subtrees': ['APPR', 'NX'], 'family': ['NX', 'NX', 'ADVX', 'ADVX', 'PX', 'APPRART', 'DM', 'NX', 'ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NN'), 'right siblings': [(APPRART vom), (DM (ADVX (ADV also))), (NX (NX (NX (NN dienstag)) (ADVX (ADV nacht))) (APPR bis) (NX (NX (NN freitag)) (ADVX (ADV nacht)))), (ADVX (ADV noch)), (NX (ART das) (NN hotel))], 'left siblings': [(NX (PPER sie)), (NX (PPER mir)), (ADVX (PTKANT bitte)), (ADVX (ADV noch))], 'auto preterminal span': (6, 9), 'span': (6, 9), 'parent': 'MF', 'label': 'PX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP und wurden sie mir bitte noch fur die nachte vom also dienstag nacht bis freitag nacht noch das hotel buchen)

Sentence 388:
0 Initial errors
0 on fringe, 0 iterations

Sentence 389:
2 Initial errors
0 on fringe, 1 iterations
2 Error:NP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP [01;33m(PX[00m
	(TURN
		(SU
			(PX
				(APPR fur)
				[01;31m(NX[00m
					(NX hundert funfundvierzig mark) [01;33mPX)[00m
					(NX das einzelzimmer)[01;31m)[00m))))
Step:NP Attachment
{'new_parent': 'PX', 'new_family': ['APPR', 'NX', 'NX'], 'mover info': [('NX', (1, 4))], 'old_family': ['NX', 'NX'], 'start left siblings': [], 'auto preterminals': ('APPR', 'CARD', 'CARD', 'NN', 'ART', 'NN'), 'start right siblings': ['NX'], 'end left siblings': ['APPR'], 'auto preterminal span': (0, 6), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': ['NX'], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'PX'}
(TOP fur hundert funfundvierzig mark das einzelzimmer)

Sentence 390:
3 Initial errors
0 on fringe, 1 iterations
3 Error:NP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM gut)
			[01;36m(SIMPX[00m
				[01;31m(SIMPX[00m
					(VF das)
					(LK ist)
					[01;33m(MF[00m (MF dann vom vierzehnten juli bis zum siebzehnten juli)[01;31m)[00m
				(NX einzelzimmer hotel loccumerhof)[01;36m)[00m))) [01;33mMF)[00m
Step:NP Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'NX'], 'mover info': [('NX', (11, 14))], 'old_family': ['DM', 'SIMPX', 'NX'], 'start left siblings': ['DM', 'SIMPX'], 'auto preterminals': ('ITJ', 'PDS', 'VAFIN', 'ADV', 'APPRART', 'ADJA', 'NN', 'APPR', 'APPRART', 'ADJA', 'NN', 'NN', 'NN', 'NE'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (0, 14), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'SU', 'added and moved': True, 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'MF'}
(TOP gut das ist dann vom vierzehnten juli bis zum siebzehnten juli einzelzimmer hotel loccumerhof)

Sentence 391:
3 Initial errors
0 on fringe, 3 iterations
1 Error:Unary
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU grus gott frau johann)
		(SU wenn ich richtig informiert bin musten wir unbedingt eine termin fur eine geschaftsreise nach hannover vereinbaren)
		(SU
			(DM ja)
			(SIMPX
				(VF die frage)
				[01;31m(LK[00m
					(VXFIN
						(VAFIN ist))[01;31m)[00m
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						(LK haben)
						(MF sie irgendwelche praferierten termine von sich aus)[01;31m)[00m[01;31m)[00m))))
Step:Unary
{'subtrees': ['VXFIN'], 'family': ['VF', 'LK', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'VAFIN', 'VAFIN', 'PPER', 'PIAT', 'ADJA', 'NN', 'APPR', 'PRF', 'APZR'), 'right siblings': ['NF'], 'parent': 'SIMPX', 'auto preterminal span': (21, 32), 'span': (23, 24), 'left siblings': ['VF'], 'label': 'LK', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU grus gott frau johann)
		(SU wenn ich richtig informiert bin musten wir unbedingt eine termin fur eine geschaftsreise nach hannover vereinbaren)
		(SU
			(DM ja)
			(SIMPX
				(VF die frage)
				(VXFIN ist)
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						(LK haben)
						(MF sie irgendwelche praferierten termine von sich aus)[01;31m)[00m[01;31m)[00m))))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['VF', 'VXFIN', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'VAFIN', 'VAFIN', 'PPER', 'PIAT', 'ADJA', 'NN', 'APPR', 'PRF', 'APZR'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (21, 32), 'span': (24, 32), 'left siblings': ['VF', 'VXFIN'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU grus gott frau johann)
		(SU wenn ich richtig informiert bin musten wir unbedingt eine termin fur eine geschaftsreise nach hannover vereinbaren)
		(SU
			(DM ja)
			(SIMPX
				(VF die frage)
				(VXFIN ist)
				[01;31m(SIMPX[00m
					(LK haben)
					(MF sie irgendwelche praferierten termine von sich aus)[01;31m)[00m))))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['VF', 'VXFIN', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'VAFIN', 'VAFIN', 'PPER', 'PIAT', 'ADJA', 'NN', 'APPR', 'PRF', 'APZR'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (21, 32), 'span': (24, 32), 'left siblings': ['VF', 'VXFIN'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP grus gott frau johann wenn ich richtig informiert bin musten wir unbedingt eine termin fur eine geschaftsreise nach hannover vereinbaren ja die frage ist haben sie irgendwelche praferierten termine von sich aus)

Sentence 392:
0 Initial errors
0 on fringe, 0 iterations

Sentence 393:
9 Initial errors
0 on fringe, 6 iterations
4 Error:Clause Attachment
1 Error:Clause Attachment
1 Error:PP Attachment
1 Error:Unary
1 Error:UNSET remove
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU ja das ware mir recht)
		(SU
			[01;31m(SIMPX[00m
				(VF das)
				(LK wurde)
				(MF ja)
				(VC bedeuten)
				[01;31m(NF[00m [01;33m(SIMPX (NF[00m
					[01;31m(SIMPX[00m
						(C das)
						(MF wir am eine ubernachtung in hannover)
						(VC brauchten)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				(VC vorausgesetzt)
				[01;31m(NF[00m
					(SIMPX
						(VF wir)
						(LK kriegen)
						(MF dann am dienstag abend noch den flug nach berlin))[01;31m)[00m[01;31m)[00m) [01;33mNF) SIMPX)[00m
		(SU
			[01;36m(SIMPX[00m
				(SIMPX meine sekretarin hat mir hier schon drei hotels rausgesucht)
				(SIMPX
					(LK haben)
					(MF
						(NX sie)
						[01;36m(NX[00m
							(NX irgendwelche vorstellungen)
							(PX davon)[01;36m)[00m)
					(NF wie das hotel aussehen sollte))[01;36m)[00m
			(DM oder))))
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['C', 'MF', 'VC', 'SIMPX'], 'mover info': [('SIMPX', (17, 29))], 'old_family': ['SIMPX', 'SIMPX'], 'start left siblings': ['SIMPX'], 'auto preterminals': ('PDS', 'VAFIN', 'ADV', 'VVINF', 'KOUS', 'PPER', 'APPRART', 'ART', 'NN', 'APPR', 'NE', 'VVFIN', 'VVPP', 'PPER', 'VVFIN', 'ADV', 'APPRART', 'NN', 'ADV', 'ADV', 'ART', 'NN', 'APPR', 'NE'), 'start right siblings': [], 'end left siblings': ['C', 'MF', 'VC'], 'auto preterminal span': (5, 29), 'movers': ['SIMPX'], 'old_parent': 'SU', 'end right siblings': [], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU ja das ware mir recht)
		(SU
			[01;31m(SIMPX[00m
				(VF das)
				(LK wurde)
				(MF ja)
				(VC bedeuten)
				(NF
					(SIMPX
						(C das)
						(MF wir am eine ubernachtung in hannover)
						(VC brauchten)
						[01;31m(SIMPX[00m
							(VC vorausgesetzt)
							[01;31m(NF[00m
								(SIMPX
									(VF wir)
									(LK kriegen)
									(MF dann am dienstag abend noch den flug nach berlin))[01;31m)[00m[01;31m)[00m))[01;31m)[00m)
		(SU
			[01;36m(SIMPX[00m
				(SIMPX meine sekretarin hat mir hier schon drei hotels rausgesucht)
				(SIMPX
					(LK haben)
					(MF
						(NX sie)
						[01;36m(NX[00m
							(NX irgendwelche vorstellungen)
							(PX davon)[01;36m)[00m)
					(NF wie das hotel aussehen sollte))[01;36m)[00m
			(DM oder))))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['SIMPX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPOSAT', 'NN', 'VAFIN', 'PPER', 'ADV', 'ADV', 'CARD', 'NN', 'VVPP', 'VAFIN', 'PPER', 'PIAT', 'NN', 'PROP', 'KOUS', 'ART', 'NN', 'VVINF', 'VMFIN'), 'right siblings': [(DM (ITJ oder))], 'left siblings': [], 'auto preterminal span': (29, 48), 'span': (29, 48), 'parent': 'SU', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU ja das ware mir recht)
		(SU
			[01;31m(SIMPX[00m
				(VF das)
				(LK wurde)
				(MF ja)
				(VC bedeuten)
				(NF
					(SIMPX
						(C das)
						(MF wir am eine ubernachtung in hannover)
						(VC brauchten)
						[01;31m(SIMPX[00m
							(VC vorausgesetzt)
							[01;31m(NF[00m
								(SIMPX
									(VF wir)
									(LK kriegen)
									(MF dann am dienstag abend noch den flug nach berlin))[01;31m)[00m[01;31m)[00m))[01;31m)[00m)
		(SU
			(SIMPX
				(SIMPX meine sekretarin hat mir hier schon drei hotels rausgesucht)
				(SIMPX
					(LK haben)
					(MF
						(NX sie)
						[01;36m(NX[00m
							(NX irgendwelche vorstellungen)
							(PX davon)[01;36m)[00m)
					(NF wie das hotel aussehen sollte)))
			(DM oder))))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PIAT', 'NN', 'PROP'), 'right siblings': [], 'left siblings': [(NX (PPER sie))], 'auto preterminal span': (40, 43), 'span': (40, 43), 'parent': 'MF', 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU ja das ware mir recht)
		(SU
			[01;31m(SIMPX[00m
				(VF das)
				(LK wurde)
				(MF ja)
				(VC bedeuten)
				(NF
					(SIMPX
						(C das)
						(MF wir am eine ubernachtung in hannover)
						(VC brauchten)
						[01;31m(SIMPX[00m
							(VC vorausgesetzt)
							[01;31m(NF[00m
								(SIMPX
									(VF wir)
									(LK kriegen)
									(MF dann am dienstag abend noch den flug nach berlin))[01;31m)[00m[01;31m)[00m))[01;31m)[00m)
		(SU meine sekretarin hat mir hier schon drei hotels rausgesucht haben sie irgendwelche vorstellungen davon wie das hotel aussehen sollte oder)))
Step:Unary
{'subtrees': ['VF', 'LK', 'MF', 'VC', 'NF'], 'family': ['SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VAFIN', 'ADV', 'VVINF', 'KOUS', 'PPER', 'APPRART', 'ART', 'NN', 'APPR', 'NE', 'VVFIN', 'VVPP', 'PPER', 'VVFIN', 'ADV', 'APPRART', 'NN', 'ADV', 'ADV', 'ART', 'NN', 'APPR', 'NE'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (5, 29), 'span': (5, 29), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU ja das ware mir recht)
		(SU
			(VF das)
			(LK wurde)
			(MF ja)
			(VC bedeuten)
			(NF
				(SIMPX
					(C das)
					(MF wir am eine ubernachtung in hannover)
					(VC brauchten)
					[01;31m(SIMPX[00m
						(VC vorausgesetzt)
						[01;31m(NF[00m
							(SIMPX
								(VF wir)
								(LK kriegen)
								(MF dann am dienstag abend noch den flug nach berlin))[01;31m)[00m[01;31m)[00m)))
		(SU meine sekretarin hat mir hier schon drei hotels rausgesucht haben sie irgendwelche vorstellungen davon wie das hotel aussehen sollte oder)))
Step:UNSET remove
{'subtrees': ['VC', 'NF'], 'family': ['C', 'MF', 'VC', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'APPRART', 'ART', 'NN', 'APPR', 'NE', 'VVFIN', 'VVPP', 'PPER', 'VVFIN', 'ADV', 'APPRART', 'NN', 'ADV', 'ADV', 'ART', 'NN', 'APPR', 'NE'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (9, 29), 'span': (17, 29), 'left siblings': ['C', 'MF', 'VC'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU ja das ware mir recht)
		(SU
			(VF das)
			(LK wurde)
			(MF ja)
			(VC bedeuten)
			(NF
				(SIMPX
					(C das)
					(MF wir am eine ubernachtung in hannover)
					(VC brauchten)
					(VC vorausgesetzt)
					[01;31m(NF[00m
						(SIMPX
							(VF wir)
							(LK kriegen)
							(MF dann am dienstag abend noch den flug nach berlin))[01;31m)[00m)))
		(SU meine sekretarin hat mir hier schon drei hotels rausgesucht haben sie irgendwelche vorstellungen davon wie das hotel aussehen sollte oder)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['C', 'MF', 'VC', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'APPRART', 'ART', 'NN', 'APPR', 'NE', 'VVFIN', 'VVPP', 'PPER', 'VVFIN', 'ADV', 'APPRART', 'NN', 'ADV', 'ADV', 'ART', 'NN', 'APPR', 'NE'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (9, 29), 'span': (18, 29), 'left siblings': ['C', 'MF', 'VC', 'VC'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja das ware mir recht das wurde ja bedeuten das wir am eine ubernachtung in hannover brauchten vorausgesetzt wir kriegen dann am dienstag abend noch den flug nach berlin meine sekretarin hat mir hier schon drei hotels rausgesucht haben sie irgendwelche vorstellungen davon wie das hotel aussehen sollte oder)

Sentence 394:
4 Initial errors
0 on fringe, 3 iterations
2 Error:Different label
1 Error:Unary
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM also)
			(SIMPX
				(VF es)
				(LK gabe)
				(MF
					[01;31m(NX[00m
						(NX eines mit sauna)
						(NX ein anderes mit hallenbad)[01;31m)[00m)))
		[01;36m(SIMPX[00m
			(SU
				[01;31m(NX[00m
					(ADVX scheinbar)
					[01;31m(ADVX[00m
						(PTKNEG nicht)[01;31m)[00m
					(NX beides zusammen)[01;31m)[00m)[01;36m)[00m
		(SU sie wurden dann die sauna vorziehen)))
Step:Different label
{'family': ['SIMPX'], 'auto preterminal span': (10, 14), 'span': (10, 14), 'subtrees': ['ADVX', 'ADVX', 'NX'], 'parent': 'SU', 'over_word': False, 'auto preterminals': ('ADV', 'PTKNEG', 'PIS', 'ADV'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('NX', 'SIMPX')}
(TOP
	(TURN
		(SU
			(DM also)
			(SIMPX
				(VF es)
				(LK gabe)
				(MF
					[01;31m(NX[00m
						(NX eines mit sauna)
						(NX ein anderes mit hallenbad)[01;31m)[00m)))
		(SU
			(SIMPX
				(ADVX scheinbar)
				[01;31m(ADVX[00m
					(PTKNEG nicht)[01;31m)[00m
				(NX beides zusammen)))
		(SU sie wurden dann die sauna vorziehen)))
Step:Unary
{'subtrees': ['NX', 'NX'], 'family': ['NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PIS', 'APPR', 'NN', 'ART', 'PIS', 'APPR', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (3, 10), 'span': (3, 10), 'left siblings': [], 'label': 'NX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU also es gabe eines mit sauna ein anderes mit hallenbad)
		(SU
			(SIMPX
				(ADVX scheinbar)
				[01;31m(ADVX[00m
					(PTKNEG nicht)[01;31m)[00m
				(NX beides zusammen)))
		(SU sie wurden dann die sauna vorziehen)))
Step:Single Word Phrase
{'subtrees': ['PTKNEG'], 'family': ['ADVX', 'ADVX', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADV', 'PTKNEG', 'PIS', 'ADV'), 'right siblings': ['NX'], 'parent': 'SIMPX', 'auto preterminal span': (10, 14), 'span': (11, 12), 'left siblings': ['ADVX'], 'label': 'ADVX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP also es gabe eines mit sauna ein anderes mit hallenbad scheinbar nicht beides zusammen sie wurden dann die sauna vorziehen)

Sentence 395:
10 Initial errors
0 on fringe, 6 iterations
2 Error:Different label
2 Error:Single Word Phrase
2 Error:Different label
2 Error:Clause Attachment
1 Error:UNSET add
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU gut)
		[01;36m(SIMPX[00m
			(SU
				[01;31m(P[00m
					(SIMPX
						(VF es)
						(LK scheint)
						(MF
							(NX mir)
							(ADVX sowieso)
							[01;36m(ADVX[00m [01;31m(ADJX[00m
								(ADJD gunstig)[01;31m)[00m[01;36m)[00m))
					(KOUS weil)
					(SIMPX
						(VF ich)
						(LK sehe)
						(MF grade)
						(NF
							(SIMPX
								(C das)
								(MF
									(NX es)
									(ADVX auch)
									(PX
										(APPR in)
										(NX
											(NX der nahe)
											[01;36m(PX[00m
												(APPRART beim)
												(NX des hauptbahnhofs)[01;36m)[00m)))
								(VC ist)
								[01;36m(R[00m
									(NF
										[01;31m(SIMPX[00m
											(C was)
											(MF dann sicherlich ja auch verkehrsgunstig)
											(VC ist)[01;31m)[00m)[01;36m)[00m)))[01;31m)[00m)[01;36m)[00m
		(SU ja dann werde ich die buchen)
		[01;36m(SIMPX[00m
			(SU
				[01;31m(SIMPX[00m
					(LK kummern)
					(MF sie sich um die fluge)[01;31m)[00m
				[01;31m(SIMPX[00m
					(LK ginge)
					(MF das)[01;31m)[00m)[01;36m)[00m))
Step:Different label
{'family': ['SIMPX'], 'auto preterminal span': (1, 27), 'span': (1, 27), 'subtrees': ['SIMPX', 'KOUS', 'SIMPX'], 'parent': 'SU', 'over_word': False, 'auto preterminals': ('PPER', 'VVFIN', 'PPER', 'ADV', 'ADJD', 'KOUS', 'PPER', 'VVFIN', 'ADV', 'KOUS', 'PPER', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'ART', 'NN', 'VAFIN', 'PWS', 'ADV', 'ADV', 'ADV', 'ADV', 'ADJD', 'VAFIN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('P', 'SIMPX')}
(TOP
	(TURN
		(SU gut)
		(SU
			(SIMPX
				(SIMPX
					(VF es)
					(LK scheint)
					(MF
						(NX mir)
						(ADVX sowieso)
						[01;36m(ADVX[00m [01;31m(ADJX[00m
							(ADJD gunstig)[01;31m)[00m[01;36m)[00m))
				(KOUS weil)
				(SIMPX
					(VF ich)
					(LK sehe)
					(MF grade)
					(NF
						(SIMPX
							(C das)
							(MF
								(NX es)
								(ADVX auch)
								(PX
									(APPR in)
									(NX
										(NX der nahe)
										[01;36m(PX[00m
											(APPRART beim)
											(NX des hauptbahnhofs)[01;36m)[00m)))
							(VC ist)
							[01;36m(R[00m
								(NF
									[01;31m(SIMPX[00m
										(C was)
										(MF dann sicherlich ja auch verkehrsgunstig)
										(VC ist)[01;31m)[00m)[01;36m)[00m)))))
		(SU ja dann werde ich die buchen)
		[01;36m(SIMPX[00m
			(SU
				[01;31m(SIMPX[00m
					(LK kummern)
					(MF sie sich um die fluge)[01;31m)[00m
				[01;31m(SIMPX[00m
					(LK ginge)
					(MF das)[01;31m)[00m)[01;36m)[00m))
Step:Single Word Phrase
{'family': ['NX', 'ADVX', 'ADVX'], 'auto preterminal span': (5, 6), 'span': (5, 6), 'subtrees': ['ADJD'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('ADJD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'ADVX')}
(TOP
	(TURN
		(SU gut)
		(SU
			(SIMPX
				(SIMPX es scheint mir sowieso gunstig)
				(KOUS weil)
				(SIMPX
					(VF ich)
					(LK sehe)
					(MF grade)
					(NF
						(SIMPX
							(C das)
							(MF
								(NX es)
								(ADVX auch)
								(PX
									(APPR in)
									(NX
										(NX der nahe)
										[01;36m(PX[00m
											(APPRART beim)
											(NX des hauptbahnhofs)[01;36m)[00m)))
							(VC ist)
							[01;36m(R[00m
								(NF
									[01;31m(SIMPX[00m
										(C was)
										(MF dann sicherlich ja auch verkehrsgunstig)
										(VC ist)[01;31m)[00m)[01;36m)[00m)))))
		(SU ja dann werde ich die buchen)
		[01;36m(SIMPX[00m
			(SU
				[01;31m(SIMPX[00m
					(LK kummern)
					(MF sie sich um die fluge)[01;31m)[00m
				[01;31m(SIMPX[00m
					(LK ginge)
					(MF das)[01;31m)[00m)[01;36m)[00m))
Step:Different label
{'family': ['R'], 'auto preterminal span': (20, 27), 'span': (20, 27), 'subtrees': ['C', 'MF', 'VC'], 'parent': 'NF', 'over_word': False, 'auto preterminals': ('PWS', 'ADV', 'ADV', 'ADV', 'ADV', 'ADJD', 'VAFIN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('SIMPX', 'R')}
(TOP
	(TURN
		(SU gut)
		(SU
			(SIMPX
				(SIMPX es scheint mir sowieso gunstig)
				(KOUS weil)
				(SIMPX
					(VF ich)
					(LK sehe)
					(MF grade)
					(NF
						(SIMPX
							(C das)
							(MF
								(NX es)
								(ADVX auch)
								(PX
									(APPR in)
									(NX
										(NX der nahe)
										[01;36m(PX[00m
											(APPRART beim)
											(NX des hauptbahnhofs)[01;36m)[00m)))
							(VC ist)
							(NF was dann sicherlich ja auch verkehrsgunstig ist))))))
		(SU ja dann werde ich die buchen)
		[01;36m(SIMPX[00m
			(SU
				[01;31m(SIMPX[00m
					(LK kummern)
					(MF sie sich um die fluge)[01;31m)[00m
				[01;31m(SIMPX[00m
					(LK ginge)
					(MF das)[01;31m)[00m)[01;36m)[00m))
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['SIMPX', 'LK', 'MF'], 'mover info': [('SIMPX', (33, 39))], 'old_family': ['SIMPX', 'SIMPX'], 'start left siblings': [], 'auto preterminals': ('VVFIN', 'PPER', 'PRF', 'APPR', 'ART', 'NN', 'VVFIN', 'PDS'), 'start right siblings': ['SIMPX'], 'end left siblings': [], 'auto preterminal span': (33, 41), 'movers': ['SIMPX'], 'old_parent': 'SU', 'end right siblings': ['LK', 'MF'], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU gut)
		(SU
			(SIMPX
				(SIMPX es scheint mir sowieso gunstig)
				(KOUS weil)
				(SIMPX
					(VF ich)
					(LK sehe)
					(MF grade)
					(NF
						(SIMPX
							(C das)
							(MF
								(NX es)
								(ADVX auch)
								(PX
									(APPR in)
									(NX
										(NX der nahe)
										[01;36m(PX[00m
											(APPRART beim)
											(NX des hauptbahnhofs)[01;36m)[00m)))
							(VC ist)
							(NF was dann sicherlich ja auch verkehrsgunstig ist))))))
		(SU ja dann werde ich die buchen)
		(SU
			(SIMPX
				[01;31m(SIMPX[00m
					(LK kummern)
					(MF sie sich um die fluge)[01;31m)[00m
				(LK ginge)
				(MF das)))))
Step:UNSET add
{'subtrees': ['APPRART', 'NX'], 'family': ['NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'ART', 'NN'), 'right siblings': [], 'left siblings': [(NX (ART der) (NN nahe))], 'auto preterminal span': (16, 19), 'span': (16, 19), 'parent': 'NX', 'label': 'PX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU gut)
		(SU es scheint mir sowieso gunstig weil ich sehe grade das es auch in der nahe beim des hauptbahnhofs ist was dann sicherlich ja auch verkehrsgunstig ist)
		(SU ja dann werde ich die buchen)
		(SU
			(SIMPX
				[01;31m(SIMPX[00m
					(LK kummern)
					(MF sie sich um die fluge)[01;31m)[00m
				(LK ginge)
				(MF das)))))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['SIMPX', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'PRF', 'APPR', 'ART', 'NN', 'VVFIN', 'PDS'), 'right siblings': ['LK', 'MF'], 'parent': 'SIMPX', 'auto preterminal span': (33, 41), 'span': (33, 39), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP gut es scheint mir sowieso gunstig weil ich sehe grade das es auch in der nahe beim des hauptbahnhofs ist was dann sicherlich ja auch verkehrsgunstig ist ja dann werde ich die buchen kummern sie sich um die fluge ginge das)

Sentence 396:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU mir ware beides recht)
		(SU also dienstag abend oder mittwoch morgen muste man ja dann sagen genau)
		(SU
			(SIMPX
				(VF dann)
				(LK wurde)
				(MF ich mit dem hotelbuchen einfach noch)
				(VC warten)
				(NF
					(SIMPX
						(C bis)
						(MF
							(NX das)
							[01;31m(ADJX[00m
								(ADJD geklart)[01;31m)[00m)
						(VC ist)))))))
Step:Single Word Phrase
{'subtrees': ['ADJD'], 'family': ['NX', 'ADJX'], 'over_word': True, 'over words': True, 'auto preterminals': ('PDS', 'ADJD'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (26, 28), 'span': (27, 28), 'left siblings': ['NX'], 'label': 'ADJX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP mir ware beides recht also dienstag abend oder mittwoch morgen muste man ja dann sagen genau dann wurde ich mit dem hotelbuchen einfach noch warten bis das geklart ist)

Sentence 397:
7 Initial errors
0 on fringe, 5 iterations
2 Error:Clause Attachment
2 Error:Modifier Attachment
1 Error:UNSET remove
1 Error:Unary
1 Error:Clause Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU das sollte dann zu machen sein ja)
		(SU
			[01;31m(SIMPX[00m
				[01;36m(SIMPX[00m
					(VF die frage)
					(LK ist)
					(MF jetzt noch)[01;36m)[00m
				(SIMPX
					(VF man)
					(LK hat)
					(MF
						(NX mir)
						[01;31m(PX[00m
							(ADVX hier)
							[01;36m(PX[00m
								(APPR bei)
								(NX der mappe)[01;36m)[00m[01;31m)[00m
						(ADVX auch)
						(NX einige informationen uber sehenswurdigkeiten und veranstaltungen))
					(VC hingelegt))
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						[01;31m(SIMPX[00m
							(LK haben)
							(MF sie da auch interesse)[01;31m)[00m
						(SIMPX soll ich da irgendwas buchen)[01;31m)[00m[01;31m)[00m[01;31m)[00m)
		(SU oder)))
Step:Clause Attachment
{'new_parent': 'SU', 'new_family': ['SIMPX', 'SIMPX', 'NF'], 'mover info': [('SIMPX', (12, 27)), ('NF', (27, 37))], 'old_family': ['VF', 'LK', 'MF', 'SIMPX', 'NF'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('ART', 'NN', 'VAFIN', 'ADV', 'ADV', 'PIS', 'VAFIN', 'PPER', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'PIAT', 'NN', 'APPR', 'NN', 'KON', 'NN', 'VVPP', 'VAFIN', 'PPER', 'ADV', 'ADV', 'NN', 'VMFIN', 'PPER', 'ADV', 'PIS', 'VVINF'), 'start right siblings': [], 'end left siblings': ['SIMPX'], 'auto preterminal span': (7, 37), 'movers': ['SIMPX', 'NF'], 'old_parent': 'SIMPX', 'end right siblings': [], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU das sollte dann zu machen sein ja)
		(SU
			(SIMPX die frage ist jetzt noch)
			(SIMPX
				(VF man)
				(LK hat)
				(MF
					(NX mir)
					[01;31m(PX[00m
						(ADVX hier)
						[01;36m(PX[00m
							(APPR bei)
							(NX der mappe)[01;36m)[00m[01;31m)[00m
					(ADVX auch)
					(NX einige informationen uber sehenswurdigkeiten und veranstaltungen))
				(VC hingelegt))
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					[01;31m(SIMPX[00m
						(LK haben)
						(MF sie da auch interesse)[01;31m)[00m
					(SIMPX soll ich da irgendwas buchen)[01;31m)[00m[01;31m)[00m)
		(SU oder)))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'ADVX', 'PX', 'ADVX', 'NX'], 'mover info': [('ADVX', (15, 16))], 'old_family': ['ADVX', 'APPR', 'NX'], 'start left siblings': [], 'auto preterminals': ('PPER', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'PIAT', 'NN', 'APPR', 'NN', 'KON', 'NN'), 'start right siblings': ['APPR', 'NX'], 'end left siblings': ['NX'], 'auto preterminal span': (14, 26), 'movers': ['ADVX'], 'old_parent': 'PX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['PX', 'ADVX', 'NX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU das sollte dann zu machen sein ja)
		(SU
			(SIMPX die frage ist jetzt noch)
			(SIMPX man hat mir hier bei der mappe auch einige informationen uber sehenswurdigkeiten und veranstaltungen hingelegt)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					[01;31m(SIMPX[00m
						(LK haben)
						(MF sie da auch interesse)[01;31m)[00m
					(SIMPX soll ich da irgendwas buchen)[01;31m)[00m[01;31m)[00m)
		(SU oder)))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'PPER', 'ADV', 'ADV', 'NN', 'VMFIN', 'PPER', 'ADV', 'PIS', 'VVINF'), 'right siblings': ['SIMPX'], 'parent': 'SIMPX', 'auto preterminal span': (27, 37), 'span': (27, 32), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU das sollte dann zu machen sein ja)
		(SU
			(SIMPX die frage ist jetzt noch)
			(SIMPX man hat mir hier bei der mappe auch einige informationen uber sehenswurdigkeiten und veranstaltungen hingelegt)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					(LK haben)
					(MF sie da auch interesse)
					(SIMPX soll ich da irgendwas buchen)[01;31m)[00m[01;31m)[00m)
		(SU oder)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SIMPX', 'SIMPX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'VAFIN', 'ADV', 'ADV', 'PIS', 'VAFIN', 'PPER', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'PIAT', 'NN', 'APPR', 'NN', 'KON', 'NN', 'VVPP', 'VAFIN', 'PPER', 'ADV', 'ADV', 'NN', 'VMFIN', 'PPER', 'ADV', 'PIS', 'VVINF'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (7, 37), 'span': (27, 37), 'left siblings': ['SIMPX', 'SIMPX'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU das sollte dann zu machen sein ja)
		(SU
			(SIMPX die frage ist jetzt noch)
			(SIMPX man hat mir hier bei der mappe auch einige informationen uber sehenswurdigkeiten und veranstaltungen hingelegt)
			[01;31m(SIMPX[00m
				(LK haben)
				(MF sie da auch interesse)
				(SIMPX soll ich da irgendwas buchen)[01;31m)[00m)
		(SU oder)))
Step:Clause Attachment
{'subtrees': ['LK', 'MF', 'SIMPX'], 'family': ['SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'VAFIN', 'ADV', 'ADV', 'PIS', 'VAFIN', 'PPER', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'PIAT', 'NN', 'APPR', 'NN', 'KON', 'NN', 'VVPP', 'VAFIN', 'PPER', 'ADV', 'ADV', 'NN', 'VMFIN', 'PPER', 'ADV', 'PIS', 'VVINF'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (7, 37), 'span': (27, 37), 'left siblings': ['SIMPX', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP das sollte dann zu machen sein ja die frage ist jetzt noch man hat mir hier bei der mappe auch einige informationen uber sehenswurdigkeiten und veranstaltungen hingelegt haben sie da auch interesse soll ich da irgendwas buchen oder)

Sentence 398:
12 Initial errors
0 on fringe, 11 iterations
2 Error:NP Attachment
1 Error:UNSET remove
1 Error:PP Attachment
1 Error:UNSET add
1 Error:Unary
1 Error:Modifier Attachment
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:UNSET add
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM also)
			(SIMPX
				(VF unter den angeboten)
				(LK sind)
				[01;31m(MF[00m
					[01;31m(PX[00m
						(APPR in)
						[01;31m(NX[00m [01;33m(NX[00m
							(NX diese richtung)
							[01;31m(NX[00m
								(ART der)
								(ADJX darstellenden)
								(NN kunste)[01;31m)[00m[01;31m)[00m[01;31m)[00m
					[01;31m(NX[00m
						[01;31m(NX[00m
							(ADJX zwei)
							(NN kategorien)[01;31m)[00m
						[01;31m(NX[00m
							(NX opernbesuche)
							(KON und)
							(NX gospelkonzert)[01;31m)[00m[01;31m)[00m [01;33mNX)[00m
					[01;31m(PX[00m [01;33m(SIMPX (NF[00m
						(APPR an)
						[01;33m(NX[00m (NX dem abend)[01;31m)[00m[01;31m)[00m
				(VC zu buchen))) [01;33mNX) NF) SIMPX)[00m
		(SU sollen wir dann das gospelkonzert nehmen)
		(SU das ist sicherlich leichter als ein wagner)))
Step:NP Attachment
{'new_parent': 'NX', 'new_family': ['NX', 'NX', 'NX'], 'mover info': [('NX', (11, 16))], 'old_family': ['PX', 'NX', 'PX'], 'start left siblings': ['PX'], 'auto preterminals': ('APPR', 'PDAT', 'NN', 'ART', 'ADJA', 'NN', 'CARD', 'NN', 'NN', 'KON', 'NN', 'APPR', 'ART', 'NN'), 'start right siblings': ['PX'], 'end left siblings': ['NX', 'NX'], 'auto preterminal span': (5, 19), 'movers': ['NX'], 'old_parent': 'MF', 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU
			(DM also)
			(SIMPX
				(VF unter den angeboten)
				(LK sind)
				[01;31m(MF[00m
					[01;31m(PX[00m
						(APPR in)
						(NX
							(NX diese richtung)
							[01;31m(NX[00m
								(ART der)
								(ADJX darstellenden)
								(NN kunste)[01;31m)[00m
							[01;31m(NX[00m
								[01;31m(NX[00m
									(ADJX zwei)
									(NN kategorien)[01;31m)[00m
								[01;31m(NX[00m
									(NX opernbesuche)
									(KON und)
									(NX gospelkonzert)[01;31m)[00m[01;31m)[00m)[01;31m)[00m
					[01;31m(PX[00m [01;33m(SIMPX (NF[00m
						(APPR an)
						[01;33m(NX[00m (NX dem abend)[01;31m)[00m[01;31m)[00m
				(VC zu buchen))) [01;33mNX) NF) SIMPX)[00m
		(SU sollen wir dann das gospelkonzert nehmen)
		(SU das ist sicherlich leichter als ein wagner)))
Step:UNSET remove
{'subtrees': ['APPR', 'NX'], 'family': ['PX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'PDAT', 'NN', 'ART', 'ADJA', 'NN', 'CARD', 'NN', 'NN', 'KON', 'NN', 'APPR', 'ART', 'NN'), 'right siblings': ['PX'], 'parent': 'MF', 'auto preterminal span': (5, 19), 'span': (5, 16), 'left siblings': [], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM also)
			(SIMPX
				(VF unter den angeboten)
				(LK sind)
				[01;31m(MF[00m
					(APPR in)
					(NX
						(NX diese richtung)
						[01;31m(NX[00m
							(ART der)
							(ADJX darstellenden)
							(NN kunste)[01;31m)[00m
						[01;31m(NX[00m
							[01;31m(NX[00m
								(ADJX zwei)
								(NN kategorien)[01;31m)[00m
							[01;31m(NX[00m
								(NX opernbesuche)
								(KON und)
								(NX gospelkonzert)[01;31m)[00m[01;31m)[00m)
					[01;31m(PX[00m [01;33m(SIMPX (NF[00m
						(APPR an)
						[01;33m(NX[00m (NX dem abend)[01;31m)[00m[01;31m)[00m
				(VC zu buchen))) [01;33mNX) NF) SIMPX)[00m
		(SU sollen wir dann das gospelkonzert nehmen)
		(SU das ist sicherlich leichter als ein wagner)))
Step:PP Attachment
{'subtrees': ['APPR', 'NX', 'PX'], 'family': ['VF', 'LK', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NN', 'VAFIN', 'APPR', 'PDAT', 'NN', 'ART', 'ADJA', 'NN', 'CARD', 'NN', 'NN', 'KON', 'NN', 'APPR', 'ART', 'NN', 'PTKZU', 'VVINF'), 'right siblings': ['VC'], 'parent': 'SIMPX', 'auto preterminal span': (1, 21), 'span': (5, 19), 'left siblings': ['VF', 'LK'], 'label': 'MF', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM also)
			(SIMPX
				(VF unter den angeboten)
				(LK sind)
				(APPR in)
				(NX
					(NX diese richtung)
					[01;31m(NX[00m
						(ART der)
						(ADJX darstellenden)
						(NN kunste)[01;31m)[00m
					[01;31m(NX[00m
						[01;31m(NX[00m
							(ADJX zwei)
							(NN kategorien)[01;31m)[00m
						[01;31m(NX[00m
							(NX opernbesuche)
							(KON und)
							(NX gospelkonzert)[01;31m)[00m[01;31m)[00m)
				[01;36m(SIMPX[00m
					[01;36m(NF[00m
						[01;31m(PX[00m
							(APPR an)
							[01;33m(NX[00m (NX dem abend)[01;31m)[00m
						(VC zu buchen)[01;36m)[00m[01;36m)[00m)) [01;33mNX)[00m
		(SU sollen wir dann das gospelkonzert nehmen)
		(SU das ist sicherlich leichter als ein wagner)))
Step:UNSET add
{'subtrees': ['PX', 'VC'], 'family': ['VF', 'LK', 'APPR', 'NX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NN', 'PTKZU', 'VVINF'), 'right siblings': [], 'left siblings': [(VF (PX (APPR unter) (NX (ART den) (NN angeboten)))), (LK (VXFIN (VAFIN sind))), (APPR in), (NX (NX (PDAT diese) (NN richtung)) (NX (ART der) (ADJX (ADJA darstellenden)) (NN kunste)) (NX (NX (ADJX (CARD zwei)) (NN kategorien)) (NX (NX (NN opernbesuche)) (KON und) (NX (NN gospelkonzert)))))], 'auto preterminal span': (16, 21), 'span': (16, 21), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM also)
			(SIMPX
				(VF unter den angeboten)
				(LK sind)
				(APPR in)
				(NX
					(NX diese richtung)
					[01;31m(NX[00m
						(ART der)
						(ADJX darstellenden)
						(NN kunste)[01;31m)[00m
					[01;31m(NX[00m
						[01;31m(NX[00m
							(ADJX zwei)
							(NN kategorien)[01;31m)[00m
						[01;31m(NX[00m
							(NX opernbesuche)
							(KON und)
							(NX gospelkonzert)[01;31m)[00m[01;31m)[00m)
				[01;36m(SIMPX[00m
					(NF
						[01;31m(PX[00m
							(APPR an)
							[01;33m(NX[00m (NX dem abend)[01;31m)[00m
						(VC zu buchen))[01;36m)[00m)) [01;33mNX)[00m
		(SU sollen wir dann das gospelkonzert nehmen)
		(SU das ist sicherlich leichter als ein wagner)))
Step:Unary
{'subtrees': ['NF'], 'family': ['VF', 'LK', 'APPR', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NN', 'PTKZU', 'VVINF'), 'right siblings': [], 'left siblings': [(VF (PX (APPR unter) (NX (ART den) (NN angeboten)))), (LK (VXFIN (VAFIN sind))), (APPR in), (NX (NX (PDAT diese) (NN richtung)) (NX (ART der) (ADJX (ADJA darstellenden)) (NN kunste)) (NX (NX (ADJX (CARD zwei)) (NN kategorien)) (NX (NX (NN opernbesuche)) (KON und) (NX (NN gospelkonzert)))))], 'auto preterminal span': (16, 21), 'span': (16, 21), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM also)
			(SIMPX
				(VF unter den angeboten)
				(LK sind)
				(APPR in)
				(NX
					(NX diese richtung)
					[01;31m(NX[00m
						(ART der)
						(ADJX darstellenden)
						(NN kunste)[01;31m)[00m
					[01;31m(NX[00m
						[01;31m(NX[00m
							(ADJX zwei)
							(NN kategorien)[01;31m)[00m
						[01;31m(NX[00m
							(NX opernbesuche)
							(KON und)
							(NX gospelkonzert)[01;31m)[00m[01;31m)[00m)
				(SIMPX
					(NF
						[01;31m(PX[00m
							(APPR an)
							[01;33m(NX[00m (NX dem abend)[01;31m)[00m
						(VC zu buchen))))) [01;33mNX)[00m
		(SU sollen wir dann das gospelkonzert nehmen)
		(SU das ist sicherlich leichter als ein wagner)))
Step:Modifier Attachment
{'subtrees': ['ART', 'ADJX', 'NN'], 'family': ['NX', 'NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDAT', 'NN', 'ART', 'ADJA', 'NN', 'CARD', 'NN', 'NN', 'KON', 'NN'), 'right siblings': ['NX'], 'parent': 'NX', 'auto preterminal span': (6, 16), 'span': (8, 11), 'left siblings': ['NX'], 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM also)
			(SIMPX
				(VF unter den angeboten)
				(LK sind)
				(APPR in)
				(NX
					(NX diese richtung)
					(ART der)
					(ADJX darstellenden)
					(NN kunste)
					[01;31m(NX[00m
						[01;31m(NX[00m
							(ADJX zwei)
							(NN kategorien)[01;31m)[00m
						[01;31m(NX[00m
							(NX opernbesuche)
							(KON und)
							(NX gospelkonzert)[01;31m)[00m[01;31m)[00m)
				(SIMPX
					(NF
						[01;31m(PX[00m
							(APPR an)
							[01;33m(NX[00m (NX dem abend)[01;31m)[00m
						(VC zu buchen))))) [01;33mNX)[00m
		(SU sollen wir dann das gospelkonzert nehmen)
		(SU das ist sicherlich leichter als ein wagner)))
Step:UNSET remove
{'subtrees': ['ADJX', 'NN'], 'family': ['NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'NN', 'NN', 'KON', 'NN'), 'right siblings': ['NX'], 'parent': 'NX', 'auto preterminal span': (11, 16), 'span': (11, 13), 'left siblings': [], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM also)
			(SIMPX
				(VF unter den angeboten)
				(LK sind)
				(APPR in)
				(NX
					(NX diese richtung)
					(ART der)
					(ADJX darstellenden)
					(NN kunste)
					[01;31m(NX[00m
						(ADJX zwei)
						(NN kategorien)
						[01;31m(NX[00m
							(NX opernbesuche)
							(KON und)
							(NX gospelkonzert)[01;31m)[00m[01;31m)[00m)
				(SIMPX
					(NF
						[01;31m(PX[00m
							(APPR an)
							[01;33m(NX[00m (NX dem abend)[01;31m)[00m
						(VC zu buchen))))) [01;33mNX)[00m
		(SU sollen wir dann das gospelkonzert nehmen)
		(SU das ist sicherlich leichter als ein wagner)))
Step:UNSET remove
{'subtrees': ['ADJX', 'NN', 'NX'], 'family': ['NX', 'ART', 'ADJX', 'NN', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDAT', 'NN', 'ART', 'ADJA', 'NN', 'CARD', 'NN', 'NN', 'KON', 'NN'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (6, 16), 'span': (11, 16), 'left siblings': ['NX', 'ART', 'ADJX', 'NN'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM also)
			(SIMPX
				(VF unter den angeboten)
				(LK sind)
				(APPR in)
				(NX
					(NX diese richtung)
					(ART der)
					(ADJX darstellenden)
					(NN kunste)
					(ADJX zwei)
					(NN kategorien)
					[01;31m(NX[00m
						(NX opernbesuche)
						(KON und)
						(NX gospelkonzert)[01;31m)[00m)
				(SIMPX
					(NF
						[01;31m(PX[00m
							(APPR an)
							[01;33m(NX[00m (NX dem abend)[01;31m)[00m
						(VC zu buchen))))) [01;33mNX)[00m
		(SU sollen wir dann das gospelkonzert nehmen)
		(SU das ist sicherlich leichter als ein wagner)))
Step:UNSET remove
{'subtrees': ['NX', 'KON', 'NX'], 'family': ['NX', 'ART', 'ADJX', 'NN', 'ADJX', 'NN', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDAT', 'NN', 'ART', 'ADJA', 'NN', 'CARD', 'NN', 'NN', 'KON', 'NN'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (6, 16), 'span': (13, 16), 'left siblings': ['NX', 'ART', 'ADJX', 'NN', 'ADJX', 'NN'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM also)
			(SIMPX
				(VF unter den angeboten)
				(LK sind)
				(APPR in)
				(NX diese richtung der darstellenden kunste zwei kategorien opernbesuche und gospelkonzert)
				(SIMPX
					(NF
						[01;31m(PX[00m
							(APPR an)
							[01;33m(NX[00m (NX dem abend)[01;31m)[00m
						(VC zu buchen))))) [01;33mNX)[00m
		(SU sollen wir dann das gospelkonzert nehmen)
		(SU das ist sicherlich leichter als ein wagner)))
Step:UNSET remove
{'subtrees': ['APPR', 'NX'], 'family': ['PX', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NN', 'PTKZU', 'VVINF'), 'right siblings': ['VC'], 'parent': 'NF', 'auto preterminal span': (16, 21), 'span': (16, 19), 'left siblings': [], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM also)
			(SIMPX
				(VF unter den angeboten)
				(LK sind)
				(APPR in)
				(NX diese richtung der darstellenden kunste zwei kategorien opernbesuche und gospelkonzert)
				(SIMPX
					(NF
						(APPR an)
						[01;36m(NX[00m
							(NX dem abend)
							(VC zu buchen)[01;36m)[00m))))
		(SU sollen wir dann das gospelkonzert nehmen)
		(SU das ist sicherlich leichter als ein wagner)))
Step:UNSET add
{'subtrees': ['NX', 'VC'], 'family': ['APPR', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'PTKZU', 'VVINF'), 'right siblings': [], 'left siblings': [(APPR an)], 'auto preterminal span': (17, 21), 'span': (17, 21), 'parent': 'NF', 'label': 'NX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP also unter den angeboten sind in diese richtung der darstellenden kunste zwei kategorien opernbesuche und gospelkonzert an dem abend zu buchen sollen wir dann das gospelkonzert nehmen das ist sicherlich leichter als ein wagner)

Sentence 399:
14 Initial errors
0 on fringe, 5 iterations
7 Error:Clause Attachment
2 Error:Single Word Phrase
2 Error:Co-ordination
2 Error:NP Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU ja)
		(SU gut dann organisiere ich das auch)
		(SU
			(DM ja)
			[01;36m(SIMPX[00m
				[01;31m(SIMPX[00m
					(VF ich)
					(LK denke)
					[01;31m(NF[00m [01;33m(SIMPX (NF[00m
						[01;31m(SIMPX[00m
							(VF dann)
							(LK ist)
							(MF es am sinnvollsten)
							(NF [01;33m(SIMPX (NF[00m
								(SIMPX
									(C wenn)
									(MF wir die restlichen dinge)
									[01;36m(VXINF[00m
										(VC
											[01;31m(VXFIN[00m
												(VVFIN vertagen)[01;31m)[00m)[01;36m)[00m
									(NF bis zu unserem nachsten telefonat)))[01;31m)[00m[01;31m)[00m[01;31m)[00m
				(SIMPX
					(C das)
					(MF wir dann)
					(VC fixieren)
					(NF
						(SIMPX
							(C wie)
							(MF
								(NX das)
								(PX [01;33m(PX (PX[00m
									(APPR mit)
									[01;31m(NX[00m
										[01;31m(NX[00m
											(NX den buchungen) [01;33mPX)[00m
											(NX der hotels)[01;31m)[00m [01;33mPX)[00m
										(KON und)
										(ADVX so weiter)[01;31m)[00m))
							(VC aussehen sollte))))[01;36m)[00m) [01;33mNF) SIMPX) NF) SIMPX)[00m
		(SU dann)))
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'NF', 'SIMPX'], 'mover info': [('SIMPX', (26, 42))], 'old_family': ['DM', 'SIMPX', 'SIMPX'], 'start left siblings': ['DM', 'SIMPX'], 'auto preterminals': ('PTKANT', 'PPER', 'VVFIN', 'ADV', 'VAFIN', 'PPER', 'PTKA', 'ADJD', 'KOUS', 'PPER', 'ART', 'ADJA', 'NN', 'VVFIN', 'APPR', 'APPR', 'PPOSAT', 'ADJA', 'NN', 'KOUS', 'PPER', 'ADV', 'VVFIN', 'KOUS', 'PDS', 'APPR', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ADV', 'VVINF', 'VMFIN'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'MF', 'NF'], 'auto preterminal span': (7, 42), 'adding node already present': False, 'movers': ['SIMPX'], 'old_parent': 'SU', 'added and moved': True, 'end right siblings': [], 'classified_type': 'Clause Attachment', 'type': 'move', 'added label': 'VXINF'}
(TOP
	(TURN
		(SU ja)
		(SU gut dann organisiere ich das auch)
		(SU
			(DM ja)
			(SIMPX
				(VF ich)
				(LK denke)
				(NF
					(SIMPX
						(VF dann)
						(LK ist)
						(MF es am sinnvollsten)
						[01;36m(NF[00m
							(SIMPX
								(NF
									(SIMPX
										(C wenn)
										(MF wir die restlichen dinge)
										[01;36m(VXINF[00m
											(VC
												[01;31m(VXFIN[00m
													(VVFIN vertagen)[01;31m)[00m)[01;36m)[00m
										(NF bis zu unserem nachsten telefonat)))
								(SIMPX
									(C das)
									(MF wir dann)
									(VC fixieren)
									(NF
										(SIMPX
											(C wie)
											(MF
												(NX das)
												(PX [01;33m(PX (PX[00m
													(APPR mit)
													[01;31m(NX[00m
														[01;31m(NX[00m
															(NX den buchungen) [01;33mPX)[00m
															(NX der hotels)[01;31m)[00m [01;33mPX)[00m
														(KON und)
														(ADVX so weiter)[01;31m)[00m))
											(VC aussehen sollte)))))[01;36m)[00m))))
		(SU dann)))
Step:Single Word Phrase
{'family': ['VXINF'], 'auto preterminal span': (20, 21), 'span': (20, 21), 'subtrees': ['VVFIN'], 'parent': 'VC', 'over_word': True, 'auto preterminals': ('VVFIN',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VXFIN', 'VXINF')}
(TOP
	(TURN
		(SU ja)
		(SU gut dann organisiere ich das auch)
		(SU
			(DM ja)
			(SIMPX
				(VF ich)
				(LK denke)
				(NF
					(SIMPX
						(VF dann)
						(LK ist)
						(MF es am sinnvollsten)
						[01;36m(NF[00m
							(SIMPX
								(NF wenn wir die restlichen dinge vertagen bis zu unserem nachsten telefonat)
								(SIMPX
									(C das)
									(MF wir dann)
									(VC fixieren)
									(NF
										(SIMPX
											(C wie)
											(MF
												(NX das)
												(PX [01;33m(PX (PX[00m
													(APPR mit)
													[01;31m(NX[00m
														[01;31m(NX[00m
															(NX den buchungen) [01;33mPX)[00m
															(NX der hotels)[01;31m)[00m [01;33mPX)[00m
														(KON und)
														(ADVX so weiter)[01;31m)[00m))
											(VC aussehen sollte)))))[01;36m)[00m))))
		(SU dann)))
Step:Co-ordination
{'new_parent': 'MF', 'new_family': ['NX', 'PX', 'KON', 'ADVX'], 'mover info': [('KON', (37, 38)), ('ADVX', (38, 40))], 'old_family': ['NX', 'KON', 'ADVX'], 'start left siblings': ['NX'], 'auto preterminals': ('PDS', 'APPR', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ADV'), 'start right siblings': [], 'end left siblings': ['NX', 'PX'], 'auto preterminal span': (31, 40), 'adding node already present': False, 'movers': ['KON', 'ADVX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'Co-ordination', 'type': 'move', 'added label': 'PX'}
(TOP
	(TURN
		(SU ja)
		(SU gut dann organisiere ich das auch)
		(SU
			(DM ja)
			(SIMPX
				(VF ich)
				(LK denke)
				(NF
					(SIMPX
						(VF dann)
						(LK ist)
						(MF es am sinnvollsten)
						[01;36m(NF[00m
							(SIMPX
								(NF wenn wir die restlichen dinge vertagen bis zu unserem nachsten telefonat)
								(SIMPX
									(C das)
									(MF wir dann)
									(VC fixieren)
									(NF
										(SIMPX
											(C wie)
											(MF
												(NX das)
												(PX [01;33m(PX[00m
													(PX
														(APPR mit)
														[01;31m(NX[00m
															(NX den buchungen) [01;33mPX)[00m
															(NX der hotels)[01;31m)[00m)
													(KON und)
													(ADVX so weiter)))
											(VC aussehen sollte)))))[01;36m)[00m))))
		(SU dann)))
Step:NP Attachment
{'new_parent': 'PX', 'new_family': ['APPR', 'NX', 'NX'], 'mover info': [('NX', (33, 35))], 'old_family': ['NX', 'NX'], 'start left siblings': [], 'auto preterminals': ('APPR', 'ART', 'NN', 'ART', 'NN'), 'start right siblings': ['NX'], 'end left siblings': ['APPR'], 'auto preterminal span': (32, 37), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': ['NX'], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'PX'}
(TOP
	(TURN
		(SU ja)
		(SU gut dann organisiere ich das auch)
		(SU
			(DM ja)
			(SIMPX
				(VF ich)
				(LK denke)
				(NF
					(SIMPX
						(VF dann)
						(LK ist)
						(MF es am sinnvollsten)
						[01;36m(NF[00m
							(SIMPX
								(NF wenn wir die restlichen dinge vertagen bis zu unserem nachsten telefonat)
								(SIMPX das wir dann fixieren wie das mit den buchungen der hotels und so weiter aussehen sollte))[01;36m)[00m))))
		(SU dann)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['VF', 'LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ART', 'ADJA', 'NN', 'VVFIN', 'APPR', 'APPR', 'PPOSAT', 'ADJA', 'NN', 'KOUS', 'PPER', 'ADV', 'VVFIN', 'KOUS', 'PDS', 'APPR', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ADV', 'VVINF', 'VMFIN'), 'right siblings': [], 'left siblings': [(VF (ADVX (ADV dann))), (LK (VXFIN (VAFIN ist))), (MF (NX (PPER es)) (ADJX (PTKA am) (ADJD sinnvollsten)))], 'auto preterminal span': (15, 42), 'span': (15, 42), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP ja gut dann organisiere ich das auch ja ich denke dann ist es am sinnvollsten wenn wir die restlichen dinge vertagen bis zu unserem nachsten telefonat das wir dann fixieren wie das mit den buchungen der hotels und so weiter aussehen sollte dann)

Sentence 400:
0 Initial errors
0 on fringe, 0 iterations

Sentence 401:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU ja)
		(SU schonen tag noch)
		(SU
			[01;31m(PX[00m
				(PX bis zum wiederhoren)
				(ADVX dann)[01;31m)[00m
			(SIMPX am telefon nehme ich an))
		(SU ja)))
Step:Modifier Attachment
{'subtrees': ['PX', 'ADVX'], 'family': ['PX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'APPRART', 'NN', 'ADV', 'APPRART', 'NN', 'VVFIN', 'PPER', 'PTKVZ'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (4, 13), 'span': (4, 8), 'left siblings': [], 'label': 'PX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP ja schonen tag noch bis zum wiederhoren dann am telefon nehme ich an ja)

Sentence 402:
0 Initial errors
0 on fringe, 0 iterations

Sentence 403:
0 Initial errors
0 on fringe, 0 iterations

Sentence 404:
27 Initial errors
0 on fringe, 15 iterations
3 Error:Modifier Attachment
3 Error:UNSET move
3 Error:Modifier Attachment
3 Error:Clause Attachment
2 Error:Different label
2 Error:Different label
2 Error:Modifier Attachment
2 Error:UNSET move
1 Error:Unary
1 Error:UNSET remove
1 Error:Single Word Phrase
1 Error:Unary
1 Error:Co-ordination
1 Error:UNSET add
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU ja)
		(SU
			(DM ja)
			(SIMPX
				(VF dann)
				(LK wurde)
				(MF ich ja)
				(VC vorschlagen)
				[01;36m(NF[00m
					[01;36m(SIMPX[00m
						[01;31m(SIMPX[00m
							(VF es)
							(LK gibt)
							[01;36m(MF[00m
								[01;31m(MF[00m
									(NX
										(NN fluge))[01;31m)[00m
								[01;36m(ADJX[00m [01;31m(NF[00m
									[01;31m(PX[00m
										(ADVX schon)
										[01;36m(PX[00m
											(APPR ab)
											(NX sechs uhr morgens)[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;31m)[00m
						(NF das wir wirklich um sechs uhr losfliegen)[01;36m)[00m[01;36m)[00m)
			[01;31m(SIMPX[00m
				(VF dann)
				(LK sind)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX wir)
					[01;33m(ADJX[00m (PX in zwei stunden)[01;31m)[00m[01;31m)[00m
			[01;31m(ADVX[00m
				(ADV spater)[01;31m)[00m [01;33mADJX) MF)[00m
			(DM also)
			(SIMPX sind wir um acht in hannover))
		[01;36m(SIMPX[00m
			(SU
				[01;31m(SIMPX[00m
					(C bis)
					[01;31m(MF[00m [01;33m(FKOORD (MF[00m
						(NX
							(PPER wir))[01;31m)[00m[01;31m)[00m
				[01;31m(SIMPX[00m
					[01;31m(VF[00m
						(ADVX
							(ADV dann))[01;31m)[00m [01;33mMF)[00m
					(FKOORD
						[01;31m(LKM[00m
							(LK trinken)
							[01;33m(FKOORD[00m (MF wir noch einen kaffee)[01;31m)[00m
						(KON und)
						[01;36m(LKMVCN[00m [01;31m(FKOORD[00m
							(LK konnen)
							(FKOORD
								(MVC dann gleich zu unsrer filiale fahren)
								(KON und)
								[01;36m(MVC[00m [01;31m(MVCN[00m
									(MF dort)
									(VC anfangen)
									(NF zu arbeiten)[01;31m)[00m[01;36m)[00m)[01;31m)[00m[01;36m)[00m)[01;31m)[00m)[01;36m)[00m)) [01;33mFKOORD) FKOORD)[00m
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'PX', 'ADVX'], 'mover info': [('ADVX', (28, 29))], 'old_family': ['DM', 'SIMPX', 'SIMPX', 'ADVX', 'DM', 'SIMPX'], 'start left siblings': ['DM', 'SIMPX', 'SIMPX'], 'auto preterminals': ('PTKANT', 'ADV', 'VAFIN', 'PPER', 'ADV', 'VVINF', 'PPER', 'VVFIN', 'NN', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'KOUS', 'PPER', 'ADV', 'APPR', 'CARD', 'NN', 'VVFIN', 'ADV', 'VAFIN', 'PPER', 'APPR', 'CARD', 'NN', 'ADV', 'ADV', 'VAFIN', 'PPER', 'APPR', 'CARD', 'APPR', 'NE'), 'start right siblings': ['DM', 'SIMPX'], 'end left siblings': ['NX', 'PX'], 'auto preterminal span': (1, 36), 'adding node already present': False, 'movers': ['ADVX'], 'old_parent': 'SU', 'POS confusion': ('ADV', 'ADV'), 'added and moved': True, 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'MVC'}
(TOP
	(TURN
		(SU ja)
		(SU
			(DM ja)
			(SIMPX
				(VF dann)
				(LK wurde)
				(MF ich ja)
				(VC vorschlagen)
				[01;36m(NF[00m
					[01;36m(SIMPX[00m
						[01;31m(SIMPX[00m
							(VF es)
							(LK gibt)
							[01;36m(MF[00m
								[01;31m(MF[00m
									(NX
										(NN fluge))[01;31m)[00m
								[01;36m(ADJX[00m [01;31m(NF[00m
									[01;31m(PX[00m
										(ADVX schon)
										[01;36m(PX[00m
											(APPR ab)
											(NX sechs uhr morgens)[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;31m)[00m
						(NF das wir wirklich um sechs uhr losfliegen)[01;36m)[00m[01;36m)[00m)
			[01;31m(SIMPX[00m
				(VF dann)
				(LK sind)
				(MF
					(NX wir)
					(ADJX
						(PX in zwei stunden)
						[01;31m(ADVX[00m
							(ADV spater)[01;31m)[00m))[01;31m)[00m
			(DM also)
			(SIMPX sind wir um acht in hannover))
		[01;36m(SIMPX[00m
			(SU
				[01;31m(SIMPX[00m
					(C bis)
					[01;31m(MF[00m [01;33m(FKOORD (MF[00m
						(NX
							(PPER wir))[01;31m)[00m[01;31m)[00m
				[01;31m(SIMPX[00m
					[01;31m(VF[00m
						(ADVX
							(ADV dann))[01;31m)[00m [01;33mMF)[00m
					(FKOORD
						[01;31m(LKM[00m
							(LK trinken)
							[01;33m(FKOORD[00m (MF wir noch einen kaffee)[01;31m)[00m
						(KON und)
						[01;36m(LKMVCN[00m [01;31m(FKOORD[00m
							(LK konnen)
							(FKOORD
								(MVC dann gleich zu unsrer filiale fahren)
								(KON und)
								[01;36m(MVC[00m [01;31m(MVCN[00m
									(MF dort)
									(VC anfangen)
									(NF zu arbeiten)[01;31m)[00m[01;36m)[00m)[01;31m)[00m[01;36m)[00m)[01;31m)[00m)[01;36m)[00m)) [01;33mFKOORD) FKOORD)[00m
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'NF', 'NF'], 'mover info': [('NF', (15, 22))], 'old_family': ['VF', 'LK', 'MF', 'VC', 'SIMPX', 'NF'], 'start left siblings': ['VF', 'LK', 'MF', 'VC', 'SIMPX'], 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'ADV', 'VVINF', 'PPER', 'VVFIN', 'NN', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'KOUS', 'PPER', 'ADV', 'APPR', 'CARD', 'NN', 'VVFIN'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'MF', 'NF'], 'auto preterminal span': (2, 22), 'adding node already present': False, 'movers': ['NF'], 'old_parent': 'SIMPX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'MVC'}
(TOP
	(TURN
		(SU ja)
		(SU
			(DM ja)
			(SIMPX
				(VF dann)
				(LK wurde)
				(MF ich ja)
				(VC vorschlagen)
				(NF
					(SIMPX
						(VF es)
						(LK gibt)
						[01;36m(MF[00m
							[01;31m(MF[00m
								(NX
									(NN fluge))[01;31m)[00m
							[01;36m(ADJX[00m [01;31m(NF[00m
								[01;31m(PX[00m
									(ADVX schon)
									[01;36m(PX[00m
										(APPR ab)
										(NX sechs uhr morgens)[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m
						(NF das wir wirklich um sechs uhr losfliegen))))
			[01;31m(SIMPX[00m
				(VF dann)
				(LK sind)
				(MF
					(NX wir)
					(ADJX
						(PX in zwei stunden)
						[01;31m(ADVX[00m
							(ADV spater)[01;31m)[00m))[01;31m)[00m
			(DM also)
			(SIMPX sind wir um acht in hannover))
		[01;36m(SIMPX[00m
			(SU
				[01;31m(SIMPX[00m
					(C bis)
					[01;31m(MF[00m [01;33m(FKOORD (MF[00m
						(NX
							(PPER wir))[01;31m)[00m[01;31m)[00m
				[01;31m(SIMPX[00m
					[01;31m(VF[00m
						(ADVX
							(ADV dann))[01;31m)[00m [01;33mMF)[00m
					(FKOORD
						[01;31m(LKM[00m
							(LK trinken)
							[01;33m(FKOORD[00m (MF wir noch einen kaffee)[01;31m)[00m
						(KON und)
						[01;36m(LKMVCN[00m [01;31m(FKOORD[00m
							(LK konnen)
							(FKOORD
								(MVC dann gleich zu unsrer filiale fahren)
								(KON und)
								[01;36m(MVC[00m [01;31m(MVCN[00m
									(MF dort)
									(VC anfangen)
									(NF zu arbeiten)[01;31m)[00m[01;36m)[00m)[01;31m)[00m[01;36m)[00m)[01;31m)[00m)[01;36m)[00m)) [01;33mFKOORD) FKOORD)[00m
Step:Modifier Attachment
{'new_parent': 'NF', 'new_family': ['ADVX', 'PX'], 'mover info': [('ADVX', (10, 11))], 'old_family': ['ADVX', 'APPR', 'NX'], 'start left siblings': [], 'auto preterminals': ('ADV', 'APPR', 'CARD', 'NN', 'ADV'), 'start right siblings': ['APPR', 'NX'], 'end left siblings': [], 'auto preterminal span': (10, 15), 'adding node already present': False, 'movers': ['ADVX'], 'old_parent': 'PX', 'POS confusion': ('ADV', 'ADV'), 'added and moved': True, 'end right siblings': ['PX'], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'MVC'}
(TOP
	(TURN
		(SU ja)
		(SU
			(DM ja)
			(SIMPX
				(VF dann)
				(LK wurde)
				(MF ich ja)
				(VC vorschlagen)
				(NF
					(SIMPX
						(VF es)
						(LK gibt)
						[01;36m(MF[00m
							[01;31m(MF[00m
								(NX
									(NN fluge))[01;31m)[00m
							(ADJX
								[01;31m(NF[00m
									(ADVX schon)
									(PX ab sechs uhr morgens)[01;31m)[00m)[01;36m)[00m
						(NF das wir wirklich um sechs uhr losfliegen))))
			[01;31m(SIMPX[00m
				(VF dann)
				(LK sind)
				(MF
					(NX wir)
					(ADJX
						(PX in zwei stunden)
						[01;31m(ADVX[00m
							(ADV spater)[01;31m)[00m))[01;31m)[00m
			(DM also)
			(SIMPX sind wir um acht in hannover))
		[01;36m(SIMPX[00m
			(SU
				[01;31m(SIMPX[00m
					(C bis)
					[01;31m(MF[00m [01;33m(FKOORD (MF[00m
						(NX
							(PPER wir))[01;31m)[00m[01;31m)[00m
				[01;31m(SIMPX[00m
					[01;31m(VF[00m
						(ADVX
							(ADV dann))[01;31m)[00m [01;33mMF)[00m
					(FKOORD
						[01;31m(LKM[00m
							(LK trinken)
							[01;33m(FKOORD[00m (MF wir noch einen kaffee)[01;31m)[00m
						(KON und)
						[01;36m(LKMVCN[00m [01;31m(FKOORD[00m
							(LK konnen)
							(FKOORD
								(MVC dann gleich zu unsrer filiale fahren)
								(KON und)
								[01;36m(MVC[00m [01;31m(MVCN[00m
									(MF dort)
									(VC anfangen)
									(NF zu arbeiten)[01;31m)[00m[01;36m)[00m)[01;31m)[00m[01;36m)[00m)[01;31m)[00m)[01;36m)[00m)) [01;33mFKOORD) FKOORD)[00m
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['C', 'MF', 'SIMPX'], 'mover info': [('SIMPX', (38, 57))], 'old_family': ['SIMPX', 'SIMPX'], 'start left siblings': ['SIMPX'], 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'VVFIN', 'PPER', 'ADV', 'ART', 'NN', 'KON', 'VMFIN', 'ADV', 'ADV', 'APPR', 'PPOSAT', 'NN', 'VVINF', 'KON', 'ADV', 'VVINF', 'PTKZU', 'VVINF'), 'start right siblings': [], 'end left siblings': ['C', 'MF'], 'auto preterminal span': (36, 57), 'adding node already present': False, 'movers': ['SIMPX'], 'old_parent': 'SU', 'added and moved': True, 'end right siblings': [], 'classified_type': 'Clause Attachment', 'type': 'move', 'added label': 'MVC'}
(TOP
	(TURN
		(SU ja)
		(SU
			(DM ja)
			(SIMPX
				(VF dann)
				(LK wurde)
				(MF ich ja)
				(VC vorschlagen)
				(NF
					(SIMPX
						(VF es)
						(LK gibt)
						[01;36m(MF[00m
							[01;31m(MF[00m
								(NX
									(NN fluge))[01;31m)[00m
							(ADJX
								[01;31m(NF[00m
									(ADVX schon)
									(PX ab sechs uhr morgens)[01;31m)[00m)[01;36m)[00m
						(NF das wir wirklich um sechs uhr losfliegen))))
			[01;31m(SIMPX[00m
				(VF dann)
				(LK sind)
				(MF
					(NX wir)
					(ADJX
						(PX in zwei stunden)
						[01;31m(ADVX[00m
							(ADV spater)[01;31m)[00m))[01;31m)[00m
			(DM also)
			(SIMPX sind wir um acht in hannover))
		(SU
			(SIMPX
				(C bis)
				(FKOORD [01;33m(MF[00m
					[01;31m(MF[00m
						(NX
							(PPER wir))[01;31m)[00m
					[01;31m(SIMPX[00m
						[01;31m(VF[00m
							(ADVX
								(ADV dann))[01;31m)[00m [01;33mMF)[00m
						(FKOORD
							[01;31m(LKM[00m
								(LK trinken)
								[01;33m(FKOORD[00m (MF wir noch einen kaffee)[01;31m)[00m
							(KON und)
							[01;36m(LKMVCN[00m [01;31m(FKOORD[00m
								(LK konnen)
								(FKOORD
									(MVC dann gleich zu unsrer filiale fahren)
									(KON und)
									[01;36m(MVC[00m [01;31m(MVCN[00m
										(MF dort)
										(VC anfangen)
										(NF zu arbeiten)[01;31m)[00m[01;36m)[00m)[01;31m)[00m[01;36m)[00m)[01;31m)[00m))))) [01;33mFKOORD)[00m
Step:Different label
{'family': ['LKM', 'KON', 'LKMVCN'], 'auto preterminal span': (45, 57), 'span': (45, 57), 'subtrees': ['LK', 'FKOORD'], 'parent': 'FKOORD', 'over_word': False, 'auto preterminals': ('VMFIN', 'ADV', 'ADV', 'APPR', 'PPOSAT', 'NN', 'VVINF', 'KON', 'ADV', 'VVINF', 'PTKZU', 'VVINF'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('FKOORD', 'LKMVCN')}
(TOP
	(TURN
		(SU ja)
		(SU
			(DM ja)
			(SIMPX
				(VF dann)
				(LK wurde)
				(MF ich ja)
				(VC vorschlagen)
				(NF
					(SIMPX
						(VF es)
						(LK gibt)
						[01;36m(MF[00m
							[01;31m(MF[00m
								(NX
									(NN fluge))[01;31m)[00m
							(ADJX
								[01;31m(NF[00m
									(ADVX schon)
									(PX ab sechs uhr morgens)[01;31m)[00m)[01;36m)[00m
						(NF das wir wirklich um sechs uhr losfliegen))))
			[01;31m(SIMPX[00m
				(VF dann)
				(LK sind)
				(MF
					(NX wir)
					(ADJX
						(PX in zwei stunden)
						[01;31m(ADVX[00m
							(ADV spater)[01;31m)[00m))[01;31m)[00m
			(DM also)
			(SIMPX sind wir um acht in hannover))
		(SU
			(SIMPX
				(C bis)
				(FKOORD [01;33m(MF[00m
					[01;31m(MF[00m
						(NX
							(PPER wir))[01;31m)[00m
					[01;31m(SIMPX[00m
						[01;31m(VF[00m
							(ADVX
								(ADV dann))[01;31m)[00m [01;33mMF)[00m
						(FKOORD
							[01;31m(LKM[00m
								(LK trinken)
								[01;33m(FKOORD[00m (MF wir noch einen kaffee)[01;31m)[00m
							(KON und)
							(LKMVCN
								(LK konnen)
								(FKOORD
									(MVC dann gleich zu unsrer filiale fahren)
									(KON und)
									[01;36m(MVC[00m [01;31m(MVCN[00m
										(MF dort)
										(VC anfangen)
										(NF zu arbeiten)[01;31m)[00m[01;36m)[00m)))[01;31m)[00m))))) [01;33mFKOORD)[00m
Step:Different label
{'family': ['MVC', 'KON', 'MVC'], 'auto preterminal span': (53, 57), 'span': (53, 57), 'subtrees': ['MF', 'VC', 'NF'], 'parent': 'FKOORD', 'over_word': False, 'auto preterminals': ('ADV', 'VVINF', 'PTKZU', 'VVINF'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('MVCN', 'MVC')}
(TOP
	(TURN
		(SU ja)
		(SU
			(DM ja)
			(SIMPX
				(VF dann)
				(LK wurde)
				(MF ich ja)
				(VC vorschlagen)
				(NF
					(SIMPX
						(VF es)
						(LK gibt)
						[01;36m(MF[00m
							[01;31m(MF[00m
								(NX
									(NN fluge))[01;31m)[00m
							(ADJX
								[01;31m(NF[00m
									(ADVX schon)
									(PX ab sechs uhr morgens)[01;31m)[00m)[01;36m)[00m
						(NF das wir wirklich um sechs uhr losfliegen))))
			[01;31m(SIMPX[00m
				(VF dann)
				(LK sind)
				(MF
					(NX wir)
					(ADJX
						(PX in zwei stunden)
						[01;31m(ADVX[00m
							(ADV spater)[01;31m)[00m))[01;31m)[00m
			(DM also)
			(SIMPX sind wir um acht in hannover))
		(SU
			(SIMPX
				(C bis)
				(FKOORD [01;33m(MF[00m
					[01;31m(MF[00m
						(NX
							(PPER wir))[01;31m)[00m
					[01;31m(SIMPX[00m
						[01;31m(VF[00m
							(ADVX
								(ADV dann))[01;31m)[00m [01;33mMF)[00m
						(FKOORD
							[01;31m(LKM[00m
								(LK trinken)
								[01;33m(FKOORD[00m (MF wir noch einen kaffee)[01;31m)[00m
							(KON und)
							(LKMVCN konnen dann gleich zu unsrer filiale fahren und dort anfangen zu arbeiten))[01;31m)[00m))))) [01;33mFKOORD)[00m
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'ADJX'], 'mover info': [('ADJX', (10, 15))], 'old_family': ['VF', 'LK', 'MF', 'ADJX', 'NF'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('PPER', 'VVFIN', 'NN', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'KOUS', 'PPER', 'ADV', 'APPR', 'CARD', 'NN', 'VVFIN'), 'start right siblings': ['NF'], 'end left siblings': ['NX'], 'auto preterminal span': (7, 22), 'movers': ['ADJX'], 'old_parent': 'SIMPX', 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU ja)
		(SU
			(DM ja)
			(SIMPX
				(VF dann)
				(LK wurde)
				(MF ich ja)
				(VC vorschlagen)
				(NF
					(SIMPX
						(VF es)
						(LK gibt)
						(MF
							(NX fluge)
							(ADJX
								[01;31m(NF[00m
									(ADVX schon)
									(PX ab sechs uhr morgens)[01;31m)[00m))
						(NF das wir wirklich um sechs uhr losfliegen))))
			[01;31m(SIMPX[00m
				(VF dann)
				(LK sind)
				(MF
					(NX wir)
					(ADJX
						(PX in zwei stunden)
						[01;31m(ADVX[00m
							(ADV spater)[01;31m)[00m))[01;31m)[00m
			(DM also)
			(SIMPX sind wir um acht in hannover))
		(SU
			(SIMPX
				(C bis)
				(FKOORD [01;33m(MF[00m
					[01;31m(MF[00m
						(NX
							(PPER wir))[01;31m)[00m
					[01;31m(SIMPX[00m
						[01;31m(VF[00m
							(ADVX
								(ADV dann))[01;31m)[00m [01;33mMF)[00m
						(FKOORD
							[01;31m(LKM[00m
								(LK trinken)
								[01;33m(FKOORD[00m (MF wir noch einen kaffee)[01;31m)[00m
							(KON und)
							(LKMVCN konnen dann gleich zu unsrer filiale fahren und dort anfangen zu arbeiten))[01;31m)[00m))))) [01;33mFKOORD)[00m
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['NX', 'VF'], 'mover info': [('VF', (38, 39))], 'old_family': ['VF', 'FKOORD'], 'start left siblings': [], 'auto preterminals': ('PPER', 'ADV', 'VVFIN', 'PPER', 'ADV', 'ART', 'NN', 'KON', 'VMFIN', 'ADV', 'ADV', 'APPR', 'PPOSAT', 'NN', 'VVINF', 'KON', 'ADV', 'VVINF', 'PTKZU', 'VVINF'), 'start right siblings': ['FKOORD'], 'end left siblings': ['NX'], 'auto preterminal span': (37, 57), 'movers': ['VF'], 'old_parent': 'SIMPX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU ja)
		(SU
			(DM ja)
			(SIMPX
				(VF dann)
				(LK wurde)
				(MF ich ja)
				(VC vorschlagen)
				(NF
					(SIMPX
						(VF es)
						(LK gibt)
						(MF
							(NX fluge)
							(ADJX
								[01;31m(NF[00m
									(ADVX schon)
									(PX ab sechs uhr morgens)[01;31m)[00m))
						(NF das wir wirklich um sechs uhr losfliegen))))
			[01;31m(SIMPX[00m
				(VF dann)
				(LK sind)
				(MF
					(NX wir)
					(ADJX
						(PX in zwei stunden)
						[01;31m(ADVX[00m
							(ADV spater)[01;31m)[00m))[01;31m)[00m
			(DM also)
			(SIMPX sind wir um acht in hannover))
		(SU
			(SIMPX
				(C bis)
				(FKOORD
					(MF
						(NX wir)
						[01;31m(VF[00m
							(ADVX
								(ADV dann))[01;31m)[00m)
					[01;31m(SIMPX[00m
						(FKOORD
							[01;31m(LKM[00m
								(LK trinken)
								[01;33m(FKOORD[00m (MF wir noch einen kaffee)[01;31m)[00m
							(KON und)
							(LKMVCN konnen dann gleich zu unsrer filiale fahren und dort anfangen zu arbeiten))[01;31m)[00m))))) [01;33mFKOORD)[00m
Step:Unary
{'subtrees': ['ADVX', 'PX'], 'family': ['NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'APPR', 'CARD', 'NN', 'ADV'), 'right siblings': [], 'parent': 'ADJX', 'auto preterminal span': (10, 15), 'span': (10, 15), 'left siblings': [], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU ja)
		(SU
			(DM ja)
			(SIMPX dann wurde ich ja vorschlagen es gibt fluge schon ab sechs uhr morgens das wir wirklich um sechs uhr losfliegen)
			[01;31m(SIMPX[00m
				(VF dann)
				(LK sind)
				(MF
					(NX wir)
					(ADJX
						(PX in zwei stunden)
						[01;31m(ADVX[00m
							(ADV spater)[01;31m)[00m))[01;31m)[00m
			(DM also)
			(SIMPX sind wir um acht in hannover))
		(SU
			(SIMPX
				(C bis)
				(FKOORD
					(MF
						(NX wir)
						[01;31m(VF[00m
							(ADVX
								(ADV dann))[01;31m)[00m)
					[01;31m(SIMPX[00m
						(FKOORD
							[01;31m(LKM[00m
								(LK trinken)
								[01;33m(FKOORD[00m (MF wir noch einen kaffee)[01;31m)[00m
							(KON und)
							(LKMVCN konnen dann gleich zu unsrer filiale fahren und dort anfangen zu arbeiten))[01;31m)[00m))))) [01;33mFKOORD)[00m
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['DM', 'SIMPX', 'SIMPX', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADV', 'VAFIN', 'PPER', 'ADV', 'VVINF', 'PPER', 'VVFIN', 'NN', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'KOUS', 'PPER', 'ADV', 'APPR', 'CARD', 'NN', 'VVFIN', 'ADV', 'VAFIN', 'PPER', 'APPR', 'CARD', 'NN', 'ADV', 'ADV', 'VAFIN', 'PPER', 'APPR', 'CARD', 'APPR', 'NE'), 'right siblings': ['DM', 'SIMPX'], 'parent': 'SU', 'auto preterminal span': (1, 36), 'span': (22, 29), 'left siblings': ['DM', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU ja)
		(SU
			(DM ja)
			(SIMPX dann wurde ich ja vorschlagen es gibt fluge schon ab sechs uhr morgens das wir wirklich um sechs uhr losfliegen)
			(VF dann)
			(LK sind)
			(MF
				(NX wir)
				(ADJX
					(PX in zwei stunden)
					[01;31m(ADVX[00m
						(ADV spater)[01;31m)[00m))
			(DM also)
			(SIMPX sind wir um acht in hannover))
		(SU
			(SIMPX
				(C bis)
				(FKOORD
					(MF
						(NX wir)
						[01;31m(VF[00m
							(ADVX
								(ADV dann))[01;31m)[00m)
					[01;31m(SIMPX[00m
						(FKOORD
							[01;31m(LKM[00m
								(LK trinken)
								[01;33m(FKOORD[00m (MF wir noch einen kaffee)[01;31m)[00m
							(KON und)
							(LKMVCN konnen dann gleich zu unsrer filiale fahren und dort anfangen zu arbeiten))[01;31m)[00m))))) [01;33mFKOORD)[00m
Step:Single Word Phrase
{'subtrees': ['ADV'], 'family': ['PX', 'ADVX'], 'over_word': True, 'over words': True, 'auto preterminals': ('APPR', 'CARD', 'NN', 'ADV'), 'right siblings': [], 'parent': 'ADJX', 'auto preterminal span': (25, 29), 'span': (28, 29), 'left siblings': ['PX'], 'label': 'ADVX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(SU ja)
		(SU ja dann wurde ich ja vorschlagen es gibt fluge schon ab sechs uhr morgens das wir wirklich um sechs uhr losfliegen dann sind wir in zwei stunden spater also sind wir um acht in hannover)
		(SU
			(SIMPX
				(C bis)
				(FKOORD
					(MF
						(NX wir)
						[01;31m(VF[00m
							(ADVX
								(ADV dann))[01;31m)[00m)
					[01;31m(SIMPX[00m
						(FKOORD
							[01;31m(LKM[00m
								(LK trinken)
								[01;33m(FKOORD[00m (MF wir noch einen kaffee)[01;31m)[00m
							(KON und)
							(LKMVCN konnen dann gleich zu unsrer filiale fahren und dort anfangen zu arbeiten))[01;31m)[00m))))) [01;33mFKOORD)[00m
Step:Unary
{'subtrees': ['ADVX'], 'family': ['NX', 'VF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (37, 39), 'span': (38, 39), 'left siblings': ['NX'], 'label': 'VF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU ja)
		(SU ja dann wurde ich ja vorschlagen es gibt fluge schon ab sechs uhr morgens das wir wirklich um sechs uhr losfliegen dann sind wir in zwei stunden spater also sind wir um acht in hannover)
		(SU
			(SIMPX
				(C bis)
				(FKOORD
					(MF wir dann)
					[01;31m(SIMPX[00m
						(FKOORD
							[01;31m(LKM[00m
								(LK trinken)
								[01;33m(FKOORD[00m (MF wir noch einen kaffee)[01;31m)[00m
							(KON und)
							(LKMVCN konnen dann gleich zu unsrer filiale fahren und dort anfangen zu arbeiten))[01;31m)[00m))))) [01;33mFKOORD)[00m
Step:Co-ordination
{'subtrees': ['LK', 'MF'], 'family': ['LKM', 'KON', 'LKMVCN'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'ADV', 'ART', 'NN', 'KON', 'VMFIN', 'ADV', 'ADV', 'APPR', 'PPOSAT', 'NN', 'VVINF', 'KON', 'ADV', 'VVINF', 'PTKZU', 'VVINF'), 'right siblings': ['KON', 'LKMVCN'], 'parent': 'FKOORD', 'auto preterminal span': (39, 57), 'span': (39, 44), 'left siblings': [], 'label': 'LKM', 'classified_type': 'Co-ordination', 'type': 'remove'}
(TOP
	(TURN
		(SU ja)
		(SU ja dann wurde ich ja vorschlagen es gibt fluge schon ab sechs uhr morgens das wir wirklich um sechs uhr losfliegen dann sind wir in zwei stunden spater also sind wir um acht in hannover)
		(SU
			(SIMPX
				(C bis)
				(FKOORD
					(MF wir dann)
					[01;31m(SIMPX[00m
						(FKOORD
							(LK trinken)
							[01;36m(FKOORD[00m
								(MF wir noch einen kaffee)
								(KON und)
								(LKMVCN konnen dann gleich zu unsrer filiale fahren und dort anfangen zu arbeiten)[01;36m)[00m)[01;31m)[00m)))))
Step:UNSET add
{'subtrees': ['MF', 'KON', 'LKMVCN'], 'family': ['LK', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV', 'ART', 'NN', 'KON', 'VMFIN', 'ADV', 'ADV', 'APPR', 'PPOSAT', 'NN', 'VVINF', 'KON', 'ADV', 'VVINF', 'PTKZU', 'VVINF'), 'right siblings': [], 'left siblings': [(LK (VXFIN (VVFIN trinken)))], 'auto preterminal span': (40, 57), 'span': (40, 57), 'parent': 'FKOORD', 'label': 'FKOORD', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU ja)
		(SU ja dann wurde ich ja vorschlagen es gibt fluge schon ab sechs uhr morgens das wir wirklich um sechs uhr losfliegen dann sind wir in zwei stunden spater also sind wir um acht in hannover)
		(SU
			(SIMPX
				(C bis)
				(FKOORD
					(MF wir dann)
					[01;31m(SIMPX[00m
						(FKOORD
							(LK trinken)
							(FKOORD wir noch einen kaffee und konnen dann gleich zu unsrer filiale fahren und dort anfangen zu arbeiten))[01;31m)[00m)))))
Step:Unary
{'subtrees': ['FKOORD'], 'family': ['MF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV', 'VVFIN', 'PPER', 'ADV', 'ART', 'NN', 'KON', 'VMFIN', 'ADV', 'ADV', 'APPR', 'PPOSAT', 'NN', 'VVINF', 'KON', 'ADV', 'VVINF', 'PTKZU', 'VVINF'), 'right siblings': [], 'parent': 'FKOORD', 'auto preterminal span': (37, 57), 'span': (39, 57), 'left siblings': ['MF'], 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja ja dann wurde ich ja vorschlagen es gibt fluge schon ab sechs uhr morgens das wir wirklich um sechs uhr losfliegen dann sind wir in zwei stunden spater also sind wir um acht in hannover bis wir dann trinken wir noch einen kaffee und konnen dann gleich zu unsrer filiale fahren und dort anfangen zu arbeiten)

Sentence 405:
9 Initial errors
0 on fringe, 7 iterations
2 Error:Different label
2 Error:Clause Attachment
1 Error:UNSET add
1 Error:UNSET remove
1 Error:Unary
1 Error:Unary
1 Error:Clause Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM also)
			[01;36m(SIMPX[00m
				[01;31m(SIMPX[00m
					(VF ich)
					(LK wurde)
					(MF ganz gerne)[01;31m)[00m
				[01;31m(SIMPX[00m
					(C wenn)
					[01;31m(MF[00m
						(PX
							(APPR nach)
							(NX so einem harten arbeitstag))[01;31m)[00m[01;31m)[00m[01;36m)[00m
			[01;31m(SIMPX[00m
				[01;31m(LV[00m
					(SIMPX
						(C wenn)
						(MF es da eine sauna)
						(VC gabe))[01;31m)[00m
				[01;36m(SIMPX[00m
					(VF ich)
					(LK wurde)
					(MF ganz gern in die sauna)
					(VC gehen)[01;36m)[00m
				[01;36m(MF[00m [01;31m(NF[00m
					(ADVX dann)
					(ADVX kurz)[01;31m)[00m[01;36m)[00m[01;31m)[00m)
		(SU das ich mich ein bischen erholen kann)))
Step:Different label
{'family': ['LV', 'VF', 'LK', 'MF', 'VC', 'MF'], 'auto preterminal span': (25, 27), 'span': (25, 27), 'subtrees': ['ADVX', 'ADVX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('ADV', 'ADV'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('NF', 'MF')}
(TOP
	(TURN
		(SU
			(DM also)
			[01;36m(SIMPX[00m
				[01;31m(SIMPX[00m
					(VF ich)
					(LK wurde)
					(MF ganz gerne)[01;31m)[00m
				[01;31m(SIMPX[00m
					(C wenn)
					[01;31m(MF[00m
						(PX
							(APPR nach)
							(NX so einem harten arbeitstag))[01;31m)[00m[01;31m)[00m[01;36m)[00m
			[01;31m(SIMPX[00m
				[01;31m(LV[00m
					(SIMPX
						(C wenn)
						(MF es da eine sauna)
						(VC gabe))[01;31m)[00m
				[01;36m(SIMPX[00m
					(VF ich)
					(LK wurde)
					(MF ganz gern in die sauna)
					(VC gehen)[01;36m)[00m
				(MF dann kurz)[01;31m)[00m)
		(SU das ich mich ein bischen erholen kann)))
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['SIMPX', 'C', 'MF'], 'mover info': [('SIMPX', (1, 5))], 'old_family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'start left siblings': ['DM'], 'auto preterminals': ('ADV', 'PPER', 'VAFIN', 'ADV', 'ADV', 'KOUS', 'APPR', 'ADV', 'ART', 'ADJA', 'NN', 'KOUS', 'PPER', 'ADV', 'ART', 'NN', 'VVFIN', 'PPER', 'VAFIN', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'VVINF', 'ADV', 'ADV'), 'start right siblings': ['SIMPX', 'SIMPX'], 'end left siblings': [], 'auto preterminal span': (0, 27), 'movers': ['SIMPX'], 'old_parent': 'SU', 'end right siblings': ['C', 'MF'], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU
			(DM also)
			(SIMPX
				[01;31m(SIMPX[00m
					(VF ich)
					(LK wurde)
					(MF ganz gerne)[01;31m)[00m
				(C wenn)
				[01;31m(MF[00m
					(PX
						(APPR nach)
						(NX so einem harten arbeitstag))[01;31m)[00m)
			[01;31m(SIMPX[00m
				[01;31m(LV[00m
					(SIMPX
						(C wenn)
						(MF es da eine sauna)
						(VC gabe))[01;31m)[00m
				[01;36m(SIMPX[00m
					(VF ich)
					(LK wurde)
					(MF ganz gern in die sauna)
					(VC gehen)[01;36m)[00m
				(MF dann kurz)[01;31m)[00m)
		(SU das ich mich ein bischen erholen kann)))
Step:UNSET add
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['LV', 'SIMPX', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'VVINF'), 'right siblings': [(MF (ADVX (ADV dann)) (ADVX (ADV kurz)))], 'left siblings': [(LV (SIMPX (C (KOUS wenn)) (MF (NX (PPER es)) (ADVX (ADV da)) (NX (ART eine) (NN sauna))) (VC (VXFIN (VVFIN gabe)))))], 'auto preterminal span': (17, 25), 'span': (17, 25), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM also)
			(SIMPX
				[01;31m(SIMPX[00m
					(VF ich)
					(LK wurde)
					(MF ganz gerne)[01;31m)[00m
				(C wenn)
				[01;31m(MF[00m
					(PX
						(APPR nach)
						(NX so einem harten arbeitstag))[01;31m)[00m)
			[01;31m(SIMPX[00m
				[01;31m(LV[00m
					(SIMPX
						(C wenn)
						(MF es da eine sauna)
						(VC gabe))[01;31m)[00m
				(SIMPX ich wurde ganz gern in die sauna gehen)
				(MF dann kurz)[01;31m)[00m)
		(SU das ich mich ein bischen erholen kann)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['SIMPX', 'C', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'ADV', 'ADV', 'KOUS', 'APPR', 'ADV', 'ART', 'ADJA', 'NN'), 'right siblings': ['C', 'MF'], 'parent': 'SIMPX', 'auto preterminal span': (1, 11), 'span': (1, 5), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM also)
			(SIMPX
				(VF ich)
				(LK wurde)
				(MF ganz gerne)
				(C wenn)
				[01;31m(MF[00m
					(PX
						(APPR nach)
						(NX so einem harten arbeitstag))[01;31m)[00m)
			[01;31m(SIMPX[00m
				[01;31m(LV[00m
					(SIMPX
						(C wenn)
						(MF es da eine sauna)
						(VC gabe))[01;31m)[00m
				(SIMPX ich wurde ganz gern in die sauna gehen)
				(MF dann kurz)[01;31m)[00m)
		(SU das ich mich ein bischen erholen kann)))
Step:Unary
{'subtrees': ['PX'], 'family': ['VF', 'LK', 'MF', 'C', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'ADV', 'ADV', 'KOUS', 'APPR', 'ADV', 'ART', 'ADJA', 'NN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (1, 11), 'span': (6, 11), 'left siblings': ['VF', 'LK', 'MF', 'C'], 'label': 'MF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM also)
			(SIMPX ich wurde ganz gerne wenn nach so einem harten arbeitstag)
			[01;31m(SIMPX[00m
				[01;31m(LV[00m
					(SIMPX
						(C wenn)
						(MF es da eine sauna)
						(VC gabe))[01;31m)[00m
				(SIMPX ich wurde ganz gern in die sauna gehen)
				(MF dann kurz)[01;31m)[00m)
		(SU das ich mich ein bischen erholen kann)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['LV', 'SIMPX', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'ART', 'NN', 'VVFIN', 'PPER', 'VAFIN', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'VVINF', 'ADV', 'ADV'), 'right siblings': ['SIMPX', 'MF'], 'parent': 'SIMPX', 'auto preterminal span': (11, 27), 'span': (11, 17), 'left siblings': [], 'label': 'LV', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM also)
			(SIMPX ich wurde ganz gerne wenn nach so einem harten arbeitstag)
			[01;31m(SIMPX[00m
				(SIMPX wenn es da eine sauna gabe)
				(SIMPX ich wurde ganz gern in die sauna gehen)
				(MF dann kurz)[01;31m)[00m)
		(SU das ich mich ein bischen erholen kann)))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX', 'MF'], 'family': ['DM', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPER', 'VAFIN', 'ADV', 'ADV', 'KOUS', 'APPR', 'ADV', 'ART', 'ADJA', 'NN', 'KOUS', 'PPER', 'ADV', 'ART', 'NN', 'VVFIN', 'PPER', 'VAFIN', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'VVINF', 'ADV', 'ADV'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (0, 27), 'span': (11, 27), 'left siblings': ['DM', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP also ich wurde ganz gerne wenn nach so einem harten arbeitstag wenn es da eine sauna gabe ich wurde ganz gern in die sauna gehen dann kurz das ich mich ein bischen erholen kann)

Sentence 406:
11 Initial errors
0 on fringe, 10 iterations
2 Error:Different label
1 Error:Unary
1 Error:Unary
1 Error:Clause Attachment
1 Error:UNSET remove
1 Error:UNSET add
1 Error:Modifier Attachment
1 Error:Modifier Attachment
1 Error:Single Word Phrase
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU na ja gut)
		(SU
			[01;31m(SIMPX[00m
				(KOORD aber)
				[01;31m(VF[00m
					[01;31m(PX[00m
						(PX dafur)
						[01;31m(SIMPX[00m
							(C das)
							[01;31m(MF[00m
								(NX wir)
								(NX die woche)
								(ADVX dann)
								[01;33m(ADVX[00m (ADVX so)[01;31m)[00m
							[01;31m(VC[00m
								[01;31m(VXFIN[00m
									(VVFIN vollpacken)[01;31m)[00m[01;31m)[00m [01;33mADVX)[00m
							[01;36m(VF[00m [01;31m(NF[00m [01;33m(SIMPX[00m
								(PX
									(APPR mit)
									(NX terminen))[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
				(LK ware)
				(MF das sicherlich okay)[01;31m)[00m))) [01;33mSIMPX)[00m
Step:Different label
{'family': ['C', 'MF', 'VC', 'VF'], 'auto preterminal span': (12, 14), 'span': (12, 14), 'subtrees': ['PX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('APPR', 'NN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('NF', 'VF')}
(TOP
	(TURN
		(SU na ja gut)
		(SU
			[01;31m(SIMPX[00m
				(KOORD aber)
				[01;31m(VF[00m
					[01;31m(PX[00m
						(PX dafur)
						[01;31m(SIMPX[00m
							(C das)
							[01;31m(MF[00m
								(NX wir)
								(NX die woche)
								(ADVX dann)
								[01;33m(ADVX[00m (ADVX so)[01;31m)[00m
							[01;31m(VC[00m
								[01;31m(VXFIN[00m
									(VVFIN vollpacken)[01;31m)[00m[01;31m)[00m [01;33mADVX)[00m
							[01;33m(SIMPX[00m (VF mit terminen)[01;31m)[00m[01;31m)[00m[01;31m)[00m
				(LK ware)
				(MF das sicherlich okay)[01;31m)[00m))) [01;33mSIMPX)[00m
Step:Unary
{'subtrees': ['KOORD', 'VF', 'LK', 'MF'], 'family': ['SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'PROP', 'KOUS', 'PPER', 'ART', 'NN', 'ADV', 'ADV', 'VVFIN', 'APPR', 'NN', 'VAFIN', 'PDS', 'ADV', 'ADJD'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (3, 18), 'span': (3, 18), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU na ja gut)
		(SU
			(KOORD aber)
			[01;31m(VF[00m
				[01;31m(PX[00m
					(PX dafur)
					[01;31m(SIMPX[00m
						(C das)
						[01;31m(MF[00m
							(NX wir)
							(NX die woche)
							(ADVX dann)
							[01;33m(ADVX[00m (ADVX so)[01;31m)[00m
						[01;31m(VC[00m
							[01;31m(VXFIN[00m
								(VVFIN vollpacken)[01;31m)[00m[01;31m)[00m [01;33mADVX)[00m
						[01;33m(SIMPX[00m (VF mit terminen)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			(LK ware)
			(MF das sicherlich okay)))) [01;33mSIMPX)[00m
Step:Unary
{'subtrees': ['PX'], 'family': ['KOORD', 'VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'PROP', 'KOUS', 'PPER', 'ART', 'NN', 'ADV', 'ADV', 'VVFIN', 'APPR', 'NN', 'VAFIN', 'PDS', 'ADV', 'ADJD'), 'right siblings': ['LK', 'MF'], 'parent': 'SU', 'auto preterminal span': (3, 18), 'span': (4, 14), 'left siblings': ['KOORD'], 'label': 'VF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU na ja gut)
		(SU
			(KOORD aber)
			[01;31m(PX[00m
				(PX dafur)
				[01;31m(SIMPX[00m
					(C das)
					[01;31m(MF[00m
						(NX wir)
						(NX die woche)
						(ADVX dann)
						[01;33m(ADVX[00m (ADVX so)[01;31m)[00m
					[01;31m(VC[00m
						[01;31m(VXFIN[00m
							(VVFIN vollpacken)[01;31m)[00m[01;31m)[00m [01;33mADVX)[00m
					[01;33m(SIMPX[00m (VF mit terminen)[01;31m)[00m[01;31m)[00m
			(LK ware)
			(MF das sicherlich okay)))) [01;33mSIMPX)[00m
Step:Clause Attachment
{'subtrees': ['PX', 'SIMPX'], 'family': ['KOORD', 'PX', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'PROP', 'KOUS', 'PPER', 'ART', 'NN', 'ADV', 'ADV', 'VVFIN', 'APPR', 'NN', 'VAFIN', 'PDS', 'ADV', 'ADJD'), 'right siblings': ['LK', 'MF'], 'parent': 'SU', 'auto preterminal span': (3, 18), 'span': (4, 14), 'left siblings': ['KOORD'], 'label': 'PX', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU na ja gut)
		(SU
			(KOORD aber)
			(PX dafur)
			[01;31m(SIMPX[00m
				(C das)
				[01;31m(MF[00m
					(NX wir)
					(NX die woche)
					(ADVX dann)
					[01;33m(ADVX[00m (ADVX so)[01;31m)[00m
				[01;31m(VC[00m
					[01;31m(VXFIN[00m
						(VVFIN vollpacken)[01;31m)[00m[01;31m)[00m [01;33mADVX)[00m
				[01;33m(SIMPX[00m (VF mit terminen)[01;31m)[00m
			(LK ware)
			(MF das sicherlich okay)))) [01;33mSIMPX)[00m
Step:UNSET remove
{'subtrees': ['C', 'MF', 'VC', 'VF'], 'family': ['KOORD', 'PX', 'SIMPX', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'PROP', 'KOUS', 'PPER', 'ART', 'NN', 'ADV', 'ADV', 'VVFIN', 'APPR', 'NN', 'VAFIN', 'PDS', 'ADV', 'ADJD'), 'right siblings': ['LK', 'MF'], 'parent': 'SU', 'auto preterminal span': (3, 18), 'span': (5, 14), 'left siblings': ['KOORD', 'PX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU na ja gut)
		(SU
			(KOORD aber)
			(PX dafur)
			(C das)
			[01;31m(MF[00m
				(NX wir)
				(NX die woche)
				(ADVX dann)
				[01;33m(ADVX[00m (ADVX so)[01;31m)[00m
			[01;31m(VC[00m
				[01;31m(VXFIN[00m
					(VVFIN vollpacken)[01;31m)[00m[01;31m)[00m [01;33mADVX)[00m
			[01;36m(SIMPX[00m
				(VF mit terminen)
				(LK ware)
				(MF das sicherlich okay)[01;36m)[00m)))
Step:UNSET add
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['KOORD', 'PX', 'C', 'MF', 'VC', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'NN', 'VAFIN', 'PDS', 'ADV', 'ADJD'), 'right siblings': [], 'left siblings': [(KOORD (KON aber)), (PX (PROP dafur)), (C (KOUS das)), (MF (NX (PPER wir)) (NX (ART die) (NN woche)) (ADVX (ADV dann)) (ADVX (ADV so))), (VC (VXFIN (VVFIN vollpacken)))], 'auto preterminal span': (12, 18), 'span': (12, 18), 'parent': 'SU', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU na ja gut)
		(SU
			(KOORD aber)
			(PX dafur)
			(C das)
			[01;31m(MF[00m
				(NX wir)
				(NX die woche)
				(ADVX dann)
				[01;33m(ADVX[00m (ADVX so)[01;31m)[00m
			[01;31m(VC[00m
				[01;31m(VXFIN[00m
					(VVFIN vollpacken)[01;31m)[00m[01;31m)[00m [01;33mADVX)[00m
			(SIMPX mit terminen ware das sicherlich okay))))
Step:Modifier Attachment
{'subtrees': ['NX', 'NX', 'ADVX', 'ADVX'], 'family': ['KOORD', 'PX', 'C', 'MF', 'VC', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'PROP', 'KOUS', 'PPER', 'ART', 'NN', 'ADV', 'ADV', 'VVFIN', 'APPR', 'NN', 'VAFIN', 'PDS', 'ADV', 'ADJD'), 'right siblings': ['VC', 'SIMPX'], 'parent': 'SU', 'auto preterminal span': (3, 18), 'span': (6, 11), 'left siblings': ['KOORD', 'PX', 'C'], 'label': 'MF', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU na ja gut)
		(SU
			(KOORD aber)
			(PX dafur)
			(C das)
			(NX wir)
			(NX die woche)
			(ADVX dann)
			[01;36m(ADVX[00m
				(ADVX so)
				[01;31m(VC[00m
					[01;31m(VXFIN[00m
						(VVFIN vollpacken)[01;31m)[00m[01;31m)[00m[01;36m)[00m
			(SIMPX mit terminen ware das sicherlich okay))))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'VC'], 'family': ['KOORD', 'PX', 'C', 'NX', 'NX', 'ADVX', 'ADVX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN'), 'right siblings': [(SIMPX (VF (PX (APPR mit) (NX (NN terminen)))) (LK (VXFIN (VAFIN ware))) (MF (NX (PDS das)) (ADVX (ADV sicherlich)) (ADJX (ADJD okay))))], 'left siblings': [(KOORD (KON aber)), (PX (PROP dafur)), (C (KOUS das)), (NX (PPER wir)), (NX (ART die) (NN woche)), (ADVX (ADV dann))], 'auto preterminal span': (10, 12), 'span': (10, 12), 'parent': 'SU', 'label': 'ADVX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU na ja gut)
		(SU
			(KOORD aber)
			(PX dafur)
			(C das)
			(NX wir)
			(NX die woche)
			(ADVX dann)
			(ADVX
				(ADVX so)
				[01;31m(VC[00m
					[01;31m(VXFIN[00m
						(VVFIN vollpacken)[01;31m)[00m[01;31m)[00m)
			(SIMPX mit terminen ware das sicherlich okay))))
Step:Single Word Phrase
{'subtrees': ['VVFIN'], 'family': ['VXFIN'], 'over_word': True, 'over words': True, 'auto preterminals': ('VVFIN',), 'right siblings': [], 'parent': 'VC', 'auto preterminal span': (11, 12), 'span': (11, 12), 'left siblings': [], 'label': 'VXFIN', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(SU na ja gut)
		(SU
			(KOORD aber)
			(PX dafur)
			(C das)
			(NX wir)
			(NX die woche)
			(ADVX dann)
			(ADVX
				(ADVX so)
				[01;31m(VC[00m
					(VVFIN vollpacken)[01;31m)[00m)
			(SIMPX mit terminen ware das sicherlich okay))))
Step:Single Word Phrase
{'subtrees': ['VVFIN'], 'family': ['ADVX', 'VC'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADV', 'VVFIN'), 'right siblings': [], 'parent': 'ADVX', 'auto preterminal span': (10, 12), 'span': (11, 12), 'left siblings': ['ADVX'], 'label': 'VC', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP na ja gut aber dafur das wir die woche dann so vollpacken mit terminen ware das sicherlich okay)

Sentence 407:
4 Initial errors
0 on fringe, 2 iterations
3 Error:UNSET move
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM ja)
			[01;36m(SIMPX[00m
				(SIMPX ich kummere mich um die fluge)
				[01;31m(SIMPX[00m
					[01;31m(KOORD[00m
						(KON und)[01;31m)[00m
					[01;36m(SIMPX[00m
						(VF wir)
						(LK checken)
						(MF mal)
						(NF ob wir dienstag abend oder mittwoch morgen nach berlin fliegen konnen)[01;36m)[00m[01;31m)[00m[01;36m)[00m
			(SIMPX und ich gebe ihnen dann noch bescheid))
		(SU ware ihnen beides recht)))
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['DM', 'SIMPX', 'KOORD', 'SIMPX', 'SIMPX'], 'mover info': [('KOORD', (7, 8))], 'old_family': ['KOORD', 'VF', 'LK', 'MF', 'NF'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'PPER', 'VVFIN', 'PRF', 'APPR', 'ART', 'NN', 'KON', 'PPER', 'VVFIN', 'ADV', 'KOUS', 'PPER', 'NN', 'ADV', 'KON', 'NN', 'ADV', 'APPR', 'NE', 'VVINF', 'VMFIN', 'KON', 'PPER', 'VVFIN', 'PPER', 'ADV', 'ADV', 'NN'), 'start right siblings': ['VF', 'LK', 'MF', 'NF'], 'end left siblings': ['DM', 'SIMPX'], 'auto preterminal span': (0, 29), 'adding node already present': False, 'movers': ['KOORD'], 'old_parent': 'SIMPX', 'POS confusion': ('KON', 'KON'), 'added and moved': True, 'end right siblings': ['SIMPX', 'SIMPX'], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'SIMPX'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX
				(SIMPX ich kummere mich um die fluge)
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				(SIMPX wir checken mal ob wir dienstag abend oder mittwoch morgen nach berlin fliegen konnen))
			(SIMPX und ich gebe ihnen dann noch bescheid))
		(SU ware ihnen beides recht)))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['SIMPX', 'KOORD', 'SIMPX'], 'over_word': True, 'over words': True, 'auto preterminals': ('PPER', 'VVFIN', 'PRF', 'APPR', 'ART', 'NN', 'KON', 'PPER', 'VVFIN', 'ADV', 'KOUS', 'PPER', 'NN', 'ADV', 'KON', 'NN', 'ADV', 'APPR', 'NE', 'VVINF', 'VMFIN'), 'right siblings': ['SIMPX'], 'parent': 'SIMPX', 'auto preterminal span': (1, 22), 'span': (7, 8), 'left siblings': ['SIMPX'], 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP ja ich kummere mich um die fluge und wir checken mal ob wir dienstag abend oder mittwoch morgen nach berlin fliegen konnen und ich gebe ihnen dann noch bescheid ware ihnen beides recht)

Sentence 408:
0 Initial errors
0 on fringe, 0 iterations

Sentence 409:
6 Initial errors
0 on fringe, 6 iterations
1 Error:UNSET add
1 Error:UNSET remove
1 Error:UNSET add
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM also)
			[01;31m(SIMPX[00m
				(VF ich)
				(LK hatte)
				(MF grose lust)
				[01;33m(SIMPX (NF[00m (NF ins theater zu gehen)[01;31m)[00m
			(NX aber nicht so was ganz schweres)) [01;33mNF) SIMPX)[00m
		(SU
			(DM also)
			[01;31m(SIMPX[00m
				(VF ich)
				(LK weis)
				(MF zufallig)
				(NF
					(SIMPX
						(C das)
						(MF
							[01;36m(PX[00m
								(PX im letzten monat)
								(NX woyzek)[01;36m)[00m
							(ADVX da))
						(VC gegeben wurde)))[01;31m)[00m
			[01;31m(SIMPX[00m
				(VF das)
				(LK ware)
				(MF mir ein bischen zu anstrengend)[01;31m)[00m)
		(SU vielleicht finden wir so was in richtung musical oder variete)))
Step:UNSET add
{'subtrees': ['PX', 'NX'], 'family': ['PX', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'ADJA', 'NN', 'NE'), 'right siblings': [(ADVX (ADV da))], 'left siblings': [], 'auto preterminal span': (20, 24), 'span': (20, 24), 'parent': 'MF', 'label': 'PX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM also)
			[01;31m(SIMPX[00m
				(VF ich)
				(LK hatte)
				(MF grose lust)
				[01;33m(SIMPX (NF[00m (NF ins theater zu gehen)[01;31m)[00m
			(NX aber nicht so was ganz schweres)) [01;33mNF) SIMPX)[00m
		(SU
			(DM also)
			[01;31m(SIMPX[00m
				(VF ich)
				(LK weis)
				(MF zufallig)
				(NF das im letzten monat woyzek da gegeben wurde)[01;31m)[00m
			[01;31m(SIMPX[00m
				(VF das)
				(LK ware)
				(MF mir ein bischen zu anstrengend)[01;31m)[00m)
		(SU vielleicht finden wir so was in richtung musical oder variete)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'NF'], 'family': ['DM', 'SIMPX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPER', 'VAFIN', 'ADJA', 'NN', 'APPRART', 'NN', 'PTKZU', 'VVINF', 'ADV', 'PTKNEG', 'ADV', 'PIS', 'ADV', 'NN'), 'right siblings': ['NX'], 'parent': 'SU', 'auto preterminal span': (0, 15), 'span': (1, 9), 'left siblings': ['DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM also)
			(VF ich)
			(LK hatte)
			(MF grose lust)
			[01;36m(NF[00m
				[01;36m(SIMPX[00m
					(NF ins theater zu gehen)
					(NX aber nicht so was ganz schweres)[01;36m)[00m[01;36m)[00m)
		(SU
			(DM also)
			[01;31m(SIMPX[00m
				(VF ich)
				(LK weis)
				(MF zufallig)
				(NF das im letzten monat woyzek da gegeben wurde)[01;31m)[00m
			[01;31m(SIMPX[00m
				(VF das)
				(LK ware)
				(MF mir ein bischen zu anstrengend)[01;31m)[00m)
		(SU vielleicht finden wir so was in richtung musical oder variete)))
Step:UNSET add
{'subtrees': ['NF', 'NX'], 'family': ['DM', 'VF', 'LK', 'MF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'NN', 'PTKZU', 'VVINF', 'ADV', 'PTKNEG', 'ADV', 'PIS', 'ADV', 'NN'), 'right siblings': [], 'left siblings': [(DM (ADVX (ADV also))), (VF (NX (PPER ich))), (LK (VXFIN (VAFIN hatte))), (MF (NX (ADJX (ADJA grose)) (NN lust)))], 'auto preterminal span': (5, 15), 'span': (5, 15), 'parent': 'SU', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM also)
			(VF ich)
			(LK hatte)
			(MF grose lust)
			[01;36m(NF[00m
				(SIMPX
					(NF ins theater zu gehen)
					(NX aber nicht so was ganz schweres))[01;36m)[00m)
		(SU
			(DM also)
			[01;31m(SIMPX[00m
				(VF ich)
				(LK weis)
				(MF zufallig)
				(NF das im letzten monat woyzek da gegeben wurde)[01;31m)[00m
			[01;31m(SIMPX[00m
				(VF das)
				(LK ware)
				(MF mir ein bischen zu anstrengend)[01;31m)[00m)
		(SU vielleicht finden wir so was in richtung musical oder variete)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['DM', 'VF', 'LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'NN', 'PTKZU', 'VVINF', 'ADV', 'PTKNEG', 'ADV', 'PIS', 'ADV', 'NN'), 'right siblings': [], 'left siblings': [(DM (ADVX (ADV also))), (VF (NX (PPER ich))), (LK (VXFIN (VAFIN hatte))), (MF (NX (ADJX (ADJA grose)) (NN lust)))], 'auto preterminal span': (5, 15), 'span': (5, 15), 'parent': 'SU', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU also ich hatte grose lust ins theater zu gehen aber nicht so was ganz schweres)
		(SU
			(DM also)
			[01;31m(SIMPX[00m
				(VF ich)
				(LK weis)
				(MF zufallig)
				(NF das im letzten monat woyzek da gegeben wurde)[01;31m)[00m
			[01;31m(SIMPX[00m
				(VF das)
				(LK ware)
				(MF mir ein bischen zu anstrengend)[01;31m)[00m)
		(SU vielleicht finden wir so was in richtung musical oder variete)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'NF'], 'family': ['DM', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPER', 'VVFIN', 'ADV', 'KOUS', 'APPRART', 'ADJA', 'NN', 'NE', 'ADV', 'VVPP', 'VAFIN', 'PDS', 'VAFIN', 'PPER', 'ART', 'PIS', 'PTKA', 'ADJD'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (15, 34), 'span': (16, 27), 'left siblings': ['DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU also ich hatte grose lust ins theater zu gehen aber nicht so was ganz schweres)
		(SU
			(DM also)
			(VF ich)
			(LK weis)
			(MF zufallig)
			(NF das im letzten monat woyzek da gegeben wurde)
			[01;31m(SIMPX[00m
				(VF das)
				(LK ware)
				(MF mir ein bischen zu anstrengend)[01;31m)[00m)
		(SU vielleicht finden wir so was in richtung musical oder variete)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['DM', 'VF', 'LK', 'MF', 'NF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPER', 'VVFIN', 'ADV', 'KOUS', 'APPRART', 'ADJA', 'NN', 'NE', 'ADV', 'VVPP', 'VAFIN', 'PDS', 'VAFIN', 'PPER', 'ART', 'PIS', 'PTKA', 'ADJD'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (15, 34), 'span': (27, 34), 'left siblings': ['DM', 'VF', 'LK', 'MF', 'NF'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP also ich hatte grose lust ins theater zu gehen aber nicht so was ganz schweres also ich weis zufallig das im letzten monat woyzek da gegeben wurde das ware mir ein bischen zu anstrengend vielleicht finden wir so was in richtung musical oder variete)

Sentence 410:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Clause Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU ja)
		(SU
			(DM ja)
			[01;36m(SIMPX[00m
				(SIMPX wurde ich)
				(SIMPX wurde ich gut finden)[01;36m)[00m)))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'PPER', 'VAFIN', 'PPER', 'ADJD', 'VVINF'), 'right siblings': [], 'left siblings': [(DM (PTKANT ja))], 'auto preterminal span': (2, 8), 'span': (2, 8), 'parent': 'SU', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP ja ja wurde ich wurde ich gut finden)

Sentence 411:
6 Initial errors
0 on fringe, 3 iterations
3 Error:UNSET move
2 Error:Modifier Attachment
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU okay)
		[01;36m(SIMPX[00m
			(SU
				(SIMPX
					(VF ich)
					(LK setze)
					(MF
						(NX mich)
						(ADVX also)
						[01;31m(NX[00m
							(ADVX spatestens)
							[01;36m(NX[00m
								(NX mitte)
								(NX nachste woche)[01;36m)[00m[01;31m)[00m
						(PX mit ihnen)
						(PX in verbindung)))
				[01;31m(SIMPX[00m
					[01;31m(KOORD[00m
						(KON und)[01;31m)[00m
					[01;36m(SIMPX[00m
						(VF dann)
						(LK machen)
						(MF wir alles weitere so)
						(NF wie besprochen)[01;36m)[00m[01;31m)[00m)[01;36m)[00m))
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SIMPX', 'KOORD', 'SIMPX'], 'mover info': [('KOORD', (13, 14))], 'old_family': ['KOORD', 'VF', 'LK', 'MF', 'NF'], 'start left siblings': [], 'auto preterminals': ('PPER', 'VVFIN', 'PRF', 'ADV', 'ADV', 'NN', 'ADJA', 'NN', 'APPR', 'PPER', 'APPR', 'NN', 'KON', 'ADV', 'VVFIN', 'PPER', 'PIS', 'NN', 'ADV', 'KOUS', 'VVPP'), 'start right siblings': ['VF', 'LK', 'MF', 'NF'], 'end left siblings': ['SIMPX'], 'auto preterminal span': (1, 22), 'adding node already present': False, 'movers': ['KOORD'], 'old_parent': 'SIMPX', 'POS confusion': ('KON', 'KON'), 'added and moved': True, 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(SU okay)
		(SIMPX
			(SU
				(SIMPX
					(VF ich)
					(LK setze)
					(MF
						(NX mich)
						(ADVX also)
						[01;31m(NX[00m
							(ADVX spatestens)
							[01;36m(NX[00m
								(NX mitte)
								(NX nachste woche)[01;36m)[00m[01;31m)[00m
						(PX mit ihnen)
						(PX in verbindung)))
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				(SIMPX dann machen wir alles weitere so wie besprochen)))))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'ADVX', 'ADVX', 'NX', 'PX', 'PX'], 'mover info': [('ADVX', (5, 6))], 'old_family': ['ADVX', 'NX', 'NX'], 'start left siblings': [], 'auto preterminals': ('PRF', 'ADV', 'ADV', 'NN', 'ADJA', 'NN', 'APPR', 'PPER', 'APPR', 'NN'), 'start right siblings': ['NX', 'NX'], 'end left siblings': ['NX', 'ADVX'], 'auto preterminal span': (3, 13), 'movers': ['ADVX'], 'old_parent': 'NX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['NX', 'PX', 'PX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU okay)
		(SIMPX
			(SU
				(SIMPX ich setze mich also spatestens mitte nachste woche mit ihnen in verbindung)
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				(SIMPX dann machen wir alles weitere so wie besprochen)))))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['SIMPX', 'KOORD', 'SIMPX'], 'over_word': True, 'over words': True, 'auto preterminals': ('PPER', 'VVFIN', 'PRF', 'ADV', 'ADV', 'NN', 'ADJA', 'NN', 'APPR', 'PPER', 'APPR', 'NN', 'KON', 'ADV', 'VVFIN', 'PPER', 'PIS', 'NN', 'ADV', 'KOUS', 'VVPP'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (1, 22), 'span': (13, 14), 'left siblings': ['SIMPX'], 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP okay ich setze mich also spatestens mitte nachste woche mit ihnen in verbindung und dann machen wir alles weitere so wie besprochen)

Sentence 412:
0 Initial errors
0 on fringe, 0 iterations

Sentence 413:
0 Initial errors
0 on fringe, 0 iterations

Sentence 414:
5 Initial errors
0 on fringe, 3 iterations
2 Error:Single Word Phrase
2 Error:Clause Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM nein)
			(DM nein)
			(SIMPX
				(VF das)
				(LK past)
				[01;36m(ADJX[00m
					(MF
						[01;31m(ADVX[00m
							(ADV schon)[01;31m)[00m)[01;36m)[00m))
		[01;36m(SIMPX[00m
			(SU
				[01;31m(SIMPX[00m
					(LK wissen)
					(MF sie)[01;31m)[00m
				[01;36m(NF[00m
					(SIMPX
						(LK kommen)
						(MF sie doch lieber)
						(VC mit))[01;36m)[00m)[01;36m)[00m
		(SU unternehmen abends noch was)))
Step:Single Word Phrase
{'family': ['ADJX'], 'auto preterminal span': (4, 5), 'span': (4, 5), 'subtrees': ['ADV'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'ADJX')}
(TOP
	(TURN
		(SU nein nein das past schon)
		[01;36m(SIMPX[00m
			(SU
				[01;31m(SIMPX[00m
					(LK wissen)
					(MF sie)[01;31m)[00m
				[01;36m(NF[00m
					(SIMPX
						(LK kommen)
						(MF sie doch lieber)
						(VC mit))[01;36m)[00m)[01;36m)[00m
		(SU unternehmen abends noch was)))
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['LK', 'MF', 'SIMPX'], 'mover info': [('SIMPX', (7, 12))], 'old_family': ['SIMPX', 'SIMPX'], 'start left siblings': ['SIMPX'], 'auto preterminals': ('VVFIN', 'PPER', 'VVIMP', 'PPER', 'ADV', 'ADV', 'PTKVZ'), 'start right siblings': [], 'end left siblings': ['LK', 'MF'], 'auto preterminal span': (5, 12), 'movers': ['SIMPX'], 'old_parent': 'SU', 'end right siblings': [], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU nein nein das past schon)
		(SU
			(SIMPX
				(LK wissen)
				(MF sie)
				[01;36m(NF[00m
					(SIMPX
						(LK kommen)
						(MF sie doch lieber)
						(VC mit))[01;36m)[00m))
		(SU unternehmen abends noch was)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVIMP', 'PPER', 'ADV', 'ADV', 'PTKVZ'), 'right siblings': [], 'left siblings': [(LK (VXFIN (VVFIN wissen))), (MF (NX (PPER sie)))], 'auto preterminal span': (7, 12), 'span': (7, 12), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP nein nein das past schon wissen sie kommen sie doch lieber mit unternehmen abends noch was)

Sentence 415:
3 Initial errors
0 on fringe, 2 iterations
2 Error:Different label
1 Error:Co-ordination
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU ja das past mir sehr gut)
		[01;36m(SU[00m
			(SU also ich freue mich)
			[01;36m(NX[00m
				(SU
					[01;31m(PX[00m
						(APPR bis)
						(NX august)[01;31m)[00m)[01;36m)[00m[01;36m)[00m
		(SU auf wiedersehen herr doll)))
Step:Different label
{'family': ['NX'], 'auto preterminal span': (10, 12), 'span': (10, 12), 'subtrees': ['APPR', 'NX'], 'parent': 'SU', 'over_word': False, 'auto preterminals': ('APPR', 'NN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('PX', 'NX')}
(TOP
	(TURN
		(SU ja das past mir sehr gut)
		[01;36m(SU[00m
			(SU also ich freue mich)
			(SU bis august)[01;36m)[00m
		(SU auf wiedersehen herr doll)))
Step:Co-ordination
{'subtrees': ['SU', 'SU'], 'family': ['SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPER', 'VVFIN', 'PRF', 'APPR', 'NN'), 'right siblings': [(SU (DM (PX (APPR auf) (NX (NN wiedersehen)))) (DM (NX (NN herr) (NE doll))))], 'left siblings': [(SU (DM (PTKANT ja)) (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VVFIN past))) (MF (NX (PPER mir)) (ADJX (ADVX (ADV sehr)) (ADJD gut)))))], 'auto preterminal span': (6, 12), 'span': (6, 12), 'parent': 'TURN', 'label': 'SU', 'classified_type': 'Co-ordination', 'type': 'add'}
(TOP ja das past mir sehr gut also ich freue mich bis august auf wiedersehen herr doll)

Sentence 416:
0 Initial errors
0 on fringe, 0 iterations

Sentence 417:
8 Initial errors
0 on fringe, 5 iterations
3 Error:UNSET move
2 Error:UNSET move
1 Error:Modifier Attachment
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU aha ja schauen wir mal ob wir irgendeinen termin finden)
		(SU
			[01;31m(SIMPX[00m
				[01;36m(SIMPX[00m
					(VF dann)
					(LK ware)
					(MF es ja am besten)[01;36m)[00m
				[01;31m(NF[00m
					(SIMPX
						(VF wir)
						(LK nahmen)
						(MF das wochenende))[01;31m)[00m[01;31m)[00m)
		(SU
			(SIMPX
				(VF vielleicht)
				(LK konnen)
				[01;36m(MF[00m
					[01;31m(MF[00m
						(NX wir)
						(ADVX ja)
						(ADVX noch)
						[01;33m(NX (ADJX[00m (NX ein bischen)[01;31m)[00m
					(VC verlangern) [01;33mADJX)[00m
					[01;31m(NF[00m
						(NX
							(ADJX eineinhalb)
							(NN tage))[01;31m)[00m[01;36m)[00m)) [01;33mNX)[00m
		(SU nix)))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['NX', 'ADVX', 'ADVX', 'NX', 'VC', 'NF'], 'mover info': [('VC', (27, 28)), ('NF', (28, 30))], 'old_family': ['VF', 'LK', 'MF', 'VC', 'NF'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'VVINF', 'CARD', 'NN'), 'start right siblings': [], 'end left siblings': ['NX', 'ADVX', 'ADVX', 'NX'], 'auto preterminal span': (20, 30), 'adding node already present': False, 'movers': ['VC', 'NF'], 'old_parent': 'SIMPX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(SU aha ja schauen wir mal ob wir irgendeinen termin finden)
		(SU
			[01;31m(SIMPX[00m
				[01;36m(SIMPX[00m
					(VF dann)
					(LK ware)
					(MF es ja am besten)[01;36m)[00m
				[01;31m(NF[00m
					(SIMPX
						(VF wir)
						(LK nahmen)
						(MF das wochenende))[01;31m)[00m[01;31m)[00m)
		(SU
			(SIMPX
				(VF vielleicht)
				(LK konnen)
				(MF
					(NX wir)
					(ADVX ja)
					(ADVX noch)
					(NX
						[01;36m(ADJX[00m
							(NX ein bischen)
							(VC verlangern)[01;36m)[00m
						[01;31m(NF[00m
							(NX
								(ADJX eineinhalb)
								(NN tage))[01;31m)[00m))))
		(SU nix)))
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SIMPX', 'NF'], 'mover info': [('NF', (16, 20))], 'old_family': ['VF', 'LK', 'MF', 'NF'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'ADV', 'PTKA', 'ADJD', 'PPER', 'VVFIN', 'ART', 'NN'), 'start right siblings': [], 'end left siblings': ['SIMPX'], 'auto preterminal span': (10, 20), 'movers': ['NF'], 'old_parent': 'SIMPX', 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU aha ja schauen wir mal ob wir irgendeinen termin finden)
		(SU
			(SIMPX dann ware es ja am besten)
			[01;31m(NF[00m
				(SIMPX
					(VF wir)
					(LK nahmen)
					(MF das wochenende))[01;31m)[00m)
		(SU
			(SIMPX
				(VF vielleicht)
				(LK konnen)
				(MF
					(NX wir)
					(ADVX ja)
					(ADVX noch)
					(NX
						[01;36m(ADJX[00m
							(NX ein bischen)
							(VC verlangern)[01;36m)[00m
						[01;31m(NF[00m
							(NX
								(ADJX eineinhalb)
								(NN tage))[01;31m)[00m))))
		(SU nix)))
Step:Modifier Attachment
{'subtrees': ['NX', 'VC'], 'family': ['ADJX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'PIS', 'VVINF'), 'right siblings': [(NF (NX (ADJX (CARD eineinhalb)) (NN tage)))], 'left siblings': [], 'auto preterminal span': (25, 28), 'span': (25, 28), 'parent': 'NX', 'label': 'ADJX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU aha ja schauen wir mal ob wir irgendeinen termin finden)
		(SU
			(SIMPX dann ware es ja am besten)
			[01;31m(NF[00m
				(SIMPX
					(VF wir)
					(LK nahmen)
					(MF das wochenende))[01;31m)[00m)
		(SU
			(SIMPX
				(VF vielleicht)
				(LK konnen)
				(MF
					(NX wir)
					(ADVX ja)
					(ADVX noch)
					(NX
						(ADJX ein bischen verlangern)
						[01;31m(NF[00m
							(NX
								(ADJX eineinhalb)
								(NN tage))[01;31m)[00m))))
		(SU nix)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SIMPX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'ADV', 'PTKA', 'ADJD', 'PPER', 'VVFIN', 'ART', 'NN'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (10, 20), 'span': (16, 20), 'left siblings': ['SIMPX'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU aha ja schauen wir mal ob wir irgendeinen termin finden)
		(SU dann ware es ja am besten wir nahmen das wochenende)
		(SU
			(SIMPX
				(VF vielleicht)
				(LK konnen)
				(MF
					(NX wir)
					(ADVX ja)
					(ADVX noch)
					(NX
						(ADJX ein bischen verlangern)
						[01;31m(NF[00m
							(NX
								(ADJX eineinhalb)
								(NN tage))[01;31m)[00m))))
		(SU nix)))
Step:Unary
{'subtrees': ['NX'], 'family': ['ADJX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'PIS', 'VVINF', 'CARD', 'NN'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (25, 30), 'span': (28, 30), 'left siblings': ['ADJX'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP aha ja schauen wir mal ob wir irgendeinen termin finden dann ware es ja am besten wir nahmen das wochenende vielleicht konnen wir ja noch ein bischen verlangern eineinhalb tage nix)

Sentence 418:
4 Initial errors
0 on fringe, 4 iterations
1 Error:UNSET remove
1 Error:Clause Attachment
1 Error:Unary
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU ah frau schmidt das ist ja wirklich schade)
		(SU
			[01;31m(SIMPX[00m
				(VF sie)
				(LK wissen)
				(MF doch)
				[01;31m(NF[00m [01;33m(SIMPX[00m
					(SIMPX
						(VF mit ihnen)
						(LK fahre)
						(MF
							(NX ich)
							[01;31m(ADVX[00m
								(ADVX so)
								(ADV gern)[01;31m)[00m
							(ADVX immer))
						(VC weg))[01;31m)[00m[01;31m)[00m
			(SIMPX und sie bestehen immer auf diese eineinhalb tage)) [01;33mSIMPX)[00m
		(SU finde ich wirklich schade)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'NF'], 'family': ['SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'APPR', 'PPER', 'VVFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'PTKVZ', 'KON', 'PPER', 'VVFIN', 'ADV', 'APPR', 'PDAT', 'CARD', 'NN'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (8, 27), 'span': (8, 19), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU ah frau schmidt das ist ja wirklich schade)
		(SU
			(VF sie)
			(LK wissen)
			(MF doch)
			[01;36m(SIMPX[00m
				[01;31m(NF[00m
					(SIMPX
						(VF mit ihnen)
						(LK fahre)
						(MF
							(NX ich)
							[01;31m(ADVX[00m
								(ADVX so)
								(ADV gern)[01;31m)[00m
							(ADVX immer))
						(VC weg))[01;31m)[00m
				(SIMPX und sie bestehen immer auf diese eineinhalb tage)[01;36m)[00m)
		(SU finde ich wirklich schade)))
Step:Clause Attachment
{'subtrees': ['NF', 'SIMPX'], 'family': ['VF', 'LK', 'MF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'PPER', 'VVFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'PTKVZ', 'KON', 'PPER', 'VVFIN', 'ADV', 'APPR', 'PDAT', 'CARD', 'NN'), 'right siblings': [], 'left siblings': [(VF (NX (PPER sie))), (LK (VXFIN (VVFIN wissen))), (MF (ADVX (ADV doch)))], 'auto preterminal span': (11, 27), 'span': (11, 27), 'parent': 'SU', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU ah frau schmidt das ist ja wirklich schade)
		(SU
			(VF sie)
			(LK wissen)
			(MF doch)
			(SIMPX
				[01;31m(NF[00m
					(SIMPX
						(VF mit ihnen)
						(LK fahre)
						(MF
							(NX ich)
							[01;31m(ADVX[00m
								(ADVX so)
								(ADV gern)[01;31m)[00m
							(ADVX immer))
						(VC weg))[01;31m)[00m
				(SIMPX und sie bestehen immer auf diese eineinhalb tage)))
		(SU finde ich wirklich schade)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['NF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'PPER', 'VVFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'PTKVZ', 'KON', 'PPER', 'VVFIN', 'ADV', 'APPR', 'PDAT', 'CARD', 'NN'), 'right siblings': ['SIMPX'], 'parent': 'SIMPX', 'auto preterminal span': (11, 27), 'span': (11, 19), 'left siblings': [], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU ah frau schmidt das ist ja wirklich schade)
		(SU
			(VF sie)
			(LK wissen)
			(MF doch)
			(SIMPX
				(SIMPX
					(VF mit ihnen)
					(LK fahre)
					(MF
						(NX ich)
						[01;31m(ADVX[00m
							(ADVX so)
							(ADV gern)[01;31m)[00m
						(ADVX immer))
					(VC weg))
				(SIMPX und sie bestehen immer auf diese eineinhalb tage)))
		(SU finde ich wirklich schade)))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'ADV'], 'family': ['NX', 'ADVX', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV', 'ADV', 'ADV'), 'right siblings': ['ADVX'], 'parent': 'MF', 'auto preterminal span': (14, 18), 'span': (15, 17), 'left siblings': ['NX'], 'label': 'ADVX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP ah frau schmidt das ist ja wirklich schade sie wissen doch mit ihnen fahre ich so gern immer weg und sie bestehen immer auf diese eineinhalb tage finde ich wirklich schade)

Sentence 419:
0 Initial errors
0 on fringe, 0 iterations

Sentence 420:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Clause Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM nein)
			[01;36m(SIMPX[00m
				[01;31m(SIMPX[00m
					(VF wir)
					(LK konnen)
					(MF auch einzelzimmer)
					(VC nehmen)[01;31m)[00m
				(SIMPX an dem soll es ja nicht liegen)[01;36m)[00m)
		(SU nicht das sie dann)))
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'VC', 'SIMPX'], 'mover info': [('SIMPX', (6, 13))], 'old_family': ['DM', 'SIMPX', 'SIMPX'], 'start left siblings': ['DM', 'SIMPX'], 'auto preterminals': ('PTKANT', 'PPER', 'VMFIN', 'ADV', 'NN', 'VVINF', 'APPR', 'PDS', 'VMFIN', 'PPER', 'ADV', 'PTKNEG', 'VVINF'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'MF', 'VC'], 'auto preterminal span': (0, 13), 'movers': ['SIMPX'], 'old_parent': 'SU', 'end right siblings': [], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP nein wir konnen auch einzelzimmer nehmen an dem soll es ja nicht liegen nicht das sie dann)

Sentence 421:
4 Initial errors
0 on fringe, 3 iterations
2 Error:Different label
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU ach frau schmidt da mus ich zuerst mal uberlegen was romantischer ist)
		(SU
			(SIMPX
				(VF ich)
				(LK denke)
				(MF ja)
				(NF
					(SIMPX
						(VF im zug)
						(LK ist)
						[01;36m(NX[00m
							(MF
								[01;31m(ADJX[00m
									(ADVX viel)
									(ADJD romantischer)[01;31m)[00m)[01;36m)[00m))))
		[01;36m(SIMPX[00m
			(SU
				[01;36m(VF[00m
					(SIMPX
						(LK brauchen)
						(MF wir viel langer))[01;36m)[00m
				(SIMPX habe ich mehr von ihnen))[01;36m)[00m))
Step:Different label
{'family': ['NX'], 'auto preterminal span': (18, 20), 'span': (18, 20), 'subtrees': ['ADVX', 'ADJD'], 'parent': 'MF', 'over_word': False, 'auto preterminals': ('ADV', 'ADJD'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('ADJX', 'NX')}
(TOP
	(TURN
		(SU ach frau schmidt da mus ich zuerst mal uberlegen was romantischer ist)
		(SU ich denke ja im zug ist viel romantischer)
		[01;36m(SIMPX[00m
			(SU
				[01;36m(VF[00m
					(SIMPX
						(LK brauchen)
						(MF wir viel langer))[01;36m)[00m
				(SIMPX habe ich mehr von ihnen))[01;36m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['VF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'ADV', 'ADJD'), 'right siblings': [(SIMPX (LK (VXFIN (VAFIN habe))) (MF (NX (PPER ich)) (NX (PIS mehr)) (PX (APPR von) (NX (PPER ihnen)))))], 'left siblings': [], 'auto preterminal span': (20, 24), 'span': (20, 24), 'parent': 'SU', 'label': 'VF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU ach frau schmidt da mus ich zuerst mal uberlegen was romantischer ist)
		(SU ich denke ja im zug ist viel romantischer)
		[01;36m(SIMPX[00m
			(SU
				(VF brauchen wir viel langer)
				(SIMPX habe ich mehr von ihnen))[01;36m)[00m))
Step:Unary
{'subtrees': ['SU'], 'family': ['SU', 'SU', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'ADV', 'ADJD', 'VAFIN', 'PPER', 'PIS', 'APPR', 'PPER'), 'right siblings': [], 'left siblings': [(SU (DM (ITJ ach)) (DM (NX (NN frau) (NE schmidt))) (SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VMFIN mus))) (MF (NX (PPER ich)) (ADVX (ADV zuerst)) (ADVX (ADV mal))) (VC (VXINF (VVINF uberlegen))) (NF (SIMPX (C (NX (PWS was))) (MF (ADJX (ADJD romantischer))) (VC (VXFIN (VAFIN ist))))))), (SU (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN denke))) (MF (ADVX (ADV ja))) (NF (SIMPX (VF (PX (APPRART im) (NX (NN zug)))) (LK (VXFIN (VAFIN ist))) (MF (NX (ADVX (ADV viel)) (ADJD romantischer)))))))], 'auto preterminal span': (20, 29), 'span': (20, 29), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'add'}
(TOP ach frau schmidt da mus ich zuerst mal uberlegen was romantischer ist ich denke ja im zug ist viel romantischer brauchen wir viel langer habe ich mehr von ihnen)

Sentence 422:
10 Initial errors
0 on fringe, 8 iterations
2 Error:Clause Attachment
2 Error:Clause Attachment
1 Error:Unary
1 Error:UNSET remove
1 Error:Unary
1 Error:UNSET remove
1 Error:Unary
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM gut)
			[01;31m(NX[00m
				[01;36m(DM[00m
					(ADVX
						(ADV also))[01;36m)[00m
				(NX den zug)[01;31m)[00m)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF wir)
				(LK brauchen)
				(MF von munchen nach hannover viereinhalb stunden)[01;31m)[00m[01;31m)[00m
		(SU [01;33m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF ich)
				(LK wurde)
				(VC sagen)
				[01;31m(NF[00m
					[01;31m(P[00m
						[01;36m(NF[00m
							(SIMPX
								(VF damit wir auch was von der zugfahrt haben)
								(LK fahren)
								(MF wir nicht zu fruh)
								(VC los)) [01;33mSIMPX)[00m[01;36m)[00m
						(KOUS weil)
						(SIMPX sonst bin ich unausgeschlafen)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			(SIMPX da haben sie dann von mir nix))
		(SU
			(SIMPX
				(LK wurde)
				(MF ich)
				(VC sagen)
				(NF
					(NX
						[01;31m(NX[00m
							(ADVX so)
							(ADJX elf)
							(NN uhr)[01;31m)[00m
						(PX mit dem zug)))))))
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'VC', 'NF', 'KOUS', 'SIMPX'], 'mover info': [('KOUS', (29, 30)), ('SIMPX', (30, 34))], 'old_family': ['SIMPX', 'KOUS', 'SIMPX'], 'start left siblings': ['SIMPX'], 'auto preterminals': ('PPER', 'VAFIN', 'VVINF', 'KOUS', 'PPER', 'ADV', 'PIS', 'APPR', 'ART', 'NN', 'VAFIN', 'VVFIN', 'PPER', 'PTKNEG', 'PTKA', 'ADJD', 'PTKVZ', 'KOUS', 'ADV', 'VAFIN', 'PPER', 'ADJD'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'VC', 'NF'], 'auto preterminal span': (12, 34), 'movers': ['KOUS', 'SIMPX'], 'old_parent': 'P', 'end right siblings': [], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU
			(DM gut)
			[01;31m(NX[00m
				[01;36m(DM[00m
					(ADVX
						(ADV also))[01;36m)[00m
				(NX den zug)[01;31m)[00m)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF wir)
				(LK brauchen)
				(MF von munchen nach hannover viereinhalb stunden)[01;31m)[00m[01;31m)[00m
		(SU
			[01;31m(SIMPX[00m
				[01;36m(SIMPX[00m
					(VF ich)
					(LK wurde)
					(VC sagen)
					(NF
						[01;31m(P[00m
							(SIMPX
								(VF damit wir auch was von der zugfahrt haben)
								(LK fahren)
								(MF wir nicht zu fruh)
								(VC los))[01;31m)[00m)[01;36m)[00m
				(KOUS weil)
				(SIMPX sonst bin ich unausgeschlafen)[01;31m)[00m
			(SIMPX da haben sie dann von mir nix))
		(SU
			(SIMPX
				(LK wurde)
				(MF ich)
				(VC sagen)
				(NF
					(NX
						[01;31m(NX[00m
							(ADVX so)
							(ADJX elf)
							(NN uhr)[01;31m)[00m
						(PX mit dem zug)))))))
Step:Clause Attachment
{'new_parent': 'SU', 'new_family': ['SIMPX', 'KOUS', 'SIMPX', 'SIMPX'], 'mover info': [('KOUS', (29, 30)), ('SIMPX', (30, 34))], 'old_family': ['VF', 'LK', 'VC', 'NF', 'KOUS', 'SIMPX'], 'start left siblings': ['VF', 'LK', 'VC', 'NF'], 'auto preterminals': ('PPER', 'VAFIN', 'VVINF', 'KOUS', 'PPER', 'ADV', 'PIS', 'APPR', 'ART', 'NN', 'VAFIN', 'VVFIN', 'PPER', 'PTKNEG', 'PTKA', 'ADJD', 'PTKVZ', 'KOUS', 'ADV', 'VAFIN', 'PPER', 'ADJD', 'ADV', 'VAFIN', 'PPER', 'ADV', 'APPR', 'PPER', 'PIS'), 'start right siblings': [], 'end left siblings': ['SIMPX'], 'auto preterminal span': (12, 41), 'movers': ['KOUS', 'SIMPX'], 'old_parent': 'SIMPX', 'end right siblings': ['SIMPX'], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU
			(DM gut)
			[01;31m(NX[00m
				[01;36m(DM[00m
					(ADVX
						(ADV also))[01;36m)[00m
				(NX den zug)[01;31m)[00m)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF wir)
				(LK brauchen)
				(MF von munchen nach hannover viereinhalb stunden)[01;31m)[00m[01;31m)[00m
		(SU
			(SIMPX
				(VF ich)
				(LK wurde)
				(VC sagen)
				(NF
					[01;31m(P[00m
						(SIMPX
							(VF damit wir auch was von der zugfahrt haben)
							(LK fahren)
							(MF wir nicht zu fruh)
							(VC los))[01;31m)[00m))
			(KOUS weil)
			(SIMPX sonst bin ich unausgeschlafen)
			(SIMPX da haben sie dann von mir nix))
		(SU
			(SIMPX
				(LK wurde)
				(MF ich)
				(VC sagen)
				(NF
					(NX
						[01;31m(NX[00m
							(ADVX so)
							(ADJX elf)
							(NN uhr)[01;31m)[00m
						(PX mit dem zug)))))))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['DM', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV',), 'right siblings': [(NX (ART den) (NN zug))], 'left siblings': [], 'auto preterminal span': (1, 2), 'span': (1, 2), 'parent': 'NX', 'label': 'DM', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM gut)
			[01;31m(NX[00m
				(DM also)
				(NX den zug)[01;31m)[00m)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF wir)
				(LK brauchen)
				(MF von munchen nach hannover viereinhalb stunden)[01;31m)[00m[01;31m)[00m
		(SU
			(SIMPX
				(VF ich)
				(LK wurde)
				(VC sagen)
				(NF
					[01;31m(P[00m
						(SIMPX
							(VF damit wir auch was von der zugfahrt haben)
							(LK fahren)
							(MF wir nicht zu fruh)
							(VC los))[01;31m)[00m))
			(KOUS weil)
			(SIMPX sonst bin ich unausgeschlafen)
			(SIMPX da haben sie dann von mir nix))
		(SU
			(SIMPX
				(LK wurde)
				(MF ich)
				(VC sagen)
				(NF
					(NX
						[01;31m(NX[00m
							(ADVX so)
							(ADJX elf)
							(NN uhr)[01;31m)[00m
						(PX mit dem zug)))))))
Step:UNSET remove
{'subtrees': ['DM', 'NX'], 'family': ['DM', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'ART', 'NN'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (0, 4), 'span': (1, 4), 'left siblings': ['DM'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU gut also den zug)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF wir)
				(LK brauchen)
				(MF von munchen nach hannover viereinhalb stunden)[01;31m)[00m[01;31m)[00m
		(SU
			(SIMPX
				(VF ich)
				(LK wurde)
				(VC sagen)
				(NF
					[01;31m(P[00m
						(SIMPX
							(VF damit wir auch was von der zugfahrt haben)
							(LK fahren)
							(MF wir nicht zu fruh)
							(VC los))[01;31m)[00m))
			(KOUS weil)
			(SIMPX sonst bin ich unausgeschlafen)
			(SIMPX da haben sie dann von mir nix))
		(SU
			(SIMPX
				(LK wurde)
				(MF ich)
				(VC sagen)
				(NF
					(NX
						[01;31m(NX[00m
							(ADVX so)
							(ADJX elf)
							(NN uhr)[01;31m)[00m
						(PX mit dem zug)))))))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SU', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'ART', 'NN', 'PPER', 'VVFIN', 'APPR', 'NE', 'APPR', 'NE', 'CARD', 'NN', 'PPER', 'VAFIN', 'VVINF', 'KOUS', 'PPER', 'ADV', 'PIS', 'APPR', 'ART', 'NN', 'VAFIN', 'VVFIN', 'PPER', 'PTKNEG', 'PTKA', 'ADJD', 'PTKVZ', 'KOUS', 'ADV', 'VAFIN', 'PPER', 'ADJD', 'ADV', 'VAFIN', 'PPER', 'ADV', 'APPR', 'PPER', 'PIS', 'VAFIN', 'PPER', 'VVINF', 'ADV', 'CARD', 'NN', 'APPR', 'ART', 'NN'), 'right siblings': ['SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 50), 'span': (4, 12), 'left siblings': ['SU'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU gut also den zug)
		[01;31m(SIMPX[00m
			(VF wir)
			(LK brauchen)
			(MF von munchen nach hannover viereinhalb stunden)[01;31m)[00m
		(SU
			(SIMPX
				(VF ich)
				(LK wurde)
				(VC sagen)
				(NF
					[01;31m(P[00m
						(SIMPX
							(VF damit wir auch was von der zugfahrt haben)
							(LK fahren)
							(MF wir nicht zu fruh)
							(VC los))[01;31m)[00m))
			(KOUS weil)
			(SIMPX sonst bin ich unausgeschlafen)
			(SIMPX da haben sie dann von mir nix))
		(SU
			(SIMPX
				(LK wurde)
				(MF ich)
				(VC sagen)
				(NF
					(NX
						[01;31m(NX[00m
							(ADVX so)
							(ADJX elf)
							(NN uhr)[01;31m)[00m
						(PX mit dem zug)))))))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['SU', 'SIMPX', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'ART', 'NN', 'PPER', 'VVFIN', 'APPR', 'NE', 'APPR', 'NE', 'CARD', 'NN', 'PPER', 'VAFIN', 'VVINF', 'KOUS', 'PPER', 'ADV', 'PIS', 'APPR', 'ART', 'NN', 'VAFIN', 'VVFIN', 'PPER', 'PTKNEG', 'PTKA', 'ADJD', 'PTKVZ', 'KOUS', 'ADV', 'VAFIN', 'PPER', 'ADJD', 'ADV', 'VAFIN', 'PPER', 'ADV', 'APPR', 'PPER', 'PIS', 'VAFIN', 'PPER', 'VVINF', 'ADV', 'CARD', 'NN', 'APPR', 'ART', 'NN'), 'right siblings': ['SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 50), 'span': (4, 12), 'left siblings': ['SU'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU gut also den zug)
		(VF wir)
		(LK brauchen)
		(MF von munchen nach hannover viereinhalb stunden)
		(SU
			(SIMPX
				(VF ich)
				(LK wurde)
				(VC sagen)
				(NF
					[01;31m(P[00m
						(SIMPX
							(VF damit wir auch was von der zugfahrt haben)
							(LK fahren)
							(MF wir nicht zu fruh)
							(VC los))[01;31m)[00m))
			(KOUS weil)
			(SIMPX sonst bin ich unausgeschlafen)
			(SIMPX da haben sie dann von mir nix))
		(SU
			(SIMPX
				(LK wurde)
				(MF ich)
				(VC sagen)
				(NF
					(NX
						[01;31m(NX[00m
							(ADVX so)
							(ADJX elf)
							(NN uhr)[01;31m)[00m
						(PX mit dem zug)))))))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['P'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'PIS', 'APPR', 'ART', 'NN', 'VAFIN', 'VVFIN', 'PPER', 'PTKNEG', 'PTKA', 'ADJD', 'PTKVZ'), 'right siblings': [], 'parent': 'NF', 'auto preterminal span': (15, 29), 'span': (15, 29), 'left siblings': [], 'label': 'P', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU gut also den zug)
		(VF wir)
		(LK brauchen)
		(MF von munchen nach hannover viereinhalb stunden)
		(SU ich wurde sagen damit wir auch was von der zugfahrt haben fahren wir nicht zu fruh los weil sonst bin ich unausgeschlafen da haben sie dann von mir nix)
		(SU
			(SIMPX
				(LK wurde)
				(MF ich)
				(VC sagen)
				(NF
					(NX
						[01;31m(NX[00m
							(ADVX so)
							(ADJX elf)
							(NN uhr)[01;31m)[00m
						(PX mit dem zug)))))))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'ADJX', 'NN'], 'family': ['NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'CARD', 'NN', 'APPR', 'ART', 'NN'), 'right siblings': ['PX'], 'parent': 'NX', 'auto preterminal span': (44, 50), 'span': (44, 47), 'left siblings': [], 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP gut also den zug wir brauchen von munchen nach hannover viereinhalb stunden ich wurde sagen damit wir auch was von der zugfahrt haben fahren wir nicht zu fruh los weil sonst bin ich unausgeschlafen da haben sie dann von mir nix wurde ich sagen so elf uhr mit dem zug)

Sentence 423:
2 Initial errors
0 on fringe, 2 iterations
1 Error:UNSET remove
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU dann schaue ich mal wann ein zug geht)
		(SU
			(DM ja)
			(SIMPX
				(VF das)
				(LK ware)
				(MF
					(ADVX dann)
					(NX [01;33m(NX[00m
						(NX elf uhr)
						(KON und)
						[01;31m(NX[00m
							(ADJX funfundzwanzig) [01;33mNX)[00m
							(NN minuten)[01;31m)[00m))))
		(SU past das)))
Step:UNSET remove
{'subtrees': ['ADJX', 'NN'], 'family': ['NX', 'KON', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'NN', 'KON', 'CARD', 'NN'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (12, 17), 'span': (15, 17), 'left siblings': ['NX', 'KON'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU dann schaue ich mal wann ein zug geht)
		(SU
			(DM ja)
			(SIMPX
				(VF das)
				(LK ware)
				(MF
					(ADVX dann)
					(NX
						[01;36m(NX[00m
							(NX elf uhr)
							(KON und)
							(ADJX funfundzwanzig)[01;36m)[00m
						(NN minuten)))))
		(SU past das)))
Step:Modifier Attachment
{'subtrees': ['NX', 'KON', 'ADJX'], 'family': ['NX', 'NN'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'NN', 'KON', 'CARD'), 'right siblings': [(NN minuten)], 'left siblings': [], 'auto preterminal span': (12, 16), 'span': (12, 16), 'parent': 'NX', 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP dann schaue ich mal wann ein zug geht ja das ware dann elf uhr und funfundzwanzig minuten past das)

Sentence 424:
10 Initial errors
0 on fringe, 6 iterations
2 Error:Different label
2 Error:UNSET move
2 Error:NP Attachment
2 Error:UNSET move
1 Error:UNSET add
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			[01;31m(SIMPX[00m
				[01;36m(SIMPX[00m
					(VF sie)
					(LK horen)
					(MF sich heute so formlich)
					(VC an)[01;36m)[00m
				[01;36m(DM[00m [01;31m(NF[00m
					(NX
						(NN frau)
						(NE schmidt))[01;31m)[00m[01;36m)[00m[01;31m)[00m)
		(SU
			(SIMPX
				(LK ist)
				[01;31m(MF[00m
					(NX ihnen)
					(NX eine laus)
					[01;36m(MF[00m
						(PX [01;33m(SIMPX (NF[00m
							(APPR uber)
							(NX die leber))[01;36m)[00m[01;31m)[00m
				(VC gelaufen)) [01;33mNF) SIMPX)[00m
			[01;31m(SIMPX[00m
				(KOORD oder)
				[01;36m(SIMPX[00m
					(VF wie)
					(LK sehe)
					(MF ich das)[01;36m)[00m[01;31m)[00m)))
Step:Different label
{'family': ['VF', 'LK', 'MF', 'VC', 'DM'], 'auto preterminal span': (7, 9), 'span': (7, 9), 'subtrees': ['NX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('NN', 'NE'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('NF', 'DM')}
(TOP
	(TURN
		(SU
			[01;31m(SIMPX[00m
				[01;36m(SIMPX[00m
					(VF sie)
					(LK horen)
					(MF sich heute so formlich)
					(VC an)[01;36m)[00m
				(DM frau schmidt)[01;31m)[00m)
		(SU
			(SIMPX
				(LK ist)
				[01;31m(MF[00m
					(NX ihnen)
					(NX eine laus)
					[01;36m(MF[00m
						(PX [01;33m(SIMPX (NF[00m
							(APPR uber)
							(NX die leber))[01;36m)[00m[01;31m)[00m
				(VC gelaufen)) [01;33mNF) SIMPX)[00m
			[01;31m(SIMPX[00m
				(KOORD oder)
				[01;36m(SIMPX[00m
					(VF wie)
					(LK sehe)
					(MF ich das)[01;36m)[00m[01;31m)[00m)))
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SIMPX', 'DM'], 'mover info': [('DM', (7, 9))], 'old_family': ['VF', 'LK', 'MF', 'VC', 'DM'], 'start left siblings': ['VF', 'LK', 'MF', 'VC'], 'auto preterminals': ('PPER', 'VVFIN', 'PRF', 'ADV', 'ADV', 'ADJD', 'PTKVZ', 'NN', 'NE'), 'start right siblings': [], 'end left siblings': ['SIMPX'], 'auto preterminal span': (0, 9), 'movers': ['DM'], 'old_parent': 'SIMPX', 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU sie horen sich heute so formlich an frau schmidt)
		(SU
			(SIMPX
				(LK ist)
				[01;31m(MF[00m
					(NX ihnen)
					(NX eine laus)
					[01;36m(MF[00m
						(PX [01;33m(SIMPX (NF[00m
							(APPR uber)
							(NX die leber))[01;36m)[00m[01;31m)[00m
				(VC gelaufen)) [01;33mNF) SIMPX)[00m
			[01;31m(SIMPX[00m
				(KOORD oder)
				[01;36m(SIMPX[00m
					(VF wie)
					(LK sehe)
					(MF ich das)[01;36m)[00m[01;31m)[00m)))
Step:NP Attachment
{'new_parent': 'SIMPX', 'new_family': ['LK', 'NX', 'NX', 'MF', 'VC'], 'mover info': [('NX', (10, 11)), ('NX', (11, 13))], 'old_family': ['NX', 'NX', 'PX'], 'start left siblings': [], 'auto preterminals': ('VAFIN', 'PPER', 'ART', 'NN', 'APPR', 'ART', 'NN', 'VVPP'), 'start right siblings': ['PX'], 'end left siblings': ['LK'], 'auto preterminal span': (9, 17), 'movers': ['NX', 'NX'], 'old_parent': 'MF', 'end right siblings': ['MF', 'VC'], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU sie horen sich heute so formlich an frau schmidt)
		(SU
			(SIMPX
				(LK ist)
				(NX ihnen)
				(NX eine laus)
				[01;36m(SIMPX[00m
					[01;36m(NF[00m
						(MF uber die leber)
						(VC gelaufen)[01;36m)[00m[01;36m)[00m)
			[01;31m(SIMPX[00m
				(KOORD oder)
				[01;36m(SIMPX[00m
					(VF wie)
					(LK sehe)
					(MF ich das)[01;36m)[00m[01;31m)[00m)))
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SIMPX', 'KOORD', 'SIMPX'], 'mover info': [('KOORD', (17, 18))], 'old_family': ['KOORD', 'VF', 'LK', 'MF'], 'start left siblings': [], 'auto preterminals': ('VAFIN', 'PPER', 'ART', 'NN', 'APPR', 'ART', 'NN', 'VVPP', 'KON', 'PWAV', 'VVFIN', 'PPER', 'PDS'), 'start right siblings': ['VF', 'LK', 'MF'], 'end left siblings': ['SIMPX'], 'auto preterminal span': (9, 22), 'movers': ['KOORD'], 'old_parent': 'SIMPX', 'POS confusion': ('KON', 'KON'), 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU sie horen sich heute so formlich an frau schmidt)
		(SU
			(SIMPX
				(LK ist)
				(NX ihnen)
				(NX eine laus)
				[01;36m(SIMPX[00m
					[01;36m(NF[00m
						(MF uber die leber)
						(VC gelaufen)[01;36m)[00m[01;36m)[00m)
			(KOORD oder)
			(SIMPX wie sehe ich das))))
Step:UNSET add
{'subtrees': ['MF', 'VC'], 'family': ['LK', 'NX', 'NX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NN', 'VVPP'), 'right siblings': [], 'left siblings': [(LK (VXFIN (VAFIN ist))), (NX (PPER ihnen)), (NX (ART eine) (NN laus))], 'auto preterminal span': (13, 17), 'span': (13, 17), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU sie horen sich heute so formlich an frau schmidt)
		(SU
			(SIMPX
				(LK ist)
				(NX ihnen)
				(NX eine laus)
				[01;36m(SIMPX[00m
					(NF
						(MF uber die leber)
						(VC gelaufen))[01;36m)[00m)
			(KOORD oder)
			(SIMPX wie sehe ich das))))
Step:Unary
{'subtrees': ['NF'], 'family': ['LK', 'NX', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NN', 'VVPP'), 'right siblings': [], 'left siblings': [(LK (VXFIN (VAFIN ist))), (NX (PPER ihnen)), (NX (ART eine) (NN laus))], 'auto preterminal span': (13, 17), 'span': (13, 17), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'add'}
(TOP sie horen sich heute so formlich an frau schmidt ist ihnen eine laus uber die leber gelaufen oder wie sehe ich das)

Sentence 425:
9 Initial errors
0 on fringe, 5 iterations
2 Error:Different label
2 Error:Different label
2 Error:UNSET move
2 Error:NP Attachment
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			[01;31m(SIMPX[00m
				[01;36m(SIMPX[00m
					(VF sie)
					(LK wollen)
					(MF abends noch was)
					(VC unternehmen)[01;36m)[00m
				[01;36m(DM[00m [01;31m(NF[00m
					(NX
						(NN frau)
						(NE schmidt))[01;31m)[00m[01;36m)[00m[01;31m)[00m)
		(SU sie springen ja uber ihren schatten)
		(SU das ist mir ja ganz neu)
		(SU
			(SIMPX
				(VF bisher)
				(LK haben)
				[01;36m(MF[00m
					[01;31m(MF[00m
						(NX sie)
						(ADVX immer)[01;31m)[00m
					[01;36m(NX[00m [01;31m(VC[00m
						[01;31m(VXINF[00m
							(VVPP abgelehnt)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m))
		(SU sie machen mich noch ganz schwach)))
Step:Different label
{'family': ['VF', 'LK', 'MF', 'VC', 'DM'], 'auto preterminal span': (6, 8), 'span': (6, 8), 'subtrees': ['NX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('NN', 'NE'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('NF', 'DM')}
(TOP
	(TURN
		(SU
			[01;31m(SIMPX[00m
				[01;36m(SIMPX[00m
					(VF sie)
					(LK wollen)
					(MF abends noch was)
					(VC unternehmen)[01;36m)[00m
				(DM frau schmidt)[01;31m)[00m)
		(SU sie springen ja uber ihren schatten)
		(SU das ist mir ja ganz neu)
		(SU
			(SIMPX
				(VF bisher)
				(LK haben)
				[01;36m(MF[00m
					[01;31m(MF[00m
						(NX sie)
						(ADVX immer)[01;31m)[00m
					[01;36m(NX[00m [01;31m(VC[00m
						[01;31m(VXINF[00m
							(VVPP abgelehnt)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m))
		(SU sie machen mich noch ganz schwach)))
Step:Different label
{'family': ['VF', 'LK', 'MF', 'NX'], 'auto preterminal span': (24, 25), 'span': (24, 25), 'subtrees': ['VXINF'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('VVPP',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('VC', 'NX')}
(TOP
	(TURN
		(SU
			[01;31m(SIMPX[00m
				[01;36m(SIMPX[00m
					(VF sie)
					(LK wollen)
					(MF abends noch was)
					(VC unternehmen)[01;36m)[00m
				(DM frau schmidt)[01;31m)[00m)
		(SU sie springen ja uber ihren schatten)
		(SU das ist mir ja ganz neu)
		(SU
			(SIMPX
				(VF bisher)
				(LK haben)
				[01;36m(MF[00m
					[01;31m(MF[00m
						(NX sie)
						(ADVX immer)[01;31m)[00m
					(NX
						[01;31m(VXINF[00m
							(VVPP abgelehnt)[01;31m)[00m)[01;36m)[00m))
		(SU sie machen mich noch ganz schwach)))
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SIMPX', 'DM'], 'mover info': [('DM', (6, 8))], 'old_family': ['VF', 'LK', 'MF', 'VC', 'DM'], 'start left siblings': ['VF', 'LK', 'MF', 'VC'], 'auto preterminals': ('PPER', 'VMFIN', 'ADV', 'ADV', 'PIS', 'VVINF', 'NN', 'NE'), 'start right siblings': [], 'end left siblings': ['SIMPX'], 'auto preterminal span': (0, 8), 'movers': ['DM'], 'old_parent': 'SIMPX', 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU sie wollen abends noch was unternehmen frau schmidt)
		(SU sie springen ja uber ihren schatten)
		(SU das ist mir ja ganz neu)
		(SU
			(SIMPX
				(VF bisher)
				(LK haben)
				[01;36m(MF[00m
					[01;31m(MF[00m
						(NX sie)
						(ADVX immer)[01;31m)[00m
					(NX
						[01;31m(VXINF[00m
							(VVPP abgelehnt)[01;31m)[00m)[01;36m)[00m))
		(SU sie machen mich noch ganz schwach)))
Step:NP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'ADVX', 'NX'], 'mover info': [('NX', (24, 25))], 'old_family': ['VF', 'LK', 'MF', 'NX'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'ADV', 'VVPP'), 'start right siblings': [], 'end left siblings': ['NX', 'ADVX'], 'auto preterminal span': (20, 25), 'movers': ['NX'], 'old_parent': 'SIMPX', 'POS confusion': ('VVPP', 'VVPP'), 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU sie wollen abends noch was unternehmen frau schmidt)
		(SU sie springen ja uber ihren schatten)
		(SU das ist mir ja ganz neu)
		(SU
			(SIMPX
				(VF bisher)
				(LK haben)
				(MF
					(NX sie)
					(ADVX immer)
					(NX
						[01;31m(VXINF[00m
							(VVPP abgelehnt)[01;31m)[00m))))
		(SU sie machen mich noch ganz schwach)))
Step:Single Word Phrase
{'subtrees': ['VVPP'], 'family': ['VXINF'], 'over_word': True, 'over words': True, 'auto preterminals': ('VVPP',), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (24, 25), 'span': (24, 25), 'left siblings': [], 'label': 'VXINF', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP sie wollen abends noch was unternehmen frau schmidt sie springen ja uber ihren schatten das ist mir ja ganz neu bisher haben sie immer abgelehnt sie machen mich noch ganz schwach)

Sentence 426:
7 Initial errors
0 on fringe, 6 iterations
2 Error:NP Attachment
1 Error:Co-ordination
1 Error:Unary
1 Error:Unary
1 Error:UNSET add
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU was schones)
		(SU ach frau schmidt ich denke ich kenne da ganz eine schone bar)
		(SU da gehen wir dann hin)
		(SU vor allem gibt es da ganz schone musik)
		[01;36m(SIMPX[00m
			[01;36m(SU[00m
				(SU die gefallt mir immer sehr gut)
				(SU letzte mal muste ich immer alleine weggehen)[01;36m)[00m[01;36m)[00m
		(SU da waren sie ja dann nie dabei)
		[01;36m(SIMPX[00m
			(SU
				(SIMPX und jetzt kann ich ihnen das gleich schon)
				(SIMPX
					(KOORD oder)
					[01;36m(LKMVC[00m
						(LK habe)
						[01;36m(MF[00m
							[01;31m(MF[00m
								(NX ich)
								(NX das)
								(ADVX schon)[01;31m)[00m
							(NX erfahrung)[01;36m)[00m
						(VC gebracht)[01;36m)[00m))[01;36m)[00m
		(SU
			(SIMPX
				(VF ich)
				(LK reserviere)
				(MF
					(ADVX dann)
					(ADVX dort)
					[01;31m(NX[00m
						(NX zwei platze)
						(PX zum essen)[01;31m)[00m)))
		(SU past ihnen das so)))
Step:NP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'NX', 'ADVX', 'NX'], 'mover info': [('NX', (60, 61))], 'old_family': ['KOORD', 'LK', 'MF', 'NX', 'VC'], 'start left siblings': ['KOORD', 'LK', 'MF'], 'auto preterminals': ('KON', 'VAFIN', 'PPER', 'PDS', 'ADV', 'NN', 'VVPP'), 'start right siblings': ['VC'], 'end left siblings': ['NX', 'NX', 'ADVX'], 'auto preterminal span': (55, 62), 'movers': ['NX'], 'old_parent': 'SIMPX', 'POS confusion': ('NN', 'NN'), 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU was schones)
		(SU ach frau schmidt ich denke ich kenne da ganz eine schone bar)
		(SU da gehen wir dann hin)
		(SU vor allem gibt es da ganz schone musik)
		[01;36m(SIMPX[00m
			[01;36m(SU[00m
				(SU die gefallt mir immer sehr gut)
				(SU letzte mal muste ich immer alleine weggehen)[01;36m)[00m[01;36m)[00m
		(SU da waren sie ja dann nie dabei)
		[01;36m(SIMPX[00m
			(SU
				(SIMPX und jetzt kann ich ihnen das gleich schon)
				(SIMPX
					(KOORD oder)
					[01;36m(LKMVC[00m
						(LK habe)
						(MF ich das schon erfahrung)
						(VC gebracht)[01;36m)[00m))[01;36m)[00m
		(SU
			(SIMPX
				(VF ich)
				(LK reserviere)
				(MF
					(ADVX dann)
					(ADVX dort)
					[01;31m(NX[00m
						(NX zwei platze)
						(PX zum essen)[01;31m)[00m)))
		(SU past ihnen das so)))
Step:Co-ordination
{'subtrees': ['SU', 'SU'], 'family': ['SU', 'SU', 'SU', 'SU', 'SU', 'SU', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VVFIN', 'PPER', 'ADV', 'ADV', 'ADJD', 'ADJA', 'NN', 'VMFIN', 'PPER', 'ADV', 'ADV', 'VVINF'), 'right siblings': [(SU (SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VAFIN waren))) (MF (NX (PPER sie)) (ADVX (ADV ja)) (ADVX (ADV dann)) (ADVX (ADV nie)) (PX (PROP dabei))))), (SU (SIMPX (KOORD (KON und)) (VF (ADVX (ADV jetzt))) (LK (VXFIN (VMFIN kann))) (MF (NX (PPER ich)) (NX (PPER ihnen)) (NX (PDS das)) (ADVX (ADV gleich)) (ADVX (ADV schon)))) (SIMPX (KOORD (KON oder)) (LK (VXFIN (VAFIN habe))) (MF (NX (PPER ich)) (NX (PDS das)) (ADVX (ADV schon)) (NX (NN erfahrung))) (VC (VXINF (VVPP gebracht))))), (SU (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN reserviere))) (MF (ADVX (ADV dann)) (ADVX (ADV dort)) (NX (NX (ADJX (CARD zwei)) (NN platze)) (PX (APPRART zum) (NX (NN essen))))))), (SU (SIMPX (LK (VXFIN (VVFIN past))) (MF (NX (PPER ihnen)) (NX (PDS das)) (ADVX (ADV so)))))], 'left siblings': [(SU (NX (NX (PIS was)) (NX (NN schones)))), (SU (DM (ITJ ach)) (DM (NX (NN frau) (NE schmidt))) (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN denke))) (NF (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN kenne))) (MF (ADVX (ADV da)) (NX (ADVX (ADV ganz)) (ART eine) (ADJX (ADJA schone)) (NN bar))))))), (SU (SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VVFIN gehen))) (MF (NX (PPER wir)) (ADVX (ADV dann))) (VC (PTKVZ hin)))), (SU (SIMPX (VF (PX (APPR vor) (NX (PIS allem)))) (LK (VXFIN (VVFIN gibt))) (MF (NX (PPER es)) (ADVX (ADV da)) (NX (ADJX (ADVX (ADV ganz)) (ADJA schone)) (NN musik)))))], 'auto preterminal span': (27, 40), 'span': (27, 40), 'parent': 'TURN', 'label': 'SU', 'classified_type': 'Co-ordination', 'type': 'add'}
(TOP
	(TURN
		(SU was schones)
		(SU ach frau schmidt ich denke ich kenne da ganz eine schone bar)
		(SU da gehen wir dann hin)
		(SU vor allem gibt es da ganz schone musik)
		[01;36m(SIMPX[00m
			(SU
				(SU die gefallt mir immer sehr gut)
				(SU letzte mal muste ich immer alleine weggehen))[01;36m)[00m
		(SU da waren sie ja dann nie dabei)
		[01;36m(SIMPX[00m
			(SU
				(SIMPX und jetzt kann ich ihnen das gleich schon)
				(SIMPX
					(KOORD oder)
					[01;36m(LKMVC[00m
						(LK habe)
						(MF ich das schon erfahrung)
						(VC gebracht)[01;36m)[00m))[01;36m)[00m
		(SU
			(SIMPX
				(VF ich)
				(LK reserviere)
				(MF
					(ADVX dann)
					(ADVX dort)
					[01;31m(NX[00m
						(NX zwei platze)
						(PX zum essen)[01;31m)[00m)))
		(SU past ihnen das so)))
Step:Unary
{'subtrees': ['SU'], 'family': ['SU', 'SU', 'SU', 'SU', 'SIMPX', 'SU', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VVFIN', 'PPER', 'ADV', 'ADV', 'ADJD', 'ADJA', 'NN', 'VMFIN', 'PPER', 'ADV', 'ADV', 'VVINF'), 'right siblings': [(SU (SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VAFIN waren))) (MF (NX (PPER sie)) (ADVX (ADV ja)) (ADVX (ADV dann)) (ADVX (ADV nie)) (PX (PROP dabei))))), (SU (SIMPX (KOORD (KON und)) (VF (ADVX (ADV jetzt))) (LK (VXFIN (VMFIN kann))) (MF (NX (PPER ich)) (NX (PPER ihnen)) (NX (PDS das)) (ADVX (ADV gleich)) (ADVX (ADV schon)))) (SIMPX (KOORD (KON oder)) (LK (VXFIN (VAFIN habe))) (MF (NX (PPER ich)) (NX (PDS das)) (ADVX (ADV schon)) (NX (NN erfahrung))) (VC (VXINF (VVPP gebracht))))), (SU (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN reserviere))) (MF (ADVX (ADV dann)) (ADVX (ADV dort)) (NX (NX (ADJX (CARD zwei)) (NN platze)) (PX (APPRART zum) (NX (NN essen))))))), (SU (SIMPX (LK (VXFIN (VVFIN past))) (MF (NX (PPER ihnen)) (NX (PDS das)) (ADVX (ADV so)))))], 'left siblings': [(SU (NX (NX (PIS was)) (NX (NN schones)))), (SU (DM (ITJ ach)) (DM (NX (NN frau) (NE schmidt))) (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN denke))) (NF (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN kenne))) (MF (ADVX (ADV da)) (NX (ADVX (ADV ganz)) (ART eine) (ADJX (ADJA schone)) (NN bar))))))), (SU (SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VVFIN gehen))) (MF (NX (PPER wir)) (ADVX (ADV dann))) (VC (PTKVZ hin)))), (SU (SIMPX (VF (PX (APPR vor) (NX (PIS allem)))) (LK (VXFIN (VVFIN gibt))) (MF (NX (PPER es)) (ADVX (ADV da)) (NX (ADJX (ADVX (ADV ganz)) (ADJA schone)) (NN musik)))))], 'auto preterminal span': (27, 40), 'span': (27, 40), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU was schones)
		(SU ach frau schmidt ich denke ich kenne da ganz eine schone bar)
		(SU da gehen wir dann hin)
		(SU vor allem gibt es da ganz schone musik)
		(SIMPX die gefallt mir immer sehr gut letzte mal muste ich immer alleine weggehen)
		(SU da waren sie ja dann nie dabei)
		[01;36m(SIMPX[00m
			(SU
				(SIMPX und jetzt kann ich ihnen das gleich schon)
				(SIMPX
					(KOORD oder)
					[01;36m(LKMVC[00m
						(LK habe)
						(MF ich das schon erfahrung)
						(VC gebracht)[01;36m)[00m))[01;36m)[00m
		(SU
			(SIMPX
				(VF ich)
				(LK reserviere)
				(MF
					(ADVX dann)
					(ADVX dort)
					[01;31m(NX[00m
						(NX zwei platze)
						(PX zum essen)[01;31m)[00m)))
		(SU past ihnen das so)))
Step:Unary
{'subtrees': ['SU'], 'family': ['SU', 'SU', 'SU', 'SU', 'SIMPX', 'SU', 'SIMPX', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'ADV', 'VMFIN', 'PPER', 'PPER', 'PDS', 'ADV', 'ADV', 'KON', 'VAFIN', 'PPER', 'PDS', 'ADV', 'NN', 'VVPP'), 'right siblings': [(SU (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN reserviere))) (MF (ADVX (ADV dann)) (ADVX (ADV dort)) (NX (NX (ADJX (CARD zwei)) (NN platze)) (PX (APPRART zum) (NX (NN essen))))))), (SU (SIMPX (LK (VXFIN (VVFIN past))) (MF (NX (PPER ihnen)) (NX (PDS das)) (ADVX (ADV so)))))], 'left siblings': [(SU (NX (NX (PIS was)) (NX (NN schones)))), (SU (DM (ITJ ach)) (DM (NX (NN frau) (NE schmidt))) (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN denke))) (NF (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN kenne))) (MF (ADVX (ADV da)) (NX (ADVX (ADV ganz)) (ART eine) (ADJX (ADJA schone)) (NN bar))))))), (SU (SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VVFIN gehen))) (MF (NX (PPER wir)) (ADVX (ADV dann))) (VC (PTKVZ hin)))), (SU (SIMPX (VF (PX (APPR vor) (NX (PIS allem)))) (LK (VXFIN (VVFIN gibt))) (MF (NX (PPER es)) (ADVX (ADV da)) (NX (ADJX (ADVX (ADV ganz)) (ADJA schone)) (NN musik))))), (SIMPX (SU (SU (SIMPX (VF (NX (PDS die))) (LK (VXFIN (VVFIN gefallt))) (MF (NX (PPER mir)) (ADVX (ADV immer)) (ADJX (ADVX (ADV sehr)) (ADJD gut))))) (SU (SIMPX (VF (NX (ADJX (ADJA letzte)) (NN mal))) (LK (VXFIN (VMFIN muste))) (MF (NX (PPER ich)) (ADVX (ADV immer)) (ADVX (ADV alleine))) (VC (VXINF (VVINF weggehen))))))), (SU (SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VAFIN waren))) (MF (NX (PPER sie)) (ADVX (ADV ja)) (ADVX (ADV dann)) (ADVX (ADV nie)) (PX (PROP dabei)))))], 'auto preterminal span': (47, 62), 'span': (47, 62), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU was schones)
		(SU ach frau schmidt ich denke ich kenne da ganz eine schone bar)
		(SU da gehen wir dann hin)
		(SU vor allem gibt es da ganz schone musik)
		(SIMPX die gefallt mir immer sehr gut letzte mal muste ich immer alleine weggehen)
		(SU da waren sie ja dann nie dabei)
		(SIMPX
			(SU
				(SIMPX und jetzt kann ich ihnen das gleich schon)
				(SIMPX
					(KOORD oder)
					[01;36m(LKMVC[00m
						(LK habe)
						(MF ich das schon erfahrung)
						(VC gebracht)[01;36m)[00m)))
		(SU
			(SIMPX
				(VF ich)
				(LK reserviere)
				(MF
					(ADVX dann)
					(ADVX dort)
					[01;31m(NX[00m
						(NX zwei platze)
						(PX zum essen)[01;31m)[00m)))
		(SU past ihnen das so)))
Step:UNSET add
{'subtrees': ['LK', 'MF', 'VC'], 'family': ['KOORD', 'LKMVC'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'PPER', 'PDS', 'ADV', 'NN', 'VVPP'), 'right siblings': [], 'left siblings': [(KOORD (KON oder))], 'auto preterminal span': (56, 62), 'span': (56, 62), 'parent': 'SIMPX', 'label': 'LKMVC', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU was schones)
		(SU ach frau schmidt ich denke ich kenne da ganz eine schone bar)
		(SU da gehen wir dann hin)
		(SU vor allem gibt es da ganz schone musik)
		(SIMPX die gefallt mir immer sehr gut letzte mal muste ich immer alleine weggehen)
		(SU da waren sie ja dann nie dabei)
		(SIMPX und jetzt kann ich ihnen das gleich schon oder habe ich das schon erfahrung gebracht)
		(SU
			(SIMPX
				(VF ich)
				(LK reserviere)
				(MF
					(ADVX dann)
					(ADVX dort)
					[01;31m(NX[00m
						(NX zwei platze)
						(PX zum essen)[01;31m)[00m)))
		(SU past ihnen das so)))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['ADVX', 'ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'CARD', 'NN', 'APPRART', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (64, 70), 'span': (66, 70), 'left siblings': ['ADVX', 'ADVX'], 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP was schones ach frau schmidt ich denke ich kenne da ganz eine schone bar da gehen wir dann hin vor allem gibt es da ganz schone musik die gefallt mir immer sehr gut letzte mal muste ich immer alleine weggehen da waren sie ja dann nie dabei und jetzt kann ich ihnen das gleich schon oder habe ich das schon erfahrung gebracht ich reserviere dann dort zwei platze zum essen past ihnen das so)

Sentence 427:
0 Initial errors
0 on fringe, 0 iterations

Sentence 428:
0 Initial errors
0 on fringe, 0 iterations

Sentence 429:
0 Initial errors
0 on fringe, 0 iterations

Sentence 430:
6 Initial errors
0 on fringe, 2 iterations
4 Error:UNSET move
2 Error:Different label
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM ja)
			(DM ja)
			[01;31m(SIMPX[00m
				[01;36m(SIMPX[00m
					(VF das)
					(LK war)
					(MF sehr nett)[01;36m)[00m
				[01;36m(VF[00m [01;31m(NF[00m [01;33m(SIMPX[00m
					(NX
						(ADJX letztes)
						(NN mal))[01;31m)[00m[01;36m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				(LK mochte)
				(MF ich ganz gerne wieder)
				(VC hingehen)[01;31m)[00m) [01;33mSIMPX)[00m
		(SU nehmen wir wieder zwei einzelzimmer)))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['NF', 'LK', 'MF', 'VC'], 'mover info': [('NF', (6, 8))], 'old_family': ['VF', 'LK', 'MF', 'NF'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('PTKANT', 'PTKANT', 'PDS', 'VAFIN', 'ADV', 'ADJD', 'ADJA', 'NN', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'VVINF'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 14), 'movers': ['NF'], 'old_parent': 'SIMPX', 'end right siblings': ['LK', 'MF', 'VC'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			(DM ja)
			(DM ja)
			(SIMPX das war sehr nett)
			(SIMPX
				[01;36m(VF[00m [01;31m(NF[00m
					(NX
						(ADJX letztes)
						(NN mal))[01;31m)[00m[01;36m)[00m
				(LK mochte)
				(MF ich ganz gerne wieder)
				(VC hingehen)))
		(SU nehmen wir wieder zwei einzelzimmer)))
Step:Different label
{'family': ['VF', 'LK', 'MF', 'VC'], 'auto preterminal span': (6, 8), 'span': (6, 8), 'subtrees': ['NX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('ADJA', 'NN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('NF', 'VF')}
(TOP ja ja das war sehr nett letztes mal mochte ich ganz gerne wieder hingehen nehmen wir wieder zwei einzelzimmer)

Sentence 431:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX
				(MF
					(PX
						(APPR seit)
						(NX
							[01;31m(ADJX[00m
								(ADJA langerer)[01;31m)[00m
							(NN zeit)))
					(ADVX nicht mehr))
				(VC gesehen)))
		(SU jetzt ich wollte sie treffen um mit ihnen die geschaftsreise nach hannover zu planen)))
Step:Single Word Phrase
{'subtrees': ['ADJA'], 'family': ['ADJX', 'NN'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADJA', 'NN'), 'right siblings': ['NN'], 'parent': 'NX', 'auto preterminal span': (2, 4), 'span': (2, 3), 'left siblings': [], 'label': 'ADJX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP ja seit langerer zeit nicht mehr gesehen jetzt ich wollte sie treffen um mit ihnen die geschaftsreise nach hannover zu planen)

Sentence 432:
0 Initial errors
0 on fringe, 0 iterations

Sentence 433:
0 Initial errors
0 on fringe, 0 iterations

Sentence 434:
0 Initial errors
0 on fringe, 0 iterations

Sentence 435:
0 Initial errors
0 on fringe, 0 iterations

Sentence 436:
4 Initial errors
0 on fringe, 3 iterations
2 Error:Single Word Phrase
1 Error:UNSET remove
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM okay)
			(NX januar)
			[01;31m(SIMPX[00m
				(LV wenn ich in meinen terminkalender schaue)
				(VF da)
				(LK habe)
				(MF
					(NX ich)
					[01;36m(ADJX[00m [01;31m(ADVX[00m
						(ADV absurderweise)[01;31m)[00m[01;36m)[00m
					(NX freitag und samstag))[01;31m)[00m
			(SIMPX aber ich denke unsre geschaftspartner haben samstag kein interesse an unserm besuch))
		(SU
			[01;31m(SIMPX[00m
				(VF dann)
				(VXFIN ware)
				(LK hatte)
				(MF ich die erste moglichkeit wieder zwolfter dreizehnter januar)[01;31m)[00m)))
Step:Single Word Phrase
{'family': ['NX', 'ADJX', 'NX'], 'auto preterminal span': (11, 12), 'span': (11, 12), 'subtrees': ['ADV'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'ADJX')}
(TOP
	(TURN
		(SU
			(DM okay)
			(NX januar)
			[01;31m(SIMPX[00m
				(LV wenn ich in meinen terminkalender schaue)
				(VF da)
				(LK habe)
				(MF ich absurderweise freitag und samstag)[01;31m)[00m
			(SIMPX aber ich denke unsre geschaftspartner haben samstag kein interesse an unserm besuch))
		(SU
			[01;31m(SIMPX[00m
				(VF dann)
				(VXFIN ware)
				(LK hatte)
				(MF ich die erste moglichkeit wieder zwolfter dreizehnter januar)[01;31m)[00m)))
Step:UNSET remove
{'subtrees': ['LV', 'VF', 'LK', 'MF'], 'family': ['DM', 'NX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'NN', 'KOUS', 'PPER', 'APPR', 'PPOSAT', 'NN', 'VVFIN', 'ADV', 'VAFIN', 'PPER', 'ADV', 'NN', 'KON', 'NN', 'KON', 'PPER', 'VVFIN', 'PPOSAT', 'NN', 'VAFIN', 'NN', 'PIAT', 'NN', 'APPR', 'PPOSAT', 'NN'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 27), 'span': (2, 15), 'left siblings': ['DM', 'NX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU okay januar wenn ich in meinen terminkalender schaue da habe ich absurderweise freitag und samstag aber ich denke unsre geschaftspartner haben samstag kein interesse an unserm besuch)
		(SU
			[01;31m(SIMPX[00m
				(VF dann)
				(VXFIN ware)
				(LK hatte)
				(MF ich die erste moglichkeit wieder zwolfter dreizehnter januar)[01;31m)[00m)))
Step:Unary
{'subtrees': ['VF', 'VXFIN', 'LK', 'MF'], 'family': ['SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'VAFIN', 'PPER', 'ART', 'ADJA', 'NN', 'ADV', 'ADJA', 'ADJA', 'NN'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (27, 38), 'span': (27, 38), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP okay januar wenn ich in meinen terminkalender schaue da habe ich absurderweise freitag und samstag aber ich denke unsre geschaftspartner haben samstag kein interesse an unserm besuch dann ware hatte ich die erste moglichkeit wieder zwolfter dreizehnter januar)

Sentence 437:
0 Initial errors
0 on fringe, 0 iterations

Sentence 438:
0 Initial errors
0 on fringe, 0 iterations

Sentence 439:
5 Initial errors
0 on fringe, 4 iterations
2 Error:Clause Attachment
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET add
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU konnen wir also konnen wir probieren)
		[01;36m(SIMPX[00m
			(SU [01;33m(SIMPX[00m
				[01;31m(SIMPX[00m
					(C wenn)
					[01;31m(MF[00m
						(NX ich)
						(NX die verbindung) [01;33mSIMPX)[00m
						[01;36m(DM[00m
							(ADVX
								(ADV also))[01;36m)[00m[01;31m)[00m[01;31m)[00m
				(SIMPX wir konnen zug oder flugzeug nehmen))[01;36m)[00m
		(SU was was ist dir lieber)))
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['C', 'MF', 'SIMPX'], 'mover info': [('SIMPX', (11, 17))], 'old_family': ['SIMPX', 'SIMPX'], 'start left siblings': ['SIMPX'], 'auto preterminals': ('KOUS', 'PPER', 'ART', 'NN', 'ADV', 'PPER', 'VMFIN', 'NN', 'KON', 'NN', 'VVINF'), 'start right siblings': [], 'end left siblings': ['C', 'MF'], 'auto preterminal span': (6, 17), 'movers': ['SIMPX'], 'old_parent': 'SU', 'end right siblings': [], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU konnen wir also konnen wir probieren)
		(SU [01;33m(SIMPX[00m
			(SIMPX
				(C wenn)
				[01;31m(MF[00m
					(NX ich)
					(NX die verbindung) [01;33mSIMPX)[00m
					[01;36m(DM[00m
						(ADVX
							(ADV also))[01;36m)[00m[01;31m)[00m
				(SIMPX wir konnen zug oder flugzeug nehmen)))
		(SU was was ist dir lieber)))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['NX', 'NX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV',), 'right siblings': [], 'left siblings': [(NX (PPER ich)), (NX (ART die) (NN verbindung))], 'auto preterminal span': (10, 11), 'span': (10, 11), 'parent': 'MF', 'label': 'DM', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU konnen wir also konnen wir probieren)
		(SU [01;33m(SIMPX[00m
			(SIMPX
				(C wenn)
				[01;31m(MF[00m
					(NX ich)
					(NX die verbindung) [01;33mSIMPX)[00m
					(DM also)[01;31m)[00m
				(SIMPX wir konnen zug oder flugzeug nehmen)))
		(SU was was ist dir lieber)))
Step:UNSET remove
{'subtrees': ['NX', 'NX', 'DM'], 'family': ['C', 'MF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ART', 'NN', 'ADV', 'PPER', 'VMFIN', 'NN', 'KON', 'NN', 'VVINF'), 'right siblings': ['SIMPX'], 'parent': 'SIMPX', 'auto preterminal span': (6, 17), 'span': (7, 11), 'left siblings': ['C'], 'label': 'MF', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU konnen wir also konnen wir probieren)
		(SU
			(SIMPX
				[01;36m(SIMPX[00m
					(C wenn)
					(NX ich)
					(NX die verbindung)[01;36m)[00m
				(DM also)
				(SIMPX wir konnen zug oder flugzeug nehmen)))
		(SU was was ist dir lieber)))
Step:UNSET add
{'subtrees': ['C', 'NX', 'NX'], 'family': ['SIMPX', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ART', 'NN'), 'right siblings': [(DM (ADVX (ADV also))), (SIMPX (VF (NX (PPER wir))) (LK (VXFIN (VMFIN konnen))) (MF (NX (NX (NN zug)) (KON oder) (NX (NN flugzeug)))) (VC (VXINF (VVINF nehmen))))], 'left siblings': [], 'auto preterminal span': (6, 10), 'span': (6, 10), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP konnen wir also konnen wir probieren wenn ich die verbindung also wir konnen zug oder flugzeug nehmen was was ist dir lieber)

Sentence 440:
8 Initial errors
0 on fringe, 4 iterations
3 Error:Modifier Attachment
2 Error:Single Word Phrase
1 Error:UNSET remove
2 Error:NP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU der muste ja der muste eigentlich reichen)
		(SU
			(DM also)
			(SIMPX munchen hannover das sind knapp funf stunden)
			(DM ja)
			(DM also)
			(DM also)
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					[01;31m(NX[00m
						[01;31m(ADJX[00m
							[01;36m(NX[00m [01;31m(ADJX[00m
								(CARD vier)[01;31m)[00m[01;36m)[00m
							[01;33m(SIMPX (NX[00m (ADJX viereinhalb)[01;31m)[00m
						(NN stunden)[01;31m)[00m[01;31m)[00m [01;33mNX)[00m
				(LK sehe)
				(MF ich)[01;31m)[00m) [01;33mSIMPX)[00m
		(SU viereinhalb stunden fahrzeit nach hannover)))
Step:Modifier Attachment
{'new_parent': 'VF', 'new_family': ['ADJX', 'NX'], 'mover info': [('ADJX', (18, 19))], 'old_family': ['ADJX', 'ADJX'], 'start left siblings': [], 'auto preterminals': ('CARD', 'CARD', 'NN'), 'start right siblings': ['ADJX'], 'end left siblings': [], 'auto preterminal span': (18, 21), 'movers': ['ADJX'], 'old_parent': 'ADJX', 'POS confusion': ('CARD', 'CARD'), 'end right siblings': ['NX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU der muste ja der muste eigentlich reichen)
		(SU
			(DM also)
			(SIMPX munchen hannover das sind knapp funf stunden)
			(DM ja)
			(DM also)
			(DM also)
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					[01;36m(NX[00m [01;31m(ADJX[00m
						(CARD vier)[01;31m)[00m[01;36m)[00m
					[01;33m(SIMPX[00m (NX viereinhalb stunden)[01;31m)[00m
				(LK sehe)
				(MF ich)[01;31m)[00m) [01;33mSIMPX)[00m
		(SU viereinhalb stunden fahrzeit nach hannover)))
Step:Single Word Phrase
{'family': ['NX', 'NX'], 'auto preterminal span': (18, 19), 'span': (18, 19), 'subtrees': ['CARD'], 'parent': 'VF', 'over_word': True, 'auto preterminals': ('CARD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'NX')}
(TOP
	(TURN
		(SU der muste ja der muste eigentlich reichen)
		(SU
			(DM also)
			(SIMPX munchen hannover das sind knapp funf stunden)
			(DM ja)
			(DM also)
			(DM also)
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(NX vier)
					[01;33m(SIMPX[00m (NX viereinhalb stunden)[01;31m)[00m
				(LK sehe)
				(MF ich)[01;31m)[00m) [01;33mSIMPX)[00m
		(SU viereinhalb stunden fahrzeit nach hannover)))
Step:UNSET remove
{'subtrees': ['NX', 'NX'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'CARD', 'NN', 'VVFIN', 'PPER'), 'right siblings': ['LK', 'MF'], 'parent': 'SIMPX', 'auto preterminal span': (18, 23), 'span': (18, 21), 'left siblings': [], 'label': 'VF', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU der muste ja der muste eigentlich reichen)
		(SU
			(DM also)
			(SIMPX munchen hannover das sind knapp funf stunden)
			(DM ja)
			(DM also)
			(DM also)
			[01;31m(SIMPX[00m
				(NX vier)
				[01;36m(SIMPX[00m
					(NX viereinhalb stunden)
					(LK sehe)
					(MF ich)[01;36m)[00m[01;31m)[00m)
		(SU viereinhalb stunden fahrzeit nach hannover)))
Step:NP Attachment
{'new_parent': 'SU', 'new_family': ['DM', 'SIMPX', 'DM', 'DM', 'DM', 'NX', 'SIMPX'], 'mover info': [('NX', (18, 19))], 'old_family': ['NX', 'NX', 'LK', 'MF'], 'start left siblings': [], 'auto preterminals': ('ADV', 'NE', 'NE', 'PDS', 'VAFIN', 'ADV', 'CARD', 'NN', 'PTKANT', 'ADV', 'ADV', 'CARD', 'CARD', 'NN', 'VVFIN', 'PPER'), 'start right siblings': ['NX', 'LK', 'MF'], 'end left siblings': ['DM', 'SIMPX', 'DM', 'DM', 'DM'], 'auto preterminal span': (7, 23), 'movers': ['NX'], 'old_parent': 'SIMPX', 'POS confusion': ('CARD', 'CARD'), 'end right siblings': ['SIMPX'], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP der muste ja der muste eigentlich reichen also munchen hannover das sind knapp funf stunden ja also also vier viereinhalb stunden sehe ich viereinhalb stunden fahrzeit nach hannover)

Sentence 441:
30 Initial errors
0 on fringe, 26 iterations
3 Error:Modifier Attachment
2 Error:Different label
2 Error:PP Attachment
1 Error:Co-ordination
1 Error:UNSET add
1 Error:Single Word Phrase
1 Error:UNSET add
1 Error:Unary
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:Clause Attachment
1 Error:UNSET add
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:UNSET add
1 Error:Modifier Attachment
1 Error:Co-ordination
1 Error:UNSET remove
1 Error:UNSET add
1 Error:Unary
1 Error:Clause Attachment
1 Error:Modifier Attachment
1 Error:Unary
1 Error:UNSET add
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;36m(SU[00m
			(SU
				(DM okay)
				[01;31m(SIMPX[00m
					[01;31m(LV[00m
						(NX
							(ADJX siebenundzwanzigster)
							(NN januar))[01;31m)[00m
					[01;33m(SIMPX[00m (VF dann)
					[01;31m(FKOORD[00m
						[01;31m(LKMVC[00m
							(LK fahren)
							(MF wir)
							(VC los)[01;31m)[00m [01;33mSIMPX)[00m
						(APPR um)
						[01;36m(SIMPX[00m [01;31m(LKM[00m
							(LK nehmen)
							(MF den ice um zehn uhr)[01;31m)[00m[01;36m)[00m
						[01;36m(SIMPX[00m
							[01;31m(LKM[00m
								(LK sind)
								(MF um funfzehn uhr in hannover)[01;31m)[00m
							(LKM nehmen da ein taxi)[01;36m)[00m
						(KON und)
						[01;36m(LKMVC[00m
							[01;36m(KOORD[00m
								(KON und)[01;36m)[00m
							(KON und)
							(LKMVC kommen rechtzeitig an)[01;36m)[00m[01;31m)[00m[01;31m)[00m
				(SIMPX und dann wurden wir am achtundzwanzigsten abends einfach wieder zuruckfahren))
			(SU da wurde ich vielleicht sagen wir nehmen das flugzeug)[01;36m)[00m
		(SU [01;33m(SIMPX[00m
			[01;36m(SIMPX[00m
				[01;31m(SIMPX[00m
					(VF da)
					(LK gibt)
					[01;31m(MF[00m
						(NX es)
						(NX einen flug) [01;33mSIMPX)[00m
						[01;33m(NX[00m (NX siebzehn uhr zwanzig)[01;31m)[00m[01;31m)[00m
				[01;31m(ADJX[00m
					(ADVX sogar)
					(ADJX stundlich bis einundzwanzig uhr zwanzig)[01;31m)[00m [01;33mNX)[00m[01;36m)[00m
			(SIMPX
				(VF das)
				(LK heist)
				(NF [01;33m(SIMPX (NF (SIMPX (NF[00m
					(SIMPX
						(VF wir)
						[01;31m(FKOORD[00m
							[01;31m(LKMVC[00m
								(LK konnen)
								[01;31m(MF[00m
									(ADVX auch)
									(ADVX noch)
									[01;36m(VF[00m
										(PX
											(APPR um)
											(NX zwanzig nach acht)) [01;33mNF) SIMPX)[00m[01;36m)[00m
									[01;31m(SIMPX[00m [01;33m(LKMVC[00m
										(LK konnen)
										[01;31m(MF[00m [01;33m(MF[00m
											(NX
												(PPER wir))[01;31m)[00m[01;31m)[00m
									(PX in hannover)[01;31m)[00m [01;33mMF)[00m
								(VC abfliegen)[01;31m)[00m [01;33mLKMVC) NF) SIMPX)[00m
							(KON und)
							(LKM sind in siebzig minuten in munchen)[01;31m)[00m))))))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'NX', 'NX', 'ADJX'], 'mover info': [('ADJX', (57, 63))], 'old_family': ['SIMPX', 'ADJX', 'SIMPX'], 'start left siblings': ['SIMPX'], 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'ART', 'NN', 'CARD', 'NN', 'CARD', 'ADV', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'PDS', 'VVFIN', 'PPER', 'VMFIN', 'ADV', 'ADV', 'APPR', 'CARD', 'APPR', 'CARD', 'VMFIN', 'PPER', 'APPR', 'NE', 'VVINF', 'KON', 'VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE'), 'start right siblings': ['SIMPX'], 'end left siblings': ['NX', 'NX', 'NX'], 'auto preterminal span': (49, 85), 'adding node already present': False, 'movers': ['ADJX'], 'old_parent': 'SU', 'added and moved': True, 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'VF'}
(TOP
	(TURN
		[01;36m(SU[00m
			(SU
				(DM okay)
				[01;31m(SIMPX[00m
					[01;31m(LV[00m
						(NX
							(ADJX siebenundzwanzigster)
							(NN januar))[01;31m)[00m
					[01;33m(SIMPX[00m (VF dann)
					[01;31m(FKOORD[00m
						[01;31m(LKMVC[00m
							(LK fahren)
							(MF wir)
							(VC los)[01;31m)[00m [01;33mSIMPX)[00m
						(APPR um)
						[01;36m(SIMPX[00m [01;31m(LKM[00m
							(LK nehmen)
							(MF den ice um zehn uhr)[01;31m)[00m[01;36m)[00m
						[01;36m(SIMPX[00m
							[01;31m(LKM[00m
								(LK sind)
								(MF um funfzehn uhr in hannover)[01;31m)[00m
							(LKM nehmen da ein taxi)[01;36m)[00m
						(KON und)
						[01;36m(LKMVC[00m
							[01;36m(KOORD[00m
								(KON und)[01;36m)[00m
							(KON und)
							(LKMVC kommen rechtzeitig an)[01;36m)[00m[01;31m)[00m[01;31m)[00m
				(SIMPX und dann wurden wir am achtundzwanzigsten abends einfach wieder zuruckfahren))
			(SU da wurde ich vielleicht sagen wir nehmen das flugzeug)[01;36m)[00m
		(SU [01;33m(SIMPX[00m
			(SIMPX
				(VF da)
				(LK gibt)
				[01;31m(MF[00m
					(NX es)
					(NX einen flug) [01;33mSIMPX)[00m
					(NX
						(NX siebzehn uhr zwanzig)
						[01;31m(ADJX[00m
							(ADVX sogar)
							(ADJX stundlich bis einundzwanzig uhr zwanzig)[01;31m)[00m)[01;31m)[00m)
			(SIMPX
				(VF das)
				(LK heist)
				(NF [01;33m(SIMPX (NF (SIMPX (NF[00m
					(SIMPX
						(VF wir)
						[01;31m(FKOORD[00m
							[01;31m(LKMVC[00m
								(LK konnen)
								[01;31m(MF[00m
									(ADVX auch)
									(ADVX noch)
									[01;36m(VF[00m
										(PX
											(APPR um)
											(NX zwanzig nach acht)) [01;33mNF) SIMPX)[00m[01;36m)[00m
									[01;31m(SIMPX[00m [01;33m(LKMVC[00m
										(LK konnen)
										[01;31m(MF[00m [01;33m(MF[00m
											(NX
												(PPER wir))[01;31m)[00m[01;31m)[00m
									(PX in hannover)[01;31m)[00m [01;33mMF)[00m
								(VC abfliegen)[01;31m)[00m [01;33mLKMVC) NF) SIMPX)[00m
							(KON und)
							(LKM sind in siebzig minuten in munchen)[01;31m)[00m))))))
Step:Different label
{'family': ['LKMVC', 'APPR', 'SIMPX', 'LKM', 'LKM', 'KON', 'KON', 'KON', 'LKMVC'], 'auto preterminal span': (8, 14), 'span': (8, 14), 'subtrees': ['LK', 'MF'], 'parent': 'FKOORD', 'over_word': False, 'auto preterminals': ('VVFIN', 'ART', 'NE', 'APPR', 'CARD', 'NN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('LKM', 'SIMPX')}
(TOP
	(TURN
		[01;36m(SU[00m
			(SU
				(DM okay)
				[01;31m(SIMPX[00m
					[01;31m(LV[00m
						(NX
							(ADJX siebenundzwanzigster)
							(NN januar))[01;31m)[00m
					[01;33m(SIMPX[00m (VF dann)
					[01;31m(FKOORD[00m
						[01;31m(LKMVC[00m
							(LK fahren)
							(MF wir)
							(VC los)[01;31m)[00m [01;33mSIMPX)[00m
						(APPR um)
						(SIMPX nehmen den ice um zehn uhr)
						[01;36m(SIMPX[00m
							[01;31m(LKM[00m
								(LK sind)
								(MF um funfzehn uhr in hannover)[01;31m)[00m
							(LKM nehmen da ein taxi)[01;36m)[00m
						(KON und)
						[01;36m(LKMVC[00m
							[01;36m(KOORD[00m
								(KON und)[01;36m)[00m
							(KON und)
							(LKMVC kommen rechtzeitig an)[01;36m)[00m[01;31m)[00m[01;31m)[00m
				(SIMPX und dann wurden wir am achtundzwanzigsten abends einfach wieder zuruckfahren))
			(SU da wurde ich vielleicht sagen wir nehmen das flugzeug)[01;36m)[00m
		(SU [01;33m(SIMPX[00m
			(SIMPX
				(VF da)
				(LK gibt)
				[01;31m(MF[00m
					(NX es)
					(NX einen flug) [01;33mSIMPX)[00m
					(NX
						(NX siebzehn uhr zwanzig)
						[01;31m(ADJX[00m
							(ADVX sogar)
							(ADJX stundlich bis einundzwanzig uhr zwanzig)[01;31m)[00m)[01;31m)[00m)
			(SIMPX
				(VF das)
				(LK heist)
				(NF [01;33m(SIMPX (NF (SIMPX (NF[00m
					(SIMPX
						(VF wir)
						[01;31m(FKOORD[00m
							[01;31m(LKMVC[00m
								(LK konnen)
								[01;31m(MF[00m
									(ADVX auch)
									(ADVX noch)
									[01;36m(VF[00m
										(PX
											(APPR um)
											(NX zwanzig nach acht)) [01;33mNF) SIMPX)[00m[01;36m)[00m
									[01;31m(SIMPX[00m [01;33m(LKMVC[00m
										(LK konnen)
										[01;31m(MF[00m [01;33m(MF[00m
											(NX
												(PPER wir))[01;31m)[00m[01;31m)[00m
									(PX in hannover)[01;31m)[00m [01;33mMF)[00m
								(VC abfliegen)[01;31m)[00m [01;33mLKMVC) NF) SIMPX)[00m
							(KON und)
							(LKM sind in siebzig minuten in munchen)[01;31m)[00m))))))
Step:PP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'PX'], 'mover info': [('PX', (75, 77))], 'old_family': ['ADVX', 'ADVX', 'PX', 'SIMPX', 'PX'], 'start left siblings': ['ADVX', 'ADVX', 'PX', 'SIMPX'], 'auto preterminals': ('ADV', 'ADV', 'APPR', 'CARD', 'APPR', 'CARD', 'VMFIN', 'PPER', 'APPR', 'NE'), 'start right siblings': [], 'end left siblings': ['NX'], 'auto preterminal span': (67, 77), 'movers': ['PX'], 'old_parent': 'MF', 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;36m(SU[00m
			(SU
				(DM okay)
				[01;31m(SIMPX[00m
					[01;31m(LV[00m
						(NX
							(ADJX siebenundzwanzigster)
							(NN januar))[01;31m)[00m
					[01;33m(SIMPX[00m (VF dann)
					[01;31m(FKOORD[00m
						[01;31m(LKMVC[00m
							(LK fahren)
							(MF wir)
							(VC los)[01;31m)[00m [01;33mSIMPX)[00m
						(APPR um)
						(SIMPX nehmen den ice um zehn uhr)
						[01;36m(SIMPX[00m
							[01;31m(LKM[00m
								(LK sind)
								(MF um funfzehn uhr in hannover)[01;31m)[00m
							(LKM nehmen da ein taxi)[01;36m)[00m
						(KON und)
						[01;36m(LKMVC[00m
							[01;36m(KOORD[00m
								(KON und)[01;36m)[00m
							(KON und)
							(LKMVC kommen rechtzeitig an)[01;36m)[00m[01;31m)[00m[01;31m)[00m
				(SIMPX und dann wurden wir am achtundzwanzigsten abends einfach wieder zuruckfahren))
			(SU da wurde ich vielleicht sagen wir nehmen das flugzeug)[01;36m)[00m
		(SU [01;33m(SIMPX[00m
			(SIMPX
				(VF da)
				(LK gibt)
				[01;31m(MF[00m
					(NX es)
					(NX einen flug) [01;33mSIMPX)[00m
					(NX
						(NX siebzehn uhr zwanzig)
						[01;31m(ADJX[00m
							(ADVX sogar)
							(ADJX stundlich bis einundzwanzig uhr zwanzig)[01;31m)[00m)[01;31m)[00m)
			(SIMPX
				(VF das)
				(LK heist)
				(NF [01;33m(SIMPX (NF (SIMPX (NF[00m
					(SIMPX
						(VF wir)
						[01;31m(FKOORD[00m
							[01;31m(LKMVC[00m
								(LK konnen)
								[01;31m(MF[00m
									(ADVX auch)
									(ADVX noch)
									[01;36m(VF[00m
										(PX
											(APPR um)
											(NX zwanzig nach acht)) [01;33mNF) SIMPX)[00m[01;36m)[00m
									[01;31m(SIMPX[00m [01;33m(LKMVC[00m
										(LK konnen)
										(MF wir in hannover)[01;31m)[00m[01;31m)[00m
								(VC abfliegen)[01;31m)[00m [01;33mLKMVC) NF) SIMPX)[00m
							(KON und)
							(LKM sind in siebzig minuten in munchen)[01;31m)[00m))))))
Step:Co-ordination
{'subtrees': ['SU', 'SU'], 'family': ['SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADJA', 'NN', 'ADV', 'VVFIN', 'PPER', 'PTKVZ', 'APPR', 'VVFIN', 'ART', 'NE', 'APPR', 'CARD', 'NN', 'VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE', 'VVFIN', 'ADV', 'ART', 'NN', 'KON', 'KON', 'KON', 'VVFIN', 'ADJD', 'PTKVZ', 'KON', 'ADV', 'VAFIN', 'PPER', 'APPRART', 'NN', 'ADV', 'ADV', 'ADV', 'VVINF', 'ADV', 'VAFIN', 'PPER', 'ADV', 'VVINF', 'PPER', 'VVFIN', 'ART', 'NN'), 'right siblings': [(SU (SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VVFIN gibt))) (MF (NX (PPER es)) (NX (ART einen) (NN flug)) (NX (NX (NX (ADJX (CARD siebzehn)) (NN uhr)) (ADJX (CARD zwanzig))) (ADJX (ADVX (ADV sogar)) (ADJX (ADJX (ADJD stundlich)) (PX (APPR bis) (NX (NX (ADJX (CARD einundzwanzig)) (NN uhr)) (ADJX (CARD zwanzig))))))))) (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VVFIN heist))) (NF (SIMPX (VF (NX (PPER wir))) (FKOORD (LKMVC (LK (VXFIN (VMFIN konnen))) (MF (ADVX (ADV auch)) (ADVX (ADV noch)) (PX (APPR um) (NX (NX (CARD zwanzig)) (PX (APPR nach) (NX (CARD acht))))) (SIMPX (LK (VXFIN (VMFIN konnen))) (MF (NX (PPER wir)) (PX (APPR in) (NX (NE hannover)))))) (VC (VXINF (VVINF abfliegen)))) (KON und) (LKM (LK (VXFIN (VAFIN sind))) (MF (PX (APPR in) (NX (ADJX (CARD siebzig)) (NN minuten))) (PX (APPR in) (NX (NE munchen))))))))))], 'left siblings': [], 'auto preterminal span': (0, 49), 'span': (0, 49), 'parent': 'TURN', 'label': 'SU', 'classified_type': 'Co-ordination', 'type': 'add'}
(TOP
	(TURN
		(SU
			(SU
				(DM okay)
				[01;31m(SIMPX[00m
					[01;31m(LV[00m
						(NX
							(ADJX siebenundzwanzigster)
							(NN januar))[01;31m)[00m
					[01;33m(SIMPX[00m (VF dann)
					[01;31m(FKOORD[00m
						[01;31m(LKMVC[00m
							(LK fahren)
							(MF wir)
							(VC los)[01;31m)[00m [01;33mSIMPX)[00m
						(APPR um)
						(SIMPX nehmen den ice um zehn uhr)
						[01;36m(SIMPX[00m
							[01;31m(LKM[00m
								(LK sind)
								(MF um funfzehn uhr in hannover)[01;31m)[00m
							(LKM nehmen da ein taxi)[01;36m)[00m
						(KON und)
						[01;36m(LKMVC[00m
							[01;36m(KOORD[00m
								(KON und)[01;36m)[00m
							(KON und)
							(LKMVC kommen rechtzeitig an)[01;36m)[00m[01;31m)[00m[01;31m)[00m
				(SIMPX und dann wurden wir am achtundzwanzigsten abends einfach wieder zuruckfahren))
			(SU da wurde ich vielleicht sagen wir nehmen das flugzeug))
		(SU [01;33m(SIMPX[00m
			(SIMPX
				(VF da)
				(LK gibt)
				[01;31m(MF[00m
					(NX es)
					(NX einen flug) [01;33mSIMPX)[00m
					(NX
						(NX siebzehn uhr zwanzig)
						[01;31m(ADJX[00m
							(ADVX sogar)
							(ADJX stundlich bis einundzwanzig uhr zwanzig)[01;31m)[00m)[01;31m)[00m)
			(SIMPX
				(VF das)
				(LK heist)
				(NF [01;33m(SIMPX (NF (SIMPX (NF[00m
					(SIMPX
						(VF wir)
						[01;31m(FKOORD[00m
							[01;31m(LKMVC[00m
								(LK konnen)
								[01;31m(MF[00m
									(ADVX auch)
									(ADVX noch)
									[01;36m(VF[00m
										(PX
											(APPR um)
											(NX zwanzig nach acht)) [01;33mNF) SIMPX)[00m[01;36m)[00m
									[01;31m(SIMPX[00m [01;33m(LKMVC[00m
										(LK konnen)
										(MF wir in hannover)[01;31m)[00m[01;31m)[00m
								(VC abfliegen)[01;31m)[00m [01;33mLKMVC) NF) SIMPX)[00m
							(KON und)
							(LKM sind in siebzig minuten in munchen)[01;31m)[00m))))))
Step:UNSET add
{'subtrees': ['LKM', 'LKM'], 'family': ['LKMVC', 'APPR', 'SIMPX', 'SIMPX', 'KON', 'KON', 'KON', 'LKMVC'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE', 'VVFIN', 'ADV', 'ART', 'NN'), 'right siblings': [(KON und), (KON und), (KON und), (LKMVC (LK (VXFIN (VVFIN kommen))) (MF (ADJX (ADJD rechtzeitig))) (VC (PTKVZ an)))], 'left siblings': [(LKMVC (LK (VXFIN (VVFIN fahren))) (MF (NX (PPER wir))) (VC (PTKVZ los))), (APPR um), (SIMPX (LK (VXFIN (VVFIN nehmen))) (MF (NX (ART den) (NE ice)) (PX (APPR um) (NX (ADJX (CARD zehn)) (NN uhr)))))], 'auto preterminal span': (14, 24), 'span': (14, 24), 'parent': 'FKOORD', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU
			(SU
				(DM okay)
				[01;31m(SIMPX[00m
					[01;31m(LV[00m
						(NX
							(ADJX siebenundzwanzigster)
							(NN januar))[01;31m)[00m
					[01;33m(SIMPX[00m (VF dann)
					[01;31m(FKOORD[00m
						[01;31m(LKMVC[00m
							(LK fahren)
							(MF wir)
							(VC los)[01;31m)[00m [01;33mSIMPX)[00m
						(APPR um)
						(SIMPX nehmen den ice um zehn uhr)
						(SIMPX
							[01;31m(LKM[00m
								(LK sind)
								(MF um funfzehn uhr in hannover)[01;31m)[00m
							(LKM nehmen da ein taxi))
						(KON und)
						[01;36m(LKMVC[00m
							[01;36m(KOORD[00m
								(KON und)[01;36m)[00m
							(KON und)
							(LKMVC kommen rechtzeitig an)[01;36m)[00m[01;31m)[00m[01;31m)[00m
				(SIMPX und dann wurden wir am achtundzwanzigsten abends einfach wieder zuruckfahren))
			(SU da wurde ich vielleicht sagen wir nehmen das flugzeug))
		(SU [01;33m(SIMPX[00m
			(SIMPX
				(VF da)
				(LK gibt)
				[01;31m(MF[00m
					(NX es)
					(NX einen flug) [01;33mSIMPX)[00m
					(NX
						(NX siebzehn uhr zwanzig)
						[01;31m(ADJX[00m
							(ADVX sogar)
							(ADJX stundlich bis einundzwanzig uhr zwanzig)[01;31m)[00m)[01;31m)[00m)
			(SIMPX
				(VF das)
				(LK heist)
				(NF [01;33m(SIMPX (NF (SIMPX (NF[00m
					(SIMPX
						(VF wir)
						[01;31m(FKOORD[00m
							[01;31m(LKMVC[00m
								(LK konnen)
								[01;31m(MF[00m
									(ADVX auch)
									(ADVX noch)
									[01;36m(VF[00m
										(PX
											(APPR um)
											(NX zwanzig nach acht)) [01;33mNF) SIMPX)[00m[01;36m)[00m
									[01;31m(SIMPX[00m [01;33m(LKMVC[00m
										(LK konnen)
										(MF wir in hannover)[01;31m)[00m[01;31m)[00m
								(VC abfliegen)[01;31m)[00m [01;33mLKMVC) NF) SIMPX)[00m
							(KON und)
							(LKM sind in siebzig minuten in munchen)[01;31m)[00m))))))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['LKMVC', 'APPR', 'SIMPX', 'SIMPX', 'KON', 'KOORD', 'KON', 'LKMVC'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON',), 'right siblings': [(KON und), (LKMVC (LK (VXFIN (VVFIN kommen))) (MF (ADJX (ADJD rechtzeitig))) (VC (PTKVZ an)))], 'left siblings': [(LKMVC (LK (VXFIN (VVFIN fahren))) (MF (NX (PPER wir))) (VC (PTKVZ los))), (APPR um), (SIMPX (LK (VXFIN (VVFIN nehmen))) (MF (NX (ART den) (NE ice)) (PX (APPR um) (NX (ADJX (CARD zehn)) (NN uhr))))), (SIMPX (LKM (LK (VXFIN (VAFIN sind))) (MF (PX (APPR um) (NX (ADJX (CARD funfzehn)) (NN uhr))) (PX (APPR in) (NX (NE hannover))))) (LKM (LK (VXFIN (VVFIN nehmen))) (MF (ADVX (ADV da)) (NX (ART ein) (NN taxi))))), (KON und)], 'auto preterminal span': (25, 26), 'span': (25, 26), 'parent': 'FKOORD', 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SU
			(SU
				(DM okay)
				[01;31m(SIMPX[00m
					[01;31m(LV[00m
						(NX
							(ADJX siebenundzwanzigster)
							(NN januar))[01;31m)[00m
					[01;33m(SIMPX[00m (VF dann)
					[01;31m(FKOORD[00m
						[01;31m(LKMVC[00m
							(LK fahren)
							(MF wir)
							(VC los)[01;31m)[00m [01;33mSIMPX)[00m
						(APPR um)
						(SIMPX nehmen den ice um zehn uhr)
						(SIMPX
							[01;31m(LKM[00m
								(LK sind)
								(MF um funfzehn uhr in hannover)[01;31m)[00m
							(LKM nehmen da ein taxi))
						(KON und)
						[01;36m(LKMVC[00m
							(KOORD und)
							(KON und)
							(LKMVC kommen rechtzeitig an)[01;36m)[00m[01;31m)[00m[01;31m)[00m
				(SIMPX und dann wurden wir am achtundzwanzigsten abends einfach wieder zuruckfahren))
			(SU da wurde ich vielleicht sagen wir nehmen das flugzeug))
		(SU [01;33m(SIMPX[00m
			(SIMPX
				(VF da)
				(LK gibt)
				[01;31m(MF[00m
					(NX es)
					(NX einen flug) [01;33mSIMPX)[00m
					(NX
						(NX siebzehn uhr zwanzig)
						[01;31m(ADJX[00m
							(ADVX sogar)
							(ADJX stundlich bis einundzwanzig uhr zwanzig)[01;31m)[00m)[01;31m)[00m)
			(SIMPX
				(VF das)
				(LK heist)
				(NF [01;33m(SIMPX (NF (SIMPX (NF[00m
					(SIMPX
						(VF wir)
						[01;31m(FKOORD[00m
							[01;31m(LKMVC[00m
								(LK konnen)
								[01;31m(MF[00m
									(ADVX auch)
									(ADVX noch)
									[01;36m(VF[00m
										(PX
											(APPR um)
											(NX zwanzig nach acht)) [01;33mNF) SIMPX)[00m[01;36m)[00m
									[01;31m(SIMPX[00m [01;33m(LKMVC[00m
										(LK konnen)
										(MF wir in hannover)[01;31m)[00m[01;31m)[00m
								(VC abfliegen)[01;31m)[00m [01;33mLKMVC) NF) SIMPX)[00m
							(KON und)
							(LKM sind in siebzig minuten in munchen)[01;31m)[00m))))))
Step:UNSET add
{'subtrees': ['KOORD', 'KON', 'LKMVC'], 'family': ['LKMVC', 'APPR', 'SIMPX', 'SIMPX', 'KON', 'LKMVC'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'KON', 'VVFIN', 'ADJD', 'PTKVZ'), 'right siblings': [], 'left siblings': [(LKMVC (LK (VXFIN (VVFIN fahren))) (MF (NX (PPER wir))) (VC (PTKVZ los))), (APPR um), (SIMPX (LK (VXFIN (VVFIN nehmen))) (MF (NX (ART den) (NE ice)) (PX (APPR um) (NX (ADJX (CARD zehn)) (NN uhr))))), (SIMPX (LKM (LK (VXFIN (VAFIN sind))) (MF (PX (APPR um) (NX (ADJX (CARD funfzehn)) (NN uhr))) (PX (APPR in) (NX (NE hannover))))) (LKM (LK (VXFIN (VVFIN nehmen))) (MF (ADVX (ADV da)) (NX (ART ein) (NN taxi))))), (KON und)], 'auto preterminal span': (25, 30), 'span': (25, 30), 'parent': 'FKOORD', 'label': 'LKMVC', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU
			(SU
				(DM okay)
				[01;31m(SIMPX[00m
					[01;31m(LV[00m
						(NX
							(ADJX siebenundzwanzigster)
							(NN januar))[01;31m)[00m
					[01;33m(SIMPX[00m (VF dann)
					[01;31m(FKOORD[00m
						[01;31m(LKMVC[00m
							(LK fahren)
							(MF wir)
							(VC los)[01;31m)[00m [01;33mSIMPX)[00m
						(APPR um)
						(SIMPX nehmen den ice um zehn uhr)
						(SIMPX
							[01;31m(LKM[00m
								(LK sind)
								(MF um funfzehn uhr in hannover)[01;31m)[00m
							(LKM nehmen da ein taxi))
						(KON und)
						(LKMVC und und kommen rechtzeitig an)[01;31m)[00m[01;31m)[00m
				(SIMPX und dann wurden wir am achtundzwanzigsten abends einfach wieder zuruckfahren))
			(SU da wurde ich vielleicht sagen wir nehmen das flugzeug))
		(SU [01;33m(SIMPX[00m
			(SIMPX
				(VF da)
				(LK gibt)
				[01;31m(MF[00m
					(NX es)
					(NX einen flug) [01;33mSIMPX)[00m
					(NX
						(NX siebzehn uhr zwanzig)
						[01;31m(ADJX[00m
							(ADVX sogar)
							(ADJX stundlich bis einundzwanzig uhr zwanzig)[01;31m)[00m)[01;31m)[00m)
			(SIMPX
				(VF das)
				(LK heist)
				(NF [01;33m(SIMPX (NF (SIMPX (NF[00m
					(SIMPX
						(VF wir)
						[01;31m(FKOORD[00m
							[01;31m(LKMVC[00m
								(LK konnen)
								[01;31m(MF[00m
									(ADVX auch)
									(ADVX noch)
									[01;36m(VF[00m
										(PX
											(APPR um)
											(NX zwanzig nach acht)) [01;33mNF) SIMPX)[00m[01;36m)[00m
									[01;31m(SIMPX[00m [01;33m(LKMVC[00m
										(LK konnen)
										(MF wir in hannover)[01;31m)[00m[01;31m)[00m
								(VC abfliegen)[01;31m)[00m [01;33mLKMVC) NF) SIMPX)[00m
							(KON und)
							(LKM sind in siebzig minuten in munchen)[01;31m)[00m))))))
Step:Unary
{'subtrees': ['PX'], 'family': ['ADVX', 'ADVX', 'VF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'CARD', 'APPR', 'CARD'), 'right siblings': [(SIMPX (LK (VXFIN (VMFIN konnen))) (MF (NX (PPER wir)) (PX (APPR in) (NX (NE hannover)))))], 'left siblings': [(ADVX (ADV auch)), (ADVX (ADV noch))], 'auto preterminal span': (69, 73), 'span': (69, 73), 'parent': 'MF', 'label': 'VF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU
			(SU
				(DM okay)
				[01;31m(SIMPX[00m
					[01;31m(LV[00m
						(NX
							(ADJX siebenundzwanzigster)
							(NN januar))[01;31m)[00m
					[01;33m(SIMPX[00m (VF dann)
					[01;31m(FKOORD[00m
						[01;31m(LKMVC[00m
							(LK fahren)
							(MF wir)
							(VC los)[01;31m)[00m [01;33mSIMPX)[00m
						(APPR um)
						(SIMPX nehmen den ice um zehn uhr)
						(SIMPX
							[01;31m(LKM[00m
								(LK sind)
								(MF um funfzehn uhr in hannover)[01;31m)[00m
							(LKM nehmen da ein taxi))
						(KON und)
						(LKMVC und und kommen rechtzeitig an)[01;31m)[00m[01;31m)[00m
				(SIMPX und dann wurden wir am achtundzwanzigsten abends einfach wieder zuruckfahren))
			(SU da wurde ich vielleicht sagen wir nehmen das flugzeug))
		(SU [01;33m(SIMPX[00m
			(SIMPX
				(VF da)
				(LK gibt)
				[01;31m(MF[00m
					(NX es)
					(NX einen flug) [01;33mSIMPX)[00m
					(NX
						(NX siebzehn uhr zwanzig)
						[01;31m(ADJX[00m
							(ADVX sogar)
							(ADJX stundlich bis einundzwanzig uhr zwanzig)[01;31m)[00m)[01;31m)[00m)
			(SIMPX
				(VF das)
				(LK heist)
				(NF [01;33m(SIMPX (NF (SIMPX (NF[00m
					(SIMPX
						(VF wir)
						[01;31m(FKOORD[00m
							[01;31m(LKMVC[00m
								(LK konnen)
								[01;31m(MF[00m
									(ADVX auch)
									(ADVX noch)
									(VF um zwanzig nach acht) [01;33mNF) SIMPX)[00m
									[01;31m(SIMPX[00m [01;33m(LKMVC[00m
										(LK konnen)
										(MF wir in hannover)[01;31m)[00m[01;31m)[00m
								(VC abfliegen)[01;31m)[00m [01;33mLKMVC) NF) SIMPX)[00m
							(KON und)
							(LKM sind in siebzig minuten in munchen)[01;31m)[00m))))))
Step:Unary
{'subtrees': ['NX'], 'family': ['LV', 'VF', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJA', 'NN', 'ADV', 'VVFIN', 'PPER', 'PTKVZ', 'APPR', 'VVFIN', 'ART', 'NE', 'APPR', 'CARD', 'NN', 'VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE', 'VVFIN', 'ADV', 'ART', 'NN', 'KON', 'KON', 'KON', 'VVFIN', 'ADJD', 'PTKVZ'), 'right siblings': ['VF', 'FKOORD'], 'parent': 'SIMPX', 'auto preterminal span': (1, 30), 'span': (1, 3), 'left siblings': [], 'label': 'LV', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(SU
				(DM okay)
				[01;31m(SIMPX[00m
					(NX siebenundzwanzigster januar)
					[01;33m(SIMPX[00m (VF dann)
					[01;31m(FKOORD[00m
						[01;31m(LKMVC[00m
							(LK fahren)
							(MF wir)
							(VC los)[01;31m)[00m [01;33mSIMPX)[00m
						(APPR um)
						(SIMPX nehmen den ice um zehn uhr)
						(SIMPX
							[01;31m(LKM[00m
								(LK sind)
								(MF um funfzehn uhr in hannover)[01;31m)[00m
							(LKM nehmen da ein taxi))
						(KON und)
						(LKMVC und und kommen rechtzeitig an)[01;31m)[00m[01;31m)[00m
				(SIMPX und dann wurden wir am achtundzwanzigsten abends einfach wieder zuruckfahren))
			(SU da wurde ich vielleicht sagen wir nehmen das flugzeug))
		(SU [01;33m(SIMPX[00m
			(SIMPX
				(VF da)
				(LK gibt)
				[01;31m(MF[00m
					(NX es)
					(NX einen flug) [01;33mSIMPX)[00m
					(NX
						(NX siebzehn uhr zwanzig)
						[01;31m(ADJX[00m
							(ADVX sogar)
							(ADJX stundlich bis einundzwanzig uhr zwanzig)[01;31m)[00m)[01;31m)[00m)
			(SIMPX
				(VF das)
				(LK heist)
				(NF [01;33m(SIMPX (NF (SIMPX (NF[00m
					(SIMPX
						(VF wir)
						[01;31m(FKOORD[00m
							[01;31m(LKMVC[00m
								(LK konnen)
								[01;31m(MF[00m
									(ADVX auch)
									(ADVX noch)
									(VF um zwanzig nach acht) [01;33mNF) SIMPX)[00m
									[01;31m(SIMPX[00m [01;33m(LKMVC[00m
										(LK konnen)
										(MF wir in hannover)[01;31m)[00m[01;31m)[00m
								(VC abfliegen)[01;31m)[00m [01;33mLKMVC) NF) SIMPX)[00m
							(KON und)
							(LKM sind in siebzig minuten in munchen)[01;31m)[00m))))))
Step:UNSET remove
{'subtrees': ['NX', 'VF', 'FKOORD'], 'family': ['DM', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADJA', 'NN', 'ADV', 'VVFIN', 'PPER', 'PTKVZ', 'APPR', 'VVFIN', 'ART', 'NE', 'APPR', 'CARD', 'NN', 'VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE', 'VVFIN', 'ADV', 'ART', 'NN', 'KON', 'KON', 'KON', 'VVFIN', 'ADJD', 'PTKVZ', 'KON', 'ADV', 'VAFIN', 'PPER', 'APPRART', 'NN', 'ADV', 'ADV', 'ADV', 'VVINF'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 40), 'span': (1, 30), 'left siblings': ['DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(SU
				(DM okay)
				(NX siebenundzwanzigster januar)
				[01;33m(SIMPX[00m (VF dann)
				[01;31m(FKOORD[00m
					[01;31m(LKMVC[00m
						(LK fahren)
						(MF wir)
						(VC los)[01;31m)[00m [01;33mSIMPX)[00m
					(APPR um)
					(SIMPX nehmen den ice um zehn uhr)
					(SIMPX
						[01;31m(LKM[00m
							(LK sind)
							(MF um funfzehn uhr in hannover)[01;31m)[00m
						(LKM nehmen da ein taxi))
					(KON und)
					(LKMVC und und kommen rechtzeitig an)[01;31m)[00m
				(SIMPX und dann wurden wir am achtundzwanzigsten abends einfach wieder zuruckfahren))
			(SU da wurde ich vielleicht sagen wir nehmen das flugzeug))
		(SU [01;33m(SIMPX[00m
			(SIMPX
				(VF da)
				(LK gibt)
				[01;31m(MF[00m
					(NX es)
					(NX einen flug) [01;33mSIMPX)[00m
					(NX
						(NX siebzehn uhr zwanzig)
						[01;31m(ADJX[00m
							(ADVX sogar)
							(ADJX stundlich bis einundzwanzig uhr zwanzig)[01;31m)[00m)[01;31m)[00m)
			(SIMPX
				(VF das)
				(LK heist)
				(NF [01;33m(SIMPX (NF (SIMPX (NF[00m
					(SIMPX
						(VF wir)
						[01;31m(FKOORD[00m
							[01;31m(LKMVC[00m
								(LK konnen)
								[01;31m(MF[00m
									(ADVX auch)
									(ADVX noch)
									(VF um zwanzig nach acht) [01;33mNF) SIMPX)[00m
									[01;31m(SIMPX[00m [01;33m(LKMVC[00m
										(LK konnen)
										(MF wir in hannover)[01;31m)[00m[01;31m)[00m
								(VC abfliegen)[01;31m)[00m [01;33mLKMVC) NF) SIMPX)[00m
							(KON und)
							(LKM sind in siebzig minuten in munchen)[01;31m)[00m))))))
Step:UNSET remove
{'subtrees': ['LK', 'MF', 'VC'], 'family': ['LKMVC', 'APPR', 'SIMPX', 'SIMPX', 'KON', 'LKMVC'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'PTKVZ', 'APPR', 'VVFIN', 'ART', 'NE', 'APPR', 'CARD', 'NN', 'VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE', 'VVFIN', 'ADV', 'ART', 'NN', 'KON', 'KON', 'KON', 'VVFIN', 'ADJD', 'PTKVZ'), 'right siblings': ['APPR', 'SIMPX', 'SIMPX', 'KON', 'LKMVC'], 'parent': 'FKOORD', 'auto preterminal span': (4, 30), 'span': (4, 7), 'left siblings': [], 'label': 'LKMVC', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(SU
				(DM okay)
				(NX siebenundzwanzigster januar)
				[01;33m(SIMPX[00m (VF dann)
				[01;31m(FKOORD[00m
					(LK fahren)
					(MF wir)
					(VC los) [01;33mSIMPX)[00m
					(APPR um)
					(SIMPX nehmen den ice um zehn uhr)
					(SIMPX
						[01;31m(LKM[00m
							(LK sind)
							(MF um funfzehn uhr in hannover)[01;31m)[00m
						(LKM nehmen da ein taxi))
					(KON und)
					(LKMVC und und kommen rechtzeitig an)[01;31m)[00m
				(SIMPX und dann wurden wir am achtundzwanzigsten abends einfach wieder zuruckfahren))
			(SU da wurde ich vielleicht sagen wir nehmen das flugzeug))
		(SU [01;33m(SIMPX[00m
			(SIMPX
				(VF da)
				(LK gibt)
				[01;31m(MF[00m
					(NX es)
					(NX einen flug) [01;33mSIMPX)[00m
					(NX
						(NX siebzehn uhr zwanzig)
						[01;31m(ADJX[00m
							(ADVX sogar)
							(ADJX stundlich bis einundzwanzig uhr zwanzig)[01;31m)[00m)[01;31m)[00m)
			(SIMPX
				(VF das)
				(LK heist)
				(NF [01;33m(SIMPX (NF (SIMPX (NF[00m
					(SIMPX
						(VF wir)
						[01;31m(FKOORD[00m
							[01;31m(LKMVC[00m
								(LK konnen)
								[01;31m(MF[00m
									(ADVX auch)
									(ADVX noch)
									(VF um zwanzig nach acht) [01;33mNF) SIMPX)[00m
									[01;31m(SIMPX[00m [01;33m(LKMVC[00m
										(LK konnen)
										(MF wir in hannover)[01;31m)[00m[01;31m)[00m
								(VC abfliegen)[01;31m)[00m [01;33mLKMVC) NF) SIMPX)[00m
							(KON und)
							(LKM sind in siebzig minuten in munchen)[01;31m)[00m))))))
Step:Clause Attachment
{'subtrees': ['LK', 'MF', 'VC', 'APPR', 'SIMPX', 'SIMPX', 'KON', 'LKMVC'], 'family': ['DM', 'NX', 'VF', 'FKOORD', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADJA', 'NN', 'ADV', 'VVFIN', 'PPER', 'PTKVZ', 'APPR', 'VVFIN', 'ART', 'NE', 'APPR', 'CARD', 'NN', 'VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE', 'VVFIN', 'ADV', 'ART', 'NN', 'KON', 'KON', 'KON', 'VVFIN', 'ADJD', 'PTKVZ', 'KON', 'ADV', 'VAFIN', 'PPER', 'APPRART', 'NN', 'ADV', 'ADV', 'ADV', 'VVINF'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 40), 'span': (4, 30), 'left siblings': ['DM', 'NX', 'VF'], 'label': 'FKOORD', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(SU
				(DM okay)
				(NX siebenundzwanzigster januar)
				[01;36m(SIMPX[00m
					(VF dann)
					(LK fahren)
					(MF wir)
					(VC los)[01;36m)[00m
				(APPR um)
				(SIMPX nehmen den ice um zehn uhr)
				(SIMPX
					[01;31m(LKM[00m
						(LK sind)
						(MF um funfzehn uhr in hannover)[01;31m)[00m
					(LKM nehmen da ein taxi))
				(KON und)
				(LKMVC und und kommen rechtzeitig an)
				(SIMPX und dann wurden wir am achtundzwanzigsten abends einfach wieder zuruckfahren))
			(SU da wurde ich vielleicht sagen wir nehmen das flugzeug))
		(SU [01;33m(SIMPX[00m
			(SIMPX
				(VF da)
				(LK gibt)
				[01;31m(MF[00m
					(NX es)
					(NX einen flug) [01;33mSIMPX)[00m
					(NX
						(NX siebzehn uhr zwanzig)
						[01;31m(ADJX[00m
							(ADVX sogar)
							(ADJX stundlich bis einundzwanzig uhr zwanzig)[01;31m)[00m)[01;31m)[00m)
			(SIMPX
				(VF das)
				(LK heist)
				(NF [01;33m(SIMPX (NF (SIMPX (NF[00m
					(SIMPX
						(VF wir)
						[01;31m(FKOORD[00m
							[01;31m(LKMVC[00m
								(LK konnen)
								[01;31m(MF[00m
									(ADVX auch)
									(ADVX noch)
									(VF um zwanzig nach acht) [01;33mNF) SIMPX)[00m
									[01;31m(SIMPX[00m [01;33m(LKMVC[00m
										(LK konnen)
										(MF wir in hannover)[01;31m)[00m[01;31m)[00m
								(VC abfliegen)[01;31m)[00m [01;33mLKMVC) NF) SIMPX)[00m
							(KON und)
							(LKM sind in siebzig minuten in munchen)[01;31m)[00m))))))
Step:UNSET add
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['DM', 'NX', 'SIMPX', 'APPR', 'SIMPX', 'SIMPX', 'KON', 'LKMVC', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'PTKVZ'), 'right siblings': [(APPR um), (SIMPX (LK (VXFIN (VVFIN nehmen))) (MF (NX (ART den) (NE ice)) (PX (APPR um) (NX (ADJX (CARD zehn)) (NN uhr))))), (SIMPX (LKM (LK (VXFIN (VAFIN sind))) (MF (PX (APPR um) (NX (ADJX (CARD funfzehn)) (NN uhr))) (PX (APPR in) (NX (NE hannover))))) (LKM (LK (VXFIN (VVFIN nehmen))) (MF (ADVX (ADV da)) (NX (ART ein) (NN taxi))))), (KON und), (LKMVC (KOORD (KON und)) (KON und) (LKMVC (LK (VXFIN (VVFIN kommen))) (MF (ADJX (ADJD rechtzeitig))) (VC (PTKVZ an)))), (SIMPX (KOORD (KON und)) (VF (ADVX (ADV dann))) (LK (VXFIN (VAFIN wurden))) (MF (NX (PPER wir)) (PX (PX (APPRART am) (NX (NN achtundzwanzigsten))) (ADVX (ADV abends))) (ADVX (ADV einfach)) (ADVX (ADV wieder))) (VC (VXINF (VVINF zuruckfahren))))], 'left siblings': [(DM (ITJ okay)), (NX (ADJX (ADJA siebenundzwanzigster)) (NN januar))], 'auto preterminal span': (3, 7), 'span': (3, 7), 'parent': 'SU', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU
			(SU
				(DM okay)
				(NX siebenundzwanzigster januar)
				(SIMPX dann fahren wir los)
				(APPR um)
				(SIMPX nehmen den ice um zehn uhr)
				(SIMPX
					[01;31m(LKM[00m
						(LK sind)
						(MF um funfzehn uhr in hannover)[01;31m)[00m
					(LKM nehmen da ein taxi))
				(KON und)
				(LKMVC und und kommen rechtzeitig an)
				(SIMPX und dann wurden wir am achtundzwanzigsten abends einfach wieder zuruckfahren))
			(SU da wurde ich vielleicht sagen wir nehmen das flugzeug))
		(SU [01;33m(SIMPX[00m
			(SIMPX
				(VF da)
				(LK gibt)
				[01;31m(MF[00m
					(NX es)
					(NX einen flug) [01;33mSIMPX)[00m
					(NX
						(NX siebzehn uhr zwanzig)
						[01;31m(ADJX[00m
							(ADVX sogar)
							(ADJX stundlich bis einundzwanzig uhr zwanzig)[01;31m)[00m)[01;31m)[00m)
			(SIMPX
				(VF das)
				(LK heist)
				(NF [01;33m(SIMPX (NF (SIMPX (NF[00m
					(SIMPX
						(VF wir)
						[01;31m(FKOORD[00m
							[01;31m(LKMVC[00m
								(LK konnen)
								[01;31m(MF[00m
									(ADVX auch)
									(ADVX noch)
									(VF um zwanzig nach acht) [01;33mNF) SIMPX)[00m
									[01;31m(SIMPX[00m [01;33m(LKMVC[00m
										(LK konnen)
										(MF wir in hannover)[01;31m)[00m[01;31m)[00m
								(VC abfliegen)[01;31m)[00m [01;33mLKMVC) NF) SIMPX)[00m
							(KON und)
							(LKM sind in siebzig minuten in munchen)[01;31m)[00m))))))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['LKM', 'LKM'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE', 'VVFIN', 'ADV', 'ART', 'NN'), 'right siblings': ['LKM'], 'parent': 'SIMPX', 'auto preterminal span': (14, 24), 'span': (14, 20), 'left siblings': [], 'label': 'LKM', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU okay siebenundzwanzigster januar dann fahren wir los um nehmen den ice um zehn uhr sind um funfzehn uhr in hannover nehmen da ein taxi und und und kommen rechtzeitig an und dann wurden wir am achtundzwanzigsten abends einfach wieder zuruckfahren da wurde ich vielleicht sagen wir nehmen das flugzeug)
		(SU [01;33m(SIMPX[00m
			(SIMPX
				(VF da)
				(LK gibt)
				[01;31m(MF[00m
					(NX es)
					(NX einen flug) [01;33mSIMPX)[00m
					(NX
						(NX siebzehn uhr zwanzig)
						[01;31m(ADJX[00m
							(ADVX sogar)
							(ADJX stundlich bis einundzwanzig uhr zwanzig)[01;31m)[00m)[01;31m)[00m)
			(SIMPX
				(VF das)
				(LK heist)
				(NF [01;33m(SIMPX (NF (SIMPX (NF[00m
					(SIMPX
						(VF wir)
						[01;31m(FKOORD[00m
							[01;31m(LKMVC[00m
								(LK konnen)
								[01;31m(MF[00m
									(ADVX auch)
									(ADVX noch)
									(VF um zwanzig nach acht) [01;33mNF) SIMPX)[00m
									[01;31m(SIMPX[00m [01;33m(LKMVC[00m
										(LK konnen)
										(MF wir in hannover)[01;31m)[00m[01;31m)[00m
								(VC abfliegen)[01;31m)[00m [01;33mLKMVC) NF) SIMPX)[00m
							(KON und)
							(LKM sind in siebzig minuten in munchen)[01;31m)[00m))))))
Step:UNSET remove
{'subtrees': ['NX', 'NX', 'NX'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'ART', 'NN', 'CARD', 'NN', 'CARD', 'ADV', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (49, 63), 'span': (51, 63), 'left siblings': ['VF', 'LK'], 'label': 'MF', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU okay siebenundzwanzigster januar dann fahren wir los um nehmen den ice um zehn uhr sind um funfzehn uhr in hannover nehmen da ein taxi und und und kommen rechtzeitig an und dann wurden wir am achtundzwanzigsten abends einfach wieder zuruckfahren da wurde ich vielleicht sagen wir nehmen das flugzeug)
		(SU
			(SIMPX
				[01;36m(SIMPX[00m
					(VF da)
					(LK gibt)
					(NX es)
					(NX einen flug)[01;36m)[00m
				(NX
					(NX siebzehn uhr zwanzig)
					[01;31m(ADJX[00m
						(ADVX sogar)
						(ADJX stundlich bis einundzwanzig uhr zwanzig)[01;31m)[00m))
			(SIMPX
				(VF das)
				(LK heist)
				(NF [01;33m(SIMPX (NF (SIMPX (NF[00m
					(SIMPX
						(VF wir)
						[01;31m(FKOORD[00m
							[01;31m(LKMVC[00m
								(LK konnen)
								[01;31m(MF[00m
									(ADVX auch)
									(ADVX noch)
									(VF um zwanzig nach acht) [01;33mNF) SIMPX)[00m
									[01;31m(SIMPX[00m [01;33m(LKMVC[00m
										(LK konnen)
										(MF wir in hannover)[01;31m)[00m[01;31m)[00m
								(VC abfliegen)[01;31m)[00m [01;33mLKMVC) NF) SIMPX)[00m
							(KON und)
							(LKM sind in siebzig minuten in munchen)[01;31m)[00m))))))
Step:UNSET add
{'subtrees': ['VF', 'LK', 'NX', 'NX'], 'family': ['SIMPX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'ART', 'NN'), 'right siblings': [(NX (NX (NX (ADJX (CARD siebzehn)) (NN uhr)) (ADJX (CARD zwanzig))) (ADJX (ADVX (ADV sogar)) (ADJX (ADJX (ADJD stundlich)) (PX (APPR bis) (NX (NX (ADJX (CARD einundzwanzig)) (NN uhr)) (ADJX (CARD zwanzig)))))))], 'left siblings': [], 'auto preterminal span': (49, 54), 'span': (49, 54), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU okay siebenundzwanzigster januar dann fahren wir los um nehmen den ice um zehn uhr sind um funfzehn uhr in hannover nehmen da ein taxi und und und kommen rechtzeitig an und dann wurden wir am achtundzwanzigsten abends einfach wieder zuruckfahren da wurde ich vielleicht sagen wir nehmen das flugzeug)
		(SU
			(SIMPX
				(SIMPX da gibt es einen flug)
				(NX
					(NX siebzehn uhr zwanzig)
					[01;31m(ADJX[00m
						(ADVX sogar)
						(ADJX stundlich bis einundzwanzig uhr zwanzig)[01;31m)[00m))
			(SIMPX
				(VF das)
				(LK heist)
				(NF [01;33m(SIMPX (NF (SIMPX (NF[00m
					(SIMPX
						(VF wir)
						[01;31m(FKOORD[00m
							[01;31m(LKMVC[00m
								(LK konnen)
								[01;31m(MF[00m
									(ADVX auch)
									(ADVX noch)
									(VF um zwanzig nach acht) [01;33mNF) SIMPX)[00m
									[01;31m(SIMPX[00m [01;33m(LKMVC[00m
										(LK konnen)
										(MF wir in hannover)[01;31m)[00m[01;31m)[00m
								(VC abfliegen)[01;31m)[00m [01;33mLKMVC) NF) SIMPX)[00m
							(KON und)
							(LKM sind in siebzig minuten in munchen)[01;31m)[00m))))))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'ADJX'], 'family': ['NX', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'NN', 'CARD', 'ADV', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (54, 63), 'span': (57, 63), 'left siblings': ['NX'], 'label': 'ADJX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU okay siebenundzwanzigster januar dann fahren wir los um nehmen den ice um zehn uhr sind um funfzehn uhr in hannover nehmen da ein taxi und und und kommen rechtzeitig an und dann wurden wir am achtundzwanzigsten abends einfach wieder zuruckfahren da wurde ich vielleicht sagen wir nehmen das flugzeug)
		(SU
			(SIMPX da gibt es einen flug siebzehn uhr zwanzig sogar stundlich bis einundzwanzig uhr zwanzig)
			(SIMPX
				(VF das)
				(LK heist)
				(NF [01;33m(SIMPX (NF (SIMPX (NF[00m
					(SIMPX
						(VF wir)
						[01;31m(FKOORD[00m
							[01;31m(LKMVC[00m
								(LK konnen)
								[01;31m(MF[00m
									(ADVX auch)
									(ADVX noch)
									(VF um zwanzig nach acht) [01;33mNF) SIMPX)[00m
									[01;31m(SIMPX[00m [01;33m(LKMVC[00m
										(LK konnen)
										(MF wir in hannover)[01;31m)[00m[01;31m)[00m
								(VC abfliegen)[01;31m)[00m [01;33mLKMVC) NF) SIMPX)[00m
							(KON und)
							(LKM sind in siebzig minuten in munchen)[01;31m)[00m))))))
Step:Co-ordination
{'subtrees': ['LK', 'MF', 'VC'], 'family': ['LKMVC', 'KON', 'LKM'], 'over_word': False, 'over words': False, 'auto preterminals': ('VMFIN', 'ADV', 'ADV', 'APPR', 'CARD', 'APPR', 'CARD', 'VMFIN', 'PPER', 'APPR', 'NE', 'VVINF', 'KON', 'VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE'), 'right siblings': ['KON', 'LKM'], 'parent': 'FKOORD', 'auto preterminal span': (66, 85), 'span': (66, 78), 'left siblings': [], 'label': 'LKMVC', 'classified_type': 'Co-ordination', 'type': 'remove'}
(TOP
	(TURN
		(SU okay siebenundzwanzigster januar dann fahren wir los um nehmen den ice um zehn uhr sind um funfzehn uhr in hannover nehmen da ein taxi und und und kommen rechtzeitig an und dann wurden wir am achtundzwanzigsten abends einfach wieder zuruckfahren da wurde ich vielleicht sagen wir nehmen das flugzeug)
		(SU
			(SIMPX da gibt es einen flug siebzehn uhr zwanzig sogar stundlich bis einundzwanzig uhr zwanzig)
			(SIMPX
				(VF das)
				(LK heist)
				(NF [01;33m(SIMPX (NF (SIMPX (NF[00m
					(SIMPX
						(VF wir)
						[01;31m(FKOORD[00m
							(LK konnen)
							[01;31m(MF[00m
								(ADVX auch)
								(ADVX noch)
								(VF um zwanzig nach acht) [01;33mNF) SIMPX)[00m
								[01;31m(SIMPX[00m [01;33m(LKMVC[00m
									(LK konnen)
									(MF wir in hannover)[01;31m)[00m[01;31m)[00m
							(VC abfliegen) [01;33mLKMVC) NF) SIMPX)[00m
							(KON und)
							(LKM sind in siebzig minuten in munchen)[01;31m)[00m))))))
Step:UNSET remove
{'subtrees': ['LK', 'MF', 'VC', 'KON', 'LKM'], 'family': ['VF', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VMFIN', 'ADV', 'ADV', 'APPR', 'CARD', 'APPR', 'CARD', 'VMFIN', 'PPER', 'APPR', 'NE', 'VVINF', 'KON', 'VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (65, 85), 'span': (66, 85), 'left siblings': ['VF'], 'label': 'FKOORD', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU okay siebenundzwanzigster januar dann fahren wir los um nehmen den ice um zehn uhr sind um funfzehn uhr in hannover nehmen da ein taxi und und und kommen rechtzeitig an und dann wurden wir am achtundzwanzigsten abends einfach wieder zuruckfahren da wurde ich vielleicht sagen wir nehmen das flugzeug)
		(SU
			(SIMPX da gibt es einen flug siebzehn uhr zwanzig sogar stundlich bis einundzwanzig uhr zwanzig)
			(SIMPX
				(VF das)
				(LK heist)
				(NF [01;33m(SIMPX (NF[00m
					(SIMPX
						[01;36m(SIMPX[00m
							[01;36m(NF[00m
								(VF wir)
								(LK konnen)
								[01;31m(MF[00m
									(ADVX auch)
									(ADVX noch)
									(VF um zwanzig nach acht) [01;33mNF) SIMPX)[00m
									[01;31m(SIMPX[00m [01;33m(LKMVC[00m
										(LK konnen)
										(MF wir in hannover)[01;31m)[00m[01;31m)[00m
								(VC abfliegen) [01;33mLKMVC)[00m[01;36m)[00m[01;36m)[00m
						(KON und)
						(LKM sind in siebzig minuten in munchen)))))))
Step:UNSET add
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['NF', 'KON', 'LKM'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VMFIN', 'ADV', 'ADV', 'APPR', 'CARD', 'APPR', 'CARD', 'VMFIN', 'PPER', 'APPR', 'NE', 'VVINF'), 'right siblings': [(KON und), (LKM (LK (VXFIN (VAFIN sind))) (MF (PX (APPR in) (NX (ADJX (CARD siebzig)) (NN minuten))) (PX (APPR in) (NX (NE munchen)))))], 'left siblings': [], 'auto preterminal span': (65, 78), 'span': (65, 78), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU okay siebenundzwanzigster januar dann fahren wir los um nehmen den ice um zehn uhr sind um funfzehn uhr in hannover nehmen da ein taxi und und und kommen rechtzeitig an und dann wurden wir am achtundzwanzigsten abends einfach wieder zuruckfahren da wurde ich vielleicht sagen wir nehmen das flugzeug)
		(SU
			(SIMPX da gibt es einen flug siebzehn uhr zwanzig sogar stundlich bis einundzwanzig uhr zwanzig)
			(SIMPX
				(VF das)
				(LK heist)
				(NF [01;33m(SIMPX (NF[00m
					(SIMPX
						[01;36m(SIMPX[00m
							(NF
								(VF wir)
								(LK konnen)
								[01;31m(MF[00m
									(ADVX auch)
									(ADVX noch)
									(VF um zwanzig nach acht) [01;33mNF) SIMPX)[00m
									[01;31m(SIMPX[00m [01;33m(LKMVC[00m
										(LK konnen)
										(MF wir in hannover)[01;31m)[00m[01;31m)[00m
								(VC abfliegen)) [01;33mLKMVC)[00m[01;36m)[00m
						(KON und)
						(LKM sind in siebzig minuten in munchen)))))))
Step:Unary
{'subtrees': ['NF'], 'family': ['SIMPX', 'KON', 'LKM'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VMFIN', 'ADV', 'ADV', 'APPR', 'CARD', 'APPR', 'CARD', 'VMFIN', 'PPER', 'APPR', 'NE', 'VVINF'), 'right siblings': [(KON und), (LKM (LK (VXFIN (VAFIN sind))) (MF (PX (APPR in) (NX (ADJX (CARD siebzig)) (NN minuten))) (PX (APPR in) (NX (NE munchen)))))], 'left siblings': [], 'auto preterminal span': (65, 78), 'span': (65, 78), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU okay siebenundzwanzigster januar dann fahren wir los um nehmen den ice um zehn uhr sind um funfzehn uhr in hannover nehmen da ein taxi und und und kommen rechtzeitig an und dann wurden wir am achtundzwanzigsten abends einfach wieder zuruckfahren da wurde ich vielleicht sagen wir nehmen das flugzeug)
		(SU
			(SIMPX da gibt es einen flug siebzehn uhr zwanzig sogar stundlich bis einundzwanzig uhr zwanzig)
			(SIMPX
				(VF das)
				(LK heist)
				(NF [01;33m(SIMPX (NF[00m
					(SIMPX
						(SIMPX
							(NF
								(VF wir)
								(LK konnen)
								[01;31m(MF[00m
									(ADVX auch)
									(ADVX noch)
									(VF um zwanzig nach acht) [01;33mNF) SIMPX)[00m
									[01;31m(SIMPX[00m [01;33m(LKMVC[00m
										(LK konnen)
										(MF wir in hannover)[01;31m)[00m[01;31m)[00m
								(VC abfliegen))) [01;33mLKMVC)[00m
						(KON und)
						(LKM sind in siebzig minuten in munchen)))))))
Step:Clause Attachment
{'subtrees': ['ADVX', 'ADVX', 'VF', 'SIMPX'], 'family': ['VF', 'LK', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VMFIN', 'ADV', 'ADV', 'APPR', 'CARD', 'APPR', 'CARD', 'VMFIN', 'PPER', 'APPR', 'NE', 'VVINF'), 'right siblings': ['VC'], 'parent': 'NF', 'auto preterminal span': (65, 78), 'span': (67, 77), 'left siblings': ['VF', 'LK'], 'label': 'MF', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU okay siebenundzwanzigster januar dann fahren wir los um nehmen den ice um zehn uhr sind um funfzehn uhr in hannover nehmen da ein taxi und und und kommen rechtzeitig an und dann wurden wir am achtundzwanzigsten abends einfach wieder zuruckfahren da wurde ich vielleicht sagen wir nehmen das flugzeug)
		(SU
			(SIMPX da gibt es einen flug siebzehn uhr zwanzig sogar stundlich bis einundzwanzig uhr zwanzig)
			(SIMPX
				(VF das)
				(LK heist)
				(NF
					(SIMPX
						(SIMPX
							(NF
								[01;36m(NF[00m
									[01;36m(SIMPX[00m
										(VF wir)
										(LK konnen)
										(ADVX auch)
										(ADVX noch)
										(VF um zwanzig nach acht)[01;36m)[00m[01;36m)[00m
								[01;36m(LKMVC[00m
									[01;31m(SIMPX[00m
										(LK konnen)
										(MF wir in hannover)[01;31m)[00m
									(VC abfliegen)[01;36m)[00m))
						(KON und)
						(LKM sind in siebzig minuten in munchen)))))))
Step:Modifier Attachment
{'subtrees': ['VF', 'LK', 'ADVX', 'ADVX', 'VF'], 'family': ['SIMPX', 'SIMPX', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VMFIN', 'ADV', 'ADV', 'APPR', 'CARD', 'APPR', 'CARD'), 'right siblings': [(SIMPX (LK (VXFIN (VMFIN konnen))) (MF (NX (PPER wir)) (PX (APPR in) (NX (NE hannover))))), (VC (VXINF (VVINF abfliegen)))], 'left siblings': [], 'auto preterminal span': (65, 73), 'span': (65, 73), 'parent': 'NF', 'label': 'SIMPX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU okay siebenundzwanzigster januar dann fahren wir los um nehmen den ice um zehn uhr sind um funfzehn uhr in hannover nehmen da ein taxi und und und kommen rechtzeitig an und dann wurden wir am achtundzwanzigsten abends einfach wieder zuruckfahren da wurde ich vielleicht sagen wir nehmen das flugzeug)
		(SU
			(SIMPX da gibt es einen flug siebzehn uhr zwanzig sogar stundlich bis einundzwanzig uhr zwanzig)
			(SIMPX
				(VF das)
				(LK heist)
				(NF
					(SIMPX
						(SIMPX
							(NF
								[01;36m(NF[00m
									(SIMPX
										(VF wir)
										(LK konnen)
										(ADVX auch)
										(ADVX noch)
										(VF um zwanzig nach acht))[01;36m)[00m
								[01;36m(LKMVC[00m
									[01;31m(SIMPX[00m
										(LK konnen)
										(MF wir in hannover)[01;31m)[00m
									(VC abfliegen)[01;36m)[00m))
						(KON und)
						(LKM sind in siebzig minuten in munchen)))))))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['NF', 'SIMPX', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VMFIN', 'ADV', 'ADV', 'APPR', 'CARD', 'APPR', 'CARD'), 'right siblings': [(SIMPX (LK (VXFIN (VMFIN konnen))) (MF (NX (PPER wir)) (PX (APPR in) (NX (NE hannover))))), (VC (VXINF (VVINF abfliegen)))], 'left siblings': [], 'auto preterminal span': (65, 73), 'span': (65, 73), 'parent': 'NF', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU okay siebenundzwanzigster januar dann fahren wir los um nehmen den ice um zehn uhr sind um funfzehn uhr in hannover nehmen da ein taxi und und und kommen rechtzeitig an und dann wurden wir am achtundzwanzigsten abends einfach wieder zuruckfahren da wurde ich vielleicht sagen wir nehmen das flugzeug)
		(SU
			(SIMPX da gibt es einen flug siebzehn uhr zwanzig sogar stundlich bis einundzwanzig uhr zwanzig)
			(SIMPX
				(VF das)
				(LK heist)
				(NF
					(SIMPX
						(SIMPX
							(NF
								(NF wir konnen auch noch um zwanzig nach acht)
								[01;36m(LKMVC[00m
									[01;31m(SIMPX[00m
										(LK konnen)
										(MF wir in hannover)[01;31m)[00m
									(VC abfliegen)[01;36m)[00m))
						(KON und)
						(LKM sind in siebzig minuten in munchen)))))))
Step:UNSET add
{'subtrees': ['SIMPX', 'VC'], 'family': ['NF', 'LKMVC'], 'over_word': False, 'over words': False, 'auto preterminals': ('VMFIN', 'PPER', 'APPR', 'NE', 'VVINF'), 'right siblings': [], 'left siblings': [(NF (SIMPX (VF (NX (PPER wir))) (LK (VXFIN (VMFIN konnen))) (ADVX (ADV auch)) (ADVX (ADV noch)) (VF (PX (APPR um) (NX (NX (CARD zwanzig)) (PX (APPR nach) (NX (CARD acht))))))))], 'auto preterminal span': (73, 78), 'span': (73, 78), 'parent': 'NF', 'label': 'LKMVC', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU okay siebenundzwanzigster januar dann fahren wir los um nehmen den ice um zehn uhr sind um funfzehn uhr in hannover nehmen da ein taxi und und und kommen rechtzeitig an und dann wurden wir am achtundzwanzigsten abends einfach wieder zuruckfahren da wurde ich vielleicht sagen wir nehmen das flugzeug)
		(SU
			(SIMPX da gibt es einen flug siebzehn uhr zwanzig sogar stundlich bis einundzwanzig uhr zwanzig)
			(SIMPX
				(VF das)
				(LK heist)
				(NF
					(SIMPX
						(SIMPX
							(NF
								(NF wir konnen auch noch um zwanzig nach acht)
								(LKMVC
									[01;31m(SIMPX[00m
										(LK konnen)
										(MF wir in hannover)[01;31m)[00m
									(VC abfliegen))))
						(KON und)
						(LKM sind in siebzig minuten in munchen)))))))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['SIMPX', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('VMFIN', 'PPER', 'APPR', 'NE', 'VVINF'), 'right siblings': ['VC'], 'parent': 'LKMVC', 'auto preterminal span': (73, 78), 'span': (73, 77), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP okay siebenundzwanzigster januar dann fahren wir los um nehmen den ice um zehn uhr sind um funfzehn uhr in hannover nehmen da ein taxi und und und kommen rechtzeitig an und dann wurden wir am achtundzwanzigsten abends einfach wieder zuruckfahren da wurde ich vielleicht sagen wir nehmen das flugzeug da gibt es einen flug siebzehn uhr zwanzig sogar stundlich bis einundzwanzig uhr zwanzig das heist wir konnen auch noch um zwanzig nach acht konnen wir in hannover abfliegen und sind in siebzig minuten in munchen)

Sentence 442:
0 Initial errors
0 on fringe, 0 iterations

Sentence 443:
7 Initial errors
0 on fringe, 7 iterations
1 Error:UNSET remove
1 Error:Clause Attachment
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:Clause Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU genau)
		(SU
			(DM also)
			(SIMPX dann haben wir einen termin)
			[01;31m(SIMPX[00m
				(VF wir)
				(LK haben)
				[01;33m(NX (MF[00m (MF einen zug)[01;31m)[00m
			[01;31m(SIMPX[00m
				(VF wir)
				(LK haben)
				(MF einen flug fur die ruckfahrt)[01;31m)[00m [01;33mMF) NX)[00m
			[01;31m(SIMPX[00m
				(VF wir)
				(LK haben)
				[01;33m(NX (MF[00m (MF ein hotel fur die nacht)[01;31m)[00m
			(SIMPX wir haben ein treffen) [01;33mMF) NX)[00m
			(SIMPX dann konnen wir uns jetzt noch uberlegen ob wir abends irgendwas machen wollen))))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'VAFIN', 'PPER', 'ART', 'NN', 'PPER', 'VAFIN', 'ART', 'NN', 'PPER', 'VAFIN', 'ART', 'NN', 'APPR', 'ART', 'NN', 'PPER', 'VAFIN', 'ART', 'NN', 'APPR', 'ART', 'NN', 'PPER', 'VAFIN', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'VVINF', 'KOUS', 'PPER', 'ADV', 'PIS', 'VVINF', 'VMFIN'), 'right siblings': ['SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'parent': 'SU', 'auto preterminal span': (1, 42), 'span': (7, 11), 'left siblings': ['DM', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU genau)
		(SU
			(DM also)
			(SIMPX dann haben wir einen termin)
			(VF wir)
			(LK haben)
			[01;36m(NX[00m
				[01;36m(MF[00m
					(MF einen zug)
					[01;31m(SIMPX[00m
						(VF wir)
						(LK haben)
						(MF einen flug fur die ruckfahrt)[01;31m)[00m[01;36m)[00m[01;36m)[00m
			[01;31m(SIMPX[00m
				(VF wir)
				(LK haben)
				[01;33m(NX (MF[00m (MF ein hotel fur die nacht)[01;31m)[00m
			(SIMPX wir haben ein treffen) [01;33mMF) NX)[00m
			(SIMPX dann konnen wir uns jetzt noch uberlegen ob wir abends irgendwas machen wollen))))
Step:Clause Attachment
{'subtrees': ['MF', 'SIMPX'], 'family': ['DM', 'SIMPX', 'VF', 'LK', 'MF', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'PPER', 'VAFIN', 'ART', 'NN', 'APPR', 'ART', 'NN'), 'right siblings': [(SIMPX (VF (NX (PPER wir))) (LK (VXFIN (VAFIN haben))) (MF (NX (NX (ART ein) (NN hotel)) (PX (APPR fur) (NX (ART die) (NN nacht)))))), (SIMPX (VF (NX (PPER wir))) (LK (VXFIN (VAFIN haben))) (MF (NX (ART ein) (NN treffen)))), (SIMPX (VF (ADVX (ADV dann))) (LK (VXFIN (VMFIN konnen))) (MF (NX (PPER wir)) (NX (PRF uns)) (ADVX (ADV jetzt)) (ADVX (ADV noch))) (VC (VXINF (VVINF uberlegen))) (NF (SIMPX (C (KOUS ob)) (MF (NX (PPER wir)) (ADVX (ADV abends)) (NX (PIS irgendwas))) (VC (VXINF (VVINF machen)) (VXFIN (VMFIN wollen))))))], 'left siblings': [(DM (ADVX (ADV also))), (SIMPX (VF (ADVX (ADV dann))) (LK (VXFIN (VAFIN haben))) (MF (NX (PPER wir)) (NX (ART einen) (NN termin)))), (VF (NX (PPER wir))), (LK (VXFIN (VAFIN haben)))], 'auto preterminal span': (9, 18), 'span': (9, 18), 'parent': 'SU', 'label': 'MF', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU genau)
		(SU
			(DM also)
			(SIMPX dann haben wir einen termin)
			(VF wir)
			(LK haben)
			[01;36m(NX[00m
				(MF
					(MF einen zug)
					[01;31m(SIMPX[00m
						(VF wir)
						(LK haben)
						(MF einen flug fur die ruckfahrt)[01;31m)[00m)[01;36m)[00m
			[01;31m(SIMPX[00m
				(VF wir)
				(LK haben)
				[01;33m(NX (MF[00m (MF ein hotel fur die nacht)[01;31m)[00m
			(SIMPX wir haben ein treffen) [01;33mMF) NX)[00m
			(SIMPX dann konnen wir uns jetzt noch uberlegen ob wir abends irgendwas machen wollen))))
Step:Unary
{'subtrees': ['MF'], 'family': ['DM', 'SIMPX', 'VF', 'LK', 'NX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'PPER', 'VAFIN', 'ART', 'NN', 'APPR', 'ART', 'NN'), 'right siblings': [(SIMPX (VF (NX (PPER wir))) (LK (VXFIN (VAFIN haben))) (MF (NX (NX (ART ein) (NN hotel)) (PX (APPR fur) (NX (ART die) (NN nacht)))))), (SIMPX (VF (NX (PPER wir))) (LK (VXFIN (VAFIN haben))) (MF (NX (ART ein) (NN treffen)))), (SIMPX (VF (ADVX (ADV dann))) (LK (VXFIN (VMFIN konnen))) (MF (NX (PPER wir)) (NX (PRF uns)) (ADVX (ADV jetzt)) (ADVX (ADV noch))) (VC (VXINF (VVINF uberlegen))) (NF (SIMPX (C (KOUS ob)) (MF (NX (PPER wir)) (ADVX (ADV abends)) (NX (PIS irgendwas))) (VC (VXINF (VVINF machen)) (VXFIN (VMFIN wollen))))))], 'left siblings': [(DM (ADVX (ADV also))), (SIMPX (VF (ADVX (ADV dann))) (LK (VXFIN (VAFIN haben))) (MF (NX (PPER wir)) (NX (ART einen) (NN termin)))), (VF (NX (PPER wir))), (LK (VXFIN (VAFIN haben)))], 'auto preterminal span': (9, 18), 'span': (9, 18), 'parent': 'SU', 'label': 'NX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU genau)
		(SU
			(DM also)
			(SIMPX dann haben wir einen termin)
			(VF wir)
			(LK haben)
			(NX
				(MF
					(MF einen zug)
					[01;31m(SIMPX[00m
						(VF wir)
						(LK haben)
						(MF einen flug fur die ruckfahrt)[01;31m)[00m))
			[01;31m(SIMPX[00m
				(VF wir)
				(LK haben)
				[01;33m(NX (MF[00m (MF ein hotel fur die nacht)[01;31m)[00m
			(SIMPX wir haben ein treffen) [01;33mMF) NX)[00m
			(SIMPX dann konnen wir uns jetzt noch uberlegen ob wir abends irgendwas machen wollen))))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['MF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'PPER', 'VAFIN', 'ART', 'NN', 'APPR', 'ART', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (9, 18), 'span': (11, 18), 'left siblings': ['MF'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU genau)
		(SU
			(DM also)
			(SIMPX dann haben wir einen termin)
			(VF wir)
			(LK haben)
			(NX einen zug wir haben einen flug fur die ruckfahrt)
			[01;31m(SIMPX[00m
				(VF wir)
				(LK haben)
				[01;33m(NX (MF[00m (MF ein hotel fur die nacht)[01;31m)[00m
			(SIMPX wir haben ein treffen) [01;33mMF) NX)[00m
			(SIMPX dann konnen wir uns jetzt noch uberlegen ob wir abends irgendwas machen wollen))))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['DM', 'SIMPX', 'VF', 'LK', 'NX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'VAFIN', 'PPER', 'ART', 'NN', 'PPER', 'VAFIN', 'ART', 'NN', 'PPER', 'VAFIN', 'ART', 'NN', 'APPR', 'ART', 'NN', 'PPER', 'VAFIN', 'ART', 'NN', 'APPR', 'ART', 'NN', 'PPER', 'VAFIN', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'VVINF', 'KOUS', 'PPER', 'ADV', 'PIS', 'VVINF', 'VMFIN'), 'right siblings': ['SIMPX', 'SIMPX'], 'parent': 'SU', 'auto preterminal span': (1, 42), 'span': (18, 25), 'left siblings': ['DM', 'SIMPX', 'VF', 'LK', 'NX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU genau)
		(SU
			(DM also)
			(SIMPX dann haben wir einen termin)
			(VF wir)
			(LK haben)
			(NX einen zug wir haben einen flug fur die ruckfahrt)
			(VF wir)
			(LK haben)
			[01;36m(NX[00m
				[01;36m(MF[00m
					(MF ein hotel fur die nacht)
					(SIMPX wir haben ein treffen)[01;36m)[00m[01;36m)[00m
			(SIMPX dann konnen wir uns jetzt noch uberlegen ob wir abends irgendwas machen wollen))))
Step:Clause Attachment
{'subtrees': ['MF', 'SIMPX'], 'family': ['DM', 'SIMPX', 'VF', 'LK', 'NX', 'VF', 'LK', 'MF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'APPR', 'ART', 'NN', 'PPER', 'VAFIN', 'ART', 'NN'), 'right siblings': [(SIMPX (VF (ADVX (ADV dann))) (LK (VXFIN (VMFIN konnen))) (MF (NX (PPER wir)) (NX (PRF uns)) (ADVX (ADV jetzt)) (ADVX (ADV noch))) (VC (VXINF (VVINF uberlegen))) (NF (SIMPX (C (KOUS ob)) (MF (NX (PPER wir)) (ADVX (ADV abends)) (NX (PIS irgendwas))) (VC (VXINF (VVINF machen)) (VXFIN (VMFIN wollen))))))], 'left siblings': [(DM (ADVX (ADV also))), (SIMPX (VF (ADVX (ADV dann))) (LK (VXFIN (VAFIN haben))) (MF (NX (PPER wir)) (NX (ART einen) (NN termin)))), (VF (NX (PPER wir))), (LK (VXFIN (VAFIN haben))), (NX (MF (MF (NX (ART einen) (NN zug))) (VF (NX (PPER wir))) (LK (VXFIN (VAFIN haben))) (MF (NX (NX (ART einen) (NN flug)) (PX (APPR fur) (NX (ART die) (NN ruckfahrt))))))), (VF (NX (PPER wir))), (LK (VXFIN (VAFIN haben)))], 'auto preterminal span': (20, 29), 'span': (20, 29), 'parent': 'SU', 'label': 'MF', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU genau)
		(SU
			(DM also)
			(SIMPX dann haben wir einen termin)
			(VF wir)
			(LK haben)
			(NX einen zug wir haben einen flug fur die ruckfahrt)
			(VF wir)
			(LK haben)
			[01;36m(NX[00m
				(MF
					(MF ein hotel fur die nacht)
					(SIMPX wir haben ein treffen))[01;36m)[00m
			(SIMPX dann konnen wir uns jetzt noch uberlegen ob wir abends irgendwas machen wollen))))
Step:Unary
{'subtrees': ['MF'], 'family': ['DM', 'SIMPX', 'VF', 'LK', 'NX', 'VF', 'LK', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'APPR', 'ART', 'NN', 'PPER', 'VAFIN', 'ART', 'NN'), 'right siblings': [(SIMPX (VF (ADVX (ADV dann))) (LK (VXFIN (VMFIN konnen))) (MF (NX (PPER wir)) (NX (PRF uns)) (ADVX (ADV jetzt)) (ADVX (ADV noch))) (VC (VXINF (VVINF uberlegen))) (NF (SIMPX (C (KOUS ob)) (MF (NX (PPER wir)) (ADVX (ADV abends)) (NX (PIS irgendwas))) (VC (VXINF (VVINF machen)) (VXFIN (VMFIN wollen))))))], 'left siblings': [(DM (ADVX (ADV also))), (SIMPX (VF (ADVX (ADV dann))) (LK (VXFIN (VAFIN haben))) (MF (NX (PPER wir)) (NX (ART einen) (NN termin)))), (VF (NX (PPER wir))), (LK (VXFIN (VAFIN haben))), (NX (MF (MF (NX (ART einen) (NN zug))) (VF (NX (PPER wir))) (LK (VXFIN (VAFIN haben))) (MF (NX (NX (ART einen) (NN flug)) (PX (APPR fur) (NX (ART die) (NN ruckfahrt))))))), (VF (NX (PPER wir))), (LK (VXFIN (VAFIN haben)))], 'auto preterminal span': (20, 29), 'span': (20, 29), 'parent': 'SU', 'label': 'NX', 'classified_type': 'Unary', 'type': 'add'}
(TOP genau also dann haben wir einen termin wir haben einen zug wir haben einen flug fur die ruckfahrt wir haben ein hotel fur die nacht wir haben ein treffen dann konnen wir uns jetzt noch uberlegen ob wir abends irgendwas machen wollen)

Sentence 444:
0 Initial errors
0 on fringe, 0 iterations

Sentence 445:
0 Initial errors
0 on fringe, 0 iterations

Sentence 446:
0 Initial errors
0 on fringe, 0 iterations

Sentence 447:
2 Initial errors
0 on fringe, 2 iterations
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU okay)
		(SU
			(SIMPX
				(LK konnen)
				(MF wir um zehn uhr etwa)
				(VC
					[01;31m(VXINF[00m
						(VXINF wegfahren)
						[01;36m(VC[00m
							(VXINF
								(VVINF wegfliegen))[01;36m)[00m[01;31m)[00m))
			(PX je nachdem))))
Step:Unary
{'subtrees': ['VXINF'], 'family': ['VXINF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVINF',), 'right siblings': [], 'left siblings': [(VXINF (VVINF wegfahren))], 'auto preterminal span': (8, 9), 'span': (8, 9), 'parent': 'VXINF', 'label': 'VC', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU okay)
		(SU
			(SIMPX
				(LK konnen)
				(MF wir um zehn uhr etwa)
				(VC
					[01;31m(VXINF[00m
						(VXINF wegfahren)
						(VC wegfliegen)[01;31m)[00m))
			(PX je nachdem))))
Step:Unary
{'subtrees': ['VXINF', 'VC'], 'family': ['VXINF'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVINF', 'VVINF'), 'right siblings': [], 'parent': 'VC', 'auto preterminal span': (7, 9), 'span': (7, 9), 'left siblings': [], 'label': 'VXINF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP okay konnen wir um zehn uhr etwa wegfahren wegfliegen je nachdem)

Sentence 448:
0 Initial errors
0 on fringe, 0 iterations

Sentence 449:
29 Initial errors
0 on fringe, 14 iterations
5 Error:NP Attachment
4 Error:NP Attachment
3 Error:Co-ordination
2 Error:Single Word Phrase
2 Error:Different label
2 Error:Different label
2 Error:Single Word Phrase
2 Error:Co-ordination
2 Error:NP Attachment
1 Error:Unary
1 Error:Clause Attachment
1 Error:PP Attachment
1 Error:UNSET remove
1 Error:Clause Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(NX hotels)
			(DM ja)
			(SIMPX mussen wir mal kucken)[01;31m)[00m
		(SU
			[01;36m(SU[00m
				[01;36m(SIMPX[00m
					[01;31m(SIMPX[00m
						(VF ich)
						(LK habe)
						[01;31m(MF[00m [01;33m(MF[00m
							(ADVX hier)
							[01;31m(NX[00m
								(NX eine liste)
								[01;33m(PX[00m (PX von meiner sekretarin)[01;31m)[00m[01;31m)[00m[01;31m)[00m
					(NX drei moglichkeiten) [01;33mPX) MF)[00m[01;36m)[00m[01;36m)[00m
			[01;31m(NX[00m
				[01;31m(NX[00m
					[01;36m(PX[00m [01;31m(NX[00m
						[01;36m(ADJX[00m [01;31m(NX[00m
							(NE maritimhotel)[01;31m)[00m[01;36m)[00m
						(PX am hauptbahnhof)[01;31m)[00m[01;36m)[00m
					(NX funfzehn minuten zum zentrum)[01;31m)[00m
				(DM na ja)
				[01;31m(SIMPX[00m [01;33m(SIMPX[00m
					(VF garage)
					(LK brauchen)
					[01;31m(MF[00m [01;33m(MF[00m
						(NX wir)
						(ADVX ja)
						(ADVX nicht)[01;31m)[00m[01;31m)[00m
				[01;31m(NX[00m
					(NX ein hotel luisenhof) [01;33mMF) SIMPX)[00m
					[01;33m(NX (NX[00m (NX funf minuten vom bahnhof)
					[01;31m(NX[00m
						[01;36m(NX[00m
							(NX bar)
							(NX restaurant)[01;36m)[00m
						(NX garage)[01;31m)[00m[01;31m)[00m
				[01;36m(NX[00m [01;31m(ADJX[00m
					(NX alles)
					[01;36m(NX[00m [01;31m(ADJX[00m
						(ADJD uberflussig)[01;31m)[00m[01;36m)[00m[01;31m)[00m [01;33mNX)[00m[01;36m)[00m
				(KON und)
				[01;31m(NX[00m
					(PX direkt beim hauptbahnhof)
					[01;36m(NX[00m
						(ADVX noch)
						(NX ein hotel mit schwimm und dampfbad)[01;36m)[00m[01;31m)[00m[01;31m)[00m) [01;33mNX)[00m
		(SU brauchen wir es)))
Step:NP Attachment
{'new_parent': 'NX', 'new_family': ['NX', 'PX', 'NX'], 'mover info': [('NX', (14, 16))], 'old_family': ['SIMPX', 'NX', 'NX'], 'start left siblings': ['SIMPX'], 'auto preterminals': ('PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'APPR', 'PPOSAT', 'NN', 'CARD', 'NN', 'NE', 'APPRART', 'NN', 'CARD', 'NN', 'APPRART', 'NN', 'ITJ', 'PTKANT', 'NN', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'NN', 'NN', 'NN', 'PIS', 'ADJD', 'KON', 'ADV', 'APPRART', 'NN', 'ADV', 'ART', 'NN', 'APPR', 'TRUNC', 'KON', 'NN'), 'start right siblings': ['NX'], 'end left siblings': ['NX', 'PX'], 'auto preterminal span': (6, 53), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'SU', 'added and moved': True, 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		[01;31m(SU[00m
			(NX hotels)
			(DM ja)
			(SIMPX mussen wir mal kucken)[01;31m)[00m
		(SU
			[01;36m(SU[00m
				(SIMPX
					(VF ich)
					(LK habe)
					(MF
						(ADVX hier)
						[01;31m(NX[00m
							(NX eine liste)
							(PX von meiner sekretarin drei moglichkeiten)[01;31m)[00m))[01;36m)[00m
			[01;31m(NX[00m
				[01;31m(NX[00m
					[01;36m(PX[00m [01;31m(NX[00m
						[01;36m(ADJX[00m [01;31m(NX[00m
							(NE maritimhotel)[01;31m)[00m[01;36m)[00m
						(PX am hauptbahnhof)[01;31m)[00m[01;36m)[00m
					(NX funfzehn minuten zum zentrum)[01;31m)[00m
				(DM na ja)
				[01;31m(SIMPX[00m [01;33m(SIMPX[00m
					(VF garage)
					(LK brauchen)
					[01;31m(MF[00m [01;33m(MF[00m
						(NX wir)
						(ADVX ja)
						(ADVX nicht)[01;31m)[00m[01;31m)[00m
				[01;31m(NX[00m
					(NX ein hotel luisenhof) [01;33mMF) SIMPX)[00m
					[01;33m(NX (NX[00m (NX funf minuten vom bahnhof)
					[01;31m(NX[00m
						[01;36m(NX[00m
							(NX bar)
							(NX restaurant)[01;36m)[00m
						(NX garage)[01;31m)[00m[01;31m)[00m
				[01;36m(NX[00m [01;31m(ADJX[00m
					(NX alles)
					[01;36m(NX[00m [01;31m(ADJX[00m
						(ADJD uberflussig)[01;31m)[00m[01;36m)[00m[01;31m)[00m [01;33mNX)[00m[01;36m)[00m
				(KON und)
				[01;31m(NX[00m
					(PX direkt beim hauptbahnhof)
					[01;36m(NX[00m
						(ADVX noch)
						(NX ein hotel mit schwimm und dampfbad)[01;36m)[00m[01;31m)[00m[01;31m)[00m) [01;33mNX)[00m
		(SU brauchen wir es)))
Step:NP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'ADVX', 'ADVX', 'NX'], 'mover info': [('NX', (30, 33))], 'old_family': ['NX', 'NX', 'NX'], 'start left siblings': [], 'auto preterminals': ('NE', 'APPRART', 'NN', 'CARD', 'NN', 'APPRART', 'NN', 'ITJ', 'PTKANT', 'NN', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'NN', 'NN', 'NN', 'PIS', 'ADJD', 'KON', 'ADV', 'APPRART', 'NN', 'ADV', 'ART', 'NN', 'APPR', 'TRUNC', 'KON', 'NN'), 'start right siblings': ['NX', 'NX'], 'end left siblings': ['NX', 'ADVX', 'ADVX'], 'auto preterminal span': (16, 53), 'movers': ['NX'], 'old_parent': 'NX', 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			(NX hotels)
			(DM ja)
			(SIMPX mussen wir mal kucken)[01;31m)[00m
		(SU
			[01;36m(SU[00m
				(SIMPX
					(VF ich)
					(LK habe)
					(MF
						(ADVX hier)
						[01;31m(NX[00m
							(NX eine liste)
							(PX von meiner sekretarin drei moglichkeiten)[01;31m)[00m))[01;36m)[00m
			[01;31m(NX[00m
				[01;31m(NX[00m
					[01;36m(PX[00m [01;31m(NX[00m
						[01;36m(ADJX[00m [01;31m(NX[00m
							(NE maritimhotel)[01;31m)[00m[01;36m)[00m
						(PX am hauptbahnhof)[01;31m)[00m[01;36m)[00m
					(NX funfzehn minuten zum zentrum)[01;31m)[00m
				(DM na ja)
				(SIMPX garage brauchen wir ja nicht ein hotel luisenhof)
				[01;36m(NX[00m
					[01;36m(NX[00m
						[01;31m(NX[00m
							(NX funf minuten vom bahnhof)
							[01;31m(NX[00m
								[01;36m(NX[00m
									(NX bar)
									(NX restaurant)[01;36m)[00m
								(NX garage)[01;31m)[00m[01;31m)[00m
						[01;36m(NX[00m [01;31m(ADJX[00m
							(NX alles)
							[01;36m(NX[00m [01;31m(ADJX[00m
								(ADJD uberflussig)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m
					(KON und)
					[01;31m(NX[00m
						(PX direkt beim hauptbahnhof)
						[01;36m(NX[00m
							(ADVX noch)
							(NX ein hotel mit schwimm und dampfbad)[01;36m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m)
		(SU brauchen wir es)))
Step:Co-ordination
{'new_parent': 'NX', 'new_family': ['NX', 'DM', 'SIMPX', 'NX', 'ADJX', 'KON', 'PX', 'NX'], 'mover info': [('PX', (43, 46))], 'old_family': ['PX', 'ADVX', 'NX'], 'start left siblings': [], 'auto preterminals': ('NE', 'APPRART', 'NN', 'CARD', 'NN', 'APPRART', 'NN', 'ITJ', 'PTKANT', 'NN', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'NN', 'NN', 'NN', 'PIS', 'ADJD', 'KON', 'ADV', 'APPRART', 'NN', 'ADV', 'ART', 'NN', 'APPR', 'TRUNC', 'KON', 'NN'), 'start right siblings': ['ADVX', 'NX'], 'end left siblings': ['NX', 'DM', 'SIMPX', 'NX', 'ADJX', 'KON'], 'auto preterminal span': (16, 53), 'adding node already present': False, 'movers': ['PX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': ['NX'], 'classified_type': 'Co-ordination', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		[01;31m(SU[00m
			(NX hotels)
			(DM ja)
			(SIMPX mussen wir mal kucken)[01;31m)[00m
		(SU
			[01;36m(SU[00m
				(SIMPX
					(VF ich)
					(LK habe)
					(MF
						(ADVX hier)
						[01;31m(NX[00m
							(NX eine liste)
							(PX von meiner sekretarin drei moglichkeiten)[01;31m)[00m))[01;36m)[00m
			[01;31m(NX[00m
				[01;31m(NX[00m
					[01;36m(PX[00m [01;31m(NX[00m
						[01;36m(ADJX[00m [01;31m(NX[00m
							(NE maritimhotel)[01;31m)[00m[01;36m)[00m
						(PX am hauptbahnhof)[01;31m)[00m[01;36m)[00m
					(NX funfzehn minuten zum zentrum)[01;31m)[00m
				(DM na ja)
				(SIMPX garage brauchen wir ja nicht ein hotel luisenhof)
				(NX
					[01;36m(NX[00m
						[01;31m(NX[00m
							(NX funf minuten vom bahnhof)
							[01;31m(NX[00m
								[01;36m(NX[00m
									(NX bar)
									(NX restaurant)[01;36m)[00m
								(NX garage)[01;31m)[00m[01;31m)[00m
						[01;36m(NX[00m [01;31m(ADJX[00m
							(NX alles)
							[01;36m(NX[00m [01;31m(ADJX[00m
								(ADJD uberflussig)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m
					(KON und)
					(PX direkt beim hauptbahnhof)
					(NX noch ein hotel mit schwimm und dampfbad))[01;31m)[00m)
		(SU brauchen wir es)))
Step:Single Word Phrase
{'family': ['ADJX', 'PX'], 'auto preterminal span': (16, 17), 'span': (16, 17), 'subtrees': ['NE'], 'parent': 'NX', 'over_word': True, 'auto preterminals': ('NE',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('NX', 'ADJX')}
(TOP
	(TURN
		[01;31m(SU[00m
			(NX hotels)
			(DM ja)
			(SIMPX mussen wir mal kucken)[01;31m)[00m
		(SU
			[01;36m(SU[00m
				(SIMPX
					(VF ich)
					(LK habe)
					(MF
						(ADVX hier)
						[01;31m(NX[00m
							(NX eine liste)
							(PX von meiner sekretarin drei moglichkeiten)[01;31m)[00m))[01;36m)[00m
			[01;31m(NX[00m
				[01;31m(NX[00m
					[01;36m(PX[00m [01;31m(NX[00m
						(ADJX maritimhotel)
						(PX am hauptbahnhof)[01;31m)[00m[01;36m)[00m
					(NX funfzehn minuten zum zentrum)[01;31m)[00m
				(DM na ja)
				(SIMPX garage brauchen wir ja nicht ein hotel luisenhof)
				(NX
					[01;36m(NX[00m
						[01;31m(NX[00m
							(NX funf minuten vom bahnhof)
							[01;31m(NX[00m
								[01;36m(NX[00m
									(NX bar)
									(NX restaurant)[01;36m)[00m
								(NX garage)[01;31m)[00m[01;31m)[00m
						[01;36m(NX[00m [01;31m(ADJX[00m
							(NX alles)
							[01;36m(NX[00m [01;31m(ADJX[00m
								(ADJD uberflussig)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m
					(KON und)
					(PX direkt beim hauptbahnhof)
					(NX noch ein hotel mit schwimm und dampfbad))[01;31m)[00m)
		(SU brauchen wir es)))
Step:Different label
{'family': ['PX', 'NX'], 'auto preterminal span': (16, 19), 'span': (16, 19), 'subtrees': ['ADJX', 'PX'], 'parent': 'NX', 'over_word': False, 'auto preterminals': ('NE', 'APPRART', 'NN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('NX', 'PX')}
(TOP
	(TURN
		[01;31m(SU[00m
			(NX hotels)
			(DM ja)
			(SIMPX mussen wir mal kucken)[01;31m)[00m
		(SU
			[01;36m(SU[00m
				(SIMPX
					(VF ich)
					(LK habe)
					(MF
						(ADVX hier)
						[01;31m(NX[00m
							(NX eine liste)
							(PX von meiner sekretarin drei moglichkeiten)[01;31m)[00m))[01;36m)[00m
			[01;31m(NX[00m
				[01;31m(NX[00m
					(PX maritimhotel am hauptbahnhof)
					(NX funfzehn minuten zum zentrum)[01;31m)[00m
				(DM na ja)
				(SIMPX garage brauchen wir ja nicht ein hotel luisenhof)
				(NX
					[01;36m(NX[00m
						[01;31m(NX[00m
							(NX funf minuten vom bahnhof)
							[01;31m(NX[00m
								[01;36m(NX[00m
									(NX bar)
									(NX restaurant)[01;36m)[00m
								(NX garage)[01;31m)[00m[01;31m)[00m
						[01;36m(NX[00m [01;31m(ADJX[00m
							(NX alles)
							[01;36m(NX[00m [01;31m(ADJX[00m
								(ADJD uberflussig)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m
					(KON und)
					(PX direkt beim hauptbahnhof)
					(NX noch ein hotel mit schwimm und dampfbad))[01;31m)[00m)
		(SU brauchen wir es)))
Step:Different label
{'family': ['NX', 'NX', 'KON', 'PX', 'NX'], 'auto preterminal span': (40, 42), 'span': (40, 42), 'subtrees': ['NX', 'ADJX'], 'parent': 'NX', 'over_word': False, 'auto preterminals': ('PIS', 'ADJD'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('ADJX', 'NX')}
(TOP
	(TURN
		[01;31m(SU[00m
			(NX hotels)
			(DM ja)
			(SIMPX mussen wir mal kucken)[01;31m)[00m
		(SU
			[01;36m(SU[00m
				(SIMPX
					(VF ich)
					(LK habe)
					(MF
						(ADVX hier)
						[01;31m(NX[00m
							(NX eine liste)
							(PX von meiner sekretarin drei moglichkeiten)[01;31m)[00m))[01;36m)[00m
			[01;31m(NX[00m
				[01;31m(NX[00m
					(PX maritimhotel am hauptbahnhof)
					(NX funfzehn minuten zum zentrum)[01;31m)[00m
				(DM na ja)
				(SIMPX garage brauchen wir ja nicht ein hotel luisenhof)
				(NX
					[01;36m(NX[00m
						[01;31m(NX[00m
							(NX funf minuten vom bahnhof)
							[01;31m(NX[00m
								[01;36m(NX[00m
									(NX bar)
									(NX restaurant)[01;36m)[00m
								(NX garage)[01;31m)[00m[01;31m)[00m
						(NX
							(NX alles)
							[01;36m(NX[00m [01;31m(ADJX[00m
								(ADJD uberflussig)[01;31m)[00m[01;36m)[00m)[01;36m)[00m
					(KON und)
					(PX direkt beim hauptbahnhof)
					(NX noch ein hotel mit schwimm und dampfbad))[01;31m)[00m)
		(SU brauchen wir es)))
Step:Single Word Phrase
{'family': ['NX', 'NX'], 'auto preterminal span': (41, 42), 'span': (41, 42), 'subtrees': ['ADJD'], 'parent': 'NX', 'over_word': True, 'auto preterminals': ('ADJD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'NX')}
(TOP
	(TURN
		[01;31m(SU[00m
			(NX hotels)
			(DM ja)
			(SIMPX mussen wir mal kucken)[01;31m)[00m
		(SU
			[01;36m(SU[00m
				(SIMPX
					(VF ich)
					(LK habe)
					(MF
						(ADVX hier)
						[01;31m(NX[00m
							(NX eine liste)
							(PX von meiner sekretarin drei moglichkeiten)[01;31m)[00m))[01;36m)[00m
			[01;31m(NX[00m
				[01;31m(NX[00m
					(PX maritimhotel am hauptbahnhof)
					(NX funfzehn minuten zum zentrum)[01;31m)[00m
				(DM na ja)
				(SIMPX garage brauchen wir ja nicht ein hotel luisenhof)
				(NX
					[01;36m(NX[00m
						[01;31m(NX[00m
							(NX funf minuten vom bahnhof)
							[01;31m(NX[00m
								[01;36m(NX[00m
									(NX bar)
									(NX restaurant)[01;36m)[00m
								(NX garage)[01;31m)[00m[01;31m)[00m
						(NX alles uberflussig)[01;36m)[00m
					(KON und)
					(PX direkt beim hauptbahnhof)
					(NX noch ein hotel mit schwimm und dampfbad))[01;31m)[00m)
		(SU brauchen wir es)))
Step:Co-ordination
{'new_parent': 'NX', 'new_family': ['NX', 'NX', 'NX'], 'mover info': [('NX', (40, 42))], 'old_family': ['NX', 'NX', 'KON', 'PX', 'NX'], 'start left siblings': ['NX'], 'auto preterminals': ('CARD', 'NN', 'APPRART', 'NN', 'NN', 'NN', 'NN', 'PIS', 'ADJD', 'KON', 'ADV', 'APPRART', 'NN', 'ADV', 'ART', 'NN', 'APPR', 'TRUNC', 'KON', 'NN'), 'start right siblings': ['KON', 'PX', 'NX'], 'end left siblings': ['NX', 'NX'], 'auto preterminal span': (33, 53), 'movers': ['NX'], 'old_parent': 'NX', 'end right siblings': [], 'classified_type': 'Co-ordination', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			(NX hotels)
			(DM ja)
			(SIMPX mussen wir mal kucken)[01;31m)[00m
		(SU
			[01;36m(SU[00m
				(SIMPX
					(VF ich)
					(LK habe)
					(MF
						(ADVX hier)
						[01;31m(NX[00m
							(NX eine liste)
							(PX von meiner sekretarin drei moglichkeiten)[01;31m)[00m))[01;36m)[00m
			[01;31m(NX[00m
				[01;31m(NX[00m
					(PX maritimhotel am hauptbahnhof)
					(NX funfzehn minuten zum zentrum)[01;31m)[00m
				(DM na ja)
				(SIMPX garage brauchen wir ja nicht ein hotel luisenhof)
				(NX
					(NX
						(NX funf minuten vom bahnhof)
						[01;31m(NX[00m
							[01;36m(NX[00m
								(NX bar)
								(NX restaurant)[01;36m)[00m
							(NX garage)[01;31m)[00m
						(NX alles uberflussig))
					(KON und)
					(PX direkt beim hauptbahnhof)
					(NX noch ein hotel mit schwimm und dampfbad))[01;31m)[00m)
		(SU brauchen wir es)))
Step:NP Attachment
{'new_parent': 'NX', 'new_family': ['NX', 'NX', 'NX', 'NX'], 'mover info': [('NX', (39, 40))], 'old_family': ['NX', 'NX', 'NX'], 'start left siblings': ['NX', 'NX'], 'auto preterminals': ('CARD', 'NN', 'APPRART', 'NN', 'NN', 'NN', 'NN', 'PIS', 'ADJD'), 'start right siblings': [], 'end left siblings': ['NX', 'NX'], 'auto preterminal span': (33, 42), 'movers': ['NX'], 'old_parent': 'NX', 'POS confusion': ('NN', 'NN'), 'end right siblings': ['NX'], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			(NX hotels)
			(DM ja)
			(SIMPX mussen wir mal kucken)[01;31m)[00m
		(SU
			[01;36m(SU[00m
				(SIMPX
					(VF ich)
					(LK habe)
					(MF
						(ADVX hier)
						[01;31m(NX[00m
							(NX eine liste)
							(PX von meiner sekretarin drei moglichkeiten)[01;31m)[00m))[01;36m)[00m
			[01;31m(NX[00m
				[01;31m(NX[00m
					(PX maritimhotel am hauptbahnhof)
					(NX funfzehn minuten zum zentrum)[01;31m)[00m
				(DM na ja)
				(SIMPX garage brauchen wir ja nicht ein hotel luisenhof)
				(NX funf minuten vom bahnhof bar restaurant garage alles uberflussig und direkt beim hauptbahnhof noch ein hotel mit schwimm und dampfbad)[01;31m)[00m)
		(SU brauchen wir es)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SU', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'APPR', 'PPOSAT', 'NN', 'CARD', 'NN'), 'right siblings': [(NX (NX (PX (ADJX (NE maritimhotel)) (PX (APPRART am) (NX (NN hauptbahnhof)))) (NX (NX (ADJX (CARD funfzehn)) (NN minuten)) (PX (APPRART zum) (NX (NN zentrum))))) (DM (ITJ na) (PTKANT ja)) (SIMPX (VF (NX (NN garage))) (LK (VXFIN (VVFIN brauchen))) (MF (NX (PPER wir)) (ADVX (ADV ja)) (ADVX (PTKNEG nicht)) (NX (ART ein) (NX (NX (NN hotel)) (NX (NE luisenhof)))))) (NX (NX (NX (NX (ADJX (CARD funf)) (NN minuten)) (PX (APPRART vom) (NX (NN bahnhof)))) (NX (NX (NN bar)) (NX (NN restaurant))) (NX (NN garage)) (NX (NX (PIS alles)) (NX (ADJD uberflussig)))) (KON und) (PX (ADVX (ADV direkt)) (APPRART beim) (NX (NN hauptbahnhof))) (NX (ADVX (ADV noch)) (NX (NX (ART ein) (NN hotel)) (PX (APPR mit) (NX (TRUNC schwimm) (KON und) (NN dampfbad)))))))], 'left siblings': [], 'auto preterminal span': (6, 16), 'span': (6, 16), 'parent': 'SU', 'label': 'SU', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(NX hotels)
			(DM ja)
			(SIMPX mussen wir mal kucken)[01;31m)[00m
		(SU
			(SU
				(SIMPX
					(VF ich)
					(LK habe)
					(MF
						(ADVX hier)
						[01;31m(NX[00m
							(NX eine liste)
							(PX von meiner sekretarin drei moglichkeiten)[01;31m)[00m)))
			[01;31m(NX[00m
				[01;31m(NX[00m
					(PX maritimhotel am hauptbahnhof)
					(NX funfzehn minuten zum zentrum)[01;31m)[00m
				(DM na ja)
				(SIMPX garage brauchen wir ja nicht ein hotel luisenhof)
				(NX funf minuten vom bahnhof bar restaurant garage alles uberflussig und direkt beim hauptbahnhof noch ein hotel mit schwimm und dampfbad)[01;31m)[00m)
		(SU brauchen wir es)))
Step:Clause Attachment
{'subtrees': ['NX', 'DM', 'SIMPX'], 'family': ['SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'PTKANT', 'VMFIN', 'PPER', 'ADV', 'VVINF', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'APPR', 'PPOSAT', 'NN', 'CARD', 'NN', 'NE', 'APPRART', 'NN', 'CARD', 'NN', 'APPRART', 'NN', 'ITJ', 'PTKANT', 'NN', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'NN', 'NN', 'NN', 'PIS', 'ADJD', 'KON', 'ADV', 'APPRART', 'NN', 'ADV', 'ART', 'NN', 'APPR', 'TRUNC', 'KON', 'NN', 'VVFIN', 'PPER', 'PPER'), 'right siblings': ['SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 56), 'span': (0, 6), 'left siblings': [], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(NX hotels)
		(DM ja)
		(SIMPX mussen wir mal kucken)
		(SU
			(SU
				(SIMPX
					(VF ich)
					(LK habe)
					(MF
						(ADVX hier)
						[01;31m(NX[00m
							(NX eine liste)
							(PX von meiner sekretarin drei moglichkeiten)[01;31m)[00m)))
			[01;31m(NX[00m
				[01;31m(NX[00m
					(PX maritimhotel am hauptbahnhof)
					(NX funfzehn minuten zum zentrum)[01;31m)[00m
				(DM na ja)
				(SIMPX garage brauchen wir ja nicht ein hotel luisenhof)
				(NX funf minuten vom bahnhof bar restaurant garage alles uberflussig und direkt beim hauptbahnhof noch ein hotel mit schwimm und dampfbad)[01;31m)[00m)
		(SU brauchen wir es)))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ART', 'NN', 'APPR', 'PPOSAT', 'NN', 'CARD', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (8, 16), 'span': (9, 16), 'left siblings': ['ADVX'], 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(NX hotels)
		(DM ja)
		(SIMPX mussen wir mal kucken)
		(SU
			(SU ich habe hier eine liste von meiner sekretarin drei moglichkeiten)
			[01;31m(NX[00m
				[01;31m(NX[00m
					(PX maritimhotel am hauptbahnhof)
					(NX funfzehn minuten zum zentrum)[01;31m)[00m
				(DM na ja)
				(SIMPX garage brauchen wir ja nicht ein hotel luisenhof)
				(NX funf minuten vom bahnhof bar restaurant garage alles uberflussig und direkt beim hauptbahnhof noch ein hotel mit schwimm und dampfbad)[01;31m)[00m)
		(SU brauchen wir es)))
Step:UNSET remove
{'subtrees': ['PX', 'NX'], 'family': ['NX', 'DM', 'SIMPX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NE', 'APPRART', 'NN', 'CARD', 'NN', 'APPRART', 'NN', 'ITJ', 'PTKANT', 'NN', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'NN', 'NN', 'NN', 'PIS', 'ADJD', 'KON', 'ADV', 'APPRART', 'NN', 'ADV', 'ART', 'NN', 'APPR', 'TRUNC', 'KON', 'NN'), 'right siblings': ['DM', 'SIMPX', 'NX'], 'parent': 'NX', 'auto preterminal span': (16, 53), 'span': (16, 23), 'left siblings': [], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(NX hotels)
		(DM ja)
		(SIMPX mussen wir mal kucken)
		(SU
			(SU ich habe hier eine liste von meiner sekretarin drei moglichkeiten)
			[01;31m(NX[00m
				(PX maritimhotel am hauptbahnhof)
				(NX funfzehn minuten zum zentrum)
				(DM na ja)
				(SIMPX garage brauchen wir ja nicht ein hotel luisenhof)
				(NX funf minuten vom bahnhof bar restaurant garage alles uberflussig und direkt beim hauptbahnhof noch ein hotel mit schwimm und dampfbad)[01;31m)[00m)
		(SU brauchen wir es)))
Step:Clause Attachment
{'subtrees': ['PX', 'NX', 'DM', 'SIMPX', 'NX'], 'family': ['SU', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'APPR', 'PPOSAT', 'NN', 'CARD', 'NN', 'NE', 'APPRART', 'NN', 'CARD', 'NN', 'APPRART', 'NN', 'ITJ', 'PTKANT', 'NN', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'NN', 'NN', 'NN', 'PIS', 'ADJD', 'KON', 'ADV', 'APPRART', 'NN', 'ADV', 'ART', 'NN', 'APPR', 'TRUNC', 'KON', 'NN'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (6, 53), 'span': (16, 53), 'left siblings': ['SU'], 'label': 'NX', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP hotels ja mussen wir mal kucken ich habe hier eine liste von meiner sekretarin drei moglichkeiten maritimhotel am hauptbahnhof funfzehn minuten zum zentrum na ja garage brauchen wir ja nicht ein hotel luisenhof funf minuten vom bahnhof bar restaurant garage alles uberflussig und direkt beim hauptbahnhof noch ein hotel mit schwimm und dampfbad brauchen wir es)

Sentence 450:
7 Initial errors
0 on fringe, 3 iterations
4 Error:NP Attachment
2 Error:UNSET move
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU ist ein bischen teurer)
		(SU
			(NX
				(NX
					(NX einzelzimmer)
					(NX
						[01;31m(ADJX[00m
							(CARD zwohundert)
							[01;36m(ADJX[00m
								(CARD achtundvierzig)[01;36m)[00m[01;31m)[00m
						(NN mark)))
				(KON und)
				[01;36m(NX[00m
					[01;33m(NX[00m (NX doppelzimmer)
					[01;31m(PX[00m [01;33m(PX[00m
						(APPRART im)
						[01;31m(NX[00m
							(NX doppelzimmer) [01;33mPX) NX)[00m
							(NX hundert dreiundvierzig)[01;31m)[00m[01;31m)[00m[01;36m)[00m))))
Step:NP Attachment
{'new_parent': 'NX', 'new_family': ['NX', 'KON', 'NX', 'PX', 'NX'], 'mover info': [('NX', (12, 14))], 'old_family': ['NX', 'NX'], 'start left siblings': ['NX'], 'auto preterminals': ('NN', 'CARD', 'CARD', 'NN', 'KON', 'NN', 'APPRART', 'NN', 'CARD', 'CARD'), 'start right siblings': [], 'end left siblings': ['NX', 'KON', 'NX', 'PX'], 'auto preterminal span': (4, 14), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(SU ist ein bischen teurer)
		(SU
			(NX
				(NX
					(NX einzelzimmer)
					(NX
						[01;31m(ADJX[00m
							(CARD zwohundert)
							[01;36m(ADJX[00m
								(CARD achtundvierzig)[01;36m)[00m[01;31m)[00m
						(NN mark)))
				(KON und)
				(NX
					[01;36m(NX[00m
						(NX doppelzimmer)
						(PX im doppelzimmer)[01;36m)[00m
					(NX hundert dreiundvierzig))))))
Step:UNSET move
{'new_parent': 'NX', 'new_family': ['CARD', 'ADJX', 'NN'], 'mover info': [('CARD', (5, 6))], 'old_family': ['CARD', 'CARD'], 'start left siblings': [], 'auto preterminals': ('CARD', 'CARD', 'NN'), 'start right siblings': ['CARD'], 'end left siblings': [], 'auto preterminal span': (5, 8), 'movers': ['CARD'], 'old_parent': 'ADJX', 'POS confusion': ('CARD', 'CARD'), 'end right siblings': ['ADJX', 'NN'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU ist ein bischen teurer)
		(SU
			(NX
				(NX einzelzimmer zwohundert achtundvierzig mark)
				(KON und)
				(NX
					[01;36m(NX[00m
						(NX doppelzimmer)
						(PX im doppelzimmer)[01;36m)[00m
					(NX hundert dreiundvierzig))))))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'APPRART', 'NN'), 'right siblings': [(NX (CARD hundert) (CARD dreiundvierzig))], 'left siblings': [], 'auto preterminal span': (9, 12), 'span': (9, 12), 'parent': 'NX', 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP ist ein bischen teurer einzelzimmer zwohundert achtundvierzig mark und doppelzimmer im doppelzimmer hundert dreiundvierzig)

Sentence 451:
11 Initial errors
0 on fringe, 11 iterations
1 Error:Single Word Phrase
1 Error:Modifier Attachment
1 Error:Single Word Phrase
1 Error:Unary
1 Error:PP Attachment
1 Error:Modifier Attachment
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:UNSET add
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(ADVX
				(ADVX prinzipiell)
				[01;36m(ADVX[00m
					(ADV immer)[01;36m)[00m))
		(SU
			[01;31m(SIMPX[00m
				[01;31m(PARORD[00m
					(ADVX
						(ADV nur))[01;31m)[00m
				(VF wahrscheinlich)
				(LK wird)
				[01;31m(MF[00m
					(NX es)
					[01;36m(ADJX[00m
						(PX am dienstag)
						(ADJX etwas spater)[01;36m)[00m[01;31m)[00m
				(DM ja)
				(PX am dienstag)
				(ADJX etwas spater)
				(NF [01;33m(SIMPX (NF[00m
					(SIMPX
						(C bis)
						[01;31m(FKOORD[00m
							[01;31m(MVC[00m
								(MF wir uberhaupt)
								(VC loskommen)[01;31m)[00m [01;33mNF) SIMPX)[00m
							[01;36m(KOORD[00m
								(KON und)[01;36m)[00m
							[01;31m(MVC[00m
								(MF was)
								(VC unternehmen konnen)[01;31m)[00m[01;31m)[00m))[01;31m)[00m
			(DM also)
			(SIMPX fur viele veranstaltungen wird es eher zu spat werden))))
Step:Single Word Phrase
{'subtrees': ['ADV'], 'family': ['ADVX', 'ADVX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADV',), 'right siblings': [], 'left siblings': [(ADVX (ADV prinzipiell))], 'auto preterminal span': (1, 2), 'span': (1, 2), 'parent': 'ADVX', 'label': 'ADVX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SU prinzipiell immer)
		(SU
			[01;31m(SIMPX[00m
				[01;31m(PARORD[00m
					(ADVX
						(ADV nur))[01;31m)[00m
				(VF wahrscheinlich)
				(LK wird)
				[01;31m(MF[00m
					(NX es)
					[01;36m(ADJX[00m
						(PX am dienstag)
						(ADJX etwas spater)[01;36m)[00m[01;31m)[00m
				(DM ja)
				(PX am dienstag)
				(ADJX etwas spater)
				(NF [01;33m(SIMPX (NF[00m
					(SIMPX
						(C bis)
						[01;31m(FKOORD[00m
							[01;31m(MVC[00m
								(MF wir uberhaupt)
								(VC loskommen)[01;31m)[00m [01;33mNF) SIMPX)[00m
							[01;36m(KOORD[00m
								(KON und)[01;36m)[00m
							[01;31m(MVC[00m
								(MF was)
								(VC unternehmen konnen)[01;31m)[00m[01;31m)[00m))[01;31m)[00m
			(DM also)
			(SIMPX fur viele veranstaltungen wird es eher zu spat werden))))
Step:Modifier Attachment
{'subtrees': ['PX', 'ADJX'], 'family': ['NX', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'NN', 'ADV', 'ADJD'), 'right siblings': [], 'left siblings': [(NX (PPER es))], 'auto preterminal span': (6, 10), 'span': (6, 10), 'parent': 'MF', 'label': 'ADJX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU prinzipiell immer)
		(SU
			[01;31m(SIMPX[00m
				[01;31m(PARORD[00m
					(ADVX
						(ADV nur))[01;31m)[00m
				(VF wahrscheinlich)
				(LK wird)
				[01;31m(MF[00m
					(NX es)
					(ADJX am dienstag etwas spater)[01;31m)[00m
				(DM ja)
				(PX am dienstag)
				(ADJX etwas spater)
				(NF [01;33m(SIMPX (NF[00m
					(SIMPX
						(C bis)
						[01;31m(FKOORD[00m
							[01;31m(MVC[00m
								(MF wir uberhaupt)
								(VC loskommen)[01;31m)[00m [01;33mNF) SIMPX)[00m
							[01;36m(KOORD[00m
								(KON und)[01;36m)[00m
							[01;31m(MVC[00m
								(MF was)
								(VC unternehmen konnen)[01;31m)[00m[01;31m)[00m))[01;31m)[00m
			(DM also)
			(SIMPX fur viele veranstaltungen wird es eher zu spat werden))))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['MVC', 'KOORD', 'MVC'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON',), 'right siblings': [(MVC (MF (NX (PIS was))) (VC (VXINF (VVINF unternehmen)) (VXFIN (VMFIN konnen))))], 'left siblings': [(MVC (MF (NX (PPER wir)) (ADVX (ADV uberhaupt))) (VC (VXFIN (VVFIN loskommen))))], 'auto preterminal span': (19, 20), 'span': (19, 20), 'parent': 'FKOORD', 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SU prinzipiell immer)
		(SU
			[01;31m(SIMPX[00m
				[01;31m(PARORD[00m
					(ADVX
						(ADV nur))[01;31m)[00m
				(VF wahrscheinlich)
				(LK wird)
				[01;31m(MF[00m
					(NX es)
					(ADJX am dienstag etwas spater)[01;31m)[00m
				(DM ja)
				(PX am dienstag)
				(ADJX etwas spater)
				(NF [01;33m(SIMPX (NF[00m
					(SIMPX
						(C bis)
						[01;31m(FKOORD[00m
							[01;31m(MVC[00m
								(MF wir uberhaupt)
								(VC loskommen)[01;31m)[00m [01;33mNF) SIMPX)[00m
							(KOORD und)
							[01;31m(MVC[00m
								(MF was)
								(VC unternehmen konnen)[01;31m)[00m[01;31m)[00m))[01;31m)[00m
			(DM also)
			(SIMPX fur viele veranstaltungen wird es eher zu spat werden))))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['PARORD', 'VF', 'LK', 'MF', 'DM', 'PX', 'ADJX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'VAFIN', 'PPER', 'APPRART', 'NN', 'ADV', 'ADJD', 'PTKANT', 'APPRART', 'NN', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'VVFIN', 'KON', 'PIS', 'VVINF', 'VMFIN'), 'right siblings': ['VF', 'LK', 'MF', 'DM', 'PX', 'ADJX', 'NF'], 'parent': 'SIMPX', 'auto preterminal span': (2, 23), 'span': (2, 3), 'left siblings': [], 'label': 'PARORD', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU prinzipiell immer)
		(SU
			[01;31m(SIMPX[00m
				(ADVX nur)
				(VF wahrscheinlich)
				(LK wird)
				[01;31m(MF[00m
					(NX es)
					(ADJX am dienstag etwas spater)[01;31m)[00m
				(DM ja)
				(PX am dienstag)
				(ADJX etwas spater)
				(NF [01;33m(SIMPX (NF[00m
					(SIMPX
						(C bis)
						[01;31m(FKOORD[00m
							[01;31m(MVC[00m
								(MF wir uberhaupt)
								(VC loskommen)[01;31m)[00m [01;33mNF) SIMPX)[00m
							(KOORD und)
							[01;31m(MVC[00m
								(MF was)
								(VC unternehmen konnen)[01;31m)[00m[01;31m)[00m))[01;31m)[00m
			(DM also)
			(SIMPX fur viele veranstaltungen wird es eher zu spat werden))))
Step:PP Attachment
{'subtrees': ['ADVX', 'VF', 'LK', 'MF', 'DM', 'PX', 'ADJX', 'NF'], 'family': ['SIMPX', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'VAFIN', 'PPER', 'APPRART', 'NN', 'ADV', 'ADJD', 'PTKANT', 'APPRART', 'NN', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'VVFIN', 'KON', 'PIS', 'VVINF', 'VMFIN', 'ADV', 'APPR', 'PIDAT', 'NN', 'VAFIN', 'PPER', 'ADV', 'PTKA', 'ADJD', 'VAINF'), 'right siblings': ['DM', 'SIMPX'], 'parent': 'SU', 'auto preterminal span': (2, 33), 'span': (2, 23), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU prinzipiell immer)
		(SU
			(ADVX nur)
			(VF wahrscheinlich)
			(LK wird)
			[01;31m(MF[00m
				(NX es)
				(ADJX am dienstag etwas spater)[01;31m)[00m
			(DM ja)
			(PX am dienstag)
			(ADJX etwas spater)
			(NF [01;33m(SIMPX (NF[00m
				(SIMPX
					(C bis)
					[01;31m(FKOORD[00m
						[01;31m(MVC[00m
							(MF wir uberhaupt)
							(VC loskommen)[01;31m)[00m [01;33mNF) SIMPX)[00m
						(KOORD und)
						[01;31m(MVC[00m
							(MF was)
							(VC unternehmen konnen)[01;31m)[00m[01;31m)[00m))
			(DM also)
			(SIMPX fur viele veranstaltungen wird es eher zu spat werden))))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADJX'], 'family': ['ADVX', 'VF', 'LK', 'MF', 'DM', 'PX', 'ADJX', 'NF', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'VAFIN', 'PPER', 'APPRART', 'NN', 'ADV', 'ADJD', 'PTKANT', 'APPRART', 'NN', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'VVFIN', 'KON', 'PIS', 'VVINF', 'VMFIN', 'ADV', 'APPR', 'PIDAT', 'NN', 'VAFIN', 'PPER', 'ADV', 'PTKA', 'ADJD', 'VAINF'), 'right siblings': ['DM', 'PX', 'ADJX', 'NF', 'DM', 'SIMPX'], 'parent': 'SU', 'auto preterminal span': (2, 33), 'span': (5, 10), 'left siblings': ['ADVX', 'VF', 'LK'], 'label': 'MF', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU prinzipiell immer)
		(SU
			(ADVX nur)
			(VF wahrscheinlich)
			(LK wird)
			(NX es)
			(ADJX am dienstag etwas spater)
			(DM ja)
			(PX am dienstag)
			(ADJX etwas spater)
			(NF [01;33m(SIMPX (NF[00m
				(SIMPX
					(C bis)
					[01;31m(FKOORD[00m
						[01;31m(MVC[00m
							(MF wir uberhaupt)
							(VC loskommen)[01;31m)[00m [01;33mNF) SIMPX)[00m
						(KOORD und)
						[01;31m(MVC[00m
							(MF was)
							(VC unternehmen konnen)[01;31m)[00m[01;31m)[00m))
			(DM also)
			(SIMPX fur viele veranstaltungen wird es eher zu spat werden))))
Step:UNSET remove
{'subtrees': ['MF', 'VC'], 'family': ['MVC', 'KOORD', 'MVC'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV', 'VVFIN', 'KON', 'PIS', 'VVINF', 'VMFIN'), 'right siblings': ['KOORD', 'MVC'], 'parent': 'FKOORD', 'auto preterminal span': (16, 23), 'span': (16, 19), 'left siblings': [], 'label': 'MVC', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU prinzipiell immer)
		(SU
			(ADVX nur)
			(VF wahrscheinlich)
			(LK wird)
			(NX es)
			(ADJX am dienstag etwas spater)
			(DM ja)
			(PX am dienstag)
			(ADJX etwas spater)
			(NF [01;33m(SIMPX (NF[00m
				(SIMPX
					(C bis)
					[01;31m(FKOORD[00m
						(MF wir uberhaupt)
						(VC loskommen) [01;33mNF) SIMPX)[00m
						(KOORD und)
						[01;31m(MVC[00m
							(MF was)
							(VC unternehmen konnen)[01;31m)[00m[01;31m)[00m))
			(DM also)
			(SIMPX fur viele veranstaltungen wird es eher zu spat werden))))
Step:UNSET remove
{'subtrees': ['MF', 'VC', 'KOORD', 'MVC'], 'family': ['C', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'VVFIN', 'KON', 'PIS', 'VVINF', 'VMFIN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (15, 23), 'span': (16, 23), 'left siblings': ['C'], 'label': 'FKOORD', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU prinzipiell immer)
		(SU
			(ADVX nur)
			(VF wahrscheinlich)
			(LK wird)
			(NX es)
			(ADJX am dienstag etwas spater)
			(DM ja)
			(PX am dienstag)
			(ADJX etwas spater)
			(NF
				(SIMPX
					[01;36m(SIMPX[00m
						[01;36m(NF[00m
							(C bis)
							(MF wir uberhaupt)
							(VC loskommen)[01;36m)[00m[01;36m)[00m
					(KOORD und)
					[01;31m(MVC[00m
						(MF was)
						(VC unternehmen konnen)[01;31m)[00m))
			(DM also)
			(SIMPX fur viele veranstaltungen wird es eher zu spat werden))))
Step:UNSET add
{'subtrees': ['C', 'MF', 'VC'], 'family': ['NF', 'KOORD', 'MVC'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'VVFIN'), 'right siblings': [(KOORD (KON und)), (MVC (MF (NX (PIS was))) (VC (VXINF (VVINF unternehmen)) (VXFIN (VMFIN konnen))))], 'left siblings': [], 'auto preterminal span': (15, 19), 'span': (15, 19), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU prinzipiell immer)
		(SU
			(ADVX nur)
			(VF wahrscheinlich)
			(LK wird)
			(NX es)
			(ADJX am dienstag etwas spater)
			(DM ja)
			(PX am dienstag)
			(ADJX etwas spater)
			(NF
				(SIMPX
					[01;36m(SIMPX[00m
						(NF
							(C bis)
							(MF wir uberhaupt)
							(VC loskommen))[01;36m)[00m
					(KOORD und)
					[01;31m(MVC[00m
						(MF was)
						(VC unternehmen konnen)[01;31m)[00m))
			(DM also)
			(SIMPX fur viele veranstaltungen wird es eher zu spat werden))))
Step:Unary
{'subtrees': ['NF'], 'family': ['SIMPX', 'KOORD', 'MVC'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'VVFIN'), 'right siblings': [(KOORD (KON und)), (MVC (MF (NX (PIS was))) (VC (VXINF (VVINF unternehmen)) (VXFIN (VMFIN konnen))))], 'left siblings': [], 'auto preterminal span': (15, 19), 'span': (15, 19), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU prinzipiell immer)
		(SU
			(ADVX nur)
			(VF wahrscheinlich)
			(LK wird)
			(NX es)
			(ADJX am dienstag etwas spater)
			(DM ja)
			(PX am dienstag)
			(ADJX etwas spater)
			(NF
				(SIMPX
					(SIMPX bis wir uberhaupt loskommen)
					(KOORD und)
					[01;31m(MVC[00m
						(MF was)
						(VC unternehmen konnen)[01;31m)[00m))
			(DM also)
			(SIMPX fur viele veranstaltungen wird es eher zu spat werden))))
Step:UNSET remove
{'subtrees': ['MF', 'VC'], 'family': ['SIMPX', 'KOORD', 'MVC'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'VVFIN', 'KON', 'PIS', 'VVINF', 'VMFIN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (15, 23), 'span': (20, 23), 'left siblings': ['SIMPX', 'KOORD'], 'label': 'MVC', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP prinzipiell immer nur wahrscheinlich wird es am dienstag etwas spater ja am dienstag etwas spater bis wir uberhaupt loskommen und was unternehmen konnen also fur viele veranstaltungen wird es eher zu spat werden)

Sentence 452:
0 Initial errors
0 on fringe, 0 iterations

Sentence 453:
10 Initial errors
0 on fringe, 9 iterations
2 Error:Modifier Attachment
1 Error:Unary
1 Error:Unary
1 Error:Single Word Phrase
1 Error:UNSET remove
1 Error:PP Attachment
1 Error:UNSET remove
1 Error:Clause Attachment
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU also ich wurde mal sagen im april ist es ein bischen schlecht)
		(SU
			(SIMPX
				(VF ich)
				(LK habe)
				(MF
					(PX
						[01;31m(PX[00m
							(APPR in)
							[01;33m(NX[00m (NX der mitte)[01;31m)[00m
						(PX vom april)) [01;33mNX)[00m
					(NX urlaub)))
			[01;31m(PX[00m
				[01;36m(DM[00m
					(ADVX
						(ADV also))[01;36m)[00m
				[01;36m(LV[00m
					(PX [01;33m(SIMPX[00m
						(APPR uber)
						(NX ostern))[01;36m)[00m[01;31m)[00m
			(SIMPX wir fahren uber ostern weg)) [01;33mSIMPX)[00m
		(SU
			(SIMPX
				(VF ich)
				(LK wurde)
				(MF
					(ADJX am liebsten)
					[01;36m(PX[00m
						(ADVX direkt)
						[01;31m(PX[00m
							(APPR in)
							(NX den mai)[01;31m)[00m[01;36m)[00m)
				(VC gehen)))
		(SU
			(SIMPX
				(KOORD und)
				(VF da)
				(LK ware)
				[01;31m(MF[00m
					(PX bei mir)
					(NX die erste maiwoche)[01;31m)[00m)
			(DM also)
			(SIMPX
				(VF
					(NX
						[01;36m(NX[00m
							(NN dienstag)[01;36m)[00m
						(NX funfter mai)))
				(LK konnte)
				(MF ich))
			(DM also)
			(SIMPX funfter sechster mai hatte ich zeit))))
Step:Modifier Attachment
{'new_parent': 'PX', 'new_family': ['ADVX', 'APPR', 'NX'], 'mover info': [('ADVX', (32, 33))], 'old_family': ['ADJX', 'ADVX', 'PX'], 'start left siblings': ['ADJX'], 'auto preterminals': ('PTKA', 'ADJD', 'ADV', 'APPR', 'ART', 'NN'), 'start right siblings': ['PX'], 'end left siblings': [], 'auto preterminal span': (30, 36), 'movers': ['ADVX'], 'old_parent': 'MF', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['APPR', 'NX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU also ich wurde mal sagen im april ist es ein bischen schlecht)
		(SU
			(SIMPX
				(VF ich)
				(LK habe)
				(MF
					(PX
						[01;31m(PX[00m
							(APPR in)
							[01;33m(NX[00m (NX der mitte)[01;31m)[00m
						(PX vom april)) [01;33mNX)[00m
					(NX urlaub)))
			[01;31m(PX[00m
				[01;36m(DM[00m
					(ADVX
						(ADV also))[01;36m)[00m
				[01;36m(LV[00m
					(PX [01;33m(SIMPX[00m
						(APPR uber)
						(NX ostern))[01;36m)[00m[01;31m)[00m
			(SIMPX wir fahren uber ostern weg)) [01;33mSIMPX)[00m
		(SU ich wurde am liebsten direkt in den mai gehen)
		(SU
			(SIMPX
				(KOORD und)
				(VF da)
				(LK ware)
				[01;31m(MF[00m
					(PX bei mir)
					(NX die erste maiwoche)[01;31m)[00m)
			(DM also)
			(SIMPX
				(VF
					(NX
						[01;36m(NX[00m
							(NN dienstag)[01;36m)[00m
						(NX funfter mai)))
				(LK konnte)
				(MF ich))
			(DM also)
			(SIMPX funfter sechster mai hatte ich zeit))))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['DM', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV',), 'right siblings': [(PX (APPR uber) (NX (NE ostern)))], 'left siblings': [], 'auto preterminal span': (20, 21), 'span': (20, 21), 'parent': 'PX', 'label': 'DM', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU also ich wurde mal sagen im april ist es ein bischen schlecht)
		(SU
			(SIMPX
				(VF ich)
				(LK habe)
				(MF
					(PX
						[01;31m(PX[00m
							(APPR in)
							[01;33m(NX[00m (NX der mitte)[01;31m)[00m
						(PX vom april)) [01;33mNX)[00m
					(NX urlaub)))
			[01;31m(PX[00m
				(DM also)
				[01;36m(LV[00m
					(PX [01;33m(SIMPX[00m
						(APPR uber)
						(NX ostern))[01;36m)[00m[01;31m)[00m
			(SIMPX wir fahren uber ostern weg)) [01;33mSIMPX)[00m
		(SU ich wurde am liebsten direkt in den mai gehen)
		(SU
			(SIMPX
				(KOORD und)
				(VF da)
				(LK ware)
				[01;31m(MF[00m
					(PX bei mir)
					(NX die erste maiwoche)[01;31m)[00m)
			(DM also)
			(SIMPX
				(VF
					(NX
						[01;36m(NX[00m
							(NN dienstag)[01;36m)[00m
						(NX funfter mai)))
				(LK konnte)
				(MF ich))
			(DM also)
			(SIMPX funfter sechster mai hatte ich zeit))))
Step:Unary
{'subtrees': ['PX'], 'family': ['DM', 'LV'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'NE'), 'right siblings': [], 'left siblings': [(DM (ADVX (ADV also)))], 'auto preterminal span': (21, 23), 'span': (21, 23), 'parent': 'PX', 'label': 'LV', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU also ich wurde mal sagen im april ist es ein bischen schlecht)
		(SU
			(SIMPX
				(VF ich)
				(LK habe)
				(MF
					(PX
						[01;31m(PX[00m
							(APPR in)
							[01;33m(NX[00m (NX der mitte)[01;31m)[00m
						(PX vom april)) [01;33mNX)[00m
					(NX urlaub)))
			[01;31m(PX[00m
				(DM also)
				[01;33m(SIMPX[00m (LV uber ostern)[01;31m)[00m
			(SIMPX wir fahren uber ostern weg)) [01;33mSIMPX)[00m
		(SU ich wurde am liebsten direkt in den mai gehen)
		(SU
			(SIMPX
				(KOORD und)
				(VF da)
				(LK ware)
				[01;31m(MF[00m
					(PX bei mir)
					(NX die erste maiwoche)[01;31m)[00m)
			(DM also)
			(SIMPX
				(VF
					(NX
						[01;36m(NX[00m
							(NN dienstag)[01;36m)[00m
						(NX funfter mai)))
				(LK konnte)
				(MF ich))
			(DM also)
			(SIMPX funfter sechster mai hatte ich zeit))))
Step:Single Word Phrase
{'subtrees': ['NN'], 'family': ['NX', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('NN',), 'right siblings': [(NX (ADJX (ADJA funfter)) (NN mai))], 'left siblings': [], 'auto preterminal span': (46, 47), 'span': (46, 47), 'parent': 'NX', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SU also ich wurde mal sagen im april ist es ein bischen schlecht)
		(SU
			(SIMPX
				(VF ich)
				(LK habe)
				(MF
					(PX
						[01;31m(PX[00m
							(APPR in)
							[01;33m(NX[00m (NX der mitte)[01;31m)[00m
						(PX vom april)) [01;33mNX)[00m
					(NX urlaub)))
			[01;31m(PX[00m
				(DM also)
				[01;33m(SIMPX[00m (LV uber ostern)[01;31m)[00m
			(SIMPX wir fahren uber ostern weg)) [01;33mSIMPX)[00m
		(SU ich wurde am liebsten direkt in den mai gehen)
		(SU
			(SIMPX
				(KOORD und)
				(VF da)
				(LK ware)
				[01;31m(MF[00m
					(PX bei mir)
					(NX die erste maiwoche)[01;31m)[00m)
			(DM also)
			(SIMPX dienstag funfter mai konnte ich)
			(DM also)
			(SIMPX funfter sechster mai hatte ich zeit))))
Step:UNSET remove
{'subtrees': ['APPR', 'NX'], 'family': ['PX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NN', 'APPRART', 'NN'), 'right siblings': ['PX'], 'parent': 'PX', 'auto preterminal span': (14, 19), 'span': (14, 17), 'left siblings': [], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU also ich wurde mal sagen im april ist es ein bischen schlecht)
		(SU
			(SIMPX
				(VF ich)
				(LK habe)
				(MF
					(PX
						(APPR in)
						[01;36m(NX[00m
							(NX der mitte)
							(PX vom april)[01;36m)[00m)
					(NX urlaub)))
			[01;31m(PX[00m
				(DM also)
				[01;33m(SIMPX[00m (LV uber ostern)[01;31m)[00m
			(SIMPX wir fahren uber ostern weg)) [01;33mSIMPX)[00m
		(SU ich wurde am liebsten direkt in den mai gehen)
		(SU
			(SIMPX
				(KOORD und)
				(VF da)
				(LK ware)
				[01;31m(MF[00m
					(PX bei mir)
					(NX die erste maiwoche)[01;31m)[00m)
			(DM also)
			(SIMPX dienstag funfter mai konnte ich)
			(DM also)
			(SIMPX funfter sechster mai hatte ich zeit))))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['APPR', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'APPRART', 'NN'), 'right siblings': [], 'left siblings': [(APPR in)], 'auto preterminal span': (15, 19), 'span': (15, 19), 'parent': 'PX', 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU also ich wurde mal sagen im april ist es ein bischen schlecht)
		(SU
			(SIMPX ich habe in der mitte vom april urlaub)
			[01;31m(PX[00m
				(DM also)
				[01;33m(SIMPX[00m (LV uber ostern)[01;31m)[00m
			(SIMPX wir fahren uber ostern weg)) [01;33mSIMPX)[00m
		(SU ich wurde am liebsten direkt in den mai gehen)
		(SU
			(SIMPX
				(KOORD und)
				(VF da)
				(LK ware)
				[01;31m(MF[00m
					(PX bei mir)
					(NX die erste maiwoche)[01;31m)[00m)
			(DM also)
			(SIMPX dienstag funfter mai konnte ich)
			(DM also)
			(SIMPX funfter sechster mai hatte ich zeit))))
Step:UNSET remove
{'subtrees': ['DM', 'LV'], 'family': ['SIMPX', 'PX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'NN', 'ADV', 'APPR', 'NE', 'PPER', 'VVFIN', 'APPR', 'NE', 'PTKVZ'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (12, 28), 'span': (20, 23), 'left siblings': ['SIMPX'], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU also ich wurde mal sagen im april ist es ein bischen schlecht)
		(SU
			(SIMPX ich habe in der mitte vom april urlaub)
			(DM also)
			[01;36m(SIMPX[00m
				(LV uber ostern)
				(SIMPX wir fahren uber ostern weg)[01;36m)[00m)
		(SU ich wurde am liebsten direkt in den mai gehen)
		(SU
			(SIMPX
				(KOORD und)
				(VF da)
				(LK ware)
				[01;31m(MF[00m
					(PX bei mir)
					(NX die erste maiwoche)[01;31m)[00m)
			(DM also)
			(SIMPX dienstag funfter mai konnte ich)
			(DM also)
			(SIMPX funfter sechster mai hatte ich zeit))))
Step:Clause Attachment
{'subtrees': ['LV', 'SIMPX'], 'family': ['SIMPX', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'NE', 'PPER', 'VVFIN', 'APPR', 'NE', 'PTKVZ'), 'right siblings': [], 'left siblings': [(SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VAFIN habe))) (MF (PX (APPR in) (NX (NX (ART der) (NN mitte)) (PX (APPRART vom) (NX (NN april))))) (NX (NN urlaub)))), (DM (ADVX (ADV also)))], 'auto preterminal span': (21, 28), 'span': (21, 28), 'parent': 'SU', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU also ich wurde mal sagen im april ist es ein bischen schlecht)
		(SU ich habe in der mitte vom april urlaub also uber ostern wir fahren uber ostern weg)
		(SU ich wurde am liebsten direkt in den mai gehen)
		(SU
			(SIMPX
				(KOORD und)
				(VF da)
				(LK ware)
				[01;31m(MF[00m
					(PX bei mir)
					(NX die erste maiwoche)[01;31m)[00m)
			(DM also)
			(SIMPX dienstag funfter mai konnte ich)
			(DM also)
			(SIMPX funfter sechster mai hatte ich zeit))))
Step:UNSET remove
{'subtrees': ['PX', 'NX'], 'family': ['KOORD', 'VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'ADV', 'VAFIN', 'APPR', 'PPER', 'ART', 'ADJA', 'NN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (37, 45), 'span': (40, 45), 'left siblings': ['KOORD', 'VF', 'LK'], 'label': 'MF', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP also ich wurde mal sagen im april ist es ein bischen schlecht ich habe in der mitte vom april urlaub also uber ostern wir fahren uber ostern weg ich wurde am liebsten direkt in den mai gehen und da ware bei mir die erste maiwoche also dienstag funfter mai konnte ich also funfter sechster mai hatte ich zeit)

Sentence 454:
1 Initial errors
0 on fringe, 1 iterations
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM okay)
			(SIMPX dann haben wir da keine chance)
			(SIMPX
				(VF wie)
				(LK ware)
				(MF
					(NX es)
					[01;31m(PX[00m
						(PX in der nachsten woche)
						(NX montag dienstag)[01;31m)[00m)))
		(SU das ist der elfte und zwolfte mai)))
Step:UNSET remove
{'subtrees': ['PX', 'NX'], 'family': ['NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'APPR', 'ART', 'ADJA', 'NN', 'NN', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (9, 16), 'span': (10, 16), 'left siblings': ['NX'], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP okay dann haben wir da keine chance wie ware es in der nachsten woche montag dienstag das ist der elfte und zwolfte mai)

Sentence 455:
0 Initial errors
0 on fringe, 0 iterations

Sentence 456:
27 Initial errors
0 on fringe, 21 iterations
3 Error:UNSET move
2 Error:Different label
2 Error:Single Word Phrase
2 Error:Clause Attachment
2 Error:UNSET move
1 Error:Co-ordination
1 Error:Unary
1 Error:UNSET add
1 Error:Unary
1 Error:Single Word Phrase
1 Error:UNSET add
1 Error:Unary
1 Error:PP Attachment
1 Error:Unary
1 Error:UNSET remove
1 Error:Clause Attachment
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:UNSET add
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;36m(SU[00m
			(SU
				(DM also)
				(SIMPX
					(VF ich)
					(LK denke)
					[01;36m(NF[00m
						[01;36m(SIMPX[00m
							[01;31m(SIMPX[00m
								(LK sagen)
								[01;33m(MF[00m (MF wir mal)[01;31m)[00m
							[01;31m(MF[00m
								[01;31m(NX[00m
									[01;36m(PX[00m
										(PX mit dem ice)
										(NX funf stunden)[01;36m)[00m
									(PX nach hannover)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m) [01;33mMF)[00m
				[01;36m(SIMPX[00m
					[01;31m(SIMPX[00m
						(KOORD und)
						(VF wir)
						(LK mussen)[01;31m)[00m
					(DM na ja)
					(SIMPX funfzehn uhr mussen wir vielleicht da sein)[01;36m)[00m)
			(SU
				[01;31m(SIMPX[00m
					[01;36m(SIMPX[00m
						[01;36m(VF[00m [01;31m(LV[00m
							(SIMPX
								(C wenn)
								(MF wir dann um neun oder zehn)
								(VC fahren))[01;31m)[00m[01;36m)[00m
						[01;31m(SIMPX[00m
							(LK sagen)
							(MF wir)
							(NF wir konnten um neun fahren)[01;31m)[00m[01;36m)[00m
					(VF dann)
					[01;31m(FKOORD[00m
						[01;31m(LKM[00m
							(LK nehmen)
							(MF wir ein zweites fruhstuck im ice)[01;31m)[00m
						[01;31m(LKM[00m
							(LK lesen)
							[01;36m(MF[00m
								(NX [01;33m(NX (MF[00m
									(ART ein)
									(ADJX bischen)
									(NN zeitung))[01;36m)[00m[01;31m)[00m
						[01;31m(LKMVC[00m
							(LK haben)
							(MF das meeting) [01;33mMF) NX)[00m
							(VC vorbereitet)[01;31m)[00m
						[01;36m(SIMPX[00m
							[01;36m(KOORD[00m
								(KON und)[01;36m)[00m
							(LKMVC
								(LK kommen)
								(MF
									(ADVX dann)
									(PX
										(APPR um)
										(NX
											[01;36m(ADJX[00m [01;31m(NX[00m
												(CARD zwei)[01;31m)[00m[01;36m)[00m
											(KON oder)
											(NX drei)))
									(PX in hannover))
								(VC an))[01;36m)[00m[01;31m)[00m[01;31m)[00m)[01;36m)[00m
		(SU
			[01;31m(SIMPX[00m
				(VF das)
				(LK ware)
				(MF doch)[01;31m)[00m
			(SIMPX das konnten wir noch machen))))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['LK', 'MF', 'MF'], 'mover info': [('MF', (6, 13))], 'old_family': ['VF', 'LK', 'SIMPX', 'MF'], 'start left siblings': ['VF', 'LK', 'SIMPX'], 'auto preterminals': ('PPER', 'VVFIN', 'VVFIN', 'PPER', 'ADV', 'APPR', 'ART', 'NE', 'CARD', 'NN', 'APPR', 'NE'), 'start right siblings': [], 'end left siblings': ['LK', 'MF'], 'auto preterminal span': (1, 13), 'adding node already present': False, 'movers': ['MF'], 'old_parent': 'SIMPX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'ADJX'}
(TOP
	(TURN
		[01;36m(SU[00m
			(SU
				(DM also)
				(SIMPX
					(VF ich)
					(LK denke)
					[01;36m(NF[00m
						(SIMPX
							(LK sagen)
							(MF
								(MF wir mal)
								[01;31m(MF[00m
									[01;31m(NX[00m
										[01;36m(PX[00m
											(PX mit dem ice)
											(NX funf stunden)[01;36m)[00m
										(PX nach hannover)[01;31m)[00m[01;31m)[00m))[01;36m)[00m)
				[01;36m(SIMPX[00m
					[01;31m(SIMPX[00m
						(KOORD und)
						(VF wir)
						(LK mussen)[01;31m)[00m
					(DM na ja)
					(SIMPX funfzehn uhr mussen wir vielleicht da sein)[01;36m)[00m)
			(SU
				[01;31m(SIMPX[00m
					[01;36m(SIMPX[00m
						[01;36m(VF[00m [01;31m(LV[00m
							(SIMPX
								(C wenn)
								(MF wir dann um neun oder zehn)
								(VC fahren))[01;31m)[00m[01;36m)[00m
						[01;31m(SIMPX[00m
							(LK sagen)
							(MF wir)
							(NF wir konnten um neun fahren)[01;31m)[00m[01;36m)[00m
					(VF dann)
					[01;31m(FKOORD[00m
						[01;31m(LKM[00m
							(LK nehmen)
							(MF wir ein zweites fruhstuck im ice)[01;31m)[00m
						[01;31m(LKM[00m
							(LK lesen)
							[01;36m(MF[00m
								(NX [01;33m(NX (MF[00m
									(ART ein)
									(ADJX bischen)
									(NN zeitung))[01;36m)[00m[01;31m)[00m
						[01;31m(LKMVC[00m
							(LK haben)
							(MF das meeting) [01;33mMF) NX)[00m
							(VC vorbereitet)[01;31m)[00m
						[01;36m(SIMPX[00m
							[01;36m(KOORD[00m
								(KON und)[01;36m)[00m
							(LKMVC
								(LK kommen)
								(MF
									(ADVX dann)
									(PX
										(APPR um)
										(NX
											[01;36m(ADJX[00m [01;31m(NX[00m
												(CARD zwei)[01;31m)[00m[01;36m)[00m
											(KON oder)
											(NX drei)))
									(PX in hannover))
								(VC an))[01;36m)[00m[01;31m)[00m[01;31m)[00m)[01;36m)[00m
		(SU
			[01;31m(SIMPX[00m
				(VF das)
				(LK ware)
				(MF doch)[01;31m)[00m
			(SIMPX das konnten wir noch machen))))
Step:Different label
{'family': ['VF', 'SIMPX', 'VF', 'FKOORD'], 'auto preterminal span': (25, 33), 'span': (25, 33), 'subtrees': ['SIMPX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'APPR', 'CARD', 'KON', 'CARD', 'VVFIN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('LV', 'VF')}
(TOP
	(TURN
		[01;36m(SU[00m
			(SU
				(DM also)
				(SIMPX
					(VF ich)
					(LK denke)
					[01;36m(NF[00m
						(SIMPX
							(LK sagen)
							(MF
								(MF wir mal)
								[01;31m(MF[00m
									[01;31m(NX[00m
										[01;36m(PX[00m
											(PX mit dem ice)
											(NX funf stunden)[01;36m)[00m
										(PX nach hannover)[01;31m)[00m[01;31m)[00m))[01;36m)[00m)
				[01;36m(SIMPX[00m
					[01;31m(SIMPX[00m
						(KOORD und)
						(VF wir)
						(LK mussen)[01;31m)[00m
					(DM na ja)
					(SIMPX funfzehn uhr mussen wir vielleicht da sein)[01;36m)[00m)
			(SU
				[01;31m(SIMPX[00m
					[01;36m(SIMPX[00m
						(VF wenn wir dann um neun oder zehn fahren)
						[01;31m(SIMPX[00m
							(LK sagen)
							(MF wir)
							(NF wir konnten um neun fahren)[01;31m)[00m[01;36m)[00m
					(VF dann)
					[01;31m(FKOORD[00m
						[01;31m(LKM[00m
							(LK nehmen)
							(MF wir ein zweites fruhstuck im ice)[01;31m)[00m
						[01;31m(LKM[00m
							(LK lesen)
							[01;36m(MF[00m
								(NX [01;33m(NX (MF[00m
									(ART ein)
									(ADJX bischen)
									(NN zeitung))[01;36m)[00m[01;31m)[00m
						[01;31m(LKMVC[00m
							(LK haben)
							(MF das meeting) [01;33mMF) NX)[00m
							(VC vorbereitet)[01;31m)[00m
						[01;36m(SIMPX[00m
							[01;36m(KOORD[00m
								(KON und)[01;36m)[00m
							(LKMVC
								(LK kommen)
								(MF
									(ADVX dann)
									(PX
										(APPR um)
										(NX
											[01;36m(ADJX[00m [01;31m(NX[00m
												(CARD zwei)[01;31m)[00m[01;36m)[00m
											(KON oder)
											(NX drei)))
									(PX in hannover))
								(VC an))[01;36m)[00m[01;31m)[00m[01;31m)[00m)[01;36m)[00m
		(SU
			[01;31m(SIMPX[00m
				(VF das)
				(LK ware)
				(MF doch)[01;31m)[00m
			(SIMPX das konnten wir noch machen))))
Step:Single Word Phrase
{'family': ['ADJX', 'KON', 'NX'], 'auto preterminal span': (60, 61), 'span': (60, 61), 'subtrees': ['CARD'], 'parent': 'NX', 'over_word': True, 'auto preterminals': ('CARD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('NX', 'ADJX')}
(TOP
	(TURN
		[01;36m(SU[00m
			(SU
				(DM also)
				(SIMPX
					(VF ich)
					(LK denke)
					[01;36m(NF[00m
						(SIMPX
							(LK sagen)
							(MF
								(MF wir mal)
								[01;31m(MF[00m
									[01;31m(NX[00m
										[01;36m(PX[00m
											(PX mit dem ice)
											(NX funf stunden)[01;36m)[00m
										(PX nach hannover)[01;31m)[00m[01;31m)[00m))[01;36m)[00m)
				[01;36m(SIMPX[00m
					[01;31m(SIMPX[00m
						(KOORD und)
						(VF wir)
						(LK mussen)[01;31m)[00m
					(DM na ja)
					(SIMPX funfzehn uhr mussen wir vielleicht da sein)[01;36m)[00m)
			(SU
				[01;31m(SIMPX[00m
					[01;36m(SIMPX[00m
						(VF wenn wir dann um neun oder zehn fahren)
						[01;31m(SIMPX[00m
							(LK sagen)
							(MF wir)
							(NF wir konnten um neun fahren)[01;31m)[00m[01;36m)[00m
					(VF dann)
					[01;31m(FKOORD[00m
						[01;31m(LKM[00m
							(LK nehmen)
							(MF wir ein zweites fruhstuck im ice)[01;31m)[00m
						[01;31m(LKM[00m
							(LK lesen)
							[01;36m(MF[00m
								(NX [01;33m(NX (MF[00m
									(ART ein)
									(ADJX bischen)
									(NN zeitung))[01;36m)[00m[01;31m)[00m
						[01;31m(LKMVC[00m
							(LK haben)
							(MF das meeting) [01;33mMF) NX)[00m
							(VC vorbereitet)[01;31m)[00m
						[01;36m(SIMPX[00m
							[01;36m(KOORD[00m
								(KON und)[01;36m)[00m
							(LKMVC kommen dann um zwei oder drei in hannover an)[01;36m)[00m[01;31m)[00m[01;31m)[00m)[01;36m)[00m
		(SU
			[01;31m(SIMPX[00m
				(VF das)
				(LK ware)
				(MF doch)[01;31m)[00m
			(SIMPX das konnten wir noch machen))))
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['KOORD', 'VF', 'LK', 'DM', 'SIMPX'], 'mover info': [('DM', (16, 18)), ('SIMPX', (18, 25))], 'old_family': ['DM', 'SIMPX', 'SIMPX', 'DM', 'SIMPX'], 'start left siblings': ['DM', 'SIMPX', 'SIMPX'], 'auto preterminals': ('ADV', 'PPER', 'VVFIN', 'VVFIN', 'PPER', 'ADV', 'APPR', 'ART', 'NE', 'CARD', 'NN', 'APPR', 'NE', 'KON', 'PPER', 'VMFIN', 'ITJ', 'PTKANT', 'CARD', 'NN', 'VMFIN', 'PPER', 'ADV', 'ADV', 'VAINF'), 'start right siblings': [], 'end left siblings': ['KOORD', 'VF', 'LK'], 'auto preterminal span': (0, 25), 'movers': ['DM', 'SIMPX'], 'old_parent': 'SU', 'end right siblings': [], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;36m(SU[00m
			(SU
				(DM also)
				(SIMPX
					(VF ich)
					(LK denke)
					[01;36m(NF[00m
						(SIMPX
							(LK sagen)
							(MF
								(MF wir mal)
								[01;31m(MF[00m
									[01;31m(NX[00m
										[01;36m(PX[00m
											(PX mit dem ice)
											(NX funf stunden)[01;36m)[00m
										(PX nach hannover)[01;31m)[00m[01;31m)[00m))[01;36m)[00m)
				(SIMPX und wir mussen na ja funfzehn uhr mussen wir vielleicht da sein))
			(SU
				[01;31m(SIMPX[00m
					[01;36m(SIMPX[00m
						(VF wenn wir dann um neun oder zehn fahren)
						[01;31m(SIMPX[00m
							(LK sagen)
							(MF wir)
							(NF wir konnten um neun fahren)[01;31m)[00m[01;36m)[00m
					(VF dann)
					[01;31m(FKOORD[00m
						[01;31m(LKM[00m
							(LK nehmen)
							(MF wir ein zweites fruhstuck im ice)[01;31m)[00m
						[01;31m(LKM[00m
							(LK lesen)
							[01;36m(MF[00m
								(NX [01;33m(NX (MF[00m
									(ART ein)
									(ADJX bischen)
									(NN zeitung))[01;36m)[00m[01;31m)[00m
						[01;31m(LKMVC[00m
							(LK haben)
							(MF das meeting) [01;33mMF) NX)[00m
							(VC vorbereitet)[01;31m)[00m
						[01;36m(SIMPX[00m
							[01;36m(KOORD[00m
								(KON und)[01;36m)[00m
							(LKMVC kommen dann um zwei oder drei in hannover an)[01;36m)[00m[01;31m)[00m[01;31m)[00m)[01;36m)[00m
		(SU
			[01;31m(SIMPX[00m
				(VF das)
				(LK ware)
				(MF doch)[01;31m)[00m
			(SIMPX das konnten wir noch machen))))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'NF'], 'mover info': [('VF', (25, 33))], 'old_family': ['VF', 'SIMPX', 'VF', 'FKOORD'], 'start left siblings': [], 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'APPR', 'CARD', 'KON', 'CARD', 'VVFIN', 'VVFIN', 'PPER', 'PPER', 'VMFIN', 'APPR', 'CARD', 'VVINF', 'ADV', 'VVFIN', 'PPER', 'ART', 'ADJA', 'NN', 'APPRART', 'NE', 'VVFIN', 'ART', 'PIDAT', 'NN', 'VAFIN', 'ART', 'NN', 'VVPP', 'KON', 'VVFIN', 'ADV', 'APPR', 'CARD', 'KON', 'CARD', 'APPR', 'NE', 'PTKVZ'), 'start right siblings': ['SIMPX', 'VF', 'FKOORD'], 'end left siblings': [], 'auto preterminal span': (25, 66), 'movers': ['VF'], 'old_parent': 'SIMPX', 'end right siblings': ['LK', 'MF', 'NF'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		[01;36m(SU[00m
			(SU
				(DM also)
				(SIMPX
					(VF ich)
					(LK denke)
					[01;36m(NF[00m
						(SIMPX
							(LK sagen)
							(MF
								(MF wir mal)
								[01;31m(MF[00m
									[01;31m(NX[00m
										[01;36m(PX[00m
											(PX mit dem ice)
											(NX funf stunden)[01;36m)[00m
										(PX nach hannover)[01;31m)[00m[01;31m)[00m))[01;36m)[00m)
				(SIMPX und wir mussen na ja funfzehn uhr mussen wir vielleicht da sein))
			(SU
				[01;31m(SIMPX[00m
					(SIMPX wenn wir dann um neun oder zehn fahren sagen wir wir konnten um neun fahren)
					(VF dann)
					[01;31m(FKOORD[00m
						[01;31m(LKM[00m
							(LK nehmen)
							(MF wir ein zweites fruhstuck im ice)[01;31m)[00m
						[01;31m(LKM[00m
							(LK lesen)
							[01;36m(MF[00m
								(NX [01;33m(NX (MF[00m
									(ART ein)
									(ADJX bischen)
									(NN zeitung))[01;36m)[00m[01;31m)[00m
						[01;31m(LKMVC[00m
							(LK haben)
							(MF das meeting) [01;33mMF) NX)[00m
							(VC vorbereitet)[01;31m)[00m
						[01;36m(SIMPX[00m
							[01;36m(KOORD[00m
								(KON und)[01;36m)[00m
							(LKMVC kommen dann um zwei oder drei in hannover an)[01;36m)[00m[01;31m)[00m[01;31m)[00m)[01;36m)[00m
		(SU
			[01;31m(SIMPX[00m
				(VF das)
				(LK ware)
				(MF doch)[01;31m)[00m
			(SIMPX das konnten wir noch machen))))
Step:Co-ordination
{'subtrees': ['SU', 'SU'], 'family': ['SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPER', 'VVFIN', 'VVFIN', 'PPER', 'ADV', 'APPR', 'ART', 'NE', 'CARD', 'NN', 'APPR', 'NE', 'KON', 'PPER', 'VMFIN', 'ITJ', 'PTKANT', 'CARD', 'NN', 'VMFIN', 'PPER', 'ADV', 'ADV', 'VAINF', 'KOUS', 'PPER', 'ADV', 'APPR', 'CARD', 'KON', 'CARD', 'VVFIN', 'VVFIN', 'PPER', 'PPER', 'VMFIN', 'APPR', 'CARD', 'VVINF', 'ADV', 'VVFIN', 'PPER', 'ART', 'ADJA', 'NN', 'APPRART', 'NE', 'VVFIN', 'ART', 'PIDAT', 'NN', 'VAFIN', 'ART', 'NN', 'VVPP', 'KON', 'VVFIN', 'ADV', 'APPR', 'CARD', 'KON', 'CARD', 'APPR', 'NE', 'PTKVZ'), 'right siblings': [(SU (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VAFIN ware))) (MF (ADVX (ADV doch)))) (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VMFIN konnten))) (MF (NX (PPER wir)) (ADVX (ADV noch))) (VC (VXINF (VVINF machen)))))], 'left siblings': [], 'auto preterminal span': (0, 66), 'span': (0, 66), 'parent': 'TURN', 'label': 'SU', 'classified_type': 'Co-ordination', 'type': 'add'}
(TOP
	(TURN
		(SU
			(SU
				(DM also)
				(SIMPX
					(VF ich)
					(LK denke)
					[01;36m(NF[00m
						(SIMPX
							(LK sagen)
							(MF
								(MF wir mal)
								[01;31m(MF[00m
									[01;31m(NX[00m
										[01;36m(PX[00m
											(PX mit dem ice)
											(NX funf stunden)[01;36m)[00m
										(PX nach hannover)[01;31m)[00m[01;31m)[00m))[01;36m)[00m)
				(SIMPX und wir mussen na ja funfzehn uhr mussen wir vielleicht da sein))
			(SU
				[01;31m(SIMPX[00m
					(SIMPX wenn wir dann um neun oder zehn fahren sagen wir wir konnten um neun fahren)
					(VF dann)
					[01;31m(FKOORD[00m
						[01;31m(LKM[00m
							(LK nehmen)
							(MF wir ein zweites fruhstuck im ice)[01;31m)[00m
						[01;31m(LKM[00m
							(LK lesen)
							[01;36m(MF[00m
								(NX [01;33m(NX (MF[00m
									(ART ein)
									(ADJX bischen)
									(NN zeitung))[01;36m)[00m[01;31m)[00m
						[01;31m(LKMVC[00m
							(LK haben)
							(MF das meeting) [01;33mMF) NX)[00m
							(VC vorbereitet)[01;31m)[00m
						[01;36m(SIMPX[00m
							[01;36m(KOORD[00m
								(KON und)[01;36m)[00m
							(LKMVC kommen dann um zwei oder drei in hannover an)[01;36m)[00m[01;31m)[00m[01;31m)[00m))
		(SU
			[01;31m(SIMPX[00m
				(VF das)
				(LK ware)
				(MF doch)[01;31m)[00m
			(SIMPX das konnten wir noch machen))))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['VF', 'LK', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'ADV', 'APPR', 'ART', 'NE', 'CARD', 'NN', 'APPR', 'NE'), 'right siblings': [], 'left siblings': [(VF (NX (PPER ich))), (LK (VXFIN (VVFIN denke)))], 'auto preterminal span': (3, 13), 'span': (3, 13), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU
			(SU
				(DM also)
				(SIMPX
					(VF ich)
					(LK denke)
					(NF
						(SIMPX
							(LK sagen)
							(MF
								(MF wir mal)
								[01;31m(MF[00m
									[01;31m(NX[00m
										[01;36m(PX[00m
											(PX mit dem ice)
											(NX funf stunden)[01;36m)[00m
										(PX nach hannover)[01;31m)[00m[01;31m)[00m))))
				(SIMPX und wir mussen na ja funfzehn uhr mussen wir vielleicht da sein))
			(SU
				[01;31m(SIMPX[00m
					(SIMPX wenn wir dann um neun oder zehn fahren sagen wir wir konnten um neun fahren)
					(VF dann)
					[01;31m(FKOORD[00m
						[01;31m(LKM[00m
							(LK nehmen)
							(MF wir ein zweites fruhstuck im ice)[01;31m)[00m
						[01;31m(LKM[00m
							(LK lesen)
							[01;36m(MF[00m
								(NX [01;33m(NX (MF[00m
									(ART ein)
									(ADJX bischen)
									(NN zeitung))[01;36m)[00m[01;31m)[00m
						[01;31m(LKMVC[00m
							(LK haben)
							(MF das meeting) [01;33mMF) NX)[00m
							(VC vorbereitet)[01;31m)[00m
						[01;36m(SIMPX[00m
							[01;36m(KOORD[00m
								(KON und)[01;36m)[00m
							(LKMVC kommen dann um zwei oder drei in hannover an)[01;36m)[00m[01;31m)[00m[01;31m)[00m))
		(SU
			[01;31m(SIMPX[00m
				(VF das)
				(LK ware)
				(MF doch)[01;31m)[00m
			(SIMPX das konnten wir noch machen))))
Step:UNSET add
{'subtrees': ['PX', 'NX'], 'family': ['PX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NE', 'CARD', 'NN'), 'right siblings': [(PX (APPR nach) (NX (NE hannover)))], 'left siblings': [], 'auto preterminal span': (6, 11), 'span': (6, 11), 'parent': 'NX', 'label': 'PX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU
			(SU
				(DM also)
				(SIMPX
					(VF ich)
					(LK denke)
					(NF
						(SIMPX
							(LK sagen)
							(MF
								(MF wir mal)
								[01;31m(MF[00m
									[01;31m(NX[00m
										(PX mit dem ice funf stunden)
										(PX nach hannover)[01;31m)[00m[01;31m)[00m))))
				(SIMPX und wir mussen na ja funfzehn uhr mussen wir vielleicht da sein))
			(SU
				[01;31m(SIMPX[00m
					(SIMPX wenn wir dann um neun oder zehn fahren sagen wir wir konnten um neun fahren)
					(VF dann)
					[01;31m(FKOORD[00m
						[01;31m(LKM[00m
							(LK nehmen)
							(MF wir ein zweites fruhstuck im ice)[01;31m)[00m
						[01;31m(LKM[00m
							(LK lesen)
							[01;36m(MF[00m
								(NX [01;33m(NX (MF[00m
									(ART ein)
									(ADJX bischen)
									(NN zeitung))[01;36m)[00m[01;31m)[00m
						[01;31m(LKMVC[00m
							(LK haben)
							(MF das meeting) [01;33mMF) NX)[00m
							(VC vorbereitet)[01;31m)[00m
						[01;36m(SIMPX[00m
							[01;36m(KOORD[00m
								(KON und)[01;36m)[00m
							(LKMVC kommen dann um zwei oder drei in hannover an)[01;36m)[00m[01;31m)[00m[01;31m)[00m))
		(SU
			[01;31m(SIMPX[00m
				(VF das)
				(LK ware)
				(MF doch)[01;31m)[00m
			(SIMPX das konnten wir noch machen))))
Step:Unary
{'subtrees': ['NX'], 'family': ['LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'PIDAT', 'NN'), 'right siblings': [], 'left siblings': [(LK (VXFIN (VVFIN lesen)))], 'auto preterminal span': (49, 52), 'span': (49, 52), 'parent': 'LKM', 'label': 'MF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU
			(SU
				(DM also)
				(SIMPX
					(VF ich)
					(LK denke)
					(NF
						(SIMPX
							(LK sagen)
							(MF
								(MF wir mal)
								[01;31m(MF[00m
									[01;31m(NX[00m
										(PX mit dem ice funf stunden)
										(PX nach hannover)[01;31m)[00m[01;31m)[00m))))
				(SIMPX und wir mussen na ja funfzehn uhr mussen wir vielleicht da sein))
			(SU
				[01;31m(SIMPX[00m
					(SIMPX wenn wir dann um neun oder zehn fahren sagen wir wir konnten um neun fahren)
					(VF dann)
					[01;31m(FKOORD[00m
						[01;31m(LKM[00m
							(LK nehmen)
							(MF wir ein zweites fruhstuck im ice)[01;31m)[00m
						[01;31m(LKM[00m
							(LK lesen)
							[01;33m(NX (MF[00m (MF ein bischen zeitung)[01;31m)[00m
						[01;31m(LKMVC[00m
							(LK haben)
							(MF das meeting) [01;33mMF) NX)[00m
							(VC vorbereitet)[01;31m)[00m
						[01;36m(SIMPX[00m
							[01;36m(KOORD[00m
								(KON und)[01;36m)[00m
							(LKMVC kommen dann um zwei oder drei in hannover an)[01;36m)[00m[01;31m)[00m[01;31m)[00m))
		(SU
			[01;31m(SIMPX[00m
				(VF das)
				(LK ware)
				(MF doch)[01;31m)[00m
			(SIMPX das konnten wir noch machen))))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['LKM', 'LKM', 'LKMVC', 'KOORD', 'LKMVC'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON',), 'right siblings': [(LKMVC (LK (VXFIN (VVFIN kommen))) (MF (ADVX (ADV dann)) (PX (APPR um) (NX (ADJX (CARD zwei)) (KON oder) (NX (CARD drei)))) (PX (APPR in) (NX (NE hannover)))) (VC (PTKVZ an)))], 'left siblings': [(LKM (LK (VXFIN (VVFIN nehmen))) (MF (NX (PPER wir)) (NX (ART ein) (ADJX (ADJA zweites)) (NN fruhstuck)) (PX (APPRART im) (NX (NE ice))))), (LKM (LK (VXFIN (VVFIN lesen))) (MF (NX (ART ein) (ADJX (PIDAT bischen)) (NN zeitung)))), (LKMVC (LK (VXFIN (VAFIN haben))) (MF (NX (ART das) (NN meeting))) (VC (VXINF (VVPP vorbereitet))))], 'auto preterminal span': (56, 57), 'span': (56, 57), 'parent': 'FKOORD', 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SU
			(SU
				(DM also)
				(SIMPX
					(VF ich)
					(LK denke)
					(NF
						(SIMPX
							(LK sagen)
							(MF
								(MF wir mal)
								[01;31m(MF[00m
									[01;31m(NX[00m
										(PX mit dem ice funf stunden)
										(PX nach hannover)[01;31m)[00m[01;31m)[00m))))
				(SIMPX und wir mussen na ja funfzehn uhr mussen wir vielleicht da sein))
			(SU
				[01;31m(SIMPX[00m
					(SIMPX wenn wir dann um neun oder zehn fahren sagen wir wir konnten um neun fahren)
					(VF dann)
					[01;31m(FKOORD[00m
						[01;31m(LKM[00m
							(LK nehmen)
							(MF wir ein zweites fruhstuck im ice)[01;31m)[00m
						[01;31m(LKM[00m
							(LK lesen)
							[01;33m(NX (MF[00m (MF ein bischen zeitung)[01;31m)[00m
						[01;31m(LKMVC[00m
							(LK haben)
							(MF das meeting) [01;33mMF) NX)[00m
							(VC vorbereitet)[01;31m)[00m
						[01;36m(SIMPX[00m
							(KOORD und)
							(LKMVC kommen dann um zwei oder drei in hannover an)[01;36m)[00m[01;31m)[00m[01;31m)[00m))
		(SU
			[01;31m(SIMPX[00m
				(VF das)
				(LK ware)
				(MF doch)[01;31m)[00m
			(SIMPX das konnten wir noch machen))))
Step:UNSET add
{'subtrees': ['KOORD', 'LKMVC'], 'family': ['LKM', 'LKM', 'LKMVC', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'VVFIN', 'ADV', 'APPR', 'CARD', 'KON', 'CARD', 'APPR', 'NE', 'PTKVZ'), 'right siblings': [], 'left siblings': [(LKM (LK (VXFIN (VVFIN nehmen))) (MF (NX (PPER wir)) (NX (ART ein) (ADJX (ADJA zweites)) (NN fruhstuck)) (PX (APPRART im) (NX (NE ice))))), (LKM (LK (VXFIN (VVFIN lesen))) (MF (NX (ART ein) (ADJX (PIDAT bischen)) (NN zeitung)))), (LKMVC (LK (VXFIN (VAFIN haben))) (MF (NX (ART das) (NN meeting))) (VC (VXINF (VVPP vorbereitet))))], 'auto preterminal span': (56, 66), 'span': (56, 66), 'parent': 'FKOORD', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU
			(SU
				(DM also)
				(SIMPX
					(VF ich)
					(LK denke)
					(NF
						(SIMPX
							(LK sagen)
							(MF
								(MF wir mal)
								[01;31m(MF[00m
									[01;31m(NX[00m
										(PX mit dem ice funf stunden)
										(PX nach hannover)[01;31m)[00m[01;31m)[00m))))
				(SIMPX und wir mussen na ja funfzehn uhr mussen wir vielleicht da sein))
			(SU
				[01;31m(SIMPX[00m
					(SIMPX wenn wir dann um neun oder zehn fahren sagen wir wir konnten um neun fahren)
					(VF dann)
					[01;31m(FKOORD[00m
						[01;31m(LKM[00m
							(LK nehmen)
							(MF wir ein zweites fruhstuck im ice)[01;31m)[00m
						[01;31m(LKM[00m
							(LK lesen)
							[01;33m(NX (MF[00m (MF ein bischen zeitung)[01;31m)[00m
						[01;31m(LKMVC[00m
							(LK haben)
							(MF das meeting) [01;33mMF) NX)[00m
							(VC vorbereitet)[01;31m)[00m
						(SIMPX und kommen dann um zwei oder drei in hannover an)[01;31m)[00m[01;31m)[00m))
		(SU
			[01;31m(SIMPX[00m
				(VF das)
				(LK ware)
				(MF doch)[01;31m)[00m
			(SIMPX das konnten wir noch machen))))
Step:Unary
{'subtrees': ['NX'], 'family': ['MF', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV', 'APPR', 'ART', 'NE', 'CARD', 'NN', 'APPR', 'NE'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (4, 13), 'span': (6, 13), 'left siblings': ['MF'], 'label': 'MF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(SU
				(DM also)
				(SIMPX
					(VF ich)
					(LK denke)
					(NF
						(SIMPX
							(LK sagen)
							(MF
								(MF wir mal)
								[01;31m(NX[00m
									(PX mit dem ice funf stunden)
									(PX nach hannover)[01;31m)[00m))))
				(SIMPX und wir mussen na ja funfzehn uhr mussen wir vielleicht da sein))
			(SU
				[01;31m(SIMPX[00m
					(SIMPX wenn wir dann um neun oder zehn fahren sagen wir wir konnten um neun fahren)
					(VF dann)
					[01;31m(FKOORD[00m
						[01;31m(LKM[00m
							(LK nehmen)
							(MF wir ein zweites fruhstuck im ice)[01;31m)[00m
						[01;31m(LKM[00m
							(LK lesen)
							[01;33m(NX (MF[00m (MF ein bischen zeitung)[01;31m)[00m
						[01;31m(LKMVC[00m
							(LK haben)
							(MF das meeting) [01;33mMF) NX)[00m
							(VC vorbereitet)[01;31m)[00m
						(SIMPX und kommen dann um zwei oder drei in hannover an)[01;31m)[00m[01;31m)[00m))
		(SU
			[01;31m(SIMPX[00m
				(VF das)
				(LK ware)
				(MF doch)[01;31m)[00m
			(SIMPX das konnten wir noch machen))))
Step:PP Attachment
{'subtrees': ['PX', 'PX'], 'family': ['MF', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV', 'APPR', 'ART', 'NE', 'CARD', 'NN', 'APPR', 'NE'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (4, 13), 'span': (6, 13), 'left siblings': ['MF'], 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(SU also ich denke sagen wir mal mit dem ice funf stunden nach hannover und wir mussen na ja funfzehn uhr mussen wir vielleicht da sein)
			(SU
				[01;31m(SIMPX[00m
					(SIMPX wenn wir dann um neun oder zehn fahren sagen wir wir konnten um neun fahren)
					(VF dann)
					[01;31m(FKOORD[00m
						[01;31m(LKM[00m
							(LK nehmen)
							(MF wir ein zweites fruhstuck im ice)[01;31m)[00m
						[01;31m(LKM[00m
							(LK lesen)
							[01;33m(NX (MF[00m (MF ein bischen zeitung)[01;31m)[00m
						[01;31m(LKMVC[00m
							(LK haben)
							(MF das meeting) [01;33mMF) NX)[00m
							(VC vorbereitet)[01;31m)[00m
						(SIMPX und kommen dann um zwei oder drei in hannover an)[01;31m)[00m[01;31m)[00m))
		(SU
			[01;31m(SIMPX[00m
				(VF das)
				(LK ware)
				(MF doch)[01;31m)[00m
			(SIMPX das konnten wir noch machen))))
Step:Unary
{'subtrees': ['SIMPX', 'VF', 'FKOORD'], 'family': ['SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'APPR', 'CARD', 'KON', 'CARD', 'VVFIN', 'VVFIN', 'PPER', 'PPER', 'VMFIN', 'APPR', 'CARD', 'VVINF', 'ADV', 'VVFIN', 'PPER', 'ART', 'ADJA', 'NN', 'APPRART', 'NE', 'VVFIN', 'ART', 'PIDAT', 'NN', 'VAFIN', 'ART', 'NN', 'VVPP', 'KON', 'VVFIN', 'ADV', 'APPR', 'CARD', 'KON', 'CARD', 'APPR', 'NE', 'PTKVZ'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (25, 66), 'span': (25, 66), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(SU also ich denke sagen wir mal mit dem ice funf stunden nach hannover und wir mussen na ja funfzehn uhr mussen wir vielleicht da sein)
			(SU
				(SIMPX wenn wir dann um neun oder zehn fahren sagen wir wir konnten um neun fahren)
				(VF dann)
				[01;31m(FKOORD[00m
					[01;31m(LKM[00m
						(LK nehmen)
						(MF wir ein zweites fruhstuck im ice)[01;31m)[00m
					[01;31m(LKM[00m
						(LK lesen)
						[01;33m(NX (MF[00m (MF ein bischen zeitung)[01;31m)[00m
					[01;31m(LKMVC[00m
						(LK haben)
						(MF das meeting) [01;33mMF) NX)[00m
						(VC vorbereitet)[01;31m)[00m
					(SIMPX und kommen dann um zwei oder drei in hannover an)[01;31m)[00m))
		(SU
			[01;31m(SIMPX[00m
				(VF das)
				(LK ware)
				(MF doch)[01;31m)[00m
			(SIMPX das konnten wir noch machen))))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['LKM', 'LKM', 'LKMVC', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'ART', 'ADJA', 'NN', 'APPRART', 'NE', 'VVFIN', 'ART', 'PIDAT', 'NN', 'VAFIN', 'ART', 'NN', 'VVPP', 'KON', 'VVFIN', 'ADV', 'APPR', 'CARD', 'KON', 'CARD', 'APPR', 'NE', 'PTKVZ'), 'right siblings': ['LKM', 'LKMVC', 'SIMPX'], 'parent': 'FKOORD', 'auto preterminal span': (41, 66), 'span': (41, 48), 'left siblings': [], 'label': 'LKM', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(SU also ich denke sagen wir mal mit dem ice funf stunden nach hannover und wir mussen na ja funfzehn uhr mussen wir vielleicht da sein)
			(SU
				(SIMPX wenn wir dann um neun oder zehn fahren sagen wir wir konnten um neun fahren)
				(VF dann)
				[01;31m(FKOORD[00m
					(LK nehmen)
					(MF wir ein zweites fruhstuck im ice)
					[01;31m(LKM[00m
						(LK lesen)
						[01;33m(NX (MF[00m (MF ein bischen zeitung)[01;31m)[00m
					[01;31m(LKMVC[00m
						(LK haben)
						(MF das meeting) [01;33mMF) NX)[00m
						(VC vorbereitet)[01;31m)[00m
					(SIMPX und kommen dann um zwei oder drei in hannover an)[01;31m)[00m))
		(SU
			[01;31m(SIMPX[00m
				(VF das)
				(LK ware)
				(MF doch)[01;31m)[00m
			(SIMPX das konnten wir noch machen))))
Step:Clause Attachment
{'subtrees': ['LK', 'MF', 'LKM', 'LKMVC', 'SIMPX'], 'family': ['SIMPX', 'VF', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'APPR', 'CARD', 'KON', 'CARD', 'VVFIN', 'VVFIN', 'PPER', 'PPER', 'VMFIN', 'APPR', 'CARD', 'VVINF', 'ADV', 'VVFIN', 'PPER', 'ART', 'ADJA', 'NN', 'APPRART', 'NE', 'VVFIN', 'ART', 'PIDAT', 'NN', 'VAFIN', 'ART', 'NN', 'VVPP', 'KON', 'VVFIN', 'ADV', 'APPR', 'CARD', 'KON', 'CARD', 'APPR', 'NE', 'PTKVZ'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (25, 66), 'span': (41, 66), 'left siblings': ['SIMPX', 'VF'], 'label': 'FKOORD', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(SU also ich denke sagen wir mal mit dem ice funf stunden nach hannover und wir mussen na ja funfzehn uhr mussen wir vielleicht da sein)
			(SU
				(SIMPX wenn wir dann um neun oder zehn fahren sagen wir wir konnten um neun fahren)
				(VF dann)
				(LK nehmen)
				(MF wir ein zweites fruhstuck im ice)
				[01;31m(LKM[00m
					(LK lesen)
					[01;33m(NX (MF[00m (MF ein bischen zeitung)[01;31m)[00m
				[01;31m(LKMVC[00m
					(LK haben)
					(MF das meeting) [01;33mMF) NX)[00m
					(VC vorbereitet)[01;31m)[00m
				(SIMPX und kommen dann um zwei oder drei in hannover an)))
		(SU
			[01;31m(SIMPX[00m
				(VF das)
				(LK ware)
				(MF doch)[01;31m)[00m
			(SIMPX das konnten wir noch machen))))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['SIMPX', 'VF', 'LK', 'MF', 'LKM', 'LKMVC', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'APPR', 'CARD', 'KON', 'CARD', 'VVFIN', 'VVFIN', 'PPER', 'PPER', 'VMFIN', 'APPR', 'CARD', 'VVINF', 'ADV', 'VVFIN', 'PPER', 'ART', 'ADJA', 'NN', 'APPRART', 'NE', 'VVFIN', 'ART', 'PIDAT', 'NN', 'VAFIN', 'ART', 'NN', 'VVPP', 'KON', 'VVFIN', 'ADV', 'APPR', 'CARD', 'KON', 'CARD', 'APPR', 'NE', 'PTKVZ'), 'right siblings': ['LKMVC', 'SIMPX'], 'parent': 'SU', 'auto preterminal span': (25, 66), 'span': (48, 52), 'left siblings': ['SIMPX', 'VF', 'LK', 'MF'], 'label': 'LKM', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(SU also ich denke sagen wir mal mit dem ice funf stunden nach hannover und wir mussen na ja funfzehn uhr mussen wir vielleicht da sein)
			(SU
				(SIMPX wenn wir dann um neun oder zehn fahren sagen wir wir konnten um neun fahren)
				(VF dann)
				(LK nehmen)
				(MF wir ein zweites fruhstuck im ice)
				(LK lesen)
				[01;33m(NX (MF[00m (MF ein bischen zeitung)
				[01;31m(LKMVC[00m
					(LK haben)
					(MF das meeting) [01;33mMF) NX)[00m
					(VC vorbereitet)[01;31m)[00m
				(SIMPX und kommen dann um zwei oder drei in hannover an)))
		(SU
			[01;31m(SIMPX[00m
				(VF das)
				(LK ware)
				(MF doch)[01;31m)[00m
			(SIMPX das konnten wir noch machen))))
Step:UNSET remove
{'subtrees': ['LK', 'MF', 'VC'], 'family': ['SIMPX', 'VF', 'LK', 'MF', 'LK', 'MF', 'LKMVC', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'APPR', 'CARD', 'KON', 'CARD', 'VVFIN', 'VVFIN', 'PPER', 'PPER', 'VMFIN', 'APPR', 'CARD', 'VVINF', 'ADV', 'VVFIN', 'PPER', 'ART', 'ADJA', 'NN', 'APPRART', 'NE', 'VVFIN', 'ART', 'PIDAT', 'NN', 'VAFIN', 'ART', 'NN', 'VVPP', 'KON', 'VVFIN', 'ADV', 'APPR', 'CARD', 'KON', 'CARD', 'APPR', 'NE', 'PTKVZ'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (25, 66), 'span': (52, 56), 'left siblings': ['SIMPX', 'VF', 'LK', 'MF', 'LK', 'MF'], 'label': 'LKMVC', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(SU also ich denke sagen wir mal mit dem ice funf stunden nach hannover und wir mussen na ja funfzehn uhr mussen wir vielleicht da sein)
			(SU
				(SIMPX wenn wir dann um neun oder zehn fahren sagen wir wir konnten um neun fahren)
				(VF dann)
				(LK nehmen)
				(MF wir ein zweites fruhstuck im ice)
				(LK lesen)
				[01;36m(NX[00m
					[01;36m(MF[00m
						(MF ein bischen zeitung)
						(LK haben)
						(MF das meeting)[01;36m)[00m[01;36m)[00m
				(VC vorbereitet)
				(SIMPX und kommen dann um zwei oder drei in hannover an)))
		(SU
			[01;31m(SIMPX[00m
				(VF das)
				(LK ware)
				(MF doch)[01;31m)[00m
			(SIMPX das konnten wir noch machen))))
Step:UNSET add
{'subtrees': ['MF', 'LK', 'MF'], 'family': ['SIMPX', 'VF', 'LK', 'MF', 'LK', 'MF', 'VC', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'PIDAT', 'NN', 'VAFIN', 'ART', 'NN'), 'right siblings': [(VC (VXINF (VVPP vorbereitet))), (SIMPX (KOORD (KON und)) (LKMVC (LK (VXFIN (VVFIN kommen))) (MF (ADVX (ADV dann)) (PX (APPR um) (NX (ADJX (CARD zwei)) (KON oder) (NX (CARD drei)))) (PX (APPR in) (NX (NE hannover)))) (VC (PTKVZ an))))], 'left siblings': [(SIMPX (VF (SIMPX (C (KOUS wenn)) (MF (NX (PPER wir)) (ADVX (ADV dann)) (PX (APPR um) (NX (NX (CARD neun)) (KON oder) (NX (CARD zehn))))) (VC (VXFIN (VVFIN fahren))))) (LK (VXFIN (VVFIN sagen))) (MF (NX (PPER wir))) (NF (SIMPX (VF (NX (PPER wir))) (LK (VXFIN (VMFIN konnten))) (MF (PX (APPR um) (NX (CARD neun)))) (VC (VXINF (VVINF fahren)))))), (VF (ADVX (ADV dann))), (LK (VXFIN (VVFIN nehmen))), (MF (NX (PPER wir)) (NX (ART ein) (ADJX (ADJA zweites)) (NN fruhstuck)) (PX (APPRART im) (NX (NE ice)))), (LK (VXFIN (VVFIN lesen)))], 'auto preterminal span': (49, 55), 'span': (49, 55), 'parent': 'SU', 'label': 'MF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU
			(SU also ich denke sagen wir mal mit dem ice funf stunden nach hannover und wir mussen na ja funfzehn uhr mussen wir vielleicht da sein)
			(SU
				(SIMPX wenn wir dann um neun oder zehn fahren sagen wir wir konnten um neun fahren)
				(VF dann)
				(LK nehmen)
				(MF wir ein zweites fruhstuck im ice)
				(LK lesen)
				[01;36m(NX[00m
					(MF
						(MF ein bischen zeitung)
						(LK haben)
						(MF das meeting))[01;36m)[00m
				(VC vorbereitet)
				(SIMPX und kommen dann um zwei oder drei in hannover an)))
		(SU
			[01;31m(SIMPX[00m
				(VF das)
				(LK ware)
				(MF doch)[01;31m)[00m
			(SIMPX das konnten wir noch machen))))
Step:Unary
{'subtrees': ['MF'], 'family': ['SIMPX', 'VF', 'LK', 'MF', 'LK', 'NX', 'VC', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'PIDAT', 'NN', 'VAFIN', 'ART', 'NN'), 'right siblings': [(VC (VXINF (VVPP vorbereitet))), (SIMPX (KOORD (KON und)) (LKMVC (LK (VXFIN (VVFIN kommen))) (MF (ADVX (ADV dann)) (PX (APPR um) (NX (ADJX (CARD zwei)) (KON oder) (NX (CARD drei)))) (PX (APPR in) (NX (NE hannover)))) (VC (PTKVZ an))))], 'left siblings': [(SIMPX (VF (SIMPX (C (KOUS wenn)) (MF (NX (PPER wir)) (ADVX (ADV dann)) (PX (APPR um) (NX (NX (CARD neun)) (KON oder) (NX (CARD zehn))))) (VC (VXFIN (VVFIN fahren))))) (LK (VXFIN (VVFIN sagen))) (MF (NX (PPER wir))) (NF (SIMPX (VF (NX (PPER wir))) (LK (VXFIN (VMFIN konnten))) (MF (PX (APPR um) (NX (CARD neun)))) (VC (VXINF (VVINF fahren)))))), (VF (ADVX (ADV dann))), (LK (VXFIN (VVFIN nehmen))), (MF (NX (PPER wir)) (NX (ART ein) (ADJX (ADJA zweites)) (NN fruhstuck)) (PX (APPRART im) (NX (NE ice)))), (LK (VXFIN (VVFIN lesen)))], 'auto preterminal span': (49, 55), 'span': (49, 55), 'parent': 'SU', 'label': 'NX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU also ich denke sagen wir mal mit dem ice funf stunden nach hannover und wir mussen na ja funfzehn uhr mussen wir vielleicht da sein wenn wir dann um neun oder zehn fahren sagen wir wir konnten um neun fahren dann nehmen wir ein zweites fruhstuck im ice lesen ein bischen zeitung haben das meeting vorbereitet und kommen dann um zwei oder drei in hannover an)
		(SU
			[01;31m(SIMPX[00m
				(VF das)
				(LK ware)
				(MF doch)[01;31m)[00m
			(SIMPX das konnten wir noch machen))))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VAFIN', 'ADV', 'PDS', 'VMFIN', 'PPER', 'ADV', 'VVINF'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (66, 74), 'span': (66, 69), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP also ich denke sagen wir mal mit dem ice funf stunden nach hannover und wir mussen na ja funfzehn uhr mussen wir vielleicht da sein wenn wir dann um neun oder zehn fahren sagen wir wir konnten um neun fahren dann nehmen wir ein zweites fruhstuck im ice lesen ein bischen zeitung haben das meeting vorbereitet und kommen dann um zwei oder drei in hannover an das ware doch das konnten wir noch machen)

Sentence 457:
6 Initial errors
0 on fringe, 3 iterations
4 Error:Co-ordination
1 Error:Single Word Phrase
1 Error:Clause Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU grade am montag)
		(SU
			[01;36m(SIMPX[00m
				[01;36m(SIMPX[00m
					[01;31m(DM[00m
						[01;31m(NX[00m
							[01;36m(KOORD[00m
								(KON und)[01;36m)[00m
							[01;36m(DM[00m
								(NX
									(NN moment))[01;36m)[00m[01;31m)[00m[01;31m)[00m
					(SIMPX wir hatten)[01;36m)[00m
				(SIMPX wir haben ein datum)[01;36m)[00m
			(SIMPX wir haben einen zug))
		(SU wie kommen wir denn zuruck)
		(SU hast du informationen uber eine ruckreise)))
Step:Co-ordination
{'new_parent': 'SU', 'new_family': ['KON', 'DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'mover info': [('KON', (3, 4))], 'old_family': ['KON', 'NX'], 'start left siblings': [], 'auto preterminals': ('KON', 'NN', 'PPER', 'VAFIN', 'PPER', 'VAFIN', 'ART', 'NN', 'PPER', 'VAFIN', 'ART', 'NN'), 'start right siblings': ['NX'], 'end left siblings': [], 'auto preterminal span': (3, 15), 'adding node already present': False, 'movers': ['KON'], 'old_parent': 'NX', 'POS confusion': ('KON', 'KON'), 'added and moved': True, 'end right siblings': ['DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'classified_type': 'Co-ordination', 'type': 'move', 'added label': 'SIMPX'}
(TOP
	(TURN
		(SU grade am montag)
		(SU
			[01;36m(SIMPX[00m
				(SIMPX
					[01;36m(KOORD[00m
						(KON und)[01;36m)[00m
					(DM moment)
					(SIMPX wir hatten))
				(SIMPX wir haben ein datum)[01;36m)[00m
			(SIMPX wir haben einen zug))
		(SU wie kommen wir denn zuruck)
		(SU hast du informationen uber eine ruckreise)))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['KOORD', 'DM', 'SIMPX'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON',), 'right siblings': [(DM (NX (NN moment))), (SIMPX (VF (NX (PPER wir))) (LK (VXFIN (VAFIN hatten))))], 'left siblings': [], 'auto preterminal span': (3, 4), 'span': (3, 4), 'parent': 'SIMPX', 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SU grade am montag)
		(SU
			[01;36m(SIMPX[00m
				(SIMPX und moment wir hatten)
				(SIMPX wir haben ein datum)[01;36m)[00m
			(SIMPX wir haben einen zug))
		(SU wie kommen wir denn zuruck)
		(SU hast du informationen uber eine ruckreise)))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'NN', 'PPER', 'VAFIN', 'PPER', 'VAFIN', 'ART', 'NN'), 'right siblings': [(SIMPX (VF (NX (PPER wir))) (LK (VXFIN (VAFIN haben))) (MF (NX (ART einen) (NN zug))))], 'left siblings': [], 'auto preterminal span': (3, 11), 'span': (3, 11), 'parent': 'SU', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP grade am montag und moment wir hatten wir haben ein datum wir haben einen zug wie kommen wir denn zuruck hast du informationen uber eine ruckreise)

Sentence 458:
52 Initial errors
0 on fringe, 34 iterations
4 Error:UNSET move
4 Error:PP Attachment
4 Error:NP Attachment
3 Error:UNSET move
3 Error:NP Attachment
2 Error:Different label
2 Error:Single Word Phrase
2 Error:Single Word Phrase
2 Error:Co-ordination
2 Error:NP Attachment
1 Error:Single Word Phrase
1 Error:UNSET add
1 Error:Single Word Phrase
1 Error:Unary
1 Error:UNSET add
1 Error:UNSET add
1 Error:Co-ordination
1 Error:PP Attachment
1 Error:Co-ordination
1 Error:UNSET remove
1 Error:UNSET add
1 Error:Single Word Phrase
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:Single Word Phrase
1 Error:Unary
1 Error:Modifier Attachment
1 Error:Single Word Phrase
1 Error:NP Internal Structure
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU na ja das stimmt)
		(SU
			(DM ja)
			(DM also)
			[01;36m(SIMPX[00m
				[01;31m(SIMPX[00m
					(KOORD und)
					(VF dann)
					(LK konnen)
					[01;31m(MF[00m [01;33m(MF[00m
						(NX wir)
						(ADVX einfach)[01;31m)[00m[01;31m)[00m
				[01;36m(NX[00m
					(ART den) [01;33mMF)[00m[01;36m)[00m[01;36m)[00m
			(SIMPX [01;33m(SIMPX[00m
				(VF dann)
				[01;31m(FKOORD[00m
					[01;31m(LKMVC[00m
						(LK brauchen)
						(MF wir uns jetzt vielleicht gar nicht)
						(VC festlegen)[01;31m)[00m [01;33mSIMPX)[00m
					(KON und)
					[01;36m(LKM[00m [01;31m(LKMN[00m
						(LK sagen)
						[01;36m(MF[00m
							(MF einfach)
							(NF
								(SIMPX
									(VF wir)
									(LK fliegen)
									[01;36m(ADVX[00m [01;31m(VC[00m
										(PTKVZ zuruck)[01;31m)[00m[01;36m)[00m))[01;36m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m))
		(SU
			(DM gut)
			[01;31m(ADVX[00m
				(ADV dann)[01;31m)[00m
			[01;31m(SIMPX[00m
				(VF dann)
				(LK denke)
				(MF ich)
				[01;31m(NF[00m [01;33m(SIMPX (NF[00m
					[01;31m(SIMPX[00m
						(VF dann)
						(LK haben)
						(MF wir alles)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			[01;31m(PX[00m
				[01;36m(VC[00m
					(APPR auser)[01;36m)[00m
				[01;36m(NF[00m
					(SIMPX
						(C das)
						(MF wir immer noch nicht)
						(VC wissen)
						(NF wo wir ubernachten konnen))[01;36m)[00m[01;31m)[00m) [01;33mNF) SIMPX)[00m
		(SU ich denke wir nehmen zusammen einfach ein hotel)
		[01;36m(SIMPX[00m
			(SU
				[01;31m(SIMPX[00m
					(VF dann)
					(LK konnen)
					[01;36m(MVC[00m
						(MF wir abends noch ein bischen in der bar)
						(VC sitzen)[01;36m)[00m[01;31m)[00m
				[01;31m(SIMPX[00m
					[01;31m(KOORD[00m
						(KON oder)[01;31m)[00m
					[01;36m(SIMPX[00m
						[01;31m(VF[00m
							(PX
								(APPR auf)
								(NX alle falle))[01;31m)[00m
						[01;36m(SIMPX[00m
							(LK treffen)
							(MF wir uns dann da)[01;36m)[00m[01;36m)[00m[01;31m)[00m)[01;36m)[00m
		(SU und ich habe hier eine liste vorbereitet mit hotels)
		(SU
			(SIMPX
				(VF das)
				(LK ist)
				(MF
					(NX
						[01;31m(NX[00m
							(ART das)
							[01;31m(NX[00m [01;33m(NX[00m
								(NX marriotthotel)
								[01;33m(NX[00m (NX hannover)[01;31m)[00m[01;31m)[00m
						[01;36m(NX[00m
							[01;31m(NX[00m
								(ART das)
								[01;33m(NX[00m (NX parkhotel hannover)[01;31m)[00m
							(NX das hotel cristal hannover)[01;36m)[00m)))) [01;33mNX) NX) NX)[00m
		[01;36m(SU[00m
			(SU
				(SIMPX
					(VF die)
					(LK sind)
					(MF
						(NX alle)
						[01;36m(PX[00m
							[01;31m(ADVX[00m
								(ADVX mehr)
								(KON oder)
								[01;33m(PX[00m (ADVX minder)[01;31m)[00m
							(PX in der nahe vom hauptbahnhof)[01;36m)[00m))) [01;33mPX)[00m
			(SU
				(SIMPX
					(VF ich)
					(LK kucke)
					[01;31m(MF[00m
						(NX mir)
						(ADVX mal)
						(NX die preise)[01;31m)[00m
					[01;31m(VC[00m
						(PTKVZ an)[01;31m)[00m))[01;36m)[00m
		(SU
			(DM also)
			(SIMPX
				(VF
					(NX
						(ART das)
						[01;31m(NX[00m
							(NX hotel)
							(NX cristal hannover)[01;31m)[00m))
				[01;31m(FKOORD[00m
					[01;31m(LKM[00m
						(LK ist)
						(MF vielleicht ein bischen teuer)[01;31m)[00m
					(LKM
						(LK hat)
						[01;31m(MF[00m
							[01;36m(MF[00m [01;36m(ADVX[00m [01;31m(PX[00m
								(PROP dafur)[01;31m)[00m[01;36m)[00m[01;36m)[00m
							(ADVX aber)
							[01;31m(NX[00m
								(NX sauna)
								(NX solarium)
								[01;31m(NX[00m
									(NN bar)[01;31m)[00m
								(KON und)
								(NX bistro)[01;31m)[00m[01;31m)[00m)[01;31m)[00m))))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['NX', 'ADVX', 'ART'], 'mover info': [('ART', (11, 12))], 'old_family': ['DM', 'DM', 'SIMPX', 'ART', 'SIMPX'], 'start left siblings': ['DM', 'DM', 'SIMPX'], 'auto preterminals': ('PTKANT', 'ADV', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ART', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'VVFIN', 'ADV', 'PPER', 'VVFIN', 'PTKVZ'), 'start right siblings': ['SIMPX'], 'end left siblings': ['NX', 'ADVX'], 'auto preterminal span': (4, 27), 'movers': ['ART'], 'old_parent': 'SU', 'POS confusion': ('ART', 'ART'), 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU na ja das stimmt)
		(SU
			(DM ja)
			(DM also)
			(SIMPX
				(KOORD und)
				(VF dann)
				(LK konnen)
				(MF
					(NX wir)
					(ADVX einfach)
					[01;36m(NX[00m
						(ART den)[01;36m)[00m))
			(SIMPX [01;33m(SIMPX[00m
				(VF dann)
				[01;31m(FKOORD[00m
					[01;31m(LKMVC[00m
						(LK brauchen)
						(MF wir uns jetzt vielleicht gar nicht)
						(VC festlegen)[01;31m)[00m [01;33mSIMPX)[00m
					(KON und)
					[01;36m(LKM[00m [01;31m(LKMN[00m
						(LK sagen)
						[01;36m(MF[00m
							(MF einfach)
							(NF
								(SIMPX
									(VF wir)
									(LK fliegen)
									[01;36m(ADVX[00m [01;31m(VC[00m
										(PTKVZ zuruck)[01;31m)[00m[01;36m)[00m))[01;36m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m))
		(SU
			(DM gut)
			[01;31m(ADVX[00m
				(ADV dann)[01;31m)[00m
			[01;31m(SIMPX[00m
				(VF dann)
				(LK denke)
				(MF ich)
				[01;31m(NF[00m [01;33m(SIMPX (NF[00m
					[01;31m(SIMPX[00m
						(VF dann)
						(LK haben)
						(MF wir alles)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			[01;31m(PX[00m
				[01;36m(VC[00m
					(APPR auser)[01;36m)[00m
				[01;36m(NF[00m
					(SIMPX
						(C das)
						(MF wir immer noch nicht)
						(VC wissen)
						(NF wo wir ubernachten konnen))[01;36m)[00m[01;31m)[00m) [01;33mNF) SIMPX)[00m
		(SU ich denke wir nehmen zusammen einfach ein hotel)
		[01;36m(SIMPX[00m
			(SU
				[01;31m(SIMPX[00m
					(VF dann)
					(LK konnen)
					[01;36m(MVC[00m
						(MF wir abends noch ein bischen in der bar)
						(VC sitzen)[01;36m)[00m[01;31m)[00m
				[01;31m(SIMPX[00m
					[01;31m(KOORD[00m
						(KON oder)[01;31m)[00m
					[01;36m(SIMPX[00m
						[01;31m(VF[00m
							(PX
								(APPR auf)
								(NX alle falle))[01;31m)[00m
						[01;36m(SIMPX[00m
							(LK treffen)
							(MF wir uns dann da)[01;36m)[00m[01;36m)[00m[01;31m)[00m)[01;36m)[00m
		(SU und ich habe hier eine liste vorbereitet mit hotels)
		(SU
			(SIMPX
				(VF das)
				(LK ist)
				(MF
					(NX
						[01;31m(NX[00m
							(ART das)
							[01;31m(NX[00m [01;33m(NX[00m
								(NX marriotthotel)
								[01;33m(NX[00m (NX hannover)[01;31m)[00m[01;31m)[00m
						[01;36m(NX[00m
							[01;31m(NX[00m
								(ART das)
								[01;33m(NX[00m (NX parkhotel hannover)[01;31m)[00m
							(NX das hotel cristal hannover)[01;36m)[00m)))) [01;33mNX) NX) NX)[00m
		[01;36m(SU[00m
			(SU
				(SIMPX
					(VF die)
					(LK sind)
					(MF
						(NX alle)
						[01;36m(PX[00m
							[01;31m(ADVX[00m
								(ADVX mehr)
								(KON oder)
								[01;33m(PX[00m (ADVX minder)[01;31m)[00m
							(PX in der nahe vom hauptbahnhof)[01;36m)[00m))) [01;33mPX)[00m
			(SU
				(SIMPX
					(VF ich)
					(LK kucke)
					[01;31m(MF[00m
						(NX mir)
						(ADVX mal)
						(NX die preise)[01;31m)[00m
					[01;31m(VC[00m
						(PTKVZ an)[01;31m)[00m))[01;36m)[00m
		(SU
			(DM also)
			(SIMPX
				(VF
					(NX
						(ART das)
						[01;31m(NX[00m
							(NX hotel)
							(NX cristal hannover)[01;31m)[00m))
				[01;31m(FKOORD[00m
					[01;31m(LKM[00m
						(LK ist)
						(MF vielleicht ein bischen teuer)[01;31m)[00m
					(LKM
						(LK hat)
						[01;31m(MF[00m
							[01;36m(MF[00m [01;36m(ADVX[00m [01;31m(PX[00m
								(PROP dafur)[01;31m)[00m[01;36m)[00m[01;36m)[00m
							(ADVX aber)
							[01;31m(NX[00m
								(NX sauna)
								(NX solarium)
								[01;31m(NX[00m
									(NN bar)[01;31m)[00m
								(KON und)
								(NX bistro)[01;31m)[00m[01;31m)[00m)[01;31m)[00m))))
Step:PP Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'PX'], 'mover info': [('PX', (36, 47))], 'old_family': ['DM', 'ADVX', 'SIMPX', 'PX'], 'start left siblings': ['DM', 'ADVX', 'SIMPX'], 'auto preterminals': ('ITJ', 'ADV', 'ADV', 'VVFIN', 'PPER', 'ADV', 'VAFIN', 'PPER', 'PIS', 'APPR', 'KOUS', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'VVFIN', 'PWAV', 'PPER', 'VVINF', 'VMFIN'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (27, 47), 'movers': ['PX'], 'old_parent': 'SU', 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU na ja das stimmt)
		(SU
			(DM ja)
			(DM also)
			(SIMPX
				(KOORD und)
				(VF dann)
				(LK konnen)
				(MF
					(NX wir)
					(ADVX einfach)
					[01;36m(NX[00m
						(ART den)[01;36m)[00m))
			(SIMPX [01;33m(SIMPX[00m
				(VF dann)
				[01;31m(FKOORD[00m
					[01;31m(LKMVC[00m
						(LK brauchen)
						(MF wir uns jetzt vielleicht gar nicht)
						(VC festlegen)[01;31m)[00m [01;33mSIMPX)[00m
					(KON und)
					[01;36m(LKM[00m [01;31m(LKMN[00m
						(LK sagen)
						[01;36m(MF[00m
							(MF einfach)
							(NF
								(SIMPX
									(VF wir)
									(LK fliegen)
									[01;36m(ADVX[00m [01;31m(VC[00m
										(PTKVZ zuruck)[01;31m)[00m[01;36m)[00m))[01;36m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m))
		(SU
			(DM gut)
			[01;31m(ADVX[00m
				(ADV dann)[01;31m)[00m
			[01;31m(SIMPX[00m
				(VF dann)
				(LK denke)
				(MF ich)
				(NF
					(SIMPX
						(VF dann)
						(LK haben)
						(MF wir alles)
						[01;31m(PX[00m
							[01;36m(VC[00m
								(APPR auser)[01;36m)[00m
							[01;36m(NF[00m
								(SIMPX
									(C das)
									(MF wir immer noch nicht)
									(VC wissen)
									(NF wo wir ubernachten konnen))[01;36m)[00m[01;31m)[00m))[01;31m)[00m)
		(SU ich denke wir nehmen zusammen einfach ein hotel)
		[01;36m(SIMPX[00m
			(SU
				[01;31m(SIMPX[00m
					(VF dann)
					(LK konnen)
					[01;36m(MVC[00m
						(MF wir abends noch ein bischen in der bar)
						(VC sitzen)[01;36m)[00m[01;31m)[00m
				[01;31m(SIMPX[00m
					[01;31m(KOORD[00m
						(KON oder)[01;31m)[00m
					[01;36m(SIMPX[00m
						[01;31m(VF[00m
							(PX
								(APPR auf)
								(NX alle falle))[01;31m)[00m
						[01;36m(SIMPX[00m
							(LK treffen)
							(MF wir uns dann da)[01;36m)[00m[01;36m)[00m[01;31m)[00m)[01;36m)[00m
		(SU und ich habe hier eine liste vorbereitet mit hotels)
		(SU
			(SIMPX
				(VF das)
				(LK ist)
				(MF
					(NX
						[01;31m(NX[00m
							(ART das)
							[01;31m(NX[00m [01;33m(NX[00m
								(NX marriotthotel)
								[01;33m(NX[00m (NX hannover)[01;31m)[00m[01;31m)[00m
						[01;36m(NX[00m
							[01;31m(NX[00m
								(ART das)
								[01;33m(NX[00m (NX parkhotel hannover)[01;31m)[00m
							(NX das hotel cristal hannover)[01;36m)[00m)))) [01;33mNX) NX) NX)[00m
		[01;36m(SU[00m
			(SU
				(SIMPX
					(VF die)
					(LK sind)
					(MF
						(NX alle)
						[01;36m(PX[00m
							[01;31m(ADVX[00m
								(ADVX mehr)
								(KON oder)
								[01;33m(PX[00m (ADVX minder)[01;31m)[00m
							(PX in der nahe vom hauptbahnhof)[01;36m)[00m))) [01;33mPX)[00m
			(SU
				(SIMPX
					(VF ich)
					(LK kucke)
					[01;31m(MF[00m
						(NX mir)
						(ADVX mal)
						(NX die preise)[01;31m)[00m
					[01;31m(VC[00m
						(PTKVZ an)[01;31m)[00m))[01;36m)[00m
		(SU
			(DM also)
			(SIMPX
				(VF
					(NX
						(ART das)
						[01;31m(NX[00m
							(NX hotel)
							(NX cristal hannover)[01;31m)[00m))
				[01;31m(FKOORD[00m
					[01;31m(LKM[00m
						(LK ist)
						(MF vielleicht ein bischen teuer)[01;31m)[00m
					(LKM
						(LK hat)
						[01;31m(MF[00m
							[01;36m(MF[00m [01;36m(ADVX[00m [01;31m(PX[00m
								(PROP dafur)[01;31m)[00m[01;36m)[00m[01;36m)[00m
							(ADVX aber)
							[01;31m(NX[00m
								(NX sauna)
								(NX solarium)
								[01;31m(NX[00m
									(NN bar)[01;31m)[00m
								(KON und)
								(NX bistro)[01;31m)[00m[01;31m)[00m)[01;31m)[00m))))
Step:NP Attachment
{'new_parent': 'NX', 'new_family': ['NX', 'NX', 'NX', 'NX'], 'mover info': [('NX', (89, 92)), ('NX', (92, 96))], 'old_family': ['NX', 'NX', 'NX'], 'start left siblings': ['NX'], 'auto preterminals': ('ART', 'NE', 'NE', 'ART', 'NE', 'NE', 'ART', 'NN', 'NE', 'NE'), 'start right siblings': [], 'end left siblings': ['NX', 'NX'], 'auto preterminal span': (86, 96), 'adding node already present': False, 'movers': ['NX', 'NX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'MF'}
(TOP
	(TURN
		(SU na ja das stimmt)
		(SU
			(DM ja)
			(DM also)
			(SIMPX
				(KOORD und)
				(VF dann)
				(LK konnen)
				(MF
					(NX wir)
					(ADVX einfach)
					[01;36m(NX[00m
						(ART den)[01;36m)[00m))
			(SIMPX [01;33m(SIMPX[00m
				(VF dann)
				[01;31m(FKOORD[00m
					[01;31m(LKMVC[00m
						(LK brauchen)
						(MF wir uns jetzt vielleicht gar nicht)
						(VC festlegen)[01;31m)[00m [01;33mSIMPX)[00m
					(KON und)
					[01;36m(LKM[00m [01;31m(LKMN[00m
						(LK sagen)
						[01;36m(MF[00m
							(MF einfach)
							(NF
								(SIMPX
									(VF wir)
									(LK fliegen)
									[01;36m(ADVX[00m [01;31m(VC[00m
										(PTKVZ zuruck)[01;31m)[00m[01;36m)[00m))[01;36m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m))
		(SU
			(DM gut)
			[01;31m(ADVX[00m
				(ADV dann)[01;31m)[00m
			[01;31m(SIMPX[00m
				(VF dann)
				(LK denke)
				(MF ich)
				(NF
					(SIMPX
						(VF dann)
						(LK haben)
						(MF wir alles)
						[01;31m(PX[00m
							[01;36m(VC[00m
								(APPR auser)[01;36m)[00m
							[01;36m(NF[00m
								(SIMPX
									(C das)
									(MF wir immer noch nicht)
									(VC wissen)
									(NF wo wir ubernachten konnen))[01;36m)[00m[01;31m)[00m))[01;31m)[00m)
		(SU ich denke wir nehmen zusammen einfach ein hotel)
		[01;36m(SIMPX[00m
			(SU
				[01;31m(SIMPX[00m
					(VF dann)
					(LK konnen)
					[01;36m(MVC[00m
						(MF wir abends noch ein bischen in der bar)
						(VC sitzen)[01;36m)[00m[01;31m)[00m
				[01;31m(SIMPX[00m
					[01;31m(KOORD[00m
						(KON oder)[01;31m)[00m
					[01;36m(SIMPX[00m
						[01;31m(VF[00m
							(PX
								(APPR auf)
								(NX alle falle))[01;31m)[00m
						[01;36m(SIMPX[00m
							(LK treffen)
							(MF wir uns dann da)[01;36m)[00m[01;36m)[00m[01;31m)[00m)[01;36m)[00m
		(SU und ich habe hier eine liste vorbereitet mit hotels)
		(SU
			(SIMPX
				(VF das)
				(LK ist)
				(MF
					(NX
						(ART das)
						(NX
							(NX marriotthotel)
							(NX
								(NX hannover)
								[01;36m(NX[00m
									[01;31m(NX[00m
										(ART das)
										[01;33m(NX[00m (NX parkhotel hannover)[01;31m)[00m
									(NX das hotel cristal hannover)[01;36m)[00m)))))) [01;33mNX)[00m
		[01;36m(SU[00m
			(SU
				(SIMPX
					(VF die)
					(LK sind)
					(MF
						(NX alle)
						[01;36m(PX[00m
							[01;31m(ADVX[00m
								(ADVX mehr)
								(KON oder)
								[01;33m(PX[00m (ADVX minder)[01;31m)[00m
							(PX in der nahe vom hauptbahnhof)[01;36m)[00m))) [01;33mPX)[00m
			(SU
				(SIMPX
					(VF ich)
					(LK kucke)
					[01;31m(MF[00m
						(NX mir)
						(ADVX mal)
						(NX die preise)[01;31m)[00m
					[01;31m(VC[00m
						(PTKVZ an)[01;31m)[00m))[01;36m)[00m
		(SU
			(DM also)
			(SIMPX
				(VF
					(NX
						(ART das)
						[01;31m(NX[00m
							(NX hotel)
							(NX cristal hannover)[01;31m)[00m))
				[01;31m(FKOORD[00m
					[01;31m(LKM[00m
						(LK ist)
						(MF vielleicht ein bischen teuer)[01;31m)[00m
					(LKM
						(LK hat)
						[01;31m(MF[00m
							[01;36m(MF[00m [01;36m(ADVX[00m [01;31m(PX[00m
								(PROP dafur)[01;31m)[00m[01;36m)[00m[01;36m)[00m
							(ADVX aber)
							[01;31m(NX[00m
								(NX sauna)
								(NX solarium)
								[01;31m(NX[00m
									(NN bar)[01;31m)[00m
								(KON und)
								(NX bistro)[01;31m)[00m[01;31m)[00m)[01;31m)[00m))))
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SIMPX', 'KOORD', 'SIMPX'], 'mover info': [('KOORD', (66, 67))], 'old_family': ['KOORD', 'VF', 'LK', 'MF'], 'start left siblings': [], 'auto preterminals': ('ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'APPR', 'PIDAT', 'NN', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV'), 'start right siblings': ['VF', 'LK', 'MF'], 'end left siblings': ['SIMPX'], 'auto preterminal span': (55, 75), 'adding node already present': False, 'movers': ['KOORD'], 'old_parent': 'SIMPX', 'POS confusion': ('KON', 'KON'), 'added and moved': True, 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'MF'}
(TOP
	(TURN
		(SU na ja das stimmt)
		(SU
			(DM ja)
			(DM also)
			(SIMPX
				(KOORD und)
				(VF dann)
				(LK konnen)
				(MF
					(NX wir)
					(ADVX einfach)
					[01;36m(NX[00m
						(ART den)[01;36m)[00m))
			(SIMPX [01;33m(SIMPX[00m
				(VF dann)
				[01;31m(FKOORD[00m
					[01;31m(LKMVC[00m
						(LK brauchen)
						(MF wir uns jetzt vielleicht gar nicht)
						(VC festlegen)[01;31m)[00m [01;33mSIMPX)[00m
					(KON und)
					[01;36m(LKM[00m [01;31m(LKMN[00m
						(LK sagen)
						[01;36m(MF[00m
							(MF einfach)
							(NF
								(SIMPX
									(VF wir)
									(LK fliegen)
									[01;36m(ADVX[00m [01;31m(VC[00m
										(PTKVZ zuruck)[01;31m)[00m[01;36m)[00m))[01;36m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m))
		(SU
			(DM gut)
			[01;31m(ADVX[00m
				(ADV dann)[01;31m)[00m
			[01;31m(SIMPX[00m
				(VF dann)
				(LK denke)
				(MF ich)
				(NF
					(SIMPX
						(VF dann)
						(LK haben)
						(MF wir alles)
						[01;31m(PX[00m
							[01;36m(VC[00m
								(APPR auser)[01;36m)[00m
							[01;36m(NF[00m
								(SIMPX
									(C das)
									(MF wir immer noch nicht)
									(VC wissen)
									(NF wo wir ubernachten konnen))[01;36m)[00m[01;31m)[00m))[01;31m)[00m)
		(SU ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX
			(SU
				[01;31m(SIMPX[00m
					(VF dann)
					(LK konnen)
					[01;36m(MVC[00m
						(MF wir abends noch ein bischen in der bar)
						(VC sitzen)[01;36m)[00m[01;31m)[00m
				[01;31m(KOORD[00m
					(KON oder)[01;31m)[00m
				(SIMPX
					[01;31m(VF[00m
						(PX
							(APPR auf)
							(NX alle falle))[01;31m)[00m
					[01;36m(SIMPX[00m
						(LK treffen)
						(MF wir uns dann da)[01;36m)[00m)))
		(SU und ich habe hier eine liste vorbereitet mit hotels)
		(SU
			(SIMPX
				(VF das)
				(LK ist)
				(MF
					(NX
						(ART das)
						(NX
							(NX marriotthotel)
							(NX
								(NX hannover)
								[01;36m(NX[00m
									[01;31m(NX[00m
										(ART das)
										[01;33m(NX[00m (NX parkhotel hannover)[01;31m)[00m
									(NX das hotel cristal hannover)[01;36m)[00m)))))) [01;33mNX)[00m
		[01;36m(SU[00m
			(SU
				(SIMPX
					(VF die)
					(LK sind)
					(MF
						(NX alle)
						[01;36m(PX[00m
							[01;31m(ADVX[00m
								(ADVX mehr)
								(KON oder)
								[01;33m(PX[00m (ADVX minder)[01;31m)[00m
							(PX in der nahe vom hauptbahnhof)[01;36m)[00m))) [01;33mPX)[00m
			(SU
				(SIMPX
					(VF ich)
					(LK kucke)
					[01;31m(MF[00m
						(NX mir)
						(ADVX mal)
						(NX die preise)[01;31m)[00m
					[01;31m(VC[00m
						(PTKVZ an)[01;31m)[00m))[01;36m)[00m
		(SU
			(DM also)
			(SIMPX
				(VF
					(NX
						(ART das)
						[01;31m(NX[00m
							(NX hotel)
							(NX cristal hannover)[01;31m)[00m))
				[01;31m(FKOORD[00m
					[01;31m(LKM[00m
						(LK ist)
						(MF vielleicht ein bischen teuer)[01;31m)[00m
					(LKM
						(LK hat)
						[01;31m(MF[00m
							[01;36m(MF[00m [01;36m(ADVX[00m [01;31m(PX[00m
								(PROP dafur)[01;31m)[00m[01;36m)[00m[01;36m)[00m
							(ADVX aber)
							[01;31m(NX[00m
								(NX sauna)
								(NX solarium)
								[01;31m(NX[00m
									(NN bar)[01;31m)[00m
								(KON und)
								(NX bistro)[01;31m)[00m[01;31m)[00m)[01;31m)[00m))))
Step:NP Attachment
{'new_parent': 'NX', 'new_family': ['ART', 'NX', 'NX'], 'mover info': [('NX', (92, 96))], 'old_family': ['NX', 'NX', 'NX'], 'start left siblings': ['NX', 'NX'], 'auto preterminals': ('NE', 'ART', 'NE', 'NE', 'ART', 'NN', 'NE', 'NE'), 'start right siblings': [], 'end left siblings': ['ART', 'NX'], 'auto preterminal span': (88, 96), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'MF'}
(TOP
	(TURN
		(SU na ja das stimmt)
		(SU
			(DM ja)
			(DM also)
			(SIMPX
				(KOORD und)
				(VF dann)
				(LK konnen)
				(MF
					(NX wir)
					(ADVX einfach)
					[01;36m(NX[00m
						(ART den)[01;36m)[00m))
			(SIMPX [01;33m(SIMPX[00m
				(VF dann)
				[01;31m(FKOORD[00m
					[01;31m(LKMVC[00m
						(LK brauchen)
						(MF wir uns jetzt vielleicht gar nicht)
						(VC festlegen)[01;31m)[00m [01;33mSIMPX)[00m
					(KON und)
					[01;36m(LKM[00m [01;31m(LKMN[00m
						(LK sagen)
						[01;36m(MF[00m
							(MF einfach)
							(NF
								(SIMPX
									(VF wir)
									(LK fliegen)
									[01;36m(ADVX[00m [01;31m(VC[00m
										(PTKVZ zuruck)[01;31m)[00m[01;36m)[00m))[01;36m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m))
		(SU
			(DM gut)
			[01;31m(ADVX[00m
				(ADV dann)[01;31m)[00m
			[01;31m(SIMPX[00m
				(VF dann)
				(LK denke)
				(MF ich)
				(NF
					(SIMPX
						(VF dann)
						(LK haben)
						(MF wir alles)
						[01;31m(PX[00m
							[01;36m(VC[00m
								(APPR auser)[01;36m)[00m
							[01;36m(NF[00m
								(SIMPX
									(C das)
									(MF wir immer noch nicht)
									(VC wissen)
									(NF wo wir ubernachten konnen))[01;36m)[00m[01;31m)[00m))[01;31m)[00m)
		(SU ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX
			(SU
				[01;31m(SIMPX[00m
					(VF dann)
					(LK konnen)
					[01;36m(MVC[00m
						(MF wir abends noch ein bischen in der bar)
						(VC sitzen)[01;36m)[00m[01;31m)[00m
				[01;31m(KOORD[00m
					(KON oder)[01;31m)[00m
				(SIMPX
					[01;31m(VF[00m
						(PX
							(APPR auf)
							(NX alle falle))[01;31m)[00m
					[01;36m(SIMPX[00m
						(LK treffen)
						(MF wir uns dann da)[01;36m)[00m)))
		(SU und ich habe hier eine liste vorbereitet mit hotels)
		(SU das ist das marriotthotel hannover das parkhotel hannover das hotel cristal hannover)
		[01;36m(SU[00m
			(SU
				(SIMPX
					(VF die)
					(LK sind)
					(MF
						(NX alle)
						[01;36m(PX[00m
							[01;31m(ADVX[00m
								(ADVX mehr)
								(KON oder)
								[01;33m(PX[00m (ADVX minder)[01;31m)[00m
							(PX in der nahe vom hauptbahnhof)[01;36m)[00m))) [01;33mPX)[00m
			(SU
				(SIMPX
					(VF ich)
					(LK kucke)
					[01;31m(MF[00m
						(NX mir)
						(ADVX mal)
						(NX die preise)[01;31m)[00m
					[01;31m(VC[00m
						(PTKVZ an)[01;31m)[00m))[01;36m)[00m
		(SU
			(DM also)
			(SIMPX
				(VF
					(NX
						(ART das)
						[01;31m(NX[00m
							(NX hotel)
							(NX cristal hannover)[01;31m)[00m))
				[01;31m(FKOORD[00m
					[01;31m(LKM[00m
						(LK ist)
						(MF vielleicht ein bischen teuer)[01;31m)[00m
					(LKM
						(LK hat)
						[01;31m(MF[00m
							[01;36m(MF[00m [01;36m(ADVX[00m [01;31m(PX[00m
								(PROP dafur)[01;31m)[00m[01;36m)[00m[01;36m)[00m
							(ADVX aber)
							[01;31m(NX[00m
								(NX sauna)
								(NX solarium)
								[01;31m(NX[00m
									(NN bar)[01;31m)[00m
								(KON und)
								(NX bistro)[01;31m)[00m[01;31m)[00m)[01;31m)[00m))))
Step:Different label
{'family': ['LKMVC', 'KON', 'LKM'], 'auto preterminal span': (22, 27), 'span': (22, 27), 'subtrees': ['LK', 'MF', 'NF'], 'parent': 'FKOORD', 'over_word': False, 'auto preterminals': ('VVFIN', 'ADV', 'PPER', 'VVFIN', 'PTKVZ'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('LKMN', 'LKM')}
(TOP
	(TURN
		(SU na ja das stimmt)
		(SU
			(DM ja)
			(DM also)
			(SIMPX
				(KOORD und)
				(VF dann)
				(LK konnen)
				(MF
					(NX wir)
					(ADVX einfach)
					[01;36m(NX[00m
						(ART den)[01;36m)[00m))
			(SIMPX [01;33m(SIMPX[00m
				(VF dann)
				[01;31m(FKOORD[00m
					[01;31m(LKMVC[00m
						(LK brauchen)
						(MF wir uns jetzt vielleicht gar nicht)
						(VC festlegen)[01;31m)[00m [01;33mSIMPX)[00m
					(KON und)
					(LKM
						(LK sagen)
						[01;36m(MF[00m
							(MF einfach)
							(NF
								(SIMPX
									(VF wir)
									(LK fliegen)
									[01;36m(ADVX[00m [01;31m(VC[00m
										(PTKVZ zuruck)[01;31m)[00m[01;36m)[00m))[01;36m)[00m)[01;31m)[00m))
		(SU
			(DM gut)
			[01;31m(ADVX[00m
				(ADV dann)[01;31m)[00m
			[01;31m(SIMPX[00m
				(VF dann)
				(LK denke)
				(MF ich)
				(NF
					(SIMPX
						(VF dann)
						(LK haben)
						(MF wir alles)
						[01;31m(PX[00m
							[01;36m(VC[00m
								(APPR auser)[01;36m)[00m
							[01;36m(NF[00m
								(SIMPX
									(C das)
									(MF wir immer noch nicht)
									(VC wissen)
									(NF wo wir ubernachten konnen))[01;36m)[00m[01;31m)[00m))[01;31m)[00m)
		(SU ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX
			(SU
				[01;31m(SIMPX[00m
					(VF dann)
					(LK konnen)
					[01;36m(MVC[00m
						(MF wir abends noch ein bischen in der bar)
						(VC sitzen)[01;36m)[00m[01;31m)[00m
				[01;31m(KOORD[00m
					(KON oder)[01;31m)[00m
				(SIMPX
					[01;31m(VF[00m
						(PX
							(APPR auf)
							(NX alle falle))[01;31m)[00m
					[01;36m(SIMPX[00m
						(LK treffen)
						(MF wir uns dann da)[01;36m)[00m)))
		(SU und ich habe hier eine liste vorbereitet mit hotels)
		(SU das ist das marriotthotel hannover das parkhotel hannover das hotel cristal hannover)
		[01;36m(SU[00m
			(SU
				(SIMPX
					(VF die)
					(LK sind)
					(MF
						(NX alle)
						[01;36m(PX[00m
							[01;31m(ADVX[00m
								(ADVX mehr)
								(KON oder)
								[01;33m(PX[00m (ADVX minder)[01;31m)[00m
							(PX in der nahe vom hauptbahnhof)[01;36m)[00m))) [01;33mPX)[00m
			(SU
				(SIMPX
					(VF ich)
					(LK kucke)
					[01;31m(MF[00m
						(NX mir)
						(ADVX mal)
						(NX die preise)[01;31m)[00m
					[01;31m(VC[00m
						(PTKVZ an)[01;31m)[00m))[01;36m)[00m
		(SU
			(DM also)
			(SIMPX
				(VF
					(NX
						(ART das)
						[01;31m(NX[00m
							(NX hotel)
							(NX cristal hannover)[01;31m)[00m))
				[01;31m(FKOORD[00m
					[01;31m(LKM[00m
						(LK ist)
						(MF vielleicht ein bischen teuer)[01;31m)[00m
					(LKM
						(LK hat)
						[01;31m(MF[00m
							[01;36m(MF[00m [01;36m(ADVX[00m [01;31m(PX[00m
								(PROP dafur)[01;31m)[00m[01;36m)[00m[01;36m)[00m
							(ADVX aber)
							[01;31m(NX[00m
								(NX sauna)
								(NX solarium)
								[01;31m(NX[00m
									(NN bar)[01;31m)[00m
								(KON und)
								(NX bistro)[01;31m)[00m[01;31m)[00m)[01;31m)[00m))))
Step:Single Word Phrase
{'family': ['VF', 'LK', 'ADVX'], 'auto preterminal span': (26, 27), 'span': (26, 27), 'subtrees': ['PTKVZ'], 'parent': 'SIMPX', 'over_word': True, 'auto preterminals': ('PTKVZ',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VC', 'ADVX')}
(TOP
	(TURN
		(SU na ja das stimmt)
		(SU
			(DM ja)
			(DM also)
			(SIMPX
				(KOORD und)
				(VF dann)
				(LK konnen)
				(MF
					(NX wir)
					(ADVX einfach)
					[01;36m(NX[00m
						(ART den)[01;36m)[00m))
			(SIMPX [01;33m(SIMPX[00m
				(VF dann)
				[01;31m(FKOORD[00m
					[01;31m(LKMVC[00m
						(LK brauchen)
						(MF wir uns jetzt vielleicht gar nicht)
						(VC festlegen)[01;31m)[00m [01;33mSIMPX)[00m
					(KON und)
					(LKM
						(LK sagen)
						[01;36m(MF[00m
							(MF einfach)
							(NF wir fliegen zuruck)[01;36m)[00m)[01;31m)[00m))
		(SU
			(DM gut)
			[01;31m(ADVX[00m
				(ADV dann)[01;31m)[00m
			[01;31m(SIMPX[00m
				(VF dann)
				(LK denke)
				(MF ich)
				(NF
					(SIMPX
						(VF dann)
						(LK haben)
						(MF wir alles)
						[01;31m(PX[00m
							[01;36m(VC[00m
								(APPR auser)[01;36m)[00m
							[01;36m(NF[00m
								(SIMPX
									(C das)
									(MF wir immer noch nicht)
									(VC wissen)
									(NF wo wir ubernachten konnen))[01;36m)[00m[01;31m)[00m))[01;31m)[00m)
		(SU ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX
			(SU
				[01;31m(SIMPX[00m
					(VF dann)
					(LK konnen)
					[01;36m(MVC[00m
						(MF wir abends noch ein bischen in der bar)
						(VC sitzen)[01;36m)[00m[01;31m)[00m
				[01;31m(KOORD[00m
					(KON oder)[01;31m)[00m
				(SIMPX
					[01;31m(VF[00m
						(PX
							(APPR auf)
							(NX alle falle))[01;31m)[00m
					[01;36m(SIMPX[00m
						(LK treffen)
						(MF wir uns dann da)[01;36m)[00m)))
		(SU und ich habe hier eine liste vorbereitet mit hotels)
		(SU das ist das marriotthotel hannover das parkhotel hannover das hotel cristal hannover)
		[01;36m(SU[00m
			(SU
				(SIMPX
					(VF die)
					(LK sind)
					(MF
						(NX alle)
						[01;36m(PX[00m
							[01;31m(ADVX[00m
								(ADVX mehr)
								(KON oder)
								[01;33m(PX[00m (ADVX minder)[01;31m)[00m
							(PX in der nahe vom hauptbahnhof)[01;36m)[00m))) [01;33mPX)[00m
			(SU
				(SIMPX
					(VF ich)
					(LK kucke)
					[01;31m(MF[00m
						(NX mir)
						(ADVX mal)
						(NX die preise)[01;31m)[00m
					[01;31m(VC[00m
						(PTKVZ an)[01;31m)[00m))[01;36m)[00m
		(SU
			(DM also)
			(SIMPX
				(VF
					(NX
						(ART das)
						[01;31m(NX[00m
							(NX hotel)
							(NX cristal hannover)[01;31m)[00m))
				[01;31m(FKOORD[00m
					[01;31m(LKM[00m
						(LK ist)
						(MF vielleicht ein bischen teuer)[01;31m)[00m
					(LKM
						(LK hat)
						[01;31m(MF[00m
							[01;36m(MF[00m [01;36m(ADVX[00m [01;31m(PX[00m
								(PROP dafur)[01;31m)[00m[01;36m)[00m[01;36m)[00m
							(ADVX aber)
							[01;31m(NX[00m
								(NX sauna)
								(NX solarium)
								[01;31m(NX[00m
									(NN bar)[01;31m)[00m
								(KON und)
								(NX bistro)[01;31m)[00m[01;31m)[00m)[01;31m)[00m))))
Step:Single Word Phrase
{'family': ['ADVX', 'ADVX', 'NX'], 'auto preterminal span': (125, 126), 'span': (125, 126), 'subtrees': ['PROP'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('PROP',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('PX', 'ADVX')}
(TOP
	(TURN
		(SU na ja das stimmt)
		(SU
			(DM ja)
			(DM also)
			(SIMPX
				(KOORD und)
				(VF dann)
				(LK konnen)
				(MF
					(NX wir)
					(ADVX einfach)
					[01;36m(NX[00m
						(ART den)[01;36m)[00m))
			(SIMPX [01;33m(SIMPX[00m
				(VF dann)
				[01;31m(FKOORD[00m
					[01;31m(LKMVC[00m
						(LK brauchen)
						(MF wir uns jetzt vielleicht gar nicht)
						(VC festlegen)[01;31m)[00m [01;33mSIMPX)[00m
					(KON und)
					(LKM
						(LK sagen)
						[01;36m(MF[00m
							(MF einfach)
							(NF wir fliegen zuruck)[01;36m)[00m)[01;31m)[00m))
		(SU
			(DM gut)
			[01;31m(ADVX[00m
				(ADV dann)[01;31m)[00m
			[01;31m(SIMPX[00m
				(VF dann)
				(LK denke)
				(MF ich)
				(NF
					(SIMPX
						(VF dann)
						(LK haben)
						(MF wir alles)
						[01;31m(PX[00m
							[01;36m(VC[00m
								(APPR auser)[01;36m)[00m
							[01;36m(NF[00m
								(SIMPX
									(C das)
									(MF wir immer noch nicht)
									(VC wissen)
									(NF wo wir ubernachten konnen))[01;36m)[00m[01;31m)[00m))[01;31m)[00m)
		(SU ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX
			(SU
				[01;31m(SIMPX[00m
					(VF dann)
					(LK konnen)
					[01;36m(MVC[00m
						(MF wir abends noch ein bischen in der bar)
						(VC sitzen)[01;36m)[00m[01;31m)[00m
				[01;31m(KOORD[00m
					(KON oder)[01;31m)[00m
				(SIMPX
					[01;31m(VF[00m
						(PX
							(APPR auf)
							(NX alle falle))[01;31m)[00m
					[01;36m(SIMPX[00m
						(LK treffen)
						(MF wir uns dann da)[01;36m)[00m)))
		(SU und ich habe hier eine liste vorbereitet mit hotels)
		(SU das ist das marriotthotel hannover das parkhotel hannover das hotel cristal hannover)
		[01;36m(SU[00m
			(SU
				(SIMPX
					(VF die)
					(LK sind)
					(MF
						(NX alle)
						[01;36m(PX[00m
							[01;31m(ADVX[00m
								(ADVX mehr)
								(KON oder)
								[01;33m(PX[00m (ADVX minder)[01;31m)[00m
							(PX in der nahe vom hauptbahnhof)[01;36m)[00m))) [01;33mPX)[00m
			(SU
				(SIMPX
					(VF ich)
					(LK kucke)
					[01;31m(MF[00m
						(NX mir)
						(ADVX mal)
						(NX die preise)[01;31m)[00m
					[01;31m(VC[00m
						(PTKVZ an)[01;31m)[00m))[01;36m)[00m
		(SU
			(DM also)
			(SIMPX
				(VF
					(NX
						(ART das)
						[01;31m(NX[00m
							(NX hotel)
							(NX cristal hannover)[01;31m)[00m))
				[01;31m(FKOORD[00m
					[01;31m(LKM[00m
						(LK ist)
						(MF vielleicht ein bischen teuer)[01;31m)[00m
					(LKM
						(LK hat)
						[01;31m(MF[00m
							[01;36m(MF[00m
								(ADVX
									(PROP dafur))[01;36m)[00m
							(ADVX aber)
							[01;31m(NX[00m
								(NX sauna)
								(NX solarium)
								[01;31m(NX[00m
									(NN bar)[01;31m)[00m
								(KON und)
								(NX bistro)[01;31m)[00m[01;31m)[00m)[01;31m)[00m))))
Step:Co-ordination
{'new_parent': 'MF', 'new_family': ['NX', 'ADVX', 'KON', 'ADVX', 'PX'], 'mover info': [('ADVX', (99, 100)), ('KON', (100, 101))], 'old_family': ['ADVX', 'KON', 'ADVX'], 'start left siblings': [], 'auto preterminals': ('PIS', 'ADV', 'KON', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'NN'), 'start right siblings': ['ADVX'], 'end left siblings': ['NX'], 'auto preterminal span': (98, 107), 'adding node already present': False, 'movers': ['ADVX', 'KON'], 'old_parent': 'ADVX', 'added and moved': True, 'end right siblings': ['ADVX', 'PX'], 'classified_type': 'Co-ordination', 'type': 'move', 'added label': 'MF'}
(TOP
	(TURN
		(SU na ja das stimmt)
		(SU
			(DM ja)
			(DM also)
			(SIMPX
				(KOORD und)
				(VF dann)
				(LK konnen)
				(MF
					(NX wir)
					(ADVX einfach)
					[01;36m(NX[00m
						(ART den)[01;36m)[00m))
			(SIMPX [01;33m(SIMPX[00m
				(VF dann)
				[01;31m(FKOORD[00m
					[01;31m(LKMVC[00m
						(LK brauchen)
						(MF wir uns jetzt vielleicht gar nicht)
						(VC festlegen)[01;31m)[00m [01;33mSIMPX)[00m
					(KON und)
					(LKM
						(LK sagen)
						[01;36m(MF[00m
							(MF einfach)
							(NF wir fliegen zuruck)[01;36m)[00m)[01;31m)[00m))
		(SU
			(DM gut)
			[01;31m(ADVX[00m
				(ADV dann)[01;31m)[00m
			[01;31m(SIMPX[00m
				(VF dann)
				(LK denke)
				(MF ich)
				(NF
					(SIMPX
						(VF dann)
						(LK haben)
						(MF wir alles)
						[01;31m(PX[00m
							[01;36m(VC[00m
								(APPR auser)[01;36m)[00m
							[01;36m(NF[00m
								(SIMPX
									(C das)
									(MF wir immer noch nicht)
									(VC wissen)
									(NF wo wir ubernachten konnen))[01;36m)[00m[01;31m)[00m))[01;31m)[00m)
		(SU ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX
			(SU
				[01;31m(SIMPX[00m
					(VF dann)
					(LK konnen)
					[01;36m(MVC[00m
						(MF wir abends noch ein bischen in der bar)
						(VC sitzen)[01;36m)[00m[01;31m)[00m
				[01;31m(KOORD[00m
					(KON oder)[01;31m)[00m
				(SIMPX
					[01;31m(VF[00m
						(PX
							(APPR auf)
							(NX alle falle))[01;31m)[00m
					[01;36m(SIMPX[00m
						(LK treffen)
						(MF wir uns dann da)[01;36m)[00m)))
		(SU und ich habe hier eine liste vorbereitet mit hotels)
		(SU das ist das marriotthotel hannover das parkhotel hannover das hotel cristal hannover)
		[01;36m(SU[00m
			(SU
				(SIMPX
					(VF die)
					(LK sind)
					(MF
						(NX alle)
						(PX
							(ADVX mehr)
							(KON oder)
							[01;36m(PX[00m
								(ADVX minder)
								(PX in der nahe vom hauptbahnhof)[01;36m)[00m))))
			(SU
				(SIMPX
					(VF ich)
					(LK kucke)
					[01;31m(MF[00m
						(NX mir)
						(ADVX mal)
						(NX die preise)[01;31m)[00m
					[01;31m(VC[00m
						(PTKVZ an)[01;31m)[00m))[01;36m)[00m
		(SU
			(DM also)
			(SIMPX
				(VF
					(NX
						(ART das)
						[01;31m(NX[00m
							(NX hotel)
							(NX cristal hannover)[01;31m)[00m))
				[01;31m(FKOORD[00m
					[01;31m(LKM[00m
						(LK ist)
						(MF vielleicht ein bischen teuer)[01;31m)[00m
					(LKM
						(LK hat)
						[01;31m(MF[00m
							[01;36m(MF[00m
								(ADVX
									(PROP dafur))[01;36m)[00m
							(ADVX aber)
							[01;31m(NX[00m
								(NX sauna)
								(NX solarium)
								[01;31m(NX[00m
									(NN bar)[01;31m)[00m
								(KON und)
								(NX bistro)[01;31m)[00m[01;31m)[00m)[01;31m)[00m))))
Step:NP Attachment
{'new_parent': 'LKM', 'new_family': ['LK', 'MF', 'ADVX', 'NX'], 'mover info': [('ADVX', (126, 127)), ('NX', (127, 132))], 'old_family': ['ADVX', 'ADVX', 'NX'], 'start left siblings': ['ADVX'], 'auto preterminals': ('VAFIN', 'PROP', 'ADV', 'NN', 'NN', 'NN', 'KON', 'NN'), 'start right siblings': [], 'end left siblings': ['LK', 'MF'], 'auto preterminal span': (124, 132), 'movers': ['ADVX', 'NX'], 'old_parent': 'MF', 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU na ja das stimmt)
		(SU
			(DM ja)
			(DM also)
			(SIMPX
				(KOORD und)
				(VF dann)
				(LK konnen)
				(MF
					(NX wir)
					(ADVX einfach)
					[01;36m(NX[00m
						(ART den)[01;36m)[00m))
			(SIMPX [01;33m(SIMPX[00m
				(VF dann)
				[01;31m(FKOORD[00m
					[01;31m(LKMVC[00m
						(LK brauchen)
						(MF wir uns jetzt vielleicht gar nicht)
						(VC festlegen)[01;31m)[00m [01;33mSIMPX)[00m
					(KON und)
					(LKM
						(LK sagen)
						[01;36m(MF[00m
							(MF einfach)
							(NF wir fliegen zuruck)[01;36m)[00m)[01;31m)[00m))
		(SU
			(DM gut)
			[01;31m(ADVX[00m
				(ADV dann)[01;31m)[00m
			[01;31m(SIMPX[00m
				(VF dann)
				(LK denke)
				(MF ich)
				(NF
					(SIMPX
						(VF dann)
						(LK haben)
						(MF wir alles)
						[01;31m(PX[00m
							[01;36m(VC[00m
								(APPR auser)[01;36m)[00m
							[01;36m(NF[00m
								(SIMPX
									(C das)
									(MF wir immer noch nicht)
									(VC wissen)
									(NF wo wir ubernachten konnen))[01;36m)[00m[01;31m)[00m))[01;31m)[00m)
		(SU ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX
			(SU
				[01;31m(SIMPX[00m
					(VF dann)
					(LK konnen)
					[01;36m(MVC[00m
						(MF wir abends noch ein bischen in der bar)
						(VC sitzen)[01;36m)[00m[01;31m)[00m
				[01;31m(KOORD[00m
					(KON oder)[01;31m)[00m
				(SIMPX
					[01;31m(VF[00m
						(PX
							(APPR auf)
							(NX alle falle))[01;31m)[00m
					[01;36m(SIMPX[00m
						(LK treffen)
						(MF wir uns dann da)[01;36m)[00m)))
		(SU und ich habe hier eine liste vorbereitet mit hotels)
		(SU das ist das marriotthotel hannover das parkhotel hannover das hotel cristal hannover)
		[01;36m(SU[00m
			(SU
				(SIMPX
					(VF die)
					(LK sind)
					(MF
						(NX alle)
						(PX
							(ADVX mehr)
							(KON oder)
							[01;36m(PX[00m
								(ADVX minder)
								(PX in der nahe vom hauptbahnhof)[01;36m)[00m))))
			(SU
				(SIMPX
					(VF ich)
					(LK kucke)
					[01;31m(MF[00m
						(NX mir)
						(ADVX mal)
						(NX die preise)[01;31m)[00m
					[01;31m(VC[00m
						(PTKVZ an)[01;31m)[00m))[01;36m)[00m
		(SU
			(DM also)
			(SIMPX
				(VF
					(NX
						(ART das)
						[01;31m(NX[00m
							(NX hotel)
							(NX cristal hannover)[01;31m)[00m))
				[01;31m(FKOORD[00m
					[01;31m(LKM[00m
						(LK ist)
						(MF vielleicht ein bischen teuer)[01;31m)[00m
					(LKM
						(LK hat)
						(MF dafur)
						(ADVX aber)
						[01;31m(NX[00m
							(NX sauna)
							(NX solarium)
							[01;31m(NX[00m
								(NN bar)[01;31m)[00m
							(KON und)
							(NX bistro)[01;31m)[00m)[01;31m)[00m))))
Step:Single Word Phrase
{'subtrees': ['ART'], 'family': ['NX', 'ADVX', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ART',), 'right siblings': [], 'left siblings': [(NX (PPER wir)), (ADVX (ADV einfach))], 'auto preterminal span': (11, 12), 'span': (11, 12), 'parent': 'MF', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SU na ja das stimmt)
		(SU
			(DM ja)
			(DM also)
			(SIMPX und dann konnen wir einfach den)
			(SIMPX [01;33m(SIMPX[00m
				(VF dann)
				[01;31m(FKOORD[00m
					[01;31m(LKMVC[00m
						(LK brauchen)
						(MF wir uns jetzt vielleicht gar nicht)
						(VC festlegen)[01;31m)[00m [01;33mSIMPX)[00m
					(KON und)
					(LKM
						(LK sagen)
						[01;36m(MF[00m
							(MF einfach)
							(NF wir fliegen zuruck)[01;36m)[00m)[01;31m)[00m))
		(SU
			(DM gut)
			[01;31m(ADVX[00m
				(ADV dann)[01;31m)[00m
			[01;31m(SIMPX[00m
				(VF dann)
				(LK denke)
				(MF ich)
				(NF
					(SIMPX
						(VF dann)
						(LK haben)
						(MF wir alles)
						[01;31m(PX[00m
							[01;36m(VC[00m
								(APPR auser)[01;36m)[00m
							[01;36m(NF[00m
								(SIMPX
									(C das)
									(MF wir immer noch nicht)
									(VC wissen)
									(NF wo wir ubernachten konnen))[01;36m)[00m[01;31m)[00m))[01;31m)[00m)
		(SU ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX
			(SU
				[01;31m(SIMPX[00m
					(VF dann)
					(LK konnen)
					[01;36m(MVC[00m
						(MF wir abends noch ein bischen in der bar)
						(VC sitzen)[01;36m)[00m[01;31m)[00m
				[01;31m(KOORD[00m
					(KON oder)[01;31m)[00m
				(SIMPX
					[01;31m(VF[00m
						(PX
							(APPR auf)
							(NX alle falle))[01;31m)[00m
					[01;36m(SIMPX[00m
						(LK treffen)
						(MF wir uns dann da)[01;36m)[00m)))
		(SU und ich habe hier eine liste vorbereitet mit hotels)
		(SU das ist das marriotthotel hannover das parkhotel hannover das hotel cristal hannover)
		[01;36m(SU[00m
			(SU
				(SIMPX
					(VF die)
					(LK sind)
					(MF
						(NX alle)
						(PX
							(ADVX mehr)
							(KON oder)
							[01;36m(PX[00m
								(ADVX minder)
								(PX in der nahe vom hauptbahnhof)[01;36m)[00m))))
			(SU
				(SIMPX
					(VF ich)
					(LK kucke)
					[01;31m(MF[00m
						(NX mir)
						(ADVX mal)
						(NX die preise)[01;31m)[00m
					[01;31m(VC[00m
						(PTKVZ an)[01;31m)[00m))[01;36m)[00m
		(SU
			(DM also)
			(SIMPX
				(VF
					(NX
						(ART das)
						[01;31m(NX[00m
							(NX hotel)
							(NX cristal hannover)[01;31m)[00m))
				[01;31m(FKOORD[00m
					[01;31m(LKM[00m
						(LK ist)
						(MF vielleicht ein bischen teuer)[01;31m)[00m
					(LKM
						(LK hat)
						(MF dafur)
						(ADVX aber)
						[01;31m(NX[00m
							(NX sauna)
							(NX solarium)
							[01;31m(NX[00m
								(NN bar)[01;31m)[00m
							(KON und)
							(NX bistro)[01;31m)[00m)[01;31m)[00m))))
Step:UNSET add
{'subtrees': ['MF', 'NF'], 'family': ['LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPER', 'VVFIN', 'PTKVZ'), 'right siblings': [], 'left siblings': [(LK (VXFIN (VVFIN sagen)))], 'auto preterminal span': (23, 27), 'span': (23, 27), 'parent': 'LKM', 'label': 'MF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU na ja das stimmt)
		(SU
			(DM ja)
			(DM also)
			(SIMPX und dann konnen wir einfach den)
			(SIMPX [01;33m(SIMPX[00m
				(VF dann)
				[01;31m(FKOORD[00m
					[01;31m(LKMVC[00m
						(LK brauchen)
						(MF wir uns jetzt vielleicht gar nicht)
						(VC festlegen)[01;31m)[00m [01;33mSIMPX)[00m
					(KON und)
					(LKM sagen einfach wir fliegen zuruck)[01;31m)[00m))
		(SU
			(DM gut)
			[01;31m(ADVX[00m
				(ADV dann)[01;31m)[00m
			[01;31m(SIMPX[00m
				(VF dann)
				(LK denke)
				(MF ich)
				(NF
					(SIMPX
						(VF dann)
						(LK haben)
						(MF wir alles)
						[01;31m(PX[00m
							[01;36m(VC[00m
								(APPR auser)[01;36m)[00m
							[01;36m(NF[00m
								(SIMPX
									(C das)
									(MF wir immer noch nicht)
									(VC wissen)
									(NF wo wir ubernachten konnen))[01;36m)[00m[01;31m)[00m))[01;31m)[00m)
		(SU ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX
			(SU
				[01;31m(SIMPX[00m
					(VF dann)
					(LK konnen)
					[01;36m(MVC[00m
						(MF wir abends noch ein bischen in der bar)
						(VC sitzen)[01;36m)[00m[01;31m)[00m
				[01;31m(KOORD[00m
					(KON oder)[01;31m)[00m
				(SIMPX
					[01;31m(VF[00m
						(PX
							(APPR auf)
							(NX alle falle))[01;31m)[00m
					[01;36m(SIMPX[00m
						(LK treffen)
						(MF wir uns dann da)[01;36m)[00m)))
		(SU und ich habe hier eine liste vorbereitet mit hotels)
		(SU das ist das marriotthotel hannover das parkhotel hannover das hotel cristal hannover)
		[01;36m(SU[00m
			(SU
				(SIMPX
					(VF die)
					(LK sind)
					(MF
						(NX alle)
						(PX
							(ADVX mehr)
							(KON oder)
							[01;36m(PX[00m
								(ADVX minder)
								(PX in der nahe vom hauptbahnhof)[01;36m)[00m))))
			(SU
				(SIMPX
					(VF ich)
					(LK kucke)
					[01;31m(MF[00m
						(NX mir)
						(ADVX mal)
						(NX die preise)[01;31m)[00m
					[01;31m(VC[00m
						(PTKVZ an)[01;31m)[00m))[01;36m)[00m
		(SU
			(DM also)
			(SIMPX
				(VF
					(NX
						(ART das)
						[01;31m(NX[00m
							(NX hotel)
							(NX cristal hannover)[01;31m)[00m))
				[01;31m(FKOORD[00m
					[01;31m(LKM[00m
						(LK ist)
						(MF vielleicht ein bischen teuer)[01;31m)[00m
					(LKM
						(LK hat)
						(MF dafur)
						(ADVX aber)
						[01;31m(NX[00m
							(NX sauna)
							(NX solarium)
							[01;31m(NX[00m
								(NN bar)[01;31m)[00m
							(KON und)
							(NX bistro)[01;31m)[00m)[01;31m)[00m))))
Step:Single Word Phrase
{'subtrees': ['APPR'], 'family': ['VC', 'SIMPX'], 'over_word': True, 'over words': True, 'auto preterminals': ('APPR',), 'right siblings': [(SIMPX (C (KOUS das)) (MF (NX (PPER wir)) (ADVX (ADV immer)) (ADVX (ADVX (ADV noch)) (PTKNEG nicht))) (VC (VXFIN (VVFIN wissen))) (NF (SIMPX (C (PX (PWAV wo))) (MF (NX (PPER wir))) (VC (VXINF (VVINF ubernachten)) (VXFIN (VMFIN konnen))))))], 'left siblings': [], 'auto preterminal span': (36, 37), 'span': (36, 37), 'parent': 'PX', 'label': 'VC', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SU na ja das stimmt)
		(SU
			(DM ja)
			(DM also)
			(SIMPX und dann konnen wir einfach den)
			(SIMPX [01;33m(SIMPX[00m
				(VF dann)
				[01;31m(FKOORD[00m
					[01;31m(LKMVC[00m
						(LK brauchen)
						(MF wir uns jetzt vielleicht gar nicht)
						(VC festlegen)[01;31m)[00m [01;33mSIMPX)[00m
					(KON und)
					(LKM sagen einfach wir fliegen zuruck)[01;31m)[00m))
		(SU
			(DM gut)
			[01;31m(ADVX[00m
				(ADV dann)[01;31m)[00m
			[01;31m(SIMPX[00m
				(VF dann)
				(LK denke)
				(MF ich)
				(NF
					(SIMPX
						(VF dann)
						(LK haben)
						(MF wir alles)
						[01;31m(PX[00m
							(VC auser)
							[01;36m(NF[00m
								(SIMPX
									(C das)
									(MF wir immer noch nicht)
									(VC wissen)
									(NF wo wir ubernachten konnen))[01;36m)[00m[01;31m)[00m))[01;31m)[00m)
		(SU ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX
			(SU
				[01;31m(SIMPX[00m
					(VF dann)
					(LK konnen)
					[01;36m(MVC[00m
						(MF wir abends noch ein bischen in der bar)
						(VC sitzen)[01;36m)[00m[01;31m)[00m
				[01;31m(KOORD[00m
					(KON oder)[01;31m)[00m
				(SIMPX
					[01;31m(VF[00m
						(PX
							(APPR auf)
							(NX alle falle))[01;31m)[00m
					[01;36m(SIMPX[00m
						(LK treffen)
						(MF wir uns dann da)[01;36m)[00m)))
		(SU und ich habe hier eine liste vorbereitet mit hotels)
		(SU das ist das marriotthotel hannover das parkhotel hannover das hotel cristal hannover)
		[01;36m(SU[00m
			(SU
				(SIMPX
					(VF die)
					(LK sind)
					(MF
						(NX alle)
						(PX
							(ADVX mehr)
							(KON oder)
							[01;36m(PX[00m
								(ADVX minder)
								(PX in der nahe vom hauptbahnhof)[01;36m)[00m))))
			(SU
				(SIMPX
					(VF ich)
					(LK kucke)
					[01;31m(MF[00m
						(NX mir)
						(ADVX mal)
						(NX die preise)[01;31m)[00m
					[01;31m(VC[00m
						(PTKVZ an)[01;31m)[00m))[01;36m)[00m
		(SU
			(DM also)
			(SIMPX
				(VF
					(NX
						(ART das)
						[01;31m(NX[00m
							(NX hotel)
							(NX cristal hannover)[01;31m)[00m))
				[01;31m(FKOORD[00m
					[01;31m(LKM[00m
						(LK ist)
						(MF vielleicht ein bischen teuer)[01;31m)[00m
					(LKM
						(LK hat)
						(MF dafur)
						(ADVX aber)
						[01;31m(NX[00m
							(NX sauna)
							(NX solarium)
							[01;31m(NX[00m
								(NN bar)[01;31m)[00m
							(KON und)
							(NX bistro)[01;31m)[00m)[01;31m)[00m))))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'VVFIN', 'PWAV', 'PPER', 'VVINF', 'VMFIN'), 'right siblings': [], 'left siblings': [(VC (APPR auser))], 'auto preterminal span': (37, 47), 'span': (37, 47), 'parent': 'PX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU na ja das stimmt)
		(SU
			(DM ja)
			(DM also)
			(SIMPX und dann konnen wir einfach den)
			(SIMPX [01;33m(SIMPX[00m
				(VF dann)
				[01;31m(FKOORD[00m
					[01;31m(LKMVC[00m
						(LK brauchen)
						(MF wir uns jetzt vielleicht gar nicht)
						(VC festlegen)[01;31m)[00m [01;33mSIMPX)[00m
					(KON und)
					(LKM sagen einfach wir fliegen zuruck)[01;31m)[00m))
		(SU
			(DM gut)
			[01;31m(ADVX[00m
				(ADV dann)[01;31m)[00m
			[01;31m(SIMPX[00m
				(VF dann)
				(LK denke)
				(MF ich)
				(NF
					(SIMPX
						(VF dann)
						(LK haben)
						(MF wir alles)
						[01;31m(PX[00m
							(VC auser)
							(NF das wir immer noch nicht wissen wo wir ubernachten konnen)[01;31m)[00m))[01;31m)[00m)
		(SU ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX
			(SU
				[01;31m(SIMPX[00m
					(VF dann)
					(LK konnen)
					[01;36m(MVC[00m
						(MF wir abends noch ein bischen in der bar)
						(VC sitzen)[01;36m)[00m[01;31m)[00m
				[01;31m(KOORD[00m
					(KON oder)[01;31m)[00m
				(SIMPX
					[01;31m(VF[00m
						(PX
							(APPR auf)
							(NX alle falle))[01;31m)[00m
					[01;36m(SIMPX[00m
						(LK treffen)
						(MF wir uns dann da)[01;36m)[00m)))
		(SU und ich habe hier eine liste vorbereitet mit hotels)
		(SU das ist das marriotthotel hannover das parkhotel hannover das hotel cristal hannover)
		[01;36m(SU[00m
			(SU
				(SIMPX
					(VF die)
					(LK sind)
					(MF
						(NX alle)
						(PX
							(ADVX mehr)
							(KON oder)
							[01;36m(PX[00m
								(ADVX minder)
								(PX in der nahe vom hauptbahnhof)[01;36m)[00m))))
			(SU
				(SIMPX
					(VF ich)
					(LK kucke)
					[01;31m(MF[00m
						(NX mir)
						(ADVX mal)
						(NX die preise)[01;31m)[00m
					[01;31m(VC[00m
						(PTKVZ an)[01;31m)[00m))[01;36m)[00m
		(SU
			(DM also)
			(SIMPX
				(VF
					(NX
						(ART das)
						[01;31m(NX[00m
							(NX hotel)
							(NX cristal hannover)[01;31m)[00m))
				[01;31m(FKOORD[00m
					[01;31m(LKM[00m
						(LK ist)
						(MF vielleicht ein bischen teuer)[01;31m)[00m
					(LKM
						(LK hat)
						(MF dafur)
						(ADVX aber)
						[01;31m(NX[00m
							(NX sauna)
							(NX solarium)
							[01;31m(NX[00m
								(NN bar)[01;31m)[00m
							(KON und)
							(NX bistro)[01;31m)[00m)[01;31m)[00m))))
Step:UNSET add
{'subtrees': ['MF', 'VC'], 'family': ['VF', 'LK', 'MVC'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV', 'ADV', 'ART', 'PIS', 'APPR', 'ART', 'NN', 'VVINF'), 'right siblings': [], 'left siblings': [(VF (ADVX (ADV dann))), (LK (VXFIN (VMFIN konnen)))], 'auto preterminal span': (57, 66), 'span': (57, 66), 'parent': 'SIMPX', 'label': 'MVC', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU na ja das stimmt)
		(SU
			(DM ja)
			(DM also)
			(SIMPX und dann konnen wir einfach den)
			(SIMPX [01;33m(SIMPX[00m
				(VF dann)
				[01;31m(FKOORD[00m
					[01;31m(LKMVC[00m
						(LK brauchen)
						(MF wir uns jetzt vielleicht gar nicht)
						(VC festlegen)[01;31m)[00m [01;33mSIMPX)[00m
					(KON und)
					(LKM sagen einfach wir fliegen zuruck)[01;31m)[00m))
		(SU
			(DM gut)
			[01;31m(ADVX[00m
				(ADV dann)[01;31m)[00m
			[01;31m(SIMPX[00m
				(VF dann)
				(LK denke)
				(MF ich)
				(NF
					(SIMPX
						(VF dann)
						(LK haben)
						(MF wir alles)
						[01;31m(PX[00m
							(VC auser)
							(NF das wir immer noch nicht wissen wo wir ubernachten konnen)[01;31m)[00m))[01;31m)[00m)
		(SU ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX
			(SU
				[01;31m(SIMPX[00m
					(VF dann)
					(LK konnen)
					(MVC wir abends noch ein bischen in der bar sitzen)[01;31m)[00m
				[01;31m(KOORD[00m
					(KON oder)[01;31m)[00m
				(SIMPX
					[01;31m(VF[00m
						(PX
							(APPR auf)
							(NX alle falle))[01;31m)[00m
					[01;36m(SIMPX[00m
						(LK treffen)
						(MF wir uns dann da)[01;36m)[00m)))
		(SU und ich habe hier eine liste vorbereitet mit hotels)
		(SU das ist das marriotthotel hannover das parkhotel hannover das hotel cristal hannover)
		[01;36m(SU[00m
			(SU
				(SIMPX
					(VF die)
					(LK sind)
					(MF
						(NX alle)
						(PX
							(ADVX mehr)
							(KON oder)
							[01;36m(PX[00m
								(ADVX minder)
								(PX in der nahe vom hauptbahnhof)[01;36m)[00m))))
			(SU
				(SIMPX
					(VF ich)
					(LK kucke)
					[01;31m(MF[00m
						(NX mir)
						(ADVX mal)
						(NX die preise)[01;31m)[00m
					[01;31m(VC[00m
						(PTKVZ an)[01;31m)[00m))[01;36m)[00m
		(SU
			(DM also)
			(SIMPX
				(VF
					(NX
						(ART das)
						[01;31m(NX[00m
							(NX hotel)
							(NX cristal hannover)[01;31m)[00m))
				[01;31m(FKOORD[00m
					[01;31m(LKM[00m
						(LK ist)
						(MF vielleicht ein bischen teuer)[01;31m)[00m
					(LKM
						(LK hat)
						(MF dafur)
						(ADVX aber)
						[01;31m(NX[00m
							(NX sauna)
							(NX solarium)
							[01;31m(NX[00m
								(NN bar)[01;31m)[00m
							(KON und)
							(NX bistro)[01;31m)[00m)[01;31m)[00m))))
Step:UNSET add
{'subtrees': ['LK', 'MF'], 'family': ['VF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'PRF', 'ADV', 'ADV'), 'right siblings': [], 'left siblings': [(VF (PX (APPR auf) (NX (PIDAT alle) (NN falle))))], 'auto preterminal span': (70, 75), 'span': (70, 75), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU na ja das stimmt)
		(SU
			(DM ja)
			(DM also)
			(SIMPX und dann konnen wir einfach den)
			(SIMPX [01;33m(SIMPX[00m
				(VF dann)
				[01;31m(FKOORD[00m
					[01;31m(LKMVC[00m
						(LK brauchen)
						(MF wir uns jetzt vielleicht gar nicht)
						(VC festlegen)[01;31m)[00m [01;33mSIMPX)[00m
					(KON und)
					(LKM sagen einfach wir fliegen zuruck)[01;31m)[00m))
		(SU
			(DM gut)
			[01;31m(ADVX[00m
				(ADV dann)[01;31m)[00m
			[01;31m(SIMPX[00m
				(VF dann)
				(LK denke)
				(MF ich)
				(NF
					(SIMPX
						(VF dann)
						(LK haben)
						(MF wir alles)
						[01;31m(PX[00m
							(VC auser)
							(NF das wir immer noch nicht wissen wo wir ubernachten konnen)[01;31m)[00m))[01;31m)[00m)
		(SU ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX
			(SU
				[01;31m(SIMPX[00m
					(VF dann)
					(LK konnen)
					(MVC wir abends noch ein bischen in der bar sitzen)[01;31m)[00m
				[01;31m(KOORD[00m
					(KON oder)[01;31m)[00m
				(SIMPX
					[01;31m(VF[00m
						(PX
							(APPR auf)
							(NX alle falle))[01;31m)[00m
					(SIMPX treffen wir uns dann da))))
		(SU und ich habe hier eine liste vorbereitet mit hotels)
		(SU das ist das marriotthotel hannover das parkhotel hannover das hotel cristal hannover)
		[01;36m(SU[00m
			(SU
				(SIMPX
					(VF die)
					(LK sind)
					(MF
						(NX alle)
						(PX
							(ADVX mehr)
							(KON oder)
							[01;36m(PX[00m
								(ADVX minder)
								(PX in der nahe vom hauptbahnhof)[01;36m)[00m))))
			(SU
				(SIMPX
					(VF ich)
					(LK kucke)
					[01;31m(MF[00m
						(NX mir)
						(ADVX mal)
						(NX die preise)[01;31m)[00m
					[01;31m(VC[00m
						(PTKVZ an)[01;31m)[00m))[01;36m)[00m
		(SU
			(DM also)
			(SIMPX
				(VF
					(NX
						(ART das)
						[01;31m(NX[00m
							(NX hotel)
							(NX cristal hannover)[01;31m)[00m))
				[01;31m(FKOORD[00m
					[01;31m(LKM[00m
						(LK ist)
						(MF vielleicht ein bischen teuer)[01;31m)[00m
					(LKM
						(LK hat)
						(MF dafur)
						(ADVX aber)
						[01;31m(NX[00m
							(NX sauna)
							(NX solarium)
							[01;31m(NX[00m
								(NN bar)[01;31m)[00m
							(KON und)
							(NX bistro)[01;31m)[00m)[01;31m)[00m))))
Step:Co-ordination
{'subtrees': ['SU', 'SU'], 'family': ['SU', 'SU', 'SU', 'SU', 'SIMPX', 'SU', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VAFIN', 'PIS', 'ADV', 'KON', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'PPER', 'VVFIN', 'PRF', 'ADV', 'ART', 'NN', 'PTKVZ'), 'right siblings': [(SU (DM (ADVX (ADV also))) (SIMPX (VF (NX (ART das) (NX (NX (NN hotel)) (NX (NX (NE cristal)) (NX (NE hannover)))))) (FKOORD (LKM (LK (VXFIN (VAFIN ist))) (MF (ADVX (ADV vielleicht)) (ADJX (NX (ART ein) (PIS bischen)) (ADJD teuer)))) (LKM (LK (VXFIN (VAFIN hat))) (MF (ADVX (PROP dafur))) (ADVX (ADV aber)) (NX (NX (NN sauna)) (NX (NN solarium)) (NX (NN bar)) (KON und) (NX (NN bistro)))))))], 'left siblings': [(SU (DM (ITJ na) (PTKANT ja)) (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VVFIN stimmt))))), (SU (DM (PTKANT ja)) (DM (ADVX (ADV also))) (SIMPX (KOORD (KON und)) (VF (ADVX (ADV dann))) (LK (VXFIN (VMFIN konnen))) (MF (NX (PPER wir)) (ADVX (ADV einfach)) (NX (ART den)))) (SIMPX (VF (ADVX (ADV dann))) (FKOORD (LKMVC (LK (VXFIN (VVFIN brauchen))) (MF (NX (PPER wir)) (NX (PRF uns)) (ADVX (ADV jetzt)) (ADVX (ADV vielleicht)) (ADVX (ADVX (ADV gar)) (PTKNEG nicht))) (VC (VXINF (VVINF festlegen)))) (KON und) (LKM (LK (VXFIN (VVFIN sagen))) (MF (MF (ADVX (ADV einfach))) (NF (SIMPX (VF (NX (PPER wir))) (LK (VXFIN (VVFIN fliegen))) (ADVX (PTKVZ zuruck))))))))), (SU (DM (ITJ gut)) (ADVX (ADV dann)) (SIMPX (VF (ADVX (ADV dann))) (LK (VXFIN (VVFIN denke))) (MF (NX (PPER ich))) (NF (SIMPX (VF (ADVX (ADV dann))) (LK (VXFIN (VAFIN haben))) (MF (NX (PPER wir)) (NX (PIS alles))) (PX (VC (APPR auser)) (NF (SIMPX (C (KOUS das)) (MF (NX (PPER wir)) (ADVX (ADV immer)) (ADVX (ADVX (ADV noch)) (PTKNEG nicht))) (VC (VXFIN (VVFIN wissen))) (NF (SIMPX (C (PX (PWAV wo))) (MF (NX (PPER wir))) (VC (VXINF (VVINF ubernachten)) (VXFIN (VMFIN konnen)))))))))))), (SU (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN denke))) (NF (SIMPX (VF (NX (PPER wir))) (LK (VXFIN (VVFIN nehmen))) (MF (ADVX (ADV zusammen)) (ADVX (ADV einfach)) (NX (ART ein) (NN hotel))))))), (SIMPX (SU (SIMPX (VF (ADVX (ADV dann))) (LK (VXFIN (VMFIN konnen))) (MVC (MF (NX (PPER wir)) (ADVX (ADV abends)) (ADVX (ADV noch)) (NX (ART ein) (PIS bischen)) (PX (APPR in) (NX (ART der) (NN bar)))) (VC (VXINF (VVINF sitzen))))) (KOORD (KON oder)) (SIMPX (VF (PX (APPR auf) (NX (PIDAT alle) (NN falle)))) (SIMPX (LK (VXFIN (VVFIN treffen))) (MF (NX (PPER wir)) (NX (PRF uns)) (ADVX (ADV dann)) (ADVX (ADV da))))))), (SU (SIMPX (KOORD (KON und)) (VF (NX (PPER ich))) (LK (VXFIN (VAFIN habe))) (MF (ADVX (ADV hier)) (NX (ART eine) (NN liste))) (VC (VXINF (VVPP vorbereitet))) (NF (PX (APPR mit) (NX (NN hotels)))))), (SU (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VAFIN ist))) (MF (NX (ART das) (NX (NX (NE marriotthotel)) (NX (NX (NE hannover)) (NX (ART das) (NX (NX (NX (NE parkhotel)) (NX (NE hannover))) (NX (ART das) (NX (NX (NN hotel)) (NX (NX (NE cristal)) (NX (NE hannover)))))))))))))], 'auto preterminal span': (96, 114), 'span': (96, 114), 'parent': 'TURN', 'label': 'SU', 'classified_type': 'Co-ordination', 'type': 'add'}
(TOP
	(TURN
		(SU na ja das stimmt)
		(SU
			(DM ja)
			(DM also)
			(SIMPX und dann konnen wir einfach den)
			(SIMPX [01;33m(SIMPX[00m
				(VF dann)
				[01;31m(FKOORD[00m
					[01;31m(LKMVC[00m
						(LK brauchen)
						(MF wir uns jetzt vielleicht gar nicht)
						(VC festlegen)[01;31m)[00m [01;33mSIMPX)[00m
					(KON und)
					(LKM sagen einfach wir fliegen zuruck)[01;31m)[00m))
		(SU
			(DM gut)
			[01;31m(ADVX[00m
				(ADV dann)[01;31m)[00m
			[01;31m(SIMPX[00m
				(VF dann)
				(LK denke)
				(MF ich)
				(NF
					(SIMPX
						(VF dann)
						(LK haben)
						(MF wir alles)
						[01;31m(PX[00m
							(VC auser)
							(NF das wir immer noch nicht wissen wo wir ubernachten konnen)[01;31m)[00m))[01;31m)[00m)
		(SU ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX
			(SU
				[01;31m(SIMPX[00m
					(VF dann)
					(LK konnen)
					(MVC wir abends noch ein bischen in der bar sitzen)[01;31m)[00m
				[01;31m(KOORD[00m
					(KON oder)[01;31m)[00m
				(SIMPX
					[01;31m(VF[00m
						(PX
							(APPR auf)
							(NX alle falle))[01;31m)[00m
					(SIMPX treffen wir uns dann da))))
		(SU und ich habe hier eine liste vorbereitet mit hotels)
		(SU das ist das marriotthotel hannover das parkhotel hannover das hotel cristal hannover)
		(SU
			(SU
				(SIMPX
					(VF die)
					(LK sind)
					(MF
						(NX alle)
						(PX
							(ADVX mehr)
							(KON oder)
							[01;36m(PX[00m
								(ADVX minder)
								(PX in der nahe vom hauptbahnhof)[01;36m)[00m))))
			(SU
				(SIMPX
					(VF ich)
					(LK kucke)
					[01;31m(MF[00m
						(NX mir)
						(ADVX mal)
						(NX die preise)[01;31m)[00m
					[01;31m(VC[00m
						(PTKVZ an)[01;31m)[00m)))
		(SU
			(DM also)
			(SIMPX
				(VF
					(NX
						(ART das)
						[01;31m(NX[00m
							(NX hotel)
							(NX cristal hannover)[01;31m)[00m))
				[01;31m(FKOORD[00m
					[01;31m(LKM[00m
						(LK ist)
						(MF vielleicht ein bischen teuer)[01;31m)[00m
					(LKM
						(LK hat)
						(MF dafur)
						(ADVX aber)
						[01;31m(NX[00m
							(NX sauna)
							(NX solarium)
							[01;31m(NX[00m
								(NN bar)[01;31m)[00m
							(KON und)
							(NX bistro)[01;31m)[00m)[01;31m)[00m))))
Step:PP Attachment
{'subtrees': ['ADVX', 'PX'], 'family': ['ADVX', 'KON', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'APPR', 'ART', 'NN', 'APPRART', 'NN'), 'right siblings': [], 'left siblings': [(ADVX (ADV mehr)), (KON oder)], 'auto preterminal span': (101, 107), 'span': (101, 107), 'parent': 'PX', 'label': 'PX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU na ja das stimmt)
		(SU
			(DM ja)
			(DM also)
			(SIMPX und dann konnen wir einfach den)
			(SIMPX [01;33m(SIMPX[00m
				(VF dann)
				[01;31m(FKOORD[00m
					[01;31m(LKMVC[00m
						(LK brauchen)
						(MF wir uns jetzt vielleicht gar nicht)
						(VC festlegen)[01;31m)[00m [01;33mSIMPX)[00m
					(KON und)
					(LKM sagen einfach wir fliegen zuruck)[01;31m)[00m))
		(SU
			(DM gut)
			[01;31m(ADVX[00m
				(ADV dann)[01;31m)[00m
			[01;31m(SIMPX[00m
				(VF dann)
				(LK denke)
				(MF ich)
				(NF
					(SIMPX
						(VF dann)
						(LK haben)
						(MF wir alles)
						[01;31m(PX[00m
							(VC auser)
							(NF das wir immer noch nicht wissen wo wir ubernachten konnen)[01;31m)[00m))[01;31m)[00m)
		(SU ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX
			(SU
				[01;31m(SIMPX[00m
					(VF dann)
					(LK konnen)
					(MVC wir abends noch ein bischen in der bar sitzen)[01;31m)[00m
				[01;31m(KOORD[00m
					(KON oder)[01;31m)[00m
				(SIMPX
					[01;31m(VF[00m
						(PX
							(APPR auf)
							(NX alle falle))[01;31m)[00m
					(SIMPX treffen wir uns dann da))))
		(SU und ich habe hier eine liste vorbereitet mit hotels)
		(SU das ist das marriotthotel hannover das parkhotel hannover das hotel cristal hannover)
		(SU
			(SU die sind alle mehr oder minder in der nahe vom hauptbahnhof)
			(SU
				(SIMPX
					(VF ich)
					(LK kucke)
					[01;31m(MF[00m
						(NX mir)
						(ADVX mal)
						(NX die preise)[01;31m)[00m
					[01;31m(VC[00m
						(PTKVZ an)[01;31m)[00m)))
		(SU
			(DM also)
			(SIMPX
				(VF
					(NX
						(ART das)
						[01;31m(NX[00m
							(NX hotel)
							(NX cristal hannover)[01;31m)[00m))
				[01;31m(FKOORD[00m
					[01;31m(LKM[00m
						(LK ist)
						(MF vielleicht ein bischen teuer)[01;31m)[00m
					(LKM
						(LK hat)
						(MF dafur)
						(ADVX aber)
						[01;31m(NX[00m
							(NX sauna)
							(NX solarium)
							[01;31m(NX[00m
								(NN bar)[01;31m)[00m
							(KON und)
							(NX bistro)[01;31m)[00m)[01;31m)[00m))))
Step:Co-ordination
{'subtrees': ['LK', 'MF', 'VC'], 'family': ['LKMVC', 'KON', 'LKM'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'VVFIN', 'ADV', 'PPER', 'VVFIN', 'PTKVZ'), 'right siblings': ['KON', 'LKM'], 'parent': 'FKOORD', 'auto preterminal span': (13, 27), 'span': (13, 21), 'left siblings': [], 'label': 'LKMVC', 'classified_type': 'Co-ordination', 'type': 'remove'}
(TOP
	(TURN
		(SU na ja das stimmt)
		(SU
			(DM ja)
			(DM also)
			(SIMPX und dann konnen wir einfach den)
			(SIMPX [01;33m(SIMPX[00m
				(VF dann)
				[01;31m(FKOORD[00m
					(LK brauchen)
					(MF wir uns jetzt vielleicht gar nicht)
					(VC festlegen) [01;33mSIMPX)[00m
					(KON und)
					(LKM sagen einfach wir fliegen zuruck)[01;31m)[00m))
		(SU
			(DM gut)
			[01;31m(ADVX[00m
				(ADV dann)[01;31m)[00m
			[01;31m(SIMPX[00m
				(VF dann)
				(LK denke)
				(MF ich)
				(NF
					(SIMPX
						(VF dann)
						(LK haben)
						(MF wir alles)
						[01;31m(PX[00m
							(VC auser)
							(NF das wir immer noch nicht wissen wo wir ubernachten konnen)[01;31m)[00m))[01;31m)[00m)
		(SU ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX
			(SU
				[01;31m(SIMPX[00m
					(VF dann)
					(LK konnen)
					(MVC wir abends noch ein bischen in der bar sitzen)[01;31m)[00m
				[01;31m(KOORD[00m
					(KON oder)[01;31m)[00m
				(SIMPX
					[01;31m(VF[00m
						(PX
							(APPR auf)
							(NX alle falle))[01;31m)[00m
					(SIMPX treffen wir uns dann da))))
		(SU und ich habe hier eine liste vorbereitet mit hotels)
		(SU das ist das marriotthotel hannover das parkhotel hannover das hotel cristal hannover)
		(SU
			(SU die sind alle mehr oder minder in der nahe vom hauptbahnhof)
			(SU
				(SIMPX
					(VF ich)
					(LK kucke)
					[01;31m(MF[00m
						(NX mir)
						(ADVX mal)
						(NX die preise)[01;31m)[00m
					[01;31m(VC[00m
						(PTKVZ an)[01;31m)[00m)))
		(SU
			(DM also)
			(SIMPX
				(VF
					(NX
						(ART das)
						[01;31m(NX[00m
							(NX hotel)
							(NX cristal hannover)[01;31m)[00m))
				[01;31m(FKOORD[00m
					[01;31m(LKM[00m
						(LK ist)
						(MF vielleicht ein bischen teuer)[01;31m)[00m
					(LKM
						(LK hat)
						(MF dafur)
						(ADVX aber)
						[01;31m(NX[00m
							(NX sauna)
							(NX solarium)
							[01;31m(NX[00m
								(NN bar)[01;31m)[00m
							(KON und)
							(NX bistro)[01;31m)[00m)[01;31m)[00m))))
Step:UNSET remove
{'subtrees': ['LK', 'MF', 'VC', 'KON', 'LKM'], 'family': ['VF', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'VVFIN', 'ADV', 'PPER', 'VVFIN', 'PTKVZ'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (12, 27), 'span': (13, 27), 'left siblings': ['VF'], 'label': 'FKOORD', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU na ja das stimmt)
		(SU
			(DM ja)
			(DM also)
			(SIMPX und dann konnen wir einfach den)
			(SIMPX
				[01;36m(SIMPX[00m
					(VF dann)
					(LK brauchen)
					(MF wir uns jetzt vielleicht gar nicht)
					(VC festlegen)[01;36m)[00m
				(KON und)
				(LKM sagen einfach wir fliegen zuruck)))
		(SU
			(DM gut)
			[01;31m(ADVX[00m
				(ADV dann)[01;31m)[00m
			[01;31m(SIMPX[00m
				(VF dann)
				(LK denke)
				(MF ich)
				(NF
					(SIMPX
						(VF dann)
						(LK haben)
						(MF wir alles)
						[01;31m(PX[00m
							(VC auser)
							(NF das wir immer noch nicht wissen wo wir ubernachten konnen)[01;31m)[00m))[01;31m)[00m)
		(SU ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX
			(SU
				[01;31m(SIMPX[00m
					(VF dann)
					(LK konnen)
					(MVC wir abends noch ein bischen in der bar sitzen)[01;31m)[00m
				[01;31m(KOORD[00m
					(KON oder)[01;31m)[00m
				(SIMPX
					[01;31m(VF[00m
						(PX
							(APPR auf)
							(NX alle falle))[01;31m)[00m
					(SIMPX treffen wir uns dann da))))
		(SU und ich habe hier eine liste vorbereitet mit hotels)
		(SU das ist das marriotthotel hannover das parkhotel hannover das hotel cristal hannover)
		(SU
			(SU die sind alle mehr oder minder in der nahe vom hauptbahnhof)
			(SU
				(SIMPX
					(VF ich)
					(LK kucke)
					[01;31m(MF[00m
						(NX mir)
						(ADVX mal)
						(NX die preise)[01;31m)[00m
					[01;31m(VC[00m
						(PTKVZ an)[01;31m)[00m)))
		(SU
			(DM also)
			(SIMPX
				(VF
					(NX
						(ART das)
						[01;31m(NX[00m
							(NX hotel)
							(NX cristal hannover)[01;31m)[00m))
				[01;31m(FKOORD[00m
					[01;31m(LKM[00m
						(LK ist)
						(MF vielleicht ein bischen teuer)[01;31m)[00m
					(LKM
						(LK hat)
						(MF dafur)
						(ADVX aber)
						[01;31m(NX[00m
							(NX sauna)
							(NX solarium)
							[01;31m(NX[00m
								(NN bar)[01;31m)[00m
							(KON und)
							(NX bistro)[01;31m)[00m)[01;31m)[00m))))
Step:UNSET add
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['SIMPX', 'KON', 'LKM'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'VVINF'), 'right siblings': [(KON und), (LKM (LK (VXFIN (VVFIN sagen))) (MF (MF (ADVX (ADV einfach))) (NF (SIMPX (VF (NX (PPER wir))) (LK (VXFIN (VVFIN fliegen))) (ADVX (PTKVZ zuruck))))))], 'left siblings': [], 'auto preterminal span': (12, 21), 'span': (12, 21), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU na ja das stimmt)
		(SU ja also und dann konnen wir einfach den dann brauchen wir uns jetzt vielleicht gar nicht festlegen und sagen einfach wir fliegen zuruck)
		(SU
			(DM gut)
			[01;31m(ADVX[00m
				(ADV dann)[01;31m)[00m
			[01;31m(SIMPX[00m
				(VF dann)
				(LK denke)
				(MF ich)
				(NF
					(SIMPX
						(VF dann)
						(LK haben)
						(MF wir alles)
						[01;31m(PX[00m
							(VC auser)
							(NF das wir immer noch nicht wissen wo wir ubernachten konnen)[01;31m)[00m))[01;31m)[00m)
		(SU ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX
			(SU
				[01;31m(SIMPX[00m
					(VF dann)
					(LK konnen)
					(MVC wir abends noch ein bischen in der bar sitzen)[01;31m)[00m
				[01;31m(KOORD[00m
					(KON oder)[01;31m)[00m
				(SIMPX
					[01;31m(VF[00m
						(PX
							(APPR auf)
							(NX alle falle))[01;31m)[00m
					(SIMPX treffen wir uns dann da))))
		(SU und ich habe hier eine liste vorbereitet mit hotels)
		(SU das ist das marriotthotel hannover das parkhotel hannover das hotel cristal hannover)
		(SU
			(SU die sind alle mehr oder minder in der nahe vom hauptbahnhof)
			(SU
				(SIMPX
					(VF ich)
					(LK kucke)
					[01;31m(MF[00m
						(NX mir)
						(ADVX mal)
						(NX die preise)[01;31m)[00m
					[01;31m(VC[00m
						(PTKVZ an)[01;31m)[00m)))
		(SU
			(DM also)
			(SIMPX
				(VF
					(NX
						(ART das)
						[01;31m(NX[00m
							(NX hotel)
							(NX cristal hannover)[01;31m)[00m))
				[01;31m(FKOORD[00m
					[01;31m(LKM[00m
						(LK ist)
						(MF vielleicht ein bischen teuer)[01;31m)[00m
					(LKM
						(LK hat)
						(MF dafur)
						(ADVX aber)
						[01;31m(NX[00m
							(NX sauna)
							(NX solarium)
							[01;31m(NX[00m
								(NN bar)[01;31m)[00m
							(KON und)
							(NX bistro)[01;31m)[00m)[01;31m)[00m))))
Step:Single Word Phrase
{'subtrees': ['ADV'], 'family': ['DM', 'ADVX', 'SIMPX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ITJ', 'ADV', 'ADV', 'VVFIN', 'PPER', 'ADV', 'VAFIN', 'PPER', 'PIS', 'APPR', 'KOUS', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'VVFIN', 'PWAV', 'PPER', 'VVINF', 'VMFIN'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (27, 47), 'span': (28, 29), 'left siblings': ['DM'], 'label': 'ADVX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(SU na ja das stimmt)
		(SU ja also und dann konnen wir einfach den dann brauchen wir uns jetzt vielleicht gar nicht festlegen und sagen einfach wir fliegen zuruck)
		(SU
			(DM gut)
			(ADV dann)
			[01;31m(SIMPX[00m
				(VF dann)
				(LK denke)
				(MF ich)
				(NF
					(SIMPX
						(VF dann)
						(LK haben)
						(MF wir alles)
						[01;31m(PX[00m
							(VC auser)
							(NF das wir immer noch nicht wissen wo wir ubernachten konnen)[01;31m)[00m))[01;31m)[00m)
		(SU ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX
			(SU
				[01;31m(SIMPX[00m
					(VF dann)
					(LK konnen)
					(MVC wir abends noch ein bischen in der bar sitzen)[01;31m)[00m
				[01;31m(KOORD[00m
					(KON oder)[01;31m)[00m
				(SIMPX
					[01;31m(VF[00m
						(PX
							(APPR auf)
							(NX alle falle))[01;31m)[00m
					(SIMPX treffen wir uns dann da))))
		(SU und ich habe hier eine liste vorbereitet mit hotels)
		(SU das ist das marriotthotel hannover das parkhotel hannover das hotel cristal hannover)
		(SU
			(SU die sind alle mehr oder minder in der nahe vom hauptbahnhof)
			(SU
				(SIMPX
					(VF ich)
					(LK kucke)
					[01;31m(MF[00m
						(NX mir)
						(ADVX mal)
						(NX die preise)[01;31m)[00m
					[01;31m(VC[00m
						(PTKVZ an)[01;31m)[00m)))
		(SU
			(DM also)
			(SIMPX
				(VF
					(NX
						(ART das)
						[01;31m(NX[00m
							(NX hotel)
							(NX cristal hannover)[01;31m)[00m))
				[01;31m(FKOORD[00m
					[01;31m(LKM[00m
						(LK ist)
						(MF vielleicht ein bischen teuer)[01;31m)[00m
					(LKM
						(LK hat)
						(MF dafur)
						(ADVX aber)
						[01;31m(NX[00m
							(NX sauna)
							(NX solarium)
							[01;31m(NX[00m
								(NN bar)[01;31m)[00m
							(KON und)
							(NX bistro)[01;31m)[00m)[01;31m)[00m))))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'NF'], 'family': ['DM', 'ADV', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'ADV', 'VVFIN', 'PPER', 'ADV', 'VAFIN', 'PPER', 'PIS', 'APPR', 'KOUS', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'VVFIN', 'PWAV', 'PPER', 'VVINF', 'VMFIN'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (27, 47), 'span': (29, 47), 'left siblings': ['DM', 'ADV'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU na ja das stimmt)
		(SU ja also und dann konnen wir einfach den dann brauchen wir uns jetzt vielleicht gar nicht festlegen und sagen einfach wir fliegen zuruck)
		(SU
			(DM gut)
			(ADV dann)
			(VF dann)
			(LK denke)
			(MF ich)
			(NF
				(SIMPX
					(VF dann)
					(LK haben)
					(MF wir alles)
					[01;31m(PX[00m
						(VC auser)
						(NF das wir immer noch nicht wissen wo wir ubernachten konnen)[01;31m)[00m)))
		(SU ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX
			(SU
				[01;31m(SIMPX[00m
					(VF dann)
					(LK konnen)
					(MVC wir abends noch ein bischen in der bar sitzen)[01;31m)[00m
				[01;31m(KOORD[00m
					(KON oder)[01;31m)[00m
				(SIMPX
					[01;31m(VF[00m
						(PX
							(APPR auf)
							(NX alle falle))[01;31m)[00m
					(SIMPX treffen wir uns dann da))))
		(SU und ich habe hier eine liste vorbereitet mit hotels)
		(SU das ist das marriotthotel hannover das parkhotel hannover das hotel cristal hannover)
		(SU
			(SU die sind alle mehr oder minder in der nahe vom hauptbahnhof)
			(SU
				(SIMPX
					(VF ich)
					(LK kucke)
					[01;31m(MF[00m
						(NX mir)
						(ADVX mal)
						(NX die preise)[01;31m)[00m
					[01;31m(VC[00m
						(PTKVZ an)[01;31m)[00m)))
		(SU
			(DM also)
			(SIMPX
				(VF
					(NX
						(ART das)
						[01;31m(NX[00m
							(NX hotel)
							(NX cristal hannover)[01;31m)[00m))
				[01;31m(FKOORD[00m
					[01;31m(LKM[00m
						(LK ist)
						(MF vielleicht ein bischen teuer)[01;31m)[00m
					(LKM
						(LK hat)
						(MF dafur)
						(ADVX aber)
						[01;31m(NX[00m
							(NX sauna)
							(NX solarium)
							[01;31m(NX[00m
								(NN bar)[01;31m)[00m
							(KON und)
							(NX bistro)[01;31m)[00m)[01;31m)[00m))))
Step:UNSET remove
{'subtrees': ['VC', 'NF'], 'family': ['VF', 'LK', 'MF', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'PIS', 'APPR', 'KOUS', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'VVFIN', 'PWAV', 'PPER', 'VVINF', 'VMFIN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (32, 47), 'span': (36, 47), 'left siblings': ['VF', 'LK', 'MF'], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU na ja das stimmt)
		(SU ja also und dann konnen wir einfach den dann brauchen wir uns jetzt vielleicht gar nicht festlegen und sagen einfach wir fliegen zuruck)
		(SU gut dann dann denke ich dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)
		(SU ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX
			(SU
				[01;31m(SIMPX[00m
					(VF dann)
					(LK konnen)
					(MVC wir abends noch ein bischen in der bar sitzen)[01;31m)[00m
				[01;31m(KOORD[00m
					(KON oder)[01;31m)[00m
				(SIMPX
					[01;31m(VF[00m
						(PX
							(APPR auf)
							(NX alle falle))[01;31m)[00m
					(SIMPX treffen wir uns dann da))))
		(SU und ich habe hier eine liste vorbereitet mit hotels)
		(SU das ist das marriotthotel hannover das parkhotel hannover das hotel cristal hannover)
		(SU
			(SU die sind alle mehr oder minder in der nahe vom hauptbahnhof)
			(SU
				(SIMPX
					(VF ich)
					(LK kucke)
					[01;31m(MF[00m
						(NX mir)
						(ADVX mal)
						(NX die preise)[01;31m)[00m
					[01;31m(VC[00m
						(PTKVZ an)[01;31m)[00m)))
		(SU
			(DM also)
			(SIMPX
				(VF
					(NX
						(ART das)
						[01;31m(NX[00m
							(NX hotel)
							(NX cristal hannover)[01;31m)[00m))
				[01;31m(FKOORD[00m
					[01;31m(LKM[00m
						(LK ist)
						(MF vielleicht ein bischen teuer)[01;31m)[00m
					(LKM
						(LK hat)
						(MF dafur)
						(ADVX aber)
						[01;31m(NX[00m
							(NX sauna)
							(NX solarium)
							[01;31m(NX[00m
								(NN bar)[01;31m)[00m
							(KON und)
							(NX bistro)[01;31m)[00m)[01;31m)[00m))))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MVC'], 'family': ['SIMPX', 'KOORD', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'APPR', 'PIDAT', 'NN', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV'), 'right siblings': ['KOORD', 'SIMPX'], 'parent': 'SU', 'auto preterminal span': (55, 75), 'span': (55, 66), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU na ja das stimmt)
		(SU ja also und dann konnen wir einfach den dann brauchen wir uns jetzt vielleicht gar nicht festlegen und sagen einfach wir fliegen zuruck)
		(SU gut dann dann denke ich dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)
		(SU ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX
			(SU
				(VF dann)
				(LK konnen)
				(MVC wir abends noch ein bischen in der bar sitzen)
				[01;31m(KOORD[00m
					(KON oder)[01;31m)[00m
				(SIMPX
					[01;31m(VF[00m
						(PX
							(APPR auf)
							(NX alle falle))[01;31m)[00m
					(SIMPX treffen wir uns dann da))))
		(SU und ich habe hier eine liste vorbereitet mit hotels)
		(SU das ist das marriotthotel hannover das parkhotel hannover das hotel cristal hannover)
		(SU
			(SU die sind alle mehr oder minder in der nahe vom hauptbahnhof)
			(SU
				(SIMPX
					(VF ich)
					(LK kucke)
					[01;31m(MF[00m
						(NX mir)
						(ADVX mal)
						(NX die preise)[01;31m)[00m
					[01;31m(VC[00m
						(PTKVZ an)[01;31m)[00m)))
		(SU
			(DM also)
			(SIMPX
				(VF
					(NX
						(ART das)
						[01;31m(NX[00m
							(NX hotel)
							(NX cristal hannover)[01;31m)[00m))
				[01;31m(FKOORD[00m
					[01;31m(LKM[00m
						(LK ist)
						(MF vielleicht ein bischen teuer)[01;31m)[00m
					(LKM
						(LK hat)
						(MF dafur)
						(ADVX aber)
						[01;31m(NX[00m
							(NX sauna)
							(NX solarium)
							[01;31m(NX[00m
								(NN bar)[01;31m)[00m
							(KON und)
							(NX bistro)[01;31m)[00m)[01;31m)[00m))))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['VF', 'LK', 'MVC', 'KOORD', 'SIMPX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'APPR', 'PIDAT', 'NN', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (55, 75), 'span': (66, 67), 'left siblings': ['VF', 'LK', 'MVC'], 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(SU na ja das stimmt)
		(SU ja also und dann konnen wir einfach den dann brauchen wir uns jetzt vielleicht gar nicht festlegen und sagen einfach wir fliegen zuruck)
		(SU gut dann dann denke ich dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)
		(SU ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX
			(SU
				(VF dann)
				(LK konnen)
				(MVC wir abends noch ein bischen in der bar sitzen)
				(KON oder)
				(SIMPX
					[01;31m(VF[00m
						(PX
							(APPR auf)
							(NX alle falle))[01;31m)[00m
					(SIMPX treffen wir uns dann da))))
		(SU und ich habe hier eine liste vorbereitet mit hotels)
		(SU das ist das marriotthotel hannover das parkhotel hannover das hotel cristal hannover)
		(SU
			(SU die sind alle mehr oder minder in der nahe vom hauptbahnhof)
			(SU
				(SIMPX
					(VF ich)
					(LK kucke)
					[01;31m(MF[00m
						(NX mir)
						(ADVX mal)
						(NX die preise)[01;31m)[00m
					[01;31m(VC[00m
						(PTKVZ an)[01;31m)[00m)))
		(SU
			(DM also)
			(SIMPX
				(VF
					(NX
						(ART das)
						[01;31m(NX[00m
							(NX hotel)
							(NX cristal hannover)[01;31m)[00m))
				[01;31m(FKOORD[00m
					[01;31m(LKM[00m
						(LK ist)
						(MF vielleicht ein bischen teuer)[01;31m)[00m
					(LKM
						(LK hat)
						(MF dafur)
						(ADVX aber)
						[01;31m(NX[00m
							(NX sauna)
							(NX solarium)
							[01;31m(NX[00m
								(NN bar)[01;31m)[00m
							(KON und)
							(NX bistro)[01;31m)[00m)[01;31m)[00m))))
Step:Unary
{'subtrees': ['PX'], 'family': ['VF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'PIDAT', 'NN', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV'), 'right siblings': ['SIMPX'], 'parent': 'SIMPX', 'auto preterminal span': (67, 75), 'span': (67, 70), 'left siblings': [], 'label': 'VF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU na ja das stimmt)
		(SU ja also und dann konnen wir einfach den dann brauchen wir uns jetzt vielleicht gar nicht festlegen und sagen einfach wir fliegen zuruck)
		(SU gut dann dann denke ich dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)
		(SU ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX dann konnen wir abends noch ein bischen in der bar sitzen oder auf alle falle treffen wir uns dann da)
		(SU und ich habe hier eine liste vorbereitet mit hotels)
		(SU das ist das marriotthotel hannover das parkhotel hannover das hotel cristal hannover)
		(SU
			(SU die sind alle mehr oder minder in der nahe vom hauptbahnhof)
			(SU
				(SIMPX
					(VF ich)
					(LK kucke)
					[01;31m(MF[00m
						(NX mir)
						(ADVX mal)
						(NX die preise)[01;31m)[00m
					[01;31m(VC[00m
						(PTKVZ an)[01;31m)[00m)))
		(SU
			(DM also)
			(SIMPX
				(VF
					(NX
						(ART das)
						[01;31m(NX[00m
							(NX hotel)
							(NX cristal hannover)[01;31m)[00m))
				[01;31m(FKOORD[00m
					[01;31m(LKM[00m
						(LK ist)
						(MF vielleicht ein bischen teuer)[01;31m)[00m
					(LKM
						(LK hat)
						(MF dafur)
						(ADVX aber)
						[01;31m(NX[00m
							(NX sauna)
							(NX solarium)
							[01;31m(NX[00m
								(NN bar)[01;31m)[00m
							(KON und)
							(NX bistro)[01;31m)[00m)[01;31m)[00m))))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADVX', 'NX'], 'family': ['VF', 'LK', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'PRF', 'ADV', 'ART', 'NN', 'PTKVZ'), 'right siblings': ['VC'], 'parent': 'SIMPX', 'auto preterminal span': (107, 114), 'span': (109, 113), 'left siblings': ['VF', 'LK'], 'label': 'MF', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU na ja das stimmt)
		(SU ja also und dann konnen wir einfach den dann brauchen wir uns jetzt vielleicht gar nicht festlegen und sagen einfach wir fliegen zuruck)
		(SU gut dann dann denke ich dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)
		(SU ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX dann konnen wir abends noch ein bischen in der bar sitzen oder auf alle falle treffen wir uns dann da)
		(SU und ich habe hier eine liste vorbereitet mit hotels)
		(SU das ist das marriotthotel hannover das parkhotel hannover das hotel cristal hannover)
		(SU
			(SU die sind alle mehr oder minder in der nahe vom hauptbahnhof)
			(SU
				(SIMPX
					(VF ich)
					(LK kucke)
					(NX mir)
					(ADVX mal)
					(NX die preise)
					[01;31m(VC[00m
						(PTKVZ an)[01;31m)[00m)))
		(SU
			(DM also)
			(SIMPX
				(VF
					(NX
						(ART das)
						[01;31m(NX[00m
							(NX hotel)
							(NX cristal hannover)[01;31m)[00m))
				[01;31m(FKOORD[00m
					[01;31m(LKM[00m
						(LK ist)
						(MF vielleicht ein bischen teuer)[01;31m)[00m
					(LKM
						(LK hat)
						(MF dafur)
						(ADVX aber)
						[01;31m(NX[00m
							(NX sauna)
							(NX solarium)
							[01;31m(NX[00m
								(NN bar)[01;31m)[00m
							(KON und)
							(NX bistro)[01;31m)[00m)[01;31m)[00m))))
Step:Single Word Phrase
{'subtrees': ['PTKVZ'], 'family': ['VF', 'LK', 'NX', 'ADVX', 'NX', 'VC'], 'over_word': True, 'over words': True, 'auto preterminals': ('PPER', 'VVFIN', 'PRF', 'ADV', 'ART', 'NN', 'PTKVZ'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (107, 114), 'span': (113, 114), 'left siblings': ['VF', 'LK', 'NX', 'ADVX', 'NX'], 'label': 'VC', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(SU na ja das stimmt)
		(SU ja also und dann konnen wir einfach den dann brauchen wir uns jetzt vielleicht gar nicht festlegen und sagen einfach wir fliegen zuruck)
		(SU gut dann dann denke ich dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)
		(SU ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX dann konnen wir abends noch ein bischen in der bar sitzen oder auf alle falle treffen wir uns dann da)
		(SU und ich habe hier eine liste vorbereitet mit hotels)
		(SU das ist das marriotthotel hannover das parkhotel hannover das hotel cristal hannover)
		(SU die sind alle mehr oder minder in der nahe vom hauptbahnhof ich kucke mir mal die preise an)
		(SU
			(DM also)
			(SIMPX
				(VF
					(NX
						(ART das)
						[01;31m(NX[00m
							(NX hotel)
							(NX cristal hannover)[01;31m)[00m))
				[01;31m(FKOORD[00m
					[01;31m(LKM[00m
						(LK ist)
						(MF vielleicht ein bischen teuer)[01;31m)[00m
					(LKM
						(LK hat)
						(MF dafur)
						(ADVX aber)
						[01;31m(NX[00m
							(NX sauna)
							(NX solarium)
							[01;31m(NX[00m
								(NN bar)[01;31m)[00m
							(KON und)
							(NX bistro)[01;31m)[00m)[01;31m)[00m))))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['ART', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'NE', 'NE'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (115, 119), 'span': (116, 119), 'left siblings': ['ART'], 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'remove'}
(TOP
	(TURN
		(SU na ja das stimmt)
		(SU ja also und dann konnen wir einfach den dann brauchen wir uns jetzt vielleicht gar nicht festlegen und sagen einfach wir fliegen zuruck)
		(SU gut dann dann denke ich dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)
		(SU ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX dann konnen wir abends noch ein bischen in der bar sitzen oder auf alle falle treffen wir uns dann da)
		(SU und ich habe hier eine liste vorbereitet mit hotels)
		(SU das ist das marriotthotel hannover das parkhotel hannover das hotel cristal hannover)
		(SU die sind alle mehr oder minder in der nahe vom hauptbahnhof ich kucke mir mal die preise an)
		(SU
			(DM also)
			(SIMPX
				(VF das hotel cristal hannover)
				[01;31m(FKOORD[00m
					[01;31m(LKM[00m
						(LK ist)
						(MF vielleicht ein bischen teuer)[01;31m)[00m
					(LKM
						(LK hat)
						(MF dafur)
						(ADVX aber)
						[01;31m(NX[00m
							(NX sauna)
							(NX solarium)
							[01;31m(NX[00m
								(NN bar)[01;31m)[00m
							(KON und)
							(NX bistro)[01;31m)[00m)[01;31m)[00m))))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['LKM', 'LKM'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'ADV', 'ART', 'PIS', 'ADJD', 'VAFIN', 'PROP', 'ADV', 'NN', 'NN', 'NN', 'KON', 'NN'), 'right siblings': ['LKM'], 'parent': 'FKOORD', 'auto preterminal span': (119, 132), 'span': (119, 124), 'left siblings': [], 'label': 'LKM', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU na ja das stimmt)
		(SU ja also und dann konnen wir einfach den dann brauchen wir uns jetzt vielleicht gar nicht festlegen und sagen einfach wir fliegen zuruck)
		(SU gut dann dann denke ich dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)
		(SU ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX dann konnen wir abends noch ein bischen in der bar sitzen oder auf alle falle treffen wir uns dann da)
		(SU und ich habe hier eine liste vorbereitet mit hotels)
		(SU das ist das marriotthotel hannover das parkhotel hannover das hotel cristal hannover)
		(SU die sind alle mehr oder minder in der nahe vom hauptbahnhof ich kucke mir mal die preise an)
		(SU
			(DM also)
			(SIMPX
				(VF das hotel cristal hannover)
				[01;31m(FKOORD[00m
					(LK ist)
					(MF vielleicht ein bischen teuer)
					(LKM
						(LK hat)
						(MF dafur)
						(ADVX aber)
						[01;31m(NX[00m
							(NX sauna)
							(NX solarium)
							[01;31m(NX[00m
								(NN bar)[01;31m)[00m
							(KON und)
							(NX bistro)[01;31m)[00m)[01;31m)[00m))))
Step:UNSET remove
{'subtrees': ['LK', 'MF', 'LKM'], 'family': ['VF', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'NE', 'NE', 'VAFIN', 'ADV', 'ART', 'PIS', 'ADJD', 'VAFIN', 'PROP', 'ADV', 'NN', 'NN', 'NN', 'KON', 'NN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (115, 132), 'span': (119, 132), 'left siblings': ['VF'], 'label': 'FKOORD', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU na ja das stimmt)
		(SU ja also und dann konnen wir einfach den dann brauchen wir uns jetzt vielleicht gar nicht festlegen und sagen einfach wir fliegen zuruck)
		(SU gut dann dann denke ich dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)
		(SU ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX dann konnen wir abends noch ein bischen in der bar sitzen oder auf alle falle treffen wir uns dann da)
		(SU und ich habe hier eine liste vorbereitet mit hotels)
		(SU das ist das marriotthotel hannover das parkhotel hannover das hotel cristal hannover)
		(SU die sind alle mehr oder minder in der nahe vom hauptbahnhof ich kucke mir mal die preise an)
		(SU
			(DM also)
			(SIMPX
				(VF das hotel cristal hannover)
				(LK ist)
				(MF vielleicht ein bischen teuer)
				(LKM
					(LK hat)
					(MF dafur)
					(ADVX aber)
					[01;31m(NX[00m
						(NX sauna)
						(NX solarium)
						[01;31m(NX[00m
							(NN bar)[01;31m)[00m
						(KON und)
						(NX bistro)[01;31m)[00m)))))
Step:UNSET remove
{'subtrees': ['NX', 'NX', 'NX', 'KON', 'NX'], 'family': ['LK', 'MF', 'ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'PROP', 'ADV', 'NN', 'NN', 'NN', 'KON', 'NN'), 'right siblings': [], 'parent': 'LKM', 'auto preterminal span': (124, 132), 'span': (127, 132), 'left siblings': ['LK', 'MF', 'ADVX'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU na ja das stimmt)
		(SU ja also und dann konnen wir einfach den dann brauchen wir uns jetzt vielleicht gar nicht festlegen und sagen einfach wir fliegen zuruck)
		(SU gut dann dann denke ich dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)
		(SU ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX dann konnen wir abends noch ein bischen in der bar sitzen oder auf alle falle treffen wir uns dann da)
		(SU und ich habe hier eine liste vorbereitet mit hotels)
		(SU das ist das marriotthotel hannover das parkhotel hannover das hotel cristal hannover)
		(SU die sind alle mehr oder minder in der nahe vom hauptbahnhof ich kucke mir mal die preise an)
		(SU
			(DM also)
			(SIMPX
				(VF das hotel cristal hannover)
				(LK ist)
				(MF vielleicht ein bischen teuer)
				(LKM
					(LK hat)
					(MF dafur)
					(ADVX aber)
					(NX sauna)
					(NX solarium)
					[01;31m(NX[00m
						(NN bar)[01;31m)[00m
					(KON und)
					(NX bistro))))))
Step:Single Word Phrase
{'subtrees': ['NN'], 'family': ['LK', 'MF', 'ADVX', 'NX', 'NX', 'NX', 'KON', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('VAFIN', 'PROP', 'ADV', 'NN', 'NN', 'NN', 'KON', 'NN'), 'right siblings': ['KON', 'NX'], 'parent': 'LKM', 'auto preterminal span': (124, 132), 'span': (129, 130), 'left siblings': ['LK', 'MF', 'ADVX', 'NX', 'NX'], 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP na ja das stimmt ja also und dann konnen wir einfach den dann brauchen wir uns jetzt vielleicht gar nicht festlegen und sagen einfach wir fliegen zuruck gut dann dann denke ich dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen ich denke wir nehmen zusammen einfach ein hotel dann konnen wir abends noch ein bischen in der bar sitzen oder auf alle falle treffen wir uns dann da und ich habe hier eine liste vorbereitet mit hotels das ist das marriotthotel hannover das parkhotel hannover das hotel cristal hannover die sind alle mehr oder minder in der nahe vom hauptbahnhof ich kucke mir mal die preise an also das hotel cristal hannover ist vielleicht ein bischen teuer hat dafur aber sauna solarium bar und bistro)

Sentence 459:
8 Initial errors
0 on fringe, 4 iterations
3 Error:UNSET move
2 Error:Different label
2 Error:UNSET move
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU stimmt)
		(SU wir haben wahrscheinlich keine zeit in die sauna zu gehen)
		(SU
			[01;31m(SIMPX[00m
				[01;36m(DM[00m [01;31m(VF[00m
					(ADVX
						(ADV also))[01;31m)[00m[01;36m)[00m
				[01;36m(SIMPX[00m
					(LK konnten)
					(MF wir auch das parkhotel hannover)
					(VC nehmen)[01;36m)[00m[01;31m)[00m)
		(SU
			(SIMPX
				(VF das)
				(LK ist)
				[01;36m(MF[00m
					[01;36m(PX[00m
						(APPR mit)
						[01;31m(MF[00m
							(NX
								(NX das einzelzimmer)
								(PX mit einhundert neunzehn mark))[01;31m)[00m[01;36m)[00m[01;36m)[00m)
			[01;31m(SIMPX[00m
				(LK ware)
				(MF das doch das doch annehmbar)[01;31m)[00m)))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['APPR', 'NX'], 'mover info': [('APPR', (21, 22))], 'old_family': ['VF', 'LK', 'APPR', 'MF'], 'start left siblings': ['VF', 'LK'], 'auto preterminals': ('PDS', 'VAFIN', 'APPR', 'ART', 'NN', 'APPR', 'CARD', 'CARD', 'NN'), 'start right siblings': ['MF'], 'end left siblings': [], 'auto preterminal span': (19, 28), 'adding node already present': False, 'movers': ['APPR'], 'old_parent': 'SIMPX', 'POS confusion': ('APPR', 'APPR'), 'added and moved': True, 'end right siblings': ['NX'], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'PX'}
(TOP
	(TURN
		(SU stimmt)
		(SU wir haben wahrscheinlich keine zeit in die sauna zu gehen)
		(SU
			[01;31m(SIMPX[00m
				[01;36m(DM[00m [01;31m(VF[00m
					(ADVX
						(ADV also))[01;31m)[00m[01;36m)[00m
				[01;36m(SIMPX[00m
					(LK konnten)
					(MF wir auch das parkhotel hannover)
					(VC nehmen)[01;36m)[00m[01;31m)[00m)
		(SU
			(SIMPX das ist mit das einzelzimmer mit einhundert neunzehn mark)
			[01;31m(SIMPX[00m
				(LK ware)
				(MF das doch das doch annehmbar)[01;31m)[00m)))
Step:Different label
{'family': ['DM', 'LK', 'MF', 'VC'], 'auto preterminal span': (11, 12), 'span': (11, 12), 'subtrees': ['ADVX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('ADV',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('VF', 'DM')}
(TOP
	(TURN
		(SU stimmt)
		(SU wir haben wahrscheinlich keine zeit in die sauna zu gehen)
		(SU
			[01;31m(SIMPX[00m
				(DM also)
				[01;36m(SIMPX[00m
					(LK konnten)
					(MF wir auch das parkhotel hannover)
					(VC nehmen)[01;36m)[00m[01;31m)[00m)
		(SU
			(SIMPX das ist mit das einzelzimmer mit einhundert neunzehn mark)
			[01;31m(SIMPX[00m
				(LK ware)
				(MF das doch das doch annehmbar)[01;31m)[00m)))
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['DM', 'SIMPX'], 'mover info': [('DM', (11, 12))], 'old_family': ['DM', 'LK', 'MF', 'VC'], 'start left siblings': [], 'auto preterminals': ('ADV', 'VMFIN', 'PPER', 'ADV', 'ART', 'NE', 'NE', 'VVINF'), 'start right siblings': ['LK', 'MF', 'VC'], 'end left siblings': [], 'auto preterminal span': (11, 19), 'movers': ['DM'], 'old_parent': 'SIMPX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU stimmt)
		(SU wir haben wahrscheinlich keine zeit in die sauna zu gehen)
		(SU also konnten wir auch das parkhotel hannover nehmen)
		(SU
			(SIMPX das ist mit das einzelzimmer mit einhundert neunzehn mark)
			[01;31m(SIMPX[00m
				(LK ware)
				(MF das doch das doch annehmbar)[01;31m)[00m)))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VAFIN', 'APPR', 'ART', 'NN', 'APPR', 'CARD', 'CARD', 'NN', 'VAFIN', 'PDS', 'ADV', 'PDS', 'ADV', 'ADJD'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (19, 34), 'span': (28, 34), 'left siblings': ['SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP stimmt wir haben wahrscheinlich keine zeit in die sauna zu gehen also konnten wir auch das parkhotel hannover nehmen das ist mit das einzelzimmer mit einhundert neunzehn mark ware das doch das doch annehmbar)

Sentence 460:
5 Initial errors
0 on fringe, 5 iterations
1 Error:Single Word Phrase
1 Error:UNSET remove
1 Error:Single Word Phrase
1 Error:UNSET remove
1 Error:UNSET add
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM okay)
			(SIMPX
				(VF parkhotel)
				[01;31m(SIMPX[00m
					(LK sehe)
					(MF ich)
					[01;31m(VC[00m
						(PTKVZ ein)[01;31m)[00m[01;31m)[00m
				(LK ist)
				(MF zu riskant))
			(SIMPX nehmen wir das marriotthotel))
		(SU
			(DM also)
			[01;31m(SIMPX[00m
				(VF die)
				(LK konnen)
				[01;33m(MF[00m (MF sich)[01;31m)[00m
			[01;36m(NX[00m
				(ART die) [01;33mMF)[00m[01;36m)[00m
			(SIMPX die konnen sich da auch in hannover keinen durchhanger erlauben))
		(SU also nehmen wir marriott)))
Step:Single Word Phrase
{'subtrees': ['ART'], 'family': ['DM', 'SIMPX', 'NX', 'SIMPX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ART',), 'right siblings': [(SIMPX (VF (NX (PDS die))) (LK (VXFIN (VMFIN konnen))) (MF (NX (PRF sich)) (ADVX (ADV da)) (ADVX (ADV auch)) (PX (APPR in) (NX (NE hannover))) (NX (PIAT keinen) (NN durchhanger))) (VC (VXINF (VVINF erlauben))))], 'left siblings': [(DM (ADVX (ADV also))), (SIMPX (VF (NX (PDS die))) (LK (VXFIN (VMFIN konnen))) (MF (NX (PRF sich))))], 'auto preterminal span': (16, 17), 'span': (16, 17), 'parent': 'SU', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM okay)
			(SIMPX
				(VF parkhotel)
				[01;31m(SIMPX[00m
					(LK sehe)
					(MF ich)
					[01;31m(VC[00m
						(PTKVZ ein)[01;31m)[00m[01;31m)[00m
				(LK ist)
				(MF zu riskant))
			(SIMPX nehmen wir das marriotthotel))
		(SU
			(DM also)
			[01;31m(SIMPX[00m
				(VF die)
				(LK konnen)
				[01;33m(MF[00m (MF sich)[01;31m)[00m
			(NX die) [01;33mMF)[00m
			(SIMPX die konnen sich da auch in hannover keinen durchhanger erlauben))
		(SU also nehmen wir marriott)))
Step:UNSET remove
{'subtrees': ['LK', 'MF', 'VC'], 'family': ['VF', 'SIMPX', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('NE', 'VVFIN', 'PPER', 'PTKVZ', 'VAFIN', 'PTKA', 'ADJD'), 'right siblings': ['LK', 'MF'], 'parent': 'SIMPX', 'auto preterminal span': (1, 8), 'span': (2, 5), 'left siblings': ['VF'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM okay)
			(SIMPX
				(VF parkhotel)
				(LK sehe)
				(MF ich)
				[01;31m(VC[00m
					(PTKVZ ein)[01;31m)[00m
				(LK ist)
				(MF zu riskant))
			(SIMPX nehmen wir das marriotthotel))
		(SU
			(DM also)
			[01;31m(SIMPX[00m
				(VF die)
				(LK konnen)
				[01;33m(MF[00m (MF sich)[01;31m)[00m
			(NX die) [01;33mMF)[00m
			(SIMPX die konnen sich da auch in hannover keinen durchhanger erlauben))
		(SU also nehmen wir marriott)))
Step:Single Word Phrase
{'subtrees': ['PTKVZ'], 'family': ['VF', 'LK', 'MF', 'VC', 'LK', 'MF'], 'over_word': True, 'over words': True, 'auto preterminals': ('NE', 'VVFIN', 'PPER', 'PTKVZ', 'VAFIN', 'PTKA', 'ADJD'), 'right siblings': ['LK', 'MF'], 'parent': 'SIMPX', 'auto preterminal span': (1, 8), 'span': (4, 5), 'left siblings': ['VF', 'LK', 'MF'], 'label': 'VC', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(SU okay parkhotel sehe ich ein ist zu riskant nehmen wir das marriotthotel)
		(SU
			(DM also)
			[01;31m(SIMPX[00m
				(VF die)
				(LK konnen)
				[01;33m(MF[00m (MF sich)[01;31m)[00m
			(NX die) [01;33mMF)[00m
			(SIMPX die konnen sich da auch in hannover keinen durchhanger erlauben))
		(SU also nehmen wir marriott)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['DM', 'SIMPX', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PDS', 'VMFIN', 'PRF', 'ART', 'PDS', 'VMFIN', 'PRF', 'ADV', 'ADV', 'APPR', 'NE', 'PIAT', 'NN', 'VVINF'), 'right siblings': ['NX', 'SIMPX'], 'parent': 'SU', 'auto preterminal span': (12, 27), 'span': (13, 16), 'left siblings': ['DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU okay parkhotel sehe ich ein ist zu riskant nehmen wir das marriotthotel)
		(SU
			(DM also)
			(VF die)
			(LK konnen)
			[01;36m(MF[00m
				(MF sich)
				(NX die)[01;36m)[00m
			(SIMPX die konnen sich da auch in hannover keinen durchhanger erlauben))
		(SU also nehmen wir marriott)))
Step:UNSET add
{'subtrees': ['MF', 'NX'], 'family': ['DM', 'VF', 'LK', 'MF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PRF', 'ART'), 'right siblings': [(SIMPX (VF (NX (PDS die))) (LK (VXFIN (VMFIN konnen))) (MF (NX (PRF sich)) (ADVX (ADV da)) (ADVX (ADV auch)) (PX (APPR in) (NX (NE hannover))) (NX (PIAT keinen) (NN durchhanger))) (VC (VXINF (VVINF erlauben))))], 'left siblings': [(DM (ADVX (ADV also))), (VF (NX (PDS die))), (LK (VXFIN (VMFIN konnen)))], 'auto preterminal span': (15, 17), 'span': (15, 17), 'parent': 'SU', 'label': 'MF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP okay parkhotel sehe ich ein ist zu riskant nehmen wir das marriotthotel also die konnen sich die die konnen sich da auch in hannover keinen durchhanger erlauben also nehmen wir marriott)

Sentence 461:
0 Initial errors
0 on fringe, 0 iterations

Sentence 462:
8 Initial errors
0 on fringe, 5 iterations
2 Error:Different label
2 Error:Different label
2 Error:Clause Attachment
1 Error:Unary
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM na ja)
			(DM gut)
			(SIMPX ich gehe auch nicht so oft ins fitnesstudio)
			[01;36m(SIMPX[00m
				[01;31m(SIMPX[00m
					[01;36m(KOORD[00m [01;31m(VF[00m
						[01;31m(ADVX[00m
							(ADV aber)[01;31m)[00m[01;31m)[00m[01;36m)[00m
					(LK meine)[01;31m)[00m
				[01;36m(NF[00m
					(SIMPX
						[01;36m(MF[00m [01;31m(VF[00m
							(NX
								(PPER ich))[01;31m)[00m[01;36m)[00m
						(LK wollte)
						(MF es jetzt nur mal)
						(VC sagen)
						(NF falls du da lust dazu hast))[01;36m)[00m[01;36m)[00m)
		(SU ja dann konnen wir uns noch uberlegen machen wir abends was)))
Step:Different label
{'family': ['KOORD', 'LK'], 'auto preterminal span': (11, 12), 'span': (11, 12), 'subtrees': ['ADVX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('ADV',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('VF', 'KOORD')}
(TOP
	(TURN
		(SU
			(DM na ja)
			(DM gut)
			(SIMPX ich gehe auch nicht so oft ins fitnesstudio)
			[01;36m(SIMPX[00m
				[01;31m(SIMPX[00m
					(KOORD
						[01;31m(ADVX[00m
							(ADV aber)[01;31m)[00m)
					(LK meine)[01;31m)[00m
				[01;36m(NF[00m
					(SIMPX
						[01;36m(MF[00m [01;31m(VF[00m
							(NX
								(PPER ich))[01;31m)[00m[01;36m)[00m
						(LK wollte)
						(MF es jetzt nur mal)
						(VC sagen)
						(NF falls du da lust dazu hast))[01;36m)[00m[01;36m)[00m)
		(SU ja dann konnen wir uns noch uberlegen machen wir abends was)))
Step:Different label
{'family': ['MF', 'LK', 'MF', 'VC', 'NF'], 'auto preterminal span': (13, 14), 'span': (13, 14), 'subtrees': ['NX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('PPER',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('VF', 'MF')}
(TOP
	(TURN
		(SU
			(DM na ja)
			(DM gut)
			(SIMPX ich gehe auch nicht so oft ins fitnesstudio)
			[01;36m(SIMPX[00m
				[01;31m(SIMPX[00m
					(KOORD
						[01;31m(ADVX[00m
							(ADV aber)[01;31m)[00m)
					(LK meine)[01;31m)[00m
				[01;36m(NF[00m
					(SIMPX
						(MF ich)
						(LK wollte)
						(MF es jetzt nur mal)
						(VC sagen)
						(NF falls du da lust dazu hast))[01;36m)[00m[01;36m)[00m)
		(SU ja dann konnen wir uns noch uberlegen machen wir abends was)))
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['KOORD', 'LK', 'SIMPX'], 'mover info': [('SIMPX', (13, 26))], 'old_family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'start left siblings': ['DM', 'DM', 'SIMPX', 'SIMPX'], 'auto preterminals': ('ITJ', 'PTKANT', 'ITJ', 'PPER', 'VVFIN', 'ADV', 'PTKNEG', 'ADV', 'ADV', 'APPRART', 'NN', 'ADV', 'VVFIN', 'PPER', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'VVINF', 'KOUS', 'PPER', 'ADV', 'NN', 'PROP', 'VAFIN'), 'start right siblings': [], 'end left siblings': ['KOORD', 'LK'], 'auto preterminal span': (0, 26), 'movers': ['SIMPX'], 'old_parent': 'SU', 'end right siblings': [], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU
			(DM na ja)
			(DM gut)
			(SIMPX ich gehe auch nicht so oft ins fitnesstudio)
			(SIMPX
				(KOORD
					[01;31m(ADVX[00m
						(ADV aber)[01;31m)[00m)
				(LK meine)
				[01;36m(NF[00m
					(SIMPX
						(MF ich)
						(LK wollte)
						(MF es jetzt nur mal)
						(VC sagen)
						(NF falls du da lust dazu hast))[01;36m)[00m))
		(SU ja dann konnen wir uns noch uberlegen machen wir abends was)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['KOORD', 'LK', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'VVINF', 'KOUS', 'PPER', 'ADV', 'NN', 'PROP', 'VAFIN'), 'right siblings': [], 'left siblings': [(KOORD (ADVX (ADV aber))), (LK (VXFIN (VVFIN meine)))], 'auto preterminal span': (13, 26), 'span': (13, 26), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM na ja)
			(DM gut)
			(SIMPX ich gehe auch nicht so oft ins fitnesstudio)
			(SIMPX
				(KOORD
					[01;31m(ADVX[00m
						(ADV aber)[01;31m)[00m)
				(LK meine)
				(NF ich wollte es jetzt nur mal sagen falls du da lust dazu hast)))
		(SU ja dann konnen wir uns noch uberlegen machen wir abends was)))
Step:Single Word Phrase
{'subtrees': ['ADV'], 'family': ['ADVX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADV',), 'right siblings': [], 'parent': 'KOORD', 'auto preterminal span': (11, 12), 'span': (11, 12), 'left siblings': [], 'label': 'ADVX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP na ja gut ich gehe auch nicht so oft ins fitnesstudio aber meine ich wollte es jetzt nur mal sagen falls du da lust dazu hast ja dann konnen wir uns noch uberlegen machen wir abends was)

Sentence 463:
4 Initial errors
0 on fringe, 3 iterations
2 Error:UNSET move
1 Error:Single Word Phrase
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			[01;31m(DM[00m
				(ADVX immer)
				(ADVX doch)[01;31m)[00m)
		(SU kino theater restaurant)
		(SU
			(DM also)
			[01;36m(SIMPX[00m
				[01;31m(SIMPX[00m
					(VF theater)
					(LK denke)
					(MF ich)[01;31m)[00m
				[01;36m(NX[00m
					(KOUS das)[01;36m)[00m[01;36m)[00m
			(ADVX da)
			(SIMPX da kriegen wir keine karten mehr))
		(SU und auserdem mussen wir uns kummern)))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'KOUS'], 'mover info': [('KOUS', (9, 10))], 'old_family': ['DM', 'SIMPX', 'KOUS', 'ADVX', 'SIMPX'], 'start left siblings': ['DM', 'SIMPX'], 'auto preterminals': ('ADV', 'NN', 'VVFIN', 'PPER', 'KOUS', 'ADV', 'ADV', 'VVFIN', 'PPER', 'PIAT', 'NN', 'ADV'), 'start right siblings': ['ADVX', 'SIMPX'], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (5, 17), 'movers': ['KOUS'], 'old_parent': 'SU', 'POS confusion': ('KOUS', 'KOUS'), 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			[01;31m(DM[00m
				(ADVX immer)
				(ADVX doch)[01;31m)[00m)
		(SU kino theater restaurant)
		(SU
			(DM also)
			(SIMPX
				(VF theater)
				(LK denke)
				(MF ich)
				[01;36m(NX[00m
					(KOUS das)[01;36m)[00m)
			(ADVX da)
			(SIMPX da kriegen wir keine karten mehr))
		(SU und auserdem mussen wir uns kummern)))
Step:Single Word Phrase
{'subtrees': ['KOUS'], 'family': ['VF', 'LK', 'MF', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('KOUS',), 'right siblings': [], 'left siblings': [(VF (NX (NN theater))), (LK (VXFIN (VVFIN denke))), (MF (NX (PPER ich)))], 'auto preterminal span': (9, 10), 'span': (9, 10), 'parent': 'SIMPX', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SU
			[01;31m(DM[00m
				(ADVX immer)
				(ADVX doch)[01;31m)[00m)
		(SU kino theater restaurant)
		(SU also theater denke ich das da da kriegen wir keine karten mehr)
		(SU und auserdem mussen wir uns kummern)))
Step:Unary
{'subtrees': ['ADVX', 'ADVX'], 'family': ['DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (0, 2), 'span': (0, 2), 'left siblings': [], 'label': 'DM', 'classified_type': 'Unary', 'type': 'remove'}
(TOP immer doch kino theater restaurant also theater denke ich das da da kriegen wir keine karten mehr und auserdem mussen wir uns kummern)

Sentence 464:
9 Initial errors
0 on fringe, 5 iterations
2 Error:Single Word Phrase
2 Error:PP Attachment
2 Error:Modifier Attachment
2 Error:UNSET move
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU ja okay)
		(SU gut klar)
		(SU
			(DM ja)
			(DM nee)
			(ADVX dann)
			(NX das)
			(NX das)
			(SIMPX
				(VF das)
				(LK ware)
				[01;31m(MF[00m
					[01;36m(MF[00m
						(NX es)
						[01;36m(ADJX[00m [01;31m(ADVX[00m
							(ADV vorerst)[01;31m)[00m[01;36m)[00m[01;36m)[00m
					[01;36m(NF[00m
						(PX
							(APPR von)
							(NX mir)
							(APZR aus))[01;36m)[00m[01;31m)[00m))
		(SU
			[01;31m(DM[00m
				(ADVX dann)
				[01;36m(DM[00m
					(PTKANT [01;33m(DM[00m danke)[01;36m)[00m[01;31m)[00m
			[01;31m(DM[00m
				(NX
					(NE peter))[01;31m)[00m [01;33mDM)[00m
			(SIMPX und wir sehen uns))))
Step:Single Word Phrase
{'family': ['NX', 'ADJX', 'PX'], 'auto preterminal span': (12, 13), 'span': (12, 13), 'subtrees': ['ADV'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'ADJX')}
(TOP
	(TURN
		(SU ja okay)
		(SU gut klar)
		(SU
			(DM ja)
			(DM nee)
			(ADVX dann)
			(NX das)
			(NX das)
			(SIMPX
				(VF das)
				(LK ware)
				[01;31m(MF[00m
					[01;36m(MF[00m
						(NX es)
						(ADJX vorerst)[01;36m)[00m
					[01;36m(NF[00m
						(PX
							(APPR von)
							(NX mir)
							(APZR aus))[01;36m)[00m[01;31m)[00m))
		(SU
			[01;31m(DM[00m
				(ADVX dann)
				[01;36m(DM[00m
					(PTKANT [01;33m(DM[00m danke)[01;36m)[00m[01;31m)[00m
			[01;31m(DM[00m
				(NX
					(NE peter))[01;31m)[00m [01;33mDM)[00m
			(SIMPX und wir sehen uns))))
Step:PP Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'PX'], 'mover info': [('PX', (13, 16))], 'old_family': ['NX', 'ADJX', 'PX'], 'start left siblings': ['NX', 'ADJX'], 'auto preterminals': ('PDS', 'VAFIN', 'PPER', 'ADV', 'APPR', 'PPER', 'APZR'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (9, 16), 'movers': ['PX'], 'old_parent': 'MF', 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU ja okay)
		(SU gut klar)
		(SU
			(DM ja)
			(DM nee)
			(ADVX dann)
			(NX das)
			(NX das)
			(SIMPX
				(VF das)
				(LK ware)
				(MF es vorerst)
				[01;36m(NF[00m
					(PX
						(APPR von)
						(NX mir)
						(APZR aus))[01;36m)[00m))
		(SU
			[01;31m(DM[00m
				(ADVX dann)
				[01;36m(DM[00m
					(PTKANT [01;33m(DM[00m danke)[01;36m)[00m[01;31m)[00m
			[01;31m(DM[00m
				(NX
					(NE peter))[01;31m)[00m [01;33mDM)[00m
			(SIMPX und wir sehen uns))))
Step:Modifier Attachment
{'new_parent': 'SU', 'new_family': ['ADVX', 'DM', 'DM', 'SIMPX'], 'mover info': [('ADVX', (16, 17))], 'old_family': ['ADVX', 'PTKANT'], 'start left siblings': [], 'auto preterminals': ('ADV', 'PTKANT', 'NE', 'KON', 'PPER', 'VVFIN', 'PRF'), 'start right siblings': ['PTKANT'], 'end left siblings': [], 'auto preterminal span': (16, 23), 'movers': ['ADVX'], 'old_parent': 'DM', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['DM', 'DM', 'SIMPX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU ja okay)
		(SU gut klar)
		(SU
			(DM ja)
			(DM nee)
			(ADVX dann)
			(NX das)
			(NX das)
			(SIMPX
				(VF das)
				(LK ware)
				(MF es vorerst)
				[01;36m(NF[00m
					(PX
						(APPR von)
						(NX mir)
						(APZR aus))[01;36m)[00m))
		(SU
			(ADVX dann)
			[01;36m(DM[00m
				(DM danke)
				[01;31m(DM[00m
					(NX
						(NE peter))[01;31m)[00m[01;36m)[00m
			(SIMPX und wir sehen uns))))
Step:UNSET move
{'new_parent': 'DM', 'new_family': ['DM', 'NX'], 'mover info': [('DM', (17, 18))], 'old_family': ['ADVX', 'DM', 'DM', 'SIMPX'], 'start left siblings': ['ADVX'], 'auto preterminals': ('ADV', 'PTKANT', 'NE', 'KON', 'PPER', 'VVFIN', 'PRF'), 'start right siblings': ['DM', 'SIMPX'], 'end left siblings': [], 'auto preterminal span': (16, 23), 'movers': ['DM'], 'old_parent': 'SU', 'POS confusion': ('PTKANT', 'PTKANT'), 'end right siblings': ['NX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU ja okay)
		(SU gut klar)
		(SU
			(DM ja)
			(DM nee)
			(ADVX dann)
			(NX das)
			(NX das)
			(SIMPX
				(VF das)
				(LK ware)
				(MF es vorerst)
				[01;36m(NF[00m
					(PX
						(APPR von)
						(NX mir)
						(APZR aus))[01;36m)[00m))
		(SU dann danke peter und wir sehen uns)))
Step:Unary
{'subtrees': ['PX'], 'family': ['VF', 'LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'PPER', 'APZR'), 'right siblings': [], 'left siblings': [(VF (NX (PDS das))), (LK (VXFIN (VAFIN ware))), (MF (NX (PPER es)) (ADJX (ADV vorerst)))], 'auto preterminal span': (13, 16), 'span': (13, 16), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP ja okay gut klar ja nee dann das das das ware es vorerst von mir aus dann danke peter und wir sehen uns)

Sentence 465:
13 Initial errors
0 on fringe, 8 iterations
4 Error:VP Attachment
2 Error:Single Word Phrase
2 Error:Single Word Phrase
1 Error:Unary
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM hallo)
			[01;31m(DM[00m
				(NX
					(NE reinhard))[01;31m)[00m)
		(SU
			[01;31m(SIMPX[00m
				[01;36m(DM[00m [01;31m(LK[00m
					[01;31m(VXFIN[00m
						(VVFIN danke)[01;31m)[00m[01;31m)[00m[01;36m)[00m
				[01;31m(NF[00m [01;33m(SIMPX[00m
					[01;31m(SIMPX[00m
						(C das)
						(MF du so kurzfristig hier)
						[01;31m(VC[00m
							[01;36m(VC[00m [01;36m(VXFIN[00m [01;31m(VXINF[00m
								(VVPP runtergeschaut)[01;31m)[00m [01;33mSIMPX)[00m[01;36m)[00m[01;36m)[00m
							[01;31m(VXFIN[00m
								(VAFIN hast)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
			(SIMPX wir mussen ja noch ein termin vereinbaren))))
Step:VP Attachment
{'new_parent': 'NF', 'new_family': ['SIMPX', 'VXFIN'], 'mover info': [('VXFIN', (9, 10))], 'old_family': ['VXINF', 'VXFIN'], 'start left siblings': ['VXINF'], 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'ADJD', 'ADV', 'VVPP', 'VAFIN'), 'start right siblings': [], 'end left siblings': ['SIMPX'], 'auto preterminal span': (3, 10), 'movers': ['VXFIN'], 'old_parent': 'VC', 'POS confusion': ('VAFIN', 'VAFIN'), 'end right siblings': [], 'classified_type': 'VP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU
			(DM hallo)
			[01;31m(DM[00m
				(NX
					(NE reinhard))[01;31m)[00m)
		(SU
			[01;31m(SIMPX[00m
				[01;36m(DM[00m [01;31m(LK[00m
					[01;31m(VXFIN[00m
						(VVFIN danke)[01;31m)[00m[01;31m)[00m[01;36m)[00m
				[01;31m(NF[00m
					(SIMPX
						(C das)
						(MF du so kurzfristig hier)
						[01;36m(VXFIN[00m
							(VC
								[01;31m(VXINF[00m
									(VVPP runtergeschaut)[01;31m)[00m)[01;36m)[00m)
					[01;31m(VXFIN[00m
						(VAFIN hast)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			(SIMPX wir mussen ja noch ein termin vereinbaren))))
Step:Single Word Phrase
{'family': ['DM'], 'auto preterminal span': (2, 3), 'span': (2, 3), 'subtrees': ['VVFIN'], 'parent': 'LK', 'over_word': True, 'auto preterminals': ('VVFIN',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VXFIN', 'DM')}
(TOP
	(TURN
		(SU
			(DM hallo)
			[01;31m(DM[00m
				(NX
					(NE reinhard))[01;31m)[00m)
		(SU
			[01;31m(SIMPX[00m
				[01;31m(LK[00m
					(DM
						(VVFIN danke))[01;31m)[00m
				[01;31m(NF[00m
					(SIMPX
						(C das)
						(MF du so kurzfristig hier)
						[01;36m(VXFIN[00m
							(VC
								[01;31m(VXINF[00m
									(VVPP runtergeschaut)[01;31m)[00m)[01;36m)[00m)
					[01;31m(VXFIN[00m
						(VAFIN hast)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			(SIMPX wir mussen ja noch ein termin vereinbaren))))
Step:Single Word Phrase
{'family': ['VXFIN'], 'auto preterminal span': (8, 9), 'span': (8, 9), 'subtrees': ['VVPP'], 'parent': 'VC', 'over_word': True, 'auto preterminals': ('VVPP',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VXINF', 'VXFIN')}
(TOP
	(TURN
		(SU
			(DM hallo)
			[01;31m(DM[00m
				(NX
					(NE reinhard))[01;31m)[00m)
		(SU
			[01;31m(SIMPX[00m
				[01;31m(LK[00m
					(DM
						(VVFIN danke))[01;31m)[00m
				[01;31m(NF[00m
					(SIMPX das du so kurzfristig hier runtergeschaut)
					[01;31m(VXFIN[00m
						(VAFIN hast)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			(SIMPX wir mussen ja noch ein termin vereinbaren))))
Step:Unary
{'subtrees': ['NX'], 'family': ['DM', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'NE'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (0, 2), 'span': (1, 2), 'left siblings': ['DM'], 'label': 'DM', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU hallo reinhard)
		(SU
			[01;31m(SIMPX[00m
				[01;31m(LK[00m
					(DM
						(VVFIN danke))[01;31m)[00m
				[01;31m(NF[00m
					(SIMPX das du so kurzfristig hier runtergeschaut)
					[01;31m(VXFIN[00m
						(VAFIN hast)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			(SIMPX wir mussen ja noch ein termin vereinbaren))))
Step:Unary
{'subtrees': ['DM'], 'family': ['LK', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'KOUS', 'PPER', 'ADV', 'ADJD', 'ADV', 'VVPP', 'VAFIN'), 'right siblings': ['NF'], 'parent': 'SIMPX', 'auto preterminal span': (2, 10), 'span': (2, 3), 'left siblings': [], 'label': 'LK', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU hallo reinhard)
		(SU
			[01;31m(SIMPX[00m
				(DM danke)
				[01;31m(NF[00m
					(SIMPX das du so kurzfristig hier runtergeschaut)
					[01;31m(VXFIN[00m
						(VAFIN hast)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			(SIMPX wir mussen ja noch ein termin vereinbaren))))
Step:UNSET remove
{'subtrees': ['DM', 'NF'], 'family': ['SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'KOUS', 'PPER', 'ADV', 'ADJD', 'ADV', 'VVPP', 'VAFIN', 'PPER', 'VMFIN', 'ADV', 'ADV', 'ART', 'NN', 'VVINF'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (2, 17), 'span': (2, 10), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU hallo reinhard)
		(SU
			(DM danke)
			[01;31m(NF[00m
				(SIMPX das du so kurzfristig hier runtergeschaut)
				[01;31m(VXFIN[00m
					(VAFIN hast)[01;31m)[00m[01;31m)[00m
			(SIMPX wir mussen ja noch ein termin vereinbaren))))
Step:UNSET remove
{'subtrees': ['SIMPX', 'VXFIN'], 'family': ['DM', 'NF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'KOUS', 'PPER', 'ADV', 'ADJD', 'ADV', 'VVPP', 'VAFIN', 'PPER', 'VMFIN', 'ADV', 'ADV', 'ART', 'NN', 'VVINF'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (2, 17), 'span': (3, 10), 'left siblings': ['DM'], 'label': 'NF', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU hallo reinhard)
		(SU
			(DM danke)
			(SIMPX das du so kurzfristig hier runtergeschaut)
			[01;31m(VXFIN[00m
				(VAFIN hast)[01;31m)[00m
			(SIMPX wir mussen ja noch ein termin vereinbaren))))
Step:Single Word Phrase
{'subtrees': ['VAFIN'], 'family': ['DM', 'SIMPX', 'VXFIN', 'SIMPX'], 'over_word': True, 'over words': True, 'auto preterminals': ('VVFIN', 'KOUS', 'PPER', 'ADV', 'ADJD', 'ADV', 'VVPP', 'VAFIN', 'PPER', 'VMFIN', 'ADV', 'ADV', 'ART', 'NN', 'VVINF'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (2, 17), 'span': (9, 10), 'left siblings': ['DM', 'SIMPX'], 'label': 'VXFIN', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP hallo reinhard danke das du so kurzfristig hier runtergeschaut hast wir mussen ja noch ein termin vereinbaren)

Sentence 466:
10 Initial errors
0 on fringe, 5 iterations
5 Error:NP Attachment
2 Error:NP Attachment
1 Error:NP Internal Structure
1 Error:UNSET remove
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;36m(SIMPX[00m
			(SU
				[01;31m(SIMPX[00m
					(VF hannover)
					(LK ist)
					[01;31m(MF[00m [01;33m(NX (MF[00m
						(NX
							(ART das)
							(NN ziel))[01;31m)[00m[01;31m)[00m
				(NX anderthalb tage)) [01;33mMF) NX)[00m[01;36m)[00m
		(SU
			[01;31m(SIMPX[00m
				(VF in den nachsten drei monaten)
				(LK gibt)
				[01;31m(MF[00m
					(NX es)
					(ADVX ja)
					(ADVX ofter)
					[01;33m(NX[00m (NX diese ganzen feiertage)[01;31m)[00m[01;31m)[00m
			[01;31m(NX[00m
				[01;36m(NX[00m
					(NX ostern)
					(NX pfingsten)[01;36m)[00m
				(KON und)
				(ADVX so weiter)[01;31m)[00m) [01;33mNX)[00m
		(SU mal kucken wie wir da in die gange kommen)
		(SU wie schaut es denn bei dir aus)))
Step:NP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'NX'], 'mover info': [('NX', (4, 6))], 'old_family': ['SIMPX', 'NX'], 'start left siblings': ['SIMPX'], 'auto preterminals': ('NE', 'VAFIN', 'ART', 'NN', 'CARD', 'NN'), 'start right siblings': [], 'end left siblings': ['NX'], 'auto preterminal span': (0, 6), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'SU', 'added and moved': True, 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(SU hannover ist das ziel anderthalb tage)
		(SU
			[01;31m(SIMPX[00m
				(VF in den nachsten drei monaten)
				(LK gibt)
				[01;31m(MF[00m
					(NX es)
					(ADVX ja)
					(ADVX ofter)
					[01;33m(NX[00m (NX diese ganzen feiertage)[01;31m)[00m[01;31m)[00m
			[01;31m(NX[00m
				[01;36m(NX[00m
					(NX ostern)
					(NX pfingsten)[01;36m)[00m
				(KON und)
				(ADVX so weiter)[01;31m)[00m) [01;33mNX)[00m
		(SU mal kucken wie wir da in die gange kommen)
		(SU wie schaut es denn bei dir aus)))
Step:NP Attachment
{'new_parent': 'NX', 'new_family': ['NX', 'NX', 'NX', 'KON', 'ADVX'], 'mover info': [('NX', (15, 18))], 'old_family': ['NX', 'ADVX', 'ADVX', 'NX'], 'start left siblings': ['NX', 'ADVX', 'ADVX'], 'auto preterminals': ('APPR', 'ART', 'ADJA', 'CARD', 'NN', 'VVFIN', 'PPER', 'ADV', 'ADV', 'PDAT', 'ADJA', 'NN', 'NE', 'NE', 'KON', 'ADV', 'ADV'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (6, 23), 'movers': ['NX'], 'old_parent': 'MF', 'end right siblings': ['NX', 'NX', 'KON', 'ADVX'], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU hannover ist das ziel anderthalb tage)
		(SU
			[01;31m(SIMPX[00m
				(VF in den nachsten drei monaten)
				(LK gibt)
				[01;31m(MF[00m
					(NX es)
					(ADVX ja)
					(ADVX ofter)[01;31m)[00m[01;31m)[00m
			(NX
				(NX diese ganzen feiertage)
				[01;36m(NX[00m
					(NX ostern)
					(NX pfingsten)[01;36m)[00m
				(KON und)
				(ADVX so weiter)))
		(SU mal kucken wie wir da in die gange kommen)
		(SU wie schaut es denn bei dir aus)))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['NX', 'NX', 'KON', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NE', 'NE'), 'right siblings': [(KON und), (ADVX (ADVX (ADV so)) (ADV weiter))], 'left siblings': [(NX (PDAT diese) (ADJX (ADJA ganzen)) (NN feiertage))], 'auto preterminal span': (18, 20), 'span': (18, 20), 'parent': 'NX', 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'add'}
(TOP
	(TURN
		(SU hannover ist das ziel anderthalb tage)
		(SU
			[01;31m(SIMPX[00m
				(VF in den nachsten drei monaten)
				(LK gibt)
				[01;31m(MF[00m
					(NX es)
					(ADVX ja)
					(ADVX ofter)[01;31m)[00m[01;31m)[00m
			(NX diese ganzen feiertage ostern pfingsten und so weiter))
		(SU mal kucken wie wir da in die gange kommen)
		(SU wie schaut es denn bei dir aus)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['SIMPX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'ADJA', 'CARD', 'NN', 'VVFIN', 'PPER', 'ADV', 'ADV', 'PDAT', 'ADJA', 'NN', 'NE', 'NE', 'KON', 'ADV', 'ADV'), 'right siblings': ['NX'], 'parent': 'SU', 'auto preterminal span': (6, 23), 'span': (6, 15), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU hannover ist das ziel anderthalb tage)
		(SU
			(VF in den nachsten drei monaten)
			(LK gibt)
			[01;31m(MF[00m
				(NX es)
				(ADVX ja)
				(ADVX ofter)[01;31m)[00m
			(NX diese ganzen feiertage ostern pfingsten und so weiter))
		(SU mal kucken wie wir da in die gange kommen)
		(SU wie schaut es denn bei dir aus)))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADVX', 'ADVX'], 'family': ['VF', 'LK', 'MF', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'ADJA', 'CARD', 'NN', 'VVFIN', 'PPER', 'ADV', 'ADV', 'PDAT', 'ADJA', 'NN', 'NE', 'NE', 'KON', 'ADV', 'ADV'), 'right siblings': ['NX'], 'parent': 'SU', 'auto preterminal span': (6, 23), 'span': (12, 15), 'left siblings': ['VF', 'LK'], 'label': 'MF', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP hannover ist das ziel anderthalb tage in den nachsten drei monaten gibt es ja ofter diese ganzen feiertage ostern pfingsten und so weiter mal kucken wie wir da in die gange kommen wie schaut es denn bei dir aus)

Sentence 467:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU da bin ich schon verplant)
		[01;36m(DM[00m
			(SU
				(APPR bis))[01;36m)[00m))
Step:Unary
{'subtrees': ['SU'], 'family': ['SU', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR',), 'right siblings': [], 'left siblings': [(SU (SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VAFIN bin))) (MF (NX (PPER ich)) (ADVX (ADV schon)) (ADJX (ADJD verplant)))))], 'auto preterminal span': (5, 6), 'span': (5, 6), 'parent': 'TURN', 'label': 'DM', 'classified_type': 'Unary', 'type': 'add'}
(TOP da bin ich schon verplant bis)

Sentence 468:
0 Initial errors
0 on fringe, 0 iterations

Sentence 469:
11 Initial errors
0 on fringe, 8 iterations
3 Error:Co-ordination
2 Error:NP Attachment
1 Error:Co-ordination
1 Error:Modifier Attachment
1 Error:Modifier Attachment
1 Error:PP Attachment
1 Error:UNSET remove
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU wurde ich auch vorschlagen das wir montag fruh losfahren)
		[01;36m(SU[00m
			(SU vielleicht nicht allzu fruh)
			(SU
				(SIMPX ab funf uhr drei konnte man abfahren)
				[01;36m(SIMPX[00m
					[01;31m(SIMPX[00m
						(KOORD aber)
						(LK ist)
						[01;31m(MF[00m [01;33m(MF[00m
							(ADVX nicht)
							[01;31m(NX[00m
								(NX ziel) [01;33mMF)[00m
								(NX der sache)[01;31m)[00m[01;31m)[00m[01;31m)[00m
					[01;36m(PX[00m [01;31m(NX[00m
						(KON sondern)
						[01;36m(ADJX[00m
							[01;33m(ADVX[00m (ADVX lieber)
							[01;31m(NX[00m
								(ADVX so) [01;33mADVX)[00m
								(CARD sieben)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m)[01;36m)[00m))
Step:Co-ordination
{'new_parent': 'NX', 'new_family': ['NX', 'KON', 'ADVX', 'NX'], 'mover info': [('NX', (24, 26))], 'old_family': ['NX', 'NX'], 'start left siblings': ['NX'], 'auto preterminals': ('APPR', 'CARD', 'NN', 'CARD', 'VMFIN', 'PIS', 'VVINF', 'KON', 'VAFIN', 'PTKNEG', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ADV', 'CARD'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (13, 30), 'movers': ['NX'], 'old_parent': 'NX', 'end right siblings': ['KON', 'ADVX', 'NX'], 'classified_type': 'Co-ordination', 'type': 'move'}
(TOP
	(TURN
		(SU wurde ich auch vorschlagen das wir montag fruh losfahren)
		[01;36m(SU[00m
			(SU vielleicht nicht allzu fruh)
			(SU
				(SIMPX ab funf uhr drei konnte man abfahren)
				[01;36m(SIMPX[00m
					[01;31m(SIMPX[00m
						(KOORD aber)
						(LK ist)
						(MF nicht ziel)[01;31m)[00m
					[01;31m(NX[00m
						(NX der sache)
						[01;36m(PX[00m
							(KON sondern)
							[01;36m(ADJX[00m
								[01;33m(ADVX[00m (ADVX lieber)
								[01;31m(NX[00m
									(ADVX so) [01;33mADVX)[00m
									(CARD sieben)[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;36m)[00m)[01;36m)[00m))
Step:NP Attachment
{'new_parent': 'SIMPX', 'new_family': ['KOORD', 'LK', 'MF', 'NX'], 'mover info': [('NX', (24, 30))], 'old_family': ['SIMPX', 'SIMPX', 'NX'], 'start left siblings': ['SIMPX', 'SIMPX'], 'auto preterminals': ('APPR', 'CARD', 'NN', 'CARD', 'VMFIN', 'PIS', 'VVINF', 'KON', 'VAFIN', 'PTKNEG', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ADV', 'CARD'), 'start right siblings': [], 'end left siblings': ['KOORD', 'LK', 'MF'], 'auto preterminal span': (13, 30), 'movers': ['NX'], 'old_parent': 'SU', 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU wurde ich auch vorschlagen das wir montag fruh losfahren)
		[01;36m(SU[00m
			(SU vielleicht nicht allzu fruh)
			(SU
				(SIMPX ab funf uhr drei konnte man abfahren)
				(SIMPX
					(KOORD aber)
					(LK ist)
					(MF nicht ziel)
					[01;31m(NX[00m
						(NX der sache)
						[01;36m(PX[00m
							(KON sondern)
							[01;36m(ADJX[00m
								[01;33m(ADVX[00m (ADVX lieber)
								[01;31m(NX[00m
									(ADVX so) [01;33mADVX)[00m
									(CARD sieben)[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;31m)[00m))[01;36m)[00m))
Step:Co-ordination
{'subtrees': ['SU', 'SU'], 'family': ['SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PTKNEG', 'PTKA', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'VMFIN', 'PIS', 'VVINF', 'KON', 'VAFIN', 'PTKNEG', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ADV', 'CARD'), 'right siblings': [], 'left siblings': [(SU (SIMPX (LK (VXFIN (VAFIN wurde))) (MF (NX (PPER ich)) (ADVX (ADV auch))) (VC (VXINF (VVINF vorschlagen))) (NF (SIMPX (C (KOUS das)) (MF (NX (PPER wir)) (NX (NX (NN montag)) (ADVX (ADV fruh)))) (VC (VXFIN (VVFIN losfahren)))))))], 'auto preterminal span': (9, 30), 'span': (9, 30), 'parent': 'TURN', 'label': 'SU', 'classified_type': 'Co-ordination', 'type': 'add'}
(TOP
	(TURN
		(SU wurde ich auch vorschlagen das wir montag fruh losfahren)
		(SU
			(SU vielleicht nicht allzu fruh)
			(SU
				(SIMPX ab funf uhr drei konnte man abfahren)
				(SIMPX
					(KOORD aber)
					(LK ist)
					(MF nicht ziel)
					[01;31m(NX[00m
						(NX der sache)
						[01;36m(PX[00m
							(KON sondern)
							[01;36m(ADJX[00m
								[01;33m(ADVX[00m (ADVX lieber)
								[01;31m(NX[00m
									(ADVX so) [01;33mADVX)[00m
									(CARD sieben)[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;31m)[00m)))))
Step:Modifier Attachment
{'subtrees': ['KON', 'ADVX', 'NX'], 'family': ['NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'ADV', 'ADV', 'CARD'), 'right siblings': [], 'left siblings': [(NX (ART der) (NN sache))], 'auto preterminal span': (26, 30), 'span': (26, 30), 'parent': 'NX', 'label': 'PX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU wurde ich auch vorschlagen das wir montag fruh losfahren)
		(SU
			(SU vielleicht nicht allzu fruh)
			(SU
				(SIMPX ab funf uhr drei konnte man abfahren)
				(SIMPX
					(KOORD aber)
					(LK ist)
					(MF nicht ziel)
					[01;31m(NX[00m
						(NX der sache)
						(PX
							(KON sondern)
							[01;36m(ADJX[00m
								[01;33m(ADVX[00m (ADVX lieber)
								[01;31m(NX[00m
									(ADVX so) [01;33mADVX)[00m
									(CARD sieben)[01;31m)[00m[01;36m)[00m)[01;31m)[00m)))))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'NX'], 'family': ['KON', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'CARD'), 'right siblings': [], 'left siblings': [(KON sondern)], 'auto preterminal span': (27, 30), 'span': (27, 30), 'parent': 'PX', 'label': 'ADJX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU wurde ich auch vorschlagen das wir montag fruh losfahren)
		(SU
			(SU vielleicht nicht allzu fruh)
			(SU
				(SIMPX ab funf uhr drei konnte man abfahren)
				(SIMPX
					(KOORD aber)
					(LK ist)
					(MF nicht ziel)
					[01;31m(NX[00m
						(NX der sache)
						(PX
							(KON sondern)
							(ADJX [01;33m(ADVX[00m
								(ADVX lieber)
								[01;31m(NX[00m
									(ADVX so) [01;33mADVX)[00m
									(CARD sieben)[01;31m)[00m))[01;31m)[00m)))))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['KOORD', 'LK', 'MF', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'VAFIN', 'PTKNEG', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ADV', 'CARD'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (20, 30), 'span': (24, 30), 'left siblings': ['KOORD', 'LK', 'MF'], 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU wurde ich auch vorschlagen das wir montag fruh losfahren)
		(SU
			(SU vielleicht nicht allzu fruh)
			(SU
				(SIMPX ab funf uhr drei konnte man abfahren)
				(SIMPX
					(KOORD aber)
					(LK ist)
					(MF nicht ziel)
					(NX der sache)
					(PX
						(KON sondern)
						(ADJX [01;33m(ADVX[00m
							(ADVX lieber)
							[01;31m(NX[00m
								(ADVX so) [01;33mADVX)[00m
								(CARD sieben)[01;31m)[00m)))))))
Step:UNSET remove
{'subtrees': ['ADVX', 'CARD'], 'family': ['ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'CARD'), 'right siblings': [], 'parent': 'ADJX', 'auto preterminal span': (27, 30), 'span': (28, 30), 'left siblings': ['ADVX'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU wurde ich auch vorschlagen das wir montag fruh losfahren)
		(SU
			(SU vielleicht nicht allzu fruh)
			(SU
				(SIMPX ab funf uhr drei konnte man abfahren)
				(SIMPX
					(KOORD aber)
					(LK ist)
					(MF nicht ziel)
					(NX der sache)
					(PX
						(KON sondern)
						(ADJX
							[01;36m(ADVX[00m
								(ADVX lieber)
								(ADVX so)[01;36m)[00m
							(CARD sieben))))))))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'ADVX'], 'family': ['ADVX', 'CARD'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV'), 'right siblings': [(CARD sieben)], 'left siblings': [], 'auto preterminal span': (27, 29), 'span': (27, 29), 'parent': 'ADJX', 'label': 'ADVX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP wurde ich auch vorschlagen das wir montag fruh losfahren vielleicht nicht allzu fruh ab funf uhr drei konnte man abfahren aber ist nicht ziel der sache sondern lieber so sieben)

Sentence 470:
0 Initial errors
0 on fringe, 0 iterations

Sentence 471:
11 Initial errors
0 on fringe, 9 iterations
2 Error:Different label
2 Error:PP Attachment
1 Error:PP Attachment
1 Error:UNSET remove
1 Error:Unary
1 Error:Co-ordination
1 Error:UNSET add
1 Error:Clause Attachment
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU also es ist vollkommen wahlfrei)
		(SU
			(SIMPX
				(VF fluge)
				(LK gibt)
				[01;36m(MF[00m
					[01;31m(MF[00m
						(NX es)
						(ADVX immer)
						(PX am abend)[01;31m)[00m
					[01;36m(PX[00m [01;31m(NF[00m
						(ADVX allerdings)
						(PX erst ab achtzehn uhr funfunddreisig)[01;31m)[00m[01;36m)[00m[01;36m)[00m)
			(SIMPX
				(KOORD und)
				(VF zuge)
				(LK gehen)
				(MF
					(ADVX sowieso)
					[01;31m(PX[00m
						(NX den ganzen tag)
						(APPO uber)[01;31m)[00m)))
		(SU
			[01;31m(SIMPX[00m
				(VF wir)
				[01;31m(FKOORD[00m
					[01;31m(LKMN[00m
						(LK waren)
						(MF
							[01;36m(MF[00m
								(ADVX naturlich)
								(PX mit dem flugzeug)
								(ADJX etwas flexibler)[01;36m)[00m
							[01;31m(PX[00m
								(PX zum abend)
								(ADVX hin)[01;31m)[00m)
						[01;33m(SIMPX[00m (NF weil wir den letzten flug sogar um neun uhr noch nehmen konnten)[01;31m)[00m
					(KON und)
					(LKM waren dann trotzdem noch vor elf zu hause)[01;31m)[00m[01;31m)[00m))) [01;33mSIMPX)[00m
Step:Different label
{'family': ['VF', 'LK', 'MF', 'PX'], 'auto preterminal span': (11, 17), 'span': (11, 17), 'subtrees': ['ADVX', 'PX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('ADV', 'ADV', 'APPR', 'CARD', 'NN', 'CARD'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('NF', 'PX')}
(TOP
	(TURN
		(SU also es ist vollkommen wahlfrei)
		(SU
			(SIMPX
				(VF fluge)
				(LK gibt)
				[01;36m(MF[00m
					[01;31m(MF[00m
						(NX es)
						(ADVX immer)
						(PX am abend)[01;31m)[00m
					(PX allerdings erst ab achtzehn uhr funfunddreisig)[01;36m)[00m)
			(SIMPX
				(KOORD und)
				(VF zuge)
				(LK gehen)
				(MF
					(ADVX sowieso)
					[01;31m(PX[00m
						(NX den ganzen tag)
						(APPO uber)[01;31m)[00m)))
		(SU
			[01;31m(SIMPX[00m
				(VF wir)
				[01;31m(FKOORD[00m
					[01;31m(LKMN[00m
						(LK waren)
						(MF
							[01;36m(MF[00m
								(ADVX naturlich)
								(PX mit dem flugzeug)
								(ADJX etwas flexibler)[01;36m)[00m
							[01;31m(PX[00m
								(PX zum abend)
								(ADVX hin)[01;31m)[00m)
						[01;33m(SIMPX[00m (NF weil wir den letzten flug sogar um neun uhr noch nehmen konnten)[01;31m)[00m
					(KON und)
					(LKM waren dann trotzdem noch vor elf zu hause)[01;31m)[00m[01;31m)[00m))) [01;33mSIMPX)[00m
Step:PP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'ADVX', 'PX', 'PX'], 'mover info': [('PX', (11, 17))], 'old_family': ['VF', 'LK', 'MF', 'PX'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('NN', 'VVFIN', 'PPER', 'ADV', 'APPRART', 'NN', 'ADV', 'ADV', 'APPR', 'CARD', 'NN', 'CARD'), 'start right siblings': [], 'end left siblings': ['NX', 'ADVX', 'PX'], 'auto preterminal span': (5, 17), 'movers': ['PX'], 'old_parent': 'SIMPX', 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU also es ist vollkommen wahlfrei)
		(SU
			(SIMPX fluge gibt es immer am abend allerdings erst ab achtzehn uhr funfunddreisig)
			(SIMPX
				(KOORD und)
				(VF zuge)
				(LK gehen)
				(MF
					(ADVX sowieso)
					[01;31m(PX[00m
						(NX den ganzen tag)
						(APPO uber)[01;31m)[00m)))
		(SU
			[01;31m(SIMPX[00m
				(VF wir)
				[01;31m(FKOORD[00m
					[01;31m(LKMN[00m
						(LK waren)
						(MF
							[01;36m(MF[00m
								(ADVX naturlich)
								(PX mit dem flugzeug)
								(ADJX etwas flexibler)[01;36m)[00m
							[01;31m(PX[00m
								(PX zum abend)
								(ADVX hin)[01;31m)[00m)
						[01;33m(SIMPX[00m (NF weil wir den letzten flug sogar um neun uhr noch nehmen konnten)[01;31m)[00m
					(KON und)
					(LKM waren dann trotzdem noch vor elf zu hause)[01;31m)[00m[01;31m)[00m))) [01;33mSIMPX)[00m
Step:PP Attachment
{'subtrees': ['ADVX', 'PX', 'ADJX'], 'family': ['MF', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'APPR', 'ART', 'NN', 'ADV', 'ADJD'), 'right siblings': [(PX (PX (APPRART zum) (NX (NN abend))) (ADVX (ADV hin)))], 'left siblings': [], 'auto preterminal span': (27, 33), 'span': (27, 33), 'parent': 'MF', 'label': 'MF', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU also es ist vollkommen wahlfrei)
		(SU
			(SIMPX fluge gibt es immer am abend allerdings erst ab achtzehn uhr funfunddreisig)
			(SIMPX
				(KOORD und)
				(VF zuge)
				(LK gehen)
				(MF
					(ADVX sowieso)
					[01;31m(PX[00m
						(NX den ganzen tag)
						(APPO uber)[01;31m)[00m)))
		(SU
			[01;31m(SIMPX[00m
				(VF wir)
				[01;31m(FKOORD[00m
					[01;31m(LKMN[00m
						(LK waren)
						(MF
							(MF naturlich mit dem flugzeug etwas flexibler)
							[01;31m(PX[00m
								(PX zum abend)
								(ADVX hin)[01;31m)[00m)
						[01;33m(SIMPX[00m (NF weil wir den letzten flug sogar um neun uhr noch nehmen konnten)[01;31m)[00m
					(KON und)
					(LKM waren dann trotzdem noch vor elf zu hause)[01;31m)[00m[01;31m)[00m))) [01;33mSIMPX)[00m
Step:UNSET remove
{'subtrees': ['NX', 'APPO'], 'family': ['ADVX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ART', 'ADJA', 'NN', 'APPO'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (20, 25), 'span': (21, 25), 'left siblings': ['ADVX'], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU also es ist vollkommen wahlfrei)
		(SU fluge gibt es immer am abend allerdings erst ab achtzehn uhr funfunddreisig und zuge gehen sowieso den ganzen tag uber)
		(SU
			[01;31m(SIMPX[00m
				(VF wir)
				[01;31m(FKOORD[00m
					[01;31m(LKMN[00m
						(LK waren)
						(MF
							(MF naturlich mit dem flugzeug etwas flexibler)
							[01;31m(PX[00m
								(PX zum abend)
								(ADVX hin)[01;31m)[00m)
						[01;33m(SIMPX[00m (NF weil wir den letzten flug sogar um neun uhr noch nehmen konnten)[01;31m)[00m
					(KON und)
					(LKM waren dann trotzdem noch vor elf zu hause)[01;31m)[00m[01;31m)[00m))) [01;33mSIMPX)[00m
Step:Unary
{'subtrees': ['VF', 'FKOORD'], 'family': ['SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'ADJD', 'APPRART', 'NN', 'ADV', 'KOUS', 'PPER', 'ART', 'ADJA', 'NN', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'VVINF', 'VMFIN', 'KON', 'VAFIN', 'ADV', 'PROP', 'ADV', 'APPR', 'CARD', 'APPR', 'NN'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (25, 57), 'span': (25, 57), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU also es ist vollkommen wahlfrei)
		(SU fluge gibt es immer am abend allerdings erst ab achtzehn uhr funfunddreisig und zuge gehen sowieso den ganzen tag uber)
		(SU
			(VF wir)
			[01;31m(FKOORD[00m
				[01;31m(LKMN[00m
					(LK waren)
					(MF
						(MF naturlich mit dem flugzeug etwas flexibler)
						[01;31m(PX[00m
							(PX zum abend)
							(ADVX hin)[01;31m)[00m)
					[01;33m(SIMPX[00m (NF weil wir den letzten flug sogar um neun uhr noch nehmen konnten)[01;31m)[00m
				(KON und)
				(LKM waren dann trotzdem noch vor elf zu hause)[01;31m)[00m))) [01;33mSIMPX)[00m
Step:Co-ordination
{'subtrees': ['LK', 'MF', 'NF'], 'family': ['LKMN', 'KON', 'LKM'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'ADJD', 'APPRART', 'NN', 'ADV', 'KOUS', 'PPER', 'ART', 'ADJA', 'NN', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'VVINF', 'VMFIN', 'KON', 'VAFIN', 'ADV', 'PROP', 'ADV', 'APPR', 'CARD', 'APPR', 'NN'), 'right siblings': ['KON', 'LKM'], 'parent': 'FKOORD', 'auto preterminal span': (26, 57), 'span': (26, 48), 'left siblings': [], 'label': 'LKMN', 'classified_type': 'Co-ordination', 'type': 'remove'}
(TOP
	(TURN
		(SU also es ist vollkommen wahlfrei)
		(SU fluge gibt es immer am abend allerdings erst ab achtzehn uhr funfunddreisig und zuge gehen sowieso den ganzen tag uber)
		(SU
			(VF wir)
			[01;31m(FKOORD[00m
				(LK waren)
				(MF
					(MF naturlich mit dem flugzeug etwas flexibler)
					[01;31m(PX[00m
						(PX zum abend)
						(ADVX hin)[01;31m)[00m)
				[01;36m(SIMPX[00m
					(NF weil wir den letzten flug sogar um neun uhr noch nehmen konnten)
					(KON und)
					(LKM waren dann trotzdem noch vor elf zu hause)[01;36m)[00m[01;31m)[00m)))
Step:UNSET add
{'subtrees': ['NF', 'KON', 'LKM'], 'family': ['LK', 'MF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ART', 'ADJA', 'NN', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'VVINF', 'VMFIN', 'KON', 'VAFIN', 'ADV', 'PROP', 'ADV', 'APPR', 'CARD', 'APPR', 'NN'), 'right siblings': [], 'left siblings': [(LK (VXFIN (VAFIN waren))), (MF (MF (ADVX (ADV naturlich)) (PX (APPR mit) (NX (ART dem) (NN flugzeug))) (ADJX (ADVX (ADV etwas)) (ADJD flexibler))) (PX (PX (APPRART zum) (NX (NN abend))) (ADVX (ADV hin))))], 'auto preterminal span': (36, 57), 'span': (36, 57), 'parent': 'FKOORD', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU also es ist vollkommen wahlfrei)
		(SU fluge gibt es immer am abend allerdings erst ab achtzehn uhr funfunddreisig und zuge gehen sowieso den ganzen tag uber)
		(SU
			(VF wir)
			[01;31m(FKOORD[00m
				(LK waren)
				(MF
					(MF naturlich mit dem flugzeug etwas flexibler)
					[01;31m(PX[00m
						(PX zum abend)
						(ADVX hin)[01;31m)[00m)
				(SIMPX weil wir den letzten flug sogar um neun uhr noch nehmen konnten und waren dann trotzdem noch vor elf zu hause)[01;31m)[00m)))
Step:Clause Attachment
{'subtrees': ['LK', 'MF', 'SIMPX'], 'family': ['VF', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'ADJD', 'APPRART', 'NN', 'ADV', 'KOUS', 'PPER', 'ART', 'ADJA', 'NN', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'VVINF', 'VMFIN', 'KON', 'VAFIN', 'ADV', 'PROP', 'ADV', 'APPR', 'CARD', 'APPR', 'NN'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (25, 57), 'span': (26, 57), 'left siblings': ['VF'], 'label': 'FKOORD', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU also es ist vollkommen wahlfrei)
		(SU fluge gibt es immer am abend allerdings erst ab achtzehn uhr funfunddreisig und zuge gehen sowieso den ganzen tag uber)
		(SU
			(VF wir)
			(LK waren)
			(MF
				(MF naturlich mit dem flugzeug etwas flexibler)
				[01;31m(PX[00m
					(PX zum abend)
					(ADVX hin)[01;31m)[00m)
			(SIMPX weil wir den letzten flug sogar um neun uhr noch nehmen konnten und waren dann trotzdem noch vor elf zu hause))))
Step:Modifier Attachment
{'subtrees': ['PX', 'ADVX'], 'family': ['MF', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'APPR', 'ART', 'NN', 'ADV', 'ADJD', 'APPRART', 'NN', 'ADV'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (27, 36), 'span': (33, 36), 'left siblings': ['MF'], 'label': 'PX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP also es ist vollkommen wahlfrei fluge gibt es immer am abend allerdings erst ab achtzehn uhr funfunddreisig und zuge gehen sowieso den ganzen tag uber wir waren naturlich mit dem flugzeug etwas flexibler zum abend hin weil wir den letzten flug sogar um neun uhr noch nehmen konnten und waren dann trotzdem noch vor elf zu hause)

Sentence 472:
0 Initial errors
0 on fringe, 0 iterations

Sentence 473:
10 Initial errors
0 on fringe, 5 iterations
4 Error:UNSET move
2 Error:Single Word Phrase
2 Error:UNSET move
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU ja)
		(SU
			(SIMPX
				(VF wir)
				(LK kucken)
				[01;36m(ADJX[00m [01;31m(MF[00m [01;33m(MF[00m
					[01;31m(ADVX[00m
						(ADV einfach)[01;31m)[00m[01;31m)[00m[01;36m)[00m
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						(C was)
						(MF dann) [01;33mMF)[00m
						(VC gespielt wird)[01;31m)[00m[01;31m)[00m)
			(SIMPX
				[01;31m(VF[00m
					[01;31m(SIMPX[00m
						(KOORD und)
						[01;36m(SIMPX[00m
							[01;36m(VF[00m
								(C wenn)
								(MF nix gescheites)
								(VC kommt)[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
				(LK konnen)
				(MF wir immer noch einfach nur eine kneipentour)
				(VC machen)))))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['KOORD', 'VF', 'LK', 'MF', 'VC'], 'mover info': [('KOORD', (8, 9))], 'old_family': ['KOORD', 'C', 'MF', 'VC'], 'start left siblings': [], 'auto preterminals': ('KON', 'KOUS', 'PIS', 'NN', 'VVFIN', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'ADV', 'ART', 'NN', 'VVINF'), 'start right siblings': ['C', 'MF', 'VC'], 'end left siblings': [], 'auto preterminal span': (8, 22), 'movers': ['KOORD'], 'old_parent': 'SIMPX', 'POS confusion': ('KON', 'KON'), 'end right siblings': ['VF', 'LK', 'MF', 'VC'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU ja)
		(SU
			(SIMPX
				(VF wir)
				(LK kucken)
				[01;36m(ADJX[00m [01;31m(MF[00m [01;33m(MF[00m
					[01;31m(ADVX[00m
						(ADV einfach)[01;31m)[00m[01;31m)[00m[01;36m)[00m
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						(C was)
						(MF dann) [01;33mMF)[00m
						(VC gespielt wird)[01;31m)[00m[01;31m)[00m)
			(SIMPX und wenn nix gescheites kommt konnen wir immer noch einfach nur eine kneipentour machen))))
Step:Single Word Phrase
{'family': ['ADJX'], 'auto preterminal span': (3, 4), 'span': (3, 4), 'subtrees': ['ADV'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'ADJX')}
(TOP
	(TURN
		(SU ja)
		(SU
			(SIMPX
				(VF wir)
				(LK kucken)
				[01;31m(MF[00m [01;33m(MF[00m
					(ADJX
						(ADV einfach))[01;31m)[00m
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						(C was)
						(MF dann) [01;33mMF)[00m
						(VC gespielt wird)[01;31m)[00m[01;31m)[00m)
			(SIMPX und wenn nix gescheites kommt konnen wir immer noch einfach nur eine kneipentour machen))))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['ADJX', 'C', 'MF'], 'mover info': [('C', (4, 5)), ('MF', (5, 6))], 'old_family': ['C', 'MF', 'VC'], 'start left siblings': [], 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'PWS', 'ADV', 'VVPP', 'VAFIN'), 'start right siblings': ['VC'], 'end left siblings': ['ADJX'], 'auto preterminal span': (1, 8), 'movers': ['C', 'MF'], 'old_parent': 'SIMPX', 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU ja)
		(SU
			(SIMPX
				(VF wir)
				(LK kucken)
				(MF einfach was dann)
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						(VC
							(VXINF gespielt)
							(VXFIN wird))[01;31m)[00m[01;31m)[00m)
			(SIMPX und wenn nix gescheites kommt konnen wir immer noch einfach nur eine kneipentour machen))))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['VF', 'LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'PWS', 'ADV', 'VVPP', 'VAFIN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (1, 8), 'span': (6, 8), 'left siblings': ['VF', 'LK', 'MF'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU ja)
		(SU
			(SIMPX
				(VF wir)
				(LK kucken)
				(MF einfach was dann)
				[01;31m(SIMPX[00m
					(VC
						(VXINF gespielt)
						(VXFIN wird))[01;31m)[00m)
			(SIMPX und wenn nix gescheites kommt konnen wir immer noch einfach nur eine kneipentour machen))))
Step:Unary
{'subtrees': ['VC'], 'family': ['VF', 'LK', 'MF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'PWS', 'ADV', 'VVPP', 'VAFIN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (1, 8), 'span': (6, 8), 'left siblings': ['VF', 'LK', 'MF'], 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja wir kucken einfach was dann gespielt wird und wenn nix gescheites kommt konnen wir immer noch einfach nur eine kneipentour machen)

Sentence 474:
0 Initial errors
0 on fringe, 0 iterations

Sentence 475:
11 Initial errors
0 on fringe, 6 iterations
5 Error:NP Attachment
2 Error:PP Attachment
1 Error:Single Word Phrase
1 Error:Single Word Phrase
1 Error:NP Internal Structure
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM hallo)
			[01;31m(DM[00m
				[01;31m(NX[00m
					(NE peter)[01;31m)[00m[01;31m)[00m
			(ADJX gut das wir uns treffen))
		[01;36m(SIMPX[00m
			(SU
				[01;31m(SIMPX[00m
					(VF es)
					(LK geht)
					[01;31m(MF[00m [01;33m(PX (MF[00m
						[01;31m(PX[00m
							(APPR um)
							[01;33m(NX[00m (NX termin)[01;31m)[00m[01;31m)[00m[01;31m)[00m
				(NX eine reise) [01;33mNX) MF) PX)[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(NX wir)
						(NX beide)[01;31m)[00m
					(ADVX zusammen)[01;31m)[00m
				(PX von munchen nach hannover))[01;36m)[00m
		(SU anderthalb tage in den nachsten drei monaten)
		(SU wann hast du zeit)))
Step:NP Attachment
{'new_parent': 'PX', 'new_family': ['APPR', 'NX', 'NX'], 'mover info': [('NX', (11, 13))], 'old_family': ['SIMPX', 'NX', 'NX', 'PX'], 'start left siblings': ['SIMPX'], 'auto preterminals': ('PPER', 'VVFIN', 'APPR', 'NN', 'ART', 'NN', 'PPER', 'PIS', 'ADV', 'APPR', 'NE', 'APPR', 'NE'), 'start right siblings': ['NX', 'PX'], 'end left siblings': ['APPR', 'NX'], 'auto preterminal span': (7, 20), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'SU', 'added and moved': True, 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(SU
			(DM hallo)
			[01;31m(DM[00m
				[01;31m(NX[00m
					(NE peter)[01;31m)[00m[01;31m)[00m
			(ADJX gut das wir uns treffen))
		[01;36m(SIMPX[00m
			(SU
				[01;31m(SIMPX[00m
					(VF es)
					(LK geht)
					(MF um termin eine reise)[01;31m)[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(NX wir)
						(NX beide)[01;31m)[00m
					(ADVX zusammen)[01;31m)[00m
				(PX von munchen nach hannover))[01;36m)[00m
		(SU anderthalb tage in den nachsten drei monaten)
		(SU wann hast du zeit)))
Step:PP Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'NX', 'PX'], 'mover info': [('NX', (13, 16)), ('PX', (16, 20))], 'old_family': ['SIMPX', 'NX', 'PX'], 'start left siblings': ['SIMPX'], 'auto preterminals': ('PPER', 'VVFIN', 'APPR', 'NN', 'ART', 'NN', 'PPER', 'PIS', 'ADV', 'APPR', 'NE', 'APPR', 'NE'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (7, 20), 'movers': ['NX', 'PX'], 'old_parent': 'SU', 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU
			(DM hallo)
			[01;31m(DM[00m
				[01;31m(NX[00m
					(NE peter)[01;31m)[00m[01;31m)[00m
			(ADJX gut das wir uns treffen))
		(SU
			(SIMPX
				(VF es)
				(LK geht)
				(MF um termin eine reise)
				[01;31m(NX[00m
					[01;31m(NX[00m
						(NX wir)
						(NX beide)[01;31m)[00m
					(ADVX zusammen)[01;31m)[00m
				(PX von munchen nach hannover)))
		(SU anderthalb tage in den nachsten drei monaten)
		(SU wann hast du zeit)))
Step:Single Word Phrase
{'subtrees': ['NE'], 'family': ['NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('NE',), 'right siblings': [], 'parent': 'DM', 'auto preterminal span': (1, 2), 'span': (1, 2), 'left siblings': [], 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM hallo)
			[01;31m(DM[00m
				(NE peter)[01;31m)[00m
			(ADJX gut das wir uns treffen))
		(SU
			(SIMPX
				(VF es)
				(LK geht)
				(MF um termin eine reise)
				[01;31m(NX[00m
					[01;31m(NX[00m
						(NX wir)
						(NX beide)[01;31m)[00m
					(ADVX zusammen)[01;31m)[00m
				(PX von munchen nach hannover)))
		(SU anderthalb tage in den nachsten drei monaten)
		(SU wann hast du zeit)))
Step:Single Word Phrase
{'subtrees': ['NE'], 'family': ['DM', 'DM', 'ADJX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ITJ', 'NE', 'ADJD', 'KOUS', 'PPER', 'PRF', 'VVFIN'), 'right siblings': ['ADJX'], 'parent': 'SU', 'auto preterminal span': (0, 7), 'span': (1, 2), 'left siblings': ['DM'], 'label': 'DM', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(SU hallo peter gut das wir uns treffen)
		(SU
			(SIMPX
				(VF es)
				(LK geht)
				(MF um termin eine reise)
				[01;31m(NX[00m
					[01;31m(NX[00m
						(NX wir)
						(NX beide)[01;31m)[00m
					(ADVX zusammen)[01;31m)[00m
				(PX von munchen nach hannover)))
		(SU anderthalb tage in den nachsten drei monaten)
		(SU wann hast du zeit)))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['NX', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'PIS', 'ADV'), 'right siblings': ['ADVX'], 'parent': 'NX', 'auto preterminal span': (13, 16), 'span': (13, 15), 'left siblings': [], 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'remove'}
(TOP
	(TURN
		(SU hallo peter gut das wir uns treffen)
		(SU
			(SIMPX
				(VF es)
				(LK geht)
				(MF um termin eine reise)
				[01;31m(NX[00m
					(NX wir)
					(NX beide)
					(ADVX zusammen)[01;31m)[00m
				(PX von munchen nach hannover)))
		(SU anderthalb tage in den nachsten drei monaten)
		(SU wann hast du zeit)))
Step:Modifier Attachment
{'subtrees': ['NX', 'NX', 'ADVX'], 'family': ['VF', 'LK', 'MF', 'NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'APPR', 'NN', 'ART', 'NN', 'PPER', 'PIS', 'ADV', 'APPR', 'NE', 'APPR', 'NE'), 'right siblings': ['PX'], 'parent': 'SIMPX', 'auto preterminal span': (7, 20), 'span': (13, 16), 'left siblings': ['VF', 'LK', 'MF'], 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP hallo peter gut das wir uns treffen es geht um termin eine reise wir beide zusammen von munchen nach hannover anderthalb tage in den nachsten drei monaten wann hast du zeit)

Sentence 476:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM moment)
			[01;36m(DM[00m [01;31m(VXFIN[00m
				(VVIMP warte)[01;31m)[00m[01;36m)[00m)
		(SU das war der neunzehnte juli)))
Step:Single Word Phrase
{'family': ['DM', 'DM'], 'auto preterminal span': (1, 2), 'span': (1, 2), 'subtrees': ['VVIMP'], 'parent': 'SU', 'over_word': True, 'auto preterminals': ('VVIMP',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VXFIN', 'DM')}
(TOP moment warte das war der neunzehnte juli)

Sentence 477:
8 Initial errors
0 on fringe, 4 iterations
4 Error:VP Attachment
2 Error:Single Word Phrase
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU bis funfzehnter august)
		(SU aha)
		(SU
			(SIMPX
				(VF mein urlaub)
				[01;36m(FKOORD[00m
					[01;36m(LK[00m
						(VXFIN [01;33m(LKMVC[00m
							(VAFIN ist))[01;36m)[00m
					[01;31m(FKOORD[00m
						[01;31m(LKMVC[00m
							[01;36m(DM[00m [01;31m(LK[00m
								[01;31m(VXFIN[00m
									(VVFIN fangt)[01;31m)[00m[01;31m)[00m[01;36m)[00m
							(MF am neunten august)
							(VC an)[01;31m)[00m [01;33mLKMVC)[00m
						(KON und)
						(LKM geht bis zum einunddreisigsten august)[01;31m)[00m[01;36m)[00m))))
Step:VP Attachment
{'new_parent': 'LKMVC', 'new_family': ['VXFIN', 'LK', 'MF', 'VC'], 'mover info': [('VXFIN', (6, 7))], 'old_family': ['VF', 'VXFIN', 'FKOORD'], 'start left siblings': ['VF'], 'auto preterminals': ('PPOSAT', 'NN', 'VAFIN', 'VVFIN', 'APPRART', 'ADJA', 'NN', 'PTKVZ', 'KON', 'VVFIN', 'APPR', 'APPRART', 'ADJA', 'NN'), 'start right siblings': ['FKOORD'], 'end left siblings': [], 'auto preterminal span': (4, 18), 'movers': ['VXFIN'], 'old_parent': 'SIMPX', 'POS confusion': ('VAFIN', 'VAFIN'), 'end right siblings': ['LK', 'MF', 'VC'], 'classified_type': 'VP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU bis funfzehnter august)
		(SU aha)
		(SU
			(SIMPX
				(VF mein urlaub)
				(FKOORD
					(LKMVC
						[01;36m(LK[00m
							(VXFIN
								(VAFIN ist))[01;36m)[00m
						[01;36m(DM[00m [01;31m(LK[00m
							[01;31m(VXFIN[00m
								(VVFIN fangt)[01;31m)[00m[01;31m)[00m[01;36m)[00m
						(MF am neunten august)
						(VC an))
					(KON und)
					(LKM geht bis zum einunddreisigsten august))))))
Step:Single Word Phrase
{'family': ['DM'], 'auto preterminal span': (7, 8), 'span': (7, 8), 'subtrees': ['VVFIN'], 'parent': 'LK', 'over_word': True, 'auto preterminals': ('VVFIN',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VXFIN', 'DM')}
(TOP
	(TURN
		(SU bis funfzehnter august)
		(SU aha)
		(SU
			(SIMPX
				(VF mein urlaub)
				(FKOORD
					(LKMVC
						[01;36m(LK[00m
							(VXFIN
								(VAFIN ist))[01;36m)[00m
						[01;31m(LK[00m
							(DM
								(VVFIN fangt))[01;31m)[00m
						(MF am neunten august)
						(VC an))
					(KON und)
					(LKM geht bis zum einunddreisigsten august))))))
Step:Unary
{'subtrees': ['VXFIN'], 'family': ['LK', 'LK', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN',), 'right siblings': [(LK (DM (VVFIN fangt))), (MF (PX (APPRART am) (NX (ADJX (ADJA neunten)) (NN august)))), (VC (PTKVZ an))], 'left siblings': [], 'auto preterminal span': (6, 7), 'span': (6, 7), 'parent': 'LKMVC', 'label': 'LK', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU bis funfzehnter august)
		(SU aha)
		(SU
			(SIMPX
				(VF mein urlaub)
				(FKOORD
					(LKMVC
						(LK ist)
						[01;31m(LK[00m
							(DM
								(VVFIN fangt))[01;31m)[00m
						(MF am neunten august)
						(VC an))
					(KON und)
					(LKM geht bis zum einunddreisigsten august))))))
Step:Unary
{'subtrees': ['DM'], 'family': ['LK', 'LK', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'VVFIN', 'APPRART', 'ADJA', 'NN', 'PTKVZ'), 'right siblings': ['MF', 'VC'], 'parent': 'LKMVC', 'auto preterminal span': (6, 12), 'span': (7, 8), 'left siblings': ['LK'], 'label': 'LK', 'classified_type': 'Unary', 'type': 'remove'}
(TOP bis funfzehnter august aha mein urlaub ist fangt am neunten august an und geht bis zum einunddreisigsten august)

Sentence 478:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU ja)
		(SU am sechsten juli habe ich eine dienstbesprechung)
		(SU
			(PX am siebten)
			(DM ah)
			(SIMPX
				(VF da)
				(LK hatte)
				(MF
					(NX ich)
					[01;31m(ADVX[00m
						(ADVX nur)
						(ADV abends)[01;31m)[00m
					(NX kino)))
			(SIMPX aber am neunter zehnter juli hattest du gesagt))))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'ADV'], 'family': ['NX', 'ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV', 'ADV', 'NN'), 'right siblings': ['NX'], 'parent': 'MF', 'auto preterminal span': (13, 17), 'span': (14, 16), 'left siblings': ['NX'], 'label': 'ADVX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP ja am sechsten juli habe ich eine dienstbesprechung am siebten ah da hatte ich nur abends kino aber am neunter zehnter juli hattest du gesagt)

Sentence 479:
0 Initial errors
0 on fringe, 0 iterations

Sentence 480:
8 Initial errors
0 on fringe, 5 iterations
3 Error:Clause Attachment
2 Error:Different label
1 Error:Unary
1 Error:UNSET add
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM okay)
			(SIMPX dann fahren wir zusammen dahin)
			[01;36m(SIMPX[00m
				[01;31m(SIMPX[00m
					(KOORD und)
					(DM also)
					(VF ich)
					(LK meine)
					[01;33m(SIMPX (NF[00m (NF wir haben jetzt die)[01;31m)[00m
				(SIMPX
					(VF wir)
					(LK brauchen)
					[01;31m(MF[00m
						(NX anderthalb tage)
						(PX fur das treffen)[01;31m)[00m)[01;36m)[00m) [01;33mNF) SIMPX)[00m
		(SU
			(SIMPX wir haben zwei tage zeit)
			(SIMPX
				[01;36m(DM[00m [01;31m(VF[00m
					(ADVX
						(ADV also))[01;31m)[00m[01;36m)[00m
				[01;36m(SIMPX[00m
					(LK konnten)
					(MF wir mit dem zug)
					(VC hinfahren)
					(NF zum beispiel)[01;36m)[00m))))
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['KOORD', 'DM', 'VF', 'LK', 'NF', 'SIMPX'], 'mover info': [('SIMPX', (14, 21))], 'old_family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'start left siblings': ['DM', 'SIMPX', 'SIMPX'], 'auto preterminals': ('ITJ', 'ADV', 'VVFIN', 'PPER', 'ADV', 'PROP', 'KON', 'ADV', 'PPER', 'VVFIN', 'PPER', 'VAFIN', 'ADV', 'PDS', 'PPER', 'VVFIN', 'CARD', 'NN', 'APPR', 'ART', 'NN'), 'start right siblings': [], 'end left siblings': ['KOORD', 'DM', 'VF', 'LK', 'NF'], 'auto preterminal span': (0, 21), 'adding node already present': False, 'movers': ['SIMPX'], 'old_parent': 'SU', 'added and moved': True, 'end right siblings': [], 'classified_type': 'Clause Attachment', 'type': 'move', 'added label': 'SIMPX'}
(TOP
	(TURN
		(SU
			(DM okay)
			(SIMPX dann fahren wir zusammen dahin)
			(SIMPX
				(KOORD und)
				(DM also)
				(VF ich)
				(LK meine)
				[01;36m(NF[00m
					(SIMPX
						(NF wir haben jetzt die)
						(SIMPX
							(VF wir)
							(LK brauchen)
							[01;31m(MF[00m
								(NX anderthalb tage)
								(PX fur das treffen)[01;31m)[00m))[01;36m)[00m))
		(SU
			(SIMPX wir haben zwei tage zeit)
			(SIMPX
				[01;36m(DM[00m [01;31m(VF[00m
					(ADVX
						(ADV also))[01;31m)[00m[01;36m)[00m
				[01;36m(SIMPX[00m
					(LK konnten)
					(MF wir mit dem zug)
					(VC hinfahren)
					(NF zum beispiel)[01;36m)[00m))))
Step:Different label
{'family': ['DM', 'LK', 'MF', 'VC', 'NF'], 'auto preterminal span': (26, 27), 'span': (26, 27), 'subtrees': ['ADVX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('ADV',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('VF', 'DM')}
(TOP
	(TURN
		(SU
			(DM okay)
			(SIMPX dann fahren wir zusammen dahin)
			(SIMPX
				(KOORD und)
				(DM also)
				(VF ich)
				(LK meine)
				[01;36m(NF[00m
					(SIMPX
						(NF wir haben jetzt die)
						(SIMPX
							(VF wir)
							(LK brauchen)
							[01;31m(MF[00m
								(NX anderthalb tage)
								(PX fur das treffen)[01;31m)[00m))[01;36m)[00m))
		(SU
			(SIMPX wir haben zwei tage zeit)
			(SIMPX
				(DM also)
				[01;36m(SIMPX[00m
					(LK konnten)
					(MF wir mit dem zug)
					(VC hinfahren)
					(NF zum beispiel)[01;36m)[00m))))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['KOORD', 'DM', 'VF', 'LK', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'ADV', 'PDS', 'PPER', 'VVFIN', 'CARD', 'NN', 'APPR', 'ART', 'NN'), 'right siblings': [], 'left siblings': [(KOORD (KON und)), (DM (ADVX (ADV also))), (VF (NX (PPER ich))), (LK (VXFIN (VVFIN meine)))], 'auto preterminal span': (10, 21), 'span': (10, 21), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM okay)
			(SIMPX dann fahren wir zusammen dahin)
			(SIMPX
				(KOORD und)
				(DM also)
				(VF ich)
				(LK meine)
				(NF
					(SIMPX
						(NF wir haben jetzt die)
						(SIMPX
							(VF wir)
							(LK brauchen)
							[01;31m(MF[00m
								(NX anderthalb tage)
								(PX fur das treffen)[01;31m)[00m)))))
		(SU
			(SIMPX wir haben zwei tage zeit)
			(SIMPX
				(DM also)
				[01;36m(SIMPX[00m
					(LK konnten)
					(MF wir mit dem zug)
					(VC hinfahren)
					(NF zum beispiel)[01;36m)[00m))))
Step:UNSET add
{'subtrees': ['LK', 'MF', 'VC', 'NF'], 'family': ['DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VMFIN', 'PPER', 'APPR', 'ART', 'NN', 'VVINF', 'APPRART', 'NN'), 'right siblings': [], 'left siblings': [(DM (ADVX (ADV also)))], 'auto preterminal span': (27, 35), 'span': (27, 35), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM okay)
			(SIMPX dann fahren wir zusammen dahin)
			(SIMPX
				(KOORD und)
				(DM also)
				(VF ich)
				(LK meine)
				(NF
					(SIMPX
						(NF wir haben jetzt die)
						(SIMPX
							(VF wir)
							(LK brauchen)
							[01;31m(MF[00m
								(NX anderthalb tage)
								(PX fur das treffen)[01;31m)[00m)))))
		(SU wir haben zwei tage zeit also konnten wir mit dem zug hinfahren zum beispiel)))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'CARD', 'NN', 'APPR', 'ART', 'NN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (14, 21), 'span': (16, 21), 'left siblings': ['VF', 'LK'], 'label': 'MF', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP okay dann fahren wir zusammen dahin und also ich meine wir haben jetzt die wir brauchen anderthalb tage fur das treffen wir haben zwei tage zeit also konnten wir mit dem zug hinfahren zum beispiel)

Sentence 481:
12 Initial errors
0 on fringe, 11 iterations
2 Error:Different label
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:Clause Attachment
1 Error:Unary
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU genau)
		(SU also ich kucke kurz mal nach)
		(SU
			[01;31m(SIMPX[00m
				[01;31m(LV[00m
					[01;31m(PX[00m
						(APPR bei)
						(NX den zugverbindungen die ich hier habe)[01;31m)[00m[01;31m)[00m
				(VF das)
				(LK sind)
				[01;31m(MF[00m
					(NX
						(NX munchen)
						(NX hannover))[01;31m)[00m
				[01;31m(NF[00m [01;33m(PX[00m
					(PX
						(APPR mit)
						(NX dem ice))[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				(VF das)
				(LK sind)
				(MF
					[01;31m(NX[00m
						[01;31m(NX[00m
							(ADJX stundliche)
							(NN verbindungen)[01;31m)[00m
						(PX
							(APPR ab)
							[01;36m(NX[00m [01;31m(PX[00m
								(ADVX morgens)
								(NX vier uhr dreiundvierzig)[01;31m)[00m[01;36m)[00m)[01;31m)[00m)[01;31m)[00m) [01;33mPX)[00m
		(SU
			(DM also)
			(SIMPX
				(VF ich)
				(LK mein)
				[01;31m(NF[00m
					(SIMPX
						(VF das)
						(LK ist)
						(MF mir zu fruh))[01;31m)[00m))))
Step:Different label
{'family': ['APPR', 'NX'], 'auto preterminal span': (26, 30), 'span': (26, 30), 'subtrees': ['ADVX', 'NX'], 'parent': 'PX', 'over_word': False, 'auto preterminals': ('ADV', 'CARD', 'NN', 'CARD'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('PX', 'NX')}
(TOP
	(TURN
		(SU genau)
		(SU also ich kucke kurz mal nach)
		(SU
			[01;31m(SIMPX[00m
				[01;31m(LV[00m
					[01;31m(PX[00m
						(APPR bei)
						(NX den zugverbindungen die ich hier habe)[01;31m)[00m[01;31m)[00m
				(VF das)
				(LK sind)
				[01;31m(MF[00m
					(NX
						(NX munchen)
						(NX hannover))[01;31m)[00m
				[01;31m(NF[00m [01;33m(PX[00m
					(PX
						(APPR mit)
						(NX dem ice))[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				(VF das)
				(LK sind)
				(MF
					[01;31m(NX[00m
						[01;31m(NX[00m
							(ADJX stundliche)
							(NN verbindungen)[01;31m)[00m
						(PX ab morgens vier uhr dreiundvierzig)[01;31m)[00m)[01;31m)[00m) [01;33mPX)[00m
		(SU
			(DM also)
			(SIMPX
				(VF ich)
				(LK mein)
				[01;31m(NF[00m
					(SIMPX
						(VF das)
						(LK ist)
						(MF mir zu fruh))[01;31m)[00m))))
Step:Unary
{'subtrees': ['APPR', 'NX'], 'family': ['PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NN', 'PRELS', 'PPER', 'ADV', 'VAFIN'), 'right siblings': [], 'parent': 'LV', 'auto preterminal span': (7, 14), 'span': (7, 14), 'left siblings': [], 'label': 'PX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU genau)
		(SU also ich kucke kurz mal nach)
		(SU
			[01;31m(SIMPX[00m
				[01;31m(LV[00m
					(APPR bei)
					(NX den zugverbindungen die ich hier habe)[01;31m)[00m
				(VF das)
				(LK sind)
				[01;31m(MF[00m
					(NX
						(NX munchen)
						(NX hannover))[01;31m)[00m
				[01;31m(NF[00m [01;33m(PX[00m
					(PX
						(APPR mit)
						(NX dem ice))[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				(VF das)
				(LK sind)
				(MF
					[01;31m(NX[00m
						[01;31m(NX[00m
							(ADJX stundliche)
							(NN verbindungen)[01;31m)[00m
						(PX ab morgens vier uhr dreiundvierzig)[01;31m)[00m)[01;31m)[00m) [01;33mPX)[00m
		(SU
			(DM also)
			(SIMPX
				(VF ich)
				(LK mein)
				[01;31m(NF[00m
					(SIMPX
						(VF das)
						(LK ist)
						(MF mir zu fruh))[01;31m)[00m))))
Step:UNSET remove
{'subtrees': ['APPR', 'NX'], 'family': ['LV', 'VF', 'LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NN', 'PRELS', 'PPER', 'ADV', 'VAFIN', 'PDS', 'VAFIN', 'NE', 'NE', 'APPR', 'ART', 'NE'), 'right siblings': ['VF', 'LK', 'MF', 'NF'], 'parent': 'SIMPX', 'auto preterminal span': (7, 21), 'span': (7, 14), 'left siblings': [], 'label': 'LV', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU genau)
		(SU also ich kucke kurz mal nach)
		(SU
			[01;31m(SIMPX[00m
				(APPR bei)
				(NX den zugverbindungen die ich hier habe)
				(VF das)
				(LK sind)
				[01;31m(MF[00m
					(NX
						(NX munchen)
						(NX hannover))[01;31m)[00m
				[01;31m(NF[00m [01;33m(PX[00m
					(PX
						(APPR mit)
						(NX dem ice))[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				(VF das)
				(LK sind)
				(MF
					[01;31m(NX[00m
						[01;31m(NX[00m
							(ADJX stundliche)
							(NN verbindungen)[01;31m)[00m
						(PX ab morgens vier uhr dreiundvierzig)[01;31m)[00m)[01;31m)[00m) [01;33mPX)[00m
		(SU
			(DM also)
			(SIMPX
				(VF ich)
				(LK mein)
				[01;31m(NF[00m
					(SIMPX
						(VF das)
						(LK ist)
						(MF mir zu fruh))[01;31m)[00m))))
Step:UNSET remove
{'subtrees': ['APPR', 'NX', 'VF', 'LK', 'MF', 'NF'], 'family': ['SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NN', 'PRELS', 'PPER', 'ADV', 'VAFIN', 'PDS', 'VAFIN', 'NE', 'NE', 'APPR', 'ART', 'NE', 'PDS', 'VAFIN', 'ADJA', 'NN', 'APPR', 'ADV', 'CARD', 'NN', 'CARD'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (7, 30), 'span': (7, 21), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU genau)
		(SU also ich kucke kurz mal nach)
		(SU
			(APPR bei)
			(NX den zugverbindungen die ich hier habe)
			(VF das)
			(LK sind)
			[01;31m(MF[00m
				(NX
					(NX munchen)
					(NX hannover))[01;31m)[00m
			[01;36m(PX[00m
				[01;31m(NF[00m
					(PX
						(APPR mit)
						(NX dem ice))[01;31m)[00m
				[01;31m(SIMPX[00m
					(VF das)
					(LK sind)
					(MF
						[01;31m(NX[00m
							[01;31m(NX[00m
								(ADJX stundliche)
								(NN verbindungen)[01;31m)[00m
							(PX ab morgens vier uhr dreiundvierzig)[01;31m)[00m)[01;31m)[00m[01;36m)[00m)
		(SU
			(DM also)
			(SIMPX
				(VF ich)
				(LK mein)
				[01;31m(NF[00m
					(SIMPX
						(VF das)
						(LK ist)
						(MF mir zu fruh))[01;31m)[00m))))
Step:Clause Attachment
{'subtrees': ['NF', 'SIMPX'], 'family': ['APPR', 'NX', 'VF', 'LK', 'MF', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NE', 'PDS', 'VAFIN', 'ADJA', 'NN', 'APPR', 'ADV', 'CARD', 'NN', 'CARD'), 'right siblings': [], 'left siblings': [(APPR bei), (NX (NX (ART den) (NN zugverbindungen)) (R (C (NX (PRELS die))) (MF (NX (PPER ich)) (ADVX (ADV hier))) (VC (VXFIN (VAFIN habe))))), (VF (NX (PDS das))), (LK (VXFIN (VAFIN sind))), (MF (NX (NX (NE munchen)) (NX (NE hannover))))], 'auto preterminal span': (18, 30), 'span': (18, 30), 'parent': 'SU', 'label': 'PX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU genau)
		(SU also ich kucke kurz mal nach)
		(SU
			(APPR bei)
			(NX den zugverbindungen die ich hier habe)
			(VF das)
			(LK sind)
			[01;31m(MF[00m
				(NX
					(NX munchen)
					(NX hannover))[01;31m)[00m
			(PX
				[01;31m(NF[00m
					(PX
						(APPR mit)
						(NX dem ice))[01;31m)[00m
				[01;31m(SIMPX[00m
					(VF das)
					(LK sind)
					(MF
						[01;31m(NX[00m
							[01;31m(NX[00m
								(ADJX stundliche)
								(NN verbindungen)[01;31m)[00m
							(PX ab morgens vier uhr dreiundvierzig)[01;31m)[00m)[01;31m)[00m))
		(SU
			(DM also)
			(SIMPX
				(VF ich)
				(LK mein)
				[01;31m(NF[00m
					(SIMPX
						(VF das)
						(LK ist)
						(MF mir zu fruh))[01;31m)[00m))))
Step:Unary
{'subtrees': ['NX'], 'family': ['APPR', 'NX', 'VF', 'LK', 'MF', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NN', 'PRELS', 'PPER', 'ADV', 'VAFIN', 'PDS', 'VAFIN', 'NE', 'NE', 'APPR', 'ART', 'NE', 'PDS', 'VAFIN', 'ADJA', 'NN', 'APPR', 'ADV', 'CARD', 'NN', 'CARD'), 'right siblings': ['PX'], 'parent': 'SU', 'auto preterminal span': (7, 30), 'span': (16, 18), 'left siblings': ['APPR', 'NX', 'VF', 'LK'], 'label': 'MF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU genau)
		(SU also ich kucke kurz mal nach)
		(SU
			(APPR bei)
			(NX den zugverbindungen die ich hier habe)
			(VF das)
			(LK sind)
			(NX munchen hannover)
			(PX
				[01;31m(NF[00m
					(PX
						(APPR mit)
						(NX dem ice))[01;31m)[00m
				[01;31m(SIMPX[00m
					(VF das)
					(LK sind)
					(MF
						[01;31m(NX[00m
							[01;31m(NX[00m
								(ADJX stundliche)
								(NN verbindungen)[01;31m)[00m
							(PX ab morgens vier uhr dreiundvierzig)[01;31m)[00m)[01;31m)[00m))
		(SU
			(DM also)
			(SIMPX
				(VF ich)
				(LK mein)
				[01;31m(NF[00m
					(SIMPX
						(VF das)
						(LK ist)
						(MF mir zu fruh))[01;31m)[00m))))
Step:Unary
{'subtrees': ['PX'], 'family': ['NF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NE', 'PDS', 'VAFIN', 'ADJA', 'NN', 'APPR', 'ADV', 'CARD', 'NN', 'CARD'), 'right siblings': ['SIMPX'], 'parent': 'PX', 'auto preterminal span': (18, 30), 'span': (18, 21), 'left siblings': [], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU genau)
		(SU also ich kucke kurz mal nach)
		(SU
			(APPR bei)
			(NX den zugverbindungen die ich hier habe)
			(VF das)
			(LK sind)
			(NX munchen hannover)
			(PX
				(PX mit dem ice)
				[01;31m(SIMPX[00m
					(VF das)
					(LK sind)
					(MF
						[01;31m(NX[00m
							[01;31m(NX[00m
								(ADJX stundliche)
								(NN verbindungen)[01;31m)[00m
							(PX ab morgens vier uhr dreiundvierzig)[01;31m)[00m)[01;31m)[00m))
		(SU
			(DM also)
			(SIMPX
				(VF ich)
				(LK mein)
				[01;31m(NF[00m
					(SIMPX
						(VF das)
						(LK ist)
						(MF mir zu fruh))[01;31m)[00m))))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['PX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NE', 'PDS', 'VAFIN', 'ADJA', 'NN', 'APPR', 'ADV', 'CARD', 'NN', 'CARD'), 'right siblings': [], 'parent': 'PX', 'auto preterminal span': (18, 30), 'span': (21, 30), 'left siblings': ['PX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU genau)
		(SU also ich kucke kurz mal nach)
		(SU
			(APPR bei)
			(NX den zugverbindungen die ich hier habe)
			(VF das)
			(LK sind)
			(NX munchen hannover)
			(PX
				(PX mit dem ice)
				(VF das)
				(LK sind)
				(MF
					[01;31m(NX[00m
						[01;31m(NX[00m
							(ADJX stundliche)
							(NN verbindungen)[01;31m)[00m
						(PX ab morgens vier uhr dreiundvierzig)[01;31m)[00m)))
		(SU
			(DM also)
			(SIMPX
				(VF ich)
				(LK mein)
				[01;31m(NF[00m
					(SIMPX
						(VF das)
						(LK ist)
						(MF mir zu fruh))[01;31m)[00m))))
Step:UNSET remove
{'subtrees': ['ADJX', 'NN'], 'family': ['NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJA', 'NN', 'APPR', 'ADV', 'CARD', 'NN', 'CARD'), 'right siblings': ['PX'], 'parent': 'NX', 'auto preterminal span': (23, 30), 'span': (23, 25), 'left siblings': [], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU genau)
		(SU also ich kucke kurz mal nach)
		(SU
			(APPR bei)
			(NX den zugverbindungen die ich hier habe)
			(VF das)
			(LK sind)
			(NX munchen hannover)
			(PX
				(PX mit dem ice)
				(VF das)
				(LK sind)
				(MF
					[01;31m(NX[00m
						(ADJX stundliche)
						(NN verbindungen)
						(PX ab morgens vier uhr dreiundvierzig)[01;31m)[00m)))
		(SU
			(DM also)
			(SIMPX
				(VF ich)
				(LK mein)
				[01;31m(NF[00m
					(SIMPX
						(VF das)
						(LK ist)
						(MF mir zu fruh))[01;31m)[00m))))
Step:Unary
{'subtrees': ['ADJX', 'NN', 'PX'], 'family': ['NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJA', 'NN', 'APPR', 'ADV', 'CARD', 'NN', 'CARD'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (23, 30), 'span': (23, 30), 'left siblings': [], 'label': 'NX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU genau)
		(SU also ich kucke kurz mal nach)
		(SU bei den zugverbindungen die ich hier habe das sind munchen hannover mit dem ice das sind stundliche verbindungen ab morgens vier uhr dreiundvierzig)
		(SU
			(DM also)
			(SIMPX
				(VF ich)
				(LK mein)
				[01;31m(NF[00m
					(SIMPX
						(VF das)
						(LK ist)
						(MF mir zu fruh))[01;31m)[00m))))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['VF', 'LK', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'PDS', 'VAFIN', 'PPER', 'PTKA', 'ADJD'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (31, 38), 'span': (33, 38), 'left siblings': ['VF', 'LK'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP genau also ich kucke kurz mal nach bei den zugverbindungen die ich hier habe das sind munchen hannover mit dem ice das sind stundliche verbindungen ab morgens vier uhr dreiundvierzig also ich mein das ist mir zu fruh)

Sentence 482:
0 Initial errors
0 on fringe, 0 iterations

Sentence 483:
9 Initial errors
0 on fringe, 5 iterations
3 Error:UNSET move
2 Error:Different label
2 Error:Different label
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU okay)
		(SU den ice nehmen wir)
		(SU
			(SIMPX wir wissen wann wir fahren)
			[01;31m(SIMPX[00m
				(VF wir)
				[01;36m(VC[00m [01;31m(LK[00m
					(VXFIN
						(VVFIN wissen))[01;31m)[00m[01;36m)[00m
				[01;33m(SIMPX (NF (SIMPX[00m (NF wohin wir fahren)[01;31m)[00m
			[01;31m(SIMPX[00m
				(VF wir)
				[01;36m(VC[00m [01;31m(LK[00m
					(VXFIN
						(VVFIN wissen))[01;31m)[00m [01;33mSIMPX)[00m[01;36m)[00m
				(NF wo wir schlafen)[01;31m)[00m [01;33mNF) SIMPX)[00m
			(SIMPX wir wissen aber noch nicht was wir abends machen))))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['NF', 'VF', 'LK', 'NF'], 'mover info': [('NF', (12, 15))], 'old_family': ['VF', 'LK', 'NF'], 'start left siblings': ['VF', 'LK'], 'auto preterminals': ('PPER', 'VVFIN', 'PWAV', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'PWAV', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'PWAV', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'PTKNEG', 'PWS', 'PPER', 'ADV', 'VVFIN'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (5, 29), 'adding node already present': False, 'movers': ['NF'], 'old_parent': 'SIMPX', 'added and moved': True, 'end right siblings': ['VF', 'LK', 'NF'], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'VC'}
(TOP
	(TURN
		(SU okay)
		(SU den ice nehmen wir)
		(SU
			(SIMPX wir wissen wann wir fahren)
			[01;31m(SIMPX[00m
				(VF wir)
				[01;36m(VC[00m [01;31m(LK[00m
					(VXFIN
						(VVFIN wissen))[01;31m)[00m[01;36m)[00m[01;31m)[00m
			[01;36m(NF[00m
				(SIMPX
					(SIMPX
						(NF wohin wir fahren)
						(VF wir)
						[01;36m(VC[00m [01;31m(LK[00m
							(VXFIN
								(VVFIN wissen))[01;31m)[00m[01;36m)[00m)
					(NF wo wir schlafen))[01;36m)[00m
			(SIMPX wir wissen aber noch nicht was wir abends machen))))
Step:Different label
{'family': ['VF', 'VC'], 'auto preterminal span': (11, 12), 'span': (11, 12), 'subtrees': ['VXFIN'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('VVFIN',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('LK', 'VC')}
(TOP
	(TURN
		(SU okay)
		(SU den ice nehmen wir)
		(SU
			(SIMPX wir wissen wann wir fahren)
			[01;31m(SIMPX[00m
				(VF wir)
				(VC wissen)[01;31m)[00m
			[01;36m(NF[00m
				(SIMPX
					(SIMPX
						(NF wohin wir fahren)
						(VF wir)
						[01;36m(VC[00m [01;31m(LK[00m
							(VXFIN
								(VVFIN wissen))[01;31m)[00m[01;36m)[00m)
					(NF wo wir schlafen))[01;36m)[00m
			(SIMPX wir wissen aber noch nicht was wir abends machen))))
Step:Different label
{'family': ['NF', 'VF', 'VC'], 'auto preterminal span': (16, 17), 'span': (16, 17), 'subtrees': ['VXFIN'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('VVFIN',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('LK', 'VC')}
(TOP
	(TURN
		(SU okay)
		(SU den ice nehmen wir)
		(SU
			(SIMPX wir wissen wann wir fahren)
			[01;31m(SIMPX[00m
				(VF wir)
				(VC wissen)[01;31m)[00m
			[01;36m(NF[00m
				(SIMPX
					(SIMPX wohin wir fahren wir wissen)
					(NF wo wir schlafen))[01;36m)[00m
			(SIMPX wir wissen aber noch nicht was wir abends machen))))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SIMPX', 'SIMPX', 'NF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PWAV', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'PWAV', 'PPER', 'VVFIN'), 'right siblings': [(SIMPX (VF (NX (PPER wir))) (LK (VXFIN (VVFIN wissen))) (MF (ADVX (ADV aber)) (ADVX (ADVX (ADV noch)) (PTKNEG nicht))) (NF (SIMPX (C (NX (PWS was))) (MF (NX (PPER wir)) (ADVX (ADV abends))) (VC (VXFIN (VVFIN machen))))))], 'left siblings': [(SIMPX (VF (NX (PPER wir))) (LK (VXFIN (VVFIN wissen))) (NF (SIMPX (C (PX (PWAV wann))) (MF (NX (PPER wir))) (VC (VXFIN (VVFIN fahren)))))), (SIMPX (VF (NX (PPER wir))) (VC (VXFIN (VVFIN wissen))))], 'auto preterminal span': (12, 20), 'span': (12, 20), 'parent': 'SU', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU okay)
		(SU den ice nehmen wir)
		(SU
			(SIMPX wir wissen wann wir fahren)
			[01;31m(SIMPX[00m
				(VF wir)
				(VC wissen)[01;31m)[00m
			(NF wohin wir fahren wir wissen wo wir schlafen)
			(SIMPX wir wissen aber noch nicht was wir abends machen))))
Step:UNSET remove
{'subtrees': ['VF', 'VC'], 'family': ['SIMPX', 'SIMPX', 'NF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'PWAV', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'PWAV', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'PWAV', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'PTKNEG', 'PWS', 'PPER', 'ADV', 'VVFIN'), 'right siblings': ['NF', 'SIMPX'], 'parent': 'SU', 'auto preterminal span': (5, 29), 'span': (10, 12), 'left siblings': ['SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP okay den ice nehmen wir wir wissen wann wir fahren wir wissen wohin wir fahren wir wissen wo wir schlafen wir wissen aber noch nicht was wir abends machen)

Sentence 484:
8 Initial errors
0 on fringe, 5 iterations
2 Error:Single Word Phrase
2 Error:Different label
2 Error:Different label
1 Error:Modifier Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU am neunten juli)
		(SU
			(SIMPX
				(VF ich)
				(LK mus)
				[01;36m(MF[00m [01;36m(ADJX[00m [01;31m(VC[00m
					[01;31m(VXINF[00m
						(VVINF uberlegen)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m))
		(SU
			(SIMPX
				(LK ist)
				[01;36m(VF[00m [01;31m(MF[00m
					(NX
						(PDS das))[01;31m)[00m[01;36m)[00m)
			(SIMPX
				(LK gibt)
				[01;31m(MF[00m
					(NX es)
					(ADVX da)
					(ADVX irgendwie)
					(NX was)[01;31m)[00m
				[01;31m(NF[00m
					(NX
						(ART einen)
						(ADJX interessanten)
						(NN feiertag))[01;31m)[00m))
		(SU nein)))
Step:Single Word Phrase
{'family': ['ADJX'], 'auto preterminal span': (5, 6), 'span': (5, 6), 'subtrees': ['VVINF'], 'parent': 'VC', 'over_word': True, 'auto preterminals': ('VVINF',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VXINF', 'ADJX')}
(TOP
	(TURN
		(SU am neunten juli)
		(SU
			(SIMPX
				(VF ich)
				(LK mus)
				[01;36m(MF[00m [01;31m(VC[00m
					(ADJX
						(VVINF uberlegen))[01;31m)[00m[01;36m)[00m))
		(SU
			(SIMPX
				(LK ist)
				[01;36m(VF[00m [01;31m(MF[00m
					(NX
						(PDS das))[01;31m)[00m[01;36m)[00m)
			(SIMPX
				(LK gibt)
				[01;31m(MF[00m
					(NX es)
					(ADVX da)
					(ADVX irgendwie)
					(NX was)[01;31m)[00m
				[01;31m(NF[00m
					(NX
						(ART einen)
						(ADJX interessanten)
						(NN feiertag))[01;31m)[00m))
		(SU nein)))
Step:Different label
{'family': ['VF', 'LK', 'MF'], 'auto preterminal span': (5, 6), 'span': (5, 6), 'subtrees': ['ADJX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('VVINF',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('VC', 'MF')}
(TOP
	(TURN
		(SU am neunten juli)
		(SU ich mus uberlegen)
		(SU
			(SIMPX
				(LK ist)
				[01;36m(VF[00m [01;31m(MF[00m
					(NX
						(PDS das))[01;31m)[00m[01;36m)[00m)
			(SIMPX
				(LK gibt)
				[01;31m(MF[00m
					(NX es)
					(ADVX da)
					(ADVX irgendwie)
					(NX was)[01;31m)[00m
				[01;31m(NF[00m
					(NX
						(ART einen)
						(ADJX interessanten)
						(NN feiertag))[01;31m)[00m))
		(SU nein)))
Step:Different label
{'family': ['LK', 'VF'], 'auto preterminal span': (7, 8), 'span': (7, 8), 'subtrees': ['NX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('PDS',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('MF', 'VF')}
(TOP
	(TURN
		(SU am neunten juli)
		(SU ich mus uberlegen)
		(SU
			(SIMPX ist das)
			(SIMPX
				(LK gibt)
				[01;31m(MF[00m
					(NX es)
					(ADVX da)
					(ADVX irgendwie)
					(NX was)[01;31m)[00m
				[01;31m(NF[00m
					(NX
						(ART einen)
						(ADJX interessanten)
						(NN feiertag))[01;31m)[00m))
		(SU nein)))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADVX', 'ADVX', 'NX'], 'family': ['LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'ADV', 'ADV', 'PIS', 'ART', 'ADJA', 'NN'), 'right siblings': ['NF'], 'parent': 'SIMPX', 'auto preterminal span': (8, 16), 'span': (9, 13), 'left siblings': ['LK'], 'label': 'MF', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU am neunten juli)
		(SU ich mus uberlegen)
		(SU
			(SIMPX ist das)
			(SIMPX
				(LK gibt)
				(NX es)
				(ADVX da)
				(ADVX irgendwie)
				(NX was)
				[01;31m(NF[00m
					(NX
						(ART einen)
						(ADJX interessanten)
						(NN feiertag))[01;31m)[00m))
		(SU nein)))
Step:Unary
{'subtrees': ['NX'], 'family': ['LK', 'NX', 'ADVX', 'ADVX', 'NX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'ADV', 'ADV', 'PIS', 'ART', 'ADJA', 'NN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (8, 16), 'span': (13, 16), 'left siblings': ['LK', 'NX', 'ADVX', 'ADVX', 'NX'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP am neunten juli ich mus uberlegen ist das gibt es da irgendwie was einen interessanten feiertag nein)

Sentence 485:
6 Initial errors
0 on fringe, 6 iterations
1 Error:Single Word Phrase
1 Error:Modifier Attachment
1 Error:Unary
1 Error:Co-ordination
1 Error:UNSET add
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM okay)
			(SIMPX
				(VF dann)
				(LK sage)
				(MF ich einfach mal)
				(NF
					(SIMPX
						(VF von mir aus)
						(LK gehen)
						(MF wir ins kino)
						[01;36m(ADVX[00m
							(KOUS wenn)[01;36m)[00m
						(APPR bei)
						(KOUS wenn)
						[01;31m(NF[00m
							(SIMPX
								(C wenn)
								(MF die was)
								(VC anbieten))[01;31m)[00m))))
		(SU oder wir gehen in eine kneipe)
		(SU
			(DM also)
			(SIMPX
				(VF ich)
				(LK wurde)
				(VC sagen)
				(NF
					(SIMPX
						(VF wir)
						(LK brauchen)
						(MF
							(NX das)
							[01;36m(ADVX[00m
								(ADVX gar nicht)
								(ADVX weiter)[01;36m)[00m)
						(VC planen)))))
		(SU
			(SIMPX
				(VF wir)
				(FKOORD
					[01;31m(LKMN[00m
						(LK kucken)
						(MF einfach)
						[01;33m(SIMPX (NF[00m (NF wie die sache lauft da)[01;31m)[00m
					(KON und)
					(LKMVC gehen dann abends aus)))))) [01;33mNF) SIMPX)[00m
Step:Single Word Phrase
{'subtrees': ['KOUS'], 'family': ['VF', 'LK', 'MF', 'ADVX', 'APPR', 'KOUS', 'NF'], 'over_word': True, 'over words': True, 'auto preterminals': ('KOUS',), 'right siblings': [(APPR bei), (KOUS wenn), (NF (SIMPX (C (KOUS wenn)) (MF (NX (PDS die)) (NX (PIS was))) (VC (VXFIN (VVFIN anbieten)))))], 'left siblings': [(VF (PX (APPR von) (NX (PPER mir)) (APZR aus))), (LK (VXFIN (VVFIN gehen))), (MF (NX (PPER wir)) (PX (APPRART ins) (NX (NN kino))))], 'auto preterminal span': (13, 14), 'span': (13, 14), 'parent': 'SIMPX', 'label': 'ADVX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM okay)
			(SIMPX
				(VF dann)
				(LK sage)
				(MF ich einfach mal)
				(NF
					(SIMPX
						(VF von mir aus)
						(LK gehen)
						(MF wir ins kino)
						(ADVX wenn)
						(APPR bei)
						(KOUS wenn)
						[01;31m(NF[00m
							(SIMPX
								(C wenn)
								(MF die was)
								(VC anbieten))[01;31m)[00m))))
		(SU oder wir gehen in eine kneipe)
		(SU
			(DM also)
			(SIMPX
				(VF ich)
				(LK wurde)
				(VC sagen)
				(NF
					(SIMPX
						(VF wir)
						(LK brauchen)
						(MF
							(NX das)
							[01;36m(ADVX[00m
								(ADVX gar nicht)
								(ADVX weiter)[01;36m)[00m)
						(VC planen)))))
		(SU
			(SIMPX
				(VF wir)
				(FKOORD
					[01;31m(LKMN[00m
						(LK kucken)
						(MF einfach)
						[01;33m(SIMPX (NF[00m (NF wie die sache lauft da)[01;31m)[00m
					(KON und)
					(LKMVC gehen dann abends aus)))))) [01;33mNF) SIMPX)[00m
Step:Modifier Attachment
{'subtrees': ['ADVX', 'ADVX'], 'family': ['NX', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PTKNEG', 'ADV'), 'right siblings': [], 'left siblings': [(NX (PDS das))], 'auto preterminal span': (33, 36), 'span': (33, 36), 'parent': 'MF', 'label': 'ADVX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM okay)
			(SIMPX
				(VF dann)
				(LK sage)
				(MF ich einfach mal)
				(NF
					(SIMPX
						(VF von mir aus)
						(LK gehen)
						(MF wir ins kino)
						(ADVX wenn)
						(APPR bei)
						(KOUS wenn)
						[01;31m(NF[00m
							(SIMPX
								(C wenn)
								(MF die was)
								(VC anbieten))[01;31m)[00m))))
		(SU oder wir gehen in eine kneipe)
		(SU also ich wurde sagen wir brauchen das gar nicht weiter planen)
		(SU
			(SIMPX
				(VF wir)
				(FKOORD
					[01;31m(LKMN[00m
						(LK kucken)
						(MF einfach)
						[01;33m(SIMPX (NF[00m (NF wie die sache lauft da)[01;31m)[00m
					(KON und)
					(LKMVC gehen dann abends aus)))))) [01;33mNF) SIMPX)[00m
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['VF', 'LK', 'MF', 'ADVX', 'APPR', 'KOUS', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'PPER', 'APZR', 'VVFIN', 'PPER', 'APPRART', 'NN', 'KOUS', 'APPR', 'KOUS', 'KOUS', 'PDS', 'PIS', 'VVFIN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (6, 20), 'span': (16, 20), 'left siblings': ['VF', 'LK', 'MF', 'ADVX', 'APPR', 'KOUS'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU okay dann sage ich einfach mal von mir aus gehen wir ins kino wenn bei wenn wenn die was anbieten)
		(SU oder wir gehen in eine kneipe)
		(SU also ich wurde sagen wir brauchen das gar nicht weiter planen)
		(SU
			(SIMPX
				(VF wir)
				(FKOORD
					[01;31m(LKMN[00m
						(LK kucken)
						(MF einfach)
						[01;33m(SIMPX (NF[00m (NF wie die sache lauft da)[01;31m)[00m
					(KON und)
					(LKMVC gehen dann abends aus)))))) [01;33mNF) SIMPX)[00m
Step:Co-ordination
{'subtrees': ['LK', 'MF', 'NF'], 'family': ['LKMN', 'KON', 'LKMVC'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'ADV', 'KOUS', 'ART', 'NN', 'VVFIN', 'ADV', 'KON', 'VVFIN', 'ADV', 'ADV', 'PTKVZ'), 'right siblings': ['KON', 'LKMVC'], 'parent': 'FKOORD', 'auto preterminal span': (38, 50), 'span': (38, 45), 'left siblings': [], 'label': 'LKMN', 'classified_type': 'Co-ordination', 'type': 'remove'}
(TOP
	(TURN
		(SU okay dann sage ich einfach mal von mir aus gehen wir ins kino wenn bei wenn wenn die was anbieten)
		(SU oder wir gehen in eine kneipe)
		(SU also ich wurde sagen wir brauchen das gar nicht weiter planen)
		(SU
			(SIMPX
				(VF wir)
				(FKOORD
					(LK kucken)
					(MF einfach)
					[01;36m(NF[00m
						[01;36m(SIMPX[00m
							(NF wie die sache lauft da)
							(KON und)
							(LKMVC gehen dann abends aus)[01;36m)[00m[01;36m)[00m)))))
Step:UNSET add
{'subtrees': ['NF', 'KON', 'LKMVC'], 'family': ['LK', 'MF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'ART', 'NN', 'VVFIN', 'ADV', 'KON', 'VVFIN', 'ADV', 'ADV', 'PTKVZ'), 'right siblings': [], 'left siblings': [(LK (VXFIN (VVFIN kucken))), (MF (ADVX (ADV einfach)))], 'auto preterminal span': (40, 50), 'span': (40, 50), 'parent': 'FKOORD', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU okay dann sage ich einfach mal von mir aus gehen wir ins kino wenn bei wenn wenn die was anbieten)
		(SU oder wir gehen in eine kneipe)
		(SU also ich wurde sagen wir brauchen das gar nicht weiter planen)
		(SU
			(SIMPX
				(VF wir)
				(FKOORD
					(LK kucken)
					(MF einfach)
					[01;36m(NF[00m
						(SIMPX
							(NF wie die sache lauft da)
							(KON und)
							(LKMVC gehen dann abends aus))[01;36m)[00m)))))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'ART', 'NN', 'VVFIN', 'ADV', 'KON', 'VVFIN', 'ADV', 'ADV', 'PTKVZ'), 'right siblings': [], 'left siblings': [(LK (VXFIN (VVFIN kucken))), (MF (ADVX (ADV einfach)))], 'auto preterminal span': (40, 50), 'span': (40, 50), 'parent': 'FKOORD', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP okay dann sage ich einfach mal von mir aus gehen wir ins kino wenn bei wenn wenn die was anbieten oder wir gehen in eine kneipe also ich wurde sagen wir brauchen das gar nicht weiter planen wir kucken einfach wie die sache lauft da und gehen dann abends aus)

Sentence 486:
3 Initial errors
0 on fringe, 3 iterations
1 Error:Unary
1 Error:UNSET add
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM okay)
			(DM
				[01;31m(NX[00m
					(NE peter)[01;31m)[00m))
		(SU
			(SIMPX
				(VF von mir aus)
				(LK hatte)
				(MF ich alles)
				[01;36m(NX[00m
					[01;36m(C[00m
						(NX
							(PRELS was))[01;36m)[00m
					(NX ich)[01;36m)[00m
				(NF was ich brauchte))
			(KON und))))
Step:Unary
{'subtrees': ['NX'], 'family': ['VF', 'LK', 'MF', 'C', 'NX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PRELS',), 'right siblings': [(NX (PPER ich)), (NF (R (C (NX (PRELS was))) (MF (NX (PPER ich))) (VC (VXFIN (VVFIN brauchte)))))], 'left siblings': [(VF (PX (APPR von) (NX (PPER mir)) (APZR aus))), (LK (VXFIN (VAFIN hatte))), (MF (NX (PPER ich)) (NX (PIS alles)))], 'auto preterminal span': (8, 9), 'span': (8, 9), 'parent': 'SIMPX', 'label': 'C', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM okay)
			(DM
				[01;31m(NX[00m
					(NE peter)[01;31m)[00m))
		(SU
			(SIMPX
				(VF von mir aus)
				(LK hatte)
				(MF ich alles)
				[01;36m(NX[00m
					(C was)
					(NX ich)[01;36m)[00m
				(NF was ich brauchte))
			(KON und))))
Step:UNSET add
{'subtrees': ['C', 'NX'], 'family': ['VF', 'LK', 'MF', 'NX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PRELS', 'PPER'), 'right siblings': [(NF (R (C (NX (PRELS was))) (MF (NX (PPER ich))) (VC (VXFIN (VVFIN brauchte)))))], 'left siblings': [(VF (PX (APPR von) (NX (PPER mir)) (APZR aus))), (LK (VXFIN (VAFIN hatte))), (MF (NX (PPER ich)) (NX (PIS alles)))], 'auto preterminal span': (8, 10), 'span': (8, 10), 'parent': 'SIMPX', 'label': 'NX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM okay)
			(DM
				[01;31m(NX[00m
					(NE peter)[01;31m)[00m))
		(SU von mir aus hatte ich alles was ich was ich brauchte und)))
Step:Single Word Phrase
{'subtrees': ['NE'], 'family': ['NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('NE',), 'right siblings': [], 'parent': 'DM', 'auto preterminal span': (1, 2), 'span': (1, 2), 'left siblings': [], 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP okay peter von mir aus hatte ich alles was ich was ich brauchte und)

Sentence 487:
0 Initial errors
0 on fringe, 0 iterations

Sentence 488:
4 Initial errors
0 on fringe, 4 iterations
1 Error:Co-ordination
1 Error:Unary
1 Error:UNSET remove
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU das klingt so euphorisch)
		(SU hannover)
		[01;36m(SU[00m
			(SU na gut)
			(SU wenn es denn sein mus)[01;36m)[00m
		(SU
			(DM ja)
			[01;31m(SIMPX[00m
				(VF ich)
				(LK sage)
				[01;31m(MF[00m
					(NX es)
					(NX dir)
					(ADVX gleich)[01;31m)[00m[01;31m)[00m
			[01;36m(NF[00m
				(SIMPX
					(VF urlaub)
					(LK habe)
					(MF ich vom neunzehnten juli bis mitte august))[01;36m)[00m)))
Step:Co-ordination
{'subtrees': ['SU', 'SU'], 'family': ['SU', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ITJ', 'KOUS', 'PPER', 'ADV', 'VAINF', 'VMFIN'), 'right siblings': [(SU (DM (PTKANT ja)) (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN sage))) (MF (NX (PPER es)) (NX (PPER dir)) (ADVX (ADV gleich)))) (SIMPX (VF (NX (NN urlaub))) (LK (VXFIN (VAFIN habe))) (MF (NX (PPER ich)) (PX (PX (APPRART vom) (NX (ADJX (ADJA neunzehnten)) (NN juli))) (PX (APPR bis) (NX (NX (NN mitte)) (NX (NN august))))))))], 'left siblings': [(SU (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VVFIN klingt))) (MF (ADJX (ADVX (ADV so)) (ADJD euphorisch))))), (SU (NX (NE hannover)))], 'auto preterminal span': (5, 12), 'span': (5, 12), 'parent': 'TURN', 'label': 'SU', 'classified_type': 'Co-ordination', 'type': 'add'}
(TOP
	(TURN
		(SU das klingt so euphorisch)
		(SU hannover)
		(SU na gut wenn es denn sein mus)
		(SU
			(DM ja)
			[01;31m(SIMPX[00m
				(VF ich)
				(LK sage)
				[01;31m(MF[00m
					(NX es)
					(NX dir)
					(ADVX gleich)[01;31m)[00m[01;31m)[00m
			[01;36m(NF[00m
				(SIMPX
					(VF urlaub)
					(LK habe)
					(MF ich vom neunzehnten juli bis mitte august))[01;36m)[00m)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['DM', 'SIMPX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'VAFIN', 'PPER', 'APPRART', 'ADJA', 'NN', 'APPR', 'NN', 'NN'), 'right siblings': [], 'left siblings': [(DM (PTKANT ja)), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN sage))) (MF (NX (PPER es)) (NX (PPER dir)) (ADVX (ADV gleich))))], 'auto preterminal span': (18, 27), 'span': (18, 27), 'parent': 'SU', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU das klingt so euphorisch)
		(SU hannover)
		(SU na gut wenn es denn sein mus)
		(SU
			(DM ja)
			[01;31m(SIMPX[00m
				(VF ich)
				(LK sage)
				[01;31m(MF[00m
					(NX es)
					(NX dir)
					(ADVX gleich)[01;31m)[00m[01;31m)[00m
			(NF urlaub habe ich vom neunzehnten juli bis mitte august))))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['DM', 'SIMPX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VVFIN', 'PPER', 'PPER', 'ADV', 'NN', 'VAFIN', 'PPER', 'APPRART', 'ADJA', 'NN', 'APPR', 'NN', 'NN'), 'right siblings': ['NF'], 'parent': 'SU', 'auto preterminal span': (12, 27), 'span': (13, 18), 'left siblings': ['DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU das klingt so euphorisch)
		(SU hannover)
		(SU na gut wenn es denn sein mus)
		(SU
			(DM ja)
			(VF ich)
			(LK sage)
			[01;31m(MF[00m
				(NX es)
				(NX dir)
				(ADVX gleich)[01;31m)[00m
			(NF urlaub habe ich vom neunzehnten juli bis mitte august))))
Step:Modifier Attachment
{'subtrees': ['NX', 'NX', 'ADVX'], 'family': ['DM', 'VF', 'LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VVFIN', 'PPER', 'PPER', 'ADV', 'NN', 'VAFIN', 'PPER', 'APPRART', 'ADJA', 'NN', 'APPR', 'NN', 'NN'), 'right siblings': ['NF'], 'parent': 'SU', 'auto preterminal span': (12, 27), 'span': (15, 18), 'left siblings': ['DM', 'VF', 'LK'], 'label': 'MF', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP das klingt so euphorisch hannover na gut wenn es denn sein mus ja ich sage es dir gleich urlaub habe ich vom neunzehnten juli bis mitte august)

Sentence 489:
7 Initial errors
0 on fringe, 5 iterations
3 Error:UNSET move
1 Error:UNSET remove
1 Error:PP Attachment
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF ich)
				(LK sage)
				[01;31m(MF[00m
					(NX es)
					(NX dir)
					[01;33m(PX[00m (ADVX gleich)[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					[01;31m(PX[00m
						(APPRART im)
						(NX juli)[01;31m)[00m[01;31m)[00m [01;33mPX)[00m
				[01;36m(SIMPX[00m
					(LK wird)
					(MF es etwas knapp)[01;36m)[00m[01;31m)[00m)
		(SU da ginge nur noch der neunte zehnte)))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['NX', 'NX', 'ADVX', 'VF'], 'mover info': [('VF', (6, 8))], 'old_family': ['VF', 'LK', 'MF'], 'start left siblings': [], 'auto preterminals': ('KON', 'PPER', 'VVFIN', 'PPER', 'PPER', 'ADV', 'APPRART', 'NN', 'VAFIN', 'PPER', 'ADV', 'ADJD'), 'start right siblings': ['LK', 'MF'], 'end left siblings': ['NX', 'NX', 'ADVX'], 'auto preterminal span': (0, 12), 'adding node already present': False, 'movers': ['VF'], 'old_parent': 'SIMPX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'PX'}
(TOP
	(TURN
		(SU
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF ich)
				(LK sage)
				[01;31m(MF[00m
					(NX es)
					(NX dir)
					(PX
						(ADVX gleich)
						[01;31m(VF[00m
							[01;31m(PX[00m
								(APPRART im)
								(NX juli)[01;31m)[00m[01;31m)[00m)[01;31m)[00m[01;31m)[00m
			(SIMPX wird es etwas knapp))
		(SU da ginge nur noch der neunte zehnte)))
Step:UNSET remove
{'subtrees': ['KOORD', 'VF', 'LK', 'MF'], 'family': ['SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'PPER', 'VVFIN', 'PPER', 'PPER', 'ADV', 'APPRART', 'NN', 'VAFIN', 'PPER', 'ADV', 'ADJD'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 12), 'span': (0, 8), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(KOORD und)
			(VF ich)
			(LK sage)
			[01;31m(MF[00m
				(NX es)
				(NX dir)
				(PX
					(ADVX gleich)
					[01;31m(VF[00m
						[01;31m(PX[00m
							(APPRART im)
							(NX juli)[01;31m)[00m[01;31m)[00m)[01;31m)[00m
			(SIMPX wird es etwas knapp))
		(SU da ginge nur noch der neunte zehnte)))
Step:PP Attachment
{'subtrees': ['NX', 'NX', 'PX'], 'family': ['KOORD', 'VF', 'LK', 'MF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'PPER', 'VVFIN', 'PPER', 'PPER', 'ADV', 'APPRART', 'NN', 'VAFIN', 'PPER', 'ADV', 'ADJD'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 12), 'span': (3, 8), 'left siblings': ['KOORD', 'VF', 'LK'], 'label': 'MF', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(KOORD und)
			(VF ich)
			(LK sage)
			(NX es)
			(NX dir)
			(PX
				(ADVX gleich)
				[01;31m(VF[00m
					[01;31m(PX[00m
						(APPRART im)
						(NX juli)[01;31m)[00m[01;31m)[00m)
			(SIMPX wird es etwas knapp))
		(SU da ginge nur noch der neunte zehnte)))
Step:Unary
{'subtrees': ['PX'], 'family': ['ADVX', 'VF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'APPRART', 'NN'), 'right siblings': [], 'parent': 'PX', 'auto preterminal span': (5, 8), 'span': (6, 8), 'left siblings': ['ADVX'], 'label': 'VF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(KOORD und)
			(VF ich)
			(LK sage)
			(NX es)
			(NX dir)
			(PX
				(ADVX gleich)
				[01;31m(PX[00m
					(APPRART im)
					(NX juli)[01;31m)[00m)
			(SIMPX wird es etwas knapp))
		(SU da ginge nur noch der neunte zehnte)))
Step:UNSET remove
{'subtrees': ['APPRART', 'NX'], 'family': ['ADVX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'APPRART', 'NN'), 'right siblings': [], 'parent': 'PX', 'auto preterminal span': (5, 8), 'span': (6, 8), 'left siblings': ['ADVX'], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP und ich sage es dir gleich im juli wird es etwas knapp da ginge nur noch der neunte zehnte)

Sentence 490:
0 Initial errors
0 on fringe, 0 iterations

Sentence 491:
0 Initial errors
0 on fringe, 0 iterations

Sentence 492:
16 Initial errors
0 on fringe, 9 iterations
4 Error:NP Attachment
2 Error:Different label
2 Error:Different label
2 Error:Single Word Phrase
2 Error:PP Attachment
1 Error:NP Internal Structure
1 Error:UNSET add
1 Error:NP Internal Structure
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU brauchen wir nur noch ein hotel)
		(SU ach hotels habe ich)
		(SU ja)
		(SU zwei moglichkeiten)
		(SU
			[01;36m(PX[00m [01;31m(NX[00m
				(NX hundert zweiundvierzig mark)
				(PX im zentrum)[01;31m)[00m[01;36m)[00m
			(NX
				[01;36m(NX[00m
					(NX hundert funfunddreisig mark)
					[01;36m(NX[00m [01;31m(PX[00m
						(NX funf minuten)
						(PX vom bahnhof)[01;31m)[00m[01;36m)[00m[01;36m)[00m
				(PX mit garage)))
		[01;36m(SIMPX[00m
			(SU
				[01;31m(SIMPX[00m
					(LK brauchen)
					[01;31m(MF[00m [01;33m(MF[00m
						(NX wir)
						(ADVX eh)
						(ADVX nicht)[01;31m)[00m[01;31m)[00m
				(NX
					(ADVX so)
					[01;31m(NX[00m
						(ART ein)
						(NN quatsch)[01;31m)[00m)) [01;33mMF)[00m[01;36m)[00m
		(SU [01;33m(NX[00m
			(NX
				(KON und)
				(ADVX einmal)
				[01;31m(NX[00m
					(NX hundert sechsundachtzig mark) [01;33mNX)[00m
					(PX mit schwimmbad)[01;31m)[00m))
		(SU
			(SIMPX
				(LK hast)
				[01;36m(MF[00m
					(MF du aber eh keine zeit)
					[01;36m(ADJX[00m [01;31m(NF[00m
						[01;31m(PX[00m
							(PROP dafur)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m))
		(SU was steckt)))
Step:NP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'ADVX', 'ADVX', 'NX'], 'mover info': [('NX', (31, 34))], 'old_family': ['SIMPX', 'NX'], 'start left siblings': ['SIMPX'], 'auto preterminals': ('VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADV', 'ART', 'NN'), 'start right siblings': [], 'end left siblings': ['NX', 'ADVX', 'ADVX'], 'auto preterminal span': (27, 34), 'movers': ['NX'], 'old_parent': 'SU', 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU brauchen wir nur noch ein hotel)
		(SU ach hotels habe ich)
		(SU ja)
		(SU zwei moglichkeiten)
		(SU
			[01;36m(PX[00m [01;31m(NX[00m
				(NX hundert zweiundvierzig mark)
				(PX im zentrum)[01;31m)[00m[01;36m)[00m
			(NX
				[01;36m(NX[00m
					(NX hundert funfunddreisig mark)
					[01;36m(NX[00m [01;31m(PX[00m
						(NX funf minuten)
						(PX vom bahnhof)[01;31m)[00m[01;36m)[00m[01;36m)[00m
				(PX mit garage)))
		(SU
			(SIMPX
				(LK brauchen)
				(MF
					(NX wir)
					(ADVX eh)
					(ADVX nicht)
					(NX
						(ADVX so)
						[01;31m(NX[00m
							(ART ein)
							(NN quatsch)[01;31m)[00m))))
		(SU [01;33m(NX[00m
			(NX
				(KON und)
				(ADVX einmal)
				[01;31m(NX[00m
					(NX hundert sechsundachtzig mark) [01;33mNX)[00m
					(PX mit schwimmbad)[01;31m)[00m))
		(SU
			(SIMPX
				(LK hast)
				[01;36m(MF[00m
					(MF du aber eh keine zeit)
					[01;36m(ADJX[00m [01;31m(NF[00m
						[01;31m(PX[00m
							(PROP dafur)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m))
		(SU was steckt)))
Step:Different label
{'family': ['PX', 'NX'], 'auto preterminal span': (13, 18), 'span': (13, 18), 'subtrees': ['NX', 'PX'], 'parent': 'SU', 'over_word': False, 'auto preterminals': ('CARD', 'CARD', 'NN', 'APPRART', 'NN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('NX', 'PX')}
(TOP
	(TURN
		(SU brauchen wir nur noch ein hotel)
		(SU ach hotels habe ich)
		(SU ja)
		(SU zwei moglichkeiten)
		(SU
			(PX hundert zweiundvierzig mark im zentrum)
			(NX
				[01;36m(NX[00m
					(NX hundert funfunddreisig mark)
					[01;36m(NX[00m [01;31m(PX[00m
						(NX funf minuten)
						(PX vom bahnhof)[01;31m)[00m[01;36m)[00m[01;36m)[00m
				(PX mit garage)))
		(SU
			(SIMPX
				(LK brauchen)
				(MF
					(NX wir)
					(ADVX eh)
					(ADVX nicht)
					(NX
						(ADVX so)
						[01;31m(NX[00m
							(ART ein)
							(NN quatsch)[01;31m)[00m))))
		(SU [01;33m(NX[00m
			(NX
				(KON und)
				(ADVX einmal)
				[01;31m(NX[00m
					(NX hundert sechsundachtzig mark) [01;33mNX)[00m
					(PX mit schwimmbad)[01;31m)[00m))
		(SU
			(SIMPX
				(LK hast)
				[01;36m(MF[00m
					(MF du aber eh keine zeit)
					[01;36m(ADJX[00m [01;31m(NF[00m
						[01;31m(PX[00m
							(PROP dafur)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m))
		(SU was steckt)))
Step:Different label
{'family': ['NX', 'NX', 'PX'], 'auto preterminal span': (21, 25), 'span': (21, 25), 'subtrees': ['NX', 'PX'], 'parent': 'NX', 'over_word': False, 'auto preterminals': ('CARD', 'NN', 'APPRART', 'NN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('PX', 'NX')}
(TOP
	(TURN
		(SU brauchen wir nur noch ein hotel)
		(SU ach hotels habe ich)
		(SU ja)
		(SU zwei moglichkeiten)
		(SU
			(PX hundert zweiundvierzig mark im zentrum)
			(NX
				[01;36m(NX[00m
					(NX hundert funfunddreisig mark)
					(NX funf minuten vom bahnhof)[01;36m)[00m
				(PX mit garage)))
		(SU
			(SIMPX
				(LK brauchen)
				(MF
					(NX wir)
					(ADVX eh)
					(ADVX nicht)
					(NX
						(ADVX so)
						[01;31m(NX[00m
							(ART ein)
							(NN quatsch)[01;31m)[00m))))
		(SU [01;33m(NX[00m
			(NX
				(KON und)
				(ADVX einmal)
				[01;31m(NX[00m
					(NX hundert sechsundachtzig mark) [01;33mNX)[00m
					(PX mit schwimmbad)[01;31m)[00m))
		(SU
			(SIMPX
				(LK hast)
				[01;36m(MF[00m
					(MF du aber eh keine zeit)
					[01;36m(ADJX[00m [01;31m(NF[00m
						[01;31m(PX[00m
							(PROP dafur)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m))
		(SU was steckt)))
Step:Single Word Phrase
{'family': ['ADJX'], 'auto preterminal span': (47, 48), 'span': (47, 48), 'subtrees': ['PROP'], 'parent': 'NF', 'over_word': True, 'auto preterminals': ('PROP',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('PX', 'ADJX')}
(TOP
	(TURN
		(SU brauchen wir nur noch ein hotel)
		(SU ach hotels habe ich)
		(SU ja)
		(SU zwei moglichkeiten)
		(SU
			(PX hundert zweiundvierzig mark im zentrum)
			(NX
				[01;36m(NX[00m
					(NX hundert funfunddreisig mark)
					(NX funf minuten vom bahnhof)[01;36m)[00m
				(PX mit garage)))
		(SU
			(SIMPX
				(LK brauchen)
				(MF
					(NX wir)
					(ADVX eh)
					(ADVX nicht)
					(NX
						(ADVX so)
						[01;31m(NX[00m
							(ART ein)
							(NN quatsch)[01;31m)[00m))))
		(SU [01;33m(NX[00m
			(NX
				(KON und)
				(ADVX einmal)
				[01;31m(NX[00m
					(NX hundert sechsundachtzig mark) [01;33mNX)[00m
					(PX mit schwimmbad)[01;31m)[00m))
		(SU
			(SIMPX
				(LK hast)
				[01;36m(MF[00m
					(MF du aber eh keine zeit)
					[01;31m(NF[00m
						(ADJX
							(PROP dafur))[01;31m)[00m[01;36m)[00m))
		(SU was steckt)))
Step:PP Attachment
{'new_parent': 'SU', 'new_family': ['NX', 'PX'], 'mover info': [('PX', (39, 41))], 'old_family': ['NX', 'PX'], 'start left siblings': ['NX'], 'auto preterminals': ('KON', 'ADV', 'CARD', 'CARD', 'NN', 'APPR', 'NN'), 'start right siblings': [], 'end left siblings': ['NX'], 'auto preterminal span': (34, 41), 'adding node already present': False, 'movers': ['PX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'MF'}
(TOP
	(TURN
		(SU brauchen wir nur noch ein hotel)
		(SU ach hotels habe ich)
		(SU ja)
		(SU zwei moglichkeiten)
		(SU
			(PX hundert zweiundvierzig mark im zentrum)
			(NX
				[01;36m(NX[00m
					(NX hundert funfunddreisig mark)
					(NX funf minuten vom bahnhof)[01;36m)[00m
				(PX mit garage)))
		(SU
			(SIMPX
				(LK brauchen)
				(MF
					(NX wir)
					(ADVX eh)
					(ADVX nicht)
					(NX
						(ADVX so)
						[01;31m(NX[00m
							(ART ein)
							(NN quatsch)[01;31m)[00m))))
		(NX und einmal hundert sechsundachtzig mark mit schwimmbad)
		(SU
			(SIMPX
				(LK hast)
				[01;36m(MF[00m
					(MF du aber eh keine zeit)
					[01;31m(NF[00m
						(ADJX
							(PROP dafur))[01;31m)[00m[01;36m)[00m))
		(SU was steckt)))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'CARD', 'NN', 'CARD', 'NN', 'APPRART', 'NN'), 'right siblings': [(PX (APPR mit) (NX (NN garage)))], 'left siblings': [], 'auto preterminal span': (18, 25), 'span': (18, 25), 'parent': 'NX', 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'add'}
(TOP
	(TURN
		(SU brauchen wir nur noch ein hotel)
		(SU ach hotels habe ich)
		(SU ja)
		(SU zwei moglichkeiten)
		(SU hundert zweiundvierzig mark im zentrum hundert funfunddreisig mark funf minuten vom bahnhof mit garage)
		(SU
			(SIMPX
				(LK brauchen)
				(MF
					(NX wir)
					(ADVX eh)
					(ADVX nicht)
					(NX
						(ADVX so)
						[01;31m(NX[00m
							(ART ein)
							(NN quatsch)[01;31m)[00m))))
		(NX und einmal hundert sechsundachtzig mark mit schwimmbad)
		(SU
			(SIMPX
				(LK hast)
				[01;36m(MF[00m
					(MF du aber eh keine zeit)
					[01;31m(NF[00m
						(ADJX
							(PROP dafur))[01;31m)[00m[01;36m)[00m))
		(SU was steckt)))
Step:UNSET add
{'subtrees': ['MF', 'NF'], 'family': ['LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV', 'ADV', 'PIAT', 'NN', 'PROP'), 'right siblings': [], 'left siblings': [(LK (VXFIN (VAFIN hast)))], 'auto preterminal span': (42, 48), 'span': (42, 48), 'parent': 'SIMPX', 'label': 'MF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU brauchen wir nur noch ein hotel)
		(SU ach hotels habe ich)
		(SU ja)
		(SU zwei moglichkeiten)
		(SU hundert zweiundvierzig mark im zentrum hundert funfunddreisig mark funf minuten vom bahnhof mit garage)
		(SU
			(SIMPX
				(LK brauchen)
				(MF
					(NX wir)
					(ADVX eh)
					(ADVX nicht)
					(NX
						(ADVX so)
						[01;31m(NX[00m
							(ART ein)
							(NN quatsch)[01;31m)[00m))))
		(NX und einmal hundert sechsundachtzig mark mit schwimmbad)
		(SU
			(SIMPX
				(LK hast)
				(MF
					(MF du aber eh keine zeit)
					[01;31m(NF[00m
						(ADJX
							(PROP dafur))[01;31m)[00m)))
		(SU was steckt)))
Step:NP Internal Structure
{'subtrees': ['ART', 'NN'], 'family': ['ADVX', 'NX'], 'over_word': False, 'over words': True, 'auto preterminals': ('ADV', 'ART', 'NN'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (31, 34), 'span': (32, 34), 'left siblings': ['ADVX'], 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'remove'}
(TOP
	(TURN
		(SU brauchen wir nur noch ein hotel)
		(SU ach hotels habe ich)
		(SU ja)
		(SU zwei moglichkeiten)
		(SU hundert zweiundvierzig mark im zentrum hundert funfunddreisig mark funf minuten vom bahnhof mit garage)
		(SU brauchen wir eh nicht so ein quatsch)
		(NX und einmal hundert sechsundachtzig mark mit schwimmbad)
		(SU
			(SIMPX
				(LK hast)
				(MF
					(MF du aber eh keine zeit)
					[01;31m(NF[00m
						(ADJX
							(PROP dafur))[01;31m)[00m)))
		(SU was steckt)))
Step:Unary
{'subtrees': ['ADJX'], 'family': ['MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV', 'ADV', 'PIAT', 'NN', 'PROP'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (42, 48), 'span': (47, 48), 'left siblings': ['MF'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP brauchen wir nur noch ein hotel ach hotels habe ich ja zwei moglichkeiten hundert zweiundvierzig mark im zentrum hundert funfunddreisig mark funf minuten vom bahnhof mit garage brauchen wir eh nicht so ein quatsch und einmal hundert sechsundachtzig mark mit schwimmbad hast du aber eh keine zeit dafur was steckt)

Sentence 493:
5 Initial errors
0 on fringe, 3 iterations
2 Error:Single Word Phrase
2 Error:Modifier Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			[01;31m(SIMPX[00m
				(VF
					(SIMPX
						(VF schloshotel)
						(LK ist)
						[01;36m(MF[00m
							[01;36m(ADVX[00m [01;31m(DM[00m
								(PTKANT ja)[01;31m)[00m[01;36m)[00m
							[01;31m(MF[00m
								(ADJX
									(ADJD standesgemas))[01;31m)[00m[01;36m)[00m))
				(LK wurde)
				(MF ich)
				(VC sagen)[01;31m)[00m)
		(SU also schloshotel wird gebucht)))
Step:Single Word Phrase
{'family': ['VF', 'LK', 'ADVX', 'MF'], 'auto preterminal span': (2, 3), 'span': (2, 3), 'subtrees': ['PTKANT'], 'parent': 'SIMPX', 'over_word': True, 'auto preterminals': ('PTKANT',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('DM', 'ADVX')}
(TOP
	(TURN
		(SU
			[01;31m(SIMPX[00m
				(VF
					(SIMPX
						(VF schloshotel)
						(LK ist)
						[01;36m(MF[00m
							(ADVX ja)
							[01;31m(MF[00m
								(ADJX
									(ADJD standesgemas))[01;31m)[00m[01;36m)[00m))
				(LK wurde)
				(MF ich)
				(VC sagen)[01;31m)[00m)
		(SU also schloshotel wird gebucht)))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['ADVX', 'ADJX'], 'mover info': [('ADVX', (2, 3))], 'old_family': ['VF', 'LK', 'ADVX', 'MF'], 'start left siblings': ['VF', 'LK'], 'auto preterminals': ('NE', 'VAFIN', 'PTKANT', 'ADJD'), 'start right siblings': ['MF'], 'end left siblings': [], 'auto preterminal span': (0, 4), 'movers': ['ADVX'], 'old_parent': 'SIMPX', 'POS confusion': ('PTKANT', 'PTKANT'), 'end right siblings': ['ADJX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU
			[01;31m(SIMPX[00m
				(VF schloshotel ist ja standesgemas)
				(LK wurde)
				(MF ich)
				(VC sagen)[01;31m)[00m)
		(SU also schloshotel wird gebucht)))
Step:Unary
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NE', 'VAFIN', 'PTKANT', 'ADJD', 'VAFIN', 'PPER', 'VVINF'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (0, 7), 'span': (0, 7), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP schloshotel ist ja standesgemas wurde ich sagen also schloshotel wird gebucht)

Sentence 494:
0 Initial errors
0 on fringe, 0 iterations

Sentence 495:
0 Initial errors
0 on fringe, 0 iterations

Sentence 496:
0 Initial errors
0 on fringe, 0 iterations

Sentence 497:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Different label
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU die zweite halfte)
		(SU
			(DM ja)
			(SIMPX
				(VF zweite halfte)
				(LK sieht)
				(MF es besser)
				(VC aus)
				[01;36m(NX[00m
					(NF
						[01;31m(PX[00m
							(KOKOM als)
							(APPR in)
							(NX der ersten)[01;31m)[00m)[01;36m)[00m))
		(SU nicht vor mittwoch donnerstag)))
Step:Different label
{'family': ['NX'], 'auto preterminal span': (10, 14), 'span': (10, 14), 'subtrees': ['KOKOM', 'APPR', 'NX'], 'parent': 'NF', 'over_word': False, 'auto preterminals': ('KOKOM', 'APPR', 'ART', 'NN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('PX', 'NX')}
(TOP die zweite halfte ja zweite halfte sieht es besser aus als in der ersten nicht vor mittwoch donnerstag)

Sentence 498:
8 Initial errors
0 on fringe, 4 iterations
4 Error:NP Attachment
2 Error:Different label
1 Error:Modifier Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX
				(VF grundsatzlich)
				(LK gabe)
				[01;31m(MF[00m
					(NX es)
					(ADVX naturlich)
					[01;33m(SIMPX (NF[00m (NX die moglichkeit)[01;31m)[00m
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						[01;31m(SIMPX[00m
							(VC
								(VXINF
									(PTKZU zu)
									(VVINF fliegen)))[01;31m)[00m
						(KON beziehungsweise)
						[01;36m(MVC[00m [01;31m(SIMPX[00m
							(MF den zug)
							(VC zu nehmen)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m)) [01;33mNF) SIMPX)[00m
		(SU ich wurde vorschlagen wir fliegen da wir nur begrenzte zeit zur verfugung haben)
		(SU ich weis nicht ob ihnen das recht ist)))
Step:NP Attachment
{'new_parent': 'SIMPX', 'new_family': ['NX', 'SIMPX', 'KON', 'SIMPX'], 'mover info': [('NX', (5, 7))], 'old_family': ['NX', 'ADVX', 'NX'], 'start left siblings': ['NX', 'ADVX'], 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'ADV', 'ART', 'NN', 'PTKZU', 'VVINF', 'KON', 'ART', 'NN', 'PTKZU', 'VVINF'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (1, 14), 'movers': ['NX'], 'old_parent': 'MF', 'end right siblings': ['SIMPX', 'KON', 'SIMPX'], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX
				(VF grundsatzlich)
				(LK gabe)
				[01;31m(MF[00m
					(NX es)
					(ADVX naturlich)[01;31m)[00m
				(NF
					(SIMPX
						(NX die moglichkeit)
						[01;31m(SIMPX[00m
							(VC
								(VXINF
									(PTKZU zu)
									(VVINF fliegen)))[01;31m)[00m
						(KON beziehungsweise)
						[01;36m(MVC[00m [01;31m(SIMPX[00m
							(MF den zug)
							(VC zu nehmen)[01;31m)[00m[01;36m)[00m))))
		(SU ich wurde vorschlagen wir fliegen da wir nur begrenzte zeit zur verfugung haben)
		(SU ich weis nicht ob ihnen das recht ist)))
Step:Different label
{'family': ['NX', 'SIMPX', 'KON', 'MVC'], 'auto preterminal span': (10, 14), 'span': (10, 14), 'subtrees': ['MF', 'VC'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('ART', 'NN', 'PTKZU', 'VVINF'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('SIMPX', 'MVC')}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX
				(VF grundsatzlich)
				(LK gabe)
				[01;31m(MF[00m
					(NX es)
					(ADVX naturlich)[01;31m)[00m
				(NF
					(SIMPX
						(NX die moglichkeit)
						[01;31m(SIMPX[00m
							(VC
								(VXINF
									(PTKZU zu)
									(VVINF fliegen)))[01;31m)[00m
						(KON beziehungsweise)
						(MVC den zug zu nehmen)))))
		(SU ich wurde vorschlagen wir fliegen da wir nur begrenzte zeit zur verfugung haben)
		(SU ich weis nicht ob ihnen das recht ist)))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADVX'], 'family': ['VF', 'LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'ADV', 'ART', 'NN', 'PTKZU', 'VVINF', 'KON', 'ART', 'NN', 'PTKZU', 'VVINF'), 'right siblings': ['NF'], 'parent': 'SIMPX', 'auto preterminal span': (1, 14), 'span': (3, 5), 'left siblings': ['VF', 'LK'], 'label': 'MF', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX
				(VF grundsatzlich)
				(LK gabe)
				(NX es)
				(ADVX naturlich)
				(NF
					(SIMPX
						(NX die moglichkeit)
						[01;31m(SIMPX[00m
							(VC
								(VXINF
									(PTKZU zu)
									(VVINF fliegen)))[01;31m)[00m
						(KON beziehungsweise)
						(MVC den zug zu nehmen)))))
		(SU ich wurde vorschlagen wir fliegen da wir nur begrenzte zeit zur verfugung haben)
		(SU ich weis nicht ob ihnen das recht ist)))
Step:Unary
{'subtrees': ['VC'], 'family': ['NX', 'SIMPX', 'KON', 'MVC'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'PTKZU', 'VVINF', 'KON', 'ART', 'NN', 'PTKZU', 'VVINF'), 'right siblings': ['KON', 'MVC'], 'parent': 'SIMPX', 'auto preterminal span': (5, 14), 'span': (7, 9), 'left siblings': ['NX'], 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja grundsatzlich gabe es naturlich die moglichkeit zu fliegen beziehungsweise den zug zu nehmen ich wurde vorschlagen wir fliegen da wir nur begrenzte zeit zur verfugung haben ich weis nicht ob ihnen das recht ist)

Sentence 499:
4 Initial errors
0 on fringe, 2 iterations
2 Error:Single Word Phrase
2 Error:UNSET move
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU na ja etwas spater)
		(SU also man mus schon so funf stunden rechnen fur die fahrt)
		(SU
			[01;31m(PX[00m
				[01;36m(DM[00m [01;31m(PX[00m
					(PROP deswegen)[01;31m)[00m[01;36m)[00m
				[01;36m(PX[00m
					(ADVX vielleicht)
					(PX so um sieben uhr dreiundvierzig)[01;36m)[00m[01;31m)[00m)))
Step:Single Word Phrase
{'family': ['DM', 'ADVX', 'PX'], 'auto preterminal span': (15, 16), 'span': (15, 16), 'subtrees': ['PROP'], 'parent': 'PX', 'over_word': True, 'auto preterminals': ('PROP',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('PX', 'DM')}
(TOP
	(TURN
		(SU na ja etwas spater)
		(SU also man mus schon so funf stunden rechnen fur die fahrt)
		(SU
			[01;31m(PX[00m
				(DM deswegen)
				[01;36m(PX[00m
					(ADVX vielleicht)
					(PX so um sieben uhr dreiundvierzig)[01;36m)[00m[01;31m)[00m)))
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['DM', 'PX'], 'mover info': [('DM', (15, 16))], 'old_family': ['DM', 'ADVX', 'PX'], 'start left siblings': [], 'auto preterminals': ('PROP', 'ADV', 'ADV', 'APPR', 'CARD', 'NN', 'CARD'), 'start right siblings': ['ADVX', 'PX'], 'end left siblings': [], 'auto preterminal span': (15, 22), 'movers': ['DM'], 'old_parent': 'PX', 'POS confusion': ('PROP', 'PROP'), 'end right siblings': ['PX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP na ja etwas spater also man mus schon so funf stunden rechnen fur die fahrt deswegen vielleicht so um sieben uhr dreiundvierzig)

Sentence 500:
4 Initial errors
0 on fringe, 3 iterations
2 Error:UNSET move
1 Error:NP Internal Structure
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU es mus nicht das teuerste sein)
		(SU zentrale lage ware naturlich ganz gunstig)
		(SU
			(SIMPX
				(VF deswegen)
				(LK ware)
				[01;36m(MF[00m
					[01;31m(MF[00m
						(ADVX vielleicht)
						[01;31m(NX[00m
							(NX das zweite)
							[01;31m(NX[00m
								(PX von ihnen)
								(NX genannte)[01;31m)[00m[01;31m)[00m[01;31m)[00m
					(VC vorzuziehen)[01;36m)[00m))))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['ADVX', 'NX', 'VC'], 'mover info': [('VC', (20, 21))], 'old_family': ['VF', 'LK', 'MF', 'VC'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('PROP', 'VAFIN', 'ADV', 'ART', 'NN', 'APPR', 'PPER', 'NN', 'VVIZU'), 'start right siblings': [], 'end left siblings': ['ADVX', 'NX'], 'auto preterminal span': (12, 21), 'movers': ['VC'], 'old_parent': 'SIMPX', 'POS confusion': ('VVIZU', 'VVIZU'), 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU es mus nicht das teuerste sein)
		(SU zentrale lage ware naturlich ganz gunstig)
		(SU
			(SIMPX
				(VF deswegen)
				(LK ware)
				(MF
					(ADVX vielleicht)
					[01;31m(NX[00m
						(NX das zweite)
						[01;31m(NX[00m
							(PX von ihnen)
							(NX genannte)[01;31m)[00m[01;31m)[00m
					(VC vorzuziehen))))))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['ADVX', 'NX', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ART', 'NN', 'APPR', 'PPER', 'NN', 'VVIZU'), 'right siblings': ['VC'], 'parent': 'MF', 'auto preterminal span': (14, 21), 'span': (15, 20), 'left siblings': ['ADVX'], 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'remove'}
(TOP
	(TURN
		(SU es mus nicht das teuerste sein)
		(SU zentrale lage ware naturlich ganz gunstig)
		(SU
			(SIMPX
				(VF deswegen)
				(LK ware)
				(MF
					(ADVX vielleicht)
					(NX das zweite)
					[01;31m(NX[00m
						(PX von ihnen)
						(NX genannte)[01;31m)[00m
					(VC vorzuziehen))))))
Step:UNSET remove
{'subtrees': ['PX', 'NX'], 'family': ['ADVX', 'NX', 'NX', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ART', 'NN', 'APPR', 'PPER', 'NN', 'VVIZU'), 'right siblings': ['VC'], 'parent': 'MF', 'auto preterminal span': (14, 21), 'span': (17, 20), 'left siblings': ['ADVX', 'NX'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP es mus nicht das teuerste sein zentrale lage ware naturlich ganz gunstig deswegen ware vielleicht das zweite von ihnen genannte vorzuziehen)

Sentence 501:
0 Initial errors
0 on fringe, 0 iterations

Sentence 502:
2 Initial errors
0 on fringe, 2 iterations
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU gut)
		(SU
			[01;31m(DM[00m
				[01;31m(PX[00m
					(ADVX dann)
					(PX bis dann)[01;31m)[00m[01;31m)[00m)
		(SU auf wiedersehen frau wesenick)))
Step:Unary
{'subtrees': ['PX'], 'family': ['DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'APPR', 'ADV'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (1, 4), 'span': (1, 4), 'left siblings': [], 'label': 'DM', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU gut)
		(SU
			[01;31m(PX[00m
				(ADVX dann)
				(PX bis dann)[01;31m)[00m)
		(SU auf wiedersehen frau wesenick)))
Step:Unary
{'subtrees': ['ADVX', 'PX'], 'family': ['PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'APPR', 'ADV'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (1, 4), 'span': (1, 4), 'left siblings': [], 'label': 'PX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP gut dann bis dann auf wiedersehen frau wesenick)

Sentence 503:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Different label
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(SIMPX ich kann ihnen gleich mal einen vorschlag machen fur einen termin)
			[01;36m(PX[00m [01;31m(NX[00m
				(ADVX zwar)
				(NX die zweite juliwoche)[01;31m)[00m[01;36m)[00m)
		(SU die zweite halfte)))
Step:Different label
{'family': ['SIMPX', 'PX'], 'auto preterminal span': (11, 15), 'span': (11, 15), 'subtrees': ['ADVX', 'NX'], 'parent': 'SU', 'over_word': False, 'auto preterminals': ('ADV', 'ART', 'ADJA', 'NN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('NX', 'PX')}
(TOP ich kann ihnen gleich mal einen vorschlag machen fur einen termin zwar die zweite juliwoche die zweite halfte)

Sentence 504:
0 Initial errors
0 on fringe, 0 iterations

Sentence 505:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU also da bin ich dagegen mus ich sagen)
		(SU
			(DM also)
			(SIMPX
				(VF von munchen nach hannover)
				(LK kann)
				(MF
					(NX man)
					(ADVX auch)
					(ADJX sehr gut)
					[01;36m(MF[00m
						(PX
							(APPR mit)
							(NX dem zug))[01;36m)[00m)
				(VC fahren)))
		(SU sonst)))
Step:Unary
{'subtrees': ['PX'], 'family': ['NX', 'ADVX', 'ADJX', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NN'), 'right siblings': [], 'left siblings': [(NX (PIS man)), (ADVX (ADV auch)), (ADJX (ADVX (ADV sehr)) (ADJD gut))], 'auto preterminal span': (18, 21), 'span': (18, 21), 'parent': 'MF', 'label': 'MF', 'classified_type': 'Unary', 'type': 'add'}
(TOP also da bin ich dagegen mus ich sagen also von munchen nach hannover kann man auch sehr gut mit dem zug fahren sonst)

Sentence 506:
0 Initial errors
0 on fringe, 0 iterations

Sentence 507:
0 Initial errors
0 on fringe, 0 iterations

Sentence 508:
23 Initial errors
0 on fringe, 15 iterations
4 Error:VP Attachment
3 Error:Modifier Attachment
2 Error:Different label
2 Error:Different label
2 Error:Modifier Attachment
1 Error:UNSET add
1 Error:Co-ordination
1 Error:Clause Attachment
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:Single Word Phrase
1 Error:Single Word Phrase
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU ja)
		(SU zur unterkunft hatte ich vorschlage zu machen)
		(SU
			(SIMPX es gabe hier drei moglichkeiten)
			(DM also)
			[01;31m(NX[00m
				(NX ein hotel)
				[01;36m(SIMPX[00m
					[01;31m(R[00m
						(C was)
						(MF in der nahe des zentrums)
						[01;36m(LK[00m [01;31m(VC[00m
							(VXFIN
								(VVFIN liegt))[01;31m)[00m[01;36m)[00m[01;31m)[00m
					[01;36m(MF[00m
						[01;31m(PX[00m
							(ADVX auch)
							(PX mit cafeteria und terrasse)[01;31m)[00m
						(ADJX etwas gunstiger)[01;36m)[00m[01;36m)[00m[01;31m)[00m)
		(SU nee ich sehe grade das ist in der mittleren preislage)
		[01;36m(SU[00m
			(SU
				[01;31m(NX[00m
					(ADVX dann)
					[01;31m(NX[00m
						(NX das schloshotel)
						[01;31m(R[00m
							(C das)
							(MF in der nahe vom bahnhof)
							(VC ist)[01;31m)[00m[01;31m)[00m[01;31m)[00m
				(SIMPX
					[01;31m(VF[00m
						[01;31m(NX[00m
							(PDS das)[01;31m)[00m[01;31m)[00m
					(LK fande)
					(MF ich auch nicht schlecht)))
			(SU
				(SIMPX
					(KOORD und)
					(VF
						(NX
							[01;31m(NX[00m
								(ART das)
								(ADJX teuerste)
								[01;36m(NX[00m
									(NN [01;33m(NX[00m hotel)[01;36m)[00m[01;31m)[00m
							(NX amgeorgengarten))) [01;33mNX)[00m
					(LK bietet)
					(MF den luxus eines schwimmbads)
					[01;36m(SIMPX[00m [01;31m(NF[00m
						[01;31m(R[00m
							(C was)
							[01;31m(MF[00m [01;33m(MF[00m
								(ADVX naturlich)
								(ADVX auch)
								(ADVX nicht)[01;31m)[00m
							[01;31m(VC[00m
								(VXINF zu verachten) [01;33mMF)[00m
								[01;36m(VC[00m
									(VXFIN
										(VAFIN ist))[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m))[01;36m)[00m))
Step:VP Attachment
{'new_parent': 'MF', 'new_family': ['ADVX', 'ADVX', 'ADVX', 'VXINF'], 'mover info': [('VXINF', (70, 72))], 'old_family': ['VXINF', 'VXFIN'], 'start left siblings': [], 'auto preterminals': ('PRELS', 'ADV', 'ADV', 'PTKNEG', 'PTKZU', 'VVINF', 'VAFIN'), 'start right siblings': ['VXFIN'], 'end left siblings': ['ADVX', 'ADVX', 'ADVX'], 'auto preterminal span': (66, 73), 'movers': ['VXINF'], 'old_parent': 'VC', 'end right siblings': [], 'classified_type': 'VP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU ja)
		(SU zur unterkunft hatte ich vorschlage zu machen)
		(SU
			(SIMPX es gabe hier drei moglichkeiten)
			(DM also)
			[01;31m(NX[00m
				(NX ein hotel)
				[01;36m(SIMPX[00m
					[01;31m(R[00m
						(C was)
						(MF in der nahe des zentrums)
						[01;36m(LK[00m [01;31m(VC[00m
							(VXFIN
								(VVFIN liegt))[01;31m)[00m[01;36m)[00m[01;31m)[00m
					[01;36m(MF[00m
						[01;31m(PX[00m
							(ADVX auch)
							(PX mit cafeteria und terrasse)[01;31m)[00m
						(ADJX etwas gunstiger)[01;36m)[00m[01;36m)[00m[01;31m)[00m)
		(SU nee ich sehe grade das ist in der mittleren preislage)
		[01;36m(SU[00m
			(SU
				[01;31m(NX[00m
					(ADVX dann)
					[01;31m(NX[00m
						(NX das schloshotel)
						[01;31m(R[00m
							(C das)
							(MF in der nahe vom bahnhof)
							(VC ist)[01;31m)[00m[01;31m)[00m[01;31m)[00m
				(SIMPX
					[01;31m(VF[00m
						[01;31m(NX[00m
							(PDS das)[01;31m)[00m[01;31m)[00m
					(LK fande)
					(MF ich auch nicht schlecht)))
			(SU
				(SIMPX
					(KOORD und)
					(VF
						(NX
							[01;31m(NX[00m
								(ART das)
								(ADJX teuerste)
								[01;36m(NX[00m
									(NN [01;33m(NX[00m hotel)[01;36m)[00m[01;31m)[00m
							(NX amgeorgengarten))) [01;33mNX)[00m
					(LK bietet)
					(MF den luxus eines schwimmbads)
					[01;36m(SIMPX[00m [01;31m(NF[00m
						[01;31m(R[00m
							(C was)
							(MF naturlich auch nicht zu verachten)
							(VC ist)[01;31m)[00m[01;31m)[00m[01;36m)[00m))[01;36m)[00m))
Step:Modifier Attachment
{'new_parent': 'VF', 'new_family': ['ART', 'ADJX', 'NX'], 'mover info': [('ART', (57, 58)), ('ADJX', (58, 59))], 'old_family': ['ART', 'ADJX', 'NN'], 'start left siblings': [], 'auto preterminals': ('ART', 'ADJA', 'NN', 'NE'), 'start right siblings': ['NN'], 'end left siblings': [], 'auto preterminal span': (57, 61), 'adding node already present': False, 'movers': ['ART', 'ADJX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': ['NX'], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'SIMPX'}
(TOP
	(TURN
		(SU ja)
		(SU zur unterkunft hatte ich vorschlage zu machen)
		(SU
			(SIMPX es gabe hier drei moglichkeiten)
			(DM also)
			[01;31m(NX[00m
				(NX ein hotel)
				[01;36m(SIMPX[00m
					[01;31m(R[00m
						(C was)
						(MF in der nahe des zentrums)
						[01;36m(LK[00m [01;31m(VC[00m
							(VXFIN
								(VVFIN liegt))[01;31m)[00m[01;36m)[00m[01;31m)[00m
					[01;36m(MF[00m
						[01;31m(PX[00m
							(ADVX auch)
							(PX mit cafeteria und terrasse)[01;31m)[00m
						(ADJX etwas gunstiger)[01;36m)[00m[01;36m)[00m[01;31m)[00m)
		(SU nee ich sehe grade das ist in der mittleren preislage)
		[01;36m(SU[00m
			(SU
				[01;31m(NX[00m
					(ADVX dann)
					[01;31m(NX[00m
						(NX das schloshotel)
						[01;31m(R[00m
							(C das)
							(MF in der nahe vom bahnhof)
							(VC ist)[01;31m)[00m[01;31m)[00m[01;31m)[00m
				(SIMPX
					[01;31m(VF[00m
						[01;31m(NX[00m
							(PDS das)[01;31m)[00m[01;31m)[00m
					(LK fande)
					(MF ich auch nicht schlecht)))
			(SU
				(SIMPX
					(KOORD und)
					(NX das teuerste hotel amgeorgengarten)
					(LK bietet)
					(MF den luxus eines schwimmbads)
					[01;36m(SIMPX[00m [01;31m(NF[00m
						[01;31m(R[00m
							(C was)
							(MF naturlich auch nicht zu verachten)
							(VC ist)[01;31m)[00m[01;31m)[00m[01;36m)[00m))[01;36m)[00m))
Step:Different label
{'family': ['C', 'MF', 'LK'], 'auto preterminal span': (22, 23), 'span': (22, 23), 'subtrees': ['VXFIN'], 'parent': 'R', 'over_word': False, 'auto preterminals': ('VVFIN',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('VC', 'LK')}
(TOP
	(TURN
		(SU ja)
		(SU zur unterkunft hatte ich vorschlage zu machen)
		(SU
			(SIMPX es gabe hier drei moglichkeiten)
			(DM also)
			[01;31m(NX[00m
				(NX ein hotel)
				[01;36m(SIMPX[00m
					[01;31m(R[00m
						(C was)
						(MF in der nahe des zentrums)
						(LK liegt)[01;31m)[00m
					[01;36m(MF[00m
						[01;31m(PX[00m
							(ADVX auch)
							(PX mit cafeteria und terrasse)[01;31m)[00m
						(ADJX etwas gunstiger)[01;36m)[00m[01;36m)[00m[01;31m)[00m)
		(SU nee ich sehe grade das ist in der mittleren preislage)
		[01;36m(SU[00m
			(SU
				[01;31m(NX[00m
					(ADVX dann)
					[01;31m(NX[00m
						(NX das schloshotel)
						[01;31m(R[00m
							(C das)
							(MF in der nahe vom bahnhof)
							(VC ist)[01;31m)[00m[01;31m)[00m[01;31m)[00m
				(SIMPX
					[01;31m(VF[00m
						[01;31m(NX[00m
							(PDS das)[01;31m)[00m[01;31m)[00m
					(LK fande)
					(MF ich auch nicht schlecht)))
			(SU
				(SIMPX
					(KOORD und)
					(NX das teuerste hotel amgeorgengarten)
					(LK bietet)
					(MF den luxus eines schwimmbads)
					[01;36m(SIMPX[00m [01;31m(NF[00m
						[01;31m(R[00m
							(C was)
							(MF naturlich auch nicht zu verachten)
							(VC ist)[01;31m)[00m[01;31m)[00m[01;36m)[00m))[01;36m)[00m))
Step:Different label
{'family': ['KOORD', 'NX', 'LK', 'MF', 'SIMPX'], 'auto preterminal span': (66, 73), 'span': (66, 73), 'subtrees': ['R'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('PRELS', 'ADV', 'ADV', 'PTKNEG', 'PTKZU', 'VVINF', 'VAFIN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('NF', 'SIMPX')}
(TOP
	(TURN
		(SU ja)
		(SU zur unterkunft hatte ich vorschlage zu machen)
		(SU
			(SIMPX es gabe hier drei moglichkeiten)
			(DM also)
			[01;31m(NX[00m
				(NX ein hotel)
				[01;36m(SIMPX[00m
					[01;31m(R[00m
						(C was)
						(MF in der nahe des zentrums)
						(LK liegt)[01;31m)[00m
					[01;36m(MF[00m
						[01;31m(PX[00m
							(ADVX auch)
							(PX mit cafeteria und terrasse)[01;31m)[00m
						(ADJX etwas gunstiger)[01;36m)[00m[01;36m)[00m[01;31m)[00m)
		(SU nee ich sehe grade das ist in der mittleren preislage)
		[01;36m(SU[00m
			(SU
				[01;31m(NX[00m
					(ADVX dann)
					[01;31m(NX[00m
						(NX das schloshotel)
						[01;31m(R[00m
							(C das)
							(MF in der nahe vom bahnhof)
							(VC ist)[01;31m)[00m[01;31m)[00m[01;31m)[00m
				(SIMPX
					[01;31m(VF[00m
						[01;31m(NX[00m
							(PDS das)[01;31m)[00m[01;31m)[00m
					(LK fande)
					(MF ich auch nicht schlecht)))
			(SU
				(SIMPX
					(KOORD und)
					(NX das teuerste hotel amgeorgengarten)
					(LK bietet)
					(MF den luxus eines schwimmbads)
					(SIMPX
						[01;31m(R[00m
							(C was)
							(MF naturlich auch nicht zu verachten)
							(VC ist)[01;31m)[00m)))[01;36m)[00m))
Step:Modifier Attachment
{'new_parent': 'NX', 'new_family': ['NX', 'R', 'ADVX', 'PX', 'ADJX'], 'mover info': [('ADVX', (23, 24))], 'old_family': ['ADVX', 'PX'], 'start left siblings': [], 'auto preterminals': ('ART', 'NN', 'PRELS', 'APPR', 'ART', 'NN', 'ART', 'NN', 'VVFIN', 'ADV', 'APPR', 'NN', 'KON', 'NN', 'ADV', 'ADJD'), 'start right siblings': ['PX'], 'end left siblings': ['NX', 'R'], 'auto preterminal span': (14, 30), 'adding node already present': False, 'movers': ['ADVX'], 'old_parent': 'PX', 'POS confusion': ('ADV', 'ADV'), 'added and moved': True, 'end right siblings': ['PX', 'ADJX'], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'SU'}
(TOP
	(TURN
		(SU ja)
		(SU zur unterkunft hatte ich vorschlage zu machen)
		(SU
			(SIMPX es gabe hier drei moglichkeiten)
			(DM also)
			[01;31m(NX[00m
				(NX ein hotel)
				[01;36m(SIMPX[00m
					[01;31m(R[00m
						(C was)
						(MF in der nahe des zentrums)
						(LK liegt)[01;31m)[00m
					(MF auch mit cafeteria und terrasse etwas gunstiger)[01;36m)[00m[01;31m)[00m)
		(SU nee ich sehe grade das ist in der mittleren preislage)
		[01;36m(SU[00m
			(SU
				[01;31m(NX[00m
					(ADVX dann)
					[01;31m(NX[00m
						(NX das schloshotel)
						[01;31m(R[00m
							(C das)
							(MF in der nahe vom bahnhof)
							(VC ist)[01;31m)[00m[01;31m)[00m[01;31m)[00m
				(SIMPX
					[01;31m(VF[00m
						[01;31m(NX[00m
							(PDS das)[01;31m)[00m[01;31m)[00m
					(LK fande)
					(MF ich auch nicht schlecht)))
			(SU
				(SIMPX
					(KOORD und)
					(NX das teuerste hotel amgeorgengarten)
					(LK bietet)
					(MF den luxus eines schwimmbads)
					(SIMPX
						[01;31m(R[00m
							(C was)
							(MF naturlich auch nicht zu verachten)
							(VC ist)[01;31m)[00m)))[01;36m)[00m))
Step:UNSET add
{'subtrees': ['R', 'MF'], 'family': ['NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PRELS', 'APPR', 'ART', 'NN', 'ART', 'NN', 'VVFIN', 'ADV', 'APPR', 'NN', 'KON', 'NN', 'ADV', 'ADJD'), 'right siblings': [], 'left siblings': [(NX (ART ein) (NN hotel))], 'auto preterminal span': (16, 30), 'span': (16, 30), 'parent': 'NX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU ja)
		(SU zur unterkunft hatte ich vorschlage zu machen)
		(SU
			(SIMPX es gabe hier drei moglichkeiten)
			(DM also)
			[01;31m(NX[00m
				(NX ein hotel)
				(SIMPX
					[01;31m(R[00m
						(C was)
						(MF in der nahe des zentrums)
						(LK liegt)[01;31m)[00m
					(MF auch mit cafeteria und terrasse etwas gunstiger))[01;31m)[00m)
		(SU nee ich sehe grade das ist in der mittleren preislage)
		[01;36m(SU[00m
			(SU
				[01;31m(NX[00m
					(ADVX dann)
					[01;31m(NX[00m
						(NX das schloshotel)
						[01;31m(R[00m
							(C das)
							(MF in der nahe vom bahnhof)
							(VC ist)[01;31m)[00m[01;31m)[00m[01;31m)[00m
				(SIMPX
					[01;31m(VF[00m
						[01;31m(NX[00m
							(PDS das)[01;31m)[00m[01;31m)[00m
					(LK fande)
					(MF ich auch nicht schlecht)))
			(SU
				(SIMPX
					(KOORD und)
					(NX das teuerste hotel amgeorgengarten)
					(LK bietet)
					(MF den luxus eines schwimmbads)
					(SIMPX
						[01;31m(R[00m
							(C was)
							(MF naturlich auch nicht zu verachten)
							(VC ist)[01;31m)[00m)))[01;36m)[00m))
Step:Co-ordination
{'subtrees': ['SU', 'SU'], 'family': ['SU', 'SU', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ART', 'NE', 'PRELS', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'VAFIN', 'PDS', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADJD', 'KON', 'ART', 'ADJA', 'NN', 'NE', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'PRELS', 'ADV', 'ADV', 'PTKNEG', 'PTKZU', 'VVINF', 'VAFIN'), 'right siblings': [], 'left siblings': [(SU (DM (PTKANT ja))), (SU (SIMPX (VF (PX (APPRART zur) (NX (NN unterkunft)))) (LK (VXFIN (VAFIN hatte))) (MF (NX (PPER ich)) (NX (NN vorschlage))) (VC (VXINF (PTKZU zu) (VVINF machen))))), (SU (SIMPX (VF (NX (PPER es))) (LK (VXFIN (VVFIN gabe))) (MF (ADVX (ADV hier)) (NX (ADJX (CARD drei)) (NN moglichkeiten)))) (DM (ADVX (ADV also))) (NX (NX (ART ein) (NN hotel)) (SIMPX (R (C (NX (PRELS was))) (MF (PX (APPR in) (NX (NX (ART der) (NN nahe)) (NX (ART des) (NN zentrums))))) (LK (VXFIN (VVFIN liegt)))) (MF (ADVX (ADV auch)) (PX (APPR mit) (NX (NX (NN cafeteria)) (KON und) (NX (NN terrasse)))) (ADJX (ADVX (ADV etwas)) (ADJD gunstiger)))))), (SU (DM (PTKANT nee)) (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN sehe))) (MF (ADVX (ADV grade))) (NF (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VAFIN ist))) (MF (PX (APPR in) (NX (ART der) (ADJX (ADJA mittleren)) (NN preislage))))))))], 'auto preterminal span': (40, 73), 'span': (40, 73), 'parent': 'TURN', 'label': 'SU', 'classified_type': 'Co-ordination', 'type': 'add'}
(TOP
	(TURN
		(SU ja)
		(SU zur unterkunft hatte ich vorschlage zu machen)
		(SU
			(SIMPX es gabe hier drei moglichkeiten)
			(DM also)
			[01;31m(NX[00m
				(NX ein hotel)
				(SIMPX
					[01;31m(R[00m
						(C was)
						(MF in der nahe des zentrums)
						(LK liegt)[01;31m)[00m
					(MF auch mit cafeteria und terrasse etwas gunstiger))[01;31m)[00m)
		(SU nee ich sehe grade das ist in der mittleren preislage)
		(SU
			(SU
				[01;31m(NX[00m
					(ADVX dann)
					[01;31m(NX[00m
						(NX das schloshotel)
						[01;31m(R[00m
							(C das)
							(MF in der nahe vom bahnhof)
							(VC ist)[01;31m)[00m[01;31m)[00m[01;31m)[00m
				(SIMPX
					[01;31m(VF[00m
						[01;31m(NX[00m
							(PDS das)[01;31m)[00m[01;31m)[00m
					(LK fande)
					(MF ich auch nicht schlecht)))
			(SU
				(SIMPX
					(KOORD und)
					(NX das teuerste hotel amgeorgengarten)
					(LK bietet)
					(MF den luxus eines schwimmbads)
					(SIMPX
						[01;31m(R[00m
							(C was)
							(MF naturlich auch nicht zu verachten)
							(VC ist)[01;31m)[00m))))))
Step:Clause Attachment
{'subtrees': ['NX', 'SIMPX'], 'family': ['SIMPX', 'DM', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'PRELS', 'APPR', 'ART', 'NN', 'ART', 'NN', 'VVFIN', 'ADV', 'APPR', 'NN', 'KON', 'NN', 'ADV', 'ADJD'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (8, 30), 'span': (14, 30), 'left siblings': ['SIMPX', 'DM'], 'label': 'NX', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU ja)
		(SU zur unterkunft hatte ich vorschlage zu machen)
		(SU
			(SIMPX es gabe hier drei moglichkeiten)
			(DM also)
			(NX ein hotel)
			(SIMPX
				[01;31m(R[00m
					(C was)
					(MF in der nahe des zentrums)
					(LK liegt)[01;31m)[00m
				(MF auch mit cafeteria und terrasse etwas gunstiger)))
		(SU nee ich sehe grade das ist in der mittleren preislage)
		(SU
			(SU
				[01;31m(NX[00m
					(ADVX dann)
					[01;31m(NX[00m
						(NX das schloshotel)
						[01;31m(R[00m
							(C das)
							(MF in der nahe vom bahnhof)
							(VC ist)[01;31m)[00m[01;31m)[00m[01;31m)[00m
				(SIMPX
					[01;31m(VF[00m
						[01;31m(NX[00m
							(PDS das)[01;31m)[00m[01;31m)[00m
					(LK fande)
					(MF ich auch nicht schlecht)))
			(SU
				(SIMPX
					(KOORD und)
					(NX das teuerste hotel amgeorgengarten)
					(LK bietet)
					(MF den luxus eines schwimmbads)
					(SIMPX
						[01;31m(R[00m
							(C was)
							(MF naturlich auch nicht zu verachten)
							(VC ist)[01;31m)[00m))))))
Step:UNSET remove
{'subtrees': ['C', 'MF', 'LK'], 'family': ['R', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PRELS', 'APPR', 'ART', 'NN', 'ART', 'NN', 'VVFIN', 'ADV', 'APPR', 'NN', 'KON', 'NN', 'ADV', 'ADJD'), 'right siblings': ['MF'], 'parent': 'SIMPX', 'auto preterminal span': (16, 30), 'span': (16, 23), 'left siblings': [], 'label': 'R', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU ja)
		(SU zur unterkunft hatte ich vorschlage zu machen)
		(SU es gabe hier drei moglichkeiten also ein hotel was in der nahe des zentrums liegt auch mit cafeteria und terrasse etwas gunstiger)
		(SU nee ich sehe grade das ist in der mittleren preislage)
		(SU
			(SU
				[01;31m(NX[00m
					(ADVX dann)
					[01;31m(NX[00m
						(NX das schloshotel)
						[01;31m(R[00m
							(C das)
							(MF in der nahe vom bahnhof)
							(VC ist)[01;31m)[00m[01;31m)[00m[01;31m)[00m
				(SIMPX
					[01;31m(VF[00m
						[01;31m(NX[00m
							(PDS das)[01;31m)[00m[01;31m)[00m
					(LK fande)
					(MF ich auch nicht schlecht)))
			(SU
				(SIMPX
					(KOORD und)
					(NX das teuerste hotel amgeorgengarten)
					(LK bietet)
					(MF den luxus eines schwimmbads)
					(SIMPX
						[01;31m(R[00m
							(C was)
							(MF naturlich auch nicht zu verachten)
							(VC ist)[01;31m)[00m))))))
Step:UNSET remove
{'subtrees': ['ADVX', 'NX'], 'family': ['NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ART', 'NE', 'PRELS', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'VAFIN', 'PDS', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADJD'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (40, 56), 'span': (40, 50), 'left siblings': [], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU ja)
		(SU zur unterkunft hatte ich vorschlage zu machen)
		(SU es gabe hier drei moglichkeiten also ein hotel was in der nahe des zentrums liegt auch mit cafeteria und terrasse etwas gunstiger)
		(SU nee ich sehe grade das ist in der mittleren preislage)
		(SU
			(SU
				(ADVX dann)
				[01;31m(NX[00m
					(NX das schloshotel)
					[01;31m(R[00m
						(C das)
						(MF in der nahe vom bahnhof)
						(VC ist)[01;31m)[00m[01;31m)[00m
				(SIMPX
					[01;31m(VF[00m
						[01;31m(NX[00m
							(PDS das)[01;31m)[00m[01;31m)[00m
					(LK fande)
					(MF ich auch nicht schlecht)))
			(SU
				(SIMPX
					(KOORD und)
					(NX das teuerste hotel amgeorgengarten)
					(LK bietet)
					(MF den luxus eines schwimmbads)
					(SIMPX
						[01;31m(R[00m
							(C was)
							(MF naturlich auch nicht zu verachten)
							(VC ist)[01;31m)[00m))))))
Step:UNSET remove
{'subtrees': ['NX', 'R'], 'family': ['ADVX', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ART', 'NE', 'PRELS', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'VAFIN', 'PDS', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADJD'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (40, 56), 'span': (41, 50), 'left siblings': ['ADVX'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU ja)
		(SU zur unterkunft hatte ich vorschlage zu machen)
		(SU es gabe hier drei moglichkeiten also ein hotel was in der nahe des zentrums liegt auch mit cafeteria und terrasse etwas gunstiger)
		(SU nee ich sehe grade das ist in der mittleren preislage)
		(SU
			(SU
				(ADVX dann)
				(NX das schloshotel)
				[01;31m(R[00m
					(C das)
					(MF in der nahe vom bahnhof)
					(VC ist)[01;31m)[00m
				(SIMPX
					[01;31m(VF[00m
						[01;31m(NX[00m
							(PDS das)[01;31m)[00m[01;31m)[00m
					(LK fande)
					(MF ich auch nicht schlecht)))
			(SU
				(SIMPX
					(KOORD und)
					(NX das teuerste hotel amgeorgengarten)
					(LK bietet)
					(MF den luxus eines schwimmbads)
					(SIMPX
						[01;31m(R[00m
							(C was)
							(MF naturlich auch nicht zu verachten)
							(VC ist)[01;31m)[00m))))))
Step:UNSET remove
{'subtrees': ['C', 'MF', 'VC'], 'family': ['ADVX', 'NX', 'R', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ART', 'NE', 'PRELS', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'VAFIN', 'PDS', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADJD'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (40, 56), 'span': (43, 50), 'left siblings': ['ADVX', 'NX'], 'label': 'R', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU ja)
		(SU zur unterkunft hatte ich vorschlage zu machen)
		(SU es gabe hier drei moglichkeiten also ein hotel was in der nahe des zentrums liegt auch mit cafeteria und terrasse etwas gunstiger)
		(SU nee ich sehe grade das ist in der mittleren preislage)
		(SU
			(SU
				(ADVX dann)
				(NX das schloshotel)
				(C das)
				(MF in der nahe vom bahnhof)
				(VC ist)
				(SIMPX
					[01;31m(VF[00m
						[01;31m(NX[00m
							(PDS das)[01;31m)[00m[01;31m)[00m
					(LK fande)
					(MF ich auch nicht schlecht)))
			(SU
				(SIMPX
					(KOORD und)
					(NX das teuerste hotel amgeorgengarten)
					(LK bietet)
					(MF den luxus eines schwimmbads)
					(SIMPX
						[01;31m(R[00m
							(C was)
							(MF naturlich auch nicht zu verachten)
							(VC ist)[01;31m)[00m))))))
Step:Single Word Phrase
{'subtrees': ['PDS'], 'family': ['NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('PDS',), 'right siblings': [], 'parent': 'VF', 'auto preterminal span': (50, 51), 'span': (50, 51), 'left siblings': [], 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(SU ja)
		(SU zur unterkunft hatte ich vorschlage zu machen)
		(SU es gabe hier drei moglichkeiten also ein hotel was in der nahe des zentrums liegt auch mit cafeteria und terrasse etwas gunstiger)
		(SU nee ich sehe grade das ist in der mittleren preislage)
		(SU
			(SU
				(ADVX dann)
				(NX das schloshotel)
				(C das)
				(MF in der nahe vom bahnhof)
				(VC ist)
				(SIMPX
					[01;31m(VF[00m
						(PDS das)[01;31m)[00m
					(LK fande)
					(MF ich auch nicht schlecht)))
			(SU
				(SIMPX
					(KOORD und)
					(NX das teuerste hotel amgeorgengarten)
					(LK bietet)
					(MF den luxus eines schwimmbads)
					(SIMPX
						[01;31m(R[00m
							(C was)
							(MF naturlich auch nicht zu verachten)
							(VC ist)[01;31m)[00m))))))
Step:Single Word Phrase
{'subtrees': ['PDS'], 'family': ['VF', 'LK', 'MF'], 'over_word': True, 'over words': True, 'auto preterminals': ('PDS', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADJD'), 'right siblings': ['LK', 'MF'], 'parent': 'SIMPX', 'auto preterminal span': (50, 56), 'span': (50, 51), 'left siblings': [], 'label': 'VF', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(SU ja)
		(SU zur unterkunft hatte ich vorschlage zu machen)
		(SU es gabe hier drei moglichkeiten also ein hotel was in der nahe des zentrums liegt auch mit cafeteria und terrasse etwas gunstiger)
		(SU nee ich sehe grade das ist in der mittleren preislage)
		(SU
			(SU dann das schloshotel das in der nahe vom bahnhof ist das fande ich auch nicht schlecht)
			(SU
				(SIMPX
					(KOORD und)
					(NX das teuerste hotel amgeorgengarten)
					(LK bietet)
					(MF den luxus eines schwimmbads)
					(SIMPX
						[01;31m(R[00m
							(C was)
							(MF naturlich auch nicht zu verachten)
							(VC ist)[01;31m)[00m))))))
Step:Unary
{'subtrees': ['C', 'MF', 'VC'], 'family': ['R'], 'over_word': False, 'over words': False, 'auto preterminals': ('PRELS', 'ADV', 'ADV', 'PTKNEG', 'PTKZU', 'VVINF', 'VAFIN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (66, 73), 'span': (66, 73), 'left siblings': [], 'label': 'R', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja zur unterkunft hatte ich vorschlage zu machen es gabe hier drei moglichkeiten also ein hotel was in der nahe des zentrums liegt auch mit cafeteria und terrasse etwas gunstiger nee ich sehe grade das ist in der mittleren preislage dann das schloshotel das in der nahe vom bahnhof ist das fande ich auch nicht schlecht und das teuerste hotel amgeorgengarten bietet den luxus eines schwimmbads was naturlich auch nicht zu verachten ist)

Sentence 509:
0 Initial errors
0 on fringe, 0 iterations

Sentence 510:
3 Initial errors
0 on fringe, 1 iterations
3 Error:UNSET move
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM nee)
			(SIMPX
				(VF ich)
				(LK hatte)
				[01;36m(MF[00m
					[01;36m(PX[00m
						(APPR in)
						[01;31m(MF[00m
							(NX
								(DP so wenig)
								(NN zeit))[01;31m)[00m[01;36m)[00m[01;36m)[00m
				(NF das ich mich darum nicht gekummert habe))
			(SIMPX aber es ware ein guter anlas))
		(SU das)))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['APPR', 'NX'], 'mover info': [('APPR', (3, 4))], 'old_family': ['VF', 'LK', 'APPR', 'MF', 'NF'], 'start left siblings': ['VF', 'LK'], 'auto preterminals': ('PPER', 'VAFIN', 'APPR', 'ADV', 'PIAT', 'NN', 'KOUS', 'PPER', 'PRF', 'PROP', 'PTKNEG', 'VVPP', 'VAFIN'), 'start right siblings': ['MF', 'NF'], 'end left siblings': [], 'auto preterminal span': (1, 14), 'adding node already present': False, 'movers': ['APPR'], 'old_parent': 'SIMPX', 'POS confusion': ('APPR', 'APPR'), 'added and moved': True, 'end right siblings': ['NX'], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'PX'}
(TOP nee ich hatte in so wenig zeit das ich mich darum nicht gekummert habe aber es ware ein guter anlas das)

Sentence 511:
0 Initial errors
0 on fringe, 0 iterations

Sentence 512:
0 Initial errors
0 on fringe, 0 iterations

Sentence 513:
23 Initial errors
0 on fringe, 16 iterations
5 Error:VP Attachment
2 Error:Single Word Phrase
2 Error:Different label
2 Error:Clause Attachment
1 Error:Unary
1 Error:UNSET add
1 Error:Unary
1 Error:UNSET add
1 Error:Single Word Phrase
1 Error:UNSET remove
1 Error:UNSET add
1 Error:UNSET remove
1 Error:Unary
1 Error:Single Word Phrase
1 Error:UNSET remove
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(SIMPX
				(VF wir)
				(LK wollten)
				[01;31m(FKOORD[00m
					(MVC uns ja fur ein meeting treffen)
					(KON beziehungsweise)
					[01;31m(MVC[00m [01;33m(MVCN[00m
						(MF eines)
						(VC ausmachen)[01;31m)[00m[01;31m)[00m
				(NF
					[01;31m(PX[00m
						(PX in hannover)
						[01;31m(SIMPX[00m [01;33m(SIMPX[00m
							(C wenn)
							(MF ich mich recht)
							(VC entsinne)[01;31m)[00m[01;31m)[00m
					[01;36m(NF[00m
						(SIMPX
							[01;31m(C[00m
								(KOUS weil)[01;31m)[00m
							[01;36m(NF[00m
								[01;36m(SIMPX[00m
									[01;31m(MF[00m [01;33m(MF[00m
										(ADVX da)
										[01;33m(MF[00m (NX die geschaftspartner)
										(ADVX auch)
										(NX eine filiale)
										(ADVX jetzt)[01;31m)[00m
									[01;31m(VC[00m
										[01;36m(PX[00m [01;31m(VXINF[00m
											(VVPP eroffnet)[01;31m)[00m [01;33mMF) MF)[00m[01;36m)[00m
										[01;36m(VC[00m
											(VXFIN
												(VAFIN haben))[01;36m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m)[01;36m)[00m)) [01;33mSIMPX) MVCN)[00m
			(SIMPX
				(KOORD und)
				(DM ja)
				(SIMPX ich weis nicht)
				[01;36m(SIMPX[00m
					(VF es)
					(LK sollte)
					(MF
						(PX auf alle falle)
						(ADVX noch)
						[01;31m(PX[00m
							(APPR in)
							(NX den nachsten drei monaten)[01;31m)[00m)
					(VC geschehen)
					[01;36m(NX[00m [01;31m(NF[00m
						[01;31m(PX[00m
							(NX meiner ansicht)
							[01;36m(VC[00m
								(APPO nach)[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m))
		(SU wie sehen sie das)))
Step:VP Attachment
{'new_parent': 'MF', 'new_family': ['ADVX', 'NX', 'ADVX', 'NX', 'ADVX', 'VXINF'], 'mover info': [('VXINF', (26, 27))], 'old_family': ['VXINF', 'VXFIN'], 'start left siblings': [], 'auto preterminals': ('KOUS', 'ADV', 'ART', 'NN', 'ADV', 'ART', 'NN', 'ADV', 'VVPP', 'VAFIN'), 'start right siblings': ['VXFIN'], 'end left siblings': ['ADVX', 'NX', 'ADVX', 'NX', 'ADVX'], 'auto preterminal span': (18, 28), 'adding node already present': False, 'movers': ['VXINF'], 'old_parent': 'VC', 'POS confusion': ('VVPP', 'VVPP'), 'added and moved': True, 'end right siblings': [], 'classified_type': 'VP Attachment', 'type': 'move', 'added label': 'VC'}
(TOP
	(TURN
		(SU
			(SIMPX
				(VF wir)
				(LK wollten)
				[01;31m(FKOORD[00m
					(MVC uns ja fur ein meeting treffen)
					(KON beziehungsweise)
					[01;31m(MVC[00m [01;33m(MVCN[00m
						(MF eines)
						(VC ausmachen)[01;31m)[00m[01;31m)[00m
				(NF
					[01;31m(PX[00m
						(PX in hannover)
						[01;31m(SIMPX[00m [01;33m(SIMPX[00m
							(C wenn)
							(MF ich mich recht)
							(VC entsinne)[01;31m)[00m[01;31m)[00m
					[01;36m(NF[00m
						(SIMPX
							[01;31m(C[00m
								(KOUS weil)[01;31m)[00m
							[01;36m(NF[00m
								[01;36m(SIMPX[00m
									(MF
										(ADVX da)
										(MF
											(NX die geschaftspartner)
											(ADVX auch)
											(NX eine filiale)
											(ADVX jetzt)
											[01;36m(PX[00m [01;31m(VXINF[00m
												(VVPP eroffnet)[01;31m)[00m[01;36m)[00m))
									(VC haben)[01;36m)[00m[01;36m)[00m)[01;36m)[00m)) [01;33mSIMPX) MVCN)[00m
			(SIMPX
				(KOORD und)
				(DM ja)
				(SIMPX ich weis nicht)
				[01;36m(SIMPX[00m
					(VF es)
					(LK sollte)
					(MF
						(PX auf alle falle)
						(ADVX noch)
						[01;31m(PX[00m
							(APPR in)
							(NX den nachsten drei monaten)[01;31m)[00m)
					(VC geschehen)
					[01;36m(NX[00m [01;31m(NF[00m
						[01;31m(PX[00m
							(NX meiner ansicht)
							[01;36m(VC[00m
								(APPO nach)[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m))
		(SU wie sehen sie das)))
Step:Single Word Phrase
{'family': ['NX', 'ADVX', 'NX', 'ADVX', 'PX'], 'auto preterminal span': (26, 27), 'span': (26, 27), 'subtrees': ['VVPP'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('VVPP',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VXINF', 'PX')}
(TOP
	(TURN
		(SU
			(SIMPX
				(VF wir)
				(LK wollten)
				[01;31m(FKOORD[00m
					(MVC uns ja fur ein meeting treffen)
					(KON beziehungsweise)
					[01;31m(MVC[00m [01;33m(MVCN[00m
						(MF eines)
						(VC ausmachen)[01;31m)[00m[01;31m)[00m
				(NF
					[01;31m(PX[00m
						(PX in hannover)
						[01;31m(SIMPX[00m [01;33m(SIMPX[00m
							(C wenn)
							(MF ich mich recht)
							(VC entsinne)[01;31m)[00m[01;31m)[00m
					[01;36m(NF[00m
						(SIMPX
							[01;31m(C[00m
								(KOUS weil)[01;31m)[00m
							[01;36m(NF[00m
								[01;36m(SIMPX[00m
									(MF da die geschaftspartner auch eine filiale jetzt eroffnet)
									(VC haben)[01;36m)[00m[01;36m)[00m)[01;36m)[00m)) [01;33mSIMPX) MVCN)[00m
			(SIMPX
				(KOORD und)
				(DM ja)
				(SIMPX ich weis nicht)
				[01;36m(SIMPX[00m
					(VF es)
					(LK sollte)
					(MF
						(PX auf alle falle)
						(ADVX noch)
						[01;31m(PX[00m
							(APPR in)
							(NX den nachsten drei monaten)[01;31m)[00m)
					(VC geschehen)
					[01;36m(NX[00m [01;31m(NF[00m
						[01;31m(PX[00m
							(NX meiner ansicht)
							[01;36m(VC[00m
								(APPO nach)[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m))
		(SU wie sehen sie das)))
Step:Different label
{'family': ['KOORD', 'DM', 'SIMPX', 'VF', 'LK', 'MF', 'VC', 'NX'], 'auto preterminal span': (45, 48), 'span': (45, 48), 'subtrees': ['PX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('PPOSAT', 'NN', 'APPO'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('NF', 'NX')}
(TOP
	(TURN
		(SU
			(SIMPX
				(VF wir)
				(LK wollten)
				[01;31m(FKOORD[00m
					(MVC uns ja fur ein meeting treffen)
					(KON beziehungsweise)
					[01;31m(MVC[00m [01;33m(MVCN[00m
						(MF eines)
						(VC ausmachen)[01;31m)[00m[01;31m)[00m
				(NF
					[01;31m(PX[00m
						(PX in hannover)
						[01;31m(SIMPX[00m [01;33m(SIMPX[00m
							(C wenn)
							(MF ich mich recht)
							(VC entsinne)[01;31m)[00m[01;31m)[00m
					[01;36m(NF[00m
						(SIMPX
							[01;31m(C[00m
								(KOUS weil)[01;31m)[00m
							[01;36m(NF[00m
								[01;36m(SIMPX[00m
									(MF da die geschaftspartner auch eine filiale jetzt eroffnet)
									(VC haben)[01;36m)[00m[01;36m)[00m)[01;36m)[00m)) [01;33mSIMPX) MVCN)[00m
			(SIMPX
				(KOORD und)
				(DM ja)
				(SIMPX ich weis nicht)
				[01;36m(SIMPX[00m
					(VF es)
					(LK sollte)
					(MF
						(PX auf alle falle)
						(ADVX noch)
						[01;31m(PX[00m
							(APPR in)
							(NX den nachsten drei monaten)[01;31m)[00m)
					(VC geschehen)
					(NX
						[01;31m(PX[00m
							(NX meiner ansicht)
							[01;36m(VC[00m
								(APPO nach)[01;36m)[00m[01;31m)[00m)[01;36m)[00m))
		(SU wie sehen sie das)))
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['C', 'MF', 'VC', 'SIMPX'], 'mover info': [('SIMPX', (18, 28))], 'old_family': ['PX', 'SIMPX'], 'start left siblings': ['PX'], 'auto preterminals': ('APPR', 'NE', 'KOUS', 'PPER', 'PRF', 'ADJD', 'VVFIN', 'KOUS', 'ADV', 'ART', 'NN', 'ADV', 'ART', 'NN', 'ADV', 'VVPP', 'VAFIN'), 'start right siblings': [], 'end left siblings': ['C', 'MF', 'VC'], 'auto preterminal span': (11, 28), 'movers': ['SIMPX'], 'old_parent': 'NF', 'end right siblings': [], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU
			(SIMPX
				(VF wir)
				(LK wollten)
				[01;31m(FKOORD[00m
					(MVC uns ja fur ein meeting treffen)
					(KON beziehungsweise)
					[01;31m(MVC[00m [01;33m(MVCN[00m
						(MF eines)
						(VC ausmachen)[01;31m)[00m[01;31m)[00m
				(NF
					[01;31m(PX[00m
						(PX in hannover)
						(SIMPX
							(C wenn)
							(MF ich mich recht)
							(VC entsinne)
							[01;36m(NF[00m
								(SIMPX
									[01;31m(C[00m
										(KOUS weil)[01;31m)[00m
									[01;36m(NF[00m
										[01;36m(SIMPX[00m
											(MF da die geschaftspartner auch eine filiale jetzt eroffnet)
											(VC haben)[01;36m)[00m[01;36m)[00m)[01;36m)[00m)[01;31m)[00m)) [01;33mMVCN)[00m
			(SIMPX
				(KOORD und)
				(DM ja)
				(SIMPX ich weis nicht)
				[01;36m(SIMPX[00m
					(VF es)
					(LK sollte)
					(MF
						(PX auf alle falle)
						(ADVX noch)
						[01;31m(PX[00m
							(APPR in)
							(NX den nachsten drei monaten)[01;31m)[00m)
					(VC geschehen)
					(NX
						[01;31m(PX[00m
							(NX meiner ansicht)
							[01;36m(VC[00m
								(APPO nach)[01;36m)[00m[01;31m)[00m)[01;36m)[00m))
		(SU wie sehen sie das)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['C', 'MF', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'ADV', 'ART', 'NN', 'ADV', 'ART', 'NN', 'ADV', 'VVPP', 'VAFIN'), 'right siblings': [], 'left siblings': [(C (KOUS wenn)), (MF (NX (PPER ich)) (NX (PRF mich)) (ADJX (ADJD recht))), (VC (VXFIN (VVFIN entsinne)))], 'auto preterminal span': (18, 28), 'span': (18, 28), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU
			(SIMPX
				(VF wir)
				(LK wollten)
				[01;31m(FKOORD[00m
					(MVC uns ja fur ein meeting treffen)
					(KON beziehungsweise)
					[01;31m(MVC[00m [01;33m(MVCN[00m
						(MF eines)
						(VC ausmachen)[01;31m)[00m[01;31m)[00m
				(NF
					[01;31m(PX[00m
						(PX in hannover)
						(SIMPX
							(C wenn)
							(MF ich mich recht)
							(VC entsinne)
							(NF
								(SIMPX
									[01;31m(C[00m
										(KOUS weil)[01;31m)[00m
									[01;36m(NF[00m
										[01;36m(SIMPX[00m
											(MF da die geschaftspartner auch eine filiale jetzt eroffnet)
											(VC haben)[01;36m)[00m[01;36m)[00m)))[01;31m)[00m)) [01;33mMVCN)[00m
			(SIMPX
				(KOORD und)
				(DM ja)
				(SIMPX ich weis nicht)
				[01;36m(SIMPX[00m
					(VF es)
					(LK sollte)
					(MF
						(PX auf alle falle)
						(ADVX noch)
						[01;31m(PX[00m
							(APPR in)
							(NX den nachsten drei monaten)[01;31m)[00m)
					(VC geschehen)
					(NX
						[01;31m(PX[00m
							(NX meiner ansicht)
							[01;36m(VC[00m
								(APPO nach)[01;36m)[00m[01;31m)[00m)[01;36m)[00m))
		(SU wie sehen sie das)))
Step:UNSET add
{'subtrees': ['MF', 'VC'], 'family': ['C', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ART', 'NN', 'ADV', 'ART', 'NN', 'ADV', 'VVPP', 'VAFIN'), 'right siblings': [], 'left siblings': [(C (KOUS weil))], 'auto preterminal span': (19, 28), 'span': (19, 28), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU
			(SIMPX
				(VF wir)
				(LK wollten)
				[01;31m(FKOORD[00m
					(MVC uns ja fur ein meeting treffen)
					(KON beziehungsweise)
					[01;31m(MVC[00m [01;33m(MVCN[00m
						(MF eines)
						(VC ausmachen)[01;31m)[00m[01;31m)[00m
				(NF
					[01;31m(PX[00m
						(PX in hannover)
						(SIMPX
							(C wenn)
							(MF ich mich recht)
							(VC entsinne)
							(NF
								(SIMPX
									[01;31m(C[00m
										(KOUS weil)[01;31m)[00m
									[01;36m(NF[00m
										(SIMPX
											(MF da die geschaftspartner auch eine filiale jetzt eroffnet)
											(VC haben))[01;36m)[00m)))[01;31m)[00m)) [01;33mMVCN)[00m
			(SIMPX
				(KOORD und)
				(DM ja)
				(SIMPX ich weis nicht)
				[01;36m(SIMPX[00m
					(VF es)
					(LK sollte)
					(MF
						(PX auf alle falle)
						(ADVX noch)
						[01;31m(PX[00m
							(APPR in)
							(NX den nachsten drei monaten)[01;31m)[00m)
					(VC geschehen)
					(NX
						[01;31m(PX[00m
							(NX meiner ansicht)
							[01;36m(VC[00m
								(APPO nach)[01;36m)[00m[01;31m)[00m)[01;36m)[00m))
		(SU wie sehen sie das)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['C', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ART', 'NN', 'ADV', 'ART', 'NN', 'ADV', 'VVPP', 'VAFIN'), 'right siblings': [], 'left siblings': [(C (KOUS weil))], 'auto preterminal span': (19, 28), 'span': (19, 28), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU
			(SIMPX
				(VF wir)
				(LK wollten)
				[01;31m(FKOORD[00m
					(MVC uns ja fur ein meeting treffen)
					(KON beziehungsweise)
					[01;31m(MVC[00m [01;33m(MVCN[00m
						(MF eines)
						(VC ausmachen)[01;31m)[00m[01;31m)[00m
				(NF
					[01;31m(PX[00m
						(PX in hannover)
						(SIMPX
							(C wenn)
							(MF ich mich recht)
							(VC entsinne)
							(NF
								(SIMPX
									[01;31m(C[00m
										(KOUS weil)[01;31m)[00m
									(NF da die geschaftspartner auch eine filiale jetzt eroffnet haben))))[01;31m)[00m)) [01;33mMVCN)[00m
			(SIMPX
				(KOORD und)
				(DM ja)
				(SIMPX ich weis nicht)
				[01;36m(SIMPX[00m
					(VF es)
					(LK sollte)
					(MF
						(PX auf alle falle)
						(ADVX noch)
						[01;31m(PX[00m
							(APPR in)
							(NX den nachsten drei monaten)[01;31m)[00m)
					(VC geschehen)
					(NX
						[01;31m(PX[00m
							(NX meiner ansicht)
							[01;36m(VC[00m
								(APPO nach)[01;36m)[00m[01;31m)[00m)[01;36m)[00m))
		(SU wie sehen sie das)))
Step:UNSET add
{'subtrees': ['VF', 'LK', 'MF', 'VC', 'NX'], 'family': ['KOORD', 'DM', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VMFIN', 'APPR', 'PIDAT', 'NN', 'ADV', 'APPR', 'ART', 'ADJA', 'CARD', 'NN', 'VVINF', 'PPOSAT', 'NN', 'APPO'), 'right siblings': [], 'left siblings': [(KOORD (KON und)), (DM (PTKANT ja)), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN weis))) (MF (ADVX (PTKNEG nicht))))], 'auto preterminal span': (33, 48), 'span': (33, 48), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU
			(SIMPX
				(VF wir)
				(LK wollten)
				[01;31m(FKOORD[00m
					(MVC uns ja fur ein meeting treffen)
					(KON beziehungsweise)
					[01;31m(MVC[00m [01;33m(MVCN[00m
						(MF eines)
						(VC ausmachen)[01;31m)[00m[01;31m)[00m
				(NF
					[01;31m(PX[00m
						(PX in hannover)
						(SIMPX
							(C wenn)
							(MF ich mich recht)
							(VC entsinne)
							(NF
								(SIMPX
									[01;31m(C[00m
										(KOUS weil)[01;31m)[00m
									(NF da die geschaftspartner auch eine filiale jetzt eroffnet haben))))[01;31m)[00m)) [01;33mMVCN)[00m
			(SIMPX
				(KOORD und)
				(DM ja)
				(SIMPX ich weis nicht)
				(SIMPX
					(VF es)
					(LK sollte)
					(MF
						(PX auf alle falle)
						(ADVX noch)
						[01;31m(PX[00m
							(APPR in)
							(NX den nachsten drei monaten)[01;31m)[00m)
					(VC geschehen)
					(NX
						[01;31m(PX[00m
							(NX meiner ansicht)
							[01;36m(VC[00m
								(APPO nach)[01;36m)[00m[01;31m)[00m))))
		(SU wie sehen sie das)))
Step:Single Word Phrase
{'subtrees': ['APPO'], 'family': ['NX', 'VC'], 'over_word': True, 'over words': True, 'auto preterminals': ('APPO',), 'right siblings': [], 'left siblings': [(NX (PPOSAT meiner) (NN ansicht))], 'auto preterminal span': (47, 48), 'span': (47, 48), 'parent': 'PX', 'label': 'VC', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SU
			(SIMPX
				(VF wir)
				(LK wollten)
				[01;31m(FKOORD[00m
					(MVC uns ja fur ein meeting treffen)
					(KON beziehungsweise)
					[01;31m(MVC[00m [01;33m(MVCN[00m
						(MF eines)
						(VC ausmachen)[01;31m)[00m[01;31m)[00m
				(NF
					[01;31m(PX[00m
						(PX in hannover)
						(SIMPX
							(C wenn)
							(MF ich mich recht)
							(VC entsinne)
							(NF
								(SIMPX
									[01;31m(C[00m
										(KOUS weil)[01;31m)[00m
									(NF da die geschaftspartner auch eine filiale jetzt eroffnet haben))))[01;31m)[00m)) [01;33mMVCN)[00m
			(SIMPX
				(KOORD und)
				(DM ja)
				(SIMPX ich weis nicht)
				(SIMPX
					(VF es)
					(LK sollte)
					(MF
						(PX auf alle falle)
						(ADVX noch)
						[01;31m(PX[00m
							(APPR in)
							(NX den nachsten drei monaten)[01;31m)[00m)
					(VC geschehen)
					(NX
						[01;31m(PX[00m
							(NX meiner ansicht)
							(VC nach)[01;31m)[00m))))
		(SU wie sehen sie das)))
Step:UNSET remove
{'subtrees': ['MVC', 'KON', 'MVC'], 'family': ['VF', 'LK', 'FKOORD', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VMFIN', 'PRF', 'ADV', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'PIS', 'VVINF', 'APPR', 'NE', 'KOUS', 'PPER', 'PRF', 'ADJD', 'VVFIN', 'KOUS', 'ADV', 'ART', 'NN', 'ADV', 'ART', 'NN', 'ADV', 'VVPP', 'VAFIN'), 'right siblings': ['NF'], 'parent': 'SIMPX', 'auto preterminal span': (0, 28), 'span': (2, 11), 'left siblings': ['VF', 'LK'], 'label': 'FKOORD', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(SIMPX
				(VF wir)
				(LK wollten)
				(MVC uns ja fur ein meeting treffen)
				(KON beziehungsweise)
				[01;36m(MVCN[00m
					[01;31m(MVC[00m
						(MF eines)
						(VC ausmachen)[01;31m)[00m
					(NF
						[01;31m(PX[00m
							(PX in hannover)
							(SIMPX
								(C wenn)
								(MF ich mich recht)
								(VC entsinne)
								(NF
									(SIMPX
										[01;31m(C[00m
											(KOUS weil)[01;31m)[00m
										(NF da die geschaftspartner auch eine filiale jetzt eroffnet haben))))[01;31m)[00m)[01;36m)[00m)
			(SIMPX
				(KOORD und)
				(DM ja)
				(SIMPX ich weis nicht)
				(SIMPX
					(VF es)
					(LK sollte)
					(MF
						(PX auf alle falle)
						(ADVX noch)
						[01;31m(PX[00m
							(APPR in)
							(NX den nachsten drei monaten)[01;31m)[00m)
					(VC geschehen)
					(NX
						[01;31m(PX[00m
							(NX meiner ansicht)
							(VC nach)[01;31m)[00m))))
		(SU wie sehen sie das)))
Step:UNSET add
{'subtrees': ['MVC', 'NF'], 'family': ['VF', 'LK', 'MVC', 'KON', 'MVCN'], 'over_word': False, 'over words': False, 'auto preterminals': ('PIS', 'VVINF', 'APPR', 'NE', 'KOUS', 'PPER', 'PRF', 'ADJD', 'VVFIN', 'KOUS', 'ADV', 'ART', 'NN', 'ADV', 'ART', 'NN', 'ADV', 'VVPP', 'VAFIN'), 'right siblings': [], 'left siblings': [(VF (NX (PPER wir))), (LK (VXFIN (VMFIN wollten))), (MVC (MF (NX (PRF uns)) (ADVX (ADV ja)) (PX (APPR fur) (NX (ART ein) (NN meeting)))) (VC (VXINF (VVINF treffen)))), (KON beziehungsweise)], 'auto preterminal span': (9, 28), 'span': (9, 28), 'parent': 'SIMPX', 'label': 'MVCN', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU
			(SIMPX
				(VF wir)
				(LK wollten)
				(MVC uns ja fur ein meeting treffen)
				(KON beziehungsweise)
				(MVCN
					[01;31m(MVC[00m
						(MF eines)
						(VC ausmachen)[01;31m)[00m
					(NF
						[01;31m(PX[00m
							(PX in hannover)
							(SIMPX
								(C wenn)
								(MF ich mich recht)
								(VC entsinne)
								(NF
									(SIMPX
										[01;31m(C[00m
											(KOUS weil)[01;31m)[00m
										(NF da die geschaftspartner auch eine filiale jetzt eroffnet haben))))[01;31m)[00m)))
			(SIMPX
				(KOORD und)
				(DM ja)
				(SIMPX ich weis nicht)
				(SIMPX
					(VF es)
					(LK sollte)
					(MF
						(PX auf alle falle)
						(ADVX noch)
						[01;31m(PX[00m
							(APPR in)
							(NX den nachsten drei monaten)[01;31m)[00m)
					(VC geschehen)
					(NX
						[01;31m(PX[00m
							(NX meiner ansicht)
							(VC nach)[01;31m)[00m))))
		(SU wie sehen sie das)))
Step:UNSET remove
{'subtrees': ['MF', 'VC'], 'family': ['MVC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PIS', 'VVINF', 'APPR', 'NE', 'KOUS', 'PPER', 'PRF', 'ADJD', 'VVFIN', 'KOUS', 'ADV', 'ART', 'NN', 'ADV', 'ART', 'NN', 'ADV', 'VVPP', 'VAFIN'), 'right siblings': ['NF'], 'parent': 'MVCN', 'auto preterminal span': (9, 28), 'span': (9, 11), 'left siblings': [], 'label': 'MVC', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(SIMPX
				(VF wir)
				(LK wollten)
				(MVC uns ja fur ein meeting treffen)
				(KON beziehungsweise)
				(MVCN
					(MF eines)
					(VC ausmachen)
					(NF
						[01;31m(PX[00m
							(PX in hannover)
							(SIMPX
								(C wenn)
								(MF ich mich recht)
								(VC entsinne)
								(NF
									(SIMPX
										[01;31m(C[00m
											(KOUS weil)[01;31m)[00m
										(NF da die geschaftspartner auch eine filiale jetzt eroffnet haben))))[01;31m)[00m)))
			(SIMPX
				(KOORD und)
				(DM ja)
				(SIMPX ich weis nicht)
				(SIMPX
					(VF es)
					(LK sollte)
					(MF
						(PX auf alle falle)
						(ADVX noch)
						[01;31m(PX[00m
							(APPR in)
							(NX den nachsten drei monaten)[01;31m)[00m)
					(VC geschehen)
					(NX
						[01;31m(PX[00m
							(NX meiner ansicht)
							(VC nach)[01;31m)[00m))))
		(SU wie sehen sie das)))
Step:Unary
{'subtrees': ['PX', 'SIMPX'], 'family': ['PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'NE', 'KOUS', 'PPER', 'PRF', 'ADJD', 'VVFIN', 'KOUS', 'ADV', 'ART', 'NN', 'ADV', 'ART', 'NN', 'ADV', 'VVPP', 'VAFIN'), 'right siblings': [], 'parent': 'NF', 'auto preterminal span': (11, 28), 'span': (11, 28), 'left siblings': [], 'label': 'PX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(SIMPX
				(VF wir)
				(LK wollten)
				(MVC uns ja fur ein meeting treffen)
				(KON beziehungsweise)
				(MVCN
					(MF eines)
					(VC ausmachen)
					(NF
						(PX in hannover)
						(SIMPX
							(C wenn)
							(MF ich mich recht)
							(VC entsinne)
							(NF
								(SIMPX
									[01;31m(C[00m
										(KOUS weil)[01;31m)[00m
									(NF da die geschaftspartner auch eine filiale jetzt eroffnet haben)))))))
			(SIMPX
				(KOORD und)
				(DM ja)
				(SIMPX ich weis nicht)
				(SIMPX
					(VF es)
					(LK sollte)
					(MF
						(PX auf alle falle)
						(ADVX noch)
						[01;31m(PX[00m
							(APPR in)
							(NX den nachsten drei monaten)[01;31m)[00m)
					(VC geschehen)
					(NX
						[01;31m(PX[00m
							(NX meiner ansicht)
							(VC nach)[01;31m)[00m))))
		(SU wie sehen sie das)))
Step:Single Word Phrase
{'subtrees': ['KOUS'], 'family': ['C', 'NF'], 'over_word': True, 'over words': True, 'auto preterminals': ('KOUS', 'ADV', 'ART', 'NN', 'ADV', 'ART', 'NN', 'ADV', 'VVPP', 'VAFIN'), 'right siblings': ['NF'], 'parent': 'SIMPX', 'auto preterminal span': (18, 28), 'span': (18, 19), 'left siblings': [], 'label': 'C', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(SIMPX wir wollten uns ja fur ein meeting treffen beziehungsweise eines ausmachen in hannover wenn ich mich recht entsinne weil da die geschaftspartner auch eine filiale jetzt eroffnet haben)
			(SIMPX
				(KOORD und)
				(DM ja)
				(SIMPX ich weis nicht)
				(SIMPX
					(VF es)
					(LK sollte)
					(MF
						(PX auf alle falle)
						(ADVX noch)
						[01;31m(PX[00m
							(APPR in)
							(NX den nachsten drei monaten)[01;31m)[00m)
					(VC geschehen)
					(NX
						[01;31m(PX[00m
							(NX meiner ansicht)
							(VC nach)[01;31m)[00m))))
		(SU wie sehen sie das)))
Step:UNSET remove
{'subtrees': ['APPR', 'NX'], 'family': ['PX', 'ADVX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'PIDAT', 'NN', 'ADV', 'APPR', 'ART', 'ADJA', 'CARD', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (35, 44), 'span': (39, 44), 'left siblings': ['PX', 'ADVX'], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(SIMPX wir wollten uns ja fur ein meeting treffen beziehungsweise eines ausmachen in hannover wenn ich mich recht entsinne weil da die geschaftspartner auch eine filiale jetzt eroffnet haben)
			(SIMPX
				(KOORD und)
				(DM ja)
				(SIMPX ich weis nicht)
				(SIMPX
					(VF es)
					(LK sollte)
					(MF auf alle falle noch in den nachsten drei monaten)
					(VC geschehen)
					(NX
						[01;31m(PX[00m
							(NX meiner ansicht)
							(VC nach)[01;31m)[00m))))
		(SU wie sehen sie das)))
Step:Unary
{'subtrees': ['NX', 'VC'], 'family': ['PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPOSAT', 'NN', 'APPO'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (45, 48), 'span': (45, 48), 'left siblings': [], 'label': 'PX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP wir wollten uns ja fur ein meeting treffen beziehungsweise eines ausmachen in hannover wenn ich mich recht entsinne weil da die geschaftspartner auch eine filiale jetzt eroffnet haben und ja ich weis nicht es sollte auf alle falle noch in den nachsten drei monaten geschehen meiner ansicht nach wie sehen sie das)

Sentence 514:
7 Initial errors
0 on fringe, 4 iterations
2 Error:Different label
2 Error:Modifier Attachment
2 Error:UNSET move
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU ja november kame dann in frage)
		(SU wenn dann so die zweite woche)
		(SU
			(SIMPX
				(VF ich)
				(LK glaube)
				(NF
					(SIMPX
						(VF die zweite woche)
						(LK ware)
						[01;36m(ADJX[00m
							(MF
								[01;36m(ADVX[00m [01;31m(ADJX[00m
									(ADVX ganz)
									(ADJD gut)[01;31m)[00m[01;36m)[00m
								[01;31m(ADJX[00m
									(ADJD machbar)[01;31m)[00m)[01;36m)[00m))))
		[01;36m(SIMPX[00m
			(SU
				[01;31m(SIMPX[00m
					(VF wie)
					(LK sieht)
					(MF es da)[01;31m)[00m
				[01;36m(VC[00m
					(APPR bei)[01;36m)[00m)[01;36m)[00m))
Step:Different label
{'family': ['ADVX', 'ADJX'], 'auto preterminal span': (18, 20), 'span': (18, 20), 'subtrees': ['ADVX', 'ADJD'], 'parent': 'MF', 'over_word': False, 'auto preterminals': ('ADV', 'ADJD'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('ADJX', 'ADVX')}
(TOP
	(TURN
		(SU ja november kame dann in frage)
		(SU wenn dann so die zweite woche)
		(SU
			(SIMPX
				(VF ich)
				(LK glaube)
				(NF
					(SIMPX
						(VF die zweite woche)
						(LK ware)
						[01;36m(ADJX[00m
							(MF
								(ADVX ganz gut)
								[01;31m(ADJX[00m
									(ADJD machbar)[01;31m)[00m)[01;36m)[00m))))
		[01;36m(SIMPX[00m
			(SU
				[01;31m(SIMPX[00m
					(VF wie)
					(LK sieht)
					(MF es da)[01;31m)[00m
				[01;36m(VC[00m
					(APPR bei)[01;36m)[00m)[01;36m)[00m))
Step:Modifier Attachment
{'new_parent': 'ADJX', 'new_family': ['ADVX', 'ADJD'], 'mover info': [('ADVX', (18, 20))], 'old_family': ['ADVX', 'ADJX'], 'start left siblings': [], 'auto preterminals': ('ADV', 'ADJD', 'ADJD'), 'start right siblings': ['ADJX'], 'end left siblings': [], 'auto preterminal span': (18, 21), 'movers': ['ADVX'], 'old_parent': 'MF', 'end right siblings': ['ADJD'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU ja november kame dann in frage)
		(SU wenn dann so die zweite woche)
		(SU ich glaube die zweite woche ware ganz gut machbar)
		[01;36m(SIMPX[00m
			(SU
				[01;31m(SIMPX[00m
					(VF wie)
					(LK sieht)
					(MF es da)[01;31m)[00m
				[01;36m(VC[00m
					(APPR bei)[01;36m)[00m)[01;36m)[00m))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'APPR'], 'mover info': [('APPR', (25, 26))], 'old_family': ['SIMPX', 'APPR'], 'start left siblings': ['SIMPX'], 'auto preterminals': ('PWAV', 'VVFIN', 'PPER', 'ADV', 'APPR'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (21, 26), 'movers': ['APPR'], 'old_parent': 'SU', 'POS confusion': ('APPR', 'APPR'), 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU ja november kame dann in frage)
		(SU wenn dann so die zweite woche)
		(SU ich glaube die zweite woche ware ganz gut machbar)
		(SU
			(SIMPX
				(VF wie)
				(LK sieht)
				(MF es da)
				[01;36m(VC[00m
					(APPR bei)[01;36m)[00m))))
Step:Single Word Phrase
{'subtrees': ['APPR'], 'family': ['VF', 'LK', 'MF', 'VC'], 'over_word': True, 'over words': True, 'auto preterminals': ('APPR',), 'right siblings': [], 'left siblings': [(VF (ADJX (PWAV wie))), (LK (VXFIN (VVFIN sieht))), (MF (NX (PPER es)) (ADVX (ADV da)))], 'auto preterminal span': (25, 26), 'span': (25, 26), 'parent': 'SIMPX', 'label': 'VC', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP ja november kame dann in frage wenn dann so die zweite woche ich glaube die zweite woche ware ganz gut machbar wie sieht es da bei)

Sentence 515:
0 Initial errors
0 on fringe, 0 iterations

Sentence 516:
0 Initial errors
0 on fringe, 0 iterations

Sentence 517:
8 Initial errors
0 on fringe, 5 iterations
3 Error:Modifier Attachment
2 Error:Single Word Phrase
1 Error:Unary
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;36m(SIMPX[00m
			(SU
				(APPR ab)
				(SIMPX ab halb sechs ist in ordnung))[01;36m)[00m
		(SU
			[01;31m(NX[00m
				(ADVX nur)
				(ADVX nicht)
				(ADVX gleich)
				(NX halb sechs)[01;31m)[00m)
		(SU das ware mir etwas zu fruh)
		(SU
			(ADJX
				[01;31m(NX[00m
					[01;36m(LK[00m [01;36m(VXFIN[00m [01;31m(ADVX[00m
						(ADV fruhestens)[01;31m)[00m[01;36m)[00m[01;36m)[00m
					[01;36m(NX[00m
						(ART [01;33m(ADJX[00m eine)
						(NN stunde)[01;36m)[00m[01;31m)[00m
				(ADJD spater))))) [01;33mADJX)[00m
Step:Modifier Attachment
{'new_parent': 'SU', 'new_family': ['ADVX', 'ADJX'], 'mover info': [('ADVX', (18, 19))], 'old_family': ['ADVX', 'ART', 'NN'], 'start left siblings': [], 'auto preterminals': ('ADV', 'ART', 'NN', 'ADJD'), 'start right siblings': ['ART', 'NN'], 'end left siblings': [], 'auto preterminal span': (18, 22), 'adding node already present': False, 'movers': ['ADVX'], 'old_parent': 'NX', 'POS confusion': ('ADV', 'ADV'), 'added and moved': True, 'end right siblings': ['ADJX'], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'ADJX'}
(TOP
	(TURN
		[01;36m(SIMPX[00m
			(SU
				(APPR ab)
				(SIMPX ab halb sechs ist in ordnung))[01;36m)[00m
		(SU
			[01;31m(NX[00m
				(ADVX nur)
				(ADVX nicht)
				(ADVX gleich)
				(NX halb sechs)[01;31m)[00m)
		(SU das ware mir etwas zu fruh)
		(ADJX
			(SU
				[01;36m(LK[00m [01;36m(VXFIN[00m [01;31m(ADVX[00m
					(ADV fruhestens)[01;31m)[00m[01;36m)[00m[01;36m)[00m
				(ADJX eine stunde spater)))))
Step:Single Word Phrase
{'family': ['VXFIN', 'ADJX'], 'auto preterminal span': (18, 19), 'span': (18, 19), 'subtrees': ['ADV'], 'parent': 'SU', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'VXFIN')}
(TOP
	(TURN
		[01;36m(SIMPX[00m
			(SU
				(APPR ab)
				(SIMPX ab halb sechs ist in ordnung))[01;36m)[00m
		(SU
			[01;31m(NX[00m
				(ADVX nur)
				(ADVX nicht)
				(ADVX gleich)
				(NX halb sechs)[01;31m)[00m)
		(SU das ware mir etwas zu fruh)
		(ADJX
			(SU
				[01;36m(LK[00m
					(VXFIN
						(ADV fruhestens))[01;36m)[00m
				(ADJX eine stunde spater)))))
Step:Unary
{'subtrees': ['SU'], 'family': ['SIMPX', 'SU', 'SU', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'APPR', 'ADJD', 'CARD', 'VAFIN', 'APPR', 'NN'), 'right siblings': [(SU (NX (ADVX (ADV nur)) (ADVX (PTKNEG nicht)) (ADVX (ADV gleich)) (NX (ADJX (ADJD halb)) (CARD sechs)))), (SU (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VAFIN ware))) (MF (NX (PPER mir)) (ADJX (ADVX (ADV etwas)) (PTKA zu) (ADJD fruh))))), (ADJX (SU (VXFIN (ADV fruhestens)) (ADJX (NX (ART eine) (NN stunde)) (ADJD spater))))], 'left siblings': [], 'auto preterminal span': (0, 7), 'span': (0, 7), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SIMPX ab ab halb sechs ist in ordnung)
		(SU
			[01;31m(NX[00m
				(ADVX nur)
				(ADVX nicht)
				(ADVX gleich)
				(NX halb sechs)[01;31m)[00m)
		(SU das ware mir etwas zu fruh)
		(ADJX
			(SU
				[01;36m(LK[00m
					(VXFIN
						(ADV fruhestens))[01;36m)[00m
				(ADJX eine stunde spater)))))
Step:Unary
{'subtrees': ['VXFIN'], 'family': ['LK', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV',), 'right siblings': [(ADJX (NX (ART eine) (NN stunde)) (ADJD spater))], 'left siblings': [], 'auto preterminal span': (18, 19), 'span': (18, 19), 'parent': 'SU', 'label': 'LK', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SIMPX ab ab halb sechs ist in ordnung)
		(SU
			[01;31m(NX[00m
				(ADVX nur)
				(ADVX nicht)
				(ADVX gleich)
				(NX halb sechs)[01;31m)[00m)
		(SU das ware mir etwas zu fruh)
		(ADJX fruhestens eine stunde spater)))
Step:Unary
{'subtrees': ['ADVX', 'ADVX', 'ADVX', 'NX'], 'family': ['NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PTKNEG', 'ADV', 'ADJD', 'CARD'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (7, 12), 'span': (7, 12), 'left siblings': [], 'label': 'NX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ab ab halb sechs ist in ordnung nur nicht gleich halb sechs das ware mir etwas zu fruh fruhestens eine stunde spater)

Sentence 518:
0 Initial errors
0 on fringe, 0 iterations

Sentence 519:
29 Initial errors
0 on fringe, 17 iterations
5 Error:NP Attachment
4 Error:VP Attachment
3 Error:PP Attachment
2 Error:Single Word Phrase
2 Error:Single Word Phrase
2 Error:PP Attachment
1 Error:UNSET add
1 Error:Unary
1 Error:Co-ordination
1 Error:Unary
1 Error:Modifier Attachment
1 Error:Modifier Attachment
1 Error:Co-ordination
1 Error:Modifier Attachment
1 Error:Unary
1 Error:UNSET remove
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX
				(VF ich)
				(LK weis)
				(MF nicht)
				(NF
					(SIMPX
						(C ob)
						[01;31m(MF[00m [01;33m(MF[00m
							(NX sie)
							(NX sich)
							(PX um die unterkunft)
							(ADVX schon)[01;31m)[00m
						[01;31m(VC[00m
							[01;36m(PX[00m [01;31m(VXINF[00m
								(VVPP gekummert)[01;31m)[00m [01;33mMF)[00m[01;36m)[00m
							[01;36m(VC[00m
								(VXFIN
									(VAFIN haben))[01;36m)[00m[01;31m)[00m))))
		(SU
			(SIMPX
				[01;31m(VF[00m
					(SIMPX
						(C wenn)
						(MF nicht))[01;31m)[00m
				[01;36m(SIMPX[00m
					(LK hatte)
					(MF ich hier drei vorschlage)[01;36m)[00m))
		(SU
			(SIMPX
				(VF es)
				(LK gabe)
				(MF
					(ADVX da)
					[01;36m(NX[00m
						[01;31m(NX[00m
							(NX das hotel zentral)
							(NX das hotel nohre)
							(KON und)
							[01;33m(NX[00m (NX das hotel prinzenhof)[01;31m)[00m
						(PX in hannover)[01;36m)[00m)) [01;33mNX)[00m
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					[01;31m(NX[00m
						[01;31m(NX[00m
							[01;36m(ADVX[00m [01;31m(NX[00m
								(PIS beides)[01;31m)[00m[01;36m)[00m
							[01;31m(NX[00m
								(ADJX sehr gute)
								(NN unterkunfte)[01;31m)[00m[01;31m)[00m
						(KON und)
						[01;31m(ADJX[00m
							(ADVX auch)
							(ADJX ziemlich zentral gelegen)[01;31m)[00m[01;31m)[00m[01;31m)[00m
				(LK glaube)
				(MF ich)[01;31m)[00m)
		(SU die unterscheiden sich dann wohl nur im preis)
		(SU
			[01;31m(SIMPX[00m
				(VF das eine)
				(LK liegt)
				[01;31m(MF[00m [01;33m(PX (MF[00m
					[01;31m(PX[00m
						(ADVX etwas)
						(APPR uber)
						[01;33m(NX (NX[00m (NX zweihundert mark)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			[01;31m(NX[00m
				(NX die anderen) [01;33mNX)[00m
				(PX
					(ADVX so)
					(APPR um)
					(NX [01;33m(ADJX[00m
						(NX hundert vierzig mark)
						[01;31m(NX[00m
							(ADJX hundert zwanzig) [01;33mADJX)[00m
							(NN mark)[01;31m)[00m))[01;31m)[00m) [01;33mNX) MF) PX)[00m
		(SU ich weis)))
Step:NP Attachment
{'new_parent': 'PX', 'new_family': ['ADVX', 'APPR', 'NX', 'NX'], 'mover info': [('NX', (61, 71))], 'old_family': ['SIMPX', 'NX'], 'start left siblings': ['SIMPX'], 'auto preterminals': ('ART', 'PIS', 'VVFIN', 'ADV', 'APPR', 'CARD', 'NN', 'ART', 'PIS', 'ADV', 'APPR', 'CARD', 'CARD', 'NN', 'CARD', 'CARD', 'NN'), 'start right siblings': [], 'end left siblings': ['ADVX', 'APPR', 'NX'], 'auto preterminal span': (54, 71), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'SU', 'added and moved': True, 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX
				(VF ich)
				(LK weis)
				(MF nicht)
				(NF
					(SIMPX
						(C ob)
						[01;31m(MF[00m [01;33m(MF[00m
							(NX sie)
							(NX sich)
							(PX um die unterkunft)
							(ADVX schon)[01;31m)[00m
						[01;31m(VC[00m
							[01;36m(PX[00m [01;31m(VXINF[00m
								(VVPP gekummert)[01;31m)[00m [01;33mMF)[00m[01;36m)[00m
							[01;36m(VC[00m
								(VXFIN
									(VAFIN haben))[01;36m)[00m[01;31m)[00m))))
		(SU
			(SIMPX
				[01;31m(VF[00m
					(SIMPX
						(C wenn)
						(MF nicht))[01;31m)[00m
				[01;36m(SIMPX[00m
					(LK hatte)
					(MF ich hier drei vorschlage)[01;36m)[00m))
		(SU
			(SIMPX
				(VF es)
				(LK gabe)
				(MF
					(ADVX da)
					[01;36m(NX[00m
						[01;31m(NX[00m
							(NX das hotel zentral)
							(NX das hotel nohre)
							(KON und)
							[01;33m(NX[00m (NX das hotel prinzenhof)[01;31m)[00m
						(PX in hannover)[01;36m)[00m)) [01;33mNX)[00m
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					[01;31m(NX[00m
						[01;31m(NX[00m
							[01;36m(ADVX[00m [01;31m(NX[00m
								(PIS beides)[01;31m)[00m[01;36m)[00m
							[01;31m(NX[00m
								(ADJX sehr gute)
								(NN unterkunfte)[01;31m)[00m[01;31m)[00m
						(KON und)
						[01;31m(ADJX[00m
							(ADVX auch)
							(ADJX ziemlich zentral gelegen)[01;31m)[00m[01;31m)[00m[01;31m)[00m
				(LK glaube)
				(MF ich)[01;31m)[00m)
		(SU die unterscheiden sich dann wohl nur im preis)
		(SU
			[01;31m(SIMPX[00m
				(VF das eine)
				(LK liegt)
				(MF
					(PX
						(ADVX etwas)
						(APPR uber)
						(NX [01;33m(NX[00m
							(NX zweihundert mark)
							[01;31m(NX[00m
								(NX die anderen) [01;33mNX)[00m
								(PX
									(ADVX so)
									(APPR um)
									(NX [01;33m(ADJX[00m
										(NX hundert vierzig mark)
										[01;31m(NX[00m
											(ADJX hundert zwanzig) [01;33mADJX)[00m
											(NN mark)[01;31m)[00m))[01;31m)[00m)))[01;31m)[00m)
		(SU ich weis)))
Step:VP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'NX', 'PX', 'ADVX', 'VXINF'], 'mover info': [('VXINF', (11, 12))], 'old_family': ['VXINF', 'VXFIN'], 'start left siblings': [], 'auto preterminals': ('KOUS', 'PPER', 'PRF', 'APPR', 'ART', 'NN', 'ADV', 'VVPP', 'VAFIN'), 'start right siblings': ['VXFIN'], 'end left siblings': ['NX', 'NX', 'PX', 'ADVX'], 'auto preterminal span': (4, 13), 'movers': ['VXINF'], 'old_parent': 'VC', 'POS confusion': ('VVPP', 'VVPP'), 'end right siblings': [], 'classified_type': 'VP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX
				(VF ich)
				(LK weis)
				(MF nicht)
				(NF
					(SIMPX
						(C ob)
						(MF
							(NX sie)
							(NX sich)
							(PX um die unterkunft)
							(ADVX schon)
							[01;36m(PX[00m [01;31m(VXINF[00m
								(VVPP gekummert)[01;31m)[00m[01;36m)[00m)
						(VC haben)))))
		(SU
			(SIMPX
				[01;31m(VF[00m
					(SIMPX
						(C wenn)
						(MF nicht))[01;31m)[00m
				[01;36m(SIMPX[00m
					(LK hatte)
					(MF ich hier drei vorschlage)[01;36m)[00m))
		(SU
			(SIMPX
				(VF es)
				(LK gabe)
				(MF
					(ADVX da)
					[01;36m(NX[00m
						[01;31m(NX[00m
							(NX das hotel zentral)
							(NX das hotel nohre)
							(KON und)
							[01;33m(NX[00m (NX das hotel prinzenhof)[01;31m)[00m
						(PX in hannover)[01;36m)[00m)) [01;33mNX)[00m
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					[01;31m(NX[00m
						[01;31m(NX[00m
							[01;36m(ADVX[00m [01;31m(NX[00m
								(PIS beides)[01;31m)[00m[01;36m)[00m
							[01;31m(NX[00m
								(ADJX sehr gute)
								(NN unterkunfte)[01;31m)[00m[01;31m)[00m
						(KON und)
						[01;31m(ADJX[00m
							(ADVX auch)
							(ADJX ziemlich zentral gelegen)[01;31m)[00m[01;31m)[00m[01;31m)[00m
				(LK glaube)
				(MF ich)[01;31m)[00m)
		(SU die unterscheiden sich dann wohl nur im preis)
		(SU
			[01;31m(SIMPX[00m
				(VF das eine)
				(LK liegt)
				(MF
					(PX
						(ADVX etwas)
						(APPR uber)
						(NX [01;33m(NX[00m
							(NX zweihundert mark)
							[01;31m(NX[00m
								(NX die anderen) [01;33mNX)[00m
								(PX
									(ADVX so)
									(APPR um)
									(NX [01;33m(ADJX[00m
										(NX hundert vierzig mark)
										[01;31m(NX[00m
											(ADJX hundert zwanzig) [01;33mADJX)[00m
											(NN mark)[01;31m)[00m))[01;31m)[00m)))[01;31m)[00m)
		(SU ich weis)))
Step:PP Attachment
{'new_parent': 'NX', 'new_family': ['NX', 'NX', 'KON', 'NX', 'PX'], 'mover info': [('PX', (33, 35))], 'old_family': ['ADVX', 'NX', 'PX'], 'start left siblings': ['ADVX', 'NX'], 'auto preterminals': ('ADV', 'ART', 'NN', 'NE', 'ART', 'NN', 'NE', 'KON', 'ART', 'NN', 'NE', 'APPR', 'NE'), 'start right siblings': [], 'end left siblings': ['NX', 'NX', 'KON', 'NX'], 'auto preterminal span': (22, 35), 'adding node already present': False, 'movers': ['PX'], 'old_parent': 'MF', 'added and moved': True, 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'ADVX'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX
				(VF ich)
				(LK weis)
				(MF nicht)
				(NF
					(SIMPX
						(C ob)
						(MF
							(NX sie)
							(NX sich)
							(PX um die unterkunft)
							(ADVX schon)
							[01;36m(PX[00m [01;31m(VXINF[00m
								(VVPP gekummert)[01;31m)[00m[01;36m)[00m)
						(VC haben)))))
		(SU
			(SIMPX
				[01;31m(VF[00m
					(SIMPX
						(C wenn)
						(MF nicht))[01;31m)[00m
				[01;36m(SIMPX[00m
					(LK hatte)
					(MF ich hier drei vorschlage)[01;36m)[00m))
		(SU
			(SIMPX es gabe da das hotel zentral das hotel nohre und das hotel prinzenhof in hannover)
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					[01;31m(NX[00m
						[01;31m(NX[00m
							[01;36m(ADVX[00m [01;31m(NX[00m
								(PIS beides)[01;31m)[00m[01;36m)[00m
							[01;31m(NX[00m
								(ADJX sehr gute)
								(NN unterkunfte)[01;31m)[00m[01;31m)[00m
						(KON und)
						[01;31m(ADJX[00m
							(ADVX auch)
							(ADJX ziemlich zentral gelegen)[01;31m)[00m[01;31m)[00m[01;31m)[00m
				(LK glaube)
				(MF ich)[01;31m)[00m)
		(SU die unterscheiden sich dann wohl nur im preis)
		(SU
			[01;31m(SIMPX[00m
				(VF das eine)
				(LK liegt)
				(MF
					(PX
						(ADVX etwas)
						(APPR uber)
						(NX [01;33m(NX[00m
							(NX zweihundert mark)
							[01;31m(NX[00m
								(NX die anderen) [01;33mNX)[00m
								(PX
									(ADVX so)
									(APPR um)
									(NX [01;33m(ADJX[00m
										(NX hundert vierzig mark)
										[01;31m(NX[00m
											(ADJX hundert zwanzig) [01;33mADJX)[00m
											(NN mark)[01;31m)[00m))[01;31m)[00m)))[01;31m)[00m)
		(SU ich weis)))
Step:Single Word Phrase
{'family': ['NX', 'NX', 'PX', 'ADVX', 'PX'], 'auto preterminal span': (11, 12), 'span': (11, 12), 'subtrees': ['VVPP'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('VVPP',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VXINF', 'PX')}
(TOP
	(TURN
		(SU ja ich weis nicht ob sie sich um die unterkunft schon gekummert haben)
		(SU
			(SIMPX
				[01;31m(VF[00m
					(SIMPX
						(C wenn)
						(MF nicht))[01;31m)[00m
				[01;36m(SIMPX[00m
					(LK hatte)
					(MF ich hier drei vorschlage)[01;36m)[00m))
		(SU
			(SIMPX es gabe da das hotel zentral das hotel nohre und das hotel prinzenhof in hannover)
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					[01;31m(NX[00m
						[01;31m(NX[00m
							[01;36m(ADVX[00m [01;31m(NX[00m
								(PIS beides)[01;31m)[00m[01;36m)[00m
							[01;31m(NX[00m
								(ADJX sehr gute)
								(NN unterkunfte)[01;31m)[00m[01;31m)[00m
						(KON und)
						[01;31m(ADJX[00m
							(ADVX auch)
							(ADJX ziemlich zentral gelegen)[01;31m)[00m[01;31m)[00m[01;31m)[00m
				(LK glaube)
				(MF ich)[01;31m)[00m)
		(SU die unterscheiden sich dann wohl nur im preis)
		(SU
			[01;31m(SIMPX[00m
				(VF das eine)
				(LK liegt)
				(MF
					(PX
						(ADVX etwas)
						(APPR uber)
						(NX [01;33m(NX[00m
							(NX zweihundert mark)
							[01;31m(NX[00m
								(NX die anderen) [01;33mNX)[00m
								(PX
									(ADVX so)
									(APPR um)
									(NX [01;33m(ADJX[00m
										(NX hundert vierzig mark)
										[01;31m(NX[00m
											(ADJX hundert zwanzig) [01;33mADJX)[00m
											(NN mark)[01;31m)[00m))[01;31m)[00m)))[01;31m)[00m)
		(SU ich weis)))
Step:Single Word Phrase
{'family': ['ADVX', 'NX'], 'auto preterminal span': (35, 36), 'span': (35, 36), 'subtrees': ['PIS'], 'parent': 'NX', 'over_word': True, 'auto preterminals': ('PIS',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('NX', 'ADVX')}
(TOP
	(TURN
		(SU ja ich weis nicht ob sie sich um die unterkunft schon gekummert haben)
		(SU
			(SIMPX
				[01;31m(VF[00m
					(SIMPX
						(C wenn)
						(MF nicht))[01;31m)[00m
				[01;36m(SIMPX[00m
					(LK hatte)
					(MF ich hier drei vorschlage)[01;36m)[00m))
		(SU
			(SIMPX es gabe da das hotel zentral das hotel nohre und das hotel prinzenhof in hannover)
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					[01;31m(NX[00m
						[01;31m(NX[00m
							(ADVX beides)
							[01;31m(NX[00m
								(ADJX sehr gute)
								(NN unterkunfte)[01;31m)[00m[01;31m)[00m
						(KON und)
						[01;31m(ADJX[00m
							(ADVX auch)
							(ADJX ziemlich zentral gelegen)[01;31m)[00m[01;31m)[00m[01;31m)[00m
				(LK glaube)
				(MF ich)[01;31m)[00m)
		(SU die unterscheiden sich dann wohl nur im preis)
		(SU
			[01;31m(SIMPX[00m
				(VF das eine)
				(LK liegt)
				(MF
					(PX
						(ADVX etwas)
						(APPR uber)
						(NX [01;33m(NX[00m
							(NX zweihundert mark)
							[01;31m(NX[00m
								(NX die anderen) [01;33mNX)[00m
								(PX
									(ADVX so)
									(APPR um)
									(NX [01;33m(ADJX[00m
										(NX hundert vierzig mark)
										[01;31m(NX[00m
											(ADJX hundert zwanzig) [01;33mADJX)[00m
											(NN mark)[01;31m)[00m))[01;31m)[00m)))[01;31m)[00m)
		(SU ich weis)))
Step:PP Attachment
{'new_parent': 'PX', 'new_family': ['ADVX', 'APPR', 'NX', 'PX'], 'mover info': [('PX', (63, 71))], 'old_family': ['NX', 'PX'], 'start left siblings': ['NX'], 'auto preterminals': ('ADV', 'APPR', 'CARD', 'NN', 'ART', 'PIS', 'ADV', 'APPR', 'CARD', 'CARD', 'NN', 'CARD', 'CARD', 'NN'), 'start right siblings': [], 'end left siblings': ['ADVX', 'APPR', 'NX'], 'auto preterminal span': (57, 71), 'adding node already present': False, 'movers': ['PX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(SU ja ich weis nicht ob sie sich um die unterkunft schon gekummert haben)
		(SU
			(SIMPX
				[01;31m(VF[00m
					(SIMPX
						(C wenn)
						(MF nicht))[01;31m)[00m
				[01;36m(SIMPX[00m
					(LK hatte)
					(MF ich hier drei vorschlage)[01;36m)[00m))
		(SU
			(SIMPX es gabe da das hotel zentral das hotel nohre und das hotel prinzenhof in hannover)
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					[01;31m(NX[00m
						[01;31m(NX[00m
							(ADVX beides)
							[01;31m(NX[00m
								(ADJX sehr gute)
								(NN unterkunfte)[01;31m)[00m[01;31m)[00m
						(KON und)
						[01;31m(ADJX[00m
							(ADVX auch)
							(ADJX ziemlich zentral gelegen)[01;31m)[00m[01;31m)[00m[01;31m)[00m
				(LK glaube)
				(MF ich)[01;31m)[00m)
		(SU die unterscheiden sich dann wohl nur im preis)
		(SU
			[01;31m(SIMPX[00m
				(VF das eine)
				(LK liegt)
				(MF
					(PX
						(ADVX etwas)
						(APPR uber)
						(NX
							(NX zweihundert mark die anderen)
							(PX
								(ADVX so)
								(APPR um)
								(NX [01;33m(ADJX[00m
									(NX hundert vierzig mark)
									[01;31m(NX[00m
										(ADJX hundert zwanzig) [01;33mADJX)[00m
										(NN mark)[01;31m)[00m)))))[01;31m)[00m)
		(SU ich weis)))
Step:UNSET add
{'subtrees': ['LK', 'MF'], 'family': ['VF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'PPER', 'ADV', 'CARD', 'NN'), 'right siblings': [], 'left siblings': [(VF (SIMPX (C (KOUS wenn)) (MF (ADVX (PTKNEG nicht)))))], 'auto preterminal span': (15, 20), 'span': (15, 20), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU ja ich weis nicht ob sie sich um die unterkunft schon gekummert haben)
		(SU
			(SIMPX
				[01;31m(VF[00m
					(SIMPX
						(C wenn)
						(MF nicht))[01;31m)[00m
				(SIMPX hatte ich hier drei vorschlage)))
		(SU
			(SIMPX es gabe da das hotel zentral das hotel nohre und das hotel prinzenhof in hannover)
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					[01;31m(NX[00m
						[01;31m(NX[00m
							(ADVX beides)
							[01;31m(NX[00m
								(ADJX sehr gute)
								(NN unterkunfte)[01;31m)[00m[01;31m)[00m
						(KON und)
						[01;31m(ADJX[00m
							(ADVX auch)
							(ADJX ziemlich zentral gelegen)[01;31m)[00m[01;31m)[00m[01;31m)[00m
				(LK glaube)
				(MF ich)[01;31m)[00m)
		(SU die unterscheiden sich dann wohl nur im preis)
		(SU
			[01;31m(SIMPX[00m
				(VF das eine)
				(LK liegt)
				(MF
					(PX
						(ADVX etwas)
						(APPR uber)
						(NX
							(NX zweihundert mark die anderen)
							(PX
								(ADVX so)
								(APPR um)
								(NX [01;33m(ADJX[00m
									(NX hundert vierzig mark)
									[01;31m(NX[00m
										(ADJX hundert zwanzig) [01;33mADJX)[00m
										(NN mark)[01;31m)[00m)))))[01;31m)[00m)
		(SU ich weis)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['VF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PTKNEG', 'VAFIN', 'PPER', 'ADV', 'CARD', 'NN'), 'right siblings': ['SIMPX'], 'parent': 'SIMPX', 'auto preterminal span': (13, 20), 'span': (13, 15), 'left siblings': [], 'label': 'VF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU ja ich weis nicht ob sie sich um die unterkunft schon gekummert haben)
		(SU wenn nicht hatte ich hier drei vorschlage)
		(SU
			(SIMPX es gabe da das hotel zentral das hotel nohre und das hotel prinzenhof in hannover)
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					[01;31m(NX[00m
						[01;31m(NX[00m
							(ADVX beides)
							[01;31m(NX[00m
								(ADJX sehr gute)
								(NN unterkunfte)[01;31m)[00m[01;31m)[00m
						(KON und)
						[01;31m(ADJX[00m
							(ADVX auch)
							(ADJX ziemlich zentral gelegen)[01;31m)[00m[01;31m)[00m[01;31m)[00m
				(LK glaube)
				(MF ich)[01;31m)[00m)
		(SU die unterscheiden sich dann wohl nur im preis)
		(SU
			[01;31m(SIMPX[00m
				(VF das eine)
				(LK liegt)
				(MF
					(PX
						(ADVX etwas)
						(APPR uber)
						(NX
							(NX zweihundert mark die anderen)
							(PX
								(ADVX so)
								(APPR um)
								(NX [01;33m(ADJX[00m
									(NX hundert vierzig mark)
									[01;31m(NX[00m
										(ADJX hundert zwanzig) [01;33mADJX)[00m
										(NN mark)[01;31m)[00m)))))[01;31m)[00m)
		(SU ich weis)))
Step:Co-ordination
{'subtrees': ['ADVX', 'NX'], 'family': ['NX', 'KON', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PIS', 'ADV', 'ADJA', 'NN', 'KON', 'ADV', 'ADV', 'ADV', 'ADJD'), 'right siblings': ['KON', 'ADJX'], 'parent': 'NX', 'auto preterminal span': (35, 44), 'span': (35, 39), 'left siblings': [], 'label': 'NX', 'classified_type': 'Co-ordination', 'type': 'remove'}
(TOP
	(TURN
		(SU ja ich weis nicht ob sie sich um die unterkunft schon gekummert haben)
		(SU wenn nicht hatte ich hier drei vorschlage)
		(SU
			(SIMPX es gabe da das hotel zentral das hotel nohre und das hotel prinzenhof in hannover)
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					[01;31m(NX[00m
						(ADVX beides)
						[01;31m(NX[00m
							(ADJX sehr gute)
							(NN unterkunfte)[01;31m)[00m
						(KON und)
						[01;31m(ADJX[00m
							(ADVX auch)
							(ADJX ziemlich zentral gelegen)[01;31m)[00m[01;31m)[00m[01;31m)[00m
				(LK glaube)
				(MF ich)[01;31m)[00m)
		(SU die unterscheiden sich dann wohl nur im preis)
		(SU
			[01;31m(SIMPX[00m
				(VF das eine)
				(LK liegt)
				(MF
					(PX
						(ADVX etwas)
						(APPR uber)
						(NX
							(NX zweihundert mark die anderen)
							(PX
								(ADVX so)
								(APPR um)
								(NX [01;33m(ADJX[00m
									(NX hundert vierzig mark)
									[01;31m(NX[00m
										(ADJX hundert zwanzig) [01;33mADJX)[00m
										(NN mark)[01;31m)[00m)))))[01;31m)[00m)
		(SU ich weis)))
Step:Unary
{'subtrees': ['NX'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PIS', 'ADV', 'ADJA', 'NN', 'KON', 'ADV', 'ADV', 'ADV', 'ADJD', 'VVFIN', 'PPER'), 'right siblings': ['LK', 'MF'], 'parent': 'SIMPX', 'auto preterminal span': (35, 46), 'span': (35, 44), 'left siblings': [], 'label': 'VF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU ja ich weis nicht ob sie sich um die unterkunft schon gekummert haben)
		(SU wenn nicht hatte ich hier drei vorschlage)
		(SU
			(SIMPX es gabe da das hotel zentral das hotel nohre und das hotel prinzenhof in hannover)
			[01;31m(SIMPX[00m
				[01;31m(NX[00m
					(ADVX beides)
					[01;31m(NX[00m
						(ADJX sehr gute)
						(NN unterkunfte)[01;31m)[00m
					(KON und)
					[01;31m(ADJX[00m
						(ADVX auch)
						(ADJX ziemlich zentral gelegen)[01;31m)[00m[01;31m)[00m
				(LK glaube)
				(MF ich)[01;31m)[00m)
		(SU die unterscheiden sich dann wohl nur im preis)
		(SU
			[01;31m(SIMPX[00m
				(VF das eine)
				(LK liegt)
				(MF
					(PX
						(ADVX etwas)
						(APPR uber)
						(NX
							(NX zweihundert mark die anderen)
							(PX
								(ADVX so)
								(APPR um)
								(NX [01;33m(ADJX[00m
									(NX hundert vierzig mark)
									[01;31m(NX[00m
										(ADJX hundert zwanzig) [01;33mADJX)[00m
										(NN mark)[01;31m)[00m)))))[01;31m)[00m)
		(SU ich weis)))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'NX', 'KON', 'ADJX'], 'family': ['NX', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PIS', 'ADV', 'ADJA', 'NN', 'KON', 'ADV', 'ADV', 'ADV', 'ADJD', 'VVFIN', 'PPER'), 'right siblings': ['LK', 'MF'], 'parent': 'SIMPX', 'auto preterminal span': (35, 46), 'span': (35, 44), 'left siblings': [], 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU ja ich weis nicht ob sie sich um die unterkunft schon gekummert haben)
		(SU wenn nicht hatte ich hier drei vorschlage)
		(SU
			(SIMPX es gabe da das hotel zentral das hotel nohre und das hotel prinzenhof in hannover)
			[01;31m(SIMPX[00m
				(ADVX beides)
				[01;31m(NX[00m
					(ADJX sehr gute)
					(NN unterkunfte)[01;31m)[00m
				(KON und)
				[01;31m(ADJX[00m
					(ADVX auch)
					(ADJX ziemlich zentral gelegen)[01;31m)[00m
				(LK glaube)
				(MF ich)[01;31m)[00m)
		(SU die unterscheiden sich dann wohl nur im preis)
		(SU
			[01;31m(SIMPX[00m
				(VF das eine)
				(LK liegt)
				(MF
					(PX
						(ADVX etwas)
						(APPR uber)
						(NX
							(NX zweihundert mark die anderen)
							(PX
								(ADVX so)
								(APPR um)
								(NX [01;33m(ADJX[00m
									(NX hundert vierzig mark)
									[01;31m(NX[00m
										(ADJX hundert zwanzig) [01;33mADJX)[00m
										(NN mark)[01;31m)[00m)))))[01;31m)[00m)
		(SU ich weis)))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'NX', 'KON', 'ADJX', 'LK', 'MF'], 'family': ['SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NE', 'ART', 'NN', 'NE', 'KON', 'ART', 'NN', 'NE', 'APPR', 'NE', 'PIS', 'ADV', 'ADJA', 'NN', 'KON', 'ADV', 'ADV', 'ADV', 'ADJD', 'VVFIN', 'PPER'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (20, 46), 'span': (35, 46), 'left siblings': ['SIMPX'], 'label': 'SIMPX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU ja ich weis nicht ob sie sich um die unterkunft schon gekummert haben)
		(SU wenn nicht hatte ich hier drei vorschlage)
		(SU
			(SIMPX es gabe da das hotel zentral das hotel nohre und das hotel prinzenhof in hannover)
			(ADVX beides)
			[01;31m(NX[00m
				(ADJX sehr gute)
				(NN unterkunfte)[01;31m)[00m
			(KON und)
			[01;31m(ADJX[00m
				(ADVX auch)
				(ADJX ziemlich zentral gelegen)[01;31m)[00m
			(LK glaube)
			(MF ich))
		(SU die unterscheiden sich dann wohl nur im preis)
		(SU
			[01;31m(SIMPX[00m
				(VF das eine)
				(LK liegt)
				(MF
					(PX
						(ADVX etwas)
						(APPR uber)
						(NX
							(NX zweihundert mark die anderen)
							(PX
								(ADVX so)
								(APPR um)
								(NX [01;33m(ADJX[00m
									(NX hundert vierzig mark)
									[01;31m(NX[00m
										(ADJX hundert zwanzig) [01;33mADJX)[00m
										(NN mark)[01;31m)[00m)))))[01;31m)[00m)
		(SU ich weis)))
Step:Co-ordination
{'subtrees': ['ADJX', 'NN'], 'family': ['SIMPX', 'ADVX', 'NX', 'KON', 'ADJX', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NE', 'ART', 'NN', 'NE', 'KON', 'ART', 'NN', 'NE', 'APPR', 'NE', 'PIS', 'ADV', 'ADJA', 'NN', 'KON', 'ADV', 'ADV', 'ADV', 'ADJD', 'VVFIN', 'PPER'), 'right siblings': ['KON', 'ADJX', 'LK', 'MF'], 'parent': 'SU', 'auto preterminal span': (20, 46), 'span': (36, 39), 'left siblings': ['SIMPX', 'ADVX'], 'label': 'NX', 'classified_type': 'Co-ordination', 'type': 'remove'}
(TOP
	(TURN
		(SU ja ich weis nicht ob sie sich um die unterkunft schon gekummert haben)
		(SU wenn nicht hatte ich hier drei vorschlage)
		(SU
			(SIMPX es gabe da das hotel zentral das hotel nohre und das hotel prinzenhof in hannover)
			(ADVX beides)
			(ADJX sehr gute)
			(NN unterkunfte)
			(KON und)
			[01;31m(ADJX[00m
				(ADVX auch)
				(ADJX ziemlich zentral gelegen)[01;31m)[00m
			(LK glaube)
			(MF ich))
		(SU die unterscheiden sich dann wohl nur im preis)
		(SU
			[01;31m(SIMPX[00m
				(VF das eine)
				(LK liegt)
				(MF
					(PX
						(ADVX etwas)
						(APPR uber)
						(NX
							(NX zweihundert mark die anderen)
							(PX
								(ADVX so)
								(APPR um)
								(NX [01;33m(ADJX[00m
									(NX hundert vierzig mark)
									[01;31m(NX[00m
										(ADJX hundert zwanzig) [01;33mADJX)[00m
										(NN mark)[01;31m)[00m)))))[01;31m)[00m)
		(SU ich weis)))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'ADJX'], 'family': ['SIMPX', 'ADVX', 'ADJX', 'NN', 'KON', 'ADJX', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NE', 'ART', 'NN', 'NE', 'KON', 'ART', 'NN', 'NE', 'APPR', 'NE', 'PIS', 'ADV', 'ADJA', 'NN', 'KON', 'ADV', 'ADV', 'ADV', 'ADJD', 'VVFIN', 'PPER'), 'right siblings': ['LK', 'MF'], 'parent': 'SU', 'auto preterminal span': (20, 46), 'span': (40, 44), 'left siblings': ['SIMPX', 'ADVX', 'ADJX', 'NN', 'KON'], 'label': 'ADJX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU ja ich weis nicht ob sie sich um die unterkunft schon gekummert haben)
		(SU wenn nicht hatte ich hier drei vorschlage)
		(SU es gabe da das hotel zentral das hotel nohre und das hotel prinzenhof in hannover beides sehr gute unterkunfte und auch ziemlich zentral gelegen glaube ich)
		(SU die unterscheiden sich dann wohl nur im preis)
		(SU
			[01;31m(SIMPX[00m
				(VF das eine)
				(LK liegt)
				(MF
					(PX
						(ADVX etwas)
						(APPR uber)
						(NX
							(NX zweihundert mark die anderen)
							(PX
								(ADVX so)
								(APPR um)
								(NX [01;33m(ADJX[00m
									(NX hundert vierzig mark)
									[01;31m(NX[00m
										(ADJX hundert zwanzig) [01;33mADJX)[00m
										(NN mark)[01;31m)[00m)))))[01;31m)[00m)
		(SU ich weis)))
Step:Unary
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'PIS', 'VVFIN', 'ADV', 'APPR', 'CARD', 'NN', 'ART', 'PIS', 'ADV', 'APPR', 'CARD', 'CARD', 'NN', 'CARD', 'CARD', 'NN'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (54, 71), 'span': (54, 71), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU ja ich weis nicht ob sie sich um die unterkunft schon gekummert haben)
		(SU wenn nicht hatte ich hier drei vorschlage)
		(SU es gabe da das hotel zentral das hotel nohre und das hotel prinzenhof in hannover beides sehr gute unterkunfte und auch ziemlich zentral gelegen glaube ich)
		(SU die unterscheiden sich dann wohl nur im preis)
		(SU
			(VF das eine)
			(LK liegt)
			(MF
				(PX
					(ADVX etwas)
					(APPR uber)
					(NX
						(NX zweihundert mark die anderen)
						(PX
							(ADVX so)
							(APPR um)
							(NX [01;33m(ADJX[00m
								(NX hundert vierzig mark)
								[01;31m(NX[00m
									(ADJX hundert zwanzig) [01;33mADJX)[00m
									(NN mark)[01;31m)[00m))))))
		(SU ich weis)))
Step:UNSET remove
{'subtrees': ['ADJX', 'NN'], 'family': ['NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'CARD', 'NN', 'CARD', 'CARD', 'NN'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (65, 71), 'span': (68, 71), 'left siblings': ['NX'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU ja ich weis nicht ob sie sich um die unterkunft schon gekummert haben)
		(SU wenn nicht hatte ich hier drei vorschlage)
		(SU es gabe da das hotel zentral das hotel nohre und das hotel prinzenhof in hannover beides sehr gute unterkunfte und auch ziemlich zentral gelegen glaube ich)
		(SU die unterscheiden sich dann wohl nur im preis)
		(SU
			(VF das eine)
			(LK liegt)
			(MF
				(PX
					(ADVX etwas)
					(APPR uber)
					(NX
						(NX zweihundert mark die anderen)
						(PX
							(ADVX so)
							(APPR um)
							(NX
								[01;36m(ADJX[00m
									(NX hundert vierzig mark)
									(ADJX hundert zwanzig)[01;36m)[00m
								(NN mark)))))))
		(SU ich weis)))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADJX'], 'family': ['ADJX', 'NN'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'CARD', 'NN', 'CARD', 'CARD'), 'right siblings': [(NN mark)], 'left siblings': [], 'auto preterminal span': (65, 70), 'span': (65, 70), 'parent': 'NX', 'label': 'ADJX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP ja ich weis nicht ob sie sich um die unterkunft schon gekummert haben wenn nicht hatte ich hier drei vorschlage es gabe da das hotel zentral das hotel nohre und das hotel prinzenhof in hannover beides sehr gute unterkunfte und auch ziemlich zentral gelegen glaube ich die unterscheiden sich dann wohl nur im preis das eine liegt etwas uber zweihundert mark die anderen so um hundert vierzig mark hundert zwanzig mark ich weis)

Sentence 520:
0 Initial errors
0 on fringe, 0 iterations

Sentence 521:
0 Initial errors
0 on fringe, 0 iterations

Sentence 522:
13 Initial errors
0 on fringe, 9 iterations
3 Error:NP Attachment
2 Error:UNSET move
1 Error:Single Word Phrase
1 Error:Unary
1 Error:Unary
1 Error:PP Attachment
2 Error:Modifier Attachment
1 Error:NP Internal Structure
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU haben sie schon irgendwelche vorschlage)
		(SU
			(SIMPX ich weis nicht)
			[01;36m(SIMPX[00m
				[01;31m(SIMPX[00m
					(VF in die oper)
					(LK mochte)
					[01;33m(FKOORD[00m (MF ich grade nicht)
					(VC gehen)
					[01;31m(NF[00m
						[01;31m(PX[00m
							(KON oder)
							[01;33m(MF[00m (PX ins konzert)[01;31m)[00m[01;31m)[00m[01;31m)[00m
				[01;31m(NX[00m
					(ADVX aber)
					(ADVX vielleicht)
					[01;33m(NX[00m (NX irgendwas)[01;31m)[00m
				[01;31m(NX[00m
					[01;36m(NX[00m
						(ADJX kleines)
						[01;31m(ADJX[00m
							(ADJA gemutliches)[01;31m)[00m [01;33mNX) MF)[00m[01;36m)[00m
					[01;36m(VXFIN[00m
						[01;36m(VC[00m
							(NN treffen)[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;36m)[00m))) [01;33mFKOORD)[00m
Step:NP Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'VC', 'NF', 'NX', 'NX'], 'mover info': [('NX', (19, 22)), ('NX', (22, 25))], 'old_family': ['SIMPX', 'SIMPX', 'NX', 'NX'], 'start left siblings': ['SIMPX', 'SIMPX'], 'auto preterminals': ('PPER', 'VVFIN', 'PTKNEG', 'APPR', 'ART', 'NN', 'VMFIN', 'PPER', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'APPRART', 'NN', 'ADV', 'ADV', 'PIS', 'ADJA', 'ADJA', 'NN'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'MF', 'VC', 'NF'], 'auto preterminal span': (5, 25), 'adding node already present': False, 'movers': ['NX', 'NX'], 'old_parent': 'SU', 'added and moved': True, 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'VXFIN'}
(TOP
	(TURN
		(SU haben sie schon irgendwelche vorschlage)
		(SU
			(SIMPX ich weis nicht)
			(SIMPX
				(VF in die oper)
				(LK mochte)
				(FKOORD
					(MF ich grade nicht)
					(VC gehen)
					[01;31m(NF[00m
						[01;31m(PX[00m
							(KON oder)
							[01;33m(MF[00m (PX ins konzert)[01;31m)[00m[01;31m)[00m
					[01;31m(NX[00m
						(ADVX aber)
						(ADVX vielleicht)
						[01;33m(NX[00m (NX irgendwas)[01;31m)[00m
					[01;31m(NX[00m
						[01;36m(NX[00m
							(ADJX kleines)
							[01;31m(ADJX[00m
								(ADJA gemutliches)[01;31m)[00m [01;33mNX) MF)[00m[01;36m)[00m
						[01;36m(VXFIN[00m
							[01;36m(VC[00m
								(NN treffen)[01;36m)[00m[01;36m)[00m[01;31m)[00m)))))
Step:UNSET move
{'new_parent': 'FKOORD', 'new_family': ['MF', 'VC', 'NF', 'NX', 'NX', 'NN'], 'mover info': [('NN', (24, 25))], 'old_family': ['ADJX', 'ADJX', 'NN'], 'start left siblings': ['ADJX', 'ADJX'], 'auto preterminals': ('PPER', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'APPRART', 'NN', 'ADV', 'ADV', 'PIS', 'ADJA', 'ADJA', 'NN'), 'start right siblings': [], 'end left siblings': ['MF', 'VC', 'NF', 'NX', 'NX'], 'auto preterminal span': (12, 25), 'movers': ['NN'], 'old_parent': 'NX', 'POS confusion': ('NN', 'NN'), 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU haben sie schon irgendwelche vorschlage)
		(SU
			(SIMPX ich weis nicht)
			(SIMPX
				(VF in die oper)
				(LK mochte)
				(FKOORD
					(MF ich grade nicht)
					(VC gehen)
					[01;31m(NF[00m
						[01;31m(PX[00m
							(KON oder)
							[01;33m(MF[00m (PX ins konzert)[01;31m)[00m[01;31m)[00m
					[01;31m(NX[00m
						(ADVX aber)
						(ADVX vielleicht)
						[01;33m(NX[00m (NX irgendwas)[01;31m)[00m
					(NX
						(ADJX kleines)
						[01;31m(ADJX[00m
							(ADJA gemutliches)[01;31m)[00m) [01;33mNX) MF)[00m
					[01;36m(VXFIN[00m
						[01;36m(VC[00m
							(NN treffen)[01;36m)[00m[01;36m)[00m)))))
Step:Single Word Phrase
{'subtrees': ['NN'], 'family': ['MF', 'VC', 'NF', 'NX', 'NX', 'VC'], 'over_word': True, 'over words': True, 'auto preterminals': ('NN',), 'right siblings': [], 'left siblings': [(MF (NX (PPER ich)) (ADVX (ADV grade)) (ADVX (PTKNEG nicht))), (VC (VXINF (VVINF gehen))), (NF (PX (KON oder) (PX (APPRART ins) (NX (NN konzert))))), (NX (ADVX (ADV aber)) (ADVX (ADV vielleicht)) (NX (PIS irgendwas))), (NX (ADJX (ADJA kleines)) (ADJX (ADJA gemutliches)))], 'auto preterminal span': (24, 25), 'span': (24, 25), 'parent': 'FKOORD', 'label': 'VC', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SU haben sie schon irgendwelche vorschlage)
		(SU
			(SIMPX ich weis nicht)
			(SIMPX
				(VF in die oper)
				(LK mochte)
				(FKOORD
					(MF ich grade nicht)
					(VC gehen)
					[01;31m(NF[00m
						[01;31m(PX[00m
							(KON oder)
							[01;33m(MF[00m (PX ins konzert)[01;31m)[00m[01;31m)[00m
					[01;31m(NX[00m
						(ADVX aber)
						(ADVX vielleicht)
						[01;33m(NX[00m (NX irgendwas)[01;31m)[00m
					(NX
						(ADJX kleines)
						[01;31m(ADJX[00m
							(ADJA gemutliches)[01;31m)[00m) [01;33mNX) MF)[00m
					[01;36m(VXFIN[00m
						(VC
							(NN treffen))[01;36m)[00m)))))
Step:Unary
{'subtrees': ['VC'], 'family': ['MF', 'VC', 'NF', 'NX', 'NX', 'VXFIN'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN',), 'right siblings': [], 'left siblings': [(MF (NX (PPER ich)) (ADVX (ADV grade)) (ADVX (PTKNEG nicht))), (VC (VXINF (VVINF gehen))), (NF (PX (KON oder) (PX (APPRART ins) (NX (NN konzert))))), (NX (ADVX (ADV aber)) (ADVX (ADV vielleicht)) (NX (PIS irgendwas))), (NX (ADJX (ADJA kleines)) (ADJX (ADJA gemutliches)))], 'auto preterminal span': (24, 25), 'span': (24, 25), 'parent': 'FKOORD', 'label': 'VXFIN', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU haben sie schon irgendwelche vorschlage)
		(SU
			(SIMPX ich weis nicht)
			(SIMPX
				(VF in die oper)
				(LK mochte)
				(FKOORD
					(MF ich grade nicht)
					(VC gehen)
					[01;31m(NF[00m
						[01;31m(PX[00m
							(KON oder)
							[01;33m(MF[00m (PX ins konzert)[01;31m)[00m[01;31m)[00m
					[01;31m(NX[00m
						(ADVX aber)
						(ADVX vielleicht)
						[01;33m(NX[00m (NX irgendwas)[01;31m)[00m
					(NX
						(ADJX kleines)
						[01;31m(ADJX[00m
							(ADJA gemutliches)[01;31m)[00m) [01;33mNX) MF)[00m
					(VXFIN treffen))))))
Step:Unary
{'subtrees': ['PX'], 'family': ['MF', 'VC', 'NF', 'NX', 'NX', 'VXFIN'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'APPRART', 'NN', 'ADV', 'ADV', 'PIS', 'ADJA', 'ADJA', 'NN'), 'right siblings': ['NX', 'NX', 'VXFIN'], 'parent': 'FKOORD', 'auto preterminal span': (12, 25), 'span': (16, 19), 'left siblings': ['MF', 'VC'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU haben sie schon irgendwelche vorschlage)
		(SU
			(SIMPX ich weis nicht)
			(SIMPX
				(VF in die oper)
				(LK mochte)
				(FKOORD
					(MF ich grade nicht)
					(VC gehen)
					[01;31m(PX[00m
						(KON oder)
						[01;33m(MF[00m (PX ins konzert)[01;31m)[00m
					[01;31m(NX[00m
						(ADVX aber)
						(ADVX vielleicht)
						[01;33m(NX[00m (NX irgendwas)[01;31m)[00m
					(NX
						(ADJX kleines)
						[01;31m(ADJX[00m
							(ADJA gemutliches)[01;31m)[00m) [01;33mNX) MF)[00m
					(VXFIN treffen))))))
Step:PP Attachment
{'subtrees': ['KON', 'PX'], 'family': ['MF', 'VC', 'PX', 'NX', 'NX', 'VXFIN'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'APPRART', 'NN', 'ADV', 'ADV', 'PIS', 'ADJA', 'ADJA', 'NN'), 'right siblings': ['NX', 'NX', 'VXFIN'], 'parent': 'FKOORD', 'auto preterminal span': (12, 25), 'span': (16, 19), 'left siblings': ['MF', 'VC'], 'label': 'PX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU haben sie schon irgendwelche vorschlage)
		(SU
			(SIMPX ich weis nicht)
			(SIMPX
				(VF in die oper)
				(LK mochte)
				(FKOORD
					(MF ich grade nicht)
					(VC gehen)
					(KON oder)
					[01;36m(MF[00m
						(PX ins konzert)
						[01;31m(NX[00m
							(ADVX aber)
							(ADVX vielleicht)
							[01;33m(NX[00m (NX irgendwas)[01;31m)[00m
						(NX
							(ADJX kleines)
							[01;31m(ADJX[00m
								(ADJA gemutliches)[01;31m)[00m) [01;33mNX)[00m[01;36m)[00m
					(VXFIN treffen))))))
Step:Modifier Attachment
{'new_parent': 'FKOORD', 'new_family': ['MF', 'VC', 'KON', 'PX', 'ADVX', 'ADVX', 'NX', 'NX', 'VXFIN'], 'mover info': [('ADVX', (19, 20)), ('ADVX', (20, 21))], 'old_family': ['ADVX', 'ADVX', 'NX'], 'start left siblings': [], 'auto preterminals': ('PPER', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'APPRART', 'NN', 'ADV', 'ADV', 'PIS', 'ADJA', 'ADJA', 'NN'), 'start right siblings': ['NX'], 'end left siblings': ['MF', 'VC', 'KON', 'PX'], 'auto preterminal span': (12, 25), 'adding node already present': False, 'movers': ['ADVX', 'ADVX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': ['NX', 'NX', 'VXFIN'], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(SU haben sie schon irgendwelche vorschlage)
		(SU
			(SIMPX ich weis nicht)
			(SIMPX
				(VF in die oper)
				(LK mochte)
				(FKOORD
					(MF ich grade nicht)
					(VC gehen)
					(KON oder)
					(MF
						(PX ins konzert)
						(ADVX aber)
						(ADVX vielleicht)
						[01;36m(NX[00m
							(NX irgendwas)
							(NX
								(ADJX kleines)
								[01;31m(ADJX[00m
									(ADJA gemutliches)[01;31m)[00m)[01;36m)[00m)
					(VXFIN treffen))))))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['PX', 'ADVX', 'ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PIS', 'ADJA', 'ADJA'), 'right siblings': [], 'left siblings': [(PX (APPRART ins) (NX (NN konzert))), (ADVX (ADV aber)), (ADVX (ADV vielleicht))], 'auto preterminal span': (21, 24), 'span': (21, 24), 'parent': 'MF', 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'add'}
(TOP
	(TURN
		(SU haben sie schon irgendwelche vorschlage)
		(SU
			(SIMPX ich weis nicht)
			(SIMPX
				(VF in die oper)
				(LK mochte)
				(FKOORD
					(MF ich grade nicht)
					(VC gehen)
					(KON oder)
					(MF
						(PX ins konzert)
						(ADVX aber)
						(ADVX vielleicht)
						(NX
							(NX irgendwas)
							(NX
								(ADJX kleines)
								[01;31m(ADJX[00m
									(ADJA gemutliches)[01;31m)[00m)))
					(VXFIN treffen))))))
Step:Single Word Phrase
{'subtrees': ['ADJA'], 'family': ['ADJX', 'ADJX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADJA', 'ADJA'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (22, 24), 'span': (23, 24), 'left siblings': ['ADJX'], 'label': 'ADJX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP haben sie schon irgendwelche vorschlage ich weis nicht in die oper mochte ich grade nicht gehen oder ins konzert aber vielleicht irgendwas kleines gemutliches treffen)

Sentence 523:
4 Initial errors
0 on fringe, 3 iterations
2 Error:Modifier Attachment
1 Error:Unary
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX
				(VF ich)
				(LK kann)
				(MF
					(ADVX nur)
					[01;31m(ADVX[00m
						(ADVX noch)
						[01;36m(ADVX[00m
							(PTKNEG nicht)[01;36m)[00m[01;31m)[00m
					(PX in der ersten oktoberhalfte))))
		(SU da bin ich im urlaub)
		(SU
			(SIMPX
				(KOORD aber)
				[01;31m(VF[00m
					[01;31m(PX[00m
						(APPR ab)
						(ADVX dann)[01;31m)[00m[01;31m)[00m
				(LK finden)
				(MF wir sicherlich einen gemeinsamen termin)))))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['ADVX', 'ADVX', 'ADVX', 'PX'], 'mover info': [('ADVX', (4, 5))], 'old_family': ['ADVX', 'PTKNEG'], 'start left siblings': [], 'auto preterminals': ('ADV', 'ADV', 'PTKNEG', 'APPR', 'ART', 'ADJA', 'NN'), 'start right siblings': ['PTKNEG'], 'end left siblings': ['ADVX'], 'auto preterminal span': (3, 10), 'movers': ['ADVX'], 'old_parent': 'ADVX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['ADVX', 'PX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU ja ich kann nur noch nicht in der ersten oktoberhalfte)
		(SU da bin ich im urlaub)
		(SU
			(SIMPX
				(KOORD aber)
				[01;31m(VF[00m
					[01;31m(PX[00m
						(APPR ab)
						(ADVX dann)[01;31m)[00m[01;31m)[00m
				(LK finden)
				(MF wir sicherlich einen gemeinsamen termin)))))
Step:Unary
{'subtrees': ['PX'], 'family': ['KOORD', 'VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'APPR', 'ADV', 'VVFIN', 'PPER', 'ADV', 'ART', 'ADJA', 'NN'), 'right siblings': ['LK', 'MF'], 'parent': 'SIMPX', 'auto preterminal span': (15, 24), 'span': (16, 18), 'left siblings': ['KOORD'], 'label': 'VF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU ja ich kann nur noch nicht in der ersten oktoberhalfte)
		(SU da bin ich im urlaub)
		(SU
			(SIMPX
				(KOORD aber)
				[01;31m(PX[00m
					(APPR ab)
					(ADVX dann)[01;31m)[00m
				(LK finden)
				(MF wir sicherlich einen gemeinsamen termin)))))
Step:Modifier Attachment
{'subtrees': ['APPR', 'ADVX'], 'family': ['KOORD', 'PX', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'APPR', 'ADV', 'VVFIN', 'PPER', 'ADV', 'ART', 'ADJA', 'NN'), 'right siblings': ['LK', 'MF'], 'parent': 'SIMPX', 'auto preterminal span': (15, 24), 'span': (16, 18), 'left siblings': ['KOORD'], 'label': 'PX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP ja ich kann nur noch nicht in der ersten oktoberhalfte da bin ich im urlaub aber ab dann finden wir sicherlich einen gemeinsamen termin)

Sentence 524:
0 Initial errors
0 on fringe, 0 iterations

Sentence 525:
0 Initial errors
0 on fringe, 0 iterations

Sentence 526:
0 Initial errors
0 on fringe, 0 iterations

Sentence 527:
0 Initial errors
0 on fringe, 0 iterations

Sentence 528:
0 Initial errors
0 on fringe, 0 iterations

Sentence 529:
0 Initial errors
0 on fringe, 0 iterations

Sentence 530:
0 Initial errors
0 on fringe, 0 iterations

Sentence 531:
0 Initial errors
0 on fringe, 0 iterations

Sentence 532:
0 Initial errors
0 on fringe, 0 iterations

Sentence 533:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Co-ordination
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU ja)
		(SU [01;33m(NX[00m
			(SIMPX
				(VF
					(NX
						(ART der)
						[01;31m(NX[00m
							(NX dienstag) [01;33mNX)[00m
							(KON und)
							(NX mittwoch)[01;31m)[00m))
				(LK wurde)
				(MF bei mir sehr gut)
				(VC passen)))))
Step:Co-ordination
{'new_parent': 'VF', 'new_family': ['NX', 'KON', 'NX'], 'mover info': [('KON', (3, 4)), ('NX', (4, 5))], 'old_family': ['NX', 'KON', 'NX'], 'start left siblings': ['NX'], 'auto preterminals': ('ART', 'NN', 'KON', 'NN'), 'start right siblings': [], 'end left siblings': ['NX'], 'auto preterminal span': (1, 5), 'adding node already present': False, 'movers': ['KON', 'NX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'Co-ordination', 'type': 'move', 'added label': 'NX'}
(TOP ja der dienstag und mittwoch wurde bei mir sehr gut passen)

Sentence 534:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX
				(VF dann)
				(LK konnten)
				(MF
					(NX wir)
					(ADVX auch)
					(ADVX noch)
					(NX
						[01;36m(ADJX[00m
							[01;31m(ADJX[00m
								(ADJA gewisse)[01;31m)[00m
							(ADJX geschaftliche)[01;36m)[00m
						(NN dinge))
					(ADVX gleich)
					(PX im zug))
				(VC besprechen)))
		(SU das ware sehr angenehm)))
Step:Modifier Attachment
{'new_parent': 'ADJX', 'new_family': ['ADJA', 'ADJX'], 'mover info': [('ADJX', (7, 8))], 'old_family': ['ADJX', 'ADJX', 'NN'], 'start left siblings': ['ADJX'], 'auto preterminals': ('ADJA', 'ADJA', 'NN'), 'start right siblings': ['NN'], 'end left siblings': ['ADJA'], 'auto preterminal span': (6, 9), 'movers': ['ADJX'], 'old_parent': 'NX', 'POS confusion': ('ADJA', 'ADJA'), 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP ja dann konnten wir auch noch gewisse geschaftliche dinge gleich im zug besprechen das ware sehr angenehm)

Sentence 535:
4 Initial errors
0 on fringe, 2 iterations
3 Error:Modifier Attachment
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM ach)
			(SIMPX
				(VF das)
				(LK ist)
				(MF
					(ADVX doch)
					[01;36m(ADJX[00m
						[01;33m(ADVX[00m (ADVX etwas)
						[01;31m(ADJX[00m
							(ADVX sehr) [01;33mADVX)[00m
							(ADJD fruh)[01;31m)[00m[01;36m)[00m))
			(DM oder))
		(SU
			(SIMPX
				(VF wann)
				(LK geht)
				(MF
					(ADVX denn)
					[01;36m(NX[00m
						(NX der zweite zug)
						(PX in der fruh)[01;36m)[00m)))))
Step:Modifier Attachment
{'new_parent': 'ADJX', 'new_family': ['ADVX', 'ADVX', 'ADJD'], 'mover info': [('ADVX', (4, 5))], 'old_family': ['ADVX', 'ADVX', 'ADJX'], 'start left siblings': ['ADVX'], 'auto preterminals': ('ADV', 'ADV', 'ADV', 'ADJD'), 'start right siblings': ['ADJX'], 'end left siblings': [], 'auto preterminal span': (3, 7), 'adding node already present': False, 'movers': ['ADVX'], 'old_parent': 'MF', 'POS confusion': ('ADV', 'ADV'), 'added and moved': True, 'end right siblings': ['ADVX', 'ADJD'], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(SU ach das ist doch etwas sehr fruh oder)
		(SU
			(SIMPX
				(VF wann)
				(LK geht)
				(MF
					(ADVX denn)
					[01;36m(NX[00m
						(NX der zweite zug)
						(PX in der fruh)[01;36m)[00m)))))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'ADJA', 'NN', 'APPR', 'ART', 'NN'), 'right siblings': [], 'left siblings': [(ADVX (ADV denn))], 'auto preterminal span': (11, 17), 'span': (11, 17), 'parent': 'MF', 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP ach das ist doch etwas sehr fruh oder wann geht denn der zweite zug in der fruh)

Sentence 536:
2 Initial errors
0 on fringe, 2 iterations
1 Error:UNSET add
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(SIMPX
				(VF ich)
				(LK denke)
				(NF
					(SIMPX
						(VF es)
						(LK wird)
						(MF doch)
						(VC reichen)
						(NF
							(SIMPX
								(C wenn)
								(MF
									(NX wir)
									(PX
										[01;31m(ADVX[00m
											(ADVX so)
											(ADV etwa)[01;31m)[00m
										[01;36m(PX[00m
											(APPR um)
											(NX acht uhr)[01;36m)[00m))
								(VC losfahren wurden)))))))
		(SU was meinen sie denn)))
Step:UNSET add
{'subtrees': ['APPR', 'NX'], 'family': ['ADVX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'CARD', 'NN'), 'right siblings': [], 'left siblings': [(ADVX (ADVX (ADV so)) (ADV etwa))], 'auto preterminal span': (10, 13), 'span': (10, 13), 'parent': 'PX', 'label': 'PX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU
			(SIMPX
				(VF ich)
				(LK denke)
				(NF
					(SIMPX
						(VF es)
						(LK wird)
						(MF doch)
						(VC reichen)
						(NF
							(SIMPX
								(C wenn)
								(MF
									(NX wir)
									(PX
										[01;31m(ADVX[00m
											(ADVX so)
											(ADV etwa)[01;31m)[00m
										(PX um acht uhr)))
								(VC losfahren wurden)))))))
		(SU was meinen sie denn)))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'ADV'], 'family': ['ADVX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'APPR', 'CARD', 'NN'), 'right siblings': ['PX'], 'parent': 'PX', 'auto preterminal span': (8, 13), 'span': (8, 10), 'left siblings': [], 'label': 'ADVX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP ich denke es wird doch reichen wenn wir so etwa um acht uhr losfahren wurden was meinen sie denn)

Sentence 537:
6 Initial errors
0 on fringe, 5 iterations
2 Error:Different label
1 Error:Modifier Attachment
1 Error:Unary
1 Error:UNSET remove
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU sehr schon)
		(SU dann sollten wir auch gleich ein hotel in der nahe vom hauptbahnhof nehmen)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF was)
				(LK wurden)
				(MF sie denn vom schloshotel hannover)
				(VC halten)[01;31m)[00m[01;31m)[00m
		(SU
			(SIMPX
				(VF es)
				(LK ist)
				(MF
					(ADJX
						(NX
							(NX
								[01;36m(ADVX[00m
									(ADVX etwa)
									(ADVX nur)[01;36m)[00m
								(ADJX funf)
								(NN minuten))
							(PX vom hauptbahnhof))
						(ADJD entfernt)))))
		[01;36m(NX[00m
			(SU
				[01;31m(SIMPX[00m
					[01;31m(KOORD[00m
						(KON und)[01;31m)[00m
					(VF der preis fur das einzelzimmer)
					(LK betragt)
					(MF hundert funfunddreisig mark)[01;31m)[00m)[01;36m)[00m))
Step:Different label
{'family': ['NX'], 'auto preterminal span': (32, 42), 'span': (32, 42), 'subtrees': ['KOORD', 'VF', 'LK', 'MF'], 'parent': 'SU', 'over_word': False, 'auto preterminals': ('KON', 'ART', 'NN', 'APPR', 'ART', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('SIMPX', 'NX')}
(TOP
	(TURN
		(SU sehr schon)
		(SU dann sollten wir auch gleich ein hotel in der nahe vom hauptbahnhof nehmen)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF was)
				(LK wurden)
				(MF sie denn vom schloshotel hannover)
				(VC halten)[01;31m)[00m[01;31m)[00m
		(SU
			(SIMPX
				(VF es)
				(LK ist)
				(MF
					(ADJX
						(NX
							(NX
								[01;36m(ADVX[00m
									(ADVX etwa)
									(ADVX nur)[01;36m)[00m
								(ADJX funf)
								(NN minuten))
							(PX vom hauptbahnhof))
						(ADJD entfernt)))))
		(SU
			(NX
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				(VF der preis fur das einzelzimmer)
				(LK betragt)
				(MF hundert funfunddreisig mark)))))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'ADVX'], 'family': ['ADVX', 'ADJX', 'NN'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV'), 'right siblings': [(ADJX (CARD funf)), (NN minuten)], 'left siblings': [], 'auto preterminal span': (25, 27), 'span': (25, 27), 'parent': 'NX', 'label': 'ADVX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU sehr schon)
		(SU dann sollten wir auch gleich ein hotel in der nahe vom hauptbahnhof nehmen)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF was)
				(LK wurden)
				(MF sie denn vom schloshotel hannover)
				(VC halten)[01;31m)[00m[01;31m)[00m
		(SU es ist etwa nur funf minuten vom hauptbahnhof entfernt)
		(SU
			(NX
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				(VF der preis fur das einzelzimmer)
				(LK betragt)
				(MF hundert funfunddreisig mark)))))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SU', 'SU', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADJD', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'NN', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'VVINF', 'PWS', 'VAFIN', 'PPER', 'ADV', 'APPRART', 'NE', 'NE', 'VVINF', 'PPER', 'VAFIN', 'ADV', 'ADV', 'CARD', 'NN', 'APPRART', 'NN', 'ADJD', 'KON', 'ART', 'NN', 'APPR', 'ART', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN'), 'right siblings': ['SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 42), 'span': (15, 23), 'left siblings': ['SU', 'SU'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU sehr schon)
		(SU dann sollten wir auch gleich ein hotel in der nahe vom hauptbahnhof nehmen)
		[01;31m(SIMPX[00m
			(VF was)
			(LK wurden)
			(MF sie denn vom schloshotel hannover)
			(VC halten)[01;31m)[00m
		(SU es ist etwa nur funf minuten vom hauptbahnhof entfernt)
		(SU
			(NX
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				(VF der preis fur das einzelzimmer)
				(LK betragt)
				(MF hundert funfunddreisig mark)))))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['SU', 'SU', 'SIMPX', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADJD', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'NN', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'VVINF', 'PWS', 'VAFIN', 'PPER', 'ADV', 'APPRART', 'NE', 'NE', 'VVINF', 'PPER', 'VAFIN', 'ADV', 'ADV', 'CARD', 'NN', 'APPRART', 'NN', 'ADJD', 'KON', 'ART', 'NN', 'APPR', 'ART', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN'), 'right siblings': ['SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 42), 'span': (15, 23), 'left siblings': ['SU', 'SU'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU sehr schon)
		(SU dann sollten wir auch gleich ein hotel in der nahe vom hauptbahnhof nehmen)
		(VF was)
		(LK wurden)
		(MF sie denn vom schloshotel hannover)
		(VC halten)
		(SU es ist etwa nur funf minuten vom hauptbahnhof entfernt)
		(SU
			(NX
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				(VF der preis fur das einzelzimmer)
				(LK betragt)
				(MF hundert funfunddreisig mark)))))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['KOORD', 'VF', 'LK', 'MF'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON', 'ART', 'NN', 'APPR', 'ART', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN'), 'right siblings': ['VF', 'LK', 'MF'], 'parent': 'NX', 'auto preterminal span': (32, 42), 'span': (32, 33), 'left siblings': [], 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP sehr schon dann sollten wir auch gleich ein hotel in der nahe vom hauptbahnhof nehmen was wurden sie denn vom schloshotel hannover halten es ist etwa nur funf minuten vom hauptbahnhof entfernt und der preis fur das einzelzimmer betragt hundert funfunddreisig mark)

Sentence 538:
4 Initial errors
0 on fringe, 4 iterations
1 Error:Unary
1 Error:Unary
1 Error:Single Word Phrase
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU sehr schon)
		[01;36m(SIMPX[00m
			(SU
				(SIMPX und wie sieht es dann aus)
				(SIMPX
					(LK sollen)
					(MF wir uns vielleicht irgendwelche theaterkarten)
					(VC besorgen)
					(NF
						(SIMPX
							[01;31m(SIMPX[00m
								(C wenn)
								(MF wir schon dort)
								(VC sind)[01;31m)[00m
							[01;36m(NF[00m
								(SIMPX
									(C das)
									(MF
										(NX wir)
										(NX
											[01;36m(ADJX[00m
												(PIDAT bischen)[01;36m)[00m
											(NN kultur)))
									(VC mitnehmen))[01;36m)[00m))))[01;36m)[00m))
Step:Unary
{'subtrees': ['SU'], 'family': ['SU', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'PWAV', 'VVFIN', 'PPER', 'ADV', 'PTKVZ', 'VMFIN', 'PPER', 'PRF', 'ADV', 'PIAT', 'NN', 'VVINF', 'KOUS', 'PPER', 'ADV', 'ADV', 'VAFIN', 'KOUS', 'PPER', 'PIDAT', 'NN', 'VVFIN'), 'right siblings': [], 'left siblings': [(SU (DM (ADJX (ADVX (ADV sehr)) (ADJD schon))))], 'auto preterminal span': (2, 25), 'span': (2, 25), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU sehr schon)
		(SIMPX
			(SU
				(SIMPX und wie sieht es dann aus)
				(SIMPX
					(LK sollen)
					(MF wir uns vielleicht irgendwelche theaterkarten)
					(VC besorgen)
					(NF
						(SIMPX
							[01;31m(SIMPX[00m
								(C wenn)
								(MF wir schon dort)
								(VC sind)[01;31m)[00m
							[01;36m(NF[00m
								(SIMPX
									(C das)
									(MF
										(NX wir)
										(NX
											[01;36m(ADJX[00m
												(PIDAT bischen)[01;36m)[00m
											(NN kultur)))
									(VC mitnehmen))[01;36m)[00m)))))))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SIMPX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'PIDAT', 'NN', 'VVFIN'), 'right siblings': [], 'left siblings': [(SIMPX (C (KOUS wenn)) (MF (NX (PPER wir)) (ADVX (ADV schon)) (ADVX (ADV dort))) (VC (VXFIN (VAFIN sind))))], 'auto preterminal span': (20, 25), 'span': (20, 25), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU sehr schon)
		(SIMPX
			(SU
				(SIMPX und wie sieht es dann aus)
				(SIMPX
					(LK sollen)
					(MF wir uns vielleicht irgendwelche theaterkarten)
					(VC besorgen)
					(NF
						(SIMPX
							[01;31m(SIMPX[00m
								(C wenn)
								(MF wir schon dort)
								(VC sind)[01;31m)[00m
							(NF
								(SIMPX
									(C das)
									(MF
										(NX wir)
										(NX
											[01;36m(ADJX[00m
												(PIDAT bischen)[01;36m)[00m
											(NN kultur)))
									(VC mitnehmen))))))))))
Step:Single Word Phrase
{'subtrees': ['PIDAT'], 'family': ['ADJX', 'NN'], 'over_word': True, 'over words': True, 'auto preterminals': ('PIDAT',), 'right siblings': [(NN kultur)], 'left siblings': [], 'auto preterminal span': (22, 23), 'span': (22, 23), 'parent': 'NX', 'label': 'ADJX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SU sehr schon)
		(SIMPX
			(SU
				(SIMPX und wie sieht es dann aus)
				(SIMPX
					(LK sollen)
					(MF wir uns vielleicht irgendwelche theaterkarten)
					(VC besorgen)
					(NF
						(SIMPX
							[01;31m(SIMPX[00m
								(C wenn)
								(MF wir schon dort)
								(VC sind)[01;31m)[00m
							(NF das wir bischen kultur mitnehmen))))))))
Step:UNSET remove
{'subtrees': ['C', 'MF', 'VC'], 'family': ['SIMPX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'ADV', 'VAFIN', 'KOUS', 'PPER', 'PIDAT', 'NN', 'VVFIN'), 'right siblings': ['NF'], 'parent': 'SIMPX', 'auto preterminal span': (15, 25), 'span': (15, 20), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP sehr schon und wie sieht es dann aus sollen wir uns vielleicht irgendwelche theaterkarten besorgen wenn wir schon dort sind das wir bischen kultur mitnehmen)

Sentence 539:
0 Initial errors
0 on fringe, 0 iterations

Sentence 540:
11 Initial errors
0 on fringe, 6 iterations
2 Error:Single Word Phrase
2 Error:UNSET move
3 Error:Co-ordination
2 Error:Co-ordination
1 Error:Single Word Phrase
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU ja finde ich auch)
		(SU [01;33m(SIMPX[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				[01;31m(LV[00m
					[01;31m(SIMPX[00m
						[01;31m(SIMPX[00m
							(C falls)
							(MF sich irgendwas)
							(VC andert)[01;31m)[00m [01;33mSIMPX)[00m
						[01;36m(KOORD[00m
							(KON [01;33m(SIMPX[00m oder)[01;36m)[00m
						[01;36m(LV[00m
							(SIMPX
								(C wenn)
								(MF
									(NX wir)
									(NX
										[01;36m(ADVX[00m [01;31m(ADJX[00m
											(ADJA nahere)[01;31m)[00m[01;36m)[00m
										[01;36m(NX[00m
											(NN einzelheiten)[01;36m)[00m))
								(VC wissen))[01;36m)[00m[01;31m)[00m[01;31m)[00m
				(VF dann)
				(LK kontaktieren)
				(MF wir uns einfach noch mal)[01;31m)[00m))) [01;33mSIMPX)[00m
Step:Single Word Phrase
{'family': ['ADVX', 'NN'], 'auto preterminal span': (12, 13), 'span': (12, 13), 'subtrees': ['ADJA'], 'parent': 'NX', 'over_word': True, 'auto preterminals': ('ADJA',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'ADVX')}
(TOP
	(TURN
		(SU ja finde ich auch)
		(SU [01;33m(SIMPX[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				[01;31m(LV[00m
					[01;31m(SIMPX[00m
						[01;31m(SIMPX[00m
							(C falls)
							(MF sich irgendwas)
							(VC andert)[01;31m)[00m [01;33mSIMPX)[00m
						[01;36m(KOORD[00m
							(KON [01;33m(SIMPX[00m oder)[01;36m)[00m
						[01;36m(LV[00m
							(SIMPX
								(C wenn)
								(MF
									(NX wir)
									(NX
										(ADVX nahere)
										[01;36m(NX[00m
											(NN einzelheiten)[01;36m)[00m))
								(VC wissen))[01;36m)[00m[01;31m)[00m[01;31m)[00m
				(VF dann)
				(LK kontaktieren)
				(MF wir uns einfach noch mal)[01;31m)[00m))) [01;33mSIMPX)[00m
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['KOORD', 'C', 'MF', 'VC'], 'mover info': [('KOORD', (4, 5))], 'old_family': ['KOORD', 'LV', 'VF', 'LK', 'MF'], 'start left siblings': [], 'auto preterminals': ('KON', 'KOUS', 'PRF', 'PIS', 'VVFIN', 'KON', 'KOUS', 'PPER', 'ADJA', 'NN', 'VVFIN', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV'), 'start right siblings': ['LV', 'VF', 'LK', 'MF'], 'end left siblings': [], 'auto preterminal span': (4, 22), 'movers': ['KOORD'], 'old_parent': 'SIMPX', 'POS confusion': ('KON', 'KON'), 'end right siblings': ['C', 'MF', 'VC'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU ja finde ich auch)
		(SU
			[01;31m(SIMPX[00m
				[01;31m(LV[00m
					[01;31m(SIMPX[00m
						(SIMPX und falls sich irgendwas andert)
						[01;36m(KOORD[00m
							(KON [01;33m(SIMPX[00m oder)[01;36m)[00m
						[01;36m(LV[00m
							(SIMPX
								(C wenn)
								(MF
									(NX wir)
									(NX
										(ADVX nahere)
										[01;36m(NX[00m
											(NN einzelheiten)[01;36m)[00m))
								(VC wissen))[01;36m)[00m[01;31m)[00m[01;31m)[00m
				(VF dann)
				(LK kontaktieren)
				(MF wir uns einfach noch mal)[01;31m)[00m))) [01;33mSIMPX)[00m
Step:Co-ordination
{'new_parent': 'SIMPX', 'new_family': ['SIMPX', 'KON', 'LV', 'VF', 'LK', 'MF'], 'mover info': [('SIMPX', (4, 9)), ('KON', (9, 10))], 'old_family': ['SIMPX', 'KON', 'SIMPX'], 'start left siblings': [], 'auto preterminals': ('KON', 'KOUS', 'PRF', 'PIS', 'VVFIN', 'KON', 'KOUS', 'PPER', 'ADJA', 'NN', 'VVFIN', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV'), 'start right siblings': ['SIMPX'], 'end left siblings': [], 'auto preterminal span': (4, 22), 'movers': ['SIMPX', 'KON'], 'old_parent': 'SIMPX', 'end right siblings': ['LV', 'VF', 'LK', 'MF'], 'classified_type': 'Co-ordination', 'type': 'move'}
(TOP
	(TURN
		(SU ja finde ich auch)
		(SU
			[01;31m(SIMPX[00m
				(SIMPX und falls sich irgendwas andert)
				[01;36m(SIMPX[00m
					[01;36m(KOORD[00m
						(KON oder)[01;36m)[00m
					(LV
						(SIMPX
							(C wenn)
							(MF
								(NX wir)
								(NX
									(ADVX nahere)
									[01;36m(NX[00m
										(NN einzelheiten)[01;36m)[00m))
							(VC wissen)))
					(VF dann)
					(LK kontaktieren)
					(MF wir uns einfach noch mal)[01;36m)[00m[01;31m)[00m)))
Step:Co-ordination
{'new_parent': 'SU', 'new_family': ['SIMPX', 'SIMPX'], 'mover info': [('SIMPX', (4, 9))], 'old_family': ['SIMPX', 'KON', 'LV', 'VF', 'LK', 'MF'], 'start left siblings': [], 'auto preterminals': ('KON', 'KOUS', 'PRF', 'PIS', 'VVFIN', 'KON', 'KOUS', 'PPER', 'ADJA', 'NN', 'VVFIN', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV'), 'start right siblings': ['KON', 'LV', 'VF', 'LK', 'MF'], 'end left siblings': [], 'auto preterminal span': (4, 22), 'movers': ['SIMPX'], 'old_parent': 'SIMPX', 'end right siblings': ['SIMPX'], 'classified_type': 'Co-ordination', 'type': 'move'}
(TOP
	(TURN
		(SU ja finde ich auch)
		(SU
			(SIMPX und falls sich irgendwas andert)
			(SIMPX
				[01;36m(KOORD[00m
					(KON oder)[01;36m)[00m
				(LV
					(SIMPX
						(C wenn)
						(MF
							(NX wir)
							(NX
								(ADVX nahere)
								[01;36m(NX[00m
									(NN einzelheiten)[01;36m)[00m))
						(VC wissen)))
				(VF dann)
				(LK kontaktieren)
				(MF wir uns einfach noch mal)))))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['KOORD', 'LV', 'VF', 'LK', 'MF'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON',), 'right siblings': [(LV (SIMPX (C (KOUS wenn)) (MF (NX (PPER wir)) (NX (ADVX (ADJA nahere)) (NN einzelheiten))) (VC (VXFIN (VVFIN wissen))))), (VF (ADVX (ADV dann))), (LK (VXFIN (VVFIN kontaktieren))), (MF (NX (PPER wir)) (NX (PRF uns)) (ADVX (ADV einfach)) (ADVX (ADV noch)) (ADVX (ADV mal)))], 'left siblings': [], 'auto preterminal span': (9, 10), 'span': (9, 10), 'parent': 'SIMPX', 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SU ja finde ich auch)
		(SU
			(SIMPX und falls sich irgendwas andert)
			(SIMPX
				(KOORD oder)
				(LV
					(SIMPX
						(C wenn)
						(MF
							(NX wir)
							(NX
								(ADVX nahere)
								[01;36m(NX[00m
									(NN einzelheiten)[01;36m)[00m))
						(VC wissen)))
				(VF dann)
				(LK kontaktieren)
				(MF wir uns einfach noch mal)))))
Step:Single Word Phrase
{'subtrees': ['NN'], 'family': ['ADVX', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('NN',), 'right siblings': [], 'left siblings': [(ADVX (ADJA nahere))], 'auto preterminal span': (13, 14), 'span': (13, 14), 'parent': 'NX', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP ja finde ich auch und falls sich irgendwas andert oder wenn wir nahere einzelheiten wissen dann kontaktieren wir uns einfach noch mal)

Sentence 541:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Different label
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM gut)
			(DM frau brenner)
			[01;36m(MF[00m [01;31m(NX[00m
				(NX ich)
				(NX ihnen)
				(ADVX auch)[01;31m)[00m[01;36m)[00m)
		(SU wiederschauen)))
Step:Different label
{'family': ['DM', 'DM', 'MF'], 'auto preterminal span': (3, 6), 'span': (3, 6), 'subtrees': ['NX', 'NX', 'ADVX'], 'parent': 'SU', 'over_word': False, 'auto preterminals': ('PPER', 'PPER', 'ADV'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('NX', 'MF')}
(TOP gut frau brenner ich ihnen auch wiederschauen)

Sentence 542:
0 Initial errors
0 on fringe, 0 iterations

Sentence 543:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU hervorragend)
		(SU
			(DM
				[01;31m(VXFIN[00m
					(VVIMP sprich)[01;31m)[00m)
			(NX der erste und zweite september))))
Step:Single Word Phrase
{'subtrees': ['VVIMP'], 'family': ['VXFIN'], 'over_word': True, 'over words': True, 'auto preterminals': ('VVIMP',), 'right siblings': [], 'parent': 'DM', 'auto preterminal span': (1, 2), 'span': (1, 2), 'left siblings': [], 'label': 'VXFIN', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP hervorragend sprich der erste und zweite september)

Sentence 544:
0 Initial errors
0 on fringe, 0 iterations

Sentence 545:
0 Initial errors
0 on fringe, 0 iterations

Sentence 546:
0 Initial errors
0 on fringe, 0 iterations

Sentence 547:
0 Initial errors
0 on fringe, 0 iterations

Sentence 548:
15 Initial errors
0 on fringe, 8 iterations
4 Error:UNSET move
4 Error:PP Attachment
2 Error:Modifier Attachment
1 Error:Single Word Phrase
1 Error:UNSET add
1 Error:Unary
1 Error:Single Word Phrase
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU ich werde meiner sekretarin bescheid sagen die soll sich da drum kummern)
		(SU
			(SIMPX
				(KOORD und)
				(VF dann)
				(LK werde)
				[01;36m(MF[00m
					[01;31m(MF[00m
						(NX ich)
						(NX ihnen)
						[01;36m(ADJX[00m [01;31m(NX[00m [01;33m(NX (NX (NX[00m
							(NN neues)[01;31m)[00m[01;36m)[00m[01;31m)[00m
					[01;31m(VC[00m
						[01;31m(VXINF[00m
							(VVINF erzahlen)[01;31m)[00m[01;31m)[00m [01;33mNX)[00m
					[01;31m(NF[00m [01;33m(PX[00m
						[01;31m(PX[00m
							(APPRART vom)
							[01;31m(NX[00m
								(NX kulturleben) [01;33mPX) NX)[00m
								(PX in hannover)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m) [01;33mNX)[00m
			(SIMPX
				(KOORD und)
				(VF dann)
				(LK konnen)
				(MF
					(NX wir)
					(NX uns)
					(ADVX ja)
					[01;31m(ADVX[00m
						(ADVX immer)
						[01;36m(ADVX[00m
							(ADV noch)[01;36m)[00m[01;31m)[00m)
				(VC einigen)))
		(SU was halten sie davon)))
Step:UNSET move
{'new_parent': 'NX', 'new_family': ['NN', 'VC', 'NF'], 'mover info': [('VC', (18, 19)), ('NF', (19, 23))], 'old_family': ['KOORD', 'VF', 'LK', 'MF', 'VC', 'NF'], 'start left siblings': ['KOORD', 'VF', 'LK', 'MF'], 'auto preterminals': ('KON', 'ADV', 'VAFIN', 'PPER', 'PPER', 'NN', 'VVINF', 'APPRART', 'NN', 'APPR', 'NE'), 'start right siblings': [], 'end left siblings': ['NN'], 'auto preterminal span': (12, 23), 'movers': ['VC', 'NF'], 'old_parent': 'SIMPX', 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU ich werde meiner sekretarin bescheid sagen die soll sich da drum kummern)
		(SU
			(SIMPX
				(KOORD und)
				(VF dann)
				(LK werde)
				(MF
					(NX ich)
					(NX ihnen)
					(NX [01;33m(NX[00m
						[01;36m(NX[00m
							[01;36m(ADJX[00m
								(NN neues)[01;36m)[00m
							[01;31m(VC[00m
								[01;31m(VXINF[00m
									(VVINF erzahlen)[01;31m)[00m[01;31m)[00m[01;36m)[00m
						[01;31m(NF[00m [01;33m(PX[00m
							[01;31m(PX[00m
								(APPRART vom)
								[01;31m(NX[00m
									(NX kulturleben) [01;33mPX) NX)[00m
									(PX in hannover)[01;31m)[00m[01;31m)[00m[01;31m)[00m)))
			(SIMPX
				(KOORD und)
				(VF dann)
				(LK konnen)
				(MF
					(NX wir)
					(NX uns)
					(ADVX ja)
					[01;31m(ADVX[00m
						(ADVX immer)
						[01;36m(ADVX[00m
							(ADV noch)[01;36m)[00m[01;31m)[00m)
				(VC einigen)))
		(SU was halten sie davon)))
Step:PP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'NX', 'NX', 'PX'], 'mover info': [('PX', (21, 23))], 'old_family': ['NX', 'PX'], 'start left siblings': ['NX'], 'auto preterminals': ('PPER', 'PPER', 'NN', 'VVINF', 'APPRART', 'NN', 'APPR', 'NE'), 'start right siblings': [], 'end left siblings': ['NX', 'NX', 'NX'], 'auto preterminal span': (15, 23), 'adding node already present': False, 'movers': ['PX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'ADVX'}
(TOP
	(TURN
		(SU ich werde meiner sekretarin bescheid sagen die soll sich da drum kummern)
		(SU
			(SIMPX
				(KOORD und)
				(VF dann)
				(LK werde)
				(MF
					(NX ich)
					(NX ihnen)
					(NX
						(NX
							[01;36m(NX[00m
								[01;36m(ADJX[00m
									(NN neues)[01;36m)[00m
								[01;31m(VC[00m
									[01;31m(VXINF[00m
										(VVINF erzahlen)[01;31m)[00m[01;31m)[00m[01;36m)[00m
							[01;31m(NF[00m
								(PX
									(APPRART vom)
									(NX kulturleben))[01;31m)[00m)
						(PX in hannover))))
			(SIMPX
				(KOORD und)
				(VF dann)
				(LK konnen)
				(MF
					(NX wir)
					(NX uns)
					(ADVX ja)
					[01;31m(ADVX[00m
						(ADVX immer)
						[01;36m(ADVX[00m
							(ADV noch)[01;36m)[00m[01;31m)[00m)
				(VC einigen)))
		(SU was halten sie davon)))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'NX', 'ADVX', 'ADVX', 'ADVX'], 'mover info': [('ADVX', (29, 30))], 'old_family': ['ADVX', 'ADV'], 'start left siblings': [], 'auto preterminals': ('PPER', 'PRF', 'ADV', 'ADV', 'ADV'), 'start right siblings': ['ADV'], 'end left siblings': ['NX', 'NX', 'ADVX'], 'auto preterminal span': (26, 31), 'movers': ['ADVX'], 'old_parent': 'ADVX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['ADVX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU ich werde meiner sekretarin bescheid sagen die soll sich da drum kummern)
		(SU
			(SIMPX
				(KOORD und)
				(VF dann)
				(LK werde)
				(MF
					(NX ich)
					(NX ihnen)
					(NX
						(NX
							[01;36m(NX[00m
								[01;36m(ADJX[00m
									(NN neues)[01;36m)[00m
								[01;31m(VC[00m
									[01;31m(VXINF[00m
										(VVINF erzahlen)[01;31m)[00m[01;31m)[00m[01;36m)[00m
							[01;31m(NF[00m
								(PX
									(APPRART vom)
									(NX kulturleben))[01;31m)[00m)
						(PX in hannover))))
			(SIMPX und dann konnen wir uns ja immer noch einigen))
		(SU was halten sie davon)))
Step:Single Word Phrase
{'subtrees': ['NN'], 'family': ['ADJX', 'VC', 'NF'], 'over_word': True, 'over words': True, 'auto preterminals': ('NN',), 'right siblings': [(VC (VXINF (VVINF erzahlen))), (NF (PX (APPRART vom) (NX (NN kulturleben))))], 'left siblings': [], 'auto preterminal span': (17, 18), 'span': (17, 18), 'parent': 'NX', 'label': 'ADJX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SU ich werde meiner sekretarin bescheid sagen die soll sich da drum kummern)
		(SU
			(SIMPX
				(KOORD und)
				(VF dann)
				(LK werde)
				(MF
					(NX ich)
					(NX ihnen)
					(NX
						(NX
							[01;36m(NX[00m
								(ADJX neues)
								[01;31m(VC[00m
									[01;31m(VXINF[00m
										(VVINF erzahlen)[01;31m)[00m[01;31m)[00m[01;36m)[00m
							[01;31m(NF[00m
								(PX
									(APPRART vom)
									(NX kulturleben))[01;31m)[00m)
						(PX in hannover))))
			(SIMPX und dann konnen wir uns ja immer noch einigen))
		(SU was halten sie davon)))
Step:UNSET add
{'subtrees': ['ADJX', 'VC'], 'family': ['NX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'VVINF'), 'right siblings': [(NF (PX (APPRART vom) (NX (NN kulturleben))))], 'left siblings': [], 'auto preterminal span': (17, 19), 'span': (17, 19), 'parent': 'NX', 'label': 'NX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU ich werde meiner sekretarin bescheid sagen die soll sich da drum kummern)
		(SU
			(SIMPX
				(KOORD und)
				(VF dann)
				(LK werde)
				(MF
					(NX ich)
					(NX ihnen)
					(NX
						(NX
							(NX
								(ADJX neues)
								[01;31m(VC[00m
									[01;31m(VXINF[00m
										(VVINF erzahlen)[01;31m)[00m[01;31m)[00m)
							[01;31m(NF[00m
								(PX
									(APPRART vom)
									(NX kulturleben))[01;31m)[00m)
						(PX in hannover))))
			(SIMPX und dann konnen wir uns ja immer noch einigen))
		(SU was halten sie davon)))
Step:Unary
{'subtrees': ['VXINF'], 'family': ['ADJX', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'VVINF'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (17, 19), 'span': (18, 19), 'left siblings': ['ADJX'], 'label': 'VC', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU ich werde meiner sekretarin bescheid sagen die soll sich da drum kummern)
		(SU
			(SIMPX
				(KOORD und)
				(VF dann)
				(LK werde)
				(MF
					(NX ich)
					(NX ihnen)
					(NX
						(NX
							(NX
								(ADJX neues)
								[01;31m(VXINF[00m
									(VVINF erzahlen)[01;31m)[00m)
							[01;31m(NF[00m
								(PX
									(APPRART vom)
									(NX kulturleben))[01;31m)[00m)
						(PX in hannover))))
			(SIMPX und dann konnen wir uns ja immer noch einigen))
		(SU was halten sie davon)))
Step:Single Word Phrase
{'subtrees': ['VVINF'], 'family': ['ADJX', 'VXINF'], 'over_word': True, 'over words': True, 'auto preterminals': ('NN', 'VVINF'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (17, 19), 'span': (18, 19), 'left siblings': ['ADJX'], 'label': 'VXINF', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(SU ich werde meiner sekretarin bescheid sagen die soll sich da drum kummern)
		(SU
			(SIMPX
				(KOORD und)
				(VF dann)
				(LK werde)
				(MF
					(NX ich)
					(NX ihnen)
					(NX
						(NX
							(NX neues erzahlen)
							[01;31m(NF[00m
								(PX
									(APPRART vom)
									(NX kulturleben))[01;31m)[00m)
						(PX in hannover))))
			(SIMPX und dann konnen wir uns ja immer noch einigen))
		(SU was halten sie davon)))
Step:Unary
{'subtrees': ['PX'], 'family': ['NX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'VVINF', 'APPRART', 'NN'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (17, 21), 'span': (19, 21), 'left siblings': ['NX'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ich werde meiner sekretarin bescheid sagen die soll sich da drum kummern und dann werde ich ihnen neues erzahlen vom kulturleben in hannover und dann konnen wir uns ja immer noch einigen was halten sie davon)

Sentence 549:
0 Initial errors
0 on fringe, 0 iterations

Sentence 550:
0 Initial errors
0 on fringe, 0 iterations

Sentence 551:
0 Initial errors
0 on fringe, 0 iterations

Sentence 552:
6 Initial errors
0 on fringe, 3 iterations
3 Error:NP Attachment
2 Error:Different label
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM ja)
			[01;31m(SIMPX[00m
				(VF ich)
				(LK hatte)
				(MF jetzt am vierzehnten und funfzehnten januar zeit)
				[01;36m(NX[00m
					(NF
						[01;31m(PX[00m
							(KON oder)
							[01;36m(NX[00m [01;31m(PX[00m
								[01;36m(PX[00m
									(ADVX auch)
									(PX am wochenende)[01;36m)[00m
								(NX siebzehnter achtzehnter januar)[01;31m)[00m[01;36m)[00m[01;31m)[00m)[01;36m)[00m[01;31m)[00m)
		(SU und zwischen dem dreiundzwanzigsten und sechsundzwanzigsten januar und dem achtundzwanzigsten und neunundzwanzigsten januar)))
Step:NP Attachment
{'new_parent': 'PX', 'new_family': ['KON', 'PX', 'NX'], 'mover info': [('NX', (14, 17))], 'old_family': ['ADVX', 'PX', 'NX'], 'start left siblings': ['ADVX', 'PX'], 'auto preterminals': ('KON', 'ADV', 'APPRART', 'NN', 'ADJA', 'ADJA', 'NN'), 'start right siblings': [], 'end left siblings': ['KON', 'PX'], 'auto preterminal span': (10, 17), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'PX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(SU
			(DM ja)
			[01;31m(SIMPX[00m
				(VF ich)
				(LK hatte)
				(MF jetzt am vierzehnten und funfzehnten januar zeit)
				[01;36m(NX[00m
					(NF
						[01;31m(PX[00m
							(KON oder)
							(NX auch am wochenende siebzehnter achtzehnter januar)[01;31m)[00m)[01;36m)[00m[01;31m)[00m)
		(SU und zwischen dem dreiundzwanzigsten und sechsundzwanzigsten januar und dem achtundzwanzigsten und neunundzwanzigsten januar)))
Step:Different label
{'family': ['NX'], 'auto preterminal span': (10, 17), 'span': (10, 17), 'subtrees': ['KON', 'NX'], 'parent': 'NF', 'over_word': False, 'auto preterminals': ('KON', 'ADV', 'APPRART', 'NN', 'ADJA', 'ADJA', 'NN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('PX', 'NX')}
(TOP
	(TURN
		(SU
			(DM ja)
			[01;31m(SIMPX[00m
				(VF ich)
				(LK hatte)
				(MF jetzt am vierzehnten und funfzehnten januar zeit)
				(NF oder auch am wochenende siebzehnter achtzehnter januar)[01;31m)[00m)
		(SU und zwischen dem dreiundzwanzigsten und sechsundzwanzigsten januar und dem achtundzwanzigsten und neunundzwanzigsten januar)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'NF'], 'family': ['DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VAFIN', 'ADV', 'APPRART', 'ADJA', 'KON', 'ADJA', 'NN', 'NN', 'KON', 'ADV', 'APPRART', 'NN', 'ADJA', 'ADJA', 'NN'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (0, 17), 'span': (1, 17), 'left siblings': ['DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ja ich hatte jetzt am vierzehnten und funfzehnten januar zeit oder auch am wochenende siebzehnter achtzehnter januar und zwischen dem dreiundzwanzigsten und sechsundzwanzigsten januar und dem achtundzwanzigsten und neunundzwanzigsten januar)

Sentence 553:
3 Initial errors
0 on fringe, 2 iterations
2 Error:UNSET move
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU gut verbleiben wir beim achtundzwanzigsten und neunundzwanzigsten januar)
		(SU
			[01;31m(SIMPX[00m
				[01;31m(LV[00m
					(PX
						(APPR bezuglich)
						(NX des verkehrsmittels))[01;31m)[00m
				[01;36m(SIMPX[00m
					(VF was)
					(LK haben)
					(MF sie sich da)
					(VC vorgestellt)[01;36m)[00m[01;31m)[00m)))
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['LV', 'SIMPX'], 'mover info': [('LV', (8, 11))], 'old_family': ['LV', 'VF', 'LK', 'MF', 'VC'], 'start left siblings': [], 'auto preterminals': ('APPR', 'ART', 'NN', 'PWS', 'VAFIN', 'PPER', 'PRF', 'ADV', 'VVPP'), 'start right siblings': ['VF', 'LK', 'MF', 'VC'], 'end left siblings': [], 'auto preterminal span': (8, 17), 'movers': ['LV'], 'old_parent': 'SIMPX', 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU gut verbleiben wir beim achtundzwanzigsten und neunundzwanzigsten januar)
		(SU
			[01;31m(LV[00m
				(PX
					(APPR bezuglich)
					(NX des verkehrsmittels))[01;31m)[00m
			(SIMPX was haben sie sich da vorgestellt))))
Step:Unary
{'subtrees': ['PX'], 'family': ['LV', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NN', 'PWS', 'VAFIN', 'PPER', 'PRF', 'ADV', 'VVPP'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (8, 17), 'span': (8, 11), 'left siblings': [], 'label': 'LV', 'classified_type': 'Unary', 'type': 'remove'}
(TOP gut verbleiben wir beim achtundzwanzigsten und neunundzwanzigsten januar bezuglich des verkehrsmittels was haben sie sich da vorgestellt)

Sentence 554:
3 Initial errors
0 on fringe, 2 iterations
2 Error:Single Word Phrase
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU ja ich ebenso)
		(SU
			[01;31m(PX[00m
				[01;36m(DM[00m [01;31m(ADVX[00m
					(ADV eben)[01;31m)[00m[01;36m)[00m
				(PX aus zeitgrunden)[01;31m)[00m)))
Step:Single Word Phrase
{'family': ['DM', 'PX'], 'auto preterminal span': (3, 4), 'span': (3, 4), 'subtrees': ['ADV'], 'parent': 'PX', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'DM')}
(TOP
	(TURN
		(SU ja ich ebenso)
		(SU
			[01;31m(PX[00m
				(DM eben)
				(PX aus zeitgrunden)[01;31m)[00m)))
Step:Unary
{'subtrees': ['DM', 'PX'], 'family': ['PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'APPR', 'NN'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (3, 6), 'span': (3, 6), 'left siblings': [], 'label': 'PX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja ich ebenso eben aus zeitgrunden)

Sentence 555:
44 Initial errors
0 on fringe, 36 iterations
5 Error:NP Attachment
3 Error:NP Attachment
2 Error:NP Attachment
2 Error:NP Attachment
1 Error:Co-ordination
1 Error:Unary
1 Error:Unary
1 Error:Unary
1 Error:Unary
1 Error:UNSET add
1 Error:NP Internal Structure
1 Error:Unary
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET add
1 Error:Single Word Phrase
1 Error:Modifier Attachment
1 Error:UNSET remove
1 Error:Clause Attachment
1 Error:Unary
1 Error:UNSET remove
1 Error:NP Internal Structure
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET add
1 Error:Unary
1 Error:UNSET add
1 Error:UNSET add
1 Error:Single Word Phrase
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET add
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SU die mus ich mit ihnen jetzt noch absprechen)
		[01;36m(SU[00m
			(SU [01;33m(PX[00m
				[01;31m(NX[00m
					(PX zum einen)
					[01;31m(NX[00m
						(NX das maritimhotel in hannover) [01;33mPX)[00m
						[01;36m(NF[00m
							(R
								(C welches)
								(FKOORD
									(MVC am bahnhof liegt)
									(KON und)
									(MVC
										(MF
											(PX zum zentrum)
											(NX
												(NX funfzehn minuten)
												[01;31m(NX[00m
													(NN laufzeit)[01;31m)[00m))
										(VC hat))))[01;36m)[00m[01;31m)[00m[01;31m)[00m)
			(SU
				(SIMPX es gibt dort eine cafeteria)
				(SIMPX
					(VF garage)
					(LK ist)
					(MF
						[01;36m(MF[00m
							(ADVX
								(ADV naturlich))[01;36m)[00m
						(ADVX dann)
						(ADVX nicht)
						(ADVX nicht)
						(ADVX unbedingt)
						(ADJX so wichtig))))[01;36m)[00m
		[01;36m(SIMPX[00m
			(SU
				[01;31m(SIMPX[00m
					(VF einzelzimmer)
					(LK kostet)
					[01;31m(MF[00m [01;33m(NX (MF (NX[00m
						(NX
							(ADJX hundert einundfunfzig)
							(NN mark))[01;31m)[00m[01;31m)[00m
				[01;31m(NX[00m
					(NX doppelzimmer) [01;33mNX)[00m
					(NX hundert funf mark)[01;31m)[00m) [01;33mMF) NX)[00m[01;36m)[00m
		(SU
			(NX dann das hotel luisenhof)
			(ADJX funf minuten vom bahnhof entfernt)
			[01;31m(ADJX[00m
				[01;36m(DM[00m
					(ADVX
						(ADV also))[01;36m)[00m
				(ADJX etwas schneller)[01;31m)[00m
			(SIMPX
				(VF es)
				(LK gibt)
				(MF
					(NX
						[01;36m(MF[00m
							(NX
								(ART eine)
								(NN bar))[01;36m)[00m
						[01;36m(NX[00m
							(NX ein restaurant)
							(KON und)
							(NX
								(ADVX ebenfalls)
								[01;36m(NX[00m
									(ART eine)
									(NN garage)[01;36m)[00m)[01;36m)[00m))))
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF das hotel loccumerhof)
				(LK ist)
				(MF gleich beim bahnhof)
				[01;31m(NF[00m
					(ADVX
						(ADV anscheinend))[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF es)
				(LK gibt)
				(MF [01;33m(NX (MF (NX (MF[00m
					(NX
						(NX
							(ART ein)
							[01;31m(NX[00m
								(TRUNC schwimm)
								(KON und)
								(NN dampfbad)[01;31m)[00m)
						(KON und)
						(NX eine pianobar)))[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF das einzelzimmer)
				(LK kostet)
				[01;31m(MF[00m [01;33m(MF (MF (MF[00m
					(ADVX allerdings)
					[01;33m(NX (NX[00m (NX zweihundert achtundvierzig mark)[01;31m)[00m[01;31m)[00m
			[01;31m(NX[00m
				(KON und)
				[01;31m(NX[00m
					(NX das doppelzimmer) [01;33mNX)[00m
					(NX hundert dreiundvierzig mark)[01;31m)[00m[01;31m)[00m[01;31m)[00m [01;33mNX) MF)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF
					(PX
						(APPRART vom)
						[01;31m(NX[00m
							(NN zeitangebot)[01;31m)[00m)) [01;33mMF)[00m
				(LK ware)
				(MF
					[01;36m(MF[00m
						(NX
							(ART das)
							(NX hotel loccumerhof))[01;36m)[00m
					(ADVX anscheinend)
					(ADJX besonders gunstig)) [01;33mMF) MF) NX)[00m
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						(C weil)
						(MF es gleich beim bahnhof) [01;33mMF) NX)[00m
						(VC liegt)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:NP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'NX'], 'mover info': [('NX', (53, 57))], 'old_family': ['SIMPX', 'NX'], 'start left siblings': ['SIMPX'], 'auto preterminals': ('NN', 'VVFIN', 'CARD', 'CARD', 'NN', 'NN', 'CARD', 'CARD', 'NN'), 'start right siblings': [], 'end left siblings': ['NX'], 'auto preterminal span': (48, 57), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'SU', 'added and moved': True, 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'MF'}
(TOP
	(TURN
		(SU jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SU die mus ich mit ihnen jetzt noch absprechen)
		[01;36m(SU[00m
			(SU [01;33m(PX[00m
				[01;31m(NX[00m
					(PX zum einen)
					[01;31m(NX[00m
						(NX das maritimhotel in hannover) [01;33mPX)[00m
						[01;36m(NF[00m
							(R
								(C welches)
								(FKOORD
									(MVC am bahnhof liegt)
									(KON und)
									(MVC
										(MF
											(PX zum zentrum)
											(NX
												(NX funfzehn minuten)
												[01;31m(NX[00m
													(NN laufzeit)[01;31m)[00m))
										(VC hat))))[01;36m)[00m[01;31m)[00m[01;31m)[00m)
			(SU
				(SIMPX es gibt dort eine cafeteria)
				(SIMPX
					(VF garage)
					(LK ist)
					(MF
						[01;36m(MF[00m
							(ADVX
								(ADV naturlich))[01;36m)[00m
						(ADVX dann)
						(ADVX nicht)
						(ADVX nicht)
						(ADVX unbedingt)
						(ADJX so wichtig))))[01;36m)[00m
		(SU
			(SIMPX
				(VF einzelzimmer)
				(LK kostet)
				(NX [01;33m(NX[00m
					(MF
						(NX hundert einundfunfzig mark)
						[01;31m(NX[00m
							(NX doppelzimmer) [01;33mNX)[00m
							(NX hundert funf mark)[01;31m)[00m))))
		(SU
			(NX dann das hotel luisenhof)
			(ADJX funf minuten vom bahnhof entfernt)
			[01;31m(ADJX[00m
				[01;36m(DM[00m
					(ADVX
						(ADV also))[01;36m)[00m
				(ADJX etwas schneller)[01;31m)[00m
			(SIMPX
				(VF es)
				(LK gibt)
				(MF
					(NX
						[01;36m(MF[00m
							(NX
								(ART eine)
								(NN bar))[01;36m)[00m
						[01;36m(NX[00m
							(NX ein restaurant)
							(KON und)
							(NX
								(ADVX ebenfalls)
								[01;36m(NX[00m
									(ART eine)
									(NN garage)[01;36m)[00m)[01;36m)[00m))))
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF das hotel loccumerhof)
				(LK ist)
				(MF gleich beim bahnhof)
				[01;31m(NF[00m
					(ADVX
						(ADV anscheinend))[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF es)
				(LK gibt)
				(MF [01;33m(NX (MF (NX (MF[00m
					(NX
						(NX
							(ART ein)
							[01;31m(NX[00m
								(TRUNC schwimm)
								(KON und)
								(NN dampfbad)[01;31m)[00m)
						(KON und)
						(NX eine pianobar)))[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF das einzelzimmer)
				(LK kostet)
				[01;31m(MF[00m [01;33m(MF (MF (MF[00m
					(ADVX allerdings)
					[01;33m(NX (NX[00m (NX zweihundert achtundvierzig mark)[01;31m)[00m[01;31m)[00m
			[01;31m(NX[00m
				(KON und)
				[01;31m(NX[00m
					(NX das doppelzimmer) [01;33mNX)[00m
					(NX hundert dreiundvierzig mark)[01;31m)[00m[01;31m)[00m[01;31m)[00m [01;33mNX) MF)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF
					(PX
						(APPRART vom)
						[01;31m(NX[00m
							(NN zeitangebot)[01;31m)[00m)) [01;33mMF)[00m
				(LK ware)
				(MF
					[01;36m(MF[00m
						(NX
							(ART das)
							(NX hotel loccumerhof))[01;36m)[00m
					(ADVX anscheinend)
					(ADJX besonders gunstig)) [01;33mMF) MF) NX)[00m
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						(C weil)
						(MF es gleich beim bahnhof) [01;33mMF) NX)[00m
						(VC liegt)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:NP Attachment
{'new_parent': 'MF', 'new_family': ['ADVX', 'NX', 'NX'], 'mover info': [('NX', (106, 112))], 'old_family': ['SIMPX', 'NX'], 'start left siblings': ['SIMPX'], 'auto preterminals': ('KON', 'ART', 'NN', 'VVFIN', 'ADV', 'CARD', 'CARD', 'NN', 'KON', 'ART', 'NN', 'CARD', 'CARD', 'NN'), 'start right siblings': [], 'end left siblings': ['ADVX', 'NX'], 'auto preterminal span': (98, 112), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'SU', 'added and moved': True, 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'MF'}
(TOP
	(TURN
		(SU jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SU die mus ich mit ihnen jetzt noch absprechen)
		[01;36m(SU[00m
			(SU [01;33m(PX[00m
				[01;31m(NX[00m
					(PX zum einen)
					[01;31m(NX[00m
						(NX das maritimhotel in hannover) [01;33mPX)[00m
						[01;36m(NF[00m
							(R
								(C welches)
								(FKOORD
									(MVC am bahnhof liegt)
									(KON und)
									(MVC
										(MF
											(PX zum zentrum)
											(NX
												(NX funfzehn minuten)
												[01;31m(NX[00m
													(NN laufzeit)[01;31m)[00m))
										(VC hat))))[01;36m)[00m[01;31m)[00m[01;31m)[00m)
			(SU
				(SIMPX es gibt dort eine cafeteria)
				(SIMPX
					(VF garage)
					(LK ist)
					(MF
						[01;36m(MF[00m
							(ADVX
								(ADV naturlich))[01;36m)[00m
						(ADVX dann)
						(ADVX nicht)
						(ADVX nicht)
						(ADVX unbedingt)
						(ADJX so wichtig))))[01;36m)[00m
		(SU
			(SIMPX
				(VF einzelzimmer)
				(LK kostet)
				(NX [01;33m(NX[00m
					(MF
						(NX hundert einundfunfzig mark)
						[01;31m(NX[00m
							(NX doppelzimmer) [01;33mNX)[00m
							(NX hundert funf mark)[01;31m)[00m))))
		(SU
			(NX dann das hotel luisenhof)
			(ADJX funf minuten vom bahnhof entfernt)
			[01;31m(ADJX[00m
				[01;36m(DM[00m
					(ADVX
						(ADV also))[01;36m)[00m
				(ADJX etwas schneller)[01;31m)[00m
			(SIMPX
				(VF es)
				(LK gibt)
				(MF
					(NX
						[01;36m(MF[00m
							(NX
								(ART eine)
								(NN bar))[01;36m)[00m
						[01;36m(NX[00m
							(NX ein restaurant)
							(KON und)
							(NX
								(ADVX ebenfalls)
								[01;36m(NX[00m
									(ART eine)
									(NN garage)[01;36m)[00m)[01;36m)[00m))))
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF das hotel loccumerhof)
				(LK ist)
				(MF gleich beim bahnhof)
				[01;31m(NF[00m
					(ADVX
						(ADV anscheinend))[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF es)
				(LK gibt)
				(MF [01;33m(NX (MF (NX (MF[00m
					(NX
						(NX
							(ART ein)
							[01;31m(NX[00m
								(TRUNC schwimm)
								(KON und)
								(NN dampfbad)[01;31m)[00m)
						(KON und)
						(NX eine pianobar)))[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF das einzelzimmer)
				(LK kostet)
				(MF [01;33m(MF (MF[00m
					(ADVX allerdings)
					(NX [01;33m(NX[00m
						(NX zweihundert achtundvierzig mark)
						[01;31m(NX[00m
							(KON und)
							[01;31m(NX[00m
								(NX das doppelzimmer) [01;33mNX)[00m
								(NX hundert dreiundvierzig mark)[01;31m)[00m[01;31m)[00m))[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF
					(PX
						(APPRART vom)
						[01;31m(NX[00m
							(NN zeitangebot)[01;31m)[00m)) [01;33mMF)[00m
				(LK ware)
				(MF
					[01;36m(MF[00m
						(NX
							(ART das)
							(NX hotel loccumerhof))[01;36m)[00m
					(ADVX anscheinend)
					(ADJX besonders gunstig)) [01;33mMF) MF) NX)[00m
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						(C weil)
						(MF es gleich beim bahnhof) [01;33mMF) NX)[00m
						(VC liegt)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:NP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'NX', 'NX'], 'mover info': [('NX', (53, 54))], 'old_family': ['NX', 'NX'], 'start left siblings': [], 'auto preterminals': ('CARD', 'CARD', 'NN', 'NN', 'CARD', 'CARD', 'NN'), 'start right siblings': ['NX'], 'end left siblings': ['NX'], 'auto preterminal span': (50, 57), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'NX', 'POS confusion': ('NN', 'NN'), 'added and moved': True, 'end right siblings': ['NX'], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'MF'}
(TOP
	(TURN
		(SU jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SU die mus ich mit ihnen jetzt noch absprechen)
		[01;36m(SU[00m
			(SU [01;33m(PX[00m
				[01;31m(NX[00m
					(PX zum einen)
					[01;31m(NX[00m
						(NX das maritimhotel in hannover) [01;33mPX)[00m
						[01;36m(NF[00m
							(R
								(C welches)
								(FKOORD
									(MVC am bahnhof liegt)
									(KON und)
									(MVC
										(MF
											(PX zum zentrum)
											(NX
												(NX funfzehn minuten)
												[01;31m(NX[00m
													(NN laufzeit)[01;31m)[00m))
										(VC hat))))[01;36m)[00m[01;31m)[00m[01;31m)[00m)
			(SU
				(SIMPX es gibt dort eine cafeteria)
				(SIMPX
					(VF garage)
					(LK ist)
					(MF
						[01;36m(MF[00m
							(ADVX
								(ADV naturlich))[01;36m)[00m
						(ADVX dann)
						(ADVX nicht)
						(ADVX nicht)
						(ADVX unbedingt)
						(ADJX so wichtig))))[01;36m)[00m
		(SU einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(SU
			(NX dann das hotel luisenhof)
			(ADJX funf minuten vom bahnhof entfernt)
			[01;31m(ADJX[00m
				[01;36m(DM[00m
					(ADVX
						(ADV also))[01;36m)[00m
				(ADJX etwas schneller)[01;31m)[00m
			(SIMPX
				(VF es)
				(LK gibt)
				(MF
					(NX
						[01;36m(MF[00m
							(NX
								(ART eine)
								(NN bar))[01;36m)[00m
						[01;36m(NX[00m
							(NX ein restaurant)
							(KON und)
							(NX
								(ADVX ebenfalls)
								[01;36m(NX[00m
									(ART eine)
									(NN garage)[01;36m)[00m)[01;36m)[00m))))
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF das hotel loccumerhof)
				(LK ist)
				(MF gleich beim bahnhof)
				[01;31m(NF[00m
					(ADVX
						(ADV anscheinend))[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF es)
				(LK gibt)
				(MF [01;33m(NX (MF (NX (MF[00m
					(NX
						(NX
							(ART ein)
							[01;31m(NX[00m
								(TRUNC schwimm)
								(KON und)
								(NN dampfbad)[01;31m)[00m)
						(KON und)
						(NX eine pianobar)))[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF das einzelzimmer)
				(LK kostet)
				(MF [01;33m(MF (MF[00m
					(ADVX allerdings)
					(NX [01;33m(NX[00m
						(NX zweihundert achtundvierzig mark)
						[01;31m(NX[00m
							(KON und)
							[01;31m(NX[00m
								(NX das doppelzimmer) [01;33mNX)[00m
								(NX hundert dreiundvierzig mark)[01;31m)[00m[01;31m)[00m))[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF
					(PX
						(APPRART vom)
						[01;31m(NX[00m
							(NN zeitangebot)[01;31m)[00m)) [01;33mMF)[00m
				(LK ware)
				(MF
					[01;36m(MF[00m
						(NX
							(ART das)
							(NX hotel loccumerhof))[01;36m)[00m
					(ADVX anscheinend)
					(ADJX besonders gunstig)) [01;33mMF) MF) NX)[00m
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						(C weil)
						(MF es gleich beim bahnhof) [01;33mMF) NX)[00m
						(VC liegt)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:NP Attachment
{'new_parent': 'MF', 'new_family': ['ADVX', 'NX', 'NX'], 'mover info': [('NX', (109, 112))], 'old_family': ['NX', 'NX'], 'start left siblings': ['NX'], 'auto preterminals': ('ADV', 'CARD', 'CARD', 'NN', 'KON', 'ART', 'NN', 'CARD', 'CARD', 'NN'), 'start right siblings': [], 'end left siblings': ['ADVX', 'NX'], 'auto preterminal span': (102, 112), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'MF'}
(TOP
	(TURN
		(SU jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SU die mus ich mit ihnen jetzt noch absprechen)
		[01;36m(SU[00m
			(SU [01;33m(PX[00m
				[01;31m(NX[00m
					(PX zum einen)
					[01;31m(NX[00m
						(NX das maritimhotel in hannover) [01;33mPX)[00m
						[01;36m(NF[00m
							(R
								(C welches)
								(FKOORD
									(MVC am bahnhof liegt)
									(KON und)
									(MVC
										(MF
											(PX zum zentrum)
											(NX
												(NX funfzehn minuten)
												[01;31m(NX[00m
													(NN laufzeit)[01;31m)[00m))
										(VC hat))))[01;36m)[00m[01;31m)[00m[01;31m)[00m)
			(SU
				(SIMPX es gibt dort eine cafeteria)
				(SIMPX
					(VF garage)
					(LK ist)
					(MF
						[01;36m(MF[00m
							(ADVX
								(ADV naturlich))[01;36m)[00m
						(ADVX dann)
						(ADVX nicht)
						(ADVX nicht)
						(ADVX unbedingt)
						(ADJX so wichtig))))[01;36m)[00m
		(SU einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(SU
			(NX dann das hotel luisenhof)
			(ADJX funf minuten vom bahnhof entfernt)
			[01;31m(ADJX[00m
				[01;36m(DM[00m
					(ADVX
						(ADV also))[01;36m)[00m
				(ADJX etwas schneller)[01;31m)[00m
			(SIMPX
				(VF es)
				(LK gibt)
				(MF
					(NX
						[01;36m(MF[00m
							(NX
								(ART eine)
								(NN bar))[01;36m)[00m
						[01;36m(NX[00m
							(NX ein restaurant)
							(KON und)
							(NX
								(ADVX ebenfalls)
								[01;36m(NX[00m
									(ART eine)
									(NN garage)[01;36m)[00m)[01;36m)[00m))))
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF das hotel loccumerhof)
				(LK ist)
				(MF gleich beim bahnhof)
				[01;31m(NF[00m
					(ADVX
						(ADV anscheinend))[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF es)
				(LK gibt)
				(MF [01;33m(NX (MF (NX (MF[00m
					(NX
						(NX
							(ART ein)
							[01;31m(NX[00m
								(TRUNC schwimm)
								(KON und)
								(NN dampfbad)[01;31m)[00m)
						(KON und)
						(NX eine pianobar)))[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF das einzelzimmer)
				(LK kostet)
				(MF [01;33m(MF (MF[00m
					(ADVX allerdings)
					(NX
						(NX
							(NX zweihundert achtundvierzig mark)
							[01;31m(NX[00m
								(KON und)
								(NX das doppelzimmer)[01;31m)[00m)
						(NX hundert dreiundvierzig mark)))[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF
					(PX
						(APPRART vom)
						[01;31m(NX[00m
							(NN zeitangebot)[01;31m)[00m)) [01;33mMF)[00m
				(LK ware)
				(MF
					[01;36m(MF[00m
						(NX
							(ART das)
							(NX hotel loccumerhof))[01;36m)[00m
					(ADVX anscheinend)
					(ADJX besonders gunstig)) [01;33mMF) MF) NX)[00m
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						(C weil)
						(MF es gleich beim bahnhof) [01;33mMF) NX)[00m
						(VC liegt)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Co-ordination
{'subtrees': ['SU', 'SU'], 'family': ['SU', 'SU', 'SU', 'SU', 'SU', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'PIS', 'ART', 'NE', 'APPR', 'NE', 'PRELS', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPRART', 'NN', 'CARD', 'NN', 'NN', 'VAFIN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NN', 'VAFIN', 'ADV', 'ADV', 'PTKNEG', 'PTKNEG', 'ADV', 'ADV', 'ADJD'), 'right siblings': [(SU (SIMPX (VF (NX (NN einzelzimmer))) (LK (VXFIN (VVFIN kostet))) (NX (MF (NX (NX (ADJX (CARD hundert) (CARD einundfunfzig)) (NN mark)) (NX (NN doppelzimmer))) (NX (ADJX (CARD hundert) (CARD funf)) (NN mark)))))), (SU (NX (ADVX (ADV dann)) (NX (ART das) (NX (NX (NN hotel)) (NX (NE luisenhof))))) (ADJX (NX (NX (ADJX (CARD funf)) (NN minuten)) (PX (APPRART vom) (NX (NN bahnhof)))) (ADJD entfernt)) (ADJX (ADVX (ADV also)) (ADJX (ADVX (ADV etwas)) (ADJD schneller))) (SIMPX (VF (NX (PPER es))) (LK (VXFIN (VVFIN gibt))) (MF (NX (NX (ART eine) (NN bar)) (NX (ART ein) (NN restaurant)) (KON und) (NX (ADVX (ADV ebenfalls)) (ART eine) (NN garage)))))), (SU (SIMPX (KOORD (KON und)) (VF (NX (ART das) (NX (NX (NN hotel)) (NX (NE loccumerhof))))) (LK (VXFIN (VAFIN ist))) (MF (ADVX (ADV gleich)) (PX (APPRART beim) (NX (NN bahnhof)))) (NF (ADVX (ADV anscheinend)))) (SIMPX (KOORD (KON und)) (VF (NX (PPER es))) (LK (VXFIN (VVFIN gibt))) (MF (NX (NX (ART ein) (NX (TRUNC schwimm) (KON und) (NN dampfbad))) (KON und) (NX (ART eine) (NN pianobar)))))), (SU (SIMPX (KOORD (KON und)) (VF (NX (ART das) (NN einzelzimmer))) (LK (VXFIN (VVFIN kostet))) (MF (ADVX (ADV allerdings)) (NX (NX (NX (ADJX (CARD zweihundert) (CARD achtundvierzig)) (NN mark)) (NX (KON und) (NX (ART das) (NN doppelzimmer)))) (NX (ADJX (CARD hundert) (CARD dreiundvierzig)) (NN mark)))))), (SU (SIMPX (VF (PX (APPRART vom) (NX (NN zeitangebot)))) (LK (VXFIN (VAFIN ware))) (MF (NX (ART das) (NX (NX (NN hotel)) (NX (NE loccumerhof)))) (ADVX (ADV anscheinend)) (ADJX (ADVX (ADV besonders)) (ADJD gunstig))) (NF (SIMPX (C (KOUS weil)) (MF (NX (PPER es)) (ADVX (ADV gleich)) (PX (APPRART beim) (NX (NN bahnhof)))) (VC (VXFIN (VVFIN liegt)))))))], 'left siblings': [(SU (SIMPX (VF (ADVX (ADV jetzt))) (LK (VXFIN (VAFIN habe))) (MF (NX (PPER ich)) (NX (PRF mir)) (ADVX (ADV auch)) (ADVX (ADV schon)) (NX (PIAT einige) (NN hotelangebote))) (VC (VXINF (VVPP herausgesucht))))), (SU (SIMPX (VF (NX (PDS die))) (LK (VXFIN (VMFIN mus))) (MF (NX (PPER ich)) (PX (APPR mit) (NX (PPER ihnen))) (ADVX (ADV jetzt)) (ADVX (ADV noch))) (VC (VXINF (VVINF absprechen)))))], 'auto preterminal span': (17, 48), 'span': (17, 48), 'parent': 'TURN', 'label': 'SU', 'classified_type': 'Co-ordination', 'type': 'add'}
(TOP
	(TURN
		(SU jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SU die mus ich mit ihnen jetzt noch absprechen)
		(SU [01;33m(PX[00m
			(SU
				[01;31m(NX[00m
					(PX zum einen)
					[01;31m(NX[00m
						(NX das maritimhotel in hannover) [01;33mPX)[00m
						[01;36m(NF[00m
							(R
								(C welches)
								(FKOORD
									(MVC am bahnhof liegt)
									(KON und)
									(MVC
										(MF
											(PX zum zentrum)
											(NX
												(NX funfzehn minuten)
												[01;31m(NX[00m
													(NN laufzeit)[01;31m)[00m))
										(VC hat))))[01;36m)[00m[01;31m)[00m[01;31m)[00m)
			(SU
				(SIMPX es gibt dort eine cafeteria)
				(SIMPX
					(VF garage)
					(LK ist)
					(MF
						[01;36m(MF[00m
							(ADVX
								(ADV naturlich))[01;36m)[00m
						(ADVX dann)
						(ADVX nicht)
						(ADVX nicht)
						(ADVX unbedingt)
						(ADJX so wichtig)))))
		(SU einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(SU
			(NX dann das hotel luisenhof)
			(ADJX funf minuten vom bahnhof entfernt)
			[01;31m(ADJX[00m
				[01;36m(DM[00m
					(ADVX
						(ADV also))[01;36m)[00m
				(ADJX etwas schneller)[01;31m)[00m
			(SIMPX
				(VF es)
				(LK gibt)
				(MF
					(NX
						[01;36m(MF[00m
							(NX
								(ART eine)
								(NN bar))[01;36m)[00m
						[01;36m(NX[00m
							(NX ein restaurant)
							(KON und)
							(NX
								(ADVX ebenfalls)
								[01;36m(NX[00m
									(ART eine)
									(NN garage)[01;36m)[00m)[01;36m)[00m))))
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF das hotel loccumerhof)
				(LK ist)
				(MF gleich beim bahnhof)
				[01;31m(NF[00m
					(ADVX
						(ADV anscheinend))[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF es)
				(LK gibt)
				(MF [01;33m(NX (MF (NX (MF[00m
					(NX
						(NX
							(ART ein)
							[01;31m(NX[00m
								(TRUNC schwimm)
								(KON und)
								(NN dampfbad)[01;31m)[00m)
						(KON und)
						(NX eine pianobar)))[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF das einzelzimmer)
				(LK kostet)
				(MF [01;33m(MF (MF[00m
					(ADVX allerdings)
					(NX
						(NX
							(NX zweihundert achtundvierzig mark)
							[01;31m(NX[00m
								(KON und)
								(NX das doppelzimmer)[01;31m)[00m)
						(NX hundert dreiundvierzig mark)))[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF
					(PX
						(APPRART vom)
						[01;31m(NX[00m
							(NN zeitangebot)[01;31m)[00m)) [01;33mMF)[00m
				(LK ware)
				(MF
					[01;36m(MF[00m
						(NX
							(ART das)
							(NX hotel loccumerhof))[01;36m)[00m
					(ADVX anscheinend)
					(ADJX besonders gunstig)) [01;33mMF) MF) NX)[00m
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						(C weil)
						(MF es gleich beim bahnhof) [01;33mMF) NX)[00m
						(VC liegt)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['R'], 'family': ['NX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PRELS', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPRART', 'NN', 'CARD', 'NN', 'NN', 'VAFIN'), 'right siblings': [], 'left siblings': [(NX (NX (ART das) (NE maritimhotel)) (PX (APPR in) (NX (NE hannover))))], 'auto preterminal span': (23, 34), 'span': (23, 34), 'parent': 'NX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SU die mus ich mit ihnen jetzt noch absprechen)
		(SU [01;33m(PX[00m
			(SU
				[01;31m(NX[00m
					(PX zum einen)
					[01;31m(NX[00m
						(NX das maritimhotel in hannover) [01;33mPX)[00m
						(NF
							(R
								(C welches)
								(FKOORD
									(MVC am bahnhof liegt)
									(KON und)
									(MVC
										(MF
											(PX zum zentrum)
											(NX
												(NX funfzehn minuten)
												[01;31m(NX[00m
													(NN laufzeit)[01;31m)[00m))
										(VC hat)))))[01;31m)[00m[01;31m)[00m)
			(SU
				(SIMPX es gibt dort eine cafeteria)
				(SIMPX
					(VF garage)
					(LK ist)
					(MF
						[01;36m(MF[00m
							(ADVX
								(ADV naturlich))[01;36m)[00m
						(ADVX dann)
						(ADVX nicht)
						(ADVX nicht)
						(ADVX unbedingt)
						(ADJX so wichtig)))))
		(SU einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(SU
			(NX dann das hotel luisenhof)
			(ADJX funf minuten vom bahnhof entfernt)
			[01;31m(ADJX[00m
				[01;36m(DM[00m
					(ADVX
						(ADV also))[01;36m)[00m
				(ADJX etwas schneller)[01;31m)[00m
			(SIMPX
				(VF es)
				(LK gibt)
				(MF
					(NX
						[01;36m(MF[00m
							(NX
								(ART eine)
								(NN bar))[01;36m)[00m
						[01;36m(NX[00m
							(NX ein restaurant)
							(KON und)
							(NX
								(ADVX ebenfalls)
								[01;36m(NX[00m
									(ART eine)
									(NN garage)[01;36m)[00m)[01;36m)[00m))))
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF das hotel loccumerhof)
				(LK ist)
				(MF gleich beim bahnhof)
				[01;31m(NF[00m
					(ADVX
						(ADV anscheinend))[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF es)
				(LK gibt)
				(MF [01;33m(NX (MF (NX (MF[00m
					(NX
						(NX
							(ART ein)
							[01;31m(NX[00m
								(TRUNC schwimm)
								(KON und)
								(NN dampfbad)[01;31m)[00m)
						(KON und)
						(NX eine pianobar)))[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF das einzelzimmer)
				(LK kostet)
				(MF [01;33m(MF (MF[00m
					(ADVX allerdings)
					(NX
						(NX
							(NX zweihundert achtundvierzig mark)
							[01;31m(NX[00m
								(KON und)
								(NX das doppelzimmer)[01;31m)[00m)
						(NX hundert dreiundvierzig mark)))[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF
					(PX
						(APPRART vom)
						[01;31m(NX[00m
							(NN zeitangebot)[01;31m)[00m)) [01;33mMF)[00m
				(LK ware)
				(MF
					[01;36m(MF[00m
						(NX
							(ART das)
							(NX hotel loccumerhof))[01;36m)[00m
					(ADVX anscheinend)
					(ADJX besonders gunstig)) [01;33mMF) MF) NX)[00m
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						(C weil)
						(MF es gleich beim bahnhof) [01;33mMF) NX)[00m
						(VC liegt)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['MF', 'ADVX', 'ADVX', 'ADVX', 'ADVX', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV',), 'right siblings': [(ADVX (ADV dann)), (ADVX (PTKNEG nicht)), (ADVX (PTKNEG nicht)), (ADVX (ADV unbedingt)), (ADJX (ADVX (ADV so)) (ADJD wichtig))], 'left siblings': [], 'auto preterminal span': (41, 42), 'span': (41, 42), 'parent': 'MF', 'label': 'MF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SU die mus ich mit ihnen jetzt noch absprechen)
		(SU [01;33m(PX[00m
			(SU
				[01;31m(NX[00m
					(PX zum einen)
					[01;31m(NX[00m
						(NX das maritimhotel in hannover) [01;33mPX)[00m
						(NF
							(R
								(C welches)
								(FKOORD
									(MVC am bahnhof liegt)
									(KON und)
									(MVC
										(MF
											(PX zum zentrum)
											(NX
												(NX funfzehn minuten)
												[01;31m(NX[00m
													(NN laufzeit)[01;31m)[00m))
										(VC hat)))))[01;31m)[00m[01;31m)[00m)
			(SU es gibt dort eine cafeteria garage ist naturlich dann nicht nicht unbedingt so wichtig))
		(SU einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(SU
			(NX dann das hotel luisenhof)
			(ADJX funf minuten vom bahnhof entfernt)
			[01;31m(ADJX[00m
				[01;36m(DM[00m
					(ADVX
						(ADV also))[01;36m)[00m
				(ADJX etwas schneller)[01;31m)[00m
			(SIMPX
				(VF es)
				(LK gibt)
				(MF
					(NX
						[01;36m(MF[00m
							(NX
								(ART eine)
								(NN bar))[01;36m)[00m
						[01;36m(NX[00m
							(NX ein restaurant)
							(KON und)
							(NX
								(ADVX ebenfalls)
								[01;36m(NX[00m
									(ART eine)
									(NN garage)[01;36m)[00m)[01;36m)[00m))))
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF das hotel loccumerhof)
				(LK ist)
				(MF gleich beim bahnhof)
				[01;31m(NF[00m
					(ADVX
						(ADV anscheinend))[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF es)
				(LK gibt)
				(MF [01;33m(NX (MF (NX (MF[00m
					(NX
						(NX
							(ART ein)
							[01;31m(NX[00m
								(TRUNC schwimm)
								(KON und)
								(NN dampfbad)[01;31m)[00m)
						(KON und)
						(NX eine pianobar)))[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF das einzelzimmer)
				(LK kostet)
				(MF [01;33m(MF (MF[00m
					(ADVX allerdings)
					(NX
						(NX
							(NX zweihundert achtundvierzig mark)
							[01;31m(NX[00m
								(KON und)
								(NX das doppelzimmer)[01;31m)[00m)
						(NX hundert dreiundvierzig mark)))[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF
					(PX
						(APPRART vom)
						[01;31m(NX[00m
							(NN zeitangebot)[01;31m)[00m)) [01;33mMF)[00m
				(LK ware)
				(MF
					[01;36m(MF[00m
						(NX
							(ART das)
							(NX hotel loccumerhof))[01;36m)[00m
					(ADVX anscheinend)
					(ADJX besonders gunstig)) [01;33mMF) MF) NX)[00m
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						(C weil)
						(MF es gleich beim bahnhof) [01;33mMF) NX)[00m
						(VC liegt)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['DM', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV',), 'right siblings': [(ADJX (ADVX (ADV etwas)) (ADJD schneller))], 'left siblings': [], 'auto preterminal span': (66, 67), 'span': (66, 67), 'parent': 'ADJX', 'label': 'DM', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SU die mus ich mit ihnen jetzt noch absprechen)
		(SU [01;33m(PX[00m
			(SU
				[01;31m(NX[00m
					(PX zum einen)
					[01;31m(NX[00m
						(NX das maritimhotel in hannover) [01;33mPX)[00m
						(NF
							(R
								(C welches)
								(FKOORD
									(MVC am bahnhof liegt)
									(KON und)
									(MVC
										(MF
											(PX zum zentrum)
											(NX
												(NX funfzehn minuten)
												[01;31m(NX[00m
													(NN laufzeit)[01;31m)[00m))
										(VC hat)))))[01;31m)[00m[01;31m)[00m)
			(SU es gibt dort eine cafeteria garage ist naturlich dann nicht nicht unbedingt so wichtig))
		(SU einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(SU
			(NX dann das hotel luisenhof)
			(ADJX funf minuten vom bahnhof entfernt)
			[01;31m(ADJX[00m
				(DM also)
				(ADJX etwas schneller)[01;31m)[00m
			(SIMPX
				(VF es)
				(LK gibt)
				(MF
					(NX
						[01;36m(MF[00m
							(NX
								(ART eine)
								(NN bar))[01;36m)[00m
						[01;36m(NX[00m
							(NX ein restaurant)
							(KON und)
							(NX
								(ADVX ebenfalls)
								[01;36m(NX[00m
									(ART eine)
									(NN garage)[01;36m)[00m)[01;36m)[00m))))
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF das hotel loccumerhof)
				(LK ist)
				(MF gleich beim bahnhof)
				[01;31m(NF[00m
					(ADVX
						(ADV anscheinend))[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF es)
				(LK gibt)
				(MF [01;33m(NX (MF (NX (MF[00m
					(NX
						(NX
							(ART ein)
							[01;31m(NX[00m
								(TRUNC schwimm)
								(KON und)
								(NN dampfbad)[01;31m)[00m)
						(KON und)
						(NX eine pianobar)))[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF das einzelzimmer)
				(LK kostet)
				(MF [01;33m(MF (MF[00m
					(ADVX allerdings)
					(NX
						(NX
							(NX zweihundert achtundvierzig mark)
							[01;31m(NX[00m
								(KON und)
								(NX das doppelzimmer)[01;31m)[00m)
						(NX hundert dreiundvierzig mark)))[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF
					(PX
						(APPRART vom)
						[01;31m(NX[00m
							(NN zeitangebot)[01;31m)[00m)) [01;33mMF)[00m
				(LK ware)
				(MF
					[01;36m(MF[00m
						(NX
							(ART das)
							(NX hotel loccumerhof))[01;36m)[00m
					(ADVX anscheinend)
					(ADJX besonders gunstig)) [01;33mMF) MF) NX)[00m
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						(C weil)
						(MF es gleich beim bahnhof) [01;33mMF) NX)[00m
						(VC liegt)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['NX'], 'family': ['MF', 'NX', 'KON', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN'), 'right siblings': [(NX (ART ein) (NN restaurant)), (KON und), (NX (ADVX (ADV ebenfalls)) (ART eine) (NN garage))], 'left siblings': [], 'auto preterminal span': (71, 73), 'span': (71, 73), 'parent': 'NX', 'label': 'MF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SU die mus ich mit ihnen jetzt noch absprechen)
		(SU [01;33m(PX[00m
			(SU
				[01;31m(NX[00m
					(PX zum einen)
					[01;31m(NX[00m
						(NX das maritimhotel in hannover) [01;33mPX)[00m
						(NF
							(R
								(C welches)
								(FKOORD
									(MVC am bahnhof liegt)
									(KON und)
									(MVC
										(MF
											(PX zum zentrum)
											(NX
												(NX funfzehn minuten)
												[01;31m(NX[00m
													(NN laufzeit)[01;31m)[00m))
										(VC hat)))))[01;31m)[00m[01;31m)[00m)
			(SU es gibt dort eine cafeteria garage ist naturlich dann nicht nicht unbedingt so wichtig))
		(SU einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(SU
			(NX dann das hotel luisenhof)
			(ADJX funf minuten vom bahnhof entfernt)
			[01;31m(ADJX[00m
				(DM also)
				(ADJX etwas schneller)[01;31m)[00m
			(SIMPX
				(VF es)
				(LK gibt)
				(MF
					(NX
						(MF eine bar)
						[01;36m(NX[00m
							(NX ein restaurant)
							(KON und)
							(NX
								(ADVX ebenfalls)
								[01;36m(NX[00m
									(ART eine)
									(NN garage)[01;36m)[00m)[01;36m)[00m))))
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF das hotel loccumerhof)
				(LK ist)
				(MF gleich beim bahnhof)
				[01;31m(NF[00m
					(ADVX
						(ADV anscheinend))[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF es)
				(LK gibt)
				(MF [01;33m(NX (MF (NX (MF[00m
					(NX
						(NX
							(ART ein)
							[01;31m(NX[00m
								(TRUNC schwimm)
								(KON und)
								(NN dampfbad)[01;31m)[00m)
						(KON und)
						(NX eine pianobar)))[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF das einzelzimmer)
				(LK kostet)
				(MF [01;33m(MF (MF[00m
					(ADVX allerdings)
					(NX
						(NX
							(NX zweihundert achtundvierzig mark)
							[01;31m(NX[00m
								(KON und)
								(NX das doppelzimmer)[01;31m)[00m)
						(NX hundert dreiundvierzig mark)))[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF
					(PX
						(APPRART vom)
						[01;31m(NX[00m
							(NN zeitangebot)[01;31m)[00m)) [01;33mMF)[00m
				(LK ware)
				(MF
					[01;36m(MF[00m
						(NX
							(ART das)
							(NX hotel loccumerhof))[01;36m)[00m
					(ADVX anscheinend)
					(ADJX besonders gunstig)) [01;33mMF) MF) NX)[00m
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						(C weil)
						(MF es gleich beim bahnhof) [01;33mMF) NX)[00m
						(VC liegt)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:UNSET add
{'subtrees': ['NX', 'KON', 'NX'], 'family': ['MF', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'KON', 'ADV', 'ART', 'NN'), 'right siblings': [], 'left siblings': [(MF (NX (ART eine) (NN bar)))], 'auto preterminal span': (73, 79), 'span': (73, 79), 'parent': 'NX', 'label': 'NX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SU die mus ich mit ihnen jetzt noch absprechen)
		(SU [01;33m(PX[00m
			(SU
				[01;31m(NX[00m
					(PX zum einen)
					[01;31m(NX[00m
						(NX das maritimhotel in hannover) [01;33mPX)[00m
						(NF
							(R
								(C welches)
								(FKOORD
									(MVC am bahnhof liegt)
									(KON und)
									(MVC
										(MF
											(PX zum zentrum)
											(NX
												(NX funfzehn minuten)
												[01;31m(NX[00m
													(NN laufzeit)[01;31m)[00m))
										(VC hat)))))[01;31m)[00m[01;31m)[00m)
			(SU es gibt dort eine cafeteria garage ist naturlich dann nicht nicht unbedingt so wichtig))
		(SU einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(SU
			(NX dann das hotel luisenhof)
			(ADJX funf minuten vom bahnhof entfernt)
			[01;31m(ADJX[00m
				(DM also)
				(ADJX etwas schneller)[01;31m)[00m
			(SIMPX
				(VF es)
				(LK gibt)
				(MF
					(NX
						(MF eine bar)
						(NX
							(NX ein restaurant)
							(KON und)
							(NX
								(ADVX ebenfalls)
								[01;36m(NX[00m
									(ART eine)
									(NN garage)[01;36m)[00m))))))
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF das hotel loccumerhof)
				(LK ist)
				(MF gleich beim bahnhof)
				[01;31m(NF[00m
					(ADVX
						(ADV anscheinend))[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF es)
				(LK gibt)
				(MF [01;33m(NX (MF (NX (MF[00m
					(NX
						(NX
							(ART ein)
							[01;31m(NX[00m
								(TRUNC schwimm)
								(KON und)
								(NN dampfbad)[01;31m)[00m)
						(KON und)
						(NX eine pianobar)))[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF das einzelzimmer)
				(LK kostet)
				(MF [01;33m(MF (MF[00m
					(ADVX allerdings)
					(NX
						(NX
							(NX zweihundert achtundvierzig mark)
							[01;31m(NX[00m
								(KON und)
								(NX das doppelzimmer)[01;31m)[00m)
						(NX hundert dreiundvierzig mark)))[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF
					(PX
						(APPRART vom)
						[01;31m(NX[00m
							(NN zeitangebot)[01;31m)[00m)) [01;33mMF)[00m
				(LK ware)
				(MF
					[01;36m(MF[00m
						(NX
							(ART das)
							(NX hotel loccumerhof))[01;36m)[00m
					(ADVX anscheinend)
					(ADJX besonders gunstig)) [01;33mMF) MF) NX)[00m
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						(C weil)
						(MF es gleich beim bahnhof) [01;33mMF) NX)[00m
						(VC liegt)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:NP Internal Structure
{'subtrees': ['ART', 'NN'], 'family': ['ADVX', 'NX'], 'over_word': False, 'over words': True, 'auto preterminals': ('ART', 'NN'), 'right siblings': [], 'left siblings': [(ADVX (ADV ebenfalls))], 'auto preterminal span': (77, 79), 'span': (77, 79), 'parent': 'NX', 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'add'}
(TOP
	(TURN
		(SU jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SU die mus ich mit ihnen jetzt noch absprechen)
		(SU [01;33m(PX[00m
			(SU
				[01;31m(NX[00m
					(PX zum einen)
					[01;31m(NX[00m
						(NX das maritimhotel in hannover) [01;33mPX)[00m
						(NF
							(R
								(C welches)
								(FKOORD
									(MVC am bahnhof liegt)
									(KON und)
									(MVC
										(MF
											(PX zum zentrum)
											(NX
												(NX funfzehn minuten)
												[01;31m(NX[00m
													(NN laufzeit)[01;31m)[00m))
										(VC hat)))))[01;31m)[00m[01;31m)[00m)
			(SU es gibt dort eine cafeteria garage ist naturlich dann nicht nicht unbedingt so wichtig))
		(SU einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(SU
			(NX dann das hotel luisenhof)
			(ADJX funf minuten vom bahnhof entfernt)
			[01;31m(ADJX[00m
				(DM also)
				(ADJX etwas schneller)[01;31m)[00m
			(SIMPX es gibt eine bar ein restaurant und ebenfalls eine garage))
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF das hotel loccumerhof)
				(LK ist)
				(MF gleich beim bahnhof)
				[01;31m(NF[00m
					(ADVX
						(ADV anscheinend))[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF es)
				(LK gibt)
				(MF [01;33m(NX (MF (NX (MF[00m
					(NX
						(NX
							(ART ein)
							[01;31m(NX[00m
								(TRUNC schwimm)
								(KON und)
								(NN dampfbad)[01;31m)[00m)
						(KON und)
						(NX eine pianobar)))[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF das einzelzimmer)
				(LK kostet)
				(MF [01;33m(MF (MF[00m
					(ADVX allerdings)
					(NX
						(NX
							(NX zweihundert achtundvierzig mark)
							[01;31m(NX[00m
								(KON und)
								(NX das doppelzimmer)[01;31m)[00m)
						(NX hundert dreiundvierzig mark)))[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF
					(PX
						(APPRART vom)
						[01;31m(NX[00m
							(NN zeitangebot)[01;31m)[00m)) [01;33mMF)[00m
				(LK ware)
				(MF
					[01;36m(MF[00m
						(NX
							(ART das)
							(NX hotel loccumerhof))[01;36m)[00m
					(ADVX anscheinend)
					(ADJX besonders gunstig)) [01;33mMF) MF) NX)[00m
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						(C weil)
						(MF es gleich beim bahnhof) [01;33mMF) NX)[00m
						(VC liegt)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['NX'], 'family': ['MF', 'ADVX', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'NE'), 'right siblings': [(ADVX (ADV anscheinend)), (ADJX (ADVX (ADV besonders)) (ADJD gunstig))], 'left siblings': [], 'auto preterminal span': (115, 118), 'span': (115, 118), 'parent': 'MF', 'label': 'MF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SU die mus ich mit ihnen jetzt noch absprechen)
		(SU [01;33m(PX[00m
			(SU
				[01;31m(NX[00m
					(PX zum einen)
					[01;31m(NX[00m
						(NX das maritimhotel in hannover) [01;33mPX)[00m
						(NF
							(R
								(C welches)
								(FKOORD
									(MVC am bahnhof liegt)
									(KON und)
									(MVC
										(MF
											(PX zum zentrum)
											(NX
												(NX funfzehn minuten)
												[01;31m(NX[00m
													(NN laufzeit)[01;31m)[00m))
										(VC hat)))))[01;31m)[00m[01;31m)[00m)
			(SU es gibt dort eine cafeteria garage ist naturlich dann nicht nicht unbedingt so wichtig))
		(SU einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(SU
			(NX dann das hotel luisenhof)
			(ADJX funf minuten vom bahnhof entfernt)
			[01;31m(ADJX[00m
				(DM also)
				(ADJX etwas schneller)[01;31m)[00m
			(SIMPX es gibt eine bar ein restaurant und ebenfalls eine garage))
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF das hotel loccumerhof)
				(LK ist)
				(MF gleich beim bahnhof)
				[01;31m(NF[00m
					(ADVX
						(ADV anscheinend))[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF es)
				(LK gibt)
				(MF [01;33m(NX (MF (NX (MF[00m
					(NX
						(NX
							(ART ein)
							[01;31m(NX[00m
								(TRUNC schwimm)
								(KON und)
								(NN dampfbad)[01;31m)[00m)
						(KON und)
						(NX eine pianobar)))[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF das einzelzimmer)
				(LK kostet)
				(MF [01;33m(MF (MF[00m
					(ADVX allerdings)
					(NX
						(NX
							(NX zweihundert achtundvierzig mark)
							[01;31m(NX[00m
								(KON und)
								(NX das doppelzimmer)[01;31m)[00m)
						(NX hundert dreiundvierzig mark)))[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF
					(PX
						(APPRART vom)
						[01;31m(NX[00m
							(NN zeitangebot)[01;31m)[00m)) [01;33mMF)[00m
				(LK ware)
				(MF das hotel loccumerhof anscheinend besonders gunstig) [01;33mMF) MF) NX)[00m
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						(C weil)
						(MF es gleich beim bahnhof) [01;33mMF) NX)[00m
						(VC liegt)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['PX', 'NX'], 'family': ['NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'PIS', 'ART', 'NE', 'APPR', 'NE', 'PRELS', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPRART', 'NN', 'CARD', 'NN', 'NN', 'VAFIN'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (17, 34), 'span': (17, 34), 'left siblings': [], 'label': 'NX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SU die mus ich mit ihnen jetzt noch absprechen)
		(SU [01;33m(PX[00m
			(SU
				(PX zum einen)
				[01;31m(NX[00m
					(NX das maritimhotel in hannover) [01;33mPX)[00m
					(NF
						(R
							(C welches)
							(FKOORD
								(MVC am bahnhof liegt)
								(KON und)
								(MVC
									(MF
										(PX zum zentrum)
										(NX
											(NX funfzehn minuten)
											[01;31m(NX[00m
												(NN laufzeit)[01;31m)[00m))
									(VC hat)))))[01;31m)[00m)
			(SU es gibt dort eine cafeteria garage ist naturlich dann nicht nicht unbedingt so wichtig))
		(SU einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(SU
			(NX dann das hotel luisenhof)
			(ADJX funf minuten vom bahnhof entfernt)
			[01;31m(ADJX[00m
				(DM also)
				(ADJX etwas schneller)[01;31m)[00m
			(SIMPX es gibt eine bar ein restaurant und ebenfalls eine garage))
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF das hotel loccumerhof)
				(LK ist)
				(MF gleich beim bahnhof)
				[01;31m(NF[00m
					(ADVX
						(ADV anscheinend))[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF es)
				(LK gibt)
				(MF [01;33m(NX (MF (NX (MF[00m
					(NX
						(NX
							(ART ein)
							[01;31m(NX[00m
								(TRUNC schwimm)
								(KON und)
								(NN dampfbad)[01;31m)[00m)
						(KON und)
						(NX eine pianobar)))[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF das einzelzimmer)
				(LK kostet)
				(MF [01;33m(MF (MF[00m
					(ADVX allerdings)
					(NX
						(NX
							(NX zweihundert achtundvierzig mark)
							[01;31m(NX[00m
								(KON und)
								(NX das doppelzimmer)[01;31m)[00m)
						(NX hundert dreiundvierzig mark)))[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF
					(PX
						(APPRART vom)
						[01;31m(NX[00m
							(NN zeitangebot)[01;31m)[00m)) [01;33mMF)[00m
				(LK ware)
				(MF das hotel loccumerhof anscheinend besonders gunstig) [01;33mMF) MF) NX)[00m
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						(C weil)
						(MF es gleich beim bahnhof) [01;33mMF) NX)[00m
						(VC liegt)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['NX', 'NF'], 'family': ['PX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'PIS', 'ART', 'NE', 'APPR', 'NE', 'PRELS', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPRART', 'NN', 'CARD', 'NN', 'NN', 'VAFIN'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (17, 34), 'span': (19, 34), 'left siblings': ['PX'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SU die mus ich mit ihnen jetzt noch absprechen)
		(SU
			(SU
				[01;36m(PX[00m
					(PX zum einen)
					(NX das maritimhotel in hannover)[01;36m)[00m
				(NF
					(R
						(C welches)
						(FKOORD
							(MVC am bahnhof liegt)
							(KON und)
							(MVC
								(MF
									(PX zum zentrum)
									(NX
										(NX funfzehn minuten)
										[01;31m(NX[00m
											(NN laufzeit)[01;31m)[00m))
								(VC hat))))))
			(SU es gibt dort eine cafeteria garage ist naturlich dann nicht nicht unbedingt so wichtig))
		(SU einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(SU
			(NX dann das hotel luisenhof)
			(ADJX funf minuten vom bahnhof entfernt)
			[01;31m(ADJX[00m
				(DM also)
				(ADJX etwas schneller)[01;31m)[00m
			(SIMPX es gibt eine bar ein restaurant und ebenfalls eine garage))
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF das hotel loccumerhof)
				(LK ist)
				(MF gleich beim bahnhof)
				[01;31m(NF[00m
					(ADVX
						(ADV anscheinend))[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF es)
				(LK gibt)
				(MF [01;33m(NX (MF (NX (MF[00m
					(NX
						(NX
							(ART ein)
							[01;31m(NX[00m
								(TRUNC schwimm)
								(KON und)
								(NN dampfbad)[01;31m)[00m)
						(KON und)
						(NX eine pianobar)))[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF das einzelzimmer)
				(LK kostet)
				(MF [01;33m(MF (MF[00m
					(ADVX allerdings)
					(NX
						(NX
							(NX zweihundert achtundvierzig mark)
							[01;31m(NX[00m
								(KON und)
								(NX das doppelzimmer)[01;31m)[00m)
						(NX hundert dreiundvierzig mark)))[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF
					(PX
						(APPRART vom)
						[01;31m(NX[00m
							(NN zeitangebot)[01;31m)[00m)) [01;33mMF)[00m
				(LK ware)
				(MF das hotel loccumerhof anscheinend besonders gunstig) [01;33mMF) MF) NX)[00m
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						(C weil)
						(MF es gleich beim bahnhof) [01;33mMF) NX)[00m
						(VC liegt)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:UNSET add
{'subtrees': ['PX', 'NX'], 'family': ['PX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'PIS', 'ART', 'NE', 'APPR', 'NE'), 'right siblings': [(NF (R (C (NX (PRELS welches))) (FKOORD (MVC (MF (PX (APPRART am) (NX (NN bahnhof)))) (VC (VXFIN (VVFIN liegt)))) (KON und) (MVC (MF (PX (APPRART zum) (NX (NN zentrum))) (NX (NX (ADJX (CARD funfzehn)) (NN minuten)) (NX (NN laufzeit)))) (VC (VXFIN (VAFIN hat)))))))], 'left siblings': [], 'auto preterminal span': (17, 23), 'span': (17, 23), 'parent': 'SU', 'label': 'PX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SU die mus ich mit ihnen jetzt noch absprechen)
		(SU
			(SU
				(PX zum einen das maritimhotel in hannover)
				(NF
					(R
						(C welches)
						(FKOORD
							(MVC am bahnhof liegt)
							(KON und)
							(MVC
								(MF
									(PX zum zentrum)
									(NX
										(NX funfzehn minuten)
										[01;31m(NX[00m
											(NN laufzeit)[01;31m)[00m))
								(VC hat))))))
			(SU es gibt dort eine cafeteria garage ist naturlich dann nicht nicht unbedingt so wichtig))
		(SU einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(SU
			(NX dann das hotel luisenhof)
			(ADJX funf minuten vom bahnhof entfernt)
			[01;31m(ADJX[00m
				(DM also)
				(ADJX etwas schneller)[01;31m)[00m
			(SIMPX es gibt eine bar ein restaurant und ebenfalls eine garage))
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF das hotel loccumerhof)
				(LK ist)
				(MF gleich beim bahnhof)
				[01;31m(NF[00m
					(ADVX
						(ADV anscheinend))[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF es)
				(LK gibt)
				(MF [01;33m(NX (MF (NX (MF[00m
					(NX
						(NX
							(ART ein)
							[01;31m(NX[00m
								(TRUNC schwimm)
								(KON und)
								(NN dampfbad)[01;31m)[00m)
						(KON und)
						(NX eine pianobar)))[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF das einzelzimmer)
				(LK kostet)
				(MF [01;33m(MF (MF[00m
					(ADVX allerdings)
					(NX
						(NX
							(NX zweihundert achtundvierzig mark)
							[01;31m(NX[00m
								(KON und)
								(NX das doppelzimmer)[01;31m)[00m)
						(NX hundert dreiundvierzig mark)))[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF
					(PX
						(APPRART vom)
						[01;31m(NX[00m
							(NN zeitangebot)[01;31m)[00m)) [01;33mMF)[00m
				(LK ware)
				(MF das hotel loccumerhof anscheinend besonders gunstig) [01;33mMF) MF) NX)[00m
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						(C weil)
						(MF es gleich beim bahnhof) [01;33mMF) NX)[00m
						(VC liegt)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Single Word Phrase
{'subtrees': ['NN'], 'family': ['NX', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('CARD', 'NN', 'NN'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (30, 33), 'span': (32, 33), 'left siblings': ['NX'], 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(SU jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SU die mus ich mit ihnen jetzt noch absprechen)
		(SU zum einen das maritimhotel in hannover welches am bahnhof liegt und zum zentrum funfzehn minuten laufzeit hat es gibt dort eine cafeteria garage ist naturlich dann nicht nicht unbedingt so wichtig)
		(SU einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(SU
			(NX dann das hotel luisenhof)
			(ADJX funf minuten vom bahnhof entfernt)
			[01;31m(ADJX[00m
				(DM also)
				(ADJX etwas schneller)[01;31m)[00m
			(SIMPX es gibt eine bar ein restaurant und ebenfalls eine garage))
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF das hotel loccumerhof)
				(LK ist)
				(MF gleich beim bahnhof)
				[01;31m(NF[00m
					(ADVX
						(ADV anscheinend))[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF es)
				(LK gibt)
				(MF [01;33m(NX (MF (NX (MF[00m
					(NX
						(NX
							(ART ein)
							[01;31m(NX[00m
								(TRUNC schwimm)
								(KON und)
								(NN dampfbad)[01;31m)[00m)
						(KON und)
						(NX eine pianobar)))[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF das einzelzimmer)
				(LK kostet)
				(MF [01;33m(MF (MF[00m
					(ADVX allerdings)
					(NX
						(NX
							(NX zweihundert achtundvierzig mark)
							[01;31m(NX[00m
								(KON und)
								(NX das doppelzimmer)[01;31m)[00m)
						(NX hundert dreiundvierzig mark)))[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF
					(PX
						(APPRART vom)
						[01;31m(NX[00m
							(NN zeitangebot)[01;31m)[00m)) [01;33mMF)[00m
				(LK ware)
				(MF das hotel loccumerhof anscheinend besonders gunstig) [01;33mMF) MF) NX)[00m
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						(C weil)
						(MF es gleich beim bahnhof) [01;33mMF) NX)[00m
						(VC liegt)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Modifier Attachment
{'subtrees': ['DM', 'ADJX'], 'family': ['NX', 'ADJX', 'ADJX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'ADJD', 'ADV', 'ADV', 'ADJD', 'PPER', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ART', 'NN'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (57, 79), 'span': (66, 69), 'left siblings': ['NX', 'ADJX'], 'label': 'ADJX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SU die mus ich mit ihnen jetzt noch absprechen)
		(SU zum einen das maritimhotel in hannover welches am bahnhof liegt und zum zentrum funfzehn minuten laufzeit hat es gibt dort eine cafeteria garage ist naturlich dann nicht nicht unbedingt so wichtig)
		(SU einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(SU dann das hotel luisenhof funf minuten vom bahnhof entfernt also etwas schneller es gibt eine bar ein restaurant und ebenfalls eine garage)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF das hotel loccumerhof)
				(LK ist)
				(MF gleich beim bahnhof)
				[01;31m(NF[00m
					(ADVX
						(ADV anscheinend))[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF es)
				(LK gibt)
				(MF [01;33m(NX (MF (NX (MF[00m
					(NX
						(NX
							(ART ein)
							[01;31m(NX[00m
								(TRUNC schwimm)
								(KON und)
								(NN dampfbad)[01;31m)[00m)
						(KON und)
						(NX eine pianobar)))[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF das einzelzimmer)
				(LK kostet)
				(MF [01;33m(MF (MF[00m
					(ADVX allerdings)
					(NX
						(NX
							(NX zweihundert achtundvierzig mark)
							[01;31m(NX[00m
								(KON und)
								(NX das doppelzimmer)[01;31m)[00m)
						(NX hundert dreiundvierzig mark)))[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF
					(PX
						(APPRART vom)
						[01;31m(NX[00m
							(NN zeitangebot)[01;31m)[00m)) [01;33mMF)[00m
				(LK ware)
				(MF das hotel loccumerhof anscheinend besonders gunstig) [01;33mMF) MF) NX)[00m
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						(C weil)
						(MF es gleich beim bahnhof) [01;33mMF) NX)[00m
						(VC liegt)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['KOORD', 'VF', 'LK', 'MF', 'NF'], 'family': ['SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'ART', 'NN', 'NE', 'VAFIN', 'ADV', 'APPRART', 'NN', 'ADV', 'KON', 'PPER', 'VVFIN', 'ART', 'TRUNC', 'KON', 'NN', 'KON', 'ART', 'NN'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (79, 98), 'span': (79, 88), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SU die mus ich mit ihnen jetzt noch absprechen)
		(SU zum einen das maritimhotel in hannover welches am bahnhof liegt und zum zentrum funfzehn minuten laufzeit hat es gibt dort eine cafeteria garage ist naturlich dann nicht nicht unbedingt so wichtig)
		(SU einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(SU dann das hotel luisenhof funf minuten vom bahnhof entfernt also etwas schneller es gibt eine bar ein restaurant und ebenfalls eine garage)
		[01;31m(SU[00m
			(KOORD und)
			(VF das hotel loccumerhof)
			(LK ist)
			(MF gleich beim bahnhof)
			[01;31m(NF[00m
				(ADVX
					(ADV anscheinend))[01;31m)[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF es)
				(LK gibt)
				(MF [01;33m(NX (MF (NX (MF[00m
					(NX
						(NX
							(ART ein)
							[01;31m(NX[00m
								(TRUNC schwimm)
								(KON und)
								(NN dampfbad)[01;31m)[00m)
						(KON und)
						(NX eine pianobar)))[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF das einzelzimmer)
				(LK kostet)
				(MF [01;33m(MF (MF[00m
					(ADVX allerdings)
					(NX
						(NX
							(NX zweihundert achtundvierzig mark)
							[01;31m(NX[00m
								(KON und)
								(NX das doppelzimmer)[01;31m)[00m)
						(NX hundert dreiundvierzig mark)))[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF
					(PX
						(APPRART vom)
						[01;31m(NX[00m
							(NN zeitangebot)[01;31m)[00m)) [01;33mMF)[00m
				(LK ware)
				(MF das hotel loccumerhof anscheinend besonders gunstig) [01;33mMF) MF) NX)[00m
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						(C weil)
						(MF es gleich beim bahnhof) [01;33mMF) NX)[00m
						(VC liegt)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['KOORD', 'VF', 'LK', 'MF', 'NF', 'SIMPX'], 'family': ['SU', 'SU', 'SU', 'SU', 'SU', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'PIAT', 'NN', 'VVPP', 'PDS', 'VMFIN', 'PPER', 'APPR', 'PPER', 'ADV', 'ADV', 'VVINF', 'APPRART', 'PIS', 'ART', 'NE', 'APPR', 'NE', 'PRELS', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPRART', 'NN', 'CARD', 'NN', 'NN', 'VAFIN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NN', 'VAFIN', 'ADV', 'ADV', 'PTKNEG', 'PTKNEG', 'ADV', 'ADV', 'ADJD', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN', 'NN', 'CARD', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'ADJD', 'ADV', 'ADV', 'ADJD', 'PPER', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ART', 'NN', 'KON', 'ART', 'NN', 'NE', 'VAFIN', 'ADV', 'APPRART', 'NN', 'ADV', 'KON', 'PPER', 'VVFIN', 'ART', 'TRUNC', 'KON', 'NN', 'KON', 'ART', 'NN', 'KON', 'ART', 'NN', 'VVFIN', 'ADV', 'CARD', 'CARD', 'NN', 'KON', 'ART', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'VAFIN', 'ART', 'NN', 'NE', 'ADV', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'VVFIN'), 'right siblings': ['SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 127), 'span': (79, 98), 'left siblings': ['SU', 'SU', 'SU', 'SU', 'SU'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SU die mus ich mit ihnen jetzt noch absprechen)
		(SU zum einen das maritimhotel in hannover welches am bahnhof liegt und zum zentrum funfzehn minuten laufzeit hat es gibt dort eine cafeteria garage ist naturlich dann nicht nicht unbedingt so wichtig)
		(SU einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(SU dann das hotel luisenhof funf minuten vom bahnhof entfernt also etwas schneller es gibt eine bar ein restaurant und ebenfalls eine garage)
		(KOORD und)
		(VF das hotel loccumerhof)
		(LK ist)
		(MF gleich beim bahnhof)
		[01;31m(NF[00m
			(ADVX
				(ADV anscheinend))[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF es)
			(LK gibt)
			(MF [01;33m(NX (MF (NX (MF[00m
				(NX
					(NX
						(ART ein)
						[01;31m(NX[00m
							(TRUNC schwimm)
							(KON und)
							(NN dampfbad)[01;31m)[00m)
					(KON und)
					(NX eine pianobar)))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF das einzelzimmer)
				(LK kostet)
				(MF [01;33m(MF (MF[00m
					(ADVX allerdings)
					(NX
						(NX
							(NX zweihundert achtundvierzig mark)
							[01;31m(NX[00m
								(KON und)
								(NX das doppelzimmer)[01;31m)[00m)
						(NX hundert dreiundvierzig mark)))[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF
					(PX
						(APPRART vom)
						[01;31m(NX[00m
							(NN zeitangebot)[01;31m)[00m)) [01;33mMF)[00m
				(LK ware)
				(MF das hotel loccumerhof anscheinend besonders gunstig) [01;33mMF) MF) NX)[00m
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						(C weil)
						(MF es gleich beim bahnhof) [01;33mMF) NX)[00m
						(VC liegt)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['SU', 'SU', 'SU', 'SU', 'SU', 'KOORD', 'VF', 'LK', 'MF', 'NF', 'SIMPX', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'PIAT', 'NN', 'VVPP', 'PDS', 'VMFIN', 'PPER', 'APPR', 'PPER', 'ADV', 'ADV', 'VVINF', 'APPRART', 'PIS', 'ART', 'NE', 'APPR', 'NE', 'PRELS', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPRART', 'NN', 'CARD', 'NN', 'NN', 'VAFIN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NN', 'VAFIN', 'ADV', 'ADV', 'PTKNEG', 'PTKNEG', 'ADV', 'ADV', 'ADJD', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN', 'NN', 'CARD', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'ADJD', 'ADV', 'ADV', 'ADJD', 'PPER', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ART', 'NN', 'KON', 'ART', 'NN', 'NE', 'VAFIN', 'ADV', 'APPRART', 'NN', 'ADV', 'KON', 'PPER', 'VVFIN', 'ART', 'TRUNC', 'KON', 'NN', 'KON', 'ART', 'NN', 'KON', 'ART', 'NN', 'VVFIN', 'ADV', 'CARD', 'CARD', 'NN', 'KON', 'ART', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'VAFIN', 'ART', 'NN', 'NE', 'ADV', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'VVFIN'), 'right siblings': ['SIMPX', 'SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 127), 'span': (87, 88), 'left siblings': ['SU', 'SU', 'SU', 'SU', 'SU', 'KOORD', 'VF', 'LK', 'MF'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SU die mus ich mit ihnen jetzt noch absprechen)
		(SU zum einen das maritimhotel in hannover welches am bahnhof liegt und zum zentrum funfzehn minuten laufzeit hat es gibt dort eine cafeteria garage ist naturlich dann nicht nicht unbedingt so wichtig)
		(SU einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(SU dann das hotel luisenhof funf minuten vom bahnhof entfernt also etwas schneller es gibt eine bar ein restaurant und ebenfalls eine garage)
		(KOORD und)
		(VF das hotel loccumerhof)
		(LK ist)
		(MF gleich beim bahnhof)
		(ADVX anscheinend)
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF es)
			(LK gibt)
			(MF [01;33m(NX (MF (NX (MF[00m
				(NX
					(NX
						(ART ein)
						[01;31m(NX[00m
							(TRUNC schwimm)
							(KON und)
							(NN dampfbad)[01;31m)[00m)
					(KON und)
					(NX eine pianobar)))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF das einzelzimmer)
				(LK kostet)
				(MF [01;33m(MF (MF[00m
					(ADVX allerdings)
					(NX
						(NX
							(NX zweihundert achtundvierzig mark)
							[01;31m(NX[00m
								(KON und)
								(NX das doppelzimmer)[01;31m)[00m)
						(NX hundert dreiundvierzig mark)))[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF
					(PX
						(APPRART vom)
						[01;31m(NX[00m
							(NN zeitangebot)[01;31m)[00m)) [01;33mMF)[00m
				(LK ware)
				(MF das hotel loccumerhof anscheinend besonders gunstig) [01;33mMF) MF) NX)[00m
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						(C weil)
						(MF es gleich beim bahnhof) [01;33mMF) NX)[00m
						(VC liegt)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['KOORD', 'VF', 'LK', 'MF'], 'family': ['SU', 'SU', 'SU', 'SU', 'SU', 'KOORD', 'VF', 'LK', 'MF', 'ADVX', 'SIMPX', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'PIAT', 'NN', 'VVPP', 'PDS', 'VMFIN', 'PPER', 'APPR', 'PPER', 'ADV', 'ADV', 'VVINF', 'APPRART', 'PIS', 'ART', 'NE', 'APPR', 'NE', 'PRELS', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPRART', 'NN', 'CARD', 'NN', 'NN', 'VAFIN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NN', 'VAFIN', 'ADV', 'ADV', 'PTKNEG', 'PTKNEG', 'ADV', 'ADV', 'ADJD', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN', 'NN', 'CARD', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'ADJD', 'ADV', 'ADV', 'ADJD', 'PPER', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ART', 'NN', 'KON', 'ART', 'NN', 'NE', 'VAFIN', 'ADV', 'APPRART', 'NN', 'ADV', 'KON', 'PPER', 'VVFIN', 'ART', 'TRUNC', 'KON', 'NN', 'KON', 'ART', 'NN', 'KON', 'ART', 'NN', 'VVFIN', 'ADV', 'CARD', 'CARD', 'NN', 'KON', 'ART', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'VAFIN', 'ART', 'NN', 'NE', 'ADV', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'VVFIN'), 'right siblings': ['SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 127), 'span': (88, 98), 'left siblings': ['SU', 'SU', 'SU', 'SU', 'SU', 'KOORD', 'VF', 'LK', 'MF', 'ADVX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SU die mus ich mit ihnen jetzt noch absprechen)
		(SU zum einen das maritimhotel in hannover welches am bahnhof liegt und zum zentrum funfzehn minuten laufzeit hat es gibt dort eine cafeteria garage ist naturlich dann nicht nicht unbedingt so wichtig)
		(SU einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(SU dann das hotel luisenhof funf minuten vom bahnhof entfernt also etwas schneller es gibt eine bar ein restaurant und ebenfalls eine garage)
		(KOORD und)
		(VF das hotel loccumerhof)
		(LK ist)
		(MF gleich beim bahnhof)
		(ADVX anscheinend)
		(KOORD und)
		(VF es)
		(LK gibt)
		(MF [01;33m(NX (MF (NX (MF[00m
			(NX
				(NX
					(ART ein)
					[01;31m(NX[00m
						(TRUNC schwimm)
						(KON und)
						(NN dampfbad)[01;31m)[00m)
				(KON und)
				(NX eine pianobar)))
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF das einzelzimmer)
				(LK kostet)
				(MF [01;33m(MF (MF[00m
					(ADVX allerdings)
					(NX
						(NX
							(NX zweihundert achtundvierzig mark)
							[01;31m(NX[00m
								(KON und)
								(NX das doppelzimmer)[01;31m)[00m)
						(NX hundert dreiundvierzig mark)))[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF
					(PX
						(APPRART vom)
						[01;31m(NX[00m
							(NN zeitangebot)[01;31m)[00m)) [01;33mMF)[00m
				(LK ware)
				(MF das hotel loccumerhof anscheinend besonders gunstig) [01;33mMF) MF) NX)[00m
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						(C weil)
						(MF es gleich beim bahnhof) [01;33mMF) NX)[00m
						(VC liegt)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:NP Internal Structure
{'subtrees': ['TRUNC', 'KON', 'NN'], 'family': ['ART', 'NX'], 'over_word': False, 'over words': True, 'auto preterminals': ('ART', 'TRUNC', 'KON', 'NN'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (91, 95), 'span': (92, 95), 'left siblings': ['ART'], 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'remove'}
(TOP
	(TURN
		(SU jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SU die mus ich mit ihnen jetzt noch absprechen)
		(SU zum einen das maritimhotel in hannover welches am bahnhof liegt und zum zentrum funfzehn minuten laufzeit hat es gibt dort eine cafeteria garage ist naturlich dann nicht nicht unbedingt so wichtig)
		(SU einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(SU dann das hotel luisenhof funf minuten vom bahnhof entfernt also etwas schneller es gibt eine bar ein restaurant und ebenfalls eine garage)
		(KOORD und)
		(VF das hotel loccumerhof)
		(LK ist)
		(MF gleich beim bahnhof)
		(ADVX anscheinend)
		(KOORD und)
		(VF es)
		(LK gibt)
		[01;33m(NX (MF (NX (MF[00m (MF ein schwimm und dampfbad und eine pianobar)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF das einzelzimmer)
				(LK kostet)
				(MF [01;33m(MF (MF[00m
					(ADVX allerdings)
					(NX
						(NX
							(NX zweihundert achtundvierzig mark)
							[01;31m(NX[00m
								(KON und)
								(NX das doppelzimmer)[01;31m)[00m)
						(NX hundert dreiundvierzig mark)))[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF
					(PX
						(APPRART vom)
						[01;31m(NX[00m
							(NN zeitangebot)[01;31m)[00m)) [01;33mMF)[00m
				(LK ware)
				(MF das hotel loccumerhof anscheinend besonders gunstig) [01;33mMF) MF) NX)[00m
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						(C weil)
						(MF es gleich beim bahnhof) [01;33mMF) NX)[00m
						(VC liegt)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SU', 'SU', 'SU', 'SU', 'SU', 'KOORD', 'VF', 'LK', 'MF', 'ADVX', 'KOORD', 'VF', 'LK', 'MF', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'PIAT', 'NN', 'VVPP', 'PDS', 'VMFIN', 'PPER', 'APPR', 'PPER', 'ADV', 'ADV', 'VVINF', 'APPRART', 'PIS', 'ART', 'NE', 'APPR', 'NE', 'PRELS', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPRART', 'NN', 'CARD', 'NN', 'NN', 'VAFIN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NN', 'VAFIN', 'ADV', 'ADV', 'PTKNEG', 'PTKNEG', 'ADV', 'ADV', 'ADJD', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN', 'NN', 'CARD', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'ADJD', 'ADV', 'ADV', 'ADJD', 'PPER', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ART', 'NN', 'KON', 'ART', 'NN', 'NE', 'VAFIN', 'ADV', 'APPRART', 'NN', 'ADV', 'KON', 'PPER', 'VVFIN', 'ART', 'TRUNC', 'KON', 'NN', 'KON', 'ART', 'NN', 'KON', 'ART', 'NN', 'VVFIN', 'ADV', 'CARD', 'CARD', 'NN', 'KON', 'ART', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'VAFIN', 'ART', 'NN', 'NE', 'ADV', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'VVFIN'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 127), 'span': (98, 112), 'left siblings': ['SU', 'SU', 'SU', 'SU', 'SU', 'KOORD', 'VF', 'LK', 'MF', 'ADVX', 'KOORD', 'VF', 'LK', 'MF'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SU die mus ich mit ihnen jetzt noch absprechen)
		(SU zum einen das maritimhotel in hannover welches am bahnhof liegt und zum zentrum funfzehn minuten laufzeit hat es gibt dort eine cafeteria garage ist naturlich dann nicht nicht unbedingt so wichtig)
		(SU einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(SU dann das hotel luisenhof funf minuten vom bahnhof entfernt also etwas schneller es gibt eine bar ein restaurant und ebenfalls eine garage)
		(KOORD und)
		(VF das hotel loccumerhof)
		(LK ist)
		(MF gleich beim bahnhof)
		(ADVX anscheinend)
		(KOORD und)
		(VF es)
		(LK gibt)
		[01;33m(NX (MF (NX (MF[00m (MF ein schwimm und dampfbad und eine pianobar)
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das einzelzimmer)
			(LK kostet)
			(MF [01;33m(MF (MF[00m
				(ADVX allerdings)
				(NX
					(NX
						(NX zweihundert achtundvierzig mark)
						[01;31m(NX[00m
							(KON und)
							(NX das doppelzimmer)[01;31m)[00m)
					(NX hundert dreiundvierzig mark)))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF
					(PX
						(APPRART vom)
						[01;31m(NX[00m
							(NN zeitangebot)[01;31m)[00m)) [01;33mMF)[00m
				(LK ware)
				(MF das hotel loccumerhof anscheinend besonders gunstig) [01;33mMF) MF) NX)[00m
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						(C weil)
						(MF es gleich beim bahnhof) [01;33mMF) NX)[00m
						(VC liegt)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['KOORD', 'VF', 'LK', 'MF'], 'family': ['SU', 'SU', 'SU', 'SU', 'SU', 'KOORD', 'VF', 'LK', 'MF', 'ADVX', 'KOORD', 'VF', 'LK', 'MF', 'SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'PIAT', 'NN', 'VVPP', 'PDS', 'VMFIN', 'PPER', 'APPR', 'PPER', 'ADV', 'ADV', 'VVINF', 'APPRART', 'PIS', 'ART', 'NE', 'APPR', 'NE', 'PRELS', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPRART', 'NN', 'CARD', 'NN', 'NN', 'VAFIN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NN', 'VAFIN', 'ADV', 'ADV', 'PTKNEG', 'PTKNEG', 'ADV', 'ADV', 'ADJD', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN', 'NN', 'CARD', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'ADJD', 'ADV', 'ADV', 'ADJD', 'PPER', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ART', 'NN', 'KON', 'ART', 'NN', 'NE', 'VAFIN', 'ADV', 'APPRART', 'NN', 'ADV', 'KON', 'PPER', 'VVFIN', 'ART', 'TRUNC', 'KON', 'NN', 'KON', 'ART', 'NN', 'KON', 'ART', 'NN', 'VVFIN', 'ADV', 'CARD', 'CARD', 'NN', 'KON', 'ART', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'VAFIN', 'ART', 'NN', 'NE', 'ADV', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'VVFIN'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 127), 'span': (98, 112), 'left siblings': ['SU', 'SU', 'SU', 'SU', 'SU', 'KOORD', 'VF', 'LK', 'MF', 'ADVX', 'KOORD', 'VF', 'LK', 'MF'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SU die mus ich mit ihnen jetzt noch absprechen)
		(SU zum einen das maritimhotel in hannover welches am bahnhof liegt und zum zentrum funfzehn minuten laufzeit hat es gibt dort eine cafeteria garage ist naturlich dann nicht nicht unbedingt so wichtig)
		(SU einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(SU dann das hotel luisenhof funf minuten vom bahnhof entfernt also etwas schneller es gibt eine bar ein restaurant und ebenfalls eine garage)
		(KOORD und)
		(VF das hotel loccumerhof)
		(LK ist)
		(MF gleich beim bahnhof)
		(ADVX anscheinend)
		(KOORD und)
		(VF es)
		(LK gibt)
		[01;33m(NX (MF (NX (MF[00m (MF ein schwimm und dampfbad und eine pianobar)
		(KOORD und)
		(VF das einzelzimmer)
		(LK kostet)
		(MF [01;33m(MF (MF[00m
			(ADVX allerdings)
			(NX
				(NX
					(NX zweihundert achtundvierzig mark)
					[01;31m(NX[00m
						(KON und)
						(NX das doppelzimmer)[01;31m)[00m)
				(NX hundert dreiundvierzig mark)))
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF
					(PX
						(APPRART vom)
						[01;31m(NX[00m
							(NN zeitangebot)[01;31m)[00m)) [01;33mMF)[00m
				(LK ware)
				(MF das hotel loccumerhof anscheinend besonders gunstig) [01;33mMF) MF) NX)[00m
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						(C weil)
						(MF es gleich beim bahnhof) [01;33mMF) NX)[00m
						(VC liegt)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['KON', 'NX'], 'family': ['NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'CARD', 'NN', 'KON', 'ART', 'NN'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (103, 109), 'span': (106, 109), 'left siblings': ['NX'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SU die mus ich mit ihnen jetzt noch absprechen)
		(SU zum einen das maritimhotel in hannover welches am bahnhof liegt und zum zentrum funfzehn minuten laufzeit hat es gibt dort eine cafeteria garage ist naturlich dann nicht nicht unbedingt so wichtig)
		(SU einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(SU dann das hotel luisenhof funf minuten vom bahnhof entfernt also etwas schneller es gibt eine bar ein restaurant und ebenfalls eine garage)
		(KOORD und)
		(VF das hotel loccumerhof)
		(LK ist)
		(MF gleich beim bahnhof)
		(ADVX anscheinend)
		(KOORD und)
		(VF es)
		(LK gibt)
		[01;33m(NX (MF (NX (MF[00m (MF ein schwimm und dampfbad und eine pianobar)
		(KOORD und)
		(VF das einzelzimmer)
		(LK kostet)
		[01;33m(MF (MF[00m (MF allerdings zweihundert achtundvierzig mark und das doppelzimmer hundert dreiundvierzig mark)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF
					(PX
						(APPRART vom)
						[01;31m(NX[00m
							(NN zeitangebot)[01;31m)[00m)) [01;33mMF)[00m
				(LK ware)
				(MF das hotel loccumerhof anscheinend besonders gunstig) [01;33mMF) MF) NX)[00m
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						(C weil)
						(MF es gleich beim bahnhof) [01;33mMF) NX)[00m
						(VC liegt)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SU', 'SU', 'SU', 'SU', 'SU', 'KOORD', 'VF', 'LK', 'MF', 'ADVX', 'KOORD', 'VF', 'LK', 'MF', 'KOORD', 'VF', 'LK', 'MF', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'PIAT', 'NN', 'VVPP', 'PDS', 'VMFIN', 'PPER', 'APPR', 'PPER', 'ADV', 'ADV', 'VVINF', 'APPRART', 'PIS', 'ART', 'NE', 'APPR', 'NE', 'PRELS', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPRART', 'NN', 'CARD', 'NN', 'NN', 'VAFIN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NN', 'VAFIN', 'ADV', 'ADV', 'PTKNEG', 'PTKNEG', 'ADV', 'ADV', 'ADJD', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN', 'NN', 'CARD', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'ADJD', 'ADV', 'ADV', 'ADJD', 'PPER', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ART', 'NN', 'KON', 'ART', 'NN', 'NE', 'VAFIN', 'ADV', 'APPRART', 'NN', 'ADV', 'KON', 'PPER', 'VVFIN', 'ART', 'TRUNC', 'KON', 'NN', 'KON', 'ART', 'NN', 'KON', 'ART', 'NN', 'VVFIN', 'ADV', 'CARD', 'CARD', 'NN', 'KON', 'ART', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'VAFIN', 'ART', 'NN', 'NE', 'ADV', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'VVFIN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 127), 'span': (112, 127), 'left siblings': ['SU', 'SU', 'SU', 'SU', 'SU', 'KOORD', 'VF', 'LK', 'MF', 'ADVX', 'KOORD', 'VF', 'LK', 'MF', 'KOORD', 'VF', 'LK', 'MF'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SU die mus ich mit ihnen jetzt noch absprechen)
		(SU zum einen das maritimhotel in hannover welches am bahnhof liegt und zum zentrum funfzehn minuten laufzeit hat es gibt dort eine cafeteria garage ist naturlich dann nicht nicht unbedingt so wichtig)
		(SU einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(SU dann das hotel luisenhof funf minuten vom bahnhof entfernt also etwas schneller es gibt eine bar ein restaurant und ebenfalls eine garage)
		(KOORD und)
		(VF das hotel loccumerhof)
		(LK ist)
		(MF gleich beim bahnhof)
		(ADVX anscheinend)
		(KOORD und)
		(VF es)
		(LK gibt)
		[01;33m(NX (MF (NX (MF[00m (MF ein schwimm und dampfbad und eine pianobar)
		(KOORD und)
		(VF das einzelzimmer)
		(LK kostet)
		[01;33m(MF (MF[00m (MF allerdings zweihundert achtundvierzig mark und das doppelzimmer hundert dreiundvierzig mark)
		[01;31m(SIMPX[00m
			(VF
				(PX
					(APPRART vom)
					[01;31m(NX[00m
						(NN zeitangebot)[01;31m)[00m)) [01;33mMF)[00m
			(LK ware)
			(MF das hotel loccumerhof anscheinend besonders gunstig) [01;33mMF) MF) NX)[00m
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					(C weil)
					(MF es gleich beim bahnhof) [01;33mMF) NX)[00m
					(VC liegt)[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'NF'], 'family': ['SU', 'SU', 'SU', 'SU', 'SU', 'KOORD', 'VF', 'LK', 'MF', 'ADVX', 'KOORD', 'VF', 'LK', 'MF', 'KOORD', 'VF', 'LK', 'MF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'PIAT', 'NN', 'VVPP', 'PDS', 'VMFIN', 'PPER', 'APPR', 'PPER', 'ADV', 'ADV', 'VVINF', 'APPRART', 'PIS', 'ART', 'NE', 'APPR', 'NE', 'PRELS', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPRART', 'NN', 'CARD', 'NN', 'NN', 'VAFIN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NN', 'VAFIN', 'ADV', 'ADV', 'PTKNEG', 'PTKNEG', 'ADV', 'ADV', 'ADJD', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN', 'NN', 'CARD', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'ADJD', 'ADV', 'ADV', 'ADJD', 'PPER', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ART', 'NN', 'KON', 'ART', 'NN', 'NE', 'VAFIN', 'ADV', 'APPRART', 'NN', 'ADV', 'KON', 'PPER', 'VVFIN', 'ART', 'TRUNC', 'KON', 'NN', 'KON', 'ART', 'NN', 'KON', 'ART', 'NN', 'VVFIN', 'ADV', 'CARD', 'CARD', 'NN', 'KON', 'ART', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'VAFIN', 'ART', 'NN', 'NE', 'ADV', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'VVFIN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 127), 'span': (112, 127), 'left siblings': ['SU', 'SU', 'SU', 'SU', 'SU', 'KOORD', 'VF', 'LK', 'MF', 'ADVX', 'KOORD', 'VF', 'LK', 'MF', 'KOORD', 'VF', 'LK', 'MF'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SU die mus ich mit ihnen jetzt noch absprechen)
		(SU zum einen das maritimhotel in hannover welches am bahnhof liegt und zum zentrum funfzehn minuten laufzeit hat es gibt dort eine cafeteria garage ist naturlich dann nicht nicht unbedingt so wichtig)
		(SU einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(SU dann das hotel luisenhof funf minuten vom bahnhof entfernt also etwas schneller es gibt eine bar ein restaurant und ebenfalls eine garage)
		(KOORD und)
		(VF das hotel loccumerhof)
		(LK ist)
		(MF gleich beim bahnhof)
		(ADVX anscheinend)
		(KOORD und)
		(VF es)
		(LK gibt)
		[01;36m(MF[00m
			[01;36m(NX[00m
				[01;33m(NX (MF[00m (MF ein schwimm und dampfbad und eine pianobar)
				(KOORD und)
				(VF das einzelzimmer)
				(LK kostet)
				[01;36m(MF[00m
					[01;36m(MF[00m
						(MF allerdings zweihundert achtundvierzig mark und das doppelzimmer hundert dreiundvierzig mark)
						(VF
							(PX
								(APPRART vom)
								[01;31m(NX[00m
									(NN zeitangebot)[01;31m)[00m))[01;36m)[00m
					(LK ware)
					(MF das hotel loccumerhof anscheinend besonders gunstig)[01;36m)[00m[01;36m)[00m[01;36m)[00m
		[01;31m(NF[00m
			[01;31m(SIMPX[00m
				(C weil)
				(MF es gleich beim bahnhof) [01;33mMF) NX)[00m
				(VC liegt)[01;31m)[00m[01;31m)[00m))
Step:UNSET add
{'subtrees': ['MF', 'KOORD', 'VF', 'LK', 'MF', 'VF', 'LK', 'MF'], 'family': ['SU', 'SU', 'SU', 'SU', 'SU', 'KOORD', 'VF', 'LK', 'MF', 'ADVX', 'KOORD', 'VF', 'LK', 'NX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'TRUNC', 'KON', 'NN', 'KON', 'ART', 'NN', 'KON', 'ART', 'NN', 'VVFIN', 'ADV', 'CARD', 'CARD', 'NN', 'KON', 'ART', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'VAFIN', 'ART', 'NN', 'NE', 'ADV', 'ADV', 'ADJD'), 'right siblings': [(NF (SIMPX (C (KOUS weil)) (MF (NX (PPER es)) (ADVX (ADV gleich)) (PX (APPRART beim) (NX (NN bahnhof)))) (VC (VXFIN (VVFIN liegt)))))], 'left siblings': [(SU (SIMPX (VF (ADVX (ADV jetzt))) (LK (VXFIN (VAFIN habe))) (MF (NX (PPER ich)) (NX (PRF mir)) (ADVX (ADV auch)) (ADVX (ADV schon)) (NX (PIAT einige) (NN hotelangebote))) (VC (VXINF (VVPP herausgesucht))))), (SU (SIMPX (VF (NX (PDS die))) (LK (VXFIN (VMFIN mus))) (MF (NX (PPER ich)) (PX (APPR mit) (NX (PPER ihnen))) (ADVX (ADV jetzt)) (ADVX (ADV noch))) (VC (VXINF (VVINF absprechen))))), (SU (SU (PX (PX (APPRART zum) (NX (PIS einen))) (NX (NX (ART das) (NE maritimhotel)) (PX (APPR in) (NX (NE hannover))))) (NF (R (C (NX (PRELS welches))) (FKOORD (MVC (MF (PX (APPRART am) (NX (NN bahnhof)))) (VC (VXFIN (VVFIN liegt)))) (KON und) (MVC (MF (PX (APPRART zum) (NX (NN zentrum))) (NX (NX (ADJX (CARD funfzehn)) (NN minuten)) (NN laufzeit))) (VC (VXFIN (VAFIN hat)))))))) (SU (SIMPX (VF (NX (PPER es))) (LK (VXFIN (VVFIN gibt))) (MF (ADVX (ADV dort)) (NX (ART eine) (NN cafeteria)))) (SIMPX (VF (NX (NN garage))) (LK (VXFIN (VAFIN ist))) (MF (MF (ADVX (ADV naturlich))) (ADVX (ADV dann)) (ADVX (PTKNEG nicht)) (ADVX (PTKNEG nicht)) (ADVX (ADV unbedingt)) (ADJX (ADVX (ADV so)) (ADJD wichtig)))))), (SU (SIMPX (VF (NX (NN einzelzimmer))) (LK (VXFIN (VVFIN kostet))) (NX (MF (NX (NX (ADJX (CARD hundert) (CARD einundfunfzig)) (NN mark)) (NX (NN doppelzimmer))) (NX (ADJX (CARD hundert) (CARD funf)) (NN mark)))))), (SU (NX (ADVX (ADV dann)) (NX (ART das) (NX (NX (NN hotel)) (NX (NE luisenhof))))) (ADJX (NX (NX (ADJX (CARD funf)) (NN minuten)) (PX (APPRART vom) (NX (NN bahnhof)))) (ADJD entfernt)) (DM (ADVX (ADV also))) (ADJX (ADVX (ADV etwas)) (ADJD schneller)) (SIMPX (VF (NX (PPER es))) (LK (VXFIN (VVFIN gibt))) (MF (NX (MF (NX (ART eine) (NN bar))) (NX (NX (ART ein) (NN restaurant)) (KON und) (NX (ADVX (ADV ebenfalls)) (NX (ART eine) (NN garage)))))))), (KOORD (KON und)), (VF (NX (ART das) (NX (NX (NN hotel)) (NX (NE loccumerhof))))), (LK (VXFIN (VAFIN ist))), (MF (ADVX (ADV gleich)) (PX (APPRART beim) (NX (NN bahnhof)))), (ADVX (ADV anscheinend)), (KOORD (KON und)), (VF (NX (PPER es))), (LK (VXFIN (VVFIN gibt)))], 'auto preterminal span': (91, 121), 'span': (91, 121), 'parent': 'TURN', 'label': 'NX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SU die mus ich mit ihnen jetzt noch absprechen)
		(SU zum einen das maritimhotel in hannover welches am bahnhof liegt und zum zentrum funfzehn minuten laufzeit hat es gibt dort eine cafeteria garage ist naturlich dann nicht nicht unbedingt so wichtig)
		(SU einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(SU dann das hotel luisenhof funf minuten vom bahnhof entfernt also etwas schneller es gibt eine bar ein restaurant und ebenfalls eine garage)
		(KOORD und)
		(VF das hotel loccumerhof)
		(LK ist)
		(MF gleich beim bahnhof)
		(ADVX anscheinend)
		(KOORD und)
		(VF es)
		(LK gibt)
		[01;36m(MF[00m
			(NX [01;33m(NX (MF[00m
				(MF ein schwimm und dampfbad und eine pianobar)
				(KOORD und)
				(VF das einzelzimmer)
				(LK kostet)
				[01;36m(MF[00m
					[01;36m(MF[00m
						(MF allerdings zweihundert achtundvierzig mark und das doppelzimmer hundert dreiundvierzig mark)
						(VF
							(PX
								(APPRART vom)
								[01;31m(NX[00m
									(NN zeitangebot)[01;31m)[00m))[01;36m)[00m
					(LK ware)
					(MF das hotel loccumerhof anscheinend besonders gunstig)[01;36m)[00m)[01;36m)[00m
		[01;31m(NF[00m
			[01;31m(SIMPX[00m
				(C weil)
				(MF es gleich beim bahnhof) [01;33mMF) NX)[00m
				(VC liegt)[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['NX'], 'family': ['SU', 'SU', 'SU', 'SU', 'SU', 'KOORD', 'VF', 'LK', 'MF', 'ADVX', 'KOORD', 'VF', 'LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'TRUNC', 'KON', 'NN', 'KON', 'ART', 'NN', 'KON', 'ART', 'NN', 'VVFIN', 'ADV', 'CARD', 'CARD', 'NN', 'KON', 'ART', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'VAFIN', 'ART', 'NN', 'NE', 'ADV', 'ADV', 'ADJD'), 'right siblings': [(NF (SIMPX (C (KOUS weil)) (MF (NX (PPER es)) (ADVX (ADV gleich)) (PX (APPRART beim) (NX (NN bahnhof)))) (VC (VXFIN (VVFIN liegt)))))], 'left siblings': [(SU (SIMPX (VF (ADVX (ADV jetzt))) (LK (VXFIN (VAFIN habe))) (MF (NX (PPER ich)) (NX (PRF mir)) (ADVX (ADV auch)) (ADVX (ADV schon)) (NX (PIAT einige) (NN hotelangebote))) (VC (VXINF (VVPP herausgesucht))))), (SU (SIMPX (VF (NX (PDS die))) (LK (VXFIN (VMFIN mus))) (MF (NX (PPER ich)) (PX (APPR mit) (NX (PPER ihnen))) (ADVX (ADV jetzt)) (ADVX (ADV noch))) (VC (VXINF (VVINF absprechen))))), (SU (SU (PX (PX (APPRART zum) (NX (PIS einen))) (NX (NX (ART das) (NE maritimhotel)) (PX (APPR in) (NX (NE hannover))))) (NF (R (C (NX (PRELS welches))) (FKOORD (MVC (MF (PX (APPRART am) (NX (NN bahnhof)))) (VC (VXFIN (VVFIN liegt)))) (KON und) (MVC (MF (PX (APPRART zum) (NX (NN zentrum))) (NX (NX (ADJX (CARD funfzehn)) (NN minuten)) (NN laufzeit))) (VC (VXFIN (VAFIN hat)))))))) (SU (SIMPX (VF (NX (PPER es))) (LK (VXFIN (VVFIN gibt))) (MF (ADVX (ADV dort)) (NX (ART eine) (NN cafeteria)))) (SIMPX (VF (NX (NN garage))) (LK (VXFIN (VAFIN ist))) (MF (MF (ADVX (ADV naturlich))) (ADVX (ADV dann)) (ADVX (PTKNEG nicht)) (ADVX (PTKNEG nicht)) (ADVX (ADV unbedingt)) (ADJX (ADVX (ADV so)) (ADJD wichtig)))))), (SU (SIMPX (VF (NX (NN einzelzimmer))) (LK (VXFIN (VVFIN kostet))) (NX (MF (NX (NX (ADJX (CARD hundert) (CARD einundfunfzig)) (NN mark)) (NX (NN doppelzimmer))) (NX (ADJX (CARD hundert) (CARD funf)) (NN mark)))))), (SU (NX (ADVX (ADV dann)) (NX (ART das) (NX (NX (NN hotel)) (NX (NE luisenhof))))) (ADJX (NX (NX (ADJX (CARD funf)) (NN minuten)) (PX (APPRART vom) (NX (NN bahnhof)))) (ADJD entfernt)) (DM (ADVX (ADV also))) (ADJX (ADVX (ADV etwas)) (ADJD schneller)) (SIMPX (VF (NX (PPER es))) (LK (VXFIN (VVFIN gibt))) (MF (NX (MF (NX (ART eine) (NN bar))) (NX (NX (ART ein) (NN restaurant)) (KON und) (NX (ADVX (ADV ebenfalls)) (NX (ART eine) (NN garage)))))))), (KOORD (KON und)), (VF (NX (ART das) (NX (NX (NN hotel)) (NX (NE loccumerhof))))), (LK (VXFIN (VAFIN ist))), (MF (ADVX (ADV gleich)) (PX (APPRART beim) (NX (NN bahnhof)))), (ADVX (ADV anscheinend)), (KOORD (KON und)), (VF (NX (PPER es))), (LK (VXFIN (VVFIN gibt)))], 'auto preterminal span': (91, 121), 'span': (91, 121), 'parent': 'TURN', 'label': 'MF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SU die mus ich mit ihnen jetzt noch absprechen)
		(SU zum einen das maritimhotel in hannover welches am bahnhof liegt und zum zentrum funfzehn minuten laufzeit hat es gibt dort eine cafeteria garage ist naturlich dann nicht nicht unbedingt so wichtig)
		(SU einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(SU dann das hotel luisenhof funf minuten vom bahnhof entfernt also etwas schneller es gibt eine bar ein restaurant und ebenfalls eine garage)
		(KOORD und)
		(VF das hotel loccumerhof)
		(LK ist)
		(MF gleich beim bahnhof)
		(ADVX anscheinend)
		(KOORD und)
		(VF es)
		(LK gibt)
		(MF [01;33m(NX (MF[00m
			(NX
				(MF ein schwimm und dampfbad und eine pianobar)
				(KOORD und)
				(VF das einzelzimmer)
				(LK kostet)
				[01;36m(MF[00m
					[01;36m(MF[00m
						(MF allerdings zweihundert achtundvierzig mark und das doppelzimmer hundert dreiundvierzig mark)
						(VF
							(PX
								(APPRART vom)
								[01;31m(NX[00m
									(NN zeitangebot)[01;31m)[00m))[01;36m)[00m
					(LK ware)
					(MF das hotel loccumerhof anscheinend besonders gunstig)[01;36m)[00m))
		[01;31m(NF[00m
			[01;31m(SIMPX[00m
				(C weil)
				(MF es gleich beim bahnhof) [01;33mMF) NX)[00m
				(VC liegt)[01;31m)[00m[01;31m)[00m))
Step:UNSET add
{'subtrees': ['MF', 'VF'], 'family': ['MF', 'KOORD', 'VF', 'LK', 'MF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'CARD', 'CARD', 'NN', 'KON', 'ART', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN'), 'right siblings': [(LK (VXFIN (VAFIN ware))), (MF (MF (NX (ART das) (NX (NX (NN hotel)) (NX (NE loccumerhof))))) (ADVX (ADV anscheinend)) (ADJX (ADVX (ADV besonders)) (ADJD gunstig)))], 'left siblings': [(MF (NX (NX (ART ein) (TRUNC schwimm) (KON und) (NN dampfbad)) (KON und) (NX (ART eine) (NN pianobar)))), (KOORD (KON und)), (VF (NX (ART das) (NN einzelzimmer))), (LK (VXFIN (VVFIN kostet)))], 'auto preterminal span': (102, 114), 'span': (102, 114), 'parent': 'NX', 'label': 'MF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SU die mus ich mit ihnen jetzt noch absprechen)
		(SU zum einen das maritimhotel in hannover welches am bahnhof liegt und zum zentrum funfzehn minuten laufzeit hat es gibt dort eine cafeteria garage ist naturlich dann nicht nicht unbedingt so wichtig)
		(SU einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(SU dann das hotel luisenhof funf minuten vom bahnhof entfernt also etwas schneller es gibt eine bar ein restaurant und ebenfalls eine garage)
		(KOORD und)
		(VF das hotel loccumerhof)
		(LK ist)
		(MF gleich beim bahnhof)
		(ADVX anscheinend)
		(KOORD und)
		(VF es)
		(LK gibt)
		(MF [01;33m(NX (MF[00m
			(NX
				(MF ein schwimm und dampfbad und eine pianobar)
				(KOORD und)
				(VF das einzelzimmer)
				(LK kostet)
				[01;36m(MF[00m
					(MF
						(MF allerdings zweihundert achtundvierzig mark und das doppelzimmer hundert dreiundvierzig mark)
						(VF
							(PX
								(APPRART vom)
								[01;31m(NX[00m
									(NN zeitangebot)[01;31m)[00m)))
					(LK ware)
					(MF das hotel loccumerhof anscheinend besonders gunstig)[01;36m)[00m))
		[01;31m(NF[00m
			[01;31m(SIMPX[00m
				(C weil)
				(MF es gleich beim bahnhof) [01;33mMF) NX)[00m
				(VC liegt)[01;31m)[00m[01;31m)[00m))
Step:UNSET add
{'subtrees': ['MF', 'LK', 'MF'], 'family': ['MF', 'KOORD', 'VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'CARD', 'CARD', 'NN', 'KON', 'ART', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'VAFIN', 'ART', 'NN', 'NE', 'ADV', 'ADV', 'ADJD'), 'right siblings': [], 'left siblings': [(MF (NX (NX (ART ein) (TRUNC schwimm) (KON und) (NN dampfbad)) (KON und) (NX (ART eine) (NN pianobar)))), (KOORD (KON und)), (VF (NX (ART das) (NN einzelzimmer))), (LK (VXFIN (VVFIN kostet)))], 'auto preterminal span': (102, 121), 'span': (102, 121), 'parent': 'NX', 'label': 'MF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SU die mus ich mit ihnen jetzt noch absprechen)
		(SU zum einen das maritimhotel in hannover welches am bahnhof liegt und zum zentrum funfzehn minuten laufzeit hat es gibt dort eine cafeteria garage ist naturlich dann nicht nicht unbedingt so wichtig)
		(SU einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(SU dann das hotel luisenhof funf minuten vom bahnhof entfernt also etwas schneller es gibt eine bar ein restaurant und ebenfalls eine garage)
		(KOORD und)
		(VF das hotel loccumerhof)
		(LK ist)
		(MF gleich beim bahnhof)
		(ADVX anscheinend)
		(KOORD und)
		(VF es)
		(LK gibt)
		(MF [01;33m(NX (MF[00m
			(NX
				(MF ein schwimm und dampfbad und eine pianobar)
				(KOORD und)
				(VF das einzelzimmer)
				(LK kostet)
				(MF
					(MF
						(MF allerdings zweihundert achtundvierzig mark und das doppelzimmer hundert dreiundvierzig mark)
						(VF
							(PX
								(APPRART vom)
								[01;31m(NX[00m
									(NN zeitangebot)[01;31m)[00m)))
					(LK ware)
					(MF das hotel loccumerhof anscheinend besonders gunstig))))
		[01;31m(NF[00m
			[01;31m(SIMPX[00m
				(C weil)
				(MF es gleich beim bahnhof) [01;33mMF) NX)[00m
				(VC liegt)[01;31m)[00m[01;31m)[00m))
Step:Single Word Phrase
{'subtrees': ['NN'], 'family': ['APPRART', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('APPRART', 'NN'), 'right siblings': [], 'parent': 'PX', 'auto preterminal span': (112, 114), 'span': (113, 114), 'left siblings': ['APPRART'], 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(SU jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SU die mus ich mit ihnen jetzt noch absprechen)
		(SU zum einen das maritimhotel in hannover welches am bahnhof liegt und zum zentrum funfzehn minuten laufzeit hat es gibt dort eine cafeteria garage ist naturlich dann nicht nicht unbedingt so wichtig)
		(SU einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(SU dann das hotel luisenhof funf minuten vom bahnhof entfernt also etwas schneller es gibt eine bar ein restaurant und ebenfalls eine garage)
		(KOORD und)
		(VF das hotel loccumerhof)
		(LK ist)
		(MF gleich beim bahnhof)
		(ADVX anscheinend)
		(KOORD und)
		(VF es)
		(LK gibt)
		[01;33m(NX (MF[00m (MF ein schwimm und dampfbad und eine pianobar und das einzelzimmer kostet allerdings zweihundert achtundvierzig mark und das doppelzimmer hundert dreiundvierzig mark vom zeitangebot ware das hotel loccumerhof anscheinend besonders gunstig)
		[01;31m(NF[00m
			[01;31m(SIMPX[00m
				(C weil)
				(MF es gleich beim bahnhof) [01;33mMF) NX)[00m
				(VC liegt)[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SU', 'SU', 'SU', 'SU', 'SU', 'KOORD', 'VF', 'LK', 'MF', 'ADVX', 'KOORD', 'VF', 'LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'PIAT', 'NN', 'VVPP', 'PDS', 'VMFIN', 'PPER', 'APPR', 'PPER', 'ADV', 'ADV', 'VVINF', 'APPRART', 'PIS', 'ART', 'NE', 'APPR', 'NE', 'PRELS', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPRART', 'NN', 'CARD', 'NN', 'NN', 'VAFIN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NN', 'VAFIN', 'ADV', 'ADV', 'PTKNEG', 'PTKNEG', 'ADV', 'ADV', 'ADJD', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN', 'NN', 'CARD', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'ADJD', 'ADV', 'ADV', 'ADJD', 'PPER', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ART', 'NN', 'KON', 'ART', 'NN', 'NE', 'VAFIN', 'ADV', 'APPRART', 'NN', 'ADV', 'KON', 'PPER', 'VVFIN', 'ART', 'TRUNC', 'KON', 'NN', 'KON', 'ART', 'NN', 'KON', 'ART', 'NN', 'VVFIN', 'ADV', 'CARD', 'CARD', 'NN', 'KON', 'ART', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'VAFIN', 'ART', 'NN', 'NE', 'ADV', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'VVFIN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 127), 'span': (121, 127), 'left siblings': ['SU', 'SU', 'SU', 'SU', 'SU', 'KOORD', 'VF', 'LK', 'MF', 'ADVX', 'KOORD', 'VF', 'LK', 'MF'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SU die mus ich mit ihnen jetzt noch absprechen)
		(SU zum einen das maritimhotel in hannover welches am bahnhof liegt und zum zentrum funfzehn minuten laufzeit hat es gibt dort eine cafeteria garage ist naturlich dann nicht nicht unbedingt so wichtig)
		(SU einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(SU dann das hotel luisenhof funf minuten vom bahnhof entfernt also etwas schneller es gibt eine bar ein restaurant und ebenfalls eine garage)
		(KOORD und)
		(VF das hotel loccumerhof)
		(LK ist)
		(MF gleich beim bahnhof)
		(ADVX anscheinend)
		(KOORD und)
		(VF es)
		(LK gibt)
		[01;33m(NX (MF[00m (MF ein schwimm und dampfbad und eine pianobar und das einzelzimmer kostet allerdings zweihundert achtundvierzig mark und das doppelzimmer hundert dreiundvierzig mark vom zeitangebot ware das hotel loccumerhof anscheinend besonders gunstig)
		[01;31m(SIMPX[00m
			(C weil)
			(MF es gleich beim bahnhof) [01;33mMF) NX)[00m
			(VC liegt)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['C', 'MF', 'VC'], 'family': ['SU', 'SU', 'SU', 'SU', 'SU', 'KOORD', 'VF', 'LK', 'MF', 'ADVX', 'KOORD', 'VF', 'LK', 'MF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'PIAT', 'NN', 'VVPP', 'PDS', 'VMFIN', 'PPER', 'APPR', 'PPER', 'ADV', 'ADV', 'VVINF', 'APPRART', 'PIS', 'ART', 'NE', 'APPR', 'NE', 'PRELS', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPRART', 'NN', 'CARD', 'NN', 'NN', 'VAFIN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NN', 'VAFIN', 'ADV', 'ADV', 'PTKNEG', 'PTKNEG', 'ADV', 'ADV', 'ADJD', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN', 'NN', 'CARD', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'ADJD', 'ADV', 'ADV', 'ADJD', 'PPER', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ART', 'NN', 'KON', 'ART', 'NN', 'NE', 'VAFIN', 'ADV', 'APPRART', 'NN', 'ADV', 'KON', 'PPER', 'VVFIN', 'ART', 'TRUNC', 'KON', 'NN', 'KON', 'ART', 'NN', 'KON', 'ART', 'NN', 'VVFIN', 'ADV', 'CARD', 'CARD', 'NN', 'KON', 'ART', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'VAFIN', 'ART', 'NN', 'NE', 'ADV', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'VVFIN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 127), 'span': (121, 127), 'left siblings': ['SU', 'SU', 'SU', 'SU', 'SU', 'KOORD', 'VF', 'LK', 'MF', 'ADVX', 'KOORD', 'VF', 'LK', 'MF'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SU die mus ich mit ihnen jetzt noch absprechen)
		(SU zum einen das maritimhotel in hannover welches am bahnhof liegt und zum zentrum funfzehn minuten laufzeit hat es gibt dort eine cafeteria garage ist naturlich dann nicht nicht unbedingt so wichtig)
		(SU einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(SU dann das hotel luisenhof funf minuten vom bahnhof entfernt also etwas schneller es gibt eine bar ein restaurant und ebenfalls eine garage)
		(KOORD und)
		(VF das hotel loccumerhof)
		(LK ist)
		(MF gleich beim bahnhof)
		(ADVX anscheinend)
		(KOORD und)
		(VF es)
		(LK gibt)
		[01;36m(MF[00m
			[01;36m(NX[00m
				(MF ein schwimm und dampfbad und eine pianobar und das einzelzimmer kostet allerdings zweihundert achtundvierzig mark und das doppelzimmer hundert dreiundvierzig mark vom zeitangebot ware das hotel loccumerhof anscheinend besonders gunstig)
				(C weil)
				(MF es gleich beim bahnhof)[01;36m)[00m[01;36m)[00m
		(VC liegt)))
Step:UNSET add
{'subtrees': ['MF', 'C', 'MF'], 'family': ['SU', 'SU', 'SU', 'SU', 'SU', 'KOORD', 'VF', 'LK', 'MF', 'ADVX', 'KOORD', 'VF', 'LK', 'NX', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'TRUNC', 'KON', 'NN', 'KON', 'ART', 'NN', 'KON', 'ART', 'NN', 'VVFIN', 'ADV', 'CARD', 'CARD', 'NN', 'KON', 'ART', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'VAFIN', 'ART', 'NN', 'NE', 'ADV', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN'), 'right siblings': [(VC (VXFIN (VVFIN liegt)))], 'left siblings': [(SU (SIMPX (VF (ADVX (ADV jetzt))) (LK (VXFIN (VAFIN habe))) (MF (NX (PPER ich)) (NX (PRF mir)) (ADVX (ADV auch)) (ADVX (ADV schon)) (NX (PIAT einige) (NN hotelangebote))) (VC (VXINF (VVPP herausgesucht))))), (SU (SIMPX (VF (NX (PDS die))) (LK (VXFIN (VMFIN mus))) (MF (NX (PPER ich)) (PX (APPR mit) (NX (PPER ihnen))) (ADVX (ADV jetzt)) (ADVX (ADV noch))) (VC (VXINF (VVINF absprechen))))), (SU (SU (PX (PX (APPRART zum) (NX (PIS einen))) (NX (NX (ART das) (NE maritimhotel)) (PX (APPR in) (NX (NE hannover))))) (NF (R (C (NX (PRELS welches))) (FKOORD (MVC (MF (PX (APPRART am) (NX (NN bahnhof)))) (VC (VXFIN (VVFIN liegt)))) (KON und) (MVC (MF (PX (APPRART zum) (NX (NN zentrum))) (NX (NX (ADJX (CARD funfzehn)) (NN minuten)) (NN laufzeit))) (VC (VXFIN (VAFIN hat)))))))) (SU (SIMPX (VF (NX (PPER es))) (LK (VXFIN (VVFIN gibt))) (MF (ADVX (ADV dort)) (NX (ART eine) (NN cafeteria)))) (SIMPX (VF (NX (NN garage))) (LK (VXFIN (VAFIN ist))) (MF (MF (ADVX (ADV naturlich))) (ADVX (ADV dann)) (ADVX (PTKNEG nicht)) (ADVX (PTKNEG nicht)) (ADVX (ADV unbedingt)) (ADJX (ADVX (ADV so)) (ADJD wichtig)))))), (SU (SIMPX (VF (NX (NN einzelzimmer))) (LK (VXFIN (VVFIN kostet))) (NX (MF (NX (NX (ADJX (CARD hundert) (CARD einundfunfzig)) (NN mark)) (NX (NN doppelzimmer))) (NX (ADJX (CARD hundert) (CARD funf)) (NN mark)))))), (SU (NX (ADVX (ADV dann)) (NX (ART das) (NX (NX (NN hotel)) (NX (NE luisenhof))))) (ADJX (NX (NX (ADJX (CARD funf)) (NN minuten)) (PX (APPRART vom) (NX (NN bahnhof)))) (ADJD entfernt)) (DM (ADVX (ADV also))) (ADJX (ADVX (ADV etwas)) (ADJD schneller)) (SIMPX (VF (NX (PPER es))) (LK (VXFIN (VVFIN gibt))) (MF (NX (MF (NX (ART eine) (NN bar))) (NX (NX (ART ein) (NN restaurant)) (KON und) (NX (ADVX (ADV ebenfalls)) (NX (ART eine) (NN garage)))))))), (KOORD (KON und)), (VF (NX (ART das) (NX (NX (NN hotel)) (NX (NE loccumerhof))))), (LK (VXFIN (VAFIN ist))), (MF (ADVX (ADV gleich)) (PX (APPRART beim) (NX (NN bahnhof)))), (ADVX (ADV anscheinend)), (KOORD (KON und)), (VF (NX (PPER es))), (LK (VXFIN (VVFIN gibt)))], 'auto preterminal span': (91, 126), 'span': (91, 126), 'parent': 'TURN', 'label': 'NX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SU die mus ich mit ihnen jetzt noch absprechen)
		(SU zum einen das maritimhotel in hannover welches am bahnhof liegt und zum zentrum funfzehn minuten laufzeit hat es gibt dort eine cafeteria garage ist naturlich dann nicht nicht unbedingt so wichtig)
		(SU einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(SU dann das hotel luisenhof funf minuten vom bahnhof entfernt also etwas schneller es gibt eine bar ein restaurant und ebenfalls eine garage)
		(KOORD und)
		(VF das hotel loccumerhof)
		(LK ist)
		(MF gleich beim bahnhof)
		(ADVX anscheinend)
		(KOORD und)
		(VF es)
		(LK gibt)
		[01;36m(MF[00m
			(NX
				(MF ein schwimm und dampfbad und eine pianobar und das einzelzimmer kostet allerdings zweihundert achtundvierzig mark und das doppelzimmer hundert dreiundvierzig mark vom zeitangebot ware das hotel loccumerhof anscheinend besonders gunstig)
				(C weil)
				(MF es gleich beim bahnhof))[01;36m)[00m
		(VC liegt)))
Step:Unary
{'subtrees': ['NX'], 'family': ['SU', 'SU', 'SU', 'SU', 'SU', 'KOORD', 'VF', 'LK', 'MF', 'ADVX', 'KOORD', 'VF', 'LK', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'TRUNC', 'KON', 'NN', 'KON', 'ART', 'NN', 'KON', 'ART', 'NN', 'VVFIN', 'ADV', 'CARD', 'CARD', 'NN', 'KON', 'ART', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'VAFIN', 'ART', 'NN', 'NE', 'ADV', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN'), 'right siblings': [(VC (VXFIN (VVFIN liegt)))], 'left siblings': [(SU (SIMPX (VF (ADVX (ADV jetzt))) (LK (VXFIN (VAFIN habe))) (MF (NX (PPER ich)) (NX (PRF mir)) (ADVX (ADV auch)) (ADVX (ADV schon)) (NX (PIAT einige) (NN hotelangebote))) (VC (VXINF (VVPP herausgesucht))))), (SU (SIMPX (VF (NX (PDS die))) (LK (VXFIN (VMFIN mus))) (MF (NX (PPER ich)) (PX (APPR mit) (NX (PPER ihnen))) (ADVX (ADV jetzt)) (ADVX (ADV noch))) (VC (VXINF (VVINF absprechen))))), (SU (SU (PX (PX (APPRART zum) (NX (PIS einen))) (NX (NX (ART das) (NE maritimhotel)) (PX (APPR in) (NX (NE hannover))))) (NF (R (C (NX (PRELS welches))) (FKOORD (MVC (MF (PX (APPRART am) (NX (NN bahnhof)))) (VC (VXFIN (VVFIN liegt)))) (KON und) (MVC (MF (PX (APPRART zum) (NX (NN zentrum))) (NX (NX (ADJX (CARD funfzehn)) (NN minuten)) (NN laufzeit))) (VC (VXFIN (VAFIN hat)))))))) (SU (SIMPX (VF (NX (PPER es))) (LK (VXFIN (VVFIN gibt))) (MF (ADVX (ADV dort)) (NX (ART eine) (NN cafeteria)))) (SIMPX (VF (NX (NN garage))) (LK (VXFIN (VAFIN ist))) (MF (MF (ADVX (ADV naturlich))) (ADVX (ADV dann)) (ADVX (PTKNEG nicht)) (ADVX (PTKNEG nicht)) (ADVX (ADV unbedingt)) (ADJX (ADVX (ADV so)) (ADJD wichtig)))))), (SU (SIMPX (VF (NX (NN einzelzimmer))) (LK (VXFIN (VVFIN kostet))) (NX (MF (NX (NX (ADJX (CARD hundert) (CARD einundfunfzig)) (NN mark)) (NX (NN doppelzimmer))) (NX (ADJX (CARD hundert) (CARD funf)) (NN mark)))))), (SU (NX (ADVX (ADV dann)) (NX (ART das) (NX (NX (NN hotel)) (NX (NE luisenhof))))) (ADJX (NX (NX (ADJX (CARD funf)) (NN minuten)) (PX (APPRART vom) (NX (NN bahnhof)))) (ADJD entfernt)) (DM (ADVX (ADV also))) (ADJX (ADVX (ADV etwas)) (ADJD schneller)) (SIMPX (VF (NX (PPER es))) (LK (VXFIN (VVFIN gibt))) (MF (NX (MF (NX (ART eine) (NN bar))) (NX (NX (ART ein) (NN restaurant)) (KON und) (NX (ADVX (ADV ebenfalls)) (NX (ART eine) (NN garage)))))))), (KOORD (KON und)), (VF (NX (ART das) (NX (NX (NN hotel)) (NX (NE loccumerhof))))), (LK (VXFIN (VAFIN ist))), (MF (ADVX (ADV gleich)) (PX (APPRART beim) (NX (NN bahnhof)))), (ADVX (ADV anscheinend)), (KOORD (KON und)), (VF (NX (PPER es))), (LK (VXFIN (VVFIN gibt)))], 'auto preterminal span': (91, 126), 'span': (91, 126), 'parent': 'TURN', 'label': 'MF', 'classified_type': 'Unary', 'type': 'add'}
(TOP jetzt habe ich mir auch schon einige hotelangebote herausgesucht die mus ich mit ihnen jetzt noch absprechen zum einen das maritimhotel in hannover welches am bahnhof liegt und zum zentrum funfzehn minuten laufzeit hat es gibt dort eine cafeteria garage ist naturlich dann nicht nicht unbedingt so wichtig einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark dann das hotel luisenhof funf minuten vom bahnhof entfernt also etwas schneller es gibt eine bar ein restaurant und ebenfalls eine garage und das hotel loccumerhof ist gleich beim bahnhof anscheinend und es gibt ein schwimm und dampfbad und eine pianobar und das einzelzimmer kostet allerdings zweihundert achtundvierzig mark und das doppelzimmer hundert dreiundvierzig mark vom zeitangebot ware das hotel loccumerhof anscheinend besonders gunstig weil es gleich beim bahnhof liegt)

Sentence 556:
1 Initial errors
0 on fringe, 1 iterations
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU in ordnung herr nishimoto)
		(SU
			(SIMPX
				(LK verbleiben)
				(MF
					(NX wir)
					(ADVX dann)
					[01;31m(PX[00m
						(APPR bei)
						(NX unserm termin im januar)[01;31m)[00m)))))
Step:UNSET remove
{'subtrees': ['APPR', 'NX'], 'family': ['NX', 'ADVX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV', 'APPR', 'PPOSAT', 'NN', 'APPRART', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (5, 12), 'span': (7, 12), 'left siblings': ['NX', 'ADVX'], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP in ordnung herr nishimoto verbleiben wir dann bei unserm termin im januar)

Sentence 557:
0 Initial errors
0 on fringe, 0 iterations

Sentence 558:
4 Initial errors
0 on fringe, 2 iterations
3 Error:PP Attachment
1 Error:UNSET add
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU guten tag frau heinicke)
		(SU
			(SIMPX
				(VF wie wir bereits ausgemacht haben)
				[01;36m(SIMPX[00m
					(LK wollten)
					(MF
						(NX wir)
						[01;36m(PX[00m
							[01;31m(PX[00m
								(APPR auf)
								[01;33m(NX[00m (NX eine eineinhalbtagige geschaftsreise)[01;31m)[00m
							(PX nach hamburg)[01;36m)[00m) [01;33mNX)[00m
					(VC fahren)[01;36m)[00m))))
Step:PP Attachment
{'new_parent': 'PX', 'new_family': ['APPR', 'NX', 'PX'], 'mover info': [('PX', (15, 17))], 'old_family': ['NX', 'PX', 'PX'], 'start left siblings': ['NX', 'PX'], 'auto preterminals': ('PPER', 'APPR', 'ART', 'ADJA', 'NN', 'APPR', 'NE'), 'start right siblings': [], 'end left siblings': ['APPR', 'NX'], 'auto preterminal span': (10, 17), 'adding node already present': False, 'movers': ['PX'], 'old_parent': 'MF', 'added and moved': True, 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(SU guten tag frau heinicke)
		(SU
			(SIMPX
				(VF wie wir bereits ausgemacht haben)
				[01;36m(SIMPX[00m
					(LK wollten)
					(MF wir auf eine eineinhalbtagige geschaftsreise nach hamburg)
					(VC fahren)[01;36m)[00m))))
Step:UNSET add
{'subtrees': ['LK', 'MF', 'VC'], 'family': ['VF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VMFIN', 'PPER', 'APPR', 'ART', 'ADJA', 'NN', 'APPR', 'NE', 'VVINF'), 'right siblings': [], 'left siblings': [(VF (SIMPX (C (KOUS wie)) (MF (NX (PPER wir)) (ADVX (ADV bereits))) (VC (VXINF (VVPP ausgemacht)) (VXFIN (VAFIN haben)))))], 'auto preterminal span': (9, 18), 'span': (9, 18), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP guten tag frau heinicke wie wir bereits ausgemacht haben wollten wir auf eine eineinhalbtagige geschaftsreise nach hamburg fahren)

Sentence 559:
4 Initial errors
0 on fringe, 3 iterations
2 Error:Co-ordination
1 Error:Single Word Phrase
1 Error:Clause Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM ja)
			[01;31m(P[00m
				(SIMPX da wurde mir der letzte termin am besten passen)
				(KOUS weil)
				(SIMPX
					(SIMPX am vierzehnten und funfzehnten ist eine messe)
					[01;36m(SIMPX[00m
						[01;36m(KOORD[00m
							(KON und)[01;36m)[00m
						[01;31m(SIMPX[00m
							(VF in der letzten januarwoche)
							(LK ist)
							(MF bei mir bis auf montag eigentlich alles frei)[01;31m)[00m[01;36m)[00m)[01;31m)[00m)
		(SU also da wurde ich doch sagen das wir am mittwoch und donnerstag nach hannover fahren)))
Step:Co-ordination
{'new_parent': 'SIMPX', 'new_family': ['KON', 'VF', 'LK', 'MF'], 'mover info': [('KON', (18, 19))], 'old_family': ['SIMPX', 'KON', 'SIMPX'], 'start left siblings': ['SIMPX'], 'auto preterminals': ('APPRART', 'NN', 'KON', 'NN', 'VAFIN', 'ART', 'NN', 'KON', 'APPR', 'ART', 'ADJA', 'NN', 'VAFIN', 'APPR', 'PPER', 'APPR', 'APPR', 'NN', 'ADV', 'PIS', 'ADJD'), 'start right siblings': ['SIMPX'], 'end left siblings': [], 'auto preterminal span': (11, 32), 'movers': ['KON'], 'old_parent': 'SIMPX', 'POS confusion': ('KON', 'KON'), 'end right siblings': ['VF', 'LK', 'MF'], 'classified_type': 'Co-ordination', 'type': 'move'}
(TOP
	(TURN
		(SU
			(DM ja)
			[01;31m(P[00m
				(SIMPX da wurde mir der letzte termin am besten passen)
				(KOUS weil)
				(SIMPX
					(SIMPX am vierzehnten und funfzehnten ist eine messe)
					(SIMPX
						[01;36m(KOORD[00m
							(KON und)[01;36m)[00m
						(VF in der letzten januarwoche)
						(LK ist)
						(MF bei mir bis auf montag eigentlich alles frei)))[01;31m)[00m)
		(SU also da wurde ich doch sagen das wir am mittwoch und donnerstag nach hannover fahren)))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['KOORD', 'VF', 'LK', 'MF'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON',), 'right siblings': [(VF (PX (APPR in) (NX (ART der) (ADJX (ADJA letzten)) (NN januarwoche)))), (LK (VXFIN (VAFIN ist))), (MF (PX (APPR bei) (NX (PPER mir))) (PX (APPR bis) (PX (APPR auf) (NX (NN montag)))) (ADVX (ADV eigentlich)) (NX (PIS alles)) (ADJX (ADJD frei)))], 'left siblings': [], 'auto preterminal span': (18, 19), 'span': (18, 19), 'parent': 'SIMPX', 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM ja)
			[01;31m(P[00m
				(SIMPX da wurde mir der letzte termin am besten passen)
				(KOUS weil)
				(SIMPX am vierzehnten und funfzehnten ist eine messe und in der letzten januarwoche ist bei mir bis auf montag eigentlich alles frei)[01;31m)[00m)
		(SU also da wurde ich doch sagen das wir am mittwoch und donnerstag nach hannover fahren)))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'KOUS', 'SIMPX'], 'family': ['DM', 'P'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADV', 'VAFIN', 'PPER', 'ART', 'ADJA', 'NN', 'PTKA', 'ADJD', 'VVINF', 'KOUS', 'APPRART', 'NN', 'KON', 'NN', 'VAFIN', 'ART', 'NN', 'KON', 'APPR', 'ART', 'ADJA', 'NN', 'VAFIN', 'APPR', 'PPER', 'APPR', 'APPR', 'NN', 'ADV', 'PIS', 'ADJD'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (0, 32), 'span': (1, 32), 'left siblings': ['DM'], 'label': 'P', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP ja da wurde mir der letzte termin am besten passen weil am vierzehnten und funfzehnten ist eine messe und in der letzten januarwoche ist bei mir bis auf montag eigentlich alles frei also da wurde ich doch sagen das wir am mittwoch und donnerstag nach hannover fahren)

Sentence 560:
23 Initial errors
0 on fringe, 17 iterations
3 Error:NP Internal Structure
3 Error:VP Attachment
2 Error:PP Attachment
1 Error:Co-ordination
1 Error:Single Word Phrase
1 Error:PP Attachment
1 Error:Unary
1 Error:UNSET add
1 Error:NP Internal Structure
1 Error:Clause Attachment
1 Error:UNSET remove
1 Error:PP Attachment
1 Error:UNSET remove
1 Error:UNSET add
1 Error:Unary
2 Error:PP Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;36m(SU[00m
			(SU
				(DM ja)
				(SIMPX
					(VF ich)
					(LK habe)
					(MF
						(NX mir)
						(ADVX da)
						(NX [01;33m(NX[00m
							(PIAT einige)
							[01;31m(NX[00m
								[01;31m(NX[00m
									(NN zugverbindungen)[01;31m)[00m [01;33mNX)[00m
								(KON und)
								(NX fluge)[01;31m)[00m))
					(VC geben lassen))
				[01;31m(SIMPX[00m
					(SIMPX
						(KOORD und)
						(VF der zug)
						(LK fahrt)
						(MF [01;33m(ADJX[00m
							(ADJX
								(ADJX stundlich)
								[01;31m(PX[00m
									(PX ab vier uhr sechsundfunfzig) [01;33mADJX)[00m
									(PX am morgen)[01;31m)[00m)))
					[01;36m(KOORD[00m
						(KON und)[01;36m)[00m
					[01;31m(SIMPX[00m
						(VF er)
						(LK braucht)
						[01;31m(MF[00m
							(NX viereinhalb stunden)
							[01;36m(PX[00m
								(PX bis hannover)
								(PX von munchen aus)[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m)
			(SU [01;33m(SIMPX[00m
				(SIMPX
					(KOORD und)
					(VF das flugzeug)
					[01;31m(FKOORD[00m
						(LKMVC
							(LK wurde)
							[01;31m(MF[00m
								[01;31m(ADJX[00m
									(ADJX stundlich)
									[01;33m(SIMPX (NF[00m (PX ab sieben uhr bis achtzehn uhr)[01;31m)[00m[01;31m)[00m
							[01;36m(VXINF[00m
								[01;36m(VC[00m
									[01;36m(VC[00m
										(VXINF
											(VVINF fahren))[01;36m)[00m
									[01;31m(VC[00m
										(VXINF
											(VVINF fliegen))[01;31m)[00m[01;36m)[00m[01;36m)[00m) [01;33mNF) SIMPX) SIMPX)[00m
						[01;36m(NX[00m
							(KON und)
							(LKM braucht siebzig minuten)[01;36m)[00m[01;31m)[00m))[01;36m)[00m
		(SU
			(SIMPX
				(VF ich)
				(LK weis)
				(MF nicht)
				(NF
					(SIMPX
						(C wie)
						(MF
							[01;36m(NX[00m
								(NX sie)
								(NX es)[01;36m)[00m
							(NX sich)
							(NX das))
						(VC vorgestellt haben))))
			(SIMPX aber ich wurde doch eher fur einen flug pladieren))))
Step:NP Internal Structure
{'new_parent': 'NX', 'new_family': ['PIAT', 'NN'], 'mover info': [('PIAT', (5, 6))], 'old_family': ['PIAT', 'NX'], 'start left siblings': [], 'auto preterminals': ('PIAT', 'NN', 'KON', 'NN'), 'start right siblings': ['NX'], 'end left siblings': [], 'auto preterminal span': (5, 9), 'movers': ['PIAT'], 'old_parent': 'NX', 'POS confusion': ('PIAT', 'PIAT'), 'end right siblings': ['NN'], 'classified_type': 'NP Internal Structure', 'type': 'move'}
(TOP
	(TURN
		[01;36m(SU[00m
			(SU
				(DM ja)
				(SIMPX ich habe mir da einige zugverbindungen und fluge geben lassen)
				[01;31m(SIMPX[00m
					(SIMPX
						(KOORD und)
						(VF der zug)
						(LK fahrt)
						(MF [01;33m(ADJX[00m
							(ADJX
								(ADJX stundlich)
								[01;31m(PX[00m
									(PX ab vier uhr sechsundfunfzig) [01;33mADJX)[00m
									(PX am morgen)[01;31m)[00m)))
					[01;36m(KOORD[00m
						(KON und)[01;36m)[00m
					[01;31m(SIMPX[00m
						(VF er)
						(LK braucht)
						[01;31m(MF[00m
							(NX viereinhalb stunden)
							[01;36m(PX[00m
								(PX bis hannover)
								(PX von munchen aus)[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m)
			(SU [01;33m(SIMPX[00m
				(SIMPX
					(KOORD und)
					(VF das flugzeug)
					[01;31m(FKOORD[00m
						(LKMVC
							(LK wurde)
							[01;31m(MF[00m
								[01;31m(ADJX[00m
									(ADJX stundlich)
									[01;33m(SIMPX (NF[00m (PX ab sieben uhr bis achtzehn uhr)[01;31m)[00m[01;31m)[00m
							[01;36m(VXINF[00m
								[01;36m(VC[00m
									[01;36m(VC[00m
										(VXINF
											(VVINF fahren))[01;36m)[00m
									[01;31m(VC[00m
										(VXINF
											(VVINF fliegen))[01;31m)[00m[01;36m)[00m[01;36m)[00m) [01;33mNF) SIMPX) SIMPX)[00m
						[01;36m(NX[00m
							(KON und)
							(LKM braucht siebzig minuten)[01;36m)[00m[01;31m)[00m))[01;36m)[00m
		(SU
			(SIMPX
				(VF ich)
				(LK weis)
				(MF nicht)
				(NF
					(SIMPX
						(C wie)
						(MF
							[01;36m(NX[00m
								(NX sie)
								(NX es)[01;36m)[00m
							(NX sich)
							(NX das))
						(VC vorgestellt haben))))
			(SIMPX aber ich wurde doch eher fur einen flug pladieren))))
Step:VP Attachment
{'new_parent': 'VC', 'new_family': ['VXINF', 'VXINF'], 'mover info': [('VXINF', (43, 44))], 'old_family': ['LK', 'MF', 'VXINF', 'VC'], 'start left siblings': ['LK', 'MF'], 'auto preterminals': ('VAFIN', 'ADJD', 'APPR', 'CARD', 'NN', 'APPR', 'CARD', 'NN', 'VVINF', 'VVINF'), 'start right siblings': ['VC'], 'end left siblings': [], 'auto preterminal span': (35, 45), 'adding node already present': False, 'movers': ['VXINF'], 'old_parent': 'LKMVC', 'POS confusion': ('VVINF', 'VVINF'), 'added and moved': True, 'end right siblings': ['VXINF'], 'classified_type': 'VP Attachment', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		[01;36m(SU[00m
			(SU
				(DM ja)
				(SIMPX ich habe mir da einige zugverbindungen und fluge geben lassen)
				[01;31m(SIMPX[00m
					(SIMPX
						(KOORD und)
						(VF der zug)
						(LK fahrt)
						(MF [01;33m(ADJX[00m
							(ADJX
								(ADJX stundlich)
								[01;31m(PX[00m
									(PX ab vier uhr sechsundfunfzig) [01;33mADJX)[00m
									(PX am morgen)[01;31m)[00m)))
					[01;36m(KOORD[00m
						(KON und)[01;36m)[00m
					[01;31m(SIMPX[00m
						(VF er)
						(LK braucht)
						[01;31m(MF[00m
							(NX viereinhalb stunden)
							[01;36m(PX[00m
								(PX bis hannover)
								(PX von munchen aus)[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m)
			(SU [01;33m(SIMPX[00m
				(SIMPX
					(KOORD und)
					(VF das flugzeug)
					[01;31m(FKOORD[00m
						(LKMVC
							(LK wurde)
							[01;31m(MF[00m
								[01;31m(ADJX[00m
									(ADJX stundlich)
									[01;33m(SIMPX (NF[00m (PX ab sieben uhr bis achtzehn uhr)[01;31m)[00m[01;31m)[00m
							(VXINF
								(VC
									[01;36m(VC[00m
										(VXINF
											(VVINF fahren))[01;36m)[00m
									(VXINF fliegen)))) [01;33mNF) SIMPX) SIMPX)[00m
						[01;36m(NX[00m
							(KON und)
							(LKM braucht siebzig minuten)[01;36m)[00m[01;31m)[00m))[01;36m)[00m
		(SU
			(SIMPX
				(VF ich)
				(LK weis)
				(MF nicht)
				(NF
					(SIMPX
						(C wie)
						(MF
							[01;36m(NX[00m
								(NX sie)
								(NX es)[01;36m)[00m
							(NX sich)
							(NX das))
						(VC vorgestellt haben))))
			(SIMPX aber ich wurde doch eher fur einen flug pladieren))))
Step:PP Attachment
{'new_parent': 'ADJX', 'new_family': ['ADJX', 'PX', 'PX'], 'mover info': [('PX', (16, 20))], 'old_family': ['PX', 'PX'], 'start left siblings': [], 'auto preterminals': ('ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'APPRART', 'NN'), 'start right siblings': ['PX'], 'end left siblings': ['ADJX'], 'auto preterminal span': (15, 22), 'adding node already present': False, 'movers': ['PX'], 'old_parent': 'PX', 'added and moved': True, 'end right siblings': ['PX'], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		[01;36m(SU[00m
			(SU
				(DM ja)
				(SIMPX ich habe mir da einige zugverbindungen und fluge geben lassen)
				[01;31m(SIMPX[00m
					(SIMPX und der zug fahrt stundlich ab vier uhr sechsundfunfzig am morgen)
					[01;36m(KOORD[00m
						(KON und)[01;36m)[00m
					[01;31m(SIMPX[00m
						(VF er)
						(LK braucht)
						[01;31m(MF[00m
							(NX viereinhalb stunden)
							[01;36m(PX[00m
								(PX bis hannover)
								(PX von munchen aus)[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m)
			(SU [01;33m(SIMPX[00m
				(SIMPX
					(KOORD und)
					(VF das flugzeug)
					[01;31m(FKOORD[00m
						(LKMVC
							(LK wurde)
							[01;31m(MF[00m
								[01;31m(ADJX[00m
									(ADJX stundlich)
									[01;33m(SIMPX (NF[00m (PX ab sieben uhr bis achtzehn uhr)[01;31m)[00m[01;31m)[00m
							(VXINF
								(VC
									[01;36m(VC[00m
										(VXINF
											(VVINF fahren))[01;36m)[00m
									(VXINF fliegen)))) [01;33mNF) SIMPX) SIMPX)[00m
						[01;36m(NX[00m
							(KON und)
							(LKM braucht siebzig minuten)[01;36m)[00m[01;31m)[00m))[01;36m)[00m
		(SU
			(SIMPX
				(VF ich)
				(LK weis)
				(MF nicht)
				(NF
					(SIMPX
						(C wie)
						(MF
							[01;36m(NX[00m
								(NX sie)
								(NX es)[01;36m)[00m
							(NX sich)
							(NX das))
						(VC vorgestellt haben))))
			(SIMPX aber ich wurde doch eher fur einen flug pladieren))))
Step:Co-ordination
{'subtrees': ['SU', 'SU'], 'family': ['SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VAFIN', 'PRF', 'ADV', 'PIAT', 'NN', 'KON', 'NN', 'VVINF', 'VVINF', 'KON', 'ART', 'NN', 'VVFIN', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'APPRART', 'NN', 'KON', 'PPER', 'VVFIN', 'CARD', 'NN', 'APPR', 'NE', 'APPR', 'NE', 'APZR', 'KON', 'ART', 'NN', 'VAFIN', 'ADJD', 'APPR', 'CARD', 'NN', 'APPR', 'CARD', 'NN', 'VVINF', 'VVINF', 'KON', 'VVFIN', 'CARD', 'NN'), 'right siblings': [(SU (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN weis))) (MF (ADVX (PTKNEG nicht))) (NF (SIMPX (C (KOUS wie)) (MF (NX (PPER sie)) (NX (PPER es)) (NX (PRF sich)) (NX (PDS das))) (VC (VXINF (VVPP vorgestellt)) (VXFIN (VAFIN haben)))))) (SIMPX (KOORD (KON aber)) (VF (NX (PPER ich))) (LK (VXFIN (VAFIN wurde))) (MF (ADVX (ADV doch)) (ADVX (ADV eher)) (PX (APPR fur) (NX (ART einen) (NN flug)))) (VC (VXINF (VVINF pladieren)))))], 'left siblings': [], 'auto preterminal span': (0, 49), 'span': (0, 49), 'parent': 'TURN', 'label': 'SU', 'classified_type': 'Co-ordination', 'type': 'add'}
(TOP
	(TURN
		(SU
			(SU
				(DM ja)
				(SIMPX ich habe mir da einige zugverbindungen und fluge geben lassen)
				[01;31m(SIMPX[00m
					(SIMPX und der zug fahrt stundlich ab vier uhr sechsundfunfzig am morgen)
					[01;36m(KOORD[00m
						(KON und)[01;36m)[00m
					[01;31m(SIMPX[00m
						(VF er)
						(LK braucht)
						[01;31m(MF[00m
							(NX viereinhalb stunden)
							[01;36m(PX[00m
								(PX bis hannover)
								(PX von munchen aus)[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m)
			(SU [01;33m(SIMPX[00m
				(SIMPX
					(KOORD und)
					(VF das flugzeug)
					[01;31m(FKOORD[00m
						(LKMVC
							(LK wurde)
							[01;31m(MF[00m
								[01;31m(ADJX[00m
									(ADJX stundlich)
									[01;33m(SIMPX (NF[00m (PX ab sieben uhr bis achtzehn uhr)[01;31m)[00m[01;31m)[00m
							(VXINF
								(VC
									[01;36m(VC[00m
										(VXINF
											(VVINF fahren))[01;36m)[00m
									(VXINF fliegen)))) [01;33mNF) SIMPX) SIMPX)[00m
						[01;36m(NX[00m
							(KON und)
							(LKM braucht siebzig minuten)[01;36m)[00m[01;31m)[00m)))
		(SU
			(SIMPX
				(VF ich)
				(LK weis)
				(MF nicht)
				(NF
					(SIMPX
						(C wie)
						(MF
							[01;36m(NX[00m
								(NX sie)
								(NX es)[01;36m)[00m
							(NX sich)
							(NX das))
						(VC vorgestellt haben))))
			(SIMPX aber ich wurde doch eher fur einen flug pladieren))))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['SIMPX', 'KOORD', 'SIMPX'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON',), 'right siblings': [(SIMPX (VF (NX (PPER er))) (LK (VXFIN (VVFIN braucht))) (MF (NX (ADJX (CARD viereinhalb)) (NN stunden)) (PX (APPR bis) (NX (NE hannover))) (PX (APPR von) (NX (NE munchen)) (APZR aus))))], 'left siblings': [(SIMPX (KOORD (KON und)) (VF (NX (ART der) (NN zug))) (LK (VXFIN (VVFIN fahrt))) (MF (ADJX (ADJX (ADJX (ADJD stundlich)) (PX (APPR ab) (NX (NX (ADJX (CARD vier)) (NN uhr)) (ADJX (CARD sechsundfunfzig))))) (PX (APPRART am) (NX (NN morgen))))))], 'auto preterminal span': (22, 23), 'span': (22, 23), 'parent': 'SIMPX', 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SU
			(SU
				(DM ja)
				(SIMPX ich habe mir da einige zugverbindungen und fluge geben lassen)
				[01;31m(SIMPX[00m
					(SIMPX und der zug fahrt stundlich ab vier uhr sechsundfunfzig am morgen)
					(KOORD und)
					[01;31m(SIMPX[00m
						(VF er)
						(LK braucht)
						[01;31m(MF[00m
							(NX viereinhalb stunden)
							[01;36m(PX[00m
								(PX bis hannover)
								(PX von munchen aus)[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m)
			(SU [01;33m(SIMPX[00m
				(SIMPX
					(KOORD und)
					(VF das flugzeug)
					[01;31m(FKOORD[00m
						(LKMVC
							(LK wurde)
							[01;31m(MF[00m
								[01;31m(ADJX[00m
									(ADJX stundlich)
									[01;33m(SIMPX (NF[00m (PX ab sieben uhr bis achtzehn uhr)[01;31m)[00m[01;31m)[00m
							(VXINF
								(VC
									[01;36m(VC[00m
										(VXINF
											(VVINF fahren))[01;36m)[00m
									(VXINF fliegen)))) [01;33mNF) SIMPX) SIMPX)[00m
						[01;36m(NX[00m
							(KON und)
							(LKM braucht siebzig minuten)[01;36m)[00m[01;31m)[00m)))
		(SU
			(SIMPX
				(VF ich)
				(LK weis)
				(MF nicht)
				(NF
					(SIMPX
						(C wie)
						(MF
							[01;36m(NX[00m
								(NX sie)
								(NX es)[01;36m)[00m
							(NX sich)
							(NX das))
						(VC vorgestellt haben))))
			(SIMPX aber ich wurde doch eher fur einen flug pladieren))))
Step:PP Attachment
{'subtrees': ['PX', 'PX'], 'family': ['NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'NE', 'APPR', 'NE', 'APZR'), 'right siblings': [], 'left siblings': [(NX (ADJX (CARD viereinhalb)) (NN stunden))], 'auto preterminal span': (27, 32), 'span': (27, 32), 'parent': 'MF', 'label': 'PX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU
			(SU
				(DM ja)
				(SIMPX ich habe mir da einige zugverbindungen und fluge geben lassen)
				[01;31m(SIMPX[00m
					(SIMPX und der zug fahrt stundlich ab vier uhr sechsundfunfzig am morgen)
					(KOORD und)
					[01;31m(SIMPX[00m
						(VF er)
						(LK braucht)
						[01;31m(MF[00m
							(NX viereinhalb stunden)
							(PX bis hannover von munchen aus)[01;31m)[00m[01;31m)[00m[01;31m)[00m)
			(SU [01;33m(SIMPX[00m
				(SIMPX
					(KOORD und)
					(VF das flugzeug)
					[01;31m(FKOORD[00m
						(LKMVC
							(LK wurde)
							[01;31m(MF[00m
								[01;31m(ADJX[00m
									(ADJX stundlich)
									[01;33m(SIMPX (NF[00m (PX ab sieben uhr bis achtzehn uhr)[01;31m)[00m[01;31m)[00m
							(VXINF
								(VC
									[01;36m(VC[00m
										(VXINF
											(VVINF fahren))[01;36m)[00m
									(VXINF fliegen)))) [01;33mNF) SIMPX) SIMPX)[00m
						[01;36m(NX[00m
							(KON und)
							(LKM braucht siebzig minuten)[01;36m)[00m[01;31m)[00m)))
		(SU
			(SIMPX
				(VF ich)
				(LK weis)
				(MF nicht)
				(NF
					(SIMPX
						(C wie)
						(MF
							[01;36m(NX[00m
								(NX sie)
								(NX es)[01;36m)[00m
							(NX sich)
							(NX das))
						(VC vorgestellt haben))))
			(SIMPX aber ich wurde doch eher fur einen flug pladieren))))
Step:Unary
{'subtrees': ['VXINF'], 'family': ['VC', 'VXINF'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVINF',), 'right siblings': [(VXINF (VVINF fliegen))], 'left siblings': [], 'auto preterminal span': (43, 44), 'span': (43, 44), 'parent': 'VC', 'label': 'VC', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU
			(SU
				(DM ja)
				(SIMPX ich habe mir da einige zugverbindungen und fluge geben lassen)
				[01;31m(SIMPX[00m
					(SIMPX und der zug fahrt stundlich ab vier uhr sechsundfunfzig am morgen)
					(KOORD und)
					[01;31m(SIMPX[00m
						(VF er)
						(LK braucht)
						[01;31m(MF[00m
							(NX viereinhalb stunden)
							(PX bis hannover von munchen aus)[01;31m)[00m[01;31m)[00m[01;31m)[00m)
			(SU [01;33m(SIMPX[00m
				(SIMPX
					(KOORD und)
					(VF das flugzeug)
					[01;31m(FKOORD[00m
						(LKMVC
							(LK wurde)
							[01;31m(MF[00m
								[01;31m(ADJX[00m
									(ADJX stundlich)
									[01;33m(SIMPX (NF[00m (PX ab sieben uhr bis achtzehn uhr)[01;31m)[00m[01;31m)[00m
							(VXINF fahren fliegen)) [01;33mNF) SIMPX) SIMPX)[00m
						[01;36m(NX[00m
							(KON und)
							(LKM braucht siebzig minuten)[01;36m)[00m[01;31m)[00m)))
		(SU
			(SIMPX
				(VF ich)
				(LK weis)
				(MF nicht)
				(NF
					(SIMPX
						(C wie)
						(MF
							[01;36m(NX[00m
								(NX sie)
								(NX es)[01;36m)[00m
							(NX sich)
							(NX das))
						(VC vorgestellt haben))))
			(SIMPX aber ich wurde doch eher fur einen flug pladieren))))
Step:UNSET add
{'subtrees': ['KON', 'LKM'], 'family': ['LKMVC', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'VVFIN', 'CARD', 'NN'), 'right siblings': [], 'left siblings': [(LKMVC (LK (VXFIN (VAFIN wurde))) (MF (ADJX (ADJX (ADJD stundlich)) (PX (PX (APPR ab) (NX (ADJX (CARD sieben)) (NN uhr))) (PX (APPR bis) (NX (ADJX (CARD achtzehn)) (NN uhr)))))) (VXINF (VC (VC (VXINF (VVINF fahren))) (VXINF (VVINF fliegen)))))], 'auto preterminal span': (45, 49), 'span': (45, 49), 'parent': 'FKOORD', 'label': 'NX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU
			(SU
				(DM ja)
				(SIMPX ich habe mir da einige zugverbindungen und fluge geben lassen)
				[01;31m(SIMPX[00m
					(SIMPX und der zug fahrt stundlich ab vier uhr sechsundfunfzig am morgen)
					(KOORD und)
					[01;31m(SIMPX[00m
						(VF er)
						(LK braucht)
						[01;31m(MF[00m
							(NX viereinhalb stunden)
							(PX bis hannover von munchen aus)[01;31m)[00m[01;31m)[00m[01;31m)[00m)
			(SU [01;33m(SIMPX[00m
				(SIMPX
					(KOORD und)
					(VF das flugzeug)
					[01;31m(FKOORD[00m
						(LKMVC
							(LK wurde)
							[01;31m(MF[00m
								[01;31m(ADJX[00m
									(ADJX stundlich)
									[01;33m(SIMPX (NF[00m (PX ab sieben uhr bis achtzehn uhr)[01;31m)[00m[01;31m)[00m
							(VXINF fahren fliegen)) [01;33mNF) SIMPX) SIMPX)[00m
						(NX und braucht siebzig minuten)[01;31m)[00m)))
		(SU
			(SIMPX
				(VF ich)
				(LK weis)
				(MF nicht)
				(NF
					(SIMPX
						(C wie)
						(MF
							[01;36m(NX[00m
								(NX sie)
								(NX es)[01;36m)[00m
							(NX sich)
							(NX das))
						(VC vorgestellt haben))))
			(SIMPX aber ich wurde doch eher fur einen flug pladieren))))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['NX', 'NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'PPER'), 'right siblings': [(NX (PRF sich)), (NX (PDS das))], 'left siblings': [], 'auto preterminal span': (53, 55), 'span': (53, 55), 'parent': 'MF', 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'add'}
(TOP
	(TURN
		(SU
			(SU
				(DM ja)
				(SIMPX ich habe mir da einige zugverbindungen und fluge geben lassen)
				[01;31m(SIMPX[00m
					(SIMPX und der zug fahrt stundlich ab vier uhr sechsundfunfzig am morgen)
					(KOORD und)
					[01;31m(SIMPX[00m
						(VF er)
						(LK braucht)
						[01;31m(MF[00m
							(NX viereinhalb stunden)
							(PX bis hannover von munchen aus)[01;31m)[00m[01;31m)[00m[01;31m)[00m)
			(SU [01;33m(SIMPX[00m
				(SIMPX
					(KOORD und)
					(VF das flugzeug)
					[01;31m(FKOORD[00m
						(LKMVC
							(LK wurde)
							[01;31m(MF[00m
								[01;31m(ADJX[00m
									(ADJX stundlich)
									[01;33m(SIMPX (NF[00m (PX ab sieben uhr bis achtzehn uhr)[01;31m)[00m[01;31m)[00m
							(VXINF fahren fliegen)) [01;33mNF) SIMPX) SIMPX)[00m
						(NX und braucht siebzig minuten)[01;31m)[00m)))
		(SU ich weis nicht wie sie es sich das vorgestellt haben aber ich wurde doch eher fur einen flug pladieren)))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'KOORD', 'SIMPX'], 'family': ['DM', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VAFIN', 'PRF', 'ADV', 'PIAT', 'NN', 'KON', 'NN', 'VVINF', 'VVINF', 'KON', 'ART', 'NN', 'VVFIN', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'APPRART', 'NN', 'KON', 'PPER', 'VVFIN', 'CARD', 'NN', 'APPR', 'NE', 'APPR', 'NE', 'APZR'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (0, 32), 'span': (11, 32), 'left siblings': ['DM', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(SU
				(DM ja)
				(SIMPX ich habe mir da einige zugverbindungen und fluge geben lassen)
				(SIMPX und der zug fahrt stundlich ab vier uhr sechsundfunfzig am morgen)
				(KOORD und)
				[01;31m(SIMPX[00m
					(VF er)
					(LK braucht)
					[01;31m(MF[00m
						(NX viereinhalb stunden)
						(PX bis hannover von munchen aus)[01;31m)[00m[01;31m)[00m)
			(SU [01;33m(SIMPX[00m
				(SIMPX
					(KOORD und)
					(VF das flugzeug)
					[01;31m(FKOORD[00m
						(LKMVC
							(LK wurde)
							[01;31m(MF[00m
								[01;31m(ADJX[00m
									(ADJX stundlich)
									[01;33m(SIMPX (NF[00m (PX ab sieben uhr bis achtzehn uhr)[01;31m)[00m[01;31m)[00m
							(VXINF fahren fliegen)) [01;33mNF) SIMPX) SIMPX)[00m
						(NX und braucht siebzig minuten)[01;31m)[00m)))
		(SU ich weis nicht wie sie es sich das vorgestellt haben aber ich wurde doch eher fur einen flug pladieren)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['DM', 'SIMPX', 'SIMPX', 'KOORD', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VAFIN', 'PRF', 'ADV', 'PIAT', 'NN', 'KON', 'NN', 'VVINF', 'VVINF', 'KON', 'ART', 'NN', 'VVFIN', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'APPRART', 'NN', 'KON', 'PPER', 'VVFIN', 'CARD', 'NN', 'APPR', 'NE', 'APPR', 'NE', 'APZR'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (0, 32), 'span': (23, 32), 'left siblings': ['DM', 'SIMPX', 'SIMPX', 'KOORD'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(SU
				(DM ja)
				(SIMPX ich habe mir da einige zugverbindungen und fluge geben lassen)
				(SIMPX und der zug fahrt stundlich ab vier uhr sechsundfunfzig am morgen)
				(KOORD und)
				(VF er)
				(LK braucht)
				[01;31m(MF[00m
					(NX viereinhalb stunden)
					(PX bis hannover von munchen aus)[01;31m)[00m)
			(SU [01;33m(SIMPX[00m
				(SIMPX
					(KOORD und)
					(VF das flugzeug)
					[01;31m(FKOORD[00m
						(LKMVC
							(LK wurde)
							[01;31m(MF[00m
								[01;31m(ADJX[00m
									(ADJX stundlich)
									[01;33m(SIMPX (NF[00m (PX ab sieben uhr bis achtzehn uhr)[01;31m)[00m[01;31m)[00m
							(VXINF fahren fliegen)) [01;33mNF) SIMPX) SIMPX)[00m
						(NX und braucht siebzig minuten)[01;31m)[00m)))
		(SU ich weis nicht wie sie es sich das vorgestellt haben aber ich wurde doch eher fur einen flug pladieren)))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['DM', 'SIMPX', 'SIMPX', 'KOORD', 'VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VAFIN', 'PRF', 'ADV', 'PIAT', 'NN', 'KON', 'NN', 'VVINF', 'VVINF', 'KON', 'ART', 'NN', 'VVFIN', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'APPRART', 'NN', 'KON', 'PPER', 'VVFIN', 'CARD', 'NN', 'APPR', 'NE', 'APPR', 'NE', 'APZR'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (0, 32), 'span': (25, 32), 'left siblings': ['DM', 'SIMPX', 'SIMPX', 'KOORD', 'VF', 'LK'], 'label': 'MF', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(SU ja ich habe mir da einige zugverbindungen und fluge geben lassen und der zug fahrt stundlich ab vier uhr sechsundfunfzig am morgen und er braucht viereinhalb stunden bis hannover von munchen aus)
			(SU [01;33m(SIMPX[00m
				(SIMPX
					(KOORD und)
					(VF das flugzeug)
					[01;31m(FKOORD[00m
						(LKMVC
							(LK wurde)
							[01;31m(MF[00m
								[01;31m(ADJX[00m
									(ADJX stundlich)
									[01;33m(SIMPX (NF[00m (PX ab sieben uhr bis achtzehn uhr)[01;31m)[00m[01;31m)[00m
							(VXINF fahren fliegen)) [01;33mNF) SIMPX) SIMPX)[00m
						(NX und braucht siebzig minuten)[01;31m)[00m)))
		(SU ich weis nicht wie sie es sich das vorgestellt haben aber ich wurde doch eher fur einen flug pladieren)))
Step:UNSET remove
{'subtrees': ['LKMVC', 'NX'], 'family': ['KOORD', 'VF', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'ART', 'NN', 'VAFIN', 'ADJD', 'APPR', 'CARD', 'NN', 'APPR', 'CARD', 'NN', 'VVINF', 'VVINF', 'KON', 'VVFIN', 'CARD', 'NN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (32, 49), 'span': (35, 49), 'left siblings': ['KOORD', 'VF'], 'label': 'FKOORD', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(SU ja ich habe mir da einige zugverbindungen und fluge geben lassen und der zug fahrt stundlich ab vier uhr sechsundfunfzig am morgen und er braucht viereinhalb stunden bis hannover von munchen aus)
			(SU
				(SIMPX
					[01;36m(SIMPX[00m
						(KOORD und)
						(VF das flugzeug)
						(LKMVC
							(LK wurde)
							[01;31m(MF[00m
								[01;31m(ADJX[00m
									(ADJX stundlich)
									[01;33m(SIMPX (NF[00m (PX ab sieben uhr bis achtzehn uhr)[01;31m)[00m[01;31m)[00m
							(VXINF fahren fliegen)) [01;33mNF) SIMPX)[00m[01;36m)[00m
					(NX und braucht siebzig minuten))))
		(SU ich weis nicht wie sie es sich das vorgestellt haben aber ich wurde doch eher fur einen flug pladieren)))
Step:UNSET add
{'subtrees': ['KOORD', 'VF', 'LKMVC'], 'family': ['SIMPX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'ART', 'NN', 'VAFIN', 'ADJD', 'APPR', 'CARD', 'NN', 'APPR', 'CARD', 'NN', 'VVINF', 'VVINF'), 'right siblings': [(NX (KON und) (LKM (LK (VXFIN (VVFIN braucht))) (MF (NX (ADJX (CARD siebzig)) (NN minuten)))))], 'left siblings': [], 'auto preterminal span': (32, 45), 'span': (32, 45), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU
			(SU ja ich habe mir da einige zugverbindungen und fluge geben lassen und der zug fahrt stundlich ab vier uhr sechsundfunfzig am morgen und er braucht viereinhalb stunden bis hannover von munchen aus)
			(SU
				(SIMPX
					(SIMPX
						(KOORD und)
						(VF das flugzeug)
						(LKMVC
							(LK wurde)
							[01;31m(MF[00m
								[01;31m(ADJX[00m
									(ADJX stundlich)
									[01;33m(SIMPX (NF[00m (PX ab sieben uhr bis achtzehn uhr)[01;31m)[00m[01;31m)[00m
							(VXINF fahren fliegen))) [01;33mNF) SIMPX)[00m
					(NX und braucht siebzig minuten))))
		(SU ich weis nicht wie sie es sich das vorgestellt haben aber ich wurde doch eher fur einen flug pladieren)))
Step:Unary
{'subtrees': ['ADJX'], 'family': ['LK', 'MF', 'VXINF'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'ADJD', 'APPR', 'CARD', 'NN', 'APPR', 'CARD', 'NN', 'VVINF', 'VVINF'), 'right siblings': ['VXINF'], 'parent': 'LKMVC', 'auto preterminal span': (35, 45), 'span': (36, 43), 'left siblings': ['LK'], 'label': 'MF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(SU ja ich habe mir da einige zugverbindungen und fluge geben lassen und der zug fahrt stundlich ab vier uhr sechsundfunfzig am morgen und er braucht viereinhalb stunden bis hannover von munchen aus)
			(SU
				(SIMPX
					(SIMPX
						(KOORD und)
						(VF das flugzeug)
						(LKMVC
							(LK wurde)
							[01;31m(ADJX[00m
								(ADJX stundlich)
								[01;33m(SIMPX (NF[00m (PX ab sieben uhr bis achtzehn uhr)[01;31m)[00m
							(VXINF fahren fliegen))) [01;33mNF) SIMPX)[00m
					(NX und braucht siebzig minuten))))
		(SU ich weis nicht wie sie es sich das vorgestellt haben aber ich wurde doch eher fur einen flug pladieren)))
Step:PP Attachment
{'new_parent': 'LKMVC', 'new_family': ['LK', 'ADJX', 'PX', 'VXINF'], 'mover info': [('PX', (37, 43))], 'old_family': ['ADJX', 'PX'], 'start left siblings': ['ADJX'], 'auto preterminals': ('VAFIN', 'ADJD', 'APPR', 'CARD', 'NN', 'APPR', 'CARD', 'NN', 'VVINF', 'VVINF'), 'start right siblings': [], 'end left siblings': ['LK', 'ADJX'], 'auto preterminal span': (35, 45), 'adding node already present': False, 'movers': ['PX'], 'old_parent': 'ADJX', 'added and moved': True, 'end right siblings': ['VXINF'], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'NF'}
(TOP
	(TURN
		(SU
			(SU ja ich habe mir da einige zugverbindungen und fluge geben lassen und der zug fahrt stundlich ab vier uhr sechsundfunfzig am morgen und er braucht viereinhalb stunden bis hannover von munchen aus)
			(SU
				(SIMPX
					(SIMPX
						(KOORD und)
						(VF das flugzeug)
						(LKMVC
							(LK wurde)
							(ADJX stundlich)
							[01;36m(NF[00m
								(SIMPX
									(PX ab sieben uhr bis achtzehn uhr)
									(VXINF fahren fliegen))[01;36m)[00m))
					(NX und braucht siebzig minuten))))
		(SU ich weis nicht wie sie es sich das vorgestellt haben aber ich wurde doch eher fur einen flug pladieren)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['LK', 'ADJX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'CARD', 'NN', 'APPR', 'CARD', 'NN', 'VVINF', 'VVINF'), 'right siblings': [], 'left siblings': [(LK (VXFIN (VAFIN wurde))), (ADJX (ADJD stundlich))], 'auto preterminal span': (37, 45), 'span': (37, 45), 'parent': 'LKMVC', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP ja ich habe mir da einige zugverbindungen und fluge geben lassen und der zug fahrt stundlich ab vier uhr sechsundfunfzig am morgen und er braucht viereinhalb stunden bis hannover von munchen aus und das flugzeug wurde stundlich ab sieben uhr bis achtzehn uhr fahren fliegen und braucht siebzig minuten ich weis nicht wie sie es sich das vorgestellt haben aber ich wurde doch eher fur einen flug pladieren)

Sentence 561:
6 Initial errors
0 on fringe, 4 iterations
2 Error:Different label
2 Error:Single Word Phrase
1 Error:UNSET add
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM ja)
			(DM also)
			(SIMPX
				(LV dieses letzte hotel)
				(VF das)
				(LK hat)
				[01;36m(MF[00m
					(MF
						(NX mich)
						(ADVX auch)
						[01;36m(PX[00m [01;31m(ADJX[00m
							(PTKA am)
							[01;36m(NX[00m
								(ADJD meisten)[01;36m)[00m[01;31m)[00m[01;36m)[00m)
					(VC interessiert)[01;36m)[00m))
		(SU
			(SIMPX
				(KOORD und)
				(VF da wir sowieso auf firmenkosten reisen werden)
				(LK denke)
				(MF
					(NX ich)
					[01;36m(ADJX[00m [01;31m(ADVX[00m
						(ADV schon)[01;31m)[00m[01;36m)[00m)
				(NF das wir uns dort ein einzelzimmer auch nehmen konnen)))))
Step:Different label
{'family': ['NX', 'ADVX', 'PX'], 'auto preterminal span': (9, 11), 'span': (9, 11), 'subtrees': ['PTKA', 'ADJD'], 'parent': 'MF', 'over_word': False, 'auto preterminals': ('PTKA', 'ADJD'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('ADJX', 'PX')}
(TOP
	(TURN
		(SU
			(DM ja)
			(DM also)
			(SIMPX
				(LV dieses letzte hotel)
				(VF das)
				(LK hat)
				[01;36m(MF[00m
					(MF
						(NX mich)
						(ADVX auch)
						(PX
							(PTKA am)
							[01;36m(NX[00m
								(ADJD meisten)[01;36m)[00m))
					(VC interessiert)[01;36m)[00m))
		(SU
			(SIMPX
				(KOORD und)
				(VF da wir sowieso auf firmenkosten reisen werden)
				(LK denke)
				(MF
					(NX ich)
					[01;36m(ADJX[00m [01;31m(ADVX[00m
						(ADV schon)[01;31m)[00m[01;36m)[00m)
				(NF das wir uns dort ein einzelzimmer auch nehmen konnen)))))
Step:Single Word Phrase
{'family': ['NX', 'ADJX'], 'auto preterminal span': (22, 23), 'span': (22, 23), 'subtrees': ['ADV'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'ADJX')}
(TOP
	(TURN
		(SU
			(DM ja)
			(DM also)
			(SIMPX
				(LV dieses letzte hotel)
				(VF das)
				(LK hat)
				[01;36m(MF[00m
					(MF
						(NX mich)
						(ADVX auch)
						(PX
							(PTKA am)
							[01;36m(NX[00m
								(ADJD meisten)[01;36m)[00m))
					(VC interessiert)[01;36m)[00m))
		(SU und da wir sowieso auf firmenkosten reisen werden denke ich schon das wir uns dort ein einzelzimmer auch nehmen konnen)))
Step:UNSET add
{'subtrees': ['MF', 'VC'], 'family': ['LV', 'VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV', 'PTKA', 'ADJD', 'VVPP'), 'right siblings': [], 'left siblings': [(LV (NX (PDAT dieses) (ADJX (ADJA letzte)) (NN hotel))), (VF (NX (PDS das))), (LK (VXFIN (VAFIN hat)))], 'auto preterminal span': (7, 12), 'span': (7, 12), 'parent': 'SIMPX', 'label': 'MF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM ja)
			(DM also)
			(SIMPX
				(LV dieses letzte hotel)
				(VF das)
				(LK hat)
				(MF
					(MF
						(NX mich)
						(ADVX auch)
						(PX
							(PTKA am)
							[01;36m(NX[00m
								(ADJD meisten)[01;36m)[00m))
					(VC interessiert))))
		(SU und da wir sowieso auf firmenkosten reisen werden denke ich schon das wir uns dort ein einzelzimmer auch nehmen konnen)))
Step:Single Word Phrase
{'subtrees': ['ADJD'], 'family': ['PTKA', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADJD',), 'right siblings': [], 'left siblings': [(PTKA am)], 'auto preterminal span': (10, 11), 'span': (10, 11), 'parent': 'PX', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP ja also dieses letzte hotel das hat mich auch am meisten interessiert und da wir sowieso auf firmenkosten reisen werden denke ich schon das wir uns dort ein einzelzimmer auch nehmen konnen)

Sentence 562:
0 Initial errors
0 on fringe, 0 iterations

Sentence 563:
6 Initial errors
0 on fringe, 4 iterations
3 Error:PP Attachment
1 Error:Unary
1 Error:Modifier Attachment
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM guten tag)
			[01;31m(DM[00m
				(NX
					(NX krings)
					(ADVX hier))[01;31m)[00m)
		(SU ich habe eine frage)
		(SU
			(SIMPX
				(VF vom vierundzwanzigsten bis zum funfundzwanzigsten juni)
				(LK bin)
				(MF
					(NX ich)
					[01;31m(PX[00m [01;33m(PX[00m
						(APPR auf)
						[01;31m(NX[00m
							(NX einem kongres) [01;33mPX)[00m
							(PX in hannover)[01;31m)[00m[01;31m)[00m))
			(SIMPX
				(KOORD und)
				(VF ich)
				(LK wurde)
				(MF
					(ADVX gern)
					[01;31m(NX[00m
						[01;31m(ADVX[00m
							(NX einen tag)
							(ADV vorher)[01;31m)[00m
						(PX am dreiundzwanzigsten)[01;31m)[00m)
				(VC anreisen)))))
Step:PP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'PX', 'PX'], 'mover info': [('PX', (19, 21))], 'old_family': ['NX', 'PX'], 'start left siblings': ['NX'], 'auto preterminals': ('PPER', 'APPR', 'ART', 'NN', 'APPR', 'NE'), 'start right siblings': [], 'end left siblings': ['NX', 'PX'], 'auto preterminal span': (15, 21), 'movers': ['PX'], 'old_parent': 'NX', 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU
			(DM guten tag)
			[01;31m(DM[00m
				(NX
					(NX krings)
					(ADVX hier))[01;31m)[00m)
		(SU ich habe eine frage)
		(SU
			(SIMPX vom vierundzwanzigsten bis zum funfundzwanzigsten juni bin ich auf einem kongres in hannover)
			(SIMPX
				(KOORD und)
				(VF ich)
				(LK wurde)
				(MF
					(ADVX gern)
					[01;31m(NX[00m
						[01;31m(ADVX[00m
							(NX einen tag)
							(ADV vorher)[01;31m)[00m
						(PX am dreiundzwanzigsten)[01;31m)[00m)
				(VC anreisen)))))
Step:Unary
{'subtrees': ['NX'], 'family': ['DM', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJA', 'NN', 'NE', 'ADV'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (0, 4), 'span': (2, 4), 'left siblings': ['DM'], 'label': 'DM', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU guten tag krings hier)
		(SU ich habe eine frage)
		(SU
			(SIMPX vom vierundzwanzigsten bis zum funfundzwanzigsten juni bin ich auf einem kongres in hannover)
			(SIMPX
				(KOORD und)
				(VF ich)
				(LK wurde)
				(MF
					(ADVX gern)
					[01;31m(NX[00m
						[01;31m(ADVX[00m
							(NX einen tag)
							(ADV vorher)[01;31m)[00m
						(PX am dreiundzwanzigsten)[01;31m)[00m)
				(VC anreisen)))))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADV'], 'family': ['ADVX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'ADV', 'APPRART', 'NN'), 'right siblings': ['PX'], 'parent': 'NX', 'auto preterminal span': (25, 30), 'span': (25, 28), 'left siblings': [], 'label': 'ADVX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU guten tag krings hier)
		(SU ich habe eine frage)
		(SU
			(SIMPX vom vierundzwanzigsten bis zum funfundzwanzigsten juni bin ich auf einem kongres in hannover)
			(SIMPX
				(KOORD und)
				(VF ich)
				(LK wurde)
				(MF
					(ADVX gern)
					[01;31m(NX[00m
						(NX einen tag)
						(ADV vorher)
						(PX am dreiundzwanzigsten)[01;31m)[00m)
				(VC anreisen)))))
Step:PP Attachment
{'subtrees': ['NX', 'ADV', 'PX'], 'family': ['ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ART', 'NN', 'ADV', 'APPRART', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (24, 30), 'span': (25, 30), 'left siblings': ['ADVX'], 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP guten tag krings hier ich habe eine frage vom vierundzwanzigsten bis zum funfundzwanzigsten juni bin ich auf einem kongres in hannover und ich wurde gern einen tag vorher am dreiundzwanzigsten anreisen)

Sentence 564:
0 Initial errors
0 on fringe, 0 iterations

Sentence 565:
0 Initial errors
0 on fringe, 0 iterations

Sentence 566:
0 Initial errors
0 on fringe, 0 iterations

Sentence 567:
0 Initial errors
0 on fringe, 0 iterations

Sentence 568:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU gut)
		(SU
			(SIMPX dann ware zu empfehlen um acht uhr dreisig)
			(SIMPX
				(KOORD und)
				(VF sie)
				(LK kamen)
				(VC an)
				[01;36m(PX[00m
					(NF
						(PX in hannover)
						(PX um ein uhr))[01;36m)[00m))
		(SU etwa)))
Step:Unary
{'subtrees': ['NF'], 'family': ['KOORD', 'VF', 'LK', 'VC', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'NE', 'APPR', 'CARD', 'NN'), 'right siblings': [], 'left siblings': [(KOORD (KON und)), (VF (NX (PPER sie))), (LK (VXFIN (VVFIN kamen))), (VC (PTKVZ an))], 'auto preterminal span': (13, 18), 'span': (13, 18), 'parent': 'SIMPX', 'label': 'PX', 'classified_type': 'Unary', 'type': 'add'}
(TOP gut dann ware zu empfehlen um acht uhr dreisig und sie kamen an in hannover um ein uhr etwa)

Sentence 569:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU ja kleinen moment)
		(SU
			(SIMPX
				(VF welche preiskategorie)
				(LK sollte)
				[01;36m(NX[00m
					(MF
						(NX das)
						(ADVX ungefahr))[01;36m)[00m
				(VC sein)))))
Step:Unary
{'subtrees': ['MF'], 'family': ['VF', 'LK', 'NX', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'ADV'), 'right siblings': [(VC (VXINF (VAINF sein)))], 'left siblings': [(VF (NX (PWAT welche) (NN preiskategorie))), (LK (VXFIN (VMFIN sollte)))], 'auto preterminal span': (6, 8), 'span': (6, 8), 'parent': 'SIMPX', 'label': 'NX', 'classified_type': 'Unary', 'type': 'add'}
(TOP ja kleinen moment welche preiskategorie sollte das ungefahr sein)

Sentence 570:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU da gibt es das hotel am thielenplatz das ist ganz in der nahe vom bahnhof)
		(SU das ist wohl am angenehmsten)
		(SU
			(SIMPX
				(VF das)
				(VXFIN ist)
				(LK liegt)
				[01;36m(PX[00m
					(MF
						(ADVX so)
						[01;31m(PX[00m
							(APPR zwischen)
							(NX funfundachtzig und einhundert dreisig mark)[01;31m)[00m)[01;36m)[00m))))
Step:Modifier Attachment
{'new_parent': 'PX', 'new_family': ['ADVX', 'APPR', 'NX'], 'mover info': [('ADVX', (23, 24))], 'old_family': ['ADVX', 'PX'], 'start left siblings': [], 'auto preterminals': ('ADV', 'APPR', 'CARD', 'KON', 'CARD', 'CARD', 'NN'), 'start right siblings': ['PX'], 'end left siblings': [], 'auto preterminal span': (23, 30), 'movers': ['ADVX'], 'old_parent': 'MF', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['APPR', 'NX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP da gibt es das hotel am thielenplatz das ist ganz in der nahe vom bahnhof das ist wohl am angenehmsten das ist liegt so zwischen funfundachtzig und einhundert dreisig mark)

Sentence 571:
0 Initial errors
0 on fringe, 0 iterations

Sentence 572:
13 Initial errors
0 on fringe, 11 iterations
3 Error:PP Attachment
1 Error:Single Word Phrase
1 Error:Single Word Phrase
1 Error:Unary
1 Error:Unary
1 Error:Single Word Phrase
1 Error:UNSET add
1 Error:UNSET remove
1 Error:Clause Attachment
1 Error:UNSET add
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM ja)
			(DM guten tag)
			(SIMPX
				(VF hier)
				(LK ist)
				[01;31m(MF[00m
					[01;31m(NX[00m
						[01;36m(MF[00m
							(NX
								[01;36m(NX[00m
									(NE gero)[01;36m)[00m
								[01;36m(NX[00m
									(NE muller)[01;36m)[00m)[01;36m)[00m
						[01;36m(NF[00m
							(PX
								(APPR aus)
								(NX koln))[01;36m)[00m[01;31m)[00m[01;31m)[00m))
		(SU [01;33m(SIMPX[00m
			(SIMPX
				(VF ich)
				[01;31m(FKOORD[00m
					[01;31m(LKM[00m
						(LK plane)
						[01;36m(NX[00m
							(MF
								(NX eine geschaftsreise nach hannover)
								(NX anfang juli))[01;36m)[00m[01;31m)[00m [01;33mSIMPX)[00m
					[01;36m(SIMPX[00m
						[01;36m(KOORD[00m
							(KON und)[01;36m)[00m
						[01;31m(LKMVCN[00m
							(LK wurde)
							(MF sie)
							(VC bitten)
							(NF mir dort ein entsprechendes hotel und ein verkehrsmittel zu buchen)[01;31m)[00m[01;36m)[00m[01;31m)[00m))))
Step:PP Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'PX'], 'mover info': [('PX', (7, 9))], 'old_family': ['NX', 'PX'], 'start left siblings': ['NX'], 'auto preterminals': ('ADV', 'VAFIN', 'NE', 'NE', 'APPR', 'NE'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (3, 9), 'movers': ['PX'], 'old_parent': 'NX', 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU
			(DM ja)
			(DM guten tag)
			(SIMPX
				(VF hier)
				(LK ist)
				(MF
					(NX
						[01;36m(NX[00m
							(NE gero)[01;36m)[00m
						[01;36m(NX[00m
							(NE muller)[01;36m)[00m))
				[01;36m(NF[00m
					(PX
						(APPR aus)
						(NX koln))[01;36m)[00m))
		(SU [01;33m(SIMPX[00m
			(SIMPX
				(VF ich)
				[01;31m(FKOORD[00m
					[01;31m(LKM[00m
						(LK plane)
						[01;36m(NX[00m
							(MF
								(NX eine geschaftsreise nach hannover)
								(NX anfang juli))[01;36m)[00m[01;31m)[00m [01;33mSIMPX)[00m
					[01;36m(SIMPX[00m
						[01;36m(KOORD[00m
							(KON und)[01;36m)[00m
						[01;31m(LKMVCN[00m
							(LK wurde)
							(MF sie)
							(VC bitten)
							(NF mir dort ein entsprechendes hotel und ein verkehrsmittel zu buchen)[01;31m)[00m[01;36m)[00m[01;31m)[00m))))
Step:Single Word Phrase
{'subtrees': ['NE'], 'family': ['NX', 'NE'], 'over_word': True, 'over words': True, 'auto preterminals': ('NE',), 'right siblings': [(NE muller)], 'left siblings': [], 'auto preterminal span': (5, 6), 'span': (5, 6), 'parent': 'NX', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM ja)
			(DM guten tag)
			(SIMPX
				(VF hier)
				(LK ist)
				(MF
					(NX
						(NX gero)
						[01;36m(NX[00m
							(NE muller)[01;36m)[00m))
				[01;36m(NF[00m
					(PX
						(APPR aus)
						(NX koln))[01;36m)[00m))
		(SU [01;33m(SIMPX[00m
			(SIMPX
				(VF ich)
				[01;31m(FKOORD[00m
					[01;31m(LKM[00m
						(LK plane)
						[01;36m(NX[00m
							(MF
								(NX eine geschaftsreise nach hannover)
								(NX anfang juli))[01;36m)[00m[01;31m)[00m [01;33mSIMPX)[00m
					[01;36m(SIMPX[00m
						[01;36m(KOORD[00m
							(KON und)[01;36m)[00m
						[01;31m(LKMVCN[00m
							(LK wurde)
							(MF sie)
							(VC bitten)
							(NF mir dort ein entsprechendes hotel und ein verkehrsmittel zu buchen)[01;31m)[00m[01;36m)[00m[01;31m)[00m))))
Step:Single Word Phrase
{'subtrees': ['NE'], 'family': ['NX', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('NE',), 'right siblings': [], 'left siblings': [(NX (NE gero))], 'auto preterminal span': (6, 7), 'span': (6, 7), 'parent': 'NX', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM ja)
			(DM guten tag)
			(SIMPX
				(VF hier)
				(LK ist)
				(MF gero muller)
				[01;36m(NF[00m
					(PX
						(APPR aus)
						(NX koln))[01;36m)[00m))
		(SU [01;33m(SIMPX[00m
			(SIMPX
				(VF ich)
				[01;31m(FKOORD[00m
					[01;31m(LKM[00m
						(LK plane)
						[01;36m(NX[00m
							(MF
								(NX eine geschaftsreise nach hannover)
								(NX anfang juli))[01;36m)[00m[01;31m)[00m [01;33mSIMPX)[00m
					[01;36m(SIMPX[00m
						[01;36m(KOORD[00m
							(KON und)[01;36m)[00m
						[01;31m(LKMVCN[00m
							(LK wurde)
							(MF sie)
							(VC bitten)
							(NF mir dort ein entsprechendes hotel und ein verkehrsmittel zu buchen)[01;31m)[00m[01;36m)[00m[01;31m)[00m))))
Step:Unary
{'subtrees': ['PX'], 'family': ['VF', 'LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'NE'), 'right siblings': [], 'left siblings': [(VF (ADVX (ADV hier))), (LK (VXFIN (VAFIN ist))), (MF (NX (NX (NE gero)) (NX (NE muller))))], 'auto preterminal span': (7, 9), 'span': (7, 9), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU ja guten tag hier ist gero muller aus koln)
		(SU [01;33m(SIMPX[00m
			(SIMPX
				(VF ich)
				[01;31m(FKOORD[00m
					[01;31m(LKM[00m
						(LK plane)
						[01;36m(NX[00m
							(MF
								(NX eine geschaftsreise nach hannover)
								(NX anfang juli))[01;36m)[00m[01;31m)[00m [01;33mSIMPX)[00m
					[01;36m(SIMPX[00m
						[01;36m(KOORD[00m
							(KON und)[01;36m)[00m
						[01;31m(LKMVCN[00m
							(LK wurde)
							(MF sie)
							(VC bitten)
							(NF mir dort ein entsprechendes hotel und ein verkehrsmittel zu buchen)[01;31m)[00m[01;36m)[00m[01;31m)[00m))))
Step:Unary
{'subtrees': ['MF'], 'family': ['LK', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'APPR', 'NE', 'NN', 'NN'), 'right siblings': [], 'left siblings': [(LK (VXFIN (VVFIN plane)))], 'auto preterminal span': (11, 17), 'span': (11, 17), 'parent': 'LKM', 'label': 'NX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU ja guten tag hier ist gero muller aus koln)
		(SU [01;33m(SIMPX[00m
			(SIMPX
				(VF ich)
				[01;31m(FKOORD[00m
					[01;31m(LKM[00m
						(LK plane)
						(NX eine geschaftsreise nach hannover anfang juli)[01;31m)[00m [01;33mSIMPX)[00m
					[01;36m(SIMPX[00m
						[01;36m(KOORD[00m
							(KON und)[01;36m)[00m
						[01;31m(LKMVCN[00m
							(LK wurde)
							(MF sie)
							(VC bitten)
							(NF mir dort ein entsprechendes hotel und ein verkehrsmittel zu buchen)[01;31m)[00m[01;36m)[00m[01;31m)[00m))))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['LKM', 'KOORD', 'LKMVCN'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON',), 'right siblings': [(LKMVCN (LK (VXFIN (VAFIN wurde))) (MF (NX (PPER sie))) (VC (VXINF (VVINF bitten))) (NF (SIMPX (MF (NX (PPER mir)) (ADVX (ADV dort)) (NX (NX (ART ein) (ADJX (ADJA entsprechendes)) (NN hotel)) (KON und) (NX (ART ein) (NN verkehrsmittel)))) (VC (VXINF (PTKZU zu) (VVINF buchen))))))], 'left siblings': [(LKM (LK (VXFIN (VVFIN plane))) (NX (MF (NX (NX (ART eine) (NN geschaftsreise)) (PX (APPR nach) (NX (NE hannover)))) (NX (NX (NN anfang)) (NX (NN juli))))))], 'auto preterminal span': (17, 18), 'span': (17, 18), 'parent': 'FKOORD', 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SU ja guten tag hier ist gero muller aus koln)
		(SU [01;33m(SIMPX[00m
			(SIMPX
				(VF ich)
				[01;31m(FKOORD[00m
					[01;31m(LKM[00m
						(LK plane)
						(NX eine geschaftsreise nach hannover anfang juli)[01;31m)[00m [01;33mSIMPX)[00m
					[01;36m(SIMPX[00m
						(KOORD und)
						[01;31m(LKMVCN[00m
							(LK wurde)
							(MF sie)
							(VC bitten)
							(NF mir dort ein entsprechendes hotel und ein verkehrsmittel zu buchen)[01;31m)[00m[01;36m)[00m[01;31m)[00m))))
Step:UNSET add
{'subtrees': ['KOORD', 'LKMVCN'], 'family': ['LKM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'VAFIN', 'PPER', 'VVINF', 'PPER', 'ADV', 'ART', 'ADJA', 'NN', 'KON', 'ART', 'NN', 'PTKZU', 'VVINF'), 'right siblings': [], 'left siblings': [(LKM (LK (VXFIN (VVFIN plane))) (NX (MF (NX (NX (ART eine) (NN geschaftsreise)) (PX (APPR nach) (NX (NE hannover)))) (NX (NX (NN anfang)) (NX (NN juli))))))], 'auto preterminal span': (17, 31), 'span': (17, 31), 'parent': 'FKOORD', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU ja guten tag hier ist gero muller aus koln)
		(SU [01;33m(SIMPX[00m
			(SIMPX
				(VF ich)
				[01;31m(FKOORD[00m
					[01;31m(LKM[00m
						(LK plane)
						(NX eine geschaftsreise nach hannover anfang juli)[01;31m)[00m [01;33mSIMPX)[00m
					(SIMPX
						(KOORD und)
						[01;31m(LKMVCN[00m
							(LK wurde)
							(MF sie)
							(VC bitten)
							(NF mir dort ein entsprechendes hotel und ein verkehrsmittel zu buchen)[01;31m)[00m)[01;31m)[00m))))
Step:UNSET remove
{'subtrees': ['LK', 'NX'], 'family': ['LKM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'ART', 'NN', 'APPR', 'NE', 'NN', 'NN', 'KON', 'VAFIN', 'PPER', 'VVINF', 'PPER', 'ADV', 'ART', 'ADJA', 'NN', 'KON', 'ART', 'NN', 'PTKZU', 'VVINF'), 'right siblings': ['SIMPX'], 'parent': 'FKOORD', 'auto preterminal span': (10, 31), 'span': (10, 17), 'left siblings': [], 'label': 'LKM', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU ja guten tag hier ist gero muller aus koln)
		(SU [01;33m(SIMPX[00m
			(SIMPX
				(VF ich)
				[01;31m(FKOORD[00m
					(LK plane)
					(NX eine geschaftsreise nach hannover anfang juli) [01;33mSIMPX)[00m
					(SIMPX
						(KOORD und)
						[01;31m(LKMVCN[00m
							(LK wurde)
							(MF sie)
							(VC bitten)
							(NF mir dort ein entsprechendes hotel und ein verkehrsmittel zu buchen)[01;31m)[00m)[01;31m)[00m))))
Step:Clause Attachment
{'subtrees': ['LK', 'NX', 'SIMPX'], 'family': ['VF', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ART', 'NN', 'APPR', 'NE', 'NN', 'NN', 'KON', 'VAFIN', 'PPER', 'VVINF', 'PPER', 'ADV', 'ART', 'ADJA', 'NN', 'KON', 'ART', 'NN', 'PTKZU', 'VVINF'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (9, 31), 'span': (10, 31), 'left siblings': ['VF'], 'label': 'FKOORD', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU ja guten tag hier ist gero muller aus koln)
		(SU
			(SIMPX
				[01;36m(SIMPX[00m
					(VF ich)
					(LK plane)
					(NX eine geschaftsreise nach hannover anfang juli)[01;36m)[00m
				(SIMPX
					(KOORD und)
					[01;31m(LKMVCN[00m
						(LK wurde)
						(MF sie)
						(VC bitten)
						(NF mir dort ein entsprechendes hotel und ein verkehrsmittel zu buchen)[01;31m)[00m)))))
Step:UNSET add
{'subtrees': ['VF', 'LK', 'NX'], 'family': ['SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ART', 'NN', 'APPR', 'NE', 'NN', 'NN'), 'right siblings': [(SIMPX (KOORD (KON und)) (LKMVCN (LK (VXFIN (VAFIN wurde))) (MF (NX (PPER sie))) (VC (VXINF (VVINF bitten))) (NF (SIMPX (MF (NX (PPER mir)) (ADVX (ADV dort)) (NX (NX (ART ein) (ADJX (ADJA entsprechendes)) (NN hotel)) (KON und) (NX (ART ein) (NN verkehrsmittel)))) (VC (VXINF (PTKZU zu) (VVINF buchen)))))))], 'left siblings': [], 'auto preterminal span': (9, 17), 'span': (9, 17), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU ja guten tag hier ist gero muller aus koln)
		(SU
			(SIMPX
				(SIMPX ich plane eine geschaftsreise nach hannover anfang juli)
				(SIMPX
					(KOORD und)
					[01;31m(LKMVCN[00m
						(LK wurde)
						(MF sie)
						(VC bitten)
						(NF mir dort ein entsprechendes hotel und ein verkehrsmittel zu buchen)[01;31m)[00m)))))
Step:UNSET remove
{'subtrees': ['LK', 'MF', 'VC', 'NF'], 'family': ['KOORD', 'LKMVCN'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'VAFIN', 'PPER', 'VVINF', 'PPER', 'ADV', 'ART', 'ADJA', 'NN', 'KON', 'ART', 'NN', 'PTKZU', 'VVINF'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (17, 31), 'span': (18, 31), 'left siblings': ['KOORD'], 'label': 'LKMVCN', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ja guten tag hier ist gero muller aus koln ich plane eine geschaftsreise nach hannover anfang juli und wurde sie bitten mir dort ein entsprechendes hotel und ein verkehrsmittel zu buchen)

Sentence 573:
3 Initial errors
0 on fringe, 3 iterations
1 Error:UNSET add
1 Error:PP Attachment
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX ich habe mich ja)
			(SIMPX ich habe mich da auch schon erkundigt)
			(SIMPX
				(LV
					(NX
						(NX der zug)
						[01;31m(PX[00m
							(ADVX hier)
							(PX in bonn)[01;31m)[00m))
				[01;36m(SIMPX[00m
					(VF der)
					(LK fahrt)
					(MF um acht uhr neununddreisig)
					(VC ab)[01;36m)[00m)
			(SIMPX
				(KOORD und)
				(VF das)
				(LK habe)
				[01;31m(MF[00m
					(NX ich)
					(NX mir)
					(ADVX schon)[01;31m)[00m
				(VC zurechtgelegt))
			(SIMPX den wurde ich eigentlich ganz gerne nehmen))
		(SU konnten sie mir da was reservieren)))
Step:UNSET add
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['LV', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VVFIN', 'APPR', 'CARD', 'NN', 'CARD', 'PTKVZ'), 'right siblings': [], 'left siblings': [(LV (NX (NX (ART der) (NN zug)) (PX (ADVX (ADV hier)) (PX (APPR in) (NX (NE bonn))))))], 'auto preterminal span': (17, 24), 'span': (17, 24), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX ich habe mich ja)
			(SIMPX ich habe mich da auch schon erkundigt)
			(SIMPX
				(LV
					(NX
						(NX der zug)
						[01;31m(PX[00m
							(ADVX hier)
							(PX in bonn)[01;31m)[00m))
				(SIMPX der fahrt um acht uhr neununddreisig ab))
			(SIMPX
				(KOORD und)
				(VF das)
				(LK habe)
				[01;31m(MF[00m
					(NX ich)
					(NX mir)
					(ADVX schon)[01;31m)[00m
				(VC zurechtgelegt))
			(SIMPX den wurde ich eigentlich ganz gerne nehmen))
		(SU konnten sie mir da was reservieren)))
Step:PP Attachment
{'subtrees': ['ADVX', 'PX'], 'family': ['NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'ADV', 'APPR', 'NE'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (12, 17), 'span': (14, 17), 'left siblings': ['NX'], 'label': 'PX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX ich habe mich ja)
			(SIMPX ich habe mich da auch schon erkundigt)
			(SIMPX der zug hier in bonn der fahrt um acht uhr neununddreisig ab)
			(SIMPX
				(KOORD und)
				(VF das)
				(LK habe)
				[01;31m(MF[00m
					(NX ich)
					(NX mir)
					(ADVX schon)[01;31m)[00m
				(VC zurechtgelegt))
			(SIMPX den wurde ich eigentlich ganz gerne nehmen))
		(SU konnten sie mir da was reservieren)))
Step:Modifier Attachment
{'subtrees': ['NX', 'NX', 'ADVX'], 'family': ['KOORD', 'VF', 'LK', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'PDS', 'VAFIN', 'PPER', 'PRF', 'ADV', 'VVPP'), 'right siblings': ['VC'], 'parent': 'SIMPX', 'auto preterminal span': (24, 31), 'span': (27, 30), 'left siblings': ['KOORD', 'VF', 'LK'], 'label': 'MF', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP ja ich habe mich ja ich habe mich da auch schon erkundigt der zug hier in bonn der fahrt um acht uhr neununddreisig ab und das habe ich mir schon zurechtgelegt den wurde ich eigentlich ganz gerne nehmen konnten sie mir da was reservieren)

Sentence 574:
14 Initial errors
0 on fringe, 12 iterations
2 Error:NP Attachment
2 Error:UNSET move
1 Error:UNSET add
1 Error:Single Word Phrase
1 Error:Unary
1 Error:Single Word Phrase
1 Error:UNSET remove
1 Error:Unary
1 Error:Unary
1 Error:Unary
1 Error:Clause Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU ja gut)
		(SU
			(SIMPX dann wurde ich sagen dann nehme ich das)
			[01;31m(SIMPX[00m
				(KOORD und)
				(LK kann)
				[01;31m(MF[00m
					(NX
						(PPER ich))[01;31m)[00m[01;31m)[00m
			[01;31m(DM[00m
				(ADVX
					(ADV also))[01;31m)[00m
			(DM wie gesagt)
			(SIMPX
				(VF ich)
				(LK war)
				(MF noch nicht ganz sicher)
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						[01;31m(C[00m
							(NX
								(PWS was))[01;31m)[00m
						[01;36m(NX[00m
							(ART den)
							[01;36m(NX[00m
								[01;31m(NX[00m
									(NN ende)[01;31m)[00m
								(ART der)[01;36m)[00m[01;36m)[00m
						[01;36m(SIMPX[00m
							[01;36m(NX[00m
								[01;36m(C[00m
									(PWS was)[01;36m)[00m[01;36m)[00m
							(MF
								[01;31m(NX[00m
									(NX
										(ART das)
										[01;36m(NX[00m
											(NN ende)[01;36m)[00m)
									(NX der abreise)[01;31m)[00m)
							(VC anging)[01;36m)[00m[01;31m)[00m[01;31m)[00m)
			(SIMPX das ich mich im laufe der woche noch mal melde bei ihnen))
		(SU und dann)))
Step:NP Attachment
{'new_parent': 'NF', 'new_family': ['C', 'ART', 'NX', 'ART', 'SIMPX'], 'mover info': [('C', (22, 23)), ('ART', (23, 24)), ('NX', (24, 25)), ('ART', (25, 26))], 'old_family': ['C', 'ART', 'NX', 'ART', 'PWS', 'MF', 'VC'], 'start left siblings': [], 'auto preterminals': ('PWS', 'ART', 'NN', 'ART', 'PWS', 'ART', 'NN', 'ART', 'NN', 'VVFIN'), 'start right siblings': ['PWS', 'MF', 'VC'], 'end left siblings': [], 'auto preterminal span': (22, 32), 'movers': ['C', 'ART', 'NX', 'ART'], 'old_parent': 'SIMPX', 'end right siblings': ['SIMPX'], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU ja gut)
		(SU
			(SIMPX dann wurde ich sagen dann nehme ich das)
			[01;31m(SIMPX[00m
				(KOORD und)
				(LK kann)
				[01;31m(MF[00m
					(NX
						(PPER ich))[01;31m)[00m[01;31m)[00m
			[01;31m(DM[00m
				(ADVX
					(ADV also))[01;31m)[00m
			(DM wie gesagt)
			(SIMPX
				(VF ich)
				(LK war)
				(MF noch nicht ganz sicher)
				[01;31m(NF[00m
					[01;31m(C[00m
						(NX
							(PWS was))[01;31m)[00m
					[01;36m(NX[00m
						(ART den)
						[01;36m(NX[00m
							[01;31m(NX[00m
								(NN ende)[01;31m)[00m
							(ART der)[01;36m)[00m[01;36m)[00m
					(SIMPX
						[01;36m(NX[00m
							[01;36m(C[00m
								(PWS was)[01;36m)[00m[01;36m)[00m
						(MF
							[01;31m(NX[00m
								(NX
									(ART das)
									[01;36m(NX[00m
										(NN ende)[01;36m)[00m)
								(NX der abreise)[01;31m)[00m)
						(VC anging))[01;31m)[00m)
			(SIMPX das ich mich im laufe der woche noch mal melde bei ihnen))
		(SU und dann)))
Step:UNSET move
{'new_parent': 'NX', 'new_family': ['NN', 'ART'], 'mover info': [('ART', (25, 26))], 'old_family': ['C', 'ART', 'NX', 'ART', 'SIMPX'], 'start left siblings': ['C', 'ART', 'NX'], 'auto preterminals': ('PWS', 'ART', 'NN', 'ART', 'PWS', 'ART', 'NN', 'ART', 'NN', 'VVFIN'), 'start right siblings': ['SIMPX'], 'end left siblings': ['NN'], 'auto preterminal span': (22, 32), 'movers': ['ART'], 'old_parent': 'NF', 'POS confusion': ('ART', 'ART'), 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU ja gut)
		(SU
			(SIMPX dann wurde ich sagen dann nehme ich das)
			[01;31m(SIMPX[00m
				(KOORD und)
				(LK kann)
				[01;31m(MF[00m
					(NX
						(PPER ich))[01;31m)[00m[01;31m)[00m
			[01;31m(DM[00m
				(ADVX
					(ADV also))[01;31m)[00m
			(DM wie gesagt)
			(SIMPX
				(VF ich)
				(LK war)
				(MF noch nicht ganz sicher)
				[01;31m(NF[00m
					[01;31m(C[00m
						(NX
							(PWS was))[01;31m)[00m
					[01;36m(NX[00m
						(ART den)
						(NX ende der)[01;36m)[00m
					(SIMPX
						[01;36m(NX[00m
							[01;36m(C[00m
								(PWS was)[01;36m)[00m[01;36m)[00m
						(MF
							[01;31m(NX[00m
								(NX
									(ART das)
									[01;36m(NX[00m
										(NN ende)[01;36m)[00m)
								(NX der abreise)[01;31m)[00m)
						(VC anging))[01;31m)[00m)
			(SIMPX das ich mich im laufe der woche noch mal melde bei ihnen))
		(SU und dann)))
Step:UNSET add
{'subtrees': ['ART', 'NX'], 'family': ['C', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'ART'), 'right siblings': [(SIMPX (PWS was) (MF (NX (NX (ART das) (NN ende)) (NX (ART der) (NN abreise)))) (VC (VXFIN (VVFIN anging))))], 'left siblings': [(C (NX (PWS was)))], 'auto preterminal span': (23, 26), 'span': (23, 26), 'parent': 'NF', 'label': 'NX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU ja gut)
		(SU
			(SIMPX dann wurde ich sagen dann nehme ich das)
			[01;31m(SIMPX[00m
				(KOORD und)
				(LK kann)
				[01;31m(MF[00m
					(NX
						(PPER ich))[01;31m)[00m[01;31m)[00m
			[01;31m(DM[00m
				(ADVX
					(ADV also))[01;31m)[00m
			(DM wie gesagt)
			(SIMPX
				(VF ich)
				(LK war)
				(MF noch nicht ganz sicher)
				[01;31m(NF[00m
					[01;31m(C[00m
						(NX
							(PWS was))[01;31m)[00m
					(NX den ende der)
					(SIMPX
						[01;36m(NX[00m
							[01;36m(C[00m
								(PWS was)[01;36m)[00m[01;36m)[00m
						(MF
							[01;31m(NX[00m
								(NX
									(ART das)
									[01;36m(NX[00m
										(NN ende)[01;36m)[00m)
								(NX der abreise)[01;31m)[00m)
						(VC anging))[01;31m)[00m)
			(SIMPX das ich mich im laufe der woche noch mal melde bei ihnen))
		(SU und dann)))
Step:Single Word Phrase
{'subtrees': ['PWS'], 'family': ['C', 'MF', 'VC'], 'over_word': True, 'over words': True, 'auto preterminals': ('PWS',), 'right siblings': [(MF (NX (NX (ART das) (NN ende)) (NX (ART der) (NN abreise)))), (VC (VXFIN (VVFIN anging)))], 'left siblings': [], 'auto preterminal span': (26, 27), 'span': (26, 27), 'parent': 'SIMPX', 'label': 'C', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SU ja gut)
		(SU
			(SIMPX dann wurde ich sagen dann nehme ich das)
			[01;31m(SIMPX[00m
				(KOORD und)
				(LK kann)
				[01;31m(MF[00m
					(NX
						(PPER ich))[01;31m)[00m[01;31m)[00m
			[01;31m(DM[00m
				(ADVX
					(ADV also))[01;31m)[00m
			(DM wie gesagt)
			(SIMPX
				(VF ich)
				(LK war)
				(MF noch nicht ganz sicher)
				[01;31m(NF[00m
					[01;31m(C[00m
						(NX
							(PWS was))[01;31m)[00m
					(NX den ende der)
					(SIMPX
						[01;36m(NX[00m
							(C
								(PWS was))[01;36m)[00m
						(MF
							[01;31m(NX[00m
								(NX
									(ART das)
									[01;36m(NX[00m
										(NN ende)[01;36m)[00m)
								(NX der abreise)[01;31m)[00m)
						(VC anging))[01;31m)[00m)
			(SIMPX das ich mich im laufe der woche noch mal melde bei ihnen))
		(SU und dann)))
Step:Unary
{'subtrees': ['C'], 'family': ['NX', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('PWS',), 'right siblings': [(MF (NX (NX (ART das) (NN ende)) (NX (ART der) (NN abreise)))), (VC (VXFIN (VVFIN anging)))], 'left siblings': [], 'auto preterminal span': (26, 27), 'span': (26, 27), 'parent': 'SIMPX', 'label': 'NX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU ja gut)
		(SU
			(SIMPX dann wurde ich sagen dann nehme ich das)
			[01;31m(SIMPX[00m
				(KOORD und)
				(LK kann)
				[01;31m(MF[00m
					(NX
						(PPER ich))[01;31m)[00m[01;31m)[00m
			[01;31m(DM[00m
				(ADVX
					(ADV also))[01;31m)[00m
			(DM wie gesagt)
			(SIMPX
				(VF ich)
				(LK war)
				(MF noch nicht ganz sicher)
				[01;31m(NF[00m
					[01;31m(C[00m
						(NX
							(PWS was))[01;31m)[00m
					(NX den ende der)
					(SIMPX
						(NX was)
						(MF
							[01;31m(NX[00m
								(NX
									(ART das)
									[01;36m(NX[00m
										(NN ende)[01;36m)[00m)
								(NX der abreise)[01;31m)[00m)
						(VC anging))[01;31m)[00m)
			(SIMPX das ich mich im laufe der woche noch mal melde bei ihnen))
		(SU und dann)))
Step:Single Word Phrase
{'subtrees': ['NN'], 'family': ['ART', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('NN',), 'right siblings': [], 'left siblings': [(ART das)], 'auto preterminal span': (28, 29), 'span': (28, 29), 'parent': 'NX', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SU ja gut)
		(SU
			(SIMPX dann wurde ich sagen dann nehme ich das)
			[01;31m(SIMPX[00m
				(KOORD und)
				(LK kann)
				[01;31m(MF[00m
					(NX
						(PPER ich))[01;31m)[00m[01;31m)[00m
			[01;31m(DM[00m
				(ADVX
					(ADV also))[01;31m)[00m
			(DM wie gesagt)
			(SIMPX
				(VF ich)
				(LK war)
				(MF noch nicht ganz sicher)
				[01;31m(NF[00m
					[01;31m(C[00m
						(NX
							(PWS was))[01;31m)[00m
					(NX den ende der)
					(SIMPX
						(NX was)
						(MF
							[01;31m(NX[00m
								(NX das ende)
								(NX der abreise)[01;31m)[00m)
						(VC anging))[01;31m)[00m)
			(SIMPX das ich mich im laufe der woche noch mal melde bei ihnen))
		(SU und dann)))
Step:UNSET remove
{'subtrees': ['KOORD', 'LK', 'MF'], 'family': ['SIMPX', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'VVINF', 'ADV', 'VVFIN', 'PPER', 'PDS', 'KON', 'VMFIN', 'PPER', 'ADV', 'KOUS', 'VVPP', 'PPER', 'VAFIN', 'ADV', 'PTKNEG', 'ADV', 'ADJD', 'PWS', 'ART', 'NN', 'ART', 'PWS', 'ART', 'NN', 'ART', 'NN', 'VVFIN', 'KOUS', 'PPER', 'PRF', 'APPRART', 'NN', 'ART', 'NN', 'ADV', 'ADV', 'VVFIN', 'APPR', 'PPER'), 'right siblings': ['DM', 'DM', 'SIMPX', 'SIMPX'], 'parent': 'SU', 'auto preterminal span': (2, 44), 'span': (10, 13), 'left siblings': ['SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU ja gut)
		(SU
			(SIMPX dann wurde ich sagen dann nehme ich das)
			(KOORD und)
			(LK kann)
			[01;31m(MF[00m
				(NX
					(PPER ich))[01;31m)[00m
			[01;31m(DM[00m
				(ADVX
					(ADV also))[01;31m)[00m
			(DM wie gesagt)
			(SIMPX
				(VF ich)
				(LK war)
				(MF noch nicht ganz sicher)
				[01;31m(NF[00m
					[01;31m(C[00m
						(NX
							(PWS was))[01;31m)[00m
					(NX den ende der)
					(SIMPX
						(NX was)
						(MF
							[01;31m(NX[00m
								(NX das ende)
								(NX der abreise)[01;31m)[00m)
						(VC anging))[01;31m)[00m)
			(SIMPX das ich mich im laufe der woche noch mal melde bei ihnen))
		(SU und dann)))
Step:Unary
{'subtrees': ['NX'], 'family': ['SIMPX', 'KOORD', 'LK', 'MF', 'DM', 'DM', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'VVINF', 'ADV', 'VVFIN', 'PPER', 'PDS', 'KON', 'VMFIN', 'PPER', 'ADV', 'KOUS', 'VVPP', 'PPER', 'VAFIN', 'ADV', 'PTKNEG', 'ADV', 'ADJD', 'PWS', 'ART', 'NN', 'ART', 'PWS', 'ART', 'NN', 'ART', 'NN', 'VVFIN', 'KOUS', 'PPER', 'PRF', 'APPRART', 'NN', 'ART', 'NN', 'ADV', 'ADV', 'VVFIN', 'APPR', 'PPER'), 'right siblings': ['DM', 'DM', 'SIMPX', 'SIMPX'], 'parent': 'SU', 'auto preterminal span': (2, 44), 'span': (12, 13), 'left siblings': ['SIMPX', 'KOORD', 'LK'], 'label': 'MF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU ja gut)
		(SU
			(SIMPX dann wurde ich sagen dann nehme ich das)
			(KOORD und)
			(LK kann)
			(NX ich)
			[01;31m(DM[00m
				(ADVX
					(ADV also))[01;31m)[00m
			(DM wie gesagt)
			(SIMPX
				(VF ich)
				(LK war)
				(MF noch nicht ganz sicher)
				[01;31m(NF[00m
					[01;31m(C[00m
						(NX
							(PWS was))[01;31m)[00m
					(NX den ende der)
					(SIMPX
						(NX was)
						(MF
							[01;31m(NX[00m
								(NX das ende)
								(NX der abreise)[01;31m)[00m)
						(VC anging))[01;31m)[00m)
			(SIMPX das ich mich im laufe der woche noch mal melde bei ihnen))
		(SU und dann)))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['SIMPX', 'KOORD', 'LK', 'NX', 'DM', 'DM', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'VVINF', 'ADV', 'VVFIN', 'PPER', 'PDS', 'KON', 'VMFIN', 'PPER', 'ADV', 'KOUS', 'VVPP', 'PPER', 'VAFIN', 'ADV', 'PTKNEG', 'ADV', 'ADJD', 'PWS', 'ART', 'NN', 'ART', 'PWS', 'ART', 'NN', 'ART', 'NN', 'VVFIN', 'KOUS', 'PPER', 'PRF', 'APPRART', 'NN', 'ART', 'NN', 'ADV', 'ADV', 'VVFIN', 'APPR', 'PPER'), 'right siblings': ['DM', 'SIMPX', 'SIMPX'], 'parent': 'SU', 'auto preterminal span': (2, 44), 'span': (13, 14), 'left siblings': ['SIMPX', 'KOORD', 'LK', 'NX'], 'label': 'DM', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU ja gut)
		(SU
			(SIMPX dann wurde ich sagen dann nehme ich das)
			(KOORD und)
			(LK kann)
			(NX ich)
			(ADVX also)
			(DM wie gesagt)
			(SIMPX
				(VF ich)
				(LK war)
				(MF noch nicht ganz sicher)
				[01;31m(NF[00m
					[01;31m(C[00m
						(NX
							(PWS was))[01;31m)[00m
					(NX den ende der)
					(SIMPX
						(NX was)
						(MF
							[01;31m(NX[00m
								(NX das ende)
								(NX der abreise)[01;31m)[00m)
						(VC anging))[01;31m)[00m)
			(SIMPX das ich mich im laufe der woche noch mal melde bei ihnen))
		(SU und dann)))
Step:Unary
{'subtrees': ['NX'], 'family': ['C', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PWS', 'ART', 'NN', 'ART', 'PWS', 'ART', 'NN', 'ART', 'NN', 'VVFIN'), 'right siblings': ['NX', 'SIMPX'], 'parent': 'NF', 'auto preterminal span': (22, 32), 'span': (22, 23), 'left siblings': [], 'label': 'C', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU ja gut)
		(SU
			(SIMPX dann wurde ich sagen dann nehme ich das)
			(KOORD und)
			(LK kann)
			(NX ich)
			(ADVX also)
			(DM wie gesagt)
			(SIMPX
				(VF ich)
				(LK war)
				(MF noch nicht ganz sicher)
				[01;31m(NF[00m
					(NX was)
					(NX den ende der)
					(SIMPX
						(NX was)
						(MF
							[01;31m(NX[00m
								(NX das ende)
								(NX der abreise)[01;31m)[00m)
						(VC anging))[01;31m)[00m)
			(SIMPX das ich mich im laufe der woche noch mal melde bei ihnen))
		(SU und dann)))
Step:Clause Attachment
{'subtrees': ['NX', 'NX', 'SIMPX'], 'family': ['VF', 'LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'ADV', 'PTKNEG', 'ADV', 'ADJD', 'PWS', 'ART', 'NN', 'ART', 'PWS', 'ART', 'NN', 'ART', 'NN', 'VVFIN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (16, 32), 'span': (22, 32), 'left siblings': ['VF', 'LK', 'MF'], 'label': 'NF', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU ja gut)
		(SU
			(SIMPX dann wurde ich sagen dann nehme ich das)
			(KOORD und)
			(LK kann)
			(NX ich)
			(ADVX also)
			(DM wie gesagt)
			(SIMPX
				(VF ich)
				(LK war)
				(MF noch nicht ganz sicher)
				(NX was)
				(NX den ende der)
				(SIMPX
					(NX was)
					(MF
						[01;31m(NX[00m
							(NX das ende)
							(NX der abreise)[01;31m)[00m)
					(VC anging)))
			(SIMPX das ich mich im laufe der woche noch mal melde bei ihnen))
		(SU und dann)))
Step:Unary
{'subtrees': ['NX', 'NX'], 'family': ['NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'ART', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (27, 31), 'span': (27, 31), 'left siblings': [], 'label': 'NX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja gut dann wurde ich sagen dann nehme ich das und kann ich also wie gesagt ich war noch nicht ganz sicher was den ende der was das ende der abreise anging das ich mich im laufe der woche noch mal melde bei ihnen und dann)

Sentence 575:
3 Initial errors
0 on fringe, 2 iterations
2 Error:Single Word Phrase
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU wunderbar)
		(SU wunderbar)
		(SU
			(DM ja)
			[01;31m(DM[00m
				(NX
					(ADVX dann)
					(NX
						(NX alles)
						[01;36m(ADJX[00m [01;31m(NX[00m
							(NN gute)[01;31m)[00m[01;36m)[00m))[01;31m)[00m
			(SIMPX und ich melde mich dann in den nachsten wochen noch mal))))
Step:Single Word Phrase
{'family': ['NX', 'ADJX'], 'auto preterminal span': (5, 6), 'span': (5, 6), 'subtrees': ['NN'], 'parent': 'NX', 'over_word': True, 'auto preterminals': ('NN',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('NX', 'ADJX')}
(TOP
	(TURN
		(SU wunderbar)
		(SU wunderbar)
		(SU
			(DM ja)
			[01;31m(DM[00m
				(NX
					(ADVX dann)
					(NX alles gute))[01;31m)[00m
			(SIMPX und ich melde mich dann in den nachsten wochen noch mal))))
Step:Unary
{'subtrees': ['NX'], 'family': ['DM', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADV', 'PIS', 'NN', 'KON', 'PPER', 'VVFIN', 'PRF', 'ADV', 'APPR', 'ART', 'ADJA', 'NN', 'ADV', 'ADV'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (2, 17), 'span': (3, 6), 'left siblings': ['DM'], 'label': 'DM', 'classified_type': 'Unary', 'type': 'remove'}
(TOP wunderbar wunderbar ja dann alles gute und ich melde mich dann in den nachsten wochen noch mal)

Sentence 576:
0 Initial errors
0 on fringe, 0 iterations

Sentence 577:
9 Initial errors
0 on fringe, 6 iterations
2 Error:Different label
2 Error:NP Attachment
2 Error:UNSET move
1 Error:PP Attachment
1 Error:Single Word Phrase
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU ja das durfte kein problem sein)
		(SU also die zugverbindungen sind wunderbar)
		(SU
			(SIMPX naturlich konnen sie auch fliegen)
			(DM wobei)
			(SIMPX
				(VF da)
				(LK wurde)
				[01;31m(MF[00m
					(NX ich)
					(NX ihnen)
					[01;31m(PX[00m [01;33m(PX[00m
						(PROP von)[01;31m)[00m[01;31m)[00m
				[01;36m(NX[00m [01;31m(VC[00m
					[01;31m(VXINF[00m
						(VVINF abraten)[01;31m)[00m[01;31m)[00m[01;36m)[00m) [01;33mPX)[00m
			(SIMPX das lohnt sich nicht bis hannover)
			[01;31m(SIMPX[00m
				[01;31m(KOORD[00m
					(KON oder)[01;31m)[00m
				[01;36m(SIMPX[00m
					(LK mochten)
					(MF sie das)[01;36m)[00m[01;31m)[00m)))
Step:Different label
{'family': ['VF', 'LK', 'MF', 'NX'], 'auto preterminal span': (22, 23), 'span': (22, 23), 'subtrees': ['VXINF'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('VVINF',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('VC', 'NX')}
(TOP
	(TURN
		(SU ja das durfte kein problem sein)
		(SU also die zugverbindungen sind wunderbar)
		(SU
			(SIMPX naturlich konnen sie auch fliegen)
			(DM wobei)
			(SIMPX
				(VF da)
				(LK wurde)
				[01;31m(MF[00m
					(NX ich)
					(NX ihnen)
					[01;31m(PX[00m [01;33m(PX[00m
						(PROP von)[01;31m)[00m[01;31m)[00m
				(NX
					[01;31m(VXINF[00m
						(VVINF abraten)[01;31m)[00m)) [01;33mPX)[00m
			(SIMPX das lohnt sich nicht bis hannover)
			[01;31m(SIMPX[00m
				[01;31m(KOORD[00m
					(KON oder)[01;31m)[00m
				[01;36m(SIMPX[00m
					(LK mochten)
					(MF sie das)[01;36m)[00m[01;31m)[00m)))
Step:NP Attachment
{'new_parent': 'PX', 'new_family': ['PROP', 'NX'], 'mover info': [('NX', (22, 23))], 'old_family': ['VF', 'LK', 'MF', 'NX'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'PPER', 'PROP', 'VVINF'), 'start right siblings': [], 'end left siblings': ['PROP'], 'auto preterminal span': (17, 23), 'movers': ['NX'], 'old_parent': 'SIMPX', 'POS confusion': ('VVINF', 'VVINF'), 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU ja das durfte kein problem sein)
		(SU also die zugverbindungen sind wunderbar)
		(SU
			(SIMPX naturlich konnen sie auch fliegen)
			(DM wobei)
			(SIMPX
				(VF da)
				(LK wurde)
				[01;31m(MF[00m
					(NX ich)
					(NX ihnen)
					(PX
						(PROP von)
						(NX
							[01;31m(VXINF[00m
								(VVINF abraten)[01;31m)[00m))[01;31m)[00m)
			(SIMPX das lohnt sich nicht bis hannover)
			[01;31m(SIMPX[00m
				[01;31m(KOORD[00m
					(KON oder)[01;31m)[00m
				[01;36m(SIMPX[00m
					(LK mochten)
					(MF sie das)[01;36m)[00m[01;31m)[00m)))
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SIMPX', 'DM', 'SIMPX', 'SIMPX', 'KOORD', 'SIMPX'], 'mover info': [('KOORD', (29, 30))], 'old_family': ['KOORD', 'LK', 'MF'], 'start left siblings': [], 'auto preterminals': ('ADV', 'VMFIN', 'PPER', 'ADV', 'VVINF', 'PWAV', 'ADV', 'VAFIN', 'PPER', 'PPER', 'PROP', 'VVINF', 'PDS', 'VVFIN', 'PRF', 'PTKNEG', 'APPR', 'NE', 'KON', 'VMFIN', 'PPER', 'PDS'), 'start right siblings': ['LK', 'MF'], 'end left siblings': ['SIMPX', 'DM', 'SIMPX', 'SIMPX'], 'auto preterminal span': (11, 33), 'movers': ['KOORD'], 'old_parent': 'SIMPX', 'POS confusion': ('KON', 'KON'), 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU ja das durfte kein problem sein)
		(SU also die zugverbindungen sind wunderbar)
		(SU
			(SIMPX naturlich konnen sie auch fliegen)
			(DM wobei)
			(SIMPX
				(VF da)
				(LK wurde)
				[01;31m(MF[00m
					(NX ich)
					(NX ihnen)
					(PX
						(PROP von)
						(NX
							[01;31m(VXINF[00m
								(VVINF abraten)[01;31m)[00m))[01;31m)[00m)
			(SIMPX das lohnt sich nicht bis hannover)
			[01;31m(KOORD[00m
				(KON oder)[01;31m)[00m
			(SIMPX mochten sie das))))
Step:PP Attachment
{'subtrees': ['NX', 'NX', 'PX'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'PPER', 'PROP', 'VVINF'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (17, 23), 'span': (19, 23), 'left siblings': ['VF', 'LK'], 'label': 'MF', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU ja das durfte kein problem sein)
		(SU also die zugverbindungen sind wunderbar)
		(SU
			(SIMPX naturlich konnen sie auch fliegen)
			(DM wobei)
			(SIMPX
				(VF da)
				(LK wurde)
				(NX ich)
				(NX ihnen)
				(PX
					(PROP von)
					(NX
						[01;31m(VXINF[00m
							(VVINF abraten)[01;31m)[00m)))
			(SIMPX das lohnt sich nicht bis hannover)
			[01;31m(KOORD[00m
				(KON oder)[01;31m)[00m
			(SIMPX mochten sie das))))
Step:Single Word Phrase
{'subtrees': ['VVINF'], 'family': ['VXINF'], 'over_word': True, 'over words': True, 'auto preterminals': ('VVINF',), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (22, 23), 'span': (22, 23), 'left siblings': [], 'label': 'VXINF', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(SU ja das durfte kein problem sein)
		(SU also die zugverbindungen sind wunderbar)
		(SU
			(SIMPX naturlich konnen sie auch fliegen)
			(DM wobei)
			(SIMPX da wurde ich ihnen von abraten)
			(SIMPX das lohnt sich nicht bis hannover)
			[01;31m(KOORD[00m
				(KON oder)[01;31m)[00m
			(SIMPX mochten sie das))))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['SIMPX', 'DM', 'SIMPX', 'SIMPX', 'KOORD', 'SIMPX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADV', 'VMFIN', 'PPER', 'ADV', 'VVINF', 'PWAV', 'ADV', 'VAFIN', 'PPER', 'PPER', 'PROP', 'VVINF', 'PDS', 'VVFIN', 'PRF', 'PTKNEG', 'APPR', 'NE', 'KON', 'VMFIN', 'PPER', 'PDS'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (11, 33), 'span': (29, 30), 'left siblings': ['SIMPX', 'DM', 'SIMPX', 'SIMPX'], 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP ja das durfte kein problem sein also die zugverbindungen sind wunderbar naturlich konnen sie auch fliegen wobei da wurde ich ihnen von abraten das lohnt sich nicht bis hannover oder mochten sie das)

Sentence 578:
15 Initial errors
0 on fringe, 9 iterations
4 Error:Modifier Attachment
2 Error:Single Word Phrase
2 Error:Single Word Phrase
2 Error:Modifier Attachment
1 Error:Unary
1 Error:UNSET remove
1 Error:Modifier Attachment
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU ja naturlich den kann ich ihnen buchen)
		(SU
			[01;31m(SIMPX[00m
				(VF ich)
				(LK schaue)
				(MF mal)
				(VC nach)[01;31m)[00m
			(SIMPX da ist auch noch was frei))
		(SU und wo mochten sie denn wohnen)
		[01;36m(SIMPX[00m
			(SU [01;33m(SIMPX[00m
				[01;31m(SIMPX[00m
					(LK haben)
					[01;31m(MF[00m [01;33m(MF[00m
						(NX sie)
						(ADVX da)
						(ADVX schon)[01;31m)[00m
					[01;36m(ADVX[00m [01;31m(VC[00m
						[01;31m(VXINF[00m
							(VVPP uberlegt)[01;31m)[00m[01;31m)[00m[01;36m)[00m
					[01;31m(NF[00m
						(PX
							(APPR in)
							(NX was fur eine art von hotel))[01;31m)[00m[01;31m)[00m
				[01;31m(ADJX[00m
					[01;36m(ADJX[00m
						(ADJX teuer)
						[01;31m(ADJX[00m
							(ADJD billig)[01;31m)[00m [01;33mMF) SIMPX)[00m[01;36m)[00m
					[01;36m(DM[00m [01;31m(ADJX[00m
						(ADJD zentral)[01;31m)[00m[01;36m)[00m[01;31m)[00m)[01;36m)[00m))
Step:Modifier Attachment
{'new_parent': 'SIMPX', 'new_family': ['LK', 'MF', 'VC', 'NF', 'ADJX', 'ADJX'], 'mover info': [('ADJX', (35, 36)), ('ADJX', (36, 37))], 'old_family': ['ADJX', 'ADJX', 'ADJX'], 'start left siblings': [], 'auto preterminals': ('VAFIN', 'PPER', 'ADV', 'ADV', 'VVPP', 'APPR', 'PWS', 'APPR', 'ART', 'NN', 'APPR', 'NN', 'ADJD', 'ADJD', 'ADJD'), 'start right siblings': ['ADJX'], 'end left siblings': ['LK', 'MF', 'VC', 'NF'], 'auto preterminal span': (23, 38), 'adding node already present': False, 'movers': ['ADJX', 'ADJX'], 'old_parent': 'ADJX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'DM'}
(TOP
	(TURN
		(SU ja naturlich den kann ich ihnen buchen)
		(SU
			[01;31m(SIMPX[00m
				(VF ich)
				(LK schaue)
				(MF mal)
				(VC nach)[01;31m)[00m
			(SIMPX da ist auch noch was frei))
		(SU und wo mochten sie denn wohnen)
		[01;36m(SIMPX[00m
			(SU
				(SIMPX
					(LK haben)
					(MF
						[01;31m(MF[00m
							(NX sie)
							(ADVX da)
							(ADVX schon)[01;31m)[00m
						[01;36m(ADVX[00m [01;31m(VC[00m
							[01;31m(VXINF[00m
								(VVPP uberlegt)[01;31m)[00m[01;31m)[00m[01;36m)[00m
						[01;31m(NF[00m
							(PX
								(APPR in)
								(NX was fur eine art von hotel))[01;31m)[00m
						[01;36m(ADJX[00m
							(ADJX teuer)
							[01;31m(ADJX[00m
								(ADJD billig)[01;31m)[00m[01;36m)[00m))
				[01;36m(DM[00m [01;31m(ADJX[00m
					(ADJD zentral)[01;31m)[00m[01;36m)[00m)[01;36m)[00m))
Step:Single Word Phrase
{'family': ['ADVX'], 'auto preterminal span': (27, 28), 'span': (27, 28), 'subtrees': ['VVPP'], 'parent': 'VC', 'over_word': True, 'auto preterminals': ('VVPP',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VXINF', 'ADVX')}
(TOP
	(TURN
		(SU ja naturlich den kann ich ihnen buchen)
		(SU
			[01;31m(SIMPX[00m
				(VF ich)
				(LK schaue)
				(MF mal)
				(VC nach)[01;31m)[00m
			(SIMPX da ist auch noch was frei))
		(SU und wo mochten sie denn wohnen)
		[01;36m(SIMPX[00m
			(SU
				(SIMPX
					(LK haben)
					(MF
						[01;31m(MF[00m
							(NX sie)
							(ADVX da)
							(ADVX schon)[01;31m)[00m
						[01;31m(VC[00m
							(ADVX
								(VVPP uberlegt))[01;31m)[00m
						[01;31m(NF[00m
							(PX
								(APPR in)
								(NX was fur eine art von hotel))[01;31m)[00m
						[01;36m(ADJX[00m
							(ADJX teuer)
							[01;31m(ADJX[00m
								(ADJD billig)[01;31m)[00m[01;36m)[00m))
				[01;36m(DM[00m [01;31m(ADJX[00m
					(ADJD zentral)[01;31m)[00m[01;36m)[00m)[01;36m)[00m))
Step:Single Word Phrase
{'family': ['SIMPX', 'DM'], 'auto preterminal span': (37, 38), 'span': (37, 38), 'subtrees': ['ADJD'], 'parent': 'SU', 'over_word': True, 'auto preterminals': ('ADJD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'DM')}
(TOP
	(TURN
		(SU ja naturlich den kann ich ihnen buchen)
		(SU
			[01;31m(SIMPX[00m
				(VF ich)
				(LK schaue)
				(MF mal)
				(VC nach)[01;31m)[00m
			(SIMPX da ist auch noch was frei))
		(SU und wo mochten sie denn wohnen)
		[01;36m(SIMPX[00m
			(SU
				(SIMPX
					(LK haben)
					(MF
						[01;31m(MF[00m
							(NX sie)
							(ADVX da)
							(ADVX schon)[01;31m)[00m
						[01;31m(VC[00m
							(ADVX
								(VVPP uberlegt))[01;31m)[00m
						[01;31m(NF[00m
							(PX
								(APPR in)
								(NX was fur eine art von hotel))[01;31m)[00m
						[01;36m(ADJX[00m
							(ADJX teuer)
							[01;31m(ADJX[00m
								(ADJD billig)[01;31m)[00m[01;36m)[00m))
				(DM zentral))[01;36m)[00m))
Step:Modifier Attachment
{'new_parent': 'ADJX', 'new_family': ['ADJX', 'ADJD'], 'mover info': [('ADJX', (35, 36))], 'old_family': ['MF', 'VC', 'NF', 'ADJX', 'ADJX'], 'start left siblings': ['MF', 'VC', 'NF'], 'auto preterminals': ('PPER', 'ADV', 'ADV', 'VVPP', 'APPR', 'PWS', 'APPR', 'ART', 'NN', 'APPR', 'NN', 'ADJD', 'ADJD'), 'start right siblings': ['ADJX'], 'end left siblings': [], 'auto preterminal span': (24, 37), 'movers': ['ADJX'], 'old_parent': 'MF', 'POS confusion': ('ADJD', 'ADJD'), 'end right siblings': ['ADJD'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU ja naturlich den kann ich ihnen buchen)
		(SU
			[01;31m(SIMPX[00m
				(VF ich)
				(LK schaue)
				(MF mal)
				(VC nach)[01;31m)[00m
			(SIMPX da ist auch noch was frei))
		(SU und wo mochten sie denn wohnen)
		[01;36m(SIMPX[00m
			(SU
				(SIMPX
					(LK haben)
					(MF
						[01;31m(MF[00m
							(NX sie)
							(ADVX da)
							(ADVX schon)[01;31m)[00m
						[01;31m(VC[00m
							(ADVX
								(VVPP uberlegt))[01;31m)[00m
						[01;31m(NF[00m
							(PX
								(APPR in)
								(NX was fur eine art von hotel))[01;31m)[00m
						(ADJX teuer billig)))
				(DM zentral))[01;36m)[00m))
Step:Unary
{'subtrees': ['SU'], 'family': ['SU', 'SU', 'SU', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'PPER', 'ADV', 'ADV', 'VVPP', 'APPR', 'PWS', 'APPR', 'ART', 'NN', 'APPR', 'NN', 'ADJD', 'ADJD', 'ADJD'), 'right siblings': [], 'left siblings': [(SU (DM (PTKANT ja)) (DM (ITJ naturlich)) (SIMPX (VF (NX (PDS den))) (LK (VXFIN (VMFIN kann))) (MF (NX (PPER ich)) (NX (PPER ihnen))) (VC (VXINF (VVINF buchen))))), (SU (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN schaue))) (MF (ADVX (ADV mal))) (VC (PTKVZ nach))) (SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VAFIN ist))) (MF (ADVX (ADV auch)) (ADVX (ADV noch)) (NX (PIS was)) (ADJX (ADJD frei))))), (SU (SIMPX (KOORD (KON und)) (VF (PX (PWAV wo))) (LK (VXFIN (VMFIN mochten))) (MF (NX (PPER sie)) (ADVX (ADV denn))) (VC (VXINF (VVINF wohnen)))))], 'auto preterminal span': (23, 38), 'span': (23, 38), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU ja naturlich den kann ich ihnen buchen)
		(SU
			[01;31m(SIMPX[00m
				(VF ich)
				(LK schaue)
				(MF mal)
				(VC nach)[01;31m)[00m
			(SIMPX da ist auch noch was frei))
		(SU und wo mochten sie denn wohnen)
		(SIMPX
			(SU
				(SIMPX
					(LK haben)
					(MF
						[01;31m(MF[00m
							(NX sie)
							(ADVX da)
							(ADVX schon)[01;31m)[00m
						[01;31m(VC[00m
							(ADVX
								(VVPP uberlegt))[01;31m)[00m
						[01;31m(NF[00m
							(PX
								(APPR in)
								(NX was fur eine art von hotel))[01;31m)[00m
						(ADJX teuer billig)))
				(DM zentral)))))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'PTKVZ', 'ADV', 'VAFIN', 'ADV', 'ADV', 'PIS', 'ADJD'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (7, 17), 'span': (7, 11), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU ja naturlich den kann ich ihnen buchen)
		(SU ich schaue mal nach da ist auch noch was frei)
		(SU und wo mochten sie denn wohnen)
		(SIMPX
			(SU
				(SIMPX
					(LK haben)
					(MF
						[01;31m(MF[00m
							(NX sie)
							(ADVX da)
							(ADVX schon)[01;31m)[00m
						[01;31m(VC[00m
							(ADVX
								(VVPP uberlegt))[01;31m)[00m
						[01;31m(NF[00m
							(PX
								(APPR in)
								(NX was fur eine art von hotel))[01;31m)[00m
						(ADJX teuer billig)))
				(DM zentral)))))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADVX', 'ADVX'], 'family': ['MF', 'VC', 'NF', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV', 'ADV', 'VVPP', 'APPR', 'PWS', 'APPR', 'ART', 'NN', 'APPR', 'NN', 'ADJD', 'ADJD'), 'right siblings': ['VC', 'NF', 'ADJX'], 'parent': 'MF', 'auto preterminal span': (24, 37), 'span': (24, 27), 'left siblings': [], 'label': 'MF', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU ja naturlich den kann ich ihnen buchen)
		(SU ich schaue mal nach da ist auch noch was frei)
		(SU und wo mochten sie denn wohnen)
		(SIMPX
			(SU
				(SIMPX
					(LK haben)
					(MF
						(NX sie)
						(ADVX da)
						(ADVX schon)
						[01;31m(VC[00m
							(ADVX
								(VVPP uberlegt))[01;31m)[00m
						[01;31m(NF[00m
							(PX
								(APPR in)
								(NX was fur eine art von hotel))[01;31m)[00m
						(ADJX teuer billig)))
				(DM zentral)))))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['NX', 'ADVX', 'ADVX', 'VC', 'NF', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV', 'ADV', 'VVPP', 'APPR', 'PWS', 'APPR', 'ART', 'NN', 'APPR', 'NN', 'ADJD', 'ADJD'), 'right siblings': ['NF', 'ADJX'], 'parent': 'MF', 'auto preterminal span': (24, 37), 'span': (27, 28), 'left siblings': ['NX', 'ADVX', 'ADVX'], 'label': 'VC', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU ja naturlich den kann ich ihnen buchen)
		(SU ich schaue mal nach da ist auch noch was frei)
		(SU und wo mochten sie denn wohnen)
		(SIMPX
			(SU
				(SIMPX
					(LK haben)
					(MF
						(NX sie)
						(ADVX da)
						(ADVX schon)
						(ADVX uberlegt)
						[01;31m(NF[00m
							(PX
								(APPR in)
								(NX was fur eine art von hotel))[01;31m)[00m
						(ADJX teuer billig)))
				(DM zentral)))))
Step:Unary
{'subtrees': ['PX'], 'family': ['NX', 'ADVX', 'ADVX', 'ADVX', 'NF', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV', 'ADV', 'VVPP', 'APPR', 'PWS', 'APPR', 'ART', 'NN', 'APPR', 'NN', 'ADJD', 'ADJD'), 'right siblings': ['ADJX'], 'parent': 'MF', 'auto preterminal span': (24, 37), 'span': (28, 35), 'left siblings': ['NX', 'ADVX', 'ADVX', 'ADVX'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja naturlich den kann ich ihnen buchen ich schaue mal nach da ist auch noch was frei und wo mochten sie denn wohnen haben sie da schon uberlegt in was fur eine art von hotel teuer billig zentral)

Sentence 579:
7 Initial errors
0 on fringe, 4 iterations
2 Error:Single Word Phrase
2 Error:Single Word Phrase
2 Error:Modifier Attachment
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(NX
				(ART das)
				[01;31m(NX[00m
					[01;36m(ADJX[00m [01;31m(NX[00m
						(NE zentralhotel)[01;31m)[00m[01;36m)[00m
					(NX kaiserhof)[01;31m)[00m))
		(SU
			(DM ja)
			(SIMPX das ist auch ein sehr schones hotel)
			(DM also)
			(SIMPX
				(LK ist)
				(MF auch mit aufenthaltsraumen und konferenzraumen)
				(NF
					(SIMPX
						(C wenn)
						(MF
							(NX sie)
							[01;31m(ADVX[00m
								[01;36m(ADVX[00m [01;31m(ADJX[00m
									(ADJD geschaftlich)[01;31m)[00m[01;36m)[00m
								[01;36m(ADVX[00m
									(ADV unterwegs)[01;36m)[00m[01;31m)[00m)
						(VC sind)))))))
Step:Single Word Phrase
{'family': ['ADJX', 'NX'], 'auto preterminal span': (1, 2), 'span': (1, 2), 'subtrees': ['NE'], 'parent': 'NX', 'over_word': True, 'auto preterminals': ('NE',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('NX', 'ADJX')}
(TOP
	(TURN
		(SU
			(NX
				(ART das)
				[01;31m(NX[00m
					(ADJX zentralhotel)
					(NX kaiserhof)[01;31m)[00m))
		(SU
			(DM ja)
			(SIMPX das ist auch ein sehr schones hotel)
			(DM also)
			(SIMPX
				(LK ist)
				(MF auch mit aufenthaltsraumen und konferenzraumen)
				(NF
					(SIMPX
						(C wenn)
						(MF
							(NX sie)
							[01;31m(ADVX[00m
								[01;36m(ADVX[00m [01;31m(ADJX[00m
									(ADJD geschaftlich)[01;31m)[00m[01;36m)[00m
								[01;36m(ADVX[00m
									(ADV unterwegs)[01;36m)[00m[01;31m)[00m)
						(VC sind)))))))
Step:Single Word Phrase
{'family': ['ADVX', 'ADV'], 'auto preterminal span': (20, 21), 'span': (20, 21), 'subtrees': ['ADJD'], 'parent': 'ADVX', 'over_word': True, 'auto preterminals': ('ADJD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'ADVX')}
(TOP
	(TURN
		(SU
			(NX
				(ART das)
				[01;31m(NX[00m
					(ADJX zentralhotel)
					(NX kaiserhof)[01;31m)[00m))
		(SU
			(DM ja)
			(SIMPX das ist auch ein sehr schones hotel)
			(DM also)
			(SIMPX
				(LK ist)
				(MF auch mit aufenthaltsraumen und konferenzraumen)
				(NF
					(SIMPX
						(C wenn)
						(MF
							(NX sie)
							[01;31m(ADVX[00m
								(ADVX geschaftlich)
								[01;36m(ADVX[00m
									(ADV unterwegs)[01;36m)[00m[01;31m)[00m)
						(VC sind)))))))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'ADVX', 'ADVX'], 'mover info': [('ADVX', (20, 21))], 'old_family': ['ADVX', 'ADV'], 'start left siblings': [], 'auto preterminals': ('PPER', 'ADJD', 'ADV'), 'start right siblings': ['ADV'], 'end left siblings': ['NX'], 'auto preterminal span': (19, 22), 'movers': ['ADVX'], 'old_parent': 'ADVX', 'POS confusion': ('ADJD', 'ADJD'), 'end right siblings': ['ADVX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU
			(NX
				(ART das)
				[01;31m(NX[00m
					(ADJX zentralhotel)
					(NX kaiserhof)[01;31m)[00m))
		(SU ja das ist auch ein sehr schones hotel also ist auch mit aufenthaltsraumen und konferenzraumen wenn sie geschaftlich unterwegs sind)))
Step:UNSET remove
{'subtrees': ['ADJX', 'NX'], 'family': ['ART', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NE', 'NE'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (0, 3), 'span': (1, 3), 'left siblings': ['ART'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP das zentralhotel kaiserhof ja das ist auch ein sehr schones hotel also ist auch mit aufenthaltsraumen und konferenzraumen wenn sie geschaftlich unterwegs sind)

Sentence 580:
0 Initial errors
0 on fringe, 0 iterations

Sentence 581:
9 Initial errors
0 on fringe, 4 iterations
3 Error:PP Attachment
2 Error:Single Word Phrase
2 Error:Modifier Attachment
2 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU guten tag)
		(SU
			(SIMPX
				(VF ich)
				(LK bin)
				[01;31m(MF[00m
					[01;31m(NX[00m
						[01;36m(MF[00m
							(NX
								(NN frau)
								(NE bartels))[01;36m)[00m
						(PX [01;33m(PX[00m
							(APPRART vom)
							[01;31m(NX[00m
								[01;31m(NX[00m
									(NX reiseburo) [01;33mPX)[00m
									[01;36m(ADJX[00m [01;31m(NX[00m [01;33m(ADJX[00m
										(NE zentral)[01;31m)[00m[01;36m)[00m[01;31m)[00m
								(PX in hannover)[01;31m)[00m)[01;31m)[00m[01;31m)[00m)))) [01;33mADJX)[00m
Step:PP Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'PX'], 'mover info': [('PX', (6, 11))], 'old_family': ['NX', 'PX'], 'start left siblings': ['NX'], 'auto preterminals': ('PPER', 'VAFIN', 'NN', 'NE', 'APPRART', 'NN', 'NE', 'APPR', 'NE'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (2, 11), 'movers': ['PX'], 'old_parent': 'NX', 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU guten tag)
		(SU
			(SIMPX
				(VF ich)
				(LK bin)
				(MF frau bartels)
				(PX [01;33m(PX[00m
					(APPRART vom)
					[01;31m(NX[00m
						[01;31m(NX[00m
							(NX reiseburo) [01;33mPX)[00m
							[01;36m(ADJX[00m [01;31m(NX[00m [01;33m(ADJX[00m
								(NE zentral)[01;31m)[00m[01;36m)[00m[01;31m)[00m
						(PX in hannover)[01;31m)[00m))))) [01;33mADJX)[00m
Step:Single Word Phrase
{'family': ['NX', 'ADJX'], 'auto preterminal span': (8, 9), 'span': (8, 9), 'subtrees': ['NE'], 'parent': 'NX', 'over_word': True, 'auto preterminals': ('NE',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('NX', 'ADJX')}
(TOP
	(TURN
		(SU guten tag)
		(SU
			(SIMPX
				(VF ich)
				(LK bin)
				(MF frau bartels)
				(PX [01;33m(PX[00m
					(APPRART vom)
					[01;31m(NX[00m
						[01;31m(NX[00m
							(NX reiseburo) [01;33mPX)[00m
							[01;33m(ADJX[00m (ADJX zentral)[01;31m)[00m
						(PX in hannover)[01;31m)[00m))))) [01;33mADJX)[00m
Step:Modifier Attachment
{'new_parent': 'NX', 'new_family': ['NX', 'ADJX', 'PX'], 'mover info': [('ADJX', (8, 9))], 'old_family': ['NX', 'ADJX'], 'start left siblings': ['NX'], 'auto preterminals': ('NN', 'NE', 'APPR', 'NE'), 'start right siblings': [], 'end left siblings': ['NX'], 'auto preterminal span': (7, 11), 'adding node already present': False, 'movers': ['ADJX'], 'old_parent': 'NX', 'POS confusion': ('NE', 'NE'), 'added and moved': True, 'end right siblings': ['PX'], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'ADJX'}
(TOP
	(TURN
		(SU guten tag)
		(SU
			(SIMPX
				(VF ich)
				(LK bin)
				(MF frau bartels)
				(PX [01;33m(PX[00m
					(APPRART vom)
					[01;31m(NX[00m
						(NX reiseburo) [01;33mPX)[00m
						(ADJX zentral in hannover)[01;31m)[00m)))))
Step:Modifier Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'PX', 'ADJX'], 'mover info': [('ADJX', (8, 11))], 'old_family': ['NX', 'ADJX'], 'start left siblings': ['NX'], 'auto preterminals': ('PPER', 'VAFIN', 'NN', 'NE', 'APPRART', 'NN', 'NE', 'APPR', 'NE'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'MF', 'PX'], 'auto preterminal span': (2, 11), 'adding node already present': False, 'movers': ['ADJX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'PX'}
(TOP guten tag ich bin frau bartels vom reiseburo zentral in hannover)

Sentence 582:
6 Initial errors
0 on fringe, 4 iterations
3 Error:NP Internal Structure
1 Error:Unary
1 Error:NP Internal Structure
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU ja)
		(SU
			(SIMPX
				(VF
					(NX
						(NX eines)
						[01;36m(VF[00m
							(NX
								(ART der)
								(NN hotels))[01;36m)[00m))
				(LK ist)
				(MF [01;33m(NX[00m
					(NX
						(ART das)
						[01;31m(NX[00m
							[01;31m(NX[00m
								(NE grandhotel)[01;31m)[00m [01;33mNX)[00m
							(NX musmann)[01;31m)[00m)))
			(SIMPX das liegt sehr zentral))
		(SU
			[01;31m(SIMPX[00m
				(VF und platze haben die auch noch)
				(LK sehe)
				(MF ich)[01;31m)[00m
			(DM ja)
			(SIMPX
				(LK kostet)
				(MF
					(ADVX dann)
					[01;36m(NX[00m
						(NX einzelzimmer)
						(NX dreihundert funfzig die nacht)[01;36m)[00m)))))
Step:NP Internal Structure
{'new_parent': 'NX', 'new_family': ['ART', 'NE'], 'mover info': [('ART', (5, 6))], 'old_family': ['ART', 'NX'], 'start left siblings': [], 'auto preterminals': ('ART', 'NE', 'NE'), 'start right siblings': ['NX'], 'end left siblings': [], 'auto preterminal span': (5, 8), 'movers': ['ART'], 'old_parent': 'NX', 'POS confusion': ('ART', 'ART'), 'end right siblings': ['NE'], 'classified_type': 'NP Internal Structure', 'type': 'move'}
(TOP
	(TURN
		(SU ja)
		(SU
			(SIMPX
				(VF
					(NX
						(NX eines)
						[01;36m(VF[00m
							(NX
								(ART der)
								(NN hotels))[01;36m)[00m))
				(LK ist)
				(MF das grandhotel musmann))
			(SIMPX das liegt sehr zentral))
		(SU
			[01;31m(SIMPX[00m
				(VF und platze haben die auch noch)
				(LK sehe)
				(MF ich)[01;31m)[00m
			(DM ja)
			(SIMPX
				(LK kostet)
				(MF
					(ADVX dann)
					[01;36m(NX[00m
						(NX einzelzimmer)
						(NX dreihundert funfzig die nacht)[01;36m)[00m)))))
Step:Unary
{'subtrees': ['NX'], 'family': ['NX', 'VF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN'), 'right siblings': [], 'left siblings': [(NX (PIS eines))], 'auto preterminal span': (2, 4), 'span': (2, 4), 'parent': 'NX', 'label': 'VF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU ja)
		(SU eines der hotels ist das grandhotel musmann das liegt sehr zentral)
		(SU
			[01;31m(SIMPX[00m
				(VF und platze haben die auch noch)
				(LK sehe)
				(MF ich)[01;31m)[00m
			(DM ja)
			(SIMPX
				(LK kostet)
				(MF
					(ADVX dann)
					[01;36m(NX[00m
						(NX einzelzimmer)
						(NX dreihundert funfzig die nacht)[01;36m)[00m)))))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'CARD', 'CARD', 'ART', 'NN'), 'right siblings': [], 'left siblings': [(ADVX (ADV dann))], 'auto preterminal span': (23, 28), 'span': (23, 28), 'parent': 'MF', 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'add'}
(TOP
	(TURN
		(SU ja)
		(SU eines der hotels ist das grandhotel musmann das liegt sehr zentral)
		(SU
			[01;31m(SIMPX[00m
				(VF und platze haben die auch noch)
				(LK sehe)
				(MF ich)[01;31m)[00m
			(DM ja)
			(SIMPX kostet dann einzelzimmer dreihundert funfzig die nacht))))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['SIMPX', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'NN', 'VAFIN', 'PDS', 'ADV', 'ADV', 'VVFIN', 'PPER', 'PTKANT', 'VVFIN', 'ADV', 'NN', 'CARD', 'CARD', 'ART', 'NN'), 'right siblings': ['DM', 'SIMPX'], 'parent': 'SU', 'auto preterminal span': (12, 28), 'span': (12, 20), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ja eines der hotels ist das grandhotel musmann das liegt sehr zentral und platze haben die auch noch sehe ich ja kostet dann einzelzimmer dreihundert funfzig die nacht)

Sentence 583:
4 Initial errors
0 on fringe, 3 iterations
2 Error:Single Word Phrase
1 Error:UNSET remove
1 Error:NP Internal Structure
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(PX
				[01;31m(PX[00m
					(APPR mit)
					[01;33m(NX[00m (NX bad)[01;31m)[00m
				[01;36m(NX[00m [01;31m(ADVX[00m
					(ADV naturlich)[01;31m)[00m[01;36m)[00m)) [01;33mNX)[00m
		(SU ja)
		(SU soll ich das jetzt fur sie buchen)
		(SU dann)))
Step:Single Word Phrase
{'family': ['PX', 'NX'], 'auto preterminal span': (2, 3), 'span': (2, 3), 'subtrees': ['ADV'], 'parent': 'PX', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'NX')}
(TOP
	(TURN
		(SU
			(PX
				[01;31m(PX[00m
					(APPR mit)
					[01;33m(NX[00m (NX bad)[01;31m)[00m
				(NX naturlich))) [01;33mNX)[00m
		(SU ja)
		(SU soll ich das jetzt fur sie buchen)
		(SU dann)))
Step:UNSET remove
{'subtrees': ['APPR', 'NX'], 'family': ['PX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'NN', 'ADV'), 'right siblings': ['NX'], 'parent': 'PX', 'auto preterminal span': (0, 3), 'span': (0, 2), 'left siblings': [], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(PX
				(APPR mit)
				[01;36m(NX[00m
					(NX bad)
					(NX naturlich)[01;36m)[00m))
		(SU ja)
		(SU soll ich das jetzt fur sie buchen)
		(SU dann)))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['APPR', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'ADV'), 'right siblings': [], 'left siblings': [(APPR mit)], 'auto preterminal span': (1, 3), 'span': (1, 3), 'parent': 'PX', 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'add'}
(TOP mit bad naturlich ja soll ich das jetzt fur sie buchen dann)

Sentence 584:
17 Initial errors
0 on fringe, 12 iterations
2 Error:Different label
2 Error:Different label
2 Error:Co-ordination
2 Error:UNSET move
2 Error:Co-ordination
1 Error:Clause Attachment
1 Error:Single Word Phrase
1 Error:NP Internal Structure
1 Error:UNSET add
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU dreieinhalb stunden fahren sie)
		(SU
			[01;31m(SIMPX[00m
				[01;36m(LKMVC[00m [01;31m(SIMPX[00m
					(LK kommen)
					(MF dann am hauptbahnhof)
					(VC an)[01;31m)[00m[01;36m)[00m
				(KON und)
				[01;36m(LKM[00m
					[01;36m(LKMVC[00m [01;31m(SIMPX[00m
						(LK konnen)
						(MF ja dann ein taxi)
						(VC nehmen)[01;31m)[00m[01;36m)[00m
					[01;36m(SIMPX[00m
						[01;36m(KOORD[00m
							(KON und)[01;36m)[00m
						[01;31m(SIMPX[00m
							(LK kommen)
							(MF direkt zum hotel)[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;31m)[00m)
		(SU
			(DM ja)
			[01;31m(SIMPX[00m
				(VF dann)
				(LK buche)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX ich)
					(NX das)
					(PX fur sie)[01;31m)[00m[01;31m)[00m
			[01;31m(DM[00m [01;33m(NX[00m
				(NX
					(NN herr)
					[01;31m(NX[00m
						(NE obrowski) [01;33mNX)[00m
						(KON und)
						[01;36m(NX[00m
							(NE oborski)[01;36m)[00m[01;31m)[00m)[01;31m)[00m [01;33mMF)[00m
			(SIMPX
				[01;36m(SIMPX[00m
					(KOORD und)
					(VF dann)
					(LK muste)
					(MF ich nur von ihnen noch die kontonummer)
					(VC haben)[01;36m)[00m
				(NF und die formalitaten)))))
Step:Different label
{'family': ['LKMVC', 'KON', 'SIMPX', 'KON', 'SIMPX'], 'auto preterminal span': (4, 9), 'span': (4, 9), 'subtrees': ['LK', 'MF', 'VC'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('VVFIN', 'ADV', 'APPRART', 'NN', 'PTKVZ'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('SIMPX', 'LKMVC')}
(TOP
	(TURN
		(SU dreieinhalb stunden fahren sie)
		(SU
			[01;31m(SIMPX[00m
				(LKMVC kommen dann am hauptbahnhof an)
				(KON und)
				[01;36m(LKM[00m
					[01;36m(LKMVC[00m [01;31m(SIMPX[00m
						(LK konnen)
						(MF ja dann ein taxi)
						(VC nehmen)[01;31m)[00m[01;36m)[00m
					[01;36m(SIMPX[00m
						[01;36m(KOORD[00m
							(KON und)[01;36m)[00m
						[01;31m(SIMPX[00m
							(LK kommen)
							(MF direkt zum hotel)[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;31m)[00m)
		(SU
			(DM ja)
			[01;31m(SIMPX[00m
				(VF dann)
				(LK buche)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX ich)
					(NX das)
					(PX fur sie)[01;31m)[00m[01;31m)[00m
			[01;31m(DM[00m [01;33m(NX[00m
				(NX
					(NN herr)
					[01;31m(NX[00m
						(NE obrowski) [01;33mNX)[00m
						(KON und)
						[01;36m(NX[00m
							(NE oborski)[01;36m)[00m[01;31m)[00m)[01;31m)[00m [01;33mMF)[00m
			(SIMPX
				[01;36m(SIMPX[00m
					(KOORD und)
					(VF dann)
					(LK muste)
					(MF ich nur von ihnen noch die kontonummer)
					(VC haben)[01;36m)[00m
				(NF und die formalitaten)))))
Step:Different label
{'family': ['LKMVC', 'KON', 'LKMVC', 'KON', 'SIMPX'], 'auto preterminal span': (10, 16), 'span': (10, 16), 'subtrees': ['LK', 'MF', 'VC'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('VMFIN', 'ADV', 'ADV', 'ART', 'NN', 'VVINF'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('SIMPX', 'LKMVC')}
(TOP
	(TURN
		(SU dreieinhalb stunden fahren sie)
		(SU
			[01;31m(SIMPX[00m
				(LKMVC kommen dann am hauptbahnhof an)
				(KON und)
				[01;36m(LKM[00m
					(LKMVC konnen ja dann ein taxi nehmen)
					[01;36m(SIMPX[00m
						[01;36m(KOORD[00m
							(KON und)[01;36m)[00m
						[01;31m(SIMPX[00m
							(LK kommen)
							(MF direkt zum hotel)[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;31m)[00m)
		(SU
			(DM ja)
			[01;31m(SIMPX[00m
				(VF dann)
				(LK buche)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX ich)
					(NX das)
					(PX fur sie)[01;31m)[00m[01;31m)[00m
			[01;31m(DM[00m [01;33m(NX[00m
				(NX
					(NN herr)
					[01;31m(NX[00m
						(NE obrowski) [01;33mNX)[00m
						(KON und)
						[01;36m(NX[00m
							(NE oborski)[01;36m)[00m[01;31m)[00m)[01;31m)[00m [01;33mMF)[00m
			(SIMPX
				[01;36m(SIMPX[00m
					(KOORD und)
					(VF dann)
					(LK muste)
					(MF ich nur von ihnen noch die kontonummer)
					(VC haben)[01;36m)[00m
				(NF und die formalitaten)))))
Step:Co-ordination
{'new_parent': 'SU', 'new_family': ['LKMVC', 'KON', 'LKMVC', 'SIMPX'], 'mover info': [('LKMVC', (4, 9)), ('KON', (9, 10)), ('LKMVC', (10, 16))], 'old_family': ['LKMVC', 'KON', 'LKMVC', 'KON', 'SIMPX'], 'start left siblings': [], 'auto preterminals': ('VVFIN', 'ADV', 'APPRART', 'NN', 'PTKVZ', 'KON', 'VMFIN', 'ADV', 'ADV', 'ART', 'NN', 'VVINF', 'KON', 'VVFIN', 'ADV', 'APPRART', 'NN'), 'start right siblings': ['KON', 'SIMPX'], 'end left siblings': [], 'auto preterminal span': (4, 21), 'movers': ['LKMVC', 'KON', 'LKMVC'], 'old_parent': 'SIMPX', 'end right siblings': ['SIMPX'], 'classified_type': 'Co-ordination', 'type': 'move'}
(TOP
	(TURN
		(SU dreieinhalb stunden fahren sie)
		(SU
			(LKMVC kommen dann am hauptbahnhof an)
			(KON und)
			[01;36m(LKM[00m
				(LKMVC konnen ja dann ein taxi nehmen)
				(SIMPX
					[01;36m(KOORD[00m
						(KON und)[01;36m)[00m
					[01;31m(SIMPX[00m
						(LK kommen)
						(MF direkt zum hotel)[01;31m)[00m)[01;36m)[00m)
		(SU
			(DM ja)
			[01;31m(SIMPX[00m
				(VF dann)
				(LK buche)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX ich)
					(NX das)
					(PX fur sie)[01;31m)[00m[01;31m)[00m
			[01;31m(DM[00m [01;33m(NX[00m
				(NX
					(NN herr)
					[01;31m(NX[00m
						(NE obrowski) [01;33mNX)[00m
						(KON und)
						[01;36m(NX[00m
							(NE oborski)[01;36m)[00m[01;31m)[00m)[01;31m)[00m [01;33mMF)[00m
			(SIMPX
				[01;36m(SIMPX[00m
					(KOORD und)
					(VF dann)
					(LK muste)
					(MF ich nur von ihnen noch die kontonummer)
					(VC haben)[01;36m)[00m
				(NF und die formalitaten)))))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['NX', 'NX', 'PX', 'DM'], 'mover info': [('DM', (28, 32))], 'old_family': ['DM', 'SIMPX', 'DM', 'SIMPX'], 'start left siblings': ['DM', 'SIMPX'], 'auto preterminals': ('PTKANT', 'ADV', 'VVFIN', 'PPER', 'PDS', 'APPR', 'PPER', 'NN', 'NE', 'KON', 'NE', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'APPR', 'PPER', 'ADV', 'ART', 'NN', 'VAINF', 'KON', 'ART', 'NN'), 'start right siblings': ['SIMPX'], 'end left siblings': ['NX', 'NX', 'PX'], 'auto preterminal span': (21, 46), 'movers': ['DM'], 'old_parent': 'SU', 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU dreieinhalb stunden fahren sie)
		(SU
			(LKMVC kommen dann am hauptbahnhof an)
			(KON und)
			[01;36m(LKM[00m
				(LKMVC konnen ja dann ein taxi nehmen)
				(SIMPX
					[01;36m(KOORD[00m
						(KON und)[01;36m)[00m
					[01;31m(SIMPX[00m
						(LK kommen)
						(MF direkt zum hotel)[01;31m)[00m)[01;36m)[00m)
		(SU
			(DM ja)
			[01;31m(SIMPX[00m
				(VF dann)
				(LK buche)
				(MF
					(NX ich)
					(NX das)
					(PX fur sie)
					[01;31m(DM[00m [01;33m(NX[00m
						(NX
							(NN herr)
							[01;31m(NX[00m
								(NE obrowski) [01;33mNX)[00m
								(KON und)
								[01;36m(NX[00m
									(NE oborski)[01;36m)[00m[01;31m)[00m)[01;31m)[00m)[01;31m)[00m
			(SIMPX
				[01;36m(SIMPX[00m
					(KOORD und)
					(VF dann)
					(LK muste)
					(MF ich nur von ihnen noch die kontonummer)
					(VC haben)[01;36m)[00m
				(NF und die formalitaten)))))
Step:Co-ordination
{'new_parent': 'NX', 'new_family': ['NN', 'NE', 'KON', 'NX'], 'mover info': [('NE', (29, 30)), ('KON', (30, 31))], 'old_family': ['NE', 'KON', 'NE'], 'start left siblings': [], 'auto preterminals': ('NN', 'NE', 'KON', 'NE'), 'start right siblings': ['NE'], 'end left siblings': ['NN'], 'auto preterminal span': (28, 32), 'movers': ['NE', 'KON'], 'old_parent': 'NX', 'end right siblings': ['NX'], 'classified_type': 'Co-ordination', 'type': 'move'}
(TOP
	(TURN
		(SU dreieinhalb stunden fahren sie)
		(SU
			(LKMVC kommen dann am hauptbahnhof an)
			(KON und)
			[01;36m(LKM[00m
				(LKMVC konnen ja dann ein taxi nehmen)
				(SIMPX
					[01;36m(KOORD[00m
						(KON und)[01;36m)[00m
					[01;31m(SIMPX[00m
						(LK kommen)
						(MF direkt zum hotel)[01;31m)[00m)[01;36m)[00m)
		(SU
			(DM ja)
			[01;31m(SIMPX[00m
				(VF dann)
				(LK buche)
				(MF
					(NX ich)
					(NX das)
					(PX fur sie)
					[01;31m(DM[00m
						(NX
							[01;36m(NX[00m
								(NN herr)
								(NE obrowski)[01;36m)[00m
							(KON und)
							(NX oborski))[01;31m)[00m)[01;31m)[00m
			(SIMPX
				[01;36m(SIMPX[00m
					(KOORD und)
					(VF dann)
					(LK muste)
					(MF ich nur von ihnen noch die kontonummer)
					(VC haben)[01;36m)[00m
				(NF und die formalitaten)))))
Step:Clause Attachment
{'subtrees': ['LKMVC', 'SIMPX'], 'family': ['LKMVC', 'KON', 'LKM'], 'over_word': False, 'over words': False, 'auto preterminals': ('VMFIN', 'ADV', 'ADV', 'ART', 'NN', 'VVINF', 'KON', 'VVFIN', 'ADV', 'APPRART', 'NN'), 'right siblings': [], 'left siblings': [(LKMVC (LK (VXFIN (VVFIN kommen))) (MF (ADVX (ADV dann)) (PX (APPRART am) (NX (NN hauptbahnhof)))) (VC (PTKVZ an))), (KON und)], 'auto preterminal span': (10, 21), 'span': (10, 21), 'parent': 'SU', 'label': 'LKM', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU dreieinhalb stunden fahren sie)
		(SU
			(LKMVC kommen dann am hauptbahnhof an)
			(KON und)
			(LKM
				(LKMVC konnen ja dann ein taxi nehmen)
				(SIMPX
					[01;36m(KOORD[00m
						(KON und)[01;36m)[00m
					[01;31m(SIMPX[00m
						(LK kommen)
						(MF direkt zum hotel)[01;31m)[00m)))
		(SU
			(DM ja)
			[01;31m(SIMPX[00m
				(VF dann)
				(LK buche)
				(MF
					(NX ich)
					(NX das)
					(PX fur sie)
					[01;31m(DM[00m
						(NX
							[01;36m(NX[00m
								(NN herr)
								(NE obrowski)[01;36m)[00m
							(KON und)
							(NX oborski))[01;31m)[00m)[01;31m)[00m
			(SIMPX
				[01;36m(SIMPX[00m
					(KOORD und)
					(VF dann)
					(LK muste)
					(MF ich nur von ihnen noch die kontonummer)
					(VC haben)[01;36m)[00m
				(NF und die formalitaten)))))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['KOORD', 'SIMPX'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON',), 'right siblings': [(SIMPX (LK (VXFIN (VVFIN kommen))) (MF (PX (ADVX (ADV direkt)) (APPRART zum) (NX (NN hotel)))))], 'left siblings': [], 'auto preterminal span': (16, 17), 'span': (16, 17), 'parent': 'SIMPX', 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SU dreieinhalb stunden fahren sie)
		(SU
			(LKMVC kommen dann am hauptbahnhof an)
			(KON und)
			(LKM
				(LKMVC konnen ja dann ein taxi nehmen)
				(SIMPX
					(KOORD und)
					[01;31m(SIMPX[00m
						(LK kommen)
						(MF direkt zum hotel)[01;31m)[00m)))
		(SU
			(DM ja)
			[01;31m(SIMPX[00m
				(VF dann)
				(LK buche)
				(MF
					(NX ich)
					(NX das)
					(PX fur sie)
					[01;31m(DM[00m
						(NX
							[01;36m(NX[00m
								(NN herr)
								(NE obrowski)[01;36m)[00m
							(KON und)
							(NX oborski))[01;31m)[00m)[01;31m)[00m
			(SIMPX
				[01;36m(SIMPX[00m
					(KOORD und)
					(VF dann)
					(LK muste)
					(MF ich nur von ihnen noch die kontonummer)
					(VC haben)[01;36m)[00m
				(NF und die formalitaten)))))
Step:NP Internal Structure
{'subtrees': ['NN', 'NE'], 'family': ['NX', 'KON', 'NX'], 'over_word': False, 'over words': True, 'auto preterminals': ('NN', 'NE'), 'right siblings': [(KON und), (NX (NE oborski))], 'left siblings': [], 'auto preterminal span': (28, 30), 'span': (28, 30), 'parent': 'NX', 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'add'}
(TOP
	(TURN
		(SU dreieinhalb stunden fahren sie)
		(SU
			(LKMVC kommen dann am hauptbahnhof an)
			(KON und)
			(LKM
				(LKMVC konnen ja dann ein taxi nehmen)
				(SIMPX
					(KOORD und)
					[01;31m(SIMPX[00m
						(LK kommen)
						(MF direkt zum hotel)[01;31m)[00m)))
		(SU
			(DM ja)
			[01;31m(SIMPX[00m
				(VF dann)
				(LK buche)
				(MF
					(NX ich)
					(NX das)
					(PX fur sie)
					[01;31m(DM[00m
						(NX
							(NX herr obrowski)
							(KON und)
							(NX oborski))[01;31m)[00m)[01;31m)[00m
			(SIMPX
				[01;36m(SIMPX[00m
					(KOORD und)
					(VF dann)
					(LK muste)
					(MF ich nur von ihnen noch die kontonummer)
					(VC haben)[01;36m)[00m
				(NF und die formalitaten)))))
Step:UNSET add
{'subtrees': ['KOORD', 'VF', 'LK', 'MF', 'VC'], 'family': ['SIMPX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'APPR', 'PPER', 'ADV', 'ART', 'NN', 'VAINF'), 'right siblings': [(NF (NX (KON und) (NX (ART die) (NN formalitaten))))], 'left siblings': [], 'auto preterminal span': (32, 43), 'span': (32, 43), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU dreieinhalb stunden fahren sie)
		(SU
			(LKMVC kommen dann am hauptbahnhof an)
			(KON und)
			(LKM
				(LKMVC konnen ja dann ein taxi nehmen)
				(SIMPX
					(KOORD und)
					[01;31m(SIMPX[00m
						(LK kommen)
						(MF direkt zum hotel)[01;31m)[00m)))
		(SU
			(DM ja)
			[01;31m(SIMPX[00m
				(VF dann)
				(LK buche)
				(MF
					(NX ich)
					(NX das)
					(PX fur sie)
					[01;31m(DM[00m
						(NX
							(NX herr obrowski)
							(KON und)
							(NX oborski))[01;31m)[00m)[01;31m)[00m
			(SIMPX und dann muste ich nur von ihnen noch die kontonummer haben und die formalitaten))))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['KOORD', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'VVFIN', 'ADV', 'APPRART', 'NN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (16, 21), 'span': (17, 21), 'left siblings': ['KOORD'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU dreieinhalb stunden fahren sie)
		(SU kommen dann am hauptbahnhof an und konnen ja dann ein taxi nehmen und kommen direkt zum hotel)
		(SU
			(DM ja)
			[01;31m(SIMPX[00m
				(VF dann)
				(LK buche)
				(MF
					(NX ich)
					(NX das)
					(PX fur sie)
					[01;31m(DM[00m
						(NX
							(NX herr obrowski)
							(KON und)
							(NX oborski))[01;31m)[00m)[01;31m)[00m
			(SIMPX und dann muste ich nur von ihnen noch die kontonummer haben und die formalitaten))))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['DM', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADV', 'VVFIN', 'PPER', 'PDS', 'APPR', 'PPER', 'NN', 'NE', 'KON', 'NE', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'APPR', 'PPER', 'ADV', 'ART', 'NN', 'VAINF', 'KON', 'ART', 'NN'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (21, 46), 'span': (22, 32), 'left siblings': ['DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU dreieinhalb stunden fahren sie)
		(SU kommen dann am hauptbahnhof an und konnen ja dann ein taxi nehmen und kommen direkt zum hotel)
		(SU
			(DM ja)
			(VF dann)
			(LK buche)
			(MF
				(NX ich)
				(NX das)
				(PX fur sie)
				[01;31m(DM[00m
					(NX
						(NX herr obrowski)
						(KON und)
						(NX oborski))[01;31m)[00m)
			(SIMPX und dann muste ich nur von ihnen noch die kontonummer haben und die formalitaten))))
Step:Unary
{'subtrees': ['NX'], 'family': ['NX', 'NX', 'PX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'PDS', 'APPR', 'PPER', 'NN', 'NE', 'KON', 'NE'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (24, 32), 'span': (28, 32), 'left siblings': ['NX', 'NX', 'PX'], 'label': 'DM', 'classified_type': 'Unary', 'type': 'remove'}
(TOP dreieinhalb stunden fahren sie kommen dann am hauptbahnhof an und konnen ja dann ein taxi nehmen und kommen direkt zum hotel ja dann buche ich das fur sie herr obrowski und oborski und dann muste ich nur von ihnen noch die kontonummer haben und die formalitaten)

Sentence 585:
5 Initial errors
0 on fringe, 3 iterations
2 Error:Co-ordination
1 Error:Unary
2 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(SIMPX dann schicke ich ihnen die quittung zu)
			[01;31m(DM[00m
				(KON und)
				[01;36m(DM[00m
					(PTKANT ja)[01;36m)[00m[01;31m)[00m)
		(SU dann verbleibe ich so)
		(SU
			[01;31m(DM[00m
				[01;31m(NX[00m
					(NX vielen dank)
					[01;33m(PX[00m (PX fur die buchung)[01;31m)[00m[01;31m)[00m
			(DM und auf wiederhoren)))) [01;33mPX)[00m
Step:Co-ordination
{'new_parent': 'SU', 'new_family': ['SIMPX', 'KON', 'DM'], 'mover info': [('KON', (7, 8))], 'old_family': ['KON', 'PTKANT'], 'start left siblings': [], 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'PPER', 'ART', 'NN', 'PTKVZ', 'KON', 'PTKANT'), 'start right siblings': ['PTKANT'], 'end left siblings': ['SIMPX'], 'auto preterminal span': (0, 9), 'movers': ['KON'], 'old_parent': 'DM', 'POS confusion': ('KON', 'KON'), 'end right siblings': ['DM'], 'classified_type': 'Co-ordination', 'type': 'move'}
(TOP
	(TURN
		(SU dann schicke ich ihnen die quittung zu und ja)
		(SU dann verbleibe ich so)
		(SU
			[01;31m(DM[00m
				[01;31m(NX[00m
					(NX vielen dank)
					[01;33m(PX[00m (PX fur die buchung)[01;31m)[00m[01;31m)[00m
			(DM und auf wiederhoren)))) [01;33mPX)[00m
Step:Unary
{'subtrees': ['NX'], 'family': ['DM', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('PIDAT', 'NN', 'APPR', 'ART', 'NN', 'KON', 'APPR', 'NN'), 'right siblings': ['DM'], 'parent': 'SU', 'auto preterminal span': (13, 21), 'span': (13, 18), 'left siblings': [], 'label': 'DM', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU dann schicke ich ihnen die quittung zu und ja)
		(SU dann verbleibe ich so)
		(SU
			[01;31m(NX[00m
				(NX vielen dank)
				[01;33m(PX[00m (PX fur die buchung)[01;31m)[00m
			(DM und auf wiederhoren)))) [01;33mPX)[00m
Step:PP Attachment
{'new_parent': 'SU', 'new_family': ['NX', 'PX', 'DM'], 'mover info': [('PX', (15, 18))], 'old_family': ['NX', 'PX'], 'start left siblings': ['NX'], 'auto preterminals': ('PIDAT', 'NN', 'APPR', 'ART', 'NN', 'KON', 'APPR', 'NN'), 'start right siblings': [], 'end left siblings': ['NX'], 'auto preterminal span': (13, 21), 'adding node already present': False, 'movers': ['PX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': ['DM'], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'PX'}
(TOP dann schicke ich ihnen die quittung zu und ja dann verbleibe ich so vielen dank fur die buchung und auf wiederhoren)

Sentence 586:
9 Initial errors
0 on fringe, 7 iterations
3 Error:PP Attachment
1 Error:Single Word Phrase
1 Error:Unary
1 Error:Single Word Phrase
1 Error:Single Word Phrase
1 Error:UNSET remove
1 Error:NP Internal Structure
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU ja schonen guten tag)
		(SU
			(SIMPX
				(VF hier)
				(LK spricht)
				(MF
					(NX
						[01;36m(MF[00m
							[01;36m(NX[00m
								(NE matthias)[01;36m)[00m[01;36m)[00m
						[01;36m(ADVX[00m
							(NE oborski)[01;36m)[00m))))
		(SU ich wollte sie fragen wegen einer geschaftsreise nach hannover)
		(SU
			(SIMPX und zwar muste ich im august vom funfzehnten bis zum siebzehnten in hannover sein)
			(SIMPX
				(KOORD und)
				(VF ich)
				(LK hatte)
				[01;31m(VC[00m
					(PTKVZ vor)[01;31m)[00m
				(NF
					(SIMPX
						[01;36m(PX[00m
							(MF
								[01;31m(PX[00m
									(APPR mit)
									[01;33m(NX[00m (NX dem zug)[01;31m)[00m
								(PX
									[01;31m(PX[00m
										(APPR ab)
										[01;33m(NX[00m (NX bonn)[01;31m)[00m
									(NX hannover))) [01;33mNX) NX)[00m[01;36m)[00m
						(VC zu fahren)))))))
Step:PP Attachment
{'new_parent': 'PX', 'new_family': ['APPR', 'NX', 'PX'], 'mover info': [('PX', (38, 41))], 'old_family': ['PX', 'PX'], 'start left siblings': ['PX'], 'auto preterminals': ('APPR', 'ART', 'NN', 'APPR', 'NE', 'NE'), 'start right siblings': [], 'end left siblings': ['APPR', 'NX'], 'auto preterminal span': (35, 41), 'adding node already present': False, 'movers': ['PX'], 'old_parent': 'MF', 'added and moved': True, 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(SU ja schonen guten tag)
		(SU
			(SIMPX
				(VF hier)
				(LK spricht)
				(MF
					(NX
						[01;36m(MF[00m
							[01;36m(NX[00m
								(NE matthias)[01;36m)[00m[01;36m)[00m
						[01;36m(ADVX[00m
							(NE oborski)[01;36m)[00m))))
		(SU ich wollte sie fragen wegen einer geschaftsreise nach hannover)
		(SU
			(SIMPX und zwar muste ich im august vom funfzehnten bis zum siebzehnten in hannover sein)
			(SIMPX
				(KOORD und)
				(VF ich)
				(LK hatte)
				[01;31m(VC[00m
					(PTKVZ vor)[01;31m)[00m
				(NF
					(SIMPX
						(MF
							(PX
								(APPR mit)
								(NX
									(NX dem zug)
									(PX
										[01;31m(PX[00m
											(APPR ab)
											[01;33m(NX[00m (NX bonn)[01;31m)[00m
										(NX hannover))))) [01;33mNX)[00m
						(VC zu fahren)))))))
Step:Single Word Phrase
{'subtrees': ['NE'], 'family': ['NX', 'NE'], 'over_word': True, 'over words': True, 'auto preterminals': ('NE',), 'right siblings': [(NE oborski)], 'left siblings': [], 'auto preterminal span': (6, 7), 'span': (6, 7), 'parent': 'NX', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SU ja schonen guten tag)
		(SU
			(SIMPX
				(VF hier)
				(LK spricht)
				(MF
					(NX
						[01;36m(MF[00m
							(NX
								(NE matthias))[01;36m)[00m
						[01;36m(ADVX[00m
							(NE oborski)[01;36m)[00m))))
		(SU ich wollte sie fragen wegen einer geschaftsreise nach hannover)
		(SU
			(SIMPX und zwar muste ich im august vom funfzehnten bis zum siebzehnten in hannover sein)
			(SIMPX
				(KOORD und)
				(VF ich)
				(LK hatte)
				[01;31m(VC[00m
					(PTKVZ vor)[01;31m)[00m
				(NF
					(SIMPX
						(MF
							(PX
								(APPR mit)
								(NX
									(NX dem zug)
									(PX
										[01;31m(PX[00m
											(APPR ab)
											[01;33m(NX[00m (NX bonn)[01;31m)[00m
										(NX hannover))))) [01;33mNX)[00m
						(VC zu fahren)))))))
Step:Unary
{'subtrees': ['NX'], 'family': ['MF', 'NE'], 'over_word': False, 'over words': False, 'auto preterminals': ('NE',), 'right siblings': [(NE oborski)], 'left siblings': [], 'auto preterminal span': (6, 7), 'span': (6, 7), 'parent': 'NX', 'label': 'MF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU ja schonen guten tag)
		(SU
			(SIMPX
				(VF hier)
				(LK spricht)
				(MF
					(NX
						(MF matthias)
						[01;36m(ADVX[00m
							(NE oborski)[01;36m)[00m))))
		(SU ich wollte sie fragen wegen einer geschaftsreise nach hannover)
		(SU
			(SIMPX und zwar muste ich im august vom funfzehnten bis zum siebzehnten in hannover sein)
			(SIMPX
				(KOORD und)
				(VF ich)
				(LK hatte)
				[01;31m(VC[00m
					(PTKVZ vor)[01;31m)[00m
				(NF
					(SIMPX
						(MF
							(PX
								(APPR mit)
								(NX
									(NX dem zug)
									(PX
										[01;31m(PX[00m
											(APPR ab)
											[01;33m(NX[00m (NX bonn)[01;31m)[00m
										(NX hannover))))) [01;33mNX)[00m
						(VC zu fahren)))))))
Step:Single Word Phrase
{'subtrees': ['NE'], 'family': ['MF', 'ADVX'], 'over_word': True, 'over words': True, 'auto preterminals': ('NE',), 'right siblings': [], 'left siblings': [(MF (NX (NE matthias)))], 'auto preterminal span': (7, 8), 'span': (7, 8), 'parent': 'NX', 'label': 'ADVX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SU ja schonen guten tag)
		(SU hier spricht matthias oborski)
		(SU ich wollte sie fragen wegen einer geschaftsreise nach hannover)
		(SU
			(SIMPX und zwar muste ich im august vom funfzehnten bis zum siebzehnten in hannover sein)
			(SIMPX
				(KOORD und)
				(VF ich)
				(LK hatte)
				[01;31m(VC[00m
					(PTKVZ vor)[01;31m)[00m
				(NF
					(SIMPX
						(MF
							(PX
								(APPR mit)
								(NX
									(NX dem zug)
									(PX
										[01;31m(PX[00m
											(APPR ab)
											[01;33m(NX[00m (NX bonn)[01;31m)[00m
										(NX hannover))))) [01;33mNX)[00m
						(VC zu fahren)))))))
Step:Single Word Phrase
{'subtrees': ['PTKVZ'], 'family': ['KOORD', 'VF', 'LK', 'VC', 'NF'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON', 'PPER', 'VAFIN', 'PTKVZ', 'APPR', 'ART', 'NN', 'APPR', 'NE', 'NE', 'PTKZU', 'VVINF'), 'right siblings': ['NF'], 'parent': 'SIMPX', 'auto preterminal span': (31, 43), 'span': (34, 35), 'left siblings': ['KOORD', 'VF', 'LK'], 'label': 'VC', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(SU ja schonen guten tag)
		(SU hier spricht matthias oborski)
		(SU ich wollte sie fragen wegen einer geschaftsreise nach hannover)
		(SU
			(SIMPX und zwar muste ich im august vom funfzehnten bis zum siebzehnten in hannover sein)
			(SIMPX
				(KOORD und)
				(VF ich)
				(LK hatte)
				(PTKVZ vor)
				(NF
					(SIMPX
						(MF
							(PX
								(APPR mit)
								(NX
									(NX dem zug)
									(PX
										[01;31m(PX[00m
											(APPR ab)
											[01;33m(NX[00m (NX bonn)[01;31m)[00m
										(NX hannover))))) [01;33mNX)[00m
						(VC zu fahren)))))))
Step:UNSET remove
{'subtrees': ['APPR', 'NX'], 'family': ['PX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'NE', 'NE'), 'right siblings': ['NX'], 'parent': 'PX', 'auto preterminal span': (38, 41), 'span': (38, 40), 'left siblings': [], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU ja schonen guten tag)
		(SU hier spricht matthias oborski)
		(SU ich wollte sie fragen wegen einer geschaftsreise nach hannover)
		(SU
			(SIMPX und zwar muste ich im august vom funfzehnten bis zum siebzehnten in hannover sein)
			(SIMPX
				(KOORD und)
				(VF ich)
				(LK hatte)
				(PTKVZ vor)
				(NF
					(SIMPX
						(MF
							(PX
								(APPR mit)
								(NX
									(NX dem zug)
									(PX
										(APPR ab)
										[01;36m(NX[00m
											(NX bonn)
											(NX hannover)[01;36m)[00m))))
						(VC zu fahren)))))))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['APPR', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NE', 'NE'), 'right siblings': [], 'left siblings': [(APPR ab)], 'auto preterminal span': (39, 41), 'span': (39, 41), 'parent': 'PX', 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'add'}
(TOP ja schonen guten tag hier spricht matthias oborski ich wollte sie fragen wegen einer geschaftsreise nach hannover und zwar muste ich im august vom funfzehnten bis zum siebzehnten in hannover sein und ich hatte vor mit dem zug ab bonn hannover zu fahren)

Sentence 587:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU ja)
		(SU
			(SIMPX
				(KOORD und)
				[01;31m(LV[00m
					(PX
						(APPR mit)
						(NX der zugverbindung))[01;31m)[00m
				(VF wie lange)
				(LK wird)
				(MF das)
				(VC dauern)))))
Step:Unary
{'subtrees': ['PX'], 'family': ['KOORD', 'LV', 'VF', 'LK', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'APPR', 'ART', 'NN', 'PWAV', 'ADJD', 'VAFIN', 'PDS', 'VVINF'), 'right siblings': ['VF', 'LK', 'MF', 'VC'], 'parent': 'SIMPX', 'auto preterminal span': (1, 10), 'span': (2, 5), 'left siblings': ['KOORD'], 'label': 'LV', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja und mit der zugverbindung wie lange wird das dauern)

Sentence 588:
5 Initial errors
0 on fringe, 4 iterations
2 Error:NP Attachment
1 Error:Single Word Phrase
1 Error:Modifier Attachment
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU ja)
		(SU
			[01;31m(NX[00m
				(KON und)
				(NX der name)
				(ADVX noch)
				(ADVX mal)[01;31m)[00m
			[01;36m(NX[00m
				[01;31m(NX[00m
					(BS o)
					[01;36m(ADJX[00m
						(BS b)[01;36m)[00m
					(BS o)
					(BS r)
					(BS s)
					(BS k)
					(BS i)[01;31m)[00m
				[01;31m(NX[00m
					(NX matthias)
					(PX mit t t h)[01;31m)[00m[01;36m)[00m)
		(SU brauchen sie sonst noch etwas)))
Step:NP Attachment
{'new_parent': 'NX', 'new_family': ['NX', 'NX', 'PX'], 'mover info': [('NX', (6, 13))], 'old_family': ['NX', 'NX', 'NX'], 'start left siblings': ['NX'], 'auto preterminals': ('KON', 'ART', 'NN', 'ADV', 'ADV', 'BS', 'BS', 'BS', 'BS', 'BS', 'BS', 'BS', 'NE', 'APPR', 'BS', 'BS', 'BS'), 'start right siblings': ['NX'], 'end left siblings': [], 'auto preterminal span': (1, 18), 'movers': ['NX'], 'old_parent': 'SU', 'end right siblings': ['NX', 'PX'], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU ja)
		(SU
			[01;31m(NX[00m
				(KON und)
				(NX der name)
				(ADVX noch)
				(ADVX mal)[01;31m)[00m
			(NX
				[01;31m(NX[00m
					(BS o)
					[01;36m(ADJX[00m
						(BS b)[01;36m)[00m
					(BS o)
					(BS r)
					(BS s)
					(BS k)
					(BS i)[01;31m)[00m
				(NX matthias)
				(PX mit t t h)))
		(SU brauchen sie sonst noch etwas)))
Step:Single Word Phrase
{'subtrees': ['BS'], 'family': ['BS', 'ADJX', 'BS', 'BS', 'BS', 'BS', 'BS'], 'over_word': True, 'over words': True, 'auto preterminals': ('BS',), 'right siblings': [(BS o), (BS r), (BS s), (BS k), (BS i)], 'left siblings': [(BS o)], 'auto preterminal span': (7, 8), 'span': (7, 8), 'parent': 'NX', 'label': 'ADJX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SU ja)
		(SU
			[01;31m(NX[00m
				(KON und)
				(NX der name)
				(ADVX noch)
				(ADVX mal)[01;31m)[00m
			(NX
				[01;31m(NX[00m
					(BS o)
					(ADJX b)
					(BS o)
					(BS r)
					(BS s)
					(BS k)
					(BS i)[01;31m)[00m
				(NX matthias)
				(PX mit t t h)))
		(SU brauchen sie sonst noch etwas)))
Step:Modifier Attachment
{'subtrees': ['KON', 'NX', 'ADVX', 'ADVX'], 'family': ['NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'ART', 'NN', 'ADV', 'ADV', 'BS', 'BS', 'BS', 'BS', 'BS', 'BS', 'BS', 'NE', 'APPR', 'BS', 'BS', 'BS'), 'right siblings': ['NX'], 'parent': 'SU', 'auto preterminal span': (1, 18), 'span': (1, 6), 'left siblings': [], 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU ja)
		(SU
			(KON und)
			(NX der name)
			(ADVX noch)
			(ADVX mal)
			(NX
				[01;31m(NX[00m
					(BS o)
					(ADJX b)
					(BS o)
					(BS r)
					(BS s)
					(BS k)
					(BS i)[01;31m)[00m
				(NX matthias)
				(PX mit t t h)))
		(SU brauchen sie sonst noch etwas)))
Step:Modifier Attachment
{'subtrees': ['BS', 'ADJX', 'BS', 'BS', 'BS', 'BS', 'BS'], 'family': ['NX', 'NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('BS', 'BS', 'BS', 'BS', 'BS', 'BS', 'BS', 'NE', 'APPR', 'BS', 'BS', 'BS'), 'right siblings': ['NX', 'PX'], 'parent': 'NX', 'auto preterminal span': (6, 18), 'span': (6, 13), 'left siblings': [], 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP ja und der name noch mal o b o r s k i matthias mit t t h brauchen sie sonst noch etwas)

Sentence 589:
9 Initial errors
0 on fringe, 5 iterations
3 Error:UNSET move
3 Error:Modifier Attachment
1 Error:Single Word Phrase
1 Error:Unary
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			[01;36m(NX[00m
				[01;36m(DM[00m
					[01;31m(NX[00m
						[01;31m(NX[00m
							[01;31m(ADJX[00m
								(FM first)[01;31m)[00m
							[01;36m(NX[00m
								(FM class)[01;36m)[00m[01;31m)[00m
						[01;36m(NX[00m
							(NN [01;33m(NX (DM[00m reiseburo)[01;36m)[00m[01;31m)[00m
					(DM schmidt) [01;33mDM) NX)[00m[01;36m)[00m[01;36m)[00m
			(DM guten tag))
		(SU womit kann ich ihnen helfen)))
Step:UNSET move
{'new_parent': 'NX', 'new_family': ['NX', 'NN', 'DM'], 'mover info': [('DM', (3, 4))], 'old_family': ['NX', 'DM', 'DM'], 'start left siblings': ['NX'], 'auto preterminals': ('FM', 'FM', 'NN', 'NE', 'ADJA', 'NN'), 'start right siblings': ['DM'], 'end left siblings': ['NX', 'NN'], 'auto preterminal span': (0, 6), 'adding node already present': False, 'movers': ['DM'], 'old_parent': 'SU', 'POS confusion': ('NE', 'NE'), 'added and moved': True, 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'DM'}
(TOP
	(TURN
		(SU
			[01;36m(DM[00m
				(NX
					[01;31m(NX[00m
						[01;31m(ADJX[00m
							(FM first)[01;31m)[00m
						[01;36m(NX[00m
							(FM class)[01;36m)[00m[01;31m)[00m
					[01;36m(DM[00m
						(NX
							[01;36m(NX[00m
								(NN reiseburo)[01;36m)[00m
							(DM schmidt))[01;36m)[00m)[01;36m)[00m
			(DM guten tag))
		(SU womit kann ich ihnen helfen)))
Step:Modifier Attachment
{'new_parent': 'NX', 'new_family': ['ADJX', 'NX', 'NX'], 'mover info': [('ADJX', (0, 1))], 'old_family': ['ADJX', 'FM'], 'start left siblings': [], 'auto preterminals': ('FM', 'FM', 'NN', 'NE'), 'start right siblings': ['FM'], 'end left siblings': [], 'auto preterminal span': (0, 4), 'adding node already present': False, 'movers': ['ADJX'], 'old_parent': 'NX', 'POS confusion': ('FM', 'FM'), 'added and moved': True, 'end right siblings': ['NX', 'NX'], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'DM'}
(TOP
	(TURN
		(SU
			(DM
				(NX
					[01;31m(ADJX[00m
						(FM first)[01;31m)[00m
					(NX class)
					[01;36m(DM[00m
						(NX
							[01;36m(NX[00m
								(NN reiseburo)[01;36m)[00m
							(DM schmidt))[01;36m)[00m))
			(DM guten tag))
		(SU womit kann ich ihnen helfen)))
Step:Single Word Phrase
{'subtrees': ['NN'], 'family': ['NX', 'DM'], 'over_word': True, 'over words': True, 'auto preterminals': ('NN',), 'right siblings': [(DM (NX (NE schmidt)))], 'left siblings': [], 'auto preterminal span': (2, 3), 'span': (2, 3), 'parent': 'NX', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM
				(NX
					[01;31m(ADJX[00m
						(FM first)[01;31m)[00m
					(NX class)
					[01;36m(DM[00m
						(NX
							(NX reiseburo)
							(DM schmidt))[01;36m)[00m))
			(DM guten tag))
		(SU womit kann ich ihnen helfen)))
Step:Unary
{'subtrees': ['NX'], 'family': ['ADJX', 'NX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'NE'), 'right siblings': [], 'left siblings': [(ADJX (FM first)), (NX (FM class))], 'auto preterminal span': (2, 4), 'span': (2, 4), 'parent': 'NX', 'label': 'DM', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM
				(NX
					[01;31m(ADJX[00m
						(FM first)[01;31m)[00m
					(NX class)
					(DM reiseburo schmidt)))
			(DM guten tag))
		(SU womit kann ich ihnen helfen)))
Step:Single Word Phrase
{'subtrees': ['FM'], 'family': ['ADJX', 'NX', 'DM'], 'over_word': True, 'over words': True, 'auto preterminals': ('FM', 'FM', 'NN', 'NE'), 'right siblings': ['NX', 'DM'], 'parent': 'NX', 'auto preterminal span': (0, 4), 'span': (0, 1), 'left siblings': [], 'label': 'ADJX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP first class reiseburo schmidt guten tag womit kann ich ihnen helfen)

Sentence 590:
28 Initial errors
0 on fringe, 17 iterations
4 Error:Co-ordination
3 Error:Co-ordination
2 Error:Clause Attachment
2 Error:UNSET move
2 Error:UNSET move
2 Error:PP Attachment
2 Error:Modifier Attachment
2 Error:Modifier Attachment
1 Error:PP Attachment
1 Error:UNSET add
1 Error:PP Attachment
1 Error:Unary
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM ja)
			[01;36m(SIMPX[00m
				[01;31m(SIMPX[00m
					(VF da)
					(LK ware)
					[01;31m(MF[00m
						(ADVX noch)
						[01;36m(NX[00m
							(NX die frage)
							(ADVX naturlich)
							(PX nach dem hotel)[01;36m)[00m[01;31m)[00m[01;31m)[00m
				[01;36m(SIMPX[00m
					[01;31m(SIMPX[00m
						(C ob)
						[01;31m(MF[00m [01;33m(MF[00m
							(NX sie)
							[01;33m(NX[00m (NX was)[01;31m)[00m[01;31m)[00m
					[01;31m(SIMPX[00m
						[01;31m(C[00m
							[01;31m(NX[00m
								(NX was) [01;33mNX)[00m
								[01;33m(PX[00m (PX fur einen hotelwunsch)[01;31m)[00m[01;31m)[00m
						[01;31m(MF[00m
							(NX
								(PPER sie))[01;31m)[00m [01;33mPX) MF)[00m
						(VC haben)[01;31m)[00m[01;36m)[00m[01;36m)[00m)
		(SU [01;33m(SIMPX[00m
			[01;31m(SIMPX[00m
				(C ob)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX sie)
					[01;31m(ADJX[00m
						[01;36m(ADJX[00m
							(ADJX zentral)
							[01;36m(NF[00m
								[01;36m(PX[00m
									(KON oder)
									(PX am flughafen) [01;33mMF) SIMPX)[00m[01;36m)[00m[01;36m)[00m[01;36m)[00m
						(KON [01;33m(SIMPX[00m oder)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			(DM ja)
			[01;36m(SIMPX[00m
				[01;36m(LV[00m
					(SIMPX
						(C wenn)
						(MF sie mit der bahn)
						(VC kommen))[01;36m)[00m
				[01;31m(PX[00m
					(ADVX dann)
					[01;36m(ADVX[00m
						(ADVX naturlich)
						[01;31m(ADVX[00m
							(PTKNEG nicht)[01;31m)[00m[01;36m)[00m
					(PX am flughafen)[01;31m)[00m[01;36m)[00m))) [01;33mSIMPX)[00m
Step:Co-ordination
{'new_parent': 'SIMPX', 'new_family': ['C', 'MF', 'KON'], 'mover info': [('KON', (25, 26))], 'old_family': ['ADJX', 'KON', 'PX', 'KON'], 'start left siblings': ['ADJX', 'KON', 'PX'], 'auto preterminals': ('KOUS', 'PPER', 'ADJD', 'KON', 'APPRART', 'NN', 'KON'), 'start right siblings': [], 'end left siblings': ['C', 'MF'], 'auto preterminal span': (19, 26), 'movers': ['KON'], 'old_parent': 'ADJX', 'POS confusion': ('KON', 'KON'), 'end right siblings': [], 'classified_type': 'Co-ordination', 'type': 'move'}
(TOP
	(TURN
		(SU
			(DM ja)
			[01;36m(SIMPX[00m
				[01;31m(SIMPX[00m
					(VF da)
					(LK ware)
					[01;31m(MF[00m
						(ADVX noch)
						[01;36m(NX[00m
							(NX die frage)
							(ADVX naturlich)
							(PX nach dem hotel)[01;36m)[00m[01;31m)[00m[01;31m)[00m
				[01;36m(SIMPX[00m
					[01;31m(SIMPX[00m
						(C ob)
						[01;31m(MF[00m [01;33m(MF[00m
							(NX sie)
							[01;33m(NX[00m (NX was)[01;31m)[00m[01;31m)[00m
					[01;31m(SIMPX[00m
						[01;31m(C[00m
							[01;31m(NX[00m
								(NX was) [01;33mNX)[00m
								[01;33m(PX[00m (PX fur einen hotelwunsch)[01;31m)[00m[01;31m)[00m
						[01;31m(MF[00m
							(NX
								(PPER sie))[01;31m)[00m [01;33mPX) MF)[00m
						(VC haben)[01;31m)[00m[01;36m)[00m[01;36m)[00m)
		(SU
			[01;31m(SIMPX[00m
				[01;36m(SIMPX[00m
					(C ob)
					(MF
						(NX sie)
						(ADJX
							(ADJX zentral)
							[01;36m(NF[00m
								[01;36m(PX[00m
									(KON oder)
									(PX am flughafen)[01;36m)[00m[01;36m)[00m))[01;36m)[00m
				(KON [01;33m(SIMPX[00m oder)[01;31m)[00m
			(DM ja)
			[01;36m(SIMPX[00m
				[01;36m(LV[00m
					(SIMPX
						(C wenn)
						(MF sie mit der bahn)
						(VC kommen))[01;36m)[00m
				[01;31m(PX[00m
					(ADVX dann)
					[01;36m(ADVX[00m
						(ADVX naturlich)
						[01;31m(ADVX[00m
							(PTKNEG nicht)[01;31m)[00m[01;36m)[00m
					(PX am flughafen)[01;31m)[00m[01;36m)[00m))) [01;33mSIMPX)[00m
Step:Co-ordination
{'new_parent': 'SU', 'new_family': ['SIMPX', 'KON', 'DM', 'SIMPX', 'PX'], 'mover info': [('KON', (25, 26))], 'old_family': ['C', 'MF', 'KON'], 'start left siblings': ['C', 'MF'], 'auto preterminals': ('KOUS', 'PPER', 'ADJD', 'KON', 'APPRART', 'NN', 'KON', 'PTKANT', 'KOUS', 'PPER', 'APPR', 'ART', 'NN', 'VVFIN', 'ADV', 'ADV', 'PTKNEG', 'APPRART', 'NN'), 'start right siblings': [], 'end left siblings': ['SIMPX'], 'auto preterminal span': (19, 38), 'adding node already present': False, 'movers': ['KON'], 'old_parent': 'SIMPX', 'POS confusion': ('KON', 'KON'), 'added and moved': True, 'end right siblings': ['DM', 'SIMPX', 'PX'], 'classified_type': 'Co-ordination', 'type': 'move', 'added label': 'ADVX'}
(TOP
	(TURN
		(SU
			(DM ja)
			[01;36m(SIMPX[00m
				[01;31m(SIMPX[00m
					(VF da)
					(LK ware)
					[01;31m(MF[00m
						(ADVX noch)
						[01;36m(NX[00m
							(NX die frage)
							(ADVX naturlich)
							(PX nach dem hotel)[01;36m)[00m[01;31m)[00m[01;31m)[00m
				[01;36m(SIMPX[00m
					[01;31m(SIMPX[00m
						(C ob)
						[01;31m(MF[00m [01;33m(MF[00m
							(NX sie)
							[01;33m(NX[00m (NX was)[01;31m)[00m[01;31m)[00m
					[01;31m(SIMPX[00m
						[01;31m(C[00m
							[01;31m(NX[00m
								(NX was) [01;33mNX)[00m
								[01;33m(PX[00m (PX fur einen hotelwunsch)[01;31m)[00m[01;31m)[00m
						[01;31m(MF[00m
							(NX
								(PPER sie))[01;31m)[00m [01;33mPX) MF)[00m
						(VC haben)[01;31m)[00m[01;36m)[00m[01;36m)[00m)
		(SU
			(SIMPX
				(C ob)
				(MF
					(NX sie)
					(ADJX
						(ADJX zentral)
						[01;36m(NF[00m
							[01;36m(PX[00m
								(KON oder)
								(PX am flughafen)[01;36m)[00m[01;36m)[00m)))
			(SIMPX
				(KON oder)
				(DM ja)
				[01;36m(SIMPX[00m
					[01;36m(LV[00m
						(SIMPX
							(C wenn)
							(MF sie mit der bahn)
							(VC kommen))[01;36m)[00m
					[01;31m(PX[00m
						(ADVX dann)
						[01;36m(ADVX[00m
							(ADVX naturlich)
							[01;31m(ADVX[00m
								(PTKNEG nicht)[01;31m)[00m[01;36m)[00m
						(PX am flughafen)[01;31m)[00m[01;36m)[00m))))
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['SIMPX', 'SIMPX', 'C', 'MF', 'VC'], 'mover info': [('SIMPX', (1, 10)), ('SIMPX', (10, 13))], 'old_family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'start left siblings': ['DM'], 'auto preterminals': ('PTKANT', 'ADV', 'VAFIN', 'ADV', 'ART', 'NN', 'ADV', 'APPR', 'ART', 'NN', 'KOUS', 'PPER', 'PIS', 'PWS', 'APPR', 'ART', 'NN', 'PPER', 'VAFIN'), 'start right siblings': ['SIMPX'], 'end left siblings': [], 'auto preterminal span': (0, 19), 'movers': ['SIMPX', 'SIMPX'], 'old_parent': 'SU', 'end right siblings': ['C', 'MF', 'VC'], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX
				[01;31m(SIMPX[00m
					(VF da)
					(LK ware)
					[01;31m(MF[00m
						(ADVX noch)
						[01;36m(NX[00m
							(NX die frage)
							(ADVX naturlich)
							(PX nach dem hotel)[01;36m)[00m[01;31m)[00m[01;31m)[00m
				[01;36m(SIMPX[00m
					[01;31m(SIMPX[00m
						(C ob)
						[01;31m(MF[00m [01;33m(MF[00m
							(NX sie)
							[01;33m(NX[00m (NX was)[01;31m)[00m[01;31m)[00m
					[01;31m(C[00m
						[01;31m(NX[00m
							(NX was) [01;33mNX)[00m
							[01;33m(PX[00m (PX fur einen hotelwunsch)[01;31m)[00m[01;31m)[00m
					[01;31m(MF[00m
						(NX
							(PPER sie))[01;31m)[00m [01;33mPX) MF)[00m
					(VC haben)[01;36m)[00m))
		(SU
			(SIMPX
				(C ob)
				(MF
					(NX sie)
					(ADJX
						(ADJX zentral)
						[01;36m(NF[00m
							[01;36m(PX[00m
								(KON oder)
								(PX am flughafen)[01;36m)[00m[01;36m)[00m)))
			(SIMPX
				(KON oder)
				(DM ja)
				[01;36m(SIMPX[00m
					[01;36m(LV[00m
						(SIMPX
							(C wenn)
							(MF sie mit der bahn)
							(VC kommen))[01;36m)[00m
					[01;31m(PX[00m
						(ADVX dann)
						[01;36m(ADVX[00m
							(ADVX naturlich)
							[01;31m(ADVX[00m
								(PTKNEG nicht)[01;31m)[00m[01;36m)[00m
						(PX am flughafen)[01;31m)[00m[01;36m)[00m))))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['NX', 'NX', 'C', 'MF'], 'mover info': [('C', (13, 17)), ('MF', (17, 18))], 'old_family': ['SIMPX', 'SIMPX', 'C', 'MF', 'VC'], 'start left siblings': ['SIMPX', 'SIMPX'], 'auto preterminals': ('ADV', 'VAFIN', 'ADV', 'ART', 'NN', 'ADV', 'APPR', 'ART', 'NN', 'KOUS', 'PPER', 'PIS', 'PWS', 'APPR', 'ART', 'NN', 'PPER', 'VAFIN'), 'start right siblings': ['VC'], 'end left siblings': ['NX', 'NX'], 'auto preterminal span': (1, 19), 'movers': ['C', 'MF'], 'old_parent': 'SIMPX', 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX
				[01;31m(SIMPX[00m
					(VF da)
					(LK ware)
					[01;31m(MF[00m
						(ADVX noch)
						[01;36m(NX[00m
							(NX die frage)
							(ADVX naturlich)
							(PX nach dem hotel)[01;36m)[00m[01;31m)[00m[01;31m)[00m
				[01;36m(SIMPX[00m
					[01;31m(SIMPX[00m
						(C ob)
						(MF
							(NX sie)
							[01;33m(NX[00m (NX was)
							[01;31m(C[00m
								[01;31m(NX[00m
									(NX was) [01;33mNX)[00m
									[01;33m(PX[00m (PX fur einen hotelwunsch)[01;31m)[00m[01;31m)[00m
							[01;31m(MF[00m
								(NX
									(PPER sie))[01;31m)[00m)[01;31m)[00m [01;33mPX)[00m
					(VC haben)[01;36m)[00m))
		(SU
			(SIMPX
				(C ob)
				(MF
					(NX sie)
					(ADJX
						(ADJX zentral)
						[01;36m(NF[00m
							[01;36m(PX[00m
								(KON oder)
								(PX am flughafen)[01;36m)[00m[01;36m)[00m)))
			(SIMPX
				(KON oder)
				(DM ja)
				[01;36m(SIMPX[00m
					[01;36m(LV[00m
						(SIMPX
							(C wenn)
							(MF sie mit der bahn)
							(VC kommen))[01;36m)[00m
					[01;31m(PX[00m
						(ADVX dann)
						[01;36m(ADVX[00m
							(ADVX naturlich)
							[01;31m(ADVX[00m
								(PTKNEG nicht)[01;31m)[00m[01;36m)[00m
						(PX am flughafen)[01;31m)[00m[01;36m)[00m))))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['C', 'MF', 'VC'], 'mover info': [('VC', (18, 19))], 'old_family': ['SIMPX', 'SIMPX', 'VC'], 'start left siblings': ['SIMPX', 'SIMPX'], 'auto preterminals': ('ADV', 'VAFIN', 'ADV', 'ART', 'NN', 'ADV', 'APPR', 'ART', 'NN', 'KOUS', 'PPER', 'PIS', 'PWS', 'APPR', 'ART', 'NN', 'PPER', 'VAFIN'), 'start right siblings': [], 'end left siblings': ['C', 'MF'], 'auto preterminal span': (1, 19), 'movers': ['VC'], 'old_parent': 'SIMPX', 'POS confusion': ('VAFIN', 'VAFIN'), 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX
				[01;31m(SIMPX[00m
					(VF da)
					(LK ware)
					[01;31m(MF[00m
						(ADVX noch)
						[01;36m(NX[00m
							(NX die frage)
							(ADVX naturlich)
							(PX nach dem hotel)[01;36m)[00m[01;31m)[00m[01;31m)[00m
				(SIMPX
					(C ob)
					(MF
						(NX sie)
						[01;33m(NX[00m (NX was)
						[01;31m(C[00m
							[01;31m(NX[00m
								(NX was) [01;33mNX)[00m
								[01;33m(PX[00m (PX fur einen hotelwunsch)[01;31m)[00m[01;31m)[00m
						[01;31m(MF[00m
							(NX
								(PPER sie))[01;31m)[00m) [01;33mPX)[00m
					(VC haben))))
		(SU
			(SIMPX
				(C ob)
				(MF
					(NX sie)
					(ADJX
						(ADJX zentral)
						[01;36m(NF[00m
							[01;36m(PX[00m
								(KON oder)
								(PX am flughafen)[01;36m)[00m[01;36m)[00m)))
			(SIMPX
				(KON oder)
				(DM ja)
				[01;36m(SIMPX[00m
					[01;36m(LV[00m
						(SIMPX
							(C wenn)
							(MF sie mit der bahn)
							(VC kommen))[01;36m)[00m
					[01;31m(PX[00m
						(ADVX dann)
						[01;36m(ADVX[00m
							(ADVX naturlich)
							[01;31m(ADVX[00m
								(PTKNEG nicht)[01;31m)[00m[01;36m)[00m
						(PX am flughafen)[01;31m)[00m[01;36m)[00m))))
Step:PP Attachment
{'new_parent': 'MF', 'new_family': ['PX', 'NX'], 'mover info': [('PX', (14, 17))], 'old_family': ['NX', 'PX'], 'start left siblings': ['NX'], 'auto preterminals': ('PPER', 'PIS', 'PWS', 'APPR', 'ART', 'NN', 'PPER'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (11, 18), 'adding node already present': False, 'movers': ['PX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': ['NX'], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'ADVX'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX
				[01;31m(SIMPX[00m
					(VF da)
					(LK ware)
					[01;31m(MF[00m
						(ADVX noch)
						[01;36m(NX[00m
							(NX die frage)
							(ADVX naturlich)
							(PX nach dem hotel)[01;36m)[00m[01;31m)[00m[01;31m)[00m
				(SIMPX
					(C ob)
					(MF
						(NX sie)
						[01;36m(NX[00m
							(NX was)
							[01;31m(C[00m
								(NX
									(PWS was))[01;31m)[00m[01;36m)[00m
						(PX
							[01;31m(MF[00m
								(PX fur einen hotelwunsch)
								(NX sie)[01;31m)[00m))
					(VC haben))))
		(SU
			(SIMPX
				(C ob)
				(MF
					(NX sie)
					(ADJX
						(ADJX zentral)
						[01;36m(NF[00m
							[01;36m(PX[00m
								(KON oder)
								(PX am flughafen)[01;36m)[00m[01;36m)[00m)))
			(SIMPX
				(KON oder)
				(DM ja)
				[01;36m(SIMPX[00m
					[01;36m(LV[00m
						(SIMPX
							(C wenn)
							(MF sie mit der bahn)
							(VC kommen))[01;36m)[00m
					[01;31m(PX[00m
						(ADVX dann)
						[01;36m(ADVX[00m
							(ADVX naturlich)
							[01;31m(ADVX[00m
								(PTKNEG nicht)[01;31m)[00m[01;36m)[00m
						(PX am flughafen)[01;31m)[00m[01;36m)[00m))))
Step:Modifier Attachment
{'new_parent': 'SIMPX', 'new_family': ['KON', 'DM', 'SIMPX', 'ADVX', 'ADVX', 'ADVX', 'PX'], 'mover info': [('ADVX', (33, 34)), ('ADVX', (34, 35)), ('ADVX', (35, 36))], 'old_family': ['ADVX', 'ADVX', 'ADVX', 'PX'], 'start left siblings': [], 'auto preterminals': ('KON', 'PTKANT', 'KOUS', 'PPER', 'APPR', 'ART', 'NN', 'VVFIN', 'ADV', 'ADV', 'PTKNEG', 'APPRART', 'NN'), 'start right siblings': ['PX'], 'end left siblings': ['KON', 'DM', 'SIMPX'], 'auto preterminal span': (25, 38), 'adding node already present': False, 'movers': ['ADVX', 'ADVX', 'ADVX'], 'old_parent': 'PX', 'added and moved': True, 'end right siblings': ['PX'], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'ADVX'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX
				[01;31m(SIMPX[00m
					(VF da)
					(LK ware)
					[01;31m(MF[00m
						(ADVX noch)
						[01;36m(NX[00m
							(NX die frage)
							(ADVX naturlich)
							(PX nach dem hotel)[01;36m)[00m[01;31m)[00m[01;31m)[00m
				(SIMPX
					(C ob)
					(MF
						(NX sie)
						[01;36m(NX[00m
							(NX was)
							[01;31m(C[00m
								(NX
									(PWS was))[01;31m)[00m[01;36m)[00m
						(PX
							[01;31m(MF[00m
								(PX fur einen hotelwunsch)
								(NX sie)[01;31m)[00m))
					(VC haben))))
		(SU
			(SIMPX
				(C ob)
				(MF
					(NX sie)
					(ADJX
						(ADJX zentral)
						[01;36m(NF[00m
							[01;36m(PX[00m
								(KON oder)
								(PX am flughafen)[01;36m)[00m[01;36m)[00m)))
			(SIMPX
				(KON oder)
				(DM ja)
				(SIMPX
					[01;36m(LV[00m
						(SIMPX
							(C wenn)
							(MF sie mit der bahn)
							(VC kommen))[01;36m)[00m
					(ADVX dann)
					[01;36m(ADVX[00m
						(ADVX naturlich)
						[01;31m(ADVX[00m
							(PTKNEG nicht)[01;31m)[00m[01;36m)[00m
					(PX am flughafen))))))
Step:Modifier Attachment
{'new_parent': 'ADVX', 'new_family': ['ADVX', 'PTKNEG'], 'mover info': [('ADVX', (34, 35))], 'old_family': ['SIMPX', 'ADVX', 'ADVX', 'ADVX', 'PX'], 'start left siblings': ['SIMPX', 'ADVX'], 'auto preterminals': ('KOUS', 'PPER', 'APPR', 'ART', 'NN', 'VVFIN', 'ADV', 'ADV', 'PTKNEG', 'APPRART', 'NN'), 'start right siblings': ['ADVX', 'PX'], 'end left siblings': [], 'auto preterminal span': (27, 38), 'movers': ['ADVX'], 'old_parent': 'SIMPX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['PTKNEG'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX
				[01;31m(SIMPX[00m
					(VF da)
					(LK ware)
					[01;31m(MF[00m
						(ADVX noch)
						[01;36m(NX[00m
							(NX die frage)
							(ADVX naturlich)
							(PX nach dem hotel)[01;36m)[00m[01;31m)[00m[01;31m)[00m
				(SIMPX
					(C ob)
					(MF
						(NX sie)
						[01;36m(NX[00m
							(NX was)
							[01;31m(C[00m
								(NX
									(PWS was))[01;31m)[00m[01;36m)[00m
						(PX
							[01;31m(MF[00m
								(PX fur einen hotelwunsch)
								(NX sie)[01;31m)[00m))
					(VC haben))))
		(SU
			(SIMPX
				(C ob)
				(MF
					(NX sie)
					(ADJX
						(ADJX zentral)
						[01;36m(NF[00m
							[01;36m(PX[00m
								(KON oder)
								(PX am flughafen)[01;36m)[00m[01;36m)[00m)))
			(SIMPX
				(KON oder)
				(DM ja)
				(SIMPX
					[01;36m(LV[00m
						(SIMPX
							(C wenn)
							(MF sie mit der bahn)
							(VC kommen))[01;36m)[00m
					(ADVX dann)
					(ADVX naturlich nicht)
					(PX am flughafen))))))
Step:PP Attachment
{'subtrees': ['NX', 'ADVX', 'PX'], 'family': ['ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'ADV', 'APPR', 'ART', 'NN'), 'right siblings': [], 'left siblings': [(ADVX (ADV noch))], 'auto preterminal span': (4, 10), 'span': (4, 10), 'parent': 'MF', 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX
				[01;31m(SIMPX[00m
					(VF da)
					(LK ware)
					[01;31m(MF[00m
						(ADVX noch)
						(NX die frage naturlich nach dem hotel)[01;31m)[00m[01;31m)[00m
				(SIMPX
					(C ob)
					(MF
						(NX sie)
						[01;36m(NX[00m
							(NX was)
							[01;31m(C[00m
								(NX
									(PWS was))[01;31m)[00m[01;36m)[00m
						(PX
							[01;31m(MF[00m
								(PX fur einen hotelwunsch)
								(NX sie)[01;31m)[00m))
					(VC haben))))
		(SU
			(SIMPX
				(C ob)
				(MF
					(NX sie)
					(ADJX
						(ADJX zentral)
						[01;36m(NF[00m
							[01;36m(PX[00m
								(KON oder)
								(PX am flughafen)[01;36m)[00m[01;36m)[00m)))
			(SIMPX
				(KON oder)
				(DM ja)
				(SIMPX
					[01;36m(LV[00m
						(SIMPX
							(C wenn)
							(MF sie mit der bahn)
							(VC kommen))[01;36m)[00m
					(ADVX dann)
					(ADVX naturlich nicht)
					(PX am flughafen))))))
Step:UNSET add
{'subtrees': ['NX', 'C'], 'family': ['NX', 'NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PIS', 'PWS'), 'right siblings': [(PX (MF (PX (APPR fur) (NX (ART einen) (NN hotelwunsch))) (NX (PPER sie))))], 'left siblings': [(NX (PPER sie))], 'auto preterminal span': (12, 14), 'span': (12, 14), 'parent': 'MF', 'label': 'NX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX
				[01;31m(SIMPX[00m
					(VF da)
					(LK ware)
					[01;31m(MF[00m
						(ADVX noch)
						(NX die frage naturlich nach dem hotel)[01;31m)[00m[01;31m)[00m
				(SIMPX
					(C ob)
					(MF
						(NX sie)
						(NX
							(NX was)
							[01;31m(C[00m
								(NX
									(PWS was))[01;31m)[00m)
						(PX
							[01;31m(MF[00m
								(PX fur einen hotelwunsch)
								(NX sie)[01;31m)[00m))
					(VC haben))))
		(SU
			(SIMPX
				(C ob)
				(MF
					(NX sie)
					(ADJX
						(ADJX zentral)
						[01;36m(NF[00m
							[01;36m(PX[00m
								(KON oder)
								(PX am flughafen)[01;36m)[00m[01;36m)[00m)))
			(SIMPX
				(KON oder)
				(DM ja)
				(SIMPX
					[01;36m(LV[00m
						(SIMPX
							(C wenn)
							(MF sie mit der bahn)
							(VC kommen))[01;36m)[00m
					(ADVX dann)
					(ADVX naturlich nicht)
					(PX am flughafen))))))
Step:PP Attachment
{'subtrees': ['KON', 'PX'], 'family': ['ADJX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'APPRART', 'NN'), 'right siblings': [], 'left siblings': [(ADJX (ADJD zentral))], 'auto preterminal span': (22, 25), 'span': (22, 25), 'parent': 'ADJX', 'label': 'PX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX
				[01;31m(SIMPX[00m
					(VF da)
					(LK ware)
					[01;31m(MF[00m
						(ADVX noch)
						(NX die frage naturlich nach dem hotel)[01;31m)[00m[01;31m)[00m
				(SIMPX
					(C ob)
					(MF
						(NX sie)
						(NX
							(NX was)
							[01;31m(C[00m
								(NX
									(PWS was))[01;31m)[00m)
						(PX
							[01;31m(MF[00m
								(PX fur einen hotelwunsch)
								(NX sie)[01;31m)[00m))
					(VC haben))))
		(SU
			(SIMPX
				(C ob)
				(MF
					(NX sie)
					(ADJX
						(ADJX zentral)
						[01;36m(NF[00m
							(PX
								(KON oder)
								(PX am flughafen))[01;36m)[00m)))
			(SIMPX
				(KON oder)
				(DM ja)
				(SIMPX
					[01;36m(LV[00m
						(SIMPX
							(C wenn)
							(MF sie mit der bahn)
							(VC kommen))[01;36m)[00m
					(ADVX dann)
					(ADVX naturlich nicht)
					(PX am flughafen))))))
Step:Unary
{'subtrees': ['PX'], 'family': ['ADJX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'APPRART', 'NN'), 'right siblings': [], 'left siblings': [(ADJX (ADJD zentral))], 'auto preterminal span': (22, 25), 'span': (22, 25), 'parent': 'ADJX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX
				[01;31m(SIMPX[00m
					(VF da)
					(LK ware)
					[01;31m(MF[00m
						(ADVX noch)
						(NX die frage naturlich nach dem hotel)[01;31m)[00m[01;31m)[00m
				(SIMPX
					(C ob)
					(MF
						(NX sie)
						(NX
							(NX was)
							[01;31m(C[00m
								(NX
									(PWS was))[01;31m)[00m)
						(PX
							[01;31m(MF[00m
								(PX fur einen hotelwunsch)
								(NX sie)[01;31m)[00m))
					(VC haben))))
		(SU
			(SIMPX ob sie zentral oder am flughafen)
			(SIMPX
				(KON oder)
				(DM ja)
				(SIMPX
					[01;36m(LV[00m
						(SIMPX
							(C wenn)
							(MF sie mit der bahn)
							(VC kommen))[01;36m)[00m
					(ADVX dann)
					(ADVX naturlich nicht)
					(PX am flughafen))))))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['LV', 'ADVX', 'ADVX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'APPR', 'ART', 'NN', 'VVFIN'), 'right siblings': [(ADVX (ADV dann)), (ADVX (ADVX (ADV naturlich)) (PTKNEG nicht)), (PX (APPRART am) (NX (NN flughafen)))], 'left siblings': [], 'auto preterminal span': (27, 33), 'span': (27, 33), 'parent': 'SIMPX', 'label': 'LV', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX
				[01;31m(SIMPX[00m
					(VF da)
					(LK ware)
					[01;31m(MF[00m
						(ADVX noch)
						(NX die frage naturlich nach dem hotel)[01;31m)[00m[01;31m)[00m
				(SIMPX
					(C ob)
					(MF
						(NX sie)
						(NX
							(NX was)
							[01;31m(C[00m
								(NX
									(PWS was))[01;31m)[00m)
						(PX
							[01;31m(MF[00m
								(PX fur einen hotelwunsch)
								(NX sie)[01;31m)[00m))
					(VC haben))))
		(SU ob sie zentral oder am flughafen oder ja wenn sie mit der bahn kommen dann naturlich nicht am flughafen)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'ADV', 'ART', 'NN', 'ADV', 'APPR', 'ART', 'NN', 'KOUS', 'PPER', 'PIS', 'PWS', 'APPR', 'ART', 'NN', 'PPER', 'VAFIN'), 'right siblings': ['SIMPX'], 'parent': 'SIMPX', 'auto preterminal span': (1, 19), 'span': (1, 10), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX
				(VF da)
				(LK ware)
				[01;31m(MF[00m
					(ADVX noch)
					(NX die frage naturlich nach dem hotel)[01;31m)[00m
				(SIMPX
					(C ob)
					(MF
						(NX sie)
						(NX
							(NX was)
							[01;31m(C[00m
								(NX
									(PWS was))[01;31m)[00m)
						(PX
							[01;31m(MF[00m
								(PX fur einen hotelwunsch)
								(NX sie)[01;31m)[00m))
					(VC haben))))
		(SU ob sie zentral oder am flughafen oder ja wenn sie mit der bahn kommen dann naturlich nicht am flughafen)))
Step:UNSET remove
{'subtrees': ['ADVX', 'NX'], 'family': ['VF', 'LK', 'MF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'ADV', 'ART', 'NN', 'ADV', 'APPR', 'ART', 'NN', 'KOUS', 'PPER', 'PIS', 'PWS', 'APPR', 'ART', 'NN', 'PPER', 'VAFIN'), 'right siblings': ['SIMPX'], 'parent': 'SIMPX', 'auto preterminal span': (1, 19), 'span': (3, 10), 'left siblings': ['VF', 'LK'], 'label': 'MF', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX
				(VF da)
				(LK ware)
				(ADVX noch)
				(NX die frage naturlich nach dem hotel)
				(SIMPX
					(C ob)
					(MF
						(NX sie)
						(NX
							(NX was)
							[01;31m(C[00m
								(NX
									(PWS was))[01;31m)[00m)
						(PX
							[01;31m(MF[00m
								(PX fur einen hotelwunsch)
								(NX sie)[01;31m)[00m))
					(VC haben))))
		(SU ob sie zentral oder am flughafen oder ja wenn sie mit der bahn kommen dann naturlich nicht am flughafen)))
Step:Unary
{'subtrees': ['NX'], 'family': ['NX', 'C'], 'over_word': False, 'over words': False, 'auto preterminals': ('PIS', 'PWS'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (12, 14), 'span': (13, 14), 'left siblings': ['NX'], 'label': 'C', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX
				(VF da)
				(LK ware)
				(ADVX noch)
				(NX die frage naturlich nach dem hotel)
				(SIMPX
					(C ob)
					(MF
						(NX sie)
						(NX was was)
						(PX
							[01;31m(MF[00m
								(PX fur einen hotelwunsch)
								(NX sie)[01;31m)[00m))
					(VC haben))))
		(SU ob sie zentral oder am flughafen oder ja wenn sie mit der bahn kommen dann naturlich nicht am flughafen)))
Step:Unary
{'subtrees': ['PX', 'NX'], 'family': ['MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NN', 'PPER'), 'right siblings': [], 'parent': 'PX', 'auto preterminal span': (14, 18), 'span': (14, 18), 'left siblings': [], 'label': 'MF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja da ware noch die frage naturlich nach dem hotel ob sie was was fur einen hotelwunsch sie haben ob sie zentral oder am flughafen oder ja wenn sie mit der bahn kommen dann naturlich nicht am flughafen)

Sentence 591:
18 Initial errors
0 on fringe, 10 iterations
4 Error:PP Attachment
4 Error:NP Attachment
2 Error:Modifier Attachment
1 Error:PP Attachment
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:UNSET remove
2 Error:PP Attachment
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU ja sicher)
		(SU
			(SIMPX
				(VF sie)
				(LK sagten)
				(MF
					(ADVX gerade)
					[01;31m(NX[00m
						(ADVX nicht)
						(ADVX gerade)
						[01;36m(NX[00m
							(ART das)
							(NN billigste)[01;36m)[00m[01;31m)[00m)))
		(SU
			[01;31m(SIMPX[00m
				(VF dann)
				(LK wurde)
				(MF ich vielleicht das hotel schweizerhof)
				(VC empfehlen)
				[01;31m(NF[00m [01;33m(R (NF (PX[00m
					[01;31m(R[00m
						(C was)
						(MF ziemlich zentral)
						(VC ist)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			(PX mit konferenzraum und garage) [01;33mPX)[00m
			(SIMPX falls sie vielleicht doch mit dem wagen kommen wollen)) [01;33mNF) R)[00m
		(SU
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF das)
				(LK hatte)
				[01;31m(MF[00m
					(ADVX halt)
					(NX [01;33m(NX[00m
						(NX eine preisklasse)
						[01;31m(PX[00m
							(APPR von)
							[01;31m(NX[00m [01;33m(PX[00m
								[01;31m(PX[00m
									(APPR pro)
									[01;33m(NX[00m (NX ubernachtung)[01;31m)[00m
								[01;31m(NX[00m
									[01;31m(NX[00m
										(NN einzelzimmer)[01;31m)[00m [01;33mNX) PX) NX)[00m
									(NX zweihundert funfundvierzig bis zweihundert funfundneunzig mark)[01;31m)[00m[01;31m)[00m[01;31m)[00m)[01;31m)[00m[01;31m)[00m
			(PX je nachdem))))
Step:PP Attachment
{'new_parent': 'R', 'new_family': ['C', 'MF', 'VC', 'PX', 'SIMPX'], 'mover info': [('PX', (21, 25)), ('SIMPX', (25, 34))], 'old_family': ['SIMPX', 'PX', 'SIMPX'], 'start left siblings': ['SIMPX'], 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'ADV', 'ART', 'NN', 'NE', 'VVINF', 'PRELS', 'ADV', 'ADJD', 'VAFIN', 'APPR', 'NN', 'KON', 'NN', 'KOUS', 'PPER', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'VVINF', 'VMFIN'), 'start right siblings': [], 'end left siblings': ['C', 'MF', 'VC'], 'auto preterminal span': (9, 34), 'movers': ['PX', 'SIMPX'], 'old_parent': 'SU', 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU ja sicher)
		(SU
			(SIMPX
				(VF sie)
				(LK sagten)
				(MF
					(ADVX gerade)
					[01;31m(NX[00m
						(ADVX nicht)
						(ADVX gerade)
						[01;36m(NX[00m
							(ART das)
							(NN billigste)[01;36m)[00m[01;31m)[00m)))
		(SU
			[01;31m(SIMPX[00m
				(VF dann)
				(LK wurde)
				(MF ich vielleicht das hotel schweizerhof)
				(VC empfehlen)
				(NF
					(R
						[01;36m(PX[00m
							(C was)
							(MF ziemlich zentral)
							(VC ist)
							(PX mit konferenzraum und garage)[01;36m)[00m
						(SIMPX falls sie vielleicht doch mit dem wagen kommen wollen)))[01;31m)[00m)
		(SU
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF das)
				(LK hatte)
				[01;31m(MF[00m
					(ADVX halt)
					(NX [01;33m(NX[00m
						(NX eine preisklasse)
						[01;31m(PX[00m
							(APPR von)
							[01;31m(NX[00m [01;33m(PX[00m
								[01;31m(PX[00m
									(APPR pro)
									[01;33m(NX[00m (NX ubernachtung)[01;31m)[00m
								[01;31m(NX[00m
									[01;31m(NX[00m
										(NN einzelzimmer)[01;31m)[00m [01;33mNX) PX) NX)[00m
									(NX zweihundert funfundvierzig bis zweihundert funfundneunzig mark)[01;31m)[00m[01;31m)[00m[01;31m)[00m)[01;31m)[00m[01;31m)[00m
			(PX je nachdem))))
Step:NP Attachment
{'new_parent': 'PX', 'new_family': ['APPR', 'NX', 'NX'], 'mover info': [('NX', (43, 44))], 'old_family': ['NX', 'NX'], 'start left siblings': [], 'auto preterminals': ('APPR', 'NN', 'NN', 'CARD', 'CARD', 'APPR', 'CARD', 'CARD', 'NN'), 'start right siblings': ['NX'], 'end left siblings': ['APPR', 'NX'], 'auto preterminal span': (41, 50), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'NX', 'POS confusion': ('NN', 'NN'), 'added and moved': True, 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(SU ja sicher)
		(SU
			(SIMPX
				(VF sie)
				(LK sagten)
				(MF
					(ADVX gerade)
					[01;31m(NX[00m
						(ADVX nicht)
						(ADVX gerade)
						[01;36m(NX[00m
							(ART das)
							(NN billigste)[01;36m)[00m[01;31m)[00m)))
		(SU
			[01;31m(SIMPX[00m
				(VF dann)
				(LK wurde)
				(MF ich vielleicht das hotel schweizerhof)
				(VC empfehlen)
				(NF
					(R
						[01;36m(PX[00m
							(C was)
							(MF ziemlich zentral)
							(VC ist)
							(PX mit konferenzraum und garage)[01;36m)[00m
						(SIMPX falls sie vielleicht doch mit dem wagen kommen wollen)))[01;31m)[00m)
		(SU
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF das)
				(LK hatte)
				[01;31m(MF[00m
					(ADVX halt)
					(NX [01;33m(NX[00m
						(NX eine preisklasse)
						[01;31m(PX[00m
							(APPR von)
							[01;31m(NX[00m
								(PX
									(APPR pro)
									(NX
										(NX ubernachtung)
										[01;31m(NX[00m
											(NN einzelzimmer)[01;31m)[00m)) [01;33mNX)[00m
								(NX zweihundert funfundvierzig bis zweihundert funfundneunzig mark)[01;31m)[00m[01;31m)[00m)[01;31m)[00m[01;31m)[00m
			(PX je nachdem))))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['ADVX', 'ADVX', 'ADVX', 'NX'], 'mover info': [('ADVX', (5, 6)), ('ADVX', (6, 7))], 'old_family': ['ADVX', 'ADVX', 'ART', 'NN'], 'start left siblings': [], 'auto preterminals': ('ADV', 'PTKNEG', 'ADV', 'ART', 'NN'), 'start right siblings': ['ART', 'NN'], 'end left siblings': ['ADVX'], 'auto preterminal span': (4, 9), 'movers': ['ADVX', 'ADVX'], 'old_parent': 'NX', 'end right siblings': ['NX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU ja sicher)
		(SU sie sagten gerade nicht gerade das billigste)
		(SU
			[01;31m(SIMPX[00m
				(VF dann)
				(LK wurde)
				(MF ich vielleicht das hotel schweizerhof)
				(VC empfehlen)
				(NF
					(R
						[01;36m(PX[00m
							(C was)
							(MF ziemlich zentral)
							(VC ist)
							(PX mit konferenzraum und garage)[01;36m)[00m
						(SIMPX falls sie vielleicht doch mit dem wagen kommen wollen)))[01;31m)[00m)
		(SU
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF das)
				(LK hatte)
				[01;31m(MF[00m
					(ADVX halt)
					(NX [01;33m(NX[00m
						(NX eine preisklasse)
						[01;31m(PX[00m
							(APPR von)
							[01;31m(NX[00m
								(PX
									(APPR pro)
									(NX
										(NX ubernachtung)
										[01;31m(NX[00m
											(NN einzelzimmer)[01;31m)[00m)) [01;33mNX)[00m
								(NX zweihundert funfundvierzig bis zweihundert funfundneunzig mark)[01;31m)[00m[01;31m)[00m)[01;31m)[00m[01;31m)[00m
			(PX je nachdem))))
Step:PP Attachment
{'subtrees': ['C', 'MF', 'VC', 'PX'], 'family': ['PX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PRELS', 'ADV', 'ADJD', 'VAFIN', 'APPR', 'NN', 'KON', 'NN'), 'right siblings': [(SIMPX (C (KOUS falls)) (MF (NX (PPER sie)) (ADVX (ADV vielleicht)) (ADVX (ADV doch)) (PX (APPR mit) (NX (ART dem) (NN wagen)))) (VC (VXINF (VVINF kommen)) (VXFIN (VMFIN wollen))))], 'left siblings': [], 'auto preterminal span': (17, 25), 'span': (17, 25), 'parent': 'R', 'label': 'PX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU ja sicher)
		(SU sie sagten gerade nicht gerade das billigste)
		(SU
			[01;31m(SIMPX[00m
				(VF dann)
				(LK wurde)
				(MF ich vielleicht das hotel schweizerhof)
				(VC empfehlen)
				(NF was ziemlich zentral ist mit konferenzraum und garage falls sie vielleicht doch mit dem wagen kommen wollen)[01;31m)[00m)
		(SU
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF das)
				(LK hatte)
				[01;31m(MF[00m
					(ADVX halt)
					(NX [01;33m(NX[00m
						(NX eine preisklasse)
						[01;31m(PX[00m
							(APPR von)
							[01;31m(NX[00m
								(PX
									(APPR pro)
									(NX
										(NX ubernachtung)
										[01;31m(NX[00m
											(NN einzelzimmer)[01;31m)[00m)) [01;33mNX)[00m
								(NX zweihundert funfundvierzig bis zweihundert funfundneunzig mark)[01;31m)[00m[01;31m)[00m)[01;31m)[00m[01;31m)[00m
			(PX je nachdem))))
Step:Unary
{'subtrees': ['VF', 'LK', 'MF', 'VC', 'NF'], 'family': ['SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'ADV', 'ART', 'NN', 'NE', 'VVINF', 'PRELS', 'ADV', 'ADJD', 'VAFIN', 'APPR', 'NN', 'KON', 'NN', 'KOUS', 'PPER', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'VVINF', 'VMFIN'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (9, 34), 'span': (9, 34), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU ja sicher)
		(SU sie sagten gerade nicht gerade das billigste)
		(SU dann wurde ich vielleicht das hotel schweizerhof empfehlen was ziemlich zentral ist mit konferenzraum und garage falls sie vielleicht doch mit dem wagen kommen wollen)
		(SU
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF das)
				(LK hatte)
				[01;31m(MF[00m
					(ADVX halt)
					(NX [01;33m(NX[00m
						(NX eine preisklasse)
						[01;31m(PX[00m
							(APPR von)
							[01;31m(NX[00m
								(PX
									(APPR pro)
									(NX
										(NX ubernachtung)
										[01;31m(NX[00m
											(NN einzelzimmer)[01;31m)[00m)) [01;33mNX)[00m
								(NX zweihundert funfundvierzig bis zweihundert funfundneunzig mark)[01;31m)[00m[01;31m)[00m)[01;31m)[00m[01;31m)[00m
			(PX je nachdem))))
Step:UNSET remove
{'subtrees': ['KOORD', 'VF', 'LK', 'MF'], 'family': ['SIMPX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'PDS', 'VAFIN', 'ADV', 'ART', 'NN', 'APPR', 'APPR', 'NN', 'NN', 'CARD', 'CARD', 'APPR', 'CARD', 'CARD', 'NN', 'ADV', 'PROP'), 'right siblings': ['PX'], 'parent': 'SU', 'auto preterminal span': (34, 52), 'span': (34, 50), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU ja sicher)
		(SU sie sagten gerade nicht gerade das billigste)
		(SU dann wurde ich vielleicht das hotel schweizerhof empfehlen was ziemlich zentral ist mit konferenzraum und garage falls sie vielleicht doch mit dem wagen kommen wollen)
		(SU
			(KOORD und)
			(VF das)
			(LK hatte)
			[01;31m(MF[00m
				(ADVX halt)
				(NX [01;33m(NX[00m
					(NX eine preisklasse)
					[01;31m(PX[00m
						(APPR von)
						[01;31m(NX[00m
							(PX
								(APPR pro)
								(NX
									(NX ubernachtung)
									[01;31m(NX[00m
										(NN einzelzimmer)[01;31m)[00m)) [01;33mNX)[00m
							(NX zweihundert funfundvierzig bis zweihundert funfundneunzig mark)[01;31m)[00m[01;31m)[00m)[01;31m)[00m
			(PX je nachdem))))
Step:UNSET remove
{'subtrees': ['ADVX', 'NX'], 'family': ['KOORD', 'VF', 'LK', 'MF', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'PDS', 'VAFIN', 'ADV', 'ART', 'NN', 'APPR', 'APPR', 'NN', 'NN', 'CARD', 'CARD', 'APPR', 'CARD', 'CARD', 'NN', 'ADV', 'PROP'), 'right siblings': ['PX'], 'parent': 'SU', 'auto preterminal span': (34, 52), 'span': (37, 50), 'left siblings': ['KOORD', 'VF', 'LK'], 'label': 'MF', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU ja sicher)
		(SU sie sagten gerade nicht gerade das billigste)
		(SU dann wurde ich vielleicht das hotel schweizerhof empfehlen was ziemlich zentral ist mit konferenzraum und garage falls sie vielleicht doch mit dem wagen kommen wollen)
		(SU
			(KOORD und)
			(VF das)
			(LK hatte)
			(ADVX halt)
			(NX [01;33m(NX[00m
				(NX eine preisklasse)
				[01;31m(PX[00m
					(APPR von)
					[01;31m(NX[00m
						(PX
							(APPR pro)
							(NX
								(NX ubernachtung)
								[01;31m(NX[00m
									(NN einzelzimmer)[01;31m)[00m)) [01;33mNX)[00m
						(NX zweihundert funfundvierzig bis zweihundert funfundneunzig mark)[01;31m)[00m[01;31m)[00m)
			(PX je nachdem))))
Step:UNSET remove
{'subtrees': ['APPR', 'NX'], 'family': ['NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'APPR', 'APPR', 'NN', 'NN', 'CARD', 'CARD', 'APPR', 'CARD', 'CARD', 'NN'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (38, 50), 'span': (40, 50), 'left siblings': ['NX'], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU ja sicher)
		(SU sie sagten gerade nicht gerade das billigste)
		(SU dann wurde ich vielleicht das hotel schweizerhof empfehlen was ziemlich zentral ist mit konferenzraum und garage falls sie vielleicht doch mit dem wagen kommen wollen)
		(SU
			(KOORD und)
			(VF das)
			(LK hatte)
			(ADVX halt)
			(NX [01;33m(NX[00m
				(NX eine preisklasse)
				(APPR von)
				[01;31m(NX[00m
					(PX
						(APPR pro)
						(NX
							(NX ubernachtung)
							[01;31m(NX[00m
								(NN einzelzimmer)[01;31m)[00m)) [01;33mNX)[00m
					(NX zweihundert funfundvierzig bis zweihundert funfundneunzig mark)[01;31m)[00m)
			(PX je nachdem))))
Step:PP Attachment
{'new_parent': 'NX', 'new_family': ['NX', 'APPR', 'PX', 'NX'], 'mover info': [('PX', (41, 44))], 'old_family': ['PX', 'NX'], 'start left siblings': [], 'auto preterminals': ('ART', 'NN', 'APPR', 'APPR', 'NN', 'NN', 'CARD', 'CARD', 'APPR', 'CARD', 'CARD', 'NN'), 'start right siblings': ['NX'], 'end left siblings': ['NX', 'APPR'], 'auto preterminal span': (38, 50), 'adding node already present': False, 'movers': ['PX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': ['NX'], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(SU ja sicher)
		(SU sie sagten gerade nicht gerade das billigste)
		(SU dann wurde ich vielleicht das hotel schweizerhof empfehlen was ziemlich zentral ist mit konferenzraum und garage falls sie vielleicht doch mit dem wagen kommen wollen)
		(SU
			(KOORD und)
			(VF das)
			(LK hatte)
			(ADVX halt)
			(NX
				(NX
					(NX eine preisklasse)
					(APPR von)
					(PX
						(APPR pro)
						(NX
							(NX ubernachtung)
							[01;31m(NX[00m
								(NN einzelzimmer)[01;31m)[00m)))
				(NX zweihundert funfundvierzig bis zweihundert funfundneunzig mark))
			(PX je nachdem))))
Step:Single Word Phrase
{'subtrees': ['NN'], 'family': ['NX', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('NN', 'NN'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (42, 44), 'span': (43, 44), 'left siblings': ['NX'], 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP ja sicher sie sagten gerade nicht gerade das billigste dann wurde ich vielleicht das hotel schweizerhof empfehlen was ziemlich zentral ist mit konferenzraum und garage falls sie vielleicht doch mit dem wagen kommen wollen und das hatte halt eine preisklasse von pro ubernachtung einzelzimmer zweihundert funfundvierzig bis zweihundert funfundneunzig mark je nachdem)

Sentence 592:
4 Initial errors
0 on fringe, 3 iterations
1 Error:PP Attachment
2 Error:NP Attachment
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU ja sie sagten sie wollten morgens ankommen)
		(SU
			(SIMPX
				(LK ware)
				(MF
					(NX ihnen)
					[01;31m(NX[00m [01;33m(NX[00m
						(NX die abfahrt)
						[01;31m(PX[00m
							(PX von bonn) [01;33mNX)[00m
							[01;33m(NX[00m (NX sechs uhr funfundvierzig)[01;31m)[00m[01;31m)[00m
					(ADJX zu fruh)))) [01;33mNX)[00m
		(SU oder ginge das)))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['NX', 'NX', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ART', 'NN', 'APPR', 'NE', 'CARD', 'NN', 'CARD', 'PTKA', 'ADJD'), 'right siblings': ['ADJX'], 'parent': 'MF', 'auto preterminal span': (8, 18), 'span': (9, 16), 'left siblings': ['NX'], 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU ja sie sagten sie wollten morgens ankommen)
		(SU
			(SIMPX
				(LK ware)
				(MF
					(NX ihnen)
					[01;33m(NX[00m (NX die abfahrt)
					[01;31m(PX[00m
						(PX von bonn) [01;33mNX)[00m
						[01;33m(NX[00m (NX sechs uhr funfundvierzig)[01;31m)[00m
					(ADJX zu fruh)))) [01;33mNX)[00m
		(SU oder ginge das)))
Step:NP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'NX', 'PX', 'NX', 'ADJX'], 'mover info': [('NX', (13, 16))], 'old_family': ['PX', 'NX'], 'start left siblings': ['PX'], 'auto preterminals': ('PPER', 'ART', 'NN', 'APPR', 'NE', 'CARD', 'NN', 'CARD', 'PTKA', 'ADJD'), 'start right siblings': [], 'end left siblings': ['NX', 'NX', 'PX'], 'auto preterminal span': (8, 18), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'PX', 'added and moved': True, 'end right siblings': ['ADJX'], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(SU ja sie sagten sie wollten morgens ankommen)
		(SU
			(SIMPX
				(LK ware)
				(MF
					(NX ihnen)
					[01;36m(NX[00m
						(NX die abfahrt)
						(PX von bonn)[01;36m)[00m
					(NX sechs uhr funfundvierzig zu fruh))))
		(SU oder ginge das)))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['NX', 'NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'APPR', 'NE'), 'right siblings': [(NX (NX (NX (ADJX (CARD sechs)) (NN uhr)) (ADJX (CARD funfundvierzig))) (ADJX (PTKA zu) (ADJD fruh)))], 'left siblings': [(NX (PPER ihnen))], 'auto preterminal span': (9, 13), 'span': (9, 13), 'parent': 'MF', 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP ja sie sagten sie wollten morgens ankommen ware ihnen die abfahrt von bonn sechs uhr funfundvierzig zu fruh oder ginge das)

Sentence 593:
0 Initial errors
0 on fringe, 0 iterations

Sentence 594:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU halb acht dann waren sie um zwei minuten nach elf in hannover)
		(SU
			[01;36m(KOORD[00m [01;31m(DM[00m
				(KON und)[01;31m)[00m[01;36m)[00m
			(DM ja))))
Step:Single Word Phrase
{'family': ['KOORD', 'DM'], 'auto preterminal span': (12, 13), 'span': (12, 13), 'subtrees': ['KON'], 'parent': 'SU', 'over_word': True, 'auto preterminals': ('KON',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('DM', 'KOORD')}
(TOP halb acht dann waren sie um zwei minuten nach elf in hannover und ja)

Sentence 595:
0 Initial errors
0 on fringe, 0 iterations

Sentence 596:
2 Initial errors
0 on fringe, 2 iterations
1 Error:Co-ordination
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;36m(SU[00m
			(SU
				(DM ja)
				(SIMPX ich wurde ganz gern eine reise buchen bei ihnen)
				(SIMPX
					(VF und zwar)
					(LK mochte)
					(MF
						(NX ich)
						[01;36m(PX[00m
							(PX im august)
							(PX fur ein paar tage)[01;36m)[00m)
					(VC wegfahren)
					(NF nach hannover)))
			(SU und zwar wurde das am montag dienstag sein das ist der vierte funfte august)[01;36m)[00m
		(SU was konnen sie mir da anbieten)))
Step:Co-ordination
{'subtrees': ['SU', 'SU'], 'family': ['SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VAFIN', 'ADV', 'ADV', 'ART', 'NN', 'VVINF', 'APPR', 'PPER', 'KON', 'ADV', 'VMFIN', 'PPER', 'APPRART', 'NN', 'APPR', 'ART', 'PIDAT', 'NN', 'VVINF', 'APPR', 'NE', 'KON', 'ADV', 'VAFIN', 'PDS', 'APPRART', 'NN', 'NN', 'VAINF', 'PDS', 'VAFIN', 'ART', 'ADJA', 'ADJA', 'NN'), 'right siblings': [(SU (SIMPX (VF (NX (PWS was))) (LK (VXFIN (VMFIN konnen))) (MF (NX (PPER sie)) (NX (PPER mir)) (ADVX (ADV da))) (VC (VXINF (VVINF anbieten)))))], 'left siblings': [], 'auto preterminal span': (0, 37), 'span': (0, 37), 'parent': 'TURN', 'label': 'SU', 'classified_type': 'Co-ordination', 'type': 'add'}
(TOP
	(TURN
		(SU
			(SU
				(DM ja)
				(SIMPX ich wurde ganz gern eine reise buchen bei ihnen)
				(SIMPX
					(VF und zwar)
					(LK mochte)
					(MF
						(NX ich)
						[01;36m(PX[00m
							(PX im august)
							(PX fur ein paar tage)[01;36m)[00m)
					(VC wegfahren)
					(NF nach hannover)))
			(SU und zwar wurde das am montag dienstag sein das ist der vierte funfte august))
		(SU was konnen sie mir da anbieten)))
Step:PP Attachment
{'subtrees': ['PX', 'PX'], 'family': ['NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'NN', 'APPR', 'ART', 'PIDAT', 'NN'), 'right siblings': [], 'left siblings': [(NX (PPER ich))], 'auto preterminal span': (14, 20), 'span': (14, 20), 'parent': 'MF', 'label': 'PX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP ja ich wurde ganz gern eine reise buchen bei ihnen und zwar mochte ich im august fur ein paar tage wegfahren nach hannover und zwar wurde das am montag dienstag sein das ist der vierte funfte august was konnen sie mir da anbieten)

Sentence 597:
8 Initial errors
0 on fringe, 4 iterations
4 Error:UNSET move
2 Error:Different label
1 Error:Single Word Phrase
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU ach so)
		(SU stimmt)
		(SU
			[01;36m(SIMPX[00m
				[01;31m(SIMPX[00m
					(LK habe)
					[01;31m(MF[00m [01;33m(MF[00m
						(NX ich)
						(NX mir)
						(ADVX noch)[01;31m)[00m[01;31m)[00m
				[01;36m(NX[00m
					(PIAT keine) [01;33mMF)[00m[01;36m)[00m[01;36m)[00m
			(DM ja)
			(SIMPX habe ich mir noch keine gedanken drum gemacht))
		(SU ja es sollte schon relativ zentral gelegen sein denke ich)
		(SU es mus auch nicht eines der schlechteren sein)
		(SU
			(SIMPX
				(LK hatten)
				(MF sie da eines)
				[01;36m(SIMPX[00m
					(NF
						[01;31m(R[00m
							(C
								[01;31m(NX[00m
									(PRELS das)[01;31m)[00m)
							(MF sie mir)
							(VC empfehlen konnten)[01;31m)[00m)[01;36m)[00m))))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['NX', 'NX', 'ADVX', 'PIAT'], 'mover info': [('PIAT', (7, 8))], 'old_family': ['SIMPX', 'PIAT', 'DM', 'SIMPX'], 'start left siblings': ['SIMPX'], 'auto preterminals': ('VAFIN', 'PPER', 'PRF', 'ADV', 'PIAT', 'PTKANT', 'VAFIN', 'PPER', 'PRF', 'ADV', 'PIAT', 'NN', 'PROP', 'VVPP'), 'start right siblings': ['DM', 'SIMPX'], 'end left siblings': ['NX', 'NX', 'ADVX'], 'auto preterminal span': (3, 17), 'movers': ['PIAT'], 'old_parent': 'SU', 'POS confusion': ('PIAT', 'PIAT'), 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU ach so)
		(SU stimmt)
		(SU
			(SIMPX
				(LK habe)
				(MF
					(NX ich)
					(NX mir)
					(ADVX noch)
					[01;36m(NX[00m
						(PIAT keine)[01;36m)[00m))
			(DM ja)
			(SIMPX habe ich mir noch keine gedanken drum gemacht))
		(SU ja es sollte schon relativ zentral gelegen sein denke ich)
		(SU es mus auch nicht eines der schlechteren sein)
		(SU
			(SIMPX
				(LK hatten)
				(MF sie da eines)
				[01;36m(SIMPX[00m
					(NF
						[01;31m(R[00m
							(C
								[01;31m(NX[00m
									(PRELS das)[01;31m)[00m)
							(MF sie mir)
							(VC empfehlen konnten)[01;31m)[00m)[01;36m)[00m))))
Step:Different label
{'family': ['SIMPX'], 'auto preterminal span': (39, 44), 'span': (39, 44), 'subtrees': ['C', 'MF', 'VC'], 'parent': 'NF', 'over_word': False, 'auto preterminals': ('PRELS', 'PPER', 'PPER', 'VVINF', 'VMFIN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('R', 'SIMPX')}
(TOP
	(TURN
		(SU ach so)
		(SU stimmt)
		(SU
			(SIMPX
				(LK habe)
				(MF
					(NX ich)
					(NX mir)
					(ADVX noch)
					[01;36m(NX[00m
						(PIAT keine)[01;36m)[00m))
			(DM ja)
			(SIMPX habe ich mir noch keine gedanken drum gemacht))
		(SU ja es sollte schon relativ zentral gelegen sein denke ich)
		(SU es mus auch nicht eines der schlechteren sein)
		(SU
			(SIMPX
				(LK hatten)
				(MF sie da eines)
				(NF
					(SIMPX
						(C
							[01;31m(NX[00m
								(PRELS das)[01;31m)[00m)
						(MF sie mir)
						(VC empfehlen konnten)))))))
Step:Single Word Phrase
{'subtrees': ['PIAT'], 'family': ['NX', 'NX', 'ADVX', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('PIAT',), 'right siblings': [], 'left siblings': [(NX (PPER ich)), (NX (PRF mir)), (ADVX (ADV noch))], 'auto preterminal span': (7, 8), 'span': (7, 8), 'parent': 'MF', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SU ach so)
		(SU stimmt)
		(SU habe ich mir noch keine ja habe ich mir noch keine gedanken drum gemacht)
		(SU ja es sollte schon relativ zentral gelegen sein denke ich)
		(SU es mus auch nicht eines der schlechteren sein)
		(SU
			(SIMPX
				(LK hatten)
				(MF sie da eines)
				(NF
					(SIMPX
						(C
							[01;31m(NX[00m
								(PRELS das)[01;31m)[00m)
						(MF sie mir)
						(VC empfehlen konnten)))))))
Step:Single Word Phrase
{'subtrees': ['PRELS'], 'family': ['NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('PRELS',), 'right siblings': [], 'parent': 'C', 'auto preterminal span': (39, 40), 'span': (39, 40), 'left siblings': [], 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP ach so stimmt habe ich mir noch keine ja habe ich mir noch keine gedanken drum gemacht ja es sollte schon relativ zentral gelegen sein denke ich es mus auch nicht eines der schlechteren sein hatten sie da eines das sie mir empfehlen konnten)

Sentence 598:
0 Initial errors
0 on fringe, 0 iterations

Sentence 599:
13 Initial errors
0 on fringe, 8 iterations
3 Error:UNSET move
2 Error:Single Word Phrase
2 Error:Different label
2 Error:UNSET move
1 Error:Single Word Phrase
1 Error:Unary
1 Error:UNSET remove
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM wie gesagt)
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(VF was)
				(LK war)
				[01;33m(MF[00m (MF das jetzt)[01;31m)[00m
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(NX
						(NN montag)
						(NX der vierte august))[01;31m)[00m [01;33mMF) SIMPX)[00m
				(LK wollte)
				(MF ich dann)
				(VC los)[01;31m)[00m
			[01;31m(PX[00m
				(KON und)
				(ADVX dann)
				(ADJX drei vier tage spater)
				(ADVX wieder)
				(PX nach hause)[01;31m)[00m
			(SIMPX
				(VF dann)
				(LK ist)
				[01;36m(MF[00m
					[01;36m(NX[00m
						(ART das)[01;36m)[00m
					[01;31m(MF[00m
						(NX die ausstellung)
						(ADVX vorbei)[01;31m)[00m[01;36m)[00m))
		(SU
			(SIMPX
				(VF das)
				(LK ware)
				(MF
					(ADVX also)
					(ADVX dann)
					[01;36m(ADJX[00m [01;31m(PX[00m
						[01;36m(NX[00m [01;31m(ADVX[00m
							(ADV spatestens)[01;31m)[00m[01;36m)[00m
						(APPRART am)
						(NX achten august)[01;31m)[00m[01;36m)[00m)))))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'VF'], 'mover info': [('VF', (6, 10))], 'old_family': ['VF', 'LK', 'MF', 'VC'], 'start left siblings': [], 'auto preterminals': ('KOUS', 'VVPP', 'PWS', 'VAFIN', 'PDS', 'ADV', 'NN', 'ART', 'ADJA', 'NN', 'VVFIN', 'PPER', 'ADV', 'PTKVZ', 'KON', 'ADV', 'CARD', 'CARD', 'NN', 'ADJD', 'ADV', 'APPR', 'NN', 'ADV', 'VAFIN', 'ART', 'ART', 'NN', 'ADV'), 'start right siblings': ['LK', 'MF', 'VC'], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (0, 29), 'adding node already present': False, 'movers': ['VF'], 'old_parent': 'SIMPX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'ADJX'}
(TOP
	(TURN
		(SU
			(DM wie gesagt)
			(SIMPX
				(VF was)
				(LK war)
				(MF
					(MF das jetzt)
					[01;31m(VF[00m
						(NX
							(NN montag)
							(NX der vierte august))[01;31m)[00m))
			[01;31m(SIMPX[00m
				(LK wollte)
				(MF ich dann)
				(VC los)[01;31m)[00m
			[01;31m(PX[00m
				(KON und)
				(ADVX dann)
				(ADJX drei vier tage spater)
				(ADVX wieder)
				(PX nach hause)[01;31m)[00m
			(SIMPX
				(VF dann)
				(LK ist)
				[01;36m(MF[00m
					[01;36m(NX[00m
						(ART das)[01;36m)[00m
					[01;31m(MF[00m
						(NX die ausstellung)
						(ADVX vorbei)[01;31m)[00m[01;36m)[00m))
		(SU
			(SIMPX
				(VF das)
				(LK ware)
				(MF
					(ADVX also)
					(ADVX dann)
					[01;36m(ADJX[00m [01;31m(PX[00m
						[01;36m(NX[00m [01;31m(ADVX[00m
							(ADV spatestens)[01;31m)[00m[01;36m)[00m
						(APPRART am)
						(NX achten august)[01;31m)[00m[01;36m)[00m)))))
Step:Single Word Phrase
{'family': ['NX', 'APPRART', 'NX'], 'auto preterminal span': (33, 34), 'span': (33, 34), 'subtrees': ['ADV'], 'parent': 'PX', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'NX')}
(TOP
	(TURN
		(SU
			(DM wie gesagt)
			(SIMPX
				(VF was)
				(LK war)
				(MF
					(MF das jetzt)
					[01;31m(VF[00m
						(NX
							(NN montag)
							(NX der vierte august))[01;31m)[00m))
			[01;31m(SIMPX[00m
				(LK wollte)
				(MF ich dann)
				(VC los)[01;31m)[00m
			[01;31m(PX[00m
				(KON und)
				(ADVX dann)
				(ADJX drei vier tage spater)
				(ADVX wieder)
				(PX nach hause)[01;31m)[00m
			(SIMPX
				(VF dann)
				(LK ist)
				[01;36m(MF[00m
					[01;36m(NX[00m
						(ART das)[01;36m)[00m
					[01;31m(MF[00m
						(NX die ausstellung)
						(ADVX vorbei)[01;31m)[00m[01;36m)[00m))
		(SU
			(SIMPX
				(VF das)
				(LK ware)
				(MF
					(ADVX also)
					(ADVX dann)
					[01;36m(ADJX[00m [01;31m(PX[00m
						(NX spatestens)
						(APPRART am)
						(NX achten august)[01;31m)[00m[01;36m)[00m)))))
Step:Different label
{'family': ['ADVX', 'ADVX', 'ADJX'], 'auto preterminal span': (33, 37), 'span': (33, 37), 'subtrees': ['NX', 'APPRART', 'NX'], 'parent': 'MF', 'over_word': False, 'auto preterminals': ('ADV', 'APPRART', 'ADJA', 'NN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('PX', 'ADJX')}
(TOP
	(TURN
		(SU
			(DM wie gesagt)
			(SIMPX
				(VF was)
				(LK war)
				(MF
					(MF das jetzt)
					[01;31m(VF[00m
						(NX
							(NN montag)
							(NX der vierte august))[01;31m)[00m))
			[01;31m(SIMPX[00m
				(LK wollte)
				(MF ich dann)
				(VC los)[01;31m)[00m
			[01;31m(PX[00m
				(KON und)
				(ADVX dann)
				(ADJX drei vier tage spater)
				(ADVX wieder)
				(PX nach hause)[01;31m)[00m
			(SIMPX
				(VF dann)
				(LK ist)
				[01;36m(MF[00m
					[01;36m(NX[00m
						(ART das)[01;36m)[00m
					[01;31m(MF[00m
						(NX die ausstellung)
						(ADVX vorbei)[01;31m)[00m[01;36m)[00m))
		(SU das ware also dann spatestens am achten august)))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['ART', 'NX', 'ADVX'], 'mover info': [('ART', (25, 26))], 'old_family': ['VF', 'LK', 'ART', 'MF'], 'start left siblings': ['VF', 'LK'], 'auto preterminals': ('ADV', 'VAFIN', 'ART', 'ART', 'NN', 'ADV'), 'start right siblings': ['MF'], 'end left siblings': [], 'auto preterminal span': (23, 29), 'movers': ['ART'], 'old_parent': 'SIMPX', 'POS confusion': ('ART', 'ART'), 'end right siblings': ['NX', 'ADVX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			(DM wie gesagt)
			(SIMPX
				(VF was)
				(LK war)
				(MF
					(MF das jetzt)
					[01;31m(VF[00m
						(NX
							(NN montag)
							(NX der vierte august))[01;31m)[00m))
			[01;31m(SIMPX[00m
				(LK wollte)
				(MF ich dann)
				(VC los)[01;31m)[00m
			[01;31m(PX[00m
				(KON und)
				(ADVX dann)
				(ADJX drei vier tage spater)
				(ADVX wieder)
				(PX nach hause)[01;31m)[00m
			(SIMPX
				(VF dann)
				(LK ist)
				(MF
					[01;36m(NX[00m
						(ART das)[01;36m)[00m
					(NX die ausstellung)
					(ADVX vorbei))))
		(SU das ware also dann spatestens am achten august)))
Step:Single Word Phrase
{'subtrees': ['ART'], 'family': ['NX', 'NX', 'ADVX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ART',), 'right siblings': [(NX (ART die) (NN ausstellung)), (ADVX (ADV vorbei))], 'left siblings': [], 'auto preterminal span': (25, 26), 'span': (25, 26), 'parent': 'MF', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM wie gesagt)
			(SIMPX
				(VF was)
				(LK war)
				(MF
					(MF das jetzt)
					[01;31m(VF[00m
						(NX
							(NN montag)
							(NX der vierte august))[01;31m)[00m))
			[01;31m(SIMPX[00m
				(LK wollte)
				(MF ich dann)
				(VC los)[01;31m)[00m
			[01;31m(PX[00m
				(KON und)
				(ADVX dann)
				(ADJX drei vier tage spater)
				(ADVX wieder)
				(PX nach hause)[01;31m)[00m
			(SIMPX dann ist das die ausstellung vorbei))
		(SU das ware also dann spatestens am achten august)))
Step:Unary
{'subtrees': ['NX'], 'family': ['MF', 'VF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'ADV', 'NN', 'ART', 'ADJA', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (4, 10), 'span': (6, 10), 'left siblings': ['MF'], 'label': 'VF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM wie gesagt)
			(SIMPX was war das jetzt montag der vierte august)
			[01;31m(SIMPX[00m
				(LK wollte)
				(MF ich dann)
				(VC los)[01;31m)[00m
			[01;31m(PX[00m
				(KON und)
				(ADVX dann)
				(ADJX drei vier tage spater)
				(ADVX wieder)
				(PX nach hause)[01;31m)[00m
			(SIMPX dann ist das die ausstellung vorbei))
		(SU das ware also dann spatestens am achten august)))
Step:UNSET remove
{'subtrees': ['LK', 'MF', 'VC'], 'family': ['DM', 'SIMPX', 'SIMPX', 'PX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'VVPP', 'PWS', 'VAFIN', 'PDS', 'ADV', 'NN', 'ART', 'ADJA', 'NN', 'VVFIN', 'PPER', 'ADV', 'PTKVZ', 'KON', 'ADV', 'CARD', 'CARD', 'NN', 'ADJD', 'ADV', 'APPR', 'NN', 'ADV', 'VAFIN', 'ART', 'ART', 'NN', 'ADV'), 'right siblings': ['PX', 'SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 29), 'span': (10, 14), 'left siblings': ['DM', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM wie gesagt)
			(SIMPX was war das jetzt montag der vierte august)
			(LK wollte)
			(MF ich dann)
			(VC los)
			[01;31m(PX[00m
				(KON und)
				(ADVX dann)
				(ADJX drei vier tage spater)
				(ADVX wieder)
				(PX nach hause)[01;31m)[00m
			(SIMPX dann ist das die ausstellung vorbei))
		(SU das ware also dann spatestens am achten august)))
Step:PP Attachment
{'subtrees': ['KON', 'ADVX', 'ADJX', 'ADVX', 'PX'], 'family': ['DM', 'SIMPX', 'LK', 'MF', 'VC', 'PX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'VVPP', 'PWS', 'VAFIN', 'PDS', 'ADV', 'NN', 'ART', 'ADJA', 'NN', 'VVFIN', 'PPER', 'ADV', 'PTKVZ', 'KON', 'ADV', 'CARD', 'CARD', 'NN', 'ADJD', 'ADV', 'APPR', 'NN', 'ADV', 'VAFIN', 'ART', 'ART', 'NN', 'ADV'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 29), 'span': (14, 23), 'left siblings': ['DM', 'SIMPX', 'LK', 'MF', 'VC'], 'label': 'PX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP wie gesagt was war das jetzt montag der vierte august wollte ich dann los und dann drei vier tage spater wieder nach hause dann ist das die ausstellung vorbei das ware also dann spatestens am achten august)

Sentence 600:
0 Initial errors
0 on fringe, 0 iterations

Sentence 601:
4 Initial errors
0 on fringe, 3 iterations
2 Error:UNSET move
1 Error:Unary
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU ja okay)
		(SU wie ist das mit dem gepack)
		(SU
			[01;36m(LV[00m
				(SIMPX
					(LK wird)
					(MF
						[01;31m(NX[00m
							[01;36m(NX[00m
								(ART das)[01;36m)[00m
							[01;36m(ADVX[00m
								(NN gepack)[01;36m)[00m[01;31m)[00m)
					(VC nachgesendet))[01;36m)[00m
			(SIMPX mus ich das selber schleppen))
		(SU ich habe so ein ruckenleiden)
		(SU deswegen)))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['NX', 'NN'], 'mover info': [('NN', (10, 11))], 'old_family': ['ART', 'NN'], 'start left siblings': ['ART'], 'auto preterminals': ('ART', 'NN'), 'start right siblings': [], 'end left siblings': ['NX'], 'auto preterminal span': (9, 11), 'movers': ['NN'], 'old_parent': 'NX', 'POS confusion': ('NN', 'NN'), 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU ja okay)
		(SU wie ist das mit dem gepack)
		(SU
			[01;36m(LV[00m
				(SIMPX
					(LK wird)
					(MF
						(NX das)
						[01;36m(ADVX[00m
							(NN gepack)[01;36m)[00m)
					(VC nachgesendet))[01;36m)[00m
			(SIMPX mus ich das selber schleppen))
		(SU ich habe so ein ruckenleiden)
		(SU deswegen)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['LV', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'ART', 'NN', 'VVPP'), 'right siblings': [(SIMPX (LK (VXFIN (VMFIN mus))) (MF (NX (PPER ich)) (NX (PDS das)) (ADVX (ADV selber))) (VC (VXINF (VVINF schleppen))))], 'left siblings': [], 'auto preterminal span': (8, 12), 'span': (8, 12), 'parent': 'SU', 'label': 'LV', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU ja okay)
		(SU wie ist das mit dem gepack)
		(SU
			(LV
				(SIMPX
					(LK wird)
					(MF
						(NX das)
						[01;36m(ADVX[00m
							(NN gepack)[01;36m)[00m)
					(VC nachgesendet)))
			(SIMPX mus ich das selber schleppen))
		(SU ich habe so ein ruckenleiden)
		(SU deswegen)))
Step:Single Word Phrase
{'subtrees': ['NN'], 'family': ['NX', 'ADVX'], 'over_word': True, 'over words': True, 'auto preterminals': ('NN',), 'right siblings': [], 'left siblings': [(NX (ART das))], 'auto preterminal span': (10, 11), 'span': (10, 11), 'parent': 'MF', 'label': 'ADVX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP ja okay wie ist das mit dem gepack wird das gepack nachgesendet mus ich das selber schleppen ich habe so ein ruckenleiden deswegen)

Sentence 602:
0 Initial errors
0 on fringe, 0 iterations

Sentence 603:
0 Initial errors
0 on fringe, 0 iterations

Sentence 604:
0 Initial errors
0 on fringe, 0 iterations

Sentence 605:
13 Initial errors
0 on fringe, 10 iterations
3 Error:Clause Attachment
2 Error:Single Word Phrase
1 Error:UNSET add
1 Error:UNSET add
1 Error:Unary
1 Error:Unary
1 Error:Unary
1 Error:UNSET add
1 Error:Single Word Phrase
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU hallo herr klein gut das wir uns treffen)
		[01;36m(SIMPX[00m
			(SU
				[01;31m(SIMPX[00m
					(VF ich)
					[01;36m(LKMVC[00m
						[01;33m(FKOORD[00m (LK habe)
						(VC gehort)
						(NF
							(SIMPX
								(VF wir)
								[01;36m(LKMVC[00m
									(LK sollen)
									(MF zusammen)
									(VC verreisen)
									[01;36m(PX[00m
										(NF
											[01;36m(MF[00m
												(PX
													(APPR nach)
													(NX hannover))[01;36m)[00m
											[01;36m(VC[00m [01;36m(VXINF[00m [01;31m(ADJX[00m
												(ADJD geschaftlich)[01;31m)[00m[01;36m)[00m[01;36m)[00m)[01;36m)[00m[01;36m)[00m))[01;36m)[00m[01;31m)[00m
				[01;31m(SIMPX[00m
					[01;31m(KOORD[00m
						(KON und)[01;31m)[00m
					[01;36m(LKMVCN[00m
						(LK ware)
						(MF doch gut)
						(NF wenn wir uns eben zusammensetzen und die sache klaren)[01;36m)[00m[01;31m)[00m)[01;36m)[00m)) [01;33mFKOORD)[00m
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'VC', 'NF', 'SIMPX'], 'mover info': [('SIMPX', (18, 31))], 'old_family': ['SIMPX', 'SIMPX'], 'start left siblings': ['SIMPX'], 'auto preterminals': ('PPER', 'VAFIN', 'VVPP', 'PPER', 'VMFIN', 'ADV', 'VVINF', 'APPR', 'NE', 'ADJD', 'KON', 'VAFIN', 'ADV', 'ADJD', 'KOUS', 'PPER', 'PRF', 'ADV', 'VVFIN', 'KON', 'ART', 'NN', 'VVFIN'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'VC', 'NF'], 'auto preterminal span': (8, 31), 'adding node already present': False, 'movers': ['SIMPX'], 'old_parent': 'SU', 'added and moved': True, 'end right siblings': [], 'classified_type': 'Clause Attachment', 'type': 'move', 'added label': 'LKMVCN'}
(TOP
	(TURN
		(SU hallo herr klein gut das wir uns treffen)
		(SU
			(SIMPX
				(VF ich)
				(FKOORD
					[01;36m(LKMVC[00m
						(LK habe)
						(VC gehort)
						(NF
							(SIMPX
								(VF wir)
								[01;36m(LKMVC[00m
									(LK sollen)
									(MF zusammen)
									(VC verreisen)
									[01;36m(PX[00m
										(NF
											[01;36m(MF[00m
												(PX
													(APPR nach)
													(NX hannover))[01;36m)[00m
											[01;36m(VC[00m [01;36m(VXINF[00m [01;31m(ADJX[00m
												(ADJD geschaftlich)[01;31m)[00m[01;36m)[00m[01;36m)[00m)[01;36m)[00m[01;36m)[00m))[01;36m)[00m
					[01;31m(SIMPX[00m
						[01;31m(KOORD[00m
							(KON und)[01;31m)[00m
						[01;36m(LKMVCN[00m
							(LK ware)
							(MF doch gut)
							(NF wenn wir uns eben zusammensetzen und die sache klaren)[01;36m)[00m[01;31m)[00m)))))
Step:Single Word Phrase
{'family': ['PX', 'VXINF'], 'auto preterminal span': (17, 18), 'span': (17, 18), 'subtrees': ['ADJD'], 'parent': 'NF', 'over_word': True, 'auto preterminals': ('ADJD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'VXINF')}
(TOP
	(TURN
		(SU hallo herr klein gut das wir uns treffen)
		(SU
			(SIMPX
				(VF ich)
				(FKOORD
					[01;36m(LKMVC[00m
						(LK habe)
						(VC gehort)
						(NF
							(SIMPX
								(VF wir)
								[01;36m(LKMVC[00m
									(LK sollen)
									(MF zusammen)
									(VC verreisen)
									[01;36m(PX[00m
										(NF
											[01;36m(MF[00m
												(PX
													(APPR nach)
													(NX hannover))[01;36m)[00m
											[01;36m(VC[00m
												(VXINF
													(ADJD geschaftlich))[01;36m)[00m)[01;36m)[00m[01;36m)[00m))[01;36m)[00m
					[01;31m(SIMPX[00m
						[01;31m(KOORD[00m
							(KON und)[01;31m)[00m
						[01;36m(LKMVCN[00m
							(LK ware)
							(MF doch gut)
							(NF wenn wir uns eben zusammensetzen und die sache klaren)[01;36m)[00m[01;31m)[00m)))))
Step:UNSET add
{'subtrees': ['LK', 'VC', 'NF'], 'family': ['LKMVC', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'VVPP', 'PPER', 'VMFIN', 'ADV', 'VVINF', 'APPR', 'NE', 'ADJD'), 'right siblings': [(SIMPX (KOORD (KON und)) (LK (VXFIN (VAFIN ware))) (MF (ADVX (ADV doch)) (ADJX (ADJD gut))) (NF (SIMPX (C (KOUS wenn)) (FKOORD (MVC (MF (NX (PPER wir)) (NX (PRF uns)) (ADVX (ADV eben))) (VC (VXFIN (VVFIN zusammensetzen)))) (KON und) (MVC (MF (NX (ART die) (NN sache))) (VC (VXFIN (VVFIN klaren))))))))], 'left siblings': [], 'auto preterminal span': (9, 18), 'span': (9, 18), 'parent': 'FKOORD', 'label': 'LKMVC', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU hallo herr klein gut das wir uns treffen)
		(SU
			(SIMPX
				(VF ich)
				(FKOORD
					(LKMVC
						(LK habe)
						(VC gehort)
						(NF
							(SIMPX
								(VF wir)
								[01;36m(LKMVC[00m
									(LK sollen)
									(MF zusammen)
									(VC verreisen)
									[01;36m(PX[00m
										(NF
											[01;36m(MF[00m
												(PX
													(APPR nach)
													(NX hannover))[01;36m)[00m
											[01;36m(VC[00m
												(VXINF
													(ADJD geschaftlich))[01;36m)[00m)[01;36m)[00m[01;36m)[00m)))
					[01;31m(SIMPX[00m
						[01;31m(KOORD[00m
							(KON und)[01;31m)[00m
						[01;36m(LKMVCN[00m
							(LK ware)
							(MF doch gut)
							(NF wenn wir uns eben zusammensetzen und die sache klaren)[01;36m)[00m[01;31m)[00m)))))
Step:UNSET add
{'subtrees': ['LK', 'MF', 'VC', 'NF'], 'family': ['VF', 'LKMVC'], 'over_word': False, 'over words': False, 'auto preterminals': ('VMFIN', 'ADV', 'VVINF', 'APPR', 'NE', 'ADJD'), 'right siblings': [], 'left siblings': [(VF (NX (PPER wir)))], 'auto preterminal span': (12, 18), 'span': (12, 18), 'parent': 'SIMPX', 'label': 'LKMVC', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU hallo herr klein gut das wir uns treffen)
		(SU
			(SIMPX
				(VF ich)
				(FKOORD
					(LKMVC
						(LK habe)
						(VC gehort)
						(NF
							(SIMPX
								(VF wir)
								(LKMVC
									(LK sollen)
									(MF zusammen)
									(VC verreisen)
									[01;36m(PX[00m
										(NF
											[01;36m(MF[00m
												(PX
													(APPR nach)
													(NX hannover))[01;36m)[00m
											[01;36m(VC[00m
												(VXINF
													(ADJD geschaftlich))[01;36m)[00m)[01;36m)[00m))))
					[01;31m(SIMPX[00m
						[01;31m(KOORD[00m
							(KON und)[01;31m)[00m
						[01;36m(LKMVCN[00m
							(LK ware)
							(MF doch gut)
							(NF wenn wir uns eben zusammensetzen und die sache klaren)[01;36m)[00m[01;31m)[00m)))))
Step:Unary
{'subtrees': ['PX'], 'family': ['MF', 'VXINF'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'NE'), 'right siblings': [(VXINF (ADJD geschaftlich))], 'left siblings': [], 'auto preterminal span': (15, 17), 'span': (15, 17), 'parent': 'NF', 'label': 'MF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU hallo herr klein gut das wir uns treffen)
		(SU
			(SIMPX
				(VF ich)
				(FKOORD
					(LKMVC
						(LK habe)
						(VC gehort)
						(NF
							(SIMPX
								(VF wir)
								(LKMVC
									(LK sollen)
									(MF zusammen)
									(VC verreisen)
									[01;36m(PX[00m
										(NF
											(MF nach hannover)
											[01;36m(VC[00m
												(VXINF
													(ADJD geschaftlich))[01;36m)[00m)[01;36m)[00m))))
					[01;31m(SIMPX[00m
						[01;31m(KOORD[00m
							(KON und)[01;31m)[00m
						[01;36m(LKMVCN[00m
							(LK ware)
							(MF doch gut)
							(NF wenn wir uns eben zusammensetzen und die sache klaren)[01;36m)[00m[01;31m)[00m)))))
Step:Unary
{'subtrees': ['NF'], 'family': ['LK', 'MF', 'VC', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'NE', 'ADJD'), 'right siblings': [], 'left siblings': [(LK (VXFIN (VMFIN sollen))), (MF (ADVX (ADV zusammen))), (VC (VXINF (VVINF verreisen)))], 'auto preterminal span': (15, 18), 'span': (15, 18), 'parent': 'LKMVC', 'label': 'PX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU hallo herr klein gut das wir uns treffen)
		(SU
			(SIMPX
				(VF ich)
				(FKOORD
					(LKMVC
						(LK habe)
						(VC gehort)
						(NF
							(SIMPX
								(VF wir)
								(LKMVC
									(LK sollen)
									(MF zusammen)
									(VC verreisen)
									(PX
										(NF
											(MF nach hannover)
											[01;36m(VC[00m
												(VXINF
													(ADJD geschaftlich))[01;36m)[00m))))))
					[01;31m(SIMPX[00m
						[01;31m(KOORD[00m
							(KON und)[01;31m)[00m
						[01;36m(LKMVCN[00m
							(LK ware)
							(MF doch gut)
							(NF wenn wir uns eben zusammensetzen und die sache klaren)[01;36m)[00m[01;31m)[00m)))))
Step:Unary
{'subtrees': ['VXINF'], 'family': ['MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJD',), 'right siblings': [], 'left siblings': [(MF (PX (APPR nach) (NX (NE hannover))))], 'auto preterminal span': (17, 18), 'span': (17, 18), 'parent': 'NF', 'label': 'VC', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU hallo herr klein gut das wir uns treffen)
		(SU
			(SIMPX
				(VF ich)
				(FKOORD
					(LKMVC habe gehort wir sollen zusammen verreisen nach hannover geschaftlich)
					[01;31m(SIMPX[00m
						[01;31m(KOORD[00m
							(KON und)[01;31m)[00m
						[01;36m(LKMVCN[00m
							(LK ware)
							(MF doch gut)
							(NF wenn wir uns eben zusammensetzen und die sache klaren)[01;36m)[00m[01;31m)[00m)))))
Step:UNSET add
{'subtrees': ['LK', 'MF', 'NF'], 'family': ['KOORD', 'LKMVCN'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'ADV', 'ADJD', 'KOUS', 'PPER', 'PRF', 'ADV', 'VVFIN', 'KON', 'ART', 'NN', 'VVFIN'), 'right siblings': [], 'left siblings': [(KOORD (KON und))], 'auto preterminal span': (19, 31), 'span': (19, 31), 'parent': 'SIMPX', 'label': 'LKMVCN', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU hallo herr klein gut das wir uns treffen)
		(SU
			(SIMPX
				(VF ich)
				(FKOORD
					(LKMVC habe gehort wir sollen zusammen verreisen nach hannover geschaftlich)
					[01;31m(SIMPX[00m
						[01;31m(KOORD[00m
							(KON und)[01;31m)[00m
						(LKMVCN ware doch gut wenn wir uns eben zusammensetzen und die sache klaren)[01;31m)[00m)))))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['KOORD', 'LKMVCN'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON', 'VAFIN', 'ADV', 'ADJD', 'KOUS', 'PPER', 'PRF', 'ADV', 'VVFIN', 'KON', 'ART', 'NN', 'VVFIN'), 'right siblings': ['LKMVCN'], 'parent': 'SIMPX', 'auto preterminal span': (18, 31), 'span': (18, 19), 'left siblings': [], 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(SU hallo herr klein gut das wir uns treffen)
		(SU
			(SIMPX
				(VF ich)
				(FKOORD
					(LKMVC habe gehort wir sollen zusammen verreisen nach hannover geschaftlich)
					[01;31m(SIMPX[00m
						(KON und)
						(LKMVCN ware doch gut wenn wir uns eben zusammensetzen und die sache klaren)[01;31m)[00m)))))
Step:UNSET remove
{'subtrees': ['KON', 'LKMVCN'], 'family': ['LKMVC', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'VVPP', 'PPER', 'VMFIN', 'ADV', 'VVINF', 'APPR', 'NE', 'ADJD', 'KON', 'VAFIN', 'ADV', 'ADJD', 'KOUS', 'PPER', 'PRF', 'ADV', 'VVFIN', 'KON', 'ART', 'NN', 'VVFIN'), 'right siblings': [], 'parent': 'FKOORD', 'auto preterminal span': (9, 31), 'span': (18, 31), 'left siblings': ['LKMVC'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP hallo herr klein gut das wir uns treffen ich habe gehort wir sollen zusammen verreisen nach hannover geschaftlich und ware doch gut wenn wir uns eben zusammensetzen und die sache klaren)

Sentence 606:
0 Initial errors
0 on fringe, 0 iterations

Sentence 607:
0 Initial errors
0 on fringe, 0 iterations

Sentence 608:
6 Initial errors
0 on fringe, 4 iterations
2 Error:Different label
2 Error:Modifier Attachment
1 Error:UNSET remove
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU ja dann ist das in ordnung)
		(SU
			[01;31m(SIMPX[00m
				(VF ich)
				(LK meine)
				(NF
					(SIMPX
						(VF das schutzenfest)
						(LK hatte)
						[01;36m(MF[00m
							[01;31m(MF[00m
								(NX mich)
								(ADVX naturlich)
								(ADVX auch)[01;31m)[00m
							[01;36m(ADJX[00m [01;31m(VC[00m
								[01;31m(VXINF[00m
									(VVPP gereizt)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m))[01;31m)[00m
			(SIMPX aber der theaterbesuch ist okay))))
Step:Different label
{'family': ['VF', 'LK', 'MF', 'ADJX'], 'auto preterminal span': (14, 15), 'span': (14, 15), 'subtrees': ['VXINF'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('VVPP',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('VC', 'ADJX')}
(TOP
	(TURN
		(SU ja dann ist das in ordnung)
		(SU
			[01;31m(SIMPX[00m
				(VF ich)
				(LK meine)
				(NF
					(SIMPX
						(VF das schutzenfest)
						(LK hatte)
						[01;36m(MF[00m
							[01;31m(MF[00m
								(NX mich)
								(ADVX naturlich)
								(ADVX auch)[01;31m)[00m
							(ADJX
								[01;31m(VXINF[00m
									(VVPP gereizt)[01;31m)[00m)[01;36m)[00m))[01;31m)[00m
			(SIMPX aber der theaterbesuch ist okay))))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'ADVX', 'ADVX', 'ADJX'], 'mover info': [('ADJX', (14, 15))], 'old_family': ['VF', 'LK', 'MF', 'ADJX'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('ART', 'NN', 'VAFIN', 'PPER', 'ADV', 'ADV', 'VVPP'), 'start right siblings': [], 'end left siblings': ['NX', 'ADVX', 'ADVX'], 'auto preterminal span': (8, 15), 'movers': ['ADJX'], 'old_parent': 'SIMPX', 'POS confusion': ('VVPP', 'VVPP'), 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU ja dann ist das in ordnung)
		(SU
			[01;31m(SIMPX[00m
				(VF ich)
				(LK meine)
				(NF
					(SIMPX
						(VF das schutzenfest)
						(LK hatte)
						(MF
							(NX mich)
							(ADVX naturlich)
							(ADVX auch)
							(ADJX
								[01;31m(VXINF[00m
									(VVPP gereizt)[01;31m)[00m))))[01;31m)[00m
			(SIMPX aber der theaterbesuch ist okay))))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'NF'], 'family': ['SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ART', 'NN', 'VAFIN', 'PPER', 'ADV', 'ADV', 'VVPP', 'KON', 'ART', 'NN', 'VAFIN', 'ADJD'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (6, 20), 'span': (6, 15), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU ja dann ist das in ordnung)
		(SU
			(VF ich)
			(LK meine)
			(NF
				(SIMPX
					(VF das schutzenfest)
					(LK hatte)
					(MF
						(NX mich)
						(ADVX naturlich)
						(ADVX auch)
						(ADJX
							[01;31m(VXINF[00m
								(VVPP gereizt)[01;31m)[00m))))
			(SIMPX aber der theaterbesuch ist okay))))
Step:Single Word Phrase
{'subtrees': ['VVPP'], 'family': ['VXINF'], 'over_word': True, 'over words': True, 'auto preterminals': ('VVPP',), 'right siblings': [], 'parent': 'ADJX', 'auto preterminal span': (14, 15), 'span': (14, 15), 'left siblings': [], 'label': 'VXINF', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP ja dann ist das in ordnung ich meine das schutzenfest hatte mich naturlich auch gereizt aber der theaterbesuch ist okay)

Sentence 609:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU ja habe ich)
		(SU
			(SIMPX
				(LK habe)
				[01;31m(MF[00m
					(NX
						(PPER ich))[01;31m)[00m
				(VC dabei))
			(DM ja))))
Step:Unary
{'subtrees': ['NX'], 'family': ['LK', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'PPER', 'PTKVZ'), 'right siblings': ['VC'], 'parent': 'SIMPX', 'auto preterminal span': (3, 6), 'span': (4, 5), 'left siblings': ['LK'], 'label': 'MF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja habe ich habe ich dabei ja)

Sentence 610:
0 Initial errors
0 on fringe, 0 iterations

Sentence 611:
6 Initial errors
0 on fringe, 4 iterations
2 Error:Single Word Phrase
2 Error:NP Attachment
1 Error:UNSET add
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU okay)
		(SU
			(SIMPX
				(VF dann)
				(LK mache)
				[01;36m(MF[00m
					[01;31m(MF[00m
						(NX ich)
						(NX die sache)[01;31m)[00m
					[01;36m(NX[00m
						[01;36m(NX[00m [01;31m(VC[00m
							(PTKVZ feste)[01;31m)[00m[01;36m)[00m
						[01;31m(NF[00m
							(PX
								(APPRART im)
								(NX reiseburo))[01;31m)[00m[01;36m)[00m[01;36m)[00m))))
Step:Single Word Phrase
{'family': ['VF', 'LK', 'MF', 'NX', 'NF'], 'auto preterminal span': (6, 7), 'span': (6, 7), 'subtrees': ['PTKVZ'], 'parent': 'SIMPX', 'over_word': True, 'auto preterminals': ('PTKVZ',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VC', 'NX')}
(TOP
	(TURN
		(SU okay)
		(SU
			(SIMPX
				(VF dann)
				(LK mache)
				[01;36m(MF[00m
					[01;31m(MF[00m
						(NX ich)
						(NX die sache)[01;31m)[00m
					[01;36m(NX[00m
						(NX feste)
						[01;31m(NF[00m
							(PX
								(APPRART im)
								(NX reiseburo))[01;31m)[00m[01;36m)[00m[01;36m)[00m))))
Step:NP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'NX', 'NX', 'NF'], 'mover info': [('NX', (6, 7)), ('NF', (7, 9))], 'old_family': ['VF', 'LK', 'MF', 'NX', 'NF'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'ART', 'NN', 'PTKVZ', 'APPRART', 'NN'), 'start right siblings': [], 'end left siblings': ['NX', 'NX'], 'auto preterminal span': (1, 9), 'movers': ['NX', 'NF'], 'old_parent': 'SIMPX', 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU okay)
		(SU
			(SIMPX
				(VF dann)
				(LK mache)
				(MF
					(NX ich)
					(NX die sache)
					[01;36m(NX[00m
						(NX feste)
						[01;31m(NF[00m
							(PX
								(APPRART im)
								(NX reiseburo))[01;31m)[00m[01;36m)[00m)))))
Step:UNSET add
{'subtrees': ['NX', 'NF'], 'family': ['NX', 'NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKVZ', 'APPRART', 'NN'), 'right siblings': [], 'left siblings': [(NX (PPER ich)), (NX (ART die) (NN sache))], 'auto preterminal span': (6, 9), 'span': (6, 9), 'parent': 'MF', 'label': 'NX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU okay)
		(SU
			(SIMPX
				(VF dann)
				(LK mache)
				(MF
					(NX ich)
					(NX die sache)
					(NX
						(NX feste)
						[01;31m(NF[00m
							(PX
								(APPRART im)
								(NX reiseburo))[01;31m)[00m))))))
Step:Unary
{'subtrees': ['PX'], 'family': ['NX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKVZ', 'APPRART', 'NN'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (6, 9), 'span': (7, 9), 'left siblings': ['NX'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP okay dann mache ich die sache feste im reiseburo)

Sentence 612:
5 Initial errors
0 on fringe, 3 iterations
2 Error:UNSET move
2 Error:PP Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU ja okay frau schmidt)
		(SU
			(SIMPX musten uns das zu machen)
			(DM also)
			[01;31m(SIMPX[00m
				[01;36m(SIMPX[00m
					(VF ich)
					(LK habe)
					(MF hier schon eine liste)
					(VC liegen)[01;36m)[00m
				(DM und zwar)
				[01;31m(NF[00m [01;33m(NX[00m
					(NX
						(NX der zugverbindungen)
						[01;31m(PX[00m
							(PX von bonn) [01;33mNX)[00m
							(PX nach hannover)[01;31m)[00m)[01;31m)[00m[01;31m)[00m)
		(SU was meinen sie denn wann sollten wir fahren)))
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SIMPX', 'DM', 'SIMPX', 'DM', 'NF'], 'mover info': [('DM', (17, 19)), ('NF', (19, 25))], 'old_family': ['VF', 'LK', 'MF', 'VC', 'DM', 'NF'], 'start left siblings': ['VF', 'LK', 'MF', 'VC'], 'auto preterminals': ('VMFIN', 'PRF', 'PDS', 'PTKZU', 'VVINF', 'ADV', 'PPER', 'VAFIN', 'ADV', 'ADV', 'ART', 'NN', 'VVINF', 'KON', 'ADV', 'ART', 'NN', 'APPR', 'NE', 'APPR', 'NE'), 'start right siblings': [], 'end left siblings': ['SIMPX', 'DM', 'SIMPX'], 'auto preterminal span': (4, 25), 'movers': ['DM', 'NF'], 'old_parent': 'SIMPX', 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU ja okay frau schmidt)
		(SU
			(SIMPX musten uns das zu machen)
			(DM also)
			(SIMPX ich habe hier schon eine liste liegen)
			(DM und zwar)
			[01;31m(NF[00m [01;33m(NX[00m
				(NX
					(NX der zugverbindungen)
					[01;31m(PX[00m
						(PX von bonn) [01;33mNX)[00m
						(PX nach hannover)[01;31m)[00m)[01;31m)[00m)
		(SU was meinen sie denn wann sollten wir fahren)))
Step:PP Attachment
{'new_parent': 'NX', 'new_family': ['NX', 'PX', 'PX'], 'mover info': [('PX', (21, 23))], 'old_family': ['PX', 'PX'], 'start left siblings': [], 'auto preterminals': ('ART', 'NN', 'APPR', 'NE', 'APPR', 'NE'), 'start right siblings': ['PX'], 'end left siblings': ['NX'], 'auto preterminal span': (19, 25), 'adding node already present': False, 'movers': ['PX'], 'old_parent': 'PX', 'added and moved': True, 'end right siblings': ['PX'], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(SU ja okay frau schmidt)
		(SU
			(SIMPX musten uns das zu machen)
			(DM also)
			(SIMPX ich habe hier schon eine liste liegen)
			(DM und zwar)
			[01;31m(NF[00m
				(NX
					(NX der zugverbindungen von bonn)
					(PX nach hannover))[01;31m)[00m)
		(SU was meinen sie denn wann sollten wir fahren)))
Step:Unary
{'subtrees': ['NX'], 'family': ['SIMPX', 'DM', 'SIMPX', 'DM', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('VMFIN', 'PRF', 'PDS', 'PTKZU', 'VVINF', 'ADV', 'PPER', 'VAFIN', 'ADV', 'ADV', 'ART', 'NN', 'VVINF', 'KON', 'ADV', 'ART', 'NN', 'APPR', 'NE', 'APPR', 'NE'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (4, 25), 'span': (19, 25), 'left siblings': ['SIMPX', 'DM', 'SIMPX', 'DM'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja okay frau schmidt musten uns das zu machen also ich habe hier schon eine liste liegen und zwar der zugverbindungen von bonn nach hannover was meinen sie denn wann sollten wir fahren)

Sentence 613:
5 Initial errors
0 on fringe, 2 iterations
4 Error:Modifier Attachment
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM ja)
			[01;36m(SIMPX[00m
				[01;31m(SIMPX[00m
					(LK denke)
					[01;31m(MF[00m [01;33m(MF[00m
						(NX ich)
						(ADVX auch)[01;31m)[00m[01;31m)[00m
				[01;31m(ADJX[00m
					(ADVX aber)
					(ADVX nicht)
					(ADJX zu fruh)[01;31m)[00m[01;36m)[00m) [01;33mMF)[00m
		(SU ich schaue mal gerade ja acht uhr zwanzig ist mir ganz recht)))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'ADVX', 'ADJX'], 'mover info': [('ADJX', (4, 8))], 'old_family': ['DM', 'SIMPX', 'ADJX'], 'start left siblings': ['DM', 'SIMPX'], 'auto preterminals': ('PTKANT', 'VVFIN', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'PTKA', 'ADJD'), 'start right siblings': [], 'end left siblings': ['NX', 'ADVX'], 'auto preterminal span': (0, 8), 'movers': ['ADJX'], 'old_parent': 'SU', 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX
				(LK denke)
				(MF
					(NX ich)
					(ADVX auch)
					[01;31m(ADJX[00m
						(ADVX aber)
						(ADVX nicht)
						(ADJX zu fruh)[01;31m)[00m)))
		(SU ich schaue mal gerade ja acht uhr zwanzig ist mir ganz recht)))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'ADVX', 'ADJX'], 'family': ['NX', 'ADVX', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV', 'ADV', 'PTKNEG', 'PTKA', 'ADJD'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (2, 8), 'span': (4, 8), 'left siblings': ['NX', 'ADVX'], 'label': 'ADJX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP ja denke ich auch aber nicht zu fruh ich schaue mal gerade ja acht uhr zwanzig ist mir ganz recht)

Sentence 614:
7 Initial errors
0 on fringe, 5 iterations
2 Error:Single Word Phrase
2 Error:PP Attachment
1 Error:UNSET remove
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU ja okay)
		(SU
			(DM ja)
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF dann)
				(LK habe)
				(MF ich mir da mich da auch noch so ein bischen schlau)
				(VC gemacht)[01;31m)[00m)
		(SU konnte ja auch nach der veranstaltung noch was unternehmen)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF was)
				(LK halten)
				(MF sie davon)[01;31m)[00m[01;31m)[00m
		(SU
			(SIMPX
				(VF ich)
				(LK dachte)
				(MF
					[01;36m(NX[00m [01;31m(ADVX[00m
						(ADV mehr)[01;31m)[00m[01;36m)[00m
					(PX [01;33m(PX[00m
						(APPR an)
						[01;31m(NX[00m
							(NX theaterbesuch) [01;33mPX)[00m
							(PX im ballhof)[01;31m)[00m)))
			(SIMPX da kommen auch die andern kollegen mit))))
Step:Single Word Phrase
{'family': ['NX', 'PX'], 'auto preterminal span': (33, 34), 'span': (33, 34), 'subtrees': ['ADV'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'NX')}
(TOP
	(TURN
		(SU ja okay)
		(SU
			(DM ja)
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF dann)
				(LK habe)
				(MF ich mir da mich da auch noch so ein bischen schlau)
				(VC gemacht)[01;31m)[00m)
		(SU konnte ja auch nach der veranstaltung noch was unternehmen)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF was)
				(LK halten)
				(MF sie davon)[01;31m)[00m[01;31m)[00m
		(SU
			(SIMPX
				(VF ich)
				(LK dachte)
				(MF
					(NX mehr)
					(PX [01;33m(PX[00m
						(APPR an)
						[01;31m(NX[00m
							(NX theaterbesuch) [01;33mPX)[00m
							(PX im ballhof)[01;31m)[00m)))
			(SIMPX da kommen auch die andern kollegen mit))))
Step:PP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'PX', 'PX'], 'mover info': [('PX', (36, 38))], 'old_family': ['NX', 'PX'], 'start left siblings': ['NX'], 'auto preterminals': ('ADV', 'APPR', 'NN', 'APPRART', 'NE'), 'start right siblings': [], 'end left siblings': ['NX', 'PX'], 'auto preterminal span': (33, 38), 'adding node already present': False, 'movers': ['PX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'PX'}
(TOP
	(TURN
		(SU ja okay)
		(SU
			(DM ja)
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF dann)
				(LK habe)
				(MF ich mir da mich da auch noch so ein bischen schlau)
				(VC gemacht)[01;31m)[00m)
		(SU konnte ja auch nach der veranstaltung noch was unternehmen)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF was)
				(LK halten)
				(MF sie davon)[01;31m)[00m[01;31m)[00m
		(SU ich dachte mehr an theaterbesuch im ballhof da kommen auch die andern kollegen mit)))
Step:UNSET remove
{'subtrees': ['KOORD', 'VF', 'LK', 'MF', 'VC'], 'family': ['DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'KON', 'ADV', 'VAFIN', 'PPER', 'PRF', 'ADV', 'PRF', 'ADV', 'ADV', 'ADV', 'ADV', 'ART', 'PIS', 'ADJD', 'VVPP'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (2, 18), 'span': (3, 18), 'left siblings': ['DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU ja okay)
		(SU ja und dann habe ich mir da mich da auch noch so ein bischen schlau gemacht)
		(SU konnte ja auch nach der veranstaltung noch was unternehmen)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF was)
				(LK halten)
				(MF sie davon)[01;31m)[00m[01;31m)[00m
		(SU ich dachte mehr an theaterbesuch im ballhof da kommen auch die andern kollegen mit)))
Step:Unary
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PWS', 'VVFIN', 'PPER', 'PROP'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (27, 31), 'span': (27, 31), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU ja okay)
		(SU ja und dann habe ich mir da mich da auch noch so ein bischen schlau gemacht)
		(SU konnte ja auch nach der veranstaltung noch was unternehmen)
		[01;31m(SU[00m
			(VF was)
			(LK halten)
			(MF sie davon)[01;31m)[00m
		(SU ich dachte mehr an theaterbesuch im ballhof da kommen auch die andern kollegen mit)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['SU', 'SU', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'PTKANT', 'KON', 'ADV', 'VAFIN', 'PPER', 'PRF', 'ADV', 'PRF', 'ADV', 'ADV', 'ADV', 'ADV', 'ART', 'PIS', 'ADJD', 'VVPP', 'VMFIN', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'PIS', 'VVINF', 'PWS', 'VVFIN', 'PPER', 'PROP', 'PPER', 'VVFIN', 'ADV', 'APPR', 'NN', 'APPRART', 'NE', 'ADV', 'VVFIN', 'ADV', 'ART', 'ADJA', 'NN', 'PTKVZ'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 45), 'span': (27, 31), 'left siblings': ['SU', 'SU', 'SU'], 'label': 'SU', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ja okay ja und dann habe ich mir da mich da auch noch so ein bischen schlau gemacht konnte ja auch nach der veranstaltung noch was unternehmen was halten sie davon ich dachte mehr an theaterbesuch im ballhof da kommen auch die andern kollegen mit)

Sentence 615:
0 Initial errors
0 on fringe, 0 iterations

Sentence 616:
0 Initial errors
0 on fringe, 0 iterations

Sentence 617:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU okay dann kummern sie sich drum ne)
		(SU
			[01;31m(DM[00m
				(ADVX dann)
				[01;36m(DM[00m
					(PTKANT ja)[01;36m)[00m[01;31m)[00m
			(SIMPX ich habe ja noch eine telefonnummer von dem hotel))
		(SU ich denke mal da konnte ich das dann festmachen)
		(SU weil das mit dem reiseburo das ist immer so ein hinundher so ein hickhack das mus nicht sein)
		(SU ja)))
Step:Modifier Attachment
{'new_parent': 'SU', 'new_family': ['ADVX', 'DM', 'SIMPX'], 'mover info': [('ADVX', (7, 8))], 'old_family': ['ADVX', 'PTKANT'], 'start left siblings': [], 'auto preterminals': ('ADV', 'PTKANT', 'PPER', 'VAFIN', 'ADV', 'ADV', 'ART', 'NN', 'APPR', 'ART', 'NN'), 'start right siblings': ['PTKANT'], 'end left siblings': [], 'auto preterminal span': (7, 18), 'movers': ['ADVX'], 'old_parent': 'DM', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['DM', 'SIMPX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP okay dann kummern sie sich drum ne dann ja ich habe ja noch eine telefonnummer von dem hotel ich denke mal da konnte ich das dann festmachen weil das mit dem reiseburo das ist immer so ein hinundher so ein hickhack das mus nicht sein ja)

Sentence 618:
7 Initial errors
0 on fringe, 3 iterations
4 Error:PP Attachment
2 Error:Single Word Phrase
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM guten tag)
			(SIMPX [01;33m(SIMPX[00m
				(VF hier)
				(LK ist)
				[01;31m(MF[00m
					[01;31m(NX[00m
						[01;36m(MF[00m
							(NX
								(NE meurer)) [01;33mSIMPX)[00m[01;36m)[00m
						(PX aus bonn)[01;31m)[00m[01;31m)[00m))
		(SU ich brauche eine verbindung nach hannover)
		(SU
			(DM und zwar)
			(PX fur den funfzehnten juli)
			(SIMPX
				(KOORD und)
				(VF ich)
				(LK muste)
				(MF
					[01;31m(PX[00m
						(PX um neun uhr morgens)
						[01;36m(ADJX[00m [01;31m(ADVX[00m
							(ADV ungefahr)[01;31m)[00m[01;36m)[00m[01;31m)[00m
					(ADVX da))
				(VC sein)))))
Step:PP Attachment
{'new_parent': 'SU', 'new_family': ['DM', 'SIMPX', 'PX'], 'mover info': [('PX', (5, 7))], 'old_family': ['NX', 'PX'], 'start left siblings': ['NX'], 'auto preterminals': ('ADJA', 'NN', 'ADV', 'VAFIN', 'NE', 'APPR', 'NE'), 'start right siblings': [], 'end left siblings': ['DM', 'SIMPX'], 'auto preterminal span': (0, 7), 'adding node already present': False, 'movers': ['PX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'ADJX'}
(TOP
	(TURN
		(SU guten tag hier ist meurer aus bonn)
		(SU ich brauche eine verbindung nach hannover)
		(SU
			(DM und zwar)
			(PX fur den funfzehnten juli)
			(SIMPX
				(KOORD und)
				(VF ich)
				(LK muste)
				(MF
					[01;31m(PX[00m
						(PX um neun uhr morgens)
						[01;36m(ADJX[00m [01;31m(ADVX[00m
							(ADV ungefahr)[01;31m)[00m[01;36m)[00m[01;31m)[00m
					(ADVX da))
				(VC sein)))))
Step:Single Word Phrase
{'family': ['PX', 'ADJX'], 'auto preterminal span': (26, 27), 'span': (26, 27), 'subtrees': ['ADV'], 'parent': 'PX', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'ADJX')}
(TOP
	(TURN
		(SU guten tag hier ist meurer aus bonn)
		(SU ich brauche eine verbindung nach hannover)
		(SU
			(DM und zwar)
			(PX fur den funfzehnten juli)
			(SIMPX
				(KOORD und)
				(VF ich)
				(LK muste)
				(MF
					[01;31m(PX[00m
						(PX um neun uhr morgens)
						(ADJX ungefahr)[01;31m)[00m
					(ADVX da))
				(VC sein)))))
Step:Modifier Attachment
{'subtrees': ['PX', 'ADJX'], 'family': ['PX', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'CARD', 'NN', 'ADV', 'ADV', 'ADV'), 'right siblings': ['ADVX'], 'parent': 'MF', 'auto preterminal span': (22, 28), 'span': (22, 27), 'left siblings': [], 'label': 'PX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP guten tag hier ist meurer aus bonn ich brauche eine verbindung nach hannover und zwar fur den funfzehnten juli und ich muste um neun uhr morgens ungefahr da sein)

Sentence 619:
3 Initial errors
0 on fringe, 2 iterations
2 Error:PP Attachment
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU das kommt drauf an wann ich ankomme)
		(SU
			(DM also)
			(SIMPX
				(VF
					(SIMPX
						(C wenn)
						(MF
							(NX ich)
							[01;31m(NX[00m
								(PX mit dem flug)
								[01;36m(NX[00m
									(PDS [01;33m(NX[00m das)[01;36m)[00m[01;31m)[00m
							(PX an demselben tag)) [01;33mNX)[00m
						(VC packe)))
				(LK ginge)
				(MF das eigentlich auch)))))
Step:PP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'PX', 'NX', 'PX'], 'mover info': [('PX', (10, 13))], 'old_family': ['PX', 'PDS'], 'start left siblings': [], 'auto preterminals': ('PPER', 'APPR', 'ART', 'NN', 'PDS', 'APPR', 'PDAT', 'NN'), 'start right siblings': ['PDS'], 'end left siblings': ['NX'], 'auto preterminal span': (9, 17), 'movers': ['PX'], 'old_parent': 'NX', 'end right siblings': ['NX', 'PX'], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU das kommt drauf an wann ich ankomme)
		(SU
			(DM also)
			(SIMPX
				(VF
					(SIMPX
						(C wenn)
						(MF
							(NX ich)
							(PX mit dem flug)
							[01;36m(NX[00m
								(NX das)
								(PX an demselben tag)[01;36m)[00m)
						(VC packe)))
				(LK ginge)
				(MF das eigentlich auch)))))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['NX', 'PX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'APPR', 'PDAT', 'NN'), 'right siblings': [], 'left siblings': [(NX (PPER ich)), (PX (APPR mit) (NX (ART dem) (NN flug)))], 'auto preterminal span': (13, 17), 'span': (13, 17), 'parent': 'MF', 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP das kommt drauf an wann ich ankomme also wenn ich mit dem flug das an demselben tag packe ginge das eigentlich auch)

Sentence 620:
4 Initial errors
0 on fringe, 3 iterations
2 Error:NP Attachment
1 Error:Modifier Attachment
1 Error:UNSET add
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU das ware knapp aber es muste eigentlich auch)
		(SU
			(SIMPX
				(LK geht)
				(MF
					(ADVX auch)
					(ADVX irgendwie)
					(ADVX noch)
					[01;36m(PX[00m
						[01;31m(NX[00m
							(NX ein nachtexpres)
							(KON oder)
							[01;33m(PX[00m (ADVX so)[01;31m)[00m
						[01;31m(PX[00m
							(PROP dahin)[01;31m)[00m[01;36m)[00m))))) [01;33mPX)[00m
Step:NP Attachment
{'new_parent': 'PX', 'new_family': ['NX', 'PROP'], 'mover info': [('NX', (12, 16))], 'old_family': ['ADVX', 'ADVX', 'ADVX', 'NX', 'PX'], 'start left siblings': ['ADVX', 'ADVX', 'ADVX'], 'auto preterminals': ('ADV', 'ADV', 'ADV', 'ART', 'NN', 'KON', 'ADV', 'PROP'), 'start right siblings': ['PX'], 'end left siblings': [], 'auto preterminal span': (9, 17), 'movers': ['NX'], 'old_parent': 'MF', 'end right siblings': ['PROP'], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU das ware knapp aber es muste eigentlich auch)
		(SU
			(SIMPX
				(LK geht)
				(MF
					(ADVX auch)
					(ADVX irgendwie)
					(ADVX noch)
					(PX
						[01;31m(NX[00m
							(NX ein nachtexpres)
							(KON oder)
							[01;33m(PX[00m (ADVX so)[01;31m)[00m
						(PROP dahin))))))) [01;33mPX)[00m
Step:Modifier Attachment
{'subtrees': ['NX', 'KON', 'ADVX'], 'family': ['NX', 'PROP'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'KON', 'ADV', 'PROP'), 'right siblings': ['PROP'], 'parent': 'PX', 'auto preterminal span': (12, 17), 'span': (12, 16), 'left siblings': [], 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU das ware knapp aber es muste eigentlich auch)
		(SU
			(SIMPX
				(LK geht)
				(MF
					(ADVX auch)
					(ADVX irgendwie)
					(ADVX noch)
					(PX
						(NX ein nachtexpres)
						(KON oder)
						[01;36m(PX[00m
							(ADVX so)
							(PROP dahin)[01;36m)[00m))))))
Step:UNSET add
{'subtrees': ['ADVX', 'PROP'], 'family': ['NX', 'KON', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PROP'), 'right siblings': [], 'left siblings': [(NX (ART ein) (NN nachtexpres)), (KON oder)], 'auto preterminal span': (15, 17), 'span': (15, 17), 'parent': 'PX', 'label': 'PX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP das ware knapp aber es muste eigentlich auch geht auch irgendwie noch ein nachtexpres oder so dahin)

Sentence 621:
1 Initial errors
0 on fringe, 1 iterations
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU ah nee das ist ja das ist zu spat)
		(SU
			(SIMPX
				(VF wie teuer)
				(LK ist)
				[01;31m(MF[00m
					(ADVX ungefahr)
					(NX der flug)[01;31m)[00m))))
Step:UNSET remove
{'subtrees': ['ADVX', 'NX'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PWAV', 'ADJD', 'VAFIN', 'ADV', 'ART', 'NN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (9, 15), 'span': (12, 15), 'left siblings': ['VF', 'LK'], 'label': 'MF', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ah nee das ist ja das ist zu spat wie teuer ist ungefahr der flug)

Sentence 622:
11 Initial errors
0 on fringe, 7 iterations
2 Error:Single Word Phrase
2 Error:Single Word Phrase
2 Error:Modifier Attachment
2 Error:Modifier Attachment
1 Error:Single Word Phrase
1 Error:PP Attachment
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM also)
			(SIMPX
				(VF ich)
				(LK bleibe)
				[01;36m(MF[00m
					[01;31m(MF[00m
						(ADVX sowieso)
						(NX einige tage)[01;31m)[00m
					[01;36m(ADVX[00m [01;31m(VC[00m
						(PTKVZ da)[01;31m)[00m[01;36m)[00m[01;36m)[00m))
		(SU
			(SIMPX
				(VF ich)
				(LK bleibe)
				[01;36m(MF[00m
					[01;31m(MF[00m
						(NX
							(ADJX drei)
							(NN tage))[01;31m)[00m
					[01;36m(ADVX[00m [01;31m(VC[00m
						(PTKVZ da)[01;31m)[00m[01;36m)[00m[01;36m)[00m)
			(SIMPX
				(VF das)
				(LK waren)
				(MF
					(PX auf jeden fall)
					(ADVX dann)
					(ADVX mal)
					(NX
						(ADJX drei)
						[01;36m(ADJX[00m
							(NN nachte)[01;36m)[00m))))
		(SU
			(SIMPX
				(VF wieviel)
				(LK kostet)
				(MF
					(ADVX denn)
					[01;36m(NX[00m
						(NX ein hotel)
						(PX in hannover)[01;36m)[00m)))
		(SU
			(NX
				(ADVX so)
				[01;31m(NX[00m
					(NN mittelklasse)[01;31m)[00m))))
Step:Single Word Phrase
{'family': ['VF', 'LK', 'MF', 'ADVX'], 'auto preterminal span': (6, 7), 'span': (6, 7), 'subtrees': ['PTKVZ'], 'parent': 'SIMPX', 'over_word': True, 'auto preterminals': ('PTKVZ',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VC', 'ADVX')}
(TOP
	(TURN
		(SU
			(DM also)
			(SIMPX
				(VF ich)
				(LK bleibe)
				[01;36m(MF[00m
					[01;31m(MF[00m
						(ADVX sowieso)
						(NX einige tage)[01;31m)[00m
					(ADVX da)[01;36m)[00m))
		(SU
			(SIMPX
				(VF ich)
				(LK bleibe)
				[01;36m(MF[00m
					[01;31m(MF[00m
						(NX
							(ADJX drei)
							(NN tage))[01;31m)[00m
					[01;36m(ADVX[00m [01;31m(VC[00m
						(PTKVZ da)[01;31m)[00m[01;36m)[00m[01;36m)[00m)
			(SIMPX
				(VF das)
				(LK waren)
				(MF
					(PX auf jeden fall)
					(ADVX dann)
					(ADVX mal)
					(NX
						(ADJX drei)
						[01;36m(ADJX[00m
							(NN nachte)[01;36m)[00m))))
		(SU
			(SIMPX
				(VF wieviel)
				(LK kostet)
				(MF
					(ADVX denn)
					[01;36m(NX[00m
						(NX ein hotel)
						(PX in hannover)[01;36m)[00m)))
		(SU
			(NX
				(ADVX so)
				[01;31m(NX[00m
					(NN mittelklasse)[01;31m)[00m))))
Step:Single Word Phrase
{'family': ['VF', 'LK', 'MF', 'ADVX'], 'auto preterminal span': (11, 12), 'span': (11, 12), 'subtrees': ['PTKVZ'], 'parent': 'SIMPX', 'over_word': True, 'auto preterminals': ('PTKVZ',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VC', 'ADVX')}
(TOP
	(TURN
		(SU
			(DM also)
			(SIMPX
				(VF ich)
				(LK bleibe)
				[01;36m(MF[00m
					[01;31m(MF[00m
						(ADVX sowieso)
						(NX einige tage)[01;31m)[00m
					(ADVX da)[01;36m)[00m))
		(SU
			(SIMPX
				(VF ich)
				(LK bleibe)
				[01;36m(MF[00m
					[01;31m(MF[00m
						(NX
							(ADJX drei)
							(NN tage))[01;31m)[00m
					(ADVX da)[01;36m)[00m)
			(SIMPX
				(VF das)
				(LK waren)
				(MF
					(PX auf jeden fall)
					(ADVX dann)
					(ADVX mal)
					(NX
						(ADJX drei)
						[01;36m(ADJX[00m
							(NN nachte)[01;36m)[00m))))
		(SU
			(SIMPX
				(VF wieviel)
				(LK kostet)
				(MF
					(ADVX denn)
					[01;36m(NX[00m
						(NX ein hotel)
						(PX in hannover)[01;36m)[00m)))
		(SU
			(NX
				(ADVX so)
				[01;31m(NX[00m
					(NN mittelklasse)[01;31m)[00m))))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['ADVX', 'NX', 'ADVX'], 'mover info': [('ADVX', (6, 7))], 'old_family': ['VF', 'LK', 'MF', 'ADVX'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'PIAT', 'NN', 'PTKVZ'), 'start right siblings': [], 'end left siblings': ['ADVX', 'NX'], 'auto preterminal span': (1, 7), 'movers': ['ADVX'], 'old_parent': 'SIMPX', 'POS confusion': ('PTKVZ', 'PTKVZ'), 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU also ich bleibe sowieso einige tage da)
		(SU
			(SIMPX
				(VF ich)
				(LK bleibe)
				[01;36m(MF[00m
					[01;31m(MF[00m
						(NX
							(ADJX drei)
							(NN tage))[01;31m)[00m
					(ADVX da)[01;36m)[00m)
			(SIMPX
				(VF das)
				(LK waren)
				(MF
					(PX auf jeden fall)
					(ADVX dann)
					(ADVX mal)
					(NX
						(ADJX drei)
						[01;36m(ADJX[00m
							(NN nachte)[01;36m)[00m))))
		(SU
			(SIMPX
				(VF wieviel)
				(LK kostet)
				(MF
					(ADVX denn)
					[01;36m(NX[00m
						(NX ein hotel)
						(PX in hannover)[01;36m)[00m)))
		(SU
			(NX
				(ADVX so)
				[01;31m(NX[00m
					(NN mittelklasse)[01;31m)[00m))))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'ADVX'], 'mover info': [('ADVX', (11, 12))], 'old_family': ['VF', 'LK', 'MF', 'ADVX'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('PPER', 'VVFIN', 'CARD', 'NN', 'PTKVZ'), 'start right siblings': [], 'end left siblings': ['NX'], 'auto preterminal span': (7, 12), 'movers': ['ADVX'], 'old_parent': 'SIMPX', 'POS confusion': ('PTKVZ', 'PTKVZ'), 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU also ich bleibe sowieso einige tage da)
		(SU
			(SIMPX ich bleibe drei tage da)
			(SIMPX
				(VF das)
				(LK waren)
				(MF
					(PX auf jeden fall)
					(ADVX dann)
					(ADVX mal)
					(NX
						(ADJX drei)
						[01;36m(ADJX[00m
							(NN nachte)[01;36m)[00m))))
		(SU
			(SIMPX
				(VF wieviel)
				(LK kostet)
				(MF
					(ADVX denn)
					[01;36m(NX[00m
						(NX ein hotel)
						(PX in hannover)[01;36m)[00m)))
		(SU
			(NX
				(ADVX so)
				[01;31m(NX[00m
					(NN mittelklasse)[01;31m)[00m))))
Step:Single Word Phrase
{'subtrees': ['NN'], 'family': ['ADJX', 'ADJX'], 'over_word': True, 'over words': True, 'auto preterminals': ('NN',), 'right siblings': [], 'left siblings': [(ADJX (CARD drei))], 'auto preterminal span': (20, 21), 'span': (20, 21), 'parent': 'NX', 'label': 'ADJX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SU also ich bleibe sowieso einige tage da)
		(SU ich bleibe drei tage da das waren auf jeden fall dann mal drei nachte)
		(SU
			(SIMPX
				(VF wieviel)
				(LK kostet)
				(MF
					(ADVX denn)
					[01;36m(NX[00m
						(NX ein hotel)
						(PX in hannover)[01;36m)[00m)))
		(SU
			(NX
				(ADVX so)
				[01;31m(NX[00m
					(NN mittelklasse)[01;31m)[00m))))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'APPR', 'NE'), 'right siblings': [], 'left siblings': [(ADVX (ADV denn))], 'auto preterminal span': (24, 28), 'span': (24, 28), 'parent': 'MF', 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU also ich bleibe sowieso einige tage da)
		(SU ich bleibe drei tage da das waren auf jeden fall dann mal drei nachte)
		(SU wieviel kostet denn ein hotel in hannover)
		(SU
			(NX
				(ADVX so)
				[01;31m(NX[00m
					(NN mittelklasse)[01;31m)[00m))))
Step:Single Word Phrase
{'subtrees': ['NN'], 'family': ['ADVX', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADV', 'NN'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (28, 30), 'span': (29, 30), 'left siblings': ['ADVX'], 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP also ich bleibe sowieso einige tage da ich bleibe drei tage da das waren auf jeden fall dann mal drei nachte wieviel kostet denn ein hotel in hannover so mittelklasse)

Sentence 623:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU was ware denn das nachstbilligere hotel)
		(SU
			(NX
				(ADVX auch)
				[01;36m(NX[00m
					(ADVX so)
					[01;31m(NX[00m
						(ADJX zentrale)
						(NN lage)[01;31m)[00m[01;36m)[00m
				(ADVX eher)))))
Step:Modifier Attachment
{'new_parent': 'NX', 'new_family': ['ADVX', 'ADJX', 'NN'], 'mover info': [('ADVX', (7, 8))], 'old_family': ['ADVX', 'ADVX', 'NX', 'ADVX'], 'start left siblings': ['ADVX'], 'auto preterminals': ('ADV', 'ADV', 'ADJA', 'NN', 'ADV'), 'start right siblings': ['NX', 'ADVX'], 'end left siblings': [], 'auto preterminal span': (6, 11), 'movers': ['ADVX'], 'old_parent': 'NX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['ADJX', 'NN'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP was ware denn das nachstbilligere hotel auch so zentrale lage eher)

Sentence 624:
6 Initial errors
0 on fringe, 3 iterations
4 Error:UNSET move
1 Error:UNSET remove
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(SIMPX
				[01;31m(VF[00m
					[01;31m(SIMPX[00m
						(KOORD aber)
						[01;36m(VF[00m
							[01;36m(SIMPX[00m
								(C wenn)
								[01;31m(MF[00m
									(NX man)
									(NX es)[01;31m)[00m
								(VC
									[01;31m(VXFIN[00m
										(VVFIN zusammenrechnet)[01;31m)[00m)[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
				(LK ware)
				(MF ja eigentlich der flug doch noch gunstiger)))
		(SU wenn ich einfach am selben tag fliegen wurde)))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['KOORD', 'VF', 'LK', 'MF'], 'mover info': [('KOORD', (0, 1))], 'old_family': ['KOORD', 'C', 'MF', 'VC'], 'start left siblings': [], 'auto preterminals': ('KON', 'KOUS', 'PIS', 'PPER', 'VVFIN', 'VAFIN', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'ADV', 'ADJD'), 'start right siblings': ['C', 'MF', 'VC'], 'end left siblings': [], 'auto preterminal span': (0, 13), 'movers': ['KOORD'], 'old_parent': 'SIMPX', 'POS confusion': ('KON', 'KON'), 'end right siblings': ['VF', 'LK', 'MF'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			(SIMPX
				(KOORD aber)
				(VF
					(SIMPX
						(C wenn)
						[01;31m(MF[00m
							(NX man)
							(NX es)[01;31m)[00m
						(VC
							[01;31m(VXFIN[00m
								(VVFIN zusammenrechnet)[01;31m)[00m)))
				(LK ware)
				(MF ja eigentlich der flug doch noch gunstiger)))
		(SU wenn ich einfach am selben tag fliegen wurde)))
Step:UNSET remove
{'subtrees': ['NX', 'NX'], 'family': ['C', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PIS', 'PPER', 'VVFIN'), 'right siblings': ['VC'], 'parent': 'SIMPX', 'auto preterminal span': (1, 5), 'span': (2, 4), 'left siblings': ['C'], 'label': 'MF', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(SIMPX
				(KOORD aber)
				(VF
					(SIMPX
						(C wenn)
						(NX man)
						(NX es)
						(VC
							[01;31m(VXFIN[00m
								(VVFIN zusammenrechnet)[01;31m)[00m)))
				(LK ware)
				(MF ja eigentlich der flug doch noch gunstiger)))
		(SU wenn ich einfach am selben tag fliegen wurde)))
Step:Single Word Phrase
{'subtrees': ['VVFIN'], 'family': ['VXFIN'], 'over_word': True, 'over words': True, 'auto preterminals': ('VVFIN',), 'right siblings': [], 'parent': 'VC', 'auto preterminal span': (4, 5), 'span': (4, 5), 'left siblings': [], 'label': 'VXFIN', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP aber wenn man es zusammenrechnet ware ja eigentlich der flug doch noch gunstiger wenn ich einfach am selben tag fliegen wurde)

Sentence 625:
0 Initial errors
0 on fringe, 0 iterations

Sentence 626:
0 Initial errors
0 on fringe, 0 iterations

Sentence 627:
4 Initial errors
0 on fringe, 3 iterations
2 Error:Different label
1 Error:UNSET add
1 Error:UNSET add
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU ja genau)
		(SU ja)
		(SU
			(SIMPX
				(VF wann)
				(LK kann)
				[01;36m(FKOORD[00m
					(MF
						(NX ich)
						(PX bei ihnen)
						(NX
							[01;36m(NX[00m
								(NX das flugticket)
								(KON und)
								(NX die hotelbuchung)[01;36m)[00m
							(KON und)
							[01;36m(ADJX[00m [01;31m(ADVX[00m
								(ADVX so)
								(ADV weiter)[01;31m)[00m[01;36m)[00m))
					(VC abholen)[01;36m)[00m))))
Step:Different label
{'family': ['NX', 'KON', 'NX', 'KON', 'ADJX'], 'auto preterminal span': (14, 16), 'span': (14, 16), 'subtrees': ['ADVX', 'ADV'], 'parent': 'NX', 'over_word': False, 'auto preterminals': ('ADV', 'ADV'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('ADVX', 'ADJX')}
(TOP
	(TURN
		(SU ja genau)
		(SU ja)
		(SU
			(SIMPX
				(VF wann)
				(LK kann)
				[01;36m(FKOORD[00m
					(MF
						(NX ich)
						(PX bei ihnen)
						(NX
							[01;36m(NX[00m
								(NX das flugticket)
								(KON und)
								(NX die hotelbuchung)[01;36m)[00m
							(KON und)
							(ADJX so weiter)))
					(VC abholen)[01;36m)[00m))))
Step:UNSET add
{'subtrees': ['MF', 'VC'], 'family': ['VF', 'LK', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'APPR', 'PPER', 'ART', 'NN', 'KON', 'ART', 'NN', 'KON', 'ADV', 'ADV', 'VVINF'), 'right siblings': [], 'left siblings': [(VF (PX (PWAV wann))), (LK (VXFIN (VMFIN kann)))], 'auto preterminal span': (5, 17), 'span': (5, 17), 'parent': 'SIMPX', 'label': 'FKOORD', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU ja genau)
		(SU ja)
		(SU
			(SIMPX
				(VF wann)
				(LK kann)
				(FKOORD
					(MF
						(NX ich)
						(PX bei ihnen)
						(NX
							[01;36m(NX[00m
								(NX das flugticket)
								(KON und)
								(NX die hotelbuchung)[01;36m)[00m
							(KON und)
							(ADJX so weiter)))
					(VC abholen))))))
Step:UNSET add
{'subtrees': ['NX', 'KON', 'NX'], 'family': ['NX', 'KON', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'KON', 'ART', 'NN'), 'right siblings': [(KON und), (ADJX (ADVX (ADV so)) (ADV weiter))], 'left siblings': [], 'auto preterminal span': (8, 13), 'span': (8, 13), 'parent': 'NX', 'label': 'NX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP ja genau ja wann kann ich bei ihnen das flugticket und die hotelbuchung und so weiter abholen)

Sentence 628:
0 Initial errors
0 on fringe, 0 iterations

Sentence 629:
8 Initial errors
0 on fringe, 2 iterations
7 Error:UNSET move
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(SIMPX
				(LK ist)
				[01;36m(MF[00m
					[01;31m(MF[00m
						(NX es)
						(ADVX denn)
						[01;31m(NX[00m [01;33m(NX[00m
							(NX ein termin)
							[01;31m(PX[00m [01;33m(PX[00m
								(APPR unter)
								[01;33m(NX[00m (NX der woche)[01;31m)[00m[01;31m)[00m[01;31m)[00m
					[01;31m(NF[00m
						(NX
							(ART der)
							(ADJX funfzehnte)
							(NN juli))[01;31m)[00m[01;36m)[00m)) [01;33mNX) PX) NX)[00m
		(SU lassen sie mich mal gucken)))
Step:UNSET move
{'new_parent': 'PX', 'new_family': ['APPR', 'NX', 'NF'], 'mover info': [('NF', (8, 11))], 'old_family': ['LK', 'MF', 'NF'], 'start left siblings': ['LK', 'MF'], 'auto preterminals': ('VAFIN', 'PPER', 'ADV', 'ART', 'NN', 'APPR', 'ART', 'NN', 'ART', 'ADJA', 'NN'), 'start right siblings': [], 'end left siblings': ['APPR', 'NX'], 'auto preterminal span': (0, 11), 'adding node already present': False, 'movers': ['NF'], 'old_parent': 'SIMPX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(SU
			(SIMPX
				(LK ist)
				(MF
					(NX es)
					(ADVX denn)
					(NX
						(NX ein termin)
						(PX
							(APPR unter)
							(NX
								(NX der woche)
								[01;31m(NF[00m
									(NX
										(ART der)
										(ADJX funfzehnte)
										(NN juli))[01;31m)[00m))))))
		(SU lassen sie mich mal gucken)))
Step:Unary
{'subtrees': ['NX'], 'family': ['NX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'ART', 'ADJA', 'NN'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (6, 11), 'span': (8, 11), 'left siblings': ['NX'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ist es denn ein termin unter der woche der funfzehnte juli lassen sie mich mal gucken)

Sentence 630:
13 Initial errors
0 on fringe, 7 iterations
4 Error:PP Attachment
2 Error:Different label
2 Error:PP Attachment
2 Error:PP Attachment
1 Error:UNSET add
1 Error:PP Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM ja)
			(DM also)
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				[01;31m(LV[00m
					(SIMPX
						(C wenn)
						(MF sie)
						(VC fliegen mochten))[01;31m)[00m
				[01;33m(SIMPX[00m (VF es)
				(LK gibt)
				[01;31m(MF[00m
					[01;36m(MF[00m
						(NX
							(ART einen)
							(NN flug)) [01;33mSIMPX) SIMPX)[00m[01;36m)[00m
					[01;36m(NX[00m
						[01;36m(PX[00m [01;31m(NX[00m
							[01;31m(NX[00m
								(NX jeden tag)
								[01;31m(PX[00m [01;33m(PX[00m
									(PX von montag)
									[01;33m(PX[00m (PX bis freitag)[01;31m)[00m[01;31m)[00m
							(PX um sieben uhr zehn)[01;31m)[00m [01;33mPX) PX)[00m[01;36m)[00m
						(PX von kolnbonn)[01;36m)[00m[01;31m)[00m[01;31m)[00m
			(SIMPX und dann kommen sie in hannover um acht uhr zehn an))
		(SU wurde ihnen das reichen)))
Step:PP Attachment
{'new_parent': 'PX', 'new_family': ['PX', 'PX', 'PX'], 'mover info': [('PX', (16, 20))], 'old_family': ['NX', 'PX'], 'start left siblings': ['NX'], 'auto preterminals': ('PIDAT', 'NN', 'APPR', 'NN', 'APPR', 'NN', 'APPR', 'CARD', 'NN', 'CARD'), 'start right siblings': [], 'end left siblings': ['PX', 'PX'], 'auto preterminal span': (10, 20), 'adding node already present': False, 'movers': ['PX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'PX'}
(TOP
	(TURN
		(SU
			(DM ja)
			(DM also)
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				[01;31m(LV[00m
					(SIMPX
						(C wenn)
						(MF sie)
						(VC fliegen mochten))[01;31m)[00m
				[01;33m(SIMPX[00m (VF es)
				(LK gibt)
				[01;31m(MF[00m
					[01;36m(MF[00m
						(NX
							(ART einen)
							(NN flug)) [01;33mSIMPX) SIMPX)[00m[01;36m)[00m
					[01;36m(NX[00m
						[01;36m(PX[00m [01;31m(NX[00m
							(NX jeden tag)
							(PX von montag bis freitag um sieben uhr zehn)[01;31m)[00m[01;36m)[00m
						(PX von kolnbonn)[01;36m)[00m[01;31m)[00m[01;31m)[00m
			(SIMPX und dann kommen sie in hannover um acht uhr zehn an))
		(SU wurde ihnen das reichen)))
Step:Different label
{'family': ['NX', 'PX', 'PX'], 'auto preterminal span': (10, 20), 'span': (10, 20), 'subtrees': ['NX', 'PX'], 'parent': 'MF', 'over_word': False, 'auto preterminals': ('PIDAT', 'NN', 'APPR', 'NN', 'APPR', 'NN', 'APPR', 'CARD', 'NN', 'CARD'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('NX', 'PX')}
(TOP
	(TURN
		(SU
			(DM ja)
			(DM also)
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				[01;31m(LV[00m
					(SIMPX
						(C wenn)
						(MF sie)
						(VC fliegen mochten))[01;31m)[00m
				[01;33m(SIMPX[00m (VF es)
				(LK gibt)
				[01;31m(MF[00m
					[01;36m(MF[00m
						(NX
							(ART einen)
							(NN flug)) [01;33mSIMPX) SIMPX)[00m[01;36m)[00m
					[01;36m(NX[00m
						(PX jeden tag von montag bis freitag um sieben uhr zehn)
						(PX von kolnbonn)[01;36m)[00m[01;31m)[00m[01;31m)[00m
			(SIMPX und dann kommen sie in hannover um acht uhr zehn an))
		(SU wurde ihnen das reichen)))
Step:PP Attachment
{'new_parent': 'SIMPX', 'new_family': ['LV', 'VF', 'LK', 'MF', 'PX', 'PX'], 'mover info': [('PX', (10, 20)), ('PX', (20, 22))], 'old_family': ['NX', 'PX', 'PX'], 'start left siblings': ['NX'], 'auto preterminals': ('KOUS', 'PPER', 'VVINF', 'VMFIN', 'PPER', 'VVFIN', 'ART', 'NN', 'PIDAT', 'NN', 'APPR', 'NN', 'APPR', 'NN', 'APPR', 'CARD', 'NN', 'CARD', 'APPR', 'NE'), 'start right siblings': [], 'end left siblings': ['LV', 'VF', 'LK', 'MF'], 'auto preterminal span': (2, 22), 'movers': ['PX', 'PX'], 'old_parent': 'MF', 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU
			(DM ja)
			(DM also)
			[01;31m(SIMPX[00m
				[01;36m(SIMPX[00m
					[01;31m(LV[00m
						(SIMPX
							(C wenn)
							(MF sie)
							(VC fliegen mochten))[01;31m)[00m
					[01;36m(SIMPX[00m
						(VF es)
						(LK gibt)
						(MF einen flug)[01;36m)[00m[01;36m)[00m
				[01;36m(NX[00m
					(PX jeden tag von montag bis freitag um sieben uhr zehn)
					(PX von kolnbonn)[01;36m)[00m[01;31m)[00m
			(SIMPX und dann kommen sie in hannover um acht uhr zehn an))
		(SU wurde ihnen das reichen)))
Step:PP Attachment
{'new_parent': 'SU', 'new_family': ['DM', 'DM', 'SIMPX', 'PX', 'PX', 'SIMPX'], 'mover info': [('PX', (10, 20)), ('PX', (20, 22))], 'old_family': ['LV', 'VF', 'LK', 'MF', 'PX', 'PX'], 'start left siblings': ['LV', 'VF', 'LK', 'MF'], 'auto preterminals': ('PTKANT', 'ADV', 'KOUS', 'PPER', 'VVINF', 'VMFIN', 'PPER', 'VVFIN', 'ART', 'NN', 'PIDAT', 'NN', 'APPR', 'NN', 'APPR', 'NN', 'APPR', 'CARD', 'NN', 'CARD', 'APPR', 'NE', 'KON', 'ADV', 'VVFIN', 'PPER', 'APPR', 'NE', 'APPR', 'CARD', 'NN', 'CARD', 'PTKVZ'), 'start right siblings': [], 'end left siblings': ['DM', 'DM', 'SIMPX'], 'auto preterminal span': (0, 33), 'movers': ['PX', 'PX'], 'old_parent': 'SIMPX', 'end right siblings': ['SIMPX'], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU
			(DM ja)
			(DM also)
			(SIMPX
				[01;31m(LV[00m
					(SIMPX
						(C wenn)
						(MF sie)
						(VC fliegen mochten))[01;31m)[00m
				[01;36m(SIMPX[00m
					(VF es)
					(LK gibt)
					(MF einen flug)[01;36m)[00m)
			[01;36m(NX[00m
				(PX jeden tag von montag bis freitag um sieben uhr zehn)
				(PX von kolnbonn)[01;36m)[00m
			(SIMPX und dann kommen sie in hannover um acht uhr zehn an))
		(SU wurde ihnen das reichen)))
Step:UNSET add
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['LV', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ART', 'NN'), 'right siblings': [], 'left siblings': [(LV (SIMPX (C (KOUS wenn)) (MF (NX (PPER sie))) (VC (VXINF (VVINF fliegen)) (VXFIN (VMFIN mochten)))))], 'auto preterminal span': (6, 10), 'span': (6, 10), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM ja)
			(DM also)
			(SIMPX
				[01;31m(LV[00m
					(SIMPX
						(C wenn)
						(MF sie)
						(VC fliegen mochten))[01;31m)[00m
				(SIMPX es gibt einen flug))
			[01;36m(NX[00m
				(PX jeden tag von montag bis freitag um sieben uhr zehn)
				(PX von kolnbonn)[01;36m)[00m
			(SIMPX und dann kommen sie in hannover um acht uhr zehn an))
		(SU wurde ihnen das reichen)))
Step:PP Attachment
{'subtrees': ['PX', 'PX'], 'family': ['DM', 'DM', 'SIMPX', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PIDAT', 'NN', 'APPR', 'NN', 'APPR', 'NN', 'APPR', 'CARD', 'NN', 'CARD', 'APPR', 'NE'), 'right siblings': [(SIMPX (KOORD (KON und)) (VF (ADVX (ADV dann))) (LK (VXFIN (VVFIN kommen))) (MF (NX (PPER sie)) (PX (APPR in) (NX (NE hannover))) (PX (APPR um) (NX (NX (ADJX (CARD acht)) (NN uhr)) (ADJX (CARD zehn))))) (VC (PTKVZ an)))], 'left siblings': [(DM (PTKANT ja)), (DM (ADVX (ADV also))), (SIMPX (LV (SIMPX (C (KOUS wenn)) (MF (NX (PPER sie))) (VC (VXINF (VVINF fliegen)) (VXFIN (VMFIN mochten))))) (SIMPX (VF (NX (PPER es))) (LK (VXFIN (VVFIN gibt))) (MF (NX (ART einen) (NN flug)))))], 'auto preterminal span': (10, 22), 'span': (10, 22), 'parent': 'SU', 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM ja)
			(DM also)
			(SIMPX
				[01;31m(LV[00m
					(SIMPX
						(C wenn)
						(MF sie)
						(VC fliegen mochten))[01;31m)[00m
				(SIMPX es gibt einen flug))
			(NX jeden tag von montag bis freitag um sieben uhr zehn von kolnbonn)
			(SIMPX und dann kommen sie in hannover um acht uhr zehn an))
		(SU wurde ihnen das reichen)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['LV', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'VVINF', 'VMFIN', 'PPER', 'VVFIN', 'ART', 'NN'), 'right siblings': ['SIMPX'], 'parent': 'SIMPX', 'auto preterminal span': (2, 10), 'span': (2, 6), 'left siblings': [], 'label': 'LV', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja also wenn sie fliegen mochten es gibt einen flug jeden tag von montag bis freitag um sieben uhr zehn von kolnbonn und dann kommen sie in hannover um acht uhr zehn an wurde ihnen das reichen)

Sentence 631:
24 Initial errors
0 on fringe, 16 iterations
2 Error:Different label
2 Error:Different label
2 Error:Single Word Phrase
2 Error:Different label
2 Error:UNSET move
2 Error:Modifier Attachment
2 Error:Co-ordination
2 Error:UNSET move
1 Error:Unary
1 Error:Co-ordination
1 Error:Unary
1 Error:Unary
1 Error:Single Word Phrase
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU moment ich gucke mal nach)
		(SU nachts konnen sie nicht fahren)
		(SU
			(DM also)
			(SIMPX
				(VF sie)
				(LK konnen)
				[01;36m(ADJX[00m
					(MF
						[01;31m(ADVX[00m
							(ADVX nur)
							(ADV tagsuber)[01;31m)[00m)[01;36m)[00m
				(VC fahren))
			(SIMPX
				(VF der erste zug)
				(LK geht)
				[01;36m(MF[00m
					[01;31m(MF[00m
						(PX
							(APPR um)
							(NX funf uhr zehn))[01;31m)[00m
					[01;31m(VC[00m
						(PTKVZ ab)[01;31m)[00m
					[01;31m(NF[00m
						(PX
							(APPR von)
							(NX bonn))[01;31m)[00m[01;36m)[00m)
			(SIMPX
				(VF da)
				(FKOORD
					[01;36m(LKM[00m [01;31m(LKMVCN[00m
						(LK musten)
						(MF sie allerdings)
						(VC umsteigen)
						(NF
							(PX
								(APPR in)
								(NX
									[01;36m(ADJX[00m [01;31m(NX[00m
										(NE dusseldorf)[01;31m)[00m[01;36m)[00m
									(NX hauptbahnhof))))[01;31m)[00m[01;36m)[00m
					(KON und)
					[01;36m(LKM[00m [01;31m(LKVCN[00m
						(LK kamen)
						(VC an)
						[01;36m(PX[00m
							(NF
								(PX um sechs uhr zehn)
								(PX in hannover))[01;36m)[00m[01;31m)[00m[01;36m)[00m)))
		(SU das ist ein ic)
		(SU [01;33m(NX (DM[00m
			(DM oh)
			[01;31m(DM[00m
				[01;36m(DM[00m
					(NX
						(NN moment)) [01;33mDM) NX)[00m[01;36m)[00m
				(ADVX mal)[01;31m)[00m
			(SIMPX
				(VF sie)
				[01;31m(FKOORD[00m
					(LKMVC
						(LK kommen)
						[01;36m(PX[00m
							(MF
								(PX in dusseldorf)
								(PX um sechs uhr sechs))[01;36m)[00m
						(VC an))
					(KON und)
					[01;36m(LKMVCN[00m
						[01;31m(LKMVC[00m
							(LK mussen)
							(MF da)
							[01;31m(VC[00m [01;33m(VC[00m
								(VXINF
									(VVINF umsteigen))[01;31m)[00m[01;31m)[00m
						[01;31m(LKMVCN[00m
							(LK kommen) [01;33mVC)[00m
							(MF in hannover)
							(VC an)
							(NF um neun uhr zwei)[01;31m)[00m[01;36m)[00m[01;31m)[00m))))
Step:Different label
{'family': ['ADJX'], 'auto preterminal span': (13, 15), 'span': (13, 15), 'subtrees': ['ADVX', 'ADV'], 'parent': 'MF', 'over_word': False, 'auto preterminals': ('ADV', 'ADV'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('ADVX', 'ADJX')}
(TOP
	(TURN
		(SU moment ich gucke mal nach)
		(SU nachts konnen sie nicht fahren)
		(SU
			(DM also)
			(SIMPX sie konnen nur tagsuber fahren)
			(SIMPX
				(VF der erste zug)
				(LK geht)
				[01;36m(MF[00m
					[01;31m(MF[00m
						(PX
							(APPR um)
							(NX funf uhr zehn))[01;31m)[00m
					[01;31m(VC[00m
						(PTKVZ ab)[01;31m)[00m
					[01;31m(NF[00m
						(PX
							(APPR von)
							(NX bonn))[01;31m)[00m[01;36m)[00m)
			(SIMPX
				(VF da)
				(FKOORD
					[01;36m(LKM[00m [01;31m(LKMVCN[00m
						(LK musten)
						(MF sie allerdings)
						(VC umsteigen)
						(NF
							(PX
								(APPR in)
								(NX
									[01;36m(ADJX[00m [01;31m(NX[00m
										(NE dusseldorf)[01;31m)[00m[01;36m)[00m
									(NX hauptbahnhof))))[01;31m)[00m[01;36m)[00m
					(KON und)
					[01;36m(LKM[00m [01;31m(LKVCN[00m
						(LK kamen)
						(VC an)
						[01;36m(PX[00m
							(NF
								(PX um sechs uhr zehn)
								(PX in hannover))[01;36m)[00m[01;31m)[00m[01;36m)[00m)))
		(SU das ist ein ic)
		(SU [01;33m(NX (DM[00m
			(DM oh)
			[01;31m(DM[00m
				[01;36m(DM[00m
					(NX
						(NN moment)) [01;33mDM) NX)[00m[01;36m)[00m
				(ADVX mal)[01;31m)[00m
			(SIMPX
				(VF sie)
				[01;31m(FKOORD[00m
					(LKMVC
						(LK kommen)
						[01;36m(PX[00m
							(MF
								(PX in dusseldorf)
								(PX um sechs uhr sechs))[01;36m)[00m
						(VC an))
					(KON und)
					[01;36m(LKMVCN[00m
						[01;31m(LKMVC[00m
							(LK mussen)
							(MF da)
							[01;31m(VC[00m [01;33m(VC[00m
								(VXINF
									(VVINF umsteigen))[01;31m)[00m[01;31m)[00m
						[01;31m(LKMVCN[00m
							(LK kommen) [01;33mVC)[00m
							(MF in hannover)
							(VC an)
							(NF um neun uhr zwei)[01;31m)[00m[01;36m)[00m[01;31m)[00m))))
Step:Different label
{'family': ['LKM', 'KON', 'LKVCN'], 'auto preterminal span': (28, 35), 'span': (28, 35), 'subtrees': ['LK', 'MF', 'VC', 'NF'], 'parent': 'FKOORD', 'over_word': False, 'auto preterminals': ('VMFIN', 'PPER', 'ADV', 'VVINF', 'APPR', 'NE', 'NN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('LKMVCN', 'LKM')}
(TOP
	(TURN
		(SU moment ich gucke mal nach)
		(SU nachts konnen sie nicht fahren)
		(SU
			(DM also)
			(SIMPX sie konnen nur tagsuber fahren)
			(SIMPX
				(VF der erste zug)
				(LK geht)
				[01;36m(MF[00m
					[01;31m(MF[00m
						(PX
							(APPR um)
							(NX funf uhr zehn))[01;31m)[00m
					[01;31m(VC[00m
						(PTKVZ ab)[01;31m)[00m
					[01;31m(NF[00m
						(PX
							(APPR von)
							(NX bonn))[01;31m)[00m[01;36m)[00m)
			(SIMPX
				(VF da)
				(FKOORD
					(LKM
						(LK musten)
						(MF sie allerdings)
						(VC umsteigen)
						(NF
							(PX
								(APPR in)
								(NX
									[01;36m(ADJX[00m [01;31m(NX[00m
										(NE dusseldorf)[01;31m)[00m[01;36m)[00m
									(NX hauptbahnhof)))))
					(KON und)
					[01;36m(LKM[00m [01;31m(LKVCN[00m
						(LK kamen)
						(VC an)
						[01;36m(PX[00m
							(NF
								(PX um sechs uhr zehn)
								(PX in hannover))[01;36m)[00m[01;31m)[00m[01;36m)[00m)))
		(SU das ist ein ic)
		(SU [01;33m(NX (DM[00m
			(DM oh)
			[01;31m(DM[00m
				[01;36m(DM[00m
					(NX
						(NN moment)) [01;33mDM) NX)[00m[01;36m)[00m
				(ADVX mal)[01;31m)[00m
			(SIMPX
				(VF sie)
				[01;31m(FKOORD[00m
					(LKMVC
						(LK kommen)
						[01;36m(PX[00m
							(MF
								(PX in dusseldorf)
								(PX um sechs uhr sechs))[01;36m)[00m
						(VC an))
					(KON und)
					[01;36m(LKMVCN[00m
						[01;31m(LKMVC[00m
							(LK mussen)
							(MF da)
							[01;31m(VC[00m [01;33m(VC[00m
								(VXINF
									(VVINF umsteigen))[01;31m)[00m[01;31m)[00m
						[01;31m(LKMVCN[00m
							(LK kommen) [01;33mVC)[00m
							(MF in hannover)
							(VC an)
							(NF um neun uhr zwei)[01;31m)[00m[01;36m)[00m[01;31m)[00m))))
Step:Single Word Phrase
{'family': ['ADJX', 'NX'], 'auto preterminal span': (33, 34), 'span': (33, 34), 'subtrees': ['NE'], 'parent': 'NX', 'over_word': True, 'auto preterminals': ('NE',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('NX', 'ADJX')}
(TOP
	(TURN
		(SU moment ich gucke mal nach)
		(SU nachts konnen sie nicht fahren)
		(SU
			(DM also)
			(SIMPX sie konnen nur tagsuber fahren)
			(SIMPX
				(VF der erste zug)
				(LK geht)
				[01;36m(MF[00m
					[01;31m(MF[00m
						(PX
							(APPR um)
							(NX funf uhr zehn))[01;31m)[00m
					[01;31m(VC[00m
						(PTKVZ ab)[01;31m)[00m
					[01;31m(NF[00m
						(PX
							(APPR von)
							(NX bonn))[01;31m)[00m[01;36m)[00m)
			(SIMPX
				(VF da)
				(FKOORD
					(LKM musten sie allerdings umsteigen in dusseldorf hauptbahnhof)
					(KON und)
					[01;36m(LKM[00m [01;31m(LKVCN[00m
						(LK kamen)
						(VC an)
						[01;36m(PX[00m
							(NF
								(PX um sechs uhr zehn)
								(PX in hannover))[01;36m)[00m[01;31m)[00m[01;36m)[00m)))
		(SU das ist ein ic)
		(SU [01;33m(NX (DM[00m
			(DM oh)
			[01;31m(DM[00m
				[01;36m(DM[00m
					(NX
						(NN moment)) [01;33mDM) NX)[00m[01;36m)[00m
				(ADVX mal)[01;31m)[00m
			(SIMPX
				(VF sie)
				[01;31m(FKOORD[00m
					(LKMVC
						(LK kommen)
						[01;36m(PX[00m
							(MF
								(PX in dusseldorf)
								(PX um sechs uhr sechs))[01;36m)[00m
						(VC an))
					(KON und)
					[01;36m(LKMVCN[00m
						[01;31m(LKMVC[00m
							(LK mussen)
							(MF da)
							[01;31m(VC[00m [01;33m(VC[00m
								(VXINF
									(VVINF umsteigen))[01;31m)[00m[01;31m)[00m
						[01;31m(LKMVCN[00m
							(LK kommen) [01;33mVC)[00m
							(MF in hannover)
							(VC an)
							(NF um neun uhr zwei)[01;31m)[00m[01;36m)[00m[01;31m)[00m))))
Step:Different label
{'family': ['LKM', 'KON', 'LKM'], 'auto preterminal span': (36, 44), 'span': (36, 44), 'subtrees': ['LK', 'VC', 'NF'], 'parent': 'FKOORD', 'over_word': False, 'auto preterminals': ('VVFIN', 'PTKVZ', 'APPR', 'CARD', 'NN', 'CARD', 'APPR', 'NE'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('LKVCN', 'LKM')}
(TOP
	(TURN
		(SU moment ich gucke mal nach)
		(SU nachts konnen sie nicht fahren)
		(SU
			(DM also)
			(SIMPX sie konnen nur tagsuber fahren)
			(SIMPX
				(VF der erste zug)
				(LK geht)
				[01;36m(MF[00m
					[01;31m(MF[00m
						(PX
							(APPR um)
							(NX funf uhr zehn))[01;31m)[00m
					[01;31m(VC[00m
						(PTKVZ ab)[01;31m)[00m
					[01;31m(NF[00m
						(PX
							(APPR von)
							(NX bonn))[01;31m)[00m[01;36m)[00m)
			(SIMPX
				(VF da)
				(FKOORD
					(LKM musten sie allerdings umsteigen in dusseldorf hauptbahnhof)
					(KON und)
					(LKM
						(LK kamen)
						(VC an)
						[01;36m(PX[00m
							(NF
								(PX um sechs uhr zehn)
								(PX in hannover))[01;36m)[00m))))
		(SU das ist ein ic)
		(SU [01;33m(NX (DM[00m
			(DM oh)
			[01;31m(DM[00m
				[01;36m(DM[00m
					(NX
						(NN moment)) [01;33mDM) NX)[00m[01;36m)[00m
				(ADVX mal)[01;31m)[00m
			(SIMPX
				(VF sie)
				[01;31m(FKOORD[00m
					(LKMVC
						(LK kommen)
						[01;36m(PX[00m
							(MF
								(PX in dusseldorf)
								(PX um sechs uhr sechs))[01;36m)[00m
						(VC an))
					(KON und)
					[01;36m(LKMVCN[00m
						[01;31m(LKMVC[00m
							(LK mussen)
							(MF da)
							[01;31m(VC[00m [01;33m(VC[00m
								(VXINF
									(VVINF umsteigen))[01;31m)[00m[01;31m)[00m
						[01;31m(LKMVCN[00m
							(LK kommen) [01;33mVC)[00m
							(MF in hannover)
							(VC an)
							(NF um neun uhr zwei)[01;31m)[00m[01;36m)[00m[01;31m)[00m))))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['PX', 'VC', 'NF'], 'mover info': [('VC', (24, 25)), ('NF', (25, 27))], 'old_family': ['VF', 'LK', 'MF', 'VC', 'NF'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('ART', 'ADJA', 'NN', 'VVFIN', 'APPR', 'CARD', 'NN', 'CARD', 'PTKVZ', 'APPR', 'NE'), 'start right siblings': [], 'end left siblings': ['PX'], 'auto preterminal span': (16, 27), 'movers': ['VC', 'NF'], 'old_parent': 'SIMPX', 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU moment ich gucke mal nach)
		(SU nachts konnen sie nicht fahren)
		(SU
			(DM also)
			(SIMPX sie konnen nur tagsuber fahren)
			(SIMPX
				(VF der erste zug)
				(LK geht)
				(MF
					(PX um funf uhr zehn)
					[01;31m(VC[00m
						(PTKVZ ab)[01;31m)[00m
					[01;31m(NF[00m
						(PX
							(APPR von)
							(NX bonn))[01;31m)[00m))
			(SIMPX
				(VF da)
				(FKOORD
					(LKM musten sie allerdings umsteigen in dusseldorf hauptbahnhof)
					(KON und)
					(LKM
						(LK kamen)
						(VC an)
						[01;36m(PX[00m
							(NF
								(PX um sechs uhr zehn)
								(PX in hannover))[01;36m)[00m))))
		(SU das ist ein ic)
		(SU [01;33m(NX (DM[00m
			(DM oh)
			[01;31m(DM[00m
				[01;36m(DM[00m
					(NX
						(NN moment)) [01;33mDM) NX)[00m[01;36m)[00m
				(ADVX mal)[01;31m)[00m
			(SIMPX
				(VF sie)
				[01;31m(FKOORD[00m
					(LKMVC
						(LK kommen)
						[01;36m(PX[00m
							(MF
								(PX in dusseldorf)
								(PX um sechs uhr sechs))[01;36m)[00m
						(VC an))
					(KON und)
					[01;36m(LKMVCN[00m
						[01;31m(LKMVC[00m
							(LK mussen)
							(MF da)
							[01;31m(VC[00m [01;33m(VC[00m
								(VXINF
									(VVINF umsteigen))[01;31m)[00m[01;31m)[00m
						[01;31m(LKMVCN[00m
							(LK kommen) [01;33mVC)[00m
							(MF in hannover)
							(VC an)
							(NF um neun uhr zwei)[01;31m)[00m[01;36m)[00m[01;31m)[00m))))
Step:Modifier Attachment
{'new_parent': 'SU', 'new_family': ['DM', 'DM', 'ADVX', 'SIMPX'], 'mover info': [('ADVX', (50, 51))], 'old_family': ['NX', 'ADVX'], 'start left siblings': ['NX'], 'auto preterminals': ('ITJ', 'NN', 'ADV', 'PPER', 'VVFIN', 'APPR', 'NE', 'APPR', 'CARD', 'NN', 'CARD', 'PTKVZ', 'KON', 'VMFIN', 'ADV', 'VVINF', 'VVFIN', 'APPR', 'NE', 'PTKVZ', 'APPR', 'CARD', 'NN', 'CARD'), 'start right siblings': [], 'end left siblings': ['DM', 'DM'], 'auto preterminal span': (48, 72), 'movers': ['ADVX'], 'old_parent': 'DM', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['SIMPX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU moment ich gucke mal nach)
		(SU nachts konnen sie nicht fahren)
		(SU
			(DM also)
			(SIMPX sie konnen nur tagsuber fahren)
			(SIMPX
				(VF der erste zug)
				(LK geht)
				(MF
					(PX um funf uhr zehn)
					[01;31m(VC[00m
						(PTKVZ ab)[01;31m)[00m
					[01;31m(NF[00m
						(PX
							(APPR von)
							(NX bonn))[01;31m)[00m))
			(SIMPX
				(VF da)
				(FKOORD
					(LKM musten sie allerdings umsteigen in dusseldorf hauptbahnhof)
					(KON und)
					(LKM
						(LK kamen)
						(VC an)
						[01;36m(PX[00m
							(NF
								(PX um sechs uhr zehn)
								(PX in hannover))[01;36m)[00m))))
		(SU das ist ein ic)
		(SU
			[01;36m(NX[00m
				[01;36m(DM[00m
					(DM oh)
					(DM moment)[01;36m)[00m[01;36m)[00m
			(ADVX mal)
			(SIMPX
				(VF sie)
				[01;31m(FKOORD[00m
					(LKMVC
						(LK kommen)
						[01;36m(PX[00m
							(MF
								(PX in dusseldorf)
								(PX um sechs uhr sechs))[01;36m)[00m
						(VC an))
					(KON und)
					[01;36m(LKMVCN[00m
						[01;31m(LKMVC[00m
							(LK mussen)
							(MF da)
							[01;31m(VC[00m [01;33m(VC[00m
								(VXINF
									(VVINF umsteigen))[01;31m)[00m[01;31m)[00m
						[01;31m(LKMVCN[00m
							(LK kommen) [01;33mVC)[00m
							(MF in hannover)
							(VC an)
							(NF um neun uhr zwei)[01;31m)[00m[01;36m)[00m[01;31m)[00m))))
Step:Co-ordination
{'new_parent': 'LKMVCN', 'new_family': ['LKMVC', 'LK', 'MF', 'VC', 'NF'], 'mover info': [('LKMVC', (61, 64))], 'old_family': ['LKMVC', 'KON', 'LKMVC', 'LKMVCN'], 'start left siblings': ['LKMVC', 'KON'], 'auto preterminals': ('VVFIN', 'APPR', 'NE', 'APPR', 'CARD', 'NN', 'CARD', 'PTKVZ', 'KON', 'VMFIN', 'ADV', 'VVINF', 'VVFIN', 'APPR', 'NE', 'PTKVZ', 'APPR', 'CARD', 'NN', 'CARD'), 'start right siblings': ['LKMVCN'], 'end left siblings': [], 'auto preterminal span': (52, 72), 'movers': ['LKMVC'], 'old_parent': 'FKOORD', 'end right siblings': ['LK', 'MF', 'VC', 'NF'], 'classified_type': 'Co-ordination', 'type': 'move'}
(TOP
	(TURN
		(SU moment ich gucke mal nach)
		(SU nachts konnen sie nicht fahren)
		(SU
			(DM also)
			(SIMPX sie konnen nur tagsuber fahren)
			(SIMPX
				(VF der erste zug)
				(LK geht)
				(MF
					(PX um funf uhr zehn)
					[01;31m(VC[00m
						(PTKVZ ab)[01;31m)[00m
					[01;31m(NF[00m
						(PX
							(APPR von)
							(NX bonn))[01;31m)[00m))
			(SIMPX
				(VF da)
				(FKOORD
					(LKM musten sie allerdings umsteigen in dusseldorf hauptbahnhof)
					(KON und)
					(LKM
						(LK kamen)
						(VC an)
						[01;36m(PX[00m
							(NF
								(PX um sechs uhr zehn)
								(PX in hannover))[01;36m)[00m))))
		(SU das ist ein ic)
		(SU
			[01;36m(NX[00m
				[01;36m(DM[00m
					(DM oh)
					(DM moment)[01;36m)[00m[01;36m)[00m
			(ADVX mal)
			(SIMPX
				(VF sie)
				[01;31m(FKOORD[00m
					(LKMVC
						(LK kommen)
						[01;36m(PX[00m
							(MF
								(PX in dusseldorf)
								(PX um sechs uhr sechs))[01;36m)[00m
						(VC an))
					(KON und)
					(LKMVCN
						[01;31m(LKMVC[00m
							(LK mussen)
							(MF da)
							[01;31m(VC[00m [01;33m(VC[00m
								(VXINF
									(VVINF umsteigen))[01;31m)[00m[01;31m)[00m
						(LK kommen) [01;33mVC)[00m
						(MF in hannover)
						(VC an)
						(NF um neun uhr zwei))[01;31m)[00m))))
Step:UNSET move
{'new_parent': 'VC', 'new_family': ['VXINF', 'LK'], 'mover info': [('LK', (64, 65))], 'old_family': ['LKMVC', 'LK', 'MF', 'VC', 'NF'], 'start left siblings': ['LKMVC'], 'auto preterminals': ('VMFIN', 'ADV', 'VVINF', 'VVFIN', 'APPR', 'NE', 'PTKVZ', 'APPR', 'CARD', 'NN', 'CARD'), 'start right siblings': ['MF', 'VC', 'NF'], 'end left siblings': ['VXINF'], 'auto preterminal span': (61, 72), 'movers': ['LK'], 'old_parent': 'LKMVCN', 'POS confusion': ('VVFIN', 'VVFIN'), 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU moment ich gucke mal nach)
		(SU nachts konnen sie nicht fahren)
		(SU
			(DM also)
			(SIMPX sie konnen nur tagsuber fahren)
			(SIMPX
				(VF der erste zug)
				(LK geht)
				(MF
					(PX um funf uhr zehn)
					[01;31m(VC[00m
						(PTKVZ ab)[01;31m)[00m
					[01;31m(NF[00m
						(PX
							(APPR von)
							(NX bonn))[01;31m)[00m))
			(SIMPX
				(VF da)
				(FKOORD
					(LKM musten sie allerdings umsteigen in dusseldorf hauptbahnhof)
					(KON und)
					(LKM
						(LK kamen)
						(VC an)
						[01;36m(PX[00m
							(NF
								(PX um sechs uhr zehn)
								(PX in hannover))[01;36m)[00m))))
		(SU das ist ein ic)
		(SU
			[01;36m(NX[00m
				[01;36m(DM[00m
					(DM oh)
					(DM moment)[01;36m)[00m[01;36m)[00m
			(ADVX mal)
			(SIMPX
				(VF sie)
				[01;31m(FKOORD[00m
					(LKMVC
						(LK kommen)
						[01;36m(PX[00m
							(MF
								(PX in dusseldorf)
								(PX um sechs uhr sechs))[01;36m)[00m
						(VC an))
					(KON und)
					(LKMVCN
						[01;31m(LKMVC[00m
							(LK mussen)
							(MF da)
							(VC umsteigen kommen)[01;31m)[00m
						(MF in hannover)
						(VC an)
						(NF um neun uhr zwei))[01;31m)[00m))))
Step:Unary
{'subtrees': ['NF'], 'family': ['LK', 'VC', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'CARD', 'NN', 'CARD', 'APPR', 'NE'), 'right siblings': [], 'left siblings': [(LK (VXFIN (VVFIN kamen))), (VC (PTKVZ an))], 'auto preterminal span': (38, 44), 'span': (38, 44), 'parent': 'LKM', 'label': 'PX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU moment ich gucke mal nach)
		(SU nachts konnen sie nicht fahren)
		(SU
			(DM also)
			(SIMPX sie konnen nur tagsuber fahren)
			(SIMPX
				(VF der erste zug)
				(LK geht)
				(MF
					(PX um funf uhr zehn)
					[01;31m(VC[00m
						(PTKVZ ab)[01;31m)[00m
					[01;31m(NF[00m
						(PX
							(APPR von)
							(NX bonn))[01;31m)[00m))
			(SIMPX da musten sie allerdings umsteigen in dusseldorf hauptbahnhof und kamen an um sechs uhr zehn in hannover))
		(SU das ist ein ic)
		(SU
			[01;36m(NX[00m
				[01;36m(DM[00m
					(DM oh)
					(DM moment)[01;36m)[00m[01;36m)[00m
			(ADVX mal)
			(SIMPX
				(VF sie)
				[01;31m(FKOORD[00m
					(LKMVC
						(LK kommen)
						[01;36m(PX[00m
							(MF
								(PX in dusseldorf)
								(PX um sechs uhr sechs))[01;36m)[00m
						(VC an))
					(KON und)
					(LKMVCN
						[01;31m(LKMVC[00m
							(LK mussen)
							(MF da)
							(VC umsteigen kommen)[01;31m)[00m
						(MF in hannover)
						(VC an)
						(NF um neun uhr zwei))[01;31m)[00m))))
Step:Co-ordination
{'subtrees': ['DM', 'DM'], 'family': ['DM', 'ADVX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'NN'), 'right siblings': [(ADVX (ADV mal)), (SIMPX (VF (NX (PPER sie))) (FKOORD (LKMVC (LK (VXFIN (VVFIN kommen))) (MF (PX (APPR in) (NX (NE dusseldorf))) (PX (APPR um) (NX (NX (ADJX (CARD sechs)) (NN uhr)) (ADJX (CARD sechs))))) (VC (PTKVZ an))) (KON und) (LKMVCN (LKMVC (LK (VXFIN (VMFIN mussen))) (MF (ADVX (ADV da))) (VC (VXINF (VVINF umsteigen)) (LK (VXFIN (VVFIN kommen))))) (MF (PX (APPR in) (NX (NE hannover)))) (VC (PTKVZ an)) (NF (PX (APPR um) (NX (NX (ADJX (CARD neun)) (NN uhr)) (ADJX (CARD zwei))))))))], 'left siblings': [], 'auto preterminal span': (48, 50), 'span': (48, 50), 'parent': 'SU', 'label': 'DM', 'classified_type': 'Co-ordination', 'type': 'add'}
(TOP
	(TURN
		(SU moment ich gucke mal nach)
		(SU nachts konnen sie nicht fahren)
		(SU
			(DM also)
			(SIMPX sie konnen nur tagsuber fahren)
			(SIMPX
				(VF der erste zug)
				(LK geht)
				(MF
					(PX um funf uhr zehn)
					[01;31m(VC[00m
						(PTKVZ ab)[01;31m)[00m
					[01;31m(NF[00m
						(PX
							(APPR von)
							(NX bonn))[01;31m)[00m))
			(SIMPX da musten sie allerdings umsteigen in dusseldorf hauptbahnhof und kamen an um sechs uhr zehn in hannover))
		(SU das ist ein ic)
		(SU
			[01;36m(NX[00m
				(DM
					(DM oh)
					(DM moment))[01;36m)[00m
			(ADVX mal)
			(SIMPX
				(VF sie)
				[01;31m(FKOORD[00m
					(LKMVC
						(LK kommen)
						[01;36m(PX[00m
							(MF
								(PX in dusseldorf)
								(PX um sechs uhr sechs))[01;36m)[00m
						(VC an))
					(KON und)
					(LKMVCN
						[01;31m(LKMVC[00m
							(LK mussen)
							(MF da)
							(VC umsteigen kommen)[01;31m)[00m
						(MF in hannover)
						(VC an)
						(NF um neun uhr zwei))[01;31m)[00m))))
Step:Unary
{'subtrees': ['DM'], 'family': ['NX', 'ADVX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'NN'), 'right siblings': [(ADVX (ADV mal)), (SIMPX (VF (NX (PPER sie))) (FKOORD (LKMVC (LK (VXFIN (VVFIN kommen))) (MF (PX (APPR in) (NX (NE dusseldorf))) (PX (APPR um) (NX (NX (ADJX (CARD sechs)) (NN uhr)) (ADJX (CARD sechs))))) (VC (PTKVZ an))) (KON und) (LKMVCN (LKMVC (LK (VXFIN (VMFIN mussen))) (MF (ADVX (ADV da))) (VC (VXINF (VVINF umsteigen)) (LK (VXFIN (VVFIN kommen))))) (MF (PX (APPR in) (NX (NE hannover)))) (VC (PTKVZ an)) (NF (PX (APPR um) (NX (NX (ADJX (CARD neun)) (NN uhr)) (ADJX (CARD zwei))))))))], 'left siblings': [], 'auto preterminal span': (48, 50), 'span': (48, 50), 'parent': 'SU', 'label': 'NX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU moment ich gucke mal nach)
		(SU nachts konnen sie nicht fahren)
		(SU
			(DM also)
			(SIMPX sie konnen nur tagsuber fahren)
			(SIMPX
				(VF der erste zug)
				(LK geht)
				(MF
					(PX um funf uhr zehn)
					[01;31m(VC[00m
						(PTKVZ ab)[01;31m)[00m
					[01;31m(NF[00m
						(PX
							(APPR von)
							(NX bonn))[01;31m)[00m))
			(SIMPX da musten sie allerdings umsteigen in dusseldorf hauptbahnhof und kamen an um sechs uhr zehn in hannover))
		(SU das ist ein ic)
		(SU
			(NX oh moment)
			(ADVX mal)
			(SIMPX
				(VF sie)
				[01;31m(FKOORD[00m
					(LKMVC
						(LK kommen)
						[01;36m(PX[00m
							(MF
								(PX in dusseldorf)
								(PX um sechs uhr sechs))[01;36m)[00m
						(VC an))
					(KON und)
					(LKMVCN
						[01;31m(LKMVC[00m
							(LK mussen)
							(MF da)
							(VC umsteigen kommen)[01;31m)[00m
						(MF in hannover)
						(VC an)
						(NF um neun uhr zwei))[01;31m)[00m))))
Step:Unary
{'subtrees': ['MF'], 'family': ['LK', 'PX', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'NE', 'APPR', 'CARD', 'NN', 'CARD'), 'right siblings': [(VC (PTKVZ an))], 'left siblings': [(LK (VXFIN (VVFIN kommen)))], 'auto preterminal span': (53, 59), 'span': (53, 59), 'parent': 'LKMVC', 'label': 'PX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU moment ich gucke mal nach)
		(SU nachts konnen sie nicht fahren)
		(SU
			(DM also)
			(SIMPX sie konnen nur tagsuber fahren)
			(SIMPX
				(VF der erste zug)
				(LK geht)
				(MF
					(PX um funf uhr zehn)
					[01;31m(VC[00m
						(PTKVZ ab)[01;31m)[00m
					[01;31m(NF[00m
						(PX
							(APPR von)
							(NX bonn))[01;31m)[00m))
			(SIMPX da musten sie allerdings umsteigen in dusseldorf hauptbahnhof und kamen an um sechs uhr zehn in hannover))
		(SU das ist ein ic)
		(SU
			(NX oh moment)
			(ADVX mal)
			(SIMPX
				(VF sie)
				[01;31m(FKOORD[00m
					(LKMVC kommen in dusseldorf um sechs uhr sechs an)
					(KON und)
					(LKMVCN
						[01;31m(LKMVC[00m
							(LK mussen)
							(MF da)
							(VC umsteigen kommen)[01;31m)[00m
						(MF in hannover)
						(VC an)
						(NF um neun uhr zwei))[01;31m)[00m))))
Step:Single Word Phrase
{'subtrees': ['PTKVZ'], 'family': ['PX', 'VC', 'NF'], 'over_word': True, 'over words': True, 'auto preterminals': ('APPR', 'CARD', 'NN', 'CARD', 'PTKVZ', 'APPR', 'NE'), 'right siblings': ['NF'], 'parent': 'MF', 'auto preterminal span': (20, 27), 'span': (24, 25), 'left siblings': ['PX'], 'label': 'VC', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(SU moment ich gucke mal nach)
		(SU nachts konnen sie nicht fahren)
		(SU
			(DM also)
			(SIMPX sie konnen nur tagsuber fahren)
			(SIMPX
				(VF der erste zug)
				(LK geht)
				(MF
					(PX um funf uhr zehn)
					(PTKVZ ab)
					[01;31m(NF[00m
						(PX
							(APPR von)
							(NX bonn))[01;31m)[00m))
			(SIMPX da musten sie allerdings umsteigen in dusseldorf hauptbahnhof und kamen an um sechs uhr zehn in hannover))
		(SU das ist ein ic)
		(SU
			(NX oh moment)
			(ADVX mal)
			(SIMPX
				(VF sie)
				[01;31m(FKOORD[00m
					(LKMVC kommen in dusseldorf um sechs uhr sechs an)
					(KON und)
					(LKMVCN
						[01;31m(LKMVC[00m
							(LK mussen)
							(MF da)
							(VC umsteigen kommen)[01;31m)[00m
						(MF in hannover)
						(VC an)
						(NF um neun uhr zwei))[01;31m)[00m))))
Step:Unary
{'subtrees': ['PX'], 'family': ['PX', 'PTKVZ', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'CARD', 'NN', 'CARD', 'PTKVZ', 'APPR', 'NE'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (20, 27), 'span': (25, 27), 'left siblings': ['PX', 'PTKVZ'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU moment ich gucke mal nach)
		(SU nachts konnen sie nicht fahren)
		(SU also sie konnen nur tagsuber fahren der erste zug geht um funf uhr zehn ab von bonn da musten sie allerdings umsteigen in dusseldorf hauptbahnhof und kamen an um sechs uhr zehn in hannover)
		(SU das ist ein ic)
		(SU
			(NX oh moment)
			(ADVX mal)
			(SIMPX
				(VF sie)
				[01;31m(FKOORD[00m
					(LKMVC kommen in dusseldorf um sechs uhr sechs an)
					(KON und)
					(LKMVCN
						[01;31m(LKMVC[00m
							(LK mussen)
							(MF da)
							(VC umsteigen kommen)[01;31m)[00m
						(MF in hannover)
						(VC an)
						(NF um neun uhr zwei))[01;31m)[00m))))
Step:UNSET remove
{'subtrees': ['LKMVC', 'KON', 'LKMVCN'], 'family': ['VF', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'APPR', 'NE', 'APPR', 'CARD', 'NN', 'CARD', 'PTKVZ', 'KON', 'VMFIN', 'ADV', 'VVINF', 'VVFIN', 'APPR', 'NE', 'PTKVZ', 'APPR', 'CARD', 'NN', 'CARD'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (51, 72), 'span': (52, 72), 'left siblings': ['VF'], 'label': 'FKOORD', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU moment ich gucke mal nach)
		(SU nachts konnen sie nicht fahren)
		(SU also sie konnen nur tagsuber fahren der erste zug geht um funf uhr zehn ab von bonn da musten sie allerdings umsteigen in dusseldorf hauptbahnhof und kamen an um sechs uhr zehn in hannover)
		(SU das ist ein ic)
		(SU
			(NX oh moment)
			(ADVX mal)
			(SIMPX
				(VF sie)
				(LKMVC kommen in dusseldorf um sechs uhr sechs an)
				(KON und)
				(LKMVCN
					[01;31m(LKMVC[00m
						(LK mussen)
						(MF da)
						(VC umsteigen kommen)[01;31m)[00m
					(MF in hannover)
					(VC an)
					(NF um neun uhr zwei))))))
Step:UNSET remove
{'subtrees': ['LK', 'MF', 'VC'], 'family': ['LKMVC', 'MF', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('VMFIN', 'ADV', 'VVINF', 'VVFIN', 'APPR', 'NE', 'PTKVZ', 'APPR', 'CARD', 'NN', 'CARD'), 'right siblings': ['MF', 'VC', 'NF'], 'parent': 'LKMVCN', 'auto preterminal span': (61, 72), 'span': (61, 65), 'left siblings': [], 'label': 'LKMVC', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP moment ich gucke mal nach nachts konnen sie nicht fahren also sie konnen nur tagsuber fahren der erste zug geht um funf uhr zehn ab von bonn da musten sie allerdings umsteigen in dusseldorf hauptbahnhof und kamen an um sechs uhr zehn in hannover das ist ein ic oh moment mal sie kommen in dusseldorf um sechs uhr sechs an und mussen da umsteigen kommen in hannover an um neun uhr zwei)

Sentence 632:
5 Initial errors
0 on fringe, 4 iterations
2 Error:Modifier Attachment
1 Error:PP Attachment
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			[01;31m(SIMPX[00m
				(VF der)
				(LK fahrt)[01;31m)[00m
			(DM ah)
			(DM entschuldigung)
			(SIMPX der fahrt nur samstag sonntag))
		(SU
			(SIMPX
				(VF taglich)
				(LK fahrt)
				(MF
					[01;36m(MF[00m
						(ADVX dann)
						(PX um sechs uhr funf)[01;36m)[00m
					(NX der erste zug))))
		(SU kommen sie an um zehn uhr neunzehn)
		(SU
			[01;31m(ADJX[00m
				[01;36m(DM[00m
					(ADVX
						(ADV also))[01;36m)[00m
				[01;36m(ADJX[00m
					(ADVX auch)
					(ADJX zu spat)[01;36m)[00m[01;31m)[00m)))
Step:Modifier Attachment
{'new_parent': 'SU', 'new_family': ['ADVX', 'ADJX'], 'mover info': [('ADVX', (26, 27))], 'old_family': ['ADVX', 'ADVX', 'ADJX'], 'start left siblings': [], 'auto preterminals': ('ADV', 'ADV', 'PTKA', 'ADJD'), 'start right siblings': ['ADVX', 'ADJX'], 'end left siblings': [], 'auto preterminal span': (26, 30), 'movers': ['ADVX'], 'old_parent': 'ADJX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['ADJX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU
			[01;31m(SIMPX[00m
				(VF der)
				(LK fahrt)[01;31m)[00m
			(DM ah)
			(DM entschuldigung)
			(SIMPX der fahrt nur samstag sonntag))
		(SU
			(SIMPX
				(VF taglich)
				(LK fahrt)
				(MF
					[01;36m(MF[00m
						(ADVX dann)
						(PX um sechs uhr funf)[01;36m)[00m
					(NX der erste zug))))
		(SU kommen sie an um zehn uhr neunzehn)
		(SU
			[01;36m(DM[00m
				(ADVX
					(ADV also))[01;36m)[00m
			(ADJX auch zu spat))))
Step:PP Attachment
{'subtrees': ['ADVX', 'PX'], 'family': ['MF', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'APPR', 'CARD', 'NN', 'CARD'), 'right siblings': [(NX (ART der) (ADJX (ADJA erste)) (NN zug))], 'left siblings': [], 'auto preterminal span': (11, 16), 'span': (11, 16), 'parent': 'MF', 'label': 'MF', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU
			[01;31m(SIMPX[00m
				(VF der)
				(LK fahrt)[01;31m)[00m
			(DM ah)
			(DM entschuldigung)
			(SIMPX der fahrt nur samstag sonntag))
		(SU taglich fahrt dann um sechs uhr funf der erste zug)
		(SU kommen sie an um zehn uhr neunzehn)
		(SU
			[01;36m(DM[00m
				(ADVX
					(ADV also))[01;36m)[00m
			(ADJX auch zu spat))))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['DM', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV',), 'right siblings': [(ADJX (ADVX (ADV auch)) (ADJX (PTKA zu) (ADJD spat)))], 'left siblings': [], 'auto preterminal span': (26, 27), 'span': (26, 27), 'parent': 'SU', 'label': 'DM', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU
			[01;31m(SIMPX[00m
				(VF der)
				(LK fahrt)[01;31m)[00m
			(DM ah)
			(DM entschuldigung)
			(SIMPX der fahrt nur samstag sonntag))
		(SU taglich fahrt dann um sechs uhr funf der erste zug)
		(SU kommen sie an um zehn uhr neunzehn)
		(SU also auch zu spat)))
Step:UNSET remove
{'subtrees': ['VF', 'LK'], 'family': ['SIMPX', 'DM', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VVFIN', 'ITJ', 'NN', 'PDS', 'VVFIN', 'ADV', 'NN', 'NN'), 'right siblings': ['DM', 'DM', 'SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 9), 'span': (0, 2), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP der fahrt ah entschuldigung der fahrt nur samstag sonntag taglich fahrt dann um sechs uhr funf der erste zug kommen sie an um zehn uhr neunzehn also auch zu spat)

Sentence 633:
19 Initial errors
0 on fringe, 9 iterations
5 Error:UNSET move
5 Error:Modifier Attachment
2 Error:Co-ordination
2 Error:UNSET move
1 Error:UNSET add
1 Error:Single Word Phrase
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:NP Internal Structure
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU mittelklasse)
		(SU wollen sie denn eher eine zentrale lage)
		(SU
			(SIMPX
				(VF
					(PX
						[01;31m(PX[00m
							(PX am bahnhof)
							(KON oder)
							[01;33m(PX[00m (PX am flughafen)[01;31m)[00m
						(ADVX direkt))) [01;33mPX)[00m
				[01;36m(SIMPX[00m
					(LK kann)
					(MF ich ihnen eines)
					(VC anbieten)[01;36m)[00m))
		(SU
			[01;31m(SIMPX[00m
				(VF das)
				(LK ist)
				[01;36m(NX[00m
					(MF [01;33m(NX (MF[00m
						(ADVX
							(ADVX so)
							[01;36m(ADVX[00m
								(ADV ungefahr)[01;36m)[00m)
						[01;31m(NX[00m
							[01;31m(NX[00m
								(ADJX mittlere)
								(NN preisklasse)[01;31m)[00m [01;33mMF) NX)[00m
							(PX mit restaurant konferenzraum garage und sauna)[01;31m)[00m)[01;36m)[00m
				[01;31m(NF[00m [01;33m(SIMPX (VF (NX[00m
					[01;31m(NX[00m
						(ART das)
						[01;36m(NX[00m
							(NN [01;33m(NX[00m hotel)[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(NX
						(NE forahotel))[01;31m)[00m [01;33mNX) NX) VF)[00m
				(LK heist)
				(MF das)[01;31m)[00m) [01;33mSIMPX)[00m
		(SU die kategorie fur ein einzelzimmer liegt bei hundert dreisig bis zweihundert funfunddreisig mark)))
Step:UNSET move
{'new_parent': 'VF', 'new_family': ['NF', 'NX'], 'mover info': [('NF', (31, 33))], 'old_family': ['VF', 'LK', 'MF', 'NF'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('PDS', 'VAFIN', 'ADV', 'ADV', 'ADJA', 'NN', 'APPR', 'NN', 'NN', 'NN', 'KON', 'NN', 'ART', 'NN', 'NE', 'VVFIN', 'PDS'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (19, 36), 'adding node already present': False, 'movers': ['NF'], 'old_parent': 'SIMPX', 'added and moved': True, 'end right siblings': ['NX'], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(SU mittelklasse)
		(SU wollen sie denn eher eine zentrale lage)
		(SU
			(SIMPX
				(VF
					(PX
						[01;31m(PX[00m
							(PX am bahnhof)
							(KON oder)
							[01;33m(PX[00m (PX am flughafen)[01;31m)[00m
						(ADVX direkt))) [01;33mPX)[00m
				[01;36m(SIMPX[00m
					(LK kann)
					(MF ich ihnen eines)
					(VC anbieten)[01;36m)[00m))
		(SU
			[01;31m(SIMPX[00m
				(VF das)
				(LK ist)
				[01;36m(NX[00m
					(MF [01;33m(NX (MF[00m
						(ADVX
							(ADVX so)
							[01;36m(ADVX[00m
								(ADV ungefahr)[01;36m)[00m)
						[01;31m(NX[00m
							[01;31m(NX[00m
								(ADJX mittlere)
								(NN preisklasse)[01;31m)[00m [01;33mMF) NX)[00m
							(PX mit restaurant konferenzraum garage und sauna)[01;31m)[00m)[01;36m)[00m[01;31m)[00m
			(SIMPX
				(NX
					(VF
						[01;31m(NF[00m
							[01;31m(NX[00m
								(ART das)
								[01;36m(NX[00m
									(NN [01;33m(NX[00m hotel)[01;36m)[00m[01;31m)[00m[01;31m)[00m
						(NX forahotel))) [01;33mNX)[00m
				(LK heist)
				(MF das)))
		(SU die kategorie fur ein einzelzimmer liegt bei hundert dreisig bis zweihundert funfunddreisig mark)))
Step:Modifier Attachment
{'new_parent': 'NX', 'new_family': ['ADVX', 'ADJX', 'NN'], 'mover info': [('ADVX', (21, 23))], 'old_family': ['ADVX', 'NX'], 'start left siblings': [], 'auto preterminals': ('ADV', 'ADV', 'ADJA', 'NN', 'APPR', 'NN', 'NN', 'NN', 'KON', 'NN'), 'start right siblings': ['NX'], 'end left siblings': [], 'auto preterminal span': (21, 31), 'adding node already present': False, 'movers': ['ADVX'], 'old_parent': 'MF', 'added and moved': True, 'end right siblings': ['ADJX', 'NN'], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(SU mittelklasse)
		(SU wollen sie denn eher eine zentrale lage)
		(SU
			(SIMPX
				(VF
					(PX
						[01;31m(PX[00m
							(PX am bahnhof)
							(KON oder)
							[01;33m(PX[00m (PX am flughafen)[01;31m)[00m
						(ADVX direkt))) [01;33mPX)[00m
				[01;36m(SIMPX[00m
					(LK kann)
					(MF ich ihnen eines)
					(VC anbieten)[01;36m)[00m))
		(SU
			[01;31m(SIMPX[00m
				(VF das)
				(LK ist)
				(MF
					(NX
						(MF
							(NX
								(ADVX
									(ADVX so)
									[01;36m(ADVX[00m
										(ADV ungefahr)[01;36m)[00m)
								(ADJX mittlere)
								(NN preisklasse)))
						(PX mit restaurant konferenzraum garage und sauna)))[01;31m)[00m
			(SIMPX
				(NX
					(VF
						[01;31m(NF[00m
							[01;31m(NX[00m
								(ART das)
								[01;36m(NX[00m
									(NN [01;33m(NX[00m hotel)[01;36m)[00m[01;31m)[00m[01;31m)[00m
						(NX forahotel))) [01;33mNX)[00m
				(LK heist)
				(MF das)))
		(SU die kategorie fur ein einzelzimmer liegt bei hundert dreisig bis zweihundert funfunddreisig mark)))
Step:Co-ordination
{'new_parent': 'VF', 'new_family': ['PX', 'KON', 'PX'], 'mover info': [('PX', (8, 10)), ('KON', (10, 11))], 'old_family': ['PX', 'KON', 'PX'], 'start left siblings': [], 'auto preterminals': ('APPRART', 'NN', 'KON', 'APPRART', 'NN', 'ADV'), 'start right siblings': ['PX'], 'end left siblings': [], 'auto preterminal span': (8, 14), 'adding node already present': False, 'movers': ['PX', 'KON'], 'old_parent': 'PX', 'added and moved': True, 'end right siblings': ['PX'], 'classified_type': 'Co-ordination', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(SU mittelklasse)
		(SU wollen sie denn eher eine zentrale lage)
		(SU
			(SIMPX
				(PX am bahnhof oder am flughafen direkt)
				[01;36m(SIMPX[00m
					(LK kann)
					(MF ich ihnen eines)
					(VC anbieten)[01;36m)[00m))
		(SU
			[01;31m(SIMPX[00m
				(VF das)
				(LK ist)
				(MF
					(NX
						(MF
							(NX
								(ADVX
									(ADVX so)
									[01;36m(ADVX[00m
										(ADV ungefahr)[01;36m)[00m)
								(ADJX mittlere)
								(NN preisklasse)))
						(PX mit restaurant konferenzraum garage und sauna)))[01;31m)[00m
			(SIMPX
				(NX
					(VF
						[01;31m(NF[00m
							[01;31m(NX[00m
								(ART das)
								[01;36m(NX[00m
									(NN [01;33m(NX[00m hotel)[01;36m)[00m[01;31m)[00m[01;31m)[00m
						(NX forahotel))) [01;33mNX)[00m
				(LK heist)
				(MF das)))
		(SU die kategorie fur ein einzelzimmer liegt bei hundert dreisig bis zweihundert funfunddreisig mark)))
Step:UNSET move
{'new_parent': 'NF', 'new_family': ['ART', 'NX'], 'mover info': [('ART', (31, 32))], 'old_family': ['ART', 'NN'], 'start left siblings': [], 'auto preterminals': ('ART', 'NN'), 'start right siblings': ['NN'], 'end left siblings': [], 'auto preterminal span': (31, 33), 'movers': ['ART'], 'old_parent': 'NX', 'POS confusion': ('ART', 'ART'), 'end right siblings': ['NX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU mittelklasse)
		(SU wollen sie denn eher eine zentrale lage)
		(SU
			(SIMPX
				(PX am bahnhof oder am flughafen direkt)
				[01;36m(SIMPX[00m
					(LK kann)
					(MF ich ihnen eines)
					(VC anbieten)[01;36m)[00m))
		(SU
			[01;31m(SIMPX[00m
				(VF das)
				(LK ist)
				(MF
					(NX
						(MF
							(NX
								(ADVX
									(ADVX so)
									[01;36m(ADVX[00m
										(ADV ungefahr)[01;36m)[00m)
								(ADJX mittlere)
								(NN preisklasse)))
						(PX mit restaurant konferenzraum garage und sauna)))[01;31m)[00m
			(SIMPX
				(NX
					(VF
						[01;31m(NF[00m
							(ART das)
							[01;33m(NX[00m (NX hotel)[01;31m)[00m
						(NX forahotel))) [01;33mNX)[00m
				(LK heist)
				(MF das)))
		(SU die kategorie fur ein einzelzimmer liegt bei hundert dreisig bis zweihundert funfunddreisig mark)))
Step:UNSET add
{'subtrees': ['LK', 'MF', 'VC'], 'family': ['PX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VMFIN', 'PPER', 'PPER', 'PIS', 'VVINF'), 'right siblings': [], 'left siblings': [(PX (VF (PX (APPRART am) (NX (NN bahnhof))) (KON oder) (PX (PX (APPRART am) (NX (NN flughafen))) (ADVX (ADV direkt)))))], 'auto preterminal span': (14, 19), 'span': (14, 19), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU mittelklasse)
		(SU wollen sie denn eher eine zentrale lage)
		(SU am bahnhof oder am flughafen direkt kann ich ihnen eines anbieten)
		(SU
			[01;31m(SIMPX[00m
				(VF das)
				(LK ist)
				(MF
					(NX
						(MF
							(NX
								(ADVX
									(ADVX so)
									[01;36m(ADVX[00m
										(ADV ungefahr)[01;36m)[00m)
								(ADJX mittlere)
								(NN preisklasse)))
						(PX mit restaurant konferenzraum garage und sauna)))[01;31m)[00m
			(SIMPX
				(NX
					(VF
						[01;31m(NF[00m
							(ART das)
							[01;33m(NX[00m (NX hotel)[01;31m)[00m
						(NX forahotel))) [01;33mNX)[00m
				(LK heist)
				(MF das)))
		(SU die kategorie fur ein einzelzimmer liegt bei hundert dreisig bis zweihundert funfunddreisig mark)))
Step:Single Word Phrase
{'subtrees': ['ADV'], 'family': ['ADVX', 'ADVX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADV',), 'right siblings': [], 'left siblings': [(ADVX (ADV so))], 'auto preterminal span': (22, 23), 'span': (22, 23), 'parent': 'ADVX', 'label': 'ADVX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SU mittelklasse)
		(SU wollen sie denn eher eine zentrale lage)
		(SU am bahnhof oder am flughafen direkt kann ich ihnen eines anbieten)
		(SU
			[01;31m(SIMPX[00m
				(VF das)
				(LK ist)
				(MF so ungefahr mittlere preisklasse mit restaurant konferenzraum garage und sauna)[01;31m)[00m
			(SIMPX
				(NX
					(VF
						[01;31m(NF[00m
							(ART das)
							[01;33m(NX[00m (NX hotel)[01;31m)[00m
						(NX forahotel))) [01;33mNX)[00m
				(LK heist)
				(MF das)))
		(SU die kategorie fur ein einzelzimmer liegt bei hundert dreisig bis zweihundert funfunddreisig mark)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VAFIN', 'ADV', 'ADV', 'ADJA', 'NN', 'APPR', 'NN', 'NN', 'NN', 'KON', 'NN', 'ART', 'NN', 'NE', 'VVFIN', 'PDS'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (19, 36), 'span': (19, 31), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU mittelklasse)
		(SU wollen sie denn eher eine zentrale lage)
		(SU am bahnhof oder am flughafen direkt kann ich ihnen eines anbieten)
		(SU
			(VF das)
			(LK ist)
			(MF so ungefahr mittlere preisklasse mit restaurant konferenzraum garage und sauna)
			(SIMPX
				(NX
					(VF
						[01;31m(NF[00m
							(ART das)
							[01;33m(NX[00m (NX hotel)[01;31m)[00m
						(NX forahotel))) [01;33mNX)[00m
				(LK heist)
				(MF das)))
		(SU die kategorie fur ein einzelzimmer liegt bei hundert dreisig bis zweihundert funfunddreisig mark)))
Step:UNSET remove
{'subtrees': ['ART', 'NX'], 'family': ['NF', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'NE'), 'right siblings': ['NX'], 'parent': 'VF', 'auto preterminal span': (31, 34), 'span': (31, 33), 'left siblings': [], 'label': 'NF', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU mittelklasse)
		(SU wollen sie denn eher eine zentrale lage)
		(SU am bahnhof oder am flughafen direkt kann ich ihnen eines anbieten)
		(SU
			(VF das)
			(LK ist)
			(MF so ungefahr mittlere preisklasse mit restaurant konferenzraum garage und sauna)
			(SIMPX
				(NX
					(VF
						(ART das)
						[01;36m(NX[00m
							(NX hotel)
							(NX forahotel)[01;36m)[00m))
				(LK heist)
				(MF das)))
		(SU die kategorie fur ein einzelzimmer liegt bei hundert dreisig bis zweihundert funfunddreisig mark)))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['ART', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'NE'), 'right siblings': [], 'left siblings': [(ART das)], 'auto preterminal span': (32, 34), 'span': (32, 34), 'parent': 'VF', 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'add'}
(TOP mittelklasse wollen sie denn eher eine zentrale lage am bahnhof oder am flughafen direkt kann ich ihnen eines anbieten das ist so ungefahr mittlere preisklasse mit restaurant konferenzraum garage und sauna das hotel forahotel heist das die kategorie fur ein einzelzimmer liegt bei hundert dreisig bis zweihundert funfunddreisig mark)

Sentence 634:
0 Initial errors
0 on fringe, 0 iterations

Sentence 635:
13 Initial errors
0 on fringe, 7 iterations
4 Error:UNSET move
4 Error:Modifier Attachment
1 Error:Modifier Attachment
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(SIMPX
				[01;31m(VF[00m
					[01;31m(SIMPX[00m
						(KOORD oder)
						[01;36m(SIMPX[00m
							[01;36m(VF[00m
								(C was)
								(MF
									[01;31m(ADJX[00m
										[01;31m(ADVX[00m
											(ADVX noch)
											[01;36m(ADVX[00m
												(ADV [01;33m(ADJX[00m etwas)[01;36m)[00m[01;31m)[00m
										(ADJD preiswerter)[01;31m)[00m) [01;33mADJX)[00m
								(VC ware)[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
				(LK ware)
				[01;31m(MF[00m
					(NX
						(NX hotel)
						(NX loccumerhof))[01;31m)[00m)
			(ADJX
				(ADJX
					(ADVX auch)
					[01;36m(ADJX[00m
						(ADVX zentral)
						(ADJD gelegen)[01;36m)[00m)
				(PX mit konferenzraum)))
		(SU
			(NX
				(NX die preislage)
				(NX [01;33m(ADJX[00m
					[01;31m(NX[00m
						(ADJX hundert funfundvierzig)
						(NN mark)[01;31m)[00m
					(APPR bis)
					[01;31m(NX[00m
						(ADJX hundert achtzig) [01;33mADJX)[00m
						(NN mark)[01;31m)[00m)))))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['KOORD', 'VF', 'LK', 'MF'], 'mover info': [('KOORD', (0, 1))], 'old_family': ['KOORD', 'C', 'MF', 'VC'], 'start left siblings': [], 'auto preterminals': ('KON', 'PWS', 'ADV', 'ADV', 'ADJD', 'VAFIN', 'VAFIN', 'NN', 'NE'), 'start right siblings': ['C', 'MF', 'VC'], 'end left siblings': [], 'auto preterminal span': (0, 9), 'movers': ['KOORD'], 'old_parent': 'SIMPX', 'POS confusion': ('KON', 'KON'), 'end right siblings': ['VF', 'LK', 'MF'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			(SIMPX
				(KOORD oder)
				(VF
					(SIMPX
						(C was)
						(MF
							[01;31m(ADJX[00m
								[01;31m(ADVX[00m
									(ADVX noch)
									[01;36m(ADVX[00m
										(ADV [01;33m(ADJX[00m etwas)[01;36m)[00m[01;31m)[00m
								(ADJD preiswerter)[01;31m)[00m) [01;33mADJX)[00m
						(VC ware)))
				(LK ware)
				[01;31m(MF[00m
					(NX
						(NX hotel)
						(NX loccumerhof))[01;31m)[00m)
			(ADJX
				(ADJX
					(ADVX auch)
					[01;36m(ADJX[00m
						(ADVX zentral)
						(ADJD gelegen)[01;36m)[00m)
				(PX mit konferenzraum)))
		(SU
			(NX
				(NX die preislage)
				(NX [01;33m(ADJX[00m
					[01;31m(NX[00m
						(ADJX hundert funfundvierzig)
						(NN mark)[01;31m)[00m
					(APPR bis)
					[01;31m(NX[00m
						(ADJX hundert achtzig) [01;33mADJX)[00m
						(NN mark)[01;31m)[00m)))))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['ADVX', 'ADJX'], 'mover info': [('ADVX', (2, 3))], 'old_family': ['ADVX', 'ADV'], 'start left siblings': [], 'auto preterminals': ('ADV', 'ADV', 'ADJD'), 'start right siblings': ['ADV'], 'end left siblings': [], 'auto preterminal span': (2, 5), 'movers': ['ADVX'], 'old_parent': 'ADVX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['ADJX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU
			(SIMPX
				(KOORD oder)
				(VF was noch etwas preiswerter ware)
				(LK ware)
				[01;31m(MF[00m
					(NX
						(NX hotel)
						(NX loccumerhof))[01;31m)[00m)
			(ADJX
				(ADJX
					(ADVX auch)
					[01;36m(ADJX[00m
						(ADVX zentral)
						(ADJD gelegen)[01;36m)[00m)
				(PX mit konferenzraum)))
		(SU
			(NX
				(NX die preislage)
				(NX [01;33m(ADJX[00m
					[01;31m(NX[00m
						(ADJX hundert funfundvierzig)
						(NN mark)[01;31m)[00m
					(APPR bis)
					[01;31m(NX[00m
						(ADJX hundert achtzig) [01;33mADJX)[00m
						(NN mark)[01;31m)[00m)))))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'ADJD'], 'family': ['ADVX', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADJD'), 'right siblings': [], 'left siblings': [(ADVX (ADV auch))], 'auto preterminal span': (10, 12), 'span': (10, 12), 'parent': 'ADJX', 'label': 'ADJX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU
			(SIMPX
				(KOORD oder)
				(VF was noch etwas preiswerter ware)
				(LK ware)
				[01;31m(MF[00m
					(NX
						(NX hotel)
						(NX loccumerhof))[01;31m)[00m)
			(ADJX auch zentral gelegen mit konferenzraum))
		(SU
			(NX
				(NX die preislage)
				(NX [01;33m(ADJX[00m
					[01;31m(NX[00m
						(ADJX hundert funfundvierzig)
						(NN mark)[01;31m)[00m
					(APPR bis)
					[01;31m(NX[00m
						(ADJX hundert achtzig) [01;33mADJX)[00m
						(NN mark)[01;31m)[00m)))))
Step:Unary
{'subtrees': ['NX'], 'family': ['KOORD', 'VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'PWS', 'ADV', 'ADV', 'ADJD', 'VAFIN', 'VAFIN', 'NN', 'NE'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (0, 9), 'span': (7, 9), 'left siblings': ['KOORD', 'VF', 'LK'], 'label': 'MF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU oder was noch etwas preiswerter ware ware hotel loccumerhof auch zentral gelegen mit konferenzraum)
		(SU
			(NX
				(NX die preislage)
				(NX [01;33m(ADJX[00m
					[01;31m(NX[00m
						(ADJX hundert funfundvierzig)
						(NN mark)[01;31m)[00m
					(APPR bis)
					[01;31m(NX[00m
						(ADJX hundert achtzig) [01;33mADJX)[00m
						(NN mark)[01;31m)[00m)))))
Step:UNSET remove
{'subtrees': ['ADJX', 'NN'], 'family': ['NX', 'APPR', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'CARD', 'NN', 'APPR', 'CARD', 'CARD', 'NN'), 'right siblings': ['APPR', 'NX'], 'parent': 'NX', 'auto preterminal span': (16, 23), 'span': (16, 19), 'left siblings': [], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU oder was noch etwas preiswerter ware ware hotel loccumerhof auch zentral gelegen mit konferenzraum)
		(SU
			(NX
				(NX die preislage)
				(NX [01;33m(ADJX[00m
					(ADJX hundert funfundvierzig)
					(NN mark)
					(APPR bis)
					[01;31m(NX[00m
						(ADJX hundert achtzig) [01;33mADJX)[00m
						(NN mark)[01;31m)[00m)))))
Step:UNSET remove
{'subtrees': ['ADJX', 'NN'], 'family': ['ADJX', 'NN', 'APPR', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'CARD', 'NN', 'APPR', 'CARD', 'CARD', 'NN'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (16, 23), 'span': (20, 23), 'left siblings': ['ADJX', 'NN', 'APPR'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU oder was noch etwas preiswerter ware ware hotel loccumerhof auch zentral gelegen mit konferenzraum)
		(SU
			(NX
				(NX die preislage)
				(NX
					[01;36m(ADJX[00m
						(ADJX hundert funfundvierzig)
						(NN mark)
						(APPR bis)
						(ADJX hundert achtzig)[01;36m)[00m
					(NN mark))))))
Step:Modifier Attachment
{'subtrees': ['ADJX', 'NN', 'APPR', 'ADJX'], 'family': ['ADJX', 'NN'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'CARD', 'NN', 'APPR', 'CARD', 'CARD'), 'right siblings': [(NN mark)], 'left siblings': [], 'auto preterminal span': (16, 22), 'span': (16, 22), 'parent': 'NX', 'label': 'ADJX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP oder was noch etwas preiswerter ware ware hotel loccumerhof auch zentral gelegen mit konferenzraum die preislage hundert funfundvierzig mark bis hundert achtzig mark)

Sentence 636:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU fur welches hatten sie sich jetzt entschieden)
		(SU
			(PX
				(APPR fur)
				(NX
					[01;31m(NX[00m
						(PDS das)[01;31m)[00m
					(PX mit konferenzraum))))
		(SU hotel loccumerhof)))
Step:Single Word Phrase
{'subtrees': ['PDS'], 'family': ['NX', 'PX'], 'over_word': True, 'over words': True, 'auto preterminals': ('PDS', 'APPR', 'NN'), 'right siblings': ['PX'], 'parent': 'NX', 'auto preterminal span': (8, 11), 'span': (8, 9), 'left siblings': [], 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP fur welches hatten sie sich jetzt entschieden fur das mit konferenzraum hotel loccumerhof)

Sentence 637:
2 Initial errors
0 on fringe, 2 iterations
1 Error:UNSET remove
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU guten tag)
		(SU
			(SIMPX
				(VF wir)
				(LK wollten)
				(MF
					(PX in den nachsten drei monaten)
					(ADVX doch)
					(ADVX noch)
					(ADVX mal)
					(APPR nach)
					(PX
						[01;31m(PX[00m
							(APPR nach)
							[01;33m(NX[00m (NX hannover)[01;31m)[00m
						(PX zu unserer filiale))) [01;33mNX)[00m
				(VC fahren)))
		(SU haben sie jetzt einen freien termin gefunden)))
Step:UNSET remove
{'subtrees': ['APPR', 'NX'], 'family': ['PX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'NE', 'APPR', 'PPOSAT', 'NN'), 'right siblings': ['PX'], 'parent': 'PX', 'auto preterminal span': (13, 18), 'span': (13, 15), 'left siblings': [], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU guten tag)
		(SU
			(SIMPX
				(VF wir)
				(LK wollten)
				(MF
					(PX in den nachsten drei monaten)
					(ADVX doch)
					(ADVX noch)
					(ADVX mal)
					(APPR nach)
					(PX
						(APPR nach)
						[01;36m(NX[00m
							(NX hannover)
							(PX zu unserer filiale)[01;36m)[00m))
				(VC fahren)))
		(SU haben sie jetzt einen freien termin gefunden)))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['APPR', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NE', 'APPR', 'PPOSAT', 'NN'), 'right siblings': [], 'left siblings': [(APPR nach)], 'auto preterminal span': (14, 18), 'span': (14, 18), 'parent': 'PX', 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP guten tag wir wollten in den nachsten drei monaten doch noch mal nach nach hannover zu unserer filiale fahren haben sie jetzt einen freien termin gefunden)

Sentence 638:
7 Initial errors
0 on fringe, 4 iterations
4 Error:NP Attachment
1 Error:Unary
1 Error:PP Attachment
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM okay)
			[01;31m(PX[00m
				[01;36m(DM[00m
					(ADVX
						(ADV also))[01;36m)[00m
				(PX am zwanzigsten)[01;31m)[00m)
		[01;36m(SIMPX[00m
			(SU
				[01;31m(SIMPX[00m
					(VF was)
					(LK meinen)
					[01;31m(MF[00m [01;33m(MF[00m
						(NX
							(PPER sie))[01;31m)[00m[01;31m)[00m
				[01;31m(NX[00m
					(ADVX eher)
					(NX flug)[01;31m)[00m)[01;36m)[00m)) [01;33mMF)[00m
Step:NP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'NX'], 'mover info': [('NX', (7, 9))], 'old_family': ['SIMPX', 'NX'], 'start left siblings': ['SIMPX'], 'auto preterminals': ('PWS', 'VVFIN', 'PPER', 'ADV', 'NN'), 'start right siblings': [], 'end left siblings': ['NX'], 'auto preterminal span': (4, 9), 'movers': ['NX'], 'old_parent': 'SU', 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU
			(DM okay)
			[01;31m(PX[00m
				[01;36m(DM[00m
					(ADVX
						(ADV also))[01;36m)[00m
				(PX am zwanzigsten)[01;31m)[00m)
		(SU
			(SIMPX
				(VF was)
				(LK meinen)
				(MF
					(NX sie)
					[01;31m(NX[00m
						(ADVX eher)
						(NX flug)[01;31m)[00m)))))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['DM', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV',), 'right siblings': [(PX (APPRART am) (NX (NN zwanzigsten)))], 'left siblings': [], 'auto preterminal span': (1, 2), 'span': (1, 2), 'parent': 'PX', 'label': 'DM', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM okay)
			[01;31m(PX[00m
				(DM also)
				(PX am zwanzigsten)[01;31m)[00m)
		(SU
			(SIMPX
				(VF was)
				(LK meinen)
				(MF
					(NX sie)
					[01;31m(NX[00m
						(ADVX eher)
						(NX flug)[01;31m)[00m)))))
Step:PP Attachment
{'subtrees': ['DM', 'PX'], 'family': ['DM', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'APPRART', 'NN'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (0, 4), 'span': (1, 4), 'left siblings': ['DM'], 'label': 'PX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU okay also am zwanzigsten)
		(SU
			(SIMPX
				(VF was)
				(LK meinen)
				(MF
					(NX sie)
					[01;31m(NX[00m
						(ADVX eher)
						(NX flug)[01;31m)[00m)))))
Step:UNSET remove
{'subtrees': ['ADVX', 'NX'], 'family': ['NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (6, 9), 'span': (7, 9), 'left siblings': ['NX'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP okay also am zwanzigsten was meinen sie eher flug)

Sentence 639:
0 Initial errors
0 on fringe, 0 iterations

Sentence 640:
0 Initial errors
0 on fringe, 0 iterations

Sentence 641:
3 Initial errors
0 on fringe, 2 iterations
2 Error:Single Word Phrase
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU gut)
		(SU
			(DM ja)
			(SIMPX
				[01;36m(KOORD[00m [01;31m(VF[00m
					[01;31m(ADVX[00m
						(ADV aber)[01;31m)[00m[01;31m)[00m[01;36m)[00m
				(LK gehen)
				(MF wir doch dann sonntag abend noch ins theater)))))
Step:Single Word Phrase
{'family': ['KOORD'], 'auto preterminal span': (2, 3), 'span': (2, 3), 'subtrees': ['ADV'], 'parent': 'VF', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'KOORD')}
(TOP
	(TURN
		(SU gut)
		(SU
			(DM ja)
			(SIMPX
				[01;31m(VF[00m
					(KOORD
						(ADV aber))[01;31m)[00m
				(LK gehen)
				(MF wir doch dann sonntag abend noch ins theater)))))
Step:Unary
{'subtrees': ['KOORD'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'ADV', 'ADV', 'NN', 'ADV', 'ADV', 'APPRART', 'NN'), 'right siblings': ['LK', 'MF'], 'parent': 'SIMPX', 'auto preterminal span': (2, 12), 'span': (2, 3), 'left siblings': [], 'label': 'VF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP gut ja aber gehen wir doch dann sonntag abend noch ins theater)

Sentence 642:
7 Initial errors
0 on fringe, 5 iterations
2 Error:Different label
2 Error:Clause Attachment
1 Error:Unary
1 Error:Clause Attachment
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU ja)
		[01;36m(SIMPX[00m
			(SU
				(SIMPX ich war)
				(SIMPX das letzte mal war ich im intercityhotel))[01;36m)[00m
		(SU
			[01;31m(SIMPX[00m
				(SIMPX das ist ziemlich zentral)
				(KON und)
				(DM ja)
				(DM okay)
				(SIMPX es hat einen konferenzraum)[01;31m)[00m
			(SIMPX aber das brauchen wir eigentlich nicht))
		[01;36m(SIMPX[00m
			(SU
				[01;31m(SIMPX[00m
					(VF da)
					(LK war)[01;31m)[00m
				[01;31m(SIMPX[00m
					[01;36m(MF[00m [01;31m(VF[00m
						(NX
							(ART das)
							(NN einzelzimmer))[01;31m)[00m[01;36m)[00m
					(LK hat)
					(MF ungefahr zweihundert mark)
					(VC gekostet)[01;31m)[00m)[01;36m)[00m))
Step:Different label
{'family': ['MF', 'LK', 'MF', 'VC'], 'auto preterminal span': (29, 31), 'span': (29, 31), 'subtrees': ['NX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('ART', 'NN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('VF', 'MF')}
(TOP
	(TURN
		(SU ja)
		[01;36m(SIMPX[00m
			(SU
				(SIMPX ich war)
				(SIMPX das letzte mal war ich im intercityhotel))[01;36m)[00m
		(SU
			[01;31m(SIMPX[00m
				(SIMPX das ist ziemlich zentral)
				(KON und)
				(DM ja)
				(DM okay)
				(SIMPX es hat einen konferenzraum)[01;31m)[00m
			(SIMPX aber das brauchen wir eigentlich nicht))
		[01;36m(SIMPX[00m
			(SU
				[01;31m(SIMPX[00m
					(VF da)
					(LK war)[01;31m)[00m
				[01;31m(SIMPX[00m
					(MF das einzelzimmer)
					(LK hat)
					(MF ungefahr zweihundert mark)
					(VC gekostet)[01;31m)[00m)[01;36m)[00m))
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['SIMPX', 'MF', 'LK', 'MF', 'VC'], 'mover info': [('SIMPX', (27, 29))], 'old_family': ['SIMPX', 'SIMPX'], 'start left siblings': [], 'auto preterminals': ('ADV', 'VAFIN', 'ART', 'NN', 'VAFIN', 'ADV', 'CARD', 'NN', 'VVPP'), 'start right siblings': ['SIMPX'], 'end left siblings': [], 'auto preterminal span': (27, 36), 'movers': ['SIMPX'], 'old_parent': 'SU', 'end right siblings': ['MF', 'LK', 'MF', 'VC'], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU ja)
		[01;36m(SIMPX[00m
			(SU
				(SIMPX ich war)
				(SIMPX das letzte mal war ich im intercityhotel))[01;36m)[00m
		(SU
			[01;31m(SIMPX[00m
				(SIMPX das ist ziemlich zentral)
				(KON und)
				(DM ja)
				(DM okay)
				(SIMPX es hat einen konferenzraum)[01;31m)[00m
			(SIMPX aber das brauchen wir eigentlich nicht))
		(SU
			(SIMPX
				[01;31m(SIMPX[00m
					(VF da)
					(LK war)[01;31m)[00m
				(MF das einzelzimmer)
				(LK hat)
				(MF ungefahr zweihundert mark)
				(VC gekostet)))))
Step:Unary
{'subtrees': ['SU'], 'family': ['SU', 'SIMPX', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'ART', 'ADJA', 'NN', 'VAFIN', 'PPER', 'APPRART', 'NE'), 'right siblings': [(SU (SIMPX (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VAFIN ist))) (MF (ADJX (ADVX (ADV ziemlich)) (ADJD zentral)))) (KON und) (DM (PTKANT ja)) (DM (ITJ okay)) (SIMPX (VF (NX (PPER es))) (LK (VXFIN (VAFIN hat))) (MF (NX (ART einen) (NN konferenzraum))))) (SIMPX (KOORD (KON aber)) (VF (NX (PDS das))) (LK (VXFIN (VVFIN brauchen))) (MF (NX (PPER wir)) (ADVX (ADV eigentlich)) (ADVX (PTKNEG nicht))))), (SU (SIMPX (SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VAFIN war)))) (MF (NX (ART das) (NN einzelzimmer))) (LK (VXFIN (VAFIN hat))) (MF (NX (ADVX (ADV ungefahr)) (ADJX (CARD zweihundert)) (NN mark))) (VC (VXINF (VVPP gekostet)))))], 'left siblings': [(SU (DM (PTKANT ja)))], 'auto preterminal span': (1, 10), 'span': (1, 10), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU ja)
		(SIMPX ich war das letzte mal war ich im intercityhotel)
		(SU
			[01;31m(SIMPX[00m
				(SIMPX das ist ziemlich zentral)
				(KON und)
				(DM ja)
				(DM okay)
				(SIMPX es hat einen konferenzraum)[01;31m)[00m
			(SIMPX aber das brauchen wir eigentlich nicht))
		(SU
			(SIMPX
				[01;31m(SIMPX[00m
					(VF da)
					(LK war)[01;31m)[00m
				(MF das einzelzimmer)
				(LK hat)
				(MF ungefahr zweihundert mark)
				(VC gekostet)))))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'KON', 'DM', 'DM', 'SIMPX'], 'family': ['SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VAFIN', 'ADV', 'ADJD', 'KON', 'PTKANT', 'ITJ', 'PPER', 'VAFIN', 'ART', 'NN', 'KON', 'PDS', 'VVFIN', 'PPER', 'ADV', 'PTKNEG'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (10, 27), 'span': (10, 21), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU ja)
		(SIMPX ich war das letzte mal war ich im intercityhotel)
		(SU das ist ziemlich zentral und ja okay es hat einen konferenzraum aber das brauchen wir eigentlich nicht)
		(SU
			(SIMPX
				[01;31m(SIMPX[00m
					(VF da)
					(LK war)[01;31m)[00m
				(MF das einzelzimmer)
				(LK hat)
				(MF ungefahr zweihundert mark)
				(VC gekostet)))))
Step:UNSET remove
{'subtrees': ['VF', 'LK'], 'family': ['SIMPX', 'MF', 'LK', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'ART', 'NN', 'VAFIN', 'ADV', 'CARD', 'NN', 'VVPP'), 'right siblings': ['MF', 'LK', 'MF', 'VC'], 'parent': 'SIMPX', 'auto preterminal span': (27, 36), 'span': (27, 29), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ja ich war das letzte mal war ich im intercityhotel das ist ziemlich zentral und ja okay es hat einen konferenzraum aber das brauchen wir eigentlich nicht da war das einzelzimmer hat ungefahr zweihundert mark gekostet)

Sentence 643:
4 Initial errors
0 on fringe, 3 iterations
2 Error:Modifier Attachment
1 Error:PP Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU ja das ist bestimmt nicht schlecht)
		(SU ich kenne ein theater in hannover das heist ballhof oder so)
		(SU
			[01;31m(P[00m
				(SIMPX vielleicht haben die auch eine gute inszenierung)
				(KOUS weil)
				(SIMPX
					(VF das letzte mal)
					(LK haben)
					(MF
						(NX die)
						[01;31m(ADJX[00m
							(ADVX wirklich)
							[01;36m(ADJX[00m
								(ADJD gut)[01;36m)[00m[01;31m)[00m)
					(VC gespielt))[01;31m)[00m)
		(SU
			(SIMPX
				(VF ansonsten)
				(LK weis)
				(MF ich gar nicht)
				(NF
					(SIMPX
						(C was)
						(MF
							[01;36m(PX[00m
								(PX im moment)
								(PX in hannover)[01;36m)[00m
							(ADVX so)
							(ADVX los))
						(VC ist)))))))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'ADVX', 'ADJX'], 'mover info': [('ADVX', (30, 31))], 'old_family': ['ADVX', 'ADJD'], 'start left siblings': [], 'auto preterminals': ('PDS', 'ADV', 'ADJD'), 'start right siblings': ['ADJD'], 'end left siblings': ['NX'], 'auto preterminal span': (29, 32), 'movers': ['ADVX'], 'old_parent': 'ADJX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['ADJX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU ja das ist bestimmt nicht schlecht)
		(SU ich kenne ein theater in hannover das heist ballhof oder so)
		(SU
			[01;31m(P[00m
				(SIMPX vielleicht haben die auch eine gute inszenierung)
				(KOUS weil)
				(SIMPX das letzte mal haben die wirklich gut gespielt)[01;31m)[00m)
		(SU
			(SIMPX
				(VF ansonsten)
				(LK weis)
				(MF ich gar nicht)
				(NF
					(SIMPX
						(C was)
						(MF
							[01;36m(PX[00m
								(PX im moment)
								(PX in hannover)[01;36m)[00m
							(ADVX so)
							(ADVX los))
						(VC ist)))))))
Step:PP Attachment
{'subtrees': ['PX', 'PX'], 'family': ['PX', 'ADVX', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'NN', 'APPR', 'NE'), 'right siblings': [(ADVX (ADV so)), (ADVX (ADV los))], 'left siblings': [], 'auto preterminal span': (39, 43), 'span': (39, 43), 'parent': 'MF', 'label': 'PX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU ja das ist bestimmt nicht schlecht)
		(SU ich kenne ein theater in hannover das heist ballhof oder so)
		(SU
			[01;31m(P[00m
				(SIMPX vielleicht haben die auch eine gute inszenierung)
				(KOUS weil)
				(SIMPX das letzte mal haben die wirklich gut gespielt)[01;31m)[00m)
		(SU ansonsten weis ich gar nicht was im moment in hannover so los ist)))
Step:Unary
{'subtrees': ['SIMPX', 'KOUS', 'SIMPX'], 'family': ['P'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PDS', 'ADV', 'ART', 'ADJA', 'NN', 'KOUS', 'ART', 'ADJA', 'NN', 'VAFIN', 'PDS', 'ADV', 'ADJD', 'VVPP'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (17, 33), 'span': (17, 33), 'left siblings': [], 'label': 'P', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja das ist bestimmt nicht schlecht ich kenne ein theater in hannover das heist ballhof oder so vielleicht haben die auch eine gute inszenierung weil das letzte mal haben die wirklich gut gespielt ansonsten weis ich gar nicht was im moment in hannover so los ist)

Sentence 644:
0 Initial errors
0 on fringe, 0 iterations

Sentence 645:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU ach ich finde mit dem zug konnen wir auch fahren)
		(SU so weit ist das ja nicht bis hannover)
		(SU
			[01;31m(SIMPX[00m
				(VF da)
				(LK fahren)
				(MF wir mit dem zug ja nur zwei drei stunden)[01;31m)[00m)))
Step:Unary
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'APPR', 'ART', 'NN', 'ADV', 'ADV', 'CARD', 'CARD', 'NN'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (18, 29), 'span': (18, 29), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ach ich finde mit dem zug konnen wir auch fahren so weit ist das ja nicht bis hannover da fahren wir mit dem zug ja nur zwei drei stunden)

Sentence 646:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU moment ich gucke mal nach)
		(SU ja)
		(SU
			(SIMPX
				(VF ich)
				(LK habe)
				(MF
					[01;31m(NX[00m
						(PIS einen)[01;31m)[00m
					(ADVX hier))))
		(SU soll ich uns einen zug raussuchen)))
Step:Single Word Phrase
{'subtrees': ['PIS'], 'family': ['NX', 'ADVX'], 'over_word': True, 'over words': True, 'auto preterminals': ('PIS', 'ADV'), 'right siblings': ['ADVX'], 'parent': 'MF', 'auto preterminal span': (8, 10), 'span': (8, 9), 'left siblings': [], 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP moment ich gucke mal nach ja ich habe einen hier soll ich uns einen zug raussuchen)

Sentence 647:
3 Initial errors
0 on fringe, 2 iterations
2 Error:Single Word Phrase
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(SIMPX
				(VF ich)
				(LK mus)
				(MF mal)
				(VC gucken)
				(NF
					(SIMPX
						(C was)
						(MF
							[01;31m(NX[00m
								(NX samstag)
								(NX sonntag)[01;31m)[00m)
						(VC fahrt)))))
		(SU
			(SIMPX
				(VF wann)
				(LK wollen)
				(MF
					(NX sie)
					(ADVX denn)
					[01;36m(ADJX[00m [01;31m(ADVX[00m
						(ADV ungefahr)[01;31m)[00m[01;36m)[00m)
				(VC fahren)))
		(SU mittags reicht eigentlich)))
Step:Single Word Phrase
{'family': ['NX', 'ADVX', 'ADJX'], 'auto preterminal span': (12, 13), 'span': (12, 13), 'subtrees': ['ADV'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'ADJX')}
(TOP
	(TURN
		(SU
			(SIMPX
				(VF ich)
				(LK mus)
				(MF mal)
				(VC gucken)
				(NF
					(SIMPX
						(C was)
						(MF
							[01;31m(NX[00m
								(NX samstag)
								(NX sonntag)[01;31m)[00m)
						(VC fahrt)))))
		(SU wann wollen sie denn ungefahr fahren)
		(SU mittags reicht eigentlich)))
Step:Unary
{'subtrees': ['NX', 'NX'], 'family': ['NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (5, 7), 'span': (5, 7), 'left siblings': [], 'label': 'NX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ich mus mal gucken was samstag sonntag fahrt wann wollen sie denn ungefahr fahren mittags reicht eigentlich)

Sentence 648:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU wenn wir mittags fahren)
		(SU
			(SIMPX
				(VF da)
				(LK konnten)
				(MF wir den)
				(VC nehmen)
				[01;36m(PX[00m
					(NF
						(PX um zwolf uhr funfundvierzig)
						(PX zum beispiel))[01;36m)[00m))
		(SU dann sind wir um sechzehn uhr vier in hannover)))
Step:Unary
{'subtrees': ['NF'], 'family': ['VF', 'LK', 'MF', 'VC', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'CARD', 'NN', 'CARD', 'APPRART', 'NN'), 'right siblings': [], 'left siblings': [(VF (ADVX (ADV da))), (LK (VXFIN (VMFIN konnten))), (MF (NX (PPER wir)) (NX (PDS den))), (VC (VXINF (VVINF nehmen)))], 'auto preterminal span': (9, 15), 'span': (9, 15), 'parent': 'SIMPX', 'label': 'PX', 'classified_type': 'Unary', 'type': 'add'}
(TOP wenn wir mittags fahren da konnten wir den nehmen um zwolf uhr funfundvierzig zum beispiel dann sind wir um sechzehn uhr vier in hannover)

Sentence 649:
0 Initial errors
0 on fringe, 0 iterations

Sentence 650:
0 Initial errors
0 on fringe, 0 iterations

Sentence 651:
7 Initial errors
0 on fringe, 7 iterations
1 Error:Unary
1 Error:Co-ordination
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:UNSET add
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM ja)
			[01;31m(SIMPX[00m
				(VF ich)
				(LK kann)
				(MF ja mal im reiseburo)
				(VC anrufen)[01;31m)[00m
			(KON oder)
			(APPRART im)
			[01;31m(SIMPX[00m
				(VF wir)
				(LK mussen)
				(MF uns eh noch)
				(VC uberlegen)
				(NF
					(SIMPX
						(SIMPX wo wir schlafen wollen)
						[01;36m(NF[00m
							(SIMPX
								(C ob)
								(MF wir ein hotel)
								(VC nehmen)
								(NF oder pension))[01;36m)[00m))[01;31m)[00m)
		(SU
			(SIMPX
				(VF da)
				(LK kann)
				(MF ich ja mal)
				[01;31m(FKOORD[00m [01;33m(VXINF (VC[00m
					(VC anrufen)
					(KON und)
					[01;31m(VCN[00m
						(VC fragen) [01;33mVC) VXINF)[00m
						(NF ob die ein programm haben fur theater)[01;31m)[00m[01;31m)[00m))))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SIMPX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ART', 'NN', 'VVFIN', 'KON', 'NN'), 'right siblings': [], 'left siblings': [(SIMPX (C (PX (PWAV wo))) (MF (NX (PPER wir))) (VC (VXINF (VVINF schlafen)) (VXFIN (VMFIN wollen))))], 'auto preterminal span': (20, 27), 'span': (20, 27), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM ja)
			[01;31m(SIMPX[00m
				(VF ich)
				(LK kann)
				(MF ja mal im reiseburo)
				(VC anrufen)[01;31m)[00m
			(KON oder)
			(APPRART im)
			[01;31m(SIMPX[00m
				(VF wir)
				(LK mussen)
				(MF uns eh noch)
				(VC uberlegen)
				(NF wo wir schlafen wollen ob wir ein hotel nehmen oder pension)[01;31m)[00m)
		(SU
			(SIMPX
				(VF da)
				(LK kann)
				(MF ich ja mal)
				[01;31m(FKOORD[00m [01;33m(VXINF (VC[00m
					(VC anrufen)
					(KON und)
					[01;31m(VCN[00m
						(VC fragen) [01;33mVC) VXINF)[00m
						(NF ob die ein programm haben fur theater)[01;31m)[00m[01;31m)[00m))))
Step:Co-ordination
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['DM', 'SIMPX', 'KON', 'APPRART', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VMFIN', 'ADV', 'ADV', 'APPRART', 'NN', 'VVINF', 'KON', 'APPRART', 'PPER', 'VMFIN', 'PRF', 'ADV', 'ADV', 'VVINF', 'PWAV', 'PPER', 'VVINF', 'VMFIN', 'KOUS', 'PPER', 'ART', 'NN', 'VVFIN', 'KON', 'NN'), 'right siblings': ['KON', 'APPRART', 'SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 27), 'span': (1, 8), 'left siblings': ['DM'], 'label': 'SIMPX', 'classified_type': 'Co-ordination', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM ja)
			(VF ich)
			(LK kann)
			(MF ja mal im reiseburo)
			(VC anrufen)
			(KON oder)
			(APPRART im)
			[01;31m(SIMPX[00m
				(VF wir)
				(LK mussen)
				(MF uns eh noch)
				(VC uberlegen)
				(NF wo wir schlafen wollen ob wir ein hotel nehmen oder pension)[01;31m)[00m)
		(SU
			(SIMPX
				(VF da)
				(LK kann)
				(MF ich ja mal)
				[01;31m(FKOORD[00m [01;33m(VXINF (VC[00m
					(VC anrufen)
					(KON und)
					[01;31m(VCN[00m
						(VC fragen) [01;33mVC) VXINF)[00m
						(NF ob die ein programm haben fur theater)[01;31m)[00m[01;31m)[00m))))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'VC', 'NF'], 'family': ['DM', 'VF', 'LK', 'MF', 'VC', 'KON', 'APPRART', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VMFIN', 'ADV', 'ADV', 'APPRART', 'NN', 'VVINF', 'KON', 'APPRART', 'PPER', 'VMFIN', 'PRF', 'ADV', 'ADV', 'VVINF', 'PWAV', 'PPER', 'VVINF', 'VMFIN', 'KOUS', 'PPER', 'ART', 'NN', 'VVFIN', 'KON', 'NN'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (0, 27), 'span': (10, 27), 'left siblings': ['DM', 'VF', 'LK', 'MF', 'VC', 'KON', 'APPRART'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU ja ich kann ja mal im reiseburo anrufen oder im wir mussen uns eh noch uberlegen wo wir schlafen wollen ob wir ein hotel nehmen oder pension)
		(SU
			(SIMPX
				(VF da)
				(LK kann)
				(MF ich ja mal)
				[01;31m(FKOORD[00m [01;33m(VXINF (VC[00m
					(VC anrufen)
					(KON und)
					[01;31m(VCN[00m
						(VC fragen) [01;33mVC) VXINF)[00m
						(NF ob die ein programm haben fur theater)[01;31m)[00m[01;31m)[00m))))
Step:UNSET remove
{'subtrees': ['VC', 'KON', 'VCN'], 'family': ['VF', 'LK', 'MF', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'VVINF', 'KON', 'VVINF', 'KOUS', 'PDS', 'ART', 'NN', 'VAFIN', 'APPR', 'NN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (27, 42), 'span': (32, 42), 'left siblings': ['VF', 'LK', 'MF'], 'label': 'FKOORD', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU ja ich kann ja mal im reiseburo anrufen oder im wir mussen uns eh noch uberlegen wo wir schlafen wollen ob wir ein hotel nehmen oder pension)
		(SU
			(SIMPX
				(VF da)
				(LK kann)
				(MF ich ja mal)
				[01;33m(VXINF (VC[00m (VC anrufen)
				(KON und)
				[01;31m(VCN[00m
					(VC fragen) [01;33mVC) VXINF)[00m
					(NF ob die ein programm haben fur theater)[01;31m)[00m))))
Step:UNSET remove
{'subtrees': ['VC', 'NF'], 'family': ['VF', 'LK', 'MF', 'VC', 'KON', 'VCN'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'VVINF', 'KON', 'VVINF', 'KOUS', 'PDS', 'ART', 'NN', 'VAFIN', 'APPR', 'NN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (27, 42), 'span': (34, 42), 'left siblings': ['VF', 'LK', 'MF', 'VC', 'KON'], 'label': 'VCN', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU ja ich kann ja mal im reiseburo anrufen oder im wir mussen uns eh noch uberlegen wo wir schlafen wollen ob wir ein hotel nehmen oder pension)
		(SU
			(SIMPX
				(VF da)
				(LK kann)
				(MF ich ja mal)
				[01;36m(VC[00m
					[01;36m(VXINF[00m
						(VC anrufen)
						(KON und)
						(VC fragen)[01;36m)[00m[01;36m)[00m
				(NF ob die ein programm haben fur theater)))))
Step:UNSET add
{'subtrees': ['VC', 'KON', 'VC'], 'family': ['VF', 'LK', 'MF', 'VXINF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVINF', 'KON', 'VVINF'), 'right siblings': [(NF (SIMPX (C (KOUS ob)) (MF (NX (PDS die)) (NX (ART ein) (NN programm))) (VC (VXFIN (VAFIN haben))) (NF (PX (APPR fur) (NX (NN theater))))))], 'left siblings': [(VF (ADVX (ADV da))), (LK (VXFIN (VMFIN kann))), (MF (NX (PPER ich)) (ADVX (ADV ja)) (ADVX (ADV mal)))], 'auto preterminal span': (32, 35), 'span': (32, 35), 'parent': 'SIMPX', 'label': 'VXINF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU ja ich kann ja mal im reiseburo anrufen oder im wir mussen uns eh noch uberlegen wo wir schlafen wollen ob wir ein hotel nehmen oder pension)
		(SU
			(SIMPX
				(VF da)
				(LK kann)
				(MF ich ja mal)
				[01;36m(VC[00m
					(VXINF
						(VC anrufen)
						(KON und)
						(VC fragen))[01;36m)[00m
				(NF ob die ein programm haben fur theater)))))
Step:Unary
{'subtrees': ['VXINF'], 'family': ['VF', 'LK', 'MF', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVINF', 'KON', 'VVINF'), 'right siblings': [(NF (SIMPX (C (KOUS ob)) (MF (NX (PDS die)) (NX (ART ein) (NN programm))) (VC (VXFIN (VAFIN haben))) (NF (PX (APPR fur) (NX (NN theater))))))], 'left siblings': [(VF (ADVX (ADV da))), (LK (VXFIN (VMFIN kann))), (MF (NX (PPER ich)) (ADVX (ADV ja)) (ADVX (ADV mal)))], 'auto preterminal span': (32, 35), 'span': (32, 35), 'parent': 'SIMPX', 'label': 'VC', 'classified_type': 'Unary', 'type': 'add'}
(TOP ja ich kann ja mal im reiseburo anrufen oder im wir mussen uns eh noch uberlegen wo wir schlafen wollen ob wir ein hotel nehmen oder pension da kann ich ja mal anrufen und fragen ob die ein programm haben fur theater)

Sentence 652:
17 Initial errors
0 on fringe, 15 iterations
2 Error:Clause Attachment
2 Error:Co-ordination
1 Error:Clause Attachment
1 Error:PP Attachment
1 Error:Unary
1 Error:UNSET add
1 Error:UNSET remove
1 Error:Clause Attachment
1 Error:Unary
1 Error:PP Attachment
1 Error:Co-ordination
1 Error:Unary
1 Error:UNSET remove
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			[01;31m(SIMPX[00m
				(LK meinen)
				(MF sie)
				[01;31m(NF[00m [01;33m(SIMPX[00m
					(SIMPX
						(VF die)
						(LK wissen)
						[01;31m(MF[00m
							(NX das)
							(PX bei der bahn)[01;31m)[00m)[01;31m)[00m[01;31m)[00m
			(SIMPX wenn ich da) [01;33mSIMPX)[00m
			[01;36m(SIMPX[00m
				(SIMPX oder ich gehe ins reiseburo)
				(SIMPX und da kann ich ja auch bahntickets kaufen)[01;36m)[00m)
		(SU
			(SIMPX
				(KOORD und)
				(VF dann)
				(LK frage)
				(MF
					(NX ich)
					(ADVX da)
					[01;36m(PX[00m
						(ADVX gleich)
						(PX wegen der hotelbuchung)[01;36m)[00m)))
		[01;36m(SIMPX[00m
			(SU
				[01;31m(SIMPX[00m
					(C das)
					(MF die mir da)[01;31m)[00m
				[01;36m(NF[00m
					(SIMPX
						(C das)
						[01;31m(FKOORD[00m [01;33m(MF[00m
							[01;31m(MVCN[00m
								[01;36m(MVC[00m
									(MF die da)
									(VC anrufen)[01;36m)[00m
								[01;31m(NF[00m
									(ADVX
										(ADV vielleicht))[01;31m)[00m[01;31m)[00m
							(KON und)
							[01;31m(MVCN[00m
								[01;31m(MF[00m
									[01;31m(NX[00m
										(ADJX zwei)
										(NN zimmer)[01;31m)[00m[01;31m)[00m [01;33mMF)[00m
								(VC reservieren)
								(NF fur eine termine)[01;31m)[00m[01;31m)[00m)[01;36m)[00m)[01;36m)[00m))
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['C', 'MF', 'SIMPX'], 'mover info': [('SIMPX', (37, 49))], 'old_family': ['SIMPX', 'SIMPX'], 'start left siblings': ['SIMPX'], 'auto preterminals': ('KOUS', 'PDS', 'PPER', 'ADV', 'KOUS', 'PDS', 'ADV', 'VVFIN', 'ADV', 'KON', 'CARD', 'NN', 'VVFIN', 'APPR', 'ART', 'NN'), 'start right siblings': [], 'end left siblings': ['C', 'MF'], 'auto preterminal span': (33, 49), 'movers': ['SIMPX'], 'old_parent': 'SU', 'end right siblings': [], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU
			[01;31m(SIMPX[00m
				(LK meinen)
				(MF sie)
				[01;31m(NF[00m [01;33m(SIMPX[00m
					(SIMPX
						(VF die)
						(LK wissen)
						[01;31m(MF[00m
							(NX das)
							(PX bei der bahn)[01;31m)[00m)[01;31m)[00m[01;31m)[00m
			(SIMPX wenn ich da) [01;33mSIMPX)[00m
			[01;36m(SIMPX[00m
				(SIMPX oder ich gehe ins reiseburo)
				(SIMPX und da kann ich ja auch bahntickets kaufen)[01;36m)[00m)
		(SU
			(SIMPX
				(KOORD und)
				(VF dann)
				(LK frage)
				(MF
					(NX ich)
					(ADVX da)
					[01;36m(PX[00m
						(ADVX gleich)
						(PX wegen der hotelbuchung)[01;36m)[00m)))
		(SU
			(SIMPX
				(C das)
				(MF die mir da)
				[01;36m(NF[00m
					(SIMPX
						(C das)
						[01;31m(FKOORD[00m [01;33m(MF[00m
							[01;31m(MVCN[00m
								[01;36m(MVC[00m
									(MF die da)
									(VC anrufen)[01;36m)[00m
								[01;31m(NF[00m
									(ADVX
										(ADV vielleicht))[01;31m)[00m[01;31m)[00m
							(KON und)
							[01;31m(MVCN[00m
								[01;31m(MF[00m
									[01;31m(NX[00m
										(ADJX zwei)
										(NN zimmer)[01;31m)[00m[01;31m)[00m [01;33mMF)[00m
								(VC reservieren)
								(NF fur eine termine)[01;31m)[00m[01;31m)[00m)[01;36m)[00m))))
Step:Co-ordination
{'new_parent': 'MF', 'new_family': ['MVCN', 'KON', 'NX'], 'mover info': [('MVCN', (38, 42)), ('KON', (42, 43))], 'old_family': ['MVCN', 'KON', 'MVCN'], 'start left siblings': [], 'auto preterminals': ('PDS', 'ADV', 'VVFIN', 'ADV', 'KON', 'CARD', 'NN', 'VVFIN', 'APPR', 'ART', 'NN'), 'start right siblings': ['MVCN'], 'end left siblings': [], 'auto preterminal span': (38, 49), 'movers': ['MVCN', 'KON'], 'old_parent': 'FKOORD', 'end right siblings': ['NX'], 'classified_type': 'Co-ordination', 'type': 'move'}
(TOP
	(TURN
		(SU
			[01;31m(SIMPX[00m
				(LK meinen)
				(MF sie)
				[01;31m(NF[00m [01;33m(SIMPX[00m
					(SIMPX
						(VF die)
						(LK wissen)
						[01;31m(MF[00m
							(NX das)
							(PX bei der bahn)[01;31m)[00m)[01;31m)[00m[01;31m)[00m
			(SIMPX wenn ich da) [01;33mSIMPX)[00m
			[01;36m(SIMPX[00m
				(SIMPX oder ich gehe ins reiseburo)
				(SIMPX und da kann ich ja auch bahntickets kaufen)[01;36m)[00m)
		(SU
			(SIMPX
				(KOORD und)
				(VF dann)
				(LK frage)
				(MF
					(NX ich)
					(ADVX da)
					[01;36m(PX[00m
						(ADVX gleich)
						(PX wegen der hotelbuchung)[01;36m)[00m)))
		(SU
			(SIMPX
				(C das)
				(MF die mir da)
				[01;36m(NF[00m
					(SIMPX
						(C das)
						[01;31m(FKOORD[00m
							[01;31m(MVCN[00m
								(MF
									[01;31m(MVCN[00m
										[01;36m(MVC[00m
											(MF die da)
											(VC anrufen)[01;36m)[00m
										[01;31m(NF[00m
											(ADVX
												(ADV vielleicht))[01;31m)[00m[01;31m)[00m
									(KON und)
									[01;31m(NX[00m
										(ADJX zwei)
										(NN zimmer)[01;31m)[00m)
								(VC reservieren)
								(NF fur eine termine)[01;31m)[00m[01;31m)[00m)[01;36m)[00m))))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'PPER', 'VVFIN', 'APPRART', 'NN', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'NN', 'VVINF'), 'right siblings': [], 'left siblings': [(SIMPX (LK (VXFIN (VVFIN meinen))) (MF (NX (PPER sie))) (NF (SIMPX (VF (NX (PDS die))) (LK (VXFIN (VVFIN wissen))) (MF (NX (PDS das)) (PX (APPR bei) (NX (ART der) (NN bahn))))))), (SIMPX (C (KOUS wenn)) (MF (NX (PPER ich)) (ADVX (ADV da))))], 'auto preterminal span': (11, 24), 'span': (11, 24), 'parent': 'SU', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU
			[01;31m(SIMPX[00m
				(LK meinen)
				(MF sie)
				[01;31m(NF[00m [01;33m(SIMPX[00m
					(SIMPX
						(VF die)
						(LK wissen)
						[01;31m(MF[00m
							(NX das)
							(PX bei der bahn)[01;31m)[00m)[01;31m)[00m[01;31m)[00m
			(SIMPX wenn ich da) [01;33mSIMPX)[00m
			(SIMPX oder ich gehe ins reiseburo und da kann ich ja auch bahntickets kaufen))
		(SU
			(SIMPX
				(KOORD und)
				(VF dann)
				(LK frage)
				(MF
					(NX ich)
					(ADVX da)
					[01;36m(PX[00m
						(ADVX gleich)
						(PX wegen der hotelbuchung)[01;36m)[00m)))
		(SU
			(SIMPX
				(C das)
				(MF die mir da)
				[01;36m(NF[00m
					(SIMPX
						(C das)
						[01;31m(FKOORD[00m
							[01;31m(MVCN[00m
								(MF
									[01;31m(MVCN[00m
										[01;36m(MVC[00m
											(MF die da)
											(VC anrufen)[01;36m)[00m
										[01;31m(NF[00m
											(ADVX
												(ADV vielleicht))[01;31m)[00m[01;31m)[00m
									(KON und)
									[01;31m(NX[00m
										(ADJX zwei)
										(NN zimmer)[01;31m)[00m)
								(VC reservieren)
								(NF fur eine termine)[01;31m)[00m[01;31m)[00m)[01;36m)[00m))))
Step:PP Attachment
{'subtrees': ['ADVX', 'PX'], 'family': ['NX', 'ADVX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'APPR', 'ART', 'NN'), 'right siblings': [], 'left siblings': [(NX (PPER ich)), (ADVX (ADV da))], 'auto preterminal span': (29, 33), 'span': (29, 33), 'parent': 'MF', 'label': 'PX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU
			[01;31m(SIMPX[00m
				(LK meinen)
				(MF sie)
				[01;31m(NF[00m [01;33m(SIMPX[00m
					(SIMPX
						(VF die)
						(LK wissen)
						[01;31m(MF[00m
							(NX das)
							(PX bei der bahn)[01;31m)[00m)[01;31m)[00m[01;31m)[00m
			(SIMPX wenn ich da) [01;33mSIMPX)[00m
			(SIMPX oder ich gehe ins reiseburo und da kann ich ja auch bahntickets kaufen))
		(SU und dann frage ich da gleich wegen der hotelbuchung)
		(SU
			(SIMPX
				(C das)
				(MF die mir da)
				[01;36m(NF[00m
					(SIMPX
						(C das)
						[01;31m(FKOORD[00m
							[01;31m(MVCN[00m
								(MF
									[01;31m(MVCN[00m
										[01;36m(MVC[00m
											(MF die da)
											(VC anrufen)[01;36m)[00m
										[01;31m(NF[00m
											(ADVX
												(ADV vielleicht))[01;31m)[00m[01;31m)[00m
									(KON und)
									[01;31m(NX[00m
										(ADJX zwei)
										(NN zimmer)[01;31m)[00m)
								(VC reservieren)
								(NF fur eine termine)[01;31m)[00m[01;31m)[00m)[01;36m)[00m))))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['C', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PDS', 'ADV', 'VVFIN', 'ADV', 'KON', 'CARD', 'NN', 'VVFIN', 'APPR', 'ART', 'NN'), 'right siblings': [], 'left siblings': [(C (KOUS das)), (MF (NX (PDS die)) (NX (PPER mir)) (ADVX (ADV da)))], 'auto preterminal span': (37, 49), 'span': (37, 49), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU
			[01;31m(SIMPX[00m
				(LK meinen)
				(MF sie)
				[01;31m(NF[00m [01;33m(SIMPX[00m
					(SIMPX
						(VF die)
						(LK wissen)
						[01;31m(MF[00m
							(NX das)
							(PX bei der bahn)[01;31m)[00m)[01;31m)[00m[01;31m)[00m
			(SIMPX wenn ich da) [01;33mSIMPX)[00m
			(SIMPX oder ich gehe ins reiseburo und da kann ich ja auch bahntickets kaufen))
		(SU und dann frage ich da gleich wegen der hotelbuchung)
		(SU
			(SIMPX
				(C das)
				(MF die mir da)
				(NF
					(SIMPX
						(C das)
						[01;31m(FKOORD[00m
							[01;31m(MVCN[00m
								(MF
									[01;31m(MVCN[00m
										[01;36m(MVC[00m
											(MF die da)
											(VC anrufen)[01;36m)[00m
										[01;31m(NF[00m
											(ADVX
												(ADV vielleicht))[01;31m)[00m[01;31m)[00m
									(KON und)
									[01;31m(NX[00m
										(ADJX zwei)
										(NN zimmer)[01;31m)[00m)
								(VC reservieren)
								(NF fur eine termine)[01;31m)[00m[01;31m)[00m))))))
Step:UNSET add
{'subtrees': ['MF', 'VC'], 'family': ['MVC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'ADV', 'VVFIN'), 'right siblings': [(NF (ADVX (ADV vielleicht)))], 'left siblings': [], 'auto preterminal span': (38, 41), 'span': (38, 41), 'parent': 'MVCN', 'label': 'MVC', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU
			[01;31m(SIMPX[00m
				(LK meinen)
				(MF sie)
				[01;31m(NF[00m [01;33m(SIMPX[00m
					(SIMPX
						(VF die)
						(LK wissen)
						[01;31m(MF[00m
							(NX das)
							(PX bei der bahn)[01;31m)[00m)[01;31m)[00m[01;31m)[00m
			(SIMPX wenn ich da) [01;33mSIMPX)[00m
			(SIMPX oder ich gehe ins reiseburo und da kann ich ja auch bahntickets kaufen))
		(SU und dann frage ich da gleich wegen der hotelbuchung)
		(SU
			(SIMPX
				(C das)
				(MF die mir da)
				(NF
					(SIMPX
						(C das)
						[01;31m(FKOORD[00m
							[01;31m(MVCN[00m
								(MF
									[01;31m(MVCN[00m
										(MVC die da anrufen)
										[01;31m(NF[00m
											(ADVX
												(ADV vielleicht))[01;31m)[00m[01;31m)[00m
									(KON und)
									[01;31m(NX[00m
										(ADJX zwei)
										(NN zimmer)[01;31m)[00m)
								(VC reservieren)
								(NF fur eine termine)[01;31m)[00m[01;31m)[00m))))))
Step:UNSET remove
{'subtrees': ['LK', 'MF', 'NF'], 'family': ['SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'PDS', 'VVFIN', 'PDS', 'APPR', 'ART', 'NN', 'KOUS', 'PPER', 'ADV', 'KON', 'PPER', 'VVFIN', 'APPRART', 'NN', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'NN', 'VVINF'), 'right siblings': ['SIMPX', 'SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 24), 'span': (0, 8), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(LK meinen)
			(MF sie)
			[01;36m(SIMPX[00m
				[01;31m(NF[00m
					(SIMPX
						(VF die)
						(LK wissen)
						[01;31m(MF[00m
							(NX das)
							(PX bei der bahn)[01;31m)[00m)[01;31m)[00m
				(SIMPX wenn ich da)[01;36m)[00m
			(SIMPX oder ich gehe ins reiseburo und da kann ich ja auch bahntickets kaufen))
		(SU und dann frage ich da gleich wegen der hotelbuchung)
		(SU
			(SIMPX
				(C das)
				(MF die mir da)
				(NF
					(SIMPX
						(C das)
						[01;31m(FKOORD[00m
							[01;31m(MVCN[00m
								(MF
									[01;31m(MVCN[00m
										(MVC die da anrufen)
										[01;31m(NF[00m
											(ADVX
												(ADV vielleicht))[01;31m)[00m[01;31m)[00m
									(KON und)
									[01;31m(NX[00m
										(ADJX zwei)
										(NN zimmer)[01;31m)[00m)
								(VC reservieren)
								(NF fur eine termine)[01;31m)[00m[01;31m)[00m))))))
Step:Clause Attachment
{'subtrees': ['NF', 'SIMPX'], 'family': ['LK', 'MF', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VVFIN', 'PDS', 'APPR', 'ART', 'NN', 'KOUS', 'PPER', 'ADV'), 'right siblings': [(SIMPX (SIMPX (KOORD (KON oder)) (VF (NX (PPER ich))) (LK (VXFIN (VVFIN gehe))) (MF (PX (APPRART ins) (NX (NN reiseburo))))) (SIMPX (KOORD (KON und)) (VF (ADVX (ADV da))) (LK (VXFIN (VMFIN kann))) (MF (NX (PPER ich)) (ADVX (ADV ja)) (ADVX (ADV auch)) (NX (NN bahntickets))) (VC (VXINF (VVINF kaufen)))))], 'left siblings': [(LK (VXFIN (VVFIN meinen))), (MF (NX (PPER sie)))], 'auto preterminal span': (2, 11), 'span': (2, 11), 'parent': 'SU', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU
			(LK meinen)
			(MF sie)
			(SIMPX
				[01;31m(NF[00m
					(SIMPX
						(VF die)
						(LK wissen)
						[01;31m(MF[00m
							(NX das)
							(PX bei der bahn)[01;31m)[00m)[01;31m)[00m
				(SIMPX wenn ich da))
			(SIMPX oder ich gehe ins reiseburo und da kann ich ja auch bahntickets kaufen))
		(SU und dann frage ich da gleich wegen der hotelbuchung)
		(SU
			(SIMPX
				(C das)
				(MF die mir da)
				(NF
					(SIMPX
						(C das)
						[01;31m(FKOORD[00m
							[01;31m(MVCN[00m
								(MF
									[01;31m(MVCN[00m
										(MVC die da anrufen)
										[01;31m(NF[00m
											(ADVX
												(ADV vielleicht))[01;31m)[00m[01;31m)[00m
									(KON und)
									[01;31m(NX[00m
										(ADJX zwei)
										(NN zimmer)[01;31m)[00m)
								(VC reservieren)
								(NF fur eine termine)[01;31m)[00m[01;31m)[00m))))))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['NF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VVFIN', 'PDS', 'APPR', 'ART', 'NN', 'KOUS', 'PPER', 'ADV'), 'right siblings': ['SIMPX'], 'parent': 'SIMPX', 'auto preterminal span': (2, 11), 'span': (2, 8), 'left siblings': [], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(LK meinen)
			(MF sie)
			(SIMPX
				(SIMPX
					(VF die)
					(LK wissen)
					[01;31m(MF[00m
						(NX das)
						(PX bei der bahn)[01;31m)[00m)
				(SIMPX wenn ich da))
			(SIMPX oder ich gehe ins reiseburo und da kann ich ja auch bahntickets kaufen))
		(SU und dann frage ich da gleich wegen der hotelbuchung)
		(SU
			(SIMPX
				(C das)
				(MF die mir da)
				(NF
					(SIMPX
						(C das)
						[01;31m(FKOORD[00m
							[01;31m(MVCN[00m
								(MF
									[01;31m(MVCN[00m
										(MVC die da anrufen)
										[01;31m(NF[00m
											(ADVX
												(ADV vielleicht))[01;31m)[00m[01;31m)[00m
									(KON und)
									[01;31m(NX[00m
										(ADJX zwei)
										(NN zimmer)[01;31m)[00m)
								(VC reservieren)
								(NF fur eine termine)[01;31m)[00m[01;31m)[00m))))))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VVFIN', 'PDS', 'APPR', 'ART', 'NN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (2, 8), 'span': (4, 8), 'left siblings': ['VF', 'LK'], 'label': 'MF', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU meinen sie die wissen das bei der bahn wenn ich da oder ich gehe ins reiseburo und da kann ich ja auch bahntickets kaufen)
		(SU und dann frage ich da gleich wegen der hotelbuchung)
		(SU
			(SIMPX
				(C das)
				(MF die mir da)
				(NF
					(SIMPX
						(C das)
						[01;31m(FKOORD[00m
							[01;31m(MVCN[00m
								(MF
									[01;31m(MVCN[00m
										(MVC die da anrufen)
										[01;31m(NF[00m
											(ADVX
												(ADV vielleicht))[01;31m)[00m[01;31m)[00m
									(KON und)
									[01;31m(NX[00m
										(ADJX zwei)
										(NN zimmer)[01;31m)[00m)
								(VC reservieren)
								(NF fur eine termine)[01;31m)[00m[01;31m)[00m))))))
Step:Co-ordination
{'subtrees': ['MVC', 'NF'], 'family': ['MVCN', 'KON', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'ADV', 'VVFIN', 'ADV', 'KON', 'CARD', 'NN'), 'right siblings': ['KON', 'NX'], 'parent': 'MF', 'auto preterminal span': (38, 45), 'span': (38, 42), 'left siblings': [], 'label': 'MVCN', 'classified_type': 'Co-ordination', 'type': 'remove'}
(TOP
	(TURN
		(SU meinen sie die wissen das bei der bahn wenn ich da oder ich gehe ins reiseburo und da kann ich ja auch bahntickets kaufen)
		(SU und dann frage ich da gleich wegen der hotelbuchung)
		(SU
			(SIMPX
				(C das)
				(MF die mir da)
				(NF
					(SIMPX
						(C das)
						[01;31m(FKOORD[00m
							[01;31m(MVCN[00m
								(MF
									(MVC die da anrufen)
									[01;31m(NF[00m
										(ADVX
											(ADV vielleicht))[01;31m)[00m
									(KON und)
									[01;31m(NX[00m
										(ADJX zwei)
										(NN zimmer)[01;31m)[00m)
								(VC reservieren)
								(NF fur eine termine)[01;31m)[00m[01;31m)[00m))))))
Step:Unary
{'subtrees': ['MVCN'], 'family': ['C', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PDS', 'ADV', 'VVFIN', 'ADV', 'KON', 'CARD', 'NN', 'VVFIN', 'APPR', 'ART', 'NN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (37, 49), 'span': (38, 49), 'left siblings': ['C'], 'label': 'FKOORD', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU meinen sie die wissen das bei der bahn wenn ich da oder ich gehe ins reiseburo und da kann ich ja auch bahntickets kaufen)
		(SU und dann frage ich da gleich wegen der hotelbuchung)
		(SU
			(SIMPX
				(C das)
				(MF die mir da)
				(NF
					(SIMPX
						(C das)
						[01;31m(MVCN[00m
							(MF
								(MVC die da anrufen)
								[01;31m(NF[00m
									(ADVX
										(ADV vielleicht))[01;31m)[00m
								(KON und)
								[01;31m(NX[00m
									(ADJX zwei)
									(NN zimmer)[01;31m)[00m)
							(VC reservieren)
							(NF fur eine termine)[01;31m)[00m))))))
Step:UNSET remove
{'subtrees': ['MF', 'VC', 'NF'], 'family': ['C', 'MVCN'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PDS', 'ADV', 'VVFIN', 'ADV', 'KON', 'CARD', 'NN', 'VVFIN', 'APPR', 'ART', 'NN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (37, 49), 'span': (38, 49), 'left siblings': ['C'], 'label': 'MVCN', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU meinen sie die wissen das bei der bahn wenn ich da oder ich gehe ins reiseburo und da kann ich ja auch bahntickets kaufen)
		(SU und dann frage ich da gleich wegen der hotelbuchung)
		(SU
			(SIMPX
				(C das)
				(MF die mir da)
				(NF
					(SIMPX
						(C das)
						(MF
							(MVC die da anrufen)
							[01;31m(NF[00m
								(ADVX
									(ADV vielleicht))[01;31m)[00m
							(KON und)
							[01;31m(NX[00m
								(ADJX zwei)
								(NN zimmer)[01;31m)[00m)
						(VC reservieren)
						(NF fur eine termine)))))))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['MVC', 'NF', 'KON', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'ADV', 'VVFIN', 'ADV', 'KON', 'CARD', 'NN'), 'right siblings': ['KON', 'NX'], 'parent': 'MF', 'auto preterminal span': (38, 45), 'span': (41, 42), 'left siblings': ['MVC'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU meinen sie die wissen das bei der bahn wenn ich da oder ich gehe ins reiseburo und da kann ich ja auch bahntickets kaufen)
		(SU und dann frage ich da gleich wegen der hotelbuchung)
		(SU
			(SIMPX
				(C das)
				(MF die mir da)
				(NF
					(SIMPX
						(C das)
						(MF
							(MVC die da anrufen)
							(ADVX vielleicht)
							(KON und)
							[01;31m(NX[00m
								(ADJX zwei)
								(NN zimmer)[01;31m)[00m)
						(VC reservieren)
						(NF fur eine termine)))))))
Step:UNSET remove
{'subtrees': ['ADJX', 'NN'], 'family': ['MVC', 'ADVX', 'KON', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'ADV', 'VVFIN', 'ADV', 'KON', 'CARD', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (38, 45), 'span': (43, 45), 'left siblings': ['MVC', 'ADVX', 'KON'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP meinen sie die wissen das bei der bahn wenn ich da oder ich gehe ins reiseburo und da kann ich ja auch bahntickets kaufen und dann frage ich da gleich wegen der hotelbuchung das die mir da das die da anrufen vielleicht und zwei zimmer reservieren fur eine termine)

Sentence 653:
3 Initial errors
0 on fringe, 2 iterations
2 Error:NP Attachment
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU sollen wir so verbleiben)
		(SU
			[01;31m(SIMPX[00m
				(VF da)
				(LK rufe)
				(MF
					(NX ich)
					(NX sie)
					[01;31m(ADVX[00m
						(NX ein paar tage)
						[01;36m(ADVX[00m
							(ADV vorher)[01;36m)[00m[01;31m)[00m
					(ADVX noch)
					(ADVX mal))
				(VC an)[01;31m)[00m
			(SIMPX ansonsten sehen wir uns ja vielleicht im in der firma))))
Step:NP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'NX', 'NX', 'ADVX', 'ADVX', 'ADVX'], 'mover info': [('NX', (8, 11))], 'old_family': ['NX', 'ADV'], 'start left siblings': [], 'auto preterminals': ('PPER', 'PPER', 'ART', 'PIDAT', 'NN', 'ADV', 'ADV', 'ADV'), 'start right siblings': ['ADV'], 'end left siblings': ['NX', 'NX'], 'auto preterminal span': (6, 14), 'movers': ['NX'], 'old_parent': 'ADVX', 'end right siblings': ['ADVX', 'ADVX', 'ADVX'], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU sollen wir so verbleiben)
		(SU
			[01;31m(SIMPX[00m
				(VF da)
				(LK rufe)
				(MF ich sie ein paar tage vorher noch mal)
				(VC an)[01;31m)[00m
			(SIMPX ansonsten sehen wir uns ja vielleicht im in der firma))))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'PPER', 'ART', 'PIDAT', 'NN', 'ADV', 'ADV', 'ADV', 'PTKVZ', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'APPRART', 'APPR', 'ART', 'NN'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (4, 25), 'span': (4, 15), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP sollen wir so verbleiben da rufe ich sie ein paar tage vorher noch mal an ansonsten sehen wir uns ja vielleicht im in der firma)

Sentence 654:
10 Initial errors
0 on fringe, 7 iterations
3 Error:Modifier Attachment
2 Error:Single Word Phrase
1 Error:UNSET add
1 Error:Unary
1 Error:Unary
1 Error:PP Attachment
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU das heist wir konnten jede stunde fahren)
		(SU ich weis gar nicht ob wir da unbedingt reservieren sollen)
		(SU
			(SIMPX
				(VF das)
				(LK konnen)
				[01;31m(MF[00m
					(NX wir)
					(NX uns)
					(ADVX dann)
					[01;31m(PX[00m
						(ADVX ganz)
						(APPR nach)
						(NX
							(NX lust)
							[01;36m(NX[00m
								[01;36m(NF[00m
									(KON und)
									(NX laune)[01;36m)[00m[01;36m)[00m)[01;31m)[00m[01;31m)[00m)
			(SIMPX vielleicht haben wir noch lust irgendwie vormittags zu bummeln))
		(SU
			(SIMPX
				(KOORD und)
				(VF dann)
				(LK konnen)
				(MF
					(NX wir)
					[01;36m(PX[00m
						[01;31m(PX[00m
							(ADVX ganz)
							(APPR nach)
							[01;33m(NX[00m (NX lust und laune)[01;31m)[00m
						[01;36m(LK[00m [01;36m(VXFIN[00m [01;31m(ADJX[00m
							(ADJD stundlich)[01;31m)[00m [01;33mNX)[00m[01;36m)[00m[01;36m)[00m[01;36m)[00m
					(NX uns)
					(NX einen zug))
				(VC aussuchen)
				(NF fur die ruckfahrt)))))
Step:Modifier Attachment
{'new_parent': 'PX', 'new_family': ['ADVX', 'APPR', 'NX', 'ADJX'], 'mover info': [('ADJX', (45, 46))], 'old_family': ['NX', 'PX', 'ADJX', 'NX', 'NX'], 'start left siblings': ['NX', 'PX'], 'auto preterminals': ('PPER', 'ADV', 'APPR', 'NN', 'KON', 'NN', 'ADJD', 'PRF', 'ART', 'NN'), 'start right siblings': ['NX', 'NX'], 'end left siblings': ['ADVX', 'APPR', 'NX'], 'auto preterminal span': (39, 49), 'adding node already present': False, 'movers': ['ADJX'], 'old_parent': 'MF', 'POS confusion': ('ADJD', 'ADJD'), 'added and moved': True, 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'LK'}
(TOP
	(TURN
		(SU das heist wir konnten jede stunde fahren)
		(SU ich weis gar nicht ob wir da unbedingt reservieren sollen)
		(SU
			(SIMPX
				(VF das)
				(LK konnen)
				[01;31m(MF[00m
					(NX wir)
					(NX uns)
					(ADVX dann)
					[01;31m(PX[00m
						(ADVX ganz)
						(APPR nach)
						(NX
							(NX lust)
							[01;36m(NX[00m
								[01;36m(NF[00m
									(KON und)
									(NX laune)[01;36m)[00m[01;36m)[00m)[01;31m)[00m[01;31m)[00m)
			(SIMPX vielleicht haben wir noch lust irgendwie vormittags zu bummeln))
		(SU
			(SIMPX
				(KOORD und)
				(VF dann)
				(LK konnen)
				(MF
					(NX wir)
					(PX
						(ADVX ganz)
						(APPR nach)
						(NX
							(NX lust und laune)
							[01;36m(LK[00m [01;36m(VXFIN[00m [01;31m(ADJX[00m
								(ADJD stundlich)[01;31m)[00m[01;36m)[00m[01;36m)[00m))
					(NX uns)
					(NX einen zug))
				(VC aussuchen)
				(NF fur die ruckfahrt)))))
Step:Single Word Phrase
{'family': ['NX', 'VXFIN'], 'auto preterminal span': (45, 46), 'span': (45, 46), 'subtrees': ['ADJD'], 'parent': 'NX', 'over_word': True, 'auto preterminals': ('ADJD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'VXFIN')}
(TOP
	(TURN
		(SU das heist wir konnten jede stunde fahren)
		(SU ich weis gar nicht ob wir da unbedingt reservieren sollen)
		(SU
			(SIMPX
				(VF das)
				(LK konnen)
				[01;31m(MF[00m
					(NX wir)
					(NX uns)
					(ADVX dann)
					[01;31m(PX[00m
						(ADVX ganz)
						(APPR nach)
						(NX
							(NX lust)
							[01;36m(NX[00m
								[01;36m(NF[00m
									(KON und)
									(NX laune)[01;36m)[00m[01;36m)[00m)[01;31m)[00m[01;31m)[00m)
			(SIMPX vielleicht haben wir noch lust irgendwie vormittags zu bummeln))
		(SU
			(SIMPX
				(KOORD und)
				(VF dann)
				(LK konnen)
				(MF
					(NX wir)
					(PX
						(ADVX ganz)
						(APPR nach)
						(NX
							(NX lust und laune)
							[01;36m(LK[00m
								(VXFIN
									(ADJD stundlich))[01;36m)[00m))
					(NX uns)
					(NX einen zug))
				(VC aussuchen)
				(NF fur die ruckfahrt)))))
Step:UNSET add
{'subtrees': ['KON', 'NX'], 'family': ['NX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'NN'), 'right siblings': [], 'left siblings': [(NX (NN lust))], 'auto preterminal span': (25, 27), 'span': (25, 27), 'parent': 'NX', 'label': 'NF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU das heist wir konnten jede stunde fahren)
		(SU ich weis gar nicht ob wir da unbedingt reservieren sollen)
		(SU
			(SIMPX
				(VF das)
				(LK konnen)
				[01;31m(MF[00m
					(NX wir)
					(NX uns)
					(ADVX dann)
					[01;31m(PX[00m
						(ADVX ganz)
						(APPR nach)
						(NX
							(NX lust)
							[01;36m(NX[00m
								(NF
									(KON und)
									(NX laune))[01;36m)[00m)[01;31m)[00m[01;31m)[00m)
			(SIMPX vielleicht haben wir noch lust irgendwie vormittags zu bummeln))
		(SU
			(SIMPX
				(KOORD und)
				(VF dann)
				(LK konnen)
				(MF
					(NX wir)
					(PX
						(ADVX ganz)
						(APPR nach)
						(NX
							(NX lust und laune)
							[01;36m(LK[00m
								(VXFIN
									(ADJD stundlich))[01;36m)[00m))
					(NX uns)
					(NX einen zug))
				(VC aussuchen)
				(NF fur die ruckfahrt)))))
Step:Unary
{'subtrees': ['NF'], 'family': ['NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'NN'), 'right siblings': [], 'left siblings': [(NX (NN lust))], 'auto preterminal span': (25, 27), 'span': (25, 27), 'parent': 'NX', 'label': 'NX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU das heist wir konnten jede stunde fahren)
		(SU ich weis gar nicht ob wir da unbedingt reservieren sollen)
		(SU
			(SIMPX
				(VF das)
				(LK konnen)
				[01;31m(MF[00m
					(NX wir)
					(NX uns)
					(ADVX dann)
					[01;31m(PX[00m
						(ADVX ganz)
						(APPR nach)
						(NX lust und laune)[01;31m)[00m[01;31m)[00m)
			(SIMPX vielleicht haben wir noch lust irgendwie vormittags zu bummeln))
		(SU
			(SIMPX
				(KOORD und)
				(VF dann)
				(LK konnen)
				(MF
					(NX wir)
					(PX
						(ADVX ganz)
						(APPR nach)
						(NX
							(NX lust und laune)
							[01;36m(LK[00m
								(VXFIN
									(ADJD stundlich))[01;36m)[00m))
					(NX uns)
					(NX einen zug))
				(VC aussuchen)
				(NF fur die ruckfahrt)))))
Step:Unary
{'subtrees': ['VXFIN'], 'family': ['NX', 'LK'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJD',), 'right siblings': [], 'left siblings': [(NX (NX (NN lust)) (KON und) (NX (NN laune)))], 'auto preterminal span': (45, 46), 'span': (45, 46), 'parent': 'NX', 'label': 'LK', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU das heist wir konnten jede stunde fahren)
		(SU ich weis gar nicht ob wir da unbedingt reservieren sollen)
		(SU
			(SIMPX
				(VF das)
				(LK konnen)
				[01;31m(MF[00m
					(NX wir)
					(NX uns)
					(ADVX dann)
					[01;31m(PX[00m
						(ADVX ganz)
						(APPR nach)
						(NX lust und laune)[01;31m)[00m[01;31m)[00m)
			(SIMPX vielleicht haben wir noch lust irgendwie vormittags zu bummeln))
		(SU und dann konnen wir ganz nach lust und laune stundlich uns einen zug aussuchen fur die ruckfahrt)))
Step:PP Attachment
{'subtrees': ['NX', 'NX', 'ADVX', 'PX'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VMFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'APPR', 'NN', 'KON', 'NN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (17, 27), 'span': (19, 27), 'left siblings': ['VF', 'LK'], 'label': 'MF', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU das heist wir konnten jede stunde fahren)
		(SU ich weis gar nicht ob wir da unbedingt reservieren sollen)
		(SU
			(SIMPX
				(VF das)
				(LK konnen)
				(NX wir)
				(NX uns)
				(ADVX dann)
				[01;31m(PX[00m
					(ADVX ganz)
					(APPR nach)
					(NX lust und laune)[01;31m)[00m)
			(SIMPX vielleicht haben wir noch lust irgendwie vormittags zu bummeln))
		(SU und dann konnen wir ganz nach lust und laune stundlich uns einen zug aussuchen fur die ruckfahrt)))
Step:UNSET remove
{'subtrees': ['ADVX', 'APPR', 'NX'], 'family': ['VF', 'LK', 'NX', 'NX', 'ADVX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VMFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'APPR', 'NN', 'KON', 'NN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (17, 27), 'span': (22, 27), 'left siblings': ['VF', 'LK', 'NX', 'NX', 'ADVX'], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP das heist wir konnten jede stunde fahren ich weis gar nicht ob wir da unbedingt reservieren sollen das konnen wir uns dann ganz nach lust und laune vielleicht haben wir noch lust irgendwie vormittags zu bummeln und dann konnen wir ganz nach lust und laune stundlich uns einen zug aussuchen fur die ruckfahrt)

Sentence 655:
0 Initial errors
0 on fringe, 0 iterations

Sentence 656:
4 Initial errors
0 on fringe, 3 iterations
2 Error:Single Word Phrase
1 Error:Unary
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM ja)
			[01;31m(DM[00m
				(ADVX
					(ADV so))[01;31m)[00m)
		(SU
			(DM guten tag)
			(SIMPX
				(VF hier)
				(LK ist)
				(MF
					(NX
						(ART das)
						[01;36m(NX[00m [01;31m(ADJX[00m
							(ADJA stadtische)[01;31m)[00m[01;36m)[00m
						(NX reiseburo bonn))))
			(DM
				(NX
					[01;31m(NX[00m
						(NE bergmann)[01;31m)[00m
					(NX apparat)))
			(SIMPX wie kann ich ihnen helfen))))
Step:Single Word Phrase
{'family': ['ART', 'NX', 'NX'], 'auto preterminal span': (7, 8), 'span': (7, 8), 'subtrees': ['ADJA'], 'parent': 'NX', 'over_word': True, 'auto preterminals': ('ADJA',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'NX')}
(TOP
	(TURN
		(SU
			(DM ja)
			[01;31m(DM[00m
				(ADVX
					(ADV so))[01;31m)[00m)
		(SU
			(DM guten tag)
			(SIMPX hier ist das stadtische reiseburo bonn)
			(DM
				(NX
					[01;31m(NX[00m
						(NE bergmann)[01;31m)[00m
					(NX apparat)))
			(SIMPX wie kann ich ihnen helfen))))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['DM', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADV'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (0, 2), 'span': (1, 2), 'left siblings': ['DM'], 'label': 'DM', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU ja so)
		(SU
			(DM guten tag)
			(SIMPX hier ist das stadtische reiseburo bonn)
			(DM
				(NX
					[01;31m(NX[00m
						(NE bergmann)[01;31m)[00m
					(NX apparat)))
			(SIMPX wie kann ich ihnen helfen))))
Step:Single Word Phrase
{'subtrees': ['NE'], 'family': ['NX', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('NE', 'NN'), 'right siblings': ['NX'], 'parent': 'NX', 'auto preterminal span': (10, 12), 'span': (10, 11), 'left siblings': [], 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP ja so guten tag hier ist das stadtische reiseburo bonn bergmann apparat wie kann ich ihnen helfen)

Sentence 657:
14 Initial errors
0 on fringe, 11 iterations
2 Error:PP Attachment
2 Error:Modifier Attachment
2 Error:Modifier Attachment
1 Error:PP Attachment
1 Error:Unary
1 Error:UNSET add
1 Error:UNSET add
1 Error:UNSET remove
1 Error:Single Word Phrase
1 Error:PP Attachment
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU ja selbstverstandlich)
		(SU
			[01;31m(SIMPX[00m
				(VF ich)
				(LK mus)
				(MF
					(ADVX nur)
					[01;31m(PX[00m
						(PROP dazu)[01;31m)[00m)
				(VC sagen)
				(NF [01;33m(SIMPX (NF[00m
					(SIMPX
						(C das)
						[01;31m(MF[00m
							(NX das)
							(PX von kolnbonn) [01;33mNF) SIMPX)[00m
							[01;33m(SIMPX[00m (SIMPX wenn sie von kolnbonn fliegen wollen)
							[01;36m(MF[00m
								[01;31m(ADVX[00m [01;33m(SIMPX[00m
									[01;31m(ADVX[00m
										(ADVX nur)
										[01;36m(ADVX[00m
											(ADV einmal)[01;36m)[00m[01;31m)[00m
									(PX am tag)[01;31m)[00m
								(ADJX moglich)[01;36m)[00m[01;31m)[00m
						(VC ist)))[01;31m)[00m [01;33mSIMPX) SIMPX)[00m
			(DM und zwar)
			[01;31m(PX[00m
				(PX um sieben uhr zehn)
				[01;36m(ADVX[00m
					(KON und)
					[01;31m(PX[00m
						(PX am wochenende)
						(ADVX leider)
						(ADVX gar nicht)[01;31m)[00m[01;36m)[00m[01;31m)[00m)))
Step:PP Attachment
{'new_parent': 'SIMPX', 'new_family': ['C', 'NX', 'PX', 'SIMPX', 'MF', 'VC'], 'mover info': [('NX', (8, 9)), ('PX', (9, 11)), ('SIMPX', (11, 17))], 'old_family': ['NX', 'PX', 'SIMPX', 'ADVX', 'ADJX'], 'start left siblings': [], 'auto preterminals': ('KOUS', 'PDS', 'APPR', 'NE', 'KOUS', 'PPER', 'APPR', 'NE', 'VVINF', 'VMFIN', 'ADV', 'ADV', 'APPRART', 'NN', 'ADJD', 'VAFIN'), 'start right siblings': ['ADVX', 'ADJX'], 'end left siblings': ['C'], 'auto preterminal span': (7, 23), 'movers': ['NX', 'PX', 'SIMPX'], 'old_parent': 'MF', 'end right siblings': ['MF', 'VC'], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU ja selbstverstandlich)
		(SU
			[01;31m(SIMPX[00m
				(VF ich)
				(LK mus)
				(MF
					(ADVX nur)
					[01;31m(PX[00m
						(PROP dazu)[01;31m)[00m)
				(VC sagen)
				(NF
					(SIMPX
						[01;36m(NF[00m
							[01;36m(SIMPX[00m
								(C das)
								(NX das)
								(PX von kolnbonn)[01;36m)[00m[01;36m)[00m
						[01;36m(SIMPX[00m
							(SIMPX wenn sie von kolnbonn fliegen wollen)
							[01;36m(SIMPX[00m
								(MF
									[01;31m(ADVX[00m
										[01;31m(ADVX[00m
											(ADVX nur)
											[01;36m(ADVX[00m
												(ADV einmal)[01;36m)[00m[01;31m)[00m
										(PX am tag)[01;31m)[00m
									(ADJX moglich))
								(VC ist)[01;36m)[00m[01;36m)[00m))[01;31m)[00m
			(DM und zwar)
			[01;31m(PX[00m
				(PX um sieben uhr zehn)
				[01;36m(ADVX[00m
					(KON und)
					[01;31m(PX[00m
						(PX am wochenende)
						(ADVX leider)
						(ADVX gar nicht)[01;31m)[00m[01;36m)[00m[01;31m)[00m)))
Step:Modifier Attachment
{'new_parent': 'ADVX', 'new_family': ['ADVX', 'ADVX', 'PX'], 'mover info': [('ADVX', (17, 18))], 'old_family': ['ADVX', 'ADV'], 'start left siblings': [], 'auto preterminals': ('ADV', 'ADV', 'APPRART', 'NN'), 'start right siblings': ['ADV'], 'end left siblings': [], 'auto preterminal span': (17, 21), 'movers': ['ADVX'], 'old_parent': 'ADVX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['ADVX', 'PX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU ja selbstverstandlich)
		(SU
			[01;31m(SIMPX[00m
				(VF ich)
				(LK mus)
				(MF
					(ADVX nur)
					[01;31m(PX[00m
						(PROP dazu)[01;31m)[00m)
				(VC sagen)
				(NF
					(SIMPX
						[01;36m(NF[00m
							[01;36m(SIMPX[00m
								(C das)
								(NX das)
								(PX von kolnbonn)[01;36m)[00m[01;36m)[00m
						[01;36m(SIMPX[00m
							(SIMPX wenn sie von kolnbonn fliegen wollen)
							[01;36m(SIMPX[00m
								(MF
									[01;31m(ADVX[00m
										(ADVX nur)
										(ADVX einmal)
										(PX am tag)[01;31m)[00m
									(ADJX moglich))
								(VC ist)[01;36m)[00m[01;36m)[00m))[01;31m)[00m
			(DM und zwar)
			[01;31m(PX[00m
				(PX um sieben uhr zehn)
				[01;36m(ADVX[00m
					(KON und)
					[01;31m(PX[00m
						(PX am wochenende)
						(ADVX leider)
						(ADVX gar nicht)[01;31m)[00m[01;36m)[00m[01;31m)[00m)))
Step:Modifier Attachment
{'new_parent': 'PX', 'new_family': ['PX', 'KON', 'PX', 'ADVX', 'ADVX'], 'mover info': [('ADVX', (32, 33)), ('ADVX', (33, 35))], 'old_family': ['PX', 'ADVX', 'ADVX'], 'start left siblings': ['PX'], 'auto preterminals': ('APPR', 'CARD', 'NN', 'CARD', 'KON', 'APPRART', 'NN', 'ADV', 'ADV', 'PTKNEG'), 'start right siblings': [], 'end left siblings': ['PX', 'KON', 'PX'], 'auto preterminal span': (25, 35), 'adding node already present': False, 'movers': ['ADVX', 'ADVX'], 'old_parent': 'PX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'ADVX'}
(TOP
	(TURN
		(SU ja selbstverstandlich)
		(SU
			[01;31m(SIMPX[00m
				(VF ich)
				(LK mus)
				(MF
					(ADVX nur)
					[01;31m(PX[00m
						(PROP dazu)[01;31m)[00m)
				(VC sagen)
				(NF
					(SIMPX
						[01;36m(NF[00m
							[01;36m(SIMPX[00m
								(C das)
								(NX das)
								(PX von kolnbonn)[01;36m)[00m[01;36m)[00m
						[01;36m(SIMPX[00m
							(SIMPX wenn sie von kolnbonn fliegen wollen)
							[01;36m(SIMPX[00m
								(MF
									[01;31m(ADVX[00m
										(ADVX nur)
										(ADVX einmal)
										(PX am tag)[01;31m)[00m
									(ADJX moglich))
								(VC ist)[01;36m)[00m[01;36m)[00m))[01;31m)[00m
			(DM und zwar)
			[01;31m(PX[00m
				(PX um sieben uhr zehn)
				(ADVX und am wochenende leider gar nicht)[01;31m)[00m)))
Step:PP Attachment
{'subtrees': ['C', 'NX', 'PX'], 'family': ['SIMPX', 'SIMPX', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PDS', 'APPR', 'NE'), 'right siblings': [(SIMPX (C (KOUS wenn)) (MF (NX (PPER sie)) (PX (APPR von) (NX (NE kolnbonn)))) (VC (VXINF (VVINF fliegen)) (VXFIN (VMFIN wollen)))), (MF (ADVX (ADVX (ADV nur)) (ADVX (ADV einmal)) (PX (APPRART am) (NX (NN tag)))) (ADJX (ADJD moglich))), (VC (VXFIN (VAFIN ist)))], 'left siblings': [], 'auto preterminal span': (7, 11), 'span': (7, 11), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU ja selbstverstandlich)
		(SU
			[01;31m(SIMPX[00m
				(VF ich)
				(LK mus)
				(MF
					(ADVX nur)
					[01;31m(PX[00m
						(PROP dazu)[01;31m)[00m)
				(VC sagen)
				(NF
					(SIMPX
						[01;36m(NF[00m
							(SIMPX
								(C das)
								(NX das)
								(PX von kolnbonn))[01;36m)[00m
						[01;36m(SIMPX[00m
							(SIMPX wenn sie von kolnbonn fliegen wollen)
							[01;36m(SIMPX[00m
								(MF
									[01;31m(ADVX[00m
										(ADVX nur)
										(ADVX einmal)
										(PX am tag)[01;31m)[00m
									(ADJX moglich))
								(VC ist)[01;36m)[00m[01;36m)[00m))[01;31m)[00m
			(DM und zwar)
			[01;31m(PX[00m
				(PX um sieben uhr zehn)
				(ADVX und am wochenende leider gar nicht)[01;31m)[00m)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['NF', 'SIMPX', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PDS', 'APPR', 'NE'), 'right siblings': [(SIMPX (C (KOUS wenn)) (MF (NX (PPER sie)) (PX (APPR von) (NX (NE kolnbonn)))) (VC (VXINF (VVINF fliegen)) (VXFIN (VMFIN wollen)))), (MF (ADVX (ADVX (ADV nur)) (ADVX (ADV einmal)) (PX (APPRART am) (NX (NN tag)))) (ADJX (ADJD moglich))), (VC (VXFIN (VAFIN ist)))], 'left siblings': [], 'auto preterminal span': (7, 11), 'span': (7, 11), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU ja selbstverstandlich)
		(SU
			[01;31m(SIMPX[00m
				(VF ich)
				(LK mus)
				(MF
					(ADVX nur)
					[01;31m(PX[00m
						(PROP dazu)[01;31m)[00m)
				(VC sagen)
				(NF
					(SIMPX
						(NF das das von kolnbonn)
						[01;36m(SIMPX[00m
							(SIMPX wenn sie von kolnbonn fliegen wollen)
							[01;36m(SIMPX[00m
								(MF
									[01;31m(ADVX[00m
										(ADVX nur)
										(ADVX einmal)
										(PX am tag)[01;31m)[00m
									(ADJX moglich))
								(VC ist)[01;36m)[00m[01;36m)[00m))[01;31m)[00m
			(DM und zwar)
			[01;31m(PX[00m
				(PX um sieben uhr zehn)
				(ADVX und am wochenende leider gar nicht)[01;31m)[00m)))
Step:UNSET add
{'subtrees': ['SIMPX', 'MF', 'VC'], 'family': ['NF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'APPR', 'NE', 'VVINF', 'VMFIN', 'ADV', 'ADV', 'APPRART', 'NN', 'ADJD', 'VAFIN'), 'right siblings': [], 'left siblings': [(NF (SIMPX (C (KOUS das)) (NX (PDS das)) (PX (APPR von) (NX (NE kolnbonn)))))], 'auto preterminal span': (11, 23), 'span': (11, 23), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU ja selbstverstandlich)
		(SU
			[01;31m(SIMPX[00m
				(VF ich)
				(LK mus)
				(MF
					(ADVX nur)
					[01;31m(PX[00m
						(PROP dazu)[01;31m)[00m)
				(VC sagen)
				(NF
					(SIMPX
						(NF das das von kolnbonn)
						(SIMPX
							(SIMPX wenn sie von kolnbonn fliegen wollen)
							[01;36m(SIMPX[00m
								(MF
									[01;31m(ADVX[00m
										(ADVX nur)
										(ADVX einmal)
										(PX am tag)[01;31m)[00m
									(ADJX moglich))
								(VC ist)[01;36m)[00m)))[01;31m)[00m
			(DM und zwar)
			[01;31m(PX[00m
				(PX um sieben uhr zehn)
				(ADVX und am wochenende leider gar nicht)[01;31m)[00m)))
Step:UNSET add
{'subtrees': ['MF', 'VC'], 'family': ['SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'APPRART', 'NN', 'ADJD', 'VAFIN'), 'right siblings': [], 'left siblings': [(SIMPX (C (KOUS wenn)) (MF (NX (PPER sie)) (PX (APPR von) (NX (NE kolnbonn)))) (VC (VXINF (VVINF fliegen)) (VXFIN (VMFIN wollen))))], 'auto preterminal span': (17, 23), 'span': (17, 23), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU ja selbstverstandlich)
		(SU
			[01;31m(SIMPX[00m
				(VF ich)
				(LK mus)
				(MF
					(ADVX nur)
					[01;31m(PX[00m
						(PROP dazu)[01;31m)[00m)
				(VC sagen)
				(NF
					(SIMPX
						(NF das das von kolnbonn)
						(SIMPX
							(SIMPX wenn sie von kolnbonn fliegen wollen)
							(SIMPX
								(MF
									[01;31m(ADVX[00m
										(ADVX nur)
										(ADVX einmal)
										(PX am tag)[01;31m)[00m
									(ADJX moglich))
								(VC ist)))))[01;31m)[00m
			(DM und zwar)
			[01;31m(PX[00m
				(PX um sieben uhr zehn)
				(ADVX und am wochenende leider gar nicht)[01;31m)[00m)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'VC', 'NF'], 'family': ['SIMPX', 'DM', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VMFIN', 'ADV', 'PROP', 'VVINF', 'KOUS', 'PDS', 'APPR', 'NE', 'KOUS', 'PPER', 'APPR', 'NE', 'VVINF', 'VMFIN', 'ADV', 'ADV', 'APPRART', 'NN', 'ADJD', 'VAFIN', 'KON', 'ADV', 'APPR', 'CARD', 'NN', 'CARD', 'KON', 'APPRART', 'NN', 'ADV', 'ADV', 'PTKNEG'), 'right siblings': ['DM', 'PX'], 'parent': 'SU', 'auto preterminal span': (2, 35), 'span': (2, 23), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU ja selbstverstandlich)
		(SU
			(VF ich)
			(LK mus)
			(MF
				(ADVX nur)
				[01;31m(PX[00m
					(PROP dazu)[01;31m)[00m)
			(VC sagen)
			(NF
				(SIMPX
					(NF das das von kolnbonn)
					(SIMPX
						(SIMPX wenn sie von kolnbonn fliegen wollen)
						(SIMPX
							(MF
								[01;31m(ADVX[00m
									(ADVX nur)
									(ADVX einmal)
									(PX am tag)[01;31m)[00m
								(ADJX moglich))
							(VC ist)))))
			(DM und zwar)
			[01;31m(PX[00m
				(PX um sieben uhr zehn)
				(ADVX und am wochenende leider gar nicht)[01;31m)[00m)))
Step:Single Word Phrase
{'subtrees': ['PROP'], 'family': ['ADVX', 'PX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADV', 'PROP'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (4, 6), 'span': (5, 6), 'left siblings': ['ADVX'], 'label': 'PX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(SU ja selbstverstandlich)
		(SU
			(VF ich)
			(LK mus)
			(MF nur dazu)
			(VC sagen)
			(NF
				(SIMPX
					(NF das das von kolnbonn)
					(SIMPX
						(SIMPX wenn sie von kolnbonn fliegen wollen)
						(SIMPX
							(MF
								[01;31m(ADVX[00m
									(ADVX nur)
									(ADVX einmal)
									(PX am tag)[01;31m)[00m
								(ADJX moglich))
							(VC ist)))))
			(DM und zwar)
			[01;31m(PX[00m
				(PX um sieben uhr zehn)
				(ADVX und am wochenende leider gar nicht)[01;31m)[00m)))
Step:PP Attachment
{'subtrees': ['ADVX', 'ADVX', 'PX'], 'family': ['ADVX', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'APPRART', 'NN', 'ADJD'), 'right siblings': ['ADJX'], 'parent': 'MF', 'auto preterminal span': (17, 22), 'span': (17, 21), 'left siblings': [], 'label': 'ADVX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU ja selbstverstandlich)
		(SU
			(VF ich)
			(LK mus)
			(MF nur dazu)
			(VC sagen)
			(NF das das von kolnbonn wenn sie von kolnbonn fliegen wollen nur einmal am tag moglich ist)
			(DM und zwar)
			[01;31m(PX[00m
				(PX um sieben uhr zehn)
				(ADVX und am wochenende leider gar nicht)[01;31m)[00m)))
Step:Modifier Attachment
{'subtrees': ['PX', 'ADVX'], 'family': ['VF', 'LK', 'MF', 'VC', 'NF', 'DM', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VMFIN', 'ADV', 'PROP', 'VVINF', 'KOUS', 'PDS', 'APPR', 'NE', 'KOUS', 'PPER', 'APPR', 'NE', 'VVINF', 'VMFIN', 'ADV', 'ADV', 'APPRART', 'NN', 'ADJD', 'VAFIN', 'KON', 'ADV', 'APPR', 'CARD', 'NN', 'CARD', 'KON', 'APPRART', 'NN', 'ADV', 'ADV', 'PTKNEG'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (2, 35), 'span': (25, 35), 'left siblings': ['VF', 'LK', 'MF', 'VC', 'NF', 'DM'], 'label': 'PX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP ja selbstverstandlich ich mus nur dazu sagen das das von kolnbonn wenn sie von kolnbonn fliegen wollen nur einmal am tag moglich ist und zwar um sieben uhr zehn und am wochenende leider gar nicht)

Sentence 658:
0 Initial errors
0 on fringe, 0 iterations

Sentence 659:
0 Initial errors
0 on fringe, 0 iterations

Sentence 660:
5 Initial errors
0 on fringe, 2 iterations
3 Error:Modifier Attachment
2 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(NX
				[01;31m(NX[00m
					[01;36m(NX[00m [01;31m(ADJX[00m
						(ADJA siebten)[01;31m)[00m[01;36m)[00m
					[01;36m(NX[00m
						(NN [01;33m(NX[00m siebten)[01;36m)[00m[01;31m)[00m
				(APPR bis)
				(PX zum zehnten juli))) [01;33mNX)[00m
		(SU ja das kann ich machen)))
Step:Modifier Attachment
{'new_parent': 'SU', 'new_family': ['ADJX', 'NX'], 'mover info': [('ADJX', (0, 1))], 'old_family': ['ADJX', 'NN'], 'start left siblings': [], 'auto preterminals': ('ADJA', 'NN', 'APPR', 'APPRART', 'ADJA', 'NN'), 'start right siblings': ['NN'], 'end left siblings': [], 'auto preterminal span': (0, 6), 'adding node already present': False, 'movers': ['ADJX'], 'old_parent': 'NX', 'POS confusion': ('ADJA', 'ADJA'), 'added and moved': True, 'end right siblings': ['NX'], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(NX
			(SU
				[01;36m(NX[00m [01;31m(ADJX[00m
					(ADJA siebten)[01;31m)[00m[01;36m)[00m
				(NX siebten bis zum zehnten juli)))
		(SU ja das kann ich machen)))
Step:Single Word Phrase
{'family': ['NX', 'NX'], 'auto preterminal span': (0, 1), 'span': (0, 1), 'subtrees': ['ADJA'], 'parent': 'SU', 'over_word': True, 'auto preterminals': ('ADJA',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'NX')}
(TOP siebten siebten bis zum zehnten juli ja das kann ich machen)

Sentence 661:
5 Initial errors
0 on fringe, 5 iterations
1 Error:Single Word Phrase
1 Error:Unary
1 Error:Single Word Phrase
1 Error:Clause Attachment
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM tja)
			[01;31m(P[00m
				(SIMPX
					(VF da)
					(LK bin)
					(MF
						(NX ich)
						(ADVX gerade)
						(ADVX ja)
						(ADVX nicht)
						(ADJX
							(ADJX so gut)
							[01;36m(VXINF[00m
								[01;36m(VC[00m
									(ADJD informiert)[01;36m)[00m[01;36m)[00m)))
				[01;36m(KOORD[00m
					(KON aber)[01;36m)[00m
				[01;31m(SIMPX[00m
					(VF da)
					(LK wird)
					(MF es einen flug)
					(VC geben)[01;31m)[00m[01;31m)[00m
			(SIMPX und ich denke auch das der vielleicht abends ist))
		(SU werde ich noch nachgucken)))
Step:Single Word Phrase
{'subtrees': ['ADJD'], 'family': ['ADJX', 'VC'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADJD',), 'right siblings': [], 'left siblings': [(ADJX (ADVX (ADV so)) (ADJD gut))], 'auto preterminal span': (9, 10), 'span': (9, 10), 'parent': 'ADJX', 'label': 'VC', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM tja)
			[01;31m(P[00m
				(SIMPX
					(VF da)
					(LK bin)
					(MF
						(NX ich)
						(ADVX gerade)
						(ADVX ja)
						(ADVX nicht)
						(ADJX
							(ADJX so gut)
							[01;36m(VXINF[00m
								(VC
									(ADJD informiert))[01;36m)[00m)))
				[01;36m(KOORD[00m
					(KON aber)[01;36m)[00m
				[01;31m(SIMPX[00m
					(VF da)
					(LK wird)
					(MF es einen flug)
					(VC geben)[01;31m)[00m[01;31m)[00m
			(SIMPX und ich denke auch das der vielleicht abends ist))
		(SU werde ich noch nachgucken)))
Step:Unary
{'subtrees': ['VC'], 'family': ['ADJX', 'VXINF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJD',), 'right siblings': [], 'left siblings': [(ADJX (ADVX (ADV so)) (ADJD gut))], 'auto preterminal span': (9, 10), 'span': (9, 10), 'parent': 'ADJX', 'label': 'VXINF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM tja)
			[01;31m(P[00m
				(SIMPX da bin ich gerade ja nicht so gut informiert)
				[01;36m(KOORD[00m
					(KON aber)[01;36m)[00m
				[01;31m(SIMPX[00m
					(VF da)
					(LK wird)
					(MF es einen flug)
					(VC geben)[01;31m)[00m[01;31m)[00m
			(SIMPX und ich denke auch das der vielleicht abends ist))
		(SU werde ich noch nachgucken)))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['SIMPX', 'KOORD', 'SIMPX'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON',), 'right siblings': [(SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VAFIN wird))) (MF (NX (PPER es)) (NX (ART einen) (NN flug))) (VC (VXINF (VVINF geben))))], 'left siblings': [(SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VAFIN bin))) (MF (NX (PPER ich)) (ADVX (ADV gerade)) (ADVX (ADV ja)) (ADVX (PTKNEG nicht)) (ADJX (ADJX (ADVX (ADV so)) (ADJD gut)) (VXINF (VC (ADJD informiert))))))], 'auto preterminal span': (10, 11), 'span': (10, 11), 'parent': 'P', 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM tja)
			[01;31m(P[00m
				(SIMPX da bin ich gerade ja nicht so gut informiert)
				(KOORD aber)
				[01;31m(SIMPX[00m
					(VF da)
					(LK wird)
					(MF es einen flug)
					(VC geben)[01;31m)[00m[01;31m)[00m
			(SIMPX und ich denke auch das der vielleicht abends ist))
		(SU werde ich noch nachgucken)))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'KOORD', 'SIMPX'], 'family': ['DM', 'P', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'VAFIN', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'ADV', 'ADJD', 'ADJD', 'KON', 'ADV', 'VAFIN', 'PPER', 'ART', 'NN', 'VVINF', 'KON', 'PPER', 'VVFIN', 'ADV', 'KOUS', 'PDS', 'ADV', 'ADV', 'VAFIN'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 26), 'span': (1, 17), 'left siblings': ['DM'], 'label': 'P', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM tja)
			(SIMPX da bin ich gerade ja nicht so gut informiert)
			(KOORD aber)
			[01;31m(SIMPX[00m
				(VF da)
				(LK wird)
				(MF es einen flug)
				(VC geben)[01;31m)[00m
			(SIMPX und ich denke auch das der vielleicht abends ist))
		(SU werde ich noch nachgucken)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['DM', 'SIMPX', 'KOORD', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'VAFIN', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'ADV', 'ADJD', 'ADJD', 'KON', 'ADV', 'VAFIN', 'PPER', 'ART', 'NN', 'VVINF', 'KON', 'PPER', 'VVFIN', 'ADV', 'KOUS', 'PDS', 'ADV', 'ADV', 'VAFIN'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 26), 'span': (11, 17), 'left siblings': ['DM', 'SIMPX', 'KOORD'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP tja da bin ich gerade ja nicht so gut informiert aber da wird es einen flug geben und ich denke auch das der vielleicht abends ist werde ich noch nachgucken)

Sentence 662:
10 Initial errors
0 on fringe, 6 iterations
3 Error:PP Attachment
2 Error:Single Word Phrase
2 Error:UNSET move
1 Error:Unary
1 Error:Unary
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU ja mit dem zug ist es moglich)
		(SU
			(SIMPX das ist)
			[01;36m(SIMPX[00m
				[01;31m(SIMPX[00m [01;33m(SIMPX[00m
					(VF stundlich)
					(LK fahrt)
					[01;31m(MF[00m
						(NX ein zug) [01;33mSIMPX)[00m
						[01;33m(PX[00m (PX um achtundfunfzig)[01;31m)[00m[01;31m)[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(NX die volle stunde) [01;33mPX)[00m
						(ADVX immer)[01;31m)[00m
					[01;36m(VXINF[00m [01;36m(VC[00m [01;31m(NX[00m
						(CARD achtundfunfzig)[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;36m)[00m)
		(SU der dauert dann drei stunden und zwanzig)
		(SU man mus da aber bedenken das man in dortmund umsteigen muste)))
Step:PP Attachment
{'new_parent': 'NX', 'new_family': ['PX', 'NX', 'ADVX'], 'mover info': [('PX', (13, 15))], 'old_family': ['NX', 'PX'], 'start left siblings': ['NX'], 'auto preterminals': ('PDS', 'VAFIN', 'ADJD', 'VVFIN', 'ART', 'NN', 'APPR', 'CARD', 'ART', 'ADJA', 'NN', 'ADV', 'CARD'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (7, 20), 'adding node already present': False, 'movers': ['PX'], 'old_parent': 'MF', 'added and moved': True, 'end right siblings': ['NX', 'ADVX'], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'VXINF'}
(TOP
	(TURN
		(SU ja mit dem zug ist es moglich)
		(SU
			(SIMPX das ist)
			[01;36m(SIMPX[00m
				(SIMPX
					(VF stundlich)
					(LK fahrt)
					[01;31m(MF[00m
						(NX
							(ART ein)
							(NN zug))[01;31m)[00m)
				[01;31m(NX[00m
					[01;31m(NX[00m
						(PX um achtundfunfzig die volle stunde)
						(ADVX immer)[01;31m)[00m
					[01;36m(VXINF[00m [01;36m(VC[00m [01;31m(NX[00m
						(CARD achtundfunfzig)[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;36m)[00m)
		(SU der dauert dann drei stunden und zwanzig)
		(SU man mus da aber bedenken das man in dortmund umsteigen muste)))
Step:Single Word Phrase
{'family': ['NX', 'VC'], 'auto preterminal span': (19, 20), 'span': (19, 20), 'subtrees': ['CARD'], 'parent': 'NX', 'over_word': True, 'auto preterminals': ('CARD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('NX', 'VC')}
(TOP
	(TURN
		(SU ja mit dem zug ist es moglich)
		(SU
			(SIMPX das ist)
			[01;36m(SIMPX[00m
				(SIMPX
					(VF stundlich)
					(LK fahrt)
					[01;31m(MF[00m
						(NX
							(ART ein)
							(NN zug))[01;31m)[00m)
				[01;31m(NX[00m
					[01;31m(NX[00m
						(PX um achtundfunfzig die volle stunde)
						(ADVX immer)[01;31m)[00m
					[01;36m(VXINF[00m
						(VC
							(CARD achtundfunfzig))[01;36m)[00m[01;31m)[00m[01;36m)[00m)
		(SU der dauert dann drei stunden und zwanzig)
		(SU man mus da aber bedenken das man in dortmund umsteigen muste)))
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SIMPX', 'SIMPX', 'NX', 'VC'], 'mover info': [('VC', (19, 20))], 'old_family': ['NX', 'VC'], 'start left siblings': ['NX'], 'auto preterminals': ('PDS', 'VAFIN', 'ADJD', 'VVFIN', 'ART', 'NN', 'APPR', 'CARD', 'ART', 'ADJA', 'NN', 'ADV', 'CARD'), 'start right siblings': [], 'end left siblings': ['SIMPX', 'SIMPX', 'NX'], 'auto preterminal span': (7, 20), 'adding node already present': False, 'movers': ['VC'], 'old_parent': 'NX', 'POS confusion': ('CARD', 'CARD'), 'added and moved': True, 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'VXINF'}
(TOP
	(TURN
		(SU ja mit dem zug ist es moglich)
		(SU
			(SIMPX das ist)
			(SIMPX
				(SIMPX
					(VF stundlich)
					(LK fahrt)
					[01;31m(MF[00m
						(NX
							(ART ein)
							(NN zug))[01;31m)[00m)
				[01;31m(NX[00m
					(PX um achtundfunfzig die volle stunde)
					(ADVX immer)[01;31m)[00m
				[01;36m(VXINF[00m
					(VC
						(CARD achtundfunfzig))[01;36m)[00m))
		(SU der dauert dann drei stunden und zwanzig)
		(SU man mus da aber bedenken das man in dortmund umsteigen muste)))
Step:Unary
{'subtrees': ['VC'], 'family': ['SIMPX', 'NX', 'VXINF'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD',), 'right siblings': [], 'left siblings': [(SIMPX (VF (ADJX (ADJD stundlich))) (LK (VXFIN (VVFIN fahrt))) (MF (NX (ART ein) (NN zug)))), (NX (PX (PX (APPR um) (NX (CARD achtundfunfzig))) (NX (ART die) (ADJX (ADJA volle)) (NN stunde))) (ADVX (ADV immer)))], 'auto preterminal span': (19, 20), 'span': (19, 20), 'parent': 'SIMPX', 'label': 'VXINF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU ja mit dem zug ist es moglich)
		(SU
			(SIMPX das ist)
			(SIMPX
				(SIMPX
					(VF stundlich)
					(LK fahrt)
					[01;31m(MF[00m
						(NX
							(ART ein)
							(NN zug))[01;31m)[00m)
				[01;31m(NX[00m
					(PX um achtundfunfzig die volle stunde)
					(ADVX immer)[01;31m)[00m
				(VXINF achtundfunfzig)))
		(SU der dauert dann drei stunden und zwanzig)
		(SU man mus da aber bedenken das man in dortmund umsteigen muste)))
Step:Unary
{'subtrees': ['NX'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJD', 'VVFIN', 'ART', 'NN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (9, 13), 'span': (11, 13), 'left siblings': ['VF', 'LK'], 'label': 'MF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU ja mit dem zug ist es moglich)
		(SU
			(SIMPX das ist)
			(SIMPX
				(SIMPX stundlich fahrt ein zug)
				[01;31m(NX[00m
					(PX um achtundfunfzig die volle stunde)
					(ADVX immer)[01;31m)[00m
				(VXINF achtundfunfzig)))
		(SU der dauert dann drei stunden und zwanzig)
		(SU man mus da aber bedenken das man in dortmund umsteigen muste)))
Step:Modifier Attachment
{'subtrees': ['PX', 'ADVX'], 'family': ['SIMPX', 'NX', 'VXINF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJD', 'VVFIN', 'ART', 'NN', 'APPR', 'CARD', 'ART', 'ADJA', 'NN', 'ADV', 'CARD'), 'right siblings': ['VXINF'], 'parent': 'SIMPX', 'auto preterminal span': (9, 20), 'span': (13, 19), 'left siblings': ['SIMPX'], 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP ja mit dem zug ist es moglich das ist stundlich fahrt ein zug um achtundfunfzig die volle stunde immer achtundfunfzig der dauert dann drei stunden und zwanzig man mus da aber bedenken das man in dortmund umsteigen muste)

Sentence 663:
2 Initial errors
0 on fringe, 1 iterations
2 Error:UNSET move
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU ja selbstverstandlich)
		(SU
			[01;31m(SIMPX[00m
				[01;36m(SIMPX[00m
					(VF sie)
					(LK sagten)
					(MF jetzt eben)[01;36m)[00m
				(NF sie mochten zentral)[01;31m)[00m)))
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SIMPX', 'NF'], 'mover info': [('NF', (6, 9))], 'old_family': ['VF', 'LK', 'MF', 'NF'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'ADV', 'PPER', 'VMFIN', 'ADJD'), 'start right siblings': [], 'end left siblings': ['SIMPX'], 'auto preterminal span': (2, 9), 'movers': ['NF'], 'old_parent': 'SIMPX', 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP ja selbstverstandlich sie sagten jetzt eben sie mochten zentral)

Sentence 664:
3 Initial errors
0 on fringe, 2 iterations
2 Error:Different label
1 Error:Clause Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU hundert mark)
		(SU
			(DM also)
			(SIMPX ich sehe jetzt hier gerade)
			[01;36m(FKOORD[00m
				(SIMPX habe ich einmal das hotel am thielenplatz)
				(SIMPX
					(VF das)
					[01;36m(FKOORD[00m [01;31m(LKMN[00m
						(LKM liegt sehr zentral)
						(KON und)
						(LKM hat auch einen konferenzraum)[01;31m)[00m[01;36m)[00m)[01;36m)[00m
			(SIMPX und da ware die preiskategorie fur ein einzelzimmer zwischen funfundachtzig und hundert dreisig mark))))
Step:Different label
{'family': ['VF', 'FKOORD'], 'auto preterminal span': (16, 24), 'span': (16, 24), 'subtrees': ['LKM', 'KON', 'LKM'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('VVFIN', 'ADV', 'ADJD', 'KON', 'VAFIN', 'ADV', 'ART', 'NN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('LKMN', 'FKOORD')}
(TOP
	(TURN
		(SU hundert mark)
		(SU
			(DM also)
			(SIMPX ich sehe jetzt hier gerade)
			[01;36m(FKOORD[00m
				(SIMPX habe ich einmal das hotel am thielenplatz)
				(SIMPX das liegt sehr zentral und hat auch einen konferenzraum)[01;36m)[00m
			(SIMPX und da ware die preiskategorie fur ein einzelzimmer zwischen funfundachtzig und hundert dreisig mark))))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['DM', 'SIMPX', 'FKOORD', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'PPER', 'ADV', 'ART', 'NN', 'APPRART', 'NE', 'PDS', 'VVFIN', 'ADV', 'ADJD', 'KON', 'VAFIN', 'ADV', 'ART', 'NN'), 'right siblings': [(SIMPX (KOORD (KON und)) (VF (ADVX (ADV da))) (LK (VXFIN (VAFIN ware))) (MF (NX (NX (ART die) (NN preiskategorie)) (PX (APPR fur) (NX (ART ein) (NN einzelzimmer)))) (PX (APPR zwischen) (NX (ADJX (ADJX (CARD funfundachtzig)) (KON und) (ADJX (CARD hundert) (CARD dreisig))) (NN mark)))))], 'left siblings': [(DM (ADVX (ADV also))), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN sehe))) (MF (ADVX (ADV jetzt)) (ADVX (ADV hier)) (ADVX (ADV gerade))))], 'auto preterminal span': (8, 24), 'span': (8, 24), 'parent': 'SU', 'label': 'FKOORD', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP hundert mark also ich sehe jetzt hier gerade habe ich einmal das hotel am thielenplatz das liegt sehr zentral und hat auch einen konferenzraum und da ware die preiskategorie fur ein einzelzimmer zwischen funfundachtzig und hundert dreisig mark)

Sentence 665:
0 Initial errors
0 on fringe, 0 iterations

Sentence 666:
0 Initial errors
0 on fringe, 0 iterations

Sentence 667:
14 Initial errors
0 on fringe, 13 iterations
2 Error:Modifier Attachment
1 Error:UNSET add
1 Error:Unary
1 Error:Single Word Phrase
1 Error:Unary
1 Error:Unary
1 Error:Modifier Attachment
1 Error:Unary
1 Error:Modifier Attachment
1 Error:PP Attachment
1 Error:PP Attachment
1 Error:Unary
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM guten tag)
			[01;36m(DM[00m
				[01;36m(NX[00m
					(DM frau bergmann)
					(DM offergeld)[01;36m)[00m[01;36m)[00m
			(NX mein name))
		(SU
			(SIMPX
				(VF ich)
				(LK habe)
				[01;31m(MF[00m
					[01;31m(NX[00m
						(ART ein)
						(ADJX paar)
						[01;31m(NX[00m
							[01;31m(NX[00m
								(NN fragen)
								[01;33m(PX (NF[00m (PX an sie)[01;31m)[00m
							(PX
								[01;36m(LK[00m
									[01;36m(VXFIN[00m
										(APPR bezuglich)[01;36m)[00m[01;36m)[00m
								(NX einer geschaftsreise nach hannover))[01;31m)[00m[01;31m)[00m[01;31m)[00m)) [01;33mNF) PX)[00m
		[01;36m(SIMPX[00m
			(SU
				[01;36m(VF[00m
					(ADVX
						(ADVX erst)
						(ADVX mal))[01;36m)[00m
				[01;31m(SIMPX[00m
					(LK ist)
					(MF
						[01;36m(MF[00m
							(NX es)
							(ADVX grundsatzlich)[01;36m)[00m
						(ADJX moglich))
					(NF mit dem flugzeug nach hannover zu fliegen)[01;31m)[00m)[01;36m)[00m))
Step:Modifier Attachment
{'new_parent': 'SIMPX', 'new_family': ['ADVX', 'LK', 'MF', 'NF'], 'mover info': [('ADVX', (19, 21))], 'old_family': ['ADVX', 'SIMPX'], 'start left siblings': [], 'auto preterminals': ('ADV', 'ADV', 'VAFIN', 'PPER', 'ADV', 'ADJD', 'APPR', 'ART', 'NN', 'APPR', 'NE', 'PTKZU', 'VVINF'), 'start right siblings': ['SIMPX'], 'end left siblings': [], 'auto preterminal span': (19, 32), 'movers': ['ADVX'], 'old_parent': 'SU', 'end right siblings': ['LK', 'MF', 'NF'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU
			(DM guten tag)
			[01;36m(DM[00m
				[01;36m(NX[00m
					(DM frau bergmann)
					(DM offergeld)[01;36m)[00m[01;36m)[00m
			(NX mein name))
		(SU
			(SIMPX
				(VF ich)
				(LK habe)
				[01;31m(MF[00m
					[01;31m(NX[00m
						(ART ein)
						(ADJX paar)
						[01;31m(NX[00m
							[01;31m(NX[00m
								(NN fragen)
								[01;33m(PX (NF[00m (PX an sie)[01;31m)[00m
							(PX
								[01;36m(LK[00m
									[01;36m(VXFIN[00m
										(APPR bezuglich)[01;36m)[00m[01;36m)[00m
								(NX einer geschaftsreise nach hannover))[01;31m)[00m[01;31m)[00m[01;31m)[00m)) [01;33mNF) PX)[00m
		(SU
			(SIMPX
				[01;36m(VF[00m
					(ADVX
						(ADVX erst)
						(ADVX mal))[01;36m)[00m
				(LK ist)
				(MF
					[01;36m(MF[00m
						(NX es)
						(ADVX grundsatzlich)[01;36m)[00m
					(ADJX moglich))
				(NF mit dem flugzeug nach hannover zu fliegen)))))
Step:UNSET add
{'subtrees': ['DM', 'DM'], 'family': ['DM', 'NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'NE', 'NE'), 'right siblings': [(NX (PPOSAT mein) (NN name))], 'left siblings': [(DM (NX (ADJX (ADJA guten)) (NN tag)))], 'auto preterminal span': (2, 5), 'span': (2, 5), 'parent': 'SU', 'label': 'NX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM guten tag)
			[01;36m(DM[00m
				(NX
					(DM frau bergmann)
					(DM offergeld))[01;36m)[00m
			(NX mein name))
		(SU
			(SIMPX
				(VF ich)
				(LK habe)
				[01;31m(MF[00m
					[01;31m(NX[00m
						(ART ein)
						(ADJX paar)
						[01;31m(NX[00m
							[01;31m(NX[00m
								(NN fragen)
								[01;33m(PX (NF[00m (PX an sie)[01;31m)[00m
							(PX
								[01;36m(LK[00m
									[01;36m(VXFIN[00m
										(APPR bezuglich)[01;36m)[00m[01;36m)[00m
								(NX einer geschaftsreise nach hannover))[01;31m)[00m[01;31m)[00m[01;31m)[00m)) [01;33mNF) PX)[00m
		(SU
			(SIMPX
				[01;36m(VF[00m
					(ADVX
						(ADVX erst)
						(ADVX mal))[01;36m)[00m
				(LK ist)
				(MF
					[01;36m(MF[00m
						(NX es)
						(ADVX grundsatzlich)[01;36m)[00m
					(ADJX moglich))
				(NF mit dem flugzeug nach hannover zu fliegen)))))
Step:Unary
{'subtrees': ['NX'], 'family': ['DM', 'DM', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'NE', 'NE'), 'right siblings': [(NX (PPOSAT mein) (NN name))], 'left siblings': [(DM (NX (ADJX (ADJA guten)) (NN tag)))], 'auto preterminal span': (2, 5), 'span': (2, 5), 'parent': 'SU', 'label': 'DM', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU guten tag frau bergmann offergeld mein name)
		(SU
			(SIMPX
				(VF ich)
				(LK habe)
				[01;31m(MF[00m
					[01;31m(NX[00m
						(ART ein)
						(ADJX paar)
						[01;31m(NX[00m
							[01;31m(NX[00m
								(NN fragen)
								[01;33m(PX (NF[00m (PX an sie)[01;31m)[00m
							(PX
								[01;36m(LK[00m
									[01;36m(VXFIN[00m
										(APPR bezuglich)[01;36m)[00m[01;36m)[00m
								(NX einer geschaftsreise nach hannover))[01;31m)[00m[01;31m)[00m[01;31m)[00m)) [01;33mNF) PX)[00m
		(SU
			(SIMPX
				[01;36m(VF[00m
					(ADVX
						(ADVX erst)
						(ADVX mal))[01;36m)[00m
				(LK ist)
				(MF
					[01;36m(MF[00m
						(NX es)
						(ADVX grundsatzlich)[01;36m)[00m
					(ADJX moglich))
				(NF mit dem flugzeug nach hannover zu fliegen)))))
Step:Single Word Phrase
{'subtrees': ['APPR'], 'family': ['VXFIN', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('APPR',), 'right siblings': [(NX (NX (ART einer) (NN geschaftsreise)) (PX (APPR nach) (NX (NE hannover))))], 'left siblings': [], 'auto preterminal span': (14, 15), 'span': (14, 15), 'parent': 'PX', 'label': 'VXFIN', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SU guten tag frau bergmann offergeld mein name)
		(SU
			(SIMPX
				(VF ich)
				(LK habe)
				[01;31m(MF[00m
					[01;31m(NX[00m
						(ART ein)
						(ADJX paar)
						[01;31m(NX[00m
							[01;31m(NX[00m
								(NN fragen)
								[01;33m(PX (NF[00m (PX an sie)[01;31m)[00m
							(PX
								[01;36m(LK[00m
									(VXFIN
										(APPR bezuglich))[01;36m)[00m
								(NX einer geschaftsreise nach hannover))[01;31m)[00m[01;31m)[00m[01;31m)[00m)) [01;33mNF) PX)[00m
		(SU
			(SIMPX
				[01;36m(VF[00m
					(ADVX
						(ADVX erst)
						(ADVX mal))[01;36m)[00m
				(LK ist)
				(MF
					[01;36m(MF[00m
						(NX es)
						(ADVX grundsatzlich)[01;36m)[00m
					(ADJX moglich))
				(NF mit dem flugzeug nach hannover zu fliegen)))))
Step:Unary
{'subtrees': ['VXFIN'], 'family': ['LK', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR',), 'right siblings': [(NX (NX (ART einer) (NN geschaftsreise)) (PX (APPR nach) (NX (NE hannover))))], 'left siblings': [], 'auto preterminal span': (14, 15), 'span': (14, 15), 'parent': 'PX', 'label': 'LK', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU guten tag frau bergmann offergeld mein name)
		(SU
			(SIMPX
				(VF ich)
				(LK habe)
				[01;31m(MF[00m
					[01;31m(NX[00m
						(ART ein)
						(ADJX paar)
						[01;31m(NX[00m
							[01;31m(NX[00m
								(NN fragen)
								[01;33m(PX (NF[00m (PX an sie)[01;31m)[00m
							(PX bezuglich einer geschaftsreise nach hannover)[01;31m)[00m[01;31m)[00m[01;31m)[00m)) [01;33mNF) PX)[00m
		(SU
			(SIMPX
				[01;36m(VF[00m
					(ADVX
						(ADVX erst)
						(ADVX mal))[01;36m)[00m
				(LK ist)
				(MF
					[01;36m(MF[00m
						(NX es)
						(ADVX grundsatzlich)[01;36m)[00m
					(ADJX moglich))
				(NF mit dem flugzeug nach hannover zu fliegen)))))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['VF', 'LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV'), 'right siblings': [(LK (VXFIN (VAFIN ist))), (MF (NX (PPER es)) (ADVX (ADV grundsatzlich)) (ADJX (ADJD moglich))), (NF (SIMPX (MF (PX (APPR mit) (NX (ART dem) (NN flugzeug))) (PX (APPR nach) (NX (NE hannover)))) (VC (VXINF (PTKZU zu) (VVINF fliegen)))))], 'left siblings': [], 'auto preterminal span': (19, 21), 'span': (19, 21), 'parent': 'SIMPX', 'label': 'VF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU guten tag frau bergmann offergeld mein name)
		(SU
			(SIMPX
				(VF ich)
				(LK habe)
				[01;31m(MF[00m
					[01;31m(NX[00m
						(ART ein)
						(ADJX paar)
						[01;31m(NX[00m
							[01;31m(NX[00m
								(NN fragen)
								[01;33m(PX (NF[00m (PX an sie)[01;31m)[00m
							(PX bezuglich einer geschaftsreise nach hannover)[01;31m)[00m[01;31m)[00m[01;31m)[00m)) [01;33mNF) PX)[00m
		(SU
			(SIMPX
				(VF erst mal)
				(LK ist)
				(MF
					[01;36m(MF[00m
						(NX es)
						(ADVX grundsatzlich)[01;36m)[00m
					(ADJX moglich))
				(NF mit dem flugzeug nach hannover zu fliegen)))))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADVX'], 'family': ['MF', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV'), 'right siblings': [(ADJX (ADJD moglich))], 'left siblings': [], 'auto preterminal span': (22, 24), 'span': (22, 24), 'parent': 'MF', 'label': 'MF', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU guten tag frau bergmann offergeld mein name)
		(SU
			(SIMPX
				(VF ich)
				(LK habe)
				[01;31m(MF[00m
					[01;31m(NX[00m
						(ART ein)
						(ADJX paar)
						[01;31m(NX[00m
							[01;31m(NX[00m
								(NN fragen)
								[01;33m(PX (NF[00m (PX an sie)[01;31m)[00m
							(PX bezuglich einer geschaftsreise nach hannover)[01;31m)[00m[01;31m)[00m[01;31m)[00m)) [01;33mNF) PX)[00m
		(SU erst mal ist es grundsatzlich moglich mit dem flugzeug nach hannover zu fliegen)))
Step:Unary
{'subtrees': ['NX'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'ART', 'PIDAT', 'NN', 'APPR', 'PPER', 'APPR', 'ART', 'NN', 'APPR', 'NE'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (7, 19), 'span': (9, 19), 'left siblings': ['VF', 'LK'], 'label': 'MF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU guten tag frau bergmann offergeld mein name)
		(SU
			(SIMPX
				(VF ich)
				(LK habe)
				[01;31m(NX[00m
					(ART ein)
					(ADJX paar)
					[01;31m(NX[00m
						[01;31m(NX[00m
							(NN fragen)
							[01;33m(PX (NF[00m (PX an sie)[01;31m)[00m
						(PX bezuglich einer geschaftsreise nach hannover)[01;31m)[00m[01;31m)[00m)) [01;33mNF) PX)[00m
		(SU erst mal ist es grundsatzlich moglich mit dem flugzeug nach hannover zu fliegen)))
Step:Modifier Attachment
{'subtrees': ['ART', 'ADJX', 'NX'], 'family': ['VF', 'LK', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'ART', 'PIDAT', 'NN', 'APPR', 'PPER', 'APPR', 'ART', 'NN', 'APPR', 'NE'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (7, 19), 'span': (9, 19), 'left siblings': ['VF', 'LK'], 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU guten tag frau bergmann offergeld mein name)
		(SU
			(SIMPX
				(VF ich)
				(LK habe)
				(ART ein)
				(ADJX paar)
				[01;31m(NX[00m
					[01;31m(NX[00m
						(NN fragen)
						[01;33m(PX (NF[00m (PX an sie)[01;31m)[00m
					(PX bezuglich einer geschaftsreise nach hannover)[01;31m)[00m)) [01;33mNF) PX)[00m
		(SU erst mal ist es grundsatzlich moglich mit dem flugzeug nach hannover zu fliegen)))
Step:PP Attachment
{'subtrees': ['NN', 'PX'], 'family': ['NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'APPR', 'PPER', 'APPR', 'ART', 'NN', 'APPR', 'NE'), 'right siblings': ['PX'], 'parent': 'NX', 'auto preterminal span': (11, 19), 'span': (11, 14), 'left siblings': [], 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU guten tag frau bergmann offergeld mein name)
		(SU
			(SIMPX
				(VF ich)
				(LK habe)
				(ART ein)
				(ADJX paar)
				[01;31m(NX[00m
					(NN fragen)
					[01;36m(PX[00m
						[01;36m(NF[00m
							(PX an sie)
							(PX bezuglich einer geschaftsreise nach hannover)[01;36m)[00m[01;36m)[00m[01;31m)[00m))
		(SU erst mal ist es grundsatzlich moglich mit dem flugzeug nach hannover zu fliegen)))
Step:PP Attachment
{'subtrees': ['PX', 'PX'], 'family': ['NN', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'PPER', 'APPR', 'ART', 'NN', 'APPR', 'NE'), 'right siblings': [], 'left siblings': [(NN fragen)], 'auto preterminal span': (12, 19), 'span': (12, 19), 'parent': 'NX', 'label': 'NF', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU guten tag frau bergmann offergeld mein name)
		(SU
			(SIMPX
				(VF ich)
				(LK habe)
				(ART ein)
				(ADJX paar)
				[01;31m(NX[00m
					(NN fragen)
					[01;36m(PX[00m
						(NF
							(PX an sie)
							(PX bezuglich einer geschaftsreise nach hannover))[01;36m)[00m[01;31m)[00m))
		(SU erst mal ist es grundsatzlich moglich mit dem flugzeug nach hannover zu fliegen)))
Step:Unary
{'subtrees': ['NF'], 'family': ['NN', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'PPER', 'APPR', 'ART', 'NN', 'APPR', 'NE'), 'right siblings': [], 'left siblings': [(NN fragen)], 'auto preterminal span': (12, 19), 'span': (12, 19), 'parent': 'NX', 'label': 'PX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU guten tag frau bergmann offergeld mein name)
		(SU
			(SIMPX
				(VF ich)
				(LK habe)
				(ART ein)
				(ADJX paar)
				[01;31m(NX[00m
					(NN fragen)
					(PX an sie bezuglich einer geschaftsreise nach hannover)[01;31m)[00m))
		(SU erst mal ist es grundsatzlich moglich mit dem flugzeug nach hannover zu fliegen)))
Step:PP Attachment
{'subtrees': ['NN', 'PX'], 'family': ['VF', 'LK', 'ART', 'ADJX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'ART', 'PIDAT', 'NN', 'APPR', 'PPER', 'APPR', 'ART', 'NN', 'APPR', 'NE'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (7, 19), 'span': (11, 19), 'left siblings': ['VF', 'LK', 'ART', 'ADJX'], 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP guten tag frau bergmann offergeld mein name ich habe ein paar fragen an sie bezuglich einer geschaftsreise nach hannover erst mal ist es grundsatzlich moglich mit dem flugzeug nach hannover zu fliegen)

Sentence 668:
7 Initial errors
0 on fringe, 5 iterations
2 Error:Different label
2 Error:Different label
1 Error:Unary
1 Error:Single Word Phrase
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;36m(ADVX[00m
			(SU
				[01;31m(PX[00m
					(PX am wochenende)
					(ADVX gar nicht)[01;31m)[00m)[01;36m)[00m
		(SU ja nee ich mochte montags fliegen sieben uhr zehn past mir auch sehr gut ich mus um zehn uhr bei einer konferenz sein)
		[01;36m(SIMPX[00m
			(SU
				(SIMPX ware die frage)
				(SIMPX
					(VF ich)
					(LK brauchte)
					(MF ein hotel)
					[01;36m(SIMPX[00m
						(NF
							[01;31m(R[00m
								(C was)
								(MF
									[01;31m(ADJX[00m
										(ADVX
											(ADVX moglichst)
											[01;36m(ADVX[00m
												(ADV zentral)[01;36m)[00m)
										(ADJD gelegen)[01;31m)[00m)
								(VC ist)[01;31m)[00m)[01;36m)[00m))[01;36m)[00m
		(SU wie lange ware ungefahr die transferzeit vom flughafen zum hotel)))
Step:Different label
{'family': ['ADVX'], 'auto preterminal span': (0, 4), 'span': (0, 4), 'subtrees': ['PX', 'ADVX'], 'parent': 'SU', 'over_word': False, 'auto preterminals': ('APPRART', 'NN', 'ADV', 'PTKNEG'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('PX', 'ADVX')}
(TOP
	(TURN
		(SU am wochenende gar nicht)
		(SU ja nee ich mochte montags fliegen sieben uhr zehn past mir auch sehr gut ich mus um zehn uhr bei einer konferenz sein)
		[01;36m(SIMPX[00m
			(SU
				(SIMPX ware die frage)
				(SIMPX
					(VF ich)
					(LK brauchte)
					(MF ein hotel)
					[01;36m(SIMPX[00m
						(NF
							[01;31m(R[00m
								(C was)
								(MF
									[01;31m(ADJX[00m
										(ADVX
											(ADVX moglichst)
											[01;36m(ADVX[00m
												(ADV zentral)[01;36m)[00m)
										(ADJD gelegen)[01;31m)[00m)
								(VC ist)[01;31m)[00m)[01;36m)[00m))[01;36m)[00m
		(SU wie lange ware ungefahr die transferzeit vom flughafen zum hotel)))
Step:Different label
{'family': ['SIMPX'], 'auto preterminal span': (34, 39), 'span': (34, 39), 'subtrees': ['C', 'MF', 'VC'], 'parent': 'NF', 'over_word': False, 'auto preterminals': ('PRELS', 'ADV', 'ADV', 'ADJD', 'VAFIN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('R', 'SIMPX')}
(TOP
	(TURN
		(SU am wochenende gar nicht)
		(SU ja nee ich mochte montags fliegen sieben uhr zehn past mir auch sehr gut ich mus um zehn uhr bei einer konferenz sein)
		[01;36m(SIMPX[00m
			(SU
				(SIMPX ware die frage)
				(SIMPX
					(VF ich)
					(LK brauchte)
					(MF ein hotel)
					(NF
						(SIMPX
							(C was)
							(MF
								[01;31m(ADJX[00m
									(ADVX
										(ADVX moglichst)
										[01;36m(ADVX[00m
											(ADV zentral)[01;36m)[00m)
									(ADJD gelegen)[01;31m)[00m)
							(VC ist)))))[01;36m)[00m
		(SU wie lange ware ungefahr die transferzeit vom flughafen zum hotel)))
Step:Unary
{'subtrees': ['SU'], 'family': ['SU', 'SU', 'SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'ART', 'NN', 'PPER', 'VVFIN', 'ART', 'NN', 'PRELS', 'ADV', 'ADV', 'ADJD', 'VAFIN'), 'right siblings': [(SU (SIMPX (VF (ADJX (ADVX (PWAV wie)) (ADJD lange))) (LK (VXFIN (VAFIN ware))) (MF (ADVX (ADV ungefahr)) (NX (NX (ART die) (NN transferzeit)) (PX (PX (APPRART vom) (NX (NN flughafen))) (PX (APPRART zum) (NX (NN hotel))))))))], 'left siblings': [(SU (ADVX (PX (APPRART am) (NX (NN wochenende))) (ADVX (ADVX (ADV gar)) (PTKNEG nicht)))), (SU (DM (PTKANT ja)) (DM (PTKANT nee)) (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VMFIN mochte))) (MF (ADVX (ADV montags))) (VC (VXINF (VVINF fliegen)))) (SIMPX (VF (NX (NX (ADJX (CARD sieben)) (NN uhr)) (ADJX (CARD zehn)))) (LK (VXFIN (VVFIN past))) (MF (NX (PPER mir)) (ADVX (ADV auch)) (ADJX (ADVX (ADV sehr)) (ADJD gut)))) (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VMFIN mus))) (MF (PX (APPR um) (NX (ADJX (CARD zehn)) (NN uhr))) (PX (APPR bei) (NX (ART einer) (NN konferenz)))) (VC (VXINF (VAINF sein)))))], 'auto preterminal span': (27, 39), 'span': (27, 39), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU am wochenende gar nicht)
		(SU ja nee ich mochte montags fliegen sieben uhr zehn past mir auch sehr gut ich mus um zehn uhr bei einer konferenz sein)
		(SIMPX
			(SU
				(SIMPX ware die frage)
				(SIMPX
					(VF ich)
					(LK brauchte)
					(MF ein hotel)
					(NF
						(SIMPX
							(C was)
							(MF
								[01;31m(ADJX[00m
									(ADVX
										(ADVX moglichst)
										[01;36m(ADVX[00m
											(ADV zentral)[01;36m)[00m)
									(ADJD gelegen)[01;31m)[00m)
							(VC ist))))))
		(SU wie lange ware ungefahr die transferzeit vom flughafen zum hotel)))
Step:Single Word Phrase
{'subtrees': ['ADV'], 'family': ['ADVX', 'ADVX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADV',), 'right siblings': [], 'left siblings': [(ADVX (ADV moglichst))], 'auto preterminal span': (36, 37), 'span': (36, 37), 'parent': 'ADVX', 'label': 'ADVX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SU am wochenende gar nicht)
		(SU ja nee ich mochte montags fliegen sieben uhr zehn past mir auch sehr gut ich mus um zehn uhr bei einer konferenz sein)
		(SIMPX
			(SU
				(SIMPX ware die frage)
				(SIMPX
					(VF ich)
					(LK brauchte)
					(MF ein hotel)
					(NF
						(SIMPX
							(C was)
							(MF
								[01;31m(ADJX[00m
									(ADVX moglichst zentral)
									(ADJD gelegen)[01;31m)[00m)
							(VC ist))))))
		(SU wie lange ware ungefahr die transferzeit vom flughafen zum hotel)))
Step:Unary
{'subtrees': ['ADVX', 'ADJD'], 'family': ['ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'ADJD'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (35, 38), 'span': (35, 38), 'left siblings': [], 'label': 'ADJX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP am wochenende gar nicht ja nee ich mochte montags fliegen sieben uhr zehn past mir auch sehr gut ich mus um zehn uhr bei einer konferenz sein ware die frage ich brauchte ein hotel was moglichst zentral gelegen ist wie lange ware ungefahr die transferzeit vom flughafen zum hotel)

Sentence 669:
12 Initial errors
0 on fringe, 7 iterations
4 Error:UNSET move
2 Error:Clause Attachment
2 Error:PP Attachment
1 Error:Single Word Phrase
1 Error:Clause Attachment
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU halbe stunde)
		(SU ja sehr gut)
		(SU [01;33m(SIMPX (SIMPX[00m
			[01;31m(SIMPX[00m
				(VF dann)
				(LK ware)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX
						(PPER ich))[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				[01;31m(SIMPX[00m
					[01;31m(VF[00m
						(PX
							(APPR um)
							(NX sieben uhr zehn))[01;31m)[00m [01;33mMF) SIMPX)[00m
					(LK wurde)
					(MF ich)
					(VC losfliegen)[01;31m)[00m [01;33mSIMPX)[00m
				[01;36m(KOORD[00m
					(KON und)[01;36m)[00m
				[01;31m(SIMPX[00m
					(VF acht uhr zehn)
					(LK ware)
					(MF [01;33m(MF[00m
						(NX ich)
						(ADVX dann)
						[01;31m(PX[00m
							(PX in hannover) [01;33mMF)[00m
							(PX am flughafen)[01;31m)[00m)[01;31m)[00m[01;31m)[00m
			(DM richtig))))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['NX', 'VF'], 'mover info': [('VF', (8, 12))], 'old_family': ['VF', 'LK', 'MF', 'VC'], 'start left siblings': [], 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'APPR', 'CARD', 'NN', 'CARD', 'VAFIN', 'PPER', 'VVINF', 'KON', 'CARD', 'NN', 'CARD', 'VAFIN', 'PPER', 'ADV', 'APPR', 'NE', 'APPRART', 'NN', 'ITJ'), 'start right siblings': ['LK', 'MF', 'VC'], 'end left siblings': ['NX'], 'auto preterminal span': (5, 27), 'movers': ['VF'], 'old_parent': 'SIMPX', 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU halbe stunde)
		(SU ja sehr gut)
		(SU [01;33m(SIMPX[00m
			(SIMPX
				(VF dann)
				(LK ware)
				(MF
					(NX ich)
					[01;31m(VF[00m
						(PX
							(APPR um)
							(NX sieben uhr zehn))[01;31m)[00m))
			[01;31m(SIMPX[00m
				[01;31m(SIMPX[00m
					(LK wurde)
					(MF ich)
					(VC losfliegen)[01;31m)[00m [01;33mSIMPX)[00m
				[01;36m(KOORD[00m
					(KON und)[01;36m)[00m
				[01;31m(SIMPX[00m
					(VF acht uhr zehn)
					(LK ware)
					(MF [01;33m(MF[00m
						(NX ich)
						(ADVX dann)
						[01;31m(PX[00m
							(PX in hannover) [01;33mMF)[00m
							(PX am flughafen)[01;31m)[00m)[01;31m)[00m[01;31m)[00m
			(DM richtig))))
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['SIMPX', 'LK', 'MF', 'VC'], 'mover info': [('SIMPX', (5, 12))], 'old_family': ['SIMPX', 'SIMPX', 'DM'], 'start left siblings': [], 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'APPR', 'CARD', 'NN', 'CARD', 'VAFIN', 'PPER', 'VVINF', 'KON', 'CARD', 'NN', 'CARD', 'VAFIN', 'PPER', 'ADV', 'APPR', 'NE', 'APPRART', 'NN', 'ITJ'), 'start right siblings': ['SIMPX', 'DM'], 'end left siblings': [], 'auto preterminal span': (5, 27), 'movers': ['SIMPX'], 'old_parent': 'SU', 'end right siblings': ['LK', 'MF', 'VC'], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU halbe stunde)
		(SU ja sehr gut)
		(SU
			[01;31m(SIMPX[00m
				(SIMPX
					(SIMPX
						(VF dann)
						(LK ware)
						(MF
							(NX ich)
							[01;31m(VF[00m
								(PX
									(APPR um)
									(NX sieben uhr zehn))[01;31m)[00m))
					(LK wurde)
					(MF ich)
					(VC losfliegen))
				[01;36m(KOORD[00m
					(KON und)[01;36m)[00m
				[01;31m(SIMPX[00m
					(VF acht uhr zehn)
					(LK ware)
					(MF [01;33m(MF[00m
						(NX ich)
						(ADVX dann)
						[01;31m(PX[00m
							(PX in hannover) [01;33mMF)[00m
							(PX am flughafen)[01;31m)[00m)[01;31m)[00m[01;31m)[00m
			(DM richtig))))
Step:PP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'ADVX', 'PX', 'PX'], 'mover info': [('PX', (22, 24))], 'old_family': ['PX', 'PX'], 'start left siblings': [], 'auto preterminals': ('PPER', 'ADV', 'APPR', 'NE', 'APPRART', 'NN'), 'start right siblings': ['PX'], 'end left siblings': ['NX', 'ADVX'], 'auto preterminal span': (20, 26), 'adding node already present': False, 'movers': ['PX'], 'old_parent': 'PX', 'added and moved': True, 'end right siblings': ['PX'], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'MF'}
(TOP
	(TURN
		(SU halbe stunde)
		(SU ja sehr gut)
		(SU
			[01;31m(SIMPX[00m
				(SIMPX
					(SIMPX
						(VF dann)
						(LK ware)
						(MF
							(NX ich)
							[01;31m(VF[00m
								(PX
									(APPR um)
									(NX sieben uhr zehn))[01;31m)[00m))
					(LK wurde)
					(MF ich)
					(VC losfliegen))
				[01;36m(KOORD[00m
					(KON und)[01;36m)[00m
				[01;31m(SIMPX[00m
					(VF acht uhr zehn)
					(LK ware)
					(MF ich dann in hannover am flughafen)[01;31m)[00m[01;31m)[00m
			(DM richtig))))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['SIMPX', 'KOORD', 'SIMPX'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON',), 'right siblings': [(SIMPX (VF (NX (NX (ADJX (CARD acht)) (NN uhr)) (ADJX (CARD zehn)))) (LK (VXFIN (VAFIN ware))) (MF (MF (NX (PPER ich)) (ADVX (ADV dann)) (PX (APPR in) (NX (NE hannover)))) (PX (APPRART am) (NX (NN flughafen)))))], 'left siblings': [(SIMPX (SIMPX (VF (ADVX (ADV dann))) (LK (VXFIN (VAFIN ware))) (MF (NX (PPER ich)) (VF (PX (APPR um) (NX (NX (ADJX (CARD sieben)) (NN uhr)) (ADJX (CARD zehn))))))) (LK (VXFIN (VAFIN wurde))) (MF (NX (PPER ich))) (VC (VXINF (VVINF losfliegen))))], 'auto preterminal span': (15, 16), 'span': (15, 16), 'parent': 'SIMPX', 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SU halbe stunde)
		(SU ja sehr gut)
		(SU
			[01;31m(SIMPX[00m
				(SIMPX
					(SIMPX
						(VF dann)
						(LK ware)
						(MF
							(NX ich)
							[01;31m(VF[00m
								(PX
									(APPR um)
									(NX sieben uhr zehn))[01;31m)[00m))
					(LK wurde)
					(MF ich)
					(VC losfliegen))
				(KOORD und)
				[01;31m(SIMPX[00m
					(VF acht uhr zehn)
					(LK ware)
					(MF ich dann in hannover am flughafen)[01;31m)[00m[01;31m)[00m
			(DM richtig))))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'KOORD', 'SIMPX'], 'family': ['SIMPX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'APPR', 'CARD', 'NN', 'CARD', 'VAFIN', 'PPER', 'VVINF', 'KON', 'CARD', 'NN', 'CARD', 'VAFIN', 'PPER', 'ADV', 'APPR', 'NE', 'APPRART', 'NN', 'ITJ'), 'right siblings': ['DM'], 'parent': 'SU', 'auto preterminal span': (5, 27), 'span': (5, 26), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU halbe stunde)
		(SU ja sehr gut)
		(SU
			(SIMPX
				(SIMPX
					(VF dann)
					(LK ware)
					(MF
						(NX ich)
						[01;31m(VF[00m
							(PX
								(APPR um)
								(NX sieben uhr zehn))[01;31m)[00m))
				(LK wurde)
				(MF ich)
				(VC losfliegen))
			(KOORD und)
			[01;31m(SIMPX[00m
				(VF acht uhr zehn)
				(LK ware)
				(MF ich dann in hannover am flughafen)[01;31m)[00m
			(DM richtig))))
Step:Unary
{'subtrees': ['PX'], 'family': ['NX', 'VF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'APPR', 'CARD', 'NN', 'CARD'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (7, 12), 'span': (8, 12), 'left siblings': ['NX'], 'label': 'VF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU halbe stunde)
		(SU ja sehr gut)
		(SU
			(SIMPX dann ware ich um sieben uhr zehn wurde ich losfliegen)
			(KOORD und)
			[01;31m(SIMPX[00m
				(VF acht uhr zehn)
				(LK ware)
				(MF ich dann in hannover am flughafen)[01;31m)[00m
			(DM richtig))))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['SIMPX', 'KOORD', 'SIMPX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'APPR', 'CARD', 'NN', 'CARD', 'VAFIN', 'PPER', 'VVINF', 'KON', 'CARD', 'NN', 'CARD', 'VAFIN', 'PPER', 'ADV', 'APPR', 'NE', 'APPRART', 'NN', 'ITJ'), 'right siblings': ['DM'], 'parent': 'SU', 'auto preterminal span': (5, 27), 'span': (16, 26), 'left siblings': ['SIMPX', 'KOORD'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP halbe stunde ja sehr gut dann ware ich um sieben uhr zehn wurde ich losfliegen und acht uhr zehn ware ich dann in hannover am flughafen richtig)

Sentence 670:
3 Initial errors
0 on fringe, 2 iterations
2 Error:Clause Attachment
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU gut)
		(SU wie sieht das mit den buchungsterminen aus)
		(SU ist das generell moglich)
		[01;36m(SIMPX[00m
			(SU
				[01;31m(SIMPX[00m
					(C das)
					(MF ich am siebten juli)[01;31m)[00m
				[01;31m(SIMPX[00m
					(VF das)
					(LK ist)
					(MF montags)[01;31m)[00m)[01;36m)[00m))
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['SIMPX', 'VF', 'LK', 'MF'], 'mover info': [('SIMPX', (12, 17))], 'old_family': ['SIMPX', 'SIMPX'], 'start left siblings': [], 'auto preterminals': ('KOUS', 'PPER', 'APPRART', 'ADJA', 'NN', 'PDS', 'VAFIN', 'ADV'), 'start right siblings': ['SIMPX'], 'end left siblings': [], 'auto preterminal span': (12, 20), 'movers': ['SIMPX'], 'old_parent': 'SU', 'end right siblings': ['VF', 'LK', 'MF'], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU gut)
		(SU wie sieht das mit den buchungsterminen aus)
		(SU ist das generell moglich)
		(SU
			(SIMPX
				[01;31m(SIMPX[00m
					(C das)
					(MF ich am siebten juli)[01;31m)[00m
				(VF das)
				(LK ist)
				(MF montags)))))
Step:UNSET remove
{'subtrees': ['C', 'MF'], 'family': ['SIMPX', 'VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'APPRART', 'ADJA', 'NN', 'PDS', 'VAFIN', 'ADV'), 'right siblings': ['VF', 'LK', 'MF'], 'parent': 'SIMPX', 'auto preterminal span': (12, 20), 'span': (12, 17), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP gut wie sieht das mit den buchungsterminen aus ist das generell moglich das ich am siebten juli das ist montags)

Sentence 671:
8 Initial errors
0 on fringe, 5 iterations
4 Error:UNSET move
1 Error:UNSET add
1 Error:Unary
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;36m(SU[00m
			[01;36m(DM[00m
				[01;36m(ADJX[00m
					(SU
						[01;31m(DM[00m
							[01;31m(ADJX[00m
								(ADVX sehr)
								(ADJD gut)[01;31m)[00m[01;31m)[00m)
					[01;36m(PX[00m
						(SU
							[01;31m(DM[00m
								[01;31m(ADJX[00m
									(ADVX sehr)
									(ADJD gut)[01;31m)[00m[01;31m)[00m)[01;36m)[00m[01;36m)[00m[01;36m)[00m[01;36m)[00m
		(SU vier tage mochte ich bleiben das ware dann bis zum zehnten juli)
		(SU konnen sie da fur mich eine buchung vornehmen)))
Step:UNSET move
{'new_parent': 'ADJX', 'new_family': ['SU', 'ADVX', 'ADJD'], 'mover info': [('SU', (0, 2))], 'old_family': ['SU', 'SU', 'SU', 'SU'], 'start left siblings': [], 'auto preterminals': ('ADV', 'ADJD', 'ADV', 'ADJD', 'CARD', 'NN', 'VMFIN', 'PPER', 'VVINF', 'PDS', 'VAFIN', 'ADV', 'APPR', 'APPRART', 'ADJA', 'NN', 'VMFIN', 'PPER', 'ADV', 'APPR', 'PPER', 'ART', 'NN', 'VVINF'), 'start right siblings': ['SU', 'SU', 'SU'], 'end left siblings': [], 'auto preterminal span': (0, 24), 'movers': ['SU'], 'old_parent': 'TURN', 'end right siblings': ['ADVX', 'ADJD'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			(DM
				(ADJX
					(SU
						[01;31m(DM[00m
							[01;31m(ADJX[00m
								(ADVX sehr)
								(ADJD gut)[01;31m)[00m[01;31m)[00m)
					[01;36m(PX[00m
						[01;36m(SU[00m
							(ADVX sehr)
							(ADJD gut)[01;36m)[00m[01;36m)[00m)))
		(SU vier tage mochte ich bleiben das ware dann bis zum zehnten juli)
		(SU konnen sie da fur mich eine buchung vornehmen)))
Step:UNSET add
{'subtrees': ['ADVX', 'ADJD'], 'family': ['SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADJD'), 'right siblings': [], 'left siblings': [(SU (DM (ADJX (ADVX (ADV sehr)) (ADJD gut))))], 'auto preterminal span': (2, 4), 'span': (2, 4), 'parent': 'ADJX', 'label': 'SU', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM
				(ADJX
					(SU
						[01;31m(DM[00m
							[01;31m(ADJX[00m
								(ADVX sehr)
								(ADJD gut)[01;31m)[00m[01;31m)[00m)
					[01;36m(PX[00m
						(SU
							(ADVX sehr)
							(ADJD gut))[01;36m)[00m)))
		(SU vier tage mochte ich bleiben das ware dann bis zum zehnten juli)
		(SU konnen sie da fur mich eine buchung vornehmen)))
Step:Unary
{'subtrees': ['SU'], 'family': ['SU', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADJD'), 'right siblings': [], 'left siblings': [(SU (DM (ADJX (ADVX (ADV sehr)) (ADJD gut))))], 'auto preterminal span': (2, 4), 'span': (2, 4), 'parent': 'ADJX', 'label': 'PX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM
				(ADJX
					(SU
						[01;31m(DM[00m
							[01;31m(ADJX[00m
								(ADVX sehr)
								(ADJD gut)[01;31m)[00m[01;31m)[00m)
					(PX sehr gut))))
		(SU vier tage mochte ich bleiben das ware dann bis zum zehnten juli)
		(SU konnen sie da fur mich eine buchung vornehmen)))
Step:Unary
{'subtrees': ['ADVX', 'ADJD'], 'family': ['ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADJD'), 'right siblings': [], 'parent': 'DM', 'auto preterminal span': (0, 2), 'span': (0, 2), 'left siblings': [], 'label': 'ADJX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM
				(ADJX
					(SU
						[01;31m(DM[00m
							(ADVX sehr)
							(ADJD gut)[01;31m)[00m)
					(PX sehr gut))))
		(SU vier tage mochte ich bleiben das ware dann bis zum zehnten juli)
		(SU konnen sie da fur mich eine buchung vornehmen)))
Step:Unary
{'subtrees': ['ADVX', 'ADJD'], 'family': ['DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADJD'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (0, 2), 'span': (0, 2), 'left siblings': [], 'label': 'DM', 'classified_type': 'Unary', 'type': 'remove'}
(TOP sehr gut sehr gut vier tage mochte ich bleiben das ware dann bis zum zehnten juli konnen sie da fur mich eine buchung vornehmen)

Sentence 672:
1 Initial errors
0 on fringe, 1 iterations
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU das ich dann abends wieder zuruckfliegen kann)
		(SU
			[01;31m(ADVX[00m
				(ADVX ansonsten)
				(ADVX vielleicht)
				(ADVX auch)
				(PX mit dem zug)
				(ADVX abends)
				(ADVX zuruck)[01;31m)[00m
			(SIMPX wenn das mit dem flugzeug))))
Step:PP Attachment
{'subtrees': ['ADVX', 'ADVX', 'ADVX', 'PX', 'ADVX', 'ADVX'], 'family': ['ADVX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'ADV', 'KOUS', 'PDS', 'APPR', 'ART', 'NN'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (7, 20), 'span': (7, 15), 'left siblings': [], 'label': 'ADVX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP das ich dann abends wieder zuruckfliegen kann ansonsten vielleicht auch mit dem zug abends zuruck wenn das mit dem flugzeug)

Sentence 673:
7 Initial errors
0 on fringe, 4 iterations
2 Error:Single Word Phrase
2 Error:Single Word Phrase
2 Error:Single Word Phrase
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU ah ist naturlich sehr kompliziert)
		(SU
			(SIMPX
				(VF wann)
				(LK konnten)
				(MF
					(NX sie)
					(ADVX denn)
					[01;36m(ADJX[00m [01;31m(ADVX[00m
						(ADV genau)[01;31m)[00m[01;36m)[00m)
				(VC sagen)
				(NF
					(SIMPX
						(C ob)
						(MF
							(NX ich)
							(PX an dem abend)
							[01;36m(ADVX[00m [01;31m(ADJX[00m
								(ADJD exakt)[01;31m)[00m[01;36m)[00m
							(PX nach hause))
						(VC fahren kann)))))
		[01;36m(NX[00m
			[01;36m(DM[00m
				(SU
					[01;31m(VXINF[00m
						(VVINF fliegen)[01;31m)[00m)[01;36m)[00m[01;36m)[00m))
Step:Single Word Phrase
{'family': ['NX', 'ADVX', 'ADJX'], 'auto preterminal span': (9, 10), 'span': (9, 10), 'subtrees': ['ADV'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'ADJX')}
(TOP
	(TURN
		(SU ah ist naturlich sehr kompliziert)
		(SU
			(SIMPX
				(VF wann)
				(LK konnten)
				(MF sie denn genau)
				(VC sagen)
				(NF
					(SIMPX
						(C ob)
						(MF
							(NX ich)
							(PX an dem abend)
							[01;36m(ADVX[00m [01;31m(ADJX[00m
								(ADJD exakt)[01;31m)[00m[01;36m)[00m
							(PX nach hause))
						(VC fahren kann)))))
		[01;36m(NX[00m
			[01;36m(DM[00m
				(SU
					[01;31m(VXINF[00m
						(VVINF fliegen)[01;31m)[00m)[01;36m)[00m[01;36m)[00m))
Step:Single Word Phrase
{'family': ['NX', 'PX', 'ADVX', 'PX'], 'auto preterminal span': (16, 17), 'span': (16, 17), 'subtrees': ['ADJD'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('ADJD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'ADVX')}
(TOP
	(TURN
		(SU ah ist naturlich sehr kompliziert)
		(SU wann konnten sie denn genau sagen ob ich an dem abend exakt nach hause fahren kann)
		[01;36m(NX[00m
			[01;36m(DM[00m
				(SU
					[01;31m(VXINF[00m
						(VVINF fliegen)[01;31m)[00m)[01;36m)[00m[01;36m)[00m))
Step:Single Word Phrase
{'family': ['DM'], 'auto preterminal span': (21, 22), 'span': (21, 22), 'subtrees': ['VVINF'], 'parent': 'SU', 'over_word': True, 'auto preterminals': ('VVINF',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VXINF', 'DM')}
(TOP
	(TURN
		(SU ah ist naturlich sehr kompliziert)
		(SU wann konnten sie denn genau sagen ob ich an dem abend exakt nach hause fahren kann)
		[01;36m(NX[00m
			(SU
				(DM
					(VVINF fliegen)))[01;36m)[00m))
Step:Unary
{'subtrees': ['SU'], 'family': ['SU', 'SU', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVINF',), 'right siblings': [], 'left siblings': [(SU (DM (ITJ ah)) (SIMPX (LK (VXFIN (VAFIN ist))) (MF (ADVX (ADV naturlich)) (ADJX (ADVX (ADV sehr)) (ADJD kompliziert))))), (SU (SIMPX (VF (PX (PWAV wann))) (LK (VXFIN (VMFIN konnten))) (MF (NX (PPER sie)) (ADVX (ADV denn)) (ADJX (ADV genau))) (VC (VXINF (VVINF sagen))) (NF (SIMPX (C (KOUS ob)) (MF (NX (PPER ich)) (PX (APPR an) (NX (ART dem) (NN abend))) (ADVX (ADJD exakt)) (PX (APPR nach) (NX (NN hause)))) (VC (VXINF (VVINF fahren)) (VXFIN (VMFIN kann)))))))], 'auto preterminal span': (21, 22), 'span': (21, 22), 'parent': 'TURN', 'label': 'NX', 'classified_type': 'Unary', 'type': 'add'}
(TOP ah ist naturlich sehr kompliziert wann konnten sie denn genau sagen ob ich an dem abend exakt nach hause fahren kann fliegen)

Sentence 674:
0 Initial errors
0 on fringe, 0 iterations

Sentence 675:
0 Initial errors
0 on fringe, 0 iterations

Sentence 676:
0 Initial errors
0 on fringe, 0 iterations

Sentence 677:
8 Initial errors
0 on fringe, 4 iterations
3 Error:Clause Attachment
2 Error:Clause Attachment
2 Error:Modifier Attachment
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU sehr gut)
		(SU [01;33m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF ich)
				(LK wurde)
				[01;31m(MF[00m
					[01;36m(MF[00m
						(NX sie)
						(ADVX dann) [01;33mSIMPX)[00m[01;36m)[00m
					[01;31m(SIMPX[00m [01;33m(SIMPX[00m
						(VF ich)
						(LK sage)
						[01;31m(MF[00m [01;33m(MF[00m
							(ADVX
								(ADV mal))[01;31m)[00m[01;31m)[00m
					(ADVX morgen)[01;31m)[00m [01;33mMF)[00m
				(VC zuruckrufen)
				(NF das wir alles festmachen)[01;31m)[00m))) [01;33mSIMPX)[00m
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'SIMPX', 'ADVX', 'VC', 'NF'], 'mover info': [('SIMPX', (6, 9)), ('ADVX', (9, 10))], 'old_family': ['NX', 'ADVX', 'SIMPX', 'ADVX'], 'start left siblings': ['NX', 'ADVX'], 'auto preterminals': ('PPER', 'VAFIN', 'PPER', 'ADV', 'PPER', 'VVFIN', 'ADV', 'ADV', 'VVINF', 'KOUS', 'PPER', 'PIS', 'VVFIN'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (2, 15), 'adding node already present': False, 'movers': ['SIMPX', 'ADVX'], 'old_parent': 'MF', 'added and moved': True, 'end right siblings': ['VC', 'NF'], 'classified_type': 'Clause Attachment', 'type': 'move', 'added label': 'SIMPX'}
(TOP
	(TURN
		(SU sehr gut)
		(SU
			[01;31m(SIMPX[00m
				[01;36m(SIMPX[00m
					(VF ich)
					(LK wurde)
					(MF sie dann)[01;36m)[00m
				(SIMPX
					[01;31m(SIMPX[00m
						(VF ich)
						(LK sage)
						[01;31m(MF[00m [01;33m(MF[00m
							(ADVX
								(ADV mal))[01;31m)[00m[01;31m)[00m
					(ADVX morgen) [01;33mMF)[00m
					(VC zuruckrufen)
					(NF das wir alles festmachen))[01;31m)[00m)))
Step:Clause Attachment
{'new_parent': 'SU', 'new_family': ['SIMPX', 'SIMPX'], 'mover info': [('SIMPX', (6, 15))], 'old_family': ['VF', 'LK', 'MF', 'SIMPX'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('PPER', 'VAFIN', 'PPER', 'ADV', 'PPER', 'VVFIN', 'ADV', 'ADV', 'VVINF', 'KOUS', 'PPER', 'PIS', 'VVFIN'), 'start right siblings': [], 'end left siblings': ['SIMPX'], 'auto preterminal span': (2, 15), 'movers': ['SIMPX'], 'old_parent': 'SIMPX', 'end right siblings': [], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU sehr gut)
		(SU
			(SIMPX ich wurde sie dann)
			(SIMPX
				[01;31m(SIMPX[00m
					(VF ich)
					(LK sage)
					[01;31m(MF[00m [01;33m(MF[00m
						(ADVX
							(ADV mal))[01;31m)[00m[01;31m)[00m
				(ADVX morgen) [01;33mMF)[00m
				(VC zuruckrufen)
				(NF das wir alles festmachen)))))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['ADVX', 'ADVX'], 'mover info': [('ADVX', (9, 10))], 'old_family': ['SIMPX', 'ADVX', 'VC', 'NF'], 'start left siblings': ['SIMPX'], 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'ADV', 'VVINF', 'KOUS', 'PPER', 'PIS', 'VVFIN'), 'start right siblings': ['VC', 'NF'], 'end left siblings': ['ADVX'], 'auto preterminal span': (6, 15), 'movers': ['ADVX'], 'old_parent': 'SIMPX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU sehr gut)
		(SU
			(SIMPX ich wurde sie dann)
			(SIMPX
				[01;31m(SIMPX[00m
					(VF ich)
					(LK sage)
					(MF mal morgen)[01;31m)[00m
				(VC zuruckrufen)
				(NF das wir alles festmachen)))))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['SIMPX', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'ADV', 'VVINF', 'KOUS', 'PPER', 'PIS', 'VVFIN'), 'right siblings': ['VC', 'NF'], 'parent': 'SIMPX', 'auto preterminal span': (6, 15), 'span': (6, 10), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP sehr gut ich wurde sie dann ich sage mal morgen zuruckrufen das wir alles festmachen)

Sentence 678:
0 Initial errors
0 on fringe, 0 iterations

Sentence 679:
0 Initial errors
0 on fringe, 0 iterations

Sentence 680:
12 Initial errors
0 on fringe, 9 iterations
3 Error:NP Attachment
2 Error:Single Word Phrase
1 Error:Modifier Attachment
1 Error:Unary
1 Error:UNSET add
1 Error:Unary
1 Error:UNSET add
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(SIMPX
				(KOORD und)
				(VF zugfahren)
				(LK dauert)
				(MF
					(NX mir)
					(ADVX vielleicht)
					(ADVX auch)
					(ADJX
						(NX ein bischen)
						[01;36m(ADJX[00m
							(PTKA zu)
							(ADJD lange)[01;36m)[00m))))
		[01;36m(SIMPX[00m
			(SU
				(SIMPX ich habe jetzt hier den plan vor mir)
				[01;36m(SIMPX[00m
					[01;31m(SIMPX[00m
						(VF zugdauer)
						[01;36m(LKM[00m
							[01;33m(FKOORD[00m (LK dauert)
							(MF drei stunden zwanzig minuten)[01;36m)[00m[01;31m)[00m
					[01;31m(NX[00m
						(KON und)
						[01;36m(LKM[00m
							[01;36m(VXFIN[00m [01;36m(LK[00m [01;31m(NX[00m
								(NN fliegen)[01;31m)[00m[01;36m)[00m[01;36m)[00m
							[01;36m(MF[00m
								(NX
									(ART eine)
									(NN stunde))[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;36m)[00m)[01;36m)[00m)) [01;33mFKOORD)[00m
Step:NP Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'NX'], 'mover info': [('NX', (24, 28))], 'old_family': ['SIMPX', 'SIMPX', 'NX'], 'start left siblings': ['SIMPX', 'SIMPX'], 'auto preterminals': ('PPER', 'VAFIN', 'ADV', 'ADV', 'ART', 'NN', 'APPR', 'PRF', 'NN', 'VVFIN', 'CARD', 'NN', 'CARD', 'NN', 'KON', 'NN', 'ART', 'NN'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (10, 28), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'SU', 'added and moved': True, 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'MF'}
(TOP
	(TURN
		(SU
			(SIMPX
				(KOORD und)
				(VF zugfahren)
				(LK dauert)
				(MF
					(NX mir)
					(ADVX vielleicht)
					(ADVX auch)
					(ADJX
						(NX ein bischen)
						[01;36m(ADJX[00m
							(PTKA zu)
							(ADJD lange)[01;36m)[00m))))
		[01;36m(SIMPX[00m
			(SU
				(SIMPX ich habe jetzt hier den plan vor mir)
				(SIMPX
					(VF zugdauer)
					(FKOORD
						[01;36m(LKM[00m
							(LK dauert)
							(MF drei stunden zwanzig minuten)[01;36m)[00m
						[01;31m(NX[00m
							(KON und)
							[01;36m(LKM[00m
								[01;36m(VXFIN[00m [01;36m(LK[00m [01;31m(NX[00m
									(NN fliegen)[01;31m)[00m[01;36m)[00m[01;36m)[00m
								[01;36m(MF[00m
									(NX
										(ART eine)
										(NN stunde))[01;36m)[00m[01;36m)[00m[01;31m)[00m)))[01;36m)[00m))
Step:Single Word Phrase
{'family': ['KON', 'LK', 'NX'], 'auto preterminal span': (25, 26), 'span': (25, 26), 'subtrees': ['NN'], 'parent': 'NX', 'over_word': True, 'auto preterminals': ('NN',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('NX', 'LK')}
(TOP
	(TURN
		(SU
			(SIMPX
				(KOORD und)
				(VF zugfahren)
				(LK dauert)
				(MF
					(NX mir)
					(ADVX vielleicht)
					(ADVX auch)
					(ADJX
						(NX ein bischen)
						[01;36m(ADJX[00m
							(PTKA zu)
							(ADJD lange)[01;36m)[00m))))
		[01;36m(SIMPX[00m
			(SU
				(SIMPX ich habe jetzt hier den plan vor mir)
				(SIMPX
					(VF zugdauer)
					(FKOORD
						[01;36m(LKM[00m
							(LK dauert)
							(MF drei stunden zwanzig minuten)[01;36m)[00m
						[01;31m(NX[00m
							(KON und)
							[01;36m(LKM[00m
								[01;36m(VXFIN[00m
									(LK
										(NN fliegen))[01;36m)[00m
								[01;36m(MF[00m
									(NX
										(ART eine)
										(NN stunde))[01;36m)[00m[01;36m)[00m[01;31m)[00m)))[01;36m)[00m))
Step:Modifier Attachment
{'subtrees': ['PTKA', 'ADJD'], 'family': ['NX', 'ADJX'], 'over_word': False, 'over words': True, 'auto preterminals': ('PTKA', 'ADJD'), 'right siblings': [], 'left siblings': [(NX (ART ein) (PIS bischen))], 'auto preterminal span': (8, 10), 'span': (8, 10), 'parent': 'ADJX', 'label': 'ADJX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU und zugfahren dauert mir vielleicht auch ein bischen zu lange)
		[01;36m(SIMPX[00m
			(SU
				(SIMPX ich habe jetzt hier den plan vor mir)
				(SIMPX
					(VF zugdauer)
					(FKOORD
						[01;36m(LKM[00m
							(LK dauert)
							(MF drei stunden zwanzig minuten)[01;36m)[00m
						[01;31m(NX[00m
							(KON und)
							[01;36m(LKM[00m
								[01;36m(VXFIN[00m
									(LK
										(NN fliegen))[01;36m)[00m
								[01;36m(MF[00m
									(NX
										(ART eine)
										(NN stunde))[01;36m)[00m[01;36m)[00m[01;31m)[00m)))[01;36m)[00m))
Step:Unary
{'subtrees': ['SU'], 'family': ['SU', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'ADV', 'ADV', 'ART', 'NN', 'APPR', 'PRF', 'NN', 'VVFIN', 'CARD', 'NN', 'CARD', 'NN', 'KON', 'NN', 'ART', 'NN'), 'right siblings': [], 'left siblings': [(SU (SIMPX (KOORD (KON und)) (VF (NX (NN zugfahren))) (LK (VXFIN (VVFIN dauert))) (MF (NX (PPER mir)) (ADVX (ADV vielleicht)) (ADVX (ADV auch)) (ADJX (NX (ART ein) (PIS bischen)) (ADJX (PTKA zu) (ADJD lange))))))], 'auto preterminal span': (10, 28), 'span': (10, 28), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU und zugfahren dauert mir vielleicht auch ein bischen zu lange)
		(SIMPX
			(SU
				(SIMPX ich habe jetzt hier den plan vor mir)
				(SIMPX
					(VF zugdauer)
					(FKOORD
						[01;36m(LKM[00m
							(LK dauert)
							(MF drei stunden zwanzig minuten)[01;36m)[00m
						[01;31m(NX[00m
							(KON und)
							[01;36m(LKM[00m
								[01;36m(VXFIN[00m
									(LK
										(NN fliegen))[01;36m)[00m
								[01;36m(MF[00m
									(NX
										(ART eine)
										(NN stunde))[01;36m)[00m[01;36m)[00m[01;31m)[00m))))))
Step:UNSET add
{'subtrees': ['LK', 'MF'], 'family': ['LKM', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'CARD', 'NN', 'CARD', 'NN'), 'right siblings': [(NX (KON und) (LK (NN fliegen)) (NX (ART eine) (NN stunde)))], 'left siblings': [], 'auto preterminal span': (19, 24), 'span': (19, 24), 'parent': 'FKOORD', 'label': 'LKM', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU und zugfahren dauert mir vielleicht auch ein bischen zu lange)
		(SIMPX
			(SU
				(SIMPX ich habe jetzt hier den plan vor mir)
				(SIMPX
					(VF zugdauer)
					(FKOORD
						(LKM dauert drei stunden zwanzig minuten)
						[01;31m(NX[00m
							(KON und)
							[01;36m(LKM[00m
								[01;36m(VXFIN[00m
									(LK
										(NN fliegen))[01;36m)[00m
								[01;36m(MF[00m
									(NX
										(ART eine)
										(NN stunde))[01;36m)[00m[01;36m)[00m[01;31m)[00m))))))
Step:Unary
{'subtrees': ['LK'], 'family': ['KON', 'VXFIN', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN',), 'right siblings': [(NX (ART eine) (NN stunde))], 'left siblings': [(KON und)], 'auto preterminal span': (25, 26), 'span': (25, 26), 'parent': 'NX', 'label': 'VXFIN', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU und zugfahren dauert mir vielleicht auch ein bischen zu lange)
		(SIMPX
			(SU
				(SIMPX ich habe jetzt hier den plan vor mir)
				(SIMPX
					(VF zugdauer)
					(FKOORD
						(LKM dauert drei stunden zwanzig minuten)
						[01;31m(NX[00m
							(KON und)
							[01;36m(LKM[00m
								(VXFIN fliegen)
								[01;36m(MF[00m
									(NX
										(ART eine)
										(NN stunde))[01;36m)[00m[01;36m)[00m[01;31m)[00m))))))
Step:UNSET add
{'subtrees': ['VXFIN', 'NX'], 'family': ['KON', 'LKM'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'ART', 'NN'), 'right siblings': [], 'left siblings': [(KON und)], 'auto preterminal span': (25, 28), 'span': (25, 28), 'parent': 'NX', 'label': 'LKM', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU und zugfahren dauert mir vielleicht auch ein bischen zu lange)
		(SIMPX
			(SU
				(SIMPX ich habe jetzt hier den plan vor mir)
				(SIMPX
					(VF zugdauer)
					(FKOORD
						(LKM dauert drei stunden zwanzig minuten)
						[01;31m(NX[00m
							(KON und)
							(LKM
								(VXFIN fliegen)
								[01;36m(MF[00m
									(NX
										(ART eine)
										(NN stunde))[01;36m)[00m)[01;31m)[00m))))))
Step:Unary
{'subtrees': ['NX'], 'family': ['VXFIN', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN'), 'right siblings': [], 'left siblings': [(VXFIN (LK (NN fliegen)))], 'auto preterminal span': (26, 28), 'span': (26, 28), 'parent': 'LKM', 'label': 'MF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU und zugfahren dauert mir vielleicht auch ein bischen zu lange)
		(SIMPX
			(SU
				(SIMPX ich habe jetzt hier den plan vor mir)
				(SIMPX
					(VF zugdauer)
					(FKOORD
						(LKM dauert drei stunden zwanzig minuten)
						[01;31m(NX[00m
							(KON und)
							(LKM fliegen eine stunde)[01;31m)[00m))))))
Step:UNSET remove
{'subtrees': ['KON', 'LKM'], 'family': ['LKM', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'CARD', 'NN', 'CARD', 'NN', 'KON', 'NN', 'ART', 'NN'), 'right siblings': [], 'parent': 'FKOORD', 'auto preterminal span': (19, 28), 'span': (24, 28), 'left siblings': ['LKM'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP und zugfahren dauert mir vielleicht auch ein bischen zu lange ich habe jetzt hier den plan vor mir zugdauer dauert drei stunden zwanzig minuten und fliegen eine stunde)

Sentence 681:
0 Initial errors
0 on fringe, 0 iterations

Sentence 682:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Different label
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM ja)
			(DM also)
			(SIMPX
				[01;36m(VF[00m [01;31m(LV[00m
					(SIMPX
						(C wenn)
						(MF es ihnen da nicht)
						(VC past))[01;31m)[00m[01;36m)[00m
				(LK konnen)
				(MF wir auch am zweiten juliwochenende)
				(VC fahren)))
		(SU ich bin da flexibler)))
Step:Different label
{'family': ['VF', 'LK', 'MF', 'VC'], 'auto preterminal span': (2, 8), 'span': (2, 8), 'subtrees': ['SIMPX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('KOUS', 'PPER', 'PPER', 'ADV', 'PTKNEG', 'VVFIN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('LV', 'VF')}
(TOP ja also wenn es ihnen da nicht past konnen wir auch am zweiten juliwochenende fahren ich bin da flexibler)

Sentence 683:
4 Initial errors
0 on fringe, 4 iterations
1 Error:Single Word Phrase
1 Error:Unary
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU ja mussen wir uns auf das hotel einigen)
		(SU
			[01;31m(SIMPX[00m
				(VF ich)
				(LK wurde)
				(VC sagen)
				[01;31m(NF[00m
					[01;31m(ADJX[00m
						(ADJX am besten)
						[01;36m(DM[00m
							(ADJD zentral)[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m)))
Step:Single Word Phrase
{'subtrees': ['ADJD'], 'family': ['ADJX', 'DM'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADJD',), 'right siblings': [], 'left siblings': [(ADJX (PTKA am) (ADJD besten))], 'auto preterminal span': (13, 14), 'span': (13, 14), 'parent': 'ADJX', 'label': 'DM', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SU ja mussen wir uns auf das hotel einigen)
		(SU
			[01;31m(SIMPX[00m
				(VF ich)
				(LK wurde)
				(VC sagen)
				[01;31m(NF[00m
					[01;31m(ADJX[00m
						(ADJX am besten)
						(DM zentral)[01;31m)[00m[01;31m)[00m[01;31m)[00m)))
Step:Unary
{'subtrees': ['VF', 'LK', 'VC', 'NF'], 'family': ['SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'VVINF', 'PTKA', 'ADJD', 'ADJD'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (8, 14), 'span': (8, 14), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU ja mussen wir uns auf das hotel einigen)
		(SU
			(VF ich)
			(LK wurde)
			(VC sagen)
			[01;31m(NF[00m
				[01;31m(ADJX[00m
					(ADJX am besten)
					(DM zentral)[01;31m)[00m[01;31m)[00m)))
Step:Unary
{'subtrees': ['ADJX', 'DM'], 'family': ['ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKA', 'ADJD', 'ADJD'), 'right siblings': [], 'parent': 'NF', 'auto preterminal span': (11, 14), 'span': (11, 14), 'left siblings': [], 'label': 'ADJX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU ja mussen wir uns auf das hotel einigen)
		(SU
			(VF ich)
			(LK wurde)
			(VC sagen)
			[01;31m(NF[00m
				(ADJX am besten)
				(DM zentral)[01;31m)[00m)))
Step:UNSET remove
{'subtrees': ['ADJX', 'DM'], 'family': ['VF', 'LK', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'VVINF', 'PTKA', 'ADJD', 'ADJD'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (8, 14), 'span': (11, 14), 'left siblings': ['VF', 'LK', 'VC'], 'label': 'NF', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ja mussen wir uns auf das hotel einigen ich wurde sagen am besten zentral)

Sentence 684:
0 Initial errors
0 on fringe, 0 iterations

Sentence 685:
12 Initial errors
0 on fringe, 6 iterations
5 Error:Modifier Attachment
2 Error:Single Word Phrase
2 Error:UNSET move
1 Error:Unary
1 Error:Single Word Phrase
1 Error:Clause Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;36m(DM[00m
			(SU
				(SIMPX
					(LK machen)
					(MF sie)))[01;36m)[00m
		(SU
			(SIMPX
				(VF ich)
				(LK weis)
				(MF nicht)
				(NF
					(SIMPX
						(C ob)
						(MF
							(NX es)
							(ADVX vielleicht)
							(ADVX auch)
							[01;36m(PX[00m
								[01;31m(PX[00m
									(APPR uber)
									[01;31m(NX[00m [01;33m(NX[00m
										(ART das)
										[01;36m(NX[00m
											(NN [01;33m(NX[00m reiseburo)[01;36m)[00m[01;31m)[00m[01;31m)[00m
								[01;36m(NX[00m [01;31m(ADJX[00m
									(ADJD moglich)[01;31m)[00m[01;36m)[00m[01;36m)[00m) [01;33mNX) NX)[00m
						(VC ware)))))
		(SU
			(SIMPX ich konnte ja mal nachfragen)
			(SIMPX
				[01;31m(VF[00m
					[01;31m(SIMPX[00m
						(KOORD und)
						[01;36m(SIMPX[00m
							(C wenn)
							(MF nicht)[01;36m)[00m[01;31m)[00m[01;31m)[00m
				(LK konnen)
				(MF wir ja)
				(VC weitersehen))
			(DM ja))
		(SU das ware vielleicht das beste)))
Step:Modifier Attachment
{'new_parent': 'NX', 'new_family': ['ART', 'NN', 'ADJX'], 'mover info': [('ADJX', (12, 13))], 'old_family': ['NX', 'ADVX', 'ADVX', 'PX', 'ADJX'], 'start left siblings': ['NX', 'ADVX', 'ADVX', 'PX'], 'auto preterminals': ('PPER', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'ADJD'), 'start right siblings': [], 'end left siblings': ['ART', 'NN'], 'auto preterminal span': (6, 13), 'adding node already present': False, 'movers': ['ADJX'], 'old_parent': 'MF', 'POS confusion': ('ADJD', 'ADJD'), 'added and moved': True, 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'SIMPX'}
(TOP
	(TURN
		[01;36m(DM[00m
			(SU
				(SIMPX
					(LK machen)
					(MF sie)))[01;36m)[00m
		(SU
			(SIMPX
				(VF ich)
				(LK weis)
				(MF nicht)
				(NF
					(SIMPX
						(C ob)
						(MF
							(NX es)
							(ADVX vielleicht)
							(ADVX auch)
							(PX
								(APPR uber)
								(NX
									(ART das)
									(NX
										[01;36m(NX[00m
											(NN reiseburo)[01;36m)[00m
										[01;36m(NX[00m [01;31m(ADJX[00m
											(ADJD moglich)[01;31m)[00m[01;36m)[00m))))
						(VC ware)))))
		(SU
			(SIMPX ich konnte ja mal nachfragen)
			(SIMPX
				[01;31m(VF[00m
					[01;31m(SIMPX[00m
						(KOORD und)
						[01;36m(SIMPX[00m
							(C wenn)
							(MF nicht)[01;36m)[00m[01;31m)[00m[01;31m)[00m
				(LK konnen)
				(MF wir ja)
				(VC weitersehen))
			(DM ja))
		(SU das ware vielleicht das beste)))
Step:Single Word Phrase
{'family': ['NN', 'NX'], 'auto preterminal span': (12, 13), 'span': (12, 13), 'subtrees': ['ADJD'], 'parent': 'NX', 'over_word': True, 'auto preterminals': ('ADJD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'NX')}
(TOP
	(TURN
		[01;36m(DM[00m
			(SU
				(SIMPX
					(LK machen)
					(MF sie)))[01;36m)[00m
		(SU
			(SIMPX
				(VF ich)
				(LK weis)
				(MF nicht)
				(NF
					(SIMPX
						(C ob)
						(MF
							(NX es)
							(ADVX vielleicht)
							(ADVX auch)
							(PX
								(APPR uber)
								(NX
									(ART das)
									(NX
										[01;36m(NX[00m
											(NN reiseburo)[01;36m)[00m
										(NX moglich)))))
						(VC ware)))))
		(SU
			(SIMPX ich konnte ja mal nachfragen)
			(SIMPX
				[01;31m(VF[00m
					[01;31m(SIMPX[00m
						(KOORD und)
						[01;36m(SIMPX[00m
							(C wenn)
							(MF nicht)[01;36m)[00m[01;31m)[00m[01;31m)[00m
				(LK konnen)
				(MF wir ja)
				(VC weitersehen))
			(DM ja))
		(SU das ware vielleicht das beste)))
Step:UNSET move
{'new_parent': 'VF', 'new_family': ['KOORD', 'SIMPX'], 'mover info': [('KOORD', (19, 20))], 'old_family': ['KOORD', 'C', 'MF'], 'start left siblings': [], 'auto preterminals': ('KON', 'KOUS', 'PTKNEG'), 'start right siblings': ['C', 'MF'], 'end left siblings': [], 'auto preterminal span': (19, 22), 'movers': ['KOORD'], 'old_parent': 'SIMPX', 'POS confusion': ('KON', 'KON'), 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		[01;36m(DM[00m
			(SU
				(SIMPX
					(LK machen)
					(MF sie)))[01;36m)[00m
		(SU
			(SIMPX
				(VF ich)
				(LK weis)
				(MF nicht)
				(NF
					(SIMPX
						(C ob)
						(MF
							(NX es)
							(ADVX vielleicht)
							(ADVX auch)
							(PX
								(APPR uber)
								(NX
									(ART das)
									(NX
										[01;36m(NX[00m
											(NN reiseburo)[01;36m)[00m
										(NX moglich)))))
						(VC ware)))))
		(SU
			(SIMPX ich konnte ja mal nachfragen)
			(SIMPX
				[01;31m(VF[00m
					(KOORD und)
					(SIMPX wenn nicht)[01;31m)[00m
				(LK konnen)
				(MF wir ja)
				(VC weitersehen))
			(DM ja))
		(SU das ware vielleicht das beste)))
Step:Unary
{'subtrees': ['SU'], 'family': ['DM', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER'), 'right siblings': [(SU (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN weis))) (MF (ADVX (PTKNEG nicht))) (NF (SIMPX (C (KOUS ob)) (MF (NX (PPER es)) (ADVX (ADV vielleicht)) (ADVX (ADV auch)) (PX (APPR uber) (NX (ART das) (NX (NN reiseburo) (NX (ADJD moglich)))))) (VC (VXFIN (VAFIN ware))))))), (SU (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VMFIN konnte))) (MF (ADVX (ADV ja)) (ADVX (ADV mal))) (VC (VXINF (VVINF nachfragen)))) (SIMPX (VF (KOORD (KON und)) (SIMPX (C (KOUS wenn)) (MF (ADVX (PTKNEG nicht))))) (LK (VXFIN (VMFIN konnen))) (MF (NX (PPER wir)) (ADVX (ADV ja))) (VC (VXINF (VVINF weitersehen)))) (DM (PTKANT ja))), (SU (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VAFIN ware))) (MF (ADVX (ADV vielleicht)) (NX (ART das) (NN beste)))))], 'left siblings': [], 'auto preterminal span': (0, 2), 'span': (0, 2), 'parent': 'TURN', 'label': 'DM', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM machen sie)
		(SU
			(SIMPX
				(VF ich)
				(LK weis)
				(MF nicht)
				(NF
					(SIMPX
						(C ob)
						(MF
							(NX es)
							(ADVX vielleicht)
							(ADVX auch)
							(PX
								(APPR uber)
								(NX
									(ART das)
									(NX
										[01;36m(NX[00m
											(NN reiseburo)[01;36m)[00m
										(NX moglich)))))
						(VC ware)))))
		(SU
			(SIMPX ich konnte ja mal nachfragen)
			(SIMPX
				[01;31m(VF[00m
					(KOORD und)
					(SIMPX wenn nicht)[01;31m)[00m
				(LK konnen)
				(MF wir ja)
				(VC weitersehen))
			(DM ja))
		(SU das ware vielleicht das beste)))
Step:Single Word Phrase
{'subtrees': ['NN'], 'family': ['NX', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('NN',), 'right siblings': [(NX (ADJD moglich))], 'left siblings': [], 'auto preterminal span': (11, 12), 'span': (11, 12), 'parent': 'NX', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM machen sie)
		(SU ich weis nicht ob es vielleicht auch uber das reiseburo moglich ware)
		(SU
			(SIMPX ich konnte ja mal nachfragen)
			(SIMPX
				[01;31m(VF[00m
					(KOORD und)
					(SIMPX wenn nicht)[01;31m)[00m
				(LK konnen)
				(MF wir ja)
				(VC weitersehen))
			(DM ja))
		(SU das ware vielleicht das beste)))
Step:Clause Attachment
{'subtrees': ['KOORD', 'SIMPX'], 'family': ['VF', 'LK', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'KOUS', 'PTKNEG', 'VMFIN', 'PPER', 'ADV', 'VVINF'), 'right siblings': ['LK', 'MF', 'VC'], 'parent': 'SIMPX', 'auto preterminal span': (19, 26), 'span': (19, 22), 'left siblings': [], 'label': 'VF', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP machen sie ich weis nicht ob es vielleicht auch uber das reiseburo moglich ware ich konnte ja mal nachfragen und wenn nicht konnen wir ja weitersehen ja das ware vielleicht das beste)

Sentence 686:
9 Initial errors
0 on fringe, 9 iterations
1 Error:UNSET add
1 Error:UNSET remove
1 Error:Unary
1 Error:UNSET remove
1 Error:Unary
1 Error:UNSET remove
1 Error:Single Word Phrase
1 Error:NP Internal Structure
1 Error:NP Internal Structure
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM ja)
			(PX mit den veranstaltungen)
			[01;31m(SIMPX[00m
				(VF ich)
				(LK sehe)
				(MF gerade)
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						[01;31m(VF[00m
							[01;31m(PX[00m
								(PX
									(ADVX genau)
									[01;36m(PX[00m
										(APPR in)
										(NX der woche)[01;36m)[00m)
								(R in der wir da sein werden)[01;31m)[00m[01;31m)[00m
						(LK ist)
						(MF das schutzenfest)[01;31m)[00m[01;31m)[00m[01;31m)[00m)
		(SU
			(SIMPX
				(VF das)
				(LK wird)
				(MF [01;33m(NX[00m
					(NX
						(KOKOM als)
						[01;31m(NX[00m
							[01;31m(ADJX[00m
								(ADJA grostes)[01;31m)[00m [01;33mNX)[00m
							(NN schutzenfest)[01;31m)[00m
						(NX der welt)))
				(VC deklariert)))
		(SU da konnten wir mal vorbeischauen)))
Step:UNSET add
{'subtrees': ['APPR', 'NX'], 'family': ['ADVX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NN'), 'right siblings': [], 'left siblings': [(ADVX (ADV genau))], 'auto preterminal span': (8, 11), 'span': (8, 11), 'parent': 'PX', 'label': 'PX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM ja)
			(PX mit den veranstaltungen)
			[01;31m(SIMPX[00m
				(VF ich)
				(LK sehe)
				(MF gerade)
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						[01;31m(VF[00m
							[01;31m(PX[00m
								(PX genau in der woche)
								(R in der wir da sein werden)[01;31m)[00m[01;31m)[00m
						(LK ist)
						(MF das schutzenfest)[01;31m)[00m[01;31m)[00m[01;31m)[00m)
		(SU
			(SIMPX
				(VF das)
				(LK wird)
				(MF [01;33m(NX[00m
					(NX
						(KOKOM als)
						[01;31m(NX[00m
							[01;31m(ADJX[00m
								(ADJA grostes)[01;31m)[00m [01;33mNX)[00m
							(NN schutzenfest)[01;31m)[00m
						(NX der welt)))
				(VC deklariert)))
		(SU da konnten wir mal vorbeischauen)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'NF'], 'family': ['DM', 'PX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'APPR', 'ART', 'NN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'APPR', 'PRELS', 'PPER', 'ADV', 'VAINF', 'VAFIN', 'VAFIN', 'ART', 'NN'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (0, 20), 'span': (4, 20), 'left siblings': ['DM', 'PX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM ja)
			(PX mit den veranstaltungen)
			(VF ich)
			(LK sehe)
			(MF gerade)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					[01;31m(VF[00m
						[01;31m(PX[00m
							(PX genau in der woche)
							(R in der wir da sein werden)[01;31m)[00m[01;31m)[00m
					(LK ist)
					(MF das schutzenfest)[01;31m)[00m[01;31m)[00m)
		(SU
			(SIMPX
				(VF das)
				(LK wird)
				(MF [01;33m(NX[00m
					(NX
						(KOKOM als)
						[01;31m(NX[00m
							[01;31m(ADJX[00m
								(ADJA grostes)[01;31m)[00m [01;33mNX)[00m
							(NN schutzenfest)[01;31m)[00m
						(NX der welt)))
				(VC deklariert)))
		(SU da konnten wir mal vorbeischauen)))
Step:Unary
{'subtrees': ['PX', 'R'], 'family': ['PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'APPR', 'ART', 'NN', 'APPR', 'PRELS', 'PPER', 'ADV', 'VAINF', 'VAFIN'), 'right siblings': [], 'parent': 'VF', 'auto preterminal span': (7, 17), 'span': (7, 17), 'left siblings': [], 'label': 'PX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM ja)
			(PX mit den veranstaltungen)
			(VF ich)
			(LK sehe)
			(MF gerade)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					[01;31m(VF[00m
						(PX genau in der woche)
						(R in der wir da sein werden)[01;31m)[00m
					(LK ist)
					(MF das schutzenfest)[01;31m)[00m[01;31m)[00m)
		(SU
			(SIMPX
				(VF das)
				(LK wird)
				(MF [01;33m(NX[00m
					(NX
						(KOKOM als)
						[01;31m(NX[00m
							[01;31m(ADJX[00m
								(ADJA grostes)[01;31m)[00m [01;33mNX)[00m
							(NN schutzenfest)[01;31m)[00m
						(NX der welt)))
				(VC deklariert)))
		(SU da konnten wir mal vorbeischauen)))
Step:UNSET remove
{'subtrees': ['PX', 'R'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'APPR', 'ART', 'NN', 'APPR', 'PRELS', 'PPER', 'ADV', 'VAINF', 'VAFIN', 'VAFIN', 'ART', 'NN'), 'right siblings': ['LK', 'MF'], 'parent': 'SIMPX', 'auto preterminal span': (7, 20), 'span': (7, 17), 'left siblings': [], 'label': 'VF', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM ja)
			(PX mit den veranstaltungen)
			(VF ich)
			(LK sehe)
			(MF gerade)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					(PX genau in der woche)
					(R in der wir da sein werden)
					(LK ist)
					(MF das schutzenfest)[01;31m)[00m[01;31m)[00m)
		(SU
			(SIMPX
				(VF das)
				(LK wird)
				(MF [01;33m(NX[00m
					(NX
						(KOKOM als)
						[01;31m(NX[00m
							[01;31m(ADJX[00m
								(ADJA grostes)[01;31m)[00m [01;33mNX)[00m
							(NN schutzenfest)[01;31m)[00m
						(NX der welt)))
				(VC deklariert)))
		(SU da konnten wir mal vorbeischauen)))
Step:Unary
{'subtrees': ['PX', 'R', 'LK', 'MF'], 'family': ['SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'APPR', 'ART', 'NN', 'APPR', 'PRELS', 'PPER', 'ADV', 'VAINF', 'VAFIN', 'VAFIN', 'ART', 'NN'), 'right siblings': [], 'parent': 'NF', 'auto preterminal span': (7, 20), 'span': (7, 20), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM ja)
			(PX mit den veranstaltungen)
			(VF ich)
			(LK sehe)
			(MF gerade)
			[01;31m(NF[00m
				(PX genau in der woche)
				(R in der wir da sein werden)
				(LK ist)
				(MF das schutzenfest)[01;31m)[00m)
		(SU
			(SIMPX
				(VF das)
				(LK wird)
				(MF [01;33m(NX[00m
					(NX
						(KOKOM als)
						[01;31m(NX[00m
							[01;31m(ADJX[00m
								(ADJA grostes)[01;31m)[00m [01;33mNX)[00m
							(NN schutzenfest)[01;31m)[00m
						(NX der welt)))
				(VC deklariert)))
		(SU da konnten wir mal vorbeischauen)))
Step:UNSET remove
{'subtrees': ['PX', 'R', 'LK', 'MF'], 'family': ['DM', 'PX', 'VF', 'LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'APPR', 'ART', 'NN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'APPR', 'PRELS', 'PPER', 'ADV', 'VAINF', 'VAFIN', 'VAFIN', 'ART', 'NN'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (0, 20), 'span': (7, 20), 'left siblings': ['DM', 'PX', 'VF', 'LK', 'MF'], 'label': 'NF', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU ja mit den veranstaltungen ich sehe gerade genau in der woche in der wir da sein werden ist das schutzenfest)
		(SU
			(SIMPX
				(VF das)
				(LK wird)
				(MF [01;33m(NX[00m
					(NX
						(KOKOM als)
						[01;31m(NX[00m
							[01;31m(ADJX[00m
								(ADJA grostes)[01;31m)[00m [01;33mNX)[00m
							(NN schutzenfest)[01;31m)[00m
						(NX der welt)))
				(VC deklariert)))
		(SU da konnten wir mal vorbeischauen)))
Step:Single Word Phrase
{'subtrees': ['ADJA'], 'family': ['ADJX', 'NN'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADJA', 'NN'), 'right siblings': ['NN'], 'parent': 'NX', 'auto preterminal span': (23, 25), 'span': (23, 24), 'left siblings': [], 'label': 'ADJX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(SU ja mit den veranstaltungen ich sehe gerade genau in der woche in der wir da sein werden ist das schutzenfest)
		(SU
			(SIMPX
				(VF das)
				(LK wird)
				(MF [01;33m(NX[00m
					(NX
						(KOKOM als)
						[01;31m(NX[00m
							(ADJA grostes) [01;33mNX)[00m
							(NN schutzenfest)[01;31m)[00m
						(NX der welt)))
				(VC deklariert)))
		(SU da konnten wir mal vorbeischauen)))
Step:NP Internal Structure
{'subtrees': ['ADJA', 'NN'], 'family': ['KOKOM', 'NX', 'NX'], 'over_word': False, 'over words': True, 'auto preterminals': ('KOKOM', 'ADJA', 'NN', 'ART', 'NN'), 'right siblings': ['NX'], 'parent': 'NX', 'auto preterminal span': (22, 27), 'span': (23, 25), 'left siblings': ['KOKOM'], 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'remove'}
(TOP
	(TURN
		(SU ja mit den veranstaltungen ich sehe gerade genau in der woche in der wir da sein werden ist das schutzenfest)
		(SU
			(SIMPX
				(VF das)
				(LK wird)
				(MF
					(NX
						[01;36m(NX[00m
							(KOKOM als)
							(ADJA grostes)[01;36m)[00m
						(NN schutzenfest)
						(NX der welt)))
				(VC deklariert)))
		(SU da konnten wir mal vorbeischauen)))
Step:NP Internal Structure
{'subtrees': ['KOKOM', 'ADJA'], 'family': ['NX', 'NN', 'NX'], 'over_word': False, 'over words': True, 'auto preterminals': ('KOKOM', 'ADJA'), 'right siblings': [(NN schutzenfest), (NX (ART der) (NN welt))], 'left siblings': [], 'auto preterminal span': (22, 24), 'span': (22, 24), 'parent': 'NX', 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'add'}
(TOP ja mit den veranstaltungen ich sehe gerade genau in der woche in der wir da sein werden ist das schutzenfest das wird als grostes schutzenfest der welt deklariert da konnten wir mal vorbeischauen)

Sentence 687:
0 Initial errors
0 on fringe, 0 iterations

Sentence 688:
0 Initial errors
0 on fringe, 0 iterations

Sentence 689:
3 Initial errors
0 on fringe, 3 iterations
1 Error:Unary
1 Error:UNSET add
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU ja)
		(SU
			(SIMPX
				(VF da)
				(LK geht)
				(MF uns auch nicht soviel zeit)
				[01;36m(VXINF[00m
					(VC
						(PTKVZ verloren))[01;36m)[00m))
		(SU ja)
		[01;36m(SU[00m
			[01;36m(SIMPX[00m
				(SU wie machen wir das)
				(SU rufen sie beim reiseburo an oder soll ich es machen)[01;36m)[00m[01;36m)[00m
		(SU wegen der flugverbindung)))
Step:Unary
{'subtrees': ['VC'], 'family': ['VF', 'LK', 'MF', 'VXINF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKVZ',), 'right siblings': [], 'left siblings': [(VF (ADVX (ADV da))), (LK (VXFIN (VVFIN geht))), (MF (NX (PPER uns)) (ADVX (ADV auch)) (ADVX (PTKNEG nicht)) (NX (PIAT soviel) (NN zeit)))], 'auto preterminal span': (8, 9), 'span': (8, 9), 'parent': 'SIMPX', 'label': 'VXINF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU ja)
		(SU da geht uns auch nicht soviel zeit verloren)
		(SU ja)
		[01;36m(SU[00m
			[01;36m(SIMPX[00m
				(SU wie machen wir das)
				(SU rufen sie beim reiseburo an oder soll ich es machen)[01;36m)[00m[01;36m)[00m
		(SU wegen der flugverbindung)))
Step:UNSET add
{'subtrees': ['SU', 'SU'], 'family': ['SU', 'SU', 'SU', 'SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PWAV', 'VVFIN', 'PPER', 'PDS', 'VVFIN', 'PPER', 'APPRART', 'NN', 'PTKVZ', 'KON', 'VMFIN', 'PPER', 'PPER', 'VVINF'), 'right siblings': [(SU (PX (APPR wegen) (NX (ART der) (NN flugverbindung))))], 'left siblings': [(SU (DM (PTKANT ja))), (SU (SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VVFIN geht))) (MF (NX (PPER uns)) (ADVX (ADV auch)) (ADVX (PTKNEG nicht)) (NX (PIAT soviel) (NN zeit))) (VXINF (VC (PTKVZ verloren))))), (SU (DM (PTKANT ja)))], 'auto preterminal span': (10, 24), 'span': (10, 24), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU ja)
		(SU da geht uns auch nicht soviel zeit verloren)
		(SU ja)
		[01;36m(SU[00m
			(SIMPX
				(SU wie machen wir das)
				(SU rufen sie beim reiseburo an oder soll ich es machen))[01;36m)[00m
		(SU wegen der flugverbindung)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SU', 'SU', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PWAV', 'VVFIN', 'PPER', 'PDS', 'VVFIN', 'PPER', 'APPRART', 'NN', 'PTKVZ', 'KON', 'VMFIN', 'PPER', 'PPER', 'VVINF'), 'right siblings': [(SU (PX (APPR wegen) (NX (ART der) (NN flugverbindung))))], 'left siblings': [(SU (DM (PTKANT ja))), (SU (SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VVFIN geht))) (MF (NX (PPER uns)) (ADVX (ADV auch)) (ADVX (PTKNEG nicht)) (NX (PIAT soviel) (NN zeit))) (VXINF (VC (PTKVZ verloren))))), (SU (DM (PTKANT ja)))], 'auto preterminal span': (10, 24), 'span': (10, 24), 'parent': 'TURN', 'label': 'SU', 'classified_type': 'Unary', 'type': 'add'}
(TOP ja da geht uns auch nicht soviel zeit verloren ja wie machen wir das rufen sie beim reiseburo an oder soll ich es machen wegen der flugverbindung)

Sentence 690:
18 Initial errors
0 on fringe, 8 iterations
7 Error:NP Attachment
3 Error:UNSET move
2 Error:Single Word Phrase
2 Error:Single Word Phrase
1 Error:Unary
1 Error:UNSET add
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU ja)
		(SU
			(SIMPX
				(VF ich)
				(LK meine)
				[01;36m(SIMPX[00m
					[01;36m(NF[00m
						[01;31m(SIMPX[00m [01;33m(SIMPX (NF[00m
							(VF wir)
							(LK hatten)[01;31m)[00m
						[01;31m(NF[00m
							[01;31m(SIMPX[00m
								[01;31m(VF[00m
									[01;31m(NX[00m
										[01;36m(MF[00m
											(NX
												(ADJX letztes)
												(NN mal)) [01;33mNF) SIMPX)[00m[01;36m)[00m
										[01;36m(VF[00m
											(PX [01;33m(SIMPX[00m
												(APPR bei)
												(NX der expo))[01;36m)[00m[01;31m)[00m[01;31m)[00m
								(LK hatten)
								[01;36m(MF[00m
									(MF
										(NX wir)
										(NX
											[01;36m(ADVX[00m [01;31m(NX[00m
												(NN flugmoglichkeiten)[01;31m)[00m[01;36m)[00m
											[01;31m(PX[00m
												(APPR um)
												(NX
													(NX
														(NX sieben uhr)
														[01;36m(NX[00m [01;31m(ADJX[00m
															(CARD zehn)[01;31m)[00m[01;36m)[00m)
													(KON und)
													(NX acht uhr zehn))[01;31m)[00m))
									(VC gehabt)[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m)))) [01;33mSIMPX)[00m
Step:NP Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'NX'], 'mover info': [('NX', (5, 7))], 'old_family': ['NX', 'PX'], 'start left siblings': [], 'auto preterminals': ('PPER', 'VVFIN', 'PPER', 'VAFIN', 'ADJA', 'NN', 'APPR', 'ART', 'NE', 'VAFIN', 'PPER', 'NN', 'APPR', 'CARD', 'NN', 'CARD', 'KON', 'CARD', 'NN', 'CARD', 'VAPP'), 'start right siblings': ['PX'], 'end left siblings': ['VF', 'LK'], 'auto preterminal span': (1, 22), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(SU ja)
		(SU
			(SIMPX
				(VF ich)
				(LK meine)
				[01;36m(SIMPX[00m
					[01;36m(NF[00m
						(NF
							(SIMPX
								(VF wir)
								(LK hatten)
								[01;36m(MF[00m
									(NX
										(ADJX letztes)
										(NN mal))[01;36m)[00m))
						[01;31m(NF[00m
							(SIMPX
								(VF
									[01;31m(NX[00m
										(PX
											(APPR bei)
											(NX der expo))[01;31m)[00m)
								(LK hatten)
								[01;36m(MF[00m
									(MF
										(NX wir)
										(NX
											[01;36m(ADVX[00m [01;31m(NX[00m
												(NN flugmoglichkeiten)[01;31m)[00m[01;36m)[00m
											[01;31m(PX[00m
												(APPR um)
												(NX
													(NX
														(NX sieben uhr)
														[01;36m(NX[00m [01;31m(ADJX[00m
															(CARD zehn)[01;31m)[00m[01;36m)[00m)
													(KON und)
													(NX acht uhr zehn))[01;31m)[00m))
									(VC gehabt)[01;36m)[00m)[01;31m)[00m[01;36m)[00m[01;36m)[00m))))
Step:UNSET move
{'new_parent': 'NF', 'new_family': ['NF', 'SIMPX'], 'mover info': [('NF', (3, 7))], 'old_family': ['VF', 'LK', 'NF', 'NF'], 'start left siblings': ['VF', 'LK'], 'auto preterminals': ('PPER', 'VVFIN', 'PPER', 'VAFIN', 'ADJA', 'NN', 'APPR', 'ART', 'NE', 'VAFIN', 'PPER', 'NN', 'APPR', 'CARD', 'NN', 'CARD', 'KON', 'CARD', 'NN', 'CARD', 'VAPP'), 'start right siblings': ['NF'], 'end left siblings': [], 'auto preterminal span': (1, 22), 'adding node already present': False, 'movers': ['NF'], 'old_parent': 'SIMPX', 'added and moved': True, 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(SU ja)
		(SU
			(SIMPX
				(VF ich)
				(LK meine)
				(SIMPX
					(NF
						(NF
							(SIMPX
								(VF wir)
								(LK hatten)
								[01;36m(MF[00m
									(NX
										(ADJX letztes)
										(NN mal))[01;36m)[00m))
						(SIMPX
							(VF
								[01;31m(NX[00m
									(PX
										(APPR bei)
										(NX der expo))[01;31m)[00m)
							(LK hatten)
							[01;36m(MF[00m
								(MF
									(NX wir)
									(NX
										[01;36m(ADVX[00m [01;31m(NX[00m
											(NN flugmoglichkeiten)[01;31m)[00m[01;36m)[00m
										[01;31m(PX[00m
											(APPR um)
											(NX
												(NX
													(NX sieben uhr)
													[01;36m(NX[00m [01;31m(ADJX[00m
														(CARD zehn)[01;31m)[00m[01;36m)[00m)
												(KON und)
												(NX acht uhr zehn))[01;31m)[00m))
								(VC gehabt)[01;36m)[00m)))))))
Step:Single Word Phrase
{'family': ['ADVX', 'PX'], 'auto preterminal span': (12, 13), 'span': (12, 13), 'subtrees': ['NN'], 'parent': 'NX', 'over_word': True, 'auto preterminals': ('NN',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('NX', 'ADVX')}
(TOP
	(TURN
		(SU ja)
		(SU
			(SIMPX
				(VF ich)
				(LK meine)
				(SIMPX
					(NF
						(NF
							(SIMPX
								(VF wir)
								(LK hatten)
								[01;36m(MF[00m
									(NX
										(ADJX letztes)
										(NN mal))[01;36m)[00m))
						(SIMPX
							(VF
								[01;31m(NX[00m
									(PX
										(APPR bei)
										(NX der expo))[01;31m)[00m)
							(LK hatten)
							[01;36m(MF[00m
								(MF
									(NX wir)
									(NX
										(ADVX flugmoglichkeiten)
										[01;31m(PX[00m
											(APPR um)
											(NX
												(NX
													(NX sieben uhr)
													[01;36m(NX[00m [01;31m(ADJX[00m
														(CARD zehn)[01;31m)[00m[01;36m)[00m)
												(KON und)
												(NX acht uhr zehn))[01;31m)[00m))
								(VC gehabt)[01;36m)[00m)))))))
Step:Single Word Phrase
{'family': ['NX', 'NX'], 'auto preterminal span': (16, 17), 'span': (16, 17), 'subtrees': ['CARD'], 'parent': 'NX', 'over_word': True, 'auto preterminals': ('CARD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'NX')}
(TOP
	(TURN
		(SU ja)
		(SU
			(SIMPX
				(VF ich)
				(LK meine)
				(SIMPX
					(NF
						(NF
							(SIMPX
								(VF wir)
								(LK hatten)
								[01;36m(MF[00m
									(NX
										(ADJX letztes)
										(NN mal))[01;36m)[00m))
						(SIMPX
							(VF
								[01;31m(NX[00m
									(PX
										(APPR bei)
										(NX der expo))[01;31m)[00m)
							(LK hatten)
							[01;36m(MF[00m
								(MF
									(NX wir)
									(NX
										(ADVX flugmoglichkeiten)
										[01;31m(PX[00m
											(APPR um)
											(NX sieben uhr zehn und acht uhr zehn)[01;31m)[00m))
								(VC gehabt)[01;36m)[00m)))))))
Step:Unary
{'subtrees': ['NX'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJA', 'NN'), 'right siblings': [], 'left siblings': [(VF (NX (PPER wir))), (LK (VXFIN (VAFIN hatten)))], 'auto preterminal span': (5, 7), 'span': (5, 7), 'parent': 'SIMPX', 'label': 'MF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU ja)
		(SU
			(SIMPX
				(VF ich)
				(LK meine)
				(SIMPX
					(NF
						(NF wir hatten letztes mal)
						(SIMPX
							(VF
								[01;31m(NX[00m
									(PX
										(APPR bei)
										(NX der expo))[01;31m)[00m)
							(LK hatten)
							[01;36m(MF[00m
								(MF
									(NX wir)
									(NX
										(ADVX flugmoglichkeiten)
										[01;31m(PX[00m
											(APPR um)
											(NX sieben uhr zehn und acht uhr zehn)[01;31m)[00m))
								(VC gehabt)[01;36m)[00m)))))))
Step:UNSET add
{'subtrees': ['MF', 'VC'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'NN', 'APPR', 'CARD', 'NN', 'CARD', 'KON', 'CARD', 'NN', 'CARD', 'VAPP'), 'right siblings': [], 'left siblings': [(VF (NX (PX (APPR bei) (NX (ART der) (NE expo))))), (LK (VXFIN (VAFIN hatten)))], 'auto preterminal span': (11, 22), 'span': (11, 22), 'parent': 'SIMPX', 'label': 'MF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU ja)
		(SU
			(SIMPX
				(VF ich)
				(LK meine)
				(SIMPX
					(NF
						(NF wir hatten letztes mal)
						(SIMPX
							(VF
								[01;31m(NX[00m
									(PX
										(APPR bei)
										(NX der expo))[01;31m)[00m)
							(LK hatten)
							(MF
								(MF
									(NX wir)
									(NX
										(ADVX flugmoglichkeiten)
										[01;31m(PX[00m
											(APPR um)
											(NX sieben uhr zehn und acht uhr zehn)[01;31m)[00m))
								(VC gehabt)))))))))
Step:Unary
{'subtrees': ['PX'], 'family': ['NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NE'), 'right siblings': [], 'parent': 'VF', 'auto preterminal span': (7, 10), 'span': (7, 10), 'left siblings': [], 'label': 'NX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU ja)
		(SU
			(SIMPX
				(VF ich)
				(LK meine)
				(SIMPX
					(NF
						(NF wir hatten letztes mal)
						(SIMPX
							(VF bei der expo)
							(LK hatten)
							(MF
								(MF
									(NX wir)
									(NX
										(ADVX flugmoglichkeiten)
										[01;31m(PX[00m
											(APPR um)
											(NX sieben uhr zehn und acht uhr zehn)[01;31m)[00m))
								(VC gehabt)))))))))
Step:UNSET remove
{'subtrees': ['APPR', 'NX'], 'family': ['ADVX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'APPR', 'CARD', 'NN', 'CARD', 'KON', 'CARD', 'NN', 'CARD'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (12, 21), 'span': (13, 21), 'left siblings': ['ADVX'], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ja ich meine wir hatten letztes mal bei der expo hatten wir flugmoglichkeiten um sieben uhr zehn und acht uhr zehn gehabt)

Sentence 691:
0 Initial errors
0 on fringe, 0 iterations

Sentence 692:
0 Initial errors
0 on fringe, 0 iterations

Sentence 693:
7 Initial errors
0 on fringe, 5 iterations
2 Error:Different label
2 Error:Single Word Phrase
1 Error:Unary
1 Error:UNSET remove
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU nee das ware okay)
		(SU
			(DM also)
			[01;31m(SIMPX[00m
				(VF das wochenende)
				(LK ware)
				(MF der funfte sechste)[01;31m)[00m
			[01;31m(SIMPX[00m
				[01;36m(NF[00m [01;31m(LV[00m
					(SIMPX
						(C wenn)
						(MF wir dann am montag)
						(VC starten))[01;31m)[00m[01;36m)[00m
				[01;36m(ADJX[00m [01;36m(VF[00m [01;31m(DM[00m
					(ITJ genau)[01;31m)[00m[01;36m)[00m[01;36m)[00m
				(LK ware)
				(MF das der siebte juli)[01;31m)[00m)))
Step:Different label
{'family': ['NF', 'DM', 'LK', 'MF'], 'auto preterminal span': (11, 17), 'span': (11, 17), 'subtrees': ['SIMPX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'VVFIN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('LV', 'NF')}
(TOP
	(TURN
		(SU nee das ware okay)
		(SU
			(DM also)
			[01;31m(SIMPX[00m
				(VF das wochenende)
				(LK ware)
				(MF der funfte sechste)[01;31m)[00m
			[01;31m(SIMPX[00m
				(NF wenn wir dann am montag starten)
				[01;36m(ADJX[00m [01;36m(VF[00m [01;31m(DM[00m
					(ITJ genau)[01;31m)[00m[01;36m)[00m[01;36m)[00m
				(LK ware)
				(MF das der siebte juli)[01;31m)[00m)))
Step:Single Word Phrase
{'family': ['NF', 'VF', 'LK', 'MF'], 'auto preterminal span': (17, 18), 'span': (17, 18), 'subtrees': ['ITJ'], 'parent': 'SIMPX', 'over_word': True, 'auto preterminals': ('ITJ',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('DM', 'VF')}
(TOP
	(TURN
		(SU nee das ware okay)
		(SU
			(DM also)
			[01;31m(SIMPX[00m
				(VF das wochenende)
				(LK ware)
				(MF der funfte sechste)[01;31m)[00m
			[01;31m(SIMPX[00m
				(NF wenn wir dann am montag starten)
				[01;36m(ADJX[00m
					(VF
						(ITJ genau))[01;36m)[00m
				(LK ware)
				(MF das der siebte juli)[01;31m)[00m)))
Step:Unary
{'subtrees': ['VF'], 'family': ['NF', 'ADJX', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ',), 'right siblings': [(LK (VXFIN (VAFIN ware))), (MF (NX (PDS das)) (NX (ART der) (ADJX (ADJA siebte)) (NN juli)))], 'left siblings': [(NF (SIMPX (C (KOUS wenn)) (MF (NX (PPER wir)) (ADVX (ADV dann)) (PX (APPRART am) (NX (NN montag)))) (VC (VXFIN (VVFIN starten)))))], 'auto preterminal span': (17, 18), 'span': (17, 18), 'parent': 'SIMPX', 'label': 'ADJX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU nee das ware okay)
		(SU
			(DM also)
			[01;31m(SIMPX[00m
				(VF das wochenende)
				(LK ware)
				(MF der funfte sechste)[01;31m)[00m
			[01;31m(SIMPX[00m
				(NF wenn wir dann am montag starten)
				(ADJX genau)
				(LK ware)
				(MF das der siebte juli)[01;31m)[00m)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['DM', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ART', 'NN', 'VAFIN', 'ART', 'NN', 'NN', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'VVFIN', 'ITJ', 'VAFIN', 'PDS', 'ART', 'ADJA', 'NN'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (4, 23), 'span': (5, 11), 'left siblings': ['DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU nee das ware okay)
		(SU
			(DM also)
			(VF das wochenende)
			(LK ware)
			(MF der funfte sechste)
			[01;31m(SIMPX[00m
				(NF wenn wir dann am montag starten)
				(ADJX genau)
				(LK ware)
				(MF das der siebte juli)[01;31m)[00m)))
Step:Modifier Attachment
{'subtrees': ['NF', 'ADJX', 'LK', 'MF'], 'family': ['DM', 'VF', 'LK', 'MF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ART', 'NN', 'VAFIN', 'ART', 'NN', 'NN', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'VVFIN', 'ITJ', 'VAFIN', 'PDS', 'ART', 'ADJA', 'NN'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (4, 23), 'span': (11, 23), 'left siblings': ['DM', 'VF', 'LK', 'MF'], 'label': 'SIMPX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP nee das ware okay also das wochenende ware der funfte sechste wenn wir dann am montag starten genau ware das der siebte juli)

Sentence 694:
6 Initial errors
0 on fringe, 3 iterations
4 Error:Modifier Attachment
1 Error:UNSET remove
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU ja auf jeden fall)
		(SU
			[01;31m(SIMPX[00m
				(LK mochte)
				(MF
					(ADVX auch)
					[01;36m(NX[00m
						[01;33m(NX[00m (ADVX so)
						[01;31m(NX[00m
							[01;31m(NX[00m
								(ART ein)
								(ADJX bischen)
								(PIS was)[01;31m)[00m [01;33mNX)[00m
							(PX von hannover)[01;31m)[00m[01;36m)[00m)
				(VC sehen)[01;31m)[00m
			[01;31m(SIMPX[00m
				(VF das wir vielleicht auch ein paar sehenswurdigkeiten uns anschauen)
				(LK wurde)
				(MF ich)
				(VC sagen)[01;31m)[00m)
		(SU wenn sie da interesse dran haben)))
Step:Modifier Attachment
{'new_parent': 'NX', 'new_family': ['ADVX', 'ART', 'ADJX', 'PIS'], 'mover info': [('ADVX', (6, 7))], 'old_family': ['ADVX', 'ADVX', 'NX'], 'start left siblings': ['ADVX'], 'auto preterminals': ('ADV', 'ADV', 'ART', 'PIDAT', 'PIS', 'APPR', 'NE'), 'start right siblings': ['NX'], 'end left siblings': [], 'auto preterminal span': (5, 12), 'movers': ['ADVX'], 'old_parent': 'MF', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['ART', 'ADJX', 'PIS'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU ja auf jeden fall)
		(SU
			[01;31m(SIMPX[00m
				(LK mochte)
				(MF auch so ein bischen was von hannover)
				(VC sehen)[01;31m)[00m
			[01;31m(SIMPX[00m
				(VF das wir vielleicht auch ein paar sehenswurdigkeiten uns anschauen)
				(LK wurde)
				(MF ich)
				(VC sagen)[01;31m)[00m)
		(SU wenn sie da interesse dran haben)))
Step:UNSET remove
{'subtrees': ['LK', 'MF', 'VC'], 'family': ['SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VMFIN', 'ADV', 'ADV', 'ART', 'PIDAT', 'PIS', 'APPR', 'NE', 'VVINF', 'KOUS', 'PPER', 'ADV', 'ADV', 'ART', 'PIDAT', 'NN', 'PRF', 'VVFIN', 'VAFIN', 'PPER', 'VVINF'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (4, 25), 'span': (4, 13), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU ja auf jeden fall)
		(SU
			(LK mochte)
			(MF auch so ein bischen was von hannover)
			(VC sehen)
			[01;31m(SIMPX[00m
				(VF das wir vielleicht auch ein paar sehenswurdigkeiten uns anschauen)
				(LK wurde)
				(MF ich)
				(VC sagen)[01;31m)[00m)
		(SU wenn sie da interesse dran haben)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['LK', 'MF', 'VC', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VMFIN', 'ADV', 'ADV', 'ART', 'PIDAT', 'PIS', 'APPR', 'NE', 'VVINF', 'KOUS', 'PPER', 'ADV', 'ADV', 'ART', 'PIDAT', 'NN', 'PRF', 'VVFIN', 'VAFIN', 'PPER', 'VVINF'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (4, 25), 'span': (13, 25), 'left siblings': ['LK', 'MF', 'VC'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ja auf jeden fall mochte auch so ein bischen was von hannover sehen das wir vielleicht auch ein paar sehenswurdigkeiten uns anschauen wurde ich sagen wenn sie da interesse dran haben)

Sentence 695:
8 Initial errors
0 on fringe, 6 iterations
2 Error:NP Attachment
2 Error:UNSET move
1 Error:Single Word Phrase
1 Error:UNSET remove
1 Error:Unary
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU ja)
		(SU ich kenne von einem fruheren aufenthalt noch das maritimstadthotel das fand ich also sehr angenehm)
		(SU
			(SIMPX
				(VF es)
				[01;31m(FKOORD[00m
					(LKM liegt sehr zentral)
					(LKM hat einen konferenzraum)[01;31m)[00m))
		(SU da konnen wir vielleicht noch nach der messe ein bischen was besprechen)
		(SU
			[01;31m(ADVX[00m
				(ADVX auch)
				(SIMPX
					(C wenn)
					(MF
						(NX wir)
						(ADVX noch)
						[01;31m(NX[00m
							[01;36m(NX[00m
								(ART ein)
								[01;31m(ADJX[00m
									(PIDAT paar)[01;31m)[00m[01;36m)[00m
							(APPR [01;33m(PX[00m mit)
							[01;31m(NX[00m
								[01;36m(NX[00m
									(NN teilnehmer) [01;33mPX)[00m[01;36m)[00m
								(NX der messe)[01;31m)[00m[01;31m)[00m
						(ADVX mit))
					(VC einladen))[01;31m)[00m)))
Step:NP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'ADVX', 'NX', 'APPR', 'NX', 'ADVX'], 'mover info': [('APPR', (41, 42)), ('NX', (42, 45))], 'old_family': ['ART', 'ADJX', 'APPR', 'NX'], 'start left siblings': ['ART', 'ADJX'], 'auto preterminals': ('PPER', 'ADV', 'ART', 'PIDAT', 'APPR', 'NN', 'ART', 'NN', 'ADV'), 'start right siblings': [], 'end left siblings': ['NX', 'ADVX', 'NX'], 'auto preterminal span': (37, 46), 'movers': ['APPR', 'NX'], 'old_parent': 'NX', 'end right siblings': ['ADVX'], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU ja)
		(SU ich kenne von einem fruheren aufenthalt noch das maritimstadthotel das fand ich also sehr angenehm)
		(SU
			(SIMPX
				(VF es)
				[01;31m(FKOORD[00m
					(LKM liegt sehr zentral)
					(LKM hat einen konferenzraum)[01;31m)[00m))
		(SU da konnen wir vielleicht noch nach der messe ein bischen was besprechen)
		(SU
			[01;31m(ADVX[00m
				(ADVX auch)
				(SIMPX
					(C wenn)
					(MF
						(NX wir)
						(ADVX noch)
						(NX
							(ART ein)
							[01;31m(ADJX[00m
								(PIDAT paar)[01;31m)[00m)
						(APPR [01;33m(PX[00m mit)
						[01;31m(NX[00m
							[01;36m(NX[00m
								(NN teilnehmer) [01;33mPX)[00m[01;36m)[00m
							(NX der messe)[01;31m)[00m
						(ADVX mit))
					(VC einladen))[01;31m)[00m)))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['NX', 'ADVX', 'NX', 'APPR', 'NN', 'NX', 'ADVX'], 'mover info': [('NN', (42, 43))], 'old_family': ['NN', 'NX'], 'start left siblings': [], 'auto preterminals': ('PPER', 'ADV', 'ART', 'PIDAT', 'APPR', 'NN', 'ART', 'NN', 'ADV'), 'start right siblings': ['NX'], 'end left siblings': ['NX', 'ADVX', 'NX', 'APPR'], 'auto preterminal span': (37, 46), 'adding node already present': False, 'movers': ['NN'], 'old_parent': 'NX', 'POS confusion': ('NN', 'NN'), 'added and moved': True, 'end right siblings': ['NX', 'ADVX'], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(SU ja)
		(SU ich kenne von einem fruheren aufenthalt noch das maritimstadthotel das fand ich also sehr angenehm)
		(SU
			(SIMPX
				(VF es)
				[01;31m(FKOORD[00m
					(LKM liegt sehr zentral)
					(LKM hat einen konferenzraum)[01;31m)[00m))
		(SU da konnen wir vielleicht noch nach der messe ein bischen was besprechen)
		(SU
			[01;31m(ADVX[00m
				(ADVX auch)
				(SIMPX
					(C wenn)
					(MF
						(NX wir)
						(ADVX noch)
						(NX
							(ART ein)
							[01;31m(ADJX[00m
								(PIDAT paar)[01;31m)[00m)
						(PX
							(APPR mit)
							[01;36m(NX[00m
								(NN teilnehmer)[01;36m)[00m)
						(NX der messe)
						(ADVX mit))
					(VC einladen))[01;31m)[00m)))
Step:Single Word Phrase
{'subtrees': ['NN'], 'family': ['APPR', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('NN',), 'right siblings': [], 'left siblings': [(APPR mit)], 'auto preterminal span': (42, 43), 'span': (42, 43), 'parent': 'PX', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SU ja)
		(SU ich kenne von einem fruheren aufenthalt noch das maritimstadthotel das fand ich also sehr angenehm)
		(SU
			(SIMPX
				(VF es)
				[01;31m(FKOORD[00m
					(LKM liegt sehr zentral)
					(LKM hat einen konferenzraum)[01;31m)[00m))
		(SU da konnen wir vielleicht noch nach der messe ein bischen was besprechen)
		(SU
			[01;31m(ADVX[00m
				(ADVX auch)
				(SIMPX
					(C wenn)
					(MF
						(NX wir)
						(ADVX noch)
						(NX
							(ART ein)
							[01;31m(ADJX[00m
								(PIDAT paar)[01;31m)[00m)
						(PX mit teilnehmer)
						(NX der messe)
						(ADVX mit))
					(VC einladen))[01;31m)[00m)))
Step:UNSET remove
{'subtrees': ['LKM', 'LKM'], 'family': ['VF', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'ADJD', 'VAFIN', 'ART', 'NN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (16, 23), 'span': (17, 23), 'left siblings': ['VF'], 'label': 'FKOORD', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU ja)
		(SU ich kenne von einem fruheren aufenthalt noch das maritimstadthotel das fand ich also sehr angenehm)
		(SU es liegt sehr zentral hat einen konferenzraum)
		(SU da konnen wir vielleicht noch nach der messe ein bischen was besprechen)
		(SU
			[01;31m(ADVX[00m
				(ADVX auch)
				(SIMPX
					(C wenn)
					(MF
						(NX wir)
						(ADVX noch)
						(NX
							(ART ein)
							[01;31m(ADJX[00m
								(PIDAT paar)[01;31m)[00m)
						(PX mit teilnehmer)
						(NX der messe)
						(ADVX mit))
					(VC einladen))[01;31m)[00m)))
Step:Unary
{'subtrees': ['ADVX', 'SIMPX'], 'family': ['ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'KOUS', 'PPER', 'ADV', 'ART', 'PIDAT', 'APPR', 'NN', 'ART', 'NN', 'ADV', 'VVFIN'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (35, 47), 'span': (35, 47), 'left siblings': [], 'label': 'ADVX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU ja)
		(SU ich kenne von einem fruheren aufenthalt noch das maritimstadthotel das fand ich also sehr angenehm)
		(SU es liegt sehr zentral hat einen konferenzraum)
		(SU da konnen wir vielleicht noch nach der messe ein bischen was besprechen)
		(SU
			(ADVX auch)
			(SIMPX
				(C wenn)
				(MF
					(NX wir)
					(ADVX noch)
					(NX
						(ART ein)
						[01;31m(ADJX[00m
							(PIDAT paar)[01;31m)[00m)
					(PX mit teilnehmer)
					(NX der messe)
					(ADVX mit))
				(VC einladen)))))
Step:Single Word Phrase
{'subtrees': ['PIDAT'], 'family': ['ART', 'ADJX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ART', 'PIDAT'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (39, 41), 'span': (40, 41), 'left siblings': ['ART'], 'label': 'ADJX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP ja ich kenne von einem fruheren aufenthalt noch das maritimstadthotel das fand ich also sehr angenehm es liegt sehr zentral hat einen konferenzraum da konnen wir vielleicht noch nach der messe ein bischen was besprechen auch wenn wir noch ein paar mit teilnehmer der messe mit einladen)

Sentence 696:
13 Initial errors
0 on fringe, 13 iterations
1 Error:Single Word Phrase
1 Error:Unary
1 Error:Unary
1 Error:UNSET remove
1 Error:Unary
1 Error:UNSET remove
1 Error:Clause Attachment
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:UNSET add
1 Error:Unary
1 Error:UNSET add
1 Error:UNSET add
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU ja)
		(SU
			[01;31m(NX[00m
				(ART die)
				[01;36m(VXFIN[00m
					[01;36m(LK[00m
						(NN kosten)[01;36m)[00m[01;36m)[00m[01;31m)[00m
			(ART der)
			[01;31m(SIMPX[00m [01;33m(NX (LV[00m
				[01;31m(VF[00m
					[01;31m(NX[00m
						(NX die frage)
						[01;33m(SIMPX[00m (NX der kosten)[01;31m)[00m[01;31m)[00m
				[01;31m(SIMPX[00m
					(LK konnen)
					[01;31m(MF[00m
						(NX wir) [01;33mSIMPX) LV) NX)[00m
						[01;36m(VF[00m
							(ADVX [01;33m(SIMPX[00m
								(ADV dann))[01;36m)[00m[01;31m)[00m[01;31m)[00m
				(LK kann)
				(MF ich mit unserem vorgesetzten)
				(VC abchecken)[01;31m)[00m))) [01;33mSIMPX)[00m
Step:Single Word Phrase
{'subtrees': ['NN'], 'family': ['ART', 'LK'], 'over_word': True, 'over words': True, 'auto preterminals': ('NN',), 'right siblings': [], 'left siblings': [(ART die)], 'auto preterminal span': (2, 3), 'span': (2, 3), 'parent': 'NX', 'label': 'LK', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SU ja)
		(SU
			[01;31m(NX[00m
				(ART die)
				[01;36m(VXFIN[00m
					(LK
						(NN kosten))[01;36m)[00m[01;31m)[00m
			(ART der)
			[01;31m(SIMPX[00m [01;33m(NX (LV[00m
				[01;31m(VF[00m
					[01;31m(NX[00m
						(NX die frage)
						[01;33m(SIMPX[00m (NX der kosten)[01;31m)[00m[01;31m)[00m
				[01;31m(SIMPX[00m
					(LK konnen)
					[01;31m(MF[00m
						(NX wir) [01;33mSIMPX) LV) NX)[00m
						[01;36m(VF[00m
							(ADVX [01;33m(SIMPX[00m
								(ADV dann))[01;36m)[00m[01;31m)[00m[01;31m)[00m
				(LK kann)
				(MF ich mit unserem vorgesetzten)
				(VC abchecken)[01;31m)[00m))) [01;33mSIMPX)[00m
Step:Unary
{'subtrees': ['LK'], 'family': ['ART', 'VXFIN'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN',), 'right siblings': [], 'left siblings': [(ART die)], 'auto preterminal span': (2, 3), 'span': (2, 3), 'parent': 'NX', 'label': 'VXFIN', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU ja)
		(SU
			[01;31m(NX[00m
				(ART die)
				(VXFIN kosten)[01;31m)[00m
			(ART der)
			[01;31m(SIMPX[00m [01;33m(NX (LV[00m
				[01;31m(VF[00m
					[01;31m(NX[00m
						(NX die frage)
						[01;33m(SIMPX[00m (NX der kosten)[01;31m)[00m[01;31m)[00m
				[01;31m(SIMPX[00m
					(LK konnen)
					[01;31m(MF[00m
						(NX wir) [01;33mSIMPX) LV) NX)[00m
						[01;36m(VF[00m
							(ADVX [01;33m(SIMPX[00m
								(ADV dann))[01;36m)[00m[01;31m)[00m[01;31m)[00m
				(LK kann)
				(MF ich mit unserem vorgesetzten)
				(VC abchecken)[01;31m)[00m))) [01;33mSIMPX)[00m
Step:Unary
{'subtrees': ['ADVX'], 'family': ['NX', 'VF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV',), 'right siblings': [], 'left siblings': [(NX (PPER wir))], 'auto preterminal span': (10, 11), 'span': (10, 11), 'parent': 'MF', 'label': 'VF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU ja)
		(SU
			[01;31m(NX[00m
				(ART die)
				(VXFIN kosten)[01;31m)[00m
			(ART der)
			[01;31m(SIMPX[00m [01;33m(NX (LV[00m
				[01;31m(VF[00m
					[01;31m(NX[00m
						(NX die frage)
						[01;33m(SIMPX[00m (NX der kosten)[01;31m)[00m[01;31m)[00m
				[01;31m(SIMPX[00m
					(LK konnen)
					[01;31m(MF[00m
						(NX wir) [01;33mSIMPX) LV) NX)[00m
						[01;33m(SIMPX[00m (VF dann)[01;31m)[00m[01;31m)[00m
				(LK kann)
				(MF ich mit unserem vorgesetzten)
				(VC abchecken)[01;31m)[00m))) [01;33mSIMPX)[00m
Step:UNSET remove
{'subtrees': ['ART', 'VXFIN'], 'family': ['NX', 'ART', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'ART', 'ART', 'NN', 'ART', 'NN', 'VMFIN', 'PPER', 'ADV', 'VMFIN', 'PPER', 'APPR', 'PPOSAT', 'NN', 'VVINF'), 'right siblings': ['ART', 'SIMPX'], 'parent': 'SU', 'auto preterminal span': (1, 17), 'span': (1, 3), 'left siblings': [], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU ja)
		(SU
			(ART die)
			(VXFIN kosten)
			(ART der)
			[01;31m(SIMPX[00m [01;33m(NX (LV[00m
				[01;31m(VF[00m
					[01;31m(NX[00m
						(NX die frage)
						[01;33m(SIMPX[00m (NX der kosten)[01;31m)[00m[01;31m)[00m
				[01;31m(SIMPX[00m
					(LK konnen)
					[01;31m(MF[00m
						(NX wir) [01;33mSIMPX) LV) NX)[00m
						[01;33m(SIMPX[00m (VF dann)[01;31m)[00m[01;31m)[00m
				(LK kann)
				(MF ich mit unserem vorgesetzten)
				(VC abchecken)[01;31m)[00m))) [01;33mSIMPX)[00m
Step:Unary
{'subtrees': ['NX', 'NX'], 'family': ['NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'ART', 'NN'), 'right siblings': [], 'parent': 'VF', 'auto preterminal span': (4, 8), 'span': (4, 8), 'left siblings': [], 'label': 'NX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU ja)
		(SU
			(ART die)
			(VXFIN kosten)
			(ART der)
			[01;31m(SIMPX[00m [01;33m(NX (LV[00m
				[01;31m(VF[00m
					(NX die frage)
					[01;33m(SIMPX[00m (NX der kosten)[01;31m)[00m
				[01;31m(SIMPX[00m
					(LK konnen)
					[01;31m(MF[00m
						(NX wir) [01;33mSIMPX) LV) NX)[00m
						[01;33m(SIMPX[00m (VF dann)[01;31m)[00m[01;31m)[00m
				(LK kann)
				(MF ich mit unserem vorgesetzten)
				(VC abchecken)[01;31m)[00m))) [01;33mSIMPX)[00m
Step:UNSET remove
{'subtrees': ['NX', 'NX'], 'family': ['VF', 'SIMPX', 'LK', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'ART', 'NN', 'VMFIN', 'PPER', 'ADV', 'VMFIN', 'PPER', 'APPR', 'PPOSAT', 'NN', 'VVINF'), 'right siblings': ['SIMPX', 'LK', 'MF', 'VC'], 'parent': 'SIMPX', 'auto preterminal span': (4, 17), 'span': (4, 8), 'left siblings': [], 'label': 'VF', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU ja)
		(SU
			(ART die)
			(VXFIN kosten)
			(ART der)
			[01;31m(SIMPX[00m [01;33m(NX (LV[00m
				(NX die frage)
				[01;33m(SIMPX[00m (NX der kosten)
				[01;31m(SIMPX[00m
					(LK konnen)
					[01;31m(MF[00m
						(NX wir) [01;33mSIMPX) LV) NX)[00m
						[01;33m(SIMPX[00m (VF dann)[01;31m)[00m[01;31m)[00m
				(LK kann)
				(MF ich mit unserem vorgesetzten)
				(VC abchecken)[01;31m)[00m))) [01;33mSIMPX)[00m
Step:Clause Attachment
{'subtrees': ['NX', 'NX', 'SIMPX', 'LK', 'MF', 'VC'], 'family': ['ART', 'VXFIN', 'ART', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'ART', 'ART', 'NN', 'ART', 'NN', 'VMFIN', 'PPER', 'ADV', 'VMFIN', 'PPER', 'APPR', 'PPOSAT', 'NN', 'VVINF'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (1, 17), 'span': (4, 17), 'left siblings': ['ART', 'VXFIN', 'ART'], 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU ja)
		(SU
			(ART die)
			(VXFIN kosten)
			(ART der)
			[01;33m(NX (LV[00m (NX die frage)
			[01;33m(SIMPX[00m (NX der kosten)
			[01;31m(SIMPX[00m
				(LK konnen)
				[01;31m(MF[00m
					(NX wir) [01;33mSIMPX) LV) NX)[00m
					[01;33m(SIMPX[00m (VF dann)[01;31m)[00m[01;31m)[00m
			(LK kann)
			(MF ich mit unserem vorgesetzten)
			(VC abchecken)))) [01;33mSIMPX)[00m
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['ART', 'VXFIN', 'ART', 'NX', 'NX', 'SIMPX', 'LK', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'ART', 'ART', 'NN', 'ART', 'NN', 'VMFIN', 'PPER', 'ADV', 'VMFIN', 'PPER', 'APPR', 'PPOSAT', 'NN', 'VVINF'), 'right siblings': ['LK', 'MF', 'VC'], 'parent': 'SU', 'auto preterminal span': (1, 17), 'span': (8, 11), 'left siblings': ['ART', 'VXFIN', 'ART', 'NX', 'NX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU ja)
		(SU
			(ART die)
			(VXFIN kosten)
			(ART der)
			[01;33m(NX (LV[00m (NX die frage)
			[01;33m(SIMPX[00m (NX der kosten)
			(LK konnen)
			[01;31m(MF[00m
				(NX wir) [01;33mSIMPX) LV) NX)[00m
				[01;33m(SIMPX[00m (VF dann)[01;31m)[00m
			(LK kann)
			(MF ich mit unserem vorgesetzten)
			(VC abchecken)))) [01;33mSIMPX)[00m
Step:UNSET remove
{'subtrees': ['NX', 'VF'], 'family': ['ART', 'VXFIN', 'ART', 'NX', 'NX', 'LK', 'MF', 'LK', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'ART', 'ART', 'NN', 'ART', 'NN', 'VMFIN', 'PPER', 'ADV', 'VMFIN', 'PPER', 'APPR', 'PPOSAT', 'NN', 'VVINF'), 'right siblings': ['LK', 'MF', 'VC'], 'parent': 'SU', 'auto preterminal span': (1, 17), 'span': (9, 11), 'left siblings': ['ART', 'VXFIN', 'ART', 'NX', 'NX', 'LK'], 'label': 'MF', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU ja)
		(SU
			(ART die)
			(VXFIN kosten)
			(ART der)
			[01;36m(LV[00m
				[01;36m(NX[00m
					(NX die frage)
					[01;36m(SIMPX[00m
						(NX der kosten)
						(LK konnen)
						(NX wir)[01;36m)[00m[01;36m)[00m[01;36m)[00m
			[01;36m(SIMPX[00m
				(VF dann)
				(LK kann)
				(MF ich mit unserem vorgesetzten)
				(VC abchecken)[01;36m)[00m)))
Step:UNSET add
{'subtrees': ['NX', 'NX', 'LK', 'NX'], 'family': ['ART', 'VXFIN', 'ART', 'NX', 'VF', 'LK', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'ART', 'NN', 'VMFIN', 'PPER'), 'right siblings': [(VF (ADVX (ADV dann))), (LK (VXFIN (VMFIN kann))), (MF (NX (PPER ich)) (PX (APPR mit) (NX (PPOSAT unserem) (NN vorgesetzten)))), (VC (VXINF (VVINF abchecken)))], 'left siblings': [(ART die), (VXFIN (LK (NN kosten))), (ART der)], 'auto preterminal span': (4, 10), 'span': (4, 10), 'parent': 'SU', 'label': 'NX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU ja)
		(SU
			(ART die)
			(VXFIN kosten)
			(ART der)
			[01;36m(LV[00m
				(NX
					(NX die frage)
					[01;36m(SIMPX[00m
						(NX der kosten)
						(LK konnen)
						(NX wir)[01;36m)[00m)[01;36m)[00m
			[01;36m(SIMPX[00m
				(VF dann)
				(LK kann)
				(MF ich mit unserem vorgesetzten)
				(VC abchecken)[01;36m)[00m)))
Step:Unary
{'subtrees': ['NX'], 'family': ['ART', 'VXFIN', 'ART', 'LV', 'VF', 'LK', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'ART', 'NN', 'VMFIN', 'PPER'), 'right siblings': [(VF (ADVX (ADV dann))), (LK (VXFIN (VMFIN kann))), (MF (NX (PPER ich)) (PX (APPR mit) (NX (PPOSAT unserem) (NN vorgesetzten)))), (VC (VXINF (VVINF abchecken)))], 'left siblings': [(ART die), (VXFIN (LK (NN kosten))), (ART der)], 'auto preterminal span': (4, 10), 'span': (4, 10), 'parent': 'SU', 'label': 'LV', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU ja)
		(SU
			(ART die)
			(VXFIN kosten)
			(ART der)
			(LV
				(NX
					(NX die frage)
					[01;36m(SIMPX[00m
						(NX der kosten)
						(LK konnen)
						(NX wir)[01;36m)[00m))
			[01;36m(SIMPX[00m
				(VF dann)
				(LK kann)
				(MF ich mit unserem vorgesetzten)
				(VC abchecken)[01;36m)[00m)))
Step:UNSET add
{'subtrees': ['NX', 'LK', 'NX'], 'family': ['NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'VMFIN', 'PPER'), 'right siblings': [], 'left siblings': [(NX (ART die) (NN frage))], 'auto preterminal span': (6, 10), 'span': (6, 10), 'parent': 'NX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU ja)
		(SU
			(ART die)
			(VXFIN kosten)
			(ART der)
			(LV die frage der kosten konnen wir)
			[01;36m(SIMPX[00m
				(VF dann)
				(LK kann)
				(MF ich mit unserem vorgesetzten)
				(VC abchecken)[01;36m)[00m)))
Step:UNSET add
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['ART', 'VXFIN', 'ART', 'LV', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VMFIN', 'PPER', 'APPR', 'PPOSAT', 'NN', 'VVINF'), 'right siblings': [], 'left siblings': [(ART die), (VXFIN (LK (NN kosten))), (ART der), (LV (NX (NX (ART die) (NN frage)) (SIMPX (NX (ART der) (NN kosten)) (LK (VXFIN (VMFIN konnen))) (NX (PPER wir)))))], 'auto preterminal span': (10, 17), 'span': (10, 17), 'parent': 'SU', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP ja die kosten der die frage der kosten konnen wir dann kann ich mit unserem vorgesetzten abchecken)

Sentence 697:
0 Initial errors
0 on fringe, 0 iterations


# Time of run:
# Sat Jul 31 11:52:13 2021
# Command:
# ./berkeley_parse_analyser/classify_german_vm.py sample_data/turn_vm_ger_no_speech_output_top.txt sample_data/turn_dev_top_ger.trees classified.vm_ger_turn.no_speech_TOP
#
Printing tree transformations
Sentence 1:
0 Initial errors
0 on fringe, 0 iterations

Sentence 2:
0 Initial errors
0 on fringe, 0 iterations

Sentence 3:
12 Initial errors
0 on fringe, 7 iterations
4 Error:UNSET move
2 Error:Clause Attachment
2 Error:NP Attachment
1 Error:Unary
1 Error:Clause Attachment
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;36m(SU[00m
				(SIMPX
					(VF ich)
					(LK mache)
					(MF ihnen das jetzt)
					(VC fertig))[01;36m)[00m
			[01;36m(SU[00m
				[01;31m(SIMPX[00m [01;33m(SIMPX[00m
					(LK konnen)
					[01;31m(MF[00m [01;33m(MF[00m
						(NX
							(PPER sie))[01;31m)[00m[01;31m)[00m
				[01;31m(SIMPX[00m
					[01;31m(VF[00m
						(ADVX
							(ADV morgen))[01;31m)[00m [01;33mMF) SIMPX)[00m
					(LK kommt)
					(MF die bestatigung)[01;31m)[00m[01;36m)[00m
			[01;36m(SU[00m
				(SIMPX
					(LK konnen)
					[01;36m(MF[00m
						[01;31m(MF[00m
							(NX sie)
							(NX es)[01;31m)[00m
						(NX ticket)[01;36m)[00m
					(VC abholen))[01;36m)[00m[01;31m)[00m))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['NX', 'VF'], 'mover info': [('VF', (8, 9))], 'old_family': ['VF', 'LK', 'MF'], 'start left siblings': [], 'auto preterminals': ('PPER', 'VVFIN', 'PPER', 'PDS', 'ADV', 'PTKVZ', 'VMFIN', 'PPER', 'ADV', 'VVFIN', 'ART', 'NN', 'VMFIN', 'PPER', 'PPER', 'NN', 'VVINF'), 'start right siblings': ['LK', 'MF'], 'end left siblings': ['NX'], 'auto preterminal span': (0, 17), 'movers': ['VF'], 'old_parent': 'SIMPX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;36m(SU[00m
				(SIMPX
					(VF ich)
					(LK mache)
					(MF ihnen das jetzt)
					(VC fertig))[01;36m)[00m
			[01;36m(SU[00m
				(SIMPX
					(LK konnen)
					(MF
						(NX sie)
						[01;31m(VF[00m
							(ADVX
								(ADV morgen))[01;31m)[00m))
				[01;31m(SIMPX[00m
					(LK kommt)
					(MF die bestatigung)[01;31m)[00m[01;36m)[00m
			[01;36m(SU[00m
				(SIMPX
					(LK konnen)
					[01;36m(MF[00m
						[01;31m(MF[00m
							(NX sie)
							(NX es)[01;31m)[00m
						(NX ticket)[01;36m)[00m
					(VC abholen))[01;36m)[00m[01;31m)[00m))
Step:Clause Attachment
{'new_parent': 'TURN', 'new_family': ['SIMPX', 'SIMPX', 'SIMPX', 'SU'], 'mover info': [('SIMPX', (0, 6)), ('SIMPX', (6, 9)), ('SIMPX', (9, 12))], 'old_family': ['SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'start left siblings': [], 'auto preterminals': ('PPER', 'VVFIN', 'PPER', 'PDS', 'ADV', 'PTKVZ', 'VMFIN', 'PPER', 'ADV', 'VVFIN', 'ART', 'NN', 'VMFIN', 'PPER', 'PPER', 'NN', 'VVINF'), 'start right siblings': ['SIMPX'], 'end left siblings': [], 'auto preterminal span': (0, 17), 'movers': ['SIMPX', 'SIMPX', 'SIMPX'], 'old_parent': 'SU', 'end right siblings': ['SU'], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;36m(SU[00m
			(SIMPX
				(VF ich)
				(LK mache)
				(MF ihnen das jetzt)
				(VC fertig))[01;36m)[00m
		[01;36m(SU[00m
			(SIMPX
				(LK konnen)
				(MF
					(NX sie)
					[01;31m(VF[00m
						(ADVX
							(ADV morgen))[01;31m)[00m))
			[01;31m(SIMPX[00m
				(LK kommt)
				(MF die bestatigung)[01;31m)[00m[01;36m)[00m
		(SU
			(SIMPX
				(LK konnen)
				[01;36m(MF[00m
					[01;31m(MF[00m
						(NX sie)
						(NX es)[01;31m)[00m
					(NX ticket)[01;36m)[00m
				(VC abholen)))))
Step:NP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'NX', 'NX'], 'mover info': [('NX', (15, 16))], 'old_family': ['LK', 'MF', 'NX', 'VC'], 'start left siblings': ['LK', 'MF'], 'auto preterminals': ('VMFIN', 'PPER', 'PPER', 'NN', 'VVINF'), 'start right siblings': ['VC'], 'end left siblings': ['NX', 'NX'], 'auto preterminal span': (12, 17), 'movers': ['NX'], 'old_parent': 'SIMPX', 'POS confusion': ('NN', 'NN'), 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;36m(SU[00m
			(SIMPX
				(VF ich)
				(LK mache)
				(MF ihnen das jetzt)
				(VC fertig))[01;36m)[00m
		[01;36m(SU[00m
			(SIMPX
				(LK konnen)
				(MF
					(NX sie)
					[01;31m(VF[00m
						(ADVX
							(ADV morgen))[01;31m)[00m))
			[01;31m(SIMPX[00m
				(LK kommt)
				(MF die bestatigung)[01;31m)[00m[01;36m)[00m
		(SU konnen sie es ticket abholen)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SU', 'SIMPX', 'SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'PPER', 'PDS', 'ADV', 'PTKVZ'), 'right siblings': [(SIMPX (LK (VXFIN (VMFIN konnen))) (MF (NX (PPER sie)) (VF (ADVX (ADV morgen))))), (SIMPX (LK (VXFIN (VVFIN kommt))) (MF (NX (ART die) (NN bestatigung)))), (SU (SIMPX (LK (VXFIN (VMFIN konnen))) (MF (NX (PPER sie)) (NX (PPER es)) (NX (NN ticket))) (VC (VXINF (VVINF abholen)))))], 'left siblings': [], 'auto preterminal span': (0, 6), 'span': (0, 6), 'parent': 'TURN', 'label': 'SU', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU ich mache ihnen das jetzt fertig)
		[01;36m(SU[00m
			(SIMPX
				(LK konnen)
				(MF
					(NX sie)
					[01;31m(VF[00m
						(ADVX
							(ADV morgen))[01;31m)[00m))
			[01;31m(SIMPX[00m
				(LK kommt)
				(MF die bestatigung)[01;31m)[00m[01;36m)[00m
		(SU konnen sie es ticket abholen)))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('VMFIN', 'PPER', 'ADV', 'VVFIN', 'ART', 'NN'), 'right siblings': [(SU (SIMPX (LK (VXFIN (VMFIN konnen))) (MF (NX (PPER sie)) (NX (PPER es)) (NX (NN ticket))) (VC (VXINF (VVINF abholen)))))], 'left siblings': [(SU (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN mache))) (MF (NX (PPER ihnen)) (NX (PDS das)) (ADVX (ADV jetzt))) (VC (PTKVZ fertig))))], 'auto preterminal span': (6, 12), 'span': (6, 12), 'parent': 'TURN', 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU ich mache ihnen das jetzt fertig)
		(SU
			(SIMPX
				(LK konnen)
				(MF
					(NX sie)
					[01;31m(VF[00m
						(ADVX
							(ADV morgen))[01;31m)[00m))
			[01;31m(SIMPX[00m
				(LK kommt)
				(MF die bestatigung)[01;31m)[00m)
		(SU konnen sie es ticket abholen)))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['NX', 'VF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (7, 9), 'span': (8, 9), 'left siblings': ['NX'], 'label': 'VF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU ich mache ihnen das jetzt fertig)
		(SU
			(SIMPX konnen sie morgen)
			[01;31m(SIMPX[00m
				(LK kommt)
				(MF die bestatigung)[01;31m)[00m)
		(SU konnen sie es ticket abholen)))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VMFIN', 'PPER', 'ADV', 'VVFIN', 'ART', 'NN'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (6, 12), 'span': (9, 12), 'left siblings': ['SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ich mache ihnen das jetzt fertig konnen sie morgen kommt die bestatigung konnen sie es ticket abholen)

Sentence 4:
0 Initial errors
0 on fringe, 0 iterations

Sentence 5:
0 Initial errors
0 on fringe, 0 iterations

Sentence 6:
0 Initial errors
0 on fringe, 0 iterations

Sentence 7:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM tag)
			(DM frau meurer)
			[01;36m(SU[00m
				(SIMPX
					(VF hier)
					(LK ist)
					(MF fischenbeck))[01;36m)[00m)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['DM', 'DM', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'NE'), 'right siblings': [], 'left siblings': [(DM (NX (NN tag))), (DM (NX (NN frau) (NE meurer)))], 'auto preterminal span': (3, 6), 'span': (3, 6), 'parent': 'SU', 'label': 'SU', 'classified_type': 'Unary', 'type': 'add'}
(TOP tag frau meurer hier ist fischenbeck)

Sentence 8:
0 Initial errors
0 on fringe, 0 iterations

Sentence 9:
0 Initial errors
0 on fringe, 0 iterations

Sentence 10:
0 Initial errors
0 on fringe, 0 iterations

Sentence 11:
0 Initial errors
0 on fringe, 0 iterations

Sentence 12:
5 Initial errors
0 on fringe, 2 iterations
3 Error:UNSET move
2 Error:Different label
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			[01;31m(SIMPX[00m
				[01;36m(SU[00m [01;31m(LV[00m
					(PX
						(APPR in)
						(NX zwei wochen))[01;31m)[00m[01;36m)[00m
				[01;36m(SIMPX[00m
					[01;36m(SU[00m
						(VF das)
						(LK ware)
						(MF der wievielte)[01;36m)[00m[01;36m)[00m[01;31m)[00m)))
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['LV', 'SU'], 'mover info': [('LV', (0, 3))], 'old_family': ['LV', 'VF', 'LK', 'MF'], 'start left siblings': [], 'auto preterminals': ('APPR', 'CARD', 'NN', 'PDS', 'VAFIN', 'ART', 'NN'), 'start right siblings': ['VF', 'LK', 'MF'], 'end left siblings': [], 'auto preterminal span': (0, 7), 'adding node already present': False, 'movers': ['LV'], 'old_parent': 'SIMPX', 'added and moved': True, 'end right siblings': ['SU'], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'SU'}
(TOP
	(SU
		(TURN
			[01;36m(SU[00m [01;31m(LV[00m
				(PX
					(APPR in)
					(NX zwei wochen))[01;31m)[00m[01;36m)[00m
			(SU das ware der wievielte))))
Step:Different label
{'family': ['SU', 'SU'], 'auto preterminal span': (0, 3), 'span': (0, 3), 'subtrees': ['PX'], 'parent': 'TURN', 'over_word': False, 'auto preterminals': ('APPR', 'CARD', 'NN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('LV', 'SU')}
(TOP in zwei wochen das ware der wievielte)

Sentence 13:
0 Initial errors
0 on fringe, 0 iterations

Sentence 14:
0 Initial errors
0 on fringe, 0 iterations

Sentence 15:
0 Initial errors
0 on fringe, 0 iterations

Sentence 16:
2 Initial errors
0 on fringe, 2 iterations
1 Error:Unary
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SIMPX[00m
	(TOP
		(TURN
			(SU
				(SIMPX
					(KOORD und)
					(C wenn)
					(FKOORD
						(MVC wir sonntags fahren)
						(KON und)
						(MVC
							(MF
								(ADVX noch)
								[01;31m(ADVX[00m
									(ADV vorher)[01;31m)[00m
								(PX ins theater))
							(VC gehen))))
				(ADVX oder so))))[01;36m)[00m
Step:Unary
{'subtrees': ['TURN'], 'family': ['SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'KOUS', 'PPER', 'ADV', 'VVFIN', 'KON', 'ADV', 'ADV', 'APPRART', 'NN', 'VVFIN', 'KON', 'ADV'), 'right siblings': [], 'left siblings': [], 'auto preterminal span': (0, 13), 'span': (0, 13), 'parent': 'TOP', 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(SIMPX
		(TURN
			(SU
				(SIMPX
					(KOORD und)
					(C wenn)
					(FKOORD
						(MVC wir sonntags fahren)
						(KON und)
						(MVC
							(MF
								(ADVX noch)
								[01;31m(ADVX[00m
									(ADV vorher)[01;31m)[00m
								(PX ins theater))
							(VC gehen))))
				(ADVX oder so)))))
Step:Single Word Phrase
{'subtrees': ['ADV'], 'family': ['ADVX', 'ADVX', 'PX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADV', 'ADV', 'APPRART', 'NN'), 'right siblings': ['PX'], 'parent': 'MF', 'auto preterminal span': (6, 10), 'span': (7, 8), 'left siblings': ['ADVX'], 'label': 'ADVX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP und wenn wir sonntags fahren und noch vorher ins theater gehen oder so)

Sentence 17:
0 Initial errors
0 on fringe, 0 iterations

Sentence 18:
0 Initial errors
0 on fringe, 0 iterations

Sentence 19:
0 Initial errors
0 on fringe, 0 iterations

Sentence 20:
0 Initial errors
0 on fringe, 0 iterations

Sentence 21:
0 Initial errors
0 on fringe, 0 iterations

Sentence 22:
0 Initial errors
0 on fringe, 0 iterations

Sentence 23:
0 Initial errors
0 on fringe, 0 iterations

Sentence 24:
0 Initial errors
0 on fringe, 0 iterations

Sentence 25:
0 Initial errors
0 on fringe, 0 iterations

Sentence 26:
0 Initial errors
0 on fringe, 0 iterations

Sentence 27:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX
				(VF vielleicht)
				(LK konnen)
				(MF
					(NX sie)
					(ADVX dann)
					(ADVX auch)
					[01;36m(PX[00m
						(ADVX direkt)
						[01;31m(PX[00m
							(APPR nach)
							(NX dem intercityhotel)[01;31m)[00m[01;36m)[00m)
				(VC fragen)))))
Step:Modifier Attachment
{'new_parent': 'PX', 'new_family': ['ADVX', 'APPR', 'NX'], 'mover info': [('ADVX', (6, 7))], 'old_family': ['NX', 'ADVX', 'ADVX', 'ADVX', 'PX'], 'start left siblings': ['NX', 'ADVX', 'ADVX'], 'auto preterminals': ('PPER', 'ADV', 'ADV', 'ADV', 'APPR', 'ART', 'NE'), 'start right siblings': ['PX'], 'end left siblings': [], 'auto preterminal span': (3, 10), 'movers': ['ADVX'], 'old_parent': 'MF', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['APPR', 'NX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP ja vielleicht konnen sie dann auch direkt nach dem intercityhotel fragen)

Sentence 28:
0 Initial errors
0 on fringe, 0 iterations

Sentence 29:
0 Initial errors
0 on fringe, 0 iterations

Sentence 30:
12 Initial errors
0 on fringe, 7 iterations
3 Error:UNSET move
2 Error:Different label
2 Error:Different label
2 Error:PP Attachment
1 Error:Clause Attachment
1 Error:PP Attachment
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(SIMPX wissen sie was)
			[01;36m(SIMPX[00m
				(SIMPX
					(VF ich)
					(FKOORD
						(LKMVC rufe im reiseburo an)
						(KON und)
						[01;36m(LKM[00m
							[01;31m(LKM[00m
								(LK klare)
								[01;36m(VF[00m [01;36m(SIMPX[00m [01;31m(MF[00m [01;33m(SIMPX[00m
									[01;31m(NX[00m
										(NX das)
										(NX alles)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;31m)[00m
							[01;31m(LKM[00m
								(LK kaufe)
								(MF die tickets)[01;31m)[00m[01;36m)[00m)) [01;33mSIMPX)[00m
				(SIMPX
					(KOORD und)
					(VF dann)
					[01;36m(FKOORD[00m
						(LK rufe)
						(MF ich sie noch mal)
						(VC an)
						(NF [01;33m(PX[00m
							(PX
								(APPR wegen)
								[01;31m(NX[00m
									(NX dem programm) [01;33mPX)[00m
									(PX im ballhaus)[01;31m)[00m))[01;36m)[00m)[01;36m)[00m)))
Step:UNSET move
{'new_parent': 'LKM', 'new_family': ['LK', 'MF', 'LKM'], 'mover info': [('LKM', (12, 15))], 'old_family': ['LKMVC', 'KON', 'LKM', 'LKM'], 'start left siblings': ['LKMVC', 'KON', 'LKM'], 'auto preterminals': ('VVFIN', 'APPRART', 'NN', 'PTKVZ', 'KON', 'VVFIN', 'PDS', 'PIS', 'VVFIN', 'ART', 'NN'), 'start right siblings': [], 'end left siblings': ['LK', 'MF'], 'auto preterminal span': (4, 15), 'adding node already present': False, 'movers': ['LKM'], 'old_parent': 'FKOORD', 'added and moved': True, 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'FKOORD'}
(TOP
	(TURN
		(SU
			(SIMPX wissen sie was)
			[01;36m(SIMPX[00m
				(SIMPX
					(VF ich)
					(FKOORD
						(LKMVC rufe im reiseburo an)
						(KON und)
						(LKM
							(LK klare)
							(SIMPX
								[01;36m(VF[00m [01;36m(SIMPX[00m [01;31m(MF[00m
									[01;31m(NX[00m
										(NX das)
										(NX alles)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m
								[01;31m(LKM[00m
									(LK kaufe)
									(MF die tickets)[01;31m)[00m))))
				(SIMPX
					(KOORD und)
					(VF dann)
					[01;36m(FKOORD[00m
						(LK rufe)
						(MF ich sie noch mal)
						(VC an)
						(NF [01;33m(PX[00m
							(PX
								(APPR wegen)
								[01;31m(NX[00m
									(NX dem programm) [01;33mPX)[00m
									(PX im ballhaus)[01;31m)[00m))[01;36m)[00m)[01;36m)[00m)))
Step:Different label
{'family': ['SIMPX', 'LKM'], 'auto preterminal span': (10, 12), 'span': (10, 12), 'subtrees': ['NX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('PDS', 'PIS'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('MF', 'SIMPX')}
(TOP
	(TURN
		(SU
			(SIMPX wissen sie was)
			[01;36m(SIMPX[00m
				(SIMPX
					(VF ich)
					(FKOORD
						(LKMVC rufe im reiseburo an)
						(KON und)
						(LKM
							(LK klare)
							(SIMPX
								[01;36m(VF[00m
									(SIMPX
										[01;31m(NX[00m
											(NX das)
											(NX alles)[01;31m)[00m)[01;36m)[00m
								[01;31m(LKM[00m
									(LK kaufe)
									(MF die tickets)[01;31m)[00m))))
				(SIMPX
					(KOORD und)
					(VF dann)
					[01;36m(FKOORD[00m
						(LK rufe)
						(MF ich sie noch mal)
						(VC an)
						(NF [01;33m(PX[00m
							(PX
								(APPR wegen)
								[01;31m(NX[00m
									(NX dem programm) [01;33mPX)[00m
									(PX im ballhaus)[01;31m)[00m))[01;36m)[00m)[01;36m)[00m)))
Step:Different label
{'family': ['VF'], 'auto preterminal span': (10, 12), 'span': (10, 12), 'subtrees': ['NX', 'NX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('PDS', 'PIS'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('NX', 'VF')}
(TOP
	(TURN
		(SU
			(SIMPX wissen sie was)
			[01;36m(SIMPX[00m
				(SIMPX
					(VF ich)
					(FKOORD
						(LKMVC rufe im reiseburo an)
						(KON und)
						(LKM
							(LK klare)
							(SIMPX
								(SIMPX das alles)
								[01;31m(LKM[00m
									(LK kaufe)
									(MF die tickets)[01;31m)[00m))))
				(SIMPX
					(KOORD und)
					(VF dann)
					[01;36m(FKOORD[00m
						(LK rufe)
						(MF ich sie noch mal)
						(VC an)
						(NF [01;33m(PX[00m
							(PX
								(APPR wegen)
								[01;31m(NX[00m
									(NX dem programm) [01;33mPX)[00m
									(PX im ballhaus)[01;31m)[00m))[01;36m)[00m)[01;36m)[00m)))
Step:PP Attachment
{'new_parent': 'NF', 'new_family': ['PX', 'PX'], 'mover info': [('PX', (26, 28))], 'old_family': ['NX', 'PX'], 'start left siblings': ['NX'], 'auto preterminals': ('APPR', 'ART', 'NN', 'APPRART', 'NE'), 'start right siblings': [], 'end left siblings': ['PX'], 'auto preterminal span': (23, 28), 'adding node already present': False, 'movers': ['PX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'PX'}
(TOP
	(TURN
		(SU
			(SIMPX wissen sie was)
			[01;36m(SIMPX[00m
				(SIMPX
					(VF ich)
					(FKOORD
						(LKMVC rufe im reiseburo an)
						(KON und)
						(LKM
							(LK klare)
							(SIMPX
								(SIMPX das alles)
								[01;31m(LKM[00m
									(LK kaufe)
									(MF die tickets)[01;31m)[00m))))
				(SIMPX
					(KOORD und)
					(VF dann)
					[01;36m(FKOORD[00m
						(LK rufe)
						(MF ich sie noch mal)
						(VC an)
						(PX wegen dem programm im ballhaus)[01;36m)[00m)[01;36m)[00m)))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'APPRART', 'NN', 'PTKVZ', 'KON', 'VVFIN', 'PDS', 'PIS', 'VVFIN', 'ART', 'NN', 'KON', 'ADV', 'VVFIN', 'PPER', 'PPER', 'ADV', 'ADV', 'PTKVZ', 'APPR', 'ART', 'NN', 'APPRART', 'NE'), 'right siblings': [], 'left siblings': [(SIMPX (LK (VXFIN (VVFIN wissen))) (MF (NX (PPER sie)) (NX (PIS was))))], 'auto preterminal span': (3, 28), 'span': (3, 28), 'parent': 'SU', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU
			(SIMPX wissen sie was)
			(SIMPX
				(SIMPX
					(VF ich)
					(FKOORD
						(LKMVC rufe im reiseburo an)
						(KON und)
						(LKM
							(LK klare)
							(SIMPX
								(SIMPX das alles)
								[01;31m(LKM[00m
									(LK kaufe)
									(MF die tickets)[01;31m)[00m))))
				(SIMPX
					(KOORD und)
					(VF dann)
					[01;36m(FKOORD[00m
						(LK rufe)
						(MF ich sie noch mal)
						(VC an)
						(PX wegen dem programm im ballhaus)[01;36m)[00m)))))
Step:PP Attachment
{'subtrees': ['LK', 'MF', 'VC', 'PX'], 'family': ['KOORD', 'VF', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'PPER', 'ADV', 'ADV', 'PTKVZ', 'APPR', 'ART', 'NN', 'APPRART', 'NE'), 'right siblings': [], 'left siblings': [(KOORD (KON und)), (VF (ADVX (ADV dann)))], 'auto preterminal span': (17, 28), 'span': (17, 28), 'parent': 'SIMPX', 'label': 'FKOORD', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU
			(SIMPX wissen sie was)
			(SIMPX
				(SIMPX
					(VF ich)
					(FKOORD
						(LKMVC rufe im reiseburo an)
						(KON und)
						(LKM
							(LK klare)
							(SIMPX
								(SIMPX das alles)
								[01;31m(LKM[00m
									(LK kaufe)
									(MF die tickets)[01;31m)[00m))))
				(SIMPX und dann rufe ich sie noch mal an wegen dem programm im ballhaus)))))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['SIMPX', 'LKM'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'PIS', 'VVFIN', 'ART', 'NN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (10, 15), 'span': (12, 15), 'left siblings': ['SIMPX'], 'label': 'LKM', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP wissen sie was ich rufe im reiseburo an und klare das alles kaufe die tickets und dann rufe ich sie noch mal an wegen dem programm im ballhaus)

Sentence 31:
7 Initial errors
0 on fringe, 6 iterations
2 Error:Modifier Attachment
1 Error:Co-ordination
1 Error:UNSET add
1 Error:Unary
1 Error:Single Word Phrase
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			[01;31m(P[00m
				(SIMPX
					(VF wir)
					(LK brauchten)
					(MF
						(ADVX vielleicht)
						(ADVX vorher)
						(ADVX noch)
						[01;31m(NX[00m
							[01;31m(ADVX[00m
								(ADV ungefahr)[01;31m)[00m
							[01;36m(NX[00m
								(ART einen)
								(NN zug)[01;36m)[00m[01;31m)[00m)
					(NF mit dem wir zuruckfahren))
				(KOUS weil)
				(SIMPX
					(VF ich)
					(LK mus)
					(APPRART am)
					[01;36m(DM[00m
						(DM nee)
						(DM nee)[01;36m)[00m
					[01;31m(MF[00m
						(PX
							(PX am vierundzwanzigsten)
							(PX
								(ADVX ungefahr)
								[01;36m(PX[00m
									(APPR um)
									(NX vier uhr)[01;36m)[00m))
						(ADVX wieder)
						(ADVX hier)[01;31m)[00m
					(VC sein)
					(NF weil ich einen termin habe))[01;31m)[00m)))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['ADVX', 'ADVX', 'ADVX', 'ADVX', 'NX'], 'mover info': [('ADVX', (5, 6))], 'old_family': ['ADVX', 'ART', 'NN'], 'start left siblings': [], 'auto preterminals': ('ADV', 'ADV', 'ADV', 'ADV', 'ART', 'NN'), 'start right siblings': ['ART', 'NN'], 'end left siblings': ['ADVX', 'ADVX', 'ADVX'], 'auto preterminal span': (2, 8), 'movers': ['ADVX'], 'old_parent': 'NX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['NX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU
			[01;31m(P[00m
				(SIMPX
					(VF wir)
					(LK brauchten)
					(MF
						(ADVX vielleicht)
						(ADVX vorher)
						(ADVX noch)
						[01;31m(ADVX[00m
							(ADV ungefahr)[01;31m)[00m
						(NX einen zug))
					(NF mit dem wir zuruckfahren))
				(KOUS weil)
				(SIMPX
					(VF ich)
					(LK mus)
					(APPRART am)
					[01;36m(DM[00m
						(DM nee)
						(DM nee)[01;36m)[00m
					[01;31m(MF[00m
						(PX
							(PX am vierundzwanzigsten)
							(PX
								(ADVX ungefahr)
								[01;36m(PX[00m
									(APPR um)
									(NX vier uhr)[01;36m)[00m))
						(ADVX wieder)
						(ADVX hier)[01;31m)[00m
					(VC sein)
					(NF weil ich einen termin habe))[01;31m)[00m)))
Step:Co-ordination
{'subtrees': ['DM', 'DM'], 'family': ['VF', 'LK', 'APPRART', 'DM', 'MF', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PTKANT'), 'right siblings': [(MF (PX (PX (APPRART am) (NX (NN vierundzwanzigsten))) (PX (ADVX (ADV ungefahr)) (APPR um) (NX (ADJX (CARD vier)) (NN uhr)))) (ADVX (ADV wieder)) (ADVX (ADV hier))), (VC (VXINF (VAINF sein))), (NF (SIMPX (C (KOUS weil)) (MF (NX (PPER ich)) (NX (ART einen) (NN termin))) (VC (VXFIN (VAFIN habe)))))], 'left siblings': [(VF (NX (PPER ich))), (LK (VXFIN (VMFIN mus))), (APPRART am)], 'auto preterminal span': (16, 18), 'span': (16, 18), 'parent': 'SIMPX', 'label': 'DM', 'classified_type': 'Co-ordination', 'type': 'add'}
(TOP
	(TURN
		(SU
			[01;31m(P[00m
				(SIMPX
					(VF wir)
					(LK brauchten)
					(MF
						(ADVX vielleicht)
						(ADVX vorher)
						(ADVX noch)
						[01;31m(ADVX[00m
							(ADV ungefahr)[01;31m)[00m
						(NX einen zug))
					(NF mit dem wir zuruckfahren))
				(KOUS weil)
				(SIMPX
					(VF ich)
					(LK mus)
					(APPRART am)
					(DM nee nee)
					[01;31m(MF[00m
						(PX
							(PX am vierundzwanzigsten)
							(PX
								(ADVX ungefahr)
								[01;36m(PX[00m
									(APPR um)
									(NX vier uhr)[01;36m)[00m))
						(ADVX wieder)
						(ADVX hier)[01;31m)[00m
					(VC sein)
					(NF weil ich einen termin habe))[01;31m)[00m)))
Step:UNSET add
{'subtrees': ['APPR', 'NX'], 'family': ['ADVX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'CARD', 'NN'), 'right siblings': [], 'left siblings': [(ADVX (ADV ungefahr))], 'auto preterminal span': (21, 24), 'span': (21, 24), 'parent': 'PX', 'label': 'PX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU
			[01;31m(P[00m
				(SIMPX
					(VF wir)
					(LK brauchten)
					(MF
						(ADVX vielleicht)
						(ADVX vorher)
						(ADVX noch)
						[01;31m(ADVX[00m
							(ADV ungefahr)[01;31m)[00m
						(NX einen zug))
					(NF mit dem wir zuruckfahren))
				(KOUS weil)
				(SIMPX
					(VF ich)
					(LK mus)
					(APPRART am)
					(DM nee nee)
					[01;31m(MF[00m
						(PX am vierundzwanzigsten ungefahr um vier uhr)
						(ADVX wieder)
						(ADVX hier)[01;31m)[00m
					(VC sein)
					(NF weil ich einen termin habe))[01;31m)[00m)))
Step:Unary
{'subtrees': ['SIMPX', 'KOUS', 'SIMPX'], 'family': ['P'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'ADV', 'ADV', 'ADV', 'ART', 'NN', 'APPR', 'PRELS', 'PPER', 'VVFIN', 'KOUS', 'PPER', 'VMFIN', 'APPRART', 'PTKANT', 'PTKANT', 'APPRART', 'NN', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'ADV', 'VAINF', 'KOUS', 'PPER', 'ART', 'NN', 'VAFIN'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (0, 32), 'span': (0, 32), 'left siblings': [], 'label': 'P', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(SIMPX
				(VF wir)
				(LK brauchten)
				(MF
					(ADVX vielleicht)
					(ADVX vorher)
					(ADVX noch)
					[01;31m(ADVX[00m
						(ADV ungefahr)[01;31m)[00m
					(NX einen zug))
				(NF mit dem wir zuruckfahren))
			(KOUS weil)
			(SIMPX
				(VF ich)
				(LK mus)
				(APPRART am)
				(DM nee nee)
				[01;31m(MF[00m
					(PX am vierundzwanzigsten ungefahr um vier uhr)
					(ADVX wieder)
					(ADVX hier)[01;31m)[00m
				(VC sein)
				(NF weil ich einen termin habe)))))
Step:Single Word Phrase
{'subtrees': ['ADV'], 'family': ['ADVX', 'ADVX', 'ADVX', 'ADVX', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADV', 'ADV', 'ADV', 'ADV', 'ART', 'NN'), 'right siblings': ['NX'], 'parent': 'MF', 'auto preterminal span': (2, 8), 'span': (5, 6), 'left siblings': ['ADVX', 'ADVX', 'ADVX'], 'label': 'ADVX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(SIMPX wir brauchten vielleicht vorher noch ungefahr einen zug mit dem wir zuruckfahren)
			(KOUS weil)
			(SIMPX
				(VF ich)
				(LK mus)
				(APPRART am)
				(DM nee nee)
				[01;31m(MF[00m
					(PX am vierundzwanzigsten ungefahr um vier uhr)
					(ADVX wieder)
					(ADVX hier)[01;31m)[00m
				(VC sein)
				(NF weil ich einen termin habe)))))
Step:Modifier Attachment
{'subtrees': ['PX', 'ADVX', 'ADVX'], 'family': ['VF', 'LK', 'APPRART', 'DM', 'MF', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VMFIN', 'APPRART', 'PTKANT', 'PTKANT', 'APPRART', 'NN', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'ADV', 'VAINF', 'KOUS', 'PPER', 'ART', 'NN', 'VAFIN'), 'right siblings': ['VC', 'NF'], 'parent': 'SIMPX', 'auto preterminal span': (13, 32), 'span': (18, 26), 'left siblings': ['VF', 'LK', 'APPRART', 'DM'], 'label': 'MF', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP wir brauchten vielleicht vorher noch ungefahr einen zug mit dem wir zuruckfahren weil ich mus am nee nee am vierundzwanzigsten ungefahr um vier uhr wieder hier sein weil ich einen termin habe)

Sentence 32:
11 Initial errors
0 on fringe, 6 iterations
3 Error:PP Attachment
2 Error:Single Word Phrase
2 Error:Single Word Phrase
2 Error:UNSET move
1 Error:UNSET add
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			[01;31m(SIMPX[00m
				(VF ich)
				(LK sehe)
				(MF grade)
				(NF
					(SIMPX
						(VF ab hannover)
						(LK geht)
						[01;31m(MF[00m
							[01;36m(MF[00m
								[01;36m(ADVX[00m [01;31m(ADJX[00m
									(ADJD stundlich)[01;31m)[00m[01;36m)[00m
								(NX ein zug)[01;36m)[00m
							[01;36m(VC[00m [01;31m(ADVX[00m
								(ADV zuruck)[01;31m)[00m[01;36m)[00m
							[01;33m(PX (NF[00m (PX von bonn)[01;31m)[00m
						[01;31m(NF[00m
							(PX
								(ADVX immer)
								[01;36m(PX[00m
									(APPR um)
									(NX achtundfunfzig)[01;36m)[00m)[01;31m)[00m))[01;31m)[00m))) [01;33mNF) PX)[00m
Step:PP Attachment
{'new_parent': 'NF', 'new_family': ['PX', 'PX'], 'mover info': [('PX', (10, 12))], 'old_family': ['ADJX', 'NX', 'ADVX', 'PX'], 'start left siblings': ['ADJX', 'NX', 'ADVX'], 'auto preterminals': ('APPR', 'NE', 'VVFIN', 'ADJD', 'ART', 'NN', 'ADV', 'APPR', 'NE', 'ADV', 'APPR', 'CARD'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (3, 15), 'adding node already present': False, 'movers': ['PX'], 'old_parent': 'MF', 'added and moved': True, 'end right siblings': ['PX'], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'PX'}
(TOP
	(TURN
		(SU
			[01;31m(SIMPX[00m
				(VF ich)
				(LK sehe)
				(MF grade)
				(NF
					(SIMPX
						(VF ab hannover)
						(LK geht)
						[01;31m(MF[00m
							[01;36m(MF[00m
								[01;36m(ADVX[00m [01;31m(ADJX[00m
									(ADJD stundlich)[01;31m)[00m[01;36m)[00m
								(NX ein zug)[01;36m)[00m
							[01;36m(VC[00m [01;31m(ADVX[00m
								(ADV zuruck)[01;31m)[00m[01;36m)[00m[01;31m)[00m
						(PX
							(NF
								(PX von bonn)
								(PX
									(ADVX immer)
									[01;36m(PX[00m
										(APPR um)
										(NX achtundfunfzig)[01;36m)[00m)))))[01;31m)[00m)))
Step:Single Word Phrase
{'family': ['ADVX', 'NX', 'ADVX'], 'auto preterminal span': (6, 7), 'span': (6, 7), 'subtrees': ['ADJD'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('ADJD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'ADVX')}
(TOP
	(TURN
		(SU
			[01;31m(SIMPX[00m
				(VF ich)
				(LK sehe)
				(MF grade)
				(NF
					(SIMPX
						(VF ab hannover)
						(LK geht)
						[01;31m(MF[00m
							[01;36m(MF[00m
								(ADVX stundlich)
								(NX ein zug)[01;36m)[00m
							[01;36m(VC[00m [01;31m(ADVX[00m
								(ADV zuruck)[01;31m)[00m[01;36m)[00m[01;31m)[00m
						(PX
							(NF
								(PX von bonn)
								(PX
									(ADVX immer)
									[01;36m(PX[00m
										(APPR um)
										(NX achtundfunfzig)[01;36m)[00m)))))[01;31m)[00m)))
Step:Single Word Phrase
{'family': ['ADVX', 'NX', 'VC'], 'auto preterminal span': (9, 10), 'span': (9, 10), 'subtrees': ['ADV'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'VC')}
(TOP
	(TURN
		(SU
			[01;31m(SIMPX[00m
				(VF ich)
				(LK sehe)
				(MF grade)
				(NF
					(SIMPX
						(VF ab hannover)
						(LK geht)
						[01;31m(MF[00m
							[01;36m(MF[00m
								(ADVX stundlich)
								(NX ein zug)[01;36m)[00m
							(VC zuruck)[01;31m)[00m
						(PX
							(NF
								(PX von bonn)
								(PX
									(ADVX immer)
									[01;36m(PX[00m
										(APPR um)
										(NX achtundfunfzig)[01;36m)[00m)))))[01;31m)[00m)))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'VC', 'PX'], 'mover info': [('VC', (9, 10))], 'old_family': ['ADVX', 'NX', 'VC'], 'start left siblings': ['ADVX', 'NX'], 'auto preterminals': ('APPR', 'NE', 'VVFIN', 'ADJD', 'ART', 'NN', 'ADV', 'APPR', 'NE', 'ADV', 'APPR', 'CARD'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (3, 15), 'movers': ['VC'], 'old_parent': 'MF', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['PX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			[01;31m(SIMPX[00m
				(VF ich)
				(LK sehe)
				(MF grade)
				(NF
					(SIMPX
						(VF ab hannover)
						(LK geht)
						(MF stundlich ein zug)
						(VC zuruck)
						(PX
							(NF
								(PX von bonn)
								(PX
									(ADVX immer)
									[01;36m(PX[00m
										(APPR um)
										(NX achtundfunfzig)[01;36m)[00m)))))[01;31m)[00m)))
Step:UNSET add
{'subtrees': ['APPR', 'NX'], 'family': ['ADVX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'CARD'), 'right siblings': [], 'left siblings': [(ADVX (ADV immer))], 'auto preterminal span': (13, 15), 'span': (13, 15), 'parent': 'PX', 'label': 'PX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU
			[01;31m(SIMPX[00m
				(VF ich)
				(LK sehe)
				(MF grade)
				(NF ab hannover geht stundlich ein zug zuruck von bonn immer um achtundfunfzig)[01;31m)[00m)))
Step:Unary
{'subtrees': ['VF', 'LK', 'MF', 'NF'], 'family': ['SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'APPR', 'NE', 'VVFIN', 'ADJD', 'ART', 'NN', 'ADV', 'APPR', 'NE', 'ADV', 'APPR', 'CARD'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (0, 15), 'span': (0, 15), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ich sehe grade ab hannover geht stundlich ein zug zuruck von bonn immer um achtundfunfzig)

Sentence 33:
5 Initial errors
0 on fringe, 3 iterations
2 Error:Different label
2 Error:UNSET move
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			[01;31m(SIMPX[00m
				[01;36m(SIMPX[00m
					(LK konnen)
					(MF sie ja gleich ein doppelzimmer)
					(VC nehmen)[01;36m)[00m
				[01;36m(DM[00m [01;31m(NF[00m
					(NX
						(NN frau)
						(NE schmidt))[01;31m)[00m[01;36m)[00m[01;31m)[00m
			(DM oder)[01;31m)[00m))
Step:Different label
{'family': ['LK', 'MF', 'VC', 'DM'], 'auto preterminal span': (8, 10), 'span': (8, 10), 'subtrees': ['NX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('NN', 'NE'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('NF', 'DM')}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			[01;31m(SIMPX[00m
				[01;36m(SIMPX[00m
					(LK konnen)
					(MF sie ja gleich ein doppelzimmer)
					(VC nehmen)[01;36m)[00m
				(DM frau schmidt)[01;31m)[00m
			(DM oder)[01;31m)[00m))
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['DM', 'SIMPX', 'DM', 'DM'], 'mover info': [('DM', (8, 10))], 'old_family': ['LK', 'MF', 'VC', 'DM'], 'start left siblings': ['LK', 'MF', 'VC'], 'auto preterminals': ('PTKANT', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'NN', 'VVINF', 'NN', 'NE', 'ITJ'), 'start right siblings': [], 'end left siblings': ['DM', 'SIMPX'], 'auto preterminal span': (0, 11), 'movers': ['DM'], 'old_parent': 'SIMPX', 'end right siblings': ['DM'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			(SIMPX konnen sie ja gleich ein doppelzimmer nehmen)
			(DM frau schmidt)
			(DM oder)[01;31m)[00m))
Step:Unary
{'subtrees': ['DM', 'SIMPX', 'DM', 'DM'], 'family': ['SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'NN', 'VVINF', 'NN', 'NE', 'ITJ'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 11), 'span': (0, 11), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja konnen sie ja gleich ein doppelzimmer nehmen frau schmidt oder)

Sentence 34:
0 Initial errors
0 on fringe, 0 iterations

Sentence 35:
0 Initial errors
0 on fringe, 0 iterations

Sentence 36:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			[01;36m(NX[00m
				(DM
					(ITJ tschus))[01;36m)[00m
			(DM frau meurer))))
Step:Unary
{'subtrees': ['DM'], 'family': ['NX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ',), 'right siblings': [(DM (NX (NN frau) (NE meurer)))], 'left siblings': [], 'auto preterminal span': (0, 1), 'span': (0, 1), 'parent': 'SU', 'label': 'NX', 'classified_type': 'Unary', 'type': 'add'}
(TOP tschus frau meurer)

Sentence 37:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			[01;36m(NX[00m
				(DM
					(ITJ tschus))[01;36m)[00m
			(DM frau fischenbeck))))
Step:Unary
{'subtrees': ['DM'], 'family': ['NX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ',), 'right siblings': [(DM (NX (NN frau) (NE fischenbeck)))], 'left siblings': [], 'auto preterminal span': (0, 1), 'span': (0, 1), 'parent': 'SU', 'label': 'NX', 'classified_type': 'Unary', 'type': 'add'}
(TOP tschus frau fischenbeck)

Sentence 38:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM ha)
			(SIMPX wenn es denn sein soll)
			[01;36m(SU[00m
				(DM
					(ITJ okay))[01;36m)[00m)))
Step:Unary
{'subtrees': ['DM'], 'family': ['DM', 'SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ',), 'right siblings': [], 'left siblings': [(DM (ITJ ha)), (SIMPX (C (KOUS wenn)) (MF (NX (PPER es)) (ADVX (ADV denn))) (VC (VXINF (VAINF sein)) (VXFIN (VMFIN soll))))], 'auto preterminal span': (6, 7), 'span': (6, 7), 'parent': 'SU', 'label': 'SU', 'classified_type': 'Unary', 'type': 'add'}
(TOP ha wenn es denn sein soll okay)

Sentence 39:
0 Initial errors
0 on fringe, 0 iterations

Sentence 40:
0 Initial errors
0 on fringe, 0 iterations

Sentence 41:
3 Initial errors
0 on fringe, 2 iterations
2 Error:UNSET move
1 Error:UNSET add
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;36m(SU[00m
				(DM ja)
				(DM genau)[01;36m)[00m
			[01;36m(SU[00m
				(SIMPX
					(VF eine stunde)
					(LK dauert)
					(MF der flug))[01;36m)[00m[01;31m)[00m))
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['DM', 'DM', 'SU'], 'mover info': [('DM', (0, 1)), ('DM', (1, 2))], 'old_family': ['DM', 'DM', 'SIMPX'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'ITJ', 'ART', 'NN', 'VVFIN', 'ART', 'NN'), 'start right siblings': ['SIMPX'], 'end left siblings': [], 'auto preterminal span': (0, 7), 'movers': ['DM', 'DM'], 'old_parent': 'SU', 'end right siblings': ['SU'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		[01;36m(SU[00m
			(DM ja)
			(DM genau)[01;36m)[00m
		(SU eine stunde dauert der flug)))
Step:UNSET add
{'subtrees': ['DM', 'DM'], 'family': ['SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ'), 'right siblings': [(SU (SIMPX (VF (NX (ART eine) (NN stunde))) (LK (VXFIN (VVFIN dauert))) (MF (NX (ART der) (NN flug)))))], 'left siblings': [], 'auto preterminal span': (0, 2), 'span': (0, 2), 'parent': 'TURN', 'label': 'SU', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP ja genau eine stunde dauert der flug)

Sentence 42:
0 Initial errors
0 on fringe, 0 iterations

Sentence 43:
0 Initial errors
0 on fringe, 0 iterations

Sentence 44:
2 Initial errors
0 on fringe, 1 iterations
2 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM nein)
			(PX vom siebten bis zum zehnten)
			[01;36m(SU[00m
				(DM
					(PTKANT ja))[01;36m)[00m[01;31m)[00m))
Step:PP Attachment
{'new_parent': 'TURN', 'new_family': ['DM', 'PX', 'SU'], 'mover info': [('DM', (0, 1)), ('PX', (1, 6))], 'old_family': ['DM', 'PX', 'DM'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'APPRART', 'NN', 'APPR', 'APPRART', 'NN', 'PTKANT'), 'start right siblings': ['DM'], 'end left siblings': [], 'auto preterminal span': (0, 7), 'movers': ['DM', 'PX'], 'old_parent': 'SU', 'end right siblings': ['SU'], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP nein vom siebten bis zum zehnten ja)

Sentence 45:
0 Initial errors
0 on fringe, 0 iterations

Sentence 46:
8 Initial errors
0 on fringe, 6 iterations
2 Error:Modifier Attachment
2 Error:Different label
1 Error:Unary
1 Error:Unary
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP [01;33m(SU (PX[00m
	(TURN
		[01;31m(SU[00m
			[01;31m(ADJX[00m
				(PX am zehnten juli)
				[01;31m(ADJX[00m
					(PX von hannover) [01;33mPX) SU)[00m
					[01;36m(VF[00m
						(ADVX [01;33m(SIMPX[00m
							(ADV zuruck))[01;36m)[00m[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				(LK ginge)
				(MF das denn dann ab achtzehn uhr)[01;31m)[00m[01;31m)[00m)) [01;33mSIMPX)[00m
Step:Modifier Attachment
{'new_parent': 'SIMPX', 'new_family': ['ADVX', 'LK', 'MF'], 'mover info': [('ADVX', (5, 6))], 'old_family': ['PX', 'ADVX'], 'start left siblings': ['PX'], 'auto preterminals': ('APPRART', 'ADJA', 'NN', 'APPR', 'NE', 'ADV', 'VVFIN', 'PDS', 'ADV', 'ADV', 'APPR', 'CARD', 'NN'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 13), 'movers': ['ADVX'], 'old_parent': 'ADJX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['LK', 'MF'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;36m(PX[00m [01;36m(SU[00m [01;31m(ADJX[00m
				(PX am zehnten juli)
				[01;31m(ADJX[00m
					(PX
						(APPR von)
						(NX hannover))[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m
			(SIMPX
				[01;36m(VF[00m
					(ADVX
						(ADV zuruck))[01;36m)[00m
				(LK ginge)
				(MF das denn dann ab achtzehn uhr))[01;31m)[00m))
Step:Different label
{'family': ['SU', 'SIMPX'], 'auto preterminal span': (0, 5), 'span': (0, 5), 'subtrees': ['PX', 'ADJX'], 'parent': 'SU', 'over_word': False, 'auto preterminals': ('APPRART', 'ADJA', 'NN', 'APPR', 'NE'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('ADJX', 'SU')}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;36m(PX[00m
				(SU
					(PX am zehnten juli)
					[01;31m(ADJX[00m
						(PX
							(APPR von)
							(NX hannover))[01;31m)[00m)[01;36m)[00m
			(SIMPX
				[01;36m(VF[00m
					(ADVX
						(ADV zuruck))[01;36m)[00m
				(LK ginge)
				(MF das denn dann ab achtzehn uhr))[01;31m)[00m))
Step:Unary
{'subtrees': ['SU'], 'family': ['PX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'ADJA', 'NN', 'APPR', 'NE'), 'right siblings': [(SIMPX (ADVX (ADV zuruck)) (LK (VXFIN (VVFIN ginge))) (MF (NX (PDS das)) (ADVX (ADV denn)) (ADVX (ADV dann)) (PX (APPR ab) (NX (ADJX (CARD achtzehn)) (NN uhr)))))], 'left siblings': [], 'auto preterminal span': (0, 5), 'span': (0, 5), 'parent': 'SU', 'label': 'PX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(PX
				(SU
					(PX am zehnten juli)
					[01;31m(ADJX[00m
						(PX
							(APPR von)
							(NX hannover))[01;31m)[00m))
			(SIMPX
				[01;36m(VF[00m
					(ADVX
						(ADV zuruck))[01;36m)[00m
				(LK ginge)
				(MF das denn dann ab achtzehn uhr))[01;31m)[00m))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV',), 'right siblings': [(LK (VXFIN (VVFIN ginge))), (MF (NX (PDS das)) (ADVX (ADV denn)) (ADVX (ADV dann)) (PX (APPR ab) (NX (ADJX (CARD achtzehn)) (NN uhr))))], 'left siblings': [], 'auto preterminal span': (5, 6), 'span': (5, 6), 'parent': 'SIMPX', 'label': 'VF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(PX
				(SU
					(PX am zehnten juli)
					[01;31m(ADJX[00m
						(PX
							(APPR von)
							(NX hannover))[01;31m)[00m))
			(SIMPX zuruck ginge das denn dann ab achtzehn uhr)[01;31m)[00m))
Step:Unary
{'subtrees': ['PX', 'SIMPX'], 'family': ['SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'ADJA', 'NN', 'APPR', 'NE', 'ADV', 'VVFIN', 'PDS', 'ADV', 'ADV', 'APPR', 'CARD', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 13), 'span': (0, 13), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(PX
			(SU
				(PX am zehnten juli)
				[01;31m(ADJX[00m
					(PX
						(APPR von)
						(NX hannover))[01;31m)[00m))
		(SIMPX zuruck ginge das denn dann ab achtzehn uhr)))
Step:Unary
{'subtrees': ['PX'], 'family': ['PX', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'ADJA', 'NN', 'APPR', 'NE'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (0, 5), 'span': (3, 5), 'left siblings': ['PX'], 'label': 'ADJX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP am zehnten juli von hannover zuruck ginge das denn dann ab achtzehn uhr)

Sentence 47:
0 Initial errors
0 on fringe, 0 iterations

Sentence 48:
0 Initial errors
0 on fringe, 0 iterations

Sentence 49:
0 Initial errors
0 on fringe, 0 iterations

Sentence 50:
0 Initial errors
0 on fringe, 0 iterations

Sentence 51:
8 Initial errors
0 on fringe, 3 iterations
4 Error:NP Attachment
2 Error:Different label
2 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM also)
			(SIMPX [01;33m(SIMPX[00m
				(VF es)
				(LK ware)
				[01;31m(MF[00m [01;33m(MF[00m
					(ADVX ja)
					[01;31m(ADJX[00m
						[01;31m(ADJX[00m
							(ADVX dreimal)
							[01;36m(ADJX[00m
								(ADVX so)
								(ADJD lang)[01;36m)[00m[01;31m)[00m [01;33mMF) SIMPX)[00m
						[01;36m(ADJX[00m [01;31m(NX[00m
							(KOKOM wie)
							(NN fliegen)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m))))
Step:NP Attachment
{'new_parent': 'SU', 'new_family': ['DM', 'SIMPX', 'NX'], 'mover info': [('NX', (7, 9))], 'old_family': ['ADJX', 'NX'], 'start left siblings': ['ADJX'], 'auto preterminals': ('ADV', 'PPER', 'VAFIN', 'ADV', 'ADV', 'ADV', 'ADJD', 'KOKOM', 'NN'), 'start right siblings': [], 'end left siblings': ['DM', 'SIMPX'], 'auto preterminal span': (0, 9), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'ADJX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'ADJX'}
(TOP
	(TURN
		(SU
			(DM also)
			(SIMPX
				(SIMPX
					(VF es)
					(LK ware)
					(MF
						(ADVX ja)
						[01;31m(ADJX[00m
							(ADVX dreimal)
							[01;36m(ADJX[00m
								(ADVX so)
								(ADJD lang)[01;36m)[00m[01;31m)[00m))
				[01;36m(ADJX[00m [01;31m(NX[00m
					(KOKOM wie)
					(NN fliegen)[01;31m)[00m[01;36m)[00m))))
Step:Different label
{'family': ['SIMPX', 'ADJX'], 'auto preterminal span': (7, 9), 'span': (7, 9), 'subtrees': ['KOKOM', 'NN'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('KOKOM', 'NN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('NX', 'ADJX')}
(TOP
	(TURN
		(SU
			(DM also)
			(SIMPX
				(SIMPX
					(VF es)
					(LK ware)
					(MF
						(ADVX ja)
						[01;31m(ADJX[00m
							(ADVX dreimal)
							[01;36m(ADJX[00m
								(ADVX so)
								(ADJD lang)[01;36m)[00m[01;31m)[00m))
				(ADJX wie fliegen)))))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['ADVX', 'ADVX', 'ADJX'], 'mover info': [('ADVX', (4, 5))], 'old_family': ['ADVX', 'ADVX', 'ADJD'], 'start left siblings': [], 'auto preterminals': ('ADV', 'ADV', 'ADV', 'ADJD'), 'start right siblings': ['ADVX', 'ADJD'], 'end left siblings': ['ADVX'], 'auto preterminal span': (3, 7), 'movers': ['ADVX'], 'old_parent': 'ADJX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['ADJX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP also es ware ja dreimal so lang wie fliegen)

Sentence 52:
1 Initial errors
0 on fringe, 1 iterations
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM also)
			(SIMPX ich werde jetzt gleich noch mal nachgucken)
			[01;31m(SIMPX[00m
				(LK konnte)
				(MF sie dann)
				(VC zuruckrufen)[01;31m)[00m)))
Step:UNSET remove
{'subtrees': ['LK', 'MF', 'VC'], 'family': ['DM', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPER', 'VAFIN', 'ADV', 'ADV', 'ADV', 'ADV', 'VVINF', 'VMFIN', 'PPER', 'ADV', 'VVINF'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (0, 12), 'span': (8, 12), 'left siblings': ['DM', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP also ich werde jetzt gleich noch mal nachgucken konnte sie dann zuruckrufen)

Sentence 53:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(PX[00m
	(TOP
		(TURN
			(SU
				(PX in zehn minuten)
				(ADVX oder so))))[01;36m)[00m
Step:Unary
{'subtrees': ['TURN'], 'family': ['PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'CARD', 'NN', 'KON', 'ADV'), 'right siblings': [], 'left siblings': [], 'auto preterminal span': (0, 5), 'span': (0, 5), 'parent': 'TOP', 'label': 'PX', 'classified_type': 'Unary', 'type': 'add'}
(TOP in zehn minuten oder so)

Sentence 54:
3 Initial errors
0 on fringe, 2 iterations
2 Error:Clause Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;36m(SU[00m
				(SIMPX
					(LK sieht)
					(MF das mit dem hotel)
					(VC aus))[01;36m)[00m
			[01;36m(SU[00m
				(SIMPX
					(LK konnen)
					(MF sie das auch)
					(VC buchen)
					(NF fur mich))[01;36m)[00m[01;31m)[00m))
Step:Clause Attachment
{'new_parent': 'TURN', 'new_family': ['SIMPX', 'SU'], 'mover info': [('SIMPX', (0, 6))], 'old_family': ['SIMPX', 'SIMPX'], 'start left siblings': [], 'auto preterminals': ('VVFIN', 'PDS', 'APPR', 'ART', 'NN', 'PTKVZ', 'VMFIN', 'PPER', 'PDS', 'ADV', 'VVINF', 'APPR', 'PPER'), 'start right siblings': ['SIMPX'], 'end left siblings': [], 'auto preterminal span': (0, 13), 'movers': ['SIMPX'], 'old_parent': 'SU', 'end right siblings': ['SU'], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;36m(SU[00m
			(SIMPX
				(LK sieht)
				(MF das mit dem hotel)
				(VC aus))[01;36m)[00m
		(SU konnen sie das auch buchen fur mich)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PDS', 'APPR', 'ART', 'NN', 'PTKVZ'), 'right siblings': [(SU (SIMPX (LK (VXFIN (VMFIN konnen))) (MF (NX (PPER sie)) (NX (PDS das)) (ADVX (ADV auch))) (VC (VXINF (VVINF buchen))) (NF (PX (APPR fur) (NX (PPER mich))))))], 'left siblings': [], 'auto preterminal span': (0, 6), 'span': (0, 6), 'parent': 'TURN', 'label': 'SU', 'classified_type': 'Unary', 'type': 'add'}
(TOP sieht das mit dem hotel aus konnen sie das auch buchen fur mich)

Sentence 55:
4 Initial errors
0 on fringe, 3 iterations
2 Error:UNSET move
1 Error:Unary
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(SIMPX konnen sie sich dann bitte um den flug kummern)
			[01;31m(SIMPX[00m
				[01;31m(KOORD[00m
					(KON oder)[01;31m)[00m
				[01;36m(SIMPX[00m
					(LK wollen)
					(MF sie mit dem zug)
					(VC reisen)[01;36m)[00m[01;31m)[00m[01;31m)[00m))
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SIMPX', 'KOORD', 'SIMPX'], 'mover info': [('KOORD', (9, 10))], 'old_family': ['KOORD', 'LK', 'MF', 'VC'], 'start left siblings': [], 'auto preterminals': ('VMFIN', 'PPER', 'PRF', 'ADV', 'PTKANT', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'VMFIN', 'PPER', 'APPR', 'ART', 'NN', 'VVINF'), 'start right siblings': ['LK', 'MF', 'VC'], 'end left siblings': ['SIMPX'], 'auto preterminal span': (0, 16), 'movers': ['KOORD'], 'old_parent': 'SIMPX', 'POS confusion': ('KON', 'KON'), 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			(SIMPX konnen sie sich dann bitte um den flug kummern)
			[01;31m(KOORD[00m
				(KON oder)[01;31m)[00m
			(SIMPX wollen sie mit dem zug reisen)[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX', 'KOORD', 'SIMPX'], 'family': ['SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('VMFIN', 'PPER', 'PRF', 'ADV', 'PTKANT', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'VMFIN', 'PPER', 'APPR', 'ART', 'NN', 'VVINF'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 16), 'span': (0, 16), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX konnen sie sich dann bitte um den flug kummern)
		[01;31m(KOORD[00m
			(KON oder)[01;31m)[00m
		(SIMPX wollen sie mit dem zug reisen)))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['SIMPX', 'KOORD', 'SIMPX'], 'over_word': True, 'over words': True, 'auto preterminals': ('VMFIN', 'PPER', 'PRF', 'ADV', 'PTKANT', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'VMFIN', 'PPER', 'APPR', 'ART', 'NN', 'VVINF'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 16), 'span': (9, 10), 'left siblings': ['SIMPX'], 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP konnen sie sich dann bitte um den flug kummern oder wollen sie mit dem zug reisen)

Sentence 56:
0 Initial errors
0 on fringe, 0 iterations

Sentence 57:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Co-ordination
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP [01;33m(ADJX[00m
	(TURN
		(SU
			(ADJX
				(ADJX zentral)
				[01;31m(PX[00m
					(PX zum stadtzentrum) [01;33mADJX)[00m
					(KON oder)
					(PX zu ihrem kongresort)[01;31m)[00m))))
Step:Co-ordination
{'new_parent': 'SU', 'new_family': ['ADJX', 'KON', 'PX'], 'mover info': [('KON', (3, 4)), ('PX', (4, 7))], 'old_family': ['PX', 'KON', 'PX'], 'start left siblings': ['PX'], 'auto preterminals': ('ADJD', 'APPRART', 'NN', 'KON', 'APPR', 'PPOSAT', 'NN'), 'start right siblings': [], 'end left siblings': ['ADJX'], 'auto preterminal span': (0, 7), 'adding node already present': False, 'movers': ['KON', 'PX'], 'old_parent': 'PX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'Co-ordination', 'type': 'move', 'added label': 'ADJX'}
(TOP zentral zum stadtzentrum oder zu ihrem kongresort)

Sentence 58:
0 Initial errors
0 on fringe, 0 iterations

Sentence 59:
3 Initial errors
0 on fringe, 2 iterations
2 Error:PP Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX
				(KOORD und)
				(LK wissen)
				(MF sie schon)
				(NF
					(SIMPX
						[01;31m(MF[00m
							[01;36m(C[00m
								(PX
									(APPR in)
									(NX welcher preiskategorie))[01;36m)[00m
							[01;36m(MF[00m
								(NX
									(PDS das))[01;36m)[00m[01;31m)[00m
						(VC liegen sollte)))))))
Step:PP Attachment
{'new_parent': 'SIMPX', 'new_family': ['PX', 'MF', 'VC'], 'mover info': [('PX', (5, 8))], 'old_family': ['PX', 'NX'], 'start left siblings': [], 'auto preterminals': ('APPR', 'PWAT', 'NN', 'PDS', 'VVINF', 'VMFIN'), 'start right siblings': ['NX'], 'end left siblings': [], 'auto preterminal span': (5, 11), 'movers': ['PX'], 'old_parent': 'MF', 'end right siblings': ['MF', 'VC'], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX
				(KOORD und)
				(LK wissen)
				(MF sie schon)
				(NF
					(SIMPX
						[01;36m(C[00m
							(PX
								(APPR in)
								(NX welcher preiskategorie))[01;36m)[00m
						(MF das)
						(VC liegen sollte)))))))
Step:Unary
{'subtrees': ['PX'], 'family': ['C', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'PWAT', 'NN'), 'right siblings': [(MF (NX (PDS das))), (VC (VXINF (VVINF liegen)) (VXFIN (VMFIN sollte)))], 'left siblings': [], 'auto preterminal span': (5, 8), 'span': (5, 8), 'parent': 'SIMPX', 'label': 'C', 'classified_type': 'Unary', 'type': 'add'}
(TOP ja und wissen sie schon in welcher preiskategorie das liegen sollte)

Sentence 60:
4 Initial errors
0 on fringe, 3 iterations
2 Error:Modifier Attachment
1 Error:Unary
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM ja)
			(DM also)
			(SIMPX
				(VF es)
				(LK sollte)
				[01;31m(MF[00m
					[01;31m(NX[00m
						(NX
							[01;31m(ADVX[00m
								(ADVX so)
								[01;36m(ADVX[00m
									(ADV ungefahr)[01;36m)[00m[01;31m)[00m
							(ADJX hundert)
							(NN mark))
						(PX pro ubernachtung mit fruhstuck)[01;31m)[00m[01;31m)[00m))))
Step:Modifier Attachment
{'new_parent': 'NX', 'new_family': ['ADVX', 'ADVX', 'ADJX', 'NN'], 'mover info': [('ADVX', (4, 5))], 'old_family': ['ADVX', 'ADV'], 'start left siblings': [], 'auto preterminals': ('ADV', 'ADV', 'CARD', 'NN'), 'start right siblings': ['ADV'], 'end left siblings': [], 'auto preterminal span': (4, 8), 'movers': ['ADVX'], 'old_parent': 'ADVX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['ADVX', 'ADJX', 'NN'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU
			(DM ja)
			(DM also)
			(SIMPX
				(VF es)
				(LK sollte)
				[01;31m(MF[00m
					[01;31m(NX[00m
						(NX so ungefahr hundert mark)
						(PX pro ubernachtung mit fruhstuck)[01;31m)[00m[01;31m)[00m))))
Step:Unary
{'subtrees': ['NX', 'PX'], 'family': ['NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'CARD', 'NN', 'APPR', 'NN', 'APPR', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (4, 12), 'span': (4, 12), 'left siblings': [], 'label': 'NX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM ja)
			(DM also)
			(SIMPX
				(VF es)
				(LK sollte)
				[01;31m(MF[00m
					(NX so ungefahr hundert mark)
					(PX pro ubernachtung mit fruhstuck)[01;31m)[00m))))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VMFIN', 'ADV', 'ADV', 'CARD', 'NN', 'APPR', 'NN', 'APPR', 'NN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (2, 12), 'span': (4, 12), 'left siblings': ['VF', 'LK'], 'label': 'MF', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP ja also es sollte so ungefahr hundert mark pro ubernachtung mit fruhstuck)

Sentence 61:
0 Initial errors
0 on fringe, 0 iterations

Sentence 62:
0 Initial errors
0 on fringe, 0 iterations

Sentence 63:
7 Initial errors
0 on fringe, 4 iterations
2 Error:Single Word Phrase
2 Error:UNSET move
2 Error:UNSET move
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP [01;33m(SIMPX[00m
	(TURN
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF das)
				(LK ware)
				[01;31m(MF[00m
					[01;36m(MF[00m
						(ADVX
							(ADV jetzt)) [01;33mSIMPX)[00m[01;36m)[00m
					[01;36m(DM[00m [01;31m(ADVX[00m
						(ADV ja)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
			(SIMPX das ist das billigste was ich ihnen jetzt gerade im moment anbieten konnte)[01;31m)[00m))
Step:Single Word Phrase
{'family': ['ADVX', 'DM'], 'auto preterminal span': (3, 4), 'span': (3, 4), 'subtrees': ['ADV'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'DM')}
(TOP [01;33m(SIMPX[00m
	(TURN
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF das)
				(LK ware)
				[01;31m(MF[00m
					[01;36m(MF[00m
						(ADVX
							(ADV jetzt)) [01;33mSIMPX)[00m[01;36m)[00m
					(DM ja)[01;31m)[00m[01;31m)[00m
			(SIMPX das ist das billigste was ich ihnen jetzt gerade im moment anbieten konnte)[01;31m)[00m))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'DM'], 'mover info': [('DM', (3, 4))], 'old_family': ['ADVX', 'DM'], 'start left siblings': ['ADVX'], 'auto preterminals': ('PDS', 'VAFIN', 'ADV', 'ADV'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (0, 4), 'movers': ['DM'], 'old_parent': 'MF', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;36m(SIMPX[00m
					(VF das)
					(LK ware)
					(MF jetzt)[01;36m)[00m
				(DM ja)[01;31m)[00m
			(SIMPX das ist das billigste was ich ihnen jetzt gerade im moment anbieten konnte)[01;31m)[00m))
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SIMPX', 'DM', 'SIMPX'], 'mover info': [('DM', (3, 4))], 'old_family': ['VF', 'LK', 'MF', 'DM'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('PDS', 'VAFIN', 'ADV', 'ADV', 'PDS', 'VAFIN', 'ART', 'NN', 'PRELS', 'PPER', 'PPER', 'ADV', 'ADV', 'APPRART', 'NN', 'VVINF', 'VMFIN'), 'start right siblings': [], 'end left siblings': ['SIMPX'], 'auto preterminal span': (0, 17), 'movers': ['DM'], 'old_parent': 'SIMPX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			(SIMPX das ware jetzt)
			(DM ja)
			(SIMPX das ist das billigste was ich ihnen jetzt gerade im moment anbieten konnte)[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX', 'DM', 'SIMPX'], 'family': ['SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VAFIN', 'ADV', 'ADV', 'PDS', 'VAFIN', 'ART', 'NN', 'PRELS', 'PPER', 'PPER', 'ADV', 'ADV', 'APPRART', 'NN', 'VVINF', 'VMFIN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 17), 'span': (0, 17), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP das ware jetzt ja das ist das billigste was ich ihnen jetzt gerade im moment anbieten konnte)

Sentence 64:
6 Initial errors
0 on fringe, 5 iterations
2 Error:NP Internal Structure
1 Error:Single Word Phrase
1 Error:Single Word Phrase
1 Error:PP Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(SIMPX
				(VF das hotel)
				(LK heist)
				(MF
					[01;31m(NX[00m
						[01;31m(NX[00m
							(NX hotel)
							(PX am thielenplatz)[01;31m)[00m
						(PX
							(APPR mit)
							(NX
								[01;31m(NX[00m
									[01;36m(NX[00m
										(BS t)[01;36m)[00m
									[01;36m(NX[00m
										(BS h)[01;36m)[00m[01;31m)[00m
								(KON und)
								(NX
									[01;36m(NX[00m
										(BS i)[01;36m)[00m
									(BS e))))[01;31m)[00m)))))
Step:NP Internal Structure
{'new_parent': 'NX', 'new_family': ['BS', 'NX', 'KON', 'NX'], 'mover info': [('BS', (7, 8))], 'old_family': ['BS', 'BS'], 'start left siblings': [], 'auto preterminals': ('BS', 'BS', 'KON', 'BS', 'BS'), 'start right siblings': ['BS'], 'end left siblings': [], 'auto preterminal span': (7, 12), 'movers': ['BS'], 'old_parent': 'NX', 'POS confusion': ('BS', 'BS'), 'end right siblings': ['NX', 'KON', 'NX'], 'classified_type': 'NP Internal Structure', 'type': 'move'}
(TOP
	(TURN
		(SU
			(SIMPX
				(VF das hotel)
				(LK heist)
				(MF
					[01;31m(NX[00m
						[01;31m(NX[00m
							(NX hotel)
							(PX am thielenplatz)[01;31m)[00m
						(PX
							(APPR mit)
							(NX
								[01;36m(NX[00m
									(BS t)[01;36m)[00m
								(NX h)
								(KON und)
								(NX
									[01;36m(NX[00m
										(BS i)[01;36m)[00m
									(BS e))))[01;31m)[00m)))))
Step:Single Word Phrase
{'subtrees': ['BS'], 'family': ['NX', 'NX', 'KON', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('BS',), 'right siblings': [(NX (BS h)), (KON und), (NX (BS i) (BS e))], 'left siblings': [], 'auto preterminal span': (7, 8), 'span': (7, 8), 'parent': 'NX', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SU
			(SIMPX
				(VF das hotel)
				(LK heist)
				(MF
					[01;31m(NX[00m
						[01;31m(NX[00m
							(NX hotel)
							(PX am thielenplatz)[01;31m)[00m
						(PX
							(APPR mit)
							(NX
								(NX t)
								(NX h)
								(KON und)
								(NX
									[01;36m(NX[00m
										(BS i)[01;36m)[00m
									(BS e))))[01;31m)[00m)))))
Step:Single Word Phrase
{'subtrees': ['BS'], 'family': ['NX', 'BS'], 'over_word': True, 'over words': True, 'auto preterminals': ('BS',), 'right siblings': [(BS e)], 'left siblings': [], 'auto preterminal span': (10, 11), 'span': (10, 11), 'parent': 'NX', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SU
			(SIMPX
				(VF das hotel)
				(LK heist)
				(MF
					[01;31m(NX[00m
						[01;31m(NX[00m
							(NX hotel)
							(PX am thielenplatz)[01;31m)[00m
						(PX mit t h und i e)[01;31m)[00m)))))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'APPRART', 'NE', 'APPR', 'BS', 'BS', 'KON', 'BS', 'BS'), 'right siblings': ['PX'], 'parent': 'NX', 'auto preterminal span': (3, 12), 'span': (3, 6), 'left siblings': [], 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(SIMPX
				(VF das hotel)
				(LK heist)
				(MF
					[01;31m(NX[00m
						(NX hotel)
						(PX am thielenplatz)
						(PX mit t h und i e)[01;31m)[00m)))))
Step:Unary
{'subtrees': ['NX', 'PX', 'PX'], 'family': ['NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'APPRART', 'NE', 'APPR', 'BS', 'BS', 'KON', 'BS', 'BS'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (3, 12), 'span': (3, 12), 'left siblings': [], 'label': 'NX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP das hotel heist hotel am thielenplatz mit t h und i e)

Sentence 65:
7 Initial errors
0 on fringe, 6 iterations
2 Error:Modifier Attachment
1 Error:PP Attachment
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET add
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP [01;33m(SU[00m
	(TURN
		[01;31m(SU[00m
			(DM also)
			[01;31m(SIMPX[00m
				(LK soll)
				(MF
					(NX ich)
					(ADVX jetzt)
					(PX fur sie)
					[01;36m(NX[00m
						(NX den flug vom kolnbonner flughafen)
						(PX am siebten juli)[01;36m)[00m)
				(VC buchen) [01;33mSU)[00m
				[01;31m(NF[00m
					(PX
						(APPR um)
						(NX sieben uhr zehn))[01;31m)[00m[01;31m)[00m
			(SIMPX sie sind dann um acht uhr zehn in hannover)
			(SIMPX
				(KOORD und)
				(VF dann)
				(LK informiere)
				(MF ich mich noch)
				(NF
					(SIMPX
						(C ob)
						(MF
							(NX sie)
							[01;31m(PX[00m
								(ADVX abends)
								[01;36m(PX[00m
									(APPRART am)
									(NX zehnten juli)[01;36m)[00m[01;31m)[00m)
						(VC zuruckfliegen konnten))))[01;31m)[00m))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'ADVX', 'PX'], 'mover info': [('ADVX', (36, 37))], 'old_family': ['ADVX', 'APPRART', 'NX'], 'start left siblings': [], 'auto preterminals': ('PPER', 'ADV', 'APPRART', 'ADJA', 'NN'), 'start right siblings': ['APPRART', 'NX'], 'end left siblings': ['NX'], 'auto preterminal span': (35, 40), 'movers': ['ADVX'], 'old_parent': 'PX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['PX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP [01;33m(SU[00m
	(TURN
		[01;31m(SU[00m
			(DM also)
			[01;31m(SIMPX[00m
				(LK soll)
				(MF
					(NX ich)
					(ADVX jetzt)
					(PX fur sie)
					[01;36m(NX[00m
						(NX den flug vom kolnbonner flughafen)
						(PX am siebten juli)[01;36m)[00m)
				(VC buchen) [01;33mSU)[00m
				[01;31m(NF[00m
					(PX
						(APPR um)
						(NX sieben uhr zehn))[01;31m)[00m[01;31m)[00m
			(SIMPX sie sind dann um acht uhr zehn in hannover)
			(SIMPX und dann informiere ich mich noch ob sie abends am zehnten juli zuruckfliegen konnten)[01;31m)[00m))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['NX', 'ADVX', 'PX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'APPRART', 'ADJA', 'NN', 'APPRART', 'ADJA', 'NN'), 'right siblings': [], 'left siblings': [(NX (PPER ich)), (ADVX (ADV jetzt)), (PX (APPR fur) (NX (PPER sie)))], 'auto preterminal span': (6, 14), 'span': (6, 14), 'parent': 'MF', 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP [01;33m(SU[00m
	(TURN
		[01;31m(SU[00m
			(DM also)
			[01;31m(SIMPX[00m
				(LK soll)
				(MF ich jetzt fur sie den flug vom kolnbonner flughafen am siebten juli)
				(VC buchen) [01;33mSU)[00m
				[01;31m(NF[00m
					(PX
						(APPR um)
						(NX sieben uhr zehn))[01;31m)[00m[01;31m)[00m
			(SIMPX sie sind dann um acht uhr zehn in hannover)
			(SIMPX und dann informiere ich mich noch ob sie abends am zehnten juli zuruckfliegen konnten)[01;31m)[00m))
Step:Unary
{'subtrees': ['DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'family': ['SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VMFIN', 'PPER', 'ADV', 'APPR', 'PPER', 'ART', 'NN', 'APPRART', 'ADJA', 'NN', 'APPRART', 'ADJA', 'NN', 'VVINF', 'APPR', 'CARD', 'NN', 'CARD', 'PPER', 'VAFIN', 'ADV', 'APPR', 'CARD', 'NN', 'CARD', 'APPR', 'NE', 'KON', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'KOUS', 'PPER', 'ADV', 'APPRART', 'ADJA', 'NN', 'VVINF', 'VMFIN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 42), 'span': (0, 42), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP [01;33m(SU[00m
	(TURN
		(DM also)
		[01;31m(SIMPX[00m
			(LK soll)
			(MF ich jetzt fur sie den flug vom kolnbonner flughafen am siebten juli)
			(VC buchen) [01;33mSU)[00m
			[01;31m(NF[00m
				(PX
					(APPR um)
					(NX sieben uhr zehn))[01;31m)[00m[01;31m)[00m
		(SIMPX sie sind dann um acht uhr zehn in hannover)
		(SIMPX und dann informiere ich mich noch ob sie abends am zehnten juli zuruckfliegen konnten)))
Step:UNSET remove
{'subtrees': ['LK', 'MF', 'VC', 'NF'], 'family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VMFIN', 'PPER', 'ADV', 'APPR', 'PPER', 'ART', 'NN', 'APPRART', 'ADJA', 'NN', 'APPRART', 'ADJA', 'NN', 'VVINF', 'APPR', 'CARD', 'NN', 'CARD', 'PPER', 'VAFIN', 'ADV', 'APPR', 'CARD', 'NN', 'CARD', 'APPR', 'NE', 'KON', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'KOUS', 'PPER', 'ADV', 'APPRART', 'ADJA', 'NN', 'VVINF', 'VMFIN'), 'right siblings': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 42), 'span': (1, 19), 'left siblings': ['DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		[01;36m(SU[00m
			(DM also)
			(LK soll)
			(MF ich jetzt fur sie den flug vom kolnbonner flughafen am siebten juli)
			(VC buchen)[01;36m)[00m
		[01;31m(NF[00m
			(PX
				(APPR um)
				(NX sieben uhr zehn))[01;31m)[00m
		(SIMPX sie sind dann um acht uhr zehn in hannover)
		(SIMPX und dann informiere ich mich noch ob sie abends am zehnten juli zuruckfliegen konnten)))
Step:UNSET add
{'subtrees': ['DM', 'LK', 'MF', 'VC'], 'family': ['SU', 'NF', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VMFIN', 'PPER', 'ADV', 'APPR', 'PPER', 'ART', 'NN', 'APPRART', 'ADJA', 'NN', 'APPRART', 'ADJA', 'NN', 'VVINF'), 'right siblings': [(NF (PX (APPR um) (NX (NX (ADJX (CARD sieben)) (NN uhr)) (ADJX (CARD zehn))))), (SIMPX (VF (NX (PPER sie))) (LK (VXFIN (VAFIN sind))) (MF (ADVX (ADV dann)) (PX (APPR um) (NX (NX (ADJX (CARD acht)) (NN uhr)) (ADJX (CARD zehn)))) (PX (APPR in) (NX (NE hannover))))), (SIMPX (KOORD (KON und)) (VF (ADVX (ADV dann))) (LK (VXFIN (VVFIN informiere))) (MF (NX (PPER ich)) (NX (PRF mich)) (ADVX (ADV noch))) (NF (SIMPX (C (KOUS ob)) (MF (NX (PPER sie)) (ADVX (ADV abends)) (PX (APPRART am) (NX (ADJX (ADJA zehnten)) (NN juli)))) (VC (VXINF (VVINF zuruckfliegen)) (VXFIN (VMFIN konnten))))))], 'left siblings': [], 'auto preterminal span': (0, 15), 'span': (0, 15), 'parent': 'TURN', 'label': 'SU', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU also soll ich jetzt fur sie den flug vom kolnbonner flughafen am siebten juli buchen)
		[01;31m(NF[00m
			(PX
				(APPR um)
				(NX sieben uhr zehn))[01;31m)[00m
		(SIMPX sie sind dann um acht uhr zehn in hannover)
		(SIMPX und dann informiere ich mich noch ob sie abends am zehnten juli zuruckfliegen konnten)))
Step:Unary
{'subtrees': ['PX'], 'family': ['SU', 'NF', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VMFIN', 'PPER', 'ADV', 'APPR', 'PPER', 'ART', 'NN', 'APPRART', 'ADJA', 'NN', 'APPRART', 'ADJA', 'NN', 'VVINF', 'APPR', 'CARD', 'NN', 'CARD', 'PPER', 'VAFIN', 'ADV', 'APPR', 'CARD', 'NN', 'CARD', 'APPR', 'NE', 'KON', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'KOUS', 'PPER', 'ADV', 'APPRART', 'ADJA', 'NN', 'VVINF', 'VMFIN'), 'right siblings': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 42), 'span': (15, 19), 'left siblings': ['SU'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP also soll ich jetzt fur sie den flug vom kolnbonner flughafen am siebten juli buchen um sieben uhr zehn sie sind dann um acht uhr zehn in hannover und dann informiere ich mich noch ob sie abends am zehnten juli zuruckfliegen konnten)

Sentence 66:
0 Initial errors
0 on fringe, 0 iterations

Sentence 67:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(SIMPX
				(LK gucke)
				(MF ich dann)
				(NF
					(SIMPX
						(SIMPX
							(C wie)
							(MF das)
							(VC funktioniert)
							[01;31m(NF[00m
								(PX
									(APPR mit)
									(NX dem hotel))[01;31m)[00m)
						(SIMPX ob noch was frei ist)))))))
Step:Unary
{'subtrees': ['PX'], 'family': ['C', 'MF', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PDS', 'VVFIN', 'APPR', 'ART', 'NN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (3, 9), 'span': (6, 9), 'left siblings': ['C', 'MF', 'VC'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP gucke ich dann wie das funktioniert mit dem hotel ob noch was frei ist)

Sentence 68:
0 Initial errors
0 on fringe, 0 iterations

Sentence 69:
0 Initial errors
0 on fringe, 0 iterations

Sentence 70:
0 Initial errors
0 on fringe, 0 iterations

Sentence 71:
0 Initial errors
0 on fringe, 0 iterations

Sentence 72:
4 Initial errors
0 on fringe, 3 iterations
2 Error:UNSET move
1 Error:UNSET add
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;36m(SU[00m
				(DM hallo)
				(DM frau offergeld)[01;36m)[00m
			[01;36m(SU[00m
				(SIMPX
					(VF wie)
					(LK machen)
					(MF wir das denn jetzt)
					(NF
						(SIMPX
							(C wenn)
							[01;31m(FKOORD[00m
								(MVC wir im am ersten juliwochenende nach hannover fliegen wollen)
								(KON oder)
								(MVC nach hannover fahren wollen)[01;31m)[00m)))[01;36m)[00m[01;31m)[00m))
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['DM', 'DM', 'SU'], 'mover info': [('DM', (0, 1)), ('DM', (1, 3))], 'old_family': ['DM', 'DM', 'SIMPX'], 'start left siblings': [], 'auto preterminals': ('ITJ', 'NN', 'NE', 'PWAV', 'VVFIN', 'PPER', 'PDS', 'ADV', 'ADV', 'KOUS', 'PPER', 'APPRART', 'APPRART', 'ADJA', 'NN', 'APPR', 'NE', 'VVINF', 'VMFIN', 'KON', 'APPR', 'NE', 'VVINF', 'VMFIN'), 'start right siblings': ['SIMPX'], 'end left siblings': [], 'auto preterminal span': (0, 24), 'movers': ['DM', 'DM'], 'old_parent': 'SU', 'end right siblings': ['SU'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		[01;36m(SU[00m
			(DM hallo)
			(DM frau offergeld)[01;36m)[00m
		(SU
			(SIMPX
				(VF wie)
				(LK machen)
				(MF wir das denn jetzt)
				(NF
					(SIMPX
						(C wenn)
						[01;31m(FKOORD[00m
							(MVC wir im am ersten juliwochenende nach hannover fliegen wollen)
							(KON oder)
							(MVC nach hannover fahren wollen)[01;31m)[00m))))))
Step:UNSET add
{'subtrees': ['DM', 'DM'], 'family': ['SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'NN', 'NE'), 'right siblings': [(SU (SIMPX (VF (ADJX (PWAV wie))) (LK (VXFIN (VVFIN machen))) (MF (NX (PPER wir)) (NX (PDS das)) (ADVX (ADV denn)) (ADVX (ADV jetzt))) (NF (SIMPX (C (KOUS wenn)) (FKOORD (MVC (MF (NX (PPER wir)) (APPRART im) (PX (APPRART am) (NX (ADJX (ADJA ersten)) (NN juliwochenende))) (PX (APPR nach) (NX (NE hannover)))) (VC (VXINF (VVINF fliegen)) (VXFIN (VMFIN wollen)))) (KON oder) (MVC (MF (PX (APPR nach) (NX (NE hannover)))) (VC (VXINF (VVINF fahren)) (VXFIN (VMFIN wollen)))))))))], 'left siblings': [], 'auto preterminal span': (0, 3), 'span': (0, 3), 'parent': 'TURN', 'label': 'SU', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU hallo frau offergeld)
		(SU
			(SIMPX
				(VF wie)
				(LK machen)
				(MF wir das denn jetzt)
				(NF
					(SIMPX
						(C wenn)
						[01;31m(FKOORD[00m
							(MVC wir im am ersten juliwochenende nach hannover fliegen wollen)
							(KON oder)
							(MVC nach hannover fahren wollen)[01;31m)[00m))))))
Step:UNSET remove
{'subtrees': ['MVC', 'KON', 'MVC'], 'family': ['C', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'APPRART', 'APPRART', 'ADJA', 'NN', 'APPR', 'NE', 'VVINF', 'VMFIN', 'KON', 'APPR', 'NE', 'VVINF', 'VMFIN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (9, 24), 'span': (10, 24), 'left siblings': ['C'], 'label': 'FKOORD', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP hallo frau offergeld wie machen wir das denn jetzt wenn wir im am ersten juliwochenende nach hannover fliegen wollen oder nach hannover fahren wollen)

Sentence 73:
3 Initial errors
0 on fringe, 2 iterations
2 Error:UNSET move
1 Error:UNSET add
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM ja)
			(DM gut)
			(SIMPX
				[01;36m(SIMPX[00m
					(VF dann)
					[01;31m(SIMPX[00m
						(LK lassen)
						(MF wir)[01;31m)[00m[01;36m)[00m
				[01;36m(SIMPX[00m
					(LK konnen)
					(MF wir uns besser)
					(VC unterhalten)[01;36m)[00m)
			(DM ja))))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF'], 'mover info': [('VF', (2, 3))], 'old_family': ['VF', 'SIMPX', 'LK', 'MF', 'VC'], 'start left siblings': [], 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'VMFIN', 'PPER', 'PRF', 'ADJD', 'VVINF'), 'start right siblings': ['SIMPX', 'LK', 'MF', 'VC'], 'end left siblings': [], 'auto preterminal span': (2, 10), 'movers': ['VF'], 'old_parent': 'SIMPX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['LK', 'MF'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			(DM ja)
			(DM gut)
			(SIMPX
				(SIMPX dann lassen wir)
				[01;36m(SIMPX[00m
					(LK konnen)
					(MF wir uns besser)
					(VC unterhalten)[01;36m)[00m)
			(DM ja))))
Step:UNSET add
{'subtrees': ['LK', 'MF', 'VC'], 'family': ['SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VMFIN', 'PPER', 'PRF', 'ADJD', 'VVINF'), 'right siblings': [], 'left siblings': [(SIMPX (VF (ADVX (ADV dann))) (LK (VXFIN (VVFIN lassen))) (MF (NX (PPER wir))))], 'auto preterminal span': (5, 10), 'span': (5, 10), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP ja gut dann lassen wir konnen wir uns besser unterhalten ja)

Sentence 74:
3 Initial errors
0 on fringe, 2 iterations
2 Error:PP Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM ja)
			[01;36m(SIMPX[00m
				[01;31m(SIMPX[00m
					(LK ware)
					(MF vielleicht gar nicht so schlecht)[01;31m)[00m
				[01;36m(NF[00m
					(PX
						(PX wegen der expo)
						(ADVX dann))[01;36m)[00m[01;36m)[00m)))
Step:PP Attachment
{'new_parent': 'SIMPX', 'new_family': ['LK', 'MF', 'PX'], 'mover info': [('PX', (7, 11))], 'old_family': ['DM', 'SIMPX', 'PX'], 'start left siblings': ['DM', 'SIMPX'], 'auto preterminals': ('PTKANT', 'VAFIN', 'ADV', 'ADV', 'PTKNEG', 'ADV', 'ADJD', 'APPR', 'ART', 'NE', 'ADV'), 'start right siblings': [], 'end left siblings': ['LK', 'MF'], 'auto preterminal span': (0, 11), 'movers': ['PX'], 'old_parent': 'SU', 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX
				(LK ware)
				(MF vielleicht gar nicht so schlecht)
				[01;36m(NF[00m
					(PX
						(PX wegen der expo)
						(ADVX dann))[01;36m)[00m))))
Step:Unary
{'subtrees': ['PX'], 'family': ['LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NE', 'ADV'), 'right siblings': [], 'left siblings': [(LK (VXFIN (VAFIN ware))), (MF (ADVX (ADV vielleicht)) (ADVX (ADVX (ADV gar)) (PTKNEG nicht)) (ADJX (ADVX (ADV so)) (ADJD schlecht)))], 'auto preterminal span': (7, 11), 'span': (7, 11), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP ja ware vielleicht gar nicht so schlecht wegen der expo dann)

Sentence 75:
3 Initial errors
0 on fringe, 2 iterations
2 Error:Clause Attachment
1 Error:Clause Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;36m(SU[00m
				(DM ja)
				(SIMPX da mussen wir uns noch daruber unterhalten)[01;36m)[00m
			[01;36m(SU[00m
				(SIMPX
					(SIMPX wollen sie mit dem zug fahren)
					(KON oder)
					(SIMPX wollen sie fliegen))[01;36m)[00m[01;31m)[00m))
Step:Clause Attachment
{'new_parent': 'TURN', 'new_family': ['DM', 'SIMPX', 'SU'], 'mover info': [('DM', (0, 1)), ('SIMPX', (1, 8))], 'old_family': ['DM', 'SIMPX', 'SIMPX'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'ADV', 'VMFIN', 'PPER', 'PRF', 'ADV', 'PROP', 'VVINF', 'VMFIN', 'PPER', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'VMFIN', 'PPER', 'VVINF'), 'start right siblings': ['SIMPX'], 'end left siblings': [], 'auto preterminal span': (0, 18), 'movers': ['DM', 'SIMPX'], 'old_parent': 'SU', 'end right siblings': ['SU'], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;36m(SU[00m
			(DM ja)
			(SIMPX da mussen wir uns noch daruber unterhalten)[01;36m)[00m
		(SU wollen sie mit dem zug fahren oder wollen sie fliegen)))
Step:Clause Attachment
{'subtrees': ['DM', 'SIMPX'], 'family': ['SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADV', 'VMFIN', 'PPER', 'PRF', 'ADV', 'PROP', 'VVINF'), 'right siblings': [(SU (SIMPX (SIMPX (LK (VXFIN (VMFIN wollen))) (MF (NX (PPER sie)) (PX (APPR mit) (NX (ART dem) (NN zug)))) (VC (VXINF (VVINF fahren)))) (KON oder) (SIMPX (LK (VXFIN (VMFIN wollen))) (MF (NX (PPER sie))) (VC (VXINF (VVINF fliegen))))))], 'left siblings': [], 'auto preterminal span': (0, 8), 'span': (0, 8), 'parent': 'TURN', 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP ja da mussen wir uns noch daruber unterhalten wollen sie mit dem zug fahren oder wollen sie fliegen)

Sentence 76:
0 Initial errors
0 on fringe, 0 iterations

Sentence 77:
0 Initial errors
0 on fringe, 0 iterations

Sentence 78:
0 Initial errors
0 on fringe, 0 iterations

Sentence 79:
14 Initial errors
0 on fringe, 9 iterations
2 Error:Different label
2 Error:Single Word Phrase
2 Error:Single Word Phrase
2 Error:Clause Attachment
2 Error:NP Attachment
1 Error:Clause Attachment
1 Error:UNSET add
1 Error:UNSET remove
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;36m(SU[00m
				(DM ja)
				(DM also)
				(SIMPX ich kann beim reiseburo anrufen)[01;36m)[00m
			[01;36m(SU[00m
				(SIMPX
					(VF dann)
					[01;36m(FKOORD[00m
						(SIMPX gucke ich)
						(FKOORD
							[01;36m(LKMVC[00m [01;31m(LKMN[00m
								(LK erkundige)
								[01;36m(MF[00m
									[01;31m(MF[00m
										(NX ich)
										(NX mich)[01;31m)[00m
									[01;36m(ADVX[00m [01;31m(DM[00m
										(ITJ ah)[01;31m)[00m[01;36m)[00m
									[01;31m(NX[00m
										(ADVX hier)
										(NX die fluge)[01;31m)[00m[01;36m)[00m
								(NF
									(SIMPX
										(C wann)
										(MF die fluge)
										[01;36m(VXINF[00m [01;31m(VC[00m
											[01;31m(VXFIN[00m
												(VVFIN stattfinden)[01;31m)[00m[01;31m)[00m[01;36m)[00m))[01;31m)[00m[01;36m)[00m
							(KON und)
							(LKM buche dann fur uns beiden))[01;36m)[00m)[01;36m)[00m[01;31m)[00m))
Step:Different label
{'family': ['LKMVC', 'KON', 'LKM'], 'auto preterminal span': (10, 21), 'span': (10, 21), 'subtrees': ['LK', 'MF', 'DM', 'NX', 'NF'], 'parent': 'FKOORD', 'over_word': False, 'auto preterminals': ('VVFIN', 'PPER', 'PRF', 'ITJ', 'ADV', 'ART', 'NN', 'PWAV', 'ART', 'NN', 'VVFIN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('LKMN', 'LKMVC')}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;36m(SU[00m
				(DM ja)
				(DM also)
				(SIMPX ich kann beim reiseburo anrufen)[01;36m)[00m
			[01;36m(SU[00m
				(SIMPX
					(VF dann)
					[01;36m(FKOORD[00m
						(SIMPX gucke ich)
						(FKOORD
							(LKMVC
								(LK erkundige)
								[01;36m(MF[00m
									[01;31m(MF[00m
										(NX ich)
										(NX mich)[01;31m)[00m
									[01;36m(ADVX[00m [01;31m(DM[00m
										(ITJ ah)[01;31m)[00m[01;36m)[00m
									[01;31m(NX[00m
										(ADVX hier)
										(NX die fluge)[01;31m)[00m[01;36m)[00m
								(NF
									(SIMPX
										(C wann)
										(MF die fluge)
										[01;36m(VXINF[00m [01;31m(VC[00m
											[01;31m(VXFIN[00m
												(VVFIN stattfinden)[01;31m)[00m[01;31m)[00m[01;36m)[00m)))
							(KON und)
							(LKM buche dann fur uns beiden))[01;36m)[00m)[01;36m)[00m[01;31m)[00m))
Step:Single Word Phrase
{'family': ['LK', 'MF', 'ADVX', 'NX', 'NF'], 'auto preterminal span': (13, 14), 'span': (13, 14), 'subtrees': ['ITJ'], 'parent': 'LKMVC', 'over_word': True, 'auto preterminals': ('ITJ',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('DM', 'ADVX')}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;36m(SU[00m
				(DM ja)
				(DM also)
				(SIMPX ich kann beim reiseburo anrufen)[01;36m)[00m
			[01;36m(SU[00m
				(SIMPX
					(VF dann)
					[01;36m(FKOORD[00m
						(SIMPX gucke ich)
						(FKOORD
							(LKMVC
								(LK erkundige)
								[01;36m(MF[00m
									[01;31m(MF[00m
										(NX ich)
										(NX mich)[01;31m)[00m
									(ADVX ah)
									[01;31m(NX[00m
										(ADVX hier)
										(NX die fluge)[01;31m)[00m[01;36m)[00m
								(NF
									(SIMPX
										(C wann)
										(MF die fluge)
										[01;36m(VXINF[00m [01;31m(VC[00m
											[01;31m(VXFIN[00m
												(VVFIN stattfinden)[01;31m)[00m[01;31m)[00m[01;36m)[00m)))
							(KON und)
							(LKM buche dann fur uns beiden))[01;36m)[00m)[01;36m)[00m[01;31m)[00m))
Step:Single Word Phrase
{'family': ['VXINF'], 'auto preterminal span': (20, 21), 'span': (20, 21), 'subtrees': ['VVFIN'], 'parent': 'VC', 'over_word': True, 'auto preterminals': ('VVFIN',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VXFIN', 'VXINF')}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;36m(SU[00m
				(DM ja)
				(DM also)
				(SIMPX ich kann beim reiseburo anrufen)[01;36m)[00m
			[01;36m(SU[00m
				(SIMPX
					(VF dann)
					[01;36m(FKOORD[00m
						(SIMPX gucke ich)
						(FKOORD
							(LKMVC
								(LK erkundige)
								[01;36m(MF[00m
									[01;31m(MF[00m
										(NX ich)
										(NX mich)[01;31m)[00m
									(ADVX ah)
									[01;31m(NX[00m
										(ADVX hier)
										(NX die fluge)[01;31m)[00m[01;36m)[00m
								(NF
									(SIMPX
										(C wann)
										(MF die fluge)
										[01;31m(VC[00m
											(VXINF
												(VVFIN stattfinden))[01;31m)[00m)))
							(KON und)
							(LKM buche dann fur uns beiden))[01;36m)[00m)[01;36m)[00m[01;31m)[00m))
Step:Clause Attachment
{'new_parent': 'TURN', 'new_family': ['DM', 'DM', 'SIMPX', 'SU'], 'mover info': [('DM', (0, 1)), ('DM', (1, 2)), ('SIMPX', (2, 7))], 'old_family': ['DM', 'DM', 'SIMPX', 'SIMPX'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'ADV', 'PPER', 'VMFIN', 'APPRART', 'NN', 'VVINF', 'ADV', 'VVFIN', 'PPER', 'VVFIN', 'PPER', 'PRF', 'ITJ', 'ADV', 'ART', 'NN', 'PWAV', 'ART', 'NN', 'VVFIN', 'KON', 'VVFIN', 'ADV', 'APPR', 'PPER', 'PIS'), 'start right siblings': ['SIMPX'], 'end left siblings': [], 'auto preterminal span': (0, 27), 'movers': ['DM', 'DM', 'SIMPX'], 'old_parent': 'SU', 'end right siblings': ['SU'], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;36m(SU[00m
			(DM ja)
			(DM also)
			(SIMPX ich kann beim reiseburo anrufen)[01;36m)[00m
		(SU
			(SIMPX
				(VF dann)
				[01;36m(FKOORD[00m
					(SIMPX gucke ich)
					(FKOORD
						(LKMVC
							(LK erkundige)
							[01;36m(MF[00m
								[01;31m(MF[00m
									(NX ich)
									(NX mich)[01;31m)[00m
								(ADVX ah)
								[01;31m(NX[00m
									(ADVX hier)
									(NX die fluge)[01;31m)[00m[01;36m)[00m
							(NF
								(SIMPX
									(C wann)
									(MF die fluge)
									[01;31m(VC[00m
										(VXINF
											(VVFIN stattfinden))[01;31m)[00m)))
						(KON und)
						(LKM buche dann fur uns beiden))[01;36m)[00m))))
Step:NP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'NX', 'ADVX', 'NX'], 'mover info': [('ADVX', (13, 14)), ('NX', (14, 17))], 'old_family': ['LK', 'MF', 'ADVX', 'NX', 'NF'], 'start left siblings': ['LK', 'MF'], 'auto preterminals': ('VVFIN', 'PPER', 'PRF', 'ITJ', 'ADV', 'ART', 'NN', 'PWAV', 'ART', 'NN', 'VVFIN'), 'start right siblings': ['NF'], 'end left siblings': ['NX', 'NX'], 'auto preterminal span': (10, 21), 'movers': ['ADVX', 'NX'], 'old_parent': 'LKMVC', 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;36m(SU[00m
			(DM ja)
			(DM also)
			(SIMPX ich kann beim reiseburo anrufen)[01;36m)[00m
		(SU
			(SIMPX
				(VF dann)
				[01;36m(FKOORD[00m
					(SIMPX gucke ich)
					(FKOORD
						(LKMVC
							(LK erkundige)
							(MF
								(NX ich)
								(NX mich)
								(ADVX ah)
								[01;31m(NX[00m
									(ADVX hier)
									(NX die fluge)[01;31m)[00m)
							(NF
								(SIMPX
									(C wann)
									(MF die fluge)
									[01;31m(VC[00m
										(VXINF
											(VVFIN stattfinden))[01;31m)[00m)))
						(KON und)
						(LKM buche dann fur uns beiden))[01;36m)[00m))))
Step:Clause Attachment
{'subtrees': ['DM', 'DM', 'SIMPX'], 'family': ['SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADV', 'PPER', 'VMFIN', 'APPRART', 'NN', 'VVINF'), 'right siblings': [(SU (SIMPX (VF (ADVX (ADV dann))) (SIMPX (LK (VXFIN (VVFIN gucke))) (MF (NX (PPER ich)))) (FKOORD (LKMVC (LK (VXFIN (VVFIN erkundige))) (MF (NX (PPER ich)) (NX (PRF mich)) (ADVX (ITJ ah)) (NX (ADVX (ADV hier)) (NX (ART die) (NN fluge)))) (NF (SIMPX (C (PX (PWAV wann))) (MF (NX (ART die) (NN fluge))) (VC (VXINF (VVFIN stattfinden)))))) (KON und) (LKM (LK (VXFIN (VVFIN buche))) (MF (ADVX (ADV dann)) (PX (APPR fur) (NX (NX (PPER uns)) (NX (PIS beiden)))))))))], 'left siblings': [], 'auto preterminal span': (0, 7), 'span': (0, 7), 'parent': 'TURN', 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU ja also ich kann beim reiseburo anrufen)
		(SU
			(SIMPX
				(VF dann)
				[01;36m(FKOORD[00m
					(SIMPX gucke ich)
					(FKOORD
						(LKMVC
							(LK erkundige)
							(MF
								(NX ich)
								(NX mich)
								(ADVX ah)
								[01;31m(NX[00m
									(ADVX hier)
									(NX die fluge)[01;31m)[00m)
							(NF
								(SIMPX
									(C wann)
									(MF die fluge)
									[01;31m(VC[00m
										(VXINF
											(VVFIN stattfinden))[01;31m)[00m)))
						(KON und)
						(LKM buche dann fur uns beiden))[01;36m)[00m))))
Step:UNSET add
{'subtrees': ['SIMPX', 'FKOORD'], 'family': ['VF', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'VVFIN', 'PPER', 'PRF', 'ITJ', 'ADV', 'ART', 'NN', 'PWAV', 'ART', 'NN', 'VVFIN', 'KON', 'VVFIN', 'ADV', 'APPR', 'PPER', 'PIS'), 'right siblings': [], 'left siblings': [(VF (ADVX (ADV dann)))], 'auto preterminal span': (8, 27), 'span': (8, 27), 'parent': 'SIMPX', 'label': 'FKOORD', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU ja also ich kann beim reiseburo anrufen)
		(SU
			(SIMPX
				(VF dann)
				(FKOORD
					(SIMPX gucke ich)
					(FKOORD
						(LKMVC
							(LK erkundige)
							(MF
								(NX ich)
								(NX mich)
								(ADVX ah)
								[01;31m(NX[00m
									(ADVX hier)
									(NX die fluge)[01;31m)[00m)
							(NF
								(SIMPX
									(C wann)
									(MF die fluge)
									[01;31m(VC[00m
										(VXINF
											(VVFIN stattfinden))[01;31m)[00m)))
						(KON und)
						(LKM buche dann fur uns beiden)))))))
Step:UNSET remove
{'subtrees': ['ADVX', 'NX'], 'family': ['NX', 'NX', 'ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'PRF', 'ITJ', 'ADV', 'ART', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (11, 17), 'span': (14, 17), 'left siblings': ['NX', 'NX', 'ADVX'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU ja also ich kann beim reiseburo anrufen)
		(SU
			(SIMPX
				(VF dann)
				(FKOORD
					(SIMPX gucke ich)
					(FKOORD
						(LKMVC
							(LK erkundige)
							(MF ich mich ah hier die fluge)
							(NF
								(SIMPX
									(C wann)
									(MF die fluge)
									[01;31m(VC[00m
										(VXINF
											(VVFIN stattfinden))[01;31m)[00m)))
						(KON und)
						(LKM buche dann fur uns beiden)))))))
Step:Unary
{'subtrees': ['VXINF'], 'family': ['C', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('PWAV', 'ART', 'NN', 'VVFIN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (17, 21), 'span': (20, 21), 'left siblings': ['C', 'MF'], 'label': 'VC', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja also ich kann beim reiseburo anrufen dann gucke ich erkundige ich mich ah hier die fluge wann die fluge stattfinden und buche dann fur uns beiden)

Sentence 80:
5 Initial errors
0 on fringe, 5 iterations
1 Error:Clause Attachment
1 Error:UNSET remove
1 Error:Unary
1 Error:Modifier Attachment
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM ja)
			(NX wir)
			[01;31m(SIMPX[00m
				(SIMPX ich hatte mich auch informiert)
				(KON und)
				[01;31m(SIMPX[00m
					(VF das)
					(LK ist)
					[01;33m(MF[00m (MF immer noch so)
					[01;31m(NF[00m
						[01;31m(PX[00m
							(PX nur am wochenende) [01;33mMF)[00m
							(ADVX nicht)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
			(SIMPX aber wir mussen ja auch sowieso nicht am wochenende fliegen))))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'KON', 'SIMPX'], 'family': ['DM', 'NX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'PPER', 'VAFIN', 'PRF', 'ADV', 'VVPP', 'KON', 'PDS', 'VAFIN', 'ADV', 'ADV', 'ADV', 'ADV', 'APPRART', 'NN', 'PTKNEG', 'KON', 'PPER', 'VMFIN', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'APPRART', 'NN', 'VVINF'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 27), 'span': (2, 17), 'left siblings': ['DM', 'NX'], 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM ja)
			(NX wir)
			(SIMPX ich hatte mich auch informiert)
			(KON und)
			[01;31m(SIMPX[00m
				(VF das)
				(LK ist)
				[01;33m(MF[00m (MF immer noch so)
				[01;31m(NF[00m
					[01;31m(PX[00m
						(PX nur am wochenende) [01;33mMF)[00m
						(ADVX nicht)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			(SIMPX aber wir mussen ja auch sowieso nicht am wochenende fliegen))))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'NF'], 'family': ['DM', 'NX', 'SIMPX', 'KON', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'PPER', 'VAFIN', 'PRF', 'ADV', 'VVPP', 'KON', 'PDS', 'VAFIN', 'ADV', 'ADV', 'ADV', 'ADV', 'APPRART', 'NN', 'PTKNEG', 'KON', 'PPER', 'VMFIN', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'APPRART', 'NN', 'VVINF'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 27), 'span': (8, 17), 'left siblings': ['DM', 'NX', 'SIMPX', 'KON'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM ja)
			(NX wir)
			(SIMPX ich hatte mich auch informiert)
			(KON und)
			(VF das)
			(LK ist)
			[01;33m(MF[00m (MF immer noch so)
			[01;31m(NF[00m
				[01;31m(PX[00m
					(PX nur am wochenende) [01;33mMF)[00m
					(ADVX nicht)[01;31m)[00m[01;31m)[00m
			(SIMPX aber wir mussen ja auch sowieso nicht am wochenende fliegen))))
Step:Unary
{'subtrees': ['PX', 'ADVX'], 'family': ['PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'APPRART', 'NN', 'PTKNEG'), 'right siblings': [], 'parent': 'NF', 'auto preterminal span': (13, 17), 'span': (13, 17), 'left siblings': [], 'label': 'PX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM ja)
			(NX wir)
			(SIMPX ich hatte mich auch informiert)
			(KON und)
			(VF das)
			(LK ist)
			[01;33m(MF[00m (MF immer noch so)
			[01;31m(NF[00m
				(PX nur am wochenende) [01;33mMF)[00m
				(ADVX nicht)[01;31m)[00m
			(SIMPX aber wir mussen ja auch sowieso nicht am wochenende fliegen))))
Step:Modifier Attachment
{'subtrees': ['PX', 'ADVX'], 'family': ['DM', 'NX', 'SIMPX', 'KON', 'VF', 'LK', 'MF', 'NF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'PPER', 'VAFIN', 'PRF', 'ADV', 'VVPP', 'KON', 'PDS', 'VAFIN', 'ADV', 'ADV', 'ADV', 'ADV', 'APPRART', 'NN', 'PTKNEG', 'KON', 'PPER', 'VMFIN', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'APPRART', 'NN', 'VVINF'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 27), 'span': (13, 17), 'left siblings': ['DM', 'NX', 'SIMPX', 'KON', 'VF', 'LK', 'MF'], 'label': 'NF', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM ja)
			(NX wir)
			(SIMPX ich hatte mich auch informiert)
			(KON und)
			(VF das)
			(LK ist)
			[01;36m(MF[00m
				(MF immer noch so)
				(PX nur am wochenende)[01;36m)[00m
			(ADVX nicht)
			(SIMPX aber wir mussen ja auch sowieso nicht am wochenende fliegen))))
Step:PP Attachment
{'subtrees': ['MF', 'PX'], 'family': ['DM', 'NX', 'SIMPX', 'KON', 'VF', 'LK', 'MF', 'ADVX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'ADV', 'ADV', 'APPRART', 'NN'), 'right siblings': [(ADVX (PTKNEG nicht)), (SIMPX (KOORD (KON aber)) (VF (NX (PPER wir))) (LK (VXFIN (VMFIN mussen))) (MF (ADVX (ADV ja)) (ADVX (ADV auch)) (ADVX (ADV sowieso)) (ADVX (PTKNEG nicht)) (PX (APPRART am) (NX (NN wochenende)))) (VC (VXINF (VVINF fliegen))))], 'left siblings': [(DM (PTKANT ja)), (NX (PPER wir)), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VAFIN hatte))) (MF (NX (PRF mich)) (ADVX (ADV auch))) (VC (VXINF (VVPP informiert)))), (KON und), (VF (NX (PDS das))), (LK (VXFIN (VAFIN ist)))], 'auto preterminal span': (10, 16), 'span': (10, 16), 'parent': 'SU', 'label': 'MF', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP ja wir ich hatte mich auch informiert und das ist immer noch so nur am wochenende nicht aber wir mussen ja auch sowieso nicht am wochenende fliegen)

Sentence 81:
0 Initial errors
0 on fringe, 0 iterations

Sentence 82:
0 Initial errors
0 on fringe, 0 iterations

Sentence 83:
0 Initial errors
0 on fringe, 0 iterations

Sentence 84:
0 Initial errors
0 on fringe, 0 iterations

Sentence 85:
5 Initial errors
0 on fringe, 2 iterations
3 Error:UNSET move
2 Error:Different label
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			[01;31m(SIMPX[00m
				[01;36m(SU[00m [01;31m(LV[00m
					(SIMPX
						(KOORD und)
						(C was)
						(MF naturlich auch sehr komfortabel)
						(VC ist))[01;31m)[00m[01;36m)[00m
				[01;36m(SU[00m
					[01;36m(SIMPX[00m
						(VF es)
						(LK hat)
						(MF eine eigene sauna)[01;36m)[00m[01;36m)[00m[01;31m)[00m)))
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['LV', 'SU'], 'mover info': [('LV', (0, 7))], 'old_family': ['LV', 'VF', 'LK', 'MF'], 'start left siblings': [], 'auto preterminals': ('KON', 'PWS', 'ADV', 'ADV', 'ADV', 'ADJD', 'VAFIN', 'PPER', 'VAFIN', 'ART', 'ADJA', 'NN'), 'start right siblings': ['VF', 'LK', 'MF'], 'end left siblings': [], 'auto preterminal span': (0, 12), 'adding node already present': False, 'movers': ['LV'], 'old_parent': 'SIMPX', 'added and moved': True, 'end right siblings': ['SU'], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'SU'}
(TOP
	(SU
		(TURN
			[01;36m(SU[00m [01;31m(LV[00m
				(SIMPX
					(KOORD und)
					(C was)
					(MF naturlich auch sehr komfortabel)
					(VC ist))[01;31m)[00m[01;36m)[00m
			(SU es hat eine eigene sauna))))
Step:Different label
{'family': ['SU', 'SU'], 'auto preterminal span': (0, 7), 'span': (0, 7), 'subtrees': ['SIMPX'], 'parent': 'TURN', 'over_word': False, 'auto preterminals': ('KON', 'PWS', 'ADV', 'ADV', 'ADV', 'ADJD', 'VAFIN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('LV', 'SU')}
(TOP und was naturlich auch sehr komfortabel ist es hat eine eigene sauna)

Sentence 86:
1 Initial errors
0 on fringe, 1 iterations
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			[01;31m(NX[00m
				(KON und)
				(NX ein hallenbad)[01;31m)[00m
			(SIMPX wie ich grade sehe))))
Step:UNSET remove
{'subtrees': ['KON', 'NX'], 'family': ['NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'ART', 'NN', 'KOUS', 'PPER', 'ADV', 'VVFIN'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 7), 'span': (0, 3), 'left siblings': [], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP und ein hallenbad wie ich grade sehe)

Sentence 87:
0 Initial errors
0 on fringe, 0 iterations

Sentence 88:
0 Initial errors
0 on fringe, 0 iterations

Sentence 89:
0 Initial errors
0 on fringe, 0 iterations

Sentence 90:
0 Initial errors
0 on fringe, 0 iterations

Sentence 91:
0 Initial errors
0 on fringe, 0 iterations

Sentence 92:
0 Initial errors
0 on fringe, 0 iterations

Sentence 93:
0 Initial errors
0 on fringe, 0 iterations

Sentence 94:
4 Initial errors
0 on fringe, 4 iterations
1 Error:Modifier Attachment
1 Error:Single Word Phrase
1 Error:UNSET remove
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX
				(VF ich)
				(LK denke)
				(NF
					(SIMPX
						(VF in anbetracht der knappen zeit)
						(LK konnte)
						(MF
							[01;36m(MF[00m
								(NX man)
								(NX die tage)
								(ADVX sicherlich)[01;36m)[00m
							[01;31m(PX[00m
								[01;36m(VC[00m
									(APPR durch)[01;36m)[00m
								[01;33m(MF[00m (NX fliegen)[01;31m)[00m
							(ADJX am effektivsten)) [01;33mMF)[00m
						(VC nutzen)))))))
Step:Modifier Attachment
{'subtrees': ['NX', 'NX', 'ADVX'], 'family': ['MF', 'PX', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PIS', 'ART', 'NN', 'ADV'), 'right siblings': [(PX (APPR durch) (NX (NN fliegen))), (ADJX (PTKA am) (ADJD effektivsten))], 'left siblings': [], 'auto preterminal span': (9, 13), 'span': (9, 13), 'parent': 'MF', 'label': 'MF', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX
				(VF ich)
				(LK denke)
				(NF
					(SIMPX
						(VF in anbetracht der knappen zeit)
						(LK konnte)
						(MF
							(MF man die tage sicherlich)
							[01;31m(PX[00m
								[01;36m(VC[00m
									(APPR durch)[01;36m)[00m
								[01;33m(MF[00m (NX fliegen)[01;31m)[00m
							(ADJX am effektivsten)) [01;33mMF)[00m
						(VC nutzen)))))))
Step:Single Word Phrase
{'subtrees': ['APPR'], 'family': ['VC', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('APPR',), 'right siblings': [(NX (NN fliegen))], 'left siblings': [], 'auto preterminal span': (13, 14), 'span': (13, 14), 'parent': 'PX', 'label': 'VC', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX
				(VF ich)
				(LK denke)
				(NF
					(SIMPX
						(VF in anbetracht der knappen zeit)
						(LK konnte)
						(MF
							(MF man die tage sicherlich)
							[01;31m(PX[00m
								(VC durch)
								[01;33m(MF[00m (NX fliegen)[01;31m)[00m
							(ADJX am effektivsten)) [01;33mMF)[00m
						(VC nutzen)))))))
Step:UNSET remove
{'subtrees': ['VC', 'NX'], 'family': ['MF', 'PX', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PIS', 'ART', 'NN', 'ADV', 'APPR', 'NN', 'PTKA', 'ADJD'), 'right siblings': ['ADJX'], 'parent': 'MF', 'auto preterminal span': (9, 17), 'span': (13, 15), 'left siblings': ['MF'], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX
				(VF ich)
				(LK denke)
				(NF
					(SIMPX
						(VF in anbetracht der knappen zeit)
						(LK konnte)
						(MF
							(MF man die tage sicherlich)
							(VC durch)
							[01;36m(MF[00m
								(NX fliegen)
								(ADJX am effektivsten)[01;36m)[00m)
						(VC nutzen)))))))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADJX'], 'family': ['MF', 'VC', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'PTKA', 'ADJD'), 'right siblings': [], 'left siblings': [(MF (NX (PIS man)) (NX (ART die) (NN tage)) (ADVX (ADV sicherlich))), (VC (APPR durch))], 'auto preterminal span': (14, 17), 'span': (14, 17), 'parent': 'MF', 'label': 'MF', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP ja ich denke in anbetracht der knappen zeit konnte man die tage sicherlich durch fliegen am effektivsten nutzen)

Sentence 95:
2 Initial errors
0 on fringe, 2 iterations
1 Error:NP Internal Structure
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(SIMPX
				(LK denken)
				(MF
					(NX sie)
					(NX sich)
					(ADVX doch)
					(ADVX mal)
					[01;31m(NX[00m
						(NX was)
						[01;31m(NX[00m
							(NN schones)[01;31m)[00m[01;31m)[00m)
				(VC aus)))))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['NX', 'NX', 'ADVX', 'ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'PRF', 'ADV', 'ADV', 'PIS', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (1, 7), 'span': (5, 7), 'left siblings': ['NX', 'NX', 'ADVX', 'ADVX'], 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(SIMPX
				(LK denken)
				(MF
					(NX sie)
					(NX sich)
					(ADVX doch)
					(ADVX mal)
					(NX was)
					[01;31m(NX[00m
						(NN schones)[01;31m)[00m)
				(VC aus)))))
Step:Single Word Phrase
{'subtrees': ['NN'], 'family': ['NX', 'NX', 'ADVX', 'ADVX', 'NX', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('PPER', 'PRF', 'ADV', 'ADV', 'PIS', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (1, 7), 'span': (6, 7), 'left siblings': ['NX', 'NX', 'ADVX', 'ADVX', 'NX'], 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP denken sie sich doch mal was schones aus)

Sentence 96:
3 Initial errors
0 on fringe, 3 iterations
1 Error:Single Word Phrase
1 Error:Single Word Phrase
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM auf wiedersehen)
			(DM
				(NX
					[01;36m(NX[00m
						(NN fraulein)[01;36m)[00m
					[01;36m(DM[00m
						[01;36m(NX[00m
							(NE schmidt)[01;36m)[00m[01;36m)[00m)))))
Step:Single Word Phrase
{'subtrees': ['NN'], 'family': ['NX', 'NE'], 'over_word': True, 'over words': True, 'auto preterminals': ('NN',), 'right siblings': [(NE schmidt)], 'left siblings': [], 'auto preterminal span': (2, 3), 'span': (2, 3), 'parent': 'NX', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM auf wiedersehen)
			(DM
				(NX
					(NX fraulein)
					[01;36m(DM[00m
						[01;36m(NX[00m
							(NE schmidt)[01;36m)[00m[01;36m)[00m)))))
Step:Single Word Phrase
{'subtrees': ['NE'], 'family': ['NX', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('NE',), 'right siblings': [], 'left siblings': [(NX (NN fraulein))], 'auto preterminal span': (3, 4), 'span': (3, 4), 'parent': 'NX', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM auf wiedersehen)
			(DM
				(NX
					(NX fraulein)
					[01;36m(DM[00m
						(NX
							(NE schmidt))[01;36m)[00m)))))
Step:Unary
{'subtrees': ['NX'], 'family': ['NX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('NE',), 'right siblings': [], 'left siblings': [(NX (NN fraulein))], 'auto preterminal span': (3, 4), 'span': (3, 4), 'parent': 'NX', 'label': 'DM', 'classified_type': 'Unary', 'type': 'add'}
(TOP auf wiedersehen fraulein schmidt)

Sentence 97:
0 Initial errors
0 on fringe, 0 iterations

Sentence 98:
0 Initial errors
0 on fringe, 0 iterations

Sentence 99:
5 Initial errors
0 on fringe, 3 iterations
2 Error:Clause Attachment
2 Error:PP Attachment
1 Error:Clause Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;36m(SU[00m
				(DM ja)
				(DM also)
				(SIMPX bei mir sieht es etwas eng aus)[01;36m)[00m
			[01;36m(SU[00m
				(SIMPX
					(VF ich)
					(LK konnte)
					(MF
						[01;31m(PX[00m
							(PX in der zweiten juniwoche)
							[01;36m(PX[00m
								(PX in der letzten juliwoche)
								(KON oder)
								(PX in der ersten augustwoche)[01;36m)[00m[01;31m)[00m))[01;36m)[00m[01;31m)[00m))
Step:Clause Attachment
{'new_parent': 'TURN', 'new_family': ['DM', 'DM', 'SIMPX', 'SU'], 'mover info': [('DM', (0, 1)), ('DM', (1, 2)), ('SIMPX', (2, 9))], 'old_family': ['DM', 'DM', 'SIMPX', 'SIMPX'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'ADV', 'APPR', 'PPER', 'VVFIN', 'PPER', 'ADV', 'ADJD', 'PTKVZ', 'PPER', 'VMFIN', 'APPR', 'ART', 'ADJA', 'NN', 'APPR', 'ART', 'ADJA', 'NN', 'KON', 'APPR', 'ART', 'ADJA', 'NN'), 'start right siblings': ['SIMPX'], 'end left siblings': [], 'auto preterminal span': (0, 24), 'movers': ['DM', 'DM', 'SIMPX'], 'old_parent': 'SU', 'end right siblings': ['SU'], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;36m(SU[00m
			(DM ja)
			(DM also)
			(SIMPX bei mir sieht es etwas eng aus)[01;36m)[00m
		(SU
			(SIMPX
				(VF ich)
				(LK konnte)
				(MF
					[01;31m(PX[00m
						(PX in der zweiten juniwoche)
						[01;36m(PX[00m
							(PX in der letzten juliwoche)
							(KON oder)
							(PX in der ersten augustwoche)[01;36m)[00m[01;31m)[00m)))))
Step:PP Attachment
{'new_parent': 'MF', 'new_family': ['PX', 'PX'], 'mover info': [('PX', (11, 15))], 'old_family': ['PX', 'PX', 'KON', 'PX'], 'start left siblings': [], 'auto preterminals': ('APPR', 'ART', 'ADJA', 'NN', 'APPR', 'ART', 'ADJA', 'NN', 'KON', 'APPR', 'ART', 'ADJA', 'NN'), 'start right siblings': ['PX', 'KON', 'PX'], 'end left siblings': [], 'auto preterminal span': (11, 24), 'movers': ['PX'], 'old_parent': 'PX', 'end right siblings': ['PX'], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;36m(SU[00m
			(DM ja)
			(DM also)
			(SIMPX bei mir sieht es etwas eng aus)[01;36m)[00m
		(SU ich konnte in der zweiten juniwoche in der letzten juliwoche oder in der ersten augustwoche)))
Step:Clause Attachment
{'subtrees': ['DM', 'DM', 'SIMPX'], 'family': ['SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADV', 'APPR', 'PPER', 'VVFIN', 'PPER', 'ADV', 'ADJD', 'PTKVZ'), 'right siblings': [(SU (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VMFIN konnte))) (MF (PX (APPR in) (NX (ART der) (ADJX (ADJA zweiten)) (NN juniwoche))) (PX (PX (APPR in) (NX (ART der) (ADJX (ADJA letzten)) (NN juliwoche))) (KON oder) (PX (APPR in) (NX (ART der) (ADJX (ADJA ersten)) (NN augustwoche)))))))], 'left siblings': [], 'auto preterminal span': (0, 9), 'span': (0, 9), 'parent': 'TURN', 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP ja also bei mir sieht es etwas eng aus ich konnte in der zweiten juniwoche in der letzten juliwoche oder in der ersten augustwoche)

Sentence 100:
0 Initial errors
0 on fringe, 0 iterations

Sentence 101:
0 Initial errors
0 on fringe, 0 iterations

Sentence 102:
0 Initial errors
0 on fringe, 0 iterations

Sentence 103:
7 Initial errors
0 on fringe, 4 iterations
2 Error:Single Word Phrase
2 Error:Different label
2 Error:UNSET move
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;36m(SIMPX[00m
					(VF ich)
					(LK habe)
					(MF nix gegen sonntag abend)[01;36m)[00m
				[01;36m(DM[00m [01;36m(SU[00m [01;31m(VC[00m
					[01;31m(VXINF[00m
						(VVIZU einzuwenden)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m))
Step:Single Word Phrase
{'family': ['SU'], 'auto preterminal span': (6, 7), 'span': (6, 7), 'subtrees': ['VVIZU'], 'parent': 'VC', 'over_word': True, 'auto preterminals': ('VVIZU',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VXINF', 'SU')}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;36m(SIMPX[00m
					(VF ich)
					(LK habe)
					(MF nix gegen sonntag abend)[01;36m)[00m
				[01;36m(DM[00m [01;31m(VC[00m
					(SU
						(VVIZU einzuwenden))[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m))
Step:Different label
{'family': ['VF', 'LK', 'MF', 'DM'], 'auto preterminal span': (6, 7), 'span': (6, 7), 'subtrees': ['SU'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('VVIZU',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('VC', 'DM')}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;36m(SIMPX[00m
					(VF ich)
					(LK habe)
					(MF nix gegen sonntag abend)[01;36m)[00m
				(DM einzuwenden)[01;31m)[00m[01;31m)[00m))
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SIMPX', 'DM'], 'mover info': [('DM', (6, 7))], 'old_family': ['VF', 'LK', 'MF', 'DM'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('PPER', 'VAFIN', 'PIS', 'APPR', 'NN', 'ADV', 'VVIZU'), 'start right siblings': [], 'end left siblings': ['SIMPX'], 'auto preterminal span': (0, 7), 'movers': ['DM'], 'old_parent': 'SIMPX', 'POS confusion': ('VVIZU', 'VVIZU'), 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			(SIMPX ich habe nix gegen sonntag abend)
			(DM einzuwenden)[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX', 'DM'], 'family': ['SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'PIS', 'APPR', 'NN', 'ADV', 'VVIZU'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 7), 'span': (0, 7), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ich habe nix gegen sonntag abend einzuwenden)

Sentence 104:
0 Initial errors
0 on fringe, 0 iterations

Sentence 105:
0 Initial errors
0 on fringe, 0 iterations

Sentence 106:
20 Initial errors
0 on fringe, 14 iterations
4 Error:Modifier Attachment
2 Error:Different label
2 Error:PP Attachment
2 Error:Co-ordination
1 Error:Unary
1 Error:Single Word Phrase
1 Error:Single Word Phrase
1 Error:UNSET add
1 Error:Unary
1 Error:Unary
1 Error:Modifier Attachment
1 Error:Single Word Phrase
1 Error:UNSET remove
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(LK fahren)
				[01;33m(MF[00m (MF wir wieder mit dem zug)
				[01;31m(NF[00m
					[01;31m(ADVX[00m
						(ADVX vielleicht)
						(ADVX abends)
						[01;31m(PX[00m
							(PX so um achtzehn uhr) [01;33mMF) SIMPX)[00m
							[01;36m(VF[00m
								(ADVX [01;33m(SIMPX[00m
									(ADVX so)
									(ADV zirka))[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				(LK muste)
				(MF ich dann noch mal)
				(VC nachkucken) [01;33mSIMPX)[00m
				[01;36m(DM[00m [01;31m(NF[00m
					[01;31m(ADJX[00m
						(ADJD genau)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m
			[01;31m(PX[00m
				[01;36m(ADVX[00m
					(KON aber)[01;36m)[00m
				(ADVX so)
				[01;36m(PX[00m
					[01;36m(ADVX[00m
						(ADV so)[01;36m)[00m
					[01;31m(PX[00m
						[01;31m(PX[00m
							(APPR um)
							(NX den dreh)[01;31m)[00m
						(ADVX rum)[01;31m)[00m[01;36m)[00m[01;31m)[00m
			(SIMPX
				(KOORD und)
				(VF dann)
				(LK waren)
				(MF
					(NX wir)
					(PX
						(ADVX so)
						(APPR um)
						[01;36m(PX[00m
							(APPR um)
							(NX halb elf)[01;36m)[00m)
					(PX in hannover)))
			(SIMPX da konnten wir noch was unternehmen)[01;31m)[00m))
Step:Modifier Attachment
{'new_parent': 'SIMPX', 'new_family': ['ADVX', 'LK', 'MF', 'VC', 'NF'], 'mover info': [('ADVX', (13, 15))], 'old_family': ['PX', 'ADVX'], 'start left siblings': ['PX'], 'auto preterminals': ('PTKANT', 'VVFIN', 'PPER', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'ADV', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'VVINF', 'ADJD', 'KON', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'KON', 'ADV', 'VAFIN', 'PPER', 'ADV', 'APPR', 'APPR', 'ADJD', 'CARD', 'APPR', 'NE', 'ADV', 'VMFIN', 'PPER', 'ADV', 'PIS', 'VVINF'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 46), 'adding node already present': False, 'movers': ['ADVX'], 'old_parent': 'PX', 'added and moved': True, 'end right siblings': ['LK', 'MF', 'VC', 'NF'], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'PX'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			(SIMPX
				(LK fahren)
				[01;36m(MF[00m
					(MF wir wieder mit dem zug)
					[01;31m(NF[00m
						[01;31m(ADVX[00m
							(ADVX vielleicht)
							(ADVX abends)
							(PX so um achtzehn uhr)[01;31m)[00m[01;31m)[00m[01;36m)[00m)
			[01;31m(SIMPX[00m
				(SIMPX
					[01;36m(VF[00m
						(ADVX
							(ADVX so)
							(ADV zirka))[01;36m)[00m
					(LK muste)
					(MF ich dann noch mal)
					(VC nachkucken))
				[01;36m(DM[00m [01;31m(NF[00m
					[01;31m(ADJX[00m
						(ADJD genau)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m
			[01;31m(PX[00m
				[01;36m(ADVX[00m
					(KON aber)[01;36m)[00m
				(ADVX so)
				[01;36m(PX[00m
					[01;36m(ADVX[00m
						(ADV so)[01;36m)[00m
					[01;31m(PX[00m
						[01;31m(PX[00m
							(APPR um)
							(NX den dreh)[01;31m)[00m
						(ADVX rum)[01;31m)[00m[01;36m)[00m[01;31m)[00m
			(SIMPX
				(KOORD und)
				(VF dann)
				(LK waren)
				(MF
					(NX wir)
					(PX
						(ADVX so)
						(APPR um)
						[01;36m(PX[00m
							(APPR um)
							(NX halb elf)[01;36m)[00m)
					(PX in hannover)))
			(SIMPX da konnten wir noch was unternehmen)[01;31m)[00m))
Step:Different label
{'family': ['SIMPX', 'DM'], 'auto preterminal span': (21, 22), 'span': (21, 22), 'subtrees': ['ADJX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('ADJD',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('NF', 'DM')}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			(SIMPX
				(LK fahren)
				[01;36m(MF[00m
					(MF wir wieder mit dem zug)
					[01;31m(NF[00m
						[01;31m(ADVX[00m
							(ADVX vielleicht)
							(ADVX abends)
							(PX so um achtzehn uhr)[01;31m)[00m[01;31m)[00m[01;36m)[00m)
			[01;31m(SIMPX[00m
				(SIMPX
					[01;36m(VF[00m
						(ADVX
							(ADVX so)
							(ADV zirka))[01;36m)[00m
					(LK muste)
					(MF ich dann noch mal)
					(VC nachkucken))
				(DM
					[01;31m(ADJX[00m
						(ADJD genau)[01;31m)[00m)[01;31m)[00m
			[01;31m(PX[00m
				[01;36m(ADVX[00m
					(KON aber)[01;36m)[00m
				(ADVX so)
				[01;36m(PX[00m
					[01;36m(ADVX[00m
						(ADV so)[01;36m)[00m
					[01;31m(PX[00m
						[01;31m(PX[00m
							(APPR um)
							(NX den dreh)[01;31m)[00m
						(ADVX rum)[01;31m)[00m[01;36m)[00m[01;31m)[00m
			(SIMPX
				(KOORD und)
				(VF dann)
				(LK waren)
				(MF
					(NX wir)
					(PX
						(ADVX so)
						(APPR um)
						[01;36m(PX[00m
							(APPR um)
							(NX halb elf)[01;36m)[00m)
					(PX in hannover)))
			(SIMPX da konnten wir noch was unternehmen)[01;31m)[00m))
Step:PP Attachment
{'new_parent': 'SIMPX', 'new_family': ['LK', 'MF', 'NF', 'ADVX', 'PX'], 'mover info': [('ADVX', (8, 9)), ('PX', (9, 13))], 'old_family': ['ADVX', 'ADVX', 'PX'], 'start left siblings': ['ADVX'], 'auto preterminals': ('VVFIN', 'PPER', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'ADV', 'ADV', 'APPR', 'CARD', 'NN'), 'start right siblings': [], 'end left siblings': ['LK', 'MF', 'NF'], 'auto preterminal span': (1, 13), 'adding node already present': False, 'movers': ['ADVX', 'PX'], 'old_parent': 'ADVX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'PX'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			(SIMPX
				(LK fahren)
				(MF
					(MF wir wieder mit dem zug)
					[01;31m(NF[00m
						(ADVX
							(ADV vielleicht))[01;31m)[00m
					(ADVX abends)
					(PX so um achtzehn uhr)))
			[01;31m(SIMPX[00m
				(SIMPX
					[01;36m(VF[00m
						(ADVX
							(ADVX so)
							(ADV zirka))[01;36m)[00m
					(LK muste)
					(MF ich dann noch mal)
					(VC nachkucken))
				(DM
					[01;31m(ADJX[00m
						(ADJD genau)[01;31m)[00m)[01;31m)[00m
			[01;31m(PX[00m
				[01;36m(ADVX[00m
					(KON aber)[01;36m)[00m
				(ADVX so)
				[01;36m(PX[00m
					[01;36m(ADVX[00m
						(ADV so)[01;36m)[00m
					[01;31m(PX[00m
						[01;31m(PX[00m
							(APPR um)
							(NX den dreh)[01;31m)[00m
						(ADVX rum)[01;31m)[00m[01;36m)[00m[01;31m)[00m
			(SIMPX
				(KOORD und)
				(VF dann)
				(LK waren)
				(MF
					(NX wir)
					(PX
						(ADVX so)
						(APPR um)
						[01;36m(PX[00m
							(APPR um)
							(NX halb elf)[01;36m)[00m)
					(PX in hannover)))
			(SIMPX da konnten wir noch was unternehmen)[01;31m)[00m))
Step:Co-ordination
{'new_parent': 'SIMPX', 'new_family': ['SIMPX', 'DM', 'KON', 'ADVX'], 'mover info': [('KON', (22, 23)), ('ADVX', (23, 24))], 'old_family': ['KON', 'ADVX', 'ADV', 'PX'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'VVFIN', 'PPER', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'ADV', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'VVINF', 'ADJD', 'KON', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'KON', 'ADV', 'VAFIN', 'PPER', 'ADV', 'APPR', 'APPR', 'ADJD', 'CARD', 'APPR', 'NE', 'ADV', 'VMFIN', 'PPER', 'ADV', 'PIS', 'VVINF'), 'start right siblings': ['ADV', 'PX'], 'end left siblings': ['SIMPX', 'DM'], 'auto preterminal span': (0, 46), 'movers': ['KON', 'ADVX'], 'old_parent': 'PX', 'end right siblings': [], 'classified_type': 'Co-ordination', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			(SIMPX
				(LK fahren)
				(MF
					(MF wir wieder mit dem zug)
					[01;31m(NF[00m
						(ADVX
							(ADV vielleicht))[01;31m)[00m
					(ADVX abends)
					(PX so um achtzehn uhr)))
			[01;31m(SIMPX[00m
				(SIMPX
					[01;36m(VF[00m
						(ADVX
							(ADVX so)
							(ADV zirka))[01;36m)[00m
					(LK muste)
					(MF ich dann noch mal)
					(VC nachkucken))
				(DM
					[01;31m(ADJX[00m
						(ADJD genau)[01;31m)[00m)
				[01;36m(ADVX[00m
					(KON aber)[01;36m)[00m
				(ADVX so)[01;31m)[00m
			(PX
				[01;36m(ADVX[00m
					(ADV so)[01;36m)[00m
				[01;31m(PX[00m
					[01;31m(PX[00m
						(APPR um)
						(NX den dreh)[01;31m)[00m
					(ADVX rum)[01;31m)[00m)
			(SIMPX
				(KOORD und)
				(VF dann)
				(LK waren)
				(MF
					(NX wir)
					(PX
						(ADVX so)
						(APPR um)
						[01;36m(PX[00m
							(APPR um)
							(NX halb elf)[01;36m)[00m)
					(PX in hannover)))
			(SIMPX da konnten wir noch was unternehmen)[01;31m)[00m))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['VF', 'LK', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV'), 'right siblings': [(LK (VXFIN (VMFIN muste))), (MF (NX (PPER ich)) (ADVX (ADV dann)) (ADVX (ADV noch)) (ADVX (ADV mal))), (VC (VXINF (VVINF nachkucken)))], 'left siblings': [], 'auto preterminal span': (13, 15), 'span': (13, 15), 'parent': 'SIMPX', 'label': 'VF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			(SIMPX
				(LK fahren)
				(MF
					(MF wir wieder mit dem zug)
					[01;31m(NF[00m
						(ADVX
							(ADV vielleicht))[01;31m)[00m
					(ADVX abends)
					(PX so um achtzehn uhr)))
			[01;31m(SIMPX[00m
				(SIMPX so zirka muste ich dann noch mal nachkucken)
				(DM
					[01;31m(ADJX[00m
						(ADJD genau)[01;31m)[00m)
				[01;36m(ADVX[00m
					(KON aber)[01;36m)[00m
				(ADVX so)[01;31m)[00m
			(PX
				[01;36m(ADVX[00m
					(ADV so)[01;36m)[00m
				[01;31m(PX[00m
					[01;31m(PX[00m
						(APPR um)
						(NX den dreh)[01;31m)[00m
					(ADVX rum)[01;31m)[00m)
			(SIMPX
				(KOORD und)
				(VF dann)
				(LK waren)
				(MF
					(NX wir)
					(PX
						(ADVX so)
						(APPR um)
						[01;36m(PX[00m
							(APPR um)
							(NX halb elf)[01;36m)[00m)
					(PX in hannover)))
			(SIMPX da konnten wir noch was unternehmen)[01;31m)[00m))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['SIMPX', 'DM', 'ADVX', 'ADVX'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON',), 'right siblings': [(ADVX (ADV so))], 'left siblings': [(SIMPX (VF (ADVX (ADVX (ADV so)) (ADV zirka))) (LK (VXFIN (VMFIN muste))) (MF (NX (PPER ich)) (ADVX (ADV dann)) (ADVX (ADV noch)) (ADVX (ADV mal))) (VC (VXINF (VVINF nachkucken)))), (DM (ADJX (ADJD genau)))], 'auto preterminal span': (22, 23), 'span': (22, 23), 'parent': 'SIMPX', 'label': 'ADVX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			(SIMPX
				(LK fahren)
				(MF
					(MF wir wieder mit dem zug)
					[01;31m(NF[00m
						(ADVX
							(ADV vielleicht))[01;31m)[00m
					(ADVX abends)
					(PX so um achtzehn uhr)))
			[01;31m(SIMPX[00m
				(SIMPX so zirka muste ich dann noch mal nachkucken)
				(DM
					[01;31m(ADJX[00m
						(ADJD genau)[01;31m)[00m)
				(ADVX aber)
				(ADVX so)[01;31m)[00m
			(PX
				[01;36m(ADVX[00m
					(ADV so)[01;36m)[00m
				[01;31m(PX[00m
					[01;31m(PX[00m
						(APPR um)
						(NX den dreh)[01;31m)[00m
					(ADVX rum)[01;31m)[00m)
			(SIMPX
				(KOORD und)
				(VF dann)
				(LK waren)
				(MF
					(NX wir)
					(PX
						(ADVX so)
						(APPR um)
						[01;36m(PX[00m
							(APPR um)
							(NX halb elf)[01;36m)[00m)
					(PX in hannover)))
			(SIMPX da konnten wir noch was unternehmen)[01;31m)[00m))
Step:Single Word Phrase
{'subtrees': ['ADV'], 'family': ['ADVX', 'PX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADV',), 'right siblings': [(PX (PX (APPR um) (NX (ART den) (NN dreh))) (ADVX (ADV rum)))], 'left siblings': [], 'auto preterminal span': (24, 25), 'span': (24, 25), 'parent': 'PX', 'label': 'ADVX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			(SIMPX
				(LK fahren)
				(MF
					(MF wir wieder mit dem zug)
					[01;31m(NF[00m
						(ADVX
							(ADV vielleicht))[01;31m)[00m
					(ADVX abends)
					(PX so um achtzehn uhr)))
			[01;31m(SIMPX[00m
				(SIMPX so zirka muste ich dann noch mal nachkucken)
				(DM
					[01;31m(ADJX[00m
						(ADJD genau)[01;31m)[00m)
				(ADVX aber)
				(ADVX so)[01;31m)[00m
			(PX
				(ADVX so)
				[01;31m(PX[00m
					[01;31m(PX[00m
						(APPR um)
						(NX den dreh)[01;31m)[00m
					(ADVX rum)[01;31m)[00m)
			(SIMPX
				(KOORD und)
				(VF dann)
				(LK waren)
				(MF
					(NX wir)
					(PX
						(ADVX so)
						(APPR um)
						[01;36m(PX[00m
							(APPR um)
							(NX halb elf)[01;36m)[00m)
					(PX in hannover)))
			(SIMPX da konnten wir noch was unternehmen)[01;31m)[00m))
Step:UNSET add
{'subtrees': ['APPR', 'NX'], 'family': ['ADVX', 'APPR', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ADJD', 'CARD'), 'right siblings': [], 'left siblings': [(ADVX (ADV so)), (APPR um)], 'auto preterminal span': (35, 38), 'span': (35, 38), 'parent': 'PX', 'label': 'PX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			(SIMPX
				(LK fahren)
				(MF
					(MF wir wieder mit dem zug)
					[01;31m(NF[00m
						(ADVX
							(ADV vielleicht))[01;31m)[00m
					(ADVX abends)
					(PX so um achtzehn uhr)))
			[01;31m(SIMPX[00m
				(SIMPX so zirka muste ich dann noch mal nachkucken)
				(DM
					[01;31m(ADJX[00m
						(ADJD genau)[01;31m)[00m)
				(ADVX aber)
				(ADVX so)[01;31m)[00m
			(PX
				(ADVX so)
				[01;31m(PX[00m
					[01;31m(PX[00m
						(APPR um)
						(NX den dreh)[01;31m)[00m
					(ADVX rum)[01;31m)[00m)
			(SIMPX und dann waren wir so um um halb elf in hannover)
			(SIMPX da konnten wir noch was unternehmen)[01;31m)[00m))
Step:Unary
{'subtrees': ['DM', 'SIMPX', 'SIMPX', 'PX', 'SIMPX', 'SIMPX'], 'family': ['SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'VVFIN', 'PPER', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'ADV', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'VVINF', 'ADJD', 'KON', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'KON', 'ADV', 'VAFIN', 'PPER', 'ADV', 'APPR', 'APPR', 'ADJD', 'CARD', 'APPR', 'NE', 'ADV', 'VMFIN', 'PPER', 'ADV', 'PIS', 'VVINF'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 46), 'span': (0, 46), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(LK fahren)
			(MF
				(MF wir wieder mit dem zug)
				[01;31m(NF[00m
					(ADVX
						(ADV vielleicht))[01;31m)[00m
				(ADVX abends)
				(PX so um achtzehn uhr)))
		[01;31m(SIMPX[00m
			(SIMPX so zirka muste ich dann noch mal nachkucken)
			(DM
				[01;31m(ADJX[00m
					(ADJD genau)[01;31m)[00m)
			(ADVX aber)
			(ADVX so)[01;31m)[00m
		(PX
			(ADVX so)
			[01;31m(PX[00m
				[01;31m(PX[00m
					(APPR um)
					(NX den dreh)[01;31m)[00m
				(ADVX rum)[01;31m)[00m)
		(SIMPX und dann waren wir so um um halb elf in hannover)
		(SIMPX da konnten wir noch was unternehmen)))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['MF', 'NF', 'ADVX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'ADV', 'ADV', 'APPR', 'CARD', 'NN'), 'right siblings': ['ADVX', 'PX'], 'parent': 'MF', 'auto preterminal span': (2, 13), 'span': (7, 8), 'left siblings': ['MF'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX fahren wir wieder mit dem zug vielleicht abends so um achtzehn uhr)
		[01;31m(SIMPX[00m
			(SIMPX so zirka muste ich dann noch mal nachkucken)
			(DM
				[01;31m(ADJX[00m
					(ADJD genau)[01;31m)[00m)
			(ADVX aber)
			(ADVX so)[01;31m)[00m
		(PX
			(ADVX so)
			[01;31m(PX[00m
				[01;31m(PX[00m
					(APPR um)
					(NX den dreh)[01;31m)[00m
				(ADVX rum)[01;31m)[00m)
		(SIMPX und dann waren wir so um um halb elf in hannover)
		(SIMPX da konnten wir noch was unternehmen)))
Step:Modifier Attachment
{'subtrees': ['SIMPX', 'DM', 'ADVX', 'ADVX'], 'family': ['DM', 'SIMPX', 'SIMPX', 'PX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'VVFIN', 'PPER', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'ADV', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'VVINF', 'ADJD', 'KON', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'KON', 'ADV', 'VAFIN', 'PPER', 'ADV', 'APPR', 'APPR', 'ADJD', 'CARD', 'APPR', 'NE', 'ADV', 'VMFIN', 'PPER', 'ADV', 'PIS', 'VVINF'), 'right siblings': ['PX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 46), 'span': (13, 24), 'left siblings': ['DM', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX fahren wir wieder mit dem zug vielleicht abends so um achtzehn uhr)
		(SIMPX so zirka muste ich dann noch mal nachkucken)
		(DM
			[01;31m(ADJX[00m
				(ADJD genau)[01;31m)[00m)
		(ADVX aber)
		(ADVX so)
		(PX
			(ADVX so)
			[01;31m(PX[00m
				[01;31m(PX[00m
					(APPR um)
					(NX den dreh)[01;31m)[00m
				(ADVX rum)[01;31m)[00m)
		(SIMPX und dann waren wir so um um halb elf in hannover)
		(SIMPX da konnten wir noch was unternehmen)))
Step:Single Word Phrase
{'subtrees': ['ADJD'], 'family': ['ADJX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADJD',), 'right siblings': [], 'parent': 'DM', 'auto preterminal span': (21, 22), 'span': (21, 22), 'left siblings': [], 'label': 'ADJX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX fahren wir wieder mit dem zug vielleicht abends so um achtzehn uhr)
		(SIMPX so zirka muste ich dann noch mal nachkucken)
		(DM genau)
		(ADVX aber)
		(ADVX so)
		(PX
			(ADVX so)
			[01;31m(PX[00m
				[01;31m(PX[00m
					(APPR um)
					(NX den dreh)[01;31m)[00m
				(ADVX rum)[01;31m)[00m)
		(SIMPX und dann waren wir so um um halb elf in hannover)
		(SIMPX da konnten wir noch was unternehmen)))
Step:UNSET remove
{'subtrees': ['APPR', 'NX'], 'family': ['PX', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NN', 'ADV'), 'right siblings': ['ADVX'], 'parent': 'PX', 'auto preterminal span': (25, 29), 'span': (25, 28), 'left siblings': [], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX fahren wir wieder mit dem zug vielleicht abends so um achtzehn uhr)
		(SIMPX so zirka muste ich dann noch mal nachkucken)
		(DM genau)
		(ADVX aber)
		(ADVX so)
		(PX
			(ADVX so)
			[01;31m(PX[00m
				(APPR um)
				(NX den dreh)
				(ADVX rum)[01;31m)[00m)
		(SIMPX und dann waren wir so um um halb elf in hannover)
		(SIMPX da konnten wir noch was unternehmen)))
Step:Modifier Attachment
{'subtrees': ['APPR', 'NX', 'ADVX'], 'family': ['ADVX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'APPR', 'ART', 'NN', 'ADV'), 'right siblings': [], 'parent': 'PX', 'auto preterminal span': (24, 29), 'span': (25, 29), 'left siblings': ['ADVX'], 'label': 'PX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP ja fahren wir wieder mit dem zug vielleicht abends so um achtzehn uhr so zirka muste ich dann noch mal nachkucken genau aber so so um den dreh rum und dann waren wir so um um halb elf in hannover da konnten wir noch was unternehmen)

Sentence 107:
0 Initial errors
0 on fringe, 0 iterations

Sentence 108:
0 Initial errors
0 on fringe, 0 iterations

Sentence 109:
0 Initial errors
0 on fringe, 0 iterations

Sentence 110:
0 Initial errors
0 on fringe, 0 iterations

Sentence 111:
0 Initial errors
0 on fringe, 0 iterations

Sentence 112:
0 Initial errors
0 on fringe, 0 iterations

Sentence 113:
0 Initial errors
0 on fringe, 0 iterations

Sentence 114:
0 Initial errors
0 on fringe, 0 iterations

Sentence 115:
0 Initial errors
0 on fringe, 0 iterations

Sentence 116:
0 Initial errors
0 on fringe, 0 iterations

Sentence 117:
0 Initial errors
0 on fringe, 0 iterations

Sentence 118:
0 Initial errors
0 on fringe, 0 iterations

Sentence 119:
0 Initial errors
0 on fringe, 0 iterations

Sentence 120:
0 Initial errors
0 on fringe, 0 iterations

Sentence 121:
14 Initial errors
0 on fringe, 8 iterations
6 Error:PP Attachment
2 Error:NP Attachment
1 Error:UNSET add
1 Error:Single Word Phrase
1 Error:PP Attachment
1 Error:Clause Attachment
1 Error:NP Internal Structure
1 Error:NP Internal Structure
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM also)
			[01;33m(SIMPX[00m (SIMPX ich denke wir sollten es einfach mal ausprobieren)
			[01;31m(SIMPX[00m
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				[01;33m(SIMPX[00m (VF wir)
				(LK hatten)
				(VC gesagt)
				[01;31m(NF[00m [01;33m(SIMPX (NF[00m
					[01;31m(SIMPX[00m
						(VF anderthalb tage)
						(LK fahren)
						[01;31m(MF[00m
							[01;36m(MF[00m
								(NX wir)
								(PX nach hannover) [01;33mNF) SIMPX) SIMPX) SIMPX)[00m[01;36m)[00m
							(PX
								(APPRART im)
								(NX [01;33m(NX[00m
									(NX zeitraum)
									[01;31m(NX[00m
										[01;31m(NX[00m
											(NX januar) [01;33mNX)[00m
											(NX februar)
											[01;33m(NX[00m (NX marz)[01;31m)[00m
										(NX achtundneunzig)[01;31m)[00m))[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))) [01;33mNX)[00m
Step:PP Attachment
{'new_parent': 'SIMPX', 'new_family': ['KOORD', 'VF', 'LK', 'VC', 'NF', 'PX'], 'mover info': [('PX', (19, 25))], 'old_family': ['NX', 'PX', 'PX'], 'start left siblings': ['NX', 'PX'], 'auto preterminals': ('KON', 'PPER', 'VAFIN', 'VVPP', 'CARD', 'NN', 'VVFIN', 'PPER', 'APPR', 'NE', 'APPRART', 'NN', 'NN', 'NN', 'NN', 'CARD'), 'start right siblings': [], 'end left siblings': ['KOORD', 'VF', 'LK', 'VC', 'NF'], 'auto preterminal span': (9, 25), 'movers': ['PX'], 'old_parent': 'MF', 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU
			(DM also)
			[01;33m(SIMPX[00m (SIMPX ich denke wir sollten es einfach mal ausprobieren)
			[01;31m(SIMPX[00m
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				[01;36m(SIMPX[00m
					(VF wir)
					(LK hatten)
					(VC gesagt)
					(NF anderthalb tage fahren wir nach hannover) [01;33mSIMPX)[00m[01;36m)[00m
				(PX
					(APPRART im)
					(NX [01;33m(NX[00m
						(NX zeitraum)
						[01;31m(NX[00m
							[01;31m(NX[00m
								(NX januar) [01;33mNX)[00m
								(NX februar)
								[01;33m(NX[00m (NX marz)[01;31m)[00m
							(NX achtundneunzig)[01;31m)[00m))[01;31m)[00m))) [01;33mNX)[00m
Step:NP Attachment
{'new_parent': 'NX', 'new_family': ['NX', 'NX', 'NX', 'NX'], 'mover info': [('NX', (20, 21))], 'old_family': ['NX', 'NX'], 'start left siblings': [], 'auto preterminals': ('NN', 'NN', 'NN', 'NN', 'CARD'), 'start right siblings': ['NX'], 'end left siblings': [], 'auto preterminal span': (20, 25), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'NX', 'POS confusion': ('NN', 'NN'), 'added and moved': True, 'end right siblings': ['NX', 'NX', 'NX'], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(SU
			(DM also)
			[01;33m(SIMPX[00m (SIMPX ich denke wir sollten es einfach mal ausprobieren)
			[01;31m(SIMPX[00m
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				[01;36m(SIMPX[00m
					(VF wir)
					(LK hatten)
					(VC gesagt)
					(NF anderthalb tage fahren wir nach hannover) [01;33mSIMPX)[00m[01;36m)[00m
				(PX
					(APPRART im)
					(NX
						[01;31m(NX[00m
							(NX zeitraum januar)
							(NX februar)
							[01;33m(NX[00m (NX marz)[01;31m)[00m
						(NX achtundneunzig)))[01;31m)[00m))) [01;33mNX)[00m
Step:UNSET add
{'subtrees': ['VF', 'LK', 'VC', 'NF'], 'family': ['KOORD', 'SIMPX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'VVPP', 'CARD', 'NN', 'VVFIN', 'PPER', 'APPR', 'NE'), 'right siblings': [(PX (APPRART im) (NX (NX (NX (NX (NN zeitraum)) (NX (NN januar))) (NX (NN februar)) (NX (NN marz))) (NX (CARD achtundneunzig))))], 'left siblings': [(KOORD (KON und))], 'auto preterminal span': (10, 19), 'span': (10, 19), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM also)
			[01;33m(SIMPX[00m (SIMPX ich denke wir sollten es einfach mal ausprobieren)
			[01;31m(SIMPX[00m
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				(SIMPX wir hatten gesagt anderthalb tage fahren wir nach hannover) [01;33mSIMPX)[00m
				(PX
					(APPRART im)
					(NX
						[01;31m(NX[00m
							(NX zeitraum januar)
							(NX februar)
							[01;33m(NX[00m (NX marz)[01;31m)[00m
						(NX achtundneunzig)))[01;31m)[00m))) [01;33mNX)[00m
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['KOORD', 'SIMPX', 'PX'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON', 'PPER', 'VAFIN', 'VVPP', 'CARD', 'NN', 'VVFIN', 'PPER', 'APPR', 'NE', 'APPRART', 'NN', 'NN', 'NN', 'NN', 'CARD'), 'right siblings': ['SIMPX', 'PX'], 'parent': 'SIMPX', 'auto preterminal span': (9, 25), 'span': (9, 10), 'left siblings': [], 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM also)
			[01;33m(SIMPX[00m (SIMPX ich denke wir sollten es einfach mal ausprobieren)
			[01;31m(SIMPX[00m
				(KON und)
				(SIMPX wir hatten gesagt anderthalb tage fahren wir nach hannover) [01;33mSIMPX)[00m
				(PX
					(APPRART im)
					(NX
						[01;31m(NX[00m
							(NX zeitraum januar)
							(NX februar)
							[01;33m(NX[00m (NX marz)[01;31m)[00m
						(NX achtundneunzig)))[01;31m)[00m))) [01;33mNX)[00m
Step:PP Attachment
{'subtrees': ['KON', 'SIMPX', 'PX'], 'family': ['DM', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPER', 'VVFIN', 'PPER', 'VMFIN', 'PPER', 'ADV', 'ADV', 'VVINF', 'KON', 'PPER', 'VAFIN', 'VVPP', 'CARD', 'NN', 'VVFIN', 'PPER', 'APPR', 'NE', 'APPRART', 'NN', 'NN', 'NN', 'NN', 'CARD'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (0, 25), 'span': (9, 25), 'left siblings': ['DM', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM also)
			[01;36m(SIMPX[00m
				(SIMPX ich denke wir sollten es einfach mal ausprobieren)
				(KON und)
				(SIMPX wir hatten gesagt anderthalb tage fahren wir nach hannover)[01;36m)[00m
			(PX
				(APPRART im)
				(NX
					[01;31m(NX[00m
						(NX zeitraum januar)
						(NX februar)
						[01;33m(NX[00m (NX marz)[01;31m)[00m
					(NX achtundneunzig)))))) [01;33mNX)[00m
Step:Clause Attachment
{'subtrees': ['SIMPX', 'KON', 'SIMPX'], 'family': ['DM', 'SIMPX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'PPER', 'VMFIN', 'PPER', 'ADV', 'ADV', 'VVINF', 'KON', 'PPER', 'VAFIN', 'VVPP', 'CARD', 'NN', 'VVFIN', 'PPER', 'APPR', 'NE'), 'right siblings': [(PX (APPRART im) (NX (NX (NX (NX (NN zeitraum)) (NX (NN januar))) (NX (NN februar)) (NX (NN marz))) (NX (CARD achtundneunzig))))], 'left siblings': [(DM (ADVX (ADV also)))], 'auto preterminal span': (1, 19), 'span': (1, 19), 'parent': 'SU', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM also)
			(SIMPX ich denke wir sollten es einfach mal ausprobieren und wir hatten gesagt anderthalb tage fahren wir nach hannover)
			(PX
				(APPRART im)
				(NX
					[01;31m(NX[00m
						(NX zeitraum januar)
						(NX februar)
						[01;33m(NX[00m (NX marz)[01;31m)[00m
					(NX achtundneunzig)))))) [01;33mNX)[00m
Step:NP Internal Structure
{'subtrees': ['NX', 'NX', 'NX'], 'family': ['NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'NN', 'NN', 'NN', 'CARD'), 'right siblings': ['NX'], 'parent': 'NX', 'auto preterminal span': (20, 25), 'span': (20, 24), 'left siblings': [], 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM also)
			(SIMPX ich denke wir sollten es einfach mal ausprobieren und wir hatten gesagt anderthalb tage fahren wir nach hannover)
			(PX
				(APPRART im)
				(NX
					(NX zeitraum januar)
					(NX februar)
					[01;36m(NX[00m
						(NX marz)
						(NX achtundneunzig)[01;36m)[00m)))))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['NX', 'NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'CARD'), 'right siblings': [], 'left siblings': [(NX (NX (NN zeitraum)) (NX (NN januar))), (NX (NN februar))], 'auto preterminal span': (23, 25), 'span': (23, 25), 'parent': 'NX', 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'add'}
(TOP also ich denke wir sollten es einfach mal ausprobieren und wir hatten gesagt anderthalb tage fahren wir nach hannover im zeitraum januar februar marz achtundneunzig)

Sentence 122:
0 Initial errors
0 on fringe, 0 iterations

Sentence 123:
0 Initial errors
0 on fringe, 0 iterations

Sentence 124:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(SIMPX
				(VF wir)
				(LK konnten)
				(MF
					[01;31m(PX[00m
						(ADVX gleich)
						[01;36m(PX[00m
							(APPR zu)
							(NX beginn des januar)[01;36m)[00m[01;31m)[00m)
				(VC versuchen)
				(NF einen termin zu finden)))))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['ADVX', 'PX'], 'mover info': [('ADVX', (2, 3))], 'old_family': ['ADVX', 'APPR', 'NX'], 'start left siblings': [], 'auto preterminals': ('ADV', 'APPR', 'NN', 'ART', 'NN'), 'start right siblings': ['APPR', 'NX'], 'end left siblings': [], 'auto preterminal span': (2, 7), 'movers': ['ADVX'], 'old_parent': 'PX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['PX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP wir konnten gleich zu beginn des januar versuchen einen termin zu finden)

Sentence 125:
0 Initial errors
0 on fringe, 0 iterations

Sentence 126:
3 Initial errors
0 on fringe, 2 iterations
2 Error:Clause Attachment
1 Error:Clause Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;36m(SU[00m
				(DM okay)
				(SIMPX vierzehnter ist bei mir schlecht)[01;36m)[00m
			[01;36m(SU[00m
				(SIMPX
					(VF anderthalb tage)
					(LK kriegen)
					(MF wir nicht)
					(VC rein))[01;36m)[00m[01;31m)[00m))
Step:Clause Attachment
{'new_parent': 'TURN', 'new_family': ['DM', 'SIMPX', 'SU'], 'mover info': [('DM', (0, 1)), ('SIMPX', (1, 6))], 'old_family': ['DM', 'SIMPX', 'SIMPX'], 'start left siblings': [], 'auto preterminals': ('ITJ', 'NN', 'VAFIN', 'APPR', 'PPER', 'ADJD', 'CARD', 'NN', 'VVFIN', 'PPER', 'PTKNEG', 'PTKVZ'), 'start right siblings': ['SIMPX'], 'end left siblings': [], 'auto preterminal span': (0, 12), 'movers': ['DM', 'SIMPX'], 'old_parent': 'SU', 'end right siblings': ['SU'], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;36m(SU[00m
			(DM okay)
			(SIMPX vierzehnter ist bei mir schlecht)[01;36m)[00m
		(SU anderthalb tage kriegen wir nicht rein)))
Step:Clause Attachment
{'subtrees': ['DM', 'SIMPX'], 'family': ['SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'NN', 'VAFIN', 'APPR', 'PPER', 'ADJD'), 'right siblings': [(SU (SIMPX (VF (NX (ADJX (CARD anderthalb)) (NN tage))) (LK (VXFIN (VVFIN kriegen))) (MF (NX (PPER wir)) (ADVX (PTKNEG nicht))) (VC (PTKVZ rein))))], 'left siblings': [], 'auto preterminal span': (0, 6), 'span': (0, 6), 'parent': 'TURN', 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP okay vierzehnter ist bei mir schlecht anderthalb tage kriegen wir nicht rein)

Sentence 127:
0 Initial errors
0 on fringe, 0 iterations

Sentence 128:
0 Initial errors
0 on fringe, 0 iterations

Sentence 129:
4 Initial errors
0 on fringe, 4 iterations
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:Modifier Attachment
1 Error:UNSET add
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(SIMPX
				(VF siebenundzwanzigster)
				(LK konnte)
				(MF [01;33m(MF[00m
					(NX ich)
					[01;33m(PX[00m (ADVX naturlich)
					[01;31m(PX[00m
						(APPR nach)
						[01;31m(NX[00m
							(NX meinem zahnarzttermin) [01;33mPX) MF)[00m
							(R der um acht uhr stattfindet)[01;31m)[00m[01;31m)[00m
					(ADVX dann))
				(VC weg)))))
Step:UNSET remove
{'subtrees': ['APPR', 'NX'], 'family': ['NX', 'ADVX', 'PX', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV', 'APPR', 'PPOSAT', 'NN', 'PRELS', 'APPR', 'CARD', 'NN', 'VVFIN', 'ADV'), 'right siblings': ['ADVX'], 'parent': 'MF', 'auto preterminal span': (2, 13), 'span': (4, 12), 'left siblings': ['NX', 'ADVX'], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(SIMPX
				(VF siebenundzwanzigster)
				(LK konnte)
				(MF [01;33m(MF[00m
					(NX ich)
					[01;33m(PX[00m (ADVX naturlich)
					(APPR nach)
					[01;31m(NX[00m
						(NX meinem zahnarzttermin) [01;33mPX) MF)[00m
						(R der um acht uhr stattfindet)[01;31m)[00m
					(ADVX dann))
				(VC weg)))))
Step:UNSET remove
{'subtrees': ['NX', 'R'], 'family': ['NX', 'ADVX', 'APPR', 'NX', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV', 'APPR', 'PPOSAT', 'NN', 'PRELS', 'APPR', 'CARD', 'NN', 'VVFIN', 'ADV'), 'right siblings': ['ADVX'], 'parent': 'MF', 'auto preterminal span': (2, 13), 'span': (5, 12), 'left siblings': ['NX', 'ADVX', 'APPR'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(SIMPX
				(VF siebenundzwanzigster)
				(LK konnte)
				(MF
					[01;36m(MF[00m
						(NX ich)
						[01;36m(PX[00m
							(ADVX naturlich)
							(APPR nach)
							(NX meinem zahnarzttermin)[01;36m)[00m[01;36m)[00m
					(R der um acht uhr stattfindet)
					(ADVX dann))
				(VC weg)))))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADVX', 'APPR', 'NX'], 'family': ['MF', 'R', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV', 'APPR', 'PPOSAT', 'NN'), 'right siblings': [(R (C (NX (PRELS der))) (MF (PX (APPR um) (NX (ADJX (CARD acht)) (NN uhr)))) (VC (VXFIN (VVFIN stattfindet)))), (ADVX (ADV dann))], 'left siblings': [], 'auto preterminal span': (2, 7), 'span': (2, 7), 'parent': 'MF', 'label': 'MF', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU
			(SIMPX
				(VF siebenundzwanzigster)
				(LK konnte)
				(MF
					(MF
						(NX ich)
						[01;36m(PX[00m
							(ADVX naturlich)
							(APPR nach)
							(NX meinem zahnarzttermin)[01;36m)[00m)
					(R der um acht uhr stattfindet)
					(ADVX dann))
				(VC weg)))))
Step:UNSET add
{'subtrees': ['ADVX', 'APPR', 'NX'], 'family': ['NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'APPR', 'PPOSAT', 'NN'), 'right siblings': [], 'left siblings': [(NX (PPER ich))], 'auto preterminal span': (3, 7), 'span': (3, 7), 'parent': 'MF', 'label': 'PX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP siebenundzwanzigster konnte ich naturlich nach meinem zahnarzttermin der um acht uhr stattfindet dann weg)

Sentence 130:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			[01;31m(PX[00m
				(NX acht uhr morgens)
				(PX zum zahnarzt)[01;31m)[00m)))
Step:Unary
{'subtrees': ['NX', 'PX'], 'family': ['PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'NN', 'ADV', 'APPRART', 'NN'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (0, 5), 'span': (0, 5), 'left siblings': [], 'label': 'PX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP acht uhr morgens zum zahnarzt)

Sentence 131:
0 Initial errors
0 on fringe, 0 iterations

Sentence 132:
0 Initial errors
0 on fringe, 0 iterations

Sentence 133:
3 Initial errors
0 on fringe, 2 iterations
2 Error:NP Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;36m(SU[00m
				(NX
					(NX munchen)
					(NX hannover))[01;36m)[00m
			[01;36m(SU[00m
				(DM ach)
				(SIMPX der ice muste doch eigentlich ganz zugig sein)
				(DM oder)[01;36m)[00m[01;31m)[00m))
Step:NP Attachment
{'new_parent': 'TURN', 'new_family': ['NX', 'SU'], 'mover info': [('NX', (0, 2))], 'old_family': ['NX', 'DM', 'SIMPX', 'DM'], 'start left siblings': [], 'auto preterminals': ('NE', 'NE', 'ITJ', 'ART', 'NE', 'VMFIN', 'ADV', 'ADV', 'ADV', 'ADJD', 'VAINF', 'ITJ'), 'start right siblings': ['DM', 'SIMPX', 'DM'], 'end left siblings': [], 'auto preterminal span': (0, 12), 'movers': ['NX'], 'old_parent': 'SU', 'end right siblings': ['SU'], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;36m(SU[00m
			(NX
				(NX munchen)
				(NX hannover))[01;36m)[00m
		(SU ach der ice muste doch eigentlich ganz zugig sein oder)))
Step:Unary
{'subtrees': ['NX'], 'family': ['SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('NE', 'NE'), 'right siblings': [(SU (DM (ITJ ach)) (SIMPX (VF (NX (ART der) (NE ice))) (LK (VXFIN (VMFIN muste))) (MF (ADVX (ADV doch)) (ADVX (ADV eigentlich)) (ADJX (ADVX (ADV ganz)) (ADJD zugig))) (VC (VXINF (VAINF sein)))) (DM (ITJ oder)))], 'left siblings': [], 'auto preterminal span': (0, 2), 'span': (0, 2), 'parent': 'TURN', 'label': 'SU', 'classified_type': 'Unary', 'type': 'add'}
(TOP munchen hannover ach der ice muste doch eigentlich ganz zugig sein oder)

Sentence 134:
3 Initial errors
0 on fringe, 3 iterations
1 Error:UNSET add
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(SIMPX
				(LK wird)
				[01;36m(ADJX[00m
					[01;36m(MF[00m
						(MF knapp)
						[01;31m(NF[00m
							(PX
								(APPR ab)
								(NX zehn uhr))[01;31m)[00m[01;36m)[00m[01;36m)[00m))))
Step:UNSET add
{'subtrees': ['MF', 'NF'], 'family': ['LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJD', 'APPR', 'CARD', 'NN'), 'right siblings': [], 'left siblings': [(LK (VXFIN (VAFIN wird)))], 'auto preterminal span': (1, 5), 'span': (1, 5), 'parent': 'SIMPX', 'label': 'MF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU
			(SIMPX
				(LK wird)
				[01;36m(ADJX[00m
					(MF
						(MF knapp)
						[01;31m(NF[00m
							(PX
								(APPR ab)
								(NX zehn uhr))[01;31m)[00m)[01;36m)[00m))))
Step:Unary
{'subtrees': ['MF'], 'family': ['LK', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJD', 'APPR', 'CARD', 'NN'), 'right siblings': [], 'left siblings': [(LK (VXFIN (VAFIN wird)))], 'auto preterminal span': (1, 5), 'span': (1, 5), 'parent': 'SIMPX', 'label': 'ADJX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU
			(SIMPX
				(LK wird)
				(ADJX
					(MF
						(MF knapp)
						[01;31m(NF[00m
							(PX
								(APPR ab)
								(NX zehn uhr))[01;31m)[00m))))))
Step:Unary
{'subtrees': ['PX'], 'family': ['MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJD', 'APPR', 'CARD', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (1, 5), 'span': (2, 5), 'left siblings': ['MF'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP wird knapp ab zehn uhr)

Sentence 135:
9 Initial errors
0 on fringe, 7 iterations
2 Error:Single Word Phrase
2 Error:UNSET move
1 Error:Unary
1 Error:Unary
1 Error:NP Internal Structure
1 Error:NP Internal Structure
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;31m(NX[00m
				[01;36m(DM[00m [01;36m(SU[00m [01;31m(ADVX[00m
					(ADV knapp)[01;31m)[00m[01;36m)[00m[01;36m)[00m
				[01;36m(NX[00m
					[01;33m(NX[00m (ADJX zehn)
					(NN uhr)[01;36m)[00m[01;31m)[00m
			[01;31m(NX[00m
				(NX elf) [01;33mNX)[00m
				(NX zwolf)
				(NX eins)
				(NX zwei)[01;31m)[00m
			[01;31m(SIMPX[00m
				(LK sind)
				(MF wir um drei uhr da)[01;31m)[00m[01;31m)[00m))
Step:Single Word Phrase
{'family': ['SU', 'ADJX', 'NN'], 'auto preterminal span': (0, 1), 'span': (0, 1), 'subtrees': ['ADV'], 'parent': 'NX', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'SU')}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;31m(NX[00m
				[01;36m(DM[00m
					(SU
						(ADV knapp))[01;36m)[00m
				[01;36m(NX[00m
					[01;33m(NX[00m (ADJX zehn)
					(NN uhr)[01;36m)[00m[01;31m)[00m
			[01;31m(NX[00m
				(NX elf) [01;33mNX)[00m
				(NX zwolf)
				(NX eins)
				(NX zwei)[01;31m)[00m
			[01;31m(SIMPX[00m
				(LK sind)
				(MF wir um drei uhr da)[01;31m)[00m[01;31m)[00m))
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SU', 'NX', 'NX', 'SIMPX'], 'mover info': [('SU', (0, 1))], 'old_family': ['SU', 'ADJX', 'NN'], 'start left siblings': [], 'auto preterminals': ('ADV', 'CARD', 'NN', 'CARD', 'CARD', 'CARD', 'CARD', 'VAFIN', 'PPER', 'APPR', 'CARD', 'NN', 'ADV'), 'start right siblings': ['ADJX', 'NN'], 'end left siblings': [], 'auto preterminal span': (0, 13), 'movers': ['SU'], 'old_parent': 'NX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['NX', 'NX', 'SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;36m(DM[00m
				(SU
					(ADV knapp))[01;36m)[00m
			[01;33m(NX[00m (NX zehn uhr)
			[01;31m(NX[00m
				(NX elf) [01;33mNX)[00m
				(NX zwolf)
				(NX eins)
				(NX zwei)[01;31m)[00m
			[01;31m(SIMPX[00m
				(LK sind)
				(MF wir um drei uhr da)[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['SU'], 'family': ['DM', 'NX', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV',), 'right siblings': [(NX (ADJX (CARD zehn)) (NN uhr)), (NX (NX (CARD elf)) (NX (CARD zwolf)) (NX (CARD eins)) (NX (CARD zwei))), (SIMPX (LK (VXFIN (VAFIN sind))) (MF (NX (PPER wir)) (PX (APPR um) (NX (ADJX (CARD drei)) (NN uhr))) (ADVX (ADV da))))], 'left siblings': [], 'auto preterminal span': (0, 1), 'span': (0, 1), 'parent': 'SU', 'label': 'DM', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM knapp)
			[01;33m(NX[00m (NX zehn uhr)
			[01;31m(NX[00m
				(NX elf) [01;33mNX)[00m
				(NX zwolf)
				(NX eins)
				(NX zwei)[01;31m)[00m
			[01;31m(SIMPX[00m
				(LK sind)
				(MF wir um drei uhr da)[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['DM', 'NX', 'NX', 'SIMPX'], 'family': ['SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'CARD', 'NN', 'CARD', 'CARD', 'CARD', 'CARD', 'VAFIN', 'PPER', 'APPR', 'CARD', 'NN', 'ADV'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 13), 'span': (0, 13), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM knapp)
		[01;33m(NX[00m (NX zehn uhr)
		[01;31m(NX[00m
			(NX elf) [01;33mNX)[00m
			(NX zwolf)
			(NX eins)
			(NX zwei)[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK sind)
			(MF wir um drei uhr da)[01;31m)[00m))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX', 'NX', 'NX'], 'family': ['DM', 'NX', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'CARD', 'NN', 'CARD', 'CARD', 'CARD', 'CARD', 'VAFIN', 'PPER', 'APPR', 'CARD', 'NN', 'ADV'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 13), 'span': (3, 7), 'left siblings': ['DM', 'NX'], 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'remove'}
(TOP
	(TURN
		(DM knapp)
		[01;36m(NX[00m
			(NX zehn uhr)
			(NX elf)[01;36m)[00m
		(NX zwolf)
		(NX eins)
		(NX zwei)
		[01;31m(SIMPX[00m
			(LK sind)
			(MF wir um drei uhr da)[01;31m)[00m))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['DM', 'NX', 'NX', 'NX', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'NN', 'CARD'), 'right siblings': [(NX (CARD zwolf)), (NX (CARD eins)), (NX (CARD zwei)), (SIMPX (LK (VXFIN (VAFIN sind))) (MF (NX (PPER wir)) (PX (APPR um) (NX (ADJX (CARD drei)) (NN uhr))) (ADVX (ADV da))))], 'left siblings': [(DM (SU (ADV knapp)))], 'auto preterminal span': (1, 4), 'span': (1, 4), 'parent': 'TURN', 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'add'}
(TOP
	(TURN
		(DM knapp)
		(NX zehn uhr elf)
		(NX zwolf)
		(NX eins)
		(NX zwei)
		[01;31m(SIMPX[00m
			(LK sind)
			(MF wir um drei uhr da)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['DM', 'NX', 'NX', 'NX', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'CARD', 'NN', 'CARD', 'CARD', 'CARD', 'CARD', 'VAFIN', 'PPER', 'APPR', 'CARD', 'NN', 'ADV'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 13), 'span': (7, 13), 'left siblings': ['DM', 'NX', 'NX', 'NX', 'NX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP knapp zehn uhr elf zwolf eins zwei sind wir um drei uhr da)

Sentence 136:
4 Initial errors
0 on fringe, 3 iterations
2 Error:Clause Attachment
1 Error:UNSET remove
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(NX[00m
	(TOP
		(TURN
			(SU
				[01;31m(SIMPX[00m
					(LK genugt)
					[01;31m(MF[00m
						(NX
							(PDS das))[01;31m)[00m[01;31m)[00m
				[01;31m(NX[00m
					(NX ein halber tag)
					(ADVX dann)
					(ADVX noch)[01;31m)[00m)))[01;36m)[00m
Step:Clause Attachment
{'new_parent': 'NX', 'new_family': ['SIMPX', 'NX', 'ADVX', 'ADVX'], 'mover info': [('SIMPX', (0, 2))], 'old_family': ['SIMPX', 'NX'], 'start left siblings': [], 'auto preterminals': ('VVFIN', 'PDS', 'ART', 'ADJA', 'NN', 'ADV', 'ADV'), 'start right siblings': ['NX'], 'end left siblings': [], 'auto preterminal span': (0, 7), 'movers': ['SIMPX'], 'old_parent': 'SU', 'end right siblings': ['NX', 'ADVX', 'ADVX'], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU
			(NX
				[01;31m(SIMPX[00m
					(LK genugt)
					[01;31m(MF[00m
						(NX
							(PDS das))[01;31m)[00m[01;31m)[00m
				(NX ein halber tag)
				(ADVX dann)
				(ADVX noch)))))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['SIMPX', 'NX', 'ADVX', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PDS', 'ART', 'ADJA', 'NN', 'ADV', 'ADV'), 'right siblings': ['NX', 'ADVX', 'ADVX'], 'parent': 'NX', 'auto preterminal span': (0, 7), 'span': (0, 2), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(NX
				(LK genugt)
				[01;31m(MF[00m
					(NX
						(PDS das))[01;31m)[00m
				(NX ein halber tag)
				(ADVX dann)
				(ADVX noch)))))
Step:Unary
{'subtrees': ['NX'], 'family': ['LK', 'MF', 'NX', 'ADVX', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PDS', 'ART', 'ADJA', 'NN', 'ADV', 'ADV'), 'right siblings': ['NX', 'ADVX', 'ADVX'], 'parent': 'NX', 'auto preterminal span': (0, 7), 'span': (1, 2), 'left siblings': ['LK'], 'label': 'MF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP genugt das ein halber tag dann noch)

Sentence 137:
7 Initial errors
0 on fringe, 5 iterations
2 Error:Different label
2 Error:UNSET move
1 Error:Clause Attachment
1 Error:Clause Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;36m(SIMPX[00m
					(VF das)
					(LK muste)[01;36m)[00m
				[01;36m(DM[00m [01;31m(MF[00m
					(ADVX
						(ADV also))[01;31m)[00m[01;36m)[00m[01;31m)[00m
			[01;36m(SIMPX[00m
				(SIMPX fur den ersten halben tag muste das eigentlich reichen)
				(DM also)
				(NX die)
				(SIMPX dann quetschen wir die termine ein bischen zusammen)[01;36m)[00m
			[01;36m(SU[00m
				(DM also)
				(SIMPX da mussen die leute jetzt auch mal etwas variabel sein)[01;36m)[00m
			(SIMPX ich meine flexibel)[01;31m)[00m))
Step:Different label
{'family': ['VF', 'LK', 'DM'], 'auto preterminal span': (2, 3), 'span': (2, 3), 'subtrees': ['ADVX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('ADV',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('MF', 'DM')}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;36m(SIMPX[00m
					(VF das)
					(LK muste)[01;36m)[00m
				(DM also)[01;31m)[00m
			[01;36m(SIMPX[00m
				(SIMPX fur den ersten halben tag muste das eigentlich reichen)
				(DM also)
				(NX die)
				(SIMPX dann quetschen wir die termine ein bischen zusammen)[01;36m)[00m
			[01;36m(SU[00m
				(DM also)
				(SIMPX da mussen die leute jetzt auch mal etwas variabel sein)[01;36m)[00m
			(SIMPX ich meine flexibel)[01;31m)[00m))
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SIMPX', 'DM', 'SIMPX', 'DM', 'NX', 'SIMPX', 'DM', 'SIMPX', 'SIMPX'], 'mover info': [('DM', (2, 3))], 'old_family': ['VF', 'LK', 'DM'], 'start left siblings': ['VF', 'LK'], 'auto preterminals': ('PDS', 'VMFIN', 'ADV', 'APPR', 'ART', 'ADJA', 'ADJA', 'NN', 'VMFIN', 'PDS', 'ADV', 'VVINF', 'ADV', 'PDS', 'ADV', 'VVFIN', 'PPER', 'ART', 'NN', 'ART', 'PIS', 'PTKVZ', 'ADV', 'ADV', 'VMFIN', 'ART', 'NN', 'ADV', 'ADV', 'ADV', 'ADV', 'ADJD', 'VAINF', 'PPER', 'VVFIN', 'ADJD'), 'start right siblings': [], 'end left siblings': ['SIMPX'], 'auto preterminal span': (0, 36), 'movers': ['DM'], 'old_parent': 'SIMPX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['SIMPX', 'DM', 'NX', 'SIMPX', 'DM', 'SIMPX', 'SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			(SIMPX das muste)
			(DM also)
			[01;36m(SIMPX[00m
				(SIMPX fur den ersten halben tag muste das eigentlich reichen)
				(DM also)
				(NX die)
				(SIMPX dann quetschen wir die termine ein bischen zusammen)[01;36m)[00m
			[01;36m(SU[00m
				(DM also)
				(SIMPX da mussen die leute jetzt auch mal etwas variabel sein)[01;36m)[00m
			(SIMPX ich meine flexibel)[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'DM', 'NX', 'SIMPX'], 'family': ['SIMPX', 'DM', 'SIMPX', 'DM', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'ADJA', 'ADJA', 'NN', 'VMFIN', 'PDS', 'ADV', 'VVINF', 'ADV', 'PDS', 'ADV', 'VVFIN', 'PPER', 'ART', 'NN', 'ART', 'PIS', 'PTKVZ'), 'right siblings': [(DM (ADVX (ADV also))), (SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VMFIN mussen))) (MF (NX (ART die) (NN leute)) (ADVX (ADV jetzt)) (ADVX (ADV auch)) (ADVX (ADV mal)) (ADJX (ADVX (ADV etwas)) (ADJD variabel))) (VC (VXINF (VAINF sein)))), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN meine))) (MF (ADJX (ADJD flexibel))))], 'left siblings': [(SIMPX (VF (NX (PDS das))) (LK (VXFIN (VMFIN muste)))), (DM (ADVX (ADV also)))], 'auto preterminal span': (3, 22), 'span': (3, 22), 'parent': 'SU', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(SIMPX das muste)
			(DM also)
			(SIMPX fur den ersten halben tag muste das eigentlich reichen also die dann quetschen wir die termine ein bischen zusammen)
			[01;36m(SU[00m
				(DM also)
				(SIMPX da mussen die leute jetzt auch mal etwas variabel sein)[01;36m)[00m
			(SIMPX ich meine flexibel)[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['DM', 'SIMPX'], 'family': ['SIMPX', 'DM', 'SIMPX', 'SU', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'VMFIN', 'ART', 'NN', 'ADV', 'ADV', 'ADV', 'ADV', 'ADJD', 'VAINF'), 'right siblings': [(SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN meine))) (MF (ADJX (ADJD flexibel))))], 'left siblings': [(SIMPX (VF (NX (PDS das))) (LK (VXFIN (VMFIN muste)))), (DM (ADVX (ADV also))), (SIMPX (SIMPX (VF (PX (APPR fur) (NX (ART den) (ADJX (ADJA ersten)) (ADJX (ADJA halben)) (NN tag)))) (LK (VXFIN (VMFIN muste))) (MF (NX (PDS das)) (ADVX (ADV eigentlich))) (VC (VXINF (VVINF reichen)))) (DM (ADVX (ADV also))) (NX (PDS die)) (SIMPX (VF (ADVX (ADV dann))) (LK (VXFIN (VVFIN quetschen))) (MF (NX (PPER wir)) (NX (ART die) (NN termine)) (NX (ART ein) (PIS bischen))) (VC (PTKVZ zusammen))))], 'auto preterminal span': (22, 33), 'span': (22, 33), 'parent': 'SU', 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(SIMPX das muste)
			(DM also)
			(SIMPX fur den ersten halben tag muste das eigentlich reichen also die dann quetschen wir die termine ein bischen zusammen)
			(SU also da mussen die leute jetzt auch mal etwas variabel sein)
			(SIMPX ich meine flexibel)[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX', 'DM', 'SIMPX', 'SU', 'SIMPX'], 'family': ['SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VMFIN', 'ADV', 'APPR', 'ART', 'ADJA', 'ADJA', 'NN', 'VMFIN', 'PDS', 'ADV', 'VVINF', 'ADV', 'PDS', 'ADV', 'VVFIN', 'PPER', 'ART', 'NN', 'ART', 'PIS', 'PTKVZ', 'ADV', 'ADV', 'VMFIN', 'ART', 'NN', 'ADV', 'ADV', 'ADV', 'ADV', 'ADJD', 'VAINF', 'PPER', 'VVFIN', 'ADJD'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 36), 'span': (0, 36), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP das muste also fur den ersten halben tag muste das eigentlich reichen also die dann quetschen wir die termine ein bischen zusammen also da mussen die leute jetzt auch mal etwas variabel sein ich meine flexibel)

Sentence 138:
0 Initial errors
0 on fringe, 0 iterations

Sentence 139:
0 Initial errors
0 on fringe, 0 iterations

Sentence 140:
0 Initial errors
0 on fringe, 0 iterations

Sentence 141:
0 Initial errors
0 on fringe, 0 iterations

Sentence 142:
7 Initial errors
0 on fringe, 3 iterations
3 Error:PP Attachment
2 Error:Single Word Phrase
2 Error:NP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP [01;33m(PX[00m
	(TURN
		(SU
			(APPR mit)
			[01;31m(PX[00m
				[01;36m(NX[00m [01;31m(ADVX[00m
					(ADV naturlich)[01;31m)[00m [01;33mPX)[00m[01;36m)[00m
				[01;31m(PX[00m [01;33m(PX[00m
					(APPR mit)
					[01;33m(NX[00m (NX schwimm und dampfbad)[01;31m)[00m[01;31m)[00m
			(PX direkt am hauptbahnhof) [01;33mNX) PX)[00m
			(SIMPX das hort sich gut an))))
Step:PP Attachment
{'new_parent': 'PX', 'new_family': ['APPR', 'NX', 'PX'], 'mover info': [('PX', (6, 9))], 'old_family': ['APPR', 'PX', 'PX', 'SIMPX'], 'start left siblings': ['APPR', 'PX'], 'auto preterminals': ('APPR', 'ADV', 'APPR', 'TRUNC', 'KON', 'NN', 'ADV', 'APPRART', 'NN', 'PDS', 'VVFIN', 'PRF', 'ADJD', 'PTKVZ'), 'start right siblings': ['SIMPX'], 'end left siblings': ['APPR', 'NX'], 'auto preterminal span': (0, 14), 'adding node already present': False, 'movers': ['PX'], 'old_parent': 'SU', 'added and moved': True, 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'NX'}
(TOP [01;33m(PX[00m
	(TURN
		(SU
			(APPR mit)
			[01;31m(PX[00m
				[01;36m(NX[00m [01;31m(ADVX[00m
					(ADV naturlich)[01;31m)[00m [01;33mPX)[00m[01;36m)[00m
				(PX mit schwimm und dampfbad direkt am hauptbahnhof)[01;31m)[00m
			(SIMPX das hort sich gut an))))
Step:Single Word Phrase
{'family': ['NX', 'PX'], 'auto preterminal span': (1, 2), 'span': (1, 2), 'subtrees': ['ADV'], 'parent': 'PX', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'NX')}
(TOP [01;33m(PX[00m
	(TURN
		(SU
			(APPR mit)
			[01;31m(PX[00m
				(NX naturlich) [01;33mPX)[00m
				(PX mit schwimm und dampfbad direkt am hauptbahnhof)[01;31m)[00m
			(SIMPX das hort sich gut an))))
Step:NP Attachment
{'new_parent': 'SU', 'new_family': ['APPR', 'NX', 'PX', 'SIMPX'], 'mover info': [('NX', (1, 2))], 'old_family': ['NX', 'PX'], 'start left siblings': [], 'auto preterminals': ('APPR', 'ADV', 'APPR', 'TRUNC', 'KON', 'NN', 'ADV', 'APPRART', 'NN', 'PDS', 'VVFIN', 'PRF', 'ADJD', 'PTKVZ'), 'start right siblings': ['PX'], 'end left siblings': ['APPR'], 'auto preterminal span': (0, 14), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'PX', 'POS confusion': ('ADV', 'ADV'), 'added and moved': True, 'end right siblings': ['PX', 'SIMPX'], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'PX'}
(TOP mit naturlich mit schwimm und dampfbad direkt am hauptbahnhof das hort sich gut an)

Sentence 143:
9 Initial errors
0 on fringe, 7 iterations
2 Error:Clause Attachment
2 Error:Modifier Attachment
1 Error:Clause Attachment
1 Error:UNSET add
1 Error:Clause Attachment
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM also)
			[01;36m(SIMPX[00m
				(SIMPX dann wurde ich lieber das einzelzimmer mal vorschlagen)
				(SIMPX
					(KOORD und)
					(C da)
					[01;31m(FKOORD[00m
						(MVC wir es nicht selber bezahlen)
						(KON und)
						(MVC wir schon dann lange im zug gesessen haben)[01;31m)[00m)[01;36m)[00m
			[01;36m(SU[00m
				(DM also)
				[01;36m(SIMPX[00m
					(SIMPX [01;33m(SIMPX[00m
						(VF ich)
						(LK wurde)
						[01;31m(MF[00m
							[01;36m(MF[00m
								(NX
									(PPER es)) [01;33mSIMPX)[00m[01;36m)[00m
							[01;36m(DM[00m
								(ADVX
									(ADV also))[01;36m)[00m[01;31m)[00m)
					(SIMPX ich wurde es dann mal machen)[01;36m)[00m[01;36m)[00m[01;31m)[00m))
Step:Clause Attachment
{'new_parent': 'TURN', 'new_family': ['DM', 'SIMPX', 'SIMPX', 'SU'], 'mover info': [('DM', (0, 1)), ('SIMPX', (1, 9)), ('SIMPX', (9, 25))], 'old_family': ['DM', 'SIMPX', 'SIMPX', 'DM', 'SIMPX', 'SIMPX'], 'start left siblings': [], 'auto preterminals': ('ADV', 'ADV', 'VAFIN', 'PPER', 'ADV', 'ART', 'NN', 'ADV', 'VVINF', 'KON', 'KOUS', 'PPER', 'PPER', 'PTKNEG', 'ADV', 'VVFIN', 'KON', 'PPER', 'ADV', 'ADV', 'ADJD', 'APPRART', 'NN', 'VVPP', 'VAFIN', 'ADV', 'PPER', 'VAFIN', 'PPER', 'ADV', 'PPER', 'VAFIN', 'PPER', 'ADV', 'ADV', 'VVINF'), 'start right siblings': ['DM', 'SIMPX', 'SIMPX'], 'end left siblings': [], 'auto preterminal span': (0, 36), 'movers': ['DM', 'SIMPX', 'SIMPX'], 'old_parent': 'SU', 'end right siblings': ['SU'], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM also)
		[01;36m(SIMPX[00m
			(SIMPX dann wurde ich lieber das einzelzimmer mal vorschlagen)
			(SIMPX
				(KOORD und)
				(C da)
				[01;31m(FKOORD[00m
					(MVC wir es nicht selber bezahlen)
					(KON und)
					(MVC wir schon dann lange im zug gesessen haben)[01;31m)[00m)[01;36m)[00m
		(SU
			(DM also)
			[01;36m(SIMPX[00m
				(SIMPX [01;33m(SIMPX[00m
					(VF ich)
					(LK wurde)
					[01;31m(MF[00m
						[01;36m(MF[00m
							(NX
								(PPER es)) [01;33mSIMPX)[00m[01;36m)[00m
						[01;36m(DM[00m
							(ADVX
								(ADV also))[01;36m)[00m[01;31m)[00m)
				(SIMPX ich wurde es dann mal machen)[01;36m)[00m)))
Step:Modifier Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'ADVX'], 'mover info': [('ADVX', (29, 30))], 'old_family': ['NX', 'ADVX'], 'start left siblings': ['NX'], 'auto preterminals': ('PPER', 'VAFIN', 'PPER', 'ADV'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (26, 30), 'movers': ['ADVX'], 'old_parent': 'MF', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM also)
		[01;36m(SIMPX[00m
			(SIMPX dann wurde ich lieber das einzelzimmer mal vorschlagen)
			(SIMPX
				(KOORD und)
				(C da)
				[01;31m(FKOORD[00m
					(MVC wir es nicht selber bezahlen)
					(KON und)
					(MVC wir schon dann lange im zug gesessen haben)[01;31m)[00m)[01;36m)[00m
		(SU
			(DM also)
			[01;36m(SIMPX[00m
				(SIMPX
					[01;36m(SIMPX[00m
						(VF ich)
						(LK wurde)
						(MF es)[01;36m)[00m
					[01;36m(DM[00m
						(ADVX
							(ADV also))[01;36m)[00m)
				(SIMPX ich wurde es dann mal machen)[01;36m)[00m)))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['DM', 'SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'ADV', 'ART', 'NN', 'ADV', 'VVINF', 'KON', 'KOUS', 'PPER', 'PPER', 'PTKNEG', 'ADV', 'VVFIN', 'KON', 'PPER', 'ADV', 'ADV', 'ADJD', 'APPRART', 'NN', 'VVPP', 'VAFIN'), 'right siblings': [(SU (DM (ADVX (ADV also))) (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VAFIN wurde))) (MF (NX (PPER es))) (ADVX (ADV also))) (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VAFIN wurde))) (MF (NX (PPER es)) (ADVX (ADV dann)) (ADVX (ADV mal))) (VC (VXINF (VVINF machen)))))], 'left siblings': [(DM (ADVX (ADV also)))], 'auto preterminal span': (1, 25), 'span': (1, 25), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		(SIMPX
			(SIMPX dann wurde ich lieber das einzelzimmer mal vorschlagen)
			(SIMPX
				(KOORD und)
				(C da)
				[01;31m(FKOORD[00m
					(MVC wir es nicht selber bezahlen)
					(KON und)
					(MVC wir schon dann lange im zug gesessen haben)[01;31m)[00m))
		(SU
			(DM also)
			[01;36m(SIMPX[00m
				(SIMPX
					[01;36m(SIMPX[00m
						(VF ich)
						(LK wurde)
						(MF es)[01;36m)[00m
					[01;36m(DM[00m
						(ADVX
							(ADV also))[01;36m)[00m)
				(SIMPX ich wurde es dann mal machen)[01;36m)[00m)))
Step:UNSET add
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['SIMPX', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'PPER'), 'right siblings': [(ADVX (ADV also))], 'left siblings': [], 'auto preterminal span': (26, 29), 'span': (26, 29), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		(SIMPX
			(SIMPX dann wurde ich lieber das einzelzimmer mal vorschlagen)
			(SIMPX
				(KOORD und)
				(C da)
				[01;31m(FKOORD[00m
					(MVC wir es nicht selber bezahlen)
					(KON und)
					(MVC wir schon dann lange im zug gesessen haben)[01;31m)[00m))
		(SU
			(DM also)
			[01;36m(SIMPX[00m
				(SIMPX
					(SIMPX ich wurde es)
					[01;36m(DM[00m
						(ADVX
							(ADV also))[01;36m)[00m)
				(SIMPX ich wurde es dann mal machen)[01;36m)[00m)))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'PPER', 'ADV', 'PPER', 'VAFIN', 'PPER', 'ADV', 'ADV', 'VVINF'), 'right siblings': [], 'left siblings': [(DM (ADVX (ADV also)))], 'auto preterminal span': (26, 36), 'span': (26, 36), 'parent': 'SU', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		(SIMPX
			(SIMPX dann wurde ich lieber das einzelzimmer mal vorschlagen)
			(SIMPX
				(KOORD und)
				(C da)
				[01;31m(FKOORD[00m
					(MVC wir es nicht selber bezahlen)
					(KON und)
					(MVC wir schon dann lange im zug gesessen haben)[01;31m)[00m))
		(SU
			(DM also)
			(SIMPX
				(SIMPX
					(SIMPX ich wurde es)
					[01;36m(DM[00m
						(ADVX
							(ADV also))[01;36m)[00m)
				(SIMPX ich wurde es dann mal machen)))))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['SIMPX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV',), 'right siblings': [], 'left siblings': [(SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VAFIN wurde))) (MF (NX (PPER es))))], 'auto preterminal span': (29, 30), 'span': (29, 30), 'parent': 'SIMPX', 'label': 'DM', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		(SIMPX
			(SIMPX dann wurde ich lieber das einzelzimmer mal vorschlagen)
			(SIMPX
				(KOORD und)
				(C da)
				[01;31m(FKOORD[00m
					(MVC wir es nicht selber bezahlen)
					(KON und)
					(MVC wir schon dann lange im zug gesessen haben)[01;31m)[00m))
		(SU also ich wurde es also ich wurde es dann mal machen)))
Step:UNSET remove
{'subtrees': ['MVC', 'KON', 'MVC'], 'family': ['KOORD', 'C', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'KOUS', 'PPER', 'PPER', 'PTKNEG', 'ADV', 'VVFIN', 'KON', 'PPER', 'ADV', 'ADV', 'ADJD', 'APPRART', 'NN', 'VVPP', 'VAFIN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (9, 25), 'span': (11, 25), 'left siblings': ['KOORD', 'C'], 'label': 'FKOORD', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP also dann wurde ich lieber das einzelzimmer mal vorschlagen und da wir es nicht selber bezahlen und wir schon dann lange im zug gesessen haben also ich wurde es also ich wurde es dann mal machen)

Sentence 144:
4 Initial errors
0 on fringe, 3 iterations
2 Error:Clause Attachment
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SIMPX[00m
	(TOP
		(TURN
			(SU
				[01;31m(SIMPX[00m
					(VF ich)
					(LK denke)
					(MF auch)[01;31m)[00m
				[01;31m(DM[00m
					(NX
						(PPOSAT mein)
						(NE gott))[01;31m)[00m
				[01;36m(NF[00m
					(SIMPX
						(C wer)
						(MF hier schon wieder eine nacht)
						(VC opfert))[01;36m)[00m)))[01;36m)[00m
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'DM', 'SIMPX'], 'mover info': [('DM', (3, 5)), ('SIMPX', (5, 12))], 'old_family': ['SIMPX', 'DM', 'SIMPX'], 'start left siblings': ['SIMPX'], 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'PPOSAT', 'NE', 'PWS', 'ADV', 'ADV', 'ADV', 'ART', 'NN', 'VVFIN'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (0, 12), 'movers': ['DM', 'SIMPX'], 'old_parent': 'SU', 'end right siblings': [], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU
			(SIMPX
				(VF ich)
				(LK denke)
				(MF auch)
				[01;31m(DM[00m
					(NX
						(PPOSAT mein)
						(NE gott))[01;31m)[00m
				[01;36m(NF[00m
					(SIMPX
						(C wer)
						(MF hier schon wieder eine nacht)
						(VC opfert))[01;36m)[00m))))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['VF', 'LK', 'MF', 'DM', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PWS', 'ADV', 'ADV', 'ADV', 'ART', 'NN', 'VVFIN'), 'right siblings': [], 'left siblings': [(VF (NX (PPER ich))), (LK (VXFIN (VVFIN denke))), (MF (ADVX (ADV auch))), (DM (NX (PPOSAT mein) (NE gott)))], 'auto preterminal span': (5, 12), 'span': (5, 12), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU
			(SIMPX
				(VF ich)
				(LK denke)
				(MF auch)
				[01;31m(DM[00m
					(NX
						(PPOSAT mein)
						(NE gott))[01;31m)[00m
				(NF wer hier schon wieder eine nacht opfert)))))
Step:Unary
{'subtrees': ['NX'], 'family': ['VF', 'LK', 'MF', 'DM', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'PPOSAT', 'NE', 'PWS', 'ADV', 'ADV', 'ADV', 'ART', 'NN', 'VVFIN'), 'right siblings': ['NF'], 'parent': 'SIMPX', 'auto preterminal span': (0, 12), 'span': (3, 5), 'left siblings': ['VF', 'LK', 'MF'], 'label': 'DM', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ich denke auch mein gott wer hier schon wieder eine nacht opfert)

Sentence 145:
0 Initial errors
0 on fringe, 0 iterations

Sentence 146:
15 Initial errors
0 on fringe, 9 iterations
3 Error:NP Attachment
3 Error:PP Attachment
2 Error:Single Word Phrase
2 Error:Co-ordination
1 Error:Unary
1 Error:Single Word Phrase
1 Error:Unary
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM also)
			[01;36m(NX[00m
				[01;31m(NX[00m
					(NX kino)
					[01;33m(ADVX[00m (ADVX nicht)[01;31m)[00m
				(NX theater nicht) [01;33mADVX)[00m[01;36m)[00m
			(ADVX dann)
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(ADVX
						(ADV vielleicht))[01;31m)[00m
				[01;36m(MF[00m
					(NX
						(PPER wir))[01;36m)[00m
				(LK gehen)
				(MF
					(NX wir)
					(ADVX einfach)
					[01;36m(PX[00m
						[01;31m(PX[00m
							(APPR in)
							[01;33m(NX[00m (NX eine kneipe)[01;31m)[00m
						(APPR nach)
						(ART der)
						(PX nach dem meeting)[01;36m)[00m)[01;31m)[00m [01;33mNX)[00m
			[01;36m(SIMPX[00m
				[01;36m(KOORD[00m
					(KON und)[01;36m)[00m
				(DM ja)
				[01;31m(SIMPX[00m
					(VF dann)
					(LK brauchen)
					(MF
						(NX wir)
						(ADVX nicht)
						(ADVX weiter)
						[01;36m(NX[00m [01;31m(ADJX[00m
							(ADJD grosartig)[01;31m)[00m[01;36m)[00m)
					(VC planen)[01;31m)[00m[01;36m)[00m[01;31m)[00m))
Step:NP Attachment
{'new_parent': 'NX', 'new_family': ['NX', 'ADVX', 'NX'], 'mover info': [('NX', (3, 5))], 'old_family': ['DM', 'NX', 'NX', 'ADVX', 'SIMPX', 'KON', 'DM', 'SIMPX'], 'start left siblings': ['DM', 'NX'], 'auto preterminals': ('ADV', 'NN', 'PTKNEG', 'NN', 'PTKNEG', 'ADV', 'ADV', 'PPER', 'VVFIN', 'PPER', 'ADV', 'APPR', 'ART', 'NN', 'APPR', 'ART', 'APPR', 'ART', 'NN', 'KON', 'PTKANT', 'ADV', 'VVFIN', 'PPER', 'PTKNEG', 'ADV', 'ADJD', 'VVINF'), 'start right siblings': ['ADVX', 'SIMPX', 'KON', 'DM', 'SIMPX'], 'end left siblings': ['NX', 'ADVX'], 'auto preterminal span': (0, 28), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'SU', 'added and moved': True, 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM also)
			(NX kino nicht theater nicht)
			(ADVX dann)
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(ADVX
						(ADV vielleicht))[01;31m)[00m
				[01;36m(MF[00m
					(NX
						(PPER wir))[01;36m)[00m
				(LK gehen)
				(MF
					(NX wir)
					(ADVX einfach)
					[01;36m(PX[00m
						[01;31m(PX[00m
							(APPR in)
							[01;33m(NX[00m (NX eine kneipe)[01;31m)[00m
						(APPR nach)
						(ART der)
						(PX nach dem meeting)[01;36m)[00m)[01;31m)[00m [01;33mNX)[00m
			[01;36m(SIMPX[00m
				[01;36m(KOORD[00m
					(KON und)[01;36m)[00m
				(DM ja)
				[01;31m(SIMPX[00m
					(VF dann)
					(LK brauchen)
					(MF
						(NX wir)
						(ADVX nicht)
						(ADVX weiter)
						[01;36m(NX[00m [01;31m(ADJX[00m
							(ADJD grosartig)[01;31m)[00m[01;36m)[00m)
					(VC planen)[01;31m)[00m[01;36m)[00m[01;31m)[00m))
Step:PP Attachment
{'new_parent': 'PX', 'new_family': ['APPR', 'NX', 'APPR', 'ART', 'PX'], 'mover info': [('APPR', (14, 15)), ('ART', (15, 16)), ('PX', (16, 19))], 'old_family': ['NX', 'ADVX', 'PX', 'APPR', 'ART', 'PX'], 'start left siblings': ['NX', 'ADVX', 'PX'], 'auto preterminals': ('PPER', 'ADV', 'APPR', 'ART', 'NN', 'APPR', 'ART', 'APPR', 'ART', 'NN'), 'start right siblings': [], 'end left siblings': ['APPR', 'NX'], 'auto preterminal span': (9, 19), 'adding node already present': False, 'movers': ['APPR', 'ART', 'PX'], 'old_parent': 'MF', 'added and moved': True, 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM also)
			(NX kino nicht theater nicht)
			(ADVX dann)
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(ADVX
						(ADV vielleicht))[01;31m)[00m
				[01;36m(MF[00m
					(NX
						(PPER wir))[01;36m)[00m
				(LK gehen)
				(MF wir einfach in eine kneipe nach der nach dem meeting)[01;31m)[00m
			[01;36m(SIMPX[00m
				[01;36m(KOORD[00m
					(KON und)[01;36m)[00m
				(DM ja)
				[01;31m(SIMPX[00m
					(VF dann)
					(LK brauchen)
					(MF
						(NX wir)
						(ADVX nicht)
						(ADVX weiter)
						[01;36m(NX[00m [01;31m(ADJX[00m
							(ADJD grosartig)[01;31m)[00m[01;36m)[00m)
					(VC planen)[01;31m)[00m[01;36m)[00m[01;31m)[00m))
Step:Single Word Phrase
{'family': ['NX', 'ADVX', 'ADVX', 'NX'], 'auto preterminal span': (26, 27), 'span': (26, 27), 'subtrees': ['ADJD'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('ADJD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'NX')}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM also)
			(NX kino nicht theater nicht)
			(ADVX dann)
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(ADVX
						(ADV vielleicht))[01;31m)[00m
				[01;36m(MF[00m
					(NX
						(PPER wir))[01;36m)[00m
				(LK gehen)
				(MF wir einfach in eine kneipe nach der nach dem meeting)[01;31m)[00m
			[01;36m(SIMPX[00m
				[01;36m(KOORD[00m
					(KON und)[01;36m)[00m
				(DM ja)
				[01;31m(SIMPX[00m
					(VF dann)
					(LK brauchen)
					(MF wir nicht weiter grosartig)
					(VC planen)[01;31m)[00m[01;36m)[00m[01;31m)[00m))
Step:Co-ordination
{'new_parent': 'SIMPX', 'new_family': ['KON', 'DM', 'VF', 'LK', 'MF', 'VC'], 'mover info': [('KON', (19, 20)), ('DM', (20, 21))], 'old_family': ['DM', 'NX', 'ADVX', 'SIMPX', 'KON', 'DM', 'SIMPX'], 'start left siblings': ['DM', 'NX', 'ADVX', 'SIMPX'], 'auto preterminals': ('ADV', 'NN', 'PTKNEG', 'NN', 'PTKNEG', 'ADV', 'ADV', 'PPER', 'VVFIN', 'PPER', 'ADV', 'APPR', 'ART', 'NN', 'APPR', 'ART', 'APPR', 'ART', 'NN', 'KON', 'PTKANT', 'ADV', 'VVFIN', 'PPER', 'PTKNEG', 'ADV', 'ADJD', 'VVINF'), 'start right siblings': ['SIMPX'], 'end left siblings': [], 'auto preterminal span': (0, 28), 'movers': ['KON', 'DM'], 'old_parent': 'SU', 'end right siblings': ['VF', 'LK', 'MF', 'VC'], 'classified_type': 'Co-ordination', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM also)
			(NX kino nicht theater nicht)
			(ADVX dann)
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(ADVX
						(ADV vielleicht))[01;31m)[00m
				[01;36m(MF[00m
					(NX
						(PPER wir))[01;36m)[00m
				(LK gehen)
				(MF wir einfach in eine kneipe nach der nach dem meeting)[01;31m)[00m
			(SIMPX
				[01;36m(KOORD[00m
					(KON und)[01;36m)[00m
				(DM ja)
				(VF dann)
				(LK brauchen)
				(MF wir nicht weiter grosartig)
				(VC planen))[01;31m)[00m))
Step:Unary
{'subtrees': ['NX'], 'family': ['VF', 'MF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER',), 'right siblings': [(LK (VXFIN (VVFIN gehen))), (MF (NX (PPER wir)) (ADVX (ADV einfach)) (PX (APPR in) (NX (NX (ART eine) (NN kneipe)) (APPR nach) (ART der) (PX (APPR nach) (NX (ART dem) (NN meeting))))))], 'left siblings': [(VF (ADVX (ADV vielleicht)))], 'auto preterminal span': (7, 8), 'span': (7, 8), 'parent': 'SIMPX', 'label': 'MF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM also)
			(NX kino nicht theater nicht)
			(ADVX dann)
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(ADVX
						(ADV vielleicht))[01;31m)[00m
				(MF wir)
				(LK gehen)
				(MF wir einfach in eine kneipe nach der nach dem meeting)[01;31m)[00m
			(SIMPX
				[01;36m(KOORD[00m
					(KON und)[01;36m)[00m
				(DM ja)
				(VF dann)
				(LK brauchen)
				(MF wir nicht weiter grosartig)
				(VC planen))[01;31m)[00m))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['KOORD', 'DM', 'VF', 'LK', 'MF', 'VC'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON',), 'right siblings': [(DM (PTKANT ja)), (VF (ADVX (ADV dann))), (LK (VXFIN (VVFIN brauchen))), (MF (NX (PPER wir)) (ADVX (PTKNEG nicht)) (ADVX (ADV weiter)) (NX (ADJD grosartig))), (VC (VXINF (VVINF planen)))], 'left siblings': [], 'auto preterminal span': (19, 20), 'span': (19, 20), 'parent': 'SIMPX', 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM also)
			(NX kino nicht theater nicht)
			(ADVX dann)
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(ADVX
						(ADV vielleicht))[01;31m)[00m
				(MF wir)
				(LK gehen)
				(MF wir einfach in eine kneipe nach der nach dem meeting)[01;31m)[00m
			(SIMPX und ja dann brauchen wir nicht weiter grosartig planen)[01;31m)[00m))
Step:Unary
{'subtrees': ['DM', 'NX', 'ADVX', 'SIMPX', 'SIMPX'], 'family': ['SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'NN', 'PTKNEG', 'NN', 'PTKNEG', 'ADV', 'ADV', 'PPER', 'VVFIN', 'PPER', 'ADV', 'APPR', 'ART', 'NN', 'APPR', 'ART', 'APPR', 'ART', 'NN', 'KON', 'PTKANT', 'ADV', 'VVFIN', 'PPER', 'PTKNEG', 'ADV', 'ADJD', 'VVINF'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 28), 'span': (0, 28), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(NX kino nicht theater nicht)
		(ADVX dann)
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				(ADVX
					(ADV vielleicht))[01;31m)[00m
			(MF wir)
			(LK gehen)
			(MF wir einfach in eine kneipe nach der nach dem meeting)[01;31m)[00m
		(SIMPX und ja dann brauchen wir nicht weiter grosartig planen)))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['VF', 'MF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPER', 'VVFIN', 'PPER', 'ADV', 'APPR', 'ART', 'NN', 'APPR', 'ART', 'APPR', 'ART', 'NN'), 'right siblings': ['MF', 'LK', 'MF'], 'parent': 'SIMPX', 'auto preterminal span': (6, 19), 'span': (6, 7), 'left siblings': [], 'label': 'VF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(NX kino nicht theater nicht)
		(ADVX dann)
		[01;31m(SIMPX[00m
			(ADVX vielleicht)
			(MF wir)
			(LK gehen)
			(MF wir einfach in eine kneipe nach der nach dem meeting)[01;31m)[00m
		(SIMPX und ja dann brauchen wir nicht weiter grosartig planen)))
Step:UNSET remove
{'subtrees': ['ADVX', 'MF', 'LK', 'MF'], 'family': ['DM', 'NX', 'ADVX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'NN', 'PTKNEG', 'NN', 'PTKNEG', 'ADV', 'ADV', 'PPER', 'VVFIN', 'PPER', 'ADV', 'APPR', 'ART', 'NN', 'APPR', 'ART', 'APPR', 'ART', 'NN', 'KON', 'PTKANT', 'ADV', 'VVFIN', 'PPER', 'PTKNEG', 'ADV', 'ADJD', 'VVINF'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 28), 'span': (6, 19), 'left siblings': ['DM', 'NX', 'ADVX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP also kino nicht theater nicht dann vielleicht wir gehen wir einfach in eine kneipe nach der nach dem meeting und ja dann brauchen wir nicht weiter grosartig planen)

Sentence 147:
0 Initial errors
0 on fringe, 0 iterations

Sentence 148:
0 Initial errors
0 on fringe, 0 iterations

Sentence 149:
0 Initial errors
0 on fringe, 0 iterations

Sentence 150:
4 Initial errors
0 on fringe, 3 iterations
2 Error:UNSET move
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;36m(SU[00m
				(DM
					(ITJ okay))[01;36m)[00m
			[01;36m(SU[00m
				[01;36m(NX[00m
					(DM
						(ITJ tschus))[01;36m)[00m[01;36m)[00m[01;31m)[00m))
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['DM', 'SU'], 'mover info': [('DM', (0, 1))], 'old_family': ['DM', 'DM'], 'start left siblings': [], 'auto preterminals': ('ITJ', 'ITJ'), 'start right siblings': ['DM'], 'end left siblings': [], 'auto preterminal span': (0, 2), 'movers': ['DM'], 'old_parent': 'SU', 'POS confusion': ('ITJ', 'ITJ'), 'end right siblings': ['SU'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		[01;36m(SU[00m
			(DM
				(ITJ okay))[01;36m)[00m
		[01;36m(NX[00m
			(SU
				(DM
					(ITJ tschus)))[01;36m)[00m))
Step:Unary
{'subtrees': ['DM'], 'family': ['SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ',), 'right siblings': [(SU (DM (ITJ tschus)))], 'left siblings': [], 'auto preterminal span': (0, 1), 'span': (0, 1), 'parent': 'TURN', 'label': 'SU', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU okay)
		[01;36m(NX[00m
			(SU
				(DM
					(ITJ tschus)))[01;36m)[00m))
Step:Unary
{'subtrees': ['SU'], 'family': ['SU', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ',), 'right siblings': [], 'left siblings': [(SU (DM (ITJ okay)))], 'auto preterminal span': (1, 2), 'span': (1, 2), 'parent': 'TURN', 'label': 'NX', 'classified_type': 'Unary', 'type': 'add'}
(TOP okay tschus)

Sentence 151:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Clause Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(SIMPX das ware das hotel cristal in hannover)
			[01;36m(SU[00m
				(SIMPX
					(VF da)
					(LK kostet)
					(MF das einzelzimmer allerdings zweihundert achtzehn dmark))[01;36m)[00m[01;31m)[00m))
Step:Clause Attachment
{'new_parent': 'TURN', 'new_family': ['SIMPX', 'SU'], 'mover info': [('SIMPX', (0, 7))], 'old_family': ['SIMPX', 'SIMPX'], 'start left siblings': [], 'auto preterminals': ('PDS', 'VAFIN', 'ART', 'NN', 'NE', 'APPR', 'NE', 'ADV', 'VVFIN', 'ART', 'NN', 'ADV', 'CARD', 'CARD', 'NN'), 'start right siblings': ['SIMPX'], 'end left siblings': [], 'auto preterminal span': (0, 15), 'movers': ['SIMPX'], 'old_parent': 'SU', 'end right siblings': ['SU'], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP das ware das hotel cristal in hannover da kostet das einzelzimmer allerdings zweihundert achtzehn dmark)

Sentence 152:
0 Initial errors
0 on fringe, 0 iterations

Sentence 153:
0 Initial errors
0 on fringe, 0 iterations

Sentence 154:
0 Initial errors
0 on fringe, 0 iterations

Sentence 155:
4 Initial errors
0 on fringe, 1 iterations
4 Error:NP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;31m(PX[00m
				[01;36m(SU[00m
					[01;36m(PX[00m
						(PX wann)
						(ADVX denn)[01;36m)[00m[01;36m)[00m
				(NX donnerstag)[01;31m)[00m[01;31m)[00m))
Step:NP Attachment
{'new_parent': 'TURN', 'new_family': ['SU', 'NX'], 'mover info': [('NX', (2, 3))], 'old_family': ['PX', 'ADVX', 'NX'], 'start left siblings': ['PX', 'ADVX'], 'auto preterminals': ('PWAV', 'ADV', 'NN'), 'start right siblings': [], 'end left siblings': ['SU'], 'auto preterminal span': (0, 3), 'movers': ['NX'], 'old_parent': 'PX', 'POS confusion': ('NN', 'NN'), 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP wann denn donnerstag)

Sentence 156:
0 Initial errors
0 on fringe, 0 iterations

Sentence 157:
3 Initial errors
0 on fringe, 2 iterations
2 Error:Modifier Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP [01;33m(SIMPX[00m
	(TURN
		(SU
			[01;31m(SIMPX[00m
				(VF ice)
				(LK ist)
				(MF ja relativ zugig)
				[01;31m(NF[00m
					(PX ab munchen) [01;33mSIMPX)[00m
					(ADVX dann)[01;31m)[00m[01;31m)[00m)))
Step:Modifier Attachment
{'new_parent': 'SU', 'new_family': ['SIMPX', 'ADVX'], 'mover info': [('ADVX', (7, 8))], 'old_family': ['PX', 'ADVX'], 'start left siblings': ['PX'], 'auto preterminals': ('NE', 'VAFIN', 'ADV', 'ADV', 'ADJD', 'APPR', 'NE', 'ADV'), 'start right siblings': [], 'end left siblings': ['SIMPX'], 'auto preterminal span': (0, 8), 'movers': ['ADVX'], 'old_parent': 'NF', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU
			(SIMPX
				(VF ice)
				(LK ist)
				(MF ja relativ zugig)
				[01;31m(NF[00m
					(PX
						(APPR ab)
						(NX munchen))[01;31m)[00m)
			(ADVX dann))))
Step:Unary
{'subtrees': ['PX'], 'family': ['VF', 'LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('NE', 'VAFIN', 'ADV', 'ADV', 'ADJD', 'APPR', 'NE'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (0, 7), 'span': (5, 7), 'left siblings': ['VF', 'LK', 'MF'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ice ist ja relativ zugig ab munchen dann)

Sentence 158:
0 Initial errors
0 on fringe, 0 iterations

Sentence 159:
0 Initial errors
0 on fringe, 0 iterations

Sentence 160:
0 Initial errors
0 on fringe, 0 iterations

Sentence 161:
4 Initial errors
0 on fringe, 2 iterations
3 Error:UNSET move
1 Error:UNSET add
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP [01;33m(SU[00m
	(TURN
		(SU
			(DM also)
			[01;31m(SIMPX[00m
				(LV ein hotel in hannover fur hundert neunzehn mark) [01;33mSU)[00m
				[01;36m(SIMPX[00m
					[01;33m(SU[00m (VF das)
					(LK mus)
					(MF schon eine absteige)
					(VC sein)[01;36m)[00m[01;31m)[00m
			(DM oder)))) [01;33mSU)[00m
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['DM', 'LV', 'SIMPX', 'DM'], 'mover info': [('LV', (1, 9))], 'old_family': ['LV', 'VF', 'LK', 'MF', 'VC'], 'start left siblings': [], 'auto preterminals': ('ADV', 'ART', 'NN', 'APPR', 'NE', 'APPR', 'CARD', 'CARD', 'NN', 'PDS', 'VMFIN', 'ADV', 'ART', 'NN', 'VAINF', 'ITJ'), 'start right siblings': ['VF', 'LK', 'MF', 'VC'], 'end left siblings': ['DM'], 'auto preterminal span': (0, 16), 'adding node already present': False, 'movers': ['LV'], 'old_parent': 'SIMPX', 'added and moved': True, 'end right siblings': ['SIMPX', 'DM'], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'SU'}
(TOP
	(TURN
		(SU
			(SU also ein hotel in hannover fur hundert neunzehn mark)
			[01;36m(SU[00m
				(SIMPX das mus schon eine absteige sein)
				(DM oder)[01;36m)[00m)))
Step:UNSET add
{'subtrees': ['SIMPX', 'DM'], 'family': ['SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VMFIN', 'ADV', 'ART', 'NN', 'VAINF', 'ITJ'), 'right siblings': [], 'left siblings': [(SU (DM (ADVX (ADV also))) (LV (NX (NX (NX (ART ein) (NN hotel)) (PX (APPR in) (NX (NE hannover)))) (PX (APPR fur) (NX (ADJX (CARD hundert) (CARD neunzehn)) (NN mark))))))], 'auto preterminal span': (9, 16), 'span': (9, 16), 'parent': 'SU', 'label': 'SU', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP also ein hotel in hannover fur hundert neunzehn mark das mus schon eine absteige sein oder)

Sentence 162:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			[01;31m(DM[00m
				(ADVX immer)
				(ADVX doch)[01;31m)[00m
			(DM oder))))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'ADVX'], 'family': ['DM', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'ITJ'), 'right siblings': ['DM'], 'parent': 'SU', 'auto preterminal span': (0, 3), 'span': (0, 2), 'left siblings': [], 'label': 'DM', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP immer doch oder)

Sentence 163:
2 Initial errors
0 on fringe, 2 iterations
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(PX vor allem)
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(PX
						(APPR in)
						(NX munchen))[01;31m)[00m
				(LK haben)
				(MF wir eh alles)[01;31m)[00m)))
Step:Unary
{'subtrees': ['PX'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'NE', 'VAFIN', 'PPER', 'ADV', 'PIS'), 'right siblings': ['LK', 'MF'], 'parent': 'SIMPX', 'auto preterminal span': (2, 8), 'span': (2, 4), 'left siblings': [], 'label': 'VF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(PX vor allem)
			[01;31m(SIMPX[00m
				(PX in munchen)
				(LK haben)
				(MF wir eh alles)[01;31m)[00m)))
Step:UNSET remove
{'subtrees': ['PX', 'LK', 'MF'], 'family': ['PX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'PIS', 'APPR', 'NE', 'VAFIN', 'PPER', 'ADV', 'PIS'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (0, 8), 'span': (2, 8), 'left siblings': ['PX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP vor allem in munchen haben wir eh alles)

Sentence 164:
0 Initial errors
0 on fringe, 0 iterations

Sentence 165:
0 Initial errors
0 on fringe, 0 iterations

Sentence 166:
0 Initial errors
0 on fringe, 0 iterations

Sentence 167:
0 Initial errors
0 on fringe, 0 iterations

Sentence 168:
0 Initial errors
0 on fringe, 0 iterations

Sentence 169:
0 Initial errors
0 on fringe, 0 iterations

Sentence 170:
0 Initial errors
0 on fringe, 0 iterations

Sentence 171:
0 Initial errors
0 on fringe, 0 iterations

Sentence 172:
14 Initial errors
0 on fringe, 11 iterations
2 Error:Different label
2 Error:Single Word Phrase
2 Error:Modifier Attachment
1 Error:Single Word Phrase
1 Error:Unary
1 Error:Modifier Attachment
1 Error:Clause Attachment
1 Error:Unary
1 Error:Modifier Attachment
1 Error:UNSET add
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;31m(P[00m
				(SIMPX konnen wir ruhig machen)
				(KON denn)
				(SIMPX
					[01;31m(VF[00m
						[01;31m(SIMPX[00m
							[01;36m(SIMPX[00m
								(C bis)
								[01;31m(MF[00m
									(NX du)
									(ADVX immer)
									(PX
										(PX am flughafen)
										[01;36m(VXINF[00m
											[01;36m(VC[00m
												(PROP drausen)[01;36m)[00m[01;36m)[00m)[01;31m)[00m[01;36m)[00m
							[01;36m(VF[00m [01;36m(ADVX[00m [01;31m(VC[00m [01;33m(SIMPX[00m
								[01;31m(VXFIN[00m
									(VAFIN bist)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
					(LK ist)
					(MF
						(ADVX schon)
						[01;36m(NX[00m
							(NX die erste stunde)
							(ADVX vorbei)[01;36m)[00m))[01;31m)[00m [01;33mSIMPX)[00m
			(SIMPX und mit dem ice ist es bequem)[01;31m)[00m))
Step:Different label
{'family': ['C', 'MF', 'ADVX'], 'auto preterminal span': (11, 12), 'span': (11, 12), 'subtrees': ['VXFIN'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('VAFIN',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('VC', 'ADVX')}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;31m(P[00m
				(SIMPX konnen wir ruhig machen)
				(KON denn)
				(SIMPX
					[01;31m(VF[00m
						[01;31m(SIMPX[00m
							[01;36m(SIMPX[00m
								(C bis)
								[01;31m(MF[00m
									(NX du)
									(ADVX immer)
									(PX
										(PX am flughafen)
										[01;36m(VXINF[00m
											[01;36m(VC[00m
												(PROP drausen)[01;36m)[00m[01;36m)[00m)[01;31m)[00m[01;36m)[00m
							[01;36m(VF[00m
								(ADVX [01;33m(SIMPX[00m
									[01;31m(VXFIN[00m
										(VAFIN bist)[01;31m)[00m)[01;36m)[00m[01;31m)[00m[01;31m)[00m
					(LK ist)
					(MF
						(ADVX schon)
						[01;36m(NX[00m
							(NX die erste stunde)
							(ADVX vorbei)[01;36m)[00m))[01;31m)[00m [01;33mSIMPX)[00m
			(SIMPX und mit dem ice ist es bequem)[01;31m)[00m))
Step:Single Word Phrase
{'family': ['VF'], 'auto preterminal span': (11, 12), 'span': (11, 12), 'subtrees': ['VAFIN'], 'parent': 'ADVX', 'over_word': True, 'auto preterminals': ('VAFIN',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VXFIN', 'VF')}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;31m(P[00m
				(SIMPX konnen wir ruhig machen)
				(KON denn)
				(SIMPX
					[01;31m(VF[00m
						[01;31m(SIMPX[00m
							[01;36m(SIMPX[00m
								(C bis)
								[01;31m(MF[00m
									(NX du)
									(ADVX immer)
									(PX
										(PX am flughafen)
										[01;36m(VXINF[00m
											[01;36m(VC[00m
												(PROP drausen)[01;36m)[00m[01;36m)[00m)[01;31m)[00m[01;36m)[00m
							[01;33m(SIMPX[00m (ADVX bist)[01;31m)[00m[01;31m)[00m
					(LK ist)
					(MF
						(ADVX schon)
						[01;36m(NX[00m
							(NX die erste stunde)
							(ADVX vorbei)[01;36m)[00m))[01;31m)[00m [01;33mSIMPX)[00m
			(SIMPX und mit dem ice ist es bequem)[01;31m)[00m))
Step:Modifier Attachment
{'new_parent': 'VF', 'new_family': ['SIMPX', 'ADVX'], 'mover info': [('ADVX', (11, 12))], 'old_family': ['C', 'MF', 'ADVX'], 'start left siblings': ['C', 'MF'], 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'PROP', 'VAFIN'), 'start right siblings': [], 'end left siblings': ['SIMPX'], 'auto preterminal span': (5, 12), 'movers': ['ADVX'], 'old_parent': 'SIMPX', 'POS confusion': ('VAFIN', 'VAFIN'), 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;31m(P[00m
				(SIMPX konnen wir ruhig machen)
				(KON denn)
				(SIMPX
					[01;31m(VF[00m
						(SIMPX
							(C bis)
							[01;31m(MF[00m
								(NX du)
								(ADVX immer)
								(PX
									(PX am flughafen)
									[01;36m(VXINF[00m
										[01;36m(VC[00m
											(PROP drausen)[01;36m)[00m[01;36m)[00m)[01;31m)[00m)
						[01;33m(SIMPX[00m (ADVX bist)[01;31m)[00m
					(LK ist)
					(MF
						(ADVX schon)
						[01;36m(NX[00m
							(NX die erste stunde)
							(ADVX vorbei)[01;36m)[00m))[01;31m)[00m [01;33mSIMPX)[00m
			(SIMPX und mit dem ice ist es bequem)[01;31m)[00m))
Step:Single Word Phrase
{'subtrees': ['PROP'], 'family': ['PX', 'VC'], 'over_word': True, 'over words': True, 'auto preterminals': ('PROP',), 'right siblings': [], 'left siblings': [(PX (APPRART am) (NX (NN flughafen)))], 'auto preterminal span': (10, 11), 'span': (10, 11), 'parent': 'PX', 'label': 'VC', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;31m(P[00m
				(SIMPX konnen wir ruhig machen)
				(KON denn)
				(SIMPX
					[01;31m(VF[00m
						(SIMPX
							(C bis)
							[01;31m(MF[00m
								(NX du)
								(ADVX immer)
								(PX
									(PX am flughafen)
									[01;36m(VXINF[00m
										(VC
											(PROP drausen))[01;36m)[00m)[01;31m)[00m)
						[01;33m(SIMPX[00m (ADVX bist)[01;31m)[00m
					(LK ist)
					(MF
						(ADVX schon)
						[01;36m(NX[00m
							(NX die erste stunde)
							(ADVX vorbei)[01;36m)[00m))[01;31m)[00m [01;33mSIMPX)[00m
			(SIMPX und mit dem ice ist es bequem)[01;31m)[00m))
Step:Unary
{'subtrees': ['VC'], 'family': ['PX', 'VXINF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PROP',), 'right siblings': [], 'left siblings': [(PX (APPRART am) (NX (NN flughafen)))], 'auto preterminal span': (10, 11), 'span': (10, 11), 'parent': 'PX', 'label': 'VXINF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;31m(P[00m
				(SIMPX konnen wir ruhig machen)
				(KON denn)
				(SIMPX
					[01;31m(VF[00m
						(SIMPX
							(C bis)
							[01;31m(MF[00m
								(NX du)
								(ADVX immer)
								(PX am flughafen drausen)[01;31m)[00m)
						[01;33m(SIMPX[00m (ADVX bist)[01;31m)[00m
					(LK ist)
					(MF
						(ADVX schon)
						[01;36m(NX[00m
							(NX die erste stunde)
							(ADVX vorbei)[01;36m)[00m))[01;31m)[00m [01;33mSIMPX)[00m
			(SIMPX und mit dem ice ist es bequem)[01;31m)[00m))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADVX'], 'family': ['ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'ADJA', 'NN', 'ADV'), 'right siblings': [], 'left siblings': [(ADVX (ADV schon))], 'auto preterminal span': (14, 18), 'span': (14, 18), 'parent': 'MF', 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;31m(P[00m
				(SIMPX konnen wir ruhig machen)
				(KON denn)
				(SIMPX
					[01;31m(VF[00m
						(SIMPX
							(C bis)
							[01;31m(MF[00m
								(NX du)
								(ADVX immer)
								(PX am flughafen drausen)[01;31m)[00m)
						[01;33m(SIMPX[00m (ADVX bist)[01;31m)[00m
					(LK ist)
					(MF schon die erste stunde vorbei))[01;31m)[00m [01;33mSIMPX)[00m
			(SIMPX und mit dem ice ist es bequem)[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'KON', 'SIMPX'], 'family': ['P', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VMFIN', 'PPER', 'ADV', 'VVINF', 'KON', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'PROP', 'VAFIN', 'VAFIN', 'ADV', 'ART', 'ADJA', 'NN', 'ADV', 'KON', 'APPR', 'ART', 'NE', 'VAFIN', 'PPER', 'ADJD'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 25), 'span': (0, 18), 'left siblings': [], 'label': 'P', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		[01;31m(SU[00m
			(SIMPX konnen wir ruhig machen)
			(KON denn)
			(SIMPX
				[01;31m(VF[00m
					(SIMPX
						(C bis)
						[01;31m(MF[00m
							(NX du)
							(ADVX immer)
							(PX am flughafen drausen)[01;31m)[00m)
					[01;33m(SIMPX[00m (ADVX bist)[01;31m)[00m
				(LK ist)
				(MF schon die erste stunde vorbei)) [01;33mSIMPX)[00m
			(SIMPX und mit dem ice ist es bequem)[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX', 'KON', 'SIMPX', 'SIMPX'], 'family': ['SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('VMFIN', 'PPER', 'ADV', 'VVINF', 'KON', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'PROP', 'VAFIN', 'VAFIN', 'ADV', 'ART', 'ADJA', 'NN', 'ADV', 'KON', 'APPR', 'ART', 'NE', 'VAFIN', 'PPER', 'ADJD'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 25), 'span': (0, 25), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX konnen wir ruhig machen)
		(KON denn)
		(SIMPX
			[01;31m(VF[00m
				(SIMPX
					(C bis)
					[01;31m(MF[00m
						(NX du)
						(ADVX immer)
						(PX am flughafen drausen)[01;31m)[00m)
				[01;33m(SIMPX[00m (ADVX bist)[01;31m)[00m
			(LK ist)
			(MF schon die erste stunde vorbei)) [01;33mSIMPX)[00m
		(SIMPX und mit dem ice ist es bequem)))
Step:Modifier Attachment
{'subtrees': ['SIMPX', 'ADVX'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'PROP', 'VAFIN', 'VAFIN', 'ADV', 'ART', 'ADJA', 'NN', 'ADV'), 'right siblings': ['LK', 'MF'], 'parent': 'SIMPX', 'auto preterminal span': (5, 18), 'span': (5, 12), 'left siblings': [], 'label': 'VF', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX konnen wir ruhig machen)
		(KON denn)
		(SIMPX
			(SIMPX
				(C bis)
				[01;31m(MF[00m
					(NX du)
					(ADVX immer)
					(PX am flughafen drausen)[01;31m)[00m)
			[01;36m(SIMPX[00m
				(ADVX bist)
				(LK ist)
				(MF schon die erste stunde vorbei)[01;36m)[00m)
		(SIMPX und mit dem ice ist es bequem)))
Step:UNSET add
{'subtrees': ['ADVX', 'LK', 'MF'], 'family': ['SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'VAFIN', 'ADV', 'ART', 'ADJA', 'NN', 'ADV'), 'right siblings': [], 'left siblings': [(SIMPX (C (KOUS bis)) (MF (NX (PPER du)) (ADVX (ADV immer)) (PX (PX (APPRART am) (NX (NN flughafen))) (VXINF (VC (PROP drausen))))))], 'auto preterminal span': (11, 18), 'span': (11, 18), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SIMPX konnen wir ruhig machen)
		(KON denn)
		(SIMPX
			(SIMPX
				(C bis)
				[01;31m(MF[00m
					(NX du)
					(ADVX immer)
					(PX am flughafen drausen)[01;31m)[00m)
			(SIMPX bist ist schon die erste stunde vorbei))
		(SIMPX und mit dem ice ist es bequem)))
Step:PP Attachment
{'subtrees': ['NX', 'ADVX', 'PX'], 'family': ['C', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'PROP'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (5, 11), 'span': (6, 11), 'left siblings': ['C'], 'label': 'MF', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP konnen wir ruhig machen denn bis du immer am flughafen drausen bist ist schon die erste stunde vorbei und mit dem ice ist es bequem)

Sentence 173:
12 Initial errors
0 on fringe, 8 iterations
2 Error:Different label
2 Error:Single Word Phrase
2 Error:Different label
2 Error:Clause Attachment
1 Error:Clause Attachment
1 Error:UNSET remove
1 Error:Modifier Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP [01;33m(DM (ADVX[00m
	(TURN
		[01;31m(SU[00m
			[01;36m(SU[00m
				(DM also)
				[01;31m(SIMPX[00m
					[01;36m(DM[00m [01;31m(VF[00m
						(ADVX
							(ADV also))[01;31m)[00m [01;33mADVX) DM)[00m[01;36m)[00m
					(LK wurden)
					(MF wir)
					(VC sagen)
					(NF
						(SIMPX
							(VF wir)
							(LK konnten)
							[01;36m(NX[00m
								(MF
									[01;31m(ADJX[00m
										[01;36m(ADVX[00m [01;31m(ADJX[00m
											(ADJD stundlich)[01;31m)[00m[01;36m)[00m
										(NX vier uhr dreiundvierzig)[01;31m)[00m)[01;36m)[00m))[01;31m)[00m[01;36m)[00m
			[01;36m(SU[00m
				(SIMPX
					(VF ich)
					(LK wurde)
					(VC sagen)
					(NF acht uhr dreiundvierzig))[01;36m)[00m[01;31m)[00m))
Step:Different label
{'family': ['DM', 'LK', 'MF', 'VC', 'NF'], 'auto preterminal span': (1, 2), 'span': (1, 2), 'subtrees': ['ADVX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('ADV',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('VF', 'DM')}
(TOP [01;33m(DM (ADVX[00m
	(TURN
		[01;31m(SU[00m
			[01;36m(SU[00m
				(DM also)
				[01;31m(SIMPX[00m
					(DM also) [01;33mADVX) DM)[00m
					(LK wurden)
					(MF wir)
					(VC sagen)
					(NF
						(SIMPX
							(VF wir)
							(LK konnten)
							[01;36m(NX[00m
								(MF
									[01;31m(ADJX[00m
										[01;36m(ADVX[00m [01;31m(ADJX[00m
											(ADJD stundlich)[01;31m)[00m[01;36m)[00m
										(NX vier uhr dreiundvierzig)[01;31m)[00m)[01;36m)[00m))[01;31m)[00m[01;36m)[00m
			[01;36m(SU[00m
				(SIMPX
					(VF ich)
					(LK wurde)
					(VC sagen)
					(NF acht uhr dreiundvierzig))[01;36m)[00m[01;31m)[00m))
Step:Single Word Phrase
{'family': ['ADVX', 'NX'], 'auto preterminal span': (7, 8), 'span': (7, 8), 'subtrees': ['ADJD'], 'parent': 'ADJX', 'over_word': True, 'auto preterminals': ('ADJD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'ADVX')}
(TOP [01;33m(DM (ADVX[00m
	(TURN
		[01;31m(SU[00m
			[01;36m(SU[00m
				(DM also)
				[01;31m(SIMPX[00m
					(DM also) [01;33mADVX) DM)[00m
					(LK wurden)
					(MF wir)
					(VC sagen)
					(NF
						(SIMPX
							(VF wir)
							(LK konnten)
							[01;36m(NX[00m
								(MF
									[01;31m(ADJX[00m
										(ADVX stundlich)
										(NX vier uhr dreiundvierzig)[01;31m)[00m)[01;36m)[00m))[01;31m)[00m[01;36m)[00m
			[01;36m(SU[00m
				(SIMPX
					(VF ich)
					(LK wurde)
					(VC sagen)
					(NF acht uhr dreiundvierzig))[01;36m)[00m[01;31m)[00m))
Step:Different label
{'family': ['NX'], 'auto preterminal span': (7, 11), 'span': (7, 11), 'subtrees': ['ADVX', 'NX'], 'parent': 'MF', 'over_word': False, 'auto preterminals': ('ADJD', 'CARD', 'NN', 'CARD'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('ADJX', 'NX')}
(TOP [01;33m(DM (ADVX[00m
	(TURN
		[01;31m(SU[00m
			[01;36m(SU[00m
				(DM also)
				[01;31m(SIMPX[00m
					(DM also) [01;33mADVX) DM)[00m
					(LK wurden)
					(MF wir)
					(VC sagen)
					(NF wir konnten stundlich vier uhr dreiundvierzig)[01;31m)[00m[01;36m)[00m
			[01;36m(SU[00m
				(SIMPX
					(VF ich)
					(LK wurde)
					(VC sagen)
					(NF acht uhr dreiundvierzig))[01;36m)[00m[01;31m)[00m))
Step:Clause Attachment
{'new_parent': 'TURN', 'new_family': ['DM', 'SIMPX', 'SU'], 'mover info': [('DM', (0, 1)), ('SIMPX', (1, 11))], 'old_family': ['DM', 'SIMPX', 'SIMPX'], 'start left siblings': [], 'auto preterminals': ('ADV', 'ADV', 'VAFIN', 'PPER', 'VVINF', 'PPER', 'VMFIN', 'ADJD', 'CARD', 'NN', 'CARD', 'PPER', 'VAFIN', 'VVINF', 'CARD', 'NN', 'CARD'), 'start right siblings': ['SIMPX'], 'end left siblings': [], 'auto preterminal span': (0, 17), 'movers': ['DM', 'SIMPX'], 'old_parent': 'SU', 'end right siblings': ['SU'], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP [01;33m(DM (ADVX[00m
	(TURN
		[01;36m(SU[00m
			(DM also)
			[01;31m(SIMPX[00m
				(DM also) [01;33mADVX) DM)[00m
				(LK wurden)
				(MF wir)
				(VC sagen)
				(NF wir konnten stundlich vier uhr dreiundvierzig)[01;31m)[00m[01;36m)[00m
		(SU ich wurde sagen acht uhr dreiundvierzig)))
Step:Clause Attachment
{'subtrees': ['DM', 'SIMPX'], 'family': ['SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'VAFIN', 'PPER', 'VVINF', 'PPER', 'VMFIN', 'ADJD', 'CARD', 'NN', 'CARD'), 'right siblings': [(SU (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VAFIN wurde))) (VC (VXINF (VVINF sagen))) (NF (NX (NX (ADJX (CARD acht)) (NN uhr)) (ADJX (CARD dreiundvierzig))))))], 'left siblings': [], 'auto preterminal span': (0, 11), 'span': (0, 11), 'parent': 'TURN', 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP [01;33m(DM (ADVX[00m
	(TURN
		(SU
			(DM also)
			[01;31m(SIMPX[00m
				(DM also) [01;33mADVX) DM)[00m
				(LK wurden)
				(MF wir)
				(VC sagen)
				(NF wir konnten stundlich vier uhr dreiundvierzig)[01;31m)[00m)
		(SU ich wurde sagen acht uhr dreiundvierzig)))
Step:UNSET remove
{'subtrees': ['DM', 'LK', 'MF', 'VC', 'NF'], 'family': ['DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'VAFIN', 'PPER', 'VVINF', 'PPER', 'VMFIN', 'ADJD', 'CARD', 'NN', 'CARD'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (0, 11), 'span': (1, 11), 'left siblings': ['DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU
			[01;36m(DM[00m
				[01;36m(ADVX[00m
					(DM also)
					(DM also)[01;36m)[00m[01;36m)[00m
			(LK wurden)
			(MF wir)
			(VC sagen)
			(NF wir konnten stundlich vier uhr dreiundvierzig))
		(SU ich wurde sagen acht uhr dreiundvierzig)))
Step:Modifier Attachment
{'subtrees': ['DM', 'DM'], 'family': ['ADVX', 'LK', 'MF', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV'), 'right siblings': [(LK (VXFIN (VAFIN wurden))), (MF (NX (PPER wir))), (VC (VXINF (VVINF sagen))), (NF (SIMPX (VF (NX (PPER wir))) (LK (VXFIN (VMFIN konnten))) (MF (NX (ADVX (ADJD stundlich)) (NX (NX (ADJX (CARD vier)) (NN uhr)) (ADJX (CARD dreiundvierzig)))))))], 'left siblings': [], 'auto preterminal span': (0, 2), 'span': (0, 2), 'parent': 'SU', 'label': 'ADVX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU
			[01;36m(DM[00m
				(ADVX
					(DM also)
					(DM also))[01;36m)[00m
			(LK wurden)
			(MF wir)
			(VC sagen)
			(NF wir konnten stundlich vier uhr dreiundvierzig))
		(SU ich wurde sagen acht uhr dreiundvierzig)))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['DM', 'LK', 'MF', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV'), 'right siblings': [(LK (VXFIN (VAFIN wurden))), (MF (NX (PPER wir))), (VC (VXINF (VVINF sagen))), (NF (SIMPX (VF (NX (PPER wir))) (LK (VXFIN (VMFIN konnten))) (MF (NX (ADVX (ADJD stundlich)) (NX (NX (ADJX (CARD vier)) (NN uhr)) (ADJX (CARD dreiundvierzig)))))))], 'left siblings': [], 'auto preterminal span': (0, 2), 'span': (0, 2), 'parent': 'SU', 'label': 'DM', 'classified_type': 'Unary', 'type': 'add'}
(TOP also also wurden wir sagen wir konnten stundlich vier uhr dreiundvierzig ich wurde sagen acht uhr dreiundvierzig)

Sentence 174:
0 Initial errors
0 on fringe, 0 iterations

Sentence 175:
5 Initial errors
0 on fringe, 4 iterations
2 Error:Clause Attachment
1 Error:Unary
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;36m(SU[00m
				(SIMPX
					(LK kommen)
					(MF wir am fruhen nachmittag)
					(VC an))[01;36m)[00m
			[01;36m(SU[00m
				[01;36m(SIMPX[00m
					(SIMPX haben den ganzen nachmittag zeit)
					[01;36m(SU[00m
						(SIMPX
							(LK konnen)
							(MF dann abends noch was)
							(VC unternehmen))[01;36m)[00m[01;36m)[00m[01;36m)[00m[01;31m)[00m))
Step:Clause Attachment
{'new_parent': 'TURN', 'new_family': ['SIMPX', 'SU'], 'mover info': [('SIMPX', (0, 6))], 'old_family': ['SIMPX', 'SIMPX', 'SIMPX'], 'start left siblings': [], 'auto preterminals': ('VVFIN', 'PPER', 'APPRART', 'ADJA', 'NN', 'PTKVZ', 'VAFIN', 'ART', 'ADJA', 'NN', 'NN', 'VMFIN', 'ADV', 'ADV', 'ADV', 'PIS', 'VVINF'), 'start right siblings': ['SIMPX', 'SIMPX'], 'end left siblings': [], 'auto preterminal span': (0, 17), 'movers': ['SIMPX'], 'old_parent': 'SU', 'end right siblings': ['SU'], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;36m(SU[00m
			(SIMPX
				(LK kommen)
				(MF wir am fruhen nachmittag)
				(VC an))[01;36m)[00m
		[01;36m(SIMPX[00m
			(SU
				(SIMPX haben den ganzen nachmittag zeit)
				[01;36m(SU[00m
					(SIMPX
						(LK konnen)
						(MF dann abends noch was)
						(VC unternehmen))[01;36m)[00m)[01;36m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'APPRART', 'ADJA', 'NN', 'PTKVZ'), 'right siblings': [(SU (SIMPX (LK (VXFIN (VAFIN haben))) (MF (NX (ART den) (ADJX (ADJA ganzen)) (NN nachmittag)) (NX (NN zeit)))) (SIMPX (LK (VXFIN (VMFIN konnen))) (MF (ADVX (ADV dann)) (ADVX (ADV abends)) (ADVX (ADV noch)) (NX (PIS was))) (VC (VXINF (VVINF unternehmen)))))], 'left siblings': [], 'auto preterminal span': (0, 6), 'span': (0, 6), 'parent': 'TURN', 'label': 'SU', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU kommen wir am fruhen nachmittag an)
		[01;36m(SIMPX[00m
			(SU
				(SIMPX haben den ganzen nachmittag zeit)
				[01;36m(SU[00m
					(SIMPX
						(LK konnen)
						(MF dann abends noch was)
						(VC unternehmen))[01;36m)[00m)[01;36m)[00m))
Step:Unary
{'subtrees': ['SU'], 'family': ['SU', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'ART', 'ADJA', 'NN', 'NN', 'VMFIN', 'ADV', 'ADV', 'ADV', 'PIS', 'VVINF'), 'right siblings': [], 'left siblings': [(SU (SIMPX (LK (VXFIN (VVFIN kommen))) (MF (NX (PPER wir)) (PX (APPRART am) (NX (ADJX (ADJA fruhen)) (NN nachmittag)))) (VC (PTKVZ an))))], 'auto preterminal span': (6, 17), 'span': (6, 17), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU kommen wir am fruhen nachmittag an)
		(SIMPX
			(SU
				(SIMPX haben den ganzen nachmittag zeit)
				[01;36m(SU[00m
					(SIMPX
						(LK konnen)
						(MF dann abends noch was)
						(VC unternehmen))[01;36m)[00m))))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('VMFIN', 'ADV', 'ADV', 'ADV', 'PIS', 'VVINF'), 'right siblings': [], 'left siblings': [(SIMPX (LK (VXFIN (VAFIN haben))) (MF (NX (ART den) (ADJX (ADJA ganzen)) (NN nachmittag)) (NX (NN zeit))))], 'auto preterminal span': (11, 17), 'span': (11, 17), 'parent': 'SU', 'label': 'SU', 'classified_type': 'Unary', 'type': 'add'}
(TOP kommen wir am fruhen nachmittag an haben den ganzen nachmittag zeit konnen dann abends noch was unternehmen)

Sentence 176:
0 Initial errors
0 on fringe, 0 iterations

Sentence 177:
6 Initial errors
0 on fringe, 3 iterations
4 Error:UNSET move
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM ja)
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(VF was)
				(LK sind)
				[01;31m(MF[00m [01;33m(MF[00m
					(ADVX
						(ADV denn))[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(NX
						(PWS was))[01;31m)[00m [01;33mMF) SIMPX)[00m
				(LK sind)
				(MF denn die namen)[01;31m)[00m)))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['ADVX', 'VF'], 'mover info': [('VF', (4, 5))], 'old_family': ['VF', 'LK', 'MF'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'PWS', 'VAFIN', 'ADV', 'PWS', 'VAFIN', 'ADV', 'ART', 'NN'), 'start right siblings': ['LK', 'MF'], 'end left siblings': ['ADVX'], 'auto preterminal span': (0, 9), 'movers': ['VF'], 'old_parent': 'SIMPX', 'POS confusion': ('PWS', 'PWS'), 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX
				(VF was)
				(LK sind)
				(MF
					(ADVX denn)
					[01;31m(VF[00m
						(NX
							(PWS was))[01;31m)[00m))
			[01;31m(SIMPX[00m
				(LK sind)
				(MF denn die namen)[01;31m)[00m)))
Step:Unary
{'subtrees': ['NX'], 'family': ['ADVX', 'VF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PWS'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (3, 5), 'span': (4, 5), 'left siblings': ['ADVX'], 'label': 'VF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX was sind denn was)
			[01;31m(SIMPX[00m
				(LK sind)
				(MF denn die namen)[01;31m)[00m)))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['DM', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PWS', 'VAFIN', 'ADV', 'PWS', 'VAFIN', 'ADV', 'ART', 'NN'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (0, 9), 'span': (5, 9), 'left siblings': ['DM', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ja was sind denn was sind denn die namen)

Sentence 178:
4 Initial errors
0 on fringe, 3 iterations
2 Error:Single Word Phrase
1 Error:UNSET add
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(NX
				[01;36m(NX[00m
					(NX hotel royal)
					[01;36m(VC[00m [01;36m(VXINF[00m [01;31m(NX[00m
						(NE schloshotel)[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;36m)[00m
				(KON und)
				(NX hotel amgeorgengarten)))))
Step:Single Word Phrase
{'family': ['NX', 'VXINF', 'KON', 'NX'], 'auto preterminal span': (2, 3), 'span': (2, 3), 'subtrees': ['NE'], 'parent': 'NX', 'over_word': True, 'auto preterminals': ('NE',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('NX', 'VXINF')}
(TOP
	(TURN
		(SU
			(NX
				[01;36m(NX[00m
					(NX hotel royal)
					[01;36m(VC[00m
						(VXINF
							(NE schloshotel))[01;36m)[00m[01;36m)[00m
				(KON und)
				(NX hotel amgeorgengarten)))))
Step:UNSET add
{'subtrees': ['NX', 'VXINF'], 'family': ['NX', 'KON', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'NE', 'NE'), 'right siblings': [(KON und), (NX (NX (NN hotel)) (NX (NE amgeorgengarten)))], 'left siblings': [], 'auto preterminal span': (0, 3), 'span': (0, 3), 'parent': 'NX', 'label': 'NX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU
			(NX
				(NX
					(NX hotel royal)
					[01;36m(VC[00m
						(VXINF
							(NE schloshotel))[01;36m)[00m)
				(KON und)
				(NX hotel amgeorgengarten)))))
Step:Unary
{'subtrees': ['VXINF'], 'family': ['NX', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('NE',), 'right siblings': [], 'left siblings': [(NX (NX (NN hotel)) (NX (NE royal)))], 'auto preterminal span': (2, 3), 'span': (2, 3), 'parent': 'NX', 'label': 'VC', 'classified_type': 'Unary', 'type': 'add'}
(TOP hotel royal schloshotel und hotel amgeorgengarten)

Sentence 179:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(DM[00m
	(TOP
		(TURN
			(SU
				(NX
					(NE schloshotel)))))[01;36m)[00m
Step:Unary
{'subtrees': ['TURN'], 'family': ['DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('NE',), 'right siblings': [], 'left siblings': [], 'auto preterminal span': (0, 1), 'span': (0, 1), 'parent': 'TOP', 'label': 'DM', 'classified_type': 'Unary', 'type': 'add'}
(TOP schloshotel)

Sentence 180:
0 Initial errors
0 on fringe, 0 iterations

Sentence 181:
0 Initial errors
0 on fringe, 0 iterations

Sentence 182:
9 Initial errors
0 on fringe, 7 iterations
2 Error:UNSET move
2 Error:Clause Attachment
1 Error:UNSET add
1 Error:Unary
1 Error:Modifier Attachment
1 Error:UNSET remove
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(SIMPX wir konnten mal kucken ob irgendwas im theater lauft)
			(SIMPX
				(KOORD aber)
				(VF eigentlich)
				(LK ist)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX das)
					(ADVX doch)[01;31m)[00m
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						[01;31m(MF[00m
							(NX eulen)
							(PX nach athen)[01;31m)[00m [01;33mMF)[00m
						(VC tragen)[01;31m)[00m
					[01;36m(NF[00m
						(SIMPX
							(C wenn)
							[01;31m(FKOORD[00m
								(MVC wir in hannover ins theater gehen)
								(KON und)
								(MVC
									(MF
										[01;36m(PX[00m
											(PX in munchen)
											(NX alles)[01;36m)[00m
										(PX vor der haustur))
									(VC haben))[01;31m)[00m)[01;36m)[00m[01;31m)[00m)
			(DM oder)[01;31m)[00m))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['MF', 'NX', 'PX'], 'mover info': [('MF', (12, 14))], 'old_family': ['KOORD', 'VF', 'LK', 'MF', 'NF'], 'start left siblings': ['KOORD', 'VF', 'LK'], 'auto preterminals': ('KON', 'ADV', 'VAFIN', 'PDS', 'ADV', 'NN', 'APPR', 'NE', 'VVINF', 'KOUS', 'PPER', 'APPR', 'NE', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPR', 'NE', 'PIS', 'APPR', 'ART', 'NN', 'VAFIN'), 'start right siblings': ['NF'], 'end left siblings': [], 'auto preterminal span': (9, 33), 'movers': ['MF'], 'old_parent': 'SIMPX', 'end right siblings': ['NX', 'PX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			(SIMPX wir konnten mal kucken ob irgendwas im theater lauft)
			(SIMPX
				(KOORD aber)
				(VF eigentlich)
				(LK ist)
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						(MF
							[01;31m(MF[00m
								(NX das)
								(ADVX doch)[01;31m)[00m
							(NX eulen)
							(PX nach athen))
						(VC tragen)[01;31m)[00m
					[01;36m(NF[00m
						(SIMPX
							(C wenn)
							[01;31m(FKOORD[00m
								(MVC wir in hannover ins theater gehen)
								(KON und)
								(MVC
									(MF
										[01;36m(PX[00m
											(PX in munchen)
											(NX alles)[01;36m)[00m
										(PX vor der haustur))
									(VC haben))[01;31m)[00m)[01;36m)[00m[01;31m)[00m)
			(DM oder)[01;31m)[00m))
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['KOORD', 'VF', 'LK', 'SIMPX', 'NF'], 'mover info': [('SIMPX', (12, 18))], 'old_family': ['SIMPX', 'SIMPX'], 'start left siblings': [], 'auto preterminals': ('KON', 'ADV', 'VAFIN', 'PDS', 'ADV', 'NN', 'APPR', 'NE', 'VVINF', 'KOUS', 'PPER', 'APPR', 'NE', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPR', 'NE', 'PIS', 'APPR', 'ART', 'NN', 'VAFIN'), 'start right siblings': ['SIMPX'], 'end left siblings': ['KOORD', 'VF', 'LK'], 'auto preterminal span': (9, 33), 'movers': ['SIMPX'], 'old_parent': 'NF', 'end right siblings': ['NF'], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			(SIMPX wir konnten mal kucken ob irgendwas im theater lauft)
			(SIMPX
				(KOORD aber)
				(VF eigentlich)
				(LK ist)
				[01;31m(SIMPX[00m
					(MF
						[01;31m(MF[00m
							(NX das)
							(ADVX doch)[01;31m)[00m
						(NX eulen)
						(PX nach athen))
					(VC tragen)[01;31m)[00m
				(NF
					(SIMPX
						(C wenn)
						[01;31m(FKOORD[00m
							(MVC wir in hannover ins theater gehen)
							(KON und)
							(MVC
								(MF
									[01;36m(PX[00m
										(PX in munchen)
										(NX alles)[01;36m)[00m
									(PX vor der haustur))
								(VC haben))[01;31m)[00m)))
			(DM oder)[01;31m)[00m))
Step:UNSET add
{'subtrees': ['PX', 'NX'], 'family': ['PX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'NE', 'PIS'), 'right siblings': [(PX (APPR vor) (NX (ART der) (NN haustur)))], 'left siblings': [], 'auto preterminal span': (26, 29), 'span': (26, 29), 'parent': 'MF', 'label': 'PX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(SIMPX wir konnten mal kucken ob irgendwas im theater lauft)
			(SIMPX
				(KOORD aber)
				(VF eigentlich)
				(LK ist)
				[01;31m(SIMPX[00m
					(MF
						[01;31m(MF[00m
							(NX das)
							(ADVX doch)[01;31m)[00m
						(NX eulen)
						(PX nach athen))
					(VC tragen)[01;31m)[00m
				(NF
					(SIMPX
						(C wenn)
						[01;31m(FKOORD[00m
							(MVC wir in hannover ins theater gehen)
							(KON und)
							(MVC in munchen alles vor der haustur haben)[01;31m)[00m)))
			(DM oder)[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX', 'SIMPX', 'DM'], 'family': ['SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VMFIN', 'ADV', 'VVINF', 'KOUS', 'PIS', 'APPRART', 'NN', 'VVFIN', 'KON', 'ADV', 'VAFIN', 'PDS', 'ADV', 'NN', 'APPR', 'NE', 'VVINF', 'KOUS', 'PPER', 'APPR', 'NE', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPR', 'NE', 'PIS', 'APPR', 'ART', 'NN', 'VAFIN', 'ITJ'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 34), 'span': (0, 34), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX wir konnten mal kucken ob irgendwas im theater lauft)
		(SIMPX
			(KOORD aber)
			(VF eigentlich)
			(LK ist)
			[01;31m(SIMPX[00m
				(MF
					[01;31m(MF[00m
						(NX das)
						(ADVX doch)[01;31m)[00m
					(NX eulen)
					(PX nach athen))
				(VC tragen)[01;31m)[00m
			(NF
				(SIMPX
					(C wenn)
					[01;31m(FKOORD[00m
						(MVC wir in hannover ins theater gehen)
						(KON und)
						(MVC in munchen alles vor der haustur haben)[01;31m)[00m)))
		(DM oder)))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADVX'], 'family': ['MF', 'NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'ADV', 'NN', 'APPR', 'NE'), 'right siblings': ['NX', 'PX'], 'parent': 'MF', 'auto preterminal span': (12, 17), 'span': (12, 14), 'left siblings': [], 'label': 'MF', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX wir konnten mal kucken ob irgendwas im theater lauft)
		(SIMPX
			(KOORD aber)
			(VF eigentlich)
			(LK ist)
			[01;31m(SIMPX[00m
				(MF das doch eulen nach athen)
				(VC tragen)[01;31m)[00m
			(NF
				(SIMPX
					(C wenn)
					[01;31m(FKOORD[00m
						(MVC wir in hannover ins theater gehen)
						(KON und)
						(MVC in munchen alles vor der haustur haben)[01;31m)[00m)))
		(DM oder)))
Step:UNSET remove
{'subtrees': ['MF', 'VC'], 'family': ['KOORD', 'VF', 'LK', 'SIMPX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'ADV', 'VAFIN', 'PDS', 'ADV', 'NN', 'APPR', 'NE', 'VVINF', 'KOUS', 'PPER', 'APPR', 'NE', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPR', 'NE', 'PIS', 'APPR', 'ART', 'NN', 'VAFIN'), 'right siblings': ['NF'], 'parent': 'SIMPX', 'auto preterminal span': (9, 33), 'span': (12, 18), 'left siblings': ['KOORD', 'VF', 'LK'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX wir konnten mal kucken ob irgendwas im theater lauft)
		(SIMPX
			(KOORD aber)
			(VF eigentlich)
			(LK ist)
			(MF das doch eulen nach athen)
			(VC tragen)
			(NF
				(SIMPX
					(C wenn)
					[01;31m(FKOORD[00m
						(MVC wir in hannover ins theater gehen)
						(KON und)
						(MVC in munchen alles vor der haustur haben)[01;31m)[00m)))
		(DM oder)))
Step:UNSET remove
{'subtrees': ['MVC', 'KON', 'MVC'], 'family': ['C', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'APPR', 'NE', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPR', 'NE', 'PIS', 'APPR', 'ART', 'NN', 'VAFIN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (18, 33), 'span': (19, 33), 'left siblings': ['C'], 'label': 'FKOORD', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP wir konnten mal kucken ob irgendwas im theater lauft aber eigentlich ist das doch eulen nach athen tragen wenn wir in hannover ins theater gehen und in munchen alles vor der haustur haben oder)

Sentence 183:
0 Initial errors
0 on fringe, 0 iterations

Sentence 184:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Different label
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(ADJX[00m
	(TOP
		(TURN
			(SU
				[01;31m(ADVX[00m
					(ADVX nicht)
					(SIMPX das ich wuste)[01;31m)[00m)))[01;36m)[00m
Step:Different label
{'family': ['ADJX'], 'auto preterminal span': (0, 4), 'span': (0, 4), 'subtrees': ['ADVX', 'SIMPX'], 'parent': 'SU', 'over_word': False, 'auto preterminals': ('PTKNEG', 'KOUS', 'PPER', 'VVFIN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('ADVX', 'ADJX')}
(TOP nicht das ich wuste)

Sentence 185:
4 Initial errors
0 on fringe, 4 iterations
1 Error:Single Word Phrase
1 Error:Single Word Phrase
1 Error:Modifier Attachment
1 Error:UNSET add
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(SIMPX
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				(MF
					(ADVX dann)
					(ADVX eben)
					(NX
						[01;31m(ADJX[00m
							[01;31m(ADJX[00m
								(CARD ein)[01;31m)[00m
							(KON oder)
							[01;33m(NX[00m (ADJX zwei)[01;31m)[00m
						(NN nachte))) [01;33mNX)[00m
				(VC buchen)))))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['KOORD', 'MF', 'VC'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON', 'ADV', 'ADV', 'CARD', 'KON', 'CARD', 'NN', 'VVINF'), 'right siblings': ['MF', 'VC'], 'parent': 'SIMPX', 'auto preterminal span': (0, 8), 'span': (0, 1), 'left siblings': [], 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(SIMPX
				(KON und)
				(MF
					(ADVX dann)
					(ADVX eben)
					(NX
						[01;31m(ADJX[00m
							[01;31m(ADJX[00m
								(CARD ein)[01;31m)[00m
							(KON oder)
							[01;33m(NX[00m (ADJX zwei)[01;31m)[00m
						(NN nachte))) [01;33mNX)[00m
				(VC buchen)))))
Step:Single Word Phrase
{'subtrees': ['CARD'], 'family': ['ADJX', 'KON', 'ADJX'], 'over_word': True, 'over words': True, 'auto preterminals': ('CARD', 'KON', 'CARD'), 'right siblings': ['KON', 'ADJX'], 'parent': 'ADJX', 'auto preterminal span': (3, 6), 'span': (3, 4), 'left siblings': [], 'label': 'ADJX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(SIMPX
				(KON und)
				(MF
					(ADVX dann)
					(ADVX eben)
					(NX
						[01;31m(ADJX[00m
							(CARD ein)
							(KON oder)
							[01;33m(NX[00m (ADJX zwei)[01;31m)[00m
						(NN nachte))) [01;33mNX)[00m
				(VC buchen)))))
Step:Modifier Attachment
{'subtrees': ['CARD', 'KON', 'ADJX'], 'family': ['ADJX', 'NN'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'KON', 'CARD', 'NN'), 'right siblings': ['NN'], 'parent': 'NX', 'auto preterminal span': (3, 7), 'span': (3, 6), 'left siblings': [], 'label': 'ADJX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(SIMPX
				(KON und)
				(MF
					(ADVX dann)
					(ADVX eben)
					(NX
						(CARD ein)
						(KON oder)
						[01;36m(NX[00m
							(ADJX zwei)
							(NN nachte)[01;36m)[00m))
				(VC buchen)))))
Step:UNSET add
{'subtrees': ['ADJX', 'NN'], 'family': ['CARD', 'KON', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'NN'), 'right siblings': [], 'left siblings': [(CARD ein), (KON oder)], 'auto preterminal span': (5, 7), 'span': (5, 7), 'parent': 'NX', 'label': 'NX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP und dann eben ein oder zwei nachte buchen)

Sentence 186:
0 Initial errors
0 on fringe, 0 iterations

Sentence 187:
0 Initial errors
0 on fringe, 0 iterations

Sentence 188:
14 Initial errors
0 on fringe, 11 iterations
3 Error:UNSET move
2 Error:Single Word Phrase
1 Error:UNSET add
1 Error:Unary
1 Error:UNSET remove
1 Error:Unary
1 Error:Unary
1 Error:UNSET remove
1 Error:PP Attachment
1 Error:PP Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM gut)
			(ADVX dann)
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(VF dann)
				(LK schlage)
				(MF ich)
				(VC vor)
				[01;33m(NX (NF[00m (NX mitte)
				(APPR [01;33m(PX (PX[00m bis)
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						[01;31m(VF[00m
							[01;31m(PX[00m
								[01;36m(NX[00m [01;31m(ADVX[00m
									(ADV spatestens)[01;31m)[00m [01;33mPX)[00m[01;36m)[00m
								[01;36m(PX[00m
									(APPR bis)
									(NX mitte nachster woche)[01;36m)[00m[01;31m)[00m[01;31m)[00m [01;33mPX) NF) NX) SIMPX)[00m
						(LK haben)
						(MF wir sie)
						(VC informiert)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			(SIMPX das muste ja dann auch noch reichen wenn wir erst im august)[01;31m)[00m))
Step:UNSET move
{'new_parent': 'PX', 'new_family': ['APPR', 'ADVX', 'APPR', 'NX'], 'mover info': [('APPR', (7, 8))], 'old_family': ['VF', 'LK', 'MF', 'VC', 'NX', 'APPR', 'NF'], 'start left siblings': ['VF', 'LK', 'MF', 'VC', 'NX'], 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'PTKVZ', 'NN', 'APPR', 'ADV', 'APPR', 'NN', 'ADJA', 'NN', 'VAFIN', 'PPER', 'PPER', 'VVPP'), 'start right siblings': ['NF'], 'end left siblings': [], 'auto preterminal span': (2, 17), 'adding node already present': False, 'movers': ['APPR'], 'old_parent': 'SIMPX', 'POS confusion': ('APPR', 'APPR'), 'added and moved': True, 'end right siblings': ['ADVX', 'APPR', 'NX'], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'PX'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM gut)
			(ADVX dann)
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(VF dann)
				(LK schlage)
				(MF ich)
				(VC vor)
				[01;33m(NX (NF[00m (NX mitte)
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						[01;31m(VF[00m
							(PX
								(PX
									(APPR bis)
									[01;36m(NX[00m [01;31m(ADVX[00m
										(ADV spatestens)[01;31m)[00m[01;36m)[00m)
								[01;36m(PX[00m
									(APPR bis)
									(NX mitte nachster woche)[01;36m)[00m)[01;31m)[00m [01;33mNF) NX) SIMPX)[00m
						(LK haben)
						(MF wir sie)
						(VC informiert)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			(SIMPX das muste ja dann auch noch reichen wenn wir erst im august)[01;31m)[00m))
Step:Single Word Phrase
{'family': ['APPR', 'NX'], 'auto preterminal span': (8, 9), 'span': (8, 9), 'subtrees': ['ADV'], 'parent': 'PX', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'NX')}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM gut)
			(ADVX dann)
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(VF dann)
				(LK schlage)
				(MF ich)
				(VC vor)
				[01;33m(NX (NF[00m (NX mitte)
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						[01;31m(VF[00m
							(PX
								(PX bis spatestens)
								[01;36m(PX[00m
									(APPR bis)
									(NX mitte nachster woche)[01;36m)[00m)[01;31m)[00m [01;33mNF) NX) SIMPX)[00m
						(LK haben)
						(MF wir sie)
						(VC informiert)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			(SIMPX das muste ja dann auch noch reichen wenn wir erst im august)[01;31m)[00m))
Step:UNSET add
{'subtrees': ['APPR', 'NX'], 'family': ['PX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'NN', 'ADJA', 'NN'), 'right siblings': [], 'left siblings': [(PX (APPR bis) (NX (ADV spatestens)))], 'auto preterminal span': (9, 13), 'span': (9, 13), 'parent': 'PX', 'label': 'PX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM gut)
			(ADVX dann)
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(VF dann)
				(LK schlage)
				(MF ich)
				(VC vor)
				[01;33m(NX (NF[00m (NX mitte)
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						[01;31m(VF[00m
							(PX
								(PX bis spatestens)
								(PX bis mitte nachster woche))[01;31m)[00m [01;33mNF) NX) SIMPX)[00m
						(LK haben)
						(MF wir sie)
						(VC informiert)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			(SIMPX das muste ja dann auch noch reichen wenn wir erst im august)[01;31m)[00m))
Step:Unary
{'subtrees': ['DM', 'ADVX', 'SIMPX', 'SIMPX'], 'family': ['SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'ADV', 'VVFIN', 'PPER', 'PTKVZ', 'NN', 'APPR', 'ADV', 'APPR', 'NN', 'ADJA', 'NN', 'VAFIN', 'PPER', 'PPER', 'VVPP', 'PDS', 'VMFIN', 'ADV', 'ADV', 'ADV', 'ADV', 'VVINF', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 29), 'span': (0, 29), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM gut)
		(ADVX dann)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF dann)
			(LK schlage)
			(MF ich)
			(VC vor)
			[01;33m(NX (NF[00m (NX mitte)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					[01;31m(VF[00m
						(PX
							(PX bis spatestens)
							(PX bis mitte nachster woche))[01;31m)[00m [01;33mNF) NX) SIMPX)[00m
					(LK haben)
					(MF wir sie)
					(VC informiert)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX das muste ja dann auch noch reichen wenn wir erst im august)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'VC', 'NX', 'NF'], 'family': ['DM', 'ADVX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'ADV', 'VVFIN', 'PPER', 'PTKVZ', 'NN', 'APPR', 'ADV', 'APPR', 'NN', 'ADJA', 'NN', 'VAFIN', 'PPER', 'PPER', 'VVPP', 'PDS', 'VMFIN', 'ADV', 'ADV', 'ADV', 'ADV', 'VVINF', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 29), 'span': (2, 17), 'left siblings': ['DM', 'ADVX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM gut)
		(ADVX dann)
		[01;33m(SIMPX[00m (VF dann)
		(LK schlage)
		(MF ich)
		(VC vor)
		[01;33m(NX (NF[00m (NX mitte)
		[01;31m(NF[00m
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(PX
						(PX bis spatestens)
						(PX bis mitte nachster woche))[01;31m)[00m [01;33mNF) NX) SIMPX)[00m
				(LK haben)
				(MF wir sie)
				(VC informiert)[01;31m)[00m[01;31m)[00m
		(SIMPX das muste ja dann auch noch reichen wenn wir erst im august)))
Step:Unary
{'subtrees': ['PX'], 'family': ['VF', 'LK', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ADV', 'APPR', 'NN', 'ADJA', 'NN', 'VAFIN', 'PPER', 'PPER', 'VVPP'), 'right siblings': ['LK', 'MF', 'VC'], 'parent': 'SIMPX', 'auto preterminal span': (7, 17), 'span': (7, 13), 'left siblings': [], 'label': 'VF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM gut)
		(ADVX dann)
		[01;33m(SIMPX[00m (VF dann)
		(LK schlage)
		(MF ich)
		(VC vor)
		[01;33m(NX (NF[00m (NX mitte)
		[01;31m(NF[00m
			[01;31m(SIMPX[00m
				(PX bis spatestens bis mitte nachster woche) [01;33mNF) NX) SIMPX)[00m
				(LK haben)
				(MF wir sie)
				(VC informiert)[01;31m)[00m[01;31m)[00m
		(SIMPX das muste ja dann auch noch reichen wenn wir erst im august)))
Step:Unary
{'subtrees': ['PX', 'LK', 'MF', 'VC'], 'family': ['SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ADV', 'APPR', 'NN', 'ADJA', 'NN', 'VAFIN', 'PPER', 'PPER', 'VVPP'), 'right siblings': [], 'parent': 'NF', 'auto preterminal span': (7, 17), 'span': (7, 17), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM gut)
		(ADVX dann)
		[01;33m(SIMPX[00m (VF dann)
		(LK schlage)
		(MF ich)
		(VC vor)
		[01;33m(NX (NF[00m (NX mitte)
		[01;31m(NF[00m
			(PX bis spatestens bis mitte nachster woche) [01;33mNF) NX) SIMPX)[00m
			(LK haben)
			(MF wir sie)
			(VC informiert)[01;31m)[00m
		(SIMPX das muste ja dann auch noch reichen wenn wir erst im august)))
Step:UNSET remove
{'subtrees': ['PX', 'LK', 'MF', 'VC'], 'family': ['DM', 'ADVX', 'VF', 'LK', 'MF', 'VC', 'NX', 'NF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'ADV', 'VVFIN', 'PPER', 'PTKVZ', 'NN', 'APPR', 'ADV', 'APPR', 'NN', 'ADJA', 'NN', 'VAFIN', 'PPER', 'PPER', 'VVPP', 'PDS', 'VMFIN', 'ADV', 'ADV', 'ADV', 'ADV', 'VVINF', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 29), 'span': (7, 17), 'left siblings': ['DM', 'ADVX', 'VF', 'LK', 'MF', 'VC', 'NX'], 'label': 'NF', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM gut)
		(ADVX dann)
		[01;36m(SIMPX[00m
			(VF dann)
			(LK schlage)
			(MF ich)
			(VC vor)
			[01;36m(NX[00m
				[01;36m(NF[00m
					(NX mitte)
					(PX bis spatestens bis mitte nachster woche)[01;36m)[00m[01;36m)[00m[01;36m)[00m
		(LK haben)
		(MF wir sie)
		(VC informiert)
		(SIMPX das muste ja dann auch noch reichen wenn wir erst im august)))
Step:PP Attachment
{'subtrees': ['VF', 'LK', 'MF', 'VC', 'NX', 'PX'], 'family': ['DM', 'ADVX', 'SIMPX', 'LK', 'MF', 'VC', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'PTKVZ', 'NN', 'APPR', 'ADV', 'APPR', 'NN', 'ADJA', 'NN'), 'right siblings': [(LK (VXFIN (VAFIN haben))), (MF (NX (PPER wir)) (NX (PPER sie))), (VC (VXINF (VVPP informiert))), (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VMFIN muste))) (MF (ADVX (ADV ja)) (ADVX (ADV dann)) (ADVX (ADV auch)) (ADVX (ADV noch))) (VC (VXINF (VVINF reichen))) (NF (SIMPX (C (KOUS wenn)) (MF (NX (PPER wir)) (PX (ADVX (ADV erst)) (APPRART im) (NX (NN august)))))))], 'left siblings': [(DM (ITJ gut)), (ADVX (ADV dann))], 'auto preterminal span': (2, 13), 'span': (2, 13), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM gut)
		(ADVX dann)
		(SIMPX
			(VF dann)
			(LK schlage)
			(MF ich)
			(VC vor)
			[01;36m(NX[00m
				[01;36m(NF[00m
					(NX mitte)
					(PX bis spatestens bis mitte nachster woche)[01;36m)[00m[01;36m)[00m)
		(LK haben)
		(MF wir sie)
		(VC informiert)
		(SIMPX das muste ja dann auch noch reichen wenn wir erst im august)))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['VF', 'LK', 'MF', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'APPR', 'ADV', 'APPR', 'NN', 'ADJA', 'NN'), 'right siblings': [], 'left siblings': [(VF (ADVX (ADV dann))), (LK (VXFIN (VVFIN schlage))), (MF (NX (PPER ich))), (VC (PTKVZ vor))], 'auto preterminal span': (6, 13), 'span': (6, 13), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM gut)
		(ADVX dann)
		(SIMPX
			(VF dann)
			(LK schlage)
			(MF ich)
			(VC vor)
			[01;36m(NX[00m
				(NF
					(NX mitte)
					(PX bis spatestens bis mitte nachster woche))[01;36m)[00m)
		(LK haben)
		(MF wir sie)
		(VC informiert)
		(SIMPX das muste ja dann auch noch reichen wenn wir erst im august)))
Step:Unary
{'subtrees': ['NF'], 'family': ['VF', 'LK', 'MF', 'VC', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'APPR', 'ADV', 'APPR', 'NN', 'ADJA', 'NN'), 'right siblings': [], 'left siblings': [(VF (ADVX (ADV dann))), (LK (VXFIN (VVFIN schlage))), (MF (NX (PPER ich))), (VC (PTKVZ vor))], 'auto preterminal span': (6, 13), 'span': (6, 13), 'parent': 'SIMPX', 'label': 'NX', 'classified_type': 'Unary', 'type': 'add'}
(TOP gut dann dann schlage ich vor mitte bis spatestens bis mitte nachster woche haben wir sie informiert das muste ja dann auch noch reichen wenn wir erst im august)

Sentence 189:
0 Initial errors
0 on fringe, 0 iterations

Sentence 190:
0 Initial errors
0 on fringe, 0 iterations

Sentence 191:
0 Initial errors
0 on fringe, 0 iterations

Sentence 192:
0 Initial errors
0 on fringe, 0 iterations

Sentence 193:
0 Initial errors
0 on fringe, 0 iterations

Sentence 194:
0 Initial errors
0 on fringe, 0 iterations

Sentence 195:
2 Initial errors
0 on fringe, 1 iterations
2 Error:UNSET move
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			[01;36m(SU[00m
				(SIMPX
					(LK sollen)
					(MF wir dann gleich diesen termin)
					(VC nehmen))[01;36m)[00m[01;31m)[00m))
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['DM', 'SU'], 'mover info': [('DM', (0, 1))], 'old_family': ['DM', 'SIMPX'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'VMFIN', 'PPER', 'ADV', 'ADV', 'PDAT', 'NN', 'VVINF'), 'start right siblings': ['SIMPX'], 'end left siblings': [], 'auto preterminal span': (0, 8), 'movers': ['DM'], 'old_parent': 'SU', 'POS confusion': ('PTKANT', 'PTKANT'), 'end right siblings': ['SU'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP ja sollen wir dann gleich diesen termin nehmen)

Sentence 196:
0 Initial errors
0 on fringe, 0 iterations

Sentence 197:
0 Initial errors
0 on fringe, 0 iterations

Sentence 198:
5 Initial errors
0 on fringe, 5 iterations
1 Error:UNSET add
1 Error:Unary
1 Error:Unary
1 Error:Clause Attachment
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM gut)
			[01;31m(P[00m
				(SIMPX
					(VF dann)
					(LK gibt)
					(MF es auch hervorragende zugverbindungen)
					(NF
						(R
							[01;36m(NF[00m
								[01;36m(R[00m
									(C die)
									(MF stundlich ab vier uhr dreiundvierzig)
									(VC bestehen)[01;36m)[00m[01;36m)[00m
							(NF wie ich hier grade lese))))
				(KON denn)
				[01;31m(SIMPX[00m
					(VF ich)
					(LK habe)
					(MF den fahrplan vor mir)
					(VC liegen)[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:UNSET add
{'subtrees': ['C', 'MF', 'VC'], 'family': ['R', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PRELS', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'VVFIN'), 'right siblings': [(NF (SIMPX (C (KOUS wie)) (MF (NX (PPER ich)) (ADVX (ADV hier)) (ADVX (ADV grade))) (VC (VXFIN (VVFIN lese)))))], 'left siblings': [], 'auto preterminal span': (7, 14), 'span': (7, 14), 'parent': 'R', 'label': 'R', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM gut)
			[01;31m(P[00m
				(SIMPX
					(VF dann)
					(LK gibt)
					(MF es auch hervorragende zugverbindungen)
					(NF
						(R
							[01;36m(NF[00m
								(R
									(C die)
									(MF stundlich ab vier uhr dreiundvierzig)
									(VC bestehen))[01;36m)[00m
							(NF wie ich hier grade lese))))
				(KON denn)
				[01;31m(SIMPX[00m
					(VF ich)
					(LK habe)
					(MF den fahrplan vor mir)
					(VC liegen)[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['R'], 'family': ['NF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PRELS', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'VVFIN'), 'right siblings': [(NF (SIMPX (C (KOUS wie)) (MF (NX (PPER ich)) (ADVX (ADV hier)) (ADVX (ADV grade))) (VC (VXFIN (VVFIN lese)))))], 'left siblings': [], 'auto preterminal span': (7, 14), 'span': (7, 14), 'parent': 'R', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM gut)
			[01;31m(P[00m
				(SIMPX dann gibt es auch hervorragende zugverbindungen die stundlich ab vier uhr dreiundvierzig bestehen wie ich hier grade lese)
				(KON denn)
				[01;31m(SIMPX[00m
					(VF ich)
					(LK habe)
					(MF den fahrplan vor mir)
					(VC liegen)[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['DM', 'P'], 'family': ['SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'VVFIN', 'PPER', 'ADV', 'ADJA', 'NN', 'PRELS', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'VVFIN', 'KOUS', 'PPER', 'ADV', 'ADV', 'VVFIN', 'KON', 'PPER', 'VAFIN', 'ART', 'NN', 'APPR', 'PRF', 'VVINF'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 27), 'span': (0, 27), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM gut)
		[01;31m(P[00m
			(SIMPX dann gibt es auch hervorragende zugverbindungen die stundlich ab vier uhr dreiundvierzig bestehen wie ich hier grade lese)
			(KON denn)
			[01;31m(SIMPX[00m
				(VF ich)
				(LK habe)
				(MF den fahrplan vor mir)
				(VC liegen)[01;31m)[00m[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'KON', 'SIMPX'], 'family': ['DM', 'P'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'VVFIN', 'PPER', 'ADV', 'ADJA', 'NN', 'PRELS', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'VVFIN', 'KOUS', 'PPER', 'ADV', 'ADV', 'VVFIN', 'KON', 'PPER', 'VAFIN', 'ART', 'NN', 'APPR', 'PRF', 'VVINF'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 27), 'span': (1, 27), 'left siblings': ['DM'], 'label': 'P', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM gut)
		(SIMPX dann gibt es auch hervorragende zugverbindungen die stundlich ab vier uhr dreiundvierzig bestehen wie ich hier grade lese)
		(KON denn)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK habe)
			(MF den fahrplan vor mir)
			(VC liegen)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['DM', 'SIMPX', 'KON', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'VVFIN', 'PPER', 'ADV', 'ADJA', 'NN', 'PRELS', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'VVFIN', 'KOUS', 'PPER', 'ADV', 'ADV', 'VVFIN', 'KON', 'PPER', 'VAFIN', 'ART', 'NN', 'APPR', 'PRF', 'VVINF'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 27), 'span': (20, 27), 'left siblings': ['DM', 'SIMPX', 'KON'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP gut dann gibt es auch hervorragende zugverbindungen die stundlich ab vier uhr dreiundvierzig bestehen wie ich hier grade lese denn ich habe den fahrplan vor mir liegen)

Sentence 199:
0 Initial errors
0 on fringe, 0 iterations

Sentence 200:
0 Initial errors
0 on fringe, 0 iterations

Sentence 201:
0 Initial errors
0 on fringe, 0 iterations

Sentence 202:
0 Initial errors
0 on fringe, 0 iterations

Sentence 203:
0 Initial errors
0 on fringe, 0 iterations

Sentence 204:
0 Initial errors
0 on fringe, 0 iterations

Sentence 205:
0 Initial errors
0 on fringe, 0 iterations

Sentence 206:
0 Initial errors
0 on fringe, 0 iterations

Sentence 207:
1 Initial errors
0 on fringe, 1 iterations
1 Error:NP Internal Structure
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			[01;31m(NX[00m
				(NX schloshotel)
				(NX hannover)[01;31m)[00m
			(DM ja))))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['NX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('NE', 'NE', 'PTKANT'), 'right siblings': ['DM'], 'parent': 'SU', 'auto preterminal span': (0, 3), 'span': (0, 2), 'left siblings': [], 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'remove'}
(TOP schloshotel hannover ja)

Sentence 208:
0 Initial errors
0 on fringe, 0 iterations

Sentence 209:
0 Initial errors
0 on fringe, 0 iterations

Sentence 210:
0 Initial errors
0 on fringe, 0 iterations

Sentence 211:
0 Initial errors
0 on fringe, 0 iterations

Sentence 212:
0 Initial errors
0 on fringe, 0 iterations

Sentence 213:
0 Initial errors
0 on fringe, 0 iterations

Sentence 214:
0 Initial errors
0 on fringe, 0 iterations

Sentence 215:
2 Initial errors
0 on fringe, 2 iterations
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM ja)
			[01;36m(LV[00m
				(SIMPX
					(C wenn)
					(MF ihnen oktober nicht so gut)
					(VC past))[01;36m)[00m
			[01;31m(SIMPX[00m
				(VF da)
				(LK habe)
				(MF ich auch urlaub)
				(NF ende oktober)[01;31m)[00m
			(DM also))))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['DM', 'LV', 'SIMPX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'NN', 'PTKNEG', 'ADV', 'ADJD', 'VVFIN'), 'right siblings': [(SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VAFIN habe))) (MF (NX (PPER ich)) (ADVX (ADV auch)) (NX (NN urlaub))) (NF (NX (NX (NN ende)) (NX (NN oktober))))), (DM (ADVX (ADV also)))], 'left siblings': [(DM (PTKANT ja))], 'auto preterminal span': (1, 8), 'span': (1, 8), 'parent': 'SU', 'label': 'LV', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM ja)
			(LV wenn ihnen oktober nicht so gut past)
			[01;31m(SIMPX[00m
				(VF da)
				(LK habe)
				(MF ich auch urlaub)
				(NF ende oktober)[01;31m)[00m
			(DM also))))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'NF'], 'family': ['DM', 'LV', 'SIMPX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'KOUS', 'PPER', 'NN', 'PTKNEG', 'ADV', 'ADJD', 'VVFIN', 'ADV', 'VAFIN', 'PPER', 'ADV', 'NN', 'NN', 'NN', 'ADV'), 'right siblings': ['DM'], 'parent': 'SU', 'auto preterminal span': (0, 16), 'span': (8, 15), 'left siblings': ['DM', 'LV'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ja wenn ihnen oktober nicht so gut past da habe ich auch urlaub ende oktober also)

Sentence 216:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(SIMPX
				(LK kommt)
				(MF
					[01;36m(NX[00m
						(ADVX erst)
						[01;31m(NX[00m
							(ART der)
							(NN november)[01;31m)[00m[01;36m)[00m
					(PX in frage))))))
Step:Modifier Attachment
{'new_parent': 'NX', 'new_family': ['ADVX', 'ART', 'NN'], 'mover info': [('ADVX', (1, 2))], 'old_family': ['ADVX', 'NX', 'PX'], 'start left siblings': [], 'auto preterminals': ('ADV', 'ART', 'NN', 'APPR', 'NN'), 'start right siblings': ['NX', 'PX'], 'end left siblings': [], 'auto preterminal span': (1, 6), 'movers': ['ADVX'], 'old_parent': 'MF', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['ART', 'NN'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP kommt erst der november in frage)

Sentence 217:
0 Initial errors
0 on fringe, 0 iterations

Sentence 218:
0 Initial errors
0 on fringe, 0 iterations

Sentence 219:
1 Initial errors
0 on fringe, 1 iterations
1 Error:NP Internal Structure
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM also)
			(SIMPX wir konnten naturlich mit dem auto fahren)
			(SIMPX
				(KOORD aber)
				(VF ich)
				(LK wurde)
				(MF
					(ADVX hier)
					[01;31m(NX[00m
						(NX die bequemlichkeit)
						(NX eines zuges)[01;31m)[00m)
				(VC vorziehen)))))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ART', 'NN', 'ART', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (11, 16), 'span': (12, 16), 'left siblings': ['ADVX'], 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'remove'}
(TOP also wir konnten naturlich mit dem auto fahren aber ich wurde hier die bequemlichkeit eines zuges vorziehen)

Sentence 220:
0 Initial errors
0 on fringe, 0 iterations

Sentence 221:
9 Initial errors
0 on fringe, 6 iterations
2 Error:Different label
2 Error:UNSET move
2 Error:PP Attachment
1 Error:Unary
1 Error:Single Word Phrase
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(SIMPX
				(VF ab munchen)
				(LK dauert)
				(MF
					(NX es)
					[01;36m(NX[00m [01;31m(PX[00m
						(ADVX nur)
						[01;31m(ADVX[00m
							(ADV etwas)[01;31m)[00m
						(APPR uber)
						(NX vier stunden)[01;31m)[00m[01;36m)[00m))
			[01;31m(SIMPX[00m
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				[01;36m(SIMPX[00m
					(VF wir)
					(LK konnten)
					(MF ab halb sechs schon)
					(VC losfahren)
					[01;36m(SIMPX[00m
						(NF
							[01;31m(SIMPX[00m
								(C so das)
								(MF wir mittags die geschaftspartner)
								(VC treffen)[01;31m)[00m
							[01;36m(NF[00m
								(PX
									(KON oder)
									(PX am fruhen nachmittag))[01;36m)[00m)[01;36m)[00m[01;36m)[00m[01;31m)[00m)))
Step:Different label
{'family': ['NX', 'NX'], 'auto preterminal span': (4, 9), 'span': (4, 9), 'subtrees': ['ADVX', 'ADVX', 'APPR', 'NX'], 'parent': 'MF', 'over_word': False, 'auto preterminals': ('ADV', 'ADV', 'APPR', 'CARD', 'NN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('PX', 'NX')}
(TOP
	(TURN
		(SU
			(SIMPX
				(VF ab munchen)
				(LK dauert)
				(MF
					(NX es)
					(NX
						(ADVX nur)
						[01;31m(ADVX[00m
							(ADV etwas)[01;31m)[00m
						(APPR uber)
						(NX vier stunden))))
			[01;31m(SIMPX[00m
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				[01;36m(SIMPX[00m
					(VF wir)
					(LK konnten)
					(MF ab halb sechs schon)
					(VC losfahren)
					[01;36m(SIMPX[00m
						(NF
							[01;31m(SIMPX[00m
								(C so das)
								(MF wir mittags die geschaftspartner)
								(VC treffen)[01;31m)[00m
							[01;36m(NF[00m
								(PX
									(KON oder)
									(PX am fruhen nachmittag))[01;36m)[00m)[01;36m)[00m[01;36m)[00m[01;31m)[00m)))
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SIMPX', 'KOORD', 'SIMPX'], 'mover info': [('KOORD', (9, 10))], 'old_family': ['KOORD', 'VF', 'LK', 'MF', 'VC', 'NF'], 'start left siblings': [], 'auto preterminals': ('APPR', 'NE', 'VVFIN', 'PPER', 'ADV', 'ADV', 'APPR', 'CARD', 'NN', 'KON', 'PPER', 'VMFIN', 'APPR', 'ADJD', 'CARD', 'ADV', 'VVINF', 'KOUS', 'KOUS', 'PPER', 'ADV', 'ART', 'NN', 'VVFIN', 'KON', 'APPRART', 'ADJA', 'NN'), 'start right siblings': ['VF', 'LK', 'MF', 'VC', 'NF'], 'end left siblings': ['SIMPX'], 'auto preterminal span': (0, 28), 'movers': ['KOORD'], 'old_parent': 'SIMPX', 'POS confusion': ('KON', 'KON'), 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			(SIMPX
				(VF ab munchen)
				(LK dauert)
				(MF
					(NX es)
					(NX
						(ADVX nur)
						[01;31m(ADVX[00m
							(ADV etwas)[01;31m)[00m
						(APPR uber)
						(NX vier stunden))))
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(SIMPX
				(VF wir)
				(LK konnten)
				(MF ab halb sechs schon)
				(VC losfahren)
				[01;36m(SIMPX[00m
					(NF
						[01;31m(SIMPX[00m
							(C so das)
							(MF wir mittags die geschaftspartner)
							(VC treffen)[01;31m)[00m
						[01;36m(NF[00m
							(PX
								(KON oder)
								(PX am fruhen nachmittag))[01;36m)[00m)[01;36m)[00m))))
Step:PP Attachment
{'new_parent': 'SIMPX', 'new_family': ['C', 'MF', 'VC', 'PX'], 'mover info': [('PX', (24, 28))], 'old_family': ['SIMPX', 'PX'], 'start left siblings': ['SIMPX'], 'auto preterminals': ('KOUS', 'KOUS', 'PPER', 'ADV', 'ART', 'NN', 'VVFIN', 'KON', 'APPRART', 'ADJA', 'NN'), 'start right siblings': [], 'end left siblings': ['C', 'MF', 'VC'], 'auto preterminal span': (17, 28), 'movers': ['PX'], 'old_parent': 'NF', 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU
			(SIMPX
				(VF ab munchen)
				(LK dauert)
				(MF
					(NX es)
					(NX
						(ADVX nur)
						[01;31m(ADVX[00m
							(ADV etwas)[01;31m)[00m
						(APPR uber)
						(NX vier stunden))))
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(SIMPX
				(VF wir)
				(LK konnten)
				(MF ab halb sechs schon)
				(VC losfahren)
				(NF
					(SIMPX
						(C so das)
						(MF wir mittags die geschaftspartner)
						(VC treffen)
						[01;36m(NF[00m
							(PX
								(KON oder)
								(PX am fruhen nachmittag))[01;36m)[00m))))))
Step:Unary
{'subtrees': ['PX'], 'family': ['C', 'MF', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'APPRART', 'ADJA', 'NN'), 'right siblings': [], 'left siblings': [(C (KOUS so) (KOUS das)), (MF (NX (PPER wir)) (ADVX (ADV mittags)) (NX (ART die) (NN geschaftspartner))), (VC (VXFIN (VVFIN treffen)))], 'auto preterminal span': (24, 28), 'span': (24, 28), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU
			(SIMPX
				(VF ab munchen)
				(LK dauert)
				(MF
					(NX es)
					(NX
						(ADVX nur)
						[01;31m(ADVX[00m
							(ADV etwas)[01;31m)[00m
						(APPR uber)
						(NX vier stunden))))
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(SIMPX wir konnten ab halb sechs schon losfahren so das wir mittags die geschaftspartner treffen oder am fruhen nachmittag))))
Step:Single Word Phrase
{'subtrees': ['ADV'], 'family': ['ADVX', 'ADVX', 'APPR', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADV', 'ADV', 'APPR', 'CARD', 'NN'), 'right siblings': ['APPR', 'NX'], 'parent': 'NX', 'auto preterminal span': (4, 9), 'span': (5, 6), 'left siblings': ['ADVX'], 'label': 'ADVX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(SIMPX ab munchen dauert es nur etwas uber vier stunden)
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(SIMPX wir konnten ab halb sechs schon losfahren so das wir mittags die geschaftspartner treffen oder am fruhen nachmittag))))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['SIMPX', 'KOORD', 'SIMPX'], 'over_word': True, 'over words': True, 'auto preterminals': ('APPR', 'NE', 'VVFIN', 'PPER', 'ADV', 'ADV', 'APPR', 'CARD', 'NN', 'KON', 'PPER', 'VMFIN', 'APPR', 'ADJD', 'CARD', 'ADV', 'VVINF', 'KOUS', 'KOUS', 'PPER', 'ADV', 'ART', 'NN', 'VVFIN', 'KON', 'APPRART', 'ADJA', 'NN'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 28), 'span': (9, 10), 'left siblings': ['SIMPX'], 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP ab munchen dauert es nur etwas uber vier stunden und wir konnten ab halb sechs schon losfahren so das wir mittags die geschaftspartner treffen oder am fruhen nachmittag)

Sentence 222:
0 Initial errors
0 on fringe, 0 iterations

Sentence 223:
0 Initial errors
0 on fringe, 0 iterations

Sentence 224:
0 Initial errors
0 on fringe, 0 iterations

Sentence 225:
7 Initial errors
0 on fringe, 6 iterations
2 Error:Modifier Attachment
1 Error:Unary
1 Error:Single Word Phrase
1 Error:Single Word Phrase
1 Error:UNSET remove
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK nehmen)
				[01;31m(MF[00m
					[01;36m(MF[00m
						(NX wir)
						(ADVX dann)
						(ADVX doch)
						(NX das in der mitte)[01;36m)[00m
					[01;36m(NF[00m
						(ADVX
							(ADV vielleicht))[01;36m)[00m[01;31m)[00m[01;31m)[00m
			(SIMPX
				(VF das)
				(LK ware)
				(MF
					(NX
						[01;36m(NX[00m
							(ART das)[01;36m)[00m
						[01;36m(ADJX[00m
							(NE zentralhotel)[01;36m)[00m)))[01;31m)[00m))
Step:Modifier Attachment
{'new_parent': 'SIMPX', 'new_family': ['LK', 'MF', 'ADVX'], 'mover info': [('ADVX', (8, 9))], 'old_family': ['NX', 'ADVX', 'ADVX', 'NX', 'ADVX'], 'start left siblings': ['NX', 'ADVX', 'ADVX', 'NX'], 'auto preterminals': ('VVFIN', 'PPER', 'ADV', 'ADV', 'PDS', 'APPR', 'ART', 'NN', 'ADV'), 'start right siblings': [], 'end left siblings': ['LK', 'MF'], 'auto preterminal span': (0, 9), 'movers': ['ADVX'], 'old_parent': 'MF', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK nehmen)
				(MF wir dann doch das in der mitte)
				[01;36m(NF[00m
					(ADVX
						(ADV vielleicht))[01;36m)[00m[01;31m)[00m
			(SIMPX
				(VF das)
				(LK ware)
				(MF
					(NX
						[01;36m(NX[00m
							(ART das)[01;36m)[00m
						[01;36m(ADJX[00m
							(NE zentralhotel)[01;36m)[00m)))[01;31m)[00m))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV',), 'right siblings': [], 'left siblings': [(LK (VXFIN (VVFIN nehmen))), (MF (NX (PPER wir)) (ADVX (ADV dann)) (ADVX (ADV doch)) (NX (NX (PDS das)) (PX (APPR in) (NX (ART der) (NN mitte)))))], 'auto preterminal span': (8, 9), 'span': (8, 9), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK nehmen)
				(MF wir dann doch das in der mitte)
				(NF vielleicht)[01;31m)[00m
			(SIMPX
				(VF das)
				(LK ware)
				(MF
					(NX
						[01;36m(NX[00m
							(ART das)[01;36m)[00m
						[01;36m(ADJX[00m
							(NE zentralhotel)[01;36m)[00m)))[01;31m)[00m))
Step:Single Word Phrase
{'subtrees': ['ART'], 'family': ['NX', 'NE'], 'over_word': True, 'over words': True, 'auto preterminals': ('ART',), 'right siblings': [(NE zentralhotel)], 'left siblings': [], 'auto preterminal span': (11, 12), 'span': (11, 12), 'parent': 'NX', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK nehmen)
				(MF wir dann doch das in der mitte)
				(NF vielleicht)[01;31m)[00m
			(SIMPX
				(VF das)
				(LK ware)
				(MF
					(NX
						(NX das)
						[01;36m(ADJX[00m
							(NE zentralhotel)[01;36m)[00m)))[01;31m)[00m))
Step:Single Word Phrase
{'subtrees': ['NE'], 'family': ['NX', 'ADJX'], 'over_word': True, 'over words': True, 'auto preterminals': ('NE',), 'right siblings': [], 'left siblings': [(NX (ART das))], 'auto preterminal span': (12, 13), 'span': (12, 13), 'parent': 'NX', 'label': 'ADJX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK nehmen)
				(MF wir dann doch das in der mitte)
				(NF vielleicht)[01;31m)[00m
			(SIMPX das ware das zentralhotel)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['LK', 'MF', 'NF'], 'family': ['SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'ADV', 'ADV', 'PDS', 'APPR', 'ART', 'NN', 'ADV', 'PDS', 'VAFIN', 'ART', 'NE'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 13), 'span': (0, 9), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		[01;31m(SU[00m
			(LK nehmen)
			(MF wir dann doch das in der mitte)
			(NF vielleicht)
			(SIMPX das ware das zentralhotel)[01;31m)[00m))
Step:Unary
{'subtrees': ['LK', 'MF', 'NF', 'SIMPX'], 'family': ['SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'ADV', 'ADV', 'PDS', 'APPR', 'ART', 'NN', 'ADV', 'PDS', 'VAFIN', 'ART', 'NE'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 13), 'span': (0, 13), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP nehmen wir dann doch das in der mitte vielleicht das ware das zentralhotel)

Sentence 226:
0 Initial errors
0 on fringe, 0 iterations

Sentence 227:
2 Initial errors
0 on fringe, 2 iterations
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SIMPX[00m
	(TOP
		(TURN
			(SU
				(SIMPX und ob wir am abend noch was unternehmen)
				[01;36m(SU[00m
					(SIMPX
						(VF das)
						(LK konnen)
						(MF wir ja dort)
						(VC absprechen))[01;36m)[00m)))[01;36m)[00m
Step:Unary
{'subtrees': ['TURN'], 'family': ['SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'KOUS', 'PPER', 'APPRART', 'NN', 'ADV', 'PIS', 'VVFIN', 'PDS', 'VMFIN', 'PPER', 'ADV', 'ADV', 'VVINF'), 'right siblings': [], 'left siblings': [], 'auto preterminal span': (0, 14), 'span': (0, 14), 'parent': 'TOP', 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(SIMPX
		(TURN
			(SU
				(SIMPX und ob wir am abend noch was unternehmen)
				[01;36m(SU[00m
					(SIMPX
						(VF das)
						(LK konnen)
						(MF wir ja dort)
						(VC absprechen))[01;36m)[00m))))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VMFIN', 'PPER', 'ADV', 'ADV', 'VVINF'), 'right siblings': [], 'left siblings': [(SIMPX (KOORD (KON und)) (C (KOUS ob)) (MF (NX (PPER wir)) (PX (APPRART am) (NX (NN abend))) (ADVX (ADV noch)) (NX (PIS was))) (VC (VXFIN (VVFIN unternehmen))))], 'auto preterminal span': (8, 14), 'span': (8, 14), 'parent': 'SU', 'label': 'SU', 'classified_type': 'Unary', 'type': 'add'}
(TOP und ob wir am abend noch was unternehmen das konnen wir ja dort absprechen)

Sentence 228:
0 Initial errors
0 on fringe, 0 iterations

Sentence 229:
0 Initial errors
0 on fringe, 0 iterations

Sentence 230:
0 Initial errors
0 on fringe, 0 iterations

Sentence 231:
0 Initial errors
0 on fringe, 0 iterations

Sentence 232:
0 Initial errors
0 on fringe, 0 iterations

Sentence 233:
0 Initial errors
0 on fringe, 0 iterations

Sentence 234:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM
				(PX
					(ADVX dann)
					[01;36m(DM[00m
						(PX
							(APPR bis)
							(ADVX dann))[01;36m)[00m))
			(DM ja))))
Step:Unary
{'subtrees': ['PX'], 'family': ['ADVX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ADV'), 'right siblings': [], 'left siblings': [(ADVX (ADV dann))], 'auto preterminal span': (1, 3), 'span': (1, 3), 'parent': 'PX', 'label': 'DM', 'classified_type': 'Unary', 'type': 'add'}
(TOP dann bis dann ja)

Sentence 235:
0 Initial errors
0 on fringe, 0 iterations

Sentence 236:
0 Initial errors
0 on fringe, 0 iterations

Sentence 237:
0 Initial errors
0 on fringe, 0 iterations

Sentence 238:
0 Initial errors
0 on fringe, 0 iterations

Sentence 239:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			[01;36m(SU[00m
				(DM
					(ADVX
						(ADV so)))[01;36m)[00m
			(SIMPX wie wollen wir denn hinkommen))))
Step:Unary
{'subtrees': ['DM'], 'family': ['SU', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV',), 'right siblings': [(SIMPX (VF (ADJX (PWAV wie))) (LK (VXFIN (VMFIN wollen))) (MF (NX (PPER wir)) (ADVX (ADV denn))) (VC (VXINF (VVINF hinkommen))))], 'left siblings': [], 'auto preterminal span': (0, 1), 'span': (0, 1), 'parent': 'SU', 'label': 'SU', 'classified_type': 'Unary', 'type': 'add'}
(TOP so wie wollen wir denn hinkommen)

Sentence 240:
0 Initial errors
0 on fringe, 0 iterations

Sentence 241:
0 Initial errors
0 on fringe, 0 iterations

Sentence 242:
0 Initial errors
0 on fringe, 0 iterations

Sentence 243:
0 Initial errors
0 on fringe, 0 iterations

Sentence 244:
3 Initial errors
0 on fringe, 2 iterations
2 Error:Modifier Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM also)
			(SIMPX es fahrt ab vier uhr dreiundvierzig stundlich ein zug)
			(SIMPX
				(KOORD und)
				(VF die fahrtdauer)
				(LK betragt)
				[01;36m(NX[00m
					(MF
						(ADVX ubrigens)
						[01;31m(NX[00m
							(ADJX viereinhalb)
							(NN stunden)[01;31m)[00m)[01;36m)[00m)[01;31m)[00m))
Step:Modifier Attachment
{'new_parent': 'NX', 'new_family': ['ADVX', 'ADJX', 'NN'], 'mover info': [('ADVX', (14, 15))], 'old_family': ['ADVX', 'NX'], 'start left siblings': [], 'auto preterminals': ('ADV', 'CARD', 'NN'), 'start right siblings': ['NX'], 'end left siblings': [], 'auto preterminal span': (14, 17), 'movers': ['ADVX'], 'old_parent': 'MF', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['ADJX', 'NN'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM also)
			(SIMPX es fahrt ab vier uhr dreiundvierzig stundlich ein zug)
			(SIMPX und die fahrtdauer betragt ubrigens viereinhalb stunden)[01;31m)[00m))
Step:Unary
{'subtrees': ['DM', 'SIMPX', 'SIMPX'], 'family': ['SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPER', 'VVFIN', 'APPR', 'CARD', 'NN', 'CARD', 'ADJD', 'ART', 'NN', 'KON', 'ART', 'NN', 'VVFIN', 'ADV', 'CARD', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 17), 'span': (0, 17), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP also es fahrt ab vier uhr dreiundvierzig stundlich ein zug und die fahrtdauer betragt ubrigens viereinhalb stunden)

Sentence 245:
0 Initial errors
0 on fringe, 0 iterations

Sentence 246:
0 Initial errors
0 on fringe, 0 iterations

Sentence 247:
6 Initial errors
0 on fringe, 5 iterations
2 Error:Different label
1 Error:UNSET add
1 Error:Unary
1 Error:UNSET remove
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			(SIMPX
				(VF die anderen beiden)
				[01;31m(FKOORD[00m
					[01;36m(LKM[00m [01;31m(LKMN[00m
						(LK sind)
						[01;36m(MF[00m
							(MF zwar beide zentral)
							[01;31m(NF[00m
								(PX
									(ADVX aber)
									(ADVX nicht)
									(PX in der nahe vom hauptbahnhof))[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;36m)[00m
					(KON und)
					(LKM liegen auch etwas hoher)[01;31m)[00m)
			(SIMPX und ich weis nicht wie ihr budget aussieht)
			(SIMPX aber mir wurde eigentlich dieses schloshotel hannover am besten passen)[01;31m)[00m))
Step:Different label
{'family': ['LKM', 'KON', 'LKM'], 'auto preterminal span': (4, 15), 'span': (4, 15), 'subtrees': ['LK', 'MF', 'NF'], 'parent': 'FKOORD', 'over_word': False, 'auto preterminals': ('VAFIN', 'ADV', 'PIS', 'ADJD', 'ADV', 'PTKNEG', 'APPR', 'ART', 'NN', 'APPRART', 'NN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('LKMN', 'LKM')}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			(SIMPX
				(VF die anderen beiden)
				[01;31m(FKOORD[00m
					(LKM
						(LK sind)
						[01;36m(MF[00m
							(MF zwar beide zentral)
							[01;31m(NF[00m
								(PX
									(ADVX aber)
									(ADVX nicht)
									(PX in der nahe vom hauptbahnhof))[01;31m)[00m[01;36m)[00m)
					(KON und)
					(LKM liegen auch etwas hoher)[01;31m)[00m)
			(SIMPX und ich weis nicht wie ihr budget aussieht)
			(SIMPX aber mir wurde eigentlich dieses schloshotel hannover am besten passen)[01;31m)[00m))
Step:UNSET add
{'subtrees': ['MF', 'NF'], 'family': ['LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PIS', 'ADJD', 'ADV', 'PTKNEG', 'APPR', 'ART', 'NN', 'APPRART', 'NN'), 'right siblings': [], 'left siblings': [(LK (VXFIN (VAFIN sind)))], 'auto preterminal span': (5, 15), 'span': (5, 15), 'parent': 'LKM', 'label': 'MF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			(SIMPX
				(VF die anderen beiden)
				[01;31m(FKOORD[00m
					(LKM
						(LK sind)
						(MF
							(MF zwar beide zentral)
							[01;31m(NF[00m
								(PX
									(ADVX aber)
									(ADVX nicht)
									(PX in der nahe vom hauptbahnhof))[01;31m)[00m))
					(KON und)
					(LKM liegen auch etwas hoher)[01;31m)[00m)
			(SIMPX und ich weis nicht wie ihr budget aussieht)
			(SIMPX aber mir wurde eigentlich dieses schloshotel hannover am besten passen)[01;31m)[00m))
Step:Unary
{'subtrees': ['DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'family': ['SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ART', 'ADJA', 'PIS', 'VAFIN', 'ADV', 'PIS', 'ADJD', 'ADV', 'PTKNEG', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'KON', 'VVFIN', 'ADV', 'ADV', 'ADJD', 'KON', 'PPER', 'VVFIN', 'PTKNEG', 'KOUS', 'PPOSAT', 'NN', 'VVFIN', 'KON', 'PPER', 'VAFIN', 'ADV', 'PDAT', 'NE', 'NE', 'PTKA', 'ADJD', 'VVINF'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 38), 'span': (0, 38), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF die anderen beiden)
			[01;31m(FKOORD[00m
				(LKM
					(LK sind)
					(MF
						(MF zwar beide zentral)
						[01;31m(NF[00m
							(PX
								(ADVX aber)
								(ADVX nicht)
								(PX in der nahe vom hauptbahnhof))[01;31m)[00m))
				(KON und)
				(LKM liegen auch etwas hoher)[01;31m)[00m)
		(SIMPX und ich weis nicht wie ihr budget aussieht)
		(SIMPX aber mir wurde eigentlich dieses schloshotel hannover am besten passen)))
Step:UNSET remove
{'subtrees': ['LKM', 'KON', 'LKM'], 'family': ['VF', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'ADJA', 'PIS', 'VAFIN', 'ADV', 'PIS', 'ADJD', 'ADV', 'PTKNEG', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'KON', 'VVFIN', 'ADV', 'ADV', 'ADJD'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (1, 20), 'span': (4, 20), 'left siblings': ['VF'], 'label': 'FKOORD', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF die anderen beiden)
			(LKM
				(LK sind)
				(MF
					(MF zwar beide zentral)
					[01;31m(NF[00m
						(PX
							(ADVX aber)
							(ADVX nicht)
							(PX in der nahe vom hauptbahnhof))[01;31m)[00m))
			(KON und)
			(LKM liegen auch etwas hoher))
		(SIMPX und ich weis nicht wie ihr budget aussieht)
		(SIMPX aber mir wurde eigentlich dieses schloshotel hannover am besten passen)))
Step:Unary
{'subtrees': ['PX'], 'family': ['MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PIS', 'ADJD', 'ADV', 'PTKNEG', 'APPR', 'ART', 'NN', 'APPRART', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (5, 15), 'span': (8, 15), 'left siblings': ['MF'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja die anderen beiden sind zwar beide zentral aber nicht in der nahe vom hauptbahnhof und liegen auch etwas hoher und ich weis nicht wie ihr budget aussieht aber mir wurde eigentlich dieses schloshotel hannover am besten passen)

Sentence 248:
0 Initial errors
0 on fringe, 0 iterations

Sentence 249:
3 Initial errors
0 on fringe, 2 iterations
2 Error:Single Word Phrase
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX
				(VF da)
				(LK musten)
				(MF wir uns)
				(VC erkundigen)
				(NF
					(SIMPX
						(C ob)
						(MF
							[01;36m(MF[00m
								(NX die)
								(ADVX abends)[01;36m)[00m
							[01;36m(NX[00m [01;31m(ADJX[00m
								(ADJD geoffnet)[01;31m)[00m[01;36m)[00m)
						(VC haben))))
			(SIMPX aber museumsbesuche finde ich auch sehr reizvoll))))
Step:Single Word Phrase
{'family': ['NX', 'ADVX', 'NX'], 'auto preterminal span': (9, 10), 'span': (9, 10), 'subtrees': ['ADJD'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('ADJD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'NX')}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX
				(VF da)
				(LK musten)
				(MF wir uns)
				(VC erkundigen)
				(NF
					(SIMPX
						(C ob)
						(MF
							[01;36m(MF[00m
								(NX die)
								(ADVX abends)[01;36m)[00m
							(NX geoffnet))
						(VC haben))))
			(SIMPX aber museumsbesuche finde ich auch sehr reizvoll))))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADVX'], 'family': ['MF', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'ADV'), 'right siblings': [(NX (ADJD geoffnet))], 'left siblings': [], 'auto preterminal span': (7, 9), 'span': (7, 9), 'parent': 'MF', 'label': 'MF', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP ja da musten wir uns erkundigen ob die abends geoffnet haben aber museumsbesuche finde ich auch sehr reizvoll)

Sentence 250:
0 Initial errors
0 on fringe, 0 iterations

Sentence 251:
0 Initial errors
0 on fringe, 0 iterations

Sentence 252:
0 Initial errors
0 on fringe, 0 iterations

Sentence 253:
0 Initial errors
0 on fringe, 0 iterations

Sentence 254:
0 Initial errors
0 on fringe, 0 iterations

Sentence 255:
0 Initial errors
0 on fringe, 0 iterations

Sentence 256:
0 Initial errors
0 on fringe, 0 iterations

Sentence 257:
0 Initial errors
0 on fringe, 0 iterations

Sentence 258:
0 Initial errors
0 on fringe, 0 iterations

Sentence 259:
0 Initial errors
0 on fringe, 0 iterations

Sentence 260:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			[01;36m(ADVX[00m [01;31m(VXINF[00m
				(VVPP abgedeckt)[01;31m)[00m[01;36m)[00m
			(DM ja))))
Step:Single Word Phrase
{'family': ['ADVX', 'DM'], 'auto preterminal span': (0, 1), 'span': (0, 1), 'subtrees': ['VVPP'], 'parent': 'SU', 'over_word': True, 'auto preterminals': ('VVPP',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VXINF', 'ADVX')}
(TOP abgedeckt ja)

Sentence 261:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			[01;36m(ADVX[00m [01;31m(VXINF[00m
				(VVPP abgedeckt)[01;31m)[00m[01;36m)[00m
			(DM ja))))
Step:Single Word Phrase
{'family': ['ADVX', 'DM'], 'auto preterminal span': (0, 1), 'span': (0, 1), 'subtrees': ['VVPP'], 'parent': 'SU', 'over_word': True, 'auto preterminals': ('VVPP',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VXINF', 'ADVX')}
(TOP abgedeckt ja)

Sentence 262:
6 Initial errors
0 on fringe, 5 iterations
2 Error:Modifier Attachment
1 Error:Unary
1 Error:Unary
1 Error:Unary
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			(DM gut)
			[01;36m(NX[00m
				(ADVX dann)
				[01;31m(DM[00m
					(NX
						(PIDAT vielen)
						(NN dank))[01;31m)[00m
				[01;31m(ADVX[00m
					(ADVX erst)
					(ADVX mal)[01;31m)[00m[01;36m)[00m
			[01;31m(DM[00m
				[01;31m(PX[00m
					(KON und)
					(PX auf wiedersehen)[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Modifier Attachment
{'new_parent': 'SU', 'new_family': ['DM', 'DM', 'ADVX', 'DM', 'ADVX', 'ADVX', 'DM'], 'mover info': [('ADVX', (5, 6))], 'old_family': ['ADVX', 'ADVX'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'ITJ', 'ADV', 'PIDAT', 'NN', 'ADV', 'ADV', 'KON', 'APPR', 'NN'), 'start right siblings': ['ADVX'], 'end left siblings': ['DM', 'DM', 'ADVX', 'DM'], 'auto preterminal span': (0, 10), 'adding node already present': False, 'movers': ['ADVX'], 'old_parent': 'ADVX', 'POS confusion': ('ADV', 'ADV'), 'added and moved': True, 'end right siblings': ['ADVX', 'DM'], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			(DM gut)
			(NX
				(ADVX dann)
				[01;31m(DM[00m
					(NX
						(PIDAT vielen)
						(NN dank))[01;31m)[00m
				(ADVX erst)
				(ADVX mal))
			[01;31m(DM[00m
				[01;31m(PX[00m
					(KON und)
					(PX auf wiedersehen)[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['DM', 'DM', 'NX', 'DM'], 'family': ['SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'ADV', 'PIDAT', 'NN', 'ADV', 'ADV', 'KON', 'APPR', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 10), 'span': (0, 10), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		(NX
			(ADVX dann)
			[01;31m(DM[00m
				(NX
					(PIDAT vielen)
					(NN dank))[01;31m)[00m
			(ADVX erst)
			(ADVX mal))
		[01;31m(DM[00m
			[01;31m(PX[00m
				(KON und)
				(PX auf wiedersehen)[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['NX'], 'family': ['ADVX', 'DM', 'ADVX', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PIDAT', 'NN', 'ADV', 'ADV'), 'right siblings': ['ADVX', 'ADVX'], 'parent': 'NX', 'auto preterminal span': (2, 7), 'span': (3, 5), 'left siblings': ['ADVX'], 'label': 'DM', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		(NX dann vielen dank erst mal)
		[01;31m(DM[00m
			[01;31m(PX[00m
				(KON und)
				(PX auf wiedersehen)[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['KON', 'PX'], 'family': ['PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'APPR', 'NN'), 'right siblings': [], 'parent': 'DM', 'auto preterminal span': (7, 10), 'span': (7, 10), 'left siblings': [], 'label': 'PX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		(NX dann vielen dank erst mal)
		[01;31m(DM[00m
			(KON und)
			(PX auf wiedersehen)[01;31m)[00m))
Step:PP Attachment
{'subtrees': ['KON', 'PX'], 'family': ['DM', 'DM', 'NX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'ADV', 'PIDAT', 'NN', 'ADV', 'ADV', 'KON', 'APPR', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 10), 'span': (7, 10), 'left siblings': ['DM', 'DM', 'NX'], 'label': 'DM', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP ja gut dann vielen dank erst mal und auf wiedersehen)

Sentence 263:
0 Initial errors
0 on fringe, 0 iterations

Sentence 264:
0 Initial errors
0 on fringe, 0 iterations

Sentence 265:
0 Initial errors
0 on fringe, 0 iterations

Sentence 266:
0 Initial errors
0 on fringe, 0 iterations

Sentence 267:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM reiseburo bonn)
			[01;31m(DM[00m
				(NX
					(NE flammersfeld))[01;31m)[00m
			(DM guten tag))))
Step:Unary
{'subtrees': ['NX'], 'family': ['DM', 'DM', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'NE', 'NE', 'ADJA', 'NN'), 'right siblings': ['DM'], 'parent': 'SU', 'auto preterminal span': (0, 5), 'span': (2, 3), 'left siblings': ['DM'], 'label': 'DM', 'classified_type': 'Unary', 'type': 'remove'}
(TOP reiseburo bonn flammersfeld guten tag)

Sentence 268:
2 Initial errors
0 on fringe, 1 iterations
2 Error:UNSET move
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM herr krings)
			[01;36m(SU[00m
				(SIMPX
					(VF mit welchem verkehrsmittel)
					(LK mochten)
					(MF sie)
					(VC anreisen))[01;36m)[00m[01;31m)[00m))
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['DM', 'SU'], 'mover info': [('DM', (0, 2))], 'old_family': ['DM', 'SIMPX'], 'start left siblings': [], 'auto preterminals': ('NN', 'NE', 'APPR', 'PWAT', 'NN', 'VMFIN', 'PPER', 'VVINF'), 'start right siblings': ['SIMPX'], 'end left siblings': [], 'auto preterminal span': (0, 8), 'movers': ['DM'], 'old_parent': 'SU', 'end right siblings': ['SU'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP herr krings mit welchem verkehrsmittel mochten sie anreisen)

Sentence 269:
0 Initial errors
0 on fringe, 0 iterations

Sentence 270:
0 Initial errors
0 on fringe, 0 iterations

Sentence 271:
2 Initial errors
0 on fringe, 2 iterations
1 Error:Co-ordination
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF vierter funfter august)
				(LK ist)
				(MF auch nicht so gut)
				(NF weil ich dann am sechsten gleich nach potsdam fahre)[01;31m)[00m
			(KON und)[01;31m)[00m))
Step:Co-ordination
{'subtrees': ['VF', 'LK', 'MF', 'NF'], 'family': ['SIMPX', 'KON'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJA', 'ADJA', 'NN', 'VAFIN', 'ADV', 'PTKNEG', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'ADV', 'APPR', 'NE', 'VVFIN', 'KON'), 'right siblings': ['KON'], 'parent': 'SU', 'auto preterminal span': (0, 18), 'span': (0, 17), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'Co-ordination', 'type': 'remove'}
(TOP
	(TURN
		[01;31m(SU[00m
			(VF vierter funfter august)
			(LK ist)
			(MF auch nicht so gut)
			(NF weil ich dann am sechsten gleich nach potsdam fahre)
			(KON und)[01;31m)[00m))
Step:Unary
{'subtrees': ['VF', 'LK', 'MF', 'NF', 'KON'], 'family': ['SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJA', 'ADJA', 'NN', 'VAFIN', 'ADV', 'PTKNEG', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'ADV', 'APPR', 'NE', 'VVFIN', 'KON'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 18), 'span': (0, 18), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP vierter funfter august ist auch nicht so gut weil ich dann am sechsten gleich nach potsdam fahre und)

Sentence 272:
0 Initial errors
0 on fringe, 0 iterations

Sentence 273:
3 Initial errors
0 on fringe, 1 iterations
3 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(SIMPX
				(VF die reiseunterlagen)
				(LK kann)
				(MF
					(NX ich)
					(ADVX dann)
					[01;36m(PX[00m [01;31m(ADVX[00m
						(PX am tag)
						[01;36m(ADVX[00m
							(ADV vorher)[01;36m)[00m[01;31m)[00m[01;36m)[00m
					(PX im buro))
				(VC abholen)))))
Step:PP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'ADVX', 'PX', 'ADVX', 'PX'], 'mover info': [('PX', (5, 7))], 'old_family': ['PX', 'ADV'], 'start left siblings': [], 'auto preterminals': ('PPER', 'ADV', 'APPRART', 'NN', 'ADV', 'APPRART', 'NN'), 'start right siblings': ['ADV'], 'end left siblings': ['NX', 'ADVX'], 'auto preterminal span': (3, 10), 'adding node already present': False, 'movers': ['PX'], 'old_parent': 'ADVX', 'added and moved': True, 'end right siblings': ['ADVX', 'PX'], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'PX'}
(TOP die reiseunterlagen kann ich dann am tag vorher im buro abholen)

Sentence 274:
0 Initial errors
0 on fringe, 0 iterations

Sentence 275:
0 Initial errors
0 on fringe, 0 iterations

Sentence 276:
6 Initial errors
0 on fringe, 3 iterations
3 Error:NP Attachment
2 Error:UNSET move
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM schonen guten tag)
			[01;31m(DM[00m
				[01;31m(NX[00m
					[01;36m(DM[00m
						(NX
							(NN reiseburo))[01;36m)[00m
					[01;36m(DM[00m
						[01;36m(SU[00m
							(NX
								(NE okpue))[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:NP Attachment
{'new_parent': 'SU', 'new_family': ['DM', 'DM', 'NX'], 'mover info': [('NX', (4, 5))], 'old_family': ['NX', 'NX'], 'start left siblings': ['NX'], 'auto preterminals': ('ADJA', 'ADJA', 'NN', 'NN', 'NE'), 'start right siblings': [], 'end left siblings': ['DM', 'DM'], 'auto preterminal span': (0, 5), 'movers': ['NX'], 'old_parent': 'NX', 'POS confusion': ('NE', 'NE'), 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM schonen guten tag)
			(DM reiseburo)
			[01;36m(DM[00m
				[01;36m(SU[00m
					(NX
						(NE okpue))[01;36m)[00m[01;36m)[00m[01;31m)[00m))
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['DM', 'DM', 'SU'], 'mover info': [('DM', (0, 3)), ('DM', (3, 4))], 'old_family': ['DM', 'DM', 'NX'], 'start left siblings': [], 'auto preterminals': ('ADJA', 'ADJA', 'NN', 'NN', 'NE'), 'start right siblings': ['NX'], 'end left siblings': [], 'auto preterminal span': (0, 5), 'movers': ['DM', 'DM'], 'old_parent': 'SU', 'end right siblings': ['SU'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM schonen guten tag)
		(DM reiseburo)
		[01;36m(DM[00m
			(SU
				(NX
					(NE okpue)))[01;36m)[00m))
Step:Unary
{'subtrees': ['SU'], 'family': ['DM', 'DM', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('NE',), 'right siblings': [], 'left siblings': [(DM (NX (ADJX (ADJA schonen)) (ADJX (ADJA guten)) (NN tag))), (DM (NX (NN reiseburo)))], 'auto preterminal span': (4, 5), 'span': (4, 5), 'parent': 'TURN', 'label': 'DM', 'classified_type': 'Unary', 'type': 'add'}
(TOP schonen guten tag reiseburo okpue)

Sentence 277:
0 Initial errors
0 on fringe, 0 iterations

Sentence 278:
10 Initial errors
0 on fringe, 9 iterations
1 Error:UNSET add
1 Error:Unary
1 Error:Unary
1 Error:Single Word Phrase
1 Error:UNSET remove
2 Error:Co-ordination
1 Error:Modifier Attachment
1 Error:UNSET remove
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM also)
			(SIMPX die termin der ware am samstag den funften juli)
			[01;31m(SIMPX[00m
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				(VF ich)
				(LK dachte)
				(MF [01;33m(MF[00m
					(ADVX da)
					[01;31m(PX[00m
						(PX an eine anreise)
						(ADVX freitags den vierten juli)[01;31m)[00m)[01;31m)[00m
			[01;31m(NX[00m
				(KON und)
				(NX die abreise)[01;31m)[00m [01;33mMF)[00m
			[01;31m(SIMPX[00m
				(VF das)
				(LK weis)
				(MF ich noch nicht so genau)
				(NF
					(SIMPX
						[01;36m(NF[00m
							[01;36m(SIMPX[00m
								(C da)
								(MF ich eventuell ein paar tage noch in hannover)
								(VC verbringen will)[01;36m)[00m[01;36m)[00m
						[01;31m(NF[00m
							(PX
								(ADVX so)
								(APPR um)
								(NX den siebten achten juli))[01;31m)[00m))[01;31m)[00m[01;31m)[00m))
Step:UNSET add
{'subtrees': ['C', 'MF', 'VC'], 'family': ['SIMPX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'ART', 'PIDAT', 'NN', 'ADV', 'APPR', 'NE', 'VVINF', 'VMFIN'), 'right siblings': [(NF (PX (ADVX (ADV so)) (APPR um) (NX (ART den) (ADJX (ADJX (ADJA siebten)) (ADJX (ADJA achten))) (NN juli))))], 'left siblings': [], 'auto preterminal span': (31, 42), 'span': (31, 42), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM also)
			(SIMPX die termin der ware am samstag den funften juli)
			[01;31m(SIMPX[00m
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				(VF ich)
				(LK dachte)
				(MF [01;33m(MF[00m
					(ADVX da)
					[01;31m(PX[00m
						(PX an eine anreise)
						(ADVX freitags den vierten juli)[01;31m)[00m)[01;31m)[00m
			[01;31m(NX[00m
				(KON und)
				(NX die abreise)[01;31m)[00m [01;33mMF)[00m
			[01;31m(SIMPX[00m
				(VF das)
				(LK weis)
				(MF ich noch nicht so genau)
				(NF
					(SIMPX
						[01;36m(NF[00m
							(SIMPX
								(C da)
								(MF ich eventuell ein paar tage noch in hannover)
								(VC verbringen will))[01;36m)[00m
						[01;31m(NF[00m
							(PX
								(ADVX so)
								(APPR um)
								(NX den siebten achten juli))[01;31m)[00m))[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['NF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'ART', 'PIDAT', 'NN', 'ADV', 'APPR', 'NE', 'VVINF', 'VMFIN'), 'right siblings': [(NF (PX (ADVX (ADV so)) (APPR um) (NX (ART den) (ADJX (ADJX (ADJA siebten)) (ADJX (ADJA achten))) (NN juli))))], 'left siblings': [], 'auto preterminal span': (31, 42), 'span': (31, 42), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM also)
			(SIMPX die termin der ware am samstag den funften juli)
			[01;31m(SIMPX[00m
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				(VF ich)
				(LK dachte)
				(MF [01;33m(MF[00m
					(ADVX da)
					[01;31m(PX[00m
						(PX an eine anreise)
						(ADVX freitags den vierten juli)[01;31m)[00m)[01;31m)[00m
			[01;31m(NX[00m
				(KON und)
				(NX die abreise)[01;31m)[00m [01;33mMF)[00m
			[01;31m(SIMPX[00m
				(VF das)
				(LK weis)
				(MF ich noch nicht so genau)
				(NF
					(SIMPX
						(NF da ich eventuell ein paar tage noch in hannover verbringen will)
						[01;31m(NF[00m
							(PX
								(ADVX so)
								(APPR um)
								(NX den siebten achten juli))[01;31m)[00m))[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['DM', 'SIMPX', 'SIMPX', 'NX', 'SIMPX'], 'family': ['SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ART', 'NN', 'PDS', 'VAFIN', 'APPRART', 'NN', 'ART', 'ADJA', 'NN', 'KON', 'PPER', 'VVFIN', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'ART', 'ADJA', 'NN', 'KON', 'ART', 'NN', 'PDS', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'ART', 'PIDAT', 'NN', 'ADV', 'APPR', 'NE', 'VVINF', 'VMFIN', 'ADV', 'APPR', 'ART', 'ADJA', 'ADJA', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 48), 'span': (0, 48), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX die termin der ware am samstag den funften juli)
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(VF ich)
			(LK dachte)
			(MF [01;33m(MF[00m
				(ADVX da)
				[01;31m(PX[00m
					(PX an eine anreise)
					(ADVX freitags den vierten juli)[01;31m)[00m)[01;31m)[00m
		[01;31m(NX[00m
			(KON und)
			(NX die abreise)[01;31m)[00m [01;33mMF)[00m
		[01;31m(SIMPX[00m
			(VF das)
			(LK weis)
			(MF ich noch nicht so genau)
			(NF
				(SIMPX
					(NF da ich eventuell ein paar tage noch in hannover verbringen will)
					[01;31m(NF[00m
						(PX
							(ADVX so)
							(APPR um)
							(NX den siebten achten juli))[01;31m)[00m))[01;31m)[00m))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['KOORD', 'VF', 'LK', 'MF'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON', 'PPER', 'VVFIN', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'ART', 'ADJA', 'NN'), 'right siblings': ['VF', 'LK', 'MF'], 'parent': 'SIMPX', 'auto preterminal span': (10, 21), 'span': (10, 11), 'left siblings': [], 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX die termin der ware am samstag den funften juli)
		[01;31m(SIMPX[00m
			(KON und)
			(VF ich)
			(LK dachte)
			(MF [01;33m(MF[00m
				(ADVX da)
				[01;31m(PX[00m
					(PX an eine anreise)
					(ADVX freitags den vierten juli)[01;31m)[00m)[01;31m)[00m
		[01;31m(NX[00m
			(KON und)
			(NX die abreise)[01;31m)[00m [01;33mMF)[00m
		[01;31m(SIMPX[00m
			(VF das)
			(LK weis)
			(MF ich noch nicht so genau)
			(NF
				(SIMPX
					(NF da ich eventuell ein paar tage noch in hannover verbringen will)
					[01;31m(NF[00m
						(PX
							(ADVX so)
							(APPR um)
							(NX den siebten achten juli))[01;31m)[00m))[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['KON', 'VF', 'LK', 'MF'], 'family': ['DM', 'SIMPX', 'SIMPX', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ART', 'NN', 'PDS', 'VAFIN', 'APPRART', 'NN', 'ART', 'ADJA', 'NN', 'KON', 'PPER', 'VVFIN', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'ART', 'ADJA', 'NN', 'KON', 'ART', 'NN', 'PDS', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'ART', 'PIDAT', 'NN', 'ADV', 'APPR', 'NE', 'VVINF', 'VMFIN', 'ADV', 'APPR', 'ART', 'ADJA', 'ADJA', 'NN'), 'right siblings': ['NX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 48), 'span': (10, 21), 'left siblings': ['DM', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX die termin der ware am samstag den funften juli)
		(KON und)
		(VF ich)
		(LK dachte)
		[01;36m(MF[00m
			(MF
				(ADVX da)
				[01;31m(PX[00m
					(PX an eine anreise)
					(ADVX freitags den vierten juli)[01;31m)[00m)
			[01;31m(NX[00m
				(KON und)
				(NX die abreise)[01;31m)[00m[01;36m)[00m
		[01;31m(SIMPX[00m
			(VF das)
			(LK weis)
			(MF ich noch nicht so genau)
			(NF
				(SIMPX
					(NF da ich eventuell ein paar tage noch in hannover verbringen will)
					[01;31m(NF[00m
						(PX
							(ADVX so)
							(APPR um)
							(NX den siebten achten juli))[01;31m)[00m))[01;31m)[00m))
Step:Co-ordination
{'new_parent': 'TURN', 'new_family': ['DM', 'SIMPX', 'KON', 'VF', 'LK', 'MF', 'KON', 'NX', 'SIMPX'], 'mover info': [('KON', (21, 22))], 'old_family': ['KON', 'NX'], 'start left siblings': [], 'auto preterminals': ('ADV', 'ART', 'NN', 'PDS', 'VAFIN', 'APPRART', 'NN', 'ART', 'ADJA', 'NN', 'KON', 'PPER', 'VVFIN', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'ART', 'ADJA', 'NN', 'KON', 'ART', 'NN', 'PDS', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'ART', 'PIDAT', 'NN', 'ADV', 'APPR', 'NE', 'VVINF', 'VMFIN', 'ADV', 'APPR', 'ART', 'ADJA', 'ADJA', 'NN'), 'start right siblings': ['NX'], 'end left siblings': ['DM', 'SIMPX', 'KON', 'VF', 'LK', 'MF'], 'auto preterminal span': (0, 48), 'adding node already present': False, 'movers': ['KON'], 'old_parent': 'NX', 'POS confusion': ('KON', 'KON'), 'added and moved': True, 'end right siblings': ['NX', 'SIMPX'], 'classified_type': 'Co-ordination', 'type': 'move', 'added label': 'MF'}
(TOP
	(TURN
		(DM also)
		(SIMPX die termin der ware am samstag den funften juli)
		(KON und)
		(VF ich)
		(LK dachte)
		(MF
			(MF
				(ADVX da)
				[01;31m(PX[00m
					(PX an eine anreise)
					(ADVX freitags den vierten juli)[01;31m)[00m)
			(KON und)
			(NX die abreise))
		[01;31m(SIMPX[00m
			(VF das)
			(LK weis)
			(MF ich noch nicht so genau)
			(NF
				(SIMPX
					(NF da ich eventuell ein paar tage noch in hannover verbringen will)
					[01;31m(NF[00m
						(PX
							(ADVX so)
							(APPR um)
							(NX den siebten achten juli))[01;31m)[00m))[01;31m)[00m))
Step:Modifier Attachment
{'subtrees': ['PX', 'ADVX'], 'family': ['ADVX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'APPR', 'ART', 'NN', 'ADV', 'ART', 'ADJA', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (13, 21), 'span': (14, 21), 'left siblings': ['ADVX'], 'label': 'PX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX die termin der ware am samstag den funften juli)
		(KON und)
		(VF ich)
		(LK dachte)
		(MF da an eine anreise freitags den vierten juli und die abreise)
		[01;31m(SIMPX[00m
			(VF das)
			(LK weis)
			(MF ich noch nicht so genau)
			(NF
				(SIMPX
					(NF da ich eventuell ein paar tage noch in hannover verbringen will)
					[01;31m(NF[00m
						(PX
							(ADVX so)
							(APPR um)
							(NX den siebten achten juli))[01;31m)[00m))[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'NF'], 'family': ['DM', 'SIMPX', 'KON', 'VF', 'LK', 'MF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ART', 'NN', 'PDS', 'VAFIN', 'APPRART', 'NN', 'ART', 'ADJA', 'NN', 'KON', 'PPER', 'VVFIN', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'ART', 'ADJA', 'NN', 'KON', 'ART', 'NN', 'PDS', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'ART', 'PIDAT', 'NN', 'ADV', 'APPR', 'NE', 'VVINF', 'VMFIN', 'ADV', 'APPR', 'ART', 'ADJA', 'ADJA', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 48), 'span': (24, 48), 'left siblings': ['DM', 'SIMPX', 'KON', 'VF', 'LK', 'MF'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX die termin der ware am samstag den funften juli)
		(KON und)
		(VF ich)
		(LK dachte)
		(MF da an eine anreise freitags den vierten juli und die abreise)
		(VF das)
		(LK weis)
		(MF ich noch nicht so genau)
		(NF
			(SIMPX
				(NF da ich eventuell ein paar tage noch in hannover verbringen will)
				[01;31m(NF[00m
					(PX
						(ADVX so)
						(APPR um)
						(NX den siebten achten juli))[01;31m)[00m))))
Step:Unary
{'subtrees': ['PX'], 'family': ['NF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'ART', 'PIDAT', 'NN', 'ADV', 'APPR', 'NE', 'VVINF', 'VMFIN', 'ADV', 'APPR', 'ART', 'ADJA', 'ADJA', 'NN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (31, 48), 'span': (42, 48), 'left siblings': ['NF'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP also die termin der ware am samstag den funften juli und ich dachte da an eine anreise freitags den vierten juli und die abreise das weis ich noch nicht so genau da ich eventuell ein paar tage noch in hannover verbringen will so um den siebten achten juli)

Sentence 279:
0 Initial errors
0 on fringe, 0 iterations

Sentence 280:
0 Initial errors
0 on fringe, 0 iterations

Sentence 281:
0 Initial errors
0 on fringe, 0 iterations

Sentence 282:
24 Initial errors
0 on fringe, 15 iterations
4 Error:Modifier Attachment
2 Error:Single Word Phrase
2 Error:Single Word Phrase
2 Error:Different label
2 Error:NP Attachment
2 Error:UNSET move
2 Error:Modifier Attachment
1 Error:Clause Attachment
1 Error:Clause Attachment
1 Error:Unary
1 Error:UNSET remove
1 Error:Clause Attachment
1 Error:UNSET remove
1 Error:PP Attachment
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;36m(SU[00m
				(DM ja)
				(DM also)
				(SIMPX wir haben hier jetzt drei hotels die wir wieder gerne empfehlen)[01;36m)[00m
			[01;31m(SIMPX[00m
				[01;31m(LV[00m
					[01;31m(NX[00m
						(PX zum einen)
						[01;33m(NX[00m (NX das hotel am thielenplatz)[01;31m)[00m[01;31m)[00m
				[01;36m(SIMPX[00m
					(VF das)
					(LK liegt)
					[01;36m(PX[00m
						(MF [01;33m(PX[00m
							(ADVX so)
							[01;31m(PX[00m
								[01;31m(PX[00m
									(APPR bis)
									(NX hundert dreisig mark)[01;31m)[00m [01;33mPX)[00m
								(PX pro zimmer)[01;31m)[00m)[01;36m)[00m[01;36m)[00m[01;31m)[00m [01;33mNX)[00m
			[01;36m(SIMPX[00m
				(SIMPX und dann gibt es ein zentralhotel)
				(SIMPX das ist wirklich auch sehr zentral)[01;36m)[00m
			[01;31m(SIMPX[00m
				(VF das)
				(LK geht)
				[01;36m(PX[00m
					(MF
						(ADVX so)
						[01;31m(PX[00m
							(APPR bis)
							(NX zweihundert zwanzig)[01;31m)[00m)[01;36m)[00m[01;31m)[00m
			[01;31m(NX[00m
				(KON und)
				[01;31m(PX[00m
					[01;36m(PX[00m [01;31m(ADVX[00m
						(ADV naturlich)[01;31m)[00m[01;36m)[00m
					(ADVX jetzt)
					(PX fur gehobene anspruche)[01;31m)[00m
				(NX das grandhotel)[01;31m)[00m
			(SIMPX da musten sie allerdings schon funfhundert mark hinlegen)
			[01;36m(SIMPX[00m
				[01;36m(C[00m [01;31m(DM[00m
					(PWAV wobei)[01;31m)[00m[01;36m)[00m
				(SIMPX
					[01;36m(MF[00m [01;31m(VF[00m
						(NX
							(PPER ich))[01;31m)[00m[01;36m)[00m
					(LK weis)
					(MF ja nicht)
					(NF ob das))[01;36m)[00m[01;31m)[00m))
Step:Modifier Attachment
{'new_parent': 'PX', 'new_family': ['ADVX', 'APPR', 'NX'], 'mover info': [('ADVX', (21, 22))], 'old_family': ['ADVX', 'PX'], 'start left siblings': [], 'auto preterminals': ('ADV', 'APPR', 'CARD', 'CARD', 'NN', 'APPR', 'NN'), 'start right siblings': ['PX'], 'end left siblings': [], 'auto preterminal span': (21, 28), 'movers': ['ADVX'], 'old_parent': 'MF', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['APPR', 'NX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;36m(SU[00m
				(DM ja)
				(DM also)
				(SIMPX wir haben hier jetzt drei hotels die wir wieder gerne empfehlen)[01;36m)[00m
			[01;31m(SIMPX[00m
				[01;31m(LV[00m
					[01;31m(NX[00m
						(PX zum einen)
						[01;33m(NX[00m (NX das hotel am thielenplatz)[01;31m)[00m[01;31m)[00m
				[01;36m(SIMPX[00m
					(VF das)
					(LK liegt)
					(MF so bis hundert dreisig mark pro zimmer)[01;36m)[00m[01;31m)[00m [01;33mNX)[00m
			[01;36m(SIMPX[00m
				(SIMPX und dann gibt es ein zentralhotel)
				(SIMPX das ist wirklich auch sehr zentral)[01;36m)[00m
			[01;31m(SIMPX[00m
				(VF das)
				(LK geht)
				[01;36m(PX[00m
					(MF
						(ADVX so)
						[01;31m(PX[00m
							(APPR bis)
							(NX zweihundert zwanzig)[01;31m)[00m)[01;36m)[00m[01;31m)[00m
			[01;31m(NX[00m
				(KON und)
				[01;31m(PX[00m
					[01;36m(PX[00m [01;31m(ADVX[00m
						(ADV naturlich)[01;31m)[00m[01;36m)[00m
					(ADVX jetzt)
					(PX fur gehobene anspruche)[01;31m)[00m
				(NX das grandhotel)[01;31m)[00m
			(SIMPX da musten sie allerdings schon funfhundert mark hinlegen)
			[01;36m(SIMPX[00m
				[01;36m(C[00m [01;31m(DM[00m
					(PWAV wobei)[01;31m)[00m[01;36m)[00m
				(SIMPX
					[01;36m(MF[00m [01;31m(VF[00m
						(NX
							(PPER ich))[01;31m)[00m[01;36m)[00m
					(LK weis)
					(MF ja nicht)
					(NF ob das))[01;36m)[00m[01;31m)[00m))
Step:Single Word Phrase
{'family': ['PX', 'ADVX', 'PX'], 'auto preterminal span': (47, 48), 'span': (47, 48), 'subtrees': ['ADV'], 'parent': 'PX', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'PX')}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;36m(SU[00m
				(DM ja)
				(DM also)
				(SIMPX wir haben hier jetzt drei hotels die wir wieder gerne empfehlen)[01;36m)[00m
			[01;31m(SIMPX[00m
				[01;31m(LV[00m
					[01;31m(NX[00m
						(PX zum einen)
						[01;33m(NX[00m (NX das hotel am thielenplatz)[01;31m)[00m[01;31m)[00m
				[01;36m(SIMPX[00m
					(VF das)
					(LK liegt)
					(MF so bis hundert dreisig mark pro zimmer)[01;36m)[00m[01;31m)[00m [01;33mNX)[00m
			[01;36m(SIMPX[00m
				(SIMPX und dann gibt es ein zentralhotel)
				(SIMPX das ist wirklich auch sehr zentral)[01;36m)[00m
			[01;31m(SIMPX[00m
				(VF das)
				(LK geht)
				[01;36m(PX[00m
					(MF
						(ADVX so)
						[01;31m(PX[00m
							(APPR bis)
							(NX zweihundert zwanzig)[01;31m)[00m)[01;36m)[00m[01;31m)[00m
			[01;31m(NX[00m
				(KON und)
				[01;31m(PX[00m
					(PX naturlich)
					(ADVX jetzt)
					(PX fur gehobene anspruche)[01;31m)[00m
				(NX das grandhotel)[01;31m)[00m
			(SIMPX da musten sie allerdings schon funfhundert mark hinlegen)
			[01;36m(SIMPX[00m
				[01;36m(C[00m [01;31m(DM[00m
					(PWAV wobei)[01;31m)[00m[01;36m)[00m
				(SIMPX
					[01;36m(MF[00m [01;31m(VF[00m
						(NX
							(PPER ich))[01;31m)[00m[01;36m)[00m
					(LK weis)
					(MF ja nicht)
					(NF ob das))[01;36m)[00m[01;31m)[00m))
Step:Single Word Phrase
{'family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX', 'C', 'SIMPX'], 'auto preterminal span': (62, 63), 'span': (62, 63), 'subtrees': ['PWAV'], 'parent': 'SU', 'over_word': True, 'auto preterminals': ('PWAV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('DM', 'C')}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;36m(SU[00m
				(DM ja)
				(DM also)
				(SIMPX wir haben hier jetzt drei hotels die wir wieder gerne empfehlen)[01;36m)[00m
			[01;31m(SIMPX[00m
				[01;31m(LV[00m
					[01;31m(NX[00m
						(PX zum einen)
						[01;33m(NX[00m (NX das hotel am thielenplatz)[01;31m)[00m[01;31m)[00m
				[01;36m(SIMPX[00m
					(VF das)
					(LK liegt)
					(MF so bis hundert dreisig mark pro zimmer)[01;36m)[00m[01;31m)[00m [01;33mNX)[00m
			[01;36m(SIMPX[00m
				(SIMPX und dann gibt es ein zentralhotel)
				(SIMPX das ist wirklich auch sehr zentral)[01;36m)[00m
			[01;31m(SIMPX[00m
				(VF das)
				(LK geht)
				[01;36m(PX[00m
					(MF
						(ADVX so)
						[01;31m(PX[00m
							(APPR bis)
							(NX zweihundert zwanzig)[01;31m)[00m)[01;36m)[00m[01;31m)[00m
			[01;31m(NX[00m
				(KON und)
				[01;31m(PX[00m
					(PX naturlich)
					(ADVX jetzt)
					(PX fur gehobene anspruche)[01;31m)[00m
				(NX das grandhotel)[01;31m)[00m
			(SIMPX da musten sie allerdings schon funfhundert mark hinlegen)
			[01;36m(SIMPX[00m
				(C wobei)
				(SIMPX
					[01;36m(MF[00m [01;31m(VF[00m
						(NX
							(PPER ich))[01;31m)[00m[01;36m)[00m
					(LK weis)
					(MF ja nicht)
					(NF ob das))[01;36m)[00m[01;31m)[00m))
Step:Different label
{'family': ['MF', 'LK', 'MF', 'NF'], 'auto preterminal span': (63, 64), 'span': (63, 64), 'subtrees': ['NX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('PPER',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('VF', 'MF')}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;36m(SU[00m
				(DM ja)
				(DM also)
				(SIMPX wir haben hier jetzt drei hotels die wir wieder gerne empfehlen)[01;36m)[00m
			[01;31m(SIMPX[00m
				[01;31m(LV[00m
					[01;31m(NX[00m
						(PX zum einen)
						[01;33m(NX[00m (NX das hotel am thielenplatz)[01;31m)[00m[01;31m)[00m
				[01;36m(SIMPX[00m
					(VF das)
					(LK liegt)
					(MF so bis hundert dreisig mark pro zimmer)[01;36m)[00m[01;31m)[00m [01;33mNX)[00m
			[01;36m(SIMPX[00m
				(SIMPX und dann gibt es ein zentralhotel)
				(SIMPX das ist wirklich auch sehr zentral)[01;36m)[00m
			[01;31m(SIMPX[00m
				(VF das)
				(LK geht)
				[01;36m(PX[00m
					(MF
						(ADVX so)
						[01;31m(PX[00m
							(APPR bis)
							(NX zweihundert zwanzig)[01;31m)[00m)[01;36m)[00m[01;31m)[00m
			[01;31m(NX[00m
				(KON und)
				[01;31m(PX[00m
					(PX naturlich)
					(ADVX jetzt)
					(PX fur gehobene anspruche)[01;31m)[00m
				(NX das grandhotel)[01;31m)[00m
			(SIMPX da musten sie allerdings schon funfhundert mark hinlegen)
			[01;36m(SIMPX[00m
				(C wobei)
				(SIMPX ich weis ja nicht ob das)[01;36m)[00m[01;31m)[00m))
Step:NP Attachment
{'new_parent': 'TURN', 'new_family': ['SU', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX', 'C', 'SIMPX'], 'mover info': [('SIMPX', (13, 28)), ('SIMPX', (28, 34)), ('SIMPX', (34, 40)), ('SIMPX', (40, 46)), ('NX', (46, 54)), ('SIMPX', (54, 62)), ('C', (62, 63)), ('SIMPX', (63, 69))], 'old_family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX', 'C', 'SIMPX'], 'start left siblings': ['DM', 'DM', 'SIMPX'], 'auto preterminals': ('PTKANT', 'ADV', 'PPER', 'VAFIN', 'ADV', 'ADV', 'CARD', 'NN', 'PRELS', 'PPER', 'ADV', 'ADV', 'VVFIN', 'APPRART', 'PIS', 'ART', 'NN', 'APPRART', 'NE', 'PDS', 'VVFIN', 'ADV', 'APPR', 'CARD', 'CARD', 'NN', 'APPR', 'NN', 'KON', 'ADV', 'VVFIN', 'PPER', 'ART', 'NE', 'PDS', 'VAFIN', 'ADV', 'ADV', 'ADV', 'ADJD', 'PDS', 'VVFIN', 'ADV', 'APPR', 'CARD', 'CARD', 'KON', 'ADV', 'ADV', 'APPR', 'ADJA', 'NN', 'ART', 'NE', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'CARD', 'NN', 'VVINF', 'PWAV', 'PPER', 'VVFIN', 'ADV', 'PTKNEG', 'KOUS', 'PDS'), 'start right siblings': [], 'end left siblings': ['SU'], 'auto preterminal span': (0, 69), 'movers': ['SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX', 'C', 'SIMPX'], 'old_parent': 'SU', 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU ja also wir haben hier jetzt drei hotels die wir wieder gerne empfehlen)
		[01;31m(SIMPX[00m
			[01;31m(LV[00m
				[01;31m(NX[00m
					(PX zum einen)
					[01;33m(NX[00m (NX das hotel am thielenplatz)[01;31m)[00m[01;31m)[00m
			[01;36m(SIMPX[00m
				(VF das)
				(LK liegt)
				(MF so bis hundert dreisig mark pro zimmer)[01;36m)[00m[01;31m)[00m [01;33mNX)[00m
		[01;36m(SIMPX[00m
			(SIMPX und dann gibt es ein zentralhotel)
			(SIMPX das ist wirklich auch sehr zentral)[01;36m)[00m
		[01;31m(SIMPX[00m
			(VF das)
			(LK geht)
			[01;36m(PX[00m
				(MF
					(ADVX so)
					[01;31m(PX[00m
						(APPR bis)
						(NX zweihundert zwanzig)[01;31m)[00m)[01;36m)[00m[01;31m)[00m
		[01;31m(NX[00m
			(KON und)
			[01;31m(PX[00m
				(PX naturlich)
				(ADVX jetzt)
				(PX fur gehobene anspruche)[01;31m)[00m
			(NX das grandhotel)[01;31m)[00m
		(SIMPX da musten sie allerdings schon funfhundert mark hinlegen)
		[01;36m(SIMPX[00m
			(C wobei)
			(SIMPX ich weis ja nicht ob das)[01;36m)[00m))
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['SU', 'LV', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX', 'C', 'SIMPX'], 'mover info': [('LV', (13, 19))], 'old_family': ['LV', 'VF', 'LK', 'MF'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'ADV', 'PPER', 'VAFIN', 'ADV', 'ADV', 'CARD', 'NN', 'PRELS', 'PPER', 'ADV', 'ADV', 'VVFIN', 'APPRART', 'PIS', 'ART', 'NN', 'APPRART', 'NE', 'PDS', 'VVFIN', 'ADV', 'APPR', 'CARD', 'CARD', 'NN', 'APPR', 'NN', 'KON', 'ADV', 'VVFIN', 'PPER', 'ART', 'NE', 'PDS', 'VAFIN', 'ADV', 'ADV', 'ADV', 'ADJD', 'PDS', 'VVFIN', 'ADV', 'APPR', 'CARD', 'CARD', 'KON', 'ADV', 'ADV', 'APPR', 'ADJA', 'NN', 'ART', 'NE', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'CARD', 'NN', 'VVINF', 'PWAV', 'PPER', 'VVFIN', 'ADV', 'PTKNEG', 'KOUS', 'PDS'), 'start right siblings': ['VF', 'LK', 'MF'], 'end left siblings': ['SU'], 'auto preterminal span': (0, 69), 'movers': ['LV'], 'old_parent': 'SIMPX', 'end right siblings': ['SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX', 'C', 'SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU ja also wir haben hier jetzt drei hotels die wir wieder gerne empfehlen)
		[01;31m(LV[00m
			[01;31m(NX[00m
				(PX zum einen)
				[01;33m(NX[00m (NX das hotel am thielenplatz)[01;31m)[00m[01;31m)[00m
		(SIMPX das liegt so bis hundert dreisig mark pro zimmer) [01;33mNX)[00m
		[01;36m(SIMPX[00m
			(SIMPX und dann gibt es ein zentralhotel)
			(SIMPX das ist wirklich auch sehr zentral)[01;36m)[00m
		[01;31m(SIMPX[00m
			(VF das)
			(LK geht)
			[01;36m(PX[00m
				(MF
					(ADVX so)
					[01;31m(PX[00m
						(APPR bis)
						(NX zweihundert zwanzig)[01;31m)[00m)[01;36m)[00m[01;31m)[00m
		[01;31m(NX[00m
			(KON und)
			[01;31m(PX[00m
				(PX naturlich)
				(ADVX jetzt)
				(PX fur gehobene anspruche)[01;31m)[00m
			(NX das grandhotel)[01;31m)[00m
		(SIMPX da musten sie allerdings schon funfhundert mark hinlegen)
		[01;36m(SIMPX[00m
			(C wobei)
			(SIMPX ich weis ja nicht ob das)[01;36m)[00m))
Step:Modifier Attachment
{'new_parent': 'PX', 'new_family': ['ADVX', 'APPR', 'NX'], 'mover info': [('ADVX', (42, 43))], 'old_family': ['ADVX', 'PX'], 'start left siblings': [], 'auto preterminals': ('ADV', 'APPR', 'CARD', 'CARD'), 'start right siblings': ['PX'], 'end left siblings': [], 'auto preterminal span': (42, 46), 'movers': ['ADVX'], 'old_parent': 'MF', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['APPR', 'NX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU ja also wir haben hier jetzt drei hotels die wir wieder gerne empfehlen)
		[01;31m(LV[00m
			[01;31m(NX[00m
				(PX zum einen)
				[01;33m(NX[00m (NX das hotel am thielenplatz)[01;31m)[00m[01;31m)[00m
		(SIMPX das liegt so bis hundert dreisig mark pro zimmer) [01;33mNX)[00m
		[01;36m(SIMPX[00m
			(SIMPX und dann gibt es ein zentralhotel)
			(SIMPX das ist wirklich auch sehr zentral)[01;36m)[00m
		[01;31m(SIMPX[00m
			(VF das)
			(LK geht)
			(MF so bis zweihundert zwanzig)[01;31m)[00m
		[01;31m(NX[00m
			(KON und)
			[01;31m(PX[00m
				(PX naturlich)
				(ADVX jetzt)
				(PX fur gehobene anspruche)[01;31m)[00m
			(NX das grandhotel)[01;31m)[00m
		(SIMPX da musten sie allerdings schon funfhundert mark hinlegen)
		[01;36m(SIMPX[00m
			(C wobei)
			(SIMPX ich weis ja nicht ob das)[01;36m)[00m))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['SU', 'LV', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX', 'C', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'ADV', 'VVFIN', 'PPER', 'ART', 'NE', 'PDS', 'VAFIN', 'ADV', 'ADV', 'ADV', 'ADJD'), 'right siblings': [(SIMPX (VF (NX (PDS das))) (LK (VXFIN (VVFIN geht))) (MF (PX (ADVX (ADV so)) (APPR bis) (NX (CARD zweihundert) (CARD zwanzig))))), (NX (KON und) (PX (PX (ADV naturlich)) (ADVX (ADV jetzt)) (PX (APPR fur) (NX (ADJX (ADJA gehobene)) (NN anspruche)))) (NX (ART das) (NE grandhotel))), (SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VMFIN musten))) (MF (NX (PPER sie)) (ADVX (ADV allerdings)) (ADVX (ADV schon)) (NX (ADJX (CARD funfhundert)) (NN mark))) (VC (VXINF (VVINF hinlegen)))), (C (PWAV wobei)), (SIMPX (MF (NX (PPER ich))) (LK (VXFIN (VVFIN weis))) (MF (ADVX (ADV ja)) (ADVX (PTKNEG nicht))) (NF (SIMPX (C (KOUS ob)) (MF (NX (PDS das))))))], 'left siblings': [(SU (DM (PTKANT ja)) (DM (ADVX (ADV also))) (SIMPX (VF (NX (PPER wir))) (LK (VXFIN (VAFIN haben))) (MF (ADVX (ADV hier)) (ADVX (ADV jetzt)) (NX (ADJX (CARD drei)) (NN hotels))) (NF (R (C (NX (PRELS die))) (MF (NX (PPER wir)) (ADVX (ADV wieder)) (ADVX (ADV gerne))) (VC (VXFIN (VVFIN empfehlen))))))), (LV (NX (PX (APPRART zum) (NX (PIS einen))) (NX (NX (ART das) (NN hotel)) (PX (APPRART am) (NX (NE thielenplatz)))))), (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VVFIN liegt))) (MF (PX (PX (ADVX (ADV so)) (APPR bis) (NX (ADJX (CARD hundert) (CARD dreisig)) (NN mark))) (PX (APPR pro) (NX (NN zimmer))))))], 'auto preterminal span': (28, 40), 'span': (28, 40), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU ja also wir haben hier jetzt drei hotels die wir wieder gerne empfehlen)
		[01;31m(LV[00m
			[01;31m(NX[00m
				(PX zum einen)
				[01;33m(NX[00m (NX das hotel am thielenplatz)[01;31m)[00m[01;31m)[00m
		(SIMPX das liegt so bis hundert dreisig mark pro zimmer) [01;33mNX)[00m
		(SIMPX und dann gibt es ein zentralhotel das ist wirklich auch sehr zentral)
		[01;31m(SIMPX[00m
			(VF das)
			(LK geht)
			(MF so bis zweihundert zwanzig)[01;31m)[00m
		[01;31m(NX[00m
			(KON und)
			[01;31m(PX[00m
				(PX naturlich)
				(ADVX jetzt)
				(PX fur gehobene anspruche)[01;31m)[00m
			(NX das grandhotel)[01;31m)[00m
		(SIMPX da musten sie allerdings schon funfhundert mark hinlegen)
		[01;36m(SIMPX[00m
			(C wobei)
			(SIMPX ich weis ja nicht ob das)[01;36m)[00m))
Step:Clause Attachment
{'subtrees': ['C', 'SIMPX'], 'family': ['SU', 'LV', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PWAV', 'PPER', 'VVFIN', 'ADV', 'PTKNEG', 'KOUS', 'PDS'), 'right siblings': [], 'left siblings': [(SU (DM (PTKANT ja)) (DM (ADVX (ADV also))) (SIMPX (VF (NX (PPER wir))) (LK (VXFIN (VAFIN haben))) (MF (ADVX (ADV hier)) (ADVX (ADV jetzt)) (NX (ADJX (CARD drei)) (NN hotels))) (NF (R (C (NX (PRELS die))) (MF (NX (PPER wir)) (ADVX (ADV wieder)) (ADVX (ADV gerne))) (VC (VXFIN (VVFIN empfehlen))))))), (LV (NX (PX (APPRART zum) (NX (PIS einen))) (NX (NX (ART das) (NN hotel)) (PX (APPRART am) (NX (NE thielenplatz)))))), (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VVFIN liegt))) (MF (PX (PX (ADVX (ADV so)) (APPR bis) (NX (ADJX (CARD hundert) (CARD dreisig)) (NN mark))) (PX (APPR pro) (NX (NN zimmer)))))), (SIMPX (SIMPX (KOORD (KON und)) (VF (ADVX (ADV dann))) (LK (VXFIN (VVFIN gibt))) (MF (NX (PPER es)) (NX (ART ein) (NE zentralhotel)))) (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VAFIN ist))) (MF (ADVX (ADV wirklich)) (ADVX (ADV auch)) (ADJX (ADVX (ADV sehr)) (ADJD zentral))))), (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VVFIN geht))) (MF (PX (ADVX (ADV so)) (APPR bis) (NX (CARD zweihundert) (CARD zwanzig))))), (NX (KON und) (PX (PX (ADV naturlich)) (ADVX (ADV jetzt)) (PX (APPR fur) (NX (ADJX (ADJA gehobene)) (NN anspruche)))) (NX (ART das) (NE grandhotel))), (SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VMFIN musten))) (MF (NX (PPER sie)) (ADVX (ADV allerdings)) (ADVX (ADV schon)) (NX (ADJX (CARD funfhundert)) (NN mark))) (VC (VXINF (VVINF hinlegen))))], 'auto preterminal span': (62, 69), 'span': (62, 69), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU ja also wir haben hier jetzt drei hotels die wir wieder gerne empfehlen)
		[01;31m(LV[00m
			[01;31m(NX[00m
				(PX zum einen)
				[01;33m(NX[00m (NX das hotel am thielenplatz)[01;31m)[00m[01;31m)[00m
		(SIMPX das liegt so bis hundert dreisig mark pro zimmer) [01;33mNX)[00m
		(SIMPX und dann gibt es ein zentralhotel das ist wirklich auch sehr zentral)
		[01;31m(SIMPX[00m
			(VF das)
			(LK geht)
			(MF so bis zweihundert zwanzig)[01;31m)[00m
		[01;31m(NX[00m
			(KON und)
			[01;31m(PX[00m
				(PX naturlich)
				(ADVX jetzt)
				(PX fur gehobene anspruche)[01;31m)[00m
			(NX das grandhotel)[01;31m)[00m
		(SIMPX da musten sie allerdings schon funfhundert mark hinlegen)
		(SIMPX wobei ich weis ja nicht ob das)))
Step:Unary
{'subtrees': ['NX'], 'family': ['SU', 'LV', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADV', 'PPER', 'VAFIN', 'ADV', 'ADV', 'CARD', 'NN', 'PRELS', 'PPER', 'ADV', 'ADV', 'VVFIN', 'APPRART', 'PIS', 'ART', 'NN', 'APPRART', 'NE', 'PDS', 'VVFIN', 'ADV', 'APPR', 'CARD', 'CARD', 'NN', 'APPR', 'NN', 'KON', 'ADV', 'VVFIN', 'PPER', 'ART', 'NE', 'PDS', 'VAFIN', 'ADV', 'ADV', 'ADV', 'ADJD', 'PDS', 'VVFIN', 'ADV', 'APPR', 'CARD', 'CARD', 'KON', 'ADV', 'ADV', 'APPR', 'ADJA', 'NN', 'ART', 'NE', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'CARD', 'NN', 'VVINF', 'PWAV', 'PPER', 'VVFIN', 'ADV', 'PTKNEG', 'KOUS', 'PDS'), 'right siblings': ['SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 69), 'span': (13, 19), 'left siblings': ['SU'], 'label': 'LV', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU ja also wir haben hier jetzt drei hotels die wir wieder gerne empfehlen)
		[01;31m(NX[00m
			(PX zum einen)
			[01;33m(NX[00m (NX das hotel am thielenplatz)[01;31m)[00m
		(SIMPX das liegt so bis hundert dreisig mark pro zimmer) [01;33mNX)[00m
		(SIMPX und dann gibt es ein zentralhotel das ist wirklich auch sehr zentral)
		[01;31m(SIMPX[00m
			(VF das)
			(LK geht)
			(MF so bis zweihundert zwanzig)[01;31m)[00m
		[01;31m(NX[00m
			(KON und)
			[01;31m(PX[00m
				(PX naturlich)
				(ADVX jetzt)
				(PX fur gehobene anspruche)[01;31m)[00m
			(NX das grandhotel)[01;31m)[00m
		(SIMPX da musten sie allerdings schon funfhundert mark hinlegen)
		(SIMPX wobei ich weis ja nicht ob das)))
Step:UNSET remove
{'subtrees': ['PX', 'NX'], 'family': ['SU', 'NX', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADV', 'PPER', 'VAFIN', 'ADV', 'ADV', 'CARD', 'NN', 'PRELS', 'PPER', 'ADV', 'ADV', 'VVFIN', 'APPRART', 'PIS', 'ART', 'NN', 'APPRART', 'NE', 'PDS', 'VVFIN', 'ADV', 'APPR', 'CARD', 'CARD', 'NN', 'APPR', 'NN', 'KON', 'ADV', 'VVFIN', 'PPER', 'ART', 'NE', 'PDS', 'VAFIN', 'ADV', 'ADV', 'ADV', 'ADJD', 'PDS', 'VVFIN', 'ADV', 'APPR', 'CARD', 'CARD', 'KON', 'ADV', 'ADV', 'APPR', 'ADJA', 'NN', 'ART', 'NE', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'CARD', 'NN', 'VVINF', 'PWAV', 'PPER', 'VVFIN', 'ADV', 'PTKNEG', 'KOUS', 'PDS'), 'right siblings': ['SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 69), 'span': (13, 19), 'left siblings': ['SU'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU ja also wir haben hier jetzt drei hotels die wir wieder gerne empfehlen)
		(PX zum einen)
		[01;36m(NX[00m
			(NX das hotel am thielenplatz)
			(SIMPX das liegt so bis hundert dreisig mark pro zimmer)[01;36m)[00m
		(SIMPX und dann gibt es ein zentralhotel das ist wirklich auch sehr zentral)
		[01;31m(SIMPX[00m
			(VF das)
			(LK geht)
			(MF so bis zweihundert zwanzig)[01;31m)[00m
		[01;31m(NX[00m
			(KON und)
			[01;31m(PX[00m
				(PX naturlich)
				(ADVX jetzt)
				(PX fur gehobene anspruche)[01;31m)[00m
			(NX das grandhotel)[01;31m)[00m
		(SIMPX da musten sie allerdings schon funfhundert mark hinlegen)
		(SIMPX wobei ich weis ja nicht ob das)))
Step:Clause Attachment
{'subtrees': ['NX', 'SIMPX'], 'family': ['SU', 'PX', 'NX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'APPRART', 'NE', 'PDS', 'VVFIN', 'ADV', 'APPR', 'CARD', 'CARD', 'NN', 'APPR', 'NN'), 'right siblings': [(SIMPX (SIMPX (KOORD (KON und)) (VF (ADVX (ADV dann))) (LK (VXFIN (VVFIN gibt))) (MF (NX (PPER es)) (NX (ART ein) (NE zentralhotel)))) (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VAFIN ist))) (MF (ADVX (ADV wirklich)) (ADVX (ADV auch)) (ADJX (ADVX (ADV sehr)) (ADJD zentral))))), (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VVFIN geht))) (MF (PX (ADVX (ADV so)) (APPR bis) (NX (CARD zweihundert) (CARD zwanzig))))), (NX (KON und) (PX (PX (ADV naturlich)) (ADVX (ADV jetzt)) (PX (APPR fur) (NX (ADJX (ADJA gehobene)) (NN anspruche)))) (NX (ART das) (NE grandhotel))), (SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VMFIN musten))) (MF (NX (PPER sie)) (ADVX (ADV allerdings)) (ADVX (ADV schon)) (NX (ADJX (CARD funfhundert)) (NN mark))) (VC (VXINF (VVINF hinlegen)))), (SIMPX (C (PWAV wobei)) (SIMPX (MF (NX (PPER ich))) (LK (VXFIN (VVFIN weis))) (MF (ADVX (ADV ja)) (ADVX (PTKNEG nicht))) (NF (SIMPX (C (KOUS ob)) (MF (NX (PDS das)))))))], 'left siblings': [(SU (DM (PTKANT ja)) (DM (ADVX (ADV also))) (SIMPX (VF (NX (PPER wir))) (LK (VXFIN (VAFIN haben))) (MF (ADVX (ADV hier)) (ADVX (ADV jetzt)) (NX (ADJX (CARD drei)) (NN hotels))) (NF (R (C (NX (PRELS die))) (MF (NX (PPER wir)) (ADVX (ADV wieder)) (ADVX (ADV gerne))) (VC (VXFIN (VVFIN empfehlen))))))), (PX (APPRART zum) (NX (PIS einen)))], 'auto preterminal span': (15, 28), 'span': (15, 28), 'parent': 'TURN', 'label': 'NX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU ja also wir haben hier jetzt drei hotels die wir wieder gerne empfehlen)
		(PX zum einen)
		(NX das hotel am thielenplatz das liegt so bis hundert dreisig mark pro zimmer)
		(SIMPX und dann gibt es ein zentralhotel das ist wirklich auch sehr zentral)
		[01;31m(SIMPX[00m
			(VF das)
			(LK geht)
			(MF so bis zweihundert zwanzig)[01;31m)[00m
		[01;31m(NX[00m
			(KON und)
			[01;31m(PX[00m
				(PX naturlich)
				(ADVX jetzt)
				(PX fur gehobene anspruche)[01;31m)[00m
			(NX das grandhotel)[01;31m)[00m
		(SIMPX da musten sie allerdings schon funfhundert mark hinlegen)
		(SIMPX wobei ich weis ja nicht ob das)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['SU', 'PX', 'NX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADV', 'PPER', 'VAFIN', 'ADV', 'ADV', 'CARD', 'NN', 'PRELS', 'PPER', 'ADV', 'ADV', 'VVFIN', 'APPRART', 'PIS', 'ART', 'NN', 'APPRART', 'NE', 'PDS', 'VVFIN', 'ADV', 'APPR', 'CARD', 'CARD', 'NN', 'APPR', 'NN', 'KON', 'ADV', 'VVFIN', 'PPER', 'ART', 'NE', 'PDS', 'VAFIN', 'ADV', 'ADV', 'ADV', 'ADJD', 'PDS', 'VVFIN', 'ADV', 'APPR', 'CARD', 'CARD', 'KON', 'ADV', 'ADV', 'APPR', 'ADJA', 'NN', 'ART', 'NE', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'CARD', 'NN', 'VVINF', 'PWAV', 'PPER', 'VVFIN', 'ADV', 'PTKNEG', 'KOUS', 'PDS'), 'right siblings': ['NX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 69), 'span': (40, 46), 'left siblings': ['SU', 'PX', 'NX', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU ja also wir haben hier jetzt drei hotels die wir wieder gerne empfehlen)
		(PX zum einen)
		(NX das hotel am thielenplatz das liegt so bis hundert dreisig mark pro zimmer)
		(SIMPX und dann gibt es ein zentralhotel das ist wirklich auch sehr zentral)
		(VF das)
		(LK geht)
		(MF so bis zweihundert zwanzig)
		[01;31m(NX[00m
			(KON und)
			[01;31m(PX[00m
				(PX naturlich)
				(ADVX jetzt)
				(PX fur gehobene anspruche)[01;31m)[00m
			(NX das grandhotel)[01;31m)[00m
		(SIMPX da musten sie allerdings schon funfhundert mark hinlegen)
		(SIMPX wobei ich weis ja nicht ob das)))
Step:PP Attachment
{'subtrees': ['KON', 'PX', 'NX'], 'family': ['SU', 'PX', 'NX', 'SIMPX', 'VF', 'LK', 'MF', 'NX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADV', 'PPER', 'VAFIN', 'ADV', 'ADV', 'CARD', 'NN', 'PRELS', 'PPER', 'ADV', 'ADV', 'VVFIN', 'APPRART', 'PIS', 'ART', 'NN', 'APPRART', 'NE', 'PDS', 'VVFIN', 'ADV', 'APPR', 'CARD', 'CARD', 'NN', 'APPR', 'NN', 'KON', 'ADV', 'VVFIN', 'PPER', 'ART', 'NE', 'PDS', 'VAFIN', 'ADV', 'ADV', 'ADV', 'ADJD', 'PDS', 'VVFIN', 'ADV', 'APPR', 'CARD', 'CARD', 'KON', 'ADV', 'ADV', 'APPR', 'ADJA', 'NN', 'ART', 'NE', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'CARD', 'NN', 'VVINF', 'PWAV', 'PPER', 'VVFIN', 'ADV', 'PTKNEG', 'KOUS', 'PDS'), 'right siblings': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 69), 'span': (46, 54), 'left siblings': ['SU', 'PX', 'NX', 'SIMPX', 'VF', 'LK', 'MF'], 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU ja also wir haben hier jetzt drei hotels die wir wieder gerne empfehlen)
		(PX zum einen)
		(NX das hotel am thielenplatz das liegt so bis hundert dreisig mark pro zimmer)
		(SIMPX und dann gibt es ein zentralhotel das ist wirklich auch sehr zentral)
		(VF das)
		(LK geht)
		(MF so bis zweihundert zwanzig)
		(KON und)
		[01;31m(PX[00m
			(PX naturlich)
			(ADVX jetzt)
			(PX fur gehobene anspruche)[01;31m)[00m
		(NX das grandhotel)
		(SIMPX da musten sie allerdings schon funfhundert mark hinlegen)
		(SIMPX wobei ich weis ja nicht ob das)))
Step:PP Attachment
{'subtrees': ['PX', 'ADVX', 'PX'], 'family': ['SU', 'PX', 'NX', 'SIMPX', 'VF', 'LK', 'MF', 'KON', 'PX', 'NX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADV', 'PPER', 'VAFIN', 'ADV', 'ADV', 'CARD', 'NN', 'PRELS', 'PPER', 'ADV', 'ADV', 'VVFIN', 'APPRART', 'PIS', 'ART', 'NN', 'APPRART', 'NE', 'PDS', 'VVFIN', 'ADV', 'APPR', 'CARD', 'CARD', 'NN', 'APPR', 'NN', 'KON', 'ADV', 'VVFIN', 'PPER', 'ART', 'NE', 'PDS', 'VAFIN', 'ADV', 'ADV', 'ADV', 'ADJD', 'PDS', 'VVFIN', 'ADV', 'APPR', 'CARD', 'CARD', 'KON', 'ADV', 'ADV', 'APPR', 'ADJA', 'NN', 'ART', 'NE', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'CARD', 'NN', 'VVINF', 'PWAV', 'PPER', 'VVFIN', 'ADV', 'PTKNEG', 'KOUS', 'PDS'), 'right siblings': ['NX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 69), 'span': (47, 52), 'left siblings': ['SU', 'PX', 'NX', 'SIMPX', 'VF', 'LK', 'MF', 'KON'], 'label': 'PX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP ja also wir haben hier jetzt drei hotels die wir wieder gerne empfehlen zum einen das hotel am thielenplatz das liegt so bis hundert dreisig mark pro zimmer und dann gibt es ein zentralhotel das ist wirklich auch sehr zentral das geht so bis zweihundert zwanzig und naturlich jetzt fur gehobene anspruche das grandhotel da musten sie allerdings schon funfhundert mark hinlegen wobei ich weis ja nicht ob das)

Sentence 283:
2 Initial errors
0 on fringe, 2 iterations
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LV das zweite hotel)
				(VF das)
				(LK war)[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'ADJA', 'NN', 'PDS', 'VAFIN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 5), 'span': (0, 5), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			(LV das zweite hotel)
			(VF das)
			(LK war)[01;31m)[00m))
Step:Unary
{'subtrees': ['LV', 'VF', 'LK'], 'family': ['SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'ADJA', 'NN', 'PDS', 'VAFIN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 5), 'span': (0, 5), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP das zweite hotel das war)

Sentence 284:
0 Initial errors
0 on fringe, 0 iterations

Sentence 285:
0 Initial errors
0 on fringe, 0 iterations

Sentence 286:
6 Initial errors
0 on fringe, 3 iterations
3 Error:Modifier Attachment
2 Error:Single Word Phrase
1 Error:UNSET add
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP [01;33m(SU[00m
	(TURN
		(SU
			(DM ja)
			[01;31m(ADVX[00m
				[01;36m(DM[00m [01;31m(ADVX[00m
					(ADV naturlich)[01;31m)[00m [01;33mSU)[00m[01;36m)[00m
				[01;33m(PX[00m (ADVX da)[01;31m)[00m
			[01;31m(PX[00m
				(ADVX grade)
				(PX am wochenende)[01;31m)[00m))) [01;33mPX)[00m
Step:Modifier Attachment
{'new_parent': 'PX', 'new_family': ['ADVX', 'ADVX', 'PX'], 'mover info': [('ADVX', (2, 3))], 'old_family': ['ADVX', 'ADVX'], 'start left siblings': ['ADVX'], 'auto preterminals': ('PTKANT', 'ADV', 'ADV', 'ADV', 'APPRART', 'NN'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 6), 'movers': ['ADVX'], 'old_parent': 'ADVX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['ADVX', 'PX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU
			[01;36m(SU[00m
				(DM ja)
				[01;36m(DM[00m [01;31m(ADVX[00m
					(ADV naturlich)[01;31m)[00m[01;36m)[00m[01;36m)[00m
			(PX da grade am wochenende))))
Step:Single Word Phrase
{'family': ['DM', 'DM', 'PX'], 'auto preterminal span': (1, 2), 'span': (1, 2), 'subtrees': ['ADV'], 'parent': 'SU', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'DM')}
(TOP
	(TURN
		(SU
			[01;36m(SU[00m
				(DM ja)
				(DM naturlich)[01;36m)[00m
			(PX da grade am wochenende))))
Step:UNSET add
{'subtrees': ['DM', 'DM'], 'family': ['SU', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADV'), 'right siblings': [(PX (ADVX (ADV da)) (ADVX (ADV grade)) (PX (APPRART am) (NX (NN wochenende))))], 'left siblings': [], 'auto preterminal span': (0, 2), 'span': (0, 2), 'parent': 'SU', 'label': 'SU', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP ja naturlich da grade am wochenende)

Sentence 287:
0 Initial errors
0 on fringe, 0 iterations

Sentence 288:
0 Initial errors
0 on fringe, 0 iterations

Sentence 289:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(NX[00m
	(TOP
		(TURN
			(SU
				(DM
					(ITJ tschus)))))[01;36m)[00m
Step:Unary
{'subtrees': ['TURN'], 'family': ['NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ',), 'right siblings': [], 'left siblings': [], 'auto preterminal span': (0, 1), 'span': (0, 1), 'parent': 'TOP', 'label': 'NX', 'classified_type': 'Unary', 'type': 'add'}
(TOP tschus)

Sentence 290:
0 Initial errors
0 on fringe, 0 iterations

Sentence 291:
0 Initial errors
0 on fringe, 0 iterations

Sentence 292:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(NX[00m
	(TOP
		(TURN
			(SU
				(DM
					(ITJ tschus)))))[01;36m)[00m
Step:Unary
{'subtrees': ['TURN'], 'family': ['NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ',), 'right siblings': [], 'left siblings': [], 'auto preterminal span': (0, 1), 'span': (0, 1), 'parent': 'TOP', 'label': 'NX', 'classified_type': 'Unary', 'type': 'add'}
(TOP tschus)

Sentence 293:
8 Initial errors
0 on fringe, 5 iterations
3 Error:NP Attachment
2 Error:Clause Attachment
1 Error:UNSET add
1 Error:Modifier Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(SIMPX
				(VF da)
				(LK fahren)
				[01;36m(MF[00m
					(MF erst mal verschiedene zuge)
					[01;36m(ADVX[00m [01;31m(NF[00m [01;33m(NX (NX[00m
						(NX drei)
						[01;31m(ADVX[00m
							(ADVX morgens) [01;33mNX)[00m
							(ADVX mittags) [01;33mNX)[00m
							(KON und)
							(ADVX abends)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m)
			[01;36m(SU[00m
				(SIMPX
					(VF da)
					(LK konnten)
					(MF sie sich schon mal)
					(VC auswahlen))[01;36m)[00m[01;31m)[00m))
Step:NP Attachment
{'new_parent': 'ADVX', 'new_family': ['NX', 'ADVX', 'ADVX', 'KON', 'ADVX'], 'mover info': [('NX', (6, 7))], 'old_family': ['NX', 'ADVX'], 'start left siblings': [], 'auto preterminals': ('CARD', 'ADV', 'ADV', 'KON', 'ADV'), 'start right siblings': ['ADVX'], 'end left siblings': [], 'auto preterminal span': (6, 11), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'NF', 'POS confusion': ('CARD', 'CARD'), 'added and moved': True, 'end right siblings': ['ADVX', 'ADVX', 'KON', 'ADVX'], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'SU'}
(TOP
	(TURN
		[01;31m(SU[00m
			(SIMPX
				(VF da)
				(LK fahren)
				[01;36m(MF[00m
					(MF erst mal verschiedene zuge)
					[01;31m(NF[00m
						(ADVX
							[01;36m(NX[00m
								(NX drei morgens)
								(ADVX mittags)[01;36m)[00m
							(KON und)
							(ADVX abends))[01;31m)[00m[01;36m)[00m)
			[01;36m(SU[00m
				(SIMPX
					(VF da)
					(LK konnten)
					(MF sie sich schon mal)
					(VC auswahlen))[01;36m)[00m[01;31m)[00m))
Step:Clause Attachment
{'new_parent': 'TURN', 'new_family': ['SIMPX', 'SU'], 'mover info': [('SIMPX', (0, 11))], 'old_family': ['SIMPX', 'SIMPX'], 'start left siblings': [], 'auto preterminals': ('ADV', 'VVFIN', 'ADV', 'ADV', 'ADJA', 'NN', 'CARD', 'ADV', 'ADV', 'KON', 'ADV', 'ADV', 'VMFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'VVINF'), 'start right siblings': ['SIMPX'], 'end left siblings': [], 'auto preterminal span': (0, 18), 'movers': ['SIMPX'], 'old_parent': 'SU', 'end right siblings': ['SU'], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(SIMPX
			(VF da)
			(LK fahren)
			[01;36m(MF[00m
				(MF erst mal verschiedene zuge)
				[01;31m(NF[00m
					(ADVX
						[01;36m(NX[00m
							(NX drei morgens)
							(ADVX mittags)[01;36m)[00m
						(KON und)
						(ADVX abends))[01;31m)[00m[01;36m)[00m)
		(SU da konnten sie sich schon mal auswahlen)))
Step:UNSET add
{'subtrees': ['MF', 'NF'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'ADJA', 'NN', 'CARD', 'ADV', 'ADV', 'KON', 'ADV'), 'right siblings': [], 'left siblings': [(VF (ADVX (ADV da))), (LK (VXFIN (VVFIN fahren)))], 'auto preterminal span': (2, 11), 'span': (2, 11), 'parent': 'SIMPX', 'label': 'MF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SIMPX
			(VF da)
			(LK fahren)
			(MF
				(MF erst mal verschiedene zuge)
				[01;31m(NF[00m
					(ADVX
						[01;36m(NX[00m
							(NX drei morgens)
							(ADVX mittags)[01;36m)[00m
						(KON und)
						(ADVX abends))[01;31m)[00m))
		(SU da konnten sie sich schon mal auswahlen)))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADVX'], 'family': ['NX', 'KON', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'ADV', 'ADV'), 'right siblings': [(KON und), (ADVX (ADV abends))], 'left siblings': [], 'auto preterminal span': (6, 9), 'span': (6, 9), 'parent': 'ADVX', 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		(SIMPX
			(VF da)
			(LK fahren)
			(MF
				(MF erst mal verschiedene zuge)
				[01;31m(NF[00m
					(ADVX
						(NX drei morgens mittags)
						(KON und)
						(ADVX abends))[01;31m)[00m))
		(SU da konnten sie sich schon mal auswahlen)))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'ADJA', 'NN', 'CARD', 'ADV', 'ADV', 'KON', 'ADV'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (2, 11), 'span': (6, 11), 'left siblings': ['MF'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP da fahren erst mal verschiedene zuge drei morgens mittags und abends da konnten sie sich schon mal auswahlen)

Sentence 294:
0 Initial errors
0 on fringe, 0 iterations

Sentence 295:
9 Initial errors
0 on fringe, 6 iterations
2 Error:Different label
2 Error:Single Word Phrase
2 Error:UNSET move
1 Error:Unary
1 Error:PP Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;36m(SIMPX[00m [01;36m(SU[00m [01;31m(NX[00m
				(KON und)
				(ADVX dann)
				[01;31m(NX[00m
					(NX diese zwei nachte)
					[01;36m(NF[00m
						(R
							(C die)
							(MF sie da)
							(VC bleiben mochten))[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m
			(SIMPX da wurde ich mal nachschauen)
			(SIMPX da haben wir verschiedene preisklassen)
			(SIMPX
				(VF und zwar)
				(LK gibt)
				(MF
					(NX es)
					[01;36m(PX[00m
						(APPR zwischen)
						(PX
							(PX von funfundachtzig)
							(PX
								(PX bis funfhundert)
								[01;36m(NX[00m [01;31m(ADVX[00m
									(ADV aufwarts)[01;31m)[00m[01;36m)[00m))[01;36m)[00m))[01;31m)[00m))
Step:Different label
{'family': ['SU', 'SIMPX', 'SIMPX', 'SIMPX'], 'auto preterminal span': (0, 10), 'span': (0, 10), 'subtrees': ['KON', 'ADVX', 'NX'], 'parent': 'SU', 'over_word': False, 'auto preterminals': ('KON', 'ADV', 'PDAT', 'CARD', 'NN', 'PRELS', 'PPER', 'ADV', 'VVINF', 'VMFIN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('NX', 'SU')}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;36m(SIMPX[00m
				(SU
					(KON und)
					(ADVX dann)
					[01;31m(NX[00m
						(NX diese zwei nachte)
						[01;36m(NF[00m
							(R
								(C die)
								(MF sie da)
								(VC bleiben mochten))[01;36m)[00m[01;31m)[00m)[01;36m)[00m
			(SIMPX da wurde ich mal nachschauen)
			(SIMPX da haben wir verschiedene preisklassen)
			(SIMPX
				(VF und zwar)
				(LK gibt)
				(MF
					(NX es)
					[01;36m(PX[00m
						(APPR zwischen)
						(PX
							(PX von funfundachtzig)
							(PX
								(PX bis funfhundert)
								[01;36m(NX[00m [01;31m(ADVX[00m
									(ADV aufwarts)[01;31m)[00m[01;36m)[00m))[01;36m)[00m))[01;31m)[00m))
Step:Single Word Phrase
{'family': ['PX', 'NX'], 'auto preterminal span': (29, 30), 'span': (29, 30), 'subtrees': ['ADV'], 'parent': 'PX', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'NX')}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;36m(SIMPX[00m
				(SU
					(KON und)
					(ADVX dann)
					[01;31m(NX[00m
						(NX diese zwei nachte)
						[01;36m(NF[00m
							(R
								(C die)
								(MF sie da)
								(VC bleiben mochten))[01;36m)[00m[01;31m)[00m)[01;36m)[00m
			(SIMPX da wurde ich mal nachschauen)
			(SIMPX da haben wir verschiedene preisklassen)
			(SIMPX
				(VF und zwar)
				(LK gibt)
				(MF
					(NX es)
					[01;36m(PX[00m
						(APPR zwischen)
						(PX von funfundachtzig bis funfhundert aufwarts)[01;36m)[00m))[01;31m)[00m))
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['KON', 'ADVX', 'NX', 'R'], 'mover info': [('R', (5, 10))], 'old_family': ['NX', 'R'], 'start left siblings': ['NX'], 'auto preterminals': ('KON', 'ADV', 'PDAT', 'CARD', 'NN', 'PRELS', 'PPER', 'ADV', 'VVINF', 'VMFIN'), 'start right siblings': [], 'end left siblings': ['KON', 'ADVX', 'NX'], 'auto preterminal span': (0, 10), 'adding node already present': False, 'movers': ['R'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'PX'}
(TOP
	(TURN
		[01;31m(SU[00m
			(SIMPX
				(SU
					(KON und)
					(ADVX dann)
					(NX diese zwei nachte)
					[01;36m(NF[00m
						(R
							(C die)
							(MF sie da)
							(VC bleiben mochten))[01;36m)[00m))
			(SIMPX da wurde ich mal nachschauen)
			(SIMPX da haben wir verschiedene preisklassen)
			(SIMPX
				(VF und zwar)
				(LK gibt)
				(MF
					(NX es)
					[01;36m(PX[00m
						(APPR zwischen)
						(PX von funfundachtzig bis funfhundert aufwarts)[01;36m)[00m))[01;31m)[00m))
Step:Unary
{'subtrees': ['R'], 'family': ['KON', 'ADVX', 'NX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PRELS', 'PPER', 'ADV', 'VVINF', 'VMFIN'), 'right siblings': [], 'left siblings': [(KON und), (ADVX (ADV dann)), (NX (PDAT diese) (ADJX (CARD zwei)) (NN nachte))], 'auto preterminal span': (5, 10), 'span': (5, 10), 'parent': 'SU', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(SIMPX und dann diese zwei nachte die sie da bleiben mochten)
			(SIMPX da wurde ich mal nachschauen)
			(SIMPX da haben wir verschiedene preisklassen)
			(SIMPX
				(VF und zwar)
				(LK gibt)
				(MF
					(NX es)
					[01;36m(PX[00m
						(APPR zwischen)
						(PX von funfundachtzig bis funfhundert aufwarts)[01;36m)[00m))[01;31m)[00m))
Step:PP Attachment
{'subtrees': ['APPR', 'PX'], 'family': ['NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'APPR', 'CARD', 'APPR', 'CARD', 'ADV'), 'right siblings': [], 'left siblings': [(NX (PPER es))], 'auto preterminal span': (24, 30), 'span': (24, 30), 'parent': 'MF', 'label': 'PX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(SIMPX und dann diese zwei nachte die sie da bleiben mochten)
			(SIMPX da wurde ich mal nachschauen)
			(SIMPX da haben wir verschiedene preisklassen)
			(SIMPX und zwar gibt es zwischen von funfundachtzig bis funfhundert aufwarts)[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'family': ['SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'ADV', 'PDAT', 'CARD', 'NN', 'PRELS', 'PPER', 'ADV', 'VVINF', 'VMFIN', 'ADV', 'VAFIN', 'PPER', 'ADV', 'VVINF', 'ADV', 'VAFIN', 'PPER', 'ADJA', 'NN', 'KON', 'ADV', 'VVFIN', 'PPER', 'APPR', 'APPR', 'CARD', 'APPR', 'CARD', 'ADV'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 30), 'span': (0, 30), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP und dann diese zwei nachte die sie da bleiben mochten da wurde ich mal nachschauen da haben wir verschiedene preisklassen und zwar gibt es zwischen von funfundachtzig bis funfhundert aufwarts)

Sentence 296:
8 Initial errors
0 on fringe, 4 iterations
3 Error:Modifier Attachment
2 Error:Single Word Phrase
2 Error:Single Word Phrase
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(SIMPX es kann schon eine gehobene preisklasse sein)
			(SIMPX
				(KOORD und)
				[01;36m(ADJX[00m
					(VF
						[01;31m(NX[00m
							(NN hauptsache)[01;31m)[00m)[01;36m)[00m
				(LK ist)
				(NF
					(SIMPX
						(C das)
						[01;36m(NX[00m
							(MF
								[01;31m(NX[00m
									(ART das)
									[01;36m(NX[00m
										(NN [01;33m(NX[00m hotel)[01;36m)[00m[01;31m)[00m
								[01;36m(NX[00m [01;31m(ADJX[00m
									(ADJD zentral)[01;31m)[00m[01;36m)[00m) [01;33mNX)[00m[01;36m)[00m
						(VC liegt)))))))
Step:Modifier Attachment
{'new_parent': 'NX', 'new_family': ['ART', 'NN', 'ADJX'], 'mover info': [('ADJX', (13, 14))], 'old_family': ['NX', 'ADJX'], 'start left siblings': ['NX'], 'auto preterminals': ('ART', 'NN', 'ADJD'), 'start right siblings': [], 'end left siblings': ['ART', 'NN'], 'auto preterminal span': (11, 14), 'adding node already present': False, 'movers': ['ADJX'], 'old_parent': 'MF', 'POS confusion': ('ADJD', 'ADJD'), 'added and moved': True, 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(SU
			(SIMPX es kann schon eine gehobene preisklasse sein)
			(SIMPX
				(KOORD und)
				[01;36m(ADJX[00m
					(VF
						[01;31m(NX[00m
							(NN hauptsache)[01;31m)[00m)[01;36m)[00m
				(LK ist)
				(NF
					(SIMPX
						(C das)
						(MF
							(NX
								(ART das)
								(NX
									[01;36m(NX[00m
										(NN hotel)[01;36m)[00m
									[01;36m(NX[00m [01;31m(ADJX[00m
										(ADJD zentral)[01;31m)[00m[01;36m)[00m)))
						(VC liegt)))))))
Step:Single Word Phrase
{'family': ['ADJX'], 'auto preterminal span': (8, 9), 'span': (8, 9), 'subtrees': ['NN'], 'parent': 'VF', 'over_word': True, 'auto preterminals': ('NN',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('NX', 'ADJX')}
(TOP
	(TURN
		(SU
			(SIMPX es kann schon eine gehobene preisklasse sein)
			(SIMPX
				(KOORD und)
				(VF hauptsache)
				(LK ist)
				(NF
					(SIMPX
						(C das)
						(MF
							(NX
								(ART das)
								(NX
									[01;36m(NX[00m
										(NN hotel)[01;36m)[00m
									[01;36m(NX[00m [01;31m(ADJX[00m
										(ADJD zentral)[01;31m)[00m[01;36m)[00m)))
						(VC liegt)))))))
Step:Single Word Phrase
{'family': ['NN', 'NX'], 'auto preterminal span': (13, 14), 'span': (13, 14), 'subtrees': ['ADJD'], 'parent': 'NX', 'over_word': True, 'auto preterminals': ('ADJD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'NX')}
(TOP
	(TURN
		(SU
			(SIMPX es kann schon eine gehobene preisklasse sein)
			(SIMPX
				(KOORD und)
				(VF hauptsache)
				(LK ist)
				(NF
					(SIMPX
						(C das)
						(MF
							(NX
								(ART das)
								(NX
									[01;36m(NX[00m
										(NN hotel)[01;36m)[00m
									(NX zentral))))
						(VC liegt)))))))
Step:Single Word Phrase
{'subtrees': ['NN'], 'family': ['NX', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('NN',), 'right siblings': [(NX (ADJD zentral))], 'left siblings': [], 'auto preterminal span': (12, 13), 'span': (12, 13), 'parent': 'NX', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP es kann schon eine gehobene preisklasse sein und hauptsache ist das das hotel zentral liegt)

Sentence 297:
0 Initial errors
0 on fringe, 0 iterations

Sentence 298:
0 Initial errors
0 on fringe, 0 iterations

Sentence 299:
0 Initial errors
0 on fringe, 0 iterations

Sentence 300:
0 Initial errors
0 on fringe, 0 iterations

Sentence 301:
3 Initial errors
0 on fringe, 2 iterations
2 Error:Clause Attachment
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;36m(SU[00m
				(DM ja)
				(DM einen moment)
				(SIMPX da mus ich erst mal mein portemonnaie aufmachen)[01;36m)[00m
			[01;31m(SIMPX[00m
				(VF die kontonummer)
				(LK ist)
				(MF neun vier sechs zwo drei acht)[01;31m)[00m[01;31m)[00m))
Step:Clause Attachment
{'new_parent': 'TURN', 'new_family': ['SU', 'SIMPX'], 'mover info': [('SIMPX', (11, 20))], 'old_family': ['DM', 'DM', 'SIMPX', 'SIMPX'], 'start left siblings': ['DM', 'DM', 'SIMPX'], 'auto preterminals': ('PTKANT', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'PPOSAT', 'NN', 'VVINF', 'ART', 'NN', 'VAFIN', 'CARD', 'CARD', 'CARD', 'CARD', 'CARD', 'CARD'), 'start right siblings': [], 'end left siblings': ['SU'], 'auto preterminal span': (0, 20), 'movers': ['SIMPX'], 'old_parent': 'SU', 'end right siblings': [], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU ja einen moment da mus ich erst mal mein portemonnaie aufmachen)
		[01;31m(SIMPX[00m
			(VF die kontonummer)
			(LK ist)
			(MF neun vier sechs zwo drei acht)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['SU', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'PPOSAT', 'NN', 'VVINF', 'ART', 'NN', 'VAFIN', 'CARD', 'CARD', 'CARD', 'CARD', 'CARD', 'CARD'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 20), 'span': (11, 20), 'left siblings': ['SU'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ja einen moment da mus ich erst mal mein portemonnaie aufmachen die kontonummer ist neun vier sechs zwo drei acht)

Sentence 302:
0 Initial errors
0 on fringe, 0 iterations

Sentence 303:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			[01;31m(NX[00m
				(NX neun)
				(NX vier)
				(NX sechs)
				(NX zwei)
				(NX drei)
				(NX acht)[01;31m)[00m)))
Step:Unary
{'subtrees': ['NX', 'NX', 'NX', 'NX', 'NX', 'NX'], 'family': ['NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'CARD', 'CARD', 'CARD', 'CARD', 'CARD'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (0, 6), 'span': (0, 6), 'left siblings': [], 'label': 'NX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP neun vier sechs zwei drei acht)

Sentence 304:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(SIMPX
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				(LV die bank)
				(VF das)
				(LK ist)
				(MF die raiffeisenbank in bonn)))))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['KOORD', 'LV', 'VF', 'LK', 'MF'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON', 'ART', 'NN', 'PDS', 'VAFIN', 'ART', 'NE', 'APPR', 'NE'), 'right siblings': ['LV', 'VF', 'LK', 'MF'], 'parent': 'SIMPX', 'auto preterminal span': (0, 9), 'span': (0, 1), 'left siblings': [], 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP und die bank das ist die raiffeisenbank in bonn)

Sentence 305:
0 Initial errors
0 on fringe, 0 iterations

Sentence 306:
0 Initial errors
0 on fringe, 0 iterations

Sentence 307:
9 Initial errors
0 on fringe, 8 iterations
2 Error:Clause Attachment
1 Error:Modifier Attachment
1 Error:Single Word Phrase
1 Error:UNSET remove
1 Error:Unary
1 Error:UNSET remove
1 Error:Co-ordination
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;36m(SU[00m
				(DM
					(ITJ aha))[01;36m)[00m
			(DM ach gut)
			(SIMPX
				(VF das)
				(LK hort)
				[01;31m(MF[00m
					(NX sich)
					(ADVX immer)
					(ADVX so)[01;31m)[00m
				[01;31m(VC[00m
					(PTKVZ an)[01;31m)[00m
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						[01;31m(C[00m
							(KOUS als)
							(KOUS ob)[01;31m)[00m
						(MF
							(NX das)
							(NX
								[01;31m(NX[00m
									(NX nix)
									(NX halbes)[01;31m)[00m
								(KON und)
								(NX nix ganzes)))
						(VC ist)[01;31m)[00m[01;31m)[00m)
			[01;31m(SIMPX[00m
				(KOORD oder)
				(VF wie)
				(LK sehe)
				(MF ich das)[01;31m)[00m[01;31m)[00m))
Step:Clause Attachment
{'new_parent': 'TURN', 'new_family': ['SU', 'DM', 'SIMPX', 'SIMPX'], 'mover info': [('DM', (1, 3)), ('SIMPX', (3, 18)), ('SIMPX', (18, 23))], 'old_family': ['DM', 'DM', 'SIMPX', 'SIMPX'], 'start left siblings': ['DM'], 'auto preterminals': ('ITJ', 'ITJ', 'ITJ', 'PDS', 'VVFIN', 'PRF', 'ADV', 'ADV', 'PTKVZ', 'KOUS', 'KOUS', 'PDS', 'PIS', 'NN', 'KON', 'PIS', 'NN', 'VAFIN', 'KON', 'PWAV', 'VVFIN', 'PPER', 'PDS'), 'start right siblings': [], 'end left siblings': ['SU'], 'auto preterminal span': (0, 23), 'movers': ['DM', 'SIMPX', 'SIMPX'], 'old_parent': 'SU', 'end right siblings': [], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU aha)
		(DM ach gut)
		(SIMPX
			(VF das)
			(LK hort)
			[01;31m(MF[00m
				(NX sich)
				(ADVX immer)
				(ADVX so)[01;31m)[00m
			[01;31m(VC[00m
				(PTKVZ an)[01;31m)[00m
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					[01;31m(C[00m
						(KOUS als)
						(KOUS ob)[01;31m)[00m
					(MF
						(NX das)
						(NX
							[01;31m(NX[00m
								(NX nix)
								(NX halbes)[01;31m)[00m
							(KON und)
							(NX nix ganzes)))
					(VC ist)[01;31m)[00m[01;31m)[00m)
		[01;31m(SIMPX[00m
			(KOORD oder)
			(VF wie)
			(LK sehe)
			(MF ich das)[01;31m)[00m))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADVX', 'ADVX'], 'family': ['VF', 'LK', 'MF', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VVFIN', 'PRF', 'ADV', 'ADV', 'PTKVZ', 'KOUS', 'KOUS', 'PDS', 'PIS', 'NN', 'KON', 'PIS', 'NN', 'VAFIN'), 'right siblings': ['VC', 'NF'], 'parent': 'SIMPX', 'auto preterminal span': (3, 18), 'span': (5, 8), 'left siblings': ['VF', 'LK'], 'label': 'MF', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU aha)
		(DM ach gut)
		(SIMPX
			(VF das)
			(LK hort)
			(NX sich)
			(ADVX immer)
			(ADVX so)
			[01;31m(VC[00m
				(PTKVZ an)[01;31m)[00m
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					[01;31m(C[00m
						(KOUS als)
						(KOUS ob)[01;31m)[00m
					(MF
						(NX das)
						(NX
							[01;31m(NX[00m
								(NX nix)
								(NX halbes)[01;31m)[00m
							(KON und)
							(NX nix ganzes)))
					(VC ist)[01;31m)[00m[01;31m)[00m)
		[01;31m(SIMPX[00m
			(KOORD oder)
			(VF wie)
			(LK sehe)
			(MF ich das)[01;31m)[00m))
Step:Single Word Phrase
{'subtrees': ['PTKVZ'], 'family': ['VF', 'LK', 'NX', 'ADVX', 'ADVX', 'VC', 'NF'], 'over_word': True, 'over words': True, 'auto preterminals': ('PDS', 'VVFIN', 'PRF', 'ADV', 'ADV', 'PTKVZ', 'KOUS', 'KOUS', 'PDS', 'PIS', 'NN', 'KON', 'PIS', 'NN', 'VAFIN'), 'right siblings': ['NF'], 'parent': 'SIMPX', 'auto preterminal span': (3, 18), 'span': (8, 9), 'left siblings': ['VF', 'LK', 'NX', 'ADVX', 'ADVX'], 'label': 'VC', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(SU aha)
		(DM ach gut)
		(SIMPX
			(VF das)
			(LK hort)
			(NX sich)
			(ADVX immer)
			(ADVX so)
			(PTKVZ an)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					[01;31m(C[00m
						(KOUS als)
						(KOUS ob)[01;31m)[00m
					(MF
						(NX das)
						(NX
							[01;31m(NX[00m
								(NX nix)
								(NX halbes)[01;31m)[00m
							(KON und)
							(NX nix ganzes)))
					(VC ist)[01;31m)[00m[01;31m)[00m)
		[01;31m(SIMPX[00m
			(KOORD oder)
			(VF wie)
			(LK sehe)
			(MF ich das)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['KOUS', 'KOUS'], 'family': ['C', 'MF', 'VC'], 'over_word': False, 'over words': True, 'auto preterminals': ('KOUS', 'KOUS', 'PDS', 'PIS', 'NN', 'KON', 'PIS', 'NN', 'VAFIN'), 'right siblings': ['MF', 'VC'], 'parent': 'SIMPX', 'auto preterminal span': (9, 18), 'span': (9, 11), 'left siblings': [], 'label': 'C', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU aha)
		(DM ach gut)
		(SIMPX
			(VF das)
			(LK hort)
			(NX sich)
			(ADVX immer)
			(ADVX so)
			(PTKVZ an)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					(KOUS als)
					(KOUS ob)
					(MF
						(NX das)
						(NX
							[01;31m(NX[00m
								(NX nix)
								(NX halbes)[01;31m)[00m
							(KON und)
							(NX nix ganzes)))
					(VC ist)[01;31m)[00m[01;31m)[00m)
		[01;31m(SIMPX[00m
			(KOORD oder)
			(VF wie)
			(LK sehe)
			(MF ich das)[01;31m)[00m))
Step:Unary
{'subtrees': ['KOUS', 'KOUS', 'MF', 'VC'], 'family': ['SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'KOUS', 'PDS', 'PIS', 'NN', 'KON', 'PIS', 'NN', 'VAFIN'), 'right siblings': [], 'parent': 'NF', 'auto preterminal span': (9, 18), 'span': (9, 18), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU aha)
		(DM ach gut)
		(SIMPX
			(VF das)
			(LK hort)
			(NX sich)
			(ADVX immer)
			(ADVX so)
			(PTKVZ an)
			[01;31m(NF[00m
				(KOUS als)
				(KOUS ob)
				(MF
					(NX das)
					(NX
						[01;31m(NX[00m
							(NX nix)
							(NX halbes)[01;31m)[00m
						(KON und)
						(NX nix ganzes)))
				(VC ist)[01;31m)[00m)
		[01;31m(SIMPX[00m
			(KOORD oder)
			(VF wie)
			(LK sehe)
			(MF ich das)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['KOUS', 'KOUS', 'MF', 'VC'], 'family': ['VF', 'LK', 'NX', 'ADVX', 'ADVX', 'PTKVZ', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VVFIN', 'PRF', 'ADV', 'ADV', 'PTKVZ', 'KOUS', 'KOUS', 'PDS', 'PIS', 'NN', 'KON', 'PIS', 'NN', 'VAFIN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (3, 18), 'span': (9, 18), 'left siblings': ['VF', 'LK', 'NX', 'ADVX', 'ADVX', 'PTKVZ'], 'label': 'NF', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU aha)
		(DM ach gut)
		(SIMPX
			(VF das)
			(LK hort)
			(NX sich)
			(ADVX immer)
			(ADVX so)
			(PTKVZ an)
			(KOUS als)
			(KOUS ob)
			(MF
				(NX das)
				(NX
					[01;31m(NX[00m
						(NX nix)
						(NX halbes)[01;31m)[00m
					(KON und)
					(NX nix ganzes)))
			(VC ist))
		[01;31m(SIMPX[00m
			(KOORD oder)
			(VF wie)
			(LK sehe)
			(MF ich das)[01;31m)[00m))
Step:Co-ordination
{'subtrees': ['NX', 'NX'], 'family': ['NX', 'KON', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PIS', 'NN', 'KON', 'PIS', 'NN'), 'right siblings': ['KON', 'NX'], 'parent': 'NX', 'auto preterminal span': (12, 17), 'span': (12, 14), 'left siblings': [], 'label': 'NX', 'classified_type': 'Co-ordination', 'type': 'remove'}
(TOP
	(TURN
		(SU aha)
		(DM ach gut)
		(SIMPX das hort sich immer so an als ob das nix halbes und nix ganzes ist)
		[01;31m(SIMPX[00m
			(KOORD oder)
			(VF wie)
			(LK sehe)
			(MF ich das)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['KOORD', 'VF', 'LK', 'MF'], 'family': ['SU', 'DM', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ITJ', 'ITJ', 'PDS', 'VVFIN', 'PRF', 'ADV', 'ADV', 'PTKVZ', 'KOUS', 'KOUS', 'PDS', 'PIS', 'NN', 'KON', 'PIS', 'NN', 'VAFIN', 'KON', 'PWAV', 'VVFIN', 'PPER', 'PDS'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 23), 'span': (18, 23), 'left siblings': ['SU', 'DM', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP aha ach gut das hort sich immer so an als ob das nix halbes und nix ganzes ist oder wie sehe ich das)

Sentence 308:
15 Initial errors
0 on fringe, 9 iterations
4 Error:UNSET move
3 Error:NP Attachment
2 Error:Clause Attachment
1 Error:Unary
1 Error:Modifier Attachment
1 Error:Unary
1 Error:Unary
1 Error:Single Word Phrase
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;36m(SU[00m
				(DM nein)
				(SIMPX
					(VF jetzt)
					(LK habe)
					[01;36m(MF[00m
						[01;31m(MF[00m
							(NX ich)
							[01;31m(NX[00m [01;33m(NX[00m
								(PDS das)[01;31m)[00m[01;31m)[00m
						[01;31m(VC[00m
							[01;31m(VXINF[00m
								(VVPP vermerkt)[01;31m)[00m[01;31m)[00m[01;36m)[00m) [01;33mNX)[00m[01;36m)[00m
			[01;31m(SIMPX[00m [01;33m(SU (SIMPX[00m
				(KOORD und)
				(VF ich)
				(LK schicke)
				[01;31m(MF[00m
					[01;36m(MF[00m
						(NX ihnen)
						(ADVX dann)[01;36m)[00m
					[01;36m(NF[00m
						(SIMPX
							(C wenn)
							(MF sie mir ihre adresse grade noch)
							(VC geben wurden)) [01;33mSIMPX) SU)[00m[01;36m)[00m
					[01;36m(MF[00m
						(NX
							(PDS das))[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:UNSET move
{'new_parent': 'NX', 'new_family': ['PDS', 'VC'], 'mover info': [('VC', (5, 6))], 'old_family': ['VF', 'LK', 'MF', 'VC'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'PDS', 'VVPP'), 'start right siblings': [], 'end left siblings': ['PDS'], 'auto preterminal span': (1, 6), 'movers': ['VC'], 'old_parent': 'SIMPX', 'POS confusion': ('VVPP', 'VVPP'), 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;36m(SU[00m
				(DM nein)
				(SIMPX
					(VF jetzt)
					(LK habe)
					(MF
						(NX ich)
						(NX
							(PDS das)
							[01;31m(VC[00m
								[01;31m(VXINF[00m
									(VVPP vermerkt)[01;31m)[00m[01;31m)[00m)))[01;36m)[00m
			[01;31m(SIMPX[00m [01;33m(SU (SIMPX[00m
				(KOORD und)
				(VF ich)
				(LK schicke)
				[01;31m(MF[00m
					[01;36m(MF[00m
						(NX ihnen)
						(ADVX dann)[01;36m)[00m
					[01;36m(NF[00m
						(SIMPX
							(C wenn)
							(MF sie mir ihre adresse grade noch)
							(VC geben wurden)) [01;33mSIMPX) SU)[00m[01;36m)[00m
					[01;36m(MF[00m
						(NX
							(PDS das))[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:NP Attachment
{'new_parent': 'SIMPX', 'new_family': ['KOORD', 'VF', 'LK', 'NX', 'ADVX', 'SIMPX', 'MF'], 'mover info': [('NX', (9, 10)), ('ADVX', (10, 11)), ('SIMPX', (11, 20))], 'old_family': ['NX', 'ADVX', 'SIMPX', 'NX'], 'start left siblings': [], 'auto preterminals': ('KON', 'PPER', 'VVFIN', 'PPER', 'ADV', 'KOUS', 'PPER', 'PPER', 'PPOSAT', 'NN', 'ADV', 'ADV', 'VVINF', 'VAFIN', 'PDS'), 'start right siblings': ['NX'], 'end left siblings': ['KOORD', 'VF', 'LK'], 'auto preterminal span': (6, 21), 'adding node already present': False, 'movers': ['NX', 'ADVX', 'SIMPX'], 'old_parent': 'MF', 'added and moved': True, 'end right siblings': ['MF'], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'NF'}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;36m(SU[00m
				(DM nein)
				(SIMPX
					(VF jetzt)
					(LK habe)
					(MF
						(NX ich)
						(NX
							(PDS das)
							[01;31m(VC[00m
								[01;31m(VXINF[00m
									(VVPP vermerkt)[01;31m)[00m[01;31m)[00m)))[01;36m)[00m
			[01;31m(SIMPX[00m
				[01;36m(SU[00m
					(SIMPX
						(KOORD und)
						(VF ich)
						(LK schicke)
						[01;36m(MF[00m
							(NX ihnen)
							(ADVX dann)[01;36m)[00m
						[01;36m(NF[00m
							(SIMPX
								(C wenn)
								(MF sie mir ihre adresse grade noch)
								(VC geben wurden))[01;36m)[00m)[01;36m)[00m
				(MF das)[01;31m)[00m[01;31m)[00m))
Step:Clause Attachment
{'new_parent': 'TURN', 'new_family': ['SU', 'SIMPX'], 'mover info': [('SIMPX', (6, 21))], 'old_family': ['DM', 'SIMPX', 'SIMPX'], 'start left siblings': ['DM', 'SIMPX'], 'auto preterminals': ('PTKANT', 'ADV', 'VAFIN', 'PPER', 'PDS', 'VVPP', 'KON', 'PPER', 'VVFIN', 'PPER', 'ADV', 'KOUS', 'PPER', 'PPER', 'PPOSAT', 'NN', 'ADV', 'ADV', 'VVINF', 'VAFIN', 'PDS'), 'start right siblings': [], 'end left siblings': ['SU'], 'auto preterminal span': (0, 21), 'movers': ['SIMPX'], 'old_parent': 'SU', 'end right siblings': [], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU
			(DM nein)
			(SIMPX
				(VF jetzt)
				(LK habe)
				(MF
					(NX ich)
					(NX
						(PDS das)
						[01;31m(VC[00m
							[01;31m(VXINF[00m
								(VVPP vermerkt)[01;31m)[00m[01;31m)[00m))))
		[01;31m(SIMPX[00m
			[01;36m(SU[00m
				(SIMPX
					(KOORD und)
					(VF ich)
					(LK schicke)
					[01;36m(MF[00m
						(NX ihnen)
						(ADVX dann)[01;36m)[00m
					[01;36m(NF[00m
						(SIMPX
							(C wenn)
							(MF sie mir ihre adresse grade noch)
							(VC geben wurden))[01;36m)[00m)[01;36m)[00m
			(MF das)[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SU', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'PPER', 'VVFIN', 'PPER', 'ADV', 'KOUS', 'PPER', 'PPER', 'PPOSAT', 'NN', 'ADV', 'ADV', 'VVINF', 'VAFIN'), 'right siblings': [(MF (NX (PDS das)))], 'left siblings': [], 'auto preterminal span': (6, 20), 'span': (6, 20), 'parent': 'SIMPX', 'label': 'SU', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM nein)
			(SIMPX
				(VF jetzt)
				(LK habe)
				(MF
					(NX ich)
					(NX
						(PDS das)
						[01;31m(VC[00m
							[01;31m(VXINF[00m
								(VVPP vermerkt)[01;31m)[00m[01;31m)[00m))))
		[01;31m(SIMPX[00m
			(SU
				(SIMPX
					(KOORD und)
					(VF ich)
					(LK schicke)
					[01;36m(MF[00m
						(NX ihnen)
						(ADVX dann)[01;36m)[00m
					[01;36m(NF[00m
						(SIMPX
							(C wenn)
							(MF sie mir ihre adresse grade noch)
							(VC geben wurden))[01;36m)[00m))
			(MF das)[01;31m)[00m))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADVX'], 'family': ['KOORD', 'VF', 'LK', 'MF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV'), 'right siblings': [(SIMPX (C (KOUS wenn)) (MF (NX (PPER sie)) (NX (PPER mir)) (NX (PPOSAT ihre) (NN adresse)) (ADVX (ADV grade)) (ADVX (ADV noch))) (VC (VXINF (VVINF geben)) (VXFIN (VAFIN wurden))))], 'left siblings': [(KOORD (KON und)), (VF (NX (PPER ich))), (LK (VXFIN (VVFIN schicke)))], 'auto preterminal span': (9, 11), 'span': (9, 11), 'parent': 'SIMPX', 'label': 'MF', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM nein)
			(SIMPX
				(VF jetzt)
				(LK habe)
				(MF
					(NX ich)
					(NX
						(PDS das)
						[01;31m(VC[00m
							[01;31m(VXINF[00m
								(VVPP vermerkt)[01;31m)[00m[01;31m)[00m))))
		[01;31m(SIMPX[00m
			(SU
				(SIMPX
					(KOORD und)
					(VF ich)
					(LK schicke)
					(MF ihnen dann)
					[01;36m(NF[00m
						(SIMPX
							(C wenn)
							(MF sie mir ihre adresse grade noch)
							(VC geben wurden))[01;36m)[00m))
			(MF das)[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['KOORD', 'VF', 'LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'PPER', 'PPOSAT', 'NN', 'ADV', 'ADV', 'VVINF', 'VAFIN'), 'right siblings': [], 'left siblings': [(KOORD (KON und)), (VF (NX (PPER ich))), (LK (VXFIN (VVFIN schicke))), (MF (NX (PPER ihnen)) (ADVX (ADV dann)))], 'auto preterminal span': (11, 20), 'span': (11, 20), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM nein)
			(SIMPX
				(VF jetzt)
				(LK habe)
				(MF
					(NX ich)
					(NX
						(PDS das)
						[01;31m(VC[00m
							[01;31m(VXINF[00m
								(VVPP vermerkt)[01;31m)[00m[01;31m)[00m))))
		[01;31m(SIMPX[00m
			(SU und ich schicke ihnen dann wenn sie mir ihre adresse grade noch geben wurden)
			(MF das)[01;31m)[00m))
Step:Unary
{'subtrees': ['VXINF'], 'family': ['PDS', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VVPP'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (4, 6), 'span': (5, 6), 'left siblings': ['PDS'], 'label': 'VC', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM nein)
			(SIMPX
				(VF jetzt)
				(LK habe)
				(MF
					(NX ich)
					(NX
						(PDS das)
						[01;31m(VXINF[00m
							(VVPP vermerkt)[01;31m)[00m))))
		[01;31m(SIMPX[00m
			(SU und ich schicke ihnen dann wenn sie mir ihre adresse grade noch geben wurden)
			(MF das)[01;31m)[00m))
Step:Single Word Phrase
{'subtrees': ['VVPP'], 'family': ['PDS', 'VXINF'], 'over_word': True, 'over words': True, 'auto preterminals': ('PDS', 'VVPP'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (4, 6), 'span': (5, 6), 'left siblings': ['PDS'], 'label': 'VXINF', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(SU nein jetzt habe ich das vermerkt)
		[01;31m(SIMPX[00m
			(SU und ich schicke ihnen dann wenn sie mir ihre adresse grade noch geben wurden)
			(MF das)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['SU', 'MF'], 'family': ['SU', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADV', 'VAFIN', 'PPER', 'PDS', 'VVPP', 'KON', 'PPER', 'VVFIN', 'PPER', 'ADV', 'KOUS', 'PPER', 'PPER', 'PPOSAT', 'NN', 'ADV', 'ADV', 'VVINF', 'VAFIN', 'PDS'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 21), 'span': (6, 21), 'left siblings': ['SU'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP nein jetzt habe ich das vermerkt und ich schicke ihnen dann wenn sie mir ihre adresse grade noch geben wurden das)

Sentence 309:
10 Initial errors
0 on fringe, 5 iterations
5 Error:Modifier Attachment
2 Error:Single Word Phrase
1 Error:UNSET remove
1 Error:Unary
1 Error:NP Internal Structure
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM ja)
			[01;31m(SIMPX[00m
				(VF da)
				(LK ist)
				(MF
					[01;31m(NX[00m
						[01;36m(MF[00m [01;31m(NX[00m
							[01;31m(NX[00m
								[01;36m(ADVX[00m [01;31m(ADJX[00m
									(ADJA hirschberger)[01;31m)[00m[01;36m)[00m
								[01;36m(NX[00m
									(NN [01;33m(NX[00m strase)[01;36m)[00m[01;31m)[00m
							(NX vierundsechzig)[01;31m)[00m [01;33mNX)[00m[01;36m)[00m
						(PX
							(APPR in)
							(NX
								[01;31m(NX[00m
									(NX funf)
									(NX drei)
									(NX eins)
									(NX eins)
									(NX neun)[01;31m)[00m
								(NE bonn)))[01;31m)[00m)[01;31m)[00m)))
Step:Modifier Attachment
{'new_parent': 'NX', 'new_family': ['ADJX', 'NX', 'PX'], 'mover info': [('ADJX', (3, 4))], 'old_family': ['ADJX', 'NN'], 'start left siblings': [], 'auto preterminals': ('ADJA', 'NN', 'CARD', 'APPR', 'CARD', 'CARD', 'CARD', 'CARD', 'CARD', 'NE'), 'start right siblings': ['NN'], 'end left siblings': [], 'auto preterminal span': (3, 13), 'adding node already present': False, 'movers': ['ADJX'], 'old_parent': 'NX', 'POS confusion': ('ADJA', 'ADJA'), 'added and moved': True, 'end right siblings': ['NX', 'PX'], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'MF'}
(TOP
	(TURN
		(SU
			(DM ja)
			[01;31m(SIMPX[00m
				(VF da)
				(LK ist)
				(MF
					[01;31m(NX[00m
						(MF
							[01;36m(ADVX[00m [01;31m(ADJX[00m
								(ADJA hirschberger)[01;31m)[00m[01;36m)[00m
							(NX strase vierundsechzig))
						(PX
							(APPR in)
							(NX
								[01;31m(NX[00m
									(NX funf)
									(NX drei)
									(NX eins)
									(NX eins)
									(NX neun)[01;31m)[00m
								(NE bonn)))[01;31m)[00m)[01;31m)[00m)))
Step:Single Word Phrase
{'family': ['ADVX', 'NX'], 'auto preterminal span': (3, 4), 'span': (3, 4), 'subtrees': ['ADJA'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('ADJA',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'ADVX')}
(TOP
	(TURN
		(SU
			(DM ja)
			[01;31m(SIMPX[00m
				(VF da)
				(LK ist)
				(MF
					[01;31m(NX[00m
						(MF hirschberger strase vierundsechzig)
						(PX
							(APPR in)
							(NX
								[01;31m(NX[00m
									(NX funf)
									(NX drei)
									(NX eins)
									(NX eins)
									(NX neun)[01;31m)[00m
								(NE bonn)))[01;31m)[00m)[01;31m)[00m)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADV', 'VAFIN', 'ADJA', 'NN', 'CARD', 'APPR', 'CARD', 'CARD', 'CARD', 'CARD', 'CARD', 'NE'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (0, 13), 'span': (1, 13), 'left siblings': ['DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM ja)
			(VF da)
			(LK ist)
			(MF
				[01;31m(NX[00m
					(MF hirschberger strase vierundsechzig)
					(PX
						(APPR in)
						(NX
							[01;31m(NX[00m
								(NX funf)
								(NX drei)
								(NX eins)
								(NX eins)
								(NX neun)[01;31m)[00m
							(NE bonn)))[01;31m)[00m))))
Step:Unary
{'subtrees': ['MF', 'PX'], 'family': ['NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJA', 'NN', 'CARD', 'APPR', 'CARD', 'CARD', 'CARD', 'CARD', 'CARD', 'NE'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (3, 13), 'span': (3, 13), 'left siblings': [], 'label': 'NX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM ja)
			(VF da)
			(LK ist)
			(MF
				(MF hirschberger strase vierundsechzig)
				(PX
					(APPR in)
					(NX
						[01;31m(NX[00m
							(NX funf)
							(NX drei)
							(NX eins)
							(NX eins)
							(NX neun)[01;31m)[00m
						(NE bonn)))))))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX', 'NX', 'NX', 'NX'], 'family': ['NX', 'NE'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'CARD', 'CARD', 'CARD', 'CARD', 'NE'), 'right siblings': ['NE'], 'parent': 'NX', 'auto preterminal span': (7, 13), 'span': (7, 12), 'left siblings': [], 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'remove'}
(TOP ja da ist hirschberger strase vierundsechzig in funf drei eins eins neun bonn)

Sentence 310:
0 Initial errors
0 on fringe, 0 iterations

Sentence 311:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			[01;36m(SU[00m
				(DM
					(NX
						(NE klein)))[01;36m)[00m
			(DM guten tag))))
Step:Unary
{'subtrees': ['DM'], 'family': ['SU', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('NE',), 'right siblings': [(DM (NX (ADJX (ADJA guten)) (NN tag)))], 'left siblings': [], 'auto preterminal span': (0, 1), 'span': (0, 1), 'parent': 'SU', 'label': 'SU', 'classified_type': 'Unary', 'type': 'add'}
(TOP klein guten tag)

Sentence 312:
12 Initial errors
0 on fringe, 7 iterations
6 Error:Co-ordination
1 Error:Modifier Attachment
1 Error:Unary
1 Error:Single Word Phrase
1 Error:UNSET remove
1 Error:Clause Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			[01;31m(NX[00m
				[01;36m(PX[00m
					(ADVX erst)
					(ADVX mal)
					(NX die frage)[01;36m)[00m
				[01;36m(NF[00m
					(SIMPX [01;33m(SIMPX (NF[00m
						(C wie)
						(MF sie)
						(VC anreisen mochten))[01;36m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(C ob)
				(MF sie mit der bahn)
				(VC fahren)
				[01;31m(NF[00m
					[01;31m(PX[00m
						[01;36m(NF[00m
							[01;36m(PX[00m
								(KON oder)
								(PX mit dem bus) [01;33mSIMPX) NF) SIMPX)[00m[01;36m)[00m[01;36m)[00m
						[01;36m(DM[00m
							(KON oder)[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m)))
Step:Co-ordination
{'new_parent': 'SU', 'new_family': ['NX', 'SIMPX', 'KON'], 'mover info': [('KON', (18, 19))], 'old_family': ['KON', 'PX', 'KON'], 'start left siblings': ['KON', 'PX'], 'auto preterminals': ('ADV', 'ADV', 'ART', 'NN', 'KOUS', 'PPER', 'VVINF', 'VMFIN', 'KOUS', 'PPER', 'APPR', 'ART', 'NN', 'VVFIN', 'KON', 'APPR', 'ART', 'NN', 'KON'), 'start right siblings': [], 'end left siblings': ['NX', 'SIMPX'], 'auto preterminal span': (0, 19), 'movers': ['KON'], 'old_parent': 'PX', 'POS confusion': ('KON', 'KON'), 'end right siblings': [], 'classified_type': 'Co-ordination', 'type': 'move'}
(TOP
	(TURN
		(SU
			[01;31m(NX[00m
				[01;36m(PX[00m
					(ADVX erst)
					(ADVX mal)
					(NX die frage)[01;36m)[00m
				[01;36m(NF[00m
					(SIMPX [01;33m(SIMPX (NF[00m
						(C wie)
						(MF sie)
						(VC anreisen mochten))[01;36m)[00m[01;31m)[00m
			(SIMPX ob sie mit der bahn fahren oder mit dem bus) [01;33mNF) SIMPX)[00m
			[01;36m(DM[00m
				(KON oder)[01;36m)[00m)))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'ADVX', 'NX'], 'family': ['PX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'ART', 'NN'), 'right siblings': [(SIMPX (C (KOUS wie)) (MF (NX (PPER sie))) (VC (VXINF (VVINF anreisen)) (VXFIN (VMFIN mochten))))], 'left siblings': [], 'auto preterminal span': (0, 4), 'span': (0, 4), 'parent': 'NX', 'label': 'PX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU
			[01;31m(NX[00m
				(PX erst mal die frage)
				[01;36m(NF[00m
					(SIMPX [01;33m(SIMPX (NF[00m
						(C wie)
						(MF sie)
						(VC anreisen mochten))[01;36m)[00m[01;31m)[00m
			(SIMPX ob sie mit der bahn fahren oder mit dem bus) [01;33mNF) SIMPX)[00m
			[01;36m(DM[00m
				(KON oder)[01;36m)[00m)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['PX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'VVINF', 'VMFIN'), 'right siblings': [], 'left siblings': [(PX (ADVX (ADV erst)) (ADVX (ADV mal)) (NX (ART die) (NN frage)))], 'auto preterminal span': (4, 8), 'span': (4, 8), 'parent': 'NX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU
			[01;31m(NX[00m
				(PX erst mal die frage)
				[01;33m(SIMPX (NF[00m (NF wie sie anreisen mochten)[01;31m)[00m
			(SIMPX ob sie mit der bahn fahren oder mit dem bus) [01;33mNF) SIMPX)[00m
			[01;36m(DM[00m
				(KON oder)[01;36m)[00m)))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['NX', 'SIMPX', 'DM'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON',), 'right siblings': [], 'left siblings': [(NX (PX (ADVX (ADV erst)) (ADVX (ADV mal)) (NX (ART die) (NN frage))) (NF (SIMPX (C (KOUS wie)) (MF (NX (PPER sie))) (VC (VXINF (VVINF anreisen)) (VXFIN (VMFIN mochten)))))), (SIMPX (C (KOUS ob)) (MF (NX (PPER sie)) (PX (APPR mit) (NX (ART der) (NN bahn)))) (VC (VXFIN (VVFIN fahren))) (NF (PX (KON oder) (PX (APPR mit) (NX (ART dem) (NN bus))))))], 'auto preterminal span': (18, 19), 'span': (18, 19), 'parent': 'SU', 'label': 'DM', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SU
			[01;31m(NX[00m
				(PX erst mal die frage)
				[01;33m(SIMPX (NF[00m (NF wie sie anreisen mochten)[01;31m)[00m
			(SIMPX ob sie mit der bahn fahren oder mit dem bus) [01;33mNF) SIMPX)[00m
			(DM oder))))
Step:UNSET remove
{'subtrees': ['PX', 'NF'], 'family': ['NX', 'SIMPX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'ART', 'NN', 'KOUS', 'PPER', 'VVINF', 'VMFIN', 'KOUS', 'PPER', 'APPR', 'ART', 'NN', 'VVFIN', 'KON', 'APPR', 'ART', 'NN', 'KON'), 'right siblings': ['SIMPX', 'DM'], 'parent': 'SU', 'auto preterminal span': (0, 19), 'span': (0, 8), 'left siblings': [], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(PX erst mal die frage)
			[01;36m(SIMPX[00m
				[01;36m(NF[00m
					(NF wie sie anreisen mochten)
					(SIMPX ob sie mit der bahn fahren oder mit dem bus)[01;36m)[00m[01;36m)[00m
			(DM oder))))
Step:Clause Attachment
{'subtrees': ['NF', 'SIMPX'], 'family': ['PX', 'NF', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'VVINF', 'VMFIN', 'KOUS', 'PPER', 'APPR', 'ART', 'NN', 'VVFIN', 'KON', 'APPR', 'ART', 'NN'), 'right siblings': [(DM (KON oder))], 'left siblings': [(PX (ADVX (ADV erst)) (ADVX (ADV mal)) (NX (ART die) (NN frage)))], 'auto preterminal span': (4, 18), 'span': (4, 18), 'parent': 'SU', 'label': 'NF', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU
			(PX erst mal die frage)
			[01;36m(SIMPX[00m
				(NF
					(NF wie sie anreisen mochten)
					(SIMPX ob sie mit der bahn fahren oder mit dem bus))[01;36m)[00m
			(DM oder))))
Step:Unary
{'subtrees': ['NF'], 'family': ['PX', 'SIMPX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'VVINF', 'VMFIN', 'KOUS', 'PPER', 'APPR', 'ART', 'NN', 'VVFIN', 'KON', 'APPR', 'ART', 'NN'), 'right siblings': [(DM (KON oder))], 'left siblings': [(PX (ADVX (ADV erst)) (ADVX (ADV mal)) (NX (ART die) (NN frage)))], 'auto preterminal span': (4, 18), 'span': (4, 18), 'parent': 'SU', 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'add'}
(TOP erst mal die frage wie sie anreisen mochten ob sie mit der bahn fahren oder mit dem bus oder)

Sentence 313:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX
				(VF ich)
				(LK dachte)
				(MF
					(NX mir)
					[01;31m(PX[00m
						(ADVX moglichst)
						[01;36m(PX[00m
							(APPR mit)
							(NX der bahn)[01;36m)[00m[01;31m)[00m)))))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'ADVX', 'PX'], 'mover info': [('ADVX', (4, 5))], 'old_family': ['ADVX', 'APPR', 'NX'], 'start left siblings': [], 'auto preterminals': ('PRF', 'ADV', 'APPR', 'ART', 'NN'), 'start right siblings': ['APPR', 'NX'], 'end left siblings': ['NX'], 'auto preterminal span': (3, 8), 'movers': ['ADVX'], 'old_parent': 'PX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['PX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP ja ich dachte mir moglichst mit der bahn)

Sentence 314:
0 Initial errors
0 on fringe, 0 iterations

Sentence 315:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(ADVX
				[01;36m(ADVX[00m [01;31m(ADJX[00m
					(ADJD lieber)[01;31m)[00m[01;36m)[00m
				(ADVX gern)
				(ADVX morgens)))))
Step:Single Word Phrase
{'family': ['ADVX', 'ADVX', 'ADVX'], 'auto preterminal span': (0, 1), 'span': (0, 1), 'subtrees': ['ADJD'], 'parent': 'ADVX', 'over_word': True, 'auto preterminals': ('ADJD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'ADVX')}
(TOP lieber gern morgens)

Sentence 316:
0 Initial errors
0 on fringe, 0 iterations

Sentence 317:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(SIMPX
				(VF was)
				(LK hatten)
				(MF
					[01;36m(MF[00m
						(NX sie)
						(ADVX denn)
						(ADVX da)[01;36m)[00m
					(APPR fur)
					(ART eine)
					(PX fur eine zugverbindung))))))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADVX', 'ADVX'], 'family': ['MF', 'APPR', 'ART', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV', 'ADV'), 'right siblings': [(APPR fur), (ART eine), (PX (APPR fur) (NX (ART eine) (NN zugverbindung)))], 'left siblings': [], 'auto preterminal span': (2, 5), 'span': (2, 5), 'parent': 'MF', 'label': 'MF', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP was hatten sie denn da fur eine fur eine zugverbindung)

Sentence 318:
0 Initial errors
0 on fringe, 0 iterations

Sentence 319:
0 Initial errors
0 on fringe, 0 iterations

Sentence 320:
0 Initial errors
0 on fringe, 0 iterations

Sentence 321:
0 Initial errors
0 on fringe, 0 iterations

Sentence 322:
0 Initial errors
0 on fringe, 0 iterations

Sentence 323:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM ach)
			[01;36m(SIMPX[00m
				(SIMPX das konnte fur sie doch eine gute erholung sein)
				(ADVX oder nicht)[01;36m)[00m)))
Step:Modifier Attachment
{'subtrees': ['SIMPX', 'ADVX'], 'family': ['DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VMFIN', 'APPR', 'PPER', 'ADV', 'ART', 'ADJA', 'NN', 'VAINF', 'KON', 'PTKNEG'), 'right siblings': [], 'left siblings': [(DM (ITJ ach))], 'auto preterminal span': (1, 12), 'span': (1, 12), 'parent': 'SU', 'label': 'SIMPX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP ach das konnte fur sie doch eine gute erholung sein oder nicht)

Sentence 324:
0 Initial errors
0 on fringe, 0 iterations

Sentence 325:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(ADJX ganz genau)
			(SIMPX
				[01;31m(VF[00m
					(ADVX
						(ADV so))[01;31m)[00m
				(LK sehe)
				(MF ich das namlich)))))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'PDS', 'ADV'), 'right siblings': ['LK', 'MF'], 'parent': 'SIMPX', 'auto preterminal span': (2, 7), 'span': (2, 3), 'left siblings': [], 'label': 'VF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ganz genau so sehe ich das namlich)

Sentence 326:
2 Initial errors
0 on fringe, 2 iterations
1 Error:UNSET add
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM nee)
			(SIMPX das musten sie)
			(SIMPX
				(VF das)
				(LK musten)
				[01;31m(FKOORD[00m
					(MVC sie schon selber zum zum bahnhof bringen)
					(KON und)
					(MVCN
						(MF von da aus dann halt)
						[01;36m(VC[00m
							(VC transportieren lassen)
							(NF vielleicht)[01;36m)[00m)[01;31m)[00m))))
Step:UNSET add
{'subtrees': ['VC', 'NF'], 'family': ['MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVINF', 'VVINF', 'ADV'), 'right siblings': [], 'left siblings': [(MF (PX (APPR von) (ADVX (ADV da)) (APZR aus)) (ADVX (ADV dann)) (ADVX (ADV halt)))], 'auto preterminal span': (19, 22), 'span': (19, 22), 'parent': 'MVCN', 'label': 'VC', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM nee)
			(SIMPX das musten sie)
			(SIMPX
				(VF das)
				(LK musten)
				[01;31m(FKOORD[00m
					(MVC sie schon selber zum zum bahnhof bringen)
					(KON und)
					(MVCN von da aus dann halt transportieren lassen vielleicht)[01;31m)[00m))))
Step:UNSET remove
{'subtrees': ['MVC', 'KON', 'MVCN'], 'family': ['VF', 'LK', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VMFIN', 'PPER', 'ADV', 'ADV', 'APPRART', 'APPRART', 'NN', 'VVINF', 'KON', 'APPR', 'ADV', 'APZR', 'ADV', 'ADV', 'VVINF', 'VVINF', 'ADV'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (4, 22), 'span': (6, 22), 'left siblings': ['VF', 'LK'], 'label': 'FKOORD', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP nee das musten sie das musten sie schon selber zum zum bahnhof bringen und von da aus dann halt transportieren lassen vielleicht)

Sentence 327:
0 Initial errors
0 on fringe, 0 iterations

Sentence 328:
7 Initial errors
0 on fringe, 4 iterations
3 Error:Clause Attachment
2 Error:UNSET move
1 Error:UNSET add
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;36m(SU[00m
				(DM ja)
				(DM sicher)
				(DM herr klein)[01;36m)[00m
			[01;36m(SIMPX[00m
				[01;36m(SU[00m
					(SIMPX ich mache das fertig)
					[01;31m(SIMPX[00m
						[01;31m(KOORD[00m
							(KON und)[01;31m)[00m
						[01;36m(SIMPX[00m
							(VF dann)
							(LK werde)
							(MF ich sie noch mal)
							(VC anrufen)[01;36m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;31m)[00m))
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['SIMPX', 'KOORD', 'VF', 'LK', 'MF', 'VC'], 'mover info': [('SIMPX', (4, 8))], 'old_family': ['DM', 'DM', 'DM', 'SIMPX', 'SIMPX'], 'start left siblings': ['DM', 'DM', 'DM'], 'auto preterminals': ('PTKANT', 'ITJ', 'NN', 'NE', 'PPER', 'VVFIN', 'PDS', 'PTKVZ', 'KON', 'ADV', 'VAFIN', 'PPER', 'PPER', 'ADV', 'ADV', 'VVINF'), 'start right siblings': ['SIMPX'], 'end left siblings': [], 'auto preterminal span': (0, 16), 'adding node already present': False, 'movers': ['SIMPX'], 'old_parent': 'SU', 'added and moved': True, 'end right siblings': ['KOORD', 'VF', 'LK', 'MF', 'VC'], 'classified_type': 'Clause Attachment', 'type': 'move', 'added label': 'SIMPX'}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;36m(SU[00m
				(DM ja)
				(DM sicher)
				(DM herr klein)[01;36m)[00m
			(SU
				(SIMPX
					(SIMPX ich mache das fertig)
					[01;31m(KOORD[00m
						(KON und)[01;31m)[00m
					[01;36m(SIMPX[00m
						(VF dann)
						(LK werde)
						(MF ich sie noch mal)
						(VC anrufen)[01;36m)[00m))[01;31m)[00m))
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['SU', 'SU'], 'mover info': [('SU', (4, 16))], 'old_family': ['DM', 'DM', 'DM', 'SU'], 'start left siblings': ['DM', 'DM', 'DM'], 'auto preterminals': ('PTKANT', 'ITJ', 'NN', 'NE', 'PPER', 'VVFIN', 'PDS', 'PTKVZ', 'KON', 'ADV', 'VAFIN', 'PPER', 'PPER', 'ADV', 'ADV', 'VVINF'), 'start right siblings': [], 'end left siblings': ['SU'], 'auto preterminal span': (0, 16), 'movers': ['SU'], 'old_parent': 'SU', 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU ja sicher herr klein)
		(SU
			(SIMPX
				(SIMPX ich mache das fertig)
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				[01;36m(SIMPX[00m
					(VF dann)
					(LK werde)
					(MF ich sie noch mal)
					(VC anrufen)[01;36m)[00m))))
Step:UNSET add
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['SIMPX', 'KOORD', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'PPER', 'ADV', 'ADV', 'VVINF'), 'right siblings': [], 'left siblings': [(SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN mache))) (MF (NX (PDS das))) (VC (PTKVZ fertig))), (KOORD (KON und))], 'auto preterminal span': (9, 16), 'span': (9, 16), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU ja sicher herr klein)
		(SU
			(SIMPX
				(SIMPX ich mache das fertig)
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				(SIMPX dann werde ich sie noch mal anrufen)))))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['SIMPX', 'KOORD', 'SIMPX'], 'over_word': True, 'over words': True, 'auto preterminals': ('PPER', 'VVFIN', 'PDS', 'PTKVZ', 'KON', 'ADV', 'VAFIN', 'PPER', 'PPER', 'ADV', 'ADV', 'VVINF'), 'right siblings': ['SIMPX'], 'parent': 'SIMPX', 'auto preterminal span': (4, 16), 'span': (8, 9), 'left siblings': ['SIMPX'], 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP ja sicher herr klein ich mache das fertig und dann werde ich sie noch mal anrufen)

Sentence 329:
0 Initial errors
0 on fringe, 0 iterations

Sentence 330:
0 Initial errors
0 on fringe, 0 iterations

Sentence 331:
3 Initial errors
0 on fringe, 2 iterations
2 Error:Clause Attachment
1 Error:Clause Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;36m(SU[00m
				(DM also)
				(SIMPX von mir aus ist es egal)[01;36m)[00m
			[01;36m(SU[00m
				(SIMPX
					(VF ich)
					(LK wurde)
					(MF mich da nach ihnen)
					(VC richten))[01;36m)[00m[01;31m)[00m))
Step:Clause Attachment
{'new_parent': 'TURN', 'new_family': ['DM', 'SIMPX', 'SU'], 'mover info': [('DM', (0, 1)), ('SIMPX', (1, 7))], 'old_family': ['DM', 'SIMPX', 'SIMPX'], 'start left siblings': [], 'auto preterminals': ('ADV', 'APPR', 'PPER', 'APZR', 'VAFIN', 'PPER', 'ADJD', 'PPER', 'VAFIN', 'PRF', 'ADV', 'APPR', 'PPER', 'VVINF'), 'start right siblings': ['SIMPX'], 'end left siblings': [], 'auto preterminal span': (0, 14), 'movers': ['DM', 'SIMPX'], 'old_parent': 'SU', 'end right siblings': ['SU'], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;36m(SU[00m
			(DM also)
			(SIMPX von mir aus ist es egal)[01;36m)[00m
		(SU ich wurde mich da nach ihnen richten)))
Step:Clause Attachment
{'subtrees': ['DM', 'SIMPX'], 'family': ['SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'APPR', 'PPER', 'APZR', 'VAFIN', 'PPER', 'ADJD'), 'right siblings': [(SU (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VAFIN wurde))) (MF (NX (PRF mich)) (ADVX (ADV da)) (PX (APPR nach) (NX (PPER ihnen)))) (VC (VXINF (VVINF richten)))))], 'left siblings': [], 'auto preterminal span': (0, 7), 'span': (0, 7), 'parent': 'TURN', 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP also von mir aus ist es egal ich wurde mich da nach ihnen richten)

Sentence 332:
0 Initial errors
0 on fringe, 0 iterations

Sentence 333:
3 Initial errors
0 on fringe, 2 iterations
2 Error:Clause Attachment
1 Error:Clause Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;36m(SU[00m
				(DM ja)
				(SIMPX denke ich schon)[01;36m)[00m
			[01;36m(SU[00m
				(SIMPX
					(VF das)
					(LK ware)
					(MF vielleicht vernunftig))[01;36m)[00m[01;31m)[00m))
Step:Clause Attachment
{'new_parent': 'TURN', 'new_family': ['DM', 'SIMPX', 'SU'], 'mover info': [('DM', (0, 1)), ('SIMPX', (1, 4))], 'old_family': ['DM', 'SIMPX', 'SIMPX'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'VVFIN', 'PPER', 'ADV', 'PDS', 'VAFIN', 'ADV', 'ADJD'), 'start right siblings': ['SIMPX'], 'end left siblings': [], 'auto preterminal span': (0, 8), 'movers': ['DM', 'SIMPX'], 'old_parent': 'SU', 'end right siblings': ['SU'], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;36m(SU[00m
			(DM ja)
			(SIMPX denke ich schon)[01;36m)[00m
		(SU das ware vielleicht vernunftig)))
Step:Clause Attachment
{'subtrees': ['DM', 'SIMPX'], 'family': ['SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'VVFIN', 'PPER', 'ADV'), 'right siblings': [(SU (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VAFIN ware))) (MF (ADVX (ADV vielleicht)) (ADJX (ADJD vernunftig)))))], 'left siblings': [], 'auto preterminal span': (0, 4), 'span': (0, 4), 'parent': 'TURN', 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP ja denke ich schon das ware vielleicht vernunftig)

Sentence 334:
0 Initial errors
0 on fringe, 0 iterations

Sentence 335:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX
				(VF ich)
				(LK wurde)
				(VC sagen)
				(NF
					(SIMPX
						(VF wir)
						(LK wurden)
						(MF
							[01;36m(ADVX[00m [01;31m(ADJX[00m
								(ADJD besser)[01;31m)[00m[01;36m)[00m
							(ADJX ziemlich fruh))
						(VC fahren)
						(NF damit wir morgens direkt da sind und dann direkt auf die messe losgehen konnen)))))))
Step:Single Word Phrase
{'family': ['ADVX', 'ADJX'], 'auto preterminal span': (6, 7), 'span': (6, 7), 'subtrees': ['ADJD'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('ADJD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'ADVX')}
(TOP ja ich wurde sagen wir wurden besser ziemlich fruh fahren damit wir morgens direkt da sind und dann direkt auf die messe losgehen konnen)

Sentence 336:
0 Initial errors
0 on fringe, 0 iterations

Sentence 337:
0 Initial errors
0 on fringe, 0 iterations

Sentence 338:
0 Initial errors
0 on fringe, 0 iterations

Sentence 339:
0 Initial errors
0 on fringe, 0 iterations

Sentence 340:
0 Initial errors
0 on fringe, 0 iterations

Sentence 341:
0 Initial errors
0 on fringe, 0 iterations

Sentence 342:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(NX das)
			(SIMPX was fur ein hotel wurden sie vorziehen)[01;31m)[00m))
Step:Unary
{'subtrees': ['NX', 'SIMPX'], 'family': ['SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'PWS', 'APPR', 'ART', 'NN', 'VAFIN', 'PPER', 'VVINF'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 8), 'span': (0, 8), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP das was fur ein hotel wurden sie vorziehen)

Sentence 343:
0 Initial errors
0 on fringe, 0 iterations

Sentence 344:
0 Initial errors
0 on fringe, 0 iterations

Sentence 345:
0 Initial errors
0 on fringe, 0 iterations

Sentence 346:
0 Initial errors
0 on fringe, 0 iterations

Sentence 347:
0 Initial errors
0 on fringe, 0 iterations

Sentence 348:
0 Initial errors
0 on fringe, 0 iterations

Sentence 349:
0 Initial errors
0 on fringe, 0 iterations

Sentence 350:
0 Initial errors
0 on fringe, 0 iterations

Sentence 351:
0 Initial errors
0 on fringe, 0 iterations

Sentence 352:
0 Initial errors
0 on fringe, 0 iterations

Sentence 353:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM ja)
			[01;31m(DM[00m
				[01;36m(DM[00m
					(ITJ tschus)[01;36m)[00m
				(ADVX dann)[01;31m)[00m)))
Step:Modifier Attachment
{'new_parent': 'SU', 'new_family': ['DM', 'DM', 'ADVX'], 'mover info': [('ADVX', (2, 3))], 'old_family': ['ITJ', 'ADVX'], 'start left siblings': ['ITJ'], 'auto preterminals': ('PTKANT', 'ITJ', 'ADV'), 'start right siblings': [], 'end left siblings': ['DM', 'DM'], 'auto preterminal span': (0, 3), 'movers': ['ADVX'], 'old_parent': 'DM', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP ja tschus dann)

Sentence 354:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(NX[00m
	(TOP
		(TURN
			(SU
				(DM
					(ITJ tschus)))))[01;36m)[00m
Step:Unary
{'subtrees': ['TURN'], 'family': ['NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ',), 'right siblings': [], 'left siblings': [], 'auto preterminal span': (0, 1), 'span': (0, 1), 'parent': 'TOP', 'label': 'NX', 'classified_type': 'Unary', 'type': 'add'}
(TOP tschus)

Sentence 355:
8 Initial errors
0 on fringe, 3 iterations
5 Error:UNSET move
2 Error:PP Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			[01;36m(NX[00m
				[01;36m(DM[00m
					[01;31m(DM[00m
						[01;31m(NX[00m
							(NX reiseagentur)
							[01;33m(NX (NX[00m (NX maritim)[01;31m)[00m[01;31m)[00m
					[01;31m(DM[00m
						[01;31m(NX[00m
							(NX fischenbeck) [01;33mNX)[00m
							(PX am apparat)[01;31m)[00m[01;31m)[00m [01;33mNX)[00m[01;36m)[00m[01;36m)[00m
			(DM guten tag))))
Step:UNSET move
{'new_parent': 'NX', 'new_family': ['NX', 'NX', 'DM'], 'mover info': [('DM', (2, 5))], 'old_family': ['DM', 'DM', 'DM'], 'start left siblings': ['DM'], 'auto preterminals': ('NN', 'NE', 'NE', 'APPRART', 'NN', 'ADJA', 'NN'), 'start right siblings': ['DM'], 'end left siblings': ['NX', 'NX'], 'auto preterminal span': (0, 7), 'adding node already present': False, 'movers': ['DM'], 'old_parent': 'SU', 'added and moved': True, 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(SU
			(DM
				(NX
					(NX reiseagentur)
					(NX [01;33m(NX[00m
						(NX maritim)
						[01;31m(DM[00m
							[01;31m(NX[00m
								(NX fischenbeck) [01;33mNX)[00m
								(PX am apparat)[01;31m)[00m[01;31m)[00m)))
			(DM guten tag))))
Step:PP Attachment
{'new_parent': 'NX', 'new_family': ['NX', 'NX', 'PX'], 'mover info': [('PX', (3, 5))], 'old_family': ['NX', 'PX'], 'start left siblings': ['NX'], 'auto preterminals': ('NN', 'NE', 'NE', 'APPRART', 'NN'), 'start right siblings': [], 'end left siblings': ['NX', 'NX'], 'auto preterminal span': (0, 5), 'adding node already present': False, 'movers': ['PX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(SU
			(DM
				(NX
					(NX reiseagentur)
					(NX
						(NX
							(NX maritim)
							[01;31m(DM[00m
								(NX
									(NE fischenbeck))[01;31m)[00m)
						(PX am apparat))))
			(DM guten tag))))
Step:Unary
{'subtrees': ['NX'], 'family': ['NX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('NE', 'NE'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (1, 3), 'span': (2, 3), 'left siblings': ['NX'], 'label': 'DM', 'classified_type': 'Unary', 'type': 'remove'}
(TOP reiseagentur maritim fischenbeck am apparat guten tag)

Sentence 356:
0 Initial errors
0 on fringe, 0 iterations

Sentence 357:
0 Initial errors
0 on fringe, 0 iterations

Sentence 358:
0 Initial errors
0 on fringe, 0 iterations

Sentence 359:
8 Initial errors
0 on fringe, 2 iterations
6 Error:NP Attachment
2 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SIMPX[00m
	(TOP [01;33m(VF (NX[00m
		(TURN
			(SU
				(NX geschaft)
				[01;31m(SIMPX[00m
					[01;31m(VF[00m
						[01;31m(NX[00m
							(NN geschaft)[01;31m)[00m[01;31m)[00m [01;33mNX) VF)[00m
					(LK ist)
					[01;36m(ADJX[00m
						(MF
							[01;31m(NX[00m
								(NN geschaft)[01;31m)[00m)[01;36m)[00m[01;31m)[00m)))[01;36m)[00m
Step:NP Attachment
{'new_parent': 'NX', 'new_family': ['NX', 'NN'], 'mover info': [('NX', (0, 1))], 'old_family': ['NX', 'SIMPX'], 'start left siblings': [], 'auto preterminals': ('NN', 'NN', 'VAFIN', 'NN'), 'start right siblings': ['SIMPX'], 'end left siblings': [], 'auto preterminal span': (0, 4), 'movers': ['NX'], 'old_parent': 'SU', 'POS confusion': ('NN', 'NN'), 'end right siblings': ['NN'], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU
			(SIMPX
				(VF geschaft geschaft)
				(LK ist)
				[01;36m(ADJX[00m
					(MF
						[01;31m(NX[00m
							(NN geschaft)[01;31m)[00m)[01;36m)[00m))))
Step:Single Word Phrase
{'family': ['ADJX'], 'auto preterminal span': (3, 4), 'span': (3, 4), 'subtrees': ['NN'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('NN',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('NX', 'ADJX')}
(TOP geschaft geschaft ist geschaft)

Sentence 360:
2 Initial errors
0 on fringe, 2 iterations
1 Error:UNSET add
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(NX
				(ADVX ungefahr)
				[01;36m(NX[00m
					[01;36m(SU[00m
						(ADJX zweihundert dreisig)
						(NN mark)[01;36m)[00m[01;36m)[00m))))
Step:UNSET add
{'subtrees': ['ADJX', 'NN'], 'family': ['ADVX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'CARD', 'NN'), 'right siblings': [], 'left siblings': [(ADVX (ADV ungefahr))], 'auto preterminal span': (1, 4), 'span': (1, 4), 'parent': 'NX', 'label': 'SU', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU
			(NX
				(ADVX ungefahr)
				[01;36m(NX[00m
					(SU
						(ADJX zweihundert dreisig)
						(NN mark))[01;36m)[00m))))
Step:Unary
{'subtrees': ['SU'], 'family': ['ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'CARD', 'NN'), 'right siblings': [], 'left siblings': [(ADVX (ADV ungefahr))], 'auto preterminal span': (1, 4), 'span': (1, 4), 'parent': 'NX', 'label': 'NX', 'classified_type': 'Unary', 'type': 'add'}
(TOP ungefahr zweihundert dreisig mark)

Sentence 361:
0 Initial errors
0 on fringe, 0 iterations

Sentence 362:
0 Initial errors
0 on fringe, 0 iterations

Sentence 363:
0 Initial errors
0 on fringe, 0 iterations

Sentence 364:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(SIMPX
				(VF das)
				(LK macht)
				(MF [01;33m(MF[00m
					(ADVX dann)
					[01;31m(NX[00m
						(NX achtundsiebzig mark) [01;33mMF)[00m
						(ADVX einfach)[01;31m)[00m)))))
Step:Modifier Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'ADVX'], 'mover info': [('ADVX', (5, 6))], 'old_family': ['NX', 'ADVX'], 'start left siblings': ['NX'], 'auto preterminals': ('PDS', 'VVFIN', 'ADV', 'CARD', 'NN', 'ADV'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (0, 6), 'adding node already present': False, 'movers': ['ADVX'], 'old_parent': 'NX', 'POS confusion': ('ADV', 'ADV'), 'added and moved': True, 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'MF'}
(TOP das macht dann achtundsiebzig mark einfach)

Sentence 365:
0 Initial errors
0 on fringe, 0 iterations

Sentence 366:
14 Initial errors
0 on fringe, 8 iterations
4 Error:UNSET move
3 Error:NP Internal Structure
2 Error:NP Attachment
1 Error:Unary
1 Error:UNSET add
1 Error:UNSET remove
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF da)
				(LK kann)
				(MF
					(NX ich)
					(NX ihnen)
					(NX [01;33m(NX[00m
						(ART das)
						[01;31m(NX[00m
							[01;31m(NX[00m
								(NE grandhotel)[01;31m)[00m [01;33mNX)[00m
							(NX musmann)[01;31m)[00m))
				(VC anbieten)[01;31m)[00m
			[01;36m(NX[00m
				[01;36m(NF[00m
					(ART [01;33m(NX[00m das)
					[01;31m(NX[00m
						[01;31m(NX[00m
							(ADJX zentrale)
							(NN lage)[01;31m)[00m [01;33mNX)[00m
						(PX mit garage)[01;31m)[00m[01;36m)[00m[01;36m)[00m
			(SIMPX die brauchen sie zwar nicht)
			[01;31m(SIMPX[00m
				(VF da)
				(LK liegt)
				(MF
					(NX die preiskategorie fur ein einzelzimmer)
					(PX [01;33m(PX[00m
						(APPR bei)
						[01;31m(NX[00m
							(NX hundert achtundsiebzig mark) [01;33mPX)[00m
							[01;36m(PX[00m
								(APPR bis)
								(NX funfhundert achtzehn mark)[01;36m)[00m[01;31m)[00m))[01;31m)[00m[01;31m)[00m))
Step:UNSET move
{'new_parent': 'NX', 'new_family': ['ART', 'ADJX', 'NN'], 'mover info': [('ART', (8, 9))], 'old_family': ['SIMPX', 'ART', 'NX', 'SIMPX', 'SIMPX'], 'start left siblings': ['SIMPX'], 'auto preterminals': ('ADV', 'VMFIN', 'PPER', 'PPER', 'ART', 'NE', 'NE', 'VVINF', 'ART', 'ADJA', 'NN', 'APPR', 'NN', 'PDS', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADV', 'VVFIN', 'ART', 'NN', 'APPR', 'ART', 'NN', 'APPR', 'CARD', 'CARD', 'NN', 'APPR', 'CARD', 'CARD', 'NN'), 'start right siblings': ['NX', 'SIMPX', 'SIMPX'], 'end left siblings': [], 'auto preterminal span': (0, 33), 'movers': ['ART'], 'old_parent': 'SU', 'POS confusion': ('ART', 'ART'), 'end right siblings': ['ADJX', 'NN'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF da)
				(LK kann)
				(MF
					(NX ich)
					(NX ihnen)
					(NX [01;33m(NX[00m
						(ART das)
						[01;31m(NX[00m
							[01;31m(NX[00m
								(NE grandhotel)[01;31m)[00m [01;33mNX)[00m
							(NX musmann)[01;31m)[00m))
				(VC anbieten)[01;31m)[00m
			[01;36m(NF[00m
				(NX
					(NX das zentrale lage)
					(PX mit garage))[01;36m)[00m
			(SIMPX die brauchen sie zwar nicht)
			[01;31m(SIMPX[00m
				(VF da)
				(LK liegt)
				(MF
					(NX die preiskategorie fur ein einzelzimmer)
					(PX [01;33m(PX[00m
						(APPR bei)
						[01;31m(NX[00m
							(NX hundert achtundsiebzig mark) [01;33mPX)[00m
							[01;36m(PX[00m
								(APPR bis)
								(NX funfhundert achtzehn mark)[01;36m)[00m[01;31m)[00m))[01;31m)[00m[01;31m)[00m))
Step:NP Internal Structure
{'new_parent': 'NX', 'new_family': ['ART', 'NE'], 'mover info': [('ART', (4, 5))], 'old_family': ['ART', 'NX'], 'start left siblings': [], 'auto preterminals': ('ART', 'NE', 'NE'), 'start right siblings': ['NX'], 'end left siblings': [], 'auto preterminal span': (4, 7), 'movers': ['ART'], 'old_parent': 'NX', 'POS confusion': ('ART', 'ART'), 'end right siblings': ['NE'], 'classified_type': 'NP Internal Structure', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF da)
				(LK kann)
				(MF ich ihnen das grandhotel musmann)
				(VC anbieten)[01;31m)[00m
			[01;36m(NF[00m
				(NX
					(NX das zentrale lage)
					(PX mit garage))[01;36m)[00m
			(SIMPX die brauchen sie zwar nicht)
			[01;31m(SIMPX[00m
				(VF da)
				(LK liegt)
				(MF
					(NX die preiskategorie fur ein einzelzimmer)
					(PX [01;33m(PX[00m
						(APPR bei)
						[01;31m(NX[00m
							(NX hundert achtundsiebzig mark) [01;33mPX)[00m
							[01;36m(PX[00m
								(APPR bis)
								(NX funfhundert achtzehn mark)[01;36m)[00m[01;31m)[00m))[01;31m)[00m[01;31m)[00m))
Step:NP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'PX', 'APPR', 'NX'], 'mover info': [('APPR', (29, 30)), ('NX', (30, 33))], 'old_family': ['NX', 'APPR', 'NX'], 'start left siblings': ['NX'], 'auto preterminals': ('ART', 'NN', 'APPR', 'ART', 'NN', 'APPR', 'CARD', 'CARD', 'NN', 'APPR', 'CARD', 'CARD', 'NN'), 'start right siblings': [], 'end left siblings': ['NX', 'PX'], 'auto preterminal span': (20, 33), 'adding node already present': False, 'movers': ['APPR', 'NX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'PX'}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF da)
				(LK kann)
				(MF ich ihnen das grandhotel musmann)
				(VC anbieten)[01;31m)[00m
			[01;36m(NF[00m
				(NX
					(NX das zentrale lage)
					(PX mit garage))[01;36m)[00m
			(SIMPX die brauchen sie zwar nicht)
			[01;31m(SIMPX[00m
				(VF da)
				(LK liegt)
				(MF
					(NX die preiskategorie fur ein einzelzimmer)
					(PX
						(PX bei hundert achtundsiebzig mark)
						[01;36m(PX[00m
							(APPR bis)
							(NX funfhundert achtzehn mark)[01;36m)[00m))[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['NX'], 'family': ['SIMPX', 'NF', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'ADJA', 'NN', 'APPR', 'NN'), 'right siblings': [(SIMPX (VF (NX (PDS die))) (LK (VXFIN (VVFIN brauchen))) (MF (NX (PPER sie)) (ADVX (ADV zwar)) (ADVX (PTKNEG nicht)))), (SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VVFIN liegt))) (MF (NX (NX (ART die) (NN preiskategorie)) (PX (APPR fur) (NX (ART ein) (NN einzelzimmer)))) (PX (PX (APPR bei) (NX (ADJX (CARD hundert) (CARD achtundsiebzig)) (NN mark))) (APPR bis) (NX (ADJX (CARD funfhundert) (CARD achtzehn)) (NN mark)))))], 'left siblings': [(SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VMFIN kann))) (MF (NX (PPER ich)) (NX (PPER ihnen)) (NX (NX (ART das) (NE grandhotel)) (NX (NE musmann)))) (VC (VXINF (VVINF anbieten))))], 'auto preterminal span': (8, 13), 'span': (8, 13), 'parent': 'SU', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF da)
				(LK kann)
				(MF ich ihnen das grandhotel musmann)
				(VC anbieten)[01;31m)[00m
			(NF das zentrale lage mit garage)
			(SIMPX die brauchen sie zwar nicht)
			[01;31m(SIMPX[00m
				(VF da)
				(LK liegt)
				(MF
					(NX die preiskategorie fur ein einzelzimmer)
					(PX
						(PX bei hundert achtundsiebzig mark)
						[01;36m(PX[00m
							(APPR bis)
							(NX funfhundert achtzehn mark)[01;36m)[00m))[01;31m)[00m[01;31m)[00m))
Step:UNSET add
{'subtrees': ['APPR', 'NX'], 'family': ['PX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'CARD', 'CARD', 'NN'), 'right siblings': [], 'left siblings': [(PX (APPR bei) (NX (ADJX (CARD hundert) (CARD achtundsiebzig)) (NN mark)))], 'auto preterminal span': (29, 33), 'span': (29, 33), 'parent': 'PX', 'label': 'PX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF da)
				(LK kann)
				(MF ich ihnen das grandhotel musmann)
				(VC anbieten)[01;31m)[00m
			(NF das zentrale lage mit garage)
			(SIMPX die brauchen sie zwar nicht)
			[01;31m(SIMPX[00m
				(VF da)
				(LK liegt)
				(MF die preiskategorie fur ein einzelzimmer bei hundert achtundsiebzig mark bis funfhundert achtzehn mark)[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['SIMPX', 'NF', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VMFIN', 'PPER', 'PPER', 'ART', 'NE', 'NE', 'VVINF', 'ART', 'ADJA', 'NN', 'APPR', 'NN', 'PDS', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADV', 'VVFIN', 'ART', 'NN', 'APPR', 'ART', 'NN', 'APPR', 'CARD', 'CARD', 'NN', 'APPR', 'CARD', 'CARD', 'NN'), 'right siblings': ['NF', 'SIMPX', 'SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 33), 'span': (0, 8), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		[01;31m(SU[00m
			(VF da)
			(LK kann)
			(MF ich ihnen das grandhotel musmann)
			(VC anbieten)
			(NF das zentrale lage mit garage)
			(SIMPX die brauchen sie zwar nicht)
			[01;31m(SIMPX[00m
				(VF da)
				(LK liegt)
				(MF die preiskategorie fur ein einzelzimmer bei hundert achtundsiebzig mark bis funfhundert achtzehn mark)[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['VF', 'LK', 'MF', 'VC', 'NF', 'SIMPX', 'SIMPX'], 'family': ['SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VMFIN', 'PPER', 'PPER', 'ART', 'NE', 'NE', 'VVINF', 'ART', 'ADJA', 'NN', 'APPR', 'NN', 'PDS', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADV', 'VVFIN', 'ART', 'NN', 'APPR', 'ART', 'NN', 'APPR', 'CARD', 'CARD', 'NN', 'APPR', 'CARD', 'CARD', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 33), 'span': (0, 33), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(VF da)
		(LK kann)
		(MF ich ihnen das grandhotel musmann)
		(VC anbieten)
		(NF das zentrale lage mit garage)
		(SIMPX die brauchen sie zwar nicht)
		[01;31m(SIMPX[00m
			(VF da)
			(LK liegt)
			(MF die preiskategorie fur ein einzelzimmer bei hundert achtundsiebzig mark bis funfhundert achtzehn mark)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['VF', 'LK', 'MF', 'VC', 'NF', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VMFIN', 'PPER', 'PPER', 'ART', 'NE', 'NE', 'VVINF', 'ART', 'ADJA', 'NN', 'APPR', 'NN', 'PDS', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADV', 'VVFIN', 'ART', 'NN', 'APPR', 'ART', 'NN', 'APPR', 'CARD', 'CARD', 'NN', 'APPR', 'CARD', 'CARD', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 33), 'span': (18, 33), 'left siblings': ['VF', 'LK', 'MF', 'VC', 'NF', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP da kann ich ihnen das grandhotel musmann anbieten das zentrale lage mit garage die brauchen sie zwar nicht da liegt die preiskategorie fur ein einzelzimmer bei hundert achtundsiebzig mark bis funfhundert achtzehn mark)

Sentence 367:
0 Initial errors
0 on fringe, 0 iterations

Sentence 368:
0 Initial errors
0 on fringe, 0 iterations

Sentence 369:
0 Initial errors
0 on fringe, 0 iterations

Sentence 370:
0 Initial errors
0 on fringe, 0 iterations

Sentence 371:
8 Initial errors
0 on fringe, 4 iterations
4 Error:NP Attachment
2 Error:NP Attachment
1 Error:Clause Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;36m(SU[00m
				(DM
					(PTKANT ja))[01;36m)[00m
			(DM ja)
			[01;33m(SU (SIMPX[00m (SIMPX dann wurde ich aber sagen ich nehme auf jeden fall mal den hinflug einfach)
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(VF das)
				(LK waren)
				[01;31m(MF[00m
					[01;36m(MF[00m
						(ADVX
							(ADV dann)) [01;33mSIMPX) SIMPX) SU)[00m[01;36m)[00m
					(SIMPX wieviel sagten sie)
					(NX zweihundert)[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:NP Attachment
{'new_parent': 'SU', 'new_family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'NX'], 'mover info': [('SIMPX', (19, 22)), ('NX', (22, 23))], 'old_family': ['ADVX', 'SIMPX', 'NX'], 'start left siblings': ['ADVX'], 'auto preterminals': ('PTKANT', 'PTKANT', 'ADV', 'VAFIN', 'PPER', 'ADV', 'VVINF', 'PPER', 'VVFIN', 'APPR', 'PIDAT', 'NN', 'ADV', 'ART', 'NN', 'ADV', 'PDS', 'VAFIN', 'ADV', 'PWS', 'VVFIN', 'PPER', 'CARD'), 'start right siblings': [], 'end left siblings': ['DM', 'DM', 'SIMPX', 'SIMPX'], 'auto preterminal span': (0, 23), 'movers': ['SIMPX', 'NX'], 'old_parent': 'MF', 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;36m(SU[00m
				(DM
					(PTKANT ja))[01;36m)[00m
			(DM ja)
			[01;36m(SIMPX[00m
				[01;36m(SU[00m
					(SIMPX dann wurde ich aber sagen ich nehme auf jeden fall mal den hinflug einfach)
					(SIMPX das waren dann)[01;36m)[00m[01;36m)[00m
			(SIMPX wieviel sagten sie)
			(NX zweihundert)[01;31m)[00m))
Step:NP Attachment
{'new_parent': 'TURN', 'new_family': ['SU', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'NX'], 'mover info': [('DM', (1, 2)), ('SIMPX', (2, 16)), ('SIMPX', (16, 19)), ('SIMPX', (19, 22)), ('NX', (22, 23))], 'old_family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'NX'], 'start left siblings': ['DM'], 'auto preterminals': ('PTKANT', 'PTKANT', 'ADV', 'VAFIN', 'PPER', 'ADV', 'VVINF', 'PPER', 'VVFIN', 'APPR', 'PIDAT', 'NN', 'ADV', 'ART', 'NN', 'ADV', 'PDS', 'VAFIN', 'ADV', 'PWS', 'VVFIN', 'PPER', 'CARD'), 'start right siblings': [], 'end left siblings': ['SU'], 'auto preterminal span': (0, 23), 'movers': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'NX'], 'old_parent': 'SU', 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU ja)
		(DM ja)
		[01;36m(SIMPX[00m
			[01;36m(SU[00m
				(SIMPX dann wurde ich aber sagen ich nehme auf jeden fall mal den hinflug einfach)
				(SIMPX das waren dann)[01;36m)[00m[01;36m)[00m
		(SIMPX wieviel sagten sie)
		(NX zweihundert)))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['SU', 'DM', 'SU', 'SIMPX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'ADV', 'VVINF', 'PPER', 'VVFIN', 'APPR', 'PIDAT', 'NN', 'ADV', 'ART', 'NN', 'ADV', 'PDS', 'VAFIN', 'ADV'), 'right siblings': [(SIMPX (VF (NX (PWS wieviel))) (LK (VXFIN (VVFIN sagten))) (MF (NX (PPER sie)))), (NX (CARD zweihundert))], 'left siblings': [(SU (DM (PTKANT ja))), (DM (PTKANT ja))], 'auto preterminal span': (2, 19), 'span': (2, 19), 'parent': 'TURN', 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU ja)
		(DM ja)
		[01;36m(SIMPX[00m
			(SU
				(SIMPX dann wurde ich aber sagen ich nehme auf jeden fall mal den hinflug einfach)
				(SIMPX das waren dann))[01;36m)[00m
		(SIMPX wieviel sagten sie)
		(NX zweihundert)))
Step:Unary
{'subtrees': ['SU'], 'family': ['SU', 'DM', 'SIMPX', 'SIMPX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'ADV', 'VVINF', 'PPER', 'VVFIN', 'APPR', 'PIDAT', 'NN', 'ADV', 'ART', 'NN', 'ADV', 'PDS', 'VAFIN', 'ADV'), 'right siblings': [(SIMPX (VF (NX (PWS wieviel))) (LK (VXFIN (VVFIN sagten))) (MF (NX (PPER sie)))), (NX (CARD zweihundert))], 'left siblings': [(SU (DM (PTKANT ja))), (DM (PTKANT ja))], 'auto preterminal span': (2, 19), 'span': (2, 19), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'add'}
(TOP ja ja dann wurde ich aber sagen ich nehme auf jeden fall mal den hinflug einfach das waren dann wieviel sagten sie zweihundert)

Sentence 372:
0 Initial errors
0 on fringe, 0 iterations

Sentence 373:
3 Initial errors
0 on fringe, 3 iterations
1 Error:UNSET remove
1 Error:Modifier Attachment
1 Error:UNSET add
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP [01;33m(NX[00m
	(TURN
		(SU
			(NX zweihundert dreisig mark)
			[01;31m(NX[00m
				(KON und)
				[01;31m(NX[00m
					(NX eine einfache fahrt) [01;33mNX)[00m
					(ADVX zuruck)[01;31m)[00m[01;31m)[00m
			(DM ja))))
Step:UNSET remove
{'subtrees': ['KON', 'NX'], 'family': ['NX', 'NX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'CARD', 'NN', 'KON', 'ART', 'ADJA', 'NN', 'ADV', 'PTKANT'), 'right siblings': ['DM'], 'parent': 'SU', 'auto preterminal span': (0, 9), 'span': (3, 8), 'left siblings': ['NX'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP [01;33m(NX[00m
	(TURN
		(SU
			(NX zweihundert dreisig mark)
			(KON und)
			[01;31m(NX[00m
				(NX eine einfache fahrt) [01;33mNX)[00m
				(ADVX zuruck)[01;31m)[00m
			(DM ja))))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADVX'], 'family': ['NX', 'KON', 'NX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'CARD', 'NN', 'KON', 'ART', 'ADJA', 'NN', 'ADV', 'PTKANT'), 'right siblings': ['DM'], 'parent': 'SU', 'auto preterminal span': (0, 9), 'span': (4, 8), 'left siblings': ['NX', 'KON'], 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU
			[01;36m(NX[00m
				(NX zweihundert dreisig mark)
				(KON und)
				(NX eine einfache fahrt)[01;36m)[00m
			(ADVX zuruck)
			(DM ja))))
Step:UNSET add
{'subtrees': ['NX', 'KON', 'NX'], 'family': ['NX', 'ADVX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'CARD', 'NN', 'KON', 'ART', 'ADJA', 'NN'), 'right siblings': [(ADVX (ADV zuruck)), (DM (PTKANT ja))], 'left siblings': [], 'auto preterminal span': (0, 7), 'span': (0, 7), 'parent': 'SU', 'label': 'NX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP zweihundert dreisig mark und eine einfache fahrt zuruck ja)

Sentence 374:
0 Initial errors
0 on fringe, 0 iterations

Sentence 375:
0 Initial errors
0 on fringe, 0 iterations

Sentence 376:
0 Initial errors
0 on fringe, 0 iterations

Sentence 377:
0 Initial errors
0 on fringe, 0 iterations

Sentence 378:
0 Initial errors
0 on fringe, 0 iterations

Sentence 379:
0 Initial errors
0 on fringe, 0 iterations

Sentence 380:
0 Initial errors
0 on fringe, 0 iterations

Sentence 381:
0 Initial errors
0 on fringe, 0 iterations

Sentence 382:
0 Initial errors
0 on fringe, 0 iterations

Sentence 383:
3 Initial errors
0 on fringe, 2 iterations
2 Error:UNSET move
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			[01;31m(SIMPX[00m
				(LK sagen)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX sie)
					(NX mir)
					(NX ihren namen)
					(ADVX noch)
					(ADVX mal)[01;31m)[00m[01;31m)[00m
			(DM bitte)))) [01;33mMF)[00m
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['NX', 'NX', 'NX', 'ADVX', 'ADVX', 'DM'], 'mover info': [('DM', (7, 8))], 'old_family': ['SIMPX', 'DM'], 'start left siblings': ['SIMPX'], 'auto preterminals': ('VVIMP', 'PPER', 'PPER', 'PPOSAT', 'NN', 'ADV', 'ADV', 'PTKANT'), 'start right siblings': [], 'end left siblings': ['NX', 'NX', 'NX', 'ADVX', 'ADVX'], 'auto preterminal span': (0, 8), 'movers': ['DM'], 'old_parent': 'SU', 'POS confusion': ('PTKANT', 'PTKANT'), 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			[01;31m(SIMPX[00m
				(LK sagen)
				(MF sie mir ihren namen noch mal bitte)[01;31m)[00m)))
Step:Unary
{'subtrees': ['LK', 'MF'], 'family': ['SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVIMP', 'PPER', 'PPER', 'PPOSAT', 'NN', 'ADV', 'ADV', 'PTKANT'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (0, 8), 'span': (0, 8), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP sagen sie mir ihren namen noch mal bitte)

Sentence 384:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			[01;31m(DM[00m
				(NX
					(NE meurer))[01;31m)[00m)))
Step:Unary
{'subtrees': ['NX'], 'family': ['DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('NE',), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (0, 1), 'span': (0, 1), 'left siblings': [], 'label': 'DM', 'classified_type': 'Unary', 'type': 'remove'}
(TOP meurer)

Sentence 385:
0 Initial errors
0 on fringe, 0 iterations

Sentence 386:
3 Initial errors
0 on fringe, 2 iterations
2 Error:PP Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;36m(SU[00m
				(PX
					(APPRART im)
					(NX august))[01;36m)[00m
			[01;36m(SU[00m
				(DM ja)
				(SIMPX gibt es da einen romantischen termin im august)[01;36m)[00m[01;31m)[00m))
Step:PP Attachment
{'new_parent': 'TURN', 'new_family': ['PX', 'SU'], 'mover info': [('PX', (0, 2))], 'old_family': ['PX', 'DM', 'SIMPX'], 'start left siblings': [], 'auto preterminals': ('APPRART', 'NN', 'PTKANT', 'VVFIN', 'PPER', 'ADV', 'ART', 'ADJA', 'NN', 'APPRART', 'NN'), 'start right siblings': ['DM', 'SIMPX'], 'end left siblings': [], 'auto preterminal span': (0, 11), 'movers': ['PX'], 'old_parent': 'SU', 'end right siblings': ['SU'], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;36m(SU[00m
			(PX
				(APPRART im)
				(NX august))[01;36m)[00m
		(SU ja gibt es da einen romantischen termin im august)))
Step:Unary
{'subtrees': ['PX'], 'family': ['SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'NN'), 'right siblings': [(SU (DM (PTKANT ja)) (SIMPX (LK (VXFIN (VVFIN gibt))) (MF (NX (PPER es)) (ADVX (ADV da)) (NX (ART einen) (ADJX (ADJA romantischen)) (NN termin)) (PX (APPRART im) (NX (NN august))))))], 'left siblings': [], 'auto preterminal span': (0, 2), 'span': (0, 2), 'parent': 'TURN', 'label': 'SU', 'classified_type': 'Unary', 'type': 'add'}
(TOP im august ja gibt es da einen romantischen termin im august)

Sentence 387:
4 Initial errors
0 on fringe, 4 iterations
1 Error:UNSET add
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:UNSET add
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(SIMPX
				(KOORD und)
				(LK wurden)
				(MF
					(NX sie)
					(NX mir)
					(ADVX bitte)
					(ADVX noch)
					[01;31m(PX[00m [01;33m(PX[00m
						(APPR fur)
						[01;31m(NX[00m
							(NX die nachte) [01;33mPX)[00m
							(APPRART vom)
							(DM also)
							(NX
								(NX dienstag nacht)
								[01;36m(PX[00m
									(APPR bis)
									(NX freitag nacht)[01;36m)[00m)[01;31m)[00m[01;31m)[00m
					(ADVX noch)
					(NX das hotel))
				(VC buchen)))))
Step:UNSET add
{'subtrees': ['APPR', 'NX'], 'family': ['NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'NN', 'ADV'), 'right siblings': [], 'left siblings': [(NX (NX (NN dienstag)) (ADVX (ADV nacht)))], 'auto preterminal span': (13, 16), 'span': (13, 16), 'parent': 'NX', 'label': 'PX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU
			(SIMPX
				(KOORD und)
				(LK wurden)
				(MF
					(NX sie)
					(NX mir)
					(ADVX bitte)
					(ADVX noch)
					[01;31m(PX[00m [01;33m(PX[00m
						(APPR fur)
						[01;31m(NX[00m
							(NX die nachte) [01;33mPX)[00m
							(APPRART vom)
							(DM also)
							(NX dienstag nacht bis freitag nacht)[01;31m)[00m[01;31m)[00m
					(ADVX noch)
					(NX das hotel))
				(VC buchen)))))
Step:UNSET remove
{'subtrees': ['APPR', 'NX'], 'family': ['NX', 'NX', 'ADVX', 'ADVX', 'PX', 'ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'PPER', 'PTKANT', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'ADV', 'NN', 'ADV', 'APPR', 'NN', 'ADV', 'ADV', 'ART', 'NN'), 'right siblings': ['ADVX', 'NX'], 'parent': 'MF', 'auto preterminal span': (2, 19), 'span': (6, 16), 'left siblings': ['NX', 'NX', 'ADVX', 'ADVX'], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(SIMPX
				(KOORD und)
				(LK wurden)
				(MF
					(NX sie)
					(NX mir)
					(ADVX bitte)
					(ADVX noch)
					(APPR [01;33m(PX[00m fur)
					[01;31m(NX[00m
						(NX die nachte) [01;33mPX)[00m
						(APPRART vom)
						(DM also)
						(NX dienstag nacht bis freitag nacht)[01;31m)[00m
					(ADVX noch)
					(NX das hotel))
				(VC buchen)))))
Step:UNSET remove
{'subtrees': ['NX', 'APPRART', 'DM', 'NX'], 'family': ['NX', 'NX', 'ADVX', 'ADVX', 'APPR', 'NX', 'ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'PPER', 'PTKANT', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'ADV', 'NN', 'ADV', 'APPR', 'NN', 'ADV', 'ADV', 'ART', 'NN'), 'right siblings': ['ADVX', 'NX'], 'parent': 'MF', 'auto preterminal span': (2, 19), 'span': (7, 16), 'left siblings': ['NX', 'NX', 'ADVX', 'ADVX', 'APPR'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(SIMPX
				(KOORD und)
				(LK wurden)
				(MF
					(NX sie)
					(NX mir)
					(ADVX bitte)
					(ADVX noch)
					[01;36m(PX[00m
						(APPR fur)
						(NX die nachte)[01;36m)[00m
					(APPRART vom)
					(DM also)
					(NX dienstag nacht bis freitag nacht)
					(ADVX noch)
					(NX das hotel))
				(VC buchen)))))
Step:UNSET add
{'subtrees': ['APPR', 'NX'], 'family': ['NX', 'NX', 'ADVX', 'ADVX', 'PX', 'APPRART', 'DM', 'NX', 'ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NN'), 'right siblings': [(APPRART vom), (DM (ADVX (ADV also))), (NX (NX (NX (NN dienstag)) (ADVX (ADV nacht))) (PX (APPR bis) (NX (NX (NN freitag)) (ADVX (ADV nacht))))), (ADVX (ADV noch)), (NX (ART das) (NN hotel))], 'left siblings': [(NX (PPER sie)), (NX (PPER mir)), (ADVX (PTKANT bitte)), (ADVX (ADV noch))], 'auto preterminal span': (6, 9), 'span': (6, 9), 'parent': 'MF', 'label': 'PX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP und wurden sie mir bitte noch fur die nachte vom also dienstag nacht bis freitag nacht noch das hotel buchen)

Sentence 388:
0 Initial errors
0 on fringe, 0 iterations

Sentence 389:
3 Initial errors
0 on fringe, 1 iterations
3 Error:NP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP [01;33m(PX[00m
	(TURN
		(SU
			[01;31m(PX[00m
				(APPR fur)
				[01;31m(NX[00m
					(NX hundert funfundvierzig mark) [01;33mPX)[00m
					(NX das einzelzimmer)[01;31m)[00m[01;31m)[00m)))
Step:NP Attachment
{'new_parent': 'SU', 'new_family': ['PX', 'NX'], 'mover info': [('NX', (4, 6))], 'old_family': ['NX', 'NX'], 'start left siblings': ['NX'], 'auto preterminals': ('APPR', 'CARD', 'CARD', 'NN', 'ART', 'NN'), 'start right siblings': [], 'end left siblings': ['PX'], 'auto preterminal span': (0, 6), 'movers': ['NX'], 'old_parent': 'NX', 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP fur hundert funfundvierzig mark das einzelzimmer)

Sentence 390:
0 Initial errors
0 on fringe, 0 iterations

Sentence 391:
2 Initial errors
0 on fringe, 2 iterations
1 Error:UNSET remove
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM grus gott)
			(DM frau johann)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF wenn ich richtig informiert bin)
				(LK musten)
				(MF wir unbedingt eine termin fur eine geschaftsreise nach hannover)
				(VC vereinbaren))[01;31m)[00m
		(SU ja die frage ist haben sie irgendwelche praferierten termine von sich aus)))
Step:UNSET remove
{'subtrees': ['DM', 'DM'], 'family': ['SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVIMP', 'NE', 'NN', 'NE', 'KOUS', 'PPER', 'ADV', 'ADJD', 'VAFIN', 'VMFIN', 'PPER', 'ADV', 'ART', 'NN', 'APPR', 'ART', 'NN', 'APPR', 'NE', 'VVINF', 'PTKANT', 'ART', 'NN', 'VAFIN', 'VAFIN', 'PPER', 'PIAT', 'ADJA', 'NN', 'APPR', 'PRF', 'APZR'), 'right siblings': ['SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 32), 'span': (0, 4), 'left siblings': [], 'label': 'SU', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM grus gott)
		(DM frau johann)
		[01;31m(SU[00m
			(SIMPX
				(VF wenn ich richtig informiert bin)
				(LK musten)
				(MF wir unbedingt eine termin fur eine geschaftsreise nach hannover)
				(VC vereinbaren))[01;31m)[00m
		(SU ja die frage ist haben sie irgendwelche praferierten termine von sich aus)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['DM', 'DM', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVIMP', 'NE', 'NN', 'NE', 'KOUS', 'PPER', 'ADV', 'ADJD', 'VAFIN', 'VMFIN', 'PPER', 'ADV', 'ART', 'NN', 'APPR', 'ART', 'NN', 'APPR', 'NE', 'VVINF', 'PTKANT', 'ART', 'NN', 'VAFIN', 'VAFIN', 'PPER', 'PIAT', 'ADJA', 'NN', 'APPR', 'PRF', 'APZR'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 32), 'span': (4, 20), 'left siblings': ['DM', 'DM'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP grus gott frau johann wenn ich richtig informiert bin musten wir unbedingt eine termin fur eine geschaftsreise nach hannover vereinbaren ja die frage ist haben sie irgendwelche praferierten termine von sich aus)

Sentence 392:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Clause Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ach)
			(SIMPX das ist ja witzig)
			(SIMPX da mus ich namlich auch hin)[01;31m)[00m
		(SU ich dachte man konnte gleich weiterfliegen von hannover)))
Step:Clause Attachment
{'subtrees': ['DM', 'SIMPX', 'SIMPX'], 'family': ['SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PDS', 'VAFIN', 'ADV', 'ADJD', 'ADV', 'VVFIN', 'PPER', 'ADV', 'ADV', 'PTKVZ', 'PPER', 'VVFIN', 'PIS', 'VMFIN', 'ADV', 'VVINF', 'APPR', 'NE'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 19), 'span': (0, 11), 'left siblings': [], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP ach das ist ja witzig da mus ich namlich auch hin ich dachte man konnte gleich weiterfliegen von hannover)

Sentence 393:
15 Initial errors
0 on fringe, 11 iterations
4 Error:Clause Attachment
2 Error:Clause Attachment
1 Error:UNSET add
1 Error:PP Attachment
1 Error:UNSET remove
1 Error:Clause Attachment
1 Error:UNSET remove
1 Error:UNSET add
1 Error:Unary
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU ja das ware mir recht)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF das)
				(LK wurde)
				(MF ja)
				(VC bedeuten)
				[01;31m(NF[00m [01;33m(SIMPX (NF (SIMPX (NF[00m
					[01;31m(SIMPX[00m
						(C das)
						(MF
							(NX wir)
							[01;36m(PX[00m
								(APPRART am)
								(NX eine ubernachtung in hannover)[01;36m)[00m)
						(VC brauchten)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				(VC vorausgesetzt) [01;33mNF) SIMPX)[00m
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						(VF wir)
						(LK kriegen)
						(MF dann am dienstag abend noch den flug nach berlin)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m [01;33mNF) SIMPX)[00m
		[01;31m(SU[00m
			(SIMPX meine sekretarin hat mir hier schon drei hotels rausgesucht)
			[01;36m(SU[00m
				(SIMPX
					(LK haben)
					(MF
						(NX sie)
						[01;36m(NX[00m
							(NX irgendwelche vorstellungen)
							(PX davon)[01;36m)[00m)
					(NF wie das hotel aussehen sollte))
				(DM oder)[01;36m)[00m[01;31m)[00m))
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['C', 'MF', 'VC', 'SIMPX'], 'mover info': [('SIMPX', (17, 29))], 'old_family': ['SIMPX', 'SIMPX'], 'start left siblings': ['SIMPX'], 'auto preterminals': ('PDS', 'VAFIN', 'ADV', 'VVINF', 'KOUS', 'PPER', 'APPRART', 'ART', 'NN', 'APPR', 'NE', 'VVFIN', 'VVPP', 'PPER', 'VVFIN', 'ADV', 'APPRART', 'NN', 'ADV', 'ADV', 'ART', 'NN', 'APPR', 'NE'), 'start right siblings': [], 'end left siblings': ['C', 'MF', 'VC'], 'auto preterminal span': (5, 29), 'movers': ['SIMPX'], 'old_parent': 'SU', 'end right siblings': [], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU ja das ware mir recht)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF das)
				(LK wurde)
				(MF ja)
				(VC bedeuten)
				(NF [01;33m(SIMPX (NF[00m
					(SIMPX
						(C das)
						(MF
							(NX wir)
							[01;36m(PX[00m
								(APPRART am)
								(NX eine ubernachtung in hannover)[01;36m)[00m)
						(VC brauchten)
						[01;31m(SIMPX[00m
							(VC vorausgesetzt) [01;33mNF) SIMPX)[00m
							[01;31m(NF[00m
								[01;31m(SIMPX[00m
									(VF wir)
									(LK kriegen)
									(MF dann am dienstag abend noch den flug nach berlin)[01;31m)[00m[01;31m)[00m[01;31m)[00m))[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX meine sekretarin hat mir hier schon drei hotels rausgesucht)
			[01;36m(SU[00m
				(SIMPX
					(LK haben)
					(MF
						(NX sie)
						[01;36m(NX[00m
							(NX irgendwelche vorstellungen)
							(PX davon)[01;36m)[00m)
					(NF wie das hotel aussehen sollte))
				(DM oder)[01;36m)[00m[01;31m)[00m))
Step:Clause Attachment
{'new_parent': 'SU', 'new_family': ['SIMPX', 'SIMPX'], 'mover info': [('SIMPX', (29, 38))], 'old_family': ['SIMPX', 'SIMPX', 'DM'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'PDS', 'VAFIN', 'PPER', 'ADJD', 'PDS', 'VAFIN', 'ADV', 'VVINF', 'KOUS', 'PPER', 'APPRART', 'ART', 'NN', 'APPR', 'NE', 'VVFIN', 'VVPP', 'PPER', 'VVFIN', 'ADV', 'APPRART', 'NN', 'ADV', 'ADV', 'ART', 'NN', 'APPR', 'NE', 'PPOSAT', 'NN', 'VAFIN', 'PPER', 'ADV', 'ADV', 'CARD', 'NN', 'VVPP', 'VAFIN', 'PPER', 'PIAT', 'NN', 'PROP', 'KOUS', 'ART', 'NN', 'VVINF', 'VMFIN', 'ITJ'), 'start right siblings': ['SIMPX', 'DM'], 'end left siblings': ['SIMPX'], 'auto preterminal span': (0, 49), 'movers': ['SIMPX'], 'old_parent': 'SU', 'end right siblings': [], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU ja das ware mir recht)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF das)
				(LK wurde)
				(MF ja)
				(VC bedeuten)
				(NF [01;33m(SIMPX (NF[00m
					(SIMPX
						(C das)
						(MF
							(NX wir)
							[01;36m(PX[00m
								(APPRART am)
								(NX eine ubernachtung in hannover)[01;36m)[00m)
						(VC brauchten)
						[01;31m(SIMPX[00m
							(VC vorausgesetzt) [01;33mNF) SIMPX)[00m
							[01;31m(NF[00m
								[01;31m(SIMPX[00m
									(VF wir)
									(LK kriegen)
									(MF dann am dienstag abend noch den flug nach berlin)[01;31m)[00m[01;31m)[00m[01;31m)[00m))[01;31m)[00m
			(SIMPX meine sekretarin hat mir hier schon drei hotels rausgesucht)[01;31m)[00m
		(SU
			(SIMPX
				(LK haben)
				(MF
					(NX sie)
					[01;36m(NX[00m
						(NX irgendwelche vorstellungen)
						(PX davon)[01;36m)[00m)
				(NF wie das hotel aussehen sollte))
			(DM oder))))
Step:UNSET add
{'subtrees': ['APPRART', 'NX'], 'family': ['NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'ART', 'NN', 'APPR', 'NE'), 'right siblings': [], 'left siblings': [(NX (PPER wir))], 'auto preterminal span': (11, 16), 'span': (11, 16), 'parent': 'MF', 'label': 'PX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU ja das ware mir recht)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF das)
				(LK wurde)
				(MF ja)
				(VC bedeuten)
				(NF [01;33m(SIMPX (NF[00m
					(SIMPX
						(C das)
						(MF wir am eine ubernachtung in hannover)
						(VC brauchten)
						[01;31m(SIMPX[00m
							(VC vorausgesetzt) [01;33mNF) SIMPX)[00m
							[01;31m(NF[00m
								[01;31m(SIMPX[00m
									(VF wir)
									(LK kriegen)
									(MF dann am dienstag abend noch den flug nach berlin)[01;31m)[00m[01;31m)[00m[01;31m)[00m))[01;31m)[00m
			(SIMPX meine sekretarin hat mir hier schon drei hotels rausgesucht)[01;31m)[00m
		(SU
			(SIMPX
				(LK haben)
				(MF
					(NX sie)
					[01;36m(NX[00m
						(NX irgendwelche vorstellungen)
						(PX davon)[01;36m)[00m)
				(NF wie das hotel aussehen sollte))
			(DM oder))))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PIAT', 'NN', 'PROP'), 'right siblings': [], 'left siblings': [(NX (PPER sie))], 'auto preterminal span': (40, 43), 'span': (40, 43), 'parent': 'MF', 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU ja das ware mir recht)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF das)
				(LK wurde)
				(MF ja)
				(VC bedeuten)
				(NF [01;33m(SIMPX (NF[00m
					(SIMPX
						(C das)
						(MF wir am eine ubernachtung in hannover)
						(VC brauchten)
						[01;31m(SIMPX[00m
							(VC vorausgesetzt) [01;33mNF) SIMPX)[00m
							[01;31m(NF[00m
								[01;31m(SIMPX[00m
									(VF wir)
									(LK kriegen)
									(MF dann am dienstag abend noch den flug nach berlin)[01;31m)[00m[01;31m)[00m[01;31m)[00m))[01;31m)[00m
			(SIMPX meine sekretarin hat mir hier schon drei hotels rausgesucht)[01;31m)[00m
		(SU haben sie irgendwelche vorstellungen davon wie das hotel aussehen sollte oder)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'VC', 'NF'], 'family': ['SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VAFIN', 'ADV', 'VVINF', 'KOUS', 'PPER', 'APPRART', 'ART', 'NN', 'APPR', 'NE', 'VVFIN', 'VVPP', 'PPER', 'VVFIN', 'ADV', 'APPRART', 'NN', 'ADV', 'ADV', 'ART', 'NN', 'APPR', 'NE', 'PPOSAT', 'NN', 'VAFIN', 'PPER', 'ADV', 'ADV', 'CARD', 'NN', 'VVPP'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (5, 38), 'span': (5, 29), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU ja das ware mir recht)
		[01;31m(SU[00m
			(VF das)
			(LK wurde)
			(MF ja)
			(VC bedeuten)
			(NF [01;33m(SIMPX (NF[00m
				(SIMPX
					(C das)
					(MF wir am eine ubernachtung in hannover)
					(VC brauchten)
					[01;31m(SIMPX[00m
						(VC vorausgesetzt) [01;33mNF) SIMPX)[00m
						[01;31m(NF[00m
							[01;31m(SIMPX[00m
								(VF wir)
								(LK kriegen)
								(MF dann am dienstag abend noch den flug nach berlin)[01;31m)[00m[01;31m)[00m[01;31m)[00m))
			(SIMPX meine sekretarin hat mir hier schon drei hotels rausgesucht)[01;31m)[00m
		(SU haben sie irgendwelche vorstellungen davon wie das hotel aussehen sollte oder)))
Step:Clause Attachment
{'subtrees': ['VF', 'LK', 'MF', 'VC', 'NF', 'SIMPX'], 'family': ['SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PDS', 'VAFIN', 'PPER', 'ADJD', 'PDS', 'VAFIN', 'ADV', 'VVINF', 'KOUS', 'PPER', 'APPRART', 'ART', 'NN', 'APPR', 'NE', 'VVFIN', 'VVPP', 'PPER', 'VVFIN', 'ADV', 'APPRART', 'NN', 'ADV', 'ADV', 'ART', 'NN', 'APPR', 'NE', 'PPOSAT', 'NN', 'VAFIN', 'PPER', 'ADV', 'ADV', 'CARD', 'NN', 'VVPP', 'VAFIN', 'PPER', 'PIAT', 'NN', 'PROP', 'KOUS', 'ART', 'NN', 'VVINF', 'VMFIN', 'ITJ'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 49), 'span': (5, 38), 'left siblings': ['SU'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU ja das ware mir recht)
		(VF das)
		(LK wurde)
		(MF ja)
		(VC bedeuten)
		(NF [01;33m(SIMPX (NF[00m
			(SIMPX
				(C das)
				(MF wir am eine ubernachtung in hannover)
				(VC brauchten)
				[01;31m(SIMPX[00m
					(VC vorausgesetzt) [01;33mNF) SIMPX)[00m
					[01;31m(NF[00m
						[01;31m(SIMPX[00m
							(VF wir)
							(LK kriegen)
							(MF dann am dienstag abend noch den flug nach berlin)[01;31m)[00m[01;31m)[00m[01;31m)[00m))
		(SIMPX meine sekretarin hat mir hier schon drei hotels rausgesucht)
		(SU haben sie irgendwelche vorstellungen davon wie das hotel aussehen sollte oder)))
Step:UNSET remove
{'subtrees': ['VC', 'NF'], 'family': ['C', 'MF', 'VC', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'APPRART', 'ART', 'NN', 'APPR', 'NE', 'VVFIN', 'VVPP', 'PPER', 'VVFIN', 'ADV', 'APPRART', 'NN', 'ADV', 'ADV', 'ART', 'NN', 'APPR', 'NE'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (9, 29), 'span': (17, 29), 'left siblings': ['C', 'MF', 'VC'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU ja das ware mir recht)
		(VF das)
		(LK wurde)
		(MF ja)
		(VC bedeuten)
		(NF
			(SIMPX
				[01;36m(NF[00m
					[01;36m(SIMPX[00m
						(C das)
						(MF wir am eine ubernachtung in hannover)
						(VC brauchten)
						(VC vorausgesetzt)[01;36m)[00m[01;36m)[00m
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						(VF wir)
						(LK kriegen)
						(MF dann am dienstag abend noch den flug nach berlin)[01;31m)[00m[01;31m)[00m))
		(SIMPX meine sekretarin hat mir hier schon drei hotels rausgesucht)
		(SU haben sie irgendwelche vorstellungen davon wie das hotel aussehen sollte oder)))
Step:UNSET add
{'subtrees': ['C', 'MF', 'VC', 'VC'], 'family': ['SIMPX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'APPRART', 'ART', 'NN', 'APPR', 'NE', 'VVFIN', 'VVPP'), 'right siblings': [(NF (SIMPX (VF (NX (PPER wir))) (LK (VXFIN (VVFIN kriegen))) (MF (ADVX (ADV dann)) (PX (APPRART am) (NX (NX (NN dienstag)) (ADVX (ADV abend)))) (ADVX (ADV noch)) (NX (NX (ART den) (NN flug)) (PX (APPR nach) (NX (NE berlin)))))))], 'left siblings': [], 'auto preterminal span': (9, 18), 'span': (9, 18), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU ja das ware mir recht)
		(VF das)
		(LK wurde)
		(MF ja)
		(VC bedeuten)
		(NF
			(SIMPX
				[01;36m(NF[00m
					(SIMPX
						(C das)
						(MF wir am eine ubernachtung in hannover)
						(VC brauchten)
						(VC vorausgesetzt))[01;36m)[00m
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						(VF wir)
						(LK kriegen)
						(MF dann am dienstag abend noch den flug nach berlin)[01;31m)[00m[01;31m)[00m))
		(SIMPX meine sekretarin hat mir hier schon drei hotels rausgesucht)
		(SU haben sie irgendwelche vorstellungen davon wie das hotel aussehen sollte oder)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['NF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'APPRART', 'ART', 'NN', 'APPR', 'NE', 'VVFIN', 'VVPP'), 'right siblings': [(NF (SIMPX (VF (NX (PPER wir))) (LK (VXFIN (VVFIN kriegen))) (MF (ADVX (ADV dann)) (PX (APPRART am) (NX (NX (NN dienstag)) (ADVX (ADV abend)))) (ADVX (ADV noch)) (NX (NX (ART den) (NN flug)) (PX (APPR nach) (NX (NE berlin)))))))], 'left siblings': [], 'auto preterminal span': (9, 18), 'span': (9, 18), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU ja das ware mir recht)
		(VF das)
		(LK wurde)
		(MF ja)
		(VC bedeuten)
		(NF
			(SIMPX
				(NF das wir am eine ubernachtung in hannover brauchten vorausgesetzt)
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						(VF wir)
						(LK kriegen)
						(MF dann am dienstag abend noch den flug nach berlin)[01;31m)[00m[01;31m)[00m))
		(SIMPX meine sekretarin hat mir hier schon drei hotels rausgesucht)
		(SU haben sie irgendwelche vorstellungen davon wie das hotel aussehen sollte oder)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['NF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'APPRART', 'ART', 'NN', 'APPR', 'NE', 'VVFIN', 'VVPP', 'PPER', 'VVFIN', 'ADV', 'APPRART', 'NN', 'ADV', 'ADV', 'ART', 'NN', 'APPR', 'NE'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (9, 29), 'span': (18, 29), 'left siblings': ['NF'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU ja das ware mir recht)
		(VF das)
		(LK wurde)
		(MF ja)
		(VC bedeuten)
		(NF
			(SIMPX
				(NF das wir am eine ubernachtung in hannover brauchten vorausgesetzt)
				[01;31m(SIMPX[00m
					(VF wir)
					(LK kriegen)
					(MF dann am dienstag abend noch den flug nach berlin)[01;31m)[00m))
		(SIMPX meine sekretarin hat mir hier schon drei hotels rausgesucht)
		(SU haben sie irgendwelche vorstellungen davon wie das hotel aussehen sollte oder)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['NF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'APPRART', 'ART', 'NN', 'APPR', 'NE', 'VVFIN', 'VVPP', 'PPER', 'VVFIN', 'ADV', 'APPRART', 'NN', 'ADV', 'ADV', 'ART', 'NN', 'APPR', 'NE'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (9, 29), 'span': (18, 29), 'left siblings': ['NF'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ja das ware mir recht das wurde ja bedeuten das wir am eine ubernachtung in hannover brauchten vorausgesetzt wir kriegen dann am dienstag abend noch den flug nach berlin meine sekretarin hat mir hier schon drei hotels rausgesucht haben sie irgendwelche vorstellungen davon wie das hotel aussehen sollte oder)

Sentence 394:
11 Initial errors
0 on fringe, 8 iterations
3 Error:Modifier Attachment
2 Error:UNSET move
1 Error:Unary
1 Error:Unary
1 Error:Clause Attachment
1 Error:UNSET remove
1 Error:Unary
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM also)
			[01;31m(SIMPX[00m
				(VF es)
				(LK gabe)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX
						[01;36m(MF[00m
							(NX
								(NX eines)
								(PX mit sauna))[01;36m)[00m
						(NX ein anderes mit hallenbad))[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(NX[00m
				(ADVX scheinbar)
				(ADVX nicht)
				[01;31m(NX[00m
					(NX beides) [01;33mMF)[00m
					[01;36m(NF[00m
						(ADVX [01;33m(SU[00m
							(ADV zusammen))[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF sie)
				(LK wurden)
				(MF dann die sauna)
				(VC vorziehen))[01;31m)[00m)) [01;33mSU)[00m
Step:Modifier Attachment
{'new_parent': 'SU', 'new_family': ['ADVX', 'SIMPX'], 'mover info': [('ADVX', (13, 14))], 'old_family': ['NX', 'ADVX'], 'start left siblings': ['NX'], 'auto preterminals': ('ADV', 'PPER', 'VVFIN', 'PIS', 'APPR', 'NN', 'ART', 'PIS', 'APPR', 'NN', 'ADV', 'PTKNEG', 'PIS', 'ADV', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'VVINF'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 20), 'movers': ['ADVX'], 'old_parent': 'NX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['SIMPX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM also)
			[01;31m(SIMPX[00m
				(VF es)
				(LK gabe)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX
						[01;36m(MF[00m
							(NX
								(NX eines)
								(PX mit sauna))[01;36m)[00m
						(NX ein anderes mit hallenbad))[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(NX[00m
				(ADVX scheinbar)
				(ADVX nicht)
				(NX beides)[01;31m)[00m[01;31m)[00m [01;33mMF)[00m
		(SU
			[01;36m(NF[00m
				(ADVX
					(ADV zusammen))[01;36m)[00m
			(SIMPX sie wurden dann die sauna vorziehen))))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['NX', 'SU'], 'mover info': [('SU', (10, 13))], 'old_family': ['SU', 'SU', 'SU'], 'start left siblings': ['SU'], 'auto preterminals': ('ADV', 'PPER', 'VVFIN', 'PIS', 'APPR', 'NN', 'ART', 'PIS', 'APPR', 'NN', 'ADV', 'PTKNEG', 'PIS', 'ADV', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'VVINF'), 'start right siblings': ['SU'], 'end left siblings': ['NX'], 'auto preterminal span': (0, 20), 'movers': ['SU'], 'old_parent': 'TURN', 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM also)
			[01;31m(SIMPX[00m
				(VF es)
				(LK gabe)
				(MF
					(NX
						[01;36m(MF[00m
							(NX
								(NX eines)
								(PX mit sauna))[01;36m)[00m
						(NX ein anderes mit hallenbad))
					[01;31m(SU[00m
						[01;31m(NX[00m
							(ADVX scheinbar)
							(ADVX nicht)
							(NX beides)[01;31m)[00m[01;31m)[00m)[01;31m)[00m[01;31m)[00m
		(SU
			[01;36m(NF[00m
				(ADVX
					(ADV zusammen))[01;36m)[00m
			(SIMPX sie wurden dann die sauna vorziehen))))
Step:Unary
{'subtrees': ['NX'], 'family': ['MF', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PIS', 'APPR', 'NN'), 'right siblings': [(NX (NX (ART ein) (PIS anderes)) (PX (APPR mit) (NX (NN hallenbad))))], 'left siblings': [], 'auto preterminal span': (3, 6), 'span': (3, 6), 'parent': 'NX', 'label': 'MF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM also)
			[01;31m(SIMPX[00m
				(VF es)
				(LK gabe)
				(MF
					(NX eines mit sauna ein anderes mit hallenbad)
					[01;31m(SU[00m
						[01;31m(NX[00m
							(ADVX scheinbar)
							(ADVX nicht)
							(NX beides)[01;31m)[00m[01;31m)[00m)[01;31m)[00m[01;31m)[00m
		(SU
			[01;36m(NF[00m
				(ADVX
					(ADV zusammen))[01;36m)[00m
			(SIMPX sie wurden dann die sauna vorziehen))))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['NF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV',), 'right siblings': [(SIMPX (VF (NX (PPER sie))) (LK (VXFIN (VAFIN wurden))) (MF (ADVX (ADV dann)) (NX (ART die) (NN sauna))) (VC (VXINF (VVINF vorziehen))))], 'left siblings': [], 'auto preterminal span': (13, 14), 'span': (13, 14), 'parent': 'SU', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM also)
			[01;31m(SIMPX[00m
				(VF es)
				(LK gabe)
				(MF
					(NX eines mit sauna ein anderes mit hallenbad)
					[01;31m(SU[00m
						[01;31m(NX[00m
							(ADVX scheinbar)
							(ADVX nicht)
							(NX beides)[01;31m)[00m[01;31m)[00m)[01;31m)[00m[01;31m)[00m
		(SU zusammen sie wurden dann die sauna vorziehen)))
Step:Clause Attachment
{'subtrees': ['DM', 'SIMPX'], 'family': ['SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPER', 'VVFIN', 'PIS', 'APPR', 'NN', 'ART', 'PIS', 'APPR', 'NN', 'ADV', 'PTKNEG', 'PIS', 'ADV', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'VVINF'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 20), 'span': (0, 13), 'left siblings': [], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		[01;31m(SIMPX[00m
			(VF es)
			(LK gabe)
			(MF
				(NX eines mit sauna ein anderes mit hallenbad)
				[01;31m(SU[00m
					[01;31m(NX[00m
						(ADVX scheinbar)
						(ADVX nicht)
						(NX beides)[01;31m)[00m[01;31m)[00m)[01;31m)[00m
		(SU zusammen sie wurden dann die sauna vorziehen)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['DM', 'SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPER', 'VVFIN', 'PIS', 'APPR', 'NN', 'ART', 'PIS', 'APPR', 'NN', 'ADV', 'PTKNEG', 'PIS', 'ADV', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'VVINF'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 20), 'span': (1, 13), 'left siblings': ['DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(VF es)
		(LK gabe)
		(MF
			(NX eines mit sauna ein anderes mit hallenbad)
			[01;31m(SU[00m
				[01;31m(NX[00m
					(ADVX scheinbar)
					(ADVX nicht)
					(NX beides)[01;31m)[00m[01;31m)[00m)
		(SU zusammen sie wurden dann die sauna vorziehen)))
Step:Unary
{'subtrees': ['NX'], 'family': ['NX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PIS', 'APPR', 'NN', 'ART', 'PIS', 'APPR', 'NN', 'ADV', 'PTKNEG', 'PIS'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (3, 13), 'span': (10, 13), 'left siblings': ['NX'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(VF es)
		(LK gabe)
		(MF
			(NX eines mit sauna ein anderes mit hallenbad)
			[01;31m(NX[00m
				(ADVX scheinbar)
				(ADVX nicht)
				(NX beides)[01;31m)[00m)
		(SU zusammen sie wurden dann die sauna vorziehen)))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'ADVX', 'NX'], 'family': ['NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PIS', 'APPR', 'NN', 'ART', 'PIS', 'APPR', 'NN', 'ADV', 'PTKNEG', 'PIS'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (3, 13), 'span': (10, 13), 'left siblings': ['NX'], 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP also es gabe eines mit sauna ein anderes mit hallenbad scheinbar nicht beides zusammen sie wurden dann die sauna vorziehen)

Sentence 395:
12 Initial errors
0 on fringe, 8 iterations
3 Error:Clause Attachment
2 Error:Single Word Phrase
2 Error:Modifier Attachment
1 Error:UNSET add
1 Error:Unary
1 Error:Unary
1 Error:Clause Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM
				(ITJ gut))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(P[00m
				(SIMPX es scheint mir sowieso gunstig)
				(KOUS weil)
				(SIMPX
					(VF ich)
					(LK sehe)
					(MF grade)
					(NF
						(SIMPX
							(C das)
							(MF
								(NX es)
								(ADVX auch)
								(PX
									(APPR in)
									(NX
										(NX der nahe)
										[01;36m(PX[00m
											(APPRART beim)
											(NX des hauptbahnhofs)[01;36m)[00m)))
							(VC ist)
							(NF
								(SIMPX
									(C was)
									[01;31m(MF[00m
										[01;36m(MF[00m
											(ADVX dann)
											(ADVX sicherlich)[01;36m)[00m
										[01;36m(DM[00m [01;31m(ADVX[00m
											(ADV ja)[01;31m)[00m[01;36m)[00m
										(ADVX auch)
										(ADJX verkehrsgunstig)[01;31m)[00m
									(VC ist))))))[01;31m)[00m[01;31m)[00m
		(SU ja dann werde ich die buchen)
		[01;36m(SIMPX[00m [01;31m(SU[00m [01;33m(SIMPX[00m
			(SIMPX kummern sie sich um die fluge)
			[01;31m(SIMPX[00m
				(LK ginge) [01;33mSIMPX)[00m
				(MF das)[01;31m)[00m[01;31m)[00m[01;36m)[00m))
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['SIMPX', 'LK', 'MF'], 'mover info': [('SIMPX', (33, 39))], 'old_family': ['SIMPX', 'SIMPX'], 'start left siblings': [], 'auto preterminals': ('VVFIN', 'PPER', 'PRF', 'APPR', 'ART', 'NN', 'VVFIN', 'PDS'), 'start right siblings': ['SIMPX'], 'end left siblings': [], 'auto preterminal span': (33, 41), 'adding node already present': False, 'movers': ['SIMPX'], 'old_parent': 'SU', 'added and moved': True, 'end right siblings': ['LK', 'MF'], 'classified_type': 'Clause Attachment', 'type': 'move', 'added label': 'SIMPX'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM
				(ITJ gut))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(P[00m
				(SIMPX es scheint mir sowieso gunstig)
				(KOUS weil)
				(SIMPX
					(VF ich)
					(LK sehe)
					(MF grade)
					(NF
						(SIMPX
							(C das)
							(MF
								(NX es)
								(ADVX auch)
								(PX
									(APPR in)
									(NX
										(NX der nahe)
										[01;36m(PX[00m
											(APPRART beim)
											(NX des hauptbahnhofs)[01;36m)[00m)))
							(VC ist)
							(NF
								(SIMPX
									(C was)
									[01;31m(MF[00m
										[01;36m(MF[00m
											(ADVX dann)
											(ADVX sicherlich)[01;36m)[00m
										[01;36m(DM[00m [01;31m(ADVX[00m
											(ADV ja)[01;31m)[00m[01;36m)[00m
										(ADVX auch)
										(ADJX verkehrsgunstig)[01;31m)[00m
									(VC ist))))))[01;31m)[00m[01;31m)[00m
		(SU ja dann werde ich die buchen)
		[01;31m(SU[00m
			(SIMPX
				(SIMPX kummern sie sich um die fluge ginge)
				(MF das))[01;31m)[00m))
Step:Single Word Phrase
{'family': ['ADVX', 'ADVX', 'DM', 'ADVX', 'ADJX'], 'auto preterminal span': (23, 24), 'span': (23, 24), 'subtrees': ['ADV'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'DM')}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM
				(ITJ gut))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(P[00m
				(SIMPX es scheint mir sowieso gunstig)
				(KOUS weil)
				(SIMPX
					(VF ich)
					(LK sehe)
					(MF grade)
					(NF
						(SIMPX
							(C das)
							(MF
								(NX es)
								(ADVX auch)
								(PX
									(APPR in)
									(NX
										(NX der nahe)
										[01;36m(PX[00m
											(APPRART beim)
											(NX des hauptbahnhofs)[01;36m)[00m)))
							(VC ist)
							(NF
								(SIMPX
									(C was)
									[01;31m(MF[00m
										[01;36m(MF[00m
											(ADVX dann)
											(ADVX sicherlich)[01;36m)[00m
										(DM ja)
										(ADVX auch)
										(ADJX verkehrsgunstig)[01;31m)[00m
									(VC ist))))))[01;31m)[00m[01;31m)[00m
		(SU ja dann werde ich die buchen)
		[01;31m(SU[00m
			(SIMPX
				(SIMPX kummern sie sich um die fluge ginge)
				(MF das))[01;31m)[00m))
Step:Modifier Attachment
{'new_parent': 'SIMPX', 'new_family': ['C', 'MF', 'DM', 'ADVX', 'ADJX', 'VC'], 'mover info': [('DM', (23, 24)), ('ADVX', (24, 25)), ('ADJX', (25, 26))], 'old_family': ['ADVX', 'ADVX', 'DM', 'ADVX', 'ADJX'], 'start left siblings': ['ADVX', 'ADVX'], 'auto preterminals': ('PWS', 'ADV', 'ADV', 'ADV', 'ADV', 'ADJD', 'VAFIN'), 'start right siblings': [], 'end left siblings': ['C', 'MF'], 'auto preterminal span': (20, 27), 'movers': ['DM', 'ADVX', 'ADJX'], 'old_parent': 'MF', 'end right siblings': ['VC'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM
				(ITJ gut))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(P[00m
				(SIMPX es scheint mir sowieso gunstig)
				(KOUS weil)
				(SIMPX
					(VF ich)
					(LK sehe)
					(MF grade)
					(NF
						(SIMPX
							(C das)
							(MF
								(NX es)
								(ADVX auch)
								(PX
									(APPR in)
									(NX
										(NX der nahe)
										[01;36m(PX[00m
											(APPRART beim)
											(NX des hauptbahnhofs)[01;36m)[00m)))
							(VC ist)
							(NF was dann sicherlich ja auch verkehrsgunstig ist))))[01;31m)[00m[01;31m)[00m
		(SU ja dann werde ich die buchen)
		[01;31m(SU[00m
			(SIMPX
				(SIMPX kummern sie sich um die fluge ginge)
				(MF das))[01;31m)[00m))
Step:UNSET add
{'subtrees': ['APPRART', 'NX'], 'family': ['NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'ART', 'NN'), 'right siblings': [], 'left siblings': [(NX (ART der) (NN nahe))], 'auto preterminal span': (16, 19), 'span': (16, 19), 'parent': 'NX', 'label': 'PX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM
				(ITJ gut))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(P[00m
				(SIMPX es scheint mir sowieso gunstig)
				(KOUS weil)
				(SIMPX ich sehe grade das es auch in der nahe beim des hauptbahnhofs ist was dann sicherlich ja auch verkehrsgunstig ist)[01;31m)[00m[01;31m)[00m
		(SU ja dann werde ich die buchen)
		[01;31m(SU[00m
			(SIMPX
				(SIMPX kummern sie sich um die fluge ginge)
				(MF das))[01;31m)[00m))
Step:Unary
{'subtrees': ['DM'], 'family': ['SU', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PPER', 'VVFIN', 'PPER', 'ADV', 'ADJD', 'KOUS', 'PPER', 'VVFIN', 'ADV', 'KOUS', 'PPER', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'ART', 'NN', 'VAFIN', 'PWS', 'ADV', 'ADV', 'ADV', 'ADV', 'ADJD', 'VAFIN', 'PTKANT', 'ADV', 'VAFIN', 'PPER', 'PDS', 'VVINF', 'VVFIN', 'PPER', 'PRF', 'APPR', 'ART', 'NN', 'VVFIN', 'PDS'), 'right siblings': ['SU', 'SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 41), 'span': (0, 1), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM gut)
		[01;31m(SU[00m
			[01;31m(P[00m
				(SIMPX es scheint mir sowieso gunstig)
				(KOUS weil)
				(SIMPX ich sehe grade das es auch in der nahe beim des hauptbahnhofs ist was dann sicherlich ja auch verkehrsgunstig ist)[01;31m)[00m[01;31m)[00m
		(SU ja dann werde ich die buchen)
		[01;31m(SU[00m
			(SIMPX
				(SIMPX kummern sie sich um die fluge ginge)
				(MF das))[01;31m)[00m))
Step:Unary
{'subtrees': ['P'], 'family': ['DM', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PPER', 'VVFIN', 'PPER', 'ADV', 'ADJD', 'KOUS', 'PPER', 'VVFIN', 'ADV', 'KOUS', 'PPER', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'ART', 'NN', 'VAFIN', 'PWS', 'ADV', 'ADV', 'ADV', 'ADV', 'ADJD', 'VAFIN', 'PTKANT', 'ADV', 'VAFIN', 'PPER', 'PDS', 'VVINF', 'VVFIN', 'PPER', 'PRF', 'APPR', 'ART', 'NN', 'VVFIN', 'PDS'), 'right siblings': ['SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 41), 'span': (1, 27), 'left siblings': ['DM'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM gut)
		[01;31m(P[00m
			(SIMPX es scheint mir sowieso gunstig)
			(KOUS weil)
			(SIMPX ich sehe grade das es auch in der nahe beim des hauptbahnhofs ist was dann sicherlich ja auch verkehrsgunstig ist)[01;31m)[00m
		(SU ja dann werde ich die buchen)
		[01;31m(SU[00m
			(SIMPX
				(SIMPX kummern sie sich um die fluge ginge)
				(MF das))[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'KOUS', 'SIMPX'], 'family': ['DM', 'P', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PPER', 'VVFIN', 'PPER', 'ADV', 'ADJD', 'KOUS', 'PPER', 'VVFIN', 'ADV', 'KOUS', 'PPER', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'ART', 'NN', 'VAFIN', 'PWS', 'ADV', 'ADV', 'ADV', 'ADV', 'ADJD', 'VAFIN', 'PTKANT', 'ADV', 'VAFIN', 'PPER', 'PDS', 'VVINF', 'VVFIN', 'PPER', 'PRF', 'APPR', 'ART', 'NN', 'VVFIN', 'PDS'), 'right siblings': ['SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 41), 'span': (1, 27), 'left siblings': ['DM'], 'label': 'P', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM gut)
		(SIMPX es scheint mir sowieso gunstig)
		(KOUS weil)
		(SIMPX ich sehe grade das es auch in der nahe beim des hauptbahnhofs ist was dann sicherlich ja auch verkehrsgunstig ist)
		(SU ja dann werde ich die buchen)
		[01;31m(SU[00m
			(SIMPX
				(SIMPX kummern sie sich um die fluge ginge)
				(MF das))[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['DM', 'SIMPX', 'KOUS', 'SIMPX', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PPER', 'VVFIN', 'PPER', 'ADV', 'ADJD', 'KOUS', 'PPER', 'VVFIN', 'ADV', 'KOUS', 'PPER', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'ART', 'NN', 'VAFIN', 'PWS', 'ADV', 'ADV', 'ADV', 'ADV', 'ADJD', 'VAFIN', 'PTKANT', 'ADV', 'VAFIN', 'PPER', 'PDS', 'VVINF', 'VVFIN', 'PPER', 'PRF', 'APPR', 'ART', 'NN', 'VVFIN', 'PDS'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 41), 'span': (33, 41), 'left siblings': ['DM', 'SIMPX', 'KOUS', 'SIMPX', 'SU'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP gut es scheint mir sowieso gunstig weil ich sehe grade das es auch in der nahe beim des hauptbahnhofs ist was dann sicherlich ja auch verkehrsgunstig ist ja dann werde ich die buchen kummern sie sich um die fluge ginge das)

Sentence 396:
6 Initial errors
0 on fringe, 5 iterations
2 Error:Modifier Attachment
1 Error:Clause Attachment
1 Error:Unary
1 Error:Single Word Phrase
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU mir ware beides recht)
		[01;31m(SU[00m
			(DM also)
			(SIMPX [01;33m(NX[00m
				(VF
					(NX
						(NX dienstag abend)
						(KON oder)
						[01;31m(NX[00m
							(NX mittwoch) [01;33mNX)[00m
							(ADVX morgen)[01;31m)[00m))
				(LK muste)
				(MF man ja dann)
				(VC sagen))
			(DM genau)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF dann)
				(LK wurde)
				(MF ich mit dem hotelbuchen einfach noch)
				(VC warten)
				(NF
					(SIMPX
						(C bis)
						(MF
							[01;31m(NX[00m
								(PDS das)[01;31m)[00m
							[01;31m(ADJX[00m
								(ADJD geklart)[01;31m)[00m)
						(VC ist))))[01;31m)[00m))
Step:Modifier Attachment
{'new_parent': 'VF', 'new_family': ['NX', 'ADVX'], 'mover info': [('ADVX', (9, 10))], 'old_family': ['NX', 'ADVX'], 'start left siblings': ['NX'], 'auto preterminals': ('NN', 'ADV', 'KON', 'NN', 'ADV'), 'start right siblings': [], 'end left siblings': ['NX'], 'auto preterminal span': (5, 10), 'adding node already present': False, 'movers': ['ADVX'], 'old_parent': 'NX', 'POS confusion': ('ADV', 'ADV'), 'added and moved': True, 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(SU mir ware beides recht)
		[01;31m(SU[00m
			(DM also)
			(SIMPX dienstag abend oder mittwoch morgen muste man ja dann sagen)
			(DM genau)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF dann)
				(LK wurde)
				(MF ich mit dem hotelbuchen einfach noch)
				(VC warten)
				(NF
					(SIMPX
						(C bis)
						(MF
							[01;31m(NX[00m
								(PDS das)[01;31m)[00m
							[01;31m(ADJX[00m
								(ADJD geklart)[01;31m)[00m)
						(VC ist))))[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['DM', 'SIMPX', 'DM'], 'family': ['SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'PIS', 'ADJD', 'ADV', 'NN', 'ADV', 'KON', 'NN', 'ADV', 'VMFIN', 'PIS', 'ADV', 'ADV', 'VVINF', 'ITJ', 'ADV', 'VAFIN', 'PPER', 'APPR', 'ART', 'NN', 'ADV', 'ADV', 'VVINF', 'KOUS', 'PDS', 'ADJD', 'VAFIN'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 29), 'span': (4, 16), 'left siblings': ['SU'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU mir ware beides recht)
		(DM also)
		(SIMPX dienstag abend oder mittwoch morgen muste man ja dann sagen)
		(DM genau)
		[01;31m(SU[00m
			(SIMPX
				(VF dann)
				(LK wurde)
				(MF ich mit dem hotelbuchen einfach noch)
				(VC warten)
				(NF
					(SIMPX
						(C bis)
						(MF
							[01;31m(NX[00m
								(PDS das)[01;31m)[00m
							[01;31m(ADJX[00m
								(ADJD geklart)[01;31m)[00m)
						(VC ist))))[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SU', 'DM', 'SIMPX', 'DM', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'PIS', 'ADJD', 'ADV', 'NN', 'ADV', 'KON', 'NN', 'ADV', 'VMFIN', 'PIS', 'ADV', 'ADV', 'VVINF', 'ITJ', 'ADV', 'VAFIN', 'PPER', 'APPR', 'ART', 'NN', 'ADV', 'ADV', 'VVINF', 'KOUS', 'PDS', 'ADJD', 'VAFIN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 29), 'span': (16, 29), 'left siblings': ['SU', 'DM', 'SIMPX', 'DM'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU mir ware beides recht)
		(DM also)
		(SIMPX dienstag abend oder mittwoch morgen muste man ja dann sagen)
		(DM genau)
		(SIMPX
			(VF dann)
			(LK wurde)
			(MF ich mit dem hotelbuchen einfach noch)
			(VC warten)
			(NF
				(SIMPX
					(C bis)
					(MF
						[01;31m(NX[00m
							(PDS das)[01;31m)[00m
						[01;31m(ADJX[00m
							(ADJD geklart)[01;31m)[00m)
					(VC ist))))))
Step:Single Word Phrase
{'subtrees': ['PDS'], 'family': ['NX', 'ADJX'], 'over_word': True, 'over words': True, 'auto preterminals': ('PDS', 'ADJD'), 'right siblings': ['ADJX'], 'parent': 'MF', 'auto preterminal span': (26, 28), 'span': (26, 27), 'left siblings': [], 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(SU mir ware beides recht)
		(DM also)
		(SIMPX dienstag abend oder mittwoch morgen muste man ja dann sagen)
		(DM genau)
		(SIMPX
			(VF dann)
			(LK wurde)
			(MF ich mit dem hotelbuchen einfach noch)
			(VC warten)
			(NF
				(SIMPX
					(C bis)
					(MF
						(PDS das)
						[01;31m(ADJX[00m
							(ADJD geklart)[01;31m)[00m)
					(VC ist))))))
Step:Single Word Phrase
{'subtrees': ['ADJD'], 'family': ['PDS', 'ADJX'], 'over_word': True, 'over words': True, 'auto preterminals': ('PDS', 'ADJD'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (26, 28), 'span': (27, 28), 'left siblings': ['PDS'], 'label': 'ADJX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP mir ware beides recht also dienstag abend oder mittwoch morgen muste man ja dann sagen genau dann wurde ich mit dem hotelbuchen einfach noch warten bis das geklart ist)

Sentence 397:
14 Initial errors
0 on fringe, 9 iterations
3 Error:UNSET move
3 Error:Clause Attachment
2 Error:Modifier Attachment
1 Error:Unary
1 Error:UNSET add
1 Error:Unary
1 Error:Clause Attachment
1 Error:UNSET add
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;36m(SU[00m
				(SIMPX
					(VF das)
					(LK sollte)
					(MF dann)
					[01;36m(VXINF[00m
						(VC
							(VXINF zu machen)
							(VXINF sein))[01;36m)[00m)[01;36m)[00m
			[01;33m(SU[00m (DM ja)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;36m(SIMPX[00m
					(VF die frage)
					(LK ist)
					(MF jetzt noch) [01;33mSU)[00m[01;36m)[00m
				(SIMPX
					(VF man)
					(LK hat)
					(MF
						(NX mir)
						[01;31m(PX[00m
							(ADVX hier)
							[01;36m(PX[00m
								(APPR bei)
								(NX der mappe)[01;36m)[00m[01;31m)[00m
						(ADVX auch)
						(NX einige informationen uber sehenswurdigkeiten und veranstaltungen))
					(VC hingelegt))
				[01;31m(NF[00m [01;33m(SU[00m
					[01;31m(SIMPX[00m
						(SIMPX haben sie da auch interesse)
						[01;33m(SU[00m (SIMPX soll ich da irgendwas buchen)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(DM
				(ITJ oder))[01;31m)[00m)) [01;33mSU) SU)[00m
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['DM', 'VF', 'LK', 'MF', 'SIMPX', 'NF'], 'mover info': [('DM', (6, 7))], 'old_family': ['SIMPX', 'DM'], 'start left siblings': ['SIMPX'], 'auto preterminals': ('PDS', 'VMFIN', 'ADV', 'PTKZU', 'VVINF', 'VAINF', 'PTKANT', 'ART', 'NN', 'VAFIN', 'ADV', 'ADV', 'PIS', 'VAFIN', 'PPER', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'PIAT', 'NN', 'APPR', 'NN', 'KON', 'NN', 'VVPP', 'VAFIN', 'PPER', 'ADV', 'ADV', 'NN', 'VMFIN', 'PPER', 'ADV', 'PIS', 'VVINF', 'ITJ'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 38), 'adding node already present': False, 'movers': ['DM'], 'old_parent': 'SU', 'POS confusion': ('PTKANT', 'PTKANT'), 'added and moved': True, 'end right siblings': ['VF', 'LK', 'MF', 'SIMPX', 'NF'], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'PX'}
(TOP
	(TURN
		(SU
			(SIMPX
				(VF das)
				(LK sollte)
				(MF dann)
				[01;36m(VXINF[00m
					(VC
						(VXINF zu machen)
						(VXINF sein))[01;36m)[00m))
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(SU
					(DM ja)
					[01;36m(SIMPX[00m
						(VF die frage)
						(LK ist)
						(MF jetzt noch)[01;36m)[00m)
				(SIMPX
					(VF man)
					(LK hat)
					(MF
						(NX mir)
						[01;31m(PX[00m
							(ADVX hier)
							[01;36m(PX[00m
								(APPR bei)
								(NX der mappe)[01;36m)[00m[01;31m)[00m
						(ADVX auch)
						(NX einige informationen uber sehenswurdigkeiten und veranstaltungen))
					(VC hingelegt))
				[01;31m(NF[00m [01;33m(SU[00m
					[01;31m(SIMPX[00m
						(SIMPX haben sie da auch interesse)
						[01;33m(SU[00m (SIMPX soll ich da irgendwas buchen)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(DM
				(ITJ oder))[01;31m)[00m)) [01;33mSU) SU)[00m
Step:Clause Attachment
{'new_parent': 'SU', 'new_family': ['SIMPX', 'DM'], 'mover info': [('SIMPX', (32, 37))], 'old_family': ['SIMPX', 'SIMPX'], 'start left siblings': ['SIMPX'], 'auto preterminals': ('PDS', 'VMFIN', 'ADV', 'PTKZU', 'VVINF', 'VAINF', 'PTKANT', 'ART', 'NN', 'VAFIN', 'ADV', 'ADV', 'PIS', 'VAFIN', 'PPER', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'PIAT', 'NN', 'APPR', 'NN', 'KON', 'NN', 'VVPP', 'VAFIN', 'PPER', 'ADV', 'ADV', 'NN', 'VMFIN', 'PPER', 'ADV', 'PIS', 'VVINF', 'ITJ'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 38), 'movers': ['SIMPX'], 'old_parent': 'SIMPX', 'end right siblings': ['DM'], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU
			(SIMPX
				(VF das)
				(LK sollte)
				(MF dann)
				[01;36m(VXINF[00m
					(VC
						(VXINF zu machen)
						(VXINF sein))[01;36m)[00m))
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(SU
					(DM ja)
					[01;36m(SIMPX[00m
						(VF die frage)
						(LK ist)
						(MF jetzt noch)[01;36m)[00m)
				(SIMPX
					(VF man)
					(LK hat)
					(MF
						(NX mir)
						[01;31m(PX[00m
							(ADVX hier)
							[01;36m(PX[00m
								(APPR bei)
								(NX der mappe)[01;36m)[00m[01;31m)[00m
						(ADVX auch)
						(NX einige informationen uber sehenswurdigkeiten und veranstaltungen))
					(VC hingelegt))
				[01;31m(NF[00m [01;33m(SU[00m
					(SIMPX
						(LK haben)
						(MF sie da auch interesse))[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SU soll ich da irgendwas buchen oder))) [01;33mSU)[00m
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'ADVX', 'PX', 'ADVX', 'NX'], 'mover info': [('ADVX', (15, 16))], 'old_family': ['ADVX', 'APPR', 'NX'], 'start left siblings': [], 'auto preterminals': ('PPER', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'PIAT', 'NN', 'APPR', 'NN', 'KON', 'NN'), 'start right siblings': ['APPR', 'NX'], 'end left siblings': ['NX'], 'auto preterminal span': (14, 26), 'movers': ['ADVX'], 'old_parent': 'PX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['PX', 'ADVX', 'NX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU
			(SIMPX
				(VF das)
				(LK sollte)
				(MF dann)
				[01;36m(VXINF[00m
					(VC
						(VXINF zu machen)
						(VXINF sein))[01;36m)[00m))
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(SU
					(DM ja)
					[01;36m(SIMPX[00m
						(VF die frage)
						(LK ist)
						(MF jetzt noch)[01;36m)[00m)
				(SIMPX man hat mir hier bei der mappe auch einige informationen uber sehenswurdigkeiten und veranstaltungen hingelegt)
				[01;31m(NF[00m [01;33m(SU[00m
					(SIMPX
						(LK haben)
						(MF sie da auch interesse))[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SU soll ich da irgendwas buchen oder))) [01;33mSU)[00m
Step:Unary
{'subtrees': ['VC'], 'family': ['VF', 'LK', 'MF', 'VXINF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKZU', 'VVINF', 'VAINF'), 'right siblings': [], 'left siblings': [(VF (NX (PDS das))), (LK (VXFIN (VMFIN sollte))), (MF (ADVX (ADV dann)))], 'auto preterminal span': (3, 6), 'span': (3, 6), 'parent': 'SIMPX', 'label': 'VXINF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU das sollte dann zu machen sein)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(SU
					(DM ja)
					[01;36m(SIMPX[00m
						(VF die frage)
						(LK ist)
						(MF jetzt noch)[01;36m)[00m)
				(SIMPX man hat mir hier bei der mappe auch einige informationen uber sehenswurdigkeiten und veranstaltungen hingelegt)
				[01;31m(NF[00m [01;33m(SU[00m
					(SIMPX
						(LK haben)
						(MF sie da auch interesse))[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SU soll ich da irgendwas buchen oder))) [01;33mSU)[00m
Step:UNSET add
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'VAFIN', 'ADV', 'ADV'), 'right siblings': [], 'left siblings': [(DM (PTKANT ja))], 'auto preterminal span': (7, 12), 'span': (7, 12), 'parent': 'SU', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU das sollte dann zu machen sein)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(SU ja die frage ist jetzt noch)
				(SIMPX man hat mir hier bei der mappe auch einige informationen uber sehenswurdigkeiten und veranstaltungen hingelegt)
				[01;31m(NF[00m [01;33m(SU[00m
					(SIMPX
						(LK haben)
						(MF sie da auch interesse))[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SU soll ich da irgendwas buchen oder))) [01;33mSU)[00m
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VMFIN', 'ADV', 'PTKZU', 'VVINF', 'VAINF', 'PTKANT', 'ART', 'NN', 'VAFIN', 'ADV', 'ADV', 'PIS', 'VAFIN', 'PPER', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'PIAT', 'NN', 'APPR', 'NN', 'KON', 'NN', 'VVPP', 'VAFIN', 'PPER', 'ADV', 'ADV', 'NN', 'VMFIN', 'PPER', 'ADV', 'PIS', 'VVINF', 'ITJ'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 38), 'span': (6, 32), 'left siblings': ['SU'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU das sollte dann zu machen sein)
		[01;31m(SIMPX[00m
			(SU ja die frage ist jetzt noch)
			(SIMPX man hat mir hier bei der mappe auch einige informationen uber sehenswurdigkeiten und veranstaltungen hingelegt)
			[01;31m(NF[00m [01;33m(SU[00m
				(SIMPX
					(LK haben)
					(MF sie da auch interesse))[01;31m)[00m[01;31m)[00m
		(SU soll ich da irgendwas buchen oder))) [01;33mSU)[00m
Step:Clause Attachment
{'subtrees': ['SU', 'SIMPX', 'NF'], 'family': ['SU', 'SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VMFIN', 'ADV', 'PTKZU', 'VVINF', 'VAINF', 'PTKANT', 'ART', 'NN', 'VAFIN', 'ADV', 'ADV', 'PIS', 'VAFIN', 'PPER', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'PIAT', 'NN', 'APPR', 'NN', 'KON', 'NN', 'VVPP', 'VAFIN', 'PPER', 'ADV', 'ADV', 'NN', 'VMFIN', 'PPER', 'ADV', 'PIS', 'VVINF', 'ITJ'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 38), 'span': (6, 32), 'left siblings': ['SU'], 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU das sollte dann zu machen sein)
		(SU ja die frage ist jetzt noch)
		(SIMPX man hat mir hier bei der mappe auch einige informationen uber sehenswurdigkeiten und veranstaltungen hingelegt)
		[01;36m(SU[00m
			[01;31m(NF[00m
				(SIMPX
					(LK haben)
					(MF sie da auch interesse))[01;31m)[00m
			(SU soll ich da irgendwas buchen oder)[01;36m)[00m))
Step:UNSET add
{'subtrees': ['NF', 'SU'], 'family': ['SU', 'SU', 'SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'PPER', 'ADV', 'ADV', 'NN', 'VMFIN', 'PPER', 'ADV', 'PIS', 'VVINF', 'ITJ'), 'right siblings': [], 'left siblings': [(SU (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VMFIN sollte))) (MF (ADVX (ADV dann))) (VXINF (VC (VXINF (PTKZU zu) (VVINF machen)) (VXINF (VAINF sein)))))), (SU (DM (PTKANT ja)) (SIMPX (VF (NX (ART die) (NN frage))) (LK (VXFIN (VAFIN ist))) (MF (ADVX (ADV jetzt)) (ADVX (ADV noch))))), (SIMPX (VF (NX (PIS man))) (LK (VXFIN (VAFIN hat))) (MF (NX (PPER mir)) (ADVX (ADV hier)) (PX (APPR bei) (NX (ART der) (NN mappe))) (ADVX (ADV auch)) (NX (NX (PIAT einige) (NN informationen)) (PX (APPR uber) (NX (NX (NN sehenswurdigkeiten)) (KON und) (NX (NN veranstaltungen)))))) (VC (VXINF (VVPP hingelegt))))], 'auto preterminal span': (27, 38), 'span': (27, 38), 'parent': 'TURN', 'label': 'SU', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU das sollte dann zu machen sein)
		(SU ja die frage ist jetzt noch)
		(SIMPX man hat mir hier bei der mappe auch einige informationen uber sehenswurdigkeiten und veranstaltungen hingelegt)
		(SU
			[01;31m(NF[00m
				(SIMPX
					(LK haben)
					(MF sie da auch interesse))[01;31m)[00m
			(SU soll ich da irgendwas buchen oder))))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['NF', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'PPER', 'ADV', 'ADV', 'NN', 'VMFIN', 'PPER', 'ADV', 'PIS', 'VVINF', 'ITJ'), 'right siblings': ['SU'], 'parent': 'SU', 'auto preterminal span': (27, 38), 'span': (27, 32), 'left siblings': [], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP das sollte dann zu machen sein ja die frage ist jetzt noch man hat mir hier bei der mappe auch einige informationen uber sehenswurdigkeiten und veranstaltungen hingelegt haben sie da auch interesse soll ich da irgendwas buchen oder)

Sentence 398:
20 Initial errors
0 on fringe, 14 iterations
4 Error:NP Attachment
2 Error:Single Word Phrase
2 Error:Clause Attachment
2 Error:UNSET move
1 Error:Unary
1 Error:Single Word Phrase
1 Error:Unary
1 Error:Unary
1 Error:Clause Attachment
1 Error:Single Word Phrase
1 Error:Modifier Attachment
1 Error:PP Attachment
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM also)
			(SIMPX
				(VF unter den angeboten)
				(LK sind)
				[01;36m(PX[00m
					(MF [01;33m(PX (MF[00m
						[01;31m(PX[00m
							(APPR in)
							[01;31m(NX[00m
								(NX diese richtung) [01;33mMF) PX)[00m
								[01;31m(NX[00m [01;33m(SIMPX[00m
									[01;36m(NX[00m
										(ART der)
										[01;31m(ADJX[00m
											(ADJA darstellenden)[01;31m)[00m[01;36m)[00m
									[01;36m(VXFIN[00m
										[01;36m(LK[00m
											(NN kunste)[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
						[01;31m(NX[00m
							[01;36m(MF[00m
								(NX
									(ADJX zwei)
									(NN kategorien)) [01;33mSIMPX)[00m[01;36m)[00m
							[01;31m(NX[00m
								(NX opernbesuche)
								(KON und)
								[01;36m(ADVX[00m [01;31m(NX[00m [01;33m(MF[00m
									(NN gospelkonzert)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
						(PX an dem abend)) [01;33mMF)[00m[01;36m)[00m
				(VC zu buchen))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK sollen)
				(MF wir dann das gospelkonzert)
				(VC nehmen)[01;31m)[00m[01;31m)[00m
		(SU das ist sicherlich leichter als ein wagner)))
Step:NP Attachment
{'new_parent': 'NX', 'new_family': ['NX', 'NX', 'NX'], 'mover info': [('NX', (8, 11))], 'old_family': ['NX', 'NX'], 'start left siblings': ['NX'], 'auto preterminals': ('APPR', 'PDAT', 'NN', 'ART', 'ADJA', 'NN', 'CARD', 'NN', 'NN', 'KON', 'NN', 'APPR', 'ART', 'NN'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (5, 19), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': ['NX', 'NX'], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'ADVX'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM also)
			(SIMPX
				(VF unter den angeboten)
				(LK sind)
				[01;36m(PX[00m
					(MF
						[01;36m(MF[00m
							(PX
								(APPR in)
								(NX diese richtung))[01;36m)[00m
						[01;31m(NX[00m
							(SIMPX
								[01;31m(NX[00m
									[01;36m(NX[00m
										(ART der)
										[01;31m(ADJX[00m
											(ADJA darstellenden)[01;31m)[00m[01;36m)[00m
									[01;36m(VXFIN[00m
										[01;36m(LK[00m
											(NN kunste)[01;36m)[00m[01;36m)[00m[01;31m)[00m
								[01;36m(MF[00m
									(NX
										(ADJX zwei)
										(NN kategorien))[01;36m)[00m)
							[01;31m(NX[00m
								(NX opernbesuche)
								(KON und)
								[01;36m(ADVX[00m [01;31m(NX[00m [01;33m(MF[00m
									(NN gospelkonzert)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
						(PX an dem abend)) [01;33mMF)[00m[01;36m)[00m
				(VC zu buchen))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK sollen)
				(MF wir dann das gospelkonzert)
				(VC nehmen)[01;31m)[00m[01;31m)[00m
		(SU das ist sicherlich leichter als ein wagner)))
Step:Single Word Phrase
{'family': ['NX', 'KON', 'ADVX'], 'auto preterminal span': (15, 16), 'span': (15, 16), 'subtrees': ['NN'], 'parent': 'NX', 'over_word': True, 'auto preterminals': ('NN',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('NX', 'ADVX')}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM also)
			(SIMPX
				(VF unter den angeboten)
				(LK sind)
				[01;36m(PX[00m
					(MF
						[01;36m(MF[00m
							(PX
								(APPR in)
								(NX diese richtung))[01;36m)[00m
						[01;31m(NX[00m
							(SIMPX
								[01;31m(NX[00m
									[01;36m(NX[00m
										(ART der)
										[01;31m(ADJX[00m
											(ADJA darstellenden)[01;31m)[00m[01;36m)[00m
									[01;36m(VXFIN[00m
										[01;36m(LK[00m
											(NN kunste)[01;36m)[00m[01;36m)[00m[01;31m)[00m
								[01;36m(MF[00m
									(NX
										(ADJX zwei)
										(NN kategorien))[01;36m)[00m)
							[01;31m(NX[00m
								(NX opernbesuche)
								(KON und)
								[01;33m(MF[00m (ADVX gospelkonzert)[01;31m)[00m[01;31m)[00m
						(PX an dem abend)) [01;33mMF)[00m[01;36m)[00m
				(VC zu buchen))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK sollen)
				(MF wir dann das gospelkonzert)
				(VC nehmen)[01;31m)[00m[01;31m)[00m
		(SU das ist sicherlich leichter als ein wagner)))
Step:Clause Attachment
{'new_parent': 'MF', 'new_family': ['PX', 'SIMPX', 'NX', 'PX'], 'mover info': [('SIMPX', (8, 13))], 'old_family': ['SIMPX', 'NX'], 'start left siblings': [], 'auto preterminals': ('APPR', 'PDAT', 'NN', 'ART', 'ADJA', 'NN', 'CARD', 'NN', 'NN', 'KON', 'NN', 'APPR', 'ART', 'NN'), 'start right siblings': ['NX'], 'end left siblings': ['PX'], 'auto preterminal span': (5, 19), 'adding node already present': False, 'movers': ['SIMPX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': ['NX', 'PX'], 'classified_type': 'Clause Attachment', 'type': 'move', 'added label': 'MF'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM also)
			(SIMPX
				(VF unter den angeboten)
				(LK sind)
				(PX
					(MF
						[01;36m(MF[00m
							(PX
								(APPR in)
								(NX diese richtung))[01;36m)[00m
						(SIMPX
							[01;31m(NX[00m
								[01;36m(NX[00m
									(ART der)
									[01;31m(ADJX[00m
										(ADJA darstellenden)[01;31m)[00m[01;36m)[00m
								[01;36m(VXFIN[00m
									[01;36m(LK[00m
										(NN kunste)[01;36m)[00m[01;36m)[00m[01;31m)[00m
							[01;36m(MF[00m
								(NX
									(ADJX zwei)
									(NN kategorien))[01;36m)[00m)
						[01;31m(NX[00m
							(NX opernbesuche)
							(KON und)
							[01;33m(MF[00m (ADVX gospelkonzert)[01;31m)[00m
						(PX an dem abend))) [01;33mMF)[00m
				(VC zu buchen))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK sollen)
				(MF wir dann das gospelkonzert)
				(VC nehmen)[01;31m)[00m[01;31m)[00m
		(SU das ist sicherlich leichter als ein wagner)))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['NX', 'NN', 'NX'], 'mover info': [('NN', (10, 11))], 'old_family': ['ART', 'ADJX', 'NN'], 'start left siblings': ['ART', 'ADJX'], 'auto preterminals': ('ART', 'ADJA', 'NN', 'CARD', 'NN'), 'start right siblings': [], 'end left siblings': ['NX'], 'auto preterminal span': (8, 13), 'movers': ['NN'], 'old_parent': 'NX', 'POS confusion': ('NN', 'NN'), 'end right siblings': ['NX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM also)
			(SIMPX
				(VF unter den angeboten)
				(LK sind)
				(PX
					(MF
						[01;36m(MF[00m
							(PX
								(APPR in)
								(NX diese richtung))[01;36m)[00m
						(SIMPX
							(NX
								(ART der)
								[01;31m(ADJX[00m
									(ADJA darstellenden)[01;31m)[00m)
							[01;36m(VXFIN[00m
								[01;36m(LK[00m
									(NN kunste)[01;36m)[00m[01;36m)[00m
							[01;36m(MF[00m
								(NX
									(ADJX zwei)
									(NN kategorien))[01;36m)[00m)
						[01;31m(NX[00m
							(NX opernbesuche)
							(KON und)
							[01;33m(MF[00m (ADVX gospelkonzert)[01;31m)[00m
						(PX an dem abend))) [01;33mMF)[00m
				(VC zu buchen))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK sollen)
				(MF wir dann das gospelkonzert)
				(VC nehmen)[01;31m)[00m[01;31m)[00m
		(SU das ist sicherlich leichter als ein wagner)))
Step:Unary
{'subtrees': ['PX'], 'family': ['MF', 'SIMPX', 'NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'PDAT', 'NN'), 'right siblings': [(SIMPX (NX (ART der) (ADJX (ADJA darstellenden))) (NN kunste) (NX (ADJX (CARD zwei)) (NN kategorien))), (NX (NX (NN opernbesuche)) (KON und) (ADVX (NN gospelkonzert))), (PX (APPR an) (NX (ART dem) (NN abend)))], 'left siblings': [], 'auto preterminal span': (5, 8), 'span': (5, 8), 'parent': 'MF', 'label': 'MF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM also)
			(SIMPX
				(VF unter den angeboten)
				(LK sind)
				(PX
					(MF
						(MF in diese richtung)
						(SIMPX
							(NX
								(ART der)
								[01;31m(ADJX[00m
									(ADJA darstellenden)[01;31m)[00m)
							[01;36m(VXFIN[00m
								[01;36m(LK[00m
									(NN kunste)[01;36m)[00m[01;36m)[00m
							[01;36m(MF[00m
								(NX
									(ADJX zwei)
									(NN kategorien))[01;36m)[00m)
						[01;31m(NX[00m
							(NX opernbesuche)
							(KON und)
							[01;33m(MF[00m (ADVX gospelkonzert)[01;31m)[00m
						(PX an dem abend))) [01;33mMF)[00m
				(VC zu buchen))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK sollen)
				(MF wir dann das gospelkonzert)
				(VC nehmen)[01;31m)[00m[01;31m)[00m
		(SU das ist sicherlich leichter als ein wagner)))
Step:Single Word Phrase
{'subtrees': ['NN'], 'family': ['NX', 'LK', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('NN',), 'right siblings': [(NX (ADJX (CARD zwei)) (NN kategorien))], 'left siblings': [(NX (ART der) (ADJX (ADJA darstellenden)))], 'auto preterminal span': (10, 11), 'span': (10, 11), 'parent': 'SIMPX', 'label': 'LK', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM also)
			(SIMPX
				(VF unter den angeboten)
				(LK sind)
				(PX
					(MF
						(MF in diese richtung)
						(SIMPX
							(NX
								(ART der)
								[01;31m(ADJX[00m
									(ADJA darstellenden)[01;31m)[00m)
							[01;36m(VXFIN[00m
								(LK
									(NN kunste))[01;36m)[00m
							[01;36m(MF[00m
								(NX
									(ADJX zwei)
									(NN kategorien))[01;36m)[00m)
						[01;31m(NX[00m
							(NX opernbesuche)
							(KON und)
							[01;33m(MF[00m (ADVX gospelkonzert)[01;31m)[00m
						(PX an dem abend))) [01;33mMF)[00m
				(VC zu buchen))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK sollen)
				(MF wir dann das gospelkonzert)
				(VC nehmen)[01;31m)[00m[01;31m)[00m
		(SU das ist sicherlich leichter als ein wagner)))
Step:Unary
{'subtrees': ['LK'], 'family': ['NX', 'VXFIN', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN',), 'right siblings': [(NX (ADJX (CARD zwei)) (NN kategorien))], 'left siblings': [(NX (ART der) (ADJX (ADJA darstellenden)))], 'auto preterminal span': (10, 11), 'span': (10, 11), 'parent': 'SIMPX', 'label': 'VXFIN', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM also)
			(SIMPX
				(VF unter den angeboten)
				(LK sind)
				(PX
					(MF
						(MF in diese richtung)
						(SIMPX
							(NX
								(ART der)
								[01;31m(ADJX[00m
									(ADJA darstellenden)[01;31m)[00m)
							(VXFIN kunste)
							[01;36m(MF[00m
								(NX
									(ADJX zwei)
									(NN kategorien))[01;36m)[00m)
						[01;31m(NX[00m
							(NX opernbesuche)
							(KON und)
							[01;33m(MF[00m (ADVX gospelkonzert)[01;31m)[00m
						(PX an dem abend))) [01;33mMF)[00m
				(VC zu buchen))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK sollen)
				(MF wir dann das gospelkonzert)
				(VC nehmen)[01;31m)[00m[01;31m)[00m
		(SU das ist sicherlich leichter als ein wagner)))
Step:Unary
{'subtrees': ['NX'], 'family': ['NX', 'VXFIN', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'NN'), 'right siblings': [], 'left siblings': [(NX (ART der) (ADJX (ADJA darstellenden))), (VXFIN (LK (NN kunste)))], 'auto preterminal span': (11, 13), 'span': (11, 13), 'parent': 'SIMPX', 'label': 'MF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM also)
			(SIMPX
				(VF unter den angeboten)
				(LK sind)
				(PX
					(MF
						(MF in diese richtung)
						(SIMPX
							(NX
								(ART der)
								[01;31m(ADJX[00m
									(ADJA darstellenden)[01;31m)[00m)
							(VXFIN kunste)
							(MF zwei kategorien))
						[01;31m(NX[00m
							(NX opernbesuche)
							(KON und)
							[01;33m(MF[00m (ADVX gospelkonzert)[01;31m)[00m
						(PX an dem abend))) [01;33mMF)[00m
				(VC zu buchen))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK sollen)
				(MF wir dann das gospelkonzert)
				(VC nehmen)[01;31m)[00m[01;31m)[00m
		(SU das ist sicherlich leichter als ein wagner)))
Step:Clause Attachment
{'subtrees': ['DM', 'SIMPX'], 'family': ['SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'APPR', 'ART', 'NN', 'VAFIN', 'APPR', 'PDAT', 'NN', 'ART', 'ADJA', 'NN', 'CARD', 'NN', 'NN', 'KON', 'NN', 'APPR', 'ART', 'NN', 'PTKZU', 'VVINF', 'VMFIN', 'PPER', 'ADV', 'ART', 'NN', 'VVINF', 'PDS', 'VAFIN', 'ADV', 'ADJD', 'KOKOM', 'ART', 'NE'), 'right siblings': ['SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 34), 'span': (0, 21), 'left siblings': [], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX
			(VF unter den angeboten)
			(LK sind)
			(PX
				(MF
					(MF in diese richtung)
					(SIMPX
						(NX
							(ART der)
							[01;31m(ADJX[00m
								(ADJA darstellenden)[01;31m)[00m)
						(VXFIN kunste)
						(MF zwei kategorien))
					[01;31m(NX[00m
						(NX opernbesuche)
						(KON und)
						[01;33m(MF[00m (ADVX gospelkonzert)[01;31m)[00m
					(PX an dem abend))) [01;33mMF)[00m
			(VC zu buchen))
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK sollen)
				(MF wir dann das gospelkonzert)
				(VC nehmen)[01;31m)[00m[01;31m)[00m
		(SU das ist sicherlich leichter als ein wagner)))
Step:Single Word Phrase
{'subtrees': ['ADJA'], 'family': ['ART', 'ADJX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ART', 'ADJA'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (8, 10), 'span': (9, 10), 'left siblings': ['ART'], 'label': 'ADJX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX
			(VF unter den angeboten)
			(LK sind)
			(PX
				(MF
					(MF in diese richtung)
					(SIMPX der darstellenden kunste zwei kategorien)
					[01;31m(NX[00m
						(NX opernbesuche)
						(KON und)
						[01;33m(MF[00m (ADVX gospelkonzert)[01;31m)[00m
					(PX an dem abend))) [01;33mMF)[00m
			(VC zu buchen))
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK sollen)
				(MF wir dann das gospelkonzert)
				(VC nehmen)[01;31m)[00m[01;31m)[00m
		(SU das ist sicherlich leichter als ein wagner)))
Step:Modifier Attachment
{'subtrees': ['NX', 'KON', 'ADVX'], 'family': ['MF', 'SIMPX', 'NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'PDAT', 'NN', 'ART', 'ADJA', 'NN', 'CARD', 'NN', 'NN', 'KON', 'NN', 'APPR', 'ART', 'NN'), 'right siblings': ['PX'], 'parent': 'MF', 'auto preterminal span': (5, 19), 'span': (13, 16), 'left siblings': ['MF', 'SIMPX'], 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX
			(VF unter den angeboten)
			(LK sind)
			(PX
				(MF
					(MF in diese richtung)
					(SIMPX der darstellenden kunste zwei kategorien)
					(NX opernbesuche)
					(KON und)
					[01;36m(MF[00m
						(ADVX gospelkonzert)
						(PX an dem abend)[01;36m)[00m))
			(VC zu buchen))
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK sollen)
				(MF wir dann das gospelkonzert)
				(VC nehmen)[01;31m)[00m[01;31m)[00m
		(SU das ist sicherlich leichter als ein wagner)))
Step:PP Attachment
{'subtrees': ['ADVX', 'PX'], 'family': ['MF', 'SIMPX', 'NX', 'KON', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'APPR', 'ART', 'NN'), 'right siblings': [], 'left siblings': [(MF (PX (APPR in) (NX (PDAT diese) (NN richtung)))), (SIMPX (NX (ART der) (ADJA darstellenden)) (VXFIN (LK (NN kunste))) (MF (NX (ADJX (CARD zwei)) (NN kategorien)))), (NX (NN opernbesuche)), (KON und)], 'auto preterminal span': (15, 19), 'span': (15, 19), 'parent': 'MF', 'label': 'MF', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		(SIMPX unter den angeboten sind in diese richtung der darstellenden kunste zwei kategorien opernbesuche und gospelkonzert an dem abend zu buchen)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK sollen)
				(MF wir dann das gospelkonzert)
				(VC nehmen)[01;31m)[00m[01;31m)[00m
		(SU das ist sicherlich leichter als ein wagner)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['DM', 'SIMPX', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'APPR', 'ART', 'NN', 'VAFIN', 'APPR', 'PDAT', 'NN', 'ART', 'ADJA', 'NN', 'CARD', 'NN', 'NN', 'KON', 'NN', 'APPR', 'ART', 'NN', 'PTKZU', 'VVINF', 'VMFIN', 'PPER', 'ADV', 'ART', 'NN', 'VVINF', 'PDS', 'VAFIN', 'ADV', 'ADJD', 'KOKOM', 'ART', 'NE'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 34), 'span': (21, 27), 'left siblings': ['DM', 'SIMPX'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX unter den angeboten sind in diese richtung der darstellenden kunste zwei kategorien opernbesuche und gospelkonzert an dem abend zu buchen)
		[01;31m(SIMPX[00m
			(LK sollen)
			(MF wir dann das gospelkonzert)
			(VC nehmen)[01;31m)[00m
		(SU das ist sicherlich leichter als ein wagner)))
Step:UNSET remove
{'subtrees': ['LK', 'MF', 'VC'], 'family': ['DM', 'SIMPX', 'SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'APPR', 'ART', 'NN', 'VAFIN', 'APPR', 'PDAT', 'NN', 'ART', 'ADJA', 'NN', 'CARD', 'NN', 'NN', 'KON', 'NN', 'APPR', 'ART', 'NN', 'PTKZU', 'VVINF', 'VMFIN', 'PPER', 'ADV', 'ART', 'NN', 'VVINF', 'PDS', 'VAFIN', 'ADV', 'ADJD', 'KOKOM', 'ART', 'NE'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 34), 'span': (21, 27), 'left siblings': ['DM', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP also unter den angeboten sind in diese richtung der darstellenden kunste zwei kategorien opernbesuche und gospelkonzert an dem abend zu buchen sollen wir dann das gospelkonzert nehmen das ist sicherlich leichter als ein wagner)

Sentence 399:
14 Initial errors
0 on fringe, 12 iterations
2 Error:Different label
1 Error:Unary
1 Error:Clause Attachment
1 Error:Clause Attachment
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET add
1 Error:Co-ordination
2 Error:NP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM
				(PTKANT ja))[01;31m)[00m
		[01;31m(SU[00m
			(DM gut)
			(SIMPX dann organisiere ich das auch)[01;31m)[00m
		[01;31m(SU[00m
			(DM ja)
			(SIMPX
				(VF ich)
				(LK denke)
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						(VF dann)
						(LK ist)
						(MF es am sinnvollsten)
						(NF wenn wir die restlichen dinge vertagen bis zu unserem nachsten telefonat)[01;31m)[00m[01;31m)[00m)
			[01;31m(SIMPX[00m
				(C das)
				[01;33m(MF[00m (MF wir dann)
				(VC fixieren)
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						(C wie)
						(MF
							(NX das)
							(PX [01;33m(PX[00m
								(APPR mit)
								[01;31m(NX[00m
									[01;31m(NX[00m
										(NX den buchungen) [01;33mPX)[00m
										(NX der hotels)[01;31m)[00m
									(KON und)
									(ADVX so weiter)[01;31m)[00m)) [01;33mMF)[00m
						(VC aussehen sollte)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;36m(NF[00m [01;31m(SU[00m
			(ADVX
				(ADV dann))[01;31m)[00m[01;36m)[00m))
Step:Different label
{'family': ['SU', 'SU', 'SU', 'NF'], 'auto preterminal span': (42, 43), 'span': (42, 43), 'subtrees': ['ADVX'], 'parent': 'TURN', 'over_word': False, 'auto preterminals': ('ADV',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('SU', 'NF')}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM
				(PTKANT ja))[01;31m)[00m
		[01;31m(SU[00m
			(DM gut)
			(SIMPX dann organisiere ich das auch)[01;31m)[00m
		[01;31m(SU[00m
			(DM ja)
			(SIMPX
				(VF ich)
				(LK denke)
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						(VF dann)
						(LK ist)
						(MF es am sinnvollsten)
						(NF wenn wir die restlichen dinge vertagen bis zu unserem nachsten telefonat)[01;31m)[00m[01;31m)[00m)
			[01;31m(SIMPX[00m
				(C das)
				[01;33m(MF[00m (MF wir dann)
				(VC fixieren)
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						(C wie)
						(MF
							(NX das)
							(PX [01;33m(PX[00m
								(APPR mit)
								[01;31m(NX[00m
									[01;31m(NX[00m
										(NX den buchungen) [01;33mPX)[00m
										(NX der hotels)[01;31m)[00m
									(KON und)
									(ADVX so weiter)[01;31m)[00m)) [01;33mMF)[00m
						(VC aussehen sollte)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(NF dann)))
Step:Unary
{'subtrees': ['DM'], 'family': ['SU', 'SU', 'SU', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'ADV', 'VVFIN', 'PPER', 'PDS', 'ADV', 'PTKANT', 'PPER', 'VVFIN', 'ADV', 'VAFIN', 'PPER', 'PTKA', 'ADJD', 'KOUS', 'PPER', 'ART', 'ADJA', 'NN', 'VVFIN', 'APPR', 'APPR', 'PPOSAT', 'ADJA', 'NN', 'KOUS', 'PPER', 'ADV', 'VVFIN', 'KOUS', 'PDS', 'APPR', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ADV', 'VVINF', 'VMFIN', 'ADV'), 'right siblings': ['SU', 'SU', 'NF'], 'parent': 'TURN', 'auto preterminal span': (0, 43), 'span': (0, 1), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		[01;31m(SU[00m
			(DM gut)
			(SIMPX dann organisiere ich das auch)[01;31m)[00m
		[01;31m(SU[00m
			(DM ja)
			(SIMPX
				(VF ich)
				(LK denke)
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						(VF dann)
						(LK ist)
						(MF es am sinnvollsten)
						(NF wenn wir die restlichen dinge vertagen bis zu unserem nachsten telefonat)[01;31m)[00m[01;31m)[00m)
			[01;31m(SIMPX[00m
				(C das)
				[01;33m(MF[00m (MF wir dann)
				(VC fixieren)
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						(C wie)
						(MF
							(NX das)
							(PX [01;33m(PX[00m
								(APPR mit)
								[01;31m(NX[00m
									[01;31m(NX[00m
										(NX den buchungen) [01;33mPX)[00m
										(NX der hotels)[01;31m)[00m
									(KON und)
									(ADVX so weiter)[01;31m)[00m)) [01;33mMF)[00m
						(VC aussehen sollte)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(NF dann)))
Step:Clause Attachment
{'subtrees': ['DM', 'SIMPX'], 'family': ['DM', 'SU', 'SU', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'ADV', 'VVFIN', 'PPER', 'PDS', 'ADV', 'PTKANT', 'PPER', 'VVFIN', 'ADV', 'VAFIN', 'PPER', 'PTKA', 'ADJD', 'KOUS', 'PPER', 'ART', 'ADJA', 'NN', 'VVFIN', 'APPR', 'APPR', 'PPOSAT', 'ADJA', 'NN', 'KOUS', 'PPER', 'ADV', 'VVFIN', 'KOUS', 'PDS', 'APPR', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ADV', 'VVINF', 'VMFIN', 'ADV'), 'right siblings': ['SU', 'NF'], 'parent': 'TURN', 'auto preterminal span': (0, 43), 'span': (1, 7), 'left siblings': ['DM'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		(SIMPX dann organisiere ich das auch)
		[01;31m(SU[00m
			(DM ja)
			(SIMPX
				(VF ich)
				(LK denke)
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						(VF dann)
						(LK ist)
						(MF es am sinnvollsten)
						(NF wenn wir die restlichen dinge vertagen bis zu unserem nachsten telefonat)[01;31m)[00m[01;31m)[00m)
			[01;31m(SIMPX[00m
				(C das)
				[01;33m(MF[00m (MF wir dann)
				(VC fixieren)
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						(C wie)
						(MF
							(NX das)
							(PX [01;33m(PX[00m
								(APPR mit)
								[01;31m(NX[00m
									[01;31m(NX[00m
										(NX den buchungen) [01;33mPX)[00m
										(NX der hotels)[01;31m)[00m
									(KON und)
									(ADVX so weiter)[01;31m)[00m)) [01;33mMF)[00m
						(VC aussehen sollte)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(NF dann)))
Step:Clause Attachment
{'subtrees': ['DM', 'SIMPX', 'SIMPX'], 'family': ['DM', 'DM', 'SIMPX', 'SU', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'ADV', 'VVFIN', 'PPER', 'PDS', 'ADV', 'PTKANT', 'PPER', 'VVFIN', 'ADV', 'VAFIN', 'PPER', 'PTKA', 'ADJD', 'KOUS', 'PPER', 'ART', 'ADJA', 'NN', 'VVFIN', 'APPR', 'APPR', 'PPOSAT', 'ADJA', 'NN', 'KOUS', 'PPER', 'ADV', 'VVFIN', 'KOUS', 'PDS', 'APPR', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ADV', 'VVINF', 'VMFIN', 'ADV'), 'right siblings': ['NF'], 'parent': 'TURN', 'auto preterminal span': (0, 43), 'span': (7, 42), 'left siblings': ['DM', 'DM', 'SIMPX'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		(SIMPX dann organisiere ich das auch)
		(DM ja)
		(SIMPX
			(VF ich)
			(LK denke)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					(VF dann)
					(LK ist)
					(MF es am sinnvollsten)
					(NF wenn wir die restlichen dinge vertagen bis zu unserem nachsten telefonat)[01;31m)[00m[01;31m)[00m)
		[01;31m(SIMPX[00m
			(C das)
			[01;33m(MF[00m (MF wir dann)
			(VC fixieren)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					(C wie)
					(MF
						(NX das)
						(PX [01;33m(PX[00m
							(APPR mit)
							[01;31m(NX[00m
								[01;31m(NX[00m
									(NX den buchungen) [01;33mPX)[00m
									(NX der hotels)[01;31m)[00m
								(KON und)
								(ADVX so weiter)[01;31m)[00m)) [01;33mMF)[00m
					(VC aussehen sollte)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(NF dann)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['VF', 'LK', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'VAFIN', 'PPER', 'PTKA', 'ADJD', 'KOUS', 'PPER', 'ART', 'ADJA', 'NN', 'VVFIN', 'APPR', 'APPR', 'PPOSAT', 'ADJA', 'NN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (8, 26), 'span': (10, 26), 'left siblings': ['VF', 'LK'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		(SIMPX dann organisiere ich das auch)
		(DM ja)
		(SIMPX
			(VF ich)
			(LK denke)
			[01;31m(SIMPX[00m
				(VF dann)
				(LK ist)
				(MF es am sinnvollsten)
				(NF wenn wir die restlichen dinge vertagen bis zu unserem nachsten telefonat)[01;31m)[00m)
		[01;31m(SIMPX[00m
			(C das)
			[01;33m(MF[00m (MF wir dann)
			(VC fixieren)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					(C wie)
					(MF
						(NX das)
						(PX [01;33m(PX[00m
							(APPR mit)
							[01;31m(NX[00m
								[01;31m(NX[00m
									(NX den buchungen) [01;33mPX)[00m
									(NX der hotels)[01;31m)[00m
								(KON und)
								(ADVX so weiter)[01;31m)[00m)) [01;33mMF)[00m
					(VC aussehen sollte)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(NF dann)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'NF'], 'family': ['VF', 'LK', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'VAFIN', 'PPER', 'PTKA', 'ADJD', 'KOUS', 'PPER', 'ART', 'ADJA', 'NN', 'VVFIN', 'APPR', 'APPR', 'PPOSAT', 'ADJA', 'NN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (8, 26), 'span': (10, 26), 'left siblings': ['VF', 'LK'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		(SIMPX dann organisiere ich das auch)
		(DM ja)
		(SIMPX ich denke dann ist es am sinnvollsten wenn wir die restlichen dinge vertagen bis zu unserem nachsten telefonat)
		[01;31m(SIMPX[00m
			(C das)
			[01;33m(MF[00m (MF wir dann)
			(VC fixieren)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					(C wie)
					(MF
						(NX das)
						(PX [01;33m(PX[00m
							(APPR mit)
							[01;31m(NX[00m
								[01;31m(NX[00m
									(NX den buchungen) [01;33mPX)[00m
									(NX der hotels)[01;31m)[00m
								(KON und)
								(ADVX so weiter)[01;31m)[00m)) [01;33mMF)[00m
					(VC aussehen sollte)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(NF dann)))
Step:UNSET remove
{'subtrees': ['C', 'MF', 'VC', 'NF'], 'family': ['DM', 'DM', 'SIMPX', 'DM', 'SIMPX', 'SIMPX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'ADV', 'VVFIN', 'PPER', 'PDS', 'ADV', 'PTKANT', 'PPER', 'VVFIN', 'ADV', 'VAFIN', 'PPER', 'PTKA', 'ADJD', 'KOUS', 'PPER', 'ART', 'ADJA', 'NN', 'VVFIN', 'APPR', 'APPR', 'PPOSAT', 'ADJA', 'NN', 'KOUS', 'PPER', 'ADV', 'VVFIN', 'KOUS', 'PDS', 'APPR', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ADV', 'VVINF', 'VMFIN', 'ADV'), 'right siblings': ['NF'], 'parent': 'TURN', 'auto preterminal span': (0, 43), 'span': (26, 42), 'left siblings': ['DM', 'DM', 'SIMPX', 'DM', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		(SIMPX dann organisiere ich das auch)
		(DM ja)
		(SIMPX ich denke dann ist es am sinnvollsten wenn wir die restlichen dinge vertagen bis zu unserem nachsten telefonat)
		(C das)
		[01;33m(MF[00m (MF wir dann)
		(VC fixieren)
		[01;31m(NF[00m
			[01;31m(SIMPX[00m
				(C wie)
				(MF
					(NX das)
					(PX [01;33m(PX[00m
						(APPR mit)
						[01;31m(NX[00m
							[01;31m(NX[00m
								(NX den buchungen) [01;33mPX)[00m
								(NX der hotels)[01;31m)[00m
							(KON und)
							(ADVX so weiter)[01;31m)[00m)) [01;33mMF)[00m
				(VC aussehen sollte)[01;31m)[00m[01;31m)[00m
		(NF dann)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['DM', 'DM', 'SIMPX', 'DM', 'SIMPX', 'C', 'MF', 'VC', 'NF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'ADV', 'VVFIN', 'PPER', 'PDS', 'ADV', 'PTKANT', 'PPER', 'VVFIN', 'ADV', 'VAFIN', 'PPER', 'PTKA', 'ADJD', 'KOUS', 'PPER', 'ART', 'ADJA', 'NN', 'VVFIN', 'APPR', 'APPR', 'PPOSAT', 'ADJA', 'NN', 'KOUS', 'PPER', 'ADV', 'VVFIN', 'KOUS', 'PDS', 'APPR', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ADV', 'VVINF', 'VMFIN', 'ADV'), 'right siblings': ['NF'], 'parent': 'TURN', 'auto preterminal span': (0, 43), 'span': (30, 42), 'left siblings': ['DM', 'DM', 'SIMPX', 'DM', 'SIMPX', 'C', 'MF', 'VC'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		(SIMPX dann organisiere ich das auch)
		(DM ja)
		(SIMPX ich denke dann ist es am sinnvollsten wenn wir die restlichen dinge vertagen bis zu unserem nachsten telefonat)
		(C das)
		[01;33m(MF[00m (MF wir dann)
		(VC fixieren)
		[01;31m(SIMPX[00m
			(C wie)
			(MF
				(NX das)
				(PX [01;33m(PX[00m
					(APPR mit)
					[01;31m(NX[00m
						[01;31m(NX[00m
							(NX den buchungen) [01;33mPX)[00m
							(NX der hotels)[01;31m)[00m
						(KON und)
						(ADVX so weiter)[01;31m)[00m)) [01;33mMF)[00m
			(VC aussehen sollte)[01;31m)[00m
		(NF dann)))
Step:UNSET remove
{'subtrees': ['C', 'MF', 'VC'], 'family': ['DM', 'DM', 'SIMPX', 'DM', 'SIMPX', 'C', 'MF', 'VC', 'SIMPX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'ADV', 'VVFIN', 'PPER', 'PDS', 'ADV', 'PTKANT', 'PPER', 'VVFIN', 'ADV', 'VAFIN', 'PPER', 'PTKA', 'ADJD', 'KOUS', 'PPER', 'ART', 'ADJA', 'NN', 'VVFIN', 'APPR', 'APPR', 'PPOSAT', 'ADJA', 'NN', 'KOUS', 'PPER', 'ADV', 'VVFIN', 'KOUS', 'PDS', 'APPR', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ADV', 'VVINF', 'VMFIN', 'ADV'), 'right siblings': ['NF'], 'parent': 'TURN', 'auto preterminal span': (0, 43), 'span': (30, 42), 'left siblings': ['DM', 'DM', 'SIMPX', 'DM', 'SIMPX', 'C', 'MF', 'VC'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		(SIMPX dann organisiere ich das auch)
		(DM ja)
		(SIMPX ich denke dann ist es am sinnvollsten wenn wir die restlichen dinge vertagen bis zu unserem nachsten telefonat)
		(C das)
		[01;36m(MF[00m
			(MF wir dann)
			(VC fixieren)
			(C wie)
			(MF
				(NX das)
				(PX [01;33m(PX[00m
					(APPR mit)
					[01;31m(NX[00m
						[01;31m(NX[00m
							(NX den buchungen) [01;33mPX)[00m
							(NX der hotels)[01;31m)[00m
						(KON und)
						(ADVX so weiter)[01;31m)[00m))[01;36m)[00m
		(VC aussehen sollte)
		(NF dann)))
Step:UNSET add
{'subtrees': ['MF', 'VC', 'C', 'MF'], 'family': ['DM', 'DM', 'SIMPX', 'DM', 'SIMPX', 'C', 'MF', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV', 'VVFIN', 'KOUS', 'PDS', 'APPR', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ADV'), 'right siblings': [(VC (VXINF (VVINF aussehen)) (VXFIN (VMFIN sollte))), (NF (ADVX (ADV dann)))], 'left siblings': [(DM (PTKANT ja)), (DM (ITJ gut)), (SIMPX (VF (ADVX (ADV dann))) (LK (VXFIN (VVFIN organisiere))) (MF (NX (PPER ich)) (NX (PDS das)) (ADVX (ADV auch)))), (DM (PTKANT ja)), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN denke))) (VF (ADVX (ADV dann))) (LK (VXFIN (VAFIN ist))) (MF (NX (PPER es)) (ADJX (PTKA am) (ADJD sinnvollsten))) (NF (SIMPX (C (KOUS wenn)) (MF (NX (PPER wir)) (NX (ART die) (ADJX (ADJA restlichen)) (NN dinge))) (VC (VXFIN (VVFIN vertagen))) (NF (PX (APPR bis) (PX (APPR zu) (NX (PPOSAT unserem) (ADJX (ADJA nachsten)) (NN telefonat)))))))), (C (KOUS das))], 'auto preterminal span': (27, 40), 'span': (27, 40), 'parent': 'TURN', 'label': 'MF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		(SIMPX dann organisiere ich das auch)
		(DM ja)
		(SIMPX ich denke dann ist es am sinnvollsten wenn wir die restlichen dinge vertagen bis zu unserem nachsten telefonat)
		(C das)
		(MF
			(MF wir dann)
			(VC fixieren)
			(C wie)
			(MF
				(NX das)
				(PX [01;33m(PX[00m
					(APPR mit)
					[01;31m(NX[00m
						[01;31m(NX[00m
							(NX den buchungen) [01;33mPX)[00m
							(NX der hotels)[01;31m)[00m
						(KON und)
						(ADVX so weiter)[01;31m)[00m)))
		(VC aussehen sollte)
		(NF dann)))
Step:Co-ordination
{'subtrees': ['NX', 'NX'], 'family': ['NX', 'KON', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ADV'), 'right siblings': ['KON', 'ADVX'], 'parent': 'NX', 'auto preterminal span': (33, 40), 'span': (33, 37), 'left siblings': [], 'label': 'NX', 'classified_type': 'Co-ordination', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		(SIMPX dann organisiere ich das auch)
		(DM ja)
		(SIMPX ich denke dann ist es am sinnvollsten wenn wir die restlichen dinge vertagen bis zu unserem nachsten telefonat)
		(C das)
		(MF
			(MF wir dann)
			(VC fixieren)
			(C wie)
			(MF
				(NX das)
				(PX [01;33m(PX[00m
					(APPR mit)
					[01;31m(NX[00m
						(NX den buchungen) [01;33mPX)[00m
						(NX der hotels)
						(KON und)
						(ADVX so weiter)[01;31m)[00m)))
		(VC aussehen sollte)
		(NF dann)))
Step:NP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'PX', 'NX', 'KON', 'ADVX'], 'mover info': [('NX', (35, 37)), ('KON', (37, 38)), ('ADVX', (38, 40))], 'old_family': ['NX', 'NX', 'KON', 'ADVX'], 'start left siblings': ['NX'], 'auto preterminals': ('PDS', 'APPR', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ADV'), 'start right siblings': [], 'end left siblings': ['NX', 'PX'], 'auto preterminal span': (31, 40), 'adding node already present': False, 'movers': ['NX', 'KON', 'ADVX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'PX'}
(TOP ja gut dann organisiere ich das auch ja ich denke dann ist es am sinnvollsten wenn wir die restlichen dinge vertagen bis zu unserem nachsten telefonat das wir dann fixieren wie das mit den buchungen der hotels und so weiter aussehen sollte dann)

Sentence 400:
3 Initial errors
0 on fringe, 2 iterations
2 Error:UNSET move
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SU[00m
	(TOP
		(TURN
			[01;31m(SU[00m
				(DM
					(ITJ genau))[01;31m)[00m
			[01;31m(SU[00m
				(SIMPX
					(VF dann)
					(LK konnen)
					(MF wir auch die treffpunkte)
					(VC ausmachen))[01;31m)[00m))[01;36m)[00m
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SU', 'SIMPX'], 'mover info': [('SU', (0, 1))], 'old_family': ['SU', 'SU'], 'start left siblings': [], 'auto preterminals': ('ITJ', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ART', 'NN', 'VVINF'), 'start right siblings': ['SU'], 'end left siblings': [], 'auto preterminal span': (0, 8), 'movers': ['SU'], 'old_parent': 'TURN', 'POS confusion': ('ITJ', 'ITJ'), 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			[01;31m(SU[00m
				(DM
					(ITJ genau))[01;31m)[00m
			(SIMPX dann konnen wir auch die treffpunkte ausmachen))))
Step:Unary
{'subtrees': ['DM'], 'family': ['SU', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ART', 'NN', 'VVINF'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 8), 'span': (0, 1), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP genau dann konnen wir auch die treffpunkte ausmachen)

Sentence 401:
10 Initial errors
0 on fringe, 9 iterations
1 Error:Unary
1 Error:Unary
1 Error:Modifier Attachment
1 Error:Modifier Attachment
1 Error:Clause Attachment
2 Error:PP Attachment
1 Error:Unary
1 Error:UNSET remove
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM
				(PTKANT ja))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(NX[00m
				(NX schonen tag)
				[01;33m(PX[00m (ADVX noch)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(PX[00m
				(PX bis zum wiederhoren)
				(ADVX dann)[01;31m)[00m
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					[01;31m(PX[00m
						(APPRART am)
						(NX telefon)[01;31m)[00m[01;31m)[00m [01;33mPX)[00m
				(LK nehme)
				(MF ich)
				(VC an)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(DM
				(PTKANT ja))[01;31m)[00m))
Step:Unary
{'subtrees': ['DM'], 'family': ['SU', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADJA', 'NN', 'ADV', 'APPR', 'APPRART', 'NN', 'ADV', 'APPRART', 'NN', 'VVFIN', 'PPER', 'PTKVZ', 'PTKANT'), 'right siblings': ['SU', 'SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 14), 'span': (0, 1), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		[01;31m(SU[00m
			[01;31m(NX[00m
				(NX schonen tag)
				[01;33m(PX[00m (ADVX noch)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(PX[00m
				(PX bis zum wiederhoren)
				(ADVX dann)[01;31m)[00m
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					[01;31m(PX[00m
						(APPRART am)
						(NX telefon)[01;31m)[00m[01;31m)[00m [01;33mPX)[00m
				(LK nehme)
				(MF ich)
				(VC an)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(DM
				(PTKANT ja))[01;31m)[00m))
Step:Unary
{'subtrees': ['NX'], 'family': ['DM', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADJA', 'NN', 'ADV', 'APPR', 'APPRART', 'NN', 'ADV', 'APPRART', 'NN', 'VVFIN', 'PPER', 'PTKVZ', 'PTKANT'), 'right siblings': ['SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 14), 'span': (1, 4), 'left siblings': ['DM'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		[01;31m(NX[00m
			(NX schonen tag)
			[01;33m(PX[00m (ADVX noch)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(PX[00m
				(PX bis zum wiederhoren)
				(ADVX dann)[01;31m)[00m
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					[01;31m(PX[00m
						(APPRART am)
						(NX telefon)[01;31m)[00m[01;31m)[00m [01;33mPX)[00m
				(LK nehme)
				(MF ich)
				(VC an)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(DM
				(PTKANT ja))[01;31m)[00m))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADVX'], 'family': ['DM', 'NX', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADJA', 'NN', 'ADV', 'APPR', 'APPRART', 'NN', 'ADV', 'APPRART', 'NN', 'VVFIN', 'PPER', 'PTKVZ', 'PTKANT'), 'right siblings': ['SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 14), 'span': (1, 4), 'left siblings': ['DM'], 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(NX schonen tag)
		[01;33m(PX[00m (ADVX noch)
		[01;31m(SU[00m
			[01;31m(PX[00m
				(PX bis zum wiederhoren)
				(ADVX dann)[01;31m)[00m
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					[01;31m(PX[00m
						(APPRART am)
						(NX telefon)[01;31m)[00m[01;31m)[00m [01;33mPX)[00m
				(LK nehme)
				(MF ich)
				(VC an)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(DM
				(PTKANT ja))[01;31m)[00m))
Step:Modifier Attachment
{'subtrees': ['PX', 'ADVX'], 'family': ['PX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'APPRART', 'NN', 'ADV', 'APPRART', 'NN', 'VVFIN', 'PPER', 'PTKVZ'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (4, 13), 'span': (4, 8), 'left siblings': [], 'label': 'PX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(NX schonen tag)
		[01;33m(PX[00m (ADVX noch)
		[01;31m(SU[00m
			(PX bis zum wiederhoren)
			(ADVX dann)
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					[01;31m(PX[00m
						(APPRART am)
						(NX telefon)[01;31m)[00m[01;31m)[00m [01;33mPX)[00m
				(LK nehme)
				(MF ich)
				(VC an)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(DM
				(PTKANT ja))[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['PX', 'ADVX', 'SIMPX'], 'family': ['DM', 'NX', 'ADVX', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADJA', 'NN', 'ADV', 'APPR', 'APPRART', 'NN', 'ADV', 'APPRART', 'NN', 'VVFIN', 'PPER', 'PTKVZ', 'PTKANT'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 14), 'span': (4, 13), 'left siblings': ['DM', 'NX', 'ADVX'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(NX schonen tag)
		[01;33m(PX[00m (ADVX noch)
		(PX bis zum wiederhoren)
		(ADVX dann)
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				[01;31m(PX[00m
					(APPRART am)
					(NX telefon)[01;31m)[00m[01;31m)[00m [01;33mPX)[00m
			(LK nehme)
			(MF ich)
			(VC an)[01;31m)[00m
		[01;31m(SU[00m
			(DM
				(PTKANT ja))[01;31m)[00m))
Step:PP Attachment
{'new_parent': 'PX', 'new_family': ['ADVX', 'PX', 'ADVX', 'APPRART', 'NX'], 'mover info': [('ADVX', (3, 4)), ('PX', (4, 7)), ('ADVX', (7, 8))], 'old_family': ['DM', 'NX', 'ADVX', 'PX', 'ADVX', 'SIMPX', 'SU'], 'start left siblings': ['DM', 'NX'], 'auto preterminals': ('PTKANT', 'ADJA', 'NN', 'ADV', 'APPR', 'APPRART', 'NN', 'ADV', 'APPRART', 'NN', 'VVFIN', 'PPER', 'PTKVZ', 'PTKANT'), 'start right siblings': ['SIMPX', 'SU'], 'end left siblings': [], 'auto preterminal span': (0, 14), 'movers': ['ADVX', 'PX', 'ADVX'], 'old_parent': 'TURN', 'end right siblings': ['APPRART', 'NX'], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(NX schonen tag)
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				(PX
					(ADVX noch)
					(PX bis zum wiederhoren)
					(ADVX dann)
					(APPRART am)
					(NX telefon))[01;31m)[00m
			(LK nehme)
			(MF ich)
			(VC an)[01;31m)[00m
		[01;31m(SU[00m
			(DM
				(PTKANT ja))[01;31m)[00m))
Step:Unary
{'subtrees': ['PX'], 'family': ['VF', 'LK', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'APPR', 'APPRART', 'NN', 'ADV', 'APPRART', 'NN', 'VVFIN', 'PPER', 'PTKVZ'), 'right siblings': ['LK', 'MF', 'VC'], 'parent': 'SIMPX', 'auto preterminal span': (3, 13), 'span': (3, 10), 'left siblings': [], 'label': 'VF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(NX schonen tag)
		[01;31m(SIMPX[00m
			(PX noch bis zum wiederhoren dann am telefon)
			(LK nehme)
			(MF ich)
			(VC an)[01;31m)[00m
		[01;31m(SU[00m
			(DM
				(PTKANT ja))[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['PX', 'LK', 'MF', 'VC'], 'family': ['DM', 'NX', 'SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADJA', 'NN', 'ADV', 'APPR', 'APPRART', 'NN', 'ADV', 'APPRART', 'NN', 'VVFIN', 'PPER', 'PTKVZ', 'PTKANT'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 14), 'span': (3, 13), 'left siblings': ['DM', 'NX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(NX schonen tag)
		(PX noch bis zum wiederhoren dann am telefon)
		(LK nehme)
		(MF ich)
		(VC an)
		[01;31m(SU[00m
			(DM
				(PTKANT ja))[01;31m)[00m))
Step:Unary
{'subtrees': ['DM'], 'family': ['DM', 'NX', 'PX', 'LK', 'MF', 'VC', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADJA', 'NN', 'ADV', 'APPR', 'APPRART', 'NN', 'ADV', 'APPRART', 'NN', 'VVFIN', 'PPER', 'PTKVZ', 'PTKANT'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 14), 'span': (13, 14), 'left siblings': ['DM', 'NX', 'PX', 'LK', 'MF', 'VC'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja schonen tag noch bis zum wiederhoren dann am telefon nehme ich an ja)

Sentence 402:
8 Initial errors
0 on fringe, 4 iterations
3 Error:UNSET move
2 Error:Different label
2 Error:NP Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM also)
			(SIMPX es sieht so aus das der juli eigentlich schon ziemlich voll ist)
			[01;31m(SIMPX[00m [01;33m(SU (SIMPX[00m
				(VF da)
				(LK hatte)
				(MF [01;33m(MF[00m
					(NX ich)
					(ADVX eigentlich)
					(ADVX nur)
					(ADVX noch)
					[01;31m(NX[00m
						(NX den elften und zwolften) [01;33mMF)[00m
						(NX freitag und samstag)[01;31m)[00m)
				(VC anzubieten)[01;31m)[00m[01;31m)[00m
		[01;36m(NF[00m [01;31m(SU[00m
			(NX
				(KON oder)
				(NX den einundzwanzigsten zweiundzwanzigsten))[01;31m)[00m[01;36m)[00m)) [01;33mSIMPX) SU)[00m
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'VC', 'SU'], 'mover info': [('SU', (27, 31))], 'old_family': ['SU', 'SU'], 'start left siblings': ['SU'], 'auto preterminals': ('ADV', 'PPER', 'VVFIN', 'ADV', 'PTKVZ', 'KOUS', 'ART', 'NN', 'ADV', 'ADV', 'ADV', 'ADJD', 'VAFIN', 'ADV', 'VAFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'ART', 'NN', 'KON', 'NN', 'NN', 'KON', 'NN', 'VVIZU', 'KON', 'ART', 'NN', 'NN'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'MF', 'VC'], 'auto preterminal span': (0, 31), 'adding node already present': False, 'movers': ['SU'], 'old_parent': 'TURN', 'added and moved': True, 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'NF'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM also)
			(SIMPX es sieht so aus das der juli eigentlich schon ziemlich voll ist)
			(SU
				(SIMPX
					(VF da)
					(LK hatte)
					(MF [01;33m(MF[00m
						(NX ich)
						(ADVX eigentlich)
						(ADVX nur)
						(ADVX noch)
						[01;31m(NX[00m
							(NX den elften und zwolften) [01;33mMF)[00m
							(NX freitag und samstag)[01;31m)[00m)
					(VC anzubieten)
					[01;36m(NF[00m [01;31m(SU[00m
						(NX
							(KON oder)
							(NX den einundzwanzigsten zweiundzwanzigsten))[01;31m)[00m[01;36m)[00m))[01;31m)[00m))
Step:Different label
{'family': ['VF', 'LK', 'MF', 'VC', 'NF'], 'auto preterminal span': (27, 31), 'span': (27, 31), 'subtrees': ['NX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('KON', 'ART', 'NN', 'NN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('SU', 'NF')}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM also)
			(SIMPX es sieht so aus das der juli eigentlich schon ziemlich voll ist)
			(SU
				(SIMPX
					(VF da)
					(LK hatte)
					(MF [01;33m(MF[00m
						(NX ich)
						(ADVX eigentlich)
						(ADVX nur)
						(ADVX noch)
						[01;31m(NX[00m
							(NX den elften und zwolften) [01;33mMF)[00m
							(NX freitag und samstag)[01;31m)[00m)
					(VC anzubieten)
					(NF oder den einundzwanzigsten zweiundzwanzigsten)))[01;31m)[00m))
Step:NP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'ADVX', 'ADVX', 'ADVX', 'NX', 'NX'], 'mover info': [('NX', (19, 23))], 'old_family': ['NX', 'NX'], 'start left siblings': [], 'auto preterminals': ('PPER', 'ADV', 'ADV', 'ADV', 'ART', 'NN', 'KON', 'NN', 'NN', 'KON', 'NN'), 'start right siblings': ['NX'], 'end left siblings': ['NX', 'ADVX', 'ADVX', 'ADVX'], 'auto preterminal span': (15, 26), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': ['NX'], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'MF'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM also)
			(SIMPX es sieht so aus das der juli eigentlich schon ziemlich voll ist)
			(SU da hatte ich eigentlich nur noch den elften und zwolften freitag und samstag anzubieten oder den einundzwanzigsten zweiundzwanzigsten)[01;31m)[00m))
Step:Unary
{'subtrees': ['DM', 'SIMPX', 'SU'], 'family': ['SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPER', 'VVFIN', 'ADV', 'PTKVZ', 'KOUS', 'ART', 'NN', 'ADV', 'ADV', 'ADV', 'ADJD', 'VAFIN', 'ADV', 'VAFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'ART', 'NN', 'KON', 'NN', 'NN', 'KON', 'NN', 'VVIZU', 'KON', 'ART', 'NN', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 31), 'span': (0, 31), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP also es sieht so aus das der juli eigentlich schon ziemlich voll ist da hatte ich eigentlich nur noch den elften und zwolften freitag und samstag anzubieten oder den einundzwanzigsten zweiundzwanzigsten)

Sentence 403:
5 Initial errors
0 on fringe, 4 iterations
2 Error:PP Attachment
1 Error:Unary
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP [01;33m(SIMPX[00m
	(TURN
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF wie)
				(LK wollen)
				(MF wir denn nach hannover)
				(VC hinkommen)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;36m(NF[00m
				(PX
					(APPR mit)
					(NX dem zug)) [01;33mSIMPX)[00m[01;36m)[00m
			(SIMPX oder wollen sie lieber fliegen)[01;31m)[00m))
Step:PP Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'VC', 'PX'], 'mover info': [('PX', (7, 10))], 'old_family': ['PX', 'SIMPX'], 'start left siblings': [], 'auto preterminals': ('PWAV', 'VMFIN', 'PPER', 'ADV', 'APPR', 'NE', 'VVINF', 'APPR', 'ART', 'NN', 'KON', 'VMFIN', 'PPER', 'ADV', 'VVINF'), 'start right siblings': ['SIMPX'], 'end left siblings': ['VF', 'LK', 'MF', 'VC'], 'auto preterminal span': (0, 15), 'movers': ['PX'], 'old_parent': 'SU', 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			(SIMPX
				(VF wie)
				(LK wollen)
				(MF wir denn nach hannover)
				(VC hinkommen)
				[01;36m(NF[00m
					(PX
						(APPR mit)
						(NX dem zug))[01;36m)[00m)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(KOORD oder)
				(LK wollen)
				(MF sie lieber)
				(VC fliegen))[01;31m)[00m))
Step:Unary
{'subtrees': ['PX'], 'family': ['VF', 'LK', 'MF', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NN'), 'right siblings': [], 'left siblings': [(VF (ADJX (PWAV wie))), (LK (VXFIN (VMFIN wollen))), (MF (NX (PPER wir)) (ADVX (ADV denn)) (PX (APPR nach) (NX (NE hannover)))), (VC (VXINF (VVINF hinkommen)))], 'auto preterminal span': (7, 10), 'span': (7, 10), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(SIMPX
				(VF wie)
				(LK wollen)
				(MF wir denn nach hannover)
				(VC hinkommen)
				(NF mit dem zug))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(KOORD oder)
				(LK wollen)
				(MF sie lieber)
				(VC fliegen))[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PWAV', 'VMFIN', 'PPER', 'ADV', 'APPR', 'NE', 'VVINF', 'APPR', 'ART', 'NN', 'KON', 'VMFIN', 'PPER', 'ADV', 'VVINF'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 15), 'span': (0, 10), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX wie wollen wir denn nach hannover hinkommen mit dem zug)
		[01;31m(SU[00m
			(SIMPX
				(KOORD oder)
				(LK wollen)
				(MF sie lieber)
				(VC fliegen))[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PWAV', 'VMFIN', 'PPER', 'ADV', 'APPR', 'NE', 'VVINF', 'APPR', 'ART', 'NN', 'KON', 'VMFIN', 'PPER', 'ADV', 'VVINF'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 15), 'span': (10, 15), 'left siblings': ['SIMPX'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP wie wollen wir denn nach hannover hinkommen mit dem zug oder wollen sie lieber fliegen)

Sentence 404:
35 Initial errors
0 on fringe, 24 iterations
4 Error:Clause Attachment
3 Error:UNSET move
2 Error:Different label
2 Error:Different label
2 Error:Different label
2 Error:Different label
2 Error:UNSET move
2 Error:UNSET move
1 Error:UNSET add
1 Error:PP Attachment
1 Error:Modifier Attachment
1 Error:Unary
1 Error:Clause Attachment
1 Error:Clause Attachment
1 Error:Unary
1 Error:Unary
1 Error:Single Word Phrase
1 Error:UNSET remove
1 Error:Unary
1 Error:Unary
1 Error:UNSET remove
1 Error:Unary
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM
				(PTKANT ja))[01;31m)[00m
		[01;31m(SU[00m
			(DM ja)
			[01;31m(SIMPX[00m
				(VF dann)
				(LK wurde)
				(MF ich ja)
				(VC vorschlagen)
				(SIMPX
					(VF es)
					(LK gibt)
					[01;36m(MF[00m
						[01;31m(MF[00m
							(NX
								(NN fluge))[01;31m)[00m
						[01;31m(NF[00m
							(PX
								(ADVX schon)
								[01;36m(PX[00m
									(APPR ab)
									(NX sechs uhr morgens)[01;36m)[00m)[01;31m)[00m[01;36m)[00m)
				[01;31m(NF[00m
					(SIMPX
						(C das)
						(MF wir wirklich um sechs uhr)
						(VC losfliegen))[01;31m)[00m[01;31m)[00m
			[01;36m(SIMPX[00m
				[01;31m(SIMPX[00m
					(VF dann)
					(LK sind)
					[01;31m(MF[00m [01;33m(MF (MF[00m
						(NX wir)
						[01;33m(ADJX[00m (PX in zwei stunden)[01;31m)[00m[01;31m)[00m
				[01;31m(ADVX[00m
					(ADV spater)[01;31m)[00m [01;33mADJX) MF)[00m
				(DM also)
				[01;36m(LKM[00m [01;31m(SIMPX[00m
					(LK sind)
					(MF wir um acht in hannover)[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;31m)[00m [01;33mMF)[00m
		[01;36m(SIMPX[00m [01;31m(SU[00m
			[01;31m(SIMPX[00m
				(C bis)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX
						(PPER wir))[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(ADVX
						(ADV dann))[01;31m)[00m [01;33mMF)[00m
				(FKOORD
					(LKM trinken wir noch einen kaffee)
					(KON und)
					[01;36m(LKMVC[00m [01;31m(FKOORD[00m
						(LK konnen)
						[01;31m(FKOORD[00m
							(MVC dann gleich zu unsrer filiale fahren)
							(KON und)
							[01;36m(MVC[00m [01;31m(MVCN[00m
								(MF dort)
								[01;36m(VXINF[00m
									[01;36m(VC[00m
										[01;31m(VC[00m
											(VXINF
												(VVINF anfangen))[01;31m)[00m
										[01;31m(NF[00m
											[01;31m(SIMPX[00m
												[01;31m(VC[00m
													(VXINF
														(PTKZU zu)
														(VVINF arbeiten))[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m)[01;31m)[00m[01;31m)[00m[01;36m)[00m))
Step:Clause Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'PX', 'ADVX', 'DM', 'SIMPX'], 'mover info': [('ADVX', (28, 29)), ('DM', (29, 30)), ('SIMPX', (30, 36))], 'old_family': ['DM', 'SIMPX', 'SIMPX', 'ADVX', 'DM', 'SIMPX'], 'start left siblings': ['DM', 'SIMPX', 'SIMPX'], 'auto preterminals': ('PTKANT', 'ADV', 'VAFIN', 'PPER', 'ADV', 'VVINF', 'PPER', 'VVFIN', 'NN', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'KOUS', 'PPER', 'ADV', 'APPR', 'CARD', 'NN', 'VVFIN', 'ADV', 'VAFIN', 'PPER', 'APPR', 'CARD', 'NN', 'ADV', 'ADV', 'VAFIN', 'PPER', 'APPR', 'CARD', 'APPR', 'NE'), 'start right siblings': [], 'end left siblings': ['NX', 'PX'], 'auto preterminal span': (1, 36), 'movers': ['ADVX', 'DM', 'SIMPX'], 'old_parent': 'SU', 'end right siblings': [], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM
				(PTKANT ja))[01;31m)[00m
		[01;31m(SU[00m
			(DM ja)
			[01;31m(SIMPX[00m
				(VF dann)
				(LK wurde)
				(MF ich ja)
				(VC vorschlagen)
				(SIMPX
					(VF es)
					(LK gibt)
					[01;36m(MF[00m
						[01;31m(MF[00m
							(NX
								(NN fluge))[01;31m)[00m
						[01;31m(NF[00m
							(PX
								(ADVX schon)
								[01;36m(PX[00m
									(APPR ab)
									(NX sechs uhr morgens)[01;36m)[00m)[01;31m)[00m[01;36m)[00m)
				[01;31m(NF[00m
					(SIMPX
						(C das)
						(MF wir wirklich um sechs uhr)
						(VC losfliegen))[01;31m)[00m[01;31m)[00m
			(SIMPX
				(VF dann)
				(LK sind)
				(MF
					[01;36m(MF[00m
						(NX wir)
						[01;36m(ADJX[00m
							(PX in zwei stunden)
							[01;31m(ADVX[00m
								(ADV spater)[01;31m)[00m[01;36m)[00m[01;36m)[00m
					(DM also)
					[01;36m(LKM[00m [01;31m(SIMPX[00m
						(LK sind)
						(MF wir um acht in hannover)[01;31m)[00m[01;36m)[00m))[01;31m)[00m
		[01;36m(SIMPX[00m [01;31m(SU[00m
			[01;31m(SIMPX[00m
				(C bis)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX
						(PPER wir))[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(ADVX
						(ADV dann))[01;31m)[00m [01;33mMF)[00m
				(FKOORD
					(LKM trinken wir noch einen kaffee)
					(KON und)
					[01;36m(LKMVC[00m [01;31m(FKOORD[00m
						(LK konnen)
						[01;31m(FKOORD[00m
							(MVC dann gleich zu unsrer filiale fahren)
							(KON und)
							[01;36m(MVC[00m [01;31m(MVCN[00m
								(MF dort)
								[01;36m(VXINF[00m
									[01;36m(VC[00m
										[01;31m(VC[00m
											(VXINF
												(VVINF anfangen))[01;31m)[00m
										[01;31m(NF[00m
											[01;31m(SIMPX[00m
												[01;31m(VC[00m
													(VXINF
														(PTKZU zu)
														(VVINF arbeiten))[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m)[01;31m)[00m[01;31m)[00m[01;36m)[00m))
Step:UNSET move
{'new_parent': 'VC', 'new_family': ['VC', 'VXINF'], 'mover info': [('VC', (54, 55))], 'old_family': ['MF', 'VC', 'NF'], 'start left siblings': ['MF'], 'auto preterminals': ('ADV', 'VVINF', 'PTKZU', 'VVINF'), 'start right siblings': ['NF'], 'end left siblings': [], 'auto preterminal span': (53, 57), 'adding node already present': False, 'movers': ['VC'], 'old_parent': 'MVCN', 'POS confusion': ('VVINF', 'VVINF'), 'added and moved': True, 'end right siblings': ['VXINF'], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'VXINF'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM
				(PTKANT ja))[01;31m)[00m
		[01;31m(SU[00m
			(DM ja)
			[01;31m(SIMPX[00m
				(VF dann)
				(LK wurde)
				(MF ich ja)
				(VC vorschlagen)
				(SIMPX
					(VF es)
					(LK gibt)
					[01;36m(MF[00m
						[01;31m(MF[00m
							(NX
								(NN fluge))[01;31m)[00m
						[01;31m(NF[00m
							(PX
								(ADVX schon)
								[01;36m(PX[00m
									(APPR ab)
									(NX sechs uhr morgens)[01;36m)[00m)[01;31m)[00m[01;36m)[00m)
				[01;31m(NF[00m
					(SIMPX
						(C das)
						(MF wir wirklich um sechs uhr)
						(VC losfliegen))[01;31m)[00m[01;31m)[00m
			(SIMPX
				(VF dann)
				(LK sind)
				(MF
					[01;36m(MF[00m
						(NX wir)
						[01;36m(ADJX[00m
							(PX in zwei stunden)
							[01;31m(ADVX[00m
								(ADV spater)[01;31m)[00m[01;36m)[00m[01;36m)[00m
					(DM also)
					[01;36m(LKM[00m [01;31m(SIMPX[00m
						(LK sind)
						(MF wir um acht in hannover)[01;31m)[00m[01;36m)[00m))[01;31m)[00m
		[01;36m(SIMPX[00m [01;31m(SU[00m
			[01;31m(SIMPX[00m
				(C bis)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX
						(PPER wir))[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(ADVX
						(ADV dann))[01;31m)[00m [01;33mMF)[00m
				(FKOORD
					(LKM trinken wir noch einen kaffee)
					(KON und)
					[01;36m(LKMVC[00m [01;31m(FKOORD[00m
						(LK konnen)
						[01;31m(FKOORD[00m
							(MVC dann gleich zu unsrer filiale fahren)
							(KON und)
							[01;36m(MVC[00m [01;31m(MVCN[00m
								(MF dort)
								(VXINF
									[01;31m(NF[00m
										[01;31m(SIMPX[00m
											(VC
												[01;31m(VC[00m
													(VXINF
														(VVINF anfangen))[01;31m)[00m
												(VXINF zu arbeiten))[01;31m)[00m[01;31m)[00m)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m)[01;31m)[00m[01;31m)[00m[01;36m)[00m))
Step:Different label
{'family': ['NX', 'PX', 'ADVX', 'DM', 'LKM'], 'auto preterminal span': (30, 36), 'span': (30, 36), 'subtrees': ['LK', 'MF'], 'parent': 'MF', 'over_word': False, 'auto preterminals': ('VAFIN', 'PPER', 'APPR', 'CARD', 'APPR', 'NE'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('SIMPX', 'LKM')}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM
				(PTKANT ja))[01;31m)[00m
		[01;31m(SU[00m
			(DM ja)
			[01;31m(SIMPX[00m
				(VF dann)
				(LK wurde)
				(MF ich ja)
				(VC vorschlagen)
				(SIMPX
					(VF es)
					(LK gibt)
					[01;36m(MF[00m
						[01;31m(MF[00m
							(NX
								(NN fluge))[01;31m)[00m
						[01;31m(NF[00m
							(PX
								(ADVX schon)
								[01;36m(PX[00m
									(APPR ab)
									(NX sechs uhr morgens)[01;36m)[00m)[01;31m)[00m[01;36m)[00m)
				[01;31m(NF[00m
					(SIMPX
						(C das)
						(MF wir wirklich um sechs uhr)
						(VC losfliegen))[01;31m)[00m[01;31m)[00m
			(SIMPX
				(VF dann)
				(LK sind)
				(MF
					[01;36m(MF[00m
						(NX wir)
						[01;36m(ADJX[00m
							(PX in zwei stunden)
							[01;31m(ADVX[00m
								(ADV spater)[01;31m)[00m[01;36m)[00m[01;36m)[00m
					(DM also)
					(LKM sind wir um acht in hannover)))[01;31m)[00m
		[01;36m(SIMPX[00m [01;31m(SU[00m
			[01;31m(SIMPX[00m
				(C bis)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX
						(PPER wir))[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(ADVX
						(ADV dann))[01;31m)[00m [01;33mMF)[00m
				(FKOORD
					(LKM trinken wir noch einen kaffee)
					(KON und)
					[01;36m(LKMVC[00m [01;31m(FKOORD[00m
						(LK konnen)
						[01;31m(FKOORD[00m
							(MVC dann gleich zu unsrer filiale fahren)
							(KON und)
							[01;36m(MVC[00m [01;31m(MVCN[00m
								(MF dort)
								(VXINF
									[01;31m(NF[00m
										[01;31m(SIMPX[00m
											(VC
												[01;31m(VC[00m
													(VXINF
														(VVINF anfangen))[01;31m)[00m
												(VXINF zu arbeiten))[01;31m)[00m[01;31m)[00m)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m)[01;31m)[00m[01;31m)[00m[01;36m)[00m))
Step:Different label
{'family': ['SU', 'SU', 'SIMPX'], 'auto preterminal span': (36, 57), 'span': (36, 57), 'subtrees': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'over_word': False, 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'VVFIN', 'PPER', 'ADV', 'ART', 'NN', 'KON', 'VMFIN', 'ADV', 'ADV', 'APPR', 'PPOSAT', 'NN', 'VVINF', 'KON', 'ADV', 'VVINF', 'PTKZU', 'VVINF'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('SU', 'SIMPX')}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM
				(PTKANT ja))[01;31m)[00m
		[01;31m(SU[00m
			(DM ja)
			[01;31m(SIMPX[00m
				(VF dann)
				(LK wurde)
				(MF ich ja)
				(VC vorschlagen)
				(SIMPX
					(VF es)
					(LK gibt)
					[01;36m(MF[00m
						[01;31m(MF[00m
							(NX
								(NN fluge))[01;31m)[00m
						[01;31m(NF[00m
							(PX
								(ADVX schon)
								[01;36m(PX[00m
									(APPR ab)
									(NX sechs uhr morgens)[01;36m)[00m)[01;31m)[00m[01;36m)[00m)
				[01;31m(NF[00m
					(SIMPX
						(C das)
						(MF wir wirklich um sechs uhr)
						(VC losfliegen))[01;31m)[00m[01;31m)[00m
			(SIMPX
				(VF dann)
				(LK sind)
				(MF
					[01;36m(MF[00m
						(NX wir)
						[01;36m(ADJX[00m
							(PX in zwei stunden)
							[01;31m(ADVX[00m
								(ADV spater)[01;31m)[00m[01;36m)[00m[01;36m)[00m
					(DM also)
					(LKM sind wir um acht in hannover)))[01;31m)[00m
		(SIMPX
			[01;31m(SIMPX[00m
				(C bis)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX
						(PPER wir))[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(ADVX
						(ADV dann))[01;31m)[00m [01;33mMF)[00m
				(FKOORD
					(LKM trinken wir noch einen kaffee)
					(KON und)
					[01;36m(LKMVC[00m [01;31m(FKOORD[00m
						(LK konnen)
						[01;31m(FKOORD[00m
							(MVC dann gleich zu unsrer filiale fahren)
							(KON und)
							[01;36m(MVC[00m [01;31m(MVCN[00m
								(MF dort)
								(VXINF
									[01;31m(NF[00m
										[01;31m(SIMPX[00m
											(VC
												[01;31m(VC[00m
													(VXINF
														(VVINF anfangen))[01;31m)[00m
												(VXINF zu arbeiten))[01;31m)[00m[01;31m)[00m)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m)[01;31m)[00m)))
Step:Different label
{'family': ['LKM', 'KON', 'LKMVC'], 'auto preterminal span': (45, 57), 'span': (45, 57), 'subtrees': ['LK', 'FKOORD'], 'parent': 'FKOORD', 'over_word': False, 'auto preterminals': ('VMFIN', 'ADV', 'ADV', 'APPR', 'PPOSAT', 'NN', 'VVINF', 'KON', 'ADV', 'VVINF', 'PTKZU', 'VVINF'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('FKOORD', 'LKMVC')}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM
				(PTKANT ja))[01;31m)[00m
		[01;31m(SU[00m
			(DM ja)
			[01;31m(SIMPX[00m
				(VF dann)
				(LK wurde)
				(MF ich ja)
				(VC vorschlagen)
				(SIMPX
					(VF es)
					(LK gibt)
					[01;36m(MF[00m
						[01;31m(MF[00m
							(NX
								(NN fluge))[01;31m)[00m
						[01;31m(NF[00m
							(PX
								(ADVX schon)
								[01;36m(PX[00m
									(APPR ab)
									(NX sechs uhr morgens)[01;36m)[00m)[01;31m)[00m[01;36m)[00m)
				[01;31m(NF[00m
					(SIMPX
						(C das)
						(MF wir wirklich um sechs uhr)
						(VC losfliegen))[01;31m)[00m[01;31m)[00m
			(SIMPX
				(VF dann)
				(LK sind)
				(MF
					[01;36m(MF[00m
						(NX wir)
						[01;36m(ADJX[00m
							(PX in zwei stunden)
							[01;31m(ADVX[00m
								(ADV spater)[01;31m)[00m[01;36m)[00m[01;36m)[00m
					(DM also)
					(LKM sind wir um acht in hannover)))[01;31m)[00m
		(SIMPX
			[01;31m(SIMPX[00m
				(C bis)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX
						(PPER wir))[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(ADVX
						(ADV dann))[01;31m)[00m [01;33mMF)[00m
				(FKOORD
					(LKM trinken wir noch einen kaffee)
					(KON und)
					(LKMVC
						(LK konnen)
						[01;31m(FKOORD[00m
							(MVC dann gleich zu unsrer filiale fahren)
							(KON und)
							[01;36m(MVC[00m [01;31m(MVCN[00m
								(MF dort)
								(VXINF
									[01;31m(NF[00m
										[01;31m(SIMPX[00m
											(VC
												[01;31m(VC[00m
													(VXINF
														(VVINF anfangen))[01;31m)[00m
												(VXINF zu arbeiten))[01;31m)[00m[01;31m)[00m)[01;31m)[00m[01;36m)[00m[01;31m)[00m))[01;31m)[00m)))
Step:Different label
{'family': ['MVC', 'KON', 'MVC'], 'auto preterminal span': (53, 57), 'span': (53, 57), 'subtrees': ['MF', 'VXINF'], 'parent': 'FKOORD', 'over_word': False, 'auto preterminals': ('ADV', 'VVINF', 'PTKZU', 'VVINF'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('MVCN', 'MVC')}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM
				(PTKANT ja))[01;31m)[00m
		[01;31m(SU[00m
			(DM ja)
			[01;31m(SIMPX[00m
				(VF dann)
				(LK wurde)
				(MF ich ja)
				(VC vorschlagen)
				(SIMPX
					(VF es)
					(LK gibt)
					[01;36m(MF[00m
						[01;31m(MF[00m
							(NX
								(NN fluge))[01;31m)[00m
						[01;31m(NF[00m
							(PX
								(ADVX schon)
								[01;36m(PX[00m
									(APPR ab)
									(NX sechs uhr morgens)[01;36m)[00m)[01;31m)[00m[01;36m)[00m)
				[01;31m(NF[00m
					(SIMPX
						(C das)
						(MF wir wirklich um sechs uhr)
						(VC losfliegen))[01;31m)[00m[01;31m)[00m
			(SIMPX
				(VF dann)
				(LK sind)
				(MF
					[01;36m(MF[00m
						(NX wir)
						[01;36m(ADJX[00m
							(PX in zwei stunden)
							[01;31m(ADVX[00m
								(ADV spater)[01;31m)[00m[01;36m)[00m[01;36m)[00m
					(DM also)
					(LKM sind wir um acht in hannover)))[01;31m)[00m
		(SIMPX
			[01;31m(SIMPX[00m
				(C bis)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX
						(PPER wir))[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(ADVX
						(ADV dann))[01;31m)[00m [01;33mMF)[00m
				(FKOORD
					(LKM trinken wir noch einen kaffee)
					(KON und)
					(LKMVC
						(LK konnen)
						[01;31m(FKOORD[00m
							(MVC dann gleich zu unsrer filiale fahren)
							(KON und)
							(MVC
								(MF dort)
								(VXINF
									[01;31m(NF[00m
										[01;31m(SIMPX[00m
											(VC
												[01;31m(VC[00m
													(VXINF
														(VVINF anfangen))[01;31m)[00m
												(VXINF zu arbeiten))[01;31m)[00m[01;31m)[00m))[01;31m)[00m))[01;31m)[00m)))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['NX', 'NF'], 'mover info': [('NF', (10, 15))], 'old_family': ['VF', 'LK', 'MF', 'NF'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('PPER', 'VVFIN', 'NN', 'ADV', 'APPR', 'CARD', 'NN', 'ADV'), 'start right siblings': [], 'end left siblings': ['NX'], 'auto preterminal span': (7, 15), 'movers': ['NF'], 'old_parent': 'SIMPX', 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM
				(PTKANT ja))[01;31m)[00m
		[01;31m(SU[00m
			(DM ja)
			[01;31m(SIMPX[00m
				(VF dann)
				(LK wurde)
				(MF ich ja)
				(VC vorschlagen)
				(SIMPX
					(VF es)
					(LK gibt)
					(MF
						(NX fluge)
						[01;31m(NF[00m
							(PX
								(ADVX schon)
								[01;36m(PX[00m
									(APPR ab)
									(NX sechs uhr morgens)[01;36m)[00m)[01;31m)[00m))
				[01;31m(NF[00m
					(SIMPX
						(C das)
						(MF wir wirklich um sechs uhr)
						(VC losfliegen))[01;31m)[00m[01;31m)[00m
			(SIMPX
				(VF dann)
				(LK sind)
				(MF
					[01;36m(MF[00m
						(NX wir)
						[01;36m(ADJX[00m
							(PX in zwei stunden)
							[01;31m(ADVX[00m
								(ADV spater)[01;31m)[00m[01;36m)[00m[01;36m)[00m
					(DM also)
					(LKM sind wir um acht in hannover)))[01;31m)[00m
		(SIMPX
			[01;31m(SIMPX[00m
				(C bis)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX
						(PPER wir))[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(ADVX
						(ADV dann))[01;31m)[00m [01;33mMF)[00m
				(FKOORD
					(LKM trinken wir noch einen kaffee)
					(KON und)
					(LKMVC
						(LK konnen)
						[01;31m(FKOORD[00m
							(MVC dann gleich zu unsrer filiale fahren)
							(KON und)
							(MVC
								(MF dort)
								(VXINF
									[01;31m(NF[00m
										[01;31m(SIMPX[00m
											(VC
												[01;31m(VC[00m
													(VXINF
														(VVINF anfangen))[01;31m)[00m
												(VXINF zu arbeiten))[01;31m)[00m[01;31m)[00m))[01;31m)[00m))[01;31m)[00m)))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['NX', 'VF'], 'mover info': [('VF', (38, 39))], 'old_family': ['VF', 'FKOORD'], 'start left siblings': [], 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'VVFIN', 'PPER', 'ADV', 'ART', 'NN', 'KON', 'VMFIN', 'ADV', 'ADV', 'APPR', 'PPOSAT', 'NN', 'VVINF', 'KON', 'ADV', 'VVINF', 'PTKZU', 'VVINF'), 'start right siblings': ['FKOORD'], 'end left siblings': ['NX'], 'auto preterminal span': (36, 57), 'movers': ['VF'], 'old_parent': 'SIMPX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM
				(PTKANT ja))[01;31m)[00m
		[01;31m(SU[00m
			(DM ja)
			[01;31m(SIMPX[00m
				(VF dann)
				(LK wurde)
				(MF ich ja)
				(VC vorschlagen)
				(SIMPX
					(VF es)
					(LK gibt)
					(MF
						(NX fluge)
						[01;31m(NF[00m
							(PX
								(ADVX schon)
								[01;36m(PX[00m
									(APPR ab)
									(NX sechs uhr morgens)[01;36m)[00m)[01;31m)[00m))
				[01;31m(NF[00m
					(SIMPX
						(C das)
						(MF wir wirklich um sechs uhr)
						(VC losfliegen))[01;31m)[00m[01;31m)[00m
			(SIMPX
				(VF dann)
				(LK sind)
				(MF
					[01;36m(MF[00m
						(NX wir)
						[01;36m(ADJX[00m
							(PX in zwei stunden)
							[01;31m(ADVX[00m
								(ADV spater)[01;31m)[00m[01;36m)[00m[01;36m)[00m
					(DM also)
					(LKM sind wir um acht in hannover)))[01;31m)[00m
		(SIMPX
			[01;31m(SIMPX[00m
				(C bis)
				(MF
					(NX wir)
					[01;31m(VF[00m
						(ADVX
							(ADV dann))[01;31m)[00m)[01;31m)[00m
			[01;31m(SIMPX[00m
				(FKOORD
					(LKM trinken wir noch einen kaffee)
					(KON und)
					(LKMVC
						(LK konnen)
						[01;31m(FKOORD[00m
							(MVC dann gleich zu unsrer filiale fahren)
							(KON und)
							(MVC
								(MF dort)
								(VXINF
									[01;31m(NF[00m
										[01;31m(SIMPX[00m
											(VC
												[01;31m(VC[00m
													(VXINF
														(VVINF anfangen))[01;31m)[00m
												(VXINF zu arbeiten))[01;31m)[00m[01;31m)[00m))[01;31m)[00m))[01;31m)[00m)))
Step:UNSET add
{'subtrees': ['APPR', 'NX'], 'family': ['ADVX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'CARD', 'NN', 'ADV'), 'right siblings': [], 'left siblings': [(ADVX (ADV schon))], 'auto preterminal span': (11, 15), 'span': (11, 15), 'parent': 'PX', 'label': 'PX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM
				(PTKANT ja))[01;31m)[00m
		[01;31m(SU[00m
			(DM ja)
			[01;31m(SIMPX[00m
				(VF dann)
				(LK wurde)
				(MF ich ja)
				(VC vorschlagen)
				(SIMPX
					(VF es)
					(LK gibt)
					(MF
						(NX fluge)
						[01;31m(NF[00m
							(PX
								(ADVX schon)
								(PX ab sechs uhr morgens))[01;31m)[00m))
				[01;31m(NF[00m
					(SIMPX
						(C das)
						(MF wir wirklich um sechs uhr)
						(VC losfliegen))[01;31m)[00m[01;31m)[00m
			(SIMPX
				(VF dann)
				(LK sind)
				(MF
					[01;36m(MF[00m
						(NX wir)
						[01;36m(ADJX[00m
							(PX in zwei stunden)
							[01;31m(ADVX[00m
								(ADV spater)[01;31m)[00m[01;36m)[00m[01;36m)[00m
					(DM also)
					(LKM sind wir um acht in hannover)))[01;31m)[00m
		(SIMPX
			[01;31m(SIMPX[00m
				(C bis)
				(MF
					(NX wir)
					[01;31m(VF[00m
						(ADVX
							(ADV dann))[01;31m)[00m)[01;31m)[00m
			[01;31m(SIMPX[00m
				(FKOORD
					(LKM trinken wir noch einen kaffee)
					(KON und)
					(LKMVC
						(LK konnen)
						[01;31m(FKOORD[00m
							(MVC dann gleich zu unsrer filiale fahren)
							(KON und)
							(MVC
								(MF dort)
								(VXINF
									[01;31m(NF[00m
										[01;31m(SIMPX[00m
											(VC
												[01;31m(VC[00m
													(VXINF
														(VVINF anfangen))[01;31m)[00m
												(VXINF zu arbeiten))[01;31m)[00m[01;31m)[00m))[01;31m)[00m))[01;31m)[00m)))
Step:PP Attachment
{'subtrees': ['NX', 'PX', 'ADVX'], 'family': ['MF', 'DM', 'LKM'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'APPR', 'CARD', 'NN', 'ADV'), 'right siblings': [(DM (ADVX (ADV also))), (LKM (LK (VXFIN (VAFIN sind))) (MF (NX (PPER wir)) (PX (APPR um) (NX (CARD acht))) (PX (APPR in) (NX (NE hannover)))))], 'left siblings': [], 'auto preterminal span': (24, 29), 'span': (24, 29), 'parent': 'MF', 'label': 'MF', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM
				(PTKANT ja))[01;31m)[00m
		[01;31m(SU[00m
			(DM ja)
			[01;31m(SIMPX[00m
				(VF dann)
				(LK wurde)
				(MF ich ja)
				(VC vorschlagen)
				(SIMPX
					(VF es)
					(LK gibt)
					(MF
						(NX fluge)
						[01;31m(NF[00m
							(PX
								(ADVX schon)
								(PX ab sechs uhr morgens))[01;31m)[00m))
				[01;31m(NF[00m
					(SIMPX
						(C das)
						(MF wir wirklich um sechs uhr)
						(VC losfliegen))[01;31m)[00m[01;31m)[00m
			(SIMPX
				(VF dann)
				(LK sind)
				(MF
					(MF
						(NX wir)
						[01;36m(ADJX[00m
							(PX in zwei stunden)
							[01;31m(ADVX[00m
								(ADV spater)[01;31m)[00m[01;36m)[00m)
					(DM also)
					(LKM sind wir um acht in hannover)))[01;31m)[00m
		(SIMPX
			[01;31m(SIMPX[00m
				(C bis)
				(MF
					(NX wir)
					[01;31m(VF[00m
						(ADVX
							(ADV dann))[01;31m)[00m)[01;31m)[00m
			[01;31m(SIMPX[00m
				(FKOORD
					(LKM trinken wir noch einen kaffee)
					(KON und)
					(LKMVC
						(LK konnen)
						[01;31m(FKOORD[00m
							(MVC dann gleich zu unsrer filiale fahren)
							(KON und)
							(MVC
								(MF dort)
								(VXINF
									[01;31m(NF[00m
										[01;31m(SIMPX[00m
											(VC
												[01;31m(VC[00m
													(VXINF
														(VVINF anfangen))[01;31m)[00m
												(VXINF zu arbeiten))[01;31m)[00m[01;31m)[00m))[01;31m)[00m))[01;31m)[00m)))
Step:Modifier Attachment
{'subtrees': ['PX', 'ADVX'], 'family': ['NX', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'CARD', 'NN', 'ADV'), 'right siblings': [], 'left siblings': [(NX (PPER wir))], 'auto preterminal span': (25, 29), 'span': (25, 29), 'parent': 'MF', 'label': 'ADJX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM
				(PTKANT ja))[01;31m)[00m
		[01;31m(SU[00m
			(DM ja)
			[01;31m(SIMPX[00m
				(VF dann)
				(LK wurde)
				(MF ich ja)
				(VC vorschlagen)
				(SIMPX
					(VF es)
					(LK gibt)
					(MF
						(NX fluge)
						[01;31m(NF[00m
							(PX
								(ADVX schon)
								(PX ab sechs uhr morgens))[01;31m)[00m))
				[01;31m(NF[00m
					(SIMPX
						(C das)
						(MF wir wirklich um sechs uhr)
						(VC losfliegen))[01;31m)[00m[01;31m)[00m
			(SIMPX
				(VF dann)
				(LK sind)
				(MF
					(MF
						(NX wir)
						(ADJX
							(PX in zwei stunden)
							[01;31m(ADVX[00m
								(ADV spater)[01;31m)[00m))
					(DM also)
					(LKM sind wir um acht in hannover)))[01;31m)[00m
		(SIMPX
			[01;31m(SIMPX[00m
				(C bis)
				(MF
					(NX wir)
					[01;31m(VF[00m
						(ADVX
							(ADV dann))[01;31m)[00m)[01;31m)[00m
			[01;31m(SIMPX[00m
				(FKOORD
					(LKM trinken wir noch einen kaffee)
					(KON und)
					(LKMVC
						(LK konnen)
						[01;31m(FKOORD[00m
							(MVC dann gleich zu unsrer filiale fahren)
							(KON und)
							(MVC
								(MF dort)
								(VXINF
									[01;31m(NF[00m
										[01;31m(SIMPX[00m
											(VC
												[01;31m(VC[00m
													(VXINF
														(VVINF anfangen))[01;31m)[00m
												(VXINF zu arbeiten))[01;31m)[00m[01;31m)[00m))[01;31m)[00m))[01;31m)[00m)))
Step:Unary
{'subtrees': ['DM'], 'family': ['SU', 'SU', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PTKANT', 'ADV', 'VAFIN', 'PPER', 'ADV', 'VVINF', 'PPER', 'VVFIN', 'NN', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'KOUS', 'PPER', 'ADV', 'APPR', 'CARD', 'NN', 'VVFIN', 'ADV', 'VAFIN', 'PPER', 'APPR', 'CARD', 'NN', 'ADV', 'ADV', 'VAFIN', 'PPER', 'APPR', 'CARD', 'APPR', 'NE', 'KOUS', 'PPER', 'ADV', 'VVFIN', 'PPER', 'ADV', 'ART', 'NN', 'KON', 'VMFIN', 'ADV', 'ADV', 'APPR', 'PPOSAT', 'NN', 'VVINF', 'KON', 'ADV', 'VVINF', 'PTKZU', 'VVINF'), 'right siblings': ['SU', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 57), 'span': (0, 1), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		[01;31m(SU[00m
			(DM ja)
			[01;31m(SIMPX[00m
				(VF dann)
				(LK wurde)
				(MF ich ja)
				(VC vorschlagen)
				(SIMPX
					(VF es)
					(LK gibt)
					(MF
						(NX fluge)
						[01;31m(NF[00m
							(PX
								(ADVX schon)
								(PX ab sechs uhr morgens))[01;31m)[00m))
				[01;31m(NF[00m
					(SIMPX
						(C das)
						(MF wir wirklich um sechs uhr)
						(VC losfliegen))[01;31m)[00m[01;31m)[00m
			(SIMPX
				(VF dann)
				(LK sind)
				(MF
					(MF
						(NX wir)
						(ADJX
							(PX in zwei stunden)
							[01;31m(ADVX[00m
								(ADV spater)[01;31m)[00m))
					(DM also)
					(LKM sind wir um acht in hannover)))[01;31m)[00m
		(SIMPX
			[01;31m(SIMPX[00m
				(C bis)
				(MF
					(NX wir)
					[01;31m(VF[00m
						(ADVX
							(ADV dann))[01;31m)[00m)[01;31m)[00m
			[01;31m(SIMPX[00m
				(FKOORD
					(LKM trinken wir noch einen kaffee)
					(KON und)
					(LKMVC
						(LK konnen)
						[01;31m(FKOORD[00m
							(MVC dann gleich zu unsrer filiale fahren)
							(KON und)
							(MVC
								(MF dort)
								(VXINF
									[01;31m(NF[00m
										[01;31m(SIMPX[00m
											(VC
												[01;31m(VC[00m
													(VXINF
														(VVINF anfangen))[01;31m)[00m
												(VXINF zu arbeiten))[01;31m)[00m[01;31m)[00m))[01;31m)[00m))[01;31m)[00m)))
Step:Clause Attachment
{'subtrees': ['DM', 'SIMPX', 'SIMPX'], 'family': ['DM', 'SU', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PTKANT', 'ADV', 'VAFIN', 'PPER', 'ADV', 'VVINF', 'PPER', 'VVFIN', 'NN', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'KOUS', 'PPER', 'ADV', 'APPR', 'CARD', 'NN', 'VVFIN', 'ADV', 'VAFIN', 'PPER', 'APPR', 'CARD', 'NN', 'ADV', 'ADV', 'VAFIN', 'PPER', 'APPR', 'CARD', 'APPR', 'NE', 'KOUS', 'PPER', 'ADV', 'VVFIN', 'PPER', 'ADV', 'ART', 'NN', 'KON', 'VMFIN', 'ADV', 'ADV', 'APPR', 'PPOSAT', 'NN', 'VVINF', 'KON', 'ADV', 'VVINF', 'PTKZU', 'VVINF'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 57), 'span': (1, 36), 'left siblings': ['DM'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM ja)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK wurde)
			(MF ich ja)
			(VC vorschlagen)
			(SIMPX
				(VF es)
				(LK gibt)
				(MF
					(NX fluge)
					[01;31m(NF[00m
						(PX
							(ADVX schon)
							(PX ab sechs uhr morgens))[01;31m)[00m))
			[01;31m(NF[00m
				(SIMPX
					(C das)
					(MF wir wirklich um sechs uhr)
					(VC losfliegen))[01;31m)[00m[01;31m)[00m
		(SIMPX
			(VF dann)
			(LK sind)
			(MF
				(MF
					(NX wir)
					(ADJX
						(PX in zwei stunden)
						[01;31m(ADVX[00m
							(ADV spater)[01;31m)[00m))
				(DM also)
				(LKM sind wir um acht in hannover)))
		(SIMPX
			[01;31m(SIMPX[00m
				(C bis)
				(MF
					(NX wir)
					[01;31m(VF[00m
						(ADVX
							(ADV dann))[01;31m)[00m)[01;31m)[00m
			[01;31m(SIMPX[00m
				(FKOORD
					(LKM trinken wir noch einen kaffee)
					(KON und)
					(LKMVC
						(LK konnen)
						[01;31m(FKOORD[00m
							(MVC dann gleich zu unsrer filiale fahren)
							(KON und)
							(MVC
								(MF dort)
								(VXINF
									[01;31m(NF[00m
										[01;31m(SIMPX[00m
											(VC
												[01;31m(VC[00m
													(VXINF
														(VVINF anfangen))[01;31m)[00m
												(VXINF zu arbeiten))[01;31m)[00m[01;31m)[00m))[01;31m)[00m))[01;31m)[00m)))
Step:Clause Attachment
{'subtrees': ['VF', 'LK', 'MF', 'VC', 'SIMPX', 'NF'], 'family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PTKANT', 'ADV', 'VAFIN', 'PPER', 'ADV', 'VVINF', 'PPER', 'VVFIN', 'NN', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'KOUS', 'PPER', 'ADV', 'APPR', 'CARD', 'NN', 'VVFIN', 'ADV', 'VAFIN', 'PPER', 'APPR', 'CARD', 'NN', 'ADV', 'ADV', 'VAFIN', 'PPER', 'APPR', 'CARD', 'APPR', 'NE', 'KOUS', 'PPER', 'ADV', 'VVFIN', 'PPER', 'ADV', 'ART', 'NN', 'KON', 'VMFIN', 'ADV', 'ADV', 'APPR', 'PPOSAT', 'NN', 'VVINF', 'KON', 'ADV', 'VVINF', 'PTKZU', 'VVINF'), 'right siblings': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 57), 'span': (2, 22), 'left siblings': ['DM', 'DM'], 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM ja)
		(VF dann)
		(LK wurde)
		(MF ich ja)
		(VC vorschlagen)
		(SIMPX
			(VF es)
			(LK gibt)
			(MF
				(NX fluge)
				[01;31m(NF[00m
					(PX
						(ADVX schon)
						(PX ab sechs uhr morgens))[01;31m)[00m))
		[01;31m(NF[00m
			(SIMPX
				(C das)
				(MF wir wirklich um sechs uhr)
				(VC losfliegen))[01;31m)[00m
		(SIMPX
			(VF dann)
			(LK sind)
			(MF
				(MF
					(NX wir)
					(ADJX
						(PX in zwei stunden)
						[01;31m(ADVX[00m
							(ADV spater)[01;31m)[00m))
				(DM also)
				(LKM sind wir um acht in hannover)))
		(SIMPX
			[01;31m(SIMPX[00m
				(C bis)
				(MF
					(NX wir)
					[01;31m(VF[00m
						(ADVX
							(ADV dann))[01;31m)[00m)[01;31m)[00m
			[01;31m(SIMPX[00m
				(FKOORD
					(LKM trinken wir noch einen kaffee)
					(KON und)
					(LKMVC
						(LK konnen)
						[01;31m(FKOORD[00m
							(MVC dann gleich zu unsrer filiale fahren)
							(KON und)
							(MVC
								(MF dort)
								(VXINF
									[01;31m(NF[00m
										[01;31m(SIMPX[00m
											(VC
												[01;31m(VC[00m
													(VXINF
														(VVINF anfangen))[01;31m)[00m
												(VXINF zu arbeiten))[01;31m)[00m[01;31m)[00m))[01;31m)[00m))[01;31m)[00m)))
Step:Unary
{'subtrees': ['PX'], 'family': ['NX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'ADV', 'APPR', 'CARD', 'NN', 'ADV'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (9, 15), 'span': (10, 15), 'left siblings': ['NX'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM ja)
		(VF dann)
		(LK wurde)
		(MF ich ja)
		(VC vorschlagen)
		(SIMPX es gibt fluge schon ab sechs uhr morgens)
		[01;31m(NF[00m
			(SIMPX
				(C das)
				(MF wir wirklich um sechs uhr)
				(VC losfliegen))[01;31m)[00m
		(SIMPX
			(VF dann)
			(LK sind)
			(MF
				(MF
					(NX wir)
					(ADJX
						(PX in zwei stunden)
						[01;31m(ADVX[00m
							(ADV spater)[01;31m)[00m))
				(DM also)
				(LKM sind wir um acht in hannover)))
		(SIMPX
			[01;31m(SIMPX[00m
				(C bis)
				(MF
					(NX wir)
					[01;31m(VF[00m
						(ADVX
							(ADV dann))[01;31m)[00m)[01;31m)[00m
			[01;31m(SIMPX[00m
				(FKOORD
					(LKM trinken wir noch einen kaffee)
					(KON und)
					(LKMVC
						(LK konnen)
						[01;31m(FKOORD[00m
							(MVC dann gleich zu unsrer filiale fahren)
							(KON und)
							(MVC
								(MF dort)
								(VXINF
									[01;31m(NF[00m
										[01;31m(SIMPX[00m
											(VC
												[01;31m(VC[00m
													(VXINF
														(VVINF anfangen))[01;31m)[00m
												(VXINF zu arbeiten))[01;31m)[00m[01;31m)[00m))[01;31m)[00m))[01;31m)[00m)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['DM', 'DM', 'VF', 'LK', 'MF', 'VC', 'SIMPX', 'NF', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PTKANT', 'ADV', 'VAFIN', 'PPER', 'ADV', 'VVINF', 'PPER', 'VVFIN', 'NN', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'KOUS', 'PPER', 'ADV', 'APPR', 'CARD', 'NN', 'VVFIN', 'ADV', 'VAFIN', 'PPER', 'APPR', 'CARD', 'NN', 'ADV', 'ADV', 'VAFIN', 'PPER', 'APPR', 'CARD', 'APPR', 'NE', 'KOUS', 'PPER', 'ADV', 'VVFIN', 'PPER', 'ADV', 'ART', 'NN', 'KON', 'VMFIN', 'ADV', 'ADV', 'APPR', 'PPOSAT', 'NN', 'VVINF', 'KON', 'ADV', 'VVINF', 'PTKZU', 'VVINF'), 'right siblings': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 57), 'span': (15, 22), 'left siblings': ['DM', 'DM', 'VF', 'LK', 'MF', 'VC', 'SIMPX'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM ja)
		(VF dann)
		(LK wurde)
		(MF ich ja)
		(VC vorschlagen)
		(SIMPX es gibt fluge schon ab sechs uhr morgens)
		(SIMPX das wir wirklich um sechs uhr losfliegen)
		(SIMPX
			(VF dann)
			(LK sind)
			(MF
				(MF
					(NX wir)
					(ADJX
						(PX in zwei stunden)
						[01;31m(ADVX[00m
							(ADV spater)[01;31m)[00m))
				(DM also)
				(LKM sind wir um acht in hannover)))
		(SIMPX
			[01;31m(SIMPX[00m
				(C bis)
				(MF
					(NX wir)
					[01;31m(VF[00m
						(ADVX
							(ADV dann))[01;31m)[00m)[01;31m)[00m
			[01;31m(SIMPX[00m
				(FKOORD
					(LKM trinken wir noch einen kaffee)
					(KON und)
					(LKMVC
						(LK konnen)
						[01;31m(FKOORD[00m
							(MVC dann gleich zu unsrer filiale fahren)
							(KON und)
							(MVC
								(MF dort)
								(VXINF
									[01;31m(NF[00m
										[01;31m(SIMPX[00m
											(VC
												[01;31m(VC[00m
													(VXINF
														(VVINF anfangen))[01;31m)[00m
												(VXINF zu arbeiten))[01;31m)[00m[01;31m)[00m))[01;31m)[00m))[01;31m)[00m)))
Step:Single Word Phrase
{'subtrees': ['ADV'], 'family': ['PX', 'ADVX'], 'over_word': True, 'over words': True, 'auto preterminals': ('APPR', 'CARD', 'NN', 'ADV'), 'right siblings': [], 'parent': 'ADJX', 'auto preterminal span': (25, 29), 'span': (28, 29), 'left siblings': ['PX'], 'label': 'ADVX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM ja)
		(VF dann)
		(LK wurde)
		(MF ich ja)
		(VC vorschlagen)
		(SIMPX es gibt fluge schon ab sechs uhr morgens)
		(SIMPX das wir wirklich um sechs uhr losfliegen)
		(SIMPX dann sind wir in zwei stunden spater also sind wir um acht in hannover)
		(SIMPX
			[01;31m(SIMPX[00m
				(C bis)
				(MF
					(NX wir)
					[01;31m(VF[00m
						(ADVX
							(ADV dann))[01;31m)[00m)[01;31m)[00m
			[01;31m(SIMPX[00m
				(FKOORD
					(LKM trinken wir noch einen kaffee)
					(KON und)
					(LKMVC
						(LK konnen)
						[01;31m(FKOORD[00m
							(MVC dann gleich zu unsrer filiale fahren)
							(KON und)
							(MVC
								(MF dort)
								(VXINF
									[01;31m(NF[00m
										[01;31m(SIMPX[00m
											(VC
												[01;31m(VC[00m
													(VXINF
														(VVINF anfangen))[01;31m)[00m
												(VXINF zu arbeiten))[01;31m)[00m[01;31m)[00m))[01;31m)[00m))[01;31m)[00m)))
Step:UNSET remove
{'subtrees': ['C', 'MF'], 'family': ['SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'VVFIN', 'PPER', 'ADV', 'ART', 'NN', 'KON', 'VMFIN', 'ADV', 'ADV', 'APPR', 'PPOSAT', 'NN', 'VVINF', 'KON', 'ADV', 'VVINF', 'PTKZU', 'VVINF'), 'right siblings': ['SIMPX'], 'parent': 'SIMPX', 'auto preterminal span': (36, 57), 'span': (36, 39), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM ja)
		(VF dann)
		(LK wurde)
		(MF ich ja)
		(VC vorschlagen)
		(SIMPX es gibt fluge schon ab sechs uhr morgens)
		(SIMPX das wir wirklich um sechs uhr losfliegen)
		(SIMPX dann sind wir in zwei stunden spater also sind wir um acht in hannover)
		(SIMPX
			(C bis)
			(MF
				(NX wir)
				[01;31m(VF[00m
					(ADVX
						(ADV dann))[01;31m)[00m)
			[01;31m(SIMPX[00m
				(FKOORD
					(LKM trinken wir noch einen kaffee)
					(KON und)
					(LKMVC
						(LK konnen)
						[01;31m(FKOORD[00m
							(MVC dann gleich zu unsrer filiale fahren)
							(KON und)
							(MVC
								(MF dort)
								(VXINF
									[01;31m(NF[00m
										[01;31m(SIMPX[00m
											(VC
												[01;31m(VC[00m
													(VXINF
														(VVINF anfangen))[01;31m)[00m
												(VXINF zu arbeiten))[01;31m)[00m[01;31m)[00m))[01;31m)[00m))[01;31m)[00m)))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['NX', 'VF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (37, 39), 'span': (38, 39), 'left siblings': ['NX'], 'label': 'VF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM ja)
		(VF dann)
		(LK wurde)
		(MF ich ja)
		(VC vorschlagen)
		(SIMPX es gibt fluge schon ab sechs uhr morgens)
		(SIMPX das wir wirklich um sechs uhr losfliegen)
		(SIMPX dann sind wir in zwei stunden spater also sind wir um acht in hannover)
		(SIMPX
			(C bis)
			(MF wir dann)
			[01;31m(SIMPX[00m
				(FKOORD
					(LKM trinken wir noch einen kaffee)
					(KON und)
					(LKMVC
						(LK konnen)
						[01;31m(FKOORD[00m
							(MVC dann gleich zu unsrer filiale fahren)
							(KON und)
							(MVC
								(MF dort)
								(VXINF
									[01;31m(NF[00m
										[01;31m(SIMPX[00m
											(VC
												[01;31m(VC[00m
													(VXINF
														(VVINF anfangen))[01;31m)[00m
												(VXINF zu arbeiten))[01;31m)[00m[01;31m)[00m))[01;31m)[00m))[01;31m)[00m)))
Step:Unary
{'subtrees': ['FKOORD'], 'family': ['C', 'MF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'VVFIN', 'PPER', 'ADV', 'ART', 'NN', 'KON', 'VMFIN', 'ADV', 'ADV', 'APPR', 'PPOSAT', 'NN', 'VVINF', 'KON', 'ADV', 'VVINF', 'PTKZU', 'VVINF'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (36, 57), 'span': (39, 57), 'left siblings': ['C', 'MF'], 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM ja)
		(VF dann)
		(LK wurde)
		(MF ich ja)
		(VC vorschlagen)
		(SIMPX es gibt fluge schon ab sechs uhr morgens)
		(SIMPX das wir wirklich um sechs uhr losfliegen)
		(SIMPX dann sind wir in zwei stunden spater also sind wir um acht in hannover)
		(SIMPX
			(C bis)
			(MF wir dann)
			(FKOORD
				(LKM trinken wir noch einen kaffee)
				(KON und)
				(LKMVC
					(LK konnen)
					[01;31m(FKOORD[00m
						(MVC dann gleich zu unsrer filiale fahren)
						(KON und)
						(MVC
							(MF dort)
							(VXINF
								[01;31m(NF[00m
									[01;31m(SIMPX[00m
										(VC
											[01;31m(VC[00m
												(VXINF
													(VVINF anfangen))[01;31m)[00m
											(VXINF zu arbeiten))[01;31m)[00m[01;31m)[00m))[01;31m)[00m)))))
Step:UNSET remove
{'subtrees': ['MVC', 'KON', 'MVC'], 'family': ['LK', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('VMFIN', 'ADV', 'ADV', 'APPR', 'PPOSAT', 'NN', 'VVINF', 'KON', 'ADV', 'VVINF', 'PTKZU', 'VVINF'), 'right siblings': [], 'parent': 'LKMVC', 'auto preterminal span': (45, 57), 'span': (46, 57), 'left siblings': ['LK'], 'label': 'FKOORD', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM ja)
		(VF dann)
		(LK wurde)
		(MF ich ja)
		(VC vorschlagen)
		(SIMPX es gibt fluge schon ab sechs uhr morgens)
		(SIMPX das wir wirklich um sechs uhr losfliegen)
		(SIMPX dann sind wir in zwei stunden spater also sind wir um acht in hannover)
		(SIMPX
			(C bis)
			(MF wir dann)
			(FKOORD
				(LKM trinken wir noch einen kaffee)
				(KON und)
				(LKMVC
					(LK konnen)
					(MVC dann gleich zu unsrer filiale fahren)
					(KON und)
					(MVC
						(MF dort)
						(VXINF
							[01;31m(NF[00m
								[01;31m(SIMPX[00m
									(VC
										[01;31m(VC[00m
											(VXINF
												(VVINF anfangen))[01;31m)[00m
										(VXINF zu arbeiten))[01;31m)[00m[01;31m)[00m)))))))
Step:Unary
{'subtrees': ['VXINF'], 'family': ['VC', 'VXINF'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVINF', 'PTKZU', 'VVINF'), 'right siblings': ['VXINF'], 'parent': 'VC', 'auto preterminal span': (54, 57), 'span': (54, 55), 'left siblings': [], 'label': 'VC', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM ja)
		(VF dann)
		(LK wurde)
		(MF ich ja)
		(VC vorschlagen)
		(SIMPX es gibt fluge schon ab sechs uhr morgens)
		(SIMPX das wir wirklich um sechs uhr losfliegen)
		(SIMPX dann sind wir in zwei stunden spater also sind wir um acht in hannover)
		(SIMPX
			(C bis)
			(MF wir dann)
			(FKOORD
				(LKM trinken wir noch einen kaffee)
				(KON und)
				(LKMVC
					(LK konnen)
					(MVC dann gleich zu unsrer filiale fahren)
					(KON und)
					(MVC
						(MF dort)
						(VXINF
							[01;31m(NF[00m
								[01;31m(SIMPX[00m
									(VC
										(VXINF anfangen)
										(VXINF zu arbeiten))[01;31m)[00m[01;31m)[00m)))))))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVINF', 'PTKZU', 'VVINF'), 'right siblings': [], 'parent': 'VXINF', 'auto preterminal span': (54, 57), 'span': (54, 57), 'left siblings': [], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM ja)
		(VF dann)
		(LK wurde)
		(MF ich ja)
		(VC vorschlagen)
		(SIMPX es gibt fluge schon ab sechs uhr morgens)
		(SIMPX das wir wirklich um sechs uhr losfliegen)
		(SIMPX dann sind wir in zwei stunden spater also sind wir um acht in hannover)
		(SIMPX
			(C bis)
			(MF wir dann)
			(FKOORD
				(LKM trinken wir noch einen kaffee)
				(KON und)
				(LKMVC
					(LK konnen)
					(MVC dann gleich zu unsrer filiale fahren)
					(KON und)
					(MVC
						(MF dort)
						(VXINF
							[01;31m(SIMPX[00m
								(VC
									(VXINF anfangen)
									(VXINF zu arbeiten))[01;31m)[00m)))))))
Step:Unary
{'subtrees': ['VC'], 'family': ['SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVINF', 'PTKZU', 'VVINF'), 'right siblings': [], 'parent': 'VXINF', 'auto preterminal span': (54, 57), 'span': (54, 57), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja ja dann wurde ich ja vorschlagen es gibt fluge schon ab sechs uhr morgens das wir wirklich um sechs uhr losfliegen dann sind wir in zwei stunden spater also sind wir um acht in hannover bis wir dann trinken wir noch einen kaffee und konnen dann gleich zu unsrer filiale fahren und dort anfangen zu arbeiten)

Sentence 405:
18 Initial errors
0 on fringe, 9 iterations
5 Error:UNSET move
4 Error:Clause Attachment
2 Error:Different label
2 Error:Clause Attachment
1 Error:Clause Attachment
1 Error:Unary
1 Error:UNSET remove
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP [01;33m(SU[00m
	(TURN
		[01;31m(SU[00m
			(DM also)
			[01;36m(SIMPX[00m
				[01;31m(SIMPX[00m [01;33m(SIMPX[00m
					(VF ich)
					(LK wurde)
					[01;31m(MF[00m [01;33m(MF[00m
						(ADVX
							(ADVX ganz)
							(ADV gerne))[01;31m)[00m[01;31m)[00m
				[01;31m(SIMPX[00m
					(C wenn)
					[01;31m(MF[00m
						(PX
							(APPR nach)
							(NX so einem harten arbeitstag))[01;31m)[00m[01;31m)[00m [01;33mMF)[00m[01;36m)[00m
			[01;31m(SIMPX[00m
				[01;31m(LV[00m
					(SIMPX
						(C wenn)
						(MF es da eine sauna)
						(VC gabe))[01;31m)[00m [01;33mSIMPX) SU)[00m
				[01;33m(SU (SIMPX[00m (VF ich)
				(LK wurde)
				(MF ganz gern in die sauna)
				(VC gehen)
				[01;36m(MF[00m [01;31m(NF[00m [01;33m(NF[00m
					(ADVX dann)
					(ADVX kurz)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
		[01;36m(NF[00m [01;31m(SU[00m
			(SIMPX
				(C das)
				(MF ich mich ein bischen)
				(VC erholen kann))[01;31m)[00m[01;36m)[00m)) [01;33mNF) SIMPX) SU)[00m
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['VF', 'LK', 'MF', 'VC', 'NF', 'SIMPX'], 'mover info': [('VF', (17, 18)), ('LK', (18, 19)), ('MF', (19, 24)), ('VC', (24, 25)), ('NF', (25, 27))], 'old_family': ['LV', 'VF', 'LK', 'MF', 'VC', 'NF'], 'start left siblings': ['LV'], 'auto preterminals': ('ADV', 'PPER', 'VAFIN', 'ADV', 'ADV', 'KOUS', 'APPR', 'ADV', 'ART', 'ADJA', 'NN', 'KOUS', 'PPER', 'ADV', 'ART', 'NN', 'VVFIN', 'PPER', 'VAFIN', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'VVINF', 'ADV', 'ADV', 'KOUS', 'PPER', 'PRF', 'ART', 'PIS', 'VVINF', 'VMFIN'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 34), 'adding node already present': False, 'movers': ['VF', 'LK', 'MF', 'VC', 'NF'], 'old_parent': 'SIMPX', 'added and moved': True, 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'NF'}
(TOP
	(TURN
		(SU
			(DM also)
			[01;36m(SIMPX[00m
				[01;36m(SIMPX[00m
					[01;31m(SIMPX[00m
						(VF ich)
						(LK wurde)
						[01;31m(MF[00m [01;33m(MF[00m
							(ADVX
								(ADVX ganz)
								(ADV gerne))[01;31m)[00m[01;31m)[00m
					[01;31m(SIMPX[00m
						(C wenn)
						[01;31m(MF[00m
							(PX
								(APPR nach)
								(NX so einem harten arbeitstag))[01;31m)[00m[01;31m)[00m [01;33mMF)[00m[01;36m)[00m
				[01;31m(SIMPX[00m
					[01;31m(LV[00m
						(SIMPX
							(C wenn)
							(MF es da eine sauna)
							(VC gabe))[01;31m)[00m[01;31m)[00m[01;36m)[00m)
		(SIMPX
			(SU
				(VF ich)
				(LK wurde)
				(MF ganz gern in die sauna)
				(VC gehen)
				[01;36m(NF[00m
					[01;36m(MF[00m [01;31m(NF[00m
						(ADVX dann)
						(ADVX kurz)[01;31m)[00m[01;36m)[00m
					[01;36m(NF[00m
						(SIMPX
							(C das)
							(MF ich mich ein bischen)
							(VC erholen kann))[01;36m)[00m[01;36m)[00m))))
Step:Clause Attachment
{'new_parent': 'MF', 'new_family': ['ADVX', 'SIMPX'], 'mover info': [('SIMPX', (5, 11))], 'old_family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'start left siblings': ['DM', 'SIMPX'], 'auto preterminals': ('ADV', 'PPER', 'VAFIN', 'ADV', 'ADV', 'KOUS', 'APPR', 'ADV', 'ART', 'ADJA', 'NN', 'KOUS', 'PPER', 'ADV', 'ART', 'NN', 'VVFIN'), 'start right siblings': ['SIMPX'], 'end left siblings': ['ADVX'], 'auto preterminal span': (0, 17), 'movers': ['SIMPX'], 'old_parent': 'SU', 'end right siblings': [], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU
			(DM also)
			[01;36m(SIMPX[00m
				(SIMPX
					(VF ich)
					(LK wurde)
					(MF
						(ADVX ganz gerne)
						[01;31m(SIMPX[00m
							(C wenn)
							[01;31m(MF[00m
								(PX
									(APPR nach)
									(NX so einem harten arbeitstag))[01;31m)[00m[01;31m)[00m))
				[01;31m(SIMPX[00m
					[01;31m(LV[00m
						(SIMPX
							(C wenn)
							(MF es da eine sauna)
							(VC gabe))[01;31m)[00m[01;31m)[00m[01;36m)[00m)
		(SIMPX
			(SU
				(VF ich)
				(LK wurde)
				(MF ganz gern in die sauna)
				(VC gehen)
				[01;36m(NF[00m
					[01;36m(MF[00m [01;31m(NF[00m
						(ADVX dann)
						(ADVX kurz)[01;31m)[00m[01;36m)[00m
					[01;36m(NF[00m
						(SIMPX
							(C das)
							(MF ich mich ein bischen)
							(VC erholen kann))[01;36m)[00m[01;36m)[00m))))
Step:Different label
{'family': ['VF', 'LK', 'MF', 'VC', 'MF', 'SIMPX'], 'auto preterminal span': (25, 27), 'span': (25, 27), 'subtrees': ['ADVX', 'ADVX'], 'parent': 'SU', 'over_word': False, 'auto preterminals': ('ADV', 'ADV'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('NF', 'MF')}
(TOP
	(TURN
		(SU
			(DM also)
			[01;36m(SIMPX[00m
				(SIMPX
					(VF ich)
					(LK wurde)
					(MF
						(ADVX ganz gerne)
						[01;31m(SIMPX[00m
							(C wenn)
							[01;31m(MF[00m
								(PX
									(APPR nach)
									(NX so einem harten arbeitstag))[01;31m)[00m[01;31m)[00m))
				[01;31m(SIMPX[00m
					[01;31m(LV[00m
						(SIMPX
							(C wenn)
							(MF es da eine sauna)
							(VC gabe))[01;31m)[00m[01;31m)[00m[01;36m)[00m)
		(SIMPX
			(SU
				(VF ich)
				(LK wurde)
				(MF ganz gern in die sauna)
				(VC gehen)
				[01;36m(NF[00m
					(MF dann kurz)
					[01;36m(NF[00m
						(SIMPX
							(C das)
							(MF ich mich ein bischen)
							(VC erholen kann))[01;36m)[00m[01;36m)[00m))))
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['SIMPX', 'LV'], 'mover info': [('SIMPX', (1, 11))], 'old_family': ['DM', 'SIMPX', 'SIMPX'], 'start left siblings': ['DM'], 'auto preterminals': ('ADV', 'PPER', 'VAFIN', 'ADV', 'ADV', 'KOUS', 'APPR', 'ADV', 'ART', 'ADJA', 'NN', 'KOUS', 'PPER', 'ADV', 'ART', 'NN', 'VVFIN'), 'start right siblings': ['SIMPX'], 'end left siblings': [], 'auto preterminal span': (0, 17), 'movers': ['SIMPX'], 'old_parent': 'SU', 'end right siblings': ['LV'], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU
			(DM also)
			(SIMPX
				(SIMPX
					(VF ich)
					(LK wurde)
					(MF
						(ADVX ganz gerne)
						[01;31m(SIMPX[00m
							(C wenn)
							[01;31m(MF[00m
								(PX
									(APPR nach)
									(NX so einem harten arbeitstag))[01;31m)[00m[01;31m)[00m))
				[01;31m(LV[00m
					(SIMPX
						(C wenn)
						(MF es da eine sauna)
						(VC gabe))[01;31m)[00m))
		(SIMPX
			(SU
				(VF ich)
				(LK wurde)
				(MF ganz gern in die sauna)
				(VC gehen)
				[01;36m(NF[00m
					(MF dann kurz)
					[01;36m(NF[00m
						(SIMPX
							(C das)
							(MF ich mich ein bischen)
							(VC erholen kann))[01;36m)[00m[01;36m)[00m))))
Step:Clause Attachment
{'subtrees': ['MF', 'SIMPX'], 'family': ['VF', 'LK', 'MF', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'KOUS', 'PPER', 'PRF', 'ART', 'PIS', 'VVINF', 'VMFIN'), 'right siblings': [], 'left siblings': [(VF (NX (PPER ich))), (LK (VXFIN (VAFIN wurde))), (MF (ADVX (ADVX (ADV ganz)) (ADV gern)) (PX (APPR in) (NX (ART die) (NN sauna)))), (VC (VXINF (VVINF gehen)))], 'auto preterminal span': (25, 34), 'span': (25, 34), 'parent': 'SU', 'label': 'NF', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM also)
			(SIMPX
				(SIMPX
					(VF ich)
					(LK wurde)
					(MF
						(ADVX ganz gerne)
						[01;31m(SIMPX[00m
							(C wenn)
							[01;31m(MF[00m
								(PX
									(APPR nach)
									(NX so einem harten arbeitstag))[01;31m)[00m[01;31m)[00m))
				[01;31m(LV[00m
					(SIMPX
						(C wenn)
						(MF es da eine sauna)
						(VC gabe))[01;31m)[00m))
		(SIMPX
			(SU
				(VF ich)
				(LK wurde)
				(MF ganz gern in die sauna)
				(VC gehen)
				(NF
					(MF dann kurz)
					[01;36m(NF[00m
						(SIMPX
							(C das)
							(MF ich mich ein bischen)
							(VC erholen kann))[01;36m)[00m)))))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'PRF', 'ART', 'PIS', 'VVINF', 'VMFIN'), 'right siblings': [], 'left siblings': [(MF (ADVX (ADV dann)) (ADVX (ADV kurz)))], 'auto preterminal span': (27, 34), 'span': (27, 34), 'parent': 'NF', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM also)
			(SIMPX
				(SIMPX
					(VF ich)
					(LK wurde)
					(MF
						(ADVX ganz gerne)
						[01;31m(SIMPX[00m
							(C wenn)
							[01;31m(MF[00m
								(PX
									(APPR nach)
									(NX so einem harten arbeitstag))[01;31m)[00m[01;31m)[00m))
				[01;31m(LV[00m
					(SIMPX
						(C wenn)
						(MF es da eine sauna)
						(VC gabe))[01;31m)[00m))
		(SIMPX ich wurde ganz gern in die sauna gehen dann kurz das ich mich ein bischen erholen kann)))
Step:UNSET remove
{'subtrees': ['C', 'MF'], 'family': ['ADVX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'KOUS', 'APPR', 'ADV', 'ART', 'ADJA', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (3, 11), 'span': (5, 11), 'left siblings': ['ADVX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM also)
			(SIMPX
				(SIMPX
					(VF ich)
					(LK wurde)
					(MF
						(ADVX ganz gerne)
						(C wenn)
						[01;31m(MF[00m
							(PX
								(APPR nach)
								(NX so einem harten arbeitstag))[01;31m)[00m))
				[01;31m(LV[00m
					(SIMPX
						(C wenn)
						(MF es da eine sauna)
						(VC gabe))[01;31m)[00m))
		(SIMPX ich wurde ganz gern in die sauna gehen dann kurz das ich mich ein bischen erholen kann)))
Step:Unary
{'subtrees': ['PX'], 'family': ['ADVX', 'C', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'KOUS', 'APPR', 'ADV', 'ART', 'ADJA', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (3, 11), 'span': (6, 11), 'left siblings': ['ADVX', 'C'], 'label': 'MF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM also)
			(SIMPX
				(SIMPX ich wurde ganz gerne wenn nach so einem harten arbeitstag)
				[01;31m(LV[00m
					(SIMPX
						(C wenn)
						(MF es da eine sauna)
						(VC gabe))[01;31m)[00m))
		(SIMPX ich wurde ganz gern in die sauna gehen dann kurz das ich mich ein bischen erholen kann)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SIMPX', 'LV'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'ADV', 'ADV', 'KOUS', 'APPR', 'ADV', 'ART', 'ADJA', 'NN', 'KOUS', 'PPER', 'ADV', 'ART', 'NN', 'VVFIN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (1, 17), 'span': (11, 17), 'left siblings': ['SIMPX'], 'label': 'LV', 'classified_type': 'Unary', 'type': 'remove'}
(TOP also ich wurde ganz gerne wenn nach so einem harten arbeitstag wenn es da eine sauna gabe ich wurde ganz gern in die sauna gehen dann kurz das ich mich ein bischen erholen kann)

Sentence 406:
16 Initial errors
0 on fringe, 13 iterations
2 Error:Different label
2 Error:Different label
2 Error:UNSET move
1 Error:Unary
1 Error:UNSET remove
1 Error:Unary
1 Error:UNSET remove
1 Error:Single Word Phrase
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET add
1 Error:UNSET add
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM na ja)
			(DM gut)[01;31m)[00m
		[01;31m(SU[00m [01;33m(SIMPX[00m
			[01;31m(SIMPX[00m
				(KOORD aber)
				[01;31m(VF[00m
					[01;31m(PX[00m
						[01;31m(PX[00m
							(PROP dafur)[01;31m)[00m
						[01;31m(SIMPX[00m
							[01;36m(SIMPX[00m
								[01;36m(NF[00m
									(C das)
									(MF wir die woche dann so)
									[01;36m(ADVX[00m [01;31m(VC[00m
										[01;31m(VXFIN[00m
											(VVFIN vollpacken)[01;31m)[00m[01;31m)[00m [01;33mSIMPX)[00m[01;36m)[00m[01;36m)[00m[01;36m)[00m
							[01;36m(VF[00m [01;31m(NF[00m [01;33m(SIMPX[00m
								(PX
									(APPR mit)
									(NX terminen))[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
				(LK ware)
				(MF das sicherlich okay)[01;31m)[00m[01;31m)[00m)) [01;33mSIMPX)[00m
Step:Different label
{'family': ['C', 'MF', 'ADVX', 'NF'], 'auto preterminal span': (11, 12), 'span': (11, 12), 'subtrees': ['VXFIN'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('VVFIN',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('VC', 'ADVX')}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM na ja)
			(DM gut)[01;31m)[00m
		[01;31m(SU[00m [01;33m(SIMPX[00m
			[01;31m(SIMPX[00m
				(KOORD aber)
				[01;31m(VF[00m
					[01;31m(PX[00m
						[01;31m(PX[00m
							(PROP dafur)[01;31m)[00m
						[01;31m(SIMPX[00m
							[01;36m(SIMPX[00m
								[01;36m(NF[00m
									(C das)
									(MF wir die woche dann so)
									(ADVX
										[01;31m(VXFIN[00m
											(VVFIN vollpacken)[01;31m)[00m) [01;33mSIMPX)[00m[01;36m)[00m[01;36m)[00m
							[01;36m(VF[00m [01;31m(NF[00m [01;33m(SIMPX[00m
								(PX
									(APPR mit)
									(NX terminen))[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
				(LK ware)
				(MF das sicherlich okay)[01;31m)[00m[01;31m)[00m)) [01;33mSIMPX)[00m
Step:Different label
{'family': ['C', 'MF', 'ADVX', 'VF'], 'auto preterminal span': (12, 14), 'span': (12, 14), 'subtrees': ['PX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('APPR', 'NN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('NF', 'VF')}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM na ja)
			(DM gut)[01;31m)[00m
		[01;31m(SU[00m [01;33m(SIMPX[00m
			[01;31m(SIMPX[00m
				(KOORD aber)
				[01;31m(VF[00m
					[01;31m(PX[00m
						[01;31m(PX[00m
							(PROP dafur)[01;31m)[00m
						[01;31m(SIMPX[00m
							[01;36m(SIMPX[00m
								[01;36m(NF[00m
									(C das)
									(MF wir die woche dann so)
									(ADVX
										[01;31m(VXFIN[00m
											(VVFIN vollpacken)[01;31m)[00m) [01;33mSIMPX)[00m[01;36m)[00m[01;36m)[00m
							[01;33m(SIMPX[00m (VF mit terminen)[01;31m)[00m[01;31m)[00m[01;31m)[00m
				(LK ware)
				(MF das sicherlich okay)[01;31m)[00m[01;31m)[00m)) [01;33mSIMPX)[00m
Step:UNSET move
{'new_parent': 'PX', 'new_family': ['PX', 'SIMPX', 'VF'], 'mover info': [('VF', (12, 14))], 'old_family': ['C', 'MF', 'ADVX', 'VF'], 'start left siblings': ['C', 'MF', 'ADVX'], 'auto preterminals': ('PROP', 'KOUS', 'PPER', 'ART', 'NN', 'ADV', 'ADV', 'VVFIN', 'APPR', 'NN'), 'start right siblings': [], 'end left siblings': ['PX', 'SIMPX'], 'auto preterminal span': (4, 14), 'movers': ['VF'], 'old_parent': 'SIMPX', 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM na ja)
			(DM gut)[01;31m)[00m
		[01;31m(SU[00m [01;33m(SIMPX[00m
			[01;31m(SIMPX[00m
				(KOORD aber)
				[01;31m(VF[00m
					[01;31m(PX[00m
						[01;31m(PX[00m
							(PROP dafur)[01;31m)[00m
						[01;36m(NF[00m
							(SIMPX
								(C das)
								(MF wir die woche dann so)
								(ADVX
									[01;31m(VXFIN[00m
										(VVFIN vollpacken)[01;31m)[00m)) [01;33mSIMPX)[00m[01;36m)[00m
						[01;33m(SIMPX[00m (VF mit terminen)[01;31m)[00m[01;31m)[00m
				(LK ware)
				(MF das sicherlich okay)[01;31m)[00m[01;31m)[00m)) [01;33mSIMPX)[00m
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['PX', 'NF', 'VF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ART', 'NN', 'ADV', 'ADV', 'VVFIN'), 'right siblings': [(VF (PX (APPR mit) (NX (NN terminen))))], 'left siblings': [(PX (PROP dafur))], 'auto preterminal span': (5, 12), 'span': (5, 12), 'parent': 'PX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM na ja)
			(DM gut)[01;31m)[00m
		[01;31m(SU[00m [01;33m(SIMPX[00m
			[01;31m(SIMPX[00m
				(KOORD aber)
				[01;31m(VF[00m
					[01;31m(PX[00m
						[01;31m(PX[00m
							(PROP dafur)[01;31m)[00m
						(NF
							(SIMPX
								(C das)
								(MF wir die woche dann so)
								(ADVX
									[01;31m(VXFIN[00m
										(VVFIN vollpacken)[01;31m)[00m))) [01;33mSIMPX)[00m
						[01;33m(SIMPX[00m (VF mit terminen)[01;31m)[00m[01;31m)[00m
				(LK ware)
				(MF das sicherlich okay)[01;31m)[00m[01;31m)[00m)) [01;33mSIMPX)[00m
Step:UNSET remove
{'subtrees': ['DM', 'DM'], 'family': ['SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PTKANT', 'ITJ', 'KON', 'PROP', 'KOUS', 'PPER', 'ART', 'NN', 'ADV', 'ADV', 'VVFIN', 'APPR', 'NN', 'VAFIN', 'PDS', 'ADV', 'ADJD'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 18), 'span': (0, 3), 'left siblings': [], 'label': 'SU', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM na ja)
		(DM gut)
		[01;31m(SU[00m [01;33m(SIMPX[00m
			[01;31m(SIMPX[00m
				(KOORD aber)
				[01;31m(VF[00m
					[01;31m(PX[00m
						[01;31m(PX[00m
							(PROP dafur)[01;31m)[00m
						(NF
							(SIMPX
								(C das)
								(MF wir die woche dann so)
								(ADVX
									[01;31m(VXFIN[00m
										(VVFIN vollpacken)[01;31m)[00m))) [01;33mSIMPX)[00m
						[01;33m(SIMPX[00m (VF mit terminen)[01;31m)[00m[01;31m)[00m
				(LK ware)
				(MF das sicherlich okay)[01;31m)[00m[01;31m)[00m)) [01;33mSIMPX)[00m
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['DM', 'DM', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PTKANT', 'ITJ', 'KON', 'PROP', 'KOUS', 'PPER', 'ART', 'NN', 'ADV', 'ADV', 'VVFIN', 'APPR', 'NN', 'VAFIN', 'PDS', 'ADV', 'ADJD'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 18), 'span': (3, 18), 'left siblings': ['DM', 'DM'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM na ja)
		(DM gut)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(KOORD aber)
			[01;31m(VF[00m
				[01;31m(PX[00m
					[01;31m(PX[00m
						(PROP dafur)[01;31m)[00m
					(NF
						(SIMPX
							(C das)
							(MF wir die woche dann so)
							(ADVX
								[01;31m(VXFIN[00m
									(VVFIN vollpacken)[01;31m)[00m))) [01;33mSIMPX)[00m
					[01;33m(SIMPX[00m (VF mit terminen)[01;31m)[00m[01;31m)[00m
			(LK ware)
			(MF das sicherlich okay)[01;31m)[00m)) [01;33mSIMPX)[00m
Step:UNSET remove
{'subtrees': ['KOORD', 'VF', 'LK', 'MF'], 'family': ['DM', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PTKANT', 'ITJ', 'KON', 'PROP', 'KOUS', 'PPER', 'ART', 'NN', 'ADV', 'ADV', 'VVFIN', 'APPR', 'NN', 'VAFIN', 'PDS', 'ADV', 'ADJD'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 18), 'span': (3, 18), 'left siblings': ['DM', 'DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM na ja)
		(DM gut)
		[01;33m(SIMPX[00m (KOORD aber)
		[01;31m(VF[00m
			[01;31m(PX[00m
				[01;31m(PX[00m
					(PROP dafur)[01;31m)[00m
				(NF
					(SIMPX
						(C das)
						(MF wir die woche dann so)
						(ADVX
							[01;31m(VXFIN[00m
								(VVFIN vollpacken)[01;31m)[00m))) [01;33mSIMPX)[00m
				[01;33m(SIMPX[00m (VF mit terminen)[01;31m)[00m[01;31m)[00m
		(LK ware)
		(MF das sicherlich okay))) [01;33mSIMPX)[00m
Step:Single Word Phrase
{'subtrees': ['PROP'], 'family': ['PX', 'NF', 'VF'], 'over_word': True, 'over words': True, 'auto preterminals': ('PROP', 'KOUS', 'PPER', 'ART', 'NN', 'ADV', 'ADV', 'VVFIN', 'APPR', 'NN'), 'right siblings': ['NF', 'VF'], 'parent': 'PX', 'auto preterminal span': (4, 14), 'span': (4, 5), 'left siblings': [], 'label': 'PX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(DM na ja)
		(DM gut)
		[01;33m(SIMPX[00m (KOORD aber)
		[01;31m(VF[00m
			[01;31m(PX[00m
				(PROP dafur)
				(NF
					(SIMPX
						(C das)
						(MF wir die woche dann so)
						(ADVX
							[01;31m(VXFIN[00m
								(VVFIN vollpacken)[01;31m)[00m))) [01;33mSIMPX)[00m
				[01;33m(SIMPX[00m (VF mit terminen)[01;31m)[00m[01;31m)[00m
		(LK ware)
		(MF das sicherlich okay))) [01;33mSIMPX)[00m
Step:Unary
{'subtrees': ['PX'], 'family': ['DM', 'DM', 'KOORD', 'VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PTKANT', 'ITJ', 'KON', 'PROP', 'KOUS', 'PPER', 'ART', 'NN', 'ADV', 'ADV', 'VVFIN', 'APPR', 'NN', 'VAFIN', 'PDS', 'ADV', 'ADJD'), 'right siblings': ['LK', 'MF'], 'parent': 'TURN', 'auto preterminal span': (0, 18), 'span': (4, 14), 'left siblings': ['DM', 'DM', 'KOORD'], 'label': 'VF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM na ja)
		(DM gut)
		[01;33m(SIMPX[00m (KOORD aber)
		[01;31m(PX[00m
			(PROP dafur)
			(NF
				(SIMPX
					(C das)
					(MF wir die woche dann so)
					(ADVX
						[01;31m(VXFIN[00m
							(VVFIN vollpacken)[01;31m)[00m))) [01;33mSIMPX)[00m
			[01;33m(SIMPX[00m (VF mit terminen)[01;31m)[00m
		(LK ware)
		(MF das sicherlich okay))) [01;33mSIMPX)[00m
Step:UNSET remove
{'subtrees': ['PROP', 'NF', 'VF'], 'family': ['DM', 'DM', 'KOORD', 'PX', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PTKANT', 'ITJ', 'KON', 'PROP', 'KOUS', 'PPER', 'ART', 'NN', 'ADV', 'ADV', 'VVFIN', 'APPR', 'NN', 'VAFIN', 'PDS', 'ADV', 'ADJD'), 'right siblings': ['LK', 'MF'], 'parent': 'TURN', 'auto preterminal span': (0, 18), 'span': (4, 14), 'left siblings': ['DM', 'DM', 'KOORD'], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM na ja)
		(DM gut)
		[01;36m(SIMPX[00m
			(KOORD aber)
			(PROP dafur)
			(NF
				(SIMPX
					(C das)
					(MF wir die woche dann so)
					(ADVX
						[01;31m(VXFIN[00m
							(VVFIN vollpacken)[01;31m)[00m)))[01;36m)[00m
		[01;36m(SIMPX[00m
			(VF mit terminen)
			(LK ware)
			(MF das sicherlich okay)[01;36m)[00m))
Step:UNSET add
{'subtrees': ['KOORD', 'PROP', 'NF'], 'family': ['DM', 'DM', 'SIMPX', 'VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'PROP', 'KOUS', 'PPER', 'ART', 'NN', 'ADV', 'ADV', 'VVFIN'), 'right siblings': [(VF (PX (APPR mit) (NX (NN terminen)))), (LK (VXFIN (VAFIN ware))), (MF (NX (PDS das)) (ADVX (ADV sicherlich)) (ADJX (ADJD okay)))], 'left siblings': [(DM (ITJ na) (PTKANT ja)), (DM (ITJ gut))], 'auto preterminal span': (3, 12), 'span': (3, 12), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM na ja)
		(DM gut)
		(SIMPX
			(KOORD aber)
			(PROP dafur)
			(NF
				(SIMPX
					(C das)
					(MF wir die woche dann so)
					(ADVX
						[01;31m(VXFIN[00m
							(VVFIN vollpacken)[01;31m)[00m))))
		[01;36m(SIMPX[00m
			(VF mit terminen)
			(LK ware)
			(MF das sicherlich okay)[01;36m)[00m))
Step:UNSET add
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['DM', 'DM', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'NN', 'VAFIN', 'PDS', 'ADV', 'ADJD'), 'right siblings': [], 'left siblings': [(DM (ITJ na) (PTKANT ja)), (DM (ITJ gut)), (SIMPX (KOORD (KON aber)) (PROP dafur) (NF (SIMPX (C (KOUS das)) (MF (NX (PPER wir)) (NX (ART die) (NN woche)) (ADVX (ADV dann)) (ADVX (ADV so))) (ADVX (VXFIN (VVFIN vollpacken))))))], 'auto preterminal span': (12, 18), 'span': (12, 18), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM na ja)
		(DM gut)
		(SIMPX
			(KOORD aber)
			(PROP dafur)
			(NF
				(SIMPX
					(C das)
					(MF wir die woche dann so)
					(ADVX
						[01;31m(VXFIN[00m
							(VVFIN vollpacken)[01;31m)[00m))))
		(SIMPX mit terminen ware das sicherlich okay)))
Step:Single Word Phrase
{'subtrees': ['VVFIN'], 'family': ['VXFIN'], 'over_word': True, 'over words': True, 'auto preterminals': ('VVFIN',), 'right siblings': [], 'parent': 'ADVX', 'auto preterminal span': (11, 12), 'span': (11, 12), 'left siblings': [], 'label': 'VXFIN', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP na ja gut aber dafur das wir die woche dann so vollpacken mit terminen ware das sicherlich okay)

Sentence 407:
8 Initial errors
0 on fringe, 5 iterations
3 Error:UNSET move
2 Error:Single Word Phrase
1 Error:Clause Attachment
1 Error:UNSET add
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			[01;36m(SIMPX[00m
				(SIMPX ich kummere mich um die fluge)
				[01;31m(SIMPX[00m
					[01;31m(KOORD[00m
						(KON und)[01;31m)[00m
					[01;36m(SIMPX[00m
						(VF wir)
						(LK checken)
						(MF mal)
						(NF ob wir dienstag abend oder mittwoch morgen nach berlin fliegen konnen)[01;36m)[00m[01;31m)[00m[01;36m)[00m
			[01;33m(SIMPX[00m (SIMPX und ich gebe ihnen dann noch bescheid)[01;31m)[00m
		(SU
			(SIMPX
				(LK ware)
				(MF
					(NX ihnen)
					[01;36m(PX[00m [01;31m(NX[00m
						(PIS beides)[01;31m)[00m[01;36m)[00m
					(ADJX recht)))))) [01;33mSIMPX)[00m
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['DM', 'SIMPX', 'KOORD', 'SIMPX', 'SIMPX'], 'mover info': [('KOORD', (7, 8))], 'old_family': ['KOORD', 'VF', 'LK', 'MF', 'NF'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'PPER', 'VVFIN', 'PRF', 'APPR', 'ART', 'NN', 'KON', 'PPER', 'VVFIN', 'ADV', 'KOUS', 'PPER', 'NN', 'ADV', 'KON', 'NN', 'ADV', 'APPR', 'NE', 'VVINF', 'VMFIN', 'KON', 'PPER', 'VVFIN', 'PPER', 'ADV', 'ADV', 'NN'), 'start right siblings': ['VF', 'LK', 'MF', 'NF'], 'end left siblings': ['DM', 'SIMPX'], 'auto preterminal span': (0, 29), 'adding node already present': False, 'movers': ['KOORD'], 'old_parent': 'SIMPX', 'POS confusion': ('KON', 'KON'), 'added and moved': True, 'end right siblings': ['SIMPX', 'SIMPX'], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'PX'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			(SIMPX
				(SIMPX ich kummere mich um die fluge)
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				(SIMPX wir checken mal ob wir dienstag abend oder mittwoch morgen nach berlin fliegen konnen))
			[01;33m(SIMPX[00m (SIMPX und ich gebe ihnen dann noch bescheid)[01;31m)[00m
		(SU
			(SIMPX
				(LK ware)
				(MF
					(NX ihnen)
					[01;36m(PX[00m [01;31m(NX[00m
						(PIS beides)[01;31m)[00m[01;36m)[00m
					(ADJX recht)))))) [01;33mSIMPX)[00m
Step:Single Word Phrase
{'family': ['NX', 'PX', 'ADJX'], 'auto preterminal span': (31, 32), 'span': (31, 32), 'subtrees': ['PIS'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('PIS',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('NX', 'PX')}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			(SIMPX
				(SIMPX ich kummere mich um die fluge)
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				(SIMPX wir checken mal ob wir dienstag abend oder mittwoch morgen nach berlin fliegen konnen))
			[01;33m(SIMPX[00m (SIMPX und ich gebe ihnen dann noch bescheid)[01;31m)[00m
		(SU ware ihnen beides recht))) [01;33mSIMPX)[00m
Step:Clause Attachment
{'subtrees': ['DM', 'SIMPX', 'SIMPX'], 'family': ['SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VVFIN', 'PRF', 'APPR', 'ART', 'NN', 'KON', 'PPER', 'VVFIN', 'ADV', 'KOUS', 'PPER', 'NN', 'ADV', 'KON', 'NN', 'ADV', 'APPR', 'NE', 'VVINF', 'VMFIN', 'KON', 'PPER', 'VVFIN', 'PPER', 'ADV', 'ADV', 'NN', 'VAFIN', 'PPER', 'PIS', 'ADJD'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 33), 'span': (0, 29), 'left siblings': [], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(SIMPX ich kummere mich um die fluge)
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(SIMPX wir checken mal ob wir dienstag abend oder mittwoch morgen nach berlin fliegen konnen))
		[01;36m(SIMPX[00m
			(SIMPX und ich gebe ihnen dann noch bescheid)
			(SU ware ihnen beides recht)[01;36m)[00m))
Step:UNSET add
{'subtrees': ['SIMPX', 'SU'], 'family': ['DM', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'PPER', 'VVFIN', 'PPER', 'ADV', 'ADV', 'NN', 'VAFIN', 'PPER', 'PIS', 'ADJD'), 'right siblings': [], 'left siblings': [(DM (PTKANT ja)), (SIMPX (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN kummere))) (MF (NX (PRF mich)) (PX (APPR um) (NX (ART die) (NN fluge))))) (KOORD (KON und)) (SIMPX (VF (NX (PPER wir))) (LK (VXFIN (VVFIN checken))) (MF (ADVX (ADV mal))) (NF (SIMPX (C (KOUS ob)) (MF (NX (PPER wir)) (NX (NX (NX (NN dienstag)) (ADVX (ADV abend))) (KON oder) (NX (NX (NN mittwoch)) (ADVX (ADV morgen)))) (PX (APPR nach) (NX (NE berlin)))) (VC (VXINF (VVINF fliegen)) (VXFIN (VMFIN konnen)))))))], 'auto preterminal span': (22, 33), 'span': (22, 33), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(SIMPX ich kummere mich um die fluge)
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(SIMPX wir checken mal ob wir dienstag abend oder mittwoch morgen nach berlin fliegen konnen))
		(SIMPX und ich gebe ihnen dann noch bescheid ware ihnen beides recht)))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['SIMPX', 'KOORD', 'SIMPX'], 'over_word': True, 'over words': True, 'auto preterminals': ('PPER', 'VVFIN', 'PRF', 'APPR', 'ART', 'NN', 'KON', 'PPER', 'VVFIN', 'ADV', 'KOUS', 'PPER', 'NN', 'ADV', 'KON', 'NN', 'ADV', 'APPR', 'NE', 'VVINF', 'VMFIN'), 'right siblings': ['SIMPX'], 'parent': 'SIMPX', 'auto preterminal span': (1, 22), 'span': (7, 8), 'left siblings': ['SIMPX'], 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP ja ich kummere mich um die fluge und wir checken mal ob wir dienstag abend oder mittwoch morgen nach berlin fliegen konnen und ich gebe ihnen dann noch bescheid ware ihnen beides recht)

Sentence 408:
3 Initial errors
0 on fringe, 2 iterations
2 Error:UNSET move
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SU[00m
	(TOP
		(TURN
			[01;31m(SU[00m
				(DM
					(PTKANT ja))[01;31m)[00m
			[01;31m(SU[00m
				(DM
					(ITJ genau))[01;31m)[00m))[01;36m)[00m
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SU', 'DM'], 'mover info': [('SU', (0, 1))], 'old_family': ['SU', 'SU'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'ITJ'), 'start right siblings': ['SU'], 'end left siblings': [], 'auto preterminal span': (0, 2), 'movers': ['SU'], 'old_parent': 'TURN', 'POS confusion': ('PTKANT', 'PTKANT'), 'end right siblings': ['DM'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			[01;31m(SU[00m
				(DM
					(PTKANT ja))[01;31m)[00m
			(DM genau))))
Step:Unary
{'subtrees': ['DM'], 'family': ['SU', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ'), 'right siblings': ['DM'], 'parent': 'SU', 'auto preterminal span': (0, 2), 'span': (0, 1), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja genau)

Sentence 409:
12 Initial errors
0 on fringe, 8 iterations
3 Error:NP Attachment
2 Error:Single Word Phrase
2 Error:Modifier Attachment
1 Error:Modifier Attachment
1 Error:UNSET remove
1 Error:Modifier Attachment
1 Error:Clause Attachment
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM also)
			[01;36m(SIMPX[00m
				[01;31m(SIMPX[00m
					(VF ich)
					(LK hatte)
					(MF grose lust)
					[01;33m(SIMPX (NF[00m (NF ins theater zu gehen)[01;31m)[00m
				[01;31m(NX[00m
					(ADVX aber)
					(ADVX nicht)
					(NX [01;33m(ADVX[00m
						(NX so was)
						[01;31m(NX[00m
							(ADVX ganz) [01;33mADVX)[00m
							(NN schweres)[01;31m)[00m)[01;31m)[00m[01;36m)[00m) [01;33mNF) SIMPX)[00m
		[01;31m(SU[00m
			(DM also)
			(SIMPX
				(VF ich)
				(LK weis)
				(MF zufallig)
				(NF
					(SIMPX
						(C das)
						(MF
							[01;36m(PX[00m
								(PX im letzten monat)
								[01;36m(ADVX[00m [01;31m(NX[00m
									(NE woyzek)[01;31m)[00m[01;36m)[00m[01;36m)[00m
							(ADVX da))
						(VC gegeben wurde))))
			(SIMPX das ware mir ein bischen zu anstrengend)[01;31m)[00m
		(SU
			(SIMPX
				(VF vielleicht)
				(LK finden)
				(MF
					(NX wir)
					(NX
						(NX so was)
						(PX
							(APPR in)
							(NX
								(NX richtung)
								[01;31m(NX[00m
									(NX musical)
									(KON oder)
									(NX variete)[01;31m)[00m))))))))
Step:NP Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'NF', 'NX'], 'mover info': [('NX', (9, 15))], 'old_family': ['DM', 'SIMPX', 'NX'], 'start left siblings': ['DM', 'SIMPX'], 'auto preterminals': ('ADV', 'PPER', 'VAFIN', 'ADJA', 'NN', 'APPRART', 'NN', 'PTKZU', 'VVINF', 'ADV', 'PTKNEG', 'ADV', 'PIS', 'ADV', 'NN'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'MF', 'NF'], 'auto preterminal span': (0, 15), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'SU', 'added and moved': True, 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'ADVX'}
(TOP
	(TURN
		(SU
			(DM also)
			(SIMPX
				(VF ich)
				(LK hatte)
				(MF grose lust)
				[01;36m(SIMPX[00m
					(NF
						(NF ins theater zu gehen)
						[01;31m(NX[00m
							(ADVX aber)
							(ADVX nicht)
							(NX [01;33m(ADVX[00m
								(NX so was)
								[01;31m(NX[00m
									(ADVX ganz) [01;33mADVX)[00m
									(NN schweres)[01;31m)[00m)[01;31m)[00m)[01;36m)[00m))
		[01;31m(SU[00m
			(DM also)
			(SIMPX
				(VF ich)
				(LK weis)
				(MF zufallig)
				(NF
					(SIMPX
						(C das)
						(MF
							[01;36m(PX[00m
								(PX im letzten monat)
								[01;36m(ADVX[00m [01;31m(NX[00m
									(NE woyzek)[01;31m)[00m[01;36m)[00m[01;36m)[00m
							(ADVX da))
						(VC gegeben wurde))))
			(SIMPX das ware mir ein bischen zu anstrengend)[01;31m)[00m
		(SU
			(SIMPX
				(VF vielleicht)
				(LK finden)
				(MF
					(NX wir)
					(NX
						(NX so was)
						(PX
							(APPR in)
							(NX
								(NX richtung)
								[01;31m(NX[00m
									(NX musical)
									(KON oder)
									(NX variete)[01;31m)[00m))))))))
Step:Single Word Phrase
{'family': ['PX', 'ADVX', 'ADVX'], 'auto preterminal span': (23, 24), 'span': (23, 24), 'subtrees': ['NE'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('NE',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('NX', 'ADVX')}
(TOP
	(TURN
		(SU
			(DM also)
			(SIMPX
				(VF ich)
				(LK hatte)
				(MF grose lust)
				[01;36m(SIMPX[00m
					(NF
						(NF ins theater zu gehen)
						[01;31m(NX[00m
							(ADVX aber)
							(ADVX nicht)
							(NX [01;33m(ADVX[00m
								(NX so was)
								[01;31m(NX[00m
									(ADVX ganz) [01;33mADVX)[00m
									(NN schweres)[01;31m)[00m)[01;31m)[00m)[01;36m)[00m))
		[01;31m(SU[00m
			(DM also)
			(SIMPX
				(VF ich)
				(LK weis)
				(MF zufallig)
				(NF
					(SIMPX
						(C das)
						(MF
							[01;36m(PX[00m
								(PX im letzten monat)
								(ADVX woyzek)[01;36m)[00m
							(ADVX da))
						(VC gegeben wurde))))
			(SIMPX das ware mir ein bischen zu anstrengend)[01;31m)[00m
		(SU
			(SIMPX
				(VF vielleicht)
				(LK finden)
				(MF
					(NX wir)
					(NX
						(NX so was)
						(PX
							(APPR in)
							(NX
								(NX richtung)
								[01;31m(NX[00m
									(NX musical)
									(KON oder)
									(NX variete)[01;31m)[00m))))))))
Step:Modifier Attachment
{'new_parent': 'NF', 'new_family': ['NF', 'ADVX', 'ADVX', 'NX'], 'mover info': [('ADVX', (9, 10)), ('ADVX', (10, 11))], 'old_family': ['ADVX', 'ADVX', 'NX'], 'start left siblings': [], 'auto preterminals': ('APPRART', 'NN', 'PTKZU', 'VVINF', 'ADV', 'PTKNEG', 'ADV', 'PIS', 'ADV', 'NN'), 'start right siblings': ['NX'], 'end left siblings': ['NF'], 'auto preterminal span': (5, 15), 'adding node already present': False, 'movers': ['ADVX', 'ADVX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': ['NX'], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'PX'}
(TOP
	(TURN
		(SU
			(DM also)
			(SIMPX
				(VF ich)
				(LK hatte)
				(MF grose lust)
				(SIMPX
					(NF
						(NF ins theater zu gehen)
						(ADVX aber)
						(ADVX nicht)
						(NX [01;33m(ADVX[00m
							(NX so was)
							[01;31m(NX[00m
								(ADVX ganz) [01;33mADVX)[00m
								(NN schweres)[01;31m)[00m)))))
		[01;31m(SU[00m
			(DM also)
			(SIMPX
				(VF ich)
				(LK weis)
				(MF zufallig)
				(NF
					(SIMPX
						(C das)
						(MF
							[01;36m(PX[00m
								(PX im letzten monat)
								(ADVX woyzek)[01;36m)[00m
							(ADVX da))
						(VC gegeben wurde))))
			(SIMPX das ware mir ein bischen zu anstrengend)[01;31m)[00m
		(SU
			(SIMPX
				(VF vielleicht)
				(LK finden)
				(MF
					(NX wir)
					(NX
						(NX so was)
						(PX
							(APPR in)
							(NX
								(NX richtung)
								[01;31m(NX[00m
									(NX musical)
									(KON oder)
									(NX variete)[01;31m)[00m))))))))
Step:Modifier Attachment
{'subtrees': ['PX', 'ADVX'], 'family': ['PX', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'ADJA', 'NN', 'NE'), 'right siblings': [(ADVX (ADV da))], 'left siblings': [], 'auto preterminal span': (20, 24), 'span': (20, 24), 'parent': 'MF', 'label': 'PX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM also)
			(SIMPX
				(VF ich)
				(LK hatte)
				(MF grose lust)
				(SIMPX
					(NF
						(NF ins theater zu gehen)
						(ADVX aber)
						(ADVX nicht)
						(NX [01;33m(ADVX[00m
							(NX so was)
							[01;31m(NX[00m
								(ADVX ganz) [01;33mADVX)[00m
								(NN schweres)[01;31m)[00m)))))
		[01;31m(SU[00m
			(DM also)
			(SIMPX ich weis zufallig das im letzten monat woyzek da gegeben wurde)
			(SIMPX das ware mir ein bischen zu anstrengend)[01;31m)[00m
		(SU
			(SIMPX
				(VF vielleicht)
				(LK finden)
				(MF
					(NX wir)
					(NX
						(NX so was)
						(PX
							(APPR in)
							(NX
								(NX richtung)
								[01;31m(NX[00m
									(NX musical)
									(KON oder)
									(NX variete)[01;31m)[00m))))))))
Step:UNSET remove
{'subtrees': ['ADVX', 'NN'], 'family': ['NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PIS', 'ADV', 'NN'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (11, 15), 'span': (13, 15), 'left siblings': ['NX'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM also)
			(SIMPX
				(VF ich)
				(LK hatte)
				(MF grose lust)
				(SIMPX
					(NF
						(NF ins theater zu gehen)
						(ADVX aber)
						(ADVX nicht)
						(NX
							[01;36m(ADVX[00m
								(NX so was)
								(ADVX ganz)[01;36m)[00m
							(NN schweres))))))
		[01;31m(SU[00m
			(DM also)
			(SIMPX ich weis zufallig das im letzten monat woyzek da gegeben wurde)
			(SIMPX das ware mir ein bischen zu anstrengend)[01;31m)[00m
		(SU
			(SIMPX
				(VF vielleicht)
				(LK finden)
				(MF
					(NX wir)
					(NX
						(NX so was)
						(PX
							(APPR in)
							(NX
								(NX richtung)
								[01;31m(NX[00m
									(NX musical)
									(KON oder)
									(NX variete)[01;31m)[00m))))))))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADVX'], 'family': ['ADVX', 'NN'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PIS', 'ADV'), 'right siblings': [(NN schweres)], 'left siblings': [], 'auto preterminal span': (11, 14), 'span': (11, 14), 'parent': 'NX', 'label': 'ADVX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU also ich hatte grose lust ins theater zu gehen aber nicht so was ganz schweres)
		[01;31m(SU[00m
			(DM also)
			(SIMPX ich weis zufallig das im letzten monat woyzek da gegeben wurde)
			(SIMPX das ware mir ein bischen zu anstrengend)[01;31m)[00m
		(SU
			(SIMPX
				(VF vielleicht)
				(LK finden)
				(MF
					(NX wir)
					(NX
						(NX so was)
						(PX
							(APPR in)
							(NX
								(NX richtung)
								[01;31m(NX[00m
									(NX musical)
									(KON oder)
									(NX variete)[01;31m)[00m))))))))
Step:Clause Attachment
{'subtrees': ['DM', 'SIMPX', 'SIMPX'], 'family': ['SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPER', 'VAFIN', 'ADJA', 'NN', 'APPRART', 'NN', 'PTKZU', 'VVINF', 'ADV', 'PTKNEG', 'ADV', 'PIS', 'ADV', 'NN', 'ADV', 'PPER', 'VVFIN', 'ADV', 'KOUS', 'APPRART', 'ADJA', 'NN', 'NE', 'ADV', 'VVPP', 'VAFIN', 'PDS', 'VAFIN', 'PPER', 'ART', 'PIS', 'PTKA', 'ADJD', 'ADV', 'VVFIN', 'PPER', 'ADV', 'PIS', 'APPR', 'NN', 'NN', 'KON', 'NN'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 44), 'span': (15, 34), 'left siblings': ['SU'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU also ich hatte grose lust ins theater zu gehen aber nicht so was ganz schweres)
		(DM also)
		(SIMPX ich weis zufallig das im letzten monat woyzek da gegeben wurde)
		(SIMPX das ware mir ein bischen zu anstrengend)
		(SU
			(SIMPX
				(VF vielleicht)
				(LK finden)
				(MF
					(NX wir)
					(NX
						(NX so was)
						(PX
							(APPR in)
							(NX
								(NX richtung)
								[01;31m(NX[00m
									(NX musical)
									(KON oder)
									(NX variete)[01;31m)[00m))))))))
Step:UNSET remove
{'subtrees': ['NX', 'KON', 'NX'], 'family': ['NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'NN', 'KON', 'NN'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (40, 44), 'span': (41, 44), 'left siblings': ['NX'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP also ich hatte grose lust ins theater zu gehen aber nicht so was ganz schweres also ich weis zufallig das im letzten monat woyzek da gegeben wurde das ware mir ein bischen zu anstrengend vielleicht finden wir so was in richtung musical oder variete)

Sentence 410:
4 Initial errors
0 on fringe, 2 iterations
3 Error:UNSET move
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SU[00m
	(TOP
		(TURN
			[01;31m(SU[00m
				(DM
					(PTKANT ja))[01;31m)[00m
			[01;31m(SU[00m
				(DM ja)
				[01;36m(SU[00m
					(SIMPX wurde ich)
					(SIMPX wurde ich gut finden)[01;36m)[00m[01;31m)[00m))[01;36m)[00m
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['SU', 'DM', 'SU'], 'mover info': [('DM', (1, 2))], 'old_family': ['DM', 'SIMPX', 'SIMPX'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'PTKANT', 'VAFIN', 'PPER', 'VAFIN', 'PPER', 'ADJD', 'VVINF'), 'start right siblings': ['SIMPX', 'SIMPX'], 'end left siblings': ['SU'], 'auto preterminal span': (0, 8), 'adding node already present': False, 'movers': ['DM'], 'old_parent': 'SU', 'POS confusion': ('PTKANT', 'PTKANT'), 'added and moved': True, 'end right siblings': ['SU'], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'SU'}
(TOP
	(SU
		(TURN
			[01;31m(SU[00m
				(DM
					(PTKANT ja))[01;31m)[00m
			(DM ja)
			(SU wurde ich wurde ich gut finden))))
Step:Unary
{'subtrees': ['DM'], 'family': ['SU', 'DM', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PTKANT', 'VAFIN', 'PPER', 'VAFIN', 'PPER', 'ADJD', 'VVINF'), 'right siblings': ['DM', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 8), 'span': (0, 1), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja ja wurde ich wurde ich gut finden)

Sentence 411:
6 Initial errors
0 on fringe, 5 iterations
2 Error:NP Attachment
1 Error:NP Internal Structure
1 Error:Unary
1 Error:Clause Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM
				(ITJ okay))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK setze)
				(MF
					(NX mich)
					(ADVX also)
					(NX
						(ADVX spatestens)
						[01;36m(NX[00m
							(NX mitte)
							(NX nachste woche)[01;36m)[00m)
					(PX mit ihnen)
					(PX in verbindung)))
			(SIMPX
				(KOORD und)
				(VF dann)
				(LK machen)
				(MF
					(NX wir)
					[01;31m(NX[00m
						(NX alles)
						[01;33m(NX[00m (NX weitere)[01;31m)[00m
					(ADVX so)) [01;33mNX)[00m
				[01;31m(NF[00m
					(SIMPX
						(C wie)
						(VC besprochen))[01;31m)[00m)[01;31m)[00m))
Step:NP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'NX', 'NX', 'ADVX'], 'mover info': [('NX', (18, 19))], 'old_family': ['NX', 'NX'], 'start left siblings': ['NX'], 'auto preterminals': ('PPER', 'PIS', 'NN', 'ADV'), 'start right siblings': [], 'end left siblings': ['NX', 'NX'], 'auto preterminal span': (16, 20), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'NX', 'POS confusion': ('NN', 'NN'), 'added and moved': True, 'end right siblings': ['ADVX'], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM
				(ITJ okay))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK setze)
				(MF
					(NX mich)
					(ADVX also)
					(NX
						(ADVX spatestens)
						[01;36m(NX[00m
							(NX mitte)
							(NX nachste woche)[01;36m)[00m)
					(PX mit ihnen)
					(PX in verbindung)))
			(SIMPX
				(KOORD und)
				(VF dann)
				(LK machen)
				(MF wir alles weitere so)
				[01;31m(NF[00m
					(SIMPX
						(C wie)
						(VC besprochen))[01;31m)[00m)[01;31m)[00m))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'ADJA', 'NN'), 'right siblings': [], 'left siblings': [(ADVX (ADV spatestens))], 'auto preterminal span': (6, 9), 'span': (6, 9), 'parent': 'NX', 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM
				(ITJ okay))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX ich setze mich also spatestens mitte nachste woche mit ihnen in verbindung)
			(SIMPX
				(KOORD und)
				(VF dann)
				(LK machen)
				(MF wir alles weitere so)
				[01;31m(NF[00m
					(SIMPX
						(C wie)
						(VC besprochen))[01;31m)[00m)[01;31m)[00m))
Step:Unary
{'subtrees': ['DM'], 'family': ['SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PPER', 'VVFIN', 'PRF', 'ADV', 'ADV', 'NN', 'ADJA', 'NN', 'APPR', 'PPER', 'APPR', 'NN', 'KON', 'ADV', 'VVFIN', 'PPER', 'PIS', 'NN', 'ADV', 'KOUS', 'VVPP'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 22), 'span': (0, 1), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		[01;31m(SU[00m
			(SIMPX ich setze mich also spatestens mitte nachste woche mit ihnen in verbindung)
			(SIMPX
				(KOORD und)
				(VF dann)
				(LK machen)
				(MF wir alles weitere so)
				[01;31m(NF[00m
					(SIMPX
						(C wie)
						(VC besprochen))[01;31m)[00m)[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['DM', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PPER', 'VVFIN', 'PRF', 'ADV', 'ADV', 'NN', 'ADJA', 'NN', 'APPR', 'PPER', 'APPR', 'NN', 'KON', 'ADV', 'VVFIN', 'PPER', 'PIS', 'NN', 'ADV', 'KOUS', 'VVPP'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 22), 'span': (1, 22), 'left siblings': ['DM'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(SIMPX ich setze mich also spatestens mitte nachste woche mit ihnen in verbindung)
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK machen)
			(MF wir alles weitere so)
			[01;31m(NF[00m
				(SIMPX
					(C wie)
					(VC besprochen))[01;31m)[00m)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['KOORD', 'VF', 'LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'ADV', 'VVFIN', 'PPER', 'PIS', 'NN', 'ADV', 'KOUS', 'VVPP'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (13, 22), 'span': (20, 22), 'left siblings': ['KOORD', 'VF', 'LK', 'MF'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP okay ich setze mich also spatestens mitte nachste woche mit ihnen in verbindung und dann machen wir alles weitere so wie besprochen)

Sentence 412:
3 Initial errors
0 on fringe, 2 iterations
2 Error:Single Word Phrase
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SU[00m
	(TOP
		(TURN
			(SU da da horen sie ganz richtig)
			(SU
				(SIMPX
					(VF ich)
					(LK finde)
					(NF
						(SIMPX
							(VF wir)
							(LK sollten)
							(MF
								(NX uns)
								(ADJX dringend)
								[01;36m(ADVX[00m [01;31m(PX[00m
									(PROP druber)[01;31m)[00m[01;36m)[00m)
							(VC einigen)
							(NF wann denn die geschaftsreise losgehen soll)))))))[01;36m)[00m
Step:Single Word Phrase
{'family': ['NX', 'ADJX', 'ADVX'], 'auto preterminal span': (12, 13), 'span': (12, 13), 'subtrees': ['PROP'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('PROP',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('PX', 'ADVX')}
[01;36m(SU[00m
	(TOP
		(TURN
			(SU da da horen sie ganz richtig)
			(SU ich finde wir sollten uns dringend druber einigen wann denn die geschaftsreise losgehen soll)))[01;36m)[00m
Step:Unary
{'subtrees': ['TURN'], 'family': ['SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'VVFIN', 'PPER', 'ADV', 'ADJD', 'PPER', 'VVFIN', 'PPER', 'VMFIN', 'PRF', 'ADJD', 'PROP', 'VVINF', 'PWAV', 'ADV', 'ART', 'NN', 'VVINF', 'VMFIN'), 'right siblings': [], 'left siblings': [], 'auto preterminal span': (0, 20), 'span': (0, 20), 'parent': 'TOP', 'label': 'SU', 'classified_type': 'Unary', 'type': 'add'}
(TOP da da horen sie ganz richtig ich finde wir sollten uns dringend druber einigen wann denn die geschaftsreise losgehen soll)

Sentence 413:
3 Initial errors
0 on fringe, 3 iterations
1 Error:Unary
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM
				(ITJ okay))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK wuste)
				(MF sogar schon ein gutes hotel))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK konnte)
				(MF ich)
				(VC ubernehmen))[01;31m)[00m))
Step:Unary
{'subtrees': ['DM'], 'family': ['SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PPER', 'VVFIN', 'ADV', 'ADV', 'ART', 'ADJA', 'NN', 'PDS', 'VMFIN', 'PPER', 'VVINF'), 'right siblings': ['SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 12), 'span': (0, 1), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK wuste)
				(MF sogar schon ein gutes hotel))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK konnte)
				(MF ich)
				(VC ubernehmen))[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['DM', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PPER', 'VVFIN', 'ADV', 'ADV', 'ART', 'ADJA', 'NN', 'PDS', 'VMFIN', 'PPER', 'VVINF'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 12), 'span': (1, 8), 'left siblings': ['DM'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(SIMPX ich wuste sogar schon ein gutes hotel)
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK konnte)
				(MF ich)
				(VC ubernehmen))[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['DM', 'SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PPER', 'VVFIN', 'ADV', 'ADV', 'ART', 'ADJA', 'NN', 'PDS', 'VMFIN', 'PPER', 'VVINF'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 12), 'span': (8, 12), 'left siblings': ['DM', 'SIMPX'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP okay ich wuste sogar schon ein gutes hotel das konnte ich ubernehmen)

Sentence 414:
18 Initial errors
0 on fringe, 11 iterations
3 Error:UNSET move
2 Error:Single Word Phrase
2 Error:Different label
2 Error:Single Word Phrase
2 Error:Different label
2 Error:Modifier Attachment
1 Error:Clause Attachment
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM nein)
			(DM nein)
			(SIMPX das past schon)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK wissen)
				(MF sie)[01;31m)[00m
			[01;31m(SIMPX[00m [01;33m(SIMPX (NF[00m
				(LK kommen)
				[01;36m(MF[00m
					[01;31m(MF[00m
						(NX sie)
						(ADVX doch)
						(ADVX lieber)[01;31m)[00m
					[01;36m(ADVX[00m [01;31m(VC[00m
						(PTKVZ mit)[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;36m(VXINF[00m [01;36m(VC[00m [01;31m(LK[00m
					[01;31m(VXFIN[00m
						(VVFIN unternehmen)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m
				[01;36m(NF[00m [01;31m(MF[00m
					(ADVX abends)
					(ADVX noch)
					(NX was)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m)) [01;33mNF) SIMPX)[00m
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['LK', 'MF', 'VC', 'SU'], 'mover info': [('SU', (12, 16))], 'old_family': ['SU', 'SU', 'SU'], 'start left siblings': ['SU', 'SU'], 'auto preterminals': ('PTKANT', 'PTKANT', 'PDS', 'VVFIN', 'ADV', 'VVFIN', 'PPER', 'VVIMP', 'PPER', 'ADV', 'ADV', 'PTKVZ', 'VVFIN', 'ADV', 'ADV', 'PIS'), 'start right siblings': [], 'end left siblings': ['LK', 'MF', 'VC'], 'auto preterminal span': (0, 16), 'adding node already present': False, 'movers': ['SU'], 'old_parent': 'TURN', 'added and moved': True, 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'NF'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM nein)
			(DM nein)
			(SIMPX das past schon)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK wissen)
				(MF sie)[01;31m)[00m
			(NF
				(SIMPX
					(LK kommen)
					[01;36m(MF[00m
						[01;31m(MF[00m
							(NX sie)
							(ADVX doch)
							(ADVX lieber)[01;31m)[00m
						[01;36m(ADVX[00m [01;31m(VC[00m
							(PTKVZ mit)[01;31m)[00m[01;36m)[00m[01;36m)[00m
					[01;31m(SU[00m
						[01;31m(SIMPX[00m
							[01;36m(VXINF[00m [01;36m(VC[00m [01;31m(LK[00m
								[01;31m(VXFIN[00m
									(VVFIN unternehmen)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m
							[01;36m(NF[00m [01;31m(MF[00m
								(ADVX abends)
								(ADVX noch)
								(NX was)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m))[01;31m)[00m))
Step:Single Word Phrase
{'family': ['LK', 'MF', 'ADVX', 'SU'], 'auto preterminal span': (11, 12), 'span': (11, 12), 'subtrees': ['PTKVZ'], 'parent': 'SIMPX', 'over_word': True, 'auto preterminals': ('PTKVZ',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VC', 'ADVX')}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM nein)
			(DM nein)
			(SIMPX das past schon)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK wissen)
				(MF sie)[01;31m)[00m
			(NF
				(SIMPX
					(LK kommen)
					[01;36m(MF[00m
						[01;31m(MF[00m
							(NX sie)
							(ADVX doch)
							(ADVX lieber)[01;31m)[00m
						(ADVX mit)[01;36m)[00m
					[01;31m(SU[00m
						[01;31m(SIMPX[00m
							[01;36m(VXINF[00m [01;36m(VC[00m [01;31m(LK[00m
								[01;31m(VXFIN[00m
									(VVFIN unternehmen)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m
							[01;36m(NF[00m [01;31m(MF[00m
								(ADVX abends)
								(ADVX noch)
								(NX was)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m))[01;31m)[00m))
Step:Different label
{'family': ['VC', 'MF'], 'auto preterminal span': (12, 13), 'span': (12, 13), 'subtrees': ['VXFIN'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('VVFIN',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('LK', 'VC')}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM nein)
			(DM nein)
			(SIMPX das past schon)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK wissen)
				(MF sie)[01;31m)[00m
			(NF
				(SIMPX
					(LK kommen)
					[01;36m(MF[00m
						[01;31m(MF[00m
							(NX sie)
							(ADVX doch)
							(ADVX lieber)[01;31m)[00m
						(ADVX mit)[01;36m)[00m
					[01;31m(SU[00m
						[01;31m(SIMPX[00m
							[01;36m(VXINF[00m
								(VC
									[01;31m(VXFIN[00m
										(VVFIN unternehmen)[01;31m)[00m)[01;36m)[00m
							[01;36m(NF[00m [01;31m(MF[00m
								(ADVX abends)
								(ADVX noch)
								(NX was)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m))[01;31m)[00m))
Step:Single Word Phrase
{'family': ['VXINF'], 'auto preterminal span': (12, 13), 'span': (12, 13), 'subtrees': ['VVFIN'], 'parent': 'VC', 'over_word': True, 'auto preterminals': ('VVFIN',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VXFIN', 'VXINF')}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM nein)
			(DM nein)
			(SIMPX das past schon)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK wissen)
				(MF sie)[01;31m)[00m
			(NF
				(SIMPX
					(LK kommen)
					[01;36m(MF[00m
						[01;31m(MF[00m
							(NX sie)
							(ADVX doch)
							(ADVX lieber)[01;31m)[00m
						(ADVX mit)[01;36m)[00m
					[01;31m(SU[00m
						[01;31m(SIMPX[00m
							(VC unternehmen)
							[01;36m(NF[00m [01;31m(MF[00m
								(ADVX abends)
								(ADVX noch)
								(NX was)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m))[01;31m)[00m))
Step:Different label
{'family': ['VC', 'NF'], 'auto preterminal span': (13, 16), 'span': (13, 16), 'subtrees': ['ADVX', 'ADVX', 'NX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('ADV', 'ADV', 'PIS'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('MF', 'NF')}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM nein)
			(DM nein)
			(SIMPX das past schon)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK wissen)
				(MF sie)[01;31m)[00m
			(NF
				(SIMPX
					(LK kommen)
					[01;36m(MF[00m
						[01;31m(MF[00m
							(NX sie)
							(ADVX doch)
							(ADVX lieber)[01;31m)[00m
						(ADVX mit)[01;36m)[00m
					[01;31m(SU[00m
						[01;31m(SIMPX[00m
							(VC unternehmen)
							(NF abends noch was)[01;31m)[00m[01;31m)[00m))[01;31m)[00m))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'ADVX', 'ADVX', 'ADVX'], 'mover info': [('ADVX', (11, 12))], 'old_family': ['LK', 'MF', 'ADVX', 'SU'], 'start left siblings': ['LK', 'MF'], 'auto preterminals': ('VVIMP', 'PPER', 'ADV', 'ADV', 'PTKVZ', 'VVFIN', 'ADV', 'ADV', 'PIS'), 'start right siblings': ['SU'], 'end left siblings': ['NX', 'ADVX', 'ADVX'], 'auto preterminal span': (7, 16), 'movers': ['ADVX'], 'old_parent': 'SIMPX', 'POS confusion': ('PTKVZ', 'PTKVZ'), 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM nein)
			(DM nein)
			(SIMPX das past schon)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK wissen)
				(MF sie)[01;31m)[00m
			(NF
				(SIMPX
					(LK kommen)
					(MF sie doch lieber mit)
					[01;31m(SU[00m
						[01;31m(SIMPX[00m
							(VC unternehmen)
							(NF abends noch was)[01;31m)[00m[01;31m)[00m))[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['DM', 'DM', 'SIMPX'], 'family': ['SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PTKANT', 'PDS', 'VVFIN', 'ADV', 'VVFIN', 'PPER', 'VVIMP', 'PPER', 'ADV', 'ADV', 'PTKVZ', 'VVFIN', 'ADV', 'ADV', 'PIS'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 16), 'span': (0, 5), 'left siblings': [], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM nein)
		(DM nein)
		(SIMPX das past schon)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK wissen)
				(MF sie)[01;31m)[00m
			(NF
				(SIMPX
					(LK kommen)
					(MF sie doch lieber mit)
					[01;31m(SU[00m
						[01;31m(SIMPX[00m
							(VC unternehmen)
							(NF abends noch was)[01;31m)[00m[01;31m)[00m))[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['SIMPX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'VVIMP', 'PPER', 'ADV', 'ADV', 'PTKVZ', 'VVFIN', 'ADV', 'ADV', 'PIS'), 'right siblings': ['NF'], 'parent': 'SU', 'auto preterminal span': (5, 16), 'span': (5, 7), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM nein)
		(DM nein)
		(SIMPX das past schon)
		[01;31m(SU[00m
			(LK wissen)
			(MF sie)
			(NF
				(SIMPX
					(LK kommen)
					(MF sie doch lieber mit)
					[01;31m(SU[00m
						[01;31m(SIMPX[00m
							(VC unternehmen)
							(NF abends noch was)[01;31m)[00m[01;31m)[00m))[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['LK', 'MF', 'NF'], 'family': ['DM', 'DM', 'SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PTKANT', 'PDS', 'VVFIN', 'ADV', 'VVFIN', 'PPER', 'VVIMP', 'PPER', 'ADV', 'ADV', 'PTKVZ', 'VVFIN', 'ADV', 'ADV', 'PIS'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 16), 'span': (5, 16), 'left siblings': ['DM', 'DM', 'SIMPX'], 'label': 'SU', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM nein)
		(DM nein)
		(SIMPX das past schon)
		(LK wissen)
		(MF sie)
		(NF
			(SIMPX
				(LK kommen)
				(MF sie doch lieber mit)
				[01;31m(SU[00m
					[01;31m(SIMPX[00m
						(VC unternehmen)
						(NF abends noch was)[01;31m)[00m[01;31m)[00m))))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['LK', 'MF', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVIMP', 'PPER', 'ADV', 'ADV', 'PTKVZ', 'VVFIN', 'ADV', 'ADV', 'PIS'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (7, 16), 'span': (12, 16), 'left siblings': ['LK', 'MF'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM nein)
		(DM nein)
		(SIMPX das past schon)
		(LK wissen)
		(MF sie)
		(NF
			(SIMPX
				(LK kommen)
				(MF sie doch lieber mit)
				[01;31m(SIMPX[00m
					(VC unternehmen)
					(NF abends noch was)[01;31m)[00m))))
Step:UNSET remove
{'subtrees': ['VC', 'NF'], 'family': ['LK', 'MF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVIMP', 'PPER', 'ADV', 'ADV', 'PTKVZ', 'VVFIN', 'ADV', 'ADV', 'PIS'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (7, 16), 'span': (12, 16), 'left siblings': ['LK', 'MF'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP nein nein das past schon wissen sie kommen sie doch lieber mit unternehmen abends noch was)

Sentence 415:
8 Initial errors
0 on fringe, 3 iterations
6 Error:UNSET move
1 Error:Co-ordination
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU ja das past mir sehr gut)
		[01;36m(SU[00m
			[01;36m(SU[00m
				[01;31m(SU[00m
					(DM also)
					[01;31m(SIMPX[00m [01;33m(SIMPX[00m
						(VF ich)
						(LK freue)
						[01;31m(MF[00m [01;33m(MF[00m
							(NX
								(PRF mich))[01;31m)[00m[01;31m)[00m[01;31m)[00m
				[01;31m(SU[00m
					(PX
						(APPR bis)
						(NX august))[01;31m)[00m [01;33mMF) SIMPX)[00m[01;36m)[00m
			(SU auf wiedersehen herr doll)[01;36m)[00m))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['NX', 'SU'], 'mover info': [('SU', (10, 12))], 'old_family': ['SU', 'SU', 'SU', 'SU'], 'start left siblings': ['SU', 'SU'], 'auto preterminals': ('PTKANT', 'PDS', 'VVFIN', 'PPER', 'ADV', 'ADJD', 'ADV', 'PPER', 'VVFIN', 'PRF', 'APPR', 'NN', 'APPR', 'NN', 'NN', 'NE'), 'start right siblings': ['SU'], 'end left siblings': ['NX'], 'auto preterminal span': (0, 16), 'movers': ['SU'], 'old_parent': 'TURN', 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU ja das past mir sehr gut)
		[01;36m(SU[00m
			(SU
				(DM also)
				(SIMPX
					(VF ich)
					(LK freue)
					(MF
						(NX mich)
						[01;31m(SU[00m
							(PX
								(APPR bis)
								(NX august))[01;31m)[00m)))
			(SU auf wiedersehen herr doll)[01;36m)[00m))
Step:Co-ordination
{'subtrees': ['SU', 'SU'], 'family': ['SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPER', 'VVFIN', 'PRF', 'APPR', 'NN', 'APPR', 'NN', 'NN', 'NE'), 'right siblings': [], 'left siblings': [(SU (DM (PTKANT ja)) (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VVFIN past))) (MF (NX (PPER mir)) (ADJX (ADVX (ADV sehr)) (ADJD gut)))))], 'auto preterminal span': (6, 16), 'span': (6, 16), 'parent': 'TURN', 'label': 'SU', 'classified_type': 'Co-ordination', 'type': 'add'}
(TOP
	(TURN
		(SU ja das past mir sehr gut)
		(SU
			(SU
				(DM also)
				(SIMPX
					(VF ich)
					(LK freue)
					(MF
						(NX mich)
						[01;31m(SU[00m
							(PX
								(APPR bis)
								(NX august))[01;31m)[00m)))
			(SU auf wiedersehen herr doll))))
Step:Unary
{'subtrees': ['PX'], 'family': ['NX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PRF', 'APPR', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (9, 12), 'span': (10, 12), 'left siblings': ['NX'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja das past mir sehr gut also ich freue mich bis august auf wiedersehen herr doll)

Sentence 416:
0 Initial errors
0 on fringe, 0 iterations

Sentence 417:
11 Initial errors
0 on fringe, 7 iterations
5 Error:UNSET move
1 Error:Clause Attachment
1 Error:Unary
1 Error:UNSET remove
1 Error:Unary
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM aha)
			(DM ja)
			(SIMPX schauen wir mal ob wir irgendeinen termin finden)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF dann)
				(LK ware)
				(MF es ja am besten)
				[01;31m(NF[00m
					(SIMPX
						(VF wir)
						(LK nahmen)
						(MF das wochenende))[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;36m(SIMPX[00m
					(VF vielleicht)
					(LK konnen)
					(MF wir ja noch ein bischen)
					(VC verlangern)[01;36m)[00m
				[01;31m(NF[00m [01;33m(SU (NX[00m
					(NX
						(ADJX eineinhalb)
						(NN tage))[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(NX
				(PIS nix))[01;31m)[00m)) [01;33mNX) SU)[00m
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['NF', 'NX'], 'mover info': [('NF', (28, 30))], 'old_family': ['VF', 'LK', 'MF', 'VC', 'NF'], 'start left siblings': ['VF', 'LK', 'MF', 'VC'], 'auto preterminals': ('ITJ', 'PTKANT', 'VVFIN', 'PPER', 'ADV', 'KOUS', 'PPER', 'PIAT', 'NN', 'VVFIN', 'ADV', 'VAFIN', 'PPER', 'ADV', 'PTKA', 'ADJD', 'PPER', 'VVFIN', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'VVINF', 'CARD', 'NN', 'PIS'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 31), 'adding node already present': False, 'movers': ['NF'], 'old_parent': 'SIMPX', 'added and moved': True, 'end right siblings': ['NX'], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM aha)
			(DM ja)
			(SIMPX schauen wir mal ob wir irgendeinen termin finden)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF dann)
				(LK ware)
				(MF es ja am besten)
				[01;31m(NF[00m
					(SIMPX
						(VF wir)
						(LK nahmen)
						(MF das wochenende))[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF vielleicht)
				(LK konnen)
				(MF wir ja noch ein bischen)
				(VC verlangern))[01;31m)[00m
		(NX
			(SU
				[01;31m(NF[00m
					(NX
						(ADJX eineinhalb)
						(NN tage))[01;31m)[00m
				(NX nix)))))
Step:Clause Attachment
{'subtrees': ['DM', 'DM', 'SIMPX'], 'family': ['SU', 'SU', 'SU', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PTKANT', 'VVFIN', 'PPER', 'ADV', 'KOUS', 'PPER', 'PIAT', 'NN', 'VVFIN', 'ADV', 'VAFIN', 'PPER', 'ADV', 'PTKA', 'ADJD', 'PPER', 'VVFIN', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'VVINF', 'CARD', 'NN', 'PIS'), 'right siblings': ['SU', 'SU', 'NX'], 'parent': 'TURN', 'auto preterminal span': (0, 31), 'span': (0, 10), 'left siblings': [], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM aha)
		(DM ja)
		(SIMPX schauen wir mal ob wir irgendeinen termin finden)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF dann)
				(LK ware)
				(MF es ja am besten)
				[01;31m(NF[00m
					(SIMPX
						(VF wir)
						(LK nahmen)
						(MF das wochenende))[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF vielleicht)
				(LK konnen)
				(MF wir ja noch ein bischen)
				(VC verlangern))[01;31m)[00m
		(NX
			(SU
				[01;31m(NF[00m
					(NX
						(ADJX eineinhalb)
						(NN tage))[01;31m)[00m
				(NX nix)))))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['DM', 'DM', 'SIMPX', 'SU', 'SU', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PTKANT', 'VVFIN', 'PPER', 'ADV', 'KOUS', 'PPER', 'PIAT', 'NN', 'VVFIN', 'ADV', 'VAFIN', 'PPER', 'ADV', 'PTKA', 'ADJD', 'PPER', 'VVFIN', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'VVINF', 'CARD', 'NN', 'PIS'), 'right siblings': ['SU', 'NX'], 'parent': 'TURN', 'auto preterminal span': (0, 31), 'span': (10, 20), 'left siblings': ['DM', 'DM', 'SIMPX'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM aha)
		(DM ja)
		(SIMPX schauen wir mal ob wir irgendeinen termin finden)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK ware)
			(MF es ja am besten)
			[01;31m(NF[00m
				(SIMPX
					(VF wir)
					(LK nahmen)
					(MF das wochenende))[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF vielleicht)
				(LK konnen)
				(MF wir ja noch ein bischen)
				(VC verlangern))[01;31m)[00m
		(NX
			(SU
				[01;31m(NF[00m
					(NX
						(ADJX eineinhalb)
						(NN tage))[01;31m)[00m
				(NX nix)))))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'NF'], 'family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'SU', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PTKANT', 'VVFIN', 'PPER', 'ADV', 'KOUS', 'PPER', 'PIAT', 'NN', 'VVFIN', 'ADV', 'VAFIN', 'PPER', 'ADV', 'PTKA', 'ADJD', 'PPER', 'VVFIN', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'VVINF', 'CARD', 'NN', 'PIS'), 'right siblings': ['SU', 'NX'], 'parent': 'TURN', 'auto preterminal span': (0, 31), 'span': (10, 20), 'left siblings': ['DM', 'DM', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM aha)
		(DM ja)
		(SIMPX schauen wir mal ob wir irgendeinen termin finden)
		(VF dann)
		(LK ware)
		(MF es ja am besten)
		[01;31m(NF[00m
			(SIMPX
				(VF wir)
				(LK nahmen)
				(MF das wochenende))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF vielleicht)
				(LK konnen)
				(MF wir ja noch ein bischen)
				(VC verlangern))[01;31m)[00m
		(NX
			(SU
				[01;31m(NF[00m
					(NX
						(ADJX eineinhalb)
						(NN tage))[01;31m)[00m
				(NX nix)))))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['DM', 'DM', 'SIMPX', 'VF', 'LK', 'MF', 'NF', 'SU', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PTKANT', 'VVFIN', 'PPER', 'ADV', 'KOUS', 'PPER', 'PIAT', 'NN', 'VVFIN', 'ADV', 'VAFIN', 'PPER', 'ADV', 'PTKA', 'ADJD', 'PPER', 'VVFIN', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'VVINF', 'CARD', 'NN', 'PIS'), 'right siblings': ['SU', 'NX'], 'parent': 'TURN', 'auto preterminal span': (0, 31), 'span': (16, 20), 'left siblings': ['DM', 'DM', 'SIMPX', 'VF', 'LK', 'MF'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM aha)
		(DM ja)
		(SIMPX schauen wir mal ob wir irgendeinen termin finden)
		(VF dann)
		(LK ware)
		(MF es ja am besten)
		(SIMPX wir nahmen das wochenende)
		[01;31m(SU[00m
			(SIMPX
				(VF vielleicht)
				(LK konnen)
				(MF wir ja noch ein bischen)
				(VC verlangern))[01;31m)[00m
		(NX
			(SU
				[01;31m(NF[00m
					(NX
						(ADJX eineinhalb)
						(NN tage))[01;31m)[00m
				(NX nix)))))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['DM', 'DM', 'SIMPX', 'VF', 'LK', 'MF', 'SIMPX', 'SU', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PTKANT', 'VVFIN', 'PPER', 'ADV', 'KOUS', 'PPER', 'PIAT', 'NN', 'VVFIN', 'ADV', 'VAFIN', 'PPER', 'ADV', 'PTKA', 'ADJD', 'PPER', 'VVFIN', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'VVINF', 'CARD', 'NN', 'PIS'), 'right siblings': ['NX'], 'parent': 'TURN', 'auto preterminal span': (0, 31), 'span': (20, 28), 'left siblings': ['DM', 'DM', 'SIMPX', 'VF', 'LK', 'MF', 'SIMPX'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM aha)
		(DM ja)
		(SIMPX schauen wir mal ob wir irgendeinen termin finden)
		(VF dann)
		(LK ware)
		(MF es ja am besten)
		(SIMPX wir nahmen das wochenende)
		(SIMPX vielleicht konnen wir ja noch ein bischen verlangern)
		(NX
			(SU
				[01;31m(NF[00m
					(NX
						(ADJX eineinhalb)
						(NN tage))[01;31m)[00m
				(NX nix)))))
Step:Unary
{'subtrees': ['NX'], 'family': ['NF', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'NN', 'PIS'), 'right siblings': ['NX'], 'parent': 'SU', 'auto preterminal span': (28, 31), 'span': (28, 30), 'left siblings': [], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP aha ja schauen wir mal ob wir irgendeinen termin finden dann ware es ja am besten wir nahmen das wochenende vielleicht konnen wir ja noch ein bischen verlangern eineinhalb tage nix)

Sentence 418:
7 Initial errors
0 on fringe, 7 iterations
1 Error:UNSET add
1 Error:Clause Attachment
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET add
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU ah frau schmidt das ist ja wirklich schade)
		[01;31m(SU[00m
			(SIMPX
				[01;36m(SIMPX[00m
					(VF sie)
					(LK wissen)
					(MF doch)[01;36m)[00m
				[01;31m(NF[00m
					(SIMPX
						(VF mit ihnen)
						(LK fahre)
						(MF ich so gern immer)
						(VC weg))[01;31m)[00m)
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF sie)
				(LK bestehen)
				[01;33m(MF[00m (MF immer auf diese eineinhalb tage)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK finde)
				(MF ich wirklich schade)[01;31m)[00m[01;31m)[00m)) [01;33mMF)[00m
Step:UNSET add
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['SIMPX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ADV'), 'right siblings': [(NF (SIMPX (VF (PX (APPR mit) (NX (PPER ihnen)))) (LK (VXFIN (VVFIN fahre))) (MF (NX (PPER ich)) (ADVX (ADVX (ADV so)) (ADV gern)) (ADVX (ADV immer))) (VC (PTKVZ weg))))], 'left siblings': [], 'auto preterminal span': (8, 11), 'span': (8, 11), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU ah frau schmidt das ist ja wirklich schade)
		[01;31m(SU[00m
			(SIMPX
				(SIMPX sie wissen doch)
				[01;31m(NF[00m
					(SIMPX
						(VF mit ihnen)
						(LK fahre)
						(MF ich so gern immer)
						(VC weg))[01;31m)[00m)
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF sie)
				(LK bestehen)
				[01;33m(MF[00m (MF immer auf diese eineinhalb tage)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK finde)
				(MF ich wirklich schade)[01;31m)[00m[01;31m)[00m)) [01;33mMF)[00m
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'NN', 'NE', 'PDS', 'VAFIN', 'ADV', 'ADV', 'ADJD', 'PPER', 'VVFIN', 'ADV', 'APPR', 'PPER', 'VVFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'PTKVZ', 'KON', 'PPER', 'VVFIN', 'ADV', 'APPR', 'PDAT', 'CARD', 'NN', 'VVFIN', 'PPER', 'ADV', 'ADJD'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 31), 'span': (8, 27), 'left siblings': ['SU'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU ah frau schmidt das ist ja wirklich schade)
		(SIMPX
			(SIMPX sie wissen doch)
			[01;31m(NF[00m
				(SIMPX
					(VF mit ihnen)
					(LK fahre)
					(MF ich so gern immer)
					(VC weg))[01;31m)[00m)
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF sie)
			(LK bestehen)
			[01;33m(MF[00m (MF immer auf diese eineinhalb tage)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK finde)
				(MF ich wirklich schade)[01;31m)[00m[01;31m)[00m)) [01;33mMF)[00m
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SIMPX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'APPR', 'PPER', 'VVFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'PTKVZ'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (8, 19), 'span': (11, 19), 'left siblings': ['SIMPX'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU ah frau schmidt das ist ja wirklich schade)
		(SIMPX sie wissen doch mit ihnen fahre ich so gern immer weg)
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF sie)
			(LK bestehen)
			[01;33m(MF[00m (MF immer auf diese eineinhalb tage)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK finde)
				(MF ich wirklich schade)[01;31m)[00m[01;31m)[00m)) [01;33mMF)[00m
Step:UNSET remove
{'subtrees': ['KOORD', 'VF', 'LK', 'MF'], 'family': ['SU', 'SIMPX', 'SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'NN', 'NE', 'PDS', 'VAFIN', 'ADV', 'ADV', 'ADJD', 'PPER', 'VVFIN', 'ADV', 'APPR', 'PPER', 'VVFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'PTKVZ', 'KON', 'PPER', 'VVFIN', 'ADV', 'APPR', 'PDAT', 'CARD', 'NN', 'VVFIN', 'PPER', 'ADV', 'ADJD'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 31), 'span': (19, 27), 'left siblings': ['SU', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU ah frau schmidt das ist ja wirklich schade)
		(SIMPX sie wissen doch mit ihnen fahre ich so gern immer weg)
		(KOORD und)
		(VF sie)
		(LK bestehen)
		[01;36m(MF[00m
			(MF immer auf diese eineinhalb tage)
			[01;31m(SU[00m
				[01;31m(SIMPX[00m
					(LK finde)
					(MF ich wirklich schade)[01;31m)[00m[01;31m)[00m[01;36m)[00m))
Step:UNSET add
{'subtrees': ['MF', 'SU'], 'family': ['SU', 'SIMPX', 'KOORD', 'VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'APPR', 'PDAT', 'CARD', 'NN', 'VVFIN', 'PPER', 'ADV', 'ADJD'), 'right siblings': [], 'left siblings': [(SU (DM (ITJ ah)) (DM (NX (NN frau) (NE schmidt))) (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VAFIN ist))) (MF (ADVX (ADV ja)) (ADVX (ADV wirklich)) (ADJX (ADJD schade))))), (SIMPX (SIMPX (VF (NX (PPER sie))) (LK (VXFIN (VVFIN wissen))) (MF (ADVX (ADV doch)))) (SIMPX (VF (PX (APPR mit) (NX (PPER ihnen)))) (LK (VXFIN (VVFIN fahre))) (MF (NX (PPER ich)) (ADVX (ADVX (ADV so)) (ADV gern)) (ADVX (ADV immer))) (VC (PTKVZ weg)))), (KOORD (KON und)), (VF (NX (PPER sie))), (LK (VXFIN (VVFIN bestehen)))], 'auto preterminal span': (22, 31), 'span': (22, 31), 'parent': 'TURN', 'label': 'MF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU ah frau schmidt das ist ja wirklich schade)
		(SIMPX sie wissen doch mit ihnen fahre ich so gern immer weg)
		(KOORD und)
		(VF sie)
		(LK bestehen)
		(MF
			(MF immer auf diese eineinhalb tage)
			[01;31m(SU[00m
				[01;31m(SIMPX[00m
					(LK finde)
					(MF ich wirklich schade)[01;31m)[00m[01;31m)[00m)))
Step:Unary
{'subtrees': ['LK', 'MF'], 'family': ['SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'ADV', 'ADJD'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (27, 31), 'span': (27, 31), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU ah frau schmidt das ist ja wirklich schade)
		(SIMPX sie wissen doch mit ihnen fahre ich so gern immer weg)
		(KOORD und)
		(VF sie)
		(LK bestehen)
		(MF
			(MF immer auf diese eineinhalb tage)
			[01;31m(SU[00m
				(LK finde)
				(MF ich wirklich schade)[01;31m)[00m)))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['MF', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'APPR', 'PDAT', 'CARD', 'NN', 'VVFIN', 'PPER', 'ADV', 'ADJD'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (22, 31), 'span': (27, 31), 'left siblings': ['MF'], 'label': 'SU', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ah frau schmidt das ist ja wirklich schade sie wissen doch mit ihnen fahre ich so gern immer weg und sie bestehen immer auf diese eineinhalb tage finde ich wirklich schade)

Sentence 419:
2 Initial errors
0 on fringe, 2 iterations
1 Error:UNSET remove
1 Error:UNSET add
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP [01;33m(SU[00m
	(TURN
		(SU schade frau schmidt)
		[01;31m(SU[00m
			(DM ja) [01;33mSU)[00m
			(DM nun)
			(NX ein wochenende)[01;31m)[00m
		(SU wann haben sie denn zeit)))
Step:UNSET remove
{'subtrees': ['DM', 'DM', 'NX'], 'family': ['SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'NN', 'NE', 'PTKANT', 'ADV', 'ART', 'NN', 'PWAV', 'VAFIN', 'PPER', 'ADV', 'NN'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 12), 'span': (3, 7), 'left siblings': ['SU'], 'label': 'SU', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		[01;36m(SU[00m
			(SU schade frau schmidt)
			(DM ja)[01;36m)[00m
		(DM nun)
		(NX ein wochenende)
		(SU wann haben sie denn zeit)))
Step:UNSET add
{'subtrees': ['SU', 'DM'], 'family': ['SU', 'DM', 'NX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'NN', 'NE', 'PTKANT'), 'right siblings': [(DM (ADVX (ADV nun))), (NX (ART ein) (NN wochenende)), (SU (SIMPX (VF (PX (PWAV wann))) (LK (VXFIN (VAFIN haben))) (MF (NX (PPER sie)) (ADVX (ADV denn)) (NX (NN zeit)))))], 'left siblings': [], 'auto preterminal span': (0, 4), 'span': (0, 4), 'parent': 'TURN', 'label': 'SU', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP schade frau schmidt ja nun ein wochenende wann haben sie denn zeit)

Sentence 420:
7 Initial errors
0 on fringe, 3 iterations
5 Error:Clause Attachment
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;36m(SU[00m
				(DM nein)
				(SIMPX wir konnen auch einzelzimmer nehmen)[01;36m)[00m
			[01;31m(SIMPX[00m [01;33m(SU (SIMPX[00m
				(VF an dem)
				(LK soll)
				(MF es ja nicht)
				(VC liegen)[01;31m)[00m[01;31m)[00m
		[01;36m(NF[00m [01;31m(SU[00m
			(ADVX
				(ADVX nicht)
				(SIMPX das sie dann))[01;31m)[00m[01;36m)[00m)) [01;33mSIMPX) SU)[00m
Step:Clause Attachment
{'new_parent': 'SU', 'new_family': ['SIMPX', 'ADVX'], 'mover info': [('SIMPX', (6, 13))], 'old_family': ['DM', 'SIMPX', 'SIMPX'], 'start left siblings': ['DM', 'SIMPX'], 'auto preterminals': ('PTKANT', 'PPER', 'VMFIN', 'ADV', 'NN', 'VVINF', 'APPR', 'PDS', 'VMFIN', 'PPER', 'ADV', 'PTKNEG', 'VVINF', 'PTKNEG', 'KOUS', 'PPER', 'ADV'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 17), 'adding node already present': False, 'movers': ['SIMPX'], 'old_parent': 'SU', 'added and moved': True, 'end right siblings': ['ADVX'], 'classified_type': 'Clause Attachment', 'type': 'move', 'added label': 'NF'}
(TOP
	(TURN
		(SU nein wir konnen auch einzelzimmer nehmen)
		(SIMPX
			(SU
				[01;31m(SIMPX[00m
					(VF an dem)
					(LK soll)
					(MF es ja nicht)
					(VC liegen)[01;31m)[00m
				[01;36m(NF[00m
					(ADVX
						(ADVX nicht)
						(SIMPX das sie dann))[01;36m)[00m))))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['SIMPX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKNEG', 'KOUS', 'PPER', 'ADV'), 'right siblings': [], 'left siblings': [(SIMPX (VF (PX (APPR an) (NX (PDS dem)))) (LK (VXFIN (VMFIN soll))) (MF (NX (PPER es)) (ADVX (ADV ja)) (ADVX (PTKNEG nicht))) (VC (VXINF (VVINF liegen))))], 'auto preterminal span': (13, 17), 'span': (13, 17), 'parent': 'SU', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU nein wir konnen auch einzelzimmer nehmen)
		(SIMPX
			(SU
				[01;31m(SIMPX[00m
					(VF an dem)
					(LK soll)
					(MF es ja nicht)
					(VC liegen)[01;31m)[00m
				(NF nicht das sie dann)))))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['SIMPX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'PDS', 'VMFIN', 'PPER', 'ADV', 'PTKNEG', 'VVINF', 'PTKNEG', 'KOUS', 'PPER', 'ADV'), 'right siblings': ['NF'], 'parent': 'SU', 'auto preterminal span': (6, 17), 'span': (6, 13), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP nein wir konnen auch einzelzimmer nehmen an dem soll es ja nicht liegen nicht das sie dann)

Sentence 421:
12 Initial errors
0 on fringe, 6 iterations
7 Error:Clause Attachment
1 Error:Unary
1 Error:UNSET remove
1 Error:Clause Attachment
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU ach frau schmidt da mus ich zuerst mal uberlegen was romantischer ist)
		[01;31m(SU[00m [01;33m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF ich)
				(LK denke)
				(MF ja)
				[01;31m(NF[00m [01;33m(P (NF[00m
					[01;31m(SIMPX[00m
						(VF im zug)
						(LK ist)
						[01;33m(MF (ADJX[00m (MF viel romantischer)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK brauchen)
				(MF wir viel langer)[01;31m)[00m [01;33mADJX) MF) NF) P) SIMPX)[00m
			[01;36m(SU[00m
				(SIMPX
					(LK habe)
					(MF ich mehr von ihnen))[01;36m)[00m[01;31m)[00m))
Step:Clause Attachment
{'new_parent': 'NF', 'new_family': ['SIMPX', 'SIMPX'], 'mover info': [('SIMPX', (20, 24))], 'old_family': ['SIMPX', 'SIMPX'], 'start left siblings': [], 'auto preterminals': ('ITJ', 'NN', 'NE', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'VVINF', 'PWS', 'ADJD', 'VAFIN', 'PPER', 'VVFIN', 'ADV', 'APPRART', 'NN', 'VAFIN', 'ADV', 'ADJD', 'VVFIN', 'PPER', 'ADV', 'ADJD', 'VAFIN', 'PPER', 'PIS', 'APPR', 'PPER'), 'start right siblings': ['SIMPX'], 'end left siblings': ['SIMPX'], 'auto preterminal span': (0, 29), 'adding node already present': False, 'movers': ['SIMPX'], 'old_parent': 'SU', 'added and moved': True, 'end right siblings': [], 'classified_type': 'Clause Attachment', 'type': 'move', 'added label': 'P'}
(TOP
	(TURN
		(SU ach frau schmidt da mus ich zuerst mal uberlegen was romantischer ist)
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK denke)
				(MF ja)
				(P
					(NF
						[01;31m(SIMPX[00m
							(VF im zug)
							(LK ist)
							[01;33m(MF (ADJX[00m (MF viel romantischer)[01;31m)[00m
						[01;31m(SIMPX[00m
							(LK brauchen)
							(MF wir viel langer)[01;31m)[00m)))[01;31m)[00m [01;33mADJX) MF)[00m
		(SU habe ich mehr von ihnen)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'NN', 'NE', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'VVINF', 'PWS', 'ADJD', 'VAFIN', 'PPER', 'VVFIN', 'ADV', 'APPRART', 'NN', 'VAFIN', 'ADV', 'ADJD', 'VVFIN', 'PPER', 'ADV', 'ADJD', 'VAFIN', 'PPER', 'PIS', 'APPR', 'PPER'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 29), 'span': (12, 24), 'left siblings': ['SU'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU ach frau schmidt da mus ich zuerst mal uberlegen was romantischer ist)
		(SIMPX
			(VF ich)
			(LK denke)
			(MF ja)
			(P
				(NF
					[01;31m(SIMPX[00m
						(VF im zug)
						(LK ist)
						[01;33m(MF (ADJX[00m (MF viel romantischer)[01;31m)[00m
					[01;31m(SIMPX[00m
						(LK brauchen)
						(MF wir viel langer)[01;31m)[00m))) [01;33mADJX) MF)[00m
		(SU habe ich mehr von ihnen)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'NN', 'VAFIN', 'ADV', 'ADJD', 'VVFIN', 'PPER', 'ADV', 'ADJD'), 'right siblings': ['SIMPX'], 'parent': 'NF', 'auto preterminal span': (15, 24), 'span': (15, 20), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU ach frau schmidt da mus ich zuerst mal uberlegen was romantischer ist)
		(SIMPX
			(VF ich)
			(LK denke)
			(MF ja)
			(P
				(NF
					(VF im zug)
					(LK ist)
					[01;36m(MF[00m
						[01;36m(ADJX[00m
							(MF viel romantischer)
							[01;31m(SIMPX[00m
								(LK brauchen)
								(MF wir viel langer)[01;31m)[00m[01;36m)[00m[01;36m)[00m)))
		(SU habe ich mehr von ihnen)))
Step:Clause Attachment
{'subtrees': ['MF', 'SIMPX'], 'family': ['VF', 'LK', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADJD', 'VVFIN', 'PPER', 'ADV', 'ADJD'), 'right siblings': [], 'left siblings': [(VF (PX (APPRART im) (NX (NN zug)))), (LK (VXFIN (VAFIN ist)))], 'auto preterminal span': (18, 24), 'span': (18, 24), 'parent': 'NF', 'label': 'ADJX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU ach frau schmidt da mus ich zuerst mal uberlegen was romantischer ist)
		(SIMPX
			(VF ich)
			(LK denke)
			(MF ja)
			(P
				(NF
					(VF im zug)
					(LK ist)
					[01;36m(MF[00m
						(ADJX
							(MF viel romantischer)
							[01;31m(SIMPX[00m
								(LK brauchen)
								(MF wir viel langer)[01;31m)[00m)[01;36m)[00m)))
		(SU habe ich mehr von ihnen)))
Step:Unary
{'subtrees': ['ADJX'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADJD', 'VVFIN', 'PPER', 'ADV', 'ADJD'), 'right siblings': [], 'left siblings': [(VF (PX (APPRART im) (NX (NN zug)))), (LK (VXFIN (VAFIN ist)))], 'auto preterminal span': (18, 24), 'span': (18, 24), 'parent': 'NF', 'label': 'MF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU ach frau schmidt da mus ich zuerst mal uberlegen was romantischer ist)
		(SIMPX
			(VF ich)
			(LK denke)
			(MF ja)
			(P
				(NF
					(VF im zug)
					(LK ist)
					(MF
						(ADJX
							(MF viel romantischer)
							[01;31m(SIMPX[00m
								(LK brauchen)
								(MF wir viel langer)[01;31m)[00m)))))
		(SU habe ich mehr von ihnen)))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['MF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADJD', 'VVFIN', 'PPER', 'ADV', 'ADJD'), 'right siblings': [], 'parent': 'ADJX', 'auto preterminal span': (18, 24), 'span': (20, 24), 'left siblings': ['MF'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ach frau schmidt da mus ich zuerst mal uberlegen was romantischer ist ich denke ja im zug ist viel romantischer brauchen wir viel langer habe ich mehr von ihnen)

Sentence 422:
18 Initial errors
0 on fringe, 15 iterations
2 Error:Single Word Phrase
2 Error:Clause Attachment
2 Error:Clause Attachment
1 Error:Unary
1 Error:Unary
1 Error:PP Attachment
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:Unary
1 Error:UNSET remove
1 Error:Clause Attachment
1 Error:Unary
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM gut)
			[01;31m(NX[00m
				[01;36m(DM[00m
					(ADVX
						(ADV also))[01;36m)[00m
				[01;36m(LV[00m
					(NX
						(ART den)
						(NN zug))[01;36m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF wir)
				(LK brauchen)
				(MF von munchen nach hannover viereinhalb stunden)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m [01;33m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF ich)
				(LK wurde)
				(VC sagen)
				[01;31m(NF[00m
					[01;31m(P[00m
						[01;36m(NF[00m
							(SIMPX
								(VF
									(SIMPX
										(C damit)
										(MF
											(NX wir)
											(ADVX auch)
											[01;36m(NX[00m
												(NX was)
												(PX von der zugfahrt)[01;36m)[00m)
										(VC haben)))
								(LK fahren)
								(MF wir nicht zu fruh)
								(VC los)) [01;33mSIMPX)[00m[01;36m)[00m
						(KOUS weil)
						(SIMPX
							(VF sonst)
							(LK bin)
							(MF
								(NX ich)
								[01;36m(PX[00m [01;31m(ADJX[00m
									(ADJD unausgeschlafen)[01;31m)[00m[01;36m)[00m))[01;31m)[00m[01;31m)[00m[01;31m)[00m
			[01;36m(VF[00m
				(SIMPX
					(VF da)
					(LK haben)
					(MF sie dann von mir nix))[01;36m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK wurde)
				(MF ich)
				(VC sagen)
				(NF so elf uhr mit dem zug)[01;31m)[00m[01;31m)[00m))
Step:Single Word Phrase
{'family': ['NX', 'PX'], 'auto preterminal span': (33, 34), 'span': (33, 34), 'subtrees': ['ADJD'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('ADJD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'PX')}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM gut)
			[01;31m(NX[00m
				[01;36m(DM[00m
					(ADVX
						(ADV also))[01;36m)[00m
				[01;36m(LV[00m
					(NX
						(ART den)
						(NN zug))[01;36m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF wir)
				(LK brauchen)
				(MF von munchen nach hannover viereinhalb stunden)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m [01;33m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF ich)
				(LK wurde)
				(VC sagen)
				[01;31m(NF[00m
					[01;31m(P[00m
						[01;36m(NF[00m
							(SIMPX
								(VF
									(SIMPX
										(C damit)
										(MF
											(NX wir)
											(ADVX auch)
											[01;36m(NX[00m
												(NX was)
												(PX von der zugfahrt)[01;36m)[00m)
										(VC haben)))
								(LK fahren)
								(MF wir nicht zu fruh)
								(VC los)) [01;33mSIMPX)[00m[01;36m)[00m
						(KOUS weil)
						(SIMPX sonst bin ich unausgeschlafen)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			[01;36m(VF[00m
				(SIMPX
					(VF da)
					(LK haben)
					(MF sie dann von mir nix))[01;36m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK wurde)
				(MF ich)
				(VC sagen)
				(NF so elf uhr mit dem zug)[01;31m)[00m[01;31m)[00m))
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'VC', 'NF', 'KOUS', 'SIMPX'], 'mover info': [('KOUS', (29, 30)), ('SIMPX', (30, 34))], 'old_family': ['SIMPX', 'KOUS', 'SIMPX'], 'start left siblings': ['SIMPX'], 'auto preterminals': ('PPER', 'VAFIN', 'VVINF', 'KOUS', 'PPER', 'ADV', 'PIS', 'APPR', 'ART', 'NN', 'VAFIN', 'VVFIN', 'PPER', 'PTKNEG', 'PTKA', 'ADJD', 'PTKVZ', 'KOUS', 'ADV', 'VAFIN', 'PPER', 'ADJD'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'VC', 'NF'], 'auto preterminal span': (12, 34), 'movers': ['KOUS', 'SIMPX'], 'old_parent': 'P', 'end right siblings': [], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM gut)
			[01;31m(NX[00m
				[01;36m(DM[00m
					(ADVX
						(ADV also))[01;36m)[00m
				[01;36m(LV[00m
					(NX
						(ART den)
						(NN zug))[01;36m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF wir)
				(LK brauchen)
				(MF von munchen nach hannover viereinhalb stunden)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;36m(SIMPX[00m
					(VF ich)
					(LK wurde)
					(VC sagen)
					(NF
						[01;31m(P[00m
							(SIMPX
								(VF
									(SIMPX
										(C damit)
										(MF
											(NX wir)
											(ADVX auch)
											[01;36m(NX[00m
												(NX was)
												(PX von der zugfahrt)[01;36m)[00m)
										(VC haben)))
								(LK fahren)
								(MF wir nicht zu fruh)
								(VC los))[01;31m)[00m)[01;36m)[00m
				(KOUS weil)
				(SIMPX sonst bin ich unausgeschlafen)[01;31m)[00m
			[01;36m(VF[00m
				(SIMPX
					(VF da)
					(LK haben)
					(MF sie dann von mir nix))[01;36m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK wurde)
				(MF ich)
				(VC sagen)
				(NF so elf uhr mit dem zug)[01;31m)[00m[01;31m)[00m))
Step:Clause Attachment
{'new_parent': 'SU', 'new_family': ['SIMPX', 'KOUS', 'SIMPX', 'SIMPX'], 'mover info': [('KOUS', (29, 30)), ('SIMPX', (30, 34))], 'old_family': ['VF', 'LK', 'VC', 'NF', 'KOUS', 'SIMPX'], 'start left siblings': ['VF', 'LK', 'VC', 'NF'], 'auto preterminals': ('PPER', 'VAFIN', 'VVINF', 'KOUS', 'PPER', 'ADV', 'PIS', 'APPR', 'ART', 'NN', 'VAFIN', 'VVFIN', 'PPER', 'PTKNEG', 'PTKA', 'ADJD', 'PTKVZ', 'KOUS', 'ADV', 'VAFIN', 'PPER', 'ADJD', 'ADV', 'VAFIN', 'PPER', 'ADV', 'APPR', 'PPER', 'PIS'), 'start right siblings': [], 'end left siblings': ['SIMPX'], 'auto preterminal span': (12, 41), 'movers': ['KOUS', 'SIMPX'], 'old_parent': 'SIMPX', 'end right siblings': ['SIMPX'], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM gut)
			[01;31m(NX[00m
				[01;36m(DM[00m
					(ADVX
						(ADV also))[01;36m)[00m
				[01;36m(LV[00m
					(NX
						(ART den)
						(NN zug))[01;36m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF wir)
				(LK brauchen)
				(MF von munchen nach hannover viereinhalb stunden)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK wurde)
				(VC sagen)
				(NF
					[01;31m(P[00m
						(SIMPX
							(VF
								(SIMPX
									(C damit)
									(MF
										(NX wir)
										(ADVX auch)
										[01;36m(NX[00m
											(NX was)
											(PX von der zugfahrt)[01;36m)[00m)
									(VC haben)))
							(LK fahren)
							(MF wir nicht zu fruh)
							(VC los))[01;31m)[00m))
			(KOUS weil)
			(SIMPX sonst bin ich unausgeschlafen)
			[01;36m(VF[00m
				(SIMPX
					(VF da)
					(LK haben)
					(MF sie dann von mir nix))[01;36m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK wurde)
				(MF ich)
				(VC sagen)
				(NF so elf uhr mit dem zug)[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['DM', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV',), 'right siblings': [(NX (ART den) (NN zug))], 'left siblings': [], 'auto preterminal span': (1, 2), 'span': (1, 2), 'parent': 'NX', 'label': 'DM', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM gut)
			[01;31m(NX[00m
				(DM also)
				[01;36m(LV[00m
					(NX
						(ART den)
						(NN zug))[01;36m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF wir)
				(LK brauchen)
				(MF von munchen nach hannover viereinhalb stunden)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK wurde)
				(VC sagen)
				(NF
					[01;31m(P[00m
						(SIMPX
							(VF
								(SIMPX
									(C damit)
									(MF
										(NX wir)
										(ADVX auch)
										[01;36m(NX[00m
											(NX was)
											(PX von der zugfahrt)[01;36m)[00m)
									(VC haben)))
							(LK fahren)
							(MF wir nicht zu fruh)
							(VC los))[01;31m)[00m))
			(KOUS weil)
			(SIMPX sonst bin ich unausgeschlafen)
			[01;36m(VF[00m
				(SIMPX
					(VF da)
					(LK haben)
					(MF sie dann von mir nix))[01;36m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK wurde)
				(MF ich)
				(VC sagen)
				(NF so elf uhr mit dem zug)[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['NX'], 'family': ['DM', 'LV'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN'), 'right siblings': [], 'left siblings': [(DM (ADVX (ADV also)))], 'auto preterminal span': (2, 4), 'span': (2, 4), 'parent': 'NX', 'label': 'LV', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM gut)
			[01;31m(NX[00m
				(DM also)
				(LV den zug)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF wir)
				(LK brauchen)
				(MF von munchen nach hannover viereinhalb stunden)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK wurde)
				(VC sagen)
				(NF
					[01;31m(P[00m
						(SIMPX
							(VF
								(SIMPX
									(C damit)
									(MF
										(NX wir)
										(ADVX auch)
										[01;36m(NX[00m
											(NX was)
											(PX von der zugfahrt)[01;36m)[00m)
									(VC haben)))
							(LK fahren)
							(MF wir nicht zu fruh)
							(VC los))[01;31m)[00m))
			(KOUS weil)
			(SIMPX sonst bin ich unausgeschlafen)
			[01;36m(VF[00m
				(SIMPX
					(VF da)
					(LK haben)
					(MF sie dann von mir nix))[01;36m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK wurde)
				(MF ich)
				(VC sagen)
				(NF so elf uhr mit dem zug)[01;31m)[00m[01;31m)[00m))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['NX', 'ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PIS', 'APPR', 'ART', 'NN'), 'right siblings': [], 'left siblings': [(NX (PPER wir)), (ADVX (ADV auch))], 'auto preterminal span': (18, 22), 'span': (18, 22), 'parent': 'MF', 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM gut)
			[01;31m(NX[00m
				(DM also)
				(LV den zug)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF wir)
				(LK brauchen)
				(MF von munchen nach hannover viereinhalb stunden)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK wurde)
				(VC sagen)
				(NF
					[01;31m(P[00m
						(SIMPX
							(VF damit wir auch was von der zugfahrt haben)
							(LK fahren)
							(MF wir nicht zu fruh)
							(VC los))[01;31m)[00m))
			(KOUS weil)
			(SIMPX sonst bin ich unausgeschlafen)
			[01;36m(VF[00m
				(SIMPX
					(VF da)
					(LK haben)
					(MF sie dann von mir nix))[01;36m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK wurde)
				(MF ich)
				(VC sagen)
				(NF so elf uhr mit dem zug)[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SIMPX', 'KOUS', 'SIMPX', 'VF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'ADV', 'APPR', 'PPER', 'PIS'), 'right siblings': [], 'left siblings': [(SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VAFIN wurde))) (VC (VXINF (VVINF sagen))) (NF (P (SIMPX (VF (SIMPX (C (KOUS damit)) (MF (NX (PPER wir)) (ADVX (ADV auch)) (NX (NX (PIS was)) (PX (APPR von) (NX (ART der) (NN zugfahrt))))) (VC (VXFIN (VAFIN haben))))) (LK (VXFIN (VVFIN fahren))) (MF (NX (PPER wir)) (ADVX (PTKNEG nicht)) (ADJX (PTKA zu) (ADJD fruh))) (VC (PTKVZ los)))))), (KOUS weil), (SIMPX (VF (ADVX (ADV sonst))) (LK (VXFIN (VAFIN bin))) (MF (NX (PPER ich)) (PX (ADJD unausgeschlafen))))], 'auto preterminal span': (34, 41), 'span': (34, 41), 'parent': 'SU', 'label': 'VF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM gut)
			[01;31m(NX[00m
				(DM also)
				(LV den zug)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF wir)
				(LK brauchen)
				(MF von munchen nach hannover viereinhalb stunden)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK wurde)
				(VC sagen)
				(NF
					[01;31m(P[00m
						(SIMPX
							(VF damit wir auch was von der zugfahrt haben)
							(LK fahren)
							(MF wir nicht zu fruh)
							(VC los))[01;31m)[00m))
			(KOUS weil)
			(SIMPX sonst bin ich unausgeschlafen)
			(VF da haben sie dann von mir nix)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK wurde)
				(MF ich)
				(VC sagen)
				(NF so elf uhr mit dem zug)[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['DM', 'NX'], 'family': ['SU', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'ART', 'NN', 'PPER', 'VVFIN', 'APPR', 'NE', 'APPR', 'NE', 'CARD', 'NN', 'PPER', 'VAFIN', 'VVINF', 'KOUS', 'PPER', 'ADV', 'PIS', 'APPR', 'ART', 'NN', 'VAFIN', 'VVFIN', 'PPER', 'PTKNEG', 'PTKA', 'ADJD', 'PTKVZ', 'KOUS', 'ADV', 'VAFIN', 'PPER', 'ADJD', 'ADV', 'VAFIN', 'PPER', 'ADV', 'APPR', 'PPER', 'PIS', 'VAFIN', 'PPER', 'VVINF', 'ADV', 'CARD', 'NN', 'APPR', 'ART', 'NN'), 'right siblings': ['SU', 'SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 50), 'span': (0, 4), 'left siblings': [], 'label': 'SU', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM gut)
		[01;31m(NX[00m
			(DM also)
			(LV den zug)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF wir)
				(LK brauchen)
				(MF von munchen nach hannover viereinhalb stunden)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK wurde)
				(VC sagen)
				(NF
					[01;31m(P[00m
						(SIMPX
							(VF damit wir auch was von der zugfahrt haben)
							(LK fahren)
							(MF wir nicht zu fruh)
							(VC los))[01;31m)[00m))
			(KOUS weil)
			(SIMPX sonst bin ich unausgeschlafen)
			(VF da haben sie dann von mir nix)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK wurde)
				(MF ich)
				(VC sagen)
				(NF so elf uhr mit dem zug)[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['DM', 'LV'], 'family': ['DM', 'NX', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'ART', 'NN', 'PPER', 'VVFIN', 'APPR', 'NE', 'APPR', 'NE', 'CARD', 'NN', 'PPER', 'VAFIN', 'VVINF', 'KOUS', 'PPER', 'ADV', 'PIS', 'APPR', 'ART', 'NN', 'VAFIN', 'VVFIN', 'PPER', 'PTKNEG', 'PTKA', 'ADJD', 'PTKVZ', 'KOUS', 'ADV', 'VAFIN', 'PPER', 'ADJD', 'ADV', 'VAFIN', 'PPER', 'ADV', 'APPR', 'PPER', 'PIS', 'VAFIN', 'PPER', 'VVINF', 'ADV', 'CARD', 'NN', 'APPR', 'ART', 'NN'), 'right siblings': ['SU', 'SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 50), 'span': (1, 4), 'left siblings': ['DM'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM gut)
		(DM also)
		(LV den zug)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF wir)
				(LK brauchen)
				(MF von munchen nach hannover viereinhalb stunden)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK wurde)
				(VC sagen)
				(NF
					[01;31m(P[00m
						(SIMPX
							(VF damit wir auch was von der zugfahrt haben)
							(LK fahren)
							(MF wir nicht zu fruh)
							(VC los))[01;31m)[00m))
			(KOUS weil)
			(SIMPX sonst bin ich unausgeschlafen)
			(VF da haben sie dann von mir nix)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK wurde)
				(MF ich)
				(VC sagen)
				(NF so elf uhr mit dem zug)[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['DM', 'DM', 'LV', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'ART', 'NN', 'PPER', 'VVFIN', 'APPR', 'NE', 'APPR', 'NE', 'CARD', 'NN', 'PPER', 'VAFIN', 'VVINF', 'KOUS', 'PPER', 'ADV', 'PIS', 'APPR', 'ART', 'NN', 'VAFIN', 'VVFIN', 'PPER', 'PTKNEG', 'PTKA', 'ADJD', 'PTKVZ', 'KOUS', 'ADV', 'VAFIN', 'PPER', 'ADJD', 'ADV', 'VAFIN', 'PPER', 'ADV', 'APPR', 'PPER', 'PIS', 'VAFIN', 'PPER', 'VVINF', 'ADV', 'CARD', 'NN', 'APPR', 'ART', 'NN'), 'right siblings': ['SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 50), 'span': (4, 12), 'left siblings': ['DM', 'DM', 'LV'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM gut)
		(DM also)
		(LV den zug)
		[01;31m(SIMPX[00m
			(VF wir)
			(LK brauchen)
			(MF von munchen nach hannover viereinhalb stunden)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK wurde)
				(VC sagen)
				(NF
					[01;31m(P[00m
						(SIMPX
							(VF damit wir auch was von der zugfahrt haben)
							(LK fahren)
							(MF wir nicht zu fruh)
							(VC los))[01;31m)[00m))
			(KOUS weil)
			(SIMPX sonst bin ich unausgeschlafen)
			(VF da haben sie dann von mir nix)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK wurde)
				(MF ich)
				(VC sagen)
				(NF so elf uhr mit dem zug)[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['DM', 'DM', 'LV', 'SIMPX', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'ART', 'NN', 'PPER', 'VVFIN', 'APPR', 'NE', 'APPR', 'NE', 'CARD', 'NN', 'PPER', 'VAFIN', 'VVINF', 'KOUS', 'PPER', 'ADV', 'PIS', 'APPR', 'ART', 'NN', 'VAFIN', 'VVFIN', 'PPER', 'PTKNEG', 'PTKA', 'ADJD', 'PTKVZ', 'KOUS', 'ADV', 'VAFIN', 'PPER', 'ADJD', 'ADV', 'VAFIN', 'PPER', 'ADV', 'APPR', 'PPER', 'PIS', 'VAFIN', 'PPER', 'VVINF', 'ADV', 'CARD', 'NN', 'APPR', 'ART', 'NN'), 'right siblings': ['SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 50), 'span': (4, 12), 'left siblings': ['DM', 'DM', 'LV'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM gut)
		(DM also)
		(LV den zug)
		(VF wir)
		(LK brauchen)
		(MF von munchen nach hannover viereinhalb stunden)
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK wurde)
				(VC sagen)
				(NF
					[01;31m(P[00m
						(SIMPX
							(VF damit wir auch was von der zugfahrt haben)
							(LK fahren)
							(MF wir nicht zu fruh)
							(VC los))[01;31m)[00m))
			(KOUS weil)
			(SIMPX sonst bin ich unausgeschlafen)
			(VF da haben sie dann von mir nix)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK wurde)
				(MF ich)
				(VC sagen)
				(NF so elf uhr mit dem zug)[01;31m)[00m[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'KOUS', 'SIMPX', 'VF'], 'family': ['DM', 'DM', 'LV', 'VF', 'LK', 'MF', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'ART', 'NN', 'PPER', 'VVFIN', 'APPR', 'NE', 'APPR', 'NE', 'CARD', 'NN', 'PPER', 'VAFIN', 'VVINF', 'KOUS', 'PPER', 'ADV', 'PIS', 'APPR', 'ART', 'NN', 'VAFIN', 'VVFIN', 'PPER', 'PTKNEG', 'PTKA', 'ADJD', 'PTKVZ', 'KOUS', 'ADV', 'VAFIN', 'PPER', 'ADJD', 'ADV', 'VAFIN', 'PPER', 'ADV', 'APPR', 'PPER', 'PIS', 'VAFIN', 'PPER', 'VVINF', 'ADV', 'CARD', 'NN', 'APPR', 'ART', 'NN'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 50), 'span': (12, 41), 'left siblings': ['DM', 'DM', 'LV', 'VF', 'LK', 'MF'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM gut)
		(DM also)
		(LV den zug)
		(VF wir)
		(LK brauchen)
		(MF von munchen nach hannover viereinhalb stunden)
		(SIMPX
			(VF ich)
			(LK wurde)
			(VC sagen)
			(NF
				[01;31m(P[00m
					(SIMPX
						(VF damit wir auch was von der zugfahrt haben)
						(LK fahren)
						(MF wir nicht zu fruh)
						(VC los))[01;31m)[00m))
		(KOUS weil)
		(SIMPX sonst bin ich unausgeschlafen)
		(VF da haben sie dann von mir nix)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK wurde)
				(MF ich)
				(VC sagen)
				(NF so elf uhr mit dem zug)[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['P'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'PIS', 'APPR', 'ART', 'NN', 'VAFIN', 'VVFIN', 'PPER', 'PTKNEG', 'PTKA', 'ADJD', 'PTKVZ'), 'right siblings': [], 'parent': 'NF', 'auto preterminal span': (15, 29), 'span': (15, 29), 'left siblings': [], 'label': 'P', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM gut)
		(DM also)
		(LV den zug)
		(VF wir)
		(LK brauchen)
		(MF von munchen nach hannover viereinhalb stunden)
		(SIMPX ich wurde sagen damit wir auch was von der zugfahrt haben fahren wir nicht zu fruh los)
		(KOUS weil)
		(SIMPX sonst bin ich unausgeschlafen)
		(VF da haben sie dann von mir nix)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK wurde)
				(MF ich)
				(VC sagen)
				(NF so elf uhr mit dem zug)[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['LK', 'MF', 'VC', 'NF'], 'family': ['SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'PPER', 'VVINF', 'ADV', 'CARD', 'NN', 'APPR', 'ART', 'NN'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (41, 50), 'span': (41, 50), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM gut)
		(DM also)
		(LV den zug)
		(VF wir)
		(LK brauchen)
		(MF von munchen nach hannover viereinhalb stunden)
		(SIMPX ich wurde sagen damit wir auch was von der zugfahrt haben fahren wir nicht zu fruh los)
		(KOUS weil)
		(SIMPX sonst bin ich unausgeschlafen)
		(VF da haben sie dann von mir nix)
		[01;31m(SU[00m
			(LK wurde)
			(MF ich)
			(VC sagen)
			(NF so elf uhr mit dem zug)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['LK', 'MF', 'VC', 'NF'], 'family': ['DM', 'DM', 'LV', 'VF', 'LK', 'MF', 'SIMPX', 'KOUS', 'SIMPX', 'VF', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'ART', 'NN', 'PPER', 'VVFIN', 'APPR', 'NE', 'APPR', 'NE', 'CARD', 'NN', 'PPER', 'VAFIN', 'VVINF', 'KOUS', 'PPER', 'ADV', 'PIS', 'APPR', 'ART', 'NN', 'VAFIN', 'VVFIN', 'PPER', 'PTKNEG', 'PTKA', 'ADJD', 'PTKVZ', 'KOUS', 'ADV', 'VAFIN', 'PPER', 'ADJD', 'ADV', 'VAFIN', 'PPER', 'ADV', 'APPR', 'PPER', 'PIS', 'VAFIN', 'PPER', 'VVINF', 'ADV', 'CARD', 'NN', 'APPR', 'ART', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 50), 'span': (41, 50), 'left siblings': ['DM', 'DM', 'LV', 'VF', 'LK', 'MF', 'SIMPX', 'KOUS', 'SIMPX', 'VF'], 'label': 'SU', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP gut also den zug wir brauchen von munchen nach hannover viereinhalb stunden ich wurde sagen damit wir auch was von der zugfahrt haben fahren wir nicht zu fruh los weil sonst bin ich unausgeschlafen da haben sie dann von mir nix wurde ich sagen so elf uhr mit dem zug)

Sentence 423:
5 Initial errors
0 on fringe, 3 iterations
3 Error:UNSET move
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU dann schaue ich mal wann ein zug geht)
		[01;36m(SU[00m
			[01;31m(SU[00m
				(DM ja)
				[01;33m(SIMPX[00m (SIMPX das ware dann elf uhr und funfundzwanzig minuten)[01;31m)[00m
			[01;31m(SU[00m
				[01;31m(SIMPX[00m
					(LK past)
					(MF das)[01;31m)[00m[01;31m)[00m[01;36m)[00m)) [01;33mSIMPX)[00m
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['DM', 'SIMPX', 'SU'], 'mover info': [('SU', (17, 19))], 'old_family': ['SU', 'SU', 'SU'], 'start left siblings': ['SU', 'SU'], 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'ADV', 'PWAV', 'ART', 'NN', 'VVFIN', 'PTKANT', 'PDS', 'VAFIN', 'ADV', 'CARD', 'NN', 'KON', 'CARD', 'NN', 'VVFIN', 'PDS'), 'start right siblings': [], 'end left siblings': ['DM', 'SIMPX'], 'auto preterminal span': (0, 19), 'adding node already present': False, 'movers': ['SU'], 'old_parent': 'TURN', 'added and moved': True, 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'SIMPX'}
(TOP
	(TURN
		(SU dann schaue ich mal wann ein zug geht)
		(SU
			(DM ja)
			(SIMPX
				(SIMPX das ware dann elf uhr und funfundzwanzig minuten)
				[01;31m(SU[00m
					[01;31m(SIMPX[00m
						(LK past)
						(MF das)[01;31m)[00m[01;31m)[00m))))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VAFIN', 'ADV', 'CARD', 'NN', 'KON', 'CARD', 'NN', 'VVFIN', 'PDS'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (9, 19), 'span': (17, 19), 'left siblings': ['SIMPX'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU dann schaue ich mal wann ein zug geht)
		(SU
			(DM ja)
			(SIMPX
				(SIMPX das ware dann elf uhr und funfundzwanzig minuten)
				[01;31m(SIMPX[00m
					(LK past)
					(MF das)[01;31m)[00m))))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VAFIN', 'ADV', 'CARD', 'NN', 'KON', 'CARD', 'NN', 'VVFIN', 'PDS'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (9, 19), 'span': (17, 19), 'left siblings': ['SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP dann schaue ich mal wann ein zug geht ja das ware dann elf uhr und funfundzwanzig minuten past das)

Sentence 424:
10 Initial errors
0 on fringe, 7 iterations
2 Error:Different label
2 Error:Single Word Phrase
2 Error:UNSET move
1 Error:UNSET add
1 Error:Unary
1 Error:Unary
1 Error:Clause Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;36m(SIMPX[00m
					(VF sie)
					(LK horen)
					(MF sich heute so formlich)
					(VC an)[01;36m)[00m
				[01;36m(DM[00m [01;31m(NF[00m
					(NX
						(NN frau)
						(NE schmidt))[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX ist ihnen eine laus uber die leber gelaufen)
			(SIMPX
				[01;36m(DM[00m [01;31m(KOORD[00m
					(KON oder)[01;31m)[00m[01;36m)[00m
				[01;36m(SIMPX[00m
					[01;36m(SU[00m
						(VF wie)
						(LK sehe)
						(MF ich das)[01;36m)[00m[01;36m)[00m)[01;31m)[00m))
Step:Different label
{'family': ['VF', 'LK', 'MF', 'VC', 'DM'], 'auto preterminal span': (7, 9), 'span': (7, 9), 'subtrees': ['NX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('NN', 'NE'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('NF', 'DM')}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;36m(SIMPX[00m
					(VF sie)
					(LK horen)
					(MF sich heute so formlich)
					(VC an)[01;36m)[00m
				(DM frau schmidt)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX ist ihnen eine laus uber die leber gelaufen)
			(SIMPX
				[01;36m(DM[00m [01;31m(KOORD[00m
					(KON oder)[01;31m)[00m[01;36m)[00m
				[01;36m(SIMPX[00m
					[01;36m(SU[00m
						(VF wie)
						(LK sehe)
						(MF ich das)[01;36m)[00m[01;36m)[00m)[01;31m)[00m))
Step:Single Word Phrase
{'family': ['DM', 'VF', 'LK', 'MF'], 'auto preterminal span': (17, 18), 'span': (17, 18), 'subtrees': ['KON'], 'parent': 'SIMPX', 'over_word': True, 'auto preterminals': ('KON',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('KOORD', 'DM')}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;36m(SIMPX[00m
					(VF sie)
					(LK horen)
					(MF sich heute so formlich)
					(VC an)[01;36m)[00m
				(DM frau schmidt)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX ist ihnen eine laus uber die leber gelaufen)
			(SIMPX
				(DM oder)
				[01;36m(SIMPX[00m
					[01;36m(SU[00m
						(VF wie)
						(LK sehe)
						(MF ich das)[01;36m)[00m[01;36m)[00m)[01;31m)[00m))
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['DM', 'SIMPX', 'SIMPX'], 'mover info': [('DM', (7, 9))], 'old_family': ['VF', 'LK', 'MF', 'VC', 'DM'], 'start left siblings': ['VF', 'LK', 'MF', 'VC'], 'auto preterminals': ('PPER', 'VVFIN', 'PRF', 'ADV', 'ADV', 'ADJD', 'PTKVZ', 'NN', 'NE', 'VAFIN', 'PPER', 'ART', 'NN', 'APPR', 'ART', 'NN', 'VVPP', 'KON', 'PWAV', 'VVFIN', 'PPER', 'PDS'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 22), 'movers': ['DM'], 'old_parent': 'SIMPX', 'end right siblings': ['SIMPX', 'SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			(SIMPX
				(VF sie)
				(LK horen)
				(MF sich heute so formlich)
				(VC an))[01;31m)[00m
		[01;31m(SU[00m
			(DM frau schmidt)
			(SIMPX ist ihnen eine laus uber die leber gelaufen)
			(SIMPX
				(DM oder)
				[01;36m(SIMPX[00m
					[01;36m(SU[00m
						(VF wie)
						(LK sehe)
						(MF ich das)[01;36m)[00m[01;36m)[00m)[01;31m)[00m))
Step:UNSET add
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['DM', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PWAV', 'VVFIN', 'PPER', 'PDS'), 'right siblings': [], 'left siblings': [(DM (KON oder))], 'auto preterminal span': (18, 22), 'span': (18, 22), 'parent': 'SIMPX', 'label': 'SU', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(SIMPX
				(VF sie)
				(LK horen)
				(MF sich heute so formlich)
				(VC an))[01;31m)[00m
		[01;31m(SU[00m
			(DM frau schmidt)
			(SIMPX ist ihnen eine laus uber die leber gelaufen)
			(SIMPX
				(DM oder)
				[01;36m(SIMPX[00m
					(SU
						(VF wie)
						(LK sehe)
						(MF ich das))[01;36m)[00m)[01;31m)[00m))
Step:Unary
{'subtrees': ['SU'], 'family': ['DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PWAV', 'VVFIN', 'PPER', 'PDS'), 'right siblings': [], 'left siblings': [(DM (KON oder))], 'auto preterminal span': (18, 22), 'span': (18, 22), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(SIMPX
				(VF sie)
				(LK horen)
				(MF sich heute so formlich)
				(VC an))[01;31m)[00m
		[01;31m(SU[00m
			(DM frau schmidt)
			(SIMPX ist ihnen eine laus uber die leber gelaufen)
			(SIMPX oder wie sehe ich das)[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'PRF', 'ADV', 'ADV', 'ADJD', 'PTKVZ', 'NN', 'NE', 'VAFIN', 'PPER', 'ART', 'NN', 'APPR', 'ART', 'NN', 'VVPP', 'KON', 'PWAV', 'VVFIN', 'PPER', 'PDS'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 22), 'span': (0, 7), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX sie horen sich heute so formlich an)
		[01;31m(SU[00m
			(DM frau schmidt)
			(SIMPX ist ihnen eine laus uber die leber gelaufen)
			(SIMPX oder wie sehe ich das)[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['DM', 'SIMPX', 'SIMPX'], 'family': ['SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'PRF', 'ADV', 'ADV', 'ADJD', 'PTKVZ', 'NN', 'NE', 'VAFIN', 'PPER', 'ART', 'NN', 'APPR', 'ART', 'NN', 'VVPP', 'KON', 'PWAV', 'VVFIN', 'PPER', 'PDS'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 22), 'span': (7, 22), 'left siblings': ['SIMPX'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP sie horen sich heute so formlich an frau schmidt ist ihnen eine laus uber die leber gelaufen oder wie sehe ich das)

Sentence 425:
17 Initial errors
0 on fringe, 12 iterations
2 Error:Different label
2 Error:Single Word Phrase
2 Error:UNSET move
2 Error:UNSET move
2 Error:UNSET move
1 Error:Unary
1 Error:UNSET remove
1 Error:Unary
1 Error:Unary
1 Error:UNSET remove
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			[01;31m(SIMPX[00m
				[01;36m(SIMPX[00m
					(VF sie)
					(LK wollen)
					(MF abends noch was)
					(VC unternehmen)[01;36m)[00m
				[01;36m(DM[00m [01;31m(NF[00m
					(NX
						(NN frau)
						(NE schmidt))[01;31m)[00m[01;36m)[00m[01;31m)[00m)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF sie)
				(LK springen)
				(MF ja uber ihren schatten)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m [01;33m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF das)
				(LK ist)
				(MF mir ja ganz neu)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF bisher) [01;33mSIMPX)[00m
				(LK haben)
				[01;36m(MF[00m
					[01;31m(MF[00m
						(NX sie)
						(ADVX immer)[01;31m)[00m
					[01;36m(ADJX[00m [01;31m(VC[00m
						[01;31m(VXINF[00m
							(VVPP abgelehnt)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF sie)
				(LK machen)
				(MF mich noch ganz schwach))[01;31m)[00m))
Step:Different label
{'family': ['VF', 'LK', 'MF', 'VC', 'DM'], 'auto preterminal span': (6, 8), 'span': (6, 8), 'subtrees': ['NX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('NN', 'NE'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('NF', 'DM')}
(TOP
	(TURN
		(SU
			[01;31m(SIMPX[00m
				[01;36m(SIMPX[00m
					(VF sie)
					(LK wollen)
					(MF abends noch was)
					(VC unternehmen)[01;36m)[00m
				(DM frau schmidt)[01;31m)[00m)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF sie)
				(LK springen)
				(MF ja uber ihren schatten)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m [01;33m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF das)
				(LK ist)
				(MF mir ja ganz neu)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF bisher) [01;33mSIMPX)[00m
				(LK haben)
				[01;36m(MF[00m
					[01;31m(MF[00m
						(NX sie)
						(ADVX immer)[01;31m)[00m
					[01;36m(ADJX[00m [01;31m(VC[00m
						[01;31m(VXINF[00m
							(VVPP abgelehnt)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF sie)
				(LK machen)
				(MF mich noch ganz schwach))[01;31m)[00m))
Step:Single Word Phrase
{'family': ['ADJX'], 'auto preterminal span': (24, 25), 'span': (24, 25), 'subtrees': ['VVPP'], 'parent': 'VC', 'over_word': True, 'auto preterminals': ('VVPP',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VXINF', 'ADJX')}
(TOP
	(TURN
		(SU
			[01;31m(SIMPX[00m
				[01;36m(SIMPX[00m
					(VF sie)
					(LK wollen)
					(MF abends noch was)
					(VC unternehmen)[01;36m)[00m
				(DM frau schmidt)[01;31m)[00m)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF sie)
				(LK springen)
				(MF ja uber ihren schatten)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m [01;33m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF das)
				(LK ist)
				(MF mir ja ganz neu)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF bisher) [01;33mSIMPX)[00m
				(LK haben)
				[01;36m(MF[00m
					[01;31m(MF[00m
						(NX sie)
						(ADVX immer)[01;31m)[00m
					[01;31m(VC[00m
						(ADJX
							(VVPP abgelehnt))[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF sie)
				(LK machen)
				(MF mich noch ganz schwach))[01;31m)[00m))
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SIMPX', 'DM'], 'mover info': [('DM', (6, 8))], 'old_family': ['VF', 'LK', 'MF', 'VC', 'DM'], 'start left siblings': ['VF', 'LK', 'MF', 'VC'], 'auto preterminals': ('PPER', 'VMFIN', 'ADV', 'ADV', 'PIS', 'VVINF', 'NN', 'NE'), 'start right siblings': [], 'end left siblings': ['SIMPX'], 'auto preterminal span': (0, 8), 'movers': ['DM'], 'old_parent': 'SIMPX', 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU sie wollen abends noch was unternehmen frau schmidt)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF sie)
				(LK springen)
				(MF ja uber ihren schatten)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m [01;33m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF das)
				(LK ist)
				(MF mir ja ganz neu)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF bisher) [01;33mSIMPX)[00m
				(LK haben)
				[01;36m(MF[00m
					[01;31m(MF[00m
						(NX sie)
						(ADVX immer)[01;31m)[00m
					[01;31m(VC[00m
						(ADJX
							(VVPP abgelehnt))[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF sie)
				(LK machen)
				(MF mich noch ganz schwach))[01;31m)[00m))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'VF'], 'mover info': [('VF', (20, 21))], 'old_family': ['VF', 'LK', 'MF', 'VC'], 'start left siblings': [], 'auto preterminals': ('PPER', 'VMFIN', 'ADV', 'ADV', 'PIS', 'VVINF', 'NN', 'NE', 'PPER', 'VVFIN', 'ADV', 'APPR', 'PPOSAT', 'NN', 'PDS', 'VAFIN', 'PPER', 'ADV', 'ADV', 'ADJD', 'ADV', 'VAFIN', 'PPER', 'ADV', 'VVPP', 'PPER', 'VVFIN', 'PPER', 'ADV', 'ADV', 'ADJD'), 'start right siblings': ['LK', 'MF', 'VC'], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (0, 31), 'movers': ['VF'], 'old_parent': 'SIMPX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU sie wollen abends noch was unternehmen frau schmidt)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF sie)
				(LK springen)
				(MF ja uber ihren schatten)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK ist)
				(MF mir ja ganz neu)
				(VF bisher))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK haben)
				[01;36m(MF[00m
					[01;31m(MF[00m
						(NX sie)
						(ADVX immer)[01;31m)[00m
					[01;31m(VC[00m
						(ADJX
							(VVPP abgelehnt))[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF sie)
				(LK machen)
				(MF mich noch ganz schwach))[01;31m)[00m))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['NX', 'ADVX', 'VC'], 'mover info': [('VC', (24, 25))], 'old_family': ['LK', 'MF', 'VC'], 'start left siblings': ['LK', 'MF'], 'auto preterminals': ('VAFIN', 'PPER', 'ADV', 'VVPP'), 'start right siblings': [], 'end left siblings': ['NX', 'ADVX'], 'auto preterminal span': (21, 25), 'movers': ['VC'], 'old_parent': 'SIMPX', 'POS confusion': ('VVPP', 'VVPP'), 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU sie wollen abends noch was unternehmen frau schmidt)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF sie)
				(LK springen)
				(MF ja uber ihren schatten)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK ist)
				(MF mir ja ganz neu)
				(VF bisher))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK haben)
				(MF
					(NX sie)
					(ADVX immer)
					[01;31m(VC[00m
						(ADJX
							(VVPP abgelehnt))[01;31m)[00m)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF sie)
				(LK machen)
				(MF mich noch ganz schwach))[01;31m)[00m))
Step:Unary
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'APPR', 'PPOSAT', 'NN'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (8, 14), 'span': (8, 14), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU sie wollen abends noch was unternehmen frau schmidt)
		[01;31m(SU[00m
			(VF sie)
			(LK springen)
			(MF ja uber ihren schatten)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK ist)
				(MF mir ja ganz neu)
				(VF bisher))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK haben)
				(MF
					(NX sie)
					(ADVX immer)
					[01;31m(VC[00m
						(ADJX
							(VVPP abgelehnt))[01;31m)[00m)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF sie)
				(LK machen)
				(MF mich noch ganz schwach))[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['SU', 'SU', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VMFIN', 'ADV', 'ADV', 'PIS', 'VVINF', 'NN', 'NE', 'PPER', 'VVFIN', 'ADV', 'APPR', 'PPOSAT', 'NN', 'PDS', 'VAFIN', 'PPER', 'ADV', 'ADV', 'ADJD', 'ADV', 'VAFIN', 'PPER', 'ADV', 'VVPP', 'PPER', 'VVFIN', 'PPER', 'ADV', 'ADV', 'ADJD'), 'right siblings': ['SU', 'SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 31), 'span': (8, 14), 'left siblings': ['SU'], 'label': 'SU', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU sie wollen abends noch was unternehmen frau schmidt)
		(VF sie)
		(LK springen)
		(MF ja uber ihren schatten)
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK ist)
				(MF mir ja ganz neu)
				(VF bisher))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK haben)
				(MF
					(NX sie)
					(ADVX immer)
					[01;31m(VC[00m
						(ADJX
							(VVPP abgelehnt))[01;31m)[00m)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF sie)
				(LK machen)
				(MF mich noch ganz schwach))[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SU', 'VF', 'LK', 'MF', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VMFIN', 'ADV', 'ADV', 'PIS', 'VVINF', 'NN', 'NE', 'PPER', 'VVFIN', 'ADV', 'APPR', 'PPOSAT', 'NN', 'PDS', 'VAFIN', 'PPER', 'ADV', 'ADV', 'ADJD', 'ADV', 'VAFIN', 'PPER', 'ADV', 'VVPP', 'PPER', 'VVFIN', 'PPER', 'ADV', 'ADV', 'ADJD'), 'right siblings': ['SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 31), 'span': (14, 21), 'left siblings': ['SU', 'VF', 'LK', 'MF'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU sie wollen abends noch was unternehmen frau schmidt)
		(VF sie)
		(LK springen)
		(MF ja uber ihren schatten)
		(SIMPX das ist mir ja ganz neu bisher)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK haben)
				(MF
					(NX sie)
					(ADVX immer)
					[01;31m(VC[00m
						(ADJX
							(VVPP abgelehnt))[01;31m)[00m)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF sie)
				(LK machen)
				(MF mich noch ganz schwach))[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SU', 'VF', 'LK', 'MF', 'SIMPX', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VMFIN', 'ADV', 'ADV', 'PIS', 'VVINF', 'NN', 'NE', 'PPER', 'VVFIN', 'ADV', 'APPR', 'PPOSAT', 'NN', 'PDS', 'VAFIN', 'PPER', 'ADV', 'ADV', 'ADJD', 'ADV', 'VAFIN', 'PPER', 'ADV', 'VVPP', 'PPER', 'VVFIN', 'PPER', 'ADV', 'ADV', 'ADJD'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 31), 'span': (21, 25), 'left siblings': ['SU', 'VF', 'LK', 'MF', 'SIMPX'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU sie wollen abends noch was unternehmen frau schmidt)
		(VF sie)
		(LK springen)
		(MF ja uber ihren schatten)
		(SIMPX das ist mir ja ganz neu bisher)
		[01;31m(SIMPX[00m
			(LK haben)
			(MF
				(NX sie)
				(ADVX immer)
				[01;31m(VC[00m
					(ADJX
						(VVPP abgelehnt))[01;31m)[00m)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF sie)
				(LK machen)
				(MF mich noch ganz schwach))[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['SU', 'VF', 'LK', 'MF', 'SIMPX', 'SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VMFIN', 'ADV', 'ADV', 'PIS', 'VVINF', 'NN', 'NE', 'PPER', 'VVFIN', 'ADV', 'APPR', 'PPOSAT', 'NN', 'PDS', 'VAFIN', 'PPER', 'ADV', 'ADV', 'ADJD', 'ADV', 'VAFIN', 'PPER', 'ADV', 'VVPP', 'PPER', 'VVFIN', 'PPER', 'ADV', 'ADV', 'ADJD'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 31), 'span': (21, 25), 'left siblings': ['SU', 'VF', 'LK', 'MF', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU sie wollen abends noch was unternehmen frau schmidt)
		(VF sie)
		(LK springen)
		(MF ja uber ihren schatten)
		(SIMPX das ist mir ja ganz neu bisher)
		(LK haben)
		(MF
			(NX sie)
			(ADVX immer)
			[01;31m(VC[00m
				(ADJX
					(VVPP abgelehnt))[01;31m)[00m)
		[01;31m(SU[00m
			(SIMPX
				(VF sie)
				(LK machen)
				(MF mich noch ganz schwach))[01;31m)[00m))
Step:Unary
{'subtrees': ['ADJX'], 'family': ['NX', 'ADVX', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV', 'VVPP'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (22, 25), 'span': (24, 25), 'left siblings': ['NX', 'ADVX'], 'label': 'VC', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU sie wollen abends noch was unternehmen frau schmidt)
		(VF sie)
		(LK springen)
		(MF ja uber ihren schatten)
		(SIMPX das ist mir ja ganz neu bisher)
		(LK haben)
		(MF sie immer abgelehnt)
		[01;31m(SU[00m
			(SIMPX
				(VF sie)
				(LK machen)
				(MF mich noch ganz schwach))[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SU', 'VF', 'LK', 'MF', 'SIMPX', 'LK', 'MF', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VMFIN', 'ADV', 'ADV', 'PIS', 'VVINF', 'NN', 'NE', 'PPER', 'VVFIN', 'ADV', 'APPR', 'PPOSAT', 'NN', 'PDS', 'VAFIN', 'PPER', 'ADV', 'ADV', 'ADJD', 'ADV', 'VAFIN', 'PPER', 'ADV', 'VVPP', 'PPER', 'VVFIN', 'PPER', 'ADV', 'ADV', 'ADJD'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 31), 'span': (25, 31), 'left siblings': ['SU', 'VF', 'LK', 'MF', 'SIMPX', 'LK', 'MF'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP sie wollen abends noch was unternehmen frau schmidt sie springen ja uber ihren schatten das ist mir ja ganz neu bisher haben sie immer abgelehnt sie machen mich noch ganz schwach)

Sentence 426:
24 Initial errors
0 on fringe, 16 iterations
3 Error:UNSET move
3 Error:UNSET move
3 Error:UNSET move
2 Error:NP Attachment
2 Error:NP Attachment
1 Error:Unary
1 Error:Clause Attachment
1 Error:Unary
1 Error:Unary
1 Error:Unary
1 Error:UNSET remove
1 Error:Unary
1 Error:Unary
1 Error:Unary
1 Error:Single Word Phrase
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU was schones)
		[01;31m(SU[00m
			(DM ach)
			(DM frau schmidt)
			(SIMPX ich denke ich kenne da ganz eine schone bar)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF da)
				(LK gehen)
				(MF wir dann)
				(VC hin))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF vor allem)
				(LK gibt)
				(MF es da ganz schone musik))[01;31m)[00m
		[01;36m(SIMPX[00m
			[01;31m(SU[00m [01;33m(VF (NX[00m
				[01;31m(SIMPX[00m
					(VF die)
					(LK gefallt)
					(MF mir immer sehr gut)[01;31m)[00m[01;31m)[00m
			[01;31m(SU[00m
				[01;31m(SIMPX[00m
					(VF letzte mal) [01;33mNX) VF)[00m
					(LK muste)
					(MF ich immer alleine)
					(VC weggehen)[01;31m)[00m[01;31m)[00m[01;36m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF da)
				(LK waren)
				(MF sie ja dann nie dabei))[01;31m)[00m
		[01;36m(SIMPX[00m [01;31m(SU[00m
			(SIMPX und jetzt kann ich ihnen das gleich schon)
			[01;31m(SIMPX[00m
				[01;31m(KOORD[00m
					(KON oder)[01;31m)[00m
				[01;36m(SIMPX[00m
					(LK habe)
					[01;36m(MF[00m
						[01;31m(MF[00m
							(NX ich)
							(NX das)
							(ADVX schon)[01;31m)[00m
						(NX erfahrung)[01;36m)[00m
					(VC gebracht)[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m
		[01;36m(SIMPX[00m
			[01;36m(SU[00m
				[01;31m(SU[00m
					(SIMPX
						(VF ich)
						(LK reserviere)
						[01;31m(MF[00m
							[01;36m(MF[00m
								(ADVX dann)
								(ADVX dort)[01;36m)[00m
							[01;31m(NX[00m
								(NX zwei platze)
								(PX zum essen)[01;31m)[00m[01;31m)[00m)[01;31m)[00m
				(SU past ihnen das so)[01;36m)[00m[01;36m)[00m))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['SU', 'VF', 'LK', 'MF', 'VC'], 'mover info': [('SU', (27, 33))], 'old_family': ['SU', 'SU', 'SU', 'SU', 'SU', 'SU', 'SU', 'SU', 'SU', 'SU'], 'start left siblings': ['SU', 'SU', 'SU', 'SU'], 'auto preterminals': ('PIS', 'NN', 'ITJ', 'NN', 'NE', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'ART', 'ADJA', 'NN', 'ADV', 'VVFIN', 'PPER', 'ADV', 'PTKVZ', 'APPR', 'PIS', 'VVFIN', 'PPER', 'ADV', 'ADV', 'ADJA', 'NN', 'PDS', 'VVFIN', 'PPER', 'ADV', 'ADV', 'ADJD', 'ADJA', 'NN', 'VMFIN', 'PPER', 'ADV', 'ADV', 'VVINF', 'ADV', 'VAFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'PROP', 'KON', 'ADV', 'VMFIN', 'PPER', 'PPER', 'PDS', 'ADV', 'ADV', 'KON', 'VAFIN', 'PPER', 'PDS', 'ADV', 'NN', 'VVPP', 'PPER', 'VVFIN', 'ADV', 'ADV', 'CARD', 'NN', 'APPRART', 'NN', 'VVFIN', 'PPER', 'PDS', 'ADV'), 'start right siblings': ['SU', 'SU', 'SU', 'SU', 'SU'], 'end left siblings': [], 'auto preterminal span': (0, 74), 'adding node already present': False, 'movers': ['SU'], 'old_parent': 'TURN', 'added and moved': True, 'end right siblings': ['VF', 'LK', 'MF', 'VC'], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'MF'}
(TOP
	(TURN
		(SU was schones)
		[01;31m(SU[00m
			(DM ach)
			(DM frau schmidt)
			(SIMPX ich denke ich kenne da ganz eine schone bar)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF da)
				(LK gehen)
				(MF wir dann)
				(VC hin))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF vor allem)
				(LK gibt)
				(MF es da ganz schone musik))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				[01;36m(VF[00m
					(NX
						[01;31m(SU[00m
							[01;31m(SIMPX[00m
								(VF die)
								(LK gefallt)
								(MF mir immer sehr gut)[01;31m)[00m[01;31m)[00m
						(VF letzte mal))[01;36m)[00m
				(LK muste)
				(MF ich immer alleine)
				(VC weggehen))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF da)
				(LK waren)
				(MF sie ja dann nie dabei))[01;31m)[00m
		[01;36m(SIMPX[00m [01;31m(SU[00m
			(SIMPX und jetzt kann ich ihnen das gleich schon)
			[01;31m(SIMPX[00m
				[01;31m(KOORD[00m
					(KON oder)[01;31m)[00m
				[01;36m(SIMPX[00m
					(LK habe)
					[01;36m(MF[00m
						[01;31m(MF[00m
							(NX ich)
							(NX das)
							(ADVX schon)[01;31m)[00m
						(NX erfahrung)[01;36m)[00m
					(VC gebracht)[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m
		[01;36m(SIMPX[00m
			[01;36m(SU[00m
				[01;31m(SU[00m
					(SIMPX
						(VF ich)
						(LK reserviere)
						[01;31m(MF[00m
							[01;36m(MF[00m
								(ADVX dann)
								(ADVX dort)[01;36m)[00m
							[01;31m(NX[00m
								(NX zwei platze)
								(PX zum essen)[01;31m)[00m[01;31m)[00m)[01;31m)[00m
				(SU past ihnen das so)[01;36m)[00m[01;36m)[00m))
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SIMPX', 'SU'], 'mover info': [('SU', (70, 74))], 'old_family': ['SU', 'SU', 'SU', 'SU', 'SU', 'SU', 'SU', 'SU', 'SU'], 'start left siblings': ['SU', 'SU', 'SU', 'SU', 'SU', 'SU', 'SU', 'SU'], 'auto preterminals': ('PIS', 'NN', 'ITJ', 'NN', 'NE', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'ART', 'ADJA', 'NN', 'ADV', 'VVFIN', 'PPER', 'ADV', 'PTKVZ', 'APPR', 'PIS', 'VVFIN', 'PPER', 'ADV', 'ADV', 'ADJA', 'NN', 'PDS', 'VVFIN', 'PPER', 'ADV', 'ADV', 'ADJD', 'ADJA', 'NN', 'VMFIN', 'PPER', 'ADV', 'ADV', 'VVINF', 'ADV', 'VAFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'PROP', 'KON', 'ADV', 'VMFIN', 'PPER', 'PPER', 'PDS', 'ADV', 'ADV', 'KON', 'VAFIN', 'PPER', 'PDS', 'ADV', 'NN', 'VVPP', 'PPER', 'VVFIN', 'ADV', 'ADV', 'CARD', 'NN', 'APPRART', 'NN', 'VVFIN', 'PPER', 'PDS', 'ADV'), 'start right siblings': [], 'end left siblings': ['SIMPX'], 'auto preterminal span': (0, 74), 'adding node already present': False, 'movers': ['SU'], 'old_parent': 'TURN', 'added and moved': True, 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'MF'}
(TOP
	(TURN
		(SU was schones)
		[01;31m(SU[00m
			(DM ach)
			(DM frau schmidt)
			(SIMPX ich denke ich kenne da ganz eine schone bar)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF da)
				(LK gehen)
				(MF wir dann)
				(VC hin))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF vor allem)
				(LK gibt)
				(MF es da ganz schone musik))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				[01;36m(VF[00m
					(NX
						[01;31m(SU[00m
							[01;31m(SIMPX[00m
								(VF die)
								(LK gefallt)
								(MF mir immer sehr gut)[01;31m)[00m[01;31m)[00m
						(VF letzte mal))[01;36m)[00m
				(LK muste)
				(MF ich immer alleine)
				(VC weggehen))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF da)
				(LK waren)
				(MF sie ja dann nie dabei))[01;31m)[00m
		[01;36m(SIMPX[00m [01;31m(SU[00m
			(SIMPX und jetzt kann ich ihnen das gleich schon)
			[01;31m(SIMPX[00m
				[01;31m(KOORD[00m
					(KON oder)[01;31m)[00m
				[01;36m(SIMPX[00m
					(LK habe)
					[01;36m(MF[00m
						[01;31m(MF[00m
							(NX ich)
							(NX das)
							(ADVX schon)[01;31m)[00m
						(NX erfahrung)[01;36m)[00m
					(VC gebracht)[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m
		(SIMPX
			(SU
				(SIMPX
					(VF ich)
					(LK reserviere)
					[01;31m(MF[00m
						[01;36m(MF[00m
							(ADVX dann)
							(ADVX dort)[01;36m)[00m
						[01;31m(NX[00m
							(NX zwei platze)
							(PX zum essen)[01;31m)[00m[01;31m)[00m)
				(SU past ihnen das so)))))
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SIMPX', 'KOORD', 'SIMPX'], 'mover info': [('KOORD', (55, 56))], 'old_family': ['KOORD', 'LK', 'MF', 'NX', 'VC'], 'start left siblings': [], 'auto preterminals': ('KON', 'ADV', 'VMFIN', 'PPER', 'PPER', 'PDS', 'ADV', 'ADV', 'KON', 'VAFIN', 'PPER', 'PDS', 'ADV', 'NN', 'VVPP'), 'start right siblings': ['LK', 'MF', 'NX', 'VC'], 'end left siblings': ['SIMPX'], 'auto preterminal span': (47, 62), 'adding node already present': False, 'movers': ['KOORD'], 'old_parent': 'SIMPX', 'POS confusion': ('KON', 'KON'), 'added and moved': True, 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'MF'}
(TOP
	(TURN
		(SU was schones)
		[01;31m(SU[00m
			(DM ach)
			(DM frau schmidt)
			(SIMPX ich denke ich kenne da ganz eine schone bar)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF da)
				(LK gehen)
				(MF wir dann)
				(VC hin))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF vor allem)
				(LK gibt)
				(MF es da ganz schone musik))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				[01;36m(VF[00m
					(NX
						[01;31m(SU[00m
							[01;31m(SIMPX[00m
								(VF die)
								(LK gefallt)
								(MF mir immer sehr gut)[01;31m)[00m[01;31m)[00m
						(VF letzte mal))[01;36m)[00m
				(LK muste)
				(MF ich immer alleine)
				(VC weggehen))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF da)
				(LK waren)
				(MF sie ja dann nie dabei))[01;31m)[00m
		(SIMPX
			[01;31m(SU[00m
				(SIMPX und jetzt kann ich ihnen das gleich schon)
				[01;31m(KOORD[00m
					(KON oder)[01;31m)[00m
				(SIMPX
					(LK habe)
					[01;36m(MF[00m
						[01;31m(MF[00m
							(NX ich)
							(NX das)
							(ADVX schon)[01;31m)[00m
						(NX erfahrung)[01;36m)[00m
					(VC gebracht))[01;31m)[00m)
		(SIMPX
			(SU
				(SIMPX
					(VF ich)
					(LK reserviere)
					[01;31m(MF[00m
						[01;36m(MF[00m
							(ADVX dann)
							(ADVX dort)[01;36m)[00m
						[01;31m(NX[00m
							(NX zwei platze)
							(PX zum essen)[01;31m)[00m[01;31m)[00m)
				(SU past ihnen das so)))))
Step:NP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'NX', 'ADVX', 'NX'], 'mover info': [('NX', (60, 61))], 'old_family': ['LK', 'MF', 'NX', 'VC'], 'start left siblings': ['LK', 'MF'], 'auto preterminals': ('VAFIN', 'PPER', 'PDS', 'ADV', 'NN', 'VVPP'), 'start right siblings': ['VC'], 'end left siblings': ['NX', 'NX', 'ADVX'], 'auto preterminal span': (56, 62), 'movers': ['NX'], 'old_parent': 'SIMPX', 'POS confusion': ('NN', 'NN'), 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU was schones)
		[01;31m(SU[00m
			(DM ach)
			(DM frau schmidt)
			(SIMPX ich denke ich kenne da ganz eine schone bar)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF da)
				(LK gehen)
				(MF wir dann)
				(VC hin))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF vor allem)
				(LK gibt)
				(MF es da ganz schone musik))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				[01;36m(VF[00m
					(NX
						[01;31m(SU[00m
							[01;31m(SIMPX[00m
								(VF die)
								(LK gefallt)
								(MF mir immer sehr gut)[01;31m)[00m[01;31m)[00m
						(VF letzte mal))[01;36m)[00m
				(LK muste)
				(MF ich immer alleine)
				(VC weggehen))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF da)
				(LK waren)
				(MF sie ja dann nie dabei))[01;31m)[00m
		(SIMPX
			[01;31m(SU[00m
				(SIMPX und jetzt kann ich ihnen das gleich schon)
				[01;31m(KOORD[00m
					(KON oder)[01;31m)[00m
				(SIMPX habe ich das schon erfahrung gebracht)[01;31m)[00m)
		(SIMPX
			(SU
				(SIMPX
					(VF ich)
					(LK reserviere)
					[01;31m(MF[00m
						[01;36m(MF[00m
							(ADVX dann)
							(ADVX dort)[01;36m)[00m
						[01;31m(NX[00m
							(NX zwei platze)
							(PX zum essen)[01;31m)[00m[01;31m)[00m)
				(SU past ihnen das so)))))
Step:NP Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'NX'], 'mover info': [('NX', (66, 70))], 'old_family': ['ADVX', 'ADVX', 'NX'], 'start left siblings': ['ADVX', 'ADVX'], 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'ADV', 'CARD', 'NN', 'APPRART', 'NN'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (62, 70), 'movers': ['NX'], 'old_parent': 'MF', 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU was schones)
		[01;31m(SU[00m
			(DM ach)
			(DM frau schmidt)
			(SIMPX ich denke ich kenne da ganz eine schone bar)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF da)
				(LK gehen)
				(MF wir dann)
				(VC hin))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF vor allem)
				(LK gibt)
				(MF es da ganz schone musik))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				[01;36m(VF[00m
					(NX
						[01;31m(SU[00m
							[01;31m(SIMPX[00m
								(VF die)
								(LK gefallt)
								(MF mir immer sehr gut)[01;31m)[00m[01;31m)[00m
						(VF letzte mal))[01;36m)[00m
				(LK muste)
				(MF ich immer alleine)
				(VC weggehen))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF da)
				(LK waren)
				(MF sie ja dann nie dabei))[01;31m)[00m
		(SIMPX
			[01;31m(SU[00m
				(SIMPX und jetzt kann ich ihnen das gleich schon)
				[01;31m(KOORD[00m
					(KON oder)[01;31m)[00m
				(SIMPX habe ich das schon erfahrung gebracht)[01;31m)[00m)
		(SIMPX
			(SU
				(SIMPX
					(VF ich)
					(LK reserviere)
					(MF dann dort)
					[01;31m(NX[00m
						(NX zwei platze)
						(PX zum essen)[01;31m)[00m)
				(SU past ihnen das so)))))
Step:Unary
{'subtrees': ['NX'], 'family': ['VF', 'LK', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VVFIN', 'PPER', 'ADV', 'ADV', 'ADJD', 'ADJA', 'NN'), 'right siblings': [(LK (VXFIN (VMFIN muste))), (MF (NX (PPER ich)) (ADVX (ADV immer)) (ADVX (ADV alleine))), (VC (VXINF (VVINF weggehen)))], 'left siblings': [], 'auto preterminal span': (27, 35), 'span': (27, 35), 'parent': 'SIMPX', 'label': 'VF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU was schones)
		[01;31m(SU[00m
			(DM ach)
			(DM frau schmidt)
			(SIMPX ich denke ich kenne da ganz eine schone bar)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF da)
				(LK gehen)
				(MF wir dann)
				(VC hin))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF vor allem)
				(LK gibt)
				(MF es da ganz schone musik))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF
					(NX
						[01;31m(SU[00m
							[01;31m(SIMPX[00m
								(VF die)
								(LK gefallt)
								(MF mir immer sehr gut)[01;31m)[00m[01;31m)[00m
						(VF letzte mal)))
				(LK muste)
				(MF ich immer alleine)
				(VC weggehen))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF da)
				(LK waren)
				(MF sie ja dann nie dabei))[01;31m)[00m
		(SIMPX
			[01;31m(SU[00m
				(SIMPX und jetzt kann ich ihnen das gleich schon)
				[01;31m(KOORD[00m
					(KON oder)[01;31m)[00m
				(SIMPX habe ich das schon erfahrung gebracht)[01;31m)[00m)
		(SIMPX
			(SU
				(SIMPX
					(VF ich)
					(LK reserviere)
					(MF dann dort)
					[01;31m(NX[00m
						(NX zwei platze)
						(PX zum essen)[01;31m)[00m)
				(SU past ihnen das so)))))
Step:Clause Attachment
{'subtrees': ['DM', 'DM', 'SIMPX'], 'family': ['SU', 'SU', 'SU', 'SU', 'SU', 'SU', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PIS', 'NN', 'ITJ', 'NN', 'NE', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'ART', 'ADJA', 'NN', 'ADV', 'VVFIN', 'PPER', 'ADV', 'PTKVZ', 'APPR', 'PIS', 'VVFIN', 'PPER', 'ADV', 'ADV', 'ADJA', 'NN', 'PDS', 'VVFIN', 'PPER', 'ADV', 'ADV', 'ADJD', 'ADJA', 'NN', 'VMFIN', 'PPER', 'ADV', 'ADV', 'VVINF', 'ADV', 'VAFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'PROP', 'KON', 'ADV', 'VMFIN', 'PPER', 'PPER', 'PDS', 'ADV', 'ADV', 'KON', 'VAFIN', 'PPER', 'PDS', 'ADV', 'NN', 'VVPP', 'PPER', 'VVFIN', 'ADV', 'ADV', 'CARD', 'NN', 'APPRART', 'NN', 'VVFIN', 'PPER', 'PDS', 'ADV'), 'right siblings': ['SU', 'SU', 'SU', 'SU', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 74), 'span': (2, 14), 'left siblings': ['SU'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU was schones)
		(DM ach)
		(DM frau schmidt)
		(SIMPX ich denke ich kenne da ganz eine schone bar)
		[01;31m(SU[00m
			(SIMPX
				(VF da)
				(LK gehen)
				(MF wir dann)
				(VC hin))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF vor allem)
				(LK gibt)
				(MF es da ganz schone musik))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF
					(NX
						[01;31m(SU[00m
							[01;31m(SIMPX[00m
								(VF die)
								(LK gefallt)
								(MF mir immer sehr gut)[01;31m)[00m[01;31m)[00m
						(VF letzte mal)))
				(LK muste)
				(MF ich immer alleine)
				(VC weggehen))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF da)
				(LK waren)
				(MF sie ja dann nie dabei))[01;31m)[00m
		(SIMPX
			[01;31m(SU[00m
				(SIMPX und jetzt kann ich ihnen das gleich schon)
				[01;31m(KOORD[00m
					(KON oder)[01;31m)[00m
				(SIMPX habe ich das schon erfahrung gebracht)[01;31m)[00m)
		(SIMPX
			(SU
				(SIMPX
					(VF ich)
					(LK reserviere)
					(MF dann dort)
					[01;31m(NX[00m
						(NX zwei platze)
						(PX zum essen)[01;31m)[00m)
				(SU past ihnen das so)))))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SU', 'DM', 'DM', 'SIMPX', 'SU', 'SU', 'SU', 'SU', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PIS', 'NN', 'ITJ', 'NN', 'NE', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'ART', 'ADJA', 'NN', 'ADV', 'VVFIN', 'PPER', 'ADV', 'PTKVZ', 'APPR', 'PIS', 'VVFIN', 'PPER', 'ADV', 'ADV', 'ADJA', 'NN', 'PDS', 'VVFIN', 'PPER', 'ADV', 'ADV', 'ADJD', 'ADJA', 'NN', 'VMFIN', 'PPER', 'ADV', 'ADV', 'VVINF', 'ADV', 'VAFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'PROP', 'KON', 'ADV', 'VMFIN', 'PPER', 'PPER', 'PDS', 'ADV', 'ADV', 'KON', 'VAFIN', 'PPER', 'PDS', 'ADV', 'NN', 'VVPP', 'PPER', 'VVFIN', 'ADV', 'ADV', 'CARD', 'NN', 'APPRART', 'NN', 'VVFIN', 'PPER', 'PDS', 'ADV'), 'right siblings': ['SU', 'SU', 'SU', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 74), 'span': (14, 19), 'left siblings': ['SU', 'DM', 'DM', 'SIMPX'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU was schones)
		(DM ach)
		(DM frau schmidt)
		(SIMPX ich denke ich kenne da ganz eine schone bar)
		(SIMPX da gehen wir dann hin)
		[01;31m(SU[00m
			(SIMPX
				(VF vor allem)
				(LK gibt)
				(MF es da ganz schone musik))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF
					(NX
						[01;31m(SU[00m
							[01;31m(SIMPX[00m
								(VF die)
								(LK gefallt)
								(MF mir immer sehr gut)[01;31m)[00m[01;31m)[00m
						(VF letzte mal)))
				(LK muste)
				(MF ich immer alleine)
				(VC weggehen))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF da)
				(LK waren)
				(MF sie ja dann nie dabei))[01;31m)[00m
		(SIMPX
			[01;31m(SU[00m
				(SIMPX und jetzt kann ich ihnen das gleich schon)
				[01;31m(KOORD[00m
					(KON oder)[01;31m)[00m
				(SIMPX habe ich das schon erfahrung gebracht)[01;31m)[00m)
		(SIMPX
			(SU
				(SIMPX
					(VF ich)
					(LK reserviere)
					(MF dann dort)
					[01;31m(NX[00m
						(NX zwei platze)
						(PX zum essen)[01;31m)[00m)
				(SU past ihnen das so)))))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SU', 'DM', 'DM', 'SIMPX', 'SIMPX', 'SU', 'SU', 'SU', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PIS', 'NN', 'ITJ', 'NN', 'NE', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'ART', 'ADJA', 'NN', 'ADV', 'VVFIN', 'PPER', 'ADV', 'PTKVZ', 'APPR', 'PIS', 'VVFIN', 'PPER', 'ADV', 'ADV', 'ADJA', 'NN', 'PDS', 'VVFIN', 'PPER', 'ADV', 'ADV', 'ADJD', 'ADJA', 'NN', 'VMFIN', 'PPER', 'ADV', 'ADV', 'VVINF', 'ADV', 'VAFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'PROP', 'KON', 'ADV', 'VMFIN', 'PPER', 'PPER', 'PDS', 'ADV', 'ADV', 'KON', 'VAFIN', 'PPER', 'PDS', 'ADV', 'NN', 'VVPP', 'PPER', 'VVFIN', 'ADV', 'ADV', 'CARD', 'NN', 'APPRART', 'NN', 'VVFIN', 'PPER', 'PDS', 'ADV'), 'right siblings': ['SU', 'SU', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 74), 'span': (19, 27), 'left siblings': ['SU', 'DM', 'DM', 'SIMPX', 'SIMPX'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU was schones)
		(DM ach)
		(DM frau schmidt)
		(SIMPX ich denke ich kenne da ganz eine schone bar)
		(SIMPX da gehen wir dann hin)
		(SIMPX vor allem gibt es da ganz schone musik)
		[01;31m(SU[00m
			(SIMPX
				(VF
					(NX
						[01;31m(SU[00m
							[01;31m(SIMPX[00m
								(VF die)
								(LK gefallt)
								(MF mir immer sehr gut)[01;31m)[00m[01;31m)[00m
						(VF letzte mal)))
				(LK muste)
				(MF ich immer alleine)
				(VC weggehen))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF da)
				(LK waren)
				(MF sie ja dann nie dabei))[01;31m)[00m
		(SIMPX
			[01;31m(SU[00m
				(SIMPX und jetzt kann ich ihnen das gleich schon)
				[01;31m(KOORD[00m
					(KON oder)[01;31m)[00m
				(SIMPX habe ich das schon erfahrung gebracht)[01;31m)[00m)
		(SIMPX
			(SU
				(SIMPX
					(VF ich)
					(LK reserviere)
					(MF dann dort)
					[01;31m(NX[00m
						(NX zwei platze)
						(PX zum essen)[01;31m)[00m)
				(SU past ihnen das so)))))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SU', 'VF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VVFIN', 'PPER', 'ADV', 'ADV', 'ADJD', 'ADJA', 'NN'), 'right siblings': ['VF'], 'parent': 'NX', 'auto preterminal span': (27, 35), 'span': (27, 33), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU was schones)
		(DM ach)
		(DM frau schmidt)
		(SIMPX ich denke ich kenne da ganz eine schone bar)
		(SIMPX da gehen wir dann hin)
		(SIMPX vor allem gibt es da ganz schone musik)
		[01;31m(SU[00m
			(SIMPX
				(VF
					(NX
						[01;31m(SIMPX[00m
							(VF die)
							(LK gefallt)
							(MF mir immer sehr gut)[01;31m)[00m
						(VF letzte mal)))
				(LK muste)
				(MF ich immer alleine)
				(VC weggehen))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF da)
				(LK waren)
				(MF sie ja dann nie dabei))[01;31m)[00m
		(SIMPX
			[01;31m(SU[00m
				(SIMPX und jetzt kann ich ihnen das gleich schon)
				[01;31m(KOORD[00m
					(KON oder)[01;31m)[00m
				(SIMPX habe ich das schon erfahrung gebracht)[01;31m)[00m)
		(SIMPX
			(SU
				(SIMPX
					(VF ich)
					(LK reserviere)
					(MF dann dort)
					[01;31m(NX[00m
						(NX zwei platze)
						(PX zum essen)[01;31m)[00m)
				(SU past ihnen das so)))))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['SIMPX', 'VF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VVFIN', 'PPER', 'ADV', 'ADV', 'ADJD', 'ADJA', 'NN'), 'right siblings': ['VF'], 'parent': 'NX', 'auto preterminal span': (27, 35), 'span': (27, 33), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU was schones)
		(DM ach)
		(DM frau schmidt)
		(SIMPX ich denke ich kenne da ganz eine schone bar)
		(SIMPX da gehen wir dann hin)
		(SIMPX vor allem gibt es da ganz schone musik)
		[01;31m(SU[00m
			(SIMPX
				(VF die gefallt mir immer sehr gut letzte mal)
				(LK muste)
				(MF ich immer alleine)
				(VC weggehen))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF da)
				(LK waren)
				(MF sie ja dann nie dabei))[01;31m)[00m
		(SIMPX
			[01;31m(SU[00m
				(SIMPX und jetzt kann ich ihnen das gleich schon)
				[01;31m(KOORD[00m
					(KON oder)[01;31m)[00m
				(SIMPX habe ich das schon erfahrung gebracht)[01;31m)[00m)
		(SIMPX
			(SU
				(SIMPX
					(VF ich)
					(LK reserviere)
					(MF dann dort)
					[01;31m(NX[00m
						(NX zwei platze)
						(PX zum essen)[01;31m)[00m)
				(SU past ihnen das so)))))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SU', 'DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SU', 'SU', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PIS', 'NN', 'ITJ', 'NN', 'NE', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'ART', 'ADJA', 'NN', 'ADV', 'VVFIN', 'PPER', 'ADV', 'PTKVZ', 'APPR', 'PIS', 'VVFIN', 'PPER', 'ADV', 'ADV', 'ADJA', 'NN', 'PDS', 'VVFIN', 'PPER', 'ADV', 'ADV', 'ADJD', 'ADJA', 'NN', 'VMFIN', 'PPER', 'ADV', 'ADV', 'VVINF', 'ADV', 'VAFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'PROP', 'KON', 'ADV', 'VMFIN', 'PPER', 'PPER', 'PDS', 'ADV', 'ADV', 'KON', 'VAFIN', 'PPER', 'PDS', 'ADV', 'NN', 'VVPP', 'PPER', 'VVFIN', 'ADV', 'ADV', 'CARD', 'NN', 'APPRART', 'NN', 'VVFIN', 'PPER', 'PDS', 'ADV'), 'right siblings': ['SU', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 74), 'span': (27, 40), 'left siblings': ['SU', 'DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU was schones)
		(DM ach)
		(DM frau schmidt)
		(SIMPX ich denke ich kenne da ganz eine schone bar)
		(SIMPX da gehen wir dann hin)
		(SIMPX vor allem gibt es da ganz schone musik)
		(SIMPX die gefallt mir immer sehr gut letzte mal muste ich immer alleine weggehen)
		[01;31m(SU[00m
			(SIMPX
				(VF da)
				(LK waren)
				(MF sie ja dann nie dabei))[01;31m)[00m
		(SIMPX
			[01;31m(SU[00m
				(SIMPX und jetzt kann ich ihnen das gleich schon)
				[01;31m(KOORD[00m
					(KON oder)[01;31m)[00m
				(SIMPX habe ich das schon erfahrung gebracht)[01;31m)[00m)
		(SIMPX
			(SU
				(SIMPX
					(VF ich)
					(LK reserviere)
					(MF dann dort)
					[01;31m(NX[00m
						(NX zwei platze)
						(PX zum essen)[01;31m)[00m)
				(SU past ihnen das so)))))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SU', 'DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SU', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PIS', 'NN', 'ITJ', 'NN', 'NE', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'ART', 'ADJA', 'NN', 'ADV', 'VVFIN', 'PPER', 'ADV', 'PTKVZ', 'APPR', 'PIS', 'VVFIN', 'PPER', 'ADV', 'ADV', 'ADJA', 'NN', 'PDS', 'VVFIN', 'PPER', 'ADV', 'ADV', 'ADJD', 'ADJA', 'NN', 'VMFIN', 'PPER', 'ADV', 'ADV', 'VVINF', 'ADV', 'VAFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'PROP', 'KON', 'ADV', 'VMFIN', 'PPER', 'PPER', 'PDS', 'ADV', 'ADV', 'KON', 'VAFIN', 'PPER', 'PDS', 'ADV', 'NN', 'VVPP', 'PPER', 'VVFIN', 'ADV', 'ADV', 'CARD', 'NN', 'APPRART', 'NN', 'VVFIN', 'PPER', 'PDS', 'ADV'), 'right siblings': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 74), 'span': (40, 47), 'left siblings': ['SU', 'DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU was schones)
		(DM ach)
		(DM frau schmidt)
		(SIMPX ich denke ich kenne da ganz eine schone bar)
		(SIMPX da gehen wir dann hin)
		(SIMPX vor allem gibt es da ganz schone musik)
		(SIMPX die gefallt mir immer sehr gut letzte mal muste ich immer alleine weggehen)
		(SIMPX da waren sie ja dann nie dabei)
		(SIMPX
			[01;31m(SU[00m
				(SIMPX und jetzt kann ich ihnen das gleich schon)
				[01;31m(KOORD[00m
					(KON oder)[01;31m)[00m
				(SIMPX habe ich das schon erfahrung gebracht)[01;31m)[00m)
		(SIMPX
			(SU
				(SIMPX
					(VF ich)
					(LK reserviere)
					(MF dann dort)
					[01;31m(NX[00m
						(NX zwei platze)
						(PX zum essen)[01;31m)[00m)
				(SU past ihnen das so)))))
Step:Unary
{'subtrees': ['SIMPX', 'KOORD', 'SIMPX'], 'family': ['SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'ADV', 'VMFIN', 'PPER', 'PPER', 'PDS', 'ADV', 'ADV', 'KON', 'VAFIN', 'PPER', 'PDS', 'ADV', 'NN', 'VVPP'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (47, 62), 'span': (47, 62), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU was schones)
		(DM ach)
		(DM frau schmidt)
		(SIMPX ich denke ich kenne da ganz eine schone bar)
		(SIMPX da gehen wir dann hin)
		(SIMPX vor allem gibt es da ganz schone musik)
		(SIMPX die gefallt mir immer sehr gut letzte mal muste ich immer alleine weggehen)
		(SIMPX da waren sie ja dann nie dabei)
		(SIMPX
			(SIMPX und jetzt kann ich ihnen das gleich schon)
			[01;31m(KOORD[00m
				(KON oder)[01;31m)[00m
			(SIMPX habe ich das schon erfahrung gebracht))
		(SIMPX
			(SU
				(SIMPX
					(VF ich)
					(LK reserviere)
					(MF dann dort)
					[01;31m(NX[00m
						(NX zwei platze)
						(PX zum essen)[01;31m)[00m)
				(SU past ihnen das so)))))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['SIMPX', 'KOORD', 'SIMPX'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON', 'ADV', 'VMFIN', 'PPER', 'PPER', 'PDS', 'ADV', 'ADV', 'KON', 'VAFIN', 'PPER', 'PDS', 'ADV', 'NN', 'VVPP'), 'right siblings': ['SIMPX'], 'parent': 'SIMPX', 'auto preterminal span': (47, 62), 'span': (55, 56), 'left siblings': ['SIMPX'], 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(SU was schones)
		(DM ach)
		(DM frau schmidt)
		(SIMPX ich denke ich kenne da ganz eine schone bar)
		(SIMPX da gehen wir dann hin)
		(SIMPX vor allem gibt es da ganz schone musik)
		(SIMPX die gefallt mir immer sehr gut letzte mal muste ich immer alleine weggehen)
		(SIMPX da waren sie ja dann nie dabei)
		(SIMPX und jetzt kann ich ihnen das gleich schon oder habe ich das schon erfahrung gebracht)
		(SIMPX
			(SU
				(SIMPX
					(VF ich)
					(LK reserviere)
					(MF dann dort)
					[01;31m(NX[00m
						(NX zwei platze)
						(PX zum essen)[01;31m)[00m)
				(SU past ihnen das so)))))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['VF', 'LK', 'MF', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'ADV', 'CARD', 'NN', 'APPRART', 'NN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (62, 70), 'span': (66, 70), 'left siblings': ['VF', 'LK', 'MF'], 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP was schones ach frau schmidt ich denke ich kenne da ganz eine schone bar da gehen wir dann hin vor allem gibt es da ganz schone musik die gefallt mir immer sehr gut letzte mal muste ich immer alleine weggehen da waren sie ja dann nie dabei und jetzt kann ich ihnen das gleich schon oder habe ich das schon erfahrung gebracht ich reserviere dann dort zwei platze zum essen past ihnen das so)

Sentence 427:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Clause Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU ja genau)
		(SU haben sie sich schon schlau gemacht wann sie fahren konnten)
		(SU
			(SIMPX ich war ja grade im urlaub)
			[01;36m(SU[00m
				(DM also)
				(SIMPX mir ist ja eigentlich alles recht)[01;36m)[00m)))
Step:Clause Attachment
{'subtrees': ['DM', 'SIMPX'], 'family': ['SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPER', 'VAFIN', 'ADV', 'ADV', 'PIS', 'ADJD'), 'right siblings': [], 'left siblings': [(SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VAFIN war))) (MF (ADVX (ADV ja)) (ADVX (ADV grade)) (PX (APPRART im) (NX (NN urlaub)))))], 'auto preterminal span': (18, 25), 'span': (18, 25), 'parent': 'SU', 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP ja genau haben sie sich schon schlau gemacht wann sie fahren konnten ich war ja grade im urlaub also mir ist ja eigentlich alles recht)

Sentence 428:
6 Initial errors
0 on fringe, 2 iterations
4 Error:UNSET move
2 Error:Different label
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SIMPX[00m
	[01;36m(SU[00m
		(TOP
			(TURN
				[01;31m(SU[00m
					[01;31m(SIMPX[00m
						(KOORD und)
						(VF wie)
						(LK wollen)
						(MF wir das)
						(VC machen)[01;31m)[00m[01;31m)[00m
				[01;36m(NF[00m [01;31m(SU[00m
					(PX
						(PX mit dem zug)
						(ADVX wieder))[01;31m)[00m[01;36m)[00m))[01;36m)[00m[01;36m)[00m
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['KOORD', 'VF', 'LK', 'MF', 'VC', 'SU'], 'mover info': [('SU', (6, 10))], 'old_family': ['SU', 'SU'], 'start left siblings': ['SU'], 'auto preterminals': ('KON', 'PWAV', 'VMFIN', 'PPER', 'PDS', 'VVINF', 'APPR', 'ART', 'NN', 'ADV'), 'start right siblings': [], 'end left siblings': ['KOORD', 'VF', 'LK', 'MF', 'VC'], 'auto preterminal span': (0, 10), 'movers': ['SU'], 'old_parent': 'TURN', 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			(SIMPX
				(KOORD und)
				(VF wie)
				(LK wollen)
				(MF wir das)
				(VC machen)
				[01;36m(NF[00m [01;31m(SU[00m
					(PX
						(PX mit dem zug)
						(ADVX wieder))[01;31m)[00m[01;36m)[00m))))
Step:Different label
{'family': ['KOORD', 'VF', 'LK', 'MF', 'VC', 'NF'], 'auto preterminal span': (6, 10), 'span': (6, 10), 'subtrees': ['PX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('APPR', 'ART', 'NN', 'ADV'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('SU', 'NF')}
(TOP und wie wollen wir das machen mit dem zug wieder)

Sentence 429:
3 Initial errors
0 on fringe, 2 iterations
2 Error:UNSET move
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SU[00m
	(TOP
		(TURN
			[01;31m(SU[00m
				(DM ja)
				(DM gut)[01;31m)[00m
			[01;31m(SU[00m
				(DM
					(ITJ einverstanden))[01;31m)[00m))[01;36m)[00m
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SU', 'DM'], 'mover info': [('SU', (0, 2))], 'old_family': ['SU', 'SU'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'ITJ', 'ITJ'), 'start right siblings': ['SU'], 'end left siblings': [], 'auto preterminal span': (0, 3), 'movers': ['SU'], 'old_parent': 'TURN', 'end right siblings': ['DM'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			[01;31m(SU[00m
				(DM ja)
				(DM gut)[01;31m)[00m
			(DM einverstanden))))
Step:UNSET remove
{'subtrees': ['DM', 'DM'], 'family': ['SU', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'ITJ'), 'right siblings': ['DM'], 'parent': 'SU', 'auto preterminal span': (0, 3), 'span': (0, 2), 'left siblings': [], 'label': 'SU', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ja gut einverstanden)

Sentence 430:
8 Initial errors
0 on fringe, 3 iterations
5 Error:UNSET move
2 Error:Different label
1 Error:Clause Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			(DM ja)
			[01;31m(SIMPX[00m
				[01;36m(SIMPX[00m
					(VF das)
					(LK war)
					(MF sehr nett)[01;36m)[00m
				[01;36m(VF[00m [01;31m(NF[00m [01;33m(SU (SIMPX[00m
					(NX
						(ADJX letztes)
						(NN mal))[01;31m)[00m[01;36m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				(LK mochte)
				(MF ich ganz gerne wieder)
				(VC hingehen)[01;31m)[00m[01;31m)[00m [01;33mSIMPX) SU)[00m
		(SU nehmen wir wieder zwei einzelzimmer)))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['NF', 'LK', 'MF', 'VC'], 'mover info': [('NF', (6, 8))], 'old_family': ['VF', 'LK', 'MF', 'NF'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('PTKANT', 'PTKANT', 'PDS', 'VAFIN', 'ADV', 'ADJD', 'ADJA', 'NN', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'VVINF'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 14), 'adding node already present': False, 'movers': ['NF'], 'old_parent': 'SIMPX', 'added and moved': True, 'end right siblings': ['LK', 'MF', 'VC'], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'SU'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			(DM ja)
			(SIMPX das war sehr nett)
			(SU
				(SIMPX
					[01;36m(VF[00m [01;31m(NF[00m
						(NX
							(ADJX letztes)
							(NN mal))[01;31m)[00m[01;36m)[00m
					(LK mochte)
					(MF ich ganz gerne wieder)
					(VC hingehen)))[01;31m)[00m
		(SU nehmen wir wieder zwei einzelzimmer)))
Step:Different label
{'family': ['VF', 'LK', 'MF', 'VC'], 'auto preterminal span': (6, 8), 'span': (6, 8), 'subtrees': ['NX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('ADJA', 'NN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('NF', 'VF')}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			(DM ja)
			(SIMPX das war sehr nett)
			(SU letztes mal mochte ich ganz gerne wieder hingehen)[01;31m)[00m
		(SU nehmen wir wieder zwei einzelzimmer)))
Step:Clause Attachment
{'subtrees': ['DM', 'DM', 'SIMPX', 'SU'], 'family': ['SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PTKANT', 'PDS', 'VAFIN', 'ADV', 'ADJD', 'ADJA', 'NN', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'VVINF', 'VVFIN', 'PPER', 'ADV', 'CARD', 'NN'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 19), 'span': (0, 14), 'left siblings': [], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP ja ja das war sehr nett letztes mal mochte ich ganz gerne wieder hingehen nehmen wir wieder zwei einzelzimmer)

Sentence 431:
0 Initial errors
0 on fringe, 0 iterations

Sentence 432:
6 Initial errors
0 on fringe, 5 iterations
2 Error:UNSET move
1 Error:Unary
1 Error:Clause Attachment
1 Error:Unary
1 Error:Clause Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU gut)
		[01;31m(SU[00m
			(DM
				(ITJ gut))[01;31m)[00m
		[01;31m(SU[00m
			(NX anfang der woche)
			[01;31m(SIMPX[00m
				[01;36m(SIMPX[00m
					(VF wir)
					(LK konnten)
					(MF ja sonntag abend)
					(VC losfahren)[01;36m)[00m
				[01;31m(NF[00m
					(NX
						(KON oder)
						(NX montag fruh))[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(C wie)
				(MF sie)
				(VC meinen))[01;31m)[00m))
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['NF', 'SIMPX'], 'mover info': [('NF', (11, 14))], 'old_family': ['VF', 'LK', 'MF', 'VC', 'NF'], 'start left siblings': ['VF', 'LK', 'MF', 'VC'], 'auto preterminals': ('ITJ', 'ITJ', 'NN', 'ART', 'NN', 'PPER', 'VMFIN', 'ADV', 'NN', 'ADV', 'VVINF', 'KON', 'NN', 'ADV', 'KOUS', 'PPER', 'VVFIN'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 17), 'movers': ['NF'], 'old_parent': 'SIMPX', 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU gut)
		[01;31m(SU[00m
			(DM
				(ITJ gut))[01;31m)[00m
		[01;31m(SU[00m
			(NX anfang der woche)
			(SIMPX wir konnten ja sonntag abend losfahren)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(NF[00m
				(NX
					(KON oder)
					(NX montag fruh))[01;31m)[00m
			(SIMPX wie sie meinen)[01;31m)[00m))
Step:Unary
{'subtrees': ['DM'], 'family': ['SU', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ITJ', 'NN', 'ART', 'NN', 'PPER', 'VMFIN', 'ADV', 'NN', 'ADV', 'VVINF', 'KON', 'NN', 'ADV', 'KOUS', 'PPER', 'VVFIN'), 'right siblings': ['SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 17), 'span': (1, 2), 'left siblings': ['SU'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU gut)
		(DM gut)
		[01;31m(SU[00m
			(NX anfang der woche)
			(SIMPX wir konnten ja sonntag abend losfahren)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(NF[00m
				(NX
					(KON oder)
					(NX montag fruh))[01;31m)[00m
			(SIMPX wie sie meinen)[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['NX', 'SIMPX'], 'family': ['SU', 'DM', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ITJ', 'NN', 'ART', 'NN', 'PPER', 'VMFIN', 'ADV', 'NN', 'ADV', 'VVINF', 'KON', 'NN', 'ADV', 'KOUS', 'PPER', 'VVFIN'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 17), 'span': (2, 11), 'left siblings': ['SU', 'DM'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU gut)
		(DM gut)
		(NX anfang der woche)
		(SIMPX wir konnten ja sonntag abend losfahren)
		[01;31m(SU[00m
			[01;31m(NF[00m
				(NX
					(KON oder)
					(NX montag fruh))[01;31m)[00m
			(SIMPX wie sie meinen)[01;31m)[00m))
Step:Unary
{'subtrees': ['NX'], 'family': ['NF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'NN', 'ADV', 'KOUS', 'PPER', 'VVFIN'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (11, 17), 'span': (11, 14), 'left siblings': [], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU gut)
		(DM gut)
		(NX anfang der woche)
		(SIMPX wir konnten ja sonntag abend losfahren)
		[01;31m(SU[00m
			(NX oder montag fruh)
			(SIMPX wie sie meinen)[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['NX', 'SIMPX'], 'family': ['SU', 'DM', 'NX', 'SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ITJ', 'NN', 'ART', 'NN', 'PPER', 'VMFIN', 'ADV', 'NN', 'ADV', 'VVINF', 'KON', 'NN', 'ADV', 'KOUS', 'PPER', 'VVFIN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 17), 'span': (11, 17), 'left siblings': ['SU', 'DM', 'NX', 'SIMPX'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP gut gut anfang der woche wir konnten ja sonntag abend losfahren oder montag fruh wie sie meinen)

Sentence 433:
6 Initial errors
0 on fringe, 3 iterations
2 Error:Different label
2 Error:Different label
2 Error:NP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SU[00m
	(TOP
		(TURN
			[01;31m(SU[00m
				(DM
					(PTKANT ja))[01;31m)[00m
			[01;36m(NX[00m [01;31m(SU[00m
				[01;36m(NX[00m [01;31m(SIMPX[00m
					(MF irgendwie was)
					(VC essen)[01;31m)[00m[01;36m)[00m
				(ADVX oder so)[01;31m)[00m[01;36m)[00m))[01;36m)[00m
Step:Different label
{'family': ['NX', 'ADVX'], 'auto preterminal span': (1, 4), 'span': (1, 4), 'subtrees': ['MF', 'VC'], 'parent': 'SU', 'over_word': False, 'auto preterminals': ('ADV', 'PIS', 'VVINF'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('SIMPX', 'NX')}
[01;36m(SU[00m
	(TOP
		(TURN
			[01;31m(SU[00m
				(DM
					(PTKANT ja))[01;31m)[00m
			[01;36m(NX[00m [01;31m(SU[00m
				(NX irgendwie was essen)
				(ADVX oder so)[01;31m)[00m[01;36m)[00m))[01;36m)[00m
Step:Different label
{'family': ['SU', 'NX'], 'auto preterminal span': (1, 6), 'span': (1, 6), 'subtrees': ['NX', 'ADVX'], 'parent': 'TURN', 'over_word': False, 'auto preterminals': ('ADV', 'PIS', 'VVINF', 'KON', 'ADV'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('SU', 'NX')}
[01;36m(SU[00m
	(TOP
		(TURN
			[01;31m(SU[00m
				(DM
					(PTKANT ja))[01;31m)[00m
			(NX irgendwie was essen oder so)))[01;36m)[00m
Step:NP Attachment
{'new_parent': 'SU', 'new_family': ['DM', 'NX'], 'mover info': [('NX', (1, 6))], 'old_family': ['SU', 'NX'], 'start left siblings': ['SU'], 'auto preterminals': ('PTKANT', 'ADV', 'PIS', 'VVINF', 'KON', 'ADV'), 'start right siblings': [], 'end left siblings': ['DM'], 'auto preterminal span': (0, 6), 'movers': ['NX'], 'old_parent': 'TURN', 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP ja irgendwie was essen oder so)

Sentence 434:
3 Initial errors
0 on fringe, 2 iterations
2 Error:UNSET move
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SU[00m
	(TOP
		(TURN
			[01;31m(SU[00m
				(DM
					(PTKANT ja))[01;31m)[00m
			[01;31m(SU[00m
				(SIMPX
					(KOORD und)
					(VF welches hotel)
					(LK wusten)
					(MF sie da))[01;31m)[00m))[01;36m)[00m
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SU', 'SIMPX'], 'mover info': [('SU', (0, 1))], 'old_family': ['SU', 'SU'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'KON', 'PWAT', 'NN', 'VVFIN', 'PPER', 'ADV'), 'start right siblings': ['SU'], 'end left siblings': [], 'auto preterminal span': (0, 7), 'movers': ['SU'], 'old_parent': 'TURN', 'POS confusion': ('PTKANT', 'PTKANT'), 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			[01;31m(SU[00m
				(DM
					(PTKANT ja))[01;31m)[00m
			(SIMPX und welches hotel wusten sie da))))
Step:Unary
{'subtrees': ['DM'], 'family': ['SU', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'KON', 'PWAT', 'NN', 'VVFIN', 'PPER', 'ADV'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 7), 'span': (0, 1), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja und welches hotel wusten sie da)

Sentence 435:
0 Initial errors
0 on fringe, 0 iterations

Sentence 436:
10 Initial errors
0 on fringe, 8 iterations
2 Error:Single Word Phrase
2 Error:NP Attachment
1 Error:Unary
1 Error:Unary
1 Error:Clause Attachment
1 Error:UNSET remove
1 Error:PP Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM okay)
			(NX januar)
			[01;31m(SIMPX[00m
				(LV wenn ich in meinen terminkalender schaue)
				(VF da)
				(LK habe)
				[01;31m(MF[00m
					[01;36m(MF[00m
						(NX
							(PPER ich))[01;36m)[00m
					[01;36m(VC[00m [01;36m(VXINF[00m [01;31m(ADVX[00m
						(ADV absurderweise)[01;31m)[00m[01;36m)[00m[01;36m)[00m
					[01;36m(NF[00m
						(NX
							(NX freitag)
							(KON und)
							(NX samstag))[01;36m)[00m[01;31m)[00m[01;31m)[00m
			(SIMPX
				(KOORD aber)
				(VF ich)
				(LK denke)
				(NF
					(SIMPX
						(VF unsre geschaftspartner)
						(LK haben)
						(MF
							(NX samstag)
							[01;31m(NX[00m
								(NX kein interesse)
								(PX an unserm besuch)[01;31m)[00m))))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF dann)
				(VXFIN ware)
				(LK hatte)
				(MF ich die erste moglichkeit wieder zwolfter dreizehnter januar))[01;31m)[00m))
Step:Single Word Phrase
{'family': ['NX', 'VXINF', 'NX'], 'auto preterminal span': (11, 12), 'span': (11, 12), 'subtrees': ['ADV'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'VXINF')}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM okay)
			(NX januar)
			[01;31m(SIMPX[00m
				(LV wenn ich in meinen terminkalender schaue)
				(VF da)
				(LK habe)
				[01;31m(MF[00m
					[01;36m(MF[00m
						(NX
							(PPER ich))[01;36m)[00m
					[01;36m(VC[00m
						(VXINF
							(ADV absurderweise))[01;36m)[00m
					[01;36m(NF[00m
						(NX
							(NX freitag)
							(KON und)
							(NX samstag))[01;36m)[00m[01;31m)[00m[01;31m)[00m
			(SIMPX
				(KOORD aber)
				(VF ich)
				(LK denke)
				(NF
					(SIMPX
						(VF unsre geschaftspartner)
						(LK haben)
						(MF
							(NX samstag)
							[01;31m(NX[00m
								(NX kein interesse)
								(PX an unserm besuch)[01;31m)[00m))))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF dann)
				(VXFIN ware)
				(LK hatte)
				(MF ich die erste moglichkeit wieder zwolfter dreizehnter januar))[01;31m)[00m))
Step:NP Attachment
{'new_parent': 'SIMPX', 'new_family': ['LV', 'VF', 'LK', 'MF', 'VXINF', 'NX'], 'mover info': [('VXINF', (11, 12)), ('NX', (12, 15))], 'old_family': ['NX', 'VXINF', 'NX'], 'start left siblings': ['NX'], 'auto preterminals': ('KOUS', 'PPER', 'APPR', 'PPOSAT', 'NN', 'VVFIN', 'ADV', 'VAFIN', 'PPER', 'ADV', 'NN', 'KON', 'NN'), 'start right siblings': [], 'end left siblings': ['LV', 'VF', 'LK', 'MF'], 'auto preterminal span': (2, 15), 'movers': ['VXINF', 'NX'], 'old_parent': 'MF', 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM okay)
			(NX januar)
			[01;31m(SIMPX[00m
				(LV wenn ich in meinen terminkalender schaue)
				(VF da)
				(LK habe)
				(MF ich)
				[01;36m(VC[00m
					(VXINF
						(ADV absurderweise))[01;36m)[00m
				[01;36m(NF[00m
					(NX
						(NX freitag)
						(KON und)
						(NX samstag))[01;36m)[00m[01;31m)[00m
			(SIMPX
				(KOORD aber)
				(VF ich)
				(LK denke)
				(NF
					(SIMPX
						(VF unsre geschaftspartner)
						(LK haben)
						(MF
							(NX samstag)
							[01;31m(NX[00m
								(NX kein interesse)
								(PX an unserm besuch)[01;31m)[00m))))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF dann)
				(VXFIN ware)
				(LK hatte)
				(MF ich die erste moglichkeit wieder zwolfter dreizehnter januar))[01;31m)[00m))
Step:Unary
{'subtrees': ['VXINF'], 'family': ['LV', 'VF', 'LK', 'MF', 'VC', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV',), 'right siblings': [(NX (NX (NN freitag)) (KON und) (NX (NN samstag)))], 'left siblings': [(LV (SIMPX (C (KOUS wenn)) (MF (NX (PPER ich)) (PX (APPR in) (NX (PPOSAT meinen) (NN terminkalender)))) (VC (VXFIN (VVFIN schaue))))), (VF (ADVX (ADV da))), (LK (VXFIN (VAFIN habe))), (MF (NX (PPER ich)))], 'auto preterminal span': (11, 12), 'span': (11, 12), 'parent': 'SIMPX', 'label': 'VC', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM okay)
			(NX januar)
			[01;31m(SIMPX[00m
				(LV wenn ich in meinen terminkalender schaue)
				(VF da)
				(LK habe)
				(MF ich)
				(VC absurderweise)
				[01;36m(NF[00m
					(NX
						(NX freitag)
						(KON und)
						(NX samstag))[01;36m)[00m[01;31m)[00m
			(SIMPX
				(KOORD aber)
				(VF ich)
				(LK denke)
				(NF
					(SIMPX
						(VF unsre geschaftspartner)
						(LK haben)
						(MF
							(NX samstag)
							[01;31m(NX[00m
								(NX kein interesse)
								(PX an unserm besuch)[01;31m)[00m))))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF dann)
				(VXFIN ware)
				(LK hatte)
				(MF ich die erste moglichkeit wieder zwolfter dreizehnter januar))[01;31m)[00m))
Step:Unary
{'subtrees': ['NX'], 'family': ['LV', 'VF', 'LK', 'MF', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'KON', 'NN'), 'right siblings': [], 'left siblings': [(LV (SIMPX (C (KOUS wenn)) (MF (NX (PPER ich)) (PX (APPR in) (NX (PPOSAT meinen) (NN terminkalender)))) (VC (VXFIN (VVFIN schaue))))), (VF (ADVX (ADV da))), (LK (VXFIN (VAFIN habe))), (MF (NX (PPER ich))), (VC (VXINF (ADV absurderweise)))], 'auto preterminal span': (12, 15), 'span': (12, 15), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM okay)
			(NX januar)
			[01;31m(SIMPX[00m
				(LV wenn ich in meinen terminkalender schaue)
				(VF da)
				(LK habe)
				(MF ich)
				(VC absurderweise)
				(NF freitag und samstag)[01;31m)[00m
			(SIMPX
				(KOORD aber)
				(VF ich)
				(LK denke)
				(NF
					(SIMPX
						(VF unsre geschaftspartner)
						(LK haben)
						(MF
							(NX samstag)
							[01;31m(NX[00m
								(NX kein interesse)
								(PX an unserm besuch)[01;31m)[00m))))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF dann)
				(VXFIN ware)
				(LK hatte)
				(MF ich die erste moglichkeit wieder zwolfter dreizehnter januar))[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['DM', 'NX', 'SIMPX', 'SIMPX'], 'family': ['SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'NN', 'KOUS', 'PPER', 'APPR', 'PPOSAT', 'NN', 'VVFIN', 'ADV', 'VAFIN', 'PPER', 'ADV', 'NN', 'KON', 'NN', 'KON', 'PPER', 'VVFIN', 'PPOSAT', 'NN', 'VAFIN', 'NN', 'PIAT', 'NN', 'APPR', 'PPOSAT', 'NN', 'ADV', 'VAFIN', 'VAFIN', 'PPER', 'ART', 'ADJA', 'NN', 'ADV', 'ADJA', 'ADJA', 'NN'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 38), 'span': (0, 27), 'left siblings': [], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(NX januar)
		[01;31m(SIMPX[00m
			(LV wenn ich in meinen terminkalender schaue)
			(VF da)
			(LK habe)
			(MF ich)
			(VC absurderweise)
			(NF freitag und samstag)[01;31m)[00m
		(SIMPX
			(KOORD aber)
			(VF ich)
			(LK denke)
			(NF
				(SIMPX
					(VF unsre geschaftspartner)
					(LK haben)
					(MF
						(NX samstag)
						[01;31m(NX[00m
							(NX kein interesse)
							(PX an unserm besuch)[01;31m)[00m))))
		[01;31m(SU[00m
			(SIMPX
				(VF dann)
				(VXFIN ware)
				(LK hatte)
				(MF ich die erste moglichkeit wieder zwolfter dreizehnter januar))[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['LV', 'VF', 'LK', 'MF', 'VC', 'NF'], 'family': ['DM', 'NX', 'SIMPX', 'SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'NN', 'KOUS', 'PPER', 'APPR', 'PPOSAT', 'NN', 'VVFIN', 'ADV', 'VAFIN', 'PPER', 'ADV', 'NN', 'KON', 'NN', 'KON', 'PPER', 'VVFIN', 'PPOSAT', 'NN', 'VAFIN', 'NN', 'PIAT', 'NN', 'APPR', 'PPOSAT', 'NN', 'ADV', 'VAFIN', 'VAFIN', 'PPER', 'ART', 'ADJA', 'NN', 'ADV', 'ADJA', 'ADJA', 'NN'), 'right siblings': ['SIMPX', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 38), 'span': (2, 15), 'left siblings': ['DM', 'NX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(NX januar)
		(LV wenn ich in meinen terminkalender schaue)
		(VF da)
		(LK habe)
		(MF ich)
		(VC absurderweise)
		(NF freitag und samstag)
		(SIMPX
			(KOORD aber)
			(VF ich)
			(LK denke)
			(NF
				(SIMPX
					(VF unsre geschaftspartner)
					(LK haben)
					(MF
						(NX samstag)
						[01;31m(NX[00m
							(NX kein interesse)
							(PX an unserm besuch)[01;31m)[00m))))
		[01;31m(SU[00m
			(SIMPX
				(VF dann)
				(VXFIN ware)
				(LK hatte)
				(MF ich die erste moglichkeit wieder zwolfter dreizehnter januar))[01;31m)[00m))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'PIAT', 'NN', 'APPR', 'PPOSAT', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (21, 27), 'span': (22, 27), 'left siblings': ['NX'], 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(NX januar)
		(LV wenn ich in meinen terminkalender schaue)
		(VF da)
		(LK habe)
		(MF ich)
		(VC absurderweise)
		(NF freitag und samstag)
		(SIMPX aber ich denke unsre geschaftspartner haben samstag kein interesse an unserm besuch)
		[01;31m(SU[00m
			(SIMPX
				(VF dann)
				(VXFIN ware)
				(LK hatte)
				(MF ich die erste moglichkeit wieder zwolfter dreizehnter januar))[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['DM', 'NX', 'LV', 'VF', 'LK', 'MF', 'VC', 'NF', 'SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'NN', 'KOUS', 'PPER', 'APPR', 'PPOSAT', 'NN', 'VVFIN', 'ADV', 'VAFIN', 'PPER', 'ADV', 'NN', 'KON', 'NN', 'KON', 'PPER', 'VVFIN', 'PPOSAT', 'NN', 'VAFIN', 'NN', 'PIAT', 'NN', 'APPR', 'PPOSAT', 'NN', 'ADV', 'VAFIN', 'VAFIN', 'PPER', 'ART', 'ADJA', 'NN', 'ADV', 'ADJA', 'ADJA', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 38), 'span': (27, 38), 'left siblings': ['DM', 'NX', 'LV', 'VF', 'LK', 'MF', 'VC', 'NF', 'SIMPX'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP okay januar wenn ich in meinen terminkalender schaue da habe ich absurderweise freitag und samstag aber ich denke unsre geschaftspartner haben samstag kein interesse an unserm besuch dann ware hatte ich die erste moglichkeit wieder zwolfter dreizehnter januar)

Sentence 437:
6 Initial errors
0 on fringe, 5 iterations
2 Error:UNSET move
1 Error:Unary
1 Error:PP Attachment
1 Error:Modifier Attachment
1 Error:NP Internal Structure
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SU[00m
	(TOP
		(TURN
			[01;31m(SU[00m
				(DM
					(ITJ aha))[01;31m)[00m
			[01;31m(SU[00m
				(DM gut)
				[01;31m(PX[00m
					(PX bei mir)
					(ADVX auch)[01;31m)[00m[01;31m)[00m
			[01;31m(SU[00m
				[01;31m(NX[00m
					(NX ende januar)
					(NX siebenundzwanzigster achtundzwanzigster)[01;31m)[00m[01;31m)[00m))[01;36m)[00m
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SU', 'SU', 'NX'], 'mover info': [('SU', (0, 1)), ('SU', (1, 5))], 'old_family': ['SU', 'SU', 'SU'], 'start left siblings': [], 'auto preterminals': ('ITJ', 'ITJ', 'APPR', 'PPER', 'ADV', 'NN', 'NN', 'NN', 'NN'), 'start right siblings': ['SU'], 'end left siblings': [], 'auto preterminal span': (0, 9), 'movers': ['SU', 'SU'], 'old_parent': 'TURN', 'end right siblings': ['NX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			[01;31m(SU[00m
				(DM
					(ITJ aha))[01;31m)[00m
			[01;31m(SU[00m
				(DM gut)
				[01;31m(PX[00m
					(PX bei mir)
					(ADVX auch)[01;31m)[00m[01;31m)[00m
			[01;31m(NX[00m
				(NX ende januar)
				(NX siebenundzwanzigster achtundzwanzigster)[01;31m)[00m)))
Step:Unary
{'subtrees': ['DM'], 'family': ['SU', 'SU', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ITJ', 'APPR', 'PPER', 'ADV', 'NN', 'NN', 'NN', 'NN'), 'right siblings': ['SU', 'NX'], 'parent': 'SU', 'auto preterminal span': (0, 9), 'span': (0, 1), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM aha)
			[01;31m(SU[00m
				(DM gut)
				[01;31m(PX[00m
					(PX bei mir)
					(ADVX auch)[01;31m)[00m[01;31m)[00m
			[01;31m(NX[00m
				(NX ende januar)
				(NX siebenundzwanzigster achtundzwanzigster)[01;31m)[00m)))
Step:PP Attachment
{'subtrees': ['DM', 'PX'], 'family': ['DM', 'SU', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ITJ', 'APPR', 'PPER', 'ADV', 'NN', 'NN', 'NN', 'NN'), 'right siblings': ['NX'], 'parent': 'SU', 'auto preterminal span': (0, 9), 'span': (1, 5), 'left siblings': ['DM'], 'label': 'SU', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM aha)
			(DM gut)
			[01;31m(PX[00m
				(PX bei mir)
				(ADVX auch)[01;31m)[00m
			[01;31m(NX[00m
				(NX ende januar)
				(NX siebenundzwanzigster achtundzwanzigster)[01;31m)[00m)))
Step:Modifier Attachment
{'subtrees': ['PX', 'ADVX'], 'family': ['DM', 'DM', 'PX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ITJ', 'APPR', 'PPER', 'ADV', 'NN', 'NN', 'NN', 'NN'), 'right siblings': ['NX'], 'parent': 'SU', 'auto preterminal span': (0, 9), 'span': (2, 5), 'left siblings': ['DM', 'DM'], 'label': 'PX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM aha)
			(DM gut)
			(PX bei mir)
			(ADVX auch)
			[01;31m(NX[00m
				(NX ende januar)
				(NX siebenundzwanzigster achtundzwanzigster)[01;31m)[00m)))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['DM', 'DM', 'PX', 'ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ITJ', 'APPR', 'PPER', 'ADV', 'NN', 'NN', 'NN', 'NN'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (0, 9), 'span': (5, 9), 'left siblings': ['DM', 'DM', 'PX', 'ADVX'], 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'remove'}
(TOP aha gut bei mir auch ende januar siebenundzwanzigster achtundzwanzigster)

Sentence 438:
5 Initial errors
0 on fringe, 2 iterations
4 Error:NP Attachment
1 Error:Clause Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU aha)
		[01;31m(SU[00m
			(DM okay)
			(ADVX dann)
			(DM ja)
			(DM nee)
			(SIMPX [01;33m(SIMPX[00m
				(VF dann)
				(LK nehmen)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX wir)
					(ADVX doch)
					[01;31m(NX[00m
						(NX siebenundzwanzigsten und achtundzwanzigsten) [01;33mMF) SIMPX)[00m
						(NX dienstag mittwoch)[01;31m)[00m[01;31m)[00m)[01;31m)[00m))
Step:NP Attachment
{'new_parent': 'SU', 'new_family': ['DM', 'ADVX', 'DM', 'DM', 'SIMPX', 'NX'], 'mover info': [('NX', (12, 14))], 'old_family': ['NX', 'NX'], 'start left siblings': ['NX'], 'auto preterminals': ('ITJ', 'ADV', 'PTKANT', 'PTKANT', 'ADV', 'VVFIN', 'PPER', 'ADV', 'NN', 'KON', 'NN', 'NN', 'NN'), 'start right siblings': [], 'end left siblings': ['DM', 'ADVX', 'DM', 'DM', 'SIMPX'], 'auto preterminal span': (1, 14), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'SIMPX'}
(TOP
	(TURN
		(SU aha)
		[01;31m(SU[00m
			(DM okay)
			(ADVX dann)
			(DM ja)
			(DM nee)
			(SIMPX dann nehmen wir doch siebenundzwanzigsten und achtundzwanzigsten dienstag mittwoch)[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['DM', 'ADVX', 'DM', 'DM', 'SIMPX'], 'family': ['SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ITJ', 'ADV', 'PTKANT', 'PTKANT', 'ADV', 'VVFIN', 'PPER', 'ADV', 'NN', 'KON', 'NN', 'NN', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 14), 'span': (1, 14), 'left siblings': ['SU'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP aha okay dann ja nee dann nehmen wir doch siebenundzwanzigsten und achtundzwanzigsten dienstag mittwoch)

Sentence 439:
15 Initial errors
0 on fringe, 8 iterations
4 Error:Modifier Attachment
2 Error:Modifier Attachment
3 Error:UNSET move
2 Error:Different label
1 Error:Unary
1 Error:UNSET add
1 Error:Clause Attachment
1 Error:Clause Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP [01;33m(SIMPX[00m
	(TURN
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK konnen)
				[01;31m(MF[00m
					[01;36m(MF[00m
						(NX
							(PPER wir)) [01;33mSIMPX)[00m[01;36m)[00m
					[01;36m(DM[00m
						(ADVX [01;33m(SIMPX[00m
							(ADV also))[01;36m)[00m[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(LK konnen)
				(MF wir)
				(VC probieren)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m [01;33m(SIMPX[00m
			[01;31m(SIMPX[00m
				(C wenn)
				[01;31m(MF[00m
					[01;36m(MF[00m
						(NX ich)
						(NX die verbindung) [01;33mSIMPX) SIMPX) SIMPX)[00m[01;36m)[00m
					[01;36m(DM[00m
						(ADVX
							(ADV also))[01;36m)[00m[01;31m)[00m[01;31m)[00m
			(SIMPX wir konnen zug oder flugzeug nehmen)[01;31m)[00m
		(SU was was ist dir lieber)))
Step:Modifier Attachment
{'new_parent': 'SIMPX', 'new_family': ['ADVX', 'LK', 'MF', 'VC'], 'mover info': [('ADVX', (2, 3))], 'old_family': ['NX', 'ADVX'], 'start left siblings': ['NX'], 'auto preterminals': ('VMFIN', 'PPER', 'ADV', 'VMFIN', 'PPER', 'VVINF'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 6), 'movers': ['ADVX'], 'old_parent': 'MF', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['LK', 'MF', 'VC'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			(SIMPX konnen wir)
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				[01;36m(DM[00m
					(ADVX
						(ADV also))[01;36m)[00m
				[01;33m(SIMPX[00m (LK konnen)
				(MF wir)
				(VC probieren)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m [01;33m(SIMPX[00m
			[01;31m(SIMPX[00m
				(C wenn)
				[01;31m(MF[00m
					[01;36m(MF[00m
						(NX ich)
						(NX die verbindung) [01;33mSIMPX) SIMPX) SIMPX)[00m[01;36m)[00m
					[01;36m(DM[00m
						(ADVX
							(ADV also))[01;36m)[00m[01;31m)[00m[01;31m)[00m
			(SIMPX wir konnen zug oder flugzeug nehmen)[01;31m)[00m
		(SU was was ist dir lieber)))
Step:Modifier Attachment
{'new_parent': 'SIMPX', 'new_family': ['C', 'MF', 'ADVX'], 'mover info': [('ADVX', (10, 11))], 'old_family': ['NX', 'NX', 'ADVX'], 'start left siblings': ['NX', 'NX'], 'auto preterminals': ('KOUS', 'PPER', 'ART', 'NN', 'ADV'), 'start right siblings': [], 'end left siblings': ['C', 'MF'], 'auto preterminal span': (6, 11), 'movers': ['ADVX'], 'old_parent': 'MF', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			(SIMPX konnen wir)
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				[01;36m(DM[00m
					(ADVX
						(ADV also))[01;36m)[00m
				[01;33m(SIMPX[00m (LK konnen)
				(MF wir)
				(VC probieren)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;36m(SIMPX[00m
					(C wenn)
					(MF ich die verbindung) [01;33mSIMPX) SIMPX)[00m[01;36m)[00m
				[01;36m(DM[00m
					(ADVX
						(ADV also))[01;36m)[00m[01;31m)[00m
			(SIMPX wir konnen zug oder flugzeug nehmen)[01;31m)[00m
		(SU was was ist dir lieber)))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['ADVX', 'LK', 'MF', 'VC', 'C', 'MF'], 'mover info': [('C', (6, 7)), ('MF', (7, 10))], 'old_family': ['C', 'MF', 'ADVX'], 'start left siblings': [], 'auto preterminals': ('VMFIN', 'PPER', 'ADV', 'VMFIN', 'PPER', 'VVINF', 'KOUS', 'PPER', 'ART', 'NN', 'ADV', 'PPER', 'VMFIN', 'NN', 'KON', 'NN', 'VVINF', 'PWS', 'PWS', 'VAFIN', 'PPER', 'ADJD'), 'start right siblings': ['ADVX'], 'end left siblings': ['ADVX', 'LK', 'MF', 'VC'], 'auto preterminal span': (0, 22), 'adding node already present': False, 'movers': ['C', 'MF'], 'old_parent': 'SIMPX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'DM'}
(TOP
	(TURN
		[01;31m(SU[00m
			(SIMPX konnen wir)
			(SIMPX
				[01;36m(DM[00m
					(ADVX
						(ADV also))[01;36m)[00m
				(SIMPX
					(LK konnen)
					(MF wir)
					(VC probieren)
					[01;36m(SIMPX[00m
						(C wenn)
						(MF ich die verbindung)[01;36m)[00m))[01;31m)[00m
		[01;31m(SU[00m
			[01;36m(DM[00m [01;31m(SIMPX[00m
				(ADVX
					(ADV also))[01;31m)[00m[01;36m)[00m
			(SIMPX wir konnen zug oder flugzeug nehmen)[01;31m)[00m
		(SU was was ist dir lieber)))
Step:Different label
{'family': ['DM', 'SIMPX'], 'auto preterminal span': (10, 11), 'span': (10, 11), 'subtrees': ['ADVX'], 'parent': 'SU', 'over_word': False, 'auto preterminals': ('ADV',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('SIMPX', 'DM')}
(TOP
	(TURN
		[01;31m(SU[00m
			(SIMPX konnen wir)
			(SIMPX
				[01;36m(DM[00m
					(ADVX
						(ADV also))[01;36m)[00m
				(SIMPX
					(LK konnen)
					(MF wir)
					(VC probieren)
					[01;36m(SIMPX[00m
						(C wenn)
						(MF ich die verbindung)[01;36m)[00m))[01;31m)[00m
		[01;31m(SU[00m
			(DM also)
			(SIMPX wir konnen zug oder flugzeug nehmen)[01;31m)[00m
		(SU was was ist dir lieber)))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV',), 'right siblings': [(SIMPX (LK (VXFIN (VMFIN konnen))) (MF (NX (PPER wir))) (VC (VXINF (VVINF probieren))) (C (KOUS wenn)) (MF (NX (PPER ich)) (NX (ART die) (NN verbindung))))], 'left siblings': [], 'auto preterminal span': (2, 3), 'span': (2, 3), 'parent': 'SIMPX', 'label': 'DM', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(SIMPX konnen wir)
			(SIMPX
				(DM also)
				(SIMPX
					(LK konnen)
					(MF wir)
					(VC probieren)
					[01;36m(SIMPX[00m
						(C wenn)
						(MF ich die verbindung)[01;36m)[00m))[01;31m)[00m
		[01;31m(SU[00m
			(DM also)
			(SIMPX wir konnen zug oder flugzeug nehmen)[01;31m)[00m
		(SU was was ist dir lieber)))
Step:UNSET add
{'subtrees': ['C', 'MF'], 'family': ['LK', 'MF', 'VC', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ART', 'NN'), 'right siblings': [], 'left siblings': [(LK (VXFIN (VMFIN konnen))), (MF (NX (PPER wir))), (VC (VXINF (VVINF probieren)))], 'auto preterminal span': (6, 10), 'span': (6, 10), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(SIMPX konnen wir)
			(SIMPX also konnen wir probieren wenn ich die verbindung)[01;31m)[00m
		[01;31m(SU[00m
			(DM also)
			(SIMPX wir konnen zug oder flugzeug nehmen)[01;31m)[00m
		(SU was was ist dir lieber)))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('VMFIN', 'PPER', 'ADV', 'VMFIN', 'PPER', 'VVINF', 'KOUS', 'PPER', 'ART', 'NN', 'ADV', 'PPER', 'VMFIN', 'NN', 'KON', 'NN', 'VVINF', 'PWS', 'PWS', 'VAFIN', 'PPER', 'ADJD'), 'right siblings': ['SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 22), 'span': (0, 10), 'left siblings': [], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX konnen wir)
		(SIMPX also konnen wir probieren wenn ich die verbindung)
		[01;31m(SU[00m
			(DM also)
			(SIMPX wir konnen zug oder flugzeug nehmen)[01;31m)[00m
		(SU was was ist dir lieber)))
Step:Clause Attachment
{'subtrees': ['DM', 'SIMPX'], 'family': ['SIMPX', 'SIMPX', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('VMFIN', 'PPER', 'ADV', 'VMFIN', 'PPER', 'VVINF', 'KOUS', 'PPER', 'ART', 'NN', 'ADV', 'PPER', 'VMFIN', 'NN', 'KON', 'NN', 'VVINF', 'PWS', 'PWS', 'VAFIN', 'PPER', 'ADJD'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 22), 'span': (10, 17), 'left siblings': ['SIMPX', 'SIMPX'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP konnen wir also konnen wir probieren wenn ich die verbindung also wir konnen zug oder flugzeug nehmen was was ist dir lieber)

Sentence 440:
16 Initial errors
0 on fringe, 10 iterations
5 Error:Modifier Attachment
2 Error:Single Word Phrase
1 Error:Unary
1 Error:UNSET add
1 Error:Co-ordination
1 Error:Unary
1 Error:Clause Attachment
1 Error:UNSET remove
2 Error:PP Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;36m(SIMPX[00m
			(SU
				(SIMPX der muste ja)
				(SIMPX der muste eigentlich reichen))[01;36m)[00m
		[01;31m(SU[00m
			(DM also)
			(SIMPX
				(LV munchen hannover)
				[01;36m(SIMPX[00m
					(VF das)
					(LK sind)
					(MF knapp funf stunden)[01;36m)[00m)
			(DM ja)
			[01;36m(ADVX[00m
				[01;36m(DM[00m
					(DM also)
					(DM also)[01;36m)[00m[01;36m)[00m
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					[01;31m(NX[00m
						[01;31m(ADJX[00m
							[01;36m(NX[00m [01;31m(ADJX[00m
								(CARD vier)[01;31m)[00m[01;36m)[00m
							[01;33m(VF (NX[00m (ADJX viereinhalb)[01;31m)[00m
						(NN stunden)[01;31m)[00m[01;31m)[00m [01;33mNX) VF)[00m
				(LK sehe)
				[01;33m(MF[00m (MF ich)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(NX[00m
				(NX viereinhalb stunden fahrzeit)
				(PX nach hannover)[01;31m)[00m[01;31m)[00m)) [01;33mMF)[00m
Step:Modifier Attachment
{'new_parent': 'SIMPX', 'new_family': ['ADJX', 'VF', 'LK', 'MF'], 'mover info': [('ADJX', (18, 19))], 'old_family': ['ADJX', 'ADJX'], 'start left siblings': [], 'auto preterminals': ('CARD', 'CARD', 'NN', 'VVFIN', 'PPER'), 'start right siblings': ['ADJX'], 'end left siblings': [], 'auto preterminal span': (18, 23), 'movers': ['ADJX'], 'old_parent': 'ADJX', 'POS confusion': ('CARD', 'CARD'), 'end right siblings': ['VF', 'LK', 'MF'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;36m(SIMPX[00m
			(SU
				(SIMPX der muste ja)
				(SIMPX der muste eigentlich reichen))[01;36m)[00m
		[01;31m(SU[00m
			(DM also)
			(SIMPX
				(LV munchen hannover)
				[01;36m(SIMPX[00m
					(VF das)
					(LK sind)
					(MF knapp funf stunden)[01;36m)[00m)
			(DM ja)
			[01;36m(ADVX[00m
				[01;36m(DM[00m
					(DM also)
					(DM also)[01;36m)[00m[01;36m)[00m
			[01;31m(SIMPX[00m
				[01;36m(NX[00m [01;31m(ADJX[00m
					(CARD vier)[01;31m)[00m[01;36m)[00m
				(VF viereinhalb stunden)
				(LK sehe)
				[01;33m(MF[00m (MF ich)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(NX[00m
				(NX viereinhalb stunden fahrzeit)
				(PX nach hannover)[01;31m)[00m[01;31m)[00m)) [01;33mMF)[00m
Step:Single Word Phrase
{'family': ['NX', 'VF', 'LK', 'MF'], 'auto preterminal span': (18, 19), 'span': (18, 19), 'subtrees': ['CARD'], 'parent': 'SIMPX', 'over_word': True, 'auto preterminals': ('CARD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'NX')}
(TOP
	(TURN
		[01;36m(SIMPX[00m
			(SU
				(SIMPX der muste ja)
				(SIMPX der muste eigentlich reichen))[01;36m)[00m
		[01;31m(SU[00m
			(DM also)
			(SIMPX
				(LV munchen hannover)
				[01;36m(SIMPX[00m
					(VF das)
					(LK sind)
					(MF knapp funf stunden)[01;36m)[00m)
			(DM ja)
			[01;36m(ADVX[00m
				[01;36m(DM[00m
					(DM also)
					(DM also)[01;36m)[00m[01;36m)[00m
			[01;31m(SIMPX[00m
				(NX vier)
				(VF viereinhalb stunden)
				(LK sehe)
				[01;33m(MF[00m (MF ich)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(NX[00m
				(NX viereinhalb stunden fahrzeit)
				(PX nach hannover)[01;31m)[00m[01;31m)[00m)) [01;33mMF)[00m
Step:Unary
{'subtrees': ['SU'], 'family': ['SIMPX', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VMFIN', 'ADV', 'PDS', 'VMFIN', 'ADV', 'VVINF'), 'right siblings': [(SU (DM (ADVX (ADV also))) (SIMPX (LV (NX (NX (NE munchen)) (NX (NE hannover)))) (VF (NX (PDS das))) (LK (VXFIN (VAFIN sind))) (MF (NX (ADVX (ADV knapp)) (ADJX (CARD funf)) (NN stunden)))) (DM (PTKANT ja)) (DM (ADVX (ADV also))) (DM (ADVX (ADV also))) (SIMPX (NX (CARD vier)) (VF (NX (ADJX (CARD viereinhalb)) (NN stunden))) (LK (VXFIN (VVFIN sehe))) (MF (NX (PPER ich))))), (SU (NX (NX (NX (ADJX (CARD viereinhalb)) (NN stunden)) (NX (NN fahrzeit))) (PX (APPR nach) (NX (NE hannover)))))], 'left siblings': [], 'auto preterminal span': (0, 7), 'span': (0, 7), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SIMPX der muste ja der muste eigentlich reichen)
		[01;31m(SU[00m
			(DM also)
			(SIMPX
				(LV munchen hannover)
				[01;36m(SIMPX[00m
					(VF das)
					(LK sind)
					(MF knapp funf stunden)[01;36m)[00m)
			(DM ja)
			[01;36m(ADVX[00m
				[01;36m(DM[00m
					(DM also)
					(DM also)[01;36m)[00m[01;36m)[00m
			[01;31m(SIMPX[00m
				(NX vier)
				(VF viereinhalb stunden)
				(LK sehe)
				[01;33m(MF[00m (MF ich)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(NX[00m
				(NX viereinhalb stunden fahrzeit)
				(PX nach hannover)[01;31m)[00m[01;31m)[00m)) [01;33mMF)[00m
Step:UNSET add
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['LV', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VAFIN', 'ADV', 'CARD', 'NN'), 'right siblings': [], 'left siblings': [(LV (NX (NX (NE munchen)) (NX (NE hannover))))], 'auto preterminal span': (10, 15), 'span': (10, 15), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SIMPX der muste ja der muste eigentlich reichen)
		[01;31m(SU[00m
			(DM also)
			(SIMPX munchen hannover das sind knapp funf stunden)
			(DM ja)
			[01;36m(ADVX[00m
				[01;36m(DM[00m
					(DM also)
					(DM also)[01;36m)[00m[01;36m)[00m
			[01;31m(SIMPX[00m
				(NX vier)
				(VF viereinhalb stunden)
				(LK sehe)
				[01;33m(MF[00m (MF ich)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(NX[00m
				(NX viereinhalb stunden fahrzeit)
				(PX nach hannover)[01;31m)[00m[01;31m)[00m)) [01;33mMF)[00m
Step:Co-ordination
{'subtrees': ['DM', 'DM'], 'family': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV'), 'right siblings': [(SIMPX (NX (CARD vier)) (VF (NX (ADJX (CARD viereinhalb)) (NN stunden))) (LK (VXFIN (VVFIN sehe))) (MF (NX (PPER ich))))], 'left siblings': [(DM (ADVX (ADV also))), (SIMPX (LV (NX (NX (NE munchen)) (NX (NE hannover)))) (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VAFIN sind))) (MF (NX (ADVX (ADV knapp)) (ADJX (CARD funf)) (NN stunden))))), (DM (PTKANT ja))], 'auto preterminal span': (16, 18), 'span': (16, 18), 'parent': 'SU', 'label': 'DM', 'classified_type': 'Co-ordination', 'type': 'add'}
(TOP
	(TURN
		(SIMPX der muste ja der muste eigentlich reichen)
		[01;31m(SU[00m
			(DM also)
			(SIMPX munchen hannover das sind knapp funf stunden)
			(DM ja)
			[01;36m(ADVX[00m
				(DM
					(DM also)
					(DM also))[01;36m)[00m
			[01;31m(SIMPX[00m
				(NX vier)
				(VF viereinhalb stunden)
				(LK sehe)
				[01;33m(MF[00m (MF ich)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(NX[00m
				(NX viereinhalb stunden fahrzeit)
				(PX nach hannover)[01;31m)[00m[01;31m)[00m)) [01;33mMF)[00m
Step:Unary
{'subtrees': ['DM'], 'family': ['DM', 'SIMPX', 'DM', 'ADVX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV'), 'right siblings': [(SIMPX (NX (CARD vier)) (VF (NX (ADJX (CARD viereinhalb)) (NN stunden))) (LK (VXFIN (VVFIN sehe))) (MF (NX (PPER ich))))], 'left siblings': [(DM (ADVX (ADV also))), (SIMPX (LV (NX (NX (NE munchen)) (NX (NE hannover)))) (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VAFIN sind))) (MF (NX (ADVX (ADV knapp)) (ADJX (CARD funf)) (NN stunden))))), (DM (PTKANT ja))], 'auto preterminal span': (16, 18), 'span': (16, 18), 'parent': 'SU', 'label': 'ADVX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SIMPX der muste ja der muste eigentlich reichen)
		[01;31m(SU[00m
			(DM also)
			(SIMPX munchen hannover das sind knapp funf stunden)
			(DM ja)
			(ADVX also also)
			[01;31m(SIMPX[00m
				(NX vier)
				(VF viereinhalb stunden)
				(LK sehe)
				[01;33m(MF[00m (MF ich)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(NX[00m
				(NX viereinhalb stunden fahrzeit)
				(PX nach hannover)[01;31m)[00m[01;31m)[00m)) [01;33mMF)[00m
Step:Clause Attachment
{'subtrees': ['DM', 'SIMPX', 'DM', 'ADVX', 'SIMPX'], 'family': ['SIMPX', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VMFIN', 'ADV', 'PDS', 'VMFIN', 'ADV', 'VVINF', 'ADV', 'NE', 'NE', 'PDS', 'VAFIN', 'ADV', 'CARD', 'NN', 'PTKANT', 'ADV', 'ADV', 'CARD', 'CARD', 'NN', 'VVFIN', 'PPER', 'CARD', 'NN', 'NN', 'APPR', 'NE'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 28), 'span': (7, 23), 'left siblings': ['SIMPX'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX der muste ja der muste eigentlich reichen)
		(DM also)
		(SIMPX munchen hannover das sind knapp funf stunden)
		(DM ja)
		(ADVX also also)
		[01;31m(SIMPX[00m
			(NX vier)
			(VF viereinhalb stunden)
			(LK sehe)
			[01;33m(MF[00m (MF ich)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(NX[00m
				(NX viereinhalb stunden fahrzeit)
				(PX nach hannover)[01;31m)[00m[01;31m)[00m)) [01;33mMF)[00m
Step:UNSET remove
{'subtrees': ['NX', 'VF', 'LK', 'MF'], 'family': ['SIMPX', 'DM', 'SIMPX', 'DM', 'ADVX', 'SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VMFIN', 'ADV', 'PDS', 'VMFIN', 'ADV', 'VVINF', 'ADV', 'NE', 'NE', 'PDS', 'VAFIN', 'ADV', 'CARD', 'NN', 'PTKANT', 'ADV', 'ADV', 'CARD', 'CARD', 'NN', 'VVFIN', 'PPER', 'CARD', 'NN', 'NN', 'APPR', 'NE'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 28), 'span': (18, 23), 'left siblings': ['SIMPX', 'DM', 'SIMPX', 'DM', 'ADVX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX der muste ja der muste eigentlich reichen)
		(DM also)
		(SIMPX munchen hannover das sind knapp funf stunden)
		(DM ja)
		(ADVX also also)
		(NX vier)
		(VF viereinhalb stunden)
		(LK sehe)
		[01;36m(MF[00m
			(MF ich)
			[01;31m(SU[00m
				[01;31m(NX[00m
					(NX viereinhalb stunden fahrzeit)
					(PX nach hannover)[01;31m)[00m[01;31m)[00m[01;36m)[00m))
Step:PP Attachment
{'new_parent': 'TURN', 'new_family': ['SIMPX', 'DM', 'SIMPX', 'DM', 'ADVX', 'NX', 'VF', 'LK', 'MF', 'SU', 'PX'], 'mover info': [('PX', (26, 28))], 'old_family': ['NX', 'PX'], 'start left siblings': ['NX'], 'auto preterminals': ('PDS', 'VMFIN', 'ADV', 'PDS', 'VMFIN', 'ADV', 'VVINF', 'ADV', 'NE', 'NE', 'PDS', 'VAFIN', 'ADV', 'CARD', 'NN', 'PTKANT', 'ADV', 'ADV', 'CARD', 'CARD', 'NN', 'VVFIN', 'PPER', 'CARD', 'NN', 'NN', 'APPR', 'NE'), 'start right siblings': [], 'end left siblings': ['SIMPX', 'DM', 'SIMPX', 'DM', 'ADVX', 'NX', 'VF', 'LK', 'MF', 'SU'], 'auto preterminal span': (0, 28), 'adding node already present': False, 'movers': ['PX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'MF'}
(TOP
	(TURN
		(SIMPX der muste ja der muste eigentlich reichen)
		(DM also)
		(SIMPX munchen hannover das sind knapp funf stunden)
		(DM ja)
		(ADVX also also)
		(NX vier)
		(VF viereinhalb stunden)
		(LK sehe)
		(MF
			(MF ich)
			[01;31m(SU[00m
				(NX
					(NX viereinhalb stunden)
					(NX fahrzeit))[01;31m)[00m
			(PX nach hannover))))
Step:Unary
{'subtrees': ['NX'], 'family': ['MF', 'SU', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'CARD', 'NN', 'NN', 'APPR', 'NE'), 'right siblings': ['PX'], 'parent': 'MF', 'auto preterminal span': (22, 28), 'span': (23, 26), 'left siblings': ['MF'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP der muste ja der muste eigentlich reichen also munchen hannover das sind knapp funf stunden ja also also vier viereinhalb stunden sehe ich viereinhalb stunden fahrzeit nach hannover)

Sentence 441:
40 Initial errors
0 on fringe, 32 iterations
5 Error:Modifier Attachment
2 Error:Different label
2 Error:Single Word Phrase
2 Error:Modifier Attachment
2 Error:PP Attachment
1 Error:UNSET add
1 Error:Unary
1 Error:Clause Attachment
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:UNSET add
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:UNSET add
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:UNSET add
1 Error:Modifier Attachment
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET add
1 Error:Clause Attachment
1 Error:Clause Attachment
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:Clause Attachment
1 Error:Clause Attachment
1 Error:UNSET add
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM okay)
			[01;31m(SIMPX[00m
				[01;31m(LV[00m
					(NX
						(ADJX siebenundzwanzigster)
						(NN januar))[01;31m)[00m
				[01;33m(SIMPX[00m (VF dann)
				[01;31m(FKOORD[00m
					[01;31m(LKMVC[00m
						(LK fahren)
						(MF wir)
						(VC los)[01;31m)[00m [01;33mSIMPX)[00m
					(APPR um)
					[01;31m(LKM[00m
						(LK nehmen)
						(MF den ice um zehn uhr)[01;31m)[00m
					[01;31m(LKM[00m
						(LK sind)
						[01;33m(MF[00m (MF um funfzehn uhr in hannover)[01;31m)[00m
					[01;31m(LKM[00m
						[01;36m(VXINF[00m [01;36m(VC[00m [01;31m(LK[00m
							[01;31m(VXFIN[00m
								(VVFIN nehmen)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m
						(MF da ein taxi)[01;31m)[00m [01;33mMF)[00m
					(KON und)
					(KON und)
					(KON und)
					[01;33m(LKM[00m (LKMVC kommen rechtzeitig an)[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				(KOORD und) [01;33mLKM)[00m
				(VF dann)
				(LK wurden)
				(MF [01;33m(MF[00m
					(NX wir)
					[01;31m(PX[00m
						(PX am achtundzwanzigsten)
						(ADVX abends)[01;31m)[00m
					(ADVX einfach)
					(ADVX wieder))
				(VC zuruckfahren)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF da)
				(LK wurde)
				(MF ich vielleicht) [01;33mMF)[00m
				(VC sagen)
				[01;33m(SIMPX (NF[00m (NF wir nehmen das flugzeug)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;36m(SIMPX[00m
				[01;31m(SIMPX[00m
					(VF da)
					(LK gibt)
					[01;31m(MF[00m [01;33m(MF[00m
						[01;36m(MF[00m
							(NX es)
							(NX einen flug)[01;36m)[00m
						[01;33m(NX (NX[00m (NX siebzehn uhr zwanzig)[01;31m)[00m[01;31m)[00m
				[01;31m(ADJX[00m
					(ADVX sogar) [01;33mNX)[00m
					(ADJX stundlich bis einundzwanzig uhr zwanzig)[01;31m)[00m [01;33mNX) MF) NF) SIMPX)[00m[01;36m)[00m
			[01;31m(SIMPX[00m
				(VF das)
				(LK heist)
				(NF
					(SIMPX
						(VF wir)
						[01;31m(FKOORD[00m
							(LKMVC
								(LK konnen)
								[01;31m(MF[00m
									(ADVX auch)
									(ADVX noch)
									[01;36m(VF[00m
										(PX [01;33m(SIMPX[00m
											(APPR um)
											(NX zwanzig nach acht))[01;36m)[00m
									[01;31m(SIMPX[00m [01;33m(LKMVC[00m
										(LK konnen)
										[01;31m(MF[00m [01;33m(MF[00m
											(NX
												(PPER wir))[01;31m)[00m[01;31m)[00m
									(PX in hannover)[01;31m)[00m [01;33mMF)[00m
								(VC abfliegen)) [01;33mLKMVC) SIMPX)[00m
							(KON und)
							(LKM sind in siebzig minuten in munchen)[01;31m)[00m))[01;31m)[00m[01;31m)[00m))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'NX', 'NX', 'ADJX'], 'mover info': [('ADJX', (57, 63))], 'old_family': ['SIMPX', 'ADJX', 'SIMPX'], 'start left siblings': ['SIMPX'], 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'ART', 'NN', 'CARD', 'NN', 'CARD', 'ADV', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'PDS', 'VVFIN', 'PPER', 'VMFIN', 'ADV', 'ADV', 'APPR', 'CARD', 'APPR', 'CARD', 'VMFIN', 'PPER', 'APPR', 'NE', 'VVINF', 'KON', 'VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE'), 'start right siblings': ['SIMPX'], 'end left siblings': ['NX', 'NX', 'NX'], 'auto preterminal span': (49, 85), 'adding node already present': False, 'movers': ['ADJX'], 'old_parent': 'SU', 'added and moved': True, 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'VF'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM okay)
			[01;31m(SIMPX[00m
				[01;31m(LV[00m
					(NX
						(ADJX siebenundzwanzigster)
						(NN januar))[01;31m)[00m
				[01;33m(SIMPX[00m (VF dann)
				[01;31m(FKOORD[00m
					[01;31m(LKMVC[00m
						(LK fahren)
						(MF wir)
						(VC los)[01;31m)[00m [01;33mSIMPX)[00m
					(APPR um)
					[01;31m(LKM[00m
						(LK nehmen)
						(MF den ice um zehn uhr)[01;31m)[00m
					[01;31m(LKM[00m
						(LK sind)
						[01;33m(MF[00m (MF um funfzehn uhr in hannover)[01;31m)[00m
					[01;31m(LKM[00m
						[01;36m(VXINF[00m [01;36m(VC[00m [01;31m(LK[00m
							[01;31m(VXFIN[00m
								(VVFIN nehmen)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m
						(MF da ein taxi)[01;31m)[00m [01;33mMF)[00m
					(KON und)
					(KON und)
					(KON und)
					[01;33m(LKM[00m (LKMVC kommen rechtzeitig an)[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				(KOORD und) [01;33mLKM)[00m
				(VF dann)
				(LK wurden)
				(MF [01;33m(MF[00m
					(NX wir)
					[01;31m(PX[00m
						(PX am achtundzwanzigsten)
						(ADVX abends)[01;31m)[00m
					(ADVX einfach)
					(ADVX wieder))
				(VC zuruckfahren)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF da)
				(LK wurde)
				(MF ich vielleicht) [01;33mMF)[00m
				(VC sagen)
				[01;33m(SIMPX (NF[00m (NF wir nehmen das flugzeug)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF da)
				(LK gibt)
				(MF
					[01;36m(MF[00m
						(NX es)
						(NX einen flug)[01;36m)[00m
					(NX [01;33m(NX[00m
						(NX siebzehn uhr zwanzig)
						[01;31m(ADJX[00m
							(ADVX sogar) [01;33mNX)[00m
							(ADJX stundlich bis einundzwanzig uhr zwanzig)[01;31m)[00m))) [01;33mNF) SIMPX)[00m
			[01;31m(SIMPX[00m
				(VF das)
				(LK heist)
				(NF
					(SIMPX
						(VF wir)
						[01;31m(FKOORD[00m
							(LKMVC
								(LK konnen)
								[01;31m(MF[00m
									(ADVX auch)
									(ADVX noch)
									[01;36m(VF[00m
										(PX [01;33m(SIMPX[00m
											(APPR um)
											(NX zwanzig nach acht))[01;36m)[00m
									[01;31m(SIMPX[00m [01;33m(LKMVC[00m
										(LK konnen)
										[01;31m(MF[00m [01;33m(MF[00m
											(NX
												(PPER wir))[01;31m)[00m[01;31m)[00m
									(PX in hannover)[01;31m)[00m [01;33mMF)[00m
								(VC abfliegen)) [01;33mLKMVC) SIMPX)[00m
							(KON und)
							(LKM sind in siebzig minuten in munchen)[01;31m)[00m))[01;31m)[00m[01;31m)[00m))
Step:Different label
{'family': ['VC', 'MF'], 'auto preterminal span': (20, 21), 'span': (20, 21), 'subtrees': ['VXFIN'], 'parent': 'LKM', 'over_word': False, 'auto preterminals': ('VVFIN',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('LK', 'VC')}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM okay)
			[01;31m(SIMPX[00m
				[01;31m(LV[00m
					(NX
						(ADJX siebenundzwanzigster)
						(NN januar))[01;31m)[00m
				[01;33m(SIMPX[00m (VF dann)
				[01;31m(FKOORD[00m
					[01;31m(LKMVC[00m
						(LK fahren)
						(MF wir)
						(VC los)[01;31m)[00m [01;33mSIMPX)[00m
					(APPR um)
					[01;31m(LKM[00m
						(LK nehmen)
						(MF den ice um zehn uhr)[01;31m)[00m
					[01;31m(LKM[00m
						(LK sind)
						[01;33m(MF[00m (MF um funfzehn uhr in hannover)[01;31m)[00m
					[01;31m(LKM[00m
						[01;36m(VXINF[00m
							(VC
								[01;31m(VXFIN[00m
									(VVFIN nehmen)[01;31m)[00m)[01;36m)[00m
						(MF da ein taxi)[01;31m)[00m [01;33mMF)[00m
					(KON und)
					(KON und)
					(KON und)
					[01;33m(LKM[00m (LKMVC kommen rechtzeitig an)[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				(KOORD und) [01;33mLKM)[00m
				(VF dann)
				(LK wurden)
				(MF [01;33m(MF[00m
					(NX wir)
					[01;31m(PX[00m
						(PX am achtundzwanzigsten)
						(ADVX abends)[01;31m)[00m
					(ADVX einfach)
					(ADVX wieder))
				(VC zuruckfahren)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF da)
				(LK wurde)
				(MF ich vielleicht) [01;33mMF)[00m
				(VC sagen)
				[01;33m(SIMPX (NF[00m (NF wir nehmen das flugzeug)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF da)
				(LK gibt)
				(MF
					[01;36m(MF[00m
						(NX es)
						(NX einen flug)[01;36m)[00m
					(NX [01;33m(NX[00m
						(NX siebzehn uhr zwanzig)
						[01;31m(ADJX[00m
							(ADVX sogar) [01;33mNX)[00m
							(ADJX stundlich bis einundzwanzig uhr zwanzig)[01;31m)[00m))) [01;33mNF) SIMPX)[00m
			[01;31m(SIMPX[00m
				(VF das)
				(LK heist)
				(NF
					(SIMPX
						(VF wir)
						[01;31m(FKOORD[00m
							(LKMVC
								(LK konnen)
								[01;31m(MF[00m
									(ADVX auch)
									(ADVX noch)
									[01;36m(VF[00m
										(PX [01;33m(SIMPX[00m
											(APPR um)
											(NX zwanzig nach acht))[01;36m)[00m
									[01;31m(SIMPX[00m [01;33m(LKMVC[00m
										(LK konnen)
										[01;31m(MF[00m [01;33m(MF[00m
											(NX
												(PPER wir))[01;31m)[00m[01;31m)[00m
									(PX in hannover)[01;31m)[00m [01;33mMF)[00m
								(VC abfliegen)) [01;33mLKMVC) SIMPX)[00m
							(KON und)
							(LKM sind in siebzig minuten in munchen)[01;31m)[00m))[01;31m)[00m[01;31m)[00m))
Step:Single Word Phrase
{'family': ['VXINF'], 'auto preterminal span': (20, 21), 'span': (20, 21), 'subtrees': ['VVFIN'], 'parent': 'VC', 'over_word': True, 'auto preterminals': ('VVFIN',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VXFIN', 'VXINF')}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM okay)
			[01;31m(SIMPX[00m
				[01;31m(LV[00m
					(NX
						(ADJX siebenundzwanzigster)
						(NN januar))[01;31m)[00m
				[01;33m(SIMPX[00m (VF dann)
				[01;31m(FKOORD[00m
					[01;31m(LKMVC[00m
						(LK fahren)
						(MF wir)
						(VC los)[01;31m)[00m [01;33mSIMPX)[00m
					(APPR um)
					[01;31m(LKM[00m
						(LK nehmen)
						(MF den ice um zehn uhr)[01;31m)[00m
					[01;31m(LKM[00m
						(LK sind)
						[01;33m(MF[00m (MF um funfzehn uhr in hannover)[01;31m)[00m
					[01;31m(LKM[00m
						(VC nehmen)
						(MF da ein taxi)[01;31m)[00m [01;33mMF)[00m
					(KON und)
					(KON und)
					(KON und)
					[01;33m(LKM[00m (LKMVC kommen rechtzeitig an)[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				(KOORD und) [01;33mLKM)[00m
				(VF dann)
				(LK wurden)
				(MF [01;33m(MF[00m
					(NX wir)
					[01;31m(PX[00m
						(PX am achtundzwanzigsten)
						(ADVX abends)[01;31m)[00m
					(ADVX einfach)
					(ADVX wieder))
				(VC zuruckfahren)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF da)
				(LK wurde)
				(MF ich vielleicht) [01;33mMF)[00m
				(VC sagen)
				[01;33m(SIMPX (NF[00m (NF wir nehmen das flugzeug)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF da)
				(LK gibt)
				(MF
					[01;36m(MF[00m
						(NX es)
						(NX einen flug)[01;36m)[00m
					(NX [01;33m(NX[00m
						(NX siebzehn uhr zwanzig)
						[01;31m(ADJX[00m
							(ADVX sogar) [01;33mNX)[00m
							(ADJX stundlich bis einundzwanzig uhr zwanzig)[01;31m)[00m))) [01;33mNF) SIMPX)[00m
			[01;31m(SIMPX[00m
				(VF das)
				(LK heist)
				(NF
					(SIMPX
						(VF wir)
						[01;31m(FKOORD[00m
							(LKMVC
								(LK konnen)
								[01;31m(MF[00m
									(ADVX auch)
									(ADVX noch)
									[01;36m(VF[00m
										(PX [01;33m(SIMPX[00m
											(APPR um)
											(NX zwanzig nach acht))[01;36m)[00m
									[01;31m(SIMPX[00m [01;33m(LKMVC[00m
										(LK konnen)
										[01;31m(MF[00m [01;33m(MF[00m
											(NX
												(PPER wir))[01;31m)[00m[01;31m)[00m
									(PX in hannover)[01;31m)[00m [01;33mMF)[00m
								(VC abfliegen)) [01;33mLKMVC) SIMPX)[00m
							(KON und)
							(LKM sind in siebzig minuten in munchen)[01;31m)[00m))[01;31m)[00m[01;31m)[00m))
Step:Modifier Attachment
{'new_parent': 'NX', 'new_family': ['NX', 'ADVX', 'ADJX'], 'mover info': [('ADVX', (57, 58))], 'old_family': ['ADVX', 'ADJX'], 'start left siblings': [], 'auto preterminals': ('CARD', 'NN', 'CARD', 'ADV', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD'), 'start right siblings': ['ADJX'], 'end left siblings': ['NX'], 'auto preterminal span': (54, 63), 'adding node already present': False, 'movers': ['ADVX'], 'old_parent': 'ADJX', 'POS confusion': ('ADV', 'ADV'), 'added and moved': True, 'end right siblings': ['ADJX'], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'VF'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM okay)
			[01;31m(SIMPX[00m
				[01;31m(LV[00m
					(NX
						(ADJX siebenundzwanzigster)
						(NN januar))[01;31m)[00m
				[01;33m(SIMPX[00m (VF dann)
				[01;31m(FKOORD[00m
					[01;31m(LKMVC[00m
						(LK fahren)
						(MF wir)
						(VC los)[01;31m)[00m [01;33mSIMPX)[00m
					(APPR um)
					[01;31m(LKM[00m
						(LK nehmen)
						(MF den ice um zehn uhr)[01;31m)[00m
					[01;31m(LKM[00m
						(LK sind)
						[01;33m(MF[00m (MF um funfzehn uhr in hannover)[01;31m)[00m
					[01;31m(LKM[00m
						(VC nehmen)
						(MF da ein taxi)[01;31m)[00m [01;33mMF)[00m
					(KON und)
					(KON und)
					(KON und)
					[01;33m(LKM[00m (LKMVC kommen rechtzeitig an)[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				(KOORD und) [01;33mLKM)[00m
				(VF dann)
				(LK wurden)
				(MF [01;33m(MF[00m
					(NX wir)
					[01;31m(PX[00m
						(PX am achtundzwanzigsten)
						(ADVX abends)[01;31m)[00m
					(ADVX einfach)
					(ADVX wieder))
				(VC zuruckfahren)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF da)
				(LK wurde)
				(MF ich vielleicht) [01;33mMF)[00m
				(VC sagen)
				[01;33m(SIMPX (NF[00m (NF wir nehmen das flugzeug)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF da)
				(LK gibt)
				(MF
					[01;36m(MF[00m
						(NX es)
						(NX einen flug)[01;36m)[00m
					(NX siebzehn uhr zwanzig sogar stundlich bis einundzwanzig uhr zwanzig))) [01;33mNF) SIMPX)[00m
			[01;31m(SIMPX[00m
				(VF das)
				(LK heist)
				(NF
					(SIMPX
						(VF wir)
						[01;31m(FKOORD[00m
							(LKMVC
								(LK konnen)
								[01;31m(MF[00m
									(ADVX auch)
									(ADVX noch)
									[01;36m(VF[00m
										(PX [01;33m(SIMPX[00m
											(APPR um)
											(NX zwanzig nach acht))[01;36m)[00m
									[01;31m(SIMPX[00m [01;33m(LKMVC[00m
										(LK konnen)
										[01;31m(MF[00m [01;33m(MF[00m
											(NX
												(PPER wir))[01;31m)[00m[01;31m)[00m
									(PX in hannover)[01;31m)[00m [01;33mMF)[00m
								(VC abfliegen)) [01;33mLKMVC) SIMPX)[00m
							(KON und)
							(LKM sind in siebzig minuten in munchen)[01;31m)[00m))[01;31m)[00m[01;31m)[00m))
Step:PP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'PX'], 'mover info': [('PX', (75, 77))], 'old_family': ['ADVX', 'ADVX', 'PX', 'SIMPX', 'PX'], 'start left siblings': ['ADVX', 'ADVX', 'PX', 'SIMPX'], 'auto preterminals': ('ADV', 'ADV', 'APPR', 'CARD', 'APPR', 'CARD', 'VMFIN', 'PPER', 'APPR', 'NE'), 'start right siblings': [], 'end left siblings': ['NX'], 'auto preterminal span': (67, 77), 'movers': ['PX'], 'old_parent': 'MF', 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM okay)
			[01;31m(SIMPX[00m
				[01;31m(LV[00m
					(NX
						(ADJX siebenundzwanzigster)
						(NN januar))[01;31m)[00m
				[01;33m(SIMPX[00m (VF dann)
				[01;31m(FKOORD[00m
					[01;31m(LKMVC[00m
						(LK fahren)
						(MF wir)
						(VC los)[01;31m)[00m [01;33mSIMPX)[00m
					(APPR um)
					[01;31m(LKM[00m
						(LK nehmen)
						(MF den ice um zehn uhr)[01;31m)[00m
					[01;31m(LKM[00m
						(LK sind)
						[01;33m(MF[00m (MF um funfzehn uhr in hannover)[01;31m)[00m
					[01;31m(LKM[00m
						(VC nehmen)
						(MF da ein taxi)[01;31m)[00m [01;33mMF)[00m
					(KON und)
					(KON und)
					(KON und)
					[01;33m(LKM[00m (LKMVC kommen rechtzeitig an)[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				(KOORD und) [01;33mLKM)[00m
				(VF dann)
				(LK wurden)
				(MF [01;33m(MF[00m
					(NX wir)
					[01;31m(PX[00m
						(PX am achtundzwanzigsten)
						(ADVX abends)[01;31m)[00m
					(ADVX einfach)
					(ADVX wieder))
				(VC zuruckfahren)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF da)
				(LK wurde)
				(MF ich vielleicht) [01;33mMF)[00m
				(VC sagen)
				[01;33m(SIMPX (NF[00m (NF wir nehmen das flugzeug)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF da)
				(LK gibt)
				(MF
					[01;36m(MF[00m
						(NX es)
						(NX einen flug)[01;36m)[00m
					(NX siebzehn uhr zwanzig sogar stundlich bis einundzwanzig uhr zwanzig))) [01;33mNF) SIMPX)[00m
			[01;31m(SIMPX[00m
				(VF das)
				(LK heist)
				(NF
					(SIMPX
						(VF wir)
						[01;31m(FKOORD[00m
							(LKMVC
								(LK konnen)
								[01;31m(MF[00m
									(ADVX auch)
									(ADVX noch)
									[01;36m(VF[00m
										(PX [01;33m(SIMPX[00m
											(APPR um)
											(NX zwanzig nach acht))[01;36m)[00m
									[01;31m(SIMPX[00m [01;33m(LKMVC[00m
										(LK konnen)
										(MF wir in hannover)[01;31m)[00m[01;31m)[00m
								(VC abfliegen)) [01;33mLKMVC) SIMPX)[00m
							(KON und)
							(LKM sind in siebzig minuten in munchen)[01;31m)[00m))[01;31m)[00m[01;31m)[00m))
Step:UNSET add
{'subtrees': ['NX', 'NX'], 'family': ['MF', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ART', 'NN'), 'right siblings': [(NX (NX (NX (NX (ADJX (CARD siebzehn)) (NN uhr)) (ADJX (CARD zwanzig))) (ADVX (ADV sogar))) (ADJX (ADJX (ADJD stundlich)) (PX (APPR bis) (NX (NX (ADJX (CARD einundzwanzig)) (NN uhr)) (ADJX (CARD zwanzig))))))], 'left siblings': [], 'auto preterminal span': (51, 54), 'span': (51, 54), 'parent': 'MF', 'label': 'MF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM okay)
			[01;31m(SIMPX[00m
				[01;31m(LV[00m
					(NX
						(ADJX siebenundzwanzigster)
						(NN januar))[01;31m)[00m
				[01;33m(SIMPX[00m (VF dann)
				[01;31m(FKOORD[00m
					[01;31m(LKMVC[00m
						(LK fahren)
						(MF wir)
						(VC los)[01;31m)[00m [01;33mSIMPX)[00m
					(APPR um)
					[01;31m(LKM[00m
						(LK nehmen)
						(MF den ice um zehn uhr)[01;31m)[00m
					[01;31m(LKM[00m
						(LK sind)
						[01;33m(MF[00m (MF um funfzehn uhr in hannover)[01;31m)[00m
					[01;31m(LKM[00m
						(VC nehmen)
						(MF da ein taxi)[01;31m)[00m [01;33mMF)[00m
					(KON und)
					(KON und)
					(KON und)
					[01;33m(LKM[00m (LKMVC kommen rechtzeitig an)[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				(KOORD und) [01;33mLKM)[00m
				(VF dann)
				(LK wurden)
				(MF [01;33m(MF[00m
					(NX wir)
					[01;31m(PX[00m
						(PX am achtundzwanzigsten)
						(ADVX abends)[01;31m)[00m
					(ADVX einfach)
					(ADVX wieder))
				(VC zuruckfahren)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF da)
				(LK wurde)
				(MF ich vielleicht) [01;33mMF)[00m
				(VC sagen)
				[01;33m(SIMPX (NF[00m (NF wir nehmen das flugzeug)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX da gibt es einen flug siebzehn uhr zwanzig sogar stundlich bis einundzwanzig uhr zwanzig) [01;33mNF) SIMPX)[00m
			[01;31m(SIMPX[00m
				(VF das)
				(LK heist)
				(NF
					(SIMPX
						(VF wir)
						[01;31m(FKOORD[00m
							(LKMVC
								(LK konnen)
								[01;31m(MF[00m
									(ADVX auch)
									(ADVX noch)
									[01;36m(VF[00m
										(PX [01;33m(SIMPX[00m
											(APPR um)
											(NX zwanzig nach acht))[01;36m)[00m
									[01;31m(SIMPX[00m [01;33m(LKMVC[00m
										(LK konnen)
										(MF wir in hannover)[01;31m)[00m[01;31m)[00m
								(VC abfliegen)) [01;33mLKMVC) SIMPX)[00m
							(KON und)
							(LKM sind in siebzig minuten in munchen)[01;31m)[00m))[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['PX'], 'family': ['ADVX', 'ADVX', 'VF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'CARD', 'APPR', 'CARD'), 'right siblings': [(SIMPX (LK (VXFIN (VMFIN konnen))) (MF (NX (PPER wir)) (PX (APPR in) (NX (NE hannover)))))], 'left siblings': [(ADVX (ADV auch)), (ADVX (ADV noch))], 'auto preterminal span': (69, 73), 'span': (69, 73), 'parent': 'MF', 'label': 'VF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM okay)
			[01;31m(SIMPX[00m
				[01;31m(LV[00m
					(NX
						(ADJX siebenundzwanzigster)
						(NN januar))[01;31m)[00m
				[01;33m(SIMPX[00m (VF dann)
				[01;31m(FKOORD[00m
					[01;31m(LKMVC[00m
						(LK fahren)
						(MF wir)
						(VC los)[01;31m)[00m [01;33mSIMPX)[00m
					(APPR um)
					[01;31m(LKM[00m
						(LK nehmen)
						(MF den ice um zehn uhr)[01;31m)[00m
					[01;31m(LKM[00m
						(LK sind)
						[01;33m(MF[00m (MF um funfzehn uhr in hannover)[01;31m)[00m
					[01;31m(LKM[00m
						(VC nehmen)
						(MF da ein taxi)[01;31m)[00m [01;33mMF)[00m
					(KON und)
					(KON und)
					(KON und)
					[01;33m(LKM[00m (LKMVC kommen rechtzeitig an)[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				(KOORD und) [01;33mLKM)[00m
				(VF dann)
				(LK wurden)
				(MF [01;33m(MF[00m
					(NX wir)
					[01;31m(PX[00m
						(PX am achtundzwanzigsten)
						(ADVX abends)[01;31m)[00m
					(ADVX einfach)
					(ADVX wieder))
				(VC zuruckfahren)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF da)
				(LK wurde)
				(MF ich vielleicht) [01;33mMF)[00m
				(VC sagen)
				[01;33m(SIMPX (NF[00m (NF wir nehmen das flugzeug)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX da gibt es einen flug siebzehn uhr zwanzig sogar stundlich bis einundzwanzig uhr zwanzig) [01;33mNF) SIMPX)[00m
			[01;31m(SIMPX[00m
				(VF das)
				(LK heist)
				(NF
					(SIMPX
						(VF wir)
						[01;31m(FKOORD[00m
							(LKMVC
								(LK konnen)
								[01;31m(MF[00m
									(ADVX auch)
									(ADVX noch)
									[01;33m(SIMPX[00m (VF um zwanzig nach acht)
									[01;31m(SIMPX[00m [01;33m(LKMVC[00m
										(LK konnen)
										(MF wir in hannover)[01;31m)[00m[01;31m)[00m
								(VC abfliegen)) [01;33mLKMVC) SIMPX)[00m
							(KON und)
							(LKM sind in siebzig minuten in munchen)[01;31m)[00m))[01;31m)[00m[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['DM', 'SIMPX', 'SIMPX'], 'family': ['SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADJA', 'NN', 'ADV', 'VVFIN', 'PPER', 'PTKVZ', 'APPR', 'VVFIN', 'ART', 'NE', 'APPR', 'CARD', 'NN', 'VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE', 'VVFIN', 'ADV', 'ART', 'NN', 'KON', 'KON', 'KON', 'VVFIN', 'ADJD', 'PTKVZ', 'KON', 'ADV', 'VAFIN', 'PPER', 'APPRART', 'NN', 'ADV', 'ADV', 'ADV', 'VVINF', 'ADV', 'VAFIN', 'PPER', 'ADV', 'VVINF', 'PPER', 'VVFIN', 'ART', 'NN', 'ADV', 'VVFIN', 'PPER', 'ART', 'NN', 'CARD', 'NN', 'CARD', 'ADV', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'PDS', 'VVFIN', 'PPER', 'VMFIN', 'ADV', 'ADV', 'APPR', 'CARD', 'APPR', 'CARD', 'VMFIN', 'PPER', 'APPR', 'NE', 'VVINF', 'KON', 'VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE'), 'right siblings': ['SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 85), 'span': (0, 40), 'left siblings': [], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		[01;31m(SIMPX[00m
			[01;31m(LV[00m
				(NX
					(ADJX siebenundzwanzigster)
					(NN januar))[01;31m)[00m
			[01;33m(SIMPX[00m (VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK fahren)
					(MF wir)
					(VC los)[01;31m)[00m [01;33mSIMPX)[00m
				(APPR um)
				[01;31m(LKM[00m
					(LK nehmen)
					(MF den ice um zehn uhr)[01;31m)[00m
				[01;31m(LKM[00m
					(LK sind)
					[01;33m(MF[00m (MF um funfzehn uhr in hannover)[01;31m)[00m
				[01;31m(LKM[00m
					(VC nehmen)
					(MF da ein taxi)[01;31m)[00m [01;33mMF)[00m
				(KON und)
				(KON und)
				(KON und)
				[01;33m(LKM[00m (LKMVC kommen rechtzeitig an)[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und) [01;33mLKM)[00m
			(VF dann)
			(LK wurden)
			(MF [01;33m(MF[00m
				(NX wir)
				[01;31m(PX[00m
					(PX am achtundzwanzigsten)
					(ADVX abends)[01;31m)[00m
				(ADVX einfach)
				(ADVX wieder))
			(VC zuruckfahren)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF da)
				(LK wurde)
				(MF ich vielleicht) [01;33mMF)[00m
				(VC sagen)
				[01;33m(SIMPX (NF[00m (NF wir nehmen das flugzeug)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX da gibt es einen flug siebzehn uhr zwanzig sogar stundlich bis einundzwanzig uhr zwanzig) [01;33mNF) SIMPX)[00m
			[01;31m(SIMPX[00m
				(VF das)
				(LK heist)
				(NF
					(SIMPX
						(VF wir)
						[01;31m(FKOORD[00m
							(LKMVC
								(LK konnen)
								[01;31m(MF[00m
									(ADVX auch)
									(ADVX noch)
									[01;33m(SIMPX[00m (VF um zwanzig nach acht)
									[01;31m(SIMPX[00m [01;33m(LKMVC[00m
										(LK konnen)
										(MF wir in hannover)[01;31m)[00m[01;31m)[00m
								(VC abfliegen)) [01;33mLKMVC) SIMPX)[00m
							(KON und)
							(LKM sind in siebzig minuten in munchen)[01;31m)[00m))[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['NX'], 'family': ['LV', 'VF', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJA', 'NN', 'ADV', 'VVFIN', 'PPER', 'PTKVZ', 'APPR', 'VVFIN', 'ART', 'NE', 'APPR', 'CARD', 'NN', 'VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE', 'VVFIN', 'ADV', 'ART', 'NN', 'KON', 'KON', 'KON', 'VVFIN', 'ADJD', 'PTKVZ'), 'right siblings': ['VF', 'FKOORD'], 'parent': 'SIMPX', 'auto preterminal span': (1, 30), 'span': (1, 3), 'left siblings': [], 'label': 'LV', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		[01;31m(SIMPX[00m
			(NX siebenundzwanzigster januar)
			[01;33m(SIMPX[00m (VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK fahren)
					(MF wir)
					(VC los)[01;31m)[00m [01;33mSIMPX)[00m
				(APPR um)
				[01;31m(LKM[00m
					(LK nehmen)
					(MF den ice um zehn uhr)[01;31m)[00m
				[01;31m(LKM[00m
					(LK sind)
					[01;33m(MF[00m (MF um funfzehn uhr in hannover)[01;31m)[00m
				[01;31m(LKM[00m
					(VC nehmen)
					(MF da ein taxi)[01;31m)[00m [01;33mMF)[00m
				(KON und)
				(KON und)
				(KON und)
				[01;33m(LKM[00m (LKMVC kommen rechtzeitig an)[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und) [01;33mLKM)[00m
			(VF dann)
			(LK wurden)
			(MF [01;33m(MF[00m
				(NX wir)
				[01;31m(PX[00m
					(PX am achtundzwanzigsten)
					(ADVX abends)[01;31m)[00m
				(ADVX einfach)
				(ADVX wieder))
			(VC zuruckfahren)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF da)
				(LK wurde)
				(MF ich vielleicht) [01;33mMF)[00m
				(VC sagen)
				[01;33m(SIMPX (NF[00m (NF wir nehmen das flugzeug)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX da gibt es einen flug siebzehn uhr zwanzig sogar stundlich bis einundzwanzig uhr zwanzig) [01;33mNF) SIMPX)[00m
			[01;31m(SIMPX[00m
				(VF das)
				(LK heist)
				(NF
					(SIMPX
						(VF wir)
						[01;31m(FKOORD[00m
							(LKMVC
								(LK konnen)
								[01;31m(MF[00m
									(ADVX auch)
									(ADVX noch)
									[01;33m(SIMPX[00m (VF um zwanzig nach acht)
									[01;31m(SIMPX[00m [01;33m(LKMVC[00m
										(LK konnen)
										(MF wir in hannover)[01;31m)[00m[01;31m)[00m
								(VC abfliegen)) [01;33mLKMVC) SIMPX)[00m
							(KON und)
							(LKM sind in siebzig minuten in munchen)[01;31m)[00m))[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['NX', 'VF', 'FKOORD'], 'family': ['DM', 'SIMPX', 'SIMPX', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADJA', 'NN', 'ADV', 'VVFIN', 'PPER', 'PTKVZ', 'APPR', 'VVFIN', 'ART', 'NE', 'APPR', 'CARD', 'NN', 'VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE', 'VVFIN', 'ADV', 'ART', 'NN', 'KON', 'KON', 'KON', 'VVFIN', 'ADJD', 'PTKVZ', 'KON', 'ADV', 'VAFIN', 'PPER', 'APPRART', 'NN', 'ADV', 'ADV', 'ADV', 'VVINF', 'ADV', 'VAFIN', 'PPER', 'ADV', 'VVINF', 'PPER', 'VVFIN', 'ART', 'NN', 'ADV', 'VVFIN', 'PPER', 'ART', 'NN', 'CARD', 'NN', 'CARD', 'ADV', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'PDS', 'VVFIN', 'PPER', 'VMFIN', 'ADV', 'ADV', 'APPR', 'CARD', 'APPR', 'CARD', 'VMFIN', 'PPER', 'APPR', 'NE', 'VVINF', 'KON', 'VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE'), 'right siblings': ['SIMPX', 'SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 85), 'span': (1, 30), 'left siblings': ['DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(NX siebenundzwanzigster januar)
		[01;33m(SIMPX[00m (VF dann)
		[01;31m(FKOORD[00m
			[01;31m(LKMVC[00m
				(LK fahren)
				(MF wir)
				(VC los)[01;31m)[00m [01;33mSIMPX)[00m
			(APPR um)
			[01;31m(LKM[00m
				(LK nehmen)
				(MF den ice um zehn uhr)[01;31m)[00m
			[01;31m(LKM[00m
				(LK sind)
				[01;33m(MF[00m (MF um funfzehn uhr in hannover)[01;31m)[00m
			[01;31m(LKM[00m
				(VC nehmen)
				(MF da ein taxi)[01;31m)[00m [01;33mMF)[00m
			(KON und)
			(KON und)
			(KON und)
			[01;33m(LKM[00m (LKMVC kommen rechtzeitig an)[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und) [01;33mLKM)[00m
			(VF dann)
			(LK wurden)
			(MF [01;33m(MF[00m
				(NX wir)
				[01;31m(PX[00m
					(PX am achtundzwanzigsten)
					(ADVX abends)[01;31m)[00m
				(ADVX einfach)
				(ADVX wieder))
			(VC zuruckfahren)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF da)
				(LK wurde)
				(MF ich vielleicht) [01;33mMF)[00m
				(VC sagen)
				[01;33m(SIMPX (NF[00m (NF wir nehmen das flugzeug)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX da gibt es einen flug siebzehn uhr zwanzig sogar stundlich bis einundzwanzig uhr zwanzig) [01;33mNF) SIMPX)[00m
			[01;31m(SIMPX[00m
				(VF das)
				(LK heist)
				(NF
					(SIMPX
						(VF wir)
						[01;31m(FKOORD[00m
							(LKMVC
								(LK konnen)
								[01;31m(MF[00m
									(ADVX auch)
									(ADVX noch)
									[01;33m(SIMPX[00m (VF um zwanzig nach acht)
									[01;31m(SIMPX[00m [01;33m(LKMVC[00m
										(LK konnen)
										(MF wir in hannover)[01;31m)[00m[01;31m)[00m
								(VC abfliegen)) [01;33mLKMVC) SIMPX)[00m
							(KON und)
							(LKM sind in siebzig minuten in munchen)[01;31m)[00m))[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['LK', 'MF', 'VC'], 'family': ['LKMVC', 'APPR', 'LKM', 'LKM', 'LKM', 'KON', 'KON', 'KON', 'LKMVC'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'PTKVZ', 'APPR', 'VVFIN', 'ART', 'NE', 'APPR', 'CARD', 'NN', 'VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE', 'VVFIN', 'ADV', 'ART', 'NN', 'KON', 'KON', 'KON', 'VVFIN', 'ADJD', 'PTKVZ'), 'right siblings': ['APPR', 'LKM', 'LKM', 'LKM', 'KON', 'KON', 'KON', 'LKMVC'], 'parent': 'FKOORD', 'auto preterminal span': (4, 30), 'span': (4, 7), 'left siblings': [], 'label': 'LKMVC', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(NX siebenundzwanzigster januar)
		[01;33m(SIMPX[00m (VF dann)
		[01;31m(FKOORD[00m
			(LK fahren)
			(MF wir)
			(VC los) [01;33mSIMPX)[00m
			(APPR um)
			[01;31m(LKM[00m
				(LK nehmen)
				(MF den ice um zehn uhr)[01;31m)[00m
			[01;31m(LKM[00m
				(LK sind)
				[01;33m(MF[00m (MF um funfzehn uhr in hannover)[01;31m)[00m
			[01;31m(LKM[00m
				(VC nehmen)
				(MF da ein taxi)[01;31m)[00m [01;33mMF)[00m
			(KON und)
			(KON und)
			(KON und)
			[01;33m(LKM[00m (LKMVC kommen rechtzeitig an)[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und) [01;33mLKM)[00m
			(VF dann)
			(LK wurden)
			(MF [01;33m(MF[00m
				(NX wir)
				[01;31m(PX[00m
					(PX am achtundzwanzigsten)
					(ADVX abends)[01;31m)[00m
				(ADVX einfach)
				(ADVX wieder))
			(VC zuruckfahren)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF da)
				(LK wurde)
				(MF ich vielleicht) [01;33mMF)[00m
				(VC sagen)
				[01;33m(SIMPX (NF[00m (NF wir nehmen das flugzeug)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX da gibt es einen flug siebzehn uhr zwanzig sogar stundlich bis einundzwanzig uhr zwanzig) [01;33mNF) SIMPX)[00m
			[01;31m(SIMPX[00m
				(VF das)
				(LK heist)
				(NF
					(SIMPX
						(VF wir)
						[01;31m(FKOORD[00m
							(LKMVC
								(LK konnen)
								[01;31m(MF[00m
									(ADVX auch)
									(ADVX noch)
									[01;33m(SIMPX[00m (VF um zwanzig nach acht)
									[01;31m(SIMPX[00m [01;33m(LKMVC[00m
										(LK konnen)
										(MF wir in hannover)[01;31m)[00m[01;31m)[00m
								(VC abfliegen)) [01;33mLKMVC) SIMPX)[00m
							(KON und)
							(LKM sind in siebzig minuten in munchen)[01;31m)[00m))[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['LK', 'MF', 'VC', 'APPR', 'LKM', 'LKM', 'LKM', 'KON', 'KON', 'KON', 'LKMVC'], 'family': ['DM', 'NX', 'VF', 'FKOORD', 'SIMPX', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADJA', 'NN', 'ADV', 'VVFIN', 'PPER', 'PTKVZ', 'APPR', 'VVFIN', 'ART', 'NE', 'APPR', 'CARD', 'NN', 'VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE', 'VVFIN', 'ADV', 'ART', 'NN', 'KON', 'KON', 'KON', 'VVFIN', 'ADJD', 'PTKVZ', 'KON', 'ADV', 'VAFIN', 'PPER', 'APPRART', 'NN', 'ADV', 'ADV', 'ADV', 'VVINF', 'ADV', 'VAFIN', 'PPER', 'ADV', 'VVINF', 'PPER', 'VVFIN', 'ART', 'NN', 'ADV', 'VVFIN', 'PPER', 'ART', 'NN', 'CARD', 'NN', 'CARD', 'ADV', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'PDS', 'VVFIN', 'PPER', 'VMFIN', 'ADV', 'ADV', 'APPR', 'CARD', 'APPR', 'CARD', 'VMFIN', 'PPER', 'APPR', 'NE', 'VVINF', 'KON', 'VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE'), 'right siblings': ['SIMPX', 'SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 85), 'span': (4, 30), 'left siblings': ['DM', 'NX', 'VF'], 'label': 'FKOORD', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(NX siebenundzwanzigster januar)
		[01;36m(SIMPX[00m
			(VF dann)
			(LK fahren)
			(MF wir)
			(VC los)[01;36m)[00m
		(APPR um)
		[01;31m(LKM[00m
			(LK nehmen)
			(MF den ice um zehn uhr)[01;31m)[00m
		[01;31m(LKM[00m
			(LK sind)
			[01;33m(MF[00m (MF um funfzehn uhr in hannover)[01;31m)[00m
		[01;31m(LKM[00m
			(VC nehmen)
			(MF da ein taxi)[01;31m)[00m [01;33mMF)[00m
		(KON und)
		(KON und)
		(KON und)
		[01;33m(LKM[00m (LKMVC kommen rechtzeitig an)
		[01;31m(SIMPX[00m
			(KOORD und) [01;33mLKM)[00m
			(VF dann)
			(LK wurden)
			(MF [01;33m(MF[00m
				(NX wir)
				[01;31m(PX[00m
					(PX am achtundzwanzigsten)
					(ADVX abends)[01;31m)[00m
				(ADVX einfach)
				(ADVX wieder))
			(VC zuruckfahren)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF da)
				(LK wurde)
				(MF ich vielleicht) [01;33mMF)[00m
				(VC sagen)
				[01;33m(SIMPX (NF[00m (NF wir nehmen das flugzeug)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX da gibt es einen flug siebzehn uhr zwanzig sogar stundlich bis einundzwanzig uhr zwanzig) [01;33mNF) SIMPX)[00m
			[01;31m(SIMPX[00m
				(VF das)
				(LK heist)
				(NF
					(SIMPX
						(VF wir)
						[01;31m(FKOORD[00m
							(LKMVC
								(LK konnen)
								[01;31m(MF[00m
									(ADVX auch)
									(ADVX noch)
									[01;33m(SIMPX[00m (VF um zwanzig nach acht)
									[01;31m(SIMPX[00m [01;33m(LKMVC[00m
										(LK konnen)
										(MF wir in hannover)[01;31m)[00m[01;31m)[00m
								(VC abfliegen)) [01;33mLKMVC) SIMPX)[00m
							(KON und)
							(LKM sind in siebzig minuten in munchen)[01;31m)[00m))[01;31m)[00m[01;31m)[00m))
Step:UNSET add
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['DM', 'NX', 'SIMPX', 'APPR', 'LKM', 'LKM', 'LKM', 'KON', 'KON', 'KON', 'LKMVC', 'SIMPX', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'PTKVZ'), 'right siblings': [(APPR um), (LKM (LK (VXFIN (VVFIN nehmen))) (MF (NX (ART den) (NE ice)) (PX (APPR um) (NX (ADJX (CARD zehn)) (NN uhr))))), (LKM (LK (VXFIN (VAFIN sind))) (MF (PX (APPR um) (NX (ADJX (CARD funfzehn)) (NN uhr))) (PX (APPR in) (NX (NE hannover))))), (LKM (VC (VXINF (VVFIN nehmen))) (MF (ADVX (ADV da)) (NX (ART ein) (NN taxi)))), (KON und), (KON und), (KON und), (LKMVC (LK (VXFIN (VVFIN kommen))) (MF (ADJX (ADJD rechtzeitig))) (VC (PTKVZ an))), (SIMPX (KOORD (KON und)) (VF (ADVX (ADV dann))) (LK (VXFIN (VAFIN wurden))) (MF (NX (PPER wir)) (PX (PX (APPRART am) (NX (NN achtundzwanzigsten))) (ADVX (ADV abends))) (ADVX (ADV einfach)) (ADVX (ADV wieder))) (VC (VXINF (VVINF zuruckfahren)))), (SU (SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VAFIN wurde))) (MF (NX (PPER ich)) (ADVX (ADV vielleicht))) (VC (VXINF (VVINF sagen))) (NF (SIMPX (VF (NX (PPER wir))) (LK (VXFIN (VVFIN nehmen))) (MF (NX (ART das) (NN flugzeug))))))), (SU (SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VVFIN gibt))) (MF (MF (NX (PPER es)) (NX (ART einen) (NN flug))) (NX (NX (NX (NX (ADJX (CARD siebzehn)) (NN uhr)) (ADJX (CARD zwanzig))) (ADVX (ADV sogar))) (ADJX (ADJX (ADJD stundlich)) (PX (APPR bis) (NX (NX (ADJX (CARD einundzwanzig)) (NN uhr)) (ADJX (CARD zwanzig)))))))) (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VVFIN heist))) (NF (SIMPX (VF (NX (PPER wir))) (FKOORD (LKMVC (LK (VXFIN (VMFIN konnen))) (MF (ADVX (ADV auch)) (ADVX (ADV noch)) (VF (PX (APPR um) (NX (NX (CARD zwanzig)) (PX (APPR nach) (NX (CARD acht)))))) (SIMPX (LK (VXFIN (VMFIN konnen))) (MF (NX (PPER wir)) (PX (APPR in) (NX (NE hannover)))))) (VC (VXINF (VVINF abfliegen)))) (KON und) (LKM (LK (VXFIN (VAFIN sind))) (MF (PX (APPR in) (NX (ADJX (CARD siebzig)) (NN minuten))) (PX (APPR in) (NX (NE munchen))))))))))], 'left siblings': [(DM (ITJ okay)), (NX (ADJX (ADJA siebenundzwanzigster)) (NN januar))], 'auto preterminal span': (3, 7), 'span': (3, 7), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM okay)
		(NX siebenundzwanzigster januar)
		(SIMPX dann fahren wir los)
		(APPR um)
		[01;31m(LKM[00m
			(LK nehmen)
			(MF den ice um zehn uhr)[01;31m)[00m
		[01;31m(LKM[00m
			(LK sind)
			[01;33m(MF[00m (MF um funfzehn uhr in hannover)[01;31m)[00m
		[01;31m(LKM[00m
			(VC nehmen)
			(MF da ein taxi)[01;31m)[00m [01;33mMF)[00m
		(KON und)
		(KON und)
		(KON und)
		[01;33m(LKM[00m (LKMVC kommen rechtzeitig an)
		[01;31m(SIMPX[00m
			(KOORD und) [01;33mLKM)[00m
			(VF dann)
			(LK wurden)
			(MF [01;33m(MF[00m
				(NX wir)
				[01;31m(PX[00m
					(PX am achtundzwanzigsten)
					(ADVX abends)[01;31m)[00m
				(ADVX einfach)
				(ADVX wieder))
			(VC zuruckfahren)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF da)
				(LK wurde)
				(MF ich vielleicht) [01;33mMF)[00m
				(VC sagen)
				[01;33m(SIMPX (NF[00m (NF wir nehmen das flugzeug)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX da gibt es einen flug siebzehn uhr zwanzig sogar stundlich bis einundzwanzig uhr zwanzig) [01;33mNF) SIMPX)[00m
			[01;31m(SIMPX[00m
				(VF das)
				(LK heist)
				(NF
					(SIMPX
						(VF wir)
						[01;31m(FKOORD[00m
							(LKMVC
								(LK konnen)
								[01;31m(MF[00m
									(ADVX auch)
									(ADVX noch)
									[01;33m(SIMPX[00m (VF um zwanzig nach acht)
									[01;31m(SIMPX[00m [01;33m(LKMVC[00m
										(LK konnen)
										(MF wir in hannover)[01;31m)[00m[01;31m)[00m
								(VC abfliegen)) [01;33mLKMVC) SIMPX)[00m
							(KON und)
							(LKM sind in siebzig minuten in munchen)[01;31m)[00m))[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['DM', 'NX', 'SIMPX', 'APPR', 'LKM', 'LKM', 'LKM', 'KON', 'KON', 'KON', 'LKMVC', 'SIMPX', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADJA', 'NN', 'ADV', 'VVFIN', 'PPER', 'PTKVZ', 'APPR', 'VVFIN', 'ART', 'NE', 'APPR', 'CARD', 'NN', 'VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE', 'VVFIN', 'ADV', 'ART', 'NN', 'KON', 'KON', 'KON', 'VVFIN', 'ADJD', 'PTKVZ', 'KON', 'ADV', 'VAFIN', 'PPER', 'APPRART', 'NN', 'ADV', 'ADV', 'ADV', 'VVINF', 'ADV', 'VAFIN', 'PPER', 'ADV', 'VVINF', 'PPER', 'VVFIN', 'ART', 'NN', 'ADV', 'VVFIN', 'PPER', 'ART', 'NN', 'CARD', 'NN', 'CARD', 'ADV', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'PDS', 'VVFIN', 'PPER', 'VMFIN', 'ADV', 'ADV', 'APPR', 'CARD', 'APPR', 'CARD', 'VMFIN', 'PPER', 'APPR', 'NE', 'VVINF', 'KON', 'VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE'), 'right siblings': ['LKM', 'LKM', 'KON', 'KON', 'KON', 'LKMVC', 'SIMPX', 'SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 85), 'span': (8, 14), 'left siblings': ['DM', 'NX', 'SIMPX', 'APPR'], 'label': 'LKM', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(NX siebenundzwanzigster januar)
		(SIMPX dann fahren wir los)
		(APPR um)
		(LK nehmen)
		(MF den ice um zehn uhr)
		[01;31m(LKM[00m
			(LK sind)
			[01;33m(MF[00m (MF um funfzehn uhr in hannover)[01;31m)[00m
		[01;31m(LKM[00m
			(VC nehmen)
			(MF da ein taxi)[01;31m)[00m [01;33mMF)[00m
		(KON und)
		(KON und)
		(KON und)
		[01;33m(LKM[00m (LKMVC kommen rechtzeitig an)
		[01;31m(SIMPX[00m
			(KOORD und) [01;33mLKM)[00m
			(VF dann)
			(LK wurden)
			(MF [01;33m(MF[00m
				(NX wir)
				[01;31m(PX[00m
					(PX am achtundzwanzigsten)
					(ADVX abends)[01;31m)[00m
				(ADVX einfach)
				(ADVX wieder))
			(VC zuruckfahren)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF da)
				(LK wurde)
				(MF ich vielleicht) [01;33mMF)[00m
				(VC sagen)
				[01;33m(SIMPX (NF[00m (NF wir nehmen das flugzeug)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX da gibt es einen flug siebzehn uhr zwanzig sogar stundlich bis einundzwanzig uhr zwanzig) [01;33mNF) SIMPX)[00m
			[01;31m(SIMPX[00m
				(VF das)
				(LK heist)
				(NF
					(SIMPX
						(VF wir)
						[01;31m(FKOORD[00m
							(LKMVC
								(LK konnen)
								[01;31m(MF[00m
									(ADVX auch)
									(ADVX noch)
									[01;33m(SIMPX[00m (VF um zwanzig nach acht)
									[01;31m(SIMPX[00m [01;33m(LKMVC[00m
										(LK konnen)
										(MF wir in hannover)[01;31m)[00m[01;31m)[00m
								(VC abfliegen)) [01;33mLKMVC) SIMPX)[00m
							(KON und)
							(LKM sind in siebzig minuten in munchen)[01;31m)[00m))[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['DM', 'NX', 'SIMPX', 'APPR', 'LK', 'MF', 'LKM', 'LKM', 'KON', 'KON', 'KON', 'LKMVC', 'SIMPX', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADJA', 'NN', 'ADV', 'VVFIN', 'PPER', 'PTKVZ', 'APPR', 'VVFIN', 'ART', 'NE', 'APPR', 'CARD', 'NN', 'VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE', 'VVFIN', 'ADV', 'ART', 'NN', 'KON', 'KON', 'KON', 'VVFIN', 'ADJD', 'PTKVZ', 'KON', 'ADV', 'VAFIN', 'PPER', 'APPRART', 'NN', 'ADV', 'ADV', 'ADV', 'VVINF', 'ADV', 'VAFIN', 'PPER', 'ADV', 'VVINF', 'PPER', 'VVFIN', 'ART', 'NN', 'ADV', 'VVFIN', 'PPER', 'ART', 'NN', 'CARD', 'NN', 'CARD', 'ADV', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'PDS', 'VVFIN', 'PPER', 'VMFIN', 'ADV', 'ADV', 'APPR', 'CARD', 'APPR', 'CARD', 'VMFIN', 'PPER', 'APPR', 'NE', 'VVINF', 'KON', 'VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE'), 'right siblings': ['LKM', 'KON', 'KON', 'KON', 'LKMVC', 'SIMPX', 'SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 85), 'span': (14, 20), 'left siblings': ['DM', 'NX', 'SIMPX', 'APPR', 'LK', 'MF'], 'label': 'LKM', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(NX siebenundzwanzigster januar)
		(SIMPX dann fahren wir los)
		(APPR um)
		(LK nehmen)
		(MF den ice um zehn uhr)
		(LK sind)
		[01;36m(MF[00m
			(MF um funfzehn uhr in hannover)
			[01;31m(LKM[00m
				(VC nehmen)
				(MF da ein taxi)[01;31m)[00m[01;36m)[00m
		(KON und)
		(KON und)
		(KON und)
		[01;33m(LKM[00m (LKMVC kommen rechtzeitig an)
		[01;31m(SIMPX[00m
			(KOORD und) [01;33mLKM)[00m
			(VF dann)
			(LK wurden)
			(MF [01;33m(MF[00m
				(NX wir)
				[01;31m(PX[00m
					(PX am achtundzwanzigsten)
					(ADVX abends)[01;31m)[00m
				(ADVX einfach)
				(ADVX wieder))
			(VC zuruckfahren)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF da)
				(LK wurde)
				(MF ich vielleicht) [01;33mMF)[00m
				(VC sagen)
				[01;33m(SIMPX (NF[00m (NF wir nehmen das flugzeug)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX da gibt es einen flug siebzehn uhr zwanzig sogar stundlich bis einundzwanzig uhr zwanzig) [01;33mNF) SIMPX)[00m
			[01;31m(SIMPX[00m
				(VF das)
				(LK heist)
				(NF
					(SIMPX
						(VF wir)
						[01;31m(FKOORD[00m
							(LKMVC
								(LK konnen)
								[01;31m(MF[00m
									(ADVX auch)
									(ADVX noch)
									[01;33m(SIMPX[00m (VF um zwanzig nach acht)
									[01;31m(SIMPX[00m [01;33m(LKMVC[00m
										(LK konnen)
										(MF wir in hannover)[01;31m)[00m[01;31m)[00m
								(VC abfliegen)) [01;33mLKMVC) SIMPX)[00m
							(KON und)
							(LKM sind in siebzig minuten in munchen)[01;31m)[00m))[01;31m)[00m[01;31m)[00m))
Step:UNSET add
{'subtrees': ['MF', 'LKM'], 'family': ['DM', 'NX', 'SIMPX', 'APPR', 'LK', 'MF', 'LK', 'MF', 'KON', 'KON', 'KON', 'LKMVC', 'SIMPX', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'CARD', 'NN', 'APPR', 'NE', 'VVFIN', 'ADV', 'ART', 'NN'), 'right siblings': [(KON und), (KON und), (KON und), (LKMVC (LK (VXFIN (VVFIN kommen))) (MF (ADJX (ADJD rechtzeitig))) (VC (PTKVZ an))), (SIMPX (KOORD (KON und)) (VF (ADVX (ADV dann))) (LK (VXFIN (VAFIN wurden))) (MF (NX (PPER wir)) (PX (PX (APPRART am) (NX (NN achtundzwanzigsten))) (ADVX (ADV abends))) (ADVX (ADV einfach)) (ADVX (ADV wieder))) (VC (VXINF (VVINF zuruckfahren)))), (SU (SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VAFIN wurde))) (MF (NX (PPER ich)) (ADVX (ADV vielleicht))) (VC (VXINF (VVINF sagen))) (NF (SIMPX (VF (NX (PPER wir))) (LK (VXFIN (VVFIN nehmen))) (MF (NX (ART das) (NN flugzeug))))))), (SU (SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VVFIN gibt))) (MF (MF (NX (PPER es)) (NX (ART einen) (NN flug))) (NX (NX (NX (NX (ADJX (CARD siebzehn)) (NN uhr)) (ADJX (CARD zwanzig))) (ADVX (ADV sogar))) (ADJX (ADJX (ADJD stundlich)) (PX (APPR bis) (NX (NX (ADJX (CARD einundzwanzig)) (NN uhr)) (ADJX (CARD zwanzig)))))))) (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VVFIN heist))) (NF (SIMPX (VF (NX (PPER wir))) (FKOORD (LKMVC (LK (VXFIN (VMFIN konnen))) (MF (ADVX (ADV auch)) (ADVX (ADV noch)) (VF (PX (APPR um) (NX (NX (CARD zwanzig)) (PX (APPR nach) (NX (CARD acht)))))) (SIMPX (LK (VXFIN (VMFIN konnen))) (MF (NX (PPER wir)) (PX (APPR in) (NX (NE hannover)))))) (VC (VXINF (VVINF abfliegen)))) (KON und) (LKM (LK (VXFIN (VAFIN sind))) (MF (PX (APPR in) (NX (ADJX (CARD siebzig)) (NN minuten))) (PX (APPR in) (NX (NE munchen))))))))))], 'left siblings': [(DM (ITJ okay)), (NX (ADJX (ADJA siebenundzwanzigster)) (NN januar)), (SIMPX (VF (ADVX (ADV dann))) (LK (VXFIN (VVFIN fahren))) (MF (NX (PPER wir))) (VC (PTKVZ los))), (APPR um), (LK (VXFIN (VVFIN nehmen))), (MF (NX (ART den) (NE ice)) (PX (APPR um) (NX (ADJX (CARD zehn)) (NN uhr)))), (LK (VXFIN (VAFIN sind)))], 'auto preterminal span': (15, 24), 'span': (15, 24), 'parent': 'TURN', 'label': 'MF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM okay)
		(NX siebenundzwanzigster januar)
		(SIMPX dann fahren wir los)
		(APPR um)
		(LK nehmen)
		(MF den ice um zehn uhr)
		(LK sind)
		(MF
			(MF um funfzehn uhr in hannover)
			[01;31m(LKM[00m
				(VC nehmen)
				(MF da ein taxi)[01;31m)[00m)
		(KON und)
		(KON und)
		(KON und)
		[01;33m(LKM[00m (LKMVC kommen rechtzeitig an)
		[01;31m(SIMPX[00m
			(KOORD und) [01;33mLKM)[00m
			(VF dann)
			(LK wurden)
			(MF [01;33m(MF[00m
				(NX wir)
				[01;31m(PX[00m
					(PX am achtundzwanzigsten)
					(ADVX abends)[01;31m)[00m
				(ADVX einfach)
				(ADVX wieder))
			(VC zuruckfahren)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF da)
				(LK wurde)
				(MF ich vielleicht) [01;33mMF)[00m
				(VC sagen)
				[01;33m(SIMPX (NF[00m (NF wir nehmen das flugzeug)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX da gibt es einen flug siebzehn uhr zwanzig sogar stundlich bis einundzwanzig uhr zwanzig) [01;33mNF) SIMPX)[00m
			[01;31m(SIMPX[00m
				(VF das)
				(LK heist)
				(NF
					(SIMPX
						(VF wir)
						[01;31m(FKOORD[00m
							(LKMVC
								(LK konnen)
								[01;31m(MF[00m
									(ADVX auch)
									(ADVX noch)
									[01;33m(SIMPX[00m (VF um zwanzig nach acht)
									[01;31m(SIMPX[00m [01;33m(LKMVC[00m
										(LK konnen)
										(MF wir in hannover)[01;31m)[00m[01;31m)[00m
								(VC abfliegen)) [01;33mLKMVC) SIMPX)[00m
							(KON und)
							(LKM sind in siebzig minuten in munchen)[01;31m)[00m))[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VC', 'MF'], 'family': ['MF', 'LKM'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'CARD', 'NN', 'APPR', 'NE', 'VVFIN', 'ADV', 'ART', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (15, 24), 'span': (20, 24), 'left siblings': ['MF'], 'label': 'LKM', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(NX siebenundzwanzigster januar)
		(SIMPX dann fahren wir los)
		(APPR um)
		(LK nehmen)
		(MF den ice um zehn uhr)
		(LK sind)
		(MF um funfzehn uhr in hannover nehmen da ein taxi)
		(KON und)
		(KON und)
		(KON und)
		[01;33m(LKM[00m (LKMVC kommen rechtzeitig an)
		[01;31m(SIMPX[00m
			(KOORD und) [01;33mLKM)[00m
			(VF dann)
			(LK wurden)
			(MF [01;33m(MF[00m
				(NX wir)
				[01;31m(PX[00m
					(PX am achtundzwanzigsten)
					(ADVX abends)[01;31m)[00m
				(ADVX einfach)
				(ADVX wieder))
			(VC zuruckfahren)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF da)
				(LK wurde)
				(MF ich vielleicht) [01;33mMF)[00m
				(VC sagen)
				[01;33m(SIMPX (NF[00m (NF wir nehmen das flugzeug)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX da gibt es einen flug siebzehn uhr zwanzig sogar stundlich bis einundzwanzig uhr zwanzig) [01;33mNF) SIMPX)[00m
			[01;31m(SIMPX[00m
				(VF das)
				(LK heist)
				(NF
					(SIMPX
						(VF wir)
						[01;31m(FKOORD[00m
							(LKMVC
								(LK konnen)
								[01;31m(MF[00m
									(ADVX auch)
									(ADVX noch)
									[01;33m(SIMPX[00m (VF um zwanzig nach acht)
									[01;31m(SIMPX[00m [01;33m(LKMVC[00m
										(LK konnen)
										(MF wir in hannover)[01;31m)[00m[01;31m)[00m
								(VC abfliegen)) [01;33mLKMVC) SIMPX)[00m
							(KON und)
							(LKM sind in siebzig minuten in munchen)[01;31m)[00m))[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['KOORD', 'VF', 'LK', 'MF', 'VC'], 'family': ['DM', 'NX', 'SIMPX', 'APPR', 'LK', 'MF', 'LK', 'MF', 'KON', 'KON', 'KON', 'LKMVC', 'SIMPX', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADJA', 'NN', 'ADV', 'VVFIN', 'PPER', 'PTKVZ', 'APPR', 'VVFIN', 'ART', 'NE', 'APPR', 'CARD', 'NN', 'VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE', 'VVFIN', 'ADV', 'ART', 'NN', 'KON', 'KON', 'KON', 'VVFIN', 'ADJD', 'PTKVZ', 'KON', 'ADV', 'VAFIN', 'PPER', 'APPRART', 'NN', 'ADV', 'ADV', 'ADV', 'VVINF', 'ADV', 'VAFIN', 'PPER', 'ADV', 'VVINF', 'PPER', 'VVFIN', 'ART', 'NN', 'ADV', 'VVFIN', 'PPER', 'ART', 'NN', 'CARD', 'NN', 'CARD', 'ADV', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'PDS', 'VVFIN', 'PPER', 'VMFIN', 'ADV', 'ADV', 'APPR', 'CARD', 'APPR', 'CARD', 'VMFIN', 'PPER', 'APPR', 'NE', 'VVINF', 'KON', 'VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE'), 'right siblings': ['SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 85), 'span': (30, 40), 'left siblings': ['DM', 'NX', 'SIMPX', 'APPR', 'LK', 'MF', 'LK', 'MF', 'KON', 'KON', 'KON', 'LKMVC'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(NX siebenundzwanzigster januar)
		(SIMPX dann fahren wir los)
		(APPR um)
		(LK nehmen)
		(MF den ice um zehn uhr)
		(LK sind)
		(MF um funfzehn uhr in hannover nehmen da ein taxi)
		(KON und)
		(KON und)
		(KON und)
		[01;36m(LKM[00m
			(LKMVC kommen rechtzeitig an)
			(KOORD und)[01;36m)[00m
		(VF dann)
		(LK wurden)
		(MF [01;33m(MF[00m
			(NX wir)
			[01;31m(PX[00m
				(PX am achtundzwanzigsten)
				(ADVX abends)[01;31m)[00m
			(ADVX einfach)
			(ADVX wieder))
		(VC zuruckfahren)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF da)
				(LK wurde)
				(MF ich vielleicht) [01;33mMF)[00m
				(VC sagen)
				[01;33m(SIMPX (NF[00m (NF wir nehmen das flugzeug)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX da gibt es einen flug siebzehn uhr zwanzig sogar stundlich bis einundzwanzig uhr zwanzig) [01;33mNF) SIMPX)[00m
			[01;31m(SIMPX[00m
				(VF das)
				(LK heist)
				(NF
					(SIMPX
						(VF wir)
						[01;31m(FKOORD[00m
							(LKMVC
								(LK konnen)
								[01;31m(MF[00m
									(ADVX auch)
									(ADVX noch)
									[01;33m(SIMPX[00m (VF um zwanzig nach acht)
									[01;31m(SIMPX[00m [01;33m(LKMVC[00m
										(LK konnen)
										(MF wir in hannover)[01;31m)[00m[01;31m)[00m
								(VC abfliegen)) [01;33mLKMVC) SIMPX)[00m
							(KON und)
							(LKM sind in siebzig minuten in munchen)[01;31m)[00m))[01;31m)[00m[01;31m)[00m))
Step:UNSET add
{'subtrees': ['LKMVC', 'KOORD'], 'family': ['DM', 'NX', 'SIMPX', 'APPR', 'LK', 'MF', 'LK', 'MF', 'KON', 'KON', 'KON', 'LKM', 'VF', 'LK', 'MF', 'VC', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'ADJD', 'PTKVZ', 'KON'), 'right siblings': [(VF (ADVX (ADV dann))), (LK (VXFIN (VAFIN wurden))), (MF (NX (PPER wir)) (PX (PX (APPRART am) (NX (NN achtundzwanzigsten))) (ADVX (ADV abends))) (ADVX (ADV einfach)) (ADVX (ADV wieder))), (VC (VXINF (VVINF zuruckfahren))), (SU (SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VAFIN wurde))) (MF (NX (PPER ich)) (ADVX (ADV vielleicht))) (VC (VXINF (VVINF sagen))) (NF (SIMPX (VF (NX (PPER wir))) (LK (VXFIN (VVFIN nehmen))) (MF (NX (ART das) (NN flugzeug))))))), (SU (SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VVFIN gibt))) (MF (MF (NX (PPER es)) (NX (ART einen) (NN flug))) (NX (NX (NX (NX (ADJX (CARD siebzehn)) (NN uhr)) (ADJX (CARD zwanzig))) (ADVX (ADV sogar))) (ADJX (ADJX (ADJD stundlich)) (PX (APPR bis) (NX (NX (ADJX (CARD einundzwanzig)) (NN uhr)) (ADJX (CARD zwanzig)))))))) (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VVFIN heist))) (NF (SIMPX (VF (NX (PPER wir))) (FKOORD (LKMVC (LK (VXFIN (VMFIN konnen))) (MF (ADVX (ADV auch)) (ADVX (ADV noch)) (VF (PX (APPR um) (NX (NX (CARD zwanzig)) (PX (APPR nach) (NX (CARD acht)))))) (SIMPX (LK (VXFIN (VMFIN konnen))) (MF (NX (PPER wir)) (PX (APPR in) (NX (NE hannover)))))) (VC (VXINF (VVINF abfliegen)))) (KON und) (LKM (LK (VXFIN (VAFIN sind))) (MF (PX (APPR in) (NX (ADJX (CARD siebzig)) (NN minuten))) (PX (APPR in) (NX (NE munchen))))))))))], 'left siblings': [(DM (ITJ okay)), (NX (ADJX (ADJA siebenundzwanzigster)) (NN januar)), (SIMPX (VF (ADVX (ADV dann))) (LK (VXFIN (VVFIN fahren))) (MF (NX (PPER wir))) (VC (PTKVZ los))), (APPR um), (LK (VXFIN (VVFIN nehmen))), (MF (NX (ART den) (NE ice)) (PX (APPR um) (NX (ADJX (CARD zehn)) (NN uhr)))), (LK (VXFIN (VAFIN sind))), (MF (MF (PX (APPR um) (NX (ADJX (CARD funfzehn)) (NN uhr))) (PX (APPR in) (NX (NE hannover)))) (VC (VXINF (VVFIN nehmen))) (MF (ADVX (ADV da)) (NX (ART ein) (NN taxi)))), (KON und), (KON und), (KON und)], 'auto preterminal span': (27, 31), 'span': (27, 31), 'parent': 'TURN', 'label': 'LKM', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM okay)
		(NX siebenundzwanzigster januar)
		(SIMPX dann fahren wir los)
		(APPR um)
		(LK nehmen)
		(MF den ice um zehn uhr)
		(LK sind)
		(MF um funfzehn uhr in hannover nehmen da ein taxi)
		(KON und)
		(KON und)
		(KON und)
		(LKM kommen rechtzeitig an und)
		(VF dann)
		(LK wurden)
		(MF [01;33m(MF[00m
			(NX wir)
			[01;31m(PX[00m
				(PX am achtundzwanzigsten)
				(ADVX abends)[01;31m)[00m
			(ADVX einfach)
			(ADVX wieder))
		(VC zuruckfahren)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF da)
				(LK wurde)
				(MF ich vielleicht) [01;33mMF)[00m
				(VC sagen)
				[01;33m(SIMPX (NF[00m (NF wir nehmen das flugzeug)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX da gibt es einen flug siebzehn uhr zwanzig sogar stundlich bis einundzwanzig uhr zwanzig) [01;33mNF) SIMPX)[00m
			[01;31m(SIMPX[00m
				(VF das)
				(LK heist)
				(NF
					(SIMPX
						(VF wir)
						[01;31m(FKOORD[00m
							(LKMVC
								(LK konnen)
								[01;31m(MF[00m
									(ADVX auch)
									(ADVX noch)
									[01;33m(SIMPX[00m (VF um zwanzig nach acht)
									[01;31m(SIMPX[00m [01;33m(LKMVC[00m
										(LK konnen)
										(MF wir in hannover)[01;31m)[00m[01;31m)[00m
								(VC abfliegen)) [01;33mLKMVC) SIMPX)[00m
							(KON und)
							(LKM sind in siebzig minuten in munchen)[01;31m)[00m))[01;31m)[00m[01;31m)[00m))
Step:Modifier Attachment
{'subtrees': ['PX', 'ADVX'], 'family': ['NX', 'PX', 'ADVX', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'APPRART', 'NN', 'ADV', 'ADV', 'ADV'), 'right siblings': ['ADVX', 'ADVX'], 'parent': 'MF', 'auto preterminal span': (33, 39), 'span': (34, 37), 'left siblings': ['NX'], 'label': 'PX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(NX siebenundzwanzigster januar)
		(SIMPX dann fahren wir los)
		(APPR um)
		(LK nehmen)
		(MF den ice um zehn uhr)
		(LK sind)
		(MF um funfzehn uhr in hannover nehmen da ein taxi)
		(KON und)
		(KON und)
		(KON und)
		(LKM kommen rechtzeitig an und)
		(VF dann)
		(LK wurden)
		[01;33m(MF[00m (MF wir am achtundzwanzigsten abends einfach wieder)
		(VC zuruckfahren)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF da)
				(LK wurde)
				(MF ich vielleicht) [01;33mMF)[00m
				(VC sagen)
				[01;33m(SIMPX (NF[00m (NF wir nehmen das flugzeug)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX da gibt es einen flug siebzehn uhr zwanzig sogar stundlich bis einundzwanzig uhr zwanzig) [01;33mNF) SIMPX)[00m
			[01;31m(SIMPX[00m
				(VF das)
				(LK heist)
				(NF
					(SIMPX
						(VF wir)
						[01;31m(FKOORD[00m
							(LKMVC
								(LK konnen)
								[01;31m(MF[00m
									(ADVX auch)
									(ADVX noch)
									[01;33m(SIMPX[00m (VF um zwanzig nach acht)
									[01;31m(SIMPX[00m [01;33m(LKMVC[00m
										(LK konnen)
										(MF wir in hannover)[01;31m)[00m[01;31m)[00m
								(VC abfliegen)) [01;33mLKMVC) SIMPX)[00m
							(KON und)
							(LKM sind in siebzig minuten in munchen)[01;31m)[00m))[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['VF', 'LK', 'MF', 'VC', 'NF'], 'family': ['SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'ADV', 'VVINF', 'PPER', 'VVFIN', 'ART', 'NN'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (40, 49), 'span': (40, 49), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(NX siebenundzwanzigster januar)
		(SIMPX dann fahren wir los)
		(APPR um)
		(LK nehmen)
		(MF den ice um zehn uhr)
		(LK sind)
		(MF um funfzehn uhr in hannover nehmen da ein taxi)
		(KON und)
		(KON und)
		(KON und)
		(LKM kommen rechtzeitig an und)
		(VF dann)
		(LK wurden)
		[01;33m(MF[00m (MF wir am achtundzwanzigsten abends einfach wieder)
		(VC zuruckfahren)
		[01;31m(SU[00m
			(VF da)
			(LK wurde)
			(MF ich vielleicht) [01;33mMF)[00m
			(VC sagen)
			[01;33m(SIMPX (NF[00m (NF wir nehmen das flugzeug)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX da gibt es einen flug siebzehn uhr zwanzig sogar stundlich bis einundzwanzig uhr zwanzig) [01;33mNF) SIMPX)[00m
			[01;31m(SIMPX[00m
				(VF das)
				(LK heist)
				(NF
					(SIMPX
						(VF wir)
						[01;31m(FKOORD[00m
							(LKMVC
								(LK konnen)
								[01;31m(MF[00m
									(ADVX auch)
									(ADVX noch)
									[01;33m(SIMPX[00m (VF um zwanzig nach acht)
									[01;31m(SIMPX[00m [01;33m(LKMVC[00m
										(LK konnen)
										(MF wir in hannover)[01;31m)[00m[01;31m)[00m
								(VC abfliegen)) [01;33mLKMVC) SIMPX)[00m
							(KON und)
							(LKM sind in siebzig minuten in munchen)[01;31m)[00m))[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'VC', 'NF'], 'family': ['DM', 'NX', 'SIMPX', 'APPR', 'LK', 'MF', 'LK', 'MF', 'KON', 'KON', 'KON', 'LKM', 'VF', 'LK', 'MF', 'VC', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADJA', 'NN', 'ADV', 'VVFIN', 'PPER', 'PTKVZ', 'APPR', 'VVFIN', 'ART', 'NE', 'APPR', 'CARD', 'NN', 'VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE', 'VVFIN', 'ADV', 'ART', 'NN', 'KON', 'KON', 'KON', 'VVFIN', 'ADJD', 'PTKVZ', 'KON', 'ADV', 'VAFIN', 'PPER', 'APPRART', 'NN', 'ADV', 'ADV', 'ADV', 'VVINF', 'ADV', 'VAFIN', 'PPER', 'ADV', 'VVINF', 'PPER', 'VVFIN', 'ART', 'NN', 'ADV', 'VVFIN', 'PPER', 'ART', 'NN', 'CARD', 'NN', 'CARD', 'ADV', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'PDS', 'VVFIN', 'PPER', 'VMFIN', 'ADV', 'ADV', 'APPR', 'CARD', 'APPR', 'CARD', 'VMFIN', 'PPER', 'APPR', 'NE', 'VVINF', 'KON', 'VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 85), 'span': (40, 49), 'left siblings': ['DM', 'NX', 'SIMPX', 'APPR', 'LK', 'MF', 'LK', 'MF', 'KON', 'KON', 'KON', 'LKM', 'VF', 'LK', 'MF', 'VC'], 'label': 'SU', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(NX siebenundzwanzigster januar)
		(SIMPX dann fahren wir los)
		(APPR um)
		(LK nehmen)
		(MF den ice um zehn uhr)
		(LK sind)
		(MF um funfzehn uhr in hannover nehmen da ein taxi)
		(KON und)
		(KON und)
		(KON und)
		(LKM kommen rechtzeitig an und)
		(VF dann)
		(LK wurden)
		[01;36m(MF[00m
			(MF wir am achtundzwanzigsten abends einfach wieder)
			(VC zuruckfahren)
			(VF da)
			(LK wurde)
			(MF ich vielleicht)[01;36m)[00m
		(VC sagen)
		[01;33m(SIMPX (NF[00m (NF wir nehmen das flugzeug)
		[01;31m(SU[00m
			(SIMPX da gibt es einen flug siebzehn uhr zwanzig sogar stundlich bis einundzwanzig uhr zwanzig) [01;33mNF) SIMPX)[00m
			[01;31m(SIMPX[00m
				(VF das)
				(LK heist)
				(NF
					(SIMPX
						(VF wir)
						[01;31m(FKOORD[00m
							(LKMVC
								(LK konnen)
								[01;31m(MF[00m
									(ADVX auch)
									(ADVX noch)
									[01;33m(SIMPX[00m (VF um zwanzig nach acht)
									[01;31m(SIMPX[00m [01;33m(LKMVC[00m
										(LK konnen)
										(MF wir in hannover)[01;31m)[00m[01;31m)[00m
								(VC abfliegen)) [01;33mLKMVC) SIMPX)[00m
							(KON und)
							(LKM sind in siebzig minuten in munchen)[01;31m)[00m))[01;31m)[00m[01;31m)[00m))
Step:UNSET add
{'subtrees': ['MF', 'VC', 'VF', 'LK', 'MF'], 'family': ['DM', 'NX', 'SIMPX', 'APPR', 'LK', 'MF', 'LK', 'MF', 'KON', 'KON', 'KON', 'LKM', 'VF', 'LK', 'MF', 'VC', 'NF', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'APPRART', 'NN', 'ADV', 'ADV', 'ADV', 'VVINF', 'ADV', 'VAFIN', 'PPER', 'ADV'), 'right siblings': [(VC (VXINF (VVINF sagen))), (NF (SIMPX (VF (NX (PPER wir))) (LK (VXFIN (VVFIN nehmen))) (MF (NX (ART das) (NN flugzeug))))), (SU (SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VVFIN gibt))) (MF (MF (NX (PPER es)) (NX (ART einen) (NN flug))) (NX (NX (NX (NX (ADJX (CARD siebzehn)) (NN uhr)) (ADJX (CARD zwanzig))) (ADVX (ADV sogar))) (ADJX (ADJX (ADJD stundlich)) (PX (APPR bis) (NX (NX (ADJX (CARD einundzwanzig)) (NN uhr)) (ADJX (CARD zwanzig)))))))) (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VVFIN heist))) (NF (SIMPX (VF (NX (PPER wir))) (FKOORD (LKMVC (LK (VXFIN (VMFIN konnen))) (MF (ADVX (ADV auch)) (ADVX (ADV noch)) (VF (PX (APPR um) (NX (NX (CARD zwanzig)) (PX (APPR nach) (NX (CARD acht)))))) (SIMPX (LK (VXFIN (VMFIN konnen))) (MF (NX (PPER wir)) (PX (APPR in) (NX (NE hannover)))))) (VC (VXINF (VVINF abfliegen)))) (KON und) (LKM (LK (VXFIN (VAFIN sind))) (MF (PX (APPR in) (NX (ADJX (CARD siebzig)) (NN minuten))) (PX (APPR in) (NX (NE munchen))))))))))], 'left siblings': [(DM (ITJ okay)), (NX (ADJX (ADJA siebenundzwanzigster)) (NN januar)), (SIMPX (VF (ADVX (ADV dann))) (LK (VXFIN (VVFIN fahren))) (MF (NX (PPER wir))) (VC (PTKVZ los))), (APPR um), (LK (VXFIN (VVFIN nehmen))), (MF (NX (ART den) (NE ice)) (PX (APPR um) (NX (ADJX (CARD zehn)) (NN uhr)))), (LK (VXFIN (VAFIN sind))), (MF (MF (PX (APPR um) (NX (ADJX (CARD funfzehn)) (NN uhr))) (PX (APPR in) (NX (NE hannover)))) (VC (VXINF (VVFIN nehmen))) (MF (ADVX (ADV da)) (NX (ART ein) (NN taxi)))), (KON und), (KON und), (KON und), (LKM (LKMVC (LK (VXFIN (VVFIN kommen))) (MF (ADJX (ADJD rechtzeitig))) (VC (PTKVZ an))) (KOORD (KON und))), (VF (ADVX (ADV dann))), (LK (VXFIN (VAFIN wurden)))], 'auto preterminal span': (33, 44), 'span': (33, 44), 'parent': 'TURN', 'label': 'MF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM okay)
		(NX siebenundzwanzigster januar)
		(SIMPX dann fahren wir los)
		(APPR um)
		(LK nehmen)
		(MF den ice um zehn uhr)
		(LK sind)
		(MF um funfzehn uhr in hannover nehmen da ein taxi)
		(KON und)
		(KON und)
		(KON und)
		(LKM kommen rechtzeitig an und)
		(VF dann)
		(LK wurden)
		(MF wir am achtundzwanzigsten abends einfach wieder zuruckfahren da wurde ich vielleicht)
		(VC sagen)
		[01;33m(SIMPX (NF[00m (NF wir nehmen das flugzeug)
		[01;31m(SU[00m
			(SIMPX da gibt es einen flug siebzehn uhr zwanzig sogar stundlich bis einundzwanzig uhr zwanzig) [01;33mNF) SIMPX)[00m
			[01;31m(SIMPX[00m
				(VF das)
				(LK heist)
				(NF
					(SIMPX
						(VF wir)
						[01;31m(FKOORD[00m
							(LKMVC
								(LK konnen)
								[01;31m(MF[00m
									(ADVX auch)
									(ADVX noch)
									[01;33m(SIMPX[00m (VF um zwanzig nach acht)
									[01;31m(SIMPX[00m [01;33m(LKMVC[00m
										(LK konnen)
										(MF wir in hannover)[01;31m)[00m[01;31m)[00m
								(VC abfliegen)) [01;33mLKMVC) SIMPX)[00m
							(KON und)
							(LKM sind in siebzig minuten in munchen)[01;31m)[00m))[01;31m)[00m[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['DM', 'NX', 'SIMPX', 'APPR', 'LK', 'MF', 'LK', 'MF', 'KON', 'KON', 'KON', 'LKM', 'VF', 'LK', 'MF', 'VC', 'NF', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADJA', 'NN', 'ADV', 'VVFIN', 'PPER', 'PTKVZ', 'APPR', 'VVFIN', 'ART', 'NE', 'APPR', 'CARD', 'NN', 'VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE', 'VVFIN', 'ADV', 'ART', 'NN', 'KON', 'KON', 'KON', 'VVFIN', 'ADJD', 'PTKVZ', 'KON', 'ADV', 'VAFIN', 'PPER', 'APPRART', 'NN', 'ADV', 'ADV', 'ADV', 'VVINF', 'ADV', 'VAFIN', 'PPER', 'ADV', 'VVINF', 'PPER', 'VVFIN', 'ART', 'NN', 'ADV', 'VVFIN', 'PPER', 'ART', 'NN', 'CARD', 'NN', 'CARD', 'ADV', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'PDS', 'VVFIN', 'PPER', 'VMFIN', 'ADV', 'ADV', 'APPR', 'CARD', 'APPR', 'CARD', 'VMFIN', 'PPER', 'APPR', 'NE', 'VVINF', 'KON', 'VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 85), 'span': (49, 85), 'left siblings': ['DM', 'NX', 'SIMPX', 'APPR', 'LK', 'MF', 'LK', 'MF', 'KON', 'KON', 'KON', 'LKM', 'VF', 'LK', 'MF', 'VC', 'NF'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(NX siebenundzwanzigster januar)
		(SIMPX dann fahren wir los)
		(APPR um)
		(LK nehmen)
		(MF den ice um zehn uhr)
		(LK sind)
		(MF um funfzehn uhr in hannover nehmen da ein taxi)
		(KON und)
		(KON und)
		(KON und)
		(LKM kommen rechtzeitig an und)
		(VF dann)
		(LK wurden)
		(MF wir am achtundzwanzigsten abends einfach wieder zuruckfahren da wurde ich vielleicht)
		(VC sagen)
		[01;36m(SIMPX[00m
			[01;36m(NF[00m
				(NF wir nehmen das flugzeug)
				(SIMPX da gibt es einen flug siebzehn uhr zwanzig sogar stundlich bis einundzwanzig uhr zwanzig)[01;36m)[00m[01;36m)[00m
		[01;31m(SIMPX[00m
			(VF das)
			(LK heist)
			(NF
				(SIMPX
					(VF wir)
					[01;31m(FKOORD[00m
						(LKMVC
							(LK konnen)
							[01;31m(MF[00m
								(ADVX auch)
								(ADVX noch)
								[01;33m(SIMPX[00m (VF um zwanzig nach acht)
								[01;31m(SIMPX[00m [01;33m(LKMVC[00m
									(LK konnen)
									(MF wir in hannover)[01;31m)[00m[01;31m)[00m
							(VC abfliegen)) [01;33mLKMVC) SIMPX)[00m
						(KON und)
						(LKM sind in siebzig minuten in munchen)[01;31m)[00m))[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['NF', 'SIMPX'], 'family': ['DM', 'NX', 'SIMPX', 'APPR', 'LK', 'MF', 'LK', 'MF', 'KON', 'KON', 'KON', 'LKM', 'VF', 'LK', 'MF', 'VC', 'NF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ART', 'NN', 'ADV', 'VVFIN', 'PPER', 'ART', 'NN', 'CARD', 'NN', 'CARD', 'ADV', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD'), 'right siblings': [(SIMPX (VF (NX (PDS das))) (LK (VXFIN (VVFIN heist))) (NF (SIMPX (VF (NX (PPER wir))) (FKOORD (LKMVC (LK (VXFIN (VMFIN konnen))) (MF (ADVX (ADV auch)) (ADVX (ADV noch)) (VF (PX (APPR um) (NX (NX (CARD zwanzig)) (PX (APPR nach) (NX (CARD acht)))))) (SIMPX (LK (VXFIN (VMFIN konnen))) (MF (NX (PPER wir)) (PX (APPR in) (NX (NE hannover)))))) (VC (VXINF (VVINF abfliegen)))) (KON und) (LKM (LK (VXFIN (VAFIN sind))) (MF (PX (APPR in) (NX (ADJX (CARD siebzig)) (NN minuten))) (PX (APPR in) (NX (NE munchen)))))))))], 'left siblings': [(DM (ITJ okay)), (NX (ADJX (ADJA siebenundzwanzigster)) (NN januar)), (SIMPX (VF (ADVX (ADV dann))) (LK (VXFIN (VVFIN fahren))) (MF (NX (PPER wir))) (VC (PTKVZ los))), (APPR um), (LK (VXFIN (VVFIN nehmen))), (MF (NX (ART den) (NE ice)) (PX (APPR um) (NX (ADJX (CARD zehn)) (NN uhr)))), (LK (VXFIN (VAFIN sind))), (MF (MF (PX (APPR um) (NX (ADJX (CARD funfzehn)) (NN uhr))) (PX (APPR in) (NX (NE hannover)))) (VC (VXINF (VVFIN nehmen))) (MF (ADVX (ADV da)) (NX (ART ein) (NN taxi)))), (KON und), (KON und), (KON und), (LKM (LKMVC (LK (VXFIN (VVFIN kommen))) (MF (ADJX (ADJD rechtzeitig))) (VC (PTKVZ an))) (KOORD (KON und))), (VF (ADVX (ADV dann))), (LK (VXFIN (VAFIN wurden))), (MF (MF (NX (PPER wir)) (PX (APPRART am) (NX (NN achtundzwanzigsten))) (ADVX (ADV abends)) (ADVX (ADV einfach)) (ADVX (ADV wieder))) (VC (VXINF (VVINF zuruckfahren))) (VF (ADVX (ADV da))) (LK (VXFIN (VAFIN wurde))) (MF (NX (PPER ich)) (ADVX (ADV vielleicht)))), (VC (VXINF (VVINF sagen)))], 'auto preterminal span': (45, 63), 'span': (45, 63), 'parent': 'TURN', 'label': 'NF', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM okay)
		(NX siebenundzwanzigster januar)
		(SIMPX dann fahren wir los)
		(APPR um)
		(LK nehmen)
		(MF den ice um zehn uhr)
		(LK sind)
		(MF um funfzehn uhr in hannover nehmen da ein taxi)
		(KON und)
		(KON und)
		(KON und)
		(LKM kommen rechtzeitig an und)
		(VF dann)
		(LK wurden)
		(MF wir am achtundzwanzigsten abends einfach wieder zuruckfahren da wurde ich vielleicht)
		(VC sagen)
		[01;36m(SIMPX[00m
			(NF
				(NF wir nehmen das flugzeug)
				(SIMPX da gibt es einen flug siebzehn uhr zwanzig sogar stundlich bis einundzwanzig uhr zwanzig))[01;36m)[00m
		[01;31m(SIMPX[00m
			(VF das)
			(LK heist)
			(NF
				(SIMPX
					(VF wir)
					[01;31m(FKOORD[00m
						(LKMVC
							(LK konnen)
							[01;31m(MF[00m
								(ADVX auch)
								(ADVX noch)
								[01;33m(SIMPX[00m (VF um zwanzig nach acht)
								[01;31m(SIMPX[00m [01;33m(LKMVC[00m
									(LK konnen)
									(MF wir in hannover)[01;31m)[00m[01;31m)[00m
							(VC abfliegen)) [01;33mLKMVC) SIMPX)[00m
						(KON und)
						(LKM sind in siebzig minuten in munchen)[01;31m)[00m))[01;31m)[00m))
Step:Unary
{'subtrees': ['NF'], 'family': ['DM', 'NX', 'SIMPX', 'APPR', 'LK', 'MF', 'LK', 'MF', 'KON', 'KON', 'KON', 'LKM', 'VF', 'LK', 'MF', 'VC', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ART', 'NN', 'ADV', 'VVFIN', 'PPER', 'ART', 'NN', 'CARD', 'NN', 'CARD', 'ADV', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD'), 'right siblings': [(SIMPX (VF (NX (PDS das))) (LK (VXFIN (VVFIN heist))) (NF (SIMPX (VF (NX (PPER wir))) (FKOORD (LKMVC (LK (VXFIN (VMFIN konnen))) (MF (ADVX (ADV auch)) (ADVX (ADV noch)) (VF (PX (APPR um) (NX (NX (CARD zwanzig)) (PX (APPR nach) (NX (CARD acht)))))) (SIMPX (LK (VXFIN (VMFIN konnen))) (MF (NX (PPER wir)) (PX (APPR in) (NX (NE hannover)))))) (VC (VXINF (VVINF abfliegen)))) (KON und) (LKM (LK (VXFIN (VAFIN sind))) (MF (PX (APPR in) (NX (ADJX (CARD siebzig)) (NN minuten))) (PX (APPR in) (NX (NE munchen)))))))))], 'left siblings': [(DM (ITJ okay)), (NX (ADJX (ADJA siebenundzwanzigster)) (NN januar)), (SIMPX (VF (ADVX (ADV dann))) (LK (VXFIN (VVFIN fahren))) (MF (NX (PPER wir))) (VC (PTKVZ los))), (APPR um), (LK (VXFIN (VVFIN nehmen))), (MF (NX (ART den) (NE ice)) (PX (APPR um) (NX (ADJX (CARD zehn)) (NN uhr)))), (LK (VXFIN (VAFIN sind))), (MF (MF (PX (APPR um) (NX (ADJX (CARD funfzehn)) (NN uhr))) (PX (APPR in) (NX (NE hannover)))) (VC (VXINF (VVFIN nehmen))) (MF (ADVX (ADV da)) (NX (ART ein) (NN taxi)))), (KON und), (KON und), (KON und), (LKM (LKMVC (LK (VXFIN (VVFIN kommen))) (MF (ADJX (ADJD rechtzeitig))) (VC (PTKVZ an))) (KOORD (KON und))), (VF (ADVX (ADV dann))), (LK (VXFIN (VAFIN wurden))), (MF (MF (NX (PPER wir)) (PX (APPRART am) (NX (NN achtundzwanzigsten))) (ADVX (ADV abends)) (ADVX (ADV einfach)) (ADVX (ADV wieder))) (VC (VXINF (VVINF zuruckfahren))) (VF (ADVX (ADV da))) (LK (VXFIN (VAFIN wurde))) (MF (NX (PPER ich)) (ADVX (ADV vielleicht)))), (VC (VXINF (VVINF sagen)))], 'auto preterminal span': (45, 63), 'span': (45, 63), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM okay)
		(NX siebenundzwanzigster januar)
		(SIMPX dann fahren wir los)
		(APPR um)
		(LK nehmen)
		(MF den ice um zehn uhr)
		(LK sind)
		(MF um funfzehn uhr in hannover nehmen da ein taxi)
		(KON und)
		(KON und)
		(KON und)
		(LKM kommen rechtzeitig an und)
		(VF dann)
		(LK wurden)
		(MF wir am achtundzwanzigsten abends einfach wieder zuruckfahren da wurde ich vielleicht)
		(VC sagen)
		(SIMPX wir nehmen das flugzeug da gibt es einen flug siebzehn uhr zwanzig sogar stundlich bis einundzwanzig uhr zwanzig)
		[01;31m(SIMPX[00m
			(VF das)
			(LK heist)
			(NF
				(SIMPX
					(VF wir)
					[01;31m(FKOORD[00m
						(LKMVC
							(LK konnen)
							[01;31m(MF[00m
								(ADVX auch)
								(ADVX noch)
								[01;33m(SIMPX[00m (VF um zwanzig nach acht)
								[01;31m(SIMPX[00m [01;33m(LKMVC[00m
									(LK konnen)
									(MF wir in hannover)[01;31m)[00m[01;31m)[00m
							(VC abfliegen)) [01;33mLKMVC) SIMPX)[00m
						(KON und)
						(LKM sind in siebzig minuten in munchen)[01;31m)[00m))[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'NF'], 'family': ['DM', 'NX', 'SIMPX', 'APPR', 'LK', 'MF', 'LK', 'MF', 'KON', 'KON', 'KON', 'LKM', 'VF', 'LK', 'MF', 'VC', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADJA', 'NN', 'ADV', 'VVFIN', 'PPER', 'PTKVZ', 'APPR', 'VVFIN', 'ART', 'NE', 'APPR', 'CARD', 'NN', 'VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE', 'VVFIN', 'ADV', 'ART', 'NN', 'KON', 'KON', 'KON', 'VVFIN', 'ADJD', 'PTKVZ', 'KON', 'ADV', 'VAFIN', 'PPER', 'APPRART', 'NN', 'ADV', 'ADV', 'ADV', 'VVINF', 'ADV', 'VAFIN', 'PPER', 'ADV', 'VVINF', 'PPER', 'VVFIN', 'ART', 'NN', 'ADV', 'VVFIN', 'PPER', 'ART', 'NN', 'CARD', 'NN', 'CARD', 'ADV', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'PDS', 'VVFIN', 'PPER', 'VMFIN', 'ADV', 'ADV', 'APPR', 'CARD', 'APPR', 'CARD', 'VMFIN', 'PPER', 'APPR', 'NE', 'VVINF', 'KON', 'VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 85), 'span': (63, 85), 'left siblings': ['DM', 'NX', 'SIMPX', 'APPR', 'LK', 'MF', 'LK', 'MF', 'KON', 'KON', 'KON', 'LKM', 'VF', 'LK', 'MF', 'VC', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(NX siebenundzwanzigster januar)
		(SIMPX dann fahren wir los)
		(APPR um)
		(LK nehmen)
		(MF den ice um zehn uhr)
		(LK sind)
		(MF um funfzehn uhr in hannover nehmen da ein taxi)
		(KON und)
		(KON und)
		(KON und)
		(LKM kommen rechtzeitig an und)
		(VF dann)
		(LK wurden)
		(MF wir am achtundzwanzigsten abends einfach wieder zuruckfahren da wurde ich vielleicht)
		(VC sagen)
		(SIMPX wir nehmen das flugzeug da gibt es einen flug siebzehn uhr zwanzig sogar stundlich bis einundzwanzig uhr zwanzig)
		(VF das)
		(LK heist)
		(NF
			(SIMPX
				(VF wir)
				[01;31m(FKOORD[00m
					(LKMVC
						(LK konnen)
						[01;31m(MF[00m
							(ADVX auch)
							(ADVX noch)
							[01;33m(SIMPX[00m (VF um zwanzig nach acht)
							[01;31m(SIMPX[00m [01;33m(LKMVC[00m
								(LK konnen)
								(MF wir in hannover)[01;31m)[00m[01;31m)[00m
						(VC abfliegen)) [01;33mLKMVC) SIMPX)[00m
					(KON und)
					(LKM sind in siebzig minuten in munchen)[01;31m)[00m))))
Step:UNSET remove
{'subtrees': ['LKMVC', 'KON', 'LKM'], 'family': ['VF', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VMFIN', 'ADV', 'ADV', 'APPR', 'CARD', 'APPR', 'CARD', 'VMFIN', 'PPER', 'APPR', 'NE', 'VVINF', 'KON', 'VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (65, 85), 'span': (66, 85), 'left siblings': ['VF'], 'label': 'FKOORD', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(NX siebenundzwanzigster januar)
		(SIMPX dann fahren wir los)
		(APPR um)
		(LK nehmen)
		(MF den ice um zehn uhr)
		(LK sind)
		(MF um funfzehn uhr in hannover nehmen da ein taxi)
		(KON und)
		(KON und)
		(KON und)
		(LKM kommen rechtzeitig an und)
		(VF dann)
		(LK wurden)
		(MF wir am achtundzwanzigsten abends einfach wieder zuruckfahren da wurde ich vielleicht)
		(VC sagen)
		(SIMPX wir nehmen das flugzeug da gibt es einen flug siebzehn uhr zwanzig sogar stundlich bis einundzwanzig uhr zwanzig)
		(VF das)
		(LK heist)
		(NF
			(SIMPX
				(VF wir)
				(LKMVC
					(LK konnen)
					[01;31m(MF[00m
						(ADVX auch)
						(ADVX noch)
						[01;33m(SIMPX[00m (VF um zwanzig nach acht)
						[01;31m(SIMPX[00m [01;33m(LKMVC[00m
							(LK konnen)
							(MF wir in hannover)[01;31m)[00m[01;31m)[00m
					(VC abfliegen)) [01;33mLKMVC) SIMPX)[00m
				(KON und)
				(LKM sind in siebzig minuten in munchen)))))
Step:Clause Attachment
{'subtrees': ['ADVX', 'ADVX', 'VF', 'SIMPX'], 'family': ['LK', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('VMFIN', 'ADV', 'ADV', 'APPR', 'CARD', 'APPR', 'CARD', 'VMFIN', 'PPER', 'APPR', 'NE', 'VVINF'), 'right siblings': ['VC'], 'parent': 'LKMVC', 'auto preterminal span': (66, 78), 'span': (67, 77), 'left siblings': ['LK'], 'label': 'MF', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(NX siebenundzwanzigster januar)
		(SIMPX dann fahren wir los)
		(APPR um)
		(LK nehmen)
		(MF den ice um zehn uhr)
		(LK sind)
		(MF um funfzehn uhr in hannover nehmen da ein taxi)
		(KON und)
		(KON und)
		(KON und)
		(LKM kommen rechtzeitig an und)
		(VF dann)
		(LK wurden)
		(MF wir am achtundzwanzigsten abends einfach wieder zuruckfahren da wurde ich vielleicht)
		(VC sagen)
		(SIMPX wir nehmen das flugzeug da gibt es einen flug siebzehn uhr zwanzig sogar stundlich bis einundzwanzig uhr zwanzig)
		(VF das)
		(LK heist)
		(NF
			(SIMPX
				(VF wir)
				(LKMVC
					(LK konnen)
					(ADVX auch)
					(ADVX noch)
					[01;36m(SIMPX[00m
						(VF um zwanzig nach acht)
						[01;36m(LKMVC[00m
							[01;31m(SIMPX[00m
								(LK konnen)
								(MF wir in hannover)[01;31m)[00m
							(VC abfliegen)[01;36m)[00m[01;36m)[00m)
				(KON und)
				(LKM sind in siebzig minuten in munchen)))))
Step:Clause Attachment
{'subtrees': ['VF', 'SIMPX', 'VC'], 'family': ['LK', 'ADVX', 'ADVX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'CARD', 'APPR', 'CARD', 'VMFIN', 'PPER', 'APPR', 'NE', 'VVINF'), 'right siblings': [], 'left siblings': [(LK (VXFIN (VMFIN konnen))), (ADVX (ADV auch)), (ADVX (ADV noch))], 'auto preterminal span': (69, 78), 'span': (69, 78), 'parent': 'LKMVC', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM okay)
		(NX siebenundzwanzigster januar)
		(SIMPX dann fahren wir los)
		(APPR um)
		(LK nehmen)
		(MF den ice um zehn uhr)
		(LK sind)
		(MF um funfzehn uhr in hannover nehmen da ein taxi)
		(KON und)
		(KON und)
		(KON und)
		(LKM kommen rechtzeitig an und)
		(VF dann)
		(LK wurden)
		(MF wir am achtundzwanzigsten abends einfach wieder zuruckfahren da wurde ich vielleicht)
		(VC sagen)
		(SIMPX wir nehmen das flugzeug da gibt es einen flug siebzehn uhr zwanzig sogar stundlich bis einundzwanzig uhr zwanzig)
		(VF das)
		(LK heist)
		(NF
			(SIMPX
				(VF wir)
				(LKMVC
					(LK konnen)
					(ADVX auch)
					(ADVX noch)
					(SIMPX
						(VF um zwanzig nach acht)
						[01;36m(LKMVC[00m
							[01;31m(SIMPX[00m
								(LK konnen)
								(MF wir in hannover)[01;31m)[00m
							(VC abfliegen)[01;36m)[00m))
				(KON und)
				(LKM sind in siebzig minuten in munchen)))))
Step:UNSET add
{'subtrees': ['SIMPX', 'VC'], 'family': ['VF', 'LKMVC'], 'over_word': False, 'over words': False, 'auto preterminals': ('VMFIN', 'PPER', 'APPR', 'NE', 'VVINF'), 'right siblings': [], 'left siblings': [(VF (PX (APPR um) (NX (NX (CARD zwanzig)) (PX (APPR nach) (NX (CARD acht))))))], 'auto preterminal span': (73, 78), 'span': (73, 78), 'parent': 'SIMPX', 'label': 'LKMVC', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM okay)
		(NX siebenundzwanzigster januar)
		(SIMPX dann fahren wir los)
		(APPR um)
		(LK nehmen)
		(MF den ice um zehn uhr)
		(LK sind)
		(MF um funfzehn uhr in hannover nehmen da ein taxi)
		(KON und)
		(KON und)
		(KON und)
		(LKM kommen rechtzeitig an und)
		(VF dann)
		(LK wurden)
		(MF wir am achtundzwanzigsten abends einfach wieder zuruckfahren da wurde ich vielleicht)
		(VC sagen)
		(SIMPX wir nehmen das flugzeug da gibt es einen flug siebzehn uhr zwanzig sogar stundlich bis einundzwanzig uhr zwanzig)
		(VF das)
		(LK heist)
		(NF
			(SIMPX
				(VF wir)
				(LKMVC
					(LK konnen)
					(ADVX auch)
					(ADVX noch)
					(SIMPX
						(VF um zwanzig nach acht)
						(LKMVC
							[01;31m(SIMPX[00m
								(LK konnen)
								(MF wir in hannover)[01;31m)[00m
							(VC abfliegen))))
				(KON und)
				(LKM sind in siebzig minuten in munchen)))))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['SIMPX', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('VMFIN', 'PPER', 'APPR', 'NE', 'VVINF'), 'right siblings': ['VC'], 'parent': 'LKMVC', 'auto preterminal span': (73, 78), 'span': (73, 77), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP okay siebenundzwanzigster januar dann fahren wir los um nehmen den ice um zehn uhr sind um funfzehn uhr in hannover nehmen da ein taxi und und und kommen rechtzeitig an und dann wurden wir am achtundzwanzigsten abends einfach wieder zuruckfahren da wurde ich vielleicht sagen wir nehmen das flugzeug da gibt es einen flug siebzehn uhr zwanzig sogar stundlich bis einundzwanzig uhr zwanzig das heist wir konnen auch noch um zwanzig nach acht konnen wir in hannover abfliegen und sind in siebzig minuten in munchen)

Sentence 442:
0 Initial errors
0 on fringe, 0 iterations

Sentence 443:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Clause Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU genau)
		[01;31m(SU[00m
			(DM also)
			(SIMPX dann haben wir einen termin)
			(SIMPX wir haben einen zug)
			(SIMPX wir haben einen flug fur die ruckfahrt)
			(SIMPX wir haben ein hotel fur die nacht)
			(SIMPX wir haben ein treffen)
			(SIMPX dann konnen wir uns jetzt noch uberlegen ob wir abends irgendwas machen wollen)[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'family': ['SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'ADV', 'VAFIN', 'PPER', 'ART', 'NN', 'PPER', 'VAFIN', 'ART', 'NN', 'PPER', 'VAFIN', 'ART', 'NN', 'APPR', 'ART', 'NN', 'PPER', 'VAFIN', 'ART', 'NN', 'APPR', 'ART', 'NN', 'PPER', 'VAFIN', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'VVINF', 'KOUS', 'PPER', 'ADV', 'PIS', 'VVINF', 'VMFIN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 42), 'span': (1, 42), 'left siblings': ['SU'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP genau also dann haben wir einen termin wir haben einen zug wir haben einen flug fur die ruckfahrt wir haben ein hotel fur die nacht wir haben ein treffen dann konnen wir uns jetzt noch uberlegen ob wir abends irgendwas machen wollen)

Sentence 444:
2 Initial errors
0 on fringe, 2 iterations
1 Error:UNSET remove
1 Error:Clause Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			(DM okay)[01;31m)[00m
		[01;31m(SU[00m
			(ADVX dann)
			(DM ja)
			(DM also)
			(SIMPX von mir aus waren wir dann fertig)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['DM', 'DM'], 'family': ['SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'ADV', 'PTKANT', 'ADV', 'APPR', 'PPER', 'APZR', 'VAFIN', 'PPER', 'ADV', 'ADJD'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 12), 'span': (0, 2), 'left siblings': [], 'label': 'SU', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM okay)
		[01;31m(SU[00m
			(ADVX dann)
			(DM ja)
			(DM also)
			(SIMPX von mir aus waren wir dann fertig)[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['ADVX', 'DM', 'DM', 'SIMPX'], 'family': ['DM', 'DM', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'ADV', 'PTKANT', 'ADV', 'APPR', 'PPER', 'APZR', 'VAFIN', 'PPER', 'ADV', 'ADJD'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 12), 'span': (2, 12), 'left siblings': ['DM', 'DM'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP ja okay dann ja also von mir aus waren wir dann fertig)

Sentence 445:
0 Initial errors
0 on fringe, 0 iterations

Sentence 446:
0 Initial errors
0 on fringe, 0 iterations

Sentence 447:
8 Initial errors
0 on fringe, 5 iterations
3 Error:VP Attachment
2 Error:Single Word Phrase
1 Error:UNSET add
1 Error:Unary
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM
				(ITJ okay))[01;31m)[00m
		[01;31m(SU[00m [01;33m(SIMPX[00m
			(SIMPX
				(LK konnen)
				(MF wir um zehn uhr etwa)
				[01;31m(VC[00m
					[01;31m(VXINF[00m
						[01;36m(VC[00m
							(VXINF
								(VVINF wegfahren)) [01;33mSIMPX)[00m[01;36m)[00m
						[01;36m(VXFIN[00m [01;31m(VXINF[00m
							(VVINF wegfliegen)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m)
			(PX je nachdem)[01;31m)[00m))
Step:VP Attachment
{'new_parent': 'SIMPX', 'new_family': ['LK', 'MF', 'VC', 'VXINF'], 'mover info': [('VXINF', (8, 9))], 'old_family': ['VXINF', 'VXINF'], 'start left siblings': ['VXINF'], 'auto preterminals': ('VMFIN', 'PPER', 'APPR', 'CARD', 'NN', 'ADV', 'VVINF', 'VVINF'), 'start right siblings': [], 'end left siblings': ['LK', 'MF', 'VC'], 'auto preterminal span': (1, 9), 'movers': ['VXINF'], 'old_parent': 'VXINF', 'POS confusion': ('VVINF', 'VVINF'), 'end right siblings': [], 'classified_type': 'VP Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM
				(ITJ okay))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				[01;36m(SIMPX[00m
					(LK konnen)
					(MF wir um zehn uhr etwa)
					(VC wegfahren)[01;36m)[00m
				[01;36m(VXFIN[00m [01;31m(VXINF[00m
					(VVINF wegfliegen)[01;31m)[00m[01;36m)[00m)
			(PX je nachdem)[01;31m)[00m))
Step:Single Word Phrase
{'family': ['LK', 'MF', 'VC', 'VXFIN'], 'auto preterminal span': (8, 9), 'span': (8, 9), 'subtrees': ['VVINF'], 'parent': 'SIMPX', 'over_word': True, 'auto preterminals': ('VVINF',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VXINF', 'VXFIN')}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM
				(ITJ okay))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				[01;36m(SIMPX[00m
					(LK konnen)
					(MF wir um zehn uhr etwa)
					(VC wegfahren)[01;36m)[00m
				(VXFIN wegfliegen))
			(PX je nachdem)[01;31m)[00m))
Step:UNSET add
{'subtrees': ['LK', 'MF', 'VC'], 'family': ['SIMPX', 'VXFIN'], 'over_word': False, 'over words': False, 'auto preterminals': ('VMFIN', 'PPER', 'APPR', 'CARD', 'NN', 'ADV', 'VVINF'), 'right siblings': [(VXFIN (VVINF wegfliegen))], 'left siblings': [], 'auto preterminal span': (1, 8), 'span': (1, 8), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM
				(ITJ okay))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX konnen wir um zehn uhr etwa wegfahren wegfliegen)
			(PX je nachdem)[01;31m)[00m))
Step:Unary
{'subtrees': ['DM'], 'family': ['SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'VMFIN', 'PPER', 'APPR', 'CARD', 'NN', 'ADV', 'VVINF', 'VVINF', 'ADV', 'PROP'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 11), 'span': (0, 1), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		[01;31m(SU[00m
			(SIMPX konnen wir um zehn uhr etwa wegfahren wegfliegen)
			(PX je nachdem)[01;31m)[00m))
Step:PP Attachment
{'subtrees': ['SIMPX', 'PX'], 'family': ['DM', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'VMFIN', 'PPER', 'APPR', 'CARD', 'NN', 'ADV', 'VVINF', 'VVINF', 'ADV', 'PROP'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 11), 'span': (1, 11), 'left siblings': ['DM'], 'label': 'SU', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP okay konnen wir um zehn uhr etwa wegfahren wegfliegen je nachdem)

Sentence 448:
2 Initial errors
0 on fringe, 2 iterations
1 Error:Single Word Phrase
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU okay konnen wir gern machen)
		(SU
			(DM also)
			[01;31m(NX[00m
				[01;31m(NX[00m
					(NN siebenundzwanzigster)[01;31m)[00m
				(NX achtundzwanzigster)[01;31m)[00m)))
Step:Single Word Phrase
{'subtrees': ['NN'], 'family': ['NX', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('NN', 'NN'), 'right siblings': ['NX'], 'parent': 'NX', 'auto preterminal span': (6, 8), 'span': (6, 7), 'left siblings': [], 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(SU okay konnen wir gern machen)
		(SU
			(DM also)
			[01;31m(NX[00m
				(NN siebenundzwanzigster)
				(NX achtundzwanzigster)[01;31m)[00m)))
Step:UNSET remove
{'subtrees': ['NN', 'NX'], 'family': ['DM', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'NN', 'NN'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (5, 8), 'span': (6, 8), 'left siblings': ['DM'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP okay konnen wir gern machen also siebenundzwanzigster achtundzwanzigster)

Sentence 449:
29 Initial errors
0 on fringe, 21 iterations
3 Error:NP Attachment
2 Error:Single Word Phrase
2 Error:Different label
2 Error:Different label
2 Error:Single Word Phrase
2 Error:Different label
2 Error:Clause Attachment
1 Error:Unary
1 Error:Modifier Attachment
1 Error:NP Internal Structure
1 Error:Unary
1 Error:Clause Attachment
1 Error:UNSET remove
1 Error:UNSET add
1 Error:UNSET remove
1 Error:PP Attachment
1 Error:PP Attachment
1 Error:PP Attachment
1 Error:UNSET remove
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;36m(SU[00m
				(NX
					(NN hotels))[01;36m)[00m
			(DM ja)
			(SIMPX mussen wir mal kucken)[01;31m)[00m
		[01;31m(SU[00m [01;33m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF ich)
				(LK habe)
				[01;33m(MF (MF[00m (MF hier eine liste von meiner sekretarin)[01;31m)[00m
			(NX drei moglichkeiten) [01;33mMF)[00m
			[01;31m(NX[00m
				[01;31m(NX[00m
					[01;36m(PX[00m [01;31m(NX[00m
						[01;36m(ADJX[00m [01;31m(NX[00m
							(NE maritimhotel)[01;31m)[00m[01;36m)[00m
						(PX am hauptbahnhof)[01;31m)[00m [01;33mMF) SIMPX)[00m[01;36m)[00m
					[01;36m(SU[00m
						(NX
							(NX funfzehn minuten)
							(PX zum zentrum))[01;36m)[00m[01;31m)[00m
				(DM na ja)
				[01;31m(SIMPX[00m
					(VF garage)
					(LK brauchen)
					[01;31m(MF[00m [01;33m(MF (MF[00m
						(NX wir)
						(ADVX ja)
						(ADVX nicht)[01;31m)[00m[01;31m)[00m
				[01;31m(NX[00m
					(NX ein hotel luisenhof) [01;33mMF)[00m
					(NX funf minuten vom bahnhof) [01;33mMF)[00m
					(NX
						[01;36m(NX[00m
							(NX bar)
							(NX restaurant)[01;36m)[00m
						(NX garage))[01;31m)[00m
				[01;36m(NX[00m [01;31m(ADJX[00m
					(NX alles)
					[01;36m(VXINF[00m [01;36m(VC[00m [01;31m(ADJX[00m
						(ADJD uberflussig)[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;36m)[00m
				(KON und)
				[01;36m(PX[00m [01;31m(NX[00m
					(PX direkt beim hauptbahnhof)
					(ADVX noch)
					(NX ein hotel mit schwimm und dampfbad)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK brauchen)
				(MF wir es)[01;31m)[00m[01;31m)[00m))
Step:NP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'ADVX', 'ADVX', 'NX', 'NX'], 'mover info': [('NX', (30, 33)), ('NX', (33, 37))], 'old_family': ['NX', 'NX', 'NX'], 'start left siblings': [], 'auto preterminals': ('NE', 'APPRART', 'NN', 'CARD', 'NN', 'APPRART', 'NN', 'ITJ', 'PTKANT', 'NN', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'NN', 'NN', 'NN', 'PIS', 'ADJD', 'KON', 'ADV', 'APPRART', 'NN', 'ADV', 'ART', 'NN', 'APPR', 'TRUNC', 'KON', 'NN'), 'start right siblings': ['NX'], 'end left siblings': ['NX', 'ADVX', 'ADVX'], 'auto preterminal span': (16, 53), 'movers': ['NX', 'NX'], 'old_parent': 'NX', 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;36m(SU[00m
				(NX
					(NN hotels))[01;36m)[00m
			(DM ja)
			(SIMPX mussen wir mal kucken)[01;31m)[00m
		[01;31m(SU[00m [01;33m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF ich)
				(LK habe)
				[01;33m(MF (MF[00m (MF hier eine liste von meiner sekretarin)[01;31m)[00m
			(NX drei moglichkeiten) [01;33mMF)[00m
			[01;31m(NX[00m
				[01;31m(NX[00m
					[01;36m(PX[00m [01;31m(NX[00m
						[01;36m(ADJX[00m [01;31m(NX[00m
							(NE maritimhotel)[01;31m)[00m[01;36m)[00m
						(PX am hauptbahnhof)[01;31m)[00m [01;33mMF) SIMPX)[00m[01;36m)[00m
					[01;36m(SU[00m
						(NX
							(NX funfzehn minuten)
							(PX zum zentrum))[01;36m)[00m[01;31m)[00m
				(DM na ja)
				[01;31m(SIMPX[00m
					(VF garage)
					(LK brauchen)
					(MF
						[01;36m(MF[00m
							(NX wir)
							(ADVX ja)
							(ADVX nicht)
							(NX ein hotel luisenhof)[01;36m)[00m
						(NX funf minuten vom bahnhof))[01;31m)[00m
				(NX
					[01;36m(NX[00m
						(NX bar)
						(NX restaurant)[01;36m)[00m
					(NX garage))
				[01;36m(NX[00m [01;31m(ADJX[00m
					(NX alles)
					[01;36m(VXINF[00m [01;36m(VC[00m [01;31m(ADJX[00m
						(ADJD uberflussig)[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;36m)[00m
				(KON und)
				[01;36m(PX[00m [01;31m(NX[00m
					(PX direkt beim hauptbahnhof)
					(ADVX noch)
					(NX ein hotel mit schwimm und dampfbad)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK brauchen)
				(MF wir es)[01;31m)[00m[01;31m)[00m))
Step:Single Word Phrase
{'family': ['ADJX', 'PX'], 'auto preterminal span': (16, 17), 'span': (16, 17), 'subtrees': ['NE'], 'parent': 'NX', 'over_word': True, 'auto preterminals': ('NE',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('NX', 'ADJX')}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;36m(SU[00m
				(NX
					(NN hotels))[01;36m)[00m
			(DM ja)
			(SIMPX mussen wir mal kucken)[01;31m)[00m
		[01;31m(SU[00m [01;33m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF ich)
				(LK habe)
				[01;33m(MF (MF[00m (MF hier eine liste von meiner sekretarin)[01;31m)[00m
			(NX drei moglichkeiten) [01;33mMF)[00m
			[01;31m(NX[00m
				[01;31m(NX[00m
					[01;36m(PX[00m [01;31m(NX[00m
						(ADJX maritimhotel)
						(PX am hauptbahnhof)[01;31m)[00m [01;33mMF) SIMPX)[00m[01;36m)[00m
					[01;36m(SU[00m
						(NX
							(NX funfzehn minuten)
							(PX zum zentrum))[01;36m)[00m[01;31m)[00m
				(DM na ja)
				[01;31m(SIMPX[00m
					(VF garage)
					(LK brauchen)
					(MF
						[01;36m(MF[00m
							(NX wir)
							(ADVX ja)
							(ADVX nicht)
							(NX ein hotel luisenhof)[01;36m)[00m
						(NX funf minuten vom bahnhof))[01;31m)[00m
				(NX
					[01;36m(NX[00m
						(NX bar)
						(NX restaurant)[01;36m)[00m
					(NX garage))
				[01;36m(NX[00m [01;31m(ADJX[00m
					(NX alles)
					[01;36m(VXINF[00m [01;36m(VC[00m [01;31m(ADJX[00m
						(ADJD uberflussig)[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;36m)[00m
				(KON und)
				[01;36m(PX[00m [01;31m(NX[00m
					(PX direkt beim hauptbahnhof)
					(ADVX noch)
					(NX ein hotel mit schwimm und dampfbad)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK brauchen)
				(MF wir es)[01;31m)[00m[01;31m)[00m))
Step:Different label
{'family': ['PX', 'NX'], 'auto preterminal span': (16, 19), 'span': (16, 19), 'subtrees': ['ADJX', 'PX'], 'parent': 'NX', 'over_word': False, 'auto preterminals': ('NE', 'APPRART', 'NN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('NX', 'PX')}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;36m(SU[00m
				(NX
					(NN hotels))[01;36m)[00m
			(DM ja)
			(SIMPX mussen wir mal kucken)[01;31m)[00m
		[01;31m(SU[00m [01;33m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF ich)
				(LK habe)
				[01;33m(MF (MF[00m (MF hier eine liste von meiner sekretarin)[01;31m)[00m
			(NX drei moglichkeiten) [01;33mMF)[00m
			[01;31m(NX[00m
				[01;31m(NX[00m
					(PX maritimhotel am hauptbahnhof) [01;33mMF) SIMPX)[00m
					[01;36m(SU[00m
						(NX
							(NX funfzehn minuten)
							(PX zum zentrum))[01;36m)[00m[01;31m)[00m
				(DM na ja)
				[01;31m(SIMPX[00m
					(VF garage)
					(LK brauchen)
					(MF
						[01;36m(MF[00m
							(NX wir)
							(ADVX ja)
							(ADVX nicht)
							(NX ein hotel luisenhof)[01;36m)[00m
						(NX funf minuten vom bahnhof))[01;31m)[00m
				(NX
					[01;36m(NX[00m
						(NX bar)
						(NX restaurant)[01;36m)[00m
					(NX garage))
				[01;36m(NX[00m [01;31m(ADJX[00m
					(NX alles)
					[01;36m(VXINF[00m [01;36m(VC[00m [01;31m(ADJX[00m
						(ADJD uberflussig)[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;36m)[00m
				(KON und)
				[01;36m(PX[00m [01;31m(NX[00m
					(PX direkt beim hauptbahnhof)
					(ADVX noch)
					(NX ein hotel mit schwimm und dampfbad)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK brauchen)
				(MF wir es)[01;31m)[00m[01;31m)[00m))
Step:Different label
{'family': ['NX', 'DM', 'SIMPX', 'NX', 'NX', 'KON', 'NX'], 'auto preterminal span': (40, 42), 'span': (40, 42), 'subtrees': ['NX', 'ADJX'], 'parent': 'NX', 'over_word': False, 'auto preterminals': ('PIS', 'ADJD'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('ADJX', 'NX')}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;36m(SU[00m
				(NX
					(NN hotels))[01;36m)[00m
			(DM ja)
			(SIMPX mussen wir mal kucken)[01;31m)[00m
		[01;31m(SU[00m [01;33m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF ich)
				(LK habe)
				[01;33m(MF (MF[00m (MF hier eine liste von meiner sekretarin)[01;31m)[00m
			(NX drei moglichkeiten) [01;33mMF)[00m
			[01;31m(NX[00m
				[01;31m(NX[00m
					(PX maritimhotel am hauptbahnhof) [01;33mMF) SIMPX)[00m
					[01;36m(SU[00m
						(NX
							(NX funfzehn minuten)
							(PX zum zentrum))[01;36m)[00m[01;31m)[00m
				(DM na ja)
				[01;31m(SIMPX[00m
					(VF garage)
					(LK brauchen)
					(MF
						[01;36m(MF[00m
							(NX wir)
							(ADVX ja)
							(ADVX nicht)
							(NX ein hotel luisenhof)[01;36m)[00m
						(NX funf minuten vom bahnhof))[01;31m)[00m
				(NX
					[01;36m(NX[00m
						(NX bar)
						(NX restaurant)[01;36m)[00m
					(NX garage))
				(NX
					(NX alles)
					[01;36m(VXINF[00m [01;36m(VC[00m [01;31m(ADJX[00m
						(ADJD uberflussig)[01;31m)[00m[01;36m)[00m[01;36m)[00m)
				(KON und)
				[01;36m(PX[00m [01;31m(NX[00m
					(PX direkt beim hauptbahnhof)
					(ADVX noch)
					(NX ein hotel mit schwimm und dampfbad)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK brauchen)
				(MF wir es)[01;31m)[00m[01;31m)[00m))
Step:Single Word Phrase
{'family': ['NX', 'VC'], 'auto preterminal span': (41, 42), 'span': (41, 42), 'subtrees': ['ADJD'], 'parent': 'NX', 'over_word': True, 'auto preterminals': ('ADJD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'VC')}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;36m(SU[00m
				(NX
					(NN hotels))[01;36m)[00m
			(DM ja)
			(SIMPX mussen wir mal kucken)[01;31m)[00m
		[01;31m(SU[00m [01;33m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF ich)
				(LK habe)
				[01;33m(MF (MF[00m (MF hier eine liste von meiner sekretarin)[01;31m)[00m
			(NX drei moglichkeiten) [01;33mMF)[00m
			[01;31m(NX[00m
				[01;31m(NX[00m
					(PX maritimhotel am hauptbahnhof) [01;33mMF) SIMPX)[00m
					[01;36m(SU[00m
						(NX
							(NX funfzehn minuten)
							(PX zum zentrum))[01;36m)[00m[01;31m)[00m
				(DM na ja)
				[01;31m(SIMPX[00m
					(VF garage)
					(LK brauchen)
					(MF
						[01;36m(MF[00m
							(NX wir)
							(ADVX ja)
							(ADVX nicht)
							(NX ein hotel luisenhof)[01;36m)[00m
						(NX funf minuten vom bahnhof))[01;31m)[00m
				(NX
					[01;36m(NX[00m
						(NX bar)
						(NX restaurant)[01;36m)[00m
					(NX garage))
				(NX
					(NX alles)
					[01;36m(VXINF[00m
						(VC
							(ADJD uberflussig))[01;36m)[00m)
				(KON und)
				[01;36m(PX[00m [01;31m(NX[00m
					(PX direkt beim hauptbahnhof)
					(ADVX noch)
					(NX ein hotel mit schwimm und dampfbad)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK brauchen)
				(MF wir es)[01;31m)[00m[01;31m)[00m))
Step:Different label
{'family': ['NX', 'DM', 'SIMPX', 'NX', 'NX', 'KON', 'PX'], 'auto preterminal span': (43, 53), 'span': (43, 53), 'subtrees': ['PX', 'ADVX', 'NX'], 'parent': 'NX', 'over_word': False, 'auto preterminals': ('ADV', 'APPRART', 'NN', 'ADV', 'ART', 'NN', 'APPR', 'TRUNC', 'KON', 'NN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('NX', 'PX')}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;36m(SU[00m
				(NX
					(NN hotels))[01;36m)[00m
			(DM ja)
			(SIMPX mussen wir mal kucken)[01;31m)[00m
		[01;31m(SU[00m [01;33m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF ich)
				(LK habe)
				[01;33m(MF (MF[00m (MF hier eine liste von meiner sekretarin)[01;31m)[00m
			(NX drei moglichkeiten) [01;33mMF)[00m
			[01;31m(NX[00m
				[01;31m(NX[00m
					(PX maritimhotel am hauptbahnhof) [01;33mMF) SIMPX)[00m
					[01;36m(SU[00m
						(NX
							(NX funfzehn minuten)
							(PX zum zentrum))[01;36m)[00m[01;31m)[00m
				(DM na ja)
				[01;31m(SIMPX[00m
					(VF garage)
					(LK brauchen)
					(MF
						[01;36m(MF[00m
							(NX wir)
							(ADVX ja)
							(ADVX nicht)
							(NX ein hotel luisenhof)[01;36m)[00m
						(NX funf minuten vom bahnhof))[01;31m)[00m
				(NX
					[01;36m(NX[00m
						(NX bar)
						(NX restaurant)[01;36m)[00m
					(NX garage))
				(NX
					(NX alles)
					[01;36m(VXINF[00m
						(VC
							(ADJD uberflussig))[01;36m)[00m)
				(KON und)
				(PX direkt beim hauptbahnhof noch ein hotel mit schwimm und dampfbad)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK brauchen)
				(MF wir es)[01;31m)[00m[01;31m)[00m))
Step:Clause Attachment
{'new_parent': 'SU', 'new_family': ['DM', 'SIMPX', 'SIMPX', 'NX', 'NX'], 'mover info': [('DM', (1, 2)), ('SIMPX', (2, 6))], 'old_family': ['NX', 'DM', 'SIMPX'], 'start left siblings': ['NX'], 'auto preterminals': ('NN', 'PTKANT', 'VMFIN', 'PPER', 'ADV', 'VVINF', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'APPR', 'PPOSAT', 'NN', 'CARD', 'NN', 'NE', 'APPRART', 'NN', 'CARD', 'NN', 'APPRART', 'NN', 'ITJ', 'PTKANT', 'NN', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'NN', 'NN', 'NN', 'PIS', 'ADJD', 'KON', 'ADV', 'APPRART', 'NN', 'ADV', 'ART', 'NN', 'APPR', 'TRUNC', 'KON', 'NN', 'VVFIN', 'PPER', 'PPER'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 56), 'movers': ['DM', 'SIMPX'], 'old_parent': 'SU', 'end right siblings': ['SIMPX', 'NX', 'NX'], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU hotels)
		[01;31m(SU[00m
			(DM ja)
			(SIMPX mussen wir mal kucken)
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(VF ich)
				(LK habe)
				[01;33m(MF (MF[00m (MF hier eine liste von meiner sekretarin)[01;31m)[00m
			(NX drei moglichkeiten) [01;33mMF)[00m
			[01;31m(NX[00m
				[01;31m(NX[00m
					(PX maritimhotel am hauptbahnhof) [01;33mMF) SIMPX)[00m
					[01;36m(SU[00m
						(NX
							(NX funfzehn minuten)
							(PX zum zentrum))[01;36m)[00m[01;31m)[00m
				(DM na ja)
				[01;31m(SIMPX[00m
					(VF garage)
					(LK brauchen)
					(MF
						[01;36m(MF[00m
							(NX wir)
							(ADVX ja)
							(ADVX nicht)
							(NX ein hotel luisenhof)[01;36m)[00m
						(NX funf minuten vom bahnhof))[01;31m)[00m
				(NX
					[01;36m(NX[00m
						(NX bar)
						(NX restaurant)[01;36m)[00m
					(NX garage))
				(NX
					(NX alles)
					[01;36m(VXINF[00m
						(VC
							(ADJD uberflussig))[01;36m)[00m)
				(KON und)
				(PX direkt beim hauptbahnhof noch ein hotel mit schwimm und dampfbad)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK brauchen)
				(MF wir es)[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['NX'], 'family': ['PX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'NN', 'APPRART', 'NN'), 'right siblings': [], 'left siblings': [(PX (ADJX (NE maritimhotel)) (PX (APPRART am) (NX (NN hauptbahnhof))))], 'auto preterminal span': (19, 23), 'span': (19, 23), 'parent': 'NX', 'label': 'SU', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU hotels)
		[01;31m(SU[00m
			(DM ja)
			(SIMPX mussen wir mal kucken)
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(VF ich)
				(LK habe)
				[01;33m(MF (MF[00m (MF hier eine liste von meiner sekretarin)[01;31m)[00m
			(NX drei moglichkeiten) [01;33mMF)[00m
			[01;31m(NX[00m
				[01;31m(NX[00m
					(PX maritimhotel am hauptbahnhof) [01;33mMF) SIMPX)[00m
					(SU funfzehn minuten zum zentrum)[01;31m)[00m
				(DM na ja)
				[01;31m(SIMPX[00m
					(VF garage)
					(LK brauchen)
					(MF
						[01;36m(MF[00m
							(NX wir)
							(ADVX ja)
							(ADVX nicht)
							(NX ein hotel luisenhof)[01;36m)[00m
						(NX funf minuten vom bahnhof))[01;31m)[00m
				(NX
					[01;36m(NX[00m
						(NX bar)
						(NX restaurant)[01;36m)[00m
					(NX garage))
				(NX
					(NX alles)
					[01;36m(VXINF[00m
						(VC
							(ADJD uberflussig))[01;36m)[00m)
				(KON und)
				(PX direkt beim hauptbahnhof noch ein hotel mit schwimm und dampfbad)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK brauchen)
				(MF wir es)[01;31m)[00m[01;31m)[00m))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADVX', 'ADVX', 'NX'], 'family': ['MF', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV', 'PTKNEG', 'ART', 'NN', 'NE'), 'right siblings': [(NX (NX (ADJX (CARD funf)) (NN minuten)) (PX (APPRART vom) (NX (NN bahnhof))))], 'left siblings': [], 'auto preterminal span': (27, 33), 'span': (27, 33), 'parent': 'MF', 'label': 'MF', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU hotels)
		[01;31m(SU[00m
			(DM ja)
			(SIMPX mussen wir mal kucken)
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(VF ich)
				(LK habe)
				[01;33m(MF (MF[00m (MF hier eine liste von meiner sekretarin)[01;31m)[00m
			(NX drei moglichkeiten) [01;33mMF)[00m
			[01;31m(NX[00m
				[01;31m(NX[00m
					(PX maritimhotel am hauptbahnhof) [01;33mMF) SIMPX)[00m
					(SU funfzehn minuten zum zentrum)[01;31m)[00m
				(DM na ja)
				[01;31m(SIMPX[00m
					(VF garage)
					(LK brauchen)
					(MF wir ja nicht ein hotel luisenhof funf minuten vom bahnhof)[01;31m)[00m
				(NX
					[01;36m(NX[00m
						(NX bar)
						(NX restaurant)[01;36m)[00m
					(NX garage))
				(NX
					(NX alles)
					[01;36m(VXINF[00m
						(VC
							(ADJD uberflussig))[01;36m)[00m)
				(KON und)
				(PX direkt beim hauptbahnhof noch ein hotel mit schwimm und dampfbad)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK brauchen)
				(MF wir es)[01;31m)[00m[01;31m)[00m))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'NN'), 'right siblings': [(NX (NN garage))], 'left siblings': [], 'auto preterminal span': (37, 39), 'span': (37, 39), 'parent': 'NX', 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'add'}
(TOP
	(TURN
		(SU hotels)
		[01;31m(SU[00m
			(DM ja)
			(SIMPX mussen wir mal kucken)
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(VF ich)
				(LK habe)
				[01;33m(MF (MF[00m (MF hier eine liste von meiner sekretarin)[01;31m)[00m
			(NX drei moglichkeiten) [01;33mMF)[00m
			[01;31m(NX[00m
				[01;31m(NX[00m
					(PX maritimhotel am hauptbahnhof) [01;33mMF) SIMPX)[00m
					(SU funfzehn minuten zum zentrum)[01;31m)[00m
				(DM na ja)
				[01;31m(SIMPX[00m
					(VF garage)
					(LK brauchen)
					(MF wir ja nicht ein hotel luisenhof funf minuten vom bahnhof)[01;31m)[00m
				(NX bar restaurant garage)
				(NX
					(NX alles)
					[01;36m(VXINF[00m
						(VC
							(ADJD uberflussig))[01;36m)[00m)
				(KON und)
				(PX direkt beim hauptbahnhof noch ein hotel mit schwimm und dampfbad)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK brauchen)
				(MF wir es)[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['VC'], 'family': ['NX', 'VXINF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJD',), 'right siblings': [], 'left siblings': [(NX (PIS alles))], 'auto preterminal span': (41, 42), 'span': (41, 42), 'parent': 'NX', 'label': 'VXINF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU hotels)
		[01;31m(SU[00m
			(DM ja)
			(SIMPX mussen wir mal kucken)
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(VF ich)
				(LK habe)
				[01;33m(MF (MF[00m (MF hier eine liste von meiner sekretarin)[01;31m)[00m
			(NX drei moglichkeiten) [01;33mMF)[00m
			[01;31m(NX[00m
				[01;31m(NX[00m
					(PX maritimhotel am hauptbahnhof) [01;33mMF) SIMPX)[00m
					(SU funfzehn minuten zum zentrum)[01;31m)[00m
				(DM na ja)
				[01;31m(SIMPX[00m
					(VF garage)
					(LK brauchen)
					(MF wir ja nicht ein hotel luisenhof funf minuten vom bahnhof)[01;31m)[00m
				(NX bar restaurant garage)
				(NX alles uberflussig)
				(KON und)
				(PX direkt beim hauptbahnhof noch ein hotel mit schwimm und dampfbad)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK brauchen)
				(MF wir es)[01;31m)[00m[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['DM', 'SIMPX', 'SIMPX', 'NX', 'NX'], 'family': ['SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'PTKANT', 'VMFIN', 'PPER', 'ADV', 'VVINF', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'APPR', 'PPOSAT', 'NN', 'CARD', 'NN', 'NE', 'APPRART', 'NN', 'CARD', 'NN', 'APPRART', 'NN', 'ITJ', 'PTKANT', 'NN', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'NN', 'NN', 'NN', 'PIS', 'ADJD', 'KON', 'ADV', 'APPRART', 'NN', 'ADV', 'ART', 'NN', 'APPR', 'TRUNC', 'KON', 'NN', 'VVFIN', 'PPER', 'PPER'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 56), 'span': (1, 53), 'left siblings': ['SU'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU hotels)
		(DM ja)
		(SIMPX mussen wir mal kucken)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF ich)
			(LK habe)
			[01;33m(MF (MF[00m (MF hier eine liste von meiner sekretarin)[01;31m)[00m
		(NX drei moglichkeiten) [01;33mMF)[00m
		[01;31m(NX[00m
			[01;31m(NX[00m
				(PX maritimhotel am hauptbahnhof) [01;33mMF) SIMPX)[00m
				(SU funfzehn minuten zum zentrum)[01;31m)[00m
			(DM na ja)
			[01;31m(SIMPX[00m
				(VF garage)
				(LK brauchen)
				(MF wir ja nicht ein hotel luisenhof funf minuten vom bahnhof)[01;31m)[00m
			(NX bar restaurant garage)
			(NX alles uberflussig)
			(KON und)
			(PX direkt beim hauptbahnhof noch ein hotel mit schwimm und dampfbad)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK brauchen)
				(MF wir es)[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['SU', 'DM', 'SIMPX', 'SIMPX', 'NX', 'NX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'PTKANT', 'VMFIN', 'PPER', 'ADV', 'VVINF', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'APPR', 'PPOSAT', 'NN', 'CARD', 'NN', 'NE', 'APPRART', 'NN', 'CARD', 'NN', 'APPRART', 'NN', 'ITJ', 'PTKANT', 'NN', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'NN', 'NN', 'NN', 'PIS', 'ADJD', 'KON', 'ADV', 'APPRART', 'NN', 'ADV', 'ART', 'NN', 'APPR', 'TRUNC', 'KON', 'NN', 'VVFIN', 'PPER', 'PPER'), 'right siblings': ['NX', 'NX', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 56), 'span': (6, 14), 'left siblings': ['SU', 'DM', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU hotels)
		(DM ja)
		(SIMPX mussen wir mal kucken)
		[01;33m(SIMPX[00m (VF ich)
		(LK habe)
		[01;36m(MF[00m
			[01;33m(MF[00m (MF hier eine liste von meiner sekretarin)
			(NX drei moglichkeiten)[01;36m)[00m
		[01;31m(NX[00m
			[01;31m(NX[00m
				(PX maritimhotel am hauptbahnhof) [01;33mMF) SIMPX)[00m
				(SU funfzehn minuten zum zentrum)[01;31m)[00m
			(DM na ja)
			[01;31m(SIMPX[00m
				(VF garage)
				(LK brauchen)
				(MF wir ja nicht ein hotel luisenhof funf minuten vom bahnhof)[01;31m)[00m
			(NX bar restaurant garage)
			(NX alles uberflussig)
			(KON und)
			(PX direkt beim hauptbahnhof noch ein hotel mit schwimm und dampfbad)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK brauchen)
				(MF wir es)[01;31m)[00m[01;31m)[00m))
Step:UNSET add
{'subtrees': ['MF', 'NX'], 'family': ['SU', 'DM', 'SIMPX', 'VF', 'LK', 'MF', 'NX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ART', 'NN', 'APPR', 'PPOSAT', 'NN', 'CARD', 'NN'), 'right siblings': [(NX (NX (PX (ADJX (NE maritimhotel)) (PX (APPRART am) (NX (NN hauptbahnhof)))) (SU (NX (NX (ADJX (CARD funfzehn)) (NN minuten)) (PX (APPRART zum) (NX (NN zentrum)))))) (DM (ITJ na) (PTKANT ja)) (SIMPX (VF (NX (NN garage))) (LK (VXFIN (VVFIN brauchen))) (MF (MF (NX (PPER wir)) (ADVX (ADV ja)) (ADVX (PTKNEG nicht)) (NX (ART ein) (NX (NX (NN hotel)) (NX (NE luisenhof))))) (NX (NX (ADJX (CARD funf)) (NN minuten)) (PX (APPRART vom) (NX (NN bahnhof)))))) (NX (NX (NX (NN bar)) (NX (NN restaurant))) (NX (NN garage))) (NX (NX (PIS alles)) (VXINF (VC (ADJD uberflussig)))) (KON und) (PX (PX (ADVX (ADV direkt)) (APPRART beim) (NX (NN hauptbahnhof))) (ADVX (ADV noch)) (NX (NX (ART ein) (NN hotel)) (PX (APPR mit) (NX (TRUNC schwimm) (KON und) (NN dampfbad)))))), (SU (SIMPX (LK (VXFIN (VVFIN brauchen))) (MF (NX (PPER wir)) (NX (PPER es)))))], 'left siblings': [(SU (NX (NN hotels))), (DM (PTKANT ja)), (SIMPX (LK (VXFIN (VMFIN mussen))) (MF (NX (PPER wir)) (ADVX (ADV mal))) (VC (VXINF (VVINF kucken)))), (VF (NX (PPER ich))), (LK (VXFIN (VAFIN habe)))], 'auto preterminal span': (8, 16), 'span': (8, 16), 'parent': 'TURN', 'label': 'MF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU hotels)
		(DM ja)
		(SIMPX mussen wir mal kucken)
		[01;33m(SIMPX[00m (VF ich)
		(LK habe)
		[01;33m(MF[00m (MF hier eine liste von meiner sekretarin drei moglichkeiten)
		[01;31m(NX[00m
			[01;31m(NX[00m
				(PX maritimhotel am hauptbahnhof) [01;33mMF) SIMPX)[00m
				(SU funfzehn minuten zum zentrum)[01;31m)[00m
			(DM na ja)
			[01;31m(SIMPX[00m
				(VF garage)
				(LK brauchen)
				(MF wir ja nicht ein hotel luisenhof funf minuten vom bahnhof)[01;31m)[00m
			(NX bar restaurant garage)
			(NX alles uberflussig)
			(KON und)
			(PX direkt beim hauptbahnhof noch ein hotel mit schwimm und dampfbad)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK brauchen)
				(MF wir es)[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['PX', 'SU'], 'family': ['NX', 'DM', 'SIMPX', 'NX', 'NX', 'KON', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NE', 'APPRART', 'NN', 'CARD', 'NN', 'APPRART', 'NN', 'ITJ', 'PTKANT', 'NN', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'NN', 'NN', 'NN', 'PIS', 'ADJD', 'KON', 'ADV', 'APPRART', 'NN', 'ADV', 'ART', 'NN', 'APPR', 'TRUNC', 'KON', 'NN'), 'right siblings': ['DM', 'SIMPX', 'NX', 'NX', 'KON', 'PX'], 'parent': 'NX', 'auto preterminal span': (16, 53), 'span': (16, 23), 'left siblings': [], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU hotels)
		(DM ja)
		(SIMPX mussen wir mal kucken)
		[01;33m(SIMPX[00m (VF ich)
		(LK habe)
		[01;33m(MF[00m (MF hier eine liste von meiner sekretarin drei moglichkeiten)
		[01;31m(NX[00m
			(PX maritimhotel am hauptbahnhof) [01;33mMF) SIMPX)[00m
			(SU funfzehn minuten zum zentrum)
			(DM na ja)
			[01;31m(SIMPX[00m
				(VF garage)
				(LK brauchen)
				(MF wir ja nicht ein hotel luisenhof funf minuten vom bahnhof)[01;31m)[00m
			(NX bar restaurant garage)
			(NX alles uberflussig)
			(KON und)
			(PX direkt beim hauptbahnhof noch ein hotel mit schwimm und dampfbad)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK brauchen)
				(MF wir es)[01;31m)[00m[01;31m)[00m))
Step:PP Attachment
{'subtrees': ['PX', 'SU', 'DM', 'SIMPX', 'NX', 'NX', 'KON', 'PX'], 'family': ['SU', 'DM', 'SIMPX', 'VF', 'LK', 'MF', 'NX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'PTKANT', 'VMFIN', 'PPER', 'ADV', 'VVINF', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'APPR', 'PPOSAT', 'NN', 'CARD', 'NN', 'NE', 'APPRART', 'NN', 'CARD', 'NN', 'APPRART', 'NN', 'ITJ', 'PTKANT', 'NN', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'NN', 'NN', 'NN', 'PIS', 'ADJD', 'KON', 'ADV', 'APPRART', 'NN', 'ADV', 'ART', 'NN', 'APPR', 'TRUNC', 'KON', 'NN', 'VVFIN', 'PPER', 'PPER'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 56), 'span': (16, 53), 'left siblings': ['SU', 'DM', 'SIMPX', 'VF', 'LK', 'MF'], 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU hotels)
		(DM ja)
		(SIMPX mussen wir mal kucken)
		[01;36m(SIMPX[00m
			(VF ich)
			(LK habe)
			[01;36m(MF[00m
				(MF hier eine liste von meiner sekretarin drei moglichkeiten)
				(PX maritimhotel am hauptbahnhof)[01;36m)[00m[01;36m)[00m
		(SU funfzehn minuten zum zentrum)
		(DM na ja)
		[01;31m(SIMPX[00m
			(VF garage)
			(LK brauchen)
			(MF wir ja nicht ein hotel luisenhof funf minuten vom bahnhof)[01;31m)[00m
		(NX bar restaurant garage)
		(NX alles uberflussig)
		(KON und)
		(PX direkt beim hauptbahnhof noch ein hotel mit schwimm und dampfbad)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK brauchen)
				(MF wir es)[01;31m)[00m[01;31m)[00m))
Step:PP Attachment
{'subtrees': ['VF', 'LK', 'MF', 'PX'], 'family': ['SU', 'DM', 'SIMPX', 'SIMPX', 'SU', 'DM', 'SIMPX', 'NX', 'NX', 'KON', 'PX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'APPR', 'PPOSAT', 'NN', 'CARD', 'NN', 'NE', 'APPRART', 'NN'), 'right siblings': [(SU (NX (NX (ADJX (CARD funfzehn)) (NN minuten)) (PX (APPRART zum) (NX (NN zentrum))))), (DM (ITJ na) (PTKANT ja)), (SIMPX (VF (NX (NN garage))) (LK (VXFIN (VVFIN brauchen))) (MF (MF (NX (PPER wir)) (ADVX (ADV ja)) (ADVX (PTKNEG nicht)) (NX (ART ein) (NX (NX (NN hotel)) (NX (NE luisenhof))))) (NX (NX (ADJX (CARD funf)) (NN minuten)) (PX (APPRART vom) (NX (NN bahnhof)))))), (NX (NX (NX (NN bar)) (NX (NN restaurant))) (NX (NN garage))), (NX (NX (PIS alles)) (VXINF (VC (ADJD uberflussig)))), (KON und), (PX (PX (ADVX (ADV direkt)) (APPRART beim) (NX (NN hauptbahnhof))) (ADVX (ADV noch)) (NX (NX (ART ein) (NN hotel)) (PX (APPR mit) (NX (TRUNC schwimm) (KON und) (NN dampfbad))))), (SU (SIMPX (LK (VXFIN (VVFIN brauchen))) (MF (NX (PPER wir)) (NX (PPER es)))))], 'left siblings': [(SU (NX (NN hotels))), (DM (PTKANT ja)), (SIMPX (LK (VXFIN (VMFIN mussen))) (MF (NX (PPER wir)) (ADVX (ADV mal))) (VC (VXINF (VVINF kucken))))], 'auto preterminal span': (6, 19), 'span': (6, 19), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU hotels)
		(DM ja)
		(SIMPX mussen wir mal kucken)
		(SIMPX
			(VF ich)
			(LK habe)
			[01;36m(MF[00m
				(MF hier eine liste von meiner sekretarin drei moglichkeiten)
				(PX maritimhotel am hauptbahnhof)[01;36m)[00m)
		(SU funfzehn minuten zum zentrum)
		(DM na ja)
		[01;31m(SIMPX[00m
			(VF garage)
			(LK brauchen)
			(MF wir ja nicht ein hotel luisenhof funf minuten vom bahnhof)[01;31m)[00m
		(NX bar restaurant garage)
		(NX alles uberflussig)
		(KON und)
		(PX direkt beim hauptbahnhof noch ein hotel mit schwimm und dampfbad)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK brauchen)
				(MF wir es)[01;31m)[00m[01;31m)[00m))
Step:PP Attachment
{'subtrees': ['MF', 'PX'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ART', 'NN', 'APPR', 'PPOSAT', 'NN', 'CARD', 'NN', 'NE', 'APPRART', 'NN'), 'right siblings': [], 'left siblings': [(VF (NX (PPER ich))), (LK (VXFIN (VAFIN habe)))], 'auto preterminal span': (8, 19), 'span': (8, 19), 'parent': 'SIMPX', 'label': 'MF', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU hotels)
		(DM ja)
		(SIMPX mussen wir mal kucken)
		(SIMPX ich habe hier eine liste von meiner sekretarin drei moglichkeiten maritimhotel am hauptbahnhof)
		(SU funfzehn minuten zum zentrum)
		(DM na ja)
		[01;31m(SIMPX[00m
			(VF garage)
			(LK brauchen)
			(MF wir ja nicht ein hotel luisenhof funf minuten vom bahnhof)[01;31m)[00m
		(NX bar restaurant garage)
		(NX alles uberflussig)
		(KON und)
		(PX direkt beim hauptbahnhof noch ein hotel mit schwimm und dampfbad)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK brauchen)
				(MF wir es)[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['SU', 'DM', 'SIMPX', 'SIMPX', 'SU', 'DM', 'SIMPX', 'NX', 'NX', 'KON', 'PX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'PTKANT', 'VMFIN', 'PPER', 'ADV', 'VVINF', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'APPR', 'PPOSAT', 'NN', 'CARD', 'NN', 'NE', 'APPRART', 'NN', 'CARD', 'NN', 'APPRART', 'NN', 'ITJ', 'PTKANT', 'NN', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'NN', 'NN', 'NN', 'PIS', 'ADJD', 'KON', 'ADV', 'APPRART', 'NN', 'ADV', 'ART', 'NN', 'APPR', 'TRUNC', 'KON', 'NN', 'VVFIN', 'PPER', 'PPER'), 'right siblings': ['NX', 'NX', 'KON', 'PX', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 56), 'span': (25, 37), 'left siblings': ['SU', 'DM', 'SIMPX', 'SIMPX', 'SU', 'DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU hotels)
		(DM ja)
		(SIMPX mussen wir mal kucken)
		(SIMPX ich habe hier eine liste von meiner sekretarin drei moglichkeiten maritimhotel am hauptbahnhof)
		(SU funfzehn minuten zum zentrum)
		(DM na ja)
		(VF garage)
		(LK brauchen)
		(MF wir ja nicht ein hotel luisenhof funf minuten vom bahnhof)
		(NX bar restaurant garage)
		(NX alles uberflussig)
		(KON und)
		(PX direkt beim hauptbahnhof noch ein hotel mit schwimm und dampfbad)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK brauchen)
				(MF wir es)[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SU', 'DM', 'SIMPX', 'SIMPX', 'SU', 'DM', 'VF', 'LK', 'MF', 'NX', 'NX', 'KON', 'PX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'PTKANT', 'VMFIN', 'PPER', 'ADV', 'VVINF', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'APPR', 'PPOSAT', 'NN', 'CARD', 'NN', 'NE', 'APPRART', 'NN', 'CARD', 'NN', 'APPRART', 'NN', 'ITJ', 'PTKANT', 'NN', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'NN', 'NN', 'NN', 'PIS', 'ADJD', 'KON', 'ADV', 'APPRART', 'NN', 'ADV', 'ART', 'NN', 'APPR', 'TRUNC', 'KON', 'NN', 'VVFIN', 'PPER', 'PPER'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 56), 'span': (53, 56), 'left siblings': ['SU', 'DM', 'SIMPX', 'SIMPX', 'SU', 'DM', 'VF', 'LK', 'MF', 'NX', 'NX', 'KON', 'PX'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU hotels)
		(DM ja)
		(SIMPX mussen wir mal kucken)
		(SIMPX ich habe hier eine liste von meiner sekretarin drei moglichkeiten maritimhotel am hauptbahnhof)
		(SU funfzehn minuten zum zentrum)
		(DM na ja)
		(VF garage)
		(LK brauchen)
		(MF wir ja nicht ein hotel luisenhof funf minuten vom bahnhof)
		(NX bar restaurant garage)
		(NX alles uberflussig)
		(KON und)
		(PX direkt beim hauptbahnhof noch ein hotel mit schwimm und dampfbad)
		[01;31m(SIMPX[00m
			(LK brauchen)
			(MF wir es)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['SU', 'DM', 'SIMPX', 'SIMPX', 'SU', 'DM', 'VF', 'LK', 'MF', 'NX', 'NX', 'KON', 'PX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'PTKANT', 'VMFIN', 'PPER', 'ADV', 'VVINF', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'APPR', 'PPOSAT', 'NN', 'CARD', 'NN', 'NE', 'APPRART', 'NN', 'CARD', 'NN', 'APPRART', 'NN', 'ITJ', 'PTKANT', 'NN', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'NN', 'NN', 'NN', 'PIS', 'ADJD', 'KON', 'ADV', 'APPRART', 'NN', 'ADV', 'ART', 'NN', 'APPR', 'TRUNC', 'KON', 'NN', 'VVFIN', 'PPER', 'PPER'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 56), 'span': (53, 56), 'left siblings': ['SU', 'DM', 'SIMPX', 'SIMPX', 'SU', 'DM', 'VF', 'LK', 'MF', 'NX', 'NX', 'KON', 'PX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP hotels ja mussen wir mal kucken ich habe hier eine liste von meiner sekretarin drei moglichkeiten maritimhotel am hauptbahnhof funfzehn minuten zum zentrum na ja garage brauchen wir ja nicht ein hotel luisenhof funf minuten vom bahnhof bar restaurant garage alles uberflussig und direkt beim hauptbahnhof noch ein hotel mit schwimm und dampfbad brauchen wir es)

Sentence 450:
8 Initial errors
0 on fringe, 4 iterations
4 Error:NP Attachment
2 Error:NP Attachment
1 Error:PP Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SU[00m
	(TOP
		(TURN
			[01;31m(SU[00m
				(SIMPX
					(LK ist)
					(MF ein bischen teurer))[01;31m)[00m
			[01;31m(SU[00m [01;33m(NX[00m
				(NX
					(NX einzelzimmer zwohundert achtundvierzig mark)
					(KON und)
					[01;33m(NX[00m (NX doppelzimmer)
					[01;31m(PX[00m [01;33m(PX[00m
						(APPRART im)
						[01;31m(NX[00m
							(NX doppelzimmer) [01;33mPX) NX) NX)[00m
							(NX hundert dreiundvierzig)[01;31m)[00m[01;31m)[00m)[01;31m)[00m))[01;36m)[00m
Step:NP Attachment
{'new_parent': 'SU', 'new_family': ['NX', 'NX'], 'mover info': [('NX', (12, 14))], 'old_family': ['NX', 'NX'], 'start left siblings': ['NX'], 'auto preterminals': ('NN', 'CARD', 'CARD', 'NN', 'KON', 'NN', 'APPRART', 'NN', 'CARD', 'CARD'), 'start right siblings': [], 'end left siblings': ['NX'], 'auto preterminal span': (4, 14), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'NX'}
[01;36m(SU[00m
	(TOP
		(TURN
			[01;31m(SU[00m
				(SIMPX
					(LK ist)
					(MF ein bischen teurer))[01;31m)[00m
			(NX
				[01;31m(SU[00m
					(NX
						(NX einzelzimmer zwohundert achtundvierzig mark)
						(KON und)
						[01;36m(NX[00m
							(NX doppelzimmer)
							(PX im doppelzimmer)[01;36m)[00m)
					(NX hundert dreiundvierzig)[01;31m)[00m)))[01;36m)[00m
Step:NP Attachment
{'new_parent': 'SU', 'new_family': ['SIMPX', 'NX'], 'mover info': [('NX', (4, 14))], 'old_family': ['SU', 'NX'], 'start left siblings': ['SU'], 'auto preterminals': ('VAFIN', 'ART', 'PIS', 'ADJD', 'NN', 'CARD', 'CARD', 'NN', 'KON', 'NN', 'APPRART', 'NN', 'CARD', 'CARD'), 'start right siblings': [], 'end left siblings': ['SIMPX'], 'auto preterminal span': (0, 14), 'movers': ['NX'], 'old_parent': 'TURN', 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU
			(SIMPX ist ein bischen teurer)
			(NX
				[01;31m(SU[00m
					(NX
						(NX einzelzimmer zwohundert achtundvierzig mark)
						(KON und)
						[01;36m(NX[00m
							(NX doppelzimmer)
							(PX im doppelzimmer)[01;36m)[00m)
					(NX hundert dreiundvierzig)[01;31m)[00m))))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['NX', 'KON', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'APPRART', 'NN'), 'right siblings': [], 'left siblings': [(NX (NX (NN einzelzimmer)) (NX (ADJX (CARD zwohundert) (CARD achtundvierzig)) (NN mark))), (KON und)], 'auto preterminal span': (9, 12), 'span': (9, 12), 'parent': 'NX', 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU
			(SIMPX ist ein bischen teurer)
			(NX
				[01;31m(SU[00m
					(NX einzelzimmer zwohundert achtundvierzig mark und doppelzimmer im doppelzimmer)
					(NX hundert dreiundvierzig)[01;31m)[00m))))
Step:Unary
{'subtrees': ['NX', 'NX'], 'family': ['SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'CARD', 'CARD', 'NN', 'KON', 'NN', 'APPRART', 'NN', 'CARD', 'CARD'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (4, 14), 'span': (4, 14), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ist ein bischen teurer einzelzimmer zwohundert achtundvierzig mark und doppelzimmer im doppelzimmer hundert dreiundvierzig)

Sentence 451:
18 Initial errors
0 on fringe, 16 iterations
3 Error:UNSET move
1 Error:Single Word Phrase
1 Error:Modifier Attachment
1 Error:Unary
1 Error:Modifier Attachment
1 Error:Clause Attachment
1 Error:Unary
1 Error:Modifier Attachment
1 Error:Modifier Attachment
1 Error:Co-ordination
1 Error:Modifier Attachment
1 Error:Single Word Phrase
1 Error:Single Word Phrase
1 Error:UNSET remove
1 Error:Modifier Attachment
1 Error:UNSET add
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP [01;33m(SU (NX[00m
	(TURN
		[01;31m(SU[00m
			(ADVX
				(ADVX prinzipiell)
				[01;36m(ADVX[00m
					(ADV immer)[01;36m)[00m)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;31m(PARORD[00m
					(ADVX
						(ADV nur))[01;31m)[00m [01;33mNX) SU)[00m
				(VF wahrscheinlich)
				(LK wird)
				(MF es am dienstag etwas spater)
				(DM ja)
				[01;36m(ADJX[00m
					(PX am dienstag)
					(ADJX etwas spater)[01;36m)[00m
				[01;31m(NF[00m
					(SIMPX
						(C bis)
						[01;31m(FKOORD[00m [01;33m(MF[00m
							[01;31m(MVC[00m
								[01;31m(MF[00m
									(NX wir)
									[01;33m(NX (ADVX[00m (ADVX uberhaupt)[01;31m)[00m
								[01;31m(VC[00m
									[01;31m(VXFIN[00m
										(VVFIN loskommen)[01;31m)[00m[01;31m)[00m[01;31m)[00m [01;33mADVX)[00m
							(KON und)
							[01;31m(MVC[00m
								(MF was) [01;33mNX) MF)[00m
								(VC unternehmen konnen)[01;31m)[00m[01;31m)[00m)[01;31m)[00m[01;31m)[00m
			(DM also)
			(SIMPX fur viele veranstaltungen wird es eher zu spat werden)[01;31m)[00m))
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['ADVX', 'PARORD'], 'mover info': [('PARORD', (2, 3))], 'old_family': ['PARORD', 'VF', 'LK', 'MF', 'DM', 'PX', 'ADJX', 'NF'], 'start left siblings': [], 'auto preterminals': ('ADV', 'ADV', 'ADV', 'ADV', 'VAFIN', 'PPER', 'APPRART', 'NN', 'ADV', 'ADJD', 'PTKANT', 'APPRART', 'NN', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'VVFIN', 'KON', 'PIS', 'VVINF', 'VMFIN', 'ADV', 'APPR', 'PIDAT', 'NN', 'VAFIN', 'PPER', 'ADV', 'PTKA', 'ADJD', 'VAINF'), 'start right siblings': ['VF', 'LK', 'MF', 'DM', 'PX', 'ADJX', 'NF'], 'end left siblings': ['ADVX'], 'auto preterminal span': (0, 33), 'adding node already present': False, 'movers': ['PARORD'], 'old_parent': 'SIMPX', 'POS confusion': ('ADV', 'ADV'), 'added and moved': True, 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'ADJX'}
(TOP
	(TURN
		(NX
			(SU
				(ADVX
					(ADVX prinzipiell)
					[01;36m(ADVX[00m
						(ADV immer)[01;36m)[00m)
				[01;31m(PARORD[00m
					(ADVX
						(ADV nur))[01;31m)[00m))
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF wahrscheinlich)
				(LK wird)
				(MF es am dienstag etwas spater)
				(DM ja)
				[01;36m(ADJX[00m
					(PX am dienstag)
					(ADJX etwas spater)[01;36m)[00m
				[01;31m(NF[00m
					(SIMPX
						(C bis)
						[01;31m(FKOORD[00m [01;33m(MF[00m
							[01;31m(MVC[00m
								[01;31m(MF[00m
									(NX wir)
									[01;33m(NX (ADVX[00m (ADVX uberhaupt)[01;31m)[00m
								[01;31m(VC[00m
									[01;31m(VXFIN[00m
										(VVFIN loskommen)[01;31m)[00m[01;31m)[00m[01;31m)[00m [01;33mADVX)[00m
							(KON und)
							[01;31m(MVC[00m
								(MF was) [01;33mNX) MF)[00m
								(VC unternehmen konnen)[01;31m)[00m[01;31m)[00m)[01;31m)[00m[01;31m)[00m
			(DM also)
			(SIMPX fur viele veranstaltungen wird es eher zu spat werden)[01;31m)[00m))
Step:Single Word Phrase
{'subtrees': ['ADV'], 'family': ['ADVX', 'ADVX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADV',), 'right siblings': [], 'left siblings': [(ADVX (ADV prinzipiell))], 'auto preterminal span': (1, 2), 'span': (1, 2), 'parent': 'ADVX', 'label': 'ADVX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(NX
			(SU
				(ADVX prinzipiell immer)
				[01;31m(PARORD[00m
					(ADVX
						(ADV nur))[01;31m)[00m))
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF wahrscheinlich)
				(LK wird)
				(MF es am dienstag etwas spater)
				(DM ja)
				[01;36m(ADJX[00m
					(PX am dienstag)
					(ADJX etwas spater)[01;36m)[00m
				[01;31m(NF[00m
					(SIMPX
						(C bis)
						[01;31m(FKOORD[00m [01;33m(MF[00m
							[01;31m(MVC[00m
								[01;31m(MF[00m
									(NX wir)
									[01;33m(NX (ADVX[00m (ADVX uberhaupt)[01;31m)[00m
								[01;31m(VC[00m
									[01;31m(VXFIN[00m
										(VVFIN loskommen)[01;31m)[00m[01;31m)[00m[01;31m)[00m [01;33mADVX)[00m
							(KON und)
							[01;31m(MVC[00m
								(MF was) [01;33mNX) MF)[00m
								(VC unternehmen konnen)[01;31m)[00m[01;31m)[00m)[01;31m)[00m[01;31m)[00m
			(DM also)
			(SIMPX fur viele veranstaltungen wird es eher zu spat werden)[01;31m)[00m))
Step:Modifier Attachment
{'subtrees': ['PX', 'ADJX'], 'family': ['VF', 'LK', 'MF', 'DM', 'ADJX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'NN', 'ADV', 'ADJD'), 'right siblings': [(NF (SIMPX (C (KOUS bis)) (FKOORD (MVC (MF (NX (PPER wir)) (ADVX (ADV uberhaupt))) (VC (VXFIN (VVFIN loskommen)))) (KON und) (MVC (MF (NX (PIS was))) (VC (VXINF (VVINF unternehmen)) (VXFIN (VMFIN konnen)))))))], 'left siblings': [(VF (ADVX (ADV wahrscheinlich))), (LK (VXFIN (VAFIN wird))), (MF (NX (PPER es)) (PX (APPRART am) (NX (NN dienstag))) (ADJX (ADVX (ADV etwas)) (ADJD spater))), (DM (PTKANT ja))], 'auto preterminal span': (11, 15), 'span': (11, 15), 'parent': 'SIMPX', 'label': 'ADJX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		(NX
			(SU
				(ADVX prinzipiell immer)
				[01;31m(PARORD[00m
					(ADVX
						(ADV nur))[01;31m)[00m))
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF wahrscheinlich)
				(LK wird)
				(MF es am dienstag etwas spater)
				(DM ja)
				(ADJX am dienstag etwas spater)
				[01;31m(NF[00m
					(SIMPX
						(C bis)
						[01;31m(FKOORD[00m [01;33m(MF[00m
							[01;31m(MVC[00m
								[01;31m(MF[00m
									(NX wir)
									[01;33m(NX (ADVX[00m (ADVX uberhaupt)[01;31m)[00m
								[01;31m(VC[00m
									[01;31m(VXFIN[00m
										(VVFIN loskommen)[01;31m)[00m[01;31m)[00m[01;31m)[00m [01;33mADVX)[00m
							(KON und)
							[01;31m(MVC[00m
								(MF was) [01;33mNX) MF)[00m
								(VC unternehmen konnen)[01;31m)[00m[01;31m)[00m)[01;31m)[00m[01;31m)[00m
			(DM also)
			(SIMPX fur viele veranstaltungen wird es eher zu spat werden)[01;31m)[00m))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['ADVX', 'PARORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'ADV'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (0, 3), 'span': (2, 3), 'left siblings': ['ADVX'], 'label': 'PARORD', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(NX prinzipiell immer nur)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF wahrscheinlich)
				(LK wird)
				(MF es am dienstag etwas spater)
				(DM ja)
				(ADJX am dienstag etwas spater)
				[01;31m(NF[00m
					(SIMPX
						(C bis)
						[01;31m(FKOORD[00m [01;33m(MF[00m
							[01;31m(MVC[00m
								[01;31m(MF[00m
									(NX wir)
									[01;33m(NX (ADVX[00m (ADVX uberhaupt)[01;31m)[00m
								[01;31m(VC[00m
									[01;31m(VXFIN[00m
										(VVFIN loskommen)[01;31m)[00m[01;31m)[00m[01;31m)[00m [01;33mADVX)[00m
							(KON und)
							[01;31m(MVC[00m
								(MF was) [01;33mNX) MF)[00m
								(VC unternehmen konnen)[01;31m)[00m[01;31m)[00m)[01;31m)[00m[01;31m)[00m
			(DM also)
			(SIMPX fur viele veranstaltungen wird es eher zu spat werden)[01;31m)[00m))
Step:Modifier Attachment
{'subtrees': ['VF', 'LK', 'MF', 'DM', 'ADJX', 'NF'], 'family': ['SIMPX', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'APPRART', 'NN', 'ADV', 'ADJD', 'PTKANT', 'APPRART', 'NN', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'VVFIN', 'KON', 'PIS', 'VVINF', 'VMFIN', 'ADV', 'APPR', 'PIDAT', 'NN', 'VAFIN', 'PPER', 'ADV', 'PTKA', 'ADJD', 'VAINF'), 'right siblings': ['DM', 'SIMPX'], 'parent': 'SU', 'auto preterminal span': (3, 33), 'span': (3, 23), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(NX prinzipiell immer nur)
		[01;31m(SU[00m
			(VF wahrscheinlich)
			(LK wird)
			(MF es am dienstag etwas spater)
			(DM ja)
			(ADJX am dienstag etwas spater)
			[01;31m(NF[00m
				(SIMPX
					(C bis)
					[01;31m(FKOORD[00m [01;33m(MF[00m
						[01;31m(MVC[00m
							[01;31m(MF[00m
								(NX wir)
								[01;33m(NX (ADVX[00m (ADVX uberhaupt)[01;31m)[00m
							[01;31m(VC[00m
								[01;31m(VXFIN[00m
									(VVFIN loskommen)[01;31m)[00m[01;31m)[00m[01;31m)[00m [01;33mADVX)[00m
						(KON und)
						[01;31m(MVC[00m
							(MF was) [01;33mNX) MF)[00m
							(VC unternehmen konnen)[01;31m)[00m[01;31m)[00m)[01;31m)[00m
			(DM also)
			(SIMPX fur viele veranstaltungen wird es eher zu spat werden)[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['VF', 'LK', 'MF', 'DM', 'ADJX', 'NF', 'DM', 'SIMPX'], 'family': ['NX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'ADV', 'ADV', 'VAFIN', 'PPER', 'APPRART', 'NN', 'ADV', 'ADJD', 'PTKANT', 'APPRART', 'NN', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'VVFIN', 'KON', 'PIS', 'VVINF', 'VMFIN', 'ADV', 'APPR', 'PIDAT', 'NN', 'VAFIN', 'PPER', 'ADV', 'PTKA', 'ADJD', 'VAINF'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 33), 'span': (3, 33), 'left siblings': ['NX'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(NX prinzipiell immer nur)
		(VF wahrscheinlich)
		(LK wird)
		(MF es am dienstag etwas spater)
		(DM ja)
		(ADJX am dienstag etwas spater)
		[01;31m(NF[00m
			(SIMPX
				(C bis)
				[01;31m(FKOORD[00m [01;33m(MF[00m
					[01;31m(MVC[00m
						[01;31m(MF[00m
							(NX wir)
							[01;33m(NX (ADVX[00m (ADVX uberhaupt)[01;31m)[00m
						[01;31m(VC[00m
							[01;31m(VXFIN[00m
								(VVFIN loskommen)[01;31m)[00m[01;31m)[00m[01;31m)[00m [01;33mADVX)[00m
					(KON und)
					[01;31m(MVC[00m
						(MF was) [01;33mNX) MF)[00m
						(VC unternehmen konnen)[01;31m)[00m[01;31m)[00m)[01;31m)[00m
		(DM also)
		(SIMPX fur viele veranstaltungen wird es eher zu spat werden)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['NX', 'VF', 'LK', 'MF', 'DM', 'ADJX', 'NF', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'ADV', 'ADV', 'VAFIN', 'PPER', 'APPRART', 'NN', 'ADV', 'ADJD', 'PTKANT', 'APPRART', 'NN', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'VVFIN', 'KON', 'PIS', 'VVINF', 'VMFIN', 'ADV', 'APPR', 'PIDAT', 'NN', 'VAFIN', 'PPER', 'ADV', 'PTKA', 'ADJD', 'VAINF'), 'right siblings': ['DM', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 33), 'span': (15, 23), 'left siblings': ['NX', 'VF', 'LK', 'MF', 'DM', 'ADJX'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(NX prinzipiell immer nur)
		(VF wahrscheinlich)
		(LK wird)
		(MF es am dienstag etwas spater)
		(DM ja)
		(ADJX am dienstag etwas spater)
		(SIMPX
			(C bis)
			[01;31m(FKOORD[00m [01;33m(MF[00m
				[01;31m(MVC[00m
					[01;31m(MF[00m
						(NX wir)
						[01;33m(NX (ADVX[00m (ADVX uberhaupt)[01;31m)[00m
					[01;31m(VC[00m
						[01;31m(VXFIN[00m
							(VVFIN loskommen)[01;31m)[00m[01;31m)[00m[01;31m)[00m [01;33mADVX)[00m
				(KON und)
				[01;31m(MVC[00m
					(MF was) [01;33mNX) MF)[00m
					(VC unternehmen konnen)[01;31m)[00m[01;31m)[00m)
		(DM also)
		(SIMPX fur viele veranstaltungen wird es eher zu spat werden)))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADVX'], 'family': ['MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV', 'VVFIN'), 'right siblings': ['VC'], 'parent': 'MVC', 'auto preterminal span': (16, 19), 'span': (16, 18), 'left siblings': [], 'label': 'MF', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(NX prinzipiell immer nur)
		(VF wahrscheinlich)
		(LK wird)
		(MF es am dienstag etwas spater)
		(DM ja)
		(ADJX am dienstag etwas spater)
		(SIMPX
			(C bis)
			[01;31m(FKOORD[00m [01;33m(MF[00m
				[01;31m(MVC[00m
					(NX wir)
					[01;36m(ADVX[00m
						[01;33m(NX[00m (ADVX uberhaupt)
						[01;31m(VC[00m
							[01;31m(VXFIN[00m
								(VVFIN loskommen)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m
				(KON und)
				[01;31m(MVC[00m
					(MF was) [01;33mNX) MF)[00m
					(VC unternehmen konnen)[01;31m)[00m[01;31m)[00m)
		(DM also)
		(SIMPX fur viele veranstaltungen wird es eher zu spat werden)))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'VC'], 'family': ['NX', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN'), 'right siblings': [], 'left siblings': [(NX (PPER wir))], 'auto preterminal span': (17, 19), 'span': (17, 19), 'parent': 'MVC', 'label': 'ADVX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		(NX prinzipiell immer nur)
		(VF wahrscheinlich)
		(LK wird)
		(MF es am dienstag etwas spater)
		(DM ja)
		(ADJX am dienstag etwas spater)
		(SIMPX
			(C bis)
			[01;31m(FKOORD[00m [01;33m(MF[00m
				[01;31m(MVC[00m
					(NX wir)
					(ADVX [01;33m(NX[00m
						(ADVX uberhaupt)
						[01;31m(VC[00m
							[01;31m(VXFIN[00m
								(VVFIN loskommen)[01;31m)[00m[01;31m)[00m)[01;31m)[00m
				(KON und)
				[01;31m(MVC[00m
					(MF was) [01;33mNX) MF)[00m
					(VC unternehmen konnen)[01;31m)[00m[01;31m)[00m)
		(DM also)
		(SIMPX fur viele veranstaltungen wird es eher zu spat werden)))
Step:Co-ordination
{'subtrees': ['NX', 'ADVX'], 'family': ['MVC', 'KON', 'MVC'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV', 'VVFIN', 'KON', 'PIS', 'VVINF', 'VMFIN'), 'right siblings': ['KON', 'MVC'], 'parent': 'FKOORD', 'auto preterminal span': (16, 23), 'span': (16, 19), 'left siblings': [], 'label': 'MVC', 'classified_type': 'Co-ordination', 'type': 'remove'}
(TOP
	(TURN
		(NX prinzipiell immer nur)
		(VF wahrscheinlich)
		(LK wird)
		(MF es am dienstag etwas spater)
		(DM ja)
		(ADJX am dienstag etwas spater)
		(SIMPX
			(C bis)
			[01;31m(FKOORD[00m [01;33m(MF[00m
				(NX wir)
				(ADVX [01;33m(NX[00m
					(ADVX uberhaupt)
					[01;31m(VC[00m
						[01;31m(VXFIN[00m
							(VVFIN loskommen)[01;31m)[00m[01;31m)[00m)
				(KON und)
				[01;31m(MVC[00m
					(MF was) [01;33mNX) MF)[00m
					(VC unternehmen konnen)[01;31m)[00m[01;31m)[00m)
		(DM also)
		(SIMPX fur viele veranstaltungen wird es eher zu spat werden)))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADVX', 'KON', 'MVC'], 'family': ['C', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'VVFIN', 'KON', 'PIS', 'VVINF', 'VMFIN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (15, 23), 'span': (16, 23), 'left siblings': ['C'], 'label': 'FKOORD', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(NX prinzipiell immer nur)
		(VF wahrscheinlich)
		(LK wird)
		(MF es am dienstag etwas spater)
		(DM ja)
		(ADJX am dienstag etwas spater)
		(SIMPX
			(C bis)
			[01;33m(MF[00m (NX wir)
			(ADVX [01;33m(NX[00m
				(ADVX uberhaupt)
				[01;31m(VC[00m
					[01;31m(VXFIN[00m
						(VVFIN loskommen)[01;31m)[00m[01;31m)[00m)
			(KON und)
			[01;31m(MVC[00m
				(MF was) [01;33mNX) MF)[00m
				(VC unternehmen konnen)[01;31m)[00m)
		(DM also)
		(SIMPX fur viele veranstaltungen wird es eher zu spat werden)))
Step:Single Word Phrase
{'subtrees': ['VVFIN'], 'family': ['VXFIN'], 'over_word': True, 'over words': True, 'auto preterminals': ('VVFIN',), 'right siblings': [], 'parent': 'VC', 'auto preterminal span': (18, 19), 'span': (18, 19), 'left siblings': [], 'label': 'VXFIN', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(NX prinzipiell immer nur)
		(VF wahrscheinlich)
		(LK wird)
		(MF es am dienstag etwas spater)
		(DM ja)
		(ADJX am dienstag etwas spater)
		(SIMPX
			(C bis)
			[01;33m(MF[00m (NX wir)
			(ADVX [01;33m(NX[00m
				(ADVX uberhaupt)
				[01;31m(VC[00m
					(VVFIN loskommen)[01;31m)[00m)
			(KON und)
			[01;31m(MVC[00m
				(MF was) [01;33mNX) MF)[00m
				(VC unternehmen konnen)[01;31m)[00m)
		(DM also)
		(SIMPX fur viele veranstaltungen wird es eher zu spat werden)))
Step:Single Word Phrase
{'subtrees': ['VVFIN'], 'family': ['ADVX', 'VC'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADV', 'VVFIN'), 'right siblings': [], 'parent': 'ADVX', 'auto preterminal span': (17, 19), 'span': (18, 19), 'left siblings': ['ADVX'], 'label': 'VC', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(NX prinzipiell immer nur)
		(VF wahrscheinlich)
		(LK wird)
		(MF es am dienstag etwas spater)
		(DM ja)
		(ADJX am dienstag etwas spater)
		(SIMPX
			(C bis)
			[01;33m(MF[00m (NX wir)
			[01;33m(NX[00m (ADVX uberhaupt loskommen)
			(KON und)
			[01;31m(MVC[00m
				(MF was) [01;33mNX) MF)[00m
				(VC unternehmen konnen)[01;31m)[00m)
		(DM also)
		(SIMPX fur viele veranstaltungen wird es eher zu spat werden)))
Step:UNSET remove
{'subtrees': ['MF', 'VC'], 'family': ['C', 'NX', 'ADVX', 'KON', 'MVC'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'VVFIN', 'KON', 'PIS', 'VVINF', 'VMFIN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (15, 23), 'span': (20, 23), 'left siblings': ['C', 'NX', 'ADVX', 'KON'], 'label': 'MVC', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(NX prinzipiell immer nur)
		(VF wahrscheinlich)
		(LK wird)
		(MF es am dienstag etwas spater)
		(DM ja)
		(ADJX am dienstag etwas spater)
		(SIMPX
			(C bis)
			[01;36m(MF[00m
				(NX wir)
				[01;36m(NX[00m
					(ADVX uberhaupt loskommen)
					(KON und)
					(MF was)[01;36m)[00m[01;36m)[00m
			(VC unternehmen konnen))
		(DM also)
		(SIMPX fur viele veranstaltungen wird es eher zu spat werden)))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADVX', 'KON', 'MF'], 'family': ['C', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV', 'VVFIN', 'KON', 'PIS'), 'right siblings': [(VC (VXINF (VVINF unternehmen)) (VXFIN (VMFIN konnen)))], 'left siblings': [(C (KOUS bis))], 'auto preterminal span': (16, 21), 'span': (16, 21), 'parent': 'SIMPX', 'label': 'MF', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		(NX prinzipiell immer nur)
		(VF wahrscheinlich)
		(LK wird)
		(MF es am dienstag etwas spater)
		(DM ja)
		(ADJX am dienstag etwas spater)
		(SIMPX
			(C bis)
			(MF
				(NX wir)
				[01;36m(NX[00m
					(ADVX uberhaupt loskommen)
					(KON und)
					(MF was)[01;36m)[00m)
			(VC unternehmen konnen))
		(DM also)
		(SIMPX fur viele veranstaltungen wird es eher zu spat werden)))
Step:UNSET add
{'subtrees': ['ADVX', 'KON', 'MF'], 'family': ['NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN', 'KON', 'PIS'), 'right siblings': [], 'left siblings': [(NX (PPER wir))], 'auto preterminal span': (17, 21), 'span': (17, 21), 'parent': 'MF', 'label': 'NX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP prinzipiell immer nur wahrscheinlich wird es am dienstag etwas spater ja am dienstag etwas spater bis wir uberhaupt loskommen und was unternehmen konnen also fur viele veranstaltungen wird es eher zu spat werden)

Sentence 452:
4 Initial errors
0 on fringe, 2 iterations
3 Error:UNSET move
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP [01;33m(SU (SIMPX[00m
	(TURN
		(SU freut mich)
		[01;31m(SU[00m
			(DM bis dann) [01;33mSIMPX) SU)[00m
			[01;36m(SU[00m
				(DM
					(ITJ tschus))[01;36m)[00m[01;31m)[00m))
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['SU', 'DM', 'SU'], 'mover info': [('DM', (2, 4))], 'old_family': ['DM', 'DM'], 'start left siblings': [], 'auto preterminals': ('VVFIN', 'PPER', 'APPR', 'ADV', 'ITJ'), 'start right siblings': ['DM'], 'end left siblings': ['SU'], 'auto preterminal span': (0, 5), 'adding node already present': False, 'movers': ['DM'], 'old_parent': 'SU', 'added and moved': True, 'end right siblings': ['SU'], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'SIMPX'}
(TOP
	(TURN
		[01;36m(SIMPX[00m
			(SU
				(SU freut mich)
				(DM bis dann))[01;36m)[00m
		(SU tschus)))
Step:Unary
{'subtrees': ['SU'], 'family': ['SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'APPR', 'ADV'), 'right siblings': [(SU (DM (ITJ tschus)))], 'left siblings': [], 'auto preterminal span': (0, 4), 'span': (0, 4), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'add'}
(TOP freut mich bis dann tschus)

Sentence 453:
18 Initial errors
0 on fringe, 13 iterations
3 Error:UNSET move
2 Error:Single Word Phrase
2 Error:Modifier Attachment
2 Error:Modifier Attachment
1 Error:Unary
1 Error:Clause Attachment
1 Error:PP Attachment
1 Error:UNSET remove
1 Error:PP Attachment
1 Error:PP Attachment
1 Error:UNSET remove
1 Error:Unary
1 Error:Clause Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU also ich wurde mal sagen im april ist es ein bischen schlecht)
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK habe)
				(MF
					(PX
						[01;31m(PX[00m
							(APPR in)
							[01;33m(NX[00m (NX der mitte)[01;31m)[00m
						(PX vom april)) [01;33mNX)[00m
					(NX urlaub)))
			[01;31m(PX[00m
				[01;36m(DM[00m
					(ADVX
						(ADV also))[01;36m)[00m
				(PX uber ostern)[01;31m)[00m
			[01;31m(SIMPX[00m
				(VF wir)
				(LK fahren)
				[01;36m(MF[00m
					[01;31m(MF[00m
						(PX
							(APPR uber)
							(NX ostern))[01;31m)[00m
					[01;36m(ADVX[00m [01;31m(VC[00m
						(PTKVZ weg)[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK wurde)
				(MF
					(ADJX am liebsten)
					[01;36m(PX[00m
						(ADVX direkt)
						[01;31m(PX[00m
							(APPR in)
							(NX den mai)[01;31m)[00m[01;36m)[00m)
				(VC gehen))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX und da ware bei mir die erste maiwoche)
			(DM also)
			[01;36m(SIMPX[00m
				[01;36m(SIMPX[00m
					[01;31m(SIMPX[00m
						(VF dienstag funfter mai)
						(LK konnte)
						[01;33m(MF[00m (MF ich)[01;31m)[00m
					(DM also) [01;33mMF)[00m[01;36m)[00m
				(SIMPX funfter sechster mai hatte ich zeit)[01;36m)[00m[01;31m)[00m))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'DM'], 'mover info': [('DM', (51, 52))], 'old_family': ['SIMPX', 'DM', 'SIMPX', 'DM', 'SIMPX'], 'start left siblings': ['SIMPX', 'DM', 'SIMPX'], 'auto preterminals': ('KON', 'ADV', 'VAFIN', 'APPR', 'PPER', 'ART', 'ADJA', 'NN', 'ADV', 'NN', 'ADJA', 'NN', 'VMFIN', 'PPER', 'ADV', 'ADJA', 'ADJA', 'NN', 'VAFIN', 'PPER', 'NN'), 'start right siblings': ['SIMPX'], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (37, 58), 'adding node already present': False, 'movers': ['DM'], 'old_parent': 'SU', 'POS confusion': ('ADV', 'ADV'), 'added and moved': True, 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'MF'}
(TOP
	(TURN
		(SU also ich wurde mal sagen im april ist es ein bischen schlecht)
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK habe)
				(MF
					(PX
						[01;31m(PX[00m
							(APPR in)
							[01;33m(NX[00m (NX der mitte)[01;31m)[00m
						(PX vom april)) [01;33mNX)[00m
					(NX urlaub)))
			[01;31m(PX[00m
				[01;36m(DM[00m
					(ADVX
						(ADV also))[01;36m)[00m
				(PX uber ostern)[01;31m)[00m
			[01;31m(SIMPX[00m
				(VF wir)
				(LK fahren)
				[01;36m(MF[00m
					[01;31m(MF[00m
						(PX
							(APPR uber)
							(NX ostern))[01;31m)[00m
					[01;36m(ADVX[00m [01;31m(VC[00m
						(PTKVZ weg)[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK wurde)
				(MF
					(ADJX am liebsten)
					[01;36m(PX[00m
						(ADVX direkt)
						[01;31m(PX[00m
							(APPR in)
							(NX den mai)[01;31m)[00m[01;36m)[00m)
				(VC gehen))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX und da ware bei mir die erste maiwoche)
			(DM also)
			[01;36m(SIMPX[00m
				(SIMPX dienstag funfter mai konnte ich also)
				(SIMPX funfter sechster mai hatte ich zeit)[01;36m)[00m[01;31m)[00m))
Step:Single Word Phrase
{'family': ['VF', 'LK', 'MF', 'ADVX'], 'auto preterminal span': (27, 28), 'span': (27, 28), 'subtrees': ['PTKVZ'], 'parent': 'SIMPX', 'over_word': True, 'auto preterminals': ('PTKVZ',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VC', 'ADVX')}
(TOP
	(TURN
		(SU also ich wurde mal sagen im april ist es ein bischen schlecht)
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK habe)
				(MF
					(PX
						[01;31m(PX[00m
							(APPR in)
							[01;33m(NX[00m (NX der mitte)[01;31m)[00m
						(PX vom april)) [01;33mNX)[00m
					(NX urlaub)))
			[01;31m(PX[00m
				[01;36m(DM[00m
					(ADVX
						(ADV also))[01;36m)[00m
				(PX uber ostern)[01;31m)[00m
			[01;31m(SIMPX[00m
				(VF wir)
				(LK fahren)
				[01;36m(MF[00m
					[01;31m(MF[00m
						(PX
							(APPR uber)
							(NX ostern))[01;31m)[00m
					(ADVX weg)[01;36m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK wurde)
				(MF
					(ADJX am liebsten)
					[01;36m(PX[00m
						(ADVX direkt)
						[01;31m(PX[00m
							(APPR in)
							(NX den mai)[01;31m)[00m[01;36m)[00m)
				(VC gehen))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX und da ware bei mir die erste maiwoche)
			(DM also)
			[01;36m(SIMPX[00m
				(SIMPX dienstag funfter mai konnte ich also)
				(SIMPX funfter sechster mai hatte ich zeit)[01;36m)[00m[01;31m)[00m))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['PX', 'ADVX'], 'mover info': [('ADVX', (27, 28))], 'old_family': ['VF', 'LK', 'MF', 'ADVX'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('PPER', 'VVFIN', 'APPR', 'NE', 'PTKVZ'), 'start right siblings': [], 'end left siblings': ['PX'], 'auto preterminal span': (23, 28), 'movers': ['ADVX'], 'old_parent': 'SIMPX', 'POS confusion': ('PTKVZ', 'PTKVZ'), 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU also ich wurde mal sagen im april ist es ein bischen schlecht)
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK habe)
				(MF
					(PX
						[01;31m(PX[00m
							(APPR in)
							[01;33m(NX[00m (NX der mitte)[01;31m)[00m
						(PX vom april)) [01;33mNX)[00m
					(NX urlaub)))
			[01;31m(PX[00m
				[01;36m(DM[00m
					(ADVX
						(ADV also))[01;36m)[00m
				(PX uber ostern)[01;31m)[00m
			[01;31m(SIMPX[00m
				(VF wir)
				(LK fahren)
				(MF uber ostern weg)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK wurde)
				(MF
					(ADJX am liebsten)
					[01;36m(PX[00m
						(ADVX direkt)
						[01;31m(PX[00m
							(APPR in)
							(NX den mai)[01;31m)[00m[01;36m)[00m)
				(VC gehen))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX und da ware bei mir die erste maiwoche)
			(DM also)
			[01;36m(SIMPX[00m
				(SIMPX dienstag funfter mai konnte ich also)
				(SIMPX funfter sechster mai hatte ich zeit)[01;36m)[00m[01;31m)[00m))
Step:Modifier Attachment
{'new_parent': 'PX', 'new_family': ['ADVX', 'APPR', 'NX'], 'mover info': [('ADVX', (32, 33))], 'old_family': ['ADJX', 'ADVX', 'PX'], 'start left siblings': ['ADJX'], 'auto preterminals': ('PTKA', 'ADJD', 'ADV', 'APPR', 'ART', 'NN'), 'start right siblings': ['PX'], 'end left siblings': [], 'auto preterminal span': (30, 36), 'movers': ['ADVX'], 'old_parent': 'MF', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['APPR', 'NX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU also ich wurde mal sagen im april ist es ein bischen schlecht)
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK habe)
				(MF
					(PX
						[01;31m(PX[00m
							(APPR in)
							[01;33m(NX[00m (NX der mitte)[01;31m)[00m
						(PX vom april)) [01;33mNX)[00m
					(NX urlaub)))
			[01;31m(PX[00m
				[01;36m(DM[00m
					(ADVX
						(ADV also))[01;36m)[00m
				(PX uber ostern)[01;31m)[00m
			[01;31m(SIMPX[00m
				(VF wir)
				(LK fahren)
				(MF uber ostern weg)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK wurde)
				(MF am liebsten direkt in den mai)
				(VC gehen))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX und da ware bei mir die erste maiwoche)
			(DM also)
			[01;36m(SIMPX[00m
				(SIMPX dienstag funfter mai konnte ich also)
				(SIMPX funfter sechster mai hatte ich zeit)[01;36m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['DM', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV',), 'right siblings': [(PX (APPR uber) (NX (NE ostern)))], 'left siblings': [], 'auto preterminal span': (20, 21), 'span': (20, 21), 'parent': 'PX', 'label': 'DM', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU also ich wurde mal sagen im april ist es ein bischen schlecht)
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK habe)
				(MF
					(PX
						[01;31m(PX[00m
							(APPR in)
							[01;33m(NX[00m (NX der mitte)[01;31m)[00m
						(PX vom april)) [01;33mNX)[00m
					(NX urlaub)))
			[01;31m(PX[00m
				(DM also)
				(PX uber ostern)[01;31m)[00m
			[01;31m(SIMPX[00m
				(VF wir)
				(LK fahren)
				(MF uber ostern weg)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK wurde)
				(MF am liebsten direkt in den mai)
				(VC gehen))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX und da ware bei mir die erste maiwoche)
			(DM also)
			[01;36m(SIMPX[00m
				(SIMPX dienstag funfter mai konnte ich also)
				(SIMPX funfter sechster mai hatte ich zeit)[01;36m)[00m[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['SIMPX', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'ADJA', 'NN', 'VMFIN', 'PPER', 'ADV', 'ADJA', 'ADJA', 'NN', 'VAFIN', 'PPER', 'NN'), 'right siblings': [], 'left siblings': [(SIMPX (KOORD (KON und)) (VF (ADVX (ADV da))) (LK (VXFIN (VAFIN ware))) (MF (PX (APPR bei) (NX (PPER mir))) (NX (ART die) (ADJX (ADJA erste)) (NN maiwoche)))), (DM (ADVX (ADV also)))], 'auto preterminal span': (46, 58), 'span': (46, 58), 'parent': 'SU', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU also ich wurde mal sagen im april ist es ein bischen schlecht)
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK habe)
				(MF
					(PX
						[01;31m(PX[00m
							(APPR in)
							[01;33m(NX[00m (NX der mitte)[01;31m)[00m
						(PX vom april)) [01;33mNX)[00m
					(NX urlaub)))
			[01;31m(PX[00m
				(DM also)
				(PX uber ostern)[01;31m)[00m
			[01;31m(SIMPX[00m
				(VF wir)
				(LK fahren)
				(MF uber ostern weg)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK wurde)
				(MF am liebsten direkt in den mai)
				(VC gehen))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX und da ware bei mir die erste maiwoche)
			(DM also)
			(SIMPX dienstag funfter mai konnte ich also funfter sechster mai hatte ich zeit)[01;31m)[00m))
Step:PP Attachment
{'subtrees': ['SIMPX', 'PX', 'SIMPX'], 'family': ['SU', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPER', 'VAFIN', 'ADV', 'VVINF', 'APPRART', 'NN', 'VAFIN', 'PPER', 'ART', 'PIS', 'ADJD', 'PPER', 'VAFIN', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'NN', 'ADV', 'APPR', 'NE', 'PPER', 'VVFIN', 'APPR', 'NE', 'PTKVZ', 'PPER', 'VAFIN', 'PTKA', 'ADJD', 'ADV', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'ADV', 'VAFIN', 'APPR', 'PPER', 'ART', 'ADJA', 'NN', 'ADV', 'NN', 'ADJA', 'NN', 'VMFIN', 'PPER', 'ADV', 'ADJA', 'ADJA', 'NN', 'VAFIN', 'PPER', 'NN'), 'right siblings': ['SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 58), 'span': (12, 28), 'left siblings': ['SU'], 'label': 'SU', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU also ich wurde mal sagen im april ist es ein bischen schlecht)
		(SIMPX
			(VF ich)
			(LK habe)
			(MF
				(PX
					[01;31m(PX[00m
						(APPR in)
						[01;33m(NX[00m (NX der mitte)[01;31m)[00m
					(PX vom april)) [01;33mNX)[00m
				(NX urlaub)))
		[01;31m(PX[00m
			(DM also)
			(PX uber ostern)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF wir)
			(LK fahren)
			(MF uber ostern weg)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK wurde)
				(MF am liebsten direkt in den mai)
				(VC gehen))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX und da ware bei mir die erste maiwoche)
			(DM also)
			(SIMPX dienstag funfter mai konnte ich also funfter sechster mai hatte ich zeit)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['APPR', 'NX'], 'family': ['PX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NN', 'APPRART', 'NN'), 'right siblings': ['PX'], 'parent': 'PX', 'auto preterminal span': (14, 19), 'span': (14, 17), 'left siblings': [], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU also ich wurde mal sagen im april ist es ein bischen schlecht)
		(SIMPX
			(VF ich)
			(LK habe)
			(MF
				(PX
					(APPR in)
					[01;36m(NX[00m
						(NX der mitte)
						(PX vom april)[01;36m)[00m)
				(NX urlaub)))
		[01;31m(PX[00m
			(DM also)
			(PX uber ostern)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF wir)
			(LK fahren)
			(MF uber ostern weg)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK wurde)
				(MF am liebsten direkt in den mai)
				(VC gehen))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX und da ware bei mir die erste maiwoche)
			(DM also)
			(SIMPX dienstag funfter mai konnte ich also funfter sechster mai hatte ich zeit)[01;31m)[00m))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['APPR', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'APPRART', 'NN'), 'right siblings': [], 'left siblings': [(APPR in)], 'auto preterminal span': (15, 19), 'span': (15, 19), 'parent': 'PX', 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU also ich wurde mal sagen im april ist es ein bischen schlecht)
		(SIMPX ich habe in der mitte vom april urlaub)
		[01;31m(PX[00m
			(DM also)
			(PX uber ostern)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF wir)
			(LK fahren)
			(MF uber ostern weg)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK wurde)
				(MF am liebsten direkt in den mai)
				(VC gehen))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX und da ware bei mir die erste maiwoche)
			(DM also)
			(SIMPX dienstag funfter mai konnte ich also funfter sechster mai hatte ich zeit)[01;31m)[00m))
Step:PP Attachment
{'subtrees': ['DM', 'PX'], 'family': ['SU', 'SIMPX', 'PX', 'SIMPX', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPER', 'VAFIN', 'ADV', 'VVINF', 'APPRART', 'NN', 'VAFIN', 'PPER', 'ART', 'PIS', 'ADJD', 'PPER', 'VAFIN', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'NN', 'ADV', 'APPR', 'NE', 'PPER', 'VVFIN', 'APPR', 'NE', 'PTKVZ', 'PPER', 'VAFIN', 'PTKA', 'ADJD', 'ADV', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'ADV', 'VAFIN', 'APPR', 'PPER', 'ART', 'ADJA', 'NN', 'ADV', 'NN', 'ADJA', 'NN', 'VMFIN', 'PPER', 'ADV', 'ADJA', 'ADJA', 'NN', 'VAFIN', 'PPER', 'NN'), 'right siblings': ['SIMPX', 'SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 58), 'span': (20, 23), 'left siblings': ['SU', 'SIMPX'], 'label': 'PX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU also ich wurde mal sagen im april ist es ein bischen schlecht)
		(SIMPX ich habe in der mitte vom april urlaub)
		(DM also)
		(PX uber ostern)
		[01;31m(SIMPX[00m
			(VF wir)
			(LK fahren)
			(MF uber ostern weg)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK wurde)
				(MF am liebsten direkt in den mai)
				(VC gehen))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX und da ware bei mir die erste maiwoche)
			(DM also)
			(SIMPX dienstag funfter mai konnte ich also funfter sechster mai hatte ich zeit)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['SU', 'SIMPX', 'DM', 'PX', 'SIMPX', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPER', 'VAFIN', 'ADV', 'VVINF', 'APPRART', 'NN', 'VAFIN', 'PPER', 'ART', 'PIS', 'ADJD', 'PPER', 'VAFIN', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'NN', 'ADV', 'APPR', 'NE', 'PPER', 'VVFIN', 'APPR', 'NE', 'PTKVZ', 'PPER', 'VAFIN', 'PTKA', 'ADJD', 'ADV', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'ADV', 'VAFIN', 'APPR', 'PPER', 'ART', 'ADJA', 'NN', 'ADV', 'NN', 'ADJA', 'NN', 'VMFIN', 'PPER', 'ADV', 'ADJA', 'ADJA', 'NN', 'VAFIN', 'PPER', 'NN'), 'right siblings': ['SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 58), 'span': (23, 28), 'left siblings': ['SU', 'SIMPX', 'DM', 'PX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU also ich wurde mal sagen im april ist es ein bischen schlecht)
		(SIMPX ich habe in der mitte vom april urlaub)
		(DM also)
		(PX uber ostern)
		(VF wir)
		(LK fahren)
		(MF uber ostern weg)
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK wurde)
				(MF am liebsten direkt in den mai)
				(VC gehen))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX und da ware bei mir die erste maiwoche)
			(DM also)
			(SIMPX dienstag funfter mai konnte ich also funfter sechster mai hatte ich zeit)[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SU', 'SIMPX', 'DM', 'PX', 'VF', 'LK', 'MF', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPER', 'VAFIN', 'ADV', 'VVINF', 'APPRART', 'NN', 'VAFIN', 'PPER', 'ART', 'PIS', 'ADJD', 'PPER', 'VAFIN', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'NN', 'ADV', 'APPR', 'NE', 'PPER', 'VVFIN', 'APPR', 'NE', 'PTKVZ', 'PPER', 'VAFIN', 'PTKA', 'ADJD', 'ADV', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'ADV', 'VAFIN', 'APPR', 'PPER', 'ART', 'ADJA', 'NN', 'ADV', 'NN', 'ADJA', 'NN', 'VMFIN', 'PPER', 'ADV', 'ADJA', 'ADJA', 'NN', 'VAFIN', 'PPER', 'NN'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 58), 'span': (28, 37), 'left siblings': ['SU', 'SIMPX', 'DM', 'PX', 'VF', 'LK', 'MF'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU also ich wurde mal sagen im april ist es ein bischen schlecht)
		(SIMPX ich habe in der mitte vom april urlaub)
		(DM also)
		(PX uber ostern)
		(VF wir)
		(LK fahren)
		(MF uber ostern weg)
		(SIMPX ich wurde am liebsten direkt in den mai gehen)
		[01;31m(SU[00m
			(SIMPX und da ware bei mir die erste maiwoche)
			(DM also)
			(SIMPX dienstag funfter mai konnte ich also funfter sechster mai hatte ich zeit)[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'DM', 'SIMPX'], 'family': ['SU', 'SIMPX', 'DM', 'PX', 'VF', 'LK', 'MF', 'SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPER', 'VAFIN', 'ADV', 'VVINF', 'APPRART', 'NN', 'VAFIN', 'PPER', 'ART', 'PIS', 'ADJD', 'PPER', 'VAFIN', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'NN', 'ADV', 'APPR', 'NE', 'PPER', 'VVFIN', 'APPR', 'NE', 'PTKVZ', 'PPER', 'VAFIN', 'PTKA', 'ADJD', 'ADV', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'ADV', 'VAFIN', 'APPR', 'PPER', 'ART', 'ADJA', 'NN', 'ADV', 'NN', 'ADJA', 'NN', 'VMFIN', 'PPER', 'ADV', 'ADJA', 'ADJA', 'NN', 'VAFIN', 'PPER', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 58), 'span': (37, 58), 'left siblings': ['SU', 'SIMPX', 'DM', 'PX', 'VF', 'LK', 'MF', 'SIMPX'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP also ich wurde mal sagen im april ist es ein bischen schlecht ich habe in der mitte vom april urlaub also uber ostern wir fahren uber ostern weg ich wurde am liebsten direkt in den mai gehen und da ware bei mir die erste maiwoche also dienstag funfter mai konnte ich also funfter sechster mai hatte ich zeit)

Sentence 454:
5 Initial errors
0 on fringe, 3 iterations
2 Error:Clause Attachment
2 Error:NP Attachment
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;36m(SU[00m
				(DM okay)
				(SIMPX dann haben wir da keine chance)[01;36m)[00m
			[01;31m(SIMPX[00m
				(VF wie)
				(LK ware)
				(MF [01;33m(MF[00m
					(NX es)
					[01;31m(PX[00m
						(PX in der nachsten woche) [01;33mMF)[00m
						(NX montag dienstag)[01;31m)[00m)[01;31m)[00m[01;31m)[00m
		(SU das ist der elfte und zwolfte mai)))
Step:Clause Attachment
{'new_parent': 'TURN', 'new_family': ['SU', 'SIMPX', 'SU'], 'mover info': [('SIMPX', (7, 16))], 'old_family': ['DM', 'SIMPX', 'SIMPX'], 'start left siblings': ['DM', 'SIMPX'], 'auto preterminals': ('ITJ', 'ADV', 'VAFIN', 'PPER', 'ADV', 'PIAT', 'NN', 'PWAV', 'VAFIN', 'PPER', 'APPR', 'ART', 'ADJA', 'NN', 'NN', 'NN', 'PDS', 'VAFIN', 'ART', 'ADJA', 'KON', 'ADJA', 'NN'), 'start right siblings': [], 'end left siblings': ['SU'], 'auto preterminal span': (0, 23), 'movers': ['SIMPX'], 'old_parent': 'SU', 'end right siblings': ['SU'], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU okay dann haben wir da keine chance)
		[01;31m(SIMPX[00m
			(VF wie)
			(LK ware)
			(MF [01;33m(MF[00m
				(NX es)
				[01;31m(PX[00m
					(PX in der nachsten woche) [01;33mMF)[00m
					(NX montag dienstag)[01;31m)[00m)[01;31m)[00m
		(SU das ist der elfte und zwolfte mai)))
Step:NP Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'NX'], 'mover info': [('NX', (14, 16))], 'old_family': ['PX', 'NX'], 'start left siblings': ['PX'], 'auto preterminals': ('PWAV', 'VAFIN', 'PPER', 'APPR', 'ART', 'ADJA', 'NN', 'NN', 'NN'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (7, 16), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'PX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'MF'}
(TOP
	(TURN
		(SU okay dann haben wir da keine chance)
		[01;31m(SIMPX[00m
			(VF wie)
			(LK ware)
			(MF es in der nachsten woche montag dienstag)[01;31m)[00m
		(SU das ist der elfte und zwolfte mai)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['SU', 'SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'VAFIN', 'PPER', 'ADV', 'PIAT', 'NN', 'PWAV', 'VAFIN', 'PPER', 'APPR', 'ART', 'ADJA', 'NN', 'NN', 'NN', 'PDS', 'VAFIN', 'ART', 'ADJA', 'KON', 'ADJA', 'NN'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 23), 'span': (7, 16), 'left siblings': ['SU'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP okay dann haben wir da keine chance wie ware es in der nachsten woche montag dienstag das ist der elfte und zwolfte mai)

Sentence 455:
2 Initial errors
0 on fringe, 2 iterations
1 Error:Clause Attachment
1 Error:UNSET add
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM na gut)
			(SIMPX dann nehmen wir)
			[01;33m(SIMPX[00m (SIMPX dann nehmen wir montag dienstag elfter zwolfter mai)[01;31m)[00m
		(SU wie fahren wir hin))) [01;33mSIMPX)[00m
Step:Clause Attachment
{'subtrees': ['DM', 'SIMPX', 'SIMPX'], 'family': ['SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ITJ', 'ADV', 'VVFIN', 'PPER', 'ADV', 'VVFIN', 'PPER', 'NN', 'NN', 'ADJA', 'ADJA', 'NN', 'PWAV', 'VVFIN', 'PPER', 'PTKVZ'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 17), 'span': (0, 13), 'left siblings': [], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM na gut)
		(SIMPX dann nehmen wir)
		[01;36m(SIMPX[00m
			(SIMPX dann nehmen wir montag dienstag elfter zwolfter mai)
			(SU wie fahren wir hin)[01;36m)[00m))
Step:UNSET add
{'subtrees': ['SIMPX', 'SU'], 'family': ['DM', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'NN', 'NN', 'ADJA', 'ADJA', 'NN', 'PWAV', 'VVFIN', 'PPER', 'PTKVZ'), 'right siblings': [], 'left siblings': [(DM (ITJ na) (ITJ gut)), (SIMPX (VF (ADVX (ADV dann))) (LK (VXFIN (VVFIN nehmen))) (MF (NX (PPER wir))))], 'auto preterminal span': (5, 17), 'span': (5, 17), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP na gut dann nehmen wir dann nehmen wir montag dienstag elfter zwolfter mai wie fahren wir hin)

Sentence 456:
22 Initial errors
0 on fringe, 17 iterations
2 Error:Single Word Phrase
2 Error:Different label
2 Error:PP Attachment
2 Error:UNSET move
2 Error:UNSET move
1 Error:UNSET add
1 Error:Unary
1 Error:Unary
1 Error:Clause Attachment
1 Error:Unary
1 Error:Unary
1 Error:Unary
1 Error:UNSET remove
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM also)
			(SIMPX [01;33m(SIMPX[00m
				(VF ich)
				(LK denke)
				[01;31m(SIMPX[00m
					(LK sagen)
					(MF wir mal)[01;31m)[00m
				[01;31m(MF[00m
					[01;31m(NX[00m
						(PX mit dem ice) [01;33mSIMPX)[00m
						[01;36m(NX[00m
							(NX funf stunden)
							(PX nach hannover)[01;36m)[00m[01;31m)[00m[01;31m)[00m)
			(SIMPX und wir mussen)
			(DM na ja)
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(VF funfzehn uhr)
				(LK mussen)
				(MF wir vielleicht da)
				(VC sein)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;31m(LV[00m
					(SIMPX
						(C wenn)
						(MF wir dann um neun oder zehn)
						(VC fahren))[01;31m)[00m [01;33mSIMPX)[00m
				(SIMPX
					(LK sagen)
					(MF wir)
					[01;31m(NF[00m
						(SIMPX
							(VF wir)
							(LK konnten)
							(MF um neun)
							(VC fahren))[01;31m)[00m)
				(VF dann)
				[01;31m(FKOORD[00m
					[01;36m(LKMVC[00m
						[01;31m(LKM[00m
							(LK nehmen)
							(MF wir ein zweites fruhstuck im ice)[01;31m)[00m
						[01;31m(LKM[00m
							[01;36m(VC[00m [01;36m(VXINF[00m [01;31m(LK[00m
								[01;31m(VXFIN[00m
									(VVFIN lesen)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m
							[01;36m(MF[00m
								(NX
									(ART ein)
									(ADJX bischen)
									(NN zeitung))[01;36m)[00m[01;31m)[00m
						(LKMVC haben das meeting vorbereitet)[01;36m)[00m
					(KON und)
					(LKMVC kommen dann um zwei oder drei in hannover an)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;36m(SIMPX[00m
			(SU
				(SIMPX das ware doch)
				(SIMPX das konnten wir noch machen))[01;36m)[00m))
Step:Single Word Phrase
{'family': ['VXINF'], 'auto preterminal span': (48, 49), 'span': (48, 49), 'subtrees': ['VVFIN'], 'parent': 'LK', 'over_word': True, 'auto preterminals': ('VVFIN',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VXFIN', 'VXINF')}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM also)
			(SIMPX [01;33m(SIMPX[00m
				(VF ich)
				(LK denke)
				[01;31m(SIMPX[00m
					(LK sagen)
					(MF wir mal)[01;31m)[00m
				[01;31m(MF[00m
					[01;31m(NX[00m
						(PX mit dem ice) [01;33mSIMPX)[00m
						[01;36m(NX[00m
							(NX funf stunden)
							(PX nach hannover)[01;36m)[00m[01;31m)[00m[01;31m)[00m)
			(SIMPX und wir mussen)
			(DM na ja)
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(VF funfzehn uhr)
				(LK mussen)
				(MF wir vielleicht da)
				(VC sein)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;31m(LV[00m
					(SIMPX
						(C wenn)
						(MF wir dann um neun oder zehn)
						(VC fahren))[01;31m)[00m [01;33mSIMPX)[00m
				(SIMPX
					(LK sagen)
					(MF wir)
					[01;31m(NF[00m
						(SIMPX
							(VF wir)
							(LK konnten)
							(MF um neun)
							(VC fahren))[01;31m)[00m)
				(VF dann)
				[01;31m(FKOORD[00m
					[01;36m(LKMVC[00m
						[01;31m(LKM[00m
							(LK nehmen)
							(MF wir ein zweites fruhstuck im ice)[01;31m)[00m
						[01;31m(LKM[00m
							[01;36m(VC[00m [01;31m(LK[00m
								(VXINF
									(VVFIN lesen))[01;31m)[00m[01;36m)[00m
							[01;36m(MF[00m
								(NX
									(ART ein)
									(ADJX bischen)
									(NN zeitung))[01;36m)[00m[01;31m)[00m
						(LKMVC haben das meeting vorbereitet)[01;36m)[00m
					(KON und)
					(LKMVC kommen dann um zwei oder drei in hannover an)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;36m(SIMPX[00m
			(SU
				(SIMPX das ware doch)
				(SIMPX das konnten wir noch machen))[01;36m)[00m))
Step:Different label
{'family': ['VC', 'NX'], 'auto preterminal span': (48, 49), 'span': (48, 49), 'subtrees': ['VXINF'], 'parent': 'LKM', 'over_word': False, 'auto preterminals': ('VVFIN',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('LK', 'VC')}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM also)
			(SIMPX [01;33m(SIMPX[00m
				(VF ich)
				(LK denke)
				[01;31m(SIMPX[00m
					(LK sagen)
					(MF wir mal)[01;31m)[00m
				[01;31m(MF[00m
					[01;31m(NX[00m
						(PX mit dem ice) [01;33mSIMPX)[00m
						[01;36m(NX[00m
							(NX funf stunden)
							(PX nach hannover)[01;36m)[00m[01;31m)[00m[01;31m)[00m)
			(SIMPX und wir mussen)
			(DM na ja)
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(VF funfzehn uhr)
				(LK mussen)
				(MF wir vielleicht da)
				(VC sein)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;31m(LV[00m
					(SIMPX
						(C wenn)
						(MF wir dann um neun oder zehn)
						(VC fahren))[01;31m)[00m [01;33mSIMPX)[00m
				(SIMPX
					(LK sagen)
					(MF wir)
					[01;31m(NF[00m
						(SIMPX
							(VF wir)
							(LK konnten)
							(MF um neun)
							(VC fahren))[01;31m)[00m)
				(VF dann)
				[01;31m(FKOORD[00m
					[01;36m(LKMVC[00m
						[01;31m(LKM[00m
							(LK nehmen)
							(MF wir ein zweites fruhstuck im ice)[01;31m)[00m
						[01;31m(LKM[00m
							(VC lesen)
							[01;36m(MF[00m
								(NX
									(ART ein)
									(ADJX bischen)
									(NN zeitung))[01;36m)[00m[01;31m)[00m
						(LKMVC haben das meeting vorbereitet)[01;36m)[00m
					(KON und)
					(LKMVC kommen dann um zwei oder drei in hannover an)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;36m(SIMPX[00m
			(SU
				(SIMPX das ware doch)
				(SIMPX das konnten wir noch machen))[01;36m)[00m))
Step:PP Attachment
{'new_parent': 'SIMPX', 'new_family': ['LK', 'MF', 'PX'], 'mover info': [('PX', (6, 9))], 'old_family': ['PX', 'NX', 'PX'], 'start left siblings': [], 'auto preterminals': ('PPER', 'VVFIN', 'VVFIN', 'PPER', 'ADV', 'APPR', 'ART', 'NE', 'CARD', 'NN', 'APPR', 'NE'), 'start right siblings': ['NX', 'PX'], 'end left siblings': ['LK', 'MF'], 'auto preterminal span': (1, 13), 'movers': ['PX'], 'old_parent': 'NX', 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM also)
			(SIMPX
				[01;36m(SIMPX[00m
					(VF ich)
					(LK denke)
					[01;31m(SIMPX[00m
						(LK sagen)
						(MF wir mal)
						(PX mit dem ice)[01;31m)[00m[01;36m)[00m
				[01;31m(MF[00m
					(NX
						(NX funf stunden)
						(PX nach hannover))[01;31m)[00m)
			(SIMPX und wir mussen)
			(DM na ja)
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(VF funfzehn uhr)
				(LK mussen)
				(MF wir vielleicht da)
				(VC sein)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;31m(LV[00m
					(SIMPX
						(C wenn)
						(MF wir dann um neun oder zehn)
						(VC fahren))[01;31m)[00m [01;33mSIMPX)[00m
				(SIMPX
					(LK sagen)
					(MF wir)
					[01;31m(NF[00m
						(SIMPX
							(VF wir)
							(LK konnten)
							(MF um neun)
							(VC fahren))[01;31m)[00m)
				(VF dann)
				[01;31m(FKOORD[00m
					[01;36m(LKMVC[00m
						[01;31m(LKM[00m
							(LK nehmen)
							(MF wir ein zweites fruhstuck im ice)[01;31m)[00m
						[01;31m(LKM[00m
							(VC lesen)
							[01;36m(MF[00m
								(NX
									(ART ein)
									(ADJX bischen)
									(NN zeitung))[01;36m)[00m[01;31m)[00m
						(LKMVC haben das meeting vorbereitet)[01;36m)[00m
					(KON und)
					(LKMVC kommen dann um zwei oder drei in hannover an)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;36m(SIMPX[00m
			(SU
				(SIMPX das ware doch)
				(SIMPX das konnten wir noch machen))[01;36m)[00m))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'LK', 'MF', 'PX'], 'mover info': [('VF', (1, 2)), ('LK', (2, 3))], 'old_family': ['VF', 'LK', 'SIMPX', 'MF'], 'start left siblings': [], 'auto preterminals': ('PPER', 'VVFIN', 'VVFIN', 'PPER', 'ADV', 'APPR', 'ART', 'NE', 'CARD', 'NN', 'APPR', 'NE'), 'start right siblings': ['SIMPX', 'MF'], 'end left siblings': [], 'auto preterminal span': (1, 13), 'movers': ['VF', 'LK'], 'old_parent': 'SIMPX', 'end right siblings': ['LK', 'MF', 'PX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM also)
			(SIMPX
				(SIMPX ich denke sagen wir mal mit dem ice)
				[01;31m(MF[00m
					(NX
						(NX funf stunden)
						(PX nach hannover))[01;31m)[00m)
			(SIMPX und wir mussen)
			(DM na ja)
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(VF funfzehn uhr)
				(LK mussen)
				(MF wir vielleicht da)
				(VC sein)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;31m(LV[00m
					(SIMPX
						(C wenn)
						(MF wir dann um neun oder zehn)
						(VC fahren))[01;31m)[00m [01;33mSIMPX)[00m
				(SIMPX
					(LK sagen)
					(MF wir)
					[01;31m(NF[00m
						(SIMPX
							(VF wir)
							(LK konnten)
							(MF um neun)
							(VC fahren))[01;31m)[00m)
				(VF dann)
				[01;31m(FKOORD[00m
					[01;36m(LKMVC[00m
						[01;31m(LKM[00m
							(LK nehmen)
							(MF wir ein zweites fruhstuck im ice)[01;31m)[00m
						[01;31m(LKM[00m
							(VC lesen)
							[01;36m(MF[00m
								(NX
									(ART ein)
									(ADJX bischen)
									(NN zeitung))[01;36m)[00m[01;31m)[00m
						(LKMVC haben das meeting vorbereitet)[01;36m)[00m
					(KON und)
					(LKMVC kommen dann um zwei oder drei in hannover an)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;36m(SIMPX[00m
			(SU
				(SIMPX das ware doch)
				(SIMPX das konnten wir noch machen))[01;36m)[00m))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'VC', 'LV'], 'mover info': [('LV', (25, 33))], 'old_family': ['LV', 'SIMPX', 'VF', 'FKOORD'], 'start left siblings': [], 'auto preterminals': ('ADV', 'PPER', 'VVFIN', 'VVFIN', 'PPER', 'ADV', 'APPR', 'ART', 'NE', 'CARD', 'NN', 'APPR', 'NE', 'KON', 'PPER', 'VMFIN', 'ITJ', 'PTKANT', 'CARD', 'NN', 'VMFIN', 'PPER', 'ADV', 'ADV', 'VAINF', 'KOUS', 'PPER', 'ADV', 'APPR', 'CARD', 'KON', 'CARD', 'VVFIN', 'VVFIN', 'PPER', 'PPER', 'VMFIN', 'APPR', 'CARD', 'VVINF', 'ADV', 'VVFIN', 'PPER', 'ART', 'ADJA', 'NN', 'APPRART', 'NE', 'VVFIN', 'ART', 'PIDAT', 'NN', 'VAFIN', 'ART', 'NN', 'VVPP', 'KON', 'VVFIN', 'ADV', 'APPR', 'CARD', 'KON', 'CARD', 'APPR', 'NE', 'PTKVZ', 'PDS', 'VAFIN', 'ADV', 'PDS', 'VMFIN', 'PPER', 'ADV', 'VVINF'), 'start right siblings': ['SIMPX', 'VF', 'FKOORD'], 'end left siblings': ['VF', 'LK', 'MF', 'VC'], 'auto preterminal span': (0, 74), 'movers': ['LV'], 'old_parent': 'SIMPX', 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM also)
			(SIMPX
				(SIMPX ich denke sagen wir mal mit dem ice)
				[01;31m(MF[00m
					(NX
						(NX funf stunden)
						(PX nach hannover))[01;31m)[00m)
			(SIMPX und wir mussen)
			(DM na ja)
			(SIMPX
				(VF funfzehn uhr)
				(LK mussen)
				(MF wir vielleicht da)
				(VC sein)
				[01;31m(LV[00m
					(SIMPX
						(C wenn)
						(MF wir dann um neun oder zehn)
						(VC fahren))[01;31m)[00m)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(SIMPX
					(LK sagen)
					(MF wir)
					[01;31m(NF[00m
						(SIMPX
							(VF wir)
							(LK konnten)
							(MF um neun)
							(VC fahren))[01;31m)[00m)
				(VF dann)
				[01;31m(FKOORD[00m
					[01;36m(LKMVC[00m
						[01;31m(LKM[00m
							(LK nehmen)
							(MF wir ein zweites fruhstuck im ice)[01;31m)[00m
						[01;31m(LKM[00m
							(VC lesen)
							[01;36m(MF[00m
								(NX
									(ART ein)
									(ADJX bischen)
									(NN zeitung))[01;36m)[00m[01;31m)[00m
						(LKMVC haben das meeting vorbereitet)[01;36m)[00m
					(KON und)
					(LKMVC kommen dann um zwei oder drei in hannover an)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;36m(SIMPX[00m
			(SU
				(SIMPX das ware doch)
				(SIMPX das konnten wir noch machen))[01;36m)[00m))
Step:UNSET add
{'subtrees': ['LKM', 'LKM', 'LKMVC'], 'family': ['LKMVC', 'KON', 'LKMVC'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'ART', 'ADJA', 'NN', 'APPRART', 'NE', 'VVFIN', 'ART', 'PIDAT', 'NN', 'VAFIN', 'ART', 'NN', 'VVPP'), 'right siblings': [(KON und), (LKMVC (LK (VXFIN (VVFIN kommen))) (MF (ADVX (ADV dann)) (PX (APPR um) (NX (NX (CARD zwei)) (KON oder) (NX (CARD drei)))) (PX (APPR in) (NX (NE hannover)))) (VC (PTKVZ an)))], 'left siblings': [], 'auto preterminal span': (41, 56), 'span': (41, 56), 'parent': 'FKOORD', 'label': 'LKMVC', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM also)
			(SIMPX
				(SIMPX ich denke sagen wir mal mit dem ice)
				[01;31m(MF[00m
					(NX
						(NX funf stunden)
						(PX nach hannover))[01;31m)[00m)
			(SIMPX und wir mussen)
			(DM na ja)
			(SIMPX
				(VF funfzehn uhr)
				(LK mussen)
				(MF wir vielleicht da)
				(VC sein)
				[01;31m(LV[00m
					(SIMPX
						(C wenn)
						(MF wir dann um neun oder zehn)
						(VC fahren))[01;31m)[00m)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(SIMPX
					(LK sagen)
					(MF wir)
					[01;31m(NF[00m
						(SIMPX
							(VF wir)
							(LK konnten)
							(MF um neun)
							(VC fahren))[01;31m)[00m)
				(VF dann)
				[01;31m(FKOORD[00m
					(LKMVC
						[01;31m(LKM[00m
							(LK nehmen)
							(MF wir ein zweites fruhstuck im ice)[01;31m)[00m
						[01;31m(LKM[00m
							(VC lesen)
							[01;36m(MF[00m
								(NX
									(ART ein)
									(ADJX bischen)
									(NN zeitung))[01;36m)[00m[01;31m)[00m
						(LKMVC haben das meeting vorbereitet))
					(KON und)
					(LKMVC kommen dann um zwei oder drei in hannover an)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;36m(SIMPX[00m
			(SU
				(SIMPX das ware doch)
				(SIMPX das konnten wir noch machen))[01;36m)[00m))
Step:Unary
{'subtrees': ['NX'], 'family': ['VC', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'PIDAT', 'NN'), 'right siblings': [], 'left siblings': [(VC (VXINF (VVFIN lesen)))], 'auto preterminal span': (49, 52), 'span': (49, 52), 'parent': 'LKM', 'label': 'MF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM also)
			(SIMPX
				(SIMPX ich denke sagen wir mal mit dem ice)
				[01;31m(MF[00m
					(NX
						(NX funf stunden)
						(PX nach hannover))[01;31m)[00m)
			(SIMPX und wir mussen)
			(DM na ja)
			(SIMPX
				(VF funfzehn uhr)
				(LK mussen)
				(MF wir vielleicht da)
				(VC sein)
				[01;31m(LV[00m
					(SIMPX
						(C wenn)
						(MF wir dann um neun oder zehn)
						(VC fahren))[01;31m)[00m)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(SIMPX
					(LK sagen)
					(MF wir)
					[01;31m(NF[00m
						(SIMPX
							(VF wir)
							(LK konnten)
							(MF um neun)
							(VC fahren))[01;31m)[00m)
				(VF dann)
				[01;31m(FKOORD[00m
					(LKMVC
						[01;31m(LKM[00m
							(LK nehmen)
							(MF wir ein zweites fruhstuck im ice)[01;31m)[00m
						[01;31m(LKM[00m
							(VC lesen)
							(MF ein bischen zeitung)[01;31m)[00m
						(LKMVC haben das meeting vorbereitet))
					(KON und)
					(LKMVC kommen dann um zwei oder drei in hannover an)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;36m(SIMPX[00m
			(SU
				(SIMPX das ware doch)
				(SIMPX das konnten wir noch machen))[01;36m)[00m))
Step:Unary
{'subtrees': ['SU'], 'family': ['SU', 'SU', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VAFIN', 'ADV', 'PDS', 'VMFIN', 'PPER', 'ADV', 'VVINF'), 'right siblings': [], 'left siblings': [(SU (DM (ADVX (ADV also))) (SIMPX (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN denke))) (LK (VXFIN (VVFIN sagen))) (MF (NX (PPER wir)) (ADVX (ADV mal))) (PX (APPR mit) (NX (ART dem) (NE ice)))) (MF (NX (NX (ADJX (CARD funf)) (NN stunden)) (PX (APPR nach) (NX (NE hannover)))))) (SIMPX (KOORD (KON und)) (VF (NX (PPER wir))) (LK (VXFIN (VMFIN mussen)))) (DM (ITJ na) (PTKANT ja)) (SIMPX (VF (NX (ADJX (CARD funfzehn)) (NN uhr))) (LK (VXFIN (VMFIN mussen))) (MF (NX (PPER wir)) (ADVX (ADV vielleicht)) (ADVX (ADV da))) (VC (VXINF (VAINF sein))) (LV (SIMPX (C (KOUS wenn)) (MF (NX (PPER wir)) (ADVX (ADV dann)) (PX (APPR um) (NX (NX (CARD neun)) (KON oder) (NX (CARD zehn))))) (VC (VXFIN (VVFIN fahren))))))), (SU (SIMPX (SIMPX (LK (VXFIN (VVFIN sagen))) (MF (NX (PPER wir))) (NF (SIMPX (VF (NX (PPER wir))) (LK (VXFIN (VMFIN konnten))) (MF (PX (APPR um) (NX (CARD neun)))) (VC (VXINF (VVINF fahren)))))) (VF (ADVX (ADV dann))) (FKOORD (LKMVC (LKM (LK (VXFIN (VVFIN nehmen))) (MF (NX (PPER wir)) (NX (ART ein) (ADJX (ADJA zweites)) (NN fruhstuck)) (PX (APPRART im) (NX (NE ice))))) (LKM (VC (VXINF (VVFIN lesen))) (MF (NX (ART ein) (ADJX (PIDAT bischen)) (NN zeitung)))) (LKMVC (LK (VXFIN (VAFIN haben))) (MF (NX (ART das) (NN meeting))) (VC (VXINF (VVPP vorbereitet))))) (KON und) (LKMVC (LK (VXFIN (VVFIN kommen))) (MF (ADVX (ADV dann)) (PX (APPR um) (NX (NX (CARD zwei)) (KON oder) (NX (CARD drei)))) (PX (APPR in) (NX (NE hannover)))) (VC (PTKVZ an))))))], 'auto preterminal span': (66, 74), 'span': (66, 74), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM also)
			(SIMPX
				(SIMPX ich denke sagen wir mal mit dem ice)
				[01;31m(MF[00m
					(NX
						(NX funf stunden)
						(PX nach hannover))[01;31m)[00m)
			(SIMPX und wir mussen)
			(DM na ja)
			(SIMPX
				(VF funfzehn uhr)
				(LK mussen)
				(MF wir vielleicht da)
				(VC sein)
				[01;31m(LV[00m
					(SIMPX
						(C wenn)
						(MF wir dann um neun oder zehn)
						(VC fahren))[01;31m)[00m)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(SIMPX
					(LK sagen)
					(MF wir)
					[01;31m(NF[00m
						(SIMPX
							(VF wir)
							(LK konnten)
							(MF um neun)
							(VC fahren))[01;31m)[00m)
				(VF dann)
				[01;31m(FKOORD[00m
					(LKMVC
						[01;31m(LKM[00m
							(LK nehmen)
							(MF wir ein zweites fruhstuck im ice)[01;31m)[00m
						[01;31m(LKM[00m
							(VC lesen)
							(MF ein bischen zeitung)[01;31m)[00m
						(LKMVC haben das meeting vorbereitet))
					(KON und)
					(LKMVC kommen dann um zwei oder drei in hannover an)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX das ware doch das konnten wir noch machen)))
Step:Clause Attachment
{'subtrees': ['DM', 'SIMPX', 'SIMPX', 'DM', 'SIMPX'], 'family': ['SU', 'SU', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPER', 'VVFIN', 'VVFIN', 'PPER', 'ADV', 'APPR', 'ART', 'NE', 'CARD', 'NN', 'APPR', 'NE', 'KON', 'PPER', 'VMFIN', 'ITJ', 'PTKANT', 'CARD', 'NN', 'VMFIN', 'PPER', 'ADV', 'ADV', 'VAINF', 'KOUS', 'PPER', 'ADV', 'APPR', 'CARD', 'KON', 'CARD', 'VVFIN', 'VVFIN', 'PPER', 'PPER', 'VMFIN', 'APPR', 'CARD', 'VVINF', 'ADV', 'VVFIN', 'PPER', 'ART', 'ADJA', 'NN', 'APPRART', 'NE', 'VVFIN', 'ART', 'PIDAT', 'NN', 'VAFIN', 'ART', 'NN', 'VVPP', 'KON', 'VVFIN', 'ADV', 'APPR', 'CARD', 'KON', 'CARD', 'APPR', 'NE', 'PTKVZ', 'PDS', 'VAFIN', 'ADV', 'PDS', 'VMFIN', 'PPER', 'ADV', 'VVINF'), 'right siblings': ['SU', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 74), 'span': (0, 33), 'left siblings': [], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX
			(SIMPX ich denke sagen wir mal mit dem ice)
			[01;31m(MF[00m
				(NX
					(NX funf stunden)
					(PX nach hannover))[01;31m)[00m)
		(SIMPX und wir mussen)
		(DM na ja)
		(SIMPX
			(VF funfzehn uhr)
			(LK mussen)
			(MF wir vielleicht da)
			(VC sein)
			[01;31m(LV[00m
				(SIMPX
					(C wenn)
					(MF wir dann um neun oder zehn)
					(VC fahren))[01;31m)[00m)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(SIMPX
					(LK sagen)
					(MF wir)
					[01;31m(NF[00m
						(SIMPX
							(VF wir)
							(LK konnten)
							(MF um neun)
							(VC fahren))[01;31m)[00m)
				(VF dann)
				[01;31m(FKOORD[00m
					(LKMVC
						[01;31m(LKM[00m
							(LK nehmen)
							(MF wir ein zweites fruhstuck im ice)[01;31m)[00m
						[01;31m(LKM[00m
							(VC lesen)
							(MF ein bischen zeitung)[01;31m)[00m
						(LKMVC haben das meeting vorbereitet))
					(KON und)
					(LKMVC kommen dann um zwei oder drei in hannover an)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX das ware doch das konnten wir noch machen)))
Step:Unary
{'subtrees': ['NX'], 'family': ['SIMPX', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'VVFIN', 'PPER', 'ADV', 'APPR', 'ART', 'NE', 'CARD', 'NN', 'APPR', 'NE'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (1, 13), 'span': (9, 13), 'left siblings': ['SIMPX'], 'label': 'MF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX ich denke sagen wir mal mit dem ice funf stunden nach hannover)
		(SIMPX und wir mussen)
		(DM na ja)
		(SIMPX
			(VF funfzehn uhr)
			(LK mussen)
			(MF wir vielleicht da)
			(VC sein)
			[01;31m(LV[00m
				(SIMPX
					(C wenn)
					(MF wir dann um neun oder zehn)
					(VC fahren))[01;31m)[00m)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(SIMPX
					(LK sagen)
					(MF wir)
					[01;31m(NF[00m
						(SIMPX
							(VF wir)
							(LK konnten)
							(MF um neun)
							(VC fahren))[01;31m)[00m)
				(VF dann)
				[01;31m(FKOORD[00m
					(LKMVC
						[01;31m(LKM[00m
							(LK nehmen)
							(MF wir ein zweites fruhstuck im ice)[01;31m)[00m
						[01;31m(LKM[00m
							(VC lesen)
							(MF ein bischen zeitung)[01;31m)[00m
						(LKMVC haben das meeting vorbereitet))
					(KON und)
					(LKMVC kommen dann um zwei oder drei in hannover an)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX das ware doch das konnten wir noch machen)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['VF', 'LK', 'MF', 'VC', 'LV'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'NN', 'VMFIN', 'PPER', 'ADV', 'ADV', 'VAINF', 'KOUS', 'PPER', 'ADV', 'APPR', 'CARD', 'KON', 'CARD', 'VVFIN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (18, 33), 'span': (25, 33), 'left siblings': ['VF', 'LK', 'MF', 'VC'], 'label': 'LV', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX ich denke sagen wir mal mit dem ice funf stunden nach hannover)
		(SIMPX und wir mussen)
		(DM na ja)
		(SIMPX funfzehn uhr mussen wir vielleicht da sein wenn wir dann um neun oder zehn fahren)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(SIMPX
					(LK sagen)
					(MF wir)
					[01;31m(NF[00m
						(SIMPX
							(VF wir)
							(LK konnten)
							(MF um neun)
							(VC fahren))[01;31m)[00m)
				(VF dann)
				[01;31m(FKOORD[00m
					(LKMVC
						[01;31m(LKM[00m
							(LK nehmen)
							(MF wir ein zweites fruhstuck im ice)[01;31m)[00m
						[01;31m(LKM[00m
							(VC lesen)
							(MF ein bischen zeitung)[01;31m)[00m
						(LKMVC haben das meeting vorbereitet))
					(KON und)
					(LKMVC kommen dann um zwei oder drei in hannover an)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX das ware doch das konnten wir noch machen)))
Step:Unary
{'subtrees': ['SIMPX', 'VF', 'FKOORD'], 'family': ['SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'PPER', 'VMFIN', 'APPR', 'CARD', 'VVINF', 'ADV', 'VVFIN', 'PPER', 'ART', 'ADJA', 'NN', 'APPRART', 'NE', 'VVFIN', 'ART', 'PIDAT', 'NN', 'VAFIN', 'ART', 'NN', 'VVPP', 'KON', 'VVFIN', 'ADV', 'APPR', 'CARD', 'KON', 'CARD', 'APPR', 'NE', 'PTKVZ'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (33, 66), 'span': (33, 66), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX ich denke sagen wir mal mit dem ice funf stunden nach hannover)
		(SIMPX und wir mussen)
		(DM na ja)
		(SIMPX funfzehn uhr mussen wir vielleicht da sein wenn wir dann um neun oder zehn fahren)
		[01;31m(SU[00m
			(SIMPX
				(LK sagen)
				(MF wir)
				[01;31m(NF[00m
					(SIMPX
						(VF wir)
						(LK konnten)
						(MF um neun)
						(VC fahren))[01;31m)[00m)
			(VF dann)
			[01;31m(FKOORD[00m
				(LKMVC
					[01;31m(LKM[00m
						(LK nehmen)
						(MF wir ein zweites fruhstuck im ice)[01;31m)[00m
					[01;31m(LKM[00m
						(VC lesen)
						(MF ein bischen zeitung)[01;31m)[00m
					(LKMVC haben das meeting vorbereitet))
				(KON und)
				(LKMVC kommen dann um zwei oder drei in hannover an)[01;31m)[00m[01;31m)[00m
		(SIMPX das ware doch das konnten wir noch machen)))
Step:UNSET remove
{'subtrees': ['SIMPX', 'VF', 'FKOORD'], 'family': ['DM', 'SIMPX', 'SIMPX', 'DM', 'SIMPX', 'SU', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPER', 'VVFIN', 'VVFIN', 'PPER', 'ADV', 'APPR', 'ART', 'NE', 'CARD', 'NN', 'APPR', 'NE', 'KON', 'PPER', 'VMFIN', 'ITJ', 'PTKANT', 'CARD', 'NN', 'VMFIN', 'PPER', 'ADV', 'ADV', 'VAINF', 'KOUS', 'PPER', 'ADV', 'APPR', 'CARD', 'KON', 'CARD', 'VVFIN', 'VVFIN', 'PPER', 'PPER', 'VMFIN', 'APPR', 'CARD', 'VVINF', 'ADV', 'VVFIN', 'PPER', 'ART', 'ADJA', 'NN', 'APPRART', 'NE', 'VVFIN', 'ART', 'PIDAT', 'NN', 'VAFIN', 'ART', 'NN', 'VVPP', 'KON', 'VVFIN', 'ADV', 'APPR', 'CARD', 'KON', 'CARD', 'APPR', 'NE', 'PTKVZ', 'PDS', 'VAFIN', 'ADV', 'PDS', 'VMFIN', 'PPER', 'ADV', 'VVINF'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 74), 'span': (33, 66), 'left siblings': ['DM', 'SIMPX', 'SIMPX', 'DM', 'SIMPX'], 'label': 'SU', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX ich denke sagen wir mal mit dem ice funf stunden nach hannover)
		(SIMPX und wir mussen)
		(DM na ja)
		(SIMPX funfzehn uhr mussen wir vielleicht da sein wenn wir dann um neun oder zehn fahren)
		(SIMPX
			(LK sagen)
			(MF wir)
			[01;31m(NF[00m
				(SIMPX
					(VF wir)
					(LK konnten)
					(MF um neun)
					(VC fahren))[01;31m)[00m)
		(VF dann)
		[01;31m(FKOORD[00m
			(LKMVC
				[01;31m(LKM[00m
					(LK nehmen)
					(MF wir ein zweites fruhstuck im ice)[01;31m)[00m
				[01;31m(LKM[00m
					(VC lesen)
					(MF ein bischen zeitung)[01;31m)[00m
				(LKMVC haben das meeting vorbereitet))
			(KON und)
			(LKMVC kommen dann um zwei oder drei in hannover an)[01;31m)[00m
		(SIMPX das ware doch das konnten wir noch machen)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'PPER', 'VMFIN', 'APPR', 'CARD', 'VVINF'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (33, 40), 'span': (35, 40), 'left siblings': ['LK', 'MF'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX ich denke sagen wir mal mit dem ice funf stunden nach hannover)
		(SIMPX und wir mussen)
		(DM na ja)
		(SIMPX funfzehn uhr mussen wir vielleicht da sein wenn wir dann um neun oder zehn fahren)
		(SIMPX sagen wir wir konnten um neun fahren)
		(VF dann)
		[01;31m(FKOORD[00m
			(LKMVC
				[01;31m(LKM[00m
					(LK nehmen)
					(MF wir ein zweites fruhstuck im ice)[01;31m)[00m
				[01;31m(LKM[00m
					(VC lesen)
					(MF ein bischen zeitung)[01;31m)[00m
				(LKMVC haben das meeting vorbereitet))
			(KON und)
			(LKMVC kommen dann um zwei oder drei in hannover an)[01;31m)[00m
		(SIMPX das ware doch das konnten wir noch machen)))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['LKM', 'LKM', 'LKMVC'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'ART', 'ADJA', 'NN', 'APPRART', 'NE', 'VVFIN', 'ART', 'PIDAT', 'NN', 'VAFIN', 'ART', 'NN', 'VVPP'), 'right siblings': ['LKM', 'LKMVC'], 'parent': 'LKMVC', 'auto preterminal span': (41, 56), 'span': (41, 48), 'left siblings': [], 'label': 'LKM', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX ich denke sagen wir mal mit dem ice funf stunden nach hannover)
		(SIMPX und wir mussen)
		(DM na ja)
		(SIMPX funfzehn uhr mussen wir vielleicht da sein wenn wir dann um neun oder zehn fahren)
		(SIMPX sagen wir wir konnten um neun fahren)
		(VF dann)
		[01;31m(FKOORD[00m
			(LKMVC
				(LK nehmen)
				(MF wir ein zweites fruhstuck im ice)
				[01;31m(LKM[00m
					(VC lesen)
					(MF ein bischen zeitung)[01;31m)[00m
				(LKMVC haben das meeting vorbereitet))
			(KON und)
			(LKMVC kommen dann um zwei oder drei in hannover an)[01;31m)[00m
		(SIMPX das ware doch das konnten wir noch machen)))
Step:UNSET remove
{'subtrees': ['LKMVC', 'KON', 'LKMVC'], 'family': ['DM', 'SIMPX', 'SIMPX', 'DM', 'SIMPX', 'SIMPX', 'VF', 'FKOORD', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPER', 'VVFIN', 'VVFIN', 'PPER', 'ADV', 'APPR', 'ART', 'NE', 'CARD', 'NN', 'APPR', 'NE', 'KON', 'PPER', 'VMFIN', 'ITJ', 'PTKANT', 'CARD', 'NN', 'VMFIN', 'PPER', 'ADV', 'ADV', 'VAINF', 'KOUS', 'PPER', 'ADV', 'APPR', 'CARD', 'KON', 'CARD', 'VVFIN', 'VVFIN', 'PPER', 'PPER', 'VMFIN', 'APPR', 'CARD', 'VVINF', 'ADV', 'VVFIN', 'PPER', 'ART', 'ADJA', 'NN', 'APPRART', 'NE', 'VVFIN', 'ART', 'PIDAT', 'NN', 'VAFIN', 'ART', 'NN', 'VVPP', 'KON', 'VVFIN', 'ADV', 'APPR', 'CARD', 'KON', 'CARD', 'APPR', 'NE', 'PTKVZ', 'PDS', 'VAFIN', 'ADV', 'PDS', 'VMFIN', 'PPER', 'ADV', 'VVINF'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 74), 'span': (41, 66), 'left siblings': ['DM', 'SIMPX', 'SIMPX', 'DM', 'SIMPX', 'SIMPX', 'VF'], 'label': 'FKOORD', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX ich denke sagen wir mal mit dem ice funf stunden nach hannover)
		(SIMPX und wir mussen)
		(DM na ja)
		(SIMPX funfzehn uhr mussen wir vielleicht da sein wenn wir dann um neun oder zehn fahren)
		(SIMPX sagen wir wir konnten um neun fahren)
		(VF dann)
		(LKMVC
			(LK nehmen)
			(MF wir ein zweites fruhstuck im ice)
			[01;31m(LKM[00m
				(VC lesen)
				(MF ein bischen zeitung)[01;31m)[00m
			(LKMVC haben das meeting vorbereitet))
		(KON und)
		(LKMVC kommen dann um zwei oder drei in hannover an)
		(SIMPX das ware doch das konnten wir noch machen)))
Step:UNSET remove
{'subtrees': ['VC', 'MF'], 'family': ['LK', 'MF', 'LKM', 'LKMVC'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'ART', 'ADJA', 'NN', 'APPRART', 'NE', 'VVFIN', 'ART', 'PIDAT', 'NN', 'VAFIN', 'ART', 'NN', 'VVPP'), 'right siblings': ['LKMVC'], 'parent': 'LKMVC', 'auto preterminal span': (41, 56), 'span': (48, 52), 'left siblings': ['LK', 'MF'], 'label': 'LKM', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP also ich denke sagen wir mal mit dem ice funf stunden nach hannover und wir mussen na ja funfzehn uhr mussen wir vielleicht da sein wenn wir dann um neun oder zehn fahren sagen wir wir konnten um neun fahren dann nehmen wir ein zweites fruhstuck im ice lesen ein bischen zeitung haben das meeting vorbereitet und kommen dann um zwei oder drei in hannover an das ware doch das konnten wir noch machen)

Sentence 457:
6 Initial errors
0 on fringe, 4 iterations
3 Error:Co-ordination
1 Error:Clause Attachment
1 Error:Clause Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU grade am montag)
		[01;31m(SU[00m
			[01;31m(DM[00m
				[01;31m(NX[00m
					(KON und)
					[01;36m(DM[00m
						(NX
							(NN moment))[01;36m)[00m[01;31m)[00m[01;31m)[00m
			(SIMPX wir hatten)
			[01;36m(SIMPX[00m
				(SIMPX wir haben ein datum)
				(SIMPX wir haben einen zug)[01;36m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF wie)
				(LK kommen)
				(MF wir denn)
				(VC zuruck))[01;31m)[00m
		(SU hast du informationen uber eine ruckreise)))
Step:Co-ordination
{'new_parent': 'SU', 'new_family': ['KON', 'DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'mover info': [('KON', (3, 4))], 'old_family': ['KON', 'NX'], 'start left siblings': [], 'auto preterminals': ('KON', 'NN', 'PPER', 'VAFIN', 'PPER', 'VAFIN', 'ART', 'NN', 'PPER', 'VAFIN', 'ART', 'NN'), 'start right siblings': ['NX'], 'end left siblings': [], 'auto preterminal span': (3, 15), 'movers': ['KON'], 'old_parent': 'NX', 'POS confusion': ('KON', 'KON'), 'end right siblings': ['DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'classified_type': 'Co-ordination', 'type': 'move'}
(TOP
	(TURN
		(SU grade am montag)
		[01;31m(SU[00m
			(KON und)
			(DM moment)
			(SIMPX wir hatten)
			[01;36m(SIMPX[00m
				(SIMPX wir haben ein datum)
				(SIMPX wir haben einen zug)[01;36m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF wie)
				(LK kommen)
				(MF wir denn)
				(VC zuruck))[01;31m)[00m
		(SU hast du informationen uber eine ruckreise)))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['KON', 'DM', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'ART', 'NN', 'PPER', 'VAFIN', 'ART', 'NN'), 'right siblings': [], 'left siblings': [(KON und), (DM (NX (NN moment))), (SIMPX (VF (NX (PPER wir))) (LK (VXFIN (VAFIN hatten))))], 'auto preterminal span': (7, 15), 'span': (7, 15), 'parent': 'SU', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU grade am montag)
		[01;31m(SU[00m
			(KON und)
			(DM moment)
			(SIMPX wir hatten)
			(SIMPX wir haben ein datum wir haben einen zug)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF wie)
				(LK kommen)
				(MF wir denn)
				(VC zuruck))[01;31m)[00m
		(SU hast du informationen uber eine ruckreise)))
Step:Clause Attachment
{'subtrees': ['KON', 'DM', 'SIMPX', 'SIMPX'], 'family': ['SU', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'APPRART', 'NN', 'KON', 'NN', 'PPER', 'VAFIN', 'PPER', 'VAFIN', 'ART', 'NN', 'PPER', 'VAFIN', 'ART', 'NN', 'PWAV', 'VVFIN', 'PPER', 'ADV', 'PTKVZ', 'VAFIN', 'PPER', 'NN', 'APPR', 'ART', 'NN'), 'right siblings': ['SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 26), 'span': (3, 15), 'left siblings': ['SU'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU grade am montag)
		(KON und)
		(DM moment)
		(SIMPX wir hatten)
		(SIMPX wir haben ein datum wir haben einen zug)
		[01;31m(SU[00m
			(SIMPX
				(VF wie)
				(LK kommen)
				(MF wir denn)
				(VC zuruck))[01;31m)[00m
		(SU hast du informationen uber eine ruckreise)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SU', 'KON', 'DM', 'SIMPX', 'SIMPX', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'APPRART', 'NN', 'KON', 'NN', 'PPER', 'VAFIN', 'PPER', 'VAFIN', 'ART', 'NN', 'PPER', 'VAFIN', 'ART', 'NN', 'PWAV', 'VVFIN', 'PPER', 'ADV', 'PTKVZ', 'VAFIN', 'PPER', 'NN', 'APPR', 'ART', 'NN'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 26), 'span': (15, 20), 'left siblings': ['SU', 'KON', 'DM', 'SIMPX', 'SIMPX'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP grade am montag und moment wir hatten wir haben ein datum wir haben einen zug wie kommen wir denn zuruck hast du informationen uber eine ruckreise)

Sentence 458:
69 Initial errors
0 on fringe, 45 iterations
6 Error:NP Attachment
5 Error:NP Attachment
4 Error:UNSET move
4 Error:PP Attachment
3 Error:UNSET move
2 Error:Different label
2 Error:Single Word Phrase
2 Error:Different label
2 Error:Single Word Phrase
2 Error:Co-ordination
2 Error:UNSET move
2 Error:Different label
1 Error:Single Word Phrase
1 Error:Unary
1 Error:UNSET add
1 Error:PP Attachment
1 Error:UNSET add
1 Error:Unary
1 Error:UNSET add
1 Error:Clause Attachment
1 Error:UNSET add
1 Error:Unary
1 Error:UNSET remove
1 Error:Clause Attachment
1 Error:UNSET remove
1 Error:Unary
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:Unary
1 Error:Unary
1 Error:Single Word Phrase
1 Error:Unary
1 Error:Unary
1 Error:Unary
1 Error:Clause Attachment
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:Unary
1 Error:Clause Attachment
1 Error:Clause Attachment
1 Error:Clause Attachment
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP [01;33m(SU[00m
	(TURN
		(SU na ja das stimmt)
		[01;31m(SU[00m
			(DM ja) [01;33mSU)[00m
			(DM also)
			[01;36m(SIMPX[00m
				[01;31m(SIMPX[00m
					(KOORD und)
					(VF dann)
					(LK konnen)
					[01;31m(MF[00m [01;33m(MF[00m
						(NX wir)
						(ADVX einfach)[01;31m)[00m[01;31m)[00m
				[01;36m(NX[00m
					(ART den) [01;33mMF)[00m[01;36m)[00m[01;36m)[00m
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(VF dann)
				[01;31m(FKOORD[00m
					[01;31m(LKMVC[00m
						(LK brauchen)
						(MF wir uns jetzt vielleicht gar nicht)
						(VC festlegen)[01;31m)[00m [01;33mSIMPX)[00m
					(KON und)
					[01;31m(LKMN[00m
						[01;36m(VC[00m [01;36m(VXINF[00m [01;31m(LK[00m
							[01;31m(VXFIN[00m
								(VVFIN sagen)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m
						[01;31m(MF[00m
							(ADVX
								(ADV einfach))[01;31m)[00m
						[01;31m(NF[00m
							[01;31m(SIMPX[00m
								(VF wir)
								(LK fliegen)
								(VC zuruck)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;36m(SU[00m
				(DM
					(ITJ gut))[01;36m)[00m
			(ADVX dann)
			[01;31m(SIMPX[00m
				(VF dann)
				(LK denke)
				(MF ich)
				[01;31m(NF[00m [01;33m(SIMPX (NF[00m
					[01;31m(SIMPX[00m
						(VF dann)
						(LK haben)
						[01;31m(MF[00m [01;33m(MF[00m
							(NX wir)
							(NX alles)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
			[01;31m(PX[00m
				(APPR auser) [01;33mMF)[00m
				[01;36m(NF[00m
					(SIMPX
						(C das)
						(MF wir immer noch nicht)
						(VC wissen)
						(NF wo wir ubernachten konnen))[01;36m)[00m[01;31m)[00m[01;31m)[00m [01;33mNF) SIMPX)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK denke)
				(NF wir nehmen zusammen einfach ein hotel))[01;31m)[00m
		[01;36m(SIMPX[00m [01;31m(SU[00m
			(SIMPX
				(VF dann)
				(LK konnen)
				[01;36m(MVC[00m
					(MF
						(NX wir)
						(ADVX abends)
						(ADVX noch)
						[01;36m(NX[00m
							(NX ein bischen)
							(PX in der bar)[01;36m)[00m)
					(VC sitzen)[01;36m)[00m)
			[01;31m(SIMPX[00m
				[01;36m(NF[00m
					[01;36m(PX[00m
						[01;31m(KOORD[00m
							(KON oder)[01;31m)[00m
						[01;31m(VF[00m
							(PX
								(APPR auf)
								(NX alle falle))[01;31m)[00m[01;36m)[00m[01;36m)[00m
				[01;36m(SIMPX[00m
					(LK treffen)
					(MF wir uns dann da)[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m
		[01;31m(SU[00m
			(SIMPX
				[01;36m(SIMPX[00m
					(KOORD und)
					(VF ich)
					(LK habe)
					(MF hier eine liste)
					(VC vorbereitet)[01;36m)[00m
				(NF mit hotels))[01;31m)[00m
		[01;31m(SU[00m [01;33m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF das)
				(LK ist)
				[01;31m(MF[00m
					[01;31m(NX[00m
						[01;36m(MF[00m
							(NX
								(ART das)
								(NX marriotthotel hannover)) [01;33mSIMPX)[00m[01;36m)[00m
						[01;36m(SIMPX[00m [01;31m(NX[00m
							(ART das)
							(NX parkhotel hannover)[01;31m)[00m[01;36m)[00m
						[01;31m(NX[00m
							(ART das)
							(NX hotel cristal hannover)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m [01;33m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF die)
				(LK sind)
				(MF alle mehr oder minder in der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m [01;33m(SIMPX[00m
			(SIMPX
				(VF ich)
				(LK kucke)
				(MF mir mal die preise)
				(VC an))[01;31m)[00m
		[01;31m(SU[00m
			(DM also)
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(VF das hotel cristal hannover)
				[01;31m(FKOORD[00m
					[01;31m(LKM[00m
						(LK ist)
						(MF vielleicht ein bischen teuer)[01;31m)[00m
					[01;31m(LKM[00m [01;33m(LKM[00m
						(LK hat)
						[01;31m(MF[00m
							[01;36m(MF[00m [01;36m(NX[00m [01;31m(PX[00m
								(PROP dafur)[01;31m)[00m [01;33mLKM) SIMPX) SIMPX) SIMPX)[00m[01;36m)[00m[01;36m)[00m
							(ADVX aber)
							[01;31m(NX[00m
								(NX sauna)
								(NX solarium)
								(NX bar)
								(KON und)
								(NX bistro)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:NP Attachment
{'new_parent': 'SU', 'new_family': ['DM', 'SIMPX', 'ADVX', 'NX'], 'mover info': [('ADVX', (126, 127)), ('NX', (127, 132))], 'old_family': ['PX', 'ADVX', 'NX'], 'start left siblings': ['PX'], 'auto preterminals': ('ADV', 'ART', 'NN', 'NE', 'NE', 'VAFIN', 'ADV', 'ART', 'PIS', 'ADJD', 'VAFIN', 'PROP', 'ADV', 'NN', 'NN', 'NN', 'KON', 'NN'), 'start right siblings': [], 'end left siblings': ['DM', 'SIMPX'], 'auto preterminal span': (114, 132), 'movers': ['ADVX', 'NX'], 'old_parent': 'MF', 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP [01;33m(SU[00m
	(TURN
		(SU na ja das stimmt)
		[01;31m(SU[00m
			(DM ja) [01;33mSU)[00m
			(DM also)
			[01;36m(SIMPX[00m
				[01;31m(SIMPX[00m
					(KOORD und)
					(VF dann)
					(LK konnen)
					[01;31m(MF[00m [01;33m(MF[00m
						(NX wir)
						(ADVX einfach)[01;31m)[00m[01;31m)[00m
				[01;36m(NX[00m
					(ART den) [01;33mMF)[00m[01;36m)[00m[01;36m)[00m
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(VF dann)
				[01;31m(FKOORD[00m
					[01;31m(LKMVC[00m
						(LK brauchen)
						(MF wir uns jetzt vielleicht gar nicht)
						(VC festlegen)[01;31m)[00m [01;33mSIMPX)[00m
					(KON und)
					[01;31m(LKMN[00m
						[01;36m(VC[00m [01;36m(VXINF[00m [01;31m(LK[00m
							[01;31m(VXFIN[00m
								(VVFIN sagen)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m
						[01;31m(MF[00m
							(ADVX
								(ADV einfach))[01;31m)[00m
						[01;31m(NF[00m
							[01;31m(SIMPX[00m
								(VF wir)
								(LK fliegen)
								(VC zuruck)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;36m(SU[00m
				(DM
					(ITJ gut))[01;36m)[00m
			(ADVX dann)
			[01;31m(SIMPX[00m
				(VF dann)
				(LK denke)
				(MF ich)
				[01;31m(NF[00m [01;33m(SIMPX (NF[00m
					[01;31m(SIMPX[00m
						(VF dann)
						(LK haben)
						[01;31m(MF[00m [01;33m(MF[00m
							(NX wir)
							(NX alles)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
			[01;31m(PX[00m
				(APPR auser) [01;33mMF)[00m
				[01;36m(NF[00m
					(SIMPX
						(C das)
						(MF wir immer noch nicht)
						(VC wissen)
						(NF wo wir ubernachten konnen))[01;36m)[00m[01;31m)[00m[01;31m)[00m [01;33mNF) SIMPX)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK denke)
				(NF wir nehmen zusammen einfach ein hotel))[01;31m)[00m
		[01;36m(SIMPX[00m [01;31m(SU[00m
			(SIMPX
				(VF dann)
				(LK konnen)
				[01;36m(MVC[00m
					(MF
						(NX wir)
						(ADVX abends)
						(ADVX noch)
						[01;36m(NX[00m
							(NX ein bischen)
							(PX in der bar)[01;36m)[00m)
					(VC sitzen)[01;36m)[00m)
			[01;31m(SIMPX[00m
				[01;36m(NF[00m
					[01;36m(PX[00m
						[01;31m(KOORD[00m
							(KON oder)[01;31m)[00m
						[01;31m(VF[00m
							(PX
								(APPR auf)
								(NX alle falle))[01;31m)[00m[01;36m)[00m[01;36m)[00m
				[01;36m(SIMPX[00m
					(LK treffen)
					(MF wir uns dann da)[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m
		[01;31m(SU[00m
			(SIMPX
				[01;36m(SIMPX[00m
					(KOORD und)
					(VF ich)
					(LK habe)
					(MF hier eine liste)
					(VC vorbereitet)[01;36m)[00m
				(NF mit hotels))[01;31m)[00m
		[01;31m(SU[00m [01;33m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF das)
				(LK ist)
				[01;31m(MF[00m
					[01;31m(NX[00m
						[01;36m(MF[00m
							(NX
								(ART das)
								(NX marriotthotel hannover)) [01;33mSIMPX)[00m[01;36m)[00m
						[01;36m(SIMPX[00m [01;31m(NX[00m
							(ART das)
							(NX parkhotel hannover)[01;31m)[00m[01;36m)[00m
						[01;31m(NX[00m
							(ART das)
							(NX hotel cristal hannover)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m [01;33m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF die)
				(LK sind)
				(MF alle mehr oder minder in der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m [01;33m(SIMPX[00m
			(SIMPX
				(VF ich)
				(LK kucke)
				(MF mir mal die preise)
				(VC an))[01;31m)[00m
		[01;31m(SU[00m
			(DM also)
			(SIMPX
				(VF das hotel cristal hannover)
				[01;31m(FKOORD[00m
					[01;31m(LKM[00m
						(LK ist)
						(MF vielleicht ein bischen teuer)[01;31m)[00m
					(LKM
						(LK hat)
						[01;36m(NX[00m
							(MF
								[01;31m(PX[00m
									(PROP dafur)[01;31m)[00m)[01;36m)[00m)[01;31m)[00m) [01;33mSIMPX) SIMPX)[00m
			(ADVX aber)
			[01;31m(NX[00m
				(NX sauna)
				(NX solarium)
				(NX bar)
				(KON und)
				(NX bistro)[01;31m)[00m[01;31m)[00m))
Step:NP Attachment
{'new_parent': 'SU', 'new_family': ['NX', 'NX', 'SIMPX'], 'mover info': [('NX', (89, 92)), ('NX', (92, 96))], 'old_family': ['NX', 'NX', 'NX'], 'start left siblings': ['NX'], 'auto preterminals': ('ITJ', 'PTKANT', 'PDS', 'VVFIN', 'PTKANT', 'ADV', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ART', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'VVFIN', 'ADV', 'PPER', 'VVFIN', 'PTKVZ', 'ITJ', 'ADV', 'ADV', 'VVFIN', 'PPER', 'ADV', 'VAFIN', 'PPER', 'PIS', 'APPR', 'KOUS', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'VVFIN', 'PWAV', 'PPER', 'VVINF', 'VMFIN', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'APPR', 'PIDAT', 'NN', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'KON', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'VVPP', 'APPR', 'NN', 'PDS', 'VAFIN', 'ART', 'NE', 'NE', 'ART', 'NE', 'NE', 'ART', 'NN', 'NE', 'NE', 'PDS', 'VAFIN', 'PIS', 'ADV', 'KON', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'PPER', 'VVFIN', 'PRF', 'ADV', 'ART', 'NN', 'PTKVZ', 'ADV', 'ART', 'NN', 'NE', 'NE', 'VAFIN', 'ADV', 'ART', 'PIS', 'ADJD', 'VAFIN', 'PROP', 'ADV', 'NN', 'NN', 'NN', 'KON', 'NN'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 132), 'movers': ['NX', 'NX'], 'old_parent': 'NX', 'end right siblings': ['SIMPX'], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP [01;33m(SU[00m
	(TURN
		(SU na ja das stimmt)
		[01;31m(SU[00m
			(DM ja) [01;33mSU)[00m
			(DM also)
			[01;36m(SIMPX[00m
				[01;31m(SIMPX[00m
					(KOORD und)
					(VF dann)
					(LK konnen)
					[01;31m(MF[00m [01;33m(MF[00m
						(NX wir)
						(ADVX einfach)[01;31m)[00m[01;31m)[00m
				[01;36m(NX[00m
					(ART den) [01;33mMF)[00m[01;36m)[00m[01;36m)[00m
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(VF dann)
				[01;31m(FKOORD[00m
					[01;31m(LKMVC[00m
						(LK brauchen)
						(MF wir uns jetzt vielleicht gar nicht)
						(VC festlegen)[01;31m)[00m [01;33mSIMPX)[00m
					(KON und)
					[01;31m(LKMN[00m
						[01;36m(VC[00m [01;36m(VXINF[00m [01;31m(LK[00m
							[01;31m(VXFIN[00m
								(VVFIN sagen)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m
						[01;31m(MF[00m
							(ADVX
								(ADV einfach))[01;31m)[00m
						[01;31m(NF[00m
							[01;31m(SIMPX[00m
								(VF wir)
								(LK fliegen)
								(VC zuruck)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;36m(SU[00m
				(DM
					(ITJ gut))[01;36m)[00m
			(ADVX dann)
			[01;31m(SIMPX[00m
				(VF dann)
				(LK denke)
				(MF ich)
				[01;31m(NF[00m [01;33m(SIMPX (NF[00m
					[01;31m(SIMPX[00m
						(VF dann)
						(LK haben)
						[01;31m(MF[00m [01;33m(MF[00m
							(NX wir)
							(NX alles)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
			[01;31m(PX[00m
				(APPR auser) [01;33mMF)[00m
				[01;36m(NF[00m
					(SIMPX
						(C das)
						(MF wir immer noch nicht)
						(VC wissen)
						(NF wo wir ubernachten konnen))[01;36m)[00m[01;31m)[00m[01;31m)[00m [01;33mNF) SIMPX)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK denke)
				(NF wir nehmen zusammen einfach ein hotel))[01;31m)[00m
		[01;36m(SIMPX[00m [01;31m(SU[00m
			(SIMPX
				(VF dann)
				(LK konnen)
				[01;36m(MVC[00m
					(MF
						(NX wir)
						(ADVX abends)
						(ADVX noch)
						[01;36m(NX[00m
							(NX ein bischen)
							(PX in der bar)[01;36m)[00m)
					(VC sitzen)[01;36m)[00m)
			[01;31m(SIMPX[00m
				[01;36m(NF[00m
					[01;36m(PX[00m
						[01;31m(KOORD[00m
							(KON oder)[01;31m)[00m
						[01;31m(VF[00m
							(PX
								(APPR auf)
								(NX alle falle))[01;31m)[00m[01;36m)[00m[01;36m)[00m
				[01;36m(SIMPX[00m
					(LK treffen)
					(MF wir uns dann da)[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m
		[01;31m(SU[00m
			(SIMPX
				[01;36m(SIMPX[00m
					(KOORD und)
					(VF ich)
					(LK habe)
					(MF hier eine liste)
					(VC vorbereitet)[01;36m)[00m
				(NF mit hotels))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK ist)
				(MF das marriotthotel hannover))[01;31m)[00m
		[01;31m(SU[00m
			[01;36m(SIMPX[00m [01;31m(NX[00m
				(ART das)
				(NX parkhotel hannover)[01;31m)[00m[01;36m)[00m
			[01;31m(NX[00m
				(ART das)
				(NX hotel cristal hannover)[01;31m)[00m
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(VF die)
				(LK sind)
				(MF alle mehr oder minder in der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m [01;33m(SIMPX[00m
			(SIMPX
				(VF ich)
				(LK kucke)
				(MF mir mal die preise)
				(VC an))[01;31m)[00m
		[01;31m(SU[00m
			(DM also)
			(SIMPX
				(VF das hotel cristal hannover)
				[01;31m(FKOORD[00m
					[01;31m(LKM[00m
						(LK ist)
						(MF vielleicht ein bischen teuer)[01;31m)[00m
					(LKM
						(LK hat)
						[01;36m(NX[00m
							(MF
								[01;31m(PX[00m
									(PROP dafur)[01;31m)[00m)[01;36m)[00m)[01;31m)[00m) [01;33mSIMPX) SIMPX)[00m
			(ADVX aber)
			[01;31m(NX[00m
				(NX sauna)
				(NX solarium)
				(NX bar)
				(KON und)
				(NX bistro)[01;31m)[00m[01;31m)[00m))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['NX', 'ADVX', 'ART'], 'mover info': [('ART', (11, 12))], 'old_family': ['DM', 'DM', 'SIMPX', 'ART', 'SIMPX'], 'start left siblings': ['DM', 'DM', 'SIMPX'], 'auto preterminals': ('PTKANT', 'ADV', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ART', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'VVFIN', 'ADV', 'PPER', 'VVFIN', 'PTKVZ'), 'start right siblings': ['SIMPX'], 'end left siblings': ['NX', 'ADVX'], 'auto preterminal span': (4, 27), 'movers': ['ART'], 'old_parent': 'SU', 'POS confusion': ('ART', 'ART'), 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP [01;33m(SU[00m
	(TURN
		(SU na ja das stimmt)
		[01;31m(SU[00m
			(DM ja) [01;33mSU)[00m
			(DM also)
			(SIMPX
				(KOORD und)
				(VF dann)
				(LK konnen)
				(MF
					(NX wir)
					(ADVX einfach)
					[01;36m(NX[00m
						(ART den)[01;36m)[00m))
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(VF dann)
				[01;31m(FKOORD[00m
					[01;31m(LKMVC[00m
						(LK brauchen)
						(MF wir uns jetzt vielleicht gar nicht)
						(VC festlegen)[01;31m)[00m [01;33mSIMPX)[00m
					(KON und)
					[01;31m(LKMN[00m
						[01;36m(VC[00m [01;36m(VXINF[00m [01;31m(LK[00m
							[01;31m(VXFIN[00m
								(VVFIN sagen)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m
						[01;31m(MF[00m
							(ADVX
								(ADV einfach))[01;31m)[00m
						[01;31m(NF[00m
							[01;31m(SIMPX[00m
								(VF wir)
								(LK fliegen)
								(VC zuruck)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;36m(SU[00m
				(DM
					(ITJ gut))[01;36m)[00m
			(ADVX dann)
			[01;31m(SIMPX[00m
				(VF dann)
				(LK denke)
				(MF ich)
				[01;31m(NF[00m [01;33m(SIMPX (NF[00m
					[01;31m(SIMPX[00m
						(VF dann)
						(LK haben)
						[01;31m(MF[00m [01;33m(MF[00m
							(NX wir)
							(NX alles)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
			[01;31m(PX[00m
				(APPR auser) [01;33mMF)[00m
				[01;36m(NF[00m
					(SIMPX
						(C das)
						(MF wir immer noch nicht)
						(VC wissen)
						(NF wo wir ubernachten konnen))[01;36m)[00m[01;31m)[00m[01;31m)[00m [01;33mNF) SIMPX)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK denke)
				(NF wir nehmen zusammen einfach ein hotel))[01;31m)[00m
		[01;36m(SIMPX[00m [01;31m(SU[00m
			(SIMPX
				(VF dann)
				(LK konnen)
				[01;36m(MVC[00m
					(MF
						(NX wir)
						(ADVX abends)
						(ADVX noch)
						[01;36m(NX[00m
							(NX ein bischen)
							(PX in der bar)[01;36m)[00m)
					(VC sitzen)[01;36m)[00m)
			[01;31m(SIMPX[00m
				[01;36m(NF[00m
					[01;36m(PX[00m
						[01;31m(KOORD[00m
							(KON oder)[01;31m)[00m
						[01;31m(VF[00m
							(PX
								(APPR auf)
								(NX alle falle))[01;31m)[00m[01;36m)[00m[01;36m)[00m
				[01;36m(SIMPX[00m
					(LK treffen)
					(MF wir uns dann da)[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m
		[01;31m(SU[00m
			(SIMPX
				[01;36m(SIMPX[00m
					(KOORD und)
					(VF ich)
					(LK habe)
					(MF hier eine liste)
					(VC vorbereitet)[01;36m)[00m
				(NF mit hotels))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK ist)
				(MF das marriotthotel hannover))[01;31m)[00m
		[01;31m(SU[00m
			[01;36m(SIMPX[00m [01;31m(NX[00m
				(ART das)
				(NX parkhotel hannover)[01;31m)[00m[01;36m)[00m
			[01;31m(NX[00m
				(ART das)
				(NX hotel cristal hannover)[01;31m)[00m
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(VF die)
				(LK sind)
				(MF alle mehr oder minder in der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m [01;33m(SIMPX[00m
			(SIMPX
				(VF ich)
				(LK kucke)
				(MF mir mal die preise)
				(VC an))[01;31m)[00m
		[01;31m(SU[00m
			(DM also)
			(SIMPX
				(VF das hotel cristal hannover)
				[01;31m(FKOORD[00m
					[01;31m(LKM[00m
						(LK ist)
						(MF vielleicht ein bischen teuer)[01;31m)[00m
					(LKM
						(LK hat)
						[01;36m(NX[00m
							(MF
								[01;31m(PX[00m
									(PROP dafur)[01;31m)[00m)[01;36m)[00m)[01;31m)[00m) [01;33mSIMPX) SIMPX)[00m
			(ADVX aber)
			[01;31m(NX[00m
				(NX sauna)
				(NX solarium)
				(NX bar)
				(KON und)
				(NX bistro)[01;31m)[00m[01;31m)[00m))
Step:PP Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'PX'], 'mover info': [('PX', (36, 47))], 'old_family': ['DM', 'ADVX', 'SIMPX', 'PX'], 'start left siblings': ['DM', 'ADVX', 'SIMPX'], 'auto preterminals': ('ITJ', 'ADV', 'ADV', 'VVFIN', 'PPER', 'ADV', 'VAFIN', 'PPER', 'PIS', 'APPR', 'KOUS', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'VVFIN', 'PWAV', 'PPER', 'VVINF', 'VMFIN'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (27, 47), 'movers': ['PX'], 'old_parent': 'SU', 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP [01;33m(SU[00m
	(TURN
		(SU na ja das stimmt)
		[01;31m(SU[00m
			(DM ja) [01;33mSU)[00m
			(DM also)
			(SIMPX
				(KOORD und)
				(VF dann)
				(LK konnen)
				(MF
					(NX wir)
					(ADVX einfach)
					[01;36m(NX[00m
						(ART den)[01;36m)[00m))
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(VF dann)
				[01;31m(FKOORD[00m
					[01;31m(LKMVC[00m
						(LK brauchen)
						(MF wir uns jetzt vielleicht gar nicht)
						(VC festlegen)[01;31m)[00m [01;33mSIMPX)[00m
					(KON und)
					[01;31m(LKMN[00m
						[01;36m(VC[00m [01;36m(VXINF[00m [01;31m(LK[00m
							[01;31m(VXFIN[00m
								(VVFIN sagen)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m
						[01;31m(MF[00m
							(ADVX
								(ADV einfach))[01;31m)[00m
						[01;31m(NF[00m
							[01;31m(SIMPX[00m
								(VF wir)
								(LK fliegen)
								(VC zuruck)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;36m(SU[00m
				(DM
					(ITJ gut))[01;36m)[00m
			(ADVX dann)
			[01;31m(SIMPX[00m
				(VF dann)
				(LK denke)
				(MF ich)
				(NF
					(SIMPX
						(VF dann)
						(LK haben)
						[01;31m(MF[00m [01;33m(MF[00m
							(NX wir)
							(NX alles)[01;31m)[00m
						[01;31m(PX[00m
							(APPR auser) [01;33mMF)[00m
							[01;36m(NF[00m
								(SIMPX
									(C das)
									(MF wir immer noch nicht)
									(VC wissen)
									(NF wo wir ubernachten konnen))[01;36m)[00m[01;31m)[00m))[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK denke)
				(NF wir nehmen zusammen einfach ein hotel))[01;31m)[00m
		[01;36m(SIMPX[00m [01;31m(SU[00m
			(SIMPX
				(VF dann)
				(LK konnen)
				[01;36m(MVC[00m
					(MF
						(NX wir)
						(ADVX abends)
						(ADVX noch)
						[01;36m(NX[00m
							(NX ein bischen)
							(PX in der bar)[01;36m)[00m)
					(VC sitzen)[01;36m)[00m)
			[01;31m(SIMPX[00m
				[01;36m(NF[00m
					[01;36m(PX[00m
						[01;31m(KOORD[00m
							(KON oder)[01;31m)[00m
						[01;31m(VF[00m
							(PX
								(APPR auf)
								(NX alle falle))[01;31m)[00m[01;36m)[00m[01;36m)[00m
				[01;36m(SIMPX[00m
					(LK treffen)
					(MF wir uns dann da)[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m
		[01;31m(SU[00m
			(SIMPX
				[01;36m(SIMPX[00m
					(KOORD und)
					(VF ich)
					(LK habe)
					(MF hier eine liste)
					(VC vorbereitet)[01;36m)[00m
				(NF mit hotels))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK ist)
				(MF das marriotthotel hannover))[01;31m)[00m
		[01;31m(SU[00m
			[01;36m(SIMPX[00m [01;31m(NX[00m
				(ART das)
				(NX parkhotel hannover)[01;31m)[00m[01;36m)[00m
			[01;31m(NX[00m
				(ART das)
				(NX hotel cristal hannover)[01;31m)[00m
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(VF die)
				(LK sind)
				(MF alle mehr oder minder in der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m [01;33m(SIMPX[00m
			(SIMPX
				(VF ich)
				(LK kucke)
				(MF mir mal die preise)
				(VC an))[01;31m)[00m
		[01;31m(SU[00m
			(DM also)
			(SIMPX
				(VF das hotel cristal hannover)
				[01;31m(FKOORD[00m
					[01;31m(LKM[00m
						(LK ist)
						(MF vielleicht ein bischen teuer)[01;31m)[00m
					(LKM
						(LK hat)
						[01;36m(NX[00m
							(MF
								[01;31m(PX[00m
									(PROP dafur)[01;31m)[00m)[01;36m)[00m)[01;31m)[00m) [01;33mSIMPX) SIMPX)[00m
			(ADVX aber)
			[01;31m(NX[00m
				(NX sauna)
				(NX solarium)
				(NX bar)
				(KON und)
				(NX bistro)[01;31m)[00m[01;31m)[00m))
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SIMPX', 'KOORD', 'VF', 'SIMPX'], 'mover info': [('KOORD', (66, 67)), ('VF', (67, 70))], 'old_family': ['KOORD', 'VF', 'LK', 'MF'], 'start left siblings': [], 'auto preterminals': ('ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'APPR', 'PIDAT', 'NN', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV'), 'start right siblings': ['LK', 'MF'], 'end left siblings': ['SIMPX'], 'auto preterminal span': (55, 75), 'adding node already present': False, 'movers': ['KOORD', 'VF'], 'old_parent': 'SIMPX', 'added and moved': True, 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'NX'}
(TOP [01;33m(SU[00m
	(TURN
		(SU na ja das stimmt)
		[01;31m(SU[00m
			(DM ja) [01;33mSU)[00m
			(DM also)
			(SIMPX
				(KOORD und)
				(VF dann)
				(LK konnen)
				(MF
					(NX wir)
					(ADVX einfach)
					[01;36m(NX[00m
						(ART den)[01;36m)[00m))
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(VF dann)
				[01;31m(FKOORD[00m
					[01;31m(LKMVC[00m
						(LK brauchen)
						(MF wir uns jetzt vielleicht gar nicht)
						(VC festlegen)[01;31m)[00m [01;33mSIMPX)[00m
					(KON und)
					[01;31m(LKMN[00m
						[01;36m(VC[00m [01;36m(VXINF[00m [01;31m(LK[00m
							[01;31m(VXFIN[00m
								(VVFIN sagen)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m
						[01;31m(MF[00m
							(ADVX
								(ADV einfach))[01;31m)[00m
						[01;31m(NF[00m
							[01;31m(SIMPX[00m
								(VF wir)
								(LK fliegen)
								(VC zuruck)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;36m(SU[00m
				(DM
					(ITJ gut))[01;36m)[00m
			(ADVX dann)
			[01;31m(SIMPX[00m
				(VF dann)
				(LK denke)
				(MF ich)
				(NF
					(SIMPX
						(VF dann)
						(LK haben)
						[01;31m(MF[00m [01;33m(MF[00m
							(NX wir)
							(NX alles)[01;31m)[00m
						[01;31m(PX[00m
							(APPR auser) [01;33mMF)[00m
							[01;36m(NF[00m
								(SIMPX
									(C das)
									(MF wir immer noch nicht)
									(VC wissen)
									(NF wo wir ubernachten konnen))[01;36m)[00m[01;31m)[00m))[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK denke)
				(NF wir nehmen zusammen einfach ein hotel))[01;31m)[00m
		(SIMPX
			[01;31m(SU[00m
				(SIMPX
					(VF dann)
					(LK konnen)
					[01;36m(MVC[00m
						(MF
							(NX wir)
							(ADVX abends)
							(ADVX noch)
							[01;36m(NX[00m
								(NX ein bischen)
								(PX in der bar)[01;36m)[00m)
						(VC sitzen)[01;36m)[00m)
				[01;36m(NF[00m
					[01;36m(PX[00m
						[01;31m(KOORD[00m
							(KON oder)[01;31m)[00m
						[01;31m(VF[00m
							(PX
								(APPR auf)
								(NX alle falle))[01;31m)[00m[01;36m)[00m[01;36m)[00m
				(SIMPX treffen wir uns dann da)[01;31m)[00m)
		[01;31m(SU[00m
			(SIMPX
				[01;36m(SIMPX[00m
					(KOORD und)
					(VF ich)
					(LK habe)
					(MF hier eine liste)
					(VC vorbereitet)[01;36m)[00m
				(NF mit hotels))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK ist)
				(MF das marriotthotel hannover))[01;31m)[00m
		[01;31m(SU[00m
			[01;36m(SIMPX[00m [01;31m(NX[00m
				(ART das)
				(NX parkhotel hannover)[01;31m)[00m[01;36m)[00m
			[01;31m(NX[00m
				(ART das)
				(NX hotel cristal hannover)[01;31m)[00m
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(VF die)
				(LK sind)
				(MF alle mehr oder minder in der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m [01;33m(SIMPX[00m
			(SIMPX
				(VF ich)
				(LK kucke)
				(MF mir mal die preise)
				(VC an))[01;31m)[00m
		[01;31m(SU[00m
			(DM also)
			(SIMPX
				(VF das hotel cristal hannover)
				[01;31m(FKOORD[00m
					[01;31m(LKM[00m
						(LK ist)
						(MF vielleicht ein bischen teuer)[01;31m)[00m
					(LKM
						(LK hat)
						[01;36m(NX[00m
							(MF
								[01;31m(PX[00m
									(PROP dafur)[01;31m)[00m)[01;36m)[00m)[01;31m)[00m) [01;33mSIMPX) SIMPX)[00m
			(ADVX aber)
			[01;31m(NX[00m
				(NX sauna)
				(NX solarium)
				(NX bar)
				(KON und)
				(NX bistro)[01;31m)[00m[01;31m)[00m))
Step:Different label
{'family': ['VXINF', 'MF', 'NF'], 'auto preterminal span': (22, 23), 'span': (22, 23), 'subtrees': ['VXFIN'], 'parent': 'LKMN', 'over_word': False, 'auto preterminals': ('VVFIN',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('LK', 'VXINF')}
(TOP [01;33m(SU[00m
	(TURN
		(SU na ja das stimmt)
		[01;31m(SU[00m
			(DM ja) [01;33mSU)[00m
			(DM also)
			(SIMPX
				(KOORD und)
				(VF dann)
				(LK konnen)
				(MF
					(NX wir)
					(ADVX einfach)
					[01;36m(NX[00m
						(ART den)[01;36m)[00m))
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(VF dann)
				[01;31m(FKOORD[00m
					[01;31m(LKMVC[00m
						(LK brauchen)
						(MF wir uns jetzt vielleicht gar nicht)
						(VC festlegen)[01;31m)[00m [01;33mSIMPX)[00m
					(KON und)
					[01;31m(LKMN[00m
						[01;36m(VC[00m
							(VXINF
								[01;31m(VXFIN[00m
									(VVFIN sagen)[01;31m)[00m)[01;36m)[00m
						[01;31m(MF[00m
							(ADVX
								(ADV einfach))[01;31m)[00m
						[01;31m(NF[00m
							[01;31m(SIMPX[00m
								(VF wir)
								(LK fliegen)
								(VC zuruck)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;36m(SU[00m
				(DM
					(ITJ gut))[01;36m)[00m
			(ADVX dann)
			[01;31m(SIMPX[00m
				(VF dann)
				(LK denke)
				(MF ich)
				(NF
					(SIMPX
						(VF dann)
						(LK haben)
						[01;31m(MF[00m [01;33m(MF[00m
							(NX wir)
							(NX alles)[01;31m)[00m
						[01;31m(PX[00m
							(APPR auser) [01;33mMF)[00m
							[01;36m(NF[00m
								(SIMPX
									(C das)
									(MF wir immer noch nicht)
									(VC wissen)
									(NF wo wir ubernachten konnen))[01;36m)[00m[01;31m)[00m))[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK denke)
				(NF wir nehmen zusammen einfach ein hotel))[01;31m)[00m
		(SIMPX
			[01;31m(SU[00m
				(SIMPX
					(VF dann)
					(LK konnen)
					[01;36m(MVC[00m
						(MF
							(NX wir)
							(ADVX abends)
							(ADVX noch)
							[01;36m(NX[00m
								(NX ein bischen)
								(PX in der bar)[01;36m)[00m)
						(VC sitzen)[01;36m)[00m)
				[01;36m(NF[00m
					[01;36m(PX[00m
						[01;31m(KOORD[00m
							(KON oder)[01;31m)[00m
						[01;31m(VF[00m
							(PX
								(APPR auf)
								(NX alle falle))[01;31m)[00m[01;36m)[00m[01;36m)[00m
				(SIMPX treffen wir uns dann da)[01;31m)[00m)
		[01;31m(SU[00m
			(SIMPX
				[01;36m(SIMPX[00m
					(KOORD und)
					(VF ich)
					(LK habe)
					(MF hier eine liste)
					(VC vorbereitet)[01;36m)[00m
				(NF mit hotels))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK ist)
				(MF das marriotthotel hannover))[01;31m)[00m
		[01;31m(SU[00m
			[01;36m(SIMPX[00m [01;31m(NX[00m
				(ART das)
				(NX parkhotel hannover)[01;31m)[00m[01;36m)[00m
			[01;31m(NX[00m
				(ART das)
				(NX hotel cristal hannover)[01;31m)[00m
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(VF die)
				(LK sind)
				(MF alle mehr oder minder in der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m [01;33m(SIMPX[00m
			(SIMPX
				(VF ich)
				(LK kucke)
				(MF mir mal die preise)
				(VC an))[01;31m)[00m
		[01;31m(SU[00m
			(DM also)
			(SIMPX
				(VF das hotel cristal hannover)
				[01;31m(FKOORD[00m
					[01;31m(LKM[00m
						(LK ist)
						(MF vielleicht ein bischen teuer)[01;31m)[00m
					(LKM
						(LK hat)
						[01;36m(NX[00m
							(MF
								[01;31m(PX[00m
									(PROP dafur)[01;31m)[00m)[01;36m)[00m)[01;31m)[00m) [01;33mSIMPX) SIMPX)[00m
			(ADVX aber)
			[01;31m(NX[00m
				(NX sauna)
				(NX solarium)
				(NX bar)
				(KON und)
				(NX bistro)[01;31m)[00m[01;31m)[00m))
Step:Single Word Phrase
{'family': ['VC'], 'auto preterminal span': (22, 23), 'span': (22, 23), 'subtrees': ['VVFIN'], 'parent': 'VXINF', 'over_word': True, 'auto preterminals': ('VVFIN',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VXFIN', 'VC')}
(TOP [01;33m(SU[00m
	(TURN
		(SU na ja das stimmt)
		[01;31m(SU[00m
			(DM ja) [01;33mSU)[00m
			(DM also)
			(SIMPX
				(KOORD und)
				(VF dann)
				(LK konnen)
				(MF
					(NX wir)
					(ADVX einfach)
					[01;36m(NX[00m
						(ART den)[01;36m)[00m))
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(VF dann)
				[01;31m(FKOORD[00m
					[01;31m(LKMVC[00m
						(LK brauchen)
						(MF wir uns jetzt vielleicht gar nicht)
						(VC festlegen)[01;31m)[00m [01;33mSIMPX)[00m
					(KON und)
					[01;31m(LKMN[00m
						(VXINF sagen)
						[01;31m(MF[00m
							(ADVX
								(ADV einfach))[01;31m)[00m
						[01;31m(NF[00m
							[01;31m(SIMPX[00m
								(VF wir)
								(LK fliegen)
								(VC zuruck)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;36m(SU[00m
				(DM
					(ITJ gut))[01;36m)[00m
			(ADVX dann)
			[01;31m(SIMPX[00m
				(VF dann)
				(LK denke)
				(MF ich)
				(NF
					(SIMPX
						(VF dann)
						(LK haben)
						[01;31m(MF[00m [01;33m(MF[00m
							(NX wir)
							(NX alles)[01;31m)[00m
						[01;31m(PX[00m
							(APPR auser) [01;33mMF)[00m
							[01;36m(NF[00m
								(SIMPX
									(C das)
									(MF wir immer noch nicht)
									(VC wissen)
									(NF wo wir ubernachten konnen))[01;36m)[00m[01;31m)[00m))[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK denke)
				(NF wir nehmen zusammen einfach ein hotel))[01;31m)[00m
		(SIMPX
			[01;31m(SU[00m
				(SIMPX
					(VF dann)
					(LK konnen)
					[01;36m(MVC[00m
						(MF
							(NX wir)
							(ADVX abends)
							(ADVX noch)
							[01;36m(NX[00m
								(NX ein bischen)
								(PX in der bar)[01;36m)[00m)
						(VC sitzen)[01;36m)[00m)
				[01;36m(NF[00m
					[01;36m(PX[00m
						[01;31m(KOORD[00m
							(KON oder)[01;31m)[00m
						[01;31m(VF[00m
							(PX
								(APPR auf)
								(NX alle falle))[01;31m)[00m[01;36m)[00m[01;36m)[00m
				(SIMPX treffen wir uns dann da)[01;31m)[00m)
		[01;31m(SU[00m
			(SIMPX
				[01;36m(SIMPX[00m
					(KOORD und)
					(VF ich)
					(LK habe)
					(MF hier eine liste)
					(VC vorbereitet)[01;36m)[00m
				(NF mit hotels))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK ist)
				(MF das marriotthotel hannover))[01;31m)[00m
		[01;31m(SU[00m
			[01;36m(SIMPX[00m [01;31m(NX[00m
				(ART das)
				(NX parkhotel hannover)[01;31m)[00m[01;36m)[00m
			[01;31m(NX[00m
				(ART das)
				(NX hotel cristal hannover)[01;31m)[00m
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(VF die)
				(LK sind)
				(MF alle mehr oder minder in der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m [01;33m(SIMPX[00m
			(SIMPX
				(VF ich)
				(LK kucke)
				(MF mir mal die preise)
				(VC an))[01;31m)[00m
		[01;31m(SU[00m
			(DM also)
			(SIMPX
				(VF das hotel cristal hannover)
				[01;31m(FKOORD[00m
					[01;31m(LKM[00m
						(LK ist)
						(MF vielleicht ein bischen teuer)[01;31m)[00m
					(LKM
						(LK hat)
						[01;36m(NX[00m
							(MF
								[01;31m(PX[00m
									(PROP dafur)[01;31m)[00m)[01;36m)[00m)[01;31m)[00m) [01;33mSIMPX) SIMPX)[00m
			(ADVX aber)
			[01;31m(NX[00m
				(NX sauna)
				(NX solarium)
				(NX bar)
				(KON und)
				(NX bistro)[01;31m)[00m[01;31m)[00m))
Step:Different label
{'family': ['SIMPX', 'NX', 'SIMPX'], 'auto preterminal span': (89, 92), 'span': (89, 92), 'subtrees': ['ART', 'NX'], 'parent': 'SU', 'over_word': False, 'auto preterminals': ('ART', 'NE', 'NE'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('NX', 'SIMPX')}
(TOP [01;33m(SU[00m
	(TURN
		(SU na ja das stimmt)
		[01;31m(SU[00m
			(DM ja) [01;33mSU)[00m
			(DM also)
			(SIMPX
				(KOORD und)
				(VF dann)
				(LK konnen)
				(MF
					(NX wir)
					(ADVX einfach)
					[01;36m(NX[00m
						(ART den)[01;36m)[00m))
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(VF dann)
				[01;31m(FKOORD[00m
					[01;31m(LKMVC[00m
						(LK brauchen)
						(MF wir uns jetzt vielleicht gar nicht)
						(VC festlegen)[01;31m)[00m [01;33mSIMPX)[00m
					(KON und)
					[01;31m(LKMN[00m
						(VXINF sagen)
						[01;31m(MF[00m
							(ADVX
								(ADV einfach))[01;31m)[00m
						[01;31m(NF[00m
							[01;31m(SIMPX[00m
								(VF wir)
								(LK fliegen)
								(VC zuruck)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;36m(SU[00m
				(DM
					(ITJ gut))[01;36m)[00m
			(ADVX dann)
			[01;31m(SIMPX[00m
				(VF dann)
				(LK denke)
				(MF ich)
				(NF
					(SIMPX
						(VF dann)
						(LK haben)
						[01;31m(MF[00m [01;33m(MF[00m
							(NX wir)
							(NX alles)[01;31m)[00m
						[01;31m(PX[00m
							(APPR auser) [01;33mMF)[00m
							[01;36m(NF[00m
								(SIMPX
									(C das)
									(MF wir immer noch nicht)
									(VC wissen)
									(NF wo wir ubernachten konnen))[01;36m)[00m[01;31m)[00m))[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK denke)
				(NF wir nehmen zusammen einfach ein hotel))[01;31m)[00m
		(SIMPX
			[01;31m(SU[00m
				(SIMPX
					(VF dann)
					(LK konnen)
					[01;36m(MVC[00m
						(MF
							(NX wir)
							(ADVX abends)
							(ADVX noch)
							[01;36m(NX[00m
								(NX ein bischen)
								(PX in der bar)[01;36m)[00m)
						(VC sitzen)[01;36m)[00m)
				[01;36m(NF[00m
					[01;36m(PX[00m
						[01;31m(KOORD[00m
							(KON oder)[01;31m)[00m
						[01;31m(VF[00m
							(PX
								(APPR auf)
								(NX alle falle))[01;31m)[00m[01;36m)[00m[01;36m)[00m
				(SIMPX treffen wir uns dann da)[01;31m)[00m)
		[01;31m(SU[00m
			(SIMPX
				[01;36m(SIMPX[00m
					(KOORD und)
					(VF ich)
					(LK habe)
					(MF hier eine liste)
					(VC vorbereitet)[01;36m)[00m
				(NF mit hotels))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK ist)
				(MF das marriotthotel hannover))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX das parkhotel hannover)
			[01;31m(NX[00m
				(ART das)
				(NX hotel cristal hannover)[01;31m)[00m
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(VF die)
				(LK sind)
				(MF alle mehr oder minder in der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m [01;33m(SIMPX[00m
			(SIMPX
				(VF ich)
				(LK kucke)
				(MF mir mal die preise)
				(VC an))[01;31m)[00m
		[01;31m(SU[00m
			(DM also)
			(SIMPX
				(VF das hotel cristal hannover)
				[01;31m(FKOORD[00m
					[01;31m(LKM[00m
						(LK ist)
						(MF vielleicht ein bischen teuer)[01;31m)[00m
					(LKM
						(LK hat)
						[01;36m(NX[00m
							(MF
								[01;31m(PX[00m
									(PROP dafur)[01;31m)[00m)[01;36m)[00m)[01;31m)[00m) [01;33mSIMPX) SIMPX)[00m
			(ADVX aber)
			[01;31m(NX[00m
				(NX sauna)
				(NX solarium)
				(NX bar)
				(KON und)
				(NX bistro)[01;31m)[00m[01;31m)[00m))
Step:Single Word Phrase
{'family': ['NX'], 'auto preterminal span': (125, 126), 'span': (125, 126), 'subtrees': ['PROP'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('PROP',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('PX', 'NX')}
(TOP [01;33m(SU[00m
	(TURN
		(SU na ja das stimmt)
		[01;31m(SU[00m
			(DM ja) [01;33mSU)[00m
			(DM also)
			(SIMPX
				(KOORD und)
				(VF dann)
				(LK konnen)
				(MF
					(NX wir)
					(ADVX einfach)
					[01;36m(NX[00m
						(ART den)[01;36m)[00m))
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(VF dann)
				[01;31m(FKOORD[00m
					[01;31m(LKMVC[00m
						(LK brauchen)
						(MF wir uns jetzt vielleicht gar nicht)
						(VC festlegen)[01;31m)[00m [01;33mSIMPX)[00m
					(KON und)
					[01;31m(LKMN[00m
						(VXINF sagen)
						[01;31m(MF[00m
							(ADVX
								(ADV einfach))[01;31m)[00m
						[01;31m(NF[00m
							[01;31m(SIMPX[00m
								(VF wir)
								(LK fliegen)
								(VC zuruck)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;36m(SU[00m
				(DM
					(ITJ gut))[01;36m)[00m
			(ADVX dann)
			[01;31m(SIMPX[00m
				(VF dann)
				(LK denke)
				(MF ich)
				(NF
					(SIMPX
						(VF dann)
						(LK haben)
						[01;31m(MF[00m [01;33m(MF[00m
							(NX wir)
							(NX alles)[01;31m)[00m
						[01;31m(PX[00m
							(APPR auser) [01;33mMF)[00m
							[01;36m(NF[00m
								(SIMPX
									(C das)
									(MF wir immer noch nicht)
									(VC wissen)
									(NF wo wir ubernachten konnen))[01;36m)[00m[01;31m)[00m))[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK denke)
				(NF wir nehmen zusammen einfach ein hotel))[01;31m)[00m
		(SIMPX
			[01;31m(SU[00m
				(SIMPX
					(VF dann)
					(LK konnen)
					[01;36m(MVC[00m
						(MF
							(NX wir)
							(ADVX abends)
							(ADVX noch)
							[01;36m(NX[00m
								(NX ein bischen)
								(PX in der bar)[01;36m)[00m)
						(VC sitzen)[01;36m)[00m)
				[01;36m(NF[00m
					[01;36m(PX[00m
						[01;31m(KOORD[00m
							(KON oder)[01;31m)[00m
						[01;31m(VF[00m
							(PX
								(APPR auf)
								(NX alle falle))[01;31m)[00m[01;36m)[00m[01;36m)[00m
				(SIMPX treffen wir uns dann da)[01;31m)[00m)
		[01;31m(SU[00m
			(SIMPX
				[01;36m(SIMPX[00m
					(KOORD und)
					(VF ich)
					(LK habe)
					(MF hier eine liste)
					(VC vorbereitet)[01;36m)[00m
				(NF mit hotels))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK ist)
				(MF das marriotthotel hannover))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX das parkhotel hannover)
			[01;31m(NX[00m
				(ART das)
				(NX hotel cristal hannover)[01;31m)[00m
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(VF die)
				(LK sind)
				(MF alle mehr oder minder in der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m [01;33m(SIMPX[00m
			(SIMPX
				(VF ich)
				(LK kucke)
				(MF mir mal die preise)
				(VC an))[01;31m)[00m
		[01;31m(SU[00m
			(DM also)
			(SIMPX
				(VF das hotel cristal hannover)
				[01;31m(FKOORD[00m
					[01;31m(LKM[00m
						(LK ist)
						(MF vielleicht ein bischen teuer)[01;31m)[00m
					(LKM hat dafur)[01;31m)[00m) [01;33mSIMPX) SIMPX)[00m
			(ADVX aber)
			[01;31m(NX[00m
				(NX sauna)
				(NX solarium)
				(NX bar)
				(KON und)
				(NX bistro)[01;31m)[00m[01;31m)[00m))
Step:Co-ordination
{'new_parent': 'SU', 'new_family': ['KON', 'LKMN', 'DM', 'ADVX', 'SIMPX'], 'mover info': [('KON', (21, 22)), ('LKMN', (22, 27))], 'old_family': ['LKMVC', 'KON', 'LKMN'], 'start left siblings': ['LKMVC'], 'auto preterminals': ('ITJ', 'PTKANT', 'PDS', 'VVFIN', 'PTKANT', 'ADV', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ART', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'VVFIN', 'ADV', 'PPER', 'VVFIN', 'PTKVZ', 'ITJ', 'ADV', 'ADV', 'VVFIN', 'PPER', 'ADV', 'VAFIN', 'PPER', 'PIS', 'APPR', 'KOUS', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'VVFIN', 'PWAV', 'PPER', 'VVINF', 'VMFIN', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'APPR', 'PIDAT', 'NN', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'KON', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'VVPP', 'APPR', 'NN', 'PDS', 'VAFIN', 'ART', 'NE', 'NE', 'ART', 'NE', 'NE', 'ART', 'NN', 'NE', 'NE', 'PDS', 'VAFIN', 'PIS', 'ADV', 'KON', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'PPER', 'VVFIN', 'PRF', 'ADV', 'ART', 'NN', 'PTKVZ', 'ADV', 'ART', 'NN', 'NE', 'NE', 'VAFIN', 'ADV', 'ART', 'PIS', 'ADJD', 'VAFIN', 'PROP', 'ADV', 'NN', 'NN', 'NN', 'KON', 'NN'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 132), 'movers': ['KON', 'LKMN'], 'old_parent': 'FKOORD', 'end right siblings': ['DM', 'ADVX', 'SIMPX'], 'classified_type': 'Co-ordination', 'type': 'move'}
(TOP [01;33m(SU[00m
	(TURN
		(SU na ja das stimmt)
		[01;31m(SU[00m
			(DM ja) [01;33mSU)[00m
			(DM also)
			(SIMPX
				(KOORD und)
				(VF dann)
				(LK konnen)
				(MF
					(NX wir)
					(ADVX einfach)
					[01;36m(NX[00m
						(ART den)[01;36m)[00m))
			(SIMPX
				(VF dann)
				[01;31m(FKOORD[00m
					[01;31m(LKMVC[00m
						(LK brauchen)
						(MF wir uns jetzt vielleicht gar nicht)
						(VC festlegen)[01;31m)[00m[01;31m)[00m)[01;31m)[00m
		[01;31m(SU[00m
			(KON und)
			[01;31m(LKMN[00m
				(VXINF sagen)
				[01;31m(MF[00m
					(ADVX
						(ADV einfach))[01;31m)[00m
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						(VF wir)
						(LK fliegen)
						(VC zuruck)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			[01;36m(SU[00m
				(DM
					(ITJ gut))[01;36m)[00m
			(ADVX dann)
			[01;31m(SIMPX[00m
				(VF dann)
				(LK denke)
				(MF ich)
				(NF
					(SIMPX
						(VF dann)
						(LK haben)
						[01;31m(MF[00m [01;33m(MF[00m
							(NX wir)
							(NX alles)[01;31m)[00m
						[01;31m(PX[00m
							(APPR auser) [01;33mMF)[00m
							[01;36m(NF[00m
								(SIMPX
									(C das)
									(MF wir immer noch nicht)
									(VC wissen)
									(NF wo wir ubernachten konnen))[01;36m)[00m[01;31m)[00m))[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK denke)
				(NF wir nehmen zusammen einfach ein hotel))[01;31m)[00m
		(SIMPX
			[01;31m(SU[00m
				(SIMPX
					(VF dann)
					(LK konnen)
					[01;36m(MVC[00m
						(MF
							(NX wir)
							(ADVX abends)
							(ADVX noch)
							[01;36m(NX[00m
								(NX ein bischen)
								(PX in der bar)[01;36m)[00m)
						(VC sitzen)[01;36m)[00m)
				[01;36m(NF[00m
					[01;36m(PX[00m
						[01;31m(KOORD[00m
							(KON oder)[01;31m)[00m
						[01;31m(VF[00m
							(PX
								(APPR auf)
								(NX alle falle))[01;31m)[00m[01;36m)[00m[01;36m)[00m
				(SIMPX treffen wir uns dann da)[01;31m)[00m)
		[01;31m(SU[00m
			(SIMPX
				[01;36m(SIMPX[00m
					(KOORD und)
					(VF ich)
					(LK habe)
					(MF hier eine liste)
					(VC vorbereitet)[01;36m)[00m
				(NF mit hotels))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK ist)
				(MF das marriotthotel hannover))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX das parkhotel hannover)
			[01;31m(NX[00m
				(ART das)
				(NX hotel cristal hannover)[01;31m)[00m
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(VF die)
				(LK sind)
				(MF alle mehr oder minder in der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m [01;33m(SIMPX[00m
			(SIMPX
				(VF ich)
				(LK kucke)
				(MF mir mal die preise)
				(VC an))[01;31m)[00m
		[01;31m(SU[00m
			(DM also)
			(SIMPX
				(VF das hotel cristal hannover)
				[01;31m(FKOORD[00m
					[01;31m(LKM[00m
						(LK ist)
						(MF vielleicht ein bischen teuer)[01;31m)[00m
					(LKM hat dafur)[01;31m)[00m) [01;33mSIMPX) SIMPX)[00m
			(ADVX aber)
			[01;31m(NX[00m
				(NX sauna)
				(NX solarium)
				(NX bar)
				(KON und)
				(NX bistro)[01;31m)[00m[01;31m)[00m))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['NX', 'NX', 'APPR'], 'mover info': [('APPR', (36, 37))], 'old_family': ['APPR', 'SIMPX'], 'start left siblings': [], 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'PIS', 'APPR', 'KOUS', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'VVFIN', 'PWAV', 'PPER', 'VVINF', 'VMFIN'), 'start right siblings': ['SIMPX'], 'end left siblings': ['NX', 'NX'], 'auto preterminal span': (32, 47), 'movers': ['APPR'], 'old_parent': 'PX', 'POS confusion': ('APPR', 'APPR'), 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP [01;33m(SU[00m
	(TURN
		(SU na ja das stimmt)
		[01;31m(SU[00m
			(DM ja) [01;33mSU)[00m
			(DM also)
			(SIMPX
				(KOORD und)
				(VF dann)
				(LK konnen)
				(MF
					(NX wir)
					(ADVX einfach)
					[01;36m(NX[00m
						(ART den)[01;36m)[00m))
			(SIMPX
				(VF dann)
				[01;31m(FKOORD[00m
					[01;31m(LKMVC[00m
						(LK brauchen)
						(MF wir uns jetzt vielleicht gar nicht)
						(VC festlegen)[01;31m)[00m[01;31m)[00m)[01;31m)[00m
		[01;31m(SU[00m
			(KON und)
			[01;31m(LKMN[00m
				(VXINF sagen)
				[01;31m(MF[00m
					(ADVX
						(ADV einfach))[01;31m)[00m
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						(VF wir)
						(LK fliegen)
						(VC zuruck)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			[01;36m(SU[00m
				(DM
					(ITJ gut))[01;36m)[00m
			(ADVX dann)
			[01;31m(SIMPX[00m
				(VF dann)
				(LK denke)
				(MF ich)
				(NF
					(SIMPX
						(VF dann)
						(LK haben)
						(MF wir alles auser)
						[01;36m(NF[00m [01;31m(PX[00m
							(SIMPX
								(C das)
								(MF wir immer noch nicht)
								(VC wissen)
								(NF wo wir ubernachten konnen))[01;31m)[00m[01;36m)[00m))[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK denke)
				(NF wir nehmen zusammen einfach ein hotel))[01;31m)[00m
		(SIMPX
			[01;31m(SU[00m
				(SIMPX
					(VF dann)
					(LK konnen)
					[01;36m(MVC[00m
						(MF
							(NX wir)
							(ADVX abends)
							(ADVX noch)
							[01;36m(NX[00m
								(NX ein bischen)
								(PX in der bar)[01;36m)[00m)
						(VC sitzen)[01;36m)[00m)
				[01;36m(NF[00m
					[01;36m(PX[00m
						[01;31m(KOORD[00m
							(KON oder)[01;31m)[00m
						[01;31m(VF[00m
							(PX
								(APPR auf)
								(NX alle falle))[01;31m)[00m[01;36m)[00m[01;36m)[00m
				(SIMPX treffen wir uns dann da)[01;31m)[00m)
		[01;31m(SU[00m
			(SIMPX
				[01;36m(SIMPX[00m
					(KOORD und)
					(VF ich)
					(LK habe)
					(MF hier eine liste)
					(VC vorbereitet)[01;36m)[00m
				(NF mit hotels))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK ist)
				(MF das marriotthotel hannover))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX das parkhotel hannover)
			[01;31m(NX[00m
				(ART das)
				(NX hotel cristal hannover)[01;31m)[00m
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(VF die)
				(LK sind)
				(MF alle mehr oder minder in der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m [01;33m(SIMPX[00m
			(SIMPX
				(VF ich)
				(LK kucke)
				(MF mir mal die preise)
				(VC an))[01;31m)[00m
		[01;31m(SU[00m
			(DM also)
			(SIMPX
				(VF das hotel cristal hannover)
				[01;31m(FKOORD[00m
					[01;31m(LKM[00m
						(LK ist)
						(MF vielleicht ein bischen teuer)[01;31m)[00m
					(LKM hat dafur)[01;31m)[00m) [01;33mSIMPX) SIMPX)[00m
			(ADVX aber)
			[01;31m(NX[00m
				(NX sauna)
				(NX solarium)
				(NX bar)
				(KON und)
				(NX bistro)[01;31m)[00m[01;31m)[00m))
Step:Different label
{'family': ['VF', 'LK', 'MF', 'NF'], 'auto preterminal span': (37, 47), 'span': (37, 47), 'subtrees': ['SIMPX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'VVFIN', 'PWAV', 'PPER', 'VVINF', 'VMFIN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('PX', 'NF')}
(TOP [01;33m(SU[00m
	(TURN
		(SU na ja das stimmt)
		[01;31m(SU[00m
			(DM ja) [01;33mSU)[00m
			(DM also)
			(SIMPX
				(KOORD und)
				(VF dann)
				(LK konnen)
				(MF
					(NX wir)
					(ADVX einfach)
					[01;36m(NX[00m
						(ART den)[01;36m)[00m))
			(SIMPX
				(VF dann)
				[01;31m(FKOORD[00m
					[01;31m(LKMVC[00m
						(LK brauchen)
						(MF wir uns jetzt vielleicht gar nicht)
						(VC festlegen)[01;31m)[00m[01;31m)[00m)[01;31m)[00m
		[01;31m(SU[00m
			(KON und)
			[01;31m(LKMN[00m
				(VXINF sagen)
				[01;31m(MF[00m
					(ADVX
						(ADV einfach))[01;31m)[00m
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						(VF wir)
						(LK fliegen)
						(VC zuruck)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			[01;36m(SU[00m
				(DM
					(ITJ gut))[01;36m)[00m
			(ADVX dann)
			[01;31m(SIMPX[00m
				(VF dann)
				(LK denke)
				(MF ich)
				(NF dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK denke)
				(NF wir nehmen zusammen einfach ein hotel))[01;31m)[00m
		(SIMPX
			[01;31m(SU[00m
				(SIMPX
					(VF dann)
					(LK konnen)
					[01;36m(MVC[00m
						(MF
							(NX wir)
							(ADVX abends)
							(ADVX noch)
							[01;36m(NX[00m
								(NX ein bischen)
								(PX in der bar)[01;36m)[00m)
						(VC sitzen)[01;36m)[00m)
				[01;36m(NF[00m
					[01;36m(PX[00m
						[01;31m(KOORD[00m
							(KON oder)[01;31m)[00m
						[01;31m(VF[00m
							(PX
								(APPR auf)
								(NX alle falle))[01;31m)[00m[01;36m)[00m[01;36m)[00m
				(SIMPX treffen wir uns dann da)[01;31m)[00m)
		[01;31m(SU[00m
			(SIMPX
				[01;36m(SIMPX[00m
					(KOORD und)
					(VF ich)
					(LK habe)
					(MF hier eine liste)
					(VC vorbereitet)[01;36m)[00m
				(NF mit hotels))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK ist)
				(MF das marriotthotel hannover))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX das parkhotel hannover)
			[01;31m(NX[00m
				(ART das)
				(NX hotel cristal hannover)[01;31m)[00m
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(VF die)
				(LK sind)
				(MF alle mehr oder minder in der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m [01;33m(SIMPX[00m
			(SIMPX
				(VF ich)
				(LK kucke)
				(MF mir mal die preise)
				(VC an))[01;31m)[00m
		[01;31m(SU[00m
			(DM also)
			(SIMPX
				(VF das hotel cristal hannover)
				[01;31m(FKOORD[00m
					[01;31m(LKM[00m
						(LK ist)
						(MF vielleicht ein bischen teuer)[01;31m)[00m
					(LKM hat dafur)[01;31m)[00m) [01;33mSIMPX) SIMPX)[00m
			(ADVX aber)
			[01;31m(NX[00m
				(NX sauna)
				(NX solarium)
				(NX bar)
				(KON und)
				(NX bistro)[01;31m)[00m[01;31m)[00m))
Step:Single Word Phrase
{'subtrees': ['ART'], 'family': ['NX', 'ADVX', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ART',), 'right siblings': [], 'left siblings': [(NX (PPER wir)), (ADVX (ADV einfach))], 'auto preterminal span': (11, 12), 'span': (11, 12), 'parent': 'MF', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP [01;33m(SU[00m
	(TURN
		(SU na ja das stimmt)
		[01;31m(SU[00m
			(DM ja) [01;33mSU)[00m
			(DM also)
			(SIMPX und dann konnen wir einfach den)
			(SIMPX
				(VF dann)
				[01;31m(FKOORD[00m
					[01;31m(LKMVC[00m
						(LK brauchen)
						(MF wir uns jetzt vielleicht gar nicht)
						(VC festlegen)[01;31m)[00m[01;31m)[00m)[01;31m)[00m
		[01;31m(SU[00m
			(KON und)
			[01;31m(LKMN[00m
				(VXINF sagen)
				[01;31m(MF[00m
					(ADVX
						(ADV einfach))[01;31m)[00m
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						(VF wir)
						(LK fliegen)
						(VC zuruck)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			[01;36m(SU[00m
				(DM
					(ITJ gut))[01;36m)[00m
			(ADVX dann)
			[01;31m(SIMPX[00m
				(VF dann)
				(LK denke)
				(MF ich)
				(NF dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK denke)
				(NF wir nehmen zusammen einfach ein hotel))[01;31m)[00m
		(SIMPX
			[01;31m(SU[00m
				(SIMPX
					(VF dann)
					(LK konnen)
					[01;36m(MVC[00m
						(MF
							(NX wir)
							(ADVX abends)
							(ADVX noch)
							[01;36m(NX[00m
								(NX ein bischen)
								(PX in der bar)[01;36m)[00m)
						(VC sitzen)[01;36m)[00m)
				[01;36m(NF[00m
					[01;36m(PX[00m
						[01;31m(KOORD[00m
							(KON oder)[01;31m)[00m
						[01;31m(VF[00m
							(PX
								(APPR auf)
								(NX alle falle))[01;31m)[00m[01;36m)[00m[01;36m)[00m
				(SIMPX treffen wir uns dann da)[01;31m)[00m)
		[01;31m(SU[00m
			(SIMPX
				[01;36m(SIMPX[00m
					(KOORD und)
					(VF ich)
					(LK habe)
					(MF hier eine liste)
					(VC vorbereitet)[01;36m)[00m
				(NF mit hotels))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK ist)
				(MF das marriotthotel hannover))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX das parkhotel hannover)
			[01;31m(NX[00m
				(ART das)
				(NX hotel cristal hannover)[01;31m)[00m
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(VF die)
				(LK sind)
				(MF alle mehr oder minder in der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m [01;33m(SIMPX[00m
			(SIMPX
				(VF ich)
				(LK kucke)
				(MF mir mal die preise)
				(VC an))[01;31m)[00m
		[01;31m(SU[00m
			(DM also)
			(SIMPX
				(VF das hotel cristal hannover)
				[01;31m(FKOORD[00m
					[01;31m(LKM[00m
						(LK ist)
						(MF vielleicht ein bischen teuer)[01;31m)[00m
					(LKM hat dafur)[01;31m)[00m) [01;33mSIMPX) SIMPX)[00m
			(ADVX aber)
			[01;31m(NX[00m
				(NX sauna)
				(NX solarium)
				(NX bar)
				(KON und)
				(NX bistro)[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['DM'], 'family': ['KON', 'LKMN', 'SU', 'ADVX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ',), 'right siblings': [(ADVX (ADV dann)), (SIMPX (VF (ADVX (ADV dann))) (LK (VXFIN (VVFIN denke))) (MF (NX (PPER ich))) (NF (SIMPX (VF (ADVX (ADV dann))) (LK (VXFIN (VAFIN haben))) (MF (NX (PPER wir)) (NX (PIS alles)) (APPR auser)) (NF (SIMPX (C (KOUS das)) (MF (NX (PPER wir)) (ADVX (ADV immer)) (ADVX (ADVX (ADV noch)) (PTKNEG nicht))) (VC (VXFIN (VVFIN wissen))) (NF (SIMPX (C (PX (PWAV wo))) (MF (NX (PPER wir))) (VC (VXINF (VVINF ubernachten)) (VXFIN (VMFIN konnen))))))))))], 'left siblings': [(KON und), (LKMN (VXINF (VC (VVFIN sagen))) (MF (ADVX (ADV einfach))) (NF (SIMPX (VF (NX (PPER wir))) (LK (VXFIN (VVFIN fliegen))) (VC (PTKVZ zuruck)))))], 'auto preterminal span': (27, 28), 'span': (27, 28), 'parent': 'SU', 'label': 'SU', 'classified_type': 'Unary', 'type': 'add'}
(TOP [01;33m(SU[00m
	(TURN
		(SU na ja das stimmt)
		[01;31m(SU[00m
			(DM ja) [01;33mSU)[00m
			(DM also)
			(SIMPX und dann konnen wir einfach den)
			(SIMPX
				(VF dann)
				[01;31m(FKOORD[00m
					[01;31m(LKMVC[00m
						(LK brauchen)
						(MF wir uns jetzt vielleicht gar nicht)
						(VC festlegen)[01;31m)[00m[01;31m)[00m)[01;31m)[00m
		[01;31m(SU[00m
			(KON und)
			[01;31m(LKMN[00m
				(VXINF sagen)
				[01;31m(MF[00m
					(ADVX
						(ADV einfach))[01;31m)[00m
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						(VF wir)
						(LK fliegen)
						(VC zuruck)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			(SU gut)
			(ADVX dann)
			[01;31m(SIMPX[00m
				(VF dann)
				(LK denke)
				(MF ich)
				(NF dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK denke)
				(NF wir nehmen zusammen einfach ein hotel))[01;31m)[00m
		(SIMPX
			[01;31m(SU[00m
				(SIMPX
					(VF dann)
					(LK konnen)
					[01;36m(MVC[00m
						(MF
							(NX wir)
							(ADVX abends)
							(ADVX noch)
							[01;36m(NX[00m
								(NX ein bischen)
								(PX in der bar)[01;36m)[00m)
						(VC sitzen)[01;36m)[00m)
				[01;36m(NF[00m
					[01;36m(PX[00m
						[01;31m(KOORD[00m
							(KON oder)[01;31m)[00m
						[01;31m(VF[00m
							(PX
								(APPR auf)
								(NX alle falle))[01;31m)[00m[01;36m)[00m[01;36m)[00m
				(SIMPX treffen wir uns dann da)[01;31m)[00m)
		[01;31m(SU[00m
			(SIMPX
				[01;36m(SIMPX[00m
					(KOORD und)
					(VF ich)
					(LK habe)
					(MF hier eine liste)
					(VC vorbereitet)[01;36m)[00m
				(NF mit hotels))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK ist)
				(MF das marriotthotel hannover))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX das parkhotel hannover)
			[01;31m(NX[00m
				(ART das)
				(NX hotel cristal hannover)[01;31m)[00m
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(VF die)
				(LK sind)
				(MF alle mehr oder minder in der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m [01;33m(SIMPX[00m
			(SIMPX
				(VF ich)
				(LK kucke)
				(MF mir mal die preise)
				(VC an))[01;31m)[00m
		[01;31m(SU[00m
			(DM also)
			(SIMPX
				(VF das hotel cristal hannover)
				[01;31m(FKOORD[00m
					[01;31m(LKM[00m
						(LK ist)
						(MF vielleicht ein bischen teuer)[01;31m)[00m
					(LKM hat dafur)[01;31m)[00m) [01;33mSIMPX) SIMPX)[00m
			(ADVX aber)
			[01;31m(NX[00m
				(NX sauna)
				(NX solarium)
				(NX bar)
				(KON und)
				(NX bistro)[01;31m)[00m[01;31m)[00m))
Step:UNSET add
{'subtrees': ['MF', 'VC'], 'family': ['VF', 'LK', 'MVC'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV', 'ADV', 'ART', 'PIS', 'APPR', 'ART', 'NN', 'VVINF'), 'right siblings': [], 'left siblings': [(VF (ADVX (ADV dann))), (LK (VXFIN (VMFIN konnen)))], 'auto preterminal span': (57, 66), 'span': (57, 66), 'parent': 'SIMPX', 'label': 'MVC', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP [01;33m(SU[00m
	(TURN
		(SU na ja das stimmt)
		[01;31m(SU[00m
			(DM ja) [01;33mSU)[00m
			(DM also)
			(SIMPX und dann konnen wir einfach den)
			(SIMPX
				(VF dann)
				[01;31m(FKOORD[00m
					[01;31m(LKMVC[00m
						(LK brauchen)
						(MF wir uns jetzt vielleicht gar nicht)
						(VC festlegen)[01;31m)[00m[01;31m)[00m)[01;31m)[00m
		[01;31m(SU[00m
			(KON und)
			[01;31m(LKMN[00m
				(VXINF sagen)
				[01;31m(MF[00m
					(ADVX
						(ADV einfach))[01;31m)[00m
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						(VF wir)
						(LK fliegen)
						(VC zuruck)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			(SU gut)
			(ADVX dann)
			[01;31m(SIMPX[00m
				(VF dann)
				(LK denke)
				(MF ich)
				(NF dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK denke)
				(NF wir nehmen zusammen einfach ein hotel))[01;31m)[00m
		(SIMPX
			[01;31m(SU[00m
				(SIMPX
					(VF dann)
					(LK konnen)
					(MVC
						(MF
							(NX wir)
							(ADVX abends)
							(ADVX noch)
							[01;36m(NX[00m
								(NX ein bischen)
								(PX in der bar)[01;36m)[00m)
						(VC sitzen)))
				[01;36m(NF[00m
					[01;36m(PX[00m
						[01;31m(KOORD[00m
							(KON oder)[01;31m)[00m
						[01;31m(VF[00m
							(PX
								(APPR auf)
								(NX alle falle))[01;31m)[00m[01;36m)[00m[01;36m)[00m
				(SIMPX treffen wir uns dann da)[01;31m)[00m)
		[01;31m(SU[00m
			(SIMPX
				[01;36m(SIMPX[00m
					(KOORD und)
					(VF ich)
					(LK habe)
					(MF hier eine liste)
					(VC vorbereitet)[01;36m)[00m
				(NF mit hotels))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK ist)
				(MF das marriotthotel hannover))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX das parkhotel hannover)
			[01;31m(NX[00m
				(ART das)
				(NX hotel cristal hannover)[01;31m)[00m
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(VF die)
				(LK sind)
				(MF alle mehr oder minder in der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m [01;33m(SIMPX[00m
			(SIMPX
				(VF ich)
				(LK kucke)
				(MF mir mal die preise)
				(VC an))[01;31m)[00m
		[01;31m(SU[00m
			(DM also)
			(SIMPX
				(VF das hotel cristal hannover)
				[01;31m(FKOORD[00m
					[01;31m(LKM[00m
						(LK ist)
						(MF vielleicht ein bischen teuer)[01;31m)[00m
					(LKM hat dafur)[01;31m)[00m) [01;33mSIMPX) SIMPX)[00m
			(ADVX aber)
			[01;31m(NX[00m
				(NX sauna)
				(NX solarium)
				(NX bar)
				(KON und)
				(NX bistro)[01;31m)[00m[01;31m)[00m))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['NX', 'ADVX', 'ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'PIS', 'APPR', 'ART', 'NN'), 'right siblings': [], 'left siblings': [(NX (PPER wir)), (ADVX (ADV abends)), (ADVX (ADV noch))], 'auto preterminal span': (60, 65), 'span': (60, 65), 'parent': 'MF', 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP [01;33m(SU[00m
	(TURN
		(SU na ja das stimmt)
		[01;31m(SU[00m
			(DM ja) [01;33mSU)[00m
			(DM also)
			(SIMPX und dann konnen wir einfach den)
			(SIMPX
				(VF dann)
				[01;31m(FKOORD[00m
					[01;31m(LKMVC[00m
						(LK brauchen)
						(MF wir uns jetzt vielleicht gar nicht)
						(VC festlegen)[01;31m)[00m[01;31m)[00m)[01;31m)[00m
		[01;31m(SU[00m
			(KON und)
			[01;31m(LKMN[00m
				(VXINF sagen)
				[01;31m(MF[00m
					(ADVX
						(ADV einfach))[01;31m)[00m
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						(VF wir)
						(LK fliegen)
						(VC zuruck)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			(SU gut)
			(ADVX dann)
			[01;31m(SIMPX[00m
				(VF dann)
				(LK denke)
				(MF ich)
				(NF dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK denke)
				(NF wir nehmen zusammen einfach ein hotel))[01;31m)[00m
		(SIMPX
			[01;31m(SU[00m
				(SIMPX dann konnen wir abends noch ein bischen in der bar sitzen)
				[01;36m(NF[00m
					[01;36m(PX[00m
						[01;31m(KOORD[00m
							(KON oder)[01;31m)[00m
						[01;31m(VF[00m
							(PX
								(APPR auf)
								(NX alle falle))[01;31m)[00m[01;36m)[00m[01;36m)[00m
				(SIMPX treffen wir uns dann da)[01;31m)[00m)
		[01;31m(SU[00m
			(SIMPX
				[01;36m(SIMPX[00m
					(KOORD und)
					(VF ich)
					(LK habe)
					(MF hier eine liste)
					(VC vorbereitet)[01;36m)[00m
				(NF mit hotels))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK ist)
				(MF das marriotthotel hannover))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX das parkhotel hannover)
			[01;31m(NX[00m
				(ART das)
				(NX hotel cristal hannover)[01;31m)[00m
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(VF die)
				(LK sind)
				(MF alle mehr oder minder in der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m [01;33m(SIMPX[00m
			(SIMPX
				(VF ich)
				(LK kucke)
				(MF mir mal die preise)
				(VC an))[01;31m)[00m
		[01;31m(SU[00m
			(DM also)
			(SIMPX
				(VF das hotel cristal hannover)
				[01;31m(FKOORD[00m
					[01;31m(LKM[00m
						(LK ist)
						(MF vielleicht ein bischen teuer)[01;31m)[00m
					(LKM hat dafur)[01;31m)[00m) [01;33mSIMPX) SIMPX)[00m
			(ADVX aber)
			[01;31m(NX[00m
				(NX sauna)
				(NX solarium)
				(NX bar)
				(KON und)
				(NX bistro)[01;31m)[00m[01;31m)[00m))
Step:UNSET add
{'subtrees': ['KOORD', 'VF'], 'family': ['SIMPX', 'PX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'APPR', 'PIDAT', 'NN'), 'right siblings': [(SIMPX (LK (VXFIN (VVFIN treffen))) (MF (NX (PPER wir)) (NX (PRF uns)) (ADVX (ADV dann)) (ADVX (ADV da))))], 'left siblings': [(SIMPX (VF (ADVX (ADV dann))) (LK (VXFIN (VMFIN konnen))) (MVC (MF (NX (PPER wir)) (ADVX (ADV abends)) (ADVX (ADV noch)) (NX (NX (ART ein) (PIS bischen)) (PX (APPR in) (NX (ART der) (NN bar))))) (VC (VXINF (VVINF sitzen)))))], 'auto preterminal span': (66, 70), 'span': (66, 70), 'parent': 'SU', 'label': 'PX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP [01;33m(SU[00m
	(TURN
		(SU na ja das stimmt)
		[01;31m(SU[00m
			(DM ja) [01;33mSU)[00m
			(DM also)
			(SIMPX und dann konnen wir einfach den)
			(SIMPX
				(VF dann)
				[01;31m(FKOORD[00m
					[01;31m(LKMVC[00m
						(LK brauchen)
						(MF wir uns jetzt vielleicht gar nicht)
						(VC festlegen)[01;31m)[00m[01;31m)[00m)[01;31m)[00m
		[01;31m(SU[00m
			(KON und)
			[01;31m(LKMN[00m
				(VXINF sagen)
				[01;31m(MF[00m
					(ADVX
						(ADV einfach))[01;31m)[00m
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						(VF wir)
						(LK fliegen)
						(VC zuruck)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			(SU gut)
			(ADVX dann)
			[01;31m(SIMPX[00m
				(VF dann)
				(LK denke)
				(MF ich)
				(NF dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK denke)
				(NF wir nehmen zusammen einfach ein hotel))[01;31m)[00m
		(SIMPX
			[01;31m(SU[00m
				(SIMPX dann konnen wir abends noch ein bischen in der bar sitzen)
				[01;36m(NF[00m
					(PX
						[01;31m(KOORD[00m
							(KON oder)[01;31m)[00m
						[01;31m(VF[00m
							(PX
								(APPR auf)
								(NX alle falle))[01;31m)[00m)[01;36m)[00m
				(SIMPX treffen wir uns dann da)[01;31m)[00m)
		[01;31m(SU[00m
			(SIMPX
				[01;36m(SIMPX[00m
					(KOORD und)
					(VF ich)
					(LK habe)
					(MF hier eine liste)
					(VC vorbereitet)[01;36m)[00m
				(NF mit hotels))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK ist)
				(MF das marriotthotel hannover))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX das parkhotel hannover)
			[01;31m(NX[00m
				(ART das)
				(NX hotel cristal hannover)[01;31m)[00m
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(VF die)
				(LK sind)
				(MF alle mehr oder minder in der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m [01;33m(SIMPX[00m
			(SIMPX
				(VF ich)
				(LK kucke)
				(MF mir mal die preise)
				(VC an))[01;31m)[00m
		[01;31m(SU[00m
			(DM also)
			(SIMPX
				(VF das hotel cristal hannover)
				[01;31m(FKOORD[00m
					[01;31m(LKM[00m
						(LK ist)
						(MF vielleicht ein bischen teuer)[01;31m)[00m
					(LKM hat dafur)[01;31m)[00m) [01;33mSIMPX) SIMPX)[00m
			(ADVX aber)
			[01;31m(NX[00m
				(NX sauna)
				(NX solarium)
				(NX bar)
				(KON und)
				(NX bistro)[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['PX'], 'family': ['SIMPX', 'NF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'APPR', 'PIDAT', 'NN'), 'right siblings': [(SIMPX (LK (VXFIN (VVFIN treffen))) (MF (NX (PPER wir)) (NX (PRF uns)) (ADVX (ADV dann)) (ADVX (ADV da))))], 'left siblings': [(SIMPX (VF (ADVX (ADV dann))) (LK (VXFIN (VMFIN konnen))) (MVC (MF (NX (PPER wir)) (ADVX (ADV abends)) (ADVX (ADV noch)) (NX (NX (ART ein) (PIS bischen)) (PX (APPR in) (NX (ART der) (NN bar))))) (VC (VXINF (VVINF sitzen)))))], 'auto preterminal span': (66, 70), 'span': (66, 70), 'parent': 'SU', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP [01;33m(SU[00m
	(TURN
		(SU na ja das stimmt)
		[01;31m(SU[00m
			(DM ja) [01;33mSU)[00m
			(DM also)
			(SIMPX und dann konnen wir einfach den)
			(SIMPX
				(VF dann)
				[01;31m(FKOORD[00m
					[01;31m(LKMVC[00m
						(LK brauchen)
						(MF wir uns jetzt vielleicht gar nicht)
						(VC festlegen)[01;31m)[00m[01;31m)[00m)[01;31m)[00m
		[01;31m(SU[00m
			(KON und)
			[01;31m(LKMN[00m
				(VXINF sagen)
				[01;31m(MF[00m
					(ADVX
						(ADV einfach))[01;31m)[00m
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						(VF wir)
						(LK fliegen)
						(VC zuruck)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			(SU gut)
			(ADVX dann)
			[01;31m(SIMPX[00m
				(VF dann)
				(LK denke)
				(MF ich)
				(NF dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK denke)
				(NF wir nehmen zusammen einfach ein hotel))[01;31m)[00m
		(SIMPX
			[01;31m(SU[00m
				(SIMPX dann konnen wir abends noch ein bischen in der bar sitzen)
				(NF
					(PX
						[01;31m(KOORD[00m
							(KON oder)[01;31m)[00m
						[01;31m(VF[00m
							(PX
								(APPR auf)
								(NX alle falle))[01;31m)[00m))
				(SIMPX treffen wir uns dann da)[01;31m)[00m)
		[01;31m(SU[00m
			(SIMPX
				[01;36m(SIMPX[00m
					(KOORD und)
					(VF ich)
					(LK habe)
					(MF hier eine liste)
					(VC vorbereitet)[01;36m)[00m
				(NF mit hotels))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK ist)
				(MF das marriotthotel hannover))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX das parkhotel hannover)
			[01;31m(NX[00m
				(ART das)
				(NX hotel cristal hannover)[01;31m)[00m
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(VF die)
				(LK sind)
				(MF alle mehr oder minder in der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m [01;33m(SIMPX[00m
			(SIMPX
				(VF ich)
				(LK kucke)
				(MF mir mal die preise)
				(VC an))[01;31m)[00m
		[01;31m(SU[00m
			(DM also)
			(SIMPX
				(VF das hotel cristal hannover)
				[01;31m(FKOORD[00m
					[01;31m(LKM[00m
						(LK ist)
						(MF vielleicht ein bischen teuer)[01;31m)[00m
					(LKM hat dafur)[01;31m)[00m) [01;33mSIMPX) SIMPX)[00m
			(ADVX aber)
			[01;31m(NX[00m
				(NX sauna)
				(NX solarium)
				(NX bar)
				(KON und)
				(NX bistro)[01;31m)[00m[01;31m)[00m))
Step:UNSET add
{'subtrees': ['KOORD', 'VF', 'LK', 'MF', 'VC'], 'family': ['SIMPX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'VVPP'), 'right siblings': [(NF (PX (APPR mit) (NX (NN hotels))))], 'left siblings': [], 'auto preterminal span': (75, 82), 'span': (75, 82), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP [01;33m(SU[00m
	(TURN
		(SU na ja das stimmt)
		[01;31m(SU[00m
			(DM ja) [01;33mSU)[00m
			(DM also)
			(SIMPX und dann konnen wir einfach den)
			(SIMPX
				(VF dann)
				[01;31m(FKOORD[00m
					[01;31m(LKMVC[00m
						(LK brauchen)
						(MF wir uns jetzt vielleicht gar nicht)
						(VC festlegen)[01;31m)[00m[01;31m)[00m)[01;31m)[00m
		[01;31m(SU[00m
			(KON und)
			[01;31m(LKMN[00m
				(VXINF sagen)
				[01;31m(MF[00m
					(ADVX
						(ADV einfach))[01;31m)[00m
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						(VF wir)
						(LK fliegen)
						(VC zuruck)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			(SU gut)
			(ADVX dann)
			[01;31m(SIMPX[00m
				(VF dann)
				(LK denke)
				(MF ich)
				(NF dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK denke)
				(NF wir nehmen zusammen einfach ein hotel))[01;31m)[00m
		(SIMPX
			[01;31m(SU[00m
				(SIMPX dann konnen wir abends noch ein bischen in der bar sitzen)
				(NF
					(PX
						[01;31m(KOORD[00m
							(KON oder)[01;31m)[00m
						[01;31m(VF[00m
							(PX
								(APPR auf)
								(NX alle falle))[01;31m)[00m))
				(SIMPX treffen wir uns dann da)[01;31m)[00m)
		[01;31m(SU[00m
			(SIMPX
				(SIMPX und ich habe hier eine liste vorbereitet)
				(NF mit hotels))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK ist)
				(MF das marriotthotel hannover))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX das parkhotel hannover)
			[01;31m(NX[00m
				(ART das)
				(NX hotel cristal hannover)[01;31m)[00m
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(VF die)
				(LK sind)
				(MF alle mehr oder minder in der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m [01;33m(SIMPX[00m
			(SIMPX
				(VF ich)
				(LK kucke)
				(MF mir mal die preise)
				(VC an))[01;31m)[00m
		[01;31m(SU[00m
			(DM also)
			(SIMPX
				(VF das hotel cristal hannover)
				[01;31m(FKOORD[00m
					[01;31m(LKM[00m
						(LK ist)
						(MF vielleicht ein bischen teuer)[01;31m)[00m
					(LKM hat dafur)[01;31m)[00m) [01;33mSIMPX) SIMPX)[00m
			(ADVX aber)
			[01;31m(NX[00m
				(NX sauna)
				(NX solarium)
				(NX bar)
				(KON und)
				(NX bistro)[01;31m)[00m[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['DM', 'DM', 'SIMPX', 'SIMPX'], 'family': ['SU', 'SU', 'SU', 'SU', 'SIMPX', 'SU', 'SU', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PTKANT', 'PDS', 'VVFIN', 'PTKANT', 'ADV', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ART', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'VVFIN', 'ADV', 'PPER', 'VVFIN', 'PTKVZ', 'ITJ', 'ADV', 'ADV', 'VVFIN', 'PPER', 'ADV', 'VAFIN', 'PPER', 'PIS', 'APPR', 'KOUS', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'VVFIN', 'PWAV', 'PPER', 'VVINF', 'VMFIN', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'APPR', 'PIDAT', 'NN', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'KON', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'VVPP', 'APPR', 'NN', 'PDS', 'VAFIN', 'ART', 'NE', 'NE', 'ART', 'NE', 'NE', 'ART', 'NN', 'NE', 'NE', 'PDS', 'VAFIN', 'PIS', 'ADV', 'KON', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'PPER', 'VVFIN', 'PRF', 'ADV', 'ART', 'NN', 'PTKVZ', 'ADV', 'ART', 'NN', 'NE', 'NE', 'VAFIN', 'ADV', 'ART', 'PIS', 'ADJD', 'VAFIN', 'PROP', 'ADV', 'NN', 'NN', 'NN', 'KON', 'NN'), 'right siblings': ['SU', 'SU', 'SIMPX', 'SU', 'SU', 'SU', 'SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 132), 'span': (4, 21), 'left siblings': ['SU'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		[01;36m(SU[00m
			(SU na ja das stimmt)
			(DM ja)[01;36m)[00m
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX
			(VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK brauchen)
					(MF wir uns jetzt vielleicht gar nicht)
					(VC festlegen)[01;31m)[00m[01;31m)[00m)
		[01;31m(SU[00m
			(KON und)
			[01;31m(LKMN[00m
				(VXINF sagen)
				[01;31m(MF[00m
					(ADVX
						(ADV einfach))[01;31m)[00m
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						(VF wir)
						(LK fliegen)
						(VC zuruck)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			(SU gut)
			(ADVX dann)
			[01;31m(SIMPX[00m
				(VF dann)
				(LK denke)
				(MF ich)
				(NF dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK denke)
				(NF wir nehmen zusammen einfach ein hotel))[01;31m)[00m
		(SIMPX
			[01;31m(SU[00m
				(SIMPX dann konnen wir abends noch ein bischen in der bar sitzen)
				(NF
					(PX
						[01;31m(KOORD[00m
							(KON oder)[01;31m)[00m
						[01;31m(VF[00m
							(PX
								(APPR auf)
								(NX alle falle))[01;31m)[00m))
				(SIMPX treffen wir uns dann da)[01;31m)[00m)
		[01;31m(SU[00m
			(SIMPX
				(SIMPX und ich habe hier eine liste vorbereitet)
				(NF mit hotels))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK ist)
				(MF das marriotthotel hannover))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX das parkhotel hannover)
			[01;31m(NX[00m
				(ART das)
				(NX hotel cristal hannover)[01;31m)[00m
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(VF die)
				(LK sind)
				(MF alle mehr oder minder in der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m [01;33m(SIMPX[00m
			(SIMPX
				(VF ich)
				(LK kucke)
				(MF mir mal die preise)
				(VC an))[01;31m)[00m
		[01;31m(SU[00m
			(DM also)
			(SIMPX
				(VF das hotel cristal hannover)
				[01;31m(FKOORD[00m
					[01;31m(LKM[00m
						(LK ist)
						(MF vielleicht ein bischen teuer)[01;31m)[00m
					(LKM hat dafur)[01;31m)[00m) [01;33mSIMPX) SIMPX)[00m
			(ADVX aber)
			[01;31m(NX[00m
				(NX sauna)
				(NX solarium)
				(NX bar)
				(KON und)
				(NX bistro)[01;31m)[00m[01;31m)[00m))
Step:UNSET add
{'subtrees': ['SU', 'DM'], 'family': ['SU', 'DM', 'SIMPX', 'SIMPX', 'SU', 'SU', 'SIMPX', 'SU', 'SU', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PTKANT', 'PDS', 'VVFIN', 'PTKANT'), 'right siblings': [(DM (ADVX (ADV also))), (SIMPX (KOORD (KON und)) (VF (ADVX (ADV dann))) (LK (VXFIN (VMFIN konnen))) (MF (NX (PPER wir)) (ADVX (ADV einfach)) (NX (ART den)))), (SIMPX (VF (ADVX (ADV dann))) (FKOORD (LKMVC (LK (VXFIN (VVFIN brauchen))) (MF (NX (PPER wir)) (NX (PRF uns)) (ADVX (ADV jetzt)) (ADVX (ADV vielleicht)) (ADVX (ADVX (ADV gar)) (PTKNEG nicht))) (VC (VXINF (VVINF festlegen)))))), (SU (KON und) (LKMN (VXINF (VC (VVFIN sagen))) (MF (ADVX (ADV einfach))) (NF (SIMPX (VF (NX (PPER wir))) (LK (VXFIN (VVFIN fliegen))) (VC (PTKVZ zuruck))))) (SU (DM (ITJ gut))) (ADVX (ADV dann)) (SIMPX (VF (ADVX (ADV dann))) (LK (VXFIN (VVFIN denke))) (MF (NX (PPER ich))) (NF (SIMPX (VF (ADVX (ADV dann))) (LK (VXFIN (VAFIN haben))) (MF (NX (PPER wir)) (NX (PIS alles)) (APPR auser)) (NF (SIMPX (C (KOUS das)) (MF (NX (PPER wir)) (ADVX (ADV immer)) (ADVX (ADVX (ADV noch)) (PTKNEG nicht))) (VC (VXFIN (VVFIN wissen))) (NF (SIMPX (C (PX (PWAV wo))) (MF (NX (PPER wir))) (VC (VXINF (VVINF ubernachten)) (VXFIN (VMFIN konnen))))))))))), (SU (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN denke))) (NF (SIMPX (VF (NX (PPER wir))) (LK (VXFIN (VVFIN nehmen))) (MF (ADVX (ADV zusammen)) (ADVX (ADV einfach)) (NX (ART ein) (NN hotel))))))), (SIMPX (SU (SIMPX (VF (ADVX (ADV dann))) (LK (VXFIN (VMFIN konnen))) (MVC (MF (NX (PPER wir)) (ADVX (ADV abends)) (ADVX (ADV noch)) (NX (NX (ART ein) (PIS bischen)) (PX (APPR in) (NX (ART der) (NN bar))))) (VC (VXINF (VVINF sitzen))))) (NF (PX (KOORD (KON oder)) (VF (PX (APPR auf) (NX (PIDAT alle) (NN falle)))))) (SIMPX (LK (VXFIN (VVFIN treffen))) (MF (NX (PPER wir)) (NX (PRF uns)) (ADVX (ADV dann)) (ADVX (ADV da)))))), (SU (SIMPX (SIMPX (KOORD (KON und)) (VF (NX (PPER ich))) (LK (VXFIN (VAFIN habe))) (MF (ADVX (ADV hier)) (NX (ART eine) (NN liste))) (VC (VXINF (VVPP vorbereitet)))) (NF (PX (APPR mit) (NX (NN hotels)))))), (SU (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VAFIN ist))) (MF (NX (ART das) (NX (NX (NE marriotthotel)) (NX (NE hannover))))))), (SU (SIMPX (ART das) (NX (NX (NE parkhotel)) (NX (NE hannover)))) (NX (ART das) (NX (NX (NN hotel)) (NX (NX (NE cristal)) (NX (NE hannover))))) (SIMPX (VF (NX (PDS die))) (LK (VXFIN (VAFIN sind))) (MF (NX (PIS alle)) (ADVX (ADVX (ADV mehr)) (KON oder) (ADVX (ADV minder))) (PX (APPR in) (NX (NX (ART der) (NN nahe)) (PX (APPRART vom) (NX (NN hauptbahnhof)))))))), (SU (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN kucke))) (MF (NX (PRF mir)) (ADVX (ADV mal)) (NX (ART die) (NN preise))) (VC (PTKVZ an)))), (SU (DM (ADVX (ADV also))) (SIMPX (VF (NX (ART das) (NX (NX (NN hotel)) (NX (NX (NE cristal)) (NX (NE hannover)))))) (FKOORD (LKM (LK (VXFIN (VAFIN ist))) (MF (ADVX (ADV vielleicht)) (ADJX (NX (ART ein) (PIS bischen)) (ADJD teuer)))) (LKM (LK (VXFIN (VAFIN hat))) (MF (NX (PROP dafur)))))) (ADVX (ADV aber)) (NX (NX (NN sauna)) (NX (NN solarium)) (NX (NN bar)) (KON und) (NX (NN bistro))))], 'left siblings': [], 'auto preterminal span': (0, 5), 'span': (0, 5), 'parent': 'TURN', 'label': 'SU', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU na ja das stimmt ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX
			(VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK brauchen)
					(MF wir uns jetzt vielleicht gar nicht)
					(VC festlegen)[01;31m)[00m[01;31m)[00m)
		[01;31m(SU[00m
			(KON und)
			[01;31m(LKMN[00m
				(VXINF sagen)
				[01;31m(MF[00m
					(ADVX
						(ADV einfach))[01;31m)[00m
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						(VF wir)
						(LK fliegen)
						(VC zuruck)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			(SU gut)
			(ADVX dann)
			[01;31m(SIMPX[00m
				(VF dann)
				(LK denke)
				(MF ich)
				(NF dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK denke)
				(NF wir nehmen zusammen einfach ein hotel))[01;31m)[00m
		(SIMPX
			[01;31m(SU[00m
				(SIMPX dann konnen wir abends noch ein bischen in der bar sitzen)
				(NF
					(PX
						[01;31m(KOORD[00m
							(KON oder)[01;31m)[00m
						[01;31m(VF[00m
							(PX
								(APPR auf)
								(NX alle falle))[01;31m)[00m))
				(SIMPX treffen wir uns dann da)[01;31m)[00m)
		[01;31m(SU[00m
			(SIMPX
				(SIMPX und ich habe hier eine liste vorbereitet)
				(NF mit hotels))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK ist)
				(MF das marriotthotel hannover))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX das parkhotel hannover)
			[01;31m(NX[00m
				(ART das)
				(NX hotel cristal hannover)[01;31m)[00m
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(VF die)
				(LK sind)
				(MF alle mehr oder minder in der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m [01;33m(SIMPX[00m
			(SIMPX
				(VF ich)
				(LK kucke)
				(MF mir mal die preise)
				(VC an))[01;31m)[00m
		[01;31m(SU[00m
			(DM also)
			(SIMPX
				(VF das hotel cristal hannover)
				[01;31m(FKOORD[00m
					[01;31m(LKM[00m
						(LK ist)
						(MF vielleicht ein bischen teuer)[01;31m)[00m
					(LKM hat dafur)[01;31m)[00m) [01;33mSIMPX) SIMPX)[00m
			(ADVX aber)
			[01;31m(NX[00m
				(NX sauna)
				(NX solarium)
				(NX bar)
				(KON und)
				(NX bistro)[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['LK', 'MF', 'VC'], 'family': ['LKMVC'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'VVINF'), 'right siblings': [], 'parent': 'FKOORD', 'auto preterminal span': (13, 21), 'span': (13, 21), 'left siblings': [], 'label': 'LKMVC', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU na ja das stimmt ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX
			(VF dann)
			[01;31m(FKOORD[00m
				(LK brauchen)
				(MF wir uns jetzt vielleicht gar nicht)
				(VC festlegen)[01;31m)[00m)
		[01;31m(SU[00m
			(KON und)
			[01;31m(LKMN[00m
				(VXINF sagen)
				[01;31m(MF[00m
					(ADVX
						(ADV einfach))[01;31m)[00m
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						(VF wir)
						(LK fliegen)
						(VC zuruck)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			(SU gut)
			(ADVX dann)
			[01;31m(SIMPX[00m
				(VF dann)
				(LK denke)
				(MF ich)
				(NF dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK denke)
				(NF wir nehmen zusammen einfach ein hotel))[01;31m)[00m
		(SIMPX
			[01;31m(SU[00m
				(SIMPX dann konnen wir abends noch ein bischen in der bar sitzen)
				(NF
					(PX
						[01;31m(KOORD[00m
							(KON oder)[01;31m)[00m
						[01;31m(VF[00m
							(PX
								(APPR auf)
								(NX alle falle))[01;31m)[00m))
				(SIMPX treffen wir uns dann da)[01;31m)[00m)
		[01;31m(SU[00m
			(SIMPX
				(SIMPX und ich habe hier eine liste vorbereitet)
				(NF mit hotels))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK ist)
				(MF das marriotthotel hannover))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX das parkhotel hannover)
			[01;31m(NX[00m
				(ART das)
				(NX hotel cristal hannover)[01;31m)[00m
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(VF die)
				(LK sind)
				(MF alle mehr oder minder in der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m [01;33m(SIMPX[00m
			(SIMPX
				(VF ich)
				(LK kucke)
				(MF mir mal die preise)
				(VC an))[01;31m)[00m
		[01;31m(SU[00m
			(DM also)
			(SIMPX
				(VF das hotel cristal hannover)
				[01;31m(FKOORD[00m
					[01;31m(LKM[00m
						(LK ist)
						(MF vielleicht ein bischen teuer)[01;31m)[00m
					(LKM hat dafur)[01;31m)[00m) [01;33mSIMPX) SIMPX)[00m
			(ADVX aber)
			[01;31m(NX[00m
				(NX sauna)
				(NX solarium)
				(NX bar)
				(KON und)
				(NX bistro)[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['LK', 'MF', 'VC'], 'family': ['VF', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'VVINF'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (12, 21), 'span': (13, 21), 'left siblings': ['VF'], 'label': 'FKOORD', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU na ja das stimmt ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen)
		[01;31m(SU[00m
			(KON und)
			[01;31m(LKMN[00m
				(VXINF sagen)
				[01;31m(MF[00m
					(ADVX
						(ADV einfach))[01;31m)[00m
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						(VF wir)
						(LK fliegen)
						(VC zuruck)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			(SU gut)
			(ADVX dann)
			[01;31m(SIMPX[00m
				(VF dann)
				(LK denke)
				(MF ich)
				(NF dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK denke)
				(NF wir nehmen zusammen einfach ein hotel))[01;31m)[00m
		(SIMPX
			[01;31m(SU[00m
				(SIMPX dann konnen wir abends noch ein bischen in der bar sitzen)
				(NF
					(PX
						[01;31m(KOORD[00m
							(KON oder)[01;31m)[00m
						[01;31m(VF[00m
							(PX
								(APPR auf)
								(NX alle falle))[01;31m)[00m))
				(SIMPX treffen wir uns dann da)[01;31m)[00m)
		[01;31m(SU[00m
			(SIMPX
				(SIMPX und ich habe hier eine liste vorbereitet)
				(NF mit hotels))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK ist)
				(MF das marriotthotel hannover))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX das parkhotel hannover)
			[01;31m(NX[00m
				(ART das)
				(NX hotel cristal hannover)[01;31m)[00m
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(VF die)
				(LK sind)
				(MF alle mehr oder minder in der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m [01;33m(SIMPX[00m
			(SIMPX
				(VF ich)
				(LK kucke)
				(MF mir mal die preise)
				(VC an))[01;31m)[00m
		[01;31m(SU[00m
			(DM also)
			(SIMPX
				(VF das hotel cristal hannover)
				[01;31m(FKOORD[00m
					[01;31m(LKM[00m
						(LK ist)
						(MF vielleicht ein bischen teuer)[01;31m)[00m
					(LKM hat dafur)[01;31m)[00m) [01;33mSIMPX) SIMPX)[00m
			(ADVX aber)
			[01;31m(NX[00m
				(NX sauna)
				(NX solarium)
				(NX bar)
				(KON und)
				(NX bistro)[01;31m)[00m[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['KON', 'LKMN', 'SU', 'ADVX', 'SIMPX'], 'family': ['SU', 'DM', 'SIMPX', 'SIMPX', 'SU', 'SU', 'SIMPX', 'SU', 'SU', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PTKANT', 'PDS', 'VVFIN', 'PTKANT', 'ADV', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ART', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'VVFIN', 'ADV', 'PPER', 'VVFIN', 'PTKVZ', 'ITJ', 'ADV', 'ADV', 'VVFIN', 'PPER', 'ADV', 'VAFIN', 'PPER', 'PIS', 'APPR', 'KOUS', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'VVFIN', 'PWAV', 'PPER', 'VVINF', 'VMFIN', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'APPR', 'PIDAT', 'NN', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'KON', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'VVPP', 'APPR', 'NN', 'PDS', 'VAFIN', 'ART', 'NE', 'NE', 'ART', 'NE', 'NE', 'ART', 'NN', 'NE', 'NE', 'PDS', 'VAFIN', 'PIS', 'ADV', 'KON', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'PPER', 'VVFIN', 'PRF', 'ADV', 'ART', 'NN', 'PTKVZ', 'ADV', 'ART', 'NN', 'NE', 'NE', 'VAFIN', 'ADV', 'ART', 'PIS', 'ADJD', 'VAFIN', 'PROP', 'ADV', 'NN', 'NN', 'NN', 'KON', 'NN'), 'right siblings': ['SU', 'SIMPX', 'SU', 'SU', 'SU', 'SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 132), 'span': (21, 47), 'left siblings': ['SU', 'DM', 'SIMPX', 'SIMPX'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU na ja das stimmt ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen)
		(KON und)
		[01;31m(LKMN[00m
			(VXINF sagen)
			[01;31m(MF[00m
				(ADVX
					(ADV einfach))[01;31m)[00m
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					(VF wir)
					(LK fliegen)
					(VC zuruck)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SU gut)
		(ADVX dann)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK denke)
			(MF ich)
			(NF dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK denke)
				(NF wir nehmen zusammen einfach ein hotel))[01;31m)[00m
		(SIMPX
			[01;31m(SU[00m
				(SIMPX dann konnen wir abends noch ein bischen in der bar sitzen)
				(NF
					(PX
						[01;31m(KOORD[00m
							(KON oder)[01;31m)[00m
						[01;31m(VF[00m
							(PX
								(APPR auf)
								(NX alle falle))[01;31m)[00m))
				(SIMPX treffen wir uns dann da)[01;31m)[00m)
		[01;31m(SU[00m
			(SIMPX
				(SIMPX und ich habe hier eine liste vorbereitet)
				(NF mit hotels))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK ist)
				(MF das marriotthotel hannover))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX das parkhotel hannover)
			[01;31m(NX[00m
				(ART das)
				(NX hotel cristal hannover)[01;31m)[00m
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(VF die)
				(LK sind)
				(MF alle mehr oder minder in der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m [01;33m(SIMPX[00m
			(SIMPX
				(VF ich)
				(LK kucke)
				(MF mir mal die preise)
				(VC an))[01;31m)[00m
		[01;31m(SU[00m
			(DM also)
			(SIMPX
				(VF das hotel cristal hannover)
				[01;31m(FKOORD[00m
					[01;31m(LKM[00m
						(LK ist)
						(MF vielleicht ein bischen teuer)[01;31m)[00m
					(LKM hat dafur)[01;31m)[00m) [01;33mSIMPX) SIMPX)[00m
			(ADVX aber)
			[01;31m(NX[00m
				(NX sauna)
				(NX solarium)
				(NX bar)
				(KON und)
				(NX bistro)[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VXINF', 'MF', 'NF'], 'family': ['SU', 'DM', 'SIMPX', 'SIMPX', 'KON', 'LKMN', 'SU', 'ADVX', 'SIMPX', 'SU', 'SIMPX', 'SU', 'SU', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PTKANT', 'PDS', 'VVFIN', 'PTKANT', 'ADV', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ART', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'VVFIN', 'ADV', 'PPER', 'VVFIN', 'PTKVZ', 'ITJ', 'ADV', 'ADV', 'VVFIN', 'PPER', 'ADV', 'VAFIN', 'PPER', 'PIS', 'APPR', 'KOUS', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'VVFIN', 'PWAV', 'PPER', 'VVINF', 'VMFIN', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'APPR', 'PIDAT', 'NN', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'KON', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'VVPP', 'APPR', 'NN', 'PDS', 'VAFIN', 'ART', 'NE', 'NE', 'ART', 'NE', 'NE', 'ART', 'NN', 'NE', 'NE', 'PDS', 'VAFIN', 'PIS', 'ADV', 'KON', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'PPER', 'VVFIN', 'PRF', 'ADV', 'ART', 'NN', 'PTKVZ', 'ADV', 'ART', 'NN', 'NE', 'NE', 'VAFIN', 'ADV', 'ART', 'PIS', 'ADJD', 'VAFIN', 'PROP', 'ADV', 'NN', 'NN', 'NN', 'KON', 'NN'), 'right siblings': ['SU', 'ADVX', 'SIMPX', 'SU', 'SIMPX', 'SU', 'SU', 'SU', 'SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 132), 'span': (22, 27), 'left siblings': ['SU', 'DM', 'SIMPX', 'SIMPX', 'KON'], 'label': 'LKMN', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU na ja das stimmt ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen)
		(KON und)
		(VXINF sagen)
		[01;31m(MF[00m
			(ADVX
				(ADV einfach))[01;31m)[00m
		[01;31m(NF[00m
			[01;31m(SIMPX[00m
				(VF wir)
				(LK fliegen)
				(VC zuruck)[01;31m)[00m[01;31m)[00m
		(SU gut)
		(ADVX dann)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK denke)
			(MF ich)
			(NF dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK denke)
				(NF wir nehmen zusammen einfach ein hotel))[01;31m)[00m
		(SIMPX
			[01;31m(SU[00m
				(SIMPX dann konnen wir abends noch ein bischen in der bar sitzen)
				(NF
					(PX
						[01;31m(KOORD[00m
							(KON oder)[01;31m)[00m
						[01;31m(VF[00m
							(PX
								(APPR auf)
								(NX alle falle))[01;31m)[00m))
				(SIMPX treffen wir uns dann da)[01;31m)[00m)
		[01;31m(SU[00m
			(SIMPX
				(SIMPX und ich habe hier eine liste vorbereitet)
				(NF mit hotels))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK ist)
				(MF das marriotthotel hannover))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX das parkhotel hannover)
			[01;31m(NX[00m
				(ART das)
				(NX hotel cristal hannover)[01;31m)[00m
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(VF die)
				(LK sind)
				(MF alle mehr oder minder in der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m [01;33m(SIMPX[00m
			(SIMPX
				(VF ich)
				(LK kucke)
				(MF mir mal die preise)
				(VC an))[01;31m)[00m
		[01;31m(SU[00m
			(DM also)
			(SIMPX
				(VF das hotel cristal hannover)
				[01;31m(FKOORD[00m
					[01;31m(LKM[00m
						(LK ist)
						(MF vielleicht ein bischen teuer)[01;31m)[00m
					(LKM hat dafur)[01;31m)[00m) [01;33mSIMPX) SIMPX)[00m
			(ADVX aber)
			[01;31m(NX[00m
				(NX sauna)
				(NX solarium)
				(NX bar)
				(KON und)
				(NX bistro)[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['SU', 'DM', 'SIMPX', 'SIMPX', 'KON', 'VXINF', 'MF', 'NF', 'SU', 'ADVX', 'SIMPX', 'SU', 'SIMPX', 'SU', 'SU', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PTKANT', 'PDS', 'VVFIN', 'PTKANT', 'ADV', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ART', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'VVFIN', 'ADV', 'PPER', 'VVFIN', 'PTKVZ', 'ITJ', 'ADV', 'ADV', 'VVFIN', 'PPER', 'ADV', 'VAFIN', 'PPER', 'PIS', 'APPR', 'KOUS', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'VVFIN', 'PWAV', 'PPER', 'VVINF', 'VMFIN', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'APPR', 'PIDAT', 'NN', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'KON', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'VVPP', 'APPR', 'NN', 'PDS', 'VAFIN', 'ART', 'NE', 'NE', 'ART', 'NE', 'NE', 'ART', 'NN', 'NE', 'NE', 'PDS', 'VAFIN', 'PIS', 'ADV', 'KON', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'PPER', 'VVFIN', 'PRF', 'ADV', 'ART', 'NN', 'PTKVZ', 'ADV', 'ART', 'NN', 'NE', 'NE', 'VAFIN', 'ADV', 'ART', 'PIS', 'ADJD', 'VAFIN', 'PROP', 'ADV', 'NN', 'NN', 'NN', 'KON', 'NN'), 'right siblings': ['NF', 'SU', 'ADVX', 'SIMPX', 'SU', 'SIMPX', 'SU', 'SU', 'SU', 'SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 132), 'span': (23, 24), 'left siblings': ['SU', 'DM', 'SIMPX', 'SIMPX', 'KON', 'VXINF'], 'label': 'MF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU na ja das stimmt ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen)
		(KON und)
		(VXINF sagen)
		(ADVX einfach)
		[01;31m(NF[00m
			[01;31m(SIMPX[00m
				(VF wir)
				(LK fliegen)
				(VC zuruck)[01;31m)[00m[01;31m)[00m
		(SU gut)
		(ADVX dann)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK denke)
			(MF ich)
			(NF dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK denke)
				(NF wir nehmen zusammen einfach ein hotel))[01;31m)[00m
		(SIMPX
			[01;31m(SU[00m
				(SIMPX dann konnen wir abends noch ein bischen in der bar sitzen)
				(NF
					(PX
						[01;31m(KOORD[00m
							(KON oder)[01;31m)[00m
						[01;31m(VF[00m
							(PX
								(APPR auf)
								(NX alle falle))[01;31m)[00m))
				(SIMPX treffen wir uns dann da)[01;31m)[00m)
		[01;31m(SU[00m
			(SIMPX
				(SIMPX und ich habe hier eine liste vorbereitet)
				(NF mit hotels))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK ist)
				(MF das marriotthotel hannover))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX das parkhotel hannover)
			[01;31m(NX[00m
				(ART das)
				(NX hotel cristal hannover)[01;31m)[00m
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(VF die)
				(LK sind)
				(MF alle mehr oder minder in der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m [01;33m(SIMPX[00m
			(SIMPX
				(VF ich)
				(LK kucke)
				(MF mir mal die preise)
				(VC an))[01;31m)[00m
		[01;31m(SU[00m
			(DM also)
			(SIMPX
				(VF das hotel cristal hannover)
				[01;31m(FKOORD[00m
					[01;31m(LKM[00m
						(LK ist)
						(MF vielleicht ein bischen teuer)[01;31m)[00m
					(LKM hat dafur)[01;31m)[00m) [01;33mSIMPX) SIMPX)[00m
			(ADVX aber)
			[01;31m(NX[00m
				(NX sauna)
				(NX solarium)
				(NX bar)
				(KON und)
				(NX bistro)[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['VF', 'LK', 'VC'], 'family': ['SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'PTKVZ'), 'right siblings': [], 'parent': 'NF', 'auto preterminal span': (24, 27), 'span': (24, 27), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU na ja das stimmt ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen)
		(KON und)
		(VXINF sagen)
		(ADVX einfach)
		[01;31m(NF[00m
			(VF wir)
			(LK fliegen)
			(VC zuruck)[01;31m)[00m
		(SU gut)
		(ADVX dann)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK denke)
			(MF ich)
			(NF dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK denke)
				(NF wir nehmen zusammen einfach ein hotel))[01;31m)[00m
		(SIMPX
			[01;31m(SU[00m
				(SIMPX dann konnen wir abends noch ein bischen in der bar sitzen)
				(NF
					(PX
						[01;31m(KOORD[00m
							(KON oder)[01;31m)[00m
						[01;31m(VF[00m
							(PX
								(APPR auf)
								(NX alle falle))[01;31m)[00m))
				(SIMPX treffen wir uns dann da)[01;31m)[00m)
		[01;31m(SU[00m
			(SIMPX
				(SIMPX und ich habe hier eine liste vorbereitet)
				(NF mit hotels))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK ist)
				(MF das marriotthotel hannover))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX das parkhotel hannover)
			[01;31m(NX[00m
				(ART das)
				(NX hotel cristal hannover)[01;31m)[00m
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(VF die)
				(LK sind)
				(MF alle mehr oder minder in der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m [01;33m(SIMPX[00m
			(SIMPX
				(VF ich)
				(LK kucke)
				(MF mir mal die preise)
				(VC an))[01;31m)[00m
		[01;31m(SU[00m
			(DM also)
			(SIMPX
				(VF das hotel cristal hannover)
				[01;31m(FKOORD[00m
					[01;31m(LKM[00m
						(LK ist)
						(MF vielleicht ein bischen teuer)[01;31m)[00m
					(LKM hat dafur)[01;31m)[00m) [01;33mSIMPX) SIMPX)[00m
			(ADVX aber)
			[01;31m(NX[00m
				(NX sauna)
				(NX solarium)
				(NX bar)
				(KON und)
				(NX bistro)[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'VC'], 'family': ['SU', 'DM', 'SIMPX', 'SIMPX', 'KON', 'VXINF', 'ADVX', 'NF', 'SU', 'ADVX', 'SIMPX', 'SU', 'SIMPX', 'SU', 'SU', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PTKANT', 'PDS', 'VVFIN', 'PTKANT', 'ADV', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ART', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'VVFIN', 'ADV', 'PPER', 'VVFIN', 'PTKVZ', 'ITJ', 'ADV', 'ADV', 'VVFIN', 'PPER', 'ADV', 'VAFIN', 'PPER', 'PIS', 'APPR', 'KOUS', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'VVFIN', 'PWAV', 'PPER', 'VVINF', 'VMFIN', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'APPR', 'PIDAT', 'NN', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'KON', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'VVPP', 'APPR', 'NN', 'PDS', 'VAFIN', 'ART', 'NE', 'NE', 'ART', 'NE', 'NE', 'ART', 'NN', 'NE', 'NE', 'PDS', 'VAFIN', 'PIS', 'ADV', 'KON', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'PPER', 'VVFIN', 'PRF', 'ADV', 'ART', 'NN', 'PTKVZ', 'ADV', 'ART', 'NN', 'NE', 'NE', 'VAFIN', 'ADV', 'ART', 'PIS', 'ADJD', 'VAFIN', 'PROP', 'ADV', 'NN', 'NN', 'NN', 'KON', 'NN'), 'right siblings': ['SU', 'ADVX', 'SIMPX', 'SU', 'SIMPX', 'SU', 'SU', 'SU', 'SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 132), 'span': (24, 27), 'left siblings': ['SU', 'DM', 'SIMPX', 'SIMPX', 'KON', 'VXINF', 'ADVX'], 'label': 'NF', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU na ja das stimmt ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen)
		(KON und)
		(VXINF sagen)
		(ADVX einfach)
		(VF wir)
		(LK fliegen)
		(VC zuruck)
		(SU gut)
		(ADVX dann)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK denke)
			(MF ich)
			(NF dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK denke)
				(NF wir nehmen zusammen einfach ein hotel))[01;31m)[00m
		(SIMPX
			[01;31m(SU[00m
				(SIMPX dann konnen wir abends noch ein bischen in der bar sitzen)
				(NF
					(PX
						[01;31m(KOORD[00m
							(KON oder)[01;31m)[00m
						[01;31m(VF[00m
							(PX
								(APPR auf)
								(NX alle falle))[01;31m)[00m))
				(SIMPX treffen wir uns dann da)[01;31m)[00m)
		[01;31m(SU[00m
			(SIMPX
				(SIMPX und ich habe hier eine liste vorbereitet)
				(NF mit hotels))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK ist)
				(MF das marriotthotel hannover))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX das parkhotel hannover)
			[01;31m(NX[00m
				(ART das)
				(NX hotel cristal hannover)[01;31m)[00m
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(VF die)
				(LK sind)
				(MF alle mehr oder minder in der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m [01;33m(SIMPX[00m
			(SIMPX
				(VF ich)
				(LK kucke)
				(MF mir mal die preise)
				(VC an))[01;31m)[00m
		[01;31m(SU[00m
			(DM also)
			(SIMPX
				(VF das hotel cristal hannover)
				[01;31m(FKOORD[00m
					[01;31m(LKM[00m
						(LK ist)
						(MF vielleicht ein bischen teuer)[01;31m)[00m
					(LKM hat dafur)[01;31m)[00m) [01;33mSIMPX) SIMPX)[00m
			(ADVX aber)
			[01;31m(NX[00m
				(NX sauna)
				(NX solarium)
				(NX bar)
				(KON und)
				(NX bistro)[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'NF'], 'family': ['SU', 'DM', 'SIMPX', 'SIMPX', 'KON', 'VXINF', 'ADVX', 'VF', 'LK', 'VC', 'SU', 'ADVX', 'SIMPX', 'SU', 'SIMPX', 'SU', 'SU', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PTKANT', 'PDS', 'VVFIN', 'PTKANT', 'ADV', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ART', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'VVFIN', 'ADV', 'PPER', 'VVFIN', 'PTKVZ', 'ITJ', 'ADV', 'ADV', 'VVFIN', 'PPER', 'ADV', 'VAFIN', 'PPER', 'PIS', 'APPR', 'KOUS', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'VVFIN', 'PWAV', 'PPER', 'VVINF', 'VMFIN', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'APPR', 'PIDAT', 'NN', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'KON', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'VVPP', 'APPR', 'NN', 'PDS', 'VAFIN', 'ART', 'NE', 'NE', 'ART', 'NE', 'NE', 'ART', 'NN', 'NE', 'NE', 'PDS', 'VAFIN', 'PIS', 'ADV', 'KON', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'PPER', 'VVFIN', 'PRF', 'ADV', 'ART', 'NN', 'PTKVZ', 'ADV', 'ART', 'NN', 'NE', 'NE', 'VAFIN', 'ADV', 'ART', 'PIS', 'ADJD', 'VAFIN', 'PROP', 'ADV', 'NN', 'NN', 'NN', 'KON', 'NN'), 'right siblings': ['SU', 'SIMPX', 'SU', 'SU', 'SU', 'SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 132), 'span': (29, 47), 'left siblings': ['SU', 'DM', 'SIMPX', 'SIMPX', 'KON', 'VXINF', 'ADVX', 'VF', 'LK', 'VC', 'SU', 'ADVX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU na ja das stimmt ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen)
		(KON und)
		(VXINF sagen)
		(ADVX einfach)
		(VF wir)
		(LK fliegen)
		(VC zuruck)
		(SU gut)
		(ADVX dann)
		(VF dann)
		(LK denke)
		(MF ich)
		(NF dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK denke)
				(NF wir nehmen zusammen einfach ein hotel))[01;31m)[00m
		(SIMPX
			[01;31m(SU[00m
				(SIMPX dann konnen wir abends noch ein bischen in der bar sitzen)
				(NF
					(PX
						[01;31m(KOORD[00m
							(KON oder)[01;31m)[00m
						[01;31m(VF[00m
							(PX
								(APPR auf)
								(NX alle falle))[01;31m)[00m))
				(SIMPX treffen wir uns dann da)[01;31m)[00m)
		[01;31m(SU[00m
			(SIMPX
				(SIMPX und ich habe hier eine liste vorbereitet)
				(NF mit hotels))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK ist)
				(MF das marriotthotel hannover))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX das parkhotel hannover)
			[01;31m(NX[00m
				(ART das)
				(NX hotel cristal hannover)[01;31m)[00m
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(VF die)
				(LK sind)
				(MF alle mehr oder minder in der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m [01;33m(SIMPX[00m
			(SIMPX
				(VF ich)
				(LK kucke)
				(MF mir mal die preise)
				(VC an))[01;31m)[00m
		[01;31m(SU[00m
			(DM also)
			(SIMPX
				(VF das hotel cristal hannover)
				[01;31m(FKOORD[00m
					[01;31m(LKM[00m
						(LK ist)
						(MF vielleicht ein bischen teuer)[01;31m)[00m
					(LKM hat dafur)[01;31m)[00m) [01;33mSIMPX) SIMPX)[00m
			(ADVX aber)
			[01;31m(NX[00m
				(NX sauna)
				(NX solarium)
				(NX bar)
				(KON und)
				(NX bistro)[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SU', 'DM', 'SIMPX', 'SIMPX', 'KON', 'VXINF', 'ADVX', 'VF', 'LK', 'VC', 'SU', 'ADVX', 'VF', 'LK', 'MF', 'NF', 'SU', 'SIMPX', 'SU', 'SU', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PTKANT', 'PDS', 'VVFIN', 'PTKANT', 'ADV', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ART', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'VVFIN', 'ADV', 'PPER', 'VVFIN', 'PTKVZ', 'ITJ', 'ADV', 'ADV', 'VVFIN', 'PPER', 'ADV', 'VAFIN', 'PPER', 'PIS', 'APPR', 'KOUS', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'VVFIN', 'PWAV', 'PPER', 'VVINF', 'VMFIN', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'APPR', 'PIDAT', 'NN', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'KON', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'VVPP', 'APPR', 'NN', 'PDS', 'VAFIN', 'ART', 'NE', 'NE', 'ART', 'NE', 'NE', 'ART', 'NN', 'NE', 'NE', 'PDS', 'VAFIN', 'PIS', 'ADV', 'KON', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'PPER', 'VVFIN', 'PRF', 'ADV', 'ART', 'NN', 'PTKVZ', 'ADV', 'ART', 'NN', 'NE', 'NE', 'VAFIN', 'ADV', 'ART', 'PIS', 'ADJD', 'VAFIN', 'PROP', 'ADV', 'NN', 'NN', 'NN', 'KON', 'NN'), 'right siblings': ['SIMPX', 'SU', 'SU', 'SU', 'SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 132), 'span': (47, 55), 'left siblings': ['SU', 'DM', 'SIMPX', 'SIMPX', 'KON', 'VXINF', 'ADVX', 'VF', 'LK', 'VC', 'SU', 'ADVX', 'VF', 'LK', 'MF', 'NF'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU na ja das stimmt ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen)
		(KON und)
		(VXINF sagen)
		(ADVX einfach)
		(VF wir)
		(LK fliegen)
		(VC zuruck)
		(SU gut)
		(ADVX dann)
		(VF dann)
		(LK denke)
		(MF ich)
		(NF dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX
			[01;31m(SU[00m
				(SIMPX dann konnen wir abends noch ein bischen in der bar sitzen)
				(NF
					(PX
						[01;31m(KOORD[00m
							(KON oder)[01;31m)[00m
						[01;31m(VF[00m
							(PX
								(APPR auf)
								(NX alle falle))[01;31m)[00m))
				(SIMPX treffen wir uns dann da)[01;31m)[00m)
		[01;31m(SU[00m
			(SIMPX
				(SIMPX und ich habe hier eine liste vorbereitet)
				(NF mit hotels))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK ist)
				(MF das marriotthotel hannover))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX das parkhotel hannover)
			[01;31m(NX[00m
				(ART das)
				(NX hotel cristal hannover)[01;31m)[00m
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(VF die)
				(LK sind)
				(MF alle mehr oder minder in der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m [01;33m(SIMPX[00m
			(SIMPX
				(VF ich)
				(LK kucke)
				(MF mir mal die preise)
				(VC an))[01;31m)[00m
		[01;31m(SU[00m
			(DM also)
			(SIMPX
				(VF das hotel cristal hannover)
				[01;31m(FKOORD[00m
					[01;31m(LKM[00m
						(LK ist)
						(MF vielleicht ein bischen teuer)[01;31m)[00m
					(LKM hat dafur)[01;31m)[00m) [01;33mSIMPX) SIMPX)[00m
			(ADVX aber)
			[01;31m(NX[00m
				(NX sauna)
				(NX solarium)
				(NX bar)
				(KON und)
				(NX bistro)[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX', 'NF', 'SIMPX'], 'family': ['SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'APPR', 'PIDAT', 'NN', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (55, 75), 'span': (55, 75), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU na ja das stimmt ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen)
		(KON und)
		(VXINF sagen)
		(ADVX einfach)
		(VF wir)
		(LK fliegen)
		(VC zuruck)
		(SU gut)
		(ADVX dann)
		(VF dann)
		(LK denke)
		(MF ich)
		(NF dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX
			(SIMPX dann konnen wir abends noch ein bischen in der bar sitzen)
			(NF
				(PX
					[01;31m(KOORD[00m
						(KON oder)[01;31m)[00m
					[01;31m(VF[00m
						(PX
							(APPR auf)
							(NX alle falle))[01;31m)[00m))
			(SIMPX treffen wir uns dann da))
		[01;31m(SU[00m
			(SIMPX
				(SIMPX und ich habe hier eine liste vorbereitet)
				(NF mit hotels))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK ist)
				(MF das marriotthotel hannover))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX das parkhotel hannover)
			[01;31m(NX[00m
				(ART das)
				(NX hotel cristal hannover)[01;31m)[00m
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(VF die)
				(LK sind)
				(MF alle mehr oder minder in der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m [01;33m(SIMPX[00m
			(SIMPX
				(VF ich)
				(LK kucke)
				(MF mir mal die preise)
				(VC an))[01;31m)[00m
		[01;31m(SU[00m
			(DM also)
			(SIMPX
				(VF das hotel cristal hannover)
				[01;31m(FKOORD[00m
					[01;31m(LKM[00m
						(LK ist)
						(MF vielleicht ein bischen teuer)[01;31m)[00m
					(LKM hat dafur)[01;31m)[00m) [01;33mSIMPX) SIMPX)[00m
			(ADVX aber)
			[01;31m(NX[00m
				(NX sauna)
				(NX solarium)
				(NX bar)
				(KON und)
				(NX bistro)[01;31m)[00m[01;31m)[00m))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['KOORD', 'VF'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON', 'APPR', 'PIDAT', 'NN'), 'right siblings': ['VF'], 'parent': 'PX', 'auto preterminal span': (66, 70), 'span': (66, 67), 'left siblings': [], 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(SU na ja das stimmt ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen)
		(KON und)
		(VXINF sagen)
		(ADVX einfach)
		(VF wir)
		(LK fliegen)
		(VC zuruck)
		(SU gut)
		(ADVX dann)
		(VF dann)
		(LK denke)
		(MF ich)
		(NF dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX
			(SIMPX dann konnen wir abends noch ein bischen in der bar sitzen)
			(NF
				(PX
					(KON oder)
					[01;31m(VF[00m
						(PX
							(APPR auf)
							(NX alle falle))[01;31m)[00m))
			(SIMPX treffen wir uns dann da))
		[01;31m(SU[00m
			(SIMPX
				(SIMPX und ich habe hier eine liste vorbereitet)
				(NF mit hotels))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK ist)
				(MF das marriotthotel hannover))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX das parkhotel hannover)
			[01;31m(NX[00m
				(ART das)
				(NX hotel cristal hannover)[01;31m)[00m
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(VF die)
				(LK sind)
				(MF alle mehr oder minder in der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m [01;33m(SIMPX[00m
			(SIMPX
				(VF ich)
				(LK kucke)
				(MF mir mal die preise)
				(VC an))[01;31m)[00m
		[01;31m(SU[00m
			(DM also)
			(SIMPX
				(VF das hotel cristal hannover)
				[01;31m(FKOORD[00m
					[01;31m(LKM[00m
						(LK ist)
						(MF vielleicht ein bischen teuer)[01;31m)[00m
					(LKM hat dafur)[01;31m)[00m) [01;33mSIMPX) SIMPX)[00m
			(ADVX aber)
			[01;31m(NX[00m
				(NX sauna)
				(NX solarium)
				(NX bar)
				(KON und)
				(NX bistro)[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['PX'], 'family': ['KON', 'VF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'APPR', 'PIDAT', 'NN'), 'right siblings': [], 'parent': 'PX', 'auto preterminal span': (66, 70), 'span': (67, 70), 'left siblings': ['KON'], 'label': 'VF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU na ja das stimmt ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen)
		(KON und)
		(VXINF sagen)
		(ADVX einfach)
		(VF wir)
		(LK fliegen)
		(VC zuruck)
		(SU gut)
		(ADVX dann)
		(VF dann)
		(LK denke)
		(MF ich)
		(NF dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX dann konnen wir abends noch ein bischen in der bar sitzen oder auf alle falle treffen wir uns dann da)
		[01;31m(SU[00m
			(SIMPX
				(SIMPX und ich habe hier eine liste vorbereitet)
				(NF mit hotels))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK ist)
				(MF das marriotthotel hannover))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX das parkhotel hannover)
			[01;31m(NX[00m
				(ART das)
				(NX hotel cristal hannover)[01;31m)[00m
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(VF die)
				(LK sind)
				(MF alle mehr oder minder in der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m [01;33m(SIMPX[00m
			(SIMPX
				(VF ich)
				(LK kucke)
				(MF mir mal die preise)
				(VC an))[01;31m)[00m
		[01;31m(SU[00m
			(DM also)
			(SIMPX
				(VF das hotel cristal hannover)
				[01;31m(FKOORD[00m
					[01;31m(LKM[00m
						(LK ist)
						(MF vielleicht ein bischen teuer)[01;31m)[00m
					(LKM hat dafur)[01;31m)[00m) [01;33mSIMPX) SIMPX)[00m
			(ADVX aber)
			[01;31m(NX[00m
				(NX sauna)
				(NX solarium)
				(NX bar)
				(KON und)
				(NX bistro)[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SU', 'DM', 'SIMPX', 'SIMPX', 'KON', 'VXINF', 'ADVX', 'VF', 'LK', 'VC', 'SU', 'ADVX', 'VF', 'LK', 'MF', 'NF', 'SIMPX', 'SIMPX', 'SU', 'SU', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PTKANT', 'PDS', 'VVFIN', 'PTKANT', 'ADV', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ART', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'VVFIN', 'ADV', 'PPER', 'VVFIN', 'PTKVZ', 'ITJ', 'ADV', 'ADV', 'VVFIN', 'PPER', 'ADV', 'VAFIN', 'PPER', 'PIS', 'APPR', 'KOUS', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'VVFIN', 'PWAV', 'PPER', 'VVINF', 'VMFIN', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'APPR', 'PIDAT', 'NN', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'KON', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'VVPP', 'APPR', 'NN', 'PDS', 'VAFIN', 'ART', 'NE', 'NE', 'ART', 'NE', 'NE', 'ART', 'NN', 'NE', 'NE', 'PDS', 'VAFIN', 'PIS', 'ADV', 'KON', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'PPER', 'VVFIN', 'PRF', 'ADV', 'ART', 'NN', 'PTKVZ', 'ADV', 'ART', 'NN', 'NE', 'NE', 'VAFIN', 'ADV', 'ART', 'PIS', 'ADJD', 'VAFIN', 'PROP', 'ADV', 'NN', 'NN', 'NN', 'KON', 'NN'), 'right siblings': ['SU', 'SU', 'SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 132), 'span': (75, 84), 'left siblings': ['SU', 'DM', 'SIMPX', 'SIMPX', 'KON', 'VXINF', 'ADVX', 'VF', 'LK', 'VC', 'SU', 'ADVX', 'VF', 'LK', 'MF', 'NF', 'SIMPX', 'SIMPX'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU na ja das stimmt ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen)
		(KON und)
		(VXINF sagen)
		(ADVX einfach)
		(VF wir)
		(LK fliegen)
		(VC zuruck)
		(SU gut)
		(ADVX dann)
		(VF dann)
		(LK denke)
		(MF ich)
		(NF dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX dann konnen wir abends noch ein bischen in der bar sitzen oder auf alle falle treffen wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK ist)
				(MF das marriotthotel hannover))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX das parkhotel hannover)
			[01;31m(NX[00m
				(ART das)
				(NX hotel cristal hannover)[01;31m)[00m
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(VF die)
				(LK sind)
				(MF alle mehr oder minder in der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m [01;33m(SIMPX[00m
			(SIMPX
				(VF ich)
				(LK kucke)
				(MF mir mal die preise)
				(VC an))[01;31m)[00m
		[01;31m(SU[00m
			(DM also)
			(SIMPX
				(VF das hotel cristal hannover)
				[01;31m(FKOORD[00m
					[01;31m(LKM[00m
						(LK ist)
						(MF vielleicht ein bischen teuer)[01;31m)[00m
					(LKM hat dafur)[01;31m)[00m) [01;33mSIMPX) SIMPX)[00m
			(ADVX aber)
			[01;31m(NX[00m
				(NX sauna)
				(NX solarium)
				(NX bar)
				(KON und)
				(NX bistro)[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SU', 'DM', 'SIMPX', 'SIMPX', 'KON', 'VXINF', 'ADVX', 'VF', 'LK', 'VC', 'SU', 'ADVX', 'VF', 'LK', 'MF', 'NF', 'SIMPX', 'SIMPX', 'SIMPX', 'SU', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PTKANT', 'PDS', 'VVFIN', 'PTKANT', 'ADV', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ART', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'VVFIN', 'ADV', 'PPER', 'VVFIN', 'PTKVZ', 'ITJ', 'ADV', 'ADV', 'VVFIN', 'PPER', 'ADV', 'VAFIN', 'PPER', 'PIS', 'APPR', 'KOUS', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'VVFIN', 'PWAV', 'PPER', 'VVINF', 'VMFIN', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'APPR', 'PIDAT', 'NN', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'KON', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'VVPP', 'APPR', 'NN', 'PDS', 'VAFIN', 'ART', 'NE', 'NE', 'ART', 'NE', 'NE', 'ART', 'NN', 'NE', 'NE', 'PDS', 'VAFIN', 'PIS', 'ADV', 'KON', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'PPER', 'VVFIN', 'PRF', 'ADV', 'ART', 'NN', 'PTKVZ', 'ADV', 'ART', 'NN', 'NE', 'NE', 'VAFIN', 'ADV', 'ART', 'PIS', 'ADJD', 'VAFIN', 'PROP', 'ADV', 'NN', 'NN', 'NN', 'KON', 'NN'), 'right siblings': ['SU', 'SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 132), 'span': (84, 89), 'left siblings': ['SU', 'DM', 'SIMPX', 'SIMPX', 'KON', 'VXINF', 'ADVX', 'VF', 'LK', 'VC', 'SU', 'ADVX', 'VF', 'LK', 'MF', 'NF', 'SIMPX', 'SIMPX', 'SIMPX'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU na ja das stimmt ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen)
		(KON und)
		(VXINF sagen)
		(ADVX einfach)
		(VF wir)
		(LK fliegen)
		(VC zuruck)
		(SU gut)
		(ADVX dann)
		(VF dann)
		(LK denke)
		(MF ich)
		(NF dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX dann konnen wir abends noch ein bischen in der bar sitzen oder auf alle falle treffen wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		(SIMPX das ist das marriotthotel hannover)
		[01;31m(SU[00m
			(SIMPX das parkhotel hannover)
			[01;31m(NX[00m
				(ART das)
				(NX hotel cristal hannover)[01;31m)[00m
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(VF die)
				(LK sind)
				(MF alle mehr oder minder in der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m [01;33m(SIMPX[00m
			(SIMPX
				(VF ich)
				(LK kucke)
				(MF mir mal die preise)
				(VC an))[01;31m)[00m
		[01;31m(SU[00m
			(DM also)
			(SIMPX
				(VF das hotel cristal hannover)
				[01;31m(FKOORD[00m
					[01;31m(LKM[00m
						(LK ist)
						(MF vielleicht ein bischen teuer)[01;31m)[00m
					(LKM hat dafur)[01;31m)[00m) [01;33mSIMPX) SIMPX)[00m
			(ADVX aber)
			[01;31m(NX[00m
				(NX sauna)
				(NX solarium)
				(NX bar)
				(KON und)
				(NX bistro)[01;31m)[00m[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'NX', 'SIMPX'], 'family': ['SU', 'DM', 'SIMPX', 'SIMPX', 'KON', 'VXINF', 'ADVX', 'VF', 'LK', 'VC', 'SU', 'ADVX', 'VF', 'LK', 'MF', 'NF', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PTKANT', 'PDS', 'VVFIN', 'PTKANT', 'ADV', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ART', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'VVFIN', 'ADV', 'PPER', 'VVFIN', 'PTKVZ', 'ITJ', 'ADV', 'ADV', 'VVFIN', 'PPER', 'ADV', 'VAFIN', 'PPER', 'PIS', 'APPR', 'KOUS', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'VVFIN', 'PWAV', 'PPER', 'VVINF', 'VMFIN', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'APPR', 'PIDAT', 'NN', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'KON', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'VVPP', 'APPR', 'NN', 'PDS', 'VAFIN', 'ART', 'NE', 'NE', 'ART', 'NE', 'NE', 'ART', 'NN', 'NE', 'NE', 'PDS', 'VAFIN', 'PIS', 'ADV', 'KON', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'PPER', 'VVFIN', 'PRF', 'ADV', 'ART', 'NN', 'PTKVZ', 'ADV', 'ART', 'NN', 'NE', 'NE', 'VAFIN', 'ADV', 'ART', 'PIS', 'ADJD', 'VAFIN', 'PROP', 'ADV', 'NN', 'NN', 'NN', 'KON', 'NN'), 'right siblings': ['SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 132), 'span': (89, 107), 'left siblings': ['SU', 'DM', 'SIMPX', 'SIMPX', 'KON', 'VXINF', 'ADVX', 'VF', 'LK', 'VC', 'SU', 'ADVX', 'VF', 'LK', 'MF', 'NF', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU na ja das stimmt ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen)
		(KON und)
		(VXINF sagen)
		(ADVX einfach)
		(VF wir)
		(LK fliegen)
		(VC zuruck)
		(SU gut)
		(ADVX dann)
		(VF dann)
		(LK denke)
		(MF ich)
		(NF dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX dann konnen wir abends noch ein bischen in der bar sitzen oder auf alle falle treffen wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		(SIMPX das ist das marriotthotel hannover)
		(SIMPX das parkhotel hannover)
		[01;31m(NX[00m
			(ART das)
			(NX hotel cristal hannover)[01;31m)[00m
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF die)
			(LK sind)
			(MF alle mehr oder minder in der nahe vom hauptbahnhof)[01;31m)[00m
		[01;31m(SU[00m [01;33m(SIMPX[00m
			(SIMPX
				(VF ich)
				(LK kucke)
				(MF mir mal die preise)
				(VC an))[01;31m)[00m
		[01;31m(SU[00m
			(DM also)
			(SIMPX
				(VF das hotel cristal hannover)
				[01;31m(FKOORD[00m
					[01;31m(LKM[00m
						(LK ist)
						(MF vielleicht ein bischen teuer)[01;31m)[00m
					(LKM hat dafur)[01;31m)[00m) [01;33mSIMPX) SIMPX)[00m
			(ADVX aber)
			[01;31m(NX[00m
				(NX sauna)
				(NX solarium)
				(NX bar)
				(KON und)
				(NX bistro)[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['ART', 'NX'], 'family': ['SU', 'DM', 'SIMPX', 'SIMPX', 'KON', 'VXINF', 'ADVX', 'VF', 'LK', 'VC', 'SU', 'ADVX', 'VF', 'LK', 'MF', 'NF', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PTKANT', 'PDS', 'VVFIN', 'PTKANT', 'ADV', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ART', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'VVFIN', 'ADV', 'PPER', 'VVFIN', 'PTKVZ', 'ITJ', 'ADV', 'ADV', 'VVFIN', 'PPER', 'ADV', 'VAFIN', 'PPER', 'PIS', 'APPR', 'KOUS', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'VVFIN', 'PWAV', 'PPER', 'VVINF', 'VMFIN', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'APPR', 'PIDAT', 'NN', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'KON', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'VVPP', 'APPR', 'NN', 'PDS', 'VAFIN', 'ART', 'NE', 'NE', 'ART', 'NE', 'NE', 'ART', 'NN', 'NE', 'NE', 'PDS', 'VAFIN', 'PIS', 'ADV', 'KON', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'PPER', 'VVFIN', 'PRF', 'ADV', 'ART', 'NN', 'PTKVZ', 'ADV', 'ART', 'NN', 'NE', 'NE', 'VAFIN', 'ADV', 'ART', 'PIS', 'ADJD', 'VAFIN', 'PROP', 'ADV', 'NN', 'NN', 'NN', 'KON', 'NN'), 'right siblings': ['SIMPX', 'SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 132), 'span': (92, 96), 'left siblings': ['SU', 'DM', 'SIMPX', 'SIMPX', 'KON', 'VXINF', 'ADVX', 'VF', 'LK', 'VC', 'SU', 'ADVX', 'VF', 'LK', 'MF', 'NF', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU na ja das stimmt ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen)
		(KON und)
		(VXINF sagen)
		(ADVX einfach)
		(VF wir)
		(LK fliegen)
		(VC zuruck)
		(SU gut)
		(ADVX dann)
		(VF dann)
		(LK denke)
		(MF ich)
		(NF dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX dann konnen wir abends noch ein bischen in der bar sitzen oder auf alle falle treffen wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		(SIMPX das ist das marriotthotel hannover)
		(SIMPX das parkhotel hannover)
		(ART das)
		(NX hotel cristal hannover)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF die)
			(LK sind)
			(MF alle mehr oder minder in der nahe vom hauptbahnhof)[01;31m)[00m
		[01;31m(SU[00m [01;33m(SIMPX[00m
			(SIMPX
				(VF ich)
				(LK kucke)
				(MF mir mal die preise)
				(VC an))[01;31m)[00m
		[01;31m(SU[00m
			(DM also)
			(SIMPX
				(VF das hotel cristal hannover)
				[01;31m(FKOORD[00m
					[01;31m(LKM[00m
						(LK ist)
						(MF vielleicht ein bischen teuer)[01;31m)[00m
					(LKM hat dafur)[01;31m)[00m) [01;33mSIMPX) SIMPX)[00m
			(ADVX aber)
			[01;31m(NX[00m
				(NX sauna)
				(NX solarium)
				(NX bar)
				(KON und)
				(NX bistro)[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['SU', 'DM', 'SIMPX', 'SIMPX', 'KON', 'VXINF', 'ADVX', 'VF', 'LK', 'VC', 'SU', 'ADVX', 'VF', 'LK', 'MF', 'NF', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'ART', 'NX', 'SIMPX', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PTKANT', 'PDS', 'VVFIN', 'PTKANT', 'ADV', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ART', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'VVFIN', 'ADV', 'PPER', 'VVFIN', 'PTKVZ', 'ITJ', 'ADV', 'ADV', 'VVFIN', 'PPER', 'ADV', 'VAFIN', 'PPER', 'PIS', 'APPR', 'KOUS', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'VVFIN', 'PWAV', 'PPER', 'VVINF', 'VMFIN', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'APPR', 'PIDAT', 'NN', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'KON', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'VVPP', 'APPR', 'NN', 'PDS', 'VAFIN', 'ART', 'NE', 'NE', 'ART', 'NE', 'NE', 'ART', 'NN', 'NE', 'NE', 'PDS', 'VAFIN', 'PIS', 'ADV', 'KON', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'PPER', 'VVFIN', 'PRF', 'ADV', 'ART', 'NN', 'PTKVZ', 'ADV', 'ART', 'NN', 'NE', 'NE', 'VAFIN', 'ADV', 'ART', 'PIS', 'ADJD', 'VAFIN', 'PROP', 'ADV', 'NN', 'NN', 'NN', 'KON', 'NN'), 'right siblings': ['SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 132), 'span': (96, 107), 'left siblings': ['SU', 'DM', 'SIMPX', 'SIMPX', 'KON', 'VXINF', 'ADVX', 'VF', 'LK', 'VC', 'SU', 'ADVX', 'VF', 'LK', 'MF', 'NF', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'ART', 'NX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU na ja das stimmt ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen)
		(KON und)
		(VXINF sagen)
		(ADVX einfach)
		(VF wir)
		(LK fliegen)
		(VC zuruck)
		(SU gut)
		(ADVX dann)
		(VF dann)
		(LK denke)
		(MF ich)
		(NF dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX dann konnen wir abends noch ein bischen in der bar sitzen oder auf alle falle treffen wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		(SIMPX das ist das marriotthotel hannover)
		(SIMPX das parkhotel hannover)
		(ART das)
		(NX hotel cristal hannover)
		[01;33m(SIMPX[00m (VF die)
		(LK sind)
		(MF alle mehr oder minder in der nahe vom hauptbahnhof)
		[01;31m(SU[00m [01;33m(SIMPX[00m
			(SIMPX
				(VF ich)
				(LK kucke)
				(MF mir mal die preise)
				(VC an))[01;31m)[00m
		[01;31m(SU[00m
			(DM also)
			(SIMPX
				(VF das hotel cristal hannover)
				[01;31m(FKOORD[00m
					[01;31m(LKM[00m
						(LK ist)
						(MF vielleicht ein bischen teuer)[01;31m)[00m
					(LKM hat dafur)[01;31m)[00m) [01;33mSIMPX) SIMPX)[00m
			(ADVX aber)
			[01;31m(NX[00m
				(NX sauna)
				(NX solarium)
				(NX bar)
				(KON und)
				(NX bistro)[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SU', 'DM', 'SIMPX', 'SIMPX', 'KON', 'VXINF', 'ADVX', 'VF', 'LK', 'VC', 'SU', 'ADVX', 'VF', 'LK', 'MF', 'NF', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'ART', 'NX', 'VF', 'LK', 'MF', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PTKANT', 'PDS', 'VVFIN', 'PTKANT', 'ADV', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ART', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'VVFIN', 'ADV', 'PPER', 'VVFIN', 'PTKVZ', 'ITJ', 'ADV', 'ADV', 'VVFIN', 'PPER', 'ADV', 'VAFIN', 'PPER', 'PIS', 'APPR', 'KOUS', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'VVFIN', 'PWAV', 'PPER', 'VVINF', 'VMFIN', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'APPR', 'PIDAT', 'NN', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'KON', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'VVPP', 'APPR', 'NN', 'PDS', 'VAFIN', 'ART', 'NE', 'NE', 'ART', 'NE', 'NE', 'ART', 'NN', 'NE', 'NE', 'PDS', 'VAFIN', 'PIS', 'ADV', 'KON', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'PPER', 'VVFIN', 'PRF', 'ADV', 'ART', 'NN', 'PTKVZ', 'ADV', 'ART', 'NN', 'NE', 'NE', 'VAFIN', 'ADV', 'ART', 'PIS', 'ADJD', 'VAFIN', 'PROP', 'ADV', 'NN', 'NN', 'NN', 'KON', 'NN'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 132), 'span': (107, 114), 'left siblings': ['SU', 'DM', 'SIMPX', 'SIMPX', 'KON', 'VXINF', 'ADVX', 'VF', 'LK', 'VC', 'SU', 'ADVX', 'VF', 'LK', 'MF', 'NF', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'ART', 'NX', 'VF', 'LK', 'MF'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU na ja das stimmt ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen)
		(KON und)
		(VXINF sagen)
		(ADVX einfach)
		(VF wir)
		(LK fliegen)
		(VC zuruck)
		(SU gut)
		(ADVX dann)
		(VF dann)
		(LK denke)
		(MF ich)
		(NF dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX dann konnen wir abends noch ein bischen in der bar sitzen oder auf alle falle treffen wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		(SIMPX das ist das marriotthotel hannover)
		(SIMPX das parkhotel hannover)
		(ART das)
		(NX hotel cristal hannover)
		[01;33m(SIMPX[00m (VF die)
		(LK sind)
		(MF alle mehr oder minder in der nahe vom hauptbahnhof)
		[01;33m(SIMPX[00m (SIMPX ich kucke mir mal die preise an)
		[01;31m(SU[00m
			(DM also)
			(SIMPX
				(VF das hotel cristal hannover)
				[01;31m(FKOORD[00m
					[01;31m(LKM[00m
						(LK ist)
						(MF vielleicht ein bischen teuer)[01;31m)[00m
					(LKM hat dafur)[01;31m)[00m) [01;33mSIMPX) SIMPX)[00m
			(ADVX aber)
			[01;31m(NX[00m
				(NX sauna)
				(NX solarium)
				(NX bar)
				(KON und)
				(NX bistro)[01;31m)[00m[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['DM', 'SIMPX', 'ADVX', 'NX'], 'family': ['SU', 'DM', 'SIMPX', 'SIMPX', 'KON', 'VXINF', 'ADVX', 'VF', 'LK', 'VC', 'SU', 'ADVX', 'VF', 'LK', 'MF', 'NF', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'ART', 'NX', 'VF', 'LK', 'MF', 'SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PTKANT', 'PDS', 'VVFIN', 'PTKANT', 'ADV', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ART', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'VVFIN', 'ADV', 'PPER', 'VVFIN', 'PTKVZ', 'ITJ', 'ADV', 'ADV', 'VVFIN', 'PPER', 'ADV', 'VAFIN', 'PPER', 'PIS', 'APPR', 'KOUS', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'VVFIN', 'PWAV', 'PPER', 'VVINF', 'VMFIN', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'APPR', 'PIDAT', 'NN', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'KON', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'VVPP', 'APPR', 'NN', 'PDS', 'VAFIN', 'ART', 'NE', 'NE', 'ART', 'NE', 'NE', 'ART', 'NN', 'NE', 'NE', 'PDS', 'VAFIN', 'PIS', 'ADV', 'KON', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'PPER', 'VVFIN', 'PRF', 'ADV', 'ART', 'NN', 'PTKVZ', 'ADV', 'ART', 'NN', 'NE', 'NE', 'VAFIN', 'ADV', 'ART', 'PIS', 'ADJD', 'VAFIN', 'PROP', 'ADV', 'NN', 'NN', 'NN', 'KON', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 132), 'span': (114, 132), 'left siblings': ['SU', 'DM', 'SIMPX', 'SIMPX', 'KON', 'VXINF', 'ADVX', 'VF', 'LK', 'VC', 'SU', 'ADVX', 'VF', 'LK', 'MF', 'NF', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'ART', 'NX', 'VF', 'LK', 'MF', 'SIMPX'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU na ja das stimmt ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen)
		(KON und)
		(VXINF sagen)
		(ADVX einfach)
		(VF wir)
		(LK fliegen)
		(VC zuruck)
		(SU gut)
		(ADVX dann)
		(VF dann)
		(LK denke)
		(MF ich)
		(NF dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX dann konnen wir abends noch ein bischen in der bar sitzen oder auf alle falle treffen wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		(SIMPX das ist das marriotthotel hannover)
		(SIMPX das parkhotel hannover)
		(ART das)
		(NX hotel cristal hannover)
		[01;36m(SIMPX[00m
			(VF die)
			(LK sind)
			(MF alle mehr oder minder in der nahe vom hauptbahnhof)
			[01;36m(SIMPX[00m
				(SIMPX ich kucke mir mal die preise an)
				(DM also)
				(SIMPX
					(VF das hotel cristal hannover)
					[01;31m(FKOORD[00m
						[01;31m(LKM[00m
							(LK ist)
							(MF vielleicht ein bischen teuer)[01;31m)[00m
						(LKM hat dafur)[01;31m)[00m)[01;36m)[00m[01;36m)[00m
		(ADVX aber)
		[01;31m(NX[00m
			(NX sauna)
			(NX solarium)
			(NX bar)
			(KON und)
			(NX bistro)[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['VF', 'LK', 'MF', 'SIMPX', 'DM', 'SIMPX'], 'family': ['SU', 'DM', 'SIMPX', 'SIMPX', 'KON', 'VXINF', 'ADVX', 'VF', 'LK', 'VC', 'SU', 'ADVX', 'VF', 'LK', 'MF', 'NF', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'ART', 'NX', 'SIMPX', 'ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VAFIN', 'PIS', 'ADV', 'KON', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'PPER', 'VVFIN', 'PRF', 'ADV', 'ART', 'NN', 'PTKVZ', 'ADV', 'ART', 'NN', 'NE', 'NE', 'VAFIN', 'ADV', 'ART', 'PIS', 'ADJD', 'VAFIN', 'PROP'), 'right siblings': [(ADVX (ADV aber)), (NX (NX (NN sauna)) (NX (NN solarium)) (NX (NN bar)) (KON und) (NX (NN bistro)))], 'left siblings': [(SU (SU (DM (ITJ na) (PTKANT ja)) (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VVFIN stimmt))))) (DM (PTKANT ja))), (DM (ADVX (ADV also))), (SIMPX (KOORD (KON und)) (VF (ADVX (ADV dann))) (LK (VXFIN (VMFIN konnen))) (MF (NX (PPER wir)) (ADVX (ADV einfach)) (NX (ART den)))), (SIMPX (VF (ADVX (ADV dann))) (LK (VXFIN (VVFIN brauchen))) (MF (NX (PPER wir)) (NX (PRF uns)) (ADVX (ADV jetzt)) (ADVX (ADV vielleicht)) (ADVX (ADVX (ADV gar)) (PTKNEG nicht))) (VC (VXINF (VVINF festlegen)))), (KON und), (VXINF (VC (VVFIN sagen))), (ADVX (ADV einfach)), (VF (NX (PPER wir))), (LK (VXFIN (VVFIN fliegen))), (VC (PTKVZ zuruck)), (SU (DM (ITJ gut))), (ADVX (ADV dann)), (VF (ADVX (ADV dann))), (LK (VXFIN (VVFIN denke))), (MF (NX (PPER ich))), (NF (SIMPX (VF (ADVX (ADV dann))) (LK (VXFIN (VAFIN haben))) (MF (NX (PPER wir)) (NX (PIS alles)) (APPR auser)) (NF (SIMPX (C (KOUS das)) (MF (NX (PPER wir)) (ADVX (ADV immer)) (ADVX (ADVX (ADV noch)) (PTKNEG nicht))) (VC (VXFIN (VVFIN wissen))) (NF (SIMPX (C (PX (PWAV wo))) (MF (NX (PPER wir))) (VC (VXINF (VVINF ubernachten)) (VXFIN (VMFIN konnen))))))))), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN denke))) (NF (SIMPX (VF (NX (PPER wir))) (LK (VXFIN (VVFIN nehmen))) (MF (ADVX (ADV zusammen)) (ADVX (ADV einfach)) (NX (ART ein) (NN hotel)))))), (SIMPX (SIMPX (VF (ADVX (ADV dann))) (LK (VXFIN (VMFIN konnen))) (MVC (MF (NX (PPER wir)) (ADVX (ADV abends)) (ADVX (ADV noch)) (NX (NX (ART ein) (PIS bischen)) (PX (APPR in) (NX (ART der) (NN bar))))) (VC (VXINF (VVINF sitzen))))) (NF (PX (KON oder) (PX (APPR auf) (NX (PIDAT alle) (NN falle))))) (SIMPX (LK (VXFIN (VVFIN treffen))) (MF (NX (PPER wir)) (NX (PRF uns)) (ADVX (ADV dann)) (ADVX (ADV da))))), (SIMPX (SIMPX (KOORD (KON und)) (VF (NX (PPER ich))) (LK (VXFIN (VAFIN habe))) (MF (ADVX (ADV hier)) (NX (ART eine) (NN liste))) (VC (VXINF (VVPP vorbereitet)))) (NF (PX (APPR mit) (NX (NN hotels))))), (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VAFIN ist))) (MF (NX (ART das) (NX (NX (NE marriotthotel)) (NX (NE hannover)))))), (SIMPX (ART das) (NX (NX (NE parkhotel)) (NX (NE hannover)))), (ART das), (NX (NX (NN hotel)) (NX (NX (NE cristal)) (NX (NE hannover))))], 'auto preterminal span': (96, 126), 'span': (96, 126), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU na ja das stimmt ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen)
		(KON und)
		(VXINF sagen)
		(ADVX einfach)
		(VF wir)
		(LK fliegen)
		(VC zuruck)
		(SU gut)
		(ADVX dann)
		(VF dann)
		(LK denke)
		(MF ich)
		(NF dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX dann konnen wir abends noch ein bischen in der bar sitzen oder auf alle falle treffen wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		(SIMPX das ist das marriotthotel hannover)
		(SIMPX das parkhotel hannover)
		(ART das)
		(NX hotel cristal hannover)
		(SIMPX
			(VF die)
			(LK sind)
			(MF alle mehr oder minder in der nahe vom hauptbahnhof)
			[01;36m(SIMPX[00m
				(SIMPX ich kucke mir mal die preise an)
				(DM also)
				(SIMPX
					(VF das hotel cristal hannover)
					[01;31m(FKOORD[00m
						[01;31m(LKM[00m
							(LK ist)
							(MF vielleicht ein bischen teuer)[01;31m)[00m
						(LKM hat dafur)[01;31m)[00m)[01;36m)[00m)
		(ADVX aber)
		[01;31m(NX[00m
			(NX sauna)
			(NX solarium)
			(NX bar)
			(KON und)
			(NX bistro)[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'DM', 'SIMPX'], 'family': ['VF', 'LK', 'MF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'PRF', 'ADV', 'ART', 'NN', 'PTKVZ', 'ADV', 'ART', 'NN', 'NE', 'NE', 'VAFIN', 'ADV', 'ART', 'PIS', 'ADJD', 'VAFIN', 'PROP'), 'right siblings': [], 'left siblings': [(VF (NX (PDS die))), (LK (VXFIN (VAFIN sind))), (MF (NX (PIS alle)) (ADVX (ADVX (ADV mehr)) (KON oder) (ADVX (ADV minder))) (PX (APPR in) (NX (NX (ART der) (NN nahe)) (PX (APPRART vom) (NX (NN hauptbahnhof))))))], 'auto preterminal span': (107, 126), 'span': (107, 126), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU na ja das stimmt ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen)
		(KON und)
		(VXINF sagen)
		(ADVX einfach)
		(VF wir)
		(LK fliegen)
		(VC zuruck)
		(SU gut)
		(ADVX dann)
		(VF dann)
		(LK denke)
		(MF ich)
		(NF dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX dann konnen wir abends noch ein bischen in der bar sitzen oder auf alle falle treffen wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		(SIMPX das ist das marriotthotel hannover)
		(SIMPX das parkhotel hannover)
		(ART das)
		(NX hotel cristal hannover)
		(SIMPX
			(VF die)
			(LK sind)
			(MF alle mehr oder minder in der nahe vom hauptbahnhof)
			(SIMPX
				(SIMPX ich kucke mir mal die preise an)
				(DM also)
				(SIMPX
					(VF das hotel cristal hannover)
					[01;31m(FKOORD[00m
						[01;31m(LKM[00m
							(LK ist)
							(MF vielleicht ein bischen teuer)[01;31m)[00m
						(LKM hat dafur)[01;31m)[00m)))
		(ADVX aber)
		[01;31m(NX[00m
			(NX sauna)
			(NX solarium)
			(NX bar)
			(KON und)
			(NX bistro)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['LKM', 'LKM'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'ADV', 'ART', 'PIS', 'ADJD', 'VAFIN', 'PROP'), 'right siblings': ['LKM'], 'parent': 'FKOORD', 'auto preterminal span': (119, 126), 'span': (119, 124), 'left siblings': [], 'label': 'LKM', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU na ja das stimmt ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen)
		(KON und)
		(VXINF sagen)
		(ADVX einfach)
		(VF wir)
		(LK fliegen)
		(VC zuruck)
		(SU gut)
		(ADVX dann)
		(VF dann)
		(LK denke)
		(MF ich)
		(NF dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX dann konnen wir abends noch ein bischen in der bar sitzen oder auf alle falle treffen wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		(SIMPX das ist das marriotthotel hannover)
		(SIMPX das parkhotel hannover)
		(ART das)
		(NX hotel cristal hannover)
		(SIMPX
			(VF die)
			(LK sind)
			(MF alle mehr oder minder in der nahe vom hauptbahnhof)
			(SIMPX
				(SIMPX ich kucke mir mal die preise an)
				(DM also)
				(SIMPX
					(VF das hotel cristal hannover)
					[01;31m(FKOORD[00m
						(LK ist)
						(MF vielleicht ein bischen teuer)
						(LKM hat dafur)[01;31m)[00m)))
		(ADVX aber)
		[01;31m(NX[00m
			(NX sauna)
			(NX solarium)
			(NX bar)
			(KON und)
			(NX bistro)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['LK', 'MF', 'LKM'], 'family': ['VF', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'NE', 'NE', 'VAFIN', 'ADV', 'ART', 'PIS', 'ADJD', 'VAFIN', 'PROP'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (115, 126), 'span': (119, 126), 'left siblings': ['VF'], 'label': 'FKOORD', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU na ja das stimmt ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen)
		(KON und)
		(VXINF sagen)
		(ADVX einfach)
		(VF wir)
		(LK fliegen)
		(VC zuruck)
		(SU gut)
		(ADVX dann)
		(VF dann)
		(LK denke)
		(MF ich)
		(NF dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX dann konnen wir abends noch ein bischen in der bar sitzen oder auf alle falle treffen wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		(SIMPX das ist das marriotthotel hannover)
		(SIMPX das parkhotel hannover)
		(ART das)
		(NX hotel cristal hannover)
		(SIMPX die sind alle mehr oder minder in der nahe vom hauptbahnhof ich kucke mir mal die preise an also das hotel cristal hannover ist vielleicht ein bischen teuer hat dafur)
		(ADVX aber)
		[01;31m(NX[00m
			(NX sauna)
			(NX solarium)
			(NX bar)
			(KON und)
			(NX bistro)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['NX', 'NX', 'NX', 'KON', 'NX'], 'family': ['SU', 'DM', 'SIMPX', 'SIMPX', 'KON', 'VXINF', 'ADVX', 'VF', 'LK', 'VC', 'SU', 'ADVX', 'VF', 'LK', 'MF', 'NF', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'ART', 'NX', 'SIMPX', 'ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PTKANT', 'PDS', 'VVFIN', 'PTKANT', 'ADV', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ART', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'VVFIN', 'ADV', 'PPER', 'VVFIN', 'PTKVZ', 'ITJ', 'ADV', 'ADV', 'VVFIN', 'PPER', 'ADV', 'VAFIN', 'PPER', 'PIS', 'APPR', 'KOUS', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'VVFIN', 'PWAV', 'PPER', 'VVINF', 'VMFIN', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'APPR', 'PIDAT', 'NN', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'KON', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'VVPP', 'APPR', 'NN', 'PDS', 'VAFIN', 'ART', 'NE', 'NE', 'ART', 'NE', 'NE', 'ART', 'NN', 'NE', 'NE', 'PDS', 'VAFIN', 'PIS', 'ADV', 'KON', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'PPER', 'VVFIN', 'PRF', 'ADV', 'ART', 'NN', 'PTKVZ', 'ADV', 'ART', 'NN', 'NE', 'NE', 'VAFIN', 'ADV', 'ART', 'PIS', 'ADJD', 'VAFIN', 'PROP', 'ADV', 'NN', 'NN', 'NN', 'KON', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 132), 'span': (127, 132), 'left siblings': ['SU', 'DM', 'SIMPX', 'SIMPX', 'KON', 'VXINF', 'ADVX', 'VF', 'LK', 'VC', 'SU', 'ADVX', 'VF', 'LK', 'MF', 'NF', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'ART', 'NX', 'SIMPX', 'ADVX'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP na ja das stimmt ja also und dann konnen wir einfach den dann brauchen wir uns jetzt vielleicht gar nicht festlegen und sagen einfach wir fliegen zuruck gut dann dann denke ich dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen ich denke wir nehmen zusammen einfach ein hotel dann konnen wir abends noch ein bischen in der bar sitzen oder auf alle falle treffen wir uns dann da und ich habe hier eine liste vorbereitet mit hotels das ist das marriotthotel hannover das parkhotel hannover das hotel cristal hannover die sind alle mehr oder minder in der nahe vom hauptbahnhof ich kucke mir mal die preise an also das hotel cristal hannover ist vielleicht ein bischen teuer hat dafur aber sauna solarium bar und bistro)

Sentence 459:
10 Initial errors
0 on fringe, 7 iterations
2 Error:UNSET move
2 Error:Clause Attachment
2 Error:Clause Attachment
1 Error:UNSET add
1 Error:Unary
1 Error:UNSET remove
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;36m(SU[00m
			[01;31m(SU[00m
				(DM
					(ITJ stimmt))[01;31m)[00m
			[01;31m(SU[00m
				(SIMPX
					(VF wir)
					(LK haben)
					(MF wahrscheinlich keine zeit)
					(NF in die sauna zu gehen))[01;31m)[00m[01;36m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF also)
				(LK konnten)
				(MF wir auch das parkhotel hannover)
				(VC nehmen)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;36m(SU[00m
				(SIMPX
					(VF das)
					(LK ist)
					[01;36m(MF[00m
						(APPR mit)
						(MF
							[01;31m(NX[00m
								(NX das einzelzimmer)
								(PX mit einhundert neunzehn mark)[01;31m)[00m)[01;36m)[00m)[01;36m)[00m
			[01;36m(SU[00m
				(SIMPX
					(LK ware)
					(MF das doch das doch annehmbar))[01;36m)[00m[01;31m)[00m))
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SU', 'SIMPX'], 'mover info': [('SU', (0, 1))], 'old_family': ['SU', 'SU', 'SU', 'SU'], 'start left siblings': [], 'auto preterminals': ('ITJ', 'PPER', 'VAFIN', 'ADV', 'PIAT', 'NN', 'APPR', 'ART', 'NN', 'PTKZU', 'VVINF', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ART', 'NE', 'NE', 'VVINF', 'PDS', 'VAFIN', 'APPR', 'ART', 'NN', 'APPR', 'CARD', 'CARD', 'NN', 'VAFIN', 'PDS', 'ADV', 'PDS', 'ADV', 'ADJD'), 'start right siblings': ['SU', 'SU', 'SU'], 'end left siblings': [], 'auto preterminal span': (0, 34), 'movers': ['SU'], 'old_parent': 'TURN', 'POS confusion': ('ITJ', 'ITJ'), 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			[01;31m(SU[00m
				(DM
					(ITJ stimmt))[01;31m)[00m
			(SIMPX wir haben wahrscheinlich keine zeit in die sauna zu gehen))
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF also)
				(LK konnten)
				(MF wir auch das parkhotel hannover)
				(VC nehmen)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;36m(SU[00m
				(SIMPX
					(VF das)
					(LK ist)
					[01;36m(MF[00m
						(APPR mit)
						(MF
							[01;31m(NX[00m
								(NX das einzelzimmer)
								(PX mit einhundert neunzehn mark)[01;31m)[00m)[01;36m)[00m)[01;36m)[00m
			[01;36m(SU[00m
				(SIMPX
					(LK ware)
					(MF das doch das doch annehmbar))[01;36m)[00m[01;31m)[00m))
Step:Clause Attachment
{'new_parent': 'SU', 'new_family': ['SIMPX', 'SIMPX'], 'mover info': [('SIMPX', (19, 28))], 'old_family': ['SIMPX', 'SIMPX'], 'start left siblings': [], 'auto preterminals': ('ITJ', 'PPER', 'VAFIN', 'ADV', 'PIAT', 'NN', 'APPR', 'ART', 'NN', 'PTKZU', 'VVINF', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ART', 'NE', 'NE', 'VVINF', 'PDS', 'VAFIN', 'APPR', 'ART', 'NN', 'APPR', 'CARD', 'CARD', 'NN', 'VAFIN', 'PDS', 'ADV', 'PDS', 'ADV', 'ADJD'), 'start right siblings': ['SIMPX'], 'end left siblings': ['SIMPX'], 'auto preterminal span': (0, 34), 'movers': ['SIMPX'], 'old_parent': 'SU', 'end right siblings': [], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU
			[01;31m(SU[00m
				(DM
					(ITJ stimmt))[01;31m)[00m
			(SIMPX wir haben wahrscheinlich keine zeit in die sauna zu gehen))
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF also)
				(LK konnten)
				(MF wir auch das parkhotel hannover)
				(VC nehmen)[01;31m)[00m
			[01;36m(SU[00m
				(SIMPX
					(VF das)
					(LK ist)
					[01;36m(MF[00m
						(APPR mit)
						(MF
							[01;31m(NX[00m
								(NX das einzelzimmer)
								(PX mit einhundert neunzehn mark)[01;31m)[00m)[01;36m)[00m)[01;36m)[00m[01;31m)[00m
		(SU ware das doch das doch annehmbar)))
Step:Clause Attachment
{'new_parent': 'TURN', 'new_family': ['SU', 'SIMPX', 'SU', 'SU'], 'mover info': [('SIMPX', (11, 19))], 'old_family': ['SIMPX', 'SIMPX'], 'start left siblings': [], 'auto preterminals': ('ITJ', 'PPER', 'VAFIN', 'ADV', 'PIAT', 'NN', 'APPR', 'ART', 'NN', 'PTKZU', 'VVINF', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ART', 'NE', 'NE', 'VVINF', 'PDS', 'VAFIN', 'APPR', 'ART', 'NN', 'APPR', 'CARD', 'CARD', 'NN', 'VAFIN', 'PDS', 'ADV', 'PDS', 'ADV', 'ADJD'), 'start right siblings': ['SIMPX'], 'end left siblings': ['SU'], 'auto preterminal span': (0, 34), 'movers': ['SIMPX'], 'old_parent': 'SU', 'end right siblings': ['SU', 'SU'], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU
			[01;31m(SU[00m
				(DM
					(ITJ stimmt))[01;31m)[00m
			(SIMPX wir haben wahrscheinlich keine zeit in die sauna zu gehen))
		[01;31m(SIMPX[00m
			(VF also)
			(LK konnten)
			(MF wir auch das parkhotel hannover)
			(VC nehmen)[01;31m)[00m
		(SU
			(SIMPX
				(VF das)
				(LK ist)
				[01;36m(MF[00m
					(APPR mit)
					(MF
						[01;31m(NX[00m
							(NX das einzelzimmer)
							(PX mit einhundert neunzehn mark)[01;31m)[00m)[01;36m)[00m))
		(SU ware das doch das doch annehmbar)))
Step:UNSET add
{'subtrees': ['APPR', 'MF'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NN', 'APPR', 'CARD', 'CARD', 'NN'), 'right siblings': [], 'left siblings': [(VF (NX (PDS das))), (LK (VXFIN (VAFIN ist)))], 'auto preterminal span': (21, 28), 'span': (21, 28), 'parent': 'SIMPX', 'label': 'MF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU
			[01;31m(SU[00m
				(DM
					(ITJ stimmt))[01;31m)[00m
			(SIMPX wir haben wahrscheinlich keine zeit in die sauna zu gehen))
		[01;31m(SIMPX[00m
			(VF also)
			(LK konnten)
			(MF wir auch das parkhotel hannover)
			(VC nehmen)[01;31m)[00m
		(SU
			(SIMPX
				(VF das)
				(LK ist)
				(MF
					(APPR mit)
					(MF
						[01;31m(NX[00m
							(NX das einzelzimmer)
							(PX mit einhundert neunzehn mark)[01;31m)[00m))))
		(SU ware das doch das doch annehmbar)))
Step:Unary
{'subtrees': ['DM'], 'family': ['SU', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PPER', 'VAFIN', 'ADV', 'PIAT', 'NN', 'APPR', 'ART', 'NN', 'PTKZU', 'VVINF'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 11), 'span': (0, 1), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU stimmt wir haben wahrscheinlich keine zeit in die sauna zu gehen)
		[01;31m(SIMPX[00m
			(VF also)
			(LK konnten)
			(MF wir auch das parkhotel hannover)
			(VC nehmen)[01;31m)[00m
		(SU
			(SIMPX
				(VF das)
				(LK ist)
				(MF
					(APPR mit)
					(MF
						[01;31m(NX[00m
							(NX das einzelzimmer)
							(PX mit einhundert neunzehn mark)[01;31m)[00m))))
		(SU ware das doch das doch annehmbar)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['SU', 'SIMPX', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PPER', 'VAFIN', 'ADV', 'PIAT', 'NN', 'APPR', 'ART', 'NN', 'PTKZU', 'VVINF', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ART', 'NE', 'NE', 'VVINF', 'PDS', 'VAFIN', 'APPR', 'ART', 'NN', 'APPR', 'CARD', 'CARD', 'NN', 'VAFIN', 'PDS', 'ADV', 'PDS', 'ADV', 'ADJD'), 'right siblings': ['SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 34), 'span': (11, 19), 'left siblings': ['SU'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU stimmt wir haben wahrscheinlich keine zeit in die sauna zu gehen)
		(VF also)
		(LK konnten)
		(MF wir auch das parkhotel hannover)
		(VC nehmen)
		(SU
			(SIMPX
				(VF das)
				(LK ist)
				(MF
					(APPR mit)
					(MF
						[01;31m(NX[00m
							(NX das einzelzimmer)
							(PX mit einhundert neunzehn mark)[01;31m)[00m))))
		(SU ware das doch das doch annehmbar)))
Step:Unary
{'subtrees': ['NX', 'PX'], 'family': ['NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'APPR', 'CARD', 'CARD', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (22, 28), 'span': (22, 28), 'left siblings': [], 'label': 'NX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP stimmt wir haben wahrscheinlich keine zeit in die sauna zu gehen also konnten wir auch das parkhotel hannover nehmen das ist mit das einzelzimmer mit einhundert neunzehn mark ware das doch das doch annehmbar)

Sentence 460:
12 Initial errors
0 on fringe, 9 iterations
2 Error:Different label
2 Error:Clause Attachment
2 Error:UNSET move
1 Error:Clause Attachment
1 Error:UNSET add
1 Error:Clause Attachment
1 Error:Single Word Phrase
1 Error:Clause Attachment
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;36m(SU[00m
				(DM okay)
				[01;31m(SIMPX[00m
					(VF parkhotel)
					[01;31m(SIMPX[00m
						[01;36m(SIMPX[00m
							(LK sehe)
							(MF ich)[01;36m)[00m
						[01;31m(VC[00m
							(PTKVZ ein)[01;31m)[00m[01;31m)[00m
					(LK ist)
					(MF zu riskant)[01;31m)[00m[01;36m)[00m
			[01;36m(SU[00m
				(SIMPX
					(LK nehmen)
					(MF wir das marriotthotel))[01;36m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(DM also)
			[01;36m(SIMPX[00m
				(SIMPX die konnen sich)
				(ART die)[01;36m)[00m
			(SIMPX die konnen sich da auch in hannover keinen durchhanger erlauben)[01;31m)[00m
		(SU
			[01;36m(VF[00m [01;31m(DM[00m
				(ADVX
					(ADV also))[01;31m)[00m[01;36m)[00m
			[01;31m(SIMPX[00m
				(LK nehmen)
				(MF wir marriott)[01;31m)[00m)))
Step:Different label
{'family': ['VF', 'SIMPX'], 'auto preterminal span': (27, 28), 'span': (27, 28), 'subtrees': ['ADVX'], 'parent': 'SU', 'over_word': False, 'auto preterminals': ('ADV',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('DM', 'VF')}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;36m(SU[00m
				(DM okay)
				[01;31m(SIMPX[00m
					(VF parkhotel)
					[01;31m(SIMPX[00m
						[01;36m(SIMPX[00m
							(LK sehe)
							(MF ich)[01;36m)[00m
						[01;31m(VC[00m
							(PTKVZ ein)[01;31m)[00m[01;31m)[00m
					(LK ist)
					(MF zu riskant)[01;31m)[00m[01;36m)[00m
			[01;36m(SU[00m
				(SIMPX
					(LK nehmen)
					(MF wir das marriotthotel))[01;36m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(DM also)
			[01;36m(SIMPX[00m
				(SIMPX die konnen sich)
				(ART die)[01;36m)[00m
			(SIMPX die konnen sich da auch in hannover keinen durchhanger erlauben)[01;31m)[00m
		(SU
			(VF also)
			[01;31m(SIMPX[00m
				(LK nehmen)
				(MF wir marriott)[01;31m)[00m)))
Step:Clause Attachment
{'new_parent': 'TURN', 'new_family': ['DM', 'SIMPX', 'SU', 'SU', 'SU'], 'mover info': [('DM', (0, 1)), ('SIMPX', (1, 8))], 'old_family': ['DM', 'SIMPX', 'SIMPX'], 'start left siblings': [], 'auto preterminals': ('ITJ', 'NE', 'VVFIN', 'PPER', 'PTKVZ', 'VAFIN', 'PTKA', 'ADJD', 'VVFIN', 'PPER', 'ART', 'NE', 'ADV', 'PDS', 'VMFIN', 'PRF', 'ART', 'PDS', 'VMFIN', 'PRF', 'ADV', 'ADV', 'APPR', 'NE', 'PIAT', 'NN', 'VVINF', 'ADV', 'VVFIN', 'PPER', 'NE'), 'start right siblings': ['SIMPX'], 'end left siblings': [], 'auto preterminal span': (0, 31), 'movers': ['DM', 'SIMPX'], 'old_parent': 'SU', 'end right siblings': ['SU', 'SU', 'SU'], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;36m(SU[00m
			(DM okay)
			[01;31m(SIMPX[00m
				(VF parkhotel)
				[01;31m(SIMPX[00m
					[01;36m(SIMPX[00m
						(LK sehe)
						(MF ich)[01;36m)[00m
					[01;31m(VC[00m
						(PTKVZ ein)[01;31m)[00m[01;31m)[00m
				(LK ist)
				(MF zu riskant)[01;31m)[00m[01;36m)[00m
		(SU nehmen wir das marriotthotel)
		[01;31m(SU[00m
			(DM also)
			[01;36m(SIMPX[00m
				(SIMPX die konnen sich)
				(ART die)[01;36m)[00m
			(SIMPX die konnen sich da auch in hannover keinen durchhanger erlauben)[01;31m)[00m
		(SU
			(VF also)
			[01;31m(SIMPX[00m
				(LK nehmen)
				(MF wir marriott)[01;31m)[00m)))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['VF', 'SIMPX', 'VC', 'LK', 'MF'], 'mover info': [('VC', (4, 5))], 'old_family': ['LK', 'MF', 'VC'], 'start left siblings': ['LK', 'MF'], 'auto preterminals': ('NE', 'VVFIN', 'PPER', 'PTKVZ', 'VAFIN', 'PTKA', 'ADJD'), 'start right siblings': [], 'end left siblings': ['VF', 'SIMPX'], 'auto preterminal span': (1, 8), 'movers': ['VC'], 'old_parent': 'SIMPX', 'POS confusion': ('PTKVZ', 'PTKVZ'), 'end right siblings': ['LK', 'MF'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		[01;36m(SU[00m
			(DM okay)
			[01;31m(SIMPX[00m
				(VF parkhotel)
				(SIMPX sehe ich)
				[01;31m(VC[00m
					(PTKVZ ein)[01;31m)[00m
				(LK ist)
				(MF zu riskant)[01;31m)[00m[01;36m)[00m
		(SU nehmen wir das marriotthotel)
		[01;31m(SU[00m
			(DM also)
			[01;36m(SIMPX[00m
				(SIMPX die konnen sich)
				(ART die)[01;36m)[00m
			(SIMPX die konnen sich da auch in hannover keinen durchhanger erlauben)[01;31m)[00m
		(SU
			(VF also)
			[01;31m(SIMPX[00m
				(LK nehmen)
				(MF wir marriott)[01;31m)[00m)))
Step:Clause Attachment
{'subtrees': ['DM', 'SIMPX'], 'family': ['SU', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'NE', 'VVFIN', 'PPER', 'PTKVZ', 'VAFIN', 'PTKA', 'ADJD'), 'right siblings': [(SU (SIMPX (LK (VXFIN (VVFIN nehmen))) (MF (NX (PPER wir)) (NX (ART das) (NE marriotthotel))))), (SU (DM (ADVX (ADV also))) (SIMPX (VF (NX (PDS die))) (LK (VXFIN (VMFIN konnen))) (MF (NX (PRF sich)))) (ART die) (SIMPX (VF (NX (PDS die))) (LK (VXFIN (VMFIN konnen))) (MF (NX (PRF sich)) (ADVX (ADV da)) (ADVX (ADV auch)) (PX (APPR in) (NX (NE hannover))) (NX (PIAT keinen) (NN durchhanger))) (VC (VXINF (VVINF erlauben))))), (SU (VF (ADVX (ADV also))) (SIMPX (LK (VXFIN (VVFIN nehmen))) (MF (NX (PPER wir)) (NX (NE marriott)))))], 'left siblings': [], 'auto preterminal span': (0, 8), 'span': (0, 8), 'parent': 'TURN', 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM okay)
			[01;31m(SIMPX[00m
				(VF parkhotel)
				(SIMPX sehe ich)
				[01;31m(VC[00m
					(PTKVZ ein)[01;31m)[00m
				(LK ist)
				(MF zu riskant)[01;31m)[00m)
		(SU nehmen wir das marriotthotel)
		[01;31m(SU[00m
			(DM also)
			[01;36m(SIMPX[00m
				(SIMPX die konnen sich)
				(ART die)[01;36m)[00m
			(SIMPX die konnen sich da auch in hannover keinen durchhanger erlauben)[01;31m)[00m
		(SU
			(VF also)
			[01;31m(SIMPX[00m
				(LK nehmen)
				(MF wir marriott)[01;31m)[00m)))
Step:UNSET add
{'subtrees': ['SIMPX', 'ART'], 'family': ['DM', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VMFIN', 'PRF', 'ART'), 'right siblings': [(SIMPX (VF (NX (PDS die))) (LK (VXFIN (VMFIN konnen))) (MF (NX (PRF sich)) (ADVX (ADV da)) (ADVX (ADV auch)) (PX (APPR in) (NX (NE hannover))) (NX (PIAT keinen) (NN durchhanger))) (VC (VXINF (VVINF erlauben))))], 'left siblings': [(DM (ADVX (ADV also)))], 'auto preterminal span': (13, 17), 'span': (13, 17), 'parent': 'SU', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM okay)
			[01;31m(SIMPX[00m
				(VF parkhotel)
				(SIMPX sehe ich)
				[01;31m(VC[00m
					(PTKVZ ein)[01;31m)[00m
				(LK ist)
				(MF zu riskant)[01;31m)[00m)
		(SU nehmen wir das marriotthotel)
		[01;31m(SU[00m
			(DM also)
			(SIMPX die konnen sich die)
			(SIMPX die konnen sich da auch in hannover keinen durchhanger erlauben)[01;31m)[00m
		(SU
			(VF also)
			[01;31m(SIMPX[00m
				(LK nehmen)
				(MF wir marriott)[01;31m)[00m)))
Step:Clause Attachment
{'subtrees': ['VF', 'SIMPX', 'VC', 'LK', 'MF'], 'family': ['DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'NE', 'VVFIN', 'PPER', 'PTKVZ', 'VAFIN', 'PTKA', 'ADJD'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (0, 8), 'span': (1, 8), 'left siblings': ['DM'], 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM okay)
			(VF parkhotel)
			(SIMPX sehe ich)
			[01;31m(VC[00m
				(PTKVZ ein)[01;31m)[00m
			(LK ist)
			(MF zu riskant))
		(SU nehmen wir das marriotthotel)
		[01;31m(SU[00m
			(DM also)
			(SIMPX die konnen sich die)
			(SIMPX die konnen sich da auch in hannover keinen durchhanger erlauben)[01;31m)[00m
		(SU
			(VF also)
			[01;31m(SIMPX[00m
				(LK nehmen)
				(MF wir marriott)[01;31m)[00m)))
Step:Single Word Phrase
{'subtrees': ['PTKVZ'], 'family': ['DM', 'VF', 'SIMPX', 'VC', 'LK', 'MF'], 'over_word': True, 'over words': True, 'auto preterminals': ('ITJ', 'NE', 'VVFIN', 'PPER', 'PTKVZ', 'VAFIN', 'PTKA', 'ADJD'), 'right siblings': ['LK', 'MF'], 'parent': 'SU', 'auto preterminal span': (0, 8), 'span': (4, 5), 'left siblings': ['DM', 'VF', 'SIMPX'], 'label': 'VC', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(SU okay parkhotel sehe ich ein ist zu riskant)
		(SU nehmen wir das marriotthotel)
		[01;31m(SU[00m
			(DM also)
			(SIMPX die konnen sich die)
			(SIMPX die konnen sich da auch in hannover keinen durchhanger erlauben)[01;31m)[00m
		(SU
			(VF also)
			[01;31m(SIMPX[00m
				(LK nehmen)
				(MF wir marriott)[01;31m)[00m)))
Step:Clause Attachment
{'subtrees': ['DM', 'SIMPX', 'SIMPX'], 'family': ['SU', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'NE', 'VVFIN', 'PPER', 'PTKVZ', 'VAFIN', 'PTKA', 'ADJD', 'VVFIN', 'PPER', 'ART', 'NE', 'ADV', 'PDS', 'VMFIN', 'PRF', 'ART', 'PDS', 'VMFIN', 'PRF', 'ADV', 'ADV', 'APPR', 'NE', 'PIAT', 'NN', 'VVINF', 'ADV', 'VVFIN', 'PPER', 'NE'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 31), 'span': (12, 27), 'left siblings': ['SU', 'SU'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU okay parkhotel sehe ich ein ist zu riskant)
		(SU nehmen wir das marriotthotel)
		(DM also)
		(SIMPX die konnen sich die)
		(SIMPX die konnen sich da auch in hannover keinen durchhanger erlauben)
		(SU
			(VF also)
			[01;31m(SIMPX[00m
				(LK nehmen)
				(MF wir marriott)[01;31m)[00m)))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['VF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'NE'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (27, 31), 'span': (28, 31), 'left siblings': ['VF'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP okay parkhotel sehe ich ein ist zu riskant nehmen wir das marriotthotel also die konnen sich die die konnen sich da auch in hannover keinen durchhanger erlauben also nehmen wir marriott)

Sentence 461:
6 Initial errors
0 on fringe, 6 iterations
1 Error:Unary
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET add
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(SIMPX
				(LK ist)
				(MF ein guter name))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF einzelzimmer)
				(LK kostet)
				[01;33m(NX (MF[00m (MF hundert funfundachtzig mark)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF die)
				(LK haben)
				(MF einen fitnesraum))[01;31m)[00m)) [01;33mMF) NX)[00m
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'ART', 'ADJA', 'NN', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN', 'PDS', 'VAFIN', 'ART', 'NN'), 'right siblings': ['SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 13), 'span': (0, 4), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX ist ein guter name)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF einzelzimmer)
				(LK kostet)
				[01;33m(NX (MF[00m (MF hundert funfundachtzig mark)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF die)
				(LK haben)
				(MF einen fitnesraum))[01;31m)[00m)) [01;33mMF) NX)[00m
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SIMPX', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'ART', 'ADJA', 'NN', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN', 'PDS', 'VAFIN', 'ART', 'NN'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 13), 'span': (4, 9), 'left siblings': ['SIMPX'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX ist ein guter name)
		[01;31m(SIMPX[00m
			(VF einzelzimmer)
			(LK kostet)
			[01;33m(NX (MF[00m (MF hundert funfundachtzig mark)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF die)
				(LK haben)
				(MF einen fitnesraum))[01;31m)[00m)) [01;33mMF) NX)[00m
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['SIMPX', 'SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'ART', 'ADJA', 'NN', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN', 'PDS', 'VAFIN', 'ART', 'NN'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 13), 'span': (4, 9), 'left siblings': ['SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX ist ein guter name)
		(VF einzelzimmer)
		(LK kostet)
		[01;36m(NX[00m
			[01;36m(MF[00m
				(MF hundert funfundachtzig mark)
				[01;31m(SU[00m
					(SIMPX
						(VF die)
						(LK haben)
						(MF einen fitnesraum))[01;31m)[00m[01;36m)[00m[01;36m)[00m))
Step:UNSET add
{'subtrees': ['MF', 'SU'], 'family': ['SIMPX', 'VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'CARD', 'NN', 'PDS', 'VAFIN', 'ART', 'NN'), 'right siblings': [], 'left siblings': [(SIMPX (LK (VXFIN (VAFIN ist))) (MF (NX (ART ein) (ADJX (ADJA guter)) (NN name)))), (VF (NX (NN einzelzimmer))), (LK (VXFIN (VVFIN kostet)))], 'auto preterminal span': (6, 13), 'span': (6, 13), 'parent': 'TURN', 'label': 'MF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SIMPX ist ein guter name)
		(VF einzelzimmer)
		(LK kostet)
		[01;36m(NX[00m
			(MF
				(MF hundert funfundachtzig mark)
				[01;31m(SU[00m
					(SIMPX
						(VF die)
						(LK haben)
						(MF einen fitnesraum))[01;31m)[00m)[01;36m)[00m))
Step:Unary
{'subtrees': ['MF'], 'family': ['SIMPX', 'VF', 'LK', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'CARD', 'NN', 'PDS', 'VAFIN', 'ART', 'NN'), 'right siblings': [], 'left siblings': [(SIMPX (LK (VXFIN (VAFIN ist))) (MF (NX (ART ein) (ADJX (ADJA guter)) (NN name)))), (VF (NX (NN einzelzimmer))), (LK (VXFIN (VVFIN kostet)))], 'auto preterminal span': (6, 13), 'span': (6, 13), 'parent': 'TURN', 'label': 'NX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SIMPX ist ein guter name)
		(VF einzelzimmer)
		(LK kostet)
		(NX
			(MF
				(MF hundert funfundachtzig mark)
				[01;31m(SU[00m
					(SIMPX
						(VF die)
						(LK haben)
						(MF einen fitnesraum))[01;31m)[00m))))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['MF', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'CARD', 'NN', 'PDS', 'VAFIN', 'ART', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (6, 13), 'span': (9, 13), 'left siblings': ['MF'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ist ein guter name einzelzimmer kostet hundert funfundachtzig mark die haben einen fitnesraum)

Sentence 462:
14 Initial errors
0 on fringe, 10 iterations
2 Error:Different label
2 Error:Different label
2 Error:Clause Attachment
2 Error:Clause Attachment
1 Error:Unary
1 Error:Clause Attachment
1 Error:Single Word Phrase
1 Error:Modifier Attachment
1 Error:Modifier Attachment
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM na ja)
			(DM gut)
			(SIMPX ich gehe auch nicht so oft ins fitnesstudio)
			[01;36m(SIMPX[00m
				[01;31m(SIMPX[00m
					[01;36m(KOORD[00m [01;31m(VF[00m
						[01;31m(ADVX[00m
							(ADV aber)[01;31m)[00m[01;31m)[00m[01;36m)[00m
					(LK meine)[01;31m)[00m
				[01;36m(NF[00m
					(SIMPX
						(VF ich)
						(LK wollte)
						(MF es jetzt nur mal)
						(VC sagen)
						(NF falls du da lust dazu hast))[01;36m)[00m[01;36m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(DM ja)
			[01;31m(SIMPX[00m
				(VF dann)
				(LK konnen)
				[01;31m(MF[00m
					(NX wir)
					(NX uns)
					(ADVX noch)[01;31m)[00m
				[01;36m(ADVX[00m [01;31m(VC[00m
					[01;31m(VXINF[00m
						(VVINF uberlegen)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m
			[01;36m(SU[00m
				(SIMPX
					(LK machen)
					(MF wir abends was))[01;36m)[00m[01;31m)[00m))
Step:Different label
{'family': ['KOORD', 'LK'], 'auto preterminal span': (11, 12), 'span': (11, 12), 'subtrees': ['ADVX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('ADV',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('VF', 'KOORD')}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM na ja)
			(DM gut)
			(SIMPX ich gehe auch nicht so oft ins fitnesstudio)
			[01;36m(SIMPX[00m
				[01;31m(SIMPX[00m
					(KOORD
						[01;31m(ADVX[00m
							(ADV aber)[01;31m)[00m)
					(LK meine)[01;31m)[00m
				[01;36m(NF[00m
					(SIMPX
						(VF ich)
						(LK wollte)
						(MF es jetzt nur mal)
						(VC sagen)
						(NF falls du da lust dazu hast))[01;36m)[00m[01;36m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(DM ja)
			[01;31m(SIMPX[00m
				(VF dann)
				(LK konnen)
				[01;31m(MF[00m
					(NX wir)
					(NX uns)
					(ADVX noch)[01;31m)[00m
				[01;36m(ADVX[00m [01;31m(VC[00m
					[01;31m(VXINF[00m
						(VVINF uberlegen)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m
			[01;36m(SU[00m
				(SIMPX
					(LK machen)
					(MF wir abends was))[01;36m)[00m[01;31m)[00m))
Step:Different label
{'family': ['VF', 'LK', 'MF', 'ADVX'], 'auto preterminal span': (32, 33), 'span': (32, 33), 'subtrees': ['VXINF'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('VVINF',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('VC', 'ADVX')}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM na ja)
			(DM gut)
			(SIMPX ich gehe auch nicht so oft ins fitnesstudio)
			[01;36m(SIMPX[00m
				[01;31m(SIMPX[00m
					(KOORD
						[01;31m(ADVX[00m
							(ADV aber)[01;31m)[00m)
					(LK meine)[01;31m)[00m
				[01;36m(NF[00m
					(SIMPX
						(VF ich)
						(LK wollte)
						(MF es jetzt nur mal)
						(VC sagen)
						(NF falls du da lust dazu hast))[01;36m)[00m[01;36m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(DM ja)
			[01;31m(SIMPX[00m
				(VF dann)
				(LK konnen)
				[01;31m(MF[00m
					(NX wir)
					(NX uns)
					(ADVX noch)[01;31m)[00m
				(ADVX
					[01;31m(VXINF[00m
						(VVINF uberlegen)[01;31m)[00m)[01;31m)[00m
			[01;36m(SU[00m
				(SIMPX
					(LK machen)
					(MF wir abends was))[01;36m)[00m[01;31m)[00m))
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['KOORD', 'LK', 'SIMPX'], 'mover info': [('SIMPX', (13, 26))], 'old_family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'start left siblings': ['DM', 'DM', 'SIMPX', 'SIMPX'], 'auto preterminals': ('ITJ', 'PTKANT', 'ITJ', 'PPER', 'VVFIN', 'ADV', 'PTKNEG', 'ADV', 'ADV', 'APPRART', 'NN', 'ADV', 'VVFIN', 'PPER', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'VVINF', 'KOUS', 'PPER', 'ADV', 'NN', 'PROP', 'VAFIN'), 'start right siblings': [], 'end left siblings': ['KOORD', 'LK'], 'auto preterminal span': (0, 26), 'movers': ['SIMPX'], 'old_parent': 'SU', 'end right siblings': [], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM na ja)
			(DM gut)
			(SIMPX ich gehe auch nicht so oft ins fitnesstudio)
			(SIMPX
				(KOORD
					[01;31m(ADVX[00m
						(ADV aber)[01;31m)[00m)
				(LK meine)
				[01;36m(NF[00m
					(SIMPX
						(VF ich)
						(LK wollte)
						(MF es jetzt nur mal)
						(VC sagen)
						(NF falls du da lust dazu hast))[01;36m)[00m)[01;31m)[00m
		[01;31m(SU[00m
			(DM ja)
			[01;31m(SIMPX[00m
				(VF dann)
				(LK konnen)
				[01;31m(MF[00m
					(NX wir)
					(NX uns)
					(ADVX noch)[01;31m)[00m
				(ADVX
					[01;31m(VXINF[00m
						(VVINF uberlegen)[01;31m)[00m)[01;31m)[00m
			[01;36m(SU[00m
				(SIMPX
					(LK machen)
					(MF wir abends was))[01;36m)[00m[01;31m)[00m))
Step:Clause Attachment
{'new_parent': 'SU', 'new_family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'SIMPX'], 'mover info': [('DM', (26, 27)), ('SIMPX', (27, 33))], 'old_family': ['DM', 'SIMPX', 'SIMPX'], 'start left siblings': [], 'auto preterminals': ('ITJ', 'PTKANT', 'ITJ', 'PPER', 'VVFIN', 'ADV', 'PTKNEG', 'ADV', 'ADV', 'APPRART', 'NN', 'ADV', 'VVFIN', 'PPER', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'VVINF', 'KOUS', 'PPER', 'ADV', 'NN', 'PROP', 'VAFIN', 'PTKANT', 'ADV', 'VMFIN', 'PPER', 'PRF', 'ADV', 'VVINF', 'VVFIN', 'PPER', 'ADV', 'PIS'), 'start right siblings': ['SIMPX'], 'end left siblings': ['DM', 'DM', 'SIMPX', 'SIMPX'], 'auto preterminal span': (0, 37), 'movers': ['DM', 'SIMPX'], 'old_parent': 'SU', 'end right siblings': [], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM na ja)
			(DM gut)
			(SIMPX ich gehe auch nicht so oft ins fitnesstudio)
			(SIMPX
				(KOORD
					[01;31m(ADVX[00m
						(ADV aber)[01;31m)[00m)
				(LK meine)
				[01;36m(NF[00m
					(SIMPX
						(VF ich)
						(LK wollte)
						(MF es jetzt nur mal)
						(VC sagen)
						(NF falls du da lust dazu hast))[01;36m)[00m)
			(DM ja)
			[01;31m(SIMPX[00m
				(VF dann)
				(LK konnen)
				[01;31m(MF[00m
					(NX wir)
					(NX uns)
					(ADVX noch)[01;31m)[00m
				(ADVX
					[01;31m(VXINF[00m
						(VVINF uberlegen)[01;31m)[00m)[01;31m)[00m[01;31m)[00m
		(SU machen wir abends was)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['KOORD', 'LK', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'VVINF', 'KOUS', 'PPER', 'ADV', 'NN', 'PROP', 'VAFIN'), 'right siblings': [], 'left siblings': [(KOORD (ADVX (ADV aber))), (LK (VXFIN (VVFIN meine)))], 'auto preterminal span': (13, 26), 'span': (13, 26), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM na ja)
			(DM gut)
			(SIMPX ich gehe auch nicht so oft ins fitnesstudio)
			(SIMPX
				(KOORD
					[01;31m(ADVX[00m
						(ADV aber)[01;31m)[00m)
				(LK meine)
				(NF ich wollte es jetzt nur mal sagen falls du da lust dazu hast))
			(DM ja)
			[01;31m(SIMPX[00m
				(VF dann)
				(LK konnen)
				[01;31m(MF[00m
					(NX wir)
					(NX uns)
					(ADVX noch)[01;31m)[00m
				(ADVX
					[01;31m(VXINF[00m
						(VVINF uberlegen)[01;31m)[00m)[01;31m)[00m[01;31m)[00m
		(SU machen wir abends was)))
Step:Clause Attachment
{'subtrees': ['DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'SIMPX'], 'family': ['SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PTKANT', 'ITJ', 'PPER', 'VVFIN', 'ADV', 'PTKNEG', 'ADV', 'ADV', 'APPRART', 'NN', 'ADV', 'VVFIN', 'PPER', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'VVINF', 'KOUS', 'PPER', 'ADV', 'NN', 'PROP', 'VAFIN', 'PTKANT', 'ADV', 'VMFIN', 'PPER', 'PRF', 'ADV', 'VVINF', 'VVFIN', 'PPER', 'ADV', 'PIS'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 37), 'span': (0, 33), 'left siblings': [], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM na ja)
		(DM gut)
		(SIMPX ich gehe auch nicht so oft ins fitnesstudio)
		(SIMPX
			(KOORD
				[01;31m(ADVX[00m
					(ADV aber)[01;31m)[00m)
			(LK meine)
			(NF ich wollte es jetzt nur mal sagen falls du da lust dazu hast))
		(DM ja)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK konnen)
			[01;31m(MF[00m
				(NX wir)
				(NX uns)
				(ADVX noch)[01;31m)[00m
			(ADVX
				[01;31m(VXINF[00m
					(VVINF uberlegen)[01;31m)[00m)[01;31m)[00m
		(SU machen wir abends was)))
Step:Single Word Phrase
{'subtrees': ['ADV'], 'family': ['ADVX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADV',), 'right siblings': [], 'parent': 'KOORD', 'auto preterminal span': (11, 12), 'span': (11, 12), 'left siblings': [], 'label': 'ADVX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(DM na ja)
		(DM gut)
		(SIMPX ich gehe auch nicht so oft ins fitnesstudio)
		(SIMPX aber meine ich wollte es jetzt nur mal sagen falls du da lust dazu hast)
		(DM ja)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK konnen)
			[01;31m(MF[00m
				(NX wir)
				(NX uns)
				(ADVX noch)[01;31m)[00m
			(ADVX
				[01;31m(VXINF[00m
					(VVINF uberlegen)[01;31m)[00m)[01;31m)[00m
		(SU machen wir abends was)))
Step:Modifier Attachment
{'subtrees': ['VF', 'LK', 'MF', 'ADVX'], 'family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PTKANT', 'ITJ', 'PPER', 'VVFIN', 'ADV', 'PTKNEG', 'ADV', 'ADV', 'APPRART', 'NN', 'ADV', 'VVFIN', 'PPER', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'VVINF', 'KOUS', 'PPER', 'ADV', 'NN', 'PROP', 'VAFIN', 'PTKANT', 'ADV', 'VMFIN', 'PPER', 'PRF', 'ADV', 'VVINF', 'VVFIN', 'PPER', 'ADV', 'PIS'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 37), 'span': (27, 33), 'left siblings': ['DM', 'DM', 'SIMPX', 'SIMPX', 'DM'], 'label': 'SIMPX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM na ja)
		(DM gut)
		(SIMPX ich gehe auch nicht so oft ins fitnesstudio)
		(SIMPX aber meine ich wollte es jetzt nur mal sagen falls du da lust dazu hast)
		(DM ja)
		(VF dann)
		(LK konnen)
		[01;31m(MF[00m
			(NX wir)
			(NX uns)
			(ADVX noch)[01;31m)[00m
		(ADVX
			[01;31m(VXINF[00m
				(VVINF uberlegen)[01;31m)[00m)
		(SU machen wir abends was)))
Step:Modifier Attachment
{'subtrees': ['NX', 'NX', 'ADVX'], 'family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'VF', 'LK', 'MF', 'ADVX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PTKANT', 'ITJ', 'PPER', 'VVFIN', 'ADV', 'PTKNEG', 'ADV', 'ADV', 'APPRART', 'NN', 'ADV', 'VVFIN', 'PPER', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'VVINF', 'KOUS', 'PPER', 'ADV', 'NN', 'PROP', 'VAFIN', 'PTKANT', 'ADV', 'VMFIN', 'PPER', 'PRF', 'ADV', 'VVINF', 'VVFIN', 'PPER', 'ADV', 'PIS'), 'right siblings': ['ADVX', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 37), 'span': (29, 32), 'left siblings': ['DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'VF', 'LK'], 'label': 'MF', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM na ja)
		(DM gut)
		(SIMPX ich gehe auch nicht so oft ins fitnesstudio)
		(SIMPX aber meine ich wollte es jetzt nur mal sagen falls du da lust dazu hast)
		(DM ja)
		(VF dann)
		(LK konnen)
		(NX wir)
		(NX uns)
		(ADVX noch)
		(ADVX
			[01;31m(VXINF[00m
				(VVINF uberlegen)[01;31m)[00m)
		(SU machen wir abends was)))
Step:Single Word Phrase
{'subtrees': ['VVINF'], 'family': ['VXINF'], 'over_word': True, 'over words': True, 'auto preterminals': ('VVINF',), 'right siblings': [], 'parent': 'ADVX', 'auto preterminal span': (32, 33), 'span': (32, 33), 'left siblings': [], 'label': 'VXINF', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP na ja gut ich gehe auch nicht so oft ins fitnesstudio aber meine ich wollte es jetzt nur mal sagen falls du da lust dazu hast ja dann konnen wir uns noch uberlegen machen wir abends was)

Sentence 463:
18 Initial errors
0 on fringe, 13 iterations
3 Error:Modifier Attachment
2 Error:Single Word Phrase
2 Error:Single Word Phrase
2 Error:Single Word Phrase
1 Error:Single Word Phrase
1 Error:Unary
1 Error:Unary
1 Error:UNSET remove
1 Error:Unary
1 Error:Clause Attachment
1 Error:Single Word Phrase
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;31m(DM[00m
				(ADVX immer)
				[01;36m(DM[00m [01;31m(ADVX[00m
					(ADV doch)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(NX
				(NX kino)
				(NX theater)
				(NX restaurant))[01;31m)[00m
		[01;31m(SU[00m
			(DM also)
			[01;36m(SIMPX[00m
				[01;31m(SIMPX[00m
					(VF theater)
					(LK denke)
					[01;33m(MF[00m (MF ich)[01;31m)[00m
				[01;36m(NX[00m
					(KOUS das)[01;36m)[00m
				(ADVX da) [01;33mMF)[00m[01;36m)[00m
			(SIMPX
				(VF da)
				(LK kriegen)
				(MF
					(NX wir)
					(NX
						(NX keine karten)
						[01;36m(NX[00m [01;31m(ADVX[00m
							(ADV mehr)[01;31m)[00m[01;36m)[00m)))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				[01;36m(VXINF[00m
					[01;36m(VC[00m
						(VF
							[01;31m(PX[00m
								(PROP auserdem)[01;31m)[00m)[01;36m)[00m[01;36m)[00m
				(LK mussen)
				(MF wir uns)
				(VC kummern)[01;31m)[00m[01;31m)[00m))
Step:Modifier Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'KOUS', 'ADVX'], 'mover info': [('KOUS', (9, 10)), ('ADVX', (10, 11))], 'old_family': ['DM', 'SIMPX', 'KOUS', 'ADVX', 'SIMPX'], 'start left siblings': ['DM', 'SIMPX'], 'auto preterminals': ('ADV', 'NN', 'VVFIN', 'PPER', 'KOUS', 'ADV', 'ADV', 'VVFIN', 'PPER', 'PIAT', 'NN', 'ADV'), 'start right siblings': ['SIMPX'], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (5, 17), 'adding node already present': False, 'movers': ['KOUS', 'ADVX'], 'old_parent': 'SU', 'added and moved': True, 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'VXINF'}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;31m(DM[00m
				(ADVX immer)
				[01;36m(DM[00m [01;31m(ADVX[00m
					(ADV doch)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(NX
				(NX kino)
				(NX theater)
				(NX restaurant))[01;31m)[00m
		[01;31m(SU[00m
			(DM also)
			(SIMPX
				(VF theater)
				(LK denke)
				(MF
					(MF ich)
					[01;36m(NX[00m
						(KOUS das)[01;36m)[00m
					(ADVX da)))
			(SIMPX
				(VF da)
				(LK kriegen)
				(MF
					(NX wir)
					(NX
						(NX keine karten)
						[01;36m(NX[00m [01;31m(ADVX[00m
							(ADV mehr)[01;31m)[00m[01;36m)[00m)))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				[01;36m(VXINF[00m
					[01;36m(VC[00m
						(VF
							[01;31m(PX[00m
								(PROP auserdem)[01;31m)[00m)[01;36m)[00m[01;36m)[00m
				(LK mussen)
				(MF wir uns)
				(VC kummern)[01;31m)[00m[01;31m)[00m))
Step:Single Word Phrase
{'family': ['ADVX', 'DM'], 'auto preterminal span': (1, 2), 'span': (1, 2), 'subtrees': ['ADV'], 'parent': 'DM', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'DM')}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;31m(DM[00m
				(ADVX immer)
				(DM doch)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(NX
				(NX kino)
				(NX theater)
				(NX restaurant))[01;31m)[00m
		[01;31m(SU[00m
			(DM also)
			(SIMPX
				(VF theater)
				(LK denke)
				(MF
					(MF ich)
					[01;36m(NX[00m
						(KOUS das)[01;36m)[00m
					(ADVX da)))
			(SIMPX
				(VF da)
				(LK kriegen)
				(MF
					(NX wir)
					(NX
						(NX keine karten)
						[01;36m(NX[00m [01;31m(ADVX[00m
							(ADV mehr)[01;31m)[00m[01;36m)[00m)))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				[01;36m(VXINF[00m
					[01;36m(VC[00m
						(VF
							[01;31m(PX[00m
								(PROP auserdem)[01;31m)[00m)[01;36m)[00m[01;36m)[00m
				(LK mussen)
				(MF wir uns)
				(VC kummern)[01;31m)[00m[01;31m)[00m))
Step:Single Word Phrase
{'family': ['NX', 'NX'], 'auto preterminal span': (16, 17), 'span': (16, 17), 'subtrees': ['ADV'], 'parent': 'NX', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'NX')}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;31m(DM[00m
				(ADVX immer)
				(DM doch)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(NX
				(NX kino)
				(NX theater)
				(NX restaurant))[01;31m)[00m
		[01;31m(SU[00m
			(DM also)
			(SIMPX
				(VF theater)
				(LK denke)
				(MF
					(MF ich)
					[01;36m(NX[00m
						(KOUS das)[01;36m)[00m
					(ADVX da)))
			(SIMPX da kriegen wir keine karten mehr)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				[01;36m(VXINF[00m
					[01;36m(VC[00m
						(VF
							[01;31m(PX[00m
								(PROP auserdem)[01;31m)[00m)[01;36m)[00m[01;36m)[00m
				(LK mussen)
				(MF wir uns)
				(VC kummern)[01;31m)[00m[01;31m)[00m))
Step:Single Word Phrase
{'family': ['VC'], 'auto preterminal span': (18, 19), 'span': (18, 19), 'subtrees': ['PROP'], 'parent': 'VF', 'over_word': True, 'auto preterminals': ('PROP',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('PX', 'VC')}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;31m(DM[00m
				(ADVX immer)
				(DM doch)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(NX
				(NX kino)
				(NX theater)
				(NX restaurant))[01;31m)[00m
		[01;31m(SU[00m
			(DM also)
			(SIMPX
				(VF theater)
				(LK denke)
				(MF
					(MF ich)
					[01;36m(NX[00m
						(KOUS das)[01;36m)[00m
					(ADVX da)))
			(SIMPX da kriegen wir keine karten mehr)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				[01;36m(VXINF[00m
					(VF
						(VC
							(PROP auserdem)))[01;36m)[00m
				(LK mussen)
				(MF wir uns)
				(VC kummern)[01;31m)[00m[01;31m)[00m))
Step:Single Word Phrase
{'subtrees': ['KOUS'], 'family': ['MF', 'NX', 'ADVX'], 'over_word': True, 'over words': True, 'auto preterminals': ('KOUS',), 'right siblings': [(ADVX (ADV da))], 'left siblings': [(MF (NX (PPER ich)))], 'auto preterminal span': (9, 10), 'span': (9, 10), 'parent': 'MF', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;31m(DM[00m
				(ADVX immer)
				(DM doch)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(NX
				(NX kino)
				(NX theater)
				(NX restaurant))[01;31m)[00m
		[01;31m(SU[00m
			(DM also)
			(SIMPX theater denke ich das da)
			(SIMPX da kriegen wir keine karten mehr)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				[01;36m(VXINF[00m
					(VF
						(VC
							(PROP auserdem)))[01;36m)[00m
				(LK mussen)
				(MF wir uns)
				(VC kummern)[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['VF'], 'family': ['KOORD', 'VXINF', 'LK', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('PROP',), 'right siblings': [(LK (VXFIN (VMFIN mussen))), (MF (NX (PPER wir)) (NX (PRF uns))), (VC (VXINF (VVINF kummern)))], 'left siblings': [(KOORD (KON und))], 'auto preterminal span': (18, 19), 'span': (18, 19), 'parent': 'SIMPX', 'label': 'VXINF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;31m(DM[00m
				(ADVX immer)
				(DM doch)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(NX
				(NX kino)
				(NX theater)
				(NX restaurant))[01;31m)[00m
		[01;31m(SU[00m
			(DM also)
			(SIMPX theater denke ich das da)
			(SIMPX da kriegen wir keine karten mehr)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				(VXINF auserdem)
				(LK mussen)
				(MF wir uns)
				(VC kummern)[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['DM'], 'family': ['SU', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'NN', 'NN', 'NN', 'ADV', 'NN', 'VVFIN', 'PPER', 'KOUS', 'ADV', 'ADV', 'VVFIN', 'PPER', 'PIAT', 'NN', 'ADV', 'KON', 'PROP', 'VMFIN', 'PPER', 'PRF', 'VVINF'), 'right siblings': ['SU', 'SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 23), 'span': (0, 2), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		[01;31m(DM[00m
			(ADVX immer)
			(DM doch)[01;31m)[00m
		[01;31m(SU[00m
			(NX
				(NX kino)
				(NX theater)
				(NX restaurant))[01;31m)[00m
		[01;31m(SU[00m
			(DM also)
			(SIMPX theater denke ich das da)
			(SIMPX da kriegen wir keine karten mehr)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				(VXINF auserdem)
				(LK mussen)
				(MF wir uns)
				(VC kummern)[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['ADVX', 'DM'], 'family': ['DM', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'NN', 'NN', 'NN', 'ADV', 'NN', 'VVFIN', 'PPER', 'KOUS', 'ADV', 'ADV', 'VVFIN', 'PPER', 'PIAT', 'NN', 'ADV', 'KON', 'PROP', 'VMFIN', 'PPER', 'PRF', 'VVINF'), 'right siblings': ['SU', 'SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 23), 'span': (0, 2), 'left siblings': [], 'label': 'DM', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(ADVX immer)
		(DM doch)
		[01;31m(SU[00m
			(NX
				(NX kino)
				(NX theater)
				(NX restaurant))[01;31m)[00m
		[01;31m(SU[00m
			(DM also)
			(SIMPX theater denke ich das da)
			(SIMPX da kriegen wir keine karten mehr)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				(VXINF auserdem)
				(LK mussen)
				(MF wir uns)
				(VC kummern)[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['NX'], 'family': ['ADVX', 'DM', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'NN', 'NN', 'NN', 'ADV', 'NN', 'VVFIN', 'PPER', 'KOUS', 'ADV', 'ADV', 'VVFIN', 'PPER', 'PIAT', 'NN', 'ADV', 'KON', 'PROP', 'VMFIN', 'PPER', 'PRF', 'VVINF'), 'right siblings': ['SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 23), 'span': (2, 5), 'left siblings': ['ADVX', 'DM'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(ADVX immer)
		(DM doch)
		(NX kino theater restaurant)
		[01;31m(SU[00m
			(DM also)
			(SIMPX theater denke ich das da)
			(SIMPX da kriegen wir keine karten mehr)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				(VXINF auserdem)
				(LK mussen)
				(MF wir uns)
				(VC kummern)[01;31m)[00m[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['DM', 'SIMPX', 'SIMPX'], 'family': ['ADVX', 'DM', 'NX', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'NN', 'NN', 'NN', 'ADV', 'NN', 'VVFIN', 'PPER', 'KOUS', 'ADV', 'ADV', 'VVFIN', 'PPER', 'PIAT', 'NN', 'ADV', 'KON', 'PROP', 'VMFIN', 'PPER', 'PRF', 'VVINF'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 23), 'span': (5, 17), 'left siblings': ['ADVX', 'DM', 'NX'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(ADVX immer)
		(DM doch)
		(NX kino theater restaurant)
		(DM also)
		(SIMPX theater denke ich das da)
		(SIMPX da kriegen wir keine karten mehr)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				(VXINF auserdem)
				(LK mussen)
				(MF wir uns)
				(VC kummern)[01;31m)[00m[01;31m)[00m))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['KOORD', 'VXINF', 'LK', 'MF', 'VC'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON', 'PROP', 'VMFIN', 'PPER', 'PRF', 'VVINF'), 'right siblings': ['VXINF', 'LK', 'MF', 'VC'], 'parent': 'SIMPX', 'auto preterminal span': (17, 23), 'span': (17, 18), 'left siblings': [], 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(ADVX immer)
		(DM doch)
		(NX kino theater restaurant)
		(DM also)
		(SIMPX theater denke ich das da)
		(SIMPX da kriegen wir keine karten mehr)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KON und)
				(VXINF auserdem)
				(LK mussen)
				(MF wir uns)
				(VC kummern)[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['KON', 'VXINF', 'LK', 'MF', 'VC'], 'family': ['SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'PROP', 'VMFIN', 'PPER', 'PRF', 'VVINF'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (17, 23), 'span': (17, 23), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(ADVX immer)
		(DM doch)
		(NX kino theater restaurant)
		(DM also)
		(SIMPX theater denke ich das da)
		(SIMPX da kriegen wir keine karten mehr)
		[01;31m(SU[00m
			(KON und)
			(VXINF auserdem)
			(LK mussen)
			(MF wir uns)
			(VC kummern)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['KON', 'VXINF', 'LK', 'MF', 'VC'], 'family': ['ADVX', 'DM', 'NX', 'DM', 'SIMPX', 'SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'NN', 'NN', 'NN', 'ADV', 'NN', 'VVFIN', 'PPER', 'KOUS', 'ADV', 'ADV', 'VVFIN', 'PPER', 'PIAT', 'NN', 'ADV', 'KON', 'PROP', 'VMFIN', 'PPER', 'PRF', 'VVINF'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 23), 'span': (17, 23), 'left siblings': ['ADVX', 'DM', 'NX', 'DM', 'SIMPX', 'SIMPX'], 'label': 'SU', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP immer doch kino theater restaurant also theater denke ich das da da kriegen wir keine karten mehr und auserdem mussen wir uns kummern)

Sentence 464:
16 Initial errors
0 on fringe, 11 iterations
3 Error:Modifier Attachment
2 Error:Single Word Phrase
2 Error:Different label
2 Error:PP Attachment
1 Error:NP Internal Structure
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:Clause Attachment
1 Error:Clause Attachment
1 Error:UNSET add
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			(DM okay)[01;31m)[00m
		[01;31m(SU[00m
			(DM gut)
			(DM klar)[01;31m)[00m
		[01;31m(SU[00m
			(DM ja)
			(DM nee)
			(ADVX dann)
			[01;36m(NX[00m
				(NX das)
				(NX das)[01;36m)[00m
			(SIMPX [01;33m(SIMPX (SIMPX[00m
				(VF das)
				(LK ware)
				[01;31m(MF[00m
					[01;36m(MF[00m
						(NX es)
						[01;36m(ADJX[00m [01;31m(ADVX[00m
							(ADV vorerst)[01;31m)[00m[01;36m)[00m[01;36m)[00m
					[01;36m(NF[00m
						(PX
							(APPR von)
							(NX mir)
							(APZR aus))[01;36m)[00m[01;31m)[00m)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(DM[00m
				(ADVX dann) [01;33mSIMPX)[00m
				[01;36m(DM[00m
					(PTKANT danke)[01;36m)[00m[01;31m)[00m
			[01;36m(MF[00m [01;31m(DM[00m
				(NX
					(NE peter))[01;31m)[00m [01;33mSIMPX)[00m[01;36m)[00m
			(SIMPX und wir sehen uns)[01;31m)[00m))
Step:Modifier Attachment
{'new_parent': 'SU', 'new_family': ['DM', 'DM', 'ADVX', 'NX', 'NX', 'SIMPX', 'ADVX'], 'mover info': [('ADVX', (16, 17))], 'old_family': ['ADVX', 'PTKANT'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'ITJ', 'ITJ', 'ITJ', 'PTKANT', 'PTKANT', 'ADV', 'PDS', 'PDS', 'PDS', 'VAFIN', 'PPER', 'ADV', 'APPR', 'PPER', 'APZR', 'ADV', 'PTKANT', 'NE', 'KON', 'PPER', 'VVFIN', 'PRF'), 'start right siblings': ['PTKANT'], 'end left siblings': ['DM', 'DM', 'ADVX', 'NX', 'NX', 'SIMPX'], 'auto preterminal span': (0, 23), 'adding node already present': False, 'movers': ['ADVX'], 'old_parent': 'DM', 'POS confusion': ('ADV', 'ADV'), 'added and moved': True, 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'MF'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			(DM okay)[01;31m)[00m
		[01;31m(SU[00m
			(DM gut)
			(DM klar)[01;31m)[00m
		[01;31m(SU[00m
			(DM ja)
			(DM nee)
			(ADVX dann)
			[01;36m(NX[00m
				(NX das)
				(NX das)[01;36m)[00m
			(SIMPX [01;33m(SIMPX[00m
				(SIMPX
					(VF das)
					(LK ware)
					[01;31m(MF[00m
						[01;36m(MF[00m
							(NX es)
							[01;36m(ADJX[00m [01;31m(ADVX[00m
								(ADV vorerst)[01;31m)[00m[01;36m)[00m[01;36m)[00m
						[01;36m(NF[00m
							(PX
								(APPR von)
								(NX mir)
								(APZR aus))[01;36m)[00m[01;31m)[00m)
				(ADVX dann))[01;31m)[00m
		[01;31m(SU[00m
			(DM danke)
			[01;36m(MF[00m [01;31m(DM[00m
				(NX
					(NE peter))[01;31m)[00m [01;33mSIMPX)[00m[01;36m)[00m
			(SIMPX und wir sehen uns)[01;31m)[00m))
Step:Single Word Phrase
{'family': ['NX', 'ADJX', 'PX'], 'auto preterminal span': (12, 13), 'span': (12, 13), 'subtrees': ['ADV'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'ADJX')}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			(DM okay)[01;31m)[00m
		[01;31m(SU[00m
			(DM gut)
			(DM klar)[01;31m)[00m
		[01;31m(SU[00m
			(DM ja)
			(DM nee)
			(ADVX dann)
			[01;36m(NX[00m
				(NX das)
				(NX das)[01;36m)[00m
			(SIMPX [01;33m(SIMPX[00m
				(SIMPX
					(VF das)
					(LK ware)
					[01;31m(MF[00m
						[01;36m(MF[00m
							(NX es)
							(ADJX vorerst)[01;36m)[00m
						[01;36m(NF[00m
							(PX
								(APPR von)
								(NX mir)
								(APZR aus))[01;36m)[00m[01;31m)[00m)
				(ADVX dann))[01;31m)[00m
		[01;31m(SU[00m
			(DM danke)
			[01;36m(MF[00m [01;31m(DM[00m
				(NX
					(NE peter))[01;31m)[00m [01;33mSIMPX)[00m[01;36m)[00m
			(SIMPX und wir sehen uns)[01;31m)[00m))
Step:Different label
{'family': ['DM', 'MF', 'SIMPX'], 'auto preterminal span': (18, 19), 'span': (18, 19), 'subtrees': ['NX'], 'parent': 'SU', 'over_word': False, 'auto preterminals': ('NE',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('DM', 'MF')}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			(DM okay)[01;31m)[00m
		[01;31m(SU[00m
			(DM gut)
			(DM klar)[01;31m)[00m
		[01;31m(SU[00m
			(DM ja)
			(DM nee)
			(ADVX dann)
			[01;36m(NX[00m
				(NX das)
				(NX das)[01;36m)[00m
			(SIMPX [01;33m(SIMPX[00m
				(SIMPX
					(VF das)
					(LK ware)
					[01;31m(MF[00m
						[01;36m(MF[00m
							(NX es)
							(ADJX vorerst)[01;36m)[00m
						[01;36m(NF[00m
							(PX
								(APPR von)
								(NX mir)
								(APZR aus))[01;36m)[00m[01;31m)[00m)
				(ADVX dann))[01;31m)[00m
		[01;31m(SU[00m
			(DM danke)
			(MF peter) [01;33mSIMPX)[00m
			(SIMPX und wir sehen uns)[01;31m)[00m))
Step:PP Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'PX'], 'mover info': [('PX', (13, 16))], 'old_family': ['NX', 'ADJX', 'PX'], 'start left siblings': ['NX', 'ADJX'], 'auto preterminals': ('PDS', 'VAFIN', 'PPER', 'ADV', 'APPR', 'PPER', 'APZR'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (9, 16), 'movers': ['PX'], 'old_parent': 'MF', 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			(DM okay)[01;31m)[00m
		[01;31m(SU[00m
			(DM gut)
			(DM klar)[01;31m)[00m
		[01;31m(SU[00m
			(DM ja)
			(DM nee)
			(ADVX dann)
			[01;36m(NX[00m
				(NX das)
				(NX das)[01;36m)[00m
			(SIMPX [01;33m(SIMPX[00m
				(SIMPX
					(VF das)
					(LK ware)
					(MF es vorerst)
					[01;36m(NF[00m
						(PX
							(APPR von)
							(NX mir)
							(APZR aus))[01;36m)[00m)
				(ADVX dann))[01;31m)[00m
		[01;31m(SU[00m
			(DM danke)
			(MF peter) [01;33mSIMPX)[00m
			(SIMPX und wir sehen uns)[01;31m)[00m))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['DM', 'DM', 'ADVX', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'PDS'), 'right siblings': [(SIMPX (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VAFIN ware))) (MF (NX (PPER es)) (ADJX (ADV vorerst))) (PX (APPR von) (NX (PPER mir)) (APZR aus))) (ADVX (ADV dann)))], 'left siblings': [(DM (PTKANT ja)), (DM (PTKANT nee)), (ADVX (ADV dann))], 'auto preterminal span': (7, 9), 'span': (7, 9), 'parent': 'SU', 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			(DM okay)[01;31m)[00m
		[01;31m(SU[00m
			(DM gut)
			(DM klar)[01;31m)[00m
		[01;31m(SU[00m
			(DM ja)
			(DM nee)
			(ADVX dann)
			(NX das das)
			(SIMPX [01;33m(SIMPX[00m
				(SIMPX
					(VF das)
					(LK ware)
					(MF es vorerst)
					[01;36m(NF[00m
						(PX
							(APPR von)
							(NX mir)
							(APZR aus))[01;36m)[00m)
				(ADVX dann))[01;31m)[00m
		[01;31m(SU[00m
			(DM danke)
			(MF peter) [01;33mSIMPX)[00m
			(SIMPX und wir sehen uns)[01;31m)[00m))
Step:Unary
{'subtrees': ['PX'], 'family': ['VF', 'LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'PPER', 'APZR'), 'right siblings': [], 'left siblings': [(VF (NX (PDS das))), (LK (VXFIN (VAFIN ware))), (MF (NX (PPER es)) (ADJX (ADV vorerst)))], 'auto preterminal span': (13, 16), 'span': (13, 16), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			(DM okay)[01;31m)[00m
		[01;31m(SU[00m
			(DM gut)
			(DM klar)[01;31m)[00m
		[01;31m(SU[00m
			(DM ja)
			(DM nee)
			(ADVX dann)
			(NX das das)
			[01;33m(SIMPX[00m (SIMPX das ware es vorerst von mir aus dann)[01;31m)[00m
		[01;31m(SU[00m
			(DM danke)
			(MF peter) [01;33mSIMPX)[00m
			(SIMPX und wir sehen uns)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['DM', 'DM'], 'family': ['SU', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'ITJ', 'ITJ', 'PTKANT', 'PTKANT', 'ADV', 'PDS', 'PDS', 'PDS', 'VAFIN', 'PPER', 'ADV', 'APPR', 'PPER', 'APZR', 'ADV', 'PTKANT', 'NE', 'KON', 'PPER', 'VVFIN', 'PRF'), 'right siblings': ['SU', 'SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 23), 'span': (0, 2), 'left siblings': [], 'label': 'SU', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM okay)
		[01;31m(SU[00m
			(DM gut)
			(DM klar)[01;31m)[00m
		[01;31m(SU[00m
			(DM ja)
			(DM nee)
			(ADVX dann)
			(NX das das)
			[01;33m(SIMPX[00m (SIMPX das ware es vorerst von mir aus dann)[01;31m)[00m
		[01;31m(SU[00m
			(DM danke)
			(MF peter) [01;33mSIMPX)[00m
			(SIMPX und wir sehen uns)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['DM', 'DM'], 'family': ['DM', 'DM', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'ITJ', 'ITJ', 'PTKANT', 'PTKANT', 'ADV', 'PDS', 'PDS', 'PDS', 'VAFIN', 'PPER', 'ADV', 'APPR', 'PPER', 'APZR', 'ADV', 'PTKANT', 'NE', 'KON', 'PPER', 'VVFIN', 'PRF'), 'right siblings': ['SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 23), 'span': (2, 4), 'left siblings': ['DM', 'DM'], 'label': 'SU', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM okay)
		(DM gut)
		(DM klar)
		[01;31m(SU[00m
			(DM ja)
			(DM nee)
			(ADVX dann)
			(NX das das)
			[01;33m(SIMPX[00m (SIMPX das ware es vorerst von mir aus dann)[01;31m)[00m
		[01;31m(SU[00m
			(DM danke)
			(MF peter) [01;33mSIMPX)[00m
			(SIMPX und wir sehen uns)[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['DM', 'DM', 'ADVX', 'NX', 'SIMPX'], 'family': ['DM', 'DM', 'DM', 'DM', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'ITJ', 'ITJ', 'PTKANT', 'PTKANT', 'ADV', 'PDS', 'PDS', 'PDS', 'VAFIN', 'PPER', 'ADV', 'APPR', 'PPER', 'APZR', 'ADV', 'PTKANT', 'NE', 'KON', 'PPER', 'VVFIN', 'PRF'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 23), 'span': (4, 17), 'left siblings': ['DM', 'DM', 'DM', 'DM'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM okay)
		(DM gut)
		(DM klar)
		(DM ja)
		(DM nee)
		(ADVX dann)
		(NX das das)
		[01;33m(SIMPX[00m (SIMPX das ware es vorerst von mir aus dann)
		[01;31m(SU[00m
			(DM danke)
			(MF peter) [01;33mSIMPX)[00m
			(SIMPX und wir sehen uns)[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['DM', 'MF', 'SIMPX'], 'family': ['DM', 'DM', 'DM', 'DM', 'DM', 'DM', 'ADVX', 'NX', 'SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'ITJ', 'ITJ', 'PTKANT', 'PTKANT', 'ADV', 'PDS', 'PDS', 'PDS', 'VAFIN', 'PPER', 'ADV', 'APPR', 'PPER', 'APZR', 'ADV', 'PTKANT', 'NE', 'KON', 'PPER', 'VVFIN', 'PRF'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 23), 'span': (17, 23), 'left siblings': ['DM', 'DM', 'DM', 'DM', 'DM', 'DM', 'ADVX', 'NX', 'SIMPX'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM okay)
		(DM gut)
		(DM klar)
		(DM ja)
		(DM nee)
		(ADVX dann)
		(NX das das)
		[01;36m(SIMPX[00m
			(SIMPX das ware es vorerst von mir aus dann)
			(DM danke)
			(MF peter)[01;36m)[00m
		(SIMPX und wir sehen uns)))
Step:UNSET add
{'subtrees': ['SIMPX', 'DM', 'MF'], 'family': ['DM', 'DM', 'DM', 'DM', 'DM', 'DM', 'ADVX', 'NX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VAFIN', 'PPER', 'ADV', 'APPR', 'PPER', 'APZR', 'ADV', 'PTKANT', 'NE'), 'right siblings': [(SIMPX (KOORD (KON und)) (VF (NX (PPER wir))) (LK (VXFIN (VVFIN sehen))) (MF (NX (PRF uns))))], 'left siblings': [(DM (PTKANT ja)), (DM (ITJ okay)), (DM (ITJ gut)), (DM (ITJ klar)), (DM (PTKANT ja)), (DM (PTKANT nee)), (ADVX (ADV dann)), (NX (NX (PDS das)) (NX (PDS das)))], 'auto preterminal span': (9, 19), 'span': (9, 19), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP ja okay gut klar ja nee dann das das das ware es vorerst von mir aus dann danke peter und wir sehen uns)

Sentence 465:
18 Initial errors
0 on fringe, 9 iterations
4 Error:Clause Attachment
4 Error:VP Attachment
2 Error:Single Word Phrase
2 Error:Single Word Phrase
2 Error:Single Word Phrase
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:Clause Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP [01;33m(SU (SU[00m
	(TURN
		[01;31m(SU[00m
			(DM hallo)
			(DM reinhard)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;36m(DM[00m [01;31m(LK[00m
					[01;31m(VXFIN[00m
						(VVFIN danke)[01;31m)[00m[01;31m)[00m[01;36m)[00m
				[01;31m(NF[00m [01;33m(SIMPX[00m
					[01;31m(SIMPX[00m
						(C das)
						(MF du so kurzfristig hier)
						[01;31m(VC[00m
							[01;36m(VXFIN[00m [01;36m(VC[00m [01;31m(VXINF[00m
								(VVPP runtergeschaut)[01;31m)[00m [01;33mSIMPX) SU)[00m[01;36m)[00m[01;36m)[00m
							[01;36m(DM[00m [01;31m(VXFIN[00m
								(VAFIN hast)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m [01;33mSU)[00m
			[01;36m(SU[00m
				(SIMPX
					(VF wir)
					(LK mussen)
					(MF ja noch ein termin)
					(VC vereinbaren))[01;36m)[00m[01;31m)[00m))
Step:Clause Attachment
{'new_parent': 'SU', 'new_family': ['DM', 'DM', 'SIMPX'], 'mover info': [('SIMPX', (2, 10))], 'old_family': ['SIMPX', 'SIMPX'], 'start left siblings': [], 'auto preterminals': ('ITJ', 'NE', 'VVFIN', 'KOUS', 'PPER', 'ADV', 'ADJD', 'ADV', 'VVPP', 'VAFIN', 'PPER', 'VMFIN', 'ADV', 'ADV', 'ART', 'NN', 'VVINF'), 'start right siblings': ['SIMPX'], 'end left siblings': ['DM', 'DM'], 'auto preterminal span': (0, 17), 'movers': ['SIMPX'], 'old_parent': 'SU', 'end right siblings': [], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP [01;33m(SU[00m
	(TURN
		(SU
			(DM hallo)
			(DM reinhard)
			[01;31m(SIMPX[00m
				[01;36m(DM[00m [01;31m(LK[00m
					[01;31m(VXFIN[00m
						(VVFIN danke)[01;31m)[00m[01;31m)[00m[01;36m)[00m
				[01;31m(NF[00m [01;33m(SIMPX[00m
					[01;31m(SIMPX[00m
						(C das)
						(MF du so kurzfristig hier)
						[01;31m(VC[00m
							[01;36m(VXFIN[00m [01;36m(VC[00m [01;31m(VXINF[00m
								(VVPP runtergeschaut)[01;31m)[00m [01;33mSIMPX) SU)[00m[01;36m)[00m[01;36m)[00m
							[01;36m(DM[00m [01;31m(VXFIN[00m
								(VAFIN hast)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m)
		(SU wir mussen ja noch ein termin vereinbaren)))
Step:VP Attachment
{'new_parent': 'NF', 'new_family': ['SIMPX', 'VXFIN'], 'mover info': [('VXFIN', (9, 10))], 'old_family': ['VXINF', 'VXFIN'], 'start left siblings': ['VXINF'], 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'ADJD', 'ADV', 'VVPP', 'VAFIN'), 'start right siblings': [], 'end left siblings': ['SIMPX'], 'auto preterminal span': (3, 10), 'movers': ['VXFIN'], 'old_parent': 'VC', 'POS confusion': ('VAFIN', 'VAFIN'), 'end right siblings': [], 'classified_type': 'VP Attachment', 'type': 'move'}
(TOP [01;33m(SU[00m
	(TURN
		(SU
			(DM hallo)
			(DM reinhard)
			[01;31m(SIMPX[00m
				[01;36m(DM[00m [01;31m(LK[00m
					[01;31m(VXFIN[00m
						(VVFIN danke)[01;31m)[00m[01;31m)[00m[01;36m)[00m
				[01;31m(NF[00m
					(SIMPX
						(C das)
						(MF du so kurzfristig hier)
						[01;36m(VXFIN[00m
							(VC
								[01;31m(VXINF[00m
									(VVPP runtergeschaut)[01;31m)[00m)[01;36m)[00m) [01;33mSU)[00m
					[01;36m(DM[00m [01;31m(VXFIN[00m
						(VAFIN hast)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m)
		(SU wir mussen ja noch ein termin vereinbaren)))
Step:Single Word Phrase
{'family': ['DM'], 'auto preterminal span': (2, 3), 'span': (2, 3), 'subtrees': ['VVFIN'], 'parent': 'LK', 'over_word': True, 'auto preterminals': ('VVFIN',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VXFIN', 'DM')}
(TOP [01;33m(SU[00m
	(TURN
		(SU
			(DM hallo)
			(DM reinhard)
			[01;31m(SIMPX[00m
				[01;31m(LK[00m
					(DM
						(VVFIN danke))[01;31m)[00m
				[01;31m(NF[00m
					(SIMPX
						(C das)
						(MF du so kurzfristig hier)
						[01;36m(VXFIN[00m
							(VC
								[01;31m(VXINF[00m
									(VVPP runtergeschaut)[01;31m)[00m)[01;36m)[00m) [01;33mSU)[00m
					[01;36m(DM[00m [01;31m(VXFIN[00m
						(VAFIN hast)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m)
		(SU wir mussen ja noch ein termin vereinbaren)))
Step:Single Word Phrase
{'family': ['VXFIN'], 'auto preterminal span': (8, 9), 'span': (8, 9), 'subtrees': ['VVPP'], 'parent': 'VC', 'over_word': True, 'auto preterminals': ('VVPP',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VXINF', 'VXFIN')}
(TOP [01;33m(SU[00m
	(TURN
		(SU
			(DM hallo)
			(DM reinhard)
			[01;31m(SIMPX[00m
				[01;31m(LK[00m
					(DM
						(VVFIN danke))[01;31m)[00m
				[01;31m(NF[00m
					(SIMPX das du so kurzfristig hier runtergeschaut) [01;33mSU)[00m
					[01;36m(DM[00m [01;31m(VXFIN[00m
						(VAFIN hast)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m)
		(SU wir mussen ja noch ein termin vereinbaren)))
Step:Single Word Phrase
{'family': ['SIMPX', 'DM'], 'auto preterminal span': (9, 10), 'span': (9, 10), 'subtrees': ['VAFIN'], 'parent': 'NF', 'over_word': True, 'auto preterminals': ('VAFIN',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VXFIN', 'DM')}
(TOP [01;33m(SU[00m
	(TURN
		(SU
			(DM hallo)
			(DM reinhard)
			[01;31m(SIMPX[00m
				[01;31m(LK[00m
					(DM
						(VVFIN danke))[01;31m)[00m
				[01;31m(NF[00m
					(SIMPX das du so kurzfristig hier runtergeschaut) [01;33mSU)[00m
					(DM hast)[01;31m)[00m[01;31m)[00m)
		(SU wir mussen ja noch ein termin vereinbaren)))
Step:Unary
{'subtrees': ['DM'], 'family': ['LK', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'KOUS', 'PPER', 'ADV', 'ADJD', 'ADV', 'VVPP', 'VAFIN'), 'right siblings': ['NF'], 'parent': 'SIMPX', 'auto preterminal span': (2, 10), 'span': (2, 3), 'left siblings': [], 'label': 'LK', 'classified_type': 'Unary', 'type': 'remove'}
(TOP [01;33m(SU[00m
	(TURN
		(SU
			(DM hallo)
			(DM reinhard)
			[01;31m(SIMPX[00m
				(DM danke)
				[01;31m(NF[00m
					(SIMPX das du so kurzfristig hier runtergeschaut) [01;33mSU)[00m
					(DM hast)[01;31m)[00m[01;31m)[00m)
		(SU wir mussen ja noch ein termin vereinbaren)))
Step:UNSET remove
{'subtrees': ['DM', 'NF'], 'family': ['DM', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'NE', 'VVFIN', 'KOUS', 'PPER', 'ADV', 'ADJD', 'ADV', 'VVPP', 'VAFIN'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (0, 10), 'span': (2, 10), 'left siblings': ['DM', 'DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP [01;33m(SU[00m
	(TURN
		(SU
			(DM hallo)
			(DM reinhard)
			(DM danke)
			[01;31m(NF[00m
				(SIMPX das du so kurzfristig hier runtergeschaut) [01;33mSU)[00m
				(DM hast)[01;31m)[00m)
		(SU wir mussen ja noch ein termin vereinbaren)))
Step:UNSET remove
{'subtrees': ['SIMPX', 'DM'], 'family': ['DM', 'DM', 'DM', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'NE', 'VVFIN', 'KOUS', 'PPER', 'ADV', 'ADJD', 'ADV', 'VVPP', 'VAFIN'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (0, 10), 'span': (3, 10), 'left siblings': ['DM', 'DM', 'DM'], 'label': 'NF', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU
			[01;36m(SU[00m
				(DM hallo)
				(DM reinhard)
				(DM danke)
				(SIMPX das du so kurzfristig hier runtergeschaut)[01;36m)[00m
			(DM hast))
		(SU wir mussen ja noch ein termin vereinbaren)))
Step:Clause Attachment
{'subtrees': ['DM', 'DM', 'DM', 'SIMPX'], 'family': ['SU', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'NE', 'VVFIN', 'KOUS', 'PPER', 'ADV', 'ADJD', 'ADV', 'VVPP'), 'right siblings': [(DM (VAFIN hast))], 'left siblings': [], 'auto preterminal span': (0, 9), 'span': (0, 9), 'parent': 'SU', 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP hallo reinhard danke das du so kurzfristig hier runtergeschaut hast wir mussen ja noch ein termin vereinbaren)

Sentence 466:
13 Initial errors
0 on fringe, 10 iterations
3 Error:NP Attachment
2 Error:Co-ordination
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET add
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(SIMPX hannover ist das ziel)
			[01;33m(VF (NX[00m (NX anderthalb tage)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					[01;31m(PX[00m
						(APPR in)
						(NX den nachsten drei monaten)[01;31m)[00m[01;31m)[00m [01;33mNX) VF)[00m
				(LK gibt)
				[01;33m(MF[00m (MF es ja ofter diese ganzen feiertage)[01;31m)[00m
			[01;31m(NX[00m
				(NX ostern)
				(NX pfingsten)
				(KON und)
				[01;33m(MF[00m (ADVX so weiter)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;31m(MF[00m
					(ADVX
						(ADV mal))[01;31m)[00m [01;33mMF) MF)[00m
				(VC kucken)
				(NF wie wir da in die gange kommen)[01;31m)[00m[01;31m)[00m
		(SU wie schaut es denn bei dir aus)))
Step:NP Attachment
{'new_parent': 'VF', 'new_family': ['NX', 'PX'], 'mover info': [('NX', (4, 6))], 'old_family': ['SIMPX', 'NX'], 'start left siblings': ['SIMPX'], 'auto preterminals': ('NE', 'VAFIN', 'ART', 'NN', 'CARD', 'NN', 'APPR', 'ART', 'ADJA', 'CARD', 'NN', 'VVFIN', 'PPER', 'ADV', 'ADV', 'PDAT', 'ADJA', 'NN', 'NE', 'NE', 'KON', 'ADV', 'ADV', 'ADV', 'VVINF', 'KOUS', 'PPER', 'ADV', 'APPR', 'ART', 'NN', 'VVFIN', 'PWAV', 'VVFIN', 'PPER', 'ADV', 'APPR', 'PPER', 'PTKVZ'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 39), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'SU', 'added and moved': True, 'end right siblings': ['PX'], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		[01;31m(SU[00m
			(SIMPX
				(VF hannover)
				(LK ist)
				(MF das ziel))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(NX
					(VF
						(NX anderthalb tage)
						[01;31m(PX[00m
							(APPR in)
							(NX den nachsten drei monaten)[01;31m)[00m))
				(LK gibt)
				[01;33m(MF[00m (MF es ja ofter diese ganzen feiertage)[01;31m)[00m
			[01;31m(NX[00m
				(NX ostern)
				(NX pfingsten)
				(KON und)
				[01;33m(MF[00m (ADVX so weiter)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;31m(MF[00m
					(ADVX
						(ADV mal))[01;31m)[00m [01;33mMF) MF)[00m
				(VC kucken)
				(NF wie wir da in die gange kommen)[01;31m)[00m[01;31m)[00m
		(SU wie schaut es denn bei dir aus)))
Step:Co-ordination
{'new_parent': 'MF', 'new_family': ['ADVX', 'ADVX'], 'mover info': [('ADVX', (21, 23))], 'old_family': ['NX', 'NX', 'KON', 'ADVX'], 'start left siblings': ['NX', 'NX', 'KON'], 'auto preterminals': ('NE', 'VAFIN', 'ART', 'NN', 'CARD', 'NN', 'APPR', 'ART', 'ADJA', 'CARD', 'NN', 'VVFIN', 'PPER', 'ADV', 'ADV', 'PDAT', 'ADJA', 'NN', 'NE', 'NE', 'KON', 'ADV', 'ADV', 'ADV', 'VVINF', 'KOUS', 'PPER', 'ADV', 'APPR', 'ART', 'NN', 'VVFIN', 'PWAV', 'VVFIN', 'PPER', 'ADV', 'APPR', 'PPER', 'PTKVZ'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 39), 'movers': ['ADVX'], 'old_parent': 'NX', 'end right siblings': ['ADVX'], 'classified_type': 'Co-ordination', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			(SIMPX
				(VF hannover)
				(LK ist)
				(MF das ziel))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(NX
					(VF
						(NX anderthalb tage)
						[01;31m(PX[00m
							(APPR in)
							(NX den nachsten drei monaten)[01;31m)[00m))
				(LK gibt)
				[01;33m(MF[00m (MF es ja ofter diese ganzen feiertage)[01;31m)[00m
			[01;31m(NX[00m
				(NX ostern)
				(NX pfingsten)
				(KON und)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(MF so weiter mal) [01;33mMF)[00m
				(VC kucken)
				(NF wie wir da in die gange kommen)[01;31m)[00m[01;31m)[00m
		(SU wie schaut es denn bei dir aus)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SU', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('NE', 'VAFIN', 'ART', 'NN', 'CARD', 'NN', 'APPR', 'ART', 'ADJA', 'CARD', 'NN', 'VVFIN', 'PPER', 'ADV', 'ADV', 'PDAT', 'ADJA', 'NN', 'NE', 'NE', 'KON', 'ADV', 'ADV', 'ADV', 'VVINF', 'KOUS', 'PPER', 'ADV', 'APPR', 'ART', 'NN', 'VVFIN', 'PWAV', 'VVFIN', 'PPER', 'ADV', 'APPR', 'PPER', 'PTKVZ'), 'right siblings': ['SU', 'SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 39), 'span': (0, 4), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX hannover ist das ziel)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(NX
					(VF
						(NX anderthalb tage)
						[01;31m(PX[00m
							(APPR in)
							(NX den nachsten drei monaten)[01;31m)[00m))
				(LK gibt)
				[01;33m(MF[00m (MF es ja ofter diese ganzen feiertage)[01;31m)[00m
			[01;31m(NX[00m
				(NX ostern)
				(NX pfingsten)
				(KON und)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(MF so weiter mal) [01;33mMF)[00m
				(VC kucken)
				(NF wie wir da in die gange kommen)[01;31m)[00m[01;31m)[00m
		(SU wie schaut es denn bei dir aus)))
Step:UNSET remove
{'subtrees': ['NX', 'LK', 'MF'], 'family': ['SIMPX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'NN', 'APPR', 'ART', 'ADJA', 'CARD', 'NN', 'VVFIN', 'PPER', 'ADV', 'ADV', 'PDAT', 'ADJA', 'NN', 'NE', 'NE', 'KON'), 'right siblings': ['NX'], 'parent': 'SU', 'auto preterminal span': (4, 21), 'span': (4, 18), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX hannover ist das ziel)
		[01;31m(SU[00m
			(NX
				(VF
					(NX anderthalb tage)
					[01;31m(PX[00m
						(APPR in)
						(NX den nachsten drei monaten)[01;31m)[00m))
			(LK gibt)
			[01;33m(MF[00m (MF es ja ofter diese ganzen feiertage)
			[01;31m(NX[00m
				(NX ostern)
				(NX pfingsten)
				(KON und)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(MF so weiter mal) [01;33mMF)[00m
				(VC kucken)
				(NF wie wir da in die gange kommen)[01;31m)[00m[01;31m)[00m
		(SU wie schaut es denn bei dir aus)))
Step:UNSET remove
{'subtrees': ['NX', 'LK', 'MF', 'NX'], 'family': ['SIMPX', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('NE', 'VAFIN', 'ART', 'NN', 'CARD', 'NN', 'APPR', 'ART', 'ADJA', 'CARD', 'NN', 'VVFIN', 'PPER', 'ADV', 'ADV', 'PDAT', 'ADJA', 'NN', 'NE', 'NE', 'KON', 'ADV', 'ADV', 'ADV', 'VVINF', 'KOUS', 'PPER', 'ADV', 'APPR', 'ART', 'NN', 'VVFIN', 'PWAV', 'VVFIN', 'PPER', 'ADV', 'APPR', 'PPER', 'PTKVZ'), 'right siblings': ['SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 39), 'span': (4, 21), 'left siblings': ['SIMPX'], 'label': 'SU', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX hannover ist das ziel)
		(NX
			(VF
				(NX anderthalb tage)
				[01;31m(PX[00m
					(APPR in)
					(NX den nachsten drei monaten)[01;31m)[00m))
		(LK gibt)
		[01;33m(MF[00m (MF es ja ofter diese ganzen feiertage)
		[01;31m(NX[00m
			(NX ostern)
			(NX pfingsten)
			(KON und)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(MF so weiter mal) [01;33mMF)[00m
				(VC kucken)
				(NF wie wir da in die gange kommen)[01;31m)[00m[01;31m)[00m
		(SU wie schaut es denn bei dir aus)))
Step:UNSET remove
{'subtrees': ['APPR', 'NX'], 'family': ['NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'NN', 'APPR', 'ART', 'ADJA', 'CARD', 'NN'), 'right siblings': [], 'parent': 'VF', 'auto preterminal span': (4, 11), 'span': (6, 11), 'left siblings': ['NX'], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX hannover ist das ziel)
		(NX anderthalb tage in den nachsten drei monaten)
		(LK gibt)
		[01;33m(MF[00m (MF es ja ofter diese ganzen feiertage)
		[01;31m(NX[00m
			(NX ostern)
			(NX pfingsten)
			(KON und)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(MF so weiter mal) [01;33mMF)[00m
				(VC kucken)
				(NF wie wir da in die gange kommen)[01;31m)[00m[01;31m)[00m
		(SU wie schaut es denn bei dir aus)))
Step:UNSET remove
{'subtrees': ['NX', 'NX', 'KON'], 'family': ['SIMPX', 'NX', 'LK', 'MF', 'NX', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('NE', 'VAFIN', 'ART', 'NN', 'CARD', 'NN', 'APPR', 'ART', 'ADJA', 'CARD', 'NN', 'VVFIN', 'PPER', 'ADV', 'ADV', 'PDAT', 'ADJA', 'NN', 'NE', 'NE', 'KON', 'ADV', 'ADV', 'ADV', 'VVINF', 'KOUS', 'PPER', 'ADV', 'APPR', 'ART', 'NN', 'VVFIN', 'PWAV', 'VVFIN', 'PPER', 'ADV', 'APPR', 'PPER', 'PTKVZ'), 'right siblings': ['SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 39), 'span': (18, 21), 'left siblings': ['SIMPX', 'NX', 'LK', 'MF'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX hannover ist das ziel)
		(NX anderthalb tage in den nachsten drei monaten)
		(LK gibt)
		[01;33m(MF[00m (MF es ja ofter diese ganzen feiertage)
		(NX ostern)
		(NX pfingsten)
		(KON und)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(MF so weiter mal) [01;33mMF)[00m
				(VC kucken)
				(NF wie wir da in die gange kommen)[01;31m)[00m[01;31m)[00m
		(SU wie schaut es denn bei dir aus)))
Step:Unary
{'subtrees': ['MF', 'VC', 'NF'], 'family': ['SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'ADV', 'VVINF', 'KOUS', 'PPER', 'ADV', 'APPR', 'ART', 'NN', 'VVFIN'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (21, 32), 'span': (21, 32), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX hannover ist das ziel)
		(NX anderthalb tage in den nachsten drei monaten)
		(LK gibt)
		[01;33m(MF[00m (MF es ja ofter diese ganzen feiertage)
		(NX ostern)
		(NX pfingsten)
		(KON und)
		[01;31m(SU[00m
			(MF so weiter mal) [01;33mMF)[00m
			(VC kucken)
			(NF wie wir da in die gange kommen)[01;31m)[00m
		(SU wie schaut es denn bei dir aus)))
Step:UNSET remove
{'subtrees': ['MF', 'VC', 'NF'], 'family': ['SIMPX', 'NX', 'LK', 'MF', 'NX', 'NX', 'KON', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('NE', 'VAFIN', 'ART', 'NN', 'CARD', 'NN', 'APPR', 'ART', 'ADJA', 'CARD', 'NN', 'VVFIN', 'PPER', 'ADV', 'ADV', 'PDAT', 'ADJA', 'NN', 'NE', 'NE', 'KON', 'ADV', 'ADV', 'ADV', 'VVINF', 'KOUS', 'PPER', 'ADV', 'APPR', 'ART', 'NN', 'VVFIN', 'PWAV', 'VVFIN', 'PPER', 'ADV', 'APPR', 'PPER', 'PTKVZ'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 39), 'span': (21, 32), 'left siblings': ['SIMPX', 'NX', 'LK', 'MF', 'NX', 'NX', 'KON'], 'label': 'SU', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX hannover ist das ziel)
		(NX anderthalb tage in den nachsten drei monaten)
		(LK gibt)
		[01;36m(MF[00m
			(MF es ja ofter diese ganzen feiertage)
			(NX ostern)
			(NX pfingsten)
			(KON und)
			(MF so weiter mal)[01;36m)[00m
		(VC kucken)
		(NF wie wir da in die gange kommen)
		(SU wie schaut es denn bei dir aus)))
Step:UNSET add
{'subtrees': ['MF', 'NX', 'NX', 'KON', 'MF'], 'family': ['SIMPX', 'NX', 'LK', 'MF', 'VC', 'NF', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV', 'ADV', 'PDAT', 'ADJA', 'NN', 'NE', 'NE', 'KON', 'ADV', 'ADV', 'ADV'), 'right siblings': [(VC (VXINF (VVINF kucken))), (NF (SIMPX (C (KOUS wie)) (MF (NX (PPER wir)) (ADVX (ADV da)) (PX (APPR in) (NX (ART die) (NN gange)))) (VC (VXFIN (VVFIN kommen))))), (SU (SIMPX (VF (ADJX (PWAV wie))) (LK (VXFIN (VVFIN schaut))) (MF (NX (PPER es)) (ADVX (ADV denn)) (PX (APPR bei) (NX (PPER dir)))) (VC (PTKVZ aus))))], 'left siblings': [(SIMPX (VF (NX (NE hannover))) (LK (VXFIN (VAFIN ist))) (MF (NX (ART das) (NN ziel)))), (NX (VF (NX (ADJX (CARD anderthalb)) (NN tage)) (APPR in) (NX (ART den) (ADJX (ADJA nachsten)) (ADJX (CARD drei)) (NN monaten)))), (LK (VXFIN (VVFIN gibt)))], 'auto preterminal span': (12, 24), 'span': (12, 24), 'parent': 'TURN', 'label': 'MF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP hannover ist das ziel anderthalb tage in den nachsten drei monaten gibt es ja ofter diese ganzen feiertage ostern pfingsten und so weiter mal kucken wie wir da in die gange kommen wie schaut es denn bei dir aus)

Sentence 467:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU da bin ich schon verplant)
		[01;31m(SU[00m
			(APPR bis)[01;31m)[00m))
Step:Single Word Phrase
{'subtrees': ['APPR'], 'family': ['SU', 'SU'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'ADV', 'ADJD', 'APPR'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 6), 'span': (5, 6), 'left siblings': ['SU'], 'label': 'SU', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP da bin ich schon verplant bis)

Sentence 468:
2 Initial errors
0 on fringe, 2 iterations
1 Error:Unary
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK klappt)
				(MF bei mir))[01;31m)[00m
		[01;31m(SU[00m
			(DM ja)
			(ADVX dann)[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VVFIN', 'APPR', 'PPER', 'PTKANT', 'ADV'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 6), 'span': (0, 4), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX das klappt bei mir)
		[01;31m(SU[00m
			(DM ja)
			(ADVX dann)[01;31m)[00m))
Step:Modifier Attachment
{'subtrees': ['DM', 'ADVX'], 'family': ['SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VVFIN', 'APPR', 'PPER', 'PTKANT', 'ADV'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 6), 'span': (4, 6), 'left siblings': ['SIMPX'], 'label': 'SU', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP das klappt bei mir ja dann)

Sentence 469:
14 Initial errors
0 on fringe, 11 iterations
3 Error:Co-ordination
2 Error:Different label
1 Error:Modifier Attachment
1 Error:Unary
1 Error:UNSET remove
1 Error:Unary
1 Error:Unary
1 Error:Clause Attachment
1 Error:UNSET remove
1 Error:PP Attachment
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(SIMPX
				(LK wurde)
				(MF ich auch)
				(VC vorschlagen)
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						(C das)
						(MF wir montag fruh)
						(VC losfahren)[01;31m)[00m[01;31m)[00m))
		[01;36m(MF[00m [01;31m(SU[00m
			[01;31m(ADJX[00m
				(ADVX vielleicht)
				(ADVX nicht)
				(ADJX allzu fruh)[01;31m)[00m[01;31m)[00m[01;36m)[00m
		[01;31m(SU[00m
			(SIMPX
				[01;31m(VF[00m
					(PX
						(APPR ab)
						(NX funf uhr drei))[01;31m)[00m
				(LK konnte)
				(MF man)
				(VC abfahren))
			[01;31m(SIMPX[00m
				(KOORD aber)
				(LK ist)
				[01;31m(MF[00m [01;33m(MF[00m
					(ADVX nicht)
					[01;31m(NX[00m
						(NX ziel) [01;33mMF)[00m
						(NX der sache)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			[01;36m(PX[00m [01;31m(NX[00m
				(KON sondern)
				(ADVX lieber)
				[01;31m(NX[00m
					(ADVX so)
					(CARD sieben)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m))
Step:Co-ordination
{'new_parent': 'NX', 'new_family': ['NX', 'KON', 'ADVX', 'NX'], 'mover info': [('NX', (24, 26))], 'old_family': ['NX', 'NX'], 'start left siblings': ['NX'], 'auto preterminals': ('APPR', 'CARD', 'NN', 'CARD', 'VMFIN', 'PIS', 'VVINF', 'KON', 'VAFIN', 'PTKNEG', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ADV', 'CARD'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (13, 30), 'movers': ['NX'], 'old_parent': 'NX', 'end right siblings': ['KON', 'ADVX', 'NX'], 'classified_type': 'Co-ordination', 'type': 'move'}
(TOP
	(TURN
		(SU
			(SIMPX
				(LK wurde)
				(MF ich auch)
				(VC vorschlagen)
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						(C das)
						(MF wir montag fruh)
						(VC losfahren)[01;31m)[00m[01;31m)[00m))
		[01;36m(MF[00m [01;31m(SU[00m
			[01;31m(ADJX[00m
				(ADVX vielleicht)
				(ADVX nicht)
				(ADJX allzu fruh)[01;31m)[00m[01;31m)[00m[01;36m)[00m
		[01;31m(SU[00m
			(SIMPX
				[01;31m(VF[00m
					(PX
						(APPR ab)
						(NX funf uhr drei))[01;31m)[00m
				(LK konnte)
				(MF man)
				(VC abfahren))
			[01;31m(SIMPX[00m
				(KOORD aber)
				(LK ist)
				(MF nicht ziel)[01;31m)[00m
			[01;31m(NX[00m
				(NX der sache)
				[01;36m(PX[00m
					(KON sondern)
					(ADVX lieber)
					[01;31m(NX[00m
						(ADVX so)
						(CARD sieben)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m))
Step:Different label
{'family': ['SU', 'MF', 'SU'], 'auto preterminal span': (9, 13), 'span': (9, 13), 'subtrees': ['ADJX'], 'parent': 'TURN', 'over_word': False, 'auto preterminals': ('ADV', 'PTKNEG', 'PTKA', 'ADJD'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('SU', 'MF')}
(TOP
	(TURN
		(SU
			(SIMPX
				(LK wurde)
				(MF ich auch)
				(VC vorschlagen)
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						(C das)
						(MF wir montag fruh)
						(VC losfahren)[01;31m)[00m[01;31m)[00m))
		(MF
			[01;31m(ADJX[00m
				(ADVX vielleicht)
				(ADVX nicht)
				(ADJX allzu fruh)[01;31m)[00m)
		[01;31m(SU[00m
			(SIMPX
				[01;31m(VF[00m
					(PX
						(APPR ab)
						(NX funf uhr drei))[01;31m)[00m
				(LK konnte)
				(MF man)
				(VC abfahren))
			[01;31m(SIMPX[00m
				(KOORD aber)
				(LK ist)
				(MF nicht ziel)[01;31m)[00m
			[01;31m(NX[00m
				(NX der sache)
				[01;36m(PX[00m
					(KON sondern)
					(ADVX lieber)
					[01;31m(NX[00m
						(ADVX so)
						(CARD sieben)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m))
Step:Modifier Attachment
{'subtrees': ['KON', 'ADVX', 'NX'], 'family': ['NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'ADV', 'ADV', 'CARD'), 'right siblings': [], 'left siblings': [(NX (ART der) (NN sache))], 'auto preterminal span': (26, 30), 'span': (26, 30), 'parent': 'NX', 'label': 'PX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU
			(SIMPX
				(LK wurde)
				(MF ich auch)
				(VC vorschlagen)
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						(C das)
						(MF wir montag fruh)
						(VC losfahren)[01;31m)[00m[01;31m)[00m))
		(MF
			[01;31m(ADJX[00m
				(ADVX vielleicht)
				(ADVX nicht)
				(ADJX allzu fruh)[01;31m)[00m)
		[01;31m(SU[00m
			(SIMPX
				[01;31m(VF[00m
					(PX
						(APPR ab)
						(NX funf uhr drei))[01;31m)[00m
				(LK konnte)
				(MF man)
				(VC abfahren))
			[01;31m(SIMPX[00m
				(KOORD aber)
				(LK ist)
				(MF nicht ziel)[01;31m)[00m
			[01;31m(NX[00m
				(NX der sache)
				(PX
					(KON sondern)
					(ADVX lieber)
					[01;31m(NX[00m
						(ADVX so)
						(CARD sieben)[01;31m)[00m)[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['LK', 'MF', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'PPER', 'ADV', 'VVINF', 'KOUS', 'PPER', 'NN', 'ADV', 'VVFIN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (0, 9), 'span': (4, 9), 'left siblings': ['LK', 'MF', 'VC'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(SIMPX
				(LK wurde)
				(MF ich auch)
				(VC vorschlagen)
				[01;31m(SIMPX[00m
					(C das)
					(MF wir montag fruh)
					(VC losfahren)[01;31m)[00m))
		(MF
			[01;31m(ADJX[00m
				(ADVX vielleicht)
				(ADVX nicht)
				(ADJX allzu fruh)[01;31m)[00m)
		[01;31m(SU[00m
			(SIMPX
				[01;31m(VF[00m
					(PX
						(APPR ab)
						(NX funf uhr drei))[01;31m)[00m
				(LK konnte)
				(MF man)
				(VC abfahren))
			[01;31m(SIMPX[00m
				(KOORD aber)
				(LK ist)
				(MF nicht ziel)[01;31m)[00m
			[01;31m(NX[00m
				(NX der sache)
				(PX
					(KON sondern)
					(ADVX lieber)
					[01;31m(NX[00m
						(ADVX so)
						(CARD sieben)[01;31m)[00m)[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['C', 'MF', 'VC'], 'family': ['LK', 'MF', 'VC', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'PPER', 'ADV', 'VVINF', 'KOUS', 'PPER', 'NN', 'ADV', 'VVFIN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (0, 9), 'span': (4, 9), 'left siblings': ['LK', 'MF', 'VC'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU wurde ich auch vorschlagen das wir montag fruh losfahren)
		(MF
			[01;31m(ADJX[00m
				(ADVX vielleicht)
				(ADVX nicht)
				(ADJX allzu fruh)[01;31m)[00m)
		[01;31m(SU[00m
			(SIMPX
				[01;31m(VF[00m
					(PX
						(APPR ab)
						(NX funf uhr drei))[01;31m)[00m
				(LK konnte)
				(MF man)
				(VC abfahren))
			[01;31m(SIMPX[00m
				(KOORD aber)
				(LK ist)
				(MF nicht ziel)[01;31m)[00m
			[01;31m(NX[00m
				(NX der sache)
				(PX
					(KON sondern)
					(ADVX lieber)
					[01;31m(NX[00m
						(ADVX so)
						(CARD sieben)[01;31m)[00m)[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['ADVX', 'ADVX', 'ADJX'], 'family': ['ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PTKNEG', 'PTKA', 'ADJD'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (9, 13), 'span': (9, 13), 'left siblings': [], 'label': 'ADJX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU wurde ich auch vorschlagen das wir montag fruh losfahren)
		(MF vielleicht nicht allzu fruh)
		[01;31m(SU[00m
			(SIMPX
				[01;31m(VF[00m
					(PX
						(APPR ab)
						(NX funf uhr drei))[01;31m)[00m
				(LK konnte)
				(MF man)
				(VC abfahren))
			[01;31m(SIMPX[00m
				(KOORD aber)
				(LK ist)
				(MF nicht ziel)[01;31m)[00m
			[01;31m(NX[00m
				(NX der sache)
				(PX
					(KON sondern)
					(ADVX lieber)
					[01;31m(NX[00m
						(ADVX so)
						(CARD sieben)[01;31m)[00m)[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['PX'], 'family': ['VF', 'LK', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'CARD', 'NN', 'CARD', 'VMFIN', 'PIS', 'VVINF'), 'right siblings': ['LK', 'MF', 'VC'], 'parent': 'SIMPX', 'auto preterminal span': (13, 20), 'span': (13, 17), 'left siblings': [], 'label': 'VF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU wurde ich auch vorschlagen das wir montag fruh losfahren)
		(MF vielleicht nicht allzu fruh)
		[01;31m(SU[00m
			(SIMPX ab funf uhr drei konnte man abfahren)
			[01;31m(SIMPX[00m
				(KOORD aber)
				(LK ist)
				(MF nicht ziel)[01;31m)[00m
			[01;31m(NX[00m
				(NX der sache)
				(PX
					(KON sondern)
					(ADVX lieber)
					[01;31m(NX[00m
						(ADVX so)
						(CARD sieben)[01;31m)[00m)[01;31m)[00m[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX', 'NX'], 'family': ['SU', 'MF', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'PPER', 'ADV', 'VVINF', 'KOUS', 'PPER', 'NN', 'ADV', 'VVFIN', 'ADV', 'PTKNEG', 'PTKA', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'VMFIN', 'PIS', 'VVINF', 'KON', 'VAFIN', 'PTKNEG', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ADV', 'CARD'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 30), 'span': (13, 30), 'left siblings': ['SU', 'MF'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU wurde ich auch vorschlagen das wir montag fruh losfahren)
		(MF vielleicht nicht allzu fruh)
		(SIMPX ab funf uhr drei konnte man abfahren)
		[01;31m(SIMPX[00m
			(KOORD aber)
			(LK ist)
			(MF nicht ziel)[01;31m)[00m
		[01;31m(NX[00m
			(NX der sache)
			(PX
				(KON sondern)
				(ADVX lieber)
				[01;31m(NX[00m
					(ADVX so)
					(CARD sieben)[01;31m)[00m)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['KOORD', 'LK', 'MF'], 'family': ['SU', 'MF', 'SIMPX', 'SIMPX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'PPER', 'ADV', 'VVINF', 'KOUS', 'PPER', 'NN', 'ADV', 'VVFIN', 'ADV', 'PTKNEG', 'PTKA', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'VMFIN', 'PIS', 'VVINF', 'KON', 'VAFIN', 'PTKNEG', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ADV', 'CARD'), 'right siblings': ['NX'], 'parent': 'TURN', 'auto preterminal span': (0, 30), 'span': (20, 24), 'left siblings': ['SU', 'MF', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU wurde ich auch vorschlagen das wir montag fruh losfahren)
		(MF vielleicht nicht allzu fruh)
		(SIMPX ab funf uhr drei konnte man abfahren)
		(KOORD aber)
		(LK ist)
		(MF nicht ziel)
		[01;31m(NX[00m
			(NX der sache)
			(PX
				(KON sondern)
				(ADVX lieber)
				[01;31m(NX[00m
					(ADVX so)
					(CARD sieben)[01;31m)[00m)[01;31m)[00m))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['SU', 'MF', 'SIMPX', 'KOORD', 'LK', 'MF', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'PPER', 'ADV', 'VVINF', 'KOUS', 'PPER', 'NN', 'ADV', 'VVFIN', 'ADV', 'PTKNEG', 'PTKA', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'VMFIN', 'PIS', 'VVINF', 'KON', 'VAFIN', 'PTKNEG', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ADV', 'CARD'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 30), 'span': (24, 30), 'left siblings': ['SU', 'MF', 'SIMPX', 'KOORD', 'LK', 'MF'], 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU wurde ich auch vorschlagen das wir montag fruh losfahren)
		(MF vielleicht nicht allzu fruh)
		(SIMPX ab funf uhr drei konnte man abfahren)
		(KOORD aber)
		(LK ist)
		(MF nicht ziel)
		(NX der sache)
		(PX
			(KON sondern)
			(ADVX lieber)
			[01;31m(NX[00m
				(ADVX so)
				(CARD sieben)[01;31m)[00m)))
Step:UNSET remove
{'subtrees': ['ADVX', 'CARD'], 'family': ['KON', 'ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'ADV', 'ADV', 'CARD'), 'right siblings': [], 'parent': 'PX', 'auto preterminal span': (26, 30), 'span': (28, 30), 'left siblings': ['KON', 'ADVX'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP wurde ich auch vorschlagen das wir montag fruh losfahren vielleicht nicht allzu fruh ab funf uhr drei konnte man abfahren aber ist nicht ziel der sache sondern lieber so sieben)

Sentence 470:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK klingt)
				(MF ganz angenehm))[01;31m)[00m
		(SU grade am montag)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VVFIN', 'ADV', 'ADJD', 'ADV', 'APPRART', 'NN'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 7), 'span': (0, 4), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP das klingt ganz angenehm grade am montag)

Sentence 471:
18 Initial errors
0 on fringe, 15 iterations
2 Error:Different label
2 Error:Single Word Phrase
2 Error:PP Attachment
1 Error:PP Attachment
1 Error:UNSET remove
1 Error:Clause Attachment
1 Error:UNSET remove
1 Error:Unary
1 Error:UNSET remove
1 Error:Co-ordination
1 Error:UNSET add
1 Error:Unary
1 Error:PP Attachment
1 Error:UNSET remove
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU also es ist vollkommen wahlfrei)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF fluge)
				(LK gibt)
				[01;36m(MF[00m
					(MF es immer am abend)
					[01;36m(PX[00m [01;31m(NF[00m
						(ADVX allerdings)
						(PX erst ab achtzehn uhr funfunddreisig)[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;31m)[00m
			(SIMPX
				(KOORD und)
				(VF zuge)
				(LK gehen)
				(MF
					(ADVX sowieso)
					[01;31m(PX[00m
						(NX den ganzen tag)
						(APPO uber)[01;31m)[00m))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF wir)
				[01;31m(FKOORD[00m
					[01;31m(LKMN[00m
						(LK waren)
						[01;31m(MF[00m [01;33m(MF[00m
							[01;36m(MF[00m
								(ADVX naturlich)
								(PX mit dem flugzeug)
								(ADJX etwas flexibler)[01;36m)[00m
							[01;31m(PX[00m
								(PX zum abend) [01;33mMF)[00m
								[01;36m(VC[00m [01;31m(ADVX[00m
									(ADV hin)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
						[01;33m(SIMPX (NF[00m (NF weil wir den letzten flug sogar um neun uhr noch nehmen konnten)[01;31m)[00m
					(KON und)
					(LKM waren dann trotzdem noch vor elf zu hause)[01;31m)[00m[01;31m)[00m[01;31m)[00m)) [01;33mNF) SIMPX)[00m
Step:Different label
{'family': ['VF', 'LK', 'MF', 'PX'], 'auto preterminal span': (11, 17), 'span': (11, 17), 'subtrees': ['ADVX', 'PX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('ADV', 'ADV', 'APPR', 'CARD', 'NN', 'CARD'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('NF', 'PX')}
(TOP
	(TURN
		(SU also es ist vollkommen wahlfrei)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF fluge)
				(LK gibt)
				[01;36m(MF[00m
					(MF es immer am abend)
					(PX allerdings erst ab achtzehn uhr funfunddreisig)[01;36m)[00m[01;31m)[00m
			(SIMPX
				(KOORD und)
				(VF zuge)
				(LK gehen)
				(MF
					(ADVX sowieso)
					[01;31m(PX[00m
						(NX den ganzen tag)
						(APPO uber)[01;31m)[00m))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF wir)
				[01;31m(FKOORD[00m
					[01;31m(LKMN[00m
						(LK waren)
						[01;31m(MF[00m [01;33m(MF[00m
							[01;36m(MF[00m
								(ADVX naturlich)
								(PX mit dem flugzeug)
								(ADJX etwas flexibler)[01;36m)[00m
							[01;31m(PX[00m
								(PX zum abend) [01;33mMF)[00m
								[01;36m(VC[00m [01;31m(ADVX[00m
									(ADV hin)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
						[01;33m(SIMPX (NF[00m (NF weil wir den letzten flug sogar um neun uhr noch nehmen konnten)[01;31m)[00m
					(KON und)
					(LKM waren dann trotzdem noch vor elf zu hause)[01;31m)[00m[01;31m)[00m[01;31m)[00m)) [01;33mNF) SIMPX)[00m
Step:Single Word Phrase
{'family': ['PX', 'VC'], 'auto preterminal span': (35, 36), 'span': (35, 36), 'subtrees': ['ADV'], 'parent': 'PX', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'VC')}
(TOP
	(TURN
		(SU also es ist vollkommen wahlfrei)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF fluge)
				(LK gibt)
				[01;36m(MF[00m
					(MF es immer am abend)
					(PX allerdings erst ab achtzehn uhr funfunddreisig)[01;36m)[00m[01;31m)[00m
			(SIMPX
				(KOORD und)
				(VF zuge)
				(LK gehen)
				(MF
					(ADVX sowieso)
					[01;31m(PX[00m
						(NX den ganzen tag)
						(APPO uber)[01;31m)[00m))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF wir)
				[01;31m(FKOORD[00m
					[01;31m(LKMN[00m
						(LK waren)
						[01;31m(MF[00m [01;33m(MF[00m
							[01;36m(MF[00m
								(ADVX naturlich)
								(PX mit dem flugzeug)
								(ADJX etwas flexibler)[01;36m)[00m
							[01;31m(PX[00m
								(PX zum abend) [01;33mMF)[00m
								(VC hin)[01;31m)[00m[01;31m)[00m
						[01;33m(SIMPX (NF[00m (NF weil wir den letzten flug sogar um neun uhr noch nehmen konnten)[01;31m)[00m
					(KON und)
					(LKM waren dann trotzdem noch vor elf zu hause)[01;31m)[00m[01;31m)[00m[01;31m)[00m)) [01;33mNF) SIMPX)[00m
Step:PP Attachment
{'new_parent': 'LKMN', 'new_family': ['LK', 'MF', 'PX', 'NF'], 'mover info': [('PX', (33, 36))], 'old_family': ['ADVX', 'PX', 'ADJX', 'PX'], 'start left siblings': ['ADVX', 'PX', 'ADJX'], 'auto preterminals': ('VAFIN', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'ADJD', 'APPRART', 'NN', 'ADV', 'KOUS', 'PPER', 'ART', 'ADJA', 'NN', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'VVINF', 'VMFIN'), 'start right siblings': [], 'end left siblings': ['LK', 'MF'], 'auto preterminal span': (26, 48), 'movers': ['PX'], 'old_parent': 'MF', 'end right siblings': ['NF'], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU also es ist vollkommen wahlfrei)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF fluge)
				(LK gibt)
				[01;36m(MF[00m
					(MF es immer am abend)
					(PX allerdings erst ab achtzehn uhr funfunddreisig)[01;36m)[00m[01;31m)[00m
			(SIMPX
				(KOORD und)
				(VF zuge)
				(LK gehen)
				(MF
					(ADVX sowieso)
					[01;31m(PX[00m
						(NX den ganzen tag)
						(APPO uber)[01;31m)[00m))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF wir)
				[01;31m(FKOORD[00m
					[01;31m(LKMN[00m
						(LK waren)
						[01;33m(MF[00m (MF naturlich mit dem flugzeug etwas flexibler)
						[01;31m(PX[00m
							(PX zum abend) [01;33mMF)[00m
							(VC hin)[01;31m)[00m
						[01;33m(SIMPX (NF[00m (NF weil wir den letzten flug sogar um neun uhr noch nehmen konnten)[01;31m)[00m
					(KON und)
					(LKM waren dann trotzdem noch vor elf zu hause)[01;31m)[00m[01;31m)[00m[01;31m)[00m)) [01;33mNF) SIMPX)[00m
Step:PP Attachment
{'subtrees': ['MF', 'PX'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV', 'APPRART', 'NN', 'ADV', 'ADV', 'APPR', 'CARD', 'NN', 'CARD'), 'right siblings': [], 'left siblings': [(VF (NX (NN fluge))), (LK (VXFIN (VVFIN gibt)))], 'auto preterminal span': (7, 17), 'span': (7, 17), 'parent': 'SIMPX', 'label': 'MF', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU also es ist vollkommen wahlfrei)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF fluge)
				(LK gibt)
				(MF es immer am abend allerdings erst ab achtzehn uhr funfunddreisig)[01;31m)[00m
			(SIMPX
				(KOORD und)
				(VF zuge)
				(LK gehen)
				(MF
					(ADVX sowieso)
					[01;31m(PX[00m
						(NX den ganzen tag)
						(APPO uber)[01;31m)[00m))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF wir)
				[01;31m(FKOORD[00m
					[01;31m(LKMN[00m
						(LK waren)
						[01;33m(MF[00m (MF naturlich mit dem flugzeug etwas flexibler)
						[01;31m(PX[00m
							(PX zum abend) [01;33mMF)[00m
							(VC hin)[01;31m)[00m
						[01;33m(SIMPX (NF[00m (NF weil wir den letzten flug sogar um neun uhr noch nehmen konnten)[01;31m)[00m
					(KON und)
					(LKM waren dann trotzdem noch vor elf zu hause)[01;31m)[00m[01;31m)[00m[01;31m)[00m)) [01;33mNF) SIMPX)[00m
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'VVFIN', 'PPER', 'ADV', 'APPRART', 'NN', 'ADV', 'ADV', 'APPR', 'CARD', 'NN', 'CARD', 'KON', 'NN', 'VVFIN', 'ADV', 'ART', 'ADJA', 'NN', 'APPO'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (5, 25), 'span': (5, 17), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU also es ist vollkommen wahlfrei)
		[01;31m(SU[00m
			(VF fluge)
			(LK gibt)
			(MF es immer am abend allerdings erst ab achtzehn uhr funfunddreisig)
			(SIMPX
				(KOORD und)
				(VF zuge)
				(LK gehen)
				(MF
					(ADVX sowieso)
					[01;31m(PX[00m
						(NX den ganzen tag)
						(APPO uber)[01;31m)[00m))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF wir)
				[01;31m(FKOORD[00m
					[01;31m(LKMN[00m
						(LK waren)
						[01;33m(MF[00m (MF naturlich mit dem flugzeug etwas flexibler)
						[01;31m(PX[00m
							(PX zum abend) [01;33mMF)[00m
							(VC hin)[01;31m)[00m
						[01;33m(SIMPX (NF[00m (NF weil wir den letzten flug sogar um neun uhr noch nehmen konnten)[01;31m)[00m
					(KON und)
					(LKM waren dann trotzdem noch vor elf zu hause)[01;31m)[00m[01;31m)[00m[01;31m)[00m)) [01;33mNF) SIMPX)[00m
Step:Clause Attachment
{'subtrees': ['VF', 'LK', 'MF', 'SIMPX'], 'family': ['SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPER', 'VAFIN', 'ADV', 'ADJD', 'NN', 'VVFIN', 'PPER', 'ADV', 'APPRART', 'NN', 'ADV', 'ADV', 'APPR', 'CARD', 'NN', 'CARD', 'KON', 'NN', 'VVFIN', 'ADV', 'ART', 'ADJA', 'NN', 'APPO', 'PPER', 'VAFIN', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'ADJD', 'APPRART', 'NN', 'ADV', 'KOUS', 'PPER', 'ART', 'ADJA', 'NN', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'VVINF', 'VMFIN', 'KON', 'VAFIN', 'ADV', 'PROP', 'ADV', 'APPR', 'CARD', 'APPR', 'NN'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 57), 'span': (5, 25), 'left siblings': ['SU'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU also es ist vollkommen wahlfrei)
		(VF fluge)
		(LK gibt)
		(MF es immer am abend allerdings erst ab achtzehn uhr funfunddreisig)
		(SIMPX
			(KOORD und)
			(VF zuge)
			(LK gehen)
			(MF
				(ADVX sowieso)
				[01;31m(PX[00m
					(NX den ganzen tag)
					(APPO uber)[01;31m)[00m))
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF wir)
				[01;31m(FKOORD[00m
					[01;31m(LKMN[00m
						(LK waren)
						[01;33m(MF[00m (MF naturlich mit dem flugzeug etwas flexibler)
						[01;31m(PX[00m
							(PX zum abend) [01;33mMF)[00m
							(VC hin)[01;31m)[00m
						[01;33m(SIMPX (NF[00m (NF weil wir den letzten flug sogar um neun uhr noch nehmen konnten)[01;31m)[00m
					(KON und)
					(LKM waren dann trotzdem noch vor elf zu hause)[01;31m)[00m[01;31m)[00m[01;31m)[00m)) [01;33mNF) SIMPX)[00m
Step:UNSET remove
{'subtrees': ['NX', 'APPO'], 'family': ['ADVX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ART', 'ADJA', 'NN', 'APPO'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (20, 25), 'span': (21, 25), 'left siblings': ['ADVX'], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU also es ist vollkommen wahlfrei)
		(VF fluge)
		(LK gibt)
		(MF es immer am abend allerdings erst ab achtzehn uhr funfunddreisig)
		(SIMPX und zuge gehen sowieso den ganzen tag uber)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF wir)
				[01;31m(FKOORD[00m
					[01;31m(LKMN[00m
						(LK waren)
						[01;33m(MF[00m (MF naturlich mit dem flugzeug etwas flexibler)
						[01;31m(PX[00m
							(PX zum abend) [01;33mMF)[00m
							(VC hin)[01;31m)[00m
						[01;33m(SIMPX (NF[00m (NF weil wir den letzten flug sogar um neun uhr noch nehmen konnten)[01;31m)[00m
					(KON und)
					(LKM waren dann trotzdem noch vor elf zu hause)[01;31m)[00m[01;31m)[00m[01;31m)[00m)) [01;33mNF) SIMPX)[00m
Step:Unary
{'subtrees': ['VF', 'FKOORD'], 'family': ['SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'ADJD', 'APPRART', 'NN', 'ADV', 'KOUS', 'PPER', 'ART', 'ADJA', 'NN', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'VVINF', 'VMFIN', 'KON', 'VAFIN', 'ADV', 'PROP', 'ADV', 'APPR', 'CARD', 'APPR', 'NN'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (25, 57), 'span': (25, 57), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU also es ist vollkommen wahlfrei)
		(VF fluge)
		(LK gibt)
		(MF es immer am abend allerdings erst ab achtzehn uhr funfunddreisig)
		(SIMPX und zuge gehen sowieso den ganzen tag uber)
		[01;31m(SU[00m
			(VF wir)
			[01;31m(FKOORD[00m
				[01;31m(LKMN[00m
					(LK waren)
					[01;33m(MF[00m (MF naturlich mit dem flugzeug etwas flexibler)
					[01;31m(PX[00m
						(PX zum abend) [01;33mMF)[00m
						(VC hin)[01;31m)[00m
					[01;33m(SIMPX (NF[00m (NF weil wir den letzten flug sogar um neun uhr noch nehmen konnten)[01;31m)[00m
				(KON und)
				(LKM waren dann trotzdem noch vor elf zu hause)[01;31m)[00m[01;31m)[00m)) [01;33mNF) SIMPX)[00m
Step:UNSET remove
{'subtrees': ['VF', 'FKOORD'], 'family': ['SU', 'VF', 'LK', 'MF', 'SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPER', 'VAFIN', 'ADV', 'ADJD', 'NN', 'VVFIN', 'PPER', 'ADV', 'APPRART', 'NN', 'ADV', 'ADV', 'APPR', 'CARD', 'NN', 'CARD', 'KON', 'NN', 'VVFIN', 'ADV', 'ART', 'ADJA', 'NN', 'APPO', 'PPER', 'VAFIN', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'ADJD', 'APPRART', 'NN', 'ADV', 'KOUS', 'PPER', 'ART', 'ADJA', 'NN', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'VVINF', 'VMFIN', 'KON', 'VAFIN', 'ADV', 'PROP', 'ADV', 'APPR', 'CARD', 'APPR', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 57), 'span': (25, 57), 'left siblings': ['SU', 'VF', 'LK', 'MF', 'SIMPX'], 'label': 'SU', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU also es ist vollkommen wahlfrei)
		(VF fluge)
		(LK gibt)
		(MF es immer am abend allerdings erst ab achtzehn uhr funfunddreisig)
		(SIMPX und zuge gehen sowieso den ganzen tag uber)
		(VF wir)
		[01;31m(FKOORD[00m
			[01;31m(LKMN[00m
				(LK waren)
				[01;33m(MF[00m (MF naturlich mit dem flugzeug etwas flexibler)
				[01;31m(PX[00m
					(PX zum abend) [01;33mMF)[00m
					(VC hin)[01;31m)[00m
				[01;33m(SIMPX (NF[00m (NF weil wir den letzten flug sogar um neun uhr noch nehmen konnten)[01;31m)[00m
			(KON und)
			(LKM waren dann trotzdem noch vor elf zu hause)[01;31m)[00m)) [01;33mNF) SIMPX)[00m
Step:Co-ordination
{'subtrees': ['LK', 'MF', 'PX', 'NF'], 'family': ['LKMN', 'KON', 'LKM'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'ADJD', 'APPRART', 'NN', 'ADV', 'KOUS', 'PPER', 'ART', 'ADJA', 'NN', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'VVINF', 'VMFIN', 'KON', 'VAFIN', 'ADV', 'PROP', 'ADV', 'APPR', 'CARD', 'APPR', 'NN'), 'right siblings': ['KON', 'LKM'], 'parent': 'FKOORD', 'auto preterminal span': (26, 57), 'span': (26, 48), 'left siblings': [], 'label': 'LKMN', 'classified_type': 'Co-ordination', 'type': 'remove'}
(TOP
	(TURN
		(SU also es ist vollkommen wahlfrei)
		(VF fluge)
		(LK gibt)
		(MF es immer am abend allerdings erst ab achtzehn uhr funfunddreisig)
		(SIMPX und zuge gehen sowieso den ganzen tag uber)
		(VF wir)
		[01;31m(FKOORD[00m
			(LK waren)
			[01;33m(MF[00m (MF naturlich mit dem flugzeug etwas flexibler)
			[01;31m(PX[00m
				(PX zum abend) [01;33mMF)[00m
				(VC hin)[01;31m)[00m
			[01;36m(NF[00m
				[01;36m(SIMPX[00m
					(NF weil wir den letzten flug sogar um neun uhr noch nehmen konnten)
					(KON und)
					(LKM waren dann trotzdem noch vor elf zu hause)[01;36m)[00m[01;36m)[00m[01;31m)[00m))
Step:UNSET add
{'subtrees': ['NF', 'KON', 'LKM'], 'family': ['LK', 'MF', 'PX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ART', 'ADJA', 'NN', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'VVINF', 'VMFIN', 'KON', 'VAFIN', 'ADV', 'PROP', 'ADV', 'APPR', 'CARD', 'APPR', 'NN'), 'right siblings': [], 'left siblings': [(LK (VXFIN (VAFIN waren))), (MF (ADVX (ADV naturlich)) (PX (APPR mit) (NX (ART dem) (NN flugzeug))) (ADJX (ADVX (ADV etwas)) (ADJD flexibler))), (PX (PX (APPRART zum) (NX (NN abend))) (VC (ADV hin)))], 'auto preterminal span': (36, 57), 'span': (36, 57), 'parent': 'FKOORD', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU also es ist vollkommen wahlfrei)
		(VF fluge)
		(LK gibt)
		(MF es immer am abend allerdings erst ab achtzehn uhr funfunddreisig)
		(SIMPX und zuge gehen sowieso den ganzen tag uber)
		(VF wir)
		[01;31m(FKOORD[00m
			(LK waren)
			[01;33m(MF[00m (MF naturlich mit dem flugzeug etwas flexibler)
			[01;31m(PX[00m
				(PX zum abend) [01;33mMF)[00m
				(VC hin)[01;31m)[00m
			[01;36m(NF[00m
				(SIMPX
					(NF weil wir den letzten flug sogar um neun uhr noch nehmen konnten)
					(KON und)
					(LKM waren dann trotzdem noch vor elf zu hause))[01;36m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['LK', 'MF', 'PX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ART', 'ADJA', 'NN', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'VVINF', 'VMFIN', 'KON', 'VAFIN', 'ADV', 'PROP', 'ADV', 'APPR', 'CARD', 'APPR', 'NN'), 'right siblings': [], 'left siblings': [(LK (VXFIN (VAFIN waren))), (MF (ADVX (ADV naturlich)) (PX (APPR mit) (NX (ART dem) (NN flugzeug))) (ADJX (ADVX (ADV etwas)) (ADJD flexibler))), (PX (PX (APPRART zum) (NX (NN abend))) (VC (ADV hin)))], 'auto preterminal span': (36, 57), 'span': (36, 57), 'parent': 'FKOORD', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU also es ist vollkommen wahlfrei)
		(VF fluge)
		(LK gibt)
		(MF es immer am abend allerdings erst ab achtzehn uhr funfunddreisig)
		(SIMPX und zuge gehen sowieso den ganzen tag uber)
		(VF wir)
		[01;31m(FKOORD[00m
			(LK waren)
			[01;33m(MF[00m (MF naturlich mit dem flugzeug etwas flexibler)
			[01;31m(PX[00m
				(PX zum abend) [01;33mMF)[00m
				(VC hin)[01;31m)[00m
			(NF weil wir den letzten flug sogar um neun uhr noch nehmen konnten und waren dann trotzdem noch vor elf zu hause)[01;31m)[00m))
Step:PP Attachment
{'subtrees': ['LK', 'MF', 'PX', 'NF'], 'family': ['SU', 'VF', 'LK', 'MF', 'SIMPX', 'VF', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPER', 'VAFIN', 'ADV', 'ADJD', 'NN', 'VVFIN', 'PPER', 'ADV', 'APPRART', 'NN', 'ADV', 'ADV', 'APPR', 'CARD', 'NN', 'CARD', 'KON', 'NN', 'VVFIN', 'ADV', 'ART', 'ADJA', 'NN', 'APPO', 'PPER', 'VAFIN', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'ADJD', 'APPRART', 'NN', 'ADV', 'KOUS', 'PPER', 'ART', 'ADJA', 'NN', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'VVINF', 'VMFIN', 'KON', 'VAFIN', 'ADV', 'PROP', 'ADV', 'APPR', 'CARD', 'APPR', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 57), 'span': (26, 57), 'left siblings': ['SU', 'VF', 'LK', 'MF', 'SIMPX', 'VF'], 'label': 'FKOORD', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU also es ist vollkommen wahlfrei)
		(VF fluge)
		(LK gibt)
		(MF es immer am abend allerdings erst ab achtzehn uhr funfunddreisig)
		(SIMPX und zuge gehen sowieso den ganzen tag uber)
		(VF wir)
		(LK waren)
		[01;33m(MF[00m (MF naturlich mit dem flugzeug etwas flexibler)
		[01;31m(PX[00m
			(PX zum abend) [01;33mMF)[00m
			(VC hin)[01;31m)[00m
		(NF weil wir den letzten flug sogar um neun uhr noch nehmen konnten und waren dann trotzdem noch vor elf zu hause)))
Step:UNSET remove
{'subtrees': ['PX', 'VC'], 'family': ['SU', 'VF', 'LK', 'MF', 'SIMPX', 'VF', 'LK', 'MF', 'PX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPER', 'VAFIN', 'ADV', 'ADJD', 'NN', 'VVFIN', 'PPER', 'ADV', 'APPRART', 'NN', 'ADV', 'ADV', 'APPR', 'CARD', 'NN', 'CARD', 'KON', 'NN', 'VVFIN', 'ADV', 'ART', 'ADJA', 'NN', 'APPO', 'PPER', 'VAFIN', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'ADJD', 'APPRART', 'NN', 'ADV', 'KOUS', 'PPER', 'ART', 'ADJA', 'NN', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'VVINF', 'VMFIN', 'KON', 'VAFIN', 'ADV', 'PROP', 'ADV', 'APPR', 'CARD', 'APPR', 'NN'), 'right siblings': ['NF'], 'parent': 'TURN', 'auto preterminal span': (0, 57), 'span': (33, 36), 'left siblings': ['SU', 'VF', 'LK', 'MF', 'SIMPX', 'VF', 'LK', 'MF'], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU also es ist vollkommen wahlfrei)
		(VF fluge)
		(LK gibt)
		(MF es immer am abend allerdings erst ab achtzehn uhr funfunddreisig)
		(SIMPX und zuge gehen sowieso den ganzen tag uber)
		(VF wir)
		(LK waren)
		[01;36m(MF[00m
			(MF naturlich mit dem flugzeug etwas flexibler)
			(PX zum abend)[01;36m)[00m
		(VC hin)
		(NF weil wir den letzten flug sogar um neun uhr noch nehmen konnten und waren dann trotzdem noch vor elf zu hause)))
Step:PP Attachment
{'subtrees': ['MF', 'PX'], 'family': ['SU', 'VF', 'LK', 'MF', 'SIMPX', 'VF', 'LK', 'MF', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'APPR', 'ART', 'NN', 'ADV', 'ADJD', 'APPRART', 'NN'), 'right siblings': [(VC (ADV hin)), (NF (SIMPX (NF (SIMPX (C (KOUS weil)) (MF (NX (PPER wir)) (NX (ART den) (ADJX (ADJA letzten)) (NN flug)) (ADVX (ADV sogar)) (PX (APPR um) (NX (ADJX (CARD neun)) (NN uhr))) (ADVX (ADV noch))) (VC (VXINF (VVINF nehmen)) (VXFIN (VMFIN konnten))))) (KON und) (LKM (LK (VXFIN (VAFIN waren))) (MF (ADVX (ADV dann)) (PX (PROP trotzdem)) (ADVX (ADV noch)) (PX (APPR vor) (NX (CARD elf))) (PX (APPR zu) (NX (NN hause)))))))], 'left siblings': [(SU (DM (ADVX (ADV also))) (SIMPX (VF (NX (PPER es))) (LK (VXFIN (VAFIN ist))) (MF (ADJX (ADVX (ADV vollkommen)) (ADJD wahlfrei))))), (VF (NX (NN fluge))), (LK (VXFIN (VVFIN gibt))), (MF (MF (NX (PPER es)) (ADVX (ADV immer)) (PX (APPRART am) (NX (NN abend)))) (PX (ADVX (ADV allerdings)) (PX (ADVX (ADV erst)) (APPR ab) (NX (NX (ADJX (CARD achtzehn)) (NN uhr)) (ADJX (CARD funfunddreisig)))))), (SIMPX (KOORD (KON und)) (VF (NX (NN zuge))) (LK (VXFIN (VVFIN gehen))) (MF (ADVX (ADV sowieso)) (NX (ART den) (ADJX (ADJA ganzen)) (NN tag)) (APPO uber))), (VF (NX (PPER wir))), (LK (VXFIN (VAFIN waren)))], 'auto preterminal span': (27, 35), 'span': (27, 35), 'parent': 'TURN', 'label': 'MF', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP also es ist vollkommen wahlfrei fluge gibt es immer am abend allerdings erst ab achtzehn uhr funfunddreisig und zuge gehen sowieso den ganzen tag uber wir waren naturlich mit dem flugzeug etwas flexibler zum abend hin weil wir den letzten flug sogar um neun uhr noch nehmen konnten und waren dann trotzdem noch vor elf zu hause)

Sentence 472:
4 Initial errors
0 on fringe, 1 iterations
4 Error:UNSET move
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;36m(SU[00m
				(SIMPX
					(VF das)
					(LK ist)
					(MF ein guter name))[01;36m)[00m
			[01;33m(SU[00m (DM ja)[01;31m)[00m
		[01;31m(SU[00m
			(DM okay)
			(SIMPX machen wir das)[01;31m)[00m)) [01;33mSU)[00m
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['DM', 'DM', 'SIMPX'], 'mover info': [('DM', (5, 6))], 'old_family': ['SIMPX', 'DM'], 'start left siblings': ['SIMPX'], 'auto preterminals': ('PDS', 'VAFIN', 'ART', 'ADJA', 'NN', 'PTKANT', 'ITJ', 'VVFIN', 'PPER', 'PDS'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 10), 'movers': ['DM'], 'old_parent': 'SU', 'POS confusion': ('PTKANT', 'PTKANT'), 'end right siblings': ['DM', 'SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP das ist ein guter name ja okay machen wir das)

Sentence 473:
14 Initial errors
0 on fringe, 9 iterations
4 Error:UNSET move
2 Error:Single Word Phrase
2 Error:UNSET move
1 Error:Unary
1 Error:Clause Attachment
1 Error:Unary
1 Error:Unary
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM
				(PTKANT ja))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF wir)
				(LK kucken)
				[01;31m(MF[00m [01;33m(MF[00m
					(ADVX
						(ADV einfach))[01;31m)[00m
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						[01;31m(C[00m
							(NX
								(PWS was))[01;31m)[00m
						[01;31m(MF[00m
							(ADVX
								(ADV dann))[01;31m)[00m [01;33mMF)[00m
						(VC gespielt wird)[01;31m)[00m[01;31m)[00m)
			(SIMPX
				[01;31m(VF[00m
					[01;31m(SIMPX[00m
						(KOORD und)
						[01;36m(SIMPX[00m
							[01;36m(VF[00m
								(C wenn)
								(MF
									(NX
										(NX nix)
										[01;36m(PX[00m [01;31m(NX[00m
											(NN gescheites)[01;31m)[00m[01;36m)[00m))
								(VC kommt)[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
				(LK konnen)
				(MF wir immer noch einfach nur eine kneipentour)
				(VC machen))[01;31m)[00m))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['KOORD', 'VF', 'LK', 'MF', 'VC'], 'mover info': [('KOORD', (8, 9))], 'old_family': ['KOORD', 'C', 'MF', 'VC'], 'start left siblings': [], 'auto preterminals': ('KON', 'KOUS', 'PIS', 'NN', 'VVFIN', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'ADV', 'ART', 'NN', 'VVINF'), 'start right siblings': ['C', 'MF', 'VC'], 'end left siblings': [], 'auto preterminal span': (8, 22), 'movers': ['KOORD'], 'old_parent': 'SIMPX', 'POS confusion': ('KON', 'KON'), 'end right siblings': ['VF', 'LK', 'MF', 'VC'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM
				(PTKANT ja))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF wir)
				(LK kucken)
				[01;31m(MF[00m [01;33m(MF[00m
					(ADVX
						(ADV einfach))[01;31m)[00m
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						[01;31m(C[00m
							(NX
								(PWS was))[01;31m)[00m
						[01;31m(MF[00m
							(ADVX
								(ADV dann))[01;31m)[00m [01;33mMF)[00m
						(VC gespielt wird)[01;31m)[00m[01;31m)[00m)
			(SIMPX
				(KOORD und)
				(VF
					(SIMPX
						(C wenn)
						(MF
							(NX
								(NX nix)
								[01;36m(PX[00m [01;31m(NX[00m
									(NN gescheites)[01;31m)[00m[01;36m)[00m))
						(VC kommt)))
				(LK konnen)
				(MF wir immer noch einfach nur eine kneipentour)
				(VC machen))[01;31m)[00m))
Step:Single Word Phrase
{'family': ['NX', 'PX'], 'auto preterminal span': (11, 12), 'span': (11, 12), 'subtrees': ['NN'], 'parent': 'NX', 'over_word': True, 'auto preterminals': ('NN',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('NX', 'PX')}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM
				(PTKANT ja))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF wir)
				(LK kucken)
				[01;31m(MF[00m [01;33m(MF[00m
					(ADVX
						(ADV einfach))[01;31m)[00m
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						[01;31m(C[00m
							(NX
								(PWS was))[01;31m)[00m
						[01;31m(MF[00m
							(ADVX
								(ADV dann))[01;31m)[00m [01;33mMF)[00m
						(VC gespielt wird)[01;31m)[00m[01;31m)[00m)
			(SIMPX und wenn nix gescheites kommt konnen wir immer noch einfach nur eine kneipentour machen)[01;31m)[00m))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['ADVX', 'C', 'MF'], 'mover info': [('C', (4, 5)), ('MF', (5, 6))], 'old_family': ['C', 'MF', 'VC'], 'start left siblings': [], 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'PWS', 'ADV', 'VVPP', 'VAFIN'), 'start right siblings': ['VC'], 'end left siblings': ['ADVX'], 'auto preterminal span': (1, 8), 'movers': ['C', 'MF'], 'old_parent': 'SIMPX', 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM
				(PTKANT ja))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF wir)
				(LK kucken)
				(MF
					(ADVX einfach)
					[01;31m(C[00m
						(NX
							(PWS was))[01;31m)[00m
					[01;31m(MF[00m
						(ADVX
							(ADV dann))[01;31m)[00m)
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						(VC
							(VXINF gespielt)
							(VXFIN wird))[01;31m)[00m[01;31m)[00m)
			(SIMPX und wenn nix gescheites kommt konnen wir immer noch einfach nur eine kneipentour machen)[01;31m)[00m))
Step:Unary
{'subtrees': ['DM'], 'family': ['SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VVFIN', 'ADV', 'PWS', 'ADV', 'VVPP', 'VAFIN', 'KON', 'KOUS', 'PIS', 'NN', 'VVFIN', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'ADV', 'ART', 'NN', 'VVINF'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 22), 'span': (0, 1), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		[01;31m(SU[00m
			(SIMPX
				(VF wir)
				(LK kucken)
				(MF
					(ADVX einfach)
					[01;31m(C[00m
						(NX
							(PWS was))[01;31m)[00m
					[01;31m(MF[00m
						(ADVX
							(ADV dann))[01;31m)[00m)
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						(VC
							(VXINF gespielt)
							(VXFIN wird))[01;31m)[00m[01;31m)[00m)
			(SIMPX und wenn nix gescheites kommt konnen wir immer noch einfach nur eine kneipentour machen)[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['DM', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VVFIN', 'ADV', 'PWS', 'ADV', 'VVPP', 'VAFIN', 'KON', 'KOUS', 'PIS', 'NN', 'VVFIN', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'ADV', 'ART', 'NN', 'VVINF'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 22), 'span': (1, 22), 'left siblings': ['DM'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF wir)
			(LK kucken)
			(MF
				(ADVX einfach)
				[01;31m(C[00m
					(NX
						(PWS was))[01;31m)[00m
				[01;31m(MF[00m
					(ADVX
						(ADV dann))[01;31m)[00m)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					(VC
						(VXINF gespielt)
						(VXFIN wird))[01;31m)[00m[01;31m)[00m)
		(SIMPX und wenn nix gescheites kommt konnen wir immer noch einfach nur eine kneipentour machen)))
Step:Unary
{'subtrees': ['NX'], 'family': ['ADVX', 'C', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PWS', 'ADV'), 'right siblings': ['MF'], 'parent': 'MF', 'auto preterminal span': (3, 6), 'span': (4, 5), 'left siblings': ['ADVX'], 'label': 'C', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF wir)
			(LK kucken)
			(MF
				(ADVX einfach)
				(NX was)
				[01;31m(MF[00m
					(ADVX
						(ADV dann))[01;31m)[00m)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					(VC
						(VXINF gespielt)
						(VXFIN wird))[01;31m)[00m[01;31m)[00m)
		(SIMPX und wenn nix gescheites kommt konnen wir immer noch einfach nur eine kneipentour machen)))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['ADVX', 'NX', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PWS', 'ADV'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (3, 6), 'span': (5, 6), 'left siblings': ['ADVX', 'NX'], 'label': 'MF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF wir)
			(LK kucken)
			(MF einfach was dann)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					(VC
						(VXINF gespielt)
						(VXFIN wird))[01;31m)[00m[01;31m)[00m)
		(SIMPX und wenn nix gescheites kommt konnen wir immer noch einfach nur eine kneipentour machen)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['VF', 'LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'PWS', 'ADV', 'VVPP', 'VAFIN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (1, 8), 'span': (6, 8), 'left siblings': ['VF', 'LK', 'MF'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF wir)
			(LK kucken)
			(MF einfach was dann)
			[01;31m(SIMPX[00m
				(VC
					(VXINF gespielt)
					(VXFIN wird))[01;31m)[00m)
		(SIMPX und wenn nix gescheites kommt konnen wir immer noch einfach nur eine kneipentour machen)))
Step:Unary
{'subtrees': ['VC'], 'family': ['VF', 'LK', 'MF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'PWS', 'ADV', 'VVPP', 'VAFIN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (1, 8), 'span': (6, 8), 'left siblings': ['VF', 'LK', 'MF'], 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja wir kucken einfach was dann gespielt wird und wenn nix gescheites kommt konnen wir immer noch einfach nur eine kneipentour machen)

Sentence 474:
10 Initial errors
0 on fringe, 7 iterations
3 Error:UNSET move
2 Error:Different label
1 Error:Unary
1 Error:Unary
1 Error:Unary
1 Error:Unary
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP [01;33m(SU[00m
	(TURN
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK ging)
				[01;33m(MF[00m (MF ja ganz schnell)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;36m(NX[00m [01;31m(DM[00m
				(PTKANT danke)
				(ADVX auch)[01;31m)[00m [01;33mMF) SU)[00m[01;36m)[00m
			[01;31m(DM[00m
				[01;31m(PX[00m
					(KON und)
					(PX bis dann)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;36m(NX[00m
			(SU
				(DM
					(ITJ tschus)))[01;36m)[00m))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['LK', 'MF', 'DM'], 'mover info': [('DM', (4, 6))], 'old_family': ['DM', 'DM'], 'start left siblings': [], 'auto preterminals': ('VVFIN', 'ADV', 'ADV', 'ADJD', 'PTKANT', 'ADV', 'KON', 'APPR', 'ADV', 'ITJ'), 'start right siblings': ['DM'], 'end left siblings': ['LK', 'MF'], 'auto preterminal span': (0, 10), 'adding node already present': False, 'movers': ['DM'], 'old_parent': 'SU', 'added and moved': True, 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(SU
			[01;31m(SIMPX[00m
				(LK ging)
				(MF
					(MF ja ganz schnell)
					[01;36m(NX[00m [01;31m(DM[00m
						(PTKANT danke)
						(ADVX auch)[01;31m)[00m[01;36m)[00m)[01;31m)[00m)
		[01;31m(SU[00m
			[01;31m(DM[00m
				[01;31m(PX[00m
					(KON und)
					(PX bis dann)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;36m(NX[00m
			(SU
				(DM
					(ITJ tschus)))[01;36m)[00m))
Step:Different label
{'family': ['MF', 'NX'], 'auto preterminal span': (4, 6), 'span': (4, 6), 'subtrees': ['PTKANT', 'ADVX'], 'parent': 'MF', 'over_word': False, 'auto preterminals': ('PTKANT', 'ADV'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('DM', 'NX')}
(TOP
	(TURN
		(SU
			[01;31m(SIMPX[00m
				(LK ging)
				(MF ja ganz schnell danke auch)[01;31m)[00m)
		[01;31m(SU[00m
			[01;31m(DM[00m
				[01;31m(PX[00m
					(KON und)
					(PX bis dann)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;36m(NX[00m
			(SU
				(DM
					(ITJ tschus)))[01;36m)[00m))
Step:Unary
{'subtrees': ['SU'], 'family': ['SU', 'SU', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ',), 'right siblings': [], 'left siblings': [(SU (SIMPX (LK (VXFIN (VVFIN ging))) (MF (MF (ADVX (ADV ja)) (ADJX (ADVX (ADV ganz)) (ADJD schnell))) (NX (PTKANT danke) (ADVX (ADV auch)))))), (SU (DM (PX (KON und) (PX (APPR bis) (ADVX (ADV dann))))))], 'auto preterminal span': (9, 10), 'span': (9, 10), 'parent': 'TURN', 'label': 'NX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU
			[01;31m(SIMPX[00m
				(LK ging)
				(MF ja ganz schnell danke auch)[01;31m)[00m)
		[01;31m(SU[00m
			[01;31m(DM[00m
				[01;31m(PX[00m
					(KON und)
					(PX bis dann)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(NX tschus)))
Step:Unary
{'subtrees': ['LK', 'MF'], 'family': ['SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'ADV', 'ADV', 'ADJD', 'PTKANT', 'ADV'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (0, 6), 'span': (0, 6), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU ging ja ganz schnell danke auch)
		[01;31m(SU[00m
			[01;31m(DM[00m
				[01;31m(PX[00m
					(KON und)
					(PX bis dann)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(NX tschus)))
Step:Unary
{'subtrees': ['KON', 'PX'], 'family': ['PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'APPR', 'ADV'), 'right siblings': [], 'parent': 'DM', 'auto preterminal span': (6, 9), 'span': (6, 9), 'left siblings': [], 'label': 'PX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU ging ja ganz schnell danke auch)
		[01;31m(SU[00m
			[01;31m(DM[00m
				(KON und)
				(PX bis dann)[01;31m)[00m[01;31m)[00m
		(NX tschus)))
Step:Unary
{'subtrees': ['DM'], 'family': ['SU', 'SU', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'ADV', 'ADV', 'ADJD', 'PTKANT', 'ADV', 'KON', 'APPR', 'ADV', 'ITJ'), 'right siblings': ['NX'], 'parent': 'TURN', 'auto preterminal span': (0, 10), 'span': (6, 9), 'left siblings': ['SU'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU ging ja ganz schnell danke auch)
		[01;31m(DM[00m
			(KON und)
			(PX bis dann)[01;31m)[00m
		(NX tschus)))
Step:PP Attachment
{'subtrees': ['KON', 'PX'], 'family': ['SU', 'DM', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'ADV', 'ADV', 'ADJD', 'PTKANT', 'ADV', 'KON', 'APPR', 'ADV', 'ITJ'), 'right siblings': ['NX'], 'parent': 'TURN', 'auto preterminal span': (0, 10), 'span': (6, 9), 'left siblings': ['SU'], 'label': 'DM', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP ging ja ganz schnell danke auch und bis dann tschus)

Sentence 475:
11 Initial errors
0 on fringe, 8 iterations
2 Error:Different label
2 Error:NP Attachment
2 Error:Modifier Attachment
1 Error:Single Word Phrase
1 Error:Single Word Phrase
1 Error:Unary
1 Error:NP Internal Structure
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM hallo)
			[01;31m(DM[00m
				[01;31m(NX[00m
					(NE peter)[01;31m)[00m[01;31m)[00m
			(ADJX gut das wir uns treffen))
		[01;36m(SIMPX[00m [01;31m(SU[00m
			[01;36m(SIMPX[00m
				[01;31m(SIMPX[00m
					(VF es)
					(LK geht)
					[01;31m(MF[00m
						(PX
							(APPR um)
							(NX termin))[01;31m)[00m[01;31m)[00m
				(NX eine reise)[01;36m)[00m
			[01;36m(SIMPX[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(NX wir)
						(NX beide)[01;31m)[00m
					(ADVX zusammen)[01;31m)[00m
				(PX von munchen nach hannover)[01;36m)[00m[01;31m)[00m[01;36m)[00m
		[01;31m(SU[00m
			(NX
				(NX anderthalb tage)
				(PX in den nachsten drei monaten))[01;31m)[00m
		(SU wann hast du zeit)))
Step:Different label
{'family': ['SU', 'SIMPX', 'SU', 'SU'], 'auto preterminal span': (7, 20), 'span': (7, 20), 'subtrees': ['SIMPX', 'NX', 'NX', 'PX'], 'parent': 'TURN', 'over_word': False, 'auto preterminals': ('PPER', 'VVFIN', 'APPR', 'NN', 'ART', 'NN', 'PPER', 'PIS', 'ADV', 'APPR', 'NE', 'APPR', 'NE'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('SU', 'SIMPX')}
(TOP
	(TURN
		(SU
			(DM hallo)
			[01;31m(DM[00m
				[01;31m(NX[00m
					(NE peter)[01;31m)[00m[01;31m)[00m
			(ADJX gut das wir uns treffen))
		(SIMPX
			[01;36m(SIMPX[00m
				[01;31m(SIMPX[00m
					(VF es)
					(LK geht)
					[01;31m(MF[00m
						(PX
							(APPR um)
							(NX termin))[01;31m)[00m[01;31m)[00m
				(NX eine reise)[01;36m)[00m
			[01;36m(SIMPX[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(NX wir)
						(NX beide)[01;31m)[00m
					(ADVX zusammen)[01;31m)[00m
				(PX von munchen nach hannover)[01;36m)[00m)
		[01;31m(SU[00m
			(NX
				(NX anderthalb tage)
				(PX in den nachsten drei monaten))[01;31m)[00m
		(SU wann hast du zeit)))
Step:NP Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'NX'], 'mover info': [('NX', (11, 13))], 'old_family': ['SIMPX', 'NX', 'NX', 'PX'], 'start left siblings': ['SIMPX'], 'auto preterminals': ('PPER', 'VVFIN', 'APPR', 'NN', 'ART', 'NN', 'PPER', 'PIS', 'ADV', 'APPR', 'NE', 'APPR', 'NE'), 'start right siblings': ['NX', 'PX'], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (7, 20), 'movers': ['NX'], 'old_parent': 'SIMPX', 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU
			(DM hallo)
			[01;31m(DM[00m
				[01;31m(NX[00m
					(NE peter)[01;31m)[00m[01;31m)[00m
			(ADJX gut das wir uns treffen))
		(SIMPX
			(SIMPX
				(VF es)
				(LK geht)
				[01;31m(MF[00m
					(PX
						(APPR um)
						(NX termin))[01;31m)[00m
				(NX eine reise))
			[01;36m(SIMPX[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(NX wir)
						(NX beide)[01;31m)[00m
					(ADVX zusammen)[01;31m)[00m
				(PX von munchen nach hannover)[01;36m)[00m)
		[01;31m(SU[00m
			(NX
				(NX anderthalb tage)
				(PX in den nachsten drei monaten))[01;31m)[00m
		(SU wann hast du zeit)))
Step:Modifier Attachment
{'new_parent': 'SIMPX', 'new_family': ['SIMPX', 'NX', 'ADVX', 'PX'], 'mover info': [('ADVX', (15, 16))], 'old_family': ['NX', 'ADVX'], 'start left siblings': ['NX'], 'auto preterminals': ('PPER', 'VVFIN', 'APPR', 'NN', 'ART', 'NN', 'PPER', 'PIS', 'ADV', 'APPR', 'NE', 'APPR', 'NE'), 'start right siblings': [], 'end left siblings': ['SIMPX', 'NX'], 'auto preterminal span': (7, 20), 'adding node already present': False, 'movers': ['ADVX'], 'old_parent': 'NX', 'POS confusion': ('ADV', 'ADV'), 'added and moved': True, 'end right siblings': ['PX'], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'SIMPX'}
(TOP
	(TURN
		(SU
			(DM hallo)
			[01;31m(DM[00m
				[01;31m(NX[00m
					(NE peter)[01;31m)[00m[01;31m)[00m
			(ADJX gut das wir uns treffen))
		(SIMPX
			(SIMPX
				(VF es)
				(LK geht)
				[01;31m(MF[00m
					(PX
						(APPR um)
						(NX termin))[01;31m)[00m
				(NX eine reise))
			(SIMPX
				[01;31m(NX[00m
					(NX wir)
					(NX beide)[01;31m)[00m
				(ADVX zusammen)
				(PX von munchen nach hannover)))
		[01;31m(SU[00m
			(NX
				(NX anderthalb tage)
				(PX in den nachsten drei monaten))[01;31m)[00m
		(SU wann hast du zeit)))
Step:Single Word Phrase
{'subtrees': ['NE'], 'family': ['NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('NE',), 'right siblings': [], 'parent': 'DM', 'auto preterminal span': (1, 2), 'span': (1, 2), 'left siblings': [], 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM hallo)
			[01;31m(DM[00m
				(NE peter)[01;31m)[00m
			(ADJX gut das wir uns treffen))
		(SIMPX
			(SIMPX
				(VF es)
				(LK geht)
				[01;31m(MF[00m
					(PX
						(APPR um)
						(NX termin))[01;31m)[00m
				(NX eine reise))
			(SIMPX
				[01;31m(NX[00m
					(NX wir)
					(NX beide)[01;31m)[00m
				(ADVX zusammen)
				(PX von munchen nach hannover)))
		[01;31m(SU[00m
			(NX
				(NX anderthalb tage)
				(PX in den nachsten drei monaten))[01;31m)[00m
		(SU wann hast du zeit)))
Step:Single Word Phrase
{'subtrees': ['NE'], 'family': ['DM', 'DM', 'ADJX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ITJ', 'NE', 'ADJD', 'KOUS', 'PPER', 'PRF', 'VVFIN'), 'right siblings': ['ADJX'], 'parent': 'SU', 'auto preterminal span': (0, 7), 'span': (1, 2), 'left siblings': ['DM'], 'label': 'DM', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(SU hallo peter gut das wir uns treffen)
		(SIMPX
			(SIMPX
				(VF es)
				(LK geht)
				[01;31m(MF[00m
					(PX
						(APPR um)
						(NX termin))[01;31m)[00m
				(NX eine reise))
			(SIMPX
				[01;31m(NX[00m
					(NX wir)
					(NX beide)[01;31m)[00m
				(ADVX zusammen)
				(PX von munchen nach hannover)))
		[01;31m(SU[00m
			(NX
				(NX anderthalb tage)
				(PX in den nachsten drei monaten))[01;31m)[00m
		(SU wann hast du zeit)))
Step:Unary
{'subtrees': ['PX'], 'family': ['VF', 'LK', 'MF', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'APPR', 'NN', 'ART', 'NN'), 'right siblings': ['NX'], 'parent': 'SIMPX', 'auto preterminal span': (7, 13), 'span': (9, 11), 'left siblings': ['VF', 'LK'], 'label': 'MF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU hallo peter gut das wir uns treffen)
		(SIMPX
			(SIMPX es geht um termin eine reise)
			(SIMPX
				[01;31m(NX[00m
					(NX wir)
					(NX beide)[01;31m)[00m
				(ADVX zusammen)
				(PX von munchen nach hannover)))
		[01;31m(SU[00m
			(NX
				(NX anderthalb tage)
				(PX in den nachsten drei monaten))[01;31m)[00m
		(SU wann hast du zeit)))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['NX', 'ADVX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'PIS', 'ADV', 'APPR', 'NE', 'APPR', 'NE'), 'right siblings': ['ADVX', 'PX'], 'parent': 'SIMPX', 'auto preterminal span': (13, 20), 'span': (13, 15), 'left siblings': [], 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'remove'}
(TOP
	(TURN
		(SU hallo peter gut das wir uns treffen)
		(SIMPX es geht um termin eine reise wir beide zusammen von munchen nach hannover)
		[01;31m(SU[00m
			(NX
				(NX anderthalb tage)
				(PX in den nachsten drei monaten))[01;31m)[00m
		(SU wann hast du zeit)))
Step:Unary
{'subtrees': ['NX'], 'family': ['SU', 'SIMPX', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'NE', 'ADJD', 'KOUS', 'PPER', 'PRF', 'VVFIN', 'PPER', 'VVFIN', 'APPR', 'NN', 'ART', 'NN', 'PPER', 'PIS', 'ADV', 'APPR', 'NE', 'APPR', 'NE', 'CARD', 'NN', 'APPR', 'ART', 'ADJA', 'CARD', 'NN', 'PWAV', 'VAFIN', 'PPER', 'NN'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 31), 'span': (20, 27), 'left siblings': ['SU', 'SIMPX'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP hallo peter gut das wir uns treffen es geht um termin eine reise wir beide zusammen von munchen nach hannover anderthalb tage in den nachsten drei monaten wann hast du zeit)

Sentence 476:
5 Initial errors
0 on fringe, 3 iterations
2 Error:Single Word Phrase
2 Error:UNSET move
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SU[00m
	(TOP
		(TURN
			[01;31m(SU[00m
				(DM moment)
				[01;36m(DM[00m [01;31m(VXFIN[00m
					(VVIMP warte)[01;31m)[00m[01;36m)[00m[01;31m)[00m
			[01;31m(SU[00m
				(SIMPX
					(VF das)
					(LK war)
					(MF der neunzehnte juli))[01;31m)[00m))[01;36m)[00m
Step:Single Word Phrase
{'family': ['DM', 'DM'], 'auto preterminal span': (1, 2), 'span': (1, 2), 'subtrees': ['VVIMP'], 'parent': 'SU', 'over_word': True, 'auto preterminals': ('VVIMP',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VXFIN', 'DM')}
[01;36m(SU[00m
	(TOP
		(TURN
			[01;31m(SU[00m
				(DM moment)
				(DM warte)[01;31m)[00m
			[01;31m(SU[00m
				(SIMPX
					(VF das)
					(LK war)
					(MF der neunzehnte juli))[01;31m)[00m))[01;36m)[00m
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SU', 'SIMPX'], 'mover info': [('SU', (0, 2))], 'old_family': ['SU', 'SU'], 'start left siblings': [], 'auto preterminals': ('NN', 'VVIMP', 'PDS', 'VAFIN', 'ART', 'ADJA', 'NN'), 'start right siblings': ['SU'], 'end left siblings': [], 'auto preterminal span': (0, 7), 'movers': ['SU'], 'old_parent': 'TURN', 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			[01;31m(SU[00m
				(DM moment)
				(DM warte)[01;31m)[00m
			(SIMPX das war der neunzehnte juli))))
Step:UNSET remove
{'subtrees': ['DM', 'DM'], 'family': ['SU', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'VVIMP', 'PDS', 'VAFIN', 'ART', 'ADJA', 'NN'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 7), 'span': (0, 2), 'left siblings': [], 'label': 'SU', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP moment warte das war der neunzehnte juli)

Sentence 477:
3 Initial errors
0 on fringe, 3 iterations
1 Error:Unary
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(PX
				(APPR bis)
				(NX funfzehnter august))[01;31m)[00m
		[01;31m(SU[00m
			(DM
				(ITJ aha))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF mein urlaub)
				(VXFIN ist)
				(FKOORD fangt am neunten august an und geht bis zum einunddreisigsten august))[01;31m)[00m))
Step:Unary
{'subtrees': ['PX'], 'family': ['SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ADJA', 'NN', 'ITJ', 'PPOSAT', 'NN', 'VAFIN', 'VVFIN', 'APPRART', 'ADJA', 'NN', 'PTKVZ', 'KON', 'VVFIN', 'APPR', 'APPRART', 'ADJA', 'NN'), 'right siblings': ['SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 18), 'span': (0, 3), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(PX bis funfzehnter august)
		[01;31m(SU[00m
			(DM
				(ITJ aha))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF mein urlaub)
				(VXFIN ist)
				(FKOORD fangt am neunten august an und geht bis zum einunddreisigsten august))[01;31m)[00m))
Step:Unary
{'subtrees': ['DM'], 'family': ['PX', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ADJA', 'NN', 'ITJ', 'PPOSAT', 'NN', 'VAFIN', 'VVFIN', 'APPRART', 'ADJA', 'NN', 'PTKVZ', 'KON', 'VVFIN', 'APPR', 'APPRART', 'ADJA', 'NN'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 18), 'span': (3, 4), 'left siblings': ['PX'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(PX bis funfzehnter august)
		(DM aha)
		[01;31m(SU[00m
			(SIMPX
				(VF mein urlaub)
				(VXFIN ist)
				(FKOORD fangt am neunten august an und geht bis zum einunddreisigsten august))[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['PX', 'DM', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ADJA', 'NN', 'ITJ', 'PPOSAT', 'NN', 'VAFIN', 'VVFIN', 'APPRART', 'ADJA', 'NN', 'PTKVZ', 'KON', 'VVFIN', 'APPR', 'APPRART', 'ADJA', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 18), 'span': (4, 18), 'left siblings': ['PX', 'DM'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP bis funfzehnter august aha mein urlaub ist fangt am neunten august an und geht bis zum einunddreisigsten august)

Sentence 478:
7 Initial errors
0 on fringe, 5 iterations
2 Error:UNSET move
2 Error:PP Attachment
1 Error:Unary
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;36m(SU[00m
			[01;31m(SU[00m
				(DM
					(PTKANT ja))[01;31m)[00m
			[01;31m(SU[00m
				[01;31m(SIMPX[00m
					(VF am sechsten juli)
					(LK habe)
					(MF ich eine dienstbesprechung)[01;31m)[00m[01;31m)[00m[01;36m)[00m
		[01;31m(SU[00m
			[01;36m(NF[00m
				(PX
					(APPRART am)
					(NX siebten))[01;36m)[00m
			[01;36m(SU[00m
				(DM ah)
				(SIMPX da hatte ich nur abends kino)
				(SIMPX aber am neunter zehnter juli hattest du gesagt)[01;36m)[00m[01;31m)[00m))
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SU', 'SIMPX'], 'mover info': [('SU', (0, 1))], 'old_family': ['SU', 'SU', 'SU'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'APPRART', 'ADJA', 'NN', 'VAFIN', 'PPER', 'ART', 'NN', 'APPRART', 'NN', 'ITJ', 'ADV', 'VAFIN', 'PPER', 'ADV', 'ADV', 'NN', 'KON', 'APPRART', 'ADJA', 'ADJA', 'NN', 'VAFIN', 'PPER', 'VVPP'), 'start right siblings': ['SU', 'SU'], 'end left siblings': [], 'auto preterminal span': (0, 25), 'movers': ['SU'], 'old_parent': 'TURN', 'POS confusion': ('PTKANT', 'PTKANT'), 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			[01;31m(SU[00m
				(DM
					(PTKANT ja))[01;31m)[00m
			[01;31m(SIMPX[00m
				(VF am sechsten juli)
				(LK habe)
				(MF ich eine dienstbesprechung)[01;31m)[00m)
		[01;31m(SU[00m
			[01;36m(NF[00m
				(PX
					(APPRART am)
					(NX siebten))[01;36m)[00m
			[01;36m(SU[00m
				(DM ah)
				(SIMPX da hatte ich nur abends kino)
				(SIMPX aber am neunter zehnter juli hattest du gesagt)[01;36m)[00m[01;31m)[00m))
Step:PP Attachment
{'new_parent': 'TURN', 'new_family': ['SU', 'PX', 'SU'], 'mover info': [('PX', (8, 10))], 'old_family': ['PX', 'DM', 'SIMPX', 'SIMPX'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'APPRART', 'ADJA', 'NN', 'VAFIN', 'PPER', 'ART', 'NN', 'APPRART', 'NN', 'ITJ', 'ADV', 'VAFIN', 'PPER', 'ADV', 'ADV', 'NN', 'KON', 'APPRART', 'ADJA', 'ADJA', 'NN', 'VAFIN', 'PPER', 'VVPP'), 'start right siblings': ['DM', 'SIMPX', 'SIMPX'], 'end left siblings': ['SU'], 'auto preterminal span': (0, 25), 'movers': ['PX'], 'old_parent': 'SU', 'end right siblings': ['SU'], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU
			[01;31m(SU[00m
				(DM
					(PTKANT ja))[01;31m)[00m
			[01;31m(SIMPX[00m
				(VF am sechsten juli)
				(LK habe)
				(MF ich eine dienstbesprechung)[01;31m)[00m)
		[01;36m(NF[00m
			(PX
				(APPRART am)
				(NX siebten))[01;36m)[00m
		(SU ah da hatte ich nur abends kino aber am neunter zehnter juli hattest du gesagt)))
Step:Unary
{'subtrees': ['PX'], 'family': ['SU', 'NF', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'NN'), 'right siblings': [(SU (DM (ITJ ah)) (SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VAFIN hatte))) (MF (NX (PPER ich)) (ADVX (ADVX (ADV nur)) (ADV abends)) (NX (NN kino)))) (SIMPX (KOORD (KON aber)) (VF (PX (APPRART am) (NX (ADJX (ADJX (ADJA neunter)) (ADJX (ADJA zehnter))) (NN juli)))) (LK (VXFIN (VAFIN hattest))) (MF (NX (PPER du))) (VC (VXINF (VVPP gesagt)))))], 'left siblings': [(SU (SU (DM (PTKANT ja))) (SIMPX (VF (PX (APPRART am) (NX (ADJX (ADJA sechsten)) (NN juli)))) (LK (VXFIN (VAFIN habe))) (MF (NX (PPER ich)) (NX (ART eine) (NN dienstbesprechung)))))], 'auto preterminal span': (8, 10), 'span': (8, 10), 'parent': 'TURN', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU
			[01;31m(SU[00m
				(DM
					(PTKANT ja))[01;31m)[00m
			[01;31m(SIMPX[00m
				(VF am sechsten juli)
				(LK habe)
				(MF ich eine dienstbesprechung)[01;31m)[00m)
		(NF am siebten)
		(SU ah da hatte ich nur abends kino aber am neunter zehnter juli hattest du gesagt)))
Step:Unary
{'subtrees': ['DM'], 'family': ['SU', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'APPRART', 'ADJA', 'NN', 'VAFIN', 'PPER', 'ART', 'NN'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 8), 'span': (0, 1), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM ja)
			[01;31m(SIMPX[00m
				(VF am sechsten juli)
				(LK habe)
				(MF ich eine dienstbesprechung)[01;31m)[00m)
		(NF am siebten)
		(SU ah da hatte ich nur abends kino aber am neunter zehnter juli hattest du gesagt)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'APPRART', 'ADJA', 'NN', 'VAFIN', 'PPER', 'ART', 'NN'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (0, 8), 'span': (1, 8), 'left siblings': ['DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ja am sechsten juli habe ich eine dienstbesprechung am siebten ah da hatte ich nur abends kino aber am neunter zehnter juli hattest du gesagt)

Sentence 479:
4 Initial errors
0 on fringe, 2 iterations
3 Error:UNSET move
1 Error:Clause Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM okay)
			(SIMPX dann haben wir termin)[01;31m)[00m
		[01;36m(SIMPX[00m
			[01;36m(SU[00m
				[01;31m(SU[00m
					(SIMPX
						(VF das)
						(LK ist)
						(MF prima))[01;31m)[00m
				(SU fahren wir zusammen dahin)[01;36m)[00m[01;36m)[00m))
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SIMPX', 'SU'], 'mover info': [('SU', (8, 12))], 'old_family': ['SU', 'SU', 'SU'], 'start left siblings': ['SU', 'SU'], 'auto preterminals': ('ITJ', 'ADV', 'VAFIN', 'PPER', 'NN', 'PDS', 'VAFIN', 'ADJD', 'VVFIN', 'PPER', 'ADV', 'PROP'), 'start right siblings': [], 'end left siblings': ['SIMPX'], 'auto preterminal span': (0, 12), 'adding node already present': False, 'movers': ['SU'], 'old_parent': 'TURN', 'added and moved': True, 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'SIMPX'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM okay)
			(SIMPX dann haben wir termin)[01;31m)[00m
		(SIMPX das ist prima fahren wir zusammen dahin)))
Step:Clause Attachment
{'subtrees': ['DM', 'SIMPX'], 'family': ['SU', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'VAFIN', 'PPER', 'NN', 'PDS', 'VAFIN', 'ADJD', 'VVFIN', 'PPER', 'ADV', 'PROP'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 12), 'span': (0, 5), 'left siblings': [], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP okay dann haben wir termin das ist prima fahren wir zusammen dahin)

Sentence 480:
9 Initial errors
0 on fringe, 7 iterations
3 Error:Clause Attachment
1 Error:Unary
1 Error:Single Word Phrase
1 Error:Single Word Phrase
1 Error:Unary
1 Error:Clause Attachment
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM okay)
			(SIMPX dann fahren wir zusammen dahin)
			[01;36m(SIMPX[00m
				[01;31m(SIMPX[00m
					(KOORD und)
					(DM also)
					(VF ich)
					(LK meine)
					[01;33m(SIMPX (NF[00m (NF wir haben jetzt die)[01;31m)[00m
				(SIMPX
					(VF wir)
					(LK brauchen)
					[01;31m(MF[00m
						(NX anderthalb tage)
						(PX
							(APPR fur)
							(NX
								[01;36m(NX[00m
									(ART das)[01;36m)[00m
								[01;36m(VXINF[00m
									[01;36m(VC[00m
										(NN treffen)[01;36m)[00m[01;36m)[00m))[01;31m)[00m)[01;36m)[00m[01;31m)[00m [01;33mNF) SIMPX)[00m
		(SU wir haben zwei tage zeit also konnten wir mit dem zug hinfahren zum beispiel)))
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['KOORD', 'DM', 'VF', 'LK', 'NF', 'SIMPX'], 'mover info': [('SIMPX', (14, 21))], 'old_family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'start left siblings': ['DM', 'SIMPX', 'SIMPX'], 'auto preterminals': ('ITJ', 'ADV', 'VVFIN', 'PPER', 'ADV', 'PROP', 'KON', 'ADV', 'PPER', 'VVFIN', 'PPER', 'VAFIN', 'ADV', 'PDS', 'PPER', 'VVFIN', 'CARD', 'NN', 'APPR', 'ART', 'NN'), 'start right siblings': [], 'end left siblings': ['KOORD', 'DM', 'VF', 'LK', 'NF'], 'auto preterminal span': (0, 21), 'adding node already present': False, 'movers': ['SIMPX'], 'old_parent': 'SU', 'added and moved': True, 'end right siblings': [], 'classified_type': 'Clause Attachment', 'type': 'move', 'added label': 'VXINF'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM okay)
			(SIMPX dann fahren wir zusammen dahin)
			(SIMPX
				(KOORD und)
				(DM also)
				(VF ich)
				(LK meine)
				[01;36m(NF[00m
					(SIMPX
						(NF wir haben jetzt die)
						(SIMPX
							(VF wir)
							(LK brauchen)
							[01;31m(MF[00m
								(NX anderthalb tage)
								(PX
									(APPR fur)
									(NX
										[01;36m(NX[00m
											(ART das)[01;36m)[00m
										[01;36m(VXINF[00m
											[01;36m(VC[00m
												(NN treffen)[01;36m)[00m[01;36m)[00m))[01;31m)[00m))[01;36m)[00m)[01;31m)[00m
		(SU wir haben zwei tage zeit also konnten wir mit dem zug hinfahren zum beispiel)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['KOORD', 'DM', 'VF', 'LK', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'ADV', 'PDS', 'PPER', 'VVFIN', 'CARD', 'NN', 'APPR', 'ART', 'NN'), 'right siblings': [], 'left siblings': [(KOORD (KON und)), (DM (ADVX (ADV also))), (VF (NX (PPER ich))), (LK (VXFIN (VVFIN meine)))], 'auto preterminal span': (10, 21), 'span': (10, 21), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM okay)
			(SIMPX dann fahren wir zusammen dahin)
			(SIMPX
				(KOORD und)
				(DM also)
				(VF ich)
				(LK meine)
				(NF
					(SIMPX
						(NF wir haben jetzt die)
						(SIMPX
							(VF wir)
							(LK brauchen)
							[01;31m(MF[00m
								(NX anderthalb tage)
								(PX
									(APPR fur)
									(NX
										[01;36m(NX[00m
											(ART das)[01;36m)[00m
										[01;36m(VXINF[00m
											[01;36m(VC[00m
												(NN treffen)[01;36m)[00m[01;36m)[00m))[01;31m)[00m))))[01;31m)[00m
		(SU wir haben zwei tage zeit also konnten wir mit dem zug hinfahren zum beispiel)))
Step:Single Word Phrase
{'subtrees': ['ART'], 'family': ['NX', 'NN'], 'over_word': True, 'over words': True, 'auto preterminals': ('ART',), 'right siblings': [(NN treffen)], 'left siblings': [], 'auto preterminal span': (19, 20), 'span': (19, 20), 'parent': 'NX', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM okay)
			(SIMPX dann fahren wir zusammen dahin)
			(SIMPX
				(KOORD und)
				(DM also)
				(VF ich)
				(LK meine)
				(NF
					(SIMPX
						(NF wir haben jetzt die)
						(SIMPX
							(VF wir)
							(LK brauchen)
							[01;31m(MF[00m
								(NX anderthalb tage)
								(PX
									(APPR fur)
									(NX
										(NX das)
										[01;36m(VXINF[00m
											[01;36m(VC[00m
												(NN treffen)[01;36m)[00m[01;36m)[00m))[01;31m)[00m))))[01;31m)[00m
		(SU wir haben zwei tage zeit also konnten wir mit dem zug hinfahren zum beispiel)))
Step:Single Word Phrase
{'subtrees': ['NN'], 'family': ['NX', 'VC'], 'over_word': True, 'over words': True, 'auto preterminals': ('NN',), 'right siblings': [], 'left siblings': [(NX (ART das))], 'auto preterminal span': (20, 21), 'span': (20, 21), 'parent': 'NX', 'label': 'VC', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM okay)
			(SIMPX dann fahren wir zusammen dahin)
			(SIMPX
				(KOORD und)
				(DM also)
				(VF ich)
				(LK meine)
				(NF
					(SIMPX
						(NF wir haben jetzt die)
						(SIMPX
							(VF wir)
							(LK brauchen)
							[01;31m(MF[00m
								(NX anderthalb tage)
								(PX
									(APPR fur)
									(NX
										(NX das)
										[01;36m(VXINF[00m
											(VC
												(NN treffen))[01;36m)[00m))[01;31m)[00m))))[01;31m)[00m
		(SU wir haben zwei tage zeit also konnten wir mit dem zug hinfahren zum beispiel)))
Step:Unary
{'subtrees': ['VC'], 'family': ['NX', 'VXINF'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN',), 'right siblings': [], 'left siblings': [(NX (ART das))], 'auto preterminal span': (20, 21), 'span': (20, 21), 'parent': 'NX', 'label': 'VXINF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM okay)
			(SIMPX dann fahren wir zusammen dahin)
			(SIMPX
				(KOORD und)
				(DM also)
				(VF ich)
				(LK meine)
				(NF
					(SIMPX
						(NF wir haben jetzt die)
						(SIMPX
							(VF wir)
							(LK brauchen)
							[01;31m(MF[00m
								(NX anderthalb tage)
								(PX fur das treffen)[01;31m)[00m))))[01;31m)[00m
		(SU wir haben zwei tage zeit also konnten wir mit dem zug hinfahren zum beispiel)))
Step:Clause Attachment
{'subtrees': ['DM', 'SIMPX', 'SIMPX'], 'family': ['SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'VVFIN', 'PPER', 'ADV', 'PROP', 'KON', 'ADV', 'PPER', 'VVFIN', 'PPER', 'VAFIN', 'ADV', 'PDS', 'PPER', 'VVFIN', 'CARD', 'NN', 'APPR', 'ART', 'NN', 'PPER', 'VAFIN', 'CARD', 'NN', 'NN', 'ADV', 'VMFIN', 'PPER', 'APPR', 'ART', 'NN', 'VVINF', 'APPRART', 'NN'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 35), 'span': (0, 21), 'left siblings': [], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(SIMPX dann fahren wir zusammen dahin)
		(SIMPX
			(KOORD und)
			(DM also)
			(VF ich)
			(LK meine)
			(NF
				(SIMPX
					(NF wir haben jetzt die)
					(SIMPX
						(VF wir)
						(LK brauchen)
						[01;31m(MF[00m
							(NX anderthalb tage)
							(PX fur das treffen)[01;31m)[00m))))
		(SU wir haben zwei tage zeit also konnten wir mit dem zug hinfahren zum beispiel)))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'CARD', 'NN', 'APPR', 'ART', 'NN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (14, 21), 'span': (16, 21), 'left siblings': ['VF', 'LK'], 'label': 'MF', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP okay dann fahren wir zusammen dahin und also ich meine wir haben jetzt die wir brauchen anderthalb tage fur das treffen wir haben zwei tage zeit also konnten wir mit dem zug hinfahren zum beispiel)

Sentence 481:
21 Initial errors
0 on fringe, 13 iterations
4 Error:UNSET move
3 Error:UNSET move
2 Error:Single Word Phrase
2 Error:Different label
2 Error:Different label
1 Error:Clause Attachment
1 Error:Unary
1 Error:Modifier Attachment
1 Error:Single Word Phrase
1 Error:Clause Attachment
1 Error:Unary
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU genau)
		[01;31m(SU[00m
			(DM also)
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(VF ich)
				[01;36m(ADVX[00m [01;31m(LK[00m
					[01;31m(VXFIN[00m
						(VVFIN kucke)[01;31m)[00m[01;31m)[00m[01;36m)[00m
				[01;31m(MF[00m
					(ADVX kurz)
					(ADVX mal)[01;31m)[00m
				[01;31m(VC[00m
					(PTKVZ nach)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;36m(NF[00m [01;31m(LV[00m
					(PX
						(APPR bei)
						(NX den zugverbindungen die ich hier habe))[01;31m)[00m [01;33mSIMPX)[00m[01;36m)[00m
				[01;36m(SIMPX[00m
					(VF das)
					(LK sind)
					[01;36m(NX[00m
						[01;36m(MF[00m
							[01;31m(MF[00m
								(NX
									(NX munchen)
									(NX hannover))[01;31m)[00m
							[01;31m(NF[00m
								(PX
									(APPR mit)
									(NX dem ice))[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;36m)[00m[01;31m)[00m
			(SIMPX
				(VF das)
				(LK sind)
				(MF
					[01;31m(NX[00m
						(NX stundliche verbindungen)
						(PX
							(APPR ab)
							[01;36m(ADVX[00m [01;31m(PX[00m
								(ADVX morgens)
								(NX vier uhr dreiundvierzig)[01;31m)[00m[01;36m)[00m)[01;31m)[00m))[01;31m)[00m
		(SU
			(DM also)
			[01;31m(SIMPX[00m
				(VF ich)
				(LK mein)
				(NF das ist mir zu fruh)[01;31m)[00m)))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'VC', 'LV'], 'mover info': [('LV', (7, 14))], 'old_family': ['LV', 'VF', 'LK', 'MF', 'NF'], 'start left siblings': [], 'auto preterminals': ('ITJ', 'ADV', 'PPER', 'VVFIN', 'ADV', 'ADV', 'PTKVZ', 'APPR', 'ART', 'NN', 'PRELS', 'PPER', 'ADV', 'VAFIN', 'PDS', 'VAFIN', 'NE', 'NE', 'APPR', 'ART', 'NE', 'PDS', 'VAFIN', 'ADJA', 'NN', 'APPR', 'ADV', 'CARD', 'NN', 'CARD', 'ADV', 'PPER', 'VVFIN', 'PDS', 'VAFIN', 'PPER', 'PTKA', 'ADJD'), 'start right siblings': ['VF', 'LK', 'MF', 'NF'], 'end left siblings': ['VF', 'LK', 'MF', 'VC'], 'auto preterminal span': (0, 38), 'movers': ['LV'], 'old_parent': 'SIMPX', 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU genau)
		[01;31m(SU[00m
			(DM also)
			(SIMPX
				(VF ich)
				[01;36m(ADVX[00m [01;31m(LK[00m
					[01;31m(VXFIN[00m
						(VVFIN kucke)[01;31m)[00m[01;31m)[00m[01;36m)[00m
				[01;31m(MF[00m
					(ADVX kurz)
					(ADVX mal)[01;31m)[00m
				[01;31m(VC[00m
					(PTKVZ nach)[01;31m)[00m
				[01;36m(NF[00m [01;31m(LV[00m
					(PX
						(APPR bei)
						(NX den zugverbindungen die ich hier habe))[01;31m)[00m[01;36m)[00m)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK sind)
				[01;36m(NX[00m
					[01;36m(MF[00m
						[01;31m(MF[00m
							(NX
								(NX munchen)
								(NX hannover))[01;31m)[00m
						[01;31m(NF[00m
							(PX
								(APPR mit)
								(NX dem ice))[01;31m)[00m[01;36m)[00m[01;36m)[00m)
			(SIMPX
				(VF das)
				(LK sind)
				(MF
					[01;31m(NX[00m
						(NX stundliche verbindungen)
						(PX
							(APPR ab)
							[01;36m(ADVX[00m [01;31m(PX[00m
								(ADVX morgens)
								(NX vier uhr dreiundvierzig)[01;31m)[00m[01;36m)[00m)[01;31m)[00m))[01;31m)[00m
		(SU
			(DM also)
			[01;31m(SIMPX[00m
				(VF ich)
				(LK mein)
				(NF das ist mir zu fruh)[01;31m)[00m)))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['NX', 'NF'], 'mover info': [('NF', (18, 21))], 'old_family': ['VF', 'LK', 'MF', 'NF'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('PDS', 'VAFIN', 'NE', 'NE', 'APPR', 'ART', 'NE'), 'start right siblings': [], 'end left siblings': ['NX'], 'auto preterminal span': (14, 21), 'adding node already present': False, 'movers': ['NF'], 'old_parent': 'SIMPX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'ADVX'}
(TOP
	(TURN
		(SU genau)
		[01;31m(SU[00m
			(DM also)
			(SIMPX
				(VF ich)
				[01;36m(ADVX[00m [01;31m(LK[00m
					[01;31m(VXFIN[00m
						(VVFIN kucke)[01;31m)[00m[01;31m)[00m[01;36m)[00m
				[01;31m(MF[00m
					(ADVX kurz)
					(ADVX mal)[01;31m)[00m
				[01;31m(VC[00m
					(PTKVZ nach)[01;31m)[00m
				[01;36m(NF[00m [01;31m(LV[00m
					(PX
						(APPR bei)
						(NX den zugverbindungen die ich hier habe))[01;31m)[00m[01;36m)[00m)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK sind)
				(NX
					(MF
						(NX munchen hannover)
						[01;31m(NF[00m
							(PX
								(APPR mit)
								(NX dem ice))[01;31m)[00m)))
			(SIMPX
				(VF das)
				(LK sind)
				(MF
					[01;31m(NX[00m
						(NX stundliche verbindungen)
						(PX
							(APPR ab)
							[01;36m(ADVX[00m [01;31m(PX[00m
								(ADVX morgens)
								(NX vier uhr dreiundvierzig)[01;31m)[00m[01;36m)[00m)[01;31m)[00m))[01;31m)[00m
		(SU
			(DM also)
			[01;31m(SIMPX[00m
				(VF ich)
				(LK mein)
				(NF das ist mir zu fruh)[01;31m)[00m)))
Step:Single Word Phrase
{'family': ['ADVX'], 'auto preterminal span': (3, 4), 'span': (3, 4), 'subtrees': ['VVFIN'], 'parent': 'LK', 'over_word': True, 'auto preterminals': ('VVFIN',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VXFIN', 'ADVX')}
(TOP
	(TURN
		(SU genau)
		[01;31m(SU[00m
			(DM also)
			(SIMPX
				(VF ich)
				[01;31m(LK[00m
					(ADVX
						(VVFIN kucke))[01;31m)[00m
				[01;31m(MF[00m
					(ADVX kurz)
					(ADVX mal)[01;31m)[00m
				[01;31m(VC[00m
					(PTKVZ nach)[01;31m)[00m
				[01;36m(NF[00m [01;31m(LV[00m
					(PX
						(APPR bei)
						(NX den zugverbindungen die ich hier habe))[01;31m)[00m[01;36m)[00m)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK sind)
				(NX
					(MF
						(NX munchen hannover)
						[01;31m(NF[00m
							(PX
								(APPR mit)
								(NX dem ice))[01;31m)[00m)))
			(SIMPX
				(VF das)
				(LK sind)
				(MF
					[01;31m(NX[00m
						(NX stundliche verbindungen)
						(PX
							(APPR ab)
							[01;36m(ADVX[00m [01;31m(PX[00m
								(ADVX morgens)
								(NX vier uhr dreiundvierzig)[01;31m)[00m[01;36m)[00m)[01;31m)[00m))[01;31m)[00m
		(SU
			(DM also)
			[01;31m(SIMPX[00m
				(VF ich)
				(LK mein)
				(NF das ist mir zu fruh)[01;31m)[00m)))
Step:Different label
{'family': ['VF', 'LK', 'MF', 'VC', 'NF'], 'auto preterminal span': (7, 14), 'span': (7, 14), 'subtrees': ['PX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('APPR', 'ART', 'NN', 'PRELS', 'PPER', 'ADV', 'VAFIN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('LV', 'NF')}
(TOP
	(TURN
		(SU genau)
		[01;31m(SU[00m
			(DM also)
			(SIMPX
				(VF ich)
				[01;31m(LK[00m
					(ADVX
						(VVFIN kucke))[01;31m)[00m
				[01;31m(MF[00m
					(ADVX kurz)
					(ADVX mal)[01;31m)[00m
				[01;31m(VC[00m
					(PTKVZ nach)[01;31m)[00m
				(NF bei den zugverbindungen die ich hier habe))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK sind)
				(NX
					(MF
						(NX munchen hannover)
						[01;31m(NF[00m
							(PX
								(APPR mit)
								(NX dem ice))[01;31m)[00m)))
			(SIMPX
				(VF das)
				(LK sind)
				(MF
					[01;31m(NX[00m
						(NX stundliche verbindungen)
						(PX
							(APPR ab)
							[01;36m(ADVX[00m [01;31m(PX[00m
								(ADVX morgens)
								(NX vier uhr dreiundvierzig)[01;31m)[00m[01;36m)[00m)[01;31m)[00m))[01;31m)[00m
		(SU
			(DM also)
			[01;31m(SIMPX[00m
				(VF ich)
				(LK mein)
				(NF das ist mir zu fruh)[01;31m)[00m)))
Step:Different label
{'family': ['APPR', 'ADVX'], 'auto preterminal span': (26, 30), 'span': (26, 30), 'subtrees': ['ADVX', 'NX'], 'parent': 'PX', 'over_word': False, 'auto preterminals': ('ADV', 'CARD', 'NN', 'CARD'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('PX', 'ADVX')}
(TOP
	(TURN
		(SU genau)
		[01;31m(SU[00m
			(DM also)
			(SIMPX
				(VF ich)
				[01;31m(LK[00m
					(ADVX
						(VVFIN kucke))[01;31m)[00m
				[01;31m(MF[00m
					(ADVX kurz)
					(ADVX mal)[01;31m)[00m
				[01;31m(VC[00m
					(PTKVZ nach)[01;31m)[00m
				(NF bei den zugverbindungen die ich hier habe))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK sind)
				(NX
					(MF
						(NX munchen hannover)
						[01;31m(NF[00m
							(PX
								(APPR mit)
								(NX dem ice))[01;31m)[00m)))
			(SIMPX
				(VF das)
				(LK sind)
				(MF
					[01;31m(NX[00m
						(NX stundliche verbindungen)
						(PX ab morgens vier uhr dreiundvierzig)[01;31m)[00m))[01;31m)[00m
		(SU
			(DM also)
			[01;31m(SIMPX[00m
				(VF ich)
				(LK mein)
				(NF das ist mir zu fruh)[01;31m)[00m)))
Step:Clause Attachment
{'subtrees': ['DM', 'SIMPX'], 'family': ['SU', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'PPER', 'VVFIN', 'ADV', 'ADV', 'PTKVZ', 'APPR', 'ART', 'NN', 'PRELS', 'PPER', 'ADV', 'VAFIN', 'PDS', 'VAFIN', 'NE', 'NE', 'APPR', 'ART', 'NE', 'PDS', 'VAFIN', 'ADJA', 'NN', 'APPR', 'ADV', 'CARD', 'NN', 'CARD', 'ADV', 'PPER', 'VVFIN', 'PDS', 'VAFIN', 'PPER', 'PTKA', 'ADJD'), 'right siblings': ['SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 38), 'span': (1, 14), 'left siblings': ['SU'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU genau)
		(DM also)
		(SIMPX
			(VF ich)
			[01;31m(LK[00m
				(ADVX
					(VVFIN kucke))[01;31m)[00m
			[01;31m(MF[00m
				(ADVX kurz)
				(ADVX mal)[01;31m)[00m
			[01;31m(VC[00m
				(PTKVZ nach)[01;31m)[00m
			(NF bei den zugverbindungen die ich hier habe))
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK sind)
				(NX
					(MF
						(NX munchen hannover)
						[01;31m(NF[00m
							(PX
								(APPR mit)
								(NX dem ice))[01;31m)[00m)))
			(SIMPX
				(VF das)
				(LK sind)
				(MF
					[01;31m(NX[00m
						(NX stundliche verbindungen)
						(PX ab morgens vier uhr dreiundvierzig)[01;31m)[00m))[01;31m)[00m
		(SU
			(DM also)
			[01;31m(SIMPX[00m
				(VF ich)
				(LK mein)
				(NF das ist mir zu fruh)[01;31m)[00m)))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['VF', 'LK', 'MF', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'ADV', 'PTKVZ', 'APPR', 'ART', 'NN', 'PRELS', 'PPER', 'ADV', 'VAFIN'), 'right siblings': ['MF', 'VC', 'NF'], 'parent': 'SIMPX', 'auto preterminal span': (2, 14), 'span': (3, 4), 'left siblings': ['VF'], 'label': 'LK', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU genau)
		(DM also)
		(SIMPX
			(VF ich)
			(ADVX kucke)
			[01;31m(MF[00m
				(ADVX kurz)
				(ADVX mal)[01;31m)[00m
			[01;31m(VC[00m
				(PTKVZ nach)[01;31m)[00m
			(NF bei den zugverbindungen die ich hier habe))
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK sind)
				(NX
					(MF
						(NX munchen hannover)
						[01;31m(NF[00m
							(PX
								(APPR mit)
								(NX dem ice))[01;31m)[00m)))
			(SIMPX
				(VF das)
				(LK sind)
				(MF
					[01;31m(NX[00m
						(NX stundliche verbindungen)
						(PX ab morgens vier uhr dreiundvierzig)[01;31m)[00m))[01;31m)[00m
		(SU
			(DM also)
			[01;31m(SIMPX[00m
				(VF ich)
				(LK mein)
				(NF das ist mir zu fruh)[01;31m)[00m)))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'ADVX'], 'family': ['VF', 'ADVX', 'MF', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'ADV', 'PTKVZ', 'APPR', 'ART', 'NN', 'PRELS', 'PPER', 'ADV', 'VAFIN'), 'right siblings': ['VC', 'NF'], 'parent': 'SIMPX', 'auto preterminal span': (2, 14), 'span': (4, 6), 'left siblings': ['VF', 'ADVX'], 'label': 'MF', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU genau)
		(DM also)
		(SIMPX
			(VF ich)
			(ADVX kucke)
			(ADVX kurz)
			(ADVX mal)
			[01;31m(VC[00m
				(PTKVZ nach)[01;31m)[00m
			(NF bei den zugverbindungen die ich hier habe))
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK sind)
				(NX
					(MF
						(NX munchen hannover)
						[01;31m(NF[00m
							(PX
								(APPR mit)
								(NX dem ice))[01;31m)[00m)))
			(SIMPX
				(VF das)
				(LK sind)
				(MF
					[01;31m(NX[00m
						(NX stundliche verbindungen)
						(PX ab morgens vier uhr dreiundvierzig)[01;31m)[00m))[01;31m)[00m
		(SU
			(DM also)
			[01;31m(SIMPX[00m
				(VF ich)
				(LK mein)
				(NF das ist mir zu fruh)[01;31m)[00m)))
Step:Single Word Phrase
{'subtrees': ['PTKVZ'], 'family': ['VF', 'ADVX', 'ADVX', 'ADVX', 'VC', 'NF'], 'over_word': True, 'over words': True, 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'ADV', 'PTKVZ', 'APPR', 'ART', 'NN', 'PRELS', 'PPER', 'ADV', 'VAFIN'), 'right siblings': ['NF'], 'parent': 'SIMPX', 'auto preterminal span': (2, 14), 'span': (6, 7), 'left siblings': ['VF', 'ADVX', 'ADVX', 'ADVX'], 'label': 'VC', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(SU genau)
		(DM also)
		(SIMPX ich kucke kurz mal nach bei den zugverbindungen die ich hier habe)
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK sind)
				(NX
					(MF
						(NX munchen hannover)
						[01;31m(NF[00m
							(PX
								(APPR mit)
								(NX dem ice))[01;31m)[00m)))
			(SIMPX
				(VF das)
				(LK sind)
				(MF
					[01;31m(NX[00m
						(NX stundliche verbindungen)
						(PX ab morgens vier uhr dreiundvierzig)[01;31m)[00m))[01;31m)[00m
		(SU
			(DM also)
			[01;31m(SIMPX[00m
				(VF ich)
				(LK mein)
				(NF das ist mir zu fruh)[01;31m)[00m)))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['SU', 'DM', 'SIMPX', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'PPER', 'VVFIN', 'ADV', 'ADV', 'PTKVZ', 'APPR', 'ART', 'NN', 'PRELS', 'PPER', 'ADV', 'VAFIN', 'PDS', 'VAFIN', 'NE', 'NE', 'APPR', 'ART', 'NE', 'PDS', 'VAFIN', 'ADJA', 'NN', 'APPR', 'ADV', 'CARD', 'NN', 'CARD', 'ADV', 'PPER', 'VVFIN', 'PDS', 'VAFIN', 'PPER', 'PTKA', 'ADJD'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 38), 'span': (14, 30), 'left siblings': ['SU', 'DM', 'SIMPX'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU genau)
		(DM also)
		(SIMPX ich kucke kurz mal nach bei den zugverbindungen die ich hier habe)
		(SIMPX
			(VF das)
			(LK sind)
			(NX
				(MF
					(NX munchen hannover)
					[01;31m(NF[00m
						(PX
							(APPR mit)
							(NX dem ice))[01;31m)[00m)))
		(SIMPX
			(VF das)
			(LK sind)
			(MF
				[01;31m(NX[00m
					(NX stundliche verbindungen)
					(PX ab morgens vier uhr dreiundvierzig)[01;31m)[00m))
		(SU
			(DM also)
			[01;31m(SIMPX[00m
				(VF ich)
				(LK mein)
				(NF das ist mir zu fruh)[01;31m)[00m)))
Step:Unary
{'subtrees': ['PX'], 'family': ['NX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('NE', 'NE', 'APPR', 'ART', 'NE'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (16, 21), 'span': (18, 21), 'left siblings': ['NX'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU genau)
		(DM also)
		(SIMPX ich kucke kurz mal nach bei den zugverbindungen die ich hier habe)
		(SIMPX das sind munchen hannover mit dem ice)
		(SIMPX
			(VF das)
			(LK sind)
			(MF
				[01;31m(NX[00m
					(NX stundliche verbindungen)
					(PX ab morgens vier uhr dreiundvierzig)[01;31m)[00m))
		(SU
			(DM also)
			[01;31m(SIMPX[00m
				(VF ich)
				(LK mein)
				(NF das ist mir zu fruh)[01;31m)[00m)))
Step:Unary
{'subtrees': ['NX', 'PX'], 'family': ['NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJA', 'NN', 'APPR', 'ADV', 'CARD', 'NN', 'CARD'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (23, 30), 'span': (23, 30), 'left siblings': [], 'label': 'NX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU genau)
		(DM also)
		(SIMPX ich kucke kurz mal nach bei den zugverbindungen die ich hier habe)
		(SIMPX das sind munchen hannover mit dem ice)
		(SIMPX das sind stundliche verbindungen ab morgens vier uhr dreiundvierzig)
		(SU
			(DM also)
			[01;31m(SIMPX[00m
				(VF ich)
				(LK mein)
				(NF das ist mir zu fruh)[01;31m)[00m)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'NF'], 'family': ['DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPER', 'VVFIN', 'PDS', 'VAFIN', 'PPER', 'PTKA', 'ADJD'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (30, 38), 'span': (31, 38), 'left siblings': ['DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP genau also ich kucke kurz mal nach bei den zugverbindungen die ich hier habe das sind munchen hannover mit dem ice das sind stundliche verbindungen ab morgens vier uhr dreiundvierzig also ich mein das ist mir zu fruh)

Sentence 482:
3 Initial errors
0 on fringe, 2 iterations
2 Error:UNSET move
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SU[00m
	(TOP
		(TURN
			[01;31m(SU[00m
				(SIMPX
					(VF das)
					(LK ist)
					(MF eine zivile zeit))[01;31m)[00m
			[01;31m(SU[00m
				(DM
					(ITJ genau))[01;31m)[00m))[01;36m)[00m
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SU', 'DM'], 'mover info': [('SU', (0, 5))], 'old_family': ['SU', 'SU'], 'start left siblings': [], 'auto preterminals': ('PDS', 'VAFIN', 'ART', 'ADJA', 'NN', 'ITJ'), 'start right siblings': ['SU'], 'end left siblings': [], 'auto preterminal span': (0, 6), 'movers': ['SU'], 'old_parent': 'TURN', 'end right siblings': ['DM'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			[01;31m(SU[00m
				(SIMPX
					(VF das)
					(LK ist)
					(MF eine zivile zeit))[01;31m)[00m
			(DM genau))))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SU', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VAFIN', 'ART', 'ADJA', 'NN', 'ITJ'), 'right siblings': ['DM'], 'parent': 'SU', 'auto preterminal span': (0, 6), 'span': (0, 5), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP das ist eine zivile zeit genau)

Sentence 483:
14 Initial errors
0 on fringe, 8 iterations
3 Error:UNSET move
2 Error:Different label
2 Error:Different label
2 Error:Clause Attachment
2 Error:Modifier Attachment
1 Error:Clause Attachment
1 Error:Clause Attachment
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU okay)
		[01;31m(SU[00m [01;33m(SIMPX[00m
			(SIMPX
				(VF den ice)
				(LK nehmen)
				(MF wir))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX wir wissen wann wir fahren) [01;33mSIMPX)[00m
			[01;31m(SIMPX[00m
				(VF wir)
				(LK wissen)
				(NF [01;33m(SIMPX (NF[00m
					(SIMPX
						(C wohin)
						(MF wir)
						[01;36m(LK[00m [01;31m(VC[00m
							(VXFIN
								(VVFIN fahren))[01;31m)[00m[01;36m)[00m))[01;31m)[00m
			[01;31m(SIMPX[00m
				[01;36m(MF[00m [01;31m(VF[00m
					(NX
						(PPER wir))[01;31m)[00m[01;36m)[00m
				(LK wissen)
				(NF wo wir schlafen)[01;31m)[00m [01;33mNF) SIMPX)[00m
			[01;36m(SU[00m
				(SIMPX
					(VF wir)
					(LK wissen)
					(MF
						(ADVX aber)
						[01;31m(ADVX[00m
							(ADVX noch)
							[01;36m(ADVX[00m
								(PTKNEG nicht)[01;36m)[00m[01;31m)[00m)
					(NF was wir abends machen))[01;36m)[00m[01;31m)[00m))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['NF', 'VF', 'LK', 'NF'], 'mover info': [('NF', (12, 15))], 'old_family': ['VF', 'LK', 'NF'], 'start left siblings': ['VF', 'LK'], 'auto preterminals': ('PPER', 'VVFIN', 'PWAV', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'PWAV', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'PWAV', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'PTKNEG', 'PWS', 'PPER', 'ADV', 'VVFIN'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (5, 29), 'adding node already present': False, 'movers': ['NF'], 'old_parent': 'SIMPX', 'added and moved': True, 'end right siblings': ['VF', 'LK', 'NF'], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'ADVX'}
(TOP
	(TURN
		(SU okay)
		[01;31m(SU[00m [01;33m(SIMPX[00m
			(SIMPX
				(VF den ice)
				(LK nehmen)
				(MF wir))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX wir wissen wann wir fahren) [01;33mSIMPX)[00m
			[01;31m(SIMPX[00m
				(VF wir)
				(LK wissen)[01;31m)[00m
			(NF
				(SIMPX
					(NF
						(SIMPX
							(C wohin)
							(MF wir)
							[01;36m(LK[00m [01;31m(VC[00m
								(VXFIN
									(VVFIN fahren))[01;31m)[00m[01;36m)[00m))
					[01;36m(MF[00m [01;31m(VF[00m
						(NX
							(PPER wir))[01;31m)[00m[01;36m)[00m
					(LK wissen)
					(NF wo wir schlafen)))
			[01;36m(SU[00m
				(SIMPX
					(VF wir)
					(LK wissen)
					(MF
						(ADVX aber)
						[01;31m(ADVX[00m
							(ADVX noch)
							[01;36m(ADVX[00m
								(PTKNEG nicht)[01;36m)[00m[01;31m)[00m)
					(NF was wir abends machen))[01;36m)[00m[01;31m)[00m))
Step:Different label
{'family': ['C', 'MF', 'LK'], 'auto preterminal span': (14, 15), 'span': (14, 15), 'subtrees': ['VXFIN'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('VVFIN',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('VC', 'LK')}
(TOP
	(TURN
		(SU okay)
		[01;31m(SU[00m [01;33m(SIMPX[00m
			(SIMPX
				(VF den ice)
				(LK nehmen)
				(MF wir))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX wir wissen wann wir fahren) [01;33mSIMPX)[00m
			[01;31m(SIMPX[00m
				(VF wir)
				(LK wissen)[01;31m)[00m
			(NF
				(SIMPX
					(NF wohin wir fahren)
					[01;36m(MF[00m [01;31m(VF[00m
						(NX
							(PPER wir))[01;31m)[00m[01;36m)[00m
					(LK wissen)
					(NF wo wir schlafen)))
			[01;36m(SU[00m
				(SIMPX
					(VF wir)
					(LK wissen)
					(MF
						(ADVX aber)
						[01;31m(ADVX[00m
							(ADVX noch)
							[01;36m(ADVX[00m
								(PTKNEG nicht)[01;36m)[00m[01;31m)[00m)
					(NF was wir abends machen))[01;36m)[00m[01;31m)[00m))
Step:Different label
{'family': ['NF', 'MF', 'LK', 'NF'], 'auto preterminal span': (15, 16), 'span': (15, 16), 'subtrees': ['NX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('PPER',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('VF', 'MF')}
(TOP
	(TURN
		(SU okay)
		[01;31m(SU[00m [01;33m(SIMPX[00m
			(SIMPX
				(VF den ice)
				(LK nehmen)
				(MF wir))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX wir wissen wann wir fahren) [01;33mSIMPX)[00m
			[01;31m(SIMPX[00m
				(VF wir)
				(LK wissen)[01;31m)[00m
			(NF wohin wir fahren wir wissen wo wir schlafen)
			[01;36m(SU[00m
				(SIMPX
					(VF wir)
					(LK wissen)
					(MF
						(ADVX aber)
						[01;31m(ADVX[00m
							(ADVX noch)
							[01;36m(ADVX[00m
								(PTKNEG nicht)[01;36m)[00m[01;31m)[00m)
					(NF was wir abends machen))[01;36m)[00m[01;31m)[00m))
Step:Clause Attachment
{'new_parent': 'SU', 'new_family': ['SIMPX', 'SIMPX', 'SIMPX', 'NF'], 'mover info': [('SIMPX', (5, 10)), ('SIMPX', (10, 12)), ('NF', (12, 20))], 'old_family': ['SIMPX', 'SIMPX', 'NF', 'SIMPX'], 'start left siblings': [], 'auto preterminals': ('ITJ', 'ART', 'NE', 'VVFIN', 'PPER', 'PPER', 'VVFIN', 'PWAV', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'PWAV', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'PWAV', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'PTKNEG', 'PWS', 'PPER', 'ADV', 'VVFIN'), 'start right siblings': ['SIMPX'], 'end left siblings': ['SIMPX'], 'auto preterminal span': (0, 29), 'movers': ['SIMPX', 'SIMPX', 'NF'], 'old_parent': 'SU', 'end right siblings': [], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU okay)
		[01;31m(SU[00m
			[01;36m(SIMPX[00m
				(SIMPX den ice nehmen wir)
				(SIMPX wir wissen wann wir fahren)[01;36m)[00m
			[01;31m(SIMPX[00m
				(VF wir)
				(LK wissen)[01;31m)[00m
			(NF wohin wir fahren wir wissen wo wir schlafen)[01;31m)[00m
		(SU
			(SIMPX
				(VF wir)
				(LK wissen)
				(MF
					(ADVX aber)
					[01;31m(ADVX[00m
						(ADVX noch)
						[01;36m(ADVX[00m
							(PTKNEG nicht)[01;36m)[00m[01;31m)[00m)
				(NF was wir abends machen)))))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['ADVX', 'ADVX', 'ADVX'], 'mover info': [('ADVX', (23, 24))], 'old_family': ['ADVX', 'PTKNEG'], 'start left siblings': [], 'auto preterminals': ('ADV', 'ADV', 'PTKNEG'), 'start right siblings': ['PTKNEG'], 'end left siblings': ['ADVX'], 'auto preterminal span': (22, 25), 'movers': ['ADVX'], 'old_parent': 'ADVX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['ADVX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU okay)
		[01;31m(SU[00m
			[01;36m(SIMPX[00m
				(SIMPX den ice nehmen wir)
				(SIMPX wir wissen wann wir fahren)[01;36m)[00m
			[01;31m(SIMPX[00m
				(VF wir)
				(LK wissen)[01;31m)[00m
			(NF wohin wir fahren wir wissen wo wir schlafen)[01;31m)[00m
		(SU wir wissen aber noch nicht was wir abends machen)))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['SIMPX', 'SIMPX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NE', 'VVFIN', 'PPER', 'PPER', 'VVFIN', 'PWAV', 'PPER', 'VVFIN'), 'right siblings': [(SIMPX (VF (NX (PPER wir))) (LK (VXFIN (VVFIN wissen)))), (NF (SIMPX (NF (SIMPX (C (PX (PWAV wohin))) (MF (NX (PPER wir))) (LK (VXFIN (VVFIN fahren))))) (MF (NX (PPER wir))) (LK (VXFIN (VVFIN wissen))) (NF (SIMPX (C (PX (PWAV wo))) (MF (NX (PPER wir))) (VC (VXFIN (VVFIN schlafen)))))))], 'left siblings': [], 'auto preterminal span': (1, 10), 'span': (1, 10), 'parent': 'SU', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU okay)
		[01;31m(SU[00m
			(SIMPX den ice nehmen wir wir wissen wann wir fahren)
			[01;31m(SIMPX[00m
				(VF wir)
				(LK wissen)[01;31m)[00m
			(NF wohin wir fahren wir wissen wo wir schlafen)[01;31m)[00m
		(SU wir wissen aber noch nicht was wir abends machen)))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX', 'NF'], 'family': ['SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ART', 'NE', 'VVFIN', 'PPER', 'PPER', 'VVFIN', 'PWAV', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'PWAV', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'PWAV', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'PTKNEG', 'PWS', 'PPER', 'ADV', 'VVFIN'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 29), 'span': (1, 20), 'left siblings': ['SU'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU okay)
		(SIMPX den ice nehmen wir wir wissen wann wir fahren)
		[01;31m(SIMPX[00m
			(VF wir)
			(LK wissen)[01;31m)[00m
		(NF wohin wir fahren wir wissen wo wir schlafen)
		(SU wir wissen aber noch nicht was wir abends machen)))
Step:UNSET remove
{'subtrees': ['VF', 'LK'], 'family': ['SU', 'SIMPX', 'SIMPX', 'NF', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ART', 'NE', 'VVFIN', 'PPER', 'PPER', 'VVFIN', 'PWAV', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'PWAV', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'PWAV', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'PTKNEG', 'PWS', 'PPER', 'ADV', 'VVFIN'), 'right siblings': ['NF', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 29), 'span': (10, 12), 'left siblings': ['SU', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP okay den ice nehmen wir wir wissen wann wir fahren wir wissen wohin wir fahren wir wissen wo wir schlafen wir wissen aber noch nicht was wir abends machen)

Sentence 484:
17 Initial errors
0 on fringe, 12 iterations
2 Error:Different label
2 Error:Single Word Phrase
2 Error:Different label
2 Error:UNSET move
2 Error:Different label
1 Error:UNSET add
1 Error:Unary
1 Error:Unary
1 Error:Unary
1 Error:UNSET remove
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(PX
				(APPRART am)
				(NX neunten juli))[01;31m)[00m
		[01;31m(SU[00m [01;33m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF ich)
				(LK mus)
				[01;36m(ADVX[00m [01;36m(MF[00m [01;31m(VC[00m
					[01;31m(VXINF[00m
						(VVINF uberlegen)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK ist) [01;33mSIMPX)[00m
				[01;36m(VF[00m [01;31m(MF[00m [01;33m(SIMPX[00m
					(NX
						(PDS das))[01;31m)[00m[01;36m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				(LK gibt)
				[01;36m(MF[00m
					(MF es da irgendwie was)
					[01;31m(NF[00m
						(NX
							(ART einen)
							(ADJX interessanten)
							(NN feiertag))[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m [01;33mSIMPX)[00m
		[01;31m(SU[00m
			(DM
				(PTKANT nein))[01;31m)[00m))
Step:Different label
{'family': ['VF', 'LK', 'MF'], 'auto preterminal span': (5, 6), 'span': (5, 6), 'subtrees': ['VXINF'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('VVINF',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('VC', 'MF')}
(TOP
	(TURN
		[01;31m(SU[00m
			(PX
				(APPRART am)
				(NX neunten juli))[01;31m)[00m
		[01;31m(SU[00m [01;33m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF ich)
				(LK mus)
				[01;36m(ADVX[00m
					(MF
						[01;31m(VXINF[00m
							(VVINF uberlegen)[01;31m)[00m)[01;36m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK ist) [01;33mSIMPX)[00m
				[01;36m(VF[00m [01;31m(MF[00m [01;33m(SIMPX[00m
					(NX
						(PDS das))[01;31m)[00m[01;36m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				(LK gibt)
				[01;36m(MF[00m
					(MF es da irgendwie was)
					[01;31m(NF[00m
						(NX
							(ART einen)
							(ADJX interessanten)
							(NN feiertag))[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m [01;33mSIMPX)[00m
		[01;31m(SU[00m
			(DM
				(PTKANT nein))[01;31m)[00m))
Step:Single Word Phrase
{'family': ['ADVX'], 'auto preterminal span': (5, 6), 'span': (5, 6), 'subtrees': ['VVINF'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('VVINF',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VXINF', 'ADVX')}
(TOP
	(TURN
		[01;31m(SU[00m
			(PX
				(APPRART am)
				(NX neunten juli))[01;31m)[00m
		[01;31m(SU[00m [01;33m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF ich)
				(LK mus)
				(MF uberlegen)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK ist) [01;33mSIMPX)[00m
				[01;36m(VF[00m [01;31m(MF[00m [01;33m(SIMPX[00m
					(NX
						(PDS das))[01;31m)[00m[01;36m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				(LK gibt)
				[01;36m(MF[00m
					(MF es da irgendwie was)
					[01;31m(NF[00m
						(NX
							(ART einen)
							(ADJX interessanten)
							(NN feiertag))[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m [01;33mSIMPX)[00m
		[01;31m(SU[00m
			(DM
				(PTKANT nein))[01;31m)[00m))
Step:Different label
{'family': ['LK', 'VF'], 'auto preterminal span': (7, 8), 'span': (7, 8), 'subtrees': ['NX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('PDS',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('MF', 'VF')}
(TOP
	(TURN
		[01;31m(SU[00m
			(PX
				(APPRART am)
				(NX neunten juli))[01;31m)[00m
		[01;31m(SU[00m [01;33m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF ich)
				(LK mus)
				(MF uberlegen)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK ist) [01;33mSIMPX)[00m
				[01;33m(SIMPX[00m (VF das)[01;31m)[00m
			[01;31m(SIMPX[00m
				(LK gibt)
				[01;36m(MF[00m
					(MF es da irgendwie was)
					[01;31m(NF[00m
						(NX
							(ART einen)
							(ADJX interessanten)
							(NN feiertag))[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m [01;33mSIMPX)[00m
		[01;31m(SU[00m
			(DM
				(PTKANT nein))[01;31m)[00m))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'LK'], 'mover info': [('LK', (6, 7))], 'old_family': ['LK', 'VF'], 'start left siblings': [], 'auto preterminals': ('APPRART', 'ADJA', 'NN', 'PPER', 'VMFIN', 'VVINF', 'VAFIN', 'PDS', 'VVFIN', 'PPER', 'ADV', 'ADV', 'PIS', 'ART', 'ADJA', 'NN', 'PTKANT'), 'start right siblings': ['VF'], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (0, 17), 'movers': ['LK'], 'old_parent': 'SIMPX', 'POS confusion': ('VAFIN', 'VAFIN'), 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			(PX
				(APPRART am)
				(NX neunten juli))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK mus)
				(MF uberlegen)
				(LK ist))[01;31m)[00m
		[01;36m(SIMPX[00m [01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF
					(NX
						(PDS das)))[01;31m)[00m
			[01;31m(SIMPX[00m
				(LK gibt)
				[01;36m(MF[00m
					(MF es da irgendwie was)
					[01;31m(NF[00m
						(NX
							(ART einen)
							(ADJX interessanten)
							(NN feiertag))[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m
		[01;31m(SU[00m
			(DM
				(PTKANT nein))[01;31m)[00m))
Step:Different label
{'family': ['SU', 'SU', 'SIMPX', 'SU'], 'auto preterminal span': (7, 16), 'span': (7, 16), 'subtrees': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'over_word': False, 'auto preterminals': ('PDS', 'VVFIN', 'PPER', 'ADV', 'ADV', 'PIS', 'ART', 'ADJA', 'NN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('SU', 'SIMPX')}
(TOP
	(TURN
		[01;31m(SU[00m
			(PX
				(APPRART am)
				(NX neunten juli))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK mus)
				(MF uberlegen)
				(LK ist))[01;31m)[00m
		(SIMPX
			[01;31m(SIMPX[00m
				(VF
					(NX
						(PDS das)))[01;31m)[00m
			[01;31m(SIMPX[00m
				(LK gibt)
				[01;36m(MF[00m
					(MF es da irgendwie was)
					[01;31m(NF[00m
						(NX
							(ART einen)
							(ADJX interessanten)
							(NN feiertag))[01;31m)[00m[01;36m)[00m[01;31m)[00m)
		[01;31m(SU[00m
			(DM
				(PTKANT nein))[01;31m)[00m))
Step:UNSET add
{'subtrees': ['MF', 'NF'], 'family': ['LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV', 'ADV', 'PIS', 'ART', 'ADJA', 'NN'), 'right siblings': [], 'left siblings': [(LK (VXFIN (VVFIN gibt)))], 'auto preterminal span': (9, 16), 'span': (9, 16), 'parent': 'SIMPX', 'label': 'MF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(PX
				(APPRART am)
				(NX neunten juli))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK mus)
				(MF uberlegen)
				(LK ist))[01;31m)[00m
		(SIMPX
			[01;31m(SIMPX[00m
				(VF
					(NX
						(PDS das)))[01;31m)[00m
			[01;31m(SIMPX[00m
				(LK gibt)
				(MF
					(MF es da irgendwie was)
					[01;31m(NF[00m
						(NX
							(ART einen)
							(ADJX interessanten)
							(NN feiertag))[01;31m)[00m)[01;31m)[00m)
		[01;31m(SU[00m
			(DM
				(PTKANT nein))[01;31m)[00m))
Step:Unary
{'subtrees': ['PX'], 'family': ['SU', 'SU', 'SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'ADJA', 'NN', 'PPER', 'VMFIN', 'VVINF', 'VAFIN', 'PDS', 'VVFIN', 'PPER', 'ADV', 'ADV', 'PIS', 'ART', 'ADJA', 'NN', 'PTKANT'), 'right siblings': ['SU', 'SIMPX', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 17), 'span': (0, 3), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(PX am neunten juli)
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK mus)
				(MF uberlegen)
				(LK ist))[01;31m)[00m
		(SIMPX
			[01;31m(SIMPX[00m
				(VF
					(NX
						(PDS das)))[01;31m)[00m
			[01;31m(SIMPX[00m
				(LK gibt)
				(MF
					(MF es da irgendwie was)
					[01;31m(NF[00m
						(NX
							(ART einen)
							(ADJX interessanten)
							(NN feiertag))[01;31m)[00m)[01;31m)[00m)
		[01;31m(SU[00m
			(DM
				(PTKANT nein))[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['PX', 'SU', 'SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'ADJA', 'NN', 'PPER', 'VMFIN', 'VVINF', 'VAFIN', 'PDS', 'VVFIN', 'PPER', 'ADV', 'ADV', 'PIS', 'ART', 'ADJA', 'NN', 'PTKANT'), 'right siblings': ['SIMPX', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 17), 'span': (3, 7), 'left siblings': ['PX'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(PX am neunten juli)
		(SIMPX ich mus uberlegen ist)
		(SIMPX
			[01;31m(SIMPX[00m
				(VF
					(NX
						(PDS das)))[01;31m)[00m
			[01;31m(SIMPX[00m
				(LK gibt)
				(MF
					(MF es da irgendwie was)
					[01;31m(NF[00m
						(NX
							(ART einen)
							(ADJX interessanten)
							(NN feiertag))[01;31m)[00m)[01;31m)[00m)
		[01;31m(SU[00m
			(DM
				(PTKANT nein))[01;31m)[00m))
Step:Unary
{'subtrees': ['VF'], 'family': ['SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VVFIN', 'PPER', 'ADV', 'ADV', 'PIS', 'ART', 'ADJA', 'NN'), 'right siblings': ['SIMPX'], 'parent': 'SIMPX', 'auto preterminal span': (7, 16), 'span': (7, 8), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(PX am neunten juli)
		(SIMPX ich mus uberlegen ist)
		(SIMPX
			(VF das)
			[01;31m(SIMPX[00m
				(LK gibt)
				(MF
					(MF es da irgendwie was)
					[01;31m(NF[00m
						(NX
							(ART einen)
							(ADJX interessanten)
							(NN feiertag))[01;31m)[00m)[01;31m)[00m)
		[01;31m(SU[00m
			(DM
				(PTKANT nein))[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['VF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VVFIN', 'PPER', 'ADV', 'ADV', 'PIS', 'ART', 'ADJA', 'NN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (7, 16), 'span': (8, 16), 'left siblings': ['VF'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(PX am neunten juli)
		(SIMPX ich mus uberlegen ist)
		(SIMPX
			(VF das)
			(LK gibt)
			(MF
				(MF es da irgendwie was)
				[01;31m(NF[00m
					(NX
						(ART einen)
						(ADJX interessanten)
						(NN feiertag))[01;31m)[00m))
		[01;31m(SU[00m
			(DM
				(PTKANT nein))[01;31m)[00m))
Step:Unary
{'subtrees': ['NX'], 'family': ['MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV', 'ADV', 'PIS', 'ART', 'ADJA', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (9, 16), 'span': (13, 16), 'left siblings': ['MF'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(PX am neunten juli)
		(SIMPX ich mus uberlegen ist)
		(SIMPX das gibt es da irgendwie was einen interessanten feiertag)
		[01;31m(SU[00m
			(DM
				(PTKANT nein))[01;31m)[00m))
Step:Unary
{'subtrees': ['DM'], 'family': ['PX', 'SIMPX', 'SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'ADJA', 'NN', 'PPER', 'VMFIN', 'VVINF', 'VAFIN', 'PDS', 'VVFIN', 'PPER', 'ADV', 'ADV', 'PIS', 'ART', 'ADJA', 'NN', 'PTKANT'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 17), 'span': (16, 17), 'left siblings': ['PX', 'SIMPX', 'SIMPX'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP am neunten juli ich mus uberlegen ist das gibt es da irgendwie was einen interessanten feiertag nein)

Sentence 485:
32 Initial errors
0 on fringe, 23 iterations
4 Error:UNSET move
2 Error:Different label
2 Error:Single Word Phrase
2 Error:Different label
2 Error:Different label
2 Error:Clause Attachment
2 Error:UNSET move
1 Error:UNSET add
1 Error:Unary
1 Error:UNSET add
1 Error:Unary
1 Error:UNSET add
1 Error:Clause Attachment
1 Error:Clause Attachment
1 Error:Unary
1 Error:Single Word Phrase
1 Error:UNSET remove
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:Unary
1 Error:UNSET remove
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM okay)
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				[01;36m(SIMPX[00m
					(VF dann)
					(LK sage)
					(MF ich einfach mal)[01;36m)[00m
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						[01;36m(SIMPX[00m
							[01;36m(SU[00m
								(VF von mir aus)
								(LK gehen)
								(MF wir ins kino) [01;33mSIMPX)[00m[01;36m)[00m[01;36m)[00m
						[01;36m(SU[00m
							[01;36m(DM[00m
								(KOUS wenn)[01;36m)[00m[01;36m)[00m
						(APPR bei)
						(KOUS wenn)
						[01;31m(NF[00m [01;33m(SIMPX[00m
							(SIMPX
								(C wenn)
								(MF die was)
								(VC anbieten))[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;31m(KOORD[00m
					(KON oder)[01;31m)[00m
				(VF wir)
				(LK gehen)
				(MF in eine kneipe)[01;31m)[00m[01;31m)[00m [01;33mSIMPX)[00m
		[01;31m(SU[00m
			(DM also)
			[01;31m(SIMPX[00m
				(VF ich)
				(LK wurde)
				(VC sagen)
				(NF
					(SIMPX
						[01;36m(SIMPX[00m
							[01;36m(NF[00m
								(VF wir)
								(LK brauchen)
								(MF das gar nicht weiter)[01;36m)[00m[01;36m)[00m
						[01;36m(LK[00m [01;36m(VXFIN[00m [01;31m(VC[00m
							[01;31m(VXINF[00m
								(VVINF planen)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m))[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF wir)
				[01;31m(FKOORD[00m
					[01;36m(LKM[00m [01;31m(LKMN[00m
						(LK kucken)
						[01;36m(MF[00m
							(MF einfach)
							[01;31m(NF[00m
								[01;31m(SIMPX[00m
									(C wie)
									(MF die sache)
									(VC lauft)
									[01;31m(NF[00m
										(ADVX
											(ADV da))[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;36m)[00m
					(KON und)
					(LKMVC gehen dann abends aus)[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['KOUS', 'APPR', 'KOUS', 'NF', 'SIMPX'], 'mover info': [('KOUS', (13, 14)), ('APPR', (14, 15)), ('KOUS', (15, 16)), ('NF', (16, 20))], 'old_family': ['VF', 'LK', 'MF', 'KOUS', 'APPR', 'KOUS', 'NF'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('ITJ', 'ADV', 'VVFIN', 'PPER', 'ADV', 'ADV', 'APPR', 'PPER', 'APZR', 'VVFIN', 'PPER', 'APPRART', 'NN', 'KOUS', 'APPR', 'KOUS', 'KOUS', 'PDS', 'PIS', 'VVFIN', 'KON', 'PPER', 'VVFIN', 'APPR', 'ART', 'NN', 'ADV', 'PPER', 'VAFIN', 'VVINF', 'PPER', 'VVFIN', 'PDS', 'ADV', 'PTKNEG', 'ADV', 'VVINF', 'PPER', 'VVFIN', 'ADV', 'KOUS', 'ART', 'NN', 'VVFIN', 'ADV', 'KON', 'VVFIN', 'ADV', 'ADV', 'PTKVZ'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 50), 'movers': ['KOUS', 'APPR', 'KOUS', 'NF'], 'old_parent': 'SIMPX', 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM okay)
			(SIMPX
				[01;36m(SIMPX[00m
					(VF dann)
					(LK sage)
					(MF ich einfach mal)[01;36m)[00m
				[01;36m(SU[00m [01;31m(NF[00m
					(SIMPX
						(VF von mir aus)
						(LK gehen)
						(MF wir ins kino))[01;31m)[00m[01;36m)[00m)[01;31m)[00m
		[01;31m(SU[00m
			[01;36m(SU[00m
				[01;36m(DM[00m
					(KOUS wenn)[01;36m)[00m[01;36m)[00m
			(APPR bei)
			(KOUS wenn)
			[01;36m(SIMPX[00m
				[01;31m(NF[00m
					(SIMPX
						(C wenn)
						(MF die was)
						(VC anbieten))[01;31m)[00m
				[01;31m(SIMPX[00m
					[01;31m(KOORD[00m
						(KON oder)[01;31m)[00m
					(VF wir)
					(LK gehen)
					(MF in eine kneipe)[01;31m)[00m[01;36m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(DM also)
			[01;31m(SIMPX[00m
				(VF ich)
				(LK wurde)
				(VC sagen)
				(NF
					(SIMPX
						[01;36m(SIMPX[00m
							[01;36m(NF[00m
								(VF wir)
								(LK brauchen)
								(MF das gar nicht weiter)[01;36m)[00m[01;36m)[00m
						[01;36m(LK[00m [01;36m(VXFIN[00m [01;31m(VC[00m
							[01;31m(VXINF[00m
								(VVINF planen)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m))[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF wir)
				[01;31m(FKOORD[00m
					[01;36m(LKM[00m [01;31m(LKMN[00m
						(LK kucken)
						[01;36m(MF[00m
							(MF einfach)
							[01;31m(NF[00m
								[01;31m(SIMPX[00m
									(C wie)
									(MF die sache)
									(VC lauft)
									[01;31m(NF[00m
										(ADVX
											(ADV da))[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;36m)[00m
					(KON und)
					(LKMVC gehen dann abends aus)[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Different label
{'family': ['VF', 'LK', 'MF', 'SU'], 'auto preterminal span': (6, 13), 'span': (6, 13), 'subtrees': ['SIMPX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('APPR', 'PPER', 'APZR', 'VVFIN', 'PPER', 'APPRART', 'NN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('NF', 'SU')}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM okay)
			(SIMPX
				[01;36m(SIMPX[00m
					(VF dann)
					(LK sage)
					(MF ich einfach mal)[01;36m)[00m
				(SU von mir aus gehen wir ins kino))[01;31m)[00m
		[01;31m(SU[00m
			[01;36m(SU[00m
				[01;36m(DM[00m
					(KOUS wenn)[01;36m)[00m[01;36m)[00m
			(APPR bei)
			(KOUS wenn)
			[01;36m(SIMPX[00m
				[01;31m(NF[00m
					(SIMPX
						(C wenn)
						(MF die was)
						(VC anbieten))[01;31m)[00m
				[01;31m(SIMPX[00m
					[01;31m(KOORD[00m
						(KON oder)[01;31m)[00m
					(VF wir)
					(LK gehen)
					(MF in eine kneipe)[01;31m)[00m[01;36m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(DM also)
			[01;31m(SIMPX[00m
				(VF ich)
				(LK wurde)
				(VC sagen)
				(NF
					(SIMPX
						[01;36m(SIMPX[00m
							[01;36m(NF[00m
								(VF wir)
								(LK brauchen)
								(MF das gar nicht weiter)[01;36m)[00m[01;36m)[00m
						[01;36m(LK[00m [01;36m(VXFIN[00m [01;31m(VC[00m
							[01;31m(VXINF[00m
								(VVINF planen)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m))[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF wir)
				[01;31m(FKOORD[00m
					[01;36m(LKM[00m [01;31m(LKMN[00m
						(LK kucken)
						[01;36m(MF[00m
							(MF einfach)
							[01;31m(NF[00m
								[01;31m(SIMPX[00m
									(C wie)
									(MF die sache)
									(VC lauft)
									[01;31m(NF[00m
										(ADVX
											(ADV da))[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;36m)[00m
					(KON und)
					(LKMVC gehen dann abends aus)[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Single Word Phrase
{'family': ['VXFIN'], 'auto preterminal span': (36, 37), 'span': (36, 37), 'subtrees': ['VVINF'], 'parent': 'VC', 'over_word': True, 'auto preterminals': ('VVINF',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VXINF', 'VXFIN')}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM okay)
			(SIMPX
				[01;36m(SIMPX[00m
					(VF dann)
					(LK sage)
					(MF ich einfach mal)[01;36m)[00m
				(SU von mir aus gehen wir ins kino))[01;31m)[00m
		[01;31m(SU[00m
			[01;36m(SU[00m
				[01;36m(DM[00m
					(KOUS wenn)[01;36m)[00m[01;36m)[00m
			(APPR bei)
			(KOUS wenn)
			[01;36m(SIMPX[00m
				[01;31m(NF[00m
					(SIMPX
						(C wenn)
						(MF die was)
						(VC anbieten))[01;31m)[00m
				[01;31m(SIMPX[00m
					[01;31m(KOORD[00m
						(KON oder)[01;31m)[00m
					(VF wir)
					(LK gehen)
					(MF in eine kneipe)[01;31m)[00m[01;36m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(DM also)
			[01;31m(SIMPX[00m
				(VF ich)
				(LK wurde)
				(VC sagen)
				(NF
					(SIMPX
						[01;36m(SIMPX[00m
							[01;36m(NF[00m
								(VF wir)
								(LK brauchen)
								(MF das gar nicht weiter)[01;36m)[00m[01;36m)[00m
						[01;36m(LK[00m [01;31m(VC[00m
							(VXFIN
								(VVINF planen))[01;31m)[00m[01;36m)[00m))[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF wir)
				[01;31m(FKOORD[00m
					[01;36m(LKM[00m [01;31m(LKMN[00m
						(LK kucken)
						[01;36m(MF[00m
							(MF einfach)
							[01;31m(NF[00m
								[01;31m(SIMPX[00m
									(C wie)
									(MF die sache)
									(VC lauft)
									[01;31m(NF[00m
										(ADVX
											(ADV da))[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;36m)[00m
					(KON und)
					(LKMVC gehen dann abends aus)[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Different label
{'family': ['VF', 'LK', 'MF', 'LK'], 'auto preterminal span': (36, 37), 'span': (36, 37), 'subtrees': ['VXFIN'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('VVINF',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('VC', 'LK')}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM okay)
			(SIMPX
				[01;36m(SIMPX[00m
					(VF dann)
					(LK sage)
					(MF ich einfach mal)[01;36m)[00m
				(SU von mir aus gehen wir ins kino))[01;31m)[00m
		[01;31m(SU[00m
			[01;36m(SU[00m
				[01;36m(DM[00m
					(KOUS wenn)[01;36m)[00m[01;36m)[00m
			(APPR bei)
			(KOUS wenn)
			[01;36m(SIMPX[00m
				[01;31m(NF[00m
					(SIMPX
						(C wenn)
						(MF die was)
						(VC anbieten))[01;31m)[00m
				[01;31m(SIMPX[00m
					[01;31m(KOORD[00m
						(KON oder)[01;31m)[00m
					(VF wir)
					(LK gehen)
					(MF in eine kneipe)[01;31m)[00m[01;36m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(DM also)
			[01;31m(SIMPX[00m
				(VF ich)
				(LK wurde)
				(VC sagen)
				(NF
					(SIMPX
						[01;36m(SIMPX[00m
							[01;36m(NF[00m
								(VF wir)
								(LK brauchen)
								(MF das gar nicht weiter)[01;36m)[00m[01;36m)[00m
						(LK planen)))[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF wir)
				[01;31m(FKOORD[00m
					[01;36m(LKM[00m [01;31m(LKMN[00m
						(LK kucken)
						[01;36m(MF[00m
							(MF einfach)
							[01;31m(NF[00m
								[01;31m(SIMPX[00m
									(C wie)
									(MF die sache)
									(VC lauft)
									[01;31m(NF[00m
										(ADVX
											(ADV da))[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;36m)[00m
					(KON und)
					(LKMVC gehen dann abends aus)[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Different label
{'family': ['LKM', 'KON', 'LKMVC'], 'auto preterminal span': (38, 45), 'span': (38, 45), 'subtrees': ['LK', 'MF', 'NF'], 'parent': 'FKOORD', 'over_word': False, 'auto preterminals': ('VVFIN', 'ADV', 'KOUS', 'ART', 'NN', 'VVFIN', 'ADV'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('LKMN', 'LKM')}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM okay)
			(SIMPX
				[01;36m(SIMPX[00m
					(VF dann)
					(LK sage)
					(MF ich einfach mal)[01;36m)[00m
				(SU von mir aus gehen wir ins kino))[01;31m)[00m
		[01;31m(SU[00m
			[01;36m(SU[00m
				[01;36m(DM[00m
					(KOUS wenn)[01;36m)[00m[01;36m)[00m
			(APPR bei)
			(KOUS wenn)
			[01;36m(SIMPX[00m
				[01;31m(NF[00m
					(SIMPX
						(C wenn)
						(MF die was)
						(VC anbieten))[01;31m)[00m
				[01;31m(SIMPX[00m
					[01;31m(KOORD[00m
						(KON oder)[01;31m)[00m
					(VF wir)
					(LK gehen)
					(MF in eine kneipe)[01;31m)[00m[01;36m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(DM also)
			[01;31m(SIMPX[00m
				(VF ich)
				(LK wurde)
				(VC sagen)
				(NF
					(SIMPX
						[01;36m(SIMPX[00m
							[01;36m(NF[00m
								(VF wir)
								(LK brauchen)
								(MF das gar nicht weiter)[01;36m)[00m[01;36m)[00m
						(LK planen)))[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF wir)
				[01;31m(FKOORD[00m
					(LKM
						(LK kucken)
						[01;36m(MF[00m
							(MF einfach)
							[01;31m(NF[00m
								[01;31m(SIMPX[00m
									(C wie)
									(MF die sache)
									(VC lauft)
									[01;31m(NF[00m
										(ADVX
											(ADV da))[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m)
					(KON und)
					(LKMVC gehen dann abends aus)[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Clause Attachment
{'new_parent': 'SU', 'new_family': ['APPR', 'KOUS', 'NF', 'SIMPX', 'DM', 'SIMPX'], 'mover info': [('APPR', (14, 15)), ('KOUS', (15, 16)), ('NF', (16, 20)), ('SIMPX', (20, 26))], 'old_family': ['KOUS', 'APPR', 'KOUS', 'NF', 'SIMPX'], 'start left siblings': ['KOUS'], 'auto preterminals': ('ITJ', 'ADV', 'VVFIN', 'PPER', 'ADV', 'ADV', 'APPR', 'PPER', 'APZR', 'VVFIN', 'PPER', 'APPRART', 'NN', 'KOUS', 'APPR', 'KOUS', 'KOUS', 'PDS', 'PIS', 'VVFIN', 'KON', 'PPER', 'VVFIN', 'APPR', 'ART', 'NN', 'ADV', 'PPER', 'VAFIN', 'VVINF', 'PPER', 'VVFIN', 'PDS', 'ADV', 'PTKNEG', 'ADV', 'VVINF', 'PPER', 'VVFIN', 'ADV', 'KOUS', 'ART', 'NN', 'VVFIN', 'ADV', 'KON', 'VVFIN', 'ADV', 'ADV', 'PTKVZ'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 50), 'movers': ['APPR', 'KOUS', 'NF', 'SIMPX'], 'old_parent': 'SU', 'end right siblings': ['DM', 'SIMPX'], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM okay)
			(SIMPX
				[01;36m(SIMPX[00m
					(VF dann)
					(LK sage)
					(MF ich einfach mal)[01;36m)[00m
				(SU von mir aus gehen wir ins kino))[01;31m)[00m
		[01;36m(DM[00m
			(SU
				(KOUS wenn))[01;36m)[00m
		[01;31m(SU[00m
			(APPR bei)
			(KOUS wenn)
			[01;36m(SIMPX[00m
				[01;31m(NF[00m
					(SIMPX
						(C wenn)
						(MF die was)
						(VC anbieten))[01;31m)[00m
				[01;31m(SIMPX[00m
					[01;31m(KOORD[00m
						(KON oder)[01;31m)[00m
					(VF wir)
					(LK gehen)
					(MF in eine kneipe)[01;31m)[00m[01;36m)[00m
			(DM also)
			[01;31m(SIMPX[00m
				(VF ich)
				(LK wurde)
				(VC sagen)
				(NF
					(SIMPX
						[01;36m(SIMPX[00m
							[01;36m(NF[00m
								(VF wir)
								(LK brauchen)
								(MF das gar nicht weiter)[01;36m)[00m[01;36m)[00m
						(LK planen)))[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF wir)
				[01;31m(FKOORD[00m
					(LKM
						(LK kucken)
						[01;36m(MF[00m
							(MF einfach)
							[01;31m(NF[00m
								[01;31m(SIMPX[00m
									(C wie)
									(MF die sache)
									(VC lauft)
									[01;31m(NF[00m
										(ADVX
											(ADV da))[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m)
					(KON und)
					(LKMVC gehen dann abends aus)[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['NF', 'KOORD', 'VF', 'LK', 'MF'], 'mover info': [('NF', (16, 20))], 'old_family': ['APPR', 'KOUS', 'NF', 'SIMPX', 'DM', 'SIMPX'], 'start left siblings': ['APPR', 'KOUS'], 'auto preterminals': ('APPR', 'KOUS', 'KOUS', 'PDS', 'PIS', 'VVFIN', 'KON', 'PPER', 'VVFIN', 'APPR', 'ART', 'NN', 'ADV', 'PPER', 'VAFIN', 'VVINF', 'PPER', 'VVFIN', 'PDS', 'ADV', 'PTKNEG', 'ADV', 'VVINF'), 'start right siblings': ['SIMPX', 'DM', 'SIMPX'], 'end left siblings': [], 'auto preterminal span': (14, 37), 'movers': ['NF'], 'old_parent': 'SU', 'end right siblings': ['KOORD', 'VF', 'LK', 'MF'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM okay)
			(SIMPX
				[01;36m(SIMPX[00m
					(VF dann)
					(LK sage)
					(MF ich einfach mal)[01;36m)[00m
				(SU von mir aus gehen wir ins kino))[01;31m)[00m
		[01;36m(DM[00m
			(SU
				(KOUS wenn))[01;36m)[00m
		[01;31m(SU[00m
			(APPR bei)
			(KOUS wenn)
			(SIMPX
				[01;31m(NF[00m
					(SIMPX
						(C wenn)
						(MF die was)
						(VC anbieten))[01;31m)[00m
				[01;31m(KOORD[00m
					(KON oder)[01;31m)[00m
				(VF wir)
				(LK gehen)
				(MF in eine kneipe))
			(DM also)
			[01;31m(SIMPX[00m
				(VF ich)
				(LK wurde)
				(VC sagen)
				(NF
					(SIMPX
						[01;36m(SIMPX[00m
							[01;36m(NF[00m
								(VF wir)
								(LK brauchen)
								(MF das gar nicht weiter)[01;36m)[00m[01;36m)[00m
						(LK planen)))[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF wir)
				[01;31m(FKOORD[00m
					(LKM
						(LK kucken)
						[01;36m(MF[00m
							(MF einfach)
							[01;31m(NF[00m
								[01;31m(SIMPX[00m
									(C wie)
									(MF die sache)
									(VC lauft)
									[01;31m(NF[00m
										(ADVX
											(ADV da))[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m)
					(KON und)
					(LKMVC gehen dann abends aus)[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:UNSET add
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'ADV', 'ADV'), 'right siblings': [(SU (SIMPX (VF (PX (APPR von) (NX (PPER mir)) (APZR aus))) (LK (VXFIN (VVFIN gehen))) (MF (NX (PPER wir)) (PX (APPRART ins) (NX (NN kino))))))], 'left siblings': [], 'auto preterminal span': (1, 6), 'span': (1, 6), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM okay)
			(SIMPX dann sage ich einfach mal von mir aus gehen wir ins kino)[01;31m)[00m
		[01;36m(DM[00m
			(SU
				(KOUS wenn))[01;36m)[00m
		[01;31m(SU[00m
			(APPR bei)
			(KOUS wenn)
			(SIMPX
				[01;31m(NF[00m
					(SIMPX
						(C wenn)
						(MF die was)
						(VC anbieten))[01;31m)[00m
				[01;31m(KOORD[00m
					(KON oder)[01;31m)[00m
				(VF wir)
				(LK gehen)
				(MF in eine kneipe))
			(DM also)
			[01;31m(SIMPX[00m
				(VF ich)
				(LK wurde)
				(VC sagen)
				(NF
					(SIMPX
						[01;36m(SIMPX[00m
							[01;36m(NF[00m
								(VF wir)
								(LK brauchen)
								(MF das gar nicht weiter)[01;36m)[00m[01;36m)[00m
						(LK planen)))[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF wir)
				[01;31m(FKOORD[00m
					(LKM
						(LK kucken)
						[01;36m(MF[00m
							(MF einfach)
							[01;31m(NF[00m
								[01;31m(SIMPX[00m
									(C wie)
									(MF die sache)
									(VC lauft)
									[01;31m(NF[00m
										(ADVX
											(ADV da))[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m)
					(KON und)
					(LKMVC gehen dann abends aus)[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['SU'], 'family': ['SU', 'DM', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS',), 'right siblings': [(SU (APPR bei) (KOUS wenn) (SIMPX (NF (SIMPX (C (KOUS wenn)) (MF (NX (PDS die)) (NX (PIS was))) (VC (VXFIN (VVFIN anbieten))))) (KOORD (KON oder)) (VF (NX (PPER wir))) (LK (VXFIN (VVFIN gehen))) (MF (PX (APPR in) (NX (ART eine) (NN kneipe))))) (DM (ADVX (ADV also))) (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VAFIN wurde))) (VC (VXINF (VVINF sagen))) (NF (SIMPX (VF (NX (PPER wir))) (LK (VXFIN (VVFIN brauchen))) (MF (NX (PDS das)) (ADVX (ADVX (ADV gar)) (PTKNEG nicht)) (ADVX (ADV weiter))) (LK (VXFIN (VVINF planen))))))), (SU (SIMPX (VF (NX (PPER wir))) (FKOORD (LKM (LK (VXFIN (VVFIN kucken))) (MF (ADVX (ADV einfach))) (NF (SIMPX (C (KOUS wie)) (MF (NX (ART die) (NN sache))) (VC (VXFIN (VVFIN lauft))) (NF (ADVX (ADV da)))))) (KON und) (LKMVC (LK (VXFIN (VVFIN gehen))) (MF (ADVX (ADV dann)) (ADVX (ADV abends))) (VC (PTKVZ aus))))))], 'left siblings': [(SU (DM (ITJ okay)) (SIMPX (SIMPX (VF (ADVX (ADV dann))) (LK (VXFIN (VVFIN sage))) (MF (NX (PPER ich)) (ADVX (ADV einfach)) (ADVX (ADV mal)))) (SU (SIMPX (VF (PX (APPR von) (NX (PPER mir)) (APZR aus))) (LK (VXFIN (VVFIN gehen))) (MF (NX (PPER wir)) (PX (APPRART ins) (NX (NN kino))))))))], 'auto preterminal span': (13, 14), 'span': (13, 14), 'parent': 'TURN', 'label': 'DM', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM okay)
			(SIMPX dann sage ich einfach mal von mir aus gehen wir ins kino)[01;31m)[00m
		(DM wenn)
		[01;31m(SU[00m
			(APPR bei)
			(KOUS wenn)
			(SIMPX
				[01;31m(NF[00m
					(SIMPX
						(C wenn)
						(MF die was)
						(VC anbieten))[01;31m)[00m
				[01;31m(KOORD[00m
					(KON oder)[01;31m)[00m
				(VF wir)
				(LK gehen)
				(MF in eine kneipe))
			(DM also)
			[01;31m(SIMPX[00m
				(VF ich)
				(LK wurde)
				(VC sagen)
				(NF
					(SIMPX
						[01;36m(SIMPX[00m
							[01;36m(NF[00m
								(VF wir)
								(LK brauchen)
								(MF das gar nicht weiter)[01;36m)[00m[01;36m)[00m
						(LK planen)))[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF wir)
				[01;31m(FKOORD[00m
					(LKM
						(LK kucken)
						[01;36m(MF[00m
							(MF einfach)
							[01;31m(NF[00m
								[01;31m(SIMPX[00m
									(C wie)
									(MF die sache)
									(VC lauft)
									[01;31m(NF[00m
										(ADVX
											(ADV da))[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m)
					(KON und)
					(LKMVC gehen dann abends aus)[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:UNSET add
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['NF', 'LK'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'PDS', 'ADV', 'PTKNEG', 'ADV'), 'right siblings': [(LK (VXFIN (VVINF planen)))], 'left siblings': [], 'auto preterminal span': (30, 36), 'span': (30, 36), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM okay)
			(SIMPX dann sage ich einfach mal von mir aus gehen wir ins kino)[01;31m)[00m
		(DM wenn)
		[01;31m(SU[00m
			(APPR bei)
			(KOUS wenn)
			(SIMPX
				[01;31m(NF[00m
					(SIMPX
						(C wenn)
						(MF die was)
						(VC anbieten))[01;31m)[00m
				[01;31m(KOORD[00m
					(KON oder)[01;31m)[00m
				(VF wir)
				(LK gehen)
				(MF in eine kneipe))
			(DM also)
			[01;31m(SIMPX[00m
				(VF ich)
				(LK wurde)
				(VC sagen)
				(NF
					(SIMPX
						[01;36m(SIMPX[00m
							(NF
								(VF wir)
								(LK brauchen)
								(MF das gar nicht weiter))[01;36m)[00m
						(LK planen)))[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF wir)
				[01;31m(FKOORD[00m
					(LKM
						(LK kucken)
						[01;36m(MF[00m
							(MF einfach)
							[01;31m(NF[00m
								[01;31m(SIMPX[00m
									(C wie)
									(MF die sache)
									(VC lauft)
									[01;31m(NF[00m
										(ADVX
											(ADV da))[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m)
					(KON und)
					(LKMVC gehen dann abends aus)[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['NF'], 'family': ['SIMPX', 'LK'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'PDS', 'ADV', 'PTKNEG', 'ADV'), 'right siblings': [(LK (VXFIN (VVINF planen)))], 'left siblings': [], 'auto preterminal span': (30, 36), 'span': (30, 36), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM okay)
			(SIMPX dann sage ich einfach mal von mir aus gehen wir ins kino)[01;31m)[00m
		(DM wenn)
		[01;31m(SU[00m
			(APPR bei)
			(KOUS wenn)
			(SIMPX
				[01;31m(NF[00m
					(SIMPX
						(C wenn)
						(MF die was)
						(VC anbieten))[01;31m)[00m
				[01;31m(KOORD[00m
					(KON oder)[01;31m)[00m
				(VF wir)
				(LK gehen)
				(MF in eine kneipe))
			(DM also)
			[01;31m(SIMPX[00m
				(VF ich)
				(LK wurde)
				(VC sagen)
				(NF wir brauchen das gar nicht weiter planen)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF wir)
				[01;31m(FKOORD[00m
					(LKM
						(LK kucken)
						[01;36m(MF[00m
							(MF einfach)
							[01;31m(NF[00m
								[01;31m(SIMPX[00m
									(C wie)
									(MF die sache)
									(VC lauft)
									[01;31m(NF[00m
										(ADVX
											(ADV da))[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m)
					(KON und)
					(LKMVC gehen dann abends aus)[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:UNSET add
{'subtrees': ['MF', 'NF'], 'family': ['LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'KOUS', 'ART', 'NN', 'VVFIN', 'ADV'), 'right siblings': [], 'left siblings': [(LK (VXFIN (VVFIN kucken)))], 'auto preterminal span': (39, 45), 'span': (39, 45), 'parent': 'LKM', 'label': 'MF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM okay)
			(SIMPX dann sage ich einfach mal von mir aus gehen wir ins kino)[01;31m)[00m
		(DM wenn)
		[01;31m(SU[00m
			(APPR bei)
			(KOUS wenn)
			(SIMPX
				[01;31m(NF[00m
					(SIMPX
						(C wenn)
						(MF die was)
						(VC anbieten))[01;31m)[00m
				[01;31m(KOORD[00m
					(KON oder)[01;31m)[00m
				(VF wir)
				(LK gehen)
				(MF in eine kneipe))
			(DM also)
			[01;31m(SIMPX[00m
				(VF ich)
				(LK wurde)
				(VC sagen)
				(NF wir brauchen das gar nicht weiter planen)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF wir)
				[01;31m(FKOORD[00m
					(LKM
						(LK kucken)
						(MF
							(MF einfach)
							[01;31m(NF[00m
								[01;31m(SIMPX[00m
									(C wie)
									(MF die sache)
									(VC lauft)
									[01;31m(NF[00m
										(ADVX
											(ADV da))[01;31m)[00m[01;31m)[00m[01;31m)[00m))
					(KON und)
					(LKMVC gehen dann abends aus)[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['DM', 'SIMPX'], 'family': ['SU', 'DM', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'VVFIN', 'PPER', 'ADV', 'ADV', 'APPR', 'PPER', 'APZR', 'VVFIN', 'PPER', 'APPRART', 'NN', 'KOUS', 'APPR', 'KOUS', 'KOUS', 'PDS', 'PIS', 'VVFIN', 'KON', 'PPER', 'VVFIN', 'APPR', 'ART', 'NN', 'ADV', 'PPER', 'VAFIN', 'VVINF', 'PPER', 'VVFIN', 'PDS', 'ADV', 'PTKNEG', 'ADV', 'VVINF', 'PPER', 'VVFIN', 'ADV', 'KOUS', 'ART', 'NN', 'VVFIN', 'ADV', 'KON', 'VVFIN', 'ADV', 'ADV', 'PTKVZ'), 'right siblings': ['DM', 'SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 50), 'span': (0, 13), 'left siblings': [], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(SIMPX dann sage ich einfach mal von mir aus gehen wir ins kino)
		(DM wenn)
		[01;31m(SU[00m
			(APPR bei)
			(KOUS wenn)
			(SIMPX
				[01;31m(NF[00m
					(SIMPX
						(C wenn)
						(MF die was)
						(VC anbieten))[01;31m)[00m
				[01;31m(KOORD[00m
					(KON oder)[01;31m)[00m
				(VF wir)
				(LK gehen)
				(MF in eine kneipe))
			(DM also)
			[01;31m(SIMPX[00m
				(VF ich)
				(LK wurde)
				(VC sagen)
				(NF wir brauchen das gar nicht weiter planen)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF wir)
				[01;31m(FKOORD[00m
					(LKM
						(LK kucken)
						(MF
							(MF einfach)
							[01;31m(NF[00m
								[01;31m(SIMPX[00m
									(C wie)
									(MF die sache)
									(VC lauft)
									[01;31m(NF[00m
										(ADVX
											(ADV da))[01;31m)[00m[01;31m)[00m[01;31m)[00m))
					(KON und)
					(LKMVC gehen dann abends aus)[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['APPR', 'KOUS', 'SIMPX', 'DM', 'SIMPX'], 'family': ['DM', 'SIMPX', 'DM', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'VVFIN', 'PPER', 'ADV', 'ADV', 'APPR', 'PPER', 'APZR', 'VVFIN', 'PPER', 'APPRART', 'NN', 'KOUS', 'APPR', 'KOUS', 'KOUS', 'PDS', 'PIS', 'VVFIN', 'KON', 'PPER', 'VVFIN', 'APPR', 'ART', 'NN', 'ADV', 'PPER', 'VAFIN', 'VVINF', 'PPER', 'VVFIN', 'PDS', 'ADV', 'PTKNEG', 'ADV', 'VVINF', 'PPER', 'VVFIN', 'ADV', 'KOUS', 'ART', 'NN', 'VVFIN', 'ADV', 'KON', 'VVFIN', 'ADV', 'ADV', 'PTKVZ'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 50), 'span': (14, 37), 'left siblings': ['DM', 'SIMPX', 'DM'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(SIMPX dann sage ich einfach mal von mir aus gehen wir ins kino)
		(DM wenn)
		(APPR bei)
		(KOUS wenn)
		(SIMPX
			[01;31m(NF[00m
				(SIMPX
					(C wenn)
					(MF die was)
					(VC anbieten))[01;31m)[00m
			[01;31m(KOORD[00m
				(KON oder)[01;31m)[00m
			(VF wir)
			(LK gehen)
			(MF in eine kneipe))
		(DM also)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK wurde)
			(VC sagen)
			(NF wir brauchen das gar nicht weiter planen)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF wir)
				[01;31m(FKOORD[00m
					(LKM
						(LK kucken)
						(MF
							(MF einfach)
							[01;31m(NF[00m
								[01;31m(SIMPX[00m
									(C wie)
									(MF die sache)
									(VC lauft)
									[01;31m(NF[00m
										(ADVX
											(ADV da))[01;31m)[00m[01;31m)[00m[01;31m)[00m))
					(KON und)
					(LKMVC gehen dann abends aus)[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['NF', 'KOORD', 'VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PDS', 'PIS', 'VVFIN', 'KON', 'PPER', 'VVFIN', 'APPR', 'ART', 'NN'), 'right siblings': ['KOORD', 'VF', 'LK', 'MF'], 'parent': 'SIMPX', 'auto preterminal span': (16, 26), 'span': (16, 20), 'left siblings': [], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(SIMPX dann sage ich einfach mal von mir aus gehen wir ins kino)
		(DM wenn)
		(APPR bei)
		(KOUS wenn)
		(SIMPX
			(SIMPX wenn die was anbieten)
			[01;31m(KOORD[00m
				(KON oder)[01;31m)[00m
			(VF wir)
			(LK gehen)
			(MF in eine kneipe))
		(DM also)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK wurde)
			(VC sagen)
			(NF wir brauchen das gar nicht weiter planen)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF wir)
				[01;31m(FKOORD[00m
					(LKM
						(LK kucken)
						(MF
							(MF einfach)
							[01;31m(NF[00m
								[01;31m(SIMPX[00m
									(C wie)
									(MF die sache)
									(VC lauft)
									[01;31m(NF[00m
										(ADVX
											(ADV da))[01;31m)[00m[01;31m)[00m[01;31m)[00m))
					(KON und)
					(LKMVC gehen dann abends aus)[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['SIMPX', 'KOORD', 'VF', 'LK', 'MF'], 'over_word': True, 'over words': True, 'auto preterminals': ('KOUS', 'PDS', 'PIS', 'VVFIN', 'KON', 'PPER', 'VVFIN', 'APPR', 'ART', 'NN'), 'right siblings': ['VF', 'LK', 'MF'], 'parent': 'SIMPX', 'auto preterminal span': (16, 26), 'span': (20, 21), 'left siblings': ['SIMPX'], 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(SIMPX dann sage ich einfach mal von mir aus gehen wir ins kino)
		(DM wenn)
		(APPR bei)
		(KOUS wenn)
		(SIMPX wenn die was anbieten oder wir gehen in eine kneipe)
		(DM also)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK wurde)
			(VC sagen)
			(NF wir brauchen das gar nicht weiter planen)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF wir)
				[01;31m(FKOORD[00m
					(LKM
						(LK kucken)
						(MF
							(MF einfach)
							[01;31m(NF[00m
								[01;31m(SIMPX[00m
									(C wie)
									(MF die sache)
									(VC lauft)
									[01;31m(NF[00m
										(ADVX
											(ADV da))[01;31m)[00m[01;31m)[00m[01;31m)[00m))
					(KON und)
					(LKMVC gehen dann abends aus)[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'VC', 'NF'], 'family': ['DM', 'SIMPX', 'DM', 'APPR', 'KOUS', 'SIMPX', 'DM', 'SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'VVFIN', 'PPER', 'ADV', 'ADV', 'APPR', 'PPER', 'APZR', 'VVFIN', 'PPER', 'APPRART', 'NN', 'KOUS', 'APPR', 'KOUS', 'KOUS', 'PDS', 'PIS', 'VVFIN', 'KON', 'PPER', 'VVFIN', 'APPR', 'ART', 'NN', 'ADV', 'PPER', 'VAFIN', 'VVINF', 'PPER', 'VVFIN', 'PDS', 'ADV', 'PTKNEG', 'ADV', 'VVINF', 'PPER', 'VVFIN', 'ADV', 'KOUS', 'ART', 'NN', 'VVFIN', 'ADV', 'KON', 'VVFIN', 'ADV', 'ADV', 'PTKVZ'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 50), 'span': (27, 37), 'left siblings': ['DM', 'SIMPX', 'DM', 'APPR', 'KOUS', 'SIMPX', 'DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(SIMPX dann sage ich einfach mal von mir aus gehen wir ins kino)
		(DM wenn)
		(APPR bei)
		(KOUS wenn)
		(SIMPX wenn die was anbieten oder wir gehen in eine kneipe)
		(DM also)
		(VF ich)
		(LK wurde)
		(VC sagen)
		(NF wir brauchen das gar nicht weiter planen)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF wir)
				[01;31m(FKOORD[00m
					(LKM
						(LK kucken)
						(MF
							(MF einfach)
							[01;31m(NF[00m
								[01;31m(SIMPX[00m
									(C wie)
									(MF die sache)
									(VC lauft)
									[01;31m(NF[00m
										(ADVX
											(ADV da))[01;31m)[00m[01;31m)[00m[01;31m)[00m))
					(KON und)
					(LKMVC gehen dann abends aus)[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['VF', 'FKOORD'], 'family': ['SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'KOUS', 'ART', 'NN', 'VVFIN', 'ADV', 'KON', 'VVFIN', 'ADV', 'ADV', 'PTKVZ'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (37, 50), 'span': (37, 50), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(SIMPX dann sage ich einfach mal von mir aus gehen wir ins kino)
		(DM wenn)
		(APPR bei)
		(KOUS wenn)
		(SIMPX wenn die was anbieten oder wir gehen in eine kneipe)
		(DM also)
		(VF ich)
		(LK wurde)
		(VC sagen)
		(NF wir brauchen das gar nicht weiter planen)
		[01;31m(SU[00m
			(VF wir)
			[01;31m(FKOORD[00m
				(LKM
					(LK kucken)
					(MF
						(MF einfach)
						[01;31m(NF[00m
							[01;31m(SIMPX[00m
								(C wie)
								(MF die sache)
								(VC lauft)
								[01;31m(NF[00m
									(ADVX
										(ADV da))[01;31m)[00m[01;31m)[00m[01;31m)[00m))
				(KON und)
				(LKMVC gehen dann abends aus)[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VF', 'FKOORD'], 'family': ['DM', 'SIMPX', 'DM', 'APPR', 'KOUS', 'SIMPX', 'DM', 'VF', 'LK', 'VC', 'NF', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'VVFIN', 'PPER', 'ADV', 'ADV', 'APPR', 'PPER', 'APZR', 'VVFIN', 'PPER', 'APPRART', 'NN', 'KOUS', 'APPR', 'KOUS', 'KOUS', 'PDS', 'PIS', 'VVFIN', 'KON', 'PPER', 'VVFIN', 'APPR', 'ART', 'NN', 'ADV', 'PPER', 'VAFIN', 'VVINF', 'PPER', 'VVFIN', 'PDS', 'ADV', 'PTKNEG', 'ADV', 'VVINF', 'PPER', 'VVFIN', 'ADV', 'KOUS', 'ART', 'NN', 'VVFIN', 'ADV', 'KON', 'VVFIN', 'ADV', 'ADV', 'PTKVZ'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 50), 'span': (37, 50), 'left siblings': ['DM', 'SIMPX', 'DM', 'APPR', 'KOUS', 'SIMPX', 'DM', 'VF', 'LK', 'VC', 'NF'], 'label': 'SU', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(SIMPX dann sage ich einfach mal von mir aus gehen wir ins kino)
		(DM wenn)
		(APPR bei)
		(KOUS wenn)
		(SIMPX wenn die was anbieten oder wir gehen in eine kneipe)
		(DM also)
		(VF ich)
		(LK wurde)
		(VC sagen)
		(NF wir brauchen das gar nicht weiter planen)
		(VF wir)
		[01;31m(FKOORD[00m
			(LKM
				(LK kucken)
				(MF
					(MF einfach)
					[01;31m(NF[00m
						[01;31m(SIMPX[00m
							(C wie)
							(MF die sache)
							(VC lauft)
							[01;31m(NF[00m
								(ADVX
									(ADV da))[01;31m)[00m[01;31m)[00m[01;31m)[00m))
			(KON und)
			(LKMVC gehen dann abends aus)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['LKM', 'KON', 'LKMVC'], 'family': ['DM', 'SIMPX', 'DM', 'APPR', 'KOUS', 'SIMPX', 'DM', 'VF', 'LK', 'VC', 'NF', 'VF', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'VVFIN', 'PPER', 'ADV', 'ADV', 'APPR', 'PPER', 'APZR', 'VVFIN', 'PPER', 'APPRART', 'NN', 'KOUS', 'APPR', 'KOUS', 'KOUS', 'PDS', 'PIS', 'VVFIN', 'KON', 'PPER', 'VVFIN', 'APPR', 'ART', 'NN', 'ADV', 'PPER', 'VAFIN', 'VVINF', 'PPER', 'VVFIN', 'PDS', 'ADV', 'PTKNEG', 'ADV', 'VVINF', 'PPER', 'VVFIN', 'ADV', 'KOUS', 'ART', 'NN', 'VVFIN', 'ADV', 'KON', 'VVFIN', 'ADV', 'ADV', 'PTKVZ'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 50), 'span': (38, 50), 'left siblings': ['DM', 'SIMPX', 'DM', 'APPR', 'KOUS', 'SIMPX', 'DM', 'VF', 'LK', 'VC', 'NF', 'VF'], 'label': 'FKOORD', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(SIMPX dann sage ich einfach mal von mir aus gehen wir ins kino)
		(DM wenn)
		(APPR bei)
		(KOUS wenn)
		(SIMPX wenn die was anbieten oder wir gehen in eine kneipe)
		(DM also)
		(VF ich)
		(LK wurde)
		(VC sagen)
		(NF wir brauchen das gar nicht weiter planen)
		(VF wir)
		(LKM
			(LK kucken)
			(MF
				(MF einfach)
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						(C wie)
						(MF die sache)
						(VC lauft)
						[01;31m(NF[00m
							(ADVX
								(ADV da))[01;31m)[00m[01;31m)[00m[01;31m)[00m))
		(KON und)
		(LKMVC gehen dann abends aus)))
Step:Unary
{'subtrees': ['C', 'MF', 'VC', 'NF'], 'family': ['SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'ART', 'NN', 'VVFIN', 'ADV'), 'right siblings': [], 'parent': 'NF', 'auto preterminal span': (40, 45), 'span': (40, 45), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(SIMPX dann sage ich einfach mal von mir aus gehen wir ins kino)
		(DM wenn)
		(APPR bei)
		(KOUS wenn)
		(SIMPX wenn die was anbieten oder wir gehen in eine kneipe)
		(DM also)
		(VF ich)
		(LK wurde)
		(VC sagen)
		(NF wir brauchen das gar nicht weiter planen)
		(VF wir)
		(LKM
			(LK kucken)
			(MF
				(MF einfach)
				[01;31m(NF[00m
					(C wie)
					(MF die sache)
					(VC lauft)
					[01;31m(NF[00m
						(ADVX
							(ADV da))[01;31m)[00m[01;31m)[00m))
		(KON und)
		(LKMVC gehen dann abends aus)))
Step:UNSET remove
{'subtrees': ['C', 'MF', 'VC', 'NF'], 'family': ['MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'KOUS', 'ART', 'NN', 'VVFIN', 'ADV'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (39, 45), 'span': (40, 45), 'left siblings': ['MF'], 'label': 'NF', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(SIMPX dann sage ich einfach mal von mir aus gehen wir ins kino)
		(DM wenn)
		(APPR bei)
		(KOUS wenn)
		(SIMPX wenn die was anbieten oder wir gehen in eine kneipe)
		(DM also)
		(VF ich)
		(LK wurde)
		(VC sagen)
		(NF wir brauchen das gar nicht weiter planen)
		(VF wir)
		(LKM
			(LK kucken)
			(MF
				(MF einfach)
				(C wie)
				(MF die sache)
				(VC lauft)
				[01;31m(NF[00m
					(ADVX
						(ADV da))[01;31m)[00m))
		(KON und)
		(LKMVC gehen dann abends aus)))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['MF', 'C', 'MF', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'KOUS', 'ART', 'NN', 'VVFIN', 'ADV'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (39, 45), 'span': (44, 45), 'left siblings': ['MF', 'C', 'MF', 'VC'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP okay dann sage ich einfach mal von mir aus gehen wir ins kino wenn bei wenn wenn die was anbieten oder wir gehen in eine kneipe also ich wurde sagen wir brauchen das gar nicht weiter planen wir kucken einfach wie die sache lauft da und gehen dann abends aus)

Sentence 486:
11 Initial errors
0 on fringe, 9 iterations
2 Error:Different label
2 Error:UNSET move
1 Error:Unary
1 Error:UNSET add
1 Error:Unary
1 Error:UNSET remove
1 Error:Single Word Phrase
1 Error:Single Word Phrase
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM okay)
			[01;31m(DM[00m
				[01;31m(NX[00m
					(NE peter)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF von mir aus)
				(LK hatte)
				(MF ich alles)
				[01;36m(NF[00m
					[01;36m(SIMPX[00m
						[01;36m(SIMPX[00m
							[01;36m(C[00m
								(NX
									(PRELS was))[01;36m)[00m
							(NX ich)[01;36m)[00m
						[01;36m(SIMPX[00m
							(NF
								[01;31m(R[00m
									(C was)
									(MF ich)
									(VC brauchte)[01;31m)[00m)[01;36m)[00m[01;36m)[00m[01;36m)[00m[01;31m)[00m
			(KON und)[01;31m)[00m))
Step:Different label
{'family': ['SIMPX'], 'auto preterminal span': (10, 13), 'span': (10, 13), 'subtrees': ['C', 'MF', 'VC'], 'parent': 'NF', 'over_word': False, 'auto preterminals': ('PRELS', 'PPER', 'VVFIN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('R', 'SIMPX')}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM okay)
			[01;31m(DM[00m
				[01;31m(NX[00m
					(NE peter)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF von mir aus)
				(LK hatte)
				(MF ich alles)
				[01;36m(NF[00m
					[01;36m(SIMPX[00m
						[01;36m(SIMPX[00m
							[01;36m(C[00m
								(NX
									(PRELS was))[01;36m)[00m
							(NX ich)[01;36m)[00m
						(NF was ich brauchte)[01;36m)[00m[01;36m)[00m[01;31m)[00m
			(KON und)[01;31m)[00m))
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['DM', 'DM', 'VF', 'LK', 'MF'], 'mover info': [('VF', (2, 5)), ('LK', (5, 6)), ('MF', (6, 8))], 'old_family': ['VF', 'LK', 'MF', 'NX', 'NX', 'NF'], 'start left siblings': [], 'auto preterminals': ('ITJ', 'NE', 'APPR', 'PPER', 'APZR', 'VAFIN', 'PPER', 'PIS', 'PRELS', 'PPER', 'PRELS', 'PPER', 'VVFIN', 'KON'), 'start right siblings': ['NX', 'NX', 'NF'], 'end left siblings': ['DM', 'DM'], 'auto preterminal span': (0, 14), 'movers': ['VF', 'LK', 'MF'], 'old_parent': 'SIMPX', 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM okay)
			[01;31m(DM[00m
				[01;31m(NX[00m
					(NE peter)[01;31m)[00m[01;31m)[00m
			(VF von mir aus)
			(LK hatte)
			(MF ich alles)[01;31m)[00m
		[01;31m(SU[00m
			[01;36m(NF[00m
				(SIMPX
					[01;36m(SIMPX[00m
						[01;36m(C[00m
							(NX
								(PRELS was))[01;36m)[00m
						(NX ich)[01;36m)[00m
					(NF was ich brauchte))[01;36m)[00m
			(KON und)[01;31m)[00m))
Step:Unary
{'subtrees': ['NX'], 'family': ['C', 'NX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PRELS',), 'right siblings': [(NX (PPER ich)), (NF (SIMPX (C (NX (PRELS was))) (MF (NX (PPER ich))) (VC (VXFIN (VVFIN brauchte)))))], 'left siblings': [], 'auto preterminal span': (8, 9), 'span': (8, 9), 'parent': 'SIMPX', 'label': 'C', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM okay)
			[01;31m(DM[00m
				[01;31m(NX[00m
					(NE peter)[01;31m)[00m[01;31m)[00m
			(VF von mir aus)
			(LK hatte)
			(MF ich alles)[01;31m)[00m
		[01;31m(SU[00m
			[01;36m(NF[00m
				(SIMPX
					[01;36m(SIMPX[00m
						(C was)
						(NX ich)[01;36m)[00m
					(NF was ich brauchte))[01;36m)[00m
			(KON und)[01;31m)[00m))
Step:UNSET add
{'subtrees': ['C', 'NX'], 'family': ['SIMPX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PRELS', 'PPER'), 'right siblings': [(NF (SIMPX (C (NX (PRELS was))) (MF (NX (PPER ich))) (VC (VXFIN (VVFIN brauchte)))))], 'left siblings': [], 'auto preterminal span': (8, 10), 'span': (8, 10), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM okay)
			[01;31m(DM[00m
				[01;31m(NX[00m
					(NE peter)[01;31m)[00m[01;31m)[00m
			(VF von mir aus)
			(LK hatte)
			(MF ich alles)[01;31m)[00m
		[01;31m(SU[00m
			[01;36m(NF[00m
				(SIMPX
					(SIMPX was ich)
					(NF was ich brauchte))[01;36m)[00m
			(KON und)[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['NF', 'KON'], 'over_word': False, 'over words': False, 'auto preterminals': ('PRELS', 'PPER', 'PRELS', 'PPER', 'VVFIN'), 'right siblings': [(KON und)], 'left siblings': [], 'auto preterminal span': (8, 13), 'span': (8, 13), 'parent': 'SU', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM okay)
			[01;31m(DM[00m
				[01;31m(NX[00m
					(NE peter)[01;31m)[00m[01;31m)[00m
			(VF von mir aus)
			(LK hatte)
			(MF ich alles)[01;31m)[00m
		[01;31m(SU[00m
			(NF was ich was ich brauchte)
			(KON und)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['DM', 'DM', 'VF', 'LK', 'MF'], 'family': ['SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'NE', 'APPR', 'PPER', 'APZR', 'VAFIN', 'PPER', 'PIS', 'PRELS', 'PPER', 'PRELS', 'PPER', 'VVFIN', 'KON'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 14), 'span': (0, 8), 'left siblings': [], 'label': 'SU', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		[01;31m(DM[00m
			[01;31m(NX[00m
				(NE peter)[01;31m)[00m[01;31m)[00m
		(VF von mir aus)
		(LK hatte)
		(MF ich alles)
		[01;31m(SU[00m
			(NF was ich was ich brauchte)
			(KON und)[01;31m)[00m))
Step:Single Word Phrase
{'subtrees': ['NE'], 'family': ['NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('NE',), 'right siblings': [], 'parent': 'DM', 'auto preterminal span': (1, 2), 'span': (1, 2), 'left siblings': [], 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		[01;31m(DM[00m
			(NE peter)[01;31m)[00m
		(VF von mir aus)
		(LK hatte)
		(MF ich alles)
		[01;31m(SU[00m
			(NF was ich was ich brauchte)
			(KON und)[01;31m)[00m))
Step:Single Word Phrase
{'subtrees': ['NE'], 'family': ['DM', 'DM', 'VF', 'LK', 'MF', 'SU'], 'over_word': True, 'over words': True, 'auto preterminals': ('ITJ', 'NE', 'APPR', 'PPER', 'APZR', 'VAFIN', 'PPER', 'PIS', 'PRELS', 'PPER', 'PRELS', 'PPER', 'VVFIN', 'KON'), 'right siblings': ['VF', 'LK', 'MF', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 14), 'span': (1, 2), 'left siblings': ['DM'], 'label': 'DM', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(NE peter)
		(VF von mir aus)
		(LK hatte)
		(MF ich alles)
		[01;31m(SU[00m
			(NF was ich was ich brauchte)
			(KON und)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['NF', 'KON'], 'family': ['DM', 'NE', 'VF', 'LK', 'MF', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'NE', 'APPR', 'PPER', 'APZR', 'VAFIN', 'PPER', 'PIS', 'PRELS', 'PPER', 'PRELS', 'PPER', 'VVFIN', 'KON'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 14), 'span': (8, 14), 'left siblings': ['DM', 'NE', 'VF', 'LK', 'MF'], 'label': 'SU', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP okay peter von mir aus hatte ich alles was ich was ich brauchte und)

Sentence 487:
4 Initial errors
0 on fringe, 3 iterations
2 Error:UNSET move
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;36m(SU[00m
			[01;31m(SU[00m
				(DM
					(ITJ okay))[01;31m)[00m
			[01;31m(SU[00m
				(NX
					(NX dir)
					(ADVX auch))[01;31m)[00m[01;36m)[00m
		[01;31m(SU[00m
			(DM
				(ITJ tschau))[01;31m)[00m))
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SU', 'NX'], 'mover info': [('SU', (0, 1))], 'old_family': ['SU', 'SU', 'SU'], 'start left siblings': [], 'auto preterminals': ('ITJ', 'PPER', 'ADV', 'ITJ'), 'start right siblings': ['SU', 'SU'], 'end left siblings': [], 'auto preterminal span': (0, 4), 'movers': ['SU'], 'old_parent': 'TURN', 'POS confusion': ('ITJ', 'ITJ'), 'end right siblings': ['NX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			[01;31m(SU[00m
				(DM
					(ITJ okay))[01;31m)[00m
			(NX dir auch))
		[01;31m(SU[00m
			(DM
				(ITJ tschau))[01;31m)[00m))
Step:Unary
{'subtrees': ['DM'], 'family': ['SU', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PPER', 'ADV'), 'right siblings': ['NX'], 'parent': 'SU', 'auto preterminal span': (0, 3), 'span': (0, 1), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU okay dir auch)
		[01;31m(SU[00m
			(DM
				(ITJ tschau))[01;31m)[00m))
Step:Unary
{'subtrees': ['DM'], 'family': ['SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PPER', 'ADV', 'ITJ'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 4), 'span': (3, 4), 'left siblings': ['SU'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP okay dir auch tschau)

Sentence 488:
15 Initial errors
0 on fringe, 13 iterations
2 Error:UNSET move
2 Error:UNSET move
1 Error:UNSET add
1 Error:Unary
1 Error:Unary
1 Error:Unary
1 Error:UNSET remove
1 Error:Unary
1 Error:Unary
1 Error:Clause Attachment
1 Error:UNSET remove
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP [01;33m(SIMPX[00m
	(TURN
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF das)
				(LK klingt)
				[01;31m(MF[00m
					[01;31m(ADJX[00m
						(ADVX so) [01;33mSIMPX)[00m
						(ADJD euphorisch)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(NX
				(NE hannover))[01;31m)[00m
		[01;36m(SIMPX[00m
			[01;31m(SU[00m
				(DM
					(ITJ na)
					(ITJ gut))[01;31m)[00m
			[01;31m(SU[00m
				(SIMPX
					(C wenn)
					(MF es denn)
					(VC sein mus))[01;31m)[00m[01;36m)[00m
		[01;31m(SU[00m
			(DM ja)
			[01;31m(SIMPX[00m
				(VF ich)
				(LK sage)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX es)
					(NX dir)
					(ADVX gleich)[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(NX
						(NN urlaub))[01;31m)[00m [01;33mMF)[00m
				(LK habe)
				(MF ich vom neunzehnten juli bis mitte august)[01;31m)[00m[01;31m)[00m))
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['ADJD', 'NX'], 'mover info': [('ADJD', (3, 4))], 'old_family': ['ADVX', 'ADJD'], 'start left siblings': ['ADVX'], 'auto preterminals': ('PDS', 'VVFIN', 'ADV', 'ADJD', 'NE', 'ITJ', 'ITJ', 'KOUS', 'PPER', 'ADV', 'VAINF', 'VMFIN', 'PTKANT', 'PPER', 'VVFIN', 'PPER', 'PPER', 'ADV', 'NN', 'VAFIN', 'PPER', 'APPRART', 'ADJA', 'NN', 'APPR', 'NN', 'NN'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 27), 'movers': ['ADJD'], 'old_parent': 'ADJX', 'POS confusion': ('ADJD', 'ADJD'), 'end right siblings': ['NX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK klingt)
				[01;31m(MF[00m
					[01;31m(ADJX[00m
						(ADVX
							(ADV so))[01;31m)[00m[01;31m)[00m)[01;31m)[00m
		[01;31m(SU[00m
			(ADJD euphorisch)
			(NX hannover)[01;31m)[00m
		[01;36m(SIMPX[00m
			[01;31m(SU[00m
				(DM
					(ITJ na)
					(ITJ gut))[01;31m)[00m
			[01;31m(SU[00m
				(SIMPX
					(C wenn)
					(MF es denn)
					(VC sein mus))[01;31m)[00m[01;36m)[00m
		[01;31m(SU[00m
			(DM ja)
			[01;31m(SIMPX[00m
				(VF ich)
				(LK sage)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX es)
					(NX dir)
					(ADVX gleich)[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(NX
						(NN urlaub))[01;31m)[00m [01;33mMF)[00m
				(LK habe)
				(MF ich vom neunzehnten juli bis mitte august)[01;31m)[00m[01;31m)[00m))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['NX', 'NX', 'ADVX', 'VF'], 'mover info': [('VF', (18, 19))], 'old_family': ['VF', 'LK', 'MF'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'PPER', 'VVFIN', 'PPER', 'PPER', 'ADV', 'NN', 'VAFIN', 'PPER', 'APPRART', 'ADJA', 'NN', 'APPR', 'NN', 'NN'), 'start right siblings': ['LK', 'MF'], 'end left siblings': ['NX', 'NX', 'ADVX'], 'auto preterminal span': (12, 27), 'movers': ['VF'], 'old_parent': 'SIMPX', 'POS confusion': ('NN', 'NN'), 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK klingt)
				[01;31m(MF[00m
					[01;31m(ADJX[00m
						(ADVX
							(ADV so))[01;31m)[00m[01;31m)[00m)[01;31m)[00m
		[01;31m(SU[00m
			(ADJD euphorisch)
			(NX hannover)[01;31m)[00m
		[01;36m(SIMPX[00m
			[01;31m(SU[00m
				(DM
					(ITJ na)
					(ITJ gut))[01;31m)[00m
			[01;31m(SU[00m
				(SIMPX
					(C wenn)
					(MF es denn)
					(VC sein mus))[01;31m)[00m[01;36m)[00m
		[01;31m(SU[00m
			(DM ja)
			[01;31m(SIMPX[00m
				(VF ich)
				(LK sage)
				(MF
					(NX es)
					(NX dir)
					(ADVX gleich)
					[01;31m(VF[00m
						(NX
							(NN urlaub))[01;31m)[00m)[01;31m)[00m
			[01;31m(SIMPX[00m
				(LK habe)
				(MF ich vom neunzehnten juli bis mitte august)[01;31m)[00m[01;31m)[00m))
Step:UNSET add
{'subtrees': ['SU', 'SU'], 'family': ['SU', 'SU', 'SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ITJ', 'KOUS', 'PPER', 'ADV', 'VAINF', 'VMFIN'), 'right siblings': [(SU (DM (PTKANT ja)) (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN sage))) (MF (NX (PPER es)) (NX (PPER dir)) (ADVX (ADV gleich)) (VF (NX (NN urlaub))))) (SIMPX (LK (VXFIN (VAFIN habe))) (MF (NX (PPER ich)) (PX (PX (APPRART vom) (NX (ADJX (ADJA neunzehnten)) (NN juli))) (PX (APPR bis) (NX (NX (NN mitte)) (NX (NN august))))))))], 'left siblings': [(SU (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VVFIN klingt))) (MF (ADJX (ADVX (ADV so)))))), (SU (ADJD euphorisch) (NX (NE hannover)))], 'auto preterminal span': (5, 12), 'span': (5, 12), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK klingt)
				[01;31m(MF[00m
					[01;31m(ADJX[00m
						(ADVX
							(ADV so))[01;31m)[00m[01;31m)[00m)[01;31m)[00m
		[01;31m(SU[00m
			(ADJD euphorisch)
			(NX hannover)[01;31m)[00m
		(SIMPX
			[01;31m(SU[00m
				(DM
					(ITJ na)
					(ITJ gut))[01;31m)[00m
			[01;31m(SU[00m
				(SIMPX
					(C wenn)
					(MF es denn)
					(VC sein mus))[01;31m)[00m)
		[01;31m(SU[00m
			(DM ja)
			[01;31m(SIMPX[00m
				(VF ich)
				(LK sage)
				(MF
					(NX es)
					(NX dir)
					(ADVX gleich)
					[01;31m(VF[00m
						(NX
							(NN urlaub))[01;31m)[00m)[01;31m)[00m
			[01;31m(SIMPX[00m
				(LK habe)
				(MF ich vom neunzehnten juli bis mitte august)[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SU', 'SU', 'SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VVFIN', 'ADV', 'ADJD', 'NE', 'ITJ', 'ITJ', 'KOUS', 'PPER', 'ADV', 'VAINF', 'VMFIN', 'PTKANT', 'PPER', 'VVFIN', 'PPER', 'PPER', 'ADV', 'NN', 'VAFIN', 'PPER', 'APPRART', 'ADJA', 'NN', 'APPR', 'NN', 'NN'), 'right siblings': ['SU', 'SIMPX', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 27), 'span': (0, 3), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX
			(VF das)
			(LK klingt)
			[01;31m(MF[00m
				[01;31m(ADJX[00m
					(ADVX
						(ADV so))[01;31m)[00m[01;31m)[00m)
		[01;31m(SU[00m
			(ADJD euphorisch)
			(NX hannover)[01;31m)[00m
		(SIMPX
			[01;31m(SU[00m
				(DM
					(ITJ na)
					(ITJ gut))[01;31m)[00m
			[01;31m(SU[00m
				(SIMPX
					(C wenn)
					(MF es denn)
					(VC sein mus))[01;31m)[00m)
		[01;31m(SU[00m
			(DM ja)
			[01;31m(SIMPX[00m
				(VF ich)
				(LK sage)
				(MF
					(NX es)
					(NX dir)
					(ADVX gleich)
					[01;31m(VF[00m
						(NX
							(NN urlaub))[01;31m)[00m)[01;31m)[00m
			[01;31m(SIMPX[00m
				(LK habe)
				(MF ich vom neunzehnten juli bis mitte august)[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV',), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (2, 3), 'span': (2, 3), 'left siblings': [], 'label': 'ADJX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX
			(VF das)
			(LK klingt)
			[01;31m(MF[00m
				(ADVX
					(ADV so))[01;31m)[00m)
		[01;31m(SU[00m
			(ADJD euphorisch)
			(NX hannover)[01;31m)[00m
		(SIMPX
			[01;31m(SU[00m
				(DM
					(ITJ na)
					(ITJ gut))[01;31m)[00m
			[01;31m(SU[00m
				(SIMPX
					(C wenn)
					(MF es denn)
					(VC sein mus))[01;31m)[00m)
		[01;31m(SU[00m
			(DM ja)
			[01;31m(SIMPX[00m
				(VF ich)
				(LK sage)
				(MF
					(NX es)
					(NX dir)
					(ADVX gleich)
					[01;31m(VF[00m
						(NX
							(NN urlaub))[01;31m)[00m)[01;31m)[00m
			[01;31m(SIMPX[00m
				(LK habe)
				(MF ich vom neunzehnten juli bis mitte august)[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VVFIN', 'ADV'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (0, 3), 'span': (2, 3), 'left siblings': ['VF', 'LK'], 'label': 'MF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX das klingt so)
		[01;31m(SU[00m
			(ADJD euphorisch)
			(NX hannover)[01;31m)[00m
		(SIMPX
			[01;31m(SU[00m
				(DM
					(ITJ na)
					(ITJ gut))[01;31m)[00m
			[01;31m(SU[00m
				(SIMPX
					(C wenn)
					(MF es denn)
					(VC sein mus))[01;31m)[00m)
		[01;31m(SU[00m
			(DM ja)
			[01;31m(SIMPX[00m
				(VF ich)
				(LK sage)
				(MF
					(NX es)
					(NX dir)
					(ADVX gleich)
					[01;31m(VF[00m
						(NX
							(NN urlaub))[01;31m)[00m)[01;31m)[00m
			[01;31m(SIMPX[00m
				(LK habe)
				(MF ich vom neunzehnten juli bis mitte august)[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['ADJD', 'NX'], 'family': ['SIMPX', 'SU', 'SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VVFIN', 'ADV', 'ADJD', 'NE', 'ITJ', 'ITJ', 'KOUS', 'PPER', 'ADV', 'VAINF', 'VMFIN', 'PTKANT', 'PPER', 'VVFIN', 'PPER', 'PPER', 'ADV', 'NN', 'VAFIN', 'PPER', 'APPRART', 'ADJA', 'NN', 'APPR', 'NN', 'NN'), 'right siblings': ['SIMPX', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 27), 'span': (3, 5), 'left siblings': ['SIMPX'], 'label': 'SU', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX das klingt so)
		(ADJD euphorisch)
		(NX hannover)
		(SIMPX
			[01;31m(SU[00m
				(DM
					(ITJ na)
					(ITJ gut))[01;31m)[00m
			[01;31m(SU[00m
				(SIMPX
					(C wenn)
					(MF es denn)
					(VC sein mus))[01;31m)[00m)
		[01;31m(SU[00m
			(DM ja)
			[01;31m(SIMPX[00m
				(VF ich)
				(LK sage)
				(MF
					(NX es)
					(NX dir)
					(ADVX gleich)
					[01;31m(VF[00m
						(NX
							(NN urlaub))[01;31m)[00m)[01;31m)[00m
			[01;31m(SIMPX[00m
				(LK habe)
				(MF ich vom neunzehnten juli bis mitte august)[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['DM'], 'family': ['SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ITJ', 'KOUS', 'PPER', 'ADV', 'VAINF', 'VMFIN'), 'right siblings': ['SU'], 'parent': 'SIMPX', 'auto preterminal span': (5, 12), 'span': (5, 7), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX das klingt so)
		(ADJD euphorisch)
		(NX hannover)
		(SIMPX
			(DM na gut)
			[01;31m(SU[00m
				(SIMPX
					(C wenn)
					(MF es denn)
					(VC sein mus))[01;31m)[00m)
		[01;31m(SU[00m
			(DM ja)
			[01;31m(SIMPX[00m
				(VF ich)
				(LK sage)
				(MF
					(NX es)
					(NX dir)
					(ADVX gleich)
					[01;31m(VF[00m
						(NX
							(NN urlaub))[01;31m)[00m)[01;31m)[00m
			[01;31m(SIMPX[00m
				(LK habe)
				(MF ich vom neunzehnten juli bis mitte august)[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['DM', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ITJ', 'KOUS', 'PPER', 'ADV', 'VAINF', 'VMFIN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (5, 12), 'span': (7, 12), 'left siblings': ['DM'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX das klingt so)
		(ADJD euphorisch)
		(NX hannover)
		(SIMPX na gut wenn es denn sein mus)
		[01;31m(SU[00m
			(DM ja)
			[01;31m(SIMPX[00m
				(VF ich)
				(LK sage)
				(MF
					(NX es)
					(NX dir)
					(ADVX gleich)
					[01;31m(VF[00m
						(NX
							(NN urlaub))[01;31m)[00m)[01;31m)[00m
			[01;31m(SIMPX[00m
				(LK habe)
				(MF ich vom neunzehnten juli bis mitte august)[01;31m)[00m[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['DM', 'SIMPX', 'SIMPX'], 'family': ['SIMPX', 'ADJD', 'NX', 'SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VVFIN', 'ADV', 'ADJD', 'NE', 'ITJ', 'ITJ', 'KOUS', 'PPER', 'ADV', 'VAINF', 'VMFIN', 'PTKANT', 'PPER', 'VVFIN', 'PPER', 'PPER', 'ADV', 'NN', 'VAFIN', 'PPER', 'APPRART', 'ADJA', 'NN', 'APPR', 'NN', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 27), 'span': (12, 27), 'left siblings': ['SIMPX', 'ADJD', 'NX', 'SIMPX'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX das klingt so)
		(ADJD euphorisch)
		(NX hannover)
		(SIMPX na gut wenn es denn sein mus)
		(DM ja)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK sage)
			(MF
				(NX es)
				(NX dir)
				(ADVX gleich)
				[01;31m(VF[00m
					(NX
						(NN urlaub))[01;31m)[00m)[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK habe)
			(MF ich vom neunzehnten juli bis mitte august)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['SIMPX', 'ADJD', 'NX', 'SIMPX', 'DM', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VVFIN', 'ADV', 'ADJD', 'NE', 'ITJ', 'ITJ', 'KOUS', 'PPER', 'ADV', 'VAINF', 'VMFIN', 'PTKANT', 'PPER', 'VVFIN', 'PPER', 'PPER', 'ADV', 'NN', 'VAFIN', 'PPER', 'APPRART', 'ADJA', 'NN', 'APPR', 'NN', 'NN'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 27), 'span': (13, 19), 'left siblings': ['SIMPX', 'ADJD', 'NX', 'SIMPX', 'DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX das klingt so)
		(ADJD euphorisch)
		(NX hannover)
		(SIMPX na gut wenn es denn sein mus)
		(DM ja)
		(VF ich)
		(LK sage)
		(MF
			(NX es)
			(NX dir)
			(ADVX gleich)
			[01;31m(VF[00m
				(NX
					(NN urlaub))[01;31m)[00m)
		[01;31m(SIMPX[00m
			(LK habe)
			(MF ich vom neunzehnten juli bis mitte august)[01;31m)[00m))
Step:Unary
{'subtrees': ['NX'], 'family': ['NX', 'NX', 'ADVX', 'VF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'PPER', 'ADV', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (15, 19), 'span': (18, 19), 'left siblings': ['NX', 'NX', 'ADVX'], 'label': 'VF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX das klingt so)
		(ADJD euphorisch)
		(NX hannover)
		(SIMPX na gut wenn es denn sein mus)
		(DM ja)
		(VF ich)
		(LK sage)
		(MF es dir gleich urlaub)
		[01;31m(SIMPX[00m
			(LK habe)
			(MF ich vom neunzehnten juli bis mitte august)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['SIMPX', 'ADJD', 'NX', 'SIMPX', 'DM', 'VF', 'LK', 'MF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VVFIN', 'ADV', 'ADJD', 'NE', 'ITJ', 'ITJ', 'KOUS', 'PPER', 'ADV', 'VAINF', 'VMFIN', 'PTKANT', 'PPER', 'VVFIN', 'PPER', 'PPER', 'ADV', 'NN', 'VAFIN', 'PPER', 'APPRART', 'ADJA', 'NN', 'APPR', 'NN', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 27), 'span': (19, 27), 'left siblings': ['SIMPX', 'ADJD', 'NX', 'SIMPX', 'DM', 'VF', 'LK', 'MF'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP das klingt so euphorisch hannover na gut wenn es denn sein mus ja ich sage es dir gleich urlaub habe ich vom neunzehnten juli bis mitte august)

Sentence 489:
10 Initial errors
0 on fringe, 7 iterations
3 Error:UNSET move
2 Error:Different label
1 Error:Unary
1 Error:UNSET remove
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SU[00m
	(TOP
		(TURN
			[01;36m(SIMPX[00m [01;31m(SU[00m
				[01;31m(SIMPX[00m
					(KOORD und)
					(VF ich)
					(LK sage)
					[01;31m(MF[00m [01;33m(MF[00m
						(NX es)
						(NX dir)
						[01;33m(PX[00m (ADVX gleich)[01;31m)[00m[01;31m)[00m
				[01;31m(SIMPX[00m
					[01;31m(VF[00m
						[01;31m(PX[00m
							(APPRART im)
							(NX juli)[01;31m)[00m[01;31m)[00m [01;33mPX) MF)[00m
					(LK wird)
					(MF es etwas knapp)[01;31m)[00m[01;31m)[00m[01;36m)[00m
			(SU da ginge nur noch der neunte zehnte)))[01;36m)[00m
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['NX', 'NX', 'ADVX', 'VF'], 'mover info': [('VF', (6, 8))], 'old_family': ['VF', 'LK', 'MF'], 'start left siblings': [], 'auto preterminals': ('KON', 'PPER', 'VVFIN', 'PPER', 'PPER', 'ADV', 'APPRART', 'NN', 'VAFIN', 'PPER', 'ADV', 'ADJD'), 'start right siblings': ['LK', 'MF'], 'end left siblings': ['NX', 'NX', 'ADVX'], 'auto preterminal span': (0, 12), 'adding node already present': False, 'movers': ['VF'], 'old_parent': 'SIMPX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'PX'}
[01;36m(SU[00m
	(TOP
		(TURN
			[01;36m(SIMPX[00m [01;31m(SU[00m
				[01;31m(SIMPX[00m
					(KOORD und)
					(VF ich)
					(LK sage)
					(MF
						(NX es)
						(NX dir)
						(PX
							(ADVX gleich)
							[01;31m(VF[00m
								[01;31m(PX[00m
									(APPRART im)
									(NX juli)[01;31m)[00m[01;31m)[00m))[01;31m)[00m
				[01;31m(SIMPX[00m
					(LK wird)
					(MF es etwas knapp)[01;31m)[00m[01;31m)[00m[01;36m)[00m
			(SU da ginge nur noch der neunte zehnte)))[01;36m)[00m
Step:Different label
{'family': ['SIMPX', 'SU'], 'auto preterminal span': (0, 12), 'span': (0, 12), 'subtrees': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'over_word': False, 'auto preterminals': ('KON', 'PPER', 'VVFIN', 'PPER', 'PPER', 'ADV', 'APPRART', 'NN', 'VAFIN', 'PPER', 'ADV', 'ADJD'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('SU', 'SIMPX')}
[01;36m(SU[00m
	(TOP
		(TURN
			(SIMPX
				[01;31m(SIMPX[00m
					(KOORD und)
					(VF ich)
					(LK sage)
					(MF
						(NX es)
						(NX dir)
						(PX
							(ADVX gleich)
							[01;31m(VF[00m
								[01;31m(PX[00m
									(APPRART im)
									(NX juli)[01;31m)[00m[01;31m)[00m))[01;31m)[00m
				[01;31m(SIMPX[00m
					(LK wird)
					(MF es etwas knapp)[01;31m)[00m)
			(SU da ginge nur noch der neunte zehnte)))[01;36m)[00m
Step:Unary
{'subtrees': ['TURN'], 'family': ['SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'PPER', 'VVFIN', 'PPER', 'PPER', 'ADV', 'APPRART', 'NN', 'VAFIN', 'PPER', 'ADV', 'ADJD', 'ADV', 'VVFIN', 'ADV', 'ADV', 'ART', 'NN', 'NN'), 'right siblings': [], 'left siblings': [], 'auto preterminal span': (0, 19), 'span': (0, 19), 'parent': 'TOP', 'label': 'SU', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(SU
		(TURN
			(SIMPX
				[01;31m(SIMPX[00m
					(KOORD und)
					(VF ich)
					(LK sage)
					(MF
						(NX es)
						(NX dir)
						(PX
							(ADVX gleich)
							[01;31m(VF[00m
								[01;31m(PX[00m
									(APPRART im)
									(NX juli)[01;31m)[00m[01;31m)[00m))[01;31m)[00m
				[01;31m(SIMPX[00m
					(LK wird)
					(MF es etwas knapp)[01;31m)[00m)
			(SU da ginge nur noch der neunte zehnte))))
Step:UNSET remove
{'subtrees': ['KOORD', 'VF', 'LK', 'MF'], 'family': ['SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'PPER', 'VVFIN', 'PPER', 'PPER', 'ADV', 'APPRART', 'NN', 'VAFIN', 'PPER', 'ADV', 'ADJD'), 'right siblings': ['SIMPX'], 'parent': 'SIMPX', 'auto preterminal span': (0, 12), 'span': (0, 8), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(SU
		(TURN
			(SIMPX
				(KOORD und)
				(VF ich)
				(LK sage)
				(MF
					(NX es)
					(NX dir)
					(PX
						(ADVX gleich)
						[01;31m(VF[00m
							[01;31m(PX[00m
								(APPRART im)
								(NX juli)[01;31m)[00m[01;31m)[00m))
				[01;31m(SIMPX[00m
					(LK wird)
					(MF es etwas knapp)[01;31m)[00m)
			(SU da ginge nur noch der neunte zehnte))))
Step:Unary
{'subtrees': ['APPRART', 'NX'], 'family': ['PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'NN'), 'right siblings': [], 'parent': 'VF', 'auto preterminal span': (6, 8), 'span': (6, 8), 'left siblings': [], 'label': 'PX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(SU
		(TURN
			(SIMPX
				(KOORD und)
				(VF ich)
				(LK sage)
				(MF
					(NX es)
					(NX dir)
					(PX
						(ADVX gleich)
						[01;31m(VF[00m
							(APPRART im)
							(NX juli)[01;31m)[00m))
				[01;31m(SIMPX[00m
					(LK wird)
					(MF es etwas knapp)[01;31m)[00m)
			(SU da ginge nur noch der neunte zehnte))))
Step:UNSET remove
{'subtrees': ['APPRART', 'NX'], 'family': ['ADVX', 'VF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'APPRART', 'NN'), 'right siblings': [], 'parent': 'PX', 'auto preterminal span': (5, 8), 'span': (6, 8), 'left siblings': ['ADVX'], 'label': 'VF', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(SU
		(TURN
			(SIMPX
				(KOORD und)
				(VF ich)
				(LK sage)
				(MF es dir gleich im juli)
				[01;31m(SIMPX[00m
					(LK wird)
					(MF es etwas knapp)[01;31m)[00m)
			(SU da ginge nur noch der neunte zehnte))))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['KOORD', 'VF', 'LK', 'MF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'PPER', 'VVFIN', 'PPER', 'PPER', 'ADV', 'APPRART', 'NN', 'VAFIN', 'PPER', 'ADV', 'ADJD'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (0, 12), 'span': (8, 12), 'left siblings': ['KOORD', 'VF', 'LK', 'MF'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP und ich sage es dir gleich im juli wird es etwas knapp da ginge nur noch der neunte zehnte)

Sentence 490:
7 Initial errors
0 on fringe, 2 iterations
6 Error:UNSET move
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU tja ist doch klasse)
		[01;36m(SU[00m
			[01;36m(SIMPX[00m
				[01;31m(SU[00m
					[01;31m(SIMPX[00m
						(LK machen)
						[01;31m(MF[00m [01;33m(MF[00m
							(NX wir)
							(NX das)
							(ADVX doch)[01;31m)[00m[01;31m)[00m[01;31m)[00m
				[01;31m(SU[00m
					(NX
						(NE hannover))[01;31m)[00m[01;36m)[00m[01;36m)[00m)) [01;33mMF)[00m
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['NX', 'NX', 'ADVX', 'SU'], 'mover info': [('SU', (8, 9))], 'old_family': ['SU', 'SU', 'SU'], 'start left siblings': ['SU', 'SU'], 'auto preterminals': ('ITJ', 'VAFIN', 'ADV', 'ADJD', 'VVFIN', 'PPER', 'PDS', 'ADV', 'NE'), 'start right siblings': [], 'end left siblings': ['NX', 'NX', 'ADVX'], 'auto preterminal span': (0, 9), 'movers': ['SU'], 'old_parent': 'TURN', 'POS confusion': ('NE', 'NE'), 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU tja ist doch klasse)
		(SU
			(SIMPX
				(LK machen)
				(MF
					(NX wir)
					(NX das)
					(ADVX doch)
					[01;31m(SU[00m
						(NX
							(NE hannover))[01;31m)[00m)))))
Step:Unary
{'subtrees': ['NX'], 'family': ['NX', 'NX', 'ADVX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'PDS', 'ADV', 'NE'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (5, 9), 'span': (8, 9), 'left siblings': ['NX', 'NX', 'ADVX'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP tja ist doch klasse machen wir das doch hannover)

Sentence 491:
2 Initial errors
0 on fringe, 2 iterations
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(SIMPX
				(VF du)
				(LK kennst)
				(MF mich doch))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK ist)
				(MF nicht meine zeit))[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'PPER', 'ADV', 'PDS', 'VAFIN', 'PTKNEG', 'PPOSAT', 'NN'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 9), 'span': (0, 4), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX du kennst mich doch)
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK ist)
				(MF nicht meine zeit))[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'PPER', 'ADV', 'PDS', 'VAFIN', 'PTKNEG', 'PPOSAT', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 9), 'span': (4, 9), 'left siblings': ['SIMPX'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP du kennst mich doch das ist nicht meine zeit)

Sentence 492:
31 Initial errors
0 on fringe, 24 iterations
4 Error:Co-ordination
2 Error:Single Word Phrase
2 Error:Single Word Phrase
2 Error:NP Attachment
2 Error:NP Attachment
1 Error:PP Attachment
1 Error:UNSET add
1 Error:Unary
1 Error:UNSET add
1 Error:Clause Attachment
1 Error:UNSET remove
1 Error:Unary
1 Error:Unary
1 Error:Unary
1 Error:PP Attachment
1 Error:PP Attachment
1 Error:PP Attachment
1 Error:NP Internal Structure
1 Error:PP Attachment
1 Error:Unary
1 Error:UNSET remove
1 Error:NP Internal Structure
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU brauchen wir nur noch ein hotel)
		[01;31m(SU[00m
			(DM ach)
			[01;31m(SIMPX[00m
				(VF hotels)
				(LK habe)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX
						(PPER ich))[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;36m(ADVX[00m [01;31m(SU[00m
			[01;31m(DM[00m
				(PTKANT ja)[01;31m)[00m[01;31m)[00m[01;36m)[00m
		[01;31m(SU[00m [01;33m(NX[00m
			(NX
				(ADJX zwei)
				(NN moglichkeiten))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(NX[00m
				(NX hundert zweiundvierzig mark) [01;33mNX)[00m
				(PX im zentrum)[01;31m)[00m [01;33mMF)[00m
			[01;31m(NX[00m [01;33m(NX[00m
				(NX hundert funfunddreisig mark)
				[01;31m(PX[00m
					(NX funf minuten) [01;33mNX)[00m
					[01;33m(PX[00m (PX vom bahnhof)[01;31m)[00m
				(PX mit garage)[01;31m)[00m[01;31m)[00m [01;33mPX)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK brauchen)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX wir)
					(ADVX eh)
					(ADVX nicht)[01;31m)[00m[01;31m)[00m
			(NX
				(ADVX so)
				[01;31m(NX[00m
					(ART ein)
					(NN quatsch)[01;31m)[00m)[01;31m)[00m [01;33mMF)[00m
		[01;31m(SU[00m
			[01;31m(NX[00m
				(KON und)
				[01;36m(NX[00m
					[01;33m(NX[00m (ADVX einmal)
					[01;31m(NX[00m
						[01;31m(NX[00m
							(ADJX hundert sechsundachtzig)
							(NN mark)[01;31m)[00m [01;33mNX)[00m
						(PX mit schwimmbad)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
		[01;36m(SU[00m
			[01;36m(SIMPX[00m
				(SU
					(SIMPX
						(LK hast)
						[01;36m(MF[00m
							(MF du aber eh keine zeit)
							[01;36m(ADVX[00m
								(NF
									[01;31m(PX[00m
										(PROP dafur)[01;31m)[00m)[01;36m)[00m[01;36m)[00m))
				(SU was steckt)[01;36m)[00m[01;36m)[00m))
Step:Co-ordination
{'new_parent': 'NX', 'new_family': ['ADVX', 'ADJX', 'NN'], 'mover info': [('ADVX', (35, 36))], 'old_family': ['KON', 'ADVX', 'NX'], 'start left siblings': ['KON'], 'auto preterminals': ('KON', 'ADV', 'CARD', 'CARD', 'NN', 'APPR', 'NN'), 'start right siblings': ['NX'], 'end left siblings': [], 'auto preterminal span': (34, 41), 'movers': ['ADVX'], 'old_parent': 'NX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['ADJX', 'NN'], 'classified_type': 'Co-ordination', 'type': 'move'}
(TOP
	(TURN
		(SU brauchen wir nur noch ein hotel)
		[01;31m(SU[00m
			(DM ach)
			[01;31m(SIMPX[00m
				(VF hotels)
				(LK habe)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX
						(PPER ich))[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;36m(ADVX[00m [01;31m(SU[00m
			[01;31m(DM[00m
				(PTKANT ja)[01;31m)[00m[01;31m)[00m[01;36m)[00m
		[01;31m(SU[00m [01;33m(NX[00m
			(NX
				(ADJX zwei)
				(NN moglichkeiten))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(NX[00m
				(NX hundert zweiundvierzig mark) [01;33mNX)[00m
				(PX im zentrum)[01;31m)[00m [01;33mMF)[00m
			[01;31m(NX[00m [01;33m(NX[00m
				(NX hundert funfunddreisig mark)
				[01;31m(PX[00m
					(NX funf minuten) [01;33mNX)[00m
					[01;33m(PX[00m (PX vom bahnhof)[01;31m)[00m
				(PX mit garage)[01;31m)[00m[01;31m)[00m [01;33mPX)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK brauchen)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX wir)
					(ADVX eh)
					(ADVX nicht)[01;31m)[00m[01;31m)[00m
			(NX
				(ADVX so)
				[01;31m(NX[00m
					(ART ein)
					(NN quatsch)[01;31m)[00m)[01;31m)[00m [01;33mMF)[00m
		[01;31m(SU[00m
			[01;31m(NX[00m
				(KON und)
				(NX einmal hundert sechsundachtzig mark mit schwimmbad)[01;31m)[00m[01;31m)[00m
		[01;36m(SU[00m
			[01;36m(SIMPX[00m
				(SU
					(SIMPX
						(LK hast)
						[01;36m(MF[00m
							(MF du aber eh keine zeit)
							[01;36m(ADVX[00m
								(NF
									[01;31m(PX[00m
										(PROP dafur)[01;31m)[00m)[01;36m)[00m[01;36m)[00m))
				(SU was steckt)[01;36m)[00m[01;36m)[00m))
Step:Single Word Phrase
{'family': ['ADVX'], 'auto preterminal span': (10, 11), 'span': (10, 11), 'subtrees': ['PTKANT'], 'parent': 'SU', 'over_word': True, 'auto preterminals': ('PTKANT',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('DM', 'ADVX')}
(TOP
	(TURN
		(SU brauchen wir nur noch ein hotel)
		[01;31m(SU[00m
			(DM ach)
			[01;31m(SIMPX[00m
				(VF hotels)
				(LK habe)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX
						(PPER ich))[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(ADVX
				(PTKANT ja))[01;31m)[00m
		[01;31m(SU[00m [01;33m(NX[00m
			(NX
				(ADJX zwei)
				(NN moglichkeiten))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(NX[00m
				(NX hundert zweiundvierzig mark) [01;33mNX)[00m
				(PX im zentrum)[01;31m)[00m [01;33mMF)[00m
			[01;31m(NX[00m [01;33m(NX[00m
				(NX hundert funfunddreisig mark)
				[01;31m(PX[00m
					(NX funf minuten) [01;33mNX)[00m
					[01;33m(PX[00m (PX vom bahnhof)[01;31m)[00m
				(PX mit garage)[01;31m)[00m[01;31m)[00m [01;33mPX)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK brauchen)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX wir)
					(ADVX eh)
					(ADVX nicht)[01;31m)[00m[01;31m)[00m
			(NX
				(ADVX so)
				[01;31m(NX[00m
					(ART ein)
					(NN quatsch)[01;31m)[00m)[01;31m)[00m [01;33mMF)[00m
		[01;31m(SU[00m
			[01;31m(NX[00m
				(KON und)
				(NX einmal hundert sechsundachtzig mark mit schwimmbad)[01;31m)[00m[01;31m)[00m
		[01;36m(SU[00m
			[01;36m(SIMPX[00m
				(SU
					(SIMPX
						(LK hast)
						[01;36m(MF[00m
							(MF du aber eh keine zeit)
							[01;36m(ADVX[00m
								(NF
									[01;31m(PX[00m
										(PROP dafur)[01;31m)[00m)[01;36m)[00m[01;36m)[00m))
				(SU was steckt)[01;36m)[00m[01;36m)[00m))
Step:Single Word Phrase
{'family': ['ADVX'], 'auto preterminal span': (47, 48), 'span': (47, 48), 'subtrees': ['PROP'], 'parent': 'NF', 'over_word': True, 'auto preterminals': ('PROP',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('PX', 'ADVX')}
(TOP
	(TURN
		(SU brauchen wir nur noch ein hotel)
		[01;31m(SU[00m
			(DM ach)
			[01;31m(SIMPX[00m
				(VF hotels)
				(LK habe)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX
						(PPER ich))[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(ADVX
				(PTKANT ja))[01;31m)[00m
		[01;31m(SU[00m [01;33m(NX[00m
			(NX
				(ADJX zwei)
				(NN moglichkeiten))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(NX[00m
				(NX hundert zweiundvierzig mark) [01;33mNX)[00m
				(PX im zentrum)[01;31m)[00m [01;33mMF)[00m
			[01;31m(NX[00m [01;33m(NX[00m
				(NX hundert funfunddreisig mark)
				[01;31m(PX[00m
					(NX funf minuten) [01;33mNX)[00m
					[01;33m(PX[00m (PX vom bahnhof)[01;31m)[00m
				(PX mit garage)[01;31m)[00m[01;31m)[00m [01;33mPX)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK brauchen)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX wir)
					(ADVX eh)
					(ADVX nicht)[01;31m)[00m[01;31m)[00m
			(NX
				(ADVX so)
				[01;31m(NX[00m
					(ART ein)
					(NN quatsch)[01;31m)[00m)[01;31m)[00m [01;33mMF)[00m
		[01;31m(SU[00m
			[01;31m(NX[00m
				(KON und)
				(NX einmal hundert sechsundachtzig mark mit schwimmbad)[01;31m)[00m[01;31m)[00m
		[01;36m(SU[00m
			[01;36m(SIMPX[00m
				(SU
					(SIMPX
						(LK hast)
						[01;36m(MF[00m
							(MF du aber eh keine zeit)
							(NF dafur)[01;36m)[00m))
				(SU was steckt)[01;36m)[00m[01;36m)[00m))
Step:NP Attachment
{'new_parent': 'NX', 'new_family': ['NX', 'NX', 'PX', 'PX'], 'mover info': [('NX', (21, 23))], 'old_family': ['NX', 'PX'], 'start left siblings': [], 'auto preterminals': ('CARD', 'CARD', 'NN', 'CARD', 'NN', 'APPRART', 'NN', 'APPR', 'NN'), 'start right siblings': ['PX'], 'end left siblings': ['NX'], 'auto preterminal span': (18, 27), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'PX', 'added and moved': True, 'end right siblings': ['PX', 'PX'], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'MF'}
(TOP
	(TURN
		(SU brauchen wir nur noch ein hotel)
		[01;31m(SU[00m
			(DM ach)
			[01;31m(SIMPX[00m
				(VF hotels)
				(LK habe)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX
						(PPER ich))[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(ADVX
				(PTKANT ja))[01;31m)[00m
		[01;31m(SU[00m [01;33m(NX[00m
			(NX
				(ADJX zwei)
				(NN moglichkeiten))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(NX[00m
				(NX hundert zweiundvierzig mark) [01;33mNX)[00m
				(PX im zentrum)[01;31m)[00m [01;33mMF)[00m
			[01;31m(NX[00m
				(NX hundert funfunddreisig mark funf minuten)
				[01;36m(PX[00m
					(PX vom bahnhof)
					(PX mit garage)[01;36m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK brauchen)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX wir)
					(ADVX eh)
					(ADVX nicht)[01;31m)[00m[01;31m)[00m
			(NX
				(ADVX so)
				[01;31m(NX[00m
					(ART ein)
					(NN quatsch)[01;31m)[00m)[01;31m)[00m [01;33mMF)[00m
		[01;31m(SU[00m
			[01;31m(NX[00m
				(KON und)
				(NX einmal hundert sechsundachtzig mark mit schwimmbad)[01;31m)[00m[01;31m)[00m
		[01;36m(SU[00m
			[01;36m(SIMPX[00m
				(SU
					(SIMPX
						(LK hast)
						[01;36m(MF[00m
							(MF du aber eh keine zeit)
							(NF dafur)[01;36m)[00m))
				(SU was steckt)[01;36m)[00m[01;36m)[00m))
Step:NP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'ADVX', 'ADVX', 'NX'], 'mover info': [('NX', (31, 34))], 'old_family': ['SIMPX', 'NX'], 'start left siblings': ['SIMPX'], 'auto preterminals': ('VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADV', 'ART', 'NN'), 'start right siblings': [], 'end left siblings': ['NX', 'ADVX', 'ADVX'], 'auto preterminal span': (27, 34), 'movers': ['NX'], 'old_parent': 'SU', 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU brauchen wir nur noch ein hotel)
		[01;31m(SU[00m
			(DM ach)
			[01;31m(SIMPX[00m
				(VF hotels)
				(LK habe)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX
						(PPER ich))[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(ADVX
				(PTKANT ja))[01;31m)[00m
		[01;31m(SU[00m [01;33m(NX[00m
			(NX
				(ADJX zwei)
				(NN moglichkeiten))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(NX[00m
				(NX hundert zweiundvierzig mark) [01;33mNX)[00m
				(PX im zentrum)[01;31m)[00m [01;33mMF)[00m
			[01;31m(NX[00m
				(NX hundert funfunddreisig mark funf minuten)
				[01;36m(PX[00m
					(PX vom bahnhof)
					(PX mit garage)[01;36m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK brauchen)
				(MF
					(NX wir)
					(ADVX eh)
					(ADVX nicht)
					(NX
						(ADVX so)
						[01;31m(NX[00m
							(ART ein)
							(NN quatsch)[01;31m)[00m))[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(NX[00m
				(KON und)
				(NX einmal hundert sechsundachtzig mark mit schwimmbad)[01;31m)[00m[01;31m)[00m
		[01;36m(SU[00m
			[01;36m(SIMPX[00m
				(SU
					(SIMPX
						(LK hast)
						[01;36m(MF[00m
							(MF du aber eh keine zeit)
							(NF dafur)[01;36m)[00m))
				(SU was steckt)[01;36m)[00m[01;36m)[00m))
Step:PP Attachment
{'subtrees': ['PX', 'PX'], 'family': ['NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'NN', 'APPR', 'NN'), 'right siblings': [], 'left siblings': [(NX (NX (ADJX (CARD hundert) (CARD funfunddreisig)) (NN mark)) (NX (ADJX (CARD funf)) (NN minuten)))], 'auto preterminal span': (23, 27), 'span': (23, 27), 'parent': 'NX', 'label': 'PX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU brauchen wir nur noch ein hotel)
		[01;31m(SU[00m
			(DM ach)
			[01;31m(SIMPX[00m
				(VF hotels)
				(LK habe)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX
						(PPER ich))[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(ADVX
				(PTKANT ja))[01;31m)[00m
		[01;31m(SU[00m [01;33m(NX[00m
			(NX
				(ADJX zwei)
				(NN moglichkeiten))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(NX[00m
				(NX hundert zweiundvierzig mark) [01;33mNX)[00m
				(PX im zentrum)[01;31m)[00m [01;33mMF)[00m
			[01;31m(NX[00m
				(NX hundert funfunddreisig mark funf minuten)
				(PX vom bahnhof mit garage)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK brauchen)
				(MF
					(NX wir)
					(ADVX eh)
					(ADVX nicht)
					(NX
						(ADVX so)
						[01;31m(NX[00m
							(ART ein)
							(NN quatsch)[01;31m)[00m))[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(NX[00m
				(KON und)
				(NX einmal hundert sechsundachtzig mark mit schwimmbad)[01;31m)[00m[01;31m)[00m
		[01;36m(SU[00m
			[01;36m(SIMPX[00m
				(SU
					(SIMPX
						(LK hast)
						[01;36m(MF[00m
							(MF du aber eh keine zeit)
							(NF dafur)[01;36m)[00m))
				(SU was steckt)[01;36m)[00m[01;36m)[00m))
Step:UNSET add
{'subtrees': ['SU', 'SU'], 'family': ['SU', 'SU', 'SU', 'SU', 'SU', 'SU', 'SU', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'PPER', 'ADV', 'ADV', 'PIAT', 'NN', 'PROP', 'PWS', 'VVFIN'), 'right siblings': [], 'left siblings': [(SU (SIMPX (LK (VXFIN (VVFIN brauchen))) (MF (NX (PPER wir)) (ADVX (ADV nur)) (ADVX (ADV noch)) (NX (ART ein) (NN hotel))))), (SU (DM (ITJ ach)) (SIMPX (VF (NX (NN hotels))) (LK (VXFIN (VAFIN habe))) (MF (NX (PPER ich))))), (SU (ADVX (PTKANT ja))), (SU (NX (ADJX (CARD zwei)) (NN moglichkeiten))), (SU (NX (NX (ADJX (CARD hundert) (CARD zweiundvierzig)) (NN mark)) (PX (APPRART im) (NX (NN zentrum)))) (NX (NX (NX (ADJX (CARD hundert) (CARD funfunddreisig)) (NN mark)) (NX (ADJX (CARD funf)) (NN minuten))) (PX (PX (APPRART vom) (NX (NN bahnhof))) (PX (APPR mit) (NX (NN garage)))))), (SU (SIMPX (LK (VXFIN (VVFIN brauchen))) (MF (NX (PPER wir)) (ADVX (ADV eh)) (ADVX (PTKNEG nicht)) (NX (ADVX (ADV so)) (NX (ART ein) (NN quatsch)))))), (SU (NX (KON und) (NX (NX (ADVX (ADV einmal)) (ADJX (CARD hundert) (CARD sechsundachtzig)) (NN mark)) (PX (APPR mit) (NX (NN schwimmbad))))))], 'auto preterminal span': (41, 50), 'span': (41, 50), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU brauchen wir nur noch ein hotel)
		[01;31m(SU[00m
			(DM ach)
			[01;31m(SIMPX[00m
				(VF hotels)
				(LK habe)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX
						(PPER ich))[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(ADVX
				(PTKANT ja))[01;31m)[00m
		[01;31m(SU[00m [01;33m(NX[00m
			(NX
				(ADJX zwei)
				(NN moglichkeiten))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(NX[00m
				(NX hundert zweiundvierzig mark) [01;33mNX)[00m
				(PX im zentrum)[01;31m)[00m [01;33mMF)[00m
			[01;31m(NX[00m
				(NX hundert funfunddreisig mark funf minuten)
				(PX vom bahnhof mit garage)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK brauchen)
				(MF
					(NX wir)
					(ADVX eh)
					(ADVX nicht)
					(NX
						(ADVX so)
						[01;31m(NX[00m
							(ART ein)
							(NN quatsch)[01;31m)[00m))[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(NX[00m
				(KON und)
				(NX einmal hundert sechsundachtzig mark mit schwimmbad)[01;31m)[00m[01;31m)[00m
		[01;36m(SU[00m
			(SIMPX
				(SU
					(SIMPX
						(LK hast)
						[01;36m(MF[00m
							(MF du aber eh keine zeit)
							(NF dafur)[01;36m)[00m))
				(SU was steckt))[01;36m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SU', 'SU', 'SU', 'SU', 'SU', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'PPER', 'ADV', 'ADV', 'PIAT', 'NN', 'PROP', 'PWS', 'VVFIN'), 'right siblings': [], 'left siblings': [(SU (SIMPX (LK (VXFIN (VVFIN brauchen))) (MF (NX (PPER wir)) (ADVX (ADV nur)) (ADVX (ADV noch)) (NX (ART ein) (NN hotel))))), (SU (DM (ITJ ach)) (SIMPX (VF (NX (NN hotels))) (LK (VXFIN (VAFIN habe))) (MF (NX (PPER ich))))), (SU (ADVX (PTKANT ja))), (SU (NX (ADJX (CARD zwei)) (NN moglichkeiten))), (SU (NX (NX (ADJX (CARD hundert) (CARD zweiundvierzig)) (NN mark)) (PX (APPRART im) (NX (NN zentrum)))) (NX (NX (NX (ADJX (CARD hundert) (CARD funfunddreisig)) (NN mark)) (NX (ADJX (CARD funf)) (NN minuten))) (PX (PX (APPRART vom) (NX (NN bahnhof))) (PX (APPR mit) (NX (NN garage)))))), (SU (SIMPX (LK (VXFIN (VVFIN brauchen))) (MF (NX (PPER wir)) (ADVX (ADV eh)) (ADVX (PTKNEG nicht)) (NX (ADVX (ADV so)) (NX (ART ein) (NN quatsch)))))), (SU (NX (KON und) (NX (NX (ADVX (ADV einmal)) (ADJX (CARD hundert) (CARD sechsundachtzig)) (NN mark)) (PX (APPR mit) (NX (NN schwimmbad))))))], 'auto preterminal span': (41, 50), 'span': (41, 50), 'parent': 'TURN', 'label': 'SU', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU brauchen wir nur noch ein hotel)
		[01;31m(SU[00m
			(DM ach)
			[01;31m(SIMPX[00m
				(VF hotels)
				(LK habe)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX
						(PPER ich))[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(ADVX
				(PTKANT ja))[01;31m)[00m
		[01;31m(SU[00m [01;33m(NX[00m
			(NX
				(ADJX zwei)
				(NN moglichkeiten))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(NX[00m
				(NX hundert zweiundvierzig mark) [01;33mNX)[00m
				(PX im zentrum)[01;31m)[00m [01;33mMF)[00m
			[01;31m(NX[00m
				(NX hundert funfunddreisig mark funf minuten)
				(PX vom bahnhof mit garage)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK brauchen)
				(MF
					(NX wir)
					(ADVX eh)
					(ADVX nicht)
					(NX
						(ADVX so)
						[01;31m(NX[00m
							(ART ein)
							(NN quatsch)[01;31m)[00m))[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(NX[00m
				(KON und)
				(NX einmal hundert sechsundachtzig mark mit schwimmbad)[01;31m)[00m[01;31m)[00m
		(SU
			(SIMPX
				(SU
					(SIMPX
						(LK hast)
						[01;36m(MF[00m
							(MF du aber eh keine zeit)
							(NF dafur)[01;36m)[00m))
				(SU was steckt)))))
Step:UNSET add
{'subtrees': ['MF', 'NF'], 'family': ['LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV', 'ADV', 'PIAT', 'NN', 'PROP'), 'right siblings': [], 'left siblings': [(LK (VXFIN (VAFIN hast)))], 'auto preterminal span': (42, 48), 'span': (42, 48), 'parent': 'SIMPX', 'label': 'MF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU brauchen wir nur noch ein hotel)
		[01;31m(SU[00m
			(DM ach)
			[01;31m(SIMPX[00m
				(VF hotels)
				(LK habe)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX
						(PPER ich))[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(ADVX
				(PTKANT ja))[01;31m)[00m
		[01;31m(SU[00m [01;33m(NX[00m
			(NX
				(ADJX zwei)
				(NN moglichkeiten))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(NX[00m
				(NX hundert zweiundvierzig mark) [01;33mNX)[00m
				(PX im zentrum)[01;31m)[00m [01;33mMF)[00m
			[01;31m(NX[00m
				(NX hundert funfunddreisig mark funf minuten)
				(PX vom bahnhof mit garage)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK brauchen)
				(MF
					(NX wir)
					(ADVX eh)
					(ADVX nicht)
					(NX
						(ADVX so)
						[01;31m(NX[00m
							(ART ein)
							(NN quatsch)[01;31m)[00m))[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(NX[00m
				(KON und)
				(NX einmal hundert sechsundachtzig mark mit schwimmbad)[01;31m)[00m[01;31m)[00m
		(SU hast du aber eh keine zeit dafur was steckt)))
Step:Clause Attachment
{'subtrees': ['DM', 'SIMPX'], 'family': ['SU', 'SU', 'SU', 'SU', 'SU', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'ADV', 'ADV', 'ART', 'NN', 'ITJ', 'NN', 'VAFIN', 'PPER', 'PTKANT', 'CARD', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'CARD', 'CARD', 'NN', 'CARD', 'NN', 'APPRART', 'NN', 'APPR', 'NN', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADV', 'ART', 'NN', 'KON', 'ADV', 'CARD', 'CARD', 'NN', 'APPR', 'NN', 'VAFIN', 'PPER', 'ADV', 'ADV', 'PIAT', 'NN', 'PROP', 'PWS', 'VVFIN'), 'right siblings': ['SU', 'SU', 'SU', 'SU', 'SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 50), 'span': (6, 10), 'left siblings': ['SU'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU brauchen wir nur noch ein hotel)
		(DM ach)
		[01;31m(SIMPX[00m
			(VF hotels)
			(LK habe)
			[01;31m(MF[00m [01;33m(MF[00m
				(NX
					(PPER ich))[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(ADVX
				(PTKANT ja))[01;31m)[00m
		[01;31m(SU[00m [01;33m(NX[00m
			(NX
				(ADJX zwei)
				(NN moglichkeiten))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(NX[00m
				(NX hundert zweiundvierzig mark) [01;33mNX)[00m
				(PX im zentrum)[01;31m)[00m [01;33mMF)[00m
			[01;31m(NX[00m
				(NX hundert funfunddreisig mark funf minuten)
				(PX vom bahnhof mit garage)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK brauchen)
				(MF
					(NX wir)
					(ADVX eh)
					(ADVX nicht)
					(NX
						(ADVX so)
						[01;31m(NX[00m
							(ART ein)
							(NN quatsch)[01;31m)[00m))[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(NX[00m
				(KON und)
				(NX einmal hundert sechsundachtzig mark mit schwimmbad)[01;31m)[00m[01;31m)[00m
		(SU hast du aber eh keine zeit dafur was steckt)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['SU', 'DM', 'SIMPX', 'SU', 'SU', 'SU', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'ADV', 'ADV', 'ART', 'NN', 'ITJ', 'NN', 'VAFIN', 'PPER', 'PTKANT', 'CARD', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'CARD', 'CARD', 'NN', 'CARD', 'NN', 'APPRART', 'NN', 'APPR', 'NN', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADV', 'ART', 'NN', 'KON', 'ADV', 'CARD', 'CARD', 'NN', 'APPR', 'NN', 'VAFIN', 'PPER', 'ADV', 'ADV', 'PIAT', 'NN', 'PROP', 'PWS', 'VVFIN'), 'right siblings': ['SU', 'SU', 'SU', 'SU', 'SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 50), 'span': (7, 10), 'left siblings': ['SU', 'DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU brauchen wir nur noch ein hotel)
		(DM ach)
		(VF hotels)
		(LK habe)
		[01;31m(MF[00m [01;33m(MF[00m
			(NX
				(PPER ich))[01;31m)[00m
		[01;31m(SU[00m
			(ADVX
				(PTKANT ja))[01;31m)[00m
		[01;31m(SU[00m [01;33m(NX[00m
			(NX
				(ADJX zwei)
				(NN moglichkeiten))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(NX[00m
				(NX hundert zweiundvierzig mark) [01;33mNX)[00m
				(PX im zentrum)[01;31m)[00m [01;33mMF)[00m
			[01;31m(NX[00m
				(NX hundert funfunddreisig mark funf minuten)
				(PX vom bahnhof mit garage)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK brauchen)
				(MF
					(NX wir)
					(ADVX eh)
					(ADVX nicht)
					(NX
						(ADVX so)
						[01;31m(NX[00m
							(ART ein)
							(NN quatsch)[01;31m)[00m))[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(NX[00m
				(KON und)
				(NX einmal hundert sechsundachtzig mark mit schwimmbad)[01;31m)[00m[01;31m)[00m
		(SU hast du aber eh keine zeit dafur was steckt)))
Step:Unary
{'subtrees': ['NX'], 'family': ['SU', 'DM', 'VF', 'LK', 'MF', 'SU', 'SU', 'SU', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'ADV', 'ADV', 'ART', 'NN', 'ITJ', 'NN', 'VAFIN', 'PPER', 'PTKANT', 'CARD', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'CARD', 'CARD', 'NN', 'CARD', 'NN', 'APPRART', 'NN', 'APPR', 'NN', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADV', 'ART', 'NN', 'KON', 'ADV', 'CARD', 'CARD', 'NN', 'APPR', 'NN', 'VAFIN', 'PPER', 'ADV', 'ADV', 'PIAT', 'NN', 'PROP', 'PWS', 'VVFIN'), 'right siblings': ['SU', 'SU', 'SU', 'SU', 'SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 50), 'span': (9, 10), 'left siblings': ['SU', 'DM', 'VF', 'LK'], 'label': 'MF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU brauchen wir nur noch ein hotel)
		(DM ach)
		(VF hotels)
		(LK habe)
		[01;33m(MF[00m (NX ich)
		[01;31m(SU[00m
			(ADVX
				(PTKANT ja))[01;31m)[00m
		[01;31m(SU[00m [01;33m(NX[00m
			(NX
				(ADJX zwei)
				(NN moglichkeiten))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(NX[00m
				(NX hundert zweiundvierzig mark) [01;33mNX)[00m
				(PX im zentrum)[01;31m)[00m [01;33mMF)[00m
			[01;31m(NX[00m
				(NX hundert funfunddreisig mark funf minuten)
				(PX vom bahnhof mit garage)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK brauchen)
				(MF
					(NX wir)
					(ADVX eh)
					(ADVX nicht)
					(NX
						(ADVX so)
						[01;31m(NX[00m
							(ART ein)
							(NN quatsch)[01;31m)[00m))[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(NX[00m
				(KON und)
				(NX einmal hundert sechsundachtzig mark mit schwimmbad)[01;31m)[00m[01;31m)[00m
		(SU hast du aber eh keine zeit dafur was steckt)))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['SU', 'DM', 'VF', 'LK', 'NX', 'SU', 'SU', 'SU', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'ADV', 'ADV', 'ART', 'NN', 'ITJ', 'NN', 'VAFIN', 'PPER', 'PTKANT', 'CARD', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'CARD', 'CARD', 'NN', 'CARD', 'NN', 'APPRART', 'NN', 'APPR', 'NN', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADV', 'ART', 'NN', 'KON', 'ADV', 'CARD', 'CARD', 'NN', 'APPR', 'NN', 'VAFIN', 'PPER', 'ADV', 'ADV', 'PIAT', 'NN', 'PROP', 'PWS', 'VVFIN'), 'right siblings': ['SU', 'SU', 'SU', 'SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 50), 'span': (10, 11), 'left siblings': ['SU', 'DM', 'VF', 'LK', 'NX'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU brauchen wir nur noch ein hotel)
		(DM ach)
		(VF hotels)
		(LK habe)
		[01;33m(MF[00m (NX ich)
		(ADVX ja)
		[01;31m(SU[00m [01;33m(NX[00m
			(NX
				(ADJX zwei)
				(NN moglichkeiten))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(NX[00m
				(NX hundert zweiundvierzig mark) [01;33mNX)[00m
				(PX im zentrum)[01;31m)[00m [01;33mMF)[00m
			[01;31m(NX[00m
				(NX hundert funfunddreisig mark funf minuten)
				(PX vom bahnhof mit garage)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK brauchen)
				(MF
					(NX wir)
					(ADVX eh)
					(ADVX nicht)
					(NX
						(ADVX so)
						[01;31m(NX[00m
							(ART ein)
							(NN quatsch)[01;31m)[00m))[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(NX[00m
				(KON und)
				(NX einmal hundert sechsundachtzig mark mit schwimmbad)[01;31m)[00m[01;31m)[00m
		(SU hast du aber eh keine zeit dafur was steckt)))
Step:Unary
{'subtrees': ['NX'], 'family': ['SU', 'DM', 'VF', 'LK', 'NX', 'ADVX', 'SU', 'SU', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'ADV', 'ADV', 'ART', 'NN', 'ITJ', 'NN', 'VAFIN', 'PPER', 'PTKANT', 'CARD', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'CARD', 'CARD', 'NN', 'CARD', 'NN', 'APPRART', 'NN', 'APPR', 'NN', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADV', 'ART', 'NN', 'KON', 'ADV', 'CARD', 'CARD', 'NN', 'APPR', 'NN', 'VAFIN', 'PPER', 'ADV', 'ADV', 'PIAT', 'NN', 'PROP', 'PWS', 'VVFIN'), 'right siblings': ['SU', 'SU', 'SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 50), 'span': (11, 13), 'left siblings': ['SU', 'DM', 'VF', 'LK', 'NX', 'ADVX'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU brauchen wir nur noch ein hotel)
		(DM ach)
		(VF hotels)
		(LK habe)
		[01;33m(MF[00m (NX ich)
		(ADVX ja)
		[01;33m(NX[00m (NX zwei moglichkeiten)
		[01;31m(SU[00m
			[01;31m(NX[00m
				(NX hundert zweiundvierzig mark) [01;33mNX)[00m
				(PX im zentrum)[01;31m)[00m [01;33mMF)[00m
			[01;31m(NX[00m
				(NX hundert funfunddreisig mark funf minuten)
				(PX vom bahnhof mit garage)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK brauchen)
				(MF
					(NX wir)
					(ADVX eh)
					(ADVX nicht)
					(NX
						(ADVX so)
						[01;31m(NX[00m
							(ART ein)
							(NN quatsch)[01;31m)[00m))[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(NX[00m
				(KON und)
				(NX einmal hundert sechsundachtzig mark mit schwimmbad)[01;31m)[00m[01;31m)[00m
		(SU hast du aber eh keine zeit dafur was steckt)))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'CARD', 'NN', 'APPRART', 'NN', 'CARD', 'CARD', 'NN', 'CARD', 'NN', 'APPRART', 'NN', 'APPR', 'NN'), 'right siblings': ['NX'], 'parent': 'SU', 'auto preterminal span': (13, 27), 'span': (13, 18), 'left siblings': [], 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU brauchen wir nur noch ein hotel)
		(DM ach)
		(VF hotels)
		(LK habe)
		[01;33m(MF[00m (NX ich)
		(ADVX ja)
		[01;33m(NX[00m (NX zwei moglichkeiten)
		[01;31m(SU[00m
			(NX hundert zweiundvierzig mark) [01;33mNX)[00m
			(PX im zentrum) [01;33mMF)[00m
			[01;31m(NX[00m
				(NX hundert funfunddreisig mark funf minuten)
				(PX vom bahnhof mit garage)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK brauchen)
				(MF
					(NX wir)
					(ADVX eh)
					(ADVX nicht)
					(NX
						(ADVX so)
						[01;31m(NX[00m
							(ART ein)
							(NN quatsch)[01;31m)[00m))[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(NX[00m
				(KON und)
				(NX einmal hundert sechsundachtzig mark mit schwimmbad)[01;31m)[00m[01;31m)[00m
		(SU hast du aber eh keine zeit dafur was steckt)))
Step:PP Attachment
{'subtrees': ['NX', 'PX', 'NX'], 'family': ['SU', 'DM', 'VF', 'LK', 'NX', 'ADVX', 'NX', 'SU', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'ADV', 'ADV', 'ART', 'NN', 'ITJ', 'NN', 'VAFIN', 'PPER', 'PTKANT', 'CARD', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'CARD', 'CARD', 'NN', 'CARD', 'NN', 'APPRART', 'NN', 'APPR', 'NN', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADV', 'ART', 'NN', 'KON', 'ADV', 'CARD', 'CARD', 'NN', 'APPR', 'NN', 'VAFIN', 'PPER', 'ADV', 'ADV', 'PIAT', 'NN', 'PROP', 'PWS', 'VVFIN'), 'right siblings': ['SU', 'SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 50), 'span': (13, 27), 'left siblings': ['SU', 'DM', 'VF', 'LK', 'NX', 'ADVX', 'NX'], 'label': 'SU', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU brauchen wir nur noch ein hotel)
		(DM ach)
		(VF hotels)
		(LK habe)
		[01;36m(MF[00m
			(NX ich)
			(ADVX ja)
			[01;36m(NX[00m
				(NX zwei moglichkeiten)
				(NX hundert zweiundvierzig mark)[01;36m)[00m
			(PX im zentrum)[01;36m)[00m
		[01;31m(NX[00m
			(NX hundert funfunddreisig mark funf minuten)
			(PX vom bahnhof mit garage)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK brauchen)
				(MF
					(NX wir)
					(ADVX eh)
					(ADVX nicht)
					(NX
						(ADVX so)
						[01;31m(NX[00m
							(ART ein)
							(NN quatsch)[01;31m)[00m))[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(NX[00m
				(KON und)
				(NX einmal hundert sechsundachtzig mark mit schwimmbad)[01;31m)[00m[01;31m)[00m
		(SU hast du aber eh keine zeit dafur was steckt)))
Step:PP Attachment
{'subtrees': ['NX', 'ADVX', 'NX', 'NX', 'PX'], 'family': ['SU', 'DM', 'VF', 'LK', 'MF', 'NX', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'PTKANT', 'CARD', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN'), 'right siblings': [(NX (NX (NX (ADJX (CARD hundert) (CARD funfunddreisig)) (NN mark)) (NX (ADJX (CARD funf)) (NN minuten))) (PX (PX (APPRART vom) (NX (NN bahnhof))) (PX (APPR mit) (NX (NN garage))))), (SU (SIMPX (LK (VXFIN (VVFIN brauchen))) (MF (NX (PPER wir)) (ADVX (ADV eh)) (ADVX (PTKNEG nicht)) (NX (ADVX (ADV so)) (NX (ART ein) (NN quatsch)))))), (SU (NX (KON und) (NX (NX (ADVX (ADV einmal)) (ADJX (CARD hundert) (CARD sechsundachtzig)) (NN mark)) (PX (APPR mit) (NX (NN schwimmbad)))))), (SU (SIMPX (SU (SIMPX (LK (VXFIN (VAFIN hast))) (MF (MF (NX (PPER du)) (ADVX (ADV aber)) (ADVX (ADV eh)) (NX (PIAT keine) (NN zeit))) (NF (ADVX (PROP dafur)))))) (SU (SIMPX (VF (NX (PWS was))) (LK (VXFIN (VVFIN steckt)))))))], 'left siblings': [(SU (SIMPX (LK (VXFIN (VVFIN brauchen))) (MF (NX (PPER wir)) (ADVX (ADV nur)) (ADVX (ADV noch)) (NX (ART ein) (NN hotel))))), (DM (ITJ ach)), (VF (NX (NN hotels))), (LK (VXFIN (VAFIN habe)))], 'auto preterminal span': (9, 18), 'span': (9, 18), 'parent': 'TURN', 'label': 'MF', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU brauchen wir nur noch ein hotel)
		(DM ach)
		(VF hotels)
		(LK habe)
		(MF
			(NX ich)
			(ADVX ja)
			[01;36m(NX[00m
				(NX zwei moglichkeiten)
				(NX hundert zweiundvierzig mark)[01;36m)[00m
			(PX im zentrum))
		[01;31m(NX[00m
			(NX hundert funfunddreisig mark funf minuten)
			(PX vom bahnhof mit garage)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK brauchen)
				(MF
					(NX wir)
					(ADVX eh)
					(ADVX nicht)
					(NX
						(ADVX so)
						[01;31m(NX[00m
							(ART ein)
							(NN quatsch)[01;31m)[00m))[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(NX[00m
				(KON und)
				(NX einmal hundert sechsundachtzig mark mit schwimmbad)[01;31m)[00m[01;31m)[00m
		(SU hast du aber eh keine zeit dafur was steckt)))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['NX', 'ADVX', 'NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'NN', 'CARD', 'CARD', 'NN'), 'right siblings': [(PX (APPRART im) (NX (NN zentrum)))], 'left siblings': [(NX (PPER ich)), (ADVX (PTKANT ja))], 'auto preterminal span': (11, 16), 'span': (11, 16), 'parent': 'MF', 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'add'}
(TOP
	(TURN
		(SU brauchen wir nur noch ein hotel)
		(DM ach)
		(VF hotels)
		(LK habe)
		(MF ich ja zwei moglichkeiten hundert zweiundvierzig mark im zentrum)
		[01;31m(NX[00m
			(NX hundert funfunddreisig mark funf minuten)
			(PX vom bahnhof mit garage)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK brauchen)
				(MF
					(NX wir)
					(ADVX eh)
					(ADVX nicht)
					(NX
						(ADVX so)
						[01;31m(NX[00m
							(ART ein)
							(NN quatsch)[01;31m)[00m))[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(NX[00m
				(KON und)
				(NX einmal hundert sechsundachtzig mark mit schwimmbad)[01;31m)[00m[01;31m)[00m
		(SU hast du aber eh keine zeit dafur was steckt)))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['SU', 'DM', 'VF', 'LK', 'MF', 'NX', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'ADV', 'ADV', 'ART', 'NN', 'ITJ', 'NN', 'VAFIN', 'PPER', 'PTKANT', 'CARD', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'CARD', 'CARD', 'NN', 'CARD', 'NN', 'APPRART', 'NN', 'APPR', 'NN', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADV', 'ART', 'NN', 'KON', 'ADV', 'CARD', 'CARD', 'NN', 'APPR', 'NN', 'VAFIN', 'PPER', 'ADV', 'ADV', 'PIAT', 'NN', 'PROP', 'PWS', 'VVFIN'), 'right siblings': ['SU', 'SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 50), 'span': (18, 27), 'left siblings': ['SU', 'DM', 'VF', 'LK', 'MF'], 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU brauchen wir nur noch ein hotel)
		(DM ach)
		(VF hotels)
		(LK habe)
		(MF ich ja zwei moglichkeiten hundert zweiundvierzig mark im zentrum)
		(NX hundert funfunddreisig mark funf minuten)
		(PX vom bahnhof mit garage)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK brauchen)
				(MF
					(NX wir)
					(ADVX eh)
					(ADVX nicht)
					(NX
						(ADVX so)
						[01;31m(NX[00m
							(ART ein)
							(NN quatsch)[01;31m)[00m))[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(NX[00m
				(KON und)
				(NX einmal hundert sechsundachtzig mark mit schwimmbad)[01;31m)[00m[01;31m)[00m
		(SU hast du aber eh keine zeit dafur was steckt)))
Step:Unary
{'subtrees': ['LK', 'MF'], 'family': ['SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADV', 'ART', 'NN'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (27, 34), 'span': (27, 34), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU brauchen wir nur noch ein hotel)
		(DM ach)
		(VF hotels)
		(LK habe)
		(MF ich ja zwei moglichkeiten hundert zweiundvierzig mark im zentrum)
		(NX hundert funfunddreisig mark funf minuten)
		(PX vom bahnhof mit garage)
		[01;31m(SU[00m
			(LK brauchen)
			(MF
				(NX wir)
				(ADVX eh)
				(ADVX nicht)
				(NX
					(ADVX so)
					[01;31m(NX[00m
						(ART ein)
						(NN quatsch)[01;31m)[00m))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(NX[00m
				(KON und)
				(NX einmal hundert sechsundachtzig mark mit schwimmbad)[01;31m)[00m[01;31m)[00m
		(SU hast du aber eh keine zeit dafur was steckt)))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['SU', 'DM', 'VF', 'LK', 'MF', 'NX', 'PX', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'ADV', 'ADV', 'ART', 'NN', 'ITJ', 'NN', 'VAFIN', 'PPER', 'PTKANT', 'CARD', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'CARD', 'CARD', 'NN', 'CARD', 'NN', 'APPRART', 'NN', 'APPR', 'NN', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADV', 'ART', 'NN', 'KON', 'ADV', 'CARD', 'CARD', 'NN', 'APPR', 'NN', 'VAFIN', 'PPER', 'ADV', 'ADV', 'PIAT', 'NN', 'PROP', 'PWS', 'VVFIN'), 'right siblings': ['SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 50), 'span': (27, 34), 'left siblings': ['SU', 'DM', 'VF', 'LK', 'MF', 'NX', 'PX'], 'label': 'SU', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU brauchen wir nur noch ein hotel)
		(DM ach)
		(VF hotels)
		(LK habe)
		(MF ich ja zwei moglichkeiten hundert zweiundvierzig mark im zentrum)
		(NX hundert funfunddreisig mark funf minuten)
		(PX vom bahnhof mit garage)
		(LK brauchen)
		(MF
			(NX wir)
			(ADVX eh)
			(ADVX nicht)
			(NX
				(ADVX so)
				[01;31m(NX[00m
					(ART ein)
					(NN quatsch)[01;31m)[00m))
		[01;31m(SU[00m
			[01;31m(NX[00m
				(KON und)
				(NX einmal hundert sechsundachtzig mark mit schwimmbad)[01;31m)[00m[01;31m)[00m
		(SU hast du aber eh keine zeit dafur was steckt)))
Step:NP Internal Structure
{'subtrees': ['ART', 'NN'], 'family': ['ADVX', 'NX'], 'over_word': False, 'over words': True, 'auto preterminals': ('ADV', 'ART', 'NN'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (31, 34), 'span': (32, 34), 'left siblings': ['ADVX'], 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'remove'}
(TOP
	(TURN
		(SU brauchen wir nur noch ein hotel)
		(DM ach)
		(VF hotels)
		(LK habe)
		(MF ich ja zwei moglichkeiten hundert zweiundvierzig mark im zentrum)
		(NX hundert funfunddreisig mark funf minuten)
		(PX vom bahnhof mit garage)
		(LK brauchen)
		(MF wir eh nicht so ein quatsch)
		[01;31m(SU[00m
			[01;31m(NX[00m
				(KON und)
				(NX einmal hundert sechsundachtzig mark mit schwimmbad)[01;31m)[00m[01;31m)[00m
		(SU hast du aber eh keine zeit dafur was steckt)))
Step:Unary
{'subtrees': ['KON', 'NX'], 'family': ['NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'ADV', 'CARD', 'CARD', 'NN', 'APPR', 'NN'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (34, 41), 'span': (34, 41), 'left siblings': [], 'label': 'NX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU brauchen wir nur noch ein hotel)
		(DM ach)
		(VF hotels)
		(LK habe)
		(MF ich ja zwei moglichkeiten hundert zweiundvierzig mark im zentrum)
		(NX hundert funfunddreisig mark funf minuten)
		(PX vom bahnhof mit garage)
		(LK brauchen)
		(MF wir eh nicht so ein quatsch)
		[01;31m(SU[00m
			(KON und)
			(NX einmal hundert sechsundachtzig mark mit schwimmbad)[01;31m)[00m
		(SU hast du aber eh keine zeit dafur was steckt)))
Step:UNSET remove
{'subtrees': ['KON', 'NX'], 'family': ['SU', 'DM', 'VF', 'LK', 'MF', 'NX', 'PX', 'LK', 'MF', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'ADV', 'ADV', 'ART', 'NN', 'ITJ', 'NN', 'VAFIN', 'PPER', 'PTKANT', 'CARD', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'CARD', 'CARD', 'NN', 'CARD', 'NN', 'APPRART', 'NN', 'APPR', 'NN', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADV', 'ART', 'NN', 'KON', 'ADV', 'CARD', 'CARD', 'NN', 'APPR', 'NN', 'VAFIN', 'PPER', 'ADV', 'ADV', 'PIAT', 'NN', 'PROP', 'PWS', 'VVFIN'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 50), 'span': (34, 41), 'left siblings': ['SU', 'DM', 'VF', 'LK', 'MF', 'NX', 'PX', 'LK', 'MF'], 'label': 'SU', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP brauchen wir nur noch ein hotel ach hotels habe ich ja zwei moglichkeiten hundert zweiundvierzig mark im zentrum hundert funfunddreisig mark funf minuten vom bahnhof mit garage brauchen wir eh nicht so ein quatsch und einmal hundert sechsundachtzig mark mit schwimmbad hast du aber eh keine zeit dafur was steckt)

Sentence 493:
8 Initial errors
0 on fringe, 5 iterations
2 Error:Single Word Phrase
2 Error:UNSET move
2 Error:Modifier Attachment
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SU[00m
	(TOP
		(TURN
			[01;31m(SU[00m
				[01;31m(SIMPX[00m
					(VF
						(SIMPX
							(VF schloshotel)
							(LK ist)
							[01;36m(MF[00m
								[01;36m(ADVX[00m [01;31m(DM[00m
									(PTKANT ja)[01;31m)[00m[01;36m)[00m
								[01;31m(MF[00m
									(ADJX
										(ADJD standesgemas))[01;31m)[00m[01;36m)[00m))
					(LK wurde)
					(MF ich)
					(VC sagen)[01;31m)[00m[01;31m)[00m
			[01;31m(SU[00m
				(DM also)
				(SIMPX schloshotel wird gebucht)[01;31m)[00m))[01;36m)[00m
Step:Single Word Phrase
{'family': ['VF', 'LK', 'ADVX', 'MF'], 'auto preterminal span': (2, 3), 'span': (2, 3), 'subtrees': ['PTKANT'], 'parent': 'SIMPX', 'over_word': True, 'auto preterminals': ('PTKANT',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('DM', 'ADVX')}
[01;36m(SU[00m
	(TOP
		(TURN
			[01;31m(SU[00m
				[01;31m(SIMPX[00m
					(VF
						(SIMPX
							(VF schloshotel)
							(LK ist)
							[01;36m(MF[00m
								(ADVX ja)
								[01;31m(MF[00m
									(ADJX
										(ADJD standesgemas))[01;31m)[00m[01;36m)[00m))
					(LK wurde)
					(MF ich)
					(VC sagen)[01;31m)[00m[01;31m)[00m
			[01;31m(SU[00m
				(DM also)
				(SIMPX schloshotel wird gebucht)[01;31m)[00m))[01;36m)[00m
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SU', 'DM', 'SIMPX'], 'mover info': [('SU', (0, 7))], 'old_family': ['SU', 'SU'], 'start left siblings': [], 'auto preterminals': ('NE', 'VAFIN', 'PTKANT', 'ADJD', 'VAFIN', 'PPER', 'VVINF', 'ADV', 'NE', 'VAFIN', 'VVPP'), 'start right siblings': ['SU'], 'end left siblings': [], 'auto preterminal span': (0, 11), 'movers': ['SU'], 'old_parent': 'TURN', 'end right siblings': ['DM', 'SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			[01;31m(SU[00m
				[01;31m(SIMPX[00m
					(VF
						(SIMPX
							(VF schloshotel)
							(LK ist)
							[01;36m(MF[00m
								(ADVX ja)
								[01;31m(MF[00m
									(ADJX
										(ADJD standesgemas))[01;31m)[00m[01;36m)[00m))
					(LK wurde)
					(MF ich)
					(VC sagen)[01;31m)[00m[01;31m)[00m
			(DM also)
			(SIMPX schloshotel wird gebucht))))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['ADVX', 'ADJX'], 'mover info': [('ADVX', (2, 3))], 'old_family': ['VF', 'LK', 'ADVX', 'MF'], 'start left siblings': ['VF', 'LK'], 'auto preterminals': ('NE', 'VAFIN', 'PTKANT', 'ADJD'), 'start right siblings': ['MF'], 'end left siblings': [], 'auto preterminal span': (0, 4), 'movers': ['ADVX'], 'old_parent': 'SIMPX', 'POS confusion': ('PTKANT', 'PTKANT'), 'end right siblings': ['ADJX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU
			[01;31m(SU[00m
				[01;31m(SIMPX[00m
					(VF schloshotel ist ja standesgemas)
					(LK wurde)
					(MF ich)
					(VC sagen)[01;31m)[00m[01;31m)[00m
			(DM also)
			(SIMPX schloshotel wird gebucht))))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SU', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NE', 'VAFIN', 'PTKANT', 'ADJD', 'VAFIN', 'PPER', 'VVINF', 'ADV', 'NE', 'VAFIN', 'VVPP'), 'right siblings': ['DM', 'SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 11), 'span': (0, 7), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU
			[01;31m(SIMPX[00m
				(VF schloshotel ist ja standesgemas)
				(LK wurde)
				(MF ich)
				(VC sagen)[01;31m)[00m
			(DM also)
			(SIMPX schloshotel wird gebucht))))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['SIMPX', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NE', 'VAFIN', 'PTKANT', 'ADJD', 'VAFIN', 'PPER', 'VVINF', 'ADV', 'NE', 'VAFIN', 'VVPP'), 'right siblings': ['DM', 'SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 11), 'span': (0, 7), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP schloshotel ist ja standesgemas wurde ich sagen also schloshotel wird gebucht)

Sentence 494:
3 Initial errors
0 on fringe, 2 iterations
2 Error:UNSET move
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SU[00m
	(TOP
		(TURN
			[01;31m(SU[00m
				(ADJX
					(ADVX ganz)
					(FM relaxed))[01;31m)[00m
			[01;31m(SU[00m
				(DM
					(ITJ genau))[01;31m)[00m))[01;36m)[00m
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SU', 'DM'], 'mover info': [('SU', (0, 2))], 'old_family': ['SU', 'SU'], 'start left siblings': [], 'auto preterminals': ('ADV', 'FM', 'ITJ'), 'start right siblings': ['SU'], 'end left siblings': [], 'auto preterminal span': (0, 3), 'movers': ['SU'], 'old_parent': 'TURN', 'end right siblings': ['DM'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			[01;31m(SU[00m
				(ADJX
					(ADVX ganz)
					(FM relaxed))[01;31m)[00m
			(DM genau))))
Step:Unary
{'subtrees': ['ADJX'], 'family': ['SU', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'FM', 'ITJ'), 'right siblings': ['DM'], 'parent': 'SU', 'auto preterminal span': (0, 3), 'span': (0, 2), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ganz relaxed genau)

Sentence 495:
9 Initial errors
0 on fringe, 4 iterations
4 Error:UNSET move
2 Error:NP Attachment
2 Error:Different label
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SU[00m
	[01;36m(SIMPX[00m
		(TOP
			(TURN
				[01;31m(SU[00m
					[01;31m(SIMPX[00m
						(LK haben)
						[01;31m(MF[00m [01;33m(MF[00m
							(NX wir)
							(NX es)
							(ADVX dann)[01;31m)[00m[01;31m)[00m[01;31m)[00m
				[01;31m(SU[00m
					[01;31m(NX[00m
						(NX schonen tag) [01;33mMF)[00m
						[01;36m(NF[00m
							(ADVX
								(ADV noch))[01;36m)[00m[01;31m)[00m[01;31m)[00m))[01;36m)[00m[01;36m)[00m
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['LK', 'MF', 'SU'], 'mover info': [('SU', (4, 7))], 'old_family': ['SU', 'SU'], 'start left siblings': ['SU'], 'auto preterminals': ('VAFIN', 'PPER', 'PPER', 'ADV', 'ADJA', 'NN', 'ADV'), 'start right siblings': [], 'end left siblings': ['LK', 'MF'], 'auto preterminal span': (0, 7), 'movers': ['SU'], 'old_parent': 'TURN', 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			(SIMPX
				(LK haben)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX wir)
					(NX es)
					(ADVX dann)[01;31m)[00m
				[01;31m(SU[00m
					[01;31m(NX[00m
						(NX schonen tag) [01;33mMF)[00m
						[01;36m(NF[00m
							(ADVX
								(ADV noch))[01;36m)[00m[01;31m)[00m[01;31m)[00m))))
Step:NP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'NX', 'ADVX', 'NX'], 'mover info': [('NX', (4, 6))], 'old_family': ['NX', 'ADVX'], 'start left siblings': [], 'auto preterminals': ('VAFIN', 'PPER', 'PPER', 'ADV', 'ADJA', 'NN', 'ADV'), 'start right siblings': ['ADVX'], 'end left siblings': ['NX', 'NX', 'ADVX'], 'auto preterminal span': (0, 7), 'movers': ['NX'], 'old_parent': 'NX', 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU
			(SIMPX
				(LK haben)
				(MF wir es dann schonen tag)
				[01;36m(NF[00m [01;31m(SU[00m
					[01;31m(NX[00m
						(ADVX
							(ADV noch))[01;31m)[00m[01;31m)[00m[01;36m)[00m))))
Step:Different label
{'family': ['LK', 'MF', 'NF'], 'auto preterminal span': (6, 7), 'span': (6, 7), 'subtrees': ['NX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('ADV',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('SU', 'NF')}
(TOP
	(TURN
		(SU
			(SIMPX
				(LK haben)
				(MF wir es dann schonen tag)
				(NF
					[01;31m(NX[00m
						(ADVX
							(ADV noch))[01;31m)[00m)))))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV',), 'right siblings': [], 'parent': 'NF', 'auto preterminal span': (6, 7), 'span': (6, 7), 'left siblings': [], 'label': 'NX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP haben wir es dann schonen tag noch)

Sentence 496:
3 Initial errors
0 on fringe, 2 iterations
2 Error:UNSET move
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SU[00m
	(TOP
		(TURN
			[01;31m(SU[00m
				(DM
					(PTKANT ja))[01;31m)[00m
			[01;31m(SU[00m
				(DM
					(ITJ tschus))[01;31m)[00m))[01;36m)[00m
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SU', 'DM'], 'mover info': [('SU', (0, 1))], 'old_family': ['SU', 'SU'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'ITJ'), 'start right siblings': ['SU'], 'end left siblings': [], 'auto preterminal span': (0, 2), 'movers': ['SU'], 'old_parent': 'TURN', 'POS confusion': ('PTKANT', 'PTKANT'), 'end right siblings': ['DM'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			[01;31m(SU[00m
				(DM
					(PTKANT ja))[01;31m)[00m
			(DM tschus))))
Step:Unary
{'subtrees': ['DM'], 'family': ['SU', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ'), 'right siblings': ['DM'], 'parent': 'SU', 'auto preterminal span': (0, 2), 'span': (0, 1), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja tschus)

Sentence 497:
10 Initial errors
0 on fringe, 8 iterations
3 Error:UNSET move
1 Error:UNSET add
1 Error:Clause Attachment
1 Error:PP Attachment
1 Error:UNSET add
1 Error:Unary
1 Error:Unary
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP [01;33m(VF (NX[00m
	(TURN
		(SU die zweite halfte)
		[01;31m(SU[00m
			(DM ja)
			[01;31m(SIMPX[00m
				(VF zweite halfte) [01;33mNX) VF)[00m
				(LK sieht)
				(MF es besser)
				(VC aus)
				[01;31m(NF[00m [01;33m(PX (NF[00m
					(PX
						(KOKOM als)
						[01;36m(PX[00m
							(APPR in)
							(NX der ersten)[01;36m)[00m)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(PX[00m
				(ADVX nicht)
				(PX vor mittwoch donnerstag)[01;31m)[00m[01;31m)[00m)) [01;33mNF) PX)[00m
Step:UNSET move
{'new_parent': 'NF', 'new_family': ['PX', 'SU'], 'mover info': [('SU', (14, 18))], 'old_family': ['SU', 'SU', 'SU'], 'start left siblings': ['SU', 'SU'], 'auto preterminals': ('ART', 'ADJA', 'NN', 'PTKANT', 'ADJA', 'NN', 'VVFIN', 'PPER', 'ADJD', 'PTKVZ', 'KOKOM', 'APPR', 'ART', 'NN', 'PTKNEG', 'APPR', 'NN', 'NN'), 'start right siblings': [], 'end left siblings': ['PX'], 'auto preterminal span': (0, 18), 'adding node already present': False, 'movers': ['SU'], 'old_parent': 'TURN', 'added and moved': True, 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'PX'}
(TOP [01;33m(VF (NX[00m
	(TURN
		(SU die zweite halfte)
		[01;31m(SU[00m
			(DM ja)
			[01;31m(SIMPX[00m
				(VF zweite halfte) [01;33mNX) VF)[00m
				(LK sieht)
				(MF es besser)
				(VC aus)
				(PX
					(NF
						(PX
							(KOKOM als)
							[01;36m(PX[00m
								(APPR in)
								(NX der ersten)[01;36m)[00m)
						[01;31m(SU[00m
							[01;31m(PX[00m
								(ADVX nicht)
								(PX vor mittwoch donnerstag)[01;31m)[00m[01;31m)[00m))[01;31m)[00m[01;31m)[00m))
Step:UNSET add
{'subtrees': ['APPR', 'NX'], 'family': ['KOKOM', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NN'), 'right siblings': [], 'left siblings': [(KOKOM als)], 'auto preterminal span': (11, 14), 'span': (11, 14), 'parent': 'PX', 'label': 'PX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP [01;33m(VF (NX[00m
	(TURN
		(SU die zweite halfte)
		[01;31m(SU[00m
			(DM ja)
			[01;31m(SIMPX[00m
				(VF zweite halfte) [01;33mNX) VF)[00m
				(LK sieht)
				(MF es besser)
				(VC aus)
				(PX
					(NF
						(PX als in der ersten)
						[01;31m(SU[00m
							[01;31m(PX[00m
								(ADVX nicht)
								(PX vor mittwoch donnerstag)[01;31m)[00m[01;31m)[00m))[01;31m)[00m[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['DM', 'SIMPX'], 'family': ['SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'ADJA', 'NN', 'PTKANT', 'ADJA', 'NN', 'VVFIN', 'PPER', 'ADJD', 'PTKVZ', 'KOKOM', 'APPR', 'ART', 'NN', 'PTKNEG', 'APPR', 'NN', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 18), 'span': (3, 18), 'left siblings': ['SU'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP [01;33m(VF (NX[00m
	(TURN
		(SU die zweite halfte)
		(DM ja)
		[01;31m(SIMPX[00m
			(VF zweite halfte) [01;33mNX) VF)[00m
			(LK sieht)
			(MF es besser)
			(VC aus)
			(PX
				(NF
					(PX als in der ersten)
					[01;31m(SU[00m
						[01;31m(PX[00m
							(ADVX nicht)
							(PX vor mittwoch donnerstag)[01;31m)[00m[01;31m)[00m))[01;31m)[00m))
Step:PP Attachment
{'subtrees': ['VF', 'LK', 'MF', 'VC', 'PX'], 'family': ['SU', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'ADJA', 'NN', 'PTKANT', 'ADJA', 'NN', 'VVFIN', 'PPER', 'ADJD', 'PTKVZ', 'KOKOM', 'APPR', 'ART', 'NN', 'PTKNEG', 'APPR', 'NN', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 18), 'span': (4, 18), 'left siblings': ['SU', 'DM'], 'label': 'SIMPX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		[01;36m(VF[00m
			[01;36m(NX[00m
				(SU die zweite halfte)
				(DM ja)
				(VF zweite halfte)[01;36m)[00m[01;36m)[00m
		(LK sieht)
		(MF es besser)
		(VC aus)
		(PX
			(NF
				(PX als in der ersten)
				[01;31m(SU[00m
					[01;31m(PX[00m
						(ADVX nicht)
						(PX vor mittwoch donnerstag)[01;31m)[00m[01;31m)[00m))))
Step:UNSET add
{'subtrees': ['SU', 'DM', 'VF'], 'family': ['NX', 'LK', 'MF', 'VC', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'ADJA', 'NN', 'PTKANT', 'ADJA', 'NN'), 'right siblings': [(LK (VXFIN (VVFIN sieht))), (MF (NX (PPER es)) (ADJX (ADJD besser))), (VC (PTKVZ aus)), (PX (NF (PX (KOKOM als) (PX (APPR in) (NX (ART der) (NN ersten)))) (SU (PX (ADVX (PTKNEG nicht)) (PX (APPR vor) (NX (NX (NN mittwoch)) (NX (NN donnerstag))))))))], 'left siblings': [], 'auto preterminal span': (0, 6), 'span': (0, 6), 'parent': 'TURN', 'label': 'NX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		[01;36m(VF[00m
			(NX
				(SU die zweite halfte)
				(DM ja)
				(VF zweite halfte))[01;36m)[00m
		(LK sieht)
		(MF es besser)
		(VC aus)
		(PX
			(NF
				(PX als in der ersten)
				[01;31m(SU[00m
					[01;31m(PX[00m
						(ADVX nicht)
						(PX vor mittwoch donnerstag)[01;31m)[00m[01;31m)[00m))))
Step:Unary
{'subtrees': ['NX'], 'family': ['VF', 'LK', 'MF', 'VC', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'ADJA', 'NN', 'PTKANT', 'ADJA', 'NN'), 'right siblings': [(LK (VXFIN (VVFIN sieht))), (MF (NX (PPER es)) (ADJX (ADJD besser))), (VC (PTKVZ aus)), (PX (NF (PX (KOKOM als) (PX (APPR in) (NX (ART der) (NN ersten)))) (SU (PX (ADVX (PTKNEG nicht)) (PX (APPR vor) (NX (NX (NN mittwoch)) (NX (NN donnerstag))))))))], 'left siblings': [], 'auto preterminal span': (0, 6), 'span': (0, 6), 'parent': 'TURN', 'label': 'VF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(VF die zweite halfte ja zweite halfte)
		(LK sieht)
		(MF es besser)
		(VC aus)
		(PX
			(NF
				(PX als in der ersten)
				[01;31m(SU[00m
					[01;31m(PX[00m
						(ADVX nicht)
						(PX vor mittwoch donnerstag)[01;31m)[00m[01;31m)[00m))))
Step:Unary
{'subtrees': ['ADVX', 'PX'], 'family': ['PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKNEG', 'APPR', 'NN', 'NN'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (14, 18), 'span': (14, 18), 'left siblings': [], 'label': 'PX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(VF die zweite halfte ja zweite halfte)
		(LK sieht)
		(MF es besser)
		(VC aus)
		(PX
			(NF
				(PX als in der ersten)
				[01;31m(SU[00m
					(ADVX nicht)
					(PX vor mittwoch donnerstag)[01;31m)[00m))))
Step:PP Attachment
{'subtrees': ['ADVX', 'PX'], 'family': ['PX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOKOM', 'APPR', 'ART', 'NN', 'PTKNEG', 'APPR', 'NN', 'NN'), 'right siblings': [], 'parent': 'NF', 'auto preterminal span': (10, 18), 'span': (14, 18), 'left siblings': ['PX'], 'label': 'SU', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP die zweite halfte ja zweite halfte sieht es besser aus als in der ersten nicht vor mittwoch donnerstag)

Sentence 498:
12 Initial errors
0 on fringe, 12 iterations
1 Error:Clause Attachment
1 Error:UNSET remove
1 Error:Unary
1 Error:Unary
1 Error:Clause Attachment
1 Error:UNSET remove
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET add
1 Error:Unary
1 Error:UNSET add
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			[01;31m(SIMPX[00m
				(VF grundsatzlich)
				(LK gabe)
				(MF es naturlich die moglichkeit)
				[01;31m(NF[00m [01;33m(VXINF (VC[00m
					[01;31m(SIMPX[00m
						[01;31m(SIMPX[00m
							(VC
								(VXINF
									(PTKZU zu)
									(VVINF fliegen)))[01;31m)[00m
						(KON beziehungsweise)
						[01;31m(SIMPX[00m
							(MF den zug)
							[01;33m(VXINF (VC[00m (VC zu nehmen)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF ich)
				(LK wurde)
				(VC vorschlagen) [01;33mVC) VXINF) VC) VXINF)[00m
				(NF wir fliegen da wir nur begrenzte zeit zur verfugung haben)[01;31m)[00m[01;31m)[00m
		(SU ich weis nicht ob ihnen das recht ist)))
Step:Clause Attachment
{'subtrees': ['DM', 'SIMPX'], 'family': ['SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADV', 'VVFIN', 'PPER', 'ADV', 'ART', 'NN', 'PTKZU', 'VVINF', 'KON', 'ART', 'NN', 'PTKZU', 'VVINF', 'PPER', 'VAFIN', 'VVINF', 'PPER', 'VVFIN', 'KOUS', 'PPER', 'ADV', 'ADJA', 'NN', 'APPRART', 'NN', 'VAFIN', 'PPER', 'VVFIN', 'PTKNEG', 'KOUS', 'PPER', 'PDS', 'ADJD', 'VAFIN'), 'right siblings': ['SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 35), 'span': (0, 14), 'left siblings': [], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		[01;31m(SIMPX[00m
			(VF grundsatzlich)
			(LK gabe)
			(MF es naturlich die moglichkeit)
			[01;31m(NF[00m [01;33m(VXINF (VC[00m
				[01;31m(SIMPX[00m
					[01;31m(SIMPX[00m
						(VC
							(VXINF
								(PTKZU zu)
								(VVINF fliegen)))[01;31m)[00m
					(KON beziehungsweise)
					[01;31m(SIMPX[00m
						(MF den zug)
						[01;33m(VXINF (VC[00m (VC zu nehmen)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF ich)
				(LK wurde)
				(VC vorschlagen) [01;33mVC) VXINF) VC) VXINF)[00m
				(NF wir fliegen da wir nur begrenzte zeit zur verfugung haben)[01;31m)[00m[01;31m)[00m
		(SU ich weis nicht ob ihnen das recht ist)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'NF'], 'family': ['DM', 'SIMPX', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADV', 'VVFIN', 'PPER', 'ADV', 'ART', 'NN', 'PTKZU', 'VVINF', 'KON', 'ART', 'NN', 'PTKZU', 'VVINF', 'PPER', 'VAFIN', 'VVINF', 'PPER', 'VVFIN', 'KOUS', 'PPER', 'ADV', 'ADJA', 'NN', 'APPRART', 'NN', 'VAFIN', 'PPER', 'VVFIN', 'PTKNEG', 'KOUS', 'PPER', 'PDS', 'ADJD', 'VAFIN'), 'right siblings': ['SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 35), 'span': (1, 14), 'left siblings': ['DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(VF grundsatzlich)
		(LK gabe)
		(MF es naturlich die moglichkeit)
		[01;31m(NF[00m [01;33m(VXINF (VC[00m
			[01;31m(SIMPX[00m
				[01;31m(SIMPX[00m
					(VC
						(VXINF
							(PTKZU zu)
							(VVINF fliegen)))[01;31m)[00m
				(KON beziehungsweise)
				[01;31m(SIMPX[00m
					(MF den zug)
					[01;33m(VXINF (VC[00m (VC zu nehmen)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF ich)
				(LK wurde)
				(VC vorschlagen) [01;33mVC) VXINF) VC) VXINF)[00m
				(NF wir fliegen da wir nur begrenzte zeit zur verfugung haben)[01;31m)[00m[01;31m)[00m
		(SU ich weis nicht ob ihnen das recht ist)))
Step:Unary
{'subtrees': ['VC'], 'family': ['SIMPX', 'KON', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKZU', 'VVINF', 'KON', 'ART', 'NN', 'PTKZU', 'VVINF'), 'right siblings': ['KON', 'SIMPX'], 'parent': 'SIMPX', 'auto preterminal span': (7, 14), 'span': (7, 9), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(VF grundsatzlich)
		(LK gabe)
		(MF es naturlich die moglichkeit)
		[01;31m(NF[00m [01;33m(VXINF (VC[00m
			[01;31m(SIMPX[00m
				(VC zu fliegen)
				(KON beziehungsweise)
				[01;31m(SIMPX[00m
					(MF den zug)
					[01;33m(VXINF (VC[00m (VC zu nehmen)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF ich)
				(LK wurde)
				(VC vorschlagen) [01;33mVC) VXINF) VC) VXINF)[00m
				(NF wir fliegen da wir nur begrenzte zeit zur verfugung haben)[01;31m)[00m[01;31m)[00m
		(SU ich weis nicht ob ihnen das recht ist)))
Step:Unary
{'subtrees': ['VC', 'KON', 'SIMPX'], 'family': ['SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKZU', 'VVINF', 'KON', 'ART', 'NN', 'PTKZU', 'VVINF'), 'right siblings': [], 'parent': 'NF', 'auto preterminal span': (7, 14), 'span': (7, 14), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(VF grundsatzlich)
		(LK gabe)
		(MF es naturlich die moglichkeit)
		[01;31m(NF[00m [01;33m(VXINF (VC[00m
			(VC zu fliegen)
			(KON beziehungsweise)
			[01;31m(SIMPX[00m
				(MF den zug)
				[01;33m(VXINF (VC[00m (VC zu nehmen)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF ich)
				(LK wurde)
				(VC vorschlagen) [01;33mVC) VXINF) VC) VXINF)[00m
				(NF wir fliegen da wir nur begrenzte zeit zur verfugung haben)[01;31m)[00m[01;31m)[00m
		(SU ich weis nicht ob ihnen das recht ist)))
Step:Clause Attachment
{'subtrees': ['VC', 'KON', 'SIMPX'], 'family': ['DM', 'VF', 'LK', 'MF', 'NF', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADV', 'VVFIN', 'PPER', 'ADV', 'ART', 'NN', 'PTKZU', 'VVINF', 'KON', 'ART', 'NN', 'PTKZU', 'VVINF', 'PPER', 'VAFIN', 'VVINF', 'PPER', 'VVFIN', 'KOUS', 'PPER', 'ADV', 'ADJA', 'NN', 'APPRART', 'NN', 'VAFIN', 'PPER', 'VVFIN', 'PTKNEG', 'KOUS', 'PPER', 'PDS', 'ADJD', 'VAFIN'), 'right siblings': ['SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 35), 'span': (7, 14), 'left siblings': ['DM', 'VF', 'LK', 'MF'], 'label': 'NF', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(VF grundsatzlich)
		(LK gabe)
		(MF es naturlich die moglichkeit)
		[01;33m(VXINF (VC[00m (VC zu fliegen)
		(KON beziehungsweise)
		[01;31m(SIMPX[00m
			(MF den zug)
			[01;33m(VXINF (VC[00m (VC zu nehmen)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF ich)
				(LK wurde)
				(VC vorschlagen) [01;33mVC) VXINF) VC) VXINF)[00m
				(NF wir fliegen da wir nur begrenzte zeit zur verfugung haben)[01;31m)[00m[01;31m)[00m
		(SU ich weis nicht ob ihnen das recht ist)))
Step:UNSET remove
{'subtrees': ['MF', 'VC'], 'family': ['DM', 'VF', 'LK', 'MF', 'VC', 'KON', 'SIMPX', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADV', 'VVFIN', 'PPER', 'ADV', 'ART', 'NN', 'PTKZU', 'VVINF', 'KON', 'ART', 'NN', 'PTKZU', 'VVINF', 'PPER', 'VAFIN', 'VVINF', 'PPER', 'VVFIN', 'KOUS', 'PPER', 'ADV', 'ADJA', 'NN', 'APPRART', 'NN', 'VAFIN', 'PPER', 'VVFIN', 'PTKNEG', 'KOUS', 'PPER', 'PDS', 'ADJD', 'VAFIN'), 'right siblings': ['SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 35), 'span': (10, 14), 'left siblings': ['DM', 'VF', 'LK', 'MF', 'VC', 'KON'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(VF grundsatzlich)
		(LK gabe)
		(MF es naturlich die moglichkeit)
		[01;33m(VXINF (VC[00m (VC zu fliegen)
		(KON beziehungsweise)
		(MF den zug)
		[01;33m(VXINF (VC[00m (VC zu nehmen)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF ich)
				(LK wurde)
				(VC vorschlagen) [01;33mVC) VXINF) VC) VXINF)[00m
				(NF wir fliegen da wir nur begrenzte zeit zur verfugung haben)[01;31m)[00m[01;31m)[00m
		(SU ich weis nicht ob ihnen das recht ist)))
Step:Unary
{'subtrees': ['VF', 'LK', 'VC', 'NF'], 'family': ['SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'VVINF', 'PPER', 'VVFIN', 'KOUS', 'PPER', 'ADV', 'ADJA', 'NN', 'APPRART', 'NN', 'VAFIN'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (14, 27), 'span': (14, 27), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(VF grundsatzlich)
		(LK gabe)
		(MF es naturlich die moglichkeit)
		[01;33m(VXINF (VC[00m (VC zu fliegen)
		(KON beziehungsweise)
		(MF den zug)
		[01;33m(VXINF (VC[00m (VC zu nehmen)
		[01;31m(SU[00m
			(VF ich)
			(LK wurde)
			(VC vorschlagen) [01;33mVC) VXINF) VC) VXINF)[00m
			(NF wir fliegen da wir nur begrenzte zeit zur verfugung haben)[01;31m)[00m
		(SU ich weis nicht ob ihnen das recht ist)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'VC', 'NF'], 'family': ['DM', 'VF', 'LK', 'MF', 'VC', 'KON', 'MF', 'VC', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADV', 'VVFIN', 'PPER', 'ADV', 'ART', 'NN', 'PTKZU', 'VVINF', 'KON', 'ART', 'NN', 'PTKZU', 'VVINF', 'PPER', 'VAFIN', 'VVINF', 'PPER', 'VVFIN', 'KOUS', 'PPER', 'ADV', 'ADJA', 'NN', 'APPRART', 'NN', 'VAFIN', 'PPER', 'VVFIN', 'PTKNEG', 'KOUS', 'PPER', 'PDS', 'ADJD', 'VAFIN'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 35), 'span': (14, 27), 'left siblings': ['DM', 'VF', 'LK', 'MF', 'VC', 'KON', 'MF', 'VC'], 'label': 'SU', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(VF grundsatzlich)
		(LK gabe)
		(MF es naturlich die moglichkeit)
		[01;36m(VXINF[00m
			[01;36m(VC[00m
				(VC zu fliegen)
				(KON beziehungsweise)
				(MF den zug)
				[01;36m(VXINF[00m
					[01;36m(VC[00m
						(VC zu nehmen)
						(VF ich)
						(LK wurde)
						(VC vorschlagen)[01;36m)[00m[01;36m)[00m[01;36m)[00m[01;36m)[00m
		(NF wir fliegen da wir nur begrenzte zeit zur verfugung haben)
		(SU ich weis nicht ob ihnen das recht ist)))
Step:UNSET add
{'subtrees': ['VC', 'KON', 'MF', 'VC', 'VF', 'LK', 'VC'], 'family': ['DM', 'VF', 'LK', 'MF', 'VC', 'NF', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKZU', 'VVINF', 'KON', 'ART', 'NN', 'PTKZU', 'VVINF', 'PPER', 'VAFIN', 'VVINF'), 'right siblings': [(NF (SIMPX (VF (NX (PPER wir))) (LK (VXFIN (VVFIN fliegen))) (NF (SIMPX (C (KOUS da)) (MF (NX (PPER wir)) (NX (ADVX (ADV nur)) (ADJX (ADJA begrenzte)) (NN zeit)) (PX (APPRART zur) (NX (NN verfugung)))) (VC (VXFIN (VAFIN haben))))))), (SU (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN weis))) (MF (ADVX (PTKNEG nicht))) (NF (SIMPX (C (KOUS ob)) (MF (NX (PPER ihnen)) (NX (PDS das)) (ADJX (ADJD recht))) (VC (VXFIN (VAFIN ist)))))))], 'left siblings': [(DM (PTKANT ja)), (VF (ADVX (ADV grundsatzlich))), (LK (VXFIN (VVFIN gabe))), (MF (NX (PPER es)) (ADVX (ADV naturlich)) (NX (ART die) (NN moglichkeit)))], 'auto preterminal span': (7, 17), 'span': (7, 17), 'parent': 'TURN', 'label': 'VC', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(VF grundsatzlich)
		(LK gabe)
		(MF es naturlich die moglichkeit)
		[01;36m(VXINF[00m
			(VC
				(VC zu fliegen)
				(KON beziehungsweise)
				(MF den zug)
				[01;36m(VXINF[00m
					[01;36m(VC[00m
						(VC zu nehmen)
						(VF ich)
						(LK wurde)
						(VC vorschlagen)[01;36m)[00m[01;36m)[00m)[01;36m)[00m
		(NF wir fliegen da wir nur begrenzte zeit zur verfugung haben)
		(SU ich weis nicht ob ihnen das recht ist)))
Step:Unary
{'subtrees': ['VC'], 'family': ['DM', 'VF', 'LK', 'MF', 'VXINF', 'NF', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKZU', 'VVINF', 'KON', 'ART', 'NN', 'PTKZU', 'VVINF', 'PPER', 'VAFIN', 'VVINF'), 'right siblings': [(NF (SIMPX (VF (NX (PPER wir))) (LK (VXFIN (VVFIN fliegen))) (NF (SIMPX (C (KOUS da)) (MF (NX (PPER wir)) (NX (ADVX (ADV nur)) (ADJX (ADJA begrenzte)) (NN zeit)) (PX (APPRART zur) (NX (NN verfugung)))) (VC (VXFIN (VAFIN haben))))))), (SU (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN weis))) (MF (ADVX (PTKNEG nicht))) (NF (SIMPX (C (KOUS ob)) (MF (NX (PPER ihnen)) (NX (PDS das)) (ADJX (ADJD recht))) (VC (VXFIN (VAFIN ist)))))))], 'left siblings': [(DM (PTKANT ja)), (VF (ADVX (ADV grundsatzlich))), (LK (VXFIN (VVFIN gabe))), (MF (NX (PPER es)) (ADVX (ADV naturlich)) (NX (ART die) (NN moglichkeit)))], 'auto preterminal span': (7, 17), 'span': (7, 17), 'parent': 'TURN', 'label': 'VXINF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(VF grundsatzlich)
		(LK gabe)
		(MF es naturlich die moglichkeit)
		(VXINF
			(VC
				(VC zu fliegen)
				(KON beziehungsweise)
				(MF den zug)
				[01;36m(VXINF[00m
					[01;36m(VC[00m
						(VC zu nehmen)
						(VF ich)
						(LK wurde)
						(VC vorschlagen)[01;36m)[00m[01;36m)[00m))
		(NF wir fliegen da wir nur begrenzte zeit zur verfugung haben)
		(SU ich weis nicht ob ihnen das recht ist)))
Step:UNSET add
{'subtrees': ['VC', 'VF', 'LK', 'VC'], 'family': ['VC', 'KON', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKZU', 'VVINF', 'PPER', 'VAFIN', 'VVINF'), 'right siblings': [], 'left siblings': [(VC (VXINF (PTKZU zu) (VVINF fliegen))), (KON beziehungsweise), (MF (NX (ART den) (NN zug)))], 'auto preterminal span': (12, 17), 'span': (12, 17), 'parent': 'VC', 'label': 'VC', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(VF grundsatzlich)
		(LK gabe)
		(MF es naturlich die moglichkeit)
		(VXINF
			(VC
				(VC zu fliegen)
				(KON beziehungsweise)
				(MF den zug)
				[01;36m(VXINF[00m
					(VC
						(VC zu nehmen)
						(VF ich)
						(LK wurde)
						(VC vorschlagen))[01;36m)[00m))
		(NF wir fliegen da wir nur begrenzte zeit zur verfugung haben)
		(SU ich weis nicht ob ihnen das recht ist)))
Step:Unary
{'subtrees': ['VC'], 'family': ['VC', 'KON', 'MF', 'VXINF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKZU', 'VVINF', 'PPER', 'VAFIN', 'VVINF'), 'right siblings': [], 'left siblings': [(VC (VXINF (PTKZU zu) (VVINF fliegen))), (KON beziehungsweise), (MF (NX (ART den) (NN zug)))], 'auto preterminal span': (12, 17), 'span': (12, 17), 'parent': 'VC', 'label': 'VXINF', 'classified_type': 'Unary', 'type': 'add'}
(TOP ja grundsatzlich gabe es naturlich die moglichkeit zu fliegen beziehungsweise den zug zu nehmen ich wurde vorschlagen wir fliegen da wir nur begrenzte zeit zur verfugung haben ich weis nicht ob ihnen das recht ist)

Sentence 499:
3 Initial errors
0 on fringe, 2 iterations
2 Error:UNSET move
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU na ja etwas spater)
		[01;36m(SU[00m
			(SU also man mus schon so funf stunden rechnen fur die fahrt)
			[01;31m(SU[00m
				(PX
					(PX deswegen)
					[01;36m(PX[00m
						(ADVX vielleicht)
						(PX so um sieben uhr dreiundvierzig)[01;36m)[00m)[01;31m)[00m[01;36m)[00m))
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SU', 'PX'], 'mover info': [('SU', (4, 15))], 'old_family': ['SU', 'SU', 'SU'], 'start left siblings': ['SU'], 'auto preterminals': ('ITJ', 'PTKANT', 'ADV', 'ADJD', 'ADV', 'PIS', 'VMFIN', 'ADV', 'ADV', 'CARD', 'NN', 'VVINF', 'APPR', 'ART', 'NN', 'PROP', 'ADV', 'ADV', 'APPR', 'CARD', 'NN', 'CARD'), 'start right siblings': ['SU'], 'end left siblings': [], 'auto preterminal span': (0, 22), 'movers': ['SU'], 'old_parent': 'TURN', 'end right siblings': ['PX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU na ja etwas spater)
		(SU
			(SU also man mus schon so funf stunden rechnen fur die fahrt)
			(PX
				(PX deswegen)
				[01;36m(PX[00m
					(ADVX vielleicht)
					(PX so um sieben uhr dreiundvierzig)[01;36m)[00m))))
Step:PP Attachment
{'subtrees': ['ADVX', 'PX'], 'family': ['PX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'APPR', 'CARD', 'NN', 'CARD'), 'right siblings': [], 'left siblings': [(PX (PROP deswegen))], 'auto preterminal span': (16, 22), 'span': (16, 22), 'parent': 'PX', 'label': 'PX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP na ja etwas spater also man mus schon so funf stunden rechnen fur die fahrt deswegen vielleicht so um sieben uhr dreiundvierzig)

Sentence 500:
8 Initial errors
0 on fringe, 6 iterations
3 Error:UNSET move
1 Error:UNSET add
1 Error:NP Internal Structure
1 Error:UNSET remove
1 Error:Unary
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;36m(SIMPX[00m
			[01;36m(SU[00m
				(SU es mus nicht das teuerste sein)
				[01;31m(SU[00m
					(SIMPX
						(VF zentrale lage)
						(LK ware)
						(MF naturlich ganz gunstig))[01;31m)[00m[01;36m)[00m[01;36m)[00m
		(SU
			(SIMPX
				(VF deswegen)
				(LK ware)
				[01;36m(MF[00m
					(MF
						(ADVX vielleicht)
						[01;31m(NX[00m
							(NX das zweite)
							[01;31m(NX[00m
								(PX von ihnen)
								(NX genannte)[01;31m)[00m[01;31m)[00m)
					[01;31m(VC[00m
						[01;31m(VXINF[00m
							(VVIZU vorzuziehen)[01;31m)[00m[01;31m)[00m[01;36m)[00m))))
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SU', 'SIMPX'], 'mover info': [('SU', (0, 6))], 'old_family': ['SU', 'SU', 'SU'], 'start left siblings': [], 'auto preterminals': ('PPER', 'VMFIN', 'PTKNEG', 'ART', 'NN', 'VAINF', 'ADJA', 'NN', 'VAFIN', 'ADV', 'ADV', 'ADJD', 'PROP', 'VAFIN', 'ADV', 'ART', 'NN', 'APPR', 'PPER', 'NN', 'VVIZU'), 'start right siblings': ['SU', 'SU'], 'end left siblings': [], 'auto preterminal span': (0, 21), 'adding node already present': False, 'movers': ['SU'], 'old_parent': 'TURN', 'added and moved': True, 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'MF'}
(TOP
	(TURN
		(SIMPX es mus nicht das teuerste sein zentrale lage ware naturlich ganz gunstig)
		(SU
			(SIMPX
				(VF deswegen)
				(LK ware)
				[01;36m(MF[00m
					(MF
						(ADVX vielleicht)
						[01;31m(NX[00m
							(NX das zweite)
							[01;31m(NX[00m
								(PX von ihnen)
								(NX genannte)[01;31m)[00m[01;31m)[00m)
					[01;31m(VC[00m
						[01;31m(VXINF[00m
							(VVIZU vorzuziehen)[01;31m)[00m[01;31m)[00m[01;36m)[00m))))
Step:UNSET add
{'subtrees': ['MF', 'VC'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ART', 'NN', 'APPR', 'PPER', 'NN', 'VVIZU'), 'right siblings': [], 'left siblings': [(VF (PX (PROP deswegen))), (LK (VXFIN (VAFIN ware)))], 'auto preterminal span': (14, 21), 'span': (14, 21), 'parent': 'SIMPX', 'label': 'MF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SIMPX es mus nicht das teuerste sein zentrale lage ware naturlich ganz gunstig)
		(SU
			(SIMPX
				(VF deswegen)
				(LK ware)
				(MF
					(MF
						(ADVX vielleicht)
						[01;31m(NX[00m
							(NX das zweite)
							[01;31m(NX[00m
								(PX von ihnen)
								(NX genannte)[01;31m)[00m[01;31m)[00m)
					[01;31m(VC[00m
						[01;31m(VXINF[00m
							(VVIZU vorzuziehen)[01;31m)[00m[01;31m)[00m)))))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ART', 'NN', 'APPR', 'PPER', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (14, 20), 'span': (15, 20), 'left siblings': ['ADVX'], 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX es mus nicht das teuerste sein zentrale lage ware naturlich ganz gunstig)
		(SU
			(SIMPX
				(VF deswegen)
				(LK ware)
				(MF
					(MF
						(ADVX vielleicht)
						(NX das zweite)
						[01;31m(NX[00m
							(PX von ihnen)
							(NX genannte)[01;31m)[00m)
					[01;31m(VC[00m
						[01;31m(VXINF[00m
							(VVIZU vorzuziehen)[01;31m)[00m[01;31m)[00m)))))
Step:UNSET remove
{'subtrees': ['PX', 'NX'], 'family': ['ADVX', 'NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ART', 'NN', 'APPR', 'PPER', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (14, 20), 'span': (17, 20), 'left siblings': ['ADVX', 'NX'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX es mus nicht das teuerste sein zentrale lage ware naturlich ganz gunstig)
		(SU
			(SIMPX
				(VF deswegen)
				(LK ware)
				(MF
					(MF vielleicht das zweite von ihnen genannte)
					[01;31m(VC[00m
						[01;31m(VXINF[00m
							(VVIZU vorzuziehen)[01;31m)[00m[01;31m)[00m)))))
Step:Unary
{'subtrees': ['VXINF'], 'family': ['MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ART', 'NN', 'APPR', 'PPER', 'NN', 'VVIZU'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (14, 21), 'span': (20, 21), 'left siblings': ['MF'], 'label': 'VC', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX es mus nicht das teuerste sein zentrale lage ware naturlich ganz gunstig)
		(SU
			(SIMPX
				(VF deswegen)
				(LK ware)
				(MF
					(MF vielleicht das zweite von ihnen genannte)
					[01;31m(VXINF[00m
						(VVIZU vorzuziehen)[01;31m)[00m)))))
Step:Single Word Phrase
{'subtrees': ['VVIZU'], 'family': ['MF', 'VXINF'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADV', 'ART', 'NN', 'APPR', 'PPER', 'NN', 'VVIZU'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (14, 21), 'span': (20, 21), 'left siblings': ['MF'], 'label': 'VXINF', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP es mus nicht das teuerste sein zentrale lage ware naturlich ganz gunstig deswegen ware vielleicht das zweite von ihnen genannte vorzuziehen)

Sentence 501:
4 Initial errors
0 on fringe, 1 iterations
4 Error:UNSET move
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;36m(SU[00m
				(DM
					(NX
						(ADJX gute)
						(NN idee)))[01;36m)[00m
			[01;33m(SU[00m (DM ja)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(LK konnten)
				(MF wir mal wieder)
				(VC machen))[01;31m)[00m [01;33mSU)[00m
		(SU haben sie schon einen bestimmten film im auge oder)))
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['DM', 'SIMPX'], 'mover info': [('DM', (2, 3))], 'old_family': ['DM', 'DM'], 'start left siblings': ['DM'], 'auto preterminals': ('ADJA', 'NN', 'PTKANT', 'VMFIN', 'PPER', 'ADV', 'ADV', 'VVINF', 'VAFIN', 'PPER', 'ADV', 'ART', 'ADJA', 'NN', 'APPRART', 'NN', 'ITJ'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 17), 'movers': ['DM'], 'old_parent': 'SU', 'POS confusion': ('PTKANT', 'PTKANT'), 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP gute idee ja konnten wir mal wieder machen haben sie schon einen bestimmten film im auge oder)

Sentence 502:
4 Initial errors
0 on fringe, 4 iterations
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET add
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU gut)
		[01;31m(SU[00m [01;33m(PX (DM[00m
			(DM
				(PX
					(ADVX dann)
					(PX bis dann)))[01;31m)[00m
		[01;31m(SU[00m
			(DM auf wiedersehen) [01;33mDM) PX)[00m
			(DM frau wesenick)[01;31m)[00m))
Step:Unary
{'subtrees': ['DM'], 'family': ['SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'APPR', 'ADV', 'APPR', 'NN', 'NN', 'NE'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 8), 'span': (1, 4), 'left siblings': ['SU'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU gut)
		[01;33m(PX (DM[00m (DM dann bis dann)
		[01;31m(SU[00m
			(DM auf wiedersehen) [01;33mDM) PX)[00m
			(DM frau wesenick)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['DM', 'DM'], 'family': ['SU', 'DM', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'APPR', 'ADV', 'APPR', 'NN', 'NN', 'NE'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 8), 'span': (4, 8), 'left siblings': ['SU', 'DM'], 'label': 'SU', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU gut)
		[01;36m(DM[00m
			[01;36m(PX[00m
				(DM dann bis dann)
				(DM auf wiedersehen)[01;36m)[00m[01;36m)[00m
		(DM frau wesenick)))
Step:UNSET add
{'subtrees': ['DM', 'DM'], 'family': ['SU', 'PX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'APPR', 'ADV', 'APPR', 'NN'), 'right siblings': [(DM (NX (NN frau) (NE wesenick)))], 'left siblings': [(SU (DM (ITJ gut)))], 'auto preterminal span': (1, 6), 'span': (1, 6), 'parent': 'TURN', 'label': 'PX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU gut)
		[01;36m(DM[00m
			(PX
				(DM dann bis dann)
				(DM auf wiedersehen))[01;36m)[00m
		(DM frau wesenick)))
Step:Unary
{'subtrees': ['PX'], 'family': ['SU', 'DM', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'APPR', 'ADV', 'APPR', 'NN'), 'right siblings': [(DM (NX (NN frau) (NE wesenick)))], 'left siblings': [(SU (DM (ITJ gut)))], 'auto preterminal span': (1, 6), 'span': (1, 6), 'parent': 'TURN', 'label': 'DM', 'classified_type': 'Unary', 'type': 'add'}
(TOP gut dann bis dann auf wiedersehen frau wesenick)

Sentence 503:
6 Initial errors
0 on fringe, 2 iterations
5 Error:UNSET move
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SU[00m
	(TOP
		(TURN
			[01;31m(SU[00m
				(SIMPX ich kann ihnen gleich mal einen vorschlag machen fur einen termin)
				[01;31m(NX[00m [01;33m(NX[00m
					(ADVX zwar)
					[01;33m(NX[00m (NX die zweite juliwoche)[01;31m)[00m[01;31m)[00m
			[01;31m(SU[00m
				(NX
					(ART die)
					(ADJX zweite)
					(NN halfte))[01;31m)[00m)) [01;33mNX) NX)[00m[01;36m)[00m
Step:UNSET move
{'new_parent': 'NX', 'new_family': ['ADVX', 'NX', 'SU'], 'mover info': [('SU', (15, 18))], 'old_family': ['SU', 'SU'], 'start left siblings': ['SU'], 'auto preterminals': ('PPER', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'NN', 'VVINF', 'APPR', 'ART', 'NN', 'ADV', 'ART', 'ADJA', 'NN', 'ART', 'ADJA', 'NN'), 'start right siblings': [], 'end left siblings': ['ADVX', 'NX'], 'auto preterminal span': (0, 18), 'adding node already present': False, 'movers': ['SU'], 'old_parent': 'TURN', 'added and moved': True, 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(SU
			(SIMPX ich kann ihnen gleich mal einen vorschlag machen fur einen termin)
			(NX
				(ADVX zwar)
				(NX
					(NX die zweite juliwoche)
					[01;31m(SU[00m
						(NX
							(ART die)
							(ADJX zweite)
							(NN halfte))[01;31m)[00m)))))
Step:Unary
{'subtrees': ['NX'], 'family': ['NX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'ADJA', 'NN', 'ART', 'ADJA', 'NN'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (12, 18), 'span': (15, 18), 'left siblings': ['NX'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ich kann ihnen gleich mal einen vorschlag machen fur einen termin zwar die zweite juliwoche die zweite halfte)

Sentence 504:
3 Initial errors
0 on fringe, 2 iterations
2 Error:UNSET move
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;36m(SU[00m
			[01;31m(SU[00m
				(DM
					(ITJ gut))[01;31m)[00m
			[01;31m(SU[00m
				(SIMPX
					(VF wie)
					(LK fahren)
					(MF wir da)
					(VC hin))[01;31m)[00m[01;36m)[00m
		(SU haben sie da)))
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SU', 'SIMPX'], 'mover info': [('SU', (0, 1))], 'old_family': ['SU', 'SU', 'SU'], 'start left siblings': [], 'auto preterminals': ('ITJ', 'PWAV', 'VVFIN', 'PPER', 'ADV', 'PTKVZ', 'VAFIN', 'PPER', 'ADV'), 'start right siblings': ['SU', 'SU'], 'end left siblings': [], 'auto preterminal span': (0, 9), 'movers': ['SU'], 'old_parent': 'TURN', 'POS confusion': ('ITJ', 'ITJ'), 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			[01;31m(SU[00m
				(DM
					(ITJ gut))[01;31m)[00m
			(SIMPX wie fahren wir da hin))
		(SU haben sie da)))
Step:Unary
{'subtrees': ['DM'], 'family': ['SU', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PWAV', 'VVFIN', 'PPER', 'ADV', 'PTKVZ'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 6), 'span': (0, 1), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP gut wie fahren wir da hin haben sie da)

Sentence 505:
6 Initial errors
0 on fringe, 4 iterations
2 Error:Different label
2 Error:UNSET move
1 Error:Clause Attachment
1 Error:Clause Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM also)
			(SIMPX da bin ich dagegen mus ich sagen)[01;31m)[00m
		[01;31m(SU[00m
			(DM also)
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(VF von munchen nach hannover)
				(LK kann)
				(MF man auch sehr gut mit dem zug)
				(VC fahren)[01;31m)[00m[01;31m)[00m
		[01;36m(NF[00m [01;31m(SU[00m
			(ADVX
				(ADV sonst))[01;31m)[00m[01;36m)[00m)) [01;33mSIMPX)[00m
Step:Different label
{'family': ['SU', 'SU', 'NF'], 'auto preterminal span': (22, 23), 'span': (22, 23), 'subtrees': ['ADVX'], 'parent': 'TURN', 'over_word': False, 'auto preterminals': ('ADV',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('SU', 'NF')}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM also)
			(SIMPX da bin ich dagegen mus ich sagen)[01;31m)[00m
		[01;31m(SU[00m
			(DM also)
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(VF von munchen nach hannover)
				(LK kann)
				(MF man auch sehr gut mit dem zug)
				(VC fahren)[01;31m)[00m[01;31m)[00m
		(NF sonst))) [01;33mSIMPX)[00m
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'VC', 'NF'], 'mover info': [('NF', (22, 23))], 'old_family': ['SU', 'SU', 'NF'], 'start left siblings': ['SU', 'SU'], 'auto preterminals': ('ADV', 'ADV', 'VAFIN', 'PPER', 'PROP', 'VMFIN', 'PPER', 'VVINF', 'ADV', 'APPR', 'NE', 'APPR', 'NE', 'VMFIN', 'PIS', 'ADV', 'ADV', 'ADJD', 'APPR', 'ART', 'NN', 'VVINF', 'ADV'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'MF', 'VC'], 'auto preterminal span': (0, 23), 'movers': ['NF'], 'old_parent': 'TURN', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM also)
			(SIMPX da bin ich dagegen mus ich sagen)[01;31m)[00m
		[01;31m(SU[00m
			(DM also)
			(SIMPX von munchen nach hannover kann man auch sehr gut mit dem zug fahren sonst)[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['DM', 'SIMPX'], 'family': ['SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'VAFIN', 'PPER', 'PROP', 'VMFIN', 'PPER', 'VVINF', 'ADV', 'APPR', 'NE', 'APPR', 'NE', 'VMFIN', 'PIS', 'ADV', 'ADV', 'ADJD', 'APPR', 'ART', 'NN', 'VVINF', 'ADV'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 23), 'span': (0, 8), 'left siblings': [], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX da bin ich dagegen mus ich sagen)
		[01;31m(SU[00m
			(DM also)
			(SIMPX von munchen nach hannover kann man auch sehr gut mit dem zug fahren sonst)[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['DM', 'SIMPX'], 'family': ['DM', 'SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'VAFIN', 'PPER', 'PROP', 'VMFIN', 'PPER', 'VVINF', 'ADV', 'APPR', 'NE', 'APPR', 'NE', 'VMFIN', 'PIS', 'ADV', 'ADV', 'ADJD', 'APPR', 'ART', 'NN', 'VVINF', 'ADV'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 23), 'span': (8, 23), 'left siblings': ['DM', 'SIMPX'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP also da bin ich dagegen mus ich sagen also von munchen nach hannover kann man auch sehr gut mit dem zug fahren sonst)

Sentence 506:
2 Initial errors
0 on fringe, 1 iterations
2 Error:UNSET move
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SU[00m
	(TOP
		(TURN
			(SU sehr gut)
			[01;31m(SU[00m
				(SIMPX
					(KOORD aber)
					(VF es)
					(LK ware)
					(MF vielleicht etwas fruh))[01;31m)[00m))[01;36m)[00m
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SU', 'SIMPX'], 'mover info': [('SU', (0, 2))], 'old_family': ['SU', 'SU'], 'start left siblings': [], 'auto preterminals': ('ADV', 'ADJD', 'KON', 'PPER', 'VAFIN', 'ADV', 'ADV', 'ADJD'), 'start right siblings': ['SU'], 'end left siblings': [], 'auto preterminal span': (0, 8), 'movers': ['SU'], 'old_parent': 'TURN', 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP sehr gut aber es ware vielleicht etwas fruh)

Sentence 507:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU ja gleich in der fruh)
		[01;31m(SU[00m
			(SIMPX
				(VF dann)
				(LK konnten)
				(MF wir die partner schon am nachmittag)
				(VC treffen))[01;31m)[00m
		(SU ja das ware mir recht)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ART', 'NN', 'ADV', 'APPRART', 'NN', 'VVINF', 'PTKANT', 'PDS', 'VAFIN', 'PPER', 'ADJD'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 19), 'span': (5, 14), 'left siblings': ['SU'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja gleich in der fruh dann konnten wir die partner schon am nachmittag treffen ja das ware mir recht)

Sentence 508:
39 Initial errors
0 on fringe, 32 iterations
3 Error:Modifier Attachment
2 Error:Different label
2 Error:Different label
2 Error:Different label
2 Error:UNSET move
2 Error:Modifier Attachment
1 Error:Single Word Phrase
1 Error:Single Word Phrase
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:UNSET add
1 Error:UNSET add
1 Error:Unary
1 Error:Clause Attachment
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:Unary
1 Error:UNSET remove
1 Error:Unary
1 Error:Single Word Phrase
1 Error:Single Word Phrase
1 Error:Single Word Phrase
1 Error:Single Word Phrase
1 Error:Unary
1 Error:UNSET remove
1 Error:Unary
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET add
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;36m(SU[00m
			[01;31m(SU[00m
				(DM
					(PTKANT ja))[01;31m)[00m
			[01;31m(SU[00m
				(SIMPX
					(VF zur unterkunft)
					(LK hatte)
					(MF ich vorschlage)
					(VC zu machen))[01;31m)[00m[01;36m)[00m
		[01;31m(SU[00m
			(SIMPX es gabe hier drei moglichkeiten)
			(DM also)
			[01;31m(NX[00m [01;33m(VF (NX (NX[00m
				(NX ein hotel)
				[01;31m(R[00m
					(C was) [01;33mNX)[00m
					(MF in der nahe des zentrums) [01;33mNX) VF)[00m
					[01;36m(LK[00m [01;31m(VC[00m
						(VXFIN
							(VVFIN liegt))[01;31m)[00m[01;36m)[00m[01;31m)[00m
				[01;36m(MF[00m
					[01;31m(PX[00m
						(ADVX auch)
						(PX mit cafeteria und terrasse)[01;31m)[00m
					(ADJX etwas gunstiger)[01;36m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(DM nee)
			(SIMPX ich sehe grade das ist in der mittleren preislage)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(NX[00m
				(ADVX dann)
				[01;31m(NX[00m
					(NX das schloshotel)
					[01;31m(R[00m
						[01;31m(C[00m
							(NX
								(PRELS das))[01;31m)[00m
						[01;31m(MF[00m
							(PX
								(APPR in)
								(NX der nahe vom bahnhof))[01;31m)[00m
						[01;36m(LK[00m [01;31m(VC[00m
							(VXFIN
								(VAFIN ist))[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
			[01;36m(MF[00m [01;31m(SIMPX[00m
				[01;31m(VF[00m
					[01;31m(NX[00m
						(PDS das)[01;31m)[00m[01;31m)[00m
				[01;31m(LK[00m
					[01;31m(VXFIN[00m
						(VVFIN fande)[01;31m)[00m[01;31m)[00m
				(MF ich auch nicht schlecht)[01;31m)[00m[01;36m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF
					(NX
						[01;31m(NX[00m
							(ART das)
							(ADJX teuerste)
							[01;36m(NX[00m
								(NN [01;33m(NX[00m hotel)[01;36m)[00m[01;31m)[00m
						(NX amgeorgengarten))) [01;33mNX)[00m
				(LK bietet)
				(MF [01;33m(MF[00m
					[01;31m(NX[00m
						(NX den luxus)
						(NX
							[01;36m(NX[00m
								(ART eines)[01;36m)[00m
							[01;36m(NX[00m
								(NN schwimmbads)[01;36m)[00m)[01;31m)[00m)
				[01;31m(NF[00m
					[01;31m(R[00m
						(C was)
						(MF naturlich auch nicht) [01;33mMF)[00m
						(VC zu verachten ist)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Modifier Attachment
{'new_parent': 'VF', 'new_family': ['ART', 'ADJX', 'NX'], 'mover info': [('ART', (57, 58)), ('ADJX', (58, 59))], 'old_family': ['ART', 'ADJX', 'NN'], 'start left siblings': [], 'auto preterminals': ('ART', 'ADJA', 'NN', 'NE'), 'start right siblings': ['NN'], 'end left siblings': [], 'auto preterminal span': (57, 61), 'adding node already present': False, 'movers': ['ART', 'ADJX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': ['NX'], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		[01;36m(SU[00m
			[01;31m(SU[00m
				(DM
					(PTKANT ja))[01;31m)[00m
			[01;31m(SU[00m
				(SIMPX
					(VF zur unterkunft)
					(LK hatte)
					(MF ich vorschlage)
					(VC zu machen))[01;31m)[00m[01;36m)[00m
		[01;31m(SU[00m
			(SIMPX es gabe hier drei moglichkeiten)
			(DM also)
			[01;31m(NX[00m [01;33m(VF (NX (NX[00m
				(NX ein hotel)
				[01;31m(R[00m
					(C was) [01;33mNX)[00m
					(MF in der nahe des zentrums) [01;33mNX) VF)[00m
					[01;36m(LK[00m [01;31m(VC[00m
						(VXFIN
							(VVFIN liegt))[01;31m)[00m[01;36m)[00m[01;31m)[00m
				[01;36m(MF[00m
					[01;31m(PX[00m
						(ADVX auch)
						(PX mit cafeteria und terrasse)[01;31m)[00m
					(ADJX etwas gunstiger)[01;36m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(DM nee)
			(SIMPX ich sehe grade das ist in der mittleren preislage)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(NX[00m
				(ADVX dann)
				[01;31m(NX[00m
					(NX das schloshotel)
					[01;31m(R[00m
						[01;31m(C[00m
							(NX
								(PRELS das))[01;31m)[00m
						[01;31m(MF[00m
							(PX
								(APPR in)
								(NX der nahe vom bahnhof))[01;31m)[00m
						[01;36m(LK[00m [01;31m(VC[00m
							(VXFIN
								(VAFIN ist))[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
			[01;36m(MF[00m [01;31m(SIMPX[00m
				[01;31m(VF[00m
					[01;31m(NX[00m
						(PDS das)[01;31m)[00m[01;31m)[00m
				[01;31m(LK[00m
					[01;31m(VXFIN[00m
						(VVFIN fande)[01;31m)[00m[01;31m)[00m
				(MF ich auch nicht schlecht)[01;31m)[00m[01;36m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(NX das teuerste hotel amgeorgengarten)
				(LK bietet)
				(MF [01;33m(MF[00m
					[01;31m(NX[00m
						(NX den luxus)
						(NX
							[01;36m(NX[00m
								(ART eines)[01;36m)[00m
							[01;36m(NX[00m
								(NN schwimmbads)[01;36m)[00m)[01;31m)[00m)
				[01;31m(NF[00m
					[01;31m(R[00m
						(C was)
						(MF naturlich auch nicht) [01;33mMF)[00m
						(VC zu verachten ist)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Different label
{'family': ['C', 'MF', 'LK'], 'auto preterminal span': (22, 23), 'span': (22, 23), 'subtrees': ['VXFIN'], 'parent': 'R', 'over_word': False, 'auto preterminals': ('VVFIN',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('VC', 'LK')}
(TOP
	(TURN
		[01;36m(SU[00m
			[01;31m(SU[00m
				(DM
					(PTKANT ja))[01;31m)[00m
			[01;31m(SU[00m
				(SIMPX
					(VF zur unterkunft)
					(LK hatte)
					(MF ich vorschlage)
					(VC zu machen))[01;31m)[00m[01;36m)[00m
		[01;31m(SU[00m
			(SIMPX es gabe hier drei moglichkeiten)
			(DM also)
			[01;31m(NX[00m [01;33m(VF (NX (NX[00m
				(NX ein hotel)
				[01;31m(R[00m
					(C was) [01;33mNX)[00m
					(MF in der nahe des zentrums) [01;33mNX) VF)[00m
					(LK liegt)[01;31m)[00m
				[01;36m(MF[00m
					[01;31m(PX[00m
						(ADVX auch)
						(PX mit cafeteria und terrasse)[01;31m)[00m
					(ADJX etwas gunstiger)[01;36m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(DM nee)
			(SIMPX ich sehe grade das ist in der mittleren preislage)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(NX[00m
				(ADVX dann)
				[01;31m(NX[00m
					(NX das schloshotel)
					[01;31m(R[00m
						[01;31m(C[00m
							(NX
								(PRELS das))[01;31m)[00m
						[01;31m(MF[00m
							(PX
								(APPR in)
								(NX der nahe vom bahnhof))[01;31m)[00m
						[01;36m(LK[00m [01;31m(VC[00m
							(VXFIN
								(VAFIN ist))[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
			[01;36m(MF[00m [01;31m(SIMPX[00m
				[01;31m(VF[00m
					[01;31m(NX[00m
						(PDS das)[01;31m)[00m[01;31m)[00m
				[01;31m(LK[00m
					[01;31m(VXFIN[00m
						(VVFIN fande)[01;31m)[00m[01;31m)[00m
				(MF ich auch nicht schlecht)[01;31m)[00m[01;36m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(NX das teuerste hotel amgeorgengarten)
				(LK bietet)
				(MF [01;33m(MF[00m
					[01;31m(NX[00m
						(NX den luxus)
						(NX
							[01;36m(NX[00m
								(ART eines)[01;36m)[00m
							[01;36m(NX[00m
								(NN schwimmbads)[01;36m)[00m)[01;31m)[00m)
				[01;31m(NF[00m
					[01;31m(R[00m
						(C was)
						(MF naturlich auch nicht) [01;33mMF)[00m
						(VC zu verachten ist)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Different label
{'family': ['C', 'MF', 'LK'], 'auto preterminal span': (49, 50), 'span': (49, 50), 'subtrees': ['VXFIN'], 'parent': 'R', 'over_word': False, 'auto preterminals': ('VAFIN',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('VC', 'LK')}
(TOP
	(TURN
		[01;36m(SU[00m
			[01;31m(SU[00m
				(DM
					(PTKANT ja))[01;31m)[00m
			[01;31m(SU[00m
				(SIMPX
					(VF zur unterkunft)
					(LK hatte)
					(MF ich vorschlage)
					(VC zu machen))[01;31m)[00m[01;36m)[00m
		[01;31m(SU[00m
			(SIMPX es gabe hier drei moglichkeiten)
			(DM also)
			[01;31m(NX[00m [01;33m(VF (NX (NX[00m
				(NX ein hotel)
				[01;31m(R[00m
					(C was) [01;33mNX)[00m
					(MF in der nahe des zentrums) [01;33mNX) VF)[00m
					(LK liegt)[01;31m)[00m
				[01;36m(MF[00m
					[01;31m(PX[00m
						(ADVX auch)
						(PX mit cafeteria und terrasse)[01;31m)[00m
					(ADJX etwas gunstiger)[01;36m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(DM nee)
			(SIMPX ich sehe grade das ist in der mittleren preislage)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(NX[00m
				(ADVX dann)
				[01;31m(NX[00m
					(NX das schloshotel)
					[01;31m(R[00m
						[01;31m(C[00m
							(NX
								(PRELS das))[01;31m)[00m
						[01;31m(MF[00m
							(PX
								(APPR in)
								(NX der nahe vom bahnhof))[01;31m)[00m
						(LK ist)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			[01;36m(MF[00m [01;31m(SIMPX[00m
				[01;31m(VF[00m
					[01;31m(NX[00m
						(PDS das)[01;31m)[00m[01;31m)[00m
				[01;31m(LK[00m
					[01;31m(VXFIN[00m
						(VVFIN fande)[01;31m)[00m[01;31m)[00m
				(MF ich auch nicht schlecht)[01;31m)[00m[01;36m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(NX das teuerste hotel amgeorgengarten)
				(LK bietet)
				(MF [01;33m(MF[00m
					[01;31m(NX[00m
						(NX den luxus)
						(NX
							[01;36m(NX[00m
								(ART eines)[01;36m)[00m
							[01;36m(NX[00m
								(NN schwimmbads)[01;36m)[00m)[01;31m)[00m)
				[01;31m(NF[00m
					[01;31m(R[00m
						(C was)
						(MF naturlich auch nicht) [01;33mMF)[00m
						(VC zu verachten ist)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Different label
{'family': ['NX', 'MF'], 'auto preterminal span': (50, 56), 'span': (50, 56), 'subtrees': ['VF', 'LK', 'MF'], 'parent': 'SU', 'over_word': False, 'auto preterminals': ('PDS', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADJD'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('SIMPX', 'MF')}
(TOP
	(TURN
		[01;36m(SU[00m
			[01;31m(SU[00m
				(DM
					(PTKANT ja))[01;31m)[00m
			[01;31m(SU[00m
				(SIMPX
					(VF zur unterkunft)
					(LK hatte)
					(MF ich vorschlage)
					(VC zu machen))[01;31m)[00m[01;36m)[00m
		[01;31m(SU[00m
			(SIMPX es gabe hier drei moglichkeiten)
			(DM also)
			[01;31m(NX[00m [01;33m(VF (NX (NX[00m
				(NX ein hotel)
				[01;31m(R[00m
					(C was) [01;33mNX)[00m
					(MF in der nahe des zentrums) [01;33mNX) VF)[00m
					(LK liegt)[01;31m)[00m
				[01;36m(MF[00m
					[01;31m(PX[00m
						(ADVX auch)
						(PX mit cafeteria und terrasse)[01;31m)[00m
					(ADJX etwas gunstiger)[01;36m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(DM nee)
			(SIMPX ich sehe grade das ist in der mittleren preislage)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(NX[00m
				(ADVX dann)
				[01;31m(NX[00m
					(NX das schloshotel)
					[01;31m(R[00m
						[01;31m(C[00m
							(NX
								(PRELS das))[01;31m)[00m
						[01;31m(MF[00m
							(PX
								(APPR in)
								(NX der nahe vom bahnhof))[01;31m)[00m
						(LK ist)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			(MF
				[01;31m(VF[00m
					[01;31m(NX[00m
						(PDS das)[01;31m)[00m[01;31m)[00m
				[01;31m(LK[00m
					[01;31m(VXFIN[00m
						(VVFIN fande)[01;31m)[00m[01;31m)[00m
				(MF ich auch nicht schlecht))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(NX das teuerste hotel amgeorgengarten)
				(LK bietet)
				(MF [01;33m(MF[00m
					[01;31m(NX[00m
						(NX den luxus)
						(NX
							[01;36m(NX[00m
								(ART eines)[01;36m)[00m
							[01;36m(NX[00m
								(NN schwimmbads)[01;36m)[00m)[01;31m)[00m)
				[01;31m(NF[00m
					[01;31m(R[00m
						(C was)
						(MF naturlich auch nicht) [01;33mMF)[00m
						(VC zu verachten ist)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SU', 'SIMPX'], 'mover info': [('SU', (0, 1))], 'old_family': ['SU', 'SU', 'SU', 'SU', 'SU', 'SU'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'APPRART', 'NN', 'VAFIN', 'PPER', 'NN', 'PTKZU', 'VVINF', 'PPER', 'VVFIN', 'ADV', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'PRELS', 'APPR', 'ART', 'NN', 'ART', 'NN', 'VVFIN', 'ADV', 'APPR', 'NN', 'KON', 'NN', 'ADV', 'ADJD', 'PTKANT', 'PPER', 'VVFIN', 'ADV', 'PDS', 'VAFIN', 'APPR', 'ART', 'ADJA', 'NN', 'ADV', 'ART', 'NE', 'PRELS', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'VAFIN', 'PDS', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADJD', 'KON', 'ART', 'ADJA', 'NN', 'NE', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'PRELS', 'ADV', 'ADV', 'PTKNEG', 'PTKZU', 'VVINF', 'VAFIN'), 'start right siblings': ['SU', 'SU', 'SU', 'SU', 'SU'], 'end left siblings': [], 'auto preterminal span': (0, 73), 'movers': ['SU'], 'old_parent': 'TURN', 'POS confusion': ('PTKANT', 'PTKANT'), 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			[01;31m(SU[00m
				(DM
					(PTKANT ja))[01;31m)[00m
			(SIMPX zur unterkunft hatte ich vorschlage zu machen))
		[01;31m(SU[00m
			(SIMPX es gabe hier drei moglichkeiten)
			(DM also)
			[01;31m(NX[00m [01;33m(VF (NX (NX[00m
				(NX ein hotel)
				[01;31m(R[00m
					(C was) [01;33mNX)[00m
					(MF in der nahe des zentrums) [01;33mNX) VF)[00m
					(LK liegt)[01;31m)[00m
				[01;36m(MF[00m
					[01;31m(PX[00m
						(ADVX auch)
						(PX mit cafeteria und terrasse)[01;31m)[00m
					(ADJX etwas gunstiger)[01;36m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(DM nee)
			(SIMPX ich sehe grade das ist in der mittleren preislage)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(NX[00m
				(ADVX dann)
				[01;31m(NX[00m
					(NX das schloshotel)
					[01;31m(R[00m
						[01;31m(C[00m
							(NX
								(PRELS das))[01;31m)[00m
						[01;31m(MF[00m
							(PX
								(APPR in)
								(NX der nahe vom bahnhof))[01;31m)[00m
						(LK ist)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			(MF
				[01;31m(VF[00m
					[01;31m(NX[00m
						(PDS das)[01;31m)[00m[01;31m)[00m
				[01;31m(LK[00m
					[01;31m(VXFIN[00m
						(VVFIN fande)[01;31m)[00m[01;31m)[00m
				(MF ich auch nicht schlecht))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(NX das teuerste hotel amgeorgengarten)
				(LK bietet)
				(MF [01;33m(MF[00m
					[01;31m(NX[00m
						(NX den luxus)
						(NX
							[01;36m(NX[00m
								(ART eines)[01;36m)[00m
							[01;36m(NX[00m
								(NN schwimmbads)[01;36m)[00m)[01;31m)[00m)
				[01;31m(NF[00m
					[01;31m(R[00m
						(C was)
						(MF naturlich auch nicht) [01;33mMF)[00m
						(VC zu verachten ist)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Modifier Attachment
{'new_parent': 'NX', 'new_family': ['NX', 'R', 'ADVX', 'PX', 'ADJX'], 'mover info': [('ADVX', (23, 24))], 'old_family': ['ADVX', 'PX'], 'start left siblings': [], 'auto preterminals': ('ART', 'NN', 'PRELS', 'APPR', 'ART', 'NN', 'ART', 'NN', 'VVFIN', 'ADV', 'APPR', 'NN', 'KON', 'NN', 'ADV', 'ADJD'), 'start right siblings': ['PX'], 'end left siblings': ['NX', 'R'], 'auto preterminal span': (14, 30), 'adding node already present': False, 'movers': ['ADVX'], 'old_parent': 'PX', 'POS confusion': ('ADV', 'ADV'), 'added and moved': True, 'end right siblings': ['PX', 'ADJX'], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(SU
			[01;31m(SU[00m
				(DM
					(PTKANT ja))[01;31m)[00m
			(SIMPX zur unterkunft hatte ich vorschlage zu machen))
		[01;31m(SU[00m
			(SIMPX es gabe hier drei moglichkeiten)
			(DM also)
			[01;31m(NX[00m [01;33m(VF (NX (NX[00m
				(NX ein hotel)
				[01;31m(R[00m
					(C was) [01;33mNX)[00m
					(MF in der nahe des zentrums) [01;33mNX) VF)[00m
					(LK liegt)[01;31m)[00m
				(MF auch mit cafeteria und terrasse etwas gunstiger)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(DM nee)
			(SIMPX ich sehe grade das ist in der mittleren preislage)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(NX[00m
				(ADVX dann)
				[01;31m(NX[00m
					(NX das schloshotel)
					[01;31m(R[00m
						[01;31m(C[00m
							(NX
								(PRELS das))[01;31m)[00m
						[01;31m(MF[00m
							(PX
								(APPR in)
								(NX der nahe vom bahnhof))[01;31m)[00m
						(LK ist)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			(MF
				[01;31m(VF[00m
					[01;31m(NX[00m
						(PDS das)[01;31m)[00m[01;31m)[00m
				[01;31m(LK[00m
					[01;31m(VXFIN[00m
						(VVFIN fande)[01;31m)[00m[01;31m)[00m
				(MF ich auch nicht schlecht))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(NX das teuerste hotel amgeorgengarten)
				(LK bietet)
				(MF [01;33m(MF[00m
					[01;31m(NX[00m
						(NX den luxus)
						(NX
							[01;36m(NX[00m
								(ART eines)[01;36m)[00m
							[01;36m(NX[00m
								(NN schwimmbads)[01;36m)[00m)[01;31m)[00m)
				[01;31m(NF[00m
					[01;31m(R[00m
						(C was)
						(MF naturlich auch nicht) [01;33mMF)[00m
						(VC zu verachten ist)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Single Word Phrase
{'subtrees': ['ART'], 'family': ['NX', 'NN'], 'over_word': True, 'over words': True, 'auto preterminals': ('ART',), 'right siblings': [(NN schwimmbads)], 'left siblings': [], 'auto preterminal span': (64, 65), 'span': (64, 65), 'parent': 'NX', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SU
			[01;31m(SU[00m
				(DM
					(PTKANT ja))[01;31m)[00m
			(SIMPX zur unterkunft hatte ich vorschlage zu machen))
		[01;31m(SU[00m
			(SIMPX es gabe hier drei moglichkeiten)
			(DM also)
			[01;31m(NX[00m [01;33m(VF (NX (NX[00m
				(NX ein hotel)
				[01;31m(R[00m
					(C was) [01;33mNX)[00m
					(MF in der nahe des zentrums) [01;33mNX) VF)[00m
					(LK liegt)[01;31m)[00m
				(MF auch mit cafeteria und terrasse etwas gunstiger)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(DM nee)
			(SIMPX ich sehe grade das ist in der mittleren preislage)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(NX[00m
				(ADVX dann)
				[01;31m(NX[00m
					(NX das schloshotel)
					[01;31m(R[00m
						[01;31m(C[00m
							(NX
								(PRELS das))[01;31m)[00m
						[01;31m(MF[00m
							(PX
								(APPR in)
								(NX der nahe vom bahnhof))[01;31m)[00m
						(LK ist)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			(MF
				[01;31m(VF[00m
					[01;31m(NX[00m
						(PDS das)[01;31m)[00m[01;31m)[00m
				[01;31m(LK[00m
					[01;31m(VXFIN[00m
						(VVFIN fande)[01;31m)[00m[01;31m)[00m
				(MF ich auch nicht schlecht))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(NX das teuerste hotel amgeorgengarten)
				(LK bietet)
				(MF [01;33m(MF[00m
					[01;31m(NX[00m
						(NX den luxus)
						(NX
							(NX eines)
							[01;36m(NX[00m
								(NN schwimmbads)[01;36m)[00m)[01;31m)[00m)
				[01;31m(NF[00m
					[01;31m(R[00m
						(C was)
						(MF naturlich auch nicht) [01;33mMF)[00m
						(VC zu verachten ist)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Single Word Phrase
{'subtrees': ['NN'], 'family': ['NX', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('NN',), 'right siblings': [], 'left siblings': [(NX (ART eines))], 'auto preterminal span': (65, 66), 'span': (65, 66), 'parent': 'NX', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SU
			[01;31m(SU[00m
				(DM
					(PTKANT ja))[01;31m)[00m
			(SIMPX zur unterkunft hatte ich vorschlage zu machen))
		[01;31m(SU[00m
			(SIMPX es gabe hier drei moglichkeiten)
			(DM also)
			[01;31m(NX[00m [01;33m(VF (NX (NX[00m
				(NX ein hotel)
				[01;31m(R[00m
					(C was) [01;33mNX)[00m
					(MF in der nahe des zentrums) [01;33mNX) VF)[00m
					(LK liegt)[01;31m)[00m
				(MF auch mit cafeteria und terrasse etwas gunstiger)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(DM nee)
			(SIMPX ich sehe grade das ist in der mittleren preislage)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(NX[00m
				(ADVX dann)
				[01;31m(NX[00m
					(NX das schloshotel)
					[01;31m(R[00m
						[01;31m(C[00m
							(NX
								(PRELS das))[01;31m)[00m
						[01;31m(MF[00m
							(PX
								(APPR in)
								(NX der nahe vom bahnhof))[01;31m)[00m
						(LK ist)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			(MF
				[01;31m(VF[00m
					[01;31m(NX[00m
						(PDS das)[01;31m)[00m[01;31m)[00m
				[01;31m(LK[00m
					[01;31m(VXFIN[00m
						(VVFIN fande)[01;31m)[00m[01;31m)[00m
				(MF ich auch nicht schlecht))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(NX das teuerste hotel amgeorgengarten)
				(LK bietet)
				(MF [01;33m(MF[00m
					[01;31m(NX[00m
						(NX den luxus)
						(NX eines schwimmbads)[01;31m)[00m)
				[01;31m(NF[00m
					[01;31m(R[00m
						(C was)
						(MF naturlich auch nicht) [01;33mMF)[00m
						(VC zu verachten ist)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['DM'], 'family': ['SU', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'APPRART', 'NN', 'VAFIN', 'PPER', 'NN', 'PTKZU', 'VVINF'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 8), 'span': (0, 1), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU ja zur unterkunft hatte ich vorschlage zu machen)
		[01;31m(SU[00m
			(SIMPX es gabe hier drei moglichkeiten)
			(DM also)
			[01;31m(NX[00m [01;33m(VF (NX (NX[00m
				(NX ein hotel)
				[01;31m(R[00m
					(C was) [01;33mNX)[00m
					(MF in der nahe des zentrums) [01;33mNX) VF)[00m
					(LK liegt)[01;31m)[00m
				(MF auch mit cafeteria und terrasse etwas gunstiger)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(DM nee)
			(SIMPX ich sehe grade das ist in der mittleren preislage)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(NX[00m
				(ADVX dann)
				[01;31m(NX[00m
					(NX das schloshotel)
					[01;31m(R[00m
						[01;31m(C[00m
							(NX
								(PRELS das))[01;31m)[00m
						[01;31m(MF[00m
							(PX
								(APPR in)
								(NX der nahe vom bahnhof))[01;31m)[00m
						(LK ist)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			(MF
				[01;31m(VF[00m
					[01;31m(NX[00m
						(PDS das)[01;31m)[00m[01;31m)[00m
				[01;31m(LK[00m
					[01;31m(VXFIN[00m
						(VVFIN fande)[01;31m)[00m[01;31m)[00m
				(MF ich auch nicht schlecht))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(NX das teuerste hotel amgeorgengarten)
				(LK bietet)
				(MF [01;33m(MF[00m
					[01;31m(NX[00m
						(NX den luxus)
						(NX eines schwimmbads)[01;31m)[00m)
				[01;31m(NF[00m
					[01;31m(R[00m
						(C was)
						(MF naturlich auch nicht) [01;33mMF)[00m
						(VC zu verachten ist)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['SIMPX', 'DM', 'NX'], 'family': ['SU', 'SU', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'APPRART', 'NN', 'VAFIN', 'PPER', 'NN', 'PTKZU', 'VVINF', 'PPER', 'VVFIN', 'ADV', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'PRELS', 'APPR', 'ART', 'NN', 'ART', 'NN', 'VVFIN', 'ADV', 'APPR', 'NN', 'KON', 'NN', 'ADV', 'ADJD', 'PTKANT', 'PPER', 'VVFIN', 'ADV', 'PDS', 'VAFIN', 'APPR', 'ART', 'ADJA', 'NN', 'ADV', 'ART', 'NE', 'PRELS', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'VAFIN', 'PDS', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADJD', 'KON', 'ART', 'ADJA', 'NN', 'NE', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'PRELS', 'ADV', 'ADV', 'PTKNEG', 'PTKZU', 'VVINF', 'VAFIN'), 'right siblings': ['SU', 'SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 73), 'span': (8, 30), 'left siblings': ['SU'], 'label': 'SU', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU ja zur unterkunft hatte ich vorschlage zu machen)
		(SIMPX es gabe hier drei moglichkeiten)
		(DM also)
		[01;31m(NX[00m [01;33m(VF (NX (NX[00m
			(NX ein hotel)
			[01;31m(R[00m
				(C was) [01;33mNX)[00m
				(MF in der nahe des zentrums) [01;33mNX) VF)[00m
				(LK liegt)[01;31m)[00m
			(MF auch mit cafeteria und terrasse etwas gunstiger)[01;31m)[00m
		[01;31m(SU[00m
			(DM nee)
			(SIMPX ich sehe grade das ist in der mittleren preislage)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(NX[00m
				(ADVX dann)
				[01;31m(NX[00m
					(NX das schloshotel)
					[01;31m(R[00m
						[01;31m(C[00m
							(NX
								(PRELS das))[01;31m)[00m
						[01;31m(MF[00m
							(PX
								(APPR in)
								(NX der nahe vom bahnhof))[01;31m)[00m
						(LK ist)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			(MF
				[01;31m(VF[00m
					[01;31m(NX[00m
						(PDS das)[01;31m)[00m[01;31m)[00m
				[01;31m(LK[00m
					[01;31m(VXFIN[00m
						(VVFIN fande)[01;31m)[00m[01;31m)[00m
				(MF ich auch nicht schlecht))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(NX das teuerste hotel amgeorgengarten)
				(LK bietet)
				(MF [01;33m(MF[00m
					[01;31m(NX[00m
						(NX den luxus)
						(NX eines schwimmbads)[01;31m)[00m)
				[01;31m(NF[00m
					[01;31m(R[00m
						(C was)
						(MF naturlich auch nicht) [01;33mMF)[00m
						(VC zu verachten ist)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['NX', 'R', 'MF'], 'family': ['SU', 'SIMPX', 'DM', 'NX', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'APPRART', 'NN', 'VAFIN', 'PPER', 'NN', 'PTKZU', 'VVINF', 'PPER', 'VVFIN', 'ADV', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'PRELS', 'APPR', 'ART', 'NN', 'ART', 'NN', 'VVFIN', 'ADV', 'APPR', 'NN', 'KON', 'NN', 'ADV', 'ADJD', 'PTKANT', 'PPER', 'VVFIN', 'ADV', 'PDS', 'VAFIN', 'APPR', 'ART', 'ADJA', 'NN', 'ADV', 'ART', 'NE', 'PRELS', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'VAFIN', 'PDS', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADJD', 'KON', 'ART', 'ADJA', 'NN', 'NE', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'PRELS', 'ADV', 'ADV', 'PTKNEG', 'PTKZU', 'VVINF', 'VAFIN'), 'right siblings': ['SU', 'SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 73), 'span': (14, 30), 'left siblings': ['SU', 'SIMPX', 'DM'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU ja zur unterkunft hatte ich vorschlage zu machen)
		(SIMPX es gabe hier drei moglichkeiten)
		(DM also)
		[01;33m(VF (NX (NX[00m (NX ein hotel)
		[01;31m(R[00m
			(C was) [01;33mNX)[00m
			(MF in der nahe des zentrums) [01;33mNX) VF)[00m
			(LK liegt)[01;31m)[00m
		(MF auch mit cafeteria und terrasse etwas gunstiger)
		[01;31m(SU[00m
			(DM nee)
			(SIMPX ich sehe grade das ist in der mittleren preislage)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(NX[00m
				(ADVX dann)
				[01;31m(NX[00m
					(NX das schloshotel)
					[01;31m(R[00m
						[01;31m(C[00m
							(NX
								(PRELS das))[01;31m)[00m
						[01;31m(MF[00m
							(PX
								(APPR in)
								(NX der nahe vom bahnhof))[01;31m)[00m
						(LK ist)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			(MF
				[01;31m(VF[00m
					[01;31m(NX[00m
						(PDS das)[01;31m)[00m[01;31m)[00m
				[01;31m(LK[00m
					[01;31m(VXFIN[00m
						(VVFIN fande)[01;31m)[00m[01;31m)[00m
				(MF ich auch nicht schlecht))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(NX das teuerste hotel amgeorgengarten)
				(LK bietet)
				(MF [01;33m(MF[00m
					[01;31m(NX[00m
						(NX den luxus)
						(NX eines schwimmbads)[01;31m)[00m)
				[01;31m(NF[00m
					[01;31m(R[00m
						(C was)
						(MF naturlich auch nicht) [01;33mMF)[00m
						(VC zu verachten ist)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['C', 'MF', 'LK'], 'family': ['SU', 'SIMPX', 'DM', 'NX', 'R', 'MF', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'APPRART', 'NN', 'VAFIN', 'PPER', 'NN', 'PTKZU', 'VVINF', 'PPER', 'VVFIN', 'ADV', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'PRELS', 'APPR', 'ART', 'NN', 'ART', 'NN', 'VVFIN', 'ADV', 'APPR', 'NN', 'KON', 'NN', 'ADV', 'ADJD', 'PTKANT', 'PPER', 'VVFIN', 'ADV', 'PDS', 'VAFIN', 'APPR', 'ART', 'ADJA', 'NN', 'ADV', 'ART', 'NE', 'PRELS', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'VAFIN', 'PDS', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADJD', 'KON', 'ART', 'ADJA', 'NN', 'NE', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'PRELS', 'ADV', 'ADV', 'PTKNEG', 'PTKZU', 'VVINF', 'VAFIN'), 'right siblings': ['MF', 'SU', 'SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 73), 'span': (16, 23), 'left siblings': ['SU', 'SIMPX', 'DM', 'NX'], 'label': 'R', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU ja zur unterkunft hatte ich vorschlage zu machen)
		(SIMPX es gabe hier drei moglichkeiten)
		(DM also)
		[01;36m(NX[00m
			[01;36m(VF[00m
				[01;36m(NX[00m
					(NX ein hotel)
					(C was)[01;36m)[00m
				(MF in der nahe des zentrums)[01;36m)[00m[01;36m)[00m
		(LK liegt)
		(MF auch mit cafeteria und terrasse etwas gunstiger)
		[01;31m(SU[00m
			(DM nee)
			(SIMPX ich sehe grade das ist in der mittleren preislage)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(NX[00m
				(ADVX dann)
				[01;31m(NX[00m
					(NX das schloshotel)
					[01;31m(R[00m
						[01;31m(C[00m
							(NX
								(PRELS das))[01;31m)[00m
						[01;31m(MF[00m
							(PX
								(APPR in)
								(NX der nahe vom bahnhof))[01;31m)[00m
						(LK ist)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			(MF
				[01;31m(VF[00m
					[01;31m(NX[00m
						(PDS das)[01;31m)[00m[01;31m)[00m
				[01;31m(LK[00m
					[01;31m(VXFIN[00m
						(VVFIN fande)[01;31m)[00m[01;31m)[00m
				(MF ich auch nicht schlecht))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(NX das teuerste hotel amgeorgengarten)
				(LK bietet)
				(MF [01;33m(MF[00m
					[01;31m(NX[00m
						(NX den luxus)
						(NX eines schwimmbads)[01;31m)[00m)
				[01;31m(NF[00m
					[01;31m(R[00m
						(C was)
						(MF naturlich auch nicht) [01;33mMF)[00m
						(VC zu verachten ist)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:UNSET add
{'subtrees': ['NX', 'C'], 'family': ['SU', 'SIMPX', 'DM', 'NX', 'MF', 'LK', 'MF', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'PRELS'), 'right siblings': [(MF (PX (APPR in) (NX (NX (ART der) (NN nahe)) (NX (ART des) (NN zentrums))))), (LK (VXFIN (VVFIN liegt))), (MF (ADVX (ADV auch)) (PX (APPR mit) (NX (NX (NN cafeteria)) (KON und) (NX (NN terrasse)))) (ADJX (ADVX (ADV etwas)) (ADJD gunstiger))), (SU (DM (PTKANT nee)) (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN sehe))) (MF (ADVX (ADV grade))) (NF (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VAFIN ist))) (MF (PX (APPR in) (NX (ART der) (ADJX (ADJA mittleren)) (NN preislage)))))))), (SU (NX (ADVX (ADV dann)) (NX (NX (ART das) (NE schloshotel)) (R (C (NX (PRELS das))) (MF (PX (APPR in) (NX (NX (ART der) (NN nahe)) (PX (APPRART vom) (NX (NN bahnhof)))))) (LK (VXFIN (VAFIN ist)))))) (MF (VF (NX (PDS das))) (LK (VXFIN (VVFIN fande))) (MF (NX (PPER ich)) (ADVX (ADV auch)) (ADVX (PTKNEG nicht)) (ADJX (ADJD schlecht))))), (SU (SIMPX (KOORD (KON und)) (NX (VF (ART das) (ADJX (ADJA teuerste)) (NX (NX (NN hotel)) (NX (NE amgeorgengarten))))) (LK (VXFIN (VVFIN bietet))) (MF (NX (NX (ART den) (NN luxus)) (NX (NX (ART eines)) (NX (NN schwimmbads))))) (NF (R (C (NX (PRELS was))) (MF (ADVX (ADV naturlich)) (ADVX (ADV auch)) (ADVX (PTKNEG nicht))) (VC (VXINF (PTKZU zu) (VVINF verachten)) (VXFIN (VAFIN ist)))))))], 'left siblings': [(SU (DM (PTKANT ja)) (SIMPX (VF (PX (APPRART zur) (NX (NN unterkunft)))) (LK (VXFIN (VAFIN hatte))) (MF (NX (PPER ich)) (NX (NN vorschlage))) (VC (VXINF (PTKZU zu) (VVINF machen))))), (SIMPX (VF (NX (PPER es))) (LK (VXFIN (VVFIN gabe))) (MF (ADVX (ADV hier)) (NX (ADJX (CARD drei)) (NN moglichkeiten)))), (DM (ADVX (ADV also)))], 'auto preterminal span': (14, 17), 'span': (14, 17), 'parent': 'TURN', 'label': 'NX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU ja zur unterkunft hatte ich vorschlage zu machen)
		(SIMPX es gabe hier drei moglichkeiten)
		(DM also)
		[01;36m(NX[00m
			[01;36m(VF[00m
				(NX ein hotel was)
				(MF in der nahe des zentrums)[01;36m)[00m[01;36m)[00m
		(LK liegt)
		(MF auch mit cafeteria und terrasse etwas gunstiger)
		[01;31m(SU[00m
			(DM nee)
			(SIMPX ich sehe grade das ist in der mittleren preislage)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(NX[00m
				(ADVX dann)
				[01;31m(NX[00m
					(NX das schloshotel)
					[01;31m(R[00m
						[01;31m(C[00m
							(NX
								(PRELS das))[01;31m)[00m
						[01;31m(MF[00m
							(PX
								(APPR in)
								(NX der nahe vom bahnhof))[01;31m)[00m
						(LK ist)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			(MF
				[01;31m(VF[00m
					[01;31m(NX[00m
						(PDS das)[01;31m)[00m[01;31m)[00m
				[01;31m(LK[00m
					[01;31m(VXFIN[00m
						(VVFIN fande)[01;31m)[00m[01;31m)[00m
				(MF ich auch nicht schlecht))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(NX das teuerste hotel amgeorgengarten)
				(LK bietet)
				(MF [01;33m(MF[00m
					[01;31m(NX[00m
						(NX den luxus)
						(NX eines schwimmbads)[01;31m)[00m)
				[01;31m(NF[00m
					[01;31m(R[00m
						(C was)
						(MF naturlich auch nicht) [01;33mMF)[00m
						(VC zu verachten ist)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:UNSET add
{'subtrees': ['NX', 'MF'], 'family': ['SU', 'SIMPX', 'DM', 'VF', 'LK', 'MF', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'PRELS', 'APPR', 'ART', 'NN', 'ART', 'NN'), 'right siblings': [(LK (VXFIN (VVFIN liegt))), (MF (ADVX (ADV auch)) (PX (APPR mit) (NX (NX (NN cafeteria)) (KON und) (NX (NN terrasse)))) (ADJX (ADVX (ADV etwas)) (ADJD gunstiger))), (SU (DM (PTKANT nee)) (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN sehe))) (MF (ADVX (ADV grade))) (NF (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VAFIN ist))) (MF (PX (APPR in) (NX (ART der) (ADJX (ADJA mittleren)) (NN preislage)))))))), (SU (NX (ADVX (ADV dann)) (NX (NX (ART das) (NE schloshotel)) (R (C (NX (PRELS das))) (MF (PX (APPR in) (NX (NX (ART der) (NN nahe)) (PX (APPRART vom) (NX (NN bahnhof)))))) (LK (VXFIN (VAFIN ist)))))) (MF (VF (NX (PDS das))) (LK (VXFIN (VVFIN fande))) (MF (NX (PPER ich)) (ADVX (ADV auch)) (ADVX (PTKNEG nicht)) (ADJX (ADJD schlecht))))), (SU (SIMPX (KOORD (KON und)) (NX (VF (ART das) (ADJX (ADJA teuerste)) (NX (NX (NN hotel)) (NX (NE amgeorgengarten))))) (LK (VXFIN (VVFIN bietet))) (MF (NX (NX (ART den) (NN luxus)) (NX (NX (ART eines)) (NX (NN schwimmbads))))) (NF (R (C (NX (PRELS was))) (MF (ADVX (ADV naturlich)) (ADVX (ADV auch)) (ADVX (PTKNEG nicht))) (VC (VXINF (PTKZU zu) (VVINF verachten)) (VXFIN (VAFIN ist)))))))], 'left siblings': [(SU (DM (PTKANT ja)) (SIMPX (VF (PX (APPRART zur) (NX (NN unterkunft)))) (LK (VXFIN (VAFIN hatte))) (MF (NX (PPER ich)) (NX (NN vorschlage))) (VC (VXINF (PTKZU zu) (VVINF machen))))), (SIMPX (VF (NX (PPER es))) (LK (VXFIN (VVFIN gabe))) (MF (ADVX (ADV hier)) (NX (ADJX (CARD drei)) (NN moglichkeiten)))), (DM (ADVX (ADV also)))], 'auto preterminal span': (14, 22), 'span': (14, 22), 'parent': 'TURN', 'label': 'VF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU ja zur unterkunft hatte ich vorschlage zu machen)
		(SIMPX es gabe hier drei moglichkeiten)
		(DM also)
		[01;36m(NX[00m
			(VF
				(NX ein hotel was)
				(MF in der nahe des zentrums))[01;36m)[00m
		(LK liegt)
		(MF auch mit cafeteria und terrasse etwas gunstiger)
		[01;31m(SU[00m
			(DM nee)
			(SIMPX ich sehe grade das ist in der mittleren preislage)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(NX[00m
				(ADVX dann)
				[01;31m(NX[00m
					(NX das schloshotel)
					[01;31m(R[00m
						[01;31m(C[00m
							(NX
								(PRELS das))[01;31m)[00m
						[01;31m(MF[00m
							(PX
								(APPR in)
								(NX der nahe vom bahnhof))[01;31m)[00m
						(LK ist)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			(MF
				[01;31m(VF[00m
					[01;31m(NX[00m
						(PDS das)[01;31m)[00m[01;31m)[00m
				[01;31m(LK[00m
					[01;31m(VXFIN[00m
						(VVFIN fande)[01;31m)[00m[01;31m)[00m
				(MF ich auch nicht schlecht))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(NX das teuerste hotel amgeorgengarten)
				(LK bietet)
				(MF [01;33m(MF[00m
					[01;31m(NX[00m
						(NX den luxus)
						(NX eines schwimmbads)[01;31m)[00m)
				[01;31m(NF[00m
					[01;31m(R[00m
						(C was)
						(MF naturlich auch nicht) [01;33mMF)[00m
						(VC zu verachten ist)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['VF'], 'family': ['SU', 'SIMPX', 'DM', 'NX', 'LK', 'MF', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'PRELS', 'APPR', 'ART', 'NN', 'ART', 'NN'), 'right siblings': [(LK (VXFIN (VVFIN liegt))), (MF (ADVX (ADV auch)) (PX (APPR mit) (NX (NX (NN cafeteria)) (KON und) (NX (NN terrasse)))) (ADJX (ADVX (ADV etwas)) (ADJD gunstiger))), (SU (DM (PTKANT nee)) (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN sehe))) (MF (ADVX (ADV grade))) (NF (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VAFIN ist))) (MF (PX (APPR in) (NX (ART der) (ADJX (ADJA mittleren)) (NN preislage)))))))), (SU (NX (ADVX (ADV dann)) (NX (NX (ART das) (NE schloshotel)) (R (C (NX (PRELS das))) (MF (PX (APPR in) (NX (NX (ART der) (NN nahe)) (PX (APPRART vom) (NX (NN bahnhof)))))) (LK (VXFIN (VAFIN ist)))))) (MF (VF (NX (PDS das))) (LK (VXFIN (VVFIN fande))) (MF (NX (PPER ich)) (ADVX (ADV auch)) (ADVX (PTKNEG nicht)) (ADJX (ADJD schlecht))))), (SU (SIMPX (KOORD (KON und)) (NX (VF (ART das) (ADJX (ADJA teuerste)) (NX (NX (NN hotel)) (NX (NE amgeorgengarten))))) (LK (VXFIN (VVFIN bietet))) (MF (NX (NX (ART den) (NN luxus)) (NX (NX (ART eines)) (NX (NN schwimmbads))))) (NF (R (C (NX (PRELS was))) (MF (ADVX (ADV naturlich)) (ADVX (ADV auch)) (ADVX (PTKNEG nicht))) (VC (VXINF (PTKZU zu) (VVINF verachten)) (VXFIN (VAFIN ist)))))))], 'left siblings': [(SU (DM (PTKANT ja)) (SIMPX (VF (PX (APPRART zur) (NX (NN unterkunft)))) (LK (VXFIN (VAFIN hatte))) (MF (NX (PPER ich)) (NX (NN vorschlage))) (VC (VXINF (PTKZU zu) (VVINF machen))))), (SIMPX (VF (NX (PPER es))) (LK (VXFIN (VVFIN gabe))) (MF (ADVX (ADV hier)) (NX (ADJX (CARD drei)) (NN moglichkeiten)))), (DM (ADVX (ADV also)))], 'auto preterminal span': (14, 22), 'span': (14, 22), 'parent': 'TURN', 'label': 'NX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU ja zur unterkunft hatte ich vorschlage zu machen)
		(SIMPX es gabe hier drei moglichkeiten)
		(DM also)
		(NX ein hotel was in der nahe des zentrums)
		(LK liegt)
		(MF auch mit cafeteria und terrasse etwas gunstiger)
		[01;31m(SU[00m
			(DM nee)
			(SIMPX ich sehe grade das ist in der mittleren preislage)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(NX[00m
				(ADVX dann)
				[01;31m(NX[00m
					(NX das schloshotel)
					[01;31m(R[00m
						[01;31m(C[00m
							(NX
								(PRELS das))[01;31m)[00m
						[01;31m(MF[00m
							(PX
								(APPR in)
								(NX der nahe vom bahnhof))[01;31m)[00m
						(LK ist)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			(MF
				[01;31m(VF[00m
					[01;31m(NX[00m
						(PDS das)[01;31m)[00m[01;31m)[00m
				[01;31m(LK[00m
					[01;31m(VXFIN[00m
						(VVFIN fande)[01;31m)[00m[01;31m)[00m
				(MF ich auch nicht schlecht))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(NX das teuerste hotel amgeorgengarten)
				(LK bietet)
				(MF [01;33m(MF[00m
					[01;31m(NX[00m
						(NX den luxus)
						(NX eines schwimmbads)[01;31m)[00m)
				[01;31m(NF[00m
					[01;31m(R[00m
						(C was)
						(MF naturlich auch nicht) [01;33mMF)[00m
						(VC zu verachten ist)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['DM', 'SIMPX'], 'family': ['SU', 'SIMPX', 'DM', 'NX', 'LK', 'MF', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'APPRART', 'NN', 'VAFIN', 'PPER', 'NN', 'PTKZU', 'VVINF', 'PPER', 'VVFIN', 'ADV', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'PRELS', 'APPR', 'ART', 'NN', 'ART', 'NN', 'VVFIN', 'ADV', 'APPR', 'NN', 'KON', 'NN', 'ADV', 'ADJD', 'PTKANT', 'PPER', 'VVFIN', 'ADV', 'PDS', 'VAFIN', 'APPR', 'ART', 'ADJA', 'NN', 'ADV', 'ART', 'NE', 'PRELS', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'VAFIN', 'PDS', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADJD', 'KON', 'ART', 'ADJA', 'NN', 'NE', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'PRELS', 'ADV', 'ADV', 'PTKNEG', 'PTKZU', 'VVINF', 'VAFIN'), 'right siblings': ['SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 73), 'span': (30, 40), 'left siblings': ['SU', 'SIMPX', 'DM', 'NX', 'LK', 'MF'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU ja zur unterkunft hatte ich vorschlage zu machen)
		(SIMPX es gabe hier drei moglichkeiten)
		(DM also)
		(NX ein hotel was in der nahe des zentrums)
		(LK liegt)
		(MF auch mit cafeteria und terrasse etwas gunstiger)
		(DM nee)
		(SIMPX ich sehe grade das ist in der mittleren preislage)
		[01;31m(SU[00m
			[01;31m(NX[00m
				(ADVX dann)
				[01;31m(NX[00m
					(NX das schloshotel)
					[01;31m(R[00m
						[01;31m(C[00m
							(NX
								(PRELS das))[01;31m)[00m
						[01;31m(MF[00m
							(PX
								(APPR in)
								(NX der nahe vom bahnhof))[01;31m)[00m
						(LK ist)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			(MF
				[01;31m(VF[00m
					[01;31m(NX[00m
						(PDS das)[01;31m)[00m[01;31m)[00m
				[01;31m(LK[00m
					[01;31m(VXFIN[00m
						(VVFIN fande)[01;31m)[00m[01;31m)[00m
				(MF ich auch nicht schlecht))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(NX das teuerste hotel amgeorgengarten)
				(LK bietet)
				(MF [01;33m(MF[00m
					[01;31m(NX[00m
						(NX den luxus)
						(NX eines schwimmbads)[01;31m)[00m)
				[01;31m(NF[00m
					[01;31m(R[00m
						(C was)
						(MF naturlich auch nicht) [01;33mMF)[00m
						(VC zu verachten ist)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['ADVX', 'NX'], 'family': ['NX', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ART', 'NE', 'PRELS', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'VAFIN', 'PDS', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADJD'), 'right siblings': ['MF'], 'parent': 'SU', 'auto preterminal span': (40, 56), 'span': (40, 50), 'left siblings': [], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU ja zur unterkunft hatte ich vorschlage zu machen)
		(SIMPX es gabe hier drei moglichkeiten)
		(DM also)
		(NX ein hotel was in der nahe des zentrums)
		(LK liegt)
		(MF auch mit cafeteria und terrasse etwas gunstiger)
		(DM nee)
		(SIMPX ich sehe grade das ist in der mittleren preislage)
		[01;31m(SU[00m
			(ADVX dann)
			[01;31m(NX[00m
				(NX das schloshotel)
				[01;31m(R[00m
					[01;31m(C[00m
						(NX
							(PRELS das))[01;31m)[00m
					[01;31m(MF[00m
						(PX
							(APPR in)
							(NX der nahe vom bahnhof))[01;31m)[00m
					(LK ist)[01;31m)[00m[01;31m)[00m
			(MF
				[01;31m(VF[00m
					[01;31m(NX[00m
						(PDS das)[01;31m)[00m[01;31m)[00m
				[01;31m(LK[00m
					[01;31m(VXFIN[00m
						(VVFIN fande)[01;31m)[00m[01;31m)[00m
				(MF ich auch nicht schlecht))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(NX das teuerste hotel amgeorgengarten)
				(LK bietet)
				(MF [01;33m(MF[00m
					[01;31m(NX[00m
						(NX den luxus)
						(NX eines schwimmbads)[01;31m)[00m)
				[01;31m(NF[00m
					[01;31m(R[00m
						(C was)
						(MF naturlich auch nicht) [01;33mMF)[00m
						(VC zu verachten ist)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['ADVX', 'NX', 'MF'], 'family': ['SU', 'SIMPX', 'DM', 'NX', 'LK', 'MF', 'DM', 'SIMPX', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'APPRART', 'NN', 'VAFIN', 'PPER', 'NN', 'PTKZU', 'VVINF', 'PPER', 'VVFIN', 'ADV', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'PRELS', 'APPR', 'ART', 'NN', 'ART', 'NN', 'VVFIN', 'ADV', 'APPR', 'NN', 'KON', 'NN', 'ADV', 'ADJD', 'PTKANT', 'PPER', 'VVFIN', 'ADV', 'PDS', 'VAFIN', 'APPR', 'ART', 'ADJA', 'NN', 'ADV', 'ART', 'NE', 'PRELS', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'VAFIN', 'PDS', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADJD', 'KON', 'ART', 'ADJA', 'NN', 'NE', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'PRELS', 'ADV', 'ADV', 'PTKNEG', 'PTKZU', 'VVINF', 'VAFIN'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 73), 'span': (40, 56), 'left siblings': ['SU', 'SIMPX', 'DM', 'NX', 'LK', 'MF', 'DM', 'SIMPX'], 'label': 'SU', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU ja zur unterkunft hatte ich vorschlage zu machen)
		(SIMPX es gabe hier drei moglichkeiten)
		(DM also)
		(NX ein hotel was in der nahe des zentrums)
		(LK liegt)
		(MF auch mit cafeteria und terrasse etwas gunstiger)
		(DM nee)
		(SIMPX ich sehe grade das ist in der mittleren preislage)
		(ADVX dann)
		[01;31m(NX[00m
			(NX das schloshotel)
			[01;31m(R[00m
				[01;31m(C[00m
					(NX
						(PRELS das))[01;31m)[00m
				[01;31m(MF[00m
					(PX
						(APPR in)
						(NX der nahe vom bahnhof))[01;31m)[00m
				(LK ist)[01;31m)[00m[01;31m)[00m
		(MF
			[01;31m(VF[00m
				[01;31m(NX[00m
					(PDS das)[01;31m)[00m[01;31m)[00m
			[01;31m(LK[00m
				[01;31m(VXFIN[00m
					(VVFIN fande)[01;31m)[00m[01;31m)[00m
			(MF ich auch nicht schlecht))
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(NX das teuerste hotel amgeorgengarten)
				(LK bietet)
				(MF [01;33m(MF[00m
					[01;31m(NX[00m
						(NX den luxus)
						(NX eines schwimmbads)[01;31m)[00m)
				[01;31m(NF[00m
					[01;31m(R[00m
						(C was)
						(MF naturlich auch nicht) [01;33mMF)[00m
						(VC zu verachten ist)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['NX', 'R'], 'family': ['SU', 'SIMPX', 'DM', 'NX', 'LK', 'MF', 'DM', 'SIMPX', 'ADVX', 'NX', 'MF', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'APPRART', 'NN', 'VAFIN', 'PPER', 'NN', 'PTKZU', 'VVINF', 'PPER', 'VVFIN', 'ADV', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'PRELS', 'APPR', 'ART', 'NN', 'ART', 'NN', 'VVFIN', 'ADV', 'APPR', 'NN', 'KON', 'NN', 'ADV', 'ADJD', 'PTKANT', 'PPER', 'VVFIN', 'ADV', 'PDS', 'VAFIN', 'APPR', 'ART', 'ADJA', 'NN', 'ADV', 'ART', 'NE', 'PRELS', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'VAFIN', 'PDS', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADJD', 'KON', 'ART', 'ADJA', 'NN', 'NE', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'PRELS', 'ADV', 'ADV', 'PTKNEG', 'PTKZU', 'VVINF', 'VAFIN'), 'right siblings': ['MF', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 73), 'span': (41, 50), 'left siblings': ['SU', 'SIMPX', 'DM', 'NX', 'LK', 'MF', 'DM', 'SIMPX', 'ADVX'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU ja zur unterkunft hatte ich vorschlage zu machen)
		(SIMPX es gabe hier drei moglichkeiten)
		(DM also)
		(NX ein hotel was in der nahe des zentrums)
		(LK liegt)
		(MF auch mit cafeteria und terrasse etwas gunstiger)
		(DM nee)
		(SIMPX ich sehe grade das ist in der mittleren preislage)
		(ADVX dann)
		(NX das schloshotel)
		[01;31m(R[00m
			[01;31m(C[00m
				(NX
					(PRELS das))[01;31m)[00m
			[01;31m(MF[00m
				(PX
					(APPR in)
					(NX der nahe vom bahnhof))[01;31m)[00m
			(LK ist)[01;31m)[00m
		(MF
			[01;31m(VF[00m
				[01;31m(NX[00m
					(PDS das)[01;31m)[00m[01;31m)[00m
			[01;31m(LK[00m
				[01;31m(VXFIN[00m
					(VVFIN fande)[01;31m)[00m[01;31m)[00m
			(MF ich auch nicht schlecht))
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(NX das teuerste hotel amgeorgengarten)
				(LK bietet)
				(MF [01;33m(MF[00m
					[01;31m(NX[00m
						(NX den luxus)
						(NX eines schwimmbads)[01;31m)[00m)
				[01;31m(NF[00m
					[01;31m(R[00m
						(C was)
						(MF naturlich auch nicht) [01;33mMF)[00m
						(VC zu verachten ist)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['NX'], 'family': ['C', 'MF', 'LK'], 'over_word': False, 'over words': False, 'auto preterminals': ('PRELS', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'VAFIN'), 'right siblings': ['MF', 'LK'], 'parent': 'R', 'auto preterminal span': (43, 50), 'span': (43, 44), 'left siblings': [], 'label': 'C', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU ja zur unterkunft hatte ich vorschlage zu machen)
		(SIMPX es gabe hier drei moglichkeiten)
		(DM also)
		(NX ein hotel was in der nahe des zentrums)
		(LK liegt)
		(MF auch mit cafeteria und terrasse etwas gunstiger)
		(DM nee)
		(SIMPX ich sehe grade das ist in der mittleren preislage)
		(ADVX dann)
		(NX das schloshotel)
		[01;31m(R[00m
			(NX das)
			[01;31m(MF[00m
				(PX
					(APPR in)
					(NX der nahe vom bahnhof))[01;31m)[00m
			(LK ist)[01;31m)[00m
		(MF
			[01;31m(VF[00m
				[01;31m(NX[00m
					(PDS das)[01;31m)[00m[01;31m)[00m
			[01;31m(LK[00m
				[01;31m(VXFIN[00m
					(VVFIN fande)[01;31m)[00m[01;31m)[00m
			(MF ich auch nicht schlecht))
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(NX das teuerste hotel amgeorgengarten)
				(LK bietet)
				(MF [01;33m(MF[00m
					[01;31m(NX[00m
						(NX den luxus)
						(NX eines schwimmbads)[01;31m)[00m)
				[01;31m(NF[00m
					[01;31m(R[00m
						(C was)
						(MF naturlich auch nicht) [01;33mMF)[00m
						(VC zu verachten ist)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['NX', 'MF', 'LK'], 'family': ['SU', 'SIMPX', 'DM', 'NX', 'LK', 'MF', 'DM', 'SIMPX', 'ADVX', 'NX', 'R', 'MF', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'APPRART', 'NN', 'VAFIN', 'PPER', 'NN', 'PTKZU', 'VVINF', 'PPER', 'VVFIN', 'ADV', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'PRELS', 'APPR', 'ART', 'NN', 'ART', 'NN', 'VVFIN', 'ADV', 'APPR', 'NN', 'KON', 'NN', 'ADV', 'ADJD', 'PTKANT', 'PPER', 'VVFIN', 'ADV', 'PDS', 'VAFIN', 'APPR', 'ART', 'ADJA', 'NN', 'ADV', 'ART', 'NE', 'PRELS', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'VAFIN', 'PDS', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADJD', 'KON', 'ART', 'ADJA', 'NN', 'NE', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'PRELS', 'ADV', 'ADV', 'PTKNEG', 'PTKZU', 'VVINF', 'VAFIN'), 'right siblings': ['MF', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 73), 'span': (43, 50), 'left siblings': ['SU', 'SIMPX', 'DM', 'NX', 'LK', 'MF', 'DM', 'SIMPX', 'ADVX', 'NX'], 'label': 'R', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU ja zur unterkunft hatte ich vorschlage zu machen)
		(SIMPX es gabe hier drei moglichkeiten)
		(DM also)
		(NX ein hotel was in der nahe des zentrums)
		(LK liegt)
		(MF auch mit cafeteria und terrasse etwas gunstiger)
		(DM nee)
		(SIMPX ich sehe grade das ist in der mittleren preislage)
		(ADVX dann)
		(NX das schloshotel)
		(NX das)
		[01;31m(MF[00m
			(PX
				(APPR in)
				(NX der nahe vom bahnhof))[01;31m)[00m
		(LK ist)
		(MF
			[01;31m(VF[00m
				[01;31m(NX[00m
					(PDS das)[01;31m)[00m[01;31m)[00m
			[01;31m(LK[00m
				[01;31m(VXFIN[00m
					(VVFIN fande)[01;31m)[00m[01;31m)[00m
			(MF ich auch nicht schlecht))
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(NX das teuerste hotel amgeorgengarten)
				(LK bietet)
				(MF [01;33m(MF[00m
					[01;31m(NX[00m
						(NX den luxus)
						(NX eines schwimmbads)[01;31m)[00m)
				[01;31m(NF[00m
					[01;31m(R[00m
						(C was)
						(MF naturlich auch nicht) [01;33mMF)[00m
						(VC zu verachten ist)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['PX'], 'family': ['SU', 'SIMPX', 'DM', 'NX', 'LK', 'MF', 'DM', 'SIMPX', 'ADVX', 'NX', 'NX', 'MF', 'LK', 'MF', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'APPRART', 'NN', 'VAFIN', 'PPER', 'NN', 'PTKZU', 'VVINF', 'PPER', 'VVFIN', 'ADV', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'PRELS', 'APPR', 'ART', 'NN', 'ART', 'NN', 'VVFIN', 'ADV', 'APPR', 'NN', 'KON', 'NN', 'ADV', 'ADJD', 'PTKANT', 'PPER', 'VVFIN', 'ADV', 'PDS', 'VAFIN', 'APPR', 'ART', 'ADJA', 'NN', 'ADV', 'ART', 'NE', 'PRELS', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'VAFIN', 'PDS', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADJD', 'KON', 'ART', 'ADJA', 'NN', 'NE', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'PRELS', 'ADV', 'ADV', 'PTKNEG', 'PTKZU', 'VVINF', 'VAFIN'), 'right siblings': ['LK', 'MF', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 73), 'span': (44, 49), 'left siblings': ['SU', 'SIMPX', 'DM', 'NX', 'LK', 'MF', 'DM', 'SIMPX', 'ADVX', 'NX', 'NX'], 'label': 'MF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU ja zur unterkunft hatte ich vorschlage zu machen)
		(SIMPX es gabe hier drei moglichkeiten)
		(DM also)
		(NX ein hotel was in der nahe des zentrums)
		(LK liegt)
		(MF auch mit cafeteria und terrasse etwas gunstiger)
		(DM nee)
		(SIMPX ich sehe grade das ist in der mittleren preislage)
		(ADVX dann)
		(NX das schloshotel)
		(NX das)
		(PX in der nahe vom bahnhof)
		(LK ist)
		(MF
			[01;31m(VF[00m
				[01;31m(NX[00m
					(PDS das)[01;31m)[00m[01;31m)[00m
			[01;31m(LK[00m
				[01;31m(VXFIN[00m
					(VVFIN fande)[01;31m)[00m[01;31m)[00m
			(MF ich auch nicht schlecht))
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(NX das teuerste hotel amgeorgengarten)
				(LK bietet)
				(MF [01;33m(MF[00m
					[01;31m(NX[00m
						(NX den luxus)
						(NX eines schwimmbads)[01;31m)[00m)
				[01;31m(NF[00m
					[01;31m(R[00m
						(C was)
						(MF naturlich auch nicht) [01;33mMF)[00m
						(VC zu verachten ist)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Single Word Phrase
{'subtrees': ['PDS'], 'family': ['NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('PDS',), 'right siblings': [], 'parent': 'VF', 'auto preterminal span': (50, 51), 'span': (50, 51), 'left siblings': [], 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(SU ja zur unterkunft hatte ich vorschlage zu machen)
		(SIMPX es gabe hier drei moglichkeiten)
		(DM also)
		(NX ein hotel was in der nahe des zentrums)
		(LK liegt)
		(MF auch mit cafeteria und terrasse etwas gunstiger)
		(DM nee)
		(SIMPX ich sehe grade das ist in der mittleren preislage)
		(ADVX dann)
		(NX das schloshotel)
		(NX das)
		(PX in der nahe vom bahnhof)
		(LK ist)
		(MF
			[01;31m(VF[00m
				(PDS das)[01;31m)[00m
			[01;31m(LK[00m
				[01;31m(VXFIN[00m
					(VVFIN fande)[01;31m)[00m[01;31m)[00m
			(MF ich auch nicht schlecht))
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(NX das teuerste hotel amgeorgengarten)
				(LK bietet)
				(MF [01;33m(MF[00m
					[01;31m(NX[00m
						(NX den luxus)
						(NX eines schwimmbads)[01;31m)[00m)
				[01;31m(NF[00m
					[01;31m(R[00m
						(C was)
						(MF naturlich auch nicht) [01;33mMF)[00m
						(VC zu verachten ist)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Single Word Phrase
{'subtrees': ['PDS'], 'family': ['VF', 'LK', 'MF'], 'over_word': True, 'over words': True, 'auto preterminals': ('PDS', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADJD'), 'right siblings': ['LK', 'MF'], 'parent': 'MF', 'auto preterminal span': (50, 56), 'span': (50, 51), 'left siblings': [], 'label': 'VF', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(SU ja zur unterkunft hatte ich vorschlage zu machen)
		(SIMPX es gabe hier drei moglichkeiten)
		(DM also)
		(NX ein hotel was in der nahe des zentrums)
		(LK liegt)
		(MF auch mit cafeteria und terrasse etwas gunstiger)
		(DM nee)
		(SIMPX ich sehe grade das ist in der mittleren preislage)
		(ADVX dann)
		(NX das schloshotel)
		(NX das)
		(PX in der nahe vom bahnhof)
		(LK ist)
		(MF
			(PDS das)
			[01;31m(LK[00m
				[01;31m(VXFIN[00m
					(VVFIN fande)[01;31m)[00m[01;31m)[00m
			(MF ich auch nicht schlecht))
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(NX das teuerste hotel amgeorgengarten)
				(LK bietet)
				(MF [01;33m(MF[00m
					[01;31m(NX[00m
						(NX den luxus)
						(NX eines schwimmbads)[01;31m)[00m)
				[01;31m(NF[00m
					[01;31m(R[00m
						(C was)
						(MF naturlich auch nicht) [01;33mMF)[00m
						(VC zu verachten ist)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Single Word Phrase
{'subtrees': ['VVFIN'], 'family': ['VXFIN'], 'over_word': True, 'over words': True, 'auto preterminals': ('VVFIN',), 'right siblings': [], 'parent': 'LK', 'auto preterminal span': (51, 52), 'span': (51, 52), 'left siblings': [], 'label': 'VXFIN', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(SU ja zur unterkunft hatte ich vorschlage zu machen)
		(SIMPX es gabe hier drei moglichkeiten)
		(DM also)
		(NX ein hotel was in der nahe des zentrums)
		(LK liegt)
		(MF auch mit cafeteria und terrasse etwas gunstiger)
		(DM nee)
		(SIMPX ich sehe grade das ist in der mittleren preislage)
		(ADVX dann)
		(NX das schloshotel)
		(NX das)
		(PX in der nahe vom bahnhof)
		(LK ist)
		(MF
			(PDS das)
			[01;31m(LK[00m
				(VVFIN fande)[01;31m)[00m
			(MF ich auch nicht schlecht))
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(NX das teuerste hotel amgeorgengarten)
				(LK bietet)
				(MF [01;33m(MF[00m
					[01;31m(NX[00m
						(NX den luxus)
						(NX eines schwimmbads)[01;31m)[00m)
				[01;31m(NF[00m
					[01;31m(R[00m
						(C was)
						(MF naturlich auch nicht) [01;33mMF)[00m
						(VC zu verachten ist)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Single Word Phrase
{'subtrees': ['VVFIN'], 'family': ['PDS', 'LK', 'MF'], 'over_word': True, 'over words': True, 'auto preterminals': ('PDS', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADJD'), 'right siblings': ['MF'], 'parent': 'MF', 'auto preterminal span': (50, 56), 'span': (51, 52), 'left siblings': ['PDS'], 'label': 'LK', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(SU ja zur unterkunft hatte ich vorschlage zu machen)
		(SIMPX es gabe hier drei moglichkeiten)
		(DM also)
		(NX ein hotel was in der nahe des zentrums)
		(LK liegt)
		(MF auch mit cafeteria und terrasse etwas gunstiger)
		(DM nee)
		(SIMPX ich sehe grade das ist in der mittleren preislage)
		(ADVX dann)
		(NX das schloshotel)
		(NX das)
		(PX in der nahe vom bahnhof)
		(LK ist)
		(MF das fande ich auch nicht schlecht)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(NX das teuerste hotel amgeorgengarten)
				(LK bietet)
				(MF [01;33m(MF[00m
					[01;31m(NX[00m
						(NX den luxus)
						(NX eines schwimmbads)[01;31m)[00m)
				[01;31m(NF[00m
					[01;31m(R[00m
						(C was)
						(MF naturlich auch nicht) [01;33mMF)[00m
						(VC zu verachten ist)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SU', 'SIMPX', 'DM', 'NX', 'LK', 'MF', 'DM', 'SIMPX', 'ADVX', 'NX', 'NX', 'PX', 'LK', 'MF', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'APPRART', 'NN', 'VAFIN', 'PPER', 'NN', 'PTKZU', 'VVINF', 'PPER', 'VVFIN', 'ADV', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'PRELS', 'APPR', 'ART', 'NN', 'ART', 'NN', 'VVFIN', 'ADV', 'APPR', 'NN', 'KON', 'NN', 'ADV', 'ADJD', 'PTKANT', 'PPER', 'VVFIN', 'ADV', 'PDS', 'VAFIN', 'APPR', 'ART', 'ADJA', 'NN', 'ADV', 'ART', 'NE', 'PRELS', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'VAFIN', 'PDS', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADJD', 'KON', 'ART', 'ADJA', 'NN', 'NE', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'PRELS', 'ADV', 'ADV', 'PTKNEG', 'PTKZU', 'VVINF', 'VAFIN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 73), 'span': (56, 73), 'left siblings': ['SU', 'SIMPX', 'DM', 'NX', 'LK', 'MF', 'DM', 'SIMPX', 'ADVX', 'NX', 'NX', 'PX', 'LK', 'MF'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU ja zur unterkunft hatte ich vorschlage zu machen)
		(SIMPX es gabe hier drei moglichkeiten)
		(DM also)
		(NX ein hotel was in der nahe des zentrums)
		(LK liegt)
		(MF auch mit cafeteria und terrasse etwas gunstiger)
		(DM nee)
		(SIMPX ich sehe grade das ist in der mittleren preislage)
		(ADVX dann)
		(NX das schloshotel)
		(NX das)
		(PX in der nahe vom bahnhof)
		(LK ist)
		(MF das fande ich auch nicht schlecht)
		[01;31m(SIMPX[00m
			(KOORD und)
			(NX das teuerste hotel amgeorgengarten)
			(LK bietet)
			(MF [01;33m(MF[00m
				[01;31m(NX[00m
					(NX den luxus)
					(NX eines schwimmbads)[01;31m)[00m)
			[01;31m(NF[00m
				[01;31m(R[00m
					(C was)
					(MF naturlich auch nicht) [01;33mMF)[00m
					(VC zu verachten ist)[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['KOORD', 'NX', 'LK', 'MF', 'NF'], 'family': ['SU', 'SIMPX', 'DM', 'NX', 'LK', 'MF', 'DM', 'SIMPX', 'ADVX', 'NX', 'NX', 'PX', 'LK', 'MF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'APPRART', 'NN', 'VAFIN', 'PPER', 'NN', 'PTKZU', 'VVINF', 'PPER', 'VVFIN', 'ADV', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'PRELS', 'APPR', 'ART', 'NN', 'ART', 'NN', 'VVFIN', 'ADV', 'APPR', 'NN', 'KON', 'NN', 'ADV', 'ADJD', 'PTKANT', 'PPER', 'VVFIN', 'ADV', 'PDS', 'VAFIN', 'APPR', 'ART', 'ADJA', 'NN', 'ADV', 'ART', 'NE', 'PRELS', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'VAFIN', 'PDS', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADJD', 'KON', 'ART', 'ADJA', 'NN', 'NE', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'PRELS', 'ADV', 'ADV', 'PTKNEG', 'PTKZU', 'VVINF', 'VAFIN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 73), 'span': (56, 73), 'left siblings': ['SU', 'SIMPX', 'DM', 'NX', 'LK', 'MF', 'DM', 'SIMPX', 'ADVX', 'NX', 'NX', 'PX', 'LK', 'MF'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU ja zur unterkunft hatte ich vorschlage zu machen)
		(SIMPX es gabe hier drei moglichkeiten)
		(DM also)
		(NX ein hotel was in der nahe des zentrums)
		(LK liegt)
		(MF auch mit cafeteria und terrasse etwas gunstiger)
		(DM nee)
		(SIMPX ich sehe grade das ist in der mittleren preislage)
		(ADVX dann)
		(NX das schloshotel)
		(NX das)
		(PX in der nahe vom bahnhof)
		(LK ist)
		(MF das fande ich auch nicht schlecht)
		(KOORD und)
		(NX das teuerste hotel amgeorgengarten)
		(LK bietet)
		(MF [01;33m(MF[00m
			[01;31m(NX[00m
				(NX den luxus)
				(NX eines schwimmbads)[01;31m)[00m)
		[01;31m(NF[00m
			[01;31m(R[00m
				(C was)
				(MF naturlich auch nicht) [01;33mMF)[00m
				(VC zu verachten ist)[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['NX', 'NX'], 'family': ['NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'ART', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (62, 66), 'span': (62, 66), 'left siblings': [], 'label': 'NX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU ja zur unterkunft hatte ich vorschlage zu machen)
		(SIMPX es gabe hier drei moglichkeiten)
		(DM also)
		(NX ein hotel was in der nahe des zentrums)
		(LK liegt)
		(MF auch mit cafeteria und terrasse etwas gunstiger)
		(DM nee)
		(SIMPX ich sehe grade das ist in der mittleren preislage)
		(ADVX dann)
		(NX das schloshotel)
		(NX das)
		(PX in der nahe vom bahnhof)
		(LK ist)
		(MF das fande ich auch nicht schlecht)
		(KOORD und)
		(NX das teuerste hotel amgeorgengarten)
		(LK bietet)
		[01;33m(MF[00m (MF den luxus eines schwimmbads)
		[01;31m(NF[00m
			[01;31m(R[00m
				(C was)
				(MF naturlich auch nicht) [01;33mMF)[00m
				(VC zu verachten ist)[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['R'], 'family': ['SU', 'SIMPX', 'DM', 'NX', 'LK', 'MF', 'DM', 'SIMPX', 'ADVX', 'NX', 'NX', 'PX', 'LK', 'MF', 'KOORD', 'NX', 'LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'APPRART', 'NN', 'VAFIN', 'PPER', 'NN', 'PTKZU', 'VVINF', 'PPER', 'VVFIN', 'ADV', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'PRELS', 'APPR', 'ART', 'NN', 'ART', 'NN', 'VVFIN', 'ADV', 'APPR', 'NN', 'KON', 'NN', 'ADV', 'ADJD', 'PTKANT', 'PPER', 'VVFIN', 'ADV', 'PDS', 'VAFIN', 'APPR', 'ART', 'ADJA', 'NN', 'ADV', 'ART', 'NE', 'PRELS', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'VAFIN', 'PDS', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADJD', 'KON', 'ART', 'ADJA', 'NN', 'NE', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'PRELS', 'ADV', 'ADV', 'PTKNEG', 'PTKZU', 'VVINF', 'VAFIN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 73), 'span': (66, 73), 'left siblings': ['SU', 'SIMPX', 'DM', 'NX', 'LK', 'MF', 'DM', 'SIMPX', 'ADVX', 'NX', 'NX', 'PX', 'LK', 'MF', 'KOORD', 'NX', 'LK', 'MF'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU ja zur unterkunft hatte ich vorschlage zu machen)
		(SIMPX es gabe hier drei moglichkeiten)
		(DM also)
		(NX ein hotel was in der nahe des zentrums)
		(LK liegt)
		(MF auch mit cafeteria und terrasse etwas gunstiger)
		(DM nee)
		(SIMPX ich sehe grade das ist in der mittleren preislage)
		(ADVX dann)
		(NX das schloshotel)
		(NX das)
		(PX in der nahe vom bahnhof)
		(LK ist)
		(MF das fande ich auch nicht schlecht)
		(KOORD und)
		(NX das teuerste hotel amgeorgengarten)
		(LK bietet)
		[01;33m(MF[00m (MF den luxus eines schwimmbads)
		[01;31m(R[00m
			(C was)
			(MF naturlich auch nicht) [01;33mMF)[00m
			(VC zu verachten ist)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['C', 'MF', 'VC'], 'family': ['SU', 'SIMPX', 'DM', 'NX', 'LK', 'MF', 'DM', 'SIMPX', 'ADVX', 'NX', 'NX', 'PX', 'LK', 'MF', 'KOORD', 'NX', 'LK', 'MF', 'R'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'APPRART', 'NN', 'VAFIN', 'PPER', 'NN', 'PTKZU', 'VVINF', 'PPER', 'VVFIN', 'ADV', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'PRELS', 'APPR', 'ART', 'NN', 'ART', 'NN', 'VVFIN', 'ADV', 'APPR', 'NN', 'KON', 'NN', 'ADV', 'ADJD', 'PTKANT', 'PPER', 'VVFIN', 'ADV', 'PDS', 'VAFIN', 'APPR', 'ART', 'ADJA', 'NN', 'ADV', 'ART', 'NE', 'PRELS', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'VAFIN', 'PDS', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADJD', 'KON', 'ART', 'ADJA', 'NN', 'NE', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'PRELS', 'ADV', 'ADV', 'PTKNEG', 'PTKZU', 'VVINF', 'VAFIN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 73), 'span': (66, 73), 'left siblings': ['SU', 'SIMPX', 'DM', 'NX', 'LK', 'MF', 'DM', 'SIMPX', 'ADVX', 'NX', 'NX', 'PX', 'LK', 'MF', 'KOORD', 'NX', 'LK', 'MF'], 'label': 'R', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU ja zur unterkunft hatte ich vorschlage zu machen)
		(SIMPX es gabe hier drei moglichkeiten)
		(DM also)
		(NX ein hotel was in der nahe des zentrums)
		(LK liegt)
		(MF auch mit cafeteria und terrasse etwas gunstiger)
		(DM nee)
		(SIMPX ich sehe grade das ist in der mittleren preislage)
		(ADVX dann)
		(NX das schloshotel)
		(NX das)
		(PX in der nahe vom bahnhof)
		(LK ist)
		(MF das fande ich auch nicht schlecht)
		(KOORD und)
		(NX das teuerste hotel amgeorgengarten)
		(LK bietet)
		[01;36m(MF[00m
			(MF den luxus eines schwimmbads)
			(C was)
			(MF naturlich auch nicht)[01;36m)[00m
		(VC zu verachten ist)))
Step:UNSET add
{'subtrees': ['MF', 'C', 'MF'], 'family': ['SU', 'SIMPX', 'DM', 'NX', 'LK', 'MF', 'DM', 'SIMPX', 'ADVX', 'NX', 'NX', 'PX', 'LK', 'MF', 'KOORD', 'NX', 'LK', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'ART', 'NN', 'PRELS', 'ADV', 'ADV', 'PTKNEG'), 'right siblings': [(VC (VXINF (PTKZU zu) (VVINF verachten)) (VXFIN (VAFIN ist)))], 'left siblings': [(SU (DM (PTKANT ja)) (SIMPX (VF (PX (APPRART zur) (NX (NN unterkunft)))) (LK (VXFIN (VAFIN hatte))) (MF (NX (PPER ich)) (NX (NN vorschlage))) (VC (VXINF (PTKZU zu) (VVINF machen))))), (SIMPX (VF (NX (PPER es))) (LK (VXFIN (VVFIN gabe))) (MF (ADVX (ADV hier)) (NX (ADJX (CARD drei)) (NN moglichkeiten)))), (DM (ADVX (ADV also))), (NX (VF (NX (NX (ART ein) (NN hotel)) (C (NX (PRELS was)))) (MF (PX (APPR in) (NX (NX (ART der) (NN nahe)) (NX (ART des) (NN zentrums))))))), (LK (VXFIN (VVFIN liegt))), (MF (ADVX (ADV auch)) (PX (APPR mit) (NX (NX (NN cafeteria)) (KON und) (NX (NN terrasse)))) (ADJX (ADVX (ADV etwas)) (ADJD gunstiger))), (DM (PTKANT nee)), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN sehe))) (MF (ADVX (ADV grade))) (NF (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VAFIN ist))) (MF (PX (APPR in) (NX (ART der) (ADJX (ADJA mittleren)) (NN preislage))))))), (ADVX (ADV dann)), (NX (ART das) (NE schloshotel)), (NX (PRELS das)), (PX (APPR in) (NX (NX (ART der) (NN nahe)) (PX (APPRART vom) (NX (NN bahnhof))))), (LK (VXFIN (VAFIN ist))), (MF (PDS das) (VVFIN fande) (MF (NX (PPER ich)) (ADVX (ADV auch)) (ADVX (PTKNEG nicht)) (ADJX (ADJD schlecht)))), (KOORD (KON und)), (NX (VF (ART das) (ADJX (ADJA teuerste)) (NX (NX (NN hotel)) (NX (NE amgeorgengarten))))), (LK (VXFIN (VVFIN bietet)))], 'auto preterminal span': (62, 70), 'span': (62, 70), 'parent': 'TURN', 'label': 'MF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP ja zur unterkunft hatte ich vorschlage zu machen es gabe hier drei moglichkeiten also ein hotel was in der nahe des zentrums liegt auch mit cafeteria und terrasse etwas gunstiger nee ich sehe grade das ist in der mittleren preislage dann das schloshotel das in der nahe vom bahnhof ist das fande ich auch nicht schlecht und das teuerste hotel amgeorgengarten bietet den luxus eines schwimmbads was naturlich auch nicht zu verachten ist)

Sentence 509:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU und am abend konnten wir auch noch was unternehmen)
		(SU
			(SIMPX
				[01;31m(LK[00m
					(VXFIN
						(VMFIN konnten))[01;31m)[00m
				(MF mal wieder ins kino)
				(VC gehen)))))
Step:Unary
{'subtrees': ['VXFIN'], 'family': ['LK', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('VMFIN', 'ADV', 'ADV', 'APPRART', 'NN', 'VVINF'), 'right siblings': ['MF', 'VC'], 'parent': 'SIMPX', 'auto preterminal span': (9, 15), 'span': (9, 10), 'left siblings': [], 'label': 'LK', 'classified_type': 'Unary', 'type': 'remove'}
(TOP und am abend konnten wir auch noch was unternehmen konnten mal wieder ins kino gehen)

Sentence 510:
6 Initial errors
0 on fringe, 3 iterations
3 Error:UNSET move
2 Error:UNSET move
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SU[00m
	(TOP
		(TURN
			[01;31m(SU[00m
				(DM nee)
				(SIMPX
					(VF ich)
					(LK hatte)
					[01;36m(MF[00m
						(APPR in)
						[01;31m(MF[00m
							(NX
								(DP so wenig)
								(NN zeit))[01;31m)[00m[01;36m)[00m
					(NF das ich mich darum nicht gekummert habe))
				[01;33m(SIMPX[00m (SIMPX aber es ware ein guter anlas)[01;31m)[00m
			[01;31m(SU[00m
				(NX
					(PDS das))[01;31m)[00m)) [01;33mSIMPX)[00m[01;36m)[00m
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['DM', 'SIMPX', 'SIMPX', 'SU'], 'mover info': [('SU', (20, 21))], 'old_family': ['SU', 'SU'], 'start left siblings': ['SU'], 'auto preterminals': ('PTKANT', 'PPER', 'VAFIN', 'APPR', 'ADV', 'PIAT', 'NN', 'KOUS', 'PPER', 'PRF', 'PROP', 'PTKNEG', 'VVPP', 'VAFIN', 'KON', 'PPER', 'VAFIN', 'ART', 'ADJA', 'NN', 'PDS'), 'start right siblings': [], 'end left siblings': ['DM', 'SIMPX', 'SIMPX'], 'auto preterminal span': (0, 21), 'adding node already present': False, 'movers': ['SU'], 'old_parent': 'TURN', 'POS confusion': ('PDS', 'PDS'), 'added and moved': True, 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'SIMPX'}
(TOP
	(TURN
		(SU
			(DM nee)
			(SIMPX
				(VF ich)
				(LK hatte)
				[01;36m(MF[00m
					(APPR in)
					[01;31m(MF[00m
						(NX
							(DP so wenig)
							(NN zeit))[01;31m)[00m[01;36m)[00m
				(NF das ich mich darum nicht gekummert habe))
			(SIMPX
				(SIMPX aber es ware ein guter anlas)
				[01;31m(SU[00m
					(NX
						(PDS das))[01;31m)[00m))))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['APPR', 'NX'], 'mover info': [('APPR', (3, 4))], 'old_family': ['VF', 'LK', 'APPR', 'MF', 'NF'], 'start left siblings': ['VF', 'LK'], 'auto preterminals': ('PPER', 'VAFIN', 'APPR', 'ADV', 'PIAT', 'NN', 'KOUS', 'PPER', 'PRF', 'PROP', 'PTKNEG', 'VVPP', 'VAFIN'), 'start right siblings': ['MF', 'NF'], 'end left siblings': [], 'auto preterminal span': (1, 14), 'movers': ['APPR'], 'old_parent': 'SIMPX', 'POS confusion': ('APPR', 'APPR'), 'end right siblings': ['NX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			(DM nee)
			(SIMPX ich hatte in so wenig zeit das ich mich darum nicht gekummert habe)
			(SIMPX
				(SIMPX aber es ware ein guter anlas)
				[01;31m(SU[00m
					(NX
						(PDS das))[01;31m)[00m))))
Step:Unary
{'subtrees': ['NX'], 'family': ['SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'PPER', 'VAFIN', 'ART', 'ADJA', 'NN', 'PDS'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (14, 21), 'span': (20, 21), 'left siblings': ['SIMPX'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP nee ich hatte in so wenig zeit das ich mich darum nicht gekummert habe aber es ware ein guter anlas das)

Sentence 511:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM
				(ITJ genau))[01;31m)[00m
		(SU ja dann)))
Step:Unary
{'subtrees': ['DM'], 'family': ['SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PTKANT', 'ADV'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 3), 'span': (0, 1), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP genau ja dann)

Sentence 512:
0 Initial errors
0 on fringe, 0 iterations

Sentence 513:
23 Initial errors
0 on fringe, 16 iterations
3 Error:VP Attachment
2 Error:Single Word Phrase
2 Error:Single Word Phrase
2 Error:Different label
2 Error:Clause Attachment
1 Error:Single Word Phrase
1 Error:Clause Attachment
1 Error:Clause Attachment
1 Error:UNSET remove
2 Error:PP Attachment
1 Error:UNSET remove
1 Error:Clause Attachment
1 Error:PP Attachment
1 Error:Modifier Attachment
1 Error:Modifier Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF wir)
				(LK wollten)
				[01;31m(FKOORD[00m
					(MVC uns ja fur ein meeting treffen)
					(KON beziehungsweise)
					[01;31m(MVC[00m [01;33m(MVCN (MVCN[00m
						(MF eines)
						(VC ausmachen)[01;31m)[00m[01;31m)[00m
				[01;31m(NF[00m
					[01;31m(PX[00m
						(PX in hannover) [01;33mMVCN)[00m
						(SIMPX
							(C wenn)
							(MF
								(NX ich)
								(NX mich)
								[01;36m(ADVX[00m [01;31m(ADJX[00m
									(ADJD recht)[01;31m)[00m[01;36m)[00m)
							(VC entsinne))[01;31m)[00m
					[01;36m(NF[00m
						(SIMPX [01;33m(C[00m
							(C weil)
							[01;31m(MF[00m
								(ADVX da) [01;33mC)[00m
								(NX die geschaftspartner)
								(ADVX auch)
								(NX eine filiale)
								(ADVX jetzt)[01;31m)[00m
							[01;31m(VC[00m
								[01;36m(NX[00m [01;31m(VXINF[00m
									(VVPP eroffnet)[01;31m)[00m[01;36m)[00m
								[01;36m(VC[00m
									(VXFIN
										(VAFIN haben))[01;36m)[00m[01;31m)[00m)[01;36m)[00m[01;31m)[00m[01;31m)[00m [01;33mMVCN)[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(DM ja)
				(SIMPX ich weis nicht)
				[01;36m(SIMPX[00m
					(VF es)
					(LK sollte)
					(MF auf alle falle noch in den nachsten drei monaten)
					(VC geschehen)
					[01;36m(SU[00m [01;31m(NF[00m
						[01;31m(PX[00m
							(NX meiner ansicht)
							[01;36m(VC[00m
								(APPO nach)[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
		(SU wie sehen sie das)))
Step:VP Attachment
{'new_parent': 'SIMPX', 'new_family': ['C', 'MF', 'VXINF', 'VC'], 'mover info': [('VXINF', (26, 27))], 'old_family': ['VXINF', 'VXFIN'], 'start left siblings': [], 'auto preterminals': ('KOUS', 'ADV', 'ART', 'NN', 'ADV', 'ART', 'NN', 'ADV', 'VVPP', 'VAFIN'), 'start right siblings': ['VXFIN'], 'end left siblings': ['C', 'MF'], 'auto preterminal span': (18, 28), 'adding node already present': False, 'movers': ['VXINF'], 'old_parent': 'VC', 'POS confusion': ('VVPP', 'VVPP'), 'added and moved': True, 'end right siblings': ['VC'], 'classified_type': 'VP Attachment', 'type': 'move', 'added label': 'VC'}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF wir)
				(LK wollten)
				[01;31m(FKOORD[00m
					(MVC uns ja fur ein meeting treffen)
					(KON beziehungsweise)
					[01;31m(MVC[00m [01;33m(MVCN (MVCN[00m
						(MF eines)
						(VC ausmachen)[01;31m)[00m[01;31m)[00m
				[01;31m(NF[00m
					[01;31m(PX[00m
						(PX in hannover) [01;33mMVCN)[00m
						(SIMPX
							(C wenn)
							(MF
								(NX ich)
								(NX mich)
								[01;36m(ADVX[00m [01;31m(ADJX[00m
									(ADJD recht)[01;31m)[00m[01;36m)[00m)
							(VC entsinne))[01;31m)[00m
					(NF [01;33m(C[00m
						(SIMPX
							(C weil)
							[01;31m(MF[00m
								(ADVX da) [01;33mC)[00m
								(NX die geschaftspartner)
								(ADVX auch)
								(NX eine filiale)
								(ADVX jetzt)[01;31m)[00m
							[01;36m(NX[00m [01;31m(VXINF[00m
								(VVPP eroffnet)[01;31m)[00m[01;36m)[00m
							(VC haben)))[01;31m)[00m[01;31m)[00m [01;33mMVCN)[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(DM ja)
				(SIMPX ich weis nicht)
				[01;36m(SIMPX[00m
					(VF es)
					(LK sollte)
					(MF auf alle falle noch in den nachsten drei monaten)
					(VC geschehen)
					[01;36m(SU[00m [01;31m(NF[00m
						[01;31m(PX[00m
							(NX meiner ansicht)
							[01;36m(VC[00m
								(APPO nach)[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
		(SU wie sehen sie das)))
Step:Single Word Phrase
{'family': ['NX', 'NX', 'ADVX'], 'auto preterminal span': (16, 17), 'span': (16, 17), 'subtrees': ['ADJD'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('ADJD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'ADVX')}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF wir)
				(LK wollten)
				[01;31m(FKOORD[00m
					(MVC uns ja fur ein meeting treffen)
					(KON beziehungsweise)
					[01;31m(MVC[00m [01;33m(MVCN (MVCN[00m
						(MF eines)
						(VC ausmachen)[01;31m)[00m[01;31m)[00m
				[01;31m(NF[00m
					[01;31m(PX[00m
						(PX in hannover) [01;33mMVCN)[00m
						(SIMPX wenn ich mich recht entsinne)[01;31m)[00m
					(NF [01;33m(C[00m
						(SIMPX
							(C weil)
							[01;31m(MF[00m
								(ADVX da) [01;33mC)[00m
								(NX die geschaftspartner)
								(ADVX auch)
								(NX eine filiale)
								(ADVX jetzt)[01;31m)[00m
							[01;36m(NX[00m [01;31m(VXINF[00m
								(VVPP eroffnet)[01;31m)[00m[01;36m)[00m
							(VC haben)))[01;31m)[00m[01;31m)[00m [01;33mMVCN)[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(DM ja)
				(SIMPX ich weis nicht)
				[01;36m(SIMPX[00m
					(VF es)
					(LK sollte)
					(MF auf alle falle noch in den nachsten drei monaten)
					(VC geschehen)
					[01;36m(SU[00m [01;31m(NF[00m
						[01;31m(PX[00m
							(NX meiner ansicht)
							[01;36m(VC[00m
								(APPO nach)[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
		(SU wie sehen sie das)))
Step:Single Word Phrase
{'family': ['C', 'MF', 'NX', 'VC'], 'auto preterminal span': (26, 27), 'span': (26, 27), 'subtrees': ['VVPP'], 'parent': 'SIMPX', 'over_word': True, 'auto preterminals': ('VVPP',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VXINF', 'NX')}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF wir)
				(LK wollten)
				[01;31m(FKOORD[00m
					(MVC uns ja fur ein meeting treffen)
					(KON beziehungsweise)
					[01;31m(MVC[00m [01;33m(MVCN (MVCN[00m
						(MF eines)
						(VC ausmachen)[01;31m)[00m[01;31m)[00m
				[01;31m(NF[00m
					[01;31m(PX[00m
						(PX in hannover) [01;33mMVCN)[00m
						(SIMPX wenn ich mich recht entsinne)[01;31m)[00m
					(NF [01;33m(C[00m
						(SIMPX
							(C weil)
							[01;31m(MF[00m
								(ADVX da) [01;33mC)[00m
								(NX die geschaftspartner)
								(ADVX auch)
								(NX eine filiale)
								(ADVX jetzt)[01;31m)[00m
							(NX eroffnet)
							(VC haben)))[01;31m)[00m[01;31m)[00m [01;33mMVCN)[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(DM ja)
				(SIMPX ich weis nicht)
				[01;36m(SIMPX[00m
					(VF es)
					(LK sollte)
					(MF auf alle falle noch in den nachsten drei monaten)
					(VC geschehen)
					[01;36m(SU[00m [01;31m(NF[00m
						[01;31m(PX[00m
							(NX meiner ansicht)
							[01;36m(VC[00m
								(APPO nach)[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
		(SU wie sehen sie das)))
Step:Different label
{'family': ['SU'], 'auto preterminal span': (45, 48), 'span': (45, 48), 'subtrees': ['NX', 'APPO'], 'parent': 'NF', 'over_word': False, 'auto preterminals': ('PPOSAT', 'NN', 'APPO'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('PX', 'SU')}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF wir)
				(LK wollten)
				[01;31m(FKOORD[00m
					(MVC uns ja fur ein meeting treffen)
					(KON beziehungsweise)
					[01;31m(MVC[00m [01;33m(MVCN (MVCN[00m
						(MF eines)
						(VC ausmachen)[01;31m)[00m[01;31m)[00m
				[01;31m(NF[00m
					[01;31m(PX[00m
						(PX in hannover) [01;33mMVCN)[00m
						(SIMPX wenn ich mich recht entsinne)[01;31m)[00m
					(NF [01;33m(C[00m
						(SIMPX
							(C weil)
							[01;31m(MF[00m
								(ADVX da) [01;33mC)[00m
								(NX die geschaftspartner)
								(ADVX auch)
								(NX eine filiale)
								(ADVX jetzt)[01;31m)[00m
							(NX eroffnet)
							(VC haben)))[01;31m)[00m[01;31m)[00m [01;33mMVCN)[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(DM ja)
				(SIMPX ich weis nicht)
				[01;36m(SIMPX[00m
					(VF es)
					(LK sollte)
					(MF auf alle falle noch in den nachsten drei monaten)
					(VC geschehen)
					[01;31m(NF[00m
						(SU
							(NX meiner ansicht)
							[01;36m(VC[00m
								(APPO nach)[01;36m)[00m)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
		(SU wie sehen sie das)))
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'FKOORD', 'NF', 'KOORD', 'DM', 'SIMPX'], 'mover info': [('KOORD', (28, 29)), ('DM', (29, 30)), ('SIMPX', (30, 33))], 'old_family': ['KOORD', 'DM', 'SIMPX', 'VF', 'LK', 'MF', 'VC', 'NF'], 'start left siblings': [], 'auto preterminals': ('PPER', 'VMFIN', 'PRF', 'ADV', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'PIS', 'VVINF', 'APPR', 'NE', 'KOUS', 'PPER', 'PRF', 'ADJD', 'VVFIN', 'KOUS', 'ADV', 'ART', 'NN', 'ADV', 'ART', 'NN', 'ADV', 'VVPP', 'VAFIN', 'KON', 'PTKANT', 'PPER', 'VVFIN', 'PTKNEG', 'PPER', 'VMFIN', 'APPR', 'PIDAT', 'NN', 'ADV', 'APPR', 'ART', 'ADJA', 'CARD', 'NN', 'VVINF', 'PPOSAT', 'NN', 'APPO'), 'start right siblings': ['VF', 'LK', 'MF', 'VC', 'NF'], 'end left siblings': ['VF', 'LK', 'FKOORD', 'NF'], 'auto preterminal span': (0, 48), 'movers': ['KOORD', 'DM', 'SIMPX'], 'old_parent': 'SIMPX', 'end right siblings': [], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF wir)
				(LK wollten)
				[01;31m(FKOORD[00m
					(MVC uns ja fur ein meeting treffen)
					(KON beziehungsweise)
					[01;31m(MVC[00m [01;33m(MVCN (MVCN[00m
						(MF eines)
						(VC ausmachen)[01;31m)[00m[01;31m)[00m
				[01;31m(NF[00m
					[01;31m(PX[00m
						(PX in hannover) [01;33mMVCN)[00m
						(SIMPX wenn ich mich recht entsinne)[01;31m)[00m
					(NF [01;33m(C[00m
						(SIMPX
							(C weil)
							[01;31m(MF[00m
								(ADVX da) [01;33mC)[00m
								(NX die geschaftspartner)
								(ADVX auch)
								(NX eine filiale)
								(ADVX jetzt)[01;31m)[00m
							(NX eroffnet)
							(VC haben)))[01;31m)[00m [01;33mMVCN)[00m
				(KOORD und)
				(DM ja)
				(SIMPX ich weis nicht)[01;31m)[00m
			(SIMPX
				(VF es)
				(LK sollte)
				(MF auf alle falle noch in den nachsten drei monaten)
				(VC geschehen)
				[01;31m(NF[00m
					(SU
						(NX meiner ansicht)
						[01;36m(VC[00m
							(APPO nach)[01;36m)[00m)[01;31m)[00m)[01;31m)[00m
		(SU wie sehen sie das)))
Step:Single Word Phrase
{'subtrees': ['APPO'], 'family': ['NX', 'VC'], 'over_word': True, 'over words': True, 'auto preterminals': ('APPO',), 'right siblings': [], 'left siblings': [(NX (PPOSAT meiner) (NN ansicht))], 'auto preterminal span': (47, 48), 'span': (47, 48), 'parent': 'SU', 'label': 'VC', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF wir)
				(LK wollten)
				[01;31m(FKOORD[00m
					(MVC uns ja fur ein meeting treffen)
					(KON beziehungsweise)
					[01;31m(MVC[00m [01;33m(MVCN (MVCN[00m
						(MF eines)
						(VC ausmachen)[01;31m)[00m[01;31m)[00m
				[01;31m(NF[00m
					[01;31m(PX[00m
						(PX in hannover) [01;33mMVCN)[00m
						(SIMPX wenn ich mich recht entsinne)[01;31m)[00m
					(NF [01;33m(C[00m
						(SIMPX
							(C weil)
							[01;31m(MF[00m
								(ADVX da) [01;33mC)[00m
								(NX die geschaftspartner)
								(ADVX auch)
								(NX eine filiale)
								(ADVX jetzt)[01;31m)[00m
							(NX eroffnet)
							(VC haben)))[01;31m)[00m [01;33mMVCN)[00m
				(KOORD und)
				(DM ja)
				(SIMPX ich weis nicht)[01;31m)[00m
			(SIMPX
				(VF es)
				(LK sollte)
				(MF auf alle falle noch in den nachsten drei monaten)
				(VC geschehen)
				[01;31m(NF[00m
					(SU
						(NX meiner ansicht)
						(VC nach))[01;31m)[00m)[01;31m)[00m
		(SU wie sehen sie das)))
Step:Clause Attachment
{'subtrees': ['VF', 'LK', 'FKOORD', 'NF', 'KOORD', 'DM', 'SIMPX'], 'family': ['SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VMFIN', 'PRF', 'ADV', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'PIS', 'VVINF', 'APPR', 'NE', 'KOUS', 'PPER', 'PRF', 'ADJD', 'VVFIN', 'KOUS', 'ADV', 'ART', 'NN', 'ADV', 'ART', 'NN', 'ADV', 'VVPP', 'VAFIN', 'KON', 'PTKANT', 'PPER', 'VVFIN', 'PTKNEG', 'PPER', 'VMFIN', 'APPR', 'PIDAT', 'NN', 'ADV', 'APPR', 'ART', 'ADJA', 'CARD', 'NN', 'VVINF', 'PPOSAT', 'NN', 'APPO'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 48), 'span': (0, 33), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		[01;31m(SU[00m
			(VF wir)
			(LK wollten)
			[01;31m(FKOORD[00m
				(MVC uns ja fur ein meeting treffen)
				(KON beziehungsweise)
				[01;31m(MVC[00m [01;33m(MVCN (MVCN[00m
					(MF eines)
					(VC ausmachen)[01;31m)[00m[01;31m)[00m
			[01;31m(NF[00m
				[01;31m(PX[00m
					(PX in hannover) [01;33mMVCN)[00m
					(SIMPX wenn ich mich recht entsinne)[01;31m)[00m
				(NF [01;33m(C[00m
					(SIMPX
						(C weil)
						[01;31m(MF[00m
							(ADVX da) [01;33mC)[00m
							(NX die geschaftspartner)
							(ADVX auch)
							(NX eine filiale)
							(ADVX jetzt)[01;31m)[00m
						(NX eroffnet)
						(VC haben)))[01;31m)[00m [01;33mMVCN)[00m
			(KOORD und)
			(DM ja)
			(SIMPX ich weis nicht)
			(SIMPX
				(VF es)
				(LK sollte)
				(MF auf alle falle noch in den nachsten drei monaten)
				(VC geschehen)
				[01;31m(NF[00m
					(SU
						(NX meiner ansicht)
						(VC nach))[01;31m)[00m)[01;31m)[00m
		(SU wie sehen sie das)))
Step:Clause Attachment
{'subtrees': ['VF', 'LK', 'FKOORD', 'NF', 'KOORD', 'DM', 'SIMPX', 'SIMPX'], 'family': ['SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VMFIN', 'PRF', 'ADV', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'PIS', 'VVINF', 'APPR', 'NE', 'KOUS', 'PPER', 'PRF', 'ADJD', 'VVFIN', 'KOUS', 'ADV', 'ART', 'NN', 'ADV', 'ART', 'NN', 'ADV', 'VVPP', 'VAFIN', 'KON', 'PTKANT', 'PPER', 'VVFIN', 'PTKNEG', 'PPER', 'VMFIN', 'APPR', 'PIDAT', 'NN', 'ADV', 'APPR', 'ART', 'ADJA', 'CARD', 'NN', 'VVINF', 'PPOSAT', 'NN', 'APPO', 'PWAV', 'VVFIN', 'PPER', 'PDS'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 52), 'span': (0, 48), 'left siblings': [], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(VF wir)
		(LK wollten)
		[01;31m(FKOORD[00m
			(MVC uns ja fur ein meeting treffen)
			(KON beziehungsweise)
			[01;31m(MVC[00m [01;33m(MVCN (MVCN[00m
				(MF eines)
				(VC ausmachen)[01;31m)[00m[01;31m)[00m
		[01;31m(NF[00m
			[01;31m(PX[00m
				(PX in hannover) [01;33mMVCN)[00m
				(SIMPX wenn ich mich recht entsinne)[01;31m)[00m
			(NF [01;33m(C[00m
				(SIMPX
					(C weil)
					[01;31m(MF[00m
						(ADVX da) [01;33mC)[00m
						(NX die geschaftspartner)
						(ADVX auch)
						(NX eine filiale)
						(ADVX jetzt)[01;31m)[00m
					(NX eroffnet)
					(VC haben)))[01;31m)[00m [01;33mMVCN)[00m
		(KOORD und)
		(DM ja)
		(SIMPX ich weis nicht)
		(SIMPX
			(VF es)
			(LK sollte)
			(MF auf alle falle noch in den nachsten drei monaten)
			(VC geschehen)
			[01;31m(NF[00m
				(SU
					(NX meiner ansicht)
					(VC nach))[01;31m)[00m)
		(SU wie sehen sie das)))
Step:UNSET remove
{'subtrees': ['MVC', 'KON', 'MVC'], 'family': ['VF', 'LK', 'FKOORD', 'NF', 'KOORD', 'DM', 'SIMPX', 'SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VMFIN', 'PRF', 'ADV', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'PIS', 'VVINF', 'APPR', 'NE', 'KOUS', 'PPER', 'PRF', 'ADJD', 'VVFIN', 'KOUS', 'ADV', 'ART', 'NN', 'ADV', 'ART', 'NN', 'ADV', 'VVPP', 'VAFIN', 'KON', 'PTKANT', 'PPER', 'VVFIN', 'PTKNEG', 'PPER', 'VMFIN', 'APPR', 'PIDAT', 'NN', 'ADV', 'APPR', 'ART', 'ADJA', 'CARD', 'NN', 'VVINF', 'PPOSAT', 'NN', 'APPO', 'PWAV', 'VVFIN', 'PPER', 'PDS'), 'right siblings': ['NF', 'KOORD', 'DM', 'SIMPX', 'SIMPX', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 52), 'span': (2, 11), 'left siblings': ['VF', 'LK'], 'label': 'FKOORD', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(VF wir)
		(LK wollten)
		(MVC uns ja fur ein meeting treffen)
		(KON beziehungsweise)
		[01;36m(MVCN[00m
			[01;31m(MVC[00m [01;33m(MVCN[00m
				(MF eines)
				(VC ausmachen)[01;31m)[00m
			[01;31m(NF[00m
				[01;31m(PX[00m
					(PX in hannover) [01;33mMVCN)[00m
					(SIMPX wenn ich mich recht entsinne)[01;31m)[00m
				(NF [01;33m(C[00m
					(SIMPX
						(C weil)
						[01;31m(MF[00m
							(ADVX da) [01;33mC)[00m
							(NX die geschaftspartner)
							(ADVX auch)
							(NX eine filiale)
							(ADVX jetzt)[01;31m)[00m
						(NX eroffnet)
						(VC haben)))[01;31m)[00m[01;36m)[00m
		(KOORD und)
		(DM ja)
		(SIMPX ich weis nicht)
		(SIMPX
			(VF es)
			(LK sollte)
			(MF auf alle falle noch in den nachsten drei monaten)
			(VC geschehen)
			[01;31m(NF[00m
				(SU
					(NX meiner ansicht)
					(VC nach))[01;31m)[00m)
		(SU wie sehen sie das)))
Step:PP Attachment
{'new_parent': 'TURN', 'new_family': ['VF', 'LK', 'MVC', 'KON', 'MVC', 'PX', 'NF', 'KOORD', 'DM', 'SIMPX', 'SIMPX', 'SU'], 'mover info': [('PX', (11, 18))], 'old_family': ['PX', 'NF'], 'start left siblings': [], 'auto preterminals': ('PPER', 'VMFIN', 'PRF', 'ADV', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'PIS', 'VVINF', 'APPR', 'NE', 'KOUS', 'PPER', 'PRF', 'ADJD', 'VVFIN', 'KOUS', 'ADV', 'ART', 'NN', 'ADV', 'ART', 'NN', 'ADV', 'VVPP', 'VAFIN', 'KON', 'PTKANT', 'PPER', 'VVFIN', 'PTKNEG', 'PPER', 'VMFIN', 'APPR', 'PIDAT', 'NN', 'ADV', 'APPR', 'ART', 'ADJA', 'CARD', 'NN', 'VVINF', 'PPOSAT', 'NN', 'APPO', 'PWAV', 'VVFIN', 'PPER', 'PDS'), 'start right siblings': ['NF'], 'end left siblings': ['VF', 'LK', 'MVC', 'KON', 'MVC'], 'auto preterminal span': (0, 52), 'adding node already present': False, 'movers': ['PX'], 'old_parent': 'NF', 'added and moved': True, 'end right siblings': ['NF', 'KOORD', 'DM', 'SIMPX', 'SIMPX', 'SU'], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'MVCN'}
(TOP
	(TURN
		(VF wir)
		(LK wollten)
		(MVC uns ja fur ein meeting treffen)
		(KON beziehungsweise)
		(MVCN [01;33m(MVCN[00m
			[01;31m(MVC[00m
				(MF eines)
				(VC ausmachen)[01;31m)[00m
			[01;31m(PX[00m
				(PX in hannover) [01;33mMVCN)[00m
				(SIMPX wenn ich mich recht entsinne)[01;31m)[00m
			(NF [01;33m(C[00m
				(SIMPX
					(C weil)
					[01;31m(MF[00m
						(ADVX da) [01;33mC)[00m
						(NX die geschaftspartner)
						(ADVX auch)
						(NX eine filiale)
						(ADVX jetzt)[01;31m)[00m
					(NX eroffnet)
					(VC haben))))
		(KOORD und)
		(DM ja)
		(SIMPX ich weis nicht)
		(SIMPX
			(VF es)
			(LK sollte)
			(MF auf alle falle noch in den nachsten drei monaten)
			(VC geschehen)
			[01;31m(NF[00m
				(SU
					(NX meiner ansicht)
					(VC nach))[01;31m)[00m)
		(SU wie sehen sie das)))
Step:UNSET remove
{'subtrees': ['MF', 'VC'], 'family': ['MVC', 'PX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PIS', 'VVINF', 'APPR', 'NE', 'KOUS', 'PPER', 'PRF', 'ADJD', 'VVFIN', 'KOUS', 'ADV', 'ART', 'NN', 'ADV', 'ART', 'NN', 'ADV', 'VVPP', 'VAFIN'), 'right siblings': ['PX', 'NF'], 'parent': 'MVCN', 'auto preterminal span': (9, 28), 'span': (9, 11), 'left siblings': [], 'label': 'MVC', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(VF wir)
		(LK wollten)
		(MVC uns ja fur ein meeting treffen)
		(KON beziehungsweise)
		(MVCN [01;33m(MVCN[00m
			(MF eines)
			(VC ausmachen)
			[01;31m(PX[00m
				(PX in hannover) [01;33mMVCN)[00m
				(SIMPX wenn ich mich recht entsinne)[01;31m)[00m
			(NF [01;33m(C[00m
				(SIMPX
					(C weil)
					[01;31m(MF[00m
						(ADVX da) [01;33mC)[00m
						(NX die geschaftspartner)
						(ADVX auch)
						(NX eine filiale)
						(ADVX jetzt)[01;31m)[00m
					(NX eroffnet)
					(VC haben))))
		(KOORD und)
		(DM ja)
		(SIMPX ich weis nicht)
		(SIMPX
			(VF es)
			(LK sollte)
			(MF auf alle falle noch in den nachsten drei monaten)
			(VC geschehen)
			[01;31m(NF[00m
				(SU
					(NX meiner ansicht)
					(VC nach))[01;31m)[00m)
		(SU wie sehen sie das)))
Step:Clause Attachment
{'subtrees': ['PX', 'SIMPX'], 'family': ['MF', 'VC', 'PX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PIS', 'VVINF', 'APPR', 'NE', 'KOUS', 'PPER', 'PRF', 'ADJD', 'VVFIN', 'KOUS', 'ADV', 'ART', 'NN', 'ADV', 'ART', 'NN', 'ADV', 'VVPP', 'VAFIN'), 'right siblings': ['NF'], 'parent': 'MVCN', 'auto preterminal span': (9, 28), 'span': (11, 18), 'left siblings': ['MF', 'VC'], 'label': 'PX', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(VF wir)
		(LK wollten)
		(MVC uns ja fur ein meeting treffen)
		(KON beziehungsweise)
		(MVCN
			[01;36m(MVCN[00m
				(MF eines)
				(VC ausmachen)
				(PX in hannover)[01;36m)[00m
			(SIMPX wenn ich mich recht entsinne)
			(NF [01;33m(C[00m
				(SIMPX
					(C weil)
					[01;31m(MF[00m
						(ADVX da) [01;33mC)[00m
						(NX die geschaftspartner)
						(ADVX auch)
						(NX eine filiale)
						(ADVX jetzt)[01;31m)[00m
					(NX eroffnet)
					(VC haben))))
		(KOORD und)
		(DM ja)
		(SIMPX ich weis nicht)
		(SIMPX
			(VF es)
			(LK sollte)
			(MF auf alle falle noch in den nachsten drei monaten)
			(VC geschehen)
			[01;31m(NF[00m
				(SU
					(NX meiner ansicht)
					(VC nach))[01;31m)[00m)
		(SU wie sehen sie das)))
Step:PP Attachment
{'subtrees': ['MF', 'VC', 'PX'], 'family': ['MVCN', 'SIMPX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PIS', 'VVINF', 'APPR', 'NE'), 'right siblings': [(SIMPX (C (KOUS wenn)) (MF (NX (PPER ich)) (NX (PRF mich)) (ADVX (ADJD recht))) (VC (VXFIN (VVFIN entsinne)))), (NF (SIMPX (C (KOUS weil)) (MF (ADVX (ADV da)) (NX (ART die) (NN geschaftspartner)) (ADVX (ADV auch)) (NX (ART eine) (NN filiale)) (ADVX (ADV jetzt))) (NX (VVPP eroffnet)) (VC (VXFIN (VAFIN haben)))))], 'left siblings': [], 'auto preterminal span': (9, 13), 'span': (9, 13), 'parent': 'MVCN', 'label': 'MVCN', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(VF wir)
		(LK wollten)
		(MVC uns ja fur ein meeting treffen)
		(KON beziehungsweise)
		(MVCN
			(MVCN eines ausmachen in hannover)
			(SIMPX wenn ich mich recht entsinne)
			(NF [01;33m(C[00m
				(SIMPX
					(C weil)
					[01;31m(MF[00m
						(ADVX da) [01;33mC)[00m
						(NX die geschaftspartner)
						(ADVX auch)
						(NX eine filiale)
						(ADVX jetzt)[01;31m)[00m
					(NX eroffnet)
					(VC haben))))
		(KOORD und)
		(DM ja)
		(SIMPX ich weis nicht)
		(SIMPX
			(VF es)
			(LK sollte)
			(MF auf alle falle noch in den nachsten drei monaten)
			(VC geschehen)
			[01;31m(NF[00m
				(SU
					(NX meiner ansicht)
					(VC nach))[01;31m)[00m)
		(SU wie sehen sie das)))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'NX', 'ADVX', 'NX', 'ADVX'], 'family': ['C', 'MF', 'NX', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'ADV', 'ART', 'NN', 'ADV', 'ART', 'NN', 'ADV', 'VVPP', 'VAFIN'), 'right siblings': ['NX', 'VC'], 'parent': 'SIMPX', 'auto preterminal span': (18, 28), 'span': (19, 26), 'left siblings': ['C'], 'label': 'MF', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(VF wir)
		(LK wollten)
		(MVC uns ja fur ein meeting treffen)
		(KON beziehungsweise)
		(MVCN
			(MVCN eines ausmachen in hannover)
			(SIMPX wenn ich mich recht entsinne)
			(NF
				(SIMPX
					[01;36m(C[00m
						(C weil)
						(ADVX da)[01;36m)[00m
					(NX die geschaftspartner)
					(ADVX auch)
					(NX eine filiale)
					(ADVX jetzt)
					(NX eroffnet)
					(VC haben))))
		(KOORD und)
		(DM ja)
		(SIMPX ich weis nicht)
		(SIMPX
			(VF es)
			(LK sollte)
			(MF auf alle falle noch in den nachsten drei monaten)
			(VC geschehen)
			[01;31m(NF[00m
				(SU
					(NX meiner ansicht)
					(VC nach))[01;31m)[00m)
		(SU wie sehen sie das)))
Step:Modifier Attachment
{'subtrees': ['C', 'ADVX'], 'family': ['C', 'NX', 'ADVX', 'NX', 'ADVX', 'NX', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'ADV'), 'right siblings': [(NX (ART die) (NN geschaftspartner)), (ADVX (ADV auch)), (NX (ART eine) (NN filiale)), (ADVX (ADV jetzt)), (NX (VVPP eroffnet)), (VC (VXFIN (VAFIN haben)))], 'left siblings': [], 'auto preterminal span': (18, 20), 'span': (18, 20), 'parent': 'SIMPX', 'label': 'C', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		(VF wir)
		(LK wollten)
		(MVC uns ja fur ein meeting treffen)
		(KON beziehungsweise)
		(MVCN eines ausmachen in hannover wenn ich mich recht entsinne weil da die geschaftspartner auch eine filiale jetzt eroffnet haben)
		(KOORD und)
		(DM ja)
		(SIMPX ich weis nicht)
		(SIMPX
			(VF es)
			(LK sollte)
			(MF auf alle falle noch in den nachsten drei monaten)
			(VC geschehen)
			[01;31m(NF[00m
				(SU
					(NX meiner ansicht)
					(VC nach))[01;31m)[00m)
		(SU wie sehen sie das)))
Step:Unary
{'subtrees': ['SU'], 'family': ['VF', 'LK', 'MF', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VMFIN', 'APPR', 'PIDAT', 'NN', 'ADV', 'APPR', 'ART', 'ADJA', 'CARD', 'NN', 'VVINF', 'PPOSAT', 'NN', 'APPO'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (33, 48), 'span': (45, 48), 'left siblings': ['VF', 'LK', 'MF', 'VC'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP wir wollten uns ja fur ein meeting treffen beziehungsweise eines ausmachen in hannover wenn ich mich recht entsinne weil da die geschaftspartner auch eine filiale jetzt eroffnet haben und ja ich weis nicht es sollte auf alle falle noch in den nachsten drei monaten geschehen meiner ansicht nach wie sehen sie das)

Sentence 514:
12 Initial errors
0 on fringe, 9 iterations
2 Error:Different label
2 Error:Modifier Attachment
2 Error:UNSET move
1 Error:Unary
1 Error:Single Word Phrase
1 Error:Single Word Phrase
1 Error:Unary
1 Error:UNSET remove
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU ja november kame dann in frage)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;31m(C[00m
					(KOUS wenn)[01;31m)[00m
				(MF
					(ADVX dann)
					[01;31m(NX[00m
						(ADVX so)
						[01;36m(NX[00m
							(ART die)
							(ADJX zweite)
							(NN woche)[01;36m)[00m[01;31m)[00m)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK glaube)
				(NF
					(SIMPX
						(VF die zweite woche)
						(LK ware)
						[01;36m(ADJX[00m
							(MF
								[01;36m(ADVX[00m [01;31m(ADJX[00m
									(ADVX ganz)
									(ADJD gut)[01;31m)[00m[01;36m)[00m
								(ADJX machbar))[01;36m)[00m)))[01;31m)[00m
		[01;36m(SIMPX[00m
			(SU
				[01;31m(SIMPX[00m
					(VF wie)
					(LK sieht)
					(MF es da)[01;31m)[00m
				[01;36m(VC[00m
					(APPR bei)[01;36m)[00m)[01;36m)[00m))
Step:Different label
{'family': ['ADVX', 'ADJX'], 'auto preterminal span': (18, 20), 'span': (18, 20), 'subtrees': ['ADVX', 'ADJD'], 'parent': 'MF', 'over_word': False, 'auto preterminals': ('ADV', 'ADJD'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('ADJX', 'ADVX')}
(TOP
	(TURN
		(SU ja november kame dann in frage)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;31m(C[00m
					(KOUS wenn)[01;31m)[00m
				(MF
					(ADVX dann)
					[01;31m(NX[00m
						(ADVX so)
						[01;36m(NX[00m
							(ART die)
							(ADJX zweite)
							(NN woche)[01;36m)[00m[01;31m)[00m)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK glaube)
				(NF
					(SIMPX
						(VF die zweite woche)
						(LK ware)
						[01;36m(ADJX[00m
							(MF
								(ADVX ganz gut)
								(ADJX machbar))[01;36m)[00m)))[01;31m)[00m
		[01;36m(SIMPX[00m
			(SU
				[01;31m(SIMPX[00m
					(VF wie)
					(LK sieht)
					(MF es da)[01;31m)[00m
				[01;36m(VC[00m
					(APPR bei)[01;36m)[00m)[01;36m)[00m))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['ADVX', 'ADVX', 'NX'], 'mover info': [('ADVX', (8, 9))], 'old_family': ['ADVX', 'ART', 'ADJX', 'NN'], 'start left siblings': [], 'auto preterminals': ('ADV', 'ADV', 'ART', 'ADJA', 'NN'), 'start right siblings': ['ART', 'ADJX', 'NN'], 'end left siblings': ['ADVX'], 'auto preterminal span': (7, 12), 'movers': ['ADVX'], 'old_parent': 'NX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['NX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU ja november kame dann in frage)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;31m(C[00m
					(KOUS wenn)[01;31m)[00m
				(MF dann so die zweite woche)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK glaube)
				(NF
					(SIMPX
						(VF die zweite woche)
						(LK ware)
						[01;36m(ADJX[00m
							(MF
								(ADVX ganz gut)
								(ADJX machbar))[01;36m)[00m)))[01;31m)[00m
		[01;36m(SIMPX[00m
			(SU
				[01;31m(SIMPX[00m
					(VF wie)
					(LK sieht)
					(MF es da)[01;31m)[00m
				[01;36m(VC[00m
					(APPR bei)[01;36m)[00m)[01;36m)[00m))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'APPR'], 'mover info': [('APPR', (25, 26))], 'old_family': ['SIMPX', 'APPR'], 'start left siblings': ['SIMPX'], 'auto preterminals': ('PWAV', 'VVFIN', 'PPER', 'ADV', 'APPR'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (21, 26), 'movers': ['APPR'], 'old_parent': 'SU', 'POS confusion': ('APPR', 'APPR'), 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU ja november kame dann in frage)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;31m(C[00m
					(KOUS wenn)[01;31m)[00m
				(MF dann so die zweite woche)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK glaube)
				(NF
					(SIMPX
						(VF die zweite woche)
						(LK ware)
						[01;36m(ADJX[00m
							(MF
								(ADVX ganz gut)
								(ADJX machbar))[01;36m)[00m)))[01;31m)[00m
		(SU
			(SIMPX
				(VF wie)
				(LK sieht)
				(MF es da)
				[01;36m(VC[00m
					(APPR bei)[01;36m)[00m))))
Step:Unary
{'subtrees': ['MF'], 'family': ['VF', 'LK', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADJD', 'ADJD'), 'right siblings': [], 'left siblings': [(VF (NX (ART die) (ADJX (ADJA zweite)) (NN woche))), (LK (VXFIN (VAFIN ware)))], 'auto preterminal span': (18, 21), 'span': (18, 21), 'parent': 'SIMPX', 'label': 'ADJX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU ja november kame dann in frage)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;31m(C[00m
					(KOUS wenn)[01;31m)[00m
				(MF dann so die zweite woche)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK glaube)
				(NF die zweite woche ware ganz gut machbar))[01;31m)[00m
		(SU
			(SIMPX
				(VF wie)
				(LK sieht)
				(MF es da)
				[01;36m(VC[00m
					(APPR bei)[01;36m)[00m))))
Step:Single Word Phrase
{'subtrees': ['APPR'], 'family': ['VF', 'LK', 'MF', 'VC'], 'over_word': True, 'over words': True, 'auto preterminals': ('APPR',), 'right siblings': [], 'left siblings': [(VF (ADJX (PWAV wie))), (LK (VXFIN (VVFIN sieht))), (MF (NX (PPER es)) (ADVX (ADV da)))], 'auto preterminal span': (25, 26), 'span': (25, 26), 'parent': 'SIMPX', 'label': 'VC', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SU ja november kame dann in frage)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;31m(C[00m
					(KOUS wenn)[01;31m)[00m
				(MF dann so die zweite woche)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK glaube)
				(NF die zweite woche ware ganz gut machbar))[01;31m)[00m
		(SU wie sieht es da bei)))
Step:Single Word Phrase
{'subtrees': ['KOUS'], 'family': ['C', 'MF'], 'over_word': True, 'over words': True, 'auto preterminals': ('KOUS', 'ADV', 'ADV', 'ART', 'ADJA', 'NN'), 'right siblings': ['MF'], 'parent': 'SIMPX', 'auto preterminal span': (6, 12), 'span': (6, 7), 'left siblings': [], 'label': 'C', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(SU ja november kame dann in frage)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOUS wenn)
				(MF dann so die zweite woche)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK glaube)
				(NF die zweite woche ware ganz gut machbar))[01;31m)[00m
		(SU wie sieht es da bei)))
Step:Unary
{'subtrees': ['KOUS', 'MF'], 'family': ['SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'ADV', 'ADV', 'ART', 'ADJA', 'NN'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (6, 12), 'span': (6, 12), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU ja november kame dann in frage)
		[01;31m(SU[00m
			(KOUS wenn)
			(MF dann so die zweite woche)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK glaube)
				(NF die zweite woche ware ganz gut machbar))[01;31m)[00m
		(SU wie sieht es da bei)))
Step:UNSET remove
{'subtrees': ['KOUS', 'MF'], 'family': ['SU', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'NN', 'VVFIN', 'ADV', 'APPR', 'NN', 'KOUS', 'ADV', 'ADV', 'ART', 'ADJA', 'NN', 'PPER', 'VVFIN', 'ART', 'ADJA', 'NN', 'VAFIN', 'ADV', 'ADJD', 'ADJD', 'PWAV', 'VVFIN', 'PPER', 'ADV', 'APPR'), 'right siblings': ['SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 26), 'span': (6, 12), 'left siblings': ['SU'], 'label': 'SU', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU ja november kame dann in frage)
		(KOUS wenn)
		(MF dann so die zweite woche)
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK glaube)
				(NF die zweite woche ware ganz gut machbar))[01;31m)[00m
		(SU wie sieht es da bei)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SU', 'KOUS', 'MF', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'NN', 'VVFIN', 'ADV', 'APPR', 'NN', 'KOUS', 'ADV', 'ADV', 'ART', 'ADJA', 'NN', 'PPER', 'VVFIN', 'ART', 'ADJA', 'NN', 'VAFIN', 'ADV', 'ADJD', 'ADJD', 'PWAV', 'VVFIN', 'PPER', 'ADV', 'APPR'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 26), 'span': (12, 21), 'left siblings': ['SU', 'KOUS', 'MF'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja november kame dann in frage wenn dann so die zweite woche ich glaube die zweite woche ware ganz gut machbar wie sieht es da bei)

Sentence 515:
10 Initial errors
0 on fringe, 9 iterations
2 Error:PP Attachment
1 Error:Unary
1 Error:Modifier Attachment
1 Error:UNSET remove
1 Error:UNSET add
1 Error:Unary
1 Error:Unary
1 Error:Clause Attachment
1 Error:Clause Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU erste halfte ist in ordnung)
		[01;31m(SU[00m
			[01;31m(PX[00m
				(ADVX blos)
				(ADVX nicht)
				[01;31m(PX[00m [01;33m(SIMPX (SIMPX[00m
					(APPRART am)
					[01;33m(NX[00m (NX montag)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(NX
						(NN montag))[01;31m)[00m [01;33mNX)[00m
				(LK ist)
				(MF ausgeschlossen)[01;31m)[00m[01;31m)[00m [01;33mSIMPX)[00m
		[01;31m(SU[00m
			(SIMPX da ist namlich eine dienstbesprechung) [01;33mSIMPX)[00m
			(SIMPX und die ist sehr wichtig)[01;31m)[00m))
Step:PP Attachment
{'new_parent': 'SIMPX', 'new_family': ['PX', 'VF', 'LK', 'MF'], 'mover info': [('PX', (7, 9))], 'old_family': ['ADVX', 'ADVX', 'PX'], 'start left siblings': ['ADVX', 'ADVX'], 'auto preterminals': ('ADJA', 'NN', 'VAFIN', 'APPR', 'NN', 'ADV', 'PTKNEG', 'APPRART', 'NN', 'NN', 'VAFIN', 'ADJD', 'ADV', 'VAFIN', 'ADV', 'ART', 'NN', 'KON', 'PDS', 'VAFIN', 'ADV', 'ADJD'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 22), 'movers': ['PX'], 'old_parent': 'PX', 'end right siblings': ['VF', 'LK', 'MF'], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU erste halfte ist in ordnung)
		[01;31m(SU[00m
			[01;31m(PX[00m
				(ADVX blos)
				(ADVX nicht)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m [01;33m(SIMPX[00m
			(SIMPX
				[01;31m(PX[00m
					(APPRART am)
					[01;33m(NX[00m (NX montag)[01;31m)[00m
				[01;31m(VF[00m
					(NX
						(NN montag))[01;31m)[00m [01;33mNX)[00m
				(LK ist)
				(MF ausgeschlossen))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX da ist namlich eine dienstbesprechung) [01;33mSIMPX)[00m
			(SIMPX und die ist sehr wichtig)[01;31m)[00m))
Step:Unary
{'subtrees': ['ADVX', 'ADVX'], 'family': ['PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PTKNEG'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (5, 7), 'span': (5, 7), 'left siblings': [], 'label': 'PX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU erste halfte ist in ordnung)
		[01;31m(SU[00m
			(ADVX blos)
			(ADVX nicht)[01;31m)[00m
		[01;31m(SU[00m [01;33m(SIMPX[00m
			(SIMPX
				[01;31m(PX[00m
					(APPRART am)
					[01;33m(NX[00m (NX montag)[01;31m)[00m
				[01;31m(VF[00m
					(NX
						(NN montag))[01;31m)[00m [01;33mNX)[00m
				(LK ist)
				(MF ausgeschlossen))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX da ist namlich eine dienstbesprechung) [01;33mSIMPX)[00m
			(SIMPX und die ist sehr wichtig)[01;31m)[00m))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'ADVX'], 'family': ['SU', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJA', 'NN', 'VAFIN', 'APPR', 'NN', 'ADV', 'PTKNEG', 'APPRART', 'NN', 'NN', 'VAFIN', 'ADJD', 'ADV', 'VAFIN', 'ADV', 'ART', 'NN', 'KON', 'PDS', 'VAFIN', 'ADV', 'ADJD'), 'right siblings': ['SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 22), 'span': (5, 7), 'left siblings': ['SU'], 'label': 'SU', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU erste halfte ist in ordnung)
		(ADVX blos)
		(ADVX nicht)
		[01;31m(SU[00m [01;33m(SIMPX[00m
			(SIMPX
				[01;31m(PX[00m
					(APPRART am)
					[01;33m(NX[00m (NX montag)[01;31m)[00m
				[01;31m(VF[00m
					(NX
						(NN montag))[01;31m)[00m [01;33mNX)[00m
				(LK ist)
				(MF ausgeschlossen))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX da ist namlich eine dienstbesprechung) [01;33mSIMPX)[00m
			(SIMPX und die ist sehr wichtig)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['APPRART', 'NX'], 'family': ['PX', 'VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'NN', 'NN', 'VAFIN', 'ADJD'), 'right siblings': ['VF', 'LK', 'MF'], 'parent': 'SIMPX', 'auto preterminal span': (7, 12), 'span': (7, 9), 'left siblings': [], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU erste halfte ist in ordnung)
		(ADVX blos)
		(ADVX nicht)
		[01;31m(SU[00m [01;33m(SIMPX[00m
			(SIMPX
				(APPRART am)
				[01;36m(NX[00m
					(NX montag)
					[01;31m(VF[00m
						(NX
							(NN montag))[01;31m)[00m[01;36m)[00m
				(LK ist)
				(MF ausgeschlossen))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX da ist namlich eine dienstbesprechung) [01;33mSIMPX)[00m
			(SIMPX und die ist sehr wichtig)[01;31m)[00m))
Step:UNSET add
{'subtrees': ['NX', 'VF'], 'family': ['APPRART', 'NX', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'NN'), 'right siblings': [(LK (VXFIN (VAFIN ist))), (MF (ADJX (ADJD ausgeschlossen)))], 'left siblings': [(APPRART am)], 'auto preterminal span': (8, 10), 'span': (8, 10), 'parent': 'SIMPX', 'label': 'NX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU erste halfte ist in ordnung)
		(ADVX blos)
		(ADVX nicht)
		[01;31m(SU[00m [01;33m(SIMPX[00m
			(SIMPX
				(APPRART am)
				(NX
					(NX montag)
					[01;31m(VF[00m
						(NX
							(NN montag))[01;31m)[00m)
				(LK ist)
				(MF ausgeschlossen))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX da ist namlich eine dienstbesprechung) [01;33mSIMPX)[00m
			(SIMPX und die ist sehr wichtig)[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SU', 'ADVX', 'ADVX', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJA', 'NN', 'VAFIN', 'APPR', 'NN', 'ADV', 'PTKNEG', 'APPRART', 'NN', 'NN', 'VAFIN', 'ADJD', 'ADV', 'VAFIN', 'ADV', 'ART', 'NN', 'KON', 'PDS', 'VAFIN', 'ADV', 'ADJD'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 22), 'span': (7, 12), 'left siblings': ['SU', 'ADVX', 'ADVX'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU erste halfte ist in ordnung)
		(ADVX blos)
		(ADVX nicht)
		(SIMPX [01;33m(SIMPX[00m
			(APPRART am)
			(NX
				(NX montag)
				[01;31m(VF[00m
					(NX
						(NN montag))[01;31m)[00m)
			(LK ist)
			(MF ausgeschlossen))
		[01;31m(SU[00m
			(SIMPX da ist namlich eine dienstbesprechung) [01;33mSIMPX)[00m
			(SIMPX und die ist sehr wichtig)[01;31m)[00m))
Step:Unary
{'subtrees': ['NX'], 'family': ['NX', 'VF'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'NN'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (8, 10), 'span': (9, 10), 'left siblings': ['NX'], 'label': 'VF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU erste halfte ist in ordnung)
		(ADVX blos)
		(ADVX nicht)
		[01;33m(SIMPX[00m (SIMPX am montag montag ist ausgeschlossen)
		[01;31m(SU[00m
			(SIMPX da ist namlich eine dienstbesprechung) [01;33mSIMPX)[00m
			(SIMPX und die ist sehr wichtig)[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['SU', 'ADVX', 'ADVX', 'SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJA', 'NN', 'VAFIN', 'APPR', 'NN', 'ADV', 'PTKNEG', 'APPRART', 'NN', 'NN', 'VAFIN', 'ADJD', 'ADV', 'VAFIN', 'ADV', 'ART', 'NN', 'KON', 'PDS', 'VAFIN', 'ADV', 'ADJD'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 22), 'span': (12, 22), 'left siblings': ['SU', 'ADVX', 'ADVX', 'SIMPX'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU erste halfte ist in ordnung)
		(ADVX blos)
		(ADVX nicht)
		[01;36m(SIMPX[00m
			(SIMPX am montag montag ist ausgeschlossen)
			(SIMPX da ist namlich eine dienstbesprechung)[01;36m)[00m
		(SIMPX und die ist sehr wichtig)))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['SU', 'ADVX', 'ADVX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'NN', 'NN', 'VAFIN', 'ADJD', 'ADV', 'VAFIN', 'ADV', 'ART', 'NN'), 'right siblings': [(SIMPX (KOORD (KON und)) (VF (NX (PDS die))) (LK (VXFIN (VAFIN ist))) (MF (ADJX (ADVX (ADV sehr)) (ADJD wichtig))))], 'left siblings': [(SU (SIMPX (VF (NX (ADJX (ADJA erste)) (NN halfte))) (LK (VXFIN (VAFIN ist))) (MF (PX (APPR in) (NX (NN ordnung)))))), (ADVX (ADV blos)), (ADVX (PTKNEG nicht))], 'auto preterminal span': (7, 17), 'span': (7, 17), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP erste halfte ist in ordnung blos nicht am montag montag ist ausgeschlossen da ist namlich eine dienstbesprechung und die ist sehr wichtig)

Sentence 516:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU nehmen wir gleich den termin)
		[01;31m(SU[00m
			(DM
				(ITJ okay))[01;31m)[00m
		(SU ja wie kommen wir da hin)
		(SU ich weis nicht ob sie sich da schon gedanken gemacht haben)))
Step:Unary
{'subtrees': ['DM'], 'family': ['SU', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'ADV', 'ART', 'NN', 'ITJ', 'PTKANT', 'PWAV', 'VVFIN', 'PPER', 'ADV', 'PTKVZ', 'PPER', 'VVFIN', 'PTKNEG', 'KOUS', 'PPER', 'PRF', 'ADV', 'ADV', 'NN', 'VVPP', 'VAFIN'), 'right siblings': ['SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 23), 'span': (5, 6), 'left siblings': ['SU'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP nehmen wir gleich den termin okay ja wie kommen wir da hin ich weis nicht ob sie sich da schon gedanken gemacht haben)

Sentence 517:
8 Initial errors
0 on fringe, 6 iterations
2 Error:Different label
2 Error:Modifier Attachment
1 Error:NP Internal Structure
1 Error:Clause Attachment
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(APPR ab)
			(SIMPX ab halb sechs ist in ordnung)[01;31m)[00m
		[01;31m(SU[00m
			(NX
				[01;36m(ADVX[00m
					(ADVX nur)
					[01;31m(ADVX[00m
						(PTKNEG nicht)[01;31m)[00m[01;36m)[00m
				(ADVX gleich)
				(NX halb sechs))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK ware)
				(MF mir etwas zu fruh))[01;31m)[00m
		[01;36m(PX[00m
			(SU
				[01;31m(ADJX[00m
					(NX
						(ADVX fruhestens)
						[01;36m(NX[00m
							(ART eine)
							(NN stunde)[01;36m)[00m)
					(ADJD spater)[01;31m)[00m)[01;36m)[00m))
Step:Different label
{'family': ['PX'], 'auto preterminal span': (18, 22), 'span': (18, 22), 'subtrees': ['NX', 'ADJD'], 'parent': 'SU', 'over_word': False, 'auto preterminals': ('ADV', 'ART', 'NN', 'ADJD'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('ADJX', 'PX')}
(TOP
	(TURN
		[01;31m(SU[00m
			(APPR ab)
			(SIMPX ab halb sechs ist in ordnung)[01;31m)[00m
		[01;31m(SU[00m
			(NX
				[01;36m(ADVX[00m
					(ADVX nur)
					[01;31m(ADVX[00m
						(PTKNEG nicht)[01;31m)[00m[01;36m)[00m
				(ADVX gleich)
				(NX halb sechs))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK ware)
				(MF mir etwas zu fruh))[01;31m)[00m
		(SU
			(PX
				(NX
					(ADVX fruhestens)
					[01;36m(NX[00m
						(ART eine)
						(NN stunde)[01;36m)[00m)
				(ADJD spater)))))
Step:Modifier Attachment
{'new_parent': 'ADVX', 'new_family': ['ADVX', 'PTKNEG'], 'mover info': [('ADVX', (7, 8))], 'old_family': ['ADVX', 'ADVX', 'ADVX', 'NX'], 'start left siblings': [], 'auto preterminals': ('ADV', 'PTKNEG', 'ADV', 'ADJD', 'CARD'), 'start right siblings': ['ADVX', 'ADVX', 'NX'], 'end left siblings': [], 'auto preterminal span': (7, 12), 'movers': ['ADVX'], 'old_parent': 'NX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['PTKNEG'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			(APPR ab)
			(SIMPX ab halb sechs ist in ordnung)[01;31m)[00m
		[01;31m(SU[00m
			(NX
				(ADVX nur nicht)
				(ADVX gleich)
				(NX halb sechs))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK ware)
				(MF mir etwas zu fruh))[01;31m)[00m
		(SU
			(PX
				(NX
					(ADVX fruhestens)
					[01;36m(NX[00m
						(ART eine)
						(NN stunde)[01;36m)[00m)
				(ADJD spater)))))
Step:NP Internal Structure
{'subtrees': ['ART', 'NN'], 'family': ['ADVX', 'NX'], 'over_word': False, 'over words': True, 'auto preterminals': ('ART', 'NN'), 'right siblings': [], 'left siblings': [(ADVX (ADV fruhestens))], 'auto preterminal span': (19, 21), 'span': (19, 21), 'parent': 'NX', 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(APPR ab)
			(SIMPX ab halb sechs ist in ordnung)[01;31m)[00m
		[01;31m(SU[00m
			(NX
				(ADVX nur nicht)
				(ADVX gleich)
				(NX halb sechs))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK ware)
				(MF mir etwas zu fruh))[01;31m)[00m
		(SU fruhestens eine stunde spater)))
Step:Clause Attachment
{'subtrees': ['APPR', 'SIMPX'], 'family': ['SU', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'APPR', 'ADJD', 'CARD', 'VAFIN', 'APPR', 'NN', 'ADV', 'PTKNEG', 'ADV', 'ADJD', 'CARD', 'PDS', 'VAFIN', 'PPER', 'ADV', 'PTKA', 'ADJD', 'ADV', 'ART', 'NN', 'ADJD'), 'right siblings': ['SU', 'SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 22), 'span': (0, 7), 'left siblings': [], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(APPR ab)
		(SIMPX ab halb sechs ist in ordnung)
		[01;31m(SU[00m
			(NX
				(ADVX nur nicht)
				(ADVX gleich)
				(NX halb sechs))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK ware)
				(MF mir etwas zu fruh))[01;31m)[00m
		(SU fruhestens eine stunde spater)))
Step:Unary
{'subtrees': ['NX'], 'family': ['APPR', 'SIMPX', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'APPR', 'ADJD', 'CARD', 'VAFIN', 'APPR', 'NN', 'ADV', 'PTKNEG', 'ADV', 'ADJD', 'CARD', 'PDS', 'VAFIN', 'PPER', 'ADV', 'PTKA', 'ADJD', 'ADV', 'ART', 'NN', 'ADJD'), 'right siblings': ['SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 22), 'span': (7, 12), 'left siblings': ['APPR', 'SIMPX'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(APPR ab)
		(SIMPX ab halb sechs ist in ordnung)
		(NX nur nicht gleich halb sechs)
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK ware)
				(MF mir etwas zu fruh))[01;31m)[00m
		(SU fruhestens eine stunde spater)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['APPR', 'SIMPX', 'NX', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'APPR', 'ADJD', 'CARD', 'VAFIN', 'APPR', 'NN', 'ADV', 'PTKNEG', 'ADV', 'ADJD', 'CARD', 'PDS', 'VAFIN', 'PPER', 'ADV', 'PTKA', 'ADJD', 'ADV', 'ART', 'NN', 'ADJD'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 22), 'span': (12, 18), 'left siblings': ['APPR', 'SIMPX', 'NX'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ab ab halb sechs ist in ordnung nur nicht gleich halb sechs das ware mir etwas zu fruh fruhestens eine stunde spater)

Sentence 518:
4 Initial errors
0 on fringe, 2 iterations
2 Error:Different label
2 Error:UNSET move
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SU[00m
	(TOP
		(TURN
			[01;36m(LV[00m [01;31m(SU[00m
				(NX
					(ADJX halb)
					(CARD acht))[01;31m)[00m[01;36m)[00m
			[01;31m(SU[00m
				(DM ja)
				(SIMPX halb acht ist in ordnung)[01;31m)[00m))[01;36m)[00m
Step:Different label
{'family': ['LV', 'SU'], 'auto preterminal span': (0, 2), 'span': (0, 2), 'subtrees': ['NX'], 'parent': 'TURN', 'over_word': False, 'auto preterminals': ('ADJD', 'CARD'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('SU', 'LV')}
[01;36m(SU[00m
	(TOP
		(TURN
			(LV halb acht)
			[01;31m(SU[00m
				(DM ja)
				(SIMPX halb acht ist in ordnung)[01;31m)[00m))[01;36m)[00m
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['LV', 'DM', 'SIMPX'], 'mover info': [('LV', (0, 2))], 'old_family': ['LV', 'SU'], 'start left siblings': [], 'auto preterminals': ('ADJD', 'CARD', 'PTKANT', 'ADJD', 'CARD', 'VAFIN', 'APPR', 'NN'), 'start right siblings': ['SU'], 'end left siblings': [], 'auto preterminal span': (0, 8), 'movers': ['LV'], 'old_parent': 'TURN', 'end right siblings': ['DM', 'SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP halb acht ja halb acht ist in ordnung)

Sentence 519:
28 Initial errors
0 on fringe, 21 iterations
4 Error:VP Attachment
3 Error:NP Attachment
2 Error:Different label
1 Error:UNSET add
1 Error:Unary
1 Error:Unary
1 Error:UNSET remove
1 Error:Clause Attachment
1 Error:PP Attachment
1 Error:UNSET remove
2 Error:PP Attachment
1 Error:PP Attachment
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:Unary
1 Error:UNSET remove
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX
				(VF ich)
				(LK weis)
				(MF nicht)
				(NF
					(SIMPX
						(C ob)
						[01;31m(MF[00m [01;33m(MF[00m
							(NX sie)
							(NX sich)
							(PX um die unterkunft)
							(ADVX schon)[01;31m)[00m
						[01;31m(VC[00m
							(VXINF gekummert) [01;33mMF)[00m
							[01;36m(VC[00m
								(VXFIN
									(VAFIN haben))[01;36m)[00m[01;31m)[00m))))
		(SU
			(SIMPX
				[01;31m(VF[00m
					(SIMPX
						(C wenn)
						(MF nicht))[01;31m)[00m
				[01;36m(SIMPX[00m
					(LK hatte)
					(MF ich hier drei vorschlage)[01;36m)[00m))
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF es)
				(LK gabe)
				[01;31m(MF[00m
					(ADVX da)
					[01;31m(NX[00m
						(NX das hotel zentral)
						[01;33m(NX[00m (NX das hotel nohre)
						(KON und)
						[01;33m(NX[00m (NX das hotel prinzenhof)[01;31m)[00m
					(PX in hannover)[01;31m)[00m[01;31m)[00m [01;33mNX)[00m
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					[01;31m(NX[00m
						[01;31m(NX[00m
							(NX beides)
							(NX sehr gute unterkunfte)[01;31m)[00m [01;33mNX)[00m
						(KON und)
						[01;36m(MF[00m [01;31m(ADJX[00m
							(ADVX auch)
							(ADJX ziemlich zentral gelegen)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
				(LK glaube)
				(MF ich)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF die)
				(LK unterscheiden)
				(MF sich dann wohl nur im preis)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m [01;33m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF das eine)
				(LK liegt)
				[01;33m(NX (MF[00m (MF etwas uber zweihundert mark)[01;31m)[00m
			[01;31m(NX[00m
				(NX die anderen) [01;33mMF) NX) SIMPX)[00m
				(PX
					(ADVX so)
					(APPR um)
					(NX [01;33m(ADJX[00m
						(NX hundert vierzig mark)
						[01;31m(NX[00m
							(ADJX hundert zwanzig) [01;33mADJX)[00m
							(NN mark)[01;31m)[00m))[01;31m)[00m[01;31m)[00m
		(SU ich weis)))
Step:VP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'NX', 'PX', 'ADVX', 'VXINF'], 'mover info': [('VXINF', (11, 12))], 'old_family': ['VXINF', 'VXFIN'], 'start left siblings': [], 'auto preterminals': ('KOUS', 'PPER', 'PRF', 'APPR', 'ART', 'NN', 'ADV', 'VVPP', 'VAFIN'), 'start right siblings': ['VXFIN'], 'end left siblings': ['NX', 'NX', 'PX', 'ADVX'], 'auto preterminal span': (4, 13), 'movers': ['VXINF'], 'old_parent': 'VC', 'POS confusion': ('VVPP', 'VVPP'), 'end right siblings': [], 'classified_type': 'VP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU ja ich weis nicht ob sie sich um die unterkunft schon gekummert haben)
		(SU
			(SIMPX
				[01;31m(VF[00m
					(SIMPX
						(C wenn)
						(MF nicht))[01;31m)[00m
				[01;36m(SIMPX[00m
					(LK hatte)
					(MF ich hier drei vorschlage)[01;36m)[00m))
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF es)
				(LK gabe)
				[01;31m(MF[00m
					(ADVX da)
					[01;31m(NX[00m
						(NX das hotel zentral)
						[01;33m(NX[00m (NX das hotel nohre)
						(KON und)
						[01;33m(NX[00m (NX das hotel prinzenhof)[01;31m)[00m
					(PX in hannover)[01;31m)[00m[01;31m)[00m [01;33mNX)[00m
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					[01;31m(NX[00m
						[01;31m(NX[00m
							(NX beides)
							(NX sehr gute unterkunfte)[01;31m)[00m [01;33mNX)[00m
						(KON und)
						[01;36m(MF[00m [01;31m(ADJX[00m
							(ADVX auch)
							(ADJX ziemlich zentral gelegen)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
				(LK glaube)
				(MF ich)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF die)
				(LK unterscheiden)
				(MF sich dann wohl nur im preis)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m [01;33m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF das eine)
				(LK liegt)
				[01;33m(NX (MF[00m (MF etwas uber zweihundert mark)[01;31m)[00m
			[01;31m(NX[00m
				(NX die anderen) [01;33mMF) NX) SIMPX)[00m
				(PX
					(ADVX so)
					(APPR um)
					(NX [01;33m(ADJX[00m
						(NX hundert vierzig mark)
						[01;31m(NX[00m
							(ADJX hundert zwanzig) [01;33mADJX)[00m
							(NN mark)[01;31m)[00m))[01;31m)[00m[01;31m)[00m
		(SU ich weis)))
Step:NP Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'NX'], 'mover info': [('NX', (61, 63))], 'old_family': ['NX', 'PX'], 'start left siblings': [], 'auto preterminals': ('ART', 'PIS', 'VVFIN', 'ADV', 'APPR', 'CARD', 'NN', 'ART', 'PIS', 'ADV', 'APPR', 'CARD', 'CARD', 'NN', 'CARD', 'CARD', 'NN'), 'start right siblings': ['PX'], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (54, 71), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'MF'}
(TOP
	(TURN
		(SU ja ich weis nicht ob sie sich um die unterkunft schon gekummert haben)
		(SU
			(SIMPX
				[01;31m(VF[00m
					(SIMPX
						(C wenn)
						(MF nicht))[01;31m)[00m
				[01;36m(SIMPX[00m
					(LK hatte)
					(MF ich hier drei vorschlage)[01;36m)[00m))
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF es)
				(LK gabe)
				[01;31m(MF[00m
					(ADVX da)
					[01;31m(NX[00m
						(NX das hotel zentral)
						[01;33m(NX[00m (NX das hotel nohre)
						(KON und)
						[01;33m(NX[00m (NX das hotel prinzenhof)[01;31m)[00m
					(PX in hannover)[01;31m)[00m[01;31m)[00m [01;33mNX)[00m
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					[01;31m(NX[00m
						[01;31m(NX[00m
							(NX beides)
							(NX sehr gute unterkunfte)[01;31m)[00m [01;33mNX)[00m
						(KON und)
						[01;36m(MF[00m [01;31m(ADJX[00m
							(ADVX auch)
							(ADJX ziemlich zentral gelegen)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
				(LK glaube)
				(MF ich)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF die)
				(LK unterscheiden)
				(MF sich dann wohl nur im preis)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF das eine)
				(LK liegt)
				[01;36m(MF[00m
					(NX
						(MF etwas uber zweihundert mark)
						(NX die anderen))[01;36m)[00m)
			[01;31m(NX[00m
				(PX
					(ADVX so)
					(APPR um)
					(NX [01;33m(ADJX[00m
						(NX hundert vierzig mark)
						[01;31m(NX[00m
							(ADJX hundert zwanzig) [01;33mADJX)[00m
							(NN mark)[01;31m)[00m))[01;31m)[00m[01;31m)[00m
		(SU ich weis)))
Step:Different label
{'family': ['NX', 'KON', 'MF'], 'auto preterminal span': (40, 44), 'span': (40, 44), 'subtrees': ['ADVX', 'ADJX'], 'parent': 'NX', 'over_word': False, 'auto preterminals': ('ADV', 'ADV', 'ADV', 'ADJD'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('ADJX', 'MF')}
(TOP
	(TURN
		(SU ja ich weis nicht ob sie sich um die unterkunft schon gekummert haben)
		(SU
			(SIMPX
				[01;31m(VF[00m
					(SIMPX
						(C wenn)
						(MF nicht))[01;31m)[00m
				[01;36m(SIMPX[00m
					(LK hatte)
					(MF ich hier drei vorschlage)[01;36m)[00m))
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF es)
				(LK gabe)
				[01;31m(MF[00m
					(ADVX da)
					[01;31m(NX[00m
						(NX das hotel zentral)
						[01;33m(NX[00m (NX das hotel nohre)
						(KON und)
						[01;33m(NX[00m (NX das hotel prinzenhof)[01;31m)[00m
					(PX in hannover)[01;31m)[00m[01;31m)[00m [01;33mNX)[00m
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					[01;31m(NX[00m
						[01;31m(NX[00m
							(NX beides)
							(NX sehr gute unterkunfte)[01;31m)[00m [01;33mNX)[00m
						(KON und)
						(MF auch ziemlich zentral gelegen)[01;31m)[00m[01;31m)[00m
				(LK glaube)
				(MF ich)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF die)
				(LK unterscheiden)
				(MF sich dann wohl nur im preis)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF das eine)
				(LK liegt)
				[01;36m(MF[00m
					(NX
						(MF etwas uber zweihundert mark)
						(NX die anderen))[01;36m)[00m)
			[01;31m(NX[00m
				(PX
					(ADVX so)
					(APPR um)
					(NX [01;33m(ADJX[00m
						(NX hundert vierzig mark)
						[01;31m(NX[00m
							(ADJX hundert zwanzig) [01;33mADJX)[00m
							(NN mark)[01;31m)[00m))[01;31m)[00m[01;31m)[00m
		(SU ich weis)))
Step:UNSET add
{'subtrees': ['LK', 'MF'], 'family': ['VF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'PPER', 'ADV', 'CARD', 'NN'), 'right siblings': [], 'left siblings': [(VF (SIMPX (C (KOUS wenn)) (MF (ADVX (PTKNEG nicht)))))], 'auto preterminal span': (15, 20), 'span': (15, 20), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU ja ich weis nicht ob sie sich um die unterkunft schon gekummert haben)
		(SU
			(SIMPX
				[01;31m(VF[00m
					(SIMPX
						(C wenn)
						(MF nicht))[01;31m)[00m
				(SIMPX hatte ich hier drei vorschlage)))
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF es)
				(LK gabe)
				[01;31m(MF[00m
					(ADVX da)
					[01;31m(NX[00m
						(NX das hotel zentral)
						[01;33m(NX[00m (NX das hotel nohre)
						(KON und)
						[01;33m(NX[00m (NX das hotel prinzenhof)[01;31m)[00m
					(PX in hannover)[01;31m)[00m[01;31m)[00m [01;33mNX)[00m
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					[01;31m(NX[00m
						[01;31m(NX[00m
							(NX beides)
							(NX sehr gute unterkunfte)[01;31m)[00m [01;33mNX)[00m
						(KON und)
						(MF auch ziemlich zentral gelegen)[01;31m)[00m[01;31m)[00m
				(LK glaube)
				(MF ich)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF die)
				(LK unterscheiden)
				(MF sich dann wohl nur im preis)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF das eine)
				(LK liegt)
				[01;36m(MF[00m
					(NX
						(MF etwas uber zweihundert mark)
						(NX die anderen))[01;36m)[00m)
			[01;31m(NX[00m
				(PX
					(ADVX so)
					(APPR um)
					(NX [01;33m(ADJX[00m
						(NX hundert vierzig mark)
						[01;31m(NX[00m
							(ADJX hundert zwanzig) [01;33mADJX)[00m
							(NN mark)[01;31m)[00m))[01;31m)[00m[01;31m)[00m
		(SU ich weis)))
Step:Unary
{'subtrees': ['NX'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'APPR', 'CARD', 'NN', 'ART', 'PIS'), 'right siblings': [], 'left siblings': [(VF (NX (ART das) (PIS eine))), (LK (VXFIN (VVFIN liegt)))], 'auto preterminal span': (57, 63), 'span': (57, 63), 'parent': 'SIMPX', 'label': 'MF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU ja ich weis nicht ob sie sich um die unterkunft schon gekummert haben)
		(SU
			(SIMPX
				[01;31m(VF[00m
					(SIMPX
						(C wenn)
						(MF nicht))[01;31m)[00m
				(SIMPX hatte ich hier drei vorschlage)))
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF es)
				(LK gabe)
				[01;31m(MF[00m
					(ADVX da)
					[01;31m(NX[00m
						(NX das hotel zentral)
						[01;33m(NX[00m (NX das hotel nohre)
						(KON und)
						[01;33m(NX[00m (NX das hotel prinzenhof)[01;31m)[00m
					(PX in hannover)[01;31m)[00m[01;31m)[00m [01;33mNX)[00m
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					[01;31m(NX[00m
						[01;31m(NX[00m
							(NX beides)
							(NX sehr gute unterkunfte)[01;31m)[00m [01;33mNX)[00m
						(KON und)
						(MF auch ziemlich zentral gelegen)[01;31m)[00m[01;31m)[00m
				(LK glaube)
				(MF ich)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF die)
				(LK unterscheiden)
				(MF sich dann wohl nur im preis)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX das eine liegt etwas uber zweihundert mark die anderen)
			[01;31m(NX[00m
				(PX
					(ADVX so)
					(APPR um)
					(NX [01;33m(ADJX[00m
						(NX hundert vierzig mark)
						[01;31m(NX[00m
							(ADJX hundert zwanzig) [01;33mADJX)[00m
							(NN mark)[01;31m)[00m))[01;31m)[00m[01;31m)[00m
		(SU ich weis)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['VF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PTKNEG', 'VAFIN', 'PPER', 'ADV', 'CARD', 'NN'), 'right siblings': ['SIMPX'], 'parent': 'SIMPX', 'auto preterminal span': (13, 20), 'span': (13, 15), 'left siblings': [], 'label': 'VF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU ja ich weis nicht ob sie sich um die unterkunft schon gekummert haben)
		(SU wenn nicht hatte ich hier drei vorschlage)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF es)
				(LK gabe)
				[01;31m(MF[00m
					(ADVX da)
					[01;31m(NX[00m
						(NX das hotel zentral)
						[01;33m(NX[00m (NX das hotel nohre)
						(KON und)
						[01;33m(NX[00m (NX das hotel prinzenhof)[01;31m)[00m
					(PX in hannover)[01;31m)[00m[01;31m)[00m [01;33mNX)[00m
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					[01;31m(NX[00m
						[01;31m(NX[00m
							(NX beides)
							(NX sehr gute unterkunfte)[01;31m)[00m [01;33mNX)[00m
						(KON und)
						(MF auch ziemlich zentral gelegen)[01;31m)[00m[01;31m)[00m
				(LK glaube)
				(MF ich)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF die)
				(LK unterscheiden)
				(MF sich dann wohl nur im preis)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX das eine liegt etwas uber zweihundert mark die anderen)
			[01;31m(NX[00m
				(PX
					(ADVX so)
					(APPR um)
					(NX [01;33m(ADJX[00m
						(NX hundert vierzig mark)
						[01;31m(NX[00m
							(ADJX hundert zwanzig) [01;33mADJX)[00m
							(NN mark)[01;31m)[00m))[01;31m)[00m[01;31m)[00m
		(SU ich weis)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NE', 'ART', 'NN', 'NE', 'KON', 'ART', 'NN', 'NE', 'APPR', 'NE', 'PIS', 'ADV', 'ADJA', 'NN', 'KON', 'ADV', 'ADV', 'ADV', 'ADJD', 'VVFIN', 'PPER'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (20, 46), 'span': (20, 35), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU ja ich weis nicht ob sie sich um die unterkunft schon gekummert haben)
		(SU wenn nicht hatte ich hier drei vorschlage)
		[01;31m(SU[00m
			(VF es)
			(LK gabe)
			[01;31m(MF[00m
				(ADVX da)
				[01;31m(NX[00m
					(NX das hotel zentral)
					[01;33m(NX[00m (NX das hotel nohre)
					(KON und)
					[01;33m(NX[00m (NX das hotel prinzenhof)[01;31m)[00m
				(PX in hannover)[01;31m)[00m [01;33mNX)[00m
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					[01;31m(NX[00m
						[01;31m(NX[00m
							(NX beides)
							(NX sehr gute unterkunfte)[01;31m)[00m [01;33mNX)[00m
						(KON und)
						(MF auch ziemlich zentral gelegen)[01;31m)[00m[01;31m)[00m
				(LK glaube)
				(MF ich)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF die)
				(LK unterscheiden)
				(MF sich dann wohl nur im preis)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX das eine liegt etwas uber zweihundert mark die anderen)
			[01;31m(NX[00m
				(PX
					(ADVX so)
					(APPR um)
					(NX [01;33m(ADJX[00m
						(NX hundert vierzig mark)
						[01;31m(NX[00m
							(ADJX hundert zwanzig) [01;33mADJX)[00m
							(NN mark)[01;31m)[00m))[01;31m)[00m[01;31m)[00m
		(SU ich weis)))
Step:Clause Attachment
{'subtrees': ['VF', 'LK', 'MF', 'SIMPX'], 'family': ['SU', 'SU', 'SU', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VVFIN', 'PTKNEG', 'KOUS', 'PPER', 'PRF', 'APPR', 'ART', 'NN', 'ADV', 'VVPP', 'VAFIN', 'KOUS', 'PTKNEG', 'VAFIN', 'PPER', 'ADV', 'CARD', 'NN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NE', 'ART', 'NN', 'NE', 'KON', 'ART', 'NN', 'NE', 'APPR', 'NE', 'PIS', 'ADV', 'ADJA', 'NN', 'KON', 'ADV', 'ADV', 'ADV', 'ADJD', 'VVFIN', 'PPER', 'PDS', 'VVFIN', 'PRF', 'ADV', 'ADV', 'ADV', 'APPRART', 'NN', 'ART', 'PIS', 'VVFIN', 'ADV', 'APPR', 'CARD', 'NN', 'ART', 'PIS', 'ADV', 'APPR', 'CARD', 'CARD', 'NN', 'CARD', 'CARD', 'NN', 'PPER', 'VVFIN'), 'right siblings': ['SU', 'SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 73), 'span': (20, 46), 'left siblings': ['SU', 'SU'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU ja ich weis nicht ob sie sich um die unterkunft schon gekummert haben)
		(SU wenn nicht hatte ich hier drei vorschlage)
		(VF es)
		(LK gabe)
		[01;31m(MF[00m
			(ADVX da)
			[01;31m(NX[00m
				(NX das hotel zentral)
				[01;33m(NX[00m (NX das hotel nohre)
				(KON und)
				[01;33m(NX[00m (NX das hotel prinzenhof)[01;31m)[00m
			(PX in hannover)[01;31m)[00m [01;33mNX)[00m
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(NX beides)
						(NX sehr gute unterkunfte)[01;31m)[00m [01;33mNX)[00m
					(KON und)
					(MF auch ziemlich zentral gelegen)[01;31m)[00m[01;31m)[00m
			(LK glaube)
			(MF ich)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF die)
				(LK unterscheiden)
				(MF sich dann wohl nur im preis)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX das eine liegt etwas uber zweihundert mark die anderen)
			[01;31m(NX[00m
				(PX
					(ADVX so)
					(APPR um)
					(NX [01;33m(ADJX[00m
						(NX hundert vierzig mark)
						[01;31m(NX[00m
							(ADJX hundert zwanzig) [01;33mADJX)[00m
							(NN mark)[01;31m)[00m))[01;31m)[00m[01;31m)[00m
		(SU ich weis)))
Step:PP Attachment
{'subtrees': ['ADVX', 'NX', 'PX'], 'family': ['SU', 'SU', 'VF', 'LK', 'MF', 'SIMPX', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VVFIN', 'PTKNEG', 'KOUS', 'PPER', 'PRF', 'APPR', 'ART', 'NN', 'ADV', 'VVPP', 'VAFIN', 'KOUS', 'PTKNEG', 'VAFIN', 'PPER', 'ADV', 'CARD', 'NN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NE', 'ART', 'NN', 'NE', 'KON', 'ART', 'NN', 'NE', 'APPR', 'NE', 'PIS', 'ADV', 'ADJA', 'NN', 'KON', 'ADV', 'ADV', 'ADV', 'ADJD', 'VVFIN', 'PPER', 'PDS', 'VVFIN', 'PRF', 'ADV', 'ADV', 'ADV', 'APPRART', 'NN', 'ART', 'PIS', 'VVFIN', 'ADV', 'APPR', 'CARD', 'NN', 'ART', 'PIS', 'ADV', 'APPR', 'CARD', 'CARD', 'NN', 'CARD', 'CARD', 'NN', 'PPER', 'VVFIN'), 'right siblings': ['SIMPX', 'SU', 'SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 73), 'span': (22, 35), 'left siblings': ['SU', 'SU', 'VF', 'LK'], 'label': 'MF', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU ja ich weis nicht ob sie sich um die unterkunft schon gekummert haben)
		(SU wenn nicht hatte ich hier drei vorschlage)
		(VF es)
		(LK gabe)
		(ADVX da)
		[01;31m(NX[00m
			(NX das hotel zentral)
			[01;33m(NX[00m (NX das hotel nohre)
			(KON und)
			[01;33m(NX[00m (NX das hotel prinzenhof)[01;31m)[00m
		(PX in hannover) [01;33mNX)[00m
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(NX beides)
						(NX sehr gute unterkunfte)[01;31m)[00m [01;33mNX)[00m
					(KON und)
					(MF auch ziemlich zentral gelegen)[01;31m)[00m[01;31m)[00m
			(LK glaube)
			(MF ich)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF die)
				(LK unterscheiden)
				(MF sich dann wohl nur im preis)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX das eine liegt etwas uber zweihundert mark die anderen)
			[01;31m(NX[00m
				(PX
					(ADVX so)
					(APPR um)
					(NX [01;33m(ADJX[00m
						(NX hundert vierzig mark)
						[01;31m(NX[00m
							(ADJX hundert zwanzig) [01;33mADJX)[00m
							(NN mark)[01;31m)[00m))[01;31m)[00m[01;31m)[00m
		(SU ich weis)))
Step:UNSET remove
{'subtrees': ['NX', 'NX', 'KON', 'NX'], 'family': ['SU', 'SU', 'VF', 'LK', 'ADVX', 'NX', 'PX', 'SIMPX', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VVFIN', 'PTKNEG', 'KOUS', 'PPER', 'PRF', 'APPR', 'ART', 'NN', 'ADV', 'VVPP', 'VAFIN', 'KOUS', 'PTKNEG', 'VAFIN', 'PPER', 'ADV', 'CARD', 'NN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NE', 'ART', 'NN', 'NE', 'KON', 'ART', 'NN', 'NE', 'APPR', 'NE', 'PIS', 'ADV', 'ADJA', 'NN', 'KON', 'ADV', 'ADV', 'ADV', 'ADJD', 'VVFIN', 'PPER', 'PDS', 'VVFIN', 'PRF', 'ADV', 'ADV', 'ADV', 'APPRART', 'NN', 'ART', 'PIS', 'VVFIN', 'ADV', 'APPR', 'CARD', 'NN', 'ART', 'PIS', 'ADV', 'APPR', 'CARD', 'CARD', 'NN', 'CARD', 'CARD', 'NN', 'PPER', 'VVFIN'), 'right siblings': ['PX', 'SIMPX', 'SU', 'SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 73), 'span': (23, 33), 'left siblings': ['SU', 'SU', 'VF', 'LK', 'ADVX'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU ja ich weis nicht ob sie sich um die unterkunft schon gekummert haben)
		(SU wenn nicht hatte ich hier drei vorschlage)
		(VF es)
		(LK gabe)
		(ADVX da)
		(NX das hotel zentral)
		[01;33m(NX[00m (NX das hotel nohre)
		(KON und)
		[01;36m(NX[00m
			(NX das hotel prinzenhof)
			(PX in hannover)[01;36m)[00m
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(NX beides)
						(NX sehr gute unterkunfte)[01;31m)[00m [01;33mNX)[00m
					(KON und)
					(MF auch ziemlich zentral gelegen)[01;31m)[00m[01;31m)[00m
			(LK glaube)
			(MF ich)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF die)
				(LK unterscheiden)
				(MF sich dann wohl nur im preis)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX das eine liegt etwas uber zweihundert mark die anderen)
			[01;31m(NX[00m
				(PX
					(ADVX so)
					(APPR um)
					(NX [01;33m(ADJX[00m
						(NX hundert vierzig mark)
						[01;31m(NX[00m
							(ADJX hundert zwanzig) [01;33mADJX)[00m
							(NN mark)[01;31m)[00m))[01;31m)[00m[01;31m)[00m
		(SU ich weis)))
Step:PP Attachment
{'new_parent': 'NX', 'new_family': ['NX', 'KON', 'NX', 'PX', 'NX', 'NX'], 'mover info': [('NX', (26, 29)), ('KON', (29, 30)), ('NX', (30, 33)), ('PX', (33, 35))], 'old_family': ['SU', 'SU', 'VF', 'LK', 'ADVX', 'NX', 'NX', 'KON', 'NX', 'PX', 'SIMPX', 'SU', 'SU', 'SU'], 'start left siblings': ['SU', 'SU', 'VF', 'LK', 'ADVX', 'NX'], 'auto preterminals': ('PTKANT', 'PPER', 'VVFIN', 'PTKNEG', 'KOUS', 'PPER', 'PRF', 'APPR', 'ART', 'NN', 'ADV', 'VVPP', 'VAFIN', 'KOUS', 'PTKNEG', 'VAFIN', 'PPER', 'ADV', 'CARD', 'NN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NE', 'ART', 'NN', 'NE', 'KON', 'ART', 'NN', 'NE', 'APPR', 'NE', 'PIS', 'ADV', 'ADJA', 'NN', 'KON', 'ADV', 'ADV', 'ADV', 'ADJD', 'VVFIN', 'PPER', 'PDS', 'VVFIN', 'PRF', 'ADV', 'ADV', 'ADV', 'APPRART', 'NN', 'ART', 'PIS', 'VVFIN', 'ADV', 'APPR', 'CARD', 'NN', 'ART', 'PIS', 'ADV', 'APPR', 'CARD', 'CARD', 'NN', 'CARD', 'CARD', 'NN', 'PPER', 'VVFIN'), 'start right siblings': ['SIMPX', 'SU', 'SU', 'SU'], 'end left siblings': [], 'auto preterminal span': (0, 73), 'movers': ['NX', 'KON', 'NX', 'PX'], 'old_parent': 'TURN', 'end right siblings': ['NX', 'NX'], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU ja ich weis nicht ob sie sich um die unterkunft schon gekummert haben)
		(SU wenn nicht hatte ich hier drei vorschlage)
		(VF es)
		(LK gabe)
		(ADVX da)
		(NX das hotel zentral)
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				[01;31m(NX[00m
					(NX
						(NX das hotel nohre)
						(KON und)
						[01;36m(NX[00m
							(NX das hotel prinzenhof)
							(PX in hannover)[01;36m)[00m
						(NX beides)
						(NX sehr gute unterkunfte))
					(KON und)
					(MF auch ziemlich zentral gelegen)[01;31m)[00m[01;31m)[00m
			(LK glaube)
			(MF ich)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF die)
				(LK unterscheiden)
				(MF sich dann wohl nur im preis)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX das eine liegt etwas uber zweihundert mark die anderen)
			[01;31m(NX[00m
				(PX
					(ADVX so)
					(APPR um)
					(NX [01;33m(ADJX[00m
						(NX hundert vierzig mark)
						[01;31m(NX[00m
							(ADJX hundert zwanzig) [01;33mADJX)[00m
							(NN mark)[01;31m)[00m))[01;31m)[00m[01;31m)[00m
		(SU ich weis)))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['NX', 'KON', 'NX', 'NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'NE', 'APPR', 'NE'), 'right siblings': [(NX (PIS beides)), (NX (ADJX (ADVX (ADV sehr)) (ADJA gute)) (NN unterkunfte))], 'left siblings': [(NX (ART das) (NX (NX (NN hotel)) (NX (NE nohre)))), (KON und)], 'auto preterminal span': (30, 35), 'span': (30, 35), 'parent': 'NX', 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU ja ich weis nicht ob sie sich um die unterkunft schon gekummert haben)
		(SU wenn nicht hatte ich hier drei vorschlage)
		(VF es)
		(LK gabe)
		(ADVX da)
		(NX das hotel zentral)
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				[01;31m(NX[00m
					(NX das hotel nohre und das hotel prinzenhof in hannover beides sehr gute unterkunfte)
					(KON und)
					(MF auch ziemlich zentral gelegen)[01;31m)[00m[01;31m)[00m
			(LK glaube)
			(MF ich)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF die)
				(LK unterscheiden)
				(MF sich dann wohl nur im preis)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX das eine liegt etwas uber zweihundert mark die anderen)
			[01;31m(NX[00m
				(PX
					(ADVX so)
					(APPR um)
					(NX [01;33m(ADJX[00m
						(NX hundert vierzig mark)
						[01;31m(NX[00m
							(ADJX hundert zwanzig) [01;33mADJX)[00m
							(NN mark)[01;31m)[00m))[01;31m)[00m[01;31m)[00m
		(SU ich weis)))
Step:Unary
{'subtrees': ['NX'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'NE', 'KON', 'ART', 'NN', 'NE', 'APPR', 'NE', 'PIS', 'ADV', 'ADJA', 'NN', 'KON', 'ADV', 'ADV', 'ADV', 'ADJD', 'VVFIN', 'PPER'), 'right siblings': ['LK', 'MF'], 'parent': 'SIMPX', 'auto preterminal span': (26, 46), 'span': (26, 44), 'left siblings': [], 'label': 'VF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU ja ich weis nicht ob sie sich um die unterkunft schon gekummert haben)
		(SU wenn nicht hatte ich hier drei vorschlage)
		(VF es)
		(LK gabe)
		(ADVX da)
		(NX das hotel zentral)
		[01;31m(SIMPX[00m
			[01;31m(NX[00m
				(NX das hotel nohre und das hotel prinzenhof in hannover beides sehr gute unterkunfte)
				(KON und)
				(MF auch ziemlich zentral gelegen)[01;31m)[00m
			(LK glaube)
			(MF ich)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF die)
				(LK unterscheiden)
				(MF sich dann wohl nur im preis)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX das eine liegt etwas uber zweihundert mark die anderen)
			[01;31m(NX[00m
				(PX
					(ADVX so)
					(APPR um)
					(NX [01;33m(ADJX[00m
						(NX hundert vierzig mark)
						[01;31m(NX[00m
							(ADJX hundert zwanzig) [01;33mADJX)[00m
							(NN mark)[01;31m)[00m))[01;31m)[00m[01;31m)[00m
		(SU ich weis)))
Step:UNSET remove
{'subtrees': ['NX', 'KON', 'MF'], 'family': ['NX', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'NE', 'KON', 'ART', 'NN', 'NE', 'APPR', 'NE', 'PIS', 'ADV', 'ADJA', 'NN', 'KON', 'ADV', 'ADV', 'ADV', 'ADJD', 'VVFIN', 'PPER'), 'right siblings': ['LK', 'MF'], 'parent': 'SIMPX', 'auto preterminal span': (26, 46), 'span': (26, 44), 'left siblings': [], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU ja ich weis nicht ob sie sich um die unterkunft schon gekummert haben)
		(SU wenn nicht hatte ich hier drei vorschlage)
		(VF es)
		(LK gabe)
		(ADVX da)
		(NX das hotel zentral)
		[01;31m(SIMPX[00m
			(NX das hotel nohre und das hotel prinzenhof in hannover beides sehr gute unterkunfte)
			(KON und)
			(MF auch ziemlich zentral gelegen)
			(LK glaube)
			(MF ich)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF die)
				(LK unterscheiden)
				(MF sich dann wohl nur im preis)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX das eine liegt etwas uber zweihundert mark die anderen)
			[01;31m(NX[00m
				(PX
					(ADVX so)
					(APPR um)
					(NX [01;33m(ADJX[00m
						(NX hundert vierzig mark)
						[01;31m(NX[00m
							(ADJX hundert zwanzig) [01;33mADJX)[00m
							(NN mark)[01;31m)[00m))[01;31m)[00m[01;31m)[00m
		(SU ich weis)))
Step:UNSET remove
{'subtrees': ['NX', 'KON', 'MF', 'LK', 'MF'], 'family': ['SU', 'SU', 'VF', 'LK', 'ADVX', 'NX', 'SIMPX', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VVFIN', 'PTKNEG', 'KOUS', 'PPER', 'PRF', 'APPR', 'ART', 'NN', 'ADV', 'VVPP', 'VAFIN', 'KOUS', 'PTKNEG', 'VAFIN', 'PPER', 'ADV', 'CARD', 'NN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NE', 'ART', 'NN', 'NE', 'KON', 'ART', 'NN', 'NE', 'APPR', 'NE', 'PIS', 'ADV', 'ADJA', 'NN', 'KON', 'ADV', 'ADV', 'ADV', 'ADJD', 'VVFIN', 'PPER', 'PDS', 'VVFIN', 'PRF', 'ADV', 'ADV', 'ADV', 'APPRART', 'NN', 'ART', 'PIS', 'VVFIN', 'ADV', 'APPR', 'CARD', 'NN', 'ART', 'PIS', 'ADV', 'APPR', 'CARD', 'CARD', 'NN', 'CARD', 'CARD', 'NN', 'PPER', 'VVFIN'), 'right siblings': ['SU', 'SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 73), 'span': (26, 46), 'left siblings': ['SU', 'SU', 'VF', 'LK', 'ADVX', 'NX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU ja ich weis nicht ob sie sich um die unterkunft schon gekummert haben)
		(SU wenn nicht hatte ich hier drei vorschlage)
		(VF es)
		(LK gabe)
		(ADVX da)
		(NX das hotel zentral)
		(NX das hotel nohre und das hotel prinzenhof in hannover beides sehr gute unterkunfte)
		(KON und)
		(MF auch ziemlich zentral gelegen)
		(LK glaube)
		(MF ich)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF die)
				(LK unterscheiden)
				(MF sich dann wohl nur im preis)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX das eine liegt etwas uber zweihundert mark die anderen)
			[01;31m(NX[00m
				(PX
					(ADVX so)
					(APPR um)
					(NX [01;33m(ADJX[00m
						(NX hundert vierzig mark)
						[01;31m(NX[00m
							(ADJX hundert zwanzig) [01;33mADJX)[00m
							(NN mark)[01;31m)[00m))[01;31m)[00m[01;31m)[00m
		(SU ich weis)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SU', 'SU', 'VF', 'LK', 'ADVX', 'NX', 'NX', 'KON', 'MF', 'LK', 'MF', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VVFIN', 'PTKNEG', 'KOUS', 'PPER', 'PRF', 'APPR', 'ART', 'NN', 'ADV', 'VVPP', 'VAFIN', 'KOUS', 'PTKNEG', 'VAFIN', 'PPER', 'ADV', 'CARD', 'NN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NE', 'ART', 'NN', 'NE', 'KON', 'ART', 'NN', 'NE', 'APPR', 'NE', 'PIS', 'ADV', 'ADJA', 'NN', 'KON', 'ADV', 'ADV', 'ADV', 'ADJD', 'VVFIN', 'PPER', 'PDS', 'VVFIN', 'PRF', 'ADV', 'ADV', 'ADV', 'APPRART', 'NN', 'ART', 'PIS', 'VVFIN', 'ADV', 'APPR', 'CARD', 'NN', 'ART', 'PIS', 'ADV', 'APPR', 'CARD', 'CARD', 'NN', 'CARD', 'CARD', 'NN', 'PPER', 'VVFIN'), 'right siblings': ['SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 73), 'span': (46, 54), 'left siblings': ['SU', 'SU', 'VF', 'LK', 'ADVX', 'NX', 'NX', 'KON', 'MF', 'LK', 'MF'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU ja ich weis nicht ob sie sich um die unterkunft schon gekummert haben)
		(SU wenn nicht hatte ich hier drei vorschlage)
		(VF es)
		(LK gabe)
		(ADVX da)
		(NX das hotel zentral)
		(NX das hotel nohre und das hotel prinzenhof in hannover beides sehr gute unterkunfte)
		(KON und)
		(MF auch ziemlich zentral gelegen)
		(LK glaube)
		(MF ich)
		[01;31m(SIMPX[00m
			(VF die)
			(LK unterscheiden)
			(MF sich dann wohl nur im preis)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX das eine liegt etwas uber zweihundert mark die anderen)
			[01;31m(NX[00m
				(PX
					(ADVX so)
					(APPR um)
					(NX [01;33m(ADJX[00m
						(NX hundert vierzig mark)
						[01;31m(NX[00m
							(ADJX hundert zwanzig) [01;33mADJX)[00m
							(NN mark)[01;31m)[00m))[01;31m)[00m[01;31m)[00m
		(SU ich weis)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['SU', 'SU', 'VF', 'LK', 'ADVX', 'NX', 'NX', 'KON', 'MF', 'LK', 'MF', 'SIMPX', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VVFIN', 'PTKNEG', 'KOUS', 'PPER', 'PRF', 'APPR', 'ART', 'NN', 'ADV', 'VVPP', 'VAFIN', 'KOUS', 'PTKNEG', 'VAFIN', 'PPER', 'ADV', 'CARD', 'NN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NE', 'ART', 'NN', 'NE', 'KON', 'ART', 'NN', 'NE', 'APPR', 'NE', 'PIS', 'ADV', 'ADJA', 'NN', 'KON', 'ADV', 'ADV', 'ADV', 'ADJD', 'VVFIN', 'PPER', 'PDS', 'VVFIN', 'PRF', 'ADV', 'ADV', 'ADV', 'APPRART', 'NN', 'ART', 'PIS', 'VVFIN', 'ADV', 'APPR', 'CARD', 'NN', 'ART', 'PIS', 'ADV', 'APPR', 'CARD', 'CARD', 'NN', 'CARD', 'CARD', 'NN', 'PPER', 'VVFIN'), 'right siblings': ['SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 73), 'span': (46, 54), 'left siblings': ['SU', 'SU', 'VF', 'LK', 'ADVX', 'NX', 'NX', 'KON', 'MF', 'LK', 'MF'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU ja ich weis nicht ob sie sich um die unterkunft schon gekummert haben)
		(SU wenn nicht hatte ich hier drei vorschlage)
		(VF es)
		(LK gabe)
		(ADVX da)
		(NX das hotel zentral)
		(NX das hotel nohre und das hotel prinzenhof in hannover beides sehr gute unterkunfte)
		(KON und)
		(MF auch ziemlich zentral gelegen)
		(LK glaube)
		(MF ich)
		(VF die)
		(LK unterscheiden)
		(MF sich dann wohl nur im preis)
		[01;31m(SU[00m
			(SIMPX das eine liegt etwas uber zweihundert mark die anderen)
			[01;31m(NX[00m
				(PX
					(ADVX so)
					(APPR um)
					(NX [01;33m(ADJX[00m
						(NX hundert vierzig mark)
						[01;31m(NX[00m
							(ADJX hundert zwanzig) [01;33mADJX)[00m
							(NN mark)[01;31m)[00m))[01;31m)[00m[01;31m)[00m
		(SU ich weis)))
Step:UNSET remove
{'subtrees': ['SIMPX', 'NX'], 'family': ['SU', 'SU', 'VF', 'LK', 'ADVX', 'NX', 'NX', 'KON', 'MF', 'LK', 'MF', 'VF', 'LK', 'MF', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VVFIN', 'PTKNEG', 'KOUS', 'PPER', 'PRF', 'APPR', 'ART', 'NN', 'ADV', 'VVPP', 'VAFIN', 'KOUS', 'PTKNEG', 'VAFIN', 'PPER', 'ADV', 'CARD', 'NN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NE', 'ART', 'NN', 'NE', 'KON', 'ART', 'NN', 'NE', 'APPR', 'NE', 'PIS', 'ADV', 'ADJA', 'NN', 'KON', 'ADV', 'ADV', 'ADV', 'ADJD', 'VVFIN', 'PPER', 'PDS', 'VVFIN', 'PRF', 'ADV', 'ADV', 'ADV', 'APPRART', 'NN', 'ART', 'PIS', 'VVFIN', 'ADV', 'APPR', 'CARD', 'NN', 'ART', 'PIS', 'ADV', 'APPR', 'CARD', 'CARD', 'NN', 'CARD', 'CARD', 'NN', 'PPER', 'VVFIN'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 73), 'span': (54, 71), 'left siblings': ['SU', 'SU', 'VF', 'LK', 'ADVX', 'NX', 'NX', 'KON', 'MF', 'LK', 'MF', 'VF', 'LK', 'MF'], 'label': 'SU', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU ja ich weis nicht ob sie sich um die unterkunft schon gekummert haben)
		(SU wenn nicht hatte ich hier drei vorschlage)
		(VF es)
		(LK gabe)
		(ADVX da)
		(NX das hotel zentral)
		(NX das hotel nohre und das hotel prinzenhof in hannover beides sehr gute unterkunfte)
		(KON und)
		(MF auch ziemlich zentral gelegen)
		(LK glaube)
		(MF ich)
		(VF die)
		(LK unterscheiden)
		(MF sich dann wohl nur im preis)
		(SIMPX das eine liegt etwas uber zweihundert mark die anderen)
		[01;31m(NX[00m
			(PX
				(ADVX so)
				(APPR um)
				(NX [01;33m(ADJX[00m
					(NX hundert vierzig mark)
					[01;31m(NX[00m
						(ADJX hundert zwanzig) [01;33mADJX)[00m
						(NN mark)[01;31m)[00m))[01;31m)[00m
		(SU ich weis)))
Step:Unary
{'subtrees': ['PX'], 'family': ['SU', 'SU', 'VF', 'LK', 'ADVX', 'NX', 'NX', 'KON', 'MF', 'LK', 'MF', 'VF', 'LK', 'MF', 'SIMPX', 'NX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VVFIN', 'PTKNEG', 'KOUS', 'PPER', 'PRF', 'APPR', 'ART', 'NN', 'ADV', 'VVPP', 'VAFIN', 'KOUS', 'PTKNEG', 'VAFIN', 'PPER', 'ADV', 'CARD', 'NN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NE', 'ART', 'NN', 'NE', 'KON', 'ART', 'NN', 'NE', 'APPR', 'NE', 'PIS', 'ADV', 'ADJA', 'NN', 'KON', 'ADV', 'ADV', 'ADV', 'ADJD', 'VVFIN', 'PPER', 'PDS', 'VVFIN', 'PRF', 'ADV', 'ADV', 'ADV', 'APPRART', 'NN', 'ART', 'PIS', 'VVFIN', 'ADV', 'APPR', 'CARD', 'NN', 'ART', 'PIS', 'ADV', 'APPR', 'CARD', 'CARD', 'NN', 'CARD', 'CARD', 'NN', 'PPER', 'VVFIN'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 73), 'span': (63, 71), 'left siblings': ['SU', 'SU', 'VF', 'LK', 'ADVX', 'NX', 'NX', 'KON', 'MF', 'LK', 'MF', 'VF', 'LK', 'MF', 'SIMPX'], 'label': 'NX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU ja ich weis nicht ob sie sich um die unterkunft schon gekummert haben)
		(SU wenn nicht hatte ich hier drei vorschlage)
		(VF es)
		(LK gabe)
		(ADVX da)
		(NX das hotel zentral)
		(NX das hotel nohre und das hotel prinzenhof in hannover beides sehr gute unterkunfte)
		(KON und)
		(MF auch ziemlich zentral gelegen)
		(LK glaube)
		(MF ich)
		(VF die)
		(LK unterscheiden)
		(MF sich dann wohl nur im preis)
		(SIMPX das eine liegt etwas uber zweihundert mark die anderen)
		(PX
			(ADVX so)
			(APPR um)
			(NX [01;33m(ADJX[00m
				(NX hundert vierzig mark)
				[01;31m(NX[00m
					(ADJX hundert zwanzig) [01;33mADJX)[00m
					(NN mark)[01;31m)[00m))
		(SU ich weis)))
Step:UNSET remove
{'subtrees': ['ADJX', 'NN'], 'family': ['NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'CARD', 'NN', 'CARD', 'CARD', 'NN'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (65, 71), 'span': (68, 71), 'left siblings': ['NX'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU ja ich weis nicht ob sie sich um die unterkunft schon gekummert haben)
		(SU wenn nicht hatte ich hier drei vorschlage)
		(VF es)
		(LK gabe)
		(ADVX da)
		(NX das hotel zentral)
		(NX das hotel nohre und das hotel prinzenhof in hannover beides sehr gute unterkunfte)
		(KON und)
		(MF auch ziemlich zentral gelegen)
		(LK glaube)
		(MF ich)
		(VF die)
		(LK unterscheiden)
		(MF sich dann wohl nur im preis)
		(SIMPX das eine liegt etwas uber zweihundert mark die anderen)
		(PX
			(ADVX so)
			(APPR um)
			(NX
				[01;36m(ADJX[00m
					(NX hundert vierzig mark)
					(ADJX hundert zwanzig)[01;36m)[00m
				(NN mark)))
		(SU ich weis)))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADJX'], 'family': ['ADJX', 'NN'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'CARD', 'NN', 'CARD', 'CARD'), 'right siblings': [(NN mark)], 'left siblings': [], 'auto preterminal span': (65, 70), 'span': (65, 70), 'parent': 'NX', 'label': 'ADJX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP ja ich weis nicht ob sie sich um die unterkunft schon gekummert haben wenn nicht hatte ich hier drei vorschlage es gabe da das hotel zentral das hotel nohre und das hotel prinzenhof in hannover beides sehr gute unterkunfte und auch ziemlich zentral gelegen glaube ich die unterscheiden sich dann wohl nur im preis das eine liegt etwas uber zweihundert mark die anderen so um hundert vierzig mark hundert zwanzig mark ich weis)

Sentence 520:
3 Initial errors
0 on fringe, 2 iterations
2 Error:UNSET move
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SU[00m
	(TOP
		(TURN
			[01;31m(SU[00m
				(DM
					(PTKANT ja))[01;31m)[00m
			[01;31m(SU[00m
				(NX
					(ADJX zwei)
					(NN einzelzimmer))[01;31m)[00m))[01;36m)[00m
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SU', 'NX'], 'mover info': [('SU', (0, 1))], 'old_family': ['SU', 'SU'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'CARD', 'NN'), 'start right siblings': ['SU'], 'end left siblings': [], 'auto preterminal span': (0, 3), 'movers': ['SU'], 'old_parent': 'TURN', 'POS confusion': ('PTKANT', 'PTKANT'), 'end right siblings': ['NX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			[01;31m(SU[00m
				(DM
					(PTKANT ja))[01;31m)[00m
			(NX zwei einzelzimmer))))
Step:Unary
{'subtrees': ['DM'], 'family': ['SU', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'CARD', 'NN'), 'right siblings': ['NX'], 'parent': 'SU', 'auto preterminal span': (0, 3), 'span': (0, 1), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja zwei einzelzimmer)

Sentence 521:
3 Initial errors
0 on fringe, 2 iterations
2 Error:UNSET move
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SU[00m
	(TOP
		(TURN
			[01;31m(SU[00m
				(DM
					(ITJ okay))[01;31m)[00m
			[01;31m(SU[00m
				(DM
					(ITJ gerne))[01;31m)[00m))[01;36m)[00m
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SU', 'DM'], 'mover info': [('SU', (0, 1))], 'old_family': ['SU', 'SU'], 'start left siblings': [], 'auto preterminals': ('ITJ', 'ITJ'), 'start right siblings': ['SU'], 'end left siblings': [], 'auto preterminal span': (0, 2), 'movers': ['SU'], 'old_parent': 'TURN', 'POS confusion': ('ITJ', 'ITJ'), 'end right siblings': ['DM'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			[01;31m(SU[00m
				(DM
					(ITJ okay))[01;31m)[00m
			(DM gerne))))
Step:Unary
{'subtrees': ['DM'], 'family': ['SU', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ITJ'), 'right siblings': ['DM'], 'parent': 'SU', 'auto preterminal span': (0, 2), 'span': (0, 1), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP okay gerne)

Sentence 522:
11 Initial errors
0 on fringe, 9 iterations
3 Error:UNSET move
1 Error:Clause Attachment
1 Error:Single Word Phrase
1 Error:Unary
1 Error:Clause Attachment
1 Error:Single Word Phrase
1 Error:Modifier Attachment
1 Error:NP Internal Structure
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU haben sie schon irgendwelche vorschlage)
		[01;31m(SU[00m
			[01;36m(SIMPX[00m
				(SIMPX ich weis nicht)
				(SIMPX in die oper mochte ich grade nicht gehen oder ins konzert)[01;36m)[00m
			[01;36m(SIMPX[00m
				[01;31m(NX[00m
					[01;31m(ADVX[00m
						(ADV aber)[01;31m)[00m
					(ADVX vielleicht)
					[01;33m(NX[00m (NX irgendwas)[01;31m)[00m
				[01;31m(NX[00m
					[01;36m(NX[00m
						(ADJX kleines)
						[01;31m(ADJX[00m
							(ADJA gemutliches)[01;31m)[00m [01;33mNX)[00m[01;36m)[00m
					[01;36m(VC[00m
						[01;36m(VXINF[00m
							(NN treffen)[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m))
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SIMPX', 'SIMPX', 'NX', 'NX', 'NN'], 'mover info': [('NN', (24, 25))], 'old_family': ['ADJX', 'ADJX', 'NN'], 'start left siblings': ['ADJX', 'ADJX'], 'auto preterminals': ('PPER', 'VVFIN', 'PTKNEG', 'APPR', 'ART', 'NN', 'VMFIN', 'PPER', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'APPRART', 'NN', 'ADV', 'ADV', 'PIS', 'ADJA', 'ADJA', 'NN'), 'start right siblings': [], 'end left siblings': ['SIMPX', 'SIMPX', 'NX', 'NX'], 'auto preterminal span': (5, 25), 'adding node already present': False, 'movers': ['NN'], 'old_parent': 'NX', 'POS confusion': ('NN', 'NN'), 'added and moved': True, 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'VC'}
(TOP
	(TURN
		(SU haben sie schon irgendwelche vorschlage)
		[01;31m(SU[00m
			[01;36m(SIMPX[00m
				(SIMPX ich weis nicht)
				(SIMPX in die oper mochte ich grade nicht gehen oder ins konzert)[01;36m)[00m
			(SIMPX
				[01;31m(NX[00m
					[01;31m(ADVX[00m
						(ADV aber)[01;31m)[00m
					(ADVX vielleicht)
					[01;33m(NX[00m (NX irgendwas)[01;31m)[00m
				(NX
					(ADJX kleines)
					[01;31m(ADJX[00m
						(ADJA gemutliches)[01;31m)[00m) [01;33mNX)[00m
				[01;36m(VC[00m
					[01;36m(VXINF[00m
						(NN treffen)[01;36m)[00m[01;36m)[00m)[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'PTKNEG', 'APPR', 'ART', 'NN', 'VMFIN', 'PPER', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'APPRART', 'NN'), 'right siblings': [(SIMPX (NX (ADVX (ADV aber)) (ADVX (ADV vielleicht)) (NX (PIS irgendwas))) (NX (ADJX (ADJA kleines)) (ADJX (ADJA gemutliches))) (NN treffen))], 'left siblings': [], 'auto preterminal span': (5, 19), 'span': (5, 19), 'parent': 'SU', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU haben sie schon irgendwelche vorschlage)
		[01;31m(SU[00m
			(SIMPX ich weis nicht in die oper mochte ich grade nicht gehen oder ins konzert)
			(SIMPX
				[01;31m(NX[00m
					[01;31m(ADVX[00m
						(ADV aber)[01;31m)[00m
					(ADVX vielleicht)
					[01;33m(NX[00m (NX irgendwas)[01;31m)[00m
				(NX
					(ADJX kleines)
					[01;31m(ADJX[00m
						(ADJA gemutliches)[01;31m)[00m) [01;33mNX)[00m
				[01;36m(VC[00m
					[01;36m(VXINF[00m
						(NN treffen)[01;36m)[00m[01;36m)[00m)[01;31m)[00m))
Step:Single Word Phrase
{'subtrees': ['NN'], 'family': ['NX', 'NX', 'VXINF'], 'over_word': True, 'over words': True, 'auto preterminals': ('NN',), 'right siblings': [], 'left siblings': [(NX (ADVX (ADV aber)) (ADVX (ADV vielleicht)) (NX (PIS irgendwas))), (NX (ADJX (ADJA kleines)) (ADJX (ADJA gemutliches)))], 'auto preterminal span': (24, 25), 'span': (24, 25), 'parent': 'SIMPX', 'label': 'VXINF', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SU haben sie schon irgendwelche vorschlage)
		[01;31m(SU[00m
			(SIMPX ich weis nicht in die oper mochte ich grade nicht gehen oder ins konzert)
			(SIMPX
				[01;31m(NX[00m
					[01;31m(ADVX[00m
						(ADV aber)[01;31m)[00m
					(ADVX vielleicht)
					[01;33m(NX[00m (NX irgendwas)[01;31m)[00m
				(NX
					(ADJX kleines)
					[01;31m(ADJX[00m
						(ADJA gemutliches)[01;31m)[00m) [01;33mNX)[00m
				[01;36m(VC[00m
					(VXINF
						(NN treffen))[01;36m)[00m)[01;31m)[00m))
Step:Unary
{'subtrees': ['VXINF'], 'family': ['NX', 'NX', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN',), 'right siblings': [], 'left siblings': [(NX (ADVX (ADV aber)) (ADVX (ADV vielleicht)) (NX (PIS irgendwas))), (NX (ADJX (ADJA kleines)) (ADJX (ADJA gemutliches)))], 'auto preterminal span': (24, 25), 'span': (24, 25), 'parent': 'SIMPX', 'label': 'VC', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU haben sie schon irgendwelche vorschlage)
		[01;31m(SU[00m
			(SIMPX ich weis nicht in die oper mochte ich grade nicht gehen oder ins konzert)
			(SIMPX
				[01;31m(NX[00m
					[01;31m(ADVX[00m
						(ADV aber)[01;31m)[00m
					(ADVX vielleicht)
					[01;33m(NX[00m (NX irgendwas)[01;31m)[00m
				(NX
					(ADJX kleines)
					[01;31m(ADJX[00m
						(ADJA gemutliches)[01;31m)[00m) [01;33mNX)[00m
				(VC treffen))[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'PPER', 'ADV', 'PIAT', 'NN', 'PPER', 'VVFIN', 'PTKNEG', 'APPR', 'ART', 'NN', 'VMFIN', 'PPER', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'APPRART', 'NN', 'ADV', 'ADV', 'PIS', 'ADJA', 'ADJA', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 25), 'span': (5, 25), 'left siblings': ['SU'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU haben sie schon irgendwelche vorschlage)
		(SIMPX ich weis nicht in die oper mochte ich grade nicht gehen oder ins konzert)
		(SIMPX
			[01;31m(NX[00m
				[01;31m(ADVX[00m
					(ADV aber)[01;31m)[00m
				(ADVX vielleicht)
				[01;33m(NX[00m (NX irgendwas)[01;31m)[00m
			(NX
				(ADJX kleines)
				[01;31m(ADJX[00m
					(ADJA gemutliches)[01;31m)[00m) [01;33mNX)[00m
			(VC treffen))))
Step:Single Word Phrase
{'subtrees': ['ADV'], 'family': ['ADVX', 'ADVX', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADV', 'ADV', 'PIS'), 'right siblings': ['ADVX', 'NX'], 'parent': 'NX', 'auto preterminal span': (19, 22), 'span': (19, 20), 'left siblings': [], 'label': 'ADVX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(SU haben sie schon irgendwelche vorschlage)
		(SIMPX ich weis nicht in die oper mochte ich grade nicht gehen oder ins konzert)
		(SIMPX
			[01;31m(NX[00m
				(ADV aber)
				(ADVX vielleicht)
				[01;33m(NX[00m (NX irgendwas)[01;31m)[00m
			(NX
				(ADJX kleines)
				[01;31m(ADJX[00m
					(ADJA gemutliches)[01;31m)[00m) [01;33mNX)[00m
			(VC treffen))))
Step:Modifier Attachment
{'subtrees': ['ADV', 'ADVX', 'NX'], 'family': ['NX', 'NX', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'PIS', 'ADJA', 'ADJA', 'NN'), 'right siblings': ['NX', 'VC'], 'parent': 'SIMPX', 'auto preterminal span': (19, 25), 'span': (19, 22), 'left siblings': [], 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU haben sie schon irgendwelche vorschlage)
		(SIMPX ich weis nicht in die oper mochte ich grade nicht gehen oder ins konzert)
		(SIMPX
			(ADV aber)
			(ADVX vielleicht)
			[01;36m(NX[00m
				(NX irgendwas)
				(NX
					(ADJX kleines)
					[01;31m(ADJX[00m
						(ADJA gemutliches)[01;31m)[00m)[01;36m)[00m
			(VC treffen))))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['ADV', 'ADVX', 'NX', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('PIS', 'ADJA', 'ADJA'), 'right siblings': [(VC (VXINF (NN treffen)))], 'left siblings': [(ADV aber), (ADVX (ADV vielleicht))], 'auto preterminal span': (21, 24), 'span': (21, 24), 'parent': 'SIMPX', 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'add'}
(TOP
	(TURN
		(SU haben sie schon irgendwelche vorschlage)
		(SIMPX ich weis nicht in die oper mochte ich grade nicht gehen oder ins konzert)
		(SIMPX
			(ADV aber)
			(ADVX vielleicht)
			(NX
				(NX irgendwas)
				(NX
					(ADJX kleines)
					[01;31m(ADJX[00m
						(ADJA gemutliches)[01;31m)[00m))
			(VC treffen))))
Step:Single Word Phrase
{'subtrees': ['ADJA'], 'family': ['ADJX', 'ADJX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADJA', 'ADJA'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (22, 24), 'span': (23, 24), 'left siblings': ['ADJX'], 'label': 'ADJX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP haben sie schon irgendwelche vorschlage ich weis nicht in die oper mochte ich grade nicht gehen oder ins konzert aber vielleicht irgendwas kleines gemutliches treffen)

Sentence 523:
3 Initial errors
0 on fringe, 3 iterations
1 Error:Clause Attachment
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			(SIMPX ich kann nur noch nicht in der ersten oktoberhalfte)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF da)
				(LK bin)
				(MF ich im urlaub))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(KOORD aber)
				(VF ab dann)
				(LK finden)
				(MF wir sicherlich einen gemeinsamen termin))[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['DM', 'SIMPX'], 'family': ['SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VMFIN', 'ADV', 'ADV', 'PTKNEG', 'APPR', 'ART', 'ADJA', 'NN', 'ADV', 'VAFIN', 'PPER', 'APPRART', 'NN', 'KON', 'APPR', 'ADV', 'VVFIN', 'PPER', 'ADV', 'ART', 'ADJA', 'NN'), 'right siblings': ['SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 24), 'span': (0, 10), 'left siblings': [], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich kann nur noch nicht in der ersten oktoberhalfte)
		[01;31m(SU[00m
			(SIMPX
				(VF da)
				(LK bin)
				(MF ich im urlaub))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(KOORD aber)
				(VF ab dann)
				(LK finden)
				(MF wir sicherlich einen gemeinsamen termin))[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['DM', 'SIMPX', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VMFIN', 'ADV', 'ADV', 'PTKNEG', 'APPR', 'ART', 'ADJA', 'NN', 'ADV', 'VAFIN', 'PPER', 'APPRART', 'NN', 'KON', 'APPR', 'ADV', 'VVFIN', 'PPER', 'ADV', 'ART', 'ADJA', 'NN'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 24), 'span': (10, 15), 'left siblings': ['DM', 'SIMPX'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich kann nur noch nicht in der ersten oktoberhalfte)
		(SIMPX da bin ich im urlaub)
		[01;31m(SU[00m
			(SIMPX
				(KOORD aber)
				(VF ab dann)
				(LK finden)
				(MF wir sicherlich einen gemeinsamen termin))[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['DM', 'SIMPX', 'SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VMFIN', 'ADV', 'ADV', 'PTKNEG', 'APPR', 'ART', 'ADJA', 'NN', 'ADV', 'VAFIN', 'PPER', 'APPRART', 'NN', 'KON', 'APPR', 'ADV', 'VVFIN', 'PPER', 'ADV', 'ART', 'ADJA', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 24), 'span': (15, 24), 'left siblings': ['DM', 'SIMPX', 'SIMPX'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja ich kann nur noch nicht in der ersten oktoberhalfte da bin ich im urlaub aber ab dann finden wir sicherlich einen gemeinsamen termin)

Sentence 524:
2 Initial errors
0 on fringe, 2 iterations
1 Error:Clause Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU ja da habe ich auch noch ein meeting)
		[01;31m(SU[00m
			(DM also)
			(SIMPX es ware auch bei mir nicht moglich)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(KOORD aber)
				(VF wie)
				(LK ware)
				(MF es am dienstag und mittwoch))[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['DM', 'SIMPX'], 'family': ['SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADV', 'VAFIN', 'PPER', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'PPER', 'VAFIN', 'ADV', 'APPR', 'PPER', 'PTKNEG', 'ADJD', 'KON', 'PWAV', 'VAFIN', 'PPER', 'APPRART', 'NN', 'KON', 'NN'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 24), 'span': (8, 16), 'left siblings': ['SU'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU ja da habe ich auch noch ein meeting)
		(DM also)
		(SIMPX es ware auch bei mir nicht moglich)
		[01;31m(SU[00m
			(SIMPX
				(KOORD aber)
				(VF wie)
				(LK ware)
				(MF es am dienstag und mittwoch))[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SU', 'DM', 'SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADV', 'VAFIN', 'PPER', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'PPER', 'VAFIN', 'ADV', 'APPR', 'PPER', 'PTKNEG', 'ADJD', 'KON', 'PWAV', 'VAFIN', 'PPER', 'APPRART', 'NN', 'KON', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 24), 'span': (16, 24), 'left siblings': ['SU', 'DM', 'SIMPX'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja da habe ich auch noch ein meeting also es ware auch bei mir nicht moglich aber wie ware es am dienstag und mittwoch)

Sentence 525:
0 Initial errors
0 on fringe, 0 iterations

Sentence 526:
4 Initial errors
0 on fringe, 2 iterations
2 Error:UNSET move
2 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SU[00m
	(TOP
		(TURN
			[01;31m(SU[00m
				(DM ja)
				(SIMPX
					(VF wir)
					(LK konnen)
					(MF auch gleich halb acht)
					(VC sagen)
					(NF [01;33m(NX[00m
						(NX
							(NX sieben uhr)
							[01;31m(NX[00m
								(NX sieben uhr) [01;33mNX)[00m
								(ADJX funfundzwanzig)[01;31m)[00m)))[01;31m)[00m
			(SU gut)))[01;36m)[00m
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['DM', 'SIMPX', 'SU'], 'mover info': [('SU', (13, 14))], 'old_family': ['SU', 'SU'], 'start left siblings': ['SU'], 'auto preterminals': ('PTKANT', 'PPER', 'VMFIN', 'ADV', 'ADV', 'ADJD', 'CARD', 'VVINF', 'CARD', 'NN', 'CARD', 'NN', 'CARD', 'ITJ'), 'start right siblings': [], 'end left siblings': ['DM', 'SIMPX'], 'auto preterminal span': (0, 14), 'movers': ['SU'], 'old_parent': 'TURN', 'POS confusion': ('ITJ', 'ITJ'), 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX
				(VF wir)
				(LK konnen)
				(MF auch gleich halb acht)
				(VC sagen)
				(NF [01;33m(NX[00m
					(NX
						(NX sieben uhr)
						[01;31m(NX[00m
							(NX sieben uhr) [01;33mNX)[00m
							(ADJX funfundzwanzig)[01;31m)[00m)))
			(SU gut))))
Step:Modifier Attachment
{'new_parent': 'NF', 'new_family': ['NX', 'ADJX'], 'mover info': [('ADJX', (12, 13))], 'old_family': ['NX', 'ADJX'], 'start left siblings': ['NX'], 'auto preterminals': ('CARD', 'NN', 'CARD', 'NN', 'CARD'), 'start right siblings': [], 'end left siblings': ['NX'], 'auto preterminal span': (8, 13), 'adding node already present': False, 'movers': ['ADJX'], 'old_parent': 'NX', 'POS confusion': ('CARD', 'CARD'), 'added and moved': True, 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'NX'}
(TOP ja wir konnen auch gleich halb acht sagen sieben uhr sieben uhr funfundzwanzig gut)

Sentence 527:
5 Initial errors
0 on fringe, 3 iterations
2 Error:Single Word Phrase
2 Error:UNSET move
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SU[00m
	(TOP
		(TURN
			[01;31m(SU[00m
				(DM
					(PTKANT ja))[01;31m)[00m
			[01;31m(SU[00m
				(SIMPX das teuerste mus es vielleicht nicht sein)
				[01;36m(ADVX[00m [01;31m(DM[00m
					(KON aber)[01;31m)[00m[01;36m)[00m[01;31m)[00m))[01;36m)[00m
Step:Single Word Phrase
{'family': ['SIMPX', 'ADVX'], 'auto preterminal span': (8, 9), 'span': (8, 9), 'subtrees': ['KON'], 'parent': 'SU', 'over_word': True, 'auto preterminals': ('KON',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('DM', 'ADVX')}
[01;36m(SU[00m
	(TOP
		(TURN
			[01;31m(SU[00m
				(DM
					(PTKANT ja))[01;31m)[00m
			[01;31m(SU[00m
				(SIMPX das teuerste mus es vielleicht nicht sein)
				(ADVX aber)[01;31m)[00m))[01;36m)[00m
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SU', 'SIMPX', 'ADVX'], 'mover info': [('SU', (0, 1))], 'old_family': ['SU', 'SU'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'ART', 'NN', 'VMFIN', 'PPER', 'ADV', 'PTKNEG', 'VAINF', 'KON'), 'start right siblings': ['SU'], 'end left siblings': [], 'auto preterminal span': (0, 9), 'movers': ['SU'], 'old_parent': 'TURN', 'POS confusion': ('PTKANT', 'PTKANT'), 'end right siblings': ['SIMPX', 'ADVX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			[01;31m(SU[00m
				(DM
					(PTKANT ja))[01;31m)[00m
			(SIMPX das teuerste mus es vielleicht nicht sein)
			(ADVX aber))))
Step:Unary
{'subtrees': ['DM'], 'family': ['SU', 'SIMPX', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ART', 'NN', 'VMFIN', 'PPER', 'ADV', 'PTKNEG', 'VAINF', 'KON'), 'right siblings': ['SIMPX', 'ADVX'], 'parent': 'SU', 'auto preterminal span': (0, 9), 'span': (0, 1), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja das teuerste mus es vielleicht nicht sein aber)

Sentence 528:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM
				(ITJ einverstanden))[01;31m)[00m
		(SU ubernehmen sie die buchung)))
Step:Unary
{'subtrees': ['DM'], 'family': ['SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'VVFIN', 'PPER', 'ART', 'NN'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 5), 'span': (0, 1), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP einverstanden ubernehmen sie die buchung)

Sentence 529:
3 Initial errors
0 on fringe, 2 iterations
2 Error:UNSET move
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SU[00m
	(TOP
		(TURN
			[01;31m(SU[00m
				(DM
					(ITJ gut))[01;31m)[00m
			[01;31m(SU[00m
				(SIMPX
					(VF ich)
					(LK kummere)
					(MF mich dann um die zugfahrkarten))[01;31m)[00m))[01;36m)[00m
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SU', 'SIMPX'], 'mover info': [('SU', (0, 1))], 'old_family': ['SU', 'SU'], 'start left siblings': [], 'auto preterminals': ('ITJ', 'PPER', 'VVFIN', 'PRF', 'ADV', 'APPR', 'ART', 'NN'), 'start right siblings': ['SU'], 'end left siblings': [], 'auto preterminal span': (0, 8), 'movers': ['SU'], 'old_parent': 'TURN', 'POS confusion': ('ITJ', 'ITJ'), 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			[01;31m(SU[00m
				(DM
					(ITJ gut))[01;31m)[00m
			(SIMPX ich kummere mich dann um die zugfahrkarten))))
Step:Unary
{'subtrees': ['DM'], 'family': ['SU', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PPER', 'VVFIN', 'PRF', 'ADV', 'APPR', 'ART', 'NN'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 8), 'span': (0, 1), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP gut ich kummere mich dann um die zugfahrkarten)

Sentence 530:
3 Initial errors
0 on fringe, 2 iterations
2 Error:UNSET move
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SU[00m
	(TOP
		(TURN
			[01;31m(SU[00m
				(DM
					(PTKANT ja))[01;31m)[00m
			[01;31m(SU[00m
				(SIMPX vielleicht findet sich ja auch eine nette kneipe)
				(DM oder)[01;31m)[00m))[01;36m)[00m
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SU', 'SIMPX', 'DM'], 'mover info': [('SU', (0, 1))], 'old_family': ['SU', 'SU'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'ADV', 'VVFIN', 'PRF', 'ADV', 'ADV', 'ART', 'ADJA', 'NN', 'ITJ'), 'start right siblings': ['SU'], 'end left siblings': [], 'auto preterminal span': (0, 10), 'movers': ['SU'], 'old_parent': 'TURN', 'POS confusion': ('PTKANT', 'PTKANT'), 'end right siblings': ['SIMPX', 'DM'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			[01;31m(SU[00m
				(DM
					(PTKANT ja))[01;31m)[00m
			(SIMPX vielleicht findet sich ja auch eine nette kneipe)
			(DM oder))))
Step:Unary
{'subtrees': ['DM'], 'family': ['SU', 'SIMPX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADV', 'VVFIN', 'PRF', 'ADV', 'ADV', 'ART', 'ADJA', 'NN', 'ITJ'), 'right siblings': ['SIMPX', 'DM'], 'parent': 'SU', 'auto preterminal span': (0, 10), 'span': (0, 1), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja vielleicht findet sich ja auch eine nette kneipe oder)

Sentence 531:
0 Initial errors
0 on fringe, 0 iterations

Sentence 532:
2 Initial errors
0 on fringe, 2 iterations
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU ja das trifft sich sehr gut gell)
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK mus)
				(MF ihnen nur)
				(VC sagen)
				(NF das ich die letzten beiden juliwochen und die ersten beiden augustwochen im urlaub bin))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(KOORD aber)
				(VF sonst)
				(LK habe)
				(MF ich eigentlich schon noch etliche termine)
				(VC frei))[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PDS', 'VVFIN', 'PRF', 'ADV', 'ADJD', 'ITJ', 'PPER', 'VMFIN', 'PPER', 'ADV', 'VVINF', 'KOUS', 'PPER', 'ART', 'ADJA', 'PIDAT', 'NN', 'KON', 'ART', 'ADJA', 'PIDAT', 'NN', 'APPRART', 'NN', 'VAFIN', 'KON', 'ADV', 'VAFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'PIAT', 'NN', 'PTKVZ'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 36), 'span': (7, 26), 'left siblings': ['SU'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU ja das trifft sich sehr gut gell)
		(SIMPX ich mus ihnen nur sagen das ich die letzten beiden juliwochen und die ersten beiden augustwochen im urlaub bin)
		[01;31m(SU[00m
			(SIMPX
				(KOORD aber)
				(VF sonst)
				(LK habe)
				(MF ich eigentlich schon noch etliche termine)
				(VC frei))[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SU', 'SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PDS', 'VVFIN', 'PRF', 'ADV', 'ADJD', 'ITJ', 'PPER', 'VMFIN', 'PPER', 'ADV', 'VVINF', 'KOUS', 'PPER', 'ART', 'ADJA', 'PIDAT', 'NN', 'KON', 'ART', 'ADJA', 'PIDAT', 'NN', 'APPRART', 'NN', 'VAFIN', 'KON', 'ADV', 'VAFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'PIAT', 'NN', 'PTKVZ'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 36), 'span': (26, 36), 'left siblings': ['SU', 'SIMPX'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja das trifft sich sehr gut gell ich mus ihnen nur sagen das ich die letzten beiden juliwochen und die ersten beiden augustwochen im urlaub bin aber sonst habe ich eigentlich schon noch etliche termine frei)

Sentence 533:
5 Initial errors
0 on fringe, 3 iterations
2 Error:UNSET move
2 Error:Co-ordination
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SU[00m
	(TOP
		(TURN
			[01;31m(SU[00m
				(DM
					(PTKANT ja))[01;31m)[00m
			[01;31m(SU[00m [01;33m(NX[00m
				(SIMPX
					(VF
						(NX
							(ART der)
							[01;31m(NX[00m
								(NX dienstag) [01;33mNX)[00m
								(KON und)
								(NX mittwoch)[01;31m)[00m))
					(LK wurde)
					(MF bei mir sehr gut)
					(VC passen))[01;31m)[00m))[01;36m)[00m
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SU', 'SIMPX'], 'mover info': [('SU', (0, 1))], 'old_family': ['SU', 'SU'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'ART', 'NN', 'KON', 'NN', 'VAFIN', 'APPR', 'PPER', 'ADV', 'ADJD', 'VVINF'), 'start right siblings': ['SU'], 'end left siblings': [], 'auto preterminal span': (0, 11), 'movers': ['SU'], 'old_parent': 'TURN', 'POS confusion': ('PTKANT', 'PTKANT'), 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			[01;31m(SU[00m
				(DM
					(PTKANT ja))[01;31m)[00m
			(SIMPX [01;33m(NX[00m
				(VF
					(NX
						(ART der)
						[01;31m(NX[00m
							(NX dienstag) [01;33mNX)[00m
							(KON und)
							(NX mittwoch)[01;31m)[00m))
				(LK wurde)
				(MF bei mir sehr gut)
				(VC passen)))))
Step:Co-ordination
{'new_parent': 'VF', 'new_family': ['NX', 'KON', 'NX'], 'mover info': [('KON', (3, 4)), ('NX', (4, 5))], 'old_family': ['NX', 'KON', 'NX'], 'start left siblings': ['NX'], 'auto preterminals': ('ART', 'NN', 'KON', 'NN'), 'start right siblings': [], 'end left siblings': ['NX'], 'auto preterminal span': (1, 5), 'adding node already present': False, 'movers': ['KON', 'NX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'Co-ordination', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(SU
			[01;31m(SU[00m
				(DM
					(PTKANT ja))[01;31m)[00m
			(SIMPX der dienstag und mittwoch wurde bei mir sehr gut passen))))
Step:Unary
{'subtrees': ['DM'], 'family': ['SU', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ART', 'NN', 'KON', 'NN', 'VAFIN', 'APPR', 'PPER', 'ADV', 'ADJD', 'VVINF'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 11), 'span': (0, 1), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja der dienstag und mittwoch wurde bei mir sehr gut passen)

Sentence 534:
4 Initial errors
0 on fringe, 3 iterations
2 Error:Single Word Phrase
1 Error:PP Attachment
1 Error:Clause Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			(SIMPX
				(VF dann)
				(LK konnten)
				(MF
					(NX wir)
					(ADVX auch)
					(ADVX noch)
					(NX
						[01;36m(NX[00m [01;31m(ADJX[00m
							(ADJA gewisse)[01;31m)[00m[01;36m)[00m
						(ADJX geschaftliche)
						(NN dinge))
					[01;36m(PX[00m
						(ADVX gleich)
						(PX im zug)[01;36m)[00m)
				(VC besprechen))[01;31m)[00m
		(SU das ware sehr angenehm)))
Step:Single Word Phrase
{'family': ['NX', 'ADJX', 'NN'], 'auto preterminal span': (6, 7), 'span': (6, 7), 'subtrees': ['ADJA'], 'parent': 'NX', 'over_word': True, 'auto preterminals': ('ADJA',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'NX')}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			(SIMPX
				(VF dann)
				(LK konnten)
				(MF
					(NX wir)
					(ADVX auch)
					(ADVX noch)
					(NX gewisse geschaftliche dinge)
					[01;36m(PX[00m
						(ADVX gleich)
						(PX im zug)[01;36m)[00m)
				(VC besprechen))[01;31m)[00m
		(SU das ware sehr angenehm)))
Step:PP Attachment
{'subtrees': ['ADVX', 'PX'], 'family': ['NX', 'ADVX', 'ADVX', 'NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'APPRART', 'NN'), 'right siblings': [], 'left siblings': [(NX (PPER wir)), (ADVX (ADV auch)), (ADVX (ADV noch)), (NX (NX (ADJA gewisse)) (ADJX (ADJA geschaftliche)) (NN dinge))], 'auto preterminal span': (9, 12), 'span': (9, 12), 'parent': 'MF', 'label': 'PX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			(SIMPX dann konnten wir auch noch gewisse geschaftliche dinge gleich im zug besprechen)[01;31m)[00m
		(SU das ware sehr angenehm)))
Step:Clause Attachment
{'subtrees': ['DM', 'SIMPX'], 'family': ['SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ADJA', 'ADJA', 'NN', 'ADV', 'APPRART', 'NN', 'VVINF', 'PDS', 'VAFIN', 'ADV', 'ADJD'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 17), 'span': (0, 13), 'left siblings': [], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP ja dann konnten wir auch noch gewisse geschaftliche dinge gleich im zug besprechen das ware sehr angenehm)

Sentence 535:
5 Initial errors
0 on fringe, 3 iterations
3 Error:Modifier Attachment
1 Error:Clause Attachment
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			[01;36m(SU[00m
				(DM ach)
				(SIMPX
					(VF das)
					(LK ist)
					(MF
						(ADVX doch)
						[01;36m(ADJX[00m
							[01;33m(ADVX[00m (ADVX etwas)
							[01;31m(ADJX[00m
								(ADVX sehr) [01;33mADVX)[00m
								(ADJD fruh)[01;31m)[00m[01;36m)[00m))[01;36m)[00m
			(DM oder))
		(SU
			(SIMPX
				(VF wann)
				(LK geht)
				(MF
					(ADVX denn)
					[01;36m(NX[00m
						(NX der zweite zug)
						(PX in der fruh)[01;36m)[00m)))))
Step:Modifier Attachment
{'new_parent': 'ADJX', 'new_family': ['ADVX', 'ADVX', 'ADJD'], 'mover info': [('ADVX', (4, 5))], 'old_family': ['ADVX', 'ADVX', 'ADJX'], 'start left siblings': ['ADVX'], 'auto preterminals': ('ADV', 'ADV', 'ADV', 'ADJD'), 'start right siblings': ['ADJX'], 'end left siblings': [], 'auto preterminal span': (3, 7), 'adding node already present': False, 'movers': ['ADVX'], 'old_parent': 'MF', 'POS confusion': ('ADV', 'ADV'), 'added and moved': True, 'end right siblings': ['ADVX', 'ADJD'], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(SU
			[01;36m(SU[00m
				(DM ach)
				(SIMPX das ist doch etwas sehr fruh)[01;36m)[00m
			(DM oder))
		(SU
			(SIMPX
				(VF wann)
				(LK geht)
				(MF
					(ADVX denn)
					[01;36m(NX[00m
						(NX der zweite zug)
						(PX in der fruh)[01;36m)[00m)))))
Step:Clause Attachment
{'subtrees': ['DM', 'SIMPX'], 'family': ['SU', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PDS', 'VAFIN', 'ADV', 'ADV', 'ADV', 'ADJD'), 'right siblings': [(DM (ITJ oder))], 'left siblings': [], 'auto preterminal span': (0, 7), 'span': (0, 7), 'parent': 'SU', 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU ach das ist doch etwas sehr fruh oder)
		(SU
			(SIMPX
				(VF wann)
				(LK geht)
				(MF
					(ADVX denn)
					[01;36m(NX[00m
						(NX der zweite zug)
						(PX in der fruh)[01;36m)[00m)))))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'ADJA', 'NN', 'APPR', 'ART', 'NN'), 'right siblings': [], 'left siblings': [(ADVX (ADV denn))], 'auto preterminal span': (11, 17), 'span': (11, 17), 'parent': 'MF', 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP ach das ist doch etwas sehr fruh oder wann geht denn der zweite zug in der fruh)

Sentence 536:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SU[00m
	(TOP
		(TURN
			(SU ich denke es wird doch reichen wenn wir so etwa um acht uhr losfahren wurden)
			(SU was meinen sie denn)))[01;36m)[00m
Step:Unary
{'subtrees': ['TURN'], 'family': ['SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'PPER', 'VAFIN', 'ADV', 'VVINF', 'KOUS', 'PPER', 'ADV', 'ADV', 'APPR', 'CARD', 'NN', 'VVINF', 'VAFIN', 'PWS', 'VVFIN', 'PPER', 'ADV'), 'right siblings': [], 'left siblings': [], 'auto preterminal span': (0, 19), 'span': (0, 19), 'parent': 'TOP', 'label': 'SU', 'classified_type': 'Unary', 'type': 'add'}
(TOP ich denke es wird doch reichen wenn wir so etwa um acht uhr losfahren wurden was meinen sie denn)

Sentence 537:
16 Initial errors
0 on fringe, 12 iterations
2 Error:Different label
2 Error:Different label
2 Error:Modifier Attachment
2 Error:PP Attachment
1 Error:Modifier Attachment
1 Error:Unary
1 Error:UNSET remove
1 Error:Unary
1 Error:Single Word Phrase
1 Error:Unary
1 Error:Unary
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU sehr schon)
		(SU dann sollten wir auch gleich ein hotel in der nahe vom hauptbahnhof nehmen)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF was)
				(LK wurden)
				(MF sie denn vom schloshotel hannover)
				(VC halten)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF es)
				(LK ist)
				(MF
					(ADJX
						(NX
							(NX
								[01;36m(ADVX[00m
									(ADVX etwa)
									(ADVX nur)[01;36m)[00m
								(ADJX funf)
								(NN minuten))
							(PX vom hauptbahnhof))
						(ADJD entfernt))))[01;31m)[00m
		[01;36m(NX[00m
			(SU
				[01;31m(SIMPX[00m
					[01;31m(KOORD[00m
						(KON und)[01;31m)[00m
					[01;31m(VF[00m
						[01;31m(NX[00m
							(NX der preis)
							[01;33m(PX[00m (PX fur das einzelzimmer)[01;31m)[00m[01;31m)[00m
					[01;36m(NX[00m
						[01;36m(ADVX[00m [01;31m(LK[00m
							[01;31m(VXFIN[00m
								(VVFIN betragt)[01;31m)[00m[01;31m)[00m[01;36m)[00m
						[01;31m(MF[00m
							[01;31m(NX[00m
								(ADJX hundert funfunddreisig)
								(NN mark)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m)[01;36m)[00m)) [01;33mPX)[00m
Step:Different label
{'family': ['NX'], 'auto preterminal span': (32, 42), 'span': (32, 42), 'subtrees': ['KOORD', 'VF', 'LK', 'MF'], 'parent': 'SU', 'over_word': False, 'auto preterminals': ('KON', 'ART', 'NN', 'APPR', 'ART', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('SIMPX', 'NX')}
(TOP
	(TURN
		(SU sehr schon)
		(SU dann sollten wir auch gleich ein hotel in der nahe vom hauptbahnhof nehmen)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF was)
				(LK wurden)
				(MF sie denn vom schloshotel hannover)
				(VC halten)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF es)
				(LK ist)
				(MF
					(ADJX
						(NX
							(NX
								[01;36m(ADVX[00m
									(ADVX etwa)
									(ADVX nur)[01;36m)[00m
								(ADJX funf)
								(NN minuten))
							(PX vom hauptbahnhof))
						(ADJD entfernt))))[01;31m)[00m
		(SU
			(NX
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				[01;31m(VF[00m
					[01;31m(NX[00m
						(NX der preis)
						[01;33m(PX[00m (PX fur das einzelzimmer)[01;31m)[00m[01;31m)[00m
				[01;36m(NX[00m
					[01;36m(ADVX[00m [01;31m(LK[00m
						[01;31m(VXFIN[00m
							(VVFIN betragt)[01;31m)[00m[01;31m)[00m[01;36m)[00m
					[01;31m(MF[00m
						[01;31m(NX[00m
							(ADJX hundert funfunddreisig)
							(NN mark)[01;31m)[00m[01;31m)[00m[01;36m)[00m)))) [01;33mPX)[00m
Step:Different label
{'family': ['KOORD', 'VF', 'ADVX', 'MF'], 'auto preterminal span': (38, 39), 'span': (38, 39), 'subtrees': ['VXFIN'], 'parent': 'NX', 'over_word': False, 'auto preterminals': ('VVFIN',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('LK', 'ADVX')}
(TOP
	(TURN
		(SU sehr schon)
		(SU dann sollten wir auch gleich ein hotel in der nahe vom hauptbahnhof nehmen)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF was)
				(LK wurden)
				(MF sie denn vom schloshotel hannover)
				(VC halten)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF es)
				(LK ist)
				(MF
					(ADJX
						(NX
							(NX
								[01;36m(ADVX[00m
									(ADVX etwa)
									(ADVX nur)[01;36m)[00m
								(ADJX funf)
								(NN minuten))
							(PX vom hauptbahnhof))
						(ADJD entfernt))))[01;31m)[00m
		(SU
			(NX
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				[01;31m(VF[00m
					[01;31m(NX[00m
						(NX der preis)
						[01;33m(PX[00m (PX fur das einzelzimmer)[01;31m)[00m[01;31m)[00m
				[01;36m(NX[00m
					(ADVX
						[01;31m(VXFIN[00m
							(VVFIN betragt)[01;31m)[00m)
					[01;31m(MF[00m
						[01;31m(NX[00m
							(ADJX hundert funfunddreisig)
							(NN mark)[01;31m)[00m[01;31m)[00m[01;36m)[00m)))) [01;33mPX)[00m
Step:Modifier Attachment
{'new_parent': 'NX', 'new_family': ['ADVX', 'ADJX', 'NN'], 'mover info': [('ADVX', (38, 39))], 'old_family': ['KOORD', 'VF', 'ADVX', 'MF'], 'start left siblings': ['KOORD', 'VF'], 'auto preterminals': ('KON', 'ART', 'NN', 'APPR', 'ART', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN'), 'start right siblings': ['MF'], 'end left siblings': [], 'auto preterminal span': (32, 42), 'movers': ['ADVX'], 'old_parent': 'NX', 'POS confusion': ('VVFIN', 'VVFIN'), 'end right siblings': ['ADJX', 'NN'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU sehr schon)
		(SU dann sollten wir auch gleich ein hotel in der nahe vom hauptbahnhof nehmen)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF was)
				(LK wurden)
				(MF sie denn vom schloshotel hannover)
				(VC halten)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF es)
				(LK ist)
				(MF
					(ADJX
						(NX
							(NX
								[01;36m(ADVX[00m
									(ADVX etwa)
									(ADVX nur)[01;36m)[00m
								(ADJX funf)
								(NN minuten))
							(PX vom hauptbahnhof))
						(ADJD entfernt))))[01;31m)[00m
		(SU
			(NX
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				[01;31m(VF[00m
					[01;31m(NX[00m
						(NX der preis)
						[01;33m(PX[00m (PX fur das einzelzimmer)[01;31m)[00m[01;31m)[00m
				[01;31m(MF[00m
					(NX
						(ADVX
							[01;31m(VXFIN[00m
								(VVFIN betragt)[01;31m)[00m)
						(ADJX hundert funfunddreisig)
						(NN mark))[01;31m)[00m)))) [01;33mPX)[00m
Step:PP Attachment
{'new_parent': 'MF', 'new_family': ['PX', 'NX'], 'mover info': [('PX', (35, 38))], 'old_family': ['NX', 'PX'], 'start left siblings': ['NX'], 'auto preterminals': ('KON', 'ART', 'NN', 'APPR', 'ART', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (32, 42), 'adding node already present': False, 'movers': ['PX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': ['NX'], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'PX'}
(TOP
	(TURN
		(SU sehr schon)
		(SU dann sollten wir auch gleich ein hotel in der nahe vom hauptbahnhof nehmen)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF was)
				(LK wurden)
				(MF sie denn vom schloshotel hannover)
				(VC halten)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF es)
				(LK ist)
				(MF
					(ADJX
						(NX
							(NX
								[01;36m(ADVX[00m
									(ADVX etwa)
									(ADVX nur)[01;36m)[00m
								(ADJX funf)
								(NN minuten))
							(PX vom hauptbahnhof))
						(ADJD entfernt))))[01;31m)[00m
		(SU
			(NX
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				[01;31m(VF[00m
					(NX
						(ART der)
						(NN preis))[01;31m)[00m
				(PX
					[01;31m(MF[00m
						(PX fur das einzelzimmer)
						(NX
							(ADVX
								[01;31m(VXFIN[00m
									(VVFIN betragt)[01;31m)[00m)
							(ADJX hundert funfunddreisig)
							(NN mark))[01;31m)[00m)))))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'ADVX'], 'family': ['ADVX', 'ADJX', 'NN'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV'), 'right siblings': [(ADJX (CARD funf)), (NN minuten)], 'left siblings': [], 'auto preterminal span': (25, 27), 'span': (25, 27), 'parent': 'NX', 'label': 'ADVX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU sehr schon)
		(SU dann sollten wir auch gleich ein hotel in der nahe vom hauptbahnhof nehmen)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF was)
				(LK wurden)
				(MF sie denn vom schloshotel hannover)
				(VC halten)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF es)
				(LK ist)
				(MF etwa nur funf minuten vom hauptbahnhof entfernt))[01;31m)[00m
		(SU
			(NX
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				[01;31m(VF[00m
					(NX
						(ART der)
						(NN preis))[01;31m)[00m
				(PX
					[01;31m(MF[00m
						(PX fur das einzelzimmer)
						(NX
							(ADVX
								[01;31m(VXFIN[00m
									(VVFIN betragt)[01;31m)[00m)
							(ADJX hundert funfunddreisig)
							(NN mark))[01;31m)[00m)))))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SU', 'SU', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADJD', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'NN', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'VVINF', 'PWS', 'VAFIN', 'PPER', 'ADV', 'APPRART', 'NE', 'NE', 'VVINF', 'PPER', 'VAFIN', 'ADV', 'ADV', 'CARD', 'NN', 'APPRART', 'NN', 'ADJD', 'KON', 'ART', 'NN', 'APPR', 'ART', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN'), 'right siblings': ['SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 42), 'span': (15, 23), 'left siblings': ['SU', 'SU'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU sehr schon)
		(SU dann sollten wir auch gleich ein hotel in der nahe vom hauptbahnhof nehmen)
		[01;31m(SIMPX[00m
			(VF was)
			(LK wurden)
			(MF sie denn vom schloshotel hannover)
			(VC halten)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF es)
				(LK ist)
				(MF etwa nur funf minuten vom hauptbahnhof entfernt))[01;31m)[00m
		(SU
			(NX
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				[01;31m(VF[00m
					(NX
						(ART der)
						(NN preis))[01;31m)[00m
				(PX
					[01;31m(MF[00m
						(PX fur das einzelzimmer)
						(NX
							(ADVX
								[01;31m(VXFIN[00m
									(VVFIN betragt)[01;31m)[00m)
							(ADJX hundert funfunddreisig)
							(NN mark))[01;31m)[00m)))))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['SU', 'SU', 'SIMPX', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADJD', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'NN', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'VVINF', 'PWS', 'VAFIN', 'PPER', 'ADV', 'APPRART', 'NE', 'NE', 'VVINF', 'PPER', 'VAFIN', 'ADV', 'ADV', 'CARD', 'NN', 'APPRART', 'NN', 'ADJD', 'KON', 'ART', 'NN', 'APPR', 'ART', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN'), 'right siblings': ['SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 42), 'span': (15, 23), 'left siblings': ['SU', 'SU'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU sehr schon)
		(SU dann sollten wir auch gleich ein hotel in der nahe vom hauptbahnhof nehmen)
		(VF was)
		(LK wurden)
		(MF sie denn vom schloshotel hannover)
		(VC halten)
		[01;31m(SU[00m
			(SIMPX
				(VF es)
				(LK ist)
				(MF etwa nur funf minuten vom hauptbahnhof entfernt))[01;31m)[00m
		(SU
			(NX
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				[01;31m(VF[00m
					(NX
						(ART der)
						(NN preis))[01;31m)[00m
				(PX
					[01;31m(MF[00m
						(PX fur das einzelzimmer)
						(NX
							(ADVX
								[01;31m(VXFIN[00m
									(VVFIN betragt)[01;31m)[00m)
							(ADJX hundert funfunddreisig)
							(NN mark))[01;31m)[00m)))))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SU', 'SU', 'VF', 'LK', 'MF', 'VC', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADJD', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'NN', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'VVINF', 'PWS', 'VAFIN', 'PPER', 'ADV', 'APPRART', 'NE', 'NE', 'VVINF', 'PPER', 'VAFIN', 'ADV', 'ADV', 'CARD', 'NN', 'APPRART', 'NN', 'ADJD', 'KON', 'ART', 'NN', 'APPR', 'ART', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 42), 'span': (23, 32), 'left siblings': ['SU', 'SU', 'VF', 'LK', 'MF', 'VC'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU sehr schon)
		(SU dann sollten wir auch gleich ein hotel in der nahe vom hauptbahnhof nehmen)
		(VF was)
		(LK wurden)
		(MF sie denn vom schloshotel hannover)
		(VC halten)
		(SIMPX es ist etwa nur funf minuten vom hauptbahnhof entfernt)
		(SU
			(NX
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				[01;31m(VF[00m
					(NX
						(ART der)
						(NN preis))[01;31m)[00m
				(PX
					[01;31m(MF[00m
						(PX fur das einzelzimmer)
						(NX
							(ADVX
								[01;31m(VXFIN[00m
									(VVFIN betragt)[01;31m)[00m)
							(ADJX hundert funfunddreisig)
							(NN mark))[01;31m)[00m)))))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['KOORD', 'VF', 'PX'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON', 'ART', 'NN', 'APPR', 'ART', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN'), 'right siblings': ['VF', 'PX'], 'parent': 'NX', 'auto preterminal span': (32, 42), 'span': (32, 33), 'left siblings': [], 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(SU sehr schon)
		(SU dann sollten wir auch gleich ein hotel in der nahe vom hauptbahnhof nehmen)
		(VF was)
		(LK wurden)
		(MF sie denn vom schloshotel hannover)
		(VC halten)
		(SIMPX es ist etwa nur funf minuten vom hauptbahnhof entfernt)
		(SU
			(NX
				(KON und)
				[01;31m(VF[00m
					(NX
						(ART der)
						(NN preis))[01;31m)[00m
				(PX
					[01;31m(MF[00m
						(PX fur das einzelzimmer)
						(NX
							(ADVX
								[01;31m(VXFIN[00m
									(VVFIN betragt)[01;31m)[00m)
							(ADJX hundert funfunddreisig)
							(NN mark))[01;31m)[00m)))))
Step:Unary
{'subtrees': ['NX'], 'family': ['KON', 'VF', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'ART', 'NN', 'APPR', 'ART', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN'), 'right siblings': ['PX'], 'parent': 'NX', 'auto preterminal span': (32, 42), 'span': (33, 35), 'left siblings': ['KON'], 'label': 'VF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU sehr schon)
		(SU dann sollten wir auch gleich ein hotel in der nahe vom hauptbahnhof nehmen)
		(VF was)
		(LK wurden)
		(MF sie denn vom schloshotel hannover)
		(VC halten)
		(SIMPX es ist etwa nur funf minuten vom hauptbahnhof entfernt)
		(SU
			(NX
				(KON und)
				(NX der preis)
				(PX
					[01;31m(MF[00m
						(PX fur das einzelzimmer)
						(NX
							(ADVX
								[01;31m(VXFIN[00m
									(VVFIN betragt)[01;31m)[00m)
							(ADJX hundert funfunddreisig)
							(NN mark))[01;31m)[00m)))))
Step:Unary
{'subtrees': ['PX', 'NX'], 'family': ['MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN'), 'right siblings': [], 'parent': 'PX', 'auto preterminal span': (35, 42), 'span': (35, 42), 'left siblings': [], 'label': 'MF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU sehr schon)
		(SU dann sollten wir auch gleich ein hotel in der nahe vom hauptbahnhof nehmen)
		(VF was)
		(LK wurden)
		(MF sie denn vom schloshotel hannover)
		(VC halten)
		(SIMPX es ist etwa nur funf minuten vom hauptbahnhof entfernt)
		(SU
			(NX
				(KON und)
				(NX der preis)
				(PX
					(PX fur das einzelzimmer)
					(NX
						(ADVX
							[01;31m(VXFIN[00m
								(VVFIN betragt)[01;31m)[00m)
						(ADJX hundert funfunddreisig)
						(NN mark)))))))
Step:Single Word Phrase
{'subtrees': ['VVFIN'], 'family': ['VXFIN'], 'over_word': True, 'over words': True, 'auto preterminals': ('VVFIN',), 'right siblings': [], 'parent': 'ADVX', 'auto preterminal span': (38, 39), 'span': (38, 39), 'left siblings': [], 'label': 'VXFIN', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP sehr schon dann sollten wir auch gleich ein hotel in der nahe vom hauptbahnhof nehmen was wurden sie denn vom schloshotel hannover halten es ist etwa nur funf minuten vom hauptbahnhof entfernt und der preis fur das einzelzimmer betragt hundert funfunddreisig mark)

Sentence 538:
6 Initial errors
0 on fringe, 5 iterations
2 Error:Clause Attachment
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:UNSET add
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU sehr schon)
		[01;31m(SU[00m
			[01;36m(SU[00m
				(SIMPX
					(KOORD und)
					(VF wie)
					(LK sieht)
					(MF es dann)
					(VC aus))[01;36m)[00m
			[01;36m(SU[00m
				(SIMPX
					(LK sollen)
					(MF wir uns vielleicht irgendwelche theaterkarten)
					(VC besorgen)
					(NF
						(SIMPX
							[01;31m(SIMPX[00m
								(C wenn)
								[01;33m(MF[00m (MF wir schon dort)
								(VC sind)[01;31m)[00m
							[01;31m(SIMPX[00m
								(C das)
								(MF wir bischen kultur) [01;33mMF)[00m
								(VC mitnehmen)[01;31m)[00m)))[01;36m)[00m[01;31m)[00m))
Step:Clause Attachment
{'new_parent': 'TURN', 'new_family': ['SU', 'SIMPX', 'SU'], 'mover info': [('SIMPX', (2, 8))], 'old_family': ['SIMPX', 'SIMPX'], 'start left siblings': [], 'auto preterminals': ('ADV', 'ADJD', 'KON', 'PWAV', 'VVFIN', 'PPER', 'ADV', 'PTKVZ', 'VMFIN', 'PPER', 'PRF', 'ADV', 'PIAT', 'NN', 'VVINF', 'KOUS', 'PPER', 'ADV', 'ADV', 'VAFIN', 'KOUS', 'PPER', 'PIDAT', 'NN', 'VVFIN'), 'start right siblings': ['SIMPX'], 'end left siblings': ['SU'], 'auto preterminal span': (0, 25), 'movers': ['SIMPX'], 'old_parent': 'SU', 'end right siblings': ['SU'], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU sehr schon)
		[01;36m(SU[00m
			(SIMPX
				(KOORD und)
				(VF wie)
				(LK sieht)
				(MF es dann)
				(VC aus))[01;36m)[00m
		(SU
			(SIMPX
				(LK sollen)
				(MF wir uns vielleicht irgendwelche theaterkarten)
				(VC besorgen)
				(NF
					(SIMPX
						[01;31m(SIMPX[00m
							(C wenn)
							[01;33m(MF[00m (MF wir schon dort)
							(VC sind)[01;31m)[00m
						[01;31m(SIMPX[00m
							(C das)
							(MF wir bischen kultur) [01;33mMF)[00m
							(VC mitnehmen)[01;31m)[00m))))))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'PWAV', 'VVFIN', 'PPER', 'ADV', 'PTKVZ'), 'right siblings': [(SU (SIMPX (LK (VXFIN (VMFIN sollen))) (MF (NX (PPER wir)) (NX (PRF uns)) (ADVX (ADV vielleicht)) (NX (PIAT irgendwelche) (NN theaterkarten))) (VC (VXINF (VVINF besorgen))) (NF (SIMPX (SIMPX (C (KOUS wenn)) (MF (NX (PPER wir)) (ADVX (ADV schon)) (ADVX (ADV dort))) (VC (VXFIN (VAFIN sind)))) (SIMPX (C (KOUS das)) (MF (NX (PPER wir)) (NX (PIDAT bischen) (NN kultur))) (VC (VXFIN (VVFIN mitnehmen))))))))], 'left siblings': [(SU (DM (ADJX (ADVX (ADV sehr)) (ADJD schon))))], 'auto preterminal span': (2, 8), 'span': (2, 8), 'parent': 'TURN', 'label': 'SU', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU sehr schon)
		(SU und wie sieht es dann aus)
		(SU
			(SIMPX
				(LK sollen)
				(MF wir uns vielleicht irgendwelche theaterkarten)
				(VC besorgen)
				(NF
					(SIMPX
						[01;31m(SIMPX[00m
							(C wenn)
							[01;33m(MF[00m (MF wir schon dort)
							(VC sind)[01;31m)[00m
						[01;31m(SIMPX[00m
							(C das)
							(MF wir bischen kultur) [01;33mMF)[00m
							(VC mitnehmen)[01;31m)[00m))))))
Step:UNSET remove
{'subtrees': ['C', 'MF', 'VC'], 'family': ['SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'ADV', 'VAFIN', 'KOUS', 'PPER', 'PIDAT', 'NN', 'VVFIN'), 'right siblings': ['SIMPX'], 'parent': 'SIMPX', 'auto preterminal span': (15, 25), 'span': (15, 20), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU sehr schon)
		(SU und wie sieht es dann aus)
		(SU
			(SIMPX
				(LK sollen)
				(MF wir uns vielleicht irgendwelche theaterkarten)
				(VC besorgen)
				(NF
					(SIMPX
						(C wenn)
						[01;33m(MF[00m (MF wir schon dort)
						(VC sind)
						[01;31m(SIMPX[00m
							(C das)
							(MF wir bischen kultur) [01;33mMF)[00m
							(VC mitnehmen)[01;31m)[00m))))))
Step:UNSET remove
{'subtrees': ['C', 'MF', 'VC'], 'family': ['C', 'MF', 'VC', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'ADV', 'VAFIN', 'KOUS', 'PPER', 'PIDAT', 'NN', 'VVFIN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (15, 25), 'span': (20, 25), 'left siblings': ['C', 'MF', 'VC'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU sehr schon)
		(SU und wie sieht es dann aus)
		(SU
			(SIMPX
				(LK sollen)
				(MF wir uns vielleicht irgendwelche theaterkarten)
				(VC besorgen)
				(NF
					(SIMPX
						(C wenn)
						[01;36m(MF[00m
							(MF wir schon dort)
							(VC sind)
							(C das)
							(MF wir bischen kultur)[01;36m)[00m
						(VC mitnehmen)))))))
Step:UNSET add
{'subtrees': ['MF', 'VC', 'C', 'MF'], 'family': ['C', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV', 'ADV', 'VAFIN', 'KOUS', 'PPER', 'PIDAT', 'NN'), 'right siblings': [(VC (VXFIN (VVFIN mitnehmen)))], 'left siblings': [(C (KOUS wenn))], 'auto preterminal span': (16, 24), 'span': (16, 24), 'parent': 'SIMPX', 'label': 'MF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP sehr schon und wie sieht es dann aus sollen wir uns vielleicht irgendwelche theaterkarten besorgen wenn wir schon dort sind das wir bischen kultur mitnehmen)

Sentence 539:
0 Initial errors
0 on fringe, 0 iterations

Sentence 540:
16 Initial errors
0 on fringe, 8 iterations
3 Error:UNSET move
2 Error:Different label
2 Error:Single Word Phrase
2 Error:UNSET move
3 Error:Co-ordination
2 Error:Modifier Attachment
1 Error:Single Word Phrase
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU ja finde ich auch)
		(SU [01;33m(SIMPX[00m
			(SIMPX
				(KOORD und)
				[01;31m(LV[00m
					[01;31m(SIMPX[00m
						[01;31m(SIMPX[00m
							(C falls)
							[01;36m(MF[00m
								[01;31m(MF[00m
									(NX sich)
									[01;33m(PX[00m (NX irgendwas)[01;31m)[00m
								[01;36m(PX[00m [01;31m(VC[00m
									[01;31m(VXFIN[00m
										(VVFIN andert)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;31m)[00m [01;33mPX) SIMPX)[00m
						[01;36m(DM[00m
							(KON oder)[01;36m)[00m
						[01;36m(LV[00m
							(SIMPX
								(C wenn)
								(MF
									(NX wir)
									[01;31m(NX[00m
										[01;36m(ADVX[00m [01;31m(ADJX[00m
											(ADJA nahere)[01;31m)[00m[01;36m)[00m
										[01;36m(NX[00m
											(NN einzelheiten)[01;36m)[00m[01;31m)[00m)
								(VC wissen))[01;36m)[00m[01;31m)[00m[01;31m)[00m
				(VF dann)
				(LK kontaktieren)
				(MF wir uns einfach noch mal)))))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['NX', 'NX', 'VC'], 'mover info': [('VC', (8, 9))], 'old_family': ['C', 'MF', 'VC'], 'start left siblings': ['C', 'MF'], 'auto preterminals': ('KOUS', 'PRF', 'PIS', 'VVFIN'), 'start right siblings': [], 'end left siblings': ['NX', 'NX'], 'auto preterminal span': (5, 9), 'adding node already present': False, 'movers': ['VC'], 'old_parent': 'SIMPX', 'POS confusion': ('VVFIN', 'VVFIN'), 'added and moved': True, 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(SU ja finde ich auch)
		(SU [01;33m(SIMPX[00m
			(SIMPX
				(KOORD und)
				[01;31m(LV[00m
					[01;31m(SIMPX[00m
						[01;31m(SIMPX[00m
							(C falls)
							(MF
								(NX sich)
								(PX
									(NX irgendwas)
									[01;36m(PX[00m [01;31m(VC[00m
										[01;31m(VXFIN[00m
											(VVFIN andert)[01;31m)[00m[01;31m)[00m[01;36m)[00m))[01;31m)[00m [01;33mSIMPX)[00m
						[01;36m(DM[00m
							(KON oder)[01;36m)[00m
						[01;36m(LV[00m
							(SIMPX
								(C wenn)
								(MF
									(NX wir)
									[01;31m(NX[00m
										[01;36m(ADVX[00m [01;31m(ADJX[00m
											(ADJA nahere)[01;31m)[00m[01;36m)[00m
										[01;36m(NX[00m
											(NN einzelheiten)[01;36m)[00m[01;31m)[00m)
								(VC wissen))[01;36m)[00m[01;31m)[00m[01;31m)[00m
				(VF dann)
				(LK kontaktieren)
				(MF wir uns einfach noch mal)))))
Step:Different label
{'family': ['NX', 'PX'], 'auto preterminal span': (8, 9), 'span': (8, 9), 'subtrees': ['VXFIN'], 'parent': 'PX', 'over_word': False, 'auto preterminals': ('VVFIN',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('VC', 'PX')}
(TOP
	(TURN
		(SU ja finde ich auch)
		(SU [01;33m(SIMPX[00m
			(SIMPX
				(KOORD und)
				[01;31m(LV[00m
					[01;31m(SIMPX[00m
						[01;31m(SIMPX[00m
							(C falls)
							(MF
								(NX sich)
								(PX
									(NX irgendwas)
									(PX
										[01;31m(VXFIN[00m
											(VVFIN andert)[01;31m)[00m)))[01;31m)[00m [01;33mSIMPX)[00m
						[01;36m(DM[00m
							(KON oder)[01;36m)[00m
						[01;36m(LV[00m
							(SIMPX
								(C wenn)
								(MF
									(NX wir)
									[01;31m(NX[00m
										[01;36m(ADVX[00m [01;31m(ADJX[00m
											(ADJA nahere)[01;31m)[00m[01;36m)[00m
										[01;36m(NX[00m
											(NN einzelheiten)[01;36m)[00m[01;31m)[00m)
								(VC wissen))[01;36m)[00m[01;31m)[00m[01;31m)[00m
				(VF dann)
				(LK kontaktieren)
				(MF wir uns einfach noch mal)))))
Step:Single Word Phrase
{'family': ['ADVX', 'NN'], 'auto preterminal span': (12, 13), 'span': (12, 13), 'subtrees': ['ADJA'], 'parent': 'NX', 'over_word': True, 'auto preterminals': ('ADJA',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'ADVX')}
(TOP
	(TURN
		(SU ja finde ich auch)
		(SU [01;33m(SIMPX[00m
			(SIMPX
				(KOORD und)
				[01;31m(LV[00m
					[01;31m(SIMPX[00m
						[01;31m(SIMPX[00m
							(C falls)
							(MF
								(NX sich)
								(PX
									(NX irgendwas)
									(PX
										[01;31m(VXFIN[00m
											(VVFIN andert)[01;31m)[00m)))[01;31m)[00m [01;33mSIMPX)[00m
						[01;36m(DM[00m
							(KON oder)[01;36m)[00m
						[01;36m(LV[00m
							(SIMPX
								(C wenn)
								(MF
									(NX wir)
									[01;31m(NX[00m
										(ADVX nahere)
										[01;36m(NX[00m
											(NN einzelheiten)[01;36m)[00m[01;31m)[00m)
								(VC wissen))[01;36m)[00m[01;31m)[00m[01;31m)[00m
				(VF dann)
				(LK kontaktieren)
				(MF wir uns einfach noch mal)))))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['KOORD', 'C', 'MF'], 'mover info': [('KOORD', (4, 5))], 'old_family': ['KOORD', 'LV', 'VF', 'LK', 'MF'], 'start left siblings': [], 'auto preterminals': ('KON', 'KOUS', 'PRF', 'PIS', 'VVFIN', 'KON', 'KOUS', 'PPER', 'ADJA', 'NN', 'VVFIN', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV'), 'start right siblings': ['LV', 'VF', 'LK', 'MF'], 'end left siblings': [], 'auto preterminal span': (4, 22), 'movers': ['KOORD'], 'old_parent': 'SIMPX', 'POS confusion': ('KON', 'KON'), 'end right siblings': ['C', 'MF'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU ja finde ich auch)
		(SU
			(SIMPX
				[01;31m(LV[00m
					[01;31m(SIMPX[00m
						(SIMPX
							(KOORD und)
							(C falls)
							(MF
								(NX sich)
								(PX
									(NX irgendwas)
									(PX
										[01;31m(VXFIN[00m
											(VVFIN andert)[01;31m)[00m))))
						[01;36m(DM[00m
							(KON oder)[01;36m)[00m
						[01;36m(LV[00m
							(SIMPX
								(C wenn)
								(MF
									(NX wir)
									[01;31m(NX[00m
										(ADVX nahere)
										[01;36m(NX[00m
											(NN einzelheiten)[01;36m)[00m[01;31m)[00m)
								(VC wissen))[01;36m)[00m[01;31m)[00m[01;31m)[00m
				(VF dann)
				(LK kontaktieren)
				(MF wir uns einfach noch mal)))))
Step:Co-ordination
{'new_parent': 'SIMPX', 'new_family': ['SIMPX', 'KON', 'LV', 'VF', 'LK', 'MF'], 'mover info': [('SIMPX', (4, 9)), ('KON', (9, 10))], 'old_family': ['SIMPX', 'KON', 'SIMPX'], 'start left siblings': [], 'auto preterminals': ('KON', 'KOUS', 'PRF', 'PIS', 'VVFIN', 'KON', 'KOUS', 'PPER', 'ADJA', 'NN', 'VVFIN', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV'), 'start right siblings': ['SIMPX'], 'end left siblings': [], 'auto preterminal span': (4, 22), 'movers': ['SIMPX', 'KON'], 'old_parent': 'SIMPX', 'end right siblings': ['LV', 'VF', 'LK', 'MF'], 'classified_type': 'Co-ordination', 'type': 'move'}
(TOP
	(TURN
		(SU ja finde ich auch)
		(SU
			(SIMPX
				(SIMPX
					(KOORD und)
					(C falls)
					(MF
						(NX sich)
						(PX
							(NX irgendwas)
							(PX
								[01;31m(VXFIN[00m
									(VVFIN andert)[01;31m)[00m))))
				[01;36m(DM[00m
					(KON oder)[01;36m)[00m
				(LV
					(SIMPX
						(C wenn)
						(MF
							(NX wir)
							[01;31m(NX[00m
								(ADVX nahere)
								[01;36m(NX[00m
									(NN einzelheiten)[01;36m)[00m[01;31m)[00m)
						(VC wissen)))
				(VF dann)
				(LK kontaktieren)
				(MF wir uns einfach noch mal)))))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'ADVX', 'NX'], 'mover info': [('ADVX', (12, 13))], 'old_family': ['ADVX', 'NN'], 'start left siblings': [], 'auto preterminals': ('PPER', 'ADJA', 'NN'), 'start right siblings': ['NN'], 'end left siblings': ['NX'], 'auto preterminal span': (11, 14), 'movers': ['ADVX'], 'old_parent': 'NX', 'POS confusion': ('ADJA', 'ADJA'), 'end right siblings': ['NX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU ja finde ich auch)
		(SU
			(SIMPX
				(SIMPX
					(KOORD und)
					(C falls)
					(MF
						(NX sich)
						(PX
							(NX irgendwas)
							(PX
								[01;31m(VXFIN[00m
									(VVFIN andert)[01;31m)[00m))))
				[01;36m(DM[00m
					(KON oder)[01;36m)[00m
				(LV wenn wir nahere einzelheiten wissen)
				(VF dann)
				(LK kontaktieren)
				(MF wir uns einfach noch mal)))))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['SIMPX', 'DM', 'LV', 'VF', 'LK', 'MF'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON',), 'right siblings': [(LV (SIMPX (C (KOUS wenn)) (MF (NX (PPER wir)) (ADVX (ADJA nahere)) (NX (NN einzelheiten))) (VC (VXFIN (VVFIN wissen))))), (VF (ADVX (ADV dann))), (LK (VXFIN (VVFIN kontaktieren))), (MF (NX (PPER wir)) (NX (PRF uns)) (ADVX (ADV einfach)) (ADVX (ADV noch)) (ADVX (ADV mal)))], 'left siblings': [(SIMPX (KOORD (KON und)) (C (KOUS falls)) (MF (NX (PRF sich)) (PX (NX (PIS irgendwas)) (PX (VXFIN (VVFIN andert))))))], 'auto preterminal span': (9, 10), 'span': (9, 10), 'parent': 'SIMPX', 'label': 'DM', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SU ja finde ich auch)
		(SU
			(SIMPX
				(SIMPX
					(KOORD und)
					(C falls)
					(MF
						(NX sich)
						(PX
							(NX irgendwas)
							(PX
								[01;31m(VXFIN[00m
									(VVFIN andert)[01;31m)[00m))))
				(DM oder)
				(LV wenn wir nahere einzelheiten wissen)
				(VF dann)
				(LK kontaktieren)
				(MF wir uns einfach noch mal)))))
Step:Single Word Phrase
{'subtrees': ['VVFIN'], 'family': ['VXFIN'], 'over_word': True, 'over words': True, 'auto preterminals': ('VVFIN',), 'right siblings': [], 'parent': 'PX', 'auto preterminal span': (8, 9), 'span': (8, 9), 'left siblings': [], 'label': 'VXFIN', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP ja finde ich auch und falls sich irgendwas andert oder wenn wir nahere einzelheiten wissen dann kontaktieren wir uns einfach noch mal)

Sentence 541:
2 Initial errors
0 on fringe, 1 iterations
2 Error:NP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;36m(SU[00m
				(DM gut)
				(DM frau brenner)[01;36m)[00m
			(NX ich ihnen auch)[01;31m)[00m
		(SU wiederschauen)))
Step:NP Attachment
{'new_parent': 'TURN', 'new_family': ['SU', 'NX', 'SU'], 'mover info': [('NX', (3, 6))], 'old_family': ['DM', 'DM', 'NX'], 'start left siblings': ['DM', 'DM'], 'auto preterminals': ('ITJ', 'NN', 'NE', 'PPER', 'PPER', 'ADV', 'NN'), 'start right siblings': [], 'end left siblings': ['SU'], 'auto preterminal span': (0, 7), 'movers': ['NX'], 'old_parent': 'SU', 'end right siblings': ['SU'], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP gut frau brenner ich ihnen auch wiederschauen)

Sentence 542:
3 Initial errors
0 on fringe, 3 iterations
1 Error:UNSET remove
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM grus gott)
			(DM frau stumpfecker)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK ist)
				(MF ja ein zufall))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF da)
				(LK konnten)
				(MF wir ja gleich mal)
				(VC besprechen)
				(NF wann wir endlich unsere dienstreise zusammen auf die reihe kriegen))[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['DM', 'DM'], 'family': ['SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVIMP', 'NE', 'NN', 'NE', 'PDS', 'VAFIN', 'ADV', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'VVINF', 'PWAV', 'PPER', 'ADV', 'PPOSAT', 'NN', 'ADV', 'APPR', 'ART', 'NN', 'VVFIN'), 'right siblings': ['SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 26), 'span': (0, 4), 'left siblings': [], 'label': 'SU', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM grus gott)
		(DM frau stumpfecker)
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK ist)
				(MF ja ein zufall))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF da)
				(LK konnten)
				(MF wir ja gleich mal)
				(VC besprechen)
				(NF wann wir endlich unsere dienstreise zusammen auf die reihe kriegen))[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['DM', 'DM', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVIMP', 'NE', 'NN', 'NE', 'PDS', 'VAFIN', 'ADV', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'VVINF', 'PWAV', 'PPER', 'ADV', 'PPOSAT', 'NN', 'ADV', 'APPR', 'ART', 'NN', 'VVFIN'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 26), 'span': (4, 9), 'left siblings': ['DM', 'DM'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM grus gott)
		(DM frau stumpfecker)
		(SIMPX das ist ja ein zufall)
		[01;31m(SU[00m
			(SIMPX
				(VF da)
				(LK konnten)
				(MF wir ja gleich mal)
				(VC besprechen)
				(NF wann wir endlich unsere dienstreise zusammen auf die reihe kriegen))[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['DM', 'DM', 'SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVIMP', 'NE', 'NN', 'NE', 'PDS', 'VAFIN', 'ADV', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'VVINF', 'PWAV', 'PPER', 'ADV', 'PPOSAT', 'NN', 'ADV', 'APPR', 'ART', 'NN', 'VVFIN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 26), 'span': (9, 26), 'left siblings': ['DM', 'DM', 'SIMPX'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP grus gott frau stumpfecker das ist ja ein zufall da konnten wir ja gleich mal besprechen wann wir endlich unsere dienstreise zusammen auf die reihe kriegen)

Sentence 543:
3 Initial errors
0 on fringe, 3 iterations
1 Error:Unary
1 Error:Unary
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM
				(ITJ hervorragend))[01;31m)[00m
		(SU
			(DM
				[01;31m(VXFIN[00m
					(VVIMP sprich)[01;31m)[00m)
			[01;36m(NF[00m
				(NX
					(ART der)
					(ADJX erste und zweite)
					(NN september))[01;36m)[00m)))
Step:Unary
{'subtrees': ['NX'], 'family': ['DM', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'ADJA', 'KON', 'ADJA', 'NN'), 'right siblings': [], 'left siblings': [(DM (VXFIN (VVIMP sprich)))], 'auto preterminal span': (2, 7), 'span': (2, 7), 'parent': 'SU', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM
				(ITJ hervorragend))[01;31m)[00m
		(SU
			(DM
				[01;31m(VXFIN[00m
					(VVIMP sprich)[01;31m)[00m)
			(NF der erste und zweite september))))
Step:Unary
{'subtrees': ['DM'], 'family': ['SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'VVIMP', 'ART', 'ADJA', 'KON', 'ADJA', 'NN'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 7), 'span': (0, 1), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM hervorragend)
		(SU
			(DM
				[01;31m(VXFIN[00m
					(VVIMP sprich)[01;31m)[00m)
			(NF der erste und zweite september))))
Step:Single Word Phrase
{'subtrees': ['VVIMP'], 'family': ['VXFIN'], 'over_word': True, 'over words': True, 'auto preterminals': ('VVIMP',), 'right siblings': [], 'parent': 'DM', 'auto preterminal span': (1, 2), 'span': (1, 2), 'left siblings': [], 'label': 'VXFIN', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP hervorragend sprich der erste und zweite september)

Sentence 544:
3 Initial errors
0 on fringe, 2 iterations
2 Error:UNSET move
1 Error:Clause Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;36m(SU[00m
			[01;31m(SU[00m
				(DM ja)
				(SIMPX dann einigen wir uns doch gleich)[01;31m)[00m
			[01;31m(SU[00m
				(SIMPX
					(VF wann)
					(LK wollen)
					(MF wir)
					(VC losfahren))[01;31m)[00m[01;36m)[00m
		(SU wir konnten auch schon um sechs uhr losfahren)))
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SU', 'SIMPX'], 'mover info': [('SU', (0, 7))], 'old_family': ['SU', 'SU', 'SU'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'PWAV', 'VMFIN', 'PPER', 'VVINF', 'PPER', 'VMFIN', 'ADV', 'ADV', 'APPR', 'CARD', 'NN', 'VVINF'), 'start right siblings': ['SU', 'SU'], 'end left siblings': [], 'auto preterminal span': (0, 19), 'movers': ['SU'], 'old_parent': 'TURN', 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			[01;31m(SU[00m
				(DM ja)
				(SIMPX dann einigen wir uns doch gleich)[01;31m)[00m
			(SIMPX wann wollen wir losfahren))
		(SU wir konnten auch schon um sechs uhr losfahren)))
Step:Clause Attachment
{'subtrees': ['DM', 'SIMPX'], 'family': ['SU', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'PWAV', 'VMFIN', 'PPER', 'VVINF'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 11), 'span': (0, 7), 'left siblings': [], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP ja dann einigen wir uns doch gleich wann wollen wir losfahren wir konnten auch schon um sechs uhr losfahren)

Sentence 545:
0 Initial errors
0 on fringe, 0 iterations

Sentence 546:
0 Initial errors
0 on fringe, 0 iterations

Sentence 547:
3 Initial errors
0 on fringe, 2 iterations
2 Error:UNSET move
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SU[00m
	(TOP
		(TURN
			[01;31m(SU[00m
				(DM
					(ITJ gut))[01;31m)[00m
			[01;31m(SU[00m
				(SIMPX
					(LK gehen)
					(MF wir ins schloshotel))[01;31m)[00m))[01;36m)[00m
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SU', 'SIMPX'], 'mover info': [('SU', (0, 1))], 'old_family': ['SU', 'SU'], 'start left siblings': [], 'auto preterminals': ('ITJ', 'VVFIN', 'PPER', 'APPRART', 'NE'), 'start right siblings': ['SU'], 'end left siblings': [], 'auto preterminal span': (0, 5), 'movers': ['SU'], 'old_parent': 'TURN', 'POS confusion': ('ITJ', 'ITJ'), 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			[01;31m(SU[00m
				(DM
					(ITJ gut))[01;31m)[00m
			(SIMPX gehen wir ins schloshotel))))
Step:Unary
{'subtrees': ['DM'], 'family': ['SU', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'VVFIN', 'PPER', 'APPRART', 'NE'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 5), 'span': (0, 1), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP gut gehen wir ins schloshotel)

Sentence 548:
18 Initial errors
0 on fringe, 13 iterations
2 Error:Different label
2 Error:Single Word Phrase
2 Error:UNSET move
2 Error:PP Attachment
2 Error:Modifier Attachment
1 Error:UNSET add
1 Error:UNSET add
1 Error:UNSET remove
1 Error:Single Word Phrase
1 Error:Clause Attachment
1 Error:Unary
1 Error:Single Word Phrase
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;36m(SIMPX[00m [01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF ich)
				(LK werde)
				(MF meiner sekretarin bescheid)
				(VC sagen)[01;31m)[00m
			(SIMPX die soll sich da drum kummern)[01;31m)[00m[01;36m)[00m
		[01;31m(SU[00m
			(SIMPX
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				[01;36m(SIMPX[00m
					(VF dann)
					(LK werde)
					[01;36m(MF[00m
						[01;31m(MF[00m
							(NX ich)
							(NX ihnen)
							[01;36m(ADJX[00m [01;31m(NX[00m [01;33m(NX[00m
								(NN neues)[01;31m)[00m[01;36m)[00m[01;31m)[00m
						[01;31m(VC[00m
							[01;31m(VXINF[00m
								(VVINF erzahlen)[01;31m)[00m[01;31m)[00m [01;33mNX)[00m
						[01;31m(NF[00m [01;33m(PX[00m
							(PX
								(APPRART vom)
								[01;31m(NX[00m
									(NX kulturleben) [01;33mPX)[00m
									(PX in hannover)[01;31m)[00m)[01;31m)[00m[01;36m)[00m[01;36m)[00m)
			(SIMPX
				(KOORD und)
				(VF dann)
				(LK konnen)
				(MF
					(NX wir)
					(NX uns)
					(ADVX ja)
					[01;31m(ADVX[00m
						(ADVX immer)
						[01;36m(ADVX[00m
							(ADV noch)[01;36m)[00m[01;31m)[00m)
				(VC einigen))[01;31m)[00m
		(SU was halten sie davon)))
Step:Different label
{'family': ['SIMPX', 'SU', 'SU'], 'auto preterminal span': (0, 12), 'span': (0, 12), 'subtrees': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'over_word': False, 'auto preterminals': ('PPER', 'VAFIN', 'PPOSAT', 'NN', 'NN', 'VVINF', 'PDS', 'VMFIN', 'PRF', 'ADV', 'PROP', 'VVINF'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('SU', 'SIMPX')}
(TOP
	(TURN
		(SIMPX
			[01;31m(SIMPX[00m
				(VF ich)
				(LK werde)
				(MF meiner sekretarin bescheid)
				(VC sagen)[01;31m)[00m
			(SIMPX die soll sich da drum kummern))
		[01;31m(SU[00m
			(SIMPX
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				[01;36m(SIMPX[00m
					(VF dann)
					(LK werde)
					[01;36m(MF[00m
						[01;31m(MF[00m
							(NX ich)
							(NX ihnen)
							[01;36m(ADJX[00m [01;31m(NX[00m [01;33m(NX[00m
								(NN neues)[01;31m)[00m[01;36m)[00m[01;31m)[00m
						[01;31m(VC[00m
							[01;31m(VXINF[00m
								(VVINF erzahlen)[01;31m)[00m[01;31m)[00m [01;33mNX)[00m
						[01;31m(NF[00m [01;33m(PX[00m
							(PX
								(APPRART vom)
								[01;31m(NX[00m
									(NX kulturleben) [01;33mPX)[00m
									(PX in hannover)[01;31m)[00m)[01;31m)[00m[01;36m)[00m[01;36m)[00m)
			(SIMPX
				(KOORD und)
				(VF dann)
				(LK konnen)
				(MF
					(NX wir)
					(NX uns)
					(ADVX ja)
					[01;31m(ADVX[00m
						(ADVX immer)
						[01;36m(ADVX[00m
							(ADV noch)[01;36m)[00m[01;31m)[00m)
				(VC einigen))[01;31m)[00m
		(SU was halten sie davon)))
Step:Single Word Phrase
{'family': ['NX', 'NX', 'ADJX'], 'auto preterminal span': (17, 18), 'span': (17, 18), 'subtrees': ['NN'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('NN',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('NX', 'ADJX')}
(TOP
	(TURN
		(SIMPX
			[01;31m(SIMPX[00m
				(VF ich)
				(LK werde)
				(MF meiner sekretarin bescheid)
				(VC sagen)[01;31m)[00m
			(SIMPX die soll sich da drum kummern))
		[01;31m(SU[00m
			(SIMPX
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				[01;36m(SIMPX[00m
					(VF dann)
					(LK werde)
					[01;36m(MF[00m
						[01;31m(MF[00m
							(NX ich)
							(NX ihnen)
							[01;33m(NX[00m (ADJX neues)[01;31m)[00m
						[01;31m(VC[00m
							[01;31m(VXINF[00m
								(VVINF erzahlen)[01;31m)[00m[01;31m)[00m [01;33mNX)[00m
						[01;31m(NF[00m [01;33m(PX[00m
							(PX
								(APPRART vom)
								[01;31m(NX[00m
									(NX kulturleben) [01;33mPX)[00m
									(PX in hannover)[01;31m)[00m)[01;31m)[00m[01;36m)[00m[01;36m)[00m)
			(SIMPX
				(KOORD und)
				(VF dann)
				(LK konnen)
				(MF
					(NX wir)
					(NX uns)
					(ADVX ja)
					[01;31m(ADVX[00m
						(ADVX immer)
						[01;36m(ADVX[00m
							(ADV noch)[01;36m)[00m[01;31m)[00m)
				(VC einigen))[01;31m)[00m
		(SU was halten sie davon)))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['NX', 'NX', 'ADJX', 'VC', 'NF'], 'mover info': [('VC', (18, 19)), ('NF', (19, 23))], 'old_family': ['KOORD', 'VF', 'LK', 'MF', 'VC', 'NF'], 'start left siblings': ['KOORD', 'VF', 'LK', 'MF'], 'auto preterminals': ('KON', 'ADV', 'VAFIN', 'PPER', 'PPER', 'NN', 'VVINF', 'APPRART', 'NN', 'APPR', 'NE'), 'start right siblings': [], 'end left siblings': ['NX', 'NX', 'ADJX'], 'auto preterminal span': (12, 23), 'movers': ['VC', 'NF'], 'old_parent': 'SIMPX', 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SIMPX
			[01;31m(SIMPX[00m
				(VF ich)
				(LK werde)
				(MF meiner sekretarin bescheid)
				(VC sagen)[01;31m)[00m
			(SIMPX die soll sich da drum kummern))
		[01;31m(SU[00m
			(SIMPX
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				[01;36m(SIMPX[00m
					(VF dann)
					(LK werde)
					(MF
						(NX ich)
						(NX ihnen)
						[01;36m(NX[00m
							(ADJX neues)
							[01;31m(VC[00m
								[01;31m(VXINF[00m
									(VVINF erzahlen)[01;31m)[00m[01;31m)[00m[01;36m)[00m
						[01;31m(NF[00m [01;33m(PX[00m
							(PX
								(APPRART vom)
								[01;31m(NX[00m
									(NX kulturleben) [01;33mPX)[00m
									(PX in hannover)[01;31m)[00m)[01;31m)[00m)[01;36m)[00m)
			(SIMPX
				(KOORD und)
				(VF dann)
				(LK konnen)
				(MF
					(NX wir)
					(NX uns)
					(ADVX ja)
					[01;31m(ADVX[00m
						(ADVX immer)
						[01;36m(ADVX[00m
							(ADV noch)[01;36m)[00m[01;31m)[00m)
				(VC einigen))[01;31m)[00m
		(SU was halten sie davon)))
Step:PP Attachment
{'new_parent': 'NF', 'new_family': ['PX', 'PX'], 'mover info': [('PX', (21, 23))], 'old_family': ['NX', 'PX'], 'start left siblings': ['NX'], 'auto preterminals': ('APPRART', 'NN', 'APPR', 'NE'), 'start right siblings': [], 'end left siblings': ['PX'], 'auto preterminal span': (19, 23), 'adding node already present': False, 'movers': ['PX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'ADVX'}
(TOP
	(TURN
		(SIMPX
			[01;31m(SIMPX[00m
				(VF ich)
				(LK werde)
				(MF meiner sekretarin bescheid)
				(VC sagen)[01;31m)[00m
			(SIMPX die soll sich da drum kummern))
		[01;31m(SU[00m
			(SIMPX
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				[01;36m(SIMPX[00m
					(VF dann)
					(LK werde)
					(MF
						(NX ich)
						(NX ihnen)
						[01;36m(NX[00m
							(ADJX neues)
							[01;31m(VC[00m
								[01;31m(VXINF[00m
									(VVINF erzahlen)[01;31m)[00m[01;31m)[00m[01;36m)[00m
						(PX
							[01;31m(NF[00m
								(PX vom kulturleben)
								(PX in hannover)[01;31m)[00m))[01;36m)[00m)
			(SIMPX
				(KOORD und)
				(VF dann)
				(LK konnen)
				(MF
					(NX wir)
					(NX uns)
					(ADVX ja)
					[01;31m(ADVX[00m
						(ADVX immer)
						[01;36m(ADVX[00m
							(ADV noch)[01;36m)[00m[01;31m)[00m)
				(VC einigen))[01;31m)[00m
		(SU was halten sie davon)))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'NX', 'ADVX', 'ADVX', 'ADVX'], 'mover info': [('ADVX', (29, 30))], 'old_family': ['ADVX', 'ADV'], 'start left siblings': [], 'auto preterminals': ('PPER', 'PRF', 'ADV', 'ADV', 'ADV'), 'start right siblings': ['ADV'], 'end left siblings': ['NX', 'NX', 'ADVX'], 'auto preterminal span': (26, 31), 'movers': ['ADVX'], 'old_parent': 'ADVX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['ADVX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SIMPX
			[01;31m(SIMPX[00m
				(VF ich)
				(LK werde)
				(MF meiner sekretarin bescheid)
				(VC sagen)[01;31m)[00m
			(SIMPX die soll sich da drum kummern))
		[01;31m(SU[00m
			(SIMPX
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				[01;36m(SIMPX[00m
					(VF dann)
					(LK werde)
					(MF
						(NX ich)
						(NX ihnen)
						[01;36m(NX[00m
							(ADJX neues)
							[01;31m(VC[00m
								[01;31m(VXINF[00m
									(VVINF erzahlen)[01;31m)[00m[01;31m)[00m[01;36m)[00m
						(PX
							[01;31m(NF[00m
								(PX vom kulturleben)
								(PX in hannover)[01;31m)[00m))[01;36m)[00m)
			(SIMPX und dann konnen wir uns ja immer noch einigen)[01;31m)[00m
		(SU was halten sie davon)))
Step:UNSET add
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['KOORD', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'PPER', 'NN', 'VVINF', 'APPRART', 'NN', 'APPR', 'NE'), 'right siblings': [], 'left siblings': [(KOORD (KON und))], 'auto preterminal span': (13, 23), 'span': (13, 23), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SIMPX
			[01;31m(SIMPX[00m
				(VF ich)
				(LK werde)
				(MF meiner sekretarin bescheid)
				(VC sagen)[01;31m)[00m
			(SIMPX die soll sich da drum kummern))
		[01;31m(SU[00m
			(SIMPX
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				(SIMPX
					(VF dann)
					(LK werde)
					(MF
						(NX ich)
						(NX ihnen)
						[01;36m(NX[00m
							(ADJX neues)
							[01;31m(VC[00m
								[01;31m(VXINF[00m
									(VVINF erzahlen)[01;31m)[00m[01;31m)[00m[01;36m)[00m
						(PX
							[01;31m(NF[00m
								(PX vom kulturleben)
								(PX in hannover)[01;31m)[00m))))
			(SIMPX und dann konnen wir uns ja immer noch einigen)[01;31m)[00m
		(SU was halten sie davon)))
Step:UNSET add
{'subtrees': ['ADJX', 'VC'], 'family': ['NX', 'NX', 'NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'VVINF'), 'right siblings': [(PX (NF (PX (APPRART vom) (NX (NN kulturleben))) (PX (APPR in) (NX (NE hannover)))))], 'left siblings': [(NX (PPER ich)), (NX (PPER ihnen))], 'auto preterminal span': (17, 19), 'span': (17, 19), 'parent': 'MF', 'label': 'NX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SIMPX
			[01;31m(SIMPX[00m
				(VF ich)
				(LK werde)
				(MF meiner sekretarin bescheid)
				(VC sagen)[01;31m)[00m
			(SIMPX die soll sich da drum kummern))
		[01;31m(SU[00m
			(SIMPX
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				(SIMPX
					(VF dann)
					(LK werde)
					(MF
						(NX ich)
						(NX ihnen)
						(NX
							(ADJX neues)
							[01;31m(VC[00m
								[01;31m(VXINF[00m
									(VVINF erzahlen)[01;31m)[00m[01;31m)[00m)
						(PX
							[01;31m(NF[00m
								(PX vom kulturleben)
								(PX in hannover)[01;31m)[00m))))
			(SIMPX und dann konnen wir uns ja immer noch einigen)[01;31m)[00m
		(SU was halten sie davon)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'PPOSAT', 'NN', 'NN', 'VVINF', 'PDS', 'VMFIN', 'PRF', 'ADV', 'PROP', 'VVINF'), 'right siblings': ['SIMPX'], 'parent': 'SIMPX', 'auto preterminal span': (0, 12), 'span': (0, 6), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX ich werde meiner sekretarin bescheid sagen die soll sich da drum kummern)
		[01;31m(SU[00m
			(SIMPX
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				(SIMPX
					(VF dann)
					(LK werde)
					(MF
						(NX ich)
						(NX ihnen)
						(NX
							(ADJX neues)
							[01;31m(VC[00m
								[01;31m(VXINF[00m
									(VVINF erzahlen)[01;31m)[00m[01;31m)[00m)
						(PX
							[01;31m(NF[00m
								(PX vom kulturleben)
								(PX in hannover)[01;31m)[00m))))
			(SIMPX und dann konnen wir uns ja immer noch einigen)[01;31m)[00m
		(SU was halten sie davon)))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['KOORD', 'SIMPX'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON', 'ADV', 'VAFIN', 'PPER', 'PPER', 'NN', 'VVINF', 'APPRART', 'NN', 'APPR', 'NE'), 'right siblings': ['SIMPX'], 'parent': 'SIMPX', 'auto preterminal span': (12, 23), 'span': (12, 13), 'left siblings': [], 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX ich werde meiner sekretarin bescheid sagen die soll sich da drum kummern)
		[01;31m(SU[00m
			(SIMPX
				(KON und)
				(SIMPX
					(VF dann)
					(LK werde)
					(MF
						(NX ich)
						(NX ihnen)
						(NX
							(ADJX neues)
							[01;31m(VC[00m
								[01;31m(VXINF[00m
									(VVINF erzahlen)[01;31m)[00m[01;31m)[00m)
						(PX
							[01;31m(NF[00m
								(PX vom kulturleben)
								(PX in hannover)[01;31m)[00m))))
			(SIMPX und dann konnen wir uns ja immer noch einigen)[01;31m)[00m
		(SU was halten sie davon)))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['SIMPX', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'PPOSAT', 'NN', 'NN', 'VVINF', 'PDS', 'VMFIN', 'PRF', 'ADV', 'PROP', 'VVINF', 'KON', 'ADV', 'VAFIN', 'PPER', 'PPER', 'NN', 'VVINF', 'APPRART', 'NN', 'APPR', 'NE', 'KON', 'ADV', 'VMFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV', 'VVINF', 'PWS', 'VVFIN', 'PPER', 'PROP'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 36), 'span': (12, 32), 'left siblings': ['SIMPX'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX ich werde meiner sekretarin bescheid sagen die soll sich da drum kummern)
		(SIMPX
			(KON und)
			(SIMPX
				(VF dann)
				(LK werde)
				(MF
					(NX ich)
					(NX ihnen)
					(NX
						(ADJX neues)
						[01;31m(VC[00m
							[01;31m(VXINF[00m
								(VVINF erzahlen)[01;31m)[00m[01;31m)[00m)
					(PX
						[01;31m(NF[00m
							(PX vom kulturleben)
							(PX in hannover)[01;31m)[00m))))
		(SIMPX und dann konnen wir uns ja immer noch einigen)
		(SU was halten sie davon)))
Step:Unary
{'subtrees': ['VXINF'], 'family': ['ADJX', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'VVINF'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (17, 19), 'span': (18, 19), 'left siblings': ['ADJX'], 'label': 'VC', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX ich werde meiner sekretarin bescheid sagen die soll sich da drum kummern)
		(SIMPX
			(KON und)
			(SIMPX
				(VF dann)
				(LK werde)
				(MF
					(NX ich)
					(NX ihnen)
					(NX
						(ADJX neues)
						[01;31m(VXINF[00m
							(VVINF erzahlen)[01;31m)[00m)
					(PX
						[01;31m(NF[00m
							(PX vom kulturleben)
							(PX in hannover)[01;31m)[00m))))
		(SIMPX und dann konnen wir uns ja immer noch einigen)
		(SU was halten sie davon)))
Step:Single Word Phrase
{'subtrees': ['VVINF'], 'family': ['ADJX', 'VXINF'], 'over_word': True, 'over words': True, 'auto preterminals': ('NN', 'VVINF'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (17, 19), 'span': (18, 19), 'left siblings': ['ADJX'], 'label': 'VXINF', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX ich werde meiner sekretarin bescheid sagen die soll sich da drum kummern)
		(SIMPX
			(KON und)
			(SIMPX
				(VF dann)
				(LK werde)
				(MF
					(NX ich)
					(NX ihnen)
					(NX neues erzahlen)
					(PX
						[01;31m(NF[00m
							(PX vom kulturleben)
							(PX in hannover)[01;31m)[00m))))
		(SIMPX und dann konnen wir uns ja immer noch einigen)
		(SU was halten sie davon)))
Step:Unary
{'subtrees': ['PX', 'PX'], 'family': ['NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'NN', 'APPR', 'NE'), 'right siblings': [], 'parent': 'PX', 'auto preterminal span': (19, 23), 'span': (19, 23), 'left siblings': [], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ich werde meiner sekretarin bescheid sagen die soll sich da drum kummern und dann werde ich ihnen neues erzahlen vom kulturleben in hannover und dann konnen wir uns ja immer noch einigen was halten sie davon)

Sentence 549:
5 Initial errors
0 on fringe, 4 iterations
2 Error:UNSET move
1 Error:UNSET add
1 Error:Unary
1 Error:Clause Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;36m(SU[00m
			[01;31m(SU[00m
				(DM
					(ITJ genau))[01;31m)[00m
			[01;31m(SU[00m
				(SIMPX
					(VF das)
					(LK mache)
					(MF ich))[01;31m)[00m[01;36m)[00m
		[01;31m(SU[00m
			(DM okay)
			(SIMPX
				(VF dann)
				(LK waren)
				[01;36m(MF[00m
					(MF wir von meiner seite soweit fertig)
					(NF mit der planung)[01;36m)[00m)[01;31m)[00m))
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SU', 'SIMPX'], 'mover info': [('SU', (0, 1))], 'old_family': ['SU', 'SU', 'SU'], 'start left siblings': [], 'auto preterminals': ('ITJ', 'PDS', 'VVFIN', 'PPER', 'ITJ', 'ADV', 'VAFIN', 'PPER', 'APPR', 'PPOSAT', 'NN', 'ADV', 'ADJD', 'APPR', 'ART', 'NN'), 'start right siblings': ['SU', 'SU'], 'end left siblings': [], 'auto preterminal span': (0, 16), 'movers': ['SU'], 'old_parent': 'TURN', 'POS confusion': ('ITJ', 'ITJ'), 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			[01;31m(SU[00m
				(DM
					(ITJ genau))[01;31m)[00m
			(SIMPX das mache ich))
		[01;31m(SU[00m
			(DM okay)
			(SIMPX
				(VF dann)
				(LK waren)
				[01;36m(MF[00m
					(MF wir von meiner seite soweit fertig)
					(NF mit der planung)[01;36m)[00m)[01;31m)[00m))
Step:UNSET add
{'subtrees': ['MF', 'NF'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'APPR', 'PPOSAT', 'NN', 'ADV', 'ADJD', 'APPR', 'ART', 'NN'), 'right siblings': [], 'left siblings': [(VF (ADVX (ADV dann))), (LK (VXFIN (VAFIN waren)))], 'auto preterminal span': (7, 16), 'span': (7, 16), 'parent': 'SIMPX', 'label': 'MF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU
			[01;31m(SU[00m
				(DM
					(ITJ genau))[01;31m)[00m
			(SIMPX das mache ich))
		[01;31m(SU[00m
			(DM okay)
			(SIMPX dann waren wir von meiner seite soweit fertig mit der planung)[01;31m)[00m))
Step:Unary
{'subtrees': ['DM'], 'family': ['SU', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PDS', 'VVFIN', 'PPER'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 4), 'span': (0, 1), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU genau das mache ich)
		[01;31m(SU[00m
			(DM okay)
			(SIMPX dann waren wir von meiner seite soweit fertig mit der planung)[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['DM', 'SIMPX'], 'family': ['SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PDS', 'VVFIN', 'PPER', 'ITJ', 'ADV', 'VAFIN', 'PPER', 'APPR', 'PPOSAT', 'NN', 'ADV', 'ADJD', 'APPR', 'ART', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 16), 'span': (4, 16), 'left siblings': ['SU'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP genau das mache ich okay dann waren wir von meiner seite soweit fertig mit der planung)

Sentence 550:
7 Initial errors
0 on fringe, 5 iterations
2 Error:Clause Attachment
2 Error:UNSET move
1 Error:UNSET remove
1 Error:UNSET add
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;36m(SU[00m
				(DM
					(ITJ genau))[01;36m)[00m
			[01;31m(SIMPX[00m
				(VF das)
				(LK machen)
				[01;33m(MF[00m (MF wir)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(DM
				(ITJ gut))[01;31m)[00m [01;33mMF)[00m
		[01;31m(SU[00m
			(DM frau stumpfecker)
			[01;36m(SU[00m
				(SIMPX
					(VF einen schonen tag)
					(LK wunsche)
					(MF ich ihnen noch))[01;36m)[00m[01;31m)[00m))
Step:Clause Attachment
{'new_parent': 'SU', 'new_family': ['SIMPX', 'DM'], 'mover info': [('SIMPX', (1, 4))], 'old_family': ['DM', 'SIMPX'], 'start left siblings': ['DM'], 'auto preterminals': ('ITJ', 'PDS', 'VVFIN', 'PPER', 'ITJ', 'NN', 'NE', 'ART', 'ADJA', 'NN', 'VVFIN', 'PPER', 'PPER', 'ADV'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 14), 'movers': ['SIMPX'], 'old_parent': 'SU', 'end right siblings': ['DM'], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU genau)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF das)
				(LK machen)
				[01;33m(MF[00m (MF wir)[01;31m)[00m
			(DM gut)[01;31m)[00m [01;33mMF)[00m
		[01;31m(SU[00m
			(DM frau stumpfecker)
			[01;36m(SU[00m
				(SIMPX
					(VF einen schonen tag)
					(LK wunsche)
					(MF ich ihnen noch))[01;36m)[00m[01;31m)[00m))
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SIMPX', 'DM', 'DM'], 'mover info': [('DM', (5, 7))], 'old_family': ['DM', 'SIMPX'], 'start left siblings': [], 'auto preterminals': ('ITJ', 'PDS', 'VVFIN', 'PPER', 'ITJ', 'NN', 'NE', 'ART', 'ADJA', 'NN', 'VVFIN', 'PPER', 'PPER', 'ADV'), 'start right siblings': ['SIMPX'], 'end left siblings': ['SIMPX', 'DM'], 'auto preterminal span': (0, 14), 'movers': ['DM'], 'old_parent': 'SU', 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU genau)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF das)
				(LK machen)
				[01;33m(MF[00m (MF wir)[01;31m)[00m
			(DM gut) [01;33mMF)[00m
			(DM frau stumpfecker)[01;31m)[00m
		(SU einen schonen tag wunsche ich ihnen noch)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['SIMPX', 'DM', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VVFIN', 'PPER', 'ITJ', 'NN', 'NE'), 'right siblings': ['DM', 'DM'], 'parent': 'SU', 'auto preterminal span': (1, 7), 'span': (1, 4), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU genau)
		[01;31m(SU[00m
			(VF das)
			(LK machen)
			[01;36m(MF[00m
				(MF wir)
				(DM gut)[01;36m)[00m
			(DM frau stumpfecker)[01;31m)[00m
		(SU einen schonen tag wunsche ich ihnen noch)))
Step:UNSET add
{'subtrees': ['MF', 'DM'], 'family': ['VF', 'LK', 'MF', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ITJ'), 'right siblings': [(DM (NX (NN frau) (NE stumpfecker)))], 'left siblings': [(VF (NX (PDS das))), (LK (VXFIN (VVFIN machen)))], 'auto preterminal span': (3, 5), 'span': (3, 5), 'parent': 'SU', 'label': 'MF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU genau)
		[01;31m(SU[00m
			(VF das)
			(LK machen)
			(MF wir gut)
			(DM frau stumpfecker)[01;31m)[00m
		(SU einen schonen tag wunsche ich ihnen noch)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'DM'], 'family': ['SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PDS', 'VVFIN', 'PPER', 'ITJ', 'NN', 'NE', 'ART', 'ADJA', 'NN', 'VVFIN', 'PPER', 'PPER', 'ADV'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 14), 'span': (1, 7), 'left siblings': ['SU'], 'label': 'SU', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP genau das machen wir gut frau stumpfecker einen schonen tag wunsche ich ihnen noch)

Sentence 551:
0 Initial errors
0 on fringe, 0 iterations

Sentence 552:
16 Initial errors
0 on fringe, 5 iterations
10 Error:UNSET move
2 Error:Modifier Attachment
2 Error:Co-ordination
1 Error:Unary
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SU[00m
	(TOP
		(TURN
			[01;31m(SU[00m
				(DM ja)
				[01;31m(SIMPX[00m [01;33m(SIMPX[00m
					(VF ich)
					(LK hatte)
					(MF jetzt am vierzehnten und funfzehnten januar zeit)
					[01;31m(NF[00m [01;33m(PX (NF[00m
						[01;31m(PX[00m
							(KON oder)
							[01;31m(PX[00m [01;33m(PX[00m
								[01;36m(PX[00m
									(ADVX auch)
									[01;31m(PX[00m
										(APPRART am)
										(NX wochenende)[01;31m)[00m[01;36m)[00m
								(NX siebzehnter achtzehnter januar)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
			[01;31m(SU[00m
				[01;31m(PX[00m
					(KON und)
					(PX [01;33m(PX[00m
						(APPR zwischen)
						[01;31m(NX[00m
							(NX dem dreiundzwanzigsten und sechsundzwanzigsten januar) [01;33mPX)[00m
							(KON und)
							(NX dem achtundzwanzigsten und neunundzwanzigsten januar)[01;31m)[00m)[01;31m)[00m[01;31m)[00m)) [01;33mPX) NF) PX) SIMPX)[00m[01;36m)[00m
Step:UNSET move
{'new_parent': 'PX', 'new_family': ['ADVX', 'PX', 'NX', 'SU'], 'mover info': [('SU', (17, 30))], 'old_family': ['SU', 'SU'], 'start left siblings': ['SU'], 'auto preterminals': ('PTKANT', 'PPER', 'VAFIN', 'ADV', 'APPRART', 'ADJA', 'KON', 'ADJA', 'NN', 'NN', 'KON', 'ADV', 'APPRART', 'NN', 'ADJA', 'ADJA', 'NN', 'KON', 'APPR', 'ART', 'ADJA', 'KON', 'ADJA', 'NN', 'KON', 'ART', 'ADJA', 'KON', 'ADJA', 'NN'), 'start right siblings': [], 'end left siblings': ['ADVX', 'PX', 'NX'], 'auto preterminal span': (0, 30), 'movers': ['SU'], 'old_parent': 'TURN', 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX
				(VF ich)
				(LK hatte)
				(MF jetzt am vierzehnten und funfzehnten januar zeit)
				(NF
					(PX
						(KON oder)
						(PX
							[01;36m(PX[00m
								(ADVX auch)
								[01;31m(PX[00m
									(APPRART am)
									(NX wochenende)[01;31m)[00m[01;36m)[00m
							(NX siebzehnter achtzehnter januar)
							[01;31m(SU[00m
								[01;31m(PX[00m
									(KON und)
									(PX [01;33m(PX[00m
										(APPR zwischen)
										[01;31m(NX[00m
											(NX dem dreiundzwanzigsten und sechsundzwanzigsten januar) [01;33mPX)[00m
											(KON und)
											(NX dem achtundzwanzigsten und neunundzwanzigsten januar)[01;31m)[00m)[01;31m)[00m[01;31m)[00m)))))))
Step:Modifier Attachment
{'new_parent': 'PX', 'new_family': ['ADVX', 'APPRART', 'NX'], 'mover info': [('ADVX', (11, 12))], 'old_family': ['ADVX', 'PX', 'NX', 'SU'], 'start left siblings': [], 'auto preterminals': ('ADV', 'APPRART', 'NN', 'ADJA', 'ADJA', 'NN', 'KON', 'APPR', 'ART', 'ADJA', 'KON', 'ADJA', 'NN', 'KON', 'ART', 'ADJA', 'KON', 'ADJA', 'NN'), 'start right siblings': ['PX', 'NX', 'SU'], 'end left siblings': [], 'auto preterminal span': (11, 30), 'movers': ['ADVX'], 'old_parent': 'PX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['APPRART', 'NX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX
				(VF ich)
				(LK hatte)
				(MF jetzt am vierzehnten und funfzehnten januar zeit)
				(NF
					(PX
						(KON oder)
						(PX
							(PX auch am wochenende)
							(NX siebzehnter achtzehnter januar)
							[01;31m(SU[00m
								[01;31m(PX[00m
									(KON und)
									(PX [01;33m(PX[00m
										(APPR zwischen)
										[01;31m(NX[00m
											(NX dem dreiundzwanzigsten und sechsundzwanzigsten januar) [01;33mPX)[00m
											(KON und)
											(NX dem achtundzwanzigsten und neunundzwanzigsten januar)[01;31m)[00m)[01;31m)[00m[01;31m)[00m)))))))
Step:Co-ordination
{'new_parent': 'PX', 'new_family': ['KON', 'PX', 'KON', 'NX'], 'mover info': [('KON', (24, 25)), ('NX', (25, 30))], 'old_family': ['NX', 'KON', 'NX'], 'start left siblings': ['NX'], 'auto preterminals': ('KON', 'APPR', 'ART', 'ADJA', 'KON', 'ADJA', 'NN', 'KON', 'ART', 'ADJA', 'KON', 'ADJA', 'NN'), 'start right siblings': [], 'end left siblings': ['KON', 'PX'], 'auto preterminal span': (17, 30), 'adding node already present': False, 'movers': ['KON', 'NX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'Co-ordination', 'type': 'move', 'added label': 'PX'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX
				(VF ich)
				(LK hatte)
				(MF jetzt am vierzehnten und funfzehnten januar zeit)
				(NF
					(PX
						(KON oder)
						(PX
							(PX auch am wochenende)
							(NX siebzehnter achtzehnter januar)
							[01;31m(SU[00m
								[01;31m(PX[00m
									(KON und)
									(PX zwischen dem dreiundzwanzigsten und sechsundzwanzigsten januar und dem achtundzwanzigsten und neunundzwanzigsten januar)[01;31m)[00m[01;31m)[00m)))))))
Step:Unary
{'subtrees': ['KON', 'PX'], 'family': ['PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'APPR', 'ART', 'ADJA', 'KON', 'ADJA', 'NN', 'KON', 'ART', 'ADJA', 'KON', 'ADJA', 'NN'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (17, 30), 'span': (17, 30), 'left siblings': [], 'label': 'PX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX
				(VF ich)
				(LK hatte)
				(MF jetzt am vierzehnten und funfzehnten januar zeit)
				(NF
					(PX
						(KON oder)
						(PX
							(PX auch am wochenende)
							(NX siebzehnter achtzehnter januar)
							[01;31m(SU[00m
								(KON und)
								(PX zwischen dem dreiundzwanzigsten und sechsundzwanzigsten januar und dem achtundzwanzigsten und neunundzwanzigsten januar)[01;31m)[00m)))))))
Step:PP Attachment
{'subtrees': ['KON', 'PX'], 'family': ['PX', 'NX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'APPRART', 'NN', 'ADJA', 'ADJA', 'NN', 'KON', 'APPR', 'ART', 'ADJA', 'KON', 'ADJA', 'NN', 'KON', 'ART', 'ADJA', 'KON', 'ADJA', 'NN'), 'right siblings': [], 'parent': 'PX', 'auto preterminal span': (11, 30), 'span': (17, 30), 'left siblings': ['PX', 'NX'], 'label': 'SU', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP ja ich hatte jetzt am vierzehnten und funfzehnten januar zeit oder auch am wochenende siebzehnter achtzehnter januar und zwischen dem dreiundzwanzigsten und sechsundzwanzigsten januar und dem achtundzwanzigsten und neunundzwanzigsten januar)

Sentence 553:
11 Initial errors
0 on fringe, 2 iterations
10 Error:UNSET move
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP [01;33m(SU[00m
	(TURN
		[01;31m(SU[00m
			(DM gut)
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(LK verbleiben)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX wir)
					(PX beim achtundzwanzigsten und neunundzwanzigsten januar)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;31m(LV[00m
					(PX
						(APPR bezuglich)
						(NX des verkehrsmittels))[01;31m)[00m [01;33mMF) SIMPX) SU)[00m
				[01;36m(SU[00m
					[01;36m(SIMPX[00m
						(VF was)
						(LK haben)
						(MF sie sich da)
						(VC vorgestellt)[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['NX', 'PX', 'LV'], 'mover info': [('LV', (8, 11))], 'old_family': ['LV', 'VF', 'LK', 'MF', 'VC'], 'start left siblings': [], 'auto preterminals': ('ITJ', 'VVFIN', 'PPER', 'APPRART', 'ADJA', 'KON', 'ADJA', 'NN', 'APPR', 'ART', 'NN', 'PWS', 'VAFIN', 'PPER', 'PRF', 'ADV', 'VVPP'), 'start right siblings': ['VF', 'LK', 'MF', 'VC'], 'end left siblings': ['NX', 'PX'], 'auto preterminal span': (0, 17), 'movers': ['LV'], 'old_parent': 'SIMPX', 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			(DM gut)
			(SIMPX
				(LK verbleiben)
				(MF
					(NX wir)
					(PX beim achtundzwanzigsten und neunundzwanzigsten januar)
					[01;31m(LV[00m
						(PX
							(APPR bezuglich)
							(NX des verkehrsmittels))[01;31m)[00m)))
		(SU was haben sie sich da vorgestellt)))
Step:Unary
{'subtrees': ['PX'], 'family': ['NX', 'PX', 'LV'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'APPRART', 'ADJA', 'KON', 'ADJA', 'NN', 'APPR', 'ART', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (2, 11), 'span': (8, 11), 'left siblings': ['NX', 'PX'], 'label': 'LV', 'classified_type': 'Unary', 'type': 'remove'}
(TOP gut verbleiben wir beim achtundzwanzigsten und neunundzwanzigsten januar bezuglich des verkehrsmittels was haben sie sich da vorgestellt)

Sentence 554:
5 Initial errors
0 on fringe, 5 iterations
1 Error:UNSET remove
1 Error:Modifier Attachment
1 Error:Unary
1 Error:PP Attachment
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			[01;31m(NX[00m
				(NX ich)
				(ADVX ebenso)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(PX[00m
				(ADVX eben)
				[01;31m(PX[00m
					(APPR aus)
					(NX zeitgrunden)[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['DM', 'NX'], 'family': ['SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'ADV', 'ADV', 'APPR', 'NN'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 6), 'span': (0, 3), 'left siblings': [], 'label': 'SU', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		[01;31m(NX[00m
			(NX ich)
			(ADVX ebenso)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(PX[00m
				(ADVX eben)
				[01;31m(PX[00m
					(APPR aus)
					(NX zeitgrunden)[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADVX'], 'family': ['DM', 'NX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'ADV', 'ADV', 'APPR', 'NN'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 6), 'span': (1, 3), 'left siblings': ['DM'], 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(NX ich)
		(ADVX ebenso)
		[01;31m(SU[00m
			[01;31m(PX[00m
				(ADVX eben)
				[01;31m(PX[00m
					(APPR aus)
					(NX zeitgrunden)[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['ADVX', 'PX'], 'family': ['PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'APPR', 'NN'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (3, 6), 'span': (3, 6), 'left siblings': [], 'label': 'PX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(NX ich)
		(ADVX ebenso)
		[01;31m(SU[00m
			(ADVX eben)
			[01;31m(PX[00m
				(APPR aus)
				(NX zeitgrunden)[01;31m)[00m[01;31m)[00m))
Step:PP Attachment
{'subtrees': ['ADVX', 'PX'], 'family': ['DM', 'NX', 'ADVX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'ADV', 'ADV', 'APPR', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 6), 'span': (3, 6), 'left siblings': ['DM', 'NX', 'ADVX'], 'label': 'SU', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(NX ich)
		(ADVX ebenso)
		(ADVX eben)
		[01;31m(PX[00m
			(APPR aus)
			(NX zeitgrunden)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['APPR', 'NX'], 'family': ['DM', 'NX', 'ADVX', 'ADVX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'ADV', 'ADV', 'APPR', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 6), 'span': (4, 6), 'left siblings': ['DM', 'NX', 'ADVX', 'ADVX'], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ja ich ebenso eben aus zeitgrunden)

Sentence 555:
57 Initial errors
0 on fringe, 43 iterations
5 Error:NP Attachment
3 Error:NP Attachment
3 Error:UNSET move
2 Error:NP Attachment
2 Error:Modifier Attachment
2 Error:Modifier Attachment
2 Error:UNSET move
2 Error:NP Attachment
2 Error:Modifier Attachment
1 Error:Unary
1 Error:Unary
1 Error:UNSET add
1 Error:NP Internal Structure
1 Error:UNSET add
1 Error:Unary
1 Error:Unary
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:UNSET add
1 Error:UNSET remove
1 Error:Co-ordination
1 Error:UNSET remove
1 Error:UNSET add
1 Error:UNSET remove
1 Error:Single Word Phrase
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:Clause Attachment
1 Error:UNSET add
1 Error:Unary
1 Error:UNSET remove
1 Error:Unary
1 Error:Clause Attachment
1 Error:Clause Attachment
1 Error:Single Word Phrase
1 Error:Co-ordination
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:Unary
1 Error:UNSET remove
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		[01;31m(SU[00m
			(SIMPX
				(VF die)
				(LK mus)
				(MF ich mit ihnen jetzt noch)
				(VC absprechen))[01;31m)[00m
		[01;31m(SU[00m [01;33m(PX[00m
			[01;31m(NX[00m
				(PX zum einen)
				[01;31m(NX[00m
					(NX das maritimhotel in hannover) [01;33mPX)[00m
					[01;31m(R[00m [01;33m(SIMPX[00m
						(C welches)
						[01;31m(FKOORD[00m
							[01;31m(MVC[00m
								(MF am bahnhof)
								(VC liegt)[01;31m)[00m [01;33mSIMPX)[00m
							(KON und)
							[01;31m(MVC[00m [01;33m(MF[00m
								[01;31m(MF[00m
									(PX zum zentrum)
									[01;31m(NX[00m
										(NX funfzehn minuten) [01;33mMF)[00m
										[01;31m(NX[00m
											(NN laufzeit)[01;31m)[00m[01;31m)[00m[01;31m)[00m
								[01;36m(LK[00m [01;31m(VC[00m [01;33m(SIMPX[00m
									(VXFIN
										(VAFIN hat))[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF es) [01;33mSIMPX)[00m
				(LK gibt)
				[01;31m(MF[00m [01;33m(MF[00m
					(ADVX dort)
					[01;33m(NX[00m (NX eine cafeteria)[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(NX
						(NN garage))[01;31m)[00m [01;33mNX) MF)[00m
				(LK ist)
				(MF naturlich dann nicht nicht unbedingt so wichtig)[01;31m)[00m[01;31m)[00m
		[01;36m(SIMPX[00m [01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF einzelzimmer)
				(LK kostet)
				[01;31m(MF[00m [01;33m(NX (MF (NX[00m
					(NX
						(ADJX hundert einundfunfzig)
						(NN mark))[01;31m)[00m[01;31m)[00m
			[01;31m(NX[00m
				(NX doppelzimmer) [01;33mNX)[00m
				(NX hundert funf mark)[01;31m)[00m[01;31m)[00m [01;33mMF) NX)[00m[01;36m)[00m
		[01;31m(SU[00m
			(NX dann das hotel luisenhof)
			[01;36m(ADJX[00m
				(ADJX funf minuten vom bahnhof entfernt)
				[01;31m(ADJX[00m
					[01;36m(DM[00m
						(ADVX
							(ADV also))[01;36m)[00m
					(ADJX etwas schneller)[01;31m)[00m[01;36m)[00m
			(SIMPX
				(VF es)
				(LK gibt)
				(MF
					(NX
						[01;36m(MF[00m
							(NX eine bar)
							(NX ein restaurant)[01;36m)[00m
						(KON und)
						(NX
							(ADVX ebenfalls)
							[01;36m(NX[00m
								(ART eine)
								(NN garage)[01;36m)[00m))))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(KOORD und)
				(VF das hotel loccumerhof)
				(LK ist)
				[01;36m(PX[00m
					[01;36m(MF[00m
						[01;36m(PX[00m
							(MF
								(ADVX gleich)
								[01;31m(PX[00m
									(APPRART beim)
									(NX bahnhof)[01;31m)[00m)[01;36m)[00m
						(NF anscheinend)[01;36m)[00m[01;36m)[00m)
			[01;31m(SIMPX[00m
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				[01;36m(SIMPX[00m
					(VF es)
					(LK gibt)
					(MF
						(NX
							[01;31m(NX[00m
								(ART ein)
								(NX schwimm und dampfbad)[01;31m)[00m
							(KON und)
							(NX eine pianobar)))[01;36m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF das einzelzimmer)
				(LK kostet)
				(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m
			[01;31m(NX[00m
				(KON und)
				[01;31m(NX[00m
					(NX das doppelzimmer)
					[01;33m(NX[00m (NX hundert dreiundvierzig mark)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(PX
						(APPRART vom)
						(NX zeitangebot))[01;31m)[00m [01;33mNX)[00m
				(LK ware)
				(MF das hotel loccumerhof anscheinend besonders gunstig)
				(NF
					(SIMPX
						(C weil)
						(MF
							(NX es)
							[01;36m(PX[00m
								(ADVX gleich)
								[01;31m(PX[00m
									(APPRART beim)
									(NX bahnhof)[01;31m)[00m[01;36m)[00m)
						(VC liegt)))[01;31m)[00m[01;31m)[00m))
Step:NP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'NX'], 'mover info': [('NX', (53, 57))], 'old_family': ['SIMPX', 'NX'], 'start left siblings': ['SIMPX'], 'auto preterminals': ('NN', 'VVFIN', 'CARD', 'CARD', 'NN', 'NN', 'CARD', 'CARD', 'NN'), 'start right siblings': [], 'end left siblings': ['NX'], 'auto preterminal span': (48, 57), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'SU', 'added and moved': True, 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'PX'}
(TOP
	(TURN
		(SU jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		[01;31m(SU[00m
			(SIMPX
				(VF die)
				(LK mus)
				(MF ich mit ihnen jetzt noch)
				(VC absprechen))[01;31m)[00m
		[01;31m(SU[00m [01;33m(PX[00m
			[01;31m(NX[00m
				(PX zum einen)
				[01;31m(NX[00m
					(NX das maritimhotel in hannover) [01;33mPX)[00m
					[01;31m(R[00m [01;33m(SIMPX[00m
						(C welches)
						[01;31m(FKOORD[00m
							[01;31m(MVC[00m
								(MF am bahnhof)
								(VC liegt)[01;31m)[00m [01;33mSIMPX)[00m
							(KON und)
							[01;31m(MVC[00m [01;33m(MF[00m
								[01;31m(MF[00m
									(PX zum zentrum)
									[01;31m(NX[00m
										(NX funfzehn minuten) [01;33mMF)[00m
										[01;31m(NX[00m
											(NN laufzeit)[01;31m)[00m[01;31m)[00m[01;31m)[00m
								[01;36m(LK[00m [01;31m(VC[00m [01;33m(SIMPX[00m
									(VXFIN
										(VAFIN hat))[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF es) [01;33mSIMPX)[00m
				(LK gibt)
				[01;31m(MF[00m [01;33m(MF[00m
					(ADVX dort)
					[01;33m(NX[00m (NX eine cafeteria)[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(NX
						(NN garage))[01;31m)[00m [01;33mNX) MF)[00m
				(LK ist)
				(MF naturlich dann nicht nicht unbedingt so wichtig)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF einzelzimmer)
				(LK kostet)
				(NX [01;33m(NX[00m
					(MF
						(NX hundert einundfunfzig mark)
						[01;31m(NX[00m
							(NX doppelzimmer) [01;33mNX)[00m
							(NX hundert funf mark)[01;31m)[00m)))[01;31m)[00m
		[01;31m(SU[00m
			(NX dann das hotel luisenhof)
			[01;36m(ADJX[00m
				(ADJX funf minuten vom bahnhof entfernt)
				[01;31m(ADJX[00m
					[01;36m(DM[00m
						(ADVX
							(ADV also))[01;36m)[00m
					(ADJX etwas schneller)[01;31m)[00m[01;36m)[00m
			(SIMPX
				(VF es)
				(LK gibt)
				(MF
					(NX
						[01;36m(MF[00m
							(NX eine bar)
							(NX ein restaurant)[01;36m)[00m
						(KON und)
						(NX
							(ADVX ebenfalls)
							[01;36m(NX[00m
								(ART eine)
								(NN garage)[01;36m)[00m))))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(KOORD und)
				(VF das hotel loccumerhof)
				(LK ist)
				[01;36m(PX[00m
					[01;36m(MF[00m
						[01;36m(PX[00m
							(MF
								(ADVX gleich)
								[01;31m(PX[00m
									(APPRART beim)
									(NX bahnhof)[01;31m)[00m)[01;36m)[00m
						(NF anscheinend)[01;36m)[00m[01;36m)[00m)
			[01;31m(SIMPX[00m
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				[01;36m(SIMPX[00m
					(VF es)
					(LK gibt)
					(MF
						(NX
							[01;31m(NX[00m
								(ART ein)
								(NX schwimm und dampfbad)[01;31m)[00m
							(KON und)
							(NX eine pianobar)))[01;36m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF das einzelzimmer)
				(LK kostet)
				(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m
			[01;31m(NX[00m
				(KON und)
				[01;31m(NX[00m
					(NX das doppelzimmer)
					[01;33m(NX[00m (NX hundert dreiundvierzig mark)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(PX
						(APPRART vom)
						(NX zeitangebot))[01;31m)[00m [01;33mNX)[00m
				(LK ware)
				(MF das hotel loccumerhof anscheinend besonders gunstig)
				(NF
					(SIMPX
						(C weil)
						(MF
							(NX es)
							[01;36m(PX[00m
								(ADVX gleich)
								[01;31m(PX[00m
									(APPRART beim)
									(NX bahnhof)[01;31m)[00m[01;36m)[00m)
						(VC liegt)))[01;31m)[00m[01;31m)[00m))
Step:NP Attachment
{'new_parent': 'VC', 'new_family': ['NX', 'VXFIN'], 'mover info': [('NX', (32, 33))], 'old_family': ['NX', 'NX'], 'start left siblings': ['NX'], 'auto preterminals': ('APPRART', 'NN', 'CARD', 'NN', 'NN', 'VAFIN'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (28, 34), 'movers': ['NX'], 'old_parent': 'NX', 'POS confusion': ('NN', 'NN'), 'end right siblings': ['VXFIN'], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		[01;31m(SU[00m
			(SIMPX
				(VF die)
				(LK mus)
				(MF ich mit ihnen jetzt noch)
				(VC absprechen))[01;31m)[00m
		[01;31m(SU[00m [01;33m(PX[00m
			[01;31m(NX[00m
				(PX zum einen)
				[01;31m(NX[00m
					(NX das maritimhotel in hannover) [01;33mPX)[00m
					[01;31m(R[00m [01;33m(SIMPX[00m
						(C welches)
						[01;31m(FKOORD[00m
							[01;31m(MVC[00m
								(MF am bahnhof)
								(VC liegt)[01;31m)[00m [01;33mSIMPX)[00m
							(KON und)
							[01;31m(MVC[00m
								(MF zum zentrum funfzehn minuten)
								[01;31m(VC[00m
									[01;31m(NX[00m
										(NN laufzeit)[01;31m)[00m
									[01;36m(LK[00m
										(VXFIN [01;33m(SIMPX[00m
											(VAFIN hat))[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF es) [01;33mSIMPX)[00m
				(LK gibt)
				[01;31m(MF[00m [01;33m(MF[00m
					(ADVX dort)
					[01;33m(NX[00m (NX eine cafeteria)[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(NX
						(NN garage))[01;31m)[00m [01;33mNX) MF)[00m
				(LK ist)
				(MF naturlich dann nicht nicht unbedingt so wichtig)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF einzelzimmer)
				(LK kostet)
				(NX [01;33m(NX[00m
					(MF
						(NX hundert einundfunfzig mark)
						[01;31m(NX[00m
							(NX doppelzimmer) [01;33mNX)[00m
							(NX hundert funf mark)[01;31m)[00m)))[01;31m)[00m
		[01;31m(SU[00m
			(NX dann das hotel luisenhof)
			[01;36m(ADJX[00m
				(ADJX funf minuten vom bahnhof entfernt)
				[01;31m(ADJX[00m
					[01;36m(DM[00m
						(ADVX
							(ADV also))[01;36m)[00m
					(ADJX etwas schneller)[01;31m)[00m[01;36m)[00m
			(SIMPX
				(VF es)
				(LK gibt)
				(MF
					(NX
						[01;36m(MF[00m
							(NX eine bar)
							(NX ein restaurant)[01;36m)[00m
						(KON und)
						(NX
							(ADVX ebenfalls)
							[01;36m(NX[00m
								(ART eine)
								(NN garage)[01;36m)[00m))))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(KOORD und)
				(VF das hotel loccumerhof)
				(LK ist)
				[01;36m(PX[00m
					[01;36m(MF[00m
						[01;36m(PX[00m
							(MF
								(ADVX gleich)
								[01;31m(PX[00m
									(APPRART beim)
									(NX bahnhof)[01;31m)[00m)[01;36m)[00m
						(NF anscheinend)[01;36m)[00m[01;36m)[00m)
			[01;31m(SIMPX[00m
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				[01;36m(SIMPX[00m
					(VF es)
					(LK gibt)
					(MF
						(NX
							[01;31m(NX[00m
								(ART ein)
								(NX schwimm und dampfbad)[01;31m)[00m
							(KON und)
							(NX eine pianobar)))[01;36m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF das einzelzimmer)
				(LK kostet)
				(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m
			[01;31m(NX[00m
				(KON und)
				[01;31m(NX[00m
					(NX das doppelzimmer)
					[01;33m(NX[00m (NX hundert dreiundvierzig mark)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(PX
						(APPRART vom)
						(NX zeitangebot))[01;31m)[00m [01;33mNX)[00m
				(LK ware)
				(MF das hotel loccumerhof anscheinend besonders gunstig)
				(NF
					(SIMPX
						(C weil)
						(MF
							(NX es)
							[01;36m(PX[00m
								(ADVX gleich)
								[01;31m(PX[00m
									(APPRART beim)
									(NX bahnhof)[01;31m)[00m[01;36m)[00m)
						(VC liegt)))[01;31m)[00m[01;31m)[00m))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['ADVX', 'NX', 'VF'], 'mover info': [('VF', (39, 40))], 'old_family': ['VF', 'LK', 'MF'], 'start left siblings': [], 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NN', 'VAFIN', 'ADV', 'ADV', 'PTKNEG', 'PTKNEG', 'ADV', 'ADV', 'ADJD'), 'start right siblings': ['LK', 'MF'], 'end left siblings': ['ADVX', 'NX'], 'auto preterminal span': (34, 48), 'adding node already present': False, 'movers': ['VF'], 'old_parent': 'SIMPX', 'POS confusion': ('NN', 'NN'), 'added and moved': True, 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'PX'}
(TOP
	(TURN
		(SU jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		[01;31m(SU[00m
			(SIMPX
				(VF die)
				(LK mus)
				(MF ich mit ihnen jetzt noch)
				(VC absprechen))[01;31m)[00m
		[01;31m(SU[00m [01;33m(PX[00m
			[01;31m(NX[00m
				(PX zum einen)
				[01;31m(NX[00m
					(NX das maritimhotel in hannover) [01;33mPX)[00m
					[01;31m(R[00m [01;33m(SIMPX[00m
						(C welches)
						[01;31m(FKOORD[00m
							[01;31m(MVC[00m
								(MF am bahnhof)
								(VC liegt)[01;31m)[00m [01;33mSIMPX)[00m
							(KON und)
							[01;31m(MVC[00m
								(MF zum zentrum funfzehn minuten)
								[01;31m(VC[00m
									[01;31m(NX[00m
										(NN laufzeit)[01;31m)[00m
									[01;36m(LK[00m
										(VXFIN [01;33m(SIMPX[00m
											(VAFIN hat))[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF es) [01;33mSIMPX)[00m
				(LK gibt)
				(MF
					(ADVX dort)
					(NX
						(NX eine cafeteria)
						[01;31m(VF[00m
							(NX
								(NN garage))[01;31m)[00m))[01;31m)[00m
			[01;31m(SIMPX[00m
				(LK ist)
				(MF naturlich dann nicht nicht unbedingt so wichtig)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF einzelzimmer)
				(LK kostet)
				(NX [01;33m(NX[00m
					(MF
						(NX hundert einundfunfzig mark)
						[01;31m(NX[00m
							(NX doppelzimmer) [01;33mNX)[00m
							(NX hundert funf mark)[01;31m)[00m)))[01;31m)[00m
		[01;31m(SU[00m
			(NX dann das hotel luisenhof)
			[01;36m(ADJX[00m
				(ADJX funf minuten vom bahnhof entfernt)
				[01;31m(ADJX[00m
					[01;36m(DM[00m
						(ADVX
							(ADV also))[01;36m)[00m
					(ADJX etwas schneller)[01;31m)[00m[01;36m)[00m
			(SIMPX
				(VF es)
				(LK gibt)
				(MF
					(NX
						[01;36m(MF[00m
							(NX eine bar)
							(NX ein restaurant)[01;36m)[00m
						(KON und)
						(NX
							(ADVX ebenfalls)
							[01;36m(NX[00m
								(ART eine)
								(NN garage)[01;36m)[00m))))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(KOORD und)
				(VF das hotel loccumerhof)
				(LK ist)
				[01;36m(PX[00m
					[01;36m(MF[00m
						[01;36m(PX[00m
							(MF
								(ADVX gleich)
								[01;31m(PX[00m
									(APPRART beim)
									(NX bahnhof)[01;31m)[00m)[01;36m)[00m
						(NF anscheinend)[01;36m)[00m[01;36m)[00m)
			[01;31m(SIMPX[00m
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				[01;36m(SIMPX[00m
					(VF es)
					(LK gibt)
					(MF
						(NX
							[01;31m(NX[00m
								(ART ein)
								(NX schwimm und dampfbad)[01;31m)[00m
							(KON und)
							(NX eine pianobar)))[01;36m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF das einzelzimmer)
				(LK kostet)
				(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m
			[01;31m(NX[00m
				(KON und)
				[01;31m(NX[00m
					(NX das doppelzimmer)
					[01;33m(NX[00m (NX hundert dreiundvierzig mark)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(PX
						(APPRART vom)
						(NX zeitangebot))[01;31m)[00m [01;33mNX)[00m
				(LK ware)
				(MF das hotel loccumerhof anscheinend besonders gunstig)
				(NF
					(SIMPX
						(C weil)
						(MF
							(NX es)
							[01;36m(PX[00m
								(ADVX gleich)
								[01;31m(PX[00m
									(APPRART beim)
									(NX bahnhof)[01;31m)[00m[01;36m)[00m)
						(VC liegt)))[01;31m)[00m[01;31m)[00m))
Step:NP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'NX', 'NX'], 'mover info': [('NX', (53, 54))], 'old_family': ['NX', 'NX'], 'start left siblings': [], 'auto preterminals': ('CARD', 'CARD', 'NN', 'NN', 'CARD', 'CARD', 'NN'), 'start right siblings': ['NX'], 'end left siblings': ['NX'], 'auto preterminal span': (50, 57), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'NX', 'POS confusion': ('NN', 'NN'), 'added and moved': True, 'end right siblings': ['NX'], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'PX'}
(TOP
	(TURN
		(SU jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		[01;31m(SU[00m
			(SIMPX
				(VF die)
				(LK mus)
				(MF ich mit ihnen jetzt noch)
				(VC absprechen))[01;31m)[00m
		[01;31m(SU[00m [01;33m(PX[00m
			[01;31m(NX[00m
				(PX zum einen)
				[01;31m(NX[00m
					(NX das maritimhotel in hannover) [01;33mPX)[00m
					[01;31m(R[00m [01;33m(SIMPX[00m
						(C welches)
						[01;31m(FKOORD[00m
							[01;31m(MVC[00m
								(MF am bahnhof)
								(VC liegt)[01;31m)[00m [01;33mSIMPX)[00m
							(KON und)
							[01;31m(MVC[00m
								(MF zum zentrum funfzehn minuten)
								[01;31m(VC[00m
									[01;31m(NX[00m
										(NN laufzeit)[01;31m)[00m
									[01;36m(LK[00m
										(VXFIN [01;33m(SIMPX[00m
											(VAFIN hat))[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF es) [01;33mSIMPX)[00m
				(LK gibt)
				(MF
					(ADVX dort)
					(NX
						(NX eine cafeteria)
						[01;31m(VF[00m
							(NX
								(NN garage))[01;31m)[00m))[01;31m)[00m
			[01;31m(SIMPX[00m
				(LK ist)
				(MF naturlich dann nicht nicht unbedingt so wichtig)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF einzelzimmer)
				(LK kostet)
				(NX hundert einundfunfzig mark doppelzimmer hundert funf mark))[01;31m)[00m
		[01;31m(SU[00m
			(NX dann das hotel luisenhof)
			[01;36m(ADJX[00m
				(ADJX funf minuten vom bahnhof entfernt)
				[01;31m(ADJX[00m
					[01;36m(DM[00m
						(ADVX
							(ADV also))[01;36m)[00m
					(ADJX etwas schneller)[01;31m)[00m[01;36m)[00m
			(SIMPX
				(VF es)
				(LK gibt)
				(MF
					(NX
						[01;36m(MF[00m
							(NX eine bar)
							(NX ein restaurant)[01;36m)[00m
						(KON und)
						(NX
							(ADVX ebenfalls)
							[01;36m(NX[00m
								(ART eine)
								(NN garage)[01;36m)[00m))))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(KOORD und)
				(VF das hotel loccumerhof)
				(LK ist)
				[01;36m(PX[00m
					[01;36m(MF[00m
						[01;36m(PX[00m
							(MF
								(ADVX gleich)
								[01;31m(PX[00m
									(APPRART beim)
									(NX bahnhof)[01;31m)[00m)[01;36m)[00m
						(NF anscheinend)[01;36m)[00m[01;36m)[00m)
			[01;31m(SIMPX[00m
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				[01;36m(SIMPX[00m
					(VF es)
					(LK gibt)
					(MF
						(NX
							[01;31m(NX[00m
								(ART ein)
								(NX schwimm und dampfbad)[01;31m)[00m
							(KON und)
							(NX eine pianobar)))[01;36m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF das einzelzimmer)
				(LK kostet)
				(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m
			[01;31m(NX[00m
				(KON und)
				[01;31m(NX[00m
					(NX das doppelzimmer)
					[01;33m(NX[00m (NX hundert dreiundvierzig mark)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(PX
						(APPRART vom)
						(NX zeitangebot))[01;31m)[00m [01;33mNX)[00m
				(LK ware)
				(MF das hotel loccumerhof anscheinend besonders gunstig)
				(NF
					(SIMPX
						(C weil)
						(MF
							(NX es)
							[01;36m(PX[00m
								(ADVX gleich)
								[01;31m(PX[00m
									(APPRART beim)
									(NX bahnhof)[01;31m)[00m[01;36m)[00m)
						(VC liegt)))[01;31m)[00m[01;31m)[00m))
Step:Modifier Attachment
{'new_parent': 'ADJX', 'new_family': ['ADJX', 'ADVX', 'ADJX'], 'mover info': [('ADJX', (61, 66))], 'old_family': ['NX', 'ADJX', 'ADJX', 'SIMPX'], 'start left siblings': ['NX'], 'auto preterminals': ('ADV', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'ADJD', 'ADV', 'ADV', 'ADJD', 'PPER', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ART', 'NN'), 'start right siblings': ['ADJX', 'SIMPX'], 'end left siblings': [], 'auto preterminal span': (57, 79), 'movers': ['ADJX'], 'old_parent': 'SU', 'end right siblings': ['ADVX', 'ADJX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		[01;31m(SU[00m
			(SIMPX
				(VF die)
				(LK mus)
				(MF ich mit ihnen jetzt noch)
				(VC absprechen))[01;31m)[00m
		[01;31m(SU[00m [01;33m(PX[00m
			[01;31m(NX[00m
				(PX zum einen)
				[01;31m(NX[00m
					(NX das maritimhotel in hannover) [01;33mPX)[00m
					[01;31m(R[00m [01;33m(SIMPX[00m
						(C welches)
						[01;31m(FKOORD[00m
							[01;31m(MVC[00m
								(MF am bahnhof)
								(VC liegt)[01;31m)[00m [01;33mSIMPX)[00m
							(KON und)
							[01;31m(MVC[00m
								(MF zum zentrum funfzehn minuten)
								[01;31m(VC[00m
									[01;31m(NX[00m
										(NN laufzeit)[01;31m)[00m
									[01;36m(LK[00m
										(VXFIN [01;33m(SIMPX[00m
											(VAFIN hat))[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF es) [01;33mSIMPX)[00m
				(LK gibt)
				(MF
					(ADVX dort)
					(NX
						(NX eine cafeteria)
						[01;31m(VF[00m
							(NX
								(NN garage))[01;31m)[00m))[01;31m)[00m
			[01;31m(SIMPX[00m
				(LK ist)
				(MF naturlich dann nicht nicht unbedingt so wichtig)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF einzelzimmer)
				(LK kostet)
				(NX hundert einundfunfzig mark doppelzimmer hundert funf mark))[01;31m)[00m
		[01;31m(SU[00m
			(NX dann das hotel luisenhof)
			(ADJX
				(ADJX funf minuten vom bahnhof entfernt)
				[01;36m(DM[00m
					(ADVX
						(ADV also))[01;36m)[00m
				(ADJX etwas schneller))
			(SIMPX
				(VF es)
				(LK gibt)
				(MF
					(NX
						[01;36m(MF[00m
							(NX eine bar)
							(NX ein restaurant)[01;36m)[00m
						(KON und)
						(NX
							(ADVX ebenfalls)
							[01;36m(NX[00m
								(ART eine)
								(NN garage)[01;36m)[00m))))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(KOORD und)
				(VF das hotel loccumerhof)
				(LK ist)
				[01;36m(PX[00m
					[01;36m(MF[00m
						[01;36m(PX[00m
							(MF
								(ADVX gleich)
								[01;31m(PX[00m
									(APPRART beim)
									(NX bahnhof)[01;31m)[00m)[01;36m)[00m
						(NF anscheinend)[01;36m)[00m[01;36m)[00m)
			[01;31m(SIMPX[00m
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				[01;36m(SIMPX[00m
					(VF es)
					(LK gibt)
					(MF
						(NX
							[01;31m(NX[00m
								(ART ein)
								(NX schwimm und dampfbad)[01;31m)[00m
							(KON und)
							(NX eine pianobar)))[01;36m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF das einzelzimmer)
				(LK kostet)
				(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m
			[01;31m(NX[00m
				(KON und)
				[01;31m(NX[00m
					(NX das doppelzimmer)
					[01;33m(NX[00m (NX hundert dreiundvierzig mark)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(PX
						(APPRART vom)
						(NX zeitangebot))[01;31m)[00m [01;33mNX)[00m
				(LK ware)
				(MF das hotel loccumerhof anscheinend besonders gunstig)
				(NF
					(SIMPX
						(C weil)
						(MF
							(NX es)
							[01;36m(PX[00m
								(ADVX gleich)
								[01;31m(PX[00m
									(APPRART beim)
									(NX bahnhof)[01;31m)[00m[01;36m)[00m)
						(VC liegt)))[01;31m)[00m[01;31m)[00m))
Step:Modifier Attachment
{'new_parent': 'PX', 'new_family': ['ADVX', 'APPRART', 'NX'], 'mover info': [('ADVX', (84, 85))], 'old_family': ['ADVX', 'PX'], 'start left siblings': [], 'auto preterminals': ('ADV', 'APPRART', 'NN'), 'start right siblings': ['PX'], 'end left siblings': [], 'auto preterminal span': (84, 87), 'movers': ['ADVX'], 'old_parent': 'MF', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['APPRART', 'NX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		[01;31m(SU[00m
			(SIMPX
				(VF die)
				(LK mus)
				(MF ich mit ihnen jetzt noch)
				(VC absprechen))[01;31m)[00m
		[01;31m(SU[00m [01;33m(PX[00m
			[01;31m(NX[00m
				(PX zum einen)
				[01;31m(NX[00m
					(NX das maritimhotel in hannover) [01;33mPX)[00m
					[01;31m(R[00m [01;33m(SIMPX[00m
						(C welches)
						[01;31m(FKOORD[00m
							[01;31m(MVC[00m
								(MF am bahnhof)
								(VC liegt)[01;31m)[00m [01;33mSIMPX)[00m
							(KON und)
							[01;31m(MVC[00m
								(MF zum zentrum funfzehn minuten)
								[01;31m(VC[00m
									[01;31m(NX[00m
										(NN laufzeit)[01;31m)[00m
									[01;36m(LK[00m
										(VXFIN [01;33m(SIMPX[00m
											(VAFIN hat))[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF es) [01;33mSIMPX)[00m
				(LK gibt)
				(MF
					(ADVX dort)
					(NX
						(NX eine cafeteria)
						[01;31m(VF[00m
							(NX
								(NN garage))[01;31m)[00m))[01;31m)[00m
			[01;31m(SIMPX[00m
				(LK ist)
				(MF naturlich dann nicht nicht unbedingt so wichtig)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF einzelzimmer)
				(LK kostet)
				(NX hundert einundfunfzig mark doppelzimmer hundert funf mark))[01;31m)[00m
		[01;31m(SU[00m
			(NX dann das hotel luisenhof)
			(ADJX
				(ADJX funf minuten vom bahnhof entfernt)
				[01;36m(DM[00m
					(ADVX
						(ADV also))[01;36m)[00m
				(ADJX etwas schneller))
			(SIMPX
				(VF es)
				(LK gibt)
				(MF
					(NX
						[01;36m(MF[00m
							(NX eine bar)
							(NX ein restaurant)[01;36m)[00m
						(KON und)
						(NX
							(ADVX ebenfalls)
							[01;36m(NX[00m
								(ART eine)
								(NN garage)[01;36m)[00m))))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(KOORD und)
				(VF das hotel loccumerhof)
				(LK ist)
				[01;36m(PX[00m
					[01;36m(MF[00m
						(MF gleich beim bahnhof)
						(NF anscheinend)[01;36m)[00m[01;36m)[00m)
			[01;31m(SIMPX[00m
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				[01;36m(SIMPX[00m
					(VF es)
					(LK gibt)
					(MF
						(NX
							[01;31m(NX[00m
								(ART ein)
								(NX schwimm und dampfbad)[01;31m)[00m
							(KON und)
							(NX eine pianobar)))[01;36m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF das einzelzimmer)
				(LK kostet)
				(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m
			[01;31m(NX[00m
				(KON und)
				[01;31m(NX[00m
					(NX das doppelzimmer)
					[01;33m(NX[00m (NX hundert dreiundvierzig mark)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(PX
						(APPRART vom)
						(NX zeitangebot))[01;31m)[00m [01;33mNX)[00m
				(LK ware)
				(MF das hotel loccumerhof anscheinend besonders gunstig)
				(NF
					(SIMPX
						(C weil)
						(MF
							(NX es)
							[01;36m(PX[00m
								(ADVX gleich)
								[01;31m(PX[00m
									(APPRART beim)
									(NX bahnhof)[01;31m)[00m[01;36m)[00m)
						(VC liegt)))[01;31m)[00m[01;31m)[00m))
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SIMPX', 'KOORD', 'SIMPX'], 'mover info': [('KOORD', (88, 89))], 'old_family': ['KOORD', 'VF', 'LK', 'MF'], 'start left siblings': [], 'auto preterminals': ('KON', 'ART', 'NN', 'NE', 'VAFIN', 'ADV', 'APPRART', 'NN', 'ADV', 'KON', 'PPER', 'VVFIN', 'ART', 'TRUNC', 'KON', 'NN', 'KON', 'ART', 'NN'), 'start right siblings': ['VF', 'LK', 'MF'], 'end left siblings': ['SIMPX'], 'auto preterminal span': (79, 98), 'movers': ['KOORD'], 'old_parent': 'SIMPX', 'POS confusion': ('KON', 'KON'), 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		[01;31m(SU[00m
			(SIMPX
				(VF die)
				(LK mus)
				(MF ich mit ihnen jetzt noch)
				(VC absprechen))[01;31m)[00m
		[01;31m(SU[00m [01;33m(PX[00m
			[01;31m(NX[00m
				(PX zum einen)
				[01;31m(NX[00m
					(NX das maritimhotel in hannover) [01;33mPX)[00m
					[01;31m(R[00m [01;33m(SIMPX[00m
						(C welches)
						[01;31m(FKOORD[00m
							[01;31m(MVC[00m
								(MF am bahnhof)
								(VC liegt)[01;31m)[00m [01;33mSIMPX)[00m
							(KON und)
							[01;31m(MVC[00m
								(MF zum zentrum funfzehn minuten)
								[01;31m(VC[00m
									[01;31m(NX[00m
										(NN laufzeit)[01;31m)[00m
									[01;36m(LK[00m
										(VXFIN [01;33m(SIMPX[00m
											(VAFIN hat))[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF es) [01;33mSIMPX)[00m
				(LK gibt)
				(MF
					(ADVX dort)
					(NX
						(NX eine cafeteria)
						[01;31m(VF[00m
							(NX
								(NN garage))[01;31m)[00m))[01;31m)[00m
			[01;31m(SIMPX[00m
				(LK ist)
				(MF naturlich dann nicht nicht unbedingt so wichtig)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF einzelzimmer)
				(LK kostet)
				(NX hundert einundfunfzig mark doppelzimmer hundert funf mark))[01;31m)[00m
		[01;31m(SU[00m
			(NX dann das hotel luisenhof)
			(ADJX
				(ADJX funf minuten vom bahnhof entfernt)
				[01;36m(DM[00m
					(ADVX
						(ADV also))[01;36m)[00m
				(ADJX etwas schneller))
			(SIMPX
				(VF es)
				(LK gibt)
				(MF
					(NX
						[01;36m(MF[00m
							(NX eine bar)
							(NX ein restaurant)[01;36m)[00m
						(KON und)
						(NX
							(ADVX ebenfalls)
							[01;36m(NX[00m
								(ART eine)
								(NN garage)[01;36m)[00m))))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(KOORD und)
				(VF das hotel loccumerhof)
				(LK ist)
				[01;36m(PX[00m
					[01;36m(MF[00m
						(MF gleich beim bahnhof)
						(NF anscheinend)[01;36m)[00m[01;36m)[00m)
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(SIMPX
				(VF es)
				(LK gibt)
				(MF
					(NX
						[01;31m(NX[00m
							(ART ein)
							(NX schwimm und dampfbad)[01;31m)[00m
						(KON und)
						(NX eine pianobar))))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF das einzelzimmer)
				(LK kostet)
				(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m
			[01;31m(NX[00m
				(KON und)
				[01;31m(NX[00m
					(NX das doppelzimmer)
					[01;33m(NX[00m (NX hundert dreiundvierzig mark)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(PX
						(APPRART vom)
						(NX zeitangebot))[01;31m)[00m [01;33mNX)[00m
				(LK ware)
				(MF das hotel loccumerhof anscheinend besonders gunstig)
				(NF
					(SIMPX
						(C weil)
						(MF
							(NX es)
							[01;36m(PX[00m
								(ADVX gleich)
								[01;31m(PX[00m
									(APPRART beim)
									(NX bahnhof)[01;31m)[00m[01;36m)[00m)
						(VC liegt)))[01;31m)[00m[01;31m)[00m))
Step:NP Attachment
{'new_parent': 'SIMPX', 'new_family': ['NX', 'VF', 'LK', 'MF', 'NF'], 'mover info': [('NX', (109, 112))], 'old_family': ['NX', 'NX'], 'start left siblings': ['NX'], 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'PIAT', 'NN', 'VVPP', 'PDS', 'VMFIN', 'PPER', 'APPR', 'PPER', 'ADV', 'ADV', 'VVINF', 'APPRART', 'PIS', 'ART', 'NE', 'APPR', 'NE', 'PRELS', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPRART', 'NN', 'CARD', 'NN', 'NN', 'VAFIN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NN', 'VAFIN', 'ADV', 'ADV', 'PTKNEG', 'PTKNEG', 'ADV', 'ADV', 'ADJD', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN', 'NN', 'CARD', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'ADJD', 'ADV', 'ADV', 'ADJD', 'PPER', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ART', 'NN', 'KON', 'ART', 'NN', 'NE', 'VAFIN', 'ADV', 'APPRART', 'NN', 'ADV', 'KON', 'PPER', 'VVFIN', 'ART', 'TRUNC', 'KON', 'NN', 'KON', 'ART', 'NN', 'KON', 'ART', 'NN', 'VVFIN', 'ADV', 'CARD', 'CARD', 'NN', 'KON', 'ART', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'VAFIN', 'ART', 'NN', 'NE', 'ADV', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'VVFIN'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 127), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': ['VF', 'LK', 'MF', 'NF'], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'PX'}
(TOP
	(TURN
		(SU jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		[01;31m(SU[00m
			(SIMPX
				(VF die)
				(LK mus)
				(MF ich mit ihnen jetzt noch)
				(VC absprechen))[01;31m)[00m
		[01;31m(SU[00m [01;33m(PX[00m
			[01;31m(NX[00m
				(PX zum einen)
				[01;31m(NX[00m
					(NX das maritimhotel in hannover) [01;33mPX)[00m
					[01;31m(R[00m [01;33m(SIMPX[00m
						(C welches)
						[01;31m(FKOORD[00m
							[01;31m(MVC[00m
								(MF am bahnhof)
								(VC liegt)[01;31m)[00m [01;33mSIMPX)[00m
							(KON und)
							[01;31m(MVC[00m
								(MF zum zentrum funfzehn minuten)
								[01;31m(VC[00m
									[01;31m(NX[00m
										(NN laufzeit)[01;31m)[00m
									[01;36m(LK[00m
										(VXFIN [01;33m(SIMPX[00m
											(VAFIN hat))[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF es) [01;33mSIMPX)[00m
				(LK gibt)
				(MF
					(ADVX dort)
					(NX
						(NX eine cafeteria)
						[01;31m(VF[00m
							(NX
								(NN garage))[01;31m)[00m))[01;31m)[00m
			[01;31m(SIMPX[00m
				(LK ist)
				(MF naturlich dann nicht nicht unbedingt so wichtig)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF einzelzimmer)
				(LK kostet)
				(NX hundert einundfunfzig mark doppelzimmer hundert funf mark))[01;31m)[00m
		[01;31m(SU[00m
			(NX dann das hotel luisenhof)
			(ADJX
				(ADJX funf minuten vom bahnhof entfernt)
				[01;36m(DM[00m
					(ADVX
						(ADV also))[01;36m)[00m
				(ADJX etwas schneller))
			(SIMPX
				(VF es)
				(LK gibt)
				(MF
					(NX
						[01;36m(MF[00m
							(NX eine bar)
							(NX ein restaurant)[01;36m)[00m
						(KON und)
						(NX
							(ADVX ebenfalls)
							[01;36m(NX[00m
								(ART eine)
								(NN garage)[01;36m)[00m))))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(KOORD und)
				(VF das hotel loccumerhof)
				(LK ist)
				[01;36m(PX[00m
					[01;36m(MF[00m
						(MF gleich beim bahnhof)
						(NF anscheinend)[01;36m)[00m[01;36m)[00m)
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(SIMPX
				(VF es)
				(LK gibt)
				(MF
					(NX
						[01;31m(NX[00m
							(ART ein)
							(NX schwimm und dampfbad)[01;31m)[00m
						(KON und)
						(NX eine pianobar))))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF das einzelzimmer)
				(LK kostet)
				(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m
			[01;31m(NX[00m
				(KON und)
				(NX das doppelzimmer)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(NX
					(NX hundert dreiundvierzig mark)
					[01;31m(VF[00m
						(PX
							(APPRART vom)
							(NX zeitangebot))[01;31m)[00m)
				(LK ware)
				(MF das hotel loccumerhof anscheinend besonders gunstig)
				(NF
					(SIMPX
						(C weil)
						(MF
							(NX es)
							[01;36m(PX[00m
								(ADVX gleich)
								[01;31m(PX[00m
									(APPRART beim)
									(NX bahnhof)[01;31m)[00m[01;36m)[00m)
						(VC liegt)))[01;31m)[00m[01;31m)[00m))
Step:Modifier Attachment
{'new_parent': 'PX', 'new_family': ['ADVX', 'APPRART', 'NX'], 'mover info': [('ADVX', (123, 124))], 'old_family': ['NX', 'ADVX', 'PX'], 'start left siblings': ['NX'], 'auto preterminals': ('PPER', 'ADV', 'APPRART', 'NN'), 'start right siblings': ['PX'], 'end left siblings': [], 'auto preterminal span': (122, 126), 'movers': ['ADVX'], 'old_parent': 'MF', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['APPRART', 'NX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		[01;31m(SU[00m
			(SIMPX
				(VF die)
				(LK mus)
				(MF ich mit ihnen jetzt noch)
				(VC absprechen))[01;31m)[00m
		[01;31m(SU[00m [01;33m(PX[00m
			[01;31m(NX[00m
				(PX zum einen)
				[01;31m(NX[00m
					(NX das maritimhotel in hannover) [01;33mPX)[00m
					[01;31m(R[00m [01;33m(SIMPX[00m
						(C welches)
						[01;31m(FKOORD[00m
							[01;31m(MVC[00m
								(MF am bahnhof)
								(VC liegt)[01;31m)[00m [01;33mSIMPX)[00m
							(KON und)
							[01;31m(MVC[00m
								(MF zum zentrum funfzehn minuten)
								[01;31m(VC[00m
									[01;31m(NX[00m
										(NN laufzeit)[01;31m)[00m
									[01;36m(LK[00m
										(VXFIN [01;33m(SIMPX[00m
											(VAFIN hat))[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF es) [01;33mSIMPX)[00m
				(LK gibt)
				(MF
					(ADVX dort)
					(NX
						(NX eine cafeteria)
						[01;31m(VF[00m
							(NX
								(NN garage))[01;31m)[00m))[01;31m)[00m
			[01;31m(SIMPX[00m
				(LK ist)
				(MF naturlich dann nicht nicht unbedingt so wichtig)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF einzelzimmer)
				(LK kostet)
				(NX hundert einundfunfzig mark doppelzimmer hundert funf mark))[01;31m)[00m
		[01;31m(SU[00m
			(NX dann das hotel luisenhof)
			(ADJX
				(ADJX funf minuten vom bahnhof entfernt)
				[01;36m(DM[00m
					(ADVX
						(ADV also))[01;36m)[00m
				(ADJX etwas schneller))
			(SIMPX
				(VF es)
				(LK gibt)
				(MF
					(NX
						[01;36m(MF[00m
							(NX eine bar)
							(NX ein restaurant)[01;36m)[00m
						(KON und)
						(NX
							(ADVX ebenfalls)
							[01;36m(NX[00m
								(ART eine)
								(NN garage)[01;36m)[00m))))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(KOORD und)
				(VF das hotel loccumerhof)
				(LK ist)
				[01;36m(PX[00m
					[01;36m(MF[00m
						(MF gleich beim bahnhof)
						(NF anscheinend)[01;36m)[00m[01;36m)[00m)
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(SIMPX
				(VF es)
				(LK gibt)
				(MF
					(NX
						[01;31m(NX[00m
							(ART ein)
							(NX schwimm und dampfbad)[01;31m)[00m
						(KON und)
						(NX eine pianobar))))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF das einzelzimmer)
				(LK kostet)
				(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m
			[01;31m(NX[00m
				(KON und)
				(NX das doppelzimmer)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(NX
					(NX hundert dreiundvierzig mark)
					[01;31m(VF[00m
						(PX
							(APPRART vom)
							(NX zeitangebot))[01;31m)[00m)
				(LK ware)
				(MF das hotel loccumerhof anscheinend besonders gunstig)
				(NF weil es gleich beim bahnhof liegt)[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['VXFIN'], 'family': ['NX', 'LK'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN',), 'right siblings': [], 'left siblings': [(NX (NN laufzeit))], 'auto preterminal span': (33, 34), 'span': (33, 34), 'parent': 'VC', 'label': 'LK', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		[01;31m(SU[00m
			(SIMPX
				(VF die)
				(LK mus)
				(MF ich mit ihnen jetzt noch)
				(VC absprechen))[01;31m)[00m
		[01;31m(SU[00m [01;33m(PX[00m
			[01;31m(NX[00m
				(PX zum einen)
				[01;31m(NX[00m
					(NX das maritimhotel in hannover) [01;33mPX)[00m
					[01;31m(R[00m [01;33m(SIMPX[00m
						(C welches)
						[01;31m(FKOORD[00m
							[01;31m(MVC[00m
								(MF am bahnhof)
								(VC liegt)[01;31m)[00m [01;33mSIMPX)[00m
							(KON und)
							[01;31m(MVC[00m
								(MF zum zentrum funfzehn minuten)
								[01;31m(VC[00m
									[01;31m(NX[00m
										(NN laufzeit)[01;31m)[00m
									[01;33m(SIMPX[00m (LK hat)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF es) [01;33mSIMPX)[00m
				(LK gibt)
				(MF
					(ADVX dort)
					(NX
						(NX eine cafeteria)
						[01;31m(VF[00m
							(NX
								(NN garage))[01;31m)[00m))[01;31m)[00m
			[01;31m(SIMPX[00m
				(LK ist)
				(MF naturlich dann nicht nicht unbedingt so wichtig)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF einzelzimmer)
				(LK kostet)
				(NX hundert einundfunfzig mark doppelzimmer hundert funf mark))[01;31m)[00m
		[01;31m(SU[00m
			(NX dann das hotel luisenhof)
			(ADJX
				(ADJX funf minuten vom bahnhof entfernt)
				[01;36m(DM[00m
					(ADVX
						(ADV also))[01;36m)[00m
				(ADJX etwas schneller))
			(SIMPX
				(VF es)
				(LK gibt)
				(MF
					(NX
						[01;36m(MF[00m
							(NX eine bar)
							(NX ein restaurant)[01;36m)[00m
						(KON und)
						(NX
							(ADVX ebenfalls)
							[01;36m(NX[00m
								(ART eine)
								(NN garage)[01;36m)[00m))))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(KOORD und)
				(VF das hotel loccumerhof)
				(LK ist)
				[01;36m(PX[00m
					[01;36m(MF[00m
						(MF gleich beim bahnhof)
						(NF anscheinend)[01;36m)[00m[01;36m)[00m)
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(SIMPX
				(VF es)
				(LK gibt)
				(MF
					(NX
						[01;31m(NX[00m
							(ART ein)
							(NX schwimm und dampfbad)[01;31m)[00m
						(KON und)
						(NX eine pianobar))))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF das einzelzimmer)
				(LK kostet)
				(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m
			[01;31m(NX[00m
				(KON und)
				(NX das doppelzimmer)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(NX
					(NX hundert dreiundvierzig mark)
					[01;31m(VF[00m
						(PX
							(APPRART vom)
							(NX zeitangebot))[01;31m)[00m)
				(LK ware)
				(MF das hotel loccumerhof anscheinend besonders gunstig)
				(NF weil es gleich beim bahnhof liegt)[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['ADJX', 'DM', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV',), 'right siblings': [(ADJX (ADVX (ADV etwas)) (ADJD schneller))], 'left siblings': [(ADJX (NX (NX (ADJX (CARD funf)) (NN minuten)) (PX (APPRART vom) (NX (NN bahnhof)))) (ADJD entfernt))], 'auto preterminal span': (66, 67), 'span': (66, 67), 'parent': 'ADJX', 'label': 'DM', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		[01;31m(SU[00m
			(SIMPX
				(VF die)
				(LK mus)
				(MF ich mit ihnen jetzt noch)
				(VC absprechen))[01;31m)[00m
		[01;31m(SU[00m [01;33m(PX[00m
			[01;31m(NX[00m
				(PX zum einen)
				[01;31m(NX[00m
					(NX das maritimhotel in hannover) [01;33mPX)[00m
					[01;31m(R[00m [01;33m(SIMPX[00m
						(C welches)
						[01;31m(FKOORD[00m
							[01;31m(MVC[00m
								(MF am bahnhof)
								(VC liegt)[01;31m)[00m [01;33mSIMPX)[00m
							(KON und)
							[01;31m(MVC[00m
								(MF zum zentrum funfzehn minuten)
								[01;31m(VC[00m
									[01;31m(NX[00m
										(NN laufzeit)[01;31m)[00m
									[01;33m(SIMPX[00m (LK hat)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF es) [01;33mSIMPX)[00m
				(LK gibt)
				(MF
					(ADVX dort)
					(NX
						(NX eine cafeteria)
						[01;31m(VF[00m
							(NX
								(NN garage))[01;31m)[00m))[01;31m)[00m
			[01;31m(SIMPX[00m
				(LK ist)
				(MF naturlich dann nicht nicht unbedingt so wichtig)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF einzelzimmer)
				(LK kostet)
				(NX hundert einundfunfzig mark doppelzimmer hundert funf mark))[01;31m)[00m
		[01;31m(SU[00m
			(NX dann das hotel luisenhof)
			(ADJX funf minuten vom bahnhof entfernt also etwas schneller)
			(SIMPX
				(VF es)
				(LK gibt)
				(MF
					(NX
						[01;36m(MF[00m
							(NX eine bar)
							(NX ein restaurant)[01;36m)[00m
						(KON und)
						(NX
							(ADVX ebenfalls)
							[01;36m(NX[00m
								(ART eine)
								(NN garage)[01;36m)[00m))))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(KOORD und)
				(VF das hotel loccumerhof)
				(LK ist)
				[01;36m(PX[00m
					[01;36m(MF[00m
						(MF gleich beim bahnhof)
						(NF anscheinend)[01;36m)[00m[01;36m)[00m)
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(SIMPX
				(VF es)
				(LK gibt)
				(MF
					(NX
						[01;31m(NX[00m
							(ART ein)
							(NX schwimm und dampfbad)[01;31m)[00m
						(KON und)
						(NX eine pianobar))))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF das einzelzimmer)
				(LK kostet)
				(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m
			[01;31m(NX[00m
				(KON und)
				(NX das doppelzimmer)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(NX
					(NX hundert dreiundvierzig mark)
					[01;31m(VF[00m
						(PX
							(APPRART vom)
							(NX zeitangebot))[01;31m)[00m)
				(LK ware)
				(MF das hotel loccumerhof anscheinend besonders gunstig)
				(NF weil es gleich beim bahnhof liegt)[01;31m)[00m[01;31m)[00m))
Step:UNSET add
{'subtrees': ['NX', 'NX'], 'family': ['MF', 'KON', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'ART', 'NN'), 'right siblings': [(KON und), (NX (ADVX (ADV ebenfalls)) (ART eine) (NN garage))], 'left siblings': [], 'auto preterminal span': (71, 75), 'span': (71, 75), 'parent': 'NX', 'label': 'MF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		[01;31m(SU[00m
			(SIMPX
				(VF die)
				(LK mus)
				(MF ich mit ihnen jetzt noch)
				(VC absprechen))[01;31m)[00m
		[01;31m(SU[00m [01;33m(PX[00m
			[01;31m(NX[00m
				(PX zum einen)
				[01;31m(NX[00m
					(NX das maritimhotel in hannover) [01;33mPX)[00m
					[01;31m(R[00m [01;33m(SIMPX[00m
						(C welches)
						[01;31m(FKOORD[00m
							[01;31m(MVC[00m
								(MF am bahnhof)
								(VC liegt)[01;31m)[00m [01;33mSIMPX)[00m
							(KON und)
							[01;31m(MVC[00m
								(MF zum zentrum funfzehn minuten)
								[01;31m(VC[00m
									[01;31m(NX[00m
										(NN laufzeit)[01;31m)[00m
									[01;33m(SIMPX[00m (LK hat)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF es) [01;33mSIMPX)[00m
				(LK gibt)
				(MF
					(ADVX dort)
					(NX
						(NX eine cafeteria)
						[01;31m(VF[00m
							(NX
								(NN garage))[01;31m)[00m))[01;31m)[00m
			[01;31m(SIMPX[00m
				(LK ist)
				(MF naturlich dann nicht nicht unbedingt so wichtig)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF einzelzimmer)
				(LK kostet)
				(NX hundert einundfunfzig mark doppelzimmer hundert funf mark))[01;31m)[00m
		[01;31m(SU[00m
			(NX dann das hotel luisenhof)
			(ADJX funf minuten vom bahnhof entfernt also etwas schneller)
			(SIMPX
				(VF es)
				(LK gibt)
				(MF
					(NX
						(MF eine bar ein restaurant)
						(KON und)
						(NX
							(ADVX ebenfalls)
							[01;36m(NX[00m
								(ART eine)
								(NN garage)[01;36m)[00m))))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(KOORD und)
				(VF das hotel loccumerhof)
				(LK ist)
				[01;36m(PX[00m
					[01;36m(MF[00m
						(MF gleich beim bahnhof)
						(NF anscheinend)[01;36m)[00m[01;36m)[00m)
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(SIMPX
				(VF es)
				(LK gibt)
				(MF
					(NX
						[01;31m(NX[00m
							(ART ein)
							(NX schwimm und dampfbad)[01;31m)[00m
						(KON und)
						(NX eine pianobar))))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF das einzelzimmer)
				(LK kostet)
				(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m
			[01;31m(NX[00m
				(KON und)
				(NX das doppelzimmer)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(NX
					(NX hundert dreiundvierzig mark)
					[01;31m(VF[00m
						(PX
							(APPRART vom)
							(NX zeitangebot))[01;31m)[00m)
				(LK ware)
				(MF das hotel loccumerhof anscheinend besonders gunstig)
				(NF weil es gleich beim bahnhof liegt)[01;31m)[00m[01;31m)[00m))
Step:NP Internal Structure
{'subtrees': ['ART', 'NN'], 'family': ['ADVX', 'NX'], 'over_word': False, 'over words': True, 'auto preterminals': ('ART', 'NN'), 'right siblings': [], 'left siblings': [(ADVX (ADV ebenfalls))], 'auto preterminal span': (77, 79), 'span': (77, 79), 'parent': 'NX', 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'add'}
(TOP
	(TURN
		(SU jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		[01;31m(SU[00m
			(SIMPX
				(VF die)
				(LK mus)
				(MF ich mit ihnen jetzt noch)
				(VC absprechen))[01;31m)[00m
		[01;31m(SU[00m [01;33m(PX[00m
			[01;31m(NX[00m
				(PX zum einen)
				[01;31m(NX[00m
					(NX das maritimhotel in hannover) [01;33mPX)[00m
					[01;31m(R[00m [01;33m(SIMPX[00m
						(C welches)
						[01;31m(FKOORD[00m
							[01;31m(MVC[00m
								(MF am bahnhof)
								(VC liegt)[01;31m)[00m [01;33mSIMPX)[00m
							(KON und)
							[01;31m(MVC[00m
								(MF zum zentrum funfzehn minuten)
								[01;31m(VC[00m
									[01;31m(NX[00m
										(NN laufzeit)[01;31m)[00m
									[01;33m(SIMPX[00m (LK hat)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF es) [01;33mSIMPX)[00m
				(LK gibt)
				(MF
					(ADVX dort)
					(NX
						(NX eine cafeteria)
						[01;31m(VF[00m
							(NX
								(NN garage))[01;31m)[00m))[01;31m)[00m
			[01;31m(SIMPX[00m
				(LK ist)
				(MF naturlich dann nicht nicht unbedingt so wichtig)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF einzelzimmer)
				(LK kostet)
				(NX hundert einundfunfzig mark doppelzimmer hundert funf mark))[01;31m)[00m
		[01;31m(SU[00m
			(NX dann das hotel luisenhof)
			(ADJX funf minuten vom bahnhof entfernt also etwas schneller)
			(SIMPX es gibt eine bar ein restaurant und ebenfalls eine garage)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(KOORD und)
				(VF das hotel loccumerhof)
				(LK ist)
				[01;36m(PX[00m
					[01;36m(MF[00m
						(MF gleich beim bahnhof)
						(NF anscheinend)[01;36m)[00m[01;36m)[00m)
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(SIMPX
				(VF es)
				(LK gibt)
				(MF
					(NX
						[01;31m(NX[00m
							(ART ein)
							(NX schwimm und dampfbad)[01;31m)[00m
						(KON und)
						(NX eine pianobar))))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF das einzelzimmer)
				(LK kostet)
				(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m
			[01;31m(NX[00m
				(KON und)
				(NX das doppelzimmer)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(NX
					(NX hundert dreiundvierzig mark)
					[01;31m(VF[00m
						(PX
							(APPRART vom)
							(NX zeitangebot))[01;31m)[00m)
				(LK ware)
				(MF das hotel loccumerhof anscheinend besonders gunstig)
				(NF weil es gleich beim bahnhof liegt)[01;31m)[00m[01;31m)[00m))
Step:UNSET add
{'subtrees': ['MF', 'NF'], 'family': ['KOORD', 'VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'APPRART', 'NN', 'ADV'), 'right siblings': [], 'left siblings': [(KOORD (KON und)), (VF (NX (ART das) (NX (NX (NN hotel)) (NX (NE loccumerhof))))), (LK (VXFIN (VAFIN ist)))], 'auto preterminal span': (84, 88), 'span': (84, 88), 'parent': 'SIMPX', 'label': 'MF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		[01;31m(SU[00m
			(SIMPX
				(VF die)
				(LK mus)
				(MF ich mit ihnen jetzt noch)
				(VC absprechen))[01;31m)[00m
		[01;31m(SU[00m [01;33m(PX[00m
			[01;31m(NX[00m
				(PX zum einen)
				[01;31m(NX[00m
					(NX das maritimhotel in hannover) [01;33mPX)[00m
					[01;31m(R[00m [01;33m(SIMPX[00m
						(C welches)
						[01;31m(FKOORD[00m
							[01;31m(MVC[00m
								(MF am bahnhof)
								(VC liegt)[01;31m)[00m [01;33mSIMPX)[00m
							(KON und)
							[01;31m(MVC[00m
								(MF zum zentrum funfzehn minuten)
								[01;31m(VC[00m
									[01;31m(NX[00m
										(NN laufzeit)[01;31m)[00m
									[01;33m(SIMPX[00m (LK hat)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF es) [01;33mSIMPX)[00m
				(LK gibt)
				(MF
					(ADVX dort)
					(NX
						(NX eine cafeteria)
						[01;31m(VF[00m
							(NX
								(NN garage))[01;31m)[00m))[01;31m)[00m
			[01;31m(SIMPX[00m
				(LK ist)
				(MF naturlich dann nicht nicht unbedingt so wichtig)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF einzelzimmer)
				(LK kostet)
				(NX hundert einundfunfzig mark doppelzimmer hundert funf mark))[01;31m)[00m
		[01;31m(SU[00m
			(NX dann das hotel luisenhof)
			(ADJX funf minuten vom bahnhof entfernt also etwas schneller)
			(SIMPX es gibt eine bar ein restaurant und ebenfalls eine garage)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(KOORD und)
				(VF das hotel loccumerhof)
				(LK ist)
				[01;36m(PX[00m
					(MF
						(MF gleich beim bahnhof)
						(NF anscheinend))[01;36m)[00m)
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(SIMPX
				(VF es)
				(LK gibt)
				(MF
					(NX
						[01;31m(NX[00m
							(ART ein)
							(NX schwimm und dampfbad)[01;31m)[00m
						(KON und)
						(NX eine pianobar))))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF das einzelzimmer)
				(LK kostet)
				(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m
			[01;31m(NX[00m
				(KON und)
				(NX das doppelzimmer)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(NX
					(NX hundert dreiundvierzig mark)
					[01;31m(VF[00m
						(PX
							(APPRART vom)
							(NX zeitangebot))[01;31m)[00m)
				(LK ware)
				(MF das hotel loccumerhof anscheinend besonders gunstig)
				(NF weil es gleich beim bahnhof liegt)[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['MF'], 'family': ['KOORD', 'VF', 'LK', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'APPRART', 'NN', 'ADV'), 'right siblings': [], 'left siblings': [(KOORD (KON und)), (VF (NX (ART das) (NX (NX (NN hotel)) (NX (NE loccumerhof))))), (LK (VXFIN (VAFIN ist)))], 'auto preterminal span': (84, 88), 'span': (84, 88), 'parent': 'SIMPX', 'label': 'PX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		[01;31m(SU[00m
			(SIMPX
				(VF die)
				(LK mus)
				(MF ich mit ihnen jetzt noch)
				(VC absprechen))[01;31m)[00m
		[01;31m(SU[00m [01;33m(PX[00m
			[01;31m(NX[00m
				(PX zum einen)
				[01;31m(NX[00m
					(NX das maritimhotel in hannover) [01;33mPX)[00m
					[01;31m(R[00m [01;33m(SIMPX[00m
						(C welches)
						[01;31m(FKOORD[00m
							[01;31m(MVC[00m
								(MF am bahnhof)
								(VC liegt)[01;31m)[00m [01;33mSIMPX)[00m
							(KON und)
							[01;31m(MVC[00m
								(MF zum zentrum funfzehn minuten)
								[01;31m(VC[00m
									[01;31m(NX[00m
										(NN laufzeit)[01;31m)[00m
									[01;33m(SIMPX[00m (LK hat)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF es) [01;33mSIMPX)[00m
				(LK gibt)
				(MF
					(ADVX dort)
					(NX
						(NX eine cafeteria)
						[01;31m(VF[00m
							(NX
								(NN garage))[01;31m)[00m))[01;31m)[00m
			[01;31m(SIMPX[00m
				(LK ist)
				(MF naturlich dann nicht nicht unbedingt so wichtig)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF einzelzimmer)
				(LK kostet)
				(NX hundert einundfunfzig mark doppelzimmer hundert funf mark))[01;31m)[00m
		[01;31m(SU[00m
			(NX dann das hotel luisenhof)
			(ADJX funf minuten vom bahnhof entfernt also etwas schneller)
			(SIMPX es gibt eine bar ein restaurant und ebenfalls eine garage)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX und das hotel loccumerhof ist gleich beim bahnhof anscheinend)
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(SIMPX
				(VF es)
				(LK gibt)
				(MF
					(NX
						[01;31m(NX[00m
							(ART ein)
							(NX schwimm und dampfbad)[01;31m)[00m
						(KON und)
						(NX eine pianobar))))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF das einzelzimmer)
				(LK kostet)
				(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m
			[01;31m(NX[00m
				(KON und)
				(NX das doppelzimmer)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(NX
					(NX hundert dreiundvierzig mark)
					[01;31m(VF[00m
						(PX
							(APPRART vom)
							(NX zeitangebot))[01;31m)[00m)
				(LK ware)
				(MF das hotel loccumerhof anscheinend besonders gunstig)
				(NF weil es gleich beim bahnhof liegt)[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SU', 'SU', 'SU', 'SU', 'SU', 'SU', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'PIAT', 'NN', 'VVPP', 'PDS', 'VMFIN', 'PPER', 'APPR', 'PPER', 'ADV', 'ADV', 'VVINF', 'APPRART', 'PIS', 'ART', 'NE', 'APPR', 'NE', 'PRELS', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPRART', 'NN', 'CARD', 'NN', 'NN', 'VAFIN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NN', 'VAFIN', 'ADV', 'ADV', 'PTKNEG', 'PTKNEG', 'ADV', 'ADV', 'ADJD', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN', 'NN', 'CARD', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'ADJD', 'ADV', 'ADV', 'ADJD', 'PPER', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ART', 'NN', 'KON', 'ART', 'NN', 'NE', 'VAFIN', 'ADV', 'APPRART', 'NN', 'ADV', 'KON', 'PPER', 'VVFIN', 'ART', 'TRUNC', 'KON', 'NN', 'KON', 'ART', 'NN', 'KON', 'ART', 'NN', 'VVFIN', 'ADV', 'CARD', 'CARD', 'NN', 'KON', 'ART', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'VAFIN', 'ART', 'NN', 'NE', 'ADV', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'VVFIN'), 'right siblings': ['SU', 'SU', 'SU', 'SU', 'SU', 'SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 127), 'span': (9, 17), 'left siblings': ['SU'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen)
		[01;31m(SU[00m [01;33m(PX[00m
			[01;31m(NX[00m
				(PX zum einen)
				[01;31m(NX[00m
					(NX das maritimhotel in hannover) [01;33mPX)[00m
					[01;31m(R[00m [01;33m(SIMPX[00m
						(C welches)
						[01;31m(FKOORD[00m
							[01;31m(MVC[00m
								(MF am bahnhof)
								(VC liegt)[01;31m)[00m [01;33mSIMPX)[00m
							(KON und)
							[01;31m(MVC[00m
								(MF zum zentrum funfzehn minuten)
								[01;31m(VC[00m
									[01;31m(NX[00m
										(NN laufzeit)[01;31m)[00m
									[01;33m(SIMPX[00m (LK hat)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF es) [01;33mSIMPX)[00m
				(LK gibt)
				(MF
					(ADVX dort)
					(NX
						(NX eine cafeteria)
						[01;31m(VF[00m
							(NX
								(NN garage))[01;31m)[00m))[01;31m)[00m
			[01;31m(SIMPX[00m
				(LK ist)
				(MF naturlich dann nicht nicht unbedingt so wichtig)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF einzelzimmer)
				(LK kostet)
				(NX hundert einundfunfzig mark doppelzimmer hundert funf mark))[01;31m)[00m
		[01;31m(SU[00m
			(NX dann das hotel luisenhof)
			(ADJX funf minuten vom bahnhof entfernt also etwas schneller)
			(SIMPX es gibt eine bar ein restaurant und ebenfalls eine garage)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX und das hotel loccumerhof ist gleich beim bahnhof anscheinend)
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(SIMPX
				(VF es)
				(LK gibt)
				(MF
					(NX
						[01;31m(NX[00m
							(ART ein)
							(NX schwimm und dampfbad)[01;31m)[00m
						(KON und)
						(NX eine pianobar))))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF das einzelzimmer)
				(LK kostet)
				(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m
			[01;31m(NX[00m
				(KON und)
				(NX das doppelzimmer)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(NX
					(NX hundert dreiundvierzig mark)
					[01;31m(VF[00m
						(PX
							(APPRART vom)
							(NX zeitangebot))[01;31m)[00m)
				(LK ware)
				(MF das hotel loccumerhof anscheinend besonders gunstig)
				(NF weil es gleich beim bahnhof liegt)[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['PX', 'NX'], 'family': ['NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'PIS', 'ART', 'NE', 'APPR', 'NE', 'PRELS', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPRART', 'NN', 'CARD', 'NN', 'NN', 'VAFIN'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (17, 34), 'span': (17, 34), 'left siblings': [], 'label': 'NX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen)
		[01;31m(SU[00m [01;33m(PX[00m
			(PX zum einen)
			[01;31m(NX[00m
				(NX das maritimhotel in hannover) [01;33mPX)[00m
				[01;31m(R[00m [01;33m(SIMPX[00m
					(C welches)
					[01;31m(FKOORD[00m
						[01;31m(MVC[00m
							(MF am bahnhof)
							(VC liegt)[01;31m)[00m [01;33mSIMPX)[00m
						(KON und)
						[01;31m(MVC[00m
							(MF zum zentrum funfzehn minuten)
							[01;31m(VC[00m
								[01;31m(NX[00m
									(NN laufzeit)[01;31m)[00m
								[01;33m(SIMPX[00m (LK hat)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF es) [01;33mSIMPX)[00m
				(LK gibt)
				(MF
					(ADVX dort)
					(NX
						(NX eine cafeteria)
						[01;31m(VF[00m
							(NX
								(NN garage))[01;31m)[00m))[01;31m)[00m
			[01;31m(SIMPX[00m
				(LK ist)
				(MF naturlich dann nicht nicht unbedingt so wichtig)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF einzelzimmer)
				(LK kostet)
				(NX hundert einundfunfzig mark doppelzimmer hundert funf mark))[01;31m)[00m
		[01;31m(SU[00m
			(NX dann das hotel luisenhof)
			(ADJX funf minuten vom bahnhof entfernt also etwas schneller)
			(SIMPX es gibt eine bar ein restaurant und ebenfalls eine garage)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX und das hotel loccumerhof ist gleich beim bahnhof anscheinend)
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(SIMPX
				(VF es)
				(LK gibt)
				(MF
					(NX
						[01;31m(NX[00m
							(ART ein)
							(NX schwimm und dampfbad)[01;31m)[00m
						(KON und)
						(NX eine pianobar))))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF das einzelzimmer)
				(LK kostet)
				(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m
			[01;31m(NX[00m
				(KON und)
				(NX das doppelzimmer)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(NX
					(NX hundert dreiundvierzig mark)
					[01;31m(VF[00m
						(PX
							(APPRART vom)
							(NX zeitangebot))[01;31m)[00m)
				(LK ware)
				(MF das hotel loccumerhof anscheinend besonders gunstig)
				(NF weil es gleich beim bahnhof liegt)[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['PX', 'NX'], 'family': ['SU', 'SIMPX', 'SU', 'SU', 'SU', 'SU', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'PIAT', 'NN', 'VVPP', 'PDS', 'VMFIN', 'PPER', 'APPR', 'PPER', 'ADV', 'ADV', 'VVINF', 'APPRART', 'PIS', 'ART', 'NE', 'APPR', 'NE', 'PRELS', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPRART', 'NN', 'CARD', 'NN', 'NN', 'VAFIN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NN', 'VAFIN', 'ADV', 'ADV', 'PTKNEG', 'PTKNEG', 'ADV', 'ADV', 'ADJD', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN', 'NN', 'CARD', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'ADJD', 'ADV', 'ADV', 'ADJD', 'PPER', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ART', 'NN', 'KON', 'ART', 'NN', 'NE', 'VAFIN', 'ADV', 'APPRART', 'NN', 'ADV', 'KON', 'PPER', 'VVFIN', 'ART', 'TRUNC', 'KON', 'NN', 'KON', 'ART', 'NN', 'KON', 'ART', 'NN', 'VVFIN', 'ADV', 'CARD', 'CARD', 'NN', 'KON', 'ART', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'VAFIN', 'ART', 'NN', 'NE', 'ADV', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'VVFIN'), 'right siblings': ['SU', 'SU', 'SU', 'SU', 'SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 127), 'span': (17, 34), 'left siblings': ['SU', 'SIMPX'], 'label': 'SU', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen)
		[01;33m(PX[00m (PX zum einen)
		[01;31m(NX[00m
			(NX das maritimhotel in hannover) [01;33mPX)[00m
			[01;31m(R[00m [01;33m(SIMPX[00m
				(C welches)
				[01;31m(FKOORD[00m
					[01;31m(MVC[00m
						(MF am bahnhof)
						(VC liegt)[01;31m)[00m [01;33mSIMPX)[00m
					(KON und)
					[01;31m(MVC[00m
						(MF zum zentrum funfzehn minuten)
						[01;31m(VC[00m
							[01;31m(NX[00m
								(NN laufzeit)[01;31m)[00m
							[01;33m(SIMPX[00m (LK hat)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF es) [01;33mSIMPX)[00m
				(LK gibt)
				(MF
					(ADVX dort)
					(NX
						(NX eine cafeteria)
						[01;31m(VF[00m
							(NX
								(NN garage))[01;31m)[00m))[01;31m)[00m
			[01;31m(SIMPX[00m
				(LK ist)
				(MF naturlich dann nicht nicht unbedingt so wichtig)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF einzelzimmer)
				(LK kostet)
				(NX hundert einundfunfzig mark doppelzimmer hundert funf mark))[01;31m)[00m
		[01;31m(SU[00m
			(NX dann das hotel luisenhof)
			(ADJX funf minuten vom bahnhof entfernt also etwas schneller)
			(SIMPX es gibt eine bar ein restaurant und ebenfalls eine garage)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX und das hotel loccumerhof ist gleich beim bahnhof anscheinend)
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(SIMPX
				(VF es)
				(LK gibt)
				(MF
					(NX
						[01;31m(NX[00m
							(ART ein)
							(NX schwimm und dampfbad)[01;31m)[00m
						(KON und)
						(NX eine pianobar))))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF das einzelzimmer)
				(LK kostet)
				(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m
			[01;31m(NX[00m
				(KON und)
				(NX das doppelzimmer)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(NX
					(NX hundert dreiundvierzig mark)
					[01;31m(VF[00m
						(PX
							(APPRART vom)
							(NX zeitangebot))[01;31m)[00m)
				(LK ware)
				(MF das hotel loccumerhof anscheinend besonders gunstig)
				(NF weil es gleich beim bahnhof liegt)[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['NX', 'R'], 'family': ['SU', 'SIMPX', 'PX', 'NX', 'SU', 'SU', 'SU', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'PIAT', 'NN', 'VVPP', 'PDS', 'VMFIN', 'PPER', 'APPR', 'PPER', 'ADV', 'ADV', 'VVINF', 'APPRART', 'PIS', 'ART', 'NE', 'APPR', 'NE', 'PRELS', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPRART', 'NN', 'CARD', 'NN', 'NN', 'VAFIN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NN', 'VAFIN', 'ADV', 'ADV', 'PTKNEG', 'PTKNEG', 'ADV', 'ADV', 'ADJD', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN', 'NN', 'CARD', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'ADJD', 'ADV', 'ADV', 'ADJD', 'PPER', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ART', 'NN', 'KON', 'ART', 'NN', 'NE', 'VAFIN', 'ADV', 'APPRART', 'NN', 'ADV', 'KON', 'PPER', 'VVFIN', 'ART', 'TRUNC', 'KON', 'NN', 'KON', 'ART', 'NN', 'KON', 'ART', 'NN', 'VVFIN', 'ADV', 'CARD', 'CARD', 'NN', 'KON', 'ART', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'VAFIN', 'ART', 'NN', 'NE', 'ADV', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'VVFIN'), 'right siblings': ['SU', 'SU', 'SU', 'SU', 'SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 127), 'span': (19, 34), 'left siblings': ['SU', 'SIMPX', 'PX'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen)
		[01;36m(PX[00m
			(PX zum einen)
			(NX das maritimhotel in hannover)[01;36m)[00m
		[01;31m(R[00m [01;33m(SIMPX[00m
			(C welches)
			[01;31m(FKOORD[00m
				[01;31m(MVC[00m
					(MF am bahnhof)
					(VC liegt)[01;31m)[00m [01;33mSIMPX)[00m
				(KON und)
				[01;31m(MVC[00m
					(MF zum zentrum funfzehn minuten)
					[01;31m(VC[00m
						[01;31m(NX[00m
							(NN laufzeit)[01;31m)[00m
						[01;33m(SIMPX[00m (LK hat)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF es) [01;33mSIMPX)[00m
				(LK gibt)
				(MF
					(ADVX dort)
					(NX
						(NX eine cafeteria)
						[01;31m(VF[00m
							(NX
								(NN garage))[01;31m)[00m))[01;31m)[00m
			[01;31m(SIMPX[00m
				(LK ist)
				(MF naturlich dann nicht nicht unbedingt so wichtig)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF einzelzimmer)
				(LK kostet)
				(NX hundert einundfunfzig mark doppelzimmer hundert funf mark))[01;31m)[00m
		[01;31m(SU[00m
			(NX dann das hotel luisenhof)
			(ADJX funf minuten vom bahnhof entfernt also etwas schneller)
			(SIMPX es gibt eine bar ein restaurant und ebenfalls eine garage)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX und das hotel loccumerhof ist gleich beim bahnhof anscheinend)
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(SIMPX
				(VF es)
				(LK gibt)
				(MF
					(NX
						[01;31m(NX[00m
							(ART ein)
							(NX schwimm und dampfbad)[01;31m)[00m
						(KON und)
						(NX eine pianobar))))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF das einzelzimmer)
				(LK kostet)
				(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m
			[01;31m(NX[00m
				(KON und)
				(NX das doppelzimmer)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(NX
					(NX hundert dreiundvierzig mark)
					[01;31m(VF[00m
						(PX
							(APPRART vom)
							(NX zeitangebot))[01;31m)[00m)
				(LK ware)
				(MF das hotel loccumerhof anscheinend besonders gunstig)
				(NF weil es gleich beim bahnhof liegt)[01;31m)[00m[01;31m)[00m))
Step:UNSET add
{'subtrees': ['PX', 'NX'], 'family': ['SU', 'SIMPX', 'PX', 'R', 'SU', 'SU', 'SU', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'PIS', 'ART', 'NE', 'APPR', 'NE'), 'right siblings': [(R (C (NX (PRELS welches))) (FKOORD (MVC (MF (PX (APPRART am) (NX (NN bahnhof)))) (VC (VXFIN (VVFIN liegt)))) (KON und) (MVC (MF (PX (APPRART zum) (NX (NN zentrum))) (NX (ADJX (CARD funfzehn)) (NN minuten))) (VC (NX (NN laufzeit)) (LK (VXFIN (VAFIN hat))))))), (SU (SIMPX (VF (NX (PPER es))) (LK (VXFIN (VVFIN gibt))) (MF (ADVX (ADV dort)) (NX (NX (ART eine) (NN cafeteria)) (VF (NX (NN garage)))))) (SIMPX (LK (VXFIN (VAFIN ist))) (MF (ADVX (ADV naturlich)) (ADVX (ADV dann)) (ADVX (PTKNEG nicht)) (ADVX (PTKNEG nicht)) (ADVX (ADV unbedingt)) (ADJX (ADVX (ADV so)) (ADJD wichtig))))), (SU (SIMPX (VF (NX (NN einzelzimmer))) (LK (VXFIN (VVFIN kostet))) (NX (MF (NX (NX (ADJX (CARD hundert) (CARD einundfunfzig)) (NN mark)) (NX (NN doppelzimmer))) (NX (ADJX (CARD hundert) (CARD funf)) (NN mark)))))), (SU (NX (ADVX (ADV dann)) (NX (ART das) (NX (NX (NN hotel)) (NX (NE luisenhof))))) (ADJX (ADJX (NX (NX (ADJX (CARD funf)) (NN minuten)) (PX (APPRART vom) (NX (NN bahnhof)))) (ADJD entfernt)) (DM (ADVX (ADV also))) (ADJX (ADVX (ADV etwas)) (ADJD schneller))) (SIMPX (VF (NX (PPER es))) (LK (VXFIN (VVFIN gibt))) (MF (NX (MF (NX (ART eine) (NN bar)) (NX (ART ein) (NN restaurant))) (KON und) (NX (ADVX (ADV ebenfalls)) (NX (ART eine) (NN garage))))))), (SU (SIMPX (KOORD (KON und)) (VF (NX (ART das) (NX (NX (NN hotel)) (NX (NE loccumerhof))))) (LK (VXFIN (VAFIN ist))) (PX (MF (MF (PX (ADVX (ADV gleich)) (APPRART beim) (NX (NN bahnhof)))) (NF (ADVX (ADV anscheinend)))))) (KOORD (KON und)) (SIMPX (VF (NX (PPER es))) (LK (VXFIN (VVFIN gibt))) (MF (NX (NX (ART ein) (NX (TRUNC schwimm) (KON und) (NN dampfbad))) (KON und) (NX (ART eine) (NN pianobar)))))), (SU (SIMPX (KOORD (KON und)) (VF (NX (ART das) (NN einzelzimmer))) (LK (VXFIN (VVFIN kostet))) (MF (ADVX (ADV allerdings)) (NX (ADJX (CARD zweihundert) (CARD achtundvierzig)) (NN mark)))) (NX (KON und) (NX (ART das) (NN doppelzimmer)))), (SU (SIMPX (NX (NX (ADJX (CARD hundert) (CARD dreiundvierzig)) (NN mark)) (VF (PX (APPRART vom) (NX (NN zeitangebot))))) (LK (VXFIN (VAFIN ware))) (MF (NX (ART das) (NX (NX (NN hotel)) (NX (NE loccumerhof)))) (ADVX (ADV anscheinend)) (ADJX (ADVX (ADV besonders)) (ADJD gunstig))) (NF (SIMPX (C (KOUS weil)) (MF (NX (PPER es)) (PX (ADVX (ADV gleich)) (APPRART beim) (NX (NN bahnhof)))) (VC (VXFIN (VVFIN liegt)))))))], 'left siblings': [(SU (SIMPX (VF (ADVX (ADV jetzt))) (LK (VXFIN (VAFIN habe))) (MF (NX (PPER ich)) (NX (PRF mir)) (ADVX (ADV auch)) (ADVX (ADV schon)) (NX (PIAT einige) (NN hotelangebote))) (VC (VXINF (VVPP herausgesucht))))), (SIMPX (VF (NX (PDS die))) (LK (VXFIN (VMFIN mus))) (MF (NX (PPER ich)) (PX (APPR mit) (NX (PPER ihnen))) (ADVX (ADV jetzt)) (ADVX (ADV noch))) (VC (VXINF (VVINF absprechen))))], 'auto preterminal span': (17, 23), 'span': (17, 23), 'parent': 'TURN', 'label': 'PX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen)
		(PX zum einen das maritimhotel in hannover)
		[01;31m(R[00m [01;33m(SIMPX[00m
			(C welches)
			[01;31m(FKOORD[00m
				[01;31m(MVC[00m
					(MF am bahnhof)
					(VC liegt)[01;31m)[00m [01;33mSIMPX)[00m
				(KON und)
				[01;31m(MVC[00m
					(MF zum zentrum funfzehn minuten)
					[01;31m(VC[00m
						[01;31m(NX[00m
							(NN laufzeit)[01;31m)[00m
						[01;33m(SIMPX[00m (LK hat)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF es) [01;33mSIMPX)[00m
				(LK gibt)
				(MF
					(ADVX dort)
					(NX
						(NX eine cafeteria)
						[01;31m(VF[00m
							(NX
								(NN garage))[01;31m)[00m))[01;31m)[00m
			[01;31m(SIMPX[00m
				(LK ist)
				(MF naturlich dann nicht nicht unbedingt so wichtig)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF einzelzimmer)
				(LK kostet)
				(NX hundert einundfunfzig mark doppelzimmer hundert funf mark))[01;31m)[00m
		[01;31m(SU[00m
			(NX dann das hotel luisenhof)
			(ADJX funf minuten vom bahnhof entfernt also etwas schneller)
			(SIMPX es gibt eine bar ein restaurant und ebenfalls eine garage)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX und das hotel loccumerhof ist gleich beim bahnhof anscheinend)
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(SIMPX
				(VF es)
				(LK gibt)
				(MF
					(NX
						[01;31m(NX[00m
							(ART ein)
							(NX schwimm und dampfbad)[01;31m)[00m
						(KON und)
						(NX eine pianobar))))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF das einzelzimmer)
				(LK kostet)
				(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m
			[01;31m(NX[00m
				(KON und)
				(NX das doppelzimmer)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(NX
					(NX hundert dreiundvierzig mark)
					[01;31m(VF[00m
						(PX
							(APPRART vom)
							(NX zeitangebot))[01;31m)[00m)
				(LK ware)
				(MF das hotel loccumerhof anscheinend besonders gunstig)
				(NF weil es gleich beim bahnhof liegt)[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['C', 'FKOORD'], 'family': ['SU', 'SIMPX', 'PX', 'R', 'SU', 'SU', 'SU', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'PIAT', 'NN', 'VVPP', 'PDS', 'VMFIN', 'PPER', 'APPR', 'PPER', 'ADV', 'ADV', 'VVINF', 'APPRART', 'PIS', 'ART', 'NE', 'APPR', 'NE', 'PRELS', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPRART', 'NN', 'CARD', 'NN', 'NN', 'VAFIN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NN', 'VAFIN', 'ADV', 'ADV', 'PTKNEG', 'PTKNEG', 'ADV', 'ADV', 'ADJD', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN', 'NN', 'CARD', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'ADJD', 'ADV', 'ADV', 'ADJD', 'PPER', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ART', 'NN', 'KON', 'ART', 'NN', 'NE', 'VAFIN', 'ADV', 'APPRART', 'NN', 'ADV', 'KON', 'PPER', 'VVFIN', 'ART', 'TRUNC', 'KON', 'NN', 'KON', 'ART', 'NN', 'KON', 'ART', 'NN', 'VVFIN', 'ADV', 'CARD', 'CARD', 'NN', 'KON', 'ART', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'VAFIN', 'ART', 'NN', 'NE', 'ADV', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'VVFIN'), 'right siblings': ['SU', 'SU', 'SU', 'SU', 'SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 127), 'span': (23, 34), 'left siblings': ['SU', 'SIMPX', 'PX'], 'label': 'R', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen)
		(PX zum einen das maritimhotel in hannover)
		[01;33m(SIMPX[00m (C welches)
		[01;31m(FKOORD[00m
			[01;31m(MVC[00m
				(MF am bahnhof)
				(VC liegt)[01;31m)[00m [01;33mSIMPX)[00m
			(KON und)
			[01;31m(MVC[00m
				(MF zum zentrum funfzehn minuten)
				[01;31m(VC[00m
					[01;31m(NX[00m
						(NN laufzeit)[01;31m)[00m
					[01;33m(SIMPX[00m (LK hat)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF es) [01;33mSIMPX)[00m
				(LK gibt)
				(MF
					(ADVX dort)
					(NX
						(NX eine cafeteria)
						[01;31m(VF[00m
							(NX
								(NN garage))[01;31m)[00m))[01;31m)[00m
			[01;31m(SIMPX[00m
				(LK ist)
				(MF naturlich dann nicht nicht unbedingt so wichtig)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF einzelzimmer)
				(LK kostet)
				(NX hundert einundfunfzig mark doppelzimmer hundert funf mark))[01;31m)[00m
		[01;31m(SU[00m
			(NX dann das hotel luisenhof)
			(ADJX funf minuten vom bahnhof entfernt also etwas schneller)
			(SIMPX es gibt eine bar ein restaurant und ebenfalls eine garage)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX und das hotel loccumerhof ist gleich beim bahnhof anscheinend)
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(SIMPX
				(VF es)
				(LK gibt)
				(MF
					(NX
						[01;31m(NX[00m
							(ART ein)
							(NX schwimm und dampfbad)[01;31m)[00m
						(KON und)
						(NX eine pianobar))))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF das einzelzimmer)
				(LK kostet)
				(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m
			[01;31m(NX[00m
				(KON und)
				(NX das doppelzimmer)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(NX
					(NX hundert dreiundvierzig mark)
					[01;31m(VF[00m
						(PX
							(APPRART vom)
							(NX zeitangebot))[01;31m)[00m)
				(LK ware)
				(MF das hotel loccumerhof anscheinend besonders gunstig)
				(NF weil es gleich beim bahnhof liegt)[01;31m)[00m[01;31m)[00m))
Step:Co-ordination
{'subtrees': ['MF', 'VC'], 'family': ['MVC', 'KON', 'MVC'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'NN', 'VVFIN', 'KON', 'APPRART', 'NN', 'CARD', 'NN', 'NN', 'VAFIN'), 'right siblings': ['KON', 'MVC'], 'parent': 'FKOORD', 'auto preterminal span': (24, 34), 'span': (24, 27), 'left siblings': [], 'label': 'MVC', 'classified_type': 'Co-ordination', 'type': 'remove'}
(TOP
	(TURN
		(SU jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen)
		(PX zum einen das maritimhotel in hannover)
		[01;33m(SIMPX[00m (C welches)
		[01;31m(FKOORD[00m
			(MF am bahnhof)
			(VC liegt) [01;33mSIMPX)[00m
			(KON und)
			[01;31m(MVC[00m
				(MF zum zentrum funfzehn minuten)
				[01;31m(VC[00m
					[01;31m(NX[00m
						(NN laufzeit)[01;31m)[00m
					[01;33m(SIMPX[00m (LK hat)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF es) [01;33mSIMPX)[00m
				(LK gibt)
				(MF
					(ADVX dort)
					(NX
						(NX eine cafeteria)
						[01;31m(VF[00m
							(NX
								(NN garage))[01;31m)[00m))[01;31m)[00m
			[01;31m(SIMPX[00m
				(LK ist)
				(MF naturlich dann nicht nicht unbedingt so wichtig)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF einzelzimmer)
				(LK kostet)
				(NX hundert einundfunfzig mark doppelzimmer hundert funf mark))[01;31m)[00m
		[01;31m(SU[00m
			(NX dann das hotel luisenhof)
			(ADJX funf minuten vom bahnhof entfernt also etwas schneller)
			(SIMPX es gibt eine bar ein restaurant und ebenfalls eine garage)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX und das hotel loccumerhof ist gleich beim bahnhof anscheinend)
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(SIMPX
				(VF es)
				(LK gibt)
				(MF
					(NX
						[01;31m(NX[00m
							(ART ein)
							(NX schwimm und dampfbad)[01;31m)[00m
						(KON und)
						(NX eine pianobar))))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF das einzelzimmer)
				(LK kostet)
				(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m
			[01;31m(NX[00m
				(KON und)
				(NX das doppelzimmer)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(NX
					(NX hundert dreiundvierzig mark)
					[01;31m(VF[00m
						(PX
							(APPRART vom)
							(NX zeitangebot))[01;31m)[00m)
				(LK ware)
				(MF das hotel loccumerhof anscheinend besonders gunstig)
				(NF weil es gleich beim bahnhof liegt)[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['MF', 'VC', 'KON', 'MVC'], 'family': ['SU', 'SIMPX', 'PX', 'C', 'FKOORD', 'SU', 'SU', 'SU', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'PIAT', 'NN', 'VVPP', 'PDS', 'VMFIN', 'PPER', 'APPR', 'PPER', 'ADV', 'ADV', 'VVINF', 'APPRART', 'PIS', 'ART', 'NE', 'APPR', 'NE', 'PRELS', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPRART', 'NN', 'CARD', 'NN', 'NN', 'VAFIN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NN', 'VAFIN', 'ADV', 'ADV', 'PTKNEG', 'PTKNEG', 'ADV', 'ADV', 'ADJD', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN', 'NN', 'CARD', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'ADJD', 'ADV', 'ADV', 'ADJD', 'PPER', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ART', 'NN', 'KON', 'ART', 'NN', 'NE', 'VAFIN', 'ADV', 'APPRART', 'NN', 'ADV', 'KON', 'PPER', 'VVFIN', 'ART', 'TRUNC', 'KON', 'NN', 'KON', 'ART', 'NN', 'KON', 'ART', 'NN', 'VVFIN', 'ADV', 'CARD', 'CARD', 'NN', 'KON', 'ART', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'VAFIN', 'ART', 'NN', 'NE', 'ADV', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'VVFIN'), 'right siblings': ['SU', 'SU', 'SU', 'SU', 'SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 127), 'span': (24, 34), 'left siblings': ['SU', 'SIMPX', 'PX', 'C'], 'label': 'FKOORD', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen)
		(PX zum einen das maritimhotel in hannover)
		[01;36m(SIMPX[00m
			(C welches)
			(MF am bahnhof)
			(VC liegt)[01;36m)[00m
		(KON und)
		[01;31m(MVC[00m
			(MF zum zentrum funfzehn minuten)
			[01;31m(VC[00m
				[01;31m(NX[00m
					(NN laufzeit)[01;31m)[00m
				[01;33m(SIMPX[00m (LK hat)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF es) [01;33mSIMPX)[00m
				(LK gibt)
				(MF
					(ADVX dort)
					(NX
						(NX eine cafeteria)
						[01;31m(VF[00m
							(NX
								(NN garage))[01;31m)[00m))[01;31m)[00m
			[01;31m(SIMPX[00m
				(LK ist)
				(MF naturlich dann nicht nicht unbedingt so wichtig)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF einzelzimmer)
				(LK kostet)
				(NX hundert einundfunfzig mark doppelzimmer hundert funf mark))[01;31m)[00m
		[01;31m(SU[00m
			(NX dann das hotel luisenhof)
			(ADJX funf minuten vom bahnhof entfernt also etwas schneller)
			(SIMPX es gibt eine bar ein restaurant und ebenfalls eine garage)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX und das hotel loccumerhof ist gleich beim bahnhof anscheinend)
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(SIMPX
				(VF es)
				(LK gibt)
				(MF
					(NX
						[01;31m(NX[00m
							(ART ein)
							(NX schwimm und dampfbad)[01;31m)[00m
						(KON und)
						(NX eine pianobar))))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF das einzelzimmer)
				(LK kostet)
				(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m
			[01;31m(NX[00m
				(KON und)
				(NX das doppelzimmer)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(NX
					(NX hundert dreiundvierzig mark)
					[01;31m(VF[00m
						(PX
							(APPRART vom)
							(NX zeitangebot))[01;31m)[00m)
				(LK ware)
				(MF das hotel loccumerhof anscheinend besonders gunstig)
				(NF weil es gleich beim bahnhof liegt)[01;31m)[00m[01;31m)[00m))
Step:UNSET add
{'subtrees': ['C', 'MF', 'VC'], 'family': ['SU', 'SIMPX', 'PX', 'SIMPX', 'KON', 'MVC', 'SU', 'SU', 'SU', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PRELS', 'APPRART', 'NN', 'VVFIN'), 'right siblings': [(KON und), (MVC (MF (PX (APPRART zum) (NX (NN zentrum))) (NX (ADJX (CARD funfzehn)) (NN minuten))) (VC (NX (NN laufzeit)) (LK (VXFIN (VAFIN hat))))), (SU (SIMPX (VF (NX (PPER es))) (LK (VXFIN (VVFIN gibt))) (MF (ADVX (ADV dort)) (NX (NX (ART eine) (NN cafeteria)) (VF (NX (NN garage)))))) (SIMPX (LK (VXFIN (VAFIN ist))) (MF (ADVX (ADV naturlich)) (ADVX (ADV dann)) (ADVX (PTKNEG nicht)) (ADVX (PTKNEG nicht)) (ADVX (ADV unbedingt)) (ADJX (ADVX (ADV so)) (ADJD wichtig))))), (SU (SIMPX (VF (NX (NN einzelzimmer))) (LK (VXFIN (VVFIN kostet))) (NX (MF (NX (NX (ADJX (CARD hundert) (CARD einundfunfzig)) (NN mark)) (NX (NN doppelzimmer))) (NX (ADJX (CARD hundert) (CARD funf)) (NN mark)))))), (SU (NX (ADVX (ADV dann)) (NX (ART das) (NX (NX (NN hotel)) (NX (NE luisenhof))))) (ADJX (ADJX (NX (NX (ADJX (CARD funf)) (NN minuten)) (PX (APPRART vom) (NX (NN bahnhof)))) (ADJD entfernt)) (DM (ADVX (ADV also))) (ADJX (ADVX (ADV etwas)) (ADJD schneller))) (SIMPX (VF (NX (PPER es))) (LK (VXFIN (VVFIN gibt))) (MF (NX (MF (NX (ART eine) (NN bar)) (NX (ART ein) (NN restaurant))) (KON und) (NX (ADVX (ADV ebenfalls)) (NX (ART eine) (NN garage))))))), (SU (SIMPX (KOORD (KON und)) (VF (NX (ART das) (NX (NX (NN hotel)) (NX (NE loccumerhof))))) (LK (VXFIN (VAFIN ist))) (PX (MF (MF (PX (ADVX (ADV gleich)) (APPRART beim) (NX (NN bahnhof)))) (NF (ADVX (ADV anscheinend)))))) (KOORD (KON und)) (SIMPX (VF (NX (PPER es))) (LK (VXFIN (VVFIN gibt))) (MF (NX (NX (ART ein) (NX (TRUNC schwimm) (KON und) (NN dampfbad))) (KON und) (NX (ART eine) (NN pianobar)))))), (SU (SIMPX (KOORD (KON und)) (VF (NX (ART das) (NN einzelzimmer))) (LK (VXFIN (VVFIN kostet))) (MF (ADVX (ADV allerdings)) (NX (ADJX (CARD zweihundert) (CARD achtundvierzig)) (NN mark)))) (NX (KON und) (NX (ART das) (NN doppelzimmer)))), (SU (SIMPX (NX (NX (ADJX (CARD hundert) (CARD dreiundvierzig)) (NN mark)) (VF (PX (APPRART vom) (NX (NN zeitangebot))))) (LK (VXFIN (VAFIN ware))) (MF (NX (ART das) (NX (NX (NN hotel)) (NX (NE loccumerhof)))) (ADVX (ADV anscheinend)) (ADJX (ADVX (ADV besonders)) (ADJD gunstig))) (NF (SIMPX (C (KOUS weil)) (MF (NX (PPER es)) (PX (ADVX (ADV gleich)) (APPRART beim) (NX (NN bahnhof)))) (VC (VXFIN (VVFIN liegt)))))))], 'left siblings': [(SU (SIMPX (VF (ADVX (ADV jetzt))) (LK (VXFIN (VAFIN habe))) (MF (NX (PPER ich)) (NX (PRF mir)) (ADVX (ADV auch)) (ADVX (ADV schon)) (NX (PIAT einige) (NN hotelangebote))) (VC (VXINF (VVPP herausgesucht))))), (SIMPX (VF (NX (PDS die))) (LK (VXFIN (VMFIN mus))) (MF (NX (PPER ich)) (PX (APPR mit) (NX (PPER ihnen))) (ADVX (ADV jetzt)) (ADVX (ADV noch))) (VC (VXINF (VVINF absprechen)))), (PX (PX (APPRART zum) (NX (PIS einen))) (NX (NX (ART das) (NE maritimhotel)) (PX (APPR in) (NX (NE hannover)))))], 'auto preterminal span': (23, 27), 'span': (23, 27), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen)
		(PX zum einen das maritimhotel in hannover)
		(SIMPX welches am bahnhof liegt)
		(KON und)
		[01;31m(MVC[00m
			(MF zum zentrum funfzehn minuten)
			[01;31m(VC[00m
				[01;31m(NX[00m
					(NN laufzeit)[01;31m)[00m
				[01;33m(SIMPX[00m (LK hat)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF es) [01;33mSIMPX)[00m
				(LK gibt)
				(MF
					(ADVX dort)
					(NX
						(NX eine cafeteria)
						[01;31m(VF[00m
							(NX
								(NN garage))[01;31m)[00m))[01;31m)[00m
			[01;31m(SIMPX[00m
				(LK ist)
				(MF naturlich dann nicht nicht unbedingt so wichtig)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF einzelzimmer)
				(LK kostet)
				(NX hundert einundfunfzig mark doppelzimmer hundert funf mark))[01;31m)[00m
		[01;31m(SU[00m
			(NX dann das hotel luisenhof)
			(ADJX funf minuten vom bahnhof entfernt also etwas schneller)
			(SIMPX es gibt eine bar ein restaurant und ebenfalls eine garage)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX und das hotel loccumerhof ist gleich beim bahnhof anscheinend)
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(SIMPX
				(VF es)
				(LK gibt)
				(MF
					(NX
						[01;31m(NX[00m
							(ART ein)
							(NX schwimm und dampfbad)[01;31m)[00m
						(KON und)
						(NX eine pianobar))))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF das einzelzimmer)
				(LK kostet)
				(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m
			[01;31m(NX[00m
				(KON und)
				(NX das doppelzimmer)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(NX
					(NX hundert dreiundvierzig mark)
					[01;31m(VF[00m
						(PX
							(APPRART vom)
							(NX zeitangebot))[01;31m)[00m)
				(LK ware)
				(MF das hotel loccumerhof anscheinend besonders gunstig)
				(NF weil es gleich beim bahnhof liegt)[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['MF', 'VC'], 'family': ['SU', 'SIMPX', 'PX', 'SIMPX', 'KON', 'MVC', 'SU', 'SU', 'SU', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'PIAT', 'NN', 'VVPP', 'PDS', 'VMFIN', 'PPER', 'APPR', 'PPER', 'ADV', 'ADV', 'VVINF', 'APPRART', 'PIS', 'ART', 'NE', 'APPR', 'NE', 'PRELS', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPRART', 'NN', 'CARD', 'NN', 'NN', 'VAFIN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NN', 'VAFIN', 'ADV', 'ADV', 'PTKNEG', 'PTKNEG', 'ADV', 'ADV', 'ADJD', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN', 'NN', 'CARD', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'ADJD', 'ADV', 'ADV', 'ADJD', 'PPER', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ART', 'NN', 'KON', 'ART', 'NN', 'NE', 'VAFIN', 'ADV', 'APPRART', 'NN', 'ADV', 'KON', 'PPER', 'VVFIN', 'ART', 'TRUNC', 'KON', 'NN', 'KON', 'ART', 'NN', 'KON', 'ART', 'NN', 'VVFIN', 'ADV', 'CARD', 'CARD', 'NN', 'KON', 'ART', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'VAFIN', 'ART', 'NN', 'NE', 'ADV', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'VVFIN'), 'right siblings': ['SU', 'SU', 'SU', 'SU', 'SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 127), 'span': (28, 34), 'left siblings': ['SU', 'SIMPX', 'PX', 'SIMPX', 'KON'], 'label': 'MVC', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen)
		(PX zum einen das maritimhotel in hannover)
		(SIMPX welches am bahnhof liegt)
		(KON und)
		(MF zum zentrum funfzehn minuten)
		[01;31m(VC[00m
			[01;31m(NX[00m
				(NN laufzeit)[01;31m)[00m
			[01;33m(SIMPX[00m (LK hat)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF es) [01;33mSIMPX)[00m
				(LK gibt)
				(MF
					(ADVX dort)
					(NX
						(NX eine cafeteria)
						[01;31m(VF[00m
							(NX
								(NN garage))[01;31m)[00m))[01;31m)[00m
			[01;31m(SIMPX[00m
				(LK ist)
				(MF naturlich dann nicht nicht unbedingt so wichtig)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF einzelzimmer)
				(LK kostet)
				(NX hundert einundfunfzig mark doppelzimmer hundert funf mark))[01;31m)[00m
		[01;31m(SU[00m
			(NX dann das hotel luisenhof)
			(ADJX funf minuten vom bahnhof entfernt also etwas schneller)
			(SIMPX es gibt eine bar ein restaurant und ebenfalls eine garage)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX und das hotel loccumerhof ist gleich beim bahnhof anscheinend)
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(SIMPX
				(VF es)
				(LK gibt)
				(MF
					(NX
						[01;31m(NX[00m
							(ART ein)
							(NX schwimm und dampfbad)[01;31m)[00m
						(KON und)
						(NX eine pianobar))))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF das einzelzimmer)
				(LK kostet)
				(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m
			[01;31m(NX[00m
				(KON und)
				(NX das doppelzimmer)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(NX
					(NX hundert dreiundvierzig mark)
					[01;31m(VF[00m
						(PX
							(APPRART vom)
							(NX zeitangebot))[01;31m)[00m)
				(LK ware)
				(MF das hotel loccumerhof anscheinend besonders gunstig)
				(NF weil es gleich beim bahnhof liegt)[01;31m)[00m[01;31m)[00m))
Step:Single Word Phrase
{'subtrees': ['NN'], 'family': ['NX', 'LK'], 'over_word': True, 'over words': True, 'auto preterminals': ('NN', 'VAFIN'), 'right siblings': ['LK'], 'parent': 'VC', 'auto preterminal span': (32, 34), 'span': (32, 33), 'left siblings': [], 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(SU jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen)
		(PX zum einen das maritimhotel in hannover)
		(SIMPX welches am bahnhof liegt)
		(KON und)
		(MF zum zentrum funfzehn minuten)
		[01;31m(VC[00m
			(NN laufzeit)
			[01;33m(SIMPX[00m (LK hat)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF es) [01;33mSIMPX)[00m
				(LK gibt)
				(MF
					(ADVX dort)
					(NX
						(NX eine cafeteria)
						[01;31m(VF[00m
							(NX
								(NN garage))[01;31m)[00m))[01;31m)[00m
			[01;31m(SIMPX[00m
				(LK ist)
				(MF naturlich dann nicht nicht unbedingt so wichtig)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF einzelzimmer)
				(LK kostet)
				(NX hundert einundfunfzig mark doppelzimmer hundert funf mark))[01;31m)[00m
		[01;31m(SU[00m
			(NX dann das hotel luisenhof)
			(ADJX funf minuten vom bahnhof entfernt also etwas schneller)
			(SIMPX es gibt eine bar ein restaurant und ebenfalls eine garage)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX und das hotel loccumerhof ist gleich beim bahnhof anscheinend)
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(SIMPX
				(VF es)
				(LK gibt)
				(MF
					(NX
						[01;31m(NX[00m
							(ART ein)
							(NX schwimm und dampfbad)[01;31m)[00m
						(KON und)
						(NX eine pianobar))))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF das einzelzimmer)
				(LK kostet)
				(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m
			[01;31m(NX[00m
				(KON und)
				(NX das doppelzimmer)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(NX
					(NX hundert dreiundvierzig mark)
					[01;31m(VF[00m
						(PX
							(APPRART vom)
							(NX zeitangebot))[01;31m)[00m)
				(LK ware)
				(MF das hotel loccumerhof anscheinend besonders gunstig)
				(NF weil es gleich beim bahnhof liegt)[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['NN', 'LK'], 'family': ['SU', 'SIMPX', 'PX', 'SIMPX', 'KON', 'MF', 'VC', 'SU', 'SU', 'SU', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'PIAT', 'NN', 'VVPP', 'PDS', 'VMFIN', 'PPER', 'APPR', 'PPER', 'ADV', 'ADV', 'VVINF', 'APPRART', 'PIS', 'ART', 'NE', 'APPR', 'NE', 'PRELS', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPRART', 'NN', 'CARD', 'NN', 'NN', 'VAFIN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NN', 'VAFIN', 'ADV', 'ADV', 'PTKNEG', 'PTKNEG', 'ADV', 'ADV', 'ADJD', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN', 'NN', 'CARD', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'ADJD', 'ADV', 'ADV', 'ADJD', 'PPER', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ART', 'NN', 'KON', 'ART', 'NN', 'NE', 'VAFIN', 'ADV', 'APPRART', 'NN', 'ADV', 'KON', 'PPER', 'VVFIN', 'ART', 'TRUNC', 'KON', 'NN', 'KON', 'ART', 'NN', 'KON', 'ART', 'NN', 'VVFIN', 'ADV', 'CARD', 'CARD', 'NN', 'KON', 'ART', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'VAFIN', 'ART', 'NN', 'NE', 'ADV', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'VVFIN'), 'right siblings': ['SU', 'SU', 'SU', 'SU', 'SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 127), 'span': (32, 34), 'left siblings': ['SU', 'SIMPX', 'PX', 'SIMPX', 'KON', 'MF'], 'label': 'VC', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen)
		(PX zum einen das maritimhotel in hannover)
		(SIMPX welches am bahnhof liegt)
		(KON und)
		(MF zum zentrum funfzehn minuten)
		(NN laufzeit)
		[01;33m(SIMPX[00m (LK hat)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF es) [01;33mSIMPX)[00m
				(LK gibt)
				(MF
					(ADVX dort)
					(NX
						(NX eine cafeteria)
						[01;31m(VF[00m
							(NX
								(NN garage))[01;31m)[00m))[01;31m)[00m
			[01;31m(SIMPX[00m
				(LK ist)
				(MF naturlich dann nicht nicht unbedingt so wichtig)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF einzelzimmer)
				(LK kostet)
				(NX hundert einundfunfzig mark doppelzimmer hundert funf mark))[01;31m)[00m
		[01;31m(SU[00m
			(NX dann das hotel luisenhof)
			(ADJX funf minuten vom bahnhof entfernt also etwas schneller)
			(SIMPX es gibt eine bar ein restaurant und ebenfalls eine garage)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX und das hotel loccumerhof ist gleich beim bahnhof anscheinend)
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(SIMPX
				(VF es)
				(LK gibt)
				(MF
					(NX
						[01;31m(NX[00m
							(ART ein)
							(NX schwimm und dampfbad)[01;31m)[00m
						(KON und)
						(NX eine pianobar))))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF das einzelzimmer)
				(LK kostet)
				(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m
			[01;31m(NX[00m
				(KON und)
				(NX das doppelzimmer)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(NX
					(NX hundert dreiundvierzig mark)
					[01;31m(VF[00m
						(PX
							(APPRART vom)
							(NX zeitangebot))[01;31m)[00m)
				(LK ware)
				(MF das hotel loccumerhof anscheinend besonders gunstig)
				(NF weil es gleich beim bahnhof liegt)[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NN', 'VAFIN', 'ADV', 'ADV', 'PTKNEG', 'PTKNEG', 'ADV', 'ADV', 'ADJD'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (34, 48), 'span': (34, 40), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen)
		(PX zum einen das maritimhotel in hannover)
		(SIMPX welches am bahnhof liegt)
		(KON und)
		(MF zum zentrum funfzehn minuten)
		(NN laufzeit)
		[01;33m(SIMPX[00m (LK hat)
		[01;31m(SU[00m
			(VF es) [01;33mSIMPX)[00m
			(LK gibt)
			(MF
				(ADVX dort)
				(NX
					(NX eine cafeteria)
					[01;31m(VF[00m
						(NX
							(NN garage))[01;31m)[00m))
			[01;31m(SIMPX[00m
				(LK ist)
				(MF naturlich dann nicht nicht unbedingt so wichtig)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF einzelzimmer)
				(LK kostet)
				(NX hundert einundfunfzig mark doppelzimmer hundert funf mark))[01;31m)[00m
		[01;31m(SU[00m
			(NX dann das hotel luisenhof)
			(ADJX funf minuten vom bahnhof entfernt also etwas schneller)
			(SIMPX es gibt eine bar ein restaurant und ebenfalls eine garage)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX und das hotel loccumerhof ist gleich beim bahnhof anscheinend)
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(SIMPX
				(VF es)
				(LK gibt)
				(MF
					(NX
						[01;31m(NX[00m
							(ART ein)
							(NX schwimm und dampfbad)[01;31m)[00m
						(KON und)
						(NX eine pianobar))))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF das einzelzimmer)
				(LK kostet)
				(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m
			[01;31m(NX[00m
				(KON und)
				(NX das doppelzimmer)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(NX
					(NX hundert dreiundvierzig mark)
					[01;31m(VF[00m
						(PX
							(APPRART vom)
							(NX zeitangebot))[01;31m)[00m)
				(LK ware)
				(MF das hotel loccumerhof anscheinend besonders gunstig)
				(NF weil es gleich beim bahnhof liegt)[01;31m)[00m[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['VF', 'LK', 'MF', 'SIMPX'], 'family': ['SU', 'SIMPX', 'PX', 'SIMPX', 'KON', 'MF', 'NN', 'LK', 'SU', 'SU', 'SU', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'PIAT', 'NN', 'VVPP', 'PDS', 'VMFIN', 'PPER', 'APPR', 'PPER', 'ADV', 'ADV', 'VVINF', 'APPRART', 'PIS', 'ART', 'NE', 'APPR', 'NE', 'PRELS', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPRART', 'NN', 'CARD', 'NN', 'NN', 'VAFIN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NN', 'VAFIN', 'ADV', 'ADV', 'PTKNEG', 'PTKNEG', 'ADV', 'ADV', 'ADJD', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN', 'NN', 'CARD', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'ADJD', 'ADV', 'ADV', 'ADJD', 'PPER', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ART', 'NN', 'KON', 'ART', 'NN', 'NE', 'VAFIN', 'ADV', 'APPRART', 'NN', 'ADV', 'KON', 'PPER', 'VVFIN', 'ART', 'TRUNC', 'KON', 'NN', 'KON', 'ART', 'NN', 'KON', 'ART', 'NN', 'VVFIN', 'ADV', 'CARD', 'CARD', 'NN', 'KON', 'ART', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'VAFIN', 'ART', 'NN', 'NE', 'ADV', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'VVFIN'), 'right siblings': ['SU', 'SU', 'SU', 'SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 127), 'span': (34, 48), 'left siblings': ['SU', 'SIMPX', 'PX', 'SIMPX', 'KON', 'MF', 'NN', 'LK'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen)
		(PX zum einen das maritimhotel in hannover)
		(SIMPX welches am bahnhof liegt)
		(KON und)
		(MF zum zentrum funfzehn minuten)
		(NN laufzeit)
		[01;36m(SIMPX[00m
			(LK hat)
			(VF es)[01;36m)[00m
		(LK gibt)
		(MF
			(ADVX dort)
			(NX
				(NX eine cafeteria)
				[01;31m(VF[00m
					(NX
						(NN garage))[01;31m)[00m))
		[01;31m(SIMPX[00m
			(LK ist)
			(MF naturlich dann nicht nicht unbedingt so wichtig)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF einzelzimmer)
				(LK kostet)
				(NX hundert einundfunfzig mark doppelzimmer hundert funf mark))[01;31m)[00m
		[01;31m(SU[00m
			(NX dann das hotel luisenhof)
			(ADJX funf minuten vom bahnhof entfernt also etwas schneller)
			(SIMPX es gibt eine bar ein restaurant und ebenfalls eine garage)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX und das hotel loccumerhof ist gleich beim bahnhof anscheinend)
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(SIMPX
				(VF es)
				(LK gibt)
				(MF
					(NX
						[01;31m(NX[00m
							(ART ein)
							(NX schwimm und dampfbad)[01;31m)[00m
						(KON und)
						(NX eine pianobar))))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF das einzelzimmer)
				(LK kostet)
				(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m
			[01;31m(NX[00m
				(KON und)
				(NX das doppelzimmer)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(NX
					(NX hundert dreiundvierzig mark)
					[01;31m(VF[00m
						(PX
							(APPRART vom)
							(NX zeitangebot))[01;31m)[00m)
				(LK ware)
				(MF das hotel loccumerhof anscheinend besonders gunstig)
				(NF weil es gleich beim bahnhof liegt)[01;31m)[00m[01;31m)[00m))
Step:UNSET add
{'subtrees': ['LK', 'VF'], 'family': ['SU', 'SIMPX', 'PX', 'SIMPX', 'KON', 'MF', 'NN', 'SIMPX', 'LK', 'MF', 'SIMPX', 'SU', 'SU', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'PPER'), 'right siblings': [(LK (VXFIN (VVFIN gibt))), (MF (ADVX (ADV dort)) (NX (NX (ART eine) (NN cafeteria)) (VF (NX (NN garage))))), (SIMPX (LK (VXFIN (VAFIN ist))) (MF (ADVX (ADV naturlich)) (ADVX (ADV dann)) (ADVX (PTKNEG nicht)) (ADVX (PTKNEG nicht)) (ADVX (ADV unbedingt)) (ADJX (ADVX (ADV so)) (ADJD wichtig)))), (SU (SIMPX (VF (NX (NN einzelzimmer))) (LK (VXFIN (VVFIN kostet))) (NX (MF (NX (NX (ADJX (CARD hundert) (CARD einundfunfzig)) (NN mark)) (NX (NN doppelzimmer))) (NX (ADJX (CARD hundert) (CARD funf)) (NN mark)))))), (SU (NX (ADVX (ADV dann)) (NX (ART das) (NX (NX (NN hotel)) (NX (NE luisenhof))))) (ADJX (ADJX (NX (NX (ADJX (CARD funf)) (NN minuten)) (PX (APPRART vom) (NX (NN bahnhof)))) (ADJD entfernt)) (DM (ADVX (ADV also))) (ADJX (ADVX (ADV etwas)) (ADJD schneller))) (SIMPX (VF (NX (PPER es))) (LK (VXFIN (VVFIN gibt))) (MF (NX (MF (NX (ART eine) (NN bar)) (NX (ART ein) (NN restaurant))) (KON und) (NX (ADVX (ADV ebenfalls)) (NX (ART eine) (NN garage))))))), (SU (SIMPX (KOORD (KON und)) (VF (NX (ART das) (NX (NX (NN hotel)) (NX (NE loccumerhof))))) (LK (VXFIN (VAFIN ist))) (PX (MF (MF (PX (ADVX (ADV gleich)) (APPRART beim) (NX (NN bahnhof)))) (NF (ADVX (ADV anscheinend)))))) (KOORD (KON und)) (SIMPX (VF (NX (PPER es))) (LK (VXFIN (VVFIN gibt))) (MF (NX (NX (ART ein) (NX (TRUNC schwimm) (KON und) (NN dampfbad))) (KON und) (NX (ART eine) (NN pianobar)))))), (SU (SIMPX (KOORD (KON und)) (VF (NX (ART das) (NN einzelzimmer))) (LK (VXFIN (VVFIN kostet))) (MF (ADVX (ADV allerdings)) (NX (ADJX (CARD zweihundert) (CARD achtundvierzig)) (NN mark)))) (NX (KON und) (NX (ART das) (NN doppelzimmer)))), (SU (SIMPX (NX (NX (ADJX (CARD hundert) (CARD dreiundvierzig)) (NN mark)) (VF (PX (APPRART vom) (NX (NN zeitangebot))))) (LK (VXFIN (VAFIN ware))) (MF (NX (ART das) (NX (NX (NN hotel)) (NX (NE loccumerhof)))) (ADVX (ADV anscheinend)) (ADJX (ADVX (ADV besonders)) (ADJD gunstig))) (NF (SIMPX (C (KOUS weil)) (MF (NX (PPER es)) (PX (ADVX (ADV gleich)) (APPRART beim) (NX (NN bahnhof)))) (VC (VXFIN (VVFIN liegt)))))))], 'left siblings': [(SU (SIMPX (VF (ADVX (ADV jetzt))) (LK (VXFIN (VAFIN habe))) (MF (NX (PPER ich)) (NX (PRF mir)) (ADVX (ADV auch)) (ADVX (ADV schon)) (NX (PIAT einige) (NN hotelangebote))) (VC (VXINF (VVPP herausgesucht))))), (SIMPX (VF (NX (PDS die))) (LK (VXFIN (VMFIN mus))) (MF (NX (PPER ich)) (PX (APPR mit) (NX (PPER ihnen))) (ADVX (ADV jetzt)) (ADVX (ADV noch))) (VC (VXINF (VVINF absprechen)))), (PX (PX (APPRART zum) (NX (PIS einen))) (NX (NX (ART das) (NE maritimhotel)) (PX (APPR in) (NX (NE hannover))))), (SIMPX (C (NX (PRELS welches))) (MF (PX (APPRART am) (NX (NN bahnhof)))) (VC (VXFIN (VVFIN liegt)))), (KON und), (MF (PX (APPRART zum) (NX (NN zentrum))) (NX (ADJX (CARD funfzehn)) (NN minuten))), (NN laufzeit)], 'auto preterminal span': (33, 35), 'span': (33, 35), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen)
		(PX zum einen das maritimhotel in hannover)
		(SIMPX welches am bahnhof liegt)
		(KON und)
		(MF zum zentrum funfzehn minuten)
		(NN laufzeit)
		(SIMPX hat es)
		(LK gibt)
		(MF
			(ADVX dort)
			(NX
				(NX eine cafeteria)
				[01;31m(VF[00m
					(NX
						(NN garage))[01;31m)[00m))
		[01;31m(SIMPX[00m
			(LK ist)
			(MF naturlich dann nicht nicht unbedingt so wichtig)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF einzelzimmer)
				(LK kostet)
				(NX hundert einundfunfzig mark doppelzimmer hundert funf mark))[01;31m)[00m
		[01;31m(SU[00m
			(NX dann das hotel luisenhof)
			(ADJX funf minuten vom bahnhof entfernt also etwas schneller)
			(SIMPX es gibt eine bar ein restaurant und ebenfalls eine garage)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX und das hotel loccumerhof ist gleich beim bahnhof anscheinend)
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(SIMPX
				(VF es)
				(LK gibt)
				(MF
					(NX
						[01;31m(NX[00m
							(ART ein)
							(NX schwimm und dampfbad)[01;31m)[00m
						(KON und)
						(NX eine pianobar))))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF das einzelzimmer)
				(LK kostet)
				(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m
			[01;31m(NX[00m
				(KON und)
				(NX das doppelzimmer)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(NX
					(NX hundert dreiundvierzig mark)
					[01;31m(VF[00m
						(PX
							(APPRART vom)
							(NX zeitangebot))[01;31m)[00m)
				(LK ware)
				(MF das hotel loccumerhof anscheinend besonders gunstig)
				(NF weil es gleich beim bahnhof liegt)[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['NX'], 'family': ['NX', 'VF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'NN'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (37, 40), 'span': (39, 40), 'left siblings': ['NX'], 'label': 'VF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen)
		(PX zum einen das maritimhotel in hannover)
		(SIMPX welches am bahnhof liegt)
		(KON und)
		(MF zum zentrum funfzehn minuten)
		(NN laufzeit)
		(SIMPX hat es)
		(LK gibt)
		(MF dort eine cafeteria garage)
		[01;31m(SIMPX[00m
			(LK ist)
			(MF naturlich dann nicht nicht unbedingt so wichtig)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF einzelzimmer)
				(LK kostet)
				(NX hundert einundfunfzig mark doppelzimmer hundert funf mark))[01;31m)[00m
		[01;31m(SU[00m
			(NX dann das hotel luisenhof)
			(ADJX funf minuten vom bahnhof entfernt also etwas schneller)
			(SIMPX es gibt eine bar ein restaurant und ebenfalls eine garage)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX und das hotel loccumerhof ist gleich beim bahnhof anscheinend)
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(SIMPX
				(VF es)
				(LK gibt)
				(MF
					(NX
						[01;31m(NX[00m
							(ART ein)
							(NX schwimm und dampfbad)[01;31m)[00m
						(KON und)
						(NX eine pianobar))))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF das einzelzimmer)
				(LK kostet)
				(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m
			[01;31m(NX[00m
				(KON und)
				(NX das doppelzimmer)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(NX
					(NX hundert dreiundvierzig mark)
					[01;31m(VF[00m
						(PX
							(APPRART vom)
							(NX zeitangebot))[01;31m)[00m)
				(LK ware)
				(MF das hotel loccumerhof anscheinend besonders gunstig)
				(NF weil es gleich beim bahnhof liegt)[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['SU', 'SIMPX', 'PX', 'SIMPX', 'KON', 'MF', 'NN', 'SIMPX', 'LK', 'MF', 'SIMPX', 'SU', 'SU', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'PIAT', 'NN', 'VVPP', 'PDS', 'VMFIN', 'PPER', 'APPR', 'PPER', 'ADV', 'ADV', 'VVINF', 'APPRART', 'PIS', 'ART', 'NE', 'APPR', 'NE', 'PRELS', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPRART', 'NN', 'CARD', 'NN', 'NN', 'VAFIN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NN', 'VAFIN', 'ADV', 'ADV', 'PTKNEG', 'PTKNEG', 'ADV', 'ADV', 'ADJD', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN', 'NN', 'CARD', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'ADJD', 'ADV', 'ADV', 'ADJD', 'PPER', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ART', 'NN', 'KON', 'ART', 'NN', 'NE', 'VAFIN', 'ADV', 'APPRART', 'NN', 'ADV', 'KON', 'PPER', 'VVFIN', 'ART', 'TRUNC', 'KON', 'NN', 'KON', 'ART', 'NN', 'KON', 'ART', 'NN', 'VVFIN', 'ADV', 'CARD', 'CARD', 'NN', 'KON', 'ART', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'VAFIN', 'ART', 'NN', 'NE', 'ADV', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'VVFIN'), 'right siblings': ['SU', 'SU', 'SU', 'SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 127), 'span': (40, 48), 'left siblings': ['SU', 'SIMPX', 'PX', 'SIMPX', 'KON', 'MF', 'NN', 'SIMPX', 'LK', 'MF'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen)
		(PX zum einen das maritimhotel in hannover)
		(SIMPX welches am bahnhof liegt)
		(KON und)
		(MF zum zentrum funfzehn minuten)
		(NN laufzeit)
		(SIMPX hat es)
		(LK gibt)
		(MF dort eine cafeteria garage)
		(LK ist)
		(MF naturlich dann nicht nicht unbedingt so wichtig)
		[01;31m(SU[00m
			(SIMPX
				(VF einzelzimmer)
				(LK kostet)
				(NX hundert einundfunfzig mark doppelzimmer hundert funf mark))[01;31m)[00m
		[01;31m(SU[00m
			(NX dann das hotel luisenhof)
			(ADJX funf minuten vom bahnhof entfernt also etwas schneller)
			(SIMPX es gibt eine bar ein restaurant und ebenfalls eine garage)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX und das hotel loccumerhof ist gleich beim bahnhof anscheinend)
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(SIMPX
				(VF es)
				(LK gibt)
				(MF
					(NX
						[01;31m(NX[00m
							(ART ein)
							(NX schwimm und dampfbad)[01;31m)[00m
						(KON und)
						(NX eine pianobar))))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF das einzelzimmer)
				(LK kostet)
				(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m
			[01;31m(NX[00m
				(KON und)
				(NX das doppelzimmer)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(NX
					(NX hundert dreiundvierzig mark)
					[01;31m(VF[00m
						(PX
							(APPRART vom)
							(NX zeitangebot))[01;31m)[00m)
				(LK ware)
				(MF das hotel loccumerhof anscheinend besonders gunstig)
				(NF weil es gleich beim bahnhof liegt)[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SU', 'SIMPX', 'PX', 'SIMPX', 'KON', 'MF', 'NN', 'SIMPX', 'LK', 'MF', 'LK', 'MF', 'SU', 'SU', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'PIAT', 'NN', 'VVPP', 'PDS', 'VMFIN', 'PPER', 'APPR', 'PPER', 'ADV', 'ADV', 'VVINF', 'APPRART', 'PIS', 'ART', 'NE', 'APPR', 'NE', 'PRELS', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPRART', 'NN', 'CARD', 'NN', 'NN', 'VAFIN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NN', 'VAFIN', 'ADV', 'ADV', 'PTKNEG', 'PTKNEG', 'ADV', 'ADV', 'ADJD', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN', 'NN', 'CARD', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'ADJD', 'ADV', 'ADV', 'ADJD', 'PPER', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ART', 'NN', 'KON', 'ART', 'NN', 'NE', 'VAFIN', 'ADV', 'APPRART', 'NN', 'ADV', 'KON', 'PPER', 'VVFIN', 'ART', 'TRUNC', 'KON', 'NN', 'KON', 'ART', 'NN', 'KON', 'ART', 'NN', 'VVFIN', 'ADV', 'CARD', 'CARD', 'NN', 'KON', 'ART', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'VAFIN', 'ART', 'NN', 'NE', 'ADV', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'VVFIN'), 'right siblings': ['SU', 'SU', 'SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 127), 'span': (48, 57), 'left siblings': ['SU', 'SIMPX', 'PX', 'SIMPX', 'KON', 'MF', 'NN', 'SIMPX', 'LK', 'MF', 'LK', 'MF'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen)
		(PX zum einen das maritimhotel in hannover)
		(SIMPX welches am bahnhof liegt)
		(KON und)
		(MF zum zentrum funfzehn minuten)
		(NN laufzeit)
		(SIMPX hat es)
		(LK gibt)
		(MF dort eine cafeteria garage)
		(LK ist)
		(MF naturlich dann nicht nicht unbedingt so wichtig)
		(SIMPX einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		[01;31m(SU[00m
			(NX dann das hotel luisenhof)
			(ADJX funf minuten vom bahnhof entfernt also etwas schneller)
			(SIMPX es gibt eine bar ein restaurant und ebenfalls eine garage)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX und das hotel loccumerhof ist gleich beim bahnhof anscheinend)
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(SIMPX
				(VF es)
				(LK gibt)
				(MF
					(NX
						[01;31m(NX[00m
							(ART ein)
							(NX schwimm und dampfbad)[01;31m)[00m
						(KON und)
						(NX eine pianobar))))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF das einzelzimmer)
				(LK kostet)
				(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m
			[01;31m(NX[00m
				(KON und)
				(NX das doppelzimmer)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(NX
					(NX hundert dreiundvierzig mark)
					[01;31m(VF[00m
						(PX
							(APPRART vom)
							(NX zeitangebot))[01;31m)[00m)
				(LK ware)
				(MF das hotel loccumerhof anscheinend besonders gunstig)
				(NF weil es gleich beim bahnhof liegt)[01;31m)[00m[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['NX', 'ADJX', 'SIMPX'], 'family': ['SU', 'SIMPX', 'PX', 'SIMPX', 'KON', 'MF', 'NN', 'SIMPX', 'LK', 'MF', 'LK', 'MF', 'SIMPX', 'SU', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'PIAT', 'NN', 'VVPP', 'PDS', 'VMFIN', 'PPER', 'APPR', 'PPER', 'ADV', 'ADV', 'VVINF', 'APPRART', 'PIS', 'ART', 'NE', 'APPR', 'NE', 'PRELS', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPRART', 'NN', 'CARD', 'NN', 'NN', 'VAFIN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NN', 'VAFIN', 'ADV', 'ADV', 'PTKNEG', 'PTKNEG', 'ADV', 'ADV', 'ADJD', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN', 'NN', 'CARD', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'ADJD', 'ADV', 'ADV', 'ADJD', 'PPER', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ART', 'NN', 'KON', 'ART', 'NN', 'NE', 'VAFIN', 'ADV', 'APPRART', 'NN', 'ADV', 'KON', 'PPER', 'VVFIN', 'ART', 'TRUNC', 'KON', 'NN', 'KON', 'ART', 'NN', 'KON', 'ART', 'NN', 'VVFIN', 'ADV', 'CARD', 'CARD', 'NN', 'KON', 'ART', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'VAFIN', 'ART', 'NN', 'NE', 'ADV', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'VVFIN'), 'right siblings': ['SU', 'SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 127), 'span': (57, 79), 'left siblings': ['SU', 'SIMPX', 'PX', 'SIMPX', 'KON', 'MF', 'NN', 'SIMPX', 'LK', 'MF', 'LK', 'MF', 'SIMPX'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen)
		(PX zum einen das maritimhotel in hannover)
		(SIMPX welches am bahnhof liegt)
		(KON und)
		(MF zum zentrum funfzehn minuten)
		(NN laufzeit)
		(SIMPX hat es)
		(LK gibt)
		(MF dort eine cafeteria garage)
		(LK ist)
		(MF naturlich dann nicht nicht unbedingt so wichtig)
		(SIMPX einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(NX dann das hotel luisenhof)
		(ADJX funf minuten vom bahnhof entfernt also etwas schneller)
		(SIMPX es gibt eine bar ein restaurant und ebenfalls eine garage)
		[01;31m(SU[00m
			(SIMPX und das hotel loccumerhof ist gleich beim bahnhof anscheinend)
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(SIMPX
				(VF es)
				(LK gibt)
				(MF
					(NX
						[01;31m(NX[00m
							(ART ein)
							(NX schwimm und dampfbad)[01;31m)[00m
						(KON und)
						(NX eine pianobar))))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF das einzelzimmer)
				(LK kostet)
				(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m
			[01;31m(NX[00m
				(KON und)
				(NX das doppelzimmer)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(NX
					(NX hundert dreiundvierzig mark)
					[01;31m(VF[00m
						(PX
							(APPRART vom)
							(NX zeitangebot))[01;31m)[00m)
				(LK ware)
				(MF das hotel loccumerhof anscheinend besonders gunstig)
				(NF weil es gleich beim bahnhof liegt)[01;31m)[00m[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'KOORD', 'SIMPX'], 'family': ['SU', 'SIMPX', 'PX', 'SIMPX', 'KON', 'MF', 'NN', 'SIMPX', 'LK', 'MF', 'LK', 'MF', 'SIMPX', 'NX', 'ADJX', 'SIMPX', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'PIAT', 'NN', 'VVPP', 'PDS', 'VMFIN', 'PPER', 'APPR', 'PPER', 'ADV', 'ADV', 'VVINF', 'APPRART', 'PIS', 'ART', 'NE', 'APPR', 'NE', 'PRELS', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPRART', 'NN', 'CARD', 'NN', 'NN', 'VAFIN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NN', 'VAFIN', 'ADV', 'ADV', 'PTKNEG', 'PTKNEG', 'ADV', 'ADV', 'ADJD', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN', 'NN', 'CARD', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'ADJD', 'ADV', 'ADV', 'ADJD', 'PPER', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ART', 'NN', 'KON', 'ART', 'NN', 'NE', 'VAFIN', 'ADV', 'APPRART', 'NN', 'ADV', 'KON', 'PPER', 'VVFIN', 'ART', 'TRUNC', 'KON', 'NN', 'KON', 'ART', 'NN', 'KON', 'ART', 'NN', 'VVFIN', 'ADV', 'CARD', 'CARD', 'NN', 'KON', 'ART', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'VAFIN', 'ART', 'NN', 'NE', 'ADV', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'VVFIN'), 'right siblings': ['SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 127), 'span': (79, 98), 'left siblings': ['SU', 'SIMPX', 'PX', 'SIMPX', 'KON', 'MF', 'NN', 'SIMPX', 'LK', 'MF', 'LK', 'MF', 'SIMPX', 'NX', 'ADJX', 'SIMPX'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen)
		(PX zum einen das maritimhotel in hannover)
		(SIMPX welches am bahnhof liegt)
		(KON und)
		(MF zum zentrum funfzehn minuten)
		(NN laufzeit)
		(SIMPX hat es)
		(LK gibt)
		(MF dort eine cafeteria garage)
		(LK ist)
		(MF naturlich dann nicht nicht unbedingt so wichtig)
		(SIMPX einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(NX dann das hotel luisenhof)
		(ADJX funf minuten vom bahnhof entfernt also etwas schneller)
		(SIMPX es gibt eine bar ein restaurant und ebenfalls eine garage)
		(SIMPX und das hotel loccumerhof ist gleich beim bahnhof anscheinend)
		[01;31m(KOORD[00m
			(KON und)[01;31m)[00m
		(SIMPX
			(VF es)
			(LK gibt)
			(MF
				(NX
					[01;31m(NX[00m
						(ART ein)
						(NX schwimm und dampfbad)[01;31m)[00m
					(KON und)
					(NX eine pianobar))))
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF das einzelzimmer)
				(LK kostet)
				(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m
			[01;31m(NX[00m
				(KON und)
				(NX das doppelzimmer)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(NX
					(NX hundert dreiundvierzig mark)
					[01;31m(VF[00m
						(PX
							(APPRART vom)
							(NX zeitangebot))[01;31m)[00m)
				(LK ware)
				(MF das hotel loccumerhof anscheinend besonders gunstig)
				(NF weil es gleich beim bahnhof liegt)[01;31m)[00m[01;31m)[00m))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['SU', 'SIMPX', 'PX', 'SIMPX', 'KON', 'MF', 'NN', 'SIMPX', 'LK', 'MF', 'LK', 'MF', 'SIMPX', 'NX', 'ADJX', 'SIMPX', 'SIMPX', 'KOORD', 'SIMPX', 'SU', 'SU'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'PIAT', 'NN', 'VVPP', 'PDS', 'VMFIN', 'PPER', 'APPR', 'PPER', 'ADV', 'ADV', 'VVINF', 'APPRART', 'PIS', 'ART', 'NE', 'APPR', 'NE', 'PRELS', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPRART', 'NN', 'CARD', 'NN', 'NN', 'VAFIN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NN', 'VAFIN', 'ADV', 'ADV', 'PTKNEG', 'PTKNEG', 'ADV', 'ADV', 'ADJD', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN', 'NN', 'CARD', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'ADJD', 'ADV', 'ADV', 'ADJD', 'PPER', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ART', 'NN', 'KON', 'ART', 'NN', 'NE', 'VAFIN', 'ADV', 'APPRART', 'NN', 'ADV', 'KON', 'PPER', 'VVFIN', 'ART', 'TRUNC', 'KON', 'NN', 'KON', 'ART', 'NN', 'KON', 'ART', 'NN', 'VVFIN', 'ADV', 'CARD', 'CARD', 'NN', 'KON', 'ART', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'VAFIN', 'ART', 'NN', 'NE', 'ADV', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'VVFIN'), 'right siblings': ['SIMPX', 'SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 127), 'span': (88, 89), 'left siblings': ['SU', 'SIMPX', 'PX', 'SIMPX', 'KON', 'MF', 'NN', 'SIMPX', 'LK', 'MF', 'LK', 'MF', 'SIMPX', 'NX', 'ADJX', 'SIMPX', 'SIMPX'], 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(SU jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen)
		(PX zum einen das maritimhotel in hannover)
		(SIMPX welches am bahnhof liegt)
		(KON und)
		(MF zum zentrum funfzehn minuten)
		(NN laufzeit)
		(SIMPX hat es)
		(LK gibt)
		(MF dort eine cafeteria garage)
		(LK ist)
		(MF naturlich dann nicht nicht unbedingt so wichtig)
		(SIMPX einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(NX dann das hotel luisenhof)
		(ADJX funf minuten vom bahnhof entfernt also etwas schneller)
		(SIMPX es gibt eine bar ein restaurant und ebenfalls eine garage)
		(SIMPX und das hotel loccumerhof ist gleich beim bahnhof anscheinend)
		(KON und)
		(SIMPX
			(VF es)
			(LK gibt)
			(MF
				(NX
					[01;31m(NX[00m
						(ART ein)
						(NX schwimm und dampfbad)[01;31m)[00m
					(KON und)
					(NX eine pianobar))))
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF das einzelzimmer)
				(LK kostet)
				(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m
			[01;31m(NX[00m
				(KON und)
				(NX das doppelzimmer)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(NX
					(NX hundert dreiundvierzig mark)
					[01;31m(VF[00m
						(PX
							(APPRART vom)
							(NX zeitangebot))[01;31m)[00m)
				(LK ware)
				(MF das hotel loccumerhof anscheinend besonders gunstig)
				(NF weil es gleich beim bahnhof liegt)[01;31m)[00m[01;31m)[00m))
Step:Co-ordination
{'subtrees': ['ART', 'NX'], 'family': ['NX', 'KON', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'TRUNC', 'KON', 'NN', 'KON', 'ART', 'NN'), 'right siblings': ['KON', 'NX'], 'parent': 'NX', 'auto preterminal span': (91, 98), 'span': (91, 95), 'left siblings': [], 'label': 'NX', 'classified_type': 'Co-ordination', 'type': 'remove'}
(TOP
	(TURN
		(SU jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen)
		(PX zum einen das maritimhotel in hannover)
		(SIMPX welches am bahnhof liegt)
		(KON und)
		(MF zum zentrum funfzehn minuten)
		(NN laufzeit)
		(SIMPX hat es)
		(LK gibt)
		(MF dort eine cafeteria garage)
		(LK ist)
		(MF naturlich dann nicht nicht unbedingt so wichtig)
		(SIMPX einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(NX dann das hotel luisenhof)
		(ADJX funf minuten vom bahnhof entfernt also etwas schneller)
		(SIMPX es gibt eine bar ein restaurant und ebenfalls eine garage)
		(SIMPX und das hotel loccumerhof ist gleich beim bahnhof anscheinend)
		(KON und)
		(SIMPX es gibt ein schwimm und dampfbad und eine pianobar)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF das einzelzimmer)
				(LK kostet)
				(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m
			[01;31m(NX[00m
				(KON und)
				(NX das doppelzimmer)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(NX
					(NX hundert dreiundvierzig mark)
					[01;31m(VF[00m
						(PX
							(APPRART vom)
							(NX zeitangebot))[01;31m)[00m)
				(LK ware)
				(MF das hotel loccumerhof anscheinend besonders gunstig)
				(NF weil es gleich beim bahnhof liegt)[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['KOORD', 'VF', 'LK', 'MF'], 'family': ['SIMPX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'ART', 'NN', 'VVFIN', 'ADV', 'CARD', 'CARD', 'NN', 'KON', 'ART', 'NN'), 'right siblings': ['NX'], 'parent': 'SU', 'auto preterminal span': (98, 109), 'span': (98, 106), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen)
		(PX zum einen das maritimhotel in hannover)
		(SIMPX welches am bahnhof liegt)
		(KON und)
		(MF zum zentrum funfzehn minuten)
		(NN laufzeit)
		(SIMPX hat es)
		(LK gibt)
		(MF dort eine cafeteria garage)
		(LK ist)
		(MF naturlich dann nicht nicht unbedingt so wichtig)
		(SIMPX einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(NX dann das hotel luisenhof)
		(ADJX funf minuten vom bahnhof entfernt also etwas schneller)
		(SIMPX es gibt eine bar ein restaurant und ebenfalls eine garage)
		(SIMPX und das hotel loccumerhof ist gleich beim bahnhof anscheinend)
		(KON und)
		(SIMPX es gibt ein schwimm und dampfbad und eine pianobar)
		[01;31m(SU[00m
			(KOORD und)
			(VF das einzelzimmer)
			(LK kostet)
			(MF allerdings zweihundert achtundvierzig mark)
			[01;31m(NX[00m
				(KON und)
				(NX das doppelzimmer)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(NX
					(NX hundert dreiundvierzig mark)
					[01;31m(VF[00m
						(PX
							(APPRART vom)
							(NX zeitangebot))[01;31m)[00m)
				(LK ware)
				(MF das hotel loccumerhof anscheinend besonders gunstig)
				(NF weil es gleich beim bahnhof liegt)[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['KOORD', 'VF', 'LK', 'MF', 'NX'], 'family': ['SU', 'SIMPX', 'PX', 'SIMPX', 'KON', 'MF', 'NN', 'SIMPX', 'LK', 'MF', 'LK', 'MF', 'SIMPX', 'NX', 'ADJX', 'SIMPX', 'SIMPX', 'KON', 'SIMPX', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'PIAT', 'NN', 'VVPP', 'PDS', 'VMFIN', 'PPER', 'APPR', 'PPER', 'ADV', 'ADV', 'VVINF', 'APPRART', 'PIS', 'ART', 'NE', 'APPR', 'NE', 'PRELS', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPRART', 'NN', 'CARD', 'NN', 'NN', 'VAFIN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NN', 'VAFIN', 'ADV', 'ADV', 'PTKNEG', 'PTKNEG', 'ADV', 'ADV', 'ADJD', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN', 'NN', 'CARD', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'ADJD', 'ADV', 'ADV', 'ADJD', 'PPER', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ART', 'NN', 'KON', 'ART', 'NN', 'NE', 'VAFIN', 'ADV', 'APPRART', 'NN', 'ADV', 'KON', 'PPER', 'VVFIN', 'ART', 'TRUNC', 'KON', 'NN', 'KON', 'ART', 'NN', 'KON', 'ART', 'NN', 'VVFIN', 'ADV', 'CARD', 'CARD', 'NN', 'KON', 'ART', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'VAFIN', 'ART', 'NN', 'NE', 'ADV', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'VVFIN'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 127), 'span': (98, 109), 'left siblings': ['SU', 'SIMPX', 'PX', 'SIMPX', 'KON', 'MF', 'NN', 'SIMPX', 'LK', 'MF', 'LK', 'MF', 'SIMPX', 'NX', 'ADJX', 'SIMPX', 'SIMPX', 'KON', 'SIMPX'], 'label': 'SU', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen)
		(PX zum einen das maritimhotel in hannover)
		(SIMPX welches am bahnhof liegt)
		(KON und)
		(MF zum zentrum funfzehn minuten)
		(NN laufzeit)
		(SIMPX hat es)
		(LK gibt)
		(MF dort eine cafeteria garage)
		(LK ist)
		(MF naturlich dann nicht nicht unbedingt so wichtig)
		(SIMPX einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(NX dann das hotel luisenhof)
		(ADJX funf minuten vom bahnhof entfernt also etwas schneller)
		(SIMPX es gibt eine bar ein restaurant und ebenfalls eine garage)
		(SIMPX und das hotel loccumerhof ist gleich beim bahnhof anscheinend)
		(KON und)
		(SIMPX es gibt ein schwimm und dampfbad und eine pianobar)
		(KOORD und)
		(VF das einzelzimmer)
		(LK kostet)
		(MF allerdings zweihundert achtundvierzig mark)
		[01;31m(NX[00m
			(KON und)
			(NX das doppelzimmer)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(NX
					(NX hundert dreiundvierzig mark)
					[01;31m(VF[00m
						(PX
							(APPRART vom)
							(NX zeitangebot))[01;31m)[00m)
				(LK ware)
				(MF das hotel loccumerhof anscheinend besonders gunstig)
				(NF weil es gleich beim bahnhof liegt)[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['KON', 'NX'], 'family': ['SU', 'SIMPX', 'PX', 'SIMPX', 'KON', 'MF', 'NN', 'SIMPX', 'LK', 'MF', 'LK', 'MF', 'SIMPX', 'NX', 'ADJX', 'SIMPX', 'SIMPX', 'KON', 'SIMPX', 'KOORD', 'VF', 'LK', 'MF', 'NX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'PIAT', 'NN', 'VVPP', 'PDS', 'VMFIN', 'PPER', 'APPR', 'PPER', 'ADV', 'ADV', 'VVINF', 'APPRART', 'PIS', 'ART', 'NE', 'APPR', 'NE', 'PRELS', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPRART', 'NN', 'CARD', 'NN', 'NN', 'VAFIN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NN', 'VAFIN', 'ADV', 'ADV', 'PTKNEG', 'PTKNEG', 'ADV', 'ADV', 'ADJD', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN', 'NN', 'CARD', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'ADJD', 'ADV', 'ADV', 'ADJD', 'PPER', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ART', 'NN', 'KON', 'ART', 'NN', 'NE', 'VAFIN', 'ADV', 'APPRART', 'NN', 'ADV', 'KON', 'PPER', 'VVFIN', 'ART', 'TRUNC', 'KON', 'NN', 'KON', 'ART', 'NN', 'KON', 'ART', 'NN', 'VVFIN', 'ADV', 'CARD', 'CARD', 'NN', 'KON', 'ART', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'VAFIN', 'ART', 'NN', 'NE', 'ADV', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'VVFIN'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 127), 'span': (106, 109), 'left siblings': ['SU', 'SIMPX', 'PX', 'SIMPX', 'KON', 'MF', 'NN', 'SIMPX', 'LK', 'MF', 'LK', 'MF', 'SIMPX', 'NX', 'ADJX', 'SIMPX', 'SIMPX', 'KON', 'SIMPX', 'KOORD', 'VF', 'LK', 'MF'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen)
		(PX zum einen das maritimhotel in hannover)
		(SIMPX welches am bahnhof liegt)
		(KON und)
		(MF zum zentrum funfzehn minuten)
		(NN laufzeit)
		(SIMPX hat es)
		(LK gibt)
		(MF dort eine cafeteria garage)
		(LK ist)
		(MF naturlich dann nicht nicht unbedingt so wichtig)
		(SIMPX einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(NX dann das hotel luisenhof)
		(ADJX funf minuten vom bahnhof entfernt also etwas schneller)
		(SIMPX es gibt eine bar ein restaurant und ebenfalls eine garage)
		(SIMPX und das hotel loccumerhof ist gleich beim bahnhof anscheinend)
		(KON und)
		(SIMPX es gibt ein schwimm und dampfbad und eine pianobar)
		(KOORD und)
		(VF das einzelzimmer)
		(LK kostet)
		(MF allerdings zweihundert achtundvierzig mark)
		(KON und)
		(NX das doppelzimmer)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(NX
					(NX hundert dreiundvierzig mark)
					[01;31m(VF[00m
						(PX
							(APPRART vom)
							(NX zeitangebot))[01;31m)[00m)
				(LK ware)
				(MF das hotel loccumerhof anscheinend besonders gunstig)
				(NF weil es gleich beim bahnhof liegt)[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['NX', 'LK', 'MF', 'NF'], 'family': ['SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'CARD', 'NN', 'APPRART', 'NN', 'VAFIN', 'ART', 'NN', 'NE', 'ADV', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'VVFIN'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (109, 127), 'span': (109, 127), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen)
		(PX zum einen das maritimhotel in hannover)
		(SIMPX welches am bahnhof liegt)
		(KON und)
		(MF zum zentrum funfzehn minuten)
		(NN laufzeit)
		(SIMPX hat es)
		(LK gibt)
		(MF dort eine cafeteria garage)
		(LK ist)
		(MF naturlich dann nicht nicht unbedingt so wichtig)
		(SIMPX einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(NX dann das hotel luisenhof)
		(ADJX funf minuten vom bahnhof entfernt also etwas schneller)
		(SIMPX es gibt eine bar ein restaurant und ebenfalls eine garage)
		(SIMPX und das hotel loccumerhof ist gleich beim bahnhof anscheinend)
		(KON und)
		(SIMPX es gibt ein schwimm und dampfbad und eine pianobar)
		(KOORD und)
		(VF das einzelzimmer)
		(LK kostet)
		(MF allerdings zweihundert achtundvierzig mark)
		(KON und)
		(NX das doppelzimmer)
		[01;31m(SU[00m
			(NX
				(NX hundert dreiundvierzig mark)
				[01;31m(VF[00m
					(PX
						(APPRART vom)
						(NX zeitangebot))[01;31m)[00m)
			(LK ware)
			(MF das hotel loccumerhof anscheinend besonders gunstig)
			(NF weil es gleich beim bahnhof liegt)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['NX', 'LK', 'MF', 'NF'], 'family': ['SU', 'SIMPX', 'PX', 'SIMPX', 'KON', 'MF', 'NN', 'SIMPX', 'LK', 'MF', 'LK', 'MF', 'SIMPX', 'NX', 'ADJX', 'SIMPX', 'SIMPX', 'KON', 'SIMPX', 'KOORD', 'VF', 'LK', 'MF', 'KON', 'NX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'PIAT', 'NN', 'VVPP', 'PDS', 'VMFIN', 'PPER', 'APPR', 'PPER', 'ADV', 'ADV', 'VVINF', 'APPRART', 'PIS', 'ART', 'NE', 'APPR', 'NE', 'PRELS', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPRART', 'NN', 'CARD', 'NN', 'NN', 'VAFIN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NN', 'VAFIN', 'ADV', 'ADV', 'PTKNEG', 'PTKNEG', 'ADV', 'ADV', 'ADJD', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN', 'NN', 'CARD', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'ADJD', 'ADV', 'ADV', 'ADJD', 'PPER', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ART', 'NN', 'KON', 'ART', 'NN', 'NE', 'VAFIN', 'ADV', 'APPRART', 'NN', 'ADV', 'KON', 'PPER', 'VVFIN', 'ART', 'TRUNC', 'KON', 'NN', 'KON', 'ART', 'NN', 'KON', 'ART', 'NN', 'VVFIN', 'ADV', 'CARD', 'CARD', 'NN', 'KON', 'ART', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'VAFIN', 'ART', 'NN', 'NE', 'ADV', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'VVFIN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 127), 'span': (109, 127), 'left siblings': ['SU', 'SIMPX', 'PX', 'SIMPX', 'KON', 'MF', 'NN', 'SIMPX', 'LK', 'MF', 'LK', 'MF', 'SIMPX', 'NX', 'ADJX', 'SIMPX', 'SIMPX', 'KON', 'SIMPX', 'KOORD', 'VF', 'LK', 'MF', 'KON', 'NX'], 'label': 'SU', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen)
		(PX zum einen das maritimhotel in hannover)
		(SIMPX welches am bahnhof liegt)
		(KON und)
		(MF zum zentrum funfzehn minuten)
		(NN laufzeit)
		(SIMPX hat es)
		(LK gibt)
		(MF dort eine cafeteria garage)
		(LK ist)
		(MF naturlich dann nicht nicht unbedingt so wichtig)
		(SIMPX einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(NX dann das hotel luisenhof)
		(ADJX funf minuten vom bahnhof entfernt also etwas schneller)
		(SIMPX es gibt eine bar ein restaurant und ebenfalls eine garage)
		(SIMPX und das hotel loccumerhof ist gleich beim bahnhof anscheinend)
		(KON und)
		(SIMPX es gibt ein schwimm und dampfbad und eine pianobar)
		(KOORD und)
		(VF das einzelzimmer)
		(LK kostet)
		(MF allerdings zweihundert achtundvierzig mark)
		(KON und)
		(NX das doppelzimmer)
		(NX
			(NX hundert dreiundvierzig mark)
			[01;31m(VF[00m
				(PX
					(APPRART vom)
					(NX zeitangebot))[01;31m)[00m)
		(LK ware)
		(MF das hotel loccumerhof anscheinend besonders gunstig)
		(NF weil es gleich beim bahnhof liegt)))
Step:Unary
{'subtrees': ['PX'], 'family': ['NX', 'VF'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'CARD', 'NN', 'APPRART', 'NN'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (109, 114), 'span': (112, 114), 'left siblings': ['NX'], 'label': 'VF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP jetzt habe ich mir auch schon einige hotelangebote herausgesucht die mus ich mit ihnen jetzt noch absprechen zum einen das maritimhotel in hannover welches am bahnhof liegt und zum zentrum funfzehn minuten laufzeit hat es gibt dort eine cafeteria garage ist naturlich dann nicht nicht unbedingt so wichtig einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark dann das hotel luisenhof funf minuten vom bahnhof entfernt also etwas schneller es gibt eine bar ein restaurant und ebenfalls eine garage und das hotel loccumerhof ist gleich beim bahnhof anscheinend und es gibt ein schwimm und dampfbad und eine pianobar und das einzelzimmer kostet allerdings zweihundert achtundvierzig mark und das doppelzimmer hundert dreiundvierzig mark vom zeitangebot ware das hotel loccumerhof anscheinend besonders gunstig weil es gleich beim bahnhof liegt)

Sentence 556:
2 Initial errors
0 on fringe, 2 iterations
1 Error:UNSET remove
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM in ordnung)
			(DM herr nishimoto)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(LK verbleiben)
				(MF wir dann bei unserm termin im januar))[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['DM', 'DM'], 'family': ['SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'NN', 'NN', 'NE', 'VVFIN', 'PPER', 'ADV', 'APPR', 'PPOSAT', 'NN', 'APPRART', 'NN'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 12), 'span': (0, 4), 'left siblings': [], 'label': 'SU', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM in ordnung)
		(DM herr nishimoto)
		[01;31m(SU[00m
			(SIMPX
				(LK verbleiben)
				(MF wir dann bei unserm termin im januar))[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['DM', 'DM', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'NN', 'NN', 'NE', 'VVFIN', 'PPER', 'ADV', 'APPR', 'PPOSAT', 'NN', 'APPRART', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 12), 'span': (4, 12), 'left siblings': ['DM', 'DM'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP in ordnung herr nishimoto verbleiben wir dann bei unserm termin im januar)

Sentence 557:
0 Initial errors
0 on fringe, 0 iterations

Sentence 558:
6 Initial errors
0 on fringe, 4 iterations
3 Error:PP Attachment
1 Error:UNSET add
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM guten tag)
			(DM frau heinicke)[01;31m)[00m
		(SU
			(SIMPX
				(VF wie wir bereits ausgemacht haben)
				[01;36m(SIMPX[00m
					[01;36m(SU[00m
						(LK wollten)
						(MF
							(NX wir)
							[01;36m(PX[00m
								[01;31m(PX[00m
									(APPR auf)
									[01;33m(NX[00m (NX eine eineinhalbtagige geschaftsreise)[01;31m)[00m
								(PX nach hamburg)[01;36m)[00m) [01;33mNX)[00m
						(VC fahren)[01;36m)[00m[01;36m)[00m))))
Step:PP Attachment
{'new_parent': 'PX', 'new_family': ['APPR', 'NX', 'PX'], 'mover info': [('PX', (15, 17))], 'old_family': ['NX', 'PX', 'PX'], 'start left siblings': ['NX', 'PX'], 'auto preterminals': ('PPER', 'APPR', 'ART', 'ADJA', 'NN', 'APPR', 'NE'), 'start right siblings': [], 'end left siblings': ['APPR', 'NX'], 'auto preterminal span': (10, 17), 'adding node already present': False, 'movers': ['PX'], 'old_parent': 'MF', 'added and moved': True, 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM guten tag)
			(DM frau heinicke)[01;31m)[00m
		(SU
			(SIMPX
				(VF wie wir bereits ausgemacht haben)
				[01;36m(SIMPX[00m
					[01;36m(SU[00m
						(LK wollten)
						(MF wir auf eine eineinhalbtagige geschaftsreise nach hamburg)
						(VC fahren)[01;36m)[00m[01;36m)[00m))))
Step:UNSET add
{'subtrees': ['LK', 'MF', 'VC'], 'family': ['VF', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('VMFIN', 'PPER', 'APPR', 'ART', 'ADJA', 'NN', 'APPR', 'NE', 'VVINF'), 'right siblings': [], 'left siblings': [(VF (SIMPX (C (KOUS wie)) (MF (NX (PPER wir)) (ADVX (ADV bereits))) (VC (VXINF (VVPP ausgemacht)) (VXFIN (VAFIN haben)))))], 'auto preterminal span': (9, 18), 'span': (9, 18), 'parent': 'SIMPX', 'label': 'SU', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM guten tag)
			(DM frau heinicke)[01;31m)[00m
		(SU
			(SIMPX
				(VF wie wir bereits ausgemacht haben)
				[01;36m(SIMPX[00m
					(SU
						(LK wollten)
						(MF wir auf eine eineinhalbtagige geschaftsreise nach hamburg)
						(VC fahren))[01;36m)[00m))))
Step:Unary
{'subtrees': ['SU'], 'family': ['VF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VMFIN', 'PPER', 'APPR', 'ART', 'ADJA', 'NN', 'APPR', 'NE', 'VVINF'), 'right siblings': [], 'left siblings': [(VF (SIMPX (C (KOUS wie)) (MF (NX (PPER wir)) (ADVX (ADV bereits))) (VC (VXINF (VVPP ausgemacht)) (VXFIN (VAFIN haben)))))], 'auto preterminal span': (9, 18), 'span': (9, 18), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM guten tag)
			(DM frau heinicke)[01;31m)[00m
		(SU wie wir bereits ausgemacht haben wollten wir auf eine eineinhalbtagige geschaftsreise nach hamburg fahren)))
Step:UNSET remove
{'subtrees': ['DM', 'DM'], 'family': ['SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJA', 'NN', 'NN', 'NE', 'KOUS', 'PPER', 'ADV', 'VVPP', 'VAFIN', 'VMFIN', 'PPER', 'APPR', 'ART', 'ADJA', 'NN', 'APPR', 'NE', 'VVINF'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 18), 'span': (0, 4), 'left siblings': [], 'label': 'SU', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP guten tag frau heinicke wie wir bereits ausgemacht haben wollten wir auf eine eineinhalbtagige geschaftsreise nach hamburg fahren)

Sentence 559:
4 Initial errors
0 on fringe, 4 iterations
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:UNSET add
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			(P
				(SIMPX da wurde mir der letzte termin am besten passen)
				(KOUS weil)
				(SIMPX [01;33m(VF (PX[00m
					(SIMPX am vierzehnten und funfzehnten ist eine messe)
					(KON und)
					[01;31m(SIMPX[00m
						(VF in der letzten januarwoche) [01;33mPX) VF)[00m
						(LK ist)
						(MF bei mir bis auf montag eigentlich alles frei)[01;31m)[00m))[01;31m)[00m
		(SU also da wurde ich doch sagen das wir am mittwoch und donnerstag nach hannover fahren)))
Step:UNSET remove
{'subtrees': ['DM', 'P'], 'family': ['SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADV', 'VAFIN', 'PPER', 'ART', 'ADJA', 'NN', 'PTKA', 'ADJD', 'VVINF', 'KOUS', 'APPRART', 'NN', 'KON', 'NN', 'VAFIN', 'ART', 'NN', 'KON', 'APPR', 'ART', 'ADJA', 'NN', 'VAFIN', 'APPR', 'PPER', 'APPR', 'APPR', 'NN', 'ADV', 'PIS', 'ADJD', 'ADV', 'ADV', 'VAFIN', 'PPER', 'ADV', 'VVINF', 'KOUS', 'PPER', 'APPRART', 'NN', 'KON', 'NN', 'APPR', 'NE', 'VVFIN'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 47), 'span': (0, 32), 'left siblings': [], 'label': 'SU', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(P
			(SIMPX da wurde mir der letzte termin am besten passen)
			(KOUS weil)
			(SIMPX [01;33m(VF (PX[00m
				(SIMPX am vierzehnten und funfzehnten ist eine messe)
				(KON und)
				[01;31m(SIMPX[00m
					(VF in der letzten januarwoche) [01;33mPX) VF)[00m
					(LK ist)
					(MF bei mir bis auf montag eigentlich alles frei)[01;31m)[00m))
		(SU also da wurde ich doch sagen das wir am mittwoch und donnerstag nach hannover fahren)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['SIMPX', 'KON', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'NN', 'KON', 'NN', 'VAFIN', 'ART', 'NN', 'KON', 'APPR', 'ART', 'ADJA', 'NN', 'VAFIN', 'APPR', 'PPER', 'APPR', 'APPR', 'NN', 'ADV', 'PIS', 'ADJD'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (11, 32), 'span': (19, 32), 'left siblings': ['SIMPX', 'KON'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(P
			(SIMPX da wurde mir der letzte termin am besten passen)
			(KOUS weil)
			(SIMPX
				[01;36m(PX[00m
					[01;36m(VF[00m
						(SIMPX am vierzehnten und funfzehnten ist eine messe)
						(KON und)
						(VF in der letzten januarwoche)[01;36m)[00m[01;36m)[00m
				(LK ist)
				(MF bei mir bis auf montag eigentlich alles frei)))
		(SU also da wurde ich doch sagen das wir am mittwoch und donnerstag nach hannover fahren)))
Step:UNSET add
{'subtrees': ['SIMPX', 'KON', 'VF'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'NN', 'KON', 'NN', 'VAFIN', 'ART', 'NN', 'KON', 'APPR', 'ART', 'ADJA', 'NN'), 'right siblings': [(LK (VXFIN (VAFIN ist))), (MF (PX (APPR bei) (NX (PPER mir))) (PX (APPR bis) (PX (APPR auf) (NX (NN montag)))) (ADVX (ADV eigentlich)) (NX (PIS alles)) (ADJX (ADJD frei)))], 'left siblings': [], 'auto preterminal span': (11, 23), 'span': (11, 23), 'parent': 'SIMPX', 'label': 'VF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(P
			(SIMPX da wurde mir der letzte termin am besten passen)
			(KOUS weil)
			(SIMPX
				[01;36m(PX[00m
					(VF
						(SIMPX am vierzehnten und funfzehnten ist eine messe)
						(KON und)
						(VF in der letzten januarwoche))[01;36m)[00m
				(LK ist)
				(MF bei mir bis auf montag eigentlich alles frei)))
		(SU also da wurde ich doch sagen das wir am mittwoch und donnerstag nach hannover fahren)))
Step:Unary
{'subtrees': ['VF'], 'family': ['PX', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'NN', 'KON', 'NN', 'VAFIN', 'ART', 'NN', 'KON', 'APPR', 'ART', 'ADJA', 'NN'), 'right siblings': [(LK (VXFIN (VAFIN ist))), (MF (PX (APPR bei) (NX (PPER mir))) (PX (APPR bis) (PX (APPR auf) (NX (NN montag)))) (ADVX (ADV eigentlich)) (NX (PIS alles)) (ADJX (ADJD frei)))], 'left siblings': [], 'auto preterminal span': (11, 23), 'span': (11, 23), 'parent': 'SIMPX', 'label': 'PX', 'classified_type': 'Unary', 'type': 'add'}
(TOP ja da wurde mir der letzte termin am besten passen weil am vierzehnten und funfzehnten ist eine messe und in der letzten januarwoche ist bei mir bis auf montag eigentlich alles frei also da wurde ich doch sagen das wir am mittwoch und donnerstag nach hannover fahren)

Sentence 560:
20 Initial errors
0 on fringe, 19 iterations
2 Error:PP Attachment
1 Error:Single Word Phrase
1 Error:Unary
1 Error:Unary
1 Error:Clause Attachment
1 Error:Single Word Phrase
1 Error:UNSET remove
1 Error:Clause Attachment
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:Clause Attachment
1 Error:Co-ordination
1 Error:UNSET add
1 Error:Clause Attachment
1 Error:UNSET add
1 Error:Unary
1 Error:Unary
1 Error:Clause Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			(SIMPX
				(VF ich)
				(LK habe)
				(MF
					(NX mir)
					(ADVX da)
					(NX
						(PIAT einige)
						(NX
							[01;31m(NX[00m
								(NN zugverbindungen)[01;31m)[00m
							(KON und)
							(NX fluge))))
				(VC geben lassen))
			[01;31m(SIMPX[00m
				[01;31m(SIMPX[00m
					(KOORD und)
					(VF der zug)
					(LK fahrt)
					[01;33m(MF (ADJX[00m (MF stundlich ab vier uhr sechsundfunfzig am morgen)[01;31m)[00m
				[01;36m(KOORD[00m
					(KON und)[01;36m)[00m
				[01;31m(SIMPX[00m
					(VF er)
					(LK braucht)
					[01;31m(MF[00m
						[01;36m(MF[00m
							(NX viereinhalb stunden)
							(PX bis hannover) [01;33mADJX) MF)[00m[01;36m)[00m
						[01;36m(NF[00m
							(PX
								(APPR von)
								(NX munchen)
								(APZR aus))[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m [01;33m(SIMPX[00m
			(SIMPX
				(KOORD und)
				(VF das flugzeug)
				[01;31m(FKOORD[00m
					[01;31m(LKMVC[00m
						(LK wurde)
						(MF
							[01;31m(ADJX[00m
								(ADJX stundlich)
								(PX ab sieben uhr bis achtzehn uhr)[01;31m)[00m)
						[01;36m(VC[00m
							(VXINF
								(VVINF fahren)) [01;33mSIMPX)[00m[01;36m)[00m
						[01;31m(VC[00m [01;33m(SIMPX[00m
							(VXINF
								(VVINF fliegen))[01;31m)[00m[01;31m)[00m
					(KON und)
					(LKM braucht siebzig minuten)[01;31m)[00m)[01;31m)[00m [01;33mSIMPX)[00m
		[01;31m(SU[00m
			(SIMPX ich weis nicht wie sie es sich das vorgestellt haben)
			(SIMPX aber ich wurde doch eher fur einen flug pladieren)[01;31m)[00m))
Step:PP Attachment
{'new_parent': 'SU', 'new_family': ['PX', 'SIMPX'], 'mover info': [('PX', (29, 32))], 'old_family': ['NX', 'PX', 'PX'], 'start left siblings': ['NX', 'PX'], 'auto preterminals': ('PTKANT', 'PPER', 'VAFIN', 'PRF', 'ADV', 'PIAT', 'NN', 'KON', 'NN', 'VVINF', 'VVINF', 'KON', 'ART', 'NN', 'VVFIN', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'APPRART', 'NN', 'KON', 'PPER', 'VVFIN', 'CARD', 'NN', 'APPR', 'NE', 'APPR', 'NE', 'APZR', 'KON', 'ART', 'NN', 'VAFIN', 'ADJD', 'APPR', 'CARD', 'NN', 'APPR', 'CARD', 'NN', 'VVINF', 'VVINF', 'KON', 'VVFIN', 'CARD', 'NN', 'PPER', 'VVFIN', 'PTKNEG', 'KOUS', 'PPER', 'PPER', 'PRF', 'PDS', 'VVPP', 'VAFIN', 'KON', 'PPER', 'VAFIN', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'VVINF'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 68), 'movers': ['PX'], 'old_parent': 'MF', 'end right siblings': ['SIMPX'], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			(SIMPX
				(VF ich)
				(LK habe)
				(MF
					(NX mir)
					(ADVX da)
					(NX
						(PIAT einige)
						(NX
							[01;31m(NX[00m
								(NN zugverbindungen)[01;31m)[00m
							(KON und)
							(NX fluge))))
				(VC geben lassen))
			[01;31m(SIMPX[00m
				[01;31m(SIMPX[00m
					(KOORD und)
					(VF der zug)
					(LK fahrt)
					[01;33m(MF (ADJX[00m (MF stundlich ab vier uhr sechsundfunfzig am morgen)[01;31m)[00m
				[01;36m(KOORD[00m
					(KON und)[01;36m)[00m
				[01;31m(SIMPX[00m
					(VF er)
					(LK braucht)
					(MF viereinhalb stunden bis hannover)[01;31m)[00m[01;31m)[00m[01;31m)[00m [01;33mADJX) MF)[00m
		[01;31m(SU[00m
			[01;36m(NF[00m
				(PX
					(APPR von)
					(NX munchen)
					(APZR aus))[01;36m)[00m
			(SIMPX [01;33m(SIMPX[00m
				(KOORD und)
				(VF das flugzeug)
				[01;31m(FKOORD[00m
					[01;31m(LKMVC[00m
						(LK wurde)
						(MF
							[01;31m(ADJX[00m
								(ADJX stundlich)
								(PX ab sieben uhr bis achtzehn uhr)[01;31m)[00m)
						[01;36m(VC[00m
							(VXINF
								(VVINF fahren)) [01;33mSIMPX)[00m[01;36m)[00m
						[01;31m(VC[00m [01;33m(SIMPX[00m
							(VXINF
								(VVINF fliegen))[01;31m)[00m[01;31m)[00m
					(KON und)
					(LKM braucht siebzig minuten)[01;31m)[00m)[01;31m)[00m [01;33mSIMPX)[00m
		[01;31m(SU[00m
			(SIMPX ich weis nicht wie sie es sich das vorgestellt haben)
			(SIMPX aber ich wurde doch eher fur einen flug pladieren)[01;31m)[00m))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['SIMPX', 'KOORD', 'SIMPX'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON',), 'right siblings': [(SIMPX (VF (NX (PPER er))) (LK (VXFIN (VVFIN braucht))) (MF (NX (ADJX (CARD viereinhalb)) (NN stunden)) (PX (APPR bis) (NX (NE hannover)))))], 'left siblings': [(SIMPX (KOORD (KON und)) (VF (NX (ART der) (NN zug))) (LK (VXFIN (VVFIN fahrt))) (MF (ADJX (ADJX (ADJD stundlich)) (PX (PX (APPR ab) (NX (NX (ADJX (CARD vier)) (NN uhr)) (ADJX (CARD sechsundfunfzig)))) (PX (APPRART am) (NX (NN morgen)))))))], 'auto preterminal span': (22, 23), 'span': (22, 23), 'parent': 'SIMPX', 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			(SIMPX
				(VF ich)
				(LK habe)
				(MF
					(NX mir)
					(ADVX da)
					(NX
						(PIAT einige)
						(NX
							[01;31m(NX[00m
								(NN zugverbindungen)[01;31m)[00m
							(KON und)
							(NX fluge))))
				(VC geben lassen))
			[01;31m(SIMPX[00m
				[01;31m(SIMPX[00m
					(KOORD und)
					(VF der zug)
					(LK fahrt)
					[01;33m(MF (ADJX[00m (MF stundlich ab vier uhr sechsundfunfzig am morgen)[01;31m)[00m
				(KOORD und)
				[01;31m(SIMPX[00m
					(VF er)
					(LK braucht)
					(MF viereinhalb stunden bis hannover)[01;31m)[00m[01;31m)[00m[01;31m)[00m [01;33mADJX) MF)[00m
		[01;31m(SU[00m
			[01;36m(NF[00m
				(PX
					(APPR von)
					(NX munchen)
					(APZR aus))[01;36m)[00m
			(SIMPX [01;33m(SIMPX[00m
				(KOORD und)
				(VF das flugzeug)
				[01;31m(FKOORD[00m
					[01;31m(LKMVC[00m
						(LK wurde)
						(MF
							[01;31m(ADJX[00m
								(ADJX stundlich)
								(PX ab sieben uhr bis achtzehn uhr)[01;31m)[00m)
						[01;36m(VC[00m
							(VXINF
								(VVINF fahren)) [01;33mSIMPX)[00m[01;36m)[00m
						[01;31m(VC[00m [01;33m(SIMPX[00m
							(VXINF
								(VVINF fliegen))[01;31m)[00m[01;31m)[00m
					(KON und)
					(LKM braucht siebzig minuten)[01;31m)[00m)[01;31m)[00m [01;33mSIMPX)[00m
		[01;31m(SU[00m
			(SIMPX ich weis nicht wie sie es sich das vorgestellt haben)
			(SIMPX aber ich wurde doch eher fur einen flug pladieren)[01;31m)[00m))
Step:Unary
{'subtrees': ['PX'], 'family': ['NF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'NE', 'APZR'), 'right siblings': [(SIMPX (KOORD (KON und)) (VF (NX (ART das) (NN flugzeug))) (FKOORD (LKMVC (LK (VXFIN (VAFIN wurde))) (MF (ADJX (ADJX (ADJD stundlich)) (PX (PX (APPR ab) (NX (ADJX (CARD sieben)) (NN uhr))) (PX (APPR bis) (NX (ADJX (CARD achtzehn)) (NN uhr)))))) (VXINF (VVINF fahren)) (VC (VXINF (VVINF fliegen)))) (KON und) (LKM (LK (VXFIN (VVFIN braucht))) (MF (NX (ADJX (CARD siebzig)) (NN minuten))))))], 'left siblings': [], 'auto preterminal span': (29, 32), 'span': (29, 32), 'parent': 'SU', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			(SIMPX
				(VF ich)
				(LK habe)
				(MF
					(NX mir)
					(ADVX da)
					(NX
						(PIAT einige)
						(NX
							[01;31m(NX[00m
								(NN zugverbindungen)[01;31m)[00m
							(KON und)
							(NX fluge))))
				(VC geben lassen))
			[01;31m(SIMPX[00m
				[01;31m(SIMPX[00m
					(KOORD und)
					(VF der zug)
					(LK fahrt)
					[01;33m(MF (ADJX[00m (MF stundlich ab vier uhr sechsundfunfzig am morgen)[01;31m)[00m
				(KOORD und)
				[01;31m(SIMPX[00m
					(VF er)
					(LK braucht)
					(MF viereinhalb stunden bis hannover)[01;31m)[00m[01;31m)[00m[01;31m)[00m [01;33mADJX) MF)[00m
		[01;31m(SU[00m
			(NF von munchen aus)
			(SIMPX [01;33m(SIMPX[00m
				(KOORD und)
				(VF das flugzeug)
				[01;31m(FKOORD[00m
					[01;31m(LKMVC[00m
						(LK wurde)
						(MF
							[01;31m(ADJX[00m
								(ADJX stundlich)
								(PX ab sieben uhr bis achtzehn uhr)[01;31m)[00m)
						[01;36m(VC[00m
							(VXINF
								(VVINF fahren)) [01;33mSIMPX)[00m[01;36m)[00m
						[01;31m(VC[00m [01;33m(SIMPX[00m
							(VXINF
								(VVINF fliegen))[01;31m)[00m[01;31m)[00m
					(KON und)
					(LKM braucht siebzig minuten)[01;31m)[00m)[01;31m)[00m [01;33mSIMPX)[00m
		[01;31m(SU[00m
			(SIMPX ich weis nicht wie sie es sich das vorgestellt haben)
			(SIMPX aber ich wurde doch eher fur einen flug pladieren)[01;31m)[00m))
Step:Unary
{'subtrees': ['VXINF'], 'family': ['LK', 'MF', 'VC', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVINF',), 'right siblings': [(VC (VXINF (VVINF fliegen)))], 'left siblings': [(LK (VXFIN (VAFIN wurde))), (MF (ADJX (ADJX (ADJD stundlich)) (PX (PX (APPR ab) (NX (ADJX (CARD sieben)) (NN uhr))) (PX (APPR bis) (NX (ADJX (CARD achtzehn)) (NN uhr))))))], 'auto preterminal span': (43, 44), 'span': (43, 44), 'parent': 'LKMVC', 'label': 'VC', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			(SIMPX
				(VF ich)
				(LK habe)
				(MF
					(NX mir)
					(ADVX da)
					(NX
						(PIAT einige)
						(NX
							[01;31m(NX[00m
								(NN zugverbindungen)[01;31m)[00m
							(KON und)
							(NX fluge))))
				(VC geben lassen))
			[01;31m(SIMPX[00m
				[01;31m(SIMPX[00m
					(KOORD und)
					(VF der zug)
					(LK fahrt)
					[01;33m(MF (ADJX[00m (MF stundlich ab vier uhr sechsundfunfzig am morgen)[01;31m)[00m
				(KOORD und)
				[01;31m(SIMPX[00m
					(VF er)
					(LK braucht)
					(MF viereinhalb stunden bis hannover)[01;31m)[00m[01;31m)[00m[01;31m)[00m [01;33mADJX) MF)[00m
		[01;31m(SU[00m
			(NF von munchen aus)
			(SIMPX [01;33m(SIMPX[00m
				(KOORD und)
				(VF das flugzeug)
				[01;31m(FKOORD[00m
					[01;31m(LKMVC[00m
						(LK wurde)
						(MF
							[01;31m(ADJX[00m
								(ADJX stundlich)
								(PX ab sieben uhr bis achtzehn uhr)[01;31m)[00m)
						(VC fahren) [01;33mSIMPX)[00m
						[01;31m(VC[00m [01;33m(SIMPX[00m
							(VXINF
								(VVINF fliegen))[01;31m)[00m[01;31m)[00m
					(KON und)
					(LKM braucht siebzig minuten)[01;31m)[00m)[01;31m)[00m [01;33mSIMPX)[00m
		[01;31m(SU[00m
			(SIMPX ich weis nicht wie sie es sich das vorgestellt haben)
			(SIMPX aber ich wurde doch eher fur einen flug pladieren)[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['DM', 'SIMPX', 'SIMPX'], 'family': ['SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VAFIN', 'PRF', 'ADV', 'PIAT', 'NN', 'KON', 'NN', 'VVINF', 'VVINF', 'KON', 'ART', 'NN', 'VVFIN', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'APPRART', 'NN', 'KON', 'PPER', 'VVFIN', 'CARD', 'NN', 'APPR', 'NE', 'APPR', 'NE', 'APZR', 'KON', 'ART', 'NN', 'VAFIN', 'ADJD', 'APPR', 'CARD', 'NN', 'APPR', 'CARD', 'NN', 'VVINF', 'VVINF', 'KON', 'VVFIN', 'CARD', 'NN', 'PPER', 'VVFIN', 'PTKNEG', 'KOUS', 'PPER', 'PPER', 'PRF', 'PDS', 'VVPP', 'VAFIN', 'KON', 'PPER', 'VAFIN', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'VVINF'), 'right siblings': ['SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 68), 'span': (0, 29), 'left siblings': [], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF ich)
			(LK habe)
			(MF
				(NX mir)
				(ADVX da)
				(NX
					(PIAT einige)
					(NX
						[01;31m(NX[00m
							(NN zugverbindungen)[01;31m)[00m
						(KON und)
						(NX fluge))))
			(VC geben lassen))
		[01;31m(SIMPX[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF der zug)
				(LK fahrt)
				[01;33m(MF (ADJX[00m (MF stundlich ab vier uhr sechsundfunfzig am morgen)[01;31m)[00m
			(KOORD und)
			[01;31m(SIMPX[00m
				(VF er)
				(LK braucht)
				(MF viereinhalb stunden bis hannover)[01;31m)[00m[01;31m)[00m [01;33mADJX) MF)[00m
		[01;31m(SU[00m
			(NF von munchen aus)
			(SIMPX [01;33m(SIMPX[00m
				(KOORD und)
				(VF das flugzeug)
				[01;31m(FKOORD[00m
					[01;31m(LKMVC[00m
						(LK wurde)
						(MF
							[01;31m(ADJX[00m
								(ADJX stundlich)
								(PX ab sieben uhr bis achtzehn uhr)[01;31m)[00m)
						(VC fahren) [01;33mSIMPX)[00m
						[01;31m(VC[00m [01;33m(SIMPX[00m
							(VXINF
								(VVINF fliegen))[01;31m)[00m[01;31m)[00m
					(KON und)
					(LKM braucht siebzig minuten)[01;31m)[00m)[01;31m)[00m [01;33mSIMPX)[00m
		[01;31m(SU[00m
			(SIMPX ich weis nicht wie sie es sich das vorgestellt haben)
			(SIMPX aber ich wurde doch eher fur einen flug pladieren)[01;31m)[00m))
Step:Single Word Phrase
{'subtrees': ['NN'], 'family': ['NX', 'KON', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('NN', 'KON', 'NN'), 'right siblings': ['KON', 'NX'], 'parent': 'NX', 'auto preterminal span': (6, 9), 'span': (6, 7), 'left siblings': [], 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich habe mir da einige zugverbindungen und fluge geben lassen)
		[01;31m(SIMPX[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF der zug)
				(LK fahrt)
				[01;33m(MF (ADJX[00m (MF stundlich ab vier uhr sechsundfunfzig am morgen)[01;31m)[00m
			(KOORD und)
			[01;31m(SIMPX[00m
				(VF er)
				(LK braucht)
				(MF viereinhalb stunden bis hannover)[01;31m)[00m[01;31m)[00m [01;33mADJX) MF)[00m
		[01;31m(SU[00m
			(NF von munchen aus)
			(SIMPX [01;33m(SIMPX[00m
				(KOORD und)
				(VF das flugzeug)
				[01;31m(FKOORD[00m
					[01;31m(LKMVC[00m
						(LK wurde)
						(MF
							[01;31m(ADJX[00m
								(ADJX stundlich)
								(PX ab sieben uhr bis achtzehn uhr)[01;31m)[00m)
						(VC fahren) [01;33mSIMPX)[00m
						[01;31m(VC[00m [01;33m(SIMPX[00m
							(VXINF
								(VVINF fliegen))[01;31m)[00m[01;31m)[00m
					(KON und)
					(LKM braucht siebzig minuten)[01;31m)[00m)[01;31m)[00m [01;33mSIMPX)[00m
		[01;31m(SU[00m
			(SIMPX ich weis nicht wie sie es sich das vorgestellt haben)
			(SIMPX aber ich wurde doch eher fur einen flug pladieren)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['KOORD', 'VF', 'LK', 'MF'], 'family': ['SIMPX', 'KOORD', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'ART', 'NN', 'VVFIN', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'APPRART', 'NN', 'KON', 'PPER', 'VVFIN', 'CARD', 'NN', 'APPR', 'NE'), 'right siblings': ['KOORD', 'SIMPX'], 'parent': 'SIMPX', 'auto preterminal span': (11, 29), 'span': (11, 22), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich habe mir da einige zugverbindungen und fluge geben lassen)
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF der zug)
			(LK fahrt)
			[01;36m(MF[00m
				[01;36m(ADJX[00m
					(MF stundlich ab vier uhr sechsundfunfzig am morgen)
					(KOORD und)
					[01;31m(SIMPX[00m
						(VF er)
						(LK braucht)
						(MF viereinhalb stunden bis hannover)[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(NF von munchen aus)
			(SIMPX [01;33m(SIMPX[00m
				(KOORD und)
				(VF das flugzeug)
				[01;31m(FKOORD[00m
					[01;31m(LKMVC[00m
						(LK wurde)
						(MF
							[01;31m(ADJX[00m
								(ADJX stundlich)
								(PX ab sieben uhr bis achtzehn uhr)[01;31m)[00m)
						(VC fahren) [01;33mSIMPX)[00m
						[01;31m(VC[00m [01;33m(SIMPX[00m
							(VXINF
								(VVINF fliegen))[01;31m)[00m[01;31m)[00m
					(KON und)
					(LKM braucht siebzig minuten)[01;31m)[00m)[01;31m)[00m [01;33mSIMPX)[00m
		[01;31m(SU[00m
			(SIMPX ich weis nicht wie sie es sich das vorgestellt haben)
			(SIMPX aber ich wurde doch eher fur einen flug pladieren)[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['MF', 'KOORD', 'SIMPX'], 'family': ['KOORD', 'VF', 'LK', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'APPRART', 'NN', 'KON', 'PPER', 'VVFIN', 'CARD', 'NN', 'APPR', 'NE'), 'right siblings': [], 'left siblings': [(KOORD (KON und)), (VF (NX (ART der) (NN zug))), (LK (VXFIN (VVFIN fahrt)))], 'auto preterminal span': (15, 29), 'span': (15, 29), 'parent': 'SIMPX', 'label': 'ADJX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich habe mir da einige zugverbindungen und fluge geben lassen)
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF der zug)
			(LK fahrt)
			[01;36m(MF[00m
				(ADJX
					(MF stundlich ab vier uhr sechsundfunfzig am morgen)
					(KOORD und)
					[01;31m(SIMPX[00m
						(VF er)
						(LK braucht)
						(MF viereinhalb stunden bis hannover)[01;31m)[00m)[01;36m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(NF von munchen aus)
			(SIMPX [01;33m(SIMPX[00m
				(KOORD und)
				(VF das flugzeug)
				[01;31m(FKOORD[00m
					[01;31m(LKMVC[00m
						(LK wurde)
						(MF
							[01;31m(ADJX[00m
								(ADJX stundlich)
								(PX ab sieben uhr bis achtzehn uhr)[01;31m)[00m)
						(VC fahren) [01;33mSIMPX)[00m
						[01;31m(VC[00m [01;33m(SIMPX[00m
							(VXINF
								(VVINF fliegen))[01;31m)[00m[01;31m)[00m
					(KON und)
					(LKM braucht siebzig minuten)[01;31m)[00m)[01;31m)[00m [01;33mSIMPX)[00m
		[01;31m(SU[00m
			(SIMPX ich weis nicht wie sie es sich das vorgestellt haben)
			(SIMPX aber ich wurde doch eher fur einen flug pladieren)[01;31m)[00m))
Step:Unary
{'subtrees': ['ADJX'], 'family': ['KOORD', 'VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'APPRART', 'NN', 'KON', 'PPER', 'VVFIN', 'CARD', 'NN', 'APPR', 'NE'), 'right siblings': [], 'left siblings': [(KOORD (KON und)), (VF (NX (ART der) (NN zug))), (LK (VXFIN (VVFIN fahrt)))], 'auto preterminal span': (15, 29), 'span': (15, 29), 'parent': 'SIMPX', 'label': 'MF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich habe mir da einige zugverbindungen und fluge geben lassen)
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF der zug)
			(LK fahrt)
			(MF
				(ADJX
					(MF stundlich ab vier uhr sechsundfunfzig am morgen)
					(KOORD und)
					[01;31m(SIMPX[00m
						(VF er)
						(LK braucht)
						(MF viereinhalb stunden bis hannover)[01;31m)[00m))[01;31m)[00m
		[01;31m(SU[00m
			(NF von munchen aus)
			(SIMPX [01;33m(SIMPX[00m
				(KOORD und)
				(VF das flugzeug)
				[01;31m(FKOORD[00m
					[01;31m(LKMVC[00m
						(LK wurde)
						(MF
							[01;31m(ADJX[00m
								(ADJX stundlich)
								(PX ab sieben uhr bis achtzehn uhr)[01;31m)[00m)
						(VC fahren) [01;33mSIMPX)[00m
						[01;31m(VC[00m [01;33m(SIMPX[00m
							(VXINF
								(VVINF fliegen))[01;31m)[00m[01;31m)[00m
					(KON und)
					(LKM braucht siebzig minuten)[01;31m)[00m)[01;31m)[00m [01;33mSIMPX)[00m
		[01;31m(SU[00m
			(SIMPX ich weis nicht wie sie es sich das vorgestellt haben)
			(SIMPX aber ich wurde doch eher fur einen flug pladieren)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['KOORD', 'VF', 'LK', 'MF'], 'family': ['DM', 'SIMPX', 'SIMPX', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VAFIN', 'PRF', 'ADV', 'PIAT', 'NN', 'KON', 'NN', 'VVINF', 'VVINF', 'KON', 'ART', 'NN', 'VVFIN', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'APPRART', 'NN', 'KON', 'PPER', 'VVFIN', 'CARD', 'NN', 'APPR', 'NE', 'APPR', 'NE', 'APZR', 'KON', 'ART', 'NN', 'VAFIN', 'ADJD', 'APPR', 'CARD', 'NN', 'APPR', 'CARD', 'NN', 'VVINF', 'VVINF', 'KON', 'VVFIN', 'CARD', 'NN', 'PPER', 'VVFIN', 'PTKNEG', 'KOUS', 'PPER', 'PPER', 'PRF', 'PDS', 'VVPP', 'VAFIN', 'KON', 'PPER', 'VAFIN', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'VVINF'), 'right siblings': ['SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 68), 'span': (11, 29), 'left siblings': ['DM', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich habe mir da einige zugverbindungen und fluge geben lassen)
		(KOORD und)
		(VF der zug)
		(LK fahrt)
		(MF
			(ADJX
				(MF stundlich ab vier uhr sechsundfunfzig am morgen)
				(KOORD und)
				[01;31m(SIMPX[00m
					(VF er)
					(LK braucht)
					(MF viereinhalb stunden bis hannover)[01;31m)[00m))
		[01;31m(SU[00m
			(NF von munchen aus)
			(SIMPX [01;33m(SIMPX[00m
				(KOORD und)
				(VF das flugzeug)
				[01;31m(FKOORD[00m
					[01;31m(LKMVC[00m
						(LK wurde)
						(MF
							[01;31m(ADJX[00m
								(ADJX stundlich)
								(PX ab sieben uhr bis achtzehn uhr)[01;31m)[00m)
						(VC fahren) [01;33mSIMPX)[00m
						[01;31m(VC[00m [01;33m(SIMPX[00m
							(VXINF
								(VVINF fliegen))[01;31m)[00m[01;31m)[00m
					(KON und)
					(LKM braucht siebzig minuten)[01;31m)[00m)[01;31m)[00m [01;33mSIMPX)[00m
		[01;31m(SU[00m
			(SIMPX ich weis nicht wie sie es sich das vorgestellt haben)
			(SIMPX aber ich wurde doch eher fur einen flug pladieren)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['MF', 'KOORD', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'APPRART', 'NN', 'KON', 'PPER', 'VVFIN', 'CARD', 'NN', 'APPR', 'NE'), 'right siblings': [], 'parent': 'ADJX', 'auto preterminal span': (15, 29), 'span': (23, 29), 'left siblings': ['MF', 'KOORD'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich habe mir da einige zugverbindungen und fluge geben lassen)
		(KOORD und)
		(VF der zug)
		(LK fahrt)
		(MF stundlich ab vier uhr sechsundfunfzig am morgen und er braucht viereinhalb stunden bis hannover)
		[01;31m(SU[00m
			(NF von munchen aus)
			(SIMPX [01;33m(SIMPX[00m
				(KOORD und)
				(VF das flugzeug)
				[01;31m(FKOORD[00m
					[01;31m(LKMVC[00m
						(LK wurde)
						(MF
							[01;31m(ADJX[00m
								(ADJX stundlich)
								(PX ab sieben uhr bis achtzehn uhr)[01;31m)[00m)
						(VC fahren) [01;33mSIMPX)[00m
						[01;31m(VC[00m [01;33m(SIMPX[00m
							(VXINF
								(VVINF fliegen))[01;31m)[00m[01;31m)[00m
					(KON und)
					(LKM braucht siebzig minuten)[01;31m)[00m)[01;31m)[00m [01;33mSIMPX)[00m
		[01;31m(SU[00m
			(SIMPX ich weis nicht wie sie es sich das vorgestellt haben)
			(SIMPX aber ich wurde doch eher fur einen flug pladieren)[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['NF', 'SIMPX'], 'family': ['DM', 'SIMPX', 'KOORD', 'VF', 'LK', 'MF', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VAFIN', 'PRF', 'ADV', 'PIAT', 'NN', 'KON', 'NN', 'VVINF', 'VVINF', 'KON', 'ART', 'NN', 'VVFIN', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'APPRART', 'NN', 'KON', 'PPER', 'VVFIN', 'CARD', 'NN', 'APPR', 'NE', 'APPR', 'NE', 'APZR', 'KON', 'ART', 'NN', 'VAFIN', 'ADJD', 'APPR', 'CARD', 'NN', 'APPR', 'CARD', 'NN', 'VVINF', 'VVINF', 'KON', 'VVFIN', 'CARD', 'NN', 'PPER', 'VVFIN', 'PTKNEG', 'KOUS', 'PPER', 'PPER', 'PRF', 'PDS', 'VVPP', 'VAFIN', 'KON', 'PPER', 'VAFIN', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'VVINF'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 68), 'span': (29, 49), 'left siblings': ['DM', 'SIMPX', 'KOORD', 'VF', 'LK', 'MF'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich habe mir da einige zugverbindungen und fluge geben lassen)
		(KOORD und)
		(VF der zug)
		(LK fahrt)
		(MF stundlich ab vier uhr sechsundfunfzig am morgen und er braucht viereinhalb stunden bis hannover)
		(NF von munchen aus)
		(SIMPX [01;33m(SIMPX[00m
			(KOORD und)
			(VF das flugzeug)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK wurde)
					(MF
						[01;31m(ADJX[00m
							(ADJX stundlich)
							(PX ab sieben uhr bis achtzehn uhr)[01;31m)[00m)
					(VC fahren) [01;33mSIMPX)[00m
					[01;31m(VC[00m [01;33m(SIMPX[00m
						(VXINF
							(VVINF fliegen))[01;31m)[00m[01;31m)[00m
				(KON und)
				(LKM braucht siebzig minuten)[01;31m)[00m) [01;33mSIMPX)[00m
		[01;31m(SU[00m
			(SIMPX ich weis nicht wie sie es sich das vorgestellt haben)
			(SIMPX aber ich wurde doch eher fur einen flug pladieren)[01;31m)[00m))
Step:Co-ordination
{'subtrees': ['LK', 'MF', 'VC', 'VC'], 'family': ['LKMVC', 'KON', 'LKM'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'ADJD', 'APPR', 'CARD', 'NN', 'APPR', 'CARD', 'NN', 'VVINF', 'VVINF', 'KON', 'VVFIN', 'CARD', 'NN'), 'right siblings': ['KON', 'LKM'], 'parent': 'FKOORD', 'auto preterminal span': (35, 49), 'span': (35, 45), 'left siblings': [], 'label': 'LKMVC', 'classified_type': 'Co-ordination', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich habe mir da einige zugverbindungen und fluge geben lassen)
		(KOORD und)
		(VF der zug)
		(LK fahrt)
		(MF stundlich ab vier uhr sechsundfunfzig am morgen und er braucht viereinhalb stunden bis hannover)
		(NF von munchen aus)
		(SIMPX [01;33m(SIMPX[00m
			(KOORD und)
			(VF das flugzeug)
			[01;31m(FKOORD[00m
				(LK wurde)
				(MF
					[01;31m(ADJX[00m
						(ADJX stundlich)
						(PX ab sieben uhr bis achtzehn uhr)[01;31m)[00m)
				(VC fahren) [01;33mSIMPX)[00m
				[01;36m(SIMPX[00m
					[01;31m(VC[00m
						(VXINF
							(VVINF fliegen))[01;31m)[00m
					(KON und)
					(LKM braucht siebzig minuten)[01;36m)[00m[01;31m)[00m)
		[01;31m(SU[00m
			(SIMPX ich weis nicht wie sie es sich das vorgestellt haben)
			(SIMPX aber ich wurde doch eher fur einen flug pladieren)[01;31m)[00m))
Step:UNSET add
{'subtrees': ['VC', 'KON', 'LKM'], 'family': ['LK', 'MF', 'VC', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVINF', 'KON', 'VVFIN', 'CARD', 'NN'), 'right siblings': [], 'left siblings': [(LK (VXFIN (VAFIN wurde))), (MF (ADJX (ADJX (ADJD stundlich)) (PX (PX (APPR ab) (NX (ADJX (CARD sieben)) (NN uhr))) (PX (APPR bis) (NX (ADJX (CARD achtzehn)) (NN uhr)))))), (VC (VXINF (VVINF fahren)))], 'auto preterminal span': (44, 49), 'span': (44, 49), 'parent': 'FKOORD', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich habe mir da einige zugverbindungen und fluge geben lassen)
		(KOORD und)
		(VF der zug)
		(LK fahrt)
		(MF stundlich ab vier uhr sechsundfunfzig am morgen und er braucht viereinhalb stunden bis hannover)
		(NF von munchen aus)
		(SIMPX [01;33m(SIMPX[00m
			(KOORD und)
			(VF das flugzeug)
			[01;31m(FKOORD[00m
				(LK wurde)
				(MF
					[01;31m(ADJX[00m
						(ADJX stundlich)
						(PX ab sieben uhr bis achtzehn uhr)[01;31m)[00m)
				(VC fahren) [01;33mSIMPX)[00m
				(SIMPX
					[01;31m(VC[00m
						(VXINF
							(VVINF fliegen))[01;31m)[00m
					(KON und)
					(LKM braucht siebzig minuten))[01;31m)[00m)
		[01;31m(SU[00m
			(SIMPX ich weis nicht wie sie es sich das vorgestellt haben)
			(SIMPX aber ich wurde doch eher fur einen flug pladieren)[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['LK', 'MF', 'VC', 'SIMPX'], 'family': ['KOORD', 'VF', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'ART', 'NN', 'VAFIN', 'ADJD', 'APPR', 'CARD', 'NN', 'APPR', 'CARD', 'NN', 'VVINF', 'VVINF', 'KON', 'VVFIN', 'CARD', 'NN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (32, 49), 'span': (35, 49), 'left siblings': ['KOORD', 'VF'], 'label': 'FKOORD', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich habe mir da einige zugverbindungen und fluge geben lassen)
		(KOORD und)
		(VF der zug)
		(LK fahrt)
		(MF stundlich ab vier uhr sechsundfunfzig am morgen und er braucht viereinhalb stunden bis hannover)
		(NF von munchen aus)
		(SIMPX
			[01;36m(SIMPX[00m
				(KOORD und)
				(VF das flugzeug)
				(LK wurde)
				(MF
					[01;31m(ADJX[00m
						(ADJX stundlich)
						(PX ab sieben uhr bis achtzehn uhr)[01;31m)[00m)
				(VC fahren)[01;36m)[00m
			(SIMPX
				[01;31m(VC[00m
					(VXINF
						(VVINF fliegen))[01;31m)[00m
				(KON und)
				(LKM braucht siebzig minuten)))
		[01;31m(SU[00m
			(SIMPX ich weis nicht wie sie es sich das vorgestellt haben)
			(SIMPX aber ich wurde doch eher fur einen flug pladieren)[01;31m)[00m))
Step:UNSET add
{'subtrees': ['KOORD', 'VF', 'LK', 'MF', 'VC'], 'family': ['SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'ART', 'NN', 'VAFIN', 'ADJD', 'APPR', 'CARD', 'NN', 'APPR', 'CARD', 'NN', 'VVINF'), 'right siblings': [(SIMPX (VC (VXINF (VVINF fliegen))) (KON und) (LKM (LK (VXFIN (VVFIN braucht))) (MF (NX (ADJX (CARD siebzig)) (NN minuten)))))], 'left siblings': [], 'auto preterminal span': (32, 44), 'span': (32, 44), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich habe mir da einige zugverbindungen und fluge geben lassen)
		(KOORD und)
		(VF der zug)
		(LK fahrt)
		(MF stundlich ab vier uhr sechsundfunfzig am morgen und er braucht viereinhalb stunden bis hannover)
		(NF von munchen aus)
		(SIMPX
			(SIMPX
				(KOORD und)
				(VF das flugzeug)
				(LK wurde)
				(MF
					[01;31m(ADJX[00m
						(ADJX stundlich)
						(PX ab sieben uhr bis achtzehn uhr)[01;31m)[00m)
				(VC fahren))
			(SIMPX
				[01;31m(VC[00m
					(VXINF
						(VVINF fliegen))[01;31m)[00m
				(KON und)
				(LKM braucht siebzig minuten)))
		[01;31m(SU[00m
			(SIMPX ich weis nicht wie sie es sich das vorgestellt haben)
			(SIMPX aber ich wurde doch eher fur einen flug pladieren)[01;31m)[00m))
Step:Unary
{'subtrees': ['ADJX', 'PX'], 'family': ['ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJD', 'APPR', 'CARD', 'NN', 'APPR', 'CARD', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (36, 43), 'span': (36, 43), 'left siblings': [], 'label': 'ADJX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich habe mir da einige zugverbindungen und fluge geben lassen)
		(KOORD und)
		(VF der zug)
		(LK fahrt)
		(MF stundlich ab vier uhr sechsundfunfzig am morgen und er braucht viereinhalb stunden bis hannover)
		(NF von munchen aus)
		(SIMPX
			(SIMPX und das flugzeug wurde stundlich ab sieben uhr bis achtzehn uhr fahren)
			(SIMPX
				[01;31m(VC[00m
					(VXINF
						(VVINF fliegen))[01;31m)[00m
				(KON und)
				(LKM braucht siebzig minuten)))
		[01;31m(SU[00m
			(SIMPX ich weis nicht wie sie es sich das vorgestellt haben)
			(SIMPX aber ich wurde doch eher fur einen flug pladieren)[01;31m)[00m))
Step:Unary
{'subtrees': ['VXINF'], 'family': ['VC', 'KON', 'LKM'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVINF', 'KON', 'VVFIN', 'CARD', 'NN'), 'right siblings': ['KON', 'LKM'], 'parent': 'SIMPX', 'auto preterminal span': (44, 49), 'span': (44, 45), 'left siblings': [], 'label': 'VC', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich habe mir da einige zugverbindungen und fluge geben lassen)
		(KOORD und)
		(VF der zug)
		(LK fahrt)
		(MF stundlich ab vier uhr sechsundfunfzig am morgen und er braucht viereinhalb stunden bis hannover)
		(NF von munchen aus)
		(SIMPX und das flugzeug wurde stundlich ab sieben uhr bis achtzehn uhr fahren fliegen und braucht siebzig minuten)
		[01;31m(SU[00m
			(SIMPX ich weis nicht wie sie es sich das vorgestellt haben)
			(SIMPX aber ich wurde doch eher fur einen flug pladieren)[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['DM', 'SIMPX', 'KOORD', 'VF', 'LK', 'MF', 'NF', 'SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VAFIN', 'PRF', 'ADV', 'PIAT', 'NN', 'KON', 'NN', 'VVINF', 'VVINF', 'KON', 'ART', 'NN', 'VVFIN', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'APPRART', 'NN', 'KON', 'PPER', 'VVFIN', 'CARD', 'NN', 'APPR', 'NE', 'APPR', 'NE', 'APZR', 'KON', 'ART', 'NN', 'VAFIN', 'ADJD', 'APPR', 'CARD', 'NN', 'APPR', 'CARD', 'NN', 'VVINF', 'VVINF', 'KON', 'VVFIN', 'CARD', 'NN', 'PPER', 'VVFIN', 'PTKNEG', 'KOUS', 'PPER', 'PPER', 'PRF', 'PDS', 'VVPP', 'VAFIN', 'KON', 'PPER', 'VAFIN', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'VVINF'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 68), 'span': (49, 68), 'left siblings': ['DM', 'SIMPX', 'KOORD', 'VF', 'LK', 'MF', 'NF', 'SIMPX'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP ja ich habe mir da einige zugverbindungen und fluge geben lassen und der zug fahrt stundlich ab vier uhr sechsundfunfzig am morgen und er braucht viereinhalb stunden bis hannover von munchen aus und das flugzeug wurde stundlich ab sieben uhr bis achtzehn uhr fahren fliegen und braucht siebzig minuten ich weis nicht wie sie es sich das vorgestellt haben aber ich wurde doch eher fur einen flug pladieren)

Sentence 561:
6 Initial errors
0 on fringe, 3 iterations
3 Error:UNSET move
2 Error:Different label
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SU[00m
	(TOP
		(TURN
			[01;31m(SU[00m
				(DM ja)
				(DM also)
				(SIMPX [01;33m(SIMPX[00m
					(LV dieses letzte hotel)
					(VF das)
					(LK hat)
					(MF
						(NX mich)
						(ADVX auch)
						[01;36m(PX[00m [01;31m(ADJX[00m
							(PTKA am)
							(ADJD meisten)[01;31m)[00m[01;36m)[00m)
					(VC interessiert))[01;31m)[00m
			[01;31m(SU[00m
				(SIMPX
					(KOORD und)
					(VF da wir sowieso auf firmenkosten reisen werden)
					(LK denke)
					(MF ich schon)
					(NF das wir uns dort ein einzelzimmer auch nehmen konnen))[01;31m)[00m)) [01;33mSIMPX)[00m[01;36m)[00m
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['DM', 'DM', 'SIMPX', 'SU'], 'mover info': [('SU', (12, 32))], 'old_family': ['SU', 'SU'], 'start left siblings': ['SU'], 'auto preterminals': ('PTKANT', 'ADV', 'PDAT', 'ADJA', 'NN', 'PDS', 'VAFIN', 'PPER', 'ADV', 'PTKA', 'ADJD', 'VVPP', 'KON', 'KOUS', 'PPER', 'ADV', 'APPR', 'NN', 'VVINF', 'VAFIN', 'VVFIN', 'PPER', 'ADV', 'KOUS', 'PPER', 'PRF', 'ADV', 'ART', 'NN', 'ADV', 'VVINF', 'VMFIN'), 'start right siblings': [], 'end left siblings': ['DM', 'DM', 'SIMPX'], 'auto preterminal span': (0, 32), 'adding node already present': False, 'movers': ['SU'], 'old_parent': 'TURN', 'added and moved': True, 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'PX'}
(TOP
	(TURN
		(SU
			(DM ja)
			(DM also)
			(SIMPX
				(SIMPX
					(LV dieses letzte hotel)
					(VF das)
					(LK hat)
					(MF
						(NX mich)
						(ADVX auch)
						[01;36m(PX[00m [01;31m(ADJX[00m
							(PTKA am)
							(ADJD meisten)[01;31m)[00m[01;36m)[00m)
					(VC interessiert))
				[01;31m(SU[00m
					(SIMPX
						(KOORD und)
						(VF da wir sowieso auf firmenkosten reisen werden)
						(LK denke)
						(MF ich schon)
						(NF das wir uns dort ein einzelzimmer auch nehmen konnen))[01;31m)[00m))))
Step:Different label
{'family': ['NX', 'ADVX', 'PX'], 'auto preterminal span': (9, 11), 'span': (9, 11), 'subtrees': ['PTKA', 'ADJD'], 'parent': 'MF', 'over_word': False, 'auto preterminals': ('PTKA', 'ADJD'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('ADJX', 'PX')}
(TOP
	(TURN
		(SU
			(DM ja)
			(DM also)
			(SIMPX
				(SIMPX dieses letzte hotel das hat mich auch am meisten interessiert)
				[01;31m(SU[00m
					(SIMPX
						(KOORD und)
						(VF da wir sowieso auf firmenkosten reisen werden)
						(LK denke)
						(MF ich schon)
						(NF das wir uns dort ein einzelzimmer auch nehmen konnen))[01;31m)[00m))))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDAT', 'ADJA', 'NN', 'PDS', 'VAFIN', 'PPER', 'ADV', 'PTKA', 'ADJD', 'VVPP', 'KON', 'KOUS', 'PPER', 'ADV', 'APPR', 'NN', 'VVINF', 'VAFIN', 'VVFIN', 'PPER', 'ADV', 'KOUS', 'PPER', 'PRF', 'ADV', 'ART', 'NN', 'ADV', 'VVINF', 'VMFIN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (2, 32), 'span': (12, 32), 'left siblings': ['SIMPX'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja also dieses letzte hotel das hat mich auch am meisten interessiert und da wir sowieso auf firmenkosten reisen werden denke ich schon das wir uns dort ein einzelzimmer auch nehmen konnen)

Sentence 562:
4 Initial errors
0 on fringe, 2 iterations
2 Error:Single Word Phrase
2 Error:UNSET move
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SU[00m
	(TOP
		(TURN
			[01;31m(SU[00m
				(SIMPX
					(KOORD und)
					(VF da)
					(LK ist)
					(MF ja eine pianobar dabei))[01;31m)[00m
			(SU
				(SIMPX
					(VF insofern)
					(LK ware)
					(MF
						(NX das abendprogramm)
						(ADVX eigentlich)
						(ADVX auch)
						(ADVX schon)
						[01;36m(ADVX[00m [01;31m(NX[00m
							(PIS etwas)[01;31m)[00m[01;36m)[00m)))))[01;36m)[00m
Step:Single Word Phrase
{'family': ['NX', 'ADVX', 'ADVX', 'ADVX', 'ADVX'], 'auto preterminal span': (14, 15), 'span': (14, 15), 'subtrees': ['PIS'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('PIS',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('NX', 'ADVX')}
[01;36m(SU[00m
	(TOP
		(TURN
			[01;31m(SU[00m
				(SIMPX
					(KOORD und)
					(VF da)
					(LK ist)
					(MF ja eine pianobar dabei))[01;31m)[00m
			(SU insofern ware das abendprogramm eigentlich auch schon etwas)))[01;36m)[00m
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SIMPX', 'SU'], 'mover info': [('SU', (7, 15))], 'old_family': ['SU', 'SU'], 'start left siblings': ['SU'], 'auto preterminals': ('KON', 'ADV', 'VAFIN', 'ADV', 'ART', 'NN', 'PROP', 'ADV', 'VAFIN', 'ART', 'NN', 'ADV', 'ADV', 'ADV', 'PIS'), 'start right siblings': [], 'end left siblings': ['SIMPX'], 'auto preterminal span': (0, 15), 'movers': ['SU'], 'old_parent': 'TURN', 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP und da ist ja eine pianobar dabei insofern ware das abendprogramm eigentlich auch schon etwas)

Sentence 563:
6 Initial errors
0 on fringe, 6 iterations
1 Error:UNSET remove
1 Error:Unary
1 Error:Modifier Attachment
1 Error:Unary
1 Error:UNSET remove
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM guten tag)
			[01;31m(DM[00m
				[01;31m(NX[00m
					(NX krings)
					(ADVX hier)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK habe)
				(MF eine frage))[01;31m)[00m
		(SU
			(SIMPX
				(VF vom vierundzwanzigsten bis zum funfundzwanzigsten juni)
				(LK bin)
				(MF
					(NX ich)
					[01;31m(PX[00m
						(APPR auf)
						(NX einem kongres in hannover)[01;31m)[00m))
			(SIMPX
				(KOORD und)
				(VF ich)
				(LK wurde)
				(MF
					(ADVX gern)
					[01;31m(NX[00m
						(ADVX einen tag vorher)
						(PX am dreiundzwanzigsten)[01;31m)[00m)
				(VC anreisen)))))
Step:UNSET remove
{'subtrees': ['DM', 'DM'], 'family': ['SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJA', 'NN', 'NE', 'ADV', 'PPER', 'VAFIN', 'ART', 'NN', 'APPRART', 'NN', 'APPR', 'APPRART', 'ADJA', 'NN', 'VAFIN', 'PPER', 'APPR', 'ART', 'NN', 'APPR', 'NE', 'KON', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'ADV', 'APPRART', 'NN', 'VVINF'), 'right siblings': ['SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 31), 'span': (0, 4), 'left siblings': [], 'label': 'SU', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM guten tag)
		[01;31m(DM[00m
			[01;31m(NX[00m
				(NX krings)
				(ADVX hier)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK habe)
				(MF eine frage))[01;31m)[00m
		(SU
			(SIMPX
				(VF vom vierundzwanzigsten bis zum funfundzwanzigsten juni)
				(LK bin)
				(MF
					(NX ich)
					[01;31m(PX[00m
						(APPR auf)
						(NX einem kongres in hannover)[01;31m)[00m))
			(SIMPX
				(KOORD und)
				(VF ich)
				(LK wurde)
				(MF
					(ADVX gern)
					[01;31m(NX[00m
						(ADVX einen tag vorher)
						(PX am dreiundzwanzigsten)[01;31m)[00m)
				(VC anreisen)))))
Step:Unary
{'subtrees': ['NX', 'ADVX'], 'family': ['NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NE', 'ADV'), 'right siblings': [], 'parent': 'DM', 'auto preterminal span': (2, 4), 'span': (2, 4), 'left siblings': [], 'label': 'NX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM guten tag)
		[01;31m(DM[00m
			(NX krings)
			(ADVX hier)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK habe)
				(MF eine frage))[01;31m)[00m
		(SU
			(SIMPX
				(VF vom vierundzwanzigsten bis zum funfundzwanzigsten juni)
				(LK bin)
				(MF
					(NX ich)
					[01;31m(PX[00m
						(APPR auf)
						(NX einem kongres in hannover)[01;31m)[00m))
			(SIMPX
				(KOORD und)
				(VF ich)
				(LK wurde)
				(MF
					(ADVX gern)
					[01;31m(NX[00m
						(ADVX einen tag vorher)
						(PX am dreiundzwanzigsten)[01;31m)[00m)
				(VC anreisen)))))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADVX'], 'family': ['DM', 'DM', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJA', 'NN', 'NE', 'ADV', 'PPER', 'VAFIN', 'ART', 'NN', 'APPRART', 'NN', 'APPR', 'APPRART', 'ADJA', 'NN', 'VAFIN', 'PPER', 'APPR', 'ART', 'NN', 'APPR', 'NE', 'KON', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'ADV', 'APPRART', 'NN', 'VVINF'), 'right siblings': ['SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 31), 'span': (2, 4), 'left siblings': ['DM'], 'label': 'DM', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM guten tag)
		(NX krings)
		(ADVX hier)
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK habe)
				(MF eine frage))[01;31m)[00m
		(SU
			(SIMPX
				(VF vom vierundzwanzigsten bis zum funfundzwanzigsten juni)
				(LK bin)
				(MF
					(NX ich)
					[01;31m(PX[00m
						(APPR auf)
						(NX einem kongres in hannover)[01;31m)[00m))
			(SIMPX
				(KOORD und)
				(VF ich)
				(LK wurde)
				(MF
					(ADVX gern)
					[01;31m(NX[00m
						(ADVX einen tag vorher)
						(PX am dreiundzwanzigsten)[01;31m)[00m)
				(VC anreisen)))))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['DM', 'NX', 'ADVX', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJA', 'NN', 'NE', 'ADV', 'PPER', 'VAFIN', 'ART', 'NN', 'APPRART', 'NN', 'APPR', 'APPRART', 'ADJA', 'NN', 'VAFIN', 'PPER', 'APPR', 'ART', 'NN', 'APPR', 'NE', 'KON', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'ADV', 'APPRART', 'NN', 'VVINF'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 31), 'span': (4, 8), 'left siblings': ['DM', 'NX', 'ADVX'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM guten tag)
		(NX krings)
		(ADVX hier)
		(SIMPX ich habe eine frage)
		(SU
			(SIMPX
				(VF vom vierundzwanzigsten bis zum funfundzwanzigsten juni)
				(LK bin)
				(MF
					(NX ich)
					[01;31m(PX[00m
						(APPR auf)
						(NX einem kongres in hannover)[01;31m)[00m))
			(SIMPX
				(KOORD und)
				(VF ich)
				(LK wurde)
				(MF
					(ADVX gern)
					[01;31m(NX[00m
						(ADVX einen tag vorher)
						(PX am dreiundzwanzigsten)[01;31m)[00m)
				(VC anreisen)))))
Step:UNSET remove
{'subtrees': ['APPR', 'NX'], 'family': ['NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'APPR', 'ART', 'NN', 'APPR', 'NE'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (15, 21), 'span': (16, 21), 'left siblings': ['NX'], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM guten tag)
		(NX krings)
		(ADVX hier)
		(SIMPX ich habe eine frage)
		(SU
			(SIMPX vom vierundzwanzigsten bis zum funfundzwanzigsten juni bin ich auf einem kongres in hannover)
			(SIMPX
				(KOORD und)
				(VF ich)
				(LK wurde)
				(MF
					(ADVX gern)
					[01;31m(NX[00m
						(ADVX einen tag vorher)
						(PX am dreiundzwanzigsten)[01;31m)[00m)
				(VC anreisen)))))
Step:PP Attachment
{'subtrees': ['ADVX', 'PX'], 'family': ['ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ART', 'NN', 'ADV', 'APPRART', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (24, 30), 'span': (25, 30), 'left siblings': ['ADVX'], 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP guten tag krings hier ich habe eine frage vom vierundzwanzigsten bis zum funfundzwanzigsten juni bin ich auf einem kongres in hannover und ich wurde gern einen tag vorher am dreiundzwanzigsten anreisen)

Sentence 564:
0 Initial errors
0 on fringe, 0 iterations

Sentence 565:
4 Initial errors
0 on fringe, 1 iterations
4 Error:Clause Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP [01;33m(SU[00m
	(TURN
		[01;31m(SU[00m
			(DM
				(PTKANT ja))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX kenne ich nicht) [01;33mSU)[00m
			[01;36m(SU[00m
				(SIMPX
					(KOORD aber)
					(LK hort)
					(MF sich gut)
					(VC an))[01;36m)[00m[01;31m)[00m))
Step:Clause Attachment
{'new_parent': 'SU', 'new_family': ['DM', 'SIMPX'], 'mover info': [('SIMPX', (1, 4))], 'old_family': ['SIMPX', 'SIMPX'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'VVFIN', 'PPER', 'PTKNEG', 'KON', 'VVFIN', 'PRF', 'ADJD', 'PTKVZ'), 'start right siblings': ['SIMPX'], 'end left siblings': ['DM'], 'auto preterminal span': (0, 9), 'movers': ['SIMPX'], 'old_parent': 'SU', 'end right siblings': [], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP ja kenne ich nicht aber hort sich gut an)

Sentence 566:
3 Initial errors
0 on fringe, 2 iterations
2 Error:Different label
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU gut)
		[01;31m(SU[00m
			(DM
				(NX
					(PIDAT vielen)
					(NN dank)))[01;31m)[00m
		[01;36m(NX[00m [01;31m(SU[00m
			(DM
				(ITJ tschus))[01;31m)[00m[01;36m)[00m))
Step:Different label
{'family': ['SU', 'SU', 'NX'], 'auto preterminal span': (3, 4), 'span': (3, 4), 'subtrees': ['DM'], 'parent': 'TURN', 'over_word': False, 'auto preterminals': ('ITJ',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('SU', 'NX')}
(TOP
	(TURN
		(SU gut)
		[01;31m(SU[00m
			(DM
				(NX
					(PIDAT vielen)
					(NN dank)))[01;31m)[00m
		(NX tschus)))
Step:Unary
{'subtrees': ['DM'], 'family': ['SU', 'SU', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PIDAT', 'NN', 'ITJ'), 'right siblings': ['NX'], 'parent': 'TURN', 'auto preterminal span': (0, 4), 'span': (1, 3), 'left siblings': ['SU'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP gut vielen dank tschus)

Sentence 567:
2 Initial errors
0 on fringe, 2 iterations
1 Error:Clause Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			(SIMPX die gibt es)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF wann)
				(LK mochten)
				(MF sie denn)
				(VC ankommen))[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['DM', 'SIMPX'], 'family': ['SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PDS', 'VVFIN', 'PPER', 'PWAV', 'VMFIN', 'PPER', 'ADV', 'VVINF'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 9), 'span': (0, 4), 'left siblings': [], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX die gibt es)
		[01;31m(SU[00m
			(SIMPX
				(VF wann)
				(LK mochten)
				(MF sie denn)
				(VC ankommen))[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['DM', 'SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PDS', 'VVFIN', 'PPER', 'PWAV', 'VMFIN', 'PPER', 'ADV', 'VVINF'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 9), 'span': (4, 9), 'left siblings': ['DM', 'SIMPX'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja die gibt es wann mochten sie denn ankommen)

Sentence 568:
11 Initial errors
0 on fringe, 5 iterations
5 Error:UNSET move
2 Error:Different label
2 Error:Clause Attachment
1 Error:UNSET remove
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SU[00m
	(TOP
		(TURN
			[01;31m(SU[00m
				(DM
					(ITJ gut))[01;31m)[00m
			[01;36m(SIMPX[00m
				[01;31m(SU[00m
					(SIMPX dann ware zu empfehlen um acht uhr dreisig)
					[01;31m(SIMPX[00m
						(KOORD und)
						(VF sie)
						(LK kamen)
						(VC an)
						[01;31m(NF[00m [01;33m(NF[00m
							(PX in hannover)
							[01;31m(PX[00m [01;33m(PX[00m
								(APPR um)
								[01;33m(NX[00m (NX ein uhr)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
				[01;31m(SU[00m
					(ADVX
						(ADV etwa))[01;31m)[00m[01;36m)[00m)) [01;33mNX) PX) NF)[00m[01;36m)[00m
Step:UNSET move
{'new_parent': 'PX', 'new_family': ['APPR', 'NX', 'SU'], 'mover info': [('SU', (18, 19))], 'old_family': ['SU', 'SU', 'SU'], 'start left siblings': ['SU', 'SU'], 'auto preterminals': ('ITJ', 'ADV', 'VAFIN', 'PTKZU', 'VVINF', 'APPR', 'CARD', 'NN', 'CARD', 'KON', 'PPER', 'VVFIN', 'PTKVZ', 'APPR', 'NE', 'APPR', 'CARD', 'NN', 'ADV'), 'start right siblings': [], 'end left siblings': ['APPR', 'NX'], 'auto preterminal span': (0, 19), 'adding node already present': False, 'movers': ['SU'], 'old_parent': 'TURN', 'POS confusion': ('ADV', 'ADV'), 'added and moved': True, 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'NX'}
[01;36m(SU[00m
	(TOP
		(TURN
			[01;31m(SU[00m
				(DM
					(ITJ gut))[01;31m)[00m
			[01;36m(SIMPX[00m [01;31m(SU[00m
				(SIMPX dann ware zu empfehlen um acht uhr dreisig)
				[01;31m(SIMPX[00m
					(KOORD und)
					(VF sie)
					(LK kamen)
					(VC an)
					(NF
						(PX in hannover)
						(PX
							(APPR um)
							(NX
								(NX ein uhr)
								[01;31m(SU[00m
									(ADVX
										(ADV etwa))[01;31m)[00m)))[01;31m)[00m[01;31m)[00m[01;36m)[00m))[01;36m)[00m
Step:Different label
{'family': ['SU', 'SIMPX'], 'auto preterminal span': (1, 19), 'span': (1, 19), 'subtrees': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'over_word': False, 'auto preterminals': ('ADV', 'VAFIN', 'PTKZU', 'VVINF', 'APPR', 'CARD', 'NN', 'CARD', 'KON', 'PPER', 'VVFIN', 'PTKVZ', 'APPR', 'NE', 'APPR', 'CARD', 'NN', 'ADV'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('SU', 'SIMPX')}
[01;36m(SU[00m
	(TOP
		(TURN
			[01;31m(SU[00m
				(DM
					(ITJ gut))[01;31m)[00m
			(SIMPX
				(SIMPX dann ware zu empfehlen um acht uhr dreisig)
				[01;31m(SIMPX[00m
					(KOORD und)
					(VF sie)
					(LK kamen)
					(VC an)
					(NF
						(PX in hannover)
						(PX
							(APPR um)
							(NX
								(NX ein uhr)
								[01;31m(SU[00m
									(ADVX
										(ADV etwa))[01;31m)[00m)))[01;31m)[00m)))[01;36m)[00m
Step:Clause Attachment
{'new_parent': 'SU', 'new_family': ['DM', 'SIMPX'], 'mover info': [('SIMPX', (1, 19))], 'old_family': ['SU', 'SIMPX'], 'start left siblings': ['SU'], 'auto preterminals': ('ITJ', 'ADV', 'VAFIN', 'PTKZU', 'VVINF', 'APPR', 'CARD', 'NN', 'CARD', 'KON', 'PPER', 'VVFIN', 'PTKVZ', 'APPR', 'NE', 'APPR', 'CARD', 'NN', 'ADV'), 'start right siblings': [], 'end left siblings': ['DM'], 'auto preterminal span': (0, 19), 'movers': ['SIMPX'], 'old_parent': 'TURN', 'end right siblings': [], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU
			(DM gut)
			(SIMPX
				(SIMPX dann ware zu empfehlen um acht uhr dreisig)
				[01;31m(SIMPX[00m
					(KOORD und)
					(VF sie)
					(LK kamen)
					(VC an)
					(NF
						(PX in hannover)
						(PX
							(APPR um)
							(NX
								(NX ein uhr)
								[01;31m(SU[00m
									(ADVX
										(ADV etwa))[01;31m)[00m)))[01;31m)[00m))))
Step:UNSET remove
{'subtrees': ['KOORD', 'VF', 'LK', 'VC', 'NF'], 'family': ['SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PTKZU', 'VVINF', 'APPR', 'CARD', 'NN', 'CARD', 'KON', 'PPER', 'VVFIN', 'PTKVZ', 'APPR', 'NE', 'APPR', 'CARD', 'NN', 'ADV'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (1, 19), 'span': (9, 19), 'left siblings': ['SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM gut)
			(SIMPX
				(SIMPX dann ware zu empfehlen um acht uhr dreisig)
				(KOORD und)
				(VF sie)
				(LK kamen)
				(VC an)
				(NF
					(PX in hannover)
					(PX
						(APPR um)
						(NX
							(NX ein uhr)
							[01;31m(SU[00m
								(ADVX
									(ADV etwa))[01;31m)[00m)))))))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['NX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'NN', 'ADV'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (16, 19), 'span': (18, 19), 'left siblings': ['NX'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP gut dann ware zu empfehlen um acht uhr dreisig und sie kamen an in hannover um ein uhr etwa)

Sentence 569:
2 Initial errors
0 on fringe, 1 iterations
2 Error:UNSET move
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SU[00m
	(TOP
		(TURN
			(SU ja kleinen moment)
			[01;31m(SU[00m
				(SIMPX
					(VF welche preiskategorie)
					(LK sollte)
					(MF das ungefahr)
					(VC sein))[01;31m)[00m))[01;36m)[00m
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SU', 'SIMPX'], 'mover info': [('SU', (0, 3))], 'old_family': ['SU', 'SU'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'ADJA', 'NN', 'PWAT', 'NN', 'VMFIN', 'PDS', 'ADV', 'VAINF'), 'start right siblings': ['SU'], 'end left siblings': [], 'auto preterminal span': (0, 9), 'movers': ['SU'], 'old_parent': 'TURN', 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP ja kleinen moment welche preiskategorie sollte das ungefahr sein)

Sentence 570:
5 Initial errors
0 on fringe, 4 iterations
2 Error:Modifier Attachment
1 Error:Clause Attachment
1 Error:UNSET remove
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(SIMPX da gibt es das hotel am thielenplatz)
			[01;31m(SIMPX[00m
				(VF das)
				(LK ist)
				(MF ganz in der nahe vom bahnhof)[01;31m)[00m[01;31m)[00m
		(SU das ist wohl am angenehmsten)
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(VXFIN ist)
				(LK liegt)
				[01;36m(PX[00m
					(MF
						(ADVX so)
						[01;31m(PX[00m
							(APPR zwischen)
							(NX funfundachtzig und einhundert dreisig mark)[01;31m)[00m)[01;36m)[00m)[01;31m)[00m))
Step:Modifier Attachment
{'new_parent': 'PX', 'new_family': ['ADVX', 'APPR', 'NX'], 'mover info': [('ADVX', (23, 24))], 'old_family': ['ADVX', 'PX'], 'start left siblings': [], 'auto preterminals': ('ADV', 'APPR', 'CARD', 'KON', 'CARD', 'CARD', 'NN'), 'start right siblings': ['PX'], 'end left siblings': [], 'auto preterminal span': (23, 30), 'movers': ['ADVX'], 'old_parent': 'MF', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['APPR', 'NX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			(SIMPX da gibt es das hotel am thielenplatz)
			[01;31m(SIMPX[00m
				(VF das)
				(LK ist)
				(MF ganz in der nahe vom bahnhof)[01;31m)[00m[01;31m)[00m
		(SU das ist wohl am angenehmsten)
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(VXFIN ist)
				(LK liegt)
				(MF so zwischen funfundachtzig und einhundert dreisig mark))[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'ART', 'NN', 'APPRART', 'NE', 'PDS', 'VAFIN', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'PDS', 'VAFIN', 'ADV', 'PTKA', 'ADJD', 'PDS', 'VAFIN', 'VVFIN', 'ADV', 'APPR', 'CARD', 'KON', 'CARD', 'CARD', 'NN'), 'right siblings': ['SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 30), 'span': (0, 15), 'left siblings': [], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX da gibt es das hotel am thielenplatz)
		[01;31m(SIMPX[00m
			(VF das)
			(LK ist)
			(MF ganz in der nahe vom bahnhof)[01;31m)[00m
		(SU das ist wohl am angenehmsten)
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(VXFIN ist)
				(LK liegt)
				(MF so zwischen funfundachtzig und einhundert dreisig mark))[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['SIMPX', 'SIMPX', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'ART', 'NN', 'APPRART', 'NE', 'PDS', 'VAFIN', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'PDS', 'VAFIN', 'ADV', 'PTKA', 'ADJD', 'PDS', 'VAFIN', 'VVFIN', 'ADV', 'APPR', 'CARD', 'KON', 'CARD', 'CARD', 'NN'), 'right siblings': ['SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 30), 'span': (7, 15), 'left siblings': ['SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX da gibt es das hotel am thielenplatz)
		(VF das)
		(LK ist)
		(MF ganz in der nahe vom bahnhof)
		(SU das ist wohl am angenehmsten)
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(VXFIN ist)
				(LK liegt)
				(MF so zwischen funfundachtzig und einhundert dreisig mark))[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SIMPX', 'VF', 'LK', 'MF', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'ART', 'NN', 'APPRART', 'NE', 'PDS', 'VAFIN', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'PDS', 'VAFIN', 'ADV', 'PTKA', 'ADJD', 'PDS', 'VAFIN', 'VVFIN', 'ADV', 'APPR', 'CARD', 'KON', 'CARD', 'CARD', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 30), 'span': (20, 30), 'left siblings': ['SIMPX', 'VF', 'LK', 'MF', 'SU'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP da gibt es das hotel am thielenplatz das ist ganz in der nahe vom bahnhof das ist wohl am angenehmsten das ist liegt so zwischen funfundachtzig und einhundert dreisig mark)

Sentence 571:
0 Initial errors
0 on fringe, 0 iterations

Sentence 572:
13 Initial errors
0 on fringe, 11 iterations
2 Error:UNSET move
2 Error:NP Attachment
1 Error:Single Word Phrase
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:UNSET add
1 Error:Unary
1 Error:UNSET add
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM ja)
			(DM guten tag)
			(SIMPX
				(VF hier)
				(LK ist)
				(MF
					[01;31m(NX[00m
						[01;31m(NX[00m
							[01;36m(NX[00m
								(NE gero)[01;36m)[00m
							(NE muller)[01;31m)[00m
						[01;31m(PX[00m
							(APPR aus)
							(NX koln)[01;31m)[00m[01;31m)[00m)))
		(SU [01;33m(SIMPX (SU (SIMPX[00m
			(SIMPX
				(VF ich)
				[01;31m(FKOORD[00m
					[01;31m(LKM[00m
						(LK plane)
						[01;31m(MF[00m
							[01;36m(MF[00m
								(NX
									(NX eine geschaftsreise)
									(PX nach hannover)) [01;33mSIMPX) SU)[00m[01;36m)[00m
							(NX anfang juli)[01;31m)[00m[01;31m)[00m [01;33mSIMPX)[00m
					[01;36m(KOORD[00m
						(KON und)[01;36m)[00m
					[01;31m(LKMVCN[00m
						(LK wurde)
						(MF sie)
						(VC bitten)
						(NF mir dort ein entsprechendes hotel und ein verkehrsmittel zu buchen)[01;31m)[00m[01;31m)[00m))))
Step:UNSET move
{'new_parent': 'PX', 'new_family': ['NE', 'APPR', 'NX'], 'mover info': [('NE', (6, 7))], 'old_family': ['NE', 'NE'], 'start left siblings': ['NE'], 'auto preterminals': ('NE', 'NE', 'APPR', 'NE'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (5, 9), 'movers': ['NE'], 'old_parent': 'NX', 'POS confusion': ('NE', 'NE'), 'end right siblings': ['APPR', 'NX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			(DM ja)
			(DM guten tag)
			(SIMPX
				(VF hier)
				(LK ist)
				(MF
					[01;31m(NX[00m
						(NX gero)
						[01;31m(PX[00m
							(NE muller)
							(APPR aus)
							(NX koln)[01;31m)[00m[01;31m)[00m)))
		(SU [01;33m(SIMPX (SU (SIMPX[00m
			(SIMPX
				(VF ich)
				[01;31m(FKOORD[00m
					[01;31m(LKM[00m
						(LK plane)
						[01;31m(MF[00m
							[01;36m(MF[00m
								(NX
									(NX eine geschaftsreise)
									(PX nach hannover)) [01;33mSIMPX) SU)[00m[01;36m)[00m
							(NX anfang juli)[01;31m)[00m[01;31m)[00m [01;33mSIMPX)[00m
					[01;36m(KOORD[00m
						(KON und)[01;36m)[00m
					[01;31m(LKMVCN[00m
						(LK wurde)
						(MF sie)
						(VC bitten)
						(NF mir dort ein entsprechendes hotel und ein verkehrsmittel zu buchen)[01;31m)[00m[01;31m)[00m))))
Step:NP Attachment
{'new_parent': 'LKM', 'new_family': ['LK', 'MF', 'NX'], 'mover info': [('NX', (15, 17))], 'old_family': ['NX', 'NX'], 'start left siblings': ['NX'], 'auto preterminals': ('VVFIN', 'ART', 'NN', 'APPR', 'NE', 'NN', 'NN'), 'start right siblings': [], 'end left siblings': ['LK', 'MF'], 'auto preterminal span': (10, 17), 'movers': ['NX'], 'old_parent': 'MF', 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU
			(DM ja)
			(DM guten tag)
			(SIMPX
				(VF hier)
				(LK ist)
				(MF
					[01;31m(NX[00m
						(NX gero)
						[01;31m(PX[00m
							(NE muller)
							(APPR aus)
							(NX koln)[01;31m)[00m[01;31m)[00m)))
		(SU [01;33m(SIMPX (SU (SIMPX[00m
			(SIMPX
				(VF ich)
				[01;31m(FKOORD[00m
					[01;31m(LKM[00m
						(LK plane)
						(MF eine geschaftsreise nach hannover) [01;33mSIMPX) SU)[00m
						(NX anfang juli)[01;31m)[00m [01;33mSIMPX)[00m
					[01;36m(KOORD[00m
						(KON und)[01;36m)[00m
					[01;31m(LKMVCN[00m
						(LK wurde)
						(MF sie)
						(VC bitten)
						(NF mir dort ein entsprechendes hotel und ein verkehrsmittel zu buchen)[01;31m)[00m[01;31m)[00m))))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['LKM', 'KOORD', 'LKMVCN'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON',), 'right siblings': [(LKMVCN (LK (VXFIN (VAFIN wurde))) (MF (NX (PPER sie))) (VC (VXINF (VVINF bitten))) (NF (SIMPX (MF (NX (PPER mir)) (ADVX (ADV dort)) (NX (NX (ART ein) (ADJX (ADJA entsprechendes)) (NN hotel)) (KON und) (NX (ART ein) (NN verkehrsmittel)))) (VC (VXINF (PTKZU zu) (VVINF buchen))))))], 'left siblings': [(LKM (LK (VXFIN (VVFIN plane))) (MF (NX (NX (ART eine) (NN geschaftsreise)) (PX (APPR nach) (NX (NE hannover))))) (NX (NX (NN anfang)) (NX (NN juli))))], 'auto preterminal span': (17, 18), 'span': (17, 18), 'parent': 'FKOORD', 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM ja)
			(DM guten tag)
			(SIMPX
				(VF hier)
				(LK ist)
				(MF
					[01;31m(NX[00m
						(NX gero)
						[01;31m(PX[00m
							(NE muller)
							(APPR aus)
							(NX koln)[01;31m)[00m[01;31m)[00m)))
		(SU [01;33m(SIMPX (SU (SIMPX[00m
			(SIMPX
				(VF ich)
				[01;31m(FKOORD[00m
					[01;31m(LKM[00m
						(LK plane)
						(MF eine geschaftsreise nach hannover) [01;33mSIMPX) SU)[00m
						(NX anfang juli)[01;31m)[00m [01;33mSIMPX)[00m
					(KOORD und)
					[01;31m(LKMVCN[00m
						(LK wurde)
						(MF sie)
						(VC bitten)
						(NF mir dort ein entsprechendes hotel und ein verkehrsmittel zu buchen)[01;31m)[00m[01;31m)[00m))))
Step:Unary
{'subtrees': ['NX', 'PX'], 'family': ['NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NE', 'NE', 'APPR', 'NE'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (5, 9), 'span': (5, 9), 'left siblings': [], 'label': 'NX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM ja)
			(DM guten tag)
			(SIMPX
				(VF hier)
				(LK ist)
				(MF
					(NX gero)
					[01;31m(PX[00m
						(NE muller)
						(APPR aus)
						(NX koln)[01;31m)[00m)))
		(SU [01;33m(SIMPX (SU (SIMPX[00m
			(SIMPX
				(VF ich)
				[01;31m(FKOORD[00m
					[01;31m(LKM[00m
						(LK plane)
						(MF eine geschaftsreise nach hannover) [01;33mSIMPX) SU)[00m
						(NX anfang juli)[01;31m)[00m [01;33mSIMPX)[00m
					(KOORD und)
					[01;31m(LKMVCN[00m
						(LK wurde)
						(MF sie)
						(VC bitten)
						(NF mir dort ein entsprechendes hotel und ein verkehrsmittel zu buchen)[01;31m)[00m[01;31m)[00m))))
Step:UNSET remove
{'subtrees': ['NE', 'APPR', 'NX'], 'family': ['NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NE', 'NE', 'APPR', 'NE'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (5, 9), 'span': (6, 9), 'left siblings': ['NX'], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU ja guten tag hier ist gero muller aus koln)
		(SU [01;33m(SIMPX (SU (SIMPX[00m
			(SIMPX
				(VF ich)
				[01;31m(FKOORD[00m
					[01;31m(LKM[00m
						(LK plane)
						(MF eine geschaftsreise nach hannover) [01;33mSIMPX) SU)[00m
						(NX anfang juli)[01;31m)[00m [01;33mSIMPX)[00m
					(KOORD und)
					[01;31m(LKMVCN[00m
						(LK wurde)
						(MF sie)
						(VC bitten)
						(NF mir dort ein entsprechendes hotel und ein verkehrsmittel zu buchen)[01;31m)[00m[01;31m)[00m))))
Step:UNSET remove
{'subtrees': ['LK', 'MF', 'NX'], 'family': ['LKM', 'KOORD', 'LKMVCN'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'ART', 'NN', 'APPR', 'NE', 'NN', 'NN', 'KON', 'VAFIN', 'PPER', 'VVINF', 'PPER', 'ADV', 'ART', 'ADJA', 'NN', 'KON', 'ART', 'NN', 'PTKZU', 'VVINF'), 'right siblings': ['KOORD', 'LKMVCN'], 'parent': 'FKOORD', 'auto preterminal span': (10, 31), 'span': (10, 17), 'left siblings': [], 'label': 'LKM', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU ja guten tag hier ist gero muller aus koln)
		(SU [01;33m(SIMPX (SU (SIMPX[00m
			(SIMPX
				(VF ich)
				[01;31m(FKOORD[00m
					(LK plane)
					(MF eine geschaftsreise nach hannover) [01;33mSIMPX) SU)[00m
					(NX anfang juli) [01;33mSIMPX)[00m
					(KOORD und)
					[01;31m(LKMVCN[00m
						(LK wurde)
						(MF sie)
						(VC bitten)
						(NF mir dort ein entsprechendes hotel und ein verkehrsmittel zu buchen)[01;31m)[00m[01;31m)[00m))))
Step:UNSET remove
{'subtrees': ['LK', 'MF', 'NX', 'KOORD', 'LKMVCN'], 'family': ['VF', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ART', 'NN', 'APPR', 'NE', 'NN', 'NN', 'KON', 'VAFIN', 'PPER', 'VVINF', 'PPER', 'ADV', 'ART', 'ADJA', 'NN', 'KON', 'ART', 'NN', 'PTKZU', 'VVINF'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (9, 31), 'span': (10, 31), 'left siblings': ['VF'], 'label': 'FKOORD', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU ja guten tag hier ist gero muller aus koln)
		(SU
			(SIMPX
				[01;36m(SIMPX[00m
					[01;36m(SIMPX[00m
						[01;36m(SU[00m
							(VF ich)
							(LK plane)
							(MF eine geschaftsreise nach hannover)[01;36m)[00m[01;36m)[00m
					(NX anfang juli)[01;36m)[00m
				(KOORD und)
				[01;31m(LKMVCN[00m
					(LK wurde)
					(MF sie)
					(VC bitten)
					(NF mir dort ein entsprechendes hotel und ein verkehrsmittel zu buchen)[01;31m)[00m))))
Step:UNSET add
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['SU', 'NX', 'KOORD', 'LKMVCN'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ART', 'NN', 'APPR', 'NE'), 'right siblings': [(NX (NX (NN anfang)) (NX (NN juli))), (KOORD (KON und)), (LKMVCN (LK (VXFIN (VAFIN wurde))) (MF (NX (PPER sie))) (VC (VXINF (VVINF bitten))) (NF (SIMPX (MF (NX (PPER mir)) (ADVX (ADV dort)) (NX (NX (ART ein) (ADJX (ADJA entsprechendes)) (NN hotel)) (KON und) (NX (ART ein) (NN verkehrsmittel)))) (VC (VXINF (PTKZU zu) (VVINF buchen))))))], 'left siblings': [], 'auto preterminal span': (9, 15), 'span': (9, 15), 'parent': 'SIMPX', 'label': 'SU', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU ja guten tag hier ist gero muller aus koln)
		(SU
			(SIMPX
				[01;36m(SIMPX[00m
					[01;36m(SIMPX[00m
						(SU
							(VF ich)
							(LK plane)
							(MF eine geschaftsreise nach hannover))[01;36m)[00m
					(NX anfang juli)[01;36m)[00m
				(KOORD und)
				[01;31m(LKMVCN[00m
					(LK wurde)
					(MF sie)
					(VC bitten)
					(NF mir dort ein entsprechendes hotel und ein verkehrsmittel zu buchen)[01;31m)[00m))))
Step:Unary
{'subtrees': ['SU'], 'family': ['SIMPX', 'NX', 'KOORD', 'LKMVCN'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ART', 'NN', 'APPR', 'NE'), 'right siblings': [(NX (NX (NN anfang)) (NX (NN juli))), (KOORD (KON und)), (LKMVCN (LK (VXFIN (VAFIN wurde))) (MF (NX (PPER sie))) (VC (VXINF (VVINF bitten))) (NF (SIMPX (MF (NX (PPER mir)) (ADVX (ADV dort)) (NX (NX (ART ein) (ADJX (ADJA entsprechendes)) (NN hotel)) (KON und) (NX (ART ein) (NN verkehrsmittel)))) (VC (VXINF (PTKZU zu) (VVINF buchen))))))], 'left siblings': [], 'auto preterminal span': (9, 15), 'span': (9, 15), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU ja guten tag hier ist gero muller aus koln)
		(SU
			(SIMPX
				[01;36m(SIMPX[00m
					(SIMPX ich plane eine geschaftsreise nach hannover)
					(NX anfang juli)[01;36m)[00m
				(KOORD und)
				[01;31m(LKMVCN[00m
					(LK wurde)
					(MF sie)
					(VC bitten)
					(NF mir dort ein entsprechendes hotel und ein verkehrsmittel zu buchen)[01;31m)[00m))))
Step:UNSET add
{'subtrees': ['SIMPX', 'NX'], 'family': ['SIMPX', 'KOORD', 'LKMVCN'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ART', 'NN', 'APPR', 'NE', 'NN', 'NN'), 'right siblings': [(KOORD (KON und)), (LKMVCN (LK (VXFIN (VAFIN wurde))) (MF (NX (PPER sie))) (VC (VXINF (VVINF bitten))) (NF (SIMPX (MF (NX (PPER mir)) (ADVX (ADV dort)) (NX (NX (ART ein) (ADJX (ADJA entsprechendes)) (NN hotel)) (KON und) (NX (ART ein) (NN verkehrsmittel)))) (VC (VXINF (PTKZU zu) (VVINF buchen))))))], 'left siblings': [], 'auto preterminal span': (9, 17), 'span': (9, 17), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU ja guten tag hier ist gero muller aus koln)
		(SU
			(SIMPX
				(SIMPX ich plane eine geschaftsreise nach hannover anfang juli)
				(KOORD und)
				[01;31m(LKMVCN[00m
					(LK wurde)
					(MF sie)
					(VC bitten)
					(NF mir dort ein entsprechendes hotel und ein verkehrsmittel zu buchen)[01;31m)[00m))))
Step:UNSET remove
{'subtrees': ['LK', 'MF', 'VC', 'NF'], 'family': ['SIMPX', 'KOORD', 'LKMVCN'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ART', 'NN', 'APPR', 'NE', 'NN', 'NN', 'KON', 'VAFIN', 'PPER', 'VVINF', 'PPER', 'ADV', 'ART', 'ADJA', 'NN', 'KON', 'ART', 'NN', 'PTKZU', 'VVINF'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (9, 31), 'span': (18, 31), 'left siblings': ['SIMPX', 'KOORD'], 'label': 'LKMVCN', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ja guten tag hier ist gero muller aus koln ich plane eine geschaftsreise nach hannover anfang juli und wurde sie bitten mir dort ein entsprechendes hotel und ein verkehrsmittel zu buchen)

Sentence 573:
11 Initial errors
0 on fringe, 6 iterations
4 Error:UNSET move
2 Error:Different label
2 Error:Different label
1 Error:Clause Attachment
1 Error:Clause Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			(SIMPX ich habe mich ja)
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(VF ich)
				(LK habe)
				(MF mich da auch schon)
				(VC erkundigt)[01;31m)[00m
			[01;31m(SIMPX[00m
				[01;36m(NF[00m [01;31m(LV[00m
					[01;31m(NX[00m
						(NX der zug)
						[01;36m(ADVX[00m [01;31m(PX[00m
							(ADVX hier)
							(PX in bonn)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m [01;33mSIMPX)[00m[01;36m)[00m
				[01;36m(SIMPX[00m
					(VF der)
					(LK fahrt)
					(MF um acht uhr neununddreisig)
					(VC ab)[01;36m)[00m[01;31m)[00m
			[01;36m(SIMPX[00m
				(SIMPX und das habe ich mir schon zurechtgelegt)
				(SIMPX den wurde ich eigentlich ganz gerne nehmen)[01;36m)[00m[01;31m)[00m
		(SU konnten sie mir da was reservieren)))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'VC', 'LV'], 'mover info': [('LV', (12, 17))], 'old_family': ['LV', 'VF', 'LK', 'MF', 'VC'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'PPER', 'VAFIN', 'PRF', 'ADV', 'PPER', 'VAFIN', 'PRF', 'ADV', 'ADV', 'ADV', 'VVPP', 'ART', 'NN', 'ADV', 'APPR', 'NE', 'PDS', 'VVFIN', 'APPR', 'CARD', 'NN', 'CARD', 'PTKVZ', 'KON', 'PDS', 'VAFIN', 'PPER', 'PRF', 'ADV', 'VVPP', 'PDS', 'VAFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'VVINF'), 'start right siblings': ['VF', 'LK', 'MF', 'VC'], 'end left siblings': ['VF', 'LK', 'MF', 'VC'], 'auto preterminal span': (0, 38), 'movers': ['LV'], 'old_parent': 'SIMPX', 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			(SIMPX ich habe mich ja)
			(SIMPX
				(VF ich)
				(LK habe)
				(MF mich da auch schon)
				(VC erkundigt)
				[01;36m(NF[00m [01;31m(LV[00m
					[01;31m(NX[00m
						(NX der zug)
						[01;36m(ADVX[00m [01;31m(PX[00m
							(ADVX hier)
							(PX in bonn)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m)
			(SIMPX der fahrt um acht uhr neununddreisig ab)
			[01;36m(SIMPX[00m
				(SIMPX und das habe ich mir schon zurechtgelegt)
				(SIMPX den wurde ich eigentlich ganz gerne nehmen)[01;36m)[00m[01;31m)[00m
		(SU konnten sie mir da was reservieren)))
Step:Different label
{'family': ['VF', 'LK', 'MF', 'VC', 'NF'], 'auto preterminal span': (12, 17), 'span': (12, 17), 'subtrees': ['NX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('ART', 'NN', 'ADV', 'APPR', 'NE'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('LV', 'NF')}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			(SIMPX ich habe mich ja)
			(SIMPX
				(VF ich)
				(LK habe)
				(MF mich da auch schon)
				(VC erkundigt)
				(NF
					[01;31m(NX[00m
						(NX der zug)
						[01;36m(ADVX[00m [01;31m(PX[00m
							(ADVX hier)
							(PX in bonn)[01;31m)[00m[01;36m)[00m[01;31m)[00m))
			(SIMPX der fahrt um acht uhr neununddreisig ab)
			[01;36m(SIMPX[00m
				(SIMPX und das habe ich mir schon zurechtgelegt)
				(SIMPX den wurde ich eigentlich ganz gerne nehmen)[01;36m)[00m[01;31m)[00m
		(SU konnten sie mir da was reservieren)))
Step:Different label
{'family': ['NX', 'ADVX'], 'auto preterminal span': (14, 17), 'span': (14, 17), 'subtrees': ['ADVX', 'PX'], 'parent': 'NX', 'over_word': False, 'auto preterminals': ('ADV', 'APPR', 'NE'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('PX', 'ADVX')}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			(SIMPX ich habe mich ja)
			(SIMPX
				(VF ich)
				(LK habe)
				(MF mich da auch schon)
				(VC erkundigt)
				(NF
					[01;31m(NX[00m
						(NX der zug)
						(ADVX hier in bonn)[01;31m)[00m))
			(SIMPX der fahrt um acht uhr neununddreisig ab)
			[01;36m(SIMPX[00m
				(SIMPX und das habe ich mir schon zurechtgelegt)
				(SIMPX den wurde ich eigentlich ganz gerne nehmen)[01;36m)[00m[01;31m)[00m
		(SU konnten sie mir da was reservieren)))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'PDS', 'VAFIN', 'PPER', 'PRF', 'ADV', 'VVPP', 'PDS', 'VAFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'VVINF'), 'right siblings': [], 'left siblings': [(DM (PTKANT ja)), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VAFIN habe))) (MF (NX (PRF mich)) (ADVX (ADV ja)))), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VAFIN habe))) (MF (NX (PRF mich)) (ADVX (ADV da)) (ADVX (ADV auch)) (ADVX (ADV schon))) (VC (VXINF (VVPP erkundigt))) (NF (NX (NX (ART der) (NN zug)) (ADVX (ADVX (ADV hier)) (PX (APPR in) (NX (NE bonn))))))), (SIMPX (VF (NX (PDS der))) (LK (VXFIN (VVFIN fahrt))) (MF (PX (APPR um) (NX (NX (ADJX (CARD acht)) (NN uhr)) (ADJX (CARD neununddreisig))))) (VC (PTKVZ ab)))], 'auto preterminal span': (24, 38), 'span': (24, 38), 'parent': 'SU', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			(SIMPX ich habe mich ja)
			(SIMPX
				(VF ich)
				(LK habe)
				(MF mich da auch schon)
				(VC erkundigt)
				(NF
					[01;31m(NX[00m
						(NX der zug)
						(ADVX hier in bonn)[01;31m)[00m))
			(SIMPX der fahrt um acht uhr neununddreisig ab)
			(SIMPX und das habe ich mir schon zurechtgelegt den wurde ich eigentlich ganz gerne nehmen)[01;31m)[00m
		(SU konnten sie mir da was reservieren)))
Step:Clause Attachment
{'subtrees': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'family': ['SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VAFIN', 'PRF', 'ADV', 'PPER', 'VAFIN', 'PRF', 'ADV', 'ADV', 'ADV', 'VVPP', 'ART', 'NN', 'ADV', 'APPR', 'NE', 'PDS', 'VVFIN', 'APPR', 'CARD', 'NN', 'CARD', 'PTKVZ', 'KON', 'PDS', 'VAFIN', 'PPER', 'PRF', 'ADV', 'VVPP', 'PDS', 'VAFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'VVINF', 'VMFIN', 'PPER', 'PPER', 'ADV', 'PIS', 'VVINF'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 44), 'span': (0, 38), 'left siblings': [], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich habe mich ja)
		(SIMPX
			(VF ich)
			(LK habe)
			(MF mich da auch schon)
			(VC erkundigt)
			(NF
				[01;31m(NX[00m
					(NX der zug)
					(ADVX hier in bonn)[01;31m)[00m))
		(SIMPX der fahrt um acht uhr neununddreisig ab)
		(SIMPX und das habe ich mir schon zurechtgelegt den wurde ich eigentlich ganz gerne nehmen)
		(SU konnten sie mir da was reservieren)))
Step:Unary
{'subtrees': ['NX', 'ADVX'], 'family': ['NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'ADV', 'APPR', 'NE'), 'right siblings': [], 'parent': 'NF', 'auto preterminal span': (12, 17), 'span': (12, 17), 'left siblings': [], 'label': 'NX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja ich habe mich ja ich habe mich da auch schon erkundigt der zug hier in bonn der fahrt um acht uhr neununddreisig ab und das habe ich mir schon zurechtgelegt den wurde ich eigentlich ganz gerne nehmen konnten sie mir da was reservieren)

Sentence 574:
23 Initial errors
0 on fringe, 20 iterations
2 Error:UNSET move
2 Error:UNSET move
2 Error:NP Attachment
1 Error:UNSET add
1 Error:UNSET add
1 Error:Single Word Phrase
1 Error:Unary
1 Error:Unary
1 Error:UNSET remove
1 Error:Clause Attachment
1 Error:Single Word Phrase
1 Error:UNSET remove
1 Error:Unary
1 Error:Unary
1 Error:Clause Attachment
1 Error:UNSET add
1 Error:UNSET add
1 Error:Single Word Phrase
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			(DM gut)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF dann)
				[01;36m(LKM[00m
					(LK wurde)
					(MF ich)
					(VC sagen)
					(NF
						(SIMPX
							(VF dann)
							[01;36m(LKM[00m
								(LK nehme)
								(MF ich das)[01;36m)[00m))[01;36m)[00m)
			[01;31m(SIMPX[00m
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				(LK kann)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX
						(PPER ich))[01;31m)[00m[01;31m)[00m
			[01;31m(DM[00m
				(ADVX
					(ADV also))[01;31m)[00m [01;33mMF)[00m
			(DM wie gesagt)
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				[01;36m(SIMPX[00m
					(VF ich)
					(LK war)
					(MF noch nicht ganz sicher)[01;36m)[00m
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						[01;31m(C[00m
							(NX
								(PWS was))[01;31m)[00m [01;33mSIMPX)[00m
						(ART den)
						[01;31m(NX[00m
							(NN ende)[01;31m)[00m
						(ART der)
						[01;36m(SIMPX[00m
							[01;36m(NX[00m
								[01;36m(C[00m
									(PWS [01;33m(SIMPX[00m was)[01;36m)[00m[01;36m)[00m
							(MF
								[01;31m(NX[00m
									(NX das ende)
									(NX der abreise)[01;31m)[00m)
							(VC anging)[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
			[01;36m(NF[00m
				(SIMPX
					(C das)
					(MF ich mich im laufe der woche noch mal)
					(VC melde)
					(NF bei ihnen))[01;36m)[00m[01;31m)[00m [01;33mSIMPX)[00m
		[01;31m(SU[00m
			(ADVX
				(KON und)
				(ADVX dann))[01;31m)[00m))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['NX', 'DM'], 'mover info': [('DM', (13, 14))], 'old_family': ['SIMPX', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX'], 'start left siblings': ['SIMPX', 'SIMPX'], 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'VVINF', 'ADV', 'VVFIN', 'PPER', 'PDS', 'KON', 'VMFIN', 'PPER', 'ADV', 'KOUS', 'VVPP', 'PPER', 'VAFIN', 'ADV', 'PTKNEG', 'ADV', 'ADJD', 'PWS', 'ART', 'NN', 'ART', 'PWS', 'ART', 'NN', 'ART', 'NN', 'VVFIN', 'KOUS', 'PPER', 'PRF', 'APPRART', 'NN', 'ART', 'NN', 'ADV', 'ADV', 'VVFIN', 'APPR', 'PPER'), 'start right siblings': ['DM', 'SIMPX', 'SIMPX'], 'end left siblings': ['NX'], 'auto preterminal span': (2, 44), 'movers': ['DM'], 'old_parent': 'SU', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			(DM gut)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF dann)
				[01;36m(LKM[00m
					(LK wurde)
					(MF ich)
					(VC sagen)
					(NF
						(SIMPX
							(VF dann)
							[01;36m(LKM[00m
								(LK nehme)
								(MF ich das)[01;36m)[00m))[01;36m)[00m)
			[01;31m(SIMPX[00m
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				(LK kann)
				(MF
					(NX ich)
					[01;31m(DM[00m
						(ADVX
							(ADV also))[01;31m)[00m)[01;31m)[00m
			(DM wie gesagt)
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				[01;36m(SIMPX[00m
					(VF ich)
					(LK war)
					(MF noch nicht ganz sicher)[01;36m)[00m
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						[01;31m(C[00m
							(NX
								(PWS was))[01;31m)[00m [01;33mSIMPX)[00m
						(ART den)
						[01;31m(NX[00m
							(NN ende)[01;31m)[00m
						(ART der)
						[01;36m(SIMPX[00m
							[01;36m(NX[00m
								[01;36m(C[00m
									(PWS [01;33m(SIMPX[00m was)[01;36m)[00m[01;36m)[00m
							(MF
								[01;31m(NX[00m
									(NX das ende)
									(NX der abreise)[01;31m)[00m)
							(VC anging)[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
			[01;36m(NF[00m
				(SIMPX
					(C das)
					(MF ich mich im laufe der woche noch mal)
					(VC melde)
					(NF bei ihnen))[01;36m)[00m[01;31m)[00m [01;33mSIMPX)[00m
		[01;31m(SU[00m
			(ADVX
				(KON und)
				(ADVX dann))[01;31m)[00m))
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SIMPX', 'SIMPX', 'DM', 'SIMPX', 'NF', 'SIMPX'], 'mover info': [('NF', (22, 32))], 'old_family': ['VF', 'LK', 'MF', 'NF'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'VVINF', 'ADV', 'VVFIN', 'PPER', 'PDS', 'KON', 'VMFIN', 'PPER', 'ADV', 'KOUS', 'VVPP', 'PPER', 'VAFIN', 'ADV', 'PTKNEG', 'ADV', 'ADJD', 'PWS', 'ART', 'NN', 'ART', 'PWS', 'ART', 'NN', 'ART', 'NN', 'VVFIN', 'KOUS', 'PPER', 'PRF', 'APPRART', 'NN', 'ART', 'NN', 'ADV', 'ADV', 'VVFIN', 'APPR', 'PPER'), 'start right siblings': [], 'end left siblings': ['SIMPX', 'SIMPX', 'DM', 'SIMPX'], 'auto preterminal span': (2, 44), 'movers': ['NF'], 'old_parent': 'SIMPX', 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			(DM gut)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF dann)
				[01;36m(LKM[00m
					(LK wurde)
					(MF ich)
					(VC sagen)
					(NF
						(SIMPX
							(VF dann)
							[01;36m(LKM[00m
								(LK nehme)
								(MF ich das)[01;36m)[00m))[01;36m)[00m)
			[01;31m(SIMPX[00m
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				(LK kann)
				(MF
					(NX ich)
					[01;31m(DM[00m
						(ADVX
							(ADV also))[01;31m)[00m)[01;31m)[00m
			(DM wie gesagt)
			[01;33m(SIMPX[00m (SIMPX ich war noch nicht ganz sicher)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					[01;31m(C[00m
						(NX
							(PWS was))[01;31m)[00m [01;33mSIMPX)[00m
					(ART den)
					[01;31m(NX[00m
						(NN ende)[01;31m)[00m
					(ART der)
					[01;36m(SIMPX[00m
						[01;36m(NX[00m
							[01;36m(C[00m
								(PWS [01;33m(SIMPX[00m was)[01;36m)[00m[01;36m)[00m
						(MF
							[01;31m(NX[00m
								(NX das ende)
								(NX der abreise)[01;31m)[00m)
						(VC anging)[01;36m)[00m[01;31m)[00m[01;31m)[00m
			[01;36m(NF[00m
				(SIMPX
					(C das)
					(MF ich mich im laufe der woche noch mal)
					(VC melde)
					(NF bei ihnen))[01;36m)[00m[01;31m)[00m [01;33mSIMPX)[00m
		[01;31m(SU[00m
			(ADVX
				(KON und)
				(ADVX dann))[01;31m)[00m))
Step:NP Attachment
{'new_parent': 'NF', 'new_family': ['C', 'ART', 'NX', 'ART', 'SIMPX'], 'mover info': [('C', (22, 23)), ('ART', (23, 24)), ('NX', (24, 25)), ('ART', (25, 26))], 'old_family': ['C', 'ART', 'NX', 'ART', 'PWS', 'MF', 'VC'], 'start left siblings': [], 'auto preterminals': ('PWS', 'ART', 'NN', 'ART', 'PWS', 'ART', 'NN', 'ART', 'NN', 'VVFIN'), 'start right siblings': ['PWS', 'MF', 'VC'], 'end left siblings': [], 'auto preterminal span': (22, 32), 'movers': ['C', 'ART', 'NX', 'ART'], 'old_parent': 'SIMPX', 'end right siblings': ['SIMPX'], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			(DM gut)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF dann)
				[01;36m(LKM[00m
					(LK wurde)
					(MF ich)
					(VC sagen)
					(NF
						(SIMPX
							(VF dann)
							[01;36m(LKM[00m
								(LK nehme)
								(MF ich das)[01;36m)[00m))[01;36m)[00m)
			[01;31m(SIMPX[00m
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				(LK kann)
				(MF
					(NX ich)
					[01;31m(DM[00m
						(ADVX
							(ADV also))[01;31m)[00m)[01;31m)[00m
			(DM wie gesagt)
			[01;33m(SIMPX[00m (SIMPX ich war noch nicht ganz sicher)
			[01;31m(NF[00m
				[01;31m(C[00m
					(NX
						(PWS was))[01;31m)[00m [01;33mSIMPX)[00m
				(ART den)
				[01;31m(NX[00m
					(NN ende)[01;31m)[00m
				(ART der)
				(SIMPX [01;33m(SIMPX[00m
					[01;36m(NX[00m
						[01;36m(C[00m
							(PWS was)[01;36m)[00m[01;36m)[00m
					(MF
						[01;31m(NX[00m
							(NX das ende)
							(NX der abreise)[01;31m)[00m)
					(VC anging))[01;31m)[00m
			[01;36m(NF[00m
				(SIMPX
					(C das)
					(MF ich mich im laufe der woche noch mal)
					(VC melde)
					(NF bei ihnen))[01;36m)[00m[01;31m)[00m [01;33mSIMPX)[00m
		[01;31m(SU[00m
			(ADVX
				(KON und)
				(ADVX dann))[01;31m)[00m))
Step:UNSET add
{'subtrees': ['LK', 'MF', 'VC', 'NF'], 'family': ['VF', 'LKM'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'PPER', 'VVINF', 'ADV', 'VVFIN', 'PPER', 'PDS'), 'right siblings': [], 'left siblings': [(VF (ADVX (ADV dann)))], 'auto preterminal span': (3, 10), 'span': (3, 10), 'parent': 'SIMPX', 'label': 'LKM', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			(DM gut)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF dann)
				(LKM
					(LK wurde)
					(MF ich)
					(VC sagen)
					(NF
						(SIMPX
							(VF dann)
							[01;36m(LKM[00m
								(LK nehme)
								(MF ich das)[01;36m)[00m))))
			[01;31m(SIMPX[00m
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				(LK kann)
				(MF
					(NX ich)
					[01;31m(DM[00m
						(ADVX
							(ADV also))[01;31m)[00m)[01;31m)[00m
			(DM wie gesagt)
			[01;33m(SIMPX[00m (SIMPX ich war noch nicht ganz sicher)
			[01;31m(NF[00m
				[01;31m(C[00m
					(NX
						(PWS was))[01;31m)[00m [01;33mSIMPX)[00m
				(ART den)
				[01;31m(NX[00m
					(NN ende)[01;31m)[00m
				(ART der)
				(SIMPX [01;33m(SIMPX[00m
					[01;36m(NX[00m
						[01;36m(C[00m
							(PWS was)[01;36m)[00m[01;36m)[00m
					(MF
						[01;31m(NX[00m
							(NX das ende)
							(NX der abreise)[01;31m)[00m)
					(VC anging))[01;31m)[00m
			[01;36m(NF[00m
				(SIMPX
					(C das)
					(MF ich mich im laufe der woche noch mal)
					(VC melde)
					(NF bei ihnen))[01;36m)[00m[01;31m)[00m [01;33mSIMPX)[00m
		[01;31m(SU[00m
			(ADVX
				(KON und)
				(ADVX dann))[01;31m)[00m))
Step:UNSET add
{'subtrees': ['LK', 'MF'], 'family': ['VF', 'LKM'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'PDS'), 'right siblings': [], 'left siblings': [(VF (ADVX (ADV dann)))], 'auto preterminal span': (7, 10), 'span': (7, 10), 'parent': 'SIMPX', 'label': 'LKM', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			(DM gut)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX dann wurde ich sagen dann nehme ich das)
			[01;31m(SIMPX[00m
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				(LK kann)
				(MF
					(NX ich)
					[01;31m(DM[00m
						(ADVX
							(ADV also))[01;31m)[00m)[01;31m)[00m
			(DM wie gesagt)
			[01;33m(SIMPX[00m (SIMPX ich war noch nicht ganz sicher)
			[01;31m(NF[00m
				[01;31m(C[00m
					(NX
						(PWS was))[01;31m)[00m [01;33mSIMPX)[00m
				(ART den)
				[01;31m(NX[00m
					(NN ende)[01;31m)[00m
				(ART der)
				(SIMPX [01;33m(SIMPX[00m
					[01;36m(NX[00m
						[01;36m(C[00m
							(PWS was)[01;36m)[00m[01;36m)[00m
					(MF
						[01;31m(NX[00m
							(NX das ende)
							(NX der abreise)[01;31m)[00m)
					(VC anging))[01;31m)[00m
			[01;36m(NF[00m
				(SIMPX
					(C das)
					(MF ich mich im laufe der woche noch mal)
					(VC melde)
					(NF bei ihnen))[01;36m)[00m[01;31m)[00m [01;33mSIMPX)[00m
		[01;31m(SU[00m
			(ADVX
				(KON und)
				(ADVX dann))[01;31m)[00m))
Step:Single Word Phrase
{'subtrees': ['PWS'], 'family': ['C', 'MF', 'VC'], 'over_word': True, 'over words': True, 'auto preterminals': ('PWS',), 'right siblings': [(MF (NX (NX (ART das) (NN ende)) (NX (ART der) (NN abreise)))), (VC (VXFIN (VVFIN anging)))], 'left siblings': [], 'auto preterminal span': (26, 27), 'span': (26, 27), 'parent': 'SIMPX', 'label': 'C', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			(DM gut)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX dann wurde ich sagen dann nehme ich das)
			[01;31m(SIMPX[00m
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				(LK kann)
				(MF
					(NX ich)
					[01;31m(DM[00m
						(ADVX
							(ADV also))[01;31m)[00m)[01;31m)[00m
			(DM wie gesagt)
			[01;33m(SIMPX[00m (SIMPX ich war noch nicht ganz sicher)
			[01;31m(NF[00m
				[01;31m(C[00m
					(NX
						(PWS was))[01;31m)[00m [01;33mSIMPX)[00m
				(ART den)
				[01;31m(NX[00m
					(NN ende)[01;31m)[00m
				(ART der)
				(SIMPX [01;33m(SIMPX[00m
					[01;36m(NX[00m
						(C
							(PWS was))[01;36m)[00m
					(MF
						[01;31m(NX[00m
							(NX das ende)
							(NX der abreise)[01;31m)[00m)
					(VC anging))[01;31m)[00m
			[01;36m(NF[00m
				(SIMPX
					(C das)
					(MF ich mich im laufe der woche noch mal)
					(VC melde)
					(NF bei ihnen))[01;36m)[00m[01;31m)[00m [01;33mSIMPX)[00m
		[01;31m(SU[00m
			(ADVX
				(KON und)
				(ADVX dann))[01;31m)[00m))
Step:Unary
{'subtrees': ['C'], 'family': ['NX', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('PWS',), 'right siblings': [(MF (NX (NX (ART das) (NN ende)) (NX (ART der) (NN abreise)))), (VC (VXFIN (VVFIN anging)))], 'left siblings': [], 'auto preterminal span': (26, 27), 'span': (26, 27), 'parent': 'SIMPX', 'label': 'NX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			(DM gut)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX dann wurde ich sagen dann nehme ich das)
			[01;31m(SIMPX[00m
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				(LK kann)
				(MF
					(NX ich)
					[01;31m(DM[00m
						(ADVX
							(ADV also))[01;31m)[00m)[01;31m)[00m
			(DM wie gesagt)
			[01;33m(SIMPX[00m (SIMPX ich war noch nicht ganz sicher)
			[01;31m(NF[00m
				[01;31m(C[00m
					(NX
						(PWS was))[01;31m)[00m [01;33mSIMPX)[00m
				(ART den)
				[01;31m(NX[00m
					(NN ende)[01;31m)[00m
				(ART der)
				(SIMPX [01;33m(SIMPX[00m
					(NX was)
					(MF
						[01;31m(NX[00m
							(NX das ende)
							(NX der abreise)[01;31m)[00m)
					(VC anging))[01;31m)[00m
			[01;36m(NF[00m
				(SIMPX
					(C das)
					(MF ich mich im laufe der woche noch mal)
					(VC melde)
					(NF bei ihnen))[01;36m)[00m[01;31m)[00m [01;33mSIMPX)[00m
		[01;31m(SU[00m
			(ADVX
				(KON und)
				(ADVX dann))[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SIMPX', 'SIMPX', 'DM', 'SIMPX', 'NF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'PRF', 'APPRART', 'NN', 'ART', 'NN', 'ADV', 'ADV', 'VVFIN', 'APPR', 'PPER'), 'right siblings': [], 'left siblings': [(SIMPX (VF (ADVX (ADV dann))) (LKM (LK (VXFIN (VAFIN wurde))) (MF (NX (PPER ich))) (VC (VXINF (VVINF sagen))) (NF (SIMPX (VF (ADVX (ADV dann))) (LKM (LK (VXFIN (VVFIN nehme))) (MF (NX (PPER ich)) (NX (PDS das)))))))), (SIMPX (KOORD (KON und)) (LK (VXFIN (VMFIN kann))) (MF (NX (PPER ich)) (DM (ADVX (ADV also))))), (DM (SIMPX (C (KOUS wie)) (VC (VXINF (VVPP gesagt))))), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VAFIN war))) (MF (ADVX (ADVX (ADV noch)) (PTKNEG nicht)) (ADJX (ADVX (ADV ganz)) (ADJD sicher)))), (NF (C (NX (PWS was))) (ART den) (NX (NN ende)) (ART der) (SIMPX (NX (C (PWS was))) (MF (NX (NX (ART das) (NN ende)) (NX (ART der) (NN abreise)))) (VC (VXFIN (VVFIN anging)))))], 'auto preterminal span': (32, 44), 'span': (32, 44), 'parent': 'SU', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			(DM gut)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX dann wurde ich sagen dann nehme ich das)
			[01;31m(SIMPX[00m
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				(LK kann)
				(MF
					(NX ich)
					[01;31m(DM[00m
						(ADVX
							(ADV also))[01;31m)[00m)[01;31m)[00m
			(DM wie gesagt)
			[01;33m(SIMPX[00m (SIMPX ich war noch nicht ganz sicher)
			[01;31m(NF[00m
				[01;31m(C[00m
					(NX
						(PWS was))[01;31m)[00m [01;33mSIMPX)[00m
				(ART den)
				[01;31m(NX[00m
					(NN ende)[01;31m)[00m
				(ART der)
				(SIMPX [01;33m(SIMPX[00m
					(NX was)
					(MF
						[01;31m(NX[00m
							(NX das ende)
							(NX der abreise)[01;31m)[00m)
					(VC anging))[01;31m)[00m
			(NF das ich mich im laufe der woche noch mal melde bei ihnen)[01;31m)[00m [01;33mSIMPX)[00m
		[01;31m(SU[00m
			(ADVX
				(KON und)
				(ADVX dann))[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['DM', 'DM'], 'family': ['SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'ADV', 'VAFIN', 'PPER', 'VVINF', 'ADV', 'VVFIN', 'PPER', 'PDS', 'KON', 'VMFIN', 'PPER', 'ADV', 'KOUS', 'VVPP', 'PPER', 'VAFIN', 'ADV', 'PTKNEG', 'ADV', 'ADJD', 'PWS', 'ART', 'NN', 'ART', 'PWS', 'ART', 'NN', 'ART', 'NN', 'VVFIN', 'KOUS', 'PPER', 'PRF', 'APPRART', 'NN', 'ART', 'NN', 'ADV', 'ADV', 'VVFIN', 'APPR', 'PPER', 'KON', 'ADV'), 'right siblings': ['SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 46), 'span': (0, 2), 'left siblings': [], 'label': 'SU', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		[01;31m(SU[00m
			(SIMPX dann wurde ich sagen dann nehme ich das)
			[01;31m(SIMPX[00m
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				(LK kann)
				(MF
					(NX ich)
					[01;31m(DM[00m
						(ADVX
							(ADV also))[01;31m)[00m)[01;31m)[00m
			(DM wie gesagt)
			[01;33m(SIMPX[00m (SIMPX ich war noch nicht ganz sicher)
			[01;31m(NF[00m
				[01;31m(C[00m
					(NX
						(PWS was))[01;31m)[00m [01;33mSIMPX)[00m
				(ART den)
				[01;31m(NX[00m
					(NN ende)[01;31m)[00m
				(ART der)
				(SIMPX [01;33m(SIMPX[00m
					(NX was)
					(MF
						[01;31m(NX[00m
							(NX das ende)
							(NX der abreise)[01;31m)[00m)
					(VC anging))[01;31m)[00m
			(NF das ich mich im laufe der woche noch mal melde bei ihnen)[01;31m)[00m [01;33mSIMPX)[00m
		[01;31m(SU[00m
			(ADVX
				(KON und)
				(ADVX dann))[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX', 'DM', 'SIMPX', 'NF', 'NF'], 'family': ['DM', 'DM', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'ADV', 'VAFIN', 'PPER', 'VVINF', 'ADV', 'VVFIN', 'PPER', 'PDS', 'KON', 'VMFIN', 'PPER', 'ADV', 'KOUS', 'VVPP', 'PPER', 'VAFIN', 'ADV', 'PTKNEG', 'ADV', 'ADJD', 'PWS', 'ART', 'NN', 'ART', 'PWS', 'ART', 'NN', 'ART', 'NN', 'VVFIN', 'KOUS', 'PPER', 'PRF', 'APPRART', 'NN', 'ART', 'NN', 'ADV', 'ADV', 'VVFIN', 'APPR', 'PPER', 'KON', 'ADV'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 46), 'span': (2, 44), 'left siblings': ['DM', 'DM'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		(SIMPX dann wurde ich sagen dann nehme ich das)
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(LK kann)
			(MF
				(NX ich)
				[01;31m(DM[00m
					(ADVX
						(ADV also))[01;31m)[00m)[01;31m)[00m
		(DM wie gesagt)
		[01;33m(SIMPX[00m (SIMPX ich war noch nicht ganz sicher)
		[01;31m(NF[00m
			[01;31m(C[00m
				(NX
					(PWS was))[01;31m)[00m [01;33mSIMPX)[00m
			(ART den)
			[01;31m(NX[00m
				(NN ende)[01;31m)[00m
			(ART der)
			(SIMPX [01;33m(SIMPX[00m
				(NX was)
				(MF
					[01;31m(NX[00m
						(NX das ende)
						(NX der abreise)[01;31m)[00m)
				(VC anging))[01;31m)[00m
		(NF das ich mich im laufe der woche noch mal melde bei ihnen) [01;33mSIMPX)[00m
		[01;31m(SU[00m
			(ADVX
				(KON und)
				(ADVX dann))[01;31m)[00m))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['KOORD', 'LK', 'MF'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON', 'VMFIN', 'PPER', 'ADV'), 'right siblings': ['LK', 'MF'], 'parent': 'SIMPX', 'auto preterminal span': (10, 14), 'span': (10, 11), 'left siblings': [], 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		(SIMPX dann wurde ich sagen dann nehme ich das)
		[01;31m(SIMPX[00m
			(KON und)
			(LK kann)
			(MF
				(NX ich)
				[01;31m(DM[00m
					(ADVX
						(ADV also))[01;31m)[00m)[01;31m)[00m
		(DM wie gesagt)
		[01;33m(SIMPX[00m (SIMPX ich war noch nicht ganz sicher)
		[01;31m(NF[00m
			[01;31m(C[00m
				(NX
					(PWS was))[01;31m)[00m [01;33mSIMPX)[00m
			(ART den)
			[01;31m(NX[00m
				(NN ende)[01;31m)[00m
			(ART der)
			(SIMPX [01;33m(SIMPX[00m
				(NX was)
				(MF
					[01;31m(NX[00m
						(NX das ende)
						(NX der abreise)[01;31m)[00m)
				(VC anging))[01;31m)[00m
		(NF das ich mich im laufe der woche noch mal melde bei ihnen) [01;33mSIMPX)[00m
		[01;31m(SU[00m
			(ADVX
				(KON und)
				(ADVX dann))[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['KON', 'LK', 'MF'], 'family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'SIMPX', 'NF', 'NF', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'ADV', 'VAFIN', 'PPER', 'VVINF', 'ADV', 'VVFIN', 'PPER', 'PDS', 'KON', 'VMFIN', 'PPER', 'ADV', 'KOUS', 'VVPP', 'PPER', 'VAFIN', 'ADV', 'PTKNEG', 'ADV', 'ADJD', 'PWS', 'ART', 'NN', 'ART', 'PWS', 'ART', 'NN', 'ART', 'NN', 'VVFIN', 'KOUS', 'PPER', 'PRF', 'APPRART', 'NN', 'ART', 'NN', 'ADV', 'ADV', 'VVFIN', 'APPR', 'PPER', 'KON', 'ADV'), 'right siblings': ['DM', 'SIMPX', 'NF', 'NF', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 46), 'span': (10, 14), 'left siblings': ['DM', 'DM', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		(SIMPX dann wurde ich sagen dann nehme ich das)
		(KON und)
		(LK kann)
		(MF
			(NX ich)
			[01;31m(DM[00m
				(ADVX
					(ADV also))[01;31m)[00m)
		(DM wie gesagt)
		[01;33m(SIMPX[00m (SIMPX ich war noch nicht ganz sicher)
		[01;31m(NF[00m
			[01;31m(C[00m
				(NX
					(PWS was))[01;31m)[00m [01;33mSIMPX)[00m
			(ART den)
			[01;31m(NX[00m
				(NN ende)[01;31m)[00m
			(ART der)
			(SIMPX [01;33m(SIMPX[00m
				(NX was)
				(MF
					[01;31m(NX[00m
						(NX das ende)
						(NX der abreise)[01;31m)[00m)
				(VC anging))[01;31m)[00m
		(NF das ich mich im laufe der woche noch mal melde bei ihnen) [01;33mSIMPX)[00m
		[01;31m(SU[00m
			(ADVX
				(KON und)
				(ADVX dann))[01;31m)[00m))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['NX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (12, 14), 'span': (13, 14), 'left siblings': ['NX'], 'label': 'DM', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		(SIMPX dann wurde ich sagen dann nehme ich das)
		(KON und)
		(LK kann)
		(MF ich also)
		(DM wie gesagt)
		[01;33m(SIMPX[00m (SIMPX ich war noch nicht ganz sicher)
		[01;31m(NF[00m
			[01;31m(C[00m
				(NX
					(PWS was))[01;31m)[00m [01;33mSIMPX)[00m
			(ART den)
			[01;31m(NX[00m
				(NN ende)[01;31m)[00m
			(ART der)
			(SIMPX [01;33m(SIMPX[00m
				(NX was)
				(MF
					[01;31m(NX[00m
						(NX das ende)
						(NX der abreise)[01;31m)[00m)
				(VC anging))[01;31m)[00m
		(NF das ich mich im laufe der woche noch mal melde bei ihnen) [01;33mSIMPX)[00m
		[01;31m(SU[00m
			(ADVX
				(KON und)
				(ADVX dann))[01;31m)[00m))
Step:Unary
{'subtrees': ['NX'], 'family': ['C', 'ART', 'NX', 'ART', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PWS', 'ART', 'NN', 'ART', 'PWS', 'ART', 'NN', 'ART', 'NN', 'VVFIN'), 'right siblings': ['ART', 'NX', 'ART', 'SIMPX'], 'parent': 'NF', 'auto preterminal span': (22, 32), 'span': (22, 23), 'left siblings': [], 'label': 'C', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		(SIMPX dann wurde ich sagen dann nehme ich das)
		(KON und)
		(LK kann)
		(MF ich also)
		(DM wie gesagt)
		[01;33m(SIMPX[00m (SIMPX ich war noch nicht ganz sicher)
		[01;31m(NF[00m
			(NX was) [01;33mSIMPX)[00m
			(ART den)
			[01;31m(NX[00m
				(NN ende)[01;31m)[00m
			(ART der)
			(SIMPX [01;33m(SIMPX[00m
				(NX was)
				(MF
					[01;31m(NX[00m
						(NX das ende)
						(NX der abreise)[01;31m)[00m)
				(VC anging))[01;31m)[00m
		(NF das ich mich im laufe der woche noch mal melde bei ihnen) [01;33mSIMPX)[00m
		[01;31m(SU[00m
			(ADVX
				(KON und)
				(ADVX dann))[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['NX', 'ART', 'NX', 'ART', 'SIMPX'], 'family': ['DM', 'DM', 'SIMPX', 'KON', 'LK', 'MF', 'DM', 'SIMPX', 'NF', 'NF', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'ADV', 'VAFIN', 'PPER', 'VVINF', 'ADV', 'VVFIN', 'PPER', 'PDS', 'KON', 'VMFIN', 'PPER', 'ADV', 'KOUS', 'VVPP', 'PPER', 'VAFIN', 'ADV', 'PTKNEG', 'ADV', 'ADJD', 'PWS', 'ART', 'NN', 'ART', 'PWS', 'ART', 'NN', 'ART', 'NN', 'VVFIN', 'KOUS', 'PPER', 'PRF', 'APPRART', 'NN', 'ART', 'NN', 'ADV', 'ADV', 'VVFIN', 'APPR', 'PPER', 'KON', 'ADV'), 'right siblings': ['NF', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 46), 'span': (22, 32), 'left siblings': ['DM', 'DM', 'SIMPX', 'KON', 'LK', 'MF', 'DM', 'SIMPX'], 'label': 'NF', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		(SIMPX dann wurde ich sagen dann nehme ich das)
		(KON und)
		(LK kann)
		(MF ich also)
		(DM wie gesagt)
		[01;36m(SIMPX[00m
			(SIMPX ich war noch nicht ganz sicher)
			(NX was)[01;36m)[00m
		(ART den)
		[01;31m(NX[00m
			(NN ende)[01;31m)[00m
		(ART der)
		[01;36m(SIMPX[00m
			(SIMPX
				(NX was)
				(MF
					[01;31m(NX[00m
						(NX das ende)
						(NX der abreise)[01;31m)[00m)
				(VC anging))
			(NF das ich mich im laufe der woche noch mal melde bei ihnen)[01;36m)[00m
		[01;31m(SU[00m
			(ADVX
				(KON und)
				(ADVX dann))[01;31m)[00m))
Step:UNSET add
{'subtrees': ['SIMPX', 'NX'], 'family': ['DM', 'DM', 'SIMPX', 'KON', 'LK', 'MF', 'DM', 'SIMPX', 'ART', 'NX', 'ART', 'SIMPX', 'NF', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'ADV', 'PTKNEG', 'ADV', 'ADJD', 'PWS'), 'right siblings': [(ART den), (NX (NN ende)), (ART der), (SIMPX (NX (C (PWS was))) (MF (NX (NX (ART das) (NN ende)) (NX (ART der) (NN abreise)))) (VC (VXFIN (VVFIN anging)))), (NF (SIMPX (C (KOUS das)) (MF (NX (PPER ich)) (NX (PRF mich)) (PX (APPRART im) (NX (NX (NN laufe)) (NX (ART der) (NN woche)))) (ADVX (ADV noch)) (ADVX (ADV mal))) (VC (VXFIN (VVFIN melde))) (NF (PX (APPR bei) (NX (PPER ihnen)))))), (SU (ADVX (KON und) (ADVX (ADV dann))))], 'left siblings': [(DM (PTKANT ja)), (DM (ITJ gut)), (SIMPX (VF (ADVX (ADV dann))) (LKM (LK (VXFIN (VAFIN wurde))) (MF (NX (PPER ich))) (VC (VXINF (VVINF sagen))) (NF (SIMPX (VF (ADVX (ADV dann))) (LKM (LK (VXFIN (VVFIN nehme))) (MF (NX (PPER ich)) (NX (PDS das)))))))), (KON und), (LK (VXFIN (VMFIN kann))), (MF (NX (PPER ich)) (ADVX (ADV also))), (DM (SIMPX (C (KOUS wie)) (VC (VXINF (VVPP gesagt)))))], 'auto preterminal span': (16, 23), 'span': (16, 23), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		(SIMPX dann wurde ich sagen dann nehme ich das)
		(KON und)
		(LK kann)
		(MF ich also)
		(DM wie gesagt)
		(SIMPX ich war noch nicht ganz sicher was)
		(ART den)
		[01;31m(NX[00m
			(NN ende)[01;31m)[00m
		(ART der)
		[01;36m(SIMPX[00m
			(SIMPX
				(NX was)
				(MF
					[01;31m(NX[00m
						(NX das ende)
						(NX der abreise)[01;31m)[00m)
				(VC anging))
			(NF das ich mich im laufe der woche noch mal melde bei ihnen)[01;36m)[00m
		[01;31m(SU[00m
			(ADVX
				(KON und)
				(ADVX dann))[01;31m)[00m))
Step:UNSET add
{'subtrees': ['SIMPX', 'NF'], 'family': ['DM', 'DM', 'SIMPX', 'KON', 'LK', 'MF', 'DM', 'SIMPX', 'ART', 'NX', 'ART', 'SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PWS', 'ART', 'NN', 'ART', 'NN', 'VVFIN', 'KOUS', 'PPER', 'PRF', 'APPRART', 'NN', 'ART', 'NN', 'ADV', 'ADV', 'VVFIN', 'APPR', 'PPER'), 'right siblings': [(SU (ADVX (KON und) (ADVX (ADV dann))))], 'left siblings': [(DM (PTKANT ja)), (DM (ITJ gut)), (SIMPX (VF (ADVX (ADV dann))) (LKM (LK (VXFIN (VAFIN wurde))) (MF (NX (PPER ich))) (VC (VXINF (VVINF sagen))) (NF (SIMPX (VF (ADVX (ADV dann))) (LKM (LK (VXFIN (VVFIN nehme))) (MF (NX (PPER ich)) (NX (PDS das)))))))), (KON und), (LK (VXFIN (VMFIN kann))), (MF (NX (PPER ich)) (ADVX (ADV also))), (DM (SIMPX (C (KOUS wie)) (VC (VXINF (VVPP gesagt))))), (SIMPX (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VAFIN war))) (MF (ADVX (ADVX (ADV noch)) (PTKNEG nicht)) (ADJX (ADVX (ADV ganz)) (ADJD sicher)))) (NX (PWS was))), (ART den), (NX (NN ende)), (ART der)], 'auto preterminal span': (26, 44), 'span': (26, 44), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		(SIMPX dann wurde ich sagen dann nehme ich das)
		(KON und)
		(LK kann)
		(MF ich also)
		(DM wie gesagt)
		(SIMPX ich war noch nicht ganz sicher was)
		(ART den)
		[01;31m(NX[00m
			(NN ende)[01;31m)[00m
		(ART der)
		(SIMPX
			(SIMPX
				(NX was)
				(MF
					[01;31m(NX[00m
						(NX das ende)
						(NX der abreise)[01;31m)[00m)
				(VC anging))
			(NF das ich mich im laufe der woche noch mal melde bei ihnen))
		[01;31m(SU[00m
			(ADVX
				(KON und)
				(ADVX dann))[01;31m)[00m))
Step:Single Word Phrase
{'subtrees': ['NN'], 'family': ['DM', 'DM', 'SIMPX', 'KON', 'LK', 'MF', 'DM', 'SIMPX', 'ART', 'NX', 'ART', 'SIMPX', 'SU'], 'over_word': True, 'over words': True, 'auto preterminals': ('PTKANT', 'ITJ', 'ADV', 'VAFIN', 'PPER', 'VVINF', 'ADV', 'VVFIN', 'PPER', 'PDS', 'KON', 'VMFIN', 'PPER', 'ADV', 'KOUS', 'VVPP', 'PPER', 'VAFIN', 'ADV', 'PTKNEG', 'ADV', 'ADJD', 'PWS', 'ART', 'NN', 'ART', 'PWS', 'ART', 'NN', 'ART', 'NN', 'VVFIN', 'KOUS', 'PPER', 'PRF', 'APPRART', 'NN', 'ART', 'NN', 'ADV', 'ADV', 'VVFIN', 'APPR', 'PPER', 'KON', 'ADV'), 'right siblings': ['ART', 'SIMPX', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 46), 'span': (24, 25), 'left siblings': ['DM', 'DM', 'SIMPX', 'KON', 'LK', 'MF', 'DM', 'SIMPX', 'ART'], 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		(SIMPX dann wurde ich sagen dann nehme ich das)
		(KON und)
		(LK kann)
		(MF ich also)
		(DM wie gesagt)
		(SIMPX ich war noch nicht ganz sicher was)
		(ART den)
		(NN ende)
		(ART der)
		(SIMPX
			(SIMPX
				(NX was)
				(MF
					[01;31m(NX[00m
						(NX das ende)
						(NX der abreise)[01;31m)[00m)
				(VC anging))
			(NF das ich mich im laufe der woche noch mal melde bei ihnen))
		[01;31m(SU[00m
			(ADVX
				(KON und)
				(ADVX dann))[01;31m)[00m))
Step:Unary
{'subtrees': ['NX', 'NX'], 'family': ['NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'ART', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (27, 31), 'span': (27, 31), 'left siblings': [], 'label': 'NX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		(SIMPX dann wurde ich sagen dann nehme ich das)
		(KON und)
		(LK kann)
		(MF ich also)
		(DM wie gesagt)
		(SIMPX ich war noch nicht ganz sicher was)
		(ART den)
		(NN ende)
		(ART der)
		(SIMPX was das ende der abreise anging das ich mich im laufe der woche noch mal melde bei ihnen)
		[01;31m(SU[00m
			(ADVX
				(KON und)
				(ADVX dann))[01;31m)[00m))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['DM', 'DM', 'SIMPX', 'KON', 'LK', 'MF', 'DM', 'SIMPX', 'ART', 'NN', 'ART', 'SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'ADV', 'VAFIN', 'PPER', 'VVINF', 'ADV', 'VVFIN', 'PPER', 'PDS', 'KON', 'VMFIN', 'PPER', 'ADV', 'KOUS', 'VVPP', 'PPER', 'VAFIN', 'ADV', 'PTKNEG', 'ADV', 'ADJD', 'PWS', 'ART', 'NN', 'ART', 'PWS', 'ART', 'NN', 'ART', 'NN', 'VVFIN', 'KOUS', 'PPER', 'PRF', 'APPRART', 'NN', 'ART', 'NN', 'ADV', 'ADV', 'VVFIN', 'APPR', 'PPER', 'KON', 'ADV'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 46), 'span': (44, 46), 'left siblings': ['DM', 'DM', 'SIMPX', 'KON', 'LK', 'MF', 'DM', 'SIMPX', 'ART', 'NN', 'ART', 'SIMPX'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja gut dann wurde ich sagen dann nehme ich das und kann ich also wie gesagt ich war noch nicht ganz sicher was den ende der was das ende der abreise anging das ich mich im laufe der woche noch mal melde bei ihnen und dann)

Sentence 575:
5 Initial errors
0 on fringe, 4 iterations
2 Error:NP Attachment
1 Error:Unary
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM
				(ITJ wunderbar))[01;31m)[00m
		[01;31m(SU[00m
			(DM
				(ITJ wunderbar))[01;31m)[00m
		(SU
			(DM ja)
			[01;31m(DM[00m [01;33m(NX[00m
				(NX
					(ADVX dann)
					[01;31m(NX[00m
						(NX alles) [01;33mNX)[00m
						(NX gute)[01;31m)[00m)[01;31m)[00m
			(SIMPX und ich melde mich dann in den nachsten wochen noch mal))))
Step:NP Attachment
{'new_parent': 'NX', 'new_family': ['ADVX', 'NX', 'NX'], 'mover info': [('NX', (4, 5))], 'old_family': ['NX', 'NX'], 'start left siblings': [], 'auto preterminals': ('ADV', 'PIS', 'NN'), 'start right siblings': ['NX'], 'end left siblings': ['ADVX'], 'auto preterminal span': (3, 6), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'NX', 'POS confusion': ('PIS', 'PIS'), 'added and moved': True, 'end right siblings': ['NX'], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM
				(ITJ wunderbar))[01;31m)[00m
		[01;31m(SU[00m
			(DM
				(ITJ wunderbar))[01;31m)[00m
		(SU
			(DM ja)
			[01;31m(DM[00m
				(NX
					(NX dann alles)
					(NX gute))[01;31m)[00m
			(SIMPX und ich melde mich dann in den nachsten wochen noch mal))))
Step:Unary
{'subtrees': ['DM'], 'family': ['SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ITJ', 'PTKANT', 'ADV', 'PIS', 'NN', 'KON', 'PPER', 'VVFIN', 'PRF', 'ADV', 'APPR', 'ART', 'ADJA', 'NN', 'ADV', 'ADV'), 'right siblings': ['SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 17), 'span': (0, 1), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM wunderbar)
		[01;31m(SU[00m
			(DM
				(ITJ wunderbar))[01;31m)[00m
		(SU
			(DM ja)
			[01;31m(DM[00m
				(NX
					(NX dann alles)
					(NX gute))[01;31m)[00m
			(SIMPX und ich melde mich dann in den nachsten wochen noch mal))))
Step:Unary
{'subtrees': ['DM'], 'family': ['DM', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ITJ', 'PTKANT', 'ADV', 'PIS', 'NN', 'KON', 'PPER', 'VVFIN', 'PRF', 'ADV', 'APPR', 'ART', 'ADJA', 'NN', 'ADV', 'ADV'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 17), 'span': (1, 2), 'left siblings': ['DM'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM wunderbar)
		(DM wunderbar)
		(SU
			(DM ja)
			[01;31m(DM[00m
				(NX
					(NX dann alles)
					(NX gute))[01;31m)[00m
			(SIMPX und ich melde mich dann in den nachsten wochen noch mal))))
Step:Unary
{'subtrees': ['NX'], 'family': ['DM', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADV', 'PIS', 'NN', 'KON', 'PPER', 'VVFIN', 'PRF', 'ADV', 'APPR', 'ART', 'ADJA', 'NN', 'ADV', 'ADV'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (2, 17), 'span': (3, 6), 'left siblings': ['DM'], 'label': 'DM', 'classified_type': 'Unary', 'type': 'remove'}
(TOP wunderbar wunderbar ja dann alles gute und ich melde mich dann in den nachsten wochen noch mal)

Sentence 576:
0 Initial errors
0 on fringe, 0 iterations

Sentence 577:
16 Initial errors
0 on fringe, 11 iterations
2 Error:Single Word Phrase
2 Error:Single Word Phrase
2 Error:Different label
2 Error:NP Attachment
2 Error:UNSET move
1 Error:Clause Attachment
1 Error:Clause Attachment
1 Error:PP Attachment
1 Error:Clause Attachment
1 Error:PP Attachment
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU ja das durfte kein problem sein)
		[01;31m(SU[00m
			(DM also)
			[01;33m(SIMPX[00m (SIMPX die zugverbindungen sind wunderbar)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				[01;36m(PX[00m
					(VF
						[01;31m(ADVX[00m
							(ADV naturlich)[01;31m)[00m)[01;36m)[00m
				(LK konnen)
				(MF sie auch)
				(VC fliegen)) [01;33mSIMPX)[00m
			[01;36m(PX[00m [01;31m(DM[00m
				(PWAV wobei)[01;31m)[00m[01;36m)[00m
			[01;36m(SIMPX[00m
				(SIMPX
					(VF da)
					(LK wurde)
					[01;31m(MF[00m
						(NX ich)
						(NX ihnen)
						[01;31m(PX[00m [01;33m(PX[00m
							(PROP von)[01;31m)[00m[01;31m)[00m
					[01;36m(NX[00m [01;31m(VC[00m
						[01;31m(VXINF[00m
							(VVINF abraten)[01;31m)[00m[01;31m)[00m[01;36m)[00m) [01;33mPX)[00m
				(SIMPX das lohnt sich nicht bis hannover)[01;36m)[00m
			[01;31m(SIMPX[00m
				(KOORD oder)
				[01;36m(SIMPX[00m
					(LK mochten)
					(MF sie das)[01;36m)[00m[01;31m)[00m[01;31m)[00m))
Step:Single Word Phrase
{'family': ['PX'], 'auto preterminal span': (11, 12), 'span': (11, 12), 'subtrees': ['ADV'], 'parent': 'VF', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'PX')}
(TOP
	(TURN
		(SU ja das durfte kein problem sein)
		[01;31m(SU[00m
			(DM also)
			[01;33m(SIMPX[00m (SIMPX die zugverbindungen sind wunderbar)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX naturlich konnen sie auch fliegen) [01;33mSIMPX)[00m
			[01;36m(PX[00m [01;31m(DM[00m
				(PWAV wobei)[01;31m)[00m[01;36m)[00m
			[01;36m(SIMPX[00m
				(SIMPX
					(VF da)
					(LK wurde)
					[01;31m(MF[00m
						(NX ich)
						(NX ihnen)
						[01;31m(PX[00m [01;33m(PX[00m
							(PROP von)[01;31m)[00m[01;31m)[00m
					[01;36m(NX[00m [01;31m(VC[00m
						[01;31m(VXINF[00m
							(VVINF abraten)[01;31m)[00m[01;31m)[00m[01;36m)[00m) [01;33mPX)[00m
				(SIMPX das lohnt sich nicht bis hannover)[01;36m)[00m
			[01;31m(SIMPX[00m
				(KOORD oder)
				[01;36m(SIMPX[00m
					(LK mochten)
					(MF sie das)[01;36m)[00m[01;31m)[00m[01;31m)[00m))
Step:Single Word Phrase
{'family': ['SIMPX', 'PX', 'SIMPX', 'SIMPX', 'SIMPX'], 'auto preterminal span': (16, 17), 'span': (16, 17), 'subtrees': ['PWAV'], 'parent': 'SU', 'over_word': True, 'auto preterminals': ('PWAV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('DM', 'PX')}
(TOP
	(TURN
		(SU ja das durfte kein problem sein)
		[01;31m(SU[00m
			(DM also)
			[01;33m(SIMPX[00m (SIMPX die zugverbindungen sind wunderbar)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX naturlich konnen sie auch fliegen) [01;33mSIMPX)[00m
			(PX wobei)
			[01;36m(SIMPX[00m
				(SIMPX
					(VF da)
					(LK wurde)
					[01;31m(MF[00m
						(NX ich)
						(NX ihnen)
						[01;31m(PX[00m [01;33m(PX[00m
							(PROP von)[01;31m)[00m[01;31m)[00m
					[01;36m(NX[00m [01;31m(VC[00m
						[01;31m(VXINF[00m
							(VVINF abraten)[01;31m)[00m[01;31m)[00m[01;36m)[00m) [01;33mPX)[00m
				(SIMPX das lohnt sich nicht bis hannover)[01;36m)[00m
			[01;31m(SIMPX[00m
				(KOORD oder)
				[01;36m(SIMPX[00m
					(LK mochten)
					(MF sie das)[01;36m)[00m[01;31m)[00m[01;31m)[00m))
Step:Different label
{'family': ['VF', 'LK', 'MF', 'NX'], 'auto preterminal span': (22, 23), 'span': (22, 23), 'subtrees': ['VXINF'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('VVINF',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('VC', 'NX')}
(TOP
	(TURN
		(SU ja das durfte kein problem sein)
		[01;31m(SU[00m
			(DM also)
			[01;33m(SIMPX[00m (SIMPX die zugverbindungen sind wunderbar)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX naturlich konnen sie auch fliegen) [01;33mSIMPX)[00m
			(PX wobei)
			[01;36m(SIMPX[00m
				(SIMPX
					(VF da)
					(LK wurde)
					[01;31m(MF[00m
						(NX ich)
						(NX ihnen)
						[01;31m(PX[00m [01;33m(PX[00m
							(PROP von)[01;31m)[00m[01;31m)[00m
					(NX
						[01;31m(VXINF[00m
							(VVINF abraten)[01;31m)[00m)) [01;33mPX)[00m
				(SIMPX das lohnt sich nicht bis hannover)[01;36m)[00m
			[01;31m(SIMPX[00m
				(KOORD oder)
				[01;36m(SIMPX[00m
					(LK mochten)
					(MF sie das)[01;36m)[00m[01;31m)[00m[01;31m)[00m))
Step:NP Attachment
{'new_parent': 'PX', 'new_family': ['PROP', 'NX'], 'mover info': [('NX', (22, 23))], 'old_family': ['VF', 'LK', 'MF', 'NX'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'PPER', 'PROP', 'VVINF'), 'start right siblings': [], 'end left siblings': ['PROP'], 'auto preterminal span': (17, 23), 'movers': ['NX'], 'old_parent': 'SIMPX', 'POS confusion': ('VVINF', 'VVINF'), 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU ja das durfte kein problem sein)
		[01;31m(SU[00m
			(DM also)
			[01;33m(SIMPX[00m (SIMPX die zugverbindungen sind wunderbar)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX naturlich konnen sie auch fliegen) [01;33mSIMPX)[00m
			(PX wobei)
			[01;36m(SIMPX[00m
				(SIMPX
					(VF da)
					(LK wurde)
					[01;31m(MF[00m
						(NX ich)
						(NX ihnen)
						(PX
							(PROP von)
							(NX
								[01;31m(VXINF[00m
									(VVINF abraten)[01;31m)[00m))[01;31m)[00m)
				(SIMPX das lohnt sich nicht bis hannover)[01;36m)[00m
			[01;31m(SIMPX[00m
				(KOORD oder)
				[01;36m(SIMPX[00m
					(LK mochten)
					(MF sie das)[01;36m)[00m[01;31m)[00m[01;31m)[00m))
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SIMPX', 'PX', 'SIMPX', 'SIMPX', 'KOORD', 'SIMPX'], 'mover info': [('KOORD', (29, 30))], 'old_family': ['KOORD', 'LK', 'MF'], 'start left siblings': [], 'auto preterminals': ('ADV', 'VMFIN', 'PPER', 'ADV', 'VVINF', 'PWAV', 'ADV', 'VAFIN', 'PPER', 'PPER', 'PROP', 'VVINF', 'PDS', 'VVFIN', 'PRF', 'PTKNEG', 'APPR', 'NE', 'KON', 'VMFIN', 'PPER', 'PDS'), 'start right siblings': ['LK', 'MF'], 'end left siblings': ['SIMPX', 'PX', 'SIMPX', 'SIMPX'], 'auto preterminal span': (11, 33), 'movers': ['KOORD'], 'old_parent': 'SIMPX', 'POS confusion': ('KON', 'KON'), 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU ja das durfte kein problem sein)
		[01;31m(SU[00m
			(DM also)
			[01;33m(SIMPX[00m (SIMPX die zugverbindungen sind wunderbar)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX naturlich konnen sie auch fliegen) [01;33mSIMPX)[00m
			(PX wobei)
			[01;36m(SIMPX[00m
				(SIMPX
					(VF da)
					(LK wurde)
					[01;31m(MF[00m
						(NX ich)
						(NX ihnen)
						(PX
							(PROP von)
							(NX
								[01;31m(VXINF[00m
									(VVINF abraten)[01;31m)[00m))[01;31m)[00m)
				(SIMPX das lohnt sich nicht bis hannover)[01;36m)[00m
			(KOORD oder)
			(SIMPX mochten sie das)[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['SIMPX', 'PX', 'SIMPX', 'KOORD', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'PPER', 'PROP', 'VVINF', 'PDS', 'VVFIN', 'PRF', 'PTKNEG', 'APPR', 'NE'), 'right siblings': [(KOORD (KON oder)), (SIMPX (LK (VXFIN (VMFIN mochten))) (MF (NX (PPER sie)) (NX (PDS das))))], 'left siblings': [(SIMPX (VF (PX (ADV naturlich))) (LK (VXFIN (VMFIN konnen))) (MF (NX (PPER sie)) (ADVX (ADV auch))) (VC (VXINF (VVINF fliegen)))), (PX (PWAV wobei))], 'auto preterminal span': (17, 29), 'span': (17, 29), 'parent': 'SU', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU ja das durfte kein problem sein)
		[01;31m(SU[00m
			(DM also)
			[01;33m(SIMPX[00m (SIMPX die zugverbindungen sind wunderbar)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX naturlich konnen sie auch fliegen) [01;33mSIMPX)[00m
			(PX wobei)
			(SIMPX
				(SIMPX
					(VF da)
					(LK wurde)
					[01;31m(MF[00m
						(NX ich)
						(NX ihnen)
						(PX
							(PROP von)
							(NX
								[01;31m(VXINF[00m
									(VVINF abraten)[01;31m)[00m))[01;31m)[00m)
				(SIMPX das lohnt sich nicht bis hannover))
			(KOORD oder)
			(SIMPX mochten sie das)[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['DM', 'SIMPX'], 'family': ['SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PDS', 'VMFIN', 'PIAT', 'NN', 'VAINF', 'ADV', 'ART', 'NN', 'VAFIN', 'ADJD', 'ADV', 'VMFIN', 'PPER', 'ADV', 'VVINF', 'PWAV', 'ADV', 'VAFIN', 'PPER', 'PPER', 'PROP', 'VVINF', 'PDS', 'VVFIN', 'PRF', 'PTKNEG', 'APPR', 'NE', 'KON', 'VMFIN', 'PPER', 'PDS'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 33), 'span': (6, 11), 'left siblings': ['SU'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU ja das durfte kein problem sein)
		(DM also)
		[01;33m(SIMPX[00m (SIMPX die zugverbindungen sind wunderbar)
		[01;31m(SU[00m
			(SIMPX naturlich konnen sie auch fliegen) [01;33mSIMPX)[00m
			(PX wobei)
			(SIMPX
				(SIMPX
					(VF da)
					(LK wurde)
					[01;31m(MF[00m
						(NX ich)
						(NX ihnen)
						(PX
							(PROP von)
							(NX
								[01;31m(VXINF[00m
									(VVINF abraten)[01;31m)[00m))[01;31m)[00m)
				(SIMPX das lohnt sich nicht bis hannover))
			(KOORD oder)
			(SIMPX mochten sie das)[01;31m)[00m))
Step:PP Attachment
{'subtrees': ['SIMPX', 'PX', 'SIMPX', 'KOORD', 'SIMPX'], 'family': ['SU', 'DM', 'SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PDS', 'VMFIN', 'PIAT', 'NN', 'VAINF', 'ADV', 'ART', 'NN', 'VAFIN', 'ADJD', 'ADV', 'VMFIN', 'PPER', 'ADV', 'VVINF', 'PWAV', 'ADV', 'VAFIN', 'PPER', 'PPER', 'PROP', 'VVINF', 'PDS', 'VVFIN', 'PRF', 'PTKNEG', 'APPR', 'NE', 'KON', 'VMFIN', 'PPER', 'PDS'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 33), 'span': (11, 33), 'left siblings': ['SU', 'DM', 'SIMPX'], 'label': 'SU', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU ja das durfte kein problem sein)
		(DM also)
		[01;36m(SIMPX[00m
			(SIMPX die zugverbindungen sind wunderbar)
			(SIMPX naturlich konnen sie auch fliegen)[01;36m)[00m
		(PX wobei)
		(SIMPX
			(SIMPX
				(VF da)
				(LK wurde)
				[01;31m(MF[00m
					(NX ich)
					(NX ihnen)
					(PX
						(PROP von)
						(NX
							[01;31m(VXINF[00m
								(VVINF abraten)[01;31m)[00m))[01;31m)[00m)
			(SIMPX das lohnt sich nicht bis hannover))
		(KOORD oder)
		(SIMPX mochten sie das)))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['SU', 'DM', 'SIMPX', 'PX', 'SIMPX', 'KOORD', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'VAFIN', 'ADJD', 'ADV', 'VMFIN', 'PPER', 'ADV', 'VVINF'), 'right siblings': [(PX (PWAV wobei)), (SIMPX (SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VAFIN wurde))) (MF (NX (PPER ich)) (NX (PPER ihnen)) (PX (PROP von) (NX (VXINF (VVINF abraten)))))) (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VVFIN lohnt))) (MF (NX (PRF sich)) (ADVX (PTKNEG nicht)) (PX (APPR bis) (NX (NE hannover)))))), (KOORD (KON oder)), (SIMPX (LK (VXFIN (VMFIN mochten))) (MF (NX (PPER sie)) (NX (PDS das))))], 'left siblings': [(SU (DM (PTKANT ja)) (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VMFIN durfte))) (MF (NX (PIAT kein) (NN problem))) (VC (VXINF (VAINF sein))))), (DM (ADVX (ADV also)))], 'auto preterminal span': (7, 16), 'span': (7, 16), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU ja das durfte kein problem sein)
		(DM also)
		(SIMPX die zugverbindungen sind wunderbar naturlich konnen sie auch fliegen)
		(PX wobei)
		(SIMPX
			(SIMPX
				(VF da)
				(LK wurde)
				[01;31m(MF[00m
					(NX ich)
					(NX ihnen)
					(PX
						(PROP von)
						(NX
							[01;31m(VXINF[00m
								(VVINF abraten)[01;31m)[00m))[01;31m)[00m)
			(SIMPX das lohnt sich nicht bis hannover))
		(KOORD oder)
		(SIMPX mochten sie das)))
Step:PP Attachment
{'subtrees': ['NX', 'NX', 'PX'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'PPER', 'PROP', 'VVINF'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (17, 23), 'span': (19, 23), 'left siblings': ['VF', 'LK'], 'label': 'MF', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU ja das durfte kein problem sein)
		(DM also)
		(SIMPX die zugverbindungen sind wunderbar naturlich konnen sie auch fliegen)
		(PX wobei)
		(SIMPX
			(SIMPX
				(VF da)
				(LK wurde)
				(NX ich)
				(NX ihnen)
				(PX
					(PROP von)
					(NX
						[01;31m(VXINF[00m
							(VVINF abraten)[01;31m)[00m)))
			(SIMPX das lohnt sich nicht bis hannover))
		(KOORD oder)
		(SIMPX mochten sie das)))
Step:Single Word Phrase
{'subtrees': ['VVINF'], 'family': ['VXINF'], 'over_word': True, 'over words': True, 'auto preterminals': ('VVINF',), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (22, 23), 'span': (22, 23), 'left siblings': [], 'label': 'VXINF', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP ja das durfte kein problem sein also die zugverbindungen sind wunderbar naturlich konnen sie auch fliegen wobei da wurde ich ihnen von abraten das lohnt sich nicht bis hannover oder mochten sie das)

Sentence 578:
21 Initial errors
0 on fringe, 13 iterations
3 Error:Clause Attachment
3 Error:Modifier Attachment
2 Error:Single Word Phrase
2 Error:Different label
2 Error:Single Word Phrase
2 Error:Modifier Attachment
1 Error:Single Word Phrase
1 Error:Unary
1 Error:Modifier Attachment
1 Error:Single Word Phrase
1 Error:Unary
1 Error:UNSET remove
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM ja)
			[01;36m(ADVX[00m [01;31m(DM[00m
				(ITJ naturlich)[01;31m)[00m[01;36m)[00m
			(SIMPX den kann ich ihnen buchen))
		[01;36m(SIMPX[00m [01;31m(SU[00m
			[01;36m(SU[00m
				(SIMPX
					(VF ich)
					(LK schaue)
					(MF mal)
					(VC nach))[01;36m)[00m
			(SIMPX da ist auch noch was frei)[01;31m)[00m[01;36m)[00m
		[01;31m(SU[00m
			(SIMPX
				(KOORD und)
				(VF wo)
				(LK mochten)
				(MF sie denn)
				(VC wohnen))[01;31m)[00m
		[01;36m(SIMPX[00m
			(SU
				[01;31m(SIMPX[00m
					(LK haben)
					[01;31m(MF[00m
						(NX sie)
						(ADVX da)
						(ADVX schon)[01;31m)[00m
					[01;36m(NX[00m [01;31m(VC[00m
						[01;31m(VXINF[00m
							(VVPP uberlegt)[01;31m)[00m[01;31m)[00m[01;36m)[00m
					[01;31m(NF[00m
						[01;31m(PX[00m
							(APPR in)
							[01;31m(NX[00m
								(NX was)
								(PX fur eine art von hotel)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
				(ADJX
					[01;36m(ADVX[00m [01;31m(ADJX[00m
						(ADJD teuer)[01;31m)[00m[01;36m)[00m
					[01;36m(SU[00m
						[01;36m(ADJX[00m
							[01;36m(ADVX[00m [01;31m(ADJX[00m
								(ADJD billig)[01;31m)[00m[01;36m)[00m
							(ADJX zentral)[01;36m)[00m[01;36m)[00m))[01;36m)[00m))
Step:Clause Attachment
{'new_parent': 'TURN', 'new_family': ['SU', 'SU', 'SIMPX', 'SU', 'SU'], 'mover info': [('SIMPX', (11, 17))], 'old_family': ['SIMPX', 'SIMPX'], 'start left siblings': ['SIMPX'], 'auto preterminals': ('PTKANT', 'ITJ', 'PDS', 'VMFIN', 'PPER', 'PPER', 'VVINF', 'PPER', 'VVFIN', 'ADV', 'PTKVZ', 'ADV', 'VAFIN', 'ADV', 'ADV', 'PIS', 'ADJD', 'KON', 'PWAV', 'VMFIN', 'PPER', 'ADV', 'VVINF', 'VAFIN', 'PPER', 'ADV', 'ADV', 'VVPP', 'APPR', 'PWS', 'APPR', 'ART', 'NN', 'APPR', 'NN', 'ADJD', 'ADJD', 'ADJD'), 'start right siblings': [], 'end left siblings': ['SU', 'SU'], 'auto preterminal span': (0, 38), 'adding node already present': False, 'movers': ['SIMPX'], 'old_parent': 'SU', 'added and moved': True, 'end right siblings': ['SU', 'SU'], 'classified_type': 'Clause Attachment', 'type': 'move', 'added label': 'SU'}
(TOP
	(TURN
		(SU
			(DM ja)
			[01;36m(ADVX[00m [01;31m(DM[00m
				(ITJ naturlich)[01;31m)[00m[01;36m)[00m
			(SIMPX den kann ich ihnen buchen))
		(SIMPX ich schaue mal nach da ist auch noch was frei)
		[01;31m(SU[00m
			(SIMPX
				(KOORD und)
				(VF wo)
				(LK mochten)
				(MF sie denn)
				(VC wohnen))[01;31m)[00m
		[01;36m(SIMPX[00m
			(SU
				[01;31m(SIMPX[00m
					(LK haben)
					[01;31m(MF[00m
						(NX sie)
						(ADVX da)
						(ADVX schon)[01;31m)[00m
					[01;36m(NX[00m [01;31m(VC[00m
						[01;31m(VXINF[00m
							(VVPP uberlegt)[01;31m)[00m[01;31m)[00m[01;36m)[00m
					[01;31m(NF[00m
						[01;31m(PX[00m
							(APPR in)
							[01;31m(NX[00m
								(NX was)
								(PX fur eine art von hotel)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
				(ADJX
					[01;36m(ADVX[00m [01;31m(ADJX[00m
						(ADJD teuer)[01;31m)[00m[01;36m)[00m
					[01;36m(SU[00m
						[01;36m(ADJX[00m
							[01;36m(ADVX[00m [01;31m(ADJX[00m
								(ADJD billig)[01;31m)[00m[01;36m)[00m
							(ADJX zentral)[01;36m)[00m[01;36m)[00m))[01;36m)[00m))
Step:Modifier Attachment
{'new_parent': 'ADJX', 'new_family': ['ADJD', 'ADJX'], 'mover info': [('ADJX', (37, 38))], 'old_family': ['ADJX', 'ADJX', 'ADJX'], 'start left siblings': ['ADJX', 'ADJX'], 'auto preterminals': ('ADJD', 'ADJD', 'ADJD'), 'start right siblings': [], 'end left siblings': ['ADJD'], 'auto preterminal span': (35, 38), 'adding node already present': False, 'movers': ['ADJX'], 'old_parent': 'ADJX', 'POS confusion': ('ADJD', 'ADJD'), 'added and moved': True, 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'SU'}
(TOP
	(TURN
		(SU
			(DM ja)
			[01;36m(ADVX[00m [01;31m(DM[00m
				(ITJ naturlich)[01;31m)[00m[01;36m)[00m
			(SIMPX den kann ich ihnen buchen))
		(SIMPX ich schaue mal nach da ist auch noch was frei)
		[01;31m(SU[00m
			(SIMPX
				(KOORD und)
				(VF wo)
				(LK mochten)
				(MF sie denn)
				(VC wohnen))[01;31m)[00m
		[01;36m(SIMPX[00m
			(SU
				[01;31m(SIMPX[00m
					(LK haben)
					[01;31m(MF[00m
						(NX sie)
						(ADVX da)
						(ADVX schon)[01;31m)[00m
					[01;36m(NX[00m [01;31m(VC[00m
						[01;31m(VXINF[00m
							(VVPP uberlegt)[01;31m)[00m[01;31m)[00m[01;36m)[00m
					[01;31m(NF[00m
						[01;31m(PX[00m
							(APPR in)
							[01;31m(NX[00m
								(NX was)
								(PX fur eine art von hotel)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
				(ADJX
					[01;36m(ADVX[00m [01;31m(ADJX[00m
						(ADJD teuer)[01;31m)[00m[01;36m)[00m
					(SU
						(ADJX
							[01;36m(ADVX[00m
								(ADJD billig)[01;36m)[00m
							(ADJX zentral)))))[01;36m)[00m))
Step:Single Word Phrase
{'family': ['DM', 'ADVX', 'SIMPX'], 'auto preterminal span': (1, 2), 'span': (1, 2), 'subtrees': ['ITJ'], 'parent': 'SU', 'over_word': True, 'auto preterminals': ('ITJ',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('DM', 'ADVX')}
(TOP
	(TURN
		(SU ja naturlich den kann ich ihnen buchen)
		(SIMPX ich schaue mal nach da ist auch noch was frei)
		[01;31m(SU[00m
			(SIMPX
				(KOORD und)
				(VF wo)
				(LK mochten)
				(MF sie denn)
				(VC wohnen))[01;31m)[00m
		[01;36m(SIMPX[00m
			(SU
				[01;31m(SIMPX[00m
					(LK haben)
					[01;31m(MF[00m
						(NX sie)
						(ADVX da)
						(ADVX schon)[01;31m)[00m
					[01;36m(NX[00m [01;31m(VC[00m
						[01;31m(VXINF[00m
							(VVPP uberlegt)[01;31m)[00m[01;31m)[00m[01;36m)[00m
					[01;31m(NF[00m
						[01;31m(PX[00m
							(APPR in)
							[01;31m(NX[00m
								(NX was)
								(PX fur eine art von hotel)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
				(ADJX
					[01;36m(ADVX[00m [01;31m(ADJX[00m
						(ADJD teuer)[01;31m)[00m[01;36m)[00m
					(SU
						(ADJX
							[01;36m(ADVX[00m
								(ADJD billig)[01;36m)[00m
							(ADJX zentral)))))[01;36m)[00m))
Step:Different label
{'family': ['LK', 'MF', 'NX', 'NF'], 'auto preterminal span': (27, 28), 'span': (27, 28), 'subtrees': ['VXINF'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('VVPP',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('VC', 'NX')}
(TOP
	(TURN
		(SU ja naturlich den kann ich ihnen buchen)
		(SIMPX ich schaue mal nach da ist auch noch was frei)
		[01;31m(SU[00m
			(SIMPX
				(KOORD und)
				(VF wo)
				(LK mochten)
				(MF sie denn)
				(VC wohnen))[01;31m)[00m
		[01;36m(SIMPX[00m
			(SU
				[01;31m(SIMPX[00m
					(LK haben)
					[01;31m(MF[00m
						(NX sie)
						(ADVX da)
						(ADVX schon)[01;31m)[00m
					(NX
						[01;31m(VXINF[00m
							(VVPP uberlegt)[01;31m)[00m)
					[01;31m(NF[00m
						[01;31m(PX[00m
							(APPR in)
							[01;31m(NX[00m
								(NX was)
								(PX fur eine art von hotel)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
				(ADJX
					[01;36m(ADVX[00m [01;31m(ADJX[00m
						(ADJD teuer)[01;31m)[00m[01;36m)[00m
					(SU
						(ADJX
							[01;36m(ADVX[00m
								(ADJD billig)[01;36m)[00m
							(ADJX zentral)))))[01;36m)[00m))
Step:Single Word Phrase
{'family': ['ADVX', 'SU'], 'auto preterminal span': (35, 36), 'span': (35, 36), 'subtrees': ['ADJD'], 'parent': 'ADJX', 'over_word': True, 'auto preterminals': ('ADJD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'ADVX')}
(TOP
	(TURN
		(SU ja naturlich den kann ich ihnen buchen)
		(SIMPX ich schaue mal nach da ist auch noch was frei)
		[01;31m(SU[00m
			(SIMPX
				(KOORD und)
				(VF wo)
				(LK mochten)
				(MF sie denn)
				(VC wohnen))[01;31m)[00m
		[01;36m(SIMPX[00m
			(SU
				[01;31m(SIMPX[00m
					(LK haben)
					[01;31m(MF[00m
						(NX sie)
						(ADVX da)
						(ADVX schon)[01;31m)[00m
					(NX
						[01;31m(VXINF[00m
							(VVPP uberlegt)[01;31m)[00m)
					[01;31m(NF[00m
						[01;31m(PX[00m
							(APPR in)
							[01;31m(NX[00m
								(NX was)
								(PX fur eine art von hotel)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
				(ADJX
					(ADVX teuer)
					(SU
						(ADJX
							[01;36m(ADVX[00m
								(ADJD billig)[01;36m)[00m
							(ADJX zentral)))))[01;36m)[00m))
Step:Modifier Attachment
{'new_parent': 'SIMPX', 'new_family': ['LK', 'MF', 'NX', 'NF', 'ADJX'], 'mover info': [('ADJX', (35, 38))], 'old_family': ['SIMPX', 'ADJX'], 'start left siblings': ['SIMPX'], 'auto preterminals': ('VAFIN', 'PPER', 'ADV', 'ADV', 'VVPP', 'APPR', 'PWS', 'APPR', 'ART', 'NN', 'APPR', 'NN', 'ADJD', 'ADJD', 'ADJD'), 'start right siblings': [], 'end left siblings': ['LK', 'MF', 'NX', 'NF'], 'auto preterminal span': (23, 38), 'movers': ['ADJX'], 'old_parent': 'SU', 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU ja naturlich den kann ich ihnen buchen)
		(SIMPX ich schaue mal nach da ist auch noch was frei)
		[01;31m(SU[00m
			(SIMPX
				(KOORD und)
				(VF wo)
				(LK mochten)
				(MF sie denn)
				(VC wohnen))[01;31m)[00m
		(SU
			(SIMPX
				(LK haben)
				[01;31m(MF[00m
					(NX sie)
					(ADVX da)
					(ADVX schon)[01;31m)[00m
				(NX
					[01;31m(VXINF[00m
						(VVPP uberlegt)[01;31m)[00m)
				[01;31m(NF[00m
					[01;31m(PX[00m
						(APPR in)
						[01;31m(NX[00m
							(NX was)
							(PX fur eine art von hotel)[01;31m)[00m[01;31m)[00m[01;31m)[00m
				(ADJX
					(ADVX teuer)
					(SU
						(ADJX
							[01;36m(ADVX[00m
								(ADJD billig)[01;36m)[00m
							(ADJX zentral))))))))
Step:Single Word Phrase
{'subtrees': ['ADJD'], 'family': ['ADVX', 'ADJX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADJD',), 'right siblings': [(ADJX (ADJD zentral))], 'left siblings': [], 'auto preterminal span': (36, 37), 'span': (36, 37), 'parent': 'ADJX', 'label': 'ADVX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SU ja naturlich den kann ich ihnen buchen)
		(SIMPX ich schaue mal nach da ist auch noch was frei)
		[01;31m(SU[00m
			(SIMPX
				(KOORD und)
				(VF wo)
				(LK mochten)
				(MF sie denn)
				(VC wohnen))[01;31m)[00m
		(SU
			(SIMPX
				(LK haben)
				[01;31m(MF[00m
					(NX sie)
					(ADVX da)
					(ADVX schon)[01;31m)[00m
				(NX
					[01;31m(VXINF[00m
						(VVPP uberlegt)[01;31m)[00m)
				[01;31m(NF[00m
					[01;31m(PX[00m
						(APPR in)
						[01;31m(NX[00m
							(NX was)
							(PX fur eine art von hotel)[01;31m)[00m[01;31m)[00m[01;31m)[00m
				(ADJX teuer billig zentral)))))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SU', 'SIMPX', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'PDS', 'VMFIN', 'PPER', 'PPER', 'VVINF', 'PPER', 'VVFIN', 'ADV', 'PTKVZ', 'ADV', 'VAFIN', 'ADV', 'ADV', 'PIS', 'ADJD', 'KON', 'PWAV', 'VMFIN', 'PPER', 'ADV', 'VVINF', 'VAFIN', 'PPER', 'ADV', 'ADV', 'VVPP', 'APPR', 'PWS', 'APPR', 'ART', 'NN', 'APPR', 'NN', 'ADJD', 'ADJD', 'ADJD'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 38), 'span': (17, 23), 'left siblings': ['SU', 'SIMPX'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU ja naturlich den kann ich ihnen buchen)
		(SIMPX ich schaue mal nach da ist auch noch was frei)
		(SIMPX und wo mochten sie denn wohnen)
		(SU
			(SIMPX
				(LK haben)
				[01;31m(MF[00m
					(NX sie)
					(ADVX da)
					(ADVX schon)[01;31m)[00m
				(NX
					[01;31m(VXINF[00m
						(VVPP uberlegt)[01;31m)[00m)
				[01;31m(NF[00m
					[01;31m(PX[00m
						(APPR in)
						[01;31m(NX[00m
							(NX was)
							(PX fur eine art von hotel)[01;31m)[00m[01;31m)[00m[01;31m)[00m
				(ADJX teuer billig zentral)))))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADVX', 'ADVX'], 'family': ['LK', 'MF', 'NX', 'NF', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'PPER', 'ADV', 'ADV', 'VVPP', 'APPR', 'PWS', 'APPR', 'ART', 'NN', 'APPR', 'NN', 'ADJD', 'ADJD', 'ADJD'), 'right siblings': ['NX', 'NF', 'ADJX'], 'parent': 'SIMPX', 'auto preterminal span': (23, 38), 'span': (24, 27), 'left siblings': ['LK'], 'label': 'MF', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU ja naturlich den kann ich ihnen buchen)
		(SIMPX ich schaue mal nach da ist auch noch was frei)
		(SIMPX und wo mochten sie denn wohnen)
		(SU
			(SIMPX
				(LK haben)
				(NX sie)
				(ADVX da)
				(ADVX schon)
				(NX
					[01;31m(VXINF[00m
						(VVPP uberlegt)[01;31m)[00m)
				[01;31m(NF[00m
					[01;31m(PX[00m
						(APPR in)
						[01;31m(NX[00m
							(NX was)
							(PX fur eine art von hotel)[01;31m)[00m[01;31m)[00m[01;31m)[00m
				(ADJX teuer billig zentral)))))
Step:Single Word Phrase
{'subtrees': ['VVPP'], 'family': ['VXINF'], 'over_word': True, 'over words': True, 'auto preterminals': ('VVPP',), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (27, 28), 'span': (27, 28), 'left siblings': [], 'label': 'VXINF', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(SU ja naturlich den kann ich ihnen buchen)
		(SIMPX ich schaue mal nach da ist auch noch was frei)
		(SIMPX und wo mochten sie denn wohnen)
		(SU
			(SIMPX
				(LK haben)
				(NX sie)
				(ADVX da)
				(ADVX schon)
				(NX uberlegt)
				[01;31m(NF[00m
					[01;31m(PX[00m
						(APPR in)
						[01;31m(NX[00m
							(NX was)
							(PX fur eine art von hotel)[01;31m)[00m[01;31m)[00m[01;31m)[00m
				(ADJX teuer billig zentral)))))
Step:Unary
{'subtrees': ['APPR', 'NX'], 'family': ['PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'PWS', 'APPR', 'ART', 'NN', 'APPR', 'NN'), 'right siblings': [], 'parent': 'NF', 'auto preterminal span': (28, 35), 'span': (28, 35), 'left siblings': [], 'label': 'PX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU ja naturlich den kann ich ihnen buchen)
		(SIMPX ich schaue mal nach da ist auch noch was frei)
		(SIMPX und wo mochten sie denn wohnen)
		(SU
			(SIMPX
				(LK haben)
				(NX sie)
				(ADVX da)
				(ADVX schon)
				(NX uberlegt)
				[01;31m(NF[00m
					(APPR in)
					[01;31m(NX[00m
						(NX was)
						(PX fur eine art von hotel)[01;31m)[00m[01;31m)[00m
				(ADJX teuer billig zentral)))))
Step:UNSET remove
{'subtrees': ['APPR', 'NX'], 'family': ['LK', 'NX', 'ADVX', 'ADVX', 'NX', 'NF', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'PPER', 'ADV', 'ADV', 'VVPP', 'APPR', 'PWS', 'APPR', 'ART', 'NN', 'APPR', 'NN', 'ADJD', 'ADJD', 'ADJD'), 'right siblings': ['ADJX'], 'parent': 'SIMPX', 'auto preterminal span': (23, 38), 'span': (28, 35), 'left siblings': ['LK', 'NX', 'ADVX', 'ADVX', 'NX'], 'label': 'NF', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU ja naturlich den kann ich ihnen buchen)
		(SIMPX ich schaue mal nach da ist auch noch was frei)
		(SIMPX und wo mochten sie denn wohnen)
		(SU
			(SIMPX
				(LK haben)
				(NX sie)
				(ADVX da)
				(ADVX schon)
				(NX uberlegt)
				(APPR in)
				[01;31m(NX[00m
					(NX was)
					(PX fur eine art von hotel)[01;31m)[00m
				(ADJX teuer billig zentral)))))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['LK', 'NX', 'ADVX', 'ADVX', 'NX', 'APPR', 'NX', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'PPER', 'ADV', 'ADV', 'VVPP', 'APPR', 'PWS', 'APPR', 'ART', 'NN', 'APPR', 'NN', 'ADJD', 'ADJD', 'ADJD'), 'right siblings': ['ADJX'], 'parent': 'SIMPX', 'auto preterminal span': (23, 38), 'span': (29, 35), 'left siblings': ['LK', 'NX', 'ADVX', 'ADVX', 'NX', 'APPR'], 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP ja naturlich den kann ich ihnen buchen ich schaue mal nach da ist auch noch was frei und wo mochten sie denn wohnen haben sie da schon uberlegt in was fur eine art von hotel teuer billig zentral)

Sentence 579:
8 Initial errors
0 on fringe, 5 iterations
2 Error:Single Word Phrase
2 Error:Single Word Phrase
2 Error:Modifier Attachment
1 Error:UNSET remove
1 Error:Clause Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(NX
				(ART das)
				[01;31m(NX[00m
					[01;36m(ADJX[00m [01;31m(NX[00m
						(NE zentralhotel)[01;31m)[00m[01;36m)[00m
					(NX kaiserhof)[01;31m)[00m))
		[01;31m(SU[00m
			(DM ja)
			(SIMPX das ist auch ein sehr schones hotel)
			(DM also)
			(SIMPX
				(LK ist)
				(MF auch mit aufenthaltsraumen und konferenzraumen)
				(NF
					(SIMPX
						(C wenn)
						(MF
							(NX sie)
							[01;31m(ADVX[00m
								[01;36m(ADVX[00m [01;31m(ADJX[00m
									(ADJD geschaftlich)[01;31m)[00m[01;36m)[00m
								[01;36m(ADVX[00m
									(ADV unterwegs)[01;36m)[00m[01;31m)[00m)
						(VC sind))))[01;31m)[00m))
Step:Single Word Phrase
{'family': ['ADJX', 'NX'], 'auto preterminal span': (1, 2), 'span': (1, 2), 'subtrees': ['NE'], 'parent': 'NX', 'over_word': True, 'auto preterminals': ('NE',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('NX', 'ADJX')}
(TOP
	(TURN
		(SU
			(NX
				(ART das)
				[01;31m(NX[00m
					(ADJX zentralhotel)
					(NX kaiserhof)[01;31m)[00m))
		[01;31m(SU[00m
			(DM ja)
			(SIMPX das ist auch ein sehr schones hotel)
			(DM also)
			(SIMPX
				(LK ist)
				(MF auch mit aufenthaltsraumen und konferenzraumen)
				(NF
					(SIMPX
						(C wenn)
						(MF
							(NX sie)
							[01;31m(ADVX[00m
								[01;36m(ADVX[00m [01;31m(ADJX[00m
									(ADJD geschaftlich)[01;31m)[00m[01;36m)[00m
								[01;36m(ADVX[00m
									(ADV unterwegs)[01;36m)[00m[01;31m)[00m)
						(VC sind))))[01;31m)[00m))
Step:Single Word Phrase
{'family': ['ADVX', 'ADV'], 'auto preterminal span': (20, 21), 'span': (20, 21), 'subtrees': ['ADJD'], 'parent': 'ADVX', 'over_word': True, 'auto preterminals': ('ADJD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'ADVX')}
(TOP
	(TURN
		(SU
			(NX
				(ART das)
				[01;31m(NX[00m
					(ADJX zentralhotel)
					(NX kaiserhof)[01;31m)[00m))
		[01;31m(SU[00m
			(DM ja)
			(SIMPX das ist auch ein sehr schones hotel)
			(DM also)
			(SIMPX
				(LK ist)
				(MF auch mit aufenthaltsraumen und konferenzraumen)
				(NF
					(SIMPX
						(C wenn)
						(MF
							(NX sie)
							[01;31m(ADVX[00m
								(ADVX geschaftlich)
								[01;36m(ADVX[00m
									(ADV unterwegs)[01;36m)[00m[01;31m)[00m)
						(VC sind))))[01;31m)[00m))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'ADVX', 'ADVX'], 'mover info': [('ADVX', (20, 21))], 'old_family': ['ADVX', 'ADV'], 'start left siblings': [], 'auto preterminals': ('PPER', 'ADJD', 'ADV'), 'start right siblings': ['ADV'], 'end left siblings': ['NX'], 'auto preterminal span': (19, 22), 'movers': ['ADVX'], 'old_parent': 'ADVX', 'POS confusion': ('ADJD', 'ADJD'), 'end right siblings': ['ADVX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU
			(NX
				(ART das)
				[01;31m(NX[00m
					(ADJX zentralhotel)
					(NX kaiserhof)[01;31m)[00m))
		[01;31m(SU[00m
			(DM ja)
			(SIMPX das ist auch ein sehr schones hotel)
			(DM also)
			(SIMPX ist auch mit aufenthaltsraumen und konferenzraumen wenn sie geschaftlich unterwegs sind)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['ADJX', 'NX'], 'family': ['ART', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NE', 'NE'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (0, 3), 'span': (1, 3), 'left siblings': ['ART'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU das zentralhotel kaiserhof)
		[01;31m(SU[00m
			(DM ja)
			(SIMPX das ist auch ein sehr schones hotel)
			(DM also)
			(SIMPX ist auch mit aufenthaltsraumen und konferenzraumen wenn sie geschaftlich unterwegs sind)[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['DM', 'SIMPX', 'DM', 'SIMPX'], 'family': ['SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NE', 'NE', 'PTKANT', 'PDS', 'VAFIN', 'ADV', 'ART', 'ADV', 'ADJA', 'NN', 'ADV', 'VAFIN', 'ADV', 'APPR', 'NN', 'KON', 'NN', 'KOUS', 'PPER', 'ADJD', 'ADV', 'VAFIN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 23), 'span': (3, 23), 'left siblings': ['SU'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP das zentralhotel kaiserhof ja das ist auch ein sehr schones hotel also ist auch mit aufenthaltsraumen und konferenzraumen wenn sie geschaftlich unterwegs sind)

Sentence 580:
4 Initial errors
0 on fringe, 3 iterations
2 Error:Clause Attachment
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM
				(ITJ gut))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX dann rufen sie mich noch mal an)
			[01;33m(SU[00m (SIMPX und ich kann dann ja das zugticket fur sie auch bestellen)[01;31m)[00m
		[01;31m(SU[00m
			(DM
				(NX
					(NN herr)
					(NE muller)))[01;31m)[00m)) [01;33mSU)[00m
Step:Clause Attachment
{'new_parent': 'SU', 'new_family': ['SIMPX', 'DM'], 'mover info': [('SIMPX', (8, 19))], 'old_family': ['SIMPX', 'SIMPX'], 'start left siblings': ['SIMPX'], 'auto preterminals': ('ITJ', 'ADV', 'VVFIN', 'PPER', 'PPER', 'ADV', 'ADV', 'PTKVZ', 'KON', 'PPER', 'VMFIN', 'ADV', 'ADV', 'ART', 'NN', 'APPR', 'PPER', 'ADV', 'VVINF', 'NN', 'NE'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 21), 'movers': ['SIMPX'], 'old_parent': 'SU', 'end right siblings': ['DM'], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM
				(ITJ gut))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF dann)
				(LK rufen)
				(MF sie mich noch mal)
				(VC an))[01;31m)[00m
		(SU und ich kann dann ja das zugticket fur sie auch bestellen herr muller)))
Step:Unary
{'subtrees': ['DM'], 'family': ['SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'VVFIN', 'PPER', 'PPER', 'ADV', 'ADV', 'PTKVZ', 'KON', 'PPER', 'VMFIN', 'ADV', 'ADV', 'ART', 'NN', 'APPR', 'PPER', 'ADV', 'VVINF', 'NN', 'NE'), 'right siblings': ['SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 21), 'span': (0, 1), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM gut)
		[01;31m(SU[00m
			(SIMPX
				(VF dann)
				(LK rufen)
				(MF sie mich noch mal)
				(VC an))[01;31m)[00m
		(SU und ich kann dann ja das zugticket fur sie auch bestellen herr muller)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['DM', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'VVFIN', 'PPER', 'PPER', 'ADV', 'ADV', 'PTKVZ', 'KON', 'PPER', 'VMFIN', 'ADV', 'ADV', 'ART', 'NN', 'APPR', 'PPER', 'ADV', 'VVINF', 'NN', 'NE'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 21), 'span': (1, 8), 'left siblings': ['DM'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP gut dann rufen sie mich noch mal an und ich kann dann ja das zugticket fur sie auch bestellen herr muller)

Sentence 581:
11 Initial errors
0 on fringe, 6 iterations
4 Error:PP Attachment
2 Error:Single Word Phrase
2 Error:PP Attachment
1 Error:Unary
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SU[00m
	(TOP
		(TURN
			[01;31m(SU[00m
				(DM
					(NX
						(ADJX guten)
						(NN tag)))[01;31m)[00m
			[01;31m(SU[00m
				[01;31m(SIMPX[00m
					(VF ich)
					(LK bin)
					[01;31m(MF[00m
						[01;31m(NX[00m
							[01;36m(MF[00m
								(NX
									(NN frau)
									(NE bartels))[01;36m)[00m
							(PX [01;33m(PX[00m
								(APPRART vom)
								[01;31m(NX[00m
									(NX
										(NX reiseburo)
										[01;36m(ADJX[00m [01;31m(NX[00m
											(NE zentral)[01;31m)[00m[01;36m)[00m) [01;33mPX)[00m
									(PX in hannover)[01;31m)[00m)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))[01;36m)[00m
Step:PP Attachment
{'new_parent': 'TURN', 'new_family': ['SU', 'SU', 'PX'], 'mover info': [('PX', (6, 11))], 'old_family': ['NX', 'PX'], 'start left siblings': ['NX'], 'auto preterminals': ('ADJA', 'NN', 'PPER', 'VAFIN', 'NN', 'NE', 'APPRART', 'NN', 'NE', 'APPR', 'NE'), 'start right siblings': [], 'end left siblings': ['SU', 'SU'], 'auto preterminal span': (0, 11), 'adding node already present': True, 'movers': ['PX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'ADJX'}
(TOP
	(SU
		(TURN
			[01;31m(SU[00m
				(DM
					(NX
						(ADJX guten)
						(NN tag)))[01;31m)[00m
			[01;31m(SU[00m
				[01;31m(SIMPX[00m
					(VF ich)
					(LK bin)
					(MF frau bartels)[01;31m)[00m[01;31m)[00m
			(PX [01;33m(PX[00m
				(APPRART vom)
				[01;31m(NX[00m
					(NX
						(NX reiseburo)
						[01;36m(ADJX[00m [01;31m(NX[00m
							(NE zentral)[01;31m)[00m[01;36m)[00m) [01;33mPX)[00m
					(PX in hannover)[01;31m)[00m))))
Step:Single Word Phrase
{'family': ['NX', 'ADJX'], 'auto preterminal span': (8, 9), 'span': (8, 9), 'subtrees': ['NE'], 'parent': 'NX', 'over_word': True, 'auto preterminals': ('NE',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('NX', 'ADJX')}
(TOP
	(SU
		(TURN
			[01;31m(SU[00m
				(DM
					(NX
						(ADJX guten)
						(NN tag)))[01;31m)[00m
			[01;31m(SU[00m
				[01;31m(SIMPX[00m
					(VF ich)
					(LK bin)
					(MF frau bartels)[01;31m)[00m[01;31m)[00m
			(PX [01;33m(PX[00m
				(APPRART vom)
				[01;31m(NX[00m
					(NX reiseburo zentral) [01;33mPX)[00m
					(PX in hannover)[01;31m)[00m))))
Step:PP Attachment
{'new_parent': 'TURN', 'new_family': ['SU', 'SU', 'PX', 'PX'], 'mover info': [('PX', (9, 11))], 'old_family': ['NX', 'PX'], 'start left siblings': ['NX'], 'auto preterminals': ('ADJA', 'NN', 'PPER', 'VAFIN', 'NN', 'NE', 'APPRART', 'NN', 'NE', 'APPR', 'NE'), 'start right siblings': [], 'end left siblings': ['SU', 'SU', 'PX'], 'auto preterminal span': (0, 11), 'adding node already present': False, 'movers': ['PX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'PX'}
(TOP
	(SU
		(TURN
			[01;31m(SU[00m
				(DM
					(NX
						(ADJX guten)
						(NN tag)))[01;31m)[00m
			[01;31m(SU[00m
				[01;31m(SIMPX[00m
					(VF ich)
					(LK bin)
					(MF frau bartels)[01;31m)[00m[01;31m)[00m
			(PX vom reiseburo zentral in hannover))))
Step:Unary
{'subtrees': ['DM'], 'family': ['SU', 'SU', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJA', 'NN', 'PPER', 'VAFIN', 'NN', 'NE', 'APPRART', 'NN', 'NE', 'APPR', 'NE'), 'right siblings': ['SU', 'PX'], 'parent': 'TURN', 'auto preterminal span': (0, 11), 'span': (0, 2), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(SU
		(TURN
			(DM guten tag)
			[01;31m(SU[00m
				[01;31m(SIMPX[00m
					(VF ich)
					(LK bin)
					(MF frau bartels)[01;31m)[00m[01;31m)[00m
			(PX vom reiseburo zentral in hannover))))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['DM', 'SU', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJA', 'NN', 'PPER', 'VAFIN', 'NN', 'NE', 'APPRART', 'NN', 'NE', 'APPR', 'NE'), 'right siblings': ['PX'], 'parent': 'TURN', 'auto preterminal span': (0, 11), 'span': (2, 6), 'left siblings': ['DM'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(SU
		(TURN
			(DM guten tag)
			[01;31m(SIMPX[00m
				(VF ich)
				(LK bin)
				(MF frau bartels)[01;31m)[00m
			(PX vom reiseburo zentral in hannover))))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['DM', 'SIMPX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJA', 'NN', 'PPER', 'VAFIN', 'NN', 'NE', 'APPRART', 'NN', 'NE', 'APPR', 'NE'), 'right siblings': ['PX'], 'parent': 'TURN', 'auto preterminal span': (0, 11), 'span': (2, 6), 'left siblings': ['DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP guten tag ich bin frau bartels vom reiseburo zentral in hannover)

Sentence 582:
13 Initial errors
0 on fringe, 10 iterations
4 Error:UNSET move
1 Error:Clause Attachment
1 Error:Unary
1 Error:NP Internal Structure
1 Error:Unary
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:Clause Attachment
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM
				(PTKANT ja))[01;31m)[00m
		[01;36m(SIMPX[00m [01;31m(SU[00m
			(SIMPX
				(VF
					(NX
						(NX eines)
						[01;36m(VF[00m
							(NX
								(ART der)
								(NN hotels))[01;36m)[00m))
				(LK ist)
				(MF das grandhotel musmann))
			(SIMPX das liegt sehr zentral)[01;31m)[00m[01;36m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					[01;31m(SIMPX[00m
						(KOORD und)
						[01;36m(VF[00m
							[01;36m(SIMPX[00m
								(VF platze)
								(LK haben)
								(MF die auch noch)[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
				(LK sehe)
				(MF ich)[01;31m)[00m
			(DM ja)
			[01;31m(SIMPX[00m
				(LK kostet)
				(MF
					(ADVX dann)
					[01;36m(NX[00m
						(NX einzelzimmer)
						(NX
							(NX dreihundert funfzig)
							[01;36m(NF[00m
								(NX
									(ART die)
									(NN nacht))[01;36m)[00m)[01;36m)[00m)[01;31m)[00m[01;31m)[00m))
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SIMPX', 'SIMPX', 'KOORD'], 'mover info': [('KOORD', (12, 13))], 'old_family': ['KOORD', 'VF', 'LK', 'MF'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'PIS', 'ART', 'NN', 'VAFIN', 'ART', 'NE', 'NE', 'PDS', 'VVFIN', 'ADV', 'ADJD', 'KON', 'NN', 'VAFIN', 'PDS', 'ADV', 'ADV', 'VVFIN', 'PPER', 'PTKANT', 'VVFIN', 'ADV', 'NN', 'CARD', 'CARD', 'ART', 'NN'), 'start right siblings': ['VF', 'LK', 'MF'], 'end left siblings': ['SIMPX', 'SIMPX'], 'auto preterminal span': (0, 28), 'movers': ['KOORD'], 'old_parent': 'SIMPX', 'POS confusion': ('KON', 'KON'), 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM
				(PTKANT ja))[01;31m)[00m
		[01;31m(SU[00m
			[01;36m(SIMPX[00m
				(SIMPX
					(VF
						(NX
							(NX eines)
							[01;36m(VF[00m
								(NX
									(ART der)
									(NN hotels))[01;36m)[00m))
					(LK ist)
					(MF das grandhotel musmann))
				(SIMPX das liegt sehr zentral)[01;36m)[00m
			(KOORD und)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF platze haben die auch noch)
				(LK sehe)
				(MF ich)[01;31m)[00m
			(DM ja)
			[01;31m(SIMPX[00m
				(LK kostet)
				(MF
					(ADVX dann)
					[01;36m(NX[00m
						(NX einzelzimmer)
						(NX
							(NX dreihundert funfzig)
							[01;36m(NF[00m
								(NX
									(ART die)
									(NN nacht))[01;36m)[00m)[01;36m)[00m)[01;31m)[00m[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['SIMPX', 'KOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('PIS', 'ART', 'NN', 'VAFIN', 'ART', 'NE', 'NE', 'PDS', 'VVFIN', 'ADV', 'ADJD'), 'right siblings': [(KOORD (KON und))], 'left siblings': [], 'auto preterminal span': (1, 12), 'span': (1, 12), 'parent': 'SU', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM
				(PTKANT ja))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(SIMPX
					(VF
						(NX
							(NX eines)
							[01;36m(VF[00m
								(NX
									(ART der)
									(NN hotels))[01;36m)[00m))
					(LK ist)
					(MF das grandhotel musmann))
				(SIMPX das liegt sehr zentral))
			(KOORD und)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF platze haben die auch noch)
				(LK sehe)
				(MF ich)[01;31m)[00m
			(DM ja)
			[01;31m(SIMPX[00m
				(LK kostet)
				(MF
					(ADVX dann)
					[01;36m(NX[00m
						(NX einzelzimmer)
						(NX
							(NX dreihundert funfzig)
							[01;36m(NF[00m
								(NX
									(ART die)
									(NN nacht))[01;36m)[00m)[01;36m)[00m)[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['NX'], 'family': ['NX', 'VF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN'), 'right siblings': [], 'left siblings': [(NX (PIS eines))], 'auto preterminal span': (2, 4), 'span': (2, 4), 'parent': 'NX', 'label': 'VF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM
				(PTKANT ja))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX eines der hotels ist das grandhotel musmann das liegt sehr zentral)
			(KOORD und)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF platze haben die auch noch)
				(LK sehe)
				(MF ich)[01;31m)[00m
			(DM ja)
			[01;31m(SIMPX[00m
				(LK kostet)
				(MF
					(ADVX dann)
					[01;36m(NX[00m
						(NX einzelzimmer)
						(NX
							(NX dreihundert funfzig)
							[01;36m(NF[00m
								(NX
									(ART die)
									(NN nacht))[01;36m)[00m)[01;36m)[00m)[01;31m)[00m[01;31m)[00m))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'CARD', 'CARD', 'ART', 'NN'), 'right siblings': [], 'left siblings': [(ADVX (ADV dann))], 'auto preterminal span': (23, 28), 'span': (23, 28), 'parent': 'MF', 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM
				(PTKANT ja))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX eines der hotels ist das grandhotel musmann das liegt sehr zentral)
			(KOORD und)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF platze haben die auch noch)
				(LK sehe)
				(MF ich)[01;31m)[00m
			(DM ja)
			[01;31m(SIMPX[00m
				(LK kostet)
				(MF
					(ADVX dann)
					(NX
						(NX einzelzimmer)
						(NX
							(NX dreihundert funfzig)
							[01;36m(NF[00m
								(NX
									(ART die)
									(NN nacht))[01;36m)[00m)))[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['NX'], 'family': ['NX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN'), 'right siblings': [], 'left siblings': [(NX (CARD dreihundert) (CARD funfzig))], 'auto preterminal span': (26, 28), 'span': (26, 28), 'parent': 'NX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM
				(PTKANT ja))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX eines der hotels ist das grandhotel musmann das liegt sehr zentral)
			(KOORD und)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF platze haben die auch noch)
				(LK sehe)
				(MF ich)[01;31m)[00m
			(DM ja)
			[01;31m(SIMPX[00m
				(LK kostet)
				(MF dann einzelzimmer dreihundert funfzig die nacht)[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['DM'], 'family': ['SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PIS', 'ART', 'NN', 'VAFIN', 'ART', 'NE', 'NE', 'PDS', 'VVFIN', 'ADV', 'ADJD', 'KON', 'NN', 'VAFIN', 'PDS', 'ADV', 'ADV', 'VVFIN', 'PPER', 'PTKANT', 'VVFIN', 'ADV', 'NN', 'CARD', 'CARD', 'ART', 'NN'), 'right siblings': ['SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 28), 'span': (0, 1), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		[01;31m(SU[00m
			(SIMPX eines der hotels ist das grandhotel musmann das liegt sehr zentral)
			(KOORD und)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF platze haben die auch noch)
				(LK sehe)
				(MF ich)[01;31m)[00m
			(DM ja)
			[01;31m(SIMPX[00m
				(LK kostet)
				(MF dann einzelzimmer dreihundert funfzig die nacht)[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['SIMPX', 'KOORD'], 'family': ['DM', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PIS', 'ART', 'NN', 'VAFIN', 'ART', 'NE', 'NE', 'PDS', 'VVFIN', 'ADV', 'ADJD', 'KON', 'NN', 'VAFIN', 'PDS', 'ADV', 'ADV', 'VVFIN', 'PPER', 'PTKANT', 'VVFIN', 'ADV', 'NN', 'CARD', 'CARD', 'ART', 'NN'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 28), 'span': (1, 13), 'left siblings': ['DM'], 'label': 'SU', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX eines der hotels ist das grandhotel musmann das liegt sehr zentral)
		(KOORD und)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF platze haben die auch noch)
				(LK sehe)
				(MF ich)[01;31m)[00m
			(DM ja)
			[01;31m(SIMPX[00m
				(LK kostet)
				(MF dann einzelzimmer dreihundert funfzig die nacht)[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['SIMPX', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'VAFIN', 'PDS', 'ADV', 'ADV', 'VVFIN', 'PPER', 'PTKANT', 'VVFIN', 'ADV', 'NN', 'CARD', 'CARD', 'ART', 'NN'), 'right siblings': ['DM', 'SIMPX'], 'parent': 'SU', 'auto preterminal span': (13, 28), 'span': (13, 20), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX eines der hotels ist das grandhotel musmann das liegt sehr zentral)
		(KOORD und)
		[01;31m(SU[00m
			(VF platze haben die auch noch)
			(LK sehe)
			(MF ich)
			(DM ja)
			[01;31m(SIMPX[00m
				(LK kostet)
				(MF dann einzelzimmer dreihundert funfzig die nacht)[01;31m)[00m[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['VF', 'LK', 'MF', 'DM', 'SIMPX'], 'family': ['DM', 'SIMPX', 'KOORD', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PIS', 'ART', 'NN', 'VAFIN', 'ART', 'NE', 'NE', 'PDS', 'VVFIN', 'ADV', 'ADJD', 'KON', 'NN', 'VAFIN', 'PDS', 'ADV', 'ADV', 'VVFIN', 'PPER', 'PTKANT', 'VVFIN', 'ADV', 'NN', 'CARD', 'CARD', 'ART', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 28), 'span': (13, 28), 'left siblings': ['DM', 'SIMPX', 'KOORD'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX eines der hotels ist das grandhotel musmann das liegt sehr zentral)
		(KOORD und)
		(VF platze haben die auch noch)
		(LK sehe)
		(MF ich)
		(DM ja)
		[01;31m(SIMPX[00m
			(LK kostet)
			(MF dann einzelzimmer dreihundert funfzig die nacht)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['DM', 'SIMPX', 'KOORD', 'VF', 'LK', 'MF', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PIS', 'ART', 'NN', 'VAFIN', 'ART', 'NE', 'NE', 'PDS', 'VVFIN', 'ADV', 'ADJD', 'KON', 'NN', 'VAFIN', 'PDS', 'ADV', 'ADV', 'VVFIN', 'PPER', 'PTKANT', 'VVFIN', 'ADV', 'NN', 'CARD', 'CARD', 'ART', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 28), 'span': (21, 28), 'left siblings': ['DM', 'SIMPX', 'KOORD', 'VF', 'LK', 'MF', 'DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ja eines der hotels ist das grandhotel musmann das liegt sehr zentral und platze haben die auch noch sehe ich ja kostet dann einzelzimmer dreihundert funfzig die nacht)

Sentence 583:
9 Initial errors
0 on fringe, 5 iterations
2 Error:Single Word Phrase
2 Error:Different label
2 Error:UNSET move
2 Error:UNSET move
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(PX
				(PX mit bad)
				[01;36m(NX[00m [01;31m(ADVX[00m
					(ADV naturlich)[01;31m)[00m[01;36m)[00m))
		[01;36m(SU[00m
			[01;31m(SU[00m
				(DM
					(PTKANT ja))[01;31m)[00m
			[01;36m(SIMPX[00m
				[01;31m(SU[00m
					[01;31m(SIMPX[00m
						(LK soll)
						(MF ich das jetzt fur sie)
						(VC buchen)[01;31m)[00m[01;31m)[00m
				[01;36m(NF[00m [01;31m(SU[00m
					(ADVX
						(ADV dann))[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;36m)[00m))
Step:Single Word Phrase
{'family': ['PX', 'NX'], 'auto preterminal span': (2, 3), 'span': (2, 3), 'subtrees': ['ADV'], 'parent': 'PX', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'NX')}
(TOP
	(TURN
		(SU mit bad naturlich)
		[01;36m(SU[00m
			[01;31m(SU[00m
				(DM
					(PTKANT ja))[01;31m)[00m
			[01;36m(SIMPX[00m
				[01;31m(SU[00m
					[01;31m(SIMPX[00m
						(LK soll)
						(MF ich das jetzt fur sie)
						(VC buchen)[01;31m)[00m[01;31m)[00m
				[01;36m(NF[00m [01;31m(SU[00m
					(ADVX
						(ADV dann))[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;36m)[00m))
Step:Different label
{'family': ['SU', 'SU', 'SU', 'NF'], 'auto preterminal span': (11, 12), 'span': (11, 12), 'subtrees': ['ADVX'], 'parent': 'TURN', 'over_word': False, 'auto preterminals': ('ADV',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('SU', 'NF')}
(TOP
	(TURN
		(SU mit bad naturlich)
		[01;36m(SU[00m
			[01;31m(SU[00m
				(DM
					(PTKANT ja))[01;31m)[00m
			[01;36m(SIMPX[00m
				[01;31m(SU[00m
					[01;31m(SIMPX[00m
						(LK soll)
						(MF ich das jetzt fur sie)
						(VC buchen)[01;31m)[00m[01;31m)[00m
				(NF dann)[01;36m)[00m[01;36m)[00m))
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['DM', 'SU', 'NF'], 'mover info': [('SU', (4, 11)), ('NF', (11, 12))], 'old_family': ['SU', 'SU', 'SU', 'NF'], 'start left siblings': ['SU', 'SU'], 'auto preterminals': ('APPR', 'NN', 'ADV', 'PTKANT', 'VMFIN', 'PPER', 'PDS', 'ADV', 'APPR', 'PPER', 'VVINF', 'ADV'), 'start right siblings': [], 'end left siblings': ['DM'], 'auto preterminal span': (0, 12), 'movers': ['SU', 'NF'], 'old_parent': 'TURN', 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU mit bad naturlich)
		(SU
			(DM ja)
			[01;36m(SIMPX[00m
				[01;31m(SU[00m
					[01;31m(SIMPX[00m
						(LK soll)
						(MF ich das jetzt fur sie)
						(VC buchen)[01;31m)[00m[01;31m)[00m
				(NF dann)[01;36m)[00m)))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['LK', 'MF', 'VC', 'NF'], 'mover info': [('NF', (11, 12))], 'old_family': ['DM', 'SU', 'NF'], 'start left siblings': ['DM', 'SU'], 'auto preterminals': ('PTKANT', 'VMFIN', 'PPER', 'PDS', 'ADV', 'APPR', 'PPER', 'VVINF', 'ADV'), 'start right siblings': [], 'end left siblings': ['LK', 'MF', 'VC'], 'auto preterminal span': (3, 12), 'movers': ['NF'], 'old_parent': 'SU', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU mit bad naturlich)
		(SU
			(DM ja)
			[01;31m(SU[00m
				(SIMPX
					(LK soll)
					(MF ich das jetzt fur sie)
					(VC buchen)
					(NF dann))[01;31m)[00m)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['DM', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'VMFIN', 'PPER', 'PDS', 'ADV', 'APPR', 'PPER', 'VVINF', 'ADV'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (3, 12), 'span': (4, 12), 'left siblings': ['DM'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP mit bad naturlich ja soll ich das jetzt fur sie buchen dann)

Sentence 584:
23 Initial errors
0 on fringe, 14 iterations
4 Error:UNSET move
2 Error:Different label
2 Error:Different label
2 Error:Different label
2 Error:Different label
2 Error:Different label
2 Error:Co-ordination
1 Error:UNSET add
1 Error:Single Word Phrase
1 Error:UNSET add
1 Error:UNSET add
1 Error:UNSET remove
1 Error:Unary
1 Error:Clause Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;36m(SU[00m
					[01;36m(SIMPX[00m
						(VF dreieinhalb stunden)
						(LK fahren)[01;36m)[00m[01;36m)[00m
				[01;36m(VF[00m [01;31m(MF[00m
					(NX
						(PPER sie))[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
		[01;36m(FKOORD[00m [01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;36m(LKMVC[00m
					[01;36m(LKMVC[00m [01;31m(SIMPX[00m
						(LK kommen)
						(MF dann am hauptbahnhof)
						(VC an)[01;31m)[00m[01;36m)[00m
					[01;36m(SIMPX[00m
						[01;36m(KOORD[00m
							(KON und)[01;36m)[00m
						[01;36m(LKMVC[00m [01;31m(SIMPX[00m
							(LK konnen)
							(MF ja dann ein taxi)
							(VC nehmen)[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;36m)[00m
				(KON und)
				[01;36m(LKM[00m [01;31m(SIMPX[00m
					(LK kommen)
					(MF
						[01;31m(PX[00m
							(ADVX direkt)
							(APPRART zum)
							(NX hotel)[01;31m)[00m)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m
		[01;31m(SU[00m
			(DM ja)
			[01;36m(SIMPX[00m
				(SIMPX dann buche ich das fur sie)
				(DM
					(NX
						(NN herr)
						[01;31m(NX[00m
							(NE obrowski)
							(KON und)
							[01;36m(NX[00m
								(NE oborski)[01;36m)[00m[01;31m)[00m))[01;36m)[00m
			(SIMPX und dann muste ich nur von ihnen noch die kontonummer haben und die formalitaten)[01;31m)[00m))
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['MF', 'SIMPX'], 'mover info': [('MF', (3, 4))], 'old_family': ['VF', 'LK', 'MF'], 'start left siblings': ['VF', 'LK'], 'auto preterminals': ('CARD', 'NN', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'APPRART', 'NN', 'PTKVZ', 'KON', 'VMFIN', 'ADV', 'ADV', 'ART', 'NN', 'VVINF', 'KON', 'VVFIN', 'ADV', 'APPRART', 'NN', 'PTKANT', 'ADV', 'VVFIN', 'PPER', 'PDS', 'APPR', 'PPER', 'NN', 'NE', 'KON', 'NE', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'APPR', 'PPER', 'ADV', 'ART', 'NN', 'VAINF', 'KON', 'ART', 'NN'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 46), 'movers': ['MF'], 'old_parent': 'SIMPX', 'POS confusion': ('PPER', 'PPER'), 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU dreieinhalb stunden fahren)
		[01;31m(SU[00m
			[01;36m(VF[00m [01;31m(MF[00m
				(NX
					(PPER sie))[01;31m)[00m[01;36m)[00m
			[01;36m(FKOORD[00m [01;31m(SIMPX[00m
				[01;36m(LKMVC[00m
					[01;36m(LKMVC[00m [01;31m(SIMPX[00m
						(LK kommen)
						(MF dann am hauptbahnhof)
						(VC an)[01;31m)[00m[01;36m)[00m
					[01;36m(SIMPX[00m
						[01;36m(KOORD[00m
							(KON und)[01;36m)[00m
						[01;36m(LKMVC[00m [01;31m(SIMPX[00m
							(LK konnen)
							(MF ja dann ein taxi)
							(VC nehmen)[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;36m)[00m
				(KON und)
				[01;36m(LKM[00m [01;31m(SIMPX[00m
					(LK kommen)
					(MF
						[01;31m(PX[00m
							(ADVX direkt)
							(APPRART zum)
							(NX hotel)[01;31m)[00m)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(DM ja)
			[01;36m(SIMPX[00m
				(SIMPX dann buche ich das fur sie)
				(DM
					(NX
						(NN herr)
						[01;31m(NX[00m
							(NE obrowski)
							(KON und)
							[01;36m(NX[00m
								(NE oborski)[01;36m)[00m[01;31m)[00m))[01;36m)[00m
			(SIMPX und dann muste ich nur von ihnen noch die kontonummer haben und die formalitaten)[01;31m)[00m))
Step:Different label
{'family': ['VF', 'SIMPX'], 'auto preterminal span': (3, 4), 'span': (3, 4), 'subtrees': ['NX'], 'parent': 'SU', 'over_word': False, 'auto preterminals': ('PPER',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('MF', 'VF')}
(TOP
	(TURN
		(SU dreieinhalb stunden fahren)
		[01;31m(SU[00m
			(VF sie)
			[01;36m(FKOORD[00m [01;31m(SIMPX[00m
				[01;36m(LKMVC[00m
					[01;36m(LKMVC[00m [01;31m(SIMPX[00m
						(LK kommen)
						(MF dann am hauptbahnhof)
						(VC an)[01;31m)[00m[01;36m)[00m
					[01;36m(SIMPX[00m
						[01;36m(KOORD[00m
							(KON und)[01;36m)[00m
						[01;36m(LKMVC[00m [01;31m(SIMPX[00m
							(LK konnen)
							(MF ja dann ein taxi)
							(VC nehmen)[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;36m)[00m
				(KON und)
				[01;36m(LKM[00m [01;31m(SIMPX[00m
					(LK kommen)
					(MF
						[01;31m(PX[00m
							(ADVX direkt)
							(APPRART zum)
							(NX hotel)[01;31m)[00m)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(DM ja)
			[01;36m(SIMPX[00m
				(SIMPX dann buche ich das fur sie)
				(DM
					(NX
						(NN herr)
						[01;31m(NX[00m
							(NE obrowski)
							(KON und)
							[01;36m(NX[00m
								(NE oborski)[01;36m)[00m[01;31m)[00m))[01;36m)[00m
			(SIMPX und dann muste ich nur von ihnen noch die kontonummer haben und die formalitaten)[01;31m)[00m))
Step:Different label
{'family': ['LKMVC', 'KON', 'SIMPX', 'KON', 'SIMPX'], 'auto preterminal span': (4, 9), 'span': (4, 9), 'subtrees': ['LK', 'MF', 'VC'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('VVFIN', 'ADV', 'APPRART', 'NN', 'PTKVZ'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('SIMPX', 'LKMVC')}
(TOP
	(TURN
		(SU dreieinhalb stunden fahren)
		[01;31m(SU[00m
			(VF sie)
			[01;36m(FKOORD[00m [01;31m(SIMPX[00m
				[01;36m(LKMVC[00m
					(LKMVC kommen dann am hauptbahnhof an)
					[01;36m(SIMPX[00m
						[01;36m(KOORD[00m
							(KON und)[01;36m)[00m
						[01;36m(LKMVC[00m [01;31m(SIMPX[00m
							(LK konnen)
							(MF ja dann ein taxi)
							(VC nehmen)[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;36m)[00m
				(KON und)
				[01;36m(LKM[00m [01;31m(SIMPX[00m
					(LK kommen)
					(MF
						[01;31m(PX[00m
							(ADVX direkt)
							(APPRART zum)
							(NX hotel)[01;31m)[00m)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(DM ja)
			[01;36m(SIMPX[00m
				(SIMPX dann buche ich das fur sie)
				(DM
					(NX
						(NN herr)
						[01;31m(NX[00m
							(NE obrowski)
							(KON und)
							[01;36m(NX[00m
								(NE oborski)[01;36m)[00m[01;31m)[00m))[01;36m)[00m
			(SIMPX und dann muste ich nur von ihnen noch die kontonummer haben und die formalitaten)[01;31m)[00m))
Step:Different label
{'family': ['VF', 'FKOORD'], 'auto preterminal span': (4, 21), 'span': (4, 21), 'subtrees': ['LKMVC', 'KON', 'SIMPX', 'KON', 'SIMPX'], 'parent': 'SU', 'over_word': False, 'auto preterminals': ('VVFIN', 'ADV', 'APPRART', 'NN', 'PTKVZ', 'KON', 'VMFIN', 'ADV', 'ADV', 'ART', 'NN', 'VVINF', 'KON', 'VVFIN', 'ADV', 'APPRART', 'NN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('SIMPX', 'FKOORD')}
(TOP
	(TURN
		(SU dreieinhalb stunden fahren)
		[01;31m(SU[00m
			(VF sie)
			(FKOORD
				[01;36m(LKMVC[00m
					(LKMVC kommen dann am hauptbahnhof an)
					[01;36m(SIMPX[00m
						[01;36m(KOORD[00m
							(KON und)[01;36m)[00m
						[01;36m(LKMVC[00m [01;31m(SIMPX[00m
							(LK konnen)
							(MF ja dann ein taxi)
							(VC nehmen)[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;36m)[00m
				(KON und)
				[01;36m(LKM[00m [01;31m(SIMPX[00m
					(LK kommen)
					(MF
						[01;31m(PX[00m
							(ADVX direkt)
							(APPRART zum)
							(NX hotel)[01;31m)[00m)[01;31m)[00m[01;36m)[00m)[01;31m)[00m
		[01;31m(SU[00m
			(DM ja)
			[01;36m(SIMPX[00m
				(SIMPX dann buche ich das fur sie)
				(DM
					(NX
						(NN herr)
						[01;31m(NX[00m
							(NE obrowski)
							(KON und)
							[01;36m(NX[00m
								(NE oborski)[01;36m)[00m[01;31m)[00m))[01;36m)[00m
			(SIMPX und dann muste ich nur von ihnen noch die kontonummer haben und die formalitaten)[01;31m)[00m))
Step:Different label
{'family': ['LKMVC', 'KON', 'LKMVC', 'KON', 'SIMPX'], 'auto preterminal span': (10, 16), 'span': (10, 16), 'subtrees': ['LK', 'MF', 'VC'], 'parent': 'FKOORD', 'over_word': False, 'auto preterminals': ('VMFIN', 'ADV', 'ADV', 'ART', 'NN', 'VVINF'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('SIMPX', 'LKMVC')}
(TOP
	(TURN
		(SU dreieinhalb stunden fahren)
		[01;31m(SU[00m
			(VF sie)
			(FKOORD
				[01;36m(LKMVC[00m
					(LKMVC kommen dann am hauptbahnhof an)
					[01;36m(SIMPX[00m
						[01;36m(KOORD[00m
							(KON und)[01;36m)[00m
						(LKMVC konnen ja dann ein taxi nehmen)[01;36m)[00m[01;36m)[00m
				(KON und)
				[01;36m(LKM[00m [01;31m(SIMPX[00m
					(LK kommen)
					(MF
						[01;31m(PX[00m
							(ADVX direkt)
							(APPRART zum)
							(NX hotel)[01;31m)[00m)[01;31m)[00m[01;36m)[00m)[01;31m)[00m
		[01;31m(SU[00m
			(DM ja)
			[01;36m(SIMPX[00m
				(SIMPX dann buche ich das fur sie)
				(DM
					(NX
						(NN herr)
						[01;31m(NX[00m
							(NE obrowski)
							(KON und)
							[01;36m(NX[00m
								(NE oborski)[01;36m)[00m[01;31m)[00m))[01;36m)[00m
			(SIMPX und dann muste ich nur von ihnen noch die kontonummer haben und die formalitaten)[01;31m)[00m))
Step:Different label
{'family': ['LKMVC', 'KON', 'LKMVC', 'KON', 'LKM'], 'auto preterminal span': (17, 21), 'span': (17, 21), 'subtrees': ['LK', 'MF'], 'parent': 'FKOORD', 'over_word': False, 'auto preterminals': ('VVFIN', 'ADV', 'APPRART', 'NN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('SIMPX', 'LKM')}
(TOP
	(TURN
		(SU dreieinhalb stunden fahren)
		[01;31m(SU[00m
			(VF sie)
			(FKOORD
				[01;36m(LKMVC[00m
					(LKMVC kommen dann am hauptbahnhof an)
					[01;36m(SIMPX[00m
						[01;36m(KOORD[00m
							(KON und)[01;36m)[00m
						(LKMVC konnen ja dann ein taxi nehmen)[01;36m)[00m[01;36m)[00m
				(KON und)
				(LKM
					(LK kommen)
					(MF
						[01;31m(PX[00m
							(ADVX direkt)
							(APPRART zum)
							(NX hotel)[01;31m)[00m)))[01;31m)[00m
		[01;31m(SU[00m
			(DM ja)
			[01;36m(SIMPX[00m
				(SIMPX dann buche ich das fur sie)
				(DM
					(NX
						(NN herr)
						[01;31m(NX[00m
							(NE obrowski)
							(KON und)
							[01;36m(NX[00m
								(NE oborski)[01;36m)[00m[01;31m)[00m))[01;36m)[00m
			(SIMPX und dann muste ich nur von ihnen noch die kontonummer haben und die formalitaten)[01;31m)[00m))
Step:Co-ordination
{'new_parent': 'NX', 'new_family': ['NN', 'NE', 'KON', 'NX'], 'mover info': [('NE', (29, 30)), ('KON', (30, 31))], 'old_family': ['NE', 'KON', 'NE'], 'start left siblings': [], 'auto preterminals': ('NN', 'NE', 'KON', 'NE'), 'start right siblings': ['NE'], 'end left siblings': ['NN'], 'auto preterminal span': (28, 32), 'movers': ['NE', 'KON'], 'old_parent': 'NX', 'end right siblings': ['NX'], 'classified_type': 'Co-ordination', 'type': 'move'}
(TOP
	(TURN
		(SU dreieinhalb stunden fahren)
		[01;31m(SU[00m
			(VF sie)
			(FKOORD
				[01;36m(LKMVC[00m
					(LKMVC kommen dann am hauptbahnhof an)
					[01;36m(SIMPX[00m
						[01;36m(KOORD[00m
							(KON und)[01;36m)[00m
						(LKMVC konnen ja dann ein taxi nehmen)[01;36m)[00m[01;36m)[00m
				(KON und)
				(LKM
					(LK kommen)
					(MF
						[01;31m(PX[00m
							(ADVX direkt)
							(APPRART zum)
							(NX hotel)[01;31m)[00m)))[01;31m)[00m
		[01;31m(SU[00m
			(DM ja)
			[01;36m(SIMPX[00m
				(SIMPX dann buche ich das fur sie)
				(DM herr obrowski und oborski)[01;36m)[00m
			(SIMPX und dann muste ich nur von ihnen noch die kontonummer haben und die formalitaten)[01;31m)[00m))
Step:UNSET add
{'subtrees': ['LKMVC', 'KON', 'LKMVC'], 'family': ['LKMVC', 'KON', 'LKM'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'ADV', 'APPRART', 'NN', 'PTKVZ', 'KON', 'VMFIN', 'ADV', 'ADV', 'ART', 'NN', 'VVINF'), 'right siblings': [(KON und), (LKM (LK (VXFIN (VVFIN kommen))) (MF (PX (ADVX (ADV direkt)) (APPRART zum) (NX (NN hotel)))))], 'left siblings': [], 'auto preterminal span': (4, 16), 'span': (4, 16), 'parent': 'FKOORD', 'label': 'LKMVC', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU dreieinhalb stunden fahren)
		[01;31m(SU[00m
			(VF sie)
			(FKOORD
				(LKMVC
					(LKMVC kommen dann am hauptbahnhof an)
					[01;36m(SIMPX[00m
						[01;36m(KOORD[00m
							(KON und)[01;36m)[00m
						(LKMVC konnen ja dann ein taxi nehmen)[01;36m)[00m)
				(KON und)
				(LKM
					(LK kommen)
					(MF
						[01;31m(PX[00m
							(ADVX direkt)
							(APPRART zum)
							(NX hotel)[01;31m)[00m)))[01;31m)[00m
		[01;31m(SU[00m
			(DM ja)
			[01;36m(SIMPX[00m
				(SIMPX dann buche ich das fur sie)
				(DM herr obrowski und oborski)[01;36m)[00m
			(SIMPX und dann muste ich nur von ihnen noch die kontonummer haben und die formalitaten)[01;31m)[00m))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['LKMVC', 'KOORD', 'LKMVC'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON',), 'right siblings': [(LKMVC (LK (VXFIN (VMFIN konnen))) (MF (ADVX (ADV ja)) (ADVX (ADV dann)) (NX (ART ein) (NN taxi))) (VC (VXINF (VVINF nehmen))))], 'left siblings': [(LKMVC (LK (VXFIN (VVFIN kommen))) (MF (ADVX (ADV dann)) (PX (APPRART am) (NX (NN hauptbahnhof)))) (VC (PTKVZ an)))], 'auto preterminal span': (9, 10), 'span': (9, 10), 'parent': 'LKMVC', 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SU dreieinhalb stunden fahren)
		[01;31m(SU[00m
			(VF sie)
			(FKOORD
				(LKMVC
					(LKMVC kommen dann am hauptbahnhof an)
					[01;36m(SIMPX[00m
						(KOORD und)
						(LKMVC konnen ja dann ein taxi nehmen)[01;36m)[00m)
				(KON und)
				(LKM
					(LK kommen)
					(MF
						[01;31m(PX[00m
							(ADVX direkt)
							(APPRART zum)
							(NX hotel)[01;31m)[00m)))[01;31m)[00m
		[01;31m(SU[00m
			(DM ja)
			[01;36m(SIMPX[00m
				(SIMPX dann buche ich das fur sie)
				(DM herr obrowski und oborski)[01;36m)[00m
			(SIMPX und dann muste ich nur von ihnen noch die kontonummer haben und die formalitaten)[01;31m)[00m))
Step:UNSET add
{'subtrees': ['KOORD', 'LKMVC'], 'family': ['LKMVC', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'VMFIN', 'ADV', 'ADV', 'ART', 'NN', 'VVINF'), 'right siblings': [], 'left siblings': [(LKMVC (LK (VXFIN (VVFIN kommen))) (MF (ADVX (ADV dann)) (PX (APPRART am) (NX (NN hauptbahnhof)))) (VC (PTKVZ an)))], 'auto preterminal span': (9, 16), 'span': (9, 16), 'parent': 'LKMVC', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU dreieinhalb stunden fahren)
		[01;31m(SU[00m
			(VF sie)
			(FKOORD
				(LKMVC kommen dann am hauptbahnhof an und konnen ja dann ein taxi nehmen)
				(KON und)
				(LKM
					(LK kommen)
					(MF
						[01;31m(PX[00m
							(ADVX direkt)
							(APPRART zum)
							(NX hotel)[01;31m)[00m)))[01;31m)[00m
		[01;31m(SU[00m
			(DM ja)
			[01;36m(SIMPX[00m
				(SIMPX dann buche ich das fur sie)
				(DM herr obrowski und oborski)[01;36m)[00m
			(SIMPX und dann muste ich nur von ihnen noch die kontonummer haben und die formalitaten)[01;31m)[00m))
Step:UNSET add
{'subtrees': ['SIMPX', 'DM'], 'family': ['DM', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'PDS', 'APPR', 'PPER', 'NN', 'NE', 'KON', 'NE'), 'right siblings': [(SIMPX (KOORD (KON und)) (VF (ADVX (ADV dann))) (LK (VXFIN (VMFIN muste))) (MF (NX (PPER ich)) (ADVX (ADV nur)) (PX (APPR von) (NX (PPER ihnen))) (ADVX (ADV noch)) (NX (ART die) (NN kontonummer))) (VC (VXINF (VAINF haben))) (NF (NX (KON und) (NX (ART die) (NN formalitaten)))))], 'left siblings': [(DM (PTKANT ja))], 'auto preterminal span': (22, 32), 'span': (22, 32), 'parent': 'SU', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU dreieinhalb stunden fahren)
		[01;31m(SU[00m
			(VF sie)
			(FKOORD
				(LKMVC kommen dann am hauptbahnhof an und konnen ja dann ein taxi nehmen)
				(KON und)
				(LKM
					(LK kommen)
					(MF
						[01;31m(PX[00m
							(ADVX direkt)
							(APPRART zum)
							(NX hotel)[01;31m)[00m)))[01;31m)[00m
		[01;31m(SU[00m
			(DM ja)
			(SIMPX dann buche ich das fur sie herr obrowski und oborski)
			(SIMPX und dann muste ich nur von ihnen noch die kontonummer haben und die formalitaten)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VF', 'FKOORD'], 'family': ['SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'NN', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'APPRART', 'NN', 'PTKVZ', 'KON', 'VMFIN', 'ADV', 'ADV', 'ART', 'NN', 'VVINF', 'KON', 'VVFIN', 'ADV', 'APPRART', 'NN', 'PTKANT', 'ADV', 'VVFIN', 'PPER', 'PDS', 'APPR', 'PPER', 'NN', 'NE', 'KON', 'NE', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'APPR', 'PPER', 'ADV', 'ART', 'NN', 'VAINF', 'KON', 'ART', 'NN'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 46), 'span': (3, 21), 'left siblings': ['SU'], 'label': 'SU', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU dreieinhalb stunden fahren)
		(VF sie)
		(FKOORD
			(LKMVC kommen dann am hauptbahnhof an und konnen ja dann ein taxi nehmen)
			(KON und)
			(LKM
				(LK kommen)
				(MF
					[01;31m(PX[00m
						(ADVX direkt)
						(APPRART zum)
						(NX hotel)[01;31m)[00m)))
		[01;31m(SU[00m
			(DM ja)
			(SIMPX dann buche ich das fur sie herr obrowski und oborski)
			(SIMPX und dann muste ich nur von ihnen noch die kontonummer haben und die formalitaten)[01;31m)[00m))
Step:Unary
{'subtrees': ['ADVX', 'APPRART', 'NX'], 'family': ['PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'APPRART', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (18, 21), 'span': (18, 21), 'left siblings': [], 'label': 'PX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU dreieinhalb stunden fahren)
		(VF sie)
		(FKOORD kommen dann am hauptbahnhof an und konnen ja dann ein taxi nehmen und kommen direkt zum hotel)
		[01;31m(SU[00m
			(DM ja)
			(SIMPX dann buche ich das fur sie herr obrowski und oborski)
			(SIMPX und dann muste ich nur von ihnen noch die kontonummer haben und die formalitaten)[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['DM', 'SIMPX', 'SIMPX'], 'family': ['SU', 'VF', 'FKOORD', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'NN', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'APPRART', 'NN', 'PTKVZ', 'KON', 'VMFIN', 'ADV', 'ADV', 'ART', 'NN', 'VVINF', 'KON', 'VVFIN', 'ADV', 'APPRART', 'NN', 'PTKANT', 'ADV', 'VVFIN', 'PPER', 'PDS', 'APPR', 'PPER', 'NN', 'NE', 'KON', 'NE', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'APPR', 'PPER', 'ADV', 'ART', 'NN', 'VAINF', 'KON', 'ART', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 46), 'span': (21, 46), 'left siblings': ['SU', 'VF', 'FKOORD'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP dreieinhalb stunden fahren sie kommen dann am hauptbahnhof an und konnen ja dann ein taxi nehmen und kommen direkt zum hotel ja dann buche ich das fur sie herr obrowski und oborski und dann muste ich nur von ihnen noch die kontonummer haben und die formalitaten)

Sentence 585:
19 Initial errors
0 on fringe, 10 iterations
3 Error:UNSET move
4 Error:UNSET move
3 Error:Co-ordination
2 Error:Co-ordination
2 Error:Modifier Attachment
1 Error:Single Word Phrase
1 Error:Unary
1 Error:Unary
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(SIMPX dann schicke ich ihnen die quittung zu)
			[01;31m(DM[00m [01;33m(SU (SIMPX[00m
				[01;36m(KOORD[00m
					(KON und)[01;36m)[00m
				[01;36m(DM[00m
					(PTKANT ja)[01;36m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF dann)
				(LK verbleibe)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX ich)
					[01;33m(NX (NX[00m (ADVX so)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(DM[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(PIDAT vielen)
						(NN dank)[01;31m)[00m [01;33mNX)[00m
					[01;33m(PX[00m (PX fur die buchung)[01;31m)[00m[01;31m)[00m
			[01;31m(DM[00m
				[01;31m(PX[00m
					(KON und)
					(PX auf wiederhoren)[01;31m)[00m[01;31m)[00m[01;31m)[00m)) [01;33mPX) NX) MF) SIMPX) SU)[00m
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['NX', 'ADVX', 'SU'], 'mover info': [('SU', (13, 21))], 'old_family': ['SU', 'SU', 'SU'], 'start left siblings': ['SU', 'SU'], 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'PPER', 'ART', 'NN', 'PTKVZ', 'KON', 'PTKANT', 'ADV', 'VVFIN', 'PPER', 'ADV', 'PIDAT', 'NN', 'APPR', 'ART', 'NN', 'KON', 'APPR', 'NN'), 'start right siblings': [], 'end left siblings': ['NX', 'ADVX'], 'auto preterminal span': (0, 21), 'adding node already present': False, 'movers': ['SU'], 'old_parent': 'TURN', 'added and moved': True, 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		[01;31m(SU[00m
			(SIMPX dann schicke ich ihnen die quittung zu)
			[01;31m(DM[00m [01;33m(SU (SIMPX[00m
				[01;36m(KOORD[00m
					(KON und)[01;36m)[00m
				[01;36m(DM[00m
					(PTKANT ja)[01;36m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF dann)
				(LK verbleibe)
				(MF
					(NX ich)
					(NX [01;33m(NX[00m
						(ADVX so)
						[01;31m(SU[00m
							[01;31m(DM[00m
								[01;31m(NX[00m
									[01;31m(NX[00m
										(PIDAT vielen)
										(NN dank)[01;31m)[00m [01;33mNX)[00m
									[01;33m(PX[00m (PX fur die buchung)[01;31m)[00m[01;31m)[00m
							[01;31m(DM[00m
								[01;31m(PX[00m
									(KON und)
									(PX auf wiederhoren)[01;31m)[00m[01;31m)[00m[01;31m)[00m))[01;31m)[00m[01;31m)[00m)) [01;33mPX) SIMPX) SU)[00m
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['DM', 'VF', 'LK', 'MF'], 'mover info': [('DM', (7, 9))], 'old_family': ['SIMPX', 'DM'], 'start left siblings': ['SIMPX'], 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'PPER', 'ART', 'NN', 'PTKVZ', 'KON', 'PTKANT', 'ADV', 'VVFIN', 'PPER', 'ADV', 'PIDAT', 'NN', 'APPR', 'ART', 'NN', 'KON', 'APPR', 'NN'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 21), 'movers': ['DM'], 'old_parent': 'SU', 'end right siblings': ['VF', 'LK', 'MF'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			(SIMPX
				(VF dann)
				(LK schicke)
				(MF ich ihnen die quittung)
				(VC zu))[01;31m)[00m
		(SU
			(SIMPX
				[01;31m(DM[00m
					[01;36m(KOORD[00m
						(KON und)[01;36m)[00m
					[01;36m(DM[00m
						(PTKANT ja)[01;36m)[00m[01;31m)[00m
				(VF dann)
				(LK verbleibe)
				(MF
					(NX ich)
					(NX [01;33m(NX[00m
						(ADVX so)
						[01;31m(SU[00m
							[01;31m(DM[00m
								[01;31m(NX[00m
									[01;31m(NX[00m
										(PIDAT vielen)
										(NN dank)[01;31m)[00m [01;33mNX)[00m
									[01;33m(PX[00m (PX fur die buchung)[01;31m)[00m[01;31m)[00m
							[01;31m(DM[00m
								[01;31m(PX[00m
									(KON und)
									(PX auf wiederhoren)[01;31m)[00m[01;31m)[00m[01;31m)[00m)))))) [01;33mPX)[00m
Step:Co-ordination
{'new_parent': 'PX', 'new_family': ['PX', 'KON', 'PX'], 'mover info': [('PX', (15, 18))], 'old_family': ['NX', 'PX'], 'start left siblings': ['NX'], 'auto preterminals': ('PIDAT', 'NN', 'APPR', 'ART', 'NN', 'KON', 'APPR', 'NN'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (13, 21), 'movers': ['PX'], 'old_parent': 'NX', 'end right siblings': ['KON', 'PX'], 'classified_type': 'Co-ordination', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			(SIMPX
				(VF dann)
				(LK schicke)
				(MF ich ihnen die quittung)
				(VC zu))[01;31m)[00m
		(SU
			(SIMPX
				[01;31m(DM[00m
					[01;36m(KOORD[00m
						(KON und)[01;36m)[00m
					[01;36m(DM[00m
						(PTKANT ja)[01;36m)[00m[01;31m)[00m
				(VF dann)
				(LK verbleibe)
				(MF
					(NX ich)
					(NX [01;33m(NX[00m
						(ADVX so)
						[01;31m(SU[00m
							[01;31m(DM[00m
								[01;31m(NX[00m
									(PIDAT vielen)
									(NN dank)[01;31m)[00m[01;31m)[00m [01;33mNX)[00m
							[01;31m(DM[00m
								(PX
									(PX fur die buchung)
									(KON und)
									(PX auf wiederhoren))[01;31m)[00m[01;31m)[00m))))))
Step:Co-ordination
{'new_parent': 'SIMPX', 'new_family': ['KON', 'DM', 'VF', 'LK', 'MF'], 'mover info': [('KON', (7, 8))], 'old_family': ['KON', 'PTKANT'], 'start left siblings': [], 'auto preterminals': ('KON', 'PTKANT', 'ADV', 'VVFIN', 'PPER', 'ADV', 'PIDAT', 'NN', 'APPR', 'ART', 'NN', 'KON', 'APPR', 'NN'), 'start right siblings': ['PTKANT'], 'end left siblings': [], 'auto preterminal span': (7, 21), 'movers': ['KON'], 'old_parent': 'DM', 'POS confusion': ('KON', 'KON'), 'end right siblings': ['DM', 'VF', 'LK', 'MF'], 'classified_type': 'Co-ordination', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			(SIMPX
				(VF dann)
				(LK schicke)
				(MF ich ihnen die quittung)
				(VC zu))[01;31m)[00m
		(SU
			(SIMPX
				[01;36m(KOORD[00m
					(KON und)[01;36m)[00m
				(DM ja)
				(VF dann)
				(LK verbleibe)
				(MF
					(NX ich)
					(NX [01;33m(NX[00m
						(ADVX so)
						[01;31m(SU[00m
							[01;31m(DM[00m
								[01;31m(NX[00m
									(PIDAT vielen)
									(NN dank)[01;31m)[00m[01;31m)[00m [01;33mNX)[00m
							[01;31m(DM[00m
								(PX
									(PX fur die buchung)
									(KON und)
									(PX auf wiederhoren))[01;31m)[00m[01;31m)[00m))))))
Step:Modifier Attachment
{'new_parent': 'NX', 'new_family': ['ADVX', 'PIDAT', 'NN'], 'mover info': [('ADVX', (12, 13))], 'old_family': ['ADVX', 'SU'], 'start left siblings': [], 'auto preterminals': ('ADV', 'PIDAT', 'NN', 'APPR', 'ART', 'NN', 'KON', 'APPR', 'NN'), 'start right siblings': ['SU'], 'end left siblings': [], 'auto preterminal span': (12, 21), 'movers': ['ADVX'], 'old_parent': 'NX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['PIDAT', 'NN'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			(SIMPX
				(VF dann)
				(LK schicke)
				(MF ich ihnen die quittung)
				(VC zu))[01;31m)[00m
		(SU
			(SIMPX
				[01;36m(KOORD[00m
					(KON und)[01;36m)[00m
				(DM ja)
				(VF dann)
				(LK verbleibe)
				(MF
					(NX ich)
					(NX
						[01;31m(SU[00m
							[01;31m(DM[00m
								(NX
									(ADVX so)
									(PIDAT vielen)
									(NN dank))[01;31m)[00m
							[01;31m(DM[00m
								(PX
									(PX fur die buchung)
									(KON und)
									(PX auf wiederhoren))[01;31m)[00m[01;31m)[00m))))))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['KOORD', 'DM', 'VF', 'LK', 'MF'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON',), 'right siblings': [(DM (PTKANT ja)), (VF (ADVX (ADV dann))), (LK (VXFIN (VVFIN verbleibe))), (MF (NX (PPER ich)) (NX (SU (DM (NX (ADVX (ADV so)) (PIDAT vielen) (NN dank))) (DM (PX (PX (APPR fur) (NX (ART die) (NN buchung))) (KON und) (PX (APPR auf) (NX (NN wiederhoren))))))))], 'left siblings': [], 'auto preterminal span': (7, 8), 'span': (7, 8), 'parent': 'SIMPX', 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(SIMPX
				(VF dann)
				(LK schicke)
				(MF ich ihnen die quittung)
				(VC zu))[01;31m)[00m
		(SU
			(SIMPX
				(KOORD und)
				(DM ja)
				(VF dann)
				(LK verbleibe)
				(MF
					(NX ich)
					(NX
						[01;31m(SU[00m
							[01;31m(DM[00m
								(NX
									(ADVX so)
									(PIDAT vielen)
									(NN dank))[01;31m)[00m
							[01;31m(DM[00m
								(PX
									(PX fur die buchung)
									(KON und)
									(PX auf wiederhoren))[01;31m)[00m[01;31m)[00m))))))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'PPER', 'ART', 'NN', 'PTKVZ', 'KON', 'PTKANT', 'ADV', 'VVFIN', 'PPER', 'ADV', 'PIDAT', 'NN', 'APPR', 'ART', 'NN', 'KON', 'APPR', 'NN'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 21), 'span': (0, 7), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX dann schicke ich ihnen die quittung zu)
		(SU
			(SIMPX
				(KOORD und)
				(DM ja)
				(VF dann)
				(LK verbleibe)
				(MF
					(NX ich)
					(NX
						[01;31m(SU[00m
							[01;31m(DM[00m
								(NX
									(ADVX so)
									(PIDAT vielen)
									(NN dank))[01;31m)[00m
							[01;31m(DM[00m
								(PX
									(PX fur die buchung)
									(KON und)
									(PX auf wiederhoren))[01;31m)[00m[01;31m)[00m))))))
Step:Unary
{'subtrees': ['NX'], 'family': ['DM', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PIDAT', 'NN', 'APPR', 'ART', 'NN', 'KON', 'APPR', 'NN'), 'right siblings': ['DM'], 'parent': 'SU', 'auto preterminal span': (12, 21), 'span': (12, 15), 'left siblings': [], 'label': 'DM', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX dann schicke ich ihnen die quittung zu)
		(SU
			(SIMPX
				(KOORD und)
				(DM ja)
				(VF dann)
				(LK verbleibe)
				(MF
					(NX ich)
					(NX
						[01;31m(SU[00m
							(NX so vielen dank)
							[01;31m(DM[00m
								(PX
									(PX fur die buchung)
									(KON und)
									(PX auf wiederhoren))[01;31m)[00m[01;31m)[00m))))))
Step:Unary
{'subtrees': ['NX', 'DM'], 'family': ['SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PIDAT', 'NN', 'APPR', 'ART', 'NN', 'KON', 'APPR', 'NN'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (12, 21), 'span': (12, 21), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX dann schicke ich ihnen die quittung zu)
		(SU
			(SIMPX
				(KOORD und)
				(DM ja)
				(VF dann)
				(LK verbleibe)
				(MF
					(NX ich)
					(NX
						(NX so vielen dank)
						[01;31m(DM[00m
							(PX
								(PX fur die buchung)
								(KON und)
								(PX auf wiederhoren))[01;31m)[00m))))))
Step:Unary
{'subtrees': ['PX'], 'family': ['NX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PIDAT', 'NN', 'APPR', 'ART', 'NN', 'KON', 'APPR', 'NN'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (12, 21), 'span': (15, 21), 'left siblings': ['NX'], 'label': 'DM', 'classified_type': 'Unary', 'type': 'remove'}
(TOP dann schicke ich ihnen die quittung zu und ja dann verbleibe ich so vielen dank fur die buchung und auf wiederhoren)

Sentence 586:
7 Initial errors
0 on fringe, 6 iterations
2 Error:UNSET move
1 Error:UNSET remove
1 Error:Unary
1 Error:Clause Attachment
1 Error:UNSET remove
1 Error:NP Internal Structure
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;36m(SU[00m
			[01;31m(SU[00m
				(DM ja)
				(DM schonen guten tag)[01;31m)[00m
			[01;31m(SU[00m
				(SIMPX
					(VF hier)
					(LK spricht)
					(MF matthias oborski))[01;31m)[00m[01;36m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK wollte)
				(MF sie)
				(VC fragen)
				(NF wegen einer geschaftsreise nach hannover))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX und zwar muste ich im august vom funfzehnten bis zum siebzehnten in hannover sein)
			(SIMPX
				(KOORD und)
				(VF ich)
				(LK hatte)
				(VC vor)
				(NF
					(SIMPX
						(MF
							(PX mit dem zug)
							(PX
								[01;31m(PX[00m
									(APPR ab)
									[01;33m(NX[00m (NX bonn)[01;31m)[00m
								(NX hannover))) [01;33mNX)[00m
						(VC zu fahren))))[01;31m)[00m))
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SU', 'SIMPX'], 'mover info': [('SU', (0, 4))], 'old_family': ['SU', 'SU', 'SU', 'SU'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'ADJA', 'ADJA', 'NN', 'ADV', 'VVFIN', 'NE', 'NE', 'PPER', 'VMFIN', 'PPER', 'VVINF', 'APPR', 'ART', 'NN', 'APPR', 'NE', 'KON', 'ADV', 'VMFIN', 'PPER', 'APPRART', 'NN', 'APPRART', 'NN', 'APPR', 'APPRART', 'NN', 'APPR', 'NE', 'VAINF', 'KON', 'PPER', 'VAFIN', 'PTKVZ', 'APPR', 'ART', 'NN', 'APPR', 'NE', 'NE', 'PTKZU', 'VVINF'), 'start right siblings': ['SU', 'SU', 'SU'], 'end left siblings': [], 'auto preterminal span': (0, 43), 'movers': ['SU'], 'old_parent': 'TURN', 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			[01;31m(SU[00m
				(DM ja)
				(DM schonen guten tag)[01;31m)[00m
			(SIMPX hier spricht matthias oborski))
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK wollte)
				(MF sie)
				(VC fragen)
				(NF wegen einer geschaftsreise nach hannover))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX und zwar muste ich im august vom funfzehnten bis zum siebzehnten in hannover sein)
			(SIMPX
				(KOORD und)
				(VF ich)
				(LK hatte)
				(VC vor)
				(NF
					(SIMPX
						(MF
							(PX mit dem zug)
							(PX
								[01;31m(PX[00m
									(APPR ab)
									[01;33m(NX[00m (NX bonn)[01;31m)[00m
								(NX hannover))) [01;33mNX)[00m
						(VC zu fahren))))[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['DM', 'DM'], 'family': ['SU', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADJA', 'ADJA', 'NN', 'ADV', 'VVFIN', 'NE', 'NE'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 8), 'span': (0, 4), 'left siblings': [], 'label': 'SU', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU ja schonen guten tag hier spricht matthias oborski)
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK wollte)
				(MF sie)
				(VC fragen)
				(NF wegen einer geschaftsreise nach hannover))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX und zwar muste ich im august vom funfzehnten bis zum siebzehnten in hannover sein)
			(SIMPX
				(KOORD und)
				(VF ich)
				(LK hatte)
				(VC vor)
				(NF
					(SIMPX
						(MF
							(PX mit dem zug)
							(PX
								[01;31m(PX[00m
									(APPR ab)
									[01;33m(NX[00m (NX bonn)[01;31m)[00m
								(NX hannover))) [01;33mNX)[00m
						(VC zu fahren))))[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADJA', 'ADJA', 'NN', 'ADV', 'VVFIN', 'NE', 'NE', 'PPER', 'VMFIN', 'PPER', 'VVINF', 'APPR', 'ART', 'NN', 'APPR', 'NE', 'KON', 'ADV', 'VMFIN', 'PPER', 'APPRART', 'NN', 'APPRART', 'NN', 'APPR', 'APPRART', 'NN', 'APPR', 'NE', 'VAINF', 'KON', 'PPER', 'VAFIN', 'PTKVZ', 'APPR', 'ART', 'NN', 'APPR', 'NE', 'NE', 'PTKZU', 'VVINF'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 43), 'span': (8, 17), 'left siblings': ['SU'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU ja schonen guten tag hier spricht matthias oborski)
		(SIMPX ich wollte sie fragen wegen einer geschaftsreise nach hannover)
		[01;31m(SU[00m
			(SIMPX und zwar muste ich im august vom funfzehnten bis zum siebzehnten in hannover sein)
			(SIMPX
				(KOORD und)
				(VF ich)
				(LK hatte)
				(VC vor)
				(NF
					(SIMPX
						(MF
							(PX mit dem zug)
							(PX
								[01;31m(PX[00m
									(APPR ab)
									[01;33m(NX[00m (NX bonn)[01;31m)[00m
								(NX hannover))) [01;33mNX)[00m
						(VC zu fahren))))[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['SU', 'SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADJA', 'ADJA', 'NN', 'ADV', 'VVFIN', 'NE', 'NE', 'PPER', 'VMFIN', 'PPER', 'VVINF', 'APPR', 'ART', 'NN', 'APPR', 'NE', 'KON', 'ADV', 'VMFIN', 'PPER', 'APPRART', 'NN', 'APPRART', 'NN', 'APPR', 'APPRART', 'NN', 'APPR', 'NE', 'VAINF', 'KON', 'PPER', 'VAFIN', 'PTKVZ', 'APPR', 'ART', 'NN', 'APPR', 'NE', 'NE', 'PTKZU', 'VVINF'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 43), 'span': (17, 43), 'left siblings': ['SU', 'SIMPX'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU ja schonen guten tag hier spricht matthias oborski)
		(SIMPX ich wollte sie fragen wegen einer geschaftsreise nach hannover)
		(SIMPX und zwar muste ich im august vom funfzehnten bis zum siebzehnten in hannover sein)
		(SIMPX
			(KOORD und)
			(VF ich)
			(LK hatte)
			(VC vor)
			(NF
				(SIMPX
					(MF
						(PX mit dem zug)
						(PX
							[01;31m(PX[00m
								(APPR ab)
								[01;33m(NX[00m (NX bonn)[01;31m)[00m
							(NX hannover))) [01;33mNX)[00m
					(VC zu fahren))))))
Step:UNSET remove
{'subtrees': ['APPR', 'NX'], 'family': ['PX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'NE', 'NE'), 'right siblings': ['NX'], 'parent': 'PX', 'auto preterminal span': (38, 41), 'span': (38, 40), 'left siblings': [], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU ja schonen guten tag hier spricht matthias oborski)
		(SIMPX ich wollte sie fragen wegen einer geschaftsreise nach hannover)
		(SIMPX und zwar muste ich im august vom funfzehnten bis zum siebzehnten in hannover sein)
		(SIMPX
			(KOORD und)
			(VF ich)
			(LK hatte)
			(VC vor)
			(NF
				(SIMPX
					(MF
						(PX mit dem zug)
						(PX
							(APPR ab)
							[01;36m(NX[00m
								(NX bonn)
								(NX hannover)[01;36m)[00m))
					(VC zu fahren))))))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['APPR', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NE', 'NE'), 'right siblings': [], 'left siblings': [(APPR ab)], 'auto preterminal span': (39, 41), 'span': (39, 41), 'parent': 'PX', 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'add'}
(TOP ja schonen guten tag hier spricht matthias oborski ich wollte sie fragen wegen einer geschaftsreise nach hannover und zwar muste ich im august vom funfzehnten bis zum siebzehnten in hannover sein und ich hatte vor mit dem zug ab bonn hannover zu fahren)

Sentence 587:
6 Initial errors
0 on fringe, 5 iterations
2 Error:UNSET move
1 Error:UNSET add
1 Error:Unary
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SU[00m
	(TOP
		(TURN
			[01;31m(SU[00m
				(DM
					(PTKANT ja))[01;31m)[00m
			[01;31m(SU[00m
				(SIMPX
					(KOORD und)
					[01;36m(VF[00m
						[01;36m(PX[00m
							[01;31m(LV[00m
								(PX
									(APPR mit)
									(NX der zugverbindung))[01;31m)[00m
							(VF wie lange)[01;36m)[00m[01;36m)[00m
					(LK wird)
					(MF das)
					(VC dauern))[01;31m)[00m))[01;36m)[00m
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SU', 'SIMPX'], 'mover info': [('SU', (0, 1))], 'old_family': ['SU', 'SU'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'KON', 'APPR', 'ART', 'NN', 'PWAV', 'ADJD', 'VAFIN', 'PDS', 'VVINF'), 'start right siblings': ['SU'], 'end left siblings': [], 'auto preterminal span': (0, 10), 'movers': ['SU'], 'old_parent': 'TURN', 'POS confusion': ('PTKANT', 'PTKANT'), 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			[01;31m(SU[00m
				(DM
					(PTKANT ja))[01;31m)[00m
			(SIMPX
				(KOORD und)
				[01;36m(VF[00m
					[01;36m(PX[00m
						[01;31m(LV[00m
							(PX
								(APPR mit)
								(NX der zugverbindung))[01;31m)[00m
						(VF wie lange)[01;36m)[00m[01;36m)[00m
				(LK wird)
				(MF das)
				(VC dauern)))))
Step:UNSET add
{'subtrees': ['LV', 'VF'], 'family': ['KOORD', 'PX', 'LK', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NN', 'PWAV', 'ADJD'), 'right siblings': [(LK (VXFIN (VAFIN wird))), (MF (NX (PDS das))), (VC (VXINF (VVINF dauern)))], 'left siblings': [(KOORD (KON und))], 'auto preterminal span': (2, 7), 'span': (2, 7), 'parent': 'SIMPX', 'label': 'PX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU
			[01;31m(SU[00m
				(DM
					(PTKANT ja))[01;31m)[00m
			(SIMPX
				(KOORD und)
				[01;36m(VF[00m
					(PX
						[01;31m(LV[00m
							(PX
								(APPR mit)
								(NX der zugverbindung))[01;31m)[00m
						(VF wie lange))[01;36m)[00m
				(LK wird)
				(MF das)
				(VC dauern)))))
Step:Unary
{'subtrees': ['PX'], 'family': ['KOORD', 'VF', 'LK', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NN', 'PWAV', 'ADJD'), 'right siblings': [(LK (VXFIN (VAFIN wird))), (MF (NX (PDS das))), (VC (VXINF (VVINF dauern)))], 'left siblings': [(KOORD (KON und))], 'auto preterminal span': (2, 7), 'span': (2, 7), 'parent': 'SIMPX', 'label': 'VF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU
			[01;31m(SU[00m
				(DM
					(PTKANT ja))[01;31m)[00m
			(SIMPX
				(KOORD und)
				(VF
					(PX
						[01;31m(LV[00m
							(PX
								(APPR mit)
								(NX der zugverbindung))[01;31m)[00m
						(VF wie lange)))
				(LK wird)
				(MF das)
				(VC dauern)))))
Step:Unary
{'subtrees': ['DM'], 'family': ['SU', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'KON', 'APPR', 'ART', 'NN', 'PWAV', 'ADJD', 'VAFIN', 'PDS', 'VVINF'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 10), 'span': (0, 1), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX
				(KOORD und)
				(VF
					(PX
						[01;31m(LV[00m
							(PX
								(APPR mit)
								(NX der zugverbindung))[01;31m)[00m
						(VF wie lange)))
				(LK wird)
				(MF das)
				(VC dauern)))))
Step:Unary
{'subtrees': ['PX'], 'family': ['LV', 'VF'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NN', 'PWAV', 'ADJD'), 'right siblings': ['VF'], 'parent': 'PX', 'auto preterminal span': (2, 7), 'span': (2, 5), 'left siblings': [], 'label': 'LV', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja und mit der zugverbindung wie lange wird das dauern)

Sentence 588:
7 Initial errors
0 on fringe, 6 iterations
1 Error:Unary
1 Error:Modifier Attachment
1 Error:Modifier Attachment
2 Error:PP Attachment
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM
				(PTKANT ja))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(NX[00m
				(KON und)
				(NX der name)
				(ADVX noch)
				(ADVX mal)[01;31m)[00m
			[01;31m(NX[00m
				(BS o)
				(BS b)
				(BS o)
				(BS r)
				(BS s)
				(BS k)
				(BS i)[01;31m)[00m
			[01;31m(NX[00m
				(NX matthias)
				[01;33m(SU (SIMPX[00m (PX mit t t h)[01;31m)[00m[01;31m)[00m
		(SU brauchen sie sonst noch etwas))) [01;33mSIMPX) SU)[00m
Step:Unary
{'subtrees': ['DM'], 'family': ['SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'KON', 'ART', 'NN', 'ADV', 'ADV', 'BS', 'BS', 'BS', 'BS', 'BS', 'BS', 'BS', 'NE', 'APPR', 'BS', 'BS', 'BS', 'VVFIN', 'PPER', 'ADV', 'ADV', 'PIS'), 'right siblings': ['SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 23), 'span': (0, 1), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		[01;31m(SU[00m
			[01;31m(NX[00m
				(KON und)
				(NX der name)
				(ADVX noch)
				(ADVX mal)[01;31m)[00m
			[01;31m(NX[00m
				(BS o)
				(BS b)
				(BS o)
				(BS r)
				(BS s)
				(BS k)
				(BS i)[01;31m)[00m
			[01;31m(NX[00m
				(NX matthias)
				[01;33m(SU (SIMPX[00m (PX mit t t h)[01;31m)[00m[01;31m)[00m
		(SU brauchen sie sonst noch etwas))) [01;33mSIMPX) SU)[00m
Step:Modifier Attachment
{'subtrees': ['KON', 'NX', 'ADVX', 'ADVX'], 'family': ['NX', 'NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'ART', 'NN', 'ADV', 'ADV', 'BS', 'BS', 'BS', 'BS', 'BS', 'BS', 'BS', 'NE', 'APPR', 'BS', 'BS', 'BS'), 'right siblings': ['NX', 'NX'], 'parent': 'SU', 'auto preterminal span': (1, 18), 'span': (1, 6), 'left siblings': [], 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		[01;31m(SU[00m
			(KON und)
			(NX der name)
			(ADVX noch)
			(ADVX mal)
			[01;31m(NX[00m
				(BS o)
				(BS b)
				(BS o)
				(BS r)
				(BS s)
				(BS k)
				(BS i)[01;31m)[00m
			[01;31m(NX[00m
				(NX matthias)
				[01;33m(SU (SIMPX[00m (PX mit t t h)[01;31m)[00m[01;31m)[00m
		(SU brauchen sie sonst noch etwas))) [01;33mSIMPX) SU)[00m
Step:Modifier Attachment
{'subtrees': ['KON', 'NX', 'ADVX', 'ADVX', 'NX', 'NX'], 'family': ['DM', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'KON', 'ART', 'NN', 'ADV', 'ADV', 'BS', 'BS', 'BS', 'BS', 'BS', 'BS', 'BS', 'NE', 'APPR', 'BS', 'BS', 'BS', 'VVFIN', 'PPER', 'ADV', 'ADV', 'PIS'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 23), 'span': (1, 18), 'left siblings': ['DM'], 'label': 'SU', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(KON und)
		(NX der name)
		(ADVX noch)
		(ADVX mal)
		[01;31m(NX[00m
			(BS o)
			(BS b)
			(BS o)
			(BS r)
			(BS s)
			(BS k)
			(BS i)[01;31m)[00m
		[01;31m(NX[00m
			(NX matthias)
			[01;33m(SU (SIMPX[00m (PX mit t t h)[01;31m)[00m
		(SU brauchen sie sonst noch etwas))) [01;33mSIMPX) SU)[00m
Step:PP Attachment
{'new_parent': 'TURN', 'new_family': ['DM', 'KON', 'NX', 'ADVX', 'ADVX', 'NX', 'NX', 'PX', 'SU'], 'mover info': [('PX', (14, 18))], 'old_family': ['NX', 'PX'], 'start left siblings': ['NX'], 'auto preterminals': ('PTKANT', 'KON', 'ART', 'NN', 'ADV', 'ADV', 'BS', 'BS', 'BS', 'BS', 'BS', 'BS', 'BS', 'NE', 'APPR', 'BS', 'BS', 'BS', 'VVFIN', 'PPER', 'ADV', 'ADV', 'PIS'), 'start right siblings': [], 'end left siblings': ['DM', 'KON', 'NX', 'ADVX', 'ADVX', 'NX', 'NX'], 'auto preterminal span': (0, 23), 'adding node already present': False, 'movers': ['PX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': ['SU'], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'SU'}
(TOP
	(TURN
		(DM ja)
		(KON und)
		(NX der name)
		(ADVX noch)
		(ADVX mal)
		[01;31m(NX[00m
			(BS o)
			(BS b)
			(BS o)
			(BS r)
			(BS s)
			(BS k)
			(BS i)[01;31m)[00m
		(NX matthias)
		[01;36m(SU[00m
			(SIMPX
				(PX mit t t h)
				(SU brauchen sie sonst noch etwas))[01;36m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['DM', 'KON', 'NX', 'ADVX', 'ADVX', 'NX', 'NX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'BS', 'BS', 'BS', 'VVFIN', 'PPER', 'ADV', 'ADV', 'PIS'), 'right siblings': [], 'left siblings': [(DM (PTKANT ja)), (KON und), (NX (ART der) (NN name)), (ADVX (ADV noch)), (ADVX (ADV mal)), (NX (BS o) (BS b) (BS o) (BS r) (BS s) (BS k) (BS i)), (NX (NE matthias))], 'auto preterminal span': (14, 23), 'span': (14, 23), 'parent': 'TURN', 'label': 'SU', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(KON und)
		(NX der name)
		(ADVX noch)
		(ADVX mal)
		[01;31m(NX[00m
			(BS o)
			(BS b)
			(BS o)
			(BS r)
			(BS s)
			(BS k)
			(BS i)[01;31m)[00m
		(NX matthias)
		(SU mit t t h brauchen sie sonst noch etwas)))
Step:UNSET remove
{'subtrees': ['BS', 'BS', 'BS', 'BS', 'BS', 'BS', 'BS'], 'family': ['DM', 'KON', 'NX', 'ADVX', 'ADVX', 'NX', 'NX', 'SU'], 'over_word': False, 'over words': True, 'auto preterminals': ('PTKANT', 'KON', 'ART', 'NN', 'ADV', 'ADV', 'BS', 'BS', 'BS', 'BS', 'BS', 'BS', 'BS', 'NE', 'APPR', 'BS', 'BS', 'BS', 'VVFIN', 'PPER', 'ADV', 'ADV', 'PIS'), 'right siblings': ['NX', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 23), 'span': (6, 13), 'left siblings': ['DM', 'KON', 'NX', 'ADVX', 'ADVX'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ja und der name noch mal o b o r s k i matthias mit t t h brauchen sie sonst noch etwas)

Sentence 589:
7 Initial errors
0 on fringe, 5 iterations
2 Error:NP Attachment
2 Error:NP Attachment
1 Error:Unary
1 Error:Single Word Phrase
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;31m(NX[00m
				[01;36m(SU[00m
					(NX
						[01;31m(ADJX[00m
							(FM first)[01;31m)[00m
						[01;36m(NX[00m
							(FM class)[01;36m)[00m)[01;36m)[00m
				[01;36m(NX[00m
					(NN reiseburo)[01;36m)[00m[01;31m)[00m
			[01;36m(SU[00m
				(DM schmidt)
				(DM guten tag)[01;36m)[00m[01;31m)[00m
		(SU womit kann ich ihnen helfen)))
Step:NP Attachment
{'new_parent': 'TURN', 'new_family': ['NX', 'SU', 'SU'], 'mover info': [('NX', (0, 3))], 'old_family': ['NX', 'DM', 'DM'], 'start left siblings': [], 'auto preterminals': ('FM', 'FM', 'NN', 'NE', 'ADJA', 'NN', 'PWAV', 'VMFIN', 'PPER', 'PPER', 'VVINF'), 'start right siblings': ['DM', 'DM'], 'end left siblings': [], 'auto preterminal span': (0, 11), 'movers': ['NX'], 'old_parent': 'SU', 'end right siblings': ['SU', 'SU'], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;31m(NX[00m
			[01;36m(SU[00m
				(NX
					[01;31m(ADJX[00m
						(FM first)[01;31m)[00m
					[01;36m(NX[00m
						(FM class)[01;36m)[00m)[01;36m)[00m
			[01;36m(NX[00m
				(NN reiseburo)[01;36m)[00m[01;31m)[00m
		(SU schmidt guten tag)
		(SU womit kann ich ihnen helfen)))
Step:NP Attachment
{'new_parent': 'TURN', 'new_family': ['NX', 'NX', 'SU', 'SU'], 'mover info': [('NX', (0, 2))], 'old_family': ['NX', 'NN'], 'start left siblings': [], 'auto preterminals': ('FM', 'FM', 'NN', 'NE', 'ADJA', 'NN', 'PWAV', 'VMFIN', 'PPER', 'PPER', 'VVINF'), 'start right siblings': ['NN'], 'end left siblings': [], 'auto preterminal span': (0, 11), 'movers': ['NX'], 'old_parent': 'NX', 'end right siblings': ['NX', 'SU', 'SU'], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;36m(SU[00m
			(NX
				[01;31m(ADJX[00m
					(FM first)[01;31m)[00m
				[01;36m(NX[00m
					(FM class)[01;36m)[00m)[01;36m)[00m
		(NX reiseburo)
		(SU schmidt guten tag)
		(SU womit kann ich ihnen helfen)))
Step:Unary
{'subtrees': ['NX'], 'family': ['SU', 'NX', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('FM', 'FM'), 'right siblings': [(NX (NN reiseburo)), (SU (DM (NX (NE schmidt))) (DM (NX (ADJX (ADJA guten)) (NN tag)))), (SU (SIMPX (VF (PX (PWAV womit))) (LK (VXFIN (VMFIN kann))) (MF (NX (PPER ich)) (NX (PPER ihnen))) (VC (VXINF (VVINF helfen)))))], 'left siblings': [], 'auto preterminal span': (0, 2), 'span': (0, 2), 'parent': 'TURN', 'label': 'SU', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU
			(NX
				[01;31m(ADJX[00m
					(FM first)[01;31m)[00m
				[01;36m(NX[00m
					(FM class)[01;36m)[00m))
		(NX reiseburo)
		(SU schmidt guten tag)
		(SU womit kann ich ihnen helfen)))
Step:Single Word Phrase
{'subtrees': ['FM'], 'family': ['ADJX', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('FM',), 'right siblings': [], 'left siblings': [(ADJX (FM first))], 'auto preterminal span': (1, 2), 'span': (1, 2), 'parent': 'NX', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SU
			(NX
				[01;31m(ADJX[00m
					(FM first)[01;31m)[00m
				(NX class)))
		(NX reiseburo)
		(SU schmidt guten tag)
		(SU womit kann ich ihnen helfen)))
Step:Single Word Phrase
{'subtrees': ['FM'], 'family': ['ADJX', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('FM', 'FM'), 'right siblings': ['NX'], 'parent': 'NX', 'auto preterminal span': (0, 2), 'span': (0, 1), 'left siblings': [], 'label': 'ADJX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP first class reiseburo schmidt guten tag womit kann ich ihnen helfen)

Sentence 590:
30 Initial errors
0 on fringe, 18 iterations
4 Error:UNSET move
4 Error:Co-ordination
2 Error:Single Word Phrase
2 Error:Different label
2 Error:Different label
2 Error:PP Attachment
2 Error:Co-ordination
2 Error:Modifier Attachment
1 Error:Clause Attachment
1 Error:Modifier Attachment
1 Error:UNSET add
1 Error:PP Attachment
1 Error:Modifier Attachment
1 Error:Clause Attachment
1 Error:Unary
1 Error:PP Attachment
1 Error:Single Word Phrase
1 Error:Clause Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			(SIMPX [01;33m(SIMPX[00m
				(VF da)
				(LK ware)
				[01;31m(MF[00m
					[01;36m(MF[00m
						[01;36m(MF[00m
							(ADVX noch)
							(NX die frage)[01;36m)[00m
						[01;36m(ADJX[00m [01;31m(ADVX[00m
							(ADV naturlich)[01;31m)[00m[01;36m)[00m[01;36m)[00m
					(PX nach dem hotel)[01;31m)[00m)
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(C ob)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX sie)
					(NX was)[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				[01;31m(C[00m
					[01;31m(NX[00m
						(NX was)
						(PX fur einen hotelwunsch)[01;31m)[00m[01;31m)[00m [01;33mMF) SIMPX) SIMPX)[00m
				[01;36m(VF[00m [01;31m(MF[00m [01;33m(SIMPX[00m
					(NX
						(PPER sie))[01;31m)[00m[01;36m)[00m
				[01;36m(LK[00m [01;31m(VC[00m
					(VXFIN
						(VAFIN haben))[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m [01;33m(SIMPX[00m
			[01;31m(SIMPX[00m
				(C ob)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX sie)
					[01;31m(ADJX[00m
						[01;36m(ADJX[00m
							(ADJX zentral)
							[01;36m(PX[00m
								(KON oder)
								(PX am flughafen) [01;33mMF) SIMPX) SIMPX)[00m[01;36m)[00m[01;36m)[00m
						(KON oder)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			(DM ja)
			[01;36m(SIMPX[00m
				(SIMPX wenn sie mit der bahn kommen)
				[01;31m(PX[00m
					(ADVX dann)
					[01;36m(ADVX[00m
						(ADVX naturlich)
						(ADVX nicht)[01;36m)[00m
					(PX am flughafen)[01;31m)[00m[01;36m)[00m[01;31m)[00m))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['NX', 'NX', 'C'], 'mover info': [('C', (13, 17))], 'old_family': ['C', 'MF', 'VC'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'ADV', 'VAFIN', 'ADV', 'ART', 'NN', 'ADV', 'APPR', 'ART', 'NN', 'KOUS', 'PPER', 'PIS', 'PWS', 'APPR', 'ART', 'NN', 'PPER', 'VAFIN'), 'start right siblings': ['MF', 'VC'], 'end left siblings': ['NX', 'NX'], 'auto preterminal span': (0, 19), 'movers': ['C'], 'old_parent': 'SIMPX', 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			[01;36m(SIMPX[00m
				(SIMPX
					(VF da)
					(LK ware)
					[01;31m(MF[00m
						[01;36m(MF[00m
							[01;36m(MF[00m
								(ADVX noch)
								(NX die frage)[01;36m)[00m
							[01;36m(ADJX[00m [01;31m(ADVX[00m
								(ADV naturlich)[01;31m)[00m[01;36m)[00m[01;36m)[00m
						(PX nach dem hotel)[01;31m)[00m)
				(SIMPX
					(C ob)
					(MF
						(NX sie)
						(NX was)
						[01;31m(C[00m
							[01;31m(NX[00m
								(NX was)
								(PX fur einen hotelwunsch)[01;31m)[00m[01;31m)[00m))[01;36m)[00m
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				[01;36m(VF[00m [01;31m(MF[00m
					(NX
						(PPER sie))[01;31m)[00m[01;36m)[00m
				[01;36m(LK[00m [01;31m(VC[00m
					(VXFIN
						(VAFIN haben))[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m [01;33m(SIMPX[00m
			[01;31m(SIMPX[00m
				(C ob)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX sie)
					[01;31m(ADJX[00m
						[01;36m(ADJX[00m
							(ADJX zentral)
							[01;36m(PX[00m
								(KON oder)
								(PX am flughafen) [01;33mMF) SIMPX) SIMPX)[00m[01;36m)[00m[01;36m)[00m
						(KON oder)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			(DM ja)
			[01;36m(SIMPX[00m
				(SIMPX wenn sie mit der bahn kommen)
				[01;31m(PX[00m
					(ADVX dann)
					[01;36m(ADVX[00m
						(ADVX naturlich)
						(ADVX nicht)[01;36m)[00m
					(PX am flughafen)[01;31m)[00m[01;36m)[00m[01;31m)[00m))
Step:Co-ordination
{'new_parent': 'SIMPX', 'new_family': ['C', 'MF', 'KON'], 'mover info': [('KON', (25, 26))], 'old_family': ['ADJX', 'KON', 'PX', 'KON'], 'start left siblings': ['ADJX', 'KON', 'PX'], 'auto preterminals': ('KOUS', 'PPER', 'ADJD', 'KON', 'APPRART', 'NN', 'KON'), 'start right siblings': [], 'end left siblings': ['C', 'MF'], 'auto preterminal span': (19, 26), 'movers': ['KON'], 'old_parent': 'ADJX', 'POS confusion': ('KON', 'KON'), 'end right siblings': [], 'classified_type': 'Co-ordination', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			[01;36m(SIMPX[00m
				(SIMPX
					(VF da)
					(LK ware)
					[01;31m(MF[00m
						[01;36m(MF[00m
							[01;36m(MF[00m
								(ADVX noch)
								(NX die frage)[01;36m)[00m
							[01;36m(ADJX[00m [01;31m(ADVX[00m
								(ADV naturlich)[01;31m)[00m[01;36m)[00m[01;36m)[00m
						(PX nach dem hotel)[01;31m)[00m)
				(SIMPX
					(C ob)
					(MF
						(NX sie)
						(NX was)
						[01;31m(C[00m
							[01;31m(NX[00m
								(NX was)
								(PX fur einen hotelwunsch)[01;31m)[00m[01;31m)[00m))[01;36m)[00m
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				[01;36m(VF[00m [01;31m(MF[00m
					(NX
						(PPER sie))[01;31m)[00m[01;36m)[00m
				[01;36m(LK[00m [01;31m(VC[00m
					(VXFIN
						(VAFIN haben))[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;36m(SIMPX[00m
					(C ob)
					(MF
						(NX sie)
						(ADJX
							(ADJX zentral)
							[01;36m(PX[00m
								(KON oder)
								(PX am flughafen)[01;36m)[00m)) [01;33mSIMPX)[00m[01;36m)[00m
				(KON oder)[01;31m)[00m
			(DM ja)
			[01;36m(SIMPX[00m
				(SIMPX wenn sie mit der bahn kommen)
				[01;31m(PX[00m
					(ADVX dann)
					[01;36m(ADVX[00m
						(ADVX naturlich)
						(ADVX nicht)[01;36m)[00m
					(PX am flughafen)[01;31m)[00m[01;36m)[00m[01;31m)[00m))
Step:Single Word Phrase
{'family': ['ADVX', 'NX', 'ADJX', 'PX'], 'auto preterminal span': (6, 7), 'span': (6, 7), 'subtrees': ['ADV'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'ADJX')}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			[01;36m(SIMPX[00m
				(SIMPX
					(VF da)
					(LK ware)
					[01;31m(MF[00m
						[01;36m(MF[00m
							[01;36m(MF[00m
								(ADVX noch)
								(NX die frage)[01;36m)[00m
							(ADJX naturlich)[01;36m)[00m
						(PX nach dem hotel)[01;31m)[00m)
				(SIMPX
					(C ob)
					(MF
						(NX sie)
						(NX was)
						[01;31m(C[00m
							[01;31m(NX[00m
								(NX was)
								(PX fur einen hotelwunsch)[01;31m)[00m[01;31m)[00m))[01;36m)[00m
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				[01;36m(VF[00m [01;31m(MF[00m
					(NX
						(PPER sie))[01;31m)[00m[01;36m)[00m
				[01;36m(LK[00m [01;31m(VC[00m
					(VXFIN
						(VAFIN haben))[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;36m(SIMPX[00m
					(C ob)
					(MF
						(NX sie)
						(ADJX
							(ADJX zentral)
							[01;36m(PX[00m
								(KON oder)
								(PX am flughafen)[01;36m)[00m)) [01;33mSIMPX)[00m[01;36m)[00m
				(KON oder)[01;31m)[00m
			(DM ja)
			[01;36m(SIMPX[00m
				(SIMPX wenn sie mit der bahn kommen)
				[01;31m(PX[00m
					(ADVX dann)
					[01;36m(ADVX[00m
						(ADVX naturlich)
						(ADVX nicht)[01;36m)[00m
					(PX am flughafen)[01;31m)[00m[01;36m)[00m[01;31m)[00m))
Step:Different label
{'family': ['VF', 'VC'], 'auto preterminal span': (17, 18), 'span': (17, 18), 'subtrees': ['NX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('PPER',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('MF', 'VF')}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			[01;36m(SIMPX[00m
				(SIMPX
					(VF da)
					(LK ware)
					[01;31m(MF[00m
						[01;36m(MF[00m
							[01;36m(MF[00m
								(ADVX noch)
								(NX die frage)[01;36m)[00m
							(ADJX naturlich)[01;36m)[00m
						(PX nach dem hotel)[01;31m)[00m)
				(SIMPX
					(C ob)
					(MF
						(NX sie)
						(NX was)
						[01;31m(C[00m
							[01;31m(NX[00m
								(NX was)
								(PX fur einen hotelwunsch)[01;31m)[00m[01;31m)[00m))[01;36m)[00m
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(VF sie)
				[01;36m(LK[00m [01;31m(VC[00m
					(VXFIN
						(VAFIN haben))[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;36m(SIMPX[00m
					(C ob)
					(MF
						(NX sie)
						(ADJX
							(ADJX zentral)
							[01;36m(PX[00m
								(KON oder)
								(PX am flughafen)[01;36m)[00m)) [01;33mSIMPX)[00m[01;36m)[00m
				(KON oder)[01;31m)[00m
			(DM ja)
			[01;36m(SIMPX[00m
				(SIMPX wenn sie mit der bahn kommen)
				[01;31m(PX[00m
					(ADVX dann)
					[01;36m(ADVX[00m
						(ADVX naturlich)
						(ADVX nicht)[01;36m)[00m
					(PX am flughafen)[01;31m)[00m[01;36m)[00m[01;31m)[00m))
Step:Different label
{'family': ['VF', 'LK'], 'auto preterminal span': (18, 19), 'span': (18, 19), 'subtrees': ['VXFIN'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('VAFIN',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('VC', 'LK')}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			[01;36m(SIMPX[00m
				(SIMPX
					(VF da)
					(LK ware)
					[01;31m(MF[00m
						[01;36m(MF[00m
							[01;36m(MF[00m
								(ADVX noch)
								(NX die frage)[01;36m)[00m
							(ADJX naturlich)[01;36m)[00m
						(PX nach dem hotel)[01;31m)[00m)
				(SIMPX
					(C ob)
					(MF
						(NX sie)
						(NX was)
						[01;31m(C[00m
							[01;31m(NX[00m
								(NX was)
								(PX fur einen hotelwunsch)[01;31m)[00m[01;31m)[00m))[01;36m)[00m
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(VF sie)
				(LK haben)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;36m(SIMPX[00m
					(C ob)
					(MF
						(NX sie)
						(ADJX
							(ADJX zentral)
							[01;36m(PX[00m
								(KON oder)
								(PX am flughafen)[01;36m)[00m)) [01;33mSIMPX)[00m[01;36m)[00m
				(KON oder)[01;31m)[00m
			(DM ja)
			[01;36m(SIMPX[00m
				(SIMPX wenn sie mit der bahn kommen)
				[01;31m(PX[00m
					(ADVX dann)
					[01;36m(ADVX[00m
						(ADVX naturlich)
						(ADVX nicht)[01;36m)[00m
					(PX am flughafen)[01;31m)[00m[01;36m)[00m[01;31m)[00m))
Step:PP Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'ADJX', 'PX'], 'mover info': [('ADJX', (6, 7)), ('PX', (7, 10))], 'old_family': ['ADVX', 'NX', 'ADJX', 'PX'], 'start left siblings': ['ADVX', 'NX'], 'auto preterminals': ('ADV', 'VAFIN', 'ADV', 'ART', 'NN', 'ADV', 'APPR', 'ART', 'NN'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (1, 10), 'movers': ['ADJX', 'PX'], 'old_parent': 'MF', 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			[01;36m(SIMPX[00m
				(SIMPX
					(VF da)
					(LK ware)
					[01;36m(MF[00m
						(MF noch die frage)
						(ADJX naturlich)[01;36m)[00m
					(PX nach dem hotel))
				(SIMPX
					(C ob)
					(MF
						(NX sie)
						(NX was)
						[01;31m(C[00m
							[01;31m(NX[00m
								(NX was)
								(PX fur einen hotelwunsch)[01;31m)[00m[01;31m)[00m))[01;36m)[00m
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(VF sie)
				(LK haben)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;36m(SIMPX[00m
					(C ob)
					(MF
						(NX sie)
						(ADJX
							(ADJX zentral)
							[01;36m(PX[00m
								(KON oder)
								(PX am flughafen)[01;36m)[00m)) [01;33mSIMPX)[00m[01;36m)[00m
				(KON oder)[01;31m)[00m
			(DM ja)
			[01;36m(SIMPX[00m
				(SIMPX wenn sie mit der bahn kommen)
				[01;31m(PX[00m
					(ADVX dann)
					[01;36m(ADVX[00m
						(ADVX naturlich)
						(ADVX nicht)[01;36m)[00m
					(PX am flughafen)[01;31m)[00m[01;36m)[00m[01;31m)[00m))
Step:Co-ordination
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'C', 'MF'], 'mover info': [('C', (19, 20)), ('MF', (20, 25))], 'old_family': ['C', 'MF', 'KON'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'ADV', 'VAFIN', 'ADV', 'ART', 'NN', 'ADV', 'APPR', 'ART', 'NN', 'KOUS', 'PPER', 'PIS', 'PWS', 'APPR', 'ART', 'NN', 'PPER', 'VAFIN', 'KOUS', 'PPER', 'ADJD', 'KON', 'APPRART', 'NN', 'KON', 'PTKANT', 'KOUS', 'PPER', 'APPR', 'ART', 'NN', 'VVFIN', 'ADV', 'ADV', 'PTKNEG', 'APPRART', 'NN'), 'start right siblings': ['KON'], 'end left siblings': ['VF', 'LK'], 'auto preterminal span': (0, 38), 'movers': ['C', 'MF'], 'old_parent': 'SIMPX', 'end right siblings': [], 'classified_type': 'Co-ordination', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			[01;36m(SIMPX[00m
				(SIMPX
					(VF da)
					(LK ware)
					[01;36m(MF[00m
						(MF noch die frage)
						(ADJX naturlich)[01;36m)[00m
					(PX nach dem hotel))
				(SIMPX
					(C ob)
					(MF
						(NX sie)
						(NX was)
						[01;31m(C[00m
							[01;31m(NX[00m
								(NX was)
								(PX fur einen hotelwunsch)[01;31m)[00m[01;31m)[00m))[01;36m)[00m
			(SIMPX
				(VF sie)
				(LK haben)
				[01;36m(SIMPX[00m
					(C ob)
					(MF
						(NX sie)
						(ADJX
							(ADJX zentral)
							[01;36m(PX[00m
								(KON oder)
								(PX am flughafen)[01;36m)[00m))[01;36m)[00m)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KON oder)[01;31m)[00m
			(DM ja)
			[01;36m(SIMPX[00m
				(SIMPX wenn sie mit der bahn kommen)
				[01;31m(PX[00m
					(ADVX dann)
					[01;36m(ADVX[00m
						(ADVX naturlich)
						(ADVX nicht)[01;36m)[00m
					(PX am flughafen)[01;31m)[00m[01;36m)[00m[01;31m)[00m))
Step:Modifier Attachment
{'new_parent': 'SU', 'new_family': ['SIMPX', 'DM', 'SIMPX', 'ADVX', 'ADVX', 'ADVX', 'PX'], 'mover info': [('ADVX', (33, 34)), ('ADVX', (34, 35)), ('ADVX', (35, 36))], 'old_family': ['ADVX', 'ADVX', 'ADVX', 'PX'], 'start left siblings': [], 'auto preterminals': ('KON', 'PTKANT', 'KOUS', 'PPER', 'APPR', 'ART', 'NN', 'VVFIN', 'ADV', 'ADV', 'PTKNEG', 'APPRART', 'NN'), 'start right siblings': ['PX'], 'end left siblings': ['SIMPX', 'DM', 'SIMPX'], 'auto preterminal span': (25, 38), 'adding node already present': False, 'movers': ['ADVX', 'ADVX', 'ADVX'], 'old_parent': 'PX', 'added and moved': True, 'end right siblings': ['PX'], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'ADVX'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			[01;36m(SIMPX[00m
				(SIMPX
					(VF da)
					(LK ware)
					[01;36m(MF[00m
						(MF noch die frage)
						(ADJX naturlich)[01;36m)[00m
					(PX nach dem hotel))
				(SIMPX
					(C ob)
					(MF
						(NX sie)
						(NX was)
						[01;31m(C[00m
							[01;31m(NX[00m
								(NX was)
								(PX fur einen hotelwunsch)[01;31m)[00m[01;31m)[00m))[01;36m)[00m
			(SIMPX
				(VF sie)
				(LK haben)
				[01;36m(SIMPX[00m
					(C ob)
					(MF
						(NX sie)
						(ADJX
							(ADJX zentral)
							[01;36m(PX[00m
								(KON oder)
								(PX am flughafen)[01;36m)[00m))[01;36m)[00m)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KON oder)[01;31m)[00m
			(DM ja)
			(SIMPX
				(SIMPX wenn sie mit der bahn kommen)
				(ADVX dann)
				[01;36m(ADVX[00m
					(ADVX naturlich)
					(ADVX nicht)[01;36m)[00m
				(PX am flughafen))[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['DM', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'ADV', 'ART', 'NN', 'ADV', 'APPR', 'ART', 'NN', 'KOUS', 'PPER', 'PIS', 'PWS', 'APPR', 'ART', 'NN'), 'right siblings': [(SIMPX (VF (NX (PPER sie))) (LK (VXFIN (VAFIN haben))) (C (KOUS ob)) (MF (NX (PPER sie)) (ADJX (ADJX (ADJD zentral)) (KON oder) (PX (APPRART am) (NX (NN flughafen))))))], 'left siblings': [(DM (PTKANT ja))], 'auto preterminal span': (1, 17), 'span': (1, 17), 'parent': 'SU', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			(SIMPX
				(SIMPX
					(VF da)
					(LK ware)
					[01;36m(MF[00m
						(MF noch die frage)
						(ADJX naturlich)[01;36m)[00m
					(PX nach dem hotel))
				(SIMPX
					(C ob)
					(MF
						(NX sie)
						(NX was)
						[01;31m(C[00m
							[01;31m(NX[00m
								(NX was)
								(PX fur einen hotelwunsch)[01;31m)[00m[01;31m)[00m)))
			(SIMPX
				(VF sie)
				(LK haben)
				[01;36m(SIMPX[00m
					(C ob)
					(MF
						(NX sie)
						(ADJX
							(ADJX zentral)
							[01;36m(PX[00m
								(KON oder)
								(PX am flughafen)[01;36m)[00m))[01;36m)[00m)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KON oder)[01;31m)[00m
			(DM ja)
			(SIMPX
				(SIMPX wenn sie mit der bahn kommen)
				(ADVX dann)
				[01;36m(ADVX[00m
					(ADVX naturlich)
					(ADVX nicht)[01;36m)[00m
				(PX am flughafen))[01;31m)[00m))
Step:Modifier Attachment
{'subtrees': ['MF', 'ADJX'], 'family': ['VF', 'LK', 'MF', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ART', 'NN', 'ADV'), 'right siblings': [(PX (APPR nach) (NX (ART dem) (NN hotel)))], 'left siblings': [(VF (ADVX (ADV da))), (LK (VXFIN (VAFIN ware)))], 'auto preterminal span': (3, 7), 'span': (3, 7), 'parent': 'SIMPX', 'label': 'MF', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			(SIMPX
				(SIMPX da ware noch die frage naturlich nach dem hotel)
				(SIMPX
					(C ob)
					(MF
						(NX sie)
						(NX was)
						[01;31m(C[00m
							[01;31m(NX[00m
								(NX was)
								(PX fur einen hotelwunsch)[01;31m)[00m[01;31m)[00m)))
			(SIMPX
				(VF sie)
				(LK haben)
				[01;36m(SIMPX[00m
					(C ob)
					(MF
						(NX sie)
						(ADJX
							(ADJX zentral)
							[01;36m(PX[00m
								(KON oder)
								(PX am flughafen)[01;36m)[00m))[01;36m)[00m)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KON oder)[01;31m)[00m
			(DM ja)
			(SIMPX
				(SIMPX wenn sie mit der bahn kommen)
				(ADVX dann)
				[01;36m(ADVX[00m
					(ADVX naturlich)
					(ADVX nicht)[01;36m)[00m
				(PX am flughafen))[01;31m)[00m))
Step:UNSET add
{'subtrees': ['C', 'MF'], 'family': ['VF', 'LK', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ADJD', 'KON', 'APPRART', 'NN'), 'right siblings': [], 'left siblings': [(VF (NX (PPER sie))), (LK (VXFIN (VAFIN haben)))], 'auto preterminal span': (19, 25), 'span': (19, 25), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			(SIMPX
				(SIMPX da ware noch die frage naturlich nach dem hotel)
				(SIMPX
					(C ob)
					(MF
						(NX sie)
						(NX was)
						[01;31m(C[00m
							[01;31m(NX[00m
								(NX was)
								(PX fur einen hotelwunsch)[01;31m)[00m[01;31m)[00m)))
			(SIMPX
				(VF sie)
				(LK haben)
				(SIMPX
					(C ob)
					(MF
						(NX sie)
						(ADJX
							(ADJX zentral)
							[01;36m(PX[00m
								(KON oder)
								(PX am flughafen)[01;36m)[00m))))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KON oder)[01;31m)[00m
			(DM ja)
			(SIMPX
				(SIMPX wenn sie mit der bahn kommen)
				(ADVX dann)
				[01;36m(ADVX[00m
					(ADVX naturlich)
					(ADVX nicht)[01;36m)[00m
				(PX am flughafen))[01;31m)[00m))
Step:PP Attachment
{'subtrees': ['KON', 'PX'], 'family': ['ADJX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'APPRART', 'NN'), 'right siblings': [], 'left siblings': [(ADJX (ADJD zentral))], 'auto preterminal span': (22, 25), 'span': (22, 25), 'parent': 'ADJX', 'label': 'PX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			(SIMPX
				(SIMPX da ware noch die frage naturlich nach dem hotel)
				(SIMPX
					(C ob)
					(MF
						(NX sie)
						(NX was)
						[01;31m(C[00m
							[01;31m(NX[00m
								(NX was)
								(PX fur einen hotelwunsch)[01;31m)[00m[01;31m)[00m)))
			(SIMPX sie haben ob sie zentral oder am flughafen)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KON oder)[01;31m)[00m
			(DM ja)
			(SIMPX
				(SIMPX wenn sie mit der bahn kommen)
				(ADVX dann)
				[01;36m(ADVX[00m
					(ADVX naturlich)
					(ADVX nicht)[01;36m)[00m
				(PX am flughafen))[01;31m)[00m))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'ADVX'], 'family': ['SIMPX', 'ADVX', 'ADVX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PTKNEG'), 'right siblings': [(PX (APPRART am) (NX (NN flughafen)))], 'left siblings': [(SIMPX (C (KOUS wenn)) (MF (NX (PPER sie)) (PX (APPR mit) (NX (ART der) (NN bahn)))) (VC (VXFIN (VVFIN kommen)))), (ADVX (ADV dann))], 'auto preterminal span': (34, 36), 'span': (34, 36), 'parent': 'SIMPX', 'label': 'ADVX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			(SIMPX
				(SIMPX da ware noch die frage naturlich nach dem hotel)
				(SIMPX
					(C ob)
					(MF
						(NX sie)
						(NX was)
						[01;31m(C[00m
							[01;31m(NX[00m
								(NX was)
								(PX fur einen hotelwunsch)[01;31m)[00m[01;31m)[00m)))
			(SIMPX sie haben ob sie zentral oder am flughafen)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KON oder)[01;31m)[00m
			(DM ja)
			(SIMPX wenn sie mit der bahn kommen dann naturlich nicht am flughafen)[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['DM', 'SIMPX', 'SIMPX'], 'family': ['SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADV', 'VAFIN', 'ADV', 'ART', 'NN', 'ADV', 'APPR', 'ART', 'NN', 'KOUS', 'PPER', 'PIS', 'PWS', 'APPR', 'ART', 'NN', 'PPER', 'VAFIN', 'KOUS', 'PPER', 'ADJD', 'KON', 'APPRART', 'NN', 'KON', 'PTKANT', 'KOUS', 'PPER', 'APPR', 'ART', 'NN', 'VVFIN', 'ADV', 'ADV', 'PTKNEG', 'APPRART', 'NN'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 38), 'span': (0, 25), 'left siblings': [], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(SIMPX da ware noch die frage naturlich nach dem hotel)
			(SIMPX
				(C ob)
				(MF
					(NX sie)
					(NX was)
					[01;31m(C[00m
						[01;31m(NX[00m
							(NX was)
							(PX fur einen hotelwunsch)[01;31m)[00m[01;31m)[00m)))
		(SIMPX sie haben ob sie zentral oder am flughafen)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KON oder)[01;31m)[00m
			(DM ja)
			(SIMPX wenn sie mit der bahn kommen dann naturlich nicht am flughafen)[01;31m)[00m))
Step:Unary
{'subtrees': ['NX'], 'family': ['NX', 'NX', 'C'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'PIS', 'PWS', 'APPR', 'ART', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (11, 17), 'span': (13, 17), 'left siblings': ['NX', 'NX'], 'label': 'C', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(SIMPX da ware noch die frage naturlich nach dem hotel)
			(SIMPX
				(C ob)
				(MF
					(NX sie)
					(NX was)
					[01;31m(NX[00m
						(NX was)
						(PX fur einen hotelwunsch)[01;31m)[00m)))
		(SIMPX sie haben ob sie zentral oder am flughafen)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KON oder)[01;31m)[00m
			(DM ja)
			(SIMPX wenn sie mit der bahn kommen dann naturlich nicht am flughafen)[01;31m)[00m))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['NX', 'NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'PIS', 'PWS', 'APPR', 'ART', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (11, 17), 'span': (13, 17), 'left siblings': ['NX', 'NX'], 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX da ware noch die frage naturlich nach dem hotel ob sie was was fur einen hotelwunsch)
		(SIMPX sie haben ob sie zentral oder am flughafen)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KON oder)[01;31m)[00m
			(DM ja)
			(SIMPX wenn sie mit der bahn kommen dann naturlich nicht am flughafen)[01;31m)[00m))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['SIMPX', 'DM', 'SIMPX'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON', 'PTKANT', 'KOUS', 'PPER', 'APPR', 'ART', 'NN', 'VVFIN', 'ADV', 'ADV', 'PTKNEG', 'APPRART', 'NN'), 'right siblings': ['DM', 'SIMPX'], 'parent': 'SU', 'auto preterminal span': (25, 38), 'span': (25, 26), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX da ware noch die frage naturlich nach dem hotel ob sie was was fur einen hotelwunsch)
		(SIMPX sie haben ob sie zentral oder am flughafen)
		[01;31m(SU[00m
			(KON oder)
			(DM ja)
			(SIMPX wenn sie mit der bahn kommen dann naturlich nicht am flughafen)[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['KON', 'DM', 'SIMPX'], 'family': ['DM', 'SIMPX', 'SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADV', 'VAFIN', 'ADV', 'ART', 'NN', 'ADV', 'APPR', 'ART', 'NN', 'KOUS', 'PPER', 'PIS', 'PWS', 'APPR', 'ART', 'NN', 'PPER', 'VAFIN', 'KOUS', 'PPER', 'ADJD', 'KON', 'APPRART', 'NN', 'KON', 'PTKANT', 'KOUS', 'PPER', 'APPR', 'ART', 'NN', 'VVFIN', 'ADV', 'ADV', 'PTKNEG', 'APPRART', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 38), 'span': (25, 38), 'left siblings': ['DM', 'SIMPX', 'SIMPX'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP ja da ware noch die frage naturlich nach dem hotel ob sie was was fur einen hotelwunsch sie haben ob sie zentral oder am flughafen oder ja wenn sie mit der bahn kommen dann naturlich nicht am flughafen)

Sentence 591:
12 Initial errors
0 on fringe, 8 iterations
3 Error:NP Attachment
2 Error:Modifier Attachment
2 Error:NP Attachment
1 Error:Unary
1 Error:PP Attachment
1 Error:PP Attachment
1 Error:UNSET remove
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU ja sicher)
		[01;31m(SU[00m
			(SIMPX
				(VF sie)
				(LK sagten)
				(MF
					(ADVX gerade)
					[01;31m(NX[00m
						(ADVX nicht)
						(ADVX gerade)
						[01;36m(NX[00m
							(ART das)
							(NN billigste)[01;36m)[00m[01;31m)[00m))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX dann wurde ich vielleicht das hotel schweizerhof empfehlen was ziemlich zentral ist)
			(PX mit konferenzraum und garage)
			(SIMPX falls sie vielleicht doch mit dem wagen kommen wollen)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(KOORD und)
				(VF das)
				(LK hatte)
				(MF [01;33m(MF (MF[00m
					(ADVX halt)
					[01;31m(NX[00m [01;33m(NX[00m
						(NX eine preisklasse)
						[01;31m(PX[00m
							(APPR von)
							[01;31m(NX[00m
								(PX pro ubernachtung) [01;33mNX) MF)[00m
								[01;31m(NX[00m
									(NX einzelzimmer) [01;33mMF)[00m
									(NX zweihundert funfundvierzig bis zweihundert funfundneunzig mark)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
			(PX je nachdem)[01;31m)[00m))
Step:NP Attachment
{'new_parent': 'SIMPX', 'new_family': ['KOORD', 'VF', 'LK', 'MF', 'NX'], 'mover info': [('NX', (43, 50))], 'old_family': ['PX', 'NX'], 'start left siblings': ['PX'], 'auto preterminals': ('KON', 'PDS', 'VAFIN', 'ADV', 'ART', 'NN', 'APPR', 'APPR', 'NN', 'NN', 'CARD', 'CARD', 'APPR', 'CARD', 'CARD', 'NN'), 'start right siblings': [], 'end left siblings': ['KOORD', 'VF', 'LK', 'MF'], 'auto preterminal span': (34, 50), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'MF'}
(TOP
	(TURN
		(SU ja sicher)
		[01;31m(SU[00m
			(SIMPX
				(VF sie)
				(LK sagten)
				(MF
					(ADVX gerade)
					[01;31m(NX[00m
						(ADVX nicht)
						(ADVX gerade)
						[01;36m(NX[00m
							(ART das)
							(NN billigste)[01;36m)[00m[01;31m)[00m))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX dann wurde ich vielleicht das hotel schweizerhof empfehlen was ziemlich zentral ist)
			(PX mit konferenzraum und garage)
			(SIMPX falls sie vielleicht doch mit dem wagen kommen wollen)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(KOORD und)
				(VF das)
				(LK hatte)
				(MF [01;33m(MF[00m
					(MF
						(ADVX halt)
						(NX
							(NX eine preisklasse)
							[01;31m(PX[00m
								(APPR von)
								[01;31m(NX[00m
									(PX
										(APPR pro)
										(NX ubernachtung))[01;31m)[00m[01;31m)[00m))
					[01;31m(NX[00m
						(NX einzelzimmer) [01;33mMF)[00m
						(NX zweihundert funfundvierzig bis zweihundert funfundneunzig mark)[01;31m)[00m))
			(PX je nachdem)[01;31m)[00m))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['ADVX', 'ADVX', 'ADVX', 'NX'], 'mover info': [('ADVX', (5, 6)), ('ADVX', (6, 7))], 'old_family': ['ADVX', 'ADVX', 'ART', 'NN'], 'start left siblings': [], 'auto preterminals': ('ADV', 'PTKNEG', 'ADV', 'ART', 'NN'), 'start right siblings': ['ART', 'NN'], 'end left siblings': ['ADVX'], 'auto preterminal span': (4, 9), 'movers': ['ADVX', 'ADVX'], 'old_parent': 'NX', 'end right siblings': ['NX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU ja sicher)
		[01;31m(SU[00m
			(SIMPX
				(VF sie)
				(LK sagten)
				(MF gerade nicht gerade das billigste))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX dann wurde ich vielleicht das hotel schweizerhof empfehlen was ziemlich zentral ist)
			(PX mit konferenzraum und garage)
			(SIMPX falls sie vielleicht doch mit dem wagen kommen wollen)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(KOORD und)
				(VF das)
				(LK hatte)
				(MF [01;33m(MF[00m
					(MF
						(ADVX halt)
						(NX
							(NX eine preisklasse)
							[01;31m(PX[00m
								(APPR von)
								[01;31m(NX[00m
									(PX
										(APPR pro)
										(NX ubernachtung))[01;31m)[00m[01;31m)[00m))
					[01;31m(NX[00m
						(NX einzelzimmer) [01;33mMF)[00m
						(NX zweihundert funfundvierzig bis zweihundert funfundneunzig mark)[01;31m)[00m))
			(PX je nachdem)[01;31m)[00m))
Step:NP Attachment
{'new_parent': 'MF', 'new_family': ['MF', 'NX', 'NX'], 'mover info': [('NX', (43, 44))], 'old_family': ['NX', 'NX'], 'start left siblings': [], 'auto preterminals': ('ADV', 'ART', 'NN', 'APPR', 'APPR', 'NN', 'NN', 'CARD', 'CARD', 'APPR', 'CARD', 'CARD', 'NN'), 'start right siblings': ['NX'], 'end left siblings': ['MF'], 'auto preterminal span': (37, 50), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'NX', 'POS confusion': ('NN', 'NN'), 'added and moved': True, 'end right siblings': ['NX'], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'MF'}
(TOP
	(TURN
		(SU ja sicher)
		[01;31m(SU[00m
			(SIMPX
				(VF sie)
				(LK sagten)
				(MF gerade nicht gerade das billigste))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX dann wurde ich vielleicht das hotel schweizerhof empfehlen was ziemlich zentral ist)
			(PX mit konferenzraum und garage)
			(SIMPX falls sie vielleicht doch mit dem wagen kommen wollen)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(KOORD und)
				(VF das)
				(LK hatte)
				(MF
					(MF
						(MF
							(ADVX halt)
							(NX
								(NX eine preisklasse)
								[01;31m(PX[00m
									(APPR von)
									[01;31m(NX[00m
										(PX
											(APPR pro)
											(NX ubernachtung))[01;31m)[00m[01;31m)[00m))
						(NX einzelzimmer))
					(NX zweihundert funfundvierzig bis zweihundert funfundneunzig mark)))
			(PX je nachdem)[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SU', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'PPER', 'VVFIN', 'ADV', 'PTKNEG', 'ADV', 'ART', 'NN', 'ADV', 'VAFIN', 'PPER', 'ADV', 'ART', 'NN', 'NE', 'VVINF', 'PRELS', 'ADV', 'ADJD', 'VAFIN', 'APPR', 'NN', 'KON', 'NN', 'KOUS', 'PPER', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'VVINF', 'VMFIN', 'KON', 'PDS', 'VAFIN', 'ADV', 'ART', 'NN', 'APPR', 'APPR', 'NN', 'NN', 'CARD', 'CARD', 'APPR', 'CARD', 'CARD', 'NN', 'ADV', 'PROP'), 'right siblings': ['SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 52), 'span': (2, 9), 'left siblings': ['SU'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU ja sicher)
		(SIMPX sie sagten gerade nicht gerade das billigste)
		[01;31m(SU[00m
			(SIMPX dann wurde ich vielleicht das hotel schweizerhof empfehlen was ziemlich zentral ist)
			(PX mit konferenzraum und garage)
			(SIMPX falls sie vielleicht doch mit dem wagen kommen wollen)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(KOORD und)
				(VF das)
				(LK hatte)
				(MF
					(MF
						(MF
							(ADVX halt)
							(NX
								(NX eine preisklasse)
								[01;31m(PX[00m
									(APPR von)
									[01;31m(NX[00m
										(PX
											(APPR pro)
											(NX ubernachtung))[01;31m)[00m[01;31m)[00m))
						(NX einzelzimmer))
					(NX zweihundert funfundvierzig bis zweihundert funfundneunzig mark)))
			(PX je nachdem)[01;31m)[00m))
Step:PP Attachment
{'subtrees': ['SIMPX', 'PX', 'SIMPX'], 'family': ['SU', 'SIMPX', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'PPER', 'VVFIN', 'ADV', 'PTKNEG', 'ADV', 'ART', 'NN', 'ADV', 'VAFIN', 'PPER', 'ADV', 'ART', 'NN', 'NE', 'VVINF', 'PRELS', 'ADV', 'ADJD', 'VAFIN', 'APPR', 'NN', 'KON', 'NN', 'KOUS', 'PPER', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'VVINF', 'VMFIN', 'KON', 'PDS', 'VAFIN', 'ADV', 'ART', 'NN', 'APPR', 'APPR', 'NN', 'NN', 'CARD', 'CARD', 'APPR', 'CARD', 'CARD', 'NN', 'ADV', 'PROP'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 52), 'span': (9, 34), 'left siblings': ['SU', 'SIMPX'], 'label': 'SU', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU ja sicher)
		(SIMPX sie sagten gerade nicht gerade das billigste)
		(SIMPX dann wurde ich vielleicht das hotel schweizerhof empfehlen was ziemlich zentral ist)
		(PX mit konferenzraum und garage)
		(SIMPX falls sie vielleicht doch mit dem wagen kommen wollen)
		[01;31m(SU[00m
			(SIMPX
				(KOORD und)
				(VF das)
				(LK hatte)
				(MF
					(MF
						(MF
							(ADVX halt)
							(NX
								(NX eine preisklasse)
								[01;31m(PX[00m
									(APPR von)
									[01;31m(NX[00m
										(PX
											(APPR pro)
											(NX ubernachtung))[01;31m)[00m[01;31m)[00m))
						(NX einzelzimmer))
					(NX zweihundert funfundvierzig bis zweihundert funfundneunzig mark)))
			(PX je nachdem)[01;31m)[00m))
Step:PP Attachment
{'subtrees': ['SIMPX', 'PX'], 'family': ['SU', 'SIMPX', 'SIMPX', 'PX', 'SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'PPER', 'VVFIN', 'ADV', 'PTKNEG', 'ADV', 'ART', 'NN', 'ADV', 'VAFIN', 'PPER', 'ADV', 'ART', 'NN', 'NE', 'VVINF', 'PRELS', 'ADV', 'ADJD', 'VAFIN', 'APPR', 'NN', 'KON', 'NN', 'KOUS', 'PPER', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'VVINF', 'VMFIN', 'KON', 'PDS', 'VAFIN', 'ADV', 'ART', 'NN', 'APPR', 'APPR', 'NN', 'NN', 'CARD', 'CARD', 'APPR', 'CARD', 'CARD', 'NN', 'ADV', 'PROP'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 52), 'span': (34, 52), 'left siblings': ['SU', 'SIMPX', 'SIMPX', 'PX', 'SIMPX'], 'label': 'SU', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU ja sicher)
		(SIMPX sie sagten gerade nicht gerade das billigste)
		(SIMPX dann wurde ich vielleicht das hotel schweizerhof empfehlen was ziemlich zentral ist)
		(PX mit konferenzraum und garage)
		(SIMPX falls sie vielleicht doch mit dem wagen kommen wollen)
		(SIMPX
			(KOORD und)
			(VF das)
			(LK hatte)
			(MF
				(MF
					(MF
						(ADVX halt)
						(NX
							(NX eine preisklasse)
							[01;31m(PX[00m
								(APPR von)
								[01;31m(NX[00m
									(PX
										(APPR pro)
										(NX ubernachtung))[01;31m)[00m[01;31m)[00m))
					(NX einzelzimmer))
				(NX zweihundert funfundvierzig bis zweihundert funfundneunzig mark)))
		(PX je nachdem)))
Step:UNSET remove
{'subtrees': ['APPR', 'NX'], 'family': ['NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'APPR', 'APPR', 'NN'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (38, 43), 'span': (40, 43), 'left siblings': ['NX'], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU ja sicher)
		(SIMPX sie sagten gerade nicht gerade das billigste)
		(SIMPX dann wurde ich vielleicht das hotel schweizerhof empfehlen was ziemlich zentral ist)
		(PX mit konferenzraum und garage)
		(SIMPX falls sie vielleicht doch mit dem wagen kommen wollen)
		(SIMPX
			(KOORD und)
			(VF das)
			(LK hatte)
			(MF
				(MF
					(MF
						(ADVX halt)
						(NX
							(NX eine preisklasse)
							(APPR von)
							[01;31m(NX[00m
								(PX
									(APPR pro)
									(NX ubernachtung))[01;31m)[00m))
					(NX einzelzimmer))
				(NX zweihundert funfundvierzig bis zweihundert funfundneunzig mark)))
		(PX je nachdem)))
Step:Unary
{'subtrees': ['PX'], 'family': ['NX', 'APPR', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'APPR', 'APPR', 'NN'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (38, 43), 'span': (41, 43), 'left siblings': ['NX', 'APPR'], 'label': 'NX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja sicher sie sagten gerade nicht gerade das billigste dann wurde ich vielleicht das hotel schweizerhof empfehlen was ziemlich zentral ist mit konferenzraum und garage falls sie vielleicht doch mit dem wagen kommen wollen und das hatte halt eine preisklasse von pro ubernachtung einzelzimmer zweihundert funfundvierzig bis zweihundert funfundneunzig mark je nachdem)

Sentence 592:
10 Initial errors
0 on fringe, 8 iterations
2 Error:UNSET move
1 Error:UNSET add
1 Error:Unary
1 Error:Clause Attachment
1 Error:UNSET add
1 Error:PP Attachment
2 Error:NP Attachment
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP [01;33m(SU[00m
	(TURN
		(SU
			(DM ja)
			[01;31m(SIMPX[00m
				[01;36m(SIMPX[00m
					(VF sie)
					(LK sagten) [01;33mSU)[00m[01;36m)[00m
				(NF sie wollten morgens ankommen)[01;31m)[00m)
		[01;31m(SU[00m
			(SIMPX
				(LK ware)
				(MF [01;33m(MF[00m
					(NX ihnen)
					[01;31m(NX[00m
						(NX die abfahrt)
						[01;31m(PX[00m
							(PX von bonn) [01;33mMF)[00m
							[01;33m(NX[00m (NX sechs uhr funfundvierzig)[01;31m)[00m[01;31m)[00m
					(ADJX zu fruh)))[01;31m)[00m [01;33mNX)[00m
		(SU
			(SIMPX
				(KOORD oder)
				[01;36m(SIMPX[00m
					[01;36m(SU[00m
						(LK ginge)
						(MF das)[01;36m)[00m[01;36m)[00m))))
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['NF', 'SIMPX'], 'mover info': [('NF', (3, 7))], 'old_family': ['VF', 'LK', 'NF'], 'start left siblings': ['VF', 'LK'], 'auto preterminals': ('PTKANT', 'PPER', 'VVFIN', 'PPER', 'VMFIN', 'ADV', 'VVINF', 'VAFIN', 'PPER', 'ART', 'NN', 'APPR', 'NE', 'CARD', 'NN', 'CARD', 'PTKA', 'ADJD', 'KON', 'VVFIN', 'PDS'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 21), 'movers': ['NF'], 'old_parent': 'SIMPX', 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP [01;33m(SU[00m
	(TURN
		(SU ja sie sagten)
		[01;31m(SU[00m
			(NF sie wollten morgens ankommen) [01;33mSU)[00m
			(SIMPX
				(LK ware)
				(MF [01;33m(MF[00m
					(NX ihnen)
					[01;31m(NX[00m
						(NX die abfahrt)
						[01;31m(PX[00m
							(PX von bonn) [01;33mMF)[00m
							[01;33m(NX[00m (NX sechs uhr funfundvierzig)[01;31m)[00m[01;31m)[00m
					(ADJX zu fruh)))[01;31m)[00m [01;33mNX)[00m
		(SU
			(SIMPX
				(KOORD oder)
				[01;36m(SIMPX[00m
					[01;36m(SU[00m
						(LK ginge)
						(MF das)[01;36m)[00m[01;36m)[00m))))
Step:UNSET add
{'subtrees': ['LK', 'MF'], 'family': ['KOORD', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PDS'), 'right siblings': [], 'left siblings': [(KOORD (KON oder))], 'auto preterminal span': (19, 21), 'span': (19, 21), 'parent': 'SIMPX', 'label': 'SU', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP [01;33m(SU[00m
	(TURN
		(SU ja sie sagten)
		[01;31m(SU[00m
			(NF sie wollten morgens ankommen) [01;33mSU)[00m
			(SIMPX
				(LK ware)
				(MF [01;33m(MF[00m
					(NX ihnen)
					[01;31m(NX[00m
						(NX die abfahrt)
						[01;31m(PX[00m
							(PX von bonn) [01;33mMF)[00m
							[01;33m(NX[00m (NX sechs uhr funfundvierzig)[01;31m)[00m[01;31m)[00m
					(ADJX zu fruh)))[01;31m)[00m [01;33mNX)[00m
		(SU
			(SIMPX
				(KOORD oder)
				[01;36m(SIMPX[00m
					(SU
						(LK ginge)
						(MF das))[01;36m)[00m))))
Step:Unary
{'subtrees': ['SU'], 'family': ['KOORD', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PDS'), 'right siblings': [], 'left siblings': [(KOORD (KON oder))], 'auto preterminal span': (19, 21), 'span': (19, 21), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'add'}
(TOP [01;33m(SU[00m
	(TURN
		(SU ja sie sagten)
		[01;31m(SU[00m
			(NF sie wollten morgens ankommen) [01;33mSU)[00m
			(SIMPX
				(LK ware)
				(MF [01;33m(MF[00m
					(NX ihnen)
					[01;31m(NX[00m
						(NX die abfahrt)
						[01;31m(PX[00m
							(PX von bonn) [01;33mMF)[00m
							[01;33m(NX[00m (NX sechs uhr funfundvierzig)[01;31m)[00m[01;31m)[00m
					(ADJX zu fruh)))[01;31m)[00m [01;33mNX)[00m
		(SU oder ginge das)))
Step:Clause Attachment
{'subtrees': ['NF', 'SIMPX'], 'family': ['SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VVFIN', 'PPER', 'VMFIN', 'ADV', 'VVINF', 'VAFIN', 'PPER', 'ART', 'NN', 'APPR', 'NE', 'CARD', 'NN', 'CARD', 'PTKA', 'ADJD', 'KON', 'VVFIN', 'PDS'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 21), 'span': (3, 18), 'left siblings': ['SU'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		[01;36m(SU[00m
			(SU ja sie sagten)
			(NF sie wollten morgens ankommen)[01;36m)[00m
		(SIMPX
			(LK ware)
			(MF [01;33m(MF[00m
				(NX ihnen)
				[01;31m(NX[00m
					(NX die abfahrt)
					[01;31m(PX[00m
						(PX von bonn) [01;33mMF)[00m
						[01;33m(NX[00m (NX sechs uhr funfundvierzig)[01;31m)[00m[01;31m)[00m
				(ADJX zu fruh))) [01;33mNX)[00m
		(SU oder ginge das)))
Step:UNSET add
{'subtrees': ['SU', 'NF'], 'family': ['SU', 'SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VVFIN', 'PPER', 'VMFIN', 'ADV', 'VVINF'), 'right siblings': [(SIMPX (LK (VXFIN (VAFIN ware))) (MF (NX (PPER ihnen)) (NX (NX (ART die) (NN abfahrt)) (PX (PX (APPR von) (NX (NE bonn))) (NX (NX (ADJX (CARD sechs)) (NN uhr)) (ADJX (CARD funfundvierzig))))) (ADJX (PTKA zu) (ADJD fruh)))), (SU (SIMPX (KOORD (KON oder)) (SIMPX (SU (LK (VXFIN (VVFIN ginge))) (MF (NX (PDS das)))))))], 'left siblings': [], 'auto preterminal span': (0, 7), 'span': (0, 7), 'parent': 'TURN', 'label': 'SU', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU ja sie sagten sie wollten morgens ankommen)
		(SIMPX
			(LK ware)
			(MF [01;33m(MF[00m
				(NX ihnen)
				[01;31m(NX[00m
					(NX die abfahrt)
					[01;31m(PX[00m
						(PX von bonn) [01;33mMF)[00m
						[01;33m(NX[00m (NX sechs uhr funfundvierzig)[01;31m)[00m[01;31m)[00m
				(ADJX zu fruh))) [01;33mNX)[00m
		(SU oder ginge das)))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['NX', 'NX', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ART', 'NN', 'APPR', 'NE', 'CARD', 'NN', 'CARD', 'PTKA', 'ADJD'), 'right siblings': ['ADJX'], 'parent': 'MF', 'auto preterminal span': (8, 18), 'span': (9, 16), 'left siblings': ['NX'], 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU ja sie sagten sie wollten morgens ankommen)
		(SIMPX
			(LK ware)
			(MF [01;33m(MF[00m
				(NX ihnen)
				(NX die abfahrt)
				[01;31m(PX[00m
					(PX von bonn) [01;33mMF)[00m
					[01;33m(NX[00m (NX sechs uhr funfundvierzig)[01;31m)[00m
				(ADJX zu fruh))) [01;33mNX)[00m
		(SU oder ginge das)))
Step:NP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'NX', 'PX', 'NX', 'ADJX'], 'mover info': [('NX', (13, 16))], 'old_family': ['PX', 'NX'], 'start left siblings': ['PX'], 'auto preterminals': ('PPER', 'ART', 'NN', 'APPR', 'NE', 'CARD', 'NN', 'CARD', 'PTKA', 'ADJD'), 'start right siblings': [], 'end left siblings': ['NX', 'NX', 'PX'], 'auto preterminal span': (8, 18), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'PX', 'added and moved': True, 'end right siblings': ['ADJX'], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(SU ja sie sagten sie wollten morgens ankommen)
		(SIMPX
			(LK ware)
			(MF
				[01;36m(MF[00m
					(NX ihnen)
					(NX die abfahrt)
					(PX von bonn)[01;36m)[00m
				(NX sechs uhr funfundvierzig zu fruh)))
		(SU oder ginge das)))
Step:PP Attachment
{'subtrees': ['NX', 'NX', 'PX'], 'family': ['MF', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ART', 'NN', 'APPR', 'NE'), 'right siblings': [(NX (NX (NX (ADJX (CARD sechs)) (NN uhr)) (ADJX (CARD funfundvierzig))) (ADJX (PTKA zu) (ADJD fruh)))], 'left siblings': [], 'auto preterminal span': (8, 13), 'span': (8, 13), 'parent': 'MF', 'label': 'MF', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP ja sie sagten sie wollten morgens ankommen ware ihnen die abfahrt von bonn sechs uhr funfundvierzig zu fruh oder ginge das)

Sentence 593:
2 Initial errors
0 on fringe, 1 iterations
2 Error:UNSET move
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SU[00m
	(TOP
		(TURN
			[01;31m(SU[00m
				(SIMPX
					(VF bischen spater)
					(LK ware)
					(MF nicht schlecht))[01;31m)[00m
			(SU halb acht)))[01;36m)[00m
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SIMPX', 'SU'], 'mover info': [('SU', (5, 7))], 'old_family': ['SU', 'SU'], 'start left siblings': ['SU'], 'auto preterminals': ('PIS', 'ADJD', 'VAFIN', 'PTKNEG', 'ADJD', 'ADJD', 'CARD'), 'start right siblings': [], 'end left siblings': ['SIMPX'], 'auto preterminal span': (0, 7), 'movers': ['SU'], 'old_parent': 'TURN', 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP bischen spater ware nicht schlecht halb acht)

Sentence 594:
3 Initial errors
0 on fringe, 3 iterations
1 Error:Clause Attachment
1 Error:Single Word Phrase
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(NX halb acht)
			(SIMPX dann waren sie um zwei minuten nach elf in hannover)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(DM[00m
				(KON und)[01;31m)[00m
			(DM ja)[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['NX', 'SIMPX'], 'family': ['SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJD', 'CARD', 'ADV', 'VAFIN', 'PPER', 'APPR', 'CARD', 'NN', 'APPR', 'CARD', 'APPR', 'NE', 'KON', 'PTKANT'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 14), 'span': (0, 12), 'left siblings': [], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(NX halb acht)
		(SIMPX dann waren sie um zwei minuten nach elf in hannover)
		[01;31m(SU[00m
			[01;31m(DM[00m
				(KON und)[01;31m)[00m
			(DM ja)[01;31m)[00m))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['DM', 'DM'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON', 'PTKANT'), 'right siblings': ['DM'], 'parent': 'SU', 'auto preterminal span': (12, 14), 'span': (12, 13), 'left siblings': [], 'label': 'DM', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(NX halb acht)
		(SIMPX dann waren sie um zwei minuten nach elf in hannover)
		[01;31m(SU[00m
			(KON und)
			(DM ja)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['KON', 'DM'], 'family': ['NX', 'SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJD', 'CARD', 'ADV', 'VAFIN', 'PPER', 'APPR', 'CARD', 'NN', 'APPR', 'CARD', 'APPR', 'NE', 'KON', 'PTKANT'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 14), 'span': (12, 14), 'left siblings': ['NX', 'SIMPX'], 'label': 'SU', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP halb acht dann waren sie um zwei minuten nach elf in hannover und ja)

Sentence 595:
3 Initial errors
0 on fringe, 2 iterations
2 Error:UNSET move
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SU[00m
	(TOP
		(TURN
			[01;31m(SU[00m
				(DM
					(PTKANT ja))[01;31m)[00m
			[01;31m(SU[00m
				(SIMPX
					(VF ich)
					(LK bedanke)
					(MF mich auch))[01;31m)[00m))[01;36m)[00m
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SU', 'SIMPX'], 'mover info': [('SU', (0, 1))], 'old_family': ['SU', 'SU'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'PPER', 'VVFIN', 'PRF', 'ADV'), 'start right siblings': ['SU'], 'end left siblings': [], 'auto preterminal span': (0, 5), 'movers': ['SU'], 'old_parent': 'TURN', 'POS confusion': ('PTKANT', 'PTKANT'), 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			[01;31m(SU[00m
				(DM
					(PTKANT ja))[01;31m)[00m
			(SIMPX ich bedanke mich auch))))
Step:Unary
{'subtrees': ['DM'], 'family': ['SU', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VVFIN', 'PRF', 'ADV'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 5), 'span': (0, 1), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja ich bedanke mich auch)

Sentence 596:
5 Initial errors
0 on fringe, 5 iterations
1 Error:PP Attachment
1 Error:Clause Attachment
1 Error:UNSET remove
1 Error:Clause Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			(SIMPX ich wurde ganz gern eine reise buchen bei ihnen)
			[01;31m(SIMPX[00m
				(VF und zwar)
				(LK mochte)
				(MF
					(NX ich)
					[01;36m(PX[00m
						(PX im august)
						(PX fur ein paar tage)[01;36m)[00m)
				(VC wegfahren)
				(NF nach hannover)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX und zwar wurde das am montag dienstag sein)
			(SIMPX das ist der vierte funfte august)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF was)
				(LK konnen)
				(MF sie mir da)
				(VC anbieten))[01;31m)[00m))
Step:PP Attachment
{'subtrees': ['PX', 'PX'], 'family': ['NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'NN', 'APPR', 'ART', 'PIDAT', 'NN'), 'right siblings': [], 'left siblings': [(NX (PPER ich))], 'auto preterminal span': (14, 20), 'span': (14, 20), 'parent': 'MF', 'label': 'PX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			(SIMPX ich wurde ganz gern eine reise buchen bei ihnen)
			[01;31m(SIMPX[00m
				(VF und zwar)
				(LK mochte)
				(MF ich im august fur ein paar tage)
				(VC wegfahren)
				(NF nach hannover)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX und zwar wurde das am montag dienstag sein)
			(SIMPX das ist der vierte funfte august)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF was)
				(LK konnen)
				(MF sie mir da)
				(VC anbieten))[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['DM', 'SIMPX', 'SIMPX'], 'family': ['SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VAFIN', 'ADV', 'ADV', 'ART', 'NN', 'VVINF', 'APPR', 'PPER', 'KON', 'ADV', 'VMFIN', 'PPER', 'APPRART', 'NN', 'APPR', 'ART', 'PIDAT', 'NN', 'VVINF', 'APPR', 'NE', 'KON', 'ADV', 'VAFIN', 'PDS', 'APPRART', 'NN', 'NN', 'VAINF', 'PDS', 'VAFIN', 'ART', 'ADJA', 'ADJA', 'NN', 'PWS', 'VMFIN', 'PPER', 'PPER', 'ADV', 'VVINF'), 'right siblings': ['SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 43), 'span': (0, 23), 'left siblings': [], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich wurde ganz gern eine reise buchen bei ihnen)
		[01;31m(SIMPX[00m
			(VF und zwar)
			(LK mochte)
			(MF ich im august fur ein paar tage)
			(VC wegfahren)
			(NF nach hannover)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX und zwar wurde das am montag dienstag sein)
			(SIMPX das ist der vierte funfte august)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF was)
				(LK konnen)
				(MF sie mir da)
				(VC anbieten))[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'VC', 'NF'], 'family': ['DM', 'SIMPX', 'SIMPX', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VAFIN', 'ADV', 'ADV', 'ART', 'NN', 'VVINF', 'APPR', 'PPER', 'KON', 'ADV', 'VMFIN', 'PPER', 'APPRART', 'NN', 'APPR', 'ART', 'PIDAT', 'NN', 'VVINF', 'APPR', 'NE', 'KON', 'ADV', 'VAFIN', 'PDS', 'APPRART', 'NN', 'NN', 'VAINF', 'PDS', 'VAFIN', 'ART', 'ADJA', 'ADJA', 'NN', 'PWS', 'VMFIN', 'PPER', 'PPER', 'ADV', 'VVINF'), 'right siblings': ['SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 43), 'span': (10, 23), 'left siblings': ['DM', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich wurde ganz gern eine reise buchen bei ihnen)
		(VF und zwar)
		(LK mochte)
		(MF ich im august fur ein paar tage)
		(VC wegfahren)
		(NF nach hannover)
		[01;31m(SU[00m
			(SIMPX und zwar wurde das am montag dienstag sein)
			(SIMPX das ist der vierte funfte august)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF was)
				(LK konnen)
				(MF sie mir da)
				(VC anbieten))[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['DM', 'SIMPX', 'VF', 'LK', 'MF', 'VC', 'NF', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VAFIN', 'ADV', 'ADV', 'ART', 'NN', 'VVINF', 'APPR', 'PPER', 'KON', 'ADV', 'VMFIN', 'PPER', 'APPRART', 'NN', 'APPR', 'ART', 'PIDAT', 'NN', 'VVINF', 'APPR', 'NE', 'KON', 'ADV', 'VAFIN', 'PDS', 'APPRART', 'NN', 'NN', 'VAINF', 'PDS', 'VAFIN', 'ART', 'ADJA', 'ADJA', 'NN', 'PWS', 'VMFIN', 'PPER', 'PPER', 'ADV', 'VVINF'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 43), 'span': (23, 37), 'left siblings': ['DM', 'SIMPX', 'VF', 'LK', 'MF', 'VC', 'NF'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich wurde ganz gern eine reise buchen bei ihnen)
		(VF und zwar)
		(LK mochte)
		(MF ich im august fur ein paar tage)
		(VC wegfahren)
		(NF nach hannover)
		(SIMPX und zwar wurde das am montag dienstag sein)
		(SIMPX das ist der vierte funfte august)
		[01;31m(SU[00m
			(SIMPX
				(VF was)
				(LK konnen)
				(MF sie mir da)
				(VC anbieten))[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['DM', 'SIMPX', 'VF', 'LK', 'MF', 'VC', 'NF', 'SIMPX', 'SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VAFIN', 'ADV', 'ADV', 'ART', 'NN', 'VVINF', 'APPR', 'PPER', 'KON', 'ADV', 'VMFIN', 'PPER', 'APPRART', 'NN', 'APPR', 'ART', 'PIDAT', 'NN', 'VVINF', 'APPR', 'NE', 'KON', 'ADV', 'VAFIN', 'PDS', 'APPRART', 'NN', 'NN', 'VAINF', 'PDS', 'VAFIN', 'ART', 'ADJA', 'ADJA', 'NN', 'PWS', 'VMFIN', 'PPER', 'PPER', 'ADV', 'VVINF'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 43), 'span': (37, 43), 'left siblings': ['DM', 'SIMPX', 'VF', 'LK', 'MF', 'VC', 'NF', 'SIMPX', 'SIMPX'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja ich wurde ganz gern eine reise buchen bei ihnen und zwar mochte ich im august fur ein paar tage wegfahren nach hannover und zwar wurde das am montag dienstag sein das ist der vierte funfte august was konnen sie mir da anbieten)

Sentence 597:
13 Initial errors
0 on fringe, 8 iterations
4 Error:UNSET move
2 Error:Different label
2 Error:Different label
1 Error:Single Word Phrase
1 Error:Unary
1 Error:Clause Attachment
1 Error:Clause Attachment
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU ach so)
		[01;31m(SU[00m
			(DM
				(ITJ stimmt))[01;31m)[00m
		[01;31m(SU[00m
			[01;36m(SIMPX[00m
				[01;31m(SIMPX[00m
					(LK habe)
					[01;31m(MF[00m [01;33m(MF[00m
						(NX ich)
						(NX mir)
						(ADVX noch)[01;31m)[00m[01;31m)[00m
				[01;36m(NX[00m
					(PIAT keine) [01;33mMF)[00m[01;36m)[00m[01;36m)[00m
			(DM ja)
			(SIMPX habe ich mir noch keine gedanken drum gemacht)[01;31m)[00m
		[01;31m(SU[00m
			(DM ja)
			(SIMPX es sollte schon relativ zentral gelegen sein denke ich)[01;31m)[00m
		[01;36m(NF[00m [01;31m(SU[00m
			(SIMPX
				(VF es)
				(LK mus)
				(MF auch nicht eines der schlechteren)
				(VC sein))[01;31m)[00m[01;36m)[00m
		(SU
			(SIMPX
				(LK hatten)
				(MF sie da eines)
				[01;36m(SIMPX[00m
					(NF
						[01;31m(R[00m
							(C
								[01;31m(NX[00m
									(PRELS das)[01;31m)[00m)
							(MF sie mir)
							(VC empfehlen konnten)[01;31m)[00m)[01;36m)[00m))))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['NX', 'NX', 'ADVX', 'PIAT'], 'mover info': [('PIAT', (7, 8))], 'old_family': ['SIMPX', 'PIAT', 'DM', 'SIMPX'], 'start left siblings': ['SIMPX'], 'auto preterminals': ('VAFIN', 'PPER', 'PRF', 'ADV', 'PIAT', 'PTKANT', 'VAFIN', 'PPER', 'PRF', 'ADV', 'PIAT', 'NN', 'PROP', 'VVPP'), 'start right siblings': ['DM', 'SIMPX'], 'end left siblings': ['NX', 'NX', 'ADVX'], 'auto preterminal span': (3, 17), 'movers': ['PIAT'], 'old_parent': 'SU', 'POS confusion': ('PIAT', 'PIAT'), 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU ach so)
		[01;31m(SU[00m
			(DM
				(ITJ stimmt))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(LK habe)
				(MF
					(NX ich)
					(NX mir)
					(ADVX noch)
					[01;36m(NX[00m
						(PIAT keine)[01;36m)[00m))
			(DM ja)
			(SIMPX habe ich mir noch keine gedanken drum gemacht)[01;31m)[00m
		[01;31m(SU[00m
			(DM ja)
			(SIMPX es sollte schon relativ zentral gelegen sein denke ich)[01;31m)[00m
		[01;36m(NF[00m [01;31m(SU[00m
			(SIMPX
				(VF es)
				(LK mus)
				(MF auch nicht eines der schlechteren)
				(VC sein))[01;31m)[00m[01;36m)[00m
		(SU
			(SIMPX
				(LK hatten)
				(MF sie da eines)
				[01;36m(SIMPX[00m
					(NF
						[01;31m(R[00m
							(C
								[01;31m(NX[00m
									(PRELS das)[01;31m)[00m)
							(MF sie mir)
							(VC empfehlen konnten)[01;31m)[00m)[01;36m)[00m))))
Step:Different label
{'family': ['SU', 'SU', 'SU', 'SU', 'NF', 'SU'], 'auto preterminal span': (27, 35), 'span': (27, 35), 'subtrees': ['SIMPX'], 'parent': 'TURN', 'over_word': False, 'auto preterminals': ('PPER', 'VMFIN', 'ADV', 'PTKNEG', 'PIS', 'ART', 'NN', 'VAINF'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('SU', 'NF')}
(TOP
	(TURN
		(SU ach so)
		[01;31m(SU[00m
			(DM
				(ITJ stimmt))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(LK habe)
				(MF
					(NX ich)
					(NX mir)
					(ADVX noch)
					[01;36m(NX[00m
						(PIAT keine)[01;36m)[00m))
			(DM ja)
			(SIMPX habe ich mir noch keine gedanken drum gemacht)[01;31m)[00m
		[01;31m(SU[00m
			(DM ja)
			(SIMPX es sollte schon relativ zentral gelegen sein denke ich)[01;31m)[00m
		(NF es mus auch nicht eines der schlechteren sein)
		(SU
			(SIMPX
				(LK hatten)
				(MF sie da eines)
				[01;36m(SIMPX[00m
					(NF
						[01;31m(R[00m
							(C
								[01;31m(NX[00m
									(PRELS das)[01;31m)[00m)
							(MF sie mir)
							(VC empfehlen konnten)[01;31m)[00m)[01;36m)[00m))))
Step:Different label
{'family': ['SIMPX'], 'auto preterminal span': (39, 44), 'span': (39, 44), 'subtrees': ['C', 'MF', 'VC'], 'parent': 'NF', 'over_word': False, 'auto preterminals': ('PRELS', 'PPER', 'PPER', 'VVINF', 'VMFIN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('R', 'SIMPX')}
(TOP
	(TURN
		(SU ach so)
		[01;31m(SU[00m
			(DM
				(ITJ stimmt))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(LK habe)
				(MF
					(NX ich)
					(NX mir)
					(ADVX noch)
					[01;36m(NX[00m
						(PIAT keine)[01;36m)[00m))
			(DM ja)
			(SIMPX habe ich mir noch keine gedanken drum gemacht)[01;31m)[00m
		[01;31m(SU[00m
			(DM ja)
			(SIMPX es sollte schon relativ zentral gelegen sein denke ich)[01;31m)[00m
		(NF es mus auch nicht eines der schlechteren sein)
		(SU
			(SIMPX
				(LK hatten)
				(MF sie da eines)
				(NF
					(SIMPX
						(C
							[01;31m(NX[00m
								(PRELS das)[01;31m)[00m)
						(MF sie mir)
						(VC empfehlen konnten)))))))
Step:Single Word Phrase
{'subtrees': ['PIAT'], 'family': ['NX', 'NX', 'ADVX', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('PIAT',), 'right siblings': [], 'left siblings': [(NX (PPER ich)), (NX (PRF mir)), (ADVX (ADV noch))], 'auto preterminal span': (7, 8), 'span': (7, 8), 'parent': 'MF', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SU ach so)
		[01;31m(SU[00m
			(DM
				(ITJ stimmt))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX habe ich mir noch keine)
			(DM ja)
			(SIMPX habe ich mir noch keine gedanken drum gemacht)[01;31m)[00m
		[01;31m(SU[00m
			(DM ja)
			(SIMPX es sollte schon relativ zentral gelegen sein denke ich)[01;31m)[00m
		(NF es mus auch nicht eines der schlechteren sein)
		(SU
			(SIMPX
				(LK hatten)
				(MF sie da eines)
				(NF
					(SIMPX
						(C
							[01;31m(NX[00m
								(PRELS das)[01;31m)[00m)
						(MF sie mir)
						(VC empfehlen konnten)))))))
Step:Unary
{'subtrees': ['DM'], 'family': ['SU', 'SU', 'SU', 'SU', 'NF', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'ITJ', 'VAFIN', 'PPER', 'PRF', 'ADV', 'PIAT', 'PTKANT', 'VAFIN', 'PPER', 'PRF', 'ADV', 'PIAT', 'NN', 'PROP', 'VVPP', 'PTKANT', 'PPER', 'VMFIN', 'ADV', 'ADV', 'ADV', 'ADJD', 'VAINF', 'VVFIN', 'PPER', 'PPER', 'VMFIN', 'ADV', 'PTKNEG', 'PIS', 'ART', 'NN', 'VAINF', 'VAFIN', 'PPER', 'ADV', 'PIS', 'PRELS', 'PPER', 'PPER', 'VVINF', 'VMFIN'), 'right siblings': ['SU', 'SU', 'NF', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 44), 'span': (2, 3), 'left siblings': ['SU'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU ach so)
		(DM stimmt)
		[01;31m(SU[00m
			(SIMPX habe ich mir noch keine)
			(DM ja)
			(SIMPX habe ich mir noch keine gedanken drum gemacht)[01;31m)[00m
		[01;31m(SU[00m
			(DM ja)
			(SIMPX es sollte schon relativ zentral gelegen sein denke ich)[01;31m)[00m
		(NF es mus auch nicht eines der schlechteren sein)
		(SU
			(SIMPX
				(LK hatten)
				(MF sie da eines)
				(NF
					(SIMPX
						(C
							[01;31m(NX[00m
								(PRELS das)[01;31m)[00m)
						(MF sie mir)
						(VC empfehlen konnten)))))))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'DM', 'SIMPX'], 'family': ['SU', 'DM', 'SU', 'SU', 'NF', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'ITJ', 'VAFIN', 'PPER', 'PRF', 'ADV', 'PIAT', 'PTKANT', 'VAFIN', 'PPER', 'PRF', 'ADV', 'PIAT', 'NN', 'PROP', 'VVPP', 'PTKANT', 'PPER', 'VMFIN', 'ADV', 'ADV', 'ADV', 'ADJD', 'VAINF', 'VVFIN', 'PPER', 'PPER', 'VMFIN', 'ADV', 'PTKNEG', 'PIS', 'ART', 'NN', 'VAINF', 'VAFIN', 'PPER', 'ADV', 'PIS', 'PRELS', 'PPER', 'PPER', 'VVINF', 'VMFIN'), 'right siblings': ['SU', 'NF', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 44), 'span': (3, 17), 'left siblings': ['SU', 'DM'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU ach so)
		(DM stimmt)
		(SIMPX habe ich mir noch keine)
		(DM ja)
		(SIMPX habe ich mir noch keine gedanken drum gemacht)
		[01;31m(SU[00m
			(DM ja)
			(SIMPX es sollte schon relativ zentral gelegen sein denke ich)[01;31m)[00m
		(NF es mus auch nicht eines der schlechteren sein)
		(SU
			(SIMPX
				(LK hatten)
				(MF sie da eines)
				(NF
					(SIMPX
						(C
							[01;31m(NX[00m
								(PRELS das)[01;31m)[00m)
						(MF sie mir)
						(VC empfehlen konnten)))))))
Step:Clause Attachment
{'subtrees': ['DM', 'SIMPX'], 'family': ['SU', 'DM', 'SIMPX', 'DM', 'SIMPX', 'SU', 'NF', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'ITJ', 'VAFIN', 'PPER', 'PRF', 'ADV', 'PIAT', 'PTKANT', 'VAFIN', 'PPER', 'PRF', 'ADV', 'PIAT', 'NN', 'PROP', 'VVPP', 'PTKANT', 'PPER', 'VMFIN', 'ADV', 'ADV', 'ADV', 'ADJD', 'VAINF', 'VVFIN', 'PPER', 'PPER', 'VMFIN', 'ADV', 'PTKNEG', 'PIS', 'ART', 'NN', 'VAINF', 'VAFIN', 'PPER', 'ADV', 'PIS', 'PRELS', 'PPER', 'PPER', 'VVINF', 'VMFIN'), 'right siblings': ['NF', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 44), 'span': (17, 27), 'left siblings': ['SU', 'DM', 'SIMPX', 'DM', 'SIMPX'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU ach so)
		(DM stimmt)
		(SIMPX habe ich mir noch keine)
		(DM ja)
		(SIMPX habe ich mir noch keine gedanken drum gemacht)
		(DM ja)
		(SIMPX es sollte schon relativ zentral gelegen sein denke ich)
		(NF es mus auch nicht eines der schlechteren sein)
		(SU
			(SIMPX
				(LK hatten)
				(MF sie da eines)
				(NF
					(SIMPX
						(C
							[01;31m(NX[00m
								(PRELS das)[01;31m)[00m)
						(MF sie mir)
						(VC empfehlen konnten)))))))
Step:Single Word Phrase
{'subtrees': ['PRELS'], 'family': ['NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('PRELS',), 'right siblings': [], 'parent': 'C', 'auto preterminal span': (39, 40), 'span': (39, 40), 'left siblings': [], 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP ach so stimmt habe ich mir noch keine ja habe ich mir noch keine gedanken drum gemacht ja es sollte schon relativ zentral gelegen sein denke ich es mus auch nicht eines der schlechteren sein hatten sie da eines das sie mir empfehlen konnten)

Sentence 598:
0 Initial errors
0 on fringe, 0 iterations

Sentence 599:
9 Initial errors
0 on fringe, 6 iterations
2 Error:Co-ordination
2 Error:Modifier Attachment
2 Error:UNSET move
1 Error:Single Word Phrase
1 Error:Clause Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM wie gesagt)
			(SIMPX was war das jetzt)
			[01;36m(SIMPX[00m
				(SIMPX montag der vierte august wollte ich dann los)
				[01;31m(PX[00m
					(KON und)
					(ADVX dann)
					(ADJX
						(NX
							[01;31m(ADJX[00m
								(ADJX drei)
								[01;33m(NX[00m (ADJX vier)[01;31m)[00m
							(NN tage)) [01;33mNX)[00m
						(ADJD spater))
					(ADVX wieder)
					(PX nach hause)[01;31m)[00m[01;36m)[00m
			(SIMPX
				(VF dann)
				(LK ist)
				[01;36m(MF[00m
					[01;36m(NX[00m
						(ART das)[01;36m)[00m
					[01;31m(MF[00m
						(NX die ausstellung)
						(ADVX vorbei)[01;31m)[00m[01;36m)[00m)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK ware)
				(MF also dann spatestens am achten august))[01;31m)[00m))
Step:Co-ordination
{'new_parent': 'SU', 'new_family': ['DM', 'SIMPX', 'SIMPX', 'KON', 'ADVX', 'ADJX', 'ADVX', 'PX', 'SIMPX'], 'mover info': [('KON', (14, 15)), ('ADVX', (15, 16)), ('ADJX', (16, 20)), ('ADVX', (20, 21))], 'old_family': ['KON', 'ADVX', 'ADJX', 'ADVX', 'PX'], 'start left siblings': [], 'auto preterminals': ('KOUS', 'VVPP', 'PWS', 'VAFIN', 'PDS', 'ADV', 'NN', 'ART', 'ADJA', 'NN', 'VVFIN', 'PPER', 'ADV', 'PTKVZ', 'KON', 'ADV', 'CARD', 'CARD', 'NN', 'ADJD', 'ADV', 'APPR', 'NN', 'ADV', 'VAFIN', 'ART', 'ART', 'NN', 'ADV'), 'start right siblings': ['PX'], 'end left siblings': ['DM', 'SIMPX', 'SIMPX'], 'auto preterminal span': (0, 29), 'adding node already present': False, 'movers': ['KON', 'ADVX', 'ADJX', 'ADVX'], 'old_parent': 'PX', 'added and moved': True, 'end right siblings': ['PX', 'SIMPX'], 'classified_type': 'Co-ordination', 'type': 'move', 'added label': 'MF'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM wie gesagt)
			(SIMPX was war das jetzt)
			(SIMPX
				(SIMPX montag der vierte august wollte ich dann los)
				(KON und)
				(ADVX dann)
				(ADJX
					(NX
						[01;31m(ADJX[00m
							(ADJX drei)
							[01;33m(NX[00m (ADJX vier)[01;31m)[00m
						(NN tage)) [01;33mNX)[00m
					(ADJD spater))
				(ADVX wieder)
				(PX nach hause))
			(SIMPX
				(VF dann)
				(LK ist)
				[01;36m(MF[00m
					[01;36m(NX[00m
						(ART das)[01;36m)[00m
					[01;31m(MF[00m
						(NX die ausstellung)
						(ADVX vorbei)[01;31m)[00m[01;36m)[00m)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK ware)
				(MF also dann spatestens am achten august))[01;31m)[00m))
Step:Modifier Attachment
{'new_parent': 'ADJX', 'new_family': ['ADJX', 'NX', 'ADJD'], 'mover info': [('ADJX', (16, 17))], 'old_family': ['ADJX', 'ADJX'], 'start left siblings': [], 'auto preterminals': ('CARD', 'CARD', 'NN', 'ADJD'), 'start right siblings': ['ADJX'], 'end left siblings': [], 'auto preterminal span': (16, 20), 'adding node already present': False, 'movers': ['ADJX'], 'old_parent': 'ADJX', 'POS confusion': ('CARD', 'CARD'), 'added and moved': True, 'end right siblings': ['NX', 'ADJD'], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'MF'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM wie gesagt)
			(SIMPX was war das jetzt)
			(SIMPX montag der vierte august wollte ich dann los und dann drei vier tage spater wieder nach hause)
			(SIMPX
				(VF dann)
				(LK ist)
				[01;36m(MF[00m
					[01;36m(NX[00m
						(ART das)[01;36m)[00m
					[01;31m(MF[00m
						(NX die ausstellung)
						(ADVX vorbei)[01;31m)[00m[01;36m)[00m)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK ware)
				(MF also dann spatestens am achten august))[01;31m)[00m))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['ART', 'NX', 'ADVX'], 'mover info': [('ART', (25, 26))], 'old_family': ['VF', 'LK', 'ART', 'MF'], 'start left siblings': ['VF', 'LK'], 'auto preterminals': ('ADV', 'VAFIN', 'ART', 'ART', 'NN', 'ADV'), 'start right siblings': ['MF'], 'end left siblings': [], 'auto preterminal span': (23, 29), 'movers': ['ART'], 'old_parent': 'SIMPX', 'POS confusion': ('ART', 'ART'), 'end right siblings': ['NX', 'ADVX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM wie gesagt)
			(SIMPX was war das jetzt)
			(SIMPX montag der vierte august wollte ich dann los und dann drei vier tage spater wieder nach hause)
			(SIMPX
				(VF dann)
				(LK ist)
				(MF
					[01;36m(NX[00m
						(ART das)[01;36m)[00m
					(NX die ausstellung)
					(ADVX vorbei)))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK ware)
				(MF also dann spatestens am achten august))[01;31m)[00m))
Step:Single Word Phrase
{'subtrees': ['ART'], 'family': ['NX', 'NX', 'ADVX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ART',), 'right siblings': [(NX (ART die) (NN ausstellung)), (ADVX (ADV vorbei))], 'left siblings': [], 'auto preterminal span': (25, 26), 'span': (25, 26), 'parent': 'MF', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM wie gesagt)
			(SIMPX was war das jetzt)
			(SIMPX montag der vierte august wollte ich dann los und dann drei vier tage spater wieder nach hause)
			(SIMPX dann ist das die ausstellung vorbei)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK ware)
				(MF also dann spatestens am achten august))[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'family': ['SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'VVPP', 'PWS', 'VAFIN', 'PDS', 'ADV', 'NN', 'ART', 'ADJA', 'NN', 'VVFIN', 'PPER', 'ADV', 'PTKVZ', 'KON', 'ADV', 'CARD', 'CARD', 'NN', 'ADJD', 'ADV', 'APPR', 'NN', 'ADV', 'VAFIN', 'ART', 'ART', 'NN', 'ADV', 'PDS', 'VAFIN', 'ADV', 'ADV', 'ADV', 'APPRART', 'ADJA', 'NN'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 37), 'span': (0, 29), 'left siblings': [], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM wie gesagt)
		(SIMPX was war das jetzt)
		(SIMPX montag der vierte august wollte ich dann los und dann drei vier tage spater wieder nach hause)
		(SIMPX dann ist das die ausstellung vorbei)
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK ware)
				(MF also dann spatestens am achten august))[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'VVPP', 'PWS', 'VAFIN', 'PDS', 'ADV', 'NN', 'ART', 'ADJA', 'NN', 'VVFIN', 'PPER', 'ADV', 'PTKVZ', 'KON', 'ADV', 'CARD', 'CARD', 'NN', 'ADJD', 'ADV', 'APPR', 'NN', 'ADV', 'VAFIN', 'ART', 'ART', 'NN', 'ADV', 'PDS', 'VAFIN', 'ADV', 'ADV', 'ADV', 'APPRART', 'ADJA', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 37), 'span': (29, 37), 'left siblings': ['DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP wie gesagt was war das jetzt montag der vierte august wollte ich dann los und dann drei vier tage spater wieder nach hause dann ist das die ausstellung vorbei das ware also dann spatestens am achten august)

Sentence 600:
3 Initial errors
0 on fringe, 2 iterations
2 Error:UNSET move
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SU[00m
	(TOP
		(TURN
			[01;31m(SU[00m
				(DM
					(PTKANT ja))[01;31m)[00m
			[01;31m(SU[00m
				(DM ja)
				(DM okay)[01;31m)[00m))[01;36m)[00m
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SU', 'DM', 'DM'], 'mover info': [('SU', (0, 1))], 'old_family': ['SU', 'SU'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'PTKANT', 'ITJ'), 'start right siblings': ['SU'], 'end left siblings': [], 'auto preterminal span': (0, 3), 'movers': ['SU'], 'old_parent': 'TURN', 'POS confusion': ('PTKANT', 'PTKANT'), 'end right siblings': ['DM', 'DM'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			[01;31m(SU[00m
				(DM
					(PTKANT ja))[01;31m)[00m
			(DM ja)
			(DM okay))))
Step:Unary
{'subtrees': ['DM'], 'family': ['SU', 'DM', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PTKANT', 'ITJ'), 'right siblings': ['DM', 'DM'], 'parent': 'SU', 'auto preterminal span': (0, 3), 'span': (0, 1), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja ja okay)

Sentence 601:
8 Initial errors
0 on fringe, 6 iterations
3 Error:UNSET move
1 Error:Clause Attachment
1 Error:Clause Attachment
1 Error:Unary
1 Error:UNSET remove
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU ja okay)
		[01;33m(SU (SIMPX[00m (SU wie ist das mit dem gepack)
		[01;31m(SU[00m
			(SIMPX wird das gepack nachgesendet) [01;33mSIMPX) SU)[00m
			[01;31m(SIMPX[00m
				(LK mus)
				(MF ich das selber)
				(VC schleppen)[01;31m)[00m[01;31m)[00m
		[01;36m(SIMPX[00m
			[01;36m(SU[00m
				[01;31m(SU[00m
					(SIMPX
						(VF ich)
						(LK habe)
						(MF so ein ruckenleiden))[01;31m)[00m
				[01;31m(SU[00m
					(PX
						(PROP deswegen))[01;31m)[00m[01;36m)[00m[01;36m)[00m))
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SU', 'PX'], 'mover info': [('SU', (17, 22))], 'old_family': ['SU', 'SU', 'SU', 'SU', 'SU'], 'start left siblings': ['SU', 'SU', 'SU'], 'auto preterminals': ('PTKANT', 'ITJ', 'PWAV', 'VAFIN', 'PDS', 'APPR', 'ART', 'NN', 'VAFIN', 'ART', 'NN', 'VVPP', 'VMFIN', 'PPER', 'PDS', 'ADV', 'VVINF', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'PROP'), 'start right siblings': ['SU'], 'end left siblings': [], 'auto preterminal span': (0, 23), 'adding node already present': False, 'movers': ['SU'], 'old_parent': 'TURN', 'added and moved': True, 'end right siblings': ['PX'], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'SIMPX'}
(TOP
	(TURN
		(SU ja okay)
		[01;33m(SU (SIMPX[00m (SU wie ist das mit dem gepack)
		[01;31m(SU[00m
			(SIMPX wird das gepack nachgesendet) [01;33mSIMPX) SU)[00m
			[01;31m(SIMPX[00m
				(LK mus)
				(MF ich das selber)
				(VC schleppen)[01;31m)[00m[01;31m)[00m
		(SIMPX
			(SU
				[01;31m(SU[00m
					(SIMPX
						(VF ich)
						(LK habe)
						(MF so ein ruckenleiden))[01;31m)[00m
				(PX deswegen)))))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['SU', 'SU', 'SU', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'PWAV', 'VAFIN', 'PDS', 'APPR', 'ART', 'NN', 'VAFIN', 'ART', 'NN', 'VVPP', 'VMFIN', 'PPER', 'PDS', 'ADV', 'VVINF', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'PROP'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 23), 'span': (8, 17), 'left siblings': ['SU', 'SU'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU ja okay)
		[01;36m(SIMPX[00m
			[01;36m(SU[00m
				(SU wie ist das mit dem gepack)
				(SIMPX wird das gepack nachgesendet)[01;36m)[00m[01;36m)[00m
		[01;31m(SIMPX[00m
			(LK mus)
			(MF ich das selber)
			(VC schleppen)[01;31m)[00m
		(SIMPX
			(SU
				[01;31m(SU[00m
					(SIMPX
						(VF ich)
						(LK habe)
						(MF so ein ruckenleiden))[01;31m)[00m
				(PX deswegen)))))
Step:Clause Attachment
{'subtrees': ['SU', 'SIMPX'], 'family': ['SU', 'SU', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PWAV', 'VAFIN', 'PDS', 'APPR', 'ART', 'NN', 'VAFIN', 'ART', 'NN', 'VVPP'), 'right siblings': [(SIMPX (LK (VXFIN (VMFIN mus))) (MF (NX (PPER ich)) (NX (PDS das)) (ADVX (ADV selber))) (VC (VXINF (VVINF schleppen)))), (SIMPX (SU (SU (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VAFIN habe))) (MF (NX (ADVX (ADV so)) (ART ein) (NN ruckenleiden))))) (PX (PROP deswegen))))], 'left siblings': [(SU (DM (PTKANT ja)) (DM (ITJ okay)))], 'auto preterminal span': (2, 12), 'span': (2, 12), 'parent': 'TURN', 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU ja okay)
		[01;36m(SIMPX[00m
			(SU
				(SU wie ist das mit dem gepack)
				(SIMPX wird das gepack nachgesendet))[01;36m)[00m
		[01;31m(SIMPX[00m
			(LK mus)
			(MF ich das selber)
			(VC schleppen)[01;31m)[00m
		(SIMPX
			(SU
				[01;31m(SU[00m
					(SIMPX
						(VF ich)
						(LK habe)
						(MF so ein ruckenleiden))[01;31m)[00m
				(PX deswegen)))))
Step:Unary
{'subtrees': ['SU'], 'family': ['SU', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PWAV', 'VAFIN', 'PDS', 'APPR', 'ART', 'NN', 'VAFIN', 'ART', 'NN', 'VVPP'), 'right siblings': [(SIMPX (LK (VXFIN (VMFIN mus))) (MF (NX (PPER ich)) (NX (PDS das)) (ADVX (ADV selber))) (VC (VXINF (VVINF schleppen)))), (SIMPX (SU (SU (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VAFIN habe))) (MF (NX (ADVX (ADV so)) (ART ein) (NN ruckenleiden))))) (PX (PROP deswegen))))], 'left siblings': [(SU (DM (PTKANT ja)) (DM (ITJ okay)))], 'auto preterminal span': (2, 12), 'span': (2, 12), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU ja okay)
		(SIMPX wie ist das mit dem gepack wird das gepack nachgesendet)
		[01;31m(SIMPX[00m
			(LK mus)
			(MF ich das selber)
			(VC schleppen)[01;31m)[00m
		(SIMPX
			(SU
				[01;31m(SU[00m
					(SIMPX
						(VF ich)
						(LK habe)
						(MF so ein ruckenleiden))[01;31m)[00m
				(PX deswegen)))))
Step:UNSET remove
{'subtrees': ['LK', 'MF', 'VC'], 'family': ['SU', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'PWAV', 'VAFIN', 'PDS', 'APPR', 'ART', 'NN', 'VAFIN', 'ART', 'NN', 'VVPP', 'VMFIN', 'PPER', 'PDS', 'ADV', 'VVINF', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'PROP'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 23), 'span': (12, 17), 'left siblings': ['SU', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU ja okay)
		(SIMPX wie ist das mit dem gepack wird das gepack nachgesendet)
		(LK mus)
		(MF ich das selber)
		(VC schleppen)
		(SIMPX
			(SU
				[01;31m(SU[00m
					(SIMPX
						(VF ich)
						(LK habe)
						(MF so ein ruckenleiden))[01;31m)[00m
				(PX deswegen)))))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SU', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'PROP'), 'right siblings': ['PX'], 'parent': 'SU', 'auto preterminal span': (17, 23), 'span': (17, 22), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja okay wie ist das mit dem gepack wird das gepack nachgesendet mus ich das selber schleppen ich habe so ein ruckenleiden deswegen)

Sentence 602:
7 Initial errors
0 on fringe, 6 iterations
2 Error:UNSET move
1 Error:Clause Attachment
1 Error:Clause Attachment
1 Error:Modifier Attachment
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			(DM okay)
			(DM ja)
			(DM okay)
			(SIMPX werde ich mich drum kummern)[01;31m)[00m
		[01;31m(SU[00m
			(DM ja)
			(DM prima)
			(SIMPX
				(VF dann)
				(LK bitte)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX ich)
					(NX sie)
					(ADVX doch)[01;31m)[00m
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						[01;31m(MF[00m
							(NX
								(PDS das))[01;31m)[00m [01;33mMF)[00m
						(VC zu buchen)[01;31m)[00m[01;31m)[00m)
			(DM ja)[01;31m)[00m))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['MF', 'NX'], 'mover info': [('MF', (13, 16))], 'old_family': ['VF', 'LK', 'MF', 'NF'], 'start left siblings': ['VF', 'LK'], 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'PPER', 'ADV', 'PDS', 'PTKZU', 'VVINF'), 'start right siblings': ['NF'], 'end left siblings': [], 'auto preterminal span': (11, 19), 'movers': ['MF'], 'old_parent': 'SIMPX', 'end right siblings': ['NX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			(DM okay)
			(DM ja)
			(DM okay)
			(SIMPX werde ich mich drum kummern)[01;31m)[00m
		[01;31m(SU[00m
			(DM ja)
			(DM prima)
			(SIMPX
				(VF dann)
				(LK bitte)
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						(MF
							[01;31m(MF[00m
								(NX ich)
								(NX sie)
								(ADVX doch)[01;31m)[00m
							(NX das))
						(VC zu buchen)[01;31m)[00m[01;31m)[00m)
			(DM ja)[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['DM', 'DM', 'DM', 'DM', 'SIMPX'], 'family': ['SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'PTKANT', 'ITJ', 'VAFIN', 'PPER', 'PRF', 'PROP', 'VVINF', 'PTKANT', 'ITJ', 'ADV', 'VVFIN', 'PPER', 'PPER', 'ADV', 'PDS', 'PTKZU', 'VVINF', 'PTKANT'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 20), 'span': (0, 9), 'left siblings': [], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM okay)
		(DM ja)
		(DM okay)
		(SIMPX werde ich mich drum kummern)
		[01;31m(SU[00m
			(DM ja)
			(DM prima)
			(SIMPX
				(VF dann)
				(LK bitte)
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						(MF
							[01;31m(MF[00m
								(NX ich)
								(NX sie)
								(ADVX doch)[01;31m)[00m
							(NX das))
						(VC zu buchen)[01;31m)[00m[01;31m)[00m)
			(DM ja)[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['DM', 'DM', 'SIMPX', 'DM'], 'family': ['DM', 'DM', 'DM', 'DM', 'SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'PTKANT', 'ITJ', 'VAFIN', 'PPER', 'PRF', 'PROP', 'VVINF', 'PTKANT', 'ITJ', 'ADV', 'VVFIN', 'PPER', 'PPER', 'ADV', 'PDS', 'PTKZU', 'VVINF', 'PTKANT'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 20), 'span': (9, 20), 'left siblings': ['DM', 'DM', 'DM', 'DM', 'SIMPX'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM okay)
		(DM ja)
		(DM okay)
		(SIMPX werde ich mich drum kummern)
		(DM ja)
		(DM prima)
		(SIMPX
			(VF dann)
			(LK bitte)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					(MF
						[01;31m(MF[00m
							(NX ich)
							(NX sie)
							(ADVX doch)[01;31m)[00m
						(NX das))
					(VC zu buchen)[01;31m)[00m[01;31m)[00m)
		(DM ja)))
Step:Modifier Attachment
{'subtrees': ['NX', 'NX', 'ADVX'], 'family': ['MF', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'PPER', 'ADV', 'PDS'), 'right siblings': ['NX'], 'parent': 'MF', 'auto preterminal span': (13, 17), 'span': (13, 16), 'left siblings': [], 'label': 'MF', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM okay)
		(DM ja)
		(DM okay)
		(SIMPX werde ich mich drum kummern)
		(DM ja)
		(DM prima)
		(SIMPX
			(VF dann)
			(LK bitte)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					(MF ich sie doch das)
					(VC zu buchen)[01;31m)[00m[01;31m)[00m)
		(DM ja)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['VF', 'LK', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'PPER', 'ADV', 'PDS', 'PTKZU', 'VVINF'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (11, 19), 'span': (13, 19), 'left siblings': ['VF', 'LK'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM okay)
		(DM ja)
		(DM okay)
		(SIMPX werde ich mich drum kummern)
		(DM ja)
		(DM prima)
		(SIMPX
			(VF dann)
			(LK bitte)
			[01;31m(SIMPX[00m
				(MF ich sie doch das)
				(VC zu buchen)[01;31m)[00m)
		(DM ja)))
Step:UNSET remove
{'subtrees': ['MF', 'VC'], 'family': ['VF', 'LK', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'PPER', 'ADV', 'PDS', 'PTKZU', 'VVINF'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (11, 19), 'span': (13, 19), 'left siblings': ['VF', 'LK'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ja okay ja okay werde ich mich drum kummern ja prima dann bitte ich sie doch das zu buchen ja)

Sentence 603:
3 Initial errors
0 on fringe, 2 iterations
2 Error:UNSET move
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SU[00m
	(TOP
		(TURN
			[01;31m(SU[00m
				(DM
					(ITJ okay))[01;31m)[00m
			[01;31m(SU[00m
				(SIMPX
					(VF dann)
					(LK bedanke)
					(MF ich mich))[01;31m)[00m))[01;36m)[00m
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SU', 'SIMPX'], 'mover info': [('SU', (0, 1))], 'old_family': ['SU', 'SU'], 'start left siblings': [], 'auto preterminals': ('ITJ', 'ADV', 'VVFIN', 'PPER', 'PRF'), 'start right siblings': ['SU'], 'end left siblings': [], 'auto preterminal span': (0, 5), 'movers': ['SU'], 'old_parent': 'TURN', 'POS confusion': ('ITJ', 'ITJ'), 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			[01;31m(SU[00m
				(DM
					(ITJ okay))[01;31m)[00m
			(SIMPX dann bedanke ich mich))))
Step:Unary
{'subtrees': ['DM'], 'family': ['SU', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'VVFIN', 'PPER', 'PRF'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 5), 'span': (0, 1), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP okay dann bedanke ich mich)

Sentence 604:
3 Initial errors
0 on fringe, 2 iterations
2 Error:UNSET move
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SU[00m
	(TOP
		(TURN
			[01;31m(SU[00m
				(DM
					(PTKANT ja))[01;31m)[00m
			[01;31m(SU[00m
				(DM
					(ITJ tschus))[01;31m)[00m))[01;36m)[00m
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SU', 'DM'], 'mover info': [('SU', (0, 1))], 'old_family': ['SU', 'SU'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'ITJ'), 'start right siblings': ['SU'], 'end left siblings': [], 'auto preterminal span': (0, 2), 'movers': ['SU'], 'old_parent': 'TURN', 'POS confusion': ('PTKANT', 'PTKANT'), 'end right siblings': ['DM'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			[01;31m(SU[00m
				(DM
					(PTKANT ja))[01;31m)[00m
			(DM tschus))))
Step:Unary
{'subtrees': ['DM'], 'family': ['SU', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ'), 'right siblings': ['DM'], 'parent': 'SU', 'auto preterminal span': (0, 2), 'span': (0, 1), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja tschus)

Sentence 605:
16 Initial errors
0 on fringe, 12 iterations
3 Error:UNSET move
2 Error:Single Word Phrase
2 Error:Modifier Attachment
1 Error:UNSET add
1 Error:Unary
1 Error:Unary
1 Error:Clause Attachment
1 Error:UNSET remove
1 Error:Single Word Phrase
1 Error:Co-ordination
1 Error:UNSET remove
1 Error:UNSET add
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;36m(SU[00m
				(DM hallo)
				(DM herr klein)[01;36m)[00m
			(ADJX gut das wir uns treffen)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF ich)
				(LK habe)
				(VC gehort)
				(NF [01;33m(SIMPX (NF[00m
					(SIMPX
						(VF wir)
						[01;36m(LKMVC[00m
							(LK sollen)
							(MF zusammen)
							(VC verreisen)
							[01;36m(PX[00m
								(NF
									(PX nach hannover)
									[01;36m(VXINF[00m [01;36m(VC[00m [01;31m(ADJX[00m
										(ADJD geschaftlich)[01;31m)[00m[01;36m)[00m[01;36m)[00m)[01;36m)[00m[01;36m)[00m))[01;31m)[00m
			[01;31m(SIMPX[00m
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				(LK ware)
				(MF doch gut)
				(NF [01;33m(SIMPX[00m
					(SIMPX
						(C wenn)
						[01;31m(FKOORD[00m
							[01;31m(MVC[00m
								(MF wir uns eben)
								(VC zusammensetzen)[01;31m)[00m [01;33mSIMPX)[00m
							(KON und)
							(MVC die sache klaren)[01;31m)[00m))[01;31m)[00m[01;31m)[00m)) [01;33mNF) SIMPX)[00m
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['NF', 'KOORD', 'LK', 'MF', 'NF'], 'mover info': [('NF', (11, 18))], 'old_family': ['VF', 'LK', 'VC', 'NF'], 'start left siblings': ['VF', 'LK', 'VC'], 'auto preterminals': ('PPER', 'VAFIN', 'VVPP', 'PPER', 'VMFIN', 'ADV', 'VVINF', 'APPR', 'NE', 'ADJD', 'KON', 'VAFIN', 'ADV', 'ADJD', 'KOUS', 'PPER', 'PRF', 'ADV', 'VVFIN', 'KON', 'ART', 'NN', 'VVFIN'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (8, 31), 'adding node already present': False, 'movers': ['NF'], 'old_parent': 'SIMPX', 'added and moved': True, 'end right siblings': ['KOORD', 'LK', 'MF', 'NF'], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'VXINF'}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;36m(SU[00m
				(DM hallo)
				(DM herr klein)[01;36m)[00m
			(ADJX gut das wir uns treffen)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF ich)
				(LK habe)
				(VC gehort)[01;31m)[00m
			(NF
				(SIMPX
					(NF
						(SIMPX
							(VF wir)
							[01;36m(LKMVC[00m
								(LK sollen)
								(MF zusammen)
								(VC verreisen)
								[01;36m(PX[00m
									(NF
										(PX nach hannover)
										[01;36m(VXINF[00m [01;36m(VC[00m [01;31m(ADJX[00m
											(ADJD geschaftlich)[01;31m)[00m[01;36m)[00m[01;36m)[00m)[01;36m)[00m[01;36m)[00m))
					[01;31m(KOORD[00m
						(KON und)[01;31m)[00m
					(LK ware)
					(MF doch gut)
					(NF [01;33m(SIMPX[00m
						(SIMPX
							(C wenn)
							[01;31m(FKOORD[00m
								[01;31m(MVC[00m
									(MF wir uns eben)
									(VC zusammensetzen)[01;31m)[00m [01;33mSIMPX)[00m
								(KON und)
								(MVC die sache klaren)[01;31m)[00m))))[01;31m)[00m))
Step:Single Word Phrase
{'family': ['PX', 'VC'], 'auto preterminal span': (17, 18), 'span': (17, 18), 'subtrees': ['ADJD'], 'parent': 'NF', 'over_word': True, 'auto preterminals': ('ADJD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'VC')}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;36m(SU[00m
				(DM hallo)
				(DM herr klein)[01;36m)[00m
			(ADJX gut das wir uns treffen)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF ich)
				(LK habe)
				(VC gehort)[01;31m)[00m
			(NF
				(SIMPX
					(NF
						(SIMPX
							(VF wir)
							[01;36m(LKMVC[00m
								(LK sollen)
								(MF zusammen)
								(VC verreisen)
								[01;36m(PX[00m
									(NF
										(PX nach hannover)
										[01;36m(VXINF[00m
											(VC
												(ADJD geschaftlich))[01;36m)[00m)[01;36m)[00m[01;36m)[00m))
					[01;31m(KOORD[00m
						(KON und)[01;31m)[00m
					(LK ware)
					(MF doch gut)
					(NF [01;33m(SIMPX[00m
						(SIMPX
							(C wenn)
							[01;31m(FKOORD[00m
								[01;31m(MVC[00m
									(MF wir uns eben)
									(VC zusammensetzen)[01;31m)[00m [01;33mSIMPX)[00m
								(KON und)
								(MVC die sache klaren)[01;31m)[00m))))[01;31m)[00m))
Step:Modifier Attachment
{'new_parent': 'SU', 'new_family': ['ADJX', 'SIMPX', 'NF'], 'mover info': [('ADJX', (3, 8))], 'old_family': ['DM', 'DM', 'ADJX'], 'start left siblings': ['DM', 'DM'], 'auto preterminals': ('ITJ', 'NN', 'NE', 'ADJD', 'KOUS', 'PPER', 'PRF', 'VVFIN', 'PPER', 'VAFIN', 'VVPP', 'PPER', 'VMFIN', 'ADV', 'VVINF', 'APPR', 'NE', 'ADJD', 'KON', 'VAFIN', 'ADV', 'ADJD', 'KOUS', 'PPER', 'PRF', 'ADV', 'VVFIN', 'KON', 'ART', 'NN', 'VVFIN'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 31), 'movers': ['ADJX'], 'old_parent': 'SU', 'end right siblings': ['SIMPX', 'NF'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU hallo herr klein)
		[01;31m(SU[00m
			(ADJX gut das wir uns treffen)
			[01;31m(SIMPX[00m
				(VF ich)
				(LK habe)
				(VC gehort)[01;31m)[00m
			(NF
				(SIMPX
					(NF
						(SIMPX
							(VF wir)
							[01;36m(LKMVC[00m
								(LK sollen)
								(MF zusammen)
								(VC verreisen)
								[01;36m(PX[00m
									(NF
										(PX nach hannover)
										[01;36m(VXINF[00m
											(VC
												(ADJD geschaftlich))[01;36m)[00m)[01;36m)[00m[01;36m)[00m))
					[01;31m(KOORD[00m
						(KON und)[01;31m)[00m
					(LK ware)
					(MF doch gut)
					(NF [01;33m(SIMPX[00m
						(SIMPX
							(C wenn)
							[01;31m(FKOORD[00m
								[01;31m(MVC[00m
									(MF wir uns eben)
									(VC zusammensetzen)[01;31m)[00m [01;33mSIMPX)[00m
								(KON und)
								(MVC die sache klaren)[01;31m)[00m))))[01;31m)[00m))
Step:UNSET add
{'subtrees': ['LK', 'MF', 'VC', 'NF'], 'family': ['VF', 'LKMVC'], 'over_word': False, 'over words': False, 'auto preterminals': ('VMFIN', 'ADV', 'VVINF', 'APPR', 'NE', 'ADJD'), 'right siblings': [], 'left siblings': [(VF (NX (PPER wir)))], 'auto preterminal span': (12, 18), 'span': (12, 18), 'parent': 'SIMPX', 'label': 'LKMVC', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU hallo herr klein)
		[01;31m(SU[00m
			(ADJX gut das wir uns treffen)
			[01;31m(SIMPX[00m
				(VF ich)
				(LK habe)
				(VC gehort)[01;31m)[00m
			(NF
				(SIMPX
					(NF
						(SIMPX
							(VF wir)
							(LKMVC
								(LK sollen)
								(MF zusammen)
								(VC verreisen)
								[01;36m(PX[00m
									(NF
										(PX nach hannover)
										[01;36m(VXINF[00m
											(VC
												(ADJD geschaftlich))[01;36m)[00m)[01;36m)[00m)))
					[01;31m(KOORD[00m
						(KON und)[01;31m)[00m
					(LK ware)
					(MF doch gut)
					(NF [01;33m(SIMPX[00m
						(SIMPX
							(C wenn)
							[01;31m(FKOORD[00m
								[01;31m(MVC[00m
									(MF wir uns eben)
									(VC zusammensetzen)[01;31m)[00m [01;33mSIMPX)[00m
								(KON und)
								(MVC die sache klaren)[01;31m)[00m))))[01;31m)[00m))
Step:Unary
{'subtrees': ['NF'], 'family': ['LK', 'MF', 'VC', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'NE', 'ADJD'), 'right siblings': [], 'left siblings': [(LK (VXFIN (VMFIN sollen))), (MF (ADVX (ADV zusammen))), (VC (VXINF (VVINF verreisen)))], 'auto preterminal span': (15, 18), 'span': (15, 18), 'parent': 'LKMVC', 'label': 'PX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU hallo herr klein)
		[01;31m(SU[00m
			(ADJX gut das wir uns treffen)
			[01;31m(SIMPX[00m
				(VF ich)
				(LK habe)
				(VC gehort)[01;31m)[00m
			(NF
				(SIMPX
					(NF
						(SIMPX
							(VF wir)
							(LKMVC
								(LK sollen)
								(MF zusammen)
								(VC verreisen)
								(PX
									(NF
										(PX nach hannover)
										[01;36m(VXINF[00m
											(VC
												(ADJD geschaftlich))[01;36m)[00m)))))
					[01;31m(KOORD[00m
						(KON und)[01;31m)[00m
					(LK ware)
					(MF doch gut)
					(NF [01;33m(SIMPX[00m
						(SIMPX
							(C wenn)
							[01;31m(FKOORD[00m
								[01;31m(MVC[00m
									(MF wir uns eben)
									(VC zusammensetzen)[01;31m)[00m [01;33mSIMPX)[00m
								(KON und)
								(MVC die sache klaren)[01;31m)[00m))))[01;31m)[00m))
Step:Unary
{'subtrees': ['VC'], 'family': ['PX', 'VXINF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJD',), 'right siblings': [], 'left siblings': [(PX (APPR nach) (NX (NE hannover)))], 'auto preterminal span': (17, 18), 'span': (17, 18), 'parent': 'NF', 'label': 'VXINF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU hallo herr klein)
		[01;31m(SU[00m
			(ADJX gut das wir uns treffen)
			[01;31m(SIMPX[00m
				(VF ich)
				(LK habe)
				(VC gehort)[01;31m)[00m
			(NF
				(SIMPX
					(NF wir sollen zusammen verreisen nach hannover geschaftlich)
					[01;31m(KOORD[00m
						(KON und)[01;31m)[00m
					(LK ware)
					(MF doch gut)
					(NF [01;33m(SIMPX[00m
						(SIMPX
							(C wenn)
							[01;31m(FKOORD[00m
								[01;31m(MVC[00m
									(MF wir uns eben)
									(VC zusammensetzen)[01;31m)[00m [01;33mSIMPX)[00m
								(KON und)
								(MVC die sache klaren)[01;31m)[00m))))[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['ADJX', 'SIMPX', 'NF'], 'family': ['SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'NN', 'NE', 'ADJD', 'KOUS', 'PPER', 'PRF', 'VVFIN', 'PPER', 'VAFIN', 'VVPP', 'PPER', 'VMFIN', 'ADV', 'VVINF', 'APPR', 'NE', 'ADJD', 'KON', 'VAFIN', 'ADV', 'ADJD', 'KOUS', 'PPER', 'PRF', 'ADV', 'VVFIN', 'KON', 'ART', 'NN', 'VVFIN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 31), 'span': (3, 31), 'left siblings': ['SU'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU hallo herr klein)
		(ADJX gut das wir uns treffen)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK habe)
			(VC gehort)[01;31m)[00m
		(NF
			(SIMPX
				(NF wir sollen zusammen verreisen nach hannover geschaftlich)
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				(LK ware)
				(MF doch gut)
				(NF [01;33m(SIMPX[00m
					(SIMPX
						(C wenn)
						[01;31m(FKOORD[00m
							[01;31m(MVC[00m
								(MF wir uns eben)
								(VC zusammensetzen)[01;31m)[00m [01;33mSIMPX)[00m
							(KON und)
							(MVC die sache klaren)[01;31m)[00m))))))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'VC'], 'family': ['SU', 'ADJX', 'SIMPX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'NN', 'NE', 'ADJD', 'KOUS', 'PPER', 'PRF', 'VVFIN', 'PPER', 'VAFIN', 'VVPP', 'PPER', 'VMFIN', 'ADV', 'VVINF', 'APPR', 'NE', 'ADJD', 'KON', 'VAFIN', 'ADV', 'ADJD', 'KOUS', 'PPER', 'PRF', 'ADV', 'VVFIN', 'KON', 'ART', 'NN', 'VVFIN'), 'right siblings': ['NF'], 'parent': 'TURN', 'auto preterminal span': (0, 31), 'span': (8, 11), 'left siblings': ['SU', 'ADJX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU hallo herr klein)
		(ADJX gut das wir uns treffen)
		(VF ich)
		(LK habe)
		(VC gehort)
		(NF
			(SIMPX
				(NF wir sollen zusammen verreisen nach hannover geschaftlich)
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				(LK ware)
				(MF doch gut)
				(NF [01;33m(SIMPX[00m
					(SIMPX
						(C wenn)
						[01;31m(FKOORD[00m
							[01;31m(MVC[00m
								(MF wir uns eben)
								(VC zusammensetzen)[01;31m)[00m [01;33mSIMPX)[00m
							(KON und)
							(MVC die sache klaren)[01;31m)[00m))))))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['NF', 'KOORD', 'LK', 'MF', 'NF'], 'over_word': True, 'over words': True, 'auto preterminals': ('PPER', 'VMFIN', 'ADV', 'VVINF', 'APPR', 'NE', 'ADJD', 'KON', 'VAFIN', 'ADV', 'ADJD', 'KOUS', 'PPER', 'PRF', 'ADV', 'VVFIN', 'KON', 'ART', 'NN', 'VVFIN'), 'right siblings': ['LK', 'MF', 'NF'], 'parent': 'SIMPX', 'auto preterminal span': (11, 31), 'span': (18, 19), 'left siblings': ['NF'], 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(SU hallo herr klein)
		(ADJX gut das wir uns treffen)
		(VF ich)
		(LK habe)
		(VC gehort)
		(NF
			(SIMPX
				(NF wir sollen zusammen verreisen nach hannover geschaftlich)
				(KON und)
				(LK ware)
				(MF doch gut)
				(NF [01;33m(SIMPX[00m
					(SIMPX
						(C wenn)
						[01;31m(FKOORD[00m
							[01;31m(MVC[00m
								(MF wir uns eben)
								(VC zusammensetzen)[01;31m)[00m [01;33mSIMPX)[00m
							(KON und)
							(MVC die sache klaren)[01;31m)[00m))))))
Step:Co-ordination
{'subtrees': ['MF', 'VC'], 'family': ['MVC', 'KON', 'MVC'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'PRF', 'ADV', 'VVFIN', 'KON', 'ART', 'NN', 'VVFIN'), 'right siblings': ['KON', 'MVC'], 'parent': 'FKOORD', 'auto preterminal span': (23, 31), 'span': (23, 27), 'left siblings': [], 'label': 'MVC', 'classified_type': 'Co-ordination', 'type': 'remove'}
(TOP
	(TURN
		(SU hallo herr klein)
		(ADJX gut das wir uns treffen)
		(VF ich)
		(LK habe)
		(VC gehort)
		(NF
			(SIMPX
				(NF wir sollen zusammen verreisen nach hannover geschaftlich)
				(KON und)
				(LK ware)
				(MF doch gut)
				(NF [01;33m(SIMPX[00m
					(SIMPX
						(C wenn)
						[01;31m(FKOORD[00m
							(MF wir uns eben)
							(VC zusammensetzen) [01;33mSIMPX)[00m
							(KON und)
							(MVC die sache klaren)[01;31m)[00m))))))
Step:UNSET remove
{'subtrees': ['MF', 'VC', 'KON', 'MVC'], 'family': ['C', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'PRF', 'ADV', 'VVFIN', 'KON', 'ART', 'NN', 'VVFIN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (22, 31), 'span': (23, 31), 'left siblings': ['C'], 'label': 'FKOORD', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU hallo herr klein)
		(ADJX gut das wir uns treffen)
		(VF ich)
		(LK habe)
		(VC gehort)
		(NF
			(SIMPX
				(NF wir sollen zusammen verreisen nach hannover geschaftlich)
				(KON und)
				(LK ware)
				(MF doch gut)
				(NF
					(SIMPX
						[01;36m(SIMPX[00m
							(C wenn)
							(MF wir uns eben)
							(VC zusammensetzen)[01;36m)[00m
						(KON und)
						(MVC die sache klaren)))))))
Step:UNSET add
{'subtrees': ['C', 'MF', 'VC'], 'family': ['SIMPX', 'KON', 'MVC'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'PRF', 'ADV', 'VVFIN'), 'right siblings': [(KON und), (MVC (MF (NX (ART die) (NN sache))) (VC (VXFIN (VVFIN klaren))))], 'left siblings': [], 'auto preterminal span': (22, 27), 'span': (22, 27), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP hallo herr klein gut das wir uns treffen ich habe gehort wir sollen zusammen verreisen nach hannover geschaftlich und ware doch gut wenn wir uns eben zusammensetzen und die sache klaren)

Sentence 606:
6 Initial errors
0 on fringe, 3 iterations
2 Error:Single Word Phrase
2 Error:Different label
2 Error:Clause Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SU[00m
	(TOP
		(TURN
			[01;36m(SIMPX[00m [01;31m(SU[00m
				[01;36m(C[00m [01;31m(DM[00m
					(KOUS obwohl)[01;31m)[00m[01;36m)[00m
				(SIMPX die zugfahrt ware ja billiger)[01;31m)[00m[01;36m)[00m
			[01;31m(SU[00m
				(SIMPX
					(VF dann)
					(LK fahren)
					(MF wir lieber mit dem zug))[01;31m)[00m))[01;36m)[00m
Step:Single Word Phrase
{'family': ['C', 'SIMPX'], 'auto preterminal span': (0, 1), 'span': (0, 1), 'subtrees': ['KOUS'], 'parent': 'SU', 'over_word': True, 'auto preterminals': ('KOUS',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('DM', 'C')}
[01;36m(SU[00m
	(TOP
		(TURN
			[01;36m(SIMPX[00m [01;31m(SU[00m
				(C obwohl)
				(SIMPX die zugfahrt ware ja billiger)[01;31m)[00m[01;36m)[00m
			[01;31m(SU[00m
				(SIMPX
					(VF dann)
					(LK fahren)
					(MF wir lieber mit dem zug))[01;31m)[00m))[01;36m)[00m
Step:Different label
{'family': ['SIMPX', 'SU'], 'auto preterminal span': (0, 6), 'span': (0, 6), 'subtrees': ['C', 'SIMPX'], 'parent': 'TURN', 'over_word': False, 'auto preterminals': ('KOUS', 'ART', 'NN', 'VAFIN', 'ADV', 'ADJD'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('SU', 'SIMPX')}
[01;36m(SU[00m
	(TOP
		(TURN
			(SIMPX obwohl die zugfahrt ware ja billiger)
			[01;31m(SU[00m
				(SIMPX
					(VF dann)
					(LK fahren)
					(MF wir lieber mit dem zug))[01;31m)[00m))[01;36m)[00m
Step:Clause Attachment
{'new_parent': 'SU', 'new_family': ['SIMPX', 'SIMPX'], 'mover info': [('SIMPX', (0, 6))], 'old_family': ['SIMPX', 'SU'], 'start left siblings': [], 'auto preterminals': ('KOUS', 'ART', 'NN', 'VAFIN', 'ADV', 'ADJD', 'ADV', 'VVFIN', 'PPER', 'ADV', 'APPR', 'ART', 'NN'), 'start right siblings': ['SU'], 'end left siblings': [], 'auto preterminal span': (0, 13), 'movers': ['SIMPX'], 'old_parent': 'TURN', 'end right siblings': ['SIMPX'], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP obwohl die zugfahrt ware ja billiger dann fahren wir lieber mit dem zug)

Sentence 607:
3 Initial errors
0 on fringe, 1 iterations
3 Error:UNSET move
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SU[00m
	(TOP [01;33m(SIMPX[00m
		(TURN
			(SU acht uhr zwanzig)
			[01;31m(SU[00m
				(DM ja)
				(SIMPX das ist) [01;33mSIMPX)[00m
				(SIMPX das ist okay)[01;31m)[00m))[01;36m)[00m
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SU', 'DM', 'SIMPX', 'SIMPX'], 'mover info': [('SU', (0, 3))], 'old_family': ['SU', 'SU'], 'start left siblings': [], 'auto preterminals': ('CARD', 'NN', 'CARD', 'PTKANT', 'PDS', 'VAFIN', 'PDS', 'VAFIN', 'ADJD'), 'start right siblings': ['SU'], 'end left siblings': [], 'auto preterminal span': (0, 9), 'adding node already present': False, 'movers': ['SU'], 'old_parent': 'TURN', 'added and moved': True, 'end right siblings': ['DM', 'SIMPX', 'SIMPX'], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'SIMPX'}
(TOP acht uhr zwanzig ja das ist das ist okay)

Sentence 608:
6 Initial errors
0 on fringe, 4 iterations
2 Error:Different label
2 Error:Modifier Attachment
1 Error:Clause Attachment
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU ja dann ist das in ordnung)
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK meine)
				(NF
					(SIMPX
						(VF das schutzenfest)
						(LK hatte)
						[01;36m(MF[00m
							[01;31m(MF[00m
								(NX mich)
								(ADVX naturlich)
								(ADVX auch)[01;31m)[00m
							[01;36m(ADJX[00m [01;31m(VC[00m
								[01;31m(VXINF[00m
									(VVPP gereizt)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m)))
			(SIMPX aber der theaterbesuch ist okay)[01;31m)[00m))
Step:Different label
{'family': ['VF', 'LK', 'MF', 'ADJX'], 'auto preterminal span': (14, 15), 'span': (14, 15), 'subtrees': ['VXINF'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('VVPP',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('VC', 'ADJX')}
(TOP
	(TURN
		(SU ja dann ist das in ordnung)
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK meine)
				(NF
					(SIMPX
						(VF das schutzenfest)
						(LK hatte)
						[01;36m(MF[00m
							[01;31m(MF[00m
								(NX mich)
								(ADVX naturlich)
								(ADVX auch)[01;31m)[00m
							(ADJX
								[01;31m(VXINF[00m
									(VVPP gereizt)[01;31m)[00m)[01;36m)[00m)))
			(SIMPX aber der theaterbesuch ist okay)[01;31m)[00m))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'ADVX', 'ADVX', 'ADJX'], 'mover info': [('ADJX', (14, 15))], 'old_family': ['VF', 'LK', 'MF', 'ADJX'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('ART', 'NN', 'VAFIN', 'PPER', 'ADV', 'ADV', 'VVPP'), 'start right siblings': [], 'end left siblings': ['NX', 'ADVX', 'ADVX'], 'auto preterminal span': (8, 15), 'movers': ['ADJX'], 'old_parent': 'SIMPX', 'POS confusion': ('VVPP', 'VVPP'), 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU ja dann ist das in ordnung)
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK meine)
				(NF
					(SIMPX
						(VF das schutzenfest)
						(LK hatte)
						(MF
							(NX mich)
							(ADVX naturlich)
							(ADVX auch)
							(ADJX
								[01;31m(VXINF[00m
									(VVPP gereizt)[01;31m)[00m)))))
			(SIMPX aber der theaterbesuch ist okay)[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADV', 'VAFIN', 'PDS', 'APPR', 'NN', 'PPER', 'VVFIN', 'ART', 'NN', 'VAFIN', 'PPER', 'ADV', 'ADV', 'VVPP', 'KON', 'ART', 'NN', 'VAFIN', 'ADJD'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 20), 'span': (6, 20), 'left siblings': ['SU'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU ja dann ist das in ordnung)
		(SIMPX
			(VF ich)
			(LK meine)
			(NF
				(SIMPX
					(VF das schutzenfest)
					(LK hatte)
					(MF
						(NX mich)
						(ADVX naturlich)
						(ADVX auch)
						(ADJX
							[01;31m(VXINF[00m
								(VVPP gereizt)[01;31m)[00m)))))
		(SIMPX aber der theaterbesuch ist okay)))
Step:Single Word Phrase
{'subtrees': ['VVPP'], 'family': ['VXINF'], 'over_word': True, 'over words': True, 'auto preterminals': ('VVPP',), 'right siblings': [], 'parent': 'ADJX', 'auto preterminal span': (14, 15), 'span': (14, 15), 'left siblings': [], 'label': 'VXINF', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP ja dann ist das in ordnung ich meine das schutzenfest hatte mich naturlich auch gereizt aber der theaterbesuch ist okay)

Sentence 609:
4 Initial errors
0 on fringe, 3 iterations
2 Error:UNSET move
1 Error:Clause Attachment
1 Error:Clause Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SU[00m
	(TOP
		(TURN
			[01;31m(SU[00m
				(DM ja)
				[01;33m(SIMPX[00m (SIMPX habe ich)[01;31m)[00m
			[01;31m(SU[00m
				(SIMPX habe ich dabei) [01;33mSIMPX)[00m
				(DM ja)[01;31m)[00m))[01;36m)[00m
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SU', 'SIMPX', 'DM'], 'mover info': [('SU', (0, 3))], 'old_family': ['SU', 'SU'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'VAFIN', 'PPER', 'VAFIN', 'PPER', 'PTKVZ', 'PTKANT'), 'start right siblings': ['SU'], 'end left siblings': [], 'auto preterminal span': (0, 7), 'movers': ['SU'], 'old_parent': 'TURN', 'end right siblings': ['SIMPX', 'DM'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			[01;31m(SU[00m
				(DM ja)
				[01;33m(SIMPX[00m (SIMPX habe ich)[01;31m)[00m
			(SIMPX habe ich dabei) [01;33mSIMPX)[00m
			(DM ja))))
Step:Clause Attachment
{'subtrees': ['DM', 'SIMPX'], 'family': ['SU', 'SIMPX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'VAFIN', 'PPER', 'VAFIN', 'PPER', 'PTKVZ', 'PTKANT'), 'right siblings': ['SIMPX', 'DM'], 'parent': 'SU', 'auto preterminal span': (0, 7), 'span': (0, 3), 'left siblings': [], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM ja)
			[01;36m(SIMPX[00m
				(SIMPX habe ich)
				(SIMPX habe ich dabei)[01;36m)[00m
			(DM ja))))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['DM', 'SIMPX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'PPER', 'VAFIN', 'PPER', 'PTKVZ'), 'right siblings': [(DM (PTKANT ja))], 'left siblings': [(DM (PTKANT ja))], 'auto preterminal span': (1, 6), 'span': (1, 6), 'parent': 'SU', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP ja habe ich habe ich dabei ja)

Sentence 610:
7 Initial errors
0 on fringe, 5 iterations
2 Error:Different label
2 Error:UNSET move
1 Error:Clause Attachment
1 Error:UNSET remove
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			(SIMPX das ist auch preislich in ordnung)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF da)
				(LK bin)
				(MF ich mit einverstanden)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;36m(NF[00m [01;31m(DM[00m
				(PX
					(APPR auf)
					(NX jeden fall))[01;31m)[00m[01;36m)[00m
			[01;36m(SU[00m
				(DM
					(PTKANT ja))[01;36m)[00m[01;31m)[00m))
Step:Different label
{'family': ['NF', 'DM'], 'auto preterminal span': (12, 15), 'span': (12, 15), 'subtrees': ['PX'], 'parent': 'SU', 'over_word': False, 'auto preterminals': ('APPR', 'PIDAT', 'NN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('DM', 'NF')}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			(SIMPX das ist auch preislich in ordnung)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF da)
				(LK bin)
				(MF ich mit einverstanden)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(NF auf jeden fall)
			[01;36m(SU[00m
				(DM
					(PTKANT ja))[01;36m)[00m[01;31m)[00m))
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SIMPX', 'NF'], 'mover info': [('NF', (12, 15))], 'old_family': ['NF', 'DM'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'PDS', 'VAFIN', 'ADV', 'ADV', 'APPR', 'NN', 'ADV', 'VAFIN', 'PPER', 'PROP', 'ADJD', 'APPR', 'PIDAT', 'NN', 'PTKANT'), 'start right siblings': ['DM'], 'end left siblings': ['SIMPX'], 'auto preterminal span': (0, 16), 'movers': ['NF'], 'old_parent': 'SU', 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			(SIMPX das ist auch preislich in ordnung)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF da)
				(LK bin)
				(MF ich mit einverstanden)[01;31m)[00m
			(NF auf jeden fall)[01;31m)[00m
		(SU ja)))
Step:Clause Attachment
{'subtrees': ['DM', 'SIMPX'], 'family': ['SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PDS', 'VAFIN', 'ADV', 'ADV', 'APPR', 'NN', 'ADV', 'VAFIN', 'PPER', 'PROP', 'ADJD', 'APPR', 'PIDAT', 'NN', 'PTKANT'), 'right siblings': ['SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 16), 'span': (0, 7), 'left siblings': [], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX das ist auch preislich in ordnung)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF da)
				(LK bin)
				(MF ich mit einverstanden)[01;31m)[00m
			(NF auf jeden fall)[01;31m)[00m
		(SU ja)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['SIMPX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'PROP', 'ADJD', 'APPR', 'PIDAT', 'NN'), 'right siblings': ['NF'], 'parent': 'SU', 'auto preterminal span': (7, 15), 'span': (7, 12), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX das ist auch preislich in ordnung)
		[01;31m(SU[00m
			(VF da)
			(LK bin)
			(MF ich mit einverstanden)
			(NF auf jeden fall)[01;31m)[00m
		(SU ja)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'NF'], 'family': ['DM', 'SIMPX', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PDS', 'VAFIN', 'ADV', 'ADV', 'APPR', 'NN', 'ADV', 'VAFIN', 'PPER', 'PROP', 'ADJD', 'APPR', 'PIDAT', 'NN', 'PTKANT'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 16), 'span': (7, 15), 'left siblings': ['DM', 'SIMPX'], 'label': 'SU', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ja das ist auch preislich in ordnung da bin ich mit einverstanden auf jeden fall ja)

Sentence 611:
3 Initial errors
0 on fringe, 2 iterations
2 Error:UNSET move
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SU[00m
	(TOP
		(TURN
			[01;31m(SU[00m
				(DM
					(ITJ okay))[01;31m)[00m
			[01;31m(SU[00m
				(SIMPX
					(VF dann)
					(LK mache)
					(MF ich die sache)
					(VC feste)
					(NF im reiseburo))[01;31m)[00m))[01;36m)[00m
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SU', 'SIMPX'], 'mover info': [('SU', (0, 1))], 'old_family': ['SU', 'SU'], 'start left siblings': [], 'auto preterminals': ('ITJ', 'ADV', 'VVFIN', 'PPER', 'ART', 'NN', 'PTKVZ', 'APPRART', 'NN'), 'start right siblings': ['SU'], 'end left siblings': [], 'auto preterminal span': (0, 9), 'movers': ['SU'], 'old_parent': 'TURN', 'POS confusion': ('ITJ', 'ITJ'), 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			[01;31m(SU[00m
				(DM
					(ITJ okay))[01;31m)[00m
			(SIMPX dann mache ich die sache feste im reiseburo))))
Step:Unary
{'subtrees': ['DM'], 'family': ['SU', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'VVFIN', 'PPER', 'ART', 'NN', 'PTKVZ', 'APPRART', 'NN'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 9), 'span': (0, 1), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP okay dann mache ich die sache feste im reiseburo)

Sentence 612:
7 Initial errors
0 on fringe, 5 iterations
3 Error:UNSET move
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:Unary
1 Error:Clause Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			(DM okay)
			(DM frau schmidt)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX musten uns das zu machen)
			[01;36m(SU[00m
				(DM also)
				[01;31m(SIMPX[00m
					[01;36m(SIMPX[00m
						(VF ich)
						(LK habe)
						(MF hier schon eine liste)
						(VC liegen)[01;36m)[00m
					(DM und zwar)
					[01;31m(NF[00m
						(NX
							(NX der zugverbindungen)
							(PX von bonn nach hannover))[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX was meinen sie denn)
			(SIMPX wann sollten wir fahren)[01;31m)[00m))
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SIMPX', 'DM', 'SIMPX', 'DM', 'NF'], 'mover info': [('DM', (17, 19)), ('NF', (19, 25))], 'old_family': ['VF', 'LK', 'MF', 'VC', 'DM', 'NF'], 'start left siblings': ['VF', 'LK', 'MF', 'VC'], 'auto preterminals': ('VMFIN', 'PRF', 'PDS', 'PTKZU', 'VVINF', 'ADV', 'PPER', 'VAFIN', 'ADV', 'ADV', 'ART', 'NN', 'VVINF', 'KON', 'ADV', 'ART', 'NN', 'APPR', 'NE', 'APPR', 'NE'), 'start right siblings': [], 'end left siblings': ['SIMPX', 'DM', 'SIMPX'], 'auto preterminal span': (4, 25), 'adding node already present': False, 'movers': ['DM', 'NF'], 'old_parent': 'SIMPX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'SU'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			(DM okay)
			(DM frau schmidt)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX musten uns das zu machen)
			(SU
				(DM also)
				(SIMPX ich habe hier schon eine liste liegen)
				(DM und zwar)
				[01;31m(NF[00m
					(NX
						(NX der zugverbindungen)
						(PX von bonn nach hannover))[01;31m)[00m)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX was meinen sie denn)
			(SIMPX wann sollten wir fahren)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['DM', 'DM', 'DM'], 'family': ['SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'NN', 'NE', 'VMFIN', 'PRF', 'PDS', 'PTKZU', 'VVINF', 'ADV', 'PPER', 'VAFIN', 'ADV', 'ADV', 'ART', 'NN', 'VVINF', 'KON', 'ADV', 'ART', 'NN', 'APPR', 'NE', 'APPR', 'NE', 'PWS', 'VVFIN', 'PPER', 'ADV', 'PWAV', 'VMFIN', 'PPER', 'VVINF'), 'right siblings': ['SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 33), 'span': (0, 4), 'left siblings': [], 'label': 'SU', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM okay)
		(DM frau schmidt)
		[01;31m(SU[00m
			(SIMPX musten uns das zu machen)
			(SU
				(DM also)
				(SIMPX ich habe hier schon eine liste liegen)
				(DM und zwar)
				[01;31m(NF[00m
					(NX
						(NX der zugverbindungen)
						(PX von bonn nach hannover))[01;31m)[00m)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX was meinen sie denn)
			(SIMPX wann sollten wir fahren)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['SIMPX', 'SU'], 'family': ['DM', 'DM', 'DM', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'NN', 'NE', 'VMFIN', 'PRF', 'PDS', 'PTKZU', 'VVINF', 'ADV', 'PPER', 'VAFIN', 'ADV', 'ADV', 'ART', 'NN', 'VVINF', 'KON', 'ADV', 'ART', 'NN', 'APPR', 'NE', 'APPR', 'NE', 'PWS', 'VVFIN', 'PPER', 'ADV', 'PWAV', 'VMFIN', 'PPER', 'VVINF'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 33), 'span': (4, 25), 'left siblings': ['DM', 'DM', 'DM'], 'label': 'SU', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM okay)
		(DM frau schmidt)
		(SIMPX musten uns das zu machen)
		(SU
			(DM also)
			(SIMPX ich habe hier schon eine liste liegen)
			(DM und zwar)
			[01;31m(NF[00m
				(NX
					(NX der zugverbindungen)
					(PX von bonn nach hannover))[01;31m)[00m)
		[01;31m(SU[00m
			(SIMPX was meinen sie denn)
			(SIMPX wann sollten wir fahren)[01;31m)[00m))
Step:Unary
{'subtrees': ['NX'], 'family': ['DM', 'SIMPX', 'DM', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPER', 'VAFIN', 'ADV', 'ADV', 'ART', 'NN', 'VVINF', 'KON', 'ADV', 'ART', 'NN', 'APPR', 'NE', 'APPR', 'NE'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (9, 25), 'span': (19, 25), 'left siblings': ['DM', 'SIMPX', 'DM'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM okay)
		(DM frau schmidt)
		(SIMPX musten uns das zu machen)
		(SU also ich habe hier schon eine liste liegen und zwar der zugverbindungen von bonn nach hannover)
		[01;31m(SU[00m
			(SIMPX was meinen sie denn)
			(SIMPX wann sollten wir fahren)[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['DM', 'DM', 'DM', 'SIMPX', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'NN', 'NE', 'VMFIN', 'PRF', 'PDS', 'PTKZU', 'VVINF', 'ADV', 'PPER', 'VAFIN', 'ADV', 'ADV', 'ART', 'NN', 'VVINF', 'KON', 'ADV', 'ART', 'NN', 'APPR', 'NE', 'APPR', 'NE', 'PWS', 'VVFIN', 'PPER', 'ADV', 'PWAV', 'VMFIN', 'PPER', 'VVINF'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 33), 'span': (25, 33), 'left siblings': ['DM', 'DM', 'DM', 'SIMPX', 'SU'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP ja okay frau schmidt musten uns das zu machen also ich habe hier schon eine liste liegen und zwar der zugverbindungen von bonn nach hannover was meinen sie denn wann sollten wir fahren)

Sentence 613:
6 Initial errors
0 on fringe, 3 iterations
3 Error:Modifier Attachment
2 Error:Clause Attachment
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM ja)
			[01;36m(SIMPX[00m
				[01;31m(SIMPX[00m
					(LK denke)
					[01;33m(MF[00m (MF ich auch)[01;31m)[00m
				[01;31m(ADJX[00m
					(ADVX aber)
					(ADVX nicht)
					(ADJX zu fruh)[01;31m)[00m[01;36m)[00m) [01;33mMF)[00m
		[01;31m(SU[00m
			[01;36m(SU[00m
				(SIMPX
					(VF ich)
					(LK schaue)
					(MF mal gerade))[01;36m)[00m
			(DM ja)
			(SIMPX acht uhr zwanzig ist mir ganz recht)[01;31m)[00m))
Step:Modifier Attachment
{'new_parent': 'SIMPX', 'new_family': ['LK', 'MF', 'ADJX'], 'mover info': [('ADJX', (4, 8))], 'old_family': ['DM', 'SIMPX', 'ADJX'], 'start left siblings': ['DM', 'SIMPX'], 'auto preterminals': ('PTKANT', 'VVFIN', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'PTKA', 'ADJD'), 'start right siblings': [], 'end left siblings': ['LK', 'MF'], 'auto preterminal span': (0, 8), 'adding node already present': False, 'movers': ['ADJX'], 'old_parent': 'SU', 'added and moved': True, 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'SU'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX
				(LK denke)
				(MF
					(MF ich auch)
					[01;31m(ADJX[00m
						(ADVX aber)
						(ADVX nicht)
						(ADJX zu fruh)[01;31m)[00m)))
		[01;31m(SU[00m
			[01;36m(SU[00m
				(SIMPX
					(VF ich)
					(LK schaue)
					(MF mal gerade))[01;36m)[00m
			(DM ja)
			(SIMPX acht uhr zwanzig ist mir ganz recht)[01;31m)[00m))
Step:Clause Attachment
{'new_parent': 'TURN', 'new_family': ['SU', 'SU', 'DM', 'SIMPX'], 'mover info': [('DM', (12, 13)), ('SIMPX', (13, 20))], 'old_family': ['SIMPX', 'DM', 'SIMPX'], 'start left siblings': ['SIMPX'], 'auto preterminals': ('PTKANT', 'VVFIN', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'PTKA', 'ADJD', 'PPER', 'VVFIN', 'ADV', 'ADV', 'PTKANT', 'CARD', 'NN', 'CARD', 'VAFIN', 'PPER', 'ADV', 'ADJD'), 'start right siblings': [], 'end left siblings': ['SU', 'SU'], 'auto preterminal span': (0, 20), 'movers': ['DM', 'SIMPX'], 'old_parent': 'SU', 'end right siblings': [], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX
				(LK denke)
				(MF
					(MF ich auch)
					[01;31m(ADJX[00m
						(ADVX aber)
						(ADVX nicht)
						(ADJX zu fruh)[01;31m)[00m)))
		(SU ich schaue mal gerade)
		(DM ja)
		(SIMPX acht uhr zwanzig ist mir ganz recht)))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'ADVX', 'ADJX'], 'family': ['MF', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV', 'ADV', 'PTKNEG', 'PTKA', 'ADJD'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (2, 8), 'span': (4, 8), 'left siblings': ['MF'], 'label': 'ADJX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP ja denke ich auch aber nicht zu fruh ich schaue mal gerade ja acht uhr zwanzig ist mir ganz recht)

Sentence 614:
13 Initial errors
0 on fringe, 12 iterations
2 Error:UNSET move
1 Error:UNSET remove
1 Error:Clause Attachment
1 Error:UNSET remove
1 Error:Modifier Attachment
1 Error:Unary
1 Error:UNSET remove
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:Clause Attachment
1 Error:UNSET add
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			(DM okay)[01;31m)[00m
		[01;31m(SU[00m
			(DM ja)
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF dann)
				(LK habe)
				(MF
					(NX ich)
					(NX mir)
					(ADVX da)
					(NX mich)
					(ADVX da)
					(ADVX auch)
					(ADVX noch)
					[01;31m(ADJX[00m
						(NX so ein bischen)
						(ADJD schlau)[01;31m)[00m)
				[01;31m(VC[00m [01;33m(VC[00m
					(VXINF
						(VVPP gemacht))[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK konnte) [01;33mVC)[00m
				(MF ja auch nach der veranstaltung noch was)
				(VC unternehmen)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF was)
				(LK halten)
				[01;33m(MF[00m (MF sie davon)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF ich)
				(LK dachte)
				(MF mehr an theaterbesuch im ballhof)[01;31m)[00m [01;33mMF)[00m
			(SIMPX da kommen auch die andern kollegen mit)[01;31m)[00m))
Step:UNSET move
{'new_parent': 'VC', 'new_family': ['VXINF', 'LK'], 'mover info': [('LK', (18, 19))], 'old_family': ['LK', 'MF', 'VC'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'ITJ', 'PTKANT', 'KON', 'ADV', 'VAFIN', 'PPER', 'PRF', 'ADV', 'PRF', 'ADV', 'ADV', 'ADV', 'ADV', 'ART', 'PIS', 'ADJD', 'VVPP', 'VMFIN', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'PIS', 'VVINF', 'PWS', 'VVFIN', 'PPER', 'PROP', 'PPER', 'VVFIN', 'ADV', 'APPR', 'NN', 'APPRART', 'NE', 'ADV', 'VVFIN', 'ADV', 'ART', 'ADJA', 'NN', 'PTKVZ'), 'start right siblings': ['MF', 'VC'], 'end left siblings': ['VXINF'], 'auto preterminal span': (0, 45), 'movers': ['LK'], 'old_parent': 'SIMPX', 'POS confusion': ('VMFIN', 'VMFIN'), 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			(DM okay)[01;31m)[00m
		[01;31m(SU[00m
			(DM ja)
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF dann)
				(LK habe)
				(MF
					(NX ich)
					(NX mir)
					(ADVX da)
					(NX mich)
					(ADVX da)
					(ADVX auch)
					(ADVX noch)
					[01;31m(ADJX[00m
						(NX so ein bischen)
						(ADJD schlau)[01;31m)[00m)
				(VC gemacht konnte)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(MF ja auch nach der veranstaltung noch was)
				(VC unternehmen)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF was)
				(LK halten)
				[01;33m(MF[00m (MF sie davon)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF ich)
				(LK dachte)
				(MF mehr an theaterbesuch im ballhof)[01;31m)[00m [01;33mMF)[00m
			(SIMPX da kommen auch die andern kollegen mit)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['DM', 'DM'], 'family': ['SU', 'SU', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'PTKANT', 'KON', 'ADV', 'VAFIN', 'PPER', 'PRF', 'ADV', 'PRF', 'ADV', 'ADV', 'ADV', 'ADV', 'ART', 'PIS', 'ADJD', 'VVPP', 'VMFIN', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'PIS', 'VVINF', 'PWS', 'VVFIN', 'PPER', 'PROP', 'PPER', 'VVFIN', 'ADV', 'APPR', 'NN', 'APPRART', 'NE', 'ADV', 'VVFIN', 'ADV', 'ART', 'ADJA', 'NN', 'PTKVZ'), 'right siblings': ['SU', 'SU', 'SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 45), 'span': (0, 2), 'left siblings': [], 'label': 'SU', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM okay)
		[01;31m(SU[00m
			(DM ja)
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF dann)
				(LK habe)
				(MF
					(NX ich)
					(NX mir)
					(ADVX da)
					(NX mich)
					(ADVX da)
					(ADVX auch)
					(ADVX noch)
					[01;31m(ADJX[00m
						(NX so ein bischen)
						(ADJD schlau)[01;31m)[00m)
				(VC gemacht konnte)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(MF ja auch nach der veranstaltung noch was)
				(VC unternehmen)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF was)
				(LK halten)
				[01;33m(MF[00m (MF sie davon)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF ich)
				(LK dachte)
				(MF mehr an theaterbesuch im ballhof)[01;31m)[00m [01;33mMF)[00m
			(SIMPX da kommen auch die andern kollegen mit)[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['DM', 'SIMPX'], 'family': ['DM', 'DM', 'SU', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'PTKANT', 'KON', 'ADV', 'VAFIN', 'PPER', 'PRF', 'ADV', 'PRF', 'ADV', 'ADV', 'ADV', 'ADV', 'ART', 'PIS', 'ADJD', 'VVPP', 'VMFIN', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'PIS', 'VVINF', 'PWS', 'VVFIN', 'PPER', 'PROP', 'PPER', 'VVFIN', 'ADV', 'APPR', 'NN', 'APPRART', 'NE', 'ADV', 'VVFIN', 'ADV', 'ART', 'ADJA', 'NN', 'PTKVZ'), 'right siblings': ['SU', 'SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 45), 'span': (2, 19), 'left siblings': ['DM', 'DM'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM okay)
		(DM ja)
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF dann)
			(LK habe)
			(MF
				(NX ich)
				(NX mir)
				(ADVX da)
				(NX mich)
				(ADVX da)
				(ADVX auch)
				(ADVX noch)
				[01;31m(ADJX[00m
					(NX so ein bischen)
					(ADJD schlau)[01;31m)[00m)
			(VC gemacht konnte)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(MF ja auch nach der veranstaltung noch was)
				(VC unternehmen)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF was)
				(LK halten)
				[01;33m(MF[00m (MF sie davon)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF ich)
				(LK dachte)
				(MF mehr an theaterbesuch im ballhof)[01;31m)[00m [01;33mMF)[00m
			(SIMPX da kommen auch die andern kollegen mit)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['KOORD', 'VF', 'LK', 'MF', 'VC'], 'family': ['DM', 'DM', 'DM', 'SIMPX', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'PTKANT', 'KON', 'ADV', 'VAFIN', 'PPER', 'PRF', 'ADV', 'PRF', 'ADV', 'ADV', 'ADV', 'ADV', 'ART', 'PIS', 'ADJD', 'VVPP', 'VMFIN', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'PIS', 'VVINF', 'PWS', 'VVFIN', 'PPER', 'PROP', 'PPER', 'VVFIN', 'ADV', 'APPR', 'NN', 'APPRART', 'NE', 'ADV', 'VVFIN', 'ADV', 'ART', 'ADJA', 'NN', 'PTKVZ'), 'right siblings': ['SU', 'SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 45), 'span': (3, 19), 'left siblings': ['DM', 'DM', 'DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM okay)
		(DM ja)
		(KOORD und)
		(VF dann)
		(LK habe)
		(MF
			(NX ich)
			(NX mir)
			(ADVX da)
			(NX mich)
			(ADVX da)
			(ADVX auch)
			(ADVX noch)
			[01;31m(ADJX[00m
				(NX so ein bischen)
				(ADJD schlau)[01;31m)[00m)
		(VC gemacht konnte)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(MF ja auch nach der veranstaltung noch was)
				(VC unternehmen)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF was)
				(LK halten)
				[01;33m(MF[00m (MF sie davon)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF ich)
				(LK dachte)
				(MF mehr an theaterbesuch im ballhof)[01;31m)[00m [01;33mMF)[00m
			(SIMPX da kommen auch die andern kollegen mit)[01;31m)[00m))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADJD'], 'family': ['NX', 'NX', 'ADVX', 'NX', 'ADVX', 'ADVX', 'ADVX', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'PRF', 'ADV', 'PRF', 'ADV', 'ADV', 'ADV', 'ADV', 'ART', 'PIS', 'ADJD'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (6, 17), 'span': (13, 17), 'left siblings': ['NX', 'NX', 'ADVX', 'NX', 'ADVX', 'ADVX', 'ADVX'], 'label': 'ADJX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM okay)
		(DM ja)
		(KOORD und)
		(VF dann)
		(LK habe)
		(MF ich mir da mich da auch noch so ein bischen schlau)
		(VC gemacht konnte)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(MF ja auch nach der veranstaltung noch was)
				(VC unternehmen)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF was)
				(LK halten)
				[01;33m(MF[00m (MF sie davon)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF ich)
				(LK dachte)
				(MF mehr an theaterbesuch im ballhof)[01;31m)[00m [01;33mMF)[00m
			(SIMPX da kommen auch die andern kollegen mit)[01;31m)[00m))
Step:Unary
{'subtrees': ['MF', 'VC'], 'family': ['SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'PIS', 'VVINF'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (19, 27), 'span': (19, 27), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM okay)
		(DM ja)
		(KOORD und)
		(VF dann)
		(LK habe)
		(MF ich mir da mich da auch noch so ein bischen schlau)
		(VC gemacht konnte)
		[01;31m(SU[00m
			(MF ja auch nach der veranstaltung noch was)
			(VC unternehmen)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF was)
				(LK halten)
				[01;33m(MF[00m (MF sie davon)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF ich)
				(LK dachte)
				(MF mehr an theaterbesuch im ballhof)[01;31m)[00m [01;33mMF)[00m
			(SIMPX da kommen auch die andern kollegen mit)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['MF', 'VC'], 'family': ['DM', 'DM', 'DM', 'KOORD', 'VF', 'LK', 'MF', 'VC', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'PTKANT', 'KON', 'ADV', 'VAFIN', 'PPER', 'PRF', 'ADV', 'PRF', 'ADV', 'ADV', 'ADV', 'ADV', 'ART', 'PIS', 'ADJD', 'VVPP', 'VMFIN', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'PIS', 'VVINF', 'PWS', 'VVFIN', 'PPER', 'PROP', 'PPER', 'VVFIN', 'ADV', 'APPR', 'NN', 'APPRART', 'NE', 'ADV', 'VVFIN', 'ADV', 'ART', 'ADJA', 'NN', 'PTKVZ'), 'right siblings': ['SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 45), 'span': (19, 27), 'left siblings': ['DM', 'DM', 'DM', 'KOORD', 'VF', 'LK', 'MF', 'VC'], 'label': 'SU', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM okay)
		(DM ja)
		(KOORD und)
		(VF dann)
		(LK habe)
		(MF ich mir da mich da auch noch so ein bischen schlau)
		(VC gemacht konnte)
		(MF ja auch nach der veranstaltung noch was)
		(VC unternehmen)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF was)
				(LK halten)
				[01;33m(MF[00m (MF sie davon)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF ich)
				(LK dachte)
				(MF mehr an theaterbesuch im ballhof)[01;31m)[00m [01;33mMF)[00m
			(SIMPX da kommen auch die andern kollegen mit)[01;31m)[00m))
Step:Unary
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PWS', 'VVFIN', 'PPER', 'PROP'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (27, 31), 'span': (27, 31), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM okay)
		(DM ja)
		(KOORD und)
		(VF dann)
		(LK habe)
		(MF ich mir da mich da auch noch so ein bischen schlau)
		(VC gemacht konnte)
		(MF ja auch nach der veranstaltung noch was)
		(VC unternehmen)
		[01;31m(SU[00m
			(VF was)
			(LK halten)
			[01;33m(MF[00m (MF sie davon)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF ich)
				(LK dachte)
				(MF mehr an theaterbesuch im ballhof)[01;31m)[00m [01;33mMF)[00m
			(SIMPX da kommen auch die andern kollegen mit)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['DM', 'DM', 'DM', 'KOORD', 'VF', 'LK', 'MF', 'VC', 'MF', 'VC', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'PTKANT', 'KON', 'ADV', 'VAFIN', 'PPER', 'PRF', 'ADV', 'PRF', 'ADV', 'ADV', 'ADV', 'ADV', 'ART', 'PIS', 'ADJD', 'VVPP', 'VMFIN', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'PIS', 'VVINF', 'PWS', 'VVFIN', 'PPER', 'PROP', 'PPER', 'VVFIN', 'ADV', 'APPR', 'NN', 'APPRART', 'NE', 'ADV', 'VVFIN', 'ADV', 'ART', 'ADJA', 'NN', 'PTKVZ'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 45), 'span': (27, 31), 'left siblings': ['DM', 'DM', 'DM', 'KOORD', 'VF', 'LK', 'MF', 'VC', 'MF', 'VC'], 'label': 'SU', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM okay)
		(DM ja)
		(KOORD und)
		(VF dann)
		(LK habe)
		(MF ich mir da mich da auch noch so ein bischen schlau)
		(VC gemacht konnte)
		(MF ja auch nach der veranstaltung noch was)
		(VC unternehmen)
		(VF was)
		(LK halten)
		[01;33m(MF[00m (MF sie davon)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF ich)
				(LK dachte)
				(MF mehr an theaterbesuch im ballhof)[01;31m)[00m [01;33mMF)[00m
			(SIMPX da kommen auch die andern kollegen mit)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'APPR', 'NN', 'APPRART', 'NE', 'ADV', 'VVFIN', 'ADV', 'ART', 'ADJA', 'NN', 'PTKVZ'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (31, 45), 'span': (31, 38), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM okay)
		(DM ja)
		(KOORD und)
		(VF dann)
		(LK habe)
		(MF ich mir da mich da auch noch so ein bischen schlau)
		(VC gemacht konnte)
		(MF ja auch nach der veranstaltung noch was)
		(VC unternehmen)
		(VF was)
		(LK halten)
		[01;33m(MF[00m (MF sie davon)
		[01;31m(SU[00m
			(VF ich)
			(LK dachte)
			(MF mehr an theaterbesuch im ballhof) [01;33mMF)[00m
			(SIMPX da kommen auch die andern kollegen mit)[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['VF', 'LK', 'MF', 'SIMPX'], 'family': ['DM', 'DM', 'DM', 'KOORD', 'VF', 'LK', 'MF', 'VC', 'MF', 'VC', 'VF', 'LK', 'MF', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'PTKANT', 'KON', 'ADV', 'VAFIN', 'PPER', 'PRF', 'ADV', 'PRF', 'ADV', 'ADV', 'ADV', 'ADV', 'ART', 'PIS', 'ADJD', 'VVPP', 'VMFIN', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'PIS', 'VVINF', 'PWS', 'VVFIN', 'PPER', 'PROP', 'PPER', 'VVFIN', 'ADV', 'APPR', 'NN', 'APPRART', 'NE', 'ADV', 'VVFIN', 'ADV', 'ART', 'ADJA', 'NN', 'PTKVZ'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 45), 'span': (31, 45), 'left siblings': ['DM', 'DM', 'DM', 'KOORD', 'VF', 'LK', 'MF', 'VC', 'MF', 'VC', 'VF', 'LK', 'MF'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM okay)
		(DM ja)
		(KOORD und)
		(VF dann)
		(LK habe)
		(MF ich mir da mich da auch noch so ein bischen schlau)
		(VC gemacht konnte)
		(MF ja auch nach der veranstaltung noch was)
		(VC unternehmen)
		(VF was)
		(LK halten)
		[01;36m(MF[00m
			(MF sie davon)
			(VF ich)
			(LK dachte)
			(MF mehr an theaterbesuch im ballhof)[01;36m)[00m
		(SIMPX da kommen auch die andern kollegen mit)))
Step:UNSET add
{'subtrees': ['MF', 'VF', 'LK', 'MF'], 'family': ['DM', 'DM', 'DM', 'KOORD', 'VF', 'LK', 'MF', 'VC', 'MF', 'VC', 'VF', 'LK', 'MF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'PROP', 'PPER', 'VVFIN', 'ADV', 'APPR', 'NN', 'APPRART', 'NE'), 'right siblings': [(SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VVFIN kommen))) (MF (ADVX (ADV auch)) (NX (ART die) (ADJX (ADJA andern)) (NN kollegen))) (VC (PTKVZ mit)))], 'left siblings': [(DM (PTKANT ja)), (DM (ITJ okay)), (DM (PTKANT ja)), (KOORD (KON und)), (VF (ADVX (ADV dann))), (LK (VXFIN (VAFIN habe))), (MF (NX (PPER ich)) (NX (PRF mir)) (ADVX (ADV da)) (NX (PRF mich)) (ADVX (ADV da)) (ADVX (ADV auch)) (ADVX (ADV noch)) (NX (ADVX (ADV so)) (ART ein) (PIS bischen)) (ADJD schlau)), (VC (VXINF (VVPP gemacht)) (LK (VXFIN (VMFIN konnte)))), (MF (ADVX (ADV ja)) (ADVX (ADV auch)) (PX (APPR nach) (NX (ART der) (NN veranstaltung))) (ADVX (ADV noch)) (NX (PIS was))), (VC (VXINF (VVINF unternehmen))), (VF (NX (PWS was))), (LK (VXFIN (VVFIN halten)))], 'auto preterminal span': (29, 38), 'span': (29, 38), 'parent': 'TURN', 'label': 'MF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP ja okay ja und dann habe ich mir da mich da auch noch so ein bischen schlau gemacht konnte ja auch nach der veranstaltung noch was unternehmen was halten sie davon ich dachte mehr an theaterbesuch im ballhof da kommen auch die andern kollegen mit)

Sentence 615:
12 Initial errors
0 on fringe, 5 iterations
6 Error:Modifier Attachment
3 Error:UNSET move
1 Error:Unary
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SU[00m
	(TOP
		(TURN
			[01;31m(SU[00m
				[01;36m(SU[00m
					(DM
						(ITJ ach)
						(ADVX so))[01;36m)[00m
				(DM ach gott)[01;31m)[00m
			[01;31m(SU[00m [01;33m(SIMPX[00m
				[01;31m(SIMPX[00m
					(LK haben)
					[01;31m(MF[00m
						[01;36m(MF[00m
							(NX sie)
							(NX eine liste) [01;33mSIMPX)[00m[01;36m)[00m
						[01;36m(VF[00m
							(ADVX [01;33m(SIMPX[00m
								(ADV da))[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
			[01;31m(SU[00m
				[01;31m(SIMPX[00m
					(LK konnen)
					(MF sie mir die eben)
					(VC reichen)[01;31m)[00m[01;31m)[00m)) [01;33mSIMPX)[00m[01;36m)[00m
Step:Modifier Attachment
{'new_parent': 'SIMPX', 'new_family': ['ADVX', 'LK', 'MF', 'VC'], 'mover info': [('ADVX', (8, 9))], 'old_family': ['NX', 'NX', 'ADVX'], 'start left siblings': ['NX', 'NX'], 'auto preterminals': ('ITJ', 'ADV', 'ITJ', 'NE', 'VAFIN', 'PPER', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'PPER', 'PDS', 'ADV', 'VVINF'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 15), 'movers': ['ADVX'], 'old_parent': 'MF', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['LK', 'MF', 'VC'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
[01;36m(SU[00m
	(TOP
		(TURN
			[01;31m(SU[00m
				[01;36m(SU[00m
					(DM
						(ITJ ach)
						(ADVX so))[01;36m)[00m
				(DM ach gott)[01;31m)[00m
			[01;31m(SU[00m
				(SIMPX
					(LK haben)
					(MF sie eine liste))[01;31m)[00m
			[01;31m(SU[00m
				(SIMPX
					[01;36m(VF[00m
						(ADVX
							(ADV da))[01;36m)[00m
					(LK konnen)
					(MF sie mir die eben)
					(VC reichen))[01;31m)[00m))[01;36m)[00m
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['SU', 'DM', 'SU', 'SU'], 'mover info': [('DM', (2, 4))], 'old_family': ['DM', 'DM'], 'start left siblings': ['DM'], 'auto preterminals': ('ITJ', 'ADV', 'ITJ', 'NE', 'VAFIN', 'PPER', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'PPER', 'PDS', 'ADV', 'VVINF'), 'start right siblings': [], 'end left siblings': ['SU'], 'auto preterminal span': (0, 15), 'adding node already present': True, 'movers': ['DM'], 'old_parent': 'SU', 'added and moved': True, 'end right siblings': ['SU', 'SU'], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'VF'}
(TOP
	(SU
		(TURN
			(SU ach so)
			(DM ach gott)
			[01;31m(SU[00m
				(SIMPX
					(LK haben)
					(MF sie eine liste))[01;31m)[00m
			[01;31m(SU[00m
				(SIMPX
					[01;36m(VF[00m
						(ADVX
							(ADV da))[01;36m)[00m
					(LK konnen)
					(MF sie mir die eben)
					(VC reichen))[01;31m)[00m)))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['VF', 'LK', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV',), 'right siblings': [(LK (VXFIN (VMFIN konnen))), (MF (NX (PPER sie)) (NX (PPER mir)) (NX (PDS die)) (ADVX (ADV eben))), (VC (VXINF (VVINF reichen)))], 'left siblings': [], 'auto preterminal span': (8, 9), 'span': (8, 9), 'parent': 'SIMPX', 'label': 'VF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(SU
		(TURN
			(SU ach so)
			(DM ach gott)
			[01;31m(SU[00m
				(SIMPX
					(LK haben)
					(MF sie eine liste))[01;31m)[00m
			[01;31m(SU[00m
				(SIMPX
					(VF da)
					(LK konnen)
					(MF sie mir die eben)
					(VC reichen))[01;31m)[00m)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SU', 'DM', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'ITJ', 'NE', 'VAFIN', 'PPER', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'PPER', 'PDS', 'ADV', 'VVINF'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 15), 'span': (4, 8), 'left siblings': ['SU', 'DM'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(SU
		(TURN
			(SU ach so)
			(DM ach gott)
			(SIMPX haben sie eine liste)
			[01;31m(SU[00m
				(SIMPX
					(VF da)
					(LK konnen)
					(MF sie mir die eben)
					(VC reichen))[01;31m)[00m)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SU', 'DM', 'SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'ITJ', 'NE', 'VAFIN', 'PPER', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'PPER', 'PDS', 'ADV', 'VVINF'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 15), 'span': (8, 15), 'left siblings': ['SU', 'DM', 'SIMPX'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ach so ach gott haben sie eine liste da konnen sie mir die eben reichen)

Sentence 616:
15 Initial errors
0 on fringe, 12 iterations
2 Error:UNSET move
2 Error:UNSET move
2 Error:Clause Attachment
1 Error:UNSET add
1 Error:Unary
1 Error:Unary
1 Error:Unary
1 Error:Clause Attachment
1 Error:Unary
1 Error:Clause Attachment
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM
				(ITJ ah)
				(PTKANT ja))[01;31m)[00m
		[01;31m(SU[00m
			(DM
				(PTKANT danke))[01;31m)[00m
		[01;31m(SU[00m
			(DM ja)
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(VF ich)
				(LK denke)
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						(LV das hotel savoy) [01;33mSIMPX)[00m
						[01;36m(SIMPX[00m
							(VF das)
							(LK ist)
							(MF ganz nett)[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF da)
				(LK war)
				(MF ein kollege letztens drin)
				(VC gewesen))[01;31m)[00m
		[01;36m(SU[00m
			[01;31m(SU[00m
				(SIMPX
					[01;36m(NX[00m
						[01;36m(LV[00m
							(VF der)
							(LK meinte)[01;36m)[00m[01;36m)[00m
					[01;31m(NF[00m
						(SIMPX
							(VF das)
							(LK ware)
							(MF in ordnung))[01;31m)[00m)[01;31m)[00m
			[01;31m(SU[00m
				(DM
					(PTKANT ja))[01;31m)[00m[01;36m)[00m))
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SU', 'DM'], 'mover info': [('SU', (20, 26))], 'old_family': ['SU', 'SU', 'SU', 'SU', 'SU', 'SU'], 'start left siblings': ['SU', 'SU', 'SU', 'SU'], 'auto preterminals': ('ITJ', 'PTKANT', 'PTKANT', 'PTKANT', 'PPER', 'VVFIN', 'ART', 'NN', 'NE', 'PDS', 'VAFIN', 'ADV', 'ADJD', 'ADV', 'VAFIN', 'ART', 'NN', 'ADV', 'PROP', 'VAPP', 'PDS', 'VVFIN', 'PDS', 'VAFIN', 'APPR', 'NN', 'PTKANT'), 'start right siblings': ['SU'], 'end left siblings': [], 'auto preterminal span': (0, 27), 'movers': ['SU'], 'old_parent': 'TURN', 'end right siblings': ['DM'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM
				(ITJ ah)
				(PTKANT ja))[01;31m)[00m
		[01;31m(SU[00m
			(DM
				(PTKANT danke))[01;31m)[00m
		[01;31m(SU[00m
			(DM ja)
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(VF ich)
				(LK denke)
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						(LV das hotel savoy) [01;33mSIMPX)[00m
						[01;36m(SIMPX[00m
							(VF das)
							(LK ist)
							(MF ganz nett)[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF da)
				(LK war)
				(MF ein kollege letztens drin)
				(VC gewesen))[01;31m)[00m
		(SU
			[01;31m(SU[00m
				(SIMPX
					[01;36m(NX[00m
						[01;36m(LV[00m
							(VF der)
							(LK meinte)[01;36m)[00m[01;36m)[00m
					[01;31m(NF[00m
						(SIMPX
							(VF das)
							(LK ware)
							(MF in ordnung))[01;31m)[00m)[01;31m)[00m
			(DM ja))))
Step:UNSET move
{'new_parent': 'NF', 'new_family': ['LV', 'SIMPX'], 'mover info': [('LV', (6, 9))], 'old_family': ['LV', 'VF', 'LK', 'MF'], 'start left siblings': [], 'auto preterminals': ('ART', 'NN', 'NE', 'PDS', 'VAFIN', 'ADV', 'ADJD'), 'start right siblings': ['VF', 'LK', 'MF'], 'end left siblings': [], 'auto preterminal span': (6, 13), 'movers': ['LV'], 'old_parent': 'SIMPX', 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM
				(ITJ ah)
				(PTKANT ja))[01;31m)[00m
		[01;31m(SU[00m
			(DM
				(PTKANT danke))[01;31m)[00m
		[01;31m(SU[00m
			(DM ja)
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(VF ich)
				(LK denke)
				[01;31m(NF[00m
					(LV das hotel savoy) [01;33mSIMPX)[00m
					(SIMPX das ist ganz nett)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF da)
				(LK war)
				(MF ein kollege letztens drin)
				(VC gewesen))[01;31m)[00m
		(SU
			[01;31m(SU[00m
				(SIMPX
					[01;36m(NX[00m
						[01;36m(LV[00m
							(VF der)
							(LK meinte)[01;36m)[00m[01;36m)[00m
					[01;31m(NF[00m
						(SIMPX
							(VF das)
							(LK ware)
							(MF in ordnung))[01;31m)[00m)[01;31m)[00m
			(DM ja))))
Step:Clause Attachment
{'new_parent': 'SU', 'new_family': ['SIMPX', 'SIMPX'], 'mover info': [('SIMPX', (9, 13))], 'old_family': ['LV', 'SIMPX'], 'start left siblings': ['LV'], 'auto preterminals': ('ITJ', 'PTKANT', 'PTKANT', 'PTKANT', 'PPER', 'VVFIN', 'ART', 'NN', 'NE', 'PDS', 'VAFIN', 'ADV', 'ADJD', 'ADV', 'VAFIN', 'ART', 'NN', 'ADV', 'PROP', 'VAPP', 'PDS', 'VVFIN', 'PDS', 'VAFIN', 'APPR', 'NN', 'PTKANT'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 27), 'movers': ['SIMPX'], 'old_parent': 'NF', 'end right siblings': ['SIMPX'], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM
				(ITJ ah)
				(PTKANT ja))[01;31m)[00m
		[01;31m(SU[00m
			(DM
				(PTKANT danke))[01;31m)[00m
		[01;31m(SU[00m
			(DM ja)
			(SIMPX
				(VF ich)
				(LK denke)
				[01;31m(NF[00m
					(LV
						(NX
							(ART das)
							(NX hotel savoy)))[01;31m)[00m)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX das ist ganz nett)
			(SIMPX da war ein kollege letztens drin gewesen)[01;31m)[00m
		(SU
			[01;31m(SU[00m
				(SIMPX
					[01;36m(NX[00m
						[01;36m(LV[00m
							(VF der)
							(LK meinte)[01;36m)[00m[01;36m)[00m
					[01;31m(NF[00m
						(SIMPX
							(VF das)
							(LK ware)
							(MF in ordnung))[01;31m)[00m)[01;31m)[00m
			(DM ja))))
Step:UNSET add
{'subtrees': ['VF', 'LK'], 'family': ['LV', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VVFIN'), 'right siblings': [(NF (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VAFIN ware))) (MF (PX (APPR in) (NX (NN ordnung))))))], 'left siblings': [], 'auto preterminal span': (20, 22), 'span': (20, 22), 'parent': 'SIMPX', 'label': 'LV', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM
				(ITJ ah)
				(PTKANT ja))[01;31m)[00m
		[01;31m(SU[00m
			(DM
				(PTKANT danke))[01;31m)[00m
		[01;31m(SU[00m
			(DM ja)
			(SIMPX
				(VF ich)
				(LK denke)
				[01;31m(NF[00m
					(LV
						(NX
							(ART das)
							(NX hotel savoy)))[01;31m)[00m)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX das ist ganz nett)
			(SIMPX da war ein kollege letztens drin gewesen)[01;31m)[00m
		(SU
			[01;31m(SU[00m
				(SIMPX
					[01;36m(NX[00m
						(LV
							(VF der)
							(LK meinte))[01;36m)[00m
					[01;31m(NF[00m
						(SIMPX
							(VF das)
							(LK ware)
							(MF in ordnung))[01;31m)[00m)[01;31m)[00m
			(DM ja))))
Step:Unary
{'subtrees': ['LV'], 'family': ['NX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VVFIN'), 'right siblings': [(NF (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VAFIN ware))) (MF (PX (APPR in) (NX (NN ordnung))))))], 'left siblings': [], 'auto preterminal span': (20, 22), 'span': (20, 22), 'parent': 'SIMPX', 'label': 'NX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM
				(ITJ ah)
				(PTKANT ja))[01;31m)[00m
		[01;31m(SU[00m
			(DM
				(PTKANT danke))[01;31m)[00m
		[01;31m(SU[00m
			(DM ja)
			(SIMPX
				(VF ich)
				(LK denke)
				[01;31m(NF[00m
					(LV
						(NX
							(ART das)
							(NX hotel savoy)))[01;31m)[00m)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX das ist ganz nett)
			(SIMPX da war ein kollege letztens drin gewesen)[01;31m)[00m
		(SU
			[01;31m(SU[00m
				(SIMPX
					(NX der meinte)
					[01;31m(NF[00m
						(SIMPX
							(VF das)
							(LK ware)
							(MF in ordnung))[01;31m)[00m)[01;31m)[00m
			(DM ja))))
Step:Unary
{'subtrees': ['DM'], 'family': ['SU', 'SU', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PTKANT', 'PTKANT', 'PTKANT', 'PPER', 'VVFIN', 'ART', 'NN', 'NE', 'PDS', 'VAFIN', 'ADV', 'ADJD', 'ADV', 'VAFIN', 'ART', 'NN', 'ADV', 'PROP', 'VAPP', 'PDS', 'VVFIN', 'PDS', 'VAFIN', 'APPR', 'NN', 'PTKANT'), 'right siblings': ['SU', 'SU', 'SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 27), 'span': (0, 2), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ah ja)
		[01;31m(SU[00m
			(DM
				(PTKANT danke))[01;31m)[00m
		[01;31m(SU[00m
			(DM ja)
			(SIMPX
				(VF ich)
				(LK denke)
				[01;31m(NF[00m
					(LV
						(NX
							(ART das)
							(NX hotel savoy)))[01;31m)[00m)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX das ist ganz nett)
			(SIMPX da war ein kollege letztens drin gewesen)[01;31m)[00m
		(SU
			[01;31m(SU[00m
				(SIMPX
					(NX der meinte)
					[01;31m(NF[00m
						(SIMPX
							(VF das)
							(LK ware)
							(MF in ordnung))[01;31m)[00m)[01;31m)[00m
			(DM ja))))
Step:Unary
{'subtrees': ['DM'], 'family': ['DM', 'SU', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PTKANT', 'PTKANT', 'PTKANT', 'PPER', 'VVFIN', 'ART', 'NN', 'NE', 'PDS', 'VAFIN', 'ADV', 'ADJD', 'ADV', 'VAFIN', 'ART', 'NN', 'ADV', 'PROP', 'VAPP', 'PDS', 'VVFIN', 'PDS', 'VAFIN', 'APPR', 'NN', 'PTKANT'), 'right siblings': ['SU', 'SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 27), 'span': (2, 3), 'left siblings': ['DM'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ah ja)
		(DM danke)
		[01;31m(SU[00m
			(DM ja)
			(SIMPX
				(VF ich)
				(LK denke)
				[01;31m(NF[00m
					(LV
						(NX
							(ART das)
							(NX hotel savoy)))[01;31m)[00m)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX das ist ganz nett)
			(SIMPX da war ein kollege letztens drin gewesen)[01;31m)[00m
		(SU
			[01;31m(SU[00m
				(SIMPX
					(NX der meinte)
					[01;31m(NF[00m
						(SIMPX
							(VF das)
							(LK ware)
							(MF in ordnung))[01;31m)[00m)[01;31m)[00m
			(DM ja))))
Step:Clause Attachment
{'subtrees': ['DM', 'SIMPX'], 'family': ['DM', 'DM', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PTKANT', 'PTKANT', 'PTKANT', 'PPER', 'VVFIN', 'ART', 'NN', 'NE', 'PDS', 'VAFIN', 'ADV', 'ADJD', 'ADV', 'VAFIN', 'ART', 'NN', 'ADV', 'PROP', 'VAPP', 'PDS', 'VVFIN', 'PDS', 'VAFIN', 'APPR', 'NN', 'PTKANT'), 'right siblings': ['SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 27), 'span': (3, 9), 'left siblings': ['DM', 'DM'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ah ja)
		(DM danke)
		(DM ja)
		(SIMPX
			(VF ich)
			(LK denke)
			[01;31m(NF[00m
				(LV
					(NX
						(ART das)
						(NX hotel savoy)))[01;31m)[00m)
		[01;31m(SU[00m
			(SIMPX das ist ganz nett)
			(SIMPX da war ein kollege letztens drin gewesen)[01;31m)[00m
		(SU
			[01;31m(SU[00m
				(SIMPX
					(NX der meinte)
					[01;31m(NF[00m
						(SIMPX
							(VF das)
							(LK ware)
							(MF in ordnung))[01;31m)[00m)[01;31m)[00m
			(DM ja))))
Step:Unary
{'subtrees': ['LV'], 'family': ['VF', 'LK', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ART', 'NN', 'NE'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (4, 9), 'span': (6, 9), 'left siblings': ['VF', 'LK'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ah ja)
		(DM danke)
		(DM ja)
		(SIMPX ich denke das hotel savoy)
		[01;31m(SU[00m
			(SIMPX das ist ganz nett)
			(SIMPX da war ein kollege letztens drin gewesen)[01;31m)[00m
		(SU
			[01;31m(SU[00m
				(SIMPX
					(NX der meinte)
					[01;31m(NF[00m
						(SIMPX
							(VF das)
							(LK ware)
							(MF in ordnung))[01;31m)[00m)[01;31m)[00m
			(DM ja))))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['DM', 'DM', 'DM', 'SIMPX', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PTKANT', 'PTKANT', 'PTKANT', 'PPER', 'VVFIN', 'ART', 'NN', 'NE', 'PDS', 'VAFIN', 'ADV', 'ADJD', 'ADV', 'VAFIN', 'ART', 'NN', 'ADV', 'PROP', 'VAPP', 'PDS', 'VVFIN', 'PDS', 'VAFIN', 'APPR', 'NN', 'PTKANT'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 27), 'span': (9, 20), 'left siblings': ['DM', 'DM', 'DM', 'SIMPX'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ah ja)
		(DM danke)
		(DM ja)
		(SIMPX ich denke das hotel savoy)
		(SIMPX das ist ganz nett)
		(SIMPX da war ein kollege letztens drin gewesen)
		(SU
			[01;31m(SU[00m
				(SIMPX
					(NX der meinte)
					[01;31m(NF[00m
						(SIMPX
							(VF das)
							(LK ware)
							(MF in ordnung))[01;31m)[00m)[01;31m)[00m
			(DM ja))))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SU', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VVFIN', 'PDS', 'VAFIN', 'APPR', 'NN', 'PTKANT'), 'right siblings': ['DM'], 'parent': 'SU', 'auto preterminal span': (20, 27), 'span': (20, 26), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ah ja)
		(DM danke)
		(DM ja)
		(SIMPX ich denke das hotel savoy)
		(SIMPX das ist ganz nett)
		(SIMPX da war ein kollege letztens drin gewesen)
		(SU
			(SIMPX
				(NX der meinte)
				[01;31m(NF[00m
					(SIMPX
						(VF das)
						(LK ware)
						(MF in ordnung))[01;31m)[00m)
			(DM ja))))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['NX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VVFIN', 'PDS', 'VAFIN', 'APPR', 'NN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (20, 26), 'span': (22, 26), 'left siblings': ['NX'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ah ja danke ja ich denke das hotel savoy das ist ganz nett da war ein kollege letztens drin gewesen der meinte das ware in ordnung ja)

Sentence 617:
13 Initial errors
0 on fringe, 8 iterations
3 Error:NP Attachment
2 Error:Single Word Phrase
2 Error:Modifier Attachment
2 Error:NP Attachment
1 Error:Clause Attachment
1 Error:Unary
1 Error:Clause Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU okay dann kummern sie sich drum ne)
		[01;31m(SU[00m
			[01;31m(DM[00m
				(ADVX dann)
				[01;36m(DM[00m
					(PTKANT ja)[01;36m)[00m[01;31m)[00m
			(SIMPX ich habe ja noch eine telefonnummer von dem hotel)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK denke)
				(MF mal)
				(NF da konnte ich das dann festmachen))[01;31m)[00m
		[01;31m(SU[00m [01;33m(SIMPX[00m
			[01;31m(SIMPX[00m
				[01;36m(C[00m [01;31m(PARORD[00m
					(KOUS weil)[01;31m)[00m[01;36m)[00m
				(LV das mit dem reiseburo)
				(VF das)
				(LK ist)
				[01;31m(MF[00m [01;33m(MF[00m
					(ADVX immer)
					[01;31m(NX[00m
						(NX so ein hinundher) [01;33mMF) SIMPX)[00m
						(NX so ein hickhack)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			(SIMPX das mus nicht sein)[01;31m)[00m
		[01;31m(SU[00m
			(DM
				(PTKANT ja))[01;31m)[00m))
Step:NP Attachment
{'new_parent': 'SIMPX', 'new_family': ['PARORD', 'LV', 'VF', 'LK', 'MF', 'NX'], 'mover info': [('NX', (38, 41))], 'old_family': ['NX', 'NX'], 'start left siblings': ['NX'], 'auto preterminals': ('KOUS', 'PDS', 'APPR', 'ART', 'NN', 'PDS', 'VAFIN', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'ART', 'NN'), 'start right siblings': [], 'end left siblings': ['PARORD', 'LV', 'VF', 'LK', 'MF'], 'auto preterminal span': (27, 41), 'movers': ['NX'], 'old_parent': 'NX', 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU okay dann kummern sie sich drum ne)
		[01;31m(SU[00m
			[01;31m(DM[00m
				(ADVX dann)
				[01;36m(DM[00m
					(PTKANT ja)[01;36m)[00m[01;31m)[00m
			(SIMPX ich habe ja noch eine telefonnummer von dem hotel)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK denke)
				(MF mal)
				(NF da konnte ich das dann festmachen))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;36m(SIMPX[00m
					[01;36m(C[00m [01;31m(PARORD[00m
						(KOUS weil)[01;31m)[00m[01;36m)[00m
					(LV das mit dem reiseburo)
					(VF das)
					(LK ist)
					(MF immer so ein hinundher)[01;36m)[00m
				(NX so ein hickhack)[01;31m)[00m
			(SIMPX das mus nicht sein)[01;31m)[00m
		[01;31m(SU[00m
			(DM
				(PTKANT ja))[01;31m)[00m))
Step:Single Word Phrase
{'family': ['C', 'LV', 'VF', 'LK', 'MF', 'NX'], 'auto preterminal span': (27, 28), 'span': (27, 28), 'subtrees': ['KOUS'], 'parent': 'SIMPX', 'over_word': True, 'auto preterminals': ('KOUS',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('PARORD', 'C')}
(TOP
	(TURN
		(SU okay dann kummern sie sich drum ne)
		[01;31m(SU[00m
			[01;31m(DM[00m
				(ADVX dann)
				[01;36m(DM[00m
					(PTKANT ja)[01;36m)[00m[01;31m)[00m
			(SIMPX ich habe ja noch eine telefonnummer von dem hotel)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK denke)
				(MF mal)
				(NF da konnte ich das dann festmachen))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;36m(SIMPX[00m
					(C weil)
					(LV das mit dem reiseburo)
					(VF das)
					(LK ist)
					(MF immer so ein hinundher)[01;36m)[00m
				(NX so ein hickhack)[01;31m)[00m
			(SIMPX das mus nicht sein)[01;31m)[00m
		[01;31m(SU[00m
			(DM
				(PTKANT ja))[01;31m)[00m))
Step:Modifier Attachment
{'new_parent': 'SU', 'new_family': ['ADVX', 'DM', 'SIMPX'], 'mover info': [('ADVX', (7, 8))], 'old_family': ['ADVX', 'PTKANT'], 'start left siblings': [], 'auto preterminals': ('ADV', 'PTKANT', 'PPER', 'VAFIN', 'ADV', 'ADV', 'ART', 'NN', 'APPR', 'ART', 'NN'), 'start right siblings': ['PTKANT'], 'end left siblings': [], 'auto preterminal span': (7, 18), 'movers': ['ADVX'], 'old_parent': 'DM', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['DM', 'SIMPX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU okay dann kummern sie sich drum ne)
		[01;31m(SU[00m
			(ADVX dann)
			(DM ja)
			(SIMPX ich habe ja noch eine telefonnummer von dem hotel)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK denke)
				(MF mal)
				(NF da konnte ich das dann festmachen))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;36m(SIMPX[00m
					(C weil)
					(LV das mit dem reiseburo)
					(VF das)
					(LK ist)
					(MF immer so ein hinundher)[01;36m)[00m
				(NX so ein hickhack)[01;31m)[00m
			(SIMPX das mus nicht sein)[01;31m)[00m
		[01;31m(SU[00m
			(DM
				(PTKANT ja))[01;31m)[00m))
Step:NP Attachment
{'new_parent': 'SU', 'new_family': ['SIMPX', 'NX', 'SIMPX'], 'mover info': [('NX', (38, 41))], 'old_family': ['C', 'LV', 'VF', 'LK', 'MF', 'NX'], 'start left siblings': ['C', 'LV', 'VF', 'LK', 'MF'], 'auto preterminals': ('KOUS', 'PDS', 'APPR', 'ART', 'NN', 'PDS', 'VAFIN', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'ART', 'NN', 'PDS', 'VMFIN', 'PTKNEG', 'VAINF'), 'start right siblings': [], 'end left siblings': ['SIMPX'], 'auto preterminal span': (27, 45), 'movers': ['NX'], 'old_parent': 'SIMPX', 'end right siblings': ['SIMPX'], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU okay dann kummern sie sich drum ne)
		[01;31m(SU[00m
			(ADVX dann)
			(DM ja)
			(SIMPX ich habe ja noch eine telefonnummer von dem hotel)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK denke)
				(MF mal)
				(NF da konnte ich das dann festmachen))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX weil das mit dem reiseburo das ist immer so ein hinundher)
			(NX so ein hickhack)
			(SIMPX das mus nicht sein)[01;31m)[00m
		[01;31m(SU[00m
			(DM
				(PTKANT ja))[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['ADVX', 'DM', 'SIMPX'], 'family': ['SU', 'SU', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'VVFIN', 'PPER', 'PRF', 'PROP', 'ITJ', 'ADV', 'PTKANT', 'PPER', 'VAFIN', 'ADV', 'ADV', 'ART', 'NN', 'APPR', 'ART', 'NN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'VMFIN', 'PPER', 'PDS', 'ADV', 'VVINF', 'KOUS', 'PDS', 'APPR', 'ART', 'NN', 'PDS', 'VAFIN', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'ART', 'NN', 'PDS', 'VMFIN', 'PTKNEG', 'VAINF', 'PTKANT'), 'right siblings': ['SU', 'SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 46), 'span': (7, 18), 'left siblings': ['SU'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU okay dann kummern sie sich drum ne)
		(ADVX dann)
		(DM ja)
		(SIMPX ich habe ja noch eine telefonnummer von dem hotel)
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK denke)
				(MF mal)
				(NF da konnte ich das dann festmachen))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX weil das mit dem reiseburo das ist immer so ein hinundher)
			(NX so ein hickhack)
			(SIMPX das mus nicht sein)[01;31m)[00m
		[01;31m(SU[00m
			(DM
				(PTKANT ja))[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SU', 'ADVX', 'DM', 'SIMPX', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'VVFIN', 'PPER', 'PRF', 'PROP', 'ITJ', 'ADV', 'PTKANT', 'PPER', 'VAFIN', 'ADV', 'ADV', 'ART', 'NN', 'APPR', 'ART', 'NN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'VMFIN', 'PPER', 'PDS', 'ADV', 'VVINF', 'KOUS', 'PDS', 'APPR', 'ART', 'NN', 'PDS', 'VAFIN', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'ART', 'NN', 'PDS', 'VMFIN', 'PTKNEG', 'VAINF', 'PTKANT'), 'right siblings': ['SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 46), 'span': (18, 27), 'left siblings': ['SU', 'ADVX', 'DM', 'SIMPX'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU okay dann kummern sie sich drum ne)
		(ADVX dann)
		(DM ja)
		(SIMPX ich habe ja noch eine telefonnummer von dem hotel)
		(SIMPX ich denke mal da konnte ich das dann festmachen)
		[01;31m(SU[00m
			(SIMPX weil das mit dem reiseburo das ist immer so ein hinundher)
			(NX so ein hickhack)
			(SIMPX das mus nicht sein)[01;31m)[00m
		[01;31m(SU[00m
			(DM
				(PTKANT ja))[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'NX', 'SIMPX'], 'family': ['SU', 'ADVX', 'DM', 'SIMPX', 'SIMPX', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'VVFIN', 'PPER', 'PRF', 'PROP', 'ITJ', 'ADV', 'PTKANT', 'PPER', 'VAFIN', 'ADV', 'ADV', 'ART', 'NN', 'APPR', 'ART', 'NN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'VMFIN', 'PPER', 'PDS', 'ADV', 'VVINF', 'KOUS', 'PDS', 'APPR', 'ART', 'NN', 'PDS', 'VAFIN', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'ART', 'NN', 'PDS', 'VMFIN', 'PTKNEG', 'VAINF', 'PTKANT'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 46), 'span': (27, 45), 'left siblings': ['SU', 'ADVX', 'DM', 'SIMPX', 'SIMPX'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU okay dann kummern sie sich drum ne)
		(ADVX dann)
		(DM ja)
		(SIMPX ich habe ja noch eine telefonnummer von dem hotel)
		(SIMPX ich denke mal da konnte ich das dann festmachen)
		(SIMPX weil das mit dem reiseburo das ist immer so ein hinundher)
		(NX so ein hickhack)
		(SIMPX das mus nicht sein)
		[01;31m(SU[00m
			(DM
				(PTKANT ja))[01;31m)[00m))
Step:Unary
{'subtrees': ['DM'], 'family': ['SU', 'ADVX', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'VVFIN', 'PPER', 'PRF', 'PROP', 'ITJ', 'ADV', 'PTKANT', 'PPER', 'VAFIN', 'ADV', 'ADV', 'ART', 'NN', 'APPR', 'ART', 'NN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'VMFIN', 'PPER', 'PDS', 'ADV', 'VVINF', 'KOUS', 'PDS', 'APPR', 'ART', 'NN', 'PDS', 'VAFIN', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'ART', 'NN', 'PDS', 'VMFIN', 'PTKNEG', 'VAINF', 'PTKANT'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 46), 'span': (45, 46), 'left siblings': ['SU', 'ADVX', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP okay dann kummern sie sich drum ne dann ja ich habe ja noch eine telefonnummer von dem hotel ich denke mal da konnte ich das dann festmachen weil das mit dem reiseburo das ist immer so ein hinundher so ein hickhack das mus nicht sein ja)

Sentence 618:
6 Initial errors
0 on fringe, 4 iterations
2 Error:Single Word Phrase
2 Error:PP Attachment
1 Error:Unary
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM guten tag)
			(SIMPX
				(VF hier)
				(LK ist)
				(MF
					[01;31m(NX[00m
						[01;36m(MF[00m
							(NX
								(NE meurer))[01;36m)[00m
						(PX aus bonn)[01;31m)[00m)))
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK brauche)
				(MF eine verbindung nach hannover))[01;31m)[00m
		[01;31m(SU[00m
			(DM und zwar)
			(PX fur den funfzehnten juli)
			(SIMPX
				(KOORD und)
				(VF ich)
				(LK muste)
				(MF
					(PX
						(PX um neun uhr morgens)
						[01;36m(ADJX[00m [01;31m(ADVX[00m
							(ADV ungefahr)[01;31m)[00m[01;36m)[00m)
					(ADVX da))
				(VC sein))[01;31m)[00m))
Step:Single Word Phrase
{'family': ['PX', 'ADJX'], 'auto preterminal span': (26, 27), 'span': (26, 27), 'subtrees': ['ADV'], 'parent': 'PX', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'ADJX')}
(TOP
	(TURN
		(SU
			(DM guten tag)
			(SIMPX
				(VF hier)
				(LK ist)
				(MF
					[01;31m(NX[00m
						[01;36m(MF[00m
							(NX
								(NE meurer))[01;36m)[00m
						(PX aus bonn)[01;31m)[00m)))
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK brauche)
				(MF eine verbindung nach hannover))[01;31m)[00m
		[01;31m(SU[00m
			(DM und zwar)
			(PX fur den funfzehnten juli)
			(SIMPX und ich muste um neun uhr morgens ungefahr da sein)[01;31m)[00m))
Step:PP Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'PX'], 'mover info': [('PX', (5, 7))], 'old_family': ['NX', 'PX'], 'start left siblings': ['NX'], 'auto preterminals': ('ADV', 'VAFIN', 'NE', 'APPR', 'NE'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (2, 7), 'adding node already present': False, 'movers': ['PX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'MF'}
(TOP
	(TURN
		(SU guten tag hier ist meurer aus bonn)
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK brauche)
				(MF eine verbindung nach hannover))[01;31m)[00m
		[01;31m(SU[00m
			(DM und zwar)
			(PX fur den funfzehnten juli)
			(SIMPX und ich muste um neun uhr morgens ungefahr da sein)[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJA', 'NN', 'ADV', 'VAFIN', 'NE', 'APPR', 'NE', 'PPER', 'VVFIN', 'ART', 'NN', 'APPR', 'NE', 'KON', 'ADV', 'APPR', 'ART', 'ADJA', 'NN', 'KON', 'PPER', 'VMFIN', 'APPR', 'CARD', 'NN', 'ADV', 'ADV', 'ADV', 'VAINF'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 29), 'span': (7, 13), 'left siblings': ['SU'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU guten tag hier ist meurer aus bonn)
		(SIMPX ich brauche eine verbindung nach hannover)
		[01;31m(SU[00m
			(DM und zwar)
			(PX fur den funfzehnten juli)
			(SIMPX und ich muste um neun uhr morgens ungefahr da sein)[01;31m)[00m))
Step:PP Attachment
{'subtrees': ['DM', 'PX', 'SIMPX'], 'family': ['SU', 'SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJA', 'NN', 'ADV', 'VAFIN', 'NE', 'APPR', 'NE', 'PPER', 'VVFIN', 'ART', 'NN', 'APPR', 'NE', 'KON', 'ADV', 'APPR', 'ART', 'ADJA', 'NN', 'KON', 'PPER', 'VMFIN', 'APPR', 'CARD', 'NN', 'ADV', 'ADV', 'ADV', 'VAINF'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 29), 'span': (13, 29), 'left siblings': ['SU', 'SIMPX'], 'label': 'SU', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP guten tag hier ist meurer aus bonn ich brauche eine verbindung nach hannover und zwar fur den funfzehnten juli und ich muste um neun uhr morgens ungefahr da sein)

Sentence 619:
3 Initial errors
0 on fringe, 2 iterations
2 Error:PP Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU das kommt drauf an wann ich ankomme)
		(SU
			(DM also)
			(SIMPX
				(VF
					(SIMPX
						(C wenn)
						(MF
							(NX ich)
							[01;31m(NX[00m
								(PX mit dem flug)
								[01;36m(NX[00m
									(PDS das)[01;36m)[00m[01;31m)[00m
							[01;36m(VF[00m
								(PX
									(APPR an)
									(NX demselben tag))[01;36m)[00m)
						(VC packe)))
				(LK ginge)
				(MF das eigentlich auch)))))
Step:PP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'PX', 'NX', 'PX'], 'mover info': [('PX', (10, 13))], 'old_family': ['PX', 'PDS'], 'start left siblings': [], 'auto preterminals': ('PPER', 'APPR', 'ART', 'NN', 'PDS', 'APPR', 'PDAT', 'NN'), 'start right siblings': ['PDS'], 'end left siblings': ['NX'], 'auto preterminal span': (9, 17), 'movers': ['PX'], 'old_parent': 'NX', 'end right siblings': ['NX', 'PX'], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU das kommt drauf an wann ich ankomme)
		(SU
			(DM also)
			(SIMPX
				(VF
					(SIMPX
						(C wenn)
						(MF
							(NX ich)
							(PX mit dem flug)
							(NX das)
							[01;36m(VF[00m
								(PX
									(APPR an)
									(NX demselben tag))[01;36m)[00m)
						(VC packe)))
				(LK ginge)
				(MF das eigentlich auch)))))
Step:Unary
{'subtrees': ['PX'], 'family': ['NX', 'PX', 'NX', 'VF'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'PDAT', 'NN'), 'right siblings': [], 'left siblings': [(NX (PPER ich)), (PX (APPR mit) (NX (ART dem) (NN flug))), (NX (PDS das))], 'auto preterminal span': (14, 17), 'span': (14, 17), 'parent': 'MF', 'label': 'VF', 'classified_type': 'Unary', 'type': 'add'}
(TOP das kommt drauf an wann ich ankomme also wenn ich mit dem flug das an demselben tag packe ginge das eigentlich auch)

Sentence 620:
8 Initial errors
0 on fringe, 4 iterations
5 Error:Clause Attachment
1 Error:Modifier Attachment
1 Error:Modifier Attachment
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;36m(SU[00m
				(SIMPX
					(VF das)
					(LK ware)
					(MF knapp))[01;36m)[00m
			[01;33m(SU (SIMPX[00m (SIMPX aber es muste eigentlich auch)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(LK geht)
				(MF [01;33m(MF[00m
					(ADVX auch)
					(ADVX irgendwie)
					(ADVX noch)
					[01;31m(NX[00m
						(NX ein nachtexpres) [01;33mMF)[00m
						(KON oder)
						(ADVX so)[01;31m)[00m
					[01;31m(PX[00m
						(PROP dahin)[01;31m)[00m))[01;31m)[00m)) [01;33mSIMPX) SU)[00m
Step:Clause Attachment
{'new_parent': 'SU', 'new_family': ['SIMPX', 'SIMPX'], 'mover info': [('SIMPX', (3, 8))], 'old_family': ['SIMPX', 'SIMPX'], 'start left siblings': ['SIMPX'], 'auto preterminals': ('PDS', 'VAFIN', 'ADJD', 'KON', 'PPER', 'VMFIN', 'ADV', 'ADV', 'VVFIN', 'ADV', 'ADV', 'ADV', 'ART', 'NN', 'KON', 'ADV', 'PROP'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 17), 'adding node already present': False, 'movers': ['SIMPX'], 'old_parent': 'SU', 'added and moved': True, 'end right siblings': ['SIMPX'], 'classified_type': 'Clause Attachment', 'type': 'move', 'added label': 'SIMPX'}
(TOP
	(TURN
		(SU das ware knapp)
		(SIMPX
			(SU
				(SIMPX aber es muste eigentlich auch)
				(SIMPX
					(LK geht)
					(MF [01;33m(MF[00m
						(ADVX auch)
						(ADVX irgendwie)
						(ADVX noch)
						[01;31m(NX[00m
							(NX ein nachtexpres) [01;33mMF)[00m
							(KON oder)
							(ADVX so)[01;31m)[00m
						[01;31m(PX[00m
							(PROP dahin)[01;31m)[00m))))))
Step:Modifier Attachment
{'subtrees': ['NX', 'KON', 'ADVX'], 'family': ['ADVX', 'ADVX', 'ADVX', 'NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'ADV', 'ART', 'NN', 'KON', 'ADV', 'PROP'), 'right siblings': ['PX'], 'parent': 'MF', 'auto preterminal span': (9, 17), 'span': (12, 16), 'left siblings': ['ADVX', 'ADVX', 'ADVX'], 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU das ware knapp)
		(SIMPX
			(SU
				(SIMPX aber es muste eigentlich auch)
				(SIMPX
					(LK geht)
					(MF
						[01;36m(MF[00m
							(ADVX auch)
							(ADVX irgendwie)
							(ADVX noch)
							(NX ein nachtexpres)[01;36m)[00m
						(KON oder)
						(ADVX so)
						[01;31m(PX[00m
							(PROP dahin)[01;31m)[00m))))))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'ADVX', 'ADVX', 'NX'], 'family': ['MF', 'KON', 'ADVX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'ADV', 'ART', 'NN'), 'right siblings': [(KON oder), (ADVX (ADV so)), (PX (PROP dahin))], 'left siblings': [], 'auto preterminal span': (9, 14), 'span': (9, 14), 'parent': 'MF', 'label': 'MF', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU das ware knapp)
		(SIMPX
			(SU
				(SIMPX aber es muste eigentlich auch)
				(SIMPX
					(LK geht)
					(MF
						(MF auch irgendwie noch ein nachtexpres)
						(KON oder)
						(ADVX so)
						[01;31m(PX[00m
							(PROP dahin)[01;31m)[00m))))))
Step:Single Word Phrase
{'subtrees': ['PROP'], 'family': ['MF', 'KON', 'ADVX', 'PX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADV', 'ADV', 'ADV', 'ART', 'NN', 'KON', 'ADV', 'PROP'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (9, 17), 'span': (16, 17), 'left siblings': ['MF', 'KON', 'ADVX'], 'label': 'PX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP das ware knapp aber es muste eigentlich auch geht auch irgendwie noch ein nachtexpres oder so dahin)

Sentence 621:
0 Initial errors
0 on fringe, 0 iterations

Sentence 622:
20 Initial errors
0 on fringe, 11 iterations
6 Error:UNSET move
2 Error:Single Word Phrase
2 Error:Single Word Phrase
2 Error:Modifier Attachment
2 Error:Modifier Attachment
1 Error:PP Attachment
1 Error:Clause Attachment
1 Error:Clause Attachment
1 Error:Unary
1 Error:UNSET remove
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM also)
			(SIMPX
				(VF ich)
				(LK bleibe)
				[01;36m(MF[00m
					[01;31m(MF[00m
						(ADVX sowieso)
						(NX einige tage)[01;31m)[00m
					[01;36m(ADVX[00m [01;31m(VC[00m
						(PTKVZ da)[01;31m)[00m[01;36m)[00m[01;36m)[00m)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK bleibe)
				[01;36m(MF[00m
					[01;31m(MF[00m
						(NX
							(ADJX drei)
							(NN tage))[01;31m)[00m
					[01;36m(ADVX[00m [01;31m(VC[00m
						(PTKVZ da)[01;31m)[00m[01;36m)[00m[01;36m)[00m)
			(SIMPX das waren auf jeden fall dann mal drei nachte)[01;31m)[00m
		[01;36m(SIMPX[00m
			[01;36m(SU[00m
				[01;31m(SU[00m
					[01;31m(SIMPX[00m
						(VF wieviel)
						(LK kostet)
						[01;31m(MF[00m [01;33m(MF[00m
							(ADVX denn)
							[01;36m(NX[00m
								(NX ein hotel)
								(PX in hannover)[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
				[01;31m(SU[00m
					[01;31m(NX[00m
						(ADVX so)
						[01;31m(NX[00m
							(NN mittelklasse)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m)) [01;33mMF)[00m
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['ADVX', 'NX', 'PX', 'SU'], 'mover info': [('SU', (28, 30))], 'old_family': ['SU', 'SU', 'SU', 'SU'], 'start left siblings': ['SU', 'SU', 'SU'], 'auto preterminals': ('ADV', 'PPER', 'VVFIN', 'ADV', 'PIAT', 'NN', 'PTKVZ', 'PPER', 'VVFIN', 'CARD', 'NN', 'PTKVZ', 'PDS', 'VAFIN', 'APPR', 'PIDAT', 'NN', 'ADV', 'ADV', 'CARD', 'NN', 'PWS', 'VVFIN', 'ADV', 'ART', 'NN', 'APPR', 'NE', 'ADV', 'NN'), 'start right siblings': [], 'end left siblings': ['ADVX', 'NX', 'PX'], 'auto preterminal span': (0, 30), 'movers': ['SU'], 'old_parent': 'TURN', 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM also)
			(SIMPX
				(VF ich)
				(LK bleibe)
				[01;36m(MF[00m
					[01;31m(MF[00m
						(ADVX sowieso)
						(NX einige tage)[01;31m)[00m
					[01;36m(ADVX[00m [01;31m(VC[00m
						(PTKVZ da)[01;31m)[00m[01;36m)[00m[01;36m)[00m)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK bleibe)
				[01;36m(MF[00m
					[01;31m(MF[00m
						(NX
							(ADJX drei)
							(NN tage))[01;31m)[00m
					[01;36m(ADVX[00m [01;31m(VC[00m
						(PTKVZ da)[01;31m)[00m[01;36m)[00m[01;36m)[00m)
			(SIMPX das waren auf jeden fall dann mal drei nachte)[01;31m)[00m
		(SU
			(SIMPX
				(VF wieviel)
				(LK kostet)
				(MF
					(ADVX denn)
					[01;36m(NX[00m
						(NX ein hotel)
						(PX in hannover)[01;36m)[00m
					[01;31m(SU[00m
						[01;31m(NX[00m
							(ADVX so)
							[01;31m(NX[00m
								(NN mittelklasse)[01;31m)[00m[01;31m)[00m[01;31m)[00m)))))
Step:Single Word Phrase
{'family': ['VF', 'LK', 'MF', 'ADVX'], 'auto preterminal span': (6, 7), 'span': (6, 7), 'subtrees': ['PTKVZ'], 'parent': 'SIMPX', 'over_word': True, 'auto preterminals': ('PTKVZ',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VC', 'ADVX')}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM also)
			(SIMPX
				(VF ich)
				(LK bleibe)
				[01;36m(MF[00m
					[01;31m(MF[00m
						(ADVX sowieso)
						(NX einige tage)[01;31m)[00m
					(ADVX da)[01;36m)[00m)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK bleibe)
				[01;36m(MF[00m
					[01;31m(MF[00m
						(NX
							(ADJX drei)
							(NN tage))[01;31m)[00m
					[01;36m(ADVX[00m [01;31m(VC[00m
						(PTKVZ da)[01;31m)[00m[01;36m)[00m[01;36m)[00m)
			(SIMPX das waren auf jeden fall dann mal drei nachte)[01;31m)[00m
		(SU
			(SIMPX
				(VF wieviel)
				(LK kostet)
				(MF
					(ADVX denn)
					[01;36m(NX[00m
						(NX ein hotel)
						(PX in hannover)[01;36m)[00m
					[01;31m(SU[00m
						[01;31m(NX[00m
							(ADVX so)
							[01;31m(NX[00m
								(NN mittelklasse)[01;31m)[00m[01;31m)[00m[01;31m)[00m)))))
Step:Single Word Phrase
{'family': ['VF', 'LK', 'MF', 'ADVX'], 'auto preterminal span': (11, 12), 'span': (11, 12), 'subtrees': ['PTKVZ'], 'parent': 'SIMPX', 'over_word': True, 'auto preterminals': ('PTKVZ',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VC', 'ADVX')}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM also)
			(SIMPX
				(VF ich)
				(LK bleibe)
				[01;36m(MF[00m
					[01;31m(MF[00m
						(ADVX sowieso)
						(NX einige tage)[01;31m)[00m
					(ADVX da)[01;36m)[00m)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK bleibe)
				[01;36m(MF[00m
					[01;31m(MF[00m
						(NX
							(ADJX drei)
							(NN tage))[01;31m)[00m
					(ADVX da)[01;36m)[00m)
			(SIMPX das waren auf jeden fall dann mal drei nachte)[01;31m)[00m
		(SU
			(SIMPX
				(VF wieviel)
				(LK kostet)
				(MF
					(ADVX denn)
					[01;36m(NX[00m
						(NX ein hotel)
						(PX in hannover)[01;36m)[00m
					[01;31m(SU[00m
						[01;31m(NX[00m
							(ADVX so)
							[01;31m(NX[00m
								(NN mittelklasse)[01;31m)[00m[01;31m)[00m[01;31m)[00m)))))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['ADVX', 'NX', 'ADVX'], 'mover info': [('ADVX', (6, 7))], 'old_family': ['VF', 'LK', 'MF', 'ADVX'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'PIAT', 'NN', 'PTKVZ'), 'start right siblings': [], 'end left siblings': ['ADVX', 'NX'], 'auto preterminal span': (1, 7), 'movers': ['ADVX'], 'old_parent': 'SIMPX', 'POS confusion': ('PTKVZ', 'PTKVZ'), 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM also)
			(SIMPX ich bleibe sowieso einige tage da)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK bleibe)
				[01;36m(MF[00m
					[01;31m(MF[00m
						(NX
							(ADJX drei)
							(NN tage))[01;31m)[00m
					(ADVX da)[01;36m)[00m)
			(SIMPX das waren auf jeden fall dann mal drei nachte)[01;31m)[00m
		(SU
			(SIMPX
				(VF wieviel)
				(LK kostet)
				(MF
					(ADVX denn)
					[01;36m(NX[00m
						(NX ein hotel)
						(PX in hannover)[01;36m)[00m
					[01;31m(SU[00m
						[01;31m(NX[00m
							(ADVX so)
							[01;31m(NX[00m
								(NN mittelklasse)[01;31m)[00m[01;31m)[00m[01;31m)[00m)))))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'ADVX'], 'mover info': [('ADVX', (11, 12))], 'old_family': ['VF', 'LK', 'MF', 'ADVX'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('PPER', 'VVFIN', 'CARD', 'NN', 'PTKVZ'), 'start right siblings': [], 'end left siblings': ['NX'], 'auto preterminal span': (7, 12), 'movers': ['ADVX'], 'old_parent': 'SIMPX', 'POS confusion': ('PTKVZ', 'PTKVZ'), 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM also)
			(SIMPX ich bleibe sowieso einige tage da)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX ich bleibe drei tage da)
			(SIMPX das waren auf jeden fall dann mal drei nachte)[01;31m)[00m
		(SU
			(SIMPX
				(VF wieviel)
				(LK kostet)
				(MF
					(ADVX denn)
					[01;36m(NX[00m
						(NX ein hotel)
						(PX in hannover)[01;36m)[00m
					[01;31m(SU[00m
						[01;31m(NX[00m
							(ADVX so)
							[01;31m(NX[00m
								(NN mittelklasse)[01;31m)[00m[01;31m)[00m[01;31m)[00m)))))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['ADVX', 'NX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'APPR', 'NE'), 'right siblings': [(SU (NX (ADVX (ADV so)) (NX (NN mittelklasse))))], 'left siblings': [(ADVX (ADV denn))], 'auto preterminal span': (24, 28), 'span': (24, 28), 'parent': 'MF', 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM also)
			(SIMPX ich bleibe sowieso einige tage da)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX ich bleibe drei tage da)
			(SIMPX das waren auf jeden fall dann mal drei nachte)[01;31m)[00m
		(SU
			(SIMPX
				(VF wieviel)
				(LK kostet)
				(MF
					(ADVX denn)
					(NX ein hotel in hannover)
					[01;31m(SU[00m
						[01;31m(NX[00m
							(ADVX so)
							[01;31m(NX[00m
								(NN mittelklasse)[01;31m)[00m[01;31m)[00m[01;31m)[00m)))))
Step:Clause Attachment
{'subtrees': ['DM', 'SIMPX'], 'family': ['SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPER', 'VVFIN', 'ADV', 'PIAT', 'NN', 'PTKVZ', 'PPER', 'VVFIN', 'CARD', 'NN', 'PTKVZ', 'PDS', 'VAFIN', 'APPR', 'PIDAT', 'NN', 'ADV', 'ADV', 'CARD', 'NN', 'PWS', 'VVFIN', 'ADV', 'ART', 'NN', 'APPR', 'NE', 'ADV', 'NN'), 'right siblings': ['SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 30), 'span': (0, 7), 'left siblings': [], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX ich bleibe sowieso einige tage da)
		[01;31m(SU[00m
			(SIMPX ich bleibe drei tage da)
			(SIMPX das waren auf jeden fall dann mal drei nachte)[01;31m)[00m
		(SU
			(SIMPX
				(VF wieviel)
				(LK kostet)
				(MF
					(ADVX denn)
					(NX ein hotel in hannover)
					[01;31m(SU[00m
						[01;31m(NX[00m
							(ADVX so)
							[01;31m(NX[00m
								(NN mittelklasse)[01;31m)[00m[01;31m)[00m[01;31m)[00m)))))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['DM', 'SIMPX', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPER', 'VVFIN', 'ADV', 'PIAT', 'NN', 'PTKVZ', 'PPER', 'VVFIN', 'CARD', 'NN', 'PTKVZ', 'PDS', 'VAFIN', 'APPR', 'PIDAT', 'NN', 'ADV', 'ADV', 'CARD', 'NN', 'PWS', 'VVFIN', 'ADV', 'ART', 'NN', 'APPR', 'NE', 'ADV', 'NN'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 30), 'span': (7, 21), 'left siblings': ['DM', 'SIMPX'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX ich bleibe sowieso einige tage da)
		(SIMPX ich bleibe drei tage da)
		(SIMPX das waren auf jeden fall dann mal drei nachte)
		(SU
			(SIMPX
				(VF wieviel)
				(LK kostet)
				(MF
					(ADVX denn)
					(NX ein hotel in hannover)
					[01;31m(SU[00m
						[01;31m(NX[00m
							(ADVX so)
							[01;31m(NX[00m
								(NN mittelklasse)[01;31m)[00m[01;31m)[00m[01;31m)[00m)))))
Step:Unary
{'subtrees': ['ADVX', 'NX'], 'family': ['NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'NN'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (28, 30), 'span': (28, 30), 'left siblings': [], 'label': 'NX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX ich bleibe sowieso einige tage da)
		(SIMPX ich bleibe drei tage da)
		(SIMPX das waren auf jeden fall dann mal drei nachte)
		(SU
			(SIMPX
				(VF wieviel)
				(LK kostet)
				(MF
					(ADVX denn)
					(NX ein hotel in hannover)
					[01;31m(SU[00m
						(ADVX so)
						[01;31m(NX[00m
							(NN mittelklasse)[01;31m)[00m[01;31m)[00m)))))
Step:UNSET remove
{'subtrees': ['ADVX', 'NX'], 'family': ['ADVX', 'NX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ART', 'NN', 'APPR', 'NE', 'ADV', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (23, 30), 'span': (28, 30), 'left siblings': ['ADVX', 'NX'], 'label': 'SU', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX ich bleibe sowieso einige tage da)
		(SIMPX ich bleibe drei tage da)
		(SIMPX das waren auf jeden fall dann mal drei nachte)
		(SU
			(SIMPX
				(VF wieviel)
				(LK kostet)
				(MF
					(ADVX denn)
					(NX ein hotel in hannover)
					(ADVX so)
					[01;31m(NX[00m
						(NN mittelklasse)[01;31m)[00m)))))
Step:Single Word Phrase
{'subtrees': ['NN'], 'family': ['ADVX', 'NX', 'ADVX', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADV', 'ART', 'NN', 'APPR', 'NE', 'ADV', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (23, 30), 'span': (29, 30), 'left siblings': ['ADVX', 'NX', 'ADVX'], 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP also ich bleibe sowieso einige tage da ich bleibe drei tage da das waren auf jeden fall dann mal drei nachte wieviel kostet denn ein hotel in hannover so mittelklasse)

Sentence 623:
10 Initial errors
0 on fringe, 6 iterations
4 Error:UNSET move
2 Error:Modifier Attachment
1 Error:Unary
1 Error:UNSET remove
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SU[00m
	[01;36m(SIMPX[00m
		(TOP
			(TURN
				[01;31m(SU[00m
					[01;31m(SIMPX[00m
						(VF was)
						(LK ware)
						[01;31m(MF[00m
							(ADVX denn)
							(NX das nachstbilligere hotel)[01;31m)[00m[01;31m)[00m[01;31m)[00m
				[01;31m(SU[00m
					[01;31m(NX[00m
						(ADVX auch)
						[01;36m(NX[00m
							(ADVX so)
							[01;31m(NX[00m
								(ADJX zentrale)
								(NN lage)[01;31m)[00m[01;36m)[00m
						[01;36m(NF[00m
							(ADVX
								(ADV eher))[01;36m)[00m[01;31m)[00m[01;31m)[00m))[01;36m)[00m[01;36m)[00m
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'SU'], 'mover info': [('SU', (6, 11))], 'old_family': ['SU', 'SU'], 'start left siblings': ['SU'], 'auto preterminals': ('PWS', 'VAFIN', 'ADV', 'ART', 'ADJA', 'NN', 'ADV', 'ADV', 'ADJA', 'NN', 'ADV'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (0, 11), 'movers': ['SU'], 'old_parent': 'TURN', 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			(SIMPX
				(VF was)
				(LK ware)
				[01;31m(MF[00m
					(ADVX denn)
					(NX das nachstbilligere hotel)[01;31m)[00m
				[01;31m(SU[00m
					[01;31m(NX[00m
						(ADVX auch)
						[01;36m(NX[00m
							(ADVX so)
							[01;31m(NX[00m
								(ADJX zentrale)
								(NN lage)[01;31m)[00m[01;36m)[00m
						[01;36m(NF[00m
							(ADVX
								(ADV eher))[01;36m)[00m[01;31m)[00m[01;31m)[00m))))
Step:Modifier Attachment
{'new_parent': 'NX', 'new_family': ['ADVX', 'ADJX', 'NN'], 'mover info': [('ADVX', (7, 8))], 'old_family': ['ADVX', 'ADVX', 'NX', 'ADVX'], 'start left siblings': ['ADVX'], 'auto preterminals': ('ADV', 'ADV', 'ADJA', 'NN', 'ADV'), 'start right siblings': ['NX', 'ADVX'], 'end left siblings': [], 'auto preterminal span': (6, 11), 'movers': ['ADVX'], 'old_parent': 'NX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['ADJX', 'NN'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU
			(SIMPX
				(VF was)
				(LK ware)
				[01;31m(MF[00m
					(ADVX denn)
					(NX das nachstbilligere hotel)[01;31m)[00m
				[01;31m(SU[00m
					[01;31m(NX[00m
						(ADVX auch)
						(NX so zentrale lage)
						[01;36m(NF[00m
							(ADVX
								(ADV eher))[01;36m)[00m[01;31m)[00m[01;31m)[00m))))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['ADVX', 'NX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV',), 'right siblings': [], 'left siblings': [(ADVX (ADV auch)), (NX (ADVX (ADV so)) (ADJX (ADJA zentrale)) (NN lage))], 'auto preterminal span': (10, 11), 'span': (10, 11), 'parent': 'NX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU
			(SIMPX
				(VF was)
				(LK ware)
				[01;31m(MF[00m
					(ADVX denn)
					(NX das nachstbilligere hotel)[01;31m)[00m
				[01;31m(SU[00m
					[01;31m(NX[00m
						(ADVX auch)
						(NX so zentrale lage)
						(NF eher)[01;31m)[00m[01;31m)[00m))))
Step:UNSET remove
{'subtrees': ['ADVX', 'NX'], 'family': ['VF', 'LK', 'MF', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PWS', 'VAFIN', 'ADV', 'ART', 'ADJA', 'NN', 'ADV', 'ADV', 'ADJA', 'NN', 'ADV'), 'right siblings': ['SU'], 'parent': 'SIMPX', 'auto preterminal span': (0, 11), 'span': (2, 6), 'left siblings': ['VF', 'LK'], 'label': 'MF', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(SIMPX
				(VF was)
				(LK ware)
				(ADVX denn)
				(NX das nachstbilligere hotel)
				[01;31m(SU[00m
					[01;31m(NX[00m
						(ADVX auch)
						(NX so zentrale lage)
						(NF eher)[01;31m)[00m[01;31m)[00m))))
Step:Unary
{'subtrees': ['ADVX', 'NX', 'NF'], 'family': ['NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'ADJA', 'NN', 'ADV'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (6, 11), 'span': (6, 11), 'left siblings': [], 'label': 'NX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(SIMPX
				(VF was)
				(LK ware)
				(ADVX denn)
				(NX das nachstbilligere hotel)
				[01;31m(SU[00m
					(ADVX auch)
					(NX so zentrale lage)
					(NF eher)[01;31m)[00m))))
Step:UNSET remove
{'subtrees': ['ADVX', 'NX', 'NF'], 'family': ['VF', 'LK', 'ADVX', 'NX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PWS', 'VAFIN', 'ADV', 'ART', 'ADJA', 'NN', 'ADV', 'ADV', 'ADJA', 'NN', 'ADV'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (0, 11), 'span': (6, 11), 'left siblings': ['VF', 'LK', 'ADVX', 'NX'], 'label': 'SU', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP was ware denn das nachstbilligere hotel auch so zentrale lage eher)

Sentence 624:
10 Initial errors
0 on fringe, 6 iterations
4 Error:UNSET move
2 Error:Different label
1 Error:Unary
1 Error:UNSET remove
1 Error:Unary
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SU[00m
	[01;36m(SIMPX[00m
		(TOP
			(TURN
				[01;31m(SU[00m
					[01;31m(SIMPX[00m
						[01;31m(VF[00m
							[01;31m(SIMPX[00m
								(KOORD aber)
								(C wenn)
								(MF man es)
								[01;31m(VC[00m
									[01;31m(VXFIN[00m
										(VVFIN zusammenrechnet)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
						(LK ware)
						(MF ja eigentlich der flug doch noch gunstiger)[01;31m)[00m[01;31m)[00m
				[01;36m(NF[00m [01;31m(SU[00m
					(SIMPX
						(C wenn)
						(MF ich einfach am selben tag)
						(VC fliegen wurde))[01;31m)[00m[01;36m)[00m))[01;36m)[00m[01;36m)[00m
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'SU'], 'mover info': [('SU', (13, 21))], 'old_family': ['SU', 'SU'], 'start left siblings': ['SU'], 'auto preterminals': ('KON', 'KOUS', 'PIS', 'PPER', 'VVFIN', 'VAFIN', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'APPRART', 'PDAT', 'NN', 'VVINF', 'VAFIN'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (0, 21), 'movers': ['SU'], 'old_parent': 'TURN', 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			(SIMPX
				[01;31m(VF[00m
					[01;31m(SIMPX[00m
						(KOORD aber)
						(C wenn)
						(MF man es)
						[01;31m(VC[00m
							[01;31m(VXFIN[00m
								(VVFIN zusammenrechnet)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
				(LK ware)
				(MF ja eigentlich der flug doch noch gunstiger)
				[01;36m(NF[00m [01;31m(SU[00m
					(SIMPX
						(C wenn)
						(MF ich einfach am selben tag)
						(VC fliegen wurde))[01;31m)[00m[01;36m)[00m))))
Step:Different label
{'family': ['VF', 'LK', 'MF', 'NF'], 'auto preterminal span': (13, 21), 'span': (13, 21), 'subtrees': ['SIMPX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'APPRART', 'PDAT', 'NN', 'VVINF', 'VAFIN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('SU', 'NF')}
(TOP
	(TURN
		(SU
			(SIMPX
				[01;31m(VF[00m
					[01;31m(SIMPX[00m
						(KOORD aber)
						(C wenn)
						(MF man es)
						[01;31m(VC[00m
							[01;31m(VXFIN[00m
								(VVFIN zusammenrechnet)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
				(LK ware)
				(MF ja eigentlich der flug doch noch gunstiger)
				(NF wenn ich einfach am selben tag fliegen wurde)))))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['VF', 'LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'KOUS', 'PIS', 'PPER', 'VVFIN', 'VAFIN', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'APPRART', 'PDAT', 'NN', 'VVINF', 'VAFIN'), 'right siblings': ['LK', 'MF', 'NF'], 'parent': 'SIMPX', 'auto preterminal span': (0, 21), 'span': (0, 5), 'left siblings': [], 'label': 'VF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(SIMPX
				[01;31m(SIMPX[00m
					(KOORD aber)
					(C wenn)
					(MF man es)
					[01;31m(VC[00m
						[01;31m(VXFIN[00m
							(VVFIN zusammenrechnet)[01;31m)[00m[01;31m)[00m[01;31m)[00m
				(LK ware)
				(MF ja eigentlich der flug doch noch gunstiger)
				(NF wenn ich einfach am selben tag fliegen wurde)))))
Step:UNSET remove
{'subtrees': ['KOORD', 'C', 'MF', 'VC'], 'family': ['SIMPX', 'LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'KOUS', 'PIS', 'PPER', 'VVFIN', 'VAFIN', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'APPRART', 'PDAT', 'NN', 'VVINF', 'VAFIN'), 'right siblings': ['LK', 'MF', 'NF'], 'parent': 'SIMPX', 'auto preterminal span': (0, 21), 'span': (0, 5), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(SIMPX
				(KOORD aber)
				(C wenn)
				(MF man es)
				[01;31m(VC[00m
					[01;31m(VXFIN[00m
						(VVFIN zusammenrechnet)[01;31m)[00m[01;31m)[00m
				(LK ware)
				(MF ja eigentlich der flug doch noch gunstiger)
				(NF wenn ich einfach am selben tag fliegen wurde)))))
Step:Unary
{'subtrees': ['VXFIN'], 'family': ['KOORD', 'C', 'MF', 'VC', 'LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'KOUS', 'PIS', 'PPER', 'VVFIN', 'VAFIN', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'APPRART', 'PDAT', 'NN', 'VVINF', 'VAFIN'), 'right siblings': ['LK', 'MF', 'NF'], 'parent': 'SIMPX', 'auto preterminal span': (0, 21), 'span': (4, 5), 'left siblings': ['KOORD', 'C', 'MF'], 'label': 'VC', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(SIMPX
				(KOORD aber)
				(C wenn)
				(MF man es)
				[01;31m(VXFIN[00m
					(VVFIN zusammenrechnet)[01;31m)[00m
				(LK ware)
				(MF ja eigentlich der flug doch noch gunstiger)
				(NF wenn ich einfach am selben tag fliegen wurde)))))
Step:Single Word Phrase
{'subtrees': ['VVFIN'], 'family': ['KOORD', 'C', 'MF', 'VXFIN', 'LK', 'MF', 'NF'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON', 'KOUS', 'PIS', 'PPER', 'VVFIN', 'VAFIN', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'APPRART', 'PDAT', 'NN', 'VVINF', 'VAFIN'), 'right siblings': ['LK', 'MF', 'NF'], 'parent': 'SIMPX', 'auto preterminal span': (0, 21), 'span': (4, 5), 'left siblings': ['KOORD', 'C', 'MF'], 'label': 'VXFIN', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP aber wenn man es zusammenrechnet ware ja eigentlich der flug doch noch gunstiger wenn ich einfach am selben tag fliegen wurde)

Sentence 625:
3 Initial errors
0 on fringe, 2 iterations
2 Error:UNSET move
1 Error:Clause Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SU[00m
	(TOP
		(TURN
			[01;31m(SU[00m
				(DM nee)
				(SIMPX das ist samstags)[01;31m)[00m
			[01;31m(SU[00m
				(SIMPX
					(VF da)
					(LK mus)
					(MF ich dann halt auf jeden fall mit dem zug)
					(VC fahren))[01;31m)[00m))[01;36m)[00m
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SU', 'SIMPX'], 'mover info': [('SU', (0, 4))], 'old_family': ['SU', 'SU'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'PDS', 'VAFIN', 'ADV', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'APPR', 'PIDAT', 'NN', 'APPR', 'ART', 'NN', 'VVINF'), 'start right siblings': ['SU'], 'end left siblings': [], 'auto preterminal span': (0, 16), 'movers': ['SU'], 'old_parent': 'TURN', 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			[01;31m(SU[00m
				(DM nee)
				(SIMPX das ist samstags)[01;31m)[00m
			(SIMPX da mus ich dann halt auf jeden fall mit dem zug fahren))))
Step:Clause Attachment
{'subtrees': ['DM', 'SIMPX'], 'family': ['SU', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PDS', 'VAFIN', 'ADV', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'APPR', 'PIDAT', 'NN', 'APPR', 'ART', 'NN', 'VVINF'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 16), 'span': (0, 4), 'left siblings': [], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP nee das ist samstags da mus ich dann halt auf jeden fall mit dem zug fahren)

Sentence 626:
3 Initial errors
0 on fringe, 2 iterations
2 Error:UNSET move
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SU[00m
	(TOP
		(TURN
			[01;31m(SU[00m
				(DM
					(PTKANT ja))[01;31m)[00m
			[01;31m(SU[00m
				(DM
					(ITJ genau))[01;31m)[00m))[01;36m)[00m
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SU', 'DM'], 'mover info': [('SU', (0, 1))], 'old_family': ['SU', 'SU'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'ITJ'), 'start right siblings': ['SU'], 'end left siblings': [], 'auto preterminal span': (0, 2), 'movers': ['SU'], 'old_parent': 'TURN', 'POS confusion': ('PTKANT', 'PTKANT'), 'end right siblings': ['DM'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			[01;31m(SU[00m
				(DM
					(PTKANT ja))[01;31m)[00m
			(DM genau))))
Step:Unary
{'subtrees': ['DM'], 'family': ['SU', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ'), 'right siblings': ['DM'], 'parent': 'SU', 'auto preterminal span': (0, 2), 'span': (0, 1), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja genau)

Sentence 627:
5 Initial errors
0 on fringe, 3 iterations
2 Error:Different label
2 Error:UNSET move
1 Error:UNSET add
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU ja genau)
		[01;36m(SU[00m
			[01;31m(SU[00m
				(DM
					(PTKANT ja))[01;31m)[00m
			(SU
				(SIMPX
					(VF wann)
					(LK kann)
					(MF
						(NX ich)
						(PX bei ihnen)
						(NX
							[01;36m(NX[00m
								(NX das flugticket)
								(KON und)
								(NX die hotelbuchung)[01;36m)[00m
							(KON und)
							[01;36m(ADJX[00m [01;31m(ADVX[00m
								(ADVX so)
								(ADV weiter)[01;31m)[00m[01;36m)[00m))
					(VC abholen)))[01;36m)[00m))
Step:Different label
{'family': ['NX', 'KON', 'NX', 'KON', 'ADJX'], 'auto preterminal span': (14, 16), 'span': (14, 16), 'subtrees': ['ADVX', 'ADV'], 'parent': 'NX', 'over_word': False, 'auto preterminals': ('ADV', 'ADV'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('ADVX', 'ADJX')}
(TOP
	(TURN
		(SU ja genau)
		[01;36m(SU[00m
			[01;31m(SU[00m
				(DM
					(PTKANT ja))[01;31m)[00m
			(SU
				(SIMPX
					(VF wann)
					(LK kann)
					(MF
						(NX ich)
						(PX bei ihnen)
						(NX
							[01;36m(NX[00m
								(NX das flugticket)
								(KON und)
								(NX die hotelbuchung)[01;36m)[00m
							(KON und)
							(ADJX so weiter)))
					(VC abholen)))[01;36m)[00m))
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['DM', 'SU'], 'mover info': [('SU', (3, 17))], 'old_family': ['SU', 'SU', 'SU'], 'start left siblings': ['SU', 'SU'], 'auto preterminals': ('PTKANT', 'ITJ', 'PTKANT', 'PWAV', 'VMFIN', 'PPER', 'APPR', 'PPER', 'ART', 'NN', 'KON', 'ART', 'NN', 'KON', 'ADV', 'ADV', 'VVINF'), 'start right siblings': [], 'end left siblings': ['DM'], 'auto preterminal span': (0, 17), 'movers': ['SU'], 'old_parent': 'TURN', 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU ja genau)
		(SU
			(DM ja)
			(SU
				(SIMPX
					(VF wann)
					(LK kann)
					(MF
						(NX ich)
						(PX bei ihnen)
						(NX
							[01;36m(NX[00m
								(NX das flugticket)
								(KON und)
								(NX die hotelbuchung)[01;36m)[00m
							(KON und)
							(ADJX so weiter)))
					(VC abholen))))))
Step:UNSET add
{'subtrees': ['NX', 'KON', 'NX'], 'family': ['NX', 'KON', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'KON', 'ART', 'NN'), 'right siblings': [(KON und), (ADJX (ADVX (ADV so)) (ADV weiter))], 'left siblings': [], 'auto preterminal span': (8, 13), 'span': (8, 13), 'parent': 'NX', 'label': 'NX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP ja genau ja wann kann ich bei ihnen das flugticket und die hotelbuchung und so weiter abholen)

Sentence 628:
2 Initial errors
0 on fringe, 1 iterations
2 Error:UNSET move
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM okay)
			[01;36m(SU[00m
				(DM
					(ITJ gut))[01;36m)[00m[01;31m)[00m
		(SU vielen dank)))
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['DM', 'SU', 'SU'], 'mover info': [('DM', (0, 1))], 'old_family': ['DM', 'DM'], 'start left siblings': [], 'auto preterminals': ('ITJ', 'ITJ', 'PIDAT', 'NN'), 'start right siblings': ['DM'], 'end left siblings': [], 'auto preterminal span': (0, 4), 'movers': ['DM'], 'old_parent': 'SU', 'POS confusion': ('ITJ', 'ITJ'), 'end right siblings': ['SU', 'SU'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP okay gut vielen dank)

Sentence 629:
8 Initial errors
0 on fringe, 2 iterations
7 Error:UNSET move
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(SIMPX
				(LK ist)
				[01;36m(MF[00m
					[01;31m(MF[00m
						(NX es)
						(ADVX denn)
						[01;31m(NX[00m [01;33m(NX[00m
							(NX ein termin)
							[01;31m(PX[00m [01;33m(PX[00m
								(APPR unter)
								[01;33m(NX[00m (NX der woche)[01;31m)[00m[01;31m)[00m[01;31m)[00m
					[01;31m(NF[00m
						(NX
							(ART der)
							(ADJX funfzehnte)
							(NN juli))[01;31m)[00m[01;36m)[00m)) [01;33mNX) PX) NX)[00m
		(SU lassen sie mich mal gucken)))
Step:UNSET move
{'new_parent': 'PX', 'new_family': ['APPR', 'NX', 'NF'], 'mover info': [('NF', (8, 11))], 'old_family': ['LK', 'MF', 'NF'], 'start left siblings': ['LK', 'MF'], 'auto preterminals': ('VAFIN', 'PPER', 'ADV', 'ART', 'NN', 'APPR', 'ART', 'NN', 'ART', 'ADJA', 'NN'), 'start right siblings': [], 'end left siblings': ['APPR', 'NX'], 'auto preterminal span': (0, 11), 'adding node already present': False, 'movers': ['NF'], 'old_parent': 'SIMPX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(SU
			(SIMPX
				(LK ist)
				(MF
					(NX es)
					(ADVX denn)
					(NX
						(NX ein termin)
						(PX
							(APPR unter)
							(NX
								(NX der woche)
								[01;31m(NF[00m
									(NX
										(ART der)
										(ADJX funfzehnte)
										(NN juli))[01;31m)[00m))))))
		(SU lassen sie mich mal gucken)))
Step:Unary
{'subtrees': ['NX'], 'family': ['NX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'ART', 'ADJA', 'NN'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (6, 11), 'span': (8, 11), 'left siblings': ['NX'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ist es denn ein termin unter der woche der funfzehnte juli lassen sie mich mal gucken)

Sentence 630:
12 Initial errors
0 on fringe, 6 iterations
4 Error:PP Attachment
3 Error:UNSET move
2 Error:PP Attachment
1 Error:NP Internal Structure
1 Error:Clause Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP [01;33m(SU[00m
	(TURN
		[01;31m(SU[00m
			(DM ja)
			(DM also)
			[01;31m(SIMPX[00m
				[01;31m(LV[00m
					(SIMPX
						(C wenn)
						(MF sie)
						(VC fliegen mochten))[01;31m)[00m [01;33mSU)[00m
				[01;36m(SIMPX[00m
					(VF es)
					(LK gibt)
					(MF [01;33m(NX[00m
						(NX einen flug)
						[01;31m(NX[00m
							[01;31m(NX[00m
								(NX jeden tag) [01;33mNX)[00m
								[01;31m(PX[00m [01;33m(PX (PX[00m
									(PX von montag)
									[01;33m(PX[00m (PX bis freitag)[01;31m)[00m[01;31m)[00m
							(PX um sieben uhr zehn)[01;31m)[00m [01;33mPX) PX)[00m
						(PX von kolnbonn))[01;36m)[00m[01;31m)[00m [01;33mPX)[00m
			(SIMPX und dann kommen sie in hannover um acht uhr zehn an)[01;31m)[00m
		(SU wurde ihnen das reichen)))
Step:PP Attachment
{'new_parent': 'PX', 'new_family': ['PX', 'PX', 'PX'], 'mover info': [('PX', (16, 20))], 'old_family': ['NX', 'PX'], 'start left siblings': ['NX'], 'auto preterminals': ('PIDAT', 'NN', 'APPR', 'NN', 'APPR', 'NN', 'APPR', 'CARD', 'NN', 'CARD'), 'start right siblings': [], 'end left siblings': ['PX', 'PX'], 'auto preterminal span': (10, 20), 'adding node already present': False, 'movers': ['PX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'PX'}
(TOP [01;33m(SU[00m
	(TURN
		[01;31m(SU[00m
			(DM ja)
			(DM also)
			[01;31m(SIMPX[00m
				[01;31m(LV[00m
					(SIMPX
						(C wenn)
						(MF sie)
						(VC fliegen mochten))[01;31m)[00m [01;33mSU)[00m
				[01;36m(SIMPX[00m
					(VF es)
					(LK gibt)
					(MF [01;33m(NX[00m
						(NX einen flug)
						[01;31m(NX[00m
							(NX jeden tag) [01;33mNX)[00m
							[01;33m(PX[00m (PX von montag bis freitag um sieben uhr zehn)[01;31m)[00m
						(PX von kolnbonn))[01;36m)[00m[01;31m)[00m [01;33mPX)[00m
			(SIMPX und dann kommen sie in hannover um acht uhr zehn an)[01;31m)[00m
		(SU wurde ihnen das reichen)))
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['DM', 'DM', 'LV', 'SIMPX', 'SIMPX'], 'mover info': [('LV', (2, 6))], 'old_family': ['LV', 'VF', 'LK', 'MF'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'ADV', 'KOUS', 'PPER', 'VVINF', 'VMFIN', 'PPER', 'VVFIN', 'ART', 'NN', 'PIDAT', 'NN', 'APPR', 'NN', 'APPR', 'NN', 'APPR', 'CARD', 'NN', 'CARD', 'APPR', 'NE', 'KON', 'ADV', 'VVFIN', 'PPER', 'APPR', 'NE', 'APPR', 'CARD', 'NN', 'CARD', 'PTKVZ'), 'start right siblings': ['VF', 'LK', 'MF'], 'end left siblings': ['DM', 'DM'], 'auto preterminal span': (0, 33), 'adding node already present': False, 'movers': ['LV'], 'old_parent': 'SIMPX', 'added and moved': True, 'end right siblings': ['SIMPX', 'SIMPX'], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'SU'}
(TOP
	(TURN
		[01;31m(SU[00m
			(SU
				(DM ja)
				(DM also)
				[01;31m(LV[00m
					(SIMPX
						(C wenn)
						(MF sie)
						(VC fliegen mochten))[01;31m)[00m)
			(SIMPX
				(VF es)
				(LK gibt)
				(MF [01;33m(NX[00m
					(NX einen flug)
					[01;31m(NX[00m
						(NX jeden tag) [01;33mNX)[00m
						[01;33m(PX[00m (PX von montag bis freitag um sieben uhr zehn)[01;31m)[00m
					(PX von kolnbonn))) [01;33mPX)[00m
			(SIMPX und dann kommen sie in hannover um acht uhr zehn an)[01;31m)[00m
		(SU wurde ihnen das reichen)))
Step:PP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'NX', 'PX', 'PX'], 'mover info': [('PX', (12, 20))], 'old_family': ['NX', 'PX'], 'start left siblings': ['NX'], 'auto preterminals': ('ART', 'NN', 'PIDAT', 'NN', 'APPR', 'NN', 'APPR', 'NN', 'APPR', 'CARD', 'NN', 'CARD', 'APPR', 'NE'), 'start right siblings': [], 'end left siblings': ['NX', 'NX'], 'auto preterminal span': (8, 22), 'adding node already present': False, 'movers': ['PX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': ['PX'], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'PX'}
(TOP
	(TURN
		[01;31m(SU[00m
			(SU
				(DM ja)
				(DM also)
				[01;31m(LV[00m
					(SIMPX
						(C wenn)
						(MF sie)
						(VC fliegen mochten))[01;31m)[00m)
			(SIMPX
				(VF es)
				(LK gibt)
				(MF
					[01;36m(NX[00m
						(NX einen flug)
						(NX jeden tag)[01;36m)[00m
					(PX von montag bis freitag um sieben uhr zehn von kolnbonn)))
			(SIMPX und dann kommen sie in hannover um acht uhr zehn an)[01;31m)[00m
		(SU wurde ihnen das reichen)))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'PIDAT', 'NN'), 'right siblings': [(PX (PX (PX (APPR von) (NX (NN montag))) (PX (PX (APPR bis) (NX (NN freitag))) (PX (APPR um) (NX (NX (ADJX (CARD sieben)) (NN uhr)) (ADJX (CARD zehn)))))) (PX (APPR von) (NX (NE kolnbonn))))], 'left siblings': [], 'auto preterminal span': (8, 12), 'span': (8, 12), 'parent': 'MF', 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(SU
				(DM ja)
				(DM also)
				[01;31m(LV[00m
					(SIMPX
						(C wenn)
						(MF sie)
						(VC fliegen mochten))[01;31m)[00m)
			(SIMPX es gibt einen flug jeden tag von montag bis freitag um sieben uhr zehn von kolnbonn)
			(SIMPX und dann kommen sie in hannover um acht uhr zehn an)[01;31m)[00m
		(SU wurde ihnen das reichen)))
Step:Clause Attachment
{'subtrees': ['SU', 'SIMPX', 'SIMPX'], 'family': ['SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADV', 'KOUS', 'PPER', 'VVINF', 'VMFIN', 'PPER', 'VVFIN', 'ART', 'NN', 'PIDAT', 'NN', 'APPR', 'NN', 'APPR', 'NN', 'APPR', 'CARD', 'NN', 'CARD', 'APPR', 'NE', 'KON', 'ADV', 'VVFIN', 'PPER', 'APPR', 'NE', 'APPR', 'CARD', 'NN', 'CARD', 'PTKVZ', 'VAFIN', 'PPER', 'PDS', 'VVINF'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 37), 'span': (0, 33), 'left siblings': [], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM ja)
			(DM also)
			[01;31m(LV[00m
				(SIMPX
					(C wenn)
					(MF sie)
					(VC fliegen mochten))[01;31m)[00m)
		(SIMPX es gibt einen flug jeden tag von montag bis freitag um sieben uhr zehn von kolnbonn)
		(SIMPX und dann kommen sie in hannover um acht uhr zehn an)
		(SU wurde ihnen das reichen)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['DM', 'DM', 'LV'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADV', 'KOUS', 'PPER', 'VVINF', 'VMFIN'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (0, 6), 'span': (2, 6), 'left siblings': ['DM', 'DM'], 'label': 'LV', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja also wenn sie fliegen mochten es gibt einen flug jeden tag von montag bis freitag um sieben uhr zehn von kolnbonn und dann kommen sie in hannover um acht uhr zehn an wurde ihnen das reichen)

Sentence 631:
33 Initial errors
0 on fringe, 22 iterations
4 Error:UNSET move
3 Error:UNSET move
3 Error:UNSET move
2 Error:Different label
2 Error:Different label
2 Error:Different label
2 Error:Modifier Attachment
1 Error:Clause Attachment
1 Error:Single Word Phrase
1 Error:Unary
1 Error:UNSET remove
1 Error:PP Attachment
1 Error:Clause Attachment
1 Error:Unary
1 Error:PP Attachment
1 Error:Unary
1 Error:Clause Attachment
1 Error:UNSET remove
1 Error:Unary
1 Error:UNSET remove
1 Error:PP Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;36m(SU[00m
			[01;31m(SU[00m
				(DM moment)
				[01;31m(SIMPX[00m [01;33m(SIMPX[00m
					(VF ich)
					(LK gucke)
					[01;33m(MF[00m (MF mal)
					[01;31m(VC[00m [01;33m(VF (PX[00m
						(PTKVZ nach)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			[01;31m(SU[00m
				[01;31m(SIMPX[00m
					[01;31m(VF[00m
						(ADVX
							(ADV nachts))[01;31m)[00m [01;33mPX) VF) MF)[00m
					(LK konnen)
					(MF sie nicht)
					(VC fahren)[01;31m)[00m[01;31m)[00m [01;33mSIMPX)[00m[01;36m)[00m
		[01;31m(SU[00m
			(DM also)
			[01;36m(SIMPX[00m
				(SIMPX
					(VF sie)
					(LK konnen)
					[01;36m(ADJX[00m
						(MF
							[01;31m(ADVX[00m
								(ADVX nur)
								(ADV tagsuber)[01;31m)[00m)[01;36m)[00m
					(VC fahren))
				(SIMPX
					(VF der erste zug)
					(LK geht)
					(MF um funf uhr zehn)
					(VC ab)
					[01;31m(NF[00m
						(PX
							(APPR von)
							(NX bonn))[01;31m)[00m)[01;36m)[00m
			(SIMPX
				(VF da)
				(FKOORD
					[01;36m(LKM[00m [01;31m(LKMVCN[00m
						(LK musten)
						(MF sie allerdings)
						(VC umsteigen)
						(NF in dusseldorf hauptbahnhof)[01;31m)[00m[01;36m)[00m
					(KON und)
					[01;36m(LKM[00m [01;31m(LKVCN[00m
						(LK kamen)
						(VC an)
						[01;31m(NF[00m
							(PX um sechs uhr zehn)
							(PX in hannover)[01;31m)[00m[01;31m)[00m[01;36m)[00m))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK ist)
				(MF ein ic))[01;31m)[00m
		[01;31m(SU[00m
			(DM oh)
			[01;31m(DM[00m
				[01;36m(DM[00m
					(NX
						(NN moment))[01;36m)[00m
				(ADVX mal)[01;31m)[00m
			(SIMPX
				(VF sie)
				(FKOORD [01;33m(FKOORD[00m
					(LKMVC kommen in dusseldorf um sechs uhr sechs an)
					(KON und)
					[01;31m(LKMVC[00m
						(LK mussen)
						(MF da)
						[01;31m(VC[00m [01;33m(VXINF (VC[00m
							(VXINF
								(VVINF umsteigen))[01;31m)[00m[01;31m)[00m
					[01;31m(LKMVCN[00m
						(LK kommen) [01;33mVC) VXINF)[00m
						[01;31m(MF[00m
							(PX
								(APPR in)
								(NX hannover))[01;31m)[00m
						(VC an) [01;33mFKOORD)[00m
						[01;31m(NF[00m
							(PX
								(APPR um)
								(NX neun uhr zwei))[01;31m)[00m[01;31m)[00m))[01;31m)[00m))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'VC', 'SU'], 'mover info': [('SU', (5, 10))], 'old_family': ['SU', 'SU', 'SU', 'SU', 'SU'], 'start left siblings': ['SU'], 'auto preterminals': ('NN', 'PPER', 'VVFIN', 'ADV', 'PTKVZ', 'ADV', 'VMFIN', 'PPER', 'PTKNEG', 'VVINF', 'ADV', 'PPER', 'VMFIN', 'ADV', 'ADV', 'VVINF', 'ART', 'ADJA', 'NN', 'VVFIN', 'APPR', 'CARD', 'NN', 'CARD', 'PTKVZ', 'APPR', 'NE', 'ADV', 'VMFIN', 'PPER', 'ADV', 'VVINF', 'APPR', 'NE', 'NN', 'KON', 'VVFIN', 'PTKVZ', 'APPR', 'CARD', 'NN', 'CARD', 'APPR', 'NE', 'PDS', 'VAFIN', 'ART', 'NE', 'ITJ', 'NN', 'ADV', 'PPER', 'VVFIN', 'APPR', 'NE', 'APPR', 'CARD', 'NN', 'CARD', 'PTKVZ', 'KON', 'VMFIN', 'ADV', 'VVINF', 'VVFIN', 'APPR', 'NE', 'PTKVZ', 'APPR', 'CARD', 'NN', 'CARD'), 'start right siblings': ['SU', 'SU', 'SU'], 'end left siblings': ['VF', 'LK', 'MF', 'VC'], 'auto preterminal span': (0, 72), 'movers': ['SU'], 'old_parent': 'TURN', 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			(DM moment)
			(SIMPX
				(VF ich)
				(LK gucke)
				[01;33m(MF[00m (MF mal)
				[01;31m(VC[00m [01;33m(VF (PX[00m
					(PTKVZ nach)[01;31m)[00m
				[01;31m(SU[00m
					[01;31m(SIMPX[00m
						[01;31m(VF[00m
							(ADVX
								(ADV nachts))[01;31m)[00m [01;33mPX) VF) MF)[00m
						(LK konnen)
						(MF sie nicht)
						(VC fahren)[01;31m)[00m[01;31m)[00m))
		[01;31m(SU[00m
			(DM also)
			[01;36m(SIMPX[00m
				(SIMPX
					(VF sie)
					(LK konnen)
					[01;36m(ADJX[00m
						(MF
							[01;31m(ADVX[00m
								(ADVX nur)
								(ADV tagsuber)[01;31m)[00m)[01;36m)[00m
					(VC fahren))
				(SIMPX
					(VF der erste zug)
					(LK geht)
					(MF um funf uhr zehn)
					(VC ab)
					[01;31m(NF[00m
						(PX
							(APPR von)
							(NX bonn))[01;31m)[00m)[01;36m)[00m
			(SIMPX
				(VF da)
				(FKOORD
					[01;36m(LKM[00m [01;31m(LKMVCN[00m
						(LK musten)
						(MF sie allerdings)
						(VC umsteigen)
						(NF in dusseldorf hauptbahnhof)[01;31m)[00m[01;36m)[00m
					(KON und)
					[01;36m(LKM[00m [01;31m(LKVCN[00m
						(LK kamen)
						(VC an)
						[01;31m(NF[00m
							(PX um sechs uhr zehn)
							(PX in hannover)[01;31m)[00m[01;31m)[00m[01;36m)[00m))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK ist)
				(MF ein ic))[01;31m)[00m
		[01;31m(SU[00m
			(DM oh)
			[01;31m(DM[00m
				[01;36m(DM[00m
					(NX
						(NN moment))[01;36m)[00m
				(ADVX mal)[01;31m)[00m
			(SIMPX
				(VF sie)
				(FKOORD [01;33m(FKOORD[00m
					(LKMVC kommen in dusseldorf um sechs uhr sechs an)
					(KON und)
					[01;31m(LKMVC[00m
						(LK mussen)
						(MF da)
						[01;31m(VC[00m [01;33m(VXINF (VC[00m
							(VXINF
								(VVINF umsteigen))[01;31m)[00m[01;31m)[00m
					[01;31m(LKMVCN[00m
						(LK kommen) [01;33mVC) VXINF)[00m
						[01;31m(MF[00m
							(PX
								(APPR in)
								(NX hannover))[01;31m)[00m
						(VC an) [01;33mFKOORD)[00m
						[01;31m(NF[00m
							(PX
								(APPR um)
								(NX neun uhr zwei))[01;31m)[00m[01;31m)[00m))[01;31m)[00m))
Step:UNSET move
{'new_parent': 'VF', 'new_family': ['VC', 'ADVX'], 'mover info': [('VC', (4, 5))], 'old_family': ['VF', 'LK', 'MF', 'VC', 'SU'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'PTKVZ', 'ADV', 'VMFIN', 'PPER', 'PTKNEG', 'VVINF'), 'start right siblings': ['SU'], 'end left siblings': [], 'auto preterminal span': (1, 10), 'adding node already present': False, 'movers': ['VC'], 'old_parent': 'SIMPX', 'POS confusion': ('PTKVZ', 'PTKVZ'), 'added and moved': True, 'end right siblings': ['ADVX'], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'DM'}
(TOP
	(TURN
		(SU
			(DM moment)
			(SIMPX
				(VF ich)
				(LK gucke)
				[01;33m(MF[00m (MF mal)
				[01;31m(SU[00m
					[01;31m(SIMPX[00m
						(PX
							(VF
								[01;31m(VC[00m
									(PTKVZ nach)[01;31m)[00m
								(ADVX nachts))) [01;33mMF)[00m
						(LK konnen)
						(MF sie nicht)
						(VC fahren)[01;31m)[00m[01;31m)[00m))
		[01;31m(SU[00m
			(DM also)
			[01;36m(SIMPX[00m
				(SIMPX
					(VF sie)
					(LK konnen)
					[01;36m(ADJX[00m
						(MF
							[01;31m(ADVX[00m
								(ADVX nur)
								(ADV tagsuber)[01;31m)[00m)[01;36m)[00m
					(VC fahren))
				(SIMPX
					(VF der erste zug)
					(LK geht)
					(MF um funf uhr zehn)
					(VC ab)
					[01;31m(NF[00m
						(PX
							(APPR von)
							(NX bonn))[01;31m)[00m)[01;36m)[00m
			(SIMPX
				(VF da)
				(FKOORD
					[01;36m(LKM[00m [01;31m(LKMVCN[00m
						(LK musten)
						(MF sie allerdings)
						(VC umsteigen)
						(NF in dusseldorf hauptbahnhof)[01;31m)[00m[01;36m)[00m
					(KON und)
					[01;36m(LKM[00m [01;31m(LKVCN[00m
						(LK kamen)
						(VC an)
						[01;31m(NF[00m
							(PX um sechs uhr zehn)
							(PX in hannover)[01;31m)[00m[01;31m)[00m[01;36m)[00m))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK ist)
				(MF ein ic))[01;31m)[00m
		[01;31m(SU[00m
			(DM oh)
			[01;31m(DM[00m
				[01;36m(DM[00m
					(NX
						(NN moment))[01;36m)[00m
				(ADVX mal)[01;31m)[00m
			(SIMPX
				(VF sie)
				(FKOORD [01;33m(FKOORD[00m
					(LKMVC kommen in dusseldorf um sechs uhr sechs an)
					(KON und)
					[01;31m(LKMVC[00m
						(LK mussen)
						(MF da)
						[01;31m(VC[00m [01;33m(VXINF (VC[00m
							(VXINF
								(VVINF umsteigen))[01;31m)[00m[01;31m)[00m
					[01;31m(LKMVCN[00m
						(LK kommen) [01;33mVC) VXINF)[00m
						[01;31m(MF[00m
							(PX
								(APPR in)
								(NX hannover))[01;31m)[00m
						(VC an) [01;33mFKOORD)[00m
						[01;31m(NF[00m
							(PX
								(APPR um)
								(NX neun uhr zwei))[01;31m)[00m[01;31m)[00m))[01;31m)[00m))
Step:UNSET move
{'new_parent': 'VC', 'new_family': ['VXINF', 'LK'], 'mover info': [('LK', (64, 65))], 'old_family': ['LK', 'MF', 'VC', 'NF'], 'start left siblings': [], 'auto preterminals': ('VVFIN', 'APPR', 'NE', 'APPR', 'CARD', 'NN', 'CARD', 'PTKVZ', 'KON', 'VMFIN', 'ADV', 'VVINF', 'VVFIN', 'APPR', 'NE', 'PTKVZ', 'APPR', 'CARD', 'NN', 'CARD'), 'start right siblings': ['MF', 'VC', 'NF'], 'end left siblings': ['VXINF'], 'auto preterminal span': (52, 72), 'adding node already present': False, 'movers': ['LK'], 'old_parent': 'LKMVCN', 'POS confusion': ('VVFIN', 'VVFIN'), 'added and moved': True, 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'VXINF'}
(TOP
	(TURN
		(SU
			(DM moment)
			(SIMPX
				(VF ich)
				(LK gucke)
				[01;33m(MF[00m (MF mal)
				[01;31m(SU[00m
					[01;31m(SIMPX[00m
						(PX
							(VF
								[01;31m(VC[00m
									(PTKVZ nach)[01;31m)[00m
								(ADVX nachts))) [01;33mMF)[00m
						(LK konnen)
						(MF sie nicht)
						(VC fahren)[01;31m)[00m[01;31m)[00m))
		[01;31m(SU[00m
			(DM also)
			[01;36m(SIMPX[00m
				(SIMPX
					(VF sie)
					(LK konnen)
					[01;36m(ADJX[00m
						(MF
							[01;31m(ADVX[00m
								(ADVX nur)
								(ADV tagsuber)[01;31m)[00m)[01;36m)[00m
					(VC fahren))
				(SIMPX
					(VF der erste zug)
					(LK geht)
					(MF um funf uhr zehn)
					(VC ab)
					[01;31m(NF[00m
						(PX
							(APPR von)
							(NX bonn))[01;31m)[00m)[01;36m)[00m
			(SIMPX
				(VF da)
				(FKOORD
					[01;36m(LKM[00m [01;31m(LKMVCN[00m
						(LK musten)
						(MF sie allerdings)
						(VC umsteigen)
						(NF in dusseldorf hauptbahnhof)[01;31m)[00m[01;36m)[00m
					(KON und)
					[01;36m(LKM[00m [01;31m(LKVCN[00m
						(LK kamen)
						(VC an)
						[01;31m(NF[00m
							(PX um sechs uhr zehn)
							(PX in hannover)[01;31m)[00m[01;31m)[00m[01;36m)[00m))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK ist)
				(MF ein ic))[01;31m)[00m
		[01;31m(SU[00m
			(DM oh)
			[01;31m(DM[00m
				[01;36m(DM[00m
					(NX
						(NN moment))[01;36m)[00m
				(ADVX mal)[01;31m)[00m
			(SIMPX
				(VF sie)
				(FKOORD [01;33m(FKOORD[00m
					(LKMVC kommen in dusseldorf um sechs uhr sechs an)
					(KON und)
					[01;31m(LKMVC[00m
						(LK mussen)
						(MF da)
						(VXINF umsteigen kommen)[01;31m)[00m
					[01;31m(LKMVCN[00m
						[01;31m(MF[00m
							(PX
								(APPR in)
								(NX hannover))[01;31m)[00m
						(VC an) [01;33mFKOORD)[00m
						[01;31m(NF[00m
							(PX
								(APPR um)
								(NX neun uhr zwei))[01;31m)[00m[01;31m)[00m))[01;31m)[00m))
Step:Different label
{'family': ['ADJX'], 'auto preterminal span': (13, 15), 'span': (13, 15), 'subtrees': ['ADVX', 'ADV'], 'parent': 'MF', 'over_word': False, 'auto preterminals': ('ADV', 'ADV'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('ADVX', 'ADJX')}
(TOP
	(TURN
		(SU
			(DM moment)
			(SIMPX
				(VF ich)
				(LK gucke)
				[01;33m(MF[00m (MF mal)
				[01;31m(SU[00m
					[01;31m(SIMPX[00m
						(PX
							(VF
								[01;31m(VC[00m
									(PTKVZ nach)[01;31m)[00m
								(ADVX nachts))) [01;33mMF)[00m
						(LK konnen)
						(MF sie nicht)
						(VC fahren)[01;31m)[00m[01;31m)[00m))
		[01;31m(SU[00m
			(DM also)
			[01;36m(SIMPX[00m
				(SIMPX sie konnen nur tagsuber fahren)
				(SIMPX
					(VF der erste zug)
					(LK geht)
					(MF um funf uhr zehn)
					(VC ab)
					[01;31m(NF[00m
						(PX
							(APPR von)
							(NX bonn))[01;31m)[00m)[01;36m)[00m
			(SIMPX
				(VF da)
				(FKOORD
					[01;36m(LKM[00m [01;31m(LKMVCN[00m
						(LK musten)
						(MF sie allerdings)
						(VC umsteigen)
						(NF in dusseldorf hauptbahnhof)[01;31m)[00m[01;36m)[00m
					(KON und)
					[01;36m(LKM[00m [01;31m(LKVCN[00m
						(LK kamen)
						(VC an)
						[01;31m(NF[00m
							(PX um sechs uhr zehn)
							(PX in hannover)[01;31m)[00m[01;31m)[00m[01;36m)[00m))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK ist)
				(MF ein ic))[01;31m)[00m
		[01;31m(SU[00m
			(DM oh)
			[01;31m(DM[00m
				[01;36m(DM[00m
					(NX
						(NN moment))[01;36m)[00m
				(ADVX mal)[01;31m)[00m
			(SIMPX
				(VF sie)
				(FKOORD [01;33m(FKOORD[00m
					(LKMVC kommen in dusseldorf um sechs uhr sechs an)
					(KON und)
					[01;31m(LKMVC[00m
						(LK mussen)
						(MF da)
						(VXINF umsteigen kommen)[01;31m)[00m
					[01;31m(LKMVCN[00m
						[01;31m(MF[00m
							(PX
								(APPR in)
								(NX hannover))[01;31m)[00m
						(VC an) [01;33mFKOORD)[00m
						[01;31m(NF[00m
							(PX
								(APPR um)
								(NX neun uhr zwei))[01;31m)[00m[01;31m)[00m))[01;31m)[00m))
Step:Different label
{'family': ['LKM', 'KON', 'LKVCN'], 'auto preterminal span': (28, 35), 'span': (28, 35), 'subtrees': ['LK', 'MF', 'VC', 'NF'], 'parent': 'FKOORD', 'over_word': False, 'auto preterminals': ('VMFIN', 'PPER', 'ADV', 'VVINF', 'APPR', 'NE', 'NN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('LKMVCN', 'LKM')}
(TOP
	(TURN
		(SU
			(DM moment)
			(SIMPX
				(VF ich)
				(LK gucke)
				[01;33m(MF[00m (MF mal)
				[01;31m(SU[00m
					[01;31m(SIMPX[00m
						(PX
							(VF
								[01;31m(VC[00m
									(PTKVZ nach)[01;31m)[00m
								(ADVX nachts))) [01;33mMF)[00m
						(LK konnen)
						(MF sie nicht)
						(VC fahren)[01;31m)[00m[01;31m)[00m))
		[01;31m(SU[00m
			(DM also)
			[01;36m(SIMPX[00m
				(SIMPX sie konnen nur tagsuber fahren)
				(SIMPX
					(VF der erste zug)
					(LK geht)
					(MF um funf uhr zehn)
					(VC ab)
					[01;31m(NF[00m
						(PX
							(APPR von)
							(NX bonn))[01;31m)[00m)[01;36m)[00m
			(SIMPX
				(VF da)
				(FKOORD
					(LKM musten sie allerdings umsteigen in dusseldorf hauptbahnhof)
					(KON und)
					[01;36m(LKM[00m [01;31m(LKVCN[00m
						(LK kamen)
						(VC an)
						[01;31m(NF[00m
							(PX um sechs uhr zehn)
							(PX in hannover)[01;31m)[00m[01;31m)[00m[01;36m)[00m))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK ist)
				(MF ein ic))[01;31m)[00m
		[01;31m(SU[00m
			(DM oh)
			[01;31m(DM[00m
				[01;36m(DM[00m
					(NX
						(NN moment))[01;36m)[00m
				(ADVX mal)[01;31m)[00m
			(SIMPX
				(VF sie)
				(FKOORD [01;33m(FKOORD[00m
					(LKMVC kommen in dusseldorf um sechs uhr sechs an)
					(KON und)
					[01;31m(LKMVC[00m
						(LK mussen)
						(MF da)
						(VXINF umsteigen kommen)[01;31m)[00m
					[01;31m(LKMVCN[00m
						[01;31m(MF[00m
							(PX
								(APPR in)
								(NX hannover))[01;31m)[00m
						(VC an) [01;33mFKOORD)[00m
						[01;31m(NF[00m
							(PX
								(APPR um)
								(NX neun uhr zwei))[01;31m)[00m[01;31m)[00m))[01;31m)[00m))
Step:Different label
{'family': ['LKM', 'KON', 'LKM'], 'auto preterminal span': (36, 44), 'span': (36, 44), 'subtrees': ['LK', 'VC', 'NF'], 'parent': 'FKOORD', 'over_word': False, 'auto preterminals': ('VVFIN', 'PTKVZ', 'APPR', 'CARD', 'NN', 'CARD', 'APPR', 'NE'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('LKVCN', 'LKM')}
(TOP
	(TURN
		(SU
			(DM moment)
			(SIMPX
				(VF ich)
				(LK gucke)
				[01;33m(MF[00m (MF mal)
				[01;31m(SU[00m
					[01;31m(SIMPX[00m
						(PX
							(VF
								[01;31m(VC[00m
									(PTKVZ nach)[01;31m)[00m
								(ADVX nachts))) [01;33mMF)[00m
						(LK konnen)
						(MF sie nicht)
						(VC fahren)[01;31m)[00m[01;31m)[00m))
		[01;31m(SU[00m
			(DM also)
			[01;36m(SIMPX[00m
				(SIMPX sie konnen nur tagsuber fahren)
				(SIMPX
					(VF der erste zug)
					(LK geht)
					(MF um funf uhr zehn)
					(VC ab)
					[01;31m(NF[00m
						(PX
							(APPR von)
							(NX bonn))[01;31m)[00m)[01;36m)[00m
			(SIMPX
				(VF da)
				(FKOORD
					(LKM musten sie allerdings umsteigen in dusseldorf hauptbahnhof)
					(KON und)
					(LKM
						(LK kamen)
						(VC an)
						[01;31m(NF[00m
							(PX um sechs uhr zehn)
							(PX in hannover)[01;31m)[00m)))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK ist)
				(MF ein ic))[01;31m)[00m
		[01;31m(SU[00m
			(DM oh)
			[01;31m(DM[00m
				[01;36m(DM[00m
					(NX
						(NN moment))[01;36m)[00m
				(ADVX mal)[01;31m)[00m
			(SIMPX
				(VF sie)
				(FKOORD [01;33m(FKOORD[00m
					(LKMVC kommen in dusseldorf um sechs uhr sechs an)
					(KON und)
					[01;31m(LKMVC[00m
						(LK mussen)
						(MF da)
						(VXINF umsteigen kommen)[01;31m)[00m
					[01;31m(LKMVCN[00m
						[01;31m(MF[00m
							(PX
								(APPR in)
								(NX hannover))[01;31m)[00m
						(VC an) [01;33mFKOORD)[00m
						[01;31m(NF[00m
							(PX
								(APPR um)
								(NX neun uhr zwei))[01;31m)[00m[01;31m)[00m))[01;31m)[00m))
Step:Modifier Attachment
{'new_parent': 'SU', 'new_family': ['DM', 'DM', 'ADVX', 'SIMPX'], 'mover info': [('ADVX', (50, 51))], 'old_family': ['NX', 'ADVX'], 'start left siblings': ['NX'], 'auto preterminals': ('ITJ', 'NN', 'ADV', 'PPER', 'VVFIN', 'APPR', 'NE', 'APPR', 'CARD', 'NN', 'CARD', 'PTKVZ', 'KON', 'VMFIN', 'ADV', 'VVINF', 'VVFIN', 'APPR', 'NE', 'PTKVZ', 'APPR', 'CARD', 'NN', 'CARD'), 'start right siblings': [], 'end left siblings': ['DM', 'DM'], 'auto preterminal span': (48, 72), 'movers': ['ADVX'], 'old_parent': 'DM', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['SIMPX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU
			(DM moment)
			(SIMPX
				(VF ich)
				(LK gucke)
				[01;33m(MF[00m (MF mal)
				[01;31m(SU[00m
					[01;31m(SIMPX[00m
						(PX
							(VF
								[01;31m(VC[00m
									(PTKVZ nach)[01;31m)[00m
								(ADVX nachts))) [01;33mMF)[00m
						(LK konnen)
						(MF sie nicht)
						(VC fahren)[01;31m)[00m[01;31m)[00m))
		[01;31m(SU[00m
			(DM also)
			[01;36m(SIMPX[00m
				(SIMPX sie konnen nur tagsuber fahren)
				(SIMPX
					(VF der erste zug)
					(LK geht)
					(MF um funf uhr zehn)
					(VC ab)
					[01;31m(NF[00m
						(PX
							(APPR von)
							(NX bonn))[01;31m)[00m)[01;36m)[00m
			(SIMPX
				(VF da)
				(FKOORD
					(LKM musten sie allerdings umsteigen in dusseldorf hauptbahnhof)
					(KON und)
					(LKM
						(LK kamen)
						(VC an)
						[01;31m(NF[00m
							(PX um sechs uhr zehn)
							(PX in hannover)[01;31m)[00m)))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK ist)
				(MF ein ic))[01;31m)[00m
		[01;31m(SU[00m
			(DM oh)
			(DM moment)
			(ADVX mal)
			(SIMPX
				(VF sie)
				(FKOORD [01;33m(FKOORD[00m
					(LKMVC kommen in dusseldorf um sechs uhr sechs an)
					(KON und)
					[01;31m(LKMVC[00m
						(LK mussen)
						(MF da)
						(VXINF umsteigen kommen)[01;31m)[00m
					[01;31m(LKMVCN[00m
						[01;31m(MF[00m
							(PX
								(APPR in)
								(NX hannover))[01;31m)[00m
						(VC an) [01;33mFKOORD)[00m
						[01;31m(NF[00m
							(PX
								(APPR um)
								(NX neun uhr zwei))[01;31m)[00m[01;31m)[00m))[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['DM', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VMFIN', 'ADV', 'ADV', 'VVINF', 'ART', 'ADJA', 'NN', 'VVFIN', 'APPR', 'CARD', 'NN', 'CARD', 'PTKVZ', 'APPR', 'NE'), 'right siblings': [(SIMPX (VF (ADVX (ADV da))) (FKOORD (LKM (LK (VXFIN (VMFIN musten))) (MF (NX (PPER sie)) (ADVX (ADV allerdings))) (VC (VXINF (VVINF umsteigen))) (NF (PX (APPR in) (NX (NX (NE dusseldorf)) (NX (NN hauptbahnhof)))))) (KON und) (LKM (LK (VXFIN (VVFIN kamen))) (VC (PTKVZ an)) (NF (PX (APPR um) (NX (NX (ADJX (CARD sechs)) (NN uhr)) (ADJX (CARD zehn)))) (PX (APPR in) (NX (NE hannover)))))))], 'left siblings': [(DM (ADVX (ADV also)))], 'auto preterminal span': (11, 27), 'span': (11, 27), 'parent': 'SU', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM moment)
			(SIMPX
				(VF ich)
				(LK gucke)
				[01;33m(MF[00m (MF mal)
				[01;31m(SU[00m
					[01;31m(SIMPX[00m
						(PX
							(VF
								[01;31m(VC[00m
									(PTKVZ nach)[01;31m)[00m
								(ADVX nachts))) [01;33mMF)[00m
						(LK konnen)
						(MF sie nicht)
						(VC fahren)[01;31m)[00m[01;31m)[00m))
		[01;31m(SU[00m
			(DM also)
			(SIMPX
				(SIMPX sie konnen nur tagsuber fahren)
				(SIMPX
					(VF der erste zug)
					(LK geht)
					(MF um funf uhr zehn)
					(VC ab)
					[01;31m(NF[00m
						(PX
							(APPR von)
							(NX bonn))[01;31m)[00m))
			(SIMPX
				(VF da)
				(FKOORD
					(LKM musten sie allerdings umsteigen in dusseldorf hauptbahnhof)
					(KON und)
					(LKM
						(LK kamen)
						(VC an)
						[01;31m(NF[00m
							(PX um sechs uhr zehn)
							(PX in hannover)[01;31m)[00m)))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK ist)
				(MF ein ic))[01;31m)[00m
		[01;31m(SU[00m
			(DM oh)
			(DM moment)
			(ADVX mal)
			(SIMPX
				(VF sie)
				(FKOORD [01;33m(FKOORD[00m
					(LKMVC kommen in dusseldorf um sechs uhr sechs an)
					(KON und)
					[01;31m(LKMVC[00m
						(LK mussen)
						(MF da)
						(VXINF umsteigen kommen)[01;31m)[00m
					[01;31m(LKMVCN[00m
						[01;31m(MF[00m
							(PX
								(APPR in)
								(NX hannover))[01;31m)[00m
						(VC an) [01;33mFKOORD)[00m
						[01;31m(NF[00m
							(PX
								(APPR um)
								(NX neun uhr zwei))[01;31m)[00m[01;31m)[00m))[01;31m)[00m))
Step:Single Word Phrase
{'subtrees': ['PTKVZ'], 'family': ['VC', 'ADVX'], 'over_word': True, 'over words': True, 'auto preterminals': ('PTKVZ', 'ADV'), 'right siblings': ['ADVX'], 'parent': 'VF', 'auto preterminal span': (4, 6), 'span': (4, 5), 'left siblings': [], 'label': 'VC', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM moment)
			(SIMPX
				(VF ich)
				(LK gucke)
				[01;33m(MF[00m (MF mal)
				[01;31m(SU[00m
					[01;31m(SIMPX[00m
						(PX nach nachts) [01;33mMF)[00m
						(LK konnen)
						(MF sie nicht)
						(VC fahren)[01;31m)[00m[01;31m)[00m))
		[01;31m(SU[00m
			(DM also)
			(SIMPX
				(SIMPX sie konnen nur tagsuber fahren)
				(SIMPX
					(VF der erste zug)
					(LK geht)
					(MF um funf uhr zehn)
					(VC ab)
					[01;31m(NF[00m
						(PX
							(APPR von)
							(NX bonn))[01;31m)[00m))
			(SIMPX
				(VF da)
				(FKOORD
					(LKM musten sie allerdings umsteigen in dusseldorf hauptbahnhof)
					(KON und)
					(LKM
						(LK kamen)
						(VC an)
						[01;31m(NF[00m
							(PX um sechs uhr zehn)
							(PX in hannover)[01;31m)[00m)))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK ist)
				(MF ein ic))[01;31m)[00m
		[01;31m(SU[00m
			(DM oh)
			(DM moment)
			(ADVX mal)
			(SIMPX
				(VF sie)
				(FKOORD [01;33m(FKOORD[00m
					(LKMVC kommen in dusseldorf um sechs uhr sechs an)
					(KON und)
					[01;31m(LKMVC[00m
						(LK mussen)
						(MF da)
						(VXINF umsteigen kommen)[01;31m)[00m
					[01;31m(LKMVCN[00m
						[01;31m(MF[00m
							(PX
								(APPR in)
								(NX hannover))[01;31m)[00m
						(VC an) [01;33mFKOORD)[00m
						[01;31m(NF[00m
							(PX
								(APPR um)
								(NX neun uhr zwei))[01;31m)[00m[01;31m)[00m))[01;31m)[00m))
Step:Unary
{'subtrees': ['PX', 'LK', 'MF', 'VC'], 'family': ['SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKVZ', 'ADV', 'VMFIN', 'PPER', 'PTKNEG', 'VVINF'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (4, 10), 'span': (4, 10), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM moment)
			(SIMPX
				(VF ich)
				(LK gucke)
				[01;33m(MF[00m (MF mal)
				[01;31m(SU[00m
					(PX nach nachts) [01;33mMF)[00m
					(LK konnen)
					(MF sie nicht)
					(VC fahren)[01;31m)[00m))
		[01;31m(SU[00m
			(DM also)
			(SIMPX
				(SIMPX sie konnen nur tagsuber fahren)
				(SIMPX
					(VF der erste zug)
					(LK geht)
					(MF um funf uhr zehn)
					(VC ab)
					[01;31m(NF[00m
						(PX
							(APPR von)
							(NX bonn))[01;31m)[00m))
			(SIMPX
				(VF da)
				(FKOORD
					(LKM musten sie allerdings umsteigen in dusseldorf hauptbahnhof)
					(KON und)
					(LKM
						(LK kamen)
						(VC an)
						[01;31m(NF[00m
							(PX um sechs uhr zehn)
							(PX in hannover)[01;31m)[00m)))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK ist)
				(MF ein ic))[01;31m)[00m
		[01;31m(SU[00m
			(DM oh)
			(DM moment)
			(ADVX mal)
			(SIMPX
				(VF sie)
				(FKOORD [01;33m(FKOORD[00m
					(LKMVC kommen in dusseldorf um sechs uhr sechs an)
					(KON und)
					[01;31m(LKMVC[00m
						(LK mussen)
						(MF da)
						(VXINF umsteigen kommen)[01;31m)[00m
					[01;31m(LKMVCN[00m
						[01;31m(MF[00m
							(PX
								(APPR in)
								(NX hannover))[01;31m)[00m
						(VC an) [01;33mFKOORD)[00m
						[01;31m(NF[00m
							(PX
								(APPR um)
								(NX neun uhr zwei))[01;31m)[00m[01;31m)[00m))[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['PX', 'LK', 'MF', 'VC'], 'family': ['VF', 'LK', 'MF', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'PTKVZ', 'ADV', 'VMFIN', 'PPER', 'PTKNEG', 'VVINF'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (1, 10), 'span': (4, 10), 'left siblings': ['VF', 'LK', 'MF'], 'label': 'SU', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM moment)
			(SIMPX
				(VF ich)
				(LK gucke)
				[01;36m(MF[00m
					(MF mal)
					(PX nach nachts)[01;36m)[00m
				(LK konnen)
				(MF sie nicht)
				(VC fahren)))
		[01;31m(SU[00m
			(DM also)
			(SIMPX
				(SIMPX sie konnen nur tagsuber fahren)
				(SIMPX
					(VF der erste zug)
					(LK geht)
					(MF um funf uhr zehn)
					(VC ab)
					[01;31m(NF[00m
						(PX
							(APPR von)
							(NX bonn))[01;31m)[00m))
			(SIMPX
				(VF da)
				(FKOORD
					(LKM musten sie allerdings umsteigen in dusseldorf hauptbahnhof)
					(KON und)
					(LKM
						(LK kamen)
						(VC an)
						[01;31m(NF[00m
							(PX um sechs uhr zehn)
							(PX in hannover)[01;31m)[00m)))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK ist)
				(MF ein ic))[01;31m)[00m
		[01;31m(SU[00m
			(DM oh)
			(DM moment)
			(ADVX mal)
			(SIMPX
				(VF sie)
				(FKOORD [01;33m(FKOORD[00m
					(LKMVC kommen in dusseldorf um sechs uhr sechs an)
					(KON und)
					[01;31m(LKMVC[00m
						(LK mussen)
						(MF da)
						(VXINF umsteigen kommen)[01;31m)[00m
					[01;31m(LKMVCN[00m
						[01;31m(MF[00m
							(PX
								(APPR in)
								(NX hannover))[01;31m)[00m
						(VC an) [01;33mFKOORD)[00m
						[01;31m(NF[00m
							(PX
								(APPR um)
								(NX neun uhr zwei))[01;31m)[00m[01;31m)[00m))[01;31m)[00m))
Step:PP Attachment
{'subtrees': ['MF', 'PX'], 'family': ['VF', 'LK', 'MF', 'LK', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PTKVZ', 'ADV'), 'right siblings': [(LK (VXFIN (VMFIN konnen))), (MF (NX (PPER sie)) (ADVX (PTKNEG nicht))), (VC (VXINF (VVINF fahren)))], 'left siblings': [(VF (NX (PPER ich))), (LK (VXFIN (VVFIN gucke)))], 'auto preterminal span': (3, 6), 'span': (3, 6), 'parent': 'SIMPX', 'label': 'MF', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU moment ich gucke mal nach nachts konnen sie nicht fahren)
		[01;31m(SU[00m
			(DM also)
			(SIMPX
				(SIMPX sie konnen nur tagsuber fahren)
				(SIMPX
					(VF der erste zug)
					(LK geht)
					(MF um funf uhr zehn)
					(VC ab)
					[01;31m(NF[00m
						(PX
							(APPR von)
							(NX bonn))[01;31m)[00m))
			(SIMPX
				(VF da)
				(FKOORD
					(LKM musten sie allerdings umsteigen in dusseldorf hauptbahnhof)
					(KON und)
					(LKM
						(LK kamen)
						(VC an)
						[01;31m(NF[00m
							(PX um sechs uhr zehn)
							(PX in hannover)[01;31m)[00m)))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK ist)
				(MF ein ic))[01;31m)[00m
		[01;31m(SU[00m
			(DM oh)
			(DM moment)
			(ADVX mal)
			(SIMPX
				(VF sie)
				(FKOORD [01;33m(FKOORD[00m
					(LKMVC kommen in dusseldorf um sechs uhr sechs an)
					(KON und)
					[01;31m(LKMVC[00m
						(LK mussen)
						(MF da)
						(VXINF umsteigen kommen)[01;31m)[00m
					[01;31m(LKMVCN[00m
						[01;31m(MF[00m
							(PX
								(APPR in)
								(NX hannover))[01;31m)[00m
						(VC an) [01;33mFKOORD)[00m
						[01;31m(NF[00m
							(PX
								(APPR um)
								(NX neun uhr zwei))[01;31m)[00m[01;31m)[00m))[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['DM', 'SIMPX', 'SIMPX'], 'family': ['SU', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'PPER', 'VVFIN', 'ADV', 'PTKVZ', 'ADV', 'VMFIN', 'PPER', 'PTKNEG', 'VVINF', 'ADV', 'PPER', 'VMFIN', 'ADV', 'ADV', 'VVINF', 'ART', 'ADJA', 'NN', 'VVFIN', 'APPR', 'CARD', 'NN', 'CARD', 'PTKVZ', 'APPR', 'NE', 'ADV', 'VMFIN', 'PPER', 'ADV', 'VVINF', 'APPR', 'NE', 'NN', 'KON', 'VVFIN', 'PTKVZ', 'APPR', 'CARD', 'NN', 'CARD', 'APPR', 'NE', 'PDS', 'VAFIN', 'ART', 'NE', 'ITJ', 'NN', 'ADV', 'PPER', 'VVFIN', 'APPR', 'NE', 'APPR', 'CARD', 'NN', 'CARD', 'PTKVZ', 'KON', 'VMFIN', 'ADV', 'VVINF', 'VVFIN', 'APPR', 'NE', 'PTKVZ', 'APPR', 'CARD', 'NN', 'CARD'), 'right siblings': ['SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 72), 'span': (10, 44), 'left siblings': ['SU'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU moment ich gucke mal nach nachts konnen sie nicht fahren)
		(DM also)
		(SIMPX
			(SIMPX sie konnen nur tagsuber fahren)
			(SIMPX
				(VF der erste zug)
				(LK geht)
				(MF um funf uhr zehn)
				(VC ab)
				[01;31m(NF[00m
					(PX
						(APPR von)
						(NX bonn))[01;31m)[00m))
		(SIMPX
			(VF da)
			(FKOORD
				(LKM musten sie allerdings umsteigen in dusseldorf hauptbahnhof)
				(KON und)
				(LKM
					(LK kamen)
					(VC an)
					[01;31m(NF[00m
						(PX um sechs uhr zehn)
						(PX in hannover)[01;31m)[00m)))
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK ist)
				(MF ein ic))[01;31m)[00m
		[01;31m(SU[00m
			(DM oh)
			(DM moment)
			(ADVX mal)
			(SIMPX
				(VF sie)
				(FKOORD [01;33m(FKOORD[00m
					(LKMVC kommen in dusseldorf um sechs uhr sechs an)
					(KON und)
					[01;31m(LKMVC[00m
						(LK mussen)
						(MF da)
						(VXINF umsteigen kommen)[01;31m)[00m
					[01;31m(LKMVCN[00m
						[01;31m(MF[00m
							(PX
								(APPR in)
								(NX hannover))[01;31m)[00m
						(VC an) [01;33mFKOORD)[00m
						[01;31m(NF[00m
							(PX
								(APPR um)
								(NX neun uhr zwei))[01;31m)[00m[01;31m)[00m))[01;31m)[00m))
Step:Unary
{'subtrees': ['PX'], 'family': ['VF', 'LK', 'MF', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'ADJA', 'NN', 'VVFIN', 'APPR', 'CARD', 'NN', 'CARD', 'PTKVZ', 'APPR', 'NE'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (16, 27), 'span': (25, 27), 'left siblings': ['VF', 'LK', 'MF', 'VC'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU moment ich gucke mal nach nachts konnen sie nicht fahren)
		(DM also)
		(SIMPX sie konnen nur tagsuber fahren der erste zug geht um funf uhr zehn ab von bonn)
		(SIMPX
			(VF da)
			(FKOORD
				(LKM musten sie allerdings umsteigen in dusseldorf hauptbahnhof)
				(KON und)
				(LKM
					(LK kamen)
					(VC an)
					[01;31m(NF[00m
						(PX um sechs uhr zehn)
						(PX in hannover)[01;31m)[00m)))
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK ist)
				(MF ein ic))[01;31m)[00m
		[01;31m(SU[00m
			(DM oh)
			(DM moment)
			(ADVX mal)
			(SIMPX
				(VF sie)
				(FKOORD [01;33m(FKOORD[00m
					(LKMVC kommen in dusseldorf um sechs uhr sechs an)
					(KON und)
					[01;31m(LKMVC[00m
						(LK mussen)
						(MF da)
						(VXINF umsteigen kommen)[01;31m)[00m
					[01;31m(LKMVCN[00m
						[01;31m(MF[00m
							(PX
								(APPR in)
								(NX hannover))[01;31m)[00m
						(VC an) [01;33mFKOORD)[00m
						[01;31m(NF[00m
							(PX
								(APPR um)
								(NX neun uhr zwei))[01;31m)[00m[01;31m)[00m))[01;31m)[00m))
Step:PP Attachment
{'subtrees': ['PX', 'PX'], 'family': ['LK', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PTKVZ', 'APPR', 'CARD', 'NN', 'CARD', 'APPR', 'NE'), 'right siblings': [], 'parent': 'LKM', 'auto preterminal span': (36, 44), 'span': (38, 44), 'left siblings': ['LK', 'VC'], 'label': 'NF', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU moment ich gucke mal nach nachts konnen sie nicht fahren)
		(DM also)
		(SIMPX sie konnen nur tagsuber fahren der erste zug geht um funf uhr zehn ab von bonn)
		(SIMPX da musten sie allerdings umsteigen in dusseldorf hauptbahnhof und kamen an um sechs uhr zehn in hannover)
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK ist)
				(MF ein ic))[01;31m)[00m
		[01;31m(SU[00m
			(DM oh)
			(DM moment)
			(ADVX mal)
			(SIMPX
				(VF sie)
				(FKOORD [01;33m(FKOORD[00m
					(LKMVC kommen in dusseldorf um sechs uhr sechs an)
					(KON und)
					[01;31m(LKMVC[00m
						(LK mussen)
						(MF da)
						(VXINF umsteigen kommen)[01;31m)[00m
					[01;31m(LKMVCN[00m
						[01;31m(MF[00m
							(PX
								(APPR in)
								(NX hannover))[01;31m)[00m
						(VC an) [01;33mFKOORD)[00m
						[01;31m(NF[00m
							(PX
								(APPR um)
								(NX neun uhr zwei))[01;31m)[00m[01;31m)[00m))[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SU', 'DM', 'SIMPX', 'SIMPX', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'PPER', 'VVFIN', 'ADV', 'PTKVZ', 'ADV', 'VMFIN', 'PPER', 'PTKNEG', 'VVINF', 'ADV', 'PPER', 'VMFIN', 'ADV', 'ADV', 'VVINF', 'ART', 'ADJA', 'NN', 'VVFIN', 'APPR', 'CARD', 'NN', 'CARD', 'PTKVZ', 'APPR', 'NE', 'ADV', 'VMFIN', 'PPER', 'ADV', 'VVINF', 'APPR', 'NE', 'NN', 'KON', 'VVFIN', 'PTKVZ', 'APPR', 'CARD', 'NN', 'CARD', 'APPR', 'NE', 'PDS', 'VAFIN', 'ART', 'NE', 'ITJ', 'NN', 'ADV', 'PPER', 'VVFIN', 'APPR', 'NE', 'APPR', 'CARD', 'NN', 'CARD', 'PTKVZ', 'KON', 'VMFIN', 'ADV', 'VVINF', 'VVFIN', 'APPR', 'NE', 'PTKVZ', 'APPR', 'CARD', 'NN', 'CARD'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 72), 'span': (44, 48), 'left siblings': ['SU', 'DM', 'SIMPX', 'SIMPX'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU moment ich gucke mal nach nachts konnen sie nicht fahren)
		(DM also)
		(SIMPX sie konnen nur tagsuber fahren der erste zug geht um funf uhr zehn ab von bonn)
		(SIMPX da musten sie allerdings umsteigen in dusseldorf hauptbahnhof und kamen an um sechs uhr zehn in hannover)
		(SIMPX das ist ein ic)
		[01;31m(SU[00m
			(DM oh)
			(DM moment)
			(ADVX mal)
			(SIMPX
				(VF sie)
				(FKOORD [01;33m(FKOORD[00m
					(LKMVC kommen in dusseldorf um sechs uhr sechs an)
					(KON und)
					[01;31m(LKMVC[00m
						(LK mussen)
						(MF da)
						(VXINF umsteigen kommen)[01;31m)[00m
					[01;31m(LKMVCN[00m
						[01;31m(MF[00m
							(PX
								(APPR in)
								(NX hannover))[01;31m)[00m
						(VC an) [01;33mFKOORD)[00m
						[01;31m(NF[00m
							(PX
								(APPR um)
								(NX neun uhr zwei))[01;31m)[00m[01;31m)[00m))[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['DM', 'DM', 'ADVX', 'SIMPX'], 'family': ['SU', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'PPER', 'VVFIN', 'ADV', 'PTKVZ', 'ADV', 'VMFIN', 'PPER', 'PTKNEG', 'VVINF', 'ADV', 'PPER', 'VMFIN', 'ADV', 'ADV', 'VVINF', 'ART', 'ADJA', 'NN', 'VVFIN', 'APPR', 'CARD', 'NN', 'CARD', 'PTKVZ', 'APPR', 'NE', 'ADV', 'VMFIN', 'PPER', 'ADV', 'VVINF', 'APPR', 'NE', 'NN', 'KON', 'VVFIN', 'PTKVZ', 'APPR', 'CARD', 'NN', 'CARD', 'APPR', 'NE', 'PDS', 'VAFIN', 'ART', 'NE', 'ITJ', 'NN', 'ADV', 'PPER', 'VVFIN', 'APPR', 'NE', 'APPR', 'CARD', 'NN', 'CARD', 'PTKVZ', 'KON', 'VMFIN', 'ADV', 'VVINF', 'VVFIN', 'APPR', 'NE', 'PTKVZ', 'APPR', 'CARD', 'NN', 'CARD'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 72), 'span': (48, 72), 'left siblings': ['SU', 'DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU moment ich gucke mal nach nachts konnen sie nicht fahren)
		(DM also)
		(SIMPX sie konnen nur tagsuber fahren der erste zug geht um funf uhr zehn ab von bonn)
		(SIMPX da musten sie allerdings umsteigen in dusseldorf hauptbahnhof und kamen an um sechs uhr zehn in hannover)
		(SIMPX das ist ein ic)
		(DM oh)
		(DM moment)
		(ADVX mal)
		(SIMPX
			(VF sie)
			(FKOORD [01;33m(FKOORD[00m
				(LKMVC kommen in dusseldorf um sechs uhr sechs an)
				(KON und)
				[01;31m(LKMVC[00m
					(LK mussen)
					(MF da)
					(VXINF umsteigen kommen)[01;31m)[00m
				[01;31m(LKMVCN[00m
					[01;31m(MF[00m
						(PX
							(APPR in)
							(NX hannover))[01;31m)[00m
					(VC an) [01;33mFKOORD)[00m
					[01;31m(NF[00m
						(PX
							(APPR um)
							(NX neun uhr zwei))[01;31m)[00m[01;31m)[00m))))
Step:UNSET remove
{'subtrees': ['LK', 'MF', 'VXINF'], 'family': ['LKMVC', 'KON', 'LKMVC', 'LKMVCN'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'APPR', 'NE', 'APPR', 'CARD', 'NN', 'CARD', 'PTKVZ', 'KON', 'VMFIN', 'ADV', 'VVINF', 'VVFIN', 'APPR', 'NE', 'PTKVZ', 'APPR', 'CARD', 'NN', 'CARD'), 'right siblings': ['LKMVCN'], 'parent': 'FKOORD', 'auto preterminal span': (52, 72), 'span': (61, 65), 'left siblings': ['LKMVC', 'KON'], 'label': 'LKMVC', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU moment ich gucke mal nach nachts konnen sie nicht fahren)
		(DM also)
		(SIMPX sie konnen nur tagsuber fahren der erste zug geht um funf uhr zehn ab von bonn)
		(SIMPX da musten sie allerdings umsteigen in dusseldorf hauptbahnhof und kamen an um sechs uhr zehn in hannover)
		(SIMPX das ist ein ic)
		(DM oh)
		(DM moment)
		(ADVX mal)
		(SIMPX
			(VF sie)
			(FKOORD [01;33m(FKOORD[00m
				(LKMVC kommen in dusseldorf um sechs uhr sechs an)
				(KON und)
				(LK mussen)
				(MF da)
				(VXINF umsteigen kommen)
				[01;31m(LKMVCN[00m
					[01;31m(MF[00m
						(PX
							(APPR in)
							(NX hannover))[01;31m)[00m
					(VC an) [01;33mFKOORD)[00m
					[01;31m(NF[00m
						(PX
							(APPR um)
							(NX neun uhr zwei))[01;31m)[00m[01;31m)[00m))))
Step:Unary
{'subtrees': ['PX'], 'family': ['MF', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'NE', 'PTKVZ', 'APPR', 'CARD', 'NN', 'CARD'), 'right siblings': ['VC', 'NF'], 'parent': 'LKMVCN', 'auto preterminal span': (65, 72), 'span': (65, 67), 'left siblings': [], 'label': 'MF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU moment ich gucke mal nach nachts konnen sie nicht fahren)
		(DM also)
		(SIMPX sie konnen nur tagsuber fahren der erste zug geht um funf uhr zehn ab von bonn)
		(SIMPX da musten sie allerdings umsteigen in dusseldorf hauptbahnhof und kamen an um sechs uhr zehn in hannover)
		(SIMPX das ist ein ic)
		(DM oh)
		(DM moment)
		(ADVX mal)
		(SIMPX
			(VF sie)
			(FKOORD [01;33m(FKOORD[00m
				(LKMVC kommen in dusseldorf um sechs uhr sechs an)
				(KON und)
				(LK mussen)
				(MF da)
				(VXINF umsteigen kommen)
				[01;31m(LKMVCN[00m
					(PX in hannover)
					(VC an) [01;33mFKOORD)[00m
					[01;31m(NF[00m
						(PX
							(APPR um)
							(NX neun uhr zwei))[01;31m)[00m[01;31m)[00m))))
Step:UNSET remove
{'subtrees': ['PX', 'VC', 'NF'], 'family': ['LKMVC', 'KON', 'LK', 'MF', 'VXINF', 'LKMVCN'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'APPR', 'NE', 'APPR', 'CARD', 'NN', 'CARD', 'PTKVZ', 'KON', 'VMFIN', 'ADV', 'VVINF', 'VVFIN', 'APPR', 'NE', 'PTKVZ', 'APPR', 'CARD', 'NN', 'CARD'), 'right siblings': [], 'parent': 'FKOORD', 'auto preterminal span': (52, 72), 'span': (65, 72), 'left siblings': ['LKMVC', 'KON', 'LK', 'MF', 'VXINF'], 'label': 'LKMVCN', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU moment ich gucke mal nach nachts konnen sie nicht fahren)
		(DM also)
		(SIMPX sie konnen nur tagsuber fahren der erste zug geht um funf uhr zehn ab von bonn)
		(SIMPX da musten sie allerdings umsteigen in dusseldorf hauptbahnhof und kamen an um sechs uhr zehn in hannover)
		(SIMPX das ist ein ic)
		(DM oh)
		(DM moment)
		(ADVX mal)
		(SIMPX
			(VF sie)
			(FKOORD
				[01;36m(FKOORD[00m
					(LKMVC kommen in dusseldorf um sechs uhr sechs an)
					(KON und)
					(LK mussen)
					(MF da)
					(VXINF umsteigen kommen)
					(PX in hannover)
					(VC an)[01;36m)[00m
				[01;31m(NF[00m
					(PX
						(APPR um)
						(NX neun uhr zwei))[01;31m)[00m))))
Step:PP Attachment
{'subtrees': ['LKMVC', 'KON', 'LK', 'MF', 'VXINF', 'PX', 'VC'], 'family': ['FKOORD', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'APPR', 'NE', 'APPR', 'CARD', 'NN', 'CARD', 'PTKVZ', 'KON', 'VMFIN', 'ADV', 'VVINF', 'VVFIN', 'APPR', 'NE', 'PTKVZ'), 'right siblings': [(NF (PX (APPR um) (NX (NX (ADJX (CARD neun)) (NN uhr)) (ADJX (CARD zwei)))))], 'left siblings': [], 'auto preterminal span': (52, 68), 'span': (52, 68), 'parent': 'FKOORD', 'label': 'FKOORD', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU moment ich gucke mal nach nachts konnen sie nicht fahren)
		(DM also)
		(SIMPX sie konnen nur tagsuber fahren der erste zug geht um funf uhr zehn ab von bonn)
		(SIMPX da musten sie allerdings umsteigen in dusseldorf hauptbahnhof und kamen an um sechs uhr zehn in hannover)
		(SIMPX das ist ein ic)
		(DM oh)
		(DM moment)
		(ADVX mal)
		(SIMPX
			(VF sie)
			(FKOORD
				(FKOORD kommen in dusseldorf um sechs uhr sechs an und mussen da umsteigen kommen in hannover an)
				[01;31m(NF[00m
					(PX
						(APPR um)
						(NX neun uhr zwei))[01;31m)[00m))))
Step:Unary
{'subtrees': ['PX'], 'family': ['FKOORD', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'APPR', 'NE', 'APPR', 'CARD', 'NN', 'CARD', 'PTKVZ', 'KON', 'VMFIN', 'ADV', 'VVINF', 'VVFIN', 'APPR', 'NE', 'PTKVZ', 'APPR', 'CARD', 'NN', 'CARD'), 'right siblings': [], 'parent': 'FKOORD', 'auto preterminal span': (52, 72), 'span': (68, 72), 'left siblings': ['FKOORD'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP moment ich gucke mal nach nachts konnen sie nicht fahren also sie konnen nur tagsuber fahren der erste zug geht um funf uhr zehn ab von bonn da musten sie allerdings umsteigen in dusseldorf hauptbahnhof und kamen an um sechs uhr zehn in hannover das ist ein ic oh moment mal sie kommen in dusseldorf um sechs uhr sechs an und mussen da umsteigen kommen in hannover an um neun uhr zwei)

Sentence 632:
21 Initial errors
0 on fringe, 17 iterations
3 Error:Clause Attachment
3 Error:NP Attachment
1 Error:Single Word Phrase
1 Error:PP Attachment
1 Error:Unary
1 Error:UNSET remove
1 Error:Unary
1 Error:UNSET remove
1 Error:Unary
1 Error:UNSET remove
1 Error:Modifier Attachment
1 Error:Unary
1 Error:Unary
1 Error:UNSET remove
1 Error:Unary
1 Error:Unary
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(SIMPX der fahrt)
			(DM ah)
			(DM entschuldigung)
			[01;31m(SIMPX[00m [01;33m(VF (NX (SIMPX (SIMPX[00m
				(VF der)
				(LK fahrt)
				[01;31m(MF[00m
					[01;31m(NX[00m
						(ADVX nur) [01;33mSIMPX)[00m
						(NX samstag) [01;33mSIMPX)[00m
						[01;33m(NX[00m (NX sonntag)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;36m(NX[00m [01;31m(VF[00m
					[01;31m(ADJX[00m
						(ADJD taglich)[01;31m)[00m[01;31m)[00m [01;33mNX) NX) VF)[00m[01;36m)[00m
				(LK fahrt)
				(MF
					[01;36m(MF[00m
						(ADVX dann)
						(PX um sechs uhr funf)[01;36m)[00m
					[01;36m(VF[00m
						(NX
							(ART der)
							(ADJX erste)
							(NN zug))[01;36m)[00m)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK kommen)
				(MF sie)
				(VC an)
				[01;31m(NF[00m
					(PX
						(APPR um)
						(NX zehn uhr neunzehn))[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(ADJX[00m
				(ADVX also)
				(ADVX auch)
				(ADJX zu spat)[01;31m)[00m[01;31m)[00m))
Step:Clause Attachment
{'new_parent': 'VF', 'new_family': ['SIMPX', 'ADJX'], 'mover info': [('SIMPX', (4, 9))], 'old_family': ['SIMPX', 'DM', 'DM', 'SIMPX'], 'start left siblings': ['SIMPX', 'DM', 'DM'], 'auto preterminals': ('PDS', 'VVFIN', 'ITJ', 'NN', 'PDS', 'VVFIN', 'ADV', 'NN', 'NN', 'ADJD', 'VVFIN', 'ADV', 'APPR', 'CARD', 'NN', 'CARD', 'ART', 'ADJA', 'NN', 'VVFIN', 'PPER', 'PTKVZ', 'APPR', 'CARD', 'NN', 'CARD', 'ADV', 'ADV', 'PTKA', 'ADJD'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 30), 'adding node already present': False, 'movers': ['SIMPX'], 'old_parent': 'SU', 'added and moved': True, 'end right siblings': ['ADJX'], 'classified_type': 'Clause Attachment', 'type': 'move', 'added label': 'VF'}
(TOP
	(TURN
		[01;31m(SU[00m
			(SIMPX der fahrt)
			(DM ah)
			(DM entschuldigung)[01;31m)[00m
		[01;31m(SU[00m [01;33m(SIMPX (SIMPX[00m
			[01;31m(SIMPX[00m
				(NX
					(VF
						[01;31m(SIMPX[00m
							(VF der)
							(LK fahrt)
							[01;31m(MF[00m
								[01;31m(NX[00m
									(ADVX nur) [01;33mSIMPX)[00m
									(NX samstag) [01;33mSIMPX)[00m
									[01;33m(NX[00m (NX sonntag)[01;31m)[00m[01;31m)[00m[01;31m)[00m
						[01;36m(NX[00m [01;31m(ADJX[00m
							(ADJD taglich)[01;31m)[00m[01;36m)[00m)) [01;33mNX)[00m
				(LK fahrt)
				(MF
					[01;36m(MF[00m
						(ADVX dann)
						(PX um sechs uhr funf)[01;36m)[00m
					[01;36m(VF[00m
						(NX
							(ART der)
							(ADJX erste)
							(NN zug))[01;36m)[00m)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK kommen)
				(MF sie)
				(VC an)
				[01;31m(NF[00m
					(PX
						(APPR um)
						(NX zehn uhr neunzehn))[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(ADJX[00m
				(ADVX also)
				(ADVX auch)
				(ADJX zu spat)[01;31m)[00m[01;31m)[00m))
Step:NP Attachment
{'new_parent': 'ADJX', 'new_family': ['NX', 'ADJD'], 'mover info': [('NX', (8, 9))], 'old_family': ['ADVX', 'NX', 'NX'], 'start left siblings': ['ADVX', 'NX'], 'auto preterminals': ('PDS', 'VVFIN', 'ADV', 'NN', 'NN', 'ADJD'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (4, 10), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'NX', 'POS confusion': ('NN', 'NN'), 'added and moved': True, 'end right siblings': ['ADJD'], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'VF'}
(TOP
	(TURN
		[01;31m(SU[00m
			(SIMPX der fahrt)
			(DM ah)
			(DM entschuldigung)[01;31m)[00m
		[01;31m(SU[00m [01;33m(SIMPX[00m
			[01;31m(SIMPX[00m
				(NX
					(VF
						(SIMPX
							(VF der)
							(LK fahrt)
							[01;31m(MF[00m
								[01;31m(NX[00m
									(ADVX nur) [01;33mSIMPX)[00m
									(NX samstag)[01;31m)[00m[01;31m)[00m)
						(NX
							[01;31m(ADJX[00m
								(NX sonntag)
								[01;36m(NX[00m
									(ADJD taglich)[01;36m)[00m[01;31m)[00m)))
				(LK fahrt)
				(MF
					[01;36m(MF[00m
						(ADVX dann)
						(PX um sechs uhr funf)[01;36m)[00m
					[01;36m(VF[00m
						(NX
							(ART der)
							(ADJX erste)
							(NN zug))[01;36m)[00m)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK kommen)
				(MF sie)
				(VC an)
				[01;31m(NF[00m
					(PX
						(APPR um)
						(NX zehn uhr neunzehn))[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(ADJX[00m
				(ADVX also)
				(ADVX auch)
				(ADJX zu spat)[01;31m)[00m[01;31m)[00m))
Step:Single Word Phrase
{'subtrees': ['ADJD'], 'family': ['NX', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADJD',), 'right siblings': [], 'left siblings': [(NX (NN sonntag))], 'auto preterminal span': (9, 10), 'span': (9, 10), 'parent': 'ADJX', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(SIMPX der fahrt)
			(DM ah)
			(DM entschuldigung)[01;31m)[00m
		[01;31m(SU[00m [01;33m(SIMPX[00m
			[01;31m(SIMPX[00m
				(NX
					(VF
						(SIMPX
							(VF der)
							(LK fahrt)
							[01;31m(MF[00m
								[01;31m(NX[00m
									(ADVX nur) [01;33mSIMPX)[00m
									(NX samstag)[01;31m)[00m[01;31m)[00m)
						(NX
							[01;31m(ADJX[00m
								(NX sonntag)
								(NX taglich)[01;31m)[00m)))
				(LK fahrt)
				(MF
					[01;36m(MF[00m
						(ADVX dann)
						(PX um sechs uhr funf)[01;36m)[00m
					[01;36m(VF[00m
						(NX
							(ART der)
							(ADJX erste)
							(NN zug))[01;36m)[00m)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK kommen)
				(MF sie)
				(VC an)
				[01;31m(NF[00m
					(PX
						(APPR um)
						(NX zehn uhr neunzehn))[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(ADJX[00m
				(ADVX also)
				(ADVX auch)
				(ADJX zu spat)[01;31m)[00m[01;31m)[00m))
Step:PP Attachment
{'subtrees': ['ADVX', 'PX'], 'family': ['MF', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'APPR', 'CARD', 'NN', 'CARD'), 'right siblings': [(NX (ART der) (ADJX (ADJA erste)) (NN zug))], 'left siblings': [], 'auto preterminal span': (11, 16), 'span': (11, 16), 'parent': 'MF', 'label': 'MF', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(SIMPX der fahrt)
			(DM ah)
			(DM entschuldigung)[01;31m)[00m
		[01;31m(SU[00m [01;33m(SIMPX[00m
			[01;31m(SIMPX[00m
				(NX
					(VF
						(SIMPX
							(VF der)
							(LK fahrt)
							[01;31m(MF[00m
								[01;31m(NX[00m
									(ADVX nur) [01;33mSIMPX)[00m
									(NX samstag)[01;31m)[00m[01;31m)[00m)
						(NX
							[01;31m(ADJX[00m
								(NX sonntag)
								(NX taglich)[01;31m)[00m)))
				(LK fahrt)
				(MF
					(MF dann um sechs uhr funf)
					[01;36m(VF[00m
						(NX
							(ART der)
							(ADJX erste)
							(NN zug))[01;36m)[00m)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK kommen)
				(MF sie)
				(VC an)
				[01;31m(NF[00m
					(PX
						(APPR um)
						(NX zehn uhr neunzehn))[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(ADJX[00m
				(ADVX also)
				(ADVX auch)
				(ADJX zu spat)[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['NX'], 'family': ['MF', 'VF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'ADJA', 'NN'), 'right siblings': [], 'left siblings': [(MF (ADVX (ADV dann)) (PX (APPR um) (NX (NX (ADJX (CARD sechs)) (NN uhr)) (ADJX (CARD funf)))))], 'auto preterminal span': (16, 19), 'span': (16, 19), 'parent': 'MF', 'label': 'VF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(SIMPX der fahrt)
			(DM ah)
			(DM entschuldigung)[01;31m)[00m
		[01;31m(SU[00m [01;33m(SIMPX[00m
			[01;31m(SIMPX[00m
				(NX
					(VF
						(SIMPX
							(VF der)
							(LK fahrt)
							[01;31m(MF[00m
								[01;31m(NX[00m
									(ADVX nur) [01;33mSIMPX)[00m
									(NX samstag)[01;31m)[00m[01;31m)[00m)
						(NX
							[01;31m(ADJX[00m
								(NX sonntag)
								(NX taglich)[01;31m)[00m)))
				(LK fahrt)
				(MF dann um sechs uhr funf der erste zug)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK kommen)
				(MF sie)
				(VC an)
				[01;31m(NF[00m
					(PX
						(APPR um)
						(NX zehn uhr neunzehn))[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(ADJX[00m
				(ADVX also)
				(ADVX auch)
				(ADJX zu spat)[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['SIMPX', 'DM', 'DM'], 'family': ['SU', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VVFIN', 'ITJ', 'NN', 'PDS', 'VVFIN', 'ADV', 'NN', 'NN', 'ADJD', 'VVFIN', 'ADV', 'APPR', 'CARD', 'NN', 'CARD', 'ART', 'ADJA', 'NN', 'VVFIN', 'PPER', 'PTKVZ', 'APPR', 'CARD', 'NN', 'CARD', 'ADV', 'ADV', 'PTKA', 'ADJD'), 'right siblings': ['SU', 'SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 30), 'span': (0, 4), 'left siblings': [], 'label': 'SU', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX der fahrt)
		(DM ah)
		(DM entschuldigung)
		[01;31m(SU[00m [01;33m(SIMPX[00m
			[01;31m(SIMPX[00m
				(NX
					(VF
						(SIMPX
							(VF der)
							(LK fahrt)
							[01;31m(MF[00m
								[01;31m(NX[00m
									(ADVX nur) [01;33mSIMPX)[00m
									(NX samstag)[01;31m)[00m[01;31m)[00m)
						(NX
							[01;31m(ADJX[00m
								(NX sonntag)
								(NX taglich)[01;31m)[00m)))
				(LK fahrt)
				(MF dann um sechs uhr funf der erste zug)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK kommen)
				(MF sie)
				(VC an)
				[01;31m(NF[00m
					(PX
						(APPR um)
						(NX zehn uhr neunzehn))[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(ADJX[00m
				(ADVX also)
				(ADVX auch)
				(ADJX zu spat)[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['NX', 'LK', 'MF'], 'family': ['SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VVFIN', 'ADV', 'NN', 'NN', 'ADJD', 'VVFIN', 'ADV', 'APPR', 'CARD', 'NN', 'CARD', 'ART', 'ADJA', 'NN'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (4, 19), 'span': (4, 19), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX der fahrt)
		(DM ah)
		(DM entschuldigung)
		[01;31m(SU[00m [01;33m(SIMPX[00m
			(NX
				(VF
					(SIMPX
						(VF der)
						(LK fahrt)
						[01;31m(MF[00m
							[01;31m(NX[00m
								(ADVX nur) [01;33mSIMPX)[00m
								(NX samstag)[01;31m)[00m[01;31m)[00m)
					(NX
						[01;31m(ADJX[00m
							(NX sonntag)
							(NX taglich)[01;31m)[00m)))
			(LK fahrt)
			(MF dann um sechs uhr funf der erste zug)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK kommen)
				(MF sie)
				(VC an)
				[01;31m(NF[00m
					(PX
						(APPR um)
						(NX zehn uhr neunzehn))[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(ADJX[00m
				(ADVX also)
				(ADVX auch)
				(ADJX zu spat)[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['NX', 'LK', 'MF'], 'family': ['SIMPX', 'DM', 'DM', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VVFIN', 'ITJ', 'NN', 'PDS', 'VVFIN', 'ADV', 'NN', 'NN', 'ADJD', 'VVFIN', 'ADV', 'APPR', 'CARD', 'NN', 'CARD', 'ART', 'ADJA', 'NN', 'VVFIN', 'PPER', 'PTKVZ', 'APPR', 'CARD', 'NN', 'CARD', 'ADV', 'ADV', 'PTKA', 'ADJD'), 'right siblings': ['SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 30), 'span': (4, 19), 'left siblings': ['SIMPX', 'DM', 'DM'], 'label': 'SU', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX der fahrt)
		(DM ah)
		(DM entschuldigung)
		(NX [01;33m(SIMPX[00m
			(VF
				(SIMPX
					(VF der)
					(LK fahrt)
					[01;31m(MF[00m
						[01;31m(NX[00m
							(ADVX nur) [01;33mSIMPX)[00m
							(NX samstag)[01;31m)[00m[01;31m)[00m)
				(NX
					[01;31m(ADJX[00m
						(NX sonntag)
						(NX taglich)[01;31m)[00m)))
		(LK fahrt)
		(MF dann um sechs uhr funf der erste zug)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK kommen)
				(MF sie)
				(VC an)
				[01;31m(NF[00m
					(PX
						(APPR um)
						(NX zehn uhr neunzehn))[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(ADJX[00m
				(ADVX also)
				(ADVX auch)
				(ADJX zu spat)[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['ADVX', 'NX'], 'family': ['NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (6, 8), 'span': (6, 8), 'left siblings': [], 'label': 'NX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX der fahrt)
		(DM ah)
		(DM entschuldigung)
		(NX [01;33m(SIMPX[00m
			(VF
				(SIMPX
					(VF der)
					(LK fahrt)
					[01;31m(MF[00m
						(ADVX nur) [01;33mSIMPX)[00m
						(NX samstag)[01;31m)[00m)
				(NX
					[01;31m(ADJX[00m
						(NX sonntag)
						(NX taglich)[01;31m)[00m)))
		(LK fahrt)
		(MF dann um sechs uhr funf der erste zug)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK kommen)
				(MF sie)
				(VC an)
				[01;31m(NF[00m
					(PX
						(APPR um)
						(NX zehn uhr neunzehn))[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(ADJX[00m
				(ADVX also)
				(ADVX auch)
				(ADJX zu spat)[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['ADVX', 'NX'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VVFIN', 'ADV', 'NN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (4, 8), 'span': (6, 8), 'left siblings': ['VF', 'LK'], 'label': 'MF', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX der fahrt)
		(DM ah)
		(DM entschuldigung)
		(NX
			(VF
				(SIMPX
					[01;36m(SIMPX[00m
						(VF der)
						(LK fahrt)
						(ADVX nur)[01;36m)[00m
					(NX samstag))
				(NX
					[01;31m(ADJX[00m
						(NX sonntag)
						(NX taglich)[01;31m)[00m)))
		(LK fahrt)
		(MF dann um sechs uhr funf der erste zug)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK kommen)
				(MF sie)
				(VC an)
				[01;31m(NF[00m
					(PX
						(APPR um)
						(NX zehn uhr neunzehn))[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(ADJX[00m
				(ADVX also)
				(ADVX auch)
				(ADJX zu spat)[01;31m)[00m[01;31m)[00m))
Step:Modifier Attachment
{'subtrees': ['VF', 'LK', 'ADVX'], 'family': ['SIMPX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VVFIN', 'ADV'), 'right siblings': [(NX (NN samstag))], 'left siblings': [], 'auto preterminal span': (4, 7), 'span': (4, 7), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		(SIMPX der fahrt)
		(DM ah)
		(DM entschuldigung)
		(NX
			(VF
				(SIMPX der fahrt nur samstag)
				(NX
					[01;31m(ADJX[00m
						(NX sonntag)
						(NX taglich)[01;31m)[00m)))
		(LK fahrt)
		(MF dann um sechs uhr funf der erste zug)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK kommen)
				(MF sie)
				(VC an)
				[01;31m(NF[00m
					(PX
						(APPR um)
						(NX zehn uhr neunzehn))[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(ADJX[00m
				(ADVX also)
				(ADVX auch)
				(ADJX zu spat)[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['NX', 'NX'], 'family': ['ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'ADJD'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (8, 10), 'span': (8, 10), 'left siblings': [], 'label': 'ADJX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX der fahrt)
		(DM ah)
		(DM entschuldigung)
		(NX der fahrt nur samstag sonntag taglich)
		(LK fahrt)
		(MF dann um sechs uhr funf der erste zug)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK kommen)
				(MF sie)
				(VC an)
				[01;31m(NF[00m
					(PX
						(APPR um)
						(NX zehn uhr neunzehn))[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(ADJX[00m
				(ADVX also)
				(ADVX auch)
				(ADJX zu spat)[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['LK', 'MF', 'VC', 'NF'], 'family': ['SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'PTKVZ', 'APPR', 'CARD', 'NN', 'CARD'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (19, 26), 'span': (19, 26), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX der fahrt)
		(DM ah)
		(DM entschuldigung)
		(NX der fahrt nur samstag sonntag taglich)
		(LK fahrt)
		(MF dann um sechs uhr funf der erste zug)
		[01;31m(SU[00m
			(LK kommen)
			(MF sie)
			(VC an)
			[01;31m(NF[00m
				(PX
					(APPR um)
					(NX zehn uhr neunzehn))[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(ADJX[00m
				(ADVX also)
				(ADVX auch)
				(ADJX zu spat)[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['LK', 'MF', 'VC', 'NF'], 'family': ['SIMPX', 'DM', 'DM', 'NX', 'LK', 'MF', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VVFIN', 'ITJ', 'NN', 'PDS', 'VVFIN', 'ADV', 'NN', 'NN', 'ADJD', 'VVFIN', 'ADV', 'APPR', 'CARD', 'NN', 'CARD', 'ART', 'ADJA', 'NN', 'VVFIN', 'PPER', 'PTKVZ', 'APPR', 'CARD', 'NN', 'CARD', 'ADV', 'ADV', 'PTKA', 'ADJD'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 30), 'span': (19, 26), 'left siblings': ['SIMPX', 'DM', 'DM', 'NX', 'LK', 'MF'], 'label': 'SU', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX der fahrt)
		(DM ah)
		(DM entschuldigung)
		(NX der fahrt nur samstag sonntag taglich)
		(LK fahrt)
		(MF dann um sechs uhr funf der erste zug)
		(LK kommen)
		(MF sie)
		(VC an)
		[01;31m(NF[00m
			(PX
				(APPR um)
				(NX zehn uhr neunzehn))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(ADJX[00m
				(ADVX also)
				(ADVX auch)
				(ADJX zu spat)[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['PX'], 'family': ['SIMPX', 'DM', 'DM', 'NX', 'LK', 'MF', 'LK', 'MF', 'VC', 'NF', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VVFIN', 'ITJ', 'NN', 'PDS', 'VVFIN', 'ADV', 'NN', 'NN', 'ADJD', 'VVFIN', 'ADV', 'APPR', 'CARD', 'NN', 'CARD', 'ART', 'ADJA', 'NN', 'VVFIN', 'PPER', 'PTKVZ', 'APPR', 'CARD', 'NN', 'CARD', 'ADV', 'ADV', 'PTKA', 'ADJD'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 30), 'span': (22, 26), 'left siblings': ['SIMPX', 'DM', 'DM', 'NX', 'LK', 'MF', 'LK', 'MF', 'VC'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX der fahrt)
		(DM ah)
		(DM entschuldigung)
		(NX der fahrt nur samstag sonntag taglich)
		(LK fahrt)
		(MF dann um sechs uhr funf der erste zug)
		(LK kommen)
		(MF sie)
		(VC an)
		(PX um zehn uhr neunzehn)
		[01;31m(SU[00m
			[01;31m(ADJX[00m
				(ADVX also)
				(ADVX auch)
				(ADJX zu spat)[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['ADJX'], 'family': ['SIMPX', 'DM', 'DM', 'NX', 'LK', 'MF', 'LK', 'MF', 'VC', 'PX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VVFIN', 'ITJ', 'NN', 'PDS', 'VVFIN', 'ADV', 'NN', 'NN', 'ADJD', 'VVFIN', 'ADV', 'APPR', 'CARD', 'NN', 'CARD', 'ART', 'ADJA', 'NN', 'VVFIN', 'PPER', 'PTKVZ', 'APPR', 'CARD', 'NN', 'CARD', 'ADV', 'ADV', 'PTKA', 'ADJD'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 30), 'span': (26, 30), 'left siblings': ['SIMPX', 'DM', 'DM', 'NX', 'LK', 'MF', 'LK', 'MF', 'VC', 'PX'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX der fahrt)
		(DM ah)
		(DM entschuldigung)
		(NX der fahrt nur samstag sonntag taglich)
		(LK fahrt)
		(MF dann um sechs uhr funf der erste zug)
		(LK kommen)
		(MF sie)
		(VC an)
		(PX um zehn uhr neunzehn)
		[01;31m(ADJX[00m
			(ADVX also)
			(ADVX auch)
			(ADJX zu spat)[01;31m)[00m))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'ADVX', 'ADJX'], 'family': ['SIMPX', 'DM', 'DM', 'NX', 'LK', 'MF', 'LK', 'MF', 'VC', 'PX', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VVFIN', 'ITJ', 'NN', 'PDS', 'VVFIN', 'ADV', 'NN', 'NN', 'ADJD', 'VVFIN', 'ADV', 'APPR', 'CARD', 'NN', 'CARD', 'ART', 'ADJA', 'NN', 'VVFIN', 'PPER', 'PTKVZ', 'APPR', 'CARD', 'NN', 'CARD', 'ADV', 'ADV', 'PTKA', 'ADJD'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 30), 'span': (26, 30), 'left siblings': ['SIMPX', 'DM', 'DM', 'NX', 'LK', 'MF', 'LK', 'MF', 'VC', 'PX'], 'label': 'ADJX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP der fahrt ah entschuldigung der fahrt nur samstag sonntag taglich fahrt dann um sechs uhr funf der erste zug kommen sie an um zehn uhr neunzehn also auch zu spat)

Sentence 633:
41 Initial errors
0 on fringe, 25 iterations
4 Error:UNSET move
3 Error:PP Attachment
3 Error:UNSET move
5 Error:PP Attachment
2 Error:Single Word Phrase
2 Error:Different label
2 Error:Different label
2 Error:Modifier Attachment
2 Error:UNSET move
1 Error:Single Word Phrase
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET add
1 Error:UNSET add
1 Error:Unary
1 Error:Unary
1 Error:Clause Attachment
1 Error:Modifier Attachment
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:NP Internal Structure
1 Error:Single Word Phrase
1 Error:Unary
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;36m(DM[00m
			(SU
				[01;31m(NX[00m
					(NN mittelklasse)[01;31m)[00m)[01;36m)[00m
		[01;36m(SIMPX[00m
			[01;36m(SU[00m
				[01;31m(SU[00m
					[01;31m(SIMPX[00m
						(LK wollen)
						[01;31m(MF[00m [01;33m(MF (MF (MF[00m
							(NX sie)
							(ADVX denn)
							(ADVX eher)
							[01;33m(NX[00m (NX eine zentrale lage)[01;31m)[00m[01;31m)[00m[01;31m)[00m
				[01;31m(SU[00m
					[01;31m(SIMPX[00m
						[01;31m(VF[00m
							[01;31m(PX[00m
								(PX am bahnhof oder am flughafen) [01;33mNX) MF)[00m
								(ADVX direkt)[01;31m)[00m[01;31m)[00m [01;33mMF)[00m
						(LK kann)
						(MF ich ihnen eines) [01;33mMF)[00m
						(VC anbieten)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m
		[01;31m(SU[00m [01;33m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF das)
				(LK ist)
				[01;31m(MF[00m [01;33m(NX (MF[00m
					[01;31m(ADVX[00m
						(ADVX so)
						[01;36m(NX[00m
							(ADV ungefahr)[01;36m)[00m[01;31m)[00m
					[01;31m(NX[00m
						[01;31m(NX[00m
							(ADJX mittlere)
							(NN preisklasse)[01;31m)[00m [01;33mMF) NX) SIMPX)[00m
						(PX mit restaurant konferenzraum garage und sauna)[01;31m)[00m[01;31m)[00m
				[01;31m(NF[00m [01;33m(VF (NX[00m
					[01;31m(NX[00m
						(ART das)
						[01;36m(NX[00m
							(NN [01;33m(NX[00m hotel)[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(NX
						(NE forahotel))[01;31m)[00m [01;33mNX) NX) VF)[00m
				(LK heist)
				[01;36m(C[00m [01;31m(MF[00m
					[01;31m(NX[00m
						(PDS das)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;36m(MF[00m [01;31m(VF[00m
					[01;31m(NX[00m
						(NX die kategorie)
						(PX fur ein einzelzimmer)[01;31m)[00m[01;31m)[00m[01;36m)[00m
				(LK liegt)
				(MF bei hundert dreisig bis zweihundert funfunddreisig mark)[01;31m)[00m[01;31m)[00m))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['SU', 'VF', 'LK', 'MF', 'VC'], 'mover info': [('SU', (1, 8))], 'old_family': ['SU', 'SU', 'SU', 'SU', 'SU'], 'start left siblings': ['SU'], 'auto preterminals': ('NN', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'ADJA', 'NN', 'APPRART', 'NN', 'KON', 'APPRART', 'NN', 'ADV', 'VMFIN', 'PPER', 'PPER', 'PIS', 'VVINF', 'PDS', 'VAFIN', 'ADV', 'ADV', 'ADJA', 'NN', 'APPR', 'NN', 'NN', 'NN', 'KON', 'NN', 'ART', 'NN', 'NE', 'VVFIN', 'PDS', 'ART', 'NN', 'APPR', 'ART', 'NN', 'VVFIN', 'APPR', 'CARD', 'CARD', 'APPR', 'CARD', 'CARD', 'NN'), 'start right siblings': ['SU', 'SU', 'SU'], 'end left siblings': [], 'auto preterminal span': (0, 49), 'movers': ['SU'], 'old_parent': 'TURN', 'end right siblings': ['VF', 'LK', 'MF', 'VC'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		[01;36m(DM[00m
			(SU
				[01;31m(NX[00m
					(NN mittelklasse)[01;31m)[00m)[01;36m)[00m
		(SU
			(SIMPX
				[01;31m(SU[00m
					[01;31m(SIMPX[00m
						(LK wollen)
						[01;31m(MF[00m [01;33m(MF (MF (MF[00m
							(NX sie)
							(ADVX denn)
							(ADVX eher)
							[01;33m(NX[00m (NX eine zentrale lage)[01;31m)[00m[01;31m)[00m[01;31m)[00m
				[01;31m(VF[00m
					[01;31m(PX[00m
						(PX am bahnhof oder am flughafen) [01;33mNX) MF)[00m
						(ADVX direkt)[01;31m)[00m[01;31m)[00m [01;33mMF)[00m
				(LK kann)
				(MF ich ihnen eines) [01;33mMF)[00m
				(VC anbieten)))
		[01;31m(SU[00m [01;33m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF das)
				(LK ist)
				[01;31m(MF[00m [01;33m(NX (MF[00m
					[01;31m(ADVX[00m
						(ADVX so)
						[01;36m(NX[00m
							(ADV ungefahr)[01;36m)[00m[01;31m)[00m
					[01;31m(NX[00m
						[01;31m(NX[00m
							(ADJX mittlere)
							(NN preisklasse)[01;31m)[00m [01;33mMF) NX) SIMPX)[00m
						(PX mit restaurant konferenzraum garage und sauna)[01;31m)[00m[01;31m)[00m
				[01;31m(NF[00m [01;33m(VF (NX[00m
					[01;31m(NX[00m
						(ART das)
						[01;36m(NX[00m
							(NN [01;33m(NX[00m hotel)[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(NX
						(NE forahotel))[01;31m)[00m [01;33mNX) NX) VF)[00m
				(LK heist)
				[01;36m(C[00m [01;31m(MF[00m
					[01;31m(NX[00m
						(PDS das)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;36m(MF[00m [01;31m(VF[00m
					[01;31m(NX[00m
						(NX die kategorie)
						(PX fur ein einzelzimmer)[01;31m)[00m[01;31m)[00m[01;36m)[00m
				(LK liegt)
				(MF bei hundert dreisig bis zweihundert funfunddreisig mark)[01;31m)[00m[01;31m)[00m))
Step:PP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'ADVX', 'ADVX', 'NX', 'PX'], 'mover info': [('PX', (8, 13))], 'old_family': ['PX', 'ADVX'], 'start left siblings': [], 'auto preterminals': ('VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'ADJA', 'NN', 'APPRART', 'NN', 'KON', 'APPRART', 'NN', 'ADV', 'VMFIN', 'PPER', 'PPER', 'PIS', 'VVINF'), 'start right siblings': ['ADVX'], 'end left siblings': ['NX', 'ADVX', 'ADVX', 'NX'], 'auto preterminal span': (1, 19), 'adding node already present': False, 'movers': ['PX'], 'old_parent': 'PX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'MF'}
(TOP
	(TURN
		[01;36m(DM[00m
			(SU
				[01;31m(NX[00m
					(NN mittelklasse)[01;31m)[00m)[01;36m)[00m
		(SU
			(SIMPX
				[01;31m(SU[00m
					[01;31m(SIMPX[00m
						(LK wollen)
						[01;33m(MF (MF[00m (MF sie denn eher eine zentrale lage am bahnhof oder am flughafen)[01;31m)[00m[01;31m)[00m
				[01;31m(VF[00m
					[01;31m(PX[00m
						(ADVX
							(ADV direkt))[01;31m)[00m[01;31m)[00m [01;33mMF)[00m
				(LK kann)
				(MF ich ihnen eines) [01;33mMF)[00m
				(VC anbieten)))
		[01;31m(SU[00m [01;33m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF das)
				(LK ist)
				[01;31m(MF[00m [01;33m(NX (MF[00m
					[01;31m(ADVX[00m
						(ADVX so)
						[01;36m(NX[00m
							(ADV ungefahr)[01;36m)[00m[01;31m)[00m
					[01;31m(NX[00m
						[01;31m(NX[00m
							(ADJX mittlere)
							(NN preisklasse)[01;31m)[00m [01;33mMF) NX) SIMPX)[00m
						(PX mit restaurant konferenzraum garage und sauna)[01;31m)[00m[01;31m)[00m
				[01;31m(NF[00m [01;33m(VF (NX[00m
					[01;31m(NX[00m
						(ART das)
						[01;36m(NX[00m
							(NN [01;33m(NX[00m hotel)[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(NX
						(NE forahotel))[01;31m)[00m [01;33mNX) NX) VF)[00m
				(LK heist)
				[01;36m(C[00m [01;31m(MF[00m
					[01;31m(NX[00m
						(PDS das)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;36m(MF[00m [01;31m(VF[00m
					[01;31m(NX[00m
						(NX die kategorie)
						(PX fur ein einzelzimmer)[01;31m)[00m[01;31m)[00m[01;36m)[00m
				(LK liegt)
				(MF bei hundert dreisig bis zweihundert funfunddreisig mark)[01;31m)[00m[01;31m)[00m))
Step:UNSET move
{'new_parent': 'VF', 'new_family': ['NF', 'NX'], 'mover info': [('NF', (31, 33))], 'old_family': ['VF', 'LK', 'MF', 'NF'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('PDS', 'VAFIN', 'ADV', 'ADV', 'ADJA', 'NN', 'APPR', 'NN', 'NN', 'NN', 'KON', 'NN', 'ART', 'NN', 'NE', 'VVFIN', 'PDS'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (19, 36), 'adding node already present': False, 'movers': ['NF'], 'old_parent': 'SIMPX', 'added and moved': True, 'end right siblings': ['NX'], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'MF'}
(TOP
	(TURN
		[01;36m(DM[00m
			(SU
				[01;31m(NX[00m
					(NN mittelklasse)[01;31m)[00m)[01;36m)[00m
		(SU
			(SIMPX
				[01;31m(SU[00m
					[01;31m(SIMPX[00m
						(LK wollen)
						[01;33m(MF (MF[00m (MF sie denn eher eine zentrale lage am bahnhof oder am flughafen)[01;31m)[00m[01;31m)[00m
				[01;31m(VF[00m
					[01;31m(PX[00m
						(ADVX
							(ADV direkt))[01;31m)[00m[01;31m)[00m [01;33mMF)[00m
				(LK kann)
				(MF ich ihnen eines) [01;33mMF)[00m
				(VC anbieten)))
		[01;31m(SU[00m [01;33m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF das)
				(LK ist)
				[01;31m(MF[00m [01;33m(NX (MF[00m
					[01;31m(ADVX[00m
						(ADVX so)
						[01;36m(NX[00m
							(ADV ungefahr)[01;36m)[00m[01;31m)[00m
					[01;31m(NX[00m
						[01;31m(NX[00m
							(ADJX mittlere)
							(NN preisklasse)[01;31m)[00m [01;33mMF) NX) SIMPX)[00m
						(PX mit restaurant konferenzraum garage und sauna)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				(NX
					(VF
						[01;31m(NF[00m
							[01;31m(NX[00m
								(ART das)
								[01;36m(NX[00m
									(NN [01;33m(NX[00m hotel)[01;36m)[00m[01;31m)[00m[01;31m)[00m
						(NX forahotel))) [01;33mNX)[00m
				(LK heist)
				[01;36m(C[00m [01;31m(MF[00m
					[01;31m(NX[00m
						(PDS das)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;36m(MF[00m [01;31m(VF[00m
					[01;31m(NX[00m
						(NX die kategorie)
						(PX fur ein einzelzimmer)[01;31m)[00m[01;31m)[00m[01;36m)[00m
				(LK liegt)
				(MF bei hundert dreisig bis zweihundert funfunddreisig mark)[01;31m)[00m[01;31m)[00m))
Step:PP Attachment
{'new_parent': 'SIMPX', 'new_family': ['PX', 'NX', 'LK', 'MF'], 'mover info': [('PX', (25, 31))], 'old_family': ['NX', 'PX'], 'start left siblings': ['NX'], 'auto preterminals': ('PDS', 'VAFIN', 'ADV', 'ADV', 'ADJA', 'NN', 'APPR', 'NN', 'NN', 'NN', 'KON', 'NN', 'ART', 'NN', 'NE', 'VVFIN', 'PDS'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (19, 36), 'movers': ['PX'], 'old_parent': 'NX', 'end right siblings': ['NX', 'LK', 'MF'], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;36m(DM[00m
			(SU
				[01;31m(NX[00m
					(NN mittelklasse)[01;31m)[00m)[01;36m)[00m
		(SU
			(SIMPX
				[01;31m(SU[00m
					[01;31m(SIMPX[00m
						(LK wollen)
						[01;33m(MF (MF[00m (MF sie denn eher eine zentrale lage am bahnhof oder am flughafen)[01;31m)[00m[01;31m)[00m
				[01;31m(VF[00m
					[01;31m(PX[00m
						(ADVX
							(ADV direkt))[01;31m)[00m[01;31m)[00m [01;33mMF)[00m
				(LK kann)
				(MF ich ihnen eines) [01;33mMF)[00m
				(VC anbieten)))
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK ist)
				[01;36m(NX[00m
					(MF
						[01;31m(ADVX[00m
							(ADVX so)
							[01;36m(NX[00m
								(ADV ungefahr)[01;36m)[00m[01;31m)[00m
						[01;31m(NX[00m
							(ADJX mittlere)
							(NN preisklasse)[01;31m)[00m)[01;36m)[00m)
			[01;31m(SIMPX[00m
				(PX mit restaurant konferenzraum garage und sauna)
				(NX
					(VF
						[01;31m(NF[00m
							[01;31m(NX[00m
								(ART das)
								[01;36m(NX[00m
									(NN [01;33m(NX[00m hotel)[01;36m)[00m[01;31m)[00m[01;31m)[00m
						(NX forahotel))) [01;33mNX)[00m
				(LK heist)
				[01;36m(C[00m [01;31m(MF[00m
					[01;31m(NX[00m
						(PDS das)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;36m(MF[00m [01;31m(VF[00m
					[01;31m(NX[00m
						(NX die kategorie)
						(PX fur ein einzelzimmer)[01;31m)[00m[01;31m)[00m[01;36m)[00m
				(LK liegt)
				(MF bei hundert dreisig bis zweihundert funfunddreisig mark)[01;31m)[00m[01;31m)[00m))
Step:Single Word Phrase
{'family': ['DM'], 'auto preterminal span': (0, 1), 'span': (0, 1), 'subtrees': ['NN'], 'parent': 'SU', 'over_word': True, 'auto preterminals': ('NN',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('NX', 'DM')}
(TOP
	(TURN
		(SU mittelklasse)
		(SU
			(SIMPX
				[01;31m(SU[00m
					[01;31m(SIMPX[00m
						(LK wollen)
						[01;33m(MF (MF[00m (MF sie denn eher eine zentrale lage am bahnhof oder am flughafen)[01;31m)[00m[01;31m)[00m
				[01;31m(VF[00m
					[01;31m(PX[00m
						(ADVX
							(ADV direkt))[01;31m)[00m[01;31m)[00m [01;33mMF)[00m
				(LK kann)
				(MF ich ihnen eines) [01;33mMF)[00m
				(VC anbieten)))
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK ist)
				[01;36m(NX[00m
					(MF
						[01;31m(ADVX[00m
							(ADVX so)
							[01;36m(NX[00m
								(ADV ungefahr)[01;36m)[00m[01;31m)[00m
						[01;31m(NX[00m
							(ADJX mittlere)
							(NN preisklasse)[01;31m)[00m)[01;36m)[00m)
			[01;31m(SIMPX[00m
				(PX mit restaurant konferenzraum garage und sauna)
				(NX
					(VF
						[01;31m(NF[00m
							[01;31m(NX[00m
								(ART das)
								[01;36m(NX[00m
									(NN [01;33m(NX[00m hotel)[01;36m)[00m[01;31m)[00m[01;31m)[00m
						(NX forahotel))) [01;33mNX)[00m
				(LK heist)
				[01;36m(C[00m [01;31m(MF[00m
					[01;31m(NX[00m
						(PDS das)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;36m(MF[00m [01;31m(VF[00m
					[01;31m(NX[00m
						(NX die kategorie)
						(PX fur ein einzelzimmer)[01;31m)[00m[01;31m)[00m[01;36m)[00m
				(LK liegt)
				(MF bei hundert dreisig bis zweihundert funfunddreisig mark)[01;31m)[00m[01;31m)[00m))
Step:Different label
{'family': ['PX', 'NX', 'LK', 'C'], 'auto preterminal span': (35, 36), 'span': (35, 36), 'subtrees': ['NX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('PDS',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('MF', 'C')}
(TOP
	(TURN
		(SU mittelklasse)
		(SU
			(SIMPX
				[01;31m(SU[00m
					[01;31m(SIMPX[00m
						(LK wollen)
						[01;33m(MF (MF[00m (MF sie denn eher eine zentrale lage am bahnhof oder am flughafen)[01;31m)[00m[01;31m)[00m
				[01;31m(VF[00m
					[01;31m(PX[00m
						(ADVX
							(ADV direkt))[01;31m)[00m[01;31m)[00m [01;33mMF)[00m
				(LK kann)
				(MF ich ihnen eines) [01;33mMF)[00m
				(VC anbieten)))
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK ist)
				[01;36m(NX[00m
					(MF
						[01;31m(ADVX[00m
							(ADVX so)
							[01;36m(NX[00m
								(ADV ungefahr)[01;36m)[00m[01;31m)[00m
						[01;31m(NX[00m
							(ADJX mittlere)
							(NN preisklasse)[01;31m)[00m)[01;36m)[00m)
			[01;31m(SIMPX[00m
				(PX mit restaurant konferenzraum garage und sauna)
				(NX
					(VF
						[01;31m(NF[00m
							[01;31m(NX[00m
								(ART das)
								[01;36m(NX[00m
									(NN [01;33m(NX[00m hotel)[01;36m)[00m[01;31m)[00m[01;31m)[00m
						(NX forahotel))) [01;33mNX)[00m
				(LK heist)
				(C
					[01;31m(NX[00m
						(PDS das)[01;31m)[00m)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;36m(MF[00m [01;31m(VF[00m
					[01;31m(NX[00m
						(NX die kategorie)
						(PX fur ein einzelzimmer)[01;31m)[00m[01;31m)[00m[01;36m)[00m
				(LK liegt)
				(MF bei hundert dreisig bis zweihundert funfunddreisig mark)[01;31m)[00m[01;31m)[00m))
Step:Different label
{'family': ['MF'], 'auto preterminal span': (36, 41), 'span': (36, 41), 'subtrees': ['NX', 'PX'], 'parent': 'VF', 'over_word': False, 'auto preterminals': ('ART', 'NN', 'APPR', 'ART', 'NN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('NX', 'MF')}
(TOP
	(TURN
		(SU mittelklasse)
		(SU
			(SIMPX
				[01;31m(SU[00m
					[01;31m(SIMPX[00m
						(LK wollen)
						[01;33m(MF (MF[00m (MF sie denn eher eine zentrale lage am bahnhof oder am flughafen)[01;31m)[00m[01;31m)[00m
				[01;31m(VF[00m
					[01;31m(PX[00m
						(ADVX
							(ADV direkt))[01;31m)[00m[01;31m)[00m [01;33mMF)[00m
				(LK kann)
				(MF ich ihnen eines) [01;33mMF)[00m
				(VC anbieten)))
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK ist)
				[01;36m(NX[00m
					(MF
						[01;31m(ADVX[00m
							(ADVX so)
							[01;36m(NX[00m
								(ADV ungefahr)[01;36m)[00m[01;31m)[00m
						[01;31m(NX[00m
							(ADJX mittlere)
							(NN preisklasse)[01;31m)[00m)[01;36m)[00m)
			[01;31m(SIMPX[00m
				(PX mit restaurant konferenzraum garage und sauna)
				(NX
					(VF
						[01;31m(NF[00m
							[01;31m(NX[00m
								(ART das)
								[01;36m(NX[00m
									(NN [01;33m(NX[00m hotel)[01;36m)[00m[01;31m)[00m[01;31m)[00m
						(NX forahotel))) [01;33mNX)[00m
				(LK heist)
				(C
					[01;31m(NX[00m
						(PDS das)[01;31m)[00m)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(MF
						(NX die kategorie)
						(PX fur ein einzelzimmer))[01;31m)[00m
				(LK liegt)
				(MF bei hundert dreisig bis zweihundert funfunddreisig mark)[01;31m)[00m[01;31m)[00m))
Step:Modifier Attachment
{'new_parent': 'NX', 'new_family': ['ADVX', 'ADJX', 'NN'], 'mover info': [('ADVX', (21, 23))], 'old_family': ['ADVX', 'NX'], 'start left siblings': [], 'auto preterminals': ('ADV', 'ADV', 'ADJA', 'NN'), 'start right siblings': ['NX'], 'end left siblings': [], 'auto preterminal span': (21, 25), 'movers': ['ADVX'], 'old_parent': 'MF', 'end right siblings': ['ADJX', 'NN'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU mittelklasse)
		(SU
			(SIMPX
				[01;31m(SU[00m
					[01;31m(SIMPX[00m
						(LK wollen)
						[01;33m(MF (MF[00m (MF sie denn eher eine zentrale lage am bahnhof oder am flughafen)[01;31m)[00m[01;31m)[00m
				[01;31m(VF[00m
					[01;31m(PX[00m
						(ADVX
							(ADV direkt))[01;31m)[00m[01;31m)[00m [01;33mMF)[00m
				(LK kann)
				(MF ich ihnen eines) [01;33mMF)[00m
				(VC anbieten)))
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK ist)
				(MF
					(NX
						[01;31m(ADVX[00m
							(ADVX so)
							[01;36m(NX[00m
								(ADV ungefahr)[01;36m)[00m[01;31m)[00m
						(ADJX mittlere)
						(NN preisklasse))))
			[01;31m(SIMPX[00m
				(PX mit restaurant konferenzraum garage und sauna)
				(NX
					(VF
						[01;31m(NF[00m
							[01;31m(NX[00m
								(ART das)
								[01;36m(NX[00m
									(NN [01;33m(NX[00m hotel)[01;36m)[00m[01;31m)[00m[01;31m)[00m
						(NX forahotel))) [01;33mNX)[00m
				(LK heist)
				(C
					[01;31m(NX[00m
						(PDS das)[01;31m)[00m)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(MF
						(NX die kategorie)
						(PX fur ein einzelzimmer))[01;31m)[00m
				(LK liegt)
				(MF bei hundert dreisig bis zweihundert funfunddreisig mark)[01;31m)[00m[01;31m)[00m))
Step:UNSET move
{'new_parent': 'NF', 'new_family': ['ART', 'NX'], 'mover info': [('ART', (31, 32))], 'old_family': ['ART', 'NN'], 'start left siblings': [], 'auto preterminals': ('ART', 'NN'), 'start right siblings': ['NN'], 'end left siblings': [], 'auto preterminal span': (31, 33), 'movers': ['ART'], 'old_parent': 'NX', 'POS confusion': ('ART', 'ART'), 'end right siblings': ['NX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU mittelklasse)
		(SU
			(SIMPX
				[01;31m(SU[00m
					[01;31m(SIMPX[00m
						(LK wollen)
						[01;33m(MF (MF[00m (MF sie denn eher eine zentrale lage am bahnhof oder am flughafen)[01;31m)[00m[01;31m)[00m
				[01;31m(VF[00m
					[01;31m(PX[00m
						(ADVX
							(ADV direkt))[01;31m)[00m[01;31m)[00m [01;33mMF)[00m
				(LK kann)
				(MF ich ihnen eines) [01;33mMF)[00m
				(VC anbieten)))
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK ist)
				(MF
					(NX
						[01;31m(ADVX[00m
							(ADVX so)
							[01;36m(NX[00m
								(ADV ungefahr)[01;36m)[00m[01;31m)[00m
						(ADJX mittlere)
						(NN preisklasse))))
			[01;31m(SIMPX[00m
				(PX mit restaurant konferenzraum garage und sauna)
				(NX
					(VF
						[01;31m(NF[00m
							(ART das)
							[01;33m(NX[00m (NX hotel)[01;31m)[00m
						(NX forahotel))) [01;33mNX)[00m
				(LK heist)
				(C
					[01;31m(NX[00m
						(PDS das)[01;31m)[00m)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(MF
						(NX die kategorie)
						(PX fur ein einzelzimmer))[01;31m)[00m
				(LK liegt)
				(MF bei hundert dreisig bis zweihundert funfunddreisig mark)[01;31m)[00m[01;31m)[00m))
Step:Single Word Phrase
{'subtrees': ['ADV'], 'family': ['ADVX', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADV',), 'right siblings': [], 'left siblings': [(ADVX (ADV so))], 'auto preterminal span': (22, 23), 'span': (22, 23), 'parent': 'ADVX', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SU mittelklasse)
		(SU
			(SIMPX
				[01;31m(SU[00m
					[01;31m(SIMPX[00m
						(LK wollen)
						[01;33m(MF (MF[00m (MF sie denn eher eine zentrale lage am bahnhof oder am flughafen)[01;31m)[00m[01;31m)[00m
				[01;31m(VF[00m
					[01;31m(PX[00m
						(ADVX
							(ADV direkt))[01;31m)[00m[01;31m)[00m [01;33mMF)[00m
				(LK kann)
				(MF ich ihnen eines) [01;33mMF)[00m
				(VC anbieten)))
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK ist)
				(MF
					(NX
						[01;31m(ADVX[00m
							(ADVX so)
							(NX ungefahr)[01;31m)[00m
						(ADJX mittlere)
						(NN preisklasse))))
			[01;31m(SIMPX[00m
				(PX mit restaurant konferenzraum garage und sauna)
				(NX
					(VF
						[01;31m(NF[00m
							(ART das)
							[01;33m(NX[00m (NX hotel)[01;31m)[00m
						(NX forahotel))) [01;33mNX)[00m
				(LK heist)
				(C
					[01;31m(NX[00m
						(PDS das)[01;31m)[00m)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(MF
						(NX die kategorie)
						(PX fur ein einzelzimmer))[01;31m)[00m
				(LK liegt)
				(MF bei hundert dreisig bis zweihundert funfunddreisig mark)[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SU', 'VF', 'LK', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'ADJA', 'NN', 'APPRART', 'NN', 'KON', 'APPRART', 'NN', 'ADV', 'VMFIN', 'PPER', 'PPER', 'PIS', 'VVINF'), 'right siblings': ['VF', 'LK', 'MF', 'VC'], 'parent': 'SIMPX', 'auto preterminal span': (1, 19), 'span': (1, 13), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU mittelklasse)
		(SU
			(SIMPX
				[01;31m(SIMPX[00m
					(LK wollen)
					[01;33m(MF (MF[00m (MF sie denn eher eine zentrale lage am bahnhof oder am flughafen)[01;31m)[00m
				[01;31m(VF[00m
					[01;31m(PX[00m
						(ADVX
							(ADV direkt))[01;31m)[00m[01;31m)[00m [01;33mMF)[00m
				(LK kann)
				(MF ich ihnen eines) [01;33mMF)[00m
				(VC anbieten)))
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK ist)
				(MF
					(NX
						[01;31m(ADVX[00m
							(ADVX so)
							(NX ungefahr)[01;31m)[00m
						(ADJX mittlere)
						(NN preisklasse))))
			[01;31m(SIMPX[00m
				(PX mit restaurant konferenzraum garage und sauna)
				(NX
					(VF
						[01;31m(NF[00m
							(ART das)
							[01;33m(NX[00m (NX hotel)[01;31m)[00m
						(NX forahotel))) [01;33mNX)[00m
				(LK heist)
				(C
					[01;31m(NX[00m
						(PDS das)[01;31m)[00m)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(MF
						(NX die kategorie)
						(PX fur ein einzelzimmer))[01;31m)[00m
				(LK liegt)
				(MF bei hundert dreisig bis zweihundert funfunddreisig mark)[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['SIMPX', 'VF', 'LK', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'ADJA', 'NN', 'APPRART', 'NN', 'KON', 'APPRART', 'NN', 'ADV', 'VMFIN', 'PPER', 'PPER', 'PIS', 'VVINF'), 'right siblings': ['VF', 'LK', 'MF', 'VC'], 'parent': 'SIMPX', 'auto preterminal span': (1, 19), 'span': (1, 13), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU mittelklasse)
		(SU
			(SIMPX
				(LK wollen)
				[01;36m(MF[00m
					[01;36m(MF[00m
						(MF sie denn eher eine zentrale lage am bahnhof oder am flughafen)
						[01;31m(VF[00m
							[01;31m(PX[00m
								(ADVX
									(ADV direkt))[01;31m)[00m[01;31m)[00m[01;36m)[00m
					(LK kann)
					(MF ich ihnen eines)[01;36m)[00m
				(VC anbieten)))
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK ist)
				(MF
					(NX
						[01;31m(ADVX[00m
							(ADVX so)
							(NX ungefahr)[01;31m)[00m
						(ADJX mittlere)
						(NN preisklasse))))
			[01;31m(SIMPX[00m
				(PX mit restaurant konferenzraum garage und sauna)
				(NX
					(VF
						[01;31m(NF[00m
							(ART das)
							[01;33m(NX[00m (NX hotel)[01;31m)[00m
						(NX forahotel))) [01;33mNX)[00m
				(LK heist)
				(C
					[01;31m(NX[00m
						(PDS das)[01;31m)[00m)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(MF
						(NX die kategorie)
						(PX fur ein einzelzimmer))[01;31m)[00m
				(LK liegt)
				(MF bei hundert dreisig bis zweihundert funfunddreisig mark)[01;31m)[00m[01;31m)[00m))
Step:UNSET add
{'subtrees': ['MF', 'VF'], 'family': ['LK', 'MF', 'LK', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV', 'ADV', 'ART', 'ADJA', 'NN', 'APPRART', 'NN', 'KON', 'APPRART', 'NN', 'ADV'), 'right siblings': [(LK (VXFIN (VMFIN kann))), (MF (NX (PPER ich)) (NX (PPER ihnen)) (NX (PIS eines))), (VC (VXINF (VVINF anbieten)))], 'left siblings': [(LK (VXFIN (VMFIN wollen)))], 'auto preterminal span': (2, 14), 'span': (2, 14), 'parent': 'SIMPX', 'label': 'MF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU mittelklasse)
		(SU
			(SIMPX
				(LK wollen)
				[01;36m(MF[00m
					(MF
						(MF sie denn eher eine zentrale lage am bahnhof oder am flughafen)
						[01;31m(VF[00m
							[01;31m(PX[00m
								(ADVX
									(ADV direkt))[01;31m)[00m[01;31m)[00m)
					(LK kann)
					(MF ich ihnen eines)[01;36m)[00m
				(VC anbieten)))
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK ist)
				(MF
					(NX
						[01;31m(ADVX[00m
							(ADVX so)
							(NX ungefahr)[01;31m)[00m
						(ADJX mittlere)
						(NN preisklasse))))
			[01;31m(SIMPX[00m
				(PX mit restaurant konferenzraum garage und sauna)
				(NX
					(VF
						[01;31m(NF[00m
							(ART das)
							[01;33m(NX[00m (NX hotel)[01;31m)[00m
						(NX forahotel))) [01;33mNX)[00m
				(LK heist)
				(C
					[01;31m(NX[00m
						(PDS das)[01;31m)[00m)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(MF
						(NX die kategorie)
						(PX fur ein einzelzimmer))[01;31m)[00m
				(LK liegt)
				(MF bei hundert dreisig bis zweihundert funfunddreisig mark)[01;31m)[00m[01;31m)[00m))
Step:UNSET add
{'subtrees': ['MF', 'LK', 'MF'], 'family': ['LK', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV', 'ADV', 'ART', 'ADJA', 'NN', 'APPRART', 'NN', 'KON', 'APPRART', 'NN', 'ADV', 'VMFIN', 'PPER', 'PPER', 'PIS'), 'right siblings': [(VC (VXINF (VVINF anbieten)))], 'left siblings': [(LK (VXFIN (VMFIN wollen)))], 'auto preterminal span': (2, 18), 'span': (2, 18), 'parent': 'SIMPX', 'label': 'MF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU mittelklasse)
		(SU
			(SIMPX
				(LK wollen)
				(MF
					(MF
						(MF sie denn eher eine zentrale lage am bahnhof oder am flughafen)
						[01;31m(VF[00m
							[01;31m(PX[00m
								(ADVX
									(ADV direkt))[01;31m)[00m[01;31m)[00m)
					(LK kann)
					(MF ich ihnen eines))
				(VC anbieten)))
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK ist)
				(MF
					(NX
						[01;31m(ADVX[00m
							(ADVX so)
							(NX ungefahr)[01;31m)[00m
						(ADJX mittlere)
						(NN preisklasse))))
			[01;31m(SIMPX[00m
				(PX mit restaurant konferenzraum garage und sauna)
				(NX
					(VF
						[01;31m(NF[00m
							(ART das)
							[01;33m(NX[00m (NX hotel)[01;31m)[00m
						(NX forahotel))) [01;33mNX)[00m
				(LK heist)
				(C
					[01;31m(NX[00m
						(PDS das)[01;31m)[00m)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(MF
						(NX die kategorie)
						(PX fur ein einzelzimmer))[01;31m)[00m
				(LK liegt)
				(MF bei hundert dreisig bis zweihundert funfunddreisig mark)[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['PX'], 'family': ['MF', 'VF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV', 'ADV', 'ART', 'ADJA', 'NN', 'APPRART', 'NN', 'KON', 'APPRART', 'NN', 'ADV'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (2, 14), 'span': (13, 14), 'left siblings': ['MF'], 'label': 'VF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU mittelklasse)
		(SU
			(SIMPX
				(LK wollen)
				(MF
					(MF
						(MF sie denn eher eine zentrale lage am bahnhof oder am flughafen)
						[01;31m(PX[00m
							(ADVX
								(ADV direkt))[01;31m)[00m)
					(LK kann)
					(MF ich ihnen eines))
				(VC anbieten)))
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK ist)
				(MF
					(NX
						[01;31m(ADVX[00m
							(ADVX so)
							(NX ungefahr)[01;31m)[00m
						(ADJX mittlere)
						(NN preisklasse))))
			[01;31m(SIMPX[00m
				(PX mit restaurant konferenzraum garage und sauna)
				(NX
					(VF
						[01;31m(NF[00m
							(ART das)
							[01;33m(NX[00m (NX hotel)[01;31m)[00m
						(NX forahotel))) [01;33mNX)[00m
				(LK heist)
				(C
					[01;31m(NX[00m
						(PDS das)[01;31m)[00m)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(MF
						(NX die kategorie)
						(PX fur ein einzelzimmer))[01;31m)[00m
				(LK liegt)
				(MF bei hundert dreisig bis zweihundert funfunddreisig mark)[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['MF', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV', 'ADV', 'ART', 'ADJA', 'NN', 'APPRART', 'NN', 'KON', 'APPRART', 'NN', 'ADV'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (2, 14), 'span': (13, 14), 'left siblings': ['MF'], 'label': 'PX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU mittelklasse)
		(SU wollen sie denn eher eine zentrale lage am bahnhof oder am flughafen direkt kann ich ihnen eines anbieten)
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK ist)
				(MF
					(NX
						[01;31m(ADVX[00m
							(ADVX so)
							(NX ungefahr)[01;31m)[00m
						(ADJX mittlere)
						(NN preisklasse))))
			[01;31m(SIMPX[00m
				(PX mit restaurant konferenzraum garage und sauna)
				(NX
					(VF
						[01;31m(NF[00m
							(ART das)
							[01;33m(NX[00m (NX hotel)[01;31m)[00m
						(NX forahotel))) [01;33mNX)[00m
				(LK heist)
				(C
					[01;31m(NX[00m
						(PDS das)[01;31m)[00m)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(MF
						(NX die kategorie)
						(PX fur ein einzelzimmer))[01;31m)[00m
				(LK liegt)
				(MF bei hundert dreisig bis zweihundert funfunddreisig mark)[01;31m)[00m[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['SU', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'ADJA', 'NN', 'APPRART', 'NN', 'KON', 'APPRART', 'NN', 'ADV', 'VMFIN', 'PPER', 'PPER', 'PIS', 'VVINF', 'PDS', 'VAFIN', 'ADV', 'ADV', 'ADJA', 'NN', 'APPR', 'NN', 'NN', 'NN', 'KON', 'NN', 'ART', 'NN', 'NE', 'VVFIN', 'PDS', 'ART', 'NN', 'APPR', 'ART', 'NN', 'VVFIN', 'APPR', 'CARD', 'CARD', 'APPR', 'CARD', 'CARD', 'NN'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 49), 'span': (19, 36), 'left siblings': ['SU', 'SU'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU mittelklasse)
		(SU wollen sie denn eher eine zentrale lage am bahnhof oder am flughafen direkt kann ich ihnen eines anbieten)
		(SIMPX
			(VF das)
			(LK ist)
			(MF
				(NX
					[01;31m(ADVX[00m
						(ADVX so)
						(NX ungefahr)[01;31m)[00m
					(ADJX mittlere)
					(NN preisklasse))))
		[01;31m(SIMPX[00m
			(PX mit restaurant konferenzraum garage und sauna)
			(NX
				(VF
					[01;31m(NF[00m
						(ART das)
						[01;33m(NX[00m (NX hotel)[01;31m)[00m
					(NX forahotel))) [01;33mNX)[00m
			(LK heist)
			(C
				[01;31m(NX[00m
					(PDS das)[01;31m)[00m)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(MF
						(NX die kategorie)
						(PX fur ein einzelzimmer))[01;31m)[00m
				(LK liegt)
				(MF bei hundert dreisig bis zweihundert funfunddreisig mark)[01;31m)[00m[01;31m)[00m))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'NX'], 'family': ['ADVX', 'ADJX', 'NN'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'ADJA', 'NN'), 'right siblings': ['ADJX', 'NN'], 'parent': 'NX', 'auto preterminal span': (21, 25), 'span': (21, 23), 'left siblings': [], 'label': 'ADVX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU mittelklasse)
		(SU wollen sie denn eher eine zentrale lage am bahnhof oder am flughafen direkt kann ich ihnen eines anbieten)
		(SIMPX das ist so ungefahr mittlere preisklasse)
		[01;31m(SIMPX[00m
			(PX mit restaurant konferenzraum garage und sauna)
			(NX
				(VF
					[01;31m(NF[00m
						(ART das)
						[01;33m(NX[00m (NX hotel)[01;31m)[00m
					(NX forahotel))) [01;33mNX)[00m
			(LK heist)
			(C
				[01;31m(NX[00m
					(PDS das)[01;31m)[00m)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(MF
						(NX die kategorie)
						(PX fur ein einzelzimmer))[01;31m)[00m
				(LK liegt)
				(MF bei hundert dreisig bis zweihundert funfunddreisig mark)[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['PX', 'NX', 'LK', 'C'], 'family': ['SU', 'SU', 'SIMPX', 'SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'ADJA', 'NN', 'APPRART', 'NN', 'KON', 'APPRART', 'NN', 'ADV', 'VMFIN', 'PPER', 'PPER', 'PIS', 'VVINF', 'PDS', 'VAFIN', 'ADV', 'ADV', 'ADJA', 'NN', 'APPR', 'NN', 'NN', 'NN', 'KON', 'NN', 'ART', 'NN', 'NE', 'VVFIN', 'PDS', 'ART', 'NN', 'APPR', 'ART', 'NN', 'VVFIN', 'APPR', 'CARD', 'CARD', 'APPR', 'CARD', 'CARD', 'NN'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 49), 'span': (25, 36), 'left siblings': ['SU', 'SU', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU mittelklasse)
		(SU wollen sie denn eher eine zentrale lage am bahnhof oder am flughafen direkt kann ich ihnen eines anbieten)
		(SIMPX das ist so ungefahr mittlere preisklasse)
		(PX mit restaurant konferenzraum garage und sauna)
		(NX
			(VF
				[01;31m(NF[00m
					(ART das)
					[01;33m(NX[00m (NX hotel)[01;31m)[00m
				(NX forahotel))) [01;33mNX)[00m
		(LK heist)
		(C
			[01;31m(NX[00m
				(PDS das)[01;31m)[00m)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(MF
						(NX die kategorie)
						(PX fur ein einzelzimmer))[01;31m)[00m
				(LK liegt)
				(MF bei hundert dreisig bis zweihundert funfunddreisig mark)[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['ART', 'NX'], 'family': ['NF', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'NE'), 'right siblings': ['NX'], 'parent': 'VF', 'auto preterminal span': (31, 34), 'span': (31, 33), 'left siblings': [], 'label': 'NF', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU mittelklasse)
		(SU wollen sie denn eher eine zentrale lage am bahnhof oder am flughafen direkt kann ich ihnen eines anbieten)
		(SIMPX das ist so ungefahr mittlere preisklasse)
		(PX mit restaurant konferenzraum garage und sauna)
		(NX
			(VF
				(ART das)
				[01;36m(NX[00m
					(NX hotel)
					(NX forahotel)[01;36m)[00m))
		(LK heist)
		(C
			[01;31m(NX[00m
				(PDS das)[01;31m)[00m)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(MF
						(NX die kategorie)
						(PX fur ein einzelzimmer))[01;31m)[00m
				(LK liegt)
				(MF bei hundert dreisig bis zweihundert funfunddreisig mark)[01;31m)[00m[01;31m)[00m))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['ART', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'NE'), 'right siblings': [], 'left siblings': [(ART das)], 'auto preterminal span': (32, 34), 'span': (32, 34), 'parent': 'VF', 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'add'}
(TOP
	(TURN
		(SU mittelklasse)
		(SU wollen sie denn eher eine zentrale lage am bahnhof oder am flughafen direkt kann ich ihnen eines anbieten)
		(SIMPX das ist so ungefahr mittlere preisklasse)
		(PX mit restaurant konferenzraum garage und sauna)
		(NX das hotel forahotel)
		(LK heist)
		(C
			[01;31m(NX[00m
				(PDS das)[01;31m)[00m)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(MF
						(NX die kategorie)
						(PX fur ein einzelzimmer))[01;31m)[00m
				(LK liegt)
				(MF bei hundert dreisig bis zweihundert funfunddreisig mark)[01;31m)[00m[01;31m)[00m))
Step:Single Word Phrase
{'subtrees': ['PDS'], 'family': ['NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('PDS',), 'right siblings': [], 'parent': 'C', 'auto preterminal span': (35, 36), 'span': (35, 36), 'left siblings': [], 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(SU mittelklasse)
		(SU wollen sie denn eher eine zentrale lage am bahnhof oder am flughafen direkt kann ich ihnen eines anbieten)
		(SIMPX das ist so ungefahr mittlere preisklasse)
		(PX mit restaurant konferenzraum garage und sauna)
		(NX das hotel forahotel)
		(LK heist)
		(C das)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(MF
						(NX die kategorie)
						(PX fur ein einzelzimmer))[01;31m)[00m
				(LK liegt)
				(MF bei hundert dreisig bis zweihundert funfunddreisig mark)[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['MF'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'APPR', 'ART', 'NN', 'VVFIN', 'APPR', 'CARD', 'CARD', 'APPR', 'CARD', 'CARD', 'NN'), 'right siblings': ['LK', 'MF'], 'parent': 'SIMPX', 'auto preterminal span': (36, 49), 'span': (36, 41), 'left siblings': [], 'label': 'VF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU mittelklasse)
		(SU wollen sie denn eher eine zentrale lage am bahnhof oder am flughafen direkt kann ich ihnen eines anbieten)
		(SIMPX das ist so ungefahr mittlere preisklasse)
		(PX mit restaurant konferenzraum garage und sauna)
		(NX das hotel forahotel)
		(LK heist)
		(C das)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(MF die kategorie fur ein einzelzimmer)
				(LK liegt)
				(MF bei hundert dreisig bis zweihundert funfunddreisig mark)[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SU', 'SU', 'SIMPX', 'PX', 'NX', 'LK', 'C', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'ADJA', 'NN', 'APPRART', 'NN', 'KON', 'APPRART', 'NN', 'ADV', 'VMFIN', 'PPER', 'PPER', 'PIS', 'VVINF', 'PDS', 'VAFIN', 'ADV', 'ADV', 'ADJA', 'NN', 'APPR', 'NN', 'NN', 'NN', 'KON', 'NN', 'ART', 'NN', 'NE', 'VVFIN', 'PDS', 'ART', 'NN', 'APPR', 'ART', 'NN', 'VVFIN', 'APPR', 'CARD', 'CARD', 'APPR', 'CARD', 'CARD', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 49), 'span': (36, 49), 'left siblings': ['SU', 'SU', 'SIMPX', 'PX', 'NX', 'LK', 'C'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU mittelklasse)
		(SU wollen sie denn eher eine zentrale lage am bahnhof oder am flughafen direkt kann ich ihnen eines anbieten)
		(SIMPX das ist so ungefahr mittlere preisklasse)
		(PX mit restaurant konferenzraum garage und sauna)
		(NX das hotel forahotel)
		(LK heist)
		(C das)
		[01;31m(SIMPX[00m
			(MF die kategorie fur ein einzelzimmer)
			(LK liegt)
			(MF bei hundert dreisig bis zweihundert funfunddreisig mark)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['MF', 'LK', 'MF'], 'family': ['SU', 'SU', 'SIMPX', 'PX', 'NX', 'LK', 'C', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'ADJA', 'NN', 'APPRART', 'NN', 'KON', 'APPRART', 'NN', 'ADV', 'VMFIN', 'PPER', 'PPER', 'PIS', 'VVINF', 'PDS', 'VAFIN', 'ADV', 'ADV', 'ADJA', 'NN', 'APPR', 'NN', 'NN', 'NN', 'KON', 'NN', 'ART', 'NN', 'NE', 'VVFIN', 'PDS', 'ART', 'NN', 'APPR', 'ART', 'NN', 'VVFIN', 'APPR', 'CARD', 'CARD', 'APPR', 'CARD', 'CARD', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 49), 'span': (36, 49), 'left siblings': ['SU', 'SU', 'SIMPX', 'PX', 'NX', 'LK', 'C'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP mittelklasse wollen sie denn eher eine zentrale lage am bahnhof oder am flughafen direkt kann ich ihnen eines anbieten das ist so ungefahr mittlere preisklasse mit restaurant konferenzraum garage und sauna das hotel forahotel heist das die kategorie fur ein einzelzimmer liegt bei hundert dreisig bis zweihundert funfunddreisig mark)

Sentence 634:
3 Initial errors
0 on fringe, 3 iterations
1 Error:Unary
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(PX
				(APPR plus)
				(NX iczuschlag))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF den)
				(LK mussen)
				(MF sie noch extra)
				(VC nehmen))[01;31m)[00m
		[01;31m(SU[00m
			(NX
				(ADJX sechs)
				(NN mark))[01;31m)[00m))
Step:Unary
{'subtrees': ['PX'], 'family': ['SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'NN', 'PDS', 'VMFIN', 'PPER', 'ADV', 'ADV', 'VVINF', 'CARD', 'NN'), 'right siblings': ['SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 10), 'span': (0, 2), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(PX plus iczuschlag)
		[01;31m(SU[00m
			(SIMPX
				(VF den)
				(LK mussen)
				(MF sie noch extra)
				(VC nehmen))[01;31m)[00m
		[01;31m(SU[00m
			(NX
				(ADJX sechs)
				(NN mark))[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['PX', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'NN', 'PDS', 'VMFIN', 'PPER', 'ADV', 'ADV', 'VVINF', 'CARD', 'NN'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 10), 'span': (2, 8), 'left siblings': ['PX'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(PX plus iczuschlag)
		(SIMPX den mussen sie noch extra nehmen)
		[01;31m(SU[00m
			(NX
				(ADJX sechs)
				(NN mark))[01;31m)[00m))
Step:Unary
{'subtrees': ['NX'], 'family': ['PX', 'SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'NN', 'PDS', 'VMFIN', 'PPER', 'ADV', 'ADV', 'VVINF', 'CARD', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 10), 'span': (8, 10), 'left siblings': ['PX', 'SIMPX'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP plus iczuschlag den mussen sie noch extra nehmen sechs mark)

Sentence 635:
17 Initial errors
0 on fringe, 8 iterations
4 Error:UNSET move
4 Error:Modifier Attachment
4 Error:Modifier Attachment
1 Error:Modifier Attachment
1 Error:Unary
1 Error:Unary
1 Error:UNSET remove
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP [01;33m(SIMPX[00m
	(TURN
		(SU
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					[01;31m(SIMPX[00m
						(KOORD oder)
						[01;36m(SIMPX[00m
							[01;36m(VF[00m
								(C was)
								(MF
									[01;31m(ADJX[00m
										[01;31m(ADVX[00m
											(ADVX noch)
											[01;36m(ADVX[00m
												(ADV [01;33m(ADJX[00m etwas)[01;36m)[00m[01;31m)[00m
										(ADJD preiswerter)[01;31m)[00m) [01;33mADJX)[00m
								(VC ware)[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
				(LK ware)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX
						(NX hotel)
						(NX loccumerhof))[01;31m)[00m[01;31m)[00m
			[01;31m(ADJX[00m
				(ADJX
					(ADVX auch)
					[01;36m(ADJX[00m
						(ADVX zentral)
						(ADJD gelegen)[01;36m)[00m) [01;33mMF) SIMPX)[00m
				(PX mit konferenzraum)[01;31m)[00m)
		[01;31m(SU[00m
			(NX
				(NX die preislage)
				(NX [01;33m(ADJX[00m
					(NX hundert funfundvierzig mark)
					(APPR bis)
					[01;31m(NX[00m
						(ADJX hundert achtzig) [01;33mADJX)[00m
						(NN mark)[01;31m)[00m))[01;31m)[00m))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['KOORD', 'VF', 'LK', 'MF'], 'mover info': [('KOORD', (0, 1))], 'old_family': ['KOORD', 'C', 'MF', 'VC'], 'start left siblings': [], 'auto preterminals': ('KON', 'PWS', 'ADV', 'ADV', 'ADJD', 'VAFIN', 'VAFIN', 'NN', 'NE'), 'start right siblings': ['C', 'MF', 'VC'], 'end left siblings': [], 'auto preterminal span': (0, 9), 'movers': ['KOORD'], 'old_parent': 'SIMPX', 'POS confusion': ('KON', 'KON'), 'end right siblings': ['VF', 'LK', 'MF'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP [01;33m(SIMPX[00m
	(TURN
		(SU
			[01;31m(SIMPX[00m
				(KOORD oder)
				(VF
					(SIMPX
						(C was)
						(MF
							[01;31m(ADJX[00m
								[01;31m(ADVX[00m
									(ADVX noch)
									[01;36m(ADVX[00m
										(ADV [01;33m(ADJX[00m etwas)[01;36m)[00m[01;31m)[00m
								(ADJD preiswerter)[01;31m)[00m) [01;33mADJX)[00m
						(VC ware)))
				(LK ware)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX
						(NX hotel)
						(NX loccumerhof))[01;31m)[00m[01;31m)[00m
			[01;31m(ADJX[00m
				(ADJX
					(ADVX auch)
					[01;36m(ADJX[00m
						(ADVX zentral)
						(ADJD gelegen)[01;36m)[00m) [01;33mMF) SIMPX)[00m
				(PX mit konferenzraum)[01;31m)[00m)
		[01;31m(SU[00m
			(NX
				(NX die preislage)
				(NX [01;33m(ADJX[00m
					(NX hundert funfundvierzig mark)
					(APPR bis)
					[01;31m(NX[00m
						(ADJX hundert achtzig) [01;33mADJX)[00m
						(NN mark)[01;31m)[00m))[01;31m)[00m))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['ADVX', 'ADJX'], 'mover info': [('ADVX', (2, 3))], 'old_family': ['ADVX', 'ADV'], 'start left siblings': [], 'auto preterminals': ('ADV', 'ADV', 'ADJD'), 'start right siblings': ['ADV'], 'end left siblings': [], 'auto preterminal span': (2, 5), 'movers': ['ADVX'], 'old_parent': 'ADVX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['ADJX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP [01;33m(SIMPX[00m
	(TURN
		(SU
			[01;31m(SIMPX[00m
				(KOORD oder)
				(VF was noch etwas preiswerter ware)
				(LK ware)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX
						(NX hotel)
						(NX loccumerhof))[01;31m)[00m[01;31m)[00m
			[01;31m(ADJX[00m
				(ADJX
					(ADVX auch)
					[01;36m(ADJX[00m
						(ADVX zentral)
						(ADJD gelegen)[01;36m)[00m) [01;33mMF) SIMPX)[00m
				(PX mit konferenzraum)[01;31m)[00m)
		[01;31m(SU[00m
			(NX
				(NX die preislage)
				(NX [01;33m(ADJX[00m
					(NX hundert funfundvierzig mark)
					(APPR bis)
					[01;31m(NX[00m
						(ADJX hundert achtzig) [01;33mADJX)[00m
						(NN mark)[01;31m)[00m))[01;31m)[00m))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'ADJX'], 'mover info': [('ADJX', (9, 12))], 'old_family': ['ADJX', 'PX'], 'start left siblings': [], 'auto preterminals': ('KON', 'PWS', 'ADV', 'ADV', 'ADJD', 'VAFIN', 'VAFIN', 'NN', 'NE', 'ADV', 'ADV', 'ADJD', 'APPR', 'NN'), 'start right siblings': ['PX'], 'end left siblings': ['NX'], 'auto preterminal span': (0, 14), 'movers': ['ADJX'], 'old_parent': 'ADJX', 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU
			(SIMPX
				(KOORD oder)
				(VF was noch etwas preiswerter ware)
				(LK ware)
				(MF
					(NX hotel loccumerhof)
					(ADJX
						(ADVX auch)
						[01;36m(ADJX[00m
							(ADVX zentral)
							(ADJD gelegen)[01;36m)[00m)))
			[01;31m(ADJX[00m
				(PX
					(APPR mit)
					(NX konferenzraum))[01;31m)[00m)
		[01;31m(SU[00m
			(NX
				(NX die preislage)
				(NX [01;33m(ADJX[00m
					(NX hundert funfundvierzig mark)
					(APPR bis)
					[01;31m(NX[00m
						(ADJX hundert achtzig) [01;33mADJX)[00m
						(NN mark)[01;31m)[00m))[01;31m)[00m))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'ADJD'], 'family': ['ADVX', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADJD'), 'right siblings': [], 'left siblings': [(ADVX (ADV auch))], 'auto preterminal span': (10, 12), 'span': (10, 12), 'parent': 'ADJX', 'label': 'ADJX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU
			(SIMPX oder was noch etwas preiswerter ware ware hotel loccumerhof auch zentral gelegen)
			[01;31m(ADJX[00m
				(PX
					(APPR mit)
					(NX konferenzraum))[01;31m)[00m)
		[01;31m(SU[00m
			(NX
				(NX die preislage)
				(NX [01;33m(ADJX[00m
					(NX hundert funfundvierzig mark)
					(APPR bis)
					[01;31m(NX[00m
						(ADJX hundert achtzig) [01;33mADJX)[00m
						(NN mark)[01;31m)[00m))[01;31m)[00m))
Step:Unary
{'subtrees': ['PX'], 'family': ['SIMPX', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'PWS', 'ADV', 'ADV', 'ADJD', 'VAFIN', 'VAFIN', 'NN', 'NE', 'ADV', 'ADV', 'ADJD', 'APPR', 'NN'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (0, 14), 'span': (12, 14), 'left siblings': ['SIMPX'], 'label': 'ADJX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU oder was noch etwas preiswerter ware ware hotel loccumerhof auch zentral gelegen mit konferenzraum)
		[01;31m(SU[00m
			(NX
				(NX die preislage)
				(NX [01;33m(ADJX[00m
					(NX hundert funfundvierzig mark)
					(APPR bis)
					[01;31m(NX[00m
						(ADJX hundert achtzig) [01;33mADJX)[00m
						(NN mark)[01;31m)[00m))[01;31m)[00m))
Step:Unary
{'subtrees': ['NX'], 'family': ['SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'PWS', 'ADV', 'ADV', 'ADJD', 'VAFIN', 'VAFIN', 'NN', 'NE', 'ADV', 'ADV', 'ADJD', 'APPR', 'NN', 'ART', 'NN', 'CARD', 'CARD', 'NN', 'APPR', 'CARD', 'CARD', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 23), 'span': (14, 23), 'left siblings': ['SU'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU oder was noch etwas preiswerter ware ware hotel loccumerhof auch zentral gelegen mit konferenzraum)
		(NX
			(NX die preislage)
			(NX [01;33m(ADJX[00m
				(NX hundert funfundvierzig mark)
				(APPR bis)
				[01;31m(NX[00m
					(ADJX hundert achtzig) [01;33mADJX)[00m
					(NN mark)[01;31m)[00m))))
Step:UNSET remove
{'subtrees': ['ADJX', 'NN'], 'family': ['NX', 'APPR', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'CARD', 'NN', 'APPR', 'CARD', 'CARD', 'NN'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (16, 23), 'span': (20, 23), 'left siblings': ['NX', 'APPR'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU oder was noch etwas preiswerter ware ware hotel loccumerhof auch zentral gelegen mit konferenzraum)
		(NX
			(NX die preislage)
			(NX
				[01;36m(ADJX[00m
					(NX hundert funfundvierzig mark)
					(APPR bis)
					(ADJX hundert achtzig)[01;36m)[00m
				(NN mark)))))
Step:Modifier Attachment
{'subtrees': ['NX', 'APPR', 'ADJX'], 'family': ['ADJX', 'NN'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'CARD', 'NN', 'APPR', 'CARD', 'CARD'), 'right siblings': [(NN mark)], 'left siblings': [], 'auto preterminal span': (16, 22), 'span': (16, 22), 'parent': 'NX', 'label': 'ADJX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP oder was noch etwas preiswerter ware ware hotel loccumerhof auch zentral gelegen mit konferenzraum die preislage hundert funfundvierzig mark bis hundert achtzig mark)

Sentence 636:
10 Initial errors
0 on fringe, 4 iterations
4 Error:UNSET move
3 Error:UNSET move
2 Error:Different label
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SIMPX[00m
	[01;36m(SU[00m
		(TOP
			(TURN
				[01;31m(SU[00m
					[01;31m(SIMPX[00m
						(VF fur welches)
						(LK hatten)
						(MF sie sich jetzt)
						(VC entschieden)[01;31m)[00m[01;31m)[00m
				[01;36m(PX[00m
					[01;36m(NF[00m
						[01;31m(SU[00m
							[01;31m(PX[00m
								(APPR fur)
								[01;33m(NX[00m (NX das mit konferenzraum)[01;31m)[00m[01;31m)[00m
						[01;31m(SU[00m
							(NX
								(NX hotel)
								(NX loccumerhof))[01;31m)[00m[01;36m)[00m[01;36m)[00m)) [01;33mNX)[00m[01;36m)[00m[01;36m)[00m
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'VC', 'SU', 'SU'], 'mover info': [('SU', (7, 11)), ('SU', (11, 13))], 'old_family': ['SU', 'SU', 'SU'], 'start left siblings': ['SU'], 'auto preterminals': ('APPR', 'PWS', 'VAFIN', 'PPER', 'PRF', 'ADV', 'VVPP', 'APPR', 'PDS', 'APPR', 'NN', 'NN', 'NE'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'MF', 'VC'], 'auto preterminal span': (0, 13), 'movers': ['SU', 'SU'], 'old_parent': 'TURN', 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			(SIMPX
				(VF fur welches)
				(LK hatten)
				(MF sie sich jetzt)
				(VC entschieden)
				[01;36m(PX[00m
					[01;36m(NF[00m
						[01;31m(SU[00m
							[01;31m(PX[00m
								(APPR fur)
								[01;33m(NX[00m (NX das mit konferenzraum)[01;31m)[00m[01;31m)[00m
						[01;31m(SU[00m
							(NX
								(NX hotel)
								(NX loccumerhof))[01;31m)[00m[01;36m)[00m[01;36m)[00m)))) [01;33mNX)[00m
Step:UNSET move
{'new_parent': 'PX', 'new_family': ['APPR', 'NX', 'SU'], 'mover info': [('SU', (11, 13))], 'old_family': ['VF', 'LK', 'MF', 'VC', 'SU', 'SU'], 'start left siblings': ['VF', 'LK', 'MF', 'VC', 'SU'], 'auto preterminals': ('APPR', 'PWS', 'VAFIN', 'PPER', 'PRF', 'ADV', 'VVPP', 'APPR', 'PDS', 'APPR', 'NN', 'NN', 'NE'), 'start right siblings': [], 'end left siblings': ['APPR', 'NX'], 'auto preterminal span': (0, 13), 'adding node already present': False, 'movers': ['SU'], 'old_parent': 'SIMPX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(SU
			(SIMPX
				(VF fur welches)
				(LK hatten)
				(MF sie sich jetzt)
				(VC entschieden)
				[01;36m(NF[00m [01;31m(SU[00m
					(PX
						(APPR fur)
						(NX
							(NX das mit konferenzraum)
							[01;31m(SU[00m
								(NX
									(NX hotel)
									(NX loccumerhof))[01;31m)[00m))[01;31m)[00m[01;36m)[00m))))
Step:Different label
{'family': ['VF', 'LK', 'MF', 'VC', 'NF'], 'auto preterminal span': (7, 13), 'span': (7, 13), 'subtrees': ['PX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('APPR', 'PDS', 'APPR', 'NN', 'NN', 'NE'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('SU', 'NF')}
(TOP
	(TURN
		(SU
			(SIMPX
				(VF fur welches)
				(LK hatten)
				(MF sie sich jetzt)
				(VC entschieden)
				(NF
					(PX
						(APPR fur)
						(NX
							(NX das mit konferenzraum)
							[01;31m(SU[00m
								(NX
									(NX hotel)
									(NX loccumerhof))[01;31m)[00m)))))))
Step:Unary
{'subtrees': ['NX'], 'family': ['NX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'APPR', 'NN', 'NN', 'NE'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (8, 13), 'span': (11, 13), 'left siblings': ['NX'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP fur welches hatten sie sich jetzt entschieden fur das mit konferenzraum hotel loccumerhof)

Sentence 637:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Co-ordination
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;36m(SU[00m
			(SU guten tag)
			(SU wir wollten in den nachsten drei monaten doch noch mal nach nach hannover zu unserer filiale fahren)[01;36m)[00m
		(SU haben sie jetzt einen freien termin gefunden)))
Step:Co-ordination
{'subtrees': ['SU', 'SU'], 'family': ['SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJA', 'NN', 'PPER', 'VMFIN', 'APPR', 'ART', 'ADJA', 'CARD', 'NN', 'ADV', 'ADV', 'ADV', 'APPR', 'APPR', 'NE', 'APPR', 'PPOSAT', 'NN', 'VVINF'), 'right siblings': [(SU (SIMPX (LK (VXFIN (VAFIN haben))) (MF (NX (PPER sie)) (ADVX (ADV jetzt)) (NX (ART einen) (ADJX (ADJA freien)) (NN termin))) (VC (VXINF (VVPP gefunden)))))], 'left siblings': [], 'auto preterminal span': (0, 19), 'span': (0, 19), 'parent': 'TURN', 'label': 'SU', 'classified_type': 'Co-ordination', 'type': 'add'}
(TOP guten tag wir wollten in den nachsten drei monaten doch noch mal nach nach hannover zu unserer filiale fahren haben sie jetzt einen freien termin gefunden)

Sentence 638:
10 Initial errors
0 on fringe, 6 iterations
4 Error:NP Attachment
2 Error:UNSET move
1 Error:Unary
1 Error:PP Attachment
1 Error:PP Attachment
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SU[00m
	(TOP
		(TURN
			[01;31m(SU[00m
				(DM okay)
				[01;31m(PX[00m
					[01;36m(DM[00m
						(ADVX
							(ADV also))[01;36m)[00m
					(PX am zwanzigsten)[01;31m)[00m[01;31m)[00m
			[01;36m(SIMPX[00m [01;31m(SU[00m
				[01;31m(SIMPX[00m
					(VF was)
					(LK meinen)
					[01;31m(MF[00m [01;33m(MF[00m
						(NX
							(PPER sie))[01;31m)[00m[01;31m)[00m
				[01;31m(NX[00m
					(ADVX eher)
					(NX flug)[01;31m)[00m[01;31m)[00m[01;36m)[00m)) [01;33mMF)[00m[01;36m)[00m
Step:NP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'NX'], 'mover info': [('NX', (7, 9))], 'old_family': ['SIMPX', 'NX'], 'start left siblings': ['SIMPX'], 'auto preterminals': ('PWS', 'VVFIN', 'PPER', 'ADV', 'NN'), 'start right siblings': [], 'end left siblings': ['NX'], 'auto preterminal span': (4, 9), 'movers': ['NX'], 'old_parent': 'SU', 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
[01;36m(SU[00m
	(TOP
		(TURN
			[01;31m(SU[00m
				(DM okay)
				[01;31m(PX[00m
					[01;36m(DM[00m
						(ADVX
							(ADV also))[01;36m)[00m
					(PX am zwanzigsten)[01;31m)[00m[01;31m)[00m
			[01;31m(SU[00m
				(SIMPX
					(VF was)
					(LK meinen)
					(MF
						(NX sie)
						[01;31m(NX[00m
							(ADVX eher)
							(NX flug)[01;31m)[00m))[01;31m)[00m))[01;36m)[00m
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SU', 'SIMPX'], 'mover info': [('SU', (0, 4))], 'old_family': ['SU', 'SU'], 'start left siblings': [], 'auto preterminals': ('ITJ', 'ADV', 'APPRART', 'NN', 'PWS', 'VVFIN', 'PPER', 'ADV', 'NN'), 'start right siblings': ['SU'], 'end left siblings': [], 'auto preterminal span': (0, 9), 'movers': ['SU'], 'old_parent': 'TURN', 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			[01;31m(SU[00m
				(DM okay)
				[01;31m(PX[00m
					[01;36m(DM[00m
						(ADVX
							(ADV also))[01;36m)[00m
					(PX am zwanzigsten)[01;31m)[00m[01;31m)[00m
			(SIMPX
				(VF was)
				(LK meinen)
				(MF
					(NX sie)
					[01;31m(NX[00m
						(ADVX eher)
						(NX flug)[01;31m)[00m)))))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['DM', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV',), 'right siblings': [(PX (APPRART am) (NX (NN zwanzigsten)))], 'left siblings': [], 'auto preterminal span': (1, 2), 'span': (1, 2), 'parent': 'PX', 'label': 'DM', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU
			[01;31m(SU[00m
				(DM okay)
				[01;31m(PX[00m
					(DM also)
					(PX am zwanzigsten)[01;31m)[00m[01;31m)[00m
			(SIMPX
				(VF was)
				(LK meinen)
				(MF
					(NX sie)
					[01;31m(NX[00m
						(ADVX eher)
						(NX flug)[01;31m)[00m)))))
Step:PP Attachment
{'subtrees': ['DM', 'PX'], 'family': ['SU', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'APPRART', 'NN', 'PWS', 'VVFIN', 'PPER', 'ADV', 'NN'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 9), 'span': (0, 4), 'left siblings': [], 'label': 'SU', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM okay)
			[01;31m(PX[00m
				(DM also)
				(PX am zwanzigsten)[01;31m)[00m
			(SIMPX
				(VF was)
				(LK meinen)
				(MF
					(NX sie)
					[01;31m(NX[00m
						(ADVX eher)
						(NX flug)[01;31m)[00m)))))
Step:PP Attachment
{'subtrees': ['DM', 'PX'], 'family': ['DM', 'PX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'APPRART', 'NN', 'PWS', 'VVFIN', 'PPER', 'ADV', 'NN'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 9), 'span': (1, 4), 'left siblings': ['DM'], 'label': 'PX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM okay)
			(DM also)
			(PX am zwanzigsten)
			(SIMPX
				(VF was)
				(LK meinen)
				(MF
					(NX sie)
					[01;31m(NX[00m
						(ADVX eher)
						(NX flug)[01;31m)[00m)))))
Step:UNSET remove
{'subtrees': ['ADVX', 'NX'], 'family': ['NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (6, 9), 'span': (7, 9), 'left siblings': ['NX'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP okay also am zwanzigsten was meinen sie eher flug)

Sentence 639:
0 Initial errors
0 on fringe, 0 iterations

Sentence 640:
2 Initial errors
0 on fringe, 1 iterations
2 Error:UNSET move
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SU[00m
	(TOP
		(TURN
			[01;31m(SU[00m
				(DM ja)
				(ADJX am besten)[01;31m)[00m
			(SU wahrscheinlich brauchen wir auch eine reservierung)))[01;36m)[00m
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['DM', 'ADJX', 'SU'], 'mover info': [('SU', (3, 9))], 'old_family': ['SU', 'SU'], 'start left siblings': ['SU'], 'auto preterminals': ('PTKANT', 'PTKA', 'ADJD', 'ADV', 'VVFIN', 'PPER', 'ADV', 'ART', 'NN'), 'start right siblings': [], 'end left siblings': ['DM', 'ADJX'], 'auto preterminal span': (0, 9), 'movers': ['SU'], 'old_parent': 'TURN', 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP ja am besten wahrscheinlich brauchen wir auch eine reservierung)

Sentence 641:
5 Initial errors
0 on fringe, 3 iterations
2 Error:Different label
2 Error:UNSET move
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SU[00m
	(TOP
		(TURN
			(SU gut)
			[01;31m(SU[00m
				(DM ja)
				(SIMPX
					[01;36m(KOORD[00m [01;31m(VF[00m
						[01;31m(ADVX[00m
							(ADV aber)[01;31m)[00m[01;31m)[00m[01;36m)[00m
					(LK gehen)
					(MF wir doch dann sonntag abend noch ins theater))[01;31m)[00m))[01;36m)[00m
Step:Different label
{'family': ['KOORD', 'LK', 'MF'], 'auto preterminal span': (2, 3), 'span': (2, 3), 'subtrees': ['ADVX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('ADV',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('VF', 'KOORD')}
[01;36m(SU[00m
	(TOP
		(TURN
			(SU gut)
			[01;31m(SU[00m
				(DM ja)
				(SIMPX
					(KOORD
						[01;31m(ADVX[00m
							(ADV aber)[01;31m)[00m)
					(LK gehen)
					(MF wir doch dann sonntag abend noch ins theater))[01;31m)[00m))[01;36m)[00m
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SU', 'DM', 'SIMPX'], 'mover info': [('SU', (0, 1))], 'old_family': ['SU', 'SU'], 'start left siblings': [], 'auto preterminals': ('ITJ', 'PTKANT', 'ADV', 'VVFIN', 'PPER', 'ADV', 'ADV', 'NN', 'ADV', 'ADV', 'APPRART', 'NN'), 'start right siblings': ['SU'], 'end left siblings': [], 'auto preterminal span': (0, 12), 'movers': ['SU'], 'old_parent': 'TURN', 'POS confusion': ('ITJ', 'ITJ'), 'end right siblings': ['DM', 'SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			(SU gut)
			(DM ja)
			(SIMPX
				(KOORD
					[01;31m(ADVX[00m
						(ADV aber)[01;31m)[00m)
				(LK gehen)
				(MF wir doch dann sonntag abend noch ins theater)))))
Step:Single Word Phrase
{'subtrees': ['ADV'], 'family': ['ADVX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADV',), 'right siblings': [], 'parent': 'KOORD', 'auto preterminal span': (2, 3), 'span': (2, 3), 'left siblings': [], 'label': 'ADVX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP gut ja aber gehen wir doch dann sonntag abend noch ins theater)

Sentence 642:
10 Initial errors
0 on fringe, 8 iterations
2 Error:Different label
2 Error:Clause Attachment
1 Error:Unary
1 Error:Unary
1 Error:UNSET remove
1 Error:Unary
1 Error:Clause Attachment
1 Error:Clause Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM
				(PTKANT ja))[01;31m)[00m
		[01;36m(SIMPX[00m [01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF ich)
				(LK war)[01;31m)[00m
			[01;36m(NF[00m
				(SIMPX
					(VF das letzte mal)
					(LK war)
					(MF ich im intercityhotel))[01;36m)[00m[01;31m)[00m[01;36m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(SIMPX das ist ziemlich zentral)
				(KON und)
				(DM ja)
				(DM okay)
				(SIMPX es hat einen konferenzraum)[01;31m)[00m
			[01;33m(SIMPX[00m (SIMPX aber das brauchen wir eigentlich nicht)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF da)
				(LK war)[01;31m)[00m [01;33mSIMPX)[00m
			(SIMPX das einzelzimmer hat ungefahr zweihundert mark gekostet)[01;31m)[00m))
Step:Different label
{'family': ['SU', 'SIMPX', 'SU', 'SU'], 'auto preterminal span': (1, 10), 'span': (1, 10), 'subtrees': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'over_word': False, 'auto preterminals': ('PPER', 'VAFIN', 'ART', 'ADJA', 'NN', 'VAFIN', 'PPER', 'APPRART', 'NE'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('SU', 'SIMPX')}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM
				(PTKANT ja))[01;31m)[00m
		(SIMPX
			[01;31m(SIMPX[00m
				(VF ich)
				(LK war)[01;31m)[00m
			[01;36m(NF[00m
				(SIMPX
					(VF das letzte mal)
					(LK war)
					(MF ich im intercityhotel))[01;36m)[00m)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(SIMPX das ist ziemlich zentral)
				(KON und)
				(DM ja)
				(DM okay)
				(SIMPX es hat einen konferenzraum)[01;31m)[00m
			[01;33m(SIMPX[00m (SIMPX aber das brauchen wir eigentlich nicht)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF da)
				(LK war)[01;31m)[00m [01;33mSIMPX)[00m
			(SIMPX das einzelzimmer hat ungefahr zweihundert mark gekostet)[01;31m)[00m))
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['SIMPX', 'VF', 'LK'], 'mover info': [('SIMPX', (21, 27))], 'old_family': ['SIMPX', 'SIMPX'], 'start left siblings': ['SIMPX'], 'auto preterminals': ('PTKANT', 'PPER', 'VAFIN', 'ART', 'ADJA', 'NN', 'VAFIN', 'PPER', 'APPRART', 'NE', 'PDS', 'VAFIN', 'ADV', 'ADJD', 'KON', 'PTKANT', 'ITJ', 'PPER', 'VAFIN', 'ART', 'NN', 'KON', 'PDS', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADV', 'VAFIN', 'ART', 'NN', 'VAFIN', 'ADV', 'CARD', 'NN', 'VVPP'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 36), 'movers': ['SIMPX'], 'old_parent': 'SU', 'end right siblings': ['VF', 'LK'], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM
				(PTKANT ja))[01;31m)[00m
		(SIMPX
			[01;31m(SIMPX[00m
				(VF ich)
				(LK war)[01;31m)[00m
			[01;36m(NF[00m
				(SIMPX
					(VF das letzte mal)
					(LK war)
					(MF ich im intercityhotel))[01;36m)[00m)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(SIMPX das ist ziemlich zentral)
				(KON und)
				(DM ja)
				(DM okay)
				(SIMPX es hat einen konferenzraum)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX aber das brauchen wir eigentlich nicht da war)
			(SIMPX das einzelzimmer hat ungefahr zweihundert mark gekostet)[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SIMPX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'ADJA', 'NN', 'VAFIN', 'PPER', 'APPRART', 'NE'), 'right siblings': [], 'left siblings': [(SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VAFIN war))))], 'auto preterminal span': (3, 10), 'span': (3, 10), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM
				(PTKANT ja))[01;31m)[00m
		(SIMPX
			[01;31m(SIMPX[00m
				(VF ich)
				(LK war)[01;31m)[00m
			(NF das letzte mal war ich im intercityhotel))
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(SIMPX das ist ziemlich zentral)
				(KON und)
				(DM ja)
				(DM okay)
				(SIMPX es hat einen konferenzraum)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX aber das brauchen wir eigentlich nicht da war)
			(SIMPX das einzelzimmer hat ungefahr zweihundert mark gekostet)[01;31m)[00m))
Step:Unary
{'subtrees': ['DM'], 'family': ['SU', 'SIMPX', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VAFIN', 'ART', 'ADJA', 'NN', 'VAFIN', 'PPER', 'APPRART', 'NE', 'PDS', 'VAFIN', 'ADV', 'ADJD', 'KON', 'PTKANT', 'ITJ', 'PPER', 'VAFIN', 'ART', 'NN', 'KON', 'PDS', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADV', 'VAFIN', 'ART', 'NN', 'VAFIN', 'ADV', 'CARD', 'NN', 'VVPP'), 'right siblings': ['SIMPX', 'SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 36), 'span': (0, 1), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			[01;31m(SIMPX[00m
				(VF ich)
				(LK war)[01;31m)[00m
			(NF das letzte mal war ich im intercityhotel))
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(SIMPX das ist ziemlich zentral)
				(KON und)
				(DM ja)
				(DM okay)
				(SIMPX es hat einen konferenzraum)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX aber das brauchen wir eigentlich nicht da war)
			(SIMPX das einzelzimmer hat ungefahr zweihundert mark gekostet)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VF', 'LK'], 'family': ['SIMPX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'ART', 'ADJA', 'NN', 'VAFIN', 'PPER', 'APPRART', 'NE'), 'right siblings': ['NF'], 'parent': 'SIMPX', 'auto preterminal span': (1, 10), 'span': (1, 3), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich war das letzte mal war ich im intercityhotel)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(SIMPX das ist ziemlich zentral)
				(KON und)
				(DM ja)
				(DM okay)
				(SIMPX es hat einen konferenzraum)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX aber das brauchen wir eigentlich nicht da war)
			(SIMPX das einzelzimmer hat ungefahr zweihundert mark gekostet)[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX', 'KON', 'DM', 'DM', 'SIMPX'], 'family': ['SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VAFIN', 'ADV', 'ADJD', 'KON', 'PTKANT', 'ITJ', 'PPER', 'VAFIN', 'ART', 'NN'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (10, 21), 'span': (10, 21), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich war das letzte mal war ich im intercityhotel)
		[01;31m(SU[00m
			(SIMPX das ist ziemlich zentral)
			(KON und)
			(DM ja)
			(DM okay)
			(SIMPX es hat einen konferenzraum)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX aber das brauchen wir eigentlich nicht da war)
			(SIMPX das einzelzimmer hat ungefahr zweihundert mark gekostet)[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'KON', 'DM', 'DM', 'SIMPX'], 'family': ['DM', 'SIMPX', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VAFIN', 'ART', 'ADJA', 'NN', 'VAFIN', 'PPER', 'APPRART', 'NE', 'PDS', 'VAFIN', 'ADV', 'ADJD', 'KON', 'PTKANT', 'ITJ', 'PPER', 'VAFIN', 'ART', 'NN', 'KON', 'PDS', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADV', 'VAFIN', 'ART', 'NN', 'VAFIN', 'ADV', 'CARD', 'NN', 'VVPP'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 36), 'span': (10, 21), 'left siblings': ['DM', 'SIMPX'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich war das letzte mal war ich im intercityhotel)
		(SIMPX das ist ziemlich zentral)
		(KON und)
		(DM ja)
		(DM okay)
		(SIMPX es hat einen konferenzraum)
		[01;31m(SU[00m
			(SIMPX aber das brauchen wir eigentlich nicht da war)
			(SIMPX das einzelzimmer hat ungefahr zweihundert mark gekostet)[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['DM', 'SIMPX', 'SIMPX', 'KON', 'DM', 'DM', 'SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VAFIN', 'ART', 'ADJA', 'NN', 'VAFIN', 'PPER', 'APPRART', 'NE', 'PDS', 'VAFIN', 'ADV', 'ADJD', 'KON', 'PTKANT', 'ITJ', 'PPER', 'VAFIN', 'ART', 'NN', 'KON', 'PDS', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADV', 'VAFIN', 'ART', 'NN', 'VAFIN', 'ADV', 'CARD', 'NN', 'VVPP'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 36), 'span': (21, 36), 'left siblings': ['DM', 'SIMPX', 'SIMPX', 'KON', 'DM', 'DM', 'SIMPX'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP ja ich war das letzte mal war ich im intercityhotel das ist ziemlich zentral und ja okay es hat einen konferenzraum aber das brauchen wir eigentlich nicht da war das einzelzimmer hat ungefahr zweihundert mark gekostet)

Sentence 643:
10 Initial errors
0 on fringe, 8 iterations
2 Error:Clause Attachment
2 Error:Modifier Attachment
1 Error:PP Attachment
1 Error:Modifier Attachment
1 Error:Unary
1 Error:UNSET remove
1 Error:Clause Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU ja das ist bestimmt nicht schlecht)
		[01;31m(SU[00m
			[01;36m(SU[00m
				(SIMPX
					(VF ich)
					(LK kenne)
					(MF
						[01;31m(NX[00m
							(NX ein theater)
							(PX in hannover)[01;31m)[00m))[01;36m)[00m
			(SIMPX das heist ballhof oder so)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(P[00m
				(SIMPX vielleicht haben die auch eine gute inszenierung)
				(KOUS weil)
				(SIMPX
					(VF das letzte mal)
					(LK haben)
					(MF
						(NX die)
						[01;31m(ADJX[00m
							(ADVX wirklich)
							[01;36m(ADJX[00m
								(ADJD gut)[01;36m)[00m[01;31m)[00m)
					(VC gespielt))[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF ansonsten)
				(LK weis)
				(MF ich gar nicht)
				(NF
					(SIMPX
						(C was)
						(MF
							[01;36m(PX[00m
								(PX im moment)
								(PX in hannover)[01;36m)[00m
							[01;36m(ADVX[00m
								(ADVX so)
								(ADVX los)[01;36m)[00m)
						(VC ist))))[01;31m)[00m))
Step:Clause Attachment
{'new_parent': 'SU', 'new_family': ['SIMPX', 'P'], 'mover info': [('SIMPX', (12, 17))], 'old_family': ['SIMPX', 'SIMPX'], 'start left siblings': ['SIMPX'], 'auto preterminals': ('PTKANT', 'PDS', 'VAFIN', 'ADV', 'PTKNEG', 'ADJD', 'PPER', 'VVFIN', 'ART', 'NN', 'APPR', 'NE', 'PDS', 'VVFIN', 'NE', 'KON', 'ADV', 'ADV', 'VAFIN', 'PDS', 'ADV', 'ART', 'ADJA', 'NN', 'KOUS', 'ART', 'ADJA', 'NN', 'VAFIN', 'PDS', 'ADV', 'ADJD', 'VVPP', 'ADV', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'PWS', 'APPRART', 'NN', 'APPR', 'NE', 'ADV', 'ADV', 'VAFIN'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 46), 'movers': ['SIMPX'], 'old_parent': 'SU', 'end right siblings': ['P'], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU ja das ist bestimmt nicht schlecht)
		(SU
			(SIMPX
				(VF ich)
				(LK kenne)
				(MF
					[01;31m(NX[00m
						(NX ein theater)
						(PX in hannover)[01;31m)[00m)))
		[01;31m(SU[00m
			(SIMPX das heist ballhof oder so)
			[01;31m(P[00m
				(SIMPX vielleicht haben die auch eine gute inszenierung)
				(KOUS weil)
				(SIMPX
					(VF das letzte mal)
					(LK haben)
					(MF
						(NX die)
						[01;31m(ADJX[00m
							(ADVX wirklich)
							[01;36m(ADJX[00m
								(ADJD gut)[01;36m)[00m[01;31m)[00m)
					(VC gespielt))[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF ansonsten)
				(LK weis)
				(MF ich gar nicht)
				(NF
					(SIMPX
						(C was)
						(MF
							[01;36m(PX[00m
								(PX im moment)
								(PX in hannover)[01;36m)[00m
							[01;36m(ADVX[00m
								(ADVX so)
								(ADVX los)[01;36m)[00m)
						(VC ist))))[01;31m)[00m))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'ADVX', 'ADJX'], 'mover info': [('ADVX', (30, 31))], 'old_family': ['ADVX', 'ADJD'], 'start left siblings': [], 'auto preterminals': ('PDS', 'ADV', 'ADJD'), 'start right siblings': ['ADJD'], 'end left siblings': ['NX'], 'auto preterminal span': (29, 32), 'movers': ['ADVX'], 'old_parent': 'ADJX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['ADJX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU ja das ist bestimmt nicht schlecht)
		(SU
			(SIMPX
				(VF ich)
				(LK kenne)
				(MF
					[01;31m(NX[00m
						(NX ein theater)
						(PX in hannover)[01;31m)[00m)))
		[01;31m(SU[00m
			(SIMPX das heist ballhof oder so)
			[01;31m(P[00m
				(SIMPX vielleicht haben die auch eine gute inszenierung)
				(KOUS weil)
				(SIMPX das letzte mal haben die wirklich gut gespielt)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF ansonsten)
				(LK weis)
				(MF ich gar nicht)
				(NF
					(SIMPX
						(C was)
						(MF
							[01;36m(PX[00m
								(PX im moment)
								(PX in hannover)[01;36m)[00m
							[01;36m(ADVX[00m
								(ADVX so)
								(ADVX los)[01;36m)[00m)
						(VC ist))))[01;31m)[00m))
Step:PP Attachment
{'subtrees': ['PX', 'PX'], 'family': ['PX', 'ADVX', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'NN', 'APPR', 'NE'), 'right siblings': [(ADVX (ADV so)), (ADVX (ADV los))], 'left siblings': [], 'auto preterminal span': (39, 43), 'span': (39, 43), 'parent': 'MF', 'label': 'PX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU ja das ist bestimmt nicht schlecht)
		(SU
			(SIMPX
				(VF ich)
				(LK kenne)
				(MF
					[01;31m(NX[00m
						(NX ein theater)
						(PX in hannover)[01;31m)[00m)))
		[01;31m(SU[00m
			(SIMPX das heist ballhof oder so)
			[01;31m(P[00m
				(SIMPX vielleicht haben die auch eine gute inszenierung)
				(KOUS weil)
				(SIMPX das letzte mal haben die wirklich gut gespielt)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF ansonsten)
				(LK weis)
				(MF ich gar nicht)
				(NF
					(SIMPX
						(C was)
						(MF
							(PX im moment in hannover)
							[01;36m(ADVX[00m
								(ADVX so)
								(ADVX los)[01;36m)[00m)
						(VC ist))))[01;31m)[00m))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'ADVX'], 'family': ['PX', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV'), 'right siblings': [], 'left siblings': [(PX (PX (APPRART im) (NX (NN moment))) (PX (APPR in) (NX (NE hannover))))], 'auto preterminal span': (43, 45), 'span': (43, 45), 'parent': 'MF', 'label': 'ADVX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU ja das ist bestimmt nicht schlecht)
		(SU
			(SIMPX
				(VF ich)
				(LK kenne)
				(MF
					[01;31m(NX[00m
						(NX ein theater)
						(PX in hannover)[01;31m)[00m)))
		[01;31m(SU[00m
			(SIMPX das heist ballhof oder so)
			[01;31m(P[00m
				(SIMPX vielleicht haben die auch eine gute inszenierung)
				(KOUS weil)
				(SIMPX das letzte mal haben die wirklich gut gespielt)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF ansonsten)
				(LK weis)
				(MF ich gar nicht)
				(NF was im moment in hannover so los ist))[01;31m)[00m))
Step:Unary
{'subtrees': ['NX', 'PX'], 'family': ['NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'APPR', 'NE'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (8, 12), 'span': (8, 12), 'left siblings': [], 'label': 'NX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU ja das ist bestimmt nicht schlecht)
		(SU ich kenne ein theater in hannover)
		[01;31m(SU[00m
			(SIMPX das heist ballhof oder so)
			[01;31m(P[00m
				(SIMPX vielleicht haben die auch eine gute inszenierung)
				(KOUS weil)
				(SIMPX das letzte mal haben die wirklich gut gespielt)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF ansonsten)
				(LK weis)
				(MF ich gar nicht)
				(NF was im moment in hannover so los ist))[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['SIMPX', 'P'], 'family': ['SU', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PDS', 'VAFIN', 'ADV', 'PTKNEG', 'ADJD', 'PPER', 'VVFIN', 'ART', 'NN', 'APPR', 'NE', 'PDS', 'VVFIN', 'NE', 'KON', 'ADV', 'ADV', 'VAFIN', 'PDS', 'ADV', 'ART', 'ADJA', 'NN', 'KOUS', 'ART', 'ADJA', 'NN', 'VAFIN', 'PDS', 'ADV', 'ADJD', 'VVPP', 'ADV', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'PWS', 'APPRART', 'NN', 'APPR', 'NE', 'ADV', 'ADV', 'VAFIN'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 46), 'span': (12, 33), 'left siblings': ['SU', 'SU'], 'label': 'SU', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU ja das ist bestimmt nicht schlecht)
		(SU ich kenne ein theater in hannover)
		(SIMPX das heist ballhof oder so)
		[01;31m(P[00m
			(SIMPX vielleicht haben die auch eine gute inszenierung)
			(KOUS weil)
			(SIMPX das letzte mal haben die wirklich gut gespielt)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF ansonsten)
				(LK weis)
				(MF ich gar nicht)
				(NF was im moment in hannover so los ist))[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'KOUS', 'SIMPX'], 'family': ['SU', 'SU', 'SIMPX', 'P', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PDS', 'VAFIN', 'ADV', 'PTKNEG', 'ADJD', 'PPER', 'VVFIN', 'ART', 'NN', 'APPR', 'NE', 'PDS', 'VVFIN', 'NE', 'KON', 'ADV', 'ADV', 'VAFIN', 'PDS', 'ADV', 'ART', 'ADJA', 'NN', 'KOUS', 'ART', 'ADJA', 'NN', 'VAFIN', 'PDS', 'ADV', 'ADJD', 'VVPP', 'ADV', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'PWS', 'APPRART', 'NN', 'APPR', 'NE', 'ADV', 'ADV', 'VAFIN'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 46), 'span': (17, 33), 'left siblings': ['SU', 'SU', 'SIMPX'], 'label': 'P', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU ja das ist bestimmt nicht schlecht)
		(SU ich kenne ein theater in hannover)
		(SIMPX das heist ballhof oder so)
		(SIMPX vielleicht haben die auch eine gute inszenierung)
		(KOUS weil)
		(SIMPX das letzte mal haben die wirklich gut gespielt)
		[01;31m(SU[00m
			(SIMPX
				(VF ansonsten)
				(LK weis)
				(MF ich gar nicht)
				(NF was im moment in hannover so los ist))[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SU', 'SU', 'SIMPX', 'SIMPX', 'KOUS', 'SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PDS', 'VAFIN', 'ADV', 'PTKNEG', 'ADJD', 'PPER', 'VVFIN', 'ART', 'NN', 'APPR', 'NE', 'PDS', 'VVFIN', 'NE', 'KON', 'ADV', 'ADV', 'VAFIN', 'PDS', 'ADV', 'ART', 'ADJA', 'NN', 'KOUS', 'ART', 'ADJA', 'NN', 'VAFIN', 'PDS', 'ADV', 'ADJD', 'VVPP', 'ADV', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'PWS', 'APPRART', 'NN', 'APPR', 'NE', 'ADV', 'ADV', 'VAFIN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 46), 'span': (33, 46), 'left siblings': ['SU', 'SU', 'SIMPX', 'SIMPX', 'KOUS', 'SIMPX'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja das ist bestimmt nicht schlecht ich kenne ein theater in hannover das heist ballhof oder so vielleicht haben die auch eine gute inszenierung weil das letzte mal haben die wirklich gut gespielt ansonsten weis ich gar nicht was im moment in hannover so los ist)

Sentence 644:
2 Initial errors
0 on fringe, 2 iterations
1 Error:Clause Attachment
1 Error:Clause Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU irgendwann ja in der woche)
		[01;31m(SU[00m
			(SIMPX wir konnen ja)
			(APPRART am)
			[01;36m(SIMPX[00m
				(SIMPX vielleicht fahren wir einfach montag schon los)
				(SIMPX dann sind wir vorm wochenende wieder zuruck)[01;36m)[00m[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['SIMPX', 'APPRART', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'ADV', 'NN', 'ADV', 'PTKVZ', 'ADV', 'VAFIN', 'PPER', 'APPRART', 'NN', 'ADV', 'ADV'), 'right siblings': [], 'left siblings': [(SIMPX (VF (NX (PPER wir))) (LK (VXFIN (VMFIN konnen))) (MF (ADVX (ADV ja)))), (APPRART am)], 'auto preterminal span': (9, 23), 'span': (9, 23), 'parent': 'SU', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU irgendwann ja in der woche)
		[01;31m(SU[00m
			(SIMPX wir konnen ja)
			(APPRART am)
			(SIMPX vielleicht fahren wir einfach montag schon los dann sind wir vorm wochenende wieder zuruck)[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'APPRART', 'SIMPX'], 'family': ['SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PTKANT', 'APPR', 'ART', 'NN', 'PPER', 'VMFIN', 'ADV', 'APPRART', 'ADV', 'VVFIN', 'PPER', 'ADV', 'NN', 'ADV', 'PTKVZ', 'ADV', 'VAFIN', 'PPER', 'APPRART', 'NN', 'ADV', 'ADV'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 23), 'span': (5, 23), 'left siblings': ['SU'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP irgendwann ja in der woche wir konnen ja am vielleicht fahren wir einfach montag schon los dann sind wir vorm wochenende wieder zuruck)

Sentence 645:
8 Initial errors
0 on fringe, 6 iterations
2 Error:Single Word Phrase
2 Error:NP Attachment
1 Error:Clause Attachment
1 Error:Unary
1 Error:UNSET remove
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ach)
			(SIMPX ich finde mit dem zug konnen wir auch fahren)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF so weit)
				(LK ist)
				(MF das ja nicht bis hannover))[01;31m)[00m
		[01;31m(SU[00m [01;33m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF da)
				(LK fahren)
				[01;31m(MF[00m
					(NX wir)
					(PX mit dem zug) [01;33mSIMPX)[00m
					[01;36m(DM[00m [01;31m(ADVX[00m
						(ADV ja)[01;31m)[00m[01;36m)[00m
					(NX nur zwei drei stunden)[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Single Word Phrase
{'family': ['NX', 'PX', 'DM', 'NX'], 'auto preterminal span': (24, 25), 'span': (24, 25), 'subtrees': ['ADV'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'DM')}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ach)
			(SIMPX ich finde mit dem zug konnen wir auch fahren)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF so weit)
				(LK ist)
				(MF das ja nicht bis hannover))[01;31m)[00m
		[01;31m(SU[00m [01;33m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF da)
				(LK fahren)
				[01;31m(MF[00m
					(NX wir)
					(PX mit dem zug) [01;33mSIMPX)[00m
					(DM ja)
					(NX nur zwei drei stunden)[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:NP Attachment
{'new_parent': 'SU', 'new_family': ['SIMPX', 'DM', 'NX'], 'mover info': [('DM', (24, 25)), ('NX', (25, 29))], 'old_family': ['NX', 'PX', 'DM', 'NX'], 'start left siblings': ['NX', 'PX'], 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'APPR', 'ART', 'NN', 'ADV', 'ADV', 'CARD', 'CARD', 'NN'), 'start right siblings': [], 'end left siblings': ['SIMPX'], 'auto preterminal span': (18, 29), 'movers': ['DM', 'NX'], 'old_parent': 'MF', 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ach)
			(SIMPX ich finde mit dem zug konnen wir auch fahren)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF so weit)
				(LK ist)
				(MF das ja nicht bis hannover))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF da)
				(LK fahren)
				[01;31m(MF[00m
					(NX wir)
					(PX mit dem zug)[01;31m)[00m)
			(DM ja)
			(NX nur zwei drei stunden)[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['DM', 'SIMPX'], 'family': ['SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PPER', 'VVFIN', 'APPR', 'ART', 'NN', 'VMFIN', 'PPER', 'ADV', 'VVINF', 'ADV', 'ADJD', 'VAFIN', 'PDS', 'ADV', 'PTKNEG', 'APPR', 'NE', 'ADV', 'VVFIN', 'PPER', 'APPR', 'ART', 'NN', 'ADV', 'ADV', 'CARD', 'CARD', 'NN'), 'right siblings': ['SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 29), 'span': (0, 10), 'left siblings': [], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ach)
		(SIMPX ich finde mit dem zug konnen wir auch fahren)
		[01;31m(SU[00m
			(SIMPX
				(VF so weit)
				(LK ist)
				(MF das ja nicht bis hannover))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF da)
				(LK fahren)
				[01;31m(MF[00m
					(NX wir)
					(PX mit dem zug)[01;31m)[00m)
			(DM ja)
			(NX nur zwei drei stunden)[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['DM', 'SIMPX', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PPER', 'VVFIN', 'APPR', 'ART', 'NN', 'VMFIN', 'PPER', 'ADV', 'VVINF', 'ADV', 'ADJD', 'VAFIN', 'PDS', 'ADV', 'PTKNEG', 'APPR', 'NE', 'ADV', 'VVFIN', 'PPER', 'APPR', 'ART', 'NN', 'ADV', 'ADV', 'CARD', 'CARD', 'NN'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 29), 'span': (10, 18), 'left siblings': ['DM', 'SIMPX'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ach)
		(SIMPX ich finde mit dem zug konnen wir auch fahren)
		(SIMPX so weit ist das ja nicht bis hannover)
		[01;31m(SU[00m
			(SIMPX
				(VF da)
				(LK fahren)
				[01;31m(MF[00m
					(NX wir)
					(PX mit dem zug)[01;31m)[00m)
			(DM ja)
			(NX nur zwei drei stunden)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['SIMPX', 'DM', 'NX'], 'family': ['DM', 'SIMPX', 'SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PPER', 'VVFIN', 'APPR', 'ART', 'NN', 'VMFIN', 'PPER', 'ADV', 'VVINF', 'ADV', 'ADJD', 'VAFIN', 'PDS', 'ADV', 'PTKNEG', 'APPR', 'NE', 'ADV', 'VVFIN', 'PPER', 'APPR', 'ART', 'NN', 'ADV', 'ADV', 'CARD', 'CARD', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 29), 'span': (18, 29), 'left siblings': ['DM', 'SIMPX', 'SIMPX'], 'label': 'SU', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ach)
		(SIMPX ich finde mit dem zug konnen wir auch fahren)
		(SIMPX so weit ist das ja nicht bis hannover)
		(SIMPX
			(VF da)
			(LK fahren)
			[01;31m(MF[00m
				(NX wir)
				(PX mit dem zug)[01;31m)[00m)
		(DM ja)
		(NX nur zwei drei stunden)))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'APPR', 'ART', 'NN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (18, 24), 'span': (20, 24), 'left siblings': ['VF', 'LK'], 'label': 'MF', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP ach ich finde mit dem zug konnen wir auch fahren so weit ist das ja nicht bis hannover da fahren wir mit dem zug ja nur zwei drei stunden)

Sentence 646:
4 Initial errors
0 on fringe, 4 iterations
1 Error:Unary
1 Error:Unary
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU moment ich gucke mal nach)
		[01;31m(SU[00m
			(DM
				(PTKANT ja))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK habe)
				(MF
					[01;36m(MF[00m
						(NX
							(PIS einen))[01;36m)[00m
					(ADVX hier)))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(LK soll)
				(MF ich uns einen zug)
				(VC raussuchen))[01;31m)[00m))
Step:Unary
{'subtrees': ['NX'], 'family': ['MF', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PIS',), 'right siblings': [(ADVX (ADV hier))], 'left siblings': [], 'auto preterminal span': (8, 9), 'span': (8, 9), 'parent': 'MF', 'label': 'MF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU moment ich gucke mal nach)
		[01;31m(SU[00m
			(DM
				(PTKANT ja))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK habe)
				(MF einen hier))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(LK soll)
				(MF ich uns einen zug)
				(VC raussuchen))[01;31m)[00m))
Step:Unary
{'subtrees': ['DM'], 'family': ['SU', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'PPER', 'VVFIN', 'ADV', 'PTKVZ', 'PTKANT', 'PPER', 'VAFIN', 'PIS', 'ADV', 'VMFIN', 'PPER', 'PRF', 'ART', 'NN', 'VVINF'), 'right siblings': ['SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 16), 'span': (5, 6), 'left siblings': ['SU'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU moment ich gucke mal nach)
		(DM ja)
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK habe)
				(MF einen hier))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(LK soll)
				(MF ich uns einen zug)
				(VC raussuchen))[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SU', 'DM', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'PPER', 'VVFIN', 'ADV', 'PTKVZ', 'PTKANT', 'PPER', 'VAFIN', 'PIS', 'ADV', 'VMFIN', 'PPER', 'PRF', 'ART', 'NN', 'VVINF'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 16), 'span': (6, 10), 'left siblings': ['SU', 'DM'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU moment ich gucke mal nach)
		(DM ja)
		(SIMPX ich habe einen hier)
		[01;31m(SU[00m
			(SIMPX
				(LK soll)
				(MF ich uns einen zug)
				(VC raussuchen))[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SU', 'DM', 'SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'PPER', 'VVFIN', 'ADV', 'PTKVZ', 'PTKANT', 'PPER', 'VAFIN', 'PIS', 'ADV', 'VMFIN', 'PPER', 'PRF', 'ART', 'NN', 'VVINF'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 16), 'span': (10, 16), 'left siblings': ['SU', 'DM', 'SIMPX'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP moment ich gucke mal nach ja ich habe einen hier soll ich uns einen zug raussuchen)

Sentence 647:
3 Initial errors
0 on fringe, 2 iterations
2 Error:Single Word Phrase
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU ich mus mal gucken was samstag sonntag fahrt)
		(SU
			(SIMPX
				(VF wann)
				(LK wollen)
				(MF
					(NX sie)
					(ADVX denn)
					[01;36m(ADJX[00m [01;31m(ADVX[00m
						(ADV ungefahr)[01;31m)[00m[01;36m)[00m)
				(VC fahren)))
		[01;31m(SU[00m
			(SIMPX
				(VF mittags)
				(LK reicht)
				(MF eigentlich))[01;31m)[00m))
Step:Single Word Phrase
{'family': ['NX', 'ADVX', 'ADJX'], 'auto preterminal span': (12, 13), 'span': (12, 13), 'subtrees': ['ADV'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'ADJX')}
(TOP
	(TURN
		(SU ich mus mal gucken was samstag sonntag fahrt)
		(SU wann wollen sie denn ungefahr fahren)
		[01;31m(SU[00m
			(SIMPX
				(VF mittags)
				(LK reicht)
				(MF eigentlich))[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VMFIN', 'ADV', 'VVINF', 'PWS', 'NN', 'NN', 'VVFIN', 'PWAV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'VVINF', 'ADV', 'VVFIN', 'ADV'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 17), 'span': (14, 17), 'left siblings': ['SU', 'SU'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ich mus mal gucken was samstag sonntag fahrt wann wollen sie denn ungefahr fahren mittags reicht eigentlich)

Sentence 648:
7 Initial errors
0 on fringe, 4 iterations
2 Error:Different label
2 Error:UNSET move
2 Error:UNSET move
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SU[00m
	(TOP
		(TURN
			[01;36m(SIMPX[00m
				[01;36m(LV[00m [01;31m(SU[00m
					(SIMPX
						(C wenn)
						(MF wir mittags)
						(VC fahren))[01;31m)[00m[01;36m)[00m
				[01;31m(SU[00m
					[01;31m(SIMPX[00m
						(VF da)
						(LK konnten)
						(MF wir den)
						(VC nehmen)
						(NF um zwolf uhr funfundvierzig zum beispiel)[01;31m)[00m[01;31m)[00m[01;36m)[00m
			[01;31m(SU[00m
				(SIMPX
					(VF dann)
					(LK sind)
					(MF wir um sechzehn uhr vier in hannover))[01;31m)[00m))[01;36m)[00m
Step:Different label
{'family': ['LV', 'SU', 'SU'], 'auto preterminal span': (0, 4), 'span': (0, 4), 'subtrees': ['SIMPX'], 'parent': 'TURN', 'over_word': False, 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'VVFIN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('SU', 'LV')}
[01;36m(SU[00m
	(TOP
		(TURN
			[01;36m(SIMPX[00m
				(LV wenn wir mittags fahren)
				[01;31m(SU[00m
					[01;31m(SIMPX[00m
						(VF da)
						(LK konnten)
						(MF wir den)
						(VC nehmen)
						(NF um zwolf uhr funfundvierzig zum beispiel)[01;31m)[00m[01;31m)[00m[01;36m)[00m
			[01;31m(SU[00m
				(SIMPX
					(VF dann)
					(LK sind)
					(MF wir um sechzehn uhr vier in hannover))[01;31m)[00m))[01;36m)[00m
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['LV', 'VF', 'LK', 'MF', 'VC', 'NF'], 'mover info': [('LV', (0, 4))], 'old_family': ['LV', 'SU', 'SU'], 'start left siblings': [], 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'VVFIN', 'ADV', 'VMFIN', 'PPER', 'PDS', 'VVINF', 'APPR', 'CARD', 'NN', 'CARD', 'APPRART', 'NN', 'ADV', 'VAFIN', 'PPER', 'APPR', 'CARD', 'NN', 'CARD', 'APPR', 'NE'), 'start right siblings': ['SU', 'SU'], 'end left siblings': [], 'auto preterminal span': (0, 24), 'movers': ['LV'], 'old_parent': 'TURN', 'end right siblings': ['VF', 'LK', 'MF', 'VC', 'NF'], 'classified_type': 'UNSET move', 'type': 'move'}
[01;36m(SU[00m
	(TOP
		(TURN
			[01;31m(SU[00m
				(SIMPX
					(LV wenn wir mittags fahren)
					(VF da)
					(LK konnten)
					(MF wir den)
					(VC nehmen)
					(NF um zwolf uhr funfundvierzig zum beispiel))[01;31m)[00m
			[01;31m(SU[00m
				(SIMPX
					(VF dann)
					(LK sind)
					(MF wir um sechzehn uhr vier in hannover))[01;31m)[00m))[01;36m)[00m
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SU', 'SIMPX'], 'mover info': [('SU', (0, 15))], 'old_family': ['SU', 'SU'], 'start left siblings': [], 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'VVFIN', 'ADV', 'VMFIN', 'PPER', 'PDS', 'VVINF', 'APPR', 'CARD', 'NN', 'CARD', 'APPRART', 'NN', 'ADV', 'VAFIN', 'PPER', 'APPR', 'CARD', 'NN', 'CARD', 'APPR', 'NE'), 'start right siblings': ['SU'], 'end left siblings': [], 'auto preterminal span': (0, 24), 'movers': ['SU'], 'old_parent': 'TURN', 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			[01;31m(SU[00m
				(SIMPX
					(LV wenn wir mittags fahren)
					(VF da)
					(LK konnten)
					(MF wir den)
					(VC nehmen)
					(NF um zwolf uhr funfundvierzig zum beispiel))[01;31m)[00m
			(SIMPX dann sind wir um sechzehn uhr vier in hannover))))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SU', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'VVFIN', 'ADV', 'VMFIN', 'PPER', 'PDS', 'VVINF', 'APPR', 'CARD', 'NN', 'CARD', 'APPRART', 'NN', 'ADV', 'VAFIN', 'PPER', 'APPR', 'CARD', 'NN', 'CARD', 'APPR', 'NE'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 24), 'span': (0, 15), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP wenn wir mittags fahren da konnten wir den nehmen um zwolf uhr funfundvierzig zum beispiel dann sind wir um sechzehn uhr vier in hannover)

Sentence 649:
18 Initial errors
0 on fringe, 6 iterations
9 Error:VP Attachment
2 Error:Single Word Phrase
2 Error:Different label
2 Error:Single Word Phrase
2 Error:Different label
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU ja)
		[01;31m(SU[00m [01;33m(SU[00m
			(DM ja)
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(VF ich)
				(LK kann)
				(MF ja schon mal zwei platze)
				[01;31m(VC[00m
					[01;36m(VC[00m
						(VXINF
							(VVINF reservieren)) [01;33mSIMPX) SU)[00m[01;36m)[00m
					[01;36m(VXFIN[00m [01;36m(LK[00m [01;31m(VXINF[00m [01;33m(SU (SIMPX[00m
						(VVINF lassen)[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				[01;36m(MF[00m [01;31m(VF[00m
					(NX
						(PPER sie))[01;31m)[00m[01;36m)[00m
				[01;36m(VC[00m [01;36m(VXINF[00m [01;31m(LK[00m
					[01;31m(VXFIN[00m
						(VVFIN rauchen)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m
				(SIMPX glaube ich)
				(MF auch nicht)) [01;33mSIMPX)[00m
			(DM frau meurer)[01;31m)[00m)) [01;33mSU)[00m
Step:VP Attachment
{'new_parent': 'SU', 'new_family': ['VXINF', 'SIMPX', 'DM'], 'mover info': [('VXINF', (10, 11))], 'old_family': ['VXINF', 'VXINF'], 'start left siblings': ['VXINF'], 'auto preterminals': ('PTKANT', 'PTKANT', 'PPER', 'VMFIN', 'ADV', 'ADV', 'ADV', 'CARD', 'NN', 'VVINF', 'VVINF', 'PPER', 'VVFIN', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'NN', 'NE'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 19), 'adding node already present': False, 'movers': ['VXINF'], 'old_parent': 'VC', 'POS confusion': ('VVINF', 'VVINF'), 'added and moved': True, 'end right siblings': ['SIMPX', 'DM'], 'classified_type': 'VP Attachment', 'type': 'move', 'added label': 'VC'}
(TOP
	(TURN
		(SU ja)
		(SU ja ich kann ja schon mal zwei platze reservieren)
		(SU
			(SIMPX
				[01;36m(VXFIN[00m [01;36m(LK[00m [01;31m(VXINF[00m
					(VVINF lassen)[01;31m)[00m[01;36m)[00m[01;36m)[00m
				(SIMPX
					[01;36m(MF[00m [01;31m(VF[00m
						(NX
							(PPER sie))[01;31m)[00m[01;36m)[00m
					[01;36m(VC[00m [01;36m(VXINF[00m [01;31m(LK[00m
						[01;31m(VXFIN[00m
							(VVFIN rauchen)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m
					(SIMPX glaube ich)
					(MF auch nicht)))
			(DM frau meurer))))
Step:Single Word Phrase
{'family': ['LK', 'SIMPX'], 'auto preterminal span': (10, 11), 'span': (10, 11), 'subtrees': ['VVINF'], 'parent': 'SIMPX', 'over_word': True, 'auto preterminals': ('VVINF',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VXINF', 'LK')}
(TOP
	(TURN
		(SU ja)
		(SU ja ich kann ja schon mal zwei platze reservieren)
		(SU
			(SIMPX
				[01;36m(VXFIN[00m
					(LK
						(VVINF lassen))[01;36m)[00m
				(SIMPX
					[01;36m(MF[00m [01;31m(VF[00m
						(NX
							(PPER sie))[01;31m)[00m[01;36m)[00m
					[01;36m(VC[00m [01;36m(VXINF[00m [01;31m(LK[00m
						[01;31m(VXFIN[00m
							(VVFIN rauchen)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m
					(SIMPX glaube ich)
					(MF auch nicht)))
			(DM frau meurer))))
Step:Different label
{'family': ['MF', 'LK', 'SIMPX', 'MF'], 'auto preterminal span': (11, 12), 'span': (11, 12), 'subtrees': ['NX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('PPER',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('VF', 'MF')}
(TOP
	(TURN
		(SU ja)
		(SU ja ich kann ja schon mal zwei platze reservieren)
		(SU
			(SIMPX
				[01;36m(VXFIN[00m
					(LK
						(VVINF lassen))[01;36m)[00m
				(SIMPX
					(MF sie)
					[01;36m(VC[00m [01;36m(VXINF[00m [01;31m(LK[00m
						[01;31m(VXFIN[00m
							(VVFIN rauchen)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m
					(SIMPX glaube ich)
					(MF auch nicht)))
			(DM frau meurer))))
Step:Single Word Phrase
{'family': ['VXINF'], 'auto preterminal span': (12, 13), 'span': (12, 13), 'subtrees': ['VVFIN'], 'parent': 'LK', 'over_word': True, 'auto preterminals': ('VVFIN',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VXFIN', 'VXINF')}
(TOP
	(TURN
		(SU ja)
		(SU ja ich kann ja schon mal zwei platze reservieren)
		(SU
			(SIMPX
				[01;36m(VXFIN[00m
					(LK
						(VVINF lassen))[01;36m)[00m
				(SIMPX
					(MF sie)
					[01;36m(VC[00m [01;31m(LK[00m
						(VXINF
							(VVFIN rauchen))[01;31m)[00m[01;36m)[00m
					(SIMPX glaube ich)
					(MF auch nicht)))
			(DM frau meurer))))
Step:Different label
{'family': ['MF', 'VC', 'SIMPX', 'MF'], 'auto preterminal span': (12, 13), 'span': (12, 13), 'subtrees': ['VXINF'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('VVFIN',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('LK', 'VC')}
(TOP
	(TURN
		(SU ja)
		(SU ja ich kann ja schon mal zwei platze reservieren)
		(SU
			(SIMPX
				[01;36m(VXFIN[00m
					(LK
						(VVINF lassen))[01;36m)[00m
				(SIMPX sie rauchen glaube ich auch nicht))
			(DM frau meurer))))
Step:Unary
{'subtrees': ['LK'], 'family': ['VXFIN', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVINF',), 'right siblings': [(SIMPX (MF (NX (PPER sie))) (VC (VXINF (VVFIN rauchen))) (SIMPX (LK (VXFIN (VVFIN glaube))) (MF (NX (PPER ich)))) (MF (ADVX (ADV auch)) (ADVX (PTKNEG nicht))))], 'left siblings': [], 'auto preterminal span': (10, 11), 'span': (10, 11), 'parent': 'SIMPX', 'label': 'VXFIN', 'classified_type': 'Unary', 'type': 'add'}
(TOP ja ja ich kann ja schon mal zwei platze reservieren lassen sie rauchen glaube ich auch nicht frau meurer)

Sentence 650:
3 Initial errors
0 on fringe, 2 iterations
2 Error:UNSET move
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SU[00m
	(TOP
		(TURN
			[01;31m(SU[00m
				(DM
					(PTKANT ja))[01;31m)[00m
			[01;31m(SU[00m
				(DM
					(ITJ gut))[01;31m)[00m))[01;36m)[00m
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SU', 'DM'], 'mover info': [('SU', (0, 1))], 'old_family': ['SU', 'SU'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'ITJ'), 'start right siblings': ['SU'], 'end left siblings': [], 'auto preterminal span': (0, 2), 'movers': ['SU'], 'old_parent': 'TURN', 'POS confusion': ('PTKANT', 'PTKANT'), 'end right siblings': ['DM'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			[01;31m(SU[00m
				(DM
					(PTKANT ja))[01;31m)[00m
			(DM gut))))
Step:Unary
{'subtrees': ['DM'], 'family': ['SU', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ'), 'right siblings': ['DM'], 'parent': 'SU', 'auto preterminal span': (0, 2), 'span': (0, 1), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja gut)

Sentence 651:
14 Initial errors
0 on fringe, 12 iterations
2 Error:Different label
2 Error:Co-ordination
1 Error:Single Word Phrase
1 Error:Clause Attachment
1 Error:Unary
1 Error:Unary
1 Error:Unary
1 Error:Clause Attachment
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:UNSET add
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			[01;36m(SIMPX[00m
				[01;31m(SIMPX[00m
					(VF ich)
					(LK kann)
					(MF ja mal im reiseburo)
					(VC anrufen)[01;31m)[00m
				[01;36m(PX[00m
					[01;36m(NF[00m
						[01;36m(KOORD[00m
							(KON oder)[01;36m)[00m
						(APPRART im)
						(SIMPX
							(VF wir)
							(LK mussen)
							(MF uns eh noch)
							(VC uberlegen)
							(NF
								(SIMPX
									[01;36m(R[00m [01;36m(NF[00m [01;31m(SIMPX[00m
										(C wo)
										(MF wir)
										(VC schlafen wollen)[01;31m)[00m[01;36m)[00m[01;36m)[00m
									[01;36m(NF[00m
										(SIMPX
											(C ob)
											(MF wir ein hotel)
											(VC nehmen)
											(NF oder pension))[01;36m)[00m)))[01;36m)[00m[01;36m)[00m[01;36m)[00m[01;31m)[00m
		(SU
			(SIMPX
				(VF da)
				(LK kann)
				(MF ich ja mal)
				[01;31m(FKOORD[00m [01;33m(VXINF (VC[00m
					(VC anrufen)
					(KON und)
					[01;31m(VCN[00m
						(VC fragen) [01;33mVC) VXINF)[00m
						(NF ob die ein programm haben fur theater)[01;31m)[00m[01;31m)[00m))))
Step:Different label
{'family': ['NF', 'SIMPX'], 'auto preterminal span': (16, 20), 'span': (16, 20), 'subtrees': ['C', 'MF', 'VC'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('PWAV', 'PPER', 'VVINF', 'VMFIN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('SIMPX', 'NF')}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			[01;36m(SIMPX[00m
				[01;31m(SIMPX[00m
					(VF ich)
					(LK kann)
					(MF ja mal im reiseburo)
					(VC anrufen)[01;31m)[00m
				[01;36m(PX[00m
					[01;36m(NF[00m
						[01;36m(KOORD[00m
							(KON oder)[01;36m)[00m
						(APPRART im)
						(SIMPX
							(VF wir)
							(LK mussen)
							(MF uns eh noch)
							(VC uberlegen)
							(NF
								(SIMPX
									[01;36m(R[00m
										(NF
											(C wo)
											(MF wir)
											(VC schlafen wollen))[01;36m)[00m
									[01;36m(NF[00m
										(SIMPX
											(C ob)
											(MF wir ein hotel)
											(VC nehmen)
											(NF oder pension))[01;36m)[00m)))[01;36m)[00m[01;36m)[00m[01;36m)[00m[01;31m)[00m
		(SU
			(SIMPX
				(VF da)
				(LK kann)
				(MF ich ja mal)
				[01;31m(FKOORD[00m [01;33m(VXINF (VC[00m
					(VC anrufen)
					(KON und)
					[01;31m(VCN[00m
						(VC fragen) [01;33mVC) VXINF)[00m
						(NF ob die ein programm haben fur theater)[01;31m)[00m[01;31m)[00m))))
Step:Co-ordination
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'VC', 'KON', 'APPRART', 'SIMPX'], 'mover info': [('KON', (8, 9)), ('APPRART', (9, 10)), ('SIMPX', (10, 27))], 'old_family': ['DM', 'SIMPX', 'KON', 'APPRART', 'SIMPX'], 'start left siblings': ['DM', 'SIMPX'], 'auto preterminals': ('PTKANT', 'PPER', 'VMFIN', 'ADV', 'ADV', 'APPRART', 'NN', 'VVINF', 'KON', 'APPRART', 'PPER', 'VMFIN', 'PRF', 'ADV', 'ADV', 'VVINF', 'PWAV', 'PPER', 'VVINF', 'VMFIN', 'KOUS', 'PPER', 'ART', 'NN', 'VVFIN', 'KON', 'NN'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'MF', 'VC'], 'auto preterminal span': (0, 27), 'movers': ['KON', 'APPRART', 'SIMPX'], 'old_parent': 'SU', 'end right siblings': [], 'classified_type': 'Co-ordination', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			(SIMPX
				(VF ich)
				(LK kann)
				(MF ja mal im reiseburo)
				(VC anrufen)
				[01;36m(PX[00m
					[01;36m(NF[00m
						[01;36m(KOORD[00m
							(KON oder)[01;36m)[00m
						(APPRART im)
						(SIMPX
							(VF wir)
							(LK mussen)
							(MF uns eh noch)
							(VC uberlegen)
							(NF
								(SIMPX
									[01;36m(R[00m
										(NF
											(C wo)
											(MF wir)
											(VC schlafen wollen))[01;36m)[00m
									[01;36m(NF[00m
										(SIMPX
											(C ob)
											(MF wir ein hotel)
											(VC nehmen)
											(NF oder pension))[01;36m)[00m)))[01;36m)[00m[01;36m)[00m)[01;31m)[00m
		(SU
			(SIMPX
				(VF da)
				(LK kann)
				(MF ich ja mal)
				[01;31m(FKOORD[00m [01;33m(VXINF (VC[00m
					(VC anrufen)
					(KON und)
					[01;31m(VCN[00m
						(VC fragen) [01;33mVC) VXINF)[00m
						(NF ob die ein programm haben fur theater)[01;31m)[00m[01;31m)[00m))))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['VF', 'LK', 'MF', 'VC', 'KOORD', 'APPRART', 'SIMPX'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON',), 'right siblings': [(APPRART im), (SIMPX (VF (NX (PPER wir))) (LK (VXFIN (VMFIN mussen))) (MF (NX (PRF uns)) (ADVX (ADV eh)) (ADVX (ADV noch))) (VC (VXINF (VVINF uberlegen))) (NF (SIMPX (NF (C (PX (PWAV wo))) (MF (NX (PPER wir))) (VC (VXINF (VVINF schlafen)) (VXFIN (VMFIN wollen)))) (SIMPX (C (KOUS ob)) (MF (NX (PPER wir)) (NX (ART ein) (NN hotel))) (VC (VXFIN (VVFIN nehmen))) (NF (NX (KON oder) (NX (NN pension))))))))], 'left siblings': [(VF (NX (PPER ich))), (LK (VXFIN (VMFIN kann))), (MF (ADVX (ADV ja)) (ADVX (ADV mal)) (PX (APPRART im) (NX (NN reiseburo)))), (VC (VXINF (VVINF anrufen)))], 'auto preterminal span': (8, 9), 'span': (8, 9), 'parent': 'SIMPX', 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			(SIMPX
				(VF ich)
				(LK kann)
				(MF ja mal im reiseburo)
				(VC anrufen)
				[01;36m(PX[00m
					[01;36m(NF[00m
						(KOORD oder)
						(APPRART im)
						(SIMPX
							(VF wir)
							(LK mussen)
							(MF uns eh noch)
							(VC uberlegen)
							(NF
								(SIMPX
									[01;36m(R[00m
										(NF
											(C wo)
											(MF wir)
											(VC schlafen wollen))[01;36m)[00m
									[01;36m(NF[00m
										(SIMPX
											(C ob)
											(MF wir ein hotel)
											(VC nehmen)
											(NF oder pension))[01;36m)[00m)))[01;36m)[00m[01;36m)[00m)[01;31m)[00m
		(SU
			(SIMPX
				(VF da)
				(LK kann)
				(MF ich ja mal)
				[01;31m(FKOORD[00m [01;33m(VXINF (VC[00m
					(VC anrufen)
					(KON und)
					[01;31m(VCN[00m
						(VC fragen) [01;33mVC) VXINF)[00m
						(NF ob die ein programm haben fur theater)[01;31m)[00m[01;31m)[00m))))
Step:Clause Attachment
{'subtrees': ['KOORD', 'APPRART', 'SIMPX'], 'family': ['VF', 'LK', 'MF', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'APPRART', 'PPER', 'VMFIN', 'PRF', 'ADV', 'ADV', 'VVINF', 'PWAV', 'PPER', 'VVINF', 'VMFIN', 'KOUS', 'PPER', 'ART', 'NN', 'VVFIN', 'KON', 'NN'), 'right siblings': [], 'left siblings': [(VF (NX (PPER ich))), (LK (VXFIN (VMFIN kann))), (MF (ADVX (ADV ja)) (ADVX (ADV mal)) (PX (APPRART im) (NX (NN reiseburo)))), (VC (VXINF (VVINF anrufen)))], 'auto preterminal span': (8, 27), 'span': (8, 27), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			(SIMPX
				(VF ich)
				(LK kann)
				(MF ja mal im reiseburo)
				(VC anrufen)
				[01;36m(PX[00m
					(NF
						(KOORD oder)
						(APPRART im)
						(SIMPX
							(VF wir)
							(LK mussen)
							(MF uns eh noch)
							(VC uberlegen)
							(NF
								(SIMPX
									[01;36m(R[00m
										(NF
											(C wo)
											(MF wir)
											(VC schlafen wollen))[01;36m)[00m
									[01;36m(NF[00m
										(SIMPX
											(C ob)
											(MF wir ein hotel)
											(VC nehmen)
											(NF oder pension))[01;36m)[00m))))[01;36m)[00m)[01;31m)[00m
		(SU
			(SIMPX
				(VF da)
				(LK kann)
				(MF ich ja mal)
				[01;31m(FKOORD[00m [01;33m(VXINF (VC[00m
					(VC anrufen)
					(KON und)
					[01;31m(VCN[00m
						(VC fragen) [01;33mVC) VXINF)[00m
						(NF ob die ein programm haben fur theater)[01;31m)[00m[01;31m)[00m))))
Step:Unary
{'subtrees': ['NF'], 'family': ['VF', 'LK', 'MF', 'VC', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'APPRART', 'PPER', 'VMFIN', 'PRF', 'ADV', 'ADV', 'VVINF', 'PWAV', 'PPER', 'VVINF', 'VMFIN', 'KOUS', 'PPER', 'ART', 'NN', 'VVFIN', 'KON', 'NN'), 'right siblings': [], 'left siblings': [(VF (NX (PPER ich))), (LK (VXFIN (VMFIN kann))), (MF (ADVX (ADV ja)) (ADVX (ADV mal)) (PX (APPRART im) (NX (NN reiseburo)))), (VC (VXINF (VVINF anrufen)))], 'auto preterminal span': (8, 27), 'span': (8, 27), 'parent': 'SIMPX', 'label': 'PX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			(SIMPX
				(VF ich)
				(LK kann)
				(MF ja mal im reiseburo)
				(VC anrufen)
				(PX
					(NF
						(KOORD oder)
						(APPRART im)
						(SIMPX
							(VF wir)
							(LK mussen)
							(MF uns eh noch)
							(VC uberlegen)
							(NF
								(SIMPX
									[01;36m(R[00m
										(NF
											(C wo)
											(MF wir)
											(VC schlafen wollen))[01;36m)[00m
									[01;36m(NF[00m
										(SIMPX
											(C ob)
											(MF wir ein hotel)
											(VC nehmen)
											(NF oder pension))[01;36m)[00m))))))[01;31m)[00m
		(SU
			(SIMPX
				(VF da)
				(LK kann)
				(MF ich ja mal)
				[01;31m(FKOORD[00m [01;33m(VXINF (VC[00m
					(VC anrufen)
					(KON und)
					[01;31m(VCN[00m
						(VC fragen) [01;33mVC) VXINF)[00m
						(NF ob die ein programm haben fur theater)[01;31m)[00m[01;31m)[00m))))
Step:Unary
{'subtrees': ['NF'], 'family': ['R', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PWAV', 'PPER', 'VVINF', 'VMFIN'), 'right siblings': [(SIMPX (C (KOUS ob)) (MF (NX (PPER wir)) (NX (ART ein) (NN hotel))) (VC (VXFIN (VVFIN nehmen))) (NF (NX (KON oder) (NX (NN pension)))))], 'left siblings': [], 'auto preterminal span': (16, 20), 'span': (16, 20), 'parent': 'SIMPX', 'label': 'R', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			(SIMPX
				(VF ich)
				(LK kann)
				(MF ja mal im reiseburo)
				(VC anrufen)
				(PX
					(NF
						(KOORD oder)
						(APPRART im)
						(SIMPX
							(VF wir)
							(LK mussen)
							(MF uns eh noch)
							(VC uberlegen)
							(NF
								(SIMPX
									(R wo wir schlafen wollen)
									[01;36m(NF[00m
										(SIMPX
											(C ob)
											(MF wir ein hotel)
											(VC nehmen)
											(NF oder pension))[01;36m)[00m))))))[01;31m)[00m
		(SU
			(SIMPX
				(VF da)
				(LK kann)
				(MF ich ja mal)
				[01;31m(FKOORD[00m [01;33m(VXINF (VC[00m
					(VC anrufen)
					(KON und)
					[01;31m(VCN[00m
						(VC fragen) [01;33mVC) VXINF)[00m
						(NF ob die ein programm haben fur theater)[01;31m)[00m[01;31m)[00m))))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['R', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ART', 'NN', 'VVFIN', 'KON', 'NN'), 'right siblings': [], 'left siblings': [(R (NF (C (PX (PWAV wo))) (MF (NX (PPER wir))) (VC (VXINF (VVINF schlafen)) (VXFIN (VMFIN wollen)))))], 'auto preterminal span': (20, 27), 'span': (20, 27), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			(SIMPX ich kann ja mal im reiseburo anrufen oder im wir mussen uns eh noch uberlegen wo wir schlafen wollen ob wir ein hotel nehmen oder pension)[01;31m)[00m
		(SU
			(SIMPX
				(VF da)
				(LK kann)
				(MF ich ja mal)
				[01;31m(FKOORD[00m [01;33m(VXINF (VC[00m
					(VC anrufen)
					(KON und)
					[01;31m(VCN[00m
						(VC fragen) [01;33mVC) VXINF)[00m
						(NF ob die ein programm haben fur theater)[01;31m)[00m[01;31m)[00m))))
Step:Clause Attachment
{'subtrees': ['DM', 'SIMPX'], 'family': ['SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VMFIN', 'ADV', 'ADV', 'APPRART', 'NN', 'VVINF', 'KON', 'APPRART', 'PPER', 'VMFIN', 'PRF', 'ADV', 'ADV', 'VVINF', 'PWAV', 'PPER', 'VVINF', 'VMFIN', 'KOUS', 'PPER', 'ART', 'NN', 'VVFIN', 'KON', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'VVINF', 'KON', 'VVINF', 'KOUS', 'PDS', 'ART', 'NN', 'VAFIN', 'APPR', 'NN'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 42), 'span': (0, 27), 'left siblings': [], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich kann ja mal im reiseburo anrufen oder im wir mussen uns eh noch uberlegen wo wir schlafen wollen ob wir ein hotel nehmen oder pension)
		(SU
			(SIMPX
				(VF da)
				(LK kann)
				(MF ich ja mal)
				[01;31m(FKOORD[00m [01;33m(VXINF (VC[00m
					(VC anrufen)
					(KON und)
					[01;31m(VCN[00m
						(VC fragen) [01;33mVC) VXINF)[00m
						(NF ob die ein programm haben fur theater)[01;31m)[00m[01;31m)[00m))))
Step:UNSET remove
{'subtrees': ['VC', 'KON', 'VCN'], 'family': ['VF', 'LK', 'MF', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'VVINF', 'KON', 'VVINF', 'KOUS', 'PDS', 'ART', 'NN', 'VAFIN', 'APPR', 'NN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (27, 42), 'span': (32, 42), 'left siblings': ['VF', 'LK', 'MF'], 'label': 'FKOORD', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich kann ja mal im reiseburo anrufen oder im wir mussen uns eh noch uberlegen wo wir schlafen wollen ob wir ein hotel nehmen oder pension)
		(SU
			(SIMPX
				(VF da)
				(LK kann)
				(MF ich ja mal)
				[01;33m(VXINF (VC[00m (VC anrufen)
				(KON und)
				[01;31m(VCN[00m
					(VC fragen) [01;33mVC) VXINF)[00m
					(NF ob die ein programm haben fur theater)[01;31m)[00m))))
Step:UNSET remove
{'subtrees': ['VC', 'NF'], 'family': ['VF', 'LK', 'MF', 'VC', 'KON', 'VCN'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'VVINF', 'KON', 'VVINF', 'KOUS', 'PDS', 'ART', 'NN', 'VAFIN', 'APPR', 'NN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (27, 42), 'span': (34, 42), 'left siblings': ['VF', 'LK', 'MF', 'VC', 'KON'], 'label': 'VCN', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich kann ja mal im reiseburo anrufen oder im wir mussen uns eh noch uberlegen wo wir schlafen wollen ob wir ein hotel nehmen oder pension)
		(SU
			(SIMPX
				(VF da)
				(LK kann)
				(MF ich ja mal)
				[01;36m(VC[00m
					[01;36m(VXINF[00m
						(VC anrufen)
						(KON und)
						(VC fragen)[01;36m)[00m[01;36m)[00m
				(NF ob die ein programm haben fur theater)))))
Step:UNSET add
{'subtrees': ['VC', 'KON', 'VC'], 'family': ['VF', 'LK', 'MF', 'VXINF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVINF', 'KON', 'VVINF'), 'right siblings': [(NF (SIMPX (C (KOUS ob)) (MF (NX (PDS die)) (NX (ART ein) (NN programm))) (VC (VXFIN (VAFIN haben))) (NF (PX (APPR fur) (NX (NN theater))))))], 'left siblings': [(VF (ADVX (ADV da))), (LK (VXFIN (VMFIN kann))), (MF (NX (PPER ich)) (ADVX (ADV ja)) (ADVX (ADV mal)))], 'auto preterminal span': (32, 35), 'span': (32, 35), 'parent': 'SIMPX', 'label': 'VXINF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich kann ja mal im reiseburo anrufen oder im wir mussen uns eh noch uberlegen wo wir schlafen wollen ob wir ein hotel nehmen oder pension)
		(SU
			(SIMPX
				(VF da)
				(LK kann)
				(MF ich ja mal)
				[01;36m(VC[00m
					(VXINF
						(VC anrufen)
						(KON und)
						(VC fragen))[01;36m)[00m
				(NF ob die ein programm haben fur theater)))))
Step:Unary
{'subtrees': ['VXINF'], 'family': ['VF', 'LK', 'MF', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVINF', 'KON', 'VVINF'), 'right siblings': [(NF (SIMPX (C (KOUS ob)) (MF (NX (PDS die)) (NX (ART ein) (NN programm))) (VC (VXFIN (VAFIN haben))) (NF (PX (APPR fur) (NX (NN theater))))))], 'left siblings': [(VF (ADVX (ADV da))), (LK (VXFIN (VMFIN kann))), (MF (NX (PPER ich)) (ADVX (ADV ja)) (ADVX (ADV mal)))], 'auto preterminal span': (32, 35), 'span': (32, 35), 'parent': 'SIMPX', 'label': 'VC', 'classified_type': 'Unary', 'type': 'add'}
(TOP ja ich kann ja mal im reiseburo anrufen oder im wir mussen uns eh noch uberlegen wo wir schlafen wollen ob wir ein hotel nehmen oder pension da kann ich ja mal anrufen und fragen ob die ein programm haben fur theater)

Sentence 652:
16 Initial errors
0 on fringe, 14 iterations
3 Error:Clause Attachment
1 Error:PP Attachment
1 Error:UNSET remove
1 Error:Clause Attachment
1 Error:Unary
1 Error:Unary
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:Unary
1 Error:Modifier Attachment
1 Error:Co-ordination
1 Error:UNSET remove
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK meinen)
				[01;31m(MF[00m
					(NX
						(PPER sie))[01;31m)[00m
				[01;31m(NF[00m
					(SIMPX
						(VF die)
						(LK wissen)
						(MF das bei der bahn))[01;31m)[00m[01;31m)[00m
			(SIMPX wenn ich da)
			(SIMPX oder ich gehe ins reiseburo)
			(SIMPX und da kann ich ja auch bahntickets kaufen)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF dann)
				(LK frage)
				(MF
					(NX ich)
					(ADVX da)
					[01;36m(PX[00m
						(ADVX gleich)
						(PX wegen der hotelbuchung)[01;36m)[00m)[01;31m)[00m[01;31m)[00m
		[01;36m(SIMPX[00m [01;36m(NF[00m [01;31m(SU[00m
			[01;31m(SIMPX[00m
				(C das)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX die)
					(NX mir)
					(ADVX da)[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				(C das)
				[01;31m(FKOORD[00m
					[01;31m(MVCN[00m
						(MF die da) [01;33mMF)[00m
						(VC anrufen)
						(NF vielleicht)[01;31m)[00m
					(KON und)
					(MVCN zwei zimmer reservieren fur eine termine)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m))
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['SIMPX', 'C', 'FKOORD'], 'mover info': [('SIMPX', (33, 37))], 'old_family': ['SIMPX', 'SIMPX'], 'start left siblings': [], 'auto preterminals': ('KOUS', 'PDS', 'PPER', 'ADV', 'KOUS', 'PDS', 'ADV', 'VVFIN', 'ADV', 'KON', 'CARD', 'NN', 'VVFIN', 'APPR', 'ART', 'NN'), 'start right siblings': ['SIMPX'], 'end left siblings': [], 'auto preterminal span': (33, 49), 'adding node already present': False, 'movers': ['SIMPX'], 'old_parent': 'SU', 'added and moved': True, 'end right siblings': ['C', 'FKOORD'], 'classified_type': 'Clause Attachment', 'type': 'move', 'added label': 'NF'}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK meinen)
				[01;31m(MF[00m
					(NX
						(PPER sie))[01;31m)[00m
				[01;31m(NF[00m
					(SIMPX
						(VF die)
						(LK wissen)
						(MF das bei der bahn))[01;31m)[00m[01;31m)[00m
			(SIMPX wenn ich da)
			(SIMPX oder ich gehe ins reiseburo)
			(SIMPX und da kann ich ja auch bahntickets kaufen)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF dann)
				(LK frage)
				(MF
					(NX ich)
					(ADVX da)
					[01;36m(PX[00m
						(ADVX gleich)
						(PX wegen der hotelbuchung)[01;36m)[00m)[01;31m)[00m[01;31m)[00m
		(NF
			[01;31m(SU[00m
				(SIMPX
					[01;31m(SIMPX[00m
						(C das)
						[01;31m(MF[00m [01;33m(MF[00m
							(NX die)
							(NX mir)
							(ADVX da)[01;31m)[00m[01;31m)[00m
					(C das)
					[01;31m(FKOORD[00m
						[01;31m(MVCN[00m
							(MF die da) [01;33mMF)[00m
							(VC anrufen)
							(NF vielleicht)[01;31m)[00m
						(KON und)
						(MVCN zwei zimmer reservieren fur eine termine)[01;31m)[00m)[01;31m)[00m)))
Step:PP Attachment
{'subtrees': ['ADVX', 'PX'], 'family': ['NX', 'ADVX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'APPR', 'ART', 'NN'), 'right siblings': [], 'left siblings': [(NX (PPER ich)), (ADVX (ADV da))], 'auto preterminal span': (29, 33), 'span': (29, 33), 'parent': 'MF', 'label': 'PX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK meinen)
				[01;31m(MF[00m
					(NX
						(PPER sie))[01;31m)[00m
				[01;31m(NF[00m
					(SIMPX
						(VF die)
						(LK wissen)
						(MF das bei der bahn))[01;31m)[00m[01;31m)[00m
			(SIMPX wenn ich da)
			(SIMPX oder ich gehe ins reiseburo)
			(SIMPX und da kann ich ja auch bahntickets kaufen)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF dann)
				(LK frage)
				(MF ich da gleich wegen der hotelbuchung)[01;31m)[00m[01;31m)[00m
		(NF
			[01;31m(SU[00m
				(SIMPX
					[01;31m(SIMPX[00m
						(C das)
						[01;31m(MF[00m [01;33m(MF[00m
							(NX die)
							(NX mir)
							(ADVX da)[01;31m)[00m[01;31m)[00m
					(C das)
					[01;31m(FKOORD[00m
						[01;31m(MVCN[00m
							(MF die da) [01;33mMF)[00m
							(VC anrufen)
							(NF vielleicht)[01;31m)[00m
						(KON und)
						(MVCN zwei zimmer reservieren fur eine termine)[01;31m)[00m)[01;31m)[00m)))
Step:UNSET remove
{'subtrees': ['LK', 'MF', 'NF'], 'family': ['SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'PDS', 'VVFIN', 'PDS', 'APPR', 'ART', 'NN', 'KOUS', 'PPER', 'ADV', 'KON', 'PPER', 'VVFIN', 'APPRART', 'NN', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'NN', 'VVINF'), 'right siblings': ['SIMPX', 'SIMPX', 'SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 24), 'span': (0, 8), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		[01;31m(SU[00m
			(LK meinen)
			[01;31m(MF[00m
				(NX
					(PPER sie))[01;31m)[00m
			[01;31m(NF[00m
				(SIMPX
					(VF die)
					(LK wissen)
					(MF das bei der bahn))[01;31m)[00m
			(SIMPX wenn ich da)
			(SIMPX oder ich gehe ins reiseburo)
			(SIMPX und da kann ich ja auch bahntickets kaufen)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF dann)
				(LK frage)
				(MF ich da gleich wegen der hotelbuchung)[01;31m)[00m[01;31m)[00m
		(NF
			[01;31m(SU[00m
				(SIMPX
					[01;31m(SIMPX[00m
						(C das)
						[01;31m(MF[00m [01;33m(MF[00m
							(NX die)
							(NX mir)
							(ADVX da)[01;31m)[00m[01;31m)[00m
					(C das)
					[01;31m(FKOORD[00m
						[01;31m(MVCN[00m
							(MF die da) [01;33mMF)[00m
							(VC anrufen)
							(NF vielleicht)[01;31m)[00m
						(KON und)
						(MVCN zwei zimmer reservieren fur eine termine)[01;31m)[00m)[01;31m)[00m)))
Step:Clause Attachment
{'subtrees': ['LK', 'MF', 'NF', 'SIMPX', 'SIMPX', 'SIMPX'], 'family': ['SU', 'SU', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'PDS', 'VVFIN', 'PDS', 'APPR', 'ART', 'NN', 'KOUS', 'PPER', 'ADV', 'KON', 'PPER', 'VVFIN', 'APPRART', 'NN', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'NN', 'VVINF', 'KON', 'ADV', 'VVFIN', 'PPER', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'KOUS', 'PDS', 'PPER', 'ADV', 'KOUS', 'PDS', 'ADV', 'VVFIN', 'ADV', 'KON', 'CARD', 'NN', 'VVFIN', 'APPR', 'ART', 'NN'), 'right siblings': ['SU', 'NF'], 'parent': 'TURN', 'auto preterminal span': (0, 49), 'span': (0, 24), 'left siblings': [], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(LK meinen)
		[01;31m(MF[00m
			(NX
				(PPER sie))[01;31m)[00m
		[01;31m(NF[00m
			(SIMPX
				(VF die)
				(LK wissen)
				(MF das bei der bahn))[01;31m)[00m
		(SIMPX wenn ich da)
		(SIMPX oder ich gehe ins reiseburo)
		(SIMPX und da kann ich ja auch bahntickets kaufen)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF dann)
				(LK frage)
				(MF ich da gleich wegen der hotelbuchung)[01;31m)[00m[01;31m)[00m
		(NF
			[01;31m(SU[00m
				(SIMPX
					[01;31m(SIMPX[00m
						(C das)
						[01;31m(MF[00m [01;33m(MF[00m
							(NX die)
							(NX mir)
							(ADVX da)[01;31m)[00m[01;31m)[00m
					(C das)
					[01;31m(FKOORD[00m
						[01;31m(MVCN[00m
							(MF die da) [01;33mMF)[00m
							(VC anrufen)
							(NF vielleicht)[01;31m)[00m
						(KON und)
						(MVCN zwei zimmer reservieren fur eine termine)[01;31m)[00m)[01;31m)[00m)))
Step:Unary
{'subtrees': ['NX'], 'family': ['LK', 'MF', 'NF', 'SIMPX', 'SIMPX', 'SIMPX', 'SU', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'PDS', 'VVFIN', 'PDS', 'APPR', 'ART', 'NN', 'KOUS', 'PPER', 'ADV', 'KON', 'PPER', 'VVFIN', 'APPRART', 'NN', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'NN', 'VVINF', 'KON', 'ADV', 'VVFIN', 'PPER', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'KOUS', 'PDS', 'PPER', 'ADV', 'KOUS', 'PDS', 'ADV', 'VVFIN', 'ADV', 'KON', 'CARD', 'NN', 'VVFIN', 'APPR', 'ART', 'NN'), 'right siblings': ['NF', 'SIMPX', 'SIMPX', 'SIMPX', 'SU', 'NF'], 'parent': 'TURN', 'auto preterminal span': (0, 49), 'span': (1, 2), 'left siblings': ['LK'], 'label': 'MF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(LK meinen)
		(NX sie)
		[01;31m(NF[00m
			(SIMPX
				(VF die)
				(LK wissen)
				(MF das bei der bahn))[01;31m)[00m
		(SIMPX wenn ich da)
		(SIMPX oder ich gehe ins reiseburo)
		(SIMPX und da kann ich ja auch bahntickets kaufen)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF dann)
				(LK frage)
				(MF ich da gleich wegen der hotelbuchung)[01;31m)[00m[01;31m)[00m
		(NF
			[01;31m(SU[00m
				(SIMPX
					[01;31m(SIMPX[00m
						(C das)
						[01;31m(MF[00m [01;33m(MF[00m
							(NX die)
							(NX mir)
							(ADVX da)[01;31m)[00m[01;31m)[00m
					(C das)
					[01;31m(FKOORD[00m
						[01;31m(MVCN[00m
							(MF die da) [01;33mMF)[00m
							(VC anrufen)
							(NF vielleicht)[01;31m)[00m
						(KON und)
						(MVCN zwei zimmer reservieren fur eine termine)[01;31m)[00m)[01;31m)[00m)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['LK', 'NX', 'NF', 'SIMPX', 'SIMPX', 'SIMPX', 'SU', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'PDS', 'VVFIN', 'PDS', 'APPR', 'ART', 'NN', 'KOUS', 'PPER', 'ADV', 'KON', 'PPER', 'VVFIN', 'APPRART', 'NN', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'NN', 'VVINF', 'KON', 'ADV', 'VVFIN', 'PPER', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'KOUS', 'PDS', 'PPER', 'ADV', 'KOUS', 'PDS', 'ADV', 'VVFIN', 'ADV', 'KON', 'CARD', 'NN', 'VVFIN', 'APPR', 'ART', 'NN'), 'right siblings': ['SIMPX', 'SIMPX', 'SIMPX', 'SU', 'NF'], 'parent': 'TURN', 'auto preterminal span': (0, 49), 'span': (2, 8), 'left siblings': ['LK', 'NX'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(LK meinen)
		(NX sie)
		(SIMPX die wissen das bei der bahn)
		(SIMPX wenn ich da)
		(SIMPX oder ich gehe ins reiseburo)
		(SIMPX und da kann ich ja auch bahntickets kaufen)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF dann)
				(LK frage)
				(MF ich da gleich wegen der hotelbuchung)[01;31m)[00m[01;31m)[00m
		(NF
			[01;31m(SU[00m
				(SIMPX
					[01;31m(SIMPX[00m
						(C das)
						[01;31m(MF[00m [01;33m(MF[00m
							(NX die)
							(NX mir)
							(ADVX da)[01;31m)[00m[01;31m)[00m
					(C das)
					[01;31m(FKOORD[00m
						[01;31m(MVCN[00m
							(MF die da) [01;33mMF)[00m
							(VC anrufen)
							(NF vielleicht)[01;31m)[00m
						(KON und)
						(MVCN zwei zimmer reservieren fur eine termine)[01;31m)[00m)[01;31m)[00m)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['LK', 'NX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SU', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'PDS', 'VVFIN', 'PDS', 'APPR', 'ART', 'NN', 'KOUS', 'PPER', 'ADV', 'KON', 'PPER', 'VVFIN', 'APPRART', 'NN', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'NN', 'VVINF', 'KON', 'ADV', 'VVFIN', 'PPER', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'KOUS', 'PDS', 'PPER', 'ADV', 'KOUS', 'PDS', 'ADV', 'VVFIN', 'ADV', 'KON', 'CARD', 'NN', 'VVFIN', 'APPR', 'ART', 'NN'), 'right siblings': ['NF'], 'parent': 'TURN', 'auto preterminal span': (0, 49), 'span': (24, 33), 'left siblings': ['LK', 'NX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(LK meinen)
		(NX sie)
		(SIMPX die wissen das bei der bahn)
		(SIMPX wenn ich da)
		(SIMPX oder ich gehe ins reiseburo)
		(SIMPX und da kann ich ja auch bahntickets kaufen)
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF dann)
			(LK frage)
			(MF ich da gleich wegen der hotelbuchung)[01;31m)[00m
		(NF
			[01;31m(SU[00m
				(SIMPX
					[01;31m(SIMPX[00m
						(C das)
						[01;31m(MF[00m [01;33m(MF[00m
							(NX die)
							(NX mir)
							(ADVX da)[01;31m)[00m[01;31m)[00m
					(C das)
					[01;31m(FKOORD[00m
						[01;31m(MVCN[00m
							(MF die da) [01;33mMF)[00m
							(VC anrufen)
							(NF vielleicht)[01;31m)[00m
						(KON und)
						(MVCN zwei zimmer reservieren fur eine termine)[01;31m)[00m)[01;31m)[00m)))
Step:UNSET remove
{'subtrees': ['KOORD', 'VF', 'LK', 'MF'], 'family': ['LK', 'NX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'PDS', 'VVFIN', 'PDS', 'APPR', 'ART', 'NN', 'KOUS', 'PPER', 'ADV', 'KON', 'PPER', 'VVFIN', 'APPRART', 'NN', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'NN', 'VVINF', 'KON', 'ADV', 'VVFIN', 'PPER', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'KOUS', 'PDS', 'PPER', 'ADV', 'KOUS', 'PDS', 'ADV', 'VVFIN', 'ADV', 'KON', 'CARD', 'NN', 'VVFIN', 'APPR', 'ART', 'NN'), 'right siblings': ['NF'], 'parent': 'TURN', 'auto preterminal span': (0, 49), 'span': (24, 33), 'left siblings': ['LK', 'NX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(LK meinen)
		(NX sie)
		(SIMPX die wissen das bei der bahn)
		(SIMPX wenn ich da)
		(SIMPX oder ich gehe ins reiseburo)
		(SIMPX und da kann ich ja auch bahntickets kaufen)
		(KOORD und)
		(VF dann)
		(LK frage)
		(MF ich da gleich wegen der hotelbuchung)
		(NF
			[01;31m(SU[00m
				(SIMPX
					[01;31m(SIMPX[00m
						(C das)
						[01;31m(MF[00m [01;33m(MF[00m
							(NX die)
							(NX mir)
							(ADVX da)[01;31m)[00m[01;31m)[00m
					(C das)
					[01;31m(FKOORD[00m
						[01;31m(MVCN[00m
							(MF die da) [01;33mMF)[00m
							(VC anrufen)
							(NF vielleicht)[01;31m)[00m
						(KON und)
						(MVCN zwei zimmer reservieren fur eine termine)[01;31m)[00m)[01;31m)[00m)))
Step:UNSET remove
{'subtrees': ['C', 'MF'], 'family': ['SIMPX', 'C', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PDS', 'PPER', 'ADV', 'KOUS', 'PDS', 'ADV', 'VVFIN', 'ADV', 'KON', 'CARD', 'NN', 'VVFIN', 'APPR', 'ART', 'NN'), 'right siblings': ['C', 'FKOORD'], 'parent': 'SIMPX', 'auto preterminal span': (33, 49), 'span': (33, 37), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(LK meinen)
		(NX sie)
		(SIMPX die wissen das bei der bahn)
		(SIMPX wenn ich da)
		(SIMPX oder ich gehe ins reiseburo)
		(SIMPX und da kann ich ja auch bahntickets kaufen)
		(KOORD und)
		(VF dann)
		(LK frage)
		(MF ich da gleich wegen der hotelbuchung)
		(NF
			[01;31m(SU[00m
				(SIMPX
					(C das)
					[01;31m(MF[00m [01;33m(MF[00m
						(NX die)
						(NX mir)
						(ADVX da)[01;31m)[00m
					(C das)
					[01;31m(FKOORD[00m
						[01;31m(MVCN[00m
							(MF die da) [01;33mMF)[00m
							(VC anrufen)
							(NF vielleicht)[01;31m)[00m
						(KON und)
						(MVCN zwei zimmer reservieren fur eine termine)[01;31m)[00m)[01;31m)[00m)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PDS', 'PPER', 'ADV', 'KOUS', 'PDS', 'ADV', 'VVFIN', 'ADV', 'KON', 'CARD', 'NN', 'VVFIN', 'APPR', 'ART', 'NN'), 'right siblings': [], 'parent': 'NF', 'auto preterminal span': (33, 49), 'span': (33, 49), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(LK meinen)
		(NX sie)
		(SIMPX die wissen das bei der bahn)
		(SIMPX wenn ich da)
		(SIMPX oder ich gehe ins reiseburo)
		(SIMPX und da kann ich ja auch bahntickets kaufen)
		(KOORD und)
		(VF dann)
		(LK frage)
		(MF ich da gleich wegen der hotelbuchung)
		(NF
			(SIMPX
				(C das)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX die)
					(NX mir)
					(ADVX da)[01;31m)[00m
				(C das)
				[01;31m(FKOORD[00m
					[01;31m(MVCN[00m
						(MF die da) [01;33mMF)[00m
						(VC anrufen)
						(NF vielleicht)[01;31m)[00m
					(KON und)
					(MVCN zwei zimmer reservieren fur eine termine)[01;31m)[00m))))
Step:Modifier Attachment
{'subtrees': ['NX', 'NX', 'ADVX'], 'family': ['C', 'MF', 'C', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PDS', 'PPER', 'ADV', 'KOUS', 'PDS', 'ADV', 'VVFIN', 'ADV', 'KON', 'CARD', 'NN', 'VVFIN', 'APPR', 'ART', 'NN'), 'right siblings': ['C', 'FKOORD'], 'parent': 'SIMPX', 'auto preterminal span': (33, 49), 'span': (34, 37), 'left siblings': ['C'], 'label': 'MF', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(LK meinen)
		(NX sie)
		(SIMPX die wissen das bei der bahn)
		(SIMPX wenn ich da)
		(SIMPX oder ich gehe ins reiseburo)
		(SIMPX und da kann ich ja auch bahntickets kaufen)
		(KOORD und)
		(VF dann)
		(LK frage)
		(MF ich da gleich wegen der hotelbuchung)
		(NF
			(SIMPX
				(C das)
				[01;33m(MF[00m (NX die)
				(NX mir)
				(ADVX da)
				(C das)
				[01;31m(FKOORD[00m
					[01;31m(MVCN[00m
						(MF die da) [01;33mMF)[00m
						(VC anrufen)
						(NF vielleicht)[01;31m)[00m
					(KON und)
					(MVCN zwei zimmer reservieren fur eine termine)[01;31m)[00m))))
Step:Co-ordination
{'subtrees': ['MF', 'VC', 'NF'], 'family': ['MVCN', 'KON', 'MVCN'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'ADV', 'VVFIN', 'ADV', 'KON', 'CARD', 'NN', 'VVFIN', 'APPR', 'ART', 'NN'), 'right siblings': ['KON', 'MVCN'], 'parent': 'FKOORD', 'auto preterminal span': (38, 49), 'span': (38, 42), 'left siblings': [], 'label': 'MVCN', 'classified_type': 'Co-ordination', 'type': 'remove'}
(TOP
	(TURN
		(LK meinen)
		(NX sie)
		(SIMPX die wissen das bei der bahn)
		(SIMPX wenn ich da)
		(SIMPX oder ich gehe ins reiseburo)
		(SIMPX und da kann ich ja auch bahntickets kaufen)
		(KOORD und)
		(VF dann)
		(LK frage)
		(MF ich da gleich wegen der hotelbuchung)
		(NF
			(SIMPX
				(C das)
				[01;33m(MF[00m (NX die)
				(NX mir)
				(ADVX da)
				(C das)
				[01;31m(FKOORD[00m
					(MF die da) [01;33mMF)[00m
					(VC anrufen)
					(NF vielleicht)
					(KON und)
					(MVCN zwei zimmer reservieren fur eine termine)[01;31m)[00m))))
Step:UNSET remove
{'subtrees': ['MF', 'VC', 'NF', 'KON', 'MVCN'], 'family': ['C', 'NX', 'NX', 'ADVX', 'C', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PDS', 'PPER', 'ADV', 'KOUS', 'PDS', 'ADV', 'VVFIN', 'ADV', 'KON', 'CARD', 'NN', 'VVFIN', 'APPR', 'ART', 'NN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (33, 49), 'span': (38, 49), 'left siblings': ['C', 'NX', 'NX', 'ADVX', 'C'], 'label': 'FKOORD', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(LK meinen)
		(NX sie)
		(SIMPX die wissen das bei der bahn)
		(SIMPX wenn ich da)
		(SIMPX oder ich gehe ins reiseburo)
		(SIMPX und da kann ich ja auch bahntickets kaufen)
		(KOORD und)
		(VF dann)
		(LK frage)
		(MF ich da gleich wegen der hotelbuchung)
		(NF
			(SIMPX
				(C das)
				[01;36m(MF[00m
					(NX die)
					(NX mir)
					(ADVX da)
					(C das)
					(MF die da)[01;36m)[00m
				(VC anrufen)
				(NF vielleicht)
				(KON und)
				(MVCN zwei zimmer reservieren fur eine termine)))))
Step:Modifier Attachment
{'subtrees': ['NX', 'NX', 'ADVX', 'C', 'MF'], 'family': ['C', 'MF', 'VC', 'NF', 'KON', 'MVCN'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'PPER', 'ADV', 'KOUS', 'PDS', 'ADV'), 'right siblings': [(VC (VXFIN (VVFIN anrufen))), (NF (ADVX (ADV vielleicht))), (KON und), (MVCN (MF (NX (ADJX (CARD zwei)) (NN zimmer))) (VC (VXFIN (VVFIN reservieren))) (NF (PX (APPR fur) (NX (ART eine) (NN termine)))))], 'left siblings': [(C (KOUS das))], 'auto preterminal span': (34, 40), 'span': (34, 40), 'parent': 'SIMPX', 'label': 'MF', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP meinen sie die wissen das bei der bahn wenn ich da oder ich gehe ins reiseburo und da kann ich ja auch bahntickets kaufen und dann frage ich da gleich wegen der hotelbuchung das die mir da das die da anrufen vielleicht und zwei zimmer reservieren fur eine termine)

Sentence 653:
6 Initial errors
0 on fringe, 3 iterations
3 Error:NP Attachment
2 Error:Clause Attachment
1 Error:Clause Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(SIMPX
				(LK sollen)
				(MF wir so)
				(VC verbleiben))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF da)
				(LK rufe)
				(MF
					(NX ich)
					(NX sie)
					[01;36m(NX[00m [01;31m(ADVX[00m
						(NX ein paar tage)
						[01;36m(ADVX[00m
							(ADV vorher)[01;36m)[00m[01;31m)[00m[01;36m)[00m
					(ADVX noch)
					(ADVX mal))
				(VC an))
			[01;36m(SU[00m
				(SIMPX
					(VF ansonsten)
					(LK sehen)
					(MF wir uns ja vielleicht im in der firma))[01;36m)[00m[01;31m)[00m))
Step:NP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'NX', 'NX', 'ADVX', 'ADVX', 'ADVX'], 'mover info': [('NX', (8, 11))], 'old_family': ['NX', 'ADV'], 'start left siblings': [], 'auto preterminals': ('PPER', 'PPER', 'ART', 'PIDAT', 'NN', 'ADV', 'ADV', 'ADV'), 'start right siblings': ['ADV'], 'end left siblings': ['NX', 'NX'], 'auto preterminal span': (6, 14), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'ADVX', 'added and moved': True, 'end right siblings': ['ADVX', 'ADVX', 'ADVX'], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'SU'}
(TOP
	(TURN
		[01;31m(SU[00m
			(SIMPX
				(LK sollen)
				(MF wir so)
				(VC verbleiben))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX da rufe ich sie ein paar tage vorher noch mal an)
			[01;36m(SU[00m
				(SIMPX
					(VF ansonsten)
					(LK sehen)
					(MF wir uns ja vielleicht im in der firma))[01;36m)[00m[01;31m)[00m))
Step:Clause Attachment
{'new_parent': 'SU', 'new_family': ['SIMPX', 'SIMPX'], 'mover info': [('SIMPX', (4, 15))], 'old_family': ['SIMPX', 'SIMPX'], 'start left siblings': [], 'auto preterminals': ('VMFIN', 'PPER', 'ADV', 'VVINF', 'ADV', 'VVFIN', 'PPER', 'PPER', 'ART', 'PIDAT', 'NN', 'ADV', 'ADV', 'ADV', 'PTKVZ', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'APPRART', 'APPR', 'ART', 'NN'), 'start right siblings': ['SIMPX'], 'end left siblings': ['SIMPX'], 'auto preterminal span': (0, 25), 'movers': ['SIMPX'], 'old_parent': 'SU', 'end right siblings': [], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			(SIMPX sollen wir so verbleiben)
			(SIMPX da rufe ich sie ein paar tage vorher noch mal an)[01;31m)[00m
		(SU ansonsten sehen wir uns ja vielleicht im in der firma)))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('VMFIN', 'PPER', 'ADV', 'VVINF', 'ADV', 'VVFIN', 'PPER', 'PPER', 'ART', 'PIDAT', 'NN', 'ADV', 'ADV', 'ADV', 'PTKVZ', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'APPRART', 'APPR', 'ART', 'NN'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 25), 'span': (0, 15), 'left siblings': [], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP sollen wir so verbleiben da rufe ich sie ein paar tage vorher noch mal an ansonsten sehen wir uns ja vielleicht im in der firma)

Sentence 654:
11 Initial errors
0 on fringe, 8 iterations
2 Error:Single Word Phrase
2 Error:UNSET move
2 Error:Clause Attachment
1 Error:UNSET add
1 Error:Unary
1 Error:UNSET add
1 Error:Clause Attachment
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;36m(SU[00m
			(SU das heist wir konnten jede stunde fahren)
			[01;31m(SU[00m
				(SIMPX
					(VF ich)
					(LK weis)
					(MF gar nicht)
					(NF ob wir da unbedingt reservieren sollen))[01;31m)[00m[01;36m)[00m
		[01;31m(SU[00m
			[01;36m(SU[00m
				(SIMPX
					(VF das)
					(LK konnen)
					(MF wir uns dann ganz nach lust und laune))[01;36m)[00m
			(SIMPX vielleicht haben wir noch lust irgendwie vormittags zu bummeln)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF dann)
				(LK konnen)
				(MF
					(NX wir)
					[01;36m(PX[00m
						(PX ganz nach lust und laune)
						[01;36m(VXINF[00m [01;36m(VC[00m [01;31m(ADJX[00m
							(ADJD stundlich)[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;36m)[00m
					[01;36m(MF[00m
						(NX uns)
						(NX einen zug)[01;36m)[00m)
				(VC aussuchen)
				(NF fur die ruckfahrt)[01;31m)[00m[01;31m)[00m))
Step:Single Word Phrase
{'family': ['NX', 'PX', 'VC', 'NX', 'NX'], 'auto preterminal span': (45, 46), 'span': (45, 46), 'subtrees': ['ADJD'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('ADJD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'VC')}
(TOP
	(TURN
		[01;36m(SU[00m
			(SU das heist wir konnten jede stunde fahren)
			[01;31m(SU[00m
				(SIMPX
					(VF ich)
					(LK weis)
					(MF gar nicht)
					(NF ob wir da unbedingt reservieren sollen))[01;31m)[00m[01;36m)[00m
		[01;31m(SU[00m
			[01;36m(SU[00m
				(SIMPX
					(VF das)
					(LK konnen)
					(MF wir uns dann ganz nach lust und laune))[01;36m)[00m
			(SIMPX vielleicht haben wir noch lust irgendwie vormittags zu bummeln)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF dann)
				(LK konnen)
				(MF
					(NX wir)
					[01;36m(PX[00m
						(PX ganz nach lust und laune)
						[01;36m(VXINF[00m
							(VC
								(ADJD stundlich))[01;36m)[00m[01;36m)[00m
					[01;36m(MF[00m
						(NX uns)
						(NX einen zug)[01;36m)[00m)
				(VC aussuchen)
				(NF fur die ruckfahrt)[01;31m)[00m[01;31m)[00m))
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SU', 'SIMPX'], 'mover info': [('SU', (0, 7))], 'old_family': ['SU', 'SU', 'SU', 'SU'], 'start left siblings': [], 'auto preterminals': ('PDS', 'VVFIN', 'PPER', 'VMFIN', 'PIDAT', 'NN', 'VVINF', 'PPER', 'VVFIN', 'ADV', 'PTKNEG', 'KOUS', 'PPER', 'ADV', 'ADV', 'VVINF', 'VMFIN', 'PDS', 'VMFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'APPR', 'NN', 'KON', 'NN', 'ADV', 'VAFIN', 'PPER', 'ADV', 'NN', 'ADV', 'ADV', 'PTKZU', 'VVINF', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'APPR', 'NN', 'KON', 'NN', 'ADJD', 'PRF', 'ART', 'NN', 'VVINF', 'APPR', 'ART', 'NN'), 'start right siblings': ['SU', 'SU', 'SU'], 'end left siblings': [], 'auto preterminal span': (0, 53), 'movers': ['SU'], 'old_parent': 'TURN', 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU das heist wir konnten jede stunde fahren ich weis gar nicht ob wir da unbedingt reservieren sollen)
		[01;31m(SU[00m
			[01;36m(SU[00m
				(SIMPX
					(VF das)
					(LK konnen)
					(MF wir uns dann ganz nach lust und laune))[01;36m)[00m
			(SIMPX vielleicht haben wir noch lust irgendwie vormittags zu bummeln)[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF dann)
				(LK konnen)
				(MF
					(NX wir)
					[01;36m(PX[00m
						(PX ganz nach lust und laune)
						[01;36m(VXINF[00m
							(VC
								(ADJD stundlich))[01;36m)[00m[01;36m)[00m
					[01;36m(MF[00m
						(NX uns)
						(NX einen zug)[01;36m)[00m)
				(VC aussuchen)
				(NF fur die ruckfahrt)[01;31m)[00m[01;31m)[00m))
Step:Clause Attachment
{'new_parent': 'SU', 'new_family': ['SIMPX', 'SIMPX'], 'mover info': [('SIMPX', (27, 36))], 'old_family': ['SIMPX', 'SIMPX'], 'start left siblings': ['SIMPX'], 'auto preterminals': ('PDS', 'VVFIN', 'PPER', 'VMFIN', 'PIDAT', 'NN', 'VVINF', 'PPER', 'VVFIN', 'ADV', 'PTKNEG', 'KOUS', 'PPER', 'ADV', 'ADV', 'VVINF', 'VMFIN', 'PDS', 'VMFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'APPR', 'NN', 'KON', 'NN', 'ADV', 'VAFIN', 'PPER', 'ADV', 'NN', 'ADV', 'ADV', 'PTKZU', 'VVINF', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'APPR', 'NN', 'KON', 'NN', 'ADJD', 'PRF', 'ART', 'NN', 'VVINF', 'APPR', 'ART', 'NN'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 53), 'movers': ['SIMPX'], 'old_parent': 'SU', 'end right siblings': ['SIMPX'], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU das heist wir konnten jede stunde fahren ich weis gar nicht ob wir da unbedingt reservieren sollen)
		(SU das konnen wir uns dann ganz nach lust und laune)
		[01;31m(SU[00m
			(SIMPX vielleicht haben wir noch lust irgendwie vormittags zu bummeln)
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF dann)
				(LK konnen)
				(MF
					(NX wir)
					[01;36m(PX[00m
						(PX ganz nach lust und laune)
						[01;36m(VXINF[00m
							(VC
								(ADJD stundlich))[01;36m)[00m[01;36m)[00m
					[01;36m(MF[00m
						(NX uns)
						(NX einen zug)[01;36m)[00m)
				(VC aussuchen)
				(NF fur die ruckfahrt)[01;31m)[00m[01;31m)[00m))
Step:UNSET add
{'subtrees': ['PX', 'VC'], 'family': ['NX', 'PX', 'NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'APPR', 'NN', 'KON', 'NN', 'ADJD'), 'right siblings': [(NX (PRF uns)), (NX (ART einen) (NN zug))], 'left siblings': [(NX (PPER wir))], 'auto preterminal span': (40, 46), 'span': (40, 46), 'parent': 'MF', 'label': 'PX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU das heist wir konnten jede stunde fahren ich weis gar nicht ob wir da unbedingt reservieren sollen)
		(SU das konnen wir uns dann ganz nach lust und laune)
		[01;31m(SU[00m
			(SIMPX vielleicht haben wir noch lust irgendwie vormittags zu bummeln)
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF dann)
				(LK konnen)
				(MF
					(NX wir)
					(PX
						(PX ganz nach lust und laune)
						[01;36m(VXINF[00m
							(VC
								(ADJD stundlich))[01;36m)[00m)
					[01;36m(MF[00m
						(NX uns)
						(NX einen zug)[01;36m)[00m)
				(VC aussuchen)
				(NF fur die ruckfahrt)[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['VC'], 'family': ['PX', 'VXINF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJD',), 'right siblings': [], 'left siblings': [(PX (ADVX (ADV ganz)) (APPR nach) (NX (NX (NN lust)) (KON und) (NX (NN laune))))], 'auto preterminal span': (45, 46), 'span': (45, 46), 'parent': 'PX', 'label': 'VXINF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU das heist wir konnten jede stunde fahren ich weis gar nicht ob wir da unbedingt reservieren sollen)
		(SU das konnen wir uns dann ganz nach lust und laune)
		[01;31m(SU[00m
			(SIMPX vielleicht haben wir noch lust irgendwie vormittags zu bummeln)
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF dann)
				(LK konnen)
				(MF
					(NX wir)
					(PX ganz nach lust und laune stundlich)
					[01;36m(MF[00m
						(NX uns)
						(NX einen zug)[01;36m)[00m)
				(VC aussuchen)
				(NF fur die ruckfahrt)[01;31m)[00m[01;31m)[00m))
Step:UNSET add
{'subtrees': ['NX', 'NX'], 'family': ['NX', 'PX', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PRF', 'ART', 'NN'), 'right siblings': [], 'left siblings': [(NX (PPER wir)), (PX (PX (ADVX (ADV ganz)) (APPR nach) (NX (NX (NN lust)) (KON und) (NX (NN laune)))) (VXINF (VC (ADJD stundlich))))], 'auto preterminal span': (46, 49), 'span': (46, 49), 'parent': 'MF', 'label': 'MF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU das heist wir konnten jede stunde fahren ich weis gar nicht ob wir da unbedingt reservieren sollen)
		(SU das konnen wir uns dann ganz nach lust und laune)
		[01;31m(SU[00m
			(SIMPX vielleicht haben wir noch lust irgendwie vormittags zu bummeln)
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF dann)
				(LK konnen)
				(MF wir ganz nach lust und laune stundlich uns einen zug)
				(VC aussuchen)
				(NF fur die ruckfahrt)[01;31m)[00m[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VVFIN', 'PPER', 'VMFIN', 'PIDAT', 'NN', 'VVINF', 'PPER', 'VVFIN', 'ADV', 'PTKNEG', 'KOUS', 'PPER', 'ADV', 'ADV', 'VVINF', 'VMFIN', 'PDS', 'VMFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'APPR', 'NN', 'KON', 'NN', 'ADV', 'VAFIN', 'PPER', 'ADV', 'NN', 'ADV', 'ADV', 'PTKZU', 'VVINF', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'APPR', 'NN', 'KON', 'NN', 'ADJD', 'PRF', 'ART', 'NN', 'VVINF', 'APPR', 'ART', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 53), 'span': (27, 53), 'left siblings': ['SU', 'SU'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU das heist wir konnten jede stunde fahren ich weis gar nicht ob wir da unbedingt reservieren sollen)
		(SU das konnen wir uns dann ganz nach lust und laune)
		(SIMPX vielleicht haben wir noch lust irgendwie vormittags zu bummeln)
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF dann)
			(LK konnen)
			(MF wir ganz nach lust und laune stundlich uns einen zug)
			(VC aussuchen)
			(NF fur die ruckfahrt)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['KOORD', 'VF', 'LK', 'MF', 'VC', 'NF'], 'family': ['SU', 'SU', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VVFIN', 'PPER', 'VMFIN', 'PIDAT', 'NN', 'VVINF', 'PPER', 'VVFIN', 'ADV', 'PTKNEG', 'KOUS', 'PPER', 'ADV', 'ADV', 'VVINF', 'VMFIN', 'PDS', 'VMFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'APPR', 'NN', 'KON', 'NN', 'ADV', 'VAFIN', 'PPER', 'ADV', 'NN', 'ADV', 'ADV', 'PTKZU', 'VVINF', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'APPR', 'NN', 'KON', 'NN', 'ADJD', 'PRF', 'ART', 'NN', 'VVINF', 'APPR', 'ART', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 53), 'span': (36, 53), 'left siblings': ['SU', 'SU', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP das heist wir konnten jede stunde fahren ich weis gar nicht ob wir da unbedingt reservieren sollen das konnen wir uns dann ganz nach lust und laune vielleicht haben wir noch lust irgendwie vormittags zu bummeln und dann konnen wir ganz nach lust und laune stundlich uns einen zug aussuchen fur die ruckfahrt)

Sentence 655:
3 Initial errors
0 on fringe, 2 iterations
2 Error:UNSET move
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SU[00m
	(TOP
		(TURN
			[01;31m(SU[00m
				(DM
					(PTKANT ja))[01;31m)[00m
			[01;31m(SU[00m
				(SIMPX
					(VF ich)
					(LK rufe)
					(MF sie dann noch mal)
					(VC an))[01;31m)[00m))[01;36m)[00m
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SU', 'SIMPX'], 'mover info': [('SU', (0, 1))], 'old_family': ['SU', 'SU'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'PPER', 'VVFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'PTKVZ'), 'start right siblings': ['SU'], 'end left siblings': [], 'auto preterminal span': (0, 8), 'movers': ['SU'], 'old_parent': 'TURN', 'POS confusion': ('PTKANT', 'PTKANT'), 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			[01;31m(SU[00m
				(DM
					(PTKANT ja))[01;31m)[00m
			(SIMPX ich rufe sie dann noch mal an))))
Step:Unary
{'subtrees': ['DM'], 'family': ['SU', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VVFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'PTKVZ'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 8), 'span': (0, 1), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja ich rufe sie dann noch mal an)

Sentence 656:
12 Initial errors
0 on fringe, 9 iterations
4 Error:NP Attachment
1 Error:UNSET remove
1 Error:Clause Attachment
1 Error:Single Word Phrase
1 Error:NP Internal Structure
1 Error:UNSET remove
1 Error:UNSET add
1 Error:UNSET add
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			(DM so)[01;31m)[00m
		[01;31m(SU[00m
			(DM guten tag)
			(SIMPX [01;33m(SIMPX (SIMPX[00m
				(VF hier)
				(LK ist)
				[01;31m(MF[00m
					[01;31m(NX[00m
						[01;36m(MF[00m
							[01;36m(NX[00m
								(ART das)
								[01;31m(ADJX[00m
									(ADJA stadtische)[01;31m)[00m [01;33mSIMPX)[00m[01;36m)[00m[01;36m)[00m
						[01;31m(NX[00m
							(NX reiseburo) [01;33mSIMPX)[00m
							(NX bonn)[01;31m)[00m[01;31m)[00m[01;31m)[00m)
			[01;31m(DM[00m
				(NX
					[01;31m(NX[00m
						(NE bergmann)[01;31m)[00m
					(NX apparat))[01;31m)[00m
			(SIMPX wie kann ich ihnen helfen)[01;31m)[00m))
Step:NP Attachment
{'new_parent': 'DM', 'new_family': ['NX', 'NX'], 'mover info': [('NX', (8, 10))], 'old_family': ['ART', 'ADJX', 'NX'], 'start left siblings': ['ART', 'ADJX'], 'auto preterminals': ('ADJA', 'NN', 'ADV', 'VAFIN', 'ART', 'ADJA', 'NN', 'NE', 'NE', 'NN', 'PWAV', 'VMFIN', 'PPER', 'PPER', 'VVINF'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (2, 17), 'movers': ['NX'], 'old_parent': 'NX', 'end right siblings': ['NX'], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM ja)
			(DM so)[01;31m)[00m
		[01;31m(SU[00m
			(DM guten tag)
			(SIMPX [01;33m(SIMPX (SIMPX[00m
				(VF hier)
				(LK ist)
				(MF
					(NX
						(ART das)
						[01;31m(ADJX[00m
							(ADJA stadtische)[01;31m)[00m)))
			[01;31m(DM[00m
				[01;31m(NX[00m
					(NX reiseburo) [01;33mSIMPX)[00m
					(NX bonn)[01;31m)[00m [01;33mSIMPX)[00m
				(NX
					[01;31m(NX[00m
						(NE bergmann)[01;31m)[00m
					(NX apparat))[01;31m)[00m
			(SIMPX wie kann ich ihnen helfen)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['DM', 'DM'], 'family': ['SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADV', 'ADJA', 'NN', 'ADV', 'VAFIN', 'ART', 'ADJA', 'NN', 'NE', 'NE', 'NN', 'PWAV', 'VMFIN', 'PPER', 'PPER', 'VVINF'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 17), 'span': (0, 2), 'left siblings': [], 'label': 'SU', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM so)
		[01;31m(SU[00m
			(DM guten tag)
			(SIMPX [01;33m(SIMPX (SIMPX[00m
				(VF hier)
				(LK ist)
				(MF
					(NX
						(ART das)
						[01;31m(ADJX[00m
							(ADJA stadtische)[01;31m)[00m)))
			[01;31m(DM[00m
				[01;31m(NX[00m
					(NX reiseburo) [01;33mSIMPX)[00m
					(NX bonn)[01;31m)[00m [01;33mSIMPX)[00m
				(NX
					[01;31m(NX[00m
						(NE bergmann)[01;31m)[00m
					(NX apparat))[01;31m)[00m
			(SIMPX wie kann ich ihnen helfen)[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['DM', 'SIMPX', 'DM', 'SIMPX'], 'family': ['DM', 'DM', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADV', 'ADJA', 'NN', 'ADV', 'VAFIN', 'ART', 'ADJA', 'NN', 'NE', 'NE', 'NN', 'PWAV', 'VMFIN', 'PPER', 'PPER', 'VVINF'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 17), 'span': (2, 17), 'left siblings': ['DM', 'DM'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM so)
		(DM guten tag)
		(SIMPX [01;33m(SIMPX (SIMPX[00m
			(VF hier)
			(LK ist)
			(MF
				(NX
					(ART das)
					[01;31m(ADJX[00m
						(ADJA stadtische)[01;31m)[00m)))
		[01;31m(DM[00m
			[01;31m(NX[00m
				(NX reiseburo) [01;33mSIMPX)[00m
				(NX bonn)[01;31m)[00m [01;33mSIMPX)[00m
			(NX
				[01;31m(NX[00m
					(NE bergmann)[01;31m)[00m
				(NX apparat))[01;31m)[00m
		(SIMPX wie kann ich ihnen helfen)))
Step:Single Word Phrase
{'subtrees': ['ADJA'], 'family': ['ART', 'ADJX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ART', 'ADJA'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (6, 8), 'span': (7, 8), 'left siblings': ['ART'], 'label': 'ADJX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM so)
		(DM guten tag)
		[01;33m(SIMPX (SIMPX[00m (SIMPX hier ist das stadtische)
		[01;31m(DM[00m
			[01;31m(NX[00m
				(NX reiseburo) [01;33mSIMPX)[00m
				(NX bonn)[01;31m)[00m [01;33mSIMPX)[00m
			(NX
				[01;31m(NX[00m
					(NE bergmann)[01;31m)[00m
				(NX apparat))[01;31m)[00m
		(SIMPX wie kann ich ihnen helfen)))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'NE', 'NE', 'NN'), 'right siblings': ['NX'], 'parent': 'DM', 'auto preterminal span': (8, 12), 'span': (8, 10), 'left siblings': [], 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM so)
		(DM guten tag)
		[01;33m(SIMPX (SIMPX[00m (SIMPX hier ist das stadtische)
		[01;31m(DM[00m
			(NX reiseburo) [01;33mSIMPX)[00m
			(NX bonn) [01;33mSIMPX)[00m
			(NX
				[01;31m(NX[00m
					(NE bergmann)[01;31m)[00m
				(NX apparat))[01;31m)[00m
		(SIMPX wie kann ich ihnen helfen)))
Step:UNSET remove
{'subtrees': ['NX', 'NX', 'NX'], 'family': ['DM', 'DM', 'DM', 'SIMPX', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADV', 'ADJA', 'NN', 'ADV', 'VAFIN', 'ART', 'ADJA', 'NN', 'NE', 'NE', 'NN', 'PWAV', 'VMFIN', 'PPER', 'PPER', 'VVINF'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 17), 'span': (8, 12), 'left siblings': ['DM', 'DM', 'DM', 'SIMPX'], 'label': 'DM', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM so)
		(DM guten tag)
		[01;36m(SIMPX[00m
			[01;36m(SIMPX[00m
				(SIMPX hier ist das stadtische)
				(NX reiseburo)[01;36m)[00m
			(NX bonn)[01;36m)[00m
		(NX
			[01;31m(NX[00m
				(NE bergmann)[01;31m)[00m
			(NX apparat))
		(SIMPX wie kann ich ihnen helfen)))
Step:UNSET add
{'subtrees': ['SIMPX', 'NX'], 'family': ['DM', 'DM', 'DM', 'SIMPX', 'NX', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'ART', 'ADJA', 'NN'), 'right siblings': [(NX (NE bonn)), (NX (NX (NE bergmann)) (NX (NN apparat))), (SIMPX (VF (ADJX (PWAV wie))) (LK (VXFIN (VMFIN kann))) (MF (NX (PPER ich)) (NX (PPER ihnen))) (VC (VXINF (VVINF helfen))))], 'left siblings': [(DM (PTKANT ja)), (DM (ADVX (ADV so))), (DM (NX (ADJX (ADJA guten)) (NN tag)))], 'auto preterminal span': (4, 9), 'span': (4, 9), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM so)
		(DM guten tag)
		[01;36m(SIMPX[00m
			(SIMPX hier ist das stadtische reiseburo)
			(NX bonn)[01;36m)[00m
		(NX
			[01;31m(NX[00m
				(NE bergmann)[01;31m)[00m
			(NX apparat))
		(SIMPX wie kann ich ihnen helfen)))
Step:UNSET add
{'subtrees': ['SIMPX', 'NX'], 'family': ['DM', 'DM', 'DM', 'SIMPX', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'ART', 'ADJA', 'NN', 'NE'), 'right siblings': [(NX (NX (NE bergmann)) (NX (NN apparat))), (SIMPX (VF (ADJX (PWAV wie))) (LK (VXFIN (VMFIN kann))) (MF (NX (PPER ich)) (NX (PPER ihnen))) (VC (VXINF (VVINF helfen))))], 'left siblings': [(DM (PTKANT ja)), (DM (ADVX (ADV so))), (DM (NX (ADJX (ADJA guten)) (NN tag)))], 'auto preterminal span': (4, 10), 'span': (4, 10), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM so)
		(DM guten tag)
		(SIMPX hier ist das stadtische reiseburo bonn)
		(NX
			[01;31m(NX[00m
				(NE bergmann)[01;31m)[00m
			(NX apparat))
		(SIMPX wie kann ich ihnen helfen)))
Step:Single Word Phrase
{'subtrees': ['NE'], 'family': ['NX', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('NE', 'NN'), 'right siblings': ['NX'], 'parent': 'NX', 'auto preterminal span': (10, 12), 'span': (10, 11), 'left siblings': [], 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP ja so guten tag hier ist das stadtische reiseburo bonn bergmann apparat wie kann ich ihnen helfen)

Sentence 657:
9 Initial errors
0 on fringe, 6 iterations
3 Error:Modifier Attachment
2 Error:Modifier Attachment
1 Error:PP Attachment
1 Error:UNSET remove
1 Error:PP Attachment
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU ja selbstverstandlich)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF ich)
				(LK mus)
				(MF nur dazu)
				(VC sagen)
				(NF
					(SIMPX
						(C das)
						(MF
							[01;36m(MF[00m
								(NX das)
								(PX von kolnbonn)[01;36m)[00m
							(SIMPX wenn sie von kolnbonn fliegen wollen)
							[01;31m(ADVX[00m
								[01;31m(ADVX[00m
									(ADVX nur)
									[01;36m(ADVX[00m
										(ADV einmal)[01;36m)[00m[01;31m)[00m
								(PX am tag)[01;31m)[00m
							(ADJX moglich))
						(VC ist)))[01;31m)[00m
			(DM und zwar)
			[01;31m(PX[00m [01;33m(PX[00m
				(PX um sieben uhr zehn)
				(KON und)
				[01;31m(PX[00m
					(PX am wochenende) [01;33mPX)[00m
					(ADVX leider)
					(ADVX gar nicht)[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Modifier Attachment
{'new_parent': 'SU', 'new_family': ['SIMPX', 'DM', 'PX', 'ADVX', 'ADVX'], 'mover info': [('ADVX', (32, 33)), ('ADVX', (33, 35))], 'old_family': ['PX', 'ADVX', 'ADVX'], 'start left siblings': ['PX'], 'auto preterminals': ('PPER', 'VMFIN', 'ADV', 'PROP', 'VVINF', 'KOUS', 'PDS', 'APPR', 'NE', 'KOUS', 'PPER', 'APPR', 'NE', 'VVINF', 'VMFIN', 'ADV', 'ADV', 'APPRART', 'NN', 'ADJD', 'VAFIN', 'KON', 'ADV', 'APPR', 'CARD', 'NN', 'CARD', 'KON', 'APPRART', 'NN', 'ADV', 'ADV', 'PTKNEG'), 'start right siblings': [], 'end left siblings': ['SIMPX', 'DM', 'PX'], 'auto preterminal span': (2, 35), 'movers': ['ADVX', 'ADVX'], 'old_parent': 'PX', 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU ja selbstverstandlich)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF ich)
				(LK mus)
				(MF nur dazu)
				(VC sagen)
				(NF
					(SIMPX
						(C das)
						(MF
							[01;36m(MF[00m
								(NX das)
								(PX von kolnbonn)[01;36m)[00m
							(SIMPX wenn sie von kolnbonn fliegen wollen)
							[01;31m(ADVX[00m
								[01;31m(ADVX[00m
									(ADVX nur)
									[01;36m(ADVX[00m
										(ADV einmal)[01;36m)[00m[01;31m)[00m
								(PX am tag)[01;31m)[00m
							(ADJX moglich))
						(VC ist)))[01;31m)[00m
			(DM und zwar)
			(PX um sieben uhr zehn und am wochenende)
			(ADVX leider)
			(ADVX gar nicht)[01;31m)[00m))
Step:Modifier Attachment
{'new_parent': 'ADVX', 'new_family': ['ADVX', 'ADVX', 'PX'], 'mover info': [('ADVX', (17, 18))], 'old_family': ['ADVX', 'ADV'], 'start left siblings': [], 'auto preterminals': ('ADV', 'ADV', 'APPRART', 'NN'), 'start right siblings': ['ADV'], 'end left siblings': [], 'auto preterminal span': (17, 21), 'movers': ['ADVX'], 'old_parent': 'ADVX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['ADVX', 'PX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU ja selbstverstandlich)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF ich)
				(LK mus)
				(MF nur dazu)
				(VC sagen)
				(NF
					(SIMPX
						(C das)
						(MF
							[01;36m(MF[00m
								(NX das)
								(PX von kolnbonn)[01;36m)[00m
							(SIMPX wenn sie von kolnbonn fliegen wollen)
							[01;31m(ADVX[00m
								(ADVX nur)
								(ADVX einmal)
								(PX am tag)[01;31m)[00m
							(ADJX moglich))
						(VC ist)))[01;31m)[00m
			(DM und zwar)
			(PX um sieben uhr zehn und am wochenende)
			(ADVX leider)
			(ADVX gar nicht)[01;31m)[00m))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['MF', 'SIMPX', 'ADVX', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'APPR', 'NE'), 'right siblings': [(SIMPX (C (KOUS wenn)) (MF (NX (PPER sie)) (PX (APPR von) (NX (NE kolnbonn)))) (VC (VXINF (VVINF fliegen)) (VXFIN (VMFIN wollen)))), (ADVX (ADVX (ADV nur)) (ADVX (ADV einmal)) (PX (APPRART am) (NX (NN tag)))), (ADJX (ADJD moglich))], 'left siblings': [], 'auto preterminal span': (8, 11), 'span': (8, 11), 'parent': 'MF', 'label': 'MF', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU ja selbstverstandlich)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF ich)
				(LK mus)
				(MF nur dazu)
				(VC sagen)
				(NF
					(SIMPX
						(C das)
						(MF
							(MF das von kolnbonn)
							(SIMPX wenn sie von kolnbonn fliegen wollen)
							[01;31m(ADVX[00m
								(ADVX nur)
								(ADVX einmal)
								(PX am tag)[01;31m)[00m
							(ADJX moglich))
						(VC ist)))[01;31m)[00m
			(DM und zwar)
			(PX um sieben uhr zehn und am wochenende)
			(ADVX leider)
			(ADVX gar nicht)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'VC', 'NF'], 'family': ['SIMPX', 'DM', 'PX', 'ADVX', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VMFIN', 'ADV', 'PROP', 'VVINF', 'KOUS', 'PDS', 'APPR', 'NE', 'KOUS', 'PPER', 'APPR', 'NE', 'VVINF', 'VMFIN', 'ADV', 'ADV', 'APPRART', 'NN', 'ADJD', 'VAFIN', 'KON', 'ADV', 'APPR', 'CARD', 'NN', 'CARD', 'KON', 'APPRART', 'NN', 'ADV', 'ADV', 'PTKNEG'), 'right siblings': ['DM', 'PX', 'ADVX', 'ADVX'], 'parent': 'SU', 'auto preterminal span': (2, 35), 'span': (2, 23), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU ja selbstverstandlich)
		[01;31m(SU[00m
			(VF ich)
			(LK mus)
			(MF nur dazu)
			(VC sagen)
			(NF
				(SIMPX
					(C das)
					(MF
						(MF das von kolnbonn)
						(SIMPX wenn sie von kolnbonn fliegen wollen)
						[01;31m(ADVX[00m
							(ADVX nur)
							(ADVX einmal)
							(PX am tag)[01;31m)[00m
						(ADJX moglich))
					(VC ist)))
			(DM und zwar)
			(PX um sieben uhr zehn und am wochenende)
			(ADVX leider)
			(ADVX gar nicht)[01;31m)[00m))
Step:PP Attachment
{'subtrees': ['VF', 'LK', 'MF', 'VC', 'NF', 'DM', 'PX', 'ADVX', 'ADVX'], 'family': ['SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'PPER', 'VMFIN', 'ADV', 'PROP', 'VVINF', 'KOUS', 'PDS', 'APPR', 'NE', 'KOUS', 'PPER', 'APPR', 'NE', 'VVINF', 'VMFIN', 'ADV', 'ADV', 'APPRART', 'NN', 'ADJD', 'VAFIN', 'KON', 'ADV', 'APPR', 'CARD', 'NN', 'CARD', 'KON', 'APPRART', 'NN', 'ADV', 'ADV', 'PTKNEG'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 35), 'span': (2, 35), 'left siblings': ['SU'], 'label': 'SU', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU ja selbstverstandlich)
		(VF ich)
		(LK mus)
		(MF nur dazu)
		(VC sagen)
		(NF
			(SIMPX
				(C das)
				(MF
					(MF das von kolnbonn)
					(SIMPX wenn sie von kolnbonn fliegen wollen)
					[01;31m(ADVX[00m
						(ADVX nur)
						(ADVX einmal)
						(PX am tag)[01;31m)[00m
					(ADJX moglich))
				(VC ist)))
		(DM und zwar)
		(PX um sieben uhr zehn und am wochenende)
		(ADVX leider)
		(ADVX gar nicht)))
Step:PP Attachment
{'subtrees': ['ADVX', 'ADVX', 'PX'], 'family': ['MF', 'SIMPX', 'ADVX', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'APPR', 'NE', 'KOUS', 'PPER', 'APPR', 'NE', 'VVINF', 'VMFIN', 'ADV', 'ADV', 'APPRART', 'NN', 'ADJD'), 'right siblings': ['ADJX'], 'parent': 'MF', 'auto preterminal span': (8, 22), 'span': (17, 21), 'left siblings': ['MF', 'SIMPX'], 'label': 'ADVX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP ja selbstverstandlich ich mus nur dazu sagen das das von kolnbonn wenn sie von kolnbonn fliegen wollen nur einmal am tag moglich ist und zwar um sieben uhr zehn und am wochenende leider gar nicht)

Sentence 658:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU ja also eigentlich ist da immer relativ viel frei)
		[01;31m(SU[00m
			(SIMPX
				(VF ich)
				(LK konnte)
				(MF sie da mal)
				(VC vormerken))[01;31m)[00m
		(SU ich mus im computer gucken ob das geht)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADV', 'ADV', 'VAFIN', 'ADV', 'ADV', 'ADV', 'PIS', 'ADJD', 'PPER', 'VMFIN', 'PPER', 'ADV', 'ADV', 'VVINF', 'PPER', 'VMFIN', 'APPRART', 'NN', 'VVINF', 'KOUS', 'PDS', 'VVFIN'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 23), 'span': (9, 15), 'left siblings': ['SU'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja also eigentlich ist da immer relativ viel frei ich konnte sie da mal vormerken ich mus im computer gucken ob das geht)

Sentence 659:
3 Initial errors
0 on fringe, 2 iterations
2 Error:UNSET move
1 Error:Clause Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SU[00m
	(TOP
		(TURN
			[01;31m(SU[00m
				(DM also)
				(SIMPX es ist aber eigentlich immer moglich)[01;31m)[00m
			[01;31m(SU[00m
				(SIMPX
					(VF so uberfullt)
					(LK sind)
					(MF die fluge nicht))[01;31m)[00m))[01;36m)[00m
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SU', 'SIMPX'], 'mover info': [('SU', (0, 7))], 'old_family': ['SU', 'SU'], 'start left siblings': [], 'auto preterminals': ('ADV', 'PPER', 'VAFIN', 'ADV', 'ADV', 'ADV', 'ADJD', 'ADV', 'ADJD', 'VAFIN', 'ART', 'NN', 'PTKNEG'), 'start right siblings': ['SU'], 'end left siblings': [], 'auto preterminal span': (0, 13), 'movers': ['SU'], 'old_parent': 'TURN', 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			[01;31m(SU[00m
				(DM also)
				(SIMPX es ist aber eigentlich immer moglich)[01;31m)[00m
			(SIMPX so uberfullt sind die fluge nicht))))
Step:Clause Attachment
{'subtrees': ['DM', 'SIMPX'], 'family': ['SU', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPER', 'VAFIN', 'ADV', 'ADV', 'ADV', 'ADJD', 'ADV', 'ADJD', 'VAFIN', 'ART', 'NN', 'PTKNEG'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 13), 'span': (0, 7), 'left siblings': [], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP also es ist aber eigentlich immer moglich so uberfullt sind die fluge nicht)

Sentence 660:
2 Initial errors
0 on fringe, 2 iterations
1 Error:Single Word Phrase
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(NX
				(NX
					(ADJX siebten)
					[01;36m(NX[00m
						(NN siebten)[01;36m)[00m)
				[01;36m(PX[00m
					(APPR bis)
					(PX zum zehnten juli)[01;36m)[00m))
		(SU ja das kann ich machen)))
Step:Single Word Phrase
{'subtrees': ['NN'], 'family': ['ADJX', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('NN',), 'right siblings': [], 'left siblings': [(ADJX (ADJA siebten))], 'auto preterminal span': (1, 2), 'span': (1, 2), 'parent': 'NX', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SU
			(NX
				(NX siebten siebten)
				[01;36m(PX[00m
					(APPR bis)
					(PX zum zehnten juli)[01;36m)[00m))
		(SU ja das kann ich machen)))
Step:PP Attachment
{'subtrees': ['APPR', 'PX'], 'family': ['NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'APPRART', 'ADJA', 'NN'), 'right siblings': [], 'left siblings': [(NX (ADJX (ADJA siebten)) (NX (NN siebten)))], 'auto preterminal span': (2, 6), 'span': (2, 6), 'parent': 'NX', 'label': 'PX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP siebten siebten bis zum zehnten juli ja das kann ich machen)

Sentence 661:
13 Initial errors
0 on fringe, 11 iterations
3 Error:UNSET move
1 Error:Single Word Phrase
1 Error:Unary
1 Error:Single Word Phrase
1 Error:Unary
1 Error:Unary
1 Error:Clause Attachment
1 Error:UNSET remove
1 Error:Clause Attachment
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM tja)
			[01;31m(P[00m
				(SIMPX
					(VF da)
					(LK bin)
					(MF
						(NX ich)
						(ADVX gerade)
						(ADVX ja)
						(ADVX nicht)
						(ADJX
							(ADJX so gut)
							[01;36m(VC[00m
								[01;36m(VXINF[00m
									(ADJD informiert)[01;36m)[00m[01;36m)[00m)))
				[01;36m(KOORD[00m
					(KON aber)[01;36m)[00m
				[01;31m(SIMPX[00m
					(VF da)
					(LK wird)
					(MF es einen flug)
					(VC geben)[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF ich)
				(LK denke)
				(MF auch)
				[01;36m(VF[00m [01;31m(NF[00m [01;33m(SIMPX (NF[00m
					(SIMPX
						(C das)
						(MF der vielleicht abends)
						(VC ist))[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK werde)
				(MF ich noch)
				(VC nachgucken)[01;31m)[00m[01;31m)[00m)) [01;33mNF) SIMPX)[00m
Step:UNSET move
{'new_parent': 'NF', 'new_family': ['SIMPX', 'SU'], 'mover info': [('SU', (26, 30))], 'old_family': ['SU', 'SU'], 'start left siblings': ['SU'], 'auto preterminals': ('ITJ', 'ADV', 'VAFIN', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'ADV', 'ADJD', 'ADJD', 'KON', 'ADV', 'VAFIN', 'PPER', 'ART', 'NN', 'VVINF', 'KON', 'PPER', 'VVFIN', 'ADV', 'KOUS', 'PDS', 'ADV', 'ADV', 'VAFIN', 'VAFIN', 'PPER', 'ADV', 'VVINF'), 'start right siblings': [], 'end left siblings': ['SIMPX'], 'auto preterminal span': (0, 30), 'adding node already present': False, 'movers': ['SU'], 'old_parent': 'TURN', 'added and moved': True, 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'SIMPX'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM tja)
			[01;31m(P[00m
				(SIMPX
					(VF da)
					(LK bin)
					(MF
						(NX ich)
						(ADVX gerade)
						(ADVX ja)
						(ADVX nicht)
						(ADJX
							(ADJX so gut)
							[01;36m(VC[00m
								[01;36m(VXINF[00m
									(ADJD informiert)[01;36m)[00m[01;36m)[00m)))
				[01;36m(KOORD[00m
					(KON aber)[01;36m)[00m
				[01;31m(SIMPX[00m
					(VF da)
					(LK wird)
					(MF es einen flug)
					(VC geben)[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF ich)
				(LK denke)
				(MF auch)
				(SIMPX
					(NF
						[01;36m(VF[00m
							(SIMPX
								(C das)
								(MF der vielleicht abends)
								(VC ist))[01;36m)[00m
						[01;31m(SU[00m
							[01;31m(SIMPX[00m
								(LK werde)
								(MF ich noch)
								(VC nachgucken)[01;31m)[00m[01;31m)[00m))[01;31m)[00m[01;31m)[00m))
Step:Single Word Phrase
{'subtrees': ['ADJD'], 'family': ['ADJX', 'VXINF'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADJD',), 'right siblings': [], 'left siblings': [(ADJX (ADVX (ADV so)) (ADJD gut))], 'auto preterminal span': (9, 10), 'span': (9, 10), 'parent': 'ADJX', 'label': 'VXINF', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM tja)
			[01;31m(P[00m
				(SIMPX
					(VF da)
					(LK bin)
					(MF
						(NX ich)
						(ADVX gerade)
						(ADVX ja)
						(ADVX nicht)
						(ADJX
							(ADJX so gut)
							[01;36m(VC[00m
								(VXINF
									(ADJD informiert))[01;36m)[00m)))
				[01;36m(KOORD[00m
					(KON aber)[01;36m)[00m
				[01;31m(SIMPX[00m
					(VF da)
					(LK wird)
					(MF es einen flug)
					(VC geben)[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF ich)
				(LK denke)
				(MF auch)
				(SIMPX
					(NF
						[01;36m(VF[00m
							(SIMPX
								(C das)
								(MF der vielleicht abends)
								(VC ist))[01;36m)[00m
						[01;31m(SU[00m
							[01;31m(SIMPX[00m
								(LK werde)
								(MF ich noch)
								(VC nachgucken)[01;31m)[00m[01;31m)[00m))[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['VXINF'], 'family': ['ADJX', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJD',), 'right siblings': [], 'left siblings': [(ADJX (ADVX (ADV so)) (ADJD gut))], 'auto preterminal span': (9, 10), 'span': (9, 10), 'parent': 'ADJX', 'label': 'VC', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM tja)
			[01;31m(P[00m
				(SIMPX da bin ich gerade ja nicht so gut informiert)
				[01;36m(KOORD[00m
					(KON aber)[01;36m)[00m
				[01;31m(SIMPX[00m
					(VF da)
					(LK wird)
					(MF es einen flug)
					(VC geben)[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF ich)
				(LK denke)
				(MF auch)
				(SIMPX
					(NF
						[01;36m(VF[00m
							(SIMPX
								(C das)
								(MF der vielleicht abends)
								(VC ist))[01;36m)[00m
						[01;31m(SU[00m
							[01;31m(SIMPX[00m
								(LK werde)
								(MF ich noch)
								(VC nachgucken)[01;31m)[00m[01;31m)[00m))[01;31m)[00m[01;31m)[00m))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['SIMPX', 'KOORD', 'SIMPX'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON',), 'right siblings': [(SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VAFIN wird))) (MF (NX (PPER es)) (NX (ART einen) (NN flug))) (VC (VXINF (VVINF geben))))], 'left siblings': [(SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VAFIN bin))) (MF (NX (PPER ich)) (ADVX (ADV gerade)) (ADVX (ADV ja)) (ADVX (PTKNEG nicht)) (ADJX (ADJX (ADVX (ADV so)) (ADJD gut)) (VC (VXINF (ADJD informiert))))))], 'auto preterminal span': (10, 11), 'span': (10, 11), 'parent': 'P', 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM tja)
			[01;31m(P[00m
				(SIMPX da bin ich gerade ja nicht so gut informiert)
				(KOORD aber)
				[01;31m(SIMPX[00m
					(VF da)
					(LK wird)
					(MF es einen flug)
					(VC geben)[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF ich)
				(LK denke)
				(MF auch)
				(SIMPX
					(NF
						[01;36m(VF[00m
							(SIMPX
								(C das)
								(MF der vielleicht abends)
								(VC ist))[01;36m)[00m
						[01;31m(SU[00m
							[01;31m(SIMPX[00m
								(LK werde)
								(MF ich noch)
								(VC nachgucken)[01;31m)[00m[01;31m)[00m))[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['VF', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PDS', 'ADV', 'ADV', 'VAFIN'), 'right siblings': [(SU (SIMPX (LK (VXFIN (VAFIN werde))) (MF (NX (PPER ich)) (ADVX (ADV noch))) (VC (VXINF (VVINF nachgucken)))))], 'left siblings': [], 'auto preterminal span': (21, 26), 'span': (21, 26), 'parent': 'NF', 'label': 'VF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM tja)
			[01;31m(P[00m
				(SIMPX da bin ich gerade ja nicht so gut informiert)
				(KOORD aber)
				[01;31m(SIMPX[00m
					(VF da)
					(LK wird)
					(MF es einen flug)
					(VC geben)[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF ich)
				(LK denke)
				(MF auch)
				(SIMPX
					(NF
						(VF das der vielleicht abends ist)
						[01;31m(SU[00m
							[01;31m(SIMPX[00m
								(LK werde)
								(MF ich noch)
								(VC nachgucken)[01;31m)[00m[01;31m)[00m))[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['DM', 'P', 'SIMPX'], 'family': ['SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'VAFIN', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'ADV', 'ADJD', 'ADJD', 'KON', 'ADV', 'VAFIN', 'PPER', 'ART', 'NN', 'VVINF', 'KON', 'PPER', 'VVFIN', 'ADV', 'KOUS', 'PDS', 'ADV', 'ADV', 'VAFIN', 'VAFIN', 'PPER', 'ADV', 'VVINF'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 30), 'span': (0, 30), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM tja)
		[01;31m(P[00m
			(SIMPX da bin ich gerade ja nicht so gut informiert)
			(KOORD aber)
			[01;31m(SIMPX[00m
				(VF da)
				(LK wird)
				(MF es einen flug)
				(VC geben)[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF ich)
			(LK denke)
			(MF auch)
			(SIMPX
				(NF
					(VF das der vielleicht abends ist)
					[01;31m(SU[00m
						[01;31m(SIMPX[00m
							(LK werde)
							(MF ich noch)
							(VC nachgucken)[01;31m)[00m[01;31m)[00m))[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'KOORD', 'SIMPX'], 'family': ['DM', 'P', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'VAFIN', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'ADV', 'ADJD', 'ADJD', 'KON', 'ADV', 'VAFIN', 'PPER', 'ART', 'NN', 'VVINF', 'KON', 'PPER', 'VVFIN', 'ADV', 'KOUS', 'PDS', 'ADV', 'ADV', 'VAFIN', 'VAFIN', 'PPER', 'ADV', 'VVINF'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 30), 'span': (1, 17), 'left siblings': ['DM'], 'label': 'P', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM tja)
		(SIMPX da bin ich gerade ja nicht so gut informiert)
		(KOORD aber)
		[01;31m(SIMPX[00m
			(VF da)
			(LK wird)
			(MF es einen flug)
			(VC geben)[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF ich)
			(LK denke)
			(MF auch)
			(SIMPX
				(NF
					(VF das der vielleicht abends ist)
					[01;31m(SU[00m
						[01;31m(SIMPX[00m
							(LK werde)
							(MF ich noch)
							(VC nachgucken)[01;31m)[00m[01;31m)[00m))[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['DM', 'SIMPX', 'KOORD', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'VAFIN', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'ADV', 'ADJD', 'ADJD', 'KON', 'ADV', 'VAFIN', 'PPER', 'ART', 'NN', 'VVINF', 'KON', 'PPER', 'VVFIN', 'ADV', 'KOUS', 'PDS', 'ADV', 'ADV', 'VAFIN', 'VAFIN', 'PPER', 'ADV', 'VVINF'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 30), 'span': (11, 17), 'left siblings': ['DM', 'SIMPX', 'KOORD'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM tja)
		(SIMPX da bin ich gerade ja nicht so gut informiert)
		(KOORD aber)
		(VF da)
		(LK wird)
		(MF es einen flug)
		(VC geben)
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF ich)
			(LK denke)
			(MF auch)
			(SIMPX
				(NF
					(VF das der vielleicht abends ist)
					[01;31m(SU[00m
						[01;31m(SIMPX[00m
							(LK werde)
							(MF ich noch)
							(VC nachgucken)[01;31m)[00m[01;31m)[00m))[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['KOORD', 'VF', 'LK', 'MF', 'SIMPX'], 'family': ['DM', 'SIMPX', 'KOORD', 'VF', 'LK', 'MF', 'VC', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'VAFIN', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'ADV', 'ADJD', 'ADJD', 'KON', 'ADV', 'VAFIN', 'PPER', 'ART', 'NN', 'VVINF', 'KON', 'PPER', 'VVFIN', 'ADV', 'KOUS', 'PDS', 'ADV', 'ADV', 'VAFIN', 'VAFIN', 'PPER', 'ADV', 'VVINF'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 30), 'span': (17, 30), 'left siblings': ['DM', 'SIMPX', 'KOORD', 'VF', 'LK', 'MF', 'VC'], 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM tja)
		(SIMPX da bin ich gerade ja nicht so gut informiert)
		(KOORD aber)
		(VF da)
		(LK wird)
		(MF es einen flug)
		(VC geben)
		(KOORD und)
		(VF ich)
		(LK denke)
		(MF auch)
		(SIMPX
			(NF
				(VF das der vielleicht abends ist)
				[01;31m(SU[00m
					[01;31m(SIMPX[00m
						(LK werde)
						(MF ich noch)
						(VC nachgucken)[01;31m)[00m[01;31m)[00m))))
Step:Unary
{'subtrees': ['LK', 'MF', 'VC'], 'family': ['SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'PPER', 'ADV', 'VVINF'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (26, 30), 'span': (26, 30), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM tja)
		(SIMPX da bin ich gerade ja nicht so gut informiert)
		(KOORD aber)
		(VF da)
		(LK wird)
		(MF es einen flug)
		(VC geben)
		(KOORD und)
		(VF ich)
		(LK denke)
		(MF auch)
		(SIMPX
			(NF
				(VF das der vielleicht abends ist)
				[01;31m(SU[00m
					(LK werde)
					(MF ich noch)
					(VC nachgucken)[01;31m)[00m))))
Step:UNSET remove
{'subtrees': ['LK', 'MF', 'VC'], 'family': ['VF', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PDS', 'ADV', 'ADV', 'VAFIN', 'VAFIN', 'PPER', 'ADV', 'VVINF'), 'right siblings': [], 'parent': 'NF', 'auto preterminal span': (21, 30), 'span': (26, 30), 'left siblings': ['VF'], 'label': 'SU', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP tja da bin ich gerade ja nicht so gut informiert aber da wird es einen flug geben und ich denke auch das der vielleicht abends ist werde ich noch nachgucken)

Sentence 662:
8 Initial errors
0 on fringe, 6 iterations
2 Error:Single Word Phrase
2 Error:Modifier Attachment
1 Error:UNSET add
1 Error:Clause Attachment
1 Error:UNSET add
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU ja mit dem zug ist es moglich)
		[01;31m(SU[00m
			(SIMPX das ist)
			[01;36m(SIMPX[00m
				[01;33m(SIMPX[00m (SIMPX stundlich fahrt ein zug um achtundfunfzig)
				[01;36m(LV[00m
					(NX
						[01;31m(NX[00m
							(NX die volle stunde)
							(ADVX immer)[01;31m)[00m
						[01;36m(ADJX[00m [01;31m(NX[00m
							(CARD achtundfunfzig)[01;31m)[00m[01;36m)[00m)[01;36m)[00m[01;36m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF der)
				(LK dauert)
				(MF dann drei stunden und zwanzig))[01;31m)[00m [01;33mSIMPX)[00m
		(SU man mus da aber bedenken das man in dortmund umsteigen muste)))
Step:Single Word Phrase
{'family': ['NX', 'ADJX'], 'auto preterminal span': (19, 20), 'span': (19, 20), 'subtrees': ['CARD'], 'parent': 'NX', 'over_word': True, 'auto preterminals': ('CARD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('NX', 'ADJX')}
(TOP
	(TURN
		(SU ja mit dem zug ist es moglich)
		[01;31m(SU[00m
			(SIMPX das ist)
			[01;36m(SIMPX[00m
				[01;33m(SIMPX[00m (SIMPX stundlich fahrt ein zug um achtundfunfzig)
				[01;36m(LV[00m
					(NX
						[01;31m(NX[00m
							(NX die volle stunde)
							(ADVX immer)[01;31m)[00m
						(ADJX achtundfunfzig))[01;36m)[00m[01;36m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF der)
				(LK dauert)
				(MF dann drei stunden und zwanzig))[01;31m)[00m [01;33mSIMPX)[00m
		(SU man mus da aber bedenken das man in dortmund umsteigen muste)))
Step:Modifier Attachment
{'new_parent': 'NX', 'new_family': ['NX', 'ADVX', 'ADJX'], 'mover info': [('ADVX', (18, 19))], 'old_family': ['NX', 'ADVX'], 'start left siblings': ['NX'], 'auto preterminals': ('ART', 'ADJA', 'NN', 'ADV', 'CARD'), 'start right siblings': [], 'end left siblings': ['NX'], 'auto preterminal span': (15, 20), 'adding node already present': False, 'movers': ['ADVX'], 'old_parent': 'NX', 'POS confusion': ('ADV', 'ADV'), 'added and moved': True, 'end right siblings': ['ADJX'], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'LV'}
(TOP
	(TURN
		(SU ja mit dem zug ist es moglich)
		[01;31m(SU[00m
			(SIMPX das ist)
			[01;36m(SIMPX[00m
				[01;33m(SIMPX[00m (SIMPX stundlich fahrt ein zug um achtundfunfzig)
				(LV die volle stunde immer achtundfunfzig)[01;36m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF der)
				(LK dauert)
				(MF dann drei stunden und zwanzig))[01;31m)[00m [01;33mSIMPX)[00m
		(SU man mus da aber bedenken das man in dortmund umsteigen muste)))
Step:UNSET add
{'subtrees': ['SIMPX', 'LV'], 'family': ['SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJD', 'VVFIN', 'ART', 'NN', 'APPR', 'CARD', 'ART', 'ADJA', 'NN', 'ADV', 'CARD'), 'right siblings': [], 'left siblings': [(SIMPX (VF (NX (PDS das))) (LK (VXFIN (VAFIN ist))))], 'auto preterminal span': (9, 20), 'span': (9, 20), 'parent': 'SU', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU ja mit dem zug ist es moglich)
		[01;31m(SU[00m
			(SIMPX das ist)
			[01;33m(SIMPX[00m (SIMPX stundlich fahrt ein zug um achtundfunfzig die volle stunde immer achtundfunfzig)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF der)
				(LK dauert)
				(MF dann drei stunden und zwanzig))[01;31m)[00m [01;33mSIMPX)[00m
		(SU man mus da aber bedenken das man in dortmund umsteigen muste)))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['SU', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'APPR', 'ART', 'NN', 'VAFIN', 'PPER', 'ADJD', 'PDS', 'VAFIN', 'ADJD', 'VVFIN', 'ART', 'NN', 'APPR', 'CARD', 'ART', 'ADJA', 'NN', 'ADV', 'CARD', 'PDS', 'VVFIN', 'ADV', 'CARD', 'NN', 'KON', 'CARD', 'PIS', 'VMFIN', 'ADV', 'ADV', 'VVINF', 'KOUS', 'PIS', 'APPR', 'NE', 'VVINF', 'VMFIN'), 'right siblings': ['SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 38), 'span': (7, 20), 'left siblings': ['SU'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU ja mit dem zug ist es moglich)
		(SIMPX das ist)
		[01;36m(SIMPX[00m
			(SIMPX stundlich fahrt ein zug um achtundfunfzig die volle stunde immer achtundfunfzig)
			[01;31m(SU[00m
				(SIMPX
					(VF der)
					(LK dauert)
					(MF dann drei stunden und zwanzig))[01;31m)[00m[01;36m)[00m
		(SU man mus da aber bedenken das man in dortmund umsteigen muste)))
Step:UNSET add
{'subtrees': ['SIMPX', 'SU'], 'family': ['SU', 'SIMPX', 'SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJD', 'VVFIN', 'ART', 'NN', 'APPR', 'CARD', 'ART', 'ADJA', 'NN', 'ADV', 'CARD', 'PDS', 'VVFIN', 'ADV', 'CARD', 'NN', 'KON', 'CARD'), 'right siblings': [(SU (SIMPX (VF (NX (PIS man))) (LK (VXFIN (VMFIN mus))) (MF (ADVX (ADV da)) (ADVX (ADV aber))) (VC (VXINF (VVINF bedenken))) (NF (SIMPX (C (KOUS das)) (MF (NX (PIS man)) (PX (APPR in) (NX (NE dortmund)))) (VC (VXINF (VVINF umsteigen)) (VXFIN (VMFIN muste)))))))], 'left siblings': [(SU (DM (PTKANT ja)) (SIMPX (VF (PX (APPR mit) (NX (ART dem) (NN zug)))) (LK (VXFIN (VAFIN ist))) (MF (NX (PPER es)) (ADJX (ADJD moglich))))), (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VAFIN ist))))], 'auto preterminal span': (9, 27), 'span': (9, 27), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU ja mit dem zug ist es moglich)
		(SIMPX das ist)
		(SIMPX
			(SIMPX stundlich fahrt ein zug um achtundfunfzig die volle stunde immer achtundfunfzig)
			[01;31m(SU[00m
				(SIMPX
					(VF der)
					(LK dauert)
					(MF dann drei stunden und zwanzig))[01;31m)[00m)
		(SU man mus da aber bedenken das man in dortmund umsteigen muste)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJD', 'VVFIN', 'ART', 'NN', 'APPR', 'CARD', 'ART', 'ADJA', 'NN', 'ADV', 'CARD', 'PDS', 'VVFIN', 'ADV', 'CARD', 'NN', 'KON', 'CARD'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (9, 27), 'span': (20, 27), 'left siblings': ['SIMPX'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja mit dem zug ist es moglich das ist stundlich fahrt ein zug um achtundfunfzig die volle stunde immer achtundfunfzig der dauert dann drei stunden und zwanzig man mus da aber bedenken das man in dortmund umsteigen muste)

Sentence 663:
5 Initial errors
0 on fringe, 4 iterations
2 Error:UNSET move
1 Error:UNSET add
1 Error:UNSET remove
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU ja selbstverstandlich)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				[01;36m(SIMPX[00m
					(VF sie)
					(LK sagten)
					(MF jetzt eben)[01;36m)[00m
				[01;31m(NF[00m
					(SIMPX
						[01;36m(SIMPX[00m
							(VF sie)
							(LK mochten)[01;36m)[00m
						(MF zentral))[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SIMPX', 'NF'], 'mover info': [('NF', (6, 9))], 'old_family': ['VF', 'LK', 'MF', 'NF'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'ADV', 'PPER', 'VMFIN', 'ADJD'), 'start right siblings': [], 'end left siblings': ['SIMPX'], 'auto preterminal span': (2, 9), 'movers': ['NF'], 'old_parent': 'SIMPX', 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU ja selbstverstandlich)
		[01;31m(SU[00m
			(SIMPX sie sagten jetzt eben)
			[01;31m(NF[00m
				(SIMPX
					[01;36m(SIMPX[00m
						(VF sie)
						(LK mochten)[01;36m)[00m
					(MF zentral))[01;31m)[00m[01;31m)[00m))
Step:UNSET add
{'subtrees': ['VF', 'LK'], 'family': ['SIMPX', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VMFIN'), 'right siblings': [(MF (ADJX (ADJD zentral)))], 'left siblings': [], 'auto preterminal span': (6, 8), 'span': (6, 8), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU ja selbstverstandlich)
		[01;31m(SU[00m
			(SIMPX sie sagten jetzt eben)
			[01;31m(NF[00m
				(SIMPX
					(SIMPX sie mochten)
					(MF zentral))[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['SIMPX', 'NF'], 'family': ['SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'PPER', 'VVFIN', 'ADV', 'ADV', 'PPER', 'VMFIN', 'ADJD'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 9), 'span': (2, 9), 'left siblings': ['SU'], 'label': 'SU', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU ja selbstverstandlich)
		(SIMPX sie sagten jetzt eben)
		[01;31m(NF[00m
			(SIMPX
				(SIMPX sie mochten)
				(MF zentral))[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SU', 'SIMPX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'PPER', 'VVFIN', 'ADV', 'ADV', 'PPER', 'VMFIN', 'ADJD'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 9), 'span': (6, 9), 'left siblings': ['SU', 'SIMPX'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja selbstverstandlich sie sagten jetzt eben sie mochten zentral)

Sentence 664:
4 Initial errors
0 on fringe, 2 iterations
2 Error:Different label
2 Error:Clause Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU hundert mark)
		[01;31m(SU[00m
			(DM also)
			(SIMPX ich sehe jetzt hier gerade)
			(SIMPX habe ich einmal das hotel am thielenplatz)
			(SIMPX
				(VF das)
				[01;36m(FKOORD[00m [01;31m(LKMN[00m
					(LKM liegt sehr zentral)
					(KON und)
					(LKM hat auch einen konferenzraum)[01;31m)[00m[01;36m)[00m)
			[01;36m(SU[00m
				(SIMPX
					(KOORD und)
					(VF da)
					(LK ware)
					(MF die preiskategorie fur ein einzelzimmer zwischen funfundachtzig und hundert dreisig mark))[01;36m)[00m[01;31m)[00m))
Step:Different label
{'family': ['VF', 'FKOORD'], 'auto preterminal span': (16, 24), 'span': (16, 24), 'subtrees': ['LKM', 'KON', 'LKM'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('VVFIN', 'ADV', 'ADJD', 'KON', 'VAFIN', 'ADV', 'ART', 'NN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('LKMN', 'FKOORD')}
(TOP
	(TURN
		(SU hundert mark)
		[01;31m(SU[00m
			(DM also)
			(SIMPX ich sehe jetzt hier gerade)
			(SIMPX habe ich einmal das hotel am thielenplatz)
			(SIMPX das liegt sehr zentral und hat auch einen konferenzraum)
			[01;36m(SU[00m
				(SIMPX
					(KOORD und)
					(VF da)
					(LK ware)
					(MF die preiskategorie fur ein einzelzimmer zwischen funfundachtzig und hundert dreisig mark))[01;36m)[00m[01;31m)[00m))
Step:Clause Attachment
{'new_parent': 'TURN', 'new_family': ['SU', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SU'], 'mover info': [('DM', (2, 3)), ('SIMPX', (3, 8)), ('SIMPX', (8, 15)), ('SIMPX', (15, 24))], 'old_family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'start left siblings': [], 'auto preterminals': ('CARD', 'NN', 'ADV', 'PPER', 'VVFIN', 'ADV', 'ADV', 'ADV', 'VAFIN', 'PPER', 'ADV', 'ART', 'NN', 'APPRART', 'NE', 'PDS', 'VVFIN', 'ADV', 'ADJD', 'KON', 'VAFIN', 'ADV', 'ART', 'NN', 'KON', 'ADV', 'VAFIN', 'ART', 'NN', 'APPR', 'ART', 'NN', 'APPR', 'CARD', 'KON', 'CARD', 'CARD', 'NN'), 'start right siblings': ['SIMPX'], 'end left siblings': ['SU'], 'auto preterminal span': (0, 38), 'movers': ['DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'old_parent': 'SU', 'end right siblings': ['SU'], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP hundert mark also ich sehe jetzt hier gerade habe ich einmal das hotel am thielenplatz das liegt sehr zentral und hat auch einen konferenzraum und da ware die preiskategorie fur ein einzelzimmer zwischen funfundachtzig und hundert dreisig mark)

Sentence 665:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU ja ich rufe dann da an und erledige das fur sie)
		[01;36m(SIMPX[00m
			(SU
				(SIMPX sie mussen mir nur personalien geben)
				(ADVX und dann))[01;36m)[00m))
Step:Unary
{'subtrees': ['SU'], 'family': ['SU', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VMFIN', 'PPER', 'ADV', 'NN', 'VVINF', 'KON', 'ADV'), 'right siblings': [], 'left siblings': [(SU (DM (PTKANT ja)) (SIMPX (VF (NX (PPER ich))) (FKOORD (LKMVC (LK (VXFIN (VVFIN rufe))) (MF (ADVX (ADV dann)) (ADVX (ADV da))) (VC (PTKVZ an))) (KON und) (LKM (LK (VXFIN (VVFIN erledige))) (MF (NX (PDS das)) (PX (APPR fur) (NX (PPER sie))))))))], 'auto preterminal span': (11, 19), 'span': (11, 19), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'add'}
(TOP ja ich rufe dann da an und erledige das fur sie sie mussen mir nur personalien geben und dann)

Sentence 666:
3 Initial errors
0 on fringe, 2 iterations
2 Error:UNSET move
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SU[00m
	(TOP
		(TURN
			[01;31m(SU[00m
				(DM
					(PTKANT ja))[01;31m)[00m
			[01;31m(SU[00m
				(SIMPX
					(LK bin)
					(MF ich))[01;31m)[00m))[01;36m)[00m
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SU', 'SIMPX'], 'mover info': [('SU', (0, 1))], 'old_family': ['SU', 'SU'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'VAFIN', 'PPER'), 'start right siblings': ['SU'], 'end left siblings': [], 'auto preterminal span': (0, 3), 'movers': ['SU'], 'old_parent': 'TURN', 'POS confusion': ('PTKANT', 'PTKANT'), 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			[01;31m(SU[00m
				(DM
					(PTKANT ja))[01;31m)[00m
			(SIMPX bin ich))))
Step:Unary
{'subtrees': ['DM'], 'family': ['SU', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'VAFIN', 'PPER'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 3), 'span': (0, 1), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja bin ich)

Sentence 667:
18 Initial errors
0 on fringe, 15 iterations
2 Error:Modifier Attachment
2 Error:PP Attachment
2 Error:Modifier Attachment
1 Error:UNSET add
1 Error:Unary
1 Error:Unary
1 Error:Single Word Phrase
1 Error:Unary
1 Error:Unary
1 Error:Modifier Attachment
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU
			(DM guten tag)
			[01;36m(DM[00m
				[01;36m(NX[00m
					(DM frau bergmann)
					(DM offergeld)[01;36m)[00m[01;36m)[00m
			(NX mein name))
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF ich)
				(LK habe)
				(MF [01;33m(NX (MF[00m
					(NX
						(ART ein)
						(ADJX paar)
						[01;31m(NX[00m
							[01;31m(NX[00m
								(NN fragen) [01;33mMF) NX)[00m
								[01;31m(PX[00m
									(APPR an)
									[01;36m(VF[00m
										(NX
											(PPER sie))[01;36m)[00m[01;31m)[00m[01;31m)[00m
							[01;31m(PX[00m
								[01;36m(VXFIN[00m
									[01;36m(LK[00m
										(APPR bezuglich)[01;36m)[00m[01;36m)[00m
								(NX einer geschaftsreise nach hannover)[01;31m)[00m[01;31m)[00m))[01;31m)[00m[01;31m)[00m
		[01;36m(SIMPX[00m
			(SU
				[01;36m(VF[00m
					(ADVX
						(ADVX erst)
						(ADVX mal))[01;36m)[00m
				[01;31m(SIMPX[00m
					(LK ist)
					(MF
						(NX es)
						[01;36m(NX[00m
							(ADVX grundsatzlich)
							[01;31m(ADJX[00m
								(ADJD moglich)[01;31m)[00m[01;36m)[00m)
					(NF mit dem flugzeug nach hannover zu fliegen)[01;31m)[00m)[01;36m)[00m))
Step:Modifier Attachment
{'new_parent': 'NX', 'new_family': ['ART', 'ADJX', 'NN', 'PX'], 'mover info': [('ART', (9, 10)), ('ADJX', (10, 11))], 'old_family': ['ART', 'ADJX', 'NX'], 'start left siblings': [], 'auto preterminals': ('ART', 'PIDAT', 'NN', 'APPR', 'PPER', 'APPR', 'ART', 'NN', 'APPR', 'NE'), 'start right siblings': ['NX'], 'end left siblings': [], 'auto preterminal span': (9, 19), 'adding node already present': False, 'movers': ['ART', 'ADJX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': ['NN', 'PX'], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(SU
			(DM guten tag)
			[01;36m(DM[00m
				[01;36m(NX[00m
					(DM frau bergmann)
					(DM offergeld)[01;36m)[00m[01;36m)[00m
			(NX mein name))
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF ich)
				(LK habe)
				(MF
					(NX
						[01;31m(NX[00m
							[01;36m(NX[00m
								(MF
									(ART ein)
									(ADJX paar)
									(NN fragen))[01;36m)[00m
							[01;31m(PX[00m
								(APPR an)
								[01;36m(VF[00m
									(NX
										(PPER sie))[01;36m)[00m[01;31m)[00m[01;31m)[00m
						[01;31m(PX[00m
							[01;36m(VXFIN[00m
								[01;36m(LK[00m
									(APPR bezuglich)[01;36m)[00m[01;36m)[00m
							(NX einer geschaftsreise nach hannover)[01;31m)[00m))[01;31m)[00m[01;31m)[00m
		[01;36m(SIMPX[00m
			(SU
				[01;36m(VF[00m
					(ADVX
						(ADVX erst)
						(ADVX mal))[01;36m)[00m
				[01;31m(SIMPX[00m
					(LK ist)
					(MF
						(NX es)
						[01;36m(NX[00m
							(ADVX grundsatzlich)
							[01;31m(ADJX[00m
								(ADJD moglich)[01;31m)[00m[01;36m)[00m)
					(NF mit dem flugzeug nach hannover zu fliegen)[01;31m)[00m)[01;36m)[00m))
Step:PP Attachment
{'new_parent': 'PX', 'new_family': ['PX', 'APPR', 'NX'], 'mover info': [('PX', (12, 14))], 'old_family': ['MF', 'PX'], 'start left siblings': ['MF'], 'auto preterminals': ('ART', 'PIDAT', 'NN', 'APPR', 'PPER', 'APPR', 'ART', 'NN', 'APPR', 'NE'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (9, 19), 'movers': ['PX'], 'old_parent': 'NX', 'end right siblings': ['APPR', 'NX'], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU
			(DM guten tag)
			[01;36m(DM[00m
				[01;36m(NX[00m
					(DM frau bergmann)
					(DM offergeld)[01;36m)[00m[01;36m)[00m
			(NX mein name))
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF ich)
				(LK habe)
				(MF
					(NX
						(NX ein paar fragen)
						[01;31m(PX[00m
							[01;31m(PX[00m
								(APPR an)
								[01;36m(VF[00m
									(NX
										(PPER sie))[01;36m)[00m[01;31m)[00m
							[01;36m(VXFIN[00m
								[01;36m(LK[00m
									(APPR bezuglich)[01;36m)[00m[01;36m)[00m
							(NX einer geschaftsreise nach hannover)[01;31m)[00m))[01;31m)[00m[01;31m)[00m
		[01;36m(SIMPX[00m
			(SU
				[01;36m(VF[00m
					(ADVX
						(ADVX erst)
						(ADVX mal))[01;36m)[00m
				[01;31m(SIMPX[00m
					(LK ist)
					(MF
						(NX es)
						[01;36m(NX[00m
							(ADVX grundsatzlich)
							[01;31m(ADJX[00m
								(ADJD moglich)[01;31m)[00m[01;36m)[00m)
					(NF mit dem flugzeug nach hannover zu fliegen)[01;31m)[00m)[01;36m)[00m))
Step:Modifier Attachment
{'new_parent': 'SIMPX', 'new_family': ['ADVX', 'LK', 'MF', 'NF'], 'mover info': [('ADVX', (19, 21))], 'old_family': ['ADVX', 'SIMPX'], 'start left siblings': [], 'auto preterminals': ('ADV', 'ADV', 'VAFIN', 'PPER', 'ADV', 'ADJD', 'APPR', 'ART', 'NN', 'APPR', 'NE', 'PTKZU', 'VVINF'), 'start right siblings': ['SIMPX'], 'end left siblings': [], 'auto preterminal span': (19, 32), 'movers': ['ADVX'], 'old_parent': 'SU', 'end right siblings': ['LK', 'MF', 'NF'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU
			(DM guten tag)
			[01;36m(DM[00m
				[01;36m(NX[00m
					(DM frau bergmann)
					(DM offergeld)[01;36m)[00m[01;36m)[00m
			(NX mein name))
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF ich)
				(LK habe)
				(MF
					(NX
						(NX ein paar fragen)
						[01;31m(PX[00m
							[01;31m(PX[00m
								(APPR an)
								[01;36m(VF[00m
									(NX
										(PPER sie))[01;36m)[00m[01;31m)[00m
							[01;36m(VXFIN[00m
								[01;36m(LK[00m
									(APPR bezuglich)[01;36m)[00m[01;36m)[00m
							(NX einer geschaftsreise nach hannover)[01;31m)[00m))[01;31m)[00m[01;31m)[00m
		(SU
			(SIMPX
				[01;36m(VF[00m
					(ADVX
						(ADVX erst)
						(ADVX mal))[01;36m)[00m
				(LK ist)
				(MF
					(NX es)
					[01;36m(NX[00m
						(ADVX grundsatzlich)
						[01;31m(ADJX[00m
							(ADJD moglich)[01;31m)[00m[01;36m)[00m)
				(NF mit dem flugzeug nach hannover zu fliegen)))))
Step:UNSET add
{'subtrees': ['DM', 'DM'], 'family': ['DM', 'NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'NE', 'NE'), 'right siblings': [(NX (PPOSAT mein) (NN name))], 'left siblings': [(DM (NX (ADJX (ADJA guten)) (NN tag)))], 'auto preterminal span': (2, 5), 'span': (2, 5), 'parent': 'SU', 'label': 'NX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM guten tag)
			[01;36m(DM[00m
				(NX
					(DM frau bergmann)
					(DM offergeld))[01;36m)[00m
			(NX mein name))
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF ich)
				(LK habe)
				(MF
					(NX
						(NX ein paar fragen)
						[01;31m(PX[00m
							[01;31m(PX[00m
								(APPR an)
								[01;36m(VF[00m
									(NX
										(PPER sie))[01;36m)[00m[01;31m)[00m
							[01;36m(VXFIN[00m
								[01;36m(LK[00m
									(APPR bezuglich)[01;36m)[00m[01;36m)[00m
							(NX einer geschaftsreise nach hannover)[01;31m)[00m))[01;31m)[00m[01;31m)[00m
		(SU
			(SIMPX
				[01;36m(VF[00m
					(ADVX
						(ADVX erst)
						(ADVX mal))[01;36m)[00m
				(LK ist)
				(MF
					(NX es)
					[01;36m(NX[00m
						(ADVX grundsatzlich)
						[01;31m(ADJX[00m
							(ADJD moglich)[01;31m)[00m[01;36m)[00m)
				(NF mit dem flugzeug nach hannover zu fliegen)))))
Step:Unary
{'subtrees': ['NX'], 'family': ['DM', 'DM', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'NE', 'NE'), 'right siblings': [(NX (PPOSAT mein) (NN name))], 'left siblings': [(DM (NX (ADJX (ADJA guten)) (NN tag)))], 'auto preterminal span': (2, 5), 'span': (2, 5), 'parent': 'SU', 'label': 'DM', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU guten tag frau bergmann offergeld mein name)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF ich)
				(LK habe)
				(MF
					(NX
						(NX ein paar fragen)
						[01;31m(PX[00m
							[01;31m(PX[00m
								(APPR an)
								[01;36m(VF[00m
									(NX
										(PPER sie))[01;36m)[00m[01;31m)[00m
							[01;36m(VXFIN[00m
								[01;36m(LK[00m
									(APPR bezuglich)[01;36m)[00m[01;36m)[00m
							(NX einer geschaftsreise nach hannover)[01;31m)[00m))[01;31m)[00m[01;31m)[00m
		(SU
			(SIMPX
				[01;36m(VF[00m
					(ADVX
						(ADVX erst)
						(ADVX mal))[01;36m)[00m
				(LK ist)
				(MF
					(NX es)
					[01;36m(NX[00m
						(ADVX grundsatzlich)
						[01;31m(ADJX[00m
							(ADJD moglich)[01;31m)[00m[01;36m)[00m)
				(NF mit dem flugzeug nach hannover zu fliegen)))))
Step:Unary
{'subtrees': ['NX'], 'family': ['APPR', 'VF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER',), 'right siblings': [], 'left siblings': [(APPR an)], 'auto preterminal span': (13, 14), 'span': (13, 14), 'parent': 'PX', 'label': 'VF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU guten tag frau bergmann offergeld mein name)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF ich)
				(LK habe)
				(MF
					(NX
						(NX ein paar fragen)
						[01;31m(PX[00m
							[01;31m(PX[00m
								(APPR an)
								(VF sie)[01;31m)[00m
							[01;36m(VXFIN[00m
								[01;36m(LK[00m
									(APPR bezuglich)[01;36m)[00m[01;36m)[00m
							(NX einer geschaftsreise nach hannover)[01;31m)[00m))[01;31m)[00m[01;31m)[00m
		(SU
			(SIMPX
				[01;36m(VF[00m
					(ADVX
						(ADVX erst)
						(ADVX mal))[01;36m)[00m
				(LK ist)
				(MF
					(NX es)
					[01;36m(NX[00m
						(ADVX grundsatzlich)
						[01;31m(ADJX[00m
							(ADJD moglich)[01;31m)[00m[01;36m)[00m)
				(NF mit dem flugzeug nach hannover zu fliegen)))))
Step:Single Word Phrase
{'subtrees': ['APPR'], 'family': ['PX', 'LK', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('APPR',), 'right siblings': [(NX (NX (ART einer) (NN geschaftsreise)) (PX (APPR nach) (NX (NE hannover))))], 'left siblings': [(PX (APPR an) (VF (NX (PPER sie))))], 'auto preterminal span': (14, 15), 'span': (14, 15), 'parent': 'PX', 'label': 'LK', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SU guten tag frau bergmann offergeld mein name)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF ich)
				(LK habe)
				(MF
					(NX
						(NX ein paar fragen)
						[01;31m(PX[00m
							[01;31m(PX[00m
								(APPR an)
								(VF sie)[01;31m)[00m
							[01;36m(VXFIN[00m
								(LK
									(APPR bezuglich))[01;36m)[00m
							(NX einer geschaftsreise nach hannover)[01;31m)[00m))[01;31m)[00m[01;31m)[00m
		(SU
			(SIMPX
				[01;36m(VF[00m
					(ADVX
						(ADVX erst)
						(ADVX mal))[01;36m)[00m
				(LK ist)
				(MF
					(NX es)
					[01;36m(NX[00m
						(ADVX grundsatzlich)
						[01;31m(ADJX[00m
							(ADJD moglich)[01;31m)[00m[01;36m)[00m)
				(NF mit dem flugzeug nach hannover zu fliegen)))))
Step:Unary
{'subtrees': ['LK'], 'family': ['PX', 'VXFIN', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR',), 'right siblings': [(NX (NX (ART einer) (NN geschaftsreise)) (PX (APPR nach) (NX (NE hannover))))], 'left siblings': [(PX (APPR an) (VF (NX (PPER sie))))], 'auto preterminal span': (14, 15), 'span': (14, 15), 'parent': 'PX', 'label': 'VXFIN', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU guten tag frau bergmann offergeld mein name)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF ich)
				(LK habe)
				(MF
					(NX
						(NX ein paar fragen)
						[01;31m(PX[00m
							[01;31m(PX[00m
								(APPR an)
								(VF sie)[01;31m)[00m
							(VXFIN bezuglich)
							(NX einer geschaftsreise nach hannover)[01;31m)[00m))[01;31m)[00m[01;31m)[00m
		(SU
			(SIMPX
				[01;36m(VF[00m
					(ADVX
						(ADVX erst)
						(ADVX mal))[01;36m)[00m
				(LK ist)
				(MF
					(NX es)
					[01;36m(NX[00m
						(ADVX grundsatzlich)
						[01;31m(ADJX[00m
							(ADJD moglich)[01;31m)[00m[01;36m)[00m)
				(NF mit dem flugzeug nach hannover zu fliegen)))))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['VF', 'LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV'), 'right siblings': [(LK (VXFIN (VAFIN ist))), (MF (NX (PPER es)) (ADVX (ADV grundsatzlich)) (ADJX (ADJD moglich))), (NF (SIMPX (MF (PX (APPR mit) (NX (ART dem) (NN flugzeug))) (PX (APPR nach) (NX (NE hannover)))) (VC (VXINF (PTKZU zu) (VVINF fliegen)))))], 'left siblings': [], 'auto preterminal span': (19, 21), 'span': (19, 21), 'parent': 'SIMPX', 'label': 'VF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU guten tag frau bergmann offergeld mein name)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF ich)
				(LK habe)
				(MF
					(NX
						(NX ein paar fragen)
						[01;31m(PX[00m
							[01;31m(PX[00m
								(APPR an)
								(VF sie)[01;31m)[00m
							(VXFIN bezuglich)
							(NX einer geschaftsreise nach hannover)[01;31m)[00m))[01;31m)[00m[01;31m)[00m
		(SU
			(SIMPX
				(VF erst mal)
				(LK ist)
				(MF
					(NX es)
					[01;36m(NX[00m
						(ADVX grundsatzlich)
						[01;31m(ADJX[00m
							(ADJD moglich)[01;31m)[00m[01;36m)[00m)
				(NF mit dem flugzeug nach hannover zu fliegen)))))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'ADJX'], 'family': ['NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADJD'), 'right siblings': [], 'left siblings': [(NX (PPER es))], 'auto preterminal span': (23, 25), 'span': (23, 25), 'parent': 'MF', 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU guten tag frau bergmann offergeld mein name)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF ich)
				(LK habe)
				(MF
					(NX
						(NX ein paar fragen)
						[01;31m(PX[00m
							[01;31m(PX[00m
								(APPR an)
								(VF sie)[01;31m)[00m
							(VXFIN bezuglich)
							(NX einer geschaftsreise nach hannover)[01;31m)[00m))[01;31m)[00m[01;31m)[00m
		(SU
			(SIMPX
				(VF erst mal)
				(LK ist)
				(MF
					(NX es)
					(NX
						(ADVX grundsatzlich)
						[01;31m(ADJX[00m
							(ADJD moglich)[01;31m)[00m))
				(NF mit dem flugzeug nach hannover zu fliegen)))))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJA', 'NN', 'NN', 'NE', 'NE', 'PPOSAT', 'NN', 'PPER', 'VAFIN', 'ART', 'PIDAT', 'NN', 'APPR', 'PPER', 'APPR', 'ART', 'NN', 'APPR', 'NE', 'ADV', 'ADV', 'VAFIN', 'PPER', 'ADV', 'ADJD', 'APPR', 'ART', 'NN', 'APPR', 'NE', 'PTKZU', 'VVINF'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 32), 'span': (7, 19), 'left siblings': ['SU'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU guten tag frau bergmann offergeld mein name)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK habe)
			(MF
				(NX
					(NX ein paar fragen)
					[01;31m(PX[00m
						[01;31m(PX[00m
							(APPR an)
							(VF sie)[01;31m)[00m
						(VXFIN bezuglich)
						(NX einer geschaftsreise nach hannover)[01;31m)[00m))[01;31m)[00m
		(SU
			(SIMPX
				(VF erst mal)
				(LK ist)
				(MF
					(NX es)
					(NX
						(ADVX grundsatzlich)
						[01;31m(ADJX[00m
							(ADJD moglich)[01;31m)[00m))
				(NF mit dem flugzeug nach hannover zu fliegen)))))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['SU', 'SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJA', 'NN', 'NN', 'NE', 'NE', 'PPOSAT', 'NN', 'PPER', 'VAFIN', 'ART', 'PIDAT', 'NN', 'APPR', 'PPER', 'APPR', 'ART', 'NN', 'APPR', 'NE', 'ADV', 'ADV', 'VAFIN', 'PPER', 'ADV', 'ADJD', 'APPR', 'ART', 'NN', 'APPR', 'NE', 'PTKZU', 'VVINF'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 32), 'span': (7, 19), 'left siblings': ['SU'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU guten tag frau bergmann offergeld mein name)
		(VF ich)
		(LK habe)
		(MF
			(NX
				(NX ein paar fragen)
				[01;31m(PX[00m
					[01;31m(PX[00m
						(APPR an)
						(VF sie)[01;31m)[00m
					(VXFIN bezuglich)
					(NX einer geschaftsreise nach hannover)[01;31m)[00m))
		(SU
			(SIMPX
				(VF erst mal)
				(LK ist)
				(MF
					(NX es)
					(NX
						(ADVX grundsatzlich)
						[01;31m(ADJX[00m
							(ADJD moglich)[01;31m)[00m))
				(NF mit dem flugzeug nach hannover zu fliegen)))))
Step:UNSET remove
{'subtrees': ['APPR', 'VF'], 'family': ['PX', 'VXFIN', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'PPER', 'APPR', 'ART', 'NN', 'APPR', 'NE'), 'right siblings': ['VXFIN', 'NX'], 'parent': 'PX', 'auto preterminal span': (12, 19), 'span': (12, 14), 'left siblings': [], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU guten tag frau bergmann offergeld mein name)
		(VF ich)
		(LK habe)
		(MF
			(NX
				(NX ein paar fragen)
				[01;31m(PX[00m
					(APPR an)
					(VF sie)
					(VXFIN bezuglich)
					(NX einer geschaftsreise nach hannover)[01;31m)[00m))
		(SU
			(SIMPX
				(VF erst mal)
				(LK ist)
				(MF
					(NX es)
					(NX
						(ADVX grundsatzlich)
						[01;31m(ADJX[00m
							(ADJD moglich)[01;31m)[00m))
				(NF mit dem flugzeug nach hannover zu fliegen)))))
Step:UNSET remove
{'subtrees': ['APPR', 'VF', 'VXFIN', 'NX'], 'family': ['NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'PIDAT', 'NN', 'APPR', 'PPER', 'APPR', 'ART', 'NN', 'APPR', 'NE'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (9, 19), 'span': (12, 19), 'left siblings': ['NX'], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU guten tag frau bergmann offergeld mein name)
		(VF ich)
		(LK habe)
		(MF ein paar fragen an sie bezuglich einer geschaftsreise nach hannover)
		(SU
			(SIMPX
				(VF erst mal)
				(LK ist)
				(MF
					(NX es)
					(NX
						(ADVX grundsatzlich)
						[01;31m(ADJX[00m
							(ADJD moglich)[01;31m)[00m))
				(NF mit dem flugzeug nach hannover zu fliegen)))))
Step:Single Word Phrase
{'subtrees': ['ADJD'], 'family': ['ADVX', 'ADJX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADV', 'ADJD'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (23, 25), 'span': (24, 25), 'left siblings': ['ADVX'], 'label': 'ADJX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP guten tag frau bergmann offergeld mein name ich habe ein paar fragen an sie bezuglich einer geschaftsreise nach hannover erst mal ist es grundsatzlich moglich mit dem flugzeug nach hannover zu fliegen)

Sentence 668:
10 Initial errors
0 on fringe, 6 iterations
4 Error:Modifier Attachment
2 Error:Single Word Phrase
1 Error:Unary
1 Error:Unary
1 Error:Clause Attachment
1 Error:Clause Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU am wochenende gar nicht)
		[01;31m(SU[00m
			(DM ja)
			(DM nee)
			(SIMPX ich mochte montags fliegen)
			(SIMPX sieben uhr zehn past mir auch sehr gut)
			(SIMPX ich mus um zehn uhr bei einer konferenz sein)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX ware die frage)
			(SIMPX
				(VF ich)
				(LK brauchte)
				(MF ein hotel)
				(NF
					(R
						(C was)
						(MF
							[01;31m(ADJX[00m
								[01;31m(ADVX[00m
									(ADVX moglichst)
									[01;36m(ADVX[00m
										(ADV [01;33m(ADJX[00m zentral)[01;36m)[00m[01;31m)[00m
								(ADJD gelegen)[01;31m)[00m) [01;33mADJX)[00m
						(VC ist))))[01;31m)[00m
		(SU
			(SIMPX
				(VF wie lange)
				(LK ware)
				(MF
					[01;36m(ADJX[00m [01;36m(MF[00m [01;31m(ADVX[00m
						(ADV ungefahr)[01;31m)[00m[01;36m)[00m[01;36m)[00m
					[01;36m(SU[00m
						(NX
							(NX die transferzeit)
							(PX vom flughafen zum hotel))[01;36m)[00m)))))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['ADVX', 'ADJX'], 'mover info': [('ADVX', (35, 36))], 'old_family': ['ADVX', 'ADV'], 'start left siblings': [], 'auto preterminals': ('ADV', 'ADV', 'ADJD'), 'start right siblings': ['ADV'], 'end left siblings': [], 'auto preterminal span': (35, 38), 'movers': ['ADVX'], 'old_parent': 'ADVX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['ADJX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU am wochenende gar nicht)
		[01;31m(SU[00m
			(DM ja)
			(DM nee)
			(SIMPX ich mochte montags fliegen)
			(SIMPX sieben uhr zehn past mir auch sehr gut)
			(SIMPX ich mus um zehn uhr bei einer konferenz sein)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX ware die frage)
			(SIMPX ich brauchte ein hotel was moglichst zentral gelegen ist)[01;31m)[00m
		(SU
			(SIMPX
				(VF wie lange)
				(LK ware)
				(MF
					[01;36m(ADJX[00m [01;36m(MF[00m [01;31m(ADVX[00m
						(ADV ungefahr)[01;31m)[00m[01;36m)[00m[01;36m)[00m
					[01;36m(SU[00m
						(NX
							(NX die transferzeit)
							(PX vom flughafen zum hotel))[01;36m)[00m)))))
Step:Single Word Phrase
{'family': ['MF', 'NX'], 'auto preterminal span': (42, 43), 'span': (42, 43), 'subtrees': ['ADV'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'MF')}
(TOP
	(TURN
		(SU am wochenende gar nicht)
		[01;31m(SU[00m
			(DM ja)
			(DM nee)
			(SIMPX ich mochte montags fliegen)
			(SIMPX sieben uhr zehn past mir auch sehr gut)
			(SIMPX ich mus um zehn uhr bei einer konferenz sein)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX ware die frage)
			(SIMPX ich brauchte ein hotel was moglichst zentral gelegen ist)[01;31m)[00m
		(SU
			(SIMPX
				(VF wie lange)
				(LK ware)
				(MF
					[01;36m(ADJX[00m
						(MF
							(ADV ungefahr))[01;36m)[00m
					[01;36m(SU[00m
						(NX
							(NX die transferzeit)
							(PX vom flughafen zum hotel))[01;36m)[00m)))))
Step:Unary
{'subtrees': ['MF'], 'family': ['ADJX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV',), 'right siblings': [(NX (NX (ART die) (NN transferzeit)) (PX (PX (APPRART vom) (NX (NN flughafen))) (PX (APPRART zum) (NX (NN hotel)))))], 'left siblings': [], 'auto preterminal span': (42, 43), 'span': (42, 43), 'parent': 'MF', 'label': 'ADJX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU am wochenende gar nicht)
		[01;31m(SU[00m
			(DM ja)
			(DM nee)
			(SIMPX ich mochte montags fliegen)
			(SIMPX sieben uhr zehn past mir auch sehr gut)
			(SIMPX ich mus um zehn uhr bei einer konferenz sein)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX ware die frage)
			(SIMPX ich brauchte ein hotel was moglichst zentral gelegen ist)[01;31m)[00m
		(SU
			(SIMPX
				(VF wie lange)
				(LK ware)
				(MF
					(ADJX ungefahr)
					[01;36m(SU[00m
						(NX
							(NX die transferzeit)
							(PX vom flughafen zum hotel))[01;36m)[00m)))))
Step:Unary
{'subtrees': ['NX'], 'family': ['ADJX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'APPRART', 'NN', 'APPRART', 'NN'), 'right siblings': [], 'left siblings': [(ADJX (MF (ADV ungefahr)))], 'auto preterminal span': (43, 49), 'span': (43, 49), 'parent': 'MF', 'label': 'SU', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU am wochenende gar nicht)
		[01;31m(SU[00m
			(DM ja)
			(DM nee)
			(SIMPX ich mochte montags fliegen)
			(SIMPX sieben uhr zehn past mir auch sehr gut)
			(SIMPX ich mus um zehn uhr bei einer konferenz sein)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX ware die frage)
			(SIMPX ich brauchte ein hotel was moglichst zentral gelegen ist)[01;31m)[00m
		(SU wie lange ware ungefahr die transferzeit vom flughafen zum hotel)))
Step:Clause Attachment
{'subtrees': ['DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'family': ['SU', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'NN', 'ADV', 'PTKNEG', 'PTKANT', 'PTKANT', 'PPER', 'VMFIN', 'ADV', 'VVINF', 'CARD', 'NN', 'CARD', 'VVFIN', 'PPER', 'ADV', 'ADV', 'ADJD', 'PPER', 'VMFIN', 'APPR', 'CARD', 'NN', 'APPR', 'ART', 'NN', 'VAINF', 'VAFIN', 'ART', 'NN', 'PPER', 'VVFIN', 'ART', 'NN', 'PRELS', 'ADV', 'ADV', 'ADJD', 'VAFIN', 'PWAV', 'ADJD', 'VAFIN', 'ADV', 'ART', 'NN', 'APPRART', 'NN', 'APPRART', 'NN'), 'right siblings': ['SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 49), 'span': (4, 27), 'left siblings': ['SU'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU am wochenende gar nicht)
		(DM ja)
		(DM nee)
		(SIMPX ich mochte montags fliegen)
		(SIMPX sieben uhr zehn past mir auch sehr gut)
		(SIMPX ich mus um zehn uhr bei einer konferenz sein)
		[01;31m(SU[00m
			(SIMPX ware die frage)
			(SIMPX ich brauchte ein hotel was moglichst zentral gelegen ist)[01;31m)[00m
		(SU wie lange ware ungefahr die transferzeit vom flughafen zum hotel)))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['SU', 'DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'NN', 'ADV', 'PTKNEG', 'PTKANT', 'PTKANT', 'PPER', 'VMFIN', 'ADV', 'VVINF', 'CARD', 'NN', 'CARD', 'VVFIN', 'PPER', 'ADV', 'ADV', 'ADJD', 'PPER', 'VMFIN', 'APPR', 'CARD', 'NN', 'APPR', 'ART', 'NN', 'VAINF', 'VAFIN', 'ART', 'NN', 'PPER', 'VVFIN', 'ART', 'NN', 'PRELS', 'ADV', 'ADV', 'ADJD', 'VAFIN', 'PWAV', 'ADJD', 'VAFIN', 'ADV', 'ART', 'NN', 'APPRART', 'NN', 'APPRART', 'NN'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 49), 'span': (27, 39), 'left siblings': ['SU', 'DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP am wochenende gar nicht ja nee ich mochte montags fliegen sieben uhr zehn past mir auch sehr gut ich mus um zehn uhr bei einer konferenz sein ware die frage ich brauchte ein hotel was moglichst zentral gelegen ist wie lange ware ungefahr die transferzeit vom flughafen zum hotel)

Sentence 669:
18 Initial errors
0 on fringe, 13 iterations
4 Error:UNSET move
2 Error:Co-ordination
2 Error:PP Attachment
1 Error:Single Word Phrase
1 Error:UNSET remove
1 Error:Clause Attachment
1 Error:Clause Attachment
1 Error:Unary
1 Error:Unary
1 Error:Unary
1 Error:UNSET remove
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU halbe stunde)
		[01;31m(SU[00m
			(DM ja)
			[01;33m(SU (DM (ADJX[00m (DM sehr gut)[01;31m)[00m
		[01;31m(SU[00m [01;33m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF dann)
				(LK ware)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX
						(PPER ich))[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				[01;31m(SIMPX[00m
					[01;31m(VF[00m
						(PX
							(APPR um)
							(NX sieben uhr zehn))[01;31m)[00m [01;33mMF) SIMPX) ADJX) DM) SU)[00m
					(LK wurde)
					(MF ich)
					(VC losfliegen)[01;31m)[00m
				[01;36m(KOORD[00m
					(KON [01;33m(SU[00m und)[01;36m)[00m
				[01;31m(SIMPX[00m
					[01;31m(VF[00m
						(NX
							(NX acht uhr)
							(ADJX zehn))[01;31m)[00m
					(LK ware)
					(MF [01;33m(MF[00m
						(NX ich)
						(ADVX dann)
						[01;31m(PX[00m
							(PX in hannover) [01;33mMF)[00m
							(PX am flughafen)[01;31m)[00m)[01;31m)[00m[01;31m)[00m
			(DM richtig)[01;31m)[00m)) [01;33mSU)[00m
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['NX', 'VF'], 'mover info': [('VF', (8, 12))], 'old_family': ['VF', 'LK', 'MF', 'VC'], 'start left siblings': [], 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'APPR', 'CARD', 'NN', 'CARD', 'VAFIN', 'PPER', 'VVINF', 'KON', 'CARD', 'NN', 'CARD', 'VAFIN', 'PPER', 'ADV', 'APPR', 'NE', 'APPRART', 'NN', 'ITJ'), 'start right siblings': ['LK', 'MF', 'VC'], 'end left siblings': ['NX'], 'auto preterminal span': (5, 27), 'movers': ['VF'], 'old_parent': 'SIMPX', 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU halbe stunde)
		[01;31m(SU[00m
			(DM ja)
			[01;33m(SU (DM (ADJX[00m (DM sehr gut)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF dann)
				(LK ware)
				(MF
					(NX ich)
					[01;31m(VF[00m
						(PX
							(APPR um)
							(NX sieben uhr zehn))[01;31m)[00m)) [01;33mADJX) DM) SU)[00m
			[01;31m(SIMPX[00m
				[01;31m(SIMPX[00m
					(LK wurde)
					(MF ich)
					(VC losfliegen)[01;31m)[00m
				[01;36m(KOORD[00m
					(KON [01;33m(SU[00m und)[01;36m)[00m
				[01;31m(SIMPX[00m
					[01;31m(VF[00m
						(NX
							(NX acht uhr)
							(ADJX zehn))[01;31m)[00m
					(LK ware)
					(MF [01;33m(MF[00m
						(NX ich)
						(ADVX dann)
						[01;31m(PX[00m
							(PX in hannover) [01;33mMF)[00m
							(PX am flughafen)[01;31m)[00m)[01;31m)[00m[01;31m)[00m
			(DM richtig)[01;31m)[00m)) [01;33mSU)[00m
Step:Co-ordination
{'new_parent': 'SU', 'new_family': ['SIMPX', 'SIMPX', 'KON', 'SIMPX', 'DM'], 'mover info': [('KON', (15, 16)), ('SIMPX', (16, 26))], 'old_family': ['SIMPX', 'KON', 'SIMPX'], 'start left siblings': ['SIMPX'], 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'APPR', 'CARD', 'NN', 'CARD', 'VAFIN', 'PPER', 'VVINF', 'KON', 'CARD', 'NN', 'CARD', 'VAFIN', 'PPER', 'ADV', 'APPR', 'NE', 'APPRART', 'NN', 'ITJ'), 'start right siblings': [], 'end left siblings': ['SIMPX', 'SIMPX'], 'auto preterminal span': (5, 27), 'adding node already present': False, 'movers': ['KON', 'SIMPX'], 'old_parent': 'SIMPX', 'added and moved': True, 'end right siblings': ['DM'], 'classified_type': 'Co-ordination', 'type': 'move', 'added label': 'SU'}
(TOP
	(TURN
		(SU halbe stunde)
		[01;31m(SU[00m
			(DM ja)
			[01;33m(SU (DM (ADJX[00m (DM sehr gut)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF dann)
				(LK ware)
				(MF
					(NX ich)
					[01;31m(VF[00m
						(PX
							(APPR um)
							(NX sieben uhr zehn))[01;31m)[00m)) [01;33mADJX) DM) SU)[00m
			[01;31m(SIMPX[00m
				(LK wurde)
				(MF ich)
				(VC losfliegen)[01;31m)[00m
			(SU
				[01;36m(KOORD[00m
					(KON und)[01;36m)[00m
				[01;31m(SIMPX[00m
					[01;31m(VF[00m
						(NX
							(NX acht uhr)
							(ADJX zehn))[01;31m)[00m
					(LK ware)
					(MF [01;33m(MF[00m
						(NX ich)
						(ADVX dann)
						[01;31m(PX[00m
							(PX in hannover) [01;33mMF)[00m
							(PX am flughafen)[01;31m)[00m)[01;31m)[00m
				(DM richtig))[01;31m)[00m))
Step:PP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'ADVX', 'PX', 'PX'], 'mover info': [('PX', (22, 24))], 'old_family': ['PX', 'PX'], 'start left siblings': [], 'auto preterminals': ('PPER', 'ADV', 'APPR', 'NE', 'APPRART', 'NN'), 'start right siblings': ['PX'], 'end left siblings': ['NX', 'ADVX'], 'auto preterminal span': (20, 26), 'adding node already present': False, 'movers': ['PX'], 'old_parent': 'PX', 'added and moved': True, 'end right siblings': ['PX'], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'MF'}
(TOP
	(TURN
		(SU halbe stunde)
		[01;31m(SU[00m
			(DM ja)
			[01;33m(SU (DM (ADJX[00m (DM sehr gut)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF dann)
				(LK ware)
				(MF
					(NX ich)
					[01;31m(VF[00m
						(PX
							(APPR um)
							(NX sieben uhr zehn))[01;31m)[00m)) [01;33mADJX) DM) SU)[00m
			[01;31m(SIMPX[00m
				(LK wurde)
				(MF ich)
				(VC losfliegen)[01;31m)[00m
			(SU
				[01;36m(KOORD[00m
					(KON und)[01;36m)[00m
				[01;31m(SIMPX[00m
					[01;31m(VF[00m
						(NX
							(NX acht uhr)
							(ADJX zehn))[01;31m)[00m
					(LK ware)
					(MF ich dann in hannover am flughafen)[01;31m)[00m
				(DM richtig))[01;31m)[00m))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['KOORD', 'SIMPX', 'DM'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON',), 'right siblings': [(SIMPX (VF (NX (NX (ADJX (CARD acht)) (NN uhr)) (ADJX (CARD zehn)))) (LK (VXFIN (VAFIN ware))) (MF (MF (NX (PPER ich)) (ADVX (ADV dann)) (PX (APPR in) (NX (NE hannover)))) (PX (APPRART am) (NX (NN flughafen))))), (DM (ITJ richtig))], 'left siblings': [], 'auto preterminal span': (15, 16), 'span': (15, 16), 'parent': 'SU', 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SU halbe stunde)
		[01;31m(SU[00m
			(DM ja)
			[01;33m(SU (DM (ADJX[00m (DM sehr gut)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF dann)
				(LK ware)
				(MF
					(NX ich)
					[01;31m(VF[00m
						(PX
							(APPR um)
							(NX sieben uhr zehn))[01;31m)[00m)) [01;33mADJX) DM) SU)[00m
			[01;31m(SIMPX[00m
				(LK wurde)
				(MF ich)
				(VC losfliegen)[01;31m)[00m
			(SU
				(KOORD und)
				[01;31m(SIMPX[00m
					[01;31m(VF[00m
						(NX
							(NX acht uhr)
							(ADJX zehn))[01;31m)[00m
					(LK ware)
					(MF ich dann in hannover am flughafen)[01;31m)[00m
				(DM richtig))[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['DM', 'DM'], 'family': ['SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJA', 'NN', 'PTKANT', 'ADV', 'ADJD', 'ADV', 'VAFIN', 'PPER', 'APPR', 'CARD', 'NN', 'CARD', 'VAFIN', 'PPER', 'VVINF', 'KON', 'CARD', 'NN', 'CARD', 'VAFIN', 'PPER', 'ADV', 'APPR', 'NE', 'APPRART', 'NN', 'ITJ'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 27), 'span': (2, 5), 'left siblings': ['SU'], 'label': 'SU', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU halbe stunde)
		(DM ja)
		[01;33m(SU (DM (ADJX[00m (DM sehr gut)
		[01;31m(SU[00m
			(SIMPX
				(VF dann)
				(LK ware)
				(MF
					(NX ich)
					[01;31m(VF[00m
						(PX
							(APPR um)
							(NX sieben uhr zehn))[01;31m)[00m)) [01;33mADJX) DM) SU)[00m
			[01;31m(SIMPX[00m
				(LK wurde)
				(MF ich)
				(VC losfliegen)[01;31m)[00m
			(SU
				(KOORD und)
				[01;31m(SIMPX[00m
					[01;31m(VF[00m
						(NX
							(NX acht uhr)
							(ADJX zehn))[01;31m)[00m
					(LK ware)
					(MF ich dann in hannover am flughafen)[01;31m)[00m
				(DM richtig))[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX', 'SU'], 'family': ['SU', 'DM', 'DM', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJA', 'NN', 'PTKANT', 'ADV', 'ADJD', 'ADV', 'VAFIN', 'PPER', 'APPR', 'CARD', 'NN', 'CARD', 'VAFIN', 'PPER', 'VVINF', 'KON', 'CARD', 'NN', 'CARD', 'VAFIN', 'PPER', 'ADV', 'APPR', 'NE', 'APPRART', 'NN', 'ITJ'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 27), 'span': (5, 27), 'left siblings': ['SU', 'DM', 'DM'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU halbe stunde)
		(DM ja)
		[01;36m(ADJX[00m
			[01;36m(DM[00m
				[01;36m(SU[00m
					(DM sehr gut)
					(SIMPX
						(VF dann)
						(LK ware)
						(MF
							(NX ich)
							[01;31m(VF[00m
								(PX
									(APPR um)
									(NX sieben uhr zehn))[01;31m)[00m))[01;36m)[00m[01;36m)[00m[01;36m)[00m
		[01;31m(SIMPX[00m
			(LK wurde)
			(MF ich)
			(VC losfliegen)[01;31m)[00m
		(SU
			(KOORD und)
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(NX
						(NX acht uhr)
						(ADJX zehn))[01;31m)[00m
				(LK ware)
				(MF ich dann in hannover am flughafen)[01;31m)[00m
			(DM richtig))))
Step:Clause Attachment
{'subtrees': ['DM', 'SIMPX'], 'family': ['SU', 'DM', 'SU', 'SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADJD', 'ADV', 'VAFIN', 'PPER', 'APPR', 'CARD', 'NN', 'CARD'), 'right siblings': [(SIMPX (LK (VXFIN (VAFIN wurde))) (MF (NX (PPER ich))) (VC (VXINF (VVINF losfliegen)))), (SU (KOORD (KON und)) (SIMPX (VF (NX (NX (ADJX (CARD acht)) (NN uhr)) (ADJX (CARD zehn)))) (LK (VXFIN (VAFIN ware))) (MF (MF (NX (PPER ich)) (ADVX (ADV dann)) (PX (APPR in) (NX (NE hannover)))) (PX (APPRART am) (NX (NN flughafen))))) (DM (ITJ richtig)))], 'left siblings': [(SU (NX (ADJX (ADJA halbe)) (NN stunde))), (DM (PTKANT ja))], 'auto preterminal span': (3, 12), 'span': (3, 12), 'parent': 'TURN', 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU halbe stunde)
		(DM ja)
		[01;36m(ADJX[00m
			[01;36m(DM[00m
				(SU
					(DM sehr gut)
					(SIMPX
						(VF dann)
						(LK ware)
						(MF
							(NX ich)
							[01;31m(VF[00m
								(PX
									(APPR um)
									(NX sieben uhr zehn))[01;31m)[00m)))[01;36m)[00m[01;36m)[00m
		[01;31m(SIMPX[00m
			(LK wurde)
			(MF ich)
			(VC losfliegen)[01;31m)[00m
		(SU
			(KOORD und)
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(NX
						(NX acht uhr)
						(ADJX zehn))[01;31m)[00m
				(LK ware)
				(MF ich dann in hannover am flughafen)[01;31m)[00m
			(DM richtig))))
Step:Unary
{'subtrees': ['SU'], 'family': ['SU', 'DM', 'DM', 'SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADJD', 'ADV', 'VAFIN', 'PPER', 'APPR', 'CARD', 'NN', 'CARD'), 'right siblings': [(SIMPX (LK (VXFIN (VAFIN wurde))) (MF (NX (PPER ich))) (VC (VXINF (VVINF losfliegen)))), (SU (KOORD (KON und)) (SIMPX (VF (NX (NX (ADJX (CARD acht)) (NN uhr)) (ADJX (CARD zehn)))) (LK (VXFIN (VAFIN ware))) (MF (MF (NX (PPER ich)) (ADVX (ADV dann)) (PX (APPR in) (NX (NE hannover)))) (PX (APPRART am) (NX (NN flughafen))))) (DM (ITJ richtig)))], 'left siblings': [(SU (NX (ADJX (ADJA halbe)) (NN stunde))), (DM (PTKANT ja))], 'auto preterminal span': (3, 12), 'span': (3, 12), 'parent': 'TURN', 'label': 'DM', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU halbe stunde)
		(DM ja)
		[01;36m(ADJX[00m
			(DM
				(SU
					(DM sehr gut)
					(SIMPX
						(VF dann)
						(LK ware)
						(MF
							(NX ich)
							[01;31m(VF[00m
								(PX
									(APPR um)
									(NX sieben uhr zehn))[01;31m)[00m))))[01;36m)[00m
		[01;31m(SIMPX[00m
			(LK wurde)
			(MF ich)
			(VC losfliegen)[01;31m)[00m
		(SU
			(KOORD und)
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(NX
						(NX acht uhr)
						(ADJX zehn))[01;31m)[00m
				(LK ware)
				(MF ich dann in hannover am flughafen)[01;31m)[00m
			(DM richtig))))
Step:Unary
{'subtrees': ['DM'], 'family': ['SU', 'DM', 'ADJX', 'SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADJD', 'ADV', 'VAFIN', 'PPER', 'APPR', 'CARD', 'NN', 'CARD'), 'right siblings': [(SIMPX (LK (VXFIN (VAFIN wurde))) (MF (NX (PPER ich))) (VC (VXINF (VVINF losfliegen)))), (SU (KOORD (KON und)) (SIMPX (VF (NX (NX (ADJX (CARD acht)) (NN uhr)) (ADJX (CARD zehn)))) (LK (VXFIN (VAFIN ware))) (MF (MF (NX (PPER ich)) (ADVX (ADV dann)) (PX (APPR in) (NX (NE hannover)))) (PX (APPRART am) (NX (NN flughafen))))) (DM (ITJ richtig)))], 'left siblings': [(SU (NX (ADJX (ADJA halbe)) (NN stunde))), (DM (PTKANT ja))], 'auto preterminal span': (3, 12), 'span': (3, 12), 'parent': 'TURN', 'label': 'ADJX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU halbe stunde)
		(DM ja)
		(ADJX
			(DM
				(SU
					(DM sehr gut)
					(SIMPX
						(VF dann)
						(LK ware)
						(MF
							(NX ich)
							[01;31m(VF[00m
								(PX
									(APPR um)
									(NX sieben uhr zehn))[01;31m)[00m)))))
		[01;31m(SIMPX[00m
			(LK wurde)
			(MF ich)
			(VC losfliegen)[01;31m)[00m
		(SU
			(KOORD und)
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(NX
						(NX acht uhr)
						(ADJX zehn))[01;31m)[00m
				(LK ware)
				(MF ich dann in hannover am flughafen)[01;31m)[00m
			(DM richtig))))
Step:Unary
{'subtrees': ['PX'], 'family': ['NX', 'VF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'APPR', 'CARD', 'NN', 'CARD'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (7, 12), 'span': (8, 12), 'left siblings': ['NX'], 'label': 'VF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU halbe stunde)
		(DM ja)
		(ADJX sehr gut dann ware ich um sieben uhr zehn)
		[01;31m(SIMPX[00m
			(LK wurde)
			(MF ich)
			(VC losfliegen)[01;31m)[00m
		(SU
			(KOORD und)
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(NX
						(NX acht uhr)
						(ADJX zehn))[01;31m)[00m
				(LK ware)
				(MF ich dann in hannover am flughafen)[01;31m)[00m
			(DM richtig))))
Step:UNSET remove
{'subtrees': ['LK', 'MF', 'VC'], 'family': ['SU', 'DM', 'ADJX', 'SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJA', 'NN', 'PTKANT', 'ADV', 'ADJD', 'ADV', 'VAFIN', 'PPER', 'APPR', 'CARD', 'NN', 'CARD', 'VAFIN', 'PPER', 'VVINF', 'KON', 'CARD', 'NN', 'CARD', 'VAFIN', 'PPER', 'ADV', 'APPR', 'NE', 'APPRART', 'NN', 'ITJ'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 27), 'span': (12, 15), 'left siblings': ['SU', 'DM', 'ADJX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU halbe stunde)
		(DM ja)
		(ADJX sehr gut dann ware ich um sieben uhr zehn)
		(LK wurde)
		(MF ich)
		(VC losfliegen)
		(SU
			(KOORD und)
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(NX
						(NX acht uhr)
						(ADJX zehn))[01;31m)[00m
				(LK ware)
				(MF ich dann in hannover am flughafen)[01;31m)[00m
			(DM richtig))))
Step:Unary
{'subtrees': ['NX'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'NN', 'CARD', 'VAFIN', 'PPER', 'ADV', 'APPR', 'NE', 'APPRART', 'NN'), 'right siblings': ['LK', 'MF'], 'parent': 'SIMPX', 'auto preterminal span': (16, 26), 'span': (16, 19), 'left siblings': [], 'label': 'VF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU halbe stunde)
		(DM ja)
		(ADJX sehr gut dann ware ich um sieben uhr zehn)
		(LK wurde)
		(MF ich)
		(VC losfliegen)
		(SU
			(KOORD und)
			[01;31m(SIMPX[00m
				(NX acht uhr zehn)
				(LK ware)
				(MF ich dann in hannover am flughafen)[01;31m)[00m
			(DM richtig))))
Step:UNSET remove
{'subtrees': ['NX', 'LK', 'MF'], 'family': ['KOORD', 'SIMPX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'CARD', 'NN', 'CARD', 'VAFIN', 'PPER', 'ADV', 'APPR', 'NE', 'APPRART', 'NN', 'ITJ'), 'right siblings': ['DM'], 'parent': 'SU', 'auto preterminal span': (15, 27), 'span': (16, 26), 'left siblings': ['KOORD'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP halbe stunde ja sehr gut dann ware ich um sieben uhr zehn wurde ich losfliegen und acht uhr zehn ware ich dann in hannover am flughafen richtig)

Sentence 670:
12 Initial errors
0 on fringe, 6 iterations
4 Error:UNSET move
3 Error:Clause Attachment
2 Error:UNSET move
1 Error:Unary
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;36m(SU[00m
			[01;31m(SU[00m
				(DM
					(ITJ gut))[01;31m)[00m
			[01;31m(SU[00m
				(SIMPX
					(VF wie)
					(LK sieht)
					(MF das mit den buchungsterminen)
					(VC aus))[01;31m)[00m[01;36m)[00m
		[01;36m(SU[00m
			[01;36m(SIMPX[00m
				[01;31m(SU[00m
					[01;31m(SIMPX[00m
						(LK ist)
						(MF das generell moglich)[01;31m)[00m[01;31m)[00m
				[01;36m(NF[00m [01;36m(SIMPX[00m [01;31m(SU[00m
					[01;36m(NF[00m
						(SIMPX
							(C das)
							(MF ich am siebten juli))[01;36m)[00m
					[01;36m(SU[00m
						(SIMPX
							(VF das)
							(LK ist)
							(MF montags))[01;36m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;36m)[00m[01;36m)[00m))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['LK', 'MF', 'SU'], 'mover info': [('SU', (12, 20))], 'old_family': ['SU', 'SU', 'SU', 'SU'], 'start left siblings': ['SU', 'SU', 'SU'], 'auto preterminals': ('ITJ', 'PWAV', 'VVFIN', 'PDS', 'APPR', 'ART', 'NN', 'PTKVZ', 'VAFIN', 'PDS', 'ADV', 'ADJD', 'KOUS', 'PPER', 'APPRART', 'ADJA', 'NN', 'PDS', 'VAFIN', 'ADV'), 'start right siblings': [], 'end left siblings': ['LK', 'MF'], 'auto preterminal span': (0, 20), 'movers': ['SU'], 'old_parent': 'TURN', 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		[01;36m(SU[00m
			[01;31m(SU[00m
				(DM
					(ITJ gut))[01;31m)[00m
			[01;31m(SU[00m
				(SIMPX
					(VF wie)
					(LK sieht)
					(MF das mit den buchungsterminen)
					(VC aus))[01;31m)[00m[01;36m)[00m
		(SU
			(SIMPX
				(LK ist)
				(MF das generell moglich)
				[01;36m(NF[00m [01;36m(SIMPX[00m [01;31m(SU[00m
					[01;36m(NF[00m
						(SIMPX
							(C das)
							(MF ich am siebten juli))[01;36m)[00m
					[01;36m(SU[00m
						(SIMPX
							(VF das)
							(LK ist)
							(MF montags))[01;36m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m))))
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['LK', 'MF', 'SIMPX', 'SU'], 'mover info': [('SIMPX', (12, 17))], 'old_family': ['SIMPX', 'SIMPX'], 'start left siblings': [], 'auto preterminals': ('VAFIN', 'PDS', 'ADV', 'ADJD', 'KOUS', 'PPER', 'APPRART', 'ADJA', 'NN', 'PDS', 'VAFIN', 'ADV'), 'start right siblings': ['SIMPX'], 'end left siblings': ['LK', 'MF'], 'auto preterminal span': (8, 20), 'adding node already present': False, 'movers': ['SIMPX'], 'old_parent': 'SU', 'added and moved': True, 'end right siblings': ['SU'], 'classified_type': 'Clause Attachment', 'type': 'move', 'added label': 'NF'}
(TOP
	(TURN
		[01;36m(SU[00m
			[01;31m(SU[00m
				(DM
					(ITJ gut))[01;31m)[00m
			[01;31m(SU[00m
				(SIMPX
					(VF wie)
					(LK sieht)
					(MF das mit den buchungsterminen)
					(VC aus))[01;31m)[00m[01;36m)[00m
		(SU
			(SIMPX
				(LK ist)
				(MF das generell moglich)
				[01;36m(NF[00m
					(SIMPX
						[01;36m(NF[00m
							(SIMPX
								(C das)
								(MF ich am siebten juli))[01;36m)[00m
						(SU das ist montags))[01;36m)[00m))))
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SU', 'SIMPX'], 'mover info': [('SU', (0, 1))], 'old_family': ['SU', 'SU', 'SU'], 'start left siblings': [], 'auto preterminals': ('ITJ', 'PWAV', 'VVFIN', 'PDS', 'APPR', 'ART', 'NN', 'PTKVZ', 'VAFIN', 'PDS', 'ADV', 'ADJD', 'KOUS', 'PPER', 'APPRART', 'ADJA', 'NN', 'PDS', 'VAFIN', 'ADV'), 'start right siblings': ['SU', 'SU'], 'end left siblings': [], 'auto preterminal span': (0, 20), 'movers': ['SU'], 'old_parent': 'TURN', 'POS confusion': ('ITJ', 'ITJ'), 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			[01;31m(SU[00m
				(DM
					(ITJ gut))[01;31m)[00m
			(SIMPX wie sieht das mit den buchungsterminen aus))
		(SU
			(SIMPX
				(LK ist)
				(MF das generell moglich)
				[01;36m(NF[00m
					(SIMPX
						[01;36m(NF[00m
							(SIMPX
								(C das)
								(MF ich am siebten juli))[01;36m)[00m
						(SU das ist montags))[01;36m)[00m))))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['NF', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'APPRART', 'ADJA', 'NN'), 'right siblings': [(SU (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VAFIN ist))) (MF (ADVX (ADV montags)))))], 'left siblings': [], 'auto preterminal span': (12, 17), 'span': (12, 17), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU
			[01;31m(SU[00m
				(DM
					(ITJ gut))[01;31m)[00m
			(SIMPX wie sieht das mit den buchungsterminen aus))
		(SU
			(SIMPX
				(LK ist)
				(MF das generell moglich)
				[01;36m(NF[00m
					(SIMPX
						(NF das ich am siebten juli)
						(SU das ist montags))[01;36m)[00m))))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'APPRART', 'ADJA', 'NN', 'PDS', 'VAFIN', 'ADV'), 'right siblings': [], 'left siblings': [(LK (VXFIN (VAFIN ist))), (MF (NX (PDS das)) (ADVX (ADV generell)) (ADJX (ADJD moglich)))], 'auto preterminal span': (12, 20), 'span': (12, 20), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU
			[01;31m(SU[00m
				(DM
					(ITJ gut))[01;31m)[00m
			(SIMPX wie sieht das mit den buchungsterminen aus))
		(SU ist das generell moglich das ich am siebten juli das ist montags)))
Step:Unary
{'subtrees': ['DM'], 'family': ['SU', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PWAV', 'VVFIN', 'PDS', 'APPR', 'ART', 'NN', 'PTKVZ'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 8), 'span': (0, 1), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP gut wie sieht das mit den buchungsterminen aus ist das generell moglich das ich am siebten juli das ist montags)

Sentence 671:
6 Initial errors
0 on fringe, 5 iterations
2 Error:UNSET move
1 Error:Unary
1 Error:Unary
1 Error:UNSET remove
1 Error:Clause Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;36m(SU[00m
			[01;31m(SU[00m
				[01;31m(DM[00m
					[01;31m(ADJX[00m
						(ADVX sehr)
						(ADJD gut)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			[01;31m(SU[00m
				(DM
					(ADJX
						(ADVX sehr)
						(ADJD gut)))[01;31m)[00m[01;36m)[00m
		[01;31m(SU[00m
			(SIMPX vier tage mochte ich bleiben)
			(SIMPX das ware dann bis zum zehnten juli)[01;31m)[00m
		(SU konnen sie da fur mich eine buchung vornehmen)))
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SU', 'DM'], 'mover info': [('SU', (0, 2))], 'old_family': ['SU', 'SU', 'SU', 'SU'], 'start left siblings': [], 'auto preterminals': ('ADV', 'ADJD', 'ADV', 'ADJD', 'CARD', 'NN', 'VMFIN', 'PPER', 'VVINF', 'PDS', 'VAFIN', 'ADV', 'APPR', 'APPRART', 'ADJA', 'NN', 'VMFIN', 'PPER', 'ADV', 'APPR', 'PPER', 'ART', 'NN', 'VVINF'), 'start right siblings': ['SU', 'SU', 'SU'], 'end left siblings': [], 'auto preterminal span': (0, 24), 'movers': ['SU'], 'old_parent': 'TURN', 'end right siblings': ['DM'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			[01;31m(SU[00m
				[01;31m(DM[00m
					[01;31m(ADJX[00m
						(ADVX sehr)
						(ADJD gut)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			(DM sehr gut))
		[01;31m(SU[00m
			(SIMPX vier tage mochte ich bleiben)
			(SIMPX das ware dann bis zum zehnten juli)[01;31m)[00m
		(SU konnen sie da fur mich eine buchung vornehmen)))
Step:Unary
{'subtrees': ['DM'], 'family': ['SU', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADJD', 'ADV', 'ADJD'), 'right siblings': ['DM'], 'parent': 'SU', 'auto preterminal span': (0, 4), 'span': (0, 2), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU
			[01;31m(DM[00m
				[01;31m(ADJX[00m
					(ADVX sehr)
					(ADJD gut)[01;31m)[00m[01;31m)[00m
			(DM sehr gut))
		[01;31m(SU[00m
			(SIMPX vier tage mochte ich bleiben)
			(SIMPX das ware dann bis zum zehnten juli)[01;31m)[00m
		(SU konnen sie da fur mich eine buchung vornehmen)))
Step:Unary
{'subtrees': ['ADVX', 'ADJD'], 'family': ['ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADJD'), 'right siblings': [], 'parent': 'DM', 'auto preterminal span': (0, 2), 'span': (0, 2), 'left siblings': [], 'label': 'ADJX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU
			[01;31m(DM[00m
				(ADVX sehr)
				(ADJD gut)[01;31m)[00m
			(DM sehr gut))
		[01;31m(SU[00m
			(SIMPX vier tage mochte ich bleiben)
			(SIMPX das ware dann bis zum zehnten juli)[01;31m)[00m
		(SU konnen sie da fur mich eine buchung vornehmen)))
Step:UNSET remove
{'subtrees': ['ADVX', 'ADJD'], 'family': ['DM', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADJD', 'ADV', 'ADJD'), 'right siblings': ['DM'], 'parent': 'SU', 'auto preterminal span': (0, 4), 'span': (0, 2), 'left siblings': [], 'label': 'DM', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU sehr gut sehr gut)
		[01;31m(SU[00m
			(SIMPX vier tage mochte ich bleiben)
			(SIMPX das ware dann bis zum zehnten juli)[01;31m)[00m
		(SU konnen sie da fur mich eine buchung vornehmen)))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADJD', 'ADV', 'ADJD', 'CARD', 'NN', 'VMFIN', 'PPER', 'VVINF', 'PDS', 'VAFIN', 'ADV', 'APPR', 'APPRART', 'ADJA', 'NN', 'VMFIN', 'PPER', 'ADV', 'APPR', 'PPER', 'ART', 'NN', 'VVINF'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 24), 'span': (4, 16), 'left siblings': ['SU'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP sehr gut sehr gut vier tage mochte ich bleiben das ware dann bis zum zehnten juli konnen sie da fur mich eine buchung vornehmen)

Sentence 672:
7 Initial errors
0 on fringe, 5 iterations
2 Error:Single Word Phrase
2 Error:UNSET move
1 Error:PP Attachment
1 Error:Modifier Attachment
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SU[00m
	(TOP
		(TURN
			(SU das ich dann abends wieder zuruckfliegen kann)
			[01;31m(SU[00m
				[01;31m(ADVX[00m
					[01;36m(MF[00m
						(ADVX ansonsten)
						(ADVX vielleicht)
						(ADVX auch)
						[01;36m(PX[00m
							(PX mit dem zug)
							(ADVX abends)[01;36m)[00m[01;36m)[00m
					[01;36m(VC[00m [01;31m(ADVX[00m
						(ADV zuruck)[01;31m)[00m[01;36m)[00m[01;31m)[00m
				(SIMPX wenn das mit dem flugzeug)[01;31m)[00m))[01;36m)[00m
Step:Single Word Phrase
{'family': ['ADVX', 'ADVX', 'ADVX', 'PX', 'ADVX', 'VC'], 'auto preterminal span': (14, 15), 'span': (14, 15), 'subtrees': ['ADV'], 'parent': 'ADVX', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'VC')}
[01;36m(SU[00m
	(TOP
		(TURN
			(SU das ich dann abends wieder zuruckfliegen kann)
			[01;31m(SU[00m
				[01;31m(ADVX[00m
					[01;36m(MF[00m
						(ADVX ansonsten)
						(ADVX vielleicht)
						(ADVX auch)
						[01;36m(PX[00m
							(PX mit dem zug)
							(ADVX abends)[01;36m)[00m[01;36m)[00m
					(VC zuruck)[01;31m)[00m
				(SIMPX wenn das mit dem flugzeug)[01;31m)[00m))[01;36m)[00m
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SU', 'ADVX', 'SIMPX'], 'mover info': [('SU', (0, 7))], 'old_family': ['SU', 'SU'], 'start left siblings': [], 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'ADV', 'ADV', 'VVINF', 'VMFIN', 'ADV', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'ADV', 'KOUS', 'PDS', 'APPR', 'ART', 'NN'), 'start right siblings': ['SU'], 'end left siblings': [], 'auto preterminal span': (0, 20), 'movers': ['SU'], 'old_parent': 'TURN', 'end right siblings': ['ADVX', 'SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			(SU das ich dann abends wieder zuruckfliegen kann)
			[01;31m(ADVX[00m
				[01;36m(MF[00m
					(ADVX ansonsten)
					(ADVX vielleicht)
					(ADVX auch)
					[01;36m(PX[00m
						(PX mit dem zug)
						(ADVX abends)[01;36m)[00m[01;36m)[00m
				(VC zuruck)[01;31m)[00m
			(SIMPX wenn das mit dem flugzeug))))
Step:PP Attachment
{'subtrees': ['ADVX', 'ADVX', 'ADVX', 'PX', 'ADVX'], 'family': ['MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'ADV'), 'right siblings': [(VC (ADV zuruck))], 'left siblings': [], 'auto preterminal span': (7, 14), 'span': (7, 14), 'parent': 'ADVX', 'label': 'MF', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU
			(SU das ich dann abends wieder zuruckfliegen kann)
			[01;31m(ADVX[00m
				(MF
					(ADVX ansonsten)
					(ADVX vielleicht)
					(ADVX auch)
					[01;36m(PX[00m
						(PX mit dem zug)
						(ADVX abends)[01;36m)[00m)
				(VC zuruck)[01;31m)[00m
			(SIMPX wenn das mit dem flugzeug))))
Step:Modifier Attachment
{'subtrees': ['PX', 'ADVX'], 'family': ['ADVX', 'ADVX', 'ADVX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NN', 'ADV'), 'right siblings': [], 'left siblings': [(ADVX (ADV ansonsten)), (ADVX (ADV vielleicht)), (ADVX (ADV auch))], 'auto preterminal span': (10, 14), 'span': (10, 14), 'parent': 'MF', 'label': 'PX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU
			(SU das ich dann abends wieder zuruckfliegen kann)
			[01;31m(ADVX[00m
				(MF ansonsten vielleicht auch mit dem zug abends)
				(VC zuruck)[01;31m)[00m
			(SIMPX wenn das mit dem flugzeug))))
Step:Modifier Attachment
{'subtrees': ['MF', 'VC'], 'family': ['SU', 'ADVX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'ADV', 'ADV', 'VVINF', 'VMFIN', 'ADV', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'ADV', 'KOUS', 'PDS', 'APPR', 'ART', 'NN'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 20), 'span': (7, 15), 'left siblings': ['SU'], 'label': 'ADVX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP das ich dann abends wieder zuruckfliegen kann ansonsten vielleicht auch mit dem zug abends zuruck wenn das mit dem flugzeug)

Sentence 673:
14 Initial errors
0 on fringe, 5 iterations
8 Error:UNSET move
2 Error:Single Word Phrase
2 Error:Different label
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU ah ist naturlich sehr kompliziert)
		[01;36m(SU[00m
			[01;36m(SIMPX[00m
				[01;31m(SU[00m
					[01;31m(SIMPX[00m
						(VF wann)
						(LK konnten)
						(MF sie denn genau)
						(VC sagen)
						[01;31m(NF[00m [01;33m(SIMPX (NF[00m
							[01;31m(SIMPX[00m
								(C ob)
								(MF
									(NX ich)
									(PX an dem abend)
									[01;36m(ADVX[00m [01;31m(ADJX[00m
										(ADJD exakt)[01;31m)[00m[01;36m)[00m
									(PX nach hause))
								(VC fahren kann)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
				[01;36m(SIMPX[00m [01;36m(NF[00m [01;36m(VC[00m [01;31m(SU[00m
					(VXINF
						(VVINF fliegen))[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;36m)[00m[01;36m)[00m[01;36m)[00m)) [01;33mNF) SIMPX)[00m
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['C', 'MF', 'VC', 'SU'], 'mover info': [('SU', (21, 22))], 'old_family': ['SU', 'SU', 'SU'], 'start left siblings': ['SU', 'SU'], 'auto preterminals': ('ITJ', 'VAFIN', 'ADV', 'ADV', 'ADJD', 'PWAV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'VVINF', 'KOUS', 'PPER', 'APPR', 'ART', 'NN', 'ADJD', 'APPR', 'NN', 'VVINF', 'VMFIN', 'VVINF'), 'start right siblings': [], 'end left siblings': ['C', 'MF', 'VC'], 'auto preterminal span': (0, 22), 'movers': ['SU'], 'old_parent': 'TURN', 'POS confusion': ('VVINF', 'VVINF'), 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU ah ist naturlich sehr kompliziert)
		(SU
			(SIMPX
				(VF wann)
				(LK konnten)
				(MF sie denn genau)
				(VC sagen)
				(NF
					(SIMPX
						(C ob)
						(MF
							(NX ich)
							(PX an dem abend)
							[01;36m(ADVX[00m [01;31m(ADJX[00m
								(ADJD exakt)[01;31m)[00m[01;36m)[00m
							(PX nach hause))
						(VC fahren kann)
						[01;36m(SIMPX[00m [01;36m(NF[00m [01;36m(VC[00m [01;31m(SU[00m
							(VXINF
								(VVINF fliegen))[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;36m)[00m))))))
Step:Single Word Phrase
{'family': ['NX', 'PX', 'ADVX', 'PX'], 'auto preterminal span': (16, 17), 'span': (16, 17), 'subtrees': ['ADJD'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('ADJD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'ADVX')}
(TOP
	(TURN
		(SU ah ist naturlich sehr kompliziert)
		(SU
			(SIMPX
				(VF wann)
				(LK konnten)
				(MF sie denn genau)
				(VC sagen)
				(NF
					(SIMPX
						(C ob)
						(MF ich an dem abend exakt nach hause)
						(VC fahren kann)
						[01;36m(SIMPX[00m [01;36m(NF[00m [01;36m(VC[00m [01;31m(SU[00m
							(VXINF
								(VVINF fliegen))[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;36m)[00m))))))
Step:Different label
{'family': ['C', 'MF', 'VC', 'VC'], 'auto preterminal span': (21, 22), 'span': (21, 22), 'subtrees': ['VXINF'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('VVINF',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('SU', 'VC')}
(TOP
	(TURN
		(SU ah ist naturlich sehr kompliziert)
		(SU
			(SIMPX
				(VF wann)
				(LK konnten)
				(MF sie denn genau)
				(VC sagen)
				(NF
					(SIMPX
						(C ob)
						(MF ich an dem abend exakt nach hause)
						(VC fahren kann)
						[01;36m(SIMPX[00m
							[01;36m(NF[00m
								(VC
									(VXINF
										(VVINF fliegen)))[01;36m)[00m[01;36m)[00m))))))
Step:Unary
{'subtrees': ['VC'], 'family': ['C', 'MF', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVINF',), 'right siblings': [], 'left siblings': [(C (KOUS ob)), (MF (NX (PPER ich)) (PX (APPR an) (NX (ART dem) (NN abend))) (ADVX (ADJD exakt)) (PX (APPR nach) (NX (NN hause)))), (VC (VXINF (VVINF fahren)) (VXFIN (VMFIN kann)))], 'auto preterminal span': (21, 22), 'span': (21, 22), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU ah ist naturlich sehr kompliziert)
		(SU
			(SIMPX
				(VF wann)
				(LK konnten)
				(MF sie denn genau)
				(VC sagen)
				(NF
					(SIMPX
						(C ob)
						(MF ich an dem abend exakt nach hause)
						(VC fahren kann)
						[01;36m(SIMPX[00m
							(NF
								(VC
									(VXINF
										(VVINF fliegen))))[01;36m)[00m))))))
Step:Unary
{'subtrees': ['NF'], 'family': ['C', 'MF', 'VC', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVINF',), 'right siblings': [], 'left siblings': [(C (KOUS ob)), (MF (NX (PPER ich)) (PX (APPR an) (NX (ART dem) (NN abend))) (ADVX (ADJD exakt)) (PX (APPR nach) (NX (NN hause)))), (VC (VXINF (VVINF fahren)) (VXFIN (VMFIN kann)))], 'auto preterminal span': (21, 22), 'span': (21, 22), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'add'}
(TOP ah ist naturlich sehr kompliziert wann konnten sie denn genau sagen ob ich an dem abend exakt nach hause fahren kann fliegen)

Sentence 674:
0 Initial errors
0 on fringe, 0 iterations

Sentence 675:
3 Initial errors
0 on fringe, 2 iterations
2 Error:UNSET move
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU ja danke)
		[01;36m(SU[00m
			[01;31m(SU[00m
				(DM
					(PTKANT ja))[01;31m)[00m
			[01;31m(SU[00m
				(SIMPX
					(LK kann)
					(MF ich das direkt bei ihnen)
					(VC festmachen))[01;31m)[00m[01;36m)[00m))
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SU', 'SIMPX'], 'mover info': [('SU', (2, 3))], 'old_family': ['SU', 'SU', 'SU'], 'start left siblings': ['SU'], 'auto preterminals': ('PTKANT', 'PTKANT', 'PTKANT', 'VMFIN', 'PPER', 'PDS', 'ADV', 'APPR', 'PPER', 'VVINF'), 'start right siblings': ['SU'], 'end left siblings': [], 'auto preterminal span': (0, 10), 'movers': ['SU'], 'old_parent': 'TURN', 'POS confusion': ('PTKANT', 'PTKANT'), 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU ja danke)
		(SU
			[01;31m(SU[00m
				(DM
					(PTKANT ja))[01;31m)[00m
			(SIMPX kann ich das direkt bei ihnen festmachen))))
Step:Unary
{'subtrees': ['DM'], 'family': ['SU', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'VMFIN', 'PPER', 'PDS', 'ADV', 'APPR', 'PPER', 'VVINF'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (2, 10), 'span': (2, 3), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja danke ja kann ich das direkt bei ihnen festmachen)

Sentence 676:
4 Initial errors
0 on fringe, 3 iterations
2 Error:UNSET move
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SU[00m
	(TOP
		(TURN
			[01;31m(SU[00m
				(DM
					(PTKANT ja))[01;31m)[00m
			[01;31m(SU[00m
				(DM
					(ITJ gut))[01;31m)[00m
			[01;31m(SU[00m
				(SIMPX
					(VF dann)
					(LK machen)
					(MF wir das doch))[01;31m)[00m))[01;36m)[00m
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SU', 'SU', 'SIMPX'], 'mover info': [('SU', (0, 1)), ('SU', (1, 2))], 'old_family': ['SU', 'SU', 'SU'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'ITJ', 'ADV', 'VVFIN', 'PPER', 'PDS', 'ADV'), 'start right siblings': ['SU'], 'end left siblings': [], 'auto preterminal span': (0, 7), 'movers': ['SU', 'SU'], 'old_parent': 'TURN', 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			[01;31m(SU[00m
				(DM
					(PTKANT ja))[01;31m)[00m
			[01;31m(SU[00m
				(DM
					(ITJ gut))[01;31m)[00m
			(SIMPX dann machen wir das doch))))
Step:Unary
{'subtrees': ['DM'], 'family': ['SU', 'SU', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'ADV', 'VVFIN', 'PPER', 'PDS', 'ADV'), 'right siblings': ['SU', 'SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 7), 'span': (0, 1), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM ja)
			[01;31m(SU[00m
				(DM
					(ITJ gut))[01;31m)[00m
			(SIMPX dann machen wir das doch))))
Step:Unary
{'subtrees': ['DM'], 'family': ['DM', 'SU', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'ADV', 'VVFIN', 'PPER', 'PDS', 'ADV'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 7), 'span': (1, 2), 'left siblings': ['DM'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja gut dann machen wir das doch)

Sentence 677:
7 Initial errors
0 on fringe, 4 iterations
3 Error:Clause Attachment
2 Error:Modifier Attachment
1 Error:UNSET add
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU sehr gut)
		(SU [01;33m(SIMPX[00m
			(SIMPX
				(VF ich)
				(LK wurde)
				[01;31m(MF[00m
					[01;36m(MF[00m
						(NX sie)
						(ADVX dann) [01;33mSIMPX)[00m[01;36m)[00m
					[01;31m(SIMPX[00m [01;33m(SIMPX[00m
						(VF ich)
						(LK sage)
						[01;31m(MF[00m [01;33m(MF[00m
							(ADVX
								(ADV mal))[01;31m)[00m[01;31m)[00m
					(ADVX morgen)[01;31m)[00m [01;33mMF)[00m
				(VC zuruckrufen)
				(NF das wir alles festmachen))))) [01;33mSIMPX)[00m
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'SIMPX', 'ADVX', 'VC', 'NF'], 'mover info': [('SIMPX', (6, 9)), ('ADVX', (9, 10))], 'old_family': ['NX', 'ADVX', 'SIMPX', 'ADVX'], 'start left siblings': ['NX', 'ADVX'], 'auto preterminals': ('PPER', 'VAFIN', 'PPER', 'ADV', 'PPER', 'VVFIN', 'ADV', 'ADV', 'VVINF', 'KOUS', 'PPER', 'PIS', 'VVFIN'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (2, 15), 'adding node already present': False, 'movers': ['SIMPX', 'ADVX'], 'old_parent': 'MF', 'added and moved': True, 'end right siblings': ['VC', 'NF'], 'classified_type': 'Clause Attachment', 'type': 'move', 'added label': 'SIMPX'}
(TOP
	(TURN
		(SU sehr gut)
		(SU
			(SIMPX
				[01;36m(SIMPX[00m
					(VF ich)
					(LK wurde)
					(MF sie dann)[01;36m)[00m
				(SIMPX
					[01;31m(SIMPX[00m
						(VF ich)
						(LK sage)
						[01;31m(MF[00m [01;33m(MF[00m
							(ADVX
								(ADV mal))[01;31m)[00m[01;31m)[00m
					(ADVX morgen) [01;33mMF)[00m
					(VC zuruckrufen)
					(NF das wir alles festmachen))))))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['ADVX', 'ADVX'], 'mover info': [('ADVX', (9, 10))], 'old_family': ['SIMPX', 'ADVX', 'VC', 'NF'], 'start left siblings': ['SIMPX'], 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'ADV', 'VVINF', 'KOUS', 'PPER', 'PIS', 'VVFIN'), 'start right siblings': ['VC', 'NF'], 'end left siblings': ['ADVX'], 'auto preterminal span': (6, 15), 'movers': ['ADVX'], 'old_parent': 'SIMPX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU sehr gut)
		(SU
			(SIMPX
				[01;36m(SIMPX[00m
					(VF ich)
					(LK wurde)
					(MF sie dann)[01;36m)[00m
				(SIMPX
					[01;31m(SIMPX[00m
						(VF ich)
						(LK sage)
						(MF mal morgen)[01;31m)[00m
					(VC zuruckrufen)
					(NF das wir alles festmachen))))))
Step:UNSET add
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'PPER', 'ADV'), 'right siblings': [(SIMPX (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN sage))) (MF (ADVX (ADV mal)) (ADVX (ADV morgen)))) (VC (VXINF (VVINF zuruckrufen))) (NF (SIMPX (C (KOUS das)) (MF (NX (PPER wir)) (NX (PIS alles))) (VC (VXFIN (VVFIN festmachen))))))], 'left siblings': [], 'auto preterminal span': (2, 6), 'span': (2, 6), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU sehr gut)
		(SU
			(SIMPX
				(SIMPX ich wurde sie dann)
				(SIMPX
					[01;31m(SIMPX[00m
						(VF ich)
						(LK sage)
						(MF mal morgen)[01;31m)[00m
					(VC zuruckrufen)
					(NF das wir alles festmachen))))))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['SIMPX', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'ADV', 'VVINF', 'KOUS', 'PPER', 'PIS', 'VVFIN'), 'right siblings': ['VC', 'NF'], 'parent': 'SIMPX', 'auto preterminal span': (6, 15), 'span': (6, 10), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP sehr gut ich wurde sie dann ich sage mal morgen zuruckrufen das wir alles festmachen)

Sentence 678:
3 Initial errors
0 on fringe, 1 iterations
3 Error:UNSET move
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU alles klar)
		(SU gut dann bedanke ich mich erst mal)
		[01;36m(SIMPX[00m
			[01;36m(SU[00m
				(SU ich rufe dann morgen wieder an)
				[01;31m(SU[00m
					(SIMPX
						(VF sie)
						(LK sind)
						(MF im haus))[01;31m)[00m[01;36m)[00m[01;36m)[00m))
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SU', 'SIMPX'], 'mover info': [('SU', (9, 15))], 'old_family': ['SU', 'SU', 'SU', 'SU'], 'start left siblings': ['SU', 'SU'], 'auto preterminals': ('PIS', 'ADJD', 'ITJ', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'PPER', 'VVFIN', 'ADV', 'ADV', 'ADV', 'PTKVZ', 'PPER', 'VAFIN', 'APPRART', 'NN'), 'start right siblings': ['SU'], 'end left siblings': [], 'auto preterminal span': (0, 19), 'adding node already present': False, 'movers': ['SU'], 'old_parent': 'TURN', 'added and moved': True, 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'SIMPX'}
(TOP alles klar gut dann bedanke ich mich erst mal ich rufe dann morgen wieder an sie sind im haus)

Sentence 679:
5 Initial errors
0 on fringe, 3 iterations
3 Error:UNSET move
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP [01;33m(DM[00m
	(TURN
		[01;31m(SU[00m
			[01;31m(DM[00m
				(NX alles)
				[01;33m(ADJX[00m (ADJX klar)[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(DM danke schon) [01;33mADJX) DM)[00m
			(DM frau berit)[01;31m)[00m))
Step:UNSET move
{'new_parent': 'DM', 'new_family': ['NX', 'ADJX', 'DM'], 'mover info': [('DM', (2, 4))], 'old_family': ['DM', 'DM'], 'start left siblings': [], 'auto preterminals': ('PIS', 'ADJD', 'PTKANT', 'ADJD', 'NN', 'NE'), 'start right siblings': ['DM'], 'end left siblings': ['NX', 'ADJX'], 'auto preterminal span': (0, 6), 'adding node already present': False, 'movers': ['DM'], 'old_parent': 'SU', 'added and moved': True, 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'ADJX'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM
				(NX alles)
				(ADJX klar danke schon))[01;31m)[00m
		[01;31m(SU[00m
			(DM
				(NX
					(NN frau)
					(NE berit)))[01;31m)[00m))
Step:Unary
{'subtrees': ['DM'], 'family': ['SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PIS', 'ADJD', 'PTKANT', 'ADJD', 'NN', 'NE'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 6), 'span': (0, 4), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM alles klar danke schon)
		[01;31m(SU[00m
			(DM
				(NX
					(NN frau)
					(NE berit)))[01;31m)[00m))
Step:Unary
{'subtrees': ['DM'], 'family': ['DM', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PIS', 'ADJD', 'PTKANT', 'ADJD', 'NN', 'NE'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 6), 'span': (4, 6), 'left siblings': ['DM'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP alles klar danke schon frau berit)

Sentence 680:
18 Initial errors
0 on fringe, 13 iterations
3 Error:NP Attachment
2 Error:Different label
2 Error:Single Word Phrase
2 Error:Clause Attachment
1 Error:UNSET add
1 Error:Unary
1 Error:UNSET add
1 Error:Unary
1 Error:Clause Attachment
1 Error:UNSET remove
1 Error:UNSET add
1 Error:Single Word Phrase
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(SIMPX
				(KOORD und)
				(VF zugfahren)
				(LK dauert)
				(MF mir vielleicht auch ein bischen zu lange))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF ich)
				[01;33m(FKOORD[00m (LK habe)
				(MF jetzt hier den plan vor mir)[01;31m)[00m
			[01;36m(SU[00m
				[01;36m(SIMPX[00m
					[01;31m(SIMPX[00m
						[01;36m(ADVX[00m [01;31m(VF[00m
							[01;31m(NX[00m
								(NN zugdauer)[01;31m)[00m[01;31m)[00m[01;36m)[00m
						[01;36m(LKM[00m
							[01;33m(FKOORD[00m (LK dauert)
							(MF drei stunden zwanzig minuten)[01;36m)[00m[01;31m)[00m
					[01;31m(NX[00m
						(KON und)
						[01;36m(LKM[00m
							[01;36m(LK[00m [01;36m(VXFIN[00m [01;31m(NX[00m
								(NN fliegen)[01;31m)[00m[01;36m)[00m[01;36m)[00m
							[01;36m(MF[00m
								(NX
									(ART eine)
									(NN stunde))[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;31m)[00m)) [01;33mFKOORD) FKOORD)[00m
Step:NP Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'NX'], 'mover info': [('NX', (24, 28))], 'old_family': ['SIMPX', 'SIMPX', 'NX'], 'start left siblings': ['SIMPX', 'SIMPX'], 'auto preterminals': ('PPER', 'VAFIN', 'ADV', 'ADV', 'ART', 'NN', 'APPR', 'PRF', 'NN', 'VVFIN', 'CARD', 'NN', 'CARD', 'NN', 'KON', 'NN', 'ART', 'NN'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (10, 28), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'SU', 'added and moved': True, 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'MF'}
(TOP
	(TURN
		[01;31m(SU[00m
			(SIMPX
				(KOORD und)
				(VF zugfahren)
				(LK dauert)
				(MF mir vielleicht auch ein bischen zu lange))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF ich)
				[01;33m(FKOORD[00m (LK habe)
				(MF jetzt hier den plan vor mir)[01;31m)[00m
			[01;36m(SU[00m
				(SIMPX
					[01;36m(ADVX[00m [01;31m(VF[00m
						[01;31m(NX[00m
							(NN zugdauer)[01;31m)[00m[01;31m)[00m[01;36m)[00m
					(FKOORD
						[01;36m(LKM[00m
							(LK dauert)
							(MF drei stunden zwanzig minuten)[01;36m)[00m
						[01;31m(NX[00m
							(KON und)
							[01;36m(LKM[00m
								[01;36m(LK[00m [01;36m(VXFIN[00m [01;31m(NX[00m
									(NN fliegen)[01;31m)[00m[01;36m)[00m[01;36m)[00m
								[01;36m(MF[00m
									(NX
										(ART eine)
										(NN stunde))[01;36m)[00m[01;36m)[00m[01;31m)[00m))[01;36m)[00m[01;31m)[00m)) [01;33mFKOORD)[00m
Step:Different label
{'family': ['ADVX', 'FKOORD'], 'auto preterminal span': (18, 19), 'span': (18, 19), 'subtrees': ['NX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('NN',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('VF', 'ADVX')}
(TOP
	(TURN
		[01;31m(SU[00m
			(SIMPX
				(KOORD und)
				(VF zugfahren)
				(LK dauert)
				(MF mir vielleicht auch ein bischen zu lange))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF ich)
				[01;33m(FKOORD[00m (LK habe)
				(MF jetzt hier den plan vor mir)[01;31m)[00m
			[01;36m(SU[00m
				(SIMPX
					(ADVX
						[01;31m(NX[00m
							(NN zugdauer)[01;31m)[00m)
					(FKOORD
						[01;36m(LKM[00m
							(LK dauert)
							(MF drei stunden zwanzig minuten)[01;36m)[00m
						[01;31m(NX[00m
							(KON und)
							[01;36m(LKM[00m
								[01;36m(LK[00m [01;36m(VXFIN[00m [01;31m(NX[00m
									(NN fliegen)[01;31m)[00m[01;36m)[00m[01;36m)[00m
								[01;36m(MF[00m
									(NX
										(ART eine)
										(NN stunde))[01;36m)[00m[01;36m)[00m[01;31m)[00m))[01;36m)[00m[01;31m)[00m)) [01;33mFKOORD)[00m
Step:Single Word Phrase
{'family': ['KON', 'VXFIN', 'NX'], 'auto preterminal span': (25, 26), 'span': (25, 26), 'subtrees': ['NN'], 'parent': 'NX', 'over_word': True, 'auto preterminals': ('NN',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('NX', 'VXFIN')}
(TOP
	(TURN
		[01;31m(SU[00m
			(SIMPX
				(KOORD und)
				(VF zugfahren)
				(LK dauert)
				(MF mir vielleicht auch ein bischen zu lange))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF ich)
				[01;33m(FKOORD[00m (LK habe)
				(MF jetzt hier den plan vor mir)[01;31m)[00m
			[01;36m(SU[00m
				(SIMPX
					(ADVX
						[01;31m(NX[00m
							(NN zugdauer)[01;31m)[00m)
					(FKOORD
						[01;36m(LKM[00m
							(LK dauert)
							(MF drei stunden zwanzig minuten)[01;36m)[00m
						[01;31m(NX[00m
							(KON und)
							[01;36m(LKM[00m
								[01;36m(LK[00m
									(VXFIN
										(NN fliegen))[01;36m)[00m
								[01;36m(MF[00m
									(NX
										(ART eine)
										(NN stunde))[01;36m)[00m[01;36m)[00m[01;31m)[00m))[01;36m)[00m[01;31m)[00m)) [01;33mFKOORD)[00m
Step:Clause Attachment
{'new_parent': 'SU', 'new_family': ['SIMPX', 'SIMPX'], 'mover info': [('SIMPX', (10, 18))], 'old_family': ['SIMPX', 'SIMPX'], 'start left siblings': [], 'auto preterminals': ('KON', 'NN', 'VVFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'PTKA', 'ADJD', 'PPER', 'VAFIN', 'ADV', 'ADV', 'ART', 'NN', 'APPR', 'PRF', 'NN', 'VVFIN', 'CARD', 'NN', 'CARD', 'NN', 'KON', 'NN', 'ART', 'NN'), 'start right siblings': ['SIMPX'], 'end left siblings': ['SIMPX'], 'auto preterminal span': (0, 28), 'movers': ['SIMPX'], 'old_parent': 'SU', 'end right siblings': [], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			(SIMPX und zugfahren dauert mir vielleicht auch ein bischen zu lange)
			[01;31m(SIMPX[00m
				(VF ich)
				[01;33m(FKOORD[00m (LK habe)
				(MF jetzt hier den plan vor mir)[01;31m)[00m[01;31m)[00m
		(SU
			(SIMPX
				(ADVX
					[01;31m(NX[00m
						(NN zugdauer)[01;31m)[00m)
				(FKOORD
					[01;36m(LKM[00m
						(LK dauert)
						(MF drei stunden zwanzig minuten)[01;36m)[00m
					[01;31m(NX[00m
						(KON und)
						[01;36m(LKM[00m
							[01;36m(LK[00m
								(VXFIN
									(NN fliegen))[01;36m)[00m
							[01;36m(MF[00m
								(NX
									(ART eine)
									(NN stunde))[01;36m)[00m[01;36m)[00m[01;31m)[00m))))) [01;33mFKOORD)[00m
Step:UNSET add
{'subtrees': ['LK', 'MF'], 'family': ['LKM', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'CARD', 'NN', 'CARD', 'NN'), 'right siblings': [(NX (KON und) (VXFIN (NN fliegen)) (NX (ART eine) (NN stunde)))], 'left siblings': [], 'auto preterminal span': (19, 24), 'span': (19, 24), 'parent': 'FKOORD', 'label': 'LKM', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(SIMPX und zugfahren dauert mir vielleicht auch ein bischen zu lange)
			[01;31m(SIMPX[00m
				(VF ich)
				[01;33m(FKOORD[00m (LK habe)
				(MF jetzt hier den plan vor mir)[01;31m)[00m[01;31m)[00m
		(SU
			(SIMPX
				(ADVX
					[01;31m(NX[00m
						(NN zugdauer)[01;31m)[00m)
				(FKOORD
					(LKM dauert drei stunden zwanzig minuten)
					[01;31m(NX[00m
						(KON und)
						[01;36m(LKM[00m
							[01;36m(LK[00m
								(VXFIN
									(NN fliegen))[01;36m)[00m
							[01;36m(MF[00m
								(NX
									(ART eine)
									(NN stunde))[01;36m)[00m[01;36m)[00m[01;31m)[00m))))) [01;33mFKOORD)[00m
Step:Unary
{'subtrees': ['VXFIN'], 'family': ['KON', 'LK', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN',), 'right siblings': [(NX (ART eine) (NN stunde))], 'left siblings': [(KON und)], 'auto preterminal span': (25, 26), 'span': (25, 26), 'parent': 'NX', 'label': 'LK', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(SIMPX und zugfahren dauert mir vielleicht auch ein bischen zu lange)
			[01;31m(SIMPX[00m
				(VF ich)
				[01;33m(FKOORD[00m (LK habe)
				(MF jetzt hier den plan vor mir)[01;31m)[00m[01;31m)[00m
		(SU
			(SIMPX
				(ADVX
					[01;31m(NX[00m
						(NN zugdauer)[01;31m)[00m)
				(FKOORD
					(LKM dauert drei stunden zwanzig minuten)
					[01;31m(NX[00m
						(KON und)
						[01;36m(LKM[00m
							(LK fliegen)
							[01;36m(MF[00m
								(NX
									(ART eine)
									(NN stunde))[01;36m)[00m[01;36m)[00m[01;31m)[00m))))) [01;33mFKOORD)[00m
Step:UNSET add
{'subtrees': ['LK', 'NX'], 'family': ['KON', 'LKM'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'ART', 'NN'), 'right siblings': [], 'left siblings': [(KON und)], 'auto preterminal span': (25, 28), 'span': (25, 28), 'parent': 'NX', 'label': 'LKM', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(SIMPX und zugfahren dauert mir vielleicht auch ein bischen zu lange)
			[01;31m(SIMPX[00m
				(VF ich)
				[01;33m(FKOORD[00m (LK habe)
				(MF jetzt hier den plan vor mir)[01;31m)[00m[01;31m)[00m
		(SU
			(SIMPX
				(ADVX
					[01;31m(NX[00m
						(NN zugdauer)[01;31m)[00m)
				(FKOORD
					(LKM dauert drei stunden zwanzig minuten)
					[01;31m(NX[00m
						(KON und)
						(LKM
							(LK fliegen)
							[01;36m(MF[00m
								(NX
									(ART eine)
									(NN stunde))[01;36m)[00m)[01;31m)[00m))))) [01;33mFKOORD)[00m
Step:Unary
{'subtrees': ['NX'], 'family': ['LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN'), 'right siblings': [], 'left siblings': [(LK (VXFIN (NN fliegen)))], 'auto preterminal span': (26, 28), 'span': (26, 28), 'parent': 'LKM', 'label': 'MF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(SIMPX und zugfahren dauert mir vielleicht auch ein bischen zu lange)
			[01;31m(SIMPX[00m
				(VF ich)
				[01;33m(FKOORD[00m (LK habe)
				(MF jetzt hier den plan vor mir)[01;31m)[00m[01;31m)[00m
		(SU
			(SIMPX
				(ADVX
					[01;31m(NX[00m
						(NN zugdauer)[01;31m)[00m)
				(FKOORD
					(LKM dauert drei stunden zwanzig minuten)
					[01;31m(NX[00m
						(KON und)
						(LKM fliegen eine stunde)[01;31m)[00m))))) [01;33mFKOORD)[00m
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'NN', 'VVFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'PTKA', 'ADJD', 'PPER', 'VAFIN', 'ADV', 'ADV', 'ART', 'NN', 'APPR', 'PRF', 'NN', 'VVFIN', 'CARD', 'NN', 'CARD', 'NN', 'KON', 'NN', 'ART', 'NN'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 28), 'span': (0, 18), 'left siblings': [], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX und zugfahren dauert mir vielleicht auch ein bischen zu lange)
		[01;31m(SIMPX[00m
			(VF ich)
			[01;33m(FKOORD[00m (LK habe)
			(MF jetzt hier den plan vor mir)[01;31m)[00m
		(SU
			(SIMPX
				(ADVX
					[01;31m(NX[00m
						(NN zugdauer)[01;31m)[00m)
				(FKOORD
					(LKM dauert drei stunden zwanzig minuten)
					[01;31m(NX[00m
						(KON und)
						(LKM fliegen eine stunde)[01;31m)[00m))))) [01;33mFKOORD)[00m
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['SIMPX', 'SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'NN', 'VVFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'PTKA', 'ADJD', 'PPER', 'VAFIN', 'ADV', 'ADV', 'ART', 'NN', 'APPR', 'PRF', 'NN', 'VVFIN', 'CARD', 'NN', 'CARD', 'NN', 'KON', 'NN', 'ART', 'NN'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 28), 'span': (10, 18), 'left siblings': ['SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX und zugfahren dauert mir vielleicht auch ein bischen zu lange)
		(VF ich)
		[01;36m(FKOORD[00m
			(LK habe)
			(MF jetzt hier den plan vor mir)
			(SU
				(SIMPX
					(ADVX
						[01;31m(NX[00m
							(NN zugdauer)[01;31m)[00m)
					(FKOORD
						(LKM dauert drei stunden zwanzig minuten)
						[01;31m(NX[00m
							(KON und)
							(LKM fliegen eine stunde)[01;31m)[00m)))[01;36m)[00m))
Step:UNSET add
{'subtrees': ['LK', 'MF', 'SU'], 'family': ['SIMPX', 'VF', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'ADV', 'ADV', 'ART', 'NN', 'APPR', 'PRF', 'NN', 'VVFIN', 'CARD', 'NN', 'CARD', 'NN', 'KON', 'NN', 'ART', 'NN'), 'right siblings': [], 'left siblings': [(SIMPX (KOORD (KON und)) (VF (NX (NN zugfahren))) (LK (VXFIN (VVFIN dauert))) (MF (NX (PPER mir)) (ADVX (ADV vielleicht)) (ADVX (ADV auch)) (ADJX (NX (ART ein) (PIS bischen)) (PTKA zu) (ADJD lange)))), (VF (NX (PPER ich)))], 'auto preterminal span': (11, 28), 'span': (11, 28), 'parent': 'TURN', 'label': 'FKOORD', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SIMPX und zugfahren dauert mir vielleicht auch ein bischen zu lange)
		(VF ich)
		(FKOORD
			(LK habe)
			(MF jetzt hier den plan vor mir)
			(SU
				(SIMPX
					(ADVX
						[01;31m(NX[00m
							(NN zugdauer)[01;31m)[00m)
					(FKOORD
						(LKM dauert drei stunden zwanzig minuten)
						[01;31m(NX[00m
							(KON und)
							(LKM fliegen eine stunde)[01;31m)[00m))))))
Step:Single Word Phrase
{'subtrees': ['NN'], 'family': ['NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('NN',), 'right siblings': [], 'parent': 'ADVX', 'auto preterminal span': (18, 19), 'span': (18, 19), 'left siblings': [], 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX und zugfahren dauert mir vielleicht auch ein bischen zu lange)
		(VF ich)
		(FKOORD
			(LK habe)
			(MF jetzt hier den plan vor mir)
			(SU
				(SIMPX
					(ADVX zugdauer)
					(FKOORD
						(LKM dauert drei stunden zwanzig minuten)
						[01;31m(NX[00m
							(KON und)
							(LKM fliegen eine stunde)[01;31m)[00m))))))
Step:UNSET remove
{'subtrees': ['KON', 'LKM'], 'family': ['LKM', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'CARD', 'NN', 'CARD', 'NN', 'KON', 'NN', 'ART', 'NN'), 'right siblings': [], 'parent': 'FKOORD', 'auto preterminal span': (19, 28), 'span': (24, 28), 'left siblings': ['LKM'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP und zugfahren dauert mir vielleicht auch ein bischen zu lange ich habe jetzt hier den plan vor mir zugdauer dauert drei stunden zwanzig minuten und fliegen eine stunde)

Sentence 681:
3 Initial errors
0 on fringe, 1 iterations
3 Error:UNSET move
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU konnen wir machen)
		[01;36m(SU[00m
			[01;36m(SIMPX[00m
				[01;31m(SU[00m
					(SIMPX
						(VF der wievielte)
						(LK ist)
						(MF das))[01;31m)[00m
				(SU sie haben ja grade einen plan vor sich liegen)[01;36m)[00m[01;36m)[00m))
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SIMPX', 'SU'], 'mover info': [('SU', (7, 16))], 'old_family': ['SU', 'SU', 'SU'], 'start left siblings': ['SU', 'SU'], 'auto preterminals': ('VMFIN', 'PPER', 'VVINF', 'ART', 'NN', 'VAFIN', 'PDS', 'PPER', 'VAFIN', 'ADV', 'ADV', 'ART', 'NN', 'APPR', 'PRF', 'VVINF'), 'start right siblings': [], 'end left siblings': ['SIMPX'], 'auto preterminal span': (0, 16), 'adding node already present': False, 'movers': ['SU'], 'old_parent': 'TURN', 'added and moved': True, 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'SIMPX'}
(TOP konnen wir machen der wievielte ist das sie haben ja grade einen plan vor sich liegen)

Sentence 682:
4 Initial errors
0 on fringe, 2 iterations
2 Error:Different label
2 Error:UNSET move
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SU[00m
	(TOP
		(TURN
			[01;31m(SU[00m
				(DM ja)
				(DM also)
				(SIMPX
					[01;36m(VF[00m [01;31m(LV[00m
						(SIMPX
							(C wenn)
							(MF es ihnen da nicht)
							(VC past))[01;31m)[00m[01;36m)[00m
					(LK konnen)
					(MF wir auch am zweiten juliwochenende)
					(VC fahren))[01;31m)[00m
			(SU ich bin da flexibler)))[01;36m)[00m
Step:Different label
{'family': ['VF', 'LK', 'MF', 'VC'], 'auto preterminal span': (2, 8), 'span': (2, 8), 'subtrees': ['SIMPX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('KOUS', 'PPER', 'PPER', 'ADV', 'PTKNEG', 'VVFIN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('LV', 'VF')}
[01;36m(SU[00m
	(TOP
		(TURN
			[01;31m(SU[00m
				(DM ja)
				(DM also)
				(SIMPX wenn es ihnen da nicht past konnen wir auch am zweiten juliwochenende fahren)[01;31m)[00m
			(SU ich bin da flexibler)))[01;36m)[00m
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['DM', 'DM', 'SIMPX', 'SU'], 'mover info': [('SU', (15, 19))], 'old_family': ['SU', 'SU'], 'start left siblings': ['SU'], 'auto preterminals': ('PTKANT', 'ADV', 'KOUS', 'PPER', 'PPER', 'ADV', 'PTKNEG', 'VVFIN', 'VMFIN', 'PPER', 'ADV', 'APPRART', 'ADJA', 'NN', 'VVINF', 'PPER', 'VAFIN', 'ADV', 'ADJD'), 'start right siblings': [], 'end left siblings': ['DM', 'DM', 'SIMPX'], 'auto preterminal span': (0, 19), 'movers': ['SU'], 'old_parent': 'TURN', 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP ja also wenn es ihnen da nicht past konnen wir auch am zweiten juliwochenende fahren ich bin da flexibler)

Sentence 683:
6 Initial errors
0 on fringe, 5 iterations
2 Error:UNSET move
1 Error:Unary
1 Error:Single Word Phrase
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU ja mussen wir uns auf das hotel einigen)
		(SU [01;33m(SU (SIMPX[00m
			(SIMPX
				(VF ich)
				(LK wurde)
				(VC sagen)
				[01;31m(NF[00m
					[01;31m(ADJX[00m
						(ADJX am besten) [01;33mSIMPX) SU)[00m
						[01;36m(DM[00m
							[01;36m(SU[00m
								(ADJD zentral)[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m))))
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SIMPX', 'ADJD'], 'mover info': [('ADJD', (13, 14))], 'old_family': ['ADJX', 'ADJD'], 'start left siblings': ['ADJX'], 'auto preterminals': ('PPER', 'VAFIN', 'VVINF', 'PTKA', 'ADJD', 'ADJD'), 'start right siblings': [], 'end left siblings': ['SIMPX'], 'auto preterminal span': (8, 14), 'adding node already present': False, 'movers': ['ADJD'], 'old_parent': 'ADJX', 'POS confusion': ('ADJD', 'ADJD'), 'added and moved': True, 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'DM'}
(TOP
	(TURN
		(SU ja mussen wir uns auf das hotel einigen)
		(SIMPX
			(SU
				[01;36m(SU[00m
					(SIMPX
						(VF ich)
						(LK wurde)
						(VC sagen)
						[01;31m(NF[00m
							(ADJX
								(PTKA am)
								(ADJD besten))[01;31m)[00m)[01;36m)[00m
				[01;36m(DM[00m
					[01;36m(SU[00m
						(ADJD zentral)[01;36m)[00m[01;36m)[00m))))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SU', 'ADJD'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'VVINF', 'PTKA', 'ADJD'), 'right siblings': [(ADJD zentral)], 'left siblings': [], 'auto preterminal span': (8, 13), 'span': (8, 13), 'parent': 'SU', 'label': 'SU', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU ja mussen wir uns auf das hotel einigen)
		(SIMPX
			(SU
				(SU
					(SIMPX
						(VF ich)
						(LK wurde)
						(VC sagen)
						[01;31m(NF[00m
							(ADJX
								(PTKA am)
								(ADJD besten))[01;31m)[00m))
				[01;36m(DM[00m
					[01;36m(SU[00m
						(ADJD zentral)[01;36m)[00m[01;36m)[00m))))
Step:Single Word Phrase
{'subtrees': ['ADJD'], 'family': ['SU', 'SU'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADJD',), 'right siblings': [], 'left siblings': [(SU (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VAFIN wurde))) (VC (VXINF (VVINF sagen))) (NF (ADJX (PTKA am) (ADJD besten)))))], 'auto preterminal span': (13, 14), 'span': (13, 14), 'parent': 'SU', 'label': 'SU', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SU ja mussen wir uns auf das hotel einigen)
		(SIMPX
			(SU
				(SU
					(SIMPX
						(VF ich)
						(LK wurde)
						(VC sagen)
						[01;31m(NF[00m
							(ADJX
								(PTKA am)
								(ADJD besten))[01;31m)[00m))
				[01;36m(DM[00m
					(SU
						(ADJD zentral))[01;36m)[00m))))
Step:Unary
{'subtrees': ['SU'], 'family': ['SU', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJD',), 'right siblings': [], 'left siblings': [(SU (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VAFIN wurde))) (VC (VXINF (VVINF sagen))) (NF (ADJX (PTKA am) (ADJD besten)))))], 'auto preterminal span': (13, 14), 'span': (13, 14), 'parent': 'SU', 'label': 'DM', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU ja mussen wir uns auf das hotel einigen)
		(SIMPX
			(SU
				(SU
					(SIMPX
						(VF ich)
						(LK wurde)
						(VC sagen)
						[01;31m(NF[00m
							(ADJX
								(PTKA am)
								(ADJD besten))[01;31m)[00m))
				(DM zentral)))))
Step:Unary
{'subtrees': ['ADJX'], 'family': ['VF', 'LK', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'VVINF', 'PTKA', 'ADJD'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (8, 13), 'span': (11, 13), 'left siblings': ['VF', 'LK', 'VC'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja mussen wir uns auf das hotel einigen ich wurde sagen am besten zentral)

Sentence 684:
3 Initial errors
0 on fringe, 2 iterations
2 Error:UNSET move
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SU[00m
	(TOP
		(TURN
			[01;31m(SU[00m
				(DM
					(PTKANT ja))[01;31m)[00m
			[01;31m(SU[00m
				(SIMPX
					(VF das)
					(LK ware)
					(MF vielleicht sehr gut))[01;31m)[00m))[01;36m)[00m
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SU', 'SIMPX'], 'mover info': [('SU', (0, 1))], 'old_family': ['SU', 'SU'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'PDS', 'VAFIN', 'ADV', 'ADV', 'ADJD'), 'start right siblings': ['SU'], 'end left siblings': [], 'auto preterminal span': (0, 6), 'movers': ['SU'], 'old_parent': 'TURN', 'POS confusion': ('PTKANT', 'PTKANT'), 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			[01;31m(SU[00m
				(DM
					(PTKANT ja))[01;31m)[00m
			(SIMPX das ware vielleicht sehr gut))))
Step:Unary
{'subtrees': ['DM'], 'family': ['SU', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PDS', 'VAFIN', 'ADV', 'ADV', 'ADJD'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 6), 'span': (0, 1), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja das ware vielleicht sehr gut)

Sentence 685:
9 Initial errors
0 on fringe, 8 iterations
2 Error:UNSET move
1 Error:Modifier Attachment
1 Error:Unary
1 Error:Clause Attachment
1 Error:UNSET add
1 Error:Unary
1 Error:UNSET remove
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;36m(SU[00m
			[01;31m(SU[00m
				(SIMPX
					(LK machen)
					(MF sie))[01;31m)[00m
			[01;31m(SU[00m
				(SIMPX
					(VF ich)
					(LK weis)
					(MF nicht)
					(NF
						(SIMPX
							(C ob)
							(MF
								(NX es)
								(ADVX vielleicht)
								(ADVX auch)
								[01;36m(PX[00m
									(PX uber das reiseburo)
									(ADJX moglich)[01;36m)[00m)
							(VC ware))))[01;31m)[00m[01;36m)[00m
		[01;31m(SU[00m
			(SIMPX ich konnte ja mal nachfragen)
			(SIMPX [01;33m(SIMPX[00m
				[01;31m(VF[00m
					[01;31m(SIMPX[00m
						(KOORD und)
						(C wenn)
						(MF nicht)[01;31m)[00m[01;31m)[00m
				(LK konnen)
				(MF wir ja)
				(VC weitersehen))
			(DM ja)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK ware)
				(MF vielleicht das beste))[01;31m)[00m)) [01;33mSIMPX)[00m
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SU', 'SIMPX'], 'mover info': [('SU', (0, 2))], 'old_family': ['SU', 'SU', 'SU', 'SU'], 'start left siblings': [], 'auto preterminals': ('VVFIN', 'PPER', 'PPER', 'VVFIN', 'PTKNEG', 'KOUS', 'PPER', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'ADJD', 'VAFIN', 'PPER', 'VMFIN', 'ADV', 'ADV', 'VVINF', 'KON', 'KOUS', 'PTKNEG', 'VMFIN', 'PPER', 'ADV', 'VVINF', 'PTKANT', 'PDS', 'VAFIN', 'ADV', 'ART', 'NN'), 'start right siblings': ['SU', 'SU', 'SU'], 'end left siblings': [], 'auto preterminal span': (0, 32), 'movers': ['SU'], 'old_parent': 'TURN', 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			[01;31m(SU[00m
				(SIMPX
					(LK machen)
					(MF sie))[01;31m)[00m
			(SIMPX
				(VF ich)
				(LK weis)
				(MF nicht)
				(NF
					(SIMPX
						(C ob)
						(MF
							(NX es)
							(ADVX vielleicht)
							(ADVX auch)
							[01;36m(PX[00m
								(PX uber das reiseburo)
								(ADJX moglich)[01;36m)[00m)
						(VC ware)))))
		[01;31m(SU[00m
			(SIMPX ich konnte ja mal nachfragen)
			(SIMPX [01;33m(SIMPX[00m
				[01;31m(VF[00m
					[01;31m(SIMPX[00m
						(KOORD und)
						(C wenn)
						(MF nicht)[01;31m)[00m[01;31m)[00m
				(LK konnen)
				(MF wir ja)
				(VC weitersehen))
			(DM ja)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK ware)
				(MF vielleicht das beste))[01;31m)[00m)) [01;33mSIMPX)[00m
Step:Modifier Attachment
{'subtrees': ['PX', 'ADJX'], 'family': ['NX', 'ADVX', 'ADVX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NN', 'ADJD'), 'right siblings': [], 'left siblings': [(NX (PPER es)), (ADVX (ADV vielleicht)), (ADVX (ADV auch))], 'auto preterminal span': (9, 13), 'span': (9, 13), 'parent': 'MF', 'label': 'PX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU
			[01;31m(SU[00m
				(SIMPX
					(LK machen)
					(MF sie))[01;31m)[00m
			(SIMPX ich weis nicht ob es vielleicht auch uber das reiseburo moglich ware))
		[01;31m(SU[00m
			(SIMPX ich konnte ja mal nachfragen)
			(SIMPX [01;33m(SIMPX[00m
				[01;31m(VF[00m
					[01;31m(SIMPX[00m
						(KOORD und)
						(C wenn)
						(MF nicht)[01;31m)[00m[01;31m)[00m
				(LK konnen)
				(MF wir ja)
				(VC weitersehen))
			(DM ja)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK ware)
				(MF vielleicht das beste))[01;31m)[00m)) [01;33mSIMPX)[00m
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SU', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'PPER', 'VVFIN', 'PTKNEG', 'KOUS', 'PPER', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'ADJD', 'VAFIN'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 14), 'span': (0, 2), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU machen sie ich weis nicht ob es vielleicht auch uber das reiseburo moglich ware)
		[01;31m(SU[00m
			(SIMPX ich konnte ja mal nachfragen)
			(SIMPX [01;33m(SIMPX[00m
				[01;31m(VF[00m
					[01;31m(SIMPX[00m
						(KOORD und)
						(C wenn)
						(MF nicht)[01;31m)[00m[01;31m)[00m
				(LK konnen)
				(MF wir ja)
				(VC weitersehen))
			(DM ja)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK ware)
				(MF vielleicht das beste))[01;31m)[00m)) [01;33mSIMPX)[00m
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX', 'DM'], 'family': ['SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'PPER', 'VVFIN', 'PTKNEG', 'KOUS', 'PPER', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'ADJD', 'VAFIN', 'PPER', 'VMFIN', 'ADV', 'ADV', 'VVINF', 'KON', 'KOUS', 'PTKNEG', 'VMFIN', 'PPER', 'ADV', 'VVINF', 'PTKANT', 'PDS', 'VAFIN', 'ADV', 'ART', 'NN'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 32), 'span': (14, 27), 'left siblings': ['SU'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU machen sie ich weis nicht ob es vielleicht auch uber das reiseburo moglich ware)
		(SIMPX ich konnte ja mal nachfragen)
		[01;36m(SIMPX[00m
			(SIMPX
				[01;31m(VF[00m
					[01;31m(SIMPX[00m
						(KOORD und)
						(C wenn)
						(MF nicht)[01;31m)[00m[01;31m)[00m
				(LK konnen)
				(MF wir ja)
				(VC weitersehen))
			(DM ja)
			[01;31m(SU[00m
				(SIMPX
					(VF das)
					(LK ware)
					(MF vielleicht das beste))[01;31m)[00m[01;36m)[00m))
Step:UNSET add
{'subtrees': ['SIMPX', 'DM', 'SU'], 'family': ['SU', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'KOUS', 'PTKNEG', 'VMFIN', 'PPER', 'ADV', 'VVINF', 'PTKANT', 'PDS', 'VAFIN', 'ADV', 'ART', 'NN'), 'right siblings': [], 'left siblings': [(SU (SIMPX (LK (VXFIN (VVFIN machen))) (MF (NX (PPER sie)))) (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN weis))) (MF (ADVX (PTKNEG nicht))) (NF (SIMPX (C (KOUS ob)) (MF (NX (PPER es)) (ADVX (ADV vielleicht)) (ADVX (ADV auch)) (PX (PX (APPR uber) (NX (ART das) (NN reiseburo))) (ADJX (ADJD moglich)))) (VC (VXFIN (VAFIN ware))))))), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VMFIN konnte))) (MF (ADVX (ADV ja)) (ADVX (ADV mal))) (VC (VXINF (VVINF nachfragen))))], 'auto preterminal span': (19, 32), 'span': (19, 32), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU machen sie ich weis nicht ob es vielleicht auch uber das reiseburo moglich ware)
		(SIMPX ich konnte ja mal nachfragen)
		(SIMPX
			(SIMPX
				[01;31m(VF[00m
					[01;31m(SIMPX[00m
						(KOORD und)
						(C wenn)
						(MF nicht)[01;31m)[00m[01;31m)[00m
				(LK konnen)
				(MF wir ja)
				(VC weitersehen))
			(DM ja)
			[01;31m(SU[00m
				(SIMPX
					(VF das)
					(LK ware)
					(MF vielleicht das beste))[01;31m)[00m)))
Step:Unary
{'subtrees': ['KOORD', 'C', 'MF'], 'family': ['SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'KOUS', 'PTKNEG'), 'right siblings': [], 'parent': 'VF', 'auto preterminal span': (19, 22), 'span': (19, 22), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU machen sie ich weis nicht ob es vielleicht auch uber das reiseburo moglich ware)
		(SIMPX ich konnte ja mal nachfragen)
		(SIMPX
			(SIMPX
				[01;31m(VF[00m
					(KOORD und)
					(C wenn)
					(MF nicht)[01;31m)[00m
				(LK konnen)
				(MF wir ja)
				(VC weitersehen))
			(DM ja)
			[01;31m(SU[00m
				(SIMPX
					(VF das)
					(LK ware)
					(MF vielleicht das beste))[01;31m)[00m)))
Step:UNSET remove
{'subtrees': ['KOORD', 'C', 'MF'], 'family': ['VF', 'LK', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'KOUS', 'PTKNEG', 'VMFIN', 'PPER', 'ADV', 'VVINF'), 'right siblings': ['LK', 'MF', 'VC'], 'parent': 'SIMPX', 'auto preterminal span': (19, 26), 'span': (19, 22), 'left siblings': [], 'label': 'VF', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU machen sie ich weis nicht ob es vielleicht auch uber das reiseburo moglich ware)
		(SIMPX ich konnte ja mal nachfragen)
		(SIMPX
			(SIMPX und wenn nicht konnen wir ja weitersehen)
			(DM ja)
			[01;31m(SU[00m
				(SIMPX
					(VF das)
					(LK ware)
					(MF vielleicht das beste))[01;31m)[00m)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SIMPX', 'DM', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'KOUS', 'PTKNEG', 'VMFIN', 'PPER', 'ADV', 'VVINF', 'PTKANT', 'PDS', 'VAFIN', 'ADV', 'ART', 'NN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (19, 32), 'span': (27, 32), 'left siblings': ['SIMPX', 'DM'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP machen sie ich weis nicht ob es vielleicht auch uber das reiseburo moglich ware ich konnte ja mal nachfragen und wenn nicht konnen wir ja weitersehen ja das ware vielleicht das beste)

Sentence 686:
19 Initial errors
0 on fringe, 15 iterations
2 Error:Single Word Phrase
2 Error:Clause Attachment
2 Error:UNSET move
2 Error:UNSET move
1 Error:Clause Attachment
1 Error:UNSET remove
1 Error:UNSET add
1 Error:Unary
1 Error:UNSET remove
1 Error:Clause Attachment
1 Error:Modifier Attachment
1 Error:Unary
1 Error:Unary
1 Error:UNSET remove
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;36m(SU[00m
				(DM ja)
				(PX mit den veranstaltungen)[01;36m)[00m
			[01;31m(SIMPX[00m [01;33m(SU (SIMPX[00m
				[01;36m(SIMPX[00m
					(VF ich)
					(LK sehe)
					(MF gerade)[01;36m)[00m
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						[01;31m(VF[00m
							[01;31m(PX[00m
								[01;31m(PX[00m
									(ADVX genau)
									(APPR in)
									[01;33m(NX[00m (NX der woche)[01;31m)[00m
								(R in der wir da sein werden)[01;31m)[00m[01;31m)[00m [01;33mNX) SIMPX) SU)[00m
						[01;36m(SIMPX[00m
							(LK ist)
							(MF
								[01;31m(NX[00m
									(ART das)
									(NN schutzenfest)[01;31m)[00m)[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK wird)
				(MF
					(NX
						(KOKOM als)
						[01;31m(NX[00m
							[01;36m(NX[00m [01;31m(ADJX[00m
								(ADJA grostes)[01;31m)[00m[01;36m)[00m
							(NN schutzenfest)[01;31m)[00m
						(NX der welt)))
				(VC deklariert))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF da)
				(LK konnten)
				(MF wir mal)
				(VC vorbeischauen))[01;31m)[00m))
Step:Single Word Phrase
{'family': ['NX', 'NN'], 'auto preterminal span': (23, 24), 'span': (23, 24), 'subtrees': ['ADJA'], 'parent': 'NX', 'over_word': True, 'auto preterminals': ('ADJA',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'NX')}
(TOP
	(TURN
		[01;31m(SU[00m
			[01;36m(SU[00m
				(DM ja)
				(PX mit den veranstaltungen)[01;36m)[00m
			[01;31m(SIMPX[00m [01;33m(SU (SIMPX[00m
				[01;36m(SIMPX[00m
					(VF ich)
					(LK sehe)
					(MF gerade)[01;36m)[00m
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						[01;31m(VF[00m
							[01;31m(PX[00m
								[01;31m(PX[00m
									(ADVX genau)
									(APPR in)
									[01;33m(NX[00m (NX der woche)[01;31m)[00m
								(R in der wir da sein werden)[01;31m)[00m[01;31m)[00m [01;33mNX) SIMPX) SU)[00m
						[01;36m(SIMPX[00m
							(LK ist)
							(MF
								[01;31m(NX[00m
									(ART das)
									(NN schutzenfest)[01;31m)[00m)[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF das)
				(LK wird)
				(MF
					(NX
						(KOKOM als)
						[01;31m(NX[00m
							(NX grostes)
							(NN schutzenfest)[01;31m)[00m
						(NX der welt)))
				(VC deklariert))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF da)
				(LK konnten)
				(MF wir mal)
				(VC vorbeischauen))[01;31m)[00m))
Step:Clause Attachment
{'new_parent': 'SU', 'new_family': ['SIMPX', 'SIMPX'], 'mover info': [('SIMPX', (4, 20))], 'old_family': ['DM', 'PX', 'SIMPX'], 'start left siblings': ['DM', 'PX'], 'auto preterminals': ('PTKANT', 'APPR', 'ART', 'NN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'APPR', 'PRELS', 'PPER', 'ADV', 'VAINF', 'VAFIN', 'VAFIN', 'ART', 'NN', 'PDS', 'VAFIN', 'KOKOM', 'ADJA', 'NN', 'ART', 'NN', 'VVPP', 'ADV', 'VMFIN', 'PPER', 'ADV', 'VVINF'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 33), 'movers': ['SIMPX'], 'old_parent': 'SU', 'end right siblings': ['SIMPX'], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU ja mit den veranstaltungen)
		[01;31m(SU[00m [01;33m(SU (SIMPX[00m
			[01;31m(SIMPX[00m
				[01;36m(SIMPX[00m
					(VF ich)
					(LK sehe)
					(MF gerade)[01;36m)[00m
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						[01;31m(VF[00m
							[01;31m(PX[00m
								[01;31m(PX[00m
									(ADVX genau)
									(APPR in)
									[01;33m(NX[00m (NX der woche)[01;31m)[00m
								(R in der wir da sein werden)[01;31m)[00m[01;31m)[00m [01;33mNX) SIMPX) SU)[00m
						[01;36m(SIMPX[00m
							(LK ist)
							(MF
								[01;31m(NX[00m
									(ART das)
									(NN schutzenfest)[01;31m)[00m)[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
			(SIMPX
				(VF das)
				(LK wird)
				(MF
					(NX
						(KOKOM als)
						[01;31m(NX[00m
							(NX grostes)
							(NN schutzenfest)[01;31m)[00m
						(NX der welt)))
				(VC deklariert))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF da)
				(LK konnten)
				(MF wir mal)
				(VC vorbeischauen))[01;31m)[00m))
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SIMPX', 'NF', 'SIMPX'], 'mover info': [('NF', (7, 20))], 'old_family': ['VF', 'LK', 'MF', 'NF'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'APPR', 'PRELS', 'PPER', 'ADV', 'VAINF', 'VAFIN', 'VAFIN', 'ART', 'NN', 'PDS', 'VAFIN', 'KOKOM', 'ADJA', 'NN', 'ART', 'NN', 'VVPP'), 'start right siblings': [], 'end left siblings': ['SIMPX'], 'auto preterminal span': (4, 28), 'movers': ['NF'], 'old_parent': 'SIMPX', 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU ja mit den veranstaltungen)
		[01;31m(SU[00m [01;33m(SU (SIMPX[00m
			(SIMPX ich sehe gerade)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					[01;31m(VF[00m
						[01;31m(PX[00m
							[01;31m(PX[00m
								(ADVX genau)
								(APPR in)
								[01;33m(NX[00m (NX der woche)[01;31m)[00m
							(R in der wir da sein werden)[01;31m)[00m[01;31m)[00m [01;33mNX) SIMPX) SU)[00m
					[01;36m(SIMPX[00m
						(LK ist)
						(MF
							[01;31m(NX[00m
								(ART das)
								(NN schutzenfest)[01;31m)[00m)[01;36m)[00m[01;31m)[00m[01;31m)[00m
			(SIMPX
				(VF das)
				(LK wird)
				(MF
					(NX
						(KOKOM als)
						[01;31m(NX[00m
							(NX grostes)
							(NN schutzenfest)[01;31m)[00m
						(NX der welt)))
				(VC deklariert))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF da)
				(LK konnten)
				(MF wir mal)
				(VC vorbeischauen))[01;31m)[00m))
Step:UNSET move
{'new_parent': 'NF', 'new_family': ['VF', 'SIMPX'], 'mover info': [('VF', (7, 17))], 'old_family': ['VF', 'LK', 'MF'], 'start left siblings': [], 'auto preterminals': ('ADV', 'APPR', 'ART', 'NN', 'APPR', 'PRELS', 'PPER', 'ADV', 'VAINF', 'VAFIN', 'VAFIN', 'ART', 'NN'), 'start right siblings': ['LK', 'MF'], 'end left siblings': [], 'auto preterminal span': (7, 20), 'movers': ['VF'], 'old_parent': 'SIMPX', 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU ja mit den veranstaltungen)
		[01;31m(SU[00m [01;33m(SU (SIMPX[00m
			(SIMPX ich sehe gerade)
			[01;31m(NF[00m
				[01;31m(VF[00m
					[01;31m(PX[00m
						[01;31m(PX[00m
							(ADVX genau)
							(APPR in)
							[01;33m(NX[00m (NX der woche)[01;31m)[00m
						(R in der wir da sein werden)[01;31m)[00m[01;31m)[00m [01;33mNX) SIMPX) SU)[00m
				(SIMPX
					(LK ist)
					(MF
						[01;31m(NX[00m
							(ART das)
							(NN schutzenfest)[01;31m)[00m))[01;31m)[00m
			(SIMPX
				(VF das)
				(LK wird)
				(MF
					(NX
						(KOKOM als)
						[01;31m(NX[00m
							(NX grostes)
							(NN schutzenfest)[01;31m)[00m
						(NX der welt)))
				(VC deklariert))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF da)
				(LK konnten)
				(MF wir mal)
				(VC vorbeischauen))[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'NF', 'SIMPX'], 'family': ['SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'APPR', 'ART', 'NN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'APPR', 'PRELS', 'PPER', 'ADV', 'VAINF', 'VAFIN', 'VAFIN', 'ART', 'NN', 'PDS', 'VAFIN', 'KOKOM', 'ADJA', 'NN', 'ART', 'NN', 'VVPP', 'ADV', 'VMFIN', 'PPER', 'ADV', 'VVINF'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 33), 'span': (4, 28), 'left siblings': ['SU'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU ja mit den veranstaltungen)
		[01;33m(SU (SIMPX[00m (SIMPX ich sehe gerade)
		[01;31m(NF[00m
			[01;31m(VF[00m
				[01;31m(PX[00m
					[01;31m(PX[00m
						(ADVX genau)
						(APPR in)
						[01;33m(NX[00m (NX der woche)[01;31m)[00m
					(R in der wir da sein werden)[01;31m)[00m[01;31m)[00m [01;33mNX) SIMPX) SU)[00m
			(SIMPX
				(LK ist)
				(MF
					[01;31m(NX[00m
						(ART das)
						(NN schutzenfest)[01;31m)[00m))[01;31m)[00m
		(SIMPX
			(VF das)
			(LK wird)
			(MF
				(NX
					(KOKOM als)
					[01;31m(NX[00m
						(NX grostes)
						(NN schutzenfest)[01;31m)[00m
					(NX der welt)))
			(VC deklariert))
		[01;31m(SU[00m
			(SIMPX
				(VF da)
				(LK konnten)
				(MF wir mal)
				(VC vorbeischauen))[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['ADVX', 'APPR', 'NX'], 'family': ['PX', 'R'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'APPR', 'ART', 'NN', 'APPR', 'PRELS', 'PPER', 'ADV', 'VAINF', 'VAFIN'), 'right siblings': ['R'], 'parent': 'PX', 'auto preterminal span': (7, 17), 'span': (7, 11), 'left siblings': [], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU ja mit den veranstaltungen)
		[01;33m(SU (SIMPX[00m (SIMPX ich sehe gerade)
		[01;31m(NF[00m
			[01;31m(VF[00m
				[01;31m(PX[00m
					(ADVX genau)
					(APPR in)
					[01;36m(NX[00m
						(NX der woche)
						(R in der wir da sein werden)[01;36m)[00m[01;31m)[00m[01;31m)[00m [01;33mSIMPX) SU)[00m
			(SIMPX
				(LK ist)
				(MF
					[01;31m(NX[00m
						(ART das)
						(NN schutzenfest)[01;31m)[00m))[01;31m)[00m
		(SIMPX
			(VF das)
			(LK wird)
			(MF
				(NX
					(KOKOM als)
					[01;31m(NX[00m
						(NX grostes)
						(NN schutzenfest)[01;31m)[00m
					(NX der welt)))
			(VC deklariert))
		[01;31m(SU[00m
			(SIMPX
				(VF da)
				(LK konnten)
				(MF wir mal)
				(VC vorbeischauen))[01;31m)[00m))
Step:UNSET add
{'subtrees': ['NX', 'R'], 'family': ['ADVX', 'APPR', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'APPR', 'PRELS', 'PPER', 'ADV', 'VAINF', 'VAFIN'), 'right siblings': [], 'left siblings': [(ADVX (ADV genau)), (APPR in)], 'auto preterminal span': (9, 17), 'span': (9, 17), 'parent': 'PX', 'label': 'NX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU ja mit den veranstaltungen)
		[01;33m(SU (SIMPX[00m (SIMPX ich sehe gerade)
		[01;31m(NF[00m
			[01;31m(VF[00m
				[01;31m(PX[00m
					(ADVX genau)
					(APPR in)
					(NX der woche in der wir da sein werden)[01;31m)[00m[01;31m)[00m [01;33mSIMPX) SU)[00m
			(SIMPX
				(LK ist)
				(MF
					[01;31m(NX[00m
						(ART das)
						(NN schutzenfest)[01;31m)[00m))[01;31m)[00m
		(SIMPX
			(VF das)
			(LK wird)
			(MF
				(NX
					(KOKOM als)
					[01;31m(NX[00m
						(NX grostes)
						(NN schutzenfest)[01;31m)[00m
					(NX der welt)))
			(VC deklariert))
		[01;31m(SU[00m
			(SIMPX
				(VF da)
				(LK konnten)
				(MF wir mal)
				(VC vorbeischauen))[01;31m)[00m))
Step:Unary
{'subtrees': ['ADVX', 'APPR', 'NX'], 'family': ['PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'APPR', 'ART', 'NN', 'APPR', 'PRELS', 'PPER', 'ADV', 'VAINF', 'VAFIN'), 'right siblings': [], 'parent': 'VF', 'auto preterminal span': (7, 17), 'span': (7, 17), 'left siblings': [], 'label': 'PX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU ja mit den veranstaltungen)
		[01;33m(SU (SIMPX[00m (SIMPX ich sehe gerade)
		[01;31m(NF[00m
			[01;31m(VF[00m
				(ADVX genau)
				(APPR in)
				(NX der woche in der wir da sein werden)[01;31m)[00m [01;33mSIMPX) SU)[00m
			(SIMPX
				(LK ist)
				(MF
					[01;31m(NX[00m
						(ART das)
						(NN schutzenfest)[01;31m)[00m))[01;31m)[00m
		(SIMPX
			(VF das)
			(LK wird)
			(MF
				(NX
					(KOKOM als)
					[01;31m(NX[00m
						(NX grostes)
						(NN schutzenfest)[01;31m)[00m
					(NX der welt)))
			(VC deklariert))
		[01;31m(SU[00m
			(SIMPX
				(VF da)
				(LK konnten)
				(MF wir mal)
				(VC vorbeischauen))[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['ADVX', 'APPR', 'NX'], 'family': ['VF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'APPR', 'ART', 'NN', 'APPR', 'PRELS', 'PPER', 'ADV', 'VAINF', 'VAFIN', 'VAFIN', 'ART', 'NN'), 'right siblings': ['SIMPX'], 'parent': 'NF', 'auto preterminal span': (7, 20), 'span': (7, 17), 'left siblings': [], 'label': 'VF', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU ja mit den veranstaltungen)
		[01;33m(SU (SIMPX[00m (SIMPX ich sehe gerade)
		[01;31m(NF[00m
			(ADVX genau)
			(APPR in)
			(NX der woche in der wir da sein werden) [01;33mSIMPX) SU)[00m
			(SIMPX
				(LK ist)
				(MF
					[01;31m(NX[00m
						(ART das)
						(NN schutzenfest)[01;31m)[00m))[01;31m)[00m
		(SIMPX
			(VF das)
			(LK wird)
			(MF
				(NX
					(KOKOM als)
					[01;31m(NX[00m
						(NX grostes)
						(NN schutzenfest)[01;31m)[00m
					(NX der welt)))
			(VC deklariert))
		[01;31m(SU[00m
			(SIMPX
				(VF da)
				(LK konnten)
				(MF wir mal)
				(VC vorbeischauen))[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['ADVX', 'APPR', 'NX', 'SIMPX'], 'family': ['SU', 'SIMPX', 'NF', 'SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'APPR', 'ART', 'NN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'APPR', 'PRELS', 'PPER', 'ADV', 'VAINF', 'VAFIN', 'VAFIN', 'ART', 'NN', 'PDS', 'VAFIN', 'KOKOM', 'ADJA', 'NN', 'ART', 'NN', 'VVPP', 'ADV', 'VMFIN', 'PPER', 'ADV', 'VVINF'), 'right siblings': ['SIMPX', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 33), 'span': (7, 20), 'left siblings': ['SU', 'SIMPX'], 'label': 'NF', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU ja mit den veranstaltungen)
		[01;36m(SU[00m
			[01;36m(SIMPX[00m
				(SIMPX ich sehe gerade)
				(ADVX genau)
				(APPR in)
				(NX der woche in der wir da sein werden)[01;36m)[00m[01;36m)[00m
		(SIMPX
			(LK ist)
			(MF
				[01;31m(NX[00m
					(ART das)
					(NN schutzenfest)[01;31m)[00m))
		(SIMPX
			(VF das)
			(LK wird)
			(MF
				(NX
					(KOKOM als)
					[01;31m(NX[00m
						(NX grostes)
						(NN schutzenfest)[01;31m)[00m
					(NX der welt)))
			(VC deklariert))
		[01;31m(SU[00m
			(SIMPX
				(VF da)
				(LK konnten)
				(MF wir mal)
				(VC vorbeischauen))[01;31m)[00m))
Step:Modifier Attachment
{'subtrees': ['SIMPX', 'ADVX', 'APPR', 'NX'], 'family': ['SU', 'SIMPX', 'SIMPX', 'SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'APPR', 'PRELS', 'PPER', 'ADV', 'VAINF', 'VAFIN'), 'right siblings': [(SIMPX (LK (VXFIN (VAFIN ist))) (MF (NX (ART das) (NN schutzenfest)))), (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VAFIN wird))) (MF (NX (KOKOM als) (NX (NX (ADJA grostes)) (NN schutzenfest)) (NX (ART der) (NN welt)))) (VC (VXINF (VVPP deklariert)))), (SU (SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VMFIN konnten))) (MF (NX (PPER wir)) (ADVX (ADV mal))) (VC (VXINF (VVINF vorbeischauen)))))], 'left siblings': [(SU (DM (PTKANT ja)) (PX (APPR mit) (NX (ART den) (NN veranstaltungen))))], 'auto preterminal span': (4, 17), 'span': (4, 17), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		(SU ja mit den veranstaltungen)
		[01;36m(SU[00m
			(SIMPX
				(SIMPX ich sehe gerade)
				(ADVX genau)
				(APPR in)
				(NX der woche in der wir da sein werden))[01;36m)[00m
		(SIMPX
			(LK ist)
			(MF
				[01;31m(NX[00m
					(ART das)
					(NN schutzenfest)[01;31m)[00m))
		(SIMPX
			(VF das)
			(LK wird)
			(MF
				(NX
					(KOKOM als)
					[01;31m(NX[00m
						(NX grostes)
						(NN schutzenfest)[01;31m)[00m
					(NX der welt)))
			(VC deklariert))
		[01;31m(SU[00m
			(SIMPX
				(VF da)
				(LK konnten)
				(MF wir mal)
				(VC vorbeischauen))[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SU', 'SU', 'SIMPX', 'SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'APPR', 'PRELS', 'PPER', 'ADV', 'VAINF', 'VAFIN'), 'right siblings': [(SIMPX (LK (VXFIN (VAFIN ist))) (MF (NX (ART das) (NN schutzenfest)))), (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VAFIN wird))) (MF (NX (KOKOM als) (NX (NX (ADJA grostes)) (NN schutzenfest)) (NX (ART der) (NN welt)))) (VC (VXINF (VVPP deklariert)))), (SU (SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VMFIN konnten))) (MF (NX (PPER wir)) (ADVX (ADV mal))) (VC (VXINF (VVINF vorbeischauen)))))], 'left siblings': [(SU (DM (PTKANT ja)) (PX (APPR mit) (NX (ART den) (NN veranstaltungen))))], 'auto preterminal span': (4, 17), 'span': (4, 17), 'parent': 'TURN', 'label': 'SU', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU ja mit den veranstaltungen)
		(SU ich sehe gerade genau in der woche in der wir da sein werden)
		(SIMPX
			(LK ist)
			(MF
				[01;31m(NX[00m
					(ART das)
					(NN schutzenfest)[01;31m)[00m))
		(SIMPX
			(VF das)
			(LK wird)
			(MF
				(NX
					(KOKOM als)
					[01;31m(NX[00m
						(NX grostes)
						(NN schutzenfest)[01;31m)[00m
					(NX der welt)))
			(VC deklariert))
		[01;31m(SU[00m
			(SIMPX
				(VF da)
				(LK konnten)
				(MF wir mal)
				(VC vorbeischauen))[01;31m)[00m))
Step:Unary
{'subtrees': ['ART', 'NN'], 'family': ['NX'], 'over_word': False, 'over words': True, 'auto preterminals': ('ART', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (18, 20), 'span': (18, 20), 'left siblings': [], 'label': 'NX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU ja mit den veranstaltungen)
		(SU ich sehe gerade genau in der woche in der wir da sein werden)
		(SIMPX ist das schutzenfest)
		(SIMPX
			(VF das)
			(LK wird)
			(MF
				(NX
					(KOKOM als)
					[01;31m(NX[00m
						(NX grostes)
						(NN schutzenfest)[01;31m)[00m
					(NX der welt)))
			(VC deklariert))
		[01;31m(SU[00m
			(SIMPX
				(VF da)
				(LK konnten)
				(MF wir mal)
				(VC vorbeischauen))[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['NX', 'NN'], 'family': ['KOKOM', 'NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOKOM', 'ADJA', 'NN', 'ART', 'NN'), 'right siblings': ['NX'], 'parent': 'NX', 'auto preterminal span': (22, 27), 'span': (23, 25), 'left siblings': ['KOKOM'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU ja mit den veranstaltungen)
		(SU ich sehe gerade genau in der woche in der wir da sein werden)
		(SIMPX ist das schutzenfest)
		(SIMPX das wird als grostes schutzenfest der welt deklariert)
		[01;31m(SU[00m
			(SIMPX
				(VF da)
				(LK konnten)
				(MF wir mal)
				(VC vorbeischauen))[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SU', 'SU', 'SIMPX', 'SIMPX', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'APPR', 'ART', 'NN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'APPR', 'PRELS', 'PPER', 'ADV', 'VAINF', 'VAFIN', 'VAFIN', 'ART', 'NN', 'PDS', 'VAFIN', 'KOKOM', 'ADJA', 'NN', 'ART', 'NN', 'VVPP', 'ADV', 'VMFIN', 'PPER', 'ADV', 'VVINF'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 33), 'span': (28, 33), 'left siblings': ['SU', 'SU', 'SIMPX', 'SIMPX'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja mit den veranstaltungen ich sehe gerade genau in der woche in der wir da sein werden ist das schutzenfest das wird als grostes schutzenfest der welt deklariert da konnten wir mal vorbeischauen)

Sentence 687:
2 Initial errors
0 on fringe, 2 iterations
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU ja hallo frau bergmann)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF am ersten juliwochenende)
				(LK wollen)
				(MF sie)
				(VC fahren)[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'NN', 'NE', 'APPRART', 'ADJA', 'NN', 'VMFIN', 'PPER', 'VVINF'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 10), 'span': (4, 10), 'left siblings': ['SU'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU ja hallo frau bergmann)
		[01;31m(SIMPX[00m
			(VF am ersten juliwochenende)
			(LK wollen)
			(MF sie)
			(VC fahren)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['SU', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'NN', 'NE', 'APPRART', 'ADJA', 'NN', 'VMFIN', 'PPER', 'VVINF'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 10), 'span': (4, 10), 'left siblings': ['SU'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ja hallo frau bergmann am ersten juliwochenende wollen sie fahren)

Sentence 688:
2 Initial errors
0 on fringe, 1 iterations
2 Error:UNSET move
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SU[00m
	(TOP
		(TURN
			[01;31m(SU[00m
				(DM ja)
				(DM richtig)[01;31m)[00m
			(SU sehe ich auch so)))[01;36m)[00m
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['DM', 'DM', 'SU'], 'mover info': [('SU', (2, 6))], 'old_family': ['SU', 'SU'], 'start left siblings': ['SU'], 'auto preterminals': ('PTKANT', 'ITJ', 'VVFIN', 'PPER', 'ADV', 'ADV'), 'start right siblings': [], 'end left siblings': ['DM', 'DM'], 'auto preterminal span': (0, 6), 'movers': ['SU'], 'old_parent': 'TURN', 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP ja richtig sehe ich auch so)

Sentence 689:
13 Initial errors
0 on fringe, 7 iterations
6 Error:UNSET move
2 Error:Different label
1 Error:Unary
1 Error:Unary
1 Error:Unary
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM
				(PTKANT ja))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF da)
				(LK geht)
				(MF uns auch nicht soviel zeit)
				[01;36m(VXINF[00m
					(VC
						(PTKVZ verloren))[01;36m)[00m)[01;31m)[00m
		[01;31m(SU[00m
			(DM
				(PTKANT ja))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF wie)
				(LK machen)
				(MF wir das))[01;31m)[00m
		[01;36m(SU[00m
			[01;36m(SIMPX[00m
				[01;31m(SU[00m
					[01;31m(SIMPX[00m
						(SIMPX rufen sie beim reiseburo an)
						(KON oder)
						[01;31m(SIMPX[00m [01;33m(SIMPX[00m
							(LK soll)
							(MF ich es)
							(VC machen)[01;31m)[00m[01;31m)[00m[01;31m)[00m
				[01;36m(NF[00m [01;31m(SU[00m
					(PX
						(APPR wegen)
						(NX der flugverbindung))[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;36m)[00m)) [01;33mSIMPX)[00m
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['LK', 'MF', 'VC', 'SU'], 'mover info': [('SU', (24, 27))], 'old_family': ['SU', 'SU', 'SU', 'SU', 'SU', 'SU'], 'start left siblings': ['SU', 'SU', 'SU', 'SU', 'SU'], 'auto preterminals': ('PTKANT', 'ADV', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'PIAT', 'NN', 'PTKVZ', 'PTKANT', 'PWAV', 'VVFIN', 'PPER', 'PDS', 'VVFIN', 'PPER', 'APPRART', 'NN', 'PTKVZ', 'KON', 'VMFIN', 'PPER', 'PPER', 'VVINF', 'APPR', 'ART', 'NN'), 'start right siblings': [], 'end left siblings': ['LK', 'MF', 'VC'], 'auto preterminal span': (0, 27), 'movers': ['SU'], 'old_parent': 'TURN', 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM
				(PTKANT ja))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF da)
				(LK geht)
				(MF uns auch nicht soviel zeit)
				[01;36m(VXINF[00m
					(VC
						(PTKVZ verloren))[01;36m)[00m)[01;31m)[00m
		[01;31m(SU[00m
			(DM
				(PTKANT ja))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF wie)
				(LK machen)
				(MF wir das))[01;31m)[00m
		(SU
			(SIMPX
				(SIMPX rufen sie beim reiseburo an)
				(KON oder)
				(SIMPX
					(LK soll)
					(MF ich es)
					(VC machen)
					[01;36m(NF[00m [01;31m(SU[00m
						(PX
							(APPR wegen)
							(NX der flugverbindung))[01;31m)[00m[01;36m)[00m)))))
Step:Different label
{'family': ['LK', 'MF', 'VC', 'NF'], 'auto preterminal span': (24, 27), 'span': (24, 27), 'subtrees': ['PX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('APPR', 'ART', 'NN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('SU', 'NF')}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM
				(PTKANT ja))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF da)
				(LK geht)
				(MF uns auch nicht soviel zeit)
				[01;36m(VXINF[00m
					(VC
						(PTKVZ verloren))[01;36m)[00m)[01;31m)[00m
		[01;31m(SU[00m
			(DM
				(PTKANT ja))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF wie)
				(LK machen)
				(MF wir das))[01;31m)[00m
		(SU rufen sie beim reiseburo an oder soll ich es machen wegen der flugverbindung)))
Step:Unary
{'subtrees': ['VC'], 'family': ['VF', 'LK', 'MF', 'VXINF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKVZ',), 'right siblings': [], 'left siblings': [(VF (ADVX (ADV da))), (LK (VXFIN (VVFIN geht))), (MF (NX (PPER uns)) (ADVX (ADV auch)) (ADVX (PTKNEG nicht)) (NX (PIAT soviel) (NN zeit)))], 'auto preterminal span': (8, 9), 'span': (8, 9), 'parent': 'SIMPX', 'label': 'VXINF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM
				(PTKANT ja))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF da)
				(LK geht)
				(MF uns auch nicht soviel zeit)
				(VXINF verloren))[01;31m)[00m
		[01;31m(SU[00m
			(DM
				(PTKANT ja))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF wie)
				(LK machen)
				(MF wir das))[01;31m)[00m
		(SU rufen sie beim reiseburo an oder soll ich es machen wegen der flugverbindung)))
Step:Unary
{'subtrees': ['DM'], 'family': ['SU', 'SU', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADV', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'PIAT', 'NN', 'PTKVZ', 'PTKANT', 'PWAV', 'VVFIN', 'PPER', 'PDS', 'VVFIN', 'PPER', 'APPRART', 'NN', 'PTKVZ', 'KON', 'VMFIN', 'PPER', 'PPER', 'VVINF', 'APPR', 'ART', 'NN'), 'right siblings': ['SU', 'SU', 'SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 27), 'span': (0, 1), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		[01;31m(SU[00m
			(SIMPX
				(VF da)
				(LK geht)
				(MF uns auch nicht soviel zeit)
				(VXINF verloren))[01;31m)[00m
		[01;31m(SU[00m
			(DM
				(PTKANT ja))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF wie)
				(LK machen)
				(MF wir das))[01;31m)[00m
		(SU rufen sie beim reiseburo an oder soll ich es machen wegen der flugverbindung)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['DM', 'SU', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADV', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'PIAT', 'NN', 'PTKVZ', 'PTKANT', 'PWAV', 'VVFIN', 'PPER', 'PDS', 'VVFIN', 'PPER', 'APPRART', 'NN', 'PTKVZ', 'KON', 'VMFIN', 'PPER', 'PPER', 'VVINF', 'APPR', 'ART', 'NN'), 'right siblings': ['SU', 'SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 27), 'span': (1, 9), 'left siblings': ['DM'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX da geht uns auch nicht soviel zeit verloren)
		[01;31m(SU[00m
			(DM
				(PTKANT ja))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF wie)
				(LK machen)
				(MF wir das))[01;31m)[00m
		(SU rufen sie beim reiseburo an oder soll ich es machen wegen der flugverbindung)))
Step:Unary
{'subtrees': ['DM'], 'family': ['DM', 'SIMPX', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADV', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'PIAT', 'NN', 'PTKVZ', 'PTKANT', 'PWAV', 'VVFIN', 'PPER', 'PDS', 'VVFIN', 'PPER', 'APPRART', 'NN', 'PTKVZ', 'KON', 'VMFIN', 'PPER', 'PPER', 'VVINF', 'APPR', 'ART', 'NN'), 'right siblings': ['SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 27), 'span': (9, 10), 'left siblings': ['DM', 'SIMPX'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX da geht uns auch nicht soviel zeit verloren)
		(DM ja)
		[01;31m(SU[00m
			(SIMPX
				(VF wie)
				(LK machen)
				(MF wir das))[01;31m)[00m
		(SU rufen sie beim reiseburo an oder soll ich es machen wegen der flugverbindung)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['DM', 'SIMPX', 'DM', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADV', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'PIAT', 'NN', 'PTKVZ', 'PTKANT', 'PWAV', 'VVFIN', 'PPER', 'PDS', 'VVFIN', 'PPER', 'APPRART', 'NN', 'PTKVZ', 'KON', 'VMFIN', 'PPER', 'PPER', 'VVINF', 'APPR', 'ART', 'NN'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 27), 'span': (10, 14), 'left siblings': ['DM', 'SIMPX', 'DM'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja da geht uns auch nicht soviel zeit verloren ja wie machen wir das rufen sie beim reiseburo an oder soll ich es machen wegen der flugverbindung)

Sentence 690:
18 Initial errors
0 on fringe, 9 iterations
5 Error:Clause Attachment
2 Error:Different label
2 Error:Single Word Phrase
2 Error:Different label
2 Error:UNSET move
2 Error:UNSET move
1 Error:Unary
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SU[00m
	(TOP
		(TURN
			[01;31m(SU[00m
				(DM
					(PTKANT ja))[01;31m)[00m
			[01;31m(SU[00m
				(SIMPX
					(VF ich)
					(LK meine)
					[01;36m(SIMPX[00m
						[01;36m(NF[00m
							[01;31m(SIMPX[00m [01;33m(SIMPX (NF[00m
								(VF wir)
								(LK hatten)[01;31m)[00m
							[01;31m(NF[00m
								[01;31m(SIMPX[00m
									[01;36m(MF[00m [01;31m(VF[00m
										[01;31m(NX[00m
											(NX letztes mal)
											(PX bei der expo)[01;31m)[00m[01;31m)[00m [01;33mNF) SIMPX)[00m[01;36m)[00m
									(LK hatten)
									(MF
										(NX wir)
										[01;36m(PX[00m [01;31m(NX[00m
											[01;36m(ADVX[00m [01;31m(NX[00m
												(NN flugmoglichkeiten)[01;31m)[00m[01;36m)[00m
											[01;31m(PX[00m
												(APPR um)
												(NX sieben uhr zehn und acht uhr zehn)[01;31m)[00m[01;31m)[00m[01;36m)[00m)
									(VC gehabt)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m)[01;31m)[00m))[01;36m)[00m
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['SIMPX', 'VF', 'LK', 'MF', 'VC'], 'mover info': [('SIMPX', (3, 5))], 'old_family': ['VF', 'LK', 'SIMPX', 'NF'], 'start left siblings': ['VF', 'LK'], 'auto preterminals': ('PPER', 'VVFIN', 'PPER', 'VAFIN', 'ADJA', 'NN', 'APPR', 'ART', 'NE', 'VAFIN', 'PPER', 'NN', 'APPR', 'CARD', 'NN', 'CARD', 'KON', 'CARD', 'NN', 'CARD', 'VAPP'), 'start right siblings': ['NF'], 'end left siblings': [], 'auto preterminal span': (1, 22), 'adding node already present': False, 'movers': ['SIMPX'], 'old_parent': 'SIMPX', 'added and moved': True, 'end right siblings': ['VF', 'LK', 'MF', 'VC'], 'classified_type': 'Clause Attachment', 'type': 'move', 'added label': 'PX'}
[01;36m(SU[00m
	(TOP
		(TURN
			[01;31m(SU[00m
				(DM
					(PTKANT ja))[01;31m)[00m
			[01;31m(SU[00m
				(SIMPX
					(VF ich)
					(LK meine)
					(NF
						(SIMPX
							[01;36m(SIMPX[00m
								(NF
									[01;31m(SIMPX[00m
										(VF wir)
										(LK hatten)[01;31m)[00m
									[01;36m(MF[00m [01;31m(VF[00m
										[01;31m(NX[00m
											(NX letztes mal)
											(PX bei der expo)[01;31m)[00m[01;31m)[00m[01;36m)[00m)[01;36m)[00m
							(LK hatten)
							(MF
								(NX wir)
								[01;36m(PX[00m [01;31m(NX[00m
									[01;36m(ADVX[00m [01;31m(NX[00m
										(NN flugmoglichkeiten)[01;31m)[00m[01;36m)[00m
									[01;31m(PX[00m
										(APPR um)
										(NX sieben uhr zehn und acht uhr zehn)[01;31m)[00m[01;31m)[00m[01;36m)[00m)
							(VC gehabt))))[01;31m)[00m))[01;36m)[00m
Step:Different label
{'family': ['SIMPX', 'MF'], 'auto preterminal span': (5, 10), 'span': (5, 10), 'subtrees': ['NX'], 'parent': 'NF', 'over_word': False, 'auto preterminals': ('ADJA', 'NN', 'APPR', 'ART', 'NE'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('VF', 'MF')}
[01;36m(SU[00m
	(TOP
		(TURN
			[01;31m(SU[00m
				(DM
					(PTKANT ja))[01;31m)[00m
			[01;31m(SU[00m
				(SIMPX
					(VF ich)
					(LK meine)
					(NF
						(SIMPX
							[01;36m(SIMPX[00m
								(NF
									[01;31m(SIMPX[00m
										(VF wir)
										(LK hatten)[01;31m)[00m
									(MF
										[01;31m(NX[00m
											(NX letztes mal)
											(PX bei der expo)[01;31m)[00m))[01;36m)[00m
							(LK hatten)
							(MF
								(NX wir)
								[01;36m(PX[00m [01;31m(NX[00m
									[01;36m(ADVX[00m [01;31m(NX[00m
										(NN flugmoglichkeiten)[01;31m)[00m[01;36m)[00m
									[01;31m(PX[00m
										(APPR um)
										(NX sieben uhr zehn und acht uhr zehn)[01;31m)[00m[01;31m)[00m[01;36m)[00m)
							(VC gehabt))))[01;31m)[00m))[01;36m)[00m
Step:Single Word Phrase
{'family': ['ADVX', 'PX'], 'auto preterminal span': (12, 13), 'span': (12, 13), 'subtrees': ['NN'], 'parent': 'NX', 'over_word': True, 'auto preterminals': ('NN',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('NX', 'ADVX')}
[01;36m(SU[00m
	(TOP
		(TURN
			[01;31m(SU[00m
				(DM
					(PTKANT ja))[01;31m)[00m
			[01;31m(SU[00m
				(SIMPX
					(VF ich)
					(LK meine)
					(NF
						(SIMPX
							[01;36m(SIMPX[00m
								(NF
									[01;31m(SIMPX[00m
										(VF wir)
										(LK hatten)[01;31m)[00m
									(MF
										[01;31m(NX[00m
											(NX letztes mal)
											(PX bei der expo)[01;31m)[00m))[01;36m)[00m
							(LK hatten)
							(MF
								(NX wir)
								[01;36m(PX[00m [01;31m(NX[00m
									(ADVX flugmoglichkeiten)
									[01;31m(PX[00m
										(APPR um)
										(NX sieben uhr zehn und acht uhr zehn)[01;31m)[00m[01;31m)[00m[01;36m)[00m)
							(VC gehabt))))[01;31m)[00m))[01;36m)[00m
Step:Different label
{'family': ['NX', 'PX'], 'auto preterminal span': (12, 21), 'span': (12, 21), 'subtrees': ['ADVX', 'PX'], 'parent': 'MF', 'over_word': False, 'auto preterminals': ('NN', 'APPR', 'CARD', 'NN', 'CARD', 'KON', 'CARD', 'NN', 'CARD'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('NX', 'PX')}
[01;36m(SU[00m
	(TOP
		(TURN
			[01;31m(SU[00m
				(DM
					(PTKANT ja))[01;31m)[00m
			[01;31m(SU[00m
				(SIMPX
					(VF ich)
					(LK meine)
					(NF
						(SIMPX
							[01;36m(SIMPX[00m
								(NF
									[01;31m(SIMPX[00m
										(VF wir)
										(LK hatten)[01;31m)[00m
									(MF
										[01;31m(NX[00m
											(NX letztes mal)
											(PX bei der expo)[01;31m)[00m))[01;36m)[00m
							(LK hatten)
							(MF
								(NX wir)
								(PX
									(ADVX flugmoglichkeiten)
									[01;31m(PX[00m
										(APPR um)
										(NX sieben uhr zehn und acht uhr zehn)[01;31m)[00m))
							(VC gehabt))))[01;31m)[00m))[01;36m)[00m
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SU', 'SIMPX'], 'mover info': [('SU', (0, 1))], 'old_family': ['SU', 'SU'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'PPER', 'VVFIN', 'PPER', 'VAFIN', 'ADJA', 'NN', 'APPR', 'ART', 'NE', 'VAFIN', 'PPER', 'NN', 'APPR', 'CARD', 'NN', 'CARD', 'KON', 'CARD', 'NN', 'CARD', 'VAPP'), 'start right siblings': ['SU'], 'end left siblings': [], 'auto preterminal span': (0, 22), 'movers': ['SU'], 'old_parent': 'TURN', 'POS confusion': ('PTKANT', 'PTKANT'), 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			[01;31m(SU[00m
				(DM
					(PTKANT ja))[01;31m)[00m
			(SIMPX
				(VF ich)
				(LK meine)
				(NF
					(SIMPX
						[01;36m(SIMPX[00m
							(NF
								[01;31m(SIMPX[00m
									(VF wir)
									(LK hatten)[01;31m)[00m
								(MF
									[01;31m(NX[00m
										(NX letztes mal)
										(PX bei der expo)[01;31m)[00m))[01;36m)[00m
						(LK hatten)
						(MF
							(NX wir)
							(PX
								(ADVX flugmoglichkeiten)
								[01;31m(PX[00m
									(APPR um)
									(NX sieben uhr zehn und acht uhr zehn)[01;31m)[00m))
						(VC gehabt)))))))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF'], 'mover info': [('MF', (5, 10))], 'old_family': ['SIMPX', 'MF'], 'start left siblings': ['SIMPX'], 'auto preterminals': ('PPER', 'VAFIN', 'ADJA', 'NN', 'APPR', 'ART', 'NE'), 'start right siblings': [], 'end left siblings': ['VF', 'LK'], 'auto preterminal span': (3, 10), 'movers': ['MF'], 'old_parent': 'NF', 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			[01;31m(SU[00m
				(DM
					(PTKANT ja))[01;31m)[00m
			(SIMPX
				(VF ich)
				(LK meine)
				(NF
					(SIMPX
						(NF
							(SIMPX
								(VF wir)
								(LK hatten)
								(MF
									[01;31m(NX[00m
										(NX letztes mal)
										(PX bei der expo)[01;31m)[00m)))
						(LK hatten)
						(MF
							(NX wir)
							(PX
								(ADVX flugmoglichkeiten)
								[01;31m(PX[00m
									(APPR um)
									(NX sieben uhr zehn und acht uhr zehn)[01;31m)[00m))
						(VC gehabt)))))))
Step:Unary
{'subtrees': ['DM'], 'family': ['SU', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VVFIN', 'PPER', 'VAFIN', 'ADJA', 'NN', 'APPR', 'ART', 'NE', 'VAFIN', 'PPER', 'NN', 'APPR', 'CARD', 'NN', 'CARD', 'KON', 'CARD', 'NN', 'CARD', 'VAPP'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 22), 'span': (0, 1), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX
				(VF ich)
				(LK meine)
				(NF
					(SIMPX
						(NF
							(SIMPX
								(VF wir)
								(LK hatten)
								(MF
									[01;31m(NX[00m
										(NX letztes mal)
										(PX bei der expo)[01;31m)[00m)))
						(LK hatten)
						(MF
							(NX wir)
							(PX
								(ADVX flugmoglichkeiten)
								[01;31m(PX[00m
									(APPR um)
									(NX sieben uhr zehn und acht uhr zehn)[01;31m)[00m))
						(VC gehabt)))))))
Step:Unary
{'subtrees': ['NX', 'PX'], 'family': ['NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJA', 'NN', 'APPR', 'ART', 'NE'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (5, 10), 'span': (5, 10), 'left siblings': [], 'label': 'NX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX
				(VF ich)
				(LK meine)
				(NF
					(SIMPX
						(NF wir hatten letztes mal bei der expo)
						(LK hatten)
						(MF
							(NX wir)
							(PX
								(ADVX flugmoglichkeiten)
								[01;31m(PX[00m
									(APPR um)
									(NX sieben uhr zehn und acht uhr zehn)[01;31m)[00m))
						(VC gehabt)))))))
Step:UNSET remove
{'subtrees': ['APPR', 'NX'], 'family': ['ADVX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'APPR', 'CARD', 'NN', 'CARD', 'KON', 'CARD', 'NN', 'CARD'), 'right siblings': [], 'parent': 'PX', 'auto preterminal span': (12, 21), 'span': (13, 21), 'left siblings': ['ADVX'], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ja ich meine wir hatten letztes mal bei der expo hatten wir flugmoglichkeiten um sieben uhr zehn und acht uhr zehn gehabt)

Sentence 691:
2 Initial errors
0 on fringe, 1 iterations
2 Error:UNSET move
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SU[00m
	(TOP
		(TURN
			[01;31m(SU[00m
				(DM
					(PTKANT ja))[01;31m)[00m
			(SU sollen wir montags starten)))[01;36m)[00m
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['DM', 'SU'], 'mover info': [('SU', (1, 5))], 'old_family': ['SU', 'SU'], 'start left siblings': ['SU'], 'auto preterminals': ('PTKANT', 'VMFIN', 'PPER', 'ADV', 'VVINF'), 'start right siblings': [], 'end left siblings': ['DM'], 'auto preterminal span': (0, 5), 'movers': ['SU'], 'old_parent': 'TURN', 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP ja sollen wir montags starten)

Sentence 692:
9 Initial errors
0 on fringe, 4 iterations
5 Error:UNSET move
2 Error:PP Attachment
1 Error:Single Word Phrase
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SU[00m
	(TOP
		(TURN
			[01;31m(SU[00m
				(DM ja)
				(DM moment)
				[01;31m(SIMPX[00m [01;33m(SIMPX[00m
					(VF ich)
					(LK gucke)
					[01;31m(MF[00m [01;33m(MF[00m
						(ADVX mal)
						(ADVX eben)[01;31m)[00m
					[01;31m(VC[00m [01;33m(PX[00m
						(PTKVZ nach)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			[01;31m(SU[00m
				(NX
					(ADJX erstes)
					(NN juliwochenende))[01;31m)[00m)) [01;33mPX) MF) SIMPX)[00m[01;36m)[00m
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'VC', 'SU'], 'mover info': [('SU', (7, 9))], 'old_family': ['SU', 'SU'], 'start left siblings': ['SU'], 'auto preterminals': ('PTKANT', 'NN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'PTKVZ', 'ADJA', 'NN'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'MF', 'VC'], 'auto preterminal span': (0, 9), 'adding node already present': False, 'movers': ['SU'], 'old_parent': 'TURN', 'added and moved': True, 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'PX'}
(TOP
	(TURN
		(SU
			(DM ja)
			(DM moment)
			(SIMPX
				(VF ich)
				(LK gucke)
				[01;36m(MF[00m
					[01;31m(MF[00m
						(ADVX mal)
						(ADVX eben)[01;31m)[00m
					(PX
						[01;31m(VC[00m
							(PTKVZ nach)[01;31m)[00m
						[01;31m(SU[00m
							(NX
								(ADJX erstes)
								(NN juliwochenende))[01;31m)[00m)[01;36m)[00m))))
Step:PP Attachment
{'new_parent': 'MF', 'new_family': ['ADVX', 'ADVX', 'PX'], 'mover info': [('PX', (6, 9))], 'old_family': ['VF', 'LK', 'MF', 'PX'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'ADV', 'PTKVZ', 'ADJA', 'NN'), 'start right siblings': [], 'end left siblings': ['ADVX', 'ADVX'], 'auto preterminal span': (2, 9), 'movers': ['PX'], 'old_parent': 'SIMPX', 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU
			(DM ja)
			(DM moment)
			(SIMPX
				(VF ich)
				(LK gucke)
				(MF
					(ADVX mal)
					(ADVX eben)
					(PX
						[01;31m(VC[00m
							(PTKVZ nach)[01;31m)[00m
						[01;31m(SU[00m
							(NX
								(ADJX erstes)
								(NN juliwochenende))[01;31m)[00m))))))
Step:Single Word Phrase
{'subtrees': ['PTKVZ'], 'family': ['VC', 'SU'], 'over_word': True, 'over words': True, 'auto preterminals': ('PTKVZ', 'ADJA', 'NN'), 'right siblings': ['SU'], 'parent': 'PX', 'auto preterminal span': (6, 9), 'span': (6, 7), 'left siblings': [], 'label': 'VC', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM ja)
			(DM moment)
			(SIMPX
				(VF ich)
				(LK gucke)
				(MF
					(ADVX mal)
					(ADVX eben)
					(PX
						(PTKVZ nach)
						[01;31m(SU[00m
							(NX
								(ADJX erstes)
								(NN juliwochenende))[01;31m)[00m))))))
Step:Unary
{'subtrees': ['NX'], 'family': ['PTKVZ', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKVZ', 'ADJA', 'NN'), 'right siblings': [], 'parent': 'PX', 'auto preterminal span': (6, 9), 'span': (7, 9), 'left siblings': ['PTKVZ'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja moment ich gucke mal eben nach erstes juliwochenende)

Sentence 693:
5 Initial errors
0 on fringe, 4 iterations
2 Error:Different label
1 Error:Clause Attachment
1 Error:UNSET remove
1 Error:UNSET add
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU nee das ware okay)
		[01;31m(SU[00m
			(DM also)
			[01;33m(SIMPX[00m (SIMPX das wochenende ware der funfte sechste)
			[01;31m(SIMPX[00m
				[01;36m(NF[00m [01;31m(LV[00m
					(SIMPX
						(C wenn)
						(MF wir dann am montag)
						(VC starten))[01;31m)[00m [01;33mSIMPX)[00m[01;36m)[00m
				(DM genau)
				(LK ware)
				(MF das der siebte juli)[01;31m)[00m[01;31m)[00m))
Step:Different label
{'family': ['NF', 'DM', 'LK', 'MF'], 'auto preterminal span': (11, 17), 'span': (11, 17), 'subtrees': ['SIMPX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'VVFIN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('LV', 'NF')}
(TOP
	(TURN
		(SU nee das ware okay)
		[01;31m(SU[00m
			(DM also)
			[01;33m(SIMPX[00m (SIMPX das wochenende ware der funfte sechste)
			[01;31m(SIMPX[00m
				(NF wenn wir dann am montag starten) [01;33mSIMPX)[00m
				(DM genau)
				(LK ware)
				(MF das der siebte juli)[01;31m)[00m[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['DM', 'SIMPX', 'SIMPX'], 'family': ['SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PDS', 'VAFIN', 'ADJD', 'ADV', 'ART', 'NN', 'VAFIN', 'ART', 'NN', 'NN', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'VVFIN', 'ITJ', 'VAFIN', 'PDS', 'ART', 'ADJA', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 23), 'span': (4, 23), 'left siblings': ['SU'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU nee das ware okay)
		(DM also)
		[01;33m(SIMPX[00m (SIMPX das wochenende ware der funfte sechste)
		[01;31m(SIMPX[00m
			(NF wenn wir dann am montag starten) [01;33mSIMPX)[00m
			(DM genau)
			(LK ware)
			(MF das der siebte juli)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['NF', 'DM', 'LK', 'MF'], 'family': ['SU', 'DM', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PDS', 'VAFIN', 'ADJD', 'ADV', 'ART', 'NN', 'VAFIN', 'ART', 'NN', 'NN', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'VVFIN', 'ITJ', 'VAFIN', 'PDS', 'ART', 'ADJA', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 23), 'span': (11, 23), 'left siblings': ['SU', 'DM', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU nee das ware okay)
		(DM also)
		[01;36m(SIMPX[00m
			(SIMPX das wochenende ware der funfte sechste)
			(NF wenn wir dann am montag starten)[01;36m)[00m
		(DM genau)
		(LK ware)
		(MF das der siebte juli)))
Step:UNSET add
{'subtrees': ['SIMPX', 'NF'], 'family': ['SU', 'DM', 'SIMPX', 'DM', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'VAFIN', 'ART', 'NN', 'NN', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'VVFIN'), 'right siblings': [(DM (ITJ genau)), (LK (VXFIN (VAFIN ware))), (MF (NX (PDS das)) (NX (ART der) (ADJX (ADJA siebte)) (NN juli)))], 'left siblings': [(SU (DM (PTKANT nee)) (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VAFIN ware))) (MF (ADJX (ADJD okay))))), (DM (ADVX (ADV also)))], 'auto preterminal span': (5, 17), 'span': (5, 17), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP nee das ware okay also das wochenende ware der funfte sechste wenn wir dann am montag starten genau ware das der siebte juli)

Sentence 694:
11 Initial errors
0 on fringe, 5 iterations
4 Error:Modifier Attachment
3 Error:UNSET move
2 Error:Different label
1 Error:UNSET remove
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SU ja auf jeden fall)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK mochte)
				(MF
					(ADVX auch)
					[01;36m(NX[00m
						[01;33m(NX[00m (ADVX so)
						[01;31m(NX[00m
							[01;31m(NX[00m
								(ART ein)
								(ADJX bischen)
								(PIS was)[01;31m)[00m [01;33mNX)[00m
							(PX von hannover)[01;31m)[00m[01;36m)[00m)
				(VC sehen)[01;31m)[00m
			[01;31m(SIMPX[00m [01;33m(SIMPX (NF[00m
				(VF das wir vielleicht auch ein paar sehenswurdigkeiten uns anschauen)
				(LK wurde)
				(MF ich)
				(VC sagen)[01;31m)[00m[01;31m)[00m
		[01;36m(NF[00m [01;31m(SU[00m
			(SIMPX
				(C wenn)
				(MF sie da interesse dran)
				(VC haben))[01;31m)[00m[01;36m)[00m)) [01;33mNF) SIMPX)[00m
Step:Modifier Attachment
{'new_parent': 'NX', 'new_family': ['ADVX', 'ART', 'ADJX', 'PIS'], 'mover info': [('ADVX', (6, 7))], 'old_family': ['ADVX', 'ADVX', 'NX'], 'start left siblings': ['ADVX'], 'auto preterminals': ('ADV', 'ADV', 'ART', 'PIDAT', 'PIS', 'APPR', 'NE'), 'start right siblings': ['NX'], 'end left siblings': [], 'auto preterminal span': (5, 12), 'movers': ['ADVX'], 'old_parent': 'MF', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['ART', 'ADJX', 'PIS'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU ja auf jeden fall)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK mochte)
				(MF auch so ein bischen was von hannover)
				(VC sehen)[01;31m)[00m
			[01;31m(SIMPX[00m [01;33m(SIMPX (NF[00m
				(VF das wir vielleicht auch ein paar sehenswurdigkeiten uns anschauen)
				(LK wurde)
				(MF ich)
				(VC sagen)[01;31m)[00m[01;31m)[00m
		[01;36m(NF[00m [01;31m(SU[00m
			(SIMPX
				(C wenn)
				(MF sie da interesse dran)
				(VC haben))[01;31m)[00m[01;36m)[00m)) [01;33mNF) SIMPX)[00m
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'VC', 'SU'], 'mover info': [('SU', (25, 31))], 'old_family': ['SU', 'SU', 'SU'], 'start left siblings': ['SU', 'SU'], 'auto preterminals': ('PTKANT', 'APPR', 'PIDAT', 'NN', 'VMFIN', 'ADV', 'ADV', 'ART', 'PIDAT', 'PIS', 'APPR', 'NE', 'VVINF', 'KOUS', 'PPER', 'ADV', 'ADV', 'ART', 'PIDAT', 'NN', 'PRF', 'VVFIN', 'VAFIN', 'PPER', 'VVINF', 'KOUS', 'PPER', 'ADV', 'NN', 'PROP', 'VAFIN'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'MF', 'VC'], 'auto preterminal span': (0, 31), 'adding node already present': False, 'movers': ['SU'], 'old_parent': 'TURN', 'added and moved': True, 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'NF'}
(TOP
	(TURN
		(SU ja auf jeden fall)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK mochte)
				(MF auch so ein bischen was von hannover)
				(VC sehen)[01;31m)[00m
			(NF
				(SIMPX
					(VF das wir vielleicht auch ein paar sehenswurdigkeiten uns anschauen)
					(LK wurde)
					(MF ich)
					(VC sagen)
					[01;36m(NF[00m [01;31m(SU[00m
						(SIMPX
							(C wenn)
							(MF sie da interesse dran)
							(VC haben))[01;31m)[00m[01;36m)[00m))[01;31m)[00m))
Step:Different label
{'family': ['VF', 'LK', 'MF', 'VC', 'NF'], 'auto preterminal span': (25, 31), 'span': (25, 31), 'subtrees': ['SIMPX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'NN', 'PROP', 'VAFIN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('SU', 'NF')}
(TOP
	(TURN
		(SU ja auf jeden fall)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(LK mochte)
				(MF auch so ein bischen was von hannover)
				(VC sehen)[01;31m)[00m
			(NF das wir vielleicht auch ein paar sehenswurdigkeiten uns anschauen wurde ich sagen wenn sie da interesse dran haben)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['LK', 'MF', 'VC'], 'family': ['SIMPX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('VMFIN', 'ADV', 'ADV', 'ART', 'PIDAT', 'PIS', 'APPR', 'NE', 'VVINF', 'KOUS', 'PPER', 'ADV', 'ADV', 'ART', 'PIDAT', 'NN', 'PRF', 'VVFIN', 'VAFIN', 'PPER', 'VVINF', 'KOUS', 'PPER', 'ADV', 'NN', 'PROP', 'VAFIN'), 'right siblings': ['NF'], 'parent': 'SU', 'auto preterminal span': (4, 31), 'span': (4, 13), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU ja auf jeden fall)
		[01;31m(SU[00m
			(LK mochte)
			(MF auch so ein bischen was von hannover)
			(VC sehen)
			(NF das wir vielleicht auch ein paar sehenswurdigkeiten uns anschauen wurde ich sagen wenn sie da interesse dran haben)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['LK', 'MF', 'VC', 'NF'], 'family': ['SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'APPR', 'PIDAT', 'NN', 'VMFIN', 'ADV', 'ADV', 'ART', 'PIDAT', 'PIS', 'APPR', 'NE', 'VVINF', 'KOUS', 'PPER', 'ADV', 'ADV', 'ART', 'PIDAT', 'NN', 'PRF', 'VVFIN', 'VAFIN', 'PPER', 'VVINF', 'KOUS', 'PPER', 'ADV', 'NN', 'PROP', 'VAFIN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 31), 'span': (4, 31), 'left siblings': ['SU'], 'label': 'SU', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ja auf jeden fall mochte auch so ein bischen was von hannover sehen das wir vielleicht auch ein paar sehenswurdigkeiten uns anschauen wurde ich sagen wenn sie da interesse dran haben)

Sentence 695:
10 Initial errors
0 on fringe, 10 iterations
1 Error:Modifier Attachment
1 Error:UNSET add
1 Error:Single Word Phrase
1 Error:Unary
1 Error:Clause Attachment
1 Error:Unary
1 Error:Unary
1 Error:UNSET remove
1 Error:Unary
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM
				(PTKANT ja))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX ich kenne von einem fruheren aufenthalt noch das maritimstadthotel)
			(SIMPX das fand ich also sehr angenehm)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF es)
				(FKOORD liegt sehr zentral hat einen konferenzraum))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF da)
				(LK konnen)
				(MF wir vielleicht noch nach der messe ein bischen was)
				(VC besprechen)[01;31m)[00m[01;31m)[00m
		(SU
			[01;31m(ADVX[00m
				(ADVX auch)
				(SIMPX
					(C wenn)
					(MF
						(NX wir)
						(ADVX noch)
						(NX
							[01;36m(NX[00m
								(ART ein)
								[01;31m(ADJX[00m
									(PIDAT paar)[01;31m)[00m[01;36m)[00m
							[01;36m(PX[00m
								(APPR mit)
								(NX
									[01;36m(NX[00m
										(NN teilnehmer)[01;36m)[00m
									(NX der messe))[01;36m)[00m)
						(ADVX mit))
					(VC einladen))[01;31m)[00m)))
Step:Modifier Attachment
{'subtrees': ['ART', 'ADJX'], 'family': ['NX', 'APPR', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'PIDAT'), 'right siblings': [(APPR mit), (NX (NN teilnehmer) (NX (ART der) (NN messe)))], 'left siblings': [], 'auto preterminal span': (39, 41), 'span': (39, 41), 'parent': 'NX', 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM
				(PTKANT ja))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX ich kenne von einem fruheren aufenthalt noch das maritimstadthotel)
			(SIMPX das fand ich also sehr angenehm)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF es)
				(FKOORD liegt sehr zentral hat einen konferenzraum))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF da)
				(LK konnen)
				(MF wir vielleicht noch nach der messe ein bischen was)
				(VC besprechen)[01;31m)[00m[01;31m)[00m
		(SU
			[01;31m(ADVX[00m
				(ADVX auch)
				(SIMPX
					(C wenn)
					(MF
						(NX wir)
						(ADVX noch)
						(NX
							(NX
								(ART ein)
								[01;31m(ADJX[00m
									(PIDAT paar)[01;31m)[00m)
							[01;36m(PX[00m
								(APPR mit)
								(NX
									[01;36m(NX[00m
										(NN teilnehmer)[01;36m)[00m
									(NX der messe))[01;36m)[00m)
						(ADVX mit))
					(VC einladen))[01;31m)[00m)))
Step:UNSET add
{'subtrees': ['APPR', 'NX'], 'family': ['NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'NN', 'ART', 'NN'), 'right siblings': [], 'left siblings': [(NX (ART ein) (ADJX (PIDAT paar)))], 'auto preterminal span': (41, 45), 'span': (41, 45), 'parent': 'NX', 'label': 'PX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM
				(PTKANT ja))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX ich kenne von einem fruheren aufenthalt noch das maritimstadthotel)
			(SIMPX das fand ich also sehr angenehm)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF es)
				(FKOORD liegt sehr zentral hat einen konferenzraum))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF da)
				(LK konnen)
				(MF wir vielleicht noch nach der messe ein bischen was)
				(VC besprechen)[01;31m)[00m[01;31m)[00m
		(SU
			[01;31m(ADVX[00m
				(ADVX auch)
				(SIMPX
					(C wenn)
					(MF
						(NX wir)
						(ADVX noch)
						(NX
							(NX
								(ART ein)
								[01;31m(ADJX[00m
									(PIDAT paar)[01;31m)[00m)
							(PX
								(APPR mit)
								(NX
									[01;36m(NX[00m
										(NN teilnehmer)[01;36m)[00m
									(NX der messe))))
						(ADVX mit))
					(VC einladen))[01;31m)[00m)))
Step:Single Word Phrase
{'subtrees': ['NN'], 'family': ['NX', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('NN',), 'right siblings': [(NX (ART der) (NN messe))], 'left siblings': [], 'auto preterminal span': (42, 43), 'span': (42, 43), 'parent': 'NX', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SU[00m
			(DM
				(PTKANT ja))[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX ich kenne von einem fruheren aufenthalt noch das maritimstadthotel)
			(SIMPX das fand ich also sehr angenehm)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF es)
				(FKOORD liegt sehr zentral hat einen konferenzraum))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF da)
				(LK konnen)
				(MF wir vielleicht noch nach der messe ein bischen was)
				(VC besprechen)[01;31m)[00m[01;31m)[00m
		(SU
			[01;31m(ADVX[00m
				(ADVX auch)
				(SIMPX
					(C wenn)
					(MF
						(NX wir)
						(ADVX noch)
						(NX
							(NX
								(ART ein)
								[01;31m(ADJX[00m
									(PIDAT paar)[01;31m)[00m)
							(PX mit teilnehmer der messe))
						(ADVX mit))
					(VC einladen))[01;31m)[00m)))
Step:Unary
{'subtrees': ['DM'], 'family': ['SU', 'SU', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VVFIN', 'APPR', 'ART', 'ADJA', 'NN', 'ADV', 'ART', 'NE', 'PDS', 'VVFIN', 'PPER', 'ADV', 'ADV', 'ADJD', 'PPER', 'VVFIN', 'ADV', 'ADJD', 'VAFIN', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'ART', 'PIDAT', 'PIS', 'VVINF', 'ADV', 'KOUS', 'PPER', 'ADV', 'ART', 'PIDAT', 'APPR', 'NN', 'ART', 'NN', 'ADV', 'VVFIN'), 'right siblings': ['SU', 'SU', 'SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 47), 'span': (0, 1), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		[01;31m(SU[00m
			(SIMPX ich kenne von einem fruheren aufenthalt noch das maritimstadthotel)
			(SIMPX das fand ich also sehr angenehm)[01;31m)[00m
		[01;31m(SU[00m
			(SIMPX
				(VF es)
				(FKOORD liegt sehr zentral hat einen konferenzraum))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF da)
				(LK konnen)
				(MF wir vielleicht noch nach der messe ein bischen was)
				(VC besprechen)[01;31m)[00m[01;31m)[00m
		(SU
			[01;31m(ADVX[00m
				(ADVX auch)
				(SIMPX
					(C wenn)
					(MF
						(NX wir)
						(ADVX noch)
						(NX
							(NX
								(ART ein)
								[01;31m(ADJX[00m
									(PIDAT paar)[01;31m)[00m)
							(PX mit teilnehmer der messe))
						(ADVX mit))
					(VC einladen))[01;31m)[00m)))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['DM', 'SU', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VVFIN', 'APPR', 'ART', 'ADJA', 'NN', 'ADV', 'ART', 'NE', 'PDS', 'VVFIN', 'PPER', 'ADV', 'ADV', 'ADJD', 'PPER', 'VVFIN', 'ADV', 'ADJD', 'VAFIN', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'ART', 'PIDAT', 'PIS', 'VVINF', 'ADV', 'KOUS', 'PPER', 'ADV', 'ART', 'PIDAT', 'APPR', 'NN', 'ART', 'NN', 'ADV', 'VVFIN'), 'right siblings': ['SU', 'SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 47), 'span': (1, 16), 'left siblings': ['DM'], 'label': 'SU', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich kenne von einem fruheren aufenthalt noch das maritimstadthotel)
		(SIMPX das fand ich also sehr angenehm)
		[01;31m(SU[00m
			(SIMPX
				(VF es)
				(FKOORD liegt sehr zentral hat einen konferenzraum))[01;31m)[00m
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF da)
				(LK konnen)
				(MF wir vielleicht noch nach der messe ein bischen was)
				(VC besprechen)[01;31m)[00m[01;31m)[00m
		(SU
			[01;31m(ADVX[00m
				(ADVX auch)
				(SIMPX
					(C wenn)
					(MF
						(NX wir)
						(ADVX noch)
						(NX
							(NX
								(ART ein)
								[01;31m(ADJX[00m
									(PIDAT paar)[01;31m)[00m)
							(PX mit teilnehmer der messe))
						(ADVX mit))
					(VC einladen))[01;31m)[00m)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['DM', 'SIMPX', 'SIMPX', 'SU', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VVFIN', 'APPR', 'ART', 'ADJA', 'NN', 'ADV', 'ART', 'NE', 'PDS', 'VVFIN', 'PPER', 'ADV', 'ADV', 'ADJD', 'PPER', 'VVFIN', 'ADV', 'ADJD', 'VAFIN', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'ART', 'PIDAT', 'PIS', 'VVINF', 'ADV', 'KOUS', 'PPER', 'ADV', 'ART', 'PIDAT', 'APPR', 'NN', 'ART', 'NN', 'ADV', 'VVFIN'), 'right siblings': ['SU', 'SU'], 'parent': 'TURN', 'auto preterminal span': (0, 47), 'span': (16, 23), 'left siblings': ['DM', 'SIMPX', 'SIMPX'], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich kenne von einem fruheren aufenthalt noch das maritimstadthotel)
		(SIMPX das fand ich also sehr angenehm)
		(SIMPX es liegt sehr zentral hat einen konferenzraum)
		[01;31m(SU[00m
			[01;31m(SIMPX[00m
				(VF da)
				(LK konnen)
				(MF wir vielleicht noch nach der messe ein bischen was)
				(VC besprechen)[01;31m)[00m[01;31m)[00m
		(SU
			[01;31m(ADVX[00m
				(ADVX auch)
				(SIMPX
					(C wenn)
					(MF
						(NX wir)
						(ADVX noch)
						(NX
							(NX
								(ART ein)
								[01;31m(ADJX[00m
									(PIDAT paar)[01;31m)[00m)
							(PX mit teilnehmer der messe))
						(ADVX mit))
					(VC einladen))[01;31m)[00m)))
Step:Unary
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'ART', 'PIDAT', 'PIS', 'VVINF'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (23, 35), 'span': (23, 35), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich kenne von einem fruheren aufenthalt noch das maritimstadthotel)
		(SIMPX das fand ich also sehr angenehm)
		(SIMPX es liegt sehr zentral hat einen konferenzraum)
		[01;31m(SU[00m
			(VF da)
			(LK konnen)
			(MF wir vielleicht noch nach der messe ein bischen was)
			(VC besprechen)[01;31m)[00m
		(SU
			[01;31m(ADVX[00m
				(ADVX auch)
				(SIMPX
					(C wenn)
					(MF
						(NX wir)
						(ADVX noch)
						(NX
							(NX
								(ART ein)
								[01;31m(ADJX[00m
									(PIDAT paar)[01;31m)[00m)
							(PX mit teilnehmer der messe))
						(ADVX mit))
					(VC einladen))[01;31m)[00m)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SU', 'SU'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VVFIN', 'APPR', 'ART', 'ADJA', 'NN', 'ADV', 'ART', 'NE', 'PDS', 'VVFIN', 'PPER', 'ADV', 'ADV', 'ADJD', 'PPER', 'VVFIN', 'ADV', 'ADJD', 'VAFIN', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'ART', 'PIDAT', 'PIS', 'VVINF', 'ADV', 'KOUS', 'PPER', 'ADV', 'ART', 'PIDAT', 'APPR', 'NN', 'ART', 'NN', 'ADV', 'VVFIN'), 'right siblings': ['SU'], 'parent': 'TURN', 'auto preterminal span': (0, 47), 'span': (23, 35), 'left siblings': ['DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'label': 'SU', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich kenne von einem fruheren aufenthalt noch das maritimstadthotel)
		(SIMPX das fand ich also sehr angenehm)
		(SIMPX es liegt sehr zentral hat einen konferenzraum)
		(VF da)
		(LK konnen)
		(MF wir vielleicht noch nach der messe ein bischen was)
		(VC besprechen)
		(SU
			[01;31m(ADVX[00m
				(ADVX auch)
				(SIMPX
					(C wenn)
					(MF
						(NX wir)
						(ADVX noch)
						(NX
							(NX
								(ART ein)
								[01;31m(ADJX[00m
									(PIDAT paar)[01;31m)[00m)
							(PX mit teilnehmer der messe))
						(ADVX mit))
					(VC einladen))[01;31m)[00m)))
Step:Unary
{'subtrees': ['ADVX', 'SIMPX'], 'family': ['ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'KOUS', 'PPER', 'ADV', 'ART', 'PIDAT', 'APPR', 'NN', 'ART', 'NN', 'ADV', 'VVFIN'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (35, 47), 'span': (35, 47), 'left siblings': [], 'label': 'ADVX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich kenne von einem fruheren aufenthalt noch das maritimstadthotel)
		(SIMPX das fand ich also sehr angenehm)
		(SIMPX es liegt sehr zentral hat einen konferenzraum)
		(VF da)
		(LK konnen)
		(MF wir vielleicht noch nach der messe ein bischen was)
		(VC besprechen)
		(SU
			(ADVX auch)
			(SIMPX
				(C wenn)
				(MF
					(NX wir)
					(ADVX noch)
					(NX
						(NX
							(ART ein)
							[01;31m(ADJX[00m
								(PIDAT paar)[01;31m)[00m)
						(PX mit teilnehmer der messe))
					(ADVX mit))
				(VC einladen)))))
Step:Single Word Phrase
{'subtrees': ['PIDAT'], 'family': ['ART', 'ADJX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ART', 'PIDAT'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (39, 41), 'span': (40, 41), 'left siblings': ['ART'], 'label': 'ADJX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP ja ich kenne von einem fruheren aufenthalt noch das maritimstadthotel das fand ich also sehr angenehm es liegt sehr zentral hat einen konferenzraum da konnen wir vielleicht noch nach der messe ein bischen was besprechen auch wenn wir noch ein paar mit teilnehmer der messe mit einladen)

Sentence 696:
11 Initial errors
0 on fringe, 9 iterations
2 Error:UNSET move
2 Error:Modifier Attachment
1 Error:Unary
1 Error:Unary
1 Error:Clause Attachment
1 Error:UNSET remove
1 Error:UNSET add
1 Error:UNSET add
1 Error:UNSET add
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SU[00m
	(TOP
		(TURN
			[01;31m(SU[00m
				(DM
					(PTKANT ja))[01;31m)[00m
			[01;31m(SU[00m [01;33m(SIMPX[00m
				(NX die kosten)
				(ART der)
				[01;31m(SIMPX[00m [01;33m(SIMPX[00m
					(VF die frage der kosten)
					[01;31m(SIMPX[00m
						(LK konnen)
						[01;31m(MF[00m
							[01;36m(MF[00m
								(NX
									(PPER wir)) [01;33mSIMPX) SIMPX)[00m[01;36m)[00m
							[01;36m(VF[00m
								(ADVX [01;33m(SIMPX[00m
									(ADV dann))[01;36m)[00m[01;31m)[00m[01;31m)[00m
					(LK kann)
					(MF ich mit unserem vorgesetzten)
					(VC abchecken)[01;31m)[00m[01;31m)[00m)) [01;33mSIMPX)[00m[01;36m)[00m
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SU', 'NX', 'ART', 'SIMPX'], 'mover info': [('SU', (0, 1))], 'old_family': ['SU', 'SU'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'ART', 'NN', 'ART', 'ART', 'NN', 'ART', 'NN', 'VMFIN', 'PPER', 'ADV', 'VMFIN', 'PPER', 'APPR', 'PPOSAT', 'NN', 'VVINF'), 'start right siblings': ['SU'], 'end left siblings': [], 'auto preterminal span': (0, 17), 'movers': ['SU'], 'old_parent': 'TURN', 'POS confusion': ('PTKANT', 'PTKANT'), 'end right siblings': ['NX', 'ART', 'SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			[01;31m(SU[00m
				(DM
					(PTKANT ja))[01;31m)[00m
			[01;33m(SIMPX[00m (NX die kosten)
			(ART der)
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(VF die frage der kosten)
				[01;31m(SIMPX[00m
					(LK konnen)
					[01;31m(MF[00m
						[01;36m(MF[00m
							(NX
								(PPER wir)) [01;33mSIMPX) SIMPX)[00m[01;36m)[00m
						[01;36m(VF[00m
							(ADVX [01;33m(SIMPX[00m
								(ADV dann))[01;36m)[00m[01;31m)[00m[01;31m)[00m
				(LK kann)
				(MF ich mit unserem vorgesetzten)
				(VC abchecken)[01;31m)[00m))) [01;33mSIMPX)[00m
Step:Modifier Attachment
{'new_parent': 'SIMPX', 'new_family': ['LK', 'MF', 'ADVX'], 'mover info': [('ADVX', (10, 11))], 'old_family': ['NX', 'ADVX'], 'start left siblings': ['NX'], 'auto preterminals': ('VMFIN', 'PPER', 'ADV'), 'start right siblings': [], 'end left siblings': ['LK', 'MF'], 'auto preterminal span': (8, 11), 'movers': ['ADVX'], 'old_parent': 'MF', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SU
			[01;31m(SU[00m
				(DM
					(PTKANT ja))[01;31m)[00m
			[01;33m(SIMPX[00m (NX die kosten)
			(ART der)
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(VF die frage der kosten)
				[01;31m(SIMPX[00m
					(LK konnen)
					(MF wir) [01;33mSIMPX) SIMPX)[00m
					[01;36m(VF[00m
						(ADVX [01;33m(SIMPX[00m
							(ADV dann))[01;36m)[00m[01;31m)[00m
				(LK kann)
				(MF ich mit unserem vorgesetzten)
				(VC abchecken)[01;31m)[00m))) [01;33mSIMPX)[00m
Step:Unary
{'subtrees': ['ADVX'], 'family': ['LK', 'MF', 'VF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV',), 'right siblings': [], 'left siblings': [(LK (VXFIN (VMFIN konnen))), (MF (NX (PPER wir)))], 'auto preterminal span': (10, 11), 'span': (10, 11), 'parent': 'SIMPX', 'label': 'VF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SU
			[01;31m(SU[00m
				(DM
					(PTKANT ja))[01;31m)[00m
			[01;33m(SIMPX[00m (NX die kosten)
			(ART der)
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(VF die frage der kosten)
				[01;31m(SIMPX[00m
					(LK konnen)
					(MF wir) [01;33mSIMPX) SIMPX)[00m
					[01;33m(SIMPX[00m (VF dann)[01;31m)[00m
				(LK kann)
				(MF ich mit unserem vorgesetzten)
				(VC abchecken)[01;31m)[00m))) [01;33mSIMPX)[00m
Step:Unary
{'subtrees': ['DM'], 'family': ['SU', 'NX', 'ART', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ART', 'NN', 'ART', 'ART', 'NN', 'ART', 'NN', 'VMFIN', 'PPER', 'ADV', 'VMFIN', 'PPER', 'APPR', 'PPOSAT', 'NN', 'VVINF'), 'right siblings': ['NX', 'ART', 'SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 17), 'span': (0, 1), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM ja)
			[01;33m(SIMPX[00m (NX die kosten)
			(ART der)
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(VF die frage der kosten)
				[01;31m(SIMPX[00m
					(LK konnen)
					(MF wir) [01;33mSIMPX) SIMPX)[00m
					[01;33m(SIMPX[00m (VF dann)[01;31m)[00m
				(LK kann)
				(MF ich mit unserem vorgesetzten)
				(VC abchecken)[01;31m)[00m))) [01;33mSIMPX)[00m
Step:Clause Attachment
{'subtrees': ['VF', 'SIMPX', 'LK', 'MF', 'VC'], 'family': ['DM', 'NX', 'ART', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ART', 'NN', 'ART', 'ART', 'NN', 'ART', 'NN', 'VMFIN', 'PPER', 'ADV', 'VMFIN', 'PPER', 'APPR', 'PPOSAT', 'NN', 'VVINF'), 'right siblings': [], 'parent': 'SU', 'auto preterminal span': (0, 17), 'span': (4, 17), 'left siblings': ['DM', 'NX', 'ART'], 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM ja)
			[01;33m(SIMPX[00m (NX die kosten)
			(ART der)
			[01;33m(SIMPX[00m (VF die frage der kosten)
			[01;31m(SIMPX[00m
				(LK konnen)
				(MF wir) [01;33mSIMPX) SIMPX)[00m
				[01;33m(SIMPX[00m (VF dann)[01;31m)[00m
			(LK kann)
			(MF ich mit unserem vorgesetzten)
			(VC abchecken)))) [01;33mSIMPX)[00m
Step:UNSET remove
{'subtrees': ['LK', 'MF', 'VF'], 'family': ['DM', 'NX', 'ART', 'VF', 'SIMPX', 'LK', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ART', 'NN', 'ART', 'ART', 'NN', 'ART', 'NN', 'VMFIN', 'PPER', 'ADV', 'VMFIN', 'PPER', 'APPR', 'PPOSAT', 'NN', 'VVINF'), 'right siblings': ['LK', 'MF', 'VC'], 'parent': 'SU', 'auto preterminal span': (0, 17), 'span': (8, 11), 'left siblings': ['DM', 'NX', 'ART', 'VF'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SU
			(DM ja)
			[01;36m(SIMPX[00m
				(NX die kosten)
				(ART der)
				[01;36m(SIMPX[00m
					(VF die frage der kosten)
					(LK konnen)
					(MF wir)[01;36m)[00m[01;36m)[00m
			[01;36m(SIMPX[00m
				(VF dann)
				(LK kann)
				(MF ich mit unserem vorgesetzten)
				(VC abchecken)[01;36m)[00m)))
Step:UNSET add
{'subtrees': ['NX', 'ART', 'VF', 'LK', 'MF'], 'family': ['DM', 'SIMPX', 'VF', 'LK', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'ART', 'ART', 'NN', 'ART', 'NN', 'VMFIN', 'PPER'), 'right siblings': [(VF (ADVX (ADV dann))), (LK (VXFIN (VMFIN kann))), (MF (NX (PPER ich)) (PX (APPR mit) (NX (PPOSAT unserem) (NN vorgesetzten)))), (VC (VXINF (VVINF abchecken)))], 'left siblings': [(DM (PTKANT ja))], 'auto preterminal span': (1, 10), 'span': (1, 10), 'parent': 'SU', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX
				(NX die kosten)
				(ART der)
				[01;36m(SIMPX[00m
					(VF die frage der kosten)
					(LK konnen)
					(MF wir)[01;36m)[00m)
			[01;36m(SIMPX[00m
				(VF dann)
				(LK kann)
				(MF ich mit unserem vorgesetzten)
				(VC abchecken)[01;36m)[00m)))
Step:UNSET add
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['NX', 'ART', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'ART', 'NN', 'VMFIN', 'PPER'), 'right siblings': [], 'left siblings': [(NX (ART die) (NN kosten)), (ART der)], 'auto preterminal span': (4, 10), 'span': (4, 10), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SU
			(DM ja)
			(SIMPX die kosten der die frage der kosten konnen wir)
			[01;36m(SIMPX[00m
				(VF dann)
				(LK kann)
				(MF ich mit unserem vorgesetzten)
				(VC abchecken)[01;36m)[00m)))
Step:UNSET add
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['DM', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VMFIN', 'PPER', 'APPR', 'PPOSAT', 'NN', 'VVINF'), 'right siblings': [], 'left siblings': [(DM (PTKANT ja)), (SIMPX (NX (ART die) (NN kosten)) (ART der) (SIMPX (VF (NX (NX (ART die) (NN frage)) (NX (ART der) (NN kosten)))) (LK (VXFIN (VMFIN konnen))) (MF (NX (PPER wir)))))], 'auto preterminal span': (10, 17), 'span': (10, 17), 'parent': 'SU', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP ja die kosten der die frage der kosten konnen wir dann kann ich mit unserem vorgesetzten abchecken)

Sentence 697:
3 Initial errors
0 on fringe, 2 iterations
2 Error:UNSET move
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SU[00m
	(TOP
		(TURN
			[01;31m(SU[00m
				(DM
					(PTKANT ja))[01;31m)[00m
			[01;31m(SU[00m
				(SIMPX
					(VF die buchung)
					(LK mache)
					(MF ich dann auch)
					(VC klar))[01;31m)[00m))[01;36m)[00m
Step:UNSET move
{'new_parent': 'SU', 'new_family': ['SU', 'SIMPX'], 'mover info': [('SU', (0, 1))], 'old_family': ['SU', 'SU'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'ART', 'NN', 'VVFIN', 'PPER', 'ADV', 'ADV', 'PTKVZ'), 'start right siblings': ['SU'], 'end left siblings': [], 'auto preterminal span': (0, 8), 'movers': ['SU'], 'old_parent': 'TURN', 'POS confusion': ('PTKANT', 'PTKANT'), 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SU
			[01;31m(SU[00m
				(DM
					(PTKANT ja))[01;31m)[00m
			(SIMPX die buchung mache ich dann auch klar))))
Step:Unary
{'subtrees': ['DM'], 'family': ['SU', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ART', 'NN', 'VVFIN', 'PPER', 'ADV', 'ADV', 'PTKVZ'), 'right siblings': ['SIMPX'], 'parent': 'SU', 'auto preterminal span': (0, 8), 'span': (0, 1), 'left siblings': [], 'label': 'SU', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja die buchung mache ich dann auch klar)


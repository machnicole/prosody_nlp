# Time of run:
# Tue Jul  6 16:03:05 2021
# Command:
# ./berkeley_parse_analyser/classify_german_vm.py sample_data/turn_vm_ger_pitchfd_output_dev.txt sample_data/turn_dev_ger.trees classified.vm_ger_turn.pitchfd
#
Printing tree transformations
Sentence 1:
0 Initial errors
0 on fringe, 0 iterations

Sentence 2:
0 Initial errors
0 on fringe, 0 iterations

Sentence 3:
8 Initial errors
0 on fringe, 4 iterations
4 Error:UNSET move
2 Error:NP Attachment
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX ich mache ihnen das jetzt fertig)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(LK konnen)
			[01;31m(MF[00m [01;33m(MF[00m
				(NX
					(PPER sie))[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				(ADVX
					(ADV morgen))[01;31m)[00m [01;33mMF) SIMPX)[00m
			(LK kommt)
			(MF die bestatigung)[01;31m)[00m
		(SIMPX
			(LK konnen)
			[01;36m(MF[00m
				[01;31m(MF[00m
					(NX sie)
					(NX es)[01;31m)[00m
				(NX ticket)[01;36m)[00m
			(VC abholen))))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['NX', 'VF'], 'mover info': [('VF', (8, 9))], 'old_family': ['VF', 'LK', 'MF'], 'start left siblings': [], 'auto preterminals': ('PPER', 'VVFIN', 'PPER', 'PDS', 'ADV', 'PTKVZ', 'VMFIN', 'PPER', 'ADV', 'VVFIN', 'ART', 'NN', 'VMFIN', 'PPER', 'PPER', 'NN', 'VVINF'), 'start right siblings': ['LK', 'MF'], 'end left siblings': ['NX'], 'auto preterminal span': (0, 17), 'movers': ['VF'], 'old_parent': 'SIMPX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SIMPX ich mache ihnen das jetzt fertig)
		(SIMPX
			(LK konnen)
			(MF
				(NX sie)
				[01;31m(VF[00m
					(ADVX
						(ADV morgen))[01;31m)[00m))
		[01;31m(SIMPX[00m
			(LK kommt)
			(MF die bestatigung)[01;31m)[00m
		(SIMPX
			(LK konnen)
			[01;36m(MF[00m
				[01;31m(MF[00m
					(NX sie)
					(NX es)[01;31m)[00m
				(NX ticket)[01;36m)[00m
			(VC abholen))))
Step:NP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'NX', 'NX'], 'mover info': [('NX', (15, 16))], 'old_family': ['LK', 'MF', 'NX', 'VC'], 'start left siblings': ['LK', 'MF'], 'auto preterminals': ('VMFIN', 'PPER', 'PPER', 'NN', 'VVINF'), 'start right siblings': ['VC'], 'end left siblings': ['NX', 'NX'], 'auto preterminal span': (12, 17), 'movers': ['NX'], 'old_parent': 'SIMPX', 'POS confusion': ('NN', 'NN'), 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SIMPX ich mache ihnen das jetzt fertig)
		(SIMPX
			(LK konnen)
			(MF
				(NX sie)
				[01;31m(VF[00m
					(ADVX
						(ADV morgen))[01;31m)[00m))
		[01;31m(SIMPX[00m
			(LK kommt)
			(MF die bestatigung)[01;31m)[00m
		(SIMPX konnen sie es ticket abholen)))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['NX', 'VF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (7, 9), 'span': (8, 9), 'left siblings': ['NX'], 'label': 'VF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX ich mache ihnen das jetzt fertig)
		(SIMPX konnen sie morgen)
		[01;31m(SIMPX[00m
			(LK kommt)
			(MF die bestatigung)[01;31m)[00m
		(SIMPX konnen sie es ticket abholen)))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'PPER', 'PDS', 'ADV', 'PTKVZ', 'VMFIN', 'PPER', 'ADV', 'VVFIN', 'ART', 'NN', 'VMFIN', 'PPER', 'PPER', 'NN', 'VVINF'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 17), 'span': (9, 12), 'left siblings': ['SIMPX', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ich mache ihnen das jetzt fertig konnen sie morgen kommt die bestatigung konnen sie es ticket abholen)

Sentence 4:
0 Initial errors
0 on fringe, 0 iterations

Sentence 5:
0 Initial errors
0 on fringe, 0 iterations

Sentence 6:
0 Initial errors
0 on fringe, 0 iterations

Sentence 7:
0 Initial errors
0 on fringe, 0 iterations

Sentence 8:
0 Initial errors
0 on fringe, 0 iterations

Sentence 9:
0 Initial errors
0 on fringe, 0 iterations

Sentence 10:
0 Initial errors
0 on fringe, 0 iterations

Sentence 11:
0 Initial errors
0 on fringe, 0 iterations

Sentence 12:
2 Initial errors
0 on fringe, 2 iterations
1 Error:UNSET add
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX
			[01;31m(LV[00m
				(PX
					(APPR in)
					(NX zwei wochen))[01;31m)[00m
			[01;36m(SIMPX[00m
				(VF das)
				(LK ware)
				(MF der wievielte)[01;36m)[00m)))
Step:UNSET add
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['LV', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VAFIN', 'ART', 'NN'), 'right siblings': [], 'left siblings': [(LV (PX (APPR in) (NX (ADJX (CARD zwei)) (NN wochen))))], 'auto preterminal span': (3, 7), 'span': (3, 7), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SIMPX
			[01;31m(LV[00m
				(PX
					(APPR in)
					(NX zwei wochen))[01;31m)[00m
			(SIMPX das ware der wievielte))))
Step:Unary
{'subtrees': ['PX'], 'family': ['LV', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'CARD', 'NN', 'PDS', 'VAFIN', 'ART', 'NN'), 'right siblings': ['SIMPX'], 'parent': 'SIMPX', 'auto preterminal span': (0, 7), 'span': (0, 3), 'left siblings': [], 'label': 'LV', 'classified_type': 'Unary', 'type': 'remove'}
(TOP in zwei wochen das ware der wievielte)

Sentence 13:
0 Initial errors
0 on fringe, 0 iterations

Sentence 14:
0 Initial errors
0 on fringe, 0 iterations

Sentence 15:
0 Initial errors
0 on fringe, 0 iterations

Sentence 16:
4 Initial errors
0 on fringe, 2 iterations
2 Error:Single Word Phrase
2 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX
			(KOORD und)
			(C wenn)
			(FKOORD
				(MVC wir sonntags fahren)
				(KON und)
				(MVC
					(MF
						[01;36m(ADVX[00m
							(ADVX noch)
							[01;31m(ADVX[00m
								(ADV vorher)[01;31m)[00m[01;36m)[00m
						(PX ins theater))
					[01;36m(VXINF[00m
						(VC
							[01;31m(VXFIN[00m
								(VVFIN gehen)[01;31m)[00m)[01;36m)[00m)))
		(ADVX oder so)))
Step:Single Word Phrase
{'family': ['VXINF'], 'auto preterminal span': (10, 11), 'span': (10, 11), 'subtrees': ['VVFIN'], 'parent': 'VC', 'over_word': True, 'auto preterminals': ('VVFIN',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VXFIN', 'VXINF')}
(TOP
	(TURN
		(SIMPX
			(KOORD und)
			(C wenn)
			(FKOORD
				(MVC wir sonntags fahren)
				(KON und)
				(MVC
					(MF
						[01;36m(ADVX[00m
							(ADVX noch)
							[01;31m(ADVX[00m
								(ADV vorher)[01;31m)[00m[01;36m)[00m
						(PX ins theater))
					(VC gehen))))
		(ADVX oder so)))
Step:Modifier Attachment
{'new_parent': 'ADVX', 'new_family': ['ADVX', 'ADV'], 'mover info': [('ADVX', (6, 7))], 'old_family': ['ADVX', 'ADVX', 'PX'], 'start left siblings': [], 'auto preterminals': ('ADV', 'ADV', 'APPRART', 'NN'), 'start right siblings': ['ADVX', 'PX'], 'end left siblings': [], 'auto preterminal span': (6, 10), 'movers': ['ADVX'], 'old_parent': 'MF', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['ADV'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP und wenn wir sonntags fahren und noch vorher ins theater gehen oder so)

Sentence 17:
0 Initial errors
0 on fringe, 0 iterations

Sentence 18:
0 Initial errors
0 on fringe, 0 iterations

Sentence 19:
0 Initial errors
0 on fringe, 0 iterations

Sentence 20:
0 Initial errors
0 on fringe, 0 iterations

Sentence 21:
0 Initial errors
0 on fringe, 0 iterations

Sentence 22:
0 Initial errors
0 on fringe, 0 iterations

Sentence 23:
0 Initial errors
0 on fringe, 0 iterations

Sentence 24:
0 Initial errors
0 on fringe, 0 iterations

Sentence 25:
0 Initial errors
0 on fringe, 0 iterations

Sentence 26:
0 Initial errors
0 on fringe, 0 iterations

Sentence 27:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF vielleicht)
			(LK konnen)
			(MF
				(NX sie)
				(ADVX dann)
				(ADVX auch)
				[01;36m(PX[00m
					(ADVX direkt)
					[01;31m(PX[00m
						(APPR nach)
						(NX dem intercityhotel)[01;31m)[00m[01;36m)[00m)
			(VC fragen))))
Step:Modifier Attachment
{'new_parent': 'PX', 'new_family': ['ADVX', 'APPR', 'NX'], 'mover info': [('ADVX', (6, 7))], 'old_family': ['NX', 'ADVX', 'ADVX', 'ADVX', 'PX'], 'start left siblings': ['NX', 'ADVX', 'ADVX'], 'auto preterminals': ('PPER', 'ADV', 'ADV', 'ADV', 'APPR', 'ART', 'NE'), 'start right siblings': ['PX'], 'end left siblings': [], 'auto preterminal span': (3, 10), 'movers': ['ADVX'], 'old_parent': 'MF', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['APPR', 'NX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP ja vielleicht konnen sie dann auch direkt nach dem intercityhotel fragen)

Sentence 28:
0 Initial errors
0 on fringe, 0 iterations

Sentence 29:
0 Initial errors
0 on fringe, 0 iterations

Sentence 30:
8 Initial errors
0 on fringe, 5 iterations
4 Error:NP Attachment
1 Error:Clause Attachment
1 Error:Clause Attachment
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX wissen sie was)
		[01;36m(SIMPX[00m
			(SIMPX
				(VF ich)
				(FKOORD
					(LKMVC rufe im reiseburo an)
					(KON und)
					[01;36m(LKM[00m
						[01;31m(LKM[00m [01;33m(LKM[00m
							(LK klare)
							[01;31m(MF[00m
								[01;31m(NX[00m
									(NX das) [01;33mLKM)[00m
									[01;33m(SIMPX[00m (NX alles)[01;31m)[00m[01;31m)[00m[01;31m)[00m
						[01;31m(LKM[00m
							(LK kaufe)
							(MF die tickets)[01;31m)[00m[01;36m)[00m)) [01;33mSIMPX)[00m
			(SIMPX und dann rufe ich sie noch mal an wegen dem programm im ballhaus)[01;36m)[00m))
Step:NP Attachment
{'new_parent': 'LKM', 'new_family': ['NX', 'LK', 'MF'], 'mover info': [('NX', (11, 12))], 'old_family': ['NX', 'NX'], 'start left siblings': ['NX'], 'auto preterminals': ('VVFIN', 'APPRART', 'NN', 'PTKVZ', 'KON', 'VVFIN', 'PDS', 'PIS', 'VVFIN', 'ART', 'NN'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (4, 15), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'NX', 'POS confusion': ('PIS', 'PIS'), 'added and moved': True, 'end right siblings': ['LK', 'MF'], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'SIMPX'}
(TOP
	(TURN
		(SIMPX wissen sie was)
		[01;36m(SIMPX[00m
			(SIMPX
				(VF ich)
				(FKOORD
					(LKMVC rufe im reiseburo an)
					(KON und)
					[01;36m(LKM[00m
						(LKM
							(LK klare)
							[01;31m(MF[00m
								(NX
									(PDS das))[01;31m)[00m)
						(SIMPX
							[01;31m(LKM[00m
								(NX alles)
								(LK kaufe)
								(MF die tickets)[01;31m)[00m)[01;36m)[00m))
			(SIMPX und dann rufe ich sie noch mal an wegen dem programm im ballhaus)[01;36m)[00m))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'APPRART', 'NN', 'PTKVZ', 'KON', 'VVFIN', 'PDS', 'PIS', 'VVFIN', 'ART', 'NN', 'KON', 'ADV', 'VVFIN', 'PPER', 'PPER', 'ADV', 'ADV', 'PTKVZ', 'APPR', 'ART', 'NN', 'APPRART', 'NE'), 'right siblings': [], 'left siblings': [(SIMPX (LK (VXFIN (VVFIN wissen))) (MF (NX (PPER sie)) (NX (PIS was))))], 'auto preterminal span': (3, 28), 'span': (3, 28), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(SIMPX wissen sie was)
		(SIMPX
			(SIMPX
				(VF ich)
				(FKOORD
					(LKMVC rufe im reiseburo an)
					(KON und)
					[01;36m(LKM[00m
						(LKM
							(LK klare)
							[01;31m(MF[00m
								(NX
									(PDS das))[01;31m)[00m)
						(SIMPX
							[01;31m(LKM[00m
								(NX alles)
								(LK kaufe)
								(MF die tickets)[01;31m)[00m)[01;36m)[00m))
			(SIMPX und dann rufe ich sie noch mal an wegen dem programm im ballhaus))))
Step:Clause Attachment
{'subtrees': ['LKM', 'SIMPX'], 'family': ['LKMVC', 'KON', 'LKM'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PDS', 'PIS', 'VVFIN', 'ART', 'NN'), 'right siblings': [], 'left siblings': [(LKMVC (LK (VXFIN (VVFIN rufe))) (MF (PX (APPRART im) (NX (NN reiseburo)))) (VC (PTKVZ an))), (KON und)], 'auto preterminal span': (9, 15), 'span': (9, 15), 'parent': 'FKOORD', 'label': 'LKM', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(SIMPX wissen sie was)
		(SIMPX
			(SIMPX
				(VF ich)
				(FKOORD
					(LKMVC rufe im reiseburo an)
					(KON und)
					(LKM
						(LKM
							(LK klare)
							[01;31m(MF[00m
								(NX
									(PDS das))[01;31m)[00m)
						(SIMPX
							[01;31m(LKM[00m
								(NX alles)
								(LK kaufe)
								(MF die tickets)[01;31m)[00m))))
			(SIMPX und dann rufe ich sie noch mal an wegen dem programm im ballhaus))))
Step:Unary
{'subtrees': ['NX'], 'family': ['LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PDS'), 'right siblings': [], 'parent': 'LKM', 'auto preterminal span': (9, 11), 'span': (10, 11), 'left siblings': ['LK'], 'label': 'MF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX wissen sie was)
		(SIMPX
			(SIMPX
				(VF ich)
				(FKOORD
					(LKMVC rufe im reiseburo an)
					(KON und)
					(LKM
						(LKM klare das)
						(SIMPX
							[01;31m(LKM[00m
								(NX alles)
								(LK kaufe)
								(MF die tickets)[01;31m)[00m))))
			(SIMPX und dann rufe ich sie noch mal an wegen dem programm im ballhaus))))
Step:Unary
{'subtrees': ['NX', 'LK', 'MF'], 'family': ['LKM'], 'over_word': False, 'over words': False, 'auto preterminals': ('PIS', 'VVFIN', 'ART', 'NN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (11, 15), 'span': (11, 15), 'left siblings': [], 'label': 'LKM', 'classified_type': 'Unary', 'type': 'remove'}
(TOP wissen sie was ich rufe im reiseburo an und klare das alles kaufe die tickets und dann rufe ich sie noch mal an wegen dem programm im ballhaus)

Sentence 31:
10 Initial errors
0 on fringe, 7 iterations
2 Error:Single Word Phrase
2 Error:Modifier Attachment
2 Error:Modifier Attachment
1 Error:UNSET add
1 Error:Unary
1 Error:PP Attachment
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(P[00m
			(SIMPX
				(VF wir)
				(LK brauchten)
				(MF
					(ADVX vielleicht)
					(ADVX vorher)
					(ADVX noch)
					[01;31m(NX[00m
						[01;36m(ADJX[00m [01;31m(ADVX[00m
							(ADV ungefahr)[01;31m)[00m[01;36m)[00m
						[01;36m(NX[00m
							(ART einen)
							(NN zug)[01;36m)[00m[01;31m)[00m)
				(NF mit dem wir zuruckfahren))
			(KOUS weil)
			(SIMPX
				[01;36m(SIMPX[00m
					(VF ich)
					(LK mus)[01;36m)[00m
				(APPRART am)
				(DM nee)
				(DM nee)
				[01;31m(MF[00m
					[01;31m(PX[00m
						(PX am vierundzwanzigsten)
						[01;31m(PX[00m
							(ADVX ungefahr)
							[01;36m(PX[00m
								(APPR um)
								(NX vier uhr)[01;36m)[00m[01;31m)[00m[01;31m)[00m
					(ADVX wieder)
					(ADVX hier)[01;31m)[00m
				(VC sein)
				(NF weil ich einen termin habe))[01;31m)[00m))
Step:Single Word Phrase
{'family': ['ADJX', 'ART', 'NN'], 'auto preterminal span': (5, 6), 'span': (5, 6), 'subtrees': ['ADV'], 'parent': 'NX', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'ADJX')}
(TOP
	(TURN
		[01;31m(P[00m
			(SIMPX
				(VF wir)
				(LK brauchten)
				(MF
					(ADVX vielleicht)
					(ADVX vorher)
					(ADVX noch)
					[01;31m(NX[00m
						(ADJX ungefahr)
						[01;36m(NX[00m
							(ART einen)
							(NN zug)[01;36m)[00m[01;31m)[00m)
				(NF mit dem wir zuruckfahren))
			(KOUS weil)
			(SIMPX
				[01;36m(SIMPX[00m
					(VF ich)
					(LK mus)[01;36m)[00m
				(APPRART am)
				(DM nee)
				(DM nee)
				[01;31m(MF[00m
					[01;31m(PX[00m
						(PX am vierundzwanzigsten)
						[01;31m(PX[00m
							(ADVX ungefahr)
							[01;36m(PX[00m
								(APPR um)
								(NX vier uhr)[01;36m)[00m[01;31m)[00m[01;31m)[00m
					(ADVX wieder)
					(ADVX hier)[01;31m)[00m
				(VC sein)
				(NF weil ich einen termin habe))[01;31m)[00m))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['ADVX', 'ADVX', 'ADVX', 'ADJX', 'NX'], 'mover info': [('ADJX', (5, 6))], 'old_family': ['ADJX', 'ART', 'NN'], 'start left siblings': [], 'auto preterminals': ('ADV', 'ADV', 'ADV', 'ADV', 'ART', 'NN'), 'start right siblings': ['ART', 'NN'], 'end left siblings': ['ADVX', 'ADVX', 'ADVX'], 'auto preterminal span': (2, 8), 'movers': ['ADJX'], 'old_parent': 'NX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['NX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;31m(P[00m
			(SIMPX wir brauchten vielleicht vorher noch ungefahr einen zug mit dem wir zuruckfahren)
			(KOUS weil)
			(SIMPX
				[01;36m(SIMPX[00m
					(VF ich)
					(LK mus)[01;36m)[00m
				(APPRART am)
				(DM nee)
				(DM nee)
				[01;31m(MF[00m
					[01;31m(PX[00m
						(PX am vierundzwanzigsten)
						[01;31m(PX[00m
							(ADVX ungefahr)
							[01;36m(PX[00m
								(APPR um)
								(NX vier uhr)[01;36m)[00m[01;31m)[00m[01;31m)[00m
					(ADVX wieder)
					(ADVX hier)[01;31m)[00m
				(VC sein)
				(NF weil ich einen termin habe))[01;31m)[00m))
Step:Modifier Attachment
{'new_parent': 'PX', 'new_family': ['PX', 'ADVX', 'PX'], 'mover info': [('ADVX', (20, 21))], 'old_family': ['ADVX', 'APPR', 'NX'], 'start left siblings': [], 'auto preterminals': ('APPRART', 'NN', 'ADV', 'APPR', 'CARD', 'NN'), 'start right siblings': ['APPR', 'NX'], 'end left siblings': ['PX'], 'auto preterminal span': (18, 24), 'movers': ['ADVX'], 'old_parent': 'PX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['PX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;31m(P[00m
			(SIMPX wir brauchten vielleicht vorher noch ungefahr einen zug mit dem wir zuruckfahren)
			(KOUS weil)
			(SIMPX
				[01;36m(SIMPX[00m
					(VF ich)
					(LK mus)[01;36m)[00m
				(APPRART am)
				(DM nee)
				(DM nee)
				[01;31m(MF[00m
					[01;31m(PX[00m
						(PX am vierundzwanzigsten)
						(ADVX ungefahr)
						(PX um vier uhr)[01;31m)[00m
					(ADVX wieder)
					(ADVX hier)[01;31m)[00m
				(VC sein)
				(NF weil ich einen termin habe))[01;31m)[00m))
Step:UNSET add
{'subtrees': ['VF', 'LK'], 'family': ['SIMPX', 'APPRART', 'DM', 'DM', 'MF', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VMFIN'), 'right siblings': [(APPRART am), (DM (PTKANT nee)), (DM (PTKANT nee)), (MF (PX (PX (APPRART am) (NX (NN vierundzwanzigsten))) (ADVX (ADV ungefahr)) (PX (APPR um) (NX (ADJX (CARD vier)) (NN uhr)))) (ADVX (ADV wieder)) (ADVX (ADV hier))), (VC (VXINF (VAINF sein))), (NF (SIMPX (C (KOUS weil)) (MF (NX (PPER ich)) (NX (ART einen) (NN termin))) (VC (VXFIN (VAFIN habe)))))], 'left siblings': [], 'auto preterminal span': (13, 15), 'span': (13, 15), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		[01;31m(P[00m
			(SIMPX wir brauchten vielleicht vorher noch ungefahr einen zug mit dem wir zuruckfahren)
			(KOUS weil)
			(SIMPX
				(SIMPX ich mus)
				(APPRART am)
				(DM nee)
				(DM nee)
				[01;31m(MF[00m
					[01;31m(PX[00m
						(PX am vierundzwanzigsten)
						(ADVX ungefahr)
						(PX um vier uhr)[01;31m)[00m
					(ADVX wieder)
					(ADVX hier)[01;31m)[00m
				(VC sein)
				(NF weil ich einen termin habe))[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX', 'KOUS', 'SIMPX'], 'family': ['P'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'ADV', 'ADV', 'ADV', 'ART', 'NN', 'APPR', 'PRELS', 'PPER', 'VVFIN', 'KOUS', 'PPER', 'VMFIN', 'APPRART', 'PTKANT', 'PTKANT', 'APPRART', 'NN', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'ADV', 'VAINF', 'KOUS', 'PPER', 'ART', 'NN', 'VAFIN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 32), 'span': (0, 32), 'left siblings': [], 'label': 'P', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX wir brauchten vielleicht vorher noch ungefahr einen zug mit dem wir zuruckfahren)
		(KOUS weil)
		(SIMPX
			(SIMPX ich mus)
			(APPRART am)
			(DM nee)
			(DM nee)
			[01;31m(MF[00m
				[01;31m(PX[00m
					(PX am vierundzwanzigsten)
					(ADVX ungefahr)
					(PX um vier uhr)[01;31m)[00m
				(ADVX wieder)
				(ADVX hier)[01;31m)[00m
			(VC sein)
			(NF weil ich einen termin habe))))
Step:PP Attachment
{'subtrees': ['PX', 'ADVX', 'PX'], 'family': ['PX', 'ADVX', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'NN', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'ADV'), 'right siblings': ['ADVX', 'ADVX'], 'parent': 'MF', 'auto preterminal span': (18, 26), 'span': (18, 24), 'left siblings': [], 'label': 'PX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX wir brauchten vielleicht vorher noch ungefahr einen zug mit dem wir zuruckfahren)
		(KOUS weil)
		(SIMPX
			(SIMPX ich mus)
			(APPRART am)
			(DM nee)
			(DM nee)
			[01;31m(MF[00m
				(PX am vierundzwanzigsten)
				(ADVX ungefahr)
				(PX um vier uhr)
				(ADVX wieder)
				(ADVX hier)[01;31m)[00m
			(VC sein)
			(NF weil ich einen termin habe))))
Step:PP Attachment
{'subtrees': ['PX', 'ADVX', 'PX', 'ADVX', 'ADVX'], 'family': ['SIMPX', 'APPRART', 'DM', 'DM', 'MF', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VMFIN', 'APPRART', 'PTKANT', 'PTKANT', 'APPRART', 'NN', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'ADV', 'VAINF', 'KOUS', 'PPER', 'ART', 'NN', 'VAFIN'), 'right siblings': ['VC', 'NF'], 'parent': 'SIMPX', 'auto preterminal span': (13, 32), 'span': (18, 26), 'left siblings': ['SIMPX', 'APPRART', 'DM', 'DM'], 'label': 'MF', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP wir brauchten vielleicht vorher noch ungefahr einen zug mit dem wir zuruckfahren weil ich mus am nee nee am vierundzwanzigsten ungefahr um vier uhr wieder hier sein weil ich einen termin habe)

Sentence 32:
8 Initial errors
0 on fringe, 5 iterations
2 Error:Single Word Phrase
2 Error:PP Attachment
2 Error:Modifier Attachment
1 Error:Unary
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			(VF ich)
			(LK sehe)
			(MF grade)
			(NF
				(SIMPX
					(VF ab hannover)
					(LK geht)
					[01;31m(MF[00m
						[01;36m(ADVX[00m [01;31m(ADJX[00m
							(ADJD stundlich)[01;31m)[00m[01;36m)[00m
						(NX ein zug)
						(ADVX zuruck)
						[01;33m(NF[00m (PX von bonn)[01;31m)[00m
					[01;31m(NF[00m
						[01;31m(PX[00m
							(ADVX immer)
							[01;36m(PX[00m
								(APPR um)
								(NX achtundfunfzig)[01;36m)[00m[01;31m)[00m[01;31m)[00m))[01;31m)[00m)) [01;33mNF)[00m
Step:Single Word Phrase
{'family': ['ADVX', 'NX', 'ADVX', 'PX'], 'auto preterminal span': (6, 7), 'span': (6, 7), 'subtrees': ['ADJD'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('ADJD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'ADVX')}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			(VF ich)
			(LK sehe)
			(MF grade)
			(NF
				(SIMPX
					(VF ab hannover)
					(LK geht)
					[01;31m(MF[00m
						(ADVX stundlich)
						(NX ein zug)
						(ADVX zuruck)
						[01;33m(NF[00m (PX von bonn)[01;31m)[00m
					[01;31m(NF[00m
						[01;31m(PX[00m
							(ADVX immer)
							[01;36m(PX[00m
								(APPR um)
								(NX achtundfunfzig)[01;36m)[00m[01;31m)[00m[01;31m)[00m))[01;31m)[00m)) [01;33mNF)[00m
Step:PP Attachment
{'new_parent': 'NF', 'new_family': ['PX', 'PX'], 'mover info': [('PX', (10, 12))], 'old_family': ['ADVX', 'NX', 'ADVX', 'PX'], 'start left siblings': ['ADVX', 'NX', 'ADVX'], 'auto preterminals': ('APPR', 'NE', 'VVFIN', 'ADJD', 'ART', 'NN', 'ADV', 'APPR', 'NE', 'ADV', 'APPR', 'CARD'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (3, 15), 'movers': ['PX'], 'old_parent': 'MF', 'end right siblings': ['PX'], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			(VF ich)
			(LK sehe)
			(MF grade)
			(NF
				(SIMPX
					(VF ab hannover)
					(LK geht)
					[01;31m(MF[00m
						(ADVX stundlich)
						(NX ein zug)
						(ADVX zuruck)[01;31m)[00m
					(NF
						(PX von bonn)
						[01;31m(PX[00m
							(ADVX immer)
							[01;36m(PX[00m
								(APPR um)
								(NX achtundfunfzig)[01;36m)[00m[01;31m)[00m)))[01;31m)[00m))
Step:Modifier Attachment
{'new_parent': 'NF', 'new_family': ['PX', 'ADVX', 'PX'], 'mover info': [('ADVX', (12, 13))], 'old_family': ['ADVX', 'APPR', 'NX'], 'start left siblings': [], 'auto preterminals': ('APPR', 'NE', 'ADV', 'APPR', 'CARD'), 'start right siblings': ['APPR', 'NX'], 'end left siblings': ['PX'], 'auto preterminal span': (10, 15), 'movers': ['ADVX'], 'old_parent': 'PX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['PX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			(VF ich)
			(LK sehe)
			(MF grade)
			(NF
				(SIMPX
					(VF ab hannover)
					(LK geht)
					[01;31m(MF[00m
						(ADVX stundlich)
						(NX ein zug)
						(ADVX zuruck)[01;31m)[00m
					(NF von bonn immer um achtundfunfzig)))[01;31m)[00m))
Step:Unary
{'subtrees': ['VF', 'LK', 'MF', 'NF'], 'family': ['SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'APPR', 'NE', 'VVFIN', 'ADJD', 'ART', 'NN', 'ADV', 'APPR', 'NE', 'ADV', 'APPR', 'CARD'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 15), 'span': (0, 15), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(VF ich)
		(LK sehe)
		(MF grade)
		(NF
			(SIMPX
				(VF ab hannover)
				(LK geht)
				[01;31m(MF[00m
					(ADVX stundlich)
					(NX ein zug)
					(ADVX zuruck)[01;31m)[00m
				(NF von bonn immer um achtundfunfzig)))))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'NX', 'ADVX'], 'family': ['VF', 'LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'NE', 'VVFIN', 'ADJD', 'ART', 'NN', 'ADV', 'APPR', 'NE', 'ADV', 'APPR', 'CARD'), 'right siblings': ['NF'], 'parent': 'SIMPX', 'auto preterminal span': (3, 15), 'span': (6, 10), 'left siblings': ['VF', 'LK'], 'label': 'MF', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP ich sehe grade ab hannover geht stundlich ein zug zuruck von bonn immer um achtundfunfzig)

Sentence 33:
4 Initial errors
0 on fringe, 2 iterations
2 Error:Different label
2 Error:UNSET move
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(LK konnen)
				(MF sie ja gleich ein doppelzimmer)
				(VC nehmen)[01;36m)[00m
			[01;36m(DM[00m [01;31m(NF[00m
				(NX
					(NN frau)
					(NE schmidt))[01;31m)[00m[01;36m)[00m[01;31m)[00m
		(DM oder)))
Step:Different label
{'family': ['LK', 'MF', 'VC', 'DM'], 'auto preterminal span': (8, 10), 'span': (8, 10), 'subtrees': ['NX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('NN', 'NE'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('NF', 'DM')}
(TOP
	(TURN
		(DM ja)
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(LK konnen)
				(MF sie ja gleich ein doppelzimmer)
				(VC nehmen)[01;36m)[00m
			(DM frau schmidt)[01;31m)[00m
		(DM oder)))
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['DM', 'SIMPX', 'DM', 'DM'], 'mover info': [('DM', (8, 10))], 'old_family': ['LK', 'MF', 'VC', 'DM'], 'start left siblings': ['LK', 'MF', 'VC'], 'auto preterminals': ('PTKANT', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'NN', 'VVINF', 'NN', 'NE', 'ITJ'), 'start right siblings': [], 'end left siblings': ['DM', 'SIMPX'], 'auto preterminal span': (0, 11), 'movers': ['DM'], 'old_parent': 'SIMPX', 'end right siblings': ['DM'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP ja konnen sie ja gleich ein doppelzimmer nehmen frau schmidt oder)

Sentence 34:
0 Initial errors
0 on fringe, 0 iterations

Sentence 35:
0 Initial errors
0 on fringe, 0 iterations

Sentence 36:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;36m(NX[00m
			(DM
				(ITJ tschus))[01;36m)[00m
		(DM frau meurer)))
Step:Unary
{'subtrees': ['DM'], 'family': ['NX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ',), 'right siblings': [(DM (NX (NN frau) (NE meurer)))], 'left siblings': [], 'auto preterminal span': (0, 1), 'span': (0, 1), 'parent': 'TURN', 'label': 'NX', 'classified_type': 'Unary', 'type': 'add'}
(TOP tschus frau meurer)

Sentence 37:
0 Initial errors
0 on fringe, 0 iterations

Sentence 38:
0 Initial errors
0 on fringe, 0 iterations

Sentence 39:
0 Initial errors
0 on fringe, 0 iterations

Sentence 40:
0 Initial errors
0 on fringe, 0 iterations

Sentence 41:
0 Initial errors
0 on fringe, 0 iterations

Sentence 42:
0 Initial errors
0 on fringe, 0 iterations

Sentence 43:
0 Initial errors
0 on fringe, 0 iterations

Sentence 44:
0 Initial errors
0 on fringe, 0 iterations

Sentence 45:
0 Initial errors
0 on fringe, 0 iterations

Sentence 46:
6 Initial errors
0 on fringe, 4 iterations
2 Error:Different label
2 Error:Different label
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;36m(VF[00m [01;36m(PX[00m [01;31m(ADJX[00m
			(PX am zehnten juli)
			[01;36m(PX[00m [01;31m(ADJX[00m
				(PX von hannover)
				(ADVX zuruck)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m
		[01;31m(SIMPX[00m
			(LK ginge)
			(MF das denn dann ab achtzehn uhr)[01;31m)[00m))
Step:Different label
{'family': ['PX', 'SIMPX'], 'auto preterminal span': (0, 6), 'span': (0, 6), 'subtrees': ['PX', 'ADJX'], 'parent': 'TURN', 'over_word': False, 'auto preterminals': ('APPRART', 'ADJA', 'NN', 'APPR', 'NE', 'ADV'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('ADJX', 'PX')}
(TOP
	(TURN
		[01;36m(VF[00m
			(PX
				(PX am zehnten juli)
				[01;36m(PX[00m [01;31m(ADJX[00m
					(PX von hannover)
					(ADVX zuruck)[01;31m)[00m[01;36m)[00m)[01;36m)[00m
		[01;31m(SIMPX[00m
			(LK ginge)
			(MF das denn dann ab achtzehn uhr)[01;31m)[00m))
Step:Different label
{'family': ['PX', 'PX'], 'auto preterminal span': (3, 6), 'span': (3, 6), 'subtrees': ['PX', 'ADVX'], 'parent': 'PX', 'over_word': False, 'auto preterminals': ('APPR', 'NE', 'ADV'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('ADJX', 'PX')}
(TOP
	(TURN
		[01;36m(VF[00m
			(PX
				(PX am zehnten juli)
				(PX von hannover zuruck))[01;36m)[00m
		[01;31m(SIMPX[00m
			(LK ginge)
			(MF das denn dann ab achtzehn uhr)[01;31m)[00m))
Step:Unary
{'subtrees': ['PX'], 'family': ['VF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'ADJA', 'NN', 'APPR', 'NE', 'ADV'), 'right siblings': [(SIMPX (LK (VXFIN (VVFIN ginge))) (MF (NX (PDS das)) (ADVX (ADV denn)) (ADVX (ADV dann)) (PX (APPR ab) (NX (ADJX (CARD achtzehn)) (NN uhr)))))], 'left siblings': [], 'auto preterminal span': (0, 6), 'span': (0, 6), 'parent': 'TURN', 'label': 'VF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(VF am zehnten juli von hannover zuruck)
		[01;31m(SIMPX[00m
			(LK ginge)
			(MF das denn dann ab achtzehn uhr)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['VF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'ADJA', 'NN', 'APPR', 'NE', 'ADV', 'VVFIN', 'PDS', 'ADV', 'ADV', 'APPR', 'CARD', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 13), 'span': (6, 13), 'left siblings': ['VF'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP am zehnten juli von hannover zuruck ginge das denn dann ab achtzehn uhr)

Sentence 47:
0 Initial errors
0 on fringe, 0 iterations

Sentence 48:
0 Initial errors
0 on fringe, 0 iterations

Sentence 49:
0 Initial errors
0 on fringe, 0 iterations

Sentence 50:
0 Initial errors
0 on fringe, 0 iterations

Sentence 51:
6 Initial errors
0 on fringe, 3 iterations
3 Error:NP Attachment
2 Error:Modifier Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM also)
		(SIMPX
			(VF es)
			(LK ware)
			[01;31m(MF[00m [01;33m(MF[00m
				(ADVX ja)
				[01;31m(ADJX[00m
					[01;31m(ADJX[00m
						(ADVX dreimal)
						[01;36m(ADJX[00m
							(ADVX so)
							(ADJD lang)[01;36m)[00m[01;31m)[00m [01;33mMF)[00m
					[01;36m(NF[00m
						(NX
							(KOKOM wie)
							(NN fliegen))[01;36m)[00m[01;31m)[00m[01;31m)[00m)))
Step:NP Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'NX'], 'mover info': [('NX', (7, 9))], 'old_family': ['ADJX', 'NX'], 'start left siblings': ['ADJX'], 'auto preterminals': ('PPER', 'VAFIN', 'ADV', 'ADV', 'ADV', 'ADJD', 'KOKOM', 'NN'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (1, 9), 'movers': ['NX'], 'old_parent': 'ADJX', 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM also)
		(SIMPX
			(VF es)
			(LK ware)
			(MF
				(ADVX ja)
				[01;31m(ADJX[00m
					(ADVX dreimal)
					[01;36m(ADJX[00m
						(ADVX so)
						(ADJD lang)[01;36m)[00m[01;31m)[00m)
			[01;36m(NF[00m
				(NX
					(KOKOM wie)
					(NN fliegen))[01;36m)[00m)))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['ADVX', 'ADVX', 'ADJX'], 'mover info': [('ADVX', (4, 5))], 'old_family': ['ADVX', 'ADVX', 'ADJD'], 'start left siblings': [], 'auto preterminals': ('ADV', 'ADV', 'ADV', 'ADJD'), 'start right siblings': ['ADVX', 'ADJD'], 'end left siblings': ['ADVX'], 'auto preterminal span': (3, 7), 'movers': ['ADVX'], 'old_parent': 'ADJX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['ADJX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM also)
		(SIMPX
			(VF es)
			(LK ware)
			(MF ja dreimal so lang)
			[01;36m(NF[00m
				(NX
					(KOKOM wie)
					(NN fliegen))[01;36m)[00m)))
Step:Unary
{'subtrees': ['NX'], 'family': ['VF', 'LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOKOM', 'NN'), 'right siblings': [], 'left siblings': [(VF (NX (PPER es))), (LK (VXFIN (VAFIN ware))), (MF (ADVX (ADV ja)) (ADVX (ADV dreimal)) (ADJX (ADVX (ADV so)) (ADJD lang)))], 'auto preterminal span': (7, 9), 'span': (7, 9), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP also es ware ja dreimal so lang wie fliegen)

Sentence 52:
3 Initial errors
0 on fringe, 2 iterations
2 Error:Clause Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM also)
		[01;36m(SIMPX[00m
			[01;36m(VF[00m
				(SIMPX
					(VF ich)
					(LK werde)
					(MF jetzt gleich noch mal)
					(VC nachgucken))[01;36m)[00m
			[01;31m(SIMPX[00m
				(LK konnte)
				(MF sie dann)
				(VC zuruckrufen)[01;31m)[00m[01;36m)[00m))
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['SIMPX', 'LK', 'MF', 'VC'], 'mover info': [('SIMPX', (1, 8))], 'old_family': ['DM', 'SIMPX', 'SIMPX'], 'start left siblings': ['DM'], 'auto preterminals': ('ADV', 'PPER', 'VAFIN', 'ADV', 'ADV', 'ADV', 'ADV', 'VVINF', 'VMFIN', 'PPER', 'ADV', 'VVINF'), 'start right siblings': ['SIMPX'], 'end left siblings': [], 'auto preterminal span': (0, 12), 'movers': ['SIMPX'], 'old_parent': 'TURN', 'end right siblings': ['LK', 'MF', 'VC'], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM also)
		(SIMPX
			[01;36m(VF[00m
				(SIMPX
					(VF ich)
					(LK werde)
					(MF jetzt gleich noch mal)
					(VC nachgucken))[01;36m)[00m
			(LK konnte)
			(MF sie dann)
			(VC zuruckrufen))))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['VF', 'LK', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'ADV', 'ADV', 'ADV', 'ADV', 'VVINF'), 'right siblings': [(LK (VXFIN (VMFIN konnte))), (MF (NX (PPER sie)) (ADVX (ADV dann))), (VC (VXINF (VVINF zuruckrufen)))], 'left siblings': [], 'auto preterminal span': (1, 8), 'span': (1, 8), 'parent': 'SIMPX', 'label': 'VF', 'classified_type': 'Unary', 'type': 'add'}
(TOP also ich werde jetzt gleich noch mal nachgucken konnte sie dann zuruckrufen)

Sentence 53:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(PX[00m
	(TOP
		(TURN
			(PX in zehn minuten)
			(ADVX oder so)))[01;36m)[00m
Step:Unary
{'subtrees': ['TURN'], 'family': ['PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'CARD', 'NN', 'KON', 'ADV'), 'right siblings': [], 'left siblings': [], 'auto preterminal span': (0, 5), 'span': (0, 5), 'parent': 'TOP', 'label': 'PX', 'classified_type': 'Unary', 'type': 'add'}
(TOP in zehn minuten oder so)

Sentence 54:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Clause Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SIMPX[00m
	(TOP
		(TURN
			(SIMPX sieht das mit dem hotel aus)
			[01;31m(SIMPX[00m
				(LK konnen)
				(MF sie das auch)
				(VC buchen)
				(NF fur mich)[01;31m)[00m))[01;36m)[00m
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['SIMPX', 'LK', 'MF', 'VC', 'NF'], 'mover info': [('SIMPX', (0, 6))], 'old_family': ['SIMPX', 'SIMPX'], 'start left siblings': [], 'auto preterminals': ('VVFIN', 'PDS', 'APPR', 'ART', 'NN', 'PTKVZ', 'VMFIN', 'PPER', 'PDS', 'ADV', 'VVINF', 'APPR', 'PPER'), 'start right siblings': ['SIMPX'], 'end left siblings': [], 'auto preterminal span': (0, 13), 'movers': ['SIMPX'], 'old_parent': 'TURN', 'end right siblings': ['LK', 'MF', 'VC', 'NF'], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP sieht das mit dem hotel aus konnen sie das auch buchen fur mich)

Sentence 55:
0 Initial errors
0 on fringe, 0 iterations

Sentence 56:
0 Initial errors
0 on fringe, 0 iterations

Sentence 57:
4 Initial errors
0 on fringe, 1 iterations
4 Error:Co-ordination
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(PX[00m
	(TOP [01;33m(ADJX[00m
		(TURN
			[01;31m(ADJX[00m
				(ADJX zentral)
				[01;31m(PX[00m
					(PX zum stadtzentrum) [01;33mADJX)[00m
					(KON oder)
					(PX zu ihrem kongresort)[01;31m)[00m[01;31m)[00m))[01;36m)[00m
Step:Co-ordination
{'new_parent': 'TURN', 'new_family': ['ADJX', 'KON', 'PX'], 'mover info': [('KON', (3, 4)), ('PX', (4, 7))], 'old_family': ['PX', 'KON', 'PX'], 'start left siblings': ['PX'], 'auto preterminals': ('ADJD', 'APPRART', 'NN', 'KON', 'APPR', 'PPOSAT', 'NN'), 'start right siblings': [], 'end left siblings': ['ADJX'], 'auto preterminal span': (0, 7), 'adding node already present': False, 'movers': ['KON', 'PX'], 'old_parent': 'PX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'Co-ordination', 'type': 'move', 'added label': 'PX'}
(TOP zentral zum stadtzentrum oder zu ihrem kongresort)

Sentence 58:
0 Initial errors
0 on fringe, 0 iterations

Sentence 59:
3 Initial errors
0 on fringe, 2 iterations
2 Error:PP Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(KOORD und)
			(LK wissen)
			(MF sie schon)
			(NF
				(SIMPX
					[01;31m(MF[00m
						[01;36m(C[00m
							(PX
								(APPR in)
								(NX welcher preiskategorie))[01;36m)[00m
						[01;36m(MF[00m
							(NX
								(PDS das))[01;36m)[00m[01;31m)[00m
					(VC liegen sollte))))))
Step:PP Attachment
{'new_parent': 'SIMPX', 'new_family': ['PX', 'MF', 'VC'], 'mover info': [('PX', (5, 8))], 'old_family': ['PX', 'NX'], 'start left siblings': [], 'auto preterminals': ('APPR', 'PWAT', 'NN', 'PDS', 'VVINF', 'VMFIN'), 'start right siblings': ['NX'], 'end left siblings': [], 'auto preterminal span': (5, 11), 'movers': ['PX'], 'old_parent': 'MF', 'end right siblings': ['MF', 'VC'], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(KOORD und)
			(LK wissen)
			(MF sie schon)
			(NF
				(SIMPX
					[01;36m(C[00m
						(PX
							(APPR in)
							(NX welcher preiskategorie))[01;36m)[00m
					(MF das)
					(VC liegen sollte))))))
Step:Unary
{'subtrees': ['PX'], 'family': ['C', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'PWAT', 'NN'), 'right siblings': [(MF (NX (PDS das))), (VC (VXINF (VVINF liegen)) (VXFIN (VMFIN sollte)))], 'left siblings': [], 'auto preterminal span': (5, 8), 'span': (5, 8), 'parent': 'SIMPX', 'label': 'C', 'classified_type': 'Unary', 'type': 'add'}
(TOP ja und wissen sie schon in welcher preiskategorie das liegen sollte)

Sentence 60:
3 Initial errors
0 on fringe, 2 iterations
2 Error:PP Attachment
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM also)
		(SIMPX
			(VF es)
			(LK sollte)
			(MF
				(NX
					(NX
						[01;31m(ADVX[00m
							(ADVX so)
							(ADV ungefahr)[01;31m)[00m
						(ADJX hundert)
						(NN mark))
					(PX [01;33m(PX[00m
						(APPR pro)
						[01;31m(NX[00m
							(NX ubernachtung) [01;33mPX)[00m
							(PX mit fruhstuck)[01;31m)[00m))))))
Step:PP Attachment
{'new_parent': 'NX', 'new_family': ['NX', 'PX', 'PX'], 'mover info': [('PX', (10, 12))], 'old_family': ['NX', 'PX'], 'start left siblings': ['NX'], 'auto preterminals': ('ADV', 'ADV', 'CARD', 'NN', 'APPR', 'NN', 'APPR', 'NN'), 'start right siblings': [], 'end left siblings': ['NX', 'PX'], 'auto preterminal span': (4, 12), 'adding node already present': False, 'movers': ['PX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'PX'}
(TOP
	(TURN
		(DM ja)
		(DM also)
		(SIMPX
			(VF es)
			(LK sollte)
			(MF
				(NX
					(NX
						[01;31m(ADVX[00m
							(ADVX so)
							(ADV ungefahr)[01;31m)[00m
						(ADJX hundert)
						(NN mark))
					(PX pro ubernachtung mit fruhstuck))))))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'ADV'], 'family': ['ADVX', 'ADJX', 'NN'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'CARD', 'NN'), 'right siblings': ['ADJX', 'NN'], 'parent': 'NX', 'auto preterminal span': (4, 8), 'span': (4, 6), 'left siblings': [], 'label': 'ADVX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP ja also es sollte so ungefahr hundert mark pro ubernachtung mit fruhstuck)

Sentence 61:
0 Initial errors
0 on fringe, 0 iterations

Sentence 62:
0 Initial errors
0 on fringe, 0 iterations

Sentence 63:
6 Initial errors
0 on fringe, 3 iterations
2 Error:Single Word Phrase
2 Error:UNSET move
2 Error:UNSET move
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP [01;33m(SIMPX[00m
	(TURN
		[01;31m(SIMPX[00m
			(VF das)
			(LK ware)
			[01;31m(MF[00m
				[01;36m(MF[00m
					(ADVX
						(ADV jetzt)) [01;33mSIMPX)[00m[01;36m)[00m
				[01;36m(DM[00m [01;31m(ADVX[00m
					(ADV ja)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX das ist das billigste was ich ihnen jetzt gerade im moment anbieten konnte)))
Step:Single Word Phrase
{'family': ['ADVX', 'DM'], 'auto preterminal span': (3, 4), 'span': (3, 4), 'subtrees': ['ADV'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'DM')}
(TOP [01;33m(SIMPX[00m
	(TURN
		[01;31m(SIMPX[00m
			(VF das)
			(LK ware)
			[01;31m(MF[00m
				[01;36m(MF[00m
					(ADVX
						(ADV jetzt)) [01;33mSIMPX)[00m[01;36m)[00m
				(DM ja)[01;31m)[00m[01;31m)[00m
		(SIMPX das ist das billigste was ich ihnen jetzt gerade im moment anbieten konnte)))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'DM'], 'mover info': [('DM', (3, 4))], 'old_family': ['ADVX', 'DM'], 'start left siblings': ['ADVX'], 'auto preterminals': ('PDS', 'VAFIN', 'ADV', 'ADV'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (0, 4), 'movers': ['DM'], 'old_parent': 'MF', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(VF das)
				(LK ware)
				(MF jetzt)[01;36m)[00m
			(DM ja)[01;31m)[00m
		(SIMPX das ist das billigste was ich ihnen jetzt gerade im moment anbieten konnte)))
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['SIMPX', 'DM', 'SIMPX'], 'mover info': [('DM', (3, 4))], 'old_family': ['VF', 'LK', 'MF', 'DM'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('PDS', 'VAFIN', 'ADV', 'ADV', 'PDS', 'VAFIN', 'ART', 'NN', 'PRELS', 'PPER', 'PPER', 'ADV', 'ADV', 'APPRART', 'NN', 'VVINF', 'VMFIN'), 'start right siblings': [], 'end left siblings': ['SIMPX'], 'auto preterminal span': (0, 17), 'movers': ['DM'], 'old_parent': 'SIMPX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP das ware jetzt ja das ist das billigste was ich ihnen jetzt gerade im moment anbieten konnte)

Sentence 64:
14 Initial errors
0 on fringe, 6 iterations
8 Error:UNSET move
2 Error:Different label
1 Error:Single Word Phrase
1 Error:Single Word Phrase
1 Error:Single Word Phrase
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX
			(VF das hotel)
			(LK heist)
			[01;31m(MF[00m [01;33m(MF (ADVX[00m
				[01;31m(NX[00m
					(NX hotel am thielenplatz)
					[01;31m(PX[00m [01;33m(PX[00m
						(APPR mit)
						[01;31m(NX[00m [01;33m(NX[00m
							(NX
								[01;36m(ADJX[00m
									(BS t)[01;36m)[00m
								[01;36m(NX[00m
									(BS h)[01;36m)[00m)
							(KON und)
							[01;31m(NX[00m
								[01;36m(NX[00m
									(BS i) [01;33mNX) PX) ADVX) MF)[00m[01;36m)[00m
								[01;36m(VXINF[00m
									[01;36m(VC[00m
										(BS e)[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m)))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'BS'], 'mover info': [('BS', (11, 12))], 'old_family': ['BS', 'BS'], 'start left siblings': ['BS'], 'auto preterminals': ('ART', 'NN', 'VVFIN', 'NN', 'APPRART', 'NE', 'APPR', 'BS', 'BS', 'KON', 'BS', 'BS'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (0, 12), 'movers': ['BS'], 'old_parent': 'NX', 'POS confusion': ('BS', 'BS'), 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SIMPX
			(VF das hotel)
			(LK heist)
			[01;36m(ADVX[00m
				(MF
					[01;31m(NX[00m
						(NX hotel am thielenplatz)
						(PX
							(APPR mit)
							(NX
								(NX
									[01;36m(ADJX[00m
										(BS t)[01;36m)[00m
									[01;36m(NX[00m
										(BS h)[01;36m)[00m)
								(KON und)
								(NX i)))[01;31m)[00m)[01;36m)[00m
			[01;36m(VXINF[00m
				[01;36m(VC[00m
					(BS e)[01;36m)[00m[01;36m)[00m)))
Step:Different label
{'family': ['ADVX'], 'auto preterminal span': (3, 11), 'span': (3, 11), 'subtrees': ['NX', 'PX'], 'parent': 'MF', 'over_word': False, 'auto preterminals': ('NN', 'APPRART', 'NE', 'APPR', 'BS', 'BS', 'KON', 'BS'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('NX', 'ADVX')}
(TOP
	(TURN
		(SIMPX
			(VF das hotel)
			(LK heist)
			(MF
				(ADVX
					(NX hotel am thielenplatz)
					(PX
						(APPR mit)
						(NX
							(NX
								[01;36m(ADJX[00m
									(BS t)[01;36m)[00m
								[01;36m(NX[00m
									(BS h)[01;36m)[00m)
							(KON und)
							(NX i)))))
			[01;36m(VXINF[00m
				[01;36m(VC[00m
					(BS e)[01;36m)[00m[01;36m)[00m)))
Step:Single Word Phrase
{'subtrees': ['BS'], 'family': ['ADJX', 'BS'], 'over_word': True, 'over words': True, 'auto preterminals': ('BS',), 'right siblings': [(BS h)], 'left siblings': [], 'auto preterminal span': (7, 8), 'span': (7, 8), 'parent': 'NX', 'label': 'ADJX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SIMPX
			(VF das hotel)
			(LK heist)
			(MF
				(ADVX
					(NX hotel am thielenplatz)
					(PX
						(APPR mit)
						(NX
							(NX
								(ADJX t)
								[01;36m(NX[00m
									(BS h)[01;36m)[00m)
							(KON und)
							(NX i)))))
			[01;36m(VXINF[00m
				[01;36m(VC[00m
					(BS e)[01;36m)[00m[01;36m)[00m)))
Step:Single Word Phrase
{'subtrees': ['BS'], 'family': ['ADJX', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('BS',), 'right siblings': [], 'left siblings': [(ADJX (BS t))], 'auto preterminal span': (8, 9), 'span': (8, 9), 'parent': 'NX', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SIMPX
			(VF das hotel)
			(LK heist)
			(MF hotel am thielenplatz mit t h und i)
			[01;36m(VXINF[00m
				[01;36m(VC[00m
					(BS e)[01;36m)[00m[01;36m)[00m)))
Step:Single Word Phrase
{'subtrees': ['BS'], 'family': ['VF', 'LK', 'MF', 'VC'], 'over_word': True, 'over words': True, 'auto preterminals': ('BS',), 'right siblings': [], 'left siblings': [(VF (NX (ART das) (NN hotel))), (LK (VXFIN (VVFIN heist))), (MF (ADVX (NX (NX (NN hotel)) (PX (APPRART am) (NX (NE thielenplatz)))) (PX (APPR mit) (NX (NX (ADJX (BS t)) (NX (BS h))) (KON und) (NX (BS i))))))], 'auto preterminal span': (11, 12), 'span': (11, 12), 'parent': 'SIMPX', 'label': 'VC', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SIMPX
			(VF das hotel)
			(LK heist)
			(MF hotel am thielenplatz mit t h und i)
			[01;36m(VXINF[00m
				(VC
					(BS e))[01;36m)[00m)))
Step:Unary
{'subtrees': ['VC'], 'family': ['VF', 'LK', 'MF', 'VXINF'], 'over_word': False, 'over words': False, 'auto preterminals': ('BS',), 'right siblings': [], 'left siblings': [(VF (NX (ART das) (NN hotel))), (LK (VXFIN (VVFIN heist))), (MF (ADVX (NX (NX (NN hotel)) (PX (APPRART am) (NX (NE thielenplatz)))) (PX (APPR mit) (NX (NX (ADJX (BS t)) (NX (BS h))) (KON und) (NX (BS i))))))], 'auto preterminal span': (11, 12), 'span': (11, 12), 'parent': 'SIMPX', 'label': 'VXINF', 'classified_type': 'Unary', 'type': 'add'}
(TOP das hotel heist hotel am thielenplatz mit t h und i e)

Sentence 65:
4 Initial errors
0 on fringe, 3 iterations
2 Error:Modifier Attachment
1 Error:PP Attachment
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM also)
		[01;31m(SIMPX[00m
			(LK soll)
			(MF
				(NX ich)
				(ADVX jetzt)
				(PX fur sie)
				[01;36m(NX[00m
					(NX den flug vom kolnbonner flughafen)
					(PX am siebten juli)[01;36m)[00m)
			(VC buchen)
			(NF um sieben uhr zehn)[01;31m)[00m
		(SIMPX sie sind dann um acht uhr zehn in hannover)
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK informiere)
			(MF ich mich noch)
			(NF
				(SIMPX
					(C ob)
					(MF
						(NX sie)
						[01;31m(PX[00m
							(ADVX abends)
							[01;36m(PX[00m
								(APPRART am)
								(NX zehnten juli)[01;36m)[00m[01;31m)[00m)
					(VC zuruckfliegen konnten))))))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'ADVX', 'PX'], 'mover info': [('ADVX', (36, 37))], 'old_family': ['ADVX', 'APPRART', 'NX'], 'start left siblings': [], 'auto preterminals': ('PPER', 'ADV', 'APPRART', 'ADJA', 'NN'), 'start right siblings': ['APPRART', 'NX'], 'end left siblings': ['NX'], 'auto preterminal span': (35, 40), 'movers': ['ADVX'], 'old_parent': 'PX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['PX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM also)
		[01;31m(SIMPX[00m
			(LK soll)
			(MF
				(NX ich)
				(ADVX jetzt)
				(PX fur sie)
				[01;36m(NX[00m
					(NX den flug vom kolnbonner flughafen)
					(PX am siebten juli)[01;36m)[00m)
			(VC buchen)
			(NF um sieben uhr zehn)[01;31m)[00m
		(SIMPX sie sind dann um acht uhr zehn in hannover)
		(SIMPX und dann informiere ich mich noch ob sie abends am zehnten juli zuruckfliegen konnten)))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['NX', 'ADVX', 'PX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'APPRART', 'ADJA', 'NN', 'APPRART', 'ADJA', 'NN'), 'right siblings': [], 'left siblings': [(NX (PPER ich)), (ADVX (ADV jetzt)), (PX (APPR fur) (NX (PPER sie)))], 'auto preterminal span': (6, 14), 'span': (6, 14), 'parent': 'MF', 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		[01;31m(SIMPX[00m
			(LK soll)
			(MF ich jetzt fur sie den flug vom kolnbonner flughafen am siebten juli)
			(VC buchen)
			(NF um sieben uhr zehn)[01;31m)[00m
		(SIMPX sie sind dann um acht uhr zehn in hannover)
		(SIMPX und dann informiere ich mich noch ob sie abends am zehnten juli zuruckfliegen konnten)))
Step:UNSET remove
{'subtrees': ['LK', 'MF', 'VC', 'NF'], 'family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VMFIN', 'PPER', 'ADV', 'APPR', 'PPER', 'ART', 'NN', 'APPRART', 'ADJA', 'NN', 'APPRART', 'ADJA', 'NN', 'VVINF', 'APPR', 'CARD', 'NN', 'CARD', 'PPER', 'VAFIN', 'ADV', 'APPR', 'CARD', 'NN', 'CARD', 'APPR', 'NE', 'KON', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'KOUS', 'PPER', 'ADV', 'APPRART', 'ADJA', 'NN', 'VVINF', 'VMFIN'), 'right siblings': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 42), 'span': (1, 19), 'left siblings': ['DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP also soll ich jetzt fur sie den flug vom kolnbonner flughafen am siebten juli buchen um sieben uhr zehn sie sind dann um acht uhr zehn in hannover und dann informiere ich mich noch ob sie abends am zehnten juli zuruckfliegen konnten)

Sentence 66:
0 Initial errors
0 on fringe, 0 iterations

Sentence 67:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX
			(LK gucke)
			(MF ich dann)
			(NF
				(SIMPX
					(SIMPX
						(C wie)
						(MF das)
						(VC funktioniert)
						[01;31m(NF[00m
							(PX
								(APPR mit)
								(NX dem hotel))[01;31m)[00m)
					(SIMPX ob noch was frei ist))))))
Step:Unary
{'subtrees': ['PX'], 'family': ['C', 'MF', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PDS', 'VVFIN', 'APPR', 'ART', 'NN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (3, 9), 'span': (6, 9), 'left siblings': ['C', 'MF', 'VC'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP gucke ich dann wie das funktioniert mit dem hotel ob noch was frei ist)

Sentence 68:
0 Initial errors
0 on fringe, 0 iterations

Sentence 69:
0 Initial errors
0 on fringe, 0 iterations

Sentence 70:
0 Initial errors
0 on fringe, 0 iterations

Sentence 71:
0 Initial errors
0 on fringe, 0 iterations

Sentence 72:
1 Initial errors
0 on fringe, 1 iterations
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM hallo)
		(DM frau offergeld)
		(SIMPX
			(VF wie)
			(LK machen)
			(MF wir das denn jetzt)
			(NF
				(SIMPX
					(C wenn)
					[01;31m(FKOORD[00m
						(MVC wir im am ersten juliwochenende nach hannover fliegen wollen)
						(KON oder)
						(MVC nach hannover fahren wollen)[01;31m)[00m)))))
Step:UNSET remove
{'subtrees': ['MVC', 'KON', 'MVC'], 'family': ['C', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'APPRART', 'APPRART', 'ADJA', 'NN', 'APPR', 'NE', 'VVINF', 'VMFIN', 'KON', 'APPR', 'NE', 'VVINF', 'VMFIN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (9, 24), 'span': (10, 24), 'left siblings': ['C'], 'label': 'FKOORD', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP hallo frau offergeld wie machen wir das denn jetzt wenn wir im am ersten juliwochenende nach hannover fliegen wollen oder nach hannover fahren wollen)

Sentence 73:
4 Initial errors
0 on fringe, 2 iterations
2 Error:UNSET move
2 Error:Clause Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(VF dann)
				[01;31m(SIMPX[00m
					(LK lassen)
					(MF wir)[01;31m)[00m[01;36m)[00m
			[01;36m(SIMPX[00m
				(LK konnen)
				(MF wir uns besser)
				(VC unterhalten)[01;36m)[00m[01;31m)[00m
		(DM ja)))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF'], 'mover info': [('VF', (2, 3))], 'old_family': ['VF', 'SIMPX', 'LK', 'MF', 'VC'], 'start left siblings': [], 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'VMFIN', 'PPER', 'PRF', 'ADJD', 'VVINF'), 'start right siblings': ['SIMPX', 'LK', 'MF', 'VC'], 'end left siblings': [], 'auto preterminal span': (2, 10), 'movers': ['VF'], 'old_parent': 'SIMPX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['LK', 'MF'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		[01;31m(SIMPX[00m
			(SIMPX dann lassen wir)
			[01;36m(SIMPX[00m
				(LK konnen)
				(MF wir uns besser)
				(VC unterhalten)[01;36m)[00m[01;31m)[00m
		(DM ja)))
Step:Clause Attachment
{'new_parent': 'TURN', 'new_family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'DM'], 'mover info': [('SIMPX', (2, 5))], 'old_family': ['SIMPX', 'LK', 'MF', 'VC'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'ITJ', 'ADV', 'VVFIN', 'PPER', 'VMFIN', 'PPER', 'PRF', 'ADJD', 'VVINF', 'PTKANT'), 'start right siblings': ['LK', 'MF', 'VC'], 'end left siblings': ['DM', 'DM'], 'auto preterminal span': (0, 11), 'movers': ['SIMPX'], 'old_parent': 'SIMPX', 'end right siblings': ['SIMPX', 'DM'], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP ja gut dann lassen wir konnen wir uns besser unterhalten ja)

Sentence 74:
4 Initial errors
0 on fringe, 3 iterations
2 Error:PP Attachment
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(LK ware)
				(MF vielleicht gar nicht so schlecht)[01;31m)[00m
			[01;36m(NF[00m
				(PX
					[01;36m(NF[00m
						(PX
							(APPR wegen)
							(NX der expo))[01;36m)[00m
					(ADVX dann))[01;36m)[00m[01;36m)[00m))
Step:PP Attachment
{'new_parent': 'SIMPX', 'new_family': ['LK', 'MF', 'PX'], 'mover info': [('PX', (7, 11))], 'old_family': ['DM', 'SIMPX', 'PX'], 'start left siblings': ['DM', 'SIMPX'], 'auto preterminals': ('PTKANT', 'VAFIN', 'ADV', 'ADV', 'PTKNEG', 'ADV', 'ADJD', 'APPR', 'ART', 'NE', 'ADV'), 'start right siblings': [], 'end left siblings': ['LK', 'MF'], 'auto preterminal span': (0, 11), 'movers': ['PX'], 'old_parent': 'TURN', 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(LK ware)
			(MF vielleicht gar nicht so schlecht)
			[01;36m(NF[00m
				(PX
					[01;36m(NF[00m
						(PX
							(APPR wegen)
							(NX der expo))[01;36m)[00m
					(ADVX dann))[01;36m)[00m)))
Step:Unary
{'subtrees': ['PX'], 'family': ['NF', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NE'), 'right siblings': [(ADVX (ADV dann))], 'left siblings': [], 'auto preterminal span': (7, 10), 'span': (7, 10), 'parent': 'PX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(LK ware)
			(MF vielleicht gar nicht so schlecht)
			[01;36m(NF[00m
				(PX
					(NF wegen der expo)
					(ADVX dann))[01;36m)[00m)))
Step:Unary
{'subtrees': ['PX'], 'family': ['LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NE', 'ADV'), 'right siblings': [], 'left siblings': [(LK (VXFIN (VAFIN ware))), (MF (ADVX (ADV vielleicht)) (ADVX (ADVX (ADV gar)) (PTKNEG nicht)) (ADJX (ADVX (ADV so)) (ADJD schlecht)))], 'auto preterminal span': (7, 11), 'span': (7, 11), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP ja ware vielleicht gar nicht so schlecht wegen der expo dann)

Sentence 75:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Clause Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX da mussen wir uns noch daruber unterhalten)
		[01;31m(SIMPX[00m
			(SIMPX wollen sie mit dem zug fahren)
			(KON oder)
			(SIMPX wollen sie fliegen)[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'KON', 'SIMPX'], 'family': ['DM', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADV', 'VMFIN', 'PPER', 'PRF', 'ADV', 'PROP', 'VVINF', 'VMFIN', 'PPER', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'VMFIN', 'PPER', 'VVINF'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 18), 'span': (8, 18), 'left siblings': ['DM', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP ja da mussen wir uns noch daruber unterhalten wollen sie mit dem zug fahren oder wollen sie fliegen)

Sentence 76:
0 Initial errors
0 on fringe, 0 iterations

Sentence 77:
0 Initial errors
0 on fringe, 0 iterations

Sentence 78:
0 Initial errors
0 on fringe, 0 iterations

Sentence 79:
9 Initial errors
0 on fringe, 6 iterations
2 Error:Different label
2 Error:Single Word Phrase
2 Error:NP Attachment
1 Error:Clause Attachment
1 Error:UNSET remove
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM also)
		(SIMPX ich kann beim reiseburo anrufen)
		[01;31m(SIMPX[00m
			(VF dann)
			(SIMPX gucke ich)
			[01;31m(FKOORD[00m
				[01;36m(SIMPX[00m [01;31m(LKMN[00m
					(LK erkundige)
					[01;36m(MF[00m
						[01;31m(MF[00m
							(NX ich)
							(NX mich)[01;31m)[00m
						[01;36m(ADVX[00m [01;31m(DM[00m
							(ITJ ah)[01;31m)[00m[01;36m)[00m
						[01;31m(NX[00m
							(ADVX hier)
							(NX die fluge)[01;31m)[00m[01;36m)[00m
					(NF wann die fluge stattfinden)[01;31m)[00m[01;36m)[00m
				(KON und)
				(LKM buche dann fur uns beiden)[01;31m)[00m[01;31m)[00m))
Step:Different label
{'family': ['SIMPX', 'KON', 'LKM'], 'auto preterminal span': (10, 21), 'span': (10, 21), 'subtrees': ['LK', 'MF', 'DM', 'NX', 'NF'], 'parent': 'FKOORD', 'over_word': False, 'auto preterminals': ('VVFIN', 'PPER', 'PRF', 'ITJ', 'ADV', 'ART', 'NN', 'PWAV', 'ART', 'NN', 'VVFIN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('LKMN', 'SIMPX')}
(TOP
	(TURN
		(DM ja)
		(DM also)
		(SIMPX ich kann beim reiseburo anrufen)
		[01;31m(SIMPX[00m
			(VF dann)
			(SIMPX gucke ich)
			[01;31m(FKOORD[00m
				(SIMPX
					(LK erkundige)
					[01;36m(MF[00m
						[01;31m(MF[00m
							(NX ich)
							(NX mich)[01;31m)[00m
						[01;36m(ADVX[00m [01;31m(DM[00m
							(ITJ ah)[01;31m)[00m[01;36m)[00m
						[01;31m(NX[00m
							(ADVX hier)
							(NX die fluge)[01;31m)[00m[01;36m)[00m
					(NF wann die fluge stattfinden))
				(KON und)
				(LKM buche dann fur uns beiden)[01;31m)[00m[01;31m)[00m))
Step:Single Word Phrase
{'family': ['LK', 'MF', 'ADVX', 'NX', 'NF'], 'auto preterminal span': (13, 14), 'span': (13, 14), 'subtrees': ['ITJ'], 'parent': 'SIMPX', 'over_word': True, 'auto preterminals': ('ITJ',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('DM', 'ADVX')}
(TOP
	(TURN
		(DM ja)
		(DM also)
		(SIMPX ich kann beim reiseburo anrufen)
		[01;31m(SIMPX[00m
			(VF dann)
			(SIMPX gucke ich)
			[01;31m(FKOORD[00m
				(SIMPX
					(LK erkundige)
					[01;36m(MF[00m
						[01;31m(MF[00m
							(NX ich)
							(NX mich)[01;31m)[00m
						(ADVX ah)
						[01;31m(NX[00m
							(ADVX hier)
							(NX die fluge)[01;31m)[00m[01;36m)[00m
					(NF wann die fluge stattfinden))
				(KON und)
				(LKM buche dann fur uns beiden)[01;31m)[00m[01;31m)[00m))
Step:NP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'NX', 'ADVX', 'NX'], 'mover info': [('ADVX', (13, 14)), ('NX', (14, 17))], 'old_family': ['LK', 'MF', 'ADVX', 'NX', 'NF'], 'start left siblings': ['LK', 'MF'], 'auto preterminals': ('VVFIN', 'PPER', 'PRF', 'ITJ', 'ADV', 'ART', 'NN', 'PWAV', 'ART', 'NN', 'VVFIN'), 'start right siblings': ['NF'], 'end left siblings': ['NX', 'NX'], 'auto preterminal span': (10, 21), 'movers': ['ADVX', 'NX'], 'old_parent': 'SIMPX', 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(DM also)
		(SIMPX ich kann beim reiseburo anrufen)
		[01;31m(SIMPX[00m
			(VF dann)
			(SIMPX gucke ich)
			[01;31m(FKOORD[00m
				(SIMPX
					(LK erkundige)
					(MF
						(NX ich)
						(NX mich)
						(ADVX ah)
						[01;31m(NX[00m
							(ADVX hier)
							(NX die fluge)[01;31m)[00m)
					(NF wann die fluge stattfinden))
				(KON und)
				(LKM buche dann fur uns beiden)[01;31m)[00m[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['VF', 'SIMPX', 'FKOORD'], 'family': ['DM', 'DM', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADV', 'PPER', 'VMFIN', 'APPRART', 'NN', 'VVINF', 'ADV', 'VVFIN', 'PPER', 'VVFIN', 'PPER', 'PRF', 'ITJ', 'ADV', 'ART', 'NN', 'PWAV', 'ART', 'NN', 'VVFIN', 'KON', 'VVFIN', 'ADV', 'APPR', 'PPER', 'PIS'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 27), 'span': (7, 27), 'left siblings': ['DM', 'DM', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM also)
		(SIMPX ich kann beim reiseburo anrufen)
		(VF dann)
		(SIMPX gucke ich)
		[01;31m(FKOORD[00m
			(SIMPX
				(LK erkundige)
				(MF
					(NX ich)
					(NX mich)
					(ADVX ah)
					[01;31m(NX[00m
						(ADVX hier)
						(NX die fluge)[01;31m)[00m)
				(NF wann die fluge stattfinden))
			(KON und)
			(LKM buche dann fur uns beiden)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['SIMPX', 'KON', 'LKM'], 'family': ['DM', 'DM', 'SIMPX', 'VF', 'SIMPX', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADV', 'PPER', 'VMFIN', 'APPRART', 'NN', 'VVINF', 'ADV', 'VVFIN', 'PPER', 'VVFIN', 'PPER', 'PRF', 'ITJ', 'ADV', 'ART', 'NN', 'PWAV', 'ART', 'NN', 'VVFIN', 'KON', 'VVFIN', 'ADV', 'APPR', 'PPER', 'PIS'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 27), 'span': (10, 27), 'left siblings': ['DM', 'DM', 'SIMPX', 'VF', 'SIMPX'], 'label': 'FKOORD', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM also)
		(SIMPX ich kann beim reiseburo anrufen)
		(VF dann)
		(SIMPX gucke ich)
		(SIMPX
			(LK erkundige)
			(MF
				(NX ich)
				(NX mich)
				(ADVX ah)
				[01;31m(NX[00m
					(ADVX hier)
					(NX die fluge)[01;31m)[00m)
			(NF wann die fluge stattfinden))
		(KON und)
		(LKM buche dann fur uns beiden)))
Step:UNSET remove
{'subtrees': ['ADVX', 'NX'], 'family': ['NX', 'NX', 'ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'PRF', 'ITJ', 'ADV', 'ART', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (11, 17), 'span': (14, 17), 'left siblings': ['NX', 'NX', 'ADVX'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ja also ich kann beim reiseburo anrufen dann gucke ich erkundige ich mich ah hier die fluge wann die fluge stattfinden und buche dann fur uns beiden)

Sentence 80:
8 Initial errors
0 on fringe, 7 iterations
2 Error:UNSET move
1 Error:Single Word Phrase
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:Unary
1 Error:Modifier Attachment
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(NX wir)
		(SIMPX
			(SIMPX ich hatte mich auch informiert)
			[01;36m(KOORD[00m
				(KON und)[01;36m)[00m
			[01;31m(SIMPX[00m
				(VF das)
				(LK ist)
				[01;36m(MF[00m
					[01;31m(MF[00m
						(ADVX immer)
						(ADVX noch)
						[01;33m(ADVX[00m (ADVX so)[01;31m)[00m
					[01;31m(NF[00m
						[01;31m(PX[00m
							[01;31m(PX[00m
								(ADVX nur) [01;33mADVX)[00m
								(APPRART am)
								(NX wochenende)[01;31m)[00m
							(ADVX nicht)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m)
		(SIMPX aber wir mussen ja auch sowieso nicht am wochenende fliegen)))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['ADVX', 'ADVX', 'ADVX', 'NF'], 'mover info': [('NF', (13, 17))], 'old_family': ['VF', 'LK', 'MF', 'NF'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('PDS', 'VAFIN', 'ADV', 'ADV', 'ADV', 'ADV', 'APPRART', 'NN', 'PTKNEG'), 'start right siblings': [], 'end left siblings': ['ADVX', 'ADVX', 'ADVX'], 'auto preterminal span': (8, 17), 'movers': ['NF'], 'old_parent': 'SIMPX', 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(NX wir)
		(SIMPX
			(SIMPX ich hatte mich auch informiert)
			[01;36m(KOORD[00m
				(KON und)[01;36m)[00m
			[01;31m(SIMPX[00m
				(VF das)
				(LK ist)
				(MF
					(ADVX immer)
					(ADVX noch)
					[01;33m(ADVX[00m (ADVX so)
					[01;31m(NF[00m
						[01;31m(PX[00m
							[01;31m(PX[00m
								(ADVX nur) [01;33mADVX)[00m
								(APPRART am)
								(NX wochenende)[01;31m)[00m
							(ADVX nicht)[01;31m)[00m[01;31m)[00m)[01;31m)[00m)
		(SIMPX aber wir mussen ja auch sowieso nicht am wochenende fliegen)))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['SIMPX', 'KOORD', 'SIMPX'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON',), 'right siblings': [(SIMPX (VF (NX (PDS das))) (LK (VXFIN (VAFIN ist))) (MF (ADVX (ADV immer)) (ADVX (ADV noch)) (ADVX (ADV so)) (NF (PX (PX (ADVX (ADV nur)) (APPRART am) (NX (NN wochenende))) (ADVX (PTKNEG nicht))))))], 'left siblings': [(SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VAFIN hatte))) (MF (NX (PRF mich)) (ADVX (ADV auch))) (VC (VXINF (VVPP informiert))))], 'auto preterminal span': (7, 8), 'span': (7, 8), 'parent': 'SIMPX', 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(NX wir)
		(SIMPX
			(SIMPX ich hatte mich auch informiert)
			(KOORD und)
			[01;31m(SIMPX[00m
				(VF das)
				(LK ist)
				(MF
					(ADVX immer)
					(ADVX noch)
					[01;33m(ADVX[00m (ADVX so)
					[01;31m(NF[00m
						[01;31m(PX[00m
							[01;31m(PX[00m
								(ADVX nur) [01;33mADVX)[00m
								(APPRART am)
								(NX wochenende)[01;31m)[00m
							(ADVX nicht)[01;31m)[00m[01;31m)[00m)[01;31m)[00m)
		(SIMPX aber wir mussen ja auch sowieso nicht am wochenende fliegen)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['SIMPX', 'KOORD', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'PRF', 'ADV', 'VVPP', 'KON', 'PDS', 'VAFIN', 'ADV', 'ADV', 'ADV', 'ADV', 'APPRART', 'NN', 'PTKNEG'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (2, 17), 'span': (8, 17), 'left siblings': ['SIMPX', 'KOORD'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(NX wir)
		(SIMPX
			(SIMPX ich hatte mich auch informiert)
			(KOORD und)
			(VF das)
			(LK ist)
			(MF
				(ADVX immer)
				(ADVX noch)
				[01;33m(ADVX[00m (ADVX so)
				[01;31m(NF[00m
					[01;31m(PX[00m
						[01;31m(PX[00m
							(ADVX nur) [01;33mADVX)[00m
							(APPRART am)
							(NX wochenende)[01;31m)[00m
						(ADVX nicht)[01;31m)[00m[01;31m)[00m))
		(SIMPX aber wir mussen ja auch sowieso nicht am wochenende fliegen)))
Step:UNSET remove
{'subtrees': ['ADVX', 'APPRART', 'NX'], 'family': ['PX', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'APPRART', 'NN', 'PTKNEG'), 'right siblings': ['ADVX'], 'parent': 'PX', 'auto preterminal span': (13, 17), 'span': (13, 16), 'left siblings': [], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(NX wir)
		(SIMPX
			(SIMPX ich hatte mich auch informiert)
			(KOORD und)
			(VF das)
			(LK ist)
			(MF
				(ADVX immer)
				(ADVX noch)
				[01;33m(ADVX[00m (ADVX so)
				[01;31m(NF[00m
					[01;31m(PX[00m
						(ADVX nur) [01;33mADVX)[00m
						(APPRART am)
						(NX wochenende)
						(ADVX nicht)[01;31m)[00m[01;31m)[00m))
		(SIMPX aber wir mussen ja auch sowieso nicht am wochenende fliegen)))
Step:Unary
{'subtrees': ['PX'], 'family': ['ADVX', 'ADVX', 'ADVX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'ADV', 'ADV', 'APPRART', 'NN', 'PTKNEG'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (10, 17), 'span': (13, 17), 'left siblings': ['ADVX', 'ADVX', 'ADVX'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(NX wir)
		(SIMPX
			(SIMPX ich hatte mich auch informiert)
			(KOORD und)
			(VF das)
			(LK ist)
			(MF
				(ADVX immer)
				(ADVX noch)
				[01;33m(ADVX[00m (ADVX so)
				[01;31m(PX[00m
					(ADVX nur) [01;33mADVX)[00m
					(APPRART am)
					(NX wochenende)
					(ADVX nicht)[01;31m)[00m))
		(SIMPX aber wir mussen ja auch sowieso nicht am wochenende fliegen)))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'APPRART', 'NX', 'ADVX'], 'family': ['ADVX', 'ADVX', 'ADVX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'ADV', 'ADV', 'APPRART', 'NN', 'PTKNEG'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (10, 17), 'span': (13, 17), 'left siblings': ['ADVX', 'ADVX', 'ADVX'], 'label': 'PX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(NX wir)
		(SIMPX
			(SIMPX ich hatte mich auch informiert)
			(KOORD und)
			(VF das)
			(LK ist)
			(MF
				(ADVX immer)
				(ADVX noch)
				[01;36m(ADVX[00m
					(ADVX so)
					(ADVX nur)[01;36m)[00m
				(APPRART am)
				(NX wochenende)
				(ADVX nicht)))
		(SIMPX aber wir mussen ja auch sowieso nicht am wochenende fliegen)))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'ADVX'], 'family': ['ADVX', 'ADVX', 'ADVX', 'APPRART', 'NX', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV'), 'right siblings': [(APPRART am), (NX (NN wochenende)), (ADVX (PTKNEG nicht))], 'left siblings': [(ADVX (ADV immer)), (ADVX (ADV noch))], 'auto preterminal span': (12, 14), 'span': (12, 14), 'parent': 'MF', 'label': 'ADVX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP ja wir ich hatte mich auch informiert und das ist immer noch so nur am wochenende nicht aber wir mussen ja auch sowieso nicht am wochenende fliegen)

Sentence 81:
0 Initial errors
0 on fringe, 0 iterations

Sentence 82:
0 Initial errors
0 on fringe, 0 iterations

Sentence 83:
0 Initial errors
0 on fringe, 0 iterations

Sentence 84:
0 Initial errors
0 on fringe, 0 iterations

Sentence 85:
2 Initial errors
0 on fringe, 2 iterations
1 Error:UNSET add
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX
			[01;31m(LV[00m
				(SIMPX
					(KOORD und)
					(C was)
					(MF naturlich auch sehr komfortabel)
					(VC ist))[01;31m)[00m
			[01;36m(SIMPX[00m
				(VF es)
				(LK hat)
				(MF eine eigene sauna)[01;36m)[00m)))
Step:UNSET add
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['LV', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'ART', 'ADJA', 'NN'), 'right siblings': [], 'left siblings': [(LV (SIMPX (KOORD (KON und)) (C (NX (PWS was))) (MF (ADVX (ADV naturlich)) (ADVX (ADV auch)) (ADJX (ADVX (ADV sehr)) (ADJD komfortabel))) (VC (VXFIN (VAFIN ist)))))], 'auto preterminal span': (7, 12), 'span': (7, 12), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SIMPX
			[01;31m(LV[00m
				(SIMPX
					(KOORD und)
					(C was)
					(MF naturlich auch sehr komfortabel)
					(VC ist))[01;31m)[00m
			(SIMPX es hat eine eigene sauna))))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['LV', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'PWS', 'ADV', 'ADV', 'ADV', 'ADJD', 'VAFIN', 'PPER', 'VAFIN', 'ART', 'ADJA', 'NN'), 'right siblings': ['SIMPX'], 'parent': 'SIMPX', 'auto preterminal span': (0, 12), 'span': (0, 7), 'left siblings': [], 'label': 'LV', 'classified_type': 'Unary', 'type': 'remove'}
(TOP und was naturlich auch sehr komfortabel ist es hat eine eigene sauna)

Sentence 86:
3 Initial errors
0 on fringe, 2 iterations
2 Error:Different label
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(NX[00m
	(TOP
		(TURN
			(NX und ein hallenbad)
			[01;36m(R[00m [01;31m(SIMPX[00m
				(C wie)
				(MF ich grade)
				(VC sehe)[01;31m)[00m[01;36m)[00m))[01;36m)[00m
Step:Different label
{'family': ['NX', 'R'], 'auto preterminal span': (3, 7), 'span': (3, 7), 'subtrees': ['C', 'MF', 'VC'], 'parent': 'TURN', 'over_word': False, 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'VVFIN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('SIMPX', 'R')}
[01;36m(NX[00m
	(TOP
		(TURN
			(NX und ein hallenbad)
			(R wie ich grade sehe)))[01;36m)[00m
Step:Unary
{'subtrees': ['TURN'], 'family': ['NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'ART', 'NN', 'KOUS', 'PPER', 'ADV', 'VVFIN'), 'right siblings': [], 'left siblings': [], 'auto preterminal span': (0, 7), 'span': (0, 7), 'parent': 'TOP', 'label': 'NX', 'classified_type': 'Unary', 'type': 'add'}
(TOP und ein hallenbad wie ich grade sehe)

Sentence 87:
0 Initial errors
0 on fringe, 0 iterations

Sentence 88:
0 Initial errors
0 on fringe, 0 iterations

Sentence 89:
0 Initial errors
0 on fringe, 0 iterations

Sentence 90:
0 Initial errors
0 on fringe, 0 iterations

Sentence 91:
0 Initial errors
0 on fringe, 0 iterations

Sentence 92:
0 Initial errors
0 on fringe, 0 iterations

Sentence 93:
0 Initial errors
0 on fringe, 0 iterations

Sentence 94:
0 Initial errors
0 on fringe, 0 iterations

Sentence 95:
2 Initial errors
0 on fringe, 2 iterations
1 Error:NP Internal Structure
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX
			(LK denken)
			(MF
				(NX sie)
				(NX sich)
				(ADVX doch)
				(ADVX mal)
				[01;31m(NX[00m
					(NX was)
					[01;31m(NX[00m
						(NN schones)[01;31m)[00m[01;31m)[00m)
			(VC aus))))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['NX', 'NX', 'ADVX', 'ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'PRF', 'ADV', 'ADV', 'PIS', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (1, 7), 'span': (5, 7), 'left siblings': ['NX', 'NX', 'ADVX', 'ADVX'], 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX
			(LK denken)
			(MF
				(NX sie)
				(NX sich)
				(ADVX doch)
				(ADVX mal)
				(NX was)
				[01;31m(NX[00m
					(NN schones)[01;31m)[00m)
			(VC aus))))
Step:Single Word Phrase
{'subtrees': ['NN'], 'family': ['NX', 'NX', 'ADVX', 'ADVX', 'NX', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('PPER', 'PRF', 'ADV', 'ADV', 'PIS', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (1, 7), 'span': (6, 7), 'left siblings': ['NX', 'NX', 'ADVX', 'ADVX', 'NX'], 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP denken sie sich doch mal was schones aus)

Sentence 96:
0 Initial errors
0 on fringe, 0 iterations

Sentence 97:
0 Initial errors
0 on fringe, 0 iterations

Sentence 98:
0 Initial errors
0 on fringe, 0 iterations

Sentence 99:
1 Initial errors
0 on fringe, 1 iterations
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM also)
		(SIMPX bei mir sieht es etwas eng aus)
		(SIMPX
			(VF ich)
			(LK konnte)
			(MF
				(PX
					(PX in der zweiten juniwoche)
					[01;36m(PX[00m
						(PX in der letzten juliwoche)
						(KON oder)
						(PX in der ersten augustwoche)[01;36m)[00m)))))
Step:PP Attachment
{'subtrees': ['PX', 'KON', 'PX'], 'family': ['PX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'ADJA', 'NN', 'KON', 'APPR', 'ART', 'ADJA', 'NN'), 'right siblings': [], 'left siblings': [(PX (APPR in) (NX (ART der) (ADJX (ADJA zweiten)) (NN juniwoche)))], 'auto preterminal span': (15, 24), 'span': (15, 24), 'parent': 'PX', 'label': 'PX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP ja also bei mir sieht es etwas eng aus ich konnte in der zweiten juniwoche in der letzten juliwoche oder in der ersten augustwoche)

Sentence 100:
0 Initial errors
0 on fringe, 0 iterations

Sentence 101:
0 Initial errors
0 on fringe, 0 iterations

Sentence 102:
0 Initial errors
0 on fringe, 0 iterations

Sentence 103:
6 Initial errors
0 on fringe, 4 iterations
2 Error:Different label
2 Error:Different label
1 Error:UNSET add
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX
			(VF ich)
			(LK habe)
			[01;36m(MF[00m
				[01;36m(NX[00m [01;31m(MF[00m
					(NX nix)
					(PX gegen sonntag abend)[01;31m)[00m[01;36m)[00m
				[01;36m(NX[00m [01;31m(VC[00m
					[01;31m(VXINF[00m
						(VVIZU einzuwenden)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m)))
Step:Different label
{'family': ['VF', 'LK', 'NX', 'VC'], 'auto preterminal span': (2, 6), 'span': (2, 6), 'subtrees': ['NX', 'PX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('PIS', 'APPR', 'NN', 'ADV'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('MF', 'NX')}
(TOP
	(TURN
		(SIMPX
			(VF ich)
			(LK habe)
			[01;36m(MF[00m
				(NX nix gegen sonntag abend)
				[01;36m(NX[00m [01;31m(VC[00m
					[01;31m(VXINF[00m
						(VVIZU einzuwenden)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m)))
Step:Different label
{'family': ['VF', 'LK', 'NX', 'NX'], 'auto preterminal span': (6, 7), 'span': (6, 7), 'subtrees': ['VXINF'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('VVIZU',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('VC', 'NX')}
(TOP
	(TURN
		(SIMPX
			(VF ich)
			(LK habe)
			[01;36m(MF[00m
				(NX nix gegen sonntag abend)
				(NX
					[01;31m(VXINF[00m
						(VVIZU einzuwenden)[01;31m)[00m)[01;36m)[00m)))
Step:UNSET add
{'subtrees': ['NX', 'NX'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PIS', 'APPR', 'NN', 'ADV', 'VVIZU'), 'right siblings': [], 'left siblings': [(VF (NX (PPER ich))), (LK (VXFIN (VAFIN habe)))], 'auto preterminal span': (2, 7), 'span': (2, 7), 'parent': 'SIMPX', 'label': 'MF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SIMPX
			(VF ich)
			(LK habe)
			(MF
				(NX nix gegen sonntag abend)
				(NX
					[01;31m(VXINF[00m
						(VVIZU einzuwenden)[01;31m)[00m)))))
Step:Single Word Phrase
{'subtrees': ['VVIZU'], 'family': ['VXINF'], 'over_word': True, 'over words': True, 'auto preterminals': ('VVIZU',), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (6, 7), 'span': (6, 7), 'left siblings': [], 'label': 'VXINF', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP ich habe nix gegen sonntag abend einzuwenden)

Sentence 104:
0 Initial errors
0 on fringe, 0 iterations

Sentence 105:
0 Initial errors
0 on fringe, 0 iterations

Sentence 106:
16 Initial errors
0 on fringe, 14 iterations
2 Error:Single Word Phrase
2 Error:Co-ordination
1 Error:Single Word Phrase
1 Error:Single Word Phrase
1 Error:UNSET add
1 Error:UNSET remove
1 Error:Unary
1 Error:PP Attachment
1 Error:Modifier Attachment
1 Error:Modifier Attachment
1 Error:Unary
1 Error:UNSET remove
1 Error:Modifier Attachment
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		[01;31m(SIMPX[00m
			(LK fahren)
			(MF wir wieder mit dem zug)
			[01;31m(NF[00m
				[01;31m(ADVX[00m
					(ADVX vielleicht)
					(ADVX abends)
					(PX
						(PX so um achtzehn uhr)
						[01;31m(ADVX[00m
							(ADVX so)
							(ADV zirka)[01;31m)[00m)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK muste)
			(MF ich dann noch mal)
			(VC nachkucken)
			[01;36m(DM[00m [01;31m(NF[00m
				[01;31m(ADJX[00m
					(ADJD genau)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m
		[01;31m(PX[00m
			[01;36m(ADVX[00m
				(KON aber)[01;36m)[00m
			[01;36m(PX[00m
				(ADVX so)
				[01;36m(ADVX[00m
					(ADV so)[01;36m)[00m
				[01;31m(PX[00m
					[01;31m(PX[00m
						(APPR um)
						[01;33m(NX[00m (NX den dreh)[01;31m)[00m
					(ADVX rum)[01;31m)[00m[01;36m)[00m[01;31m)[00m [01;33mNX)[00m
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK waren)
			(MF
				(NX wir)
				(PX
					(ADVX so)
					(APPR um)
					[01;36m(PX[00m
						(APPR um)
						(NX halb elf)[01;36m)[00m)
				(PX in hannover)))
		(SIMPX da konnten wir noch was unternehmen)))
Step:Single Word Phrase
{'family': ['DM'], 'auto preterminal span': (21, 22), 'span': (21, 22), 'subtrees': ['ADJD'], 'parent': 'NF', 'over_word': True, 'auto preterminals': ('ADJD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'DM')}
(TOP
	(TURN
		(DM ja)
		[01;31m(SIMPX[00m
			(LK fahren)
			(MF wir wieder mit dem zug)
			[01;31m(NF[00m
				[01;31m(ADVX[00m
					(ADVX vielleicht)
					(ADVX abends)
					(PX
						(PX so um achtzehn uhr)
						[01;31m(ADVX[00m
							(ADVX so)
							(ADV zirka)[01;31m)[00m)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK muste)
			(MF ich dann noch mal)
			(VC nachkucken)
			[01;31m(NF[00m
				(DM
					(ADJD genau))[01;31m)[00m[01;31m)[00m
		[01;31m(PX[00m
			[01;36m(ADVX[00m
				(KON aber)[01;36m)[00m
			[01;36m(PX[00m
				(ADVX so)
				[01;36m(ADVX[00m
					(ADV so)[01;36m)[00m
				[01;31m(PX[00m
					[01;31m(PX[00m
						(APPR um)
						[01;33m(NX[00m (NX den dreh)[01;31m)[00m
					(ADVX rum)[01;31m)[00m[01;36m)[00m[01;31m)[00m [01;33mNX)[00m
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK waren)
			(MF
				(NX wir)
				(PX
					(ADVX so)
					(APPR um)
					[01;36m(PX[00m
						(APPR um)
						(NX halb elf)[01;36m)[00m)
				(PX in hannover)))
		(SIMPX da konnten wir noch was unternehmen)))
Step:Co-ordination
{'new_parent': 'SIMPX', 'new_family': ['LK', 'MF', 'VC', 'NF', 'KON'], 'mover info': [('KON', (22, 23))], 'old_family': ['KON', 'ADVX', 'ADV', 'PX'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'VVFIN', 'PPER', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'ADV', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'VVINF', 'ADJD', 'KON', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'KON', 'ADV', 'VAFIN', 'PPER', 'ADV', 'APPR', 'APPR', 'ADJD', 'CARD', 'APPR', 'NE', 'ADV', 'VMFIN', 'PPER', 'ADV', 'PIS', 'VVINF'), 'start right siblings': ['ADVX', 'ADV', 'PX'], 'end left siblings': ['LK', 'MF', 'VC', 'NF'], 'auto preterminal span': (0, 46), 'movers': ['KON'], 'old_parent': 'PX', 'POS confusion': ('KON', 'KON'), 'end right siblings': [], 'classified_type': 'Co-ordination', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		[01;31m(SIMPX[00m
			(LK fahren)
			(MF wir wieder mit dem zug)
			[01;31m(NF[00m
				[01;31m(ADVX[00m
					(ADVX vielleicht)
					(ADVX abends)
					(PX
						(PX so um achtzehn uhr)
						[01;31m(ADVX[00m
							(ADVX so)
							(ADV zirka)[01;31m)[00m)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK muste)
			(MF ich dann noch mal)
			(VC nachkucken)
			[01;31m(NF[00m
				(DM
					(ADJD genau))[01;31m)[00m
			[01;36m(ADVX[00m
				(KON aber)[01;36m)[00m[01;31m)[00m
		(PX
			(ADVX so)
			[01;36m(ADVX[00m
				(ADV so)[01;36m)[00m
			[01;31m(PX[00m
				[01;31m(PX[00m
					(APPR um)
					[01;33m(NX[00m (NX den dreh)[01;31m)[00m
				(ADVX rum)[01;31m)[00m) [01;33mNX)[00m
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK waren)
			(MF
				(NX wir)
				(PX
					(ADVX so)
					(APPR um)
					[01;36m(PX[00m
						(APPR um)
						(NX halb elf)[01;36m)[00m)
				(PX in hannover)))
		(SIMPX da konnten wir noch was unternehmen)))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['LK', 'MF', 'VC', 'NF', 'ADVX'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON',), 'right siblings': [], 'left siblings': [(LK (VXFIN (VMFIN muste))), (MF (NX (PPER ich)) (ADVX (ADV dann)) (ADVX (ADV noch)) (ADVX (ADV mal))), (VC (VXINF (VVINF nachkucken))), (NF (DM (ADJD genau)))], 'auto preterminal span': (22, 23), 'span': (22, 23), 'parent': 'SIMPX', 'label': 'ADVX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		[01;31m(SIMPX[00m
			(LK fahren)
			(MF wir wieder mit dem zug)
			[01;31m(NF[00m
				[01;31m(ADVX[00m
					(ADVX vielleicht)
					(ADVX abends)
					(PX
						(PX so um achtzehn uhr)
						[01;31m(ADVX[00m
							(ADVX so)
							(ADV zirka)[01;31m)[00m)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK muste)
			(MF ich dann noch mal)
			(VC nachkucken)
			[01;31m(NF[00m
				(DM
					(ADJD genau))[01;31m)[00m
			(ADVX aber)[01;31m)[00m
		(PX
			(ADVX so)
			[01;36m(ADVX[00m
				(ADV so)[01;36m)[00m
			[01;31m(PX[00m
				[01;31m(PX[00m
					(APPR um)
					[01;33m(NX[00m (NX den dreh)[01;31m)[00m
				(ADVX rum)[01;31m)[00m) [01;33mNX)[00m
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK waren)
			(MF
				(NX wir)
				(PX
					(ADVX so)
					(APPR um)
					[01;36m(PX[00m
						(APPR um)
						(NX halb elf)[01;36m)[00m)
				(PX in hannover)))
		(SIMPX da konnten wir noch was unternehmen)))
Step:Single Word Phrase
{'subtrees': ['ADV'], 'family': ['ADVX', 'ADVX', 'PX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADV',), 'right siblings': [(PX (PX (APPR um) (NX (ART den) (NN dreh))) (ADVX (ADV rum)))], 'left siblings': [(ADVX (ADV so))], 'auto preterminal span': (24, 25), 'span': (24, 25), 'parent': 'PX', 'label': 'ADVX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		[01;31m(SIMPX[00m
			(LK fahren)
			(MF wir wieder mit dem zug)
			[01;31m(NF[00m
				[01;31m(ADVX[00m
					(ADVX vielleicht)
					(ADVX abends)
					(PX
						(PX so um achtzehn uhr)
						[01;31m(ADVX[00m
							(ADVX so)
							(ADV zirka)[01;31m)[00m)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK muste)
			(MF ich dann noch mal)
			(VC nachkucken)
			[01;31m(NF[00m
				(DM
					(ADJD genau))[01;31m)[00m
			(ADVX aber)[01;31m)[00m
		(PX
			(ADVX so)
			(ADVX so)
			[01;31m(PX[00m
				[01;31m(PX[00m
					(APPR um)
					[01;33m(NX[00m (NX den dreh)[01;31m)[00m
				(ADVX rum)[01;31m)[00m) [01;33mNX)[00m
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK waren)
			(MF
				(NX wir)
				(PX
					(ADVX so)
					(APPR um)
					[01;36m(PX[00m
						(APPR um)
						(NX halb elf)[01;36m)[00m)
				(PX in hannover)))
		(SIMPX da konnten wir noch was unternehmen)))
Step:UNSET add
{'subtrees': ['APPR', 'NX'], 'family': ['ADVX', 'APPR', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ADJD', 'CARD'), 'right siblings': [], 'left siblings': [(ADVX (ADV so)), (APPR um)], 'auto preterminal span': (35, 38), 'span': (35, 38), 'parent': 'PX', 'label': 'PX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		[01;31m(SIMPX[00m
			(LK fahren)
			(MF wir wieder mit dem zug)
			[01;31m(NF[00m
				[01;31m(ADVX[00m
					(ADVX vielleicht)
					(ADVX abends)
					(PX
						(PX so um achtzehn uhr)
						[01;31m(ADVX[00m
							(ADVX so)
							(ADV zirka)[01;31m)[00m)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK muste)
			(MF ich dann noch mal)
			(VC nachkucken)
			[01;31m(NF[00m
				(DM
					(ADJD genau))[01;31m)[00m
			(ADVX aber)[01;31m)[00m
		(PX
			(ADVX so)
			(ADVX so)
			[01;31m(PX[00m
				[01;31m(PX[00m
					(APPR um)
					[01;33m(NX[00m (NX den dreh)[01;31m)[00m
				(ADVX rum)[01;31m)[00m) [01;33mNX)[00m
		(SIMPX und dann waren wir so um um halb elf in hannover)
		(SIMPX da konnten wir noch was unternehmen)))
Step:UNSET remove
{'subtrees': ['LK', 'MF', 'NF'], 'family': ['DM', 'SIMPX', 'SIMPX', 'PX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'VVFIN', 'PPER', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'ADV', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'VVINF', 'ADJD', 'KON', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'KON', 'ADV', 'VAFIN', 'PPER', 'ADV', 'APPR', 'APPR', 'ADJD', 'CARD', 'APPR', 'NE', 'ADV', 'VMFIN', 'PPER', 'ADV', 'PIS', 'VVINF'), 'right siblings': ['SIMPX', 'PX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 46), 'span': (1, 15), 'left siblings': ['DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(LK fahren)
		(MF wir wieder mit dem zug)
		[01;31m(NF[00m
			[01;31m(ADVX[00m
				(ADVX vielleicht)
				(ADVX abends)
				(PX
					(PX so um achtzehn uhr)
					[01;31m(ADVX[00m
						(ADVX so)
						(ADV zirka)[01;31m)[00m)[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK muste)
			(MF ich dann noch mal)
			(VC nachkucken)
			[01;31m(NF[00m
				(DM
					(ADJD genau))[01;31m)[00m
			(ADVX aber)[01;31m)[00m
		(PX
			(ADVX so)
			(ADVX so)
			[01;31m(PX[00m
				[01;31m(PX[00m
					(APPR um)
					[01;33m(NX[00m (NX den dreh)[01;31m)[00m
				(ADVX rum)[01;31m)[00m) [01;33mNX)[00m
		(SIMPX und dann waren wir so um um halb elf in hannover)
		(SIMPX da konnten wir noch was unternehmen)))
Step:Unary
{'subtrees': ['ADVX', 'ADVX', 'PX'], 'family': ['ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'ADV'), 'right siblings': [], 'parent': 'NF', 'auto preterminal span': (7, 15), 'span': (7, 15), 'left siblings': [], 'label': 'ADVX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(LK fahren)
		(MF wir wieder mit dem zug)
		[01;31m(NF[00m
			(ADVX vielleicht)
			(ADVX abends)
			(PX
				(PX so um achtzehn uhr)
				[01;31m(ADVX[00m
					(ADVX so)
					(ADV zirka)[01;31m)[00m)[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK muste)
			(MF ich dann noch mal)
			(VC nachkucken)
			[01;31m(NF[00m
				(DM
					(ADJD genau))[01;31m)[00m
			(ADVX aber)[01;31m)[00m
		(PX
			(ADVX so)
			(ADVX so)
			[01;31m(PX[00m
				[01;31m(PX[00m
					(APPR um)
					[01;33m(NX[00m (NX den dreh)[01;31m)[00m
				(ADVX rum)[01;31m)[00m) [01;33mNX)[00m
		(SIMPX und dann waren wir so um um halb elf in hannover)
		(SIMPX da konnten wir noch was unternehmen)))
Step:PP Attachment
{'subtrees': ['ADVX', 'ADVX', 'PX'], 'family': ['DM', 'LK', 'MF', 'NF', 'SIMPX', 'PX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'VVFIN', 'PPER', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'ADV', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'VVINF', 'ADJD', 'KON', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'KON', 'ADV', 'VAFIN', 'PPER', 'ADV', 'APPR', 'APPR', 'ADJD', 'CARD', 'APPR', 'NE', 'ADV', 'VMFIN', 'PPER', 'ADV', 'PIS', 'VVINF'), 'right siblings': ['SIMPX', 'PX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 46), 'span': (7, 15), 'left siblings': ['DM', 'LK', 'MF'], 'label': 'NF', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(LK fahren)
		(MF wir wieder mit dem zug)
		(ADVX vielleicht)
		(ADVX abends)
		(PX
			(PX so um achtzehn uhr)
			[01;31m(ADVX[00m
				(ADVX so)
				(ADV zirka)[01;31m)[00m)
		[01;31m(SIMPX[00m
			(LK muste)
			(MF ich dann noch mal)
			(VC nachkucken)
			[01;31m(NF[00m
				(DM
					(ADJD genau))[01;31m)[00m
			(ADVX aber)[01;31m)[00m
		(PX
			(ADVX so)
			(ADVX so)
			[01;31m(PX[00m
				[01;31m(PX[00m
					(APPR um)
					[01;33m(NX[00m (NX den dreh)[01;31m)[00m
				(ADVX rum)[01;31m)[00m) [01;33mNX)[00m
		(SIMPX und dann waren wir so um um halb elf in hannover)
		(SIMPX da konnten wir noch was unternehmen)))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'ADV'], 'family': ['PX', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'APPR', 'CARD', 'NN', 'ADV', 'ADV'), 'right siblings': [], 'parent': 'PX', 'auto preterminal span': (9, 15), 'span': (13, 15), 'left siblings': ['PX'], 'label': 'ADVX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(LK fahren)
		(MF wir wieder mit dem zug)
		(ADVX vielleicht)
		(ADVX abends)
		(PX so um achtzehn uhr so zirka)
		[01;31m(SIMPX[00m
			(LK muste)
			(MF ich dann noch mal)
			(VC nachkucken)
			[01;31m(NF[00m
				(DM
					(ADJD genau))[01;31m)[00m
			(ADVX aber)[01;31m)[00m
		(PX
			(ADVX so)
			(ADVX so)
			[01;31m(PX[00m
				[01;31m(PX[00m
					(APPR um)
					[01;33m(NX[00m (NX den dreh)[01;31m)[00m
				(ADVX rum)[01;31m)[00m) [01;33mNX)[00m
		(SIMPX und dann waren wir so um um halb elf in hannover)
		(SIMPX da konnten wir noch was unternehmen)))
Step:Modifier Attachment
{'subtrees': ['LK', 'MF', 'VC', 'NF', 'ADVX'], 'family': ['DM', 'LK', 'MF', 'ADVX', 'ADVX', 'PX', 'SIMPX', 'PX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'VVFIN', 'PPER', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'ADV', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'VVINF', 'ADJD', 'KON', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'KON', 'ADV', 'VAFIN', 'PPER', 'ADV', 'APPR', 'APPR', 'ADJD', 'CARD', 'APPR', 'NE', 'ADV', 'VMFIN', 'PPER', 'ADV', 'PIS', 'VVINF'), 'right siblings': ['PX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 46), 'span': (15, 23), 'left siblings': ['DM', 'LK', 'MF', 'ADVX', 'ADVX', 'PX'], 'label': 'SIMPX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(LK fahren)
		(MF wir wieder mit dem zug)
		(ADVX vielleicht)
		(ADVX abends)
		(PX so um achtzehn uhr so zirka)
		(LK muste)
		(MF ich dann noch mal)
		(VC nachkucken)
		[01;31m(NF[00m
			(DM
				(ADJD genau))[01;31m)[00m
		(ADVX aber)
		(PX
			(ADVX so)
			(ADVX so)
			[01;31m(PX[00m
				[01;31m(PX[00m
					(APPR um)
					[01;33m(NX[00m (NX den dreh)[01;31m)[00m
				(ADVX rum)[01;31m)[00m) [01;33mNX)[00m
		(SIMPX und dann waren wir so um um halb elf in hannover)
		(SIMPX da konnten wir noch was unternehmen)))
Step:Unary
{'subtrees': ['DM'], 'family': ['DM', 'LK', 'MF', 'ADVX', 'ADVX', 'PX', 'LK', 'MF', 'VC', 'NF', 'ADVX', 'PX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'VVFIN', 'PPER', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'ADV', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'VVINF', 'ADJD', 'KON', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'KON', 'ADV', 'VAFIN', 'PPER', 'ADV', 'APPR', 'APPR', 'ADJD', 'CARD', 'APPR', 'NE', 'ADV', 'VMFIN', 'PPER', 'ADV', 'PIS', 'VVINF'), 'right siblings': ['ADVX', 'PX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 46), 'span': (21, 22), 'left siblings': ['DM', 'LK', 'MF', 'ADVX', 'ADVX', 'PX', 'LK', 'MF', 'VC'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(LK fahren)
		(MF wir wieder mit dem zug)
		(ADVX vielleicht)
		(ADVX abends)
		(PX so um achtzehn uhr so zirka)
		(LK muste)
		(MF ich dann noch mal)
		(VC nachkucken)
		(DM genau)
		(ADVX aber)
		(PX
			(ADVX so)
			(ADVX so)
			[01;31m(PX[00m
				[01;31m(PX[00m
					(APPR um)
					[01;33m(NX[00m (NX den dreh)[01;31m)[00m
				(ADVX rum)[01;31m)[00m) [01;33mNX)[00m
		(SIMPX und dann waren wir so um um halb elf in hannover)
		(SIMPX da konnten wir noch was unternehmen)))
Step:UNSET remove
{'subtrees': ['APPR', 'NX'], 'family': ['PX', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NN', 'ADV'), 'right siblings': ['ADVX'], 'parent': 'PX', 'auto preterminal span': (25, 29), 'span': (25, 28), 'left siblings': [], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(LK fahren)
		(MF wir wieder mit dem zug)
		(ADVX vielleicht)
		(ADVX abends)
		(PX so um achtzehn uhr so zirka)
		(LK muste)
		(MF ich dann noch mal)
		(VC nachkucken)
		(DM genau)
		(ADVX aber)
		(PX
			(ADVX so)
			(ADVX so)
			[01;31m(PX[00m
				(APPR um)
				[01;36m(NX[00m
					(NX den dreh)
					(ADVX rum)[01;36m)[00m[01;31m)[00m)
		(SIMPX und dann waren wir so um um halb elf in hannover)
		(SIMPX da konnten wir noch was unternehmen)))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADVX'], 'family': ['APPR', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'ADV'), 'right siblings': [], 'left siblings': [(APPR um)], 'auto preterminal span': (26, 29), 'span': (26, 29), 'parent': 'PX', 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(LK fahren)
		(MF wir wieder mit dem zug)
		(ADVX vielleicht)
		(ADVX abends)
		(PX so um achtzehn uhr so zirka)
		(LK muste)
		(MF ich dann noch mal)
		(VC nachkucken)
		(DM genau)
		(ADVX aber)
		(PX
			(ADVX so)
			(ADVX so)
			[01;31m(PX[00m
				(APPR um)
				(NX den dreh rum)[01;31m)[00m)
		(SIMPX und dann waren wir so um um halb elf in hannover)
		(SIMPX da konnten wir noch was unternehmen)))
Step:UNSET remove
{'subtrees': ['APPR', 'NX'], 'family': ['ADVX', 'ADVX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'APPR', 'ART', 'NN', 'ADV'), 'right siblings': [], 'parent': 'PX', 'auto preterminal span': (23, 29), 'span': (25, 29), 'left siblings': ['ADVX', 'ADVX'], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ja fahren wir wieder mit dem zug vielleicht abends so um achtzehn uhr so zirka muste ich dann noch mal nachkucken genau aber so so um den dreh rum und dann waren wir so um um halb elf in hannover da konnten wir noch was unternehmen)

Sentence 107:
0 Initial errors
0 on fringe, 0 iterations

Sentence 108:
0 Initial errors
0 on fringe, 0 iterations

Sentence 109:
0 Initial errors
0 on fringe, 0 iterations

Sentence 110:
0 Initial errors
0 on fringe, 0 iterations

Sentence 111:
0 Initial errors
0 on fringe, 0 iterations

Sentence 112:
0 Initial errors
0 on fringe, 0 iterations

Sentence 113:
0 Initial errors
0 on fringe, 0 iterations

Sentence 114:
0 Initial errors
0 on fringe, 0 iterations

Sentence 115:
0 Initial errors
0 on fringe, 0 iterations

Sentence 116:
0 Initial errors
0 on fringe, 0 iterations

Sentence 117:
0 Initial errors
0 on fringe, 0 iterations

Sentence 118:
0 Initial errors
0 on fringe, 0 iterations

Sentence 119:
0 Initial errors
0 on fringe, 0 iterations

Sentence 120:
1 Initial errors
0 on fringe, 1 iterations
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(NX[00m
			(NX anderthalb tage)
			(PX nach hannover)[01;31m)[00m
		(DM genau)))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['NX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'NN', 'APPR', 'NE', 'ITJ'), 'right siblings': ['DM'], 'parent': 'TURN', 'auto preterminal span': (0, 5), 'span': (0, 4), 'left siblings': [], 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP anderthalb tage nach hannover genau)

Sentence 121:
14 Initial errors
0 on fringe, 7 iterations
5 Error:NP Attachment
3 Error:NP Attachment
2 Error:Single Word Phrase
1 Error:PP Attachment
1 Error:Unary
1 Error:Single Word Phrase
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM also)
		(SIMPX ich denke wir sollten es einfach mal ausprobieren)
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(VF wir)
			(LK hatten)
			(VC gesagt)
			(NF
				(SIMPX
					(VF anderthalb tage)
					(LK fahren)
					[01;31m(MF[00m [01;33m(MF[00m
						[01;36m(MF[00m
							(NX wir)
							(PX nach hannover)[01;36m)[00m
						[01;31m(PX[00m [01;33m(PX[00m
							(APPRART im)
							[01;31m(NX[00m [01;33m(NX[00m
								(NX zeitraum)
								[01;31m(NX[00m
									[01;31m(NX[00m
										(NX januar) [01;33mNX)[00m
										(NX februar)
										(NX marz)[01;31m)[00m [01;33mPX) MF)[00m
									[01;36m(ADVX[00m [01;36m(NF[00m [01;31m(NX[00m
										(CARD achtundneunzig)[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))[01;31m)[00m))
Step:NP Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'NX'], 'mover info': [('NX', (24, 25))], 'old_family': ['NX', 'NX'], 'start left siblings': ['NX'], 'auto preterminals': ('CARD', 'NN', 'VVFIN', 'PPER', 'APPR', 'NE', 'APPRART', 'NN', 'NN', 'NN', 'NN', 'CARD'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (13, 25), 'movers': ['NX'], 'old_parent': 'NX', 'POS confusion': ('CARD', 'CARD'), 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM also)
		(SIMPX ich denke wir sollten es einfach mal ausprobieren)
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(VF wir)
			(LK hatten)
			(VC gesagt)
			(NF
				(SIMPX
					(VF anderthalb tage)
					(LK fahren)
					(MF
						[01;36m(MF[00m
							(NX wir)
							(PX nach hannover)[01;36m)[00m
						(PX
							(APPRART im)
							[01;31m(NX[00m [01;33m(NX[00m
								(NX zeitraum)
								[01;31m(NX[00m
									(NX januar) [01;33mNX)[00m
									(NX februar)
									(NX marz)[01;31m)[00m[01;31m)[00m))
					[01;36m(ADVX[00m [01;36m(NF[00m [01;31m(NX[00m
						(CARD achtundneunzig)[01;31m)[00m[01;36m)[00m[01;36m)[00m))[01;31m)[00m))
Step:NP Attachment
{'new_parent': 'PX', 'new_family': ['APPRART', 'NX', 'NX', 'NX'], 'mover info': [('NX', (22, 23)), ('NX', (23, 24))], 'old_family': ['NX', 'NX', 'NX'], 'start left siblings': ['NX'], 'auto preterminals': ('APPRART', 'NN', 'NN', 'NN', 'NN'), 'start right siblings': [], 'end left siblings': ['APPRART', 'NX'], 'auto preterminal span': (19, 24), 'movers': ['NX', 'NX'], 'old_parent': 'NX', 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM also)
		(SIMPX ich denke wir sollten es einfach mal ausprobieren)
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(VF wir)
			(LK hatten)
			(VC gesagt)
			(NF
				(SIMPX
					(VF anderthalb tage)
					(LK fahren)
					(MF
						[01;36m(MF[00m
							(NX wir)
							(PX nach hannover)[01;36m)[00m
						(PX im zeitraum januar februar marz))
					[01;36m(ADVX[00m [01;36m(NF[00m [01;31m(NX[00m
						(CARD achtundneunzig)[01;31m)[00m[01;36m)[00m[01;36m)[00m))[01;31m)[00m))
Step:Single Word Phrase
{'family': ['VF', 'LK', 'MF', 'NF'], 'auto preterminal span': (24, 25), 'span': (24, 25), 'subtrees': ['CARD'], 'parent': 'SIMPX', 'over_word': True, 'auto preterminals': ('CARD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('NX', 'NF')}
(TOP
	(TURN
		(DM also)
		(SIMPX ich denke wir sollten es einfach mal ausprobieren)
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(VF wir)
			(LK hatten)
			(VC gesagt)
			(NF
				(SIMPX
					(VF anderthalb tage)
					(LK fahren)
					(MF
						[01;36m(MF[00m
							(NX wir)
							(PX nach hannover)[01;36m)[00m
						(PX im zeitraum januar februar marz))
					[01;36m(ADVX[00m
						(NF
							(CARD achtundneunzig))[01;36m)[00m))[01;31m)[00m))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['MF', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'APPR', 'NE'), 'right siblings': [(PX (APPRART im) (NX (NX (NN zeitraum)) (NX (NN januar))) (NX (NN februar)) (NX (NN marz)))], 'left siblings': [], 'auto preterminal span': (16, 19), 'span': (16, 19), 'parent': 'MF', 'label': 'MF', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		(SIMPX ich denke wir sollten es einfach mal ausprobieren)
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(VF wir)
			(LK hatten)
			(VC gesagt)
			(NF
				(SIMPX
					(VF anderthalb tage)
					(LK fahren)
					(MF wir nach hannover im zeitraum januar februar marz)
					[01;36m(ADVX[00m
						(NF
							(CARD achtundneunzig))[01;36m)[00m))[01;31m)[00m))
Step:Unary
{'subtrees': ['NF'], 'family': ['VF', 'LK', 'MF', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD',), 'right siblings': [], 'left siblings': [(VF (NX (ADJX (CARD anderthalb)) (NN tage))), (LK (VXFIN (VVFIN fahren))), (MF (MF (NX (PPER wir)) (PX (APPR nach) (NX (NE hannover)))) (PX (APPRART im) (NX (NX (NN zeitraum)) (NX (NN januar))) (NX (NN februar)) (NX (NN marz))))], 'auto preterminal span': (24, 25), 'span': (24, 25), 'parent': 'SIMPX', 'label': 'ADVX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		(SIMPX ich denke wir sollten es einfach mal ausprobieren)
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(VF wir)
			(LK hatten)
			(VC gesagt)
			(NF anderthalb tage fahren wir nach hannover im zeitraum januar februar marz achtundneunzig)[01;31m)[00m))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['KOORD', 'VF', 'LK', 'VC', 'NF'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON', 'PPER', 'VAFIN', 'VVPP', 'CARD', 'NN', 'VVFIN', 'PPER', 'APPR', 'NE', 'APPRART', 'NN', 'NN', 'NN', 'NN', 'CARD'), 'right siblings': ['VF', 'LK', 'VC', 'NF'], 'parent': 'SIMPX', 'auto preterminal span': (9, 25), 'span': (9, 10), 'left siblings': [], 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX ich denke wir sollten es einfach mal ausprobieren)
		[01;31m(SIMPX[00m
			(KON und)
			(VF wir)
			(LK hatten)
			(VC gesagt)
			(NF anderthalb tage fahren wir nach hannover im zeitraum januar februar marz achtundneunzig)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['KON', 'VF', 'LK', 'VC', 'NF'], 'family': ['DM', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPER', 'VVFIN', 'PPER', 'VMFIN', 'PPER', 'ADV', 'ADV', 'VVINF', 'KON', 'PPER', 'VAFIN', 'VVPP', 'CARD', 'NN', 'VVFIN', 'PPER', 'APPR', 'NE', 'APPRART', 'NN', 'NN', 'NN', 'NN', 'CARD'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 25), 'span': (9, 25), 'left siblings': ['DM', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP also ich denke wir sollten es einfach mal ausprobieren und wir hatten gesagt anderthalb tage fahren wir nach hannover im zeitraum januar februar marz achtundneunzig)

Sentence 122:
0 Initial errors
0 on fringe, 0 iterations

Sentence 123:
0 Initial errors
0 on fringe, 0 iterations

Sentence 124:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX
			(VF wir)
			(LK konnten)
			(MF
				[01;31m(PX[00m
					(ADVX gleich)
					[01;36m(PX[00m
						(APPR zu)
						(NX beginn des januar)[01;36m)[00m[01;31m)[00m)
			(VC versuchen)
			(NF einen termin zu finden))))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['ADVX', 'PX'], 'mover info': [('ADVX', (2, 3))], 'old_family': ['ADVX', 'APPR', 'NX'], 'start left siblings': [], 'auto preterminals': ('ADV', 'APPR', 'NN', 'ART', 'NN'), 'start right siblings': ['APPR', 'NX'], 'end left siblings': [], 'auto preterminal span': (2, 7), 'movers': ['ADVX'], 'old_parent': 'PX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['PX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP wir konnten gleich zu beginn des januar versuchen einen termin zu finden)

Sentence 125:
0 Initial errors
0 on fringe, 0 iterations

Sentence 126:
0 Initial errors
0 on fringe, 0 iterations

Sentence 127:
0 Initial errors
0 on fringe, 0 iterations

Sentence 128:
0 Initial errors
0 on fringe, 0 iterations

Sentence 129:
16 Initial errors
0 on fringe, 10 iterations
3 Error:NP Attachment
2 Error:Single Word Phrase
2 Error:Different label
2 Error:Single Word Phrase
1 Error:Unary
1 Error:PP Attachment
2 Error:NP Attachment
1 Error:PP Attachment
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX
			[01;36m(VXINF[00m
				[01;36m(VC[00m
					(VF
						[01;31m(NX[00m
							(NN siebenundzwanzigster)[01;31m)[00m)[01;36m)[00m[01;36m)[00m
			(LK konnte)
			[01;31m(MF[00m [01;33m(MF[00m
				(NX ich)
				(ADVX naturlich)
				[01;31m(PX[00m [01;33m(PX[00m
					(APPR nach)
					[01;31m(NX[00m
						(NX meinem zahnarzttermin) [01;33mPX) MF)[00m
						[01;36m(C[00m [01;36m(NX[00m [01;31m(R[00m [01;33m(R (NF[00m
							(C der)
							(MF
								[01;31m(PX[00m
									(APPR um)
									(NX acht uhr)[01;31m)[00m)
							(VC stattfindet)[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
				(ADVX dann)[01;31m)[00m
			[01;36m(ADVX[00m [01;31m(VC[00m
				(PTKVZ weg)[01;31m)[00m[01;36m)[00m))) [01;33mNF) R)[00m
Step:NP Attachment
{'new_parent': 'PX', 'new_family': ['APPR', 'NX', 'NX'], 'mover info': [('NX', (5, 7))], 'old_family': ['NX', 'R'], 'start left siblings': [], 'auto preterminals': ('APPR', 'PPOSAT', 'NN', 'PRELS', 'APPR', 'CARD', 'NN', 'VVFIN'), 'start right siblings': ['R'], 'end left siblings': ['APPR'], 'auto preterminal span': (4, 12), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': ['NX'], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'ADVX'}
(TOP
	(TURN
		(SIMPX
			[01;36m(VXINF[00m
				[01;36m(VC[00m
					(VF
						[01;31m(NX[00m
							(NN siebenundzwanzigster)[01;31m)[00m)[01;36m)[00m[01;36m)[00m
			(LK konnte)
			[01;31m(MF[00m [01;33m(MF[00m
				(NX ich)
				(ADVX naturlich)
				[01;31m(PX[00m
					(PX nach meinem zahnarzttermin) [01;33mMF)[00m
					[01;36m(C[00m
						(NX [01;33m(R (NF[00m
							[01;31m(R[00m
								(C der)
								(MF
									[01;31m(PX[00m
										(APPR um)
										(NX acht uhr)[01;31m)[00m)
								(VC stattfindet)[01;31m)[00m)[01;36m)[00m[01;31m)[00m
				(ADVX dann)[01;31m)[00m
			[01;36m(ADVX[00m [01;31m(VC[00m
				(PTKVZ weg)[01;31m)[00m[01;36m)[00m))) [01;33mNF) R)[00m
Step:Single Word Phrase
{'family': ['VC'], 'auto preterminal span': (0, 1), 'span': (0, 1), 'subtrees': ['NN'], 'parent': 'VF', 'over_word': True, 'auto preterminals': ('NN',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('NX', 'VC')}
(TOP
	(TURN
		(SIMPX
			[01;36m(VXINF[00m
				(VF
					(VC
						(NN siebenundzwanzigster)))[01;36m)[00m
			(LK konnte)
			[01;31m(MF[00m [01;33m(MF[00m
				(NX ich)
				(ADVX naturlich)
				[01;31m(PX[00m
					(PX nach meinem zahnarzttermin) [01;33mMF)[00m
					[01;36m(C[00m
						(NX [01;33m(R (NF[00m
							[01;31m(R[00m
								(C der)
								(MF
									[01;31m(PX[00m
										(APPR um)
										(NX acht uhr)[01;31m)[00m)
								(VC stattfindet)[01;31m)[00m)[01;36m)[00m[01;31m)[00m
				(ADVX dann)[01;31m)[00m
			[01;36m(ADVX[00m [01;31m(VC[00m
				(PTKVZ weg)[01;31m)[00m[01;36m)[00m))) [01;33mNF) R)[00m
Step:Different label
{'family': ['C'], 'auto preterminal span': (7, 12), 'span': (7, 12), 'subtrees': ['C', 'MF', 'VC'], 'parent': 'NX', 'over_word': False, 'auto preterminals': ('PRELS', 'APPR', 'CARD', 'NN', 'VVFIN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('R', 'C')}
(TOP
	(TURN
		(SIMPX
			[01;36m(VXINF[00m
				(VF
					(VC
						(NN siebenundzwanzigster)))[01;36m)[00m
			(LK konnte)
			[01;31m(MF[00m [01;33m(MF[00m
				(NX ich)
				(ADVX naturlich)
				[01;31m(PX[00m
					(PX nach meinem zahnarzttermin) [01;33mMF)[00m
					(NX [01;33m(R (NF[00m
						(C
							(C der)
							(MF
								[01;31m(PX[00m
									(APPR um)
									(NX acht uhr)[01;31m)[00m)
							(VC stattfindet)))[01;31m)[00m
				(ADVX dann)[01;31m)[00m
			[01;36m(ADVX[00m [01;31m(VC[00m
				(PTKVZ weg)[01;31m)[00m[01;36m)[00m))) [01;33mNF) R)[00m
Step:Single Word Phrase
{'family': ['VF', 'LK', 'MF', 'ADVX'], 'auto preterminal span': (13, 14), 'span': (13, 14), 'subtrees': ['PTKVZ'], 'parent': 'SIMPX', 'over_word': True, 'auto preterminals': ('PTKVZ',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VC', 'ADVX')}
(TOP
	(TURN
		(SIMPX
			[01;36m(VXINF[00m
				(VF
					(VC
						(NN siebenundzwanzigster)))[01;36m)[00m
			(LK konnte)
			[01;31m(MF[00m [01;33m(MF[00m
				(NX ich)
				(ADVX naturlich)
				[01;31m(PX[00m
					(PX nach meinem zahnarzttermin) [01;33mMF)[00m
					(NX [01;33m(R (NF[00m
						(C
							(C der)
							(MF
								[01;31m(PX[00m
									(APPR um)
									(NX acht uhr)[01;31m)[00m)
							(VC stattfindet)))[01;31m)[00m
				(ADVX dann)[01;31m)[00m
			(ADVX weg)))) [01;33mNF) R)[00m
Step:Unary
{'subtrees': ['VF'], 'family': ['VXINF', 'LK', 'MF', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN',), 'right siblings': [(LK (VXFIN (VVFIN konnte))), (MF (NX (PPER ich)) (ADVX (ADV naturlich)) (PX (PX (APPR nach) (NX (PPOSAT meinem) (NN zahnarzttermin))) (NX (C (C (NX (PRELS der))) (MF (PX (APPR um) (NX (ADJX (CARD acht)) (NN uhr)))) (VC (VXFIN (VVFIN stattfindet)))))) (ADVX (ADV dann))), (ADVX (PTKVZ weg))], 'left siblings': [], 'auto preterminal span': (0, 1), 'span': (0, 1), 'parent': 'SIMPX', 'label': 'VXINF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SIMPX
			(VXINF siebenundzwanzigster)
			(LK konnte)
			[01;31m(MF[00m [01;33m(MF[00m
				(NX ich)
				(ADVX naturlich)
				[01;31m(PX[00m
					(PX nach meinem zahnarzttermin) [01;33mMF)[00m
					(NX [01;33m(R (NF[00m
						(C
							(C der)
							(MF
								[01;31m(PX[00m
									(APPR um)
									(NX acht uhr)[01;31m)[00m)
							(VC stattfindet)))[01;31m)[00m
				(ADVX dann)[01;31m)[00m
			(ADVX weg)))) [01;33mNF) R)[00m
Step:PP Attachment
{'subtrees': ['NX', 'ADVX', 'PX', 'ADVX'], 'family': ['VXINF', 'LK', 'MF', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'VVFIN', 'PPER', 'ADV', 'APPR', 'PPOSAT', 'NN', 'PRELS', 'APPR', 'CARD', 'NN', 'VVFIN', 'ADV', 'PTKVZ'), 'right siblings': ['ADVX'], 'parent': 'SIMPX', 'auto preterminal span': (0, 14), 'span': (2, 13), 'left siblings': ['VXINF', 'LK'], 'label': 'MF', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX
			(VXINF siebenundzwanzigster)
			(LK konnte)
			[01;33m(MF[00m (NX ich)
			(ADVX naturlich)
			[01;31m(PX[00m
				(PX nach meinem zahnarzttermin) [01;33mMF)[00m
				(NX [01;33m(R (NF[00m
					(C
						(C der)
						(MF
							[01;31m(PX[00m
								(APPR um)
								(NX acht uhr)[01;31m)[00m)
						(VC stattfindet)))[01;31m)[00m
			(ADVX dann)
			(ADVX weg)))) [01;33mNF) R)[00m
Step:NP Attachment
{'new_parent': 'SIMPX', 'new_family': ['VXINF', 'LK', 'NX', 'ADVX', 'PX', 'NX', 'ADVX', 'ADVX'], 'mover info': [('NX', (7, 12))], 'old_family': ['PX', 'NX'], 'start left siblings': ['PX'], 'auto preterminals': ('NN', 'VVFIN', 'PPER', 'ADV', 'APPR', 'PPOSAT', 'NN', 'PRELS', 'APPR', 'CARD', 'NN', 'VVFIN', 'ADV', 'PTKVZ'), 'start right siblings': [], 'end left siblings': ['VXINF', 'LK', 'NX', 'ADVX', 'PX'], 'auto preterminal span': (0, 14), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'PX', 'added and moved': True, 'end right siblings': ['ADVX', 'ADVX'], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'NF'}
(TOP
	(TURN
		(SIMPX
			(VXINF siebenundzwanzigster)
			(LK konnte)
			[01;36m(MF[00m
				(NX ich)
				(ADVX naturlich)
				(PX nach meinem zahnarzttermin)[01;36m)[00m
			[01;36m(NF[00m
				(R
					(NX
						(C
							(C der)
							(MF
								[01;31m(PX[00m
									(APPR um)
									(NX acht uhr)[01;31m)[00m)
							(VC stattfindet)))
					(ADVX dann)
					(ADVX weg))[01;36m)[00m)))
Step:PP Attachment
{'subtrees': ['NX', 'ADVX', 'PX'], 'family': ['VXINF', 'LK', 'MF', 'R'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV', 'APPR', 'PPOSAT', 'NN'), 'right siblings': [(R (NX (C (C (NX (PRELS der))) (MF (PX (APPR um) (NX (ADJX (CARD acht)) (NN uhr)))) (VC (VXFIN (VVFIN stattfindet))))) (ADVX (ADV dann)) (ADVX (PTKVZ weg)))], 'left siblings': [(VXINF (VF (VC (NN siebenundzwanzigster)))), (LK (VXFIN (VVFIN konnte)))], 'auto preterminal span': (2, 7), 'span': (2, 7), 'parent': 'SIMPX', 'label': 'MF', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(SIMPX
			(VXINF siebenundzwanzigster)
			(LK konnte)
			(MF ich naturlich nach meinem zahnarzttermin)
			[01;36m(NF[00m
				(R
					(NX
						(C
							(C der)
							(MF
								[01;31m(PX[00m
									(APPR um)
									(NX acht uhr)[01;31m)[00m)
							(VC stattfindet)))
					(ADVX dann)
					(ADVX weg))[01;36m)[00m)))
Step:Unary
{'subtrees': ['R'], 'family': ['VXINF', 'LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PRELS', 'APPR', 'CARD', 'NN', 'VVFIN', 'ADV', 'PTKVZ'), 'right siblings': [], 'left siblings': [(VXINF (VF (VC (NN siebenundzwanzigster)))), (LK (VXFIN (VVFIN konnte))), (MF (NX (PPER ich)) (ADVX (ADV naturlich)) (PX (APPR nach) (NX (PPOSAT meinem) (NN zahnarzttermin))))], 'auto preterminal span': (7, 14), 'span': (7, 14), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SIMPX
			(VXINF siebenundzwanzigster)
			(LK konnte)
			(MF ich naturlich nach meinem zahnarzttermin)
			(NF
				(R
					(NX
						(C
							(C der)
							(MF
								[01;31m(PX[00m
									(APPR um)
									(NX acht uhr)[01;31m)[00m)
							(VC stattfindet)))
					(ADVX dann)
					(ADVX weg))))))
Step:Unary
{'subtrees': ['APPR', 'NX'], 'family': ['PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'CARD', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (8, 11), 'span': (8, 11), 'left siblings': [], 'label': 'PX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP siebenundzwanzigster konnte ich naturlich nach meinem zahnarzttermin der um acht uhr stattfindet dann weg)

Sentence 130:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Different label
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(NX[00m
	(TOP
		(TURN
			[01;31m(PX[00m
				(NX acht uhr morgens)
				(PX zum zahnarzt)[01;31m)[00m))[01;36m)[00m
Step:Different label
{'family': ['NX'], 'auto preterminal span': (0, 5), 'span': (0, 5), 'subtrees': ['NX', 'PX'], 'parent': 'TURN', 'over_word': False, 'auto preterminals': ('CARD', 'NN', 'ADV', 'APPRART', 'NN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('PX', 'NX')}
(TOP acht uhr morgens zum zahnarzt)

Sentence 131:
0 Initial errors
0 on fringe, 0 iterations

Sentence 132:
0 Initial errors
0 on fringe, 0 iterations

Sentence 133:
0 Initial errors
0 on fringe, 0 iterations

Sentence 134:
4 Initial errors
0 on fringe, 2 iterations
3 Error:UNSET move
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX
			(LK wird)
			[01;36m(MF[00m
				[01;36m(ADJX[00m
					[01;31m(MF[00m
						(ADJX
							(ADJD knapp))[01;31m)[00m
					[01;31m(NF[00m
						(PX
							(APPR ab)
							(NX zehn uhr))[01;31m)[00m[01;36m)[00m[01;36m)[00m)))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['ADJX', 'NF'], 'mover info': [('NF', (2, 5))], 'old_family': ['LK', 'MF', 'NF'], 'start left siblings': ['LK', 'MF'], 'auto preterminals': ('VAFIN', 'ADJD', 'APPR', 'CARD', 'NN'), 'start right siblings': [], 'end left siblings': ['ADJX'], 'auto preterminal span': (0, 5), 'adding node already present': False, 'movers': ['NF'], 'old_parent': 'SIMPX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'ADJX'}
(TOP
	(TURN
		(SIMPX
			(LK wird)
			(ADJX
				(MF
					(ADJX knapp)
					[01;31m(NF[00m
						(PX
							(APPR ab)
							(NX zehn uhr))[01;31m)[00m)))))
Step:Unary
{'subtrees': ['PX'], 'family': ['ADJX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJD', 'APPR', 'CARD', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (1, 5), 'span': (2, 5), 'left siblings': ['ADJX'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP wird knapp ab zehn uhr)

Sentence 135:
5 Initial errors
0 on fringe, 4 iterations
2 Error:NP Attachment
1 Error:UNSET add
1 Error:UNSET remove
1 Error:NP Internal Structure
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(NX
			(ADVX knapp)
			[01;36m(NX[00m
				(ADJX zehn)
				(NN uhr)[01;36m)[00m)
		[01;31m(NX[00m
			[01;36m(NX[00m
				[01;36m(NX[00m
					(NX elf)
					(NX zwolf)[01;36m)[00m
				(NX eins)[01;36m)[00m
			(NX zwei)[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK sind)
			(MF wir um drei uhr da)[01;31m)[00m))
Step:NP Attachment
{'new_parent': 'SIMPX', 'new_family': ['NX', 'NX', 'LK', 'MF'], 'mover info': [('NX', (5, 6)), ('NX', (6, 7))], 'old_family': ['NX', 'NX', 'NX', 'NX'], 'start left siblings': ['NX', 'NX'], 'auto preterminals': ('ADV', 'CARD', 'NN', 'CARD', 'CARD', 'CARD', 'CARD', 'VAFIN', 'PPER', 'APPR', 'CARD', 'NN', 'ADV'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 13), 'movers': ['NX', 'NX'], 'old_parent': 'NX', 'end right siblings': ['LK', 'MF'], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(NX
			(ADVX knapp)
			[01;36m(NX[00m
				(ADJX zehn)
				(NN uhr)[01;36m)[00m)
		[01;33m(NX[00m (NX elf zwolf)
		[01;31m(SIMPX[00m
			(NX eins) [01;33mNX)[00m
			(NX zwei)
			(LK sind)
			(MF wir um drei uhr da)[01;31m)[00m))
Step:UNSET add
{'subtrees': ['ADJX', 'NN'], 'family': ['ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'NN'), 'right siblings': [], 'left siblings': [(ADVX (ADV knapp))], 'auto preterminal span': (1, 3), 'span': (1, 3), 'parent': 'NX', 'label': 'NX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(NX knapp zehn uhr)
		[01;33m(NX[00m (NX elf zwolf)
		[01;31m(SIMPX[00m
			(NX eins) [01;33mNX)[00m
			(NX zwei)
			(LK sind)
			(MF wir um drei uhr da)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['NX', 'NX', 'LK', 'MF'], 'family': ['NX', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'CARD', 'NN', 'CARD', 'CARD', 'CARD', 'CARD', 'VAFIN', 'PPER', 'APPR', 'CARD', 'NN', 'ADV'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 13), 'span': (5, 13), 'left siblings': ['NX', 'NX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(NX knapp zehn uhr)
		[01;36m(NX[00m
			(NX elf zwolf)
			(NX eins)[01;36m)[00m
		(NX zwei)
		(LK sind)
		(MF wir um drei uhr da)))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['NX', 'NX', 'NX', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'CARD', 'CARD'), 'right siblings': [(NX (CARD zwei)), (LK (VXFIN (VAFIN sind))), (MF (NX (PPER wir)) (PX (APPR um) (NX (ADJX (CARD drei)) (NN uhr))) (ADVX (ADV da)))], 'left siblings': [(NX (ADVX (ADV knapp)) (NX (ADJX (CARD zehn)) (NN uhr)))], 'auto preterminal span': (3, 6), 'span': (3, 6), 'parent': 'TURN', 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'add'}
(TOP knapp zehn uhr elf zwolf eins zwei sind wir um drei uhr da)

Sentence 136:
5 Initial errors
0 on fringe, 4 iterations
2 Error:Different label
1 Error:UNSET remove
1 Error:Single Word Phrase
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			(LK genugt)
			[01;36m(C[00m [01;31m(MF[00m
				[01;31m(NX[00m
					(PDS das)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m
		[01;31m(NX[00m
			(NX ein halber tag)
			(ADVX dann)
			(ADVX noch)[01;31m)[00m))
Step:Different label
{'family': ['LK', 'C'], 'auto preterminal span': (1, 2), 'span': (1, 2), 'subtrees': ['NX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('PDS',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('MF', 'C')}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			(LK genugt)
			(C
				[01;31m(NX[00m
					(PDS das)[01;31m)[00m)[01;31m)[00m
		[01;31m(NX[00m
			(NX ein halber tag)
			(ADVX dann)
			(ADVX noch)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['LK', 'C'], 'family': ['SIMPX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PDS', 'ART', 'ADJA', 'NN', 'ADV', 'ADV'), 'right siblings': ['NX'], 'parent': 'TURN', 'auto preterminal span': (0, 7), 'span': (0, 2), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(LK genugt)
		(C
			[01;31m(NX[00m
				(PDS das)[01;31m)[00m)
		[01;31m(NX[00m
			(NX ein halber tag)
			(ADVX dann)
			(ADVX noch)[01;31m)[00m))
Step:Single Word Phrase
{'subtrees': ['PDS'], 'family': ['NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('PDS',), 'right siblings': [], 'parent': 'C', 'auto preterminal span': (1, 2), 'span': (1, 2), 'left siblings': [], 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(LK genugt)
		(C das)
		[01;31m(NX[00m
			(NX ein halber tag)
			(ADVX dann)
			(ADVX noch)[01;31m)[00m))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADVX', 'ADVX'], 'family': ['LK', 'C', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PDS', 'ART', 'ADJA', 'NN', 'ADV', 'ADV'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 7), 'span': (2, 7), 'left siblings': ['LK', 'C'], 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP genugt das ein halber tag dann noch)

Sentence 137:
7 Initial errors
0 on fringe, 5 iterations
2 Error:Different label
2 Error:UNSET move
1 Error:Clause Attachment
1 Error:Single Word Phrase
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(VF das)
				(LK muste)[01;36m)[00m
			[01;36m(DM[00m [01;31m(MF[00m
				(ADVX
					(ADV also))[01;31m)[00m[01;36m)[00m[01;31m)[00m
		[01;36m(SIMPX[00m
			(SIMPX fur den ersten halben tag muste das eigentlich reichen)
			(DM also)
			(NX die)
			(SIMPX dann quetschen wir die termine ein bischen zusammen)[01;36m)[00m
		(DM also)
		(SIMPX da mussen die leute jetzt auch mal etwas variabel sein)
		(SIMPX
			(VF ich)
			(LK meine)
			[01;31m(MF[00m
				[01;31m(ADJX[00m
					(ADJD flexibel)[01;31m)[00m[01;31m)[00m)))
Step:Different label
{'family': ['VF', 'LK', 'DM'], 'auto preterminal span': (2, 3), 'span': (2, 3), 'subtrees': ['ADVX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('ADV',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('MF', 'DM')}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(VF das)
				(LK muste)[01;36m)[00m
			(DM also)[01;31m)[00m
		[01;36m(SIMPX[00m
			(SIMPX fur den ersten halben tag muste das eigentlich reichen)
			(DM also)
			(NX die)
			(SIMPX dann quetschen wir die termine ein bischen zusammen)[01;36m)[00m
		(DM also)
		(SIMPX da mussen die leute jetzt auch mal etwas variabel sein)
		(SIMPX
			(VF ich)
			(LK meine)
			[01;31m(MF[00m
				[01;31m(ADJX[00m
					(ADJD flexibel)[01;31m)[00m[01;31m)[00m)))
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['SIMPX', 'DM', 'SIMPX', 'DM', 'NX', 'SIMPX', 'DM', 'SIMPX', 'SIMPX'], 'mover info': [('DM', (2, 3))], 'old_family': ['VF', 'LK', 'DM'], 'start left siblings': ['VF', 'LK'], 'auto preterminals': ('PDS', 'VMFIN', 'ADV', 'APPR', 'ART', 'ADJA', 'ADJA', 'NN', 'VMFIN', 'PDS', 'ADV', 'VVINF', 'ADV', 'PDS', 'ADV', 'VVFIN', 'PPER', 'ART', 'NN', 'ART', 'PIS', 'PTKVZ', 'ADV', 'ADV', 'VMFIN', 'ART', 'NN', 'ADV', 'ADV', 'ADV', 'ADV', 'ADJD', 'VAINF', 'PPER', 'VVFIN', 'ADJD'), 'start right siblings': [], 'end left siblings': ['SIMPX'], 'auto preterminal span': (0, 36), 'movers': ['DM'], 'old_parent': 'SIMPX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['SIMPX', 'DM', 'NX', 'SIMPX', 'DM', 'SIMPX', 'SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SIMPX das muste)
		(DM also)
		[01;36m(SIMPX[00m
			(SIMPX fur den ersten halben tag muste das eigentlich reichen)
			(DM also)
			(NX die)
			(SIMPX dann quetschen wir die termine ein bischen zusammen)[01;36m)[00m
		(DM also)
		(SIMPX da mussen die leute jetzt auch mal etwas variabel sein)
		(SIMPX
			(VF ich)
			(LK meine)
			[01;31m(MF[00m
				[01;31m(ADJX[00m
					(ADJD flexibel)[01;31m)[00m[01;31m)[00m)))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'DM', 'NX', 'SIMPX'], 'family': ['SIMPX', 'DM', 'SIMPX', 'DM', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'ADJA', 'ADJA', 'NN', 'VMFIN', 'PDS', 'ADV', 'VVINF', 'ADV', 'PDS', 'ADV', 'VVFIN', 'PPER', 'ART', 'NN', 'ART', 'PIS', 'PTKVZ'), 'right siblings': [(DM (ADVX (ADV also))), (SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VMFIN mussen))) (MF (NX (ART die) (NN leute)) (ADVX (ADV jetzt)) (ADVX (ADV auch)) (ADVX (ADV mal)) (ADJX (ADVX (ADV etwas)) (ADJD variabel))) (VC (VXINF (VAINF sein)))), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN meine))) (MF (ADJX (ADJD flexibel))))], 'left siblings': [(SIMPX (VF (NX (PDS das))) (LK (VXFIN (VMFIN muste)))), (DM (ADVX (ADV also)))], 'auto preterminal span': (3, 22), 'span': (3, 22), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(SIMPX das muste)
		(DM also)
		(SIMPX fur den ersten halben tag muste das eigentlich reichen also die dann quetschen wir die termine ein bischen zusammen)
		(DM also)
		(SIMPX da mussen die leute jetzt auch mal etwas variabel sein)
		(SIMPX
			(VF ich)
			(LK meine)
			[01;31m(MF[00m
				[01;31m(ADJX[00m
					(ADJD flexibel)[01;31m)[00m[01;31m)[00m)))
Step:Single Word Phrase
{'subtrees': ['ADJD'], 'family': ['ADJX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADJD',), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (35, 36), 'span': (35, 36), 'left siblings': [], 'label': 'ADJX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX das muste)
		(DM also)
		(SIMPX fur den ersten halben tag muste das eigentlich reichen also die dann quetschen wir die termine ein bischen zusammen)
		(DM also)
		(SIMPX da mussen die leute jetzt auch mal etwas variabel sein)
		(SIMPX
			(VF ich)
			(LK meine)
			[01;31m(MF[00m
				(ADJD flexibel)[01;31m)[00m)))
Step:Single Word Phrase
{'subtrees': ['ADJD'], 'family': ['VF', 'LK', 'MF'], 'over_word': True, 'over words': True, 'auto preterminals': ('PPER', 'VVFIN', 'ADJD'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (33, 36), 'span': (35, 36), 'left siblings': ['VF', 'LK'], 'label': 'MF', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP das muste also fur den ersten halben tag muste das eigentlich reichen also die dann quetschen wir die termine ein bischen zusammen also da mussen die leute jetzt auch mal etwas variabel sein ich meine flexibel)

Sentence 138:
0 Initial errors
0 on fringe, 0 iterations

Sentence 139:
0 Initial errors
0 on fringe, 0 iterations

Sentence 140:
0 Initial errors
0 on fringe, 0 iterations

Sentence 141:
0 Initial errors
0 on fringe, 0 iterations

Sentence 142:
5 Initial errors
0 on fringe, 2 iterations
3 Error:UNSET move
2 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP [01;33m(PX[00m
	(TURN
		[01;36m(PX[00m
			(APPR mit)
			[01;31m(PX[00m
				[01;36m(NX[00m [01;31m(ADVX[00m
					(ADV naturlich)[01;31m)[00m [01;33mPX)[00m[01;36m)[00m
				(PX mit schwimm und dampfbad)[01;31m)[00m[01;36m)[00m
		(PX direkt am hauptbahnhof)
		(SIMPX das hort sich gut an)))
Step:UNSET move
{'new_parent': 'PX', 'new_family': ['APPR', 'ADVX', 'PX'], 'mover info': [('APPR', (0, 1))], 'old_family': ['APPR', 'PX', 'PX', 'SIMPX'], 'start left siblings': [], 'auto preterminals': ('APPR', 'ADV', 'APPR', 'TRUNC', 'KON', 'NN', 'ADV', 'APPRART', 'NN', 'PDS', 'VVFIN', 'PRF', 'ADJD', 'PTKVZ'), 'start right siblings': ['PX', 'PX', 'SIMPX'], 'end left siblings': [], 'auto preterminal span': (0, 14), 'adding node already present': False, 'movers': ['APPR'], 'old_parent': 'TURN', 'POS confusion': ('APPR', 'APPR'), 'added and moved': True, 'end right siblings': ['ADVX', 'PX'], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(PX
			(PX
				(APPR mit)
				[01;36m(NX[00m [01;31m(ADVX[00m
					(ADV naturlich)[01;31m)[00m[01;36m)[00m)
			(PX mit schwimm und dampfbad))
		(PX direkt am hauptbahnhof)
		(SIMPX das hort sich gut an)))
Step:Single Word Phrase
{'family': ['APPR', 'NX'], 'auto preterminal span': (1, 2), 'span': (1, 2), 'subtrees': ['ADV'], 'parent': 'PX', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'NX')}
(TOP mit naturlich mit schwimm und dampfbad direkt am hauptbahnhof das hort sich gut an)

Sentence 143:
5 Initial errors
0 on fringe, 4 iterations
2 Error:Different label
1 Error:Unary
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM also)
		(SIMPX dann wurde ich lieber das einzelzimmer mal vorschlagen)
		(SIMPX
			(KOORD und)
			(C da)
			(FKOORD
				(MVC wir es nicht selber bezahlen)
				(KON und)
				[01;36m(MVCN[00m [01;31m(MVC[00m
					(MF wir schon dann lange im zug)
					(VC gesessen haben)[01;31m)[00m[01;36m)[00m))
		(DM also)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK wurde)
			(MF
				[01;36m(MF[00m
					(NX
						(PPER es))[01;36m)[00m
				[01;36m(DM[00m
					(ADVX
						(ADV also))[01;36m)[00m)[01;31m)[00m
		(SIMPX ich wurde es dann mal machen)))
Step:Different label
{'family': ['MVC', 'KON', 'MVCN'], 'auto preterminal span': (17, 25), 'span': (17, 25), 'subtrees': ['MF', 'VC'], 'parent': 'FKOORD', 'over_word': False, 'auto preterminals': ('PPER', 'ADV', 'ADV', 'ADJD', 'APPRART', 'NN', 'VVPP', 'VAFIN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('MVC', 'MVCN')}
(TOP
	(TURN
		(DM also)
		(SIMPX dann wurde ich lieber das einzelzimmer mal vorschlagen)
		(SIMPX und da wir es nicht selber bezahlen und wir schon dann lange im zug gesessen haben)
		(DM also)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK wurde)
			(MF
				[01;36m(MF[00m
					(NX
						(PPER es))[01;36m)[00m
				[01;36m(DM[00m
					(ADVX
						(ADV also))[01;36m)[00m)[01;31m)[00m
		(SIMPX ich wurde es dann mal machen)))
Step:Unary
{'subtrees': ['NX'], 'family': ['MF', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER',), 'right siblings': [(ADVX (ADV also))], 'left siblings': [], 'auto preterminal span': (28, 29), 'span': (28, 29), 'parent': 'MF', 'label': 'MF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		(SIMPX dann wurde ich lieber das einzelzimmer mal vorschlagen)
		(SIMPX und da wir es nicht selber bezahlen und wir schon dann lange im zug gesessen haben)
		(DM also)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK wurde)
			(MF
				(MF es)
				[01;36m(DM[00m
					(ADVX
						(ADV also))[01;36m)[00m)[01;31m)[00m
		(SIMPX ich wurde es dann mal machen)))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['MF', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV',), 'right siblings': [], 'left siblings': [(MF (NX (PPER es)))], 'auto preterminal span': (29, 30), 'span': (29, 30), 'parent': 'MF', 'label': 'DM', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		(SIMPX dann wurde ich lieber das einzelzimmer mal vorschlagen)
		(SIMPX und da wir es nicht selber bezahlen und wir schon dann lange im zug gesessen haben)
		(DM also)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK wurde)
			(MF es also)[01;31m)[00m
		(SIMPX ich wurde es dann mal machen)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['DM', 'SIMPX', 'SIMPX', 'DM', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'VAFIN', 'PPER', 'ADV', 'ART', 'NN', 'ADV', 'VVINF', 'KON', 'KOUS', 'PPER', 'PPER', 'PTKNEG', 'ADV', 'VVFIN', 'KON', 'PPER', 'ADV', 'ADV', 'ADJD', 'APPRART', 'NN', 'VVPP', 'VAFIN', 'ADV', 'PPER', 'VAFIN', 'PPER', 'ADV', 'PPER', 'VAFIN', 'PPER', 'ADV', 'ADV', 'VVINF'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 36), 'span': (26, 30), 'left siblings': ['DM', 'SIMPX', 'SIMPX', 'DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP also dann wurde ich lieber das einzelzimmer mal vorschlagen und da wir es nicht selber bezahlen und wir schon dann lange im zug gesessen haben also ich wurde es also ich wurde es dann mal machen)

Sentence 144:
5 Initial errors
0 on fringe, 5 iterations
1 Error:Unary
1 Error:Unary
1 Error:Unary
1 Error:UNSET remove
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SIMPX[00m
	(TOP
		(TURN
			(SIMPX ich denke auch)
			[01;31m(DM[00m
				[01;31m(NX[00m
					(PPOSAT mein)
					(NE gott)[01;31m)[00m[01;31m)[00m
			[01;36m(NF[00m
				(SIMPX
					[01;31m(C[00m
						(NX
							(PWS wer))[01;31m)[00m
					(MF hier schon wieder eine nacht)
					(VC opfert))[01;36m)[00m))[01;36m)[00m
Step:Unary
{'subtrees': ['TURN'], 'family': ['SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'PPOSAT', 'NE', 'PWS', 'ADV', 'ADV', 'ADV', 'ART', 'NN', 'VVFIN'), 'right siblings': [], 'left siblings': [], 'auto preterminal span': (0, 12), 'span': (0, 12), 'parent': 'TOP', 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(SIMPX
		(TURN
			(SIMPX ich denke auch)
			[01;31m(DM[00m
				[01;31m(NX[00m
					(PPOSAT mein)
					(NE gott)[01;31m)[00m[01;31m)[00m
			[01;36m(NF[00m
				(SIMPX
					[01;31m(C[00m
						(NX
							(PWS wer))[01;31m)[00m
					(MF hier schon wieder eine nacht)
					(VC opfert))[01;36m)[00m)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SIMPX', 'DM', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PWS', 'ADV', 'ADV', 'ADV', 'ART', 'NN', 'VVFIN'), 'right siblings': [], 'left siblings': [(SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN denke))) (MF (ADVX (ADV auch)))), (DM (NX (PPOSAT mein) (NE gott)))], 'auto preterminal span': (5, 12), 'span': (5, 12), 'parent': 'TURN', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(SIMPX
		(TURN
			(SIMPX ich denke auch)
			[01;31m(DM[00m
				[01;31m(NX[00m
					(PPOSAT mein)
					(NE gott)[01;31m)[00m[01;31m)[00m
			(NF
				(SIMPX
					[01;31m(C[00m
						(NX
							(PWS wer))[01;31m)[00m
					(MF hier schon wieder eine nacht)
					(VC opfert))))))
Step:Unary
{'subtrees': ['NX'], 'family': ['SIMPX', 'DM', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'PPOSAT', 'NE', 'PWS', 'ADV', 'ADV', 'ADV', 'ART', 'NN', 'VVFIN'), 'right siblings': ['NF'], 'parent': 'TURN', 'auto preterminal span': (0, 12), 'span': (3, 5), 'left siblings': ['SIMPX'], 'label': 'DM', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(SIMPX
		(TURN
			(SIMPX ich denke auch)
			[01;31m(NX[00m
				(PPOSAT mein)
				(NE gott)[01;31m)[00m
			(NF
				(SIMPX
					[01;31m(C[00m
						(NX
							(PWS wer))[01;31m)[00m
					(MF hier schon wieder eine nacht)
					(VC opfert))))))
Step:UNSET remove
{'subtrees': ['PPOSAT', 'NE'], 'family': ['SIMPX', 'NX', 'NF'], 'over_word': False, 'over words': True, 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'PPOSAT', 'NE', 'PWS', 'ADV', 'ADV', 'ADV', 'ART', 'NN', 'VVFIN'), 'right siblings': ['NF'], 'parent': 'TURN', 'auto preterminal span': (0, 12), 'span': (3, 5), 'left siblings': ['SIMPX'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(SIMPX
		(TURN
			(SIMPX ich denke auch)
			(PPOSAT mein)
			(NE gott)
			(NF
				(SIMPX
					[01;31m(C[00m
						(NX
							(PWS wer))[01;31m)[00m
					(MF hier schon wieder eine nacht)
					(VC opfert))))))
Step:Unary
{'subtrees': ['NX'], 'family': ['C', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('PWS', 'ADV', 'ADV', 'ADV', 'ART', 'NN', 'VVFIN'), 'right siblings': ['MF', 'VC'], 'parent': 'SIMPX', 'auto preterminal span': (5, 12), 'span': (5, 6), 'left siblings': [], 'label': 'C', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ich denke auch mein gott wer hier schon wieder eine nacht opfert)

Sentence 145:
0 Initial errors
0 on fringe, 0 iterations

Sentence 146:
13 Initial errors
0 on fringe, 9 iterations
2 Error:Single Word Phrase
2 Error:Co-ordination
2 Error:Modifier Attachment
2 Error:Different label
1 Error:Unary
1 Error:Unary
1 Error:Single Word Phrase
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM also)
		[01;31m(NX[00m
			(NX kino)
			[01;33m(ADVX (NX[00m (ADVX nicht)[01;31m)[00m
		[01;31m(NX[00m
			(NX theater) [01;33mNX)[00m
			(ADVX nicht)[01;31m)[00m [01;33mADVX)[00m
		(ADVX dann)
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				(ADVX
					(ADV vielleicht))[01;31m)[00m
			[01;36m(MF[00m
				(NX
					(PPER wir))[01;36m)[00m
			(LK gehen)
			(MF
				(NX wir)
				(ADVX einfach)
				(PX in eine kneipe)
				(APPR nach)
				(ART der)
				[01;36m(NF[00m
					(PX
						(APPR nach)
						(NX dem meeting))[01;36m)[00m)[01;31m)[00m
		[01;36m(SIMPX[00m
			[01;36m(KOORD[00m
				(KON und)[01;36m)[00m
			(DM ja)
			[01;31m(SIMPX[00m
				(VF dann)
				(LK brauchen)
				(MF
					(NX wir)
					(ADVX nicht)
					(ADVX weiter)
					[01;36m(NX[00m [01;31m(ADJX[00m
						(ADJD grosartig)[01;31m)[00m[01;36m)[00m)
				(VC planen)[01;31m)[00m[01;36m)[00m))
Step:Single Word Phrase
{'family': ['NX', 'ADVX', 'ADVX', 'NX'], 'auto preterminal span': (26, 27), 'span': (26, 27), 'subtrees': ['ADJD'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('ADJD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'NX')}
(TOP
	(TURN
		(DM also)
		[01;31m(NX[00m
			(NX kino)
			[01;33m(ADVX (NX[00m (ADVX nicht)[01;31m)[00m
		[01;31m(NX[00m
			(NX theater) [01;33mNX)[00m
			(ADVX nicht)[01;31m)[00m [01;33mADVX)[00m
		(ADVX dann)
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				(ADVX
					(ADV vielleicht))[01;31m)[00m
			[01;36m(MF[00m
				(NX
					(PPER wir))[01;36m)[00m
			(LK gehen)
			(MF
				(NX wir)
				(ADVX einfach)
				(PX in eine kneipe)
				(APPR nach)
				(ART der)
				[01;36m(NF[00m
					(PX
						(APPR nach)
						(NX dem meeting))[01;36m)[00m)[01;31m)[00m
		[01;36m(SIMPX[00m
			[01;36m(KOORD[00m
				(KON und)[01;36m)[00m
			(DM ja)
			[01;31m(SIMPX[00m
				(VF dann)
				(LK brauchen)
				(MF wir nicht weiter grosartig)
				(VC planen)[01;31m)[00m[01;36m)[00m))
Step:Co-ordination
{'new_parent': 'SIMPX', 'new_family': ['KON', 'DM', 'VF', 'LK', 'MF', 'VC'], 'mover info': [('KON', (19, 20)), ('DM', (20, 21))], 'old_family': ['DM', 'NX', 'NX', 'ADVX', 'SIMPX', 'KON', 'DM', 'SIMPX'], 'start left siblings': ['DM', 'NX', 'NX', 'ADVX', 'SIMPX'], 'auto preterminals': ('ADV', 'NN', 'PTKNEG', 'NN', 'PTKNEG', 'ADV', 'ADV', 'PPER', 'VVFIN', 'PPER', 'ADV', 'APPR', 'ART', 'NN', 'APPR', 'ART', 'APPR', 'ART', 'NN', 'KON', 'PTKANT', 'ADV', 'VVFIN', 'PPER', 'PTKNEG', 'ADV', 'ADJD', 'VVINF'), 'start right siblings': ['SIMPX'], 'end left siblings': [], 'auto preterminal span': (0, 28), 'movers': ['KON', 'DM'], 'old_parent': 'TURN', 'end right siblings': ['VF', 'LK', 'MF', 'VC'], 'classified_type': 'Co-ordination', 'type': 'move'}
(TOP
	(TURN
		(DM also)
		[01;31m(NX[00m
			(NX kino)
			[01;33m(ADVX (NX[00m (ADVX nicht)[01;31m)[00m
		[01;31m(NX[00m
			(NX theater) [01;33mNX)[00m
			(ADVX nicht)[01;31m)[00m [01;33mADVX)[00m
		(ADVX dann)
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				(ADVX
					(ADV vielleicht))[01;31m)[00m
			[01;36m(MF[00m
				(NX
					(PPER wir))[01;36m)[00m
			(LK gehen)
			(MF
				(NX wir)
				(ADVX einfach)
				(PX in eine kneipe)
				(APPR nach)
				(ART der)
				[01;36m(NF[00m
					(PX
						(APPR nach)
						(NX dem meeting))[01;36m)[00m)[01;31m)[00m
		(SIMPX
			[01;36m(KOORD[00m
				(KON und)[01;36m)[00m
			(DM ja)
			(VF dann)
			(LK brauchen)
			(MF wir nicht weiter grosartig)
			(VC planen))))
Step:Modifier Attachment
{'new_parent': 'NX', 'new_family': ['ADVX', 'NX', 'ADVX'], 'mover info': [('ADVX', (2, 3))], 'old_family': ['NX', 'ADVX'], 'start left siblings': ['NX'], 'auto preterminals': ('ADV', 'NN', 'PTKNEG', 'NN', 'PTKNEG', 'ADV', 'ADV', 'PPER', 'VVFIN', 'PPER', 'ADV', 'APPR', 'ART', 'NN', 'APPR', 'ART', 'APPR', 'ART', 'NN', 'KON', 'PTKANT', 'ADV', 'VVFIN', 'PPER', 'PTKNEG', 'ADV', 'ADJD', 'VVINF'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 28), 'adding node already present': False, 'movers': ['ADVX'], 'old_parent': 'NX', 'POS confusion': ('PTKNEG', 'PTKNEG'), 'added and moved': True, 'end right siblings': ['NX', 'ADVX'], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'KOORD'}
(TOP
	(TURN
		(DM also)
		(NX kino)
		[01;36m(ADVX[00m [01;31m(NX[00m
			(NX nicht theater)
			(ADVX nicht)[01;31m)[00m[01;36m)[00m
		(ADVX dann)
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				(ADVX
					(ADV vielleicht))[01;31m)[00m
			[01;36m(MF[00m
				(NX
					(PPER wir))[01;36m)[00m
			(LK gehen)
			(MF
				(NX wir)
				(ADVX einfach)
				(PX in eine kneipe)
				(APPR nach)
				(ART der)
				[01;36m(NF[00m
					(PX
						(APPR nach)
						(NX dem meeting))[01;36m)[00m)[01;31m)[00m
		(SIMPX
			[01;36m(KOORD[00m
				(KON und)[01;36m)[00m
			(DM ja)
			(VF dann)
			(LK brauchen)
			(MF wir nicht weiter grosartig)
			(VC planen))))
Step:Different label
{'family': ['DM', 'NX', 'ADVX', 'ADVX', 'SIMPX', 'SIMPX'], 'auto preterminal span': (2, 5), 'span': (2, 5), 'subtrees': ['NX', 'ADVX'], 'parent': 'TURN', 'over_word': False, 'auto preterminals': ('PTKNEG', 'NN', 'PTKNEG'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('NX', 'ADVX')}
(TOP
	(TURN
		(DM also)
		(NX kino)
		(ADVX nicht theater nicht)
		(ADVX dann)
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				(ADVX
					(ADV vielleicht))[01;31m)[00m
			[01;36m(MF[00m
				(NX
					(PPER wir))[01;36m)[00m
			(LK gehen)
			(MF
				(NX wir)
				(ADVX einfach)
				(PX in eine kneipe)
				(APPR nach)
				(ART der)
				[01;36m(NF[00m
					(PX
						(APPR nach)
						(NX dem meeting))[01;36m)[00m)[01;31m)[00m
		(SIMPX
			[01;36m(KOORD[00m
				(KON und)[01;36m)[00m
			(DM ja)
			(VF dann)
			(LK brauchen)
			(MF wir nicht weiter grosartig)
			(VC planen))))
Step:Unary
{'subtrees': ['NX'], 'family': ['VF', 'MF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER',), 'right siblings': [(LK (VXFIN (VVFIN gehen))), (MF (NX (PPER wir)) (ADVX (ADV einfach)) (PX (APPR in) (NX (ART eine) (NN kneipe))) (APPR nach) (ART der) (PX (APPR nach) (NX (ART dem) (NN meeting))))], 'left siblings': [(VF (ADVX (ADV vielleicht)))], 'auto preterminal span': (7, 8), 'span': (7, 8), 'parent': 'SIMPX', 'label': 'MF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		(NX kino)
		(ADVX nicht theater nicht)
		(ADVX dann)
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				(ADVX
					(ADV vielleicht))[01;31m)[00m
			(MF wir)
			(LK gehen)
			(MF
				(NX wir)
				(ADVX einfach)
				(PX in eine kneipe)
				(APPR nach)
				(ART der)
				[01;36m(NF[00m
					(PX
						(APPR nach)
						(NX dem meeting))[01;36m)[00m)[01;31m)[00m
		(SIMPX
			[01;36m(KOORD[00m
				(KON und)[01;36m)[00m
			(DM ja)
			(VF dann)
			(LK brauchen)
			(MF wir nicht weiter grosartig)
			(VC planen))))
Step:Unary
{'subtrees': ['PX'], 'family': ['NX', 'ADVX', 'PX', 'APPR', 'ART', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NN'), 'right siblings': [], 'left siblings': [(NX (PPER wir)), (ADVX (ADV einfach)), (PX (APPR in) (NX (ART eine) (NN kneipe))), (APPR nach), (ART der)], 'auto preterminal span': (16, 19), 'span': (16, 19), 'parent': 'MF', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		(NX kino)
		(ADVX nicht theater nicht)
		(ADVX dann)
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				(ADVX
					(ADV vielleicht))[01;31m)[00m
			(MF wir)
			(LK gehen)
			(MF wir einfach in eine kneipe nach der nach dem meeting)[01;31m)[00m
		(SIMPX
			[01;36m(KOORD[00m
				(KON und)[01;36m)[00m
			(DM ja)
			(VF dann)
			(LK brauchen)
			(MF wir nicht weiter grosartig)
			(VC planen))))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['KOORD', 'DM', 'VF', 'LK', 'MF', 'VC'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON',), 'right siblings': [(DM (PTKANT ja)), (VF (ADVX (ADV dann))), (LK (VXFIN (VVFIN brauchen))), (MF (NX (PPER wir)) (ADVX (PTKNEG nicht)) (ADVX (ADV weiter)) (NX (ADJD grosartig))), (VC (VXINF (VVINF planen)))], 'left siblings': [], 'auto preterminal span': (19, 20), 'span': (19, 20), 'parent': 'SIMPX', 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		(NX kino)
		(ADVX nicht theater nicht)
		(ADVX dann)
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				(ADVX
					(ADV vielleicht))[01;31m)[00m
			(MF wir)
			(LK gehen)
			(MF wir einfach in eine kneipe nach der nach dem meeting)[01;31m)[00m
		(SIMPX und ja dann brauchen wir nicht weiter grosartig planen)))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['VF', 'MF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPER', 'VVFIN', 'PPER', 'ADV', 'APPR', 'ART', 'NN', 'APPR', 'ART', 'APPR', 'ART', 'NN'), 'right siblings': ['MF', 'LK', 'MF'], 'parent': 'SIMPX', 'auto preterminal span': (6, 19), 'span': (6, 7), 'left siblings': [], 'label': 'VF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(NX kino)
		(ADVX nicht theater nicht)
		(ADVX dann)
		[01;31m(SIMPX[00m
			(ADVX vielleicht)
			(MF wir)
			(LK gehen)
			(MF wir einfach in eine kneipe nach der nach dem meeting)[01;31m)[00m
		(SIMPX und ja dann brauchen wir nicht weiter grosartig planen)))
Step:UNSET remove
{'subtrees': ['ADVX', 'MF', 'LK', 'MF'], 'family': ['DM', 'NX', 'ADVX', 'ADVX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'NN', 'PTKNEG', 'NN', 'PTKNEG', 'ADV', 'ADV', 'PPER', 'VVFIN', 'PPER', 'ADV', 'APPR', 'ART', 'NN', 'APPR', 'ART', 'APPR', 'ART', 'NN', 'KON', 'PTKANT', 'ADV', 'VVFIN', 'PPER', 'PTKNEG', 'ADV', 'ADJD', 'VVINF'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 28), 'span': (6, 19), 'left siblings': ['DM', 'NX', 'ADVX', 'ADVX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP also kino nicht theater nicht dann vielleicht wir gehen wir einfach in eine kneipe nach der nach dem meeting und ja dann brauchen wir nicht weiter grosartig planen)

Sentence 147:
0 Initial errors
0 on fringe, 0 iterations

Sentence 148:
0 Initial errors
0 on fringe, 0 iterations

Sentence 149:
0 Initial errors
0 on fringe, 0 iterations

Sentence 150:
0 Initial errors
0 on fringe, 0 iterations

Sentence 151:
0 Initial errors
0 on fringe, 0 iterations

Sentence 152:
0 Initial errors
0 on fringe, 0 iterations

Sentence 153:
0 Initial errors
0 on fringe, 0 iterations

Sentence 154:
0 Initial errors
0 on fringe, 0 iterations

Sentence 155:
0 Initial errors
0 on fringe, 0 iterations

Sentence 156:
0 Initial errors
0 on fringe, 0 iterations

Sentence 157:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX
			(VF ice)
			(LK ist)
			[01;31m(MF[00m
				(ADVX ja)
				(ADJX relativ zugig)[01;31m)[00m
			(NF ab munchen dann))))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'ADJX'], 'family': ['VF', 'LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('NE', 'VAFIN', 'ADV', 'ADV', 'ADJD', 'APPR', 'NE', 'ADV'), 'right siblings': ['NF'], 'parent': 'SIMPX', 'auto preterminal span': (0, 8), 'span': (2, 5), 'left siblings': ['VF', 'LK'], 'label': 'MF', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP ice ist ja relativ zugig ab munchen dann)

Sentence 158:
0 Initial errors
0 on fringe, 0 iterations

Sentence 159:
0 Initial errors
0 on fringe, 0 iterations

Sentence 160:
0 Initial errors
0 on fringe, 0 iterations

Sentence 161:
2 Initial errors
0 on fringe, 1 iterations
2 Error:UNSET move
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM also)
		[01;31m(SIMPX[00m
			(LV ein hotel in hannover fur hundert neunzehn mark)
			[01;36m(SIMPX[00m
				(VF das)
				(LK mus)
				(MF schon eine absteige)
				(VC sein)[01;36m)[00m[01;31m)[00m
		(DM oder)))
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['DM', 'LV', 'SIMPX', 'DM'], 'mover info': [('LV', (1, 9))], 'old_family': ['LV', 'VF', 'LK', 'MF', 'VC'], 'start left siblings': [], 'auto preterminals': ('ADV', 'ART', 'NN', 'APPR', 'NE', 'APPR', 'CARD', 'CARD', 'NN', 'PDS', 'VMFIN', 'ADV', 'ART', 'NN', 'VAINF', 'ITJ'), 'start right siblings': ['VF', 'LK', 'MF', 'VC'], 'end left siblings': ['DM'], 'auto preterminal span': (0, 16), 'movers': ['LV'], 'old_parent': 'SIMPX', 'end right siblings': ['SIMPX', 'DM'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP also ein hotel in hannover fur hundert neunzehn mark das mus schon eine absteige sein oder)

Sentence 162:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Different label
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;36m(ADVX[00m [01;31m(DM[00m
			(ADVX immer)
			(ADVX doch)[01;31m)[00m[01;36m)[00m
		(DM oder)))
Step:Different label
{'family': ['ADVX', 'DM'], 'auto preterminal span': (0, 2), 'span': (0, 2), 'subtrees': ['ADVX', 'ADVX'], 'parent': 'TURN', 'over_word': False, 'auto preterminals': ('ADV', 'ADV'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('DM', 'ADVX')}
(TOP immer doch oder)

Sentence 163:
5 Initial errors
0 on fringe, 1 iterations
5 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SIMPX[00m
	(TOP [01;33m(VF (PX[00m
		(TURN
			(PX vor allem)
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(PX
						(APPR in)
						(NX munchen))[01;31m)[00m [01;33mPX) VF)[00m
				(LK haben)
				(MF wir eh alles)[01;31m)[00m))[01;36m)[00m
Step:PP Attachment
{'new_parent': 'VF', 'new_family': ['PX', 'PX'], 'mover info': [('PX', (0, 2))], 'old_family': ['PX', 'SIMPX'], 'start left siblings': [], 'auto preterminals': ('APPR', 'PIS', 'APPR', 'NE', 'VAFIN', 'PPER', 'ADV', 'PIS'), 'start right siblings': ['SIMPX'], 'end left siblings': [], 'auto preterminal span': (0, 8), 'adding node already present': False, 'movers': ['PX'], 'old_parent': 'TURN', 'added and moved': True, 'end right siblings': ['PX'], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'PX'}
(TOP vor allem in munchen haben wir eh alles)

Sentence 164:
0 Initial errors
0 on fringe, 0 iterations

Sentence 165:
0 Initial errors
0 on fringe, 0 iterations

Sentence 166:
0 Initial errors
0 on fringe, 0 iterations

Sentence 167:
0 Initial errors
0 on fringe, 0 iterations

Sentence 168:
0 Initial errors
0 on fringe, 0 iterations

Sentence 169:
0 Initial errors
0 on fringe, 0 iterations

Sentence 170:
0 Initial errors
0 on fringe, 0 iterations

Sentence 171:
0 Initial errors
0 on fringe, 0 iterations

Sentence 172:
18 Initial errors
0 on fringe, 9 iterations
3 Error:UNSET move
4 Error:VP Attachment
2 Error:Single Word Phrase
2 Error:Clause Attachment
3 Error:Co-ordination
1 Error:Single Word Phrase
1 Error:Unary
1 Error:UNSET add
1 Error:Clause Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP [01;33m(SIMPX[00m
	(TURN
		[01;31m(P[00m
			(SIMPX konnen wir ruhig machen)
			[01;36m(KOORD[00m
				(KON denn)[01;36m)[00m
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					[01;31m(SIMPX[00m
						[01;36m(SIMPX[00m
							(C bis)
							[01;31m(MF[00m [01;33m(MF[00m
								(NX du)
								(ADVX immer)
								[01;31m(PX[00m
									(PX am flughafen) [01;33mMF)[00m
									[01;36m(VC[00m
										[01;36m(VXFIN[00m
											(PROP drausen)[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m [01;33mSIMPX)[00m[01;36m)[00m
						[01;36m(VF[00m [01;36m(NX[00m [01;31m(VC[00m [01;33m(SIMPX[00m
							[01;31m(VXFIN[00m
								(VAFIN bist)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
				(LK ist)
				(MF
					[01;36m(MF[00m
						(ADVX schon)
						(NX die erste stunde)[01;36m)[00m
					(ADVX vorbei))[01;31m)[00m[01;31m)[00m [01;33mSIMPX)[00m
		(SIMPX und mit dem ice ist es bequem)))
Step:UNSET move
{'new_parent': 'VC', 'new_family': ['PROP', 'VXFIN'], 'mover info': [('PROP', (10, 11))], 'old_family': ['PX', 'PROP'], 'start left siblings': ['PX'], 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'PROP', 'VAFIN'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (5, 12), 'movers': ['PROP'], 'old_parent': 'PX', 'POS confusion': ('PROP', 'PROP'), 'end right siblings': ['VXFIN'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP [01;33m(SIMPX[00m
	(TURN
		[01;31m(P[00m
			(SIMPX konnen wir ruhig machen)
			[01;36m(KOORD[00m
				(KON denn)[01;36m)[00m
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				[01;31m(VF[00m
					[01;31m(SIMPX[00m
						(C bis)
						(MF du immer am flughafen)
						[01;31m(VC[00m
							[01;36m(VC[00m
								[01;36m(VXFIN[00m
									(PROP drausen) [01;33mSIMPX) SIMPX)[00m[01;36m)[00m[01;36m)[00m
							[01;36m(VF[00m [01;36m(NX[00m [01;31m(VXFIN[00m [01;33m(SIMPX[00m
								(VAFIN bist)[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
				(LK ist)
				(MF
					[01;36m(MF[00m
						(ADVX schon)
						(NX die erste stunde)[01;36m)[00m
					(ADVX vorbei))[01;31m)[00m[01;31m)[00m [01;33mSIMPX)[00m
		(SIMPX und mit dem ice ist es bequem)))
Step:VP Attachment
{'new_parent': 'VF', 'new_family': ['SIMPX', 'VXFIN'], 'mover info': [('VXFIN', (11, 12))], 'old_family': ['PROP', 'VXFIN'], 'start left siblings': ['PROP'], 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'PROP', 'VAFIN'), 'start right siblings': [], 'end left siblings': ['SIMPX'], 'auto preterminal span': (5, 12), 'movers': ['VXFIN'], 'old_parent': 'VC', 'POS confusion': ('VAFIN', 'VAFIN'), 'end right siblings': [], 'classified_type': 'VP Attachment', 'type': 'move'}
(TOP [01;33m(SIMPX[00m
	(TURN
		[01;31m(P[00m
			(SIMPX konnen wir ruhig machen)
			[01;36m(KOORD[00m
				(KON denn)[01;36m)[00m
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(SIMPX
						(C bis)
						(MF du immer am flughafen)
						[01;36m(VXFIN[00m
							(VC
								(PROP drausen))[01;36m)[00m) [01;33mSIMPX)[00m
					[01;36m(VF[00m [01;36m(NX[00m [01;31m(VXFIN[00m [01;33m(SIMPX[00m
						(VAFIN bist)[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;31m)[00m
				(LK ist)
				(MF
					[01;36m(MF[00m
						(ADVX schon)
						(NX die erste stunde)[01;36m)[00m
					(ADVX vorbei))[01;31m)[00m[01;31m)[00m [01;33mSIMPX)[00m
		(SIMPX und mit dem ice ist es bequem)))
Step:Single Word Phrase
{'family': ['SIMPX', 'NX'], 'auto preterminal span': (11, 12), 'span': (11, 12), 'subtrees': ['VAFIN'], 'parent': 'VF', 'over_word': True, 'auto preterminals': ('VAFIN',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VXFIN', 'NX')}
(TOP [01;33m(SIMPX[00m
	(TURN
		[01;31m(P[00m
			(SIMPX konnen wir ruhig machen)
			[01;36m(KOORD[00m
				(KON denn)[01;36m)[00m
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(SIMPX
						(C bis)
						(MF du immer am flughafen)
						[01;36m(VXFIN[00m
							(VC
								(PROP drausen))[01;36m)[00m) [01;33mSIMPX)[00m
					[01;36m(VF[00m
						(NX [01;33m(SIMPX[00m
							(VAFIN bist))[01;36m)[00m[01;31m)[00m
				(LK ist)
				(MF
					[01;36m(MF[00m
						(ADVX schon)
						(NX die erste stunde)[01;36m)[00m
					(ADVX vorbei))[01;31m)[00m[01;31m)[00m [01;33mSIMPX)[00m
		(SIMPX und mit dem ice ist es bequem)))
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['SIMPX', 'VF', 'LK', 'MF'], 'mover info': [('SIMPX', (5, 11))], 'old_family': ['SIMPX', 'NX'], 'start left siblings': [], 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'PROP', 'VAFIN', 'VAFIN', 'ADV', 'ART', 'ADJA', 'NN', 'ADV'), 'start right siblings': ['NX'], 'end left siblings': [], 'auto preterminal span': (5, 18), 'movers': ['SIMPX'], 'old_parent': 'VF', 'end right siblings': ['VF', 'LK', 'MF'], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP [01;33m(SIMPX[00m
	(TURN
		[01;31m(P[00m
			(SIMPX konnen wir ruhig machen)
			[01;36m(KOORD[00m
				(KON denn)[01;36m)[00m
			[01;31m(SIMPX[00m
				(SIMPX
					(C bis)
					(MF du immer am flughafen)
					[01;36m(VXFIN[00m
						(VC
							(PROP drausen))[01;36m)[00m) [01;33mSIMPX)[00m
				[01;36m(SIMPX[00m
					(VF bist)
					(LK ist)
					(MF
						[01;36m(MF[00m
							(ADVX schon)
							(NX die erste stunde)[01;36m)[00m
						(ADVX vorbei))[01;36m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX und mit dem ice ist es bequem)))
Step:Co-ordination
{'new_parent': 'P', 'new_family': ['SIMPX', 'KON', 'SIMPX', 'SIMPX'], 'mover info': [('SIMPX', (5, 11))], 'old_family': ['SIMPX', 'VF', 'LK', 'MF'], 'start left siblings': [], 'auto preterminals': ('VMFIN', 'PPER', 'ADV', 'VVINF', 'KON', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'PROP', 'VAFIN', 'VAFIN', 'ADV', 'ART', 'ADJA', 'NN', 'ADV'), 'start right siblings': ['VF', 'LK', 'MF'], 'end left siblings': ['SIMPX', 'KON'], 'auto preterminal span': (0, 18), 'adding node already present': False, 'movers': ['SIMPX'], 'old_parent': 'SIMPX', 'added and moved': True, 'end right siblings': ['SIMPX'], 'classified_type': 'Co-ordination', 'type': 'move', 'added label': 'MF'}
(TOP
	(TURN
		[01;31m(P[00m
			(SIMPX
				(SIMPX konnen wir ruhig machen)
				[01;36m(KOORD[00m
					(KON denn)[01;36m)[00m
				(SIMPX
					(C bis)
					(MF du immer am flughafen)
					[01;36m(VXFIN[00m
						(VC
							(PROP drausen))[01;36m)[00m))
			(SIMPX
				(VF bist)
				(LK ist)
				(MF
					[01;36m(MF[00m
						(ADVX schon)
						(NX die erste stunde)[01;36m)[00m
					(ADVX vorbei)))[01;31m)[00m
		(SIMPX und mit dem ice ist es bequem)))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['SIMPX', 'KOORD', 'SIMPX'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON',), 'right siblings': [(SIMPX (C (KOUS bis)) (MF (NX (PPER du)) (ADVX (ADV immer)) (PX (APPRART am) (NX (NN flughafen)))) (VC (PROP drausen)))], 'left siblings': [(SIMPX (LK (VXFIN (VMFIN konnen))) (MF (NX (PPER wir)) (ADVX (ADV ruhig))) (VC (VXINF (VVINF machen))))], 'auto preterminal span': (4, 5), 'span': (4, 5), 'parent': 'SIMPX', 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		[01;31m(P[00m
			(SIMPX
				(SIMPX konnen wir ruhig machen)
				(KOORD denn)
				(SIMPX
					(C bis)
					(MF du immer am flughafen)
					[01;36m(VXFIN[00m
						(VC
							(PROP drausen))[01;36m)[00m))
			(SIMPX
				(VF bist)
				(LK ist)
				(MF
					[01;36m(MF[00m
						(ADVX schon)
						(NX die erste stunde)[01;36m)[00m
					(ADVX vorbei)))[01;31m)[00m
		(SIMPX und mit dem ice ist es bequem)))
Step:Unary
{'subtrees': ['VC'], 'family': ['C', 'MF', 'VXFIN'], 'over_word': False, 'over words': False, 'auto preterminals': ('PROP',), 'right siblings': [], 'left siblings': [(C (KOUS bis)), (MF (NX (PPER du)) (ADVX (ADV immer)) (PX (APPRART am) (NX (NN flughafen))))], 'auto preterminal span': (10, 11), 'span': (10, 11), 'parent': 'SIMPX', 'label': 'VXFIN', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		[01;31m(P[00m
			(SIMPX konnen wir ruhig machen denn bis du immer am flughafen drausen)
			(SIMPX
				(VF bist)
				(LK ist)
				(MF
					[01;36m(MF[00m
						(ADVX schon)
						(NX die erste stunde)[01;36m)[00m
					(ADVX vorbei)))[01;31m)[00m
		(SIMPX und mit dem ice ist es bequem)))
Step:UNSET add
{'subtrees': ['ADVX', 'NX'], 'family': ['MF', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ART', 'ADJA', 'NN'), 'right siblings': [(ADVX (ADV vorbei))], 'left siblings': [], 'auto preterminal span': (13, 17), 'span': (13, 17), 'parent': 'MF', 'label': 'MF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		[01;31m(P[00m
			(SIMPX konnen wir ruhig machen denn bis du immer am flughafen drausen)
			(SIMPX bist ist schon die erste stunde vorbei)[01;31m)[00m
		(SIMPX und mit dem ice ist es bequem)))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['P', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VMFIN', 'PPER', 'ADV', 'VVINF', 'KON', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'PROP', 'VAFIN', 'VAFIN', 'ADV', 'ART', 'ADJA', 'NN', 'ADV', 'KON', 'APPR', 'ART', 'NE', 'VAFIN', 'PPER', 'ADJD'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 25), 'span': (0, 18), 'left siblings': [], 'label': 'P', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP konnen wir ruhig machen denn bis du immer am flughafen drausen bist ist schon die erste stunde vorbei und mit dem ice ist es bequem)

Sentence 173:
8 Initial errors
0 on fringe, 5 iterations
2 Error:Different label
2 Error:Single Word Phrase
2 Error:Different label
1 Error:UNSET remove
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM also)
		[01;31m(SIMPX[00m
			[01;36m(DM[00m [01;31m(VF[00m
				(ADVX
					(ADV also))[01;31m)[00m[01;36m)[00m
			(LK wurden)
			(MF wir)
			(VC sagen)
			(NF
				(SIMPX
					(VF wir)
					(LK konnten)
					[01;36m(NX[00m
						(MF
							[01;31m(ADJX[00m
								[01;36m(ADVX[00m [01;31m(ADJX[00m
									(ADJD stundlich)[01;31m)[00m[01;36m)[00m
								[01;31m(NX[00m
									(NX vier uhr)
									(ADJX dreiundvierzig)[01;31m)[00m[01;31m)[00m)[01;36m)[00m))[01;31m)[00m
		(SIMPX ich wurde sagen acht uhr dreiundvierzig)))
Step:Different label
{'family': ['DM', 'LK', 'MF', 'VC', 'NF'], 'auto preterminal span': (1, 2), 'span': (1, 2), 'subtrees': ['ADVX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('ADV',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('VF', 'DM')}
(TOP
	(TURN
		(DM also)
		[01;31m(SIMPX[00m
			(DM also)
			(LK wurden)
			(MF wir)
			(VC sagen)
			(NF
				(SIMPX
					(VF wir)
					(LK konnten)
					[01;36m(NX[00m
						(MF
							[01;31m(ADJX[00m
								[01;36m(ADVX[00m [01;31m(ADJX[00m
									(ADJD stundlich)[01;31m)[00m[01;36m)[00m
								[01;31m(NX[00m
									(NX vier uhr)
									(ADJX dreiundvierzig)[01;31m)[00m[01;31m)[00m)[01;36m)[00m))[01;31m)[00m
		(SIMPX ich wurde sagen acht uhr dreiundvierzig)))
Step:Single Word Phrase
{'family': ['ADVX', 'NX'], 'auto preterminal span': (7, 8), 'span': (7, 8), 'subtrees': ['ADJD'], 'parent': 'ADJX', 'over_word': True, 'auto preterminals': ('ADJD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'ADVX')}
(TOP
	(TURN
		(DM also)
		[01;31m(SIMPX[00m
			(DM also)
			(LK wurden)
			(MF wir)
			(VC sagen)
			(NF
				(SIMPX
					(VF wir)
					(LK konnten)
					[01;36m(NX[00m
						(MF
							[01;31m(ADJX[00m
								(ADVX stundlich)
								[01;31m(NX[00m
									(NX vier uhr)
									(ADJX dreiundvierzig)[01;31m)[00m[01;31m)[00m)[01;36m)[00m))[01;31m)[00m
		(SIMPX ich wurde sagen acht uhr dreiundvierzig)))
Step:Different label
{'family': ['NX'], 'auto preterminal span': (7, 11), 'span': (7, 11), 'subtrees': ['ADVX', 'NX'], 'parent': 'MF', 'over_word': False, 'auto preterminals': ('ADJD', 'CARD', 'NN', 'CARD'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('ADJX', 'NX')}
(TOP
	(TURN
		(DM also)
		[01;31m(SIMPX[00m
			(DM also)
			(LK wurden)
			(MF wir)
			(VC sagen)
			(NF
				(SIMPX
					(VF wir)
					(LK konnten)
					(MF
						(NX
							(ADVX stundlich)
							[01;31m(NX[00m
								(NX vier uhr)
								(ADJX dreiundvierzig)[01;31m)[00m))))[01;31m)[00m
		(SIMPX ich wurde sagen acht uhr dreiundvierzig)))
Step:UNSET remove
{'subtrees': ['DM', 'LK', 'MF', 'VC', 'NF'], 'family': ['DM', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'VAFIN', 'PPER', 'VVINF', 'PPER', 'VMFIN', 'ADJD', 'CARD', 'NN', 'CARD', 'PPER', 'VAFIN', 'VVINF', 'CARD', 'NN', 'CARD'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 17), 'span': (1, 11), 'left siblings': ['DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(DM also)
		(LK wurden)
		(MF wir)
		(VC sagen)
		(NF
			(SIMPX
				(VF wir)
				(LK konnten)
				(MF
					(NX
						(ADVX stundlich)
						[01;31m(NX[00m
							(NX vier uhr)
							(ADJX dreiundvierzig)[01;31m)[00m))))
		(SIMPX ich wurde sagen acht uhr dreiundvierzig)))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADJX'], 'family': ['ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJD', 'CARD', 'NN', 'CARD'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (7, 11), 'span': (8, 11), 'left siblings': ['ADVX'], 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP also also wurden wir sagen wir konnten stundlich vier uhr dreiundvierzig ich wurde sagen acht uhr dreiundvierzig)

Sentence 174:
0 Initial errors
0 on fringe, 0 iterations

Sentence 175:
0 Initial errors
0 on fringe, 0 iterations

Sentence 176:
0 Initial errors
0 on fringe, 0 iterations

Sentence 177:
0 Initial errors
0 on fringe, 0 iterations

Sentence 178:
1 Initial errors
0 on fringe, 1 iterations
1 Error:NP Internal Structure
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(NX
			[01;31m(NX[00m
				(NX hotel)
				(NX royal)[01;31m)[00m
			(NX schloshotel)
			(KON und)
			(NX hotel amgeorgengarten))))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['NX', 'NX', 'KON', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'NE', 'NE', 'KON', 'NN', 'NE'), 'right siblings': ['NX', 'KON', 'NX'], 'parent': 'NX', 'auto preterminal span': (0, 6), 'span': (0, 2), 'left siblings': [], 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'remove'}
(TOP hotel royal schloshotel und hotel amgeorgengarten)

Sentence 179:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(DM[00m
	(TOP
		(TURN
			[01;31m(NX[00m
				(NE schloshotel)[01;31m)[00m))[01;36m)[00m
Step:Single Word Phrase
{'family': ['DM'], 'auto preterminal span': (0, 1), 'span': (0, 1), 'subtrees': ['NE'], 'parent': 'TURN', 'over_word': True, 'auto preterminals': ('NE',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('NX', 'DM')}
(TOP schloshotel)

Sentence 180:
0 Initial errors
0 on fringe, 0 iterations

Sentence 181:
0 Initial errors
0 on fringe, 0 iterations

Sentence 182:
9 Initial errors
0 on fringe, 7 iterations
2 Error:Different label
2 Error:Clause Attachment
1 Error:PP Attachment
1 Error:UNSET remove
1 Error:Clause Attachment
1 Error:UNSET remove
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX wir konnten mal kucken ob irgendwas im theater lauft)
		[01;31m(SIMPX[00m
			(KOORD aber)
			(VF eigentlich)
			(LK ist)
			[01;31m(MF[00m [01;33m(MF[00m
				(NX das)
				(ADVX doch)[01;31m)[00m
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					[01;36m(NX[00m [01;31m(MF[00m
						(NX eulen)
						(PX nach athen)[01;31m)[00m [01;33mMF)[00m[01;36m)[00m
					(VC tragen)[01;31m)[00m
				[01;36m(NF[00m
					(SIMPX
						(C wenn)
						(FKOORD
							(MVC wir in hannover ins theater gehen)
							(KON und)
							(MVC
								(MF
									(PX in munchen)
									[01;36m(NX[00m
										(NX alles)
										(PX vor der haustur)[01;36m)[00m)
								(VC haben))))[01;36m)[00m[01;31m)[00m[01;31m)[00m
		(DM oder)))
Step:Different label
{'family': ['NX', 'VC'], 'auto preterminal span': (14, 17), 'span': (14, 17), 'subtrees': ['NX', 'PX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('NN', 'APPR', 'NE'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('MF', 'NX')}
(TOP
	(TURN
		(SIMPX wir konnten mal kucken ob irgendwas im theater lauft)
		[01;31m(SIMPX[00m
			(KOORD aber)
			(VF eigentlich)
			(LK ist)
			[01;31m(MF[00m [01;33m(MF[00m
				(NX das)
				(ADVX doch)[01;31m)[00m
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					(NX eulen nach athen) [01;33mMF)[00m
					(VC tragen)[01;31m)[00m
				[01;36m(NF[00m
					(SIMPX
						(C wenn)
						(FKOORD
							(MVC wir in hannover ins theater gehen)
							(KON und)
							(MVC
								(MF
									(PX in munchen)
									[01;36m(NX[00m
										(NX alles)
										(PX vor der haustur)[01;36m)[00m)
								(VC haben))))[01;36m)[00m[01;31m)[00m[01;31m)[00m
		(DM oder)))
Step:Clause Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'ADVX', 'SIMPX'], 'mover info': [('SIMPX', (14, 18))], 'old_family': ['SIMPX', 'SIMPX'], 'start left siblings': [], 'auto preterminals': ('KON', 'ADV', 'VAFIN', 'PDS', 'ADV', 'NN', 'APPR', 'NE', 'VVINF', 'KOUS', 'PPER', 'APPR', 'NE', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPR', 'NE', 'PIS', 'APPR', 'ART', 'NN', 'VAFIN'), 'start right siblings': ['SIMPX'], 'end left siblings': ['NX', 'ADVX'], 'auto preterminal span': (9, 33), 'movers': ['SIMPX'], 'old_parent': 'NF', 'end right siblings': [], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(SIMPX wir konnten mal kucken ob irgendwas im theater lauft)
		[01;31m(SIMPX[00m
			(KOORD aber)
			(VF eigentlich)
			(LK ist)
			[01;31m(MF[00m [01;33m(MF[00m
				(NX das)
				(ADVX doch)
				[01;31m(SIMPX[00m
					(NX eulen nach athen) [01;33mMF)[00m
					(VC tragen)[01;31m)[00m[01;31m)[00m
			(NF
				(SIMPX
					(C wenn)
					(FKOORD
						(MVC wir in hannover ins theater gehen)
						(KON und)
						(MVC
							(MF
								(PX in munchen)
								[01;36m(NX[00m
									(NX alles)
									(PX vor der haustur)[01;36m)[00m)
							(VC haben)))))[01;31m)[00m
		(DM oder)))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['PX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PIS', 'APPR', 'ART', 'NN'), 'right siblings': [], 'left siblings': [(PX (APPR in) (NX (NE munchen)))], 'auto preterminal span': (28, 32), 'span': (28, 32), 'parent': 'MF', 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(SIMPX wir konnten mal kucken ob irgendwas im theater lauft)
		[01;31m(SIMPX[00m
			(KOORD aber)
			(VF eigentlich)
			(LK ist)
			[01;31m(MF[00m [01;33m(MF[00m
				(NX das)
				(ADVX doch)
				[01;31m(SIMPX[00m
					(NX eulen nach athen) [01;33mMF)[00m
					(VC tragen)[01;31m)[00m[01;31m)[00m
			(NF wenn wir in hannover ins theater gehen und in munchen alles vor der haustur haben)[01;31m)[00m
		(DM oder)))
Step:UNSET remove
{'subtrees': ['KOORD', 'VF', 'LK', 'MF', 'NF'], 'family': ['SIMPX', 'SIMPX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VMFIN', 'ADV', 'VVINF', 'KOUS', 'PIS', 'APPRART', 'NN', 'VVFIN', 'KON', 'ADV', 'VAFIN', 'PDS', 'ADV', 'NN', 'APPR', 'NE', 'VVINF', 'KOUS', 'PPER', 'APPR', 'NE', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPR', 'NE', 'PIS', 'APPR', 'ART', 'NN', 'VAFIN', 'ITJ'), 'right siblings': ['DM'], 'parent': 'TURN', 'auto preterminal span': (0, 34), 'span': (9, 33), 'left siblings': ['SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX wir konnten mal kucken ob irgendwas im theater lauft)
		(KOORD aber)
		(VF eigentlich)
		(LK ist)
		[01;31m(MF[00m [01;33m(MF[00m
			(NX das)
			(ADVX doch)
			[01;31m(SIMPX[00m
				(NX eulen nach athen) [01;33mMF)[00m
				(VC tragen)[01;31m)[00m[01;31m)[00m
		(NF wenn wir in hannover ins theater gehen und in munchen alles vor der haustur haben)
		(DM oder)))
Step:Clause Attachment
{'subtrees': ['NX', 'ADVX', 'SIMPX'], 'family': ['SIMPX', 'KOORD', 'VF', 'LK', 'MF', 'NF', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VMFIN', 'ADV', 'VVINF', 'KOUS', 'PIS', 'APPRART', 'NN', 'VVFIN', 'KON', 'ADV', 'VAFIN', 'PDS', 'ADV', 'NN', 'APPR', 'NE', 'VVINF', 'KOUS', 'PPER', 'APPR', 'NE', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPR', 'NE', 'PIS', 'APPR', 'ART', 'NN', 'VAFIN', 'ITJ'), 'right siblings': ['NF', 'DM'], 'parent': 'TURN', 'auto preterminal span': (0, 34), 'span': (12, 18), 'left siblings': ['SIMPX', 'KOORD', 'VF', 'LK'], 'label': 'MF', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX wir konnten mal kucken ob irgendwas im theater lauft)
		(KOORD aber)
		(VF eigentlich)
		(LK ist)
		[01;33m(MF[00m (NX das)
		(ADVX doch)
		[01;31m(SIMPX[00m
			(NX eulen nach athen) [01;33mMF)[00m
			(VC tragen)[01;31m)[00m
		(NF wenn wir in hannover ins theater gehen und in munchen alles vor der haustur haben)
		(DM oder)))
Step:UNSET remove
{'subtrees': ['NX', 'VC'], 'family': ['SIMPX', 'KOORD', 'VF', 'LK', 'NX', 'ADVX', 'SIMPX', 'NF', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VMFIN', 'ADV', 'VVINF', 'KOUS', 'PIS', 'APPRART', 'NN', 'VVFIN', 'KON', 'ADV', 'VAFIN', 'PDS', 'ADV', 'NN', 'APPR', 'NE', 'VVINF', 'KOUS', 'PPER', 'APPR', 'NE', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPR', 'NE', 'PIS', 'APPR', 'ART', 'NN', 'VAFIN', 'ITJ'), 'right siblings': ['NF', 'DM'], 'parent': 'TURN', 'auto preterminal span': (0, 34), 'span': (14, 18), 'left siblings': ['SIMPX', 'KOORD', 'VF', 'LK', 'NX', 'ADVX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX wir konnten mal kucken ob irgendwas im theater lauft)
		(KOORD aber)
		(VF eigentlich)
		(LK ist)
		[01;36m(MF[00m
			(NX das)
			(ADVX doch)
			(NX eulen nach athen)[01;36m)[00m
		(VC tragen)
		(NF wenn wir in hannover ins theater gehen und in munchen alles vor der haustur haben)
		(DM oder)))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADVX', 'NX'], 'family': ['SIMPX', 'KOORD', 'VF', 'LK', 'MF', 'VC', 'NF', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'ADV', 'NN', 'APPR', 'NE'), 'right siblings': [(VC (VXINF (VVINF tragen))), (NF (SIMPX (C (KOUS wenn)) (FKOORD (MVC (MF (NX (PPER wir)) (PX (APPR in) (NX (NE hannover))) (PX (APPRART ins) (NX (NN theater)))) (VC (VXFIN (VVFIN gehen)))) (KON und) (MVC (MF (PX (APPR in) (NX (NE munchen))) (NX (NX (PIS alles)) (PX (APPR vor) (NX (ART der) (NN haustur))))) (VC (VXFIN (VAFIN haben))))))), (DM (ITJ oder))], 'left siblings': [(SIMPX (VF (NX (PPER wir))) (LK (VXFIN (VMFIN konnten))) (MF (ADVX (ADV mal))) (VC (VXINF (VVINF kucken))) (NF (SIMPX (C (KOUS ob)) (MF (NX (PIS irgendwas)) (PX (APPRART im) (NX (NN theater)))) (VC (VXFIN (VVFIN lauft)))))), (KOORD (KON aber)), (VF (ADVX (ADV eigentlich))), (LK (VXFIN (VAFIN ist)))], 'auto preterminal span': (12, 17), 'span': (12, 17), 'parent': 'TURN', 'label': 'MF', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP wir konnten mal kucken ob irgendwas im theater lauft aber eigentlich ist das doch eulen nach athen tragen wenn wir in hannover ins theater gehen und in munchen alles vor der haustur haben oder)

Sentence 183:
0 Initial errors
0 on fringe, 0 iterations

Sentence 184:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Different label
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(ADJX[00m
	(TOP
		(TURN
			[01;31m(ADVX[00m
				(ADVX nicht)
				(SIMPX das ich wuste)[01;31m)[00m))[01;36m)[00m
Step:Different label
{'family': ['ADJX'], 'auto preterminal span': (0, 4), 'span': (0, 4), 'subtrees': ['ADVX', 'SIMPX'], 'parent': 'TURN', 'over_word': False, 'auto preterminals': ('PTKNEG', 'KOUS', 'PPER', 'VVFIN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('ADVX', 'ADJX')}
(TOP nicht das ich wuste)

Sentence 185:
3 Initial errors
0 on fringe, 3 iterations
1 Error:Single Word Phrase
1 Error:Modifier Attachment
1 Error:UNSET add
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(MF
				(ADVX dann)
				(ADVX eben)
				(NX
					[01;31m(ADJX[00m
						(ADJX ein)
						(KON oder)
						[01;33m(NX[00m (ADJX zwei)[01;31m)[00m
					(NN nachte))) [01;33mNX)[00m
			(VC buchen))))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['KOORD', 'MF', 'VC'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON', 'ADV', 'ADV', 'CARD', 'KON', 'CARD', 'NN', 'VVINF'), 'right siblings': ['MF', 'VC'], 'parent': 'SIMPX', 'auto preterminal span': (0, 8), 'span': (0, 1), 'left siblings': [], 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX
			(KON und)
			(MF
				(ADVX dann)
				(ADVX eben)
				(NX
					[01;31m(ADJX[00m
						(ADJX ein)
						(KON oder)
						[01;33m(NX[00m (ADJX zwei)[01;31m)[00m
					(NN nachte))) [01;33mNX)[00m
			(VC buchen))))
Step:Modifier Attachment
{'subtrees': ['ADJX', 'KON', 'ADJX'], 'family': ['ADJX', 'NN'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'KON', 'CARD', 'NN'), 'right siblings': ['NN'], 'parent': 'NX', 'auto preterminal span': (3, 7), 'span': (3, 6), 'left siblings': [], 'label': 'ADJX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX
			(KON und)
			(MF
				(ADVX dann)
				(ADVX eben)
				(NX
					(ADJX ein)
					(KON oder)
					[01;36m(NX[00m
						(ADJX zwei)
						(NN nachte)[01;36m)[00m))
			(VC buchen))))
Step:UNSET add
{'subtrees': ['ADJX', 'NN'], 'family': ['ADJX', 'KON', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'NN'), 'right siblings': [], 'left siblings': [(ADJX (CARD ein)), (KON oder)], 'auto preterminal span': (5, 7), 'span': (5, 7), 'parent': 'NX', 'label': 'NX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP und dann eben ein oder zwei nachte buchen)

Sentence 186:
0 Initial errors
0 on fringe, 0 iterations

Sentence 187:
0 Initial errors
0 on fringe, 0 iterations

Sentence 188:
12 Initial errors
0 on fringe, 9 iterations
3 Error:NP Attachment
2 Error:Clause Attachment
1 Error:PP Attachment
1 Error:Unary
1 Error:Unary
1 Error:Clause Attachment
1 Error:UNSET remove
1 Error:Modifier Attachment
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM gut)
		(ADVX dann)
		[01;31m(SIMPX[00m [01;33m(VF (SIMPX[00m
			(VF dann)
			(LK schlage)
			(MF ich)
			(VC vor)
			[01;33m(VF (NX (NX[00m (NX mitte)
			(APPR [01;33m(PX[00m bis)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					[01;31m(VF[00m
						[01;31m(PX[00m
							(ADVX spatestens) [01;33mPX) NX)[00m
							(APPR bis)
							(NX mitte nachster woche)[01;31m)[00m[01;31m)[00m [01;33mNX) VF) SIMPX) VF)[00m
					[01;36m(SIMPX[00m
						(LK haben)
						(MF wir sie)
						(VC informiert)[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX das muste ja dann auch noch reichen wenn wir erst im august)))
Step:NP Attachment
{'new_parent': 'VF', 'new_family': ['VF', 'LK', 'MF', 'VC', 'NX', 'APPR', 'PX'], 'mover info': [('VF', (2, 3)), ('LK', (3, 4)), ('MF', (4, 5)), ('VC', (5, 6)), ('NX', (6, 7)), ('APPR', (7, 8))], 'old_family': ['VF', 'LK', 'MF', 'VC', 'NX', 'APPR', 'NF'], 'start left siblings': [], 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'PTKVZ', 'NN', 'APPR', 'ADV', 'APPR', 'NN', 'ADJA', 'NN', 'VAFIN', 'PPER', 'PPER', 'VVPP'), 'start right siblings': ['NF'], 'end left siblings': [], 'auto preterminal span': (2, 17), 'adding node already present': False, 'movers': ['VF', 'LK', 'MF', 'VC', 'NX', 'APPR'], 'old_parent': 'SIMPX', 'added and moved': True, 'end right siblings': ['PX'], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'SIMPX'}
(TOP
	(TURN
		(DM gut)
		(ADVX dann)
		[01;31m(SIMPX[00m
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					(SIMPX
						(VF
							(VF dann)
							(LK schlage)
							(MF ich)
							(VC vor)
							[01;36m(NX[00m
								[01;36m(VF[00m
									[01;33m(NX[00m (NX mitte)
									(APPR [01;33m(PX[00m bis)
									[01;31m(PX[00m
										(ADVX spatestens) [01;33mPX) NX)[00m
										(APPR bis)
										(NX mitte nachster woche)[01;31m)[00m[01;36m)[00m[01;36m)[00m))
					[01;36m(SIMPX[00m
						(LK haben)
						(MF wir sie)
						(VC informiert)[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX das muste ja dann auch noch reichen wenn wir erst im august)))
Step:Clause Attachment
{'new_parent': 'NF', 'new_family': ['SIMPX', 'SIMPX'], 'mover info': [('SIMPX', (2, 13))], 'old_family': ['SIMPX', 'LK', 'MF', 'VC'], 'start left siblings': [], 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'PTKVZ', 'NN', 'APPR', 'ADV', 'APPR', 'NN', 'ADJA', 'NN', 'VAFIN', 'PPER', 'PPER', 'VVPP'), 'start right siblings': ['LK', 'MF', 'VC'], 'end left siblings': [], 'auto preterminal span': (2, 17), 'movers': ['SIMPX'], 'old_parent': 'SIMPX', 'end right siblings': ['SIMPX'], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM gut)
		(ADVX dann)
		[01;31m(SIMPX[00m
			[01;31m(NF[00m
				(SIMPX
					(VF
						(VF dann)
						(LK schlage)
						(MF ich)
						(VC vor)
						[01;36m(NX[00m
							[01;36m(VF[00m
								[01;33m(NX[00m (NX mitte)
								(APPR [01;33m(PX[00m bis)
								[01;31m(PX[00m
									(ADVX spatestens) [01;33mPX) NX)[00m
									(APPR bis)
									(NX mitte nachster woche)[01;31m)[00m[01;36m)[00m[01;36m)[00m))
				(SIMPX haben wir sie informiert)[01;31m)[00m[01;31m)[00m
		(SIMPX das muste ja dann auch noch reichen wenn wir erst im august)))
Step:PP Attachment
{'subtrees': ['NX', 'APPR', 'PX'], 'family': ['VF', 'LK', 'MF', 'VC', 'VF'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'APPR', 'ADV', 'APPR', 'NN', 'ADJA', 'NN'), 'right siblings': [], 'left siblings': [(VF (ADVX (ADV dann))), (LK (VXFIN (VVFIN schlage))), (MF (NX (PPER ich))), (VC (PTKVZ vor))], 'auto preterminal span': (6, 13), 'span': (6, 13), 'parent': 'VF', 'label': 'VF', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM gut)
		(ADVX dann)
		[01;31m(SIMPX[00m
			[01;31m(NF[00m
				(SIMPX
					(VF
						(VF dann)
						(LK schlage)
						(MF ich)
						(VC vor)
						[01;36m(NX[00m
							(VF [01;33m(NX[00m
								(NX mitte)
								(APPR [01;33m(PX[00m bis)
								[01;31m(PX[00m
									(ADVX spatestens) [01;33mPX) NX)[00m
									(APPR bis)
									(NX mitte nachster woche)[01;31m)[00m)[01;36m)[00m))
				(SIMPX haben wir sie informiert)[01;31m)[00m[01;31m)[00m
		(SIMPX das muste ja dann auch noch reichen wenn wir erst im august)))
Step:Unary
{'subtrees': ['VF'], 'family': ['VF', 'LK', 'MF', 'VC', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'APPR', 'ADV', 'APPR', 'NN', 'ADJA', 'NN'), 'right siblings': [], 'left siblings': [(VF (ADVX (ADV dann))), (LK (VXFIN (VVFIN schlage))), (MF (NX (PPER ich))), (VC (PTKVZ vor))], 'auto preterminal span': (6, 13), 'span': (6, 13), 'parent': 'VF', 'label': 'NX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM gut)
		(ADVX dann)
		[01;31m(SIMPX[00m
			[01;31m(NF[00m
				(SIMPX
					(VF
						(VF dann)
						(LK schlage)
						(MF ich)
						(VC vor)
						(NX [01;33m(NX[00m
							(VF
								(NX mitte)
								(APPR [01;33m(PX[00m bis)
								[01;31m(PX[00m
									(ADVX spatestens) [01;33mPX) NX)[00m
									(APPR bis)
									(NX mitte nachster woche)[01;31m)[00m))))
				(SIMPX haben wir sie informiert)[01;31m)[00m[01;31m)[00m
		(SIMPX das muste ja dann auch noch reichen wenn wir erst im august)))
Step:Unary
{'subtrees': ['NF'], 'family': ['DM', 'ADVX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'ADV', 'VVFIN', 'PPER', 'PTKVZ', 'NN', 'APPR', 'ADV', 'APPR', 'NN', 'ADJA', 'NN', 'VAFIN', 'PPER', 'PPER', 'VVPP', 'PDS', 'VMFIN', 'ADV', 'ADV', 'ADV', 'ADV', 'VVINF', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 29), 'span': (2, 17), 'left siblings': ['DM', 'ADVX'], 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM gut)
		(ADVX dann)
		[01;31m(NF[00m
			(SIMPX
				(VF
					(VF dann)
					(LK schlage)
					(MF ich)
					(VC vor)
					(NX [01;33m(NX[00m
						(VF
							(NX mitte)
							(APPR [01;33m(PX[00m bis)
							[01;31m(PX[00m
								(ADVX spatestens) [01;33mPX) NX)[00m
								(APPR bis)
								(NX mitte nachster woche)[01;31m)[00m))))
			(SIMPX haben wir sie informiert)[01;31m)[00m
		(SIMPX das muste ja dann auch noch reichen wenn wir erst im august)))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['DM', 'ADVX', 'NF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'ADV', 'VVFIN', 'PPER', 'PTKVZ', 'NN', 'APPR', 'ADV', 'APPR', 'NN', 'ADJA', 'NN', 'VAFIN', 'PPER', 'PPER', 'VVPP', 'PDS', 'VMFIN', 'ADV', 'ADV', 'ADV', 'ADV', 'VVINF', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 29), 'span': (2, 17), 'left siblings': ['DM', 'ADVX'], 'label': 'NF', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM gut)
		(ADVX dann)
		(SIMPX
			(VF
				(VF dann)
				(LK schlage)
				(MF ich)
				(VC vor)
				(NX [01;33m(NX[00m
					(VF
						(NX mitte)
						(APPR [01;33m(PX[00m bis)
						[01;31m(PX[00m
							(ADVX spatestens) [01;33mPX) NX)[00m
							(APPR bis)
							(NX mitte nachster woche)[01;31m)[00m))))
		(SIMPX haben wir sie informiert)
		(SIMPX das muste ja dann auch noch reichen wenn wir erst im august)))
Step:UNSET remove
{'subtrees': ['ADVX', 'APPR', 'NX'], 'family': ['NX', 'APPR', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'APPR', 'ADV', 'APPR', 'NN', 'ADJA', 'NN'), 'right siblings': [], 'parent': 'VF', 'auto preterminal span': (6, 13), 'span': (8, 13), 'left siblings': ['NX', 'APPR'], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM gut)
		(ADVX dann)
		(SIMPX
			(VF
				(VF dann)
				(LK schlage)
				(MF ich)
				(VC vor)
				(NX
					(VF
						[01;36m(NX[00m
							(NX mitte)
							[01;36m(PX[00m
								(APPR bis)
								(ADVX spatestens)[01;36m)[00m[01;36m)[00m
						(APPR bis)
						(NX mitte nachster woche)))))
		(SIMPX haben wir sie informiert)
		(SIMPX das muste ja dann auch noch reichen wenn wir erst im august)))
Step:Modifier Attachment
{'subtrees': ['NX', 'APPR', 'ADVX'], 'family': ['NX', 'APPR', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'APPR', 'ADV'), 'right siblings': [(APPR bis), (NX (NX (NN mitte)) (NX (ADJX (ADJA nachster)) (NN woche)))], 'left siblings': [], 'auto preterminal span': (6, 9), 'span': (6, 9), 'parent': 'VF', 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM gut)
		(ADVX dann)
		(SIMPX
			(VF
				(VF dann)
				(LK schlage)
				(MF ich)
				(VC vor)
				(NX
					(VF
						(NX
							(NX mitte)
							[01;36m(PX[00m
								(APPR bis)
								(ADVX spatestens)[01;36m)[00m)
						(APPR bis)
						(NX mitte nachster woche)))))
		(SIMPX haben wir sie informiert)
		(SIMPX das muste ja dann auch noch reichen wenn wir erst im august)))
Step:Modifier Attachment
{'subtrees': ['APPR', 'ADVX'], 'family': ['NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ADV'), 'right siblings': [], 'left siblings': [(NX (NN mitte))], 'auto preterminal span': (7, 9), 'span': (7, 9), 'parent': 'NX', 'label': 'PX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP gut dann dann schlage ich vor mitte bis spatestens bis mitte nachster woche haben wir sie informiert das muste ja dann auch noch reichen wenn wir erst im august)

Sentence 189:
0 Initial errors
0 on fringe, 0 iterations

Sentence 190:
0 Initial errors
0 on fringe, 0 iterations

Sentence 191:
0 Initial errors
0 on fringe, 0 iterations

Sentence 192:
0 Initial errors
0 on fringe, 0 iterations

Sentence 193:
0 Initial errors
0 on fringe, 0 iterations

Sentence 194:
0 Initial errors
0 on fringe, 0 iterations

Sentence 195:
0 Initial errors
0 on fringe, 0 iterations

Sentence 196:
0 Initial errors
0 on fringe, 0 iterations

Sentence 197:
0 Initial errors
0 on fringe, 0 iterations

Sentence 198:
4 Initial errors
0 on fringe, 4 iterations
1 Error:UNSET add
1 Error:Clause Attachment
1 Error:Unary
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM gut)
		[01;31m(P[00m
			(SIMPX
				(VF dann)
				(LK gibt)
				(MF es auch hervorragende zugverbindungen)
				[01;31m(NF[00m
					(R
						[01;36m(SIMPX[00m
							(C die)
							(MF
								(ADJX
									[01;31m(ADJX[00m
										(ADJD stundlich)[01;31m)[00m
									(PX ab vier uhr dreiundvierzig)))
							(VC bestehen)[01;36m)[00m
						(NF wie ich hier grade lese))[01;31m)[00m)
			(KON denn)
			(SIMPX ich habe den fahrplan vor mir liegen)[01;31m)[00m))
Step:UNSET add
{'subtrees': ['C', 'MF', 'VC'], 'family': ['SIMPX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PRELS', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'VVFIN'), 'right siblings': [(NF (SIMPX (C (KOUS wie)) (MF (NX (PPER ich)) (ADVX (ADV hier)) (ADVX (ADV grade))) (VC (VXFIN (VVFIN lese)))))], 'left siblings': [], 'auto preterminal span': (7, 14), 'span': (7, 14), 'parent': 'R', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM gut)
		[01;31m(P[00m
			(SIMPX
				(VF dann)
				(LK gibt)
				(MF es auch hervorragende zugverbindungen)
				[01;31m(NF[00m
					(R
						(SIMPX
							(C die)
							(MF
								(ADJX
									[01;31m(ADJX[00m
										(ADJD stundlich)[01;31m)[00m
									(PX ab vier uhr dreiundvierzig)))
							(VC bestehen))
						(NF wie ich hier grade lese))[01;31m)[00m)
			(KON denn)
			(SIMPX ich habe den fahrplan vor mir liegen)[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'KON', 'SIMPX'], 'family': ['DM', 'P'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'VVFIN', 'PPER', 'ADV', 'ADJA', 'NN', 'PRELS', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'VVFIN', 'KOUS', 'PPER', 'ADV', 'ADV', 'VVFIN', 'KON', 'PPER', 'VAFIN', 'ART', 'NN', 'APPR', 'PRF', 'VVINF'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 27), 'span': (1, 27), 'left siblings': ['DM'], 'label': 'P', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM gut)
		(SIMPX
			(VF dann)
			(LK gibt)
			(MF es auch hervorragende zugverbindungen)
			[01;31m(NF[00m
				(R
					(SIMPX
						(C die)
						(MF
							(ADJX
								[01;31m(ADJX[00m
									(ADJD stundlich)[01;31m)[00m
								(PX ab vier uhr dreiundvierzig)))
						(VC bestehen))
					(NF wie ich hier grade lese))[01;31m)[00m)
		(KON denn)
		(SIMPX ich habe den fahrplan vor mir liegen)))
Step:Unary
{'subtrees': ['R'], 'family': ['VF', 'LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'ADV', 'ADJA', 'NN', 'PRELS', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'VVFIN', 'KOUS', 'PPER', 'ADV', 'ADV', 'VVFIN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (1, 19), 'span': (7, 19), 'left siblings': ['VF', 'LK', 'MF'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM gut)
		(SIMPX
			(VF dann)
			(LK gibt)
			(MF es auch hervorragende zugverbindungen)
			(R
				(SIMPX
					(C die)
					(MF
						(ADJX
							[01;31m(ADJX[00m
								(ADJD stundlich)[01;31m)[00m
							(PX ab vier uhr dreiundvierzig)))
					(VC bestehen))
				(NF wie ich hier grade lese)))
		(KON denn)
		(SIMPX ich habe den fahrplan vor mir liegen)))
Step:Single Word Phrase
{'subtrees': ['ADJD'], 'family': ['ADJX', 'PX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADJD', 'APPR', 'CARD', 'NN', 'CARD'), 'right siblings': ['PX'], 'parent': 'ADJX', 'auto preterminal span': (8, 13), 'span': (8, 9), 'left siblings': [], 'label': 'ADJX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP gut dann gibt es auch hervorragende zugverbindungen die stundlich ab vier uhr dreiundvierzig bestehen wie ich hier grade lese denn ich habe den fahrplan vor mir liegen)

Sentence 199:
0 Initial errors
0 on fringe, 0 iterations

Sentence 200:
0 Initial errors
0 on fringe, 0 iterations

Sentence 201:
0 Initial errors
0 on fringe, 0 iterations

Sentence 202:
0 Initial errors
0 on fringe, 0 iterations

Sentence 203:
0 Initial errors
0 on fringe, 0 iterations

Sentence 204:
0 Initial errors
0 on fringe, 0 iterations

Sentence 205:
0 Initial errors
0 on fringe, 0 iterations

Sentence 206:
0 Initial errors
0 on fringe, 0 iterations

Sentence 207:
0 Initial errors
0 on fringe, 0 iterations

Sentence 208:
0 Initial errors
0 on fringe, 0 iterations

Sentence 209:
0 Initial errors
0 on fringe, 0 iterations

Sentence 210:
0 Initial errors
0 on fringe, 0 iterations

Sentence 211:
0 Initial errors
0 on fringe, 0 iterations

Sentence 212:
0 Initial errors
0 on fringe, 0 iterations

Sentence 213:
0 Initial errors
0 on fringe, 0 iterations

Sentence 214:
0 Initial errors
0 on fringe, 0 iterations

Sentence 215:
2 Initial errors
0 on fringe, 2 iterations
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		[01;36m(LV[00m
			(SIMPX
				(C wenn)
				(MF ihnen oktober nicht so gut)
				(VC past))[01;36m)[00m
		[01;31m(SIMPX[00m
			(VF da)
			(LK habe)
			(MF ich auch urlaub)
			(NF ende oktober)[01;31m)[00m
		(DM also)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['DM', 'LV', 'SIMPX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'NN', 'PTKNEG', 'ADV', 'ADJD', 'VVFIN'), 'right siblings': [(SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VAFIN habe))) (MF (NX (PPER ich)) (ADVX (ADV auch)) (NX (NN urlaub))) (NF (NX (NX (NN ende)) (NX (NN oktober))))), (DM (ADVX (ADV also)))], 'left siblings': [(DM (PTKANT ja))], 'auto preterminal span': (1, 8), 'span': (1, 8), 'parent': 'TURN', 'label': 'LV', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(LV wenn ihnen oktober nicht so gut past)
		[01;31m(SIMPX[00m
			(VF da)
			(LK habe)
			(MF ich auch urlaub)
			(NF ende oktober)[01;31m)[00m
		(DM also)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'NF'], 'family': ['DM', 'LV', 'SIMPX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'KOUS', 'PPER', 'NN', 'PTKNEG', 'ADV', 'ADJD', 'VVFIN', 'ADV', 'VAFIN', 'PPER', 'ADV', 'NN', 'NN', 'NN', 'ADV'), 'right siblings': ['DM'], 'parent': 'TURN', 'auto preterminal span': (0, 16), 'span': (8, 15), 'left siblings': ['DM', 'LV'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ja wenn ihnen oktober nicht so gut past da habe ich auch urlaub ende oktober also)

Sentence 216:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX
			(LK kommt)
			(MF
				[01;36m(NX[00m
					(ADVX erst)
					[01;31m(NX[00m
						(ART der)
						(NN november)[01;31m)[00m[01;36m)[00m
				(PX in frage)))))
Step:Modifier Attachment
{'new_parent': 'NX', 'new_family': ['ADVX', 'ART', 'NN'], 'mover info': [('ADVX', (1, 2))], 'old_family': ['ADVX', 'NX', 'PX'], 'start left siblings': [], 'auto preterminals': ('ADV', 'ART', 'NN', 'APPR', 'NN'), 'start right siblings': ['NX', 'PX'], 'end left siblings': [], 'auto preterminal span': (1, 6), 'movers': ['ADVX'], 'old_parent': 'MF', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['ART', 'NN'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP kommt erst der november in frage)

Sentence 217:
0 Initial errors
0 on fringe, 0 iterations

Sentence 218:
0 Initial errors
0 on fringe, 0 iterations

Sentence 219:
0 Initial errors
0 on fringe, 0 iterations

Sentence 220:
0 Initial errors
0 on fringe, 0 iterations

Sentence 221:
5 Initial errors
0 on fringe, 3 iterations
2 Error:Different label
2 Error:PP Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX
			(VF ab munchen)
			(LK dauert)
			(MF
				(NX es)
				[01;36m(NX[00m [01;31m(PX[00m
					(ADVX nur)
					(ADVX etwas)
					(APPR uber)
					(NX vier stunden)[01;31m)[00m[01;36m)[00m))
		(SIMPX
			(KOORD und)
			(VF wir)
			(LK konnten)
			(MF ab halb sechs schon)
			(VC losfahren)
			[01;36m(SIMPX[00m
				(NF
					[01;31m(SIMPX[00m
						(C so das)
						(MF wir mittags die geschaftspartner)
						(VC treffen)[01;31m)[00m
					[01;36m(NF[00m
						(PX
							(KON oder)
							(PX am fruhen nachmittag))[01;36m)[00m)[01;36m)[00m)))
Step:Different label
{'family': ['NX', 'NX'], 'auto preterminal span': (4, 9), 'span': (4, 9), 'subtrees': ['ADVX', 'ADVX', 'APPR', 'NX'], 'parent': 'MF', 'over_word': False, 'auto preterminals': ('ADV', 'ADV', 'APPR', 'CARD', 'NN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('PX', 'NX')}
(TOP
	(TURN
		(SIMPX ab munchen dauert es nur etwas uber vier stunden)
		(SIMPX
			(KOORD und)
			(VF wir)
			(LK konnten)
			(MF ab halb sechs schon)
			(VC losfahren)
			[01;36m(SIMPX[00m
				(NF
					[01;31m(SIMPX[00m
						(C so das)
						(MF wir mittags die geschaftspartner)
						(VC treffen)[01;31m)[00m
					[01;36m(NF[00m
						(PX
							(KON oder)
							(PX am fruhen nachmittag))[01;36m)[00m)[01;36m)[00m)))
Step:PP Attachment
{'new_parent': 'SIMPX', 'new_family': ['C', 'MF', 'VC', 'PX'], 'mover info': [('PX', (24, 28))], 'old_family': ['SIMPX', 'PX'], 'start left siblings': ['SIMPX'], 'auto preterminals': ('KOUS', 'KOUS', 'PPER', 'ADV', 'ART', 'NN', 'VVFIN', 'KON', 'APPRART', 'ADJA', 'NN'), 'start right siblings': [], 'end left siblings': ['C', 'MF', 'VC'], 'auto preterminal span': (17, 28), 'movers': ['PX'], 'old_parent': 'NF', 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SIMPX ab munchen dauert es nur etwas uber vier stunden)
		(SIMPX
			(KOORD und)
			(VF wir)
			(LK konnten)
			(MF ab halb sechs schon)
			(VC losfahren)
			(NF
				(SIMPX
					(C so das)
					(MF wir mittags die geschaftspartner)
					(VC treffen)
					[01;36m(NF[00m
						(PX
							(KON oder)
							(PX am fruhen nachmittag))[01;36m)[00m)))))
Step:Unary
{'subtrees': ['PX'], 'family': ['C', 'MF', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'APPRART', 'ADJA', 'NN'), 'right siblings': [], 'left siblings': [(C (KOUS so) (KOUS das)), (MF (NX (PPER wir)) (ADVX (ADV mittags)) (NX (ART die) (NN geschaftspartner))), (VC (VXFIN (VVFIN treffen)))], 'auto preterminal span': (24, 28), 'span': (24, 28), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP ab munchen dauert es nur etwas uber vier stunden und wir konnten ab halb sechs schon losfahren so das wir mittags die geschaftspartner treffen oder am fruhen nachmittag)

Sentence 222:
0 Initial errors
0 on fringe, 0 iterations

Sentence 223:
0 Initial errors
0 on fringe, 0 iterations

Sentence 224:
0 Initial errors
0 on fringe, 0 iterations

Sentence 225:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX
			(LK nehmen)
			[01;31m(MF[00m
				[01;36m(MF[00m
					(NX wir)
					(ADVX dann)
					(ADVX doch)
					(NX das in der mitte)[01;36m)[00m
				(ADVX vielleicht)[01;31m)[00m)
		(SIMPX das ware das zentralhotel)))
Step:Modifier Attachment
{'new_parent': 'SIMPX', 'new_family': ['LK', 'MF', 'ADVX'], 'mover info': [('ADVX', (8, 9))], 'old_family': ['NX', 'ADVX', 'ADVX', 'NX', 'ADVX'], 'start left siblings': ['NX', 'ADVX', 'ADVX', 'NX'], 'auto preterminals': ('VVFIN', 'PPER', 'ADV', 'ADV', 'PDS', 'APPR', 'ART', 'NN', 'ADV'), 'start right siblings': [], 'end left siblings': ['LK', 'MF'], 'auto preterminal span': (0, 9), 'movers': ['ADVX'], 'old_parent': 'MF', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP nehmen wir dann doch das in der mitte vielleicht das ware das zentralhotel)

Sentence 226:
0 Initial errors
0 on fringe, 0 iterations

Sentence 227:
5 Initial errors
0 on fringe, 4 iterations
2 Error:Clause Attachment
1 Error:Unary
1 Error:UNSET add
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SIMPX[00m
	(TOP
		(TURN
			[01;36m(LV[00m
				(SIMPX
					(KOORD und)
					[01;36m(LV[00m
						[01;36m(SIMPX[00m
							(C ob)
							(MF wir am abend noch was)
							(VC unternehmen)[01;36m)[00m[01;36m)[00m)[01;36m)[00m
			[01;31m(SIMPX[00m
				(VF das)
				(LK konnen)
				(MF wir ja dort)
				(VC absprechen)[01;31m)[00m))[01;36m)[00m
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['SIMPX', 'VF', 'LK', 'MF', 'VC'], 'mover info': [('SIMPX', (0, 8))], 'old_family': ['SIMPX', 'SIMPX'], 'start left siblings': [], 'auto preterminals': ('KON', 'KOUS', 'PPER', 'APPRART', 'NN', 'ADV', 'PIS', 'VVFIN', 'PDS', 'VMFIN', 'PPER', 'ADV', 'ADV', 'VVINF'), 'start right siblings': ['SIMPX'], 'end left siblings': [], 'auto preterminal span': (0, 14), 'movers': ['SIMPX'], 'old_parent': 'TURN', 'end right siblings': ['VF', 'LK', 'MF', 'VC'], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(SIMPX
			[01;36m(LV[00m
				(SIMPX
					(KOORD und)
					[01;36m(LV[00m
						[01;36m(SIMPX[00m
							(C ob)
							(MF wir am abend noch was)
							(VC unternehmen)[01;36m)[00m[01;36m)[00m)[01;36m)[00m
			(VF das)
			(LK konnen)
			(MF wir ja dort)
			(VC absprechen))))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['LV', 'VF', 'LK', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'KOUS', 'PPER', 'APPRART', 'NN', 'ADV', 'PIS', 'VVFIN'), 'right siblings': [(VF (NX (PDS das))), (LK (VXFIN (VMFIN konnen))), (MF (NX (PPER wir)) (ADVX (ADV ja)) (ADVX (ADV dort))), (VC (VXINF (VVINF absprechen)))], 'left siblings': [], 'auto preterminal span': (0, 8), 'span': (0, 8), 'parent': 'SIMPX', 'label': 'LV', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SIMPX
			(LV
				(SIMPX
					(KOORD und)
					[01;36m(LV[00m
						[01;36m(SIMPX[00m
							(C ob)
							(MF wir am abend noch was)
							(VC unternehmen)[01;36m)[00m[01;36m)[00m))
			(VF das)
			(LK konnen)
			(MF wir ja dort)
			(VC absprechen))))
Step:UNSET add
{'subtrees': ['C', 'MF', 'VC'], 'family': ['KOORD', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'APPRART', 'NN', 'ADV', 'PIS', 'VVFIN'), 'right siblings': [], 'left siblings': [(KOORD (KON und))], 'auto preterminal span': (1, 8), 'span': (1, 8), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SIMPX
			(LV
				(SIMPX
					(KOORD und)
					[01;36m(LV[00m
						(SIMPX
							(C ob)
							(MF wir am abend noch was)
							(VC unternehmen))[01;36m)[00m))
			(VF das)
			(LK konnen)
			(MF wir ja dort)
			(VC absprechen))))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['KOORD', 'LV'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'APPRART', 'NN', 'ADV', 'PIS', 'VVFIN'), 'right siblings': [], 'left siblings': [(KOORD (KON und))], 'auto preterminal span': (1, 8), 'span': (1, 8), 'parent': 'SIMPX', 'label': 'LV', 'classified_type': 'Unary', 'type': 'add'}
(TOP und ob wir am abend noch was unternehmen das konnen wir ja dort absprechen)

Sentence 228:
0 Initial errors
0 on fringe, 0 iterations

Sentence 229:
0 Initial errors
0 on fringe, 0 iterations

Sentence 230:
0 Initial errors
0 on fringe, 0 iterations

Sentence 231:
0 Initial errors
0 on fringe, 0 iterations

Sentence 232:
0 Initial errors
0 on fringe, 0 iterations

Sentence 233:
0 Initial errors
0 on fringe, 0 iterations

Sentence 234:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM
			(PX
				(ADVX dann)
				[01;36m(DM[00m
					(PX
						(APPR bis)
						(ADVX dann))[01;36m)[00m))
		(DM ja)))
Step:Unary
{'subtrees': ['PX'], 'family': ['ADVX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ADV'), 'right siblings': [], 'left siblings': [(ADVX (ADV dann))], 'auto preterminal span': (1, 3), 'span': (1, 3), 'parent': 'PX', 'label': 'DM', 'classified_type': 'Unary', 'type': 'add'}
(TOP dann bis dann ja)

Sentence 235:
0 Initial errors
0 on fringe, 0 iterations

Sentence 236:
0 Initial errors
0 on fringe, 0 iterations

Sentence 237:
0 Initial errors
0 on fringe, 0 iterations

Sentence 238:
0 Initial errors
0 on fringe, 0 iterations

Sentence 239:
0 Initial errors
0 on fringe, 0 iterations

Sentence 240:
1 Initial errors
0 on fringe, 1 iterations
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(LK hatten)
			(MF
				(NX sie)
				[01;31m(NX[00m
					(NX lust)
					(PX auf eine zugfahrt)[01;31m)[00m))))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'NN', 'APPR', 'ART', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (2, 7), 'span': (3, 7), 'left siblings': ['NX'], 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP ja hatten sie lust auf eine zugfahrt)

Sentence 241:
0 Initial errors
0 on fringe, 0 iterations

Sentence 242:
0 Initial errors
0 on fringe, 0 iterations

Sentence 243:
0 Initial errors
0 on fringe, 0 iterations

Sentence 244:
3 Initial errors
0 on fringe, 2 iterations
2 Error:Modifier Attachment
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM also)
		(SIMPX
			(VF es)
			(LK fahrt)
			(MF
				(PX
					(PX ab vier uhr dreiundvierzig)
					[01;31m(ADJX[00m
						(ADJD stundlich)[01;31m)[00m)
				(NX ein zug)))
		(SIMPX
			(KOORD und)
			(VF die fahrtdauer)
			(LK betragt)
			[01;36m(NX[00m
				(MF
					(ADVX ubrigens)
					[01;31m(NX[00m
						(ADJX viereinhalb)
						(NN stunden)[01;31m)[00m)[01;36m)[00m)))
Step:Modifier Attachment
{'new_parent': 'NX', 'new_family': ['ADVX', 'ADJX', 'NN'], 'mover info': [('ADVX', (14, 15))], 'old_family': ['ADVX', 'NX'], 'start left siblings': [], 'auto preterminals': ('ADV', 'CARD', 'NN'), 'start right siblings': ['NX'], 'end left siblings': [], 'auto preterminal span': (14, 17), 'movers': ['ADVX'], 'old_parent': 'MF', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['ADJX', 'NN'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM also)
		(SIMPX
			(VF es)
			(LK fahrt)
			(MF
				(PX
					(PX ab vier uhr dreiundvierzig)
					[01;31m(ADJX[00m
						(ADJD stundlich)[01;31m)[00m)
				(NX ein zug)))
		(SIMPX und die fahrtdauer betragt ubrigens viereinhalb stunden)))
Step:Single Word Phrase
{'subtrees': ['ADJD'], 'family': ['PX', 'ADJX'], 'over_word': True, 'over words': True, 'auto preterminals': ('APPR', 'CARD', 'NN', 'CARD', 'ADJD'), 'right siblings': [], 'parent': 'PX', 'auto preterminal span': (3, 8), 'span': (7, 8), 'left siblings': ['PX'], 'label': 'ADJX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP also es fahrt ab vier uhr dreiundvierzig stundlich ein zug und die fahrtdauer betragt ubrigens viereinhalb stunden)

Sentence 245:
0 Initial errors
0 on fringe, 0 iterations

Sentence 246:
0 Initial errors
0 on fringe, 0 iterations

Sentence 247:
8 Initial errors
0 on fringe, 8 iterations
1 Error:UNSET remove
1 Error:Co-ordination
1 Error:UNSET remove
1 Error:Unary
1 Error:Co-ordination
1 Error:UNSET remove
1 Error:Clause Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		[01;31m(SIMPX[00m
			(VF die anderen beiden)
			[01;31m(FKOORD[00m
				[01;31m(LKMN[00m
					(LK sind)
					(MF zwar beide zentral)
					[01;31m(NF[00m
						[01;31m(PX[00m
							(ADVX aber)
							(ADVX nicht)
							(PX in der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m[01;31m)[00m
				(KON und)
				(LKM liegen auch etwas hoher)[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF ich)
			(LK weis)
			(MF nicht)
			[01;33m(SIMPX (NF[00m (NF wie ihr budget aussieht)[01;31m)[00m
		(SIMPX aber mir wurde eigentlich dieses schloshotel hannover am besten passen))) [01;33mNF) SIMPX)[00m
Step:UNSET remove
{'subtrees': ['VF', 'FKOORD'], 'family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ART', 'ADJA', 'PIS', 'VAFIN', 'ADV', 'PIS', 'ADJD', 'ADV', 'PTKNEG', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'KON', 'VVFIN', 'ADV', 'ADV', 'ADJD', 'KON', 'PPER', 'VVFIN', 'PTKNEG', 'KOUS', 'PPOSAT', 'NN', 'VVFIN', 'KON', 'PPER', 'VAFIN', 'ADV', 'PDAT', 'NE', 'NE', 'PTKA', 'ADJD', 'VVINF'), 'right siblings': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 38), 'span': (1, 20), 'left siblings': ['DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(VF die anderen beiden)
		[01;31m(FKOORD[00m
			[01;31m(LKMN[00m
				(LK sind)
				(MF zwar beide zentral)
				[01;31m(NF[00m
					[01;31m(PX[00m
						(ADVX aber)
						(ADVX nicht)
						(PX in der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			(KON und)
			(LKM liegen auch etwas hoher)[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF ich)
			(LK weis)
			(MF nicht)
			[01;33m(SIMPX (NF[00m (NF wie ihr budget aussieht)[01;31m)[00m
		(SIMPX aber mir wurde eigentlich dieses schloshotel hannover am besten passen))) [01;33mNF) SIMPX)[00m
Step:Co-ordination
{'subtrees': ['LK', 'MF', 'NF'], 'family': ['LKMN', 'KON', 'LKM'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'ADV', 'PIS', 'ADJD', 'ADV', 'PTKNEG', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'KON', 'VVFIN', 'ADV', 'ADV', 'ADJD'), 'right siblings': ['KON', 'LKM'], 'parent': 'FKOORD', 'auto preterminal span': (4, 20), 'span': (4, 15), 'left siblings': [], 'label': 'LKMN', 'classified_type': 'Co-ordination', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(VF die anderen beiden)
		[01;31m(FKOORD[00m
			(LK sind)
			(MF zwar beide zentral)
			[01;31m(NF[00m
				[01;31m(PX[00m
					(ADVX aber)
					(ADVX nicht)
					(PX in der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m
			(KON und)
			(LKM liegen auch etwas hoher)[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF ich)
			(LK weis)
			(MF nicht)
			[01;33m(SIMPX (NF[00m (NF wie ihr budget aussieht)[01;31m)[00m
		(SIMPX aber mir wurde eigentlich dieses schloshotel hannover am besten passen))) [01;33mNF) SIMPX)[00m
Step:UNSET remove
{'subtrees': ['LK', 'MF', 'NF', 'KON', 'LKM'], 'family': ['DM', 'VF', 'FKOORD', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ART', 'ADJA', 'PIS', 'VAFIN', 'ADV', 'PIS', 'ADJD', 'ADV', 'PTKNEG', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'KON', 'VVFIN', 'ADV', 'ADV', 'ADJD', 'KON', 'PPER', 'VVFIN', 'PTKNEG', 'KOUS', 'PPOSAT', 'NN', 'VVFIN', 'KON', 'PPER', 'VAFIN', 'ADV', 'PDAT', 'NE', 'NE', 'PTKA', 'ADJD', 'VVINF'), 'right siblings': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 38), 'span': (4, 20), 'left siblings': ['DM', 'VF'], 'label': 'FKOORD', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(VF die anderen beiden)
		(LK sind)
		(MF zwar beide zentral)
		[01;31m(NF[00m
			[01;31m(PX[00m
				(ADVX aber)
				(ADVX nicht)
				(PX in der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m
		(KON und)
		(LKM liegen auch etwas hoher)
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF ich)
			(LK weis)
			(MF nicht)
			[01;33m(SIMPX (NF[00m (NF wie ihr budget aussieht)[01;31m)[00m
		(SIMPX aber mir wurde eigentlich dieses schloshotel hannover am besten passen))) [01;33mNF) SIMPX)[00m
Step:Unary
{'subtrees': ['PX'], 'family': ['DM', 'VF', 'LK', 'MF', 'NF', 'KON', 'LKM', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ART', 'ADJA', 'PIS', 'VAFIN', 'ADV', 'PIS', 'ADJD', 'ADV', 'PTKNEG', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'KON', 'VVFIN', 'ADV', 'ADV', 'ADJD', 'KON', 'PPER', 'VVFIN', 'PTKNEG', 'KOUS', 'PPOSAT', 'NN', 'VVFIN', 'KON', 'PPER', 'VAFIN', 'ADV', 'PDAT', 'NE', 'NE', 'PTKA', 'ADJD', 'VVINF'), 'right siblings': ['KON', 'LKM', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 38), 'span': (8, 15), 'left siblings': ['DM', 'VF', 'LK', 'MF'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(VF die anderen beiden)
		(LK sind)
		(MF zwar beide zentral)
		[01;31m(PX[00m
			(ADVX aber)
			(ADVX nicht)
			(PX in der nahe vom hauptbahnhof)[01;31m)[00m
		(KON und)
		(LKM liegen auch etwas hoher)
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF ich)
			(LK weis)
			(MF nicht)
			[01;33m(SIMPX (NF[00m (NF wie ihr budget aussieht)[01;31m)[00m
		(SIMPX aber mir wurde eigentlich dieses schloshotel hannover am besten passen))) [01;33mNF) SIMPX)[00m
Step:Co-ordination
{'subtrees': ['ADVX', 'ADVX', 'PX'], 'family': ['DM', 'VF', 'LK', 'MF', 'PX', 'KON', 'LKM', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ART', 'ADJA', 'PIS', 'VAFIN', 'ADV', 'PIS', 'ADJD', 'ADV', 'PTKNEG', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'KON', 'VVFIN', 'ADV', 'ADV', 'ADJD', 'KON', 'PPER', 'VVFIN', 'PTKNEG', 'KOUS', 'PPOSAT', 'NN', 'VVFIN', 'KON', 'PPER', 'VAFIN', 'ADV', 'PDAT', 'NE', 'NE', 'PTKA', 'ADJD', 'VVINF'), 'right siblings': ['KON', 'LKM', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 38), 'span': (8, 15), 'left siblings': ['DM', 'VF', 'LK', 'MF'], 'label': 'PX', 'classified_type': 'Co-ordination', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(VF die anderen beiden)
		(LK sind)
		(MF zwar beide zentral)
		(ADVX aber)
		(ADVX nicht)
		(PX in der nahe vom hauptbahnhof)
		(KON und)
		(LKM liegen auch etwas hoher)
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF ich)
			(LK weis)
			(MF nicht)
			[01;33m(SIMPX (NF[00m (NF wie ihr budget aussieht)[01;31m)[00m
		(SIMPX aber mir wurde eigentlich dieses schloshotel hannover am besten passen))) [01;33mNF) SIMPX)[00m
Step:UNSET remove
{'subtrees': ['KOORD', 'VF', 'LK', 'MF', 'NF'], 'family': ['DM', 'VF', 'LK', 'MF', 'ADVX', 'ADVX', 'PX', 'KON', 'LKM', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ART', 'ADJA', 'PIS', 'VAFIN', 'ADV', 'PIS', 'ADJD', 'ADV', 'PTKNEG', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'KON', 'VVFIN', 'ADV', 'ADV', 'ADJD', 'KON', 'PPER', 'VVFIN', 'PTKNEG', 'KOUS', 'PPOSAT', 'NN', 'VVFIN', 'KON', 'PPER', 'VAFIN', 'ADV', 'PDAT', 'NE', 'NE', 'PTKA', 'ADJD', 'VVINF'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 38), 'span': (20, 28), 'left siblings': ['DM', 'VF', 'LK', 'MF', 'ADVX', 'ADVX', 'PX', 'KON', 'LKM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(VF die anderen beiden)
		(LK sind)
		(MF zwar beide zentral)
		(ADVX aber)
		(ADVX nicht)
		(PX in der nahe vom hauptbahnhof)
		(KON und)
		(LKM liegen auch etwas hoher)
		(KOORD und)
		(VF ich)
		(LK weis)
		(MF nicht)
		[01;36m(NF[00m
			[01;36m(SIMPX[00m
				(NF wie ihr budget aussieht)
				(SIMPX aber mir wurde eigentlich dieses schloshotel hannover am besten passen)[01;36m)[00m[01;36m)[00m))
Step:Clause Attachment
{'subtrees': ['NF', 'SIMPX'], 'family': ['DM', 'VF', 'LK', 'MF', 'ADVX', 'ADVX', 'PX', 'KON', 'LKM', 'KOORD', 'VF', 'LK', 'MF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPOSAT', 'NN', 'VVFIN', 'KON', 'PPER', 'VAFIN', 'ADV', 'PDAT', 'NE', 'NE', 'PTKA', 'ADJD', 'VVINF'), 'right siblings': [], 'left siblings': [(DM (PTKANT ja)), (VF (NX (ART die) (ADJX (ADJA anderen)) (PIS beiden))), (LK (VXFIN (VAFIN sind))), (MF (ADVX (ADV zwar)) (NX (PIS beide)) (ADJX (ADJD zentral))), (ADVX (ADV aber)), (ADVX (PTKNEG nicht)), (PX (APPR in) (NX (NX (ART der) (NN nahe)) (PX (APPRART vom) (NX (NN hauptbahnhof))))), (KON und), (LKM (LK (VXFIN (VVFIN liegen))) (MF (ADVX (ADV auch)) (ADJX (ADVX (ADV etwas)) (ADJD hoher)))), (KOORD (KON und)), (VF (NX (PPER ich))), (LK (VXFIN (VVFIN weis))), (MF (ADVX (PTKNEG nicht)))], 'auto preterminal span': (24, 38), 'span': (24, 38), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(VF die anderen beiden)
		(LK sind)
		(MF zwar beide zentral)
		(ADVX aber)
		(ADVX nicht)
		(PX in der nahe vom hauptbahnhof)
		(KON und)
		(LKM liegen auch etwas hoher)
		(KOORD und)
		(VF ich)
		(LK weis)
		(MF nicht)
		[01;36m(NF[00m
			(SIMPX
				(NF wie ihr budget aussieht)
				(SIMPX aber mir wurde eigentlich dieses schloshotel hannover am besten passen))[01;36m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['DM', 'VF', 'LK', 'MF', 'ADVX', 'ADVX', 'PX', 'KON', 'LKM', 'KOORD', 'VF', 'LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPOSAT', 'NN', 'VVFIN', 'KON', 'PPER', 'VAFIN', 'ADV', 'PDAT', 'NE', 'NE', 'PTKA', 'ADJD', 'VVINF'), 'right siblings': [], 'left siblings': [(DM (PTKANT ja)), (VF (NX (ART die) (ADJX (ADJA anderen)) (PIS beiden))), (LK (VXFIN (VAFIN sind))), (MF (ADVX (ADV zwar)) (NX (PIS beide)) (ADJX (ADJD zentral))), (ADVX (ADV aber)), (ADVX (PTKNEG nicht)), (PX (APPR in) (NX (NX (ART der) (NN nahe)) (PX (APPRART vom) (NX (NN hauptbahnhof))))), (KON und), (LKM (LK (VXFIN (VVFIN liegen))) (MF (ADVX (ADV auch)) (ADJX (ADVX (ADV etwas)) (ADJD hoher)))), (KOORD (KON und)), (VF (NX (PPER ich))), (LK (VXFIN (VVFIN weis))), (MF (ADVX (PTKNEG nicht)))], 'auto preterminal span': (24, 38), 'span': (24, 38), 'parent': 'TURN', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP ja die anderen beiden sind zwar beide zentral aber nicht in der nahe vom hauptbahnhof und liegen auch etwas hoher und ich weis nicht wie ihr budget aussieht aber mir wurde eigentlich dieses schloshotel hannover am besten passen)

Sentence 248:
0 Initial errors
0 on fringe, 0 iterations

Sentence 249:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF da)
			(LK musten)
			(MF wir uns)
			(VC erkundigen)
			(NF
				(SIMPX
					(C ob)
					(MF
						(NX die)
						(ADVX abends)
						[01;36m(ADVX[00m [01;31m(ADJX[00m
							(ADJD geoffnet)[01;31m)[00m[01;36m)[00m)
					(VC haben))))
		(SIMPX aber museumsbesuche finde ich auch sehr reizvoll)))
Step:Single Word Phrase
{'family': ['NX', 'ADVX', 'ADVX'], 'auto preterminal span': (9, 10), 'span': (9, 10), 'subtrees': ['ADJD'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('ADJD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'ADVX')}
(TOP ja da musten wir uns erkundigen ob die abends geoffnet haben aber museumsbesuche finde ich auch sehr reizvoll)

Sentence 250:
0 Initial errors
0 on fringe, 0 iterations

Sentence 251:
0 Initial errors
0 on fringe, 0 iterations

Sentence 252:
0 Initial errors
0 on fringe, 0 iterations

Sentence 253:
0 Initial errors
0 on fringe, 0 iterations

Sentence 254:
0 Initial errors
0 on fringe, 0 iterations

Sentence 255:
0 Initial errors
0 on fringe, 0 iterations

Sentence 256:
0 Initial errors
0 on fringe, 0 iterations

Sentence 257:
0 Initial errors
0 on fringe, 0 iterations

Sentence 258:
0 Initial errors
0 on fringe, 0 iterations

Sentence 259:
0 Initial errors
0 on fringe, 0 iterations

Sentence 260:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;36m(ADJX[00m [01;31m(VXINF[00m
			(VVPP abgedeckt)[01;31m)[00m[01;36m)[00m
		(DM ja)))
Step:Single Word Phrase
{'family': ['ADJX', 'DM'], 'auto preterminal span': (0, 1), 'span': (0, 1), 'subtrees': ['VVPP'], 'parent': 'TURN', 'over_word': True, 'auto preterminals': ('VVPP',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VXINF', 'ADJX')}
(TOP abgedeckt ja)

Sentence 261:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;36m(ADJX[00m [01;31m(VXINF[00m
			(VVPP abgedeckt)[01;31m)[00m[01;36m)[00m
		(DM ja)))
Step:Single Word Phrase
{'family': ['ADJX', 'DM'], 'auto preterminal span': (0, 1), 'span': (0, 1), 'subtrees': ['VVPP'], 'parent': 'TURN', 'over_word': True, 'auto preterminals': ('VVPP',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VXINF', 'ADJX')}
(TOP abgedeckt ja)

Sentence 262:
5 Initial errors
0 on fringe, 4 iterations
2 Error:Modifier Attachment
1 Error:UNSET add
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		[01;36m(PX[00m
			[01;36m(DM[00m
				[01;36m(NX[00m
					(ADVX dann)
					[01;31m(DM[00m
						(NX
							(PIDAT vielen)
							(NN dank))[01;31m)[00m
					[01;31m(ADVX[00m
						(ADVX erst)
						(ADVX mal)[01;31m)[00m[01;36m)[00m
				(DM und auf wiedersehen)[01;36m)[00m[01;36m)[00m))
Step:Modifier Attachment
{'new_parent': 'TURN', 'new_family': ['DM', 'DM', 'ADVX', 'DM', 'ADVX', 'ADVX', 'DM'], 'mover info': [('ADVX', (5, 6))], 'old_family': ['ADVX', 'ADVX'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'ITJ', 'ADV', 'PIDAT', 'NN', 'ADV', 'ADV', 'KON', 'APPR', 'NN'), 'start right siblings': ['ADVX'], 'end left siblings': ['DM', 'DM', 'ADVX', 'DM'], 'auto preterminal span': (0, 10), 'adding node already present': False, 'movers': ['ADVX'], 'old_parent': 'ADVX', 'POS confusion': ('ADV', 'ADV'), 'added and moved': True, 'end right siblings': ['ADVX', 'DM'], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'PX'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		[01;36m(PX[00m
			[01;36m(DM[00m
				(NX
					(ADVX dann)
					[01;31m(DM[00m
						(NX
							(PIDAT vielen)
							(NN dank))[01;31m)[00m
					(ADVX erst)
					(ADVX mal))
				(DM und auf wiedersehen)[01;36m)[00m[01;36m)[00m))
Step:UNSET add
{'subtrees': ['NX', 'DM'], 'family': ['DM', 'DM', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PIDAT', 'NN', 'ADV', 'ADV', 'KON', 'APPR', 'NN'), 'right siblings': [], 'left siblings': [(DM (PTKANT ja)), (DM (ITJ gut))], 'auto preterminal span': (2, 10), 'span': (2, 10), 'parent': 'TURN', 'label': 'DM', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		[01;36m(PX[00m
			(DM
				(NX
					(ADVX dann)
					[01;31m(DM[00m
						(NX
							(PIDAT vielen)
							(NN dank))[01;31m)[00m
					(ADVX erst)
					(ADVX mal))
				(DM und auf wiedersehen))[01;36m)[00m))
Step:Unary
{'subtrees': ['DM'], 'family': ['DM', 'DM', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PIDAT', 'NN', 'ADV', 'ADV', 'KON', 'APPR', 'NN'), 'right siblings': [], 'left siblings': [(DM (PTKANT ja)), (DM (ITJ gut))], 'auto preterminal span': (2, 10), 'span': (2, 10), 'parent': 'TURN', 'label': 'PX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		(PX
			(DM
				(NX
					(ADVX dann)
					[01;31m(DM[00m
						(NX
							(PIDAT vielen)
							(NN dank))[01;31m)[00m
					(ADVX erst)
					(ADVX mal))
				(DM und auf wiedersehen)))))
Step:Unary
{'subtrees': ['NX'], 'family': ['ADVX', 'DM', 'ADVX', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PIDAT', 'NN', 'ADV', 'ADV'), 'right siblings': ['ADVX', 'ADVX'], 'parent': 'NX', 'auto preterminal span': (2, 7), 'span': (3, 5), 'left siblings': ['ADVX'], 'label': 'DM', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja gut dann vielen dank erst mal und auf wiedersehen)

Sentence 263:
0 Initial errors
0 on fringe, 0 iterations

Sentence 264:
0 Initial errors
0 on fringe, 0 iterations

Sentence 265:
0 Initial errors
0 on fringe, 0 iterations

Sentence 266:
0 Initial errors
0 on fringe, 0 iterations

Sentence 267:
3 Initial errors
0 on fringe, 2 iterations
1 Error:Unary
2 Error:NP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(DM[00m
			[01;31m(NX[00m
				(NX reiseburo)
				[01;33m(NX[00m (NX bonn)[01;31m)[00m[01;31m)[00m
		(DM flammersfeld) [01;33mNX)[00m
		(DM guten tag)))
Step:Unary
{'subtrees': ['NX'], 'family': ['DM', 'DM', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'NE', 'NE', 'ADJA', 'NN'), 'right siblings': ['DM', 'DM'], 'parent': 'TURN', 'auto preterminal span': (0, 5), 'span': (0, 2), 'left siblings': [], 'label': 'DM', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		[01;31m(NX[00m
			(NX reiseburo)
			[01;33m(NX[00m (NX bonn)[01;31m)[00m
		(DM flammersfeld) [01;33mNX)[00m
		(DM guten tag)))
Step:NP Attachment
{'new_parent': 'TURN', 'new_family': ['NX', 'NX', 'DM', 'DM'], 'mover info': [('NX', (1, 2))], 'old_family': ['NX', 'NX'], 'start left siblings': ['NX'], 'auto preterminals': ('NN', 'NE', 'NE', 'ADJA', 'NN'), 'start right siblings': [], 'end left siblings': ['NX'], 'auto preterminal span': (0, 5), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'NX', 'POS confusion': ('NE', 'NE'), 'added and moved': True, 'end right siblings': ['DM', 'DM'], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'NX'}
(TOP reiseburo bonn flammersfeld guten tag)

Sentence 268:
0 Initial errors
0 on fringe, 0 iterations

Sentence 269:
0 Initial errors
0 on fringe, 0 iterations

Sentence 270:
0 Initial errors
0 on fringe, 0 iterations

Sentence 271:
2 Initial errors
0 on fringe, 2 iterations
1 Error:PP Attachment
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX
			(VF vierter funfter august)
			(LK ist)
			(MF auch nicht so gut)
			(NF
				(SIMPX
					(C weil)
					(MF
						(NX ich)
						(ADVX dann)
						(PX am sechsten)
						[01;36m(PX[00m
							(ADVX gleich)
							(PX nach potsdam)[01;36m)[00m)
					(VC fahre))))
		[01;36m(DM[00m
			(KON und)[01;36m)[00m))
Step:PP Attachment
{'subtrees': ['ADVX', 'PX'], 'family': ['NX', 'ADVX', 'PX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'APPR', 'NE'), 'right siblings': [], 'left siblings': [(NX (PPER ich)), (ADVX (ADV dann)), (PX (APPRART am) (NX (NN sechsten)))], 'auto preterminal span': (13, 16), 'span': (13, 16), 'parent': 'MF', 'label': 'PX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(SIMPX vierter funfter august ist auch nicht so gut weil ich dann am sechsten gleich nach potsdam fahre)
		[01;36m(DM[00m
			(KON und)[01;36m)[00m))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['SIMPX', 'DM'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON',), 'right siblings': [], 'left siblings': [(SIMPX (VF (NX (ADJX (ADJX (ADJA vierter)) (ADJX (ADJA funfter))) (NN august))) (LK (VXFIN (VAFIN ist))) (MF (ADVX (ADV auch)) (ADVX (PTKNEG nicht)) (ADJX (ADVX (ADV so)) (ADJD gut))) (NF (SIMPX (C (KOUS weil)) (MF (NX (PPER ich)) (ADVX (ADV dann)) (PX (APPRART am) (NX (NN sechsten))) (PX (ADVX (ADV gleich)) (PX (APPR nach) (NX (NE potsdam))))) (VC (VXFIN (VVFIN fahre))))))], 'auto preterminal span': (17, 18), 'span': (17, 18), 'parent': 'TURN', 'label': 'DM', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP vierter funfter august ist auch nicht so gut weil ich dann am sechsten gleich nach potsdam fahre und)

Sentence 272:
0 Initial errors
0 on fringe, 0 iterations

Sentence 273:
5 Initial errors
0 on fringe, 3 iterations
3 Error:PP Attachment
1 Error:UNSET remove
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX
			(VF die reiseunterlagen)
			(LK kann)
			(MF
				(NX ich)
				(ADVX dann)
				[01;36m(PX[00m [01;31m(ADVX[00m
					[01;31m(PX[00m
						(APPRART am)
						[01;33m(NX[00m (NX tag)[01;31m)[00m
					[01;36m(ADVX[00m
						(ADV vorher)[01;36m)[00m[01;31m)[00m [01;33mNX)[00m[01;36m)[00m
				(PX im buro))
			(VC abholen))))
Step:PP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'ADVX', 'PX', 'ADVX', 'PX'], 'mover info': [('PX', (5, 7))], 'old_family': ['PX', 'ADV'], 'start left siblings': [], 'auto preterminals': ('PPER', 'ADV', 'APPRART', 'NN', 'ADV', 'APPRART', 'NN'), 'start right siblings': ['ADV'], 'end left siblings': ['NX', 'ADVX'], 'auto preterminal span': (3, 10), 'adding node already present': False, 'movers': ['PX'], 'old_parent': 'ADVX', 'added and moved': True, 'end right siblings': ['ADVX', 'PX'], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'PX'}
(TOP
	(TURN
		(SIMPX
			(VF die reiseunterlagen)
			(LK kann)
			(MF
				(NX ich)
				(ADVX dann)
				(PX
					[01;31m(PX[00m
						(APPRART am)
						[01;33m(NX[00m (NX tag)[01;31m)[00m
					(ADVX vorher)) [01;33mNX)[00m
				(PX im buro))
			(VC abholen))))
Step:UNSET remove
{'subtrees': ['APPRART', 'NX'], 'family': ['PX', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'NN', 'ADV'), 'right siblings': ['ADVX'], 'parent': 'PX', 'auto preterminal span': (5, 8), 'span': (5, 7), 'left siblings': [], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX
			(VF die reiseunterlagen)
			(LK kann)
			(MF
				(NX ich)
				(ADVX dann)
				(PX
					(APPRART am)
					[01;36m(NX[00m
						(NX tag)
						(ADVX vorher)[01;36m)[00m)
				(PX im buro))
			(VC abholen))))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADVX'], 'family': ['APPRART', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'ADV'), 'right siblings': [], 'left siblings': [(APPRART am)], 'auto preterminal span': (6, 8), 'span': (6, 8), 'parent': 'PX', 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP die reiseunterlagen kann ich dann am tag vorher im buro abholen)

Sentence 274:
0 Initial errors
0 on fringe, 0 iterations

Sentence 275:
0 Initial errors
0 on fringe, 0 iterations

Sentence 276:
5 Initial errors
0 on fringe, 2 iterations
3 Error:NP Attachment
2 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM schonen guten tag)
		[01;31m(DM[00m
			[01;31m(NX[00m
				[01;36m(DM[00m
					(NX
						(NN reiseburo))[01;36m)[00m
				[01;36m(DM[00m [01;31m(NX[00m
					(NE okpue)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m))
Step:NP Attachment
{'new_parent': 'TURN', 'new_family': ['DM', 'DM', 'NX'], 'mover info': [('NX', (4, 5))], 'old_family': ['NX', 'NX'], 'start left siblings': ['NX'], 'auto preterminals': ('ADJA', 'ADJA', 'NN', 'NN', 'NE'), 'start right siblings': [], 'end left siblings': ['DM', 'DM'], 'auto preterminal span': (0, 5), 'movers': ['NX'], 'old_parent': 'NX', 'POS confusion': ('NE', 'NE'), 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM schonen guten tag)
		(DM reiseburo)
		[01;36m(DM[00m [01;31m(NX[00m
			(NE okpue)[01;31m)[00m[01;36m)[00m))
Step:Single Word Phrase
{'family': ['DM', 'DM', 'DM'], 'auto preterminal span': (4, 5), 'span': (4, 5), 'subtrees': ['NE'], 'parent': 'TURN', 'over_word': True, 'auto preterminals': ('NE',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('NX', 'DM')}
(TOP schonen guten tag reiseburo okpue)

Sentence 277:
0 Initial errors
0 on fringe, 0 iterations

Sentence 278:
8 Initial errors
0 on fringe, 7 iterations
2 Error:Different label
1 Error:UNSET add
1 Error:Unary
1 Error:PP Attachment
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM also)
		(SIMPX die termin der ware am samstag den funften juli)
		(SIMPX
			(KOORD und)
			(VF ich)
			(LK dachte)
			(MF
				(ADVX da)
				[01;31m(PX[00m
					(PX an eine anreise)
					[01;36m(PX[00m [01;31m(ADVX[00m
						(ADVX freitags)
						(NX den vierten juli)[01;31m)[00m[01;36m)[00m[01;31m)[00m))
		[01;31m(NX[00m
			(KON und)
			(NX die abreise)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF das)
			(LK weis)
			(MF ich noch nicht so genau)
			(NF
				(SIMPX
					[01;36m(NF[00m
						[01;36m(SIMPX[00m
							(C da)
							(MF ich eventuell ein paar tage noch in hannover)
							(VC verbringen will)[01;36m)[00m[01;36m)[00m
					[01;31m(NF[00m
						(PX
							(ADVX so)
							(APPR um)
							(NX den siebten achten juli))[01;31m)[00m))[01;31m)[00m))
Step:Different label
{'family': ['PX', 'PX'], 'auto preterminal span': (17, 21), 'span': (17, 21), 'subtrees': ['ADVX', 'NX'], 'parent': 'PX', 'over_word': False, 'auto preterminals': ('ADV', 'ART', 'ADJA', 'NN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('ADVX', 'PX')}
(TOP
	(TURN
		(DM also)
		(SIMPX die termin der ware am samstag den funften juli)
		(SIMPX
			(KOORD und)
			(VF ich)
			(LK dachte)
			(MF
				(ADVX da)
				[01;31m(PX[00m
					(PX an eine anreise)
					(PX freitags den vierten juli)[01;31m)[00m))
		[01;31m(NX[00m
			(KON und)
			(NX die abreise)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF das)
			(LK weis)
			(MF ich noch nicht so genau)
			(NF
				(SIMPX
					[01;36m(NF[00m
						[01;36m(SIMPX[00m
							(C da)
							(MF ich eventuell ein paar tage noch in hannover)
							(VC verbringen will)[01;36m)[00m[01;36m)[00m
					[01;31m(NF[00m
						(PX
							(ADVX so)
							(APPR um)
							(NX den siebten achten juli))[01;31m)[00m))[01;31m)[00m))
Step:UNSET add
{'subtrees': ['C', 'MF', 'VC'], 'family': ['SIMPX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'ART', 'PIDAT', 'NN', 'ADV', 'APPR', 'NE', 'VVINF', 'VMFIN'), 'right siblings': [(NF (PX (ADVX (ADV so)) (APPR um) (NX (ART den) (ADJX (ADJX (ADJA siebten)) (ADJX (ADJA achten))) (NN juli))))], 'left siblings': [], 'auto preterminal span': (31, 42), 'span': (31, 42), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		(SIMPX die termin der ware am samstag den funften juli)
		(SIMPX
			(KOORD und)
			(VF ich)
			(LK dachte)
			(MF
				(ADVX da)
				[01;31m(PX[00m
					(PX an eine anreise)
					(PX freitags den vierten juli)[01;31m)[00m))
		[01;31m(NX[00m
			(KON und)
			(NX die abreise)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF das)
			(LK weis)
			(MF ich noch nicht so genau)
			(NF
				(SIMPX
					[01;36m(NF[00m
						(SIMPX
							(C da)
							(MF ich eventuell ein paar tage noch in hannover)
							(VC verbringen will))[01;36m)[00m
					[01;31m(NF[00m
						(PX
							(ADVX so)
							(APPR um)
							(NX den siebten achten juli))[01;31m)[00m))[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['NF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'ART', 'PIDAT', 'NN', 'ADV', 'APPR', 'NE', 'VVINF', 'VMFIN'), 'right siblings': [(NF (PX (ADVX (ADV so)) (APPR um) (NX (ART den) (ADJX (ADJX (ADJA siebten)) (ADJX (ADJA achten))) (NN juli))))], 'left siblings': [], 'auto preterminal span': (31, 42), 'span': (31, 42), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		(SIMPX die termin der ware am samstag den funften juli)
		(SIMPX
			(KOORD und)
			(VF ich)
			(LK dachte)
			(MF
				(ADVX da)
				[01;31m(PX[00m
					(PX an eine anreise)
					(PX freitags den vierten juli)[01;31m)[00m))
		[01;31m(NX[00m
			(KON und)
			(NX die abreise)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF das)
			(LK weis)
			(MF ich noch nicht so genau)
			(NF
				(SIMPX
					(NF da ich eventuell ein paar tage noch in hannover verbringen will)
					[01;31m(NF[00m
						(PX
							(ADVX so)
							(APPR um)
							(NX den siebten achten juli))[01;31m)[00m))[01;31m)[00m))
Step:PP Attachment
{'subtrees': ['PX', 'PX'], 'family': ['ADVX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'APPR', 'ART', 'NN', 'ADV', 'ART', 'ADJA', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (13, 21), 'span': (14, 21), 'left siblings': ['ADVX'], 'label': 'PX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX die termin der ware am samstag den funften juli)
		(SIMPX und ich dachte da an eine anreise freitags den vierten juli)
		[01;31m(NX[00m
			(KON und)
			(NX die abreise)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF das)
			(LK weis)
			(MF ich noch nicht so genau)
			(NF
				(SIMPX
					(NF da ich eventuell ein paar tage noch in hannover verbringen will)
					[01;31m(NF[00m
						(PX
							(ADVX so)
							(APPR um)
							(NX den siebten achten juli))[01;31m)[00m))[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['KON', 'NX'], 'family': ['DM', 'SIMPX', 'SIMPX', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ART', 'NN', 'PDS', 'VAFIN', 'APPRART', 'NN', 'ART', 'ADJA', 'NN', 'KON', 'PPER', 'VVFIN', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'ART', 'ADJA', 'NN', 'KON', 'ART', 'NN', 'PDS', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'ART', 'PIDAT', 'NN', 'ADV', 'APPR', 'NE', 'VVINF', 'VMFIN', 'ADV', 'APPR', 'ART', 'ADJA', 'ADJA', 'NN'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 48), 'span': (21, 24), 'left siblings': ['DM', 'SIMPX', 'SIMPX'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX die termin der ware am samstag den funften juli)
		(SIMPX und ich dachte da an eine anreise freitags den vierten juli)
		(KON und)
		(NX die abreise)
		[01;31m(SIMPX[00m
			(VF das)
			(LK weis)
			(MF ich noch nicht so genau)
			(NF
				(SIMPX
					(NF da ich eventuell ein paar tage noch in hannover verbringen will)
					[01;31m(NF[00m
						(PX
							(ADVX so)
							(APPR um)
							(NX den siebten achten juli))[01;31m)[00m))[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'NF'], 'family': ['DM', 'SIMPX', 'SIMPX', 'KON', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ART', 'NN', 'PDS', 'VAFIN', 'APPRART', 'NN', 'ART', 'ADJA', 'NN', 'KON', 'PPER', 'VVFIN', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'ART', 'ADJA', 'NN', 'KON', 'ART', 'NN', 'PDS', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'ART', 'PIDAT', 'NN', 'ADV', 'APPR', 'NE', 'VVINF', 'VMFIN', 'ADV', 'APPR', 'ART', 'ADJA', 'ADJA', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 48), 'span': (24, 48), 'left siblings': ['DM', 'SIMPX', 'SIMPX', 'KON', 'NX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX die termin der ware am samstag den funften juli)
		(SIMPX und ich dachte da an eine anreise freitags den vierten juli)
		(KON und)
		(NX die abreise)
		(VF das)
		(LK weis)
		(MF ich noch nicht so genau)
		(NF
			(SIMPX
				(NF da ich eventuell ein paar tage noch in hannover verbringen will)
				[01;31m(NF[00m
					(PX
						(ADVX so)
						(APPR um)
						(NX den siebten achten juli))[01;31m)[00m))))
Step:Unary
{'subtrees': ['PX'], 'family': ['NF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'ART', 'PIDAT', 'NN', 'ADV', 'APPR', 'NE', 'VVINF', 'VMFIN', 'ADV', 'APPR', 'ART', 'ADJA', 'ADJA', 'NN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (31, 48), 'span': (42, 48), 'left siblings': ['NF'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP also die termin der ware am samstag den funften juli und ich dachte da an eine anreise freitags den vierten juli und die abreise das weis ich noch nicht so genau da ich eventuell ein paar tage noch in hannover verbringen will so um den siebten achten juli)

Sentence 279:
0 Initial errors
0 on fringe, 0 iterations

Sentence 280:
0 Initial errors
0 on fringe, 0 iterations

Sentence 281:
0 Initial errors
0 on fringe, 0 iterations

Sentence 282:
21 Initial errors
0 on fringe, 11 iterations
4 Error:Modifier Attachment
2 Error:Single Word Phrase
2 Error:NP Attachment
2 Error:UNSET move
2 Error:Modifier Attachment
2 Error:Co-ordination
3 Error:Co-ordination
1 Error:Clause Attachment
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM also)
		(SIMPX wir haben hier jetzt drei hotels die wir wieder gerne empfehlen)
		[01;31m(SIMPX[00m
			[01;31m(LV[00m
				[01;31m(NX[00m
					(PX zum einen)
					(NX das hotel am thielenplatz)[01;31m)[00m[01;31m)[00m
			[01;36m(SIMPX[00m
				(VF das)
				(LK liegt)
				[01;36m(PX[00m
					(MF [01;33m(PX[00m
						(ADVX so)
						[01;31m(PX[00m
							[01;31m(PX[00m
								(APPR bis)
								(NX hundert dreisig mark)[01;31m)[00m [01;33mPX)[00m
							(PX pro zimmer)[01;31m)[00m)[01;36m)[00m[01;36m)[00m[01;31m)[00m
		(SIMPX und dann gibt es ein zentralhotel)
		(SIMPX das ist wirklich auch sehr zentral)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF das)
				(LK geht)
				[01;36m(PX[00m
					(MF [01;33m(PX (MF (PX[00m
						(ADVX so)
						[01;31m(PX[00m
							(APPR bis)
							(NX zweihundert zwanzig)[01;31m)[00m)[01;36m)[00m[01;31m)[00m
			[01;31m(NX[00m
				(KON und)
				[01;31m(PX[00m
					(ADVX naturlich) [01;33mPX)[00m
					(ADVX jetzt)
					(PX fur gehobene anspruche)[01;31m)[00m [01;33mMF) PX)[00m
				(NX das grandhotel)[01;31m)[00m[01;36m)[00m
		[01;31m(SIMPX[00m
			(VF da)
			(LK musten)
			(MF sie allerdings schon funfhundert mark)
			(VC hinlegen)[01;31m)[00m
		[01;36m(SIMPX[00m
			[01;36m(C[00m [01;31m(DM[00m
				(PWAV wobei)[01;31m)[00m[01;36m)[00m
			(SIMPX ich weis ja nicht ob das)[01;36m)[00m))
Step:Modifier Attachment
{'new_parent': 'PX', 'new_family': ['ADVX', 'APPR', 'NX'], 'mover info': [('ADVX', (21, 22))], 'old_family': ['ADVX', 'PX'], 'start left siblings': [], 'auto preterminals': ('ADV', 'APPR', 'CARD', 'CARD', 'NN', 'APPR', 'NN'), 'start right siblings': ['PX'], 'end left siblings': [], 'auto preterminal span': (21, 28), 'movers': ['ADVX'], 'old_parent': 'MF', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['APPR', 'NX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(DM also)
		(SIMPX wir haben hier jetzt drei hotels die wir wieder gerne empfehlen)
		[01;31m(SIMPX[00m
			[01;31m(LV[00m
				[01;31m(NX[00m
					(PX zum einen)
					(NX das hotel am thielenplatz)[01;31m)[00m[01;31m)[00m
			[01;36m(SIMPX[00m
				(VF das)
				(LK liegt)
				(MF so bis hundert dreisig mark pro zimmer)[01;36m)[00m[01;31m)[00m
		(SIMPX und dann gibt es ein zentralhotel)
		(SIMPX das ist wirklich auch sehr zentral)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF das)
				(LK geht)
				[01;36m(PX[00m
					(MF [01;33m(PX (MF (PX[00m
						(ADVX so)
						[01;31m(PX[00m
							(APPR bis)
							(NX zweihundert zwanzig)[01;31m)[00m)[01;36m)[00m[01;31m)[00m
			[01;31m(NX[00m
				(KON und)
				[01;31m(PX[00m
					(ADVX naturlich) [01;33mPX)[00m
					(ADVX jetzt)
					(PX fur gehobene anspruche)[01;31m)[00m [01;33mMF) PX)[00m
				(NX das grandhotel)[01;31m)[00m[01;36m)[00m
		[01;31m(SIMPX[00m
			(VF da)
			(LK musten)
			(MF sie allerdings schon funfhundert mark)
			(VC hinlegen)[01;31m)[00m
		[01;36m(SIMPX[00m
			[01;36m(C[00m [01;31m(DM[00m
				(PWAV wobei)[01;31m)[00m[01;36m)[00m
			(SIMPX ich weis ja nicht ob das)[01;36m)[00m))
Step:Single Word Phrase
{'family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX', 'C', 'SIMPX'], 'auto preterminal span': (62, 63), 'span': (62, 63), 'subtrees': ['PWAV'], 'parent': 'TURN', 'over_word': True, 'auto preterminals': ('PWAV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('DM', 'C')}
(TOP
	(TURN
		(DM ja)
		(DM also)
		(SIMPX wir haben hier jetzt drei hotels die wir wieder gerne empfehlen)
		[01;31m(SIMPX[00m
			[01;31m(LV[00m
				[01;31m(NX[00m
					(PX zum einen)
					(NX das hotel am thielenplatz)[01;31m)[00m[01;31m)[00m
			[01;36m(SIMPX[00m
				(VF das)
				(LK liegt)
				(MF so bis hundert dreisig mark pro zimmer)[01;36m)[00m[01;31m)[00m
		(SIMPX und dann gibt es ein zentralhotel)
		(SIMPX das ist wirklich auch sehr zentral)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF das)
				(LK geht)
				[01;36m(PX[00m
					(MF [01;33m(PX (MF (PX[00m
						(ADVX so)
						[01;31m(PX[00m
							(APPR bis)
							(NX zweihundert zwanzig)[01;31m)[00m)[01;36m)[00m[01;31m)[00m
			[01;31m(NX[00m
				(KON und)
				[01;31m(PX[00m
					(ADVX naturlich) [01;33mPX)[00m
					(ADVX jetzt)
					(PX fur gehobene anspruche)[01;31m)[00m [01;33mMF) PX)[00m
				(NX das grandhotel)[01;31m)[00m[01;36m)[00m
		[01;31m(SIMPX[00m
			(VF da)
			(LK musten)
			(MF sie allerdings schon funfhundert mark)
			(VC hinlegen)[01;31m)[00m
		[01;36m(SIMPX[00m
			(C wobei)
			(SIMPX ich weis ja nicht ob das)[01;36m)[00m))
Step:NP Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'NX'], 'mover info': [('NX', (46, 54))], 'old_family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX', 'C', 'SIMPX'], 'start left siblings': ['DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'auto preterminals': ('PTKANT', 'ADV', 'PPER', 'VAFIN', 'ADV', 'ADV', 'CARD', 'NN', 'PRELS', 'PPER', 'ADV', 'ADV', 'VVFIN', 'APPRART', 'PIS', 'ART', 'NN', 'APPRART', 'NE', 'PDS', 'VVFIN', 'ADV', 'APPR', 'CARD', 'CARD', 'NN', 'APPR', 'NN', 'KON', 'ADV', 'VVFIN', 'PPER', 'ART', 'NE', 'PDS', 'VAFIN', 'ADV', 'ADV', 'ADV', 'ADJD', 'PDS', 'VVFIN', 'ADV', 'APPR', 'CARD', 'CARD', 'KON', 'ADV', 'ADV', 'APPR', 'ADJA', 'NN', 'ART', 'NE', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'CARD', 'NN', 'VVINF', 'PWAV', 'PPER', 'VVFIN', 'ADV', 'PTKNEG', 'KOUS', 'PDS'), 'start right siblings': ['SIMPX', 'C', 'SIMPX'], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (0, 69), 'movers': ['NX'], 'old_parent': 'TURN', 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(DM also)
		(SIMPX wir haben hier jetzt drei hotels die wir wieder gerne empfehlen)
		[01;31m(SIMPX[00m
			[01;31m(LV[00m
				[01;31m(NX[00m
					(PX zum einen)
					(NX das hotel am thielenplatz)[01;31m)[00m[01;31m)[00m
			[01;36m(SIMPX[00m
				(VF das)
				(LK liegt)
				(MF so bis hundert dreisig mark pro zimmer)[01;36m)[00m[01;31m)[00m
		(SIMPX und dann gibt es ein zentralhotel)
		(SIMPX das ist wirklich auch sehr zentral)
		(SIMPX
			(VF das)
			(LK geht)
			[01;36m(PX[00m
				(MF [01;33m(PX (MF (PX[00m
					(ADVX so)
					[01;31m(PX[00m
						(APPR bis)
						(NX zweihundert zwanzig)[01;31m)[00m)[01;36m)[00m
			[01;31m(NX[00m
				(KON und)
				[01;31m(PX[00m
					(ADVX naturlich) [01;33mPX)[00m
					(ADVX jetzt)
					(PX fur gehobene anspruche)[01;31m)[00m [01;33mMF) PX)[00m
				(NX das grandhotel)[01;31m)[00m)
		[01;31m(SIMPX[00m
			(VF da)
			(LK musten)
			(MF sie allerdings schon funfhundert mark)
			(VC hinlegen)[01;31m)[00m
		[01;36m(SIMPX[00m
			(C wobei)
			(SIMPX ich weis ja nicht ob das)[01;36m)[00m))
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['DM', 'DM', 'SIMPX', 'LV', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'C', 'SIMPX'], 'mover info': [('LV', (13, 19))], 'old_family': ['LV', 'VF', 'LK', 'MF'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'ADV', 'PPER', 'VAFIN', 'ADV', 'ADV', 'CARD', 'NN', 'PRELS', 'PPER', 'ADV', 'ADV', 'VVFIN', 'APPRART', 'PIS', 'ART', 'NN', 'APPRART', 'NE', 'PDS', 'VVFIN', 'ADV', 'APPR', 'CARD', 'CARD', 'NN', 'APPR', 'NN', 'KON', 'ADV', 'VVFIN', 'PPER', 'ART', 'NE', 'PDS', 'VAFIN', 'ADV', 'ADV', 'ADV', 'ADJD', 'PDS', 'VVFIN', 'ADV', 'APPR', 'CARD', 'CARD', 'KON', 'ADV', 'ADV', 'APPR', 'ADJA', 'NN', 'ART', 'NE', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'CARD', 'NN', 'VVINF', 'PWAV', 'PPER', 'VVFIN', 'ADV', 'PTKNEG', 'KOUS', 'PDS'), 'start right siblings': ['VF', 'LK', 'MF'], 'end left siblings': ['DM', 'DM', 'SIMPX'], 'auto preterminal span': (0, 69), 'movers': ['LV'], 'old_parent': 'SIMPX', 'end right siblings': ['SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'C', 'SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(DM also)
		(SIMPX wir haben hier jetzt drei hotels die wir wieder gerne empfehlen)
		[01;31m(LV[00m
			[01;31m(NX[00m
				(PX zum einen)
				(NX das hotel am thielenplatz)[01;31m)[00m[01;31m)[00m
		(SIMPX das liegt so bis hundert dreisig mark pro zimmer)
		(SIMPX und dann gibt es ein zentralhotel)
		(SIMPX das ist wirklich auch sehr zentral)
		(SIMPX
			(VF das)
			(LK geht)
			[01;36m(PX[00m
				(MF [01;33m(PX (MF (PX[00m
					(ADVX so)
					[01;31m(PX[00m
						(APPR bis)
						(NX zweihundert zwanzig)[01;31m)[00m)[01;36m)[00m
			[01;31m(NX[00m
				(KON und)
				[01;31m(PX[00m
					(ADVX naturlich) [01;33mPX)[00m
					(ADVX jetzt)
					(PX fur gehobene anspruche)[01;31m)[00m [01;33mMF) PX)[00m
				(NX das grandhotel)[01;31m)[00m)
		[01;31m(SIMPX[00m
			(VF da)
			(LK musten)
			(MF sie allerdings schon funfhundert mark)
			(VC hinlegen)[01;31m)[00m
		[01;36m(SIMPX[00m
			(C wobei)
			(SIMPX ich weis ja nicht ob das)[01;36m)[00m))
Step:Modifier Attachment
{'new_parent': 'PX', 'new_family': ['ADVX', 'APPR', 'NX'], 'mover info': [('ADVX', (42, 43))], 'old_family': ['ADVX', 'PX'], 'start left siblings': [], 'auto preterminals': ('ADV', 'APPR', 'CARD', 'CARD'), 'start right siblings': ['PX'], 'end left siblings': [], 'auto preterminal span': (42, 46), 'movers': ['ADVX'], 'old_parent': 'MF', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['APPR', 'NX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(DM also)
		(SIMPX wir haben hier jetzt drei hotels die wir wieder gerne empfehlen)
		[01;31m(LV[00m
			[01;31m(NX[00m
				(PX zum einen)
				(NX das hotel am thielenplatz)[01;31m)[00m[01;31m)[00m
		(SIMPX das liegt so bis hundert dreisig mark pro zimmer)
		(SIMPX und dann gibt es ein zentralhotel)
		(SIMPX das ist wirklich auch sehr zentral)
		(SIMPX
			(VF das)
			(LK geht)
			[01;33m(PX (MF (PX[00m (MF so bis zweihundert zwanzig)
			[01;31m(NX[00m
				(KON und)
				[01;31m(PX[00m
					(ADVX naturlich) [01;33mPX)[00m
					(ADVX jetzt)
					(PX fur gehobene anspruche)[01;31m)[00m [01;33mMF) PX)[00m
				(NX das grandhotel)[01;31m)[00m)
		[01;31m(SIMPX[00m
			(VF da)
			(LK musten)
			(MF sie allerdings schon funfhundert mark)
			(VC hinlegen)[01;31m)[00m
		[01;36m(SIMPX[00m
			(C wobei)
			(SIMPX ich weis ja nicht ob das)[01;36m)[00m))
Step:Co-ordination
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'KON', 'PX', 'NX'], 'mover info': [('KON', (46, 47)), ('PX', (47, 52))], 'old_family': ['KON', 'PX', 'NX'], 'start left siblings': [], 'auto preterminals': ('PDS', 'VVFIN', 'ADV', 'APPR', 'CARD', 'CARD', 'KON', 'ADV', 'ADV', 'APPR', 'ADJA', 'NN', 'ART', 'NE'), 'start right siblings': ['NX'], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (40, 54), 'adding node already present': False, 'movers': ['KON', 'PX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': ['NX'], 'classified_type': 'Co-ordination', 'type': 'move', 'added label': 'SIMPX'}
(TOP
	(TURN
		(DM ja)
		(DM also)
		(SIMPX wir haben hier jetzt drei hotels die wir wieder gerne empfehlen)
		[01;31m(LV[00m
			[01;31m(NX[00m
				(PX zum einen)
				(NX das hotel am thielenplatz)[01;31m)[00m[01;31m)[00m
		(SIMPX das liegt so bis hundert dreisig mark pro zimmer)
		(SIMPX und dann gibt es ein zentralhotel)
		(SIMPX das ist wirklich auch sehr zentral)
		(SIMPX
			(VF das)
			(LK geht)
			[01;36m(PX[00m
				(MF [01;33m(PX[00m
					(MF so bis zweihundert zwanzig)
					(KON und)
					[01;31m(PX[00m
						(ADVX naturlich) [01;33mPX)[00m
						(ADVX jetzt)
						(PX fur gehobene anspruche)[01;31m)[00m)[01;36m)[00m
			(NX das grandhotel))
		[01;31m(SIMPX[00m
			(VF da)
			(LK musten)
			(MF sie allerdings schon funfhundert mark)
			(VC hinlegen)[01;31m)[00m
		[01;36m(SIMPX[00m
			(C wobei)
			(SIMPX ich weis ja nicht ob das)[01;36m)[00m))
Step:Co-ordination
{'new_parent': 'PX', 'new_family': ['MF', 'KON', 'ADVX', 'ADVX', 'PX'], 'mover info': [('MF', (42, 46)), ('KON', (46, 47))], 'old_family': ['MF', 'KON', 'PX'], 'start left siblings': [], 'auto preterminals': ('ADV', 'APPR', 'CARD', 'CARD', 'KON', 'ADV', 'ADV', 'APPR', 'ADJA', 'NN'), 'start right siblings': ['PX'], 'end left siblings': [], 'auto preterminal span': (42, 52), 'adding node already present': False, 'movers': ['MF', 'KON'], 'old_parent': 'MF', 'added and moved': True, 'end right siblings': ['ADVX', 'ADVX', 'PX'], 'classified_type': 'Co-ordination', 'type': 'move', 'added label': 'SIMPX'}
(TOP
	(TURN
		(DM ja)
		(DM also)
		(SIMPX wir haben hier jetzt drei hotels die wir wieder gerne empfehlen)
		[01;31m(LV[00m
			[01;31m(NX[00m
				(PX zum einen)
				(NX das hotel am thielenplatz)[01;31m)[00m[01;31m)[00m
		(SIMPX das liegt so bis hundert dreisig mark pro zimmer)
		(SIMPX und dann gibt es ein zentralhotel)
		(SIMPX das ist wirklich auch sehr zentral)
		(SIMPX das geht so bis zweihundert zwanzig und naturlich jetzt fur gehobene anspruche das grandhotel)
		[01;31m(SIMPX[00m
			(VF da)
			(LK musten)
			(MF sie allerdings schon funfhundert mark)
			(VC hinlegen)[01;31m)[00m
		[01;36m(SIMPX[00m
			(C wobei)
			(SIMPX ich weis ja nicht ob das)[01;36m)[00m))
Step:Clause Attachment
{'subtrees': ['C', 'SIMPX'], 'family': ['DM', 'DM', 'SIMPX', 'LV', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PWAV', 'PPER', 'VVFIN', 'ADV', 'PTKNEG', 'KOUS', 'PDS'), 'right siblings': [], 'left siblings': [(DM (PTKANT ja)), (DM (ADVX (ADV also))), (SIMPX (VF (NX (PPER wir))) (LK (VXFIN (VAFIN haben))) (MF (ADVX (ADV hier)) (ADVX (ADV jetzt)) (NX (ADJX (CARD drei)) (NN hotels))) (NF (R (C (NX (PRELS die))) (MF (NX (PPER wir)) (ADVX (ADV wieder)) (ADVX (ADV gerne))) (VC (VXFIN (VVFIN empfehlen)))))), (LV (NX (PX (APPRART zum) (NX (PIS einen))) (NX (NX (ART das) (NN hotel)) (PX (APPRART am) (NX (NE thielenplatz)))))), (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VVFIN liegt))) (MF (PX (PX (ADVX (ADV so)) (APPR bis) (NX (ADJX (CARD hundert) (CARD dreisig)) (NN mark))) (PX (APPR pro) (NX (NN zimmer)))))), (SIMPX (KOORD (KON und)) (VF (ADVX (ADV dann))) (LK (VXFIN (VVFIN gibt))) (MF (NX (PPER es)) (NX (ART ein) (NE zentralhotel)))), (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VAFIN ist))) (MF (ADVX (ADV wirklich)) (ADVX (ADV auch)) (ADJX (ADVX (ADV sehr)) (ADJD zentral)))), (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VVFIN geht))) (MF (PX (PX (MF (PX (ADVX (ADV so)) (APPR bis) (NX (CARD zweihundert) (CARD zwanzig)))) (KON und) (ADVX (ADV naturlich))) (ADVX (ADV jetzt)) (PX (APPR fur) (NX (ADJX (ADJA gehobene)) (NN anspruche))))) (NX (ART das) (NE grandhotel))), (SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VMFIN musten))) (MF (NX (PPER sie)) (ADVX (ADV allerdings)) (ADVX (ADV schon)) (NX (ADJX (CARD funfhundert)) (NN mark))) (VC (VXINF (VVINF hinlegen))))], 'auto preterminal span': (62, 69), 'span': (62, 69), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM also)
		(SIMPX wir haben hier jetzt drei hotels die wir wieder gerne empfehlen)
		[01;31m(LV[00m
			[01;31m(NX[00m
				(PX zum einen)
				(NX das hotel am thielenplatz)[01;31m)[00m[01;31m)[00m
		(SIMPX das liegt so bis hundert dreisig mark pro zimmer)
		(SIMPX und dann gibt es ein zentralhotel)
		(SIMPX das ist wirklich auch sehr zentral)
		(SIMPX das geht so bis zweihundert zwanzig und naturlich jetzt fur gehobene anspruche das grandhotel)
		[01;31m(SIMPX[00m
			(VF da)
			(LK musten)
			(MF sie allerdings schon funfhundert mark)
			(VC hinlegen)[01;31m)[00m
		(SIMPX wobei ich weis ja nicht ob das)))
Step:Unary
{'subtrees': ['NX'], 'family': ['DM', 'DM', 'SIMPX', 'LV', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADV', 'PPER', 'VAFIN', 'ADV', 'ADV', 'CARD', 'NN', 'PRELS', 'PPER', 'ADV', 'ADV', 'VVFIN', 'APPRART', 'PIS', 'ART', 'NN', 'APPRART', 'NE', 'PDS', 'VVFIN', 'ADV', 'APPR', 'CARD', 'CARD', 'NN', 'APPR', 'NN', 'KON', 'ADV', 'VVFIN', 'PPER', 'ART', 'NE', 'PDS', 'VAFIN', 'ADV', 'ADV', 'ADV', 'ADJD', 'PDS', 'VVFIN', 'ADV', 'APPR', 'CARD', 'CARD', 'KON', 'ADV', 'ADV', 'APPR', 'ADJA', 'NN', 'ART', 'NE', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'CARD', 'NN', 'VVINF', 'PWAV', 'PPER', 'VVFIN', 'ADV', 'PTKNEG', 'KOUS', 'PDS'), 'right siblings': ['SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 69), 'span': (13, 19), 'left siblings': ['DM', 'DM', 'SIMPX'], 'label': 'LV', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM also)
		(SIMPX wir haben hier jetzt drei hotels die wir wieder gerne empfehlen)
		[01;31m(NX[00m
			(PX zum einen)
			(NX das hotel am thielenplatz)[01;31m)[00m
		(SIMPX das liegt so bis hundert dreisig mark pro zimmer)
		(SIMPX und dann gibt es ein zentralhotel)
		(SIMPX das ist wirklich auch sehr zentral)
		(SIMPX das geht so bis zweihundert zwanzig und naturlich jetzt fur gehobene anspruche das grandhotel)
		[01;31m(SIMPX[00m
			(VF da)
			(LK musten)
			(MF sie allerdings schon funfhundert mark)
			(VC hinlegen)[01;31m)[00m
		(SIMPX wobei ich weis ja nicht ob das)))
Step:UNSET remove
{'subtrees': ['PX', 'NX'], 'family': ['DM', 'DM', 'SIMPX', 'NX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADV', 'PPER', 'VAFIN', 'ADV', 'ADV', 'CARD', 'NN', 'PRELS', 'PPER', 'ADV', 'ADV', 'VVFIN', 'APPRART', 'PIS', 'ART', 'NN', 'APPRART', 'NE', 'PDS', 'VVFIN', 'ADV', 'APPR', 'CARD', 'CARD', 'NN', 'APPR', 'NN', 'KON', 'ADV', 'VVFIN', 'PPER', 'ART', 'NE', 'PDS', 'VAFIN', 'ADV', 'ADV', 'ADV', 'ADJD', 'PDS', 'VVFIN', 'ADV', 'APPR', 'CARD', 'CARD', 'KON', 'ADV', 'ADV', 'APPR', 'ADJA', 'NN', 'ART', 'NE', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'CARD', 'NN', 'VVINF', 'PWAV', 'PPER', 'VVFIN', 'ADV', 'PTKNEG', 'KOUS', 'PDS'), 'right siblings': ['SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 69), 'span': (13, 19), 'left siblings': ['DM', 'DM', 'SIMPX'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM also)
		(SIMPX wir haben hier jetzt drei hotels die wir wieder gerne empfehlen)
		(PX zum einen)
		(NX das hotel am thielenplatz)
		(SIMPX das liegt so bis hundert dreisig mark pro zimmer)
		(SIMPX und dann gibt es ein zentralhotel)
		(SIMPX das ist wirklich auch sehr zentral)
		(SIMPX das geht so bis zweihundert zwanzig und naturlich jetzt fur gehobene anspruche das grandhotel)
		[01;31m(SIMPX[00m
			(VF da)
			(LK musten)
			(MF sie allerdings schon funfhundert mark)
			(VC hinlegen)[01;31m)[00m
		(SIMPX wobei ich weis ja nicht ob das)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['DM', 'DM', 'SIMPX', 'PX', 'NX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADV', 'PPER', 'VAFIN', 'ADV', 'ADV', 'CARD', 'NN', 'PRELS', 'PPER', 'ADV', 'ADV', 'VVFIN', 'APPRART', 'PIS', 'ART', 'NN', 'APPRART', 'NE', 'PDS', 'VVFIN', 'ADV', 'APPR', 'CARD', 'CARD', 'NN', 'APPR', 'NN', 'KON', 'ADV', 'VVFIN', 'PPER', 'ART', 'NE', 'PDS', 'VAFIN', 'ADV', 'ADV', 'ADV', 'ADJD', 'PDS', 'VVFIN', 'ADV', 'APPR', 'CARD', 'CARD', 'KON', 'ADV', 'ADV', 'APPR', 'ADJA', 'NN', 'ART', 'NE', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'CARD', 'NN', 'VVINF', 'PWAV', 'PPER', 'VVFIN', 'ADV', 'PTKNEG', 'KOUS', 'PDS'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 69), 'span': (54, 62), 'left siblings': ['DM', 'DM', 'SIMPX', 'PX', 'NX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ja also wir haben hier jetzt drei hotels die wir wieder gerne empfehlen zum einen das hotel am thielenplatz das liegt so bis hundert dreisig mark pro zimmer und dann gibt es ein zentralhotel das ist wirklich auch sehr zentral das geht so bis zweihundert zwanzig und naturlich jetzt fur gehobene anspruche das grandhotel da musten sie allerdings schon funfhundert mark hinlegen wobei ich weis ja nicht ob das)

Sentence 283:
0 Initial errors
0 on fringe, 0 iterations

Sentence 284:
0 Initial errors
0 on fringe, 0 iterations

Sentence 285:
0 Initial errors
0 on fringe, 0 iterations

Sentence 286:
4 Initial errors
0 on fringe, 3 iterations
2 Error:Single Word Phrase
1 Error:Modifier Attachment
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		[01;31m(ADVX[00m
			[01;36m(DM[00m [01;31m(ADVX[00m
				(ADV naturlich)[01;31m)[00m[01;36m)[00m
			(ADVX da)[01;31m)[00m
		[01;31m(PX[00m
			(ADVX grade)
			(PX am wochenende)[01;31m)[00m))
Step:Single Word Phrase
{'family': ['DM', 'ADVX'], 'auto preterminal span': (1, 2), 'span': (1, 2), 'subtrees': ['ADV'], 'parent': 'ADVX', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'DM')}
(TOP
	(TURN
		(DM ja)
		[01;31m(ADVX[00m
			(DM naturlich)
			(ADVX da)[01;31m)[00m
		[01;31m(PX[00m
			(ADVX grade)
			(PX am wochenende)[01;31m)[00m))
Step:Modifier Attachment
{'subtrees': ['DM', 'ADVX'], 'family': ['DM', 'ADVX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADV', 'ADV', 'ADV', 'APPRART', 'NN'), 'right siblings': ['PX'], 'parent': 'TURN', 'auto preterminal span': (0, 6), 'span': (1, 3), 'left siblings': ['DM'], 'label': 'ADVX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM naturlich)
		(ADVX da)
		[01;31m(PX[00m
			(ADVX grade)
			(PX am wochenende)[01;31m)[00m))
Step:PP Attachment
{'subtrees': ['ADVX', 'PX'], 'family': ['DM', 'DM', 'ADVX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADV', 'ADV', 'ADV', 'APPRART', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 6), 'span': (3, 6), 'left siblings': ['DM', 'DM', 'ADVX'], 'label': 'PX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP ja naturlich da grade am wochenende)

Sentence 287:
0 Initial errors
0 on fringe, 0 iterations

Sentence 288:
0 Initial errors
0 on fringe, 0 iterations

Sentence 289:
0 Initial errors
0 on fringe, 0 iterations

Sentence 290:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		[01;31m(DM[00m
			(NX
				(NX schonen dank)
				(PX fur den anruf))[01;31m)[00m))
Step:Unary
{'subtrees': ['NX'], 'family': ['DM', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADJA', 'NN', 'APPR', 'ART', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 6), 'span': (1, 6), 'left siblings': ['DM'], 'label': 'DM', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja schonen dank fur den anruf)

Sentence 291:
0 Initial errors
0 on fringe, 0 iterations

Sentence 292:
0 Initial errors
0 on fringe, 0 iterations

Sentence 293:
7 Initial errors
0 on fringe, 5 iterations
3 Error:NP Attachment
1 Error:Modifier Attachment
1 Error:Modifier Attachment
1 Error:UNSET add
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX
			(VF da)
			(LK fahren)
			[01;31m(MF[00m
				(ADVX erst)
				(ADVX mal)
				[01;33m(NX[00m (NX verschiedene zuge)[01;31m)[00m
			[01;36m(ADVX[00m [01;31m(NF[00m [01;33m(NX[00m
				(NX drei)
				[01;31m(ADVX[00m
					[01;36m(ADVX[00m
						(ADVX morgens)
						(ADVX mittags) [01;33mNX)[00m[01;36m)[00m
					(KON und)
					(ADVX abends)[01;31m)[00m[01;31m)[00m[01;36m)[00m) [01;33mNX)[00m
		(SIMPX da konnten sie sich schon mal auswahlen)))
Step:NP Attachment
{'new_parent': 'ADVX', 'new_family': ['NX', 'ADVX', 'ADVX', 'KON', 'ADVX'], 'mover info': [('NX', (6, 7))], 'old_family': ['NX', 'ADVX'], 'start left siblings': [], 'auto preterminals': ('CARD', 'ADV', 'ADV', 'KON', 'ADV'), 'start right siblings': ['ADVX'], 'end left siblings': [], 'auto preterminal span': (6, 11), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'NF', 'POS confusion': ('CARD', 'CARD'), 'added and moved': True, 'end right siblings': ['ADVX', 'ADVX', 'KON', 'ADVX'], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'ADVX'}
(TOP
	(TURN
		(SIMPX
			(VF da)
			(LK fahren)
			[01;31m(MF[00m
				(ADVX erst)
				(ADVX mal)
				[01;33m(NX[00m (NX verschiedene zuge)[01;31m)[00m
			[01;31m(NF[00m
				(ADVX
					(NX
						(NX drei)
						[01;36m(ADVX[00m
							(ADVX morgens)
							(ADVX mittags)[01;36m)[00m)
					(KON und)
					(ADVX abends))[01;31m)[00m) [01;33mNX)[00m
		(SIMPX da konnten sie sich schon mal auswahlen)))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'ADVX'], 'family': ['NX', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV'), 'right siblings': [], 'left siblings': [(NX (CARD drei))], 'auto preterminal span': (7, 9), 'span': (7, 9), 'parent': 'NX', 'label': 'ADVX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		(SIMPX
			(VF da)
			(LK fahren)
			[01;31m(MF[00m
				(ADVX erst)
				(ADVX mal)
				[01;33m(NX[00m (NX verschiedene zuge)[01;31m)[00m
			[01;31m(NF[00m
				(ADVX
					(NX drei morgens mittags)
					(KON und)
					(ADVX abends))[01;31m)[00m) [01;33mNX)[00m
		(SIMPX da konnten sie sich schon mal auswahlen)))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'ADVX', 'NX'], 'family': ['VF', 'LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN', 'ADV', 'ADV', 'ADJA', 'NN', 'CARD', 'ADV', 'ADV', 'KON', 'ADV'), 'right siblings': ['NF'], 'parent': 'SIMPX', 'auto preterminal span': (0, 11), 'span': (2, 6), 'left siblings': ['VF', 'LK'], 'label': 'MF', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX
			(VF da)
			(LK fahren)
			(ADVX erst)
			(ADVX mal)
			[01;36m(NX[00m
				(NX verschiedene zuge)
				[01;31m(NF[00m
					(ADVX
						(NX drei morgens mittags)
						(KON und)
						(ADVX abends))[01;31m)[00m[01;36m)[00m)
		(SIMPX da konnten sie sich schon mal auswahlen)))
Step:UNSET add
{'subtrees': ['NX', 'NF'], 'family': ['VF', 'LK', 'ADVX', 'ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJA', 'NN', 'CARD', 'ADV', 'ADV', 'KON', 'ADV'), 'right siblings': [], 'left siblings': [(VF (ADVX (ADV da))), (LK (VXFIN (VVFIN fahren))), (ADVX (ADV erst)), (ADVX (ADV mal))], 'auto preterminal span': (4, 11), 'span': (4, 11), 'parent': 'SIMPX', 'label': 'NX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SIMPX
			(VF da)
			(LK fahren)
			(ADVX erst)
			(ADVX mal)
			(NX
				(NX verschiedene zuge)
				[01;31m(NF[00m
					(ADVX
						(NX drei morgens mittags)
						(KON und)
						(ADVX abends))[01;31m)[00m))
		(SIMPX da konnten sie sich schon mal auswahlen)))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['NX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJA', 'NN', 'CARD', 'ADV', 'ADV', 'KON', 'ADV'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (4, 11), 'span': (6, 11), 'left siblings': ['NX'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP da fahren erst mal verschiedene zuge drei morgens mittags und abends da konnten sie sich schon mal auswahlen)

Sentence 294:
0 Initial errors
0 on fringe, 0 iterations

Sentence 295:
8 Initial errors
0 on fringe, 6 iterations
3 Error:Modifier Attachment
1 Error:Single Word Phrase
1 Error:Single Word Phrase
1 Error:Modifier Attachment
1 Error:UNSET remove
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(NX[00m
			[01;36m(KOORD[00m
				(KON und)[01;36m)[00m
			(ADVX dann)
			[01;31m(NX[00m
				(NX diese zwei nachte)
				(R die sie da bleiben mochten)[01;31m)[00m[01;31m)[00m
		(SIMPX da wurde ich mal nachschauen)
		(SIMPX da haben wir verschiedene preisklassen)
		(SIMPX
			(VF und zwar)
			(LK gibt)
			(MF
				(NX es)
				(APPR zwischen)
				(PX
					(PX von funfundachtzig)
					(PX
						[01;31m(PX[00m
							(APPR bis)
							[01;36m(ADJX[00m [01;31m(NX[00m [01;33m(NX[00m
								(CARD funfhundert)[01;31m)[00m[01;36m)[00m[01;31m)[00m
						[01;31m(ADVX[00m
							(ADV aufwarts)[01;31m)[00m)))))) [01;33mNX)[00m
Step:Modifier Attachment
{'new_parent': 'NX', 'new_family': ['CARD', 'ADVX'], 'mover info': [('ADVX', (29, 30))], 'old_family': ['PX', 'ADVX'], 'start left siblings': ['PX'], 'auto preterminals': ('APPR', 'CARD', 'ADV'), 'start right siblings': [], 'end left siblings': ['CARD'], 'auto preterminal span': (27, 30), 'movers': ['ADVX'], 'old_parent': 'PX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;31m(NX[00m
			[01;36m(KOORD[00m
				(KON und)[01;36m)[00m
			(ADVX dann)
			[01;31m(NX[00m
				(NX diese zwei nachte)
				(R die sie da bleiben mochten)[01;31m)[00m[01;31m)[00m
		(SIMPX da wurde ich mal nachschauen)
		(SIMPX da haben wir verschiedene preisklassen)
		(SIMPX
			(VF und zwar)
			(LK gibt)
			(MF
				(NX es)
				(APPR zwischen)
				(PX
					(PX von funfundachtzig)
					(PX
						(APPR bis)
						(NX
							[01;36m(ADJX[00m
								(CARD funfhundert)[01;36m)[00m
							[01;31m(ADVX[00m
								(ADV aufwarts)[01;31m)[00m)))))))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['KOORD', 'ADVX', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON',), 'right siblings': [(ADVX (ADV dann)), (NX (NX (PDAT diese) (ADJX (CARD zwei)) (NN nachte)) (R (C (NX (PRELS die))) (MF (NX (PPER sie)) (ADVX (ADV da))) (VC (VXINF (VVINF bleiben)) (VXFIN (VMFIN mochten)))))], 'left siblings': [], 'auto preterminal span': (0, 1), 'span': (0, 1), 'parent': 'NX', 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		[01;31m(NX[00m
			(KOORD und)
			(ADVX dann)
			[01;31m(NX[00m
				(NX diese zwei nachte)
				(R die sie da bleiben mochten)[01;31m)[00m[01;31m)[00m
		(SIMPX da wurde ich mal nachschauen)
		(SIMPX da haben wir verschiedene preisklassen)
		(SIMPX
			(VF und zwar)
			(LK gibt)
			(MF
				(NX es)
				(APPR zwischen)
				(PX
					(PX von funfundachtzig)
					(PX
						(APPR bis)
						(NX
							[01;36m(ADJX[00m
								(CARD funfhundert)[01;36m)[00m
							[01;31m(ADVX[00m
								(ADV aufwarts)[01;31m)[00m)))))))
Step:Single Word Phrase
{'subtrees': ['CARD'], 'family': ['ADJX', 'ADVX'], 'over_word': True, 'over words': True, 'auto preterminals': ('CARD',), 'right siblings': [(ADVX (ADV aufwarts))], 'left siblings': [], 'auto preterminal span': (28, 29), 'span': (28, 29), 'parent': 'NX', 'label': 'ADJX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		[01;31m(NX[00m
			(KOORD und)
			(ADVX dann)
			[01;31m(NX[00m
				(NX diese zwei nachte)
				(R die sie da bleiben mochten)[01;31m)[00m[01;31m)[00m
		(SIMPX da wurde ich mal nachschauen)
		(SIMPX da haben wir verschiedene preisklassen)
		(SIMPX
			(VF und zwar)
			(LK gibt)
			(MF
				(NX es)
				(APPR zwischen)
				(PX
					(PX von funfundachtzig)
					(PX
						(APPR bis)
						(NX
							(ADJX funfhundert)
							[01;31m(ADVX[00m
								(ADV aufwarts)[01;31m)[00m)))))))
Step:Modifier Attachment
{'subtrees': ['KOORD', 'ADVX', 'NX'], 'family': ['NX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'ADV', 'PDAT', 'CARD', 'NN', 'PRELS', 'PPER', 'ADV', 'VVINF', 'VMFIN', 'ADV', 'VAFIN', 'PPER', 'ADV', 'VVINF', 'ADV', 'VAFIN', 'PPER', 'ADJA', 'NN', 'KON', 'ADV', 'VVFIN', 'PPER', 'APPR', 'APPR', 'CARD', 'APPR', 'CARD', 'ADV'), 'right siblings': ['SIMPX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 30), 'span': (0, 10), 'left siblings': [], 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(KOORD und)
		(ADVX dann)
		[01;31m(NX[00m
			(NX diese zwei nachte)
			(R die sie da bleiben mochten)[01;31m)[00m
		(SIMPX da wurde ich mal nachschauen)
		(SIMPX da haben wir verschiedene preisklassen)
		(SIMPX
			(VF und zwar)
			(LK gibt)
			(MF
				(NX es)
				(APPR zwischen)
				(PX
					(PX von funfundachtzig)
					(PX
						(APPR bis)
						(NX
							(ADJX funfhundert)
							[01;31m(ADVX[00m
								(ADV aufwarts)[01;31m)[00m)))))))
Step:UNSET remove
{'subtrees': ['NX', 'R'], 'family': ['KOORD', 'ADVX', 'NX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'ADV', 'PDAT', 'CARD', 'NN', 'PRELS', 'PPER', 'ADV', 'VVINF', 'VMFIN', 'ADV', 'VAFIN', 'PPER', 'ADV', 'VVINF', 'ADV', 'VAFIN', 'PPER', 'ADJA', 'NN', 'KON', 'ADV', 'VVFIN', 'PPER', 'APPR', 'APPR', 'CARD', 'APPR', 'CARD', 'ADV'), 'right siblings': ['SIMPX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 30), 'span': (2, 10), 'left siblings': ['KOORD', 'ADVX'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(KOORD und)
		(ADVX dann)
		(NX diese zwei nachte)
		(R die sie da bleiben mochten)
		(SIMPX da wurde ich mal nachschauen)
		(SIMPX da haben wir verschiedene preisklassen)
		(SIMPX
			(VF und zwar)
			(LK gibt)
			(MF
				(NX es)
				(APPR zwischen)
				(PX
					(PX von funfundachtzig)
					(PX
						(APPR bis)
						(NX
							(ADJX funfhundert)
							[01;31m(ADVX[00m
								(ADV aufwarts)[01;31m)[00m)))))))
Step:Single Word Phrase
{'subtrees': ['ADV'], 'family': ['ADJX', 'ADVX'], 'over_word': True, 'over words': True, 'auto preterminals': ('CARD', 'ADV'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (28, 30), 'span': (29, 30), 'left siblings': ['ADJX'], 'label': 'ADVX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP und dann diese zwei nachte die sie da bleiben mochten da wurde ich mal nachschauen da haben wir verschiedene preisklassen und zwar gibt es zwischen von funfundachtzig bis funfhundert aufwarts)

Sentence 296:
9 Initial errors
0 on fringe, 5 iterations
2 Error:Single Word Phrase
2 Error:Single Word Phrase
2 Error:Single Word Phrase
2 Error:UNSET move
1 Error:NP Internal Structure
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX es kann schon eine gehobene preisklasse sein)
		(SIMPX
			(KOORD und)
			[01;36m(ADJX[00m
				(VF
					[01;31m(NX[00m
						(NN hauptsache)[01;31m)[00m)[01;36m)[00m
			(LK ist)
			(NF
				(SIMPX
					[01;36m(NX[00m [01;31m(C[00m
						(KOUS das)[01;31m)[00m[01;36m)[00m
					(MF
						[01;31m(NX[00m
							(ART das)
							[01;36m(NX[00m
								(NN [01;33m(NX[00m hotel)[01;36m)[00m[01;31m)[00m
						[01;36m(NX[00m [01;31m(ADJX[00m
							(ADJD zentral)[01;31m)[00m[01;36m)[00m) [01;33mNX)[00m
					(VC liegt))))))
Step:Single Word Phrase
{'family': ['ADJX'], 'auto preterminal span': (8, 9), 'span': (8, 9), 'subtrees': ['NN'], 'parent': 'VF', 'over_word': True, 'auto preterminals': ('NN',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('NX', 'ADJX')}
(TOP
	(TURN
		(SIMPX es kann schon eine gehobene preisklasse sein)
		(SIMPX
			(KOORD und)
			(VF hauptsache)
			(LK ist)
			(NF
				(SIMPX
					[01;36m(NX[00m [01;31m(C[00m
						(KOUS das)[01;31m)[00m[01;36m)[00m
					(MF
						[01;31m(NX[00m
							(ART das)
							[01;36m(NX[00m
								(NN [01;33m(NX[00m hotel)[01;36m)[00m[01;31m)[00m
						[01;36m(NX[00m [01;31m(ADJX[00m
							(ADJD zentral)[01;31m)[00m[01;36m)[00m) [01;33mNX)[00m
					(VC liegt))))))
Step:Single Word Phrase
{'family': ['NX', 'MF', 'VC'], 'auto preterminal span': (10, 11), 'span': (10, 11), 'subtrees': ['KOUS'], 'parent': 'SIMPX', 'over_word': True, 'auto preterminals': ('KOUS',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('C', 'NX')}
(TOP
	(TURN
		(SIMPX es kann schon eine gehobene preisklasse sein)
		(SIMPX
			(KOORD und)
			(VF hauptsache)
			(LK ist)
			(NF
				(SIMPX
					(NX das)
					(MF
						[01;31m(NX[00m
							(ART das)
							[01;36m(NX[00m
								(NN [01;33m(NX[00m hotel)[01;36m)[00m[01;31m)[00m
						[01;36m(NX[00m [01;31m(ADJX[00m
							(ADJD zentral)[01;31m)[00m[01;36m)[00m) [01;33mNX)[00m
					(VC liegt))))))
Step:Single Word Phrase
{'family': ['NX', 'NX'], 'auto preterminal span': (13, 14), 'span': (13, 14), 'subtrees': ['ADJD'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('ADJD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'NX')}
(TOP
	(TURN
		(SIMPX es kann schon eine gehobene preisklasse sein)
		(SIMPX
			(KOORD und)
			(VF hauptsache)
			(LK ist)
			(NF
				(SIMPX
					(NX das)
					(MF
						[01;31m(NX[00m
							(ART das)
							[01;36m(NX[00m
								(NN [01;33m(NX[00m hotel)[01;36m)[00m[01;31m)[00m
						(NX zentral)) [01;33mNX)[00m
					(VC liegt))))))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['ART', 'NX', 'NX'], 'mover info': [('ART', (11, 12))], 'old_family': ['ART', 'NN'], 'start left siblings': [], 'auto preterminals': ('ART', 'NN', 'ADJD'), 'start right siblings': ['NN'], 'end left siblings': [], 'auto preterminal span': (11, 14), 'movers': ['ART'], 'old_parent': 'NX', 'POS confusion': ('ART', 'ART'), 'end right siblings': ['NX', 'NX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SIMPX es kann schon eine gehobene preisklasse sein)
		(SIMPX
			(KOORD und)
			(VF hauptsache)
			(LK ist)
			(NF
				(SIMPX
					(NX das)
					(MF
						(ART das)
						[01;36m(NX[00m
							(NX hotel)
							(NX zentral)[01;36m)[00m)
					(VC liegt))))))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['ART', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'ADJD'), 'right siblings': [], 'left siblings': [(ART das)], 'auto preterminal span': (12, 14), 'span': (12, 14), 'parent': 'MF', 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'add'}
(TOP es kann schon eine gehobene preisklasse sein und hauptsache ist das das hotel zentral liegt)

Sentence 297:
0 Initial errors
0 on fringe, 0 iterations

Sentence 298:
0 Initial errors
0 on fringe, 0 iterations

Sentence 299:
0 Initial errors
0 on fringe, 0 iterations

Sentence 300:
0 Initial errors
0 on fringe, 0 iterations

Sentence 301:
1 Initial errors
0 on fringe, 1 iterations
1 Error:NP Internal Structure
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM einen moment)
		(SIMPX da mus ich erst mal mein portemonnaie aufmachen)
		(SIMPX
			(VF die kontonummer)
			(LK ist)
			(MF
				(NX
					(NX neun)
					[01;36m(NX[00m
						(NX vier)
						(NX sechs)[01;36m)[00m
					(NX zwo)
					(NX drei)
					(NX acht))))))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['NX', 'NX', 'NX', 'NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'CARD'), 'right siblings': [(NX (CARD zwo)), (NX (CARD drei)), (NX (CARD acht))], 'left siblings': [(NX (CARD neun))], 'auto preterminal span': (15, 17), 'span': (15, 17), 'parent': 'NX', 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'add'}
(TOP ja einen moment da mus ich erst mal mein portemonnaie aufmachen die kontonummer ist neun vier sechs zwo drei acht)

Sentence 302:
0 Initial errors
0 on fringe, 0 iterations

Sentence 303:
0 Initial errors
0 on fringe, 0 iterations

Sentence 304:
0 Initial errors
0 on fringe, 0 iterations

Sentence 305:
0 Initial errors
0 on fringe, 0 iterations

Sentence 306:
0 Initial errors
0 on fringe, 0 iterations

Sentence 307:
8 Initial errors
0 on fringe, 7 iterations
2 Error:UNSET move
1 Error:UNSET add
1 Error:Clause Attachment
1 Error:Single Word Phrase
1 Error:Co-ordination
1 Error:UNSET remove
1 Error:UNSET add
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM aha)
		(DM ach gut)
		(SIMPX
			[01;36m(SIMPX[00m
				(VF das)
				(LK hort)
				(MF sich immer so)
				(VC an)[01;36m)[00m
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					[01;31m(C[00m
						(KOUS als)
						(KOUS [01;33m(SIMPX[00m ob)[01;31m)[00m
					(MF [01;33m(MF[00m
						(NX das)
						[01;31m(NX[00m
							[01;31m(NX[00m
								(NX nix) [01;33mMF)[00m
								(NX halbes)[01;31m)[00m
							(KON und)
							(NX nix ganzes)[01;31m)[00m)
					(VC ist)[01;31m)[00m[01;31m)[00m) [01;33mSIMPX)[00m
		(SIMPX oder wie sehe ich das)))
Step:UNSET move
{'new_parent': 'NF', 'new_family': ['KOUS', 'SIMPX'], 'mover info': [('KOUS', (9, 10))], 'old_family': ['KOUS', 'KOUS'], 'start left siblings': [], 'auto preterminals': ('KOUS', 'KOUS', 'PDS', 'PIS', 'NN', 'KON', 'PIS', 'NN', 'VAFIN'), 'start right siblings': ['KOUS'], 'end left siblings': [], 'auto preterminal span': (9, 18), 'movers': ['KOUS'], 'old_parent': 'C', 'POS confusion': ('KOUS', 'KOUS'), 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM aha)
		(DM ach gut)
		(SIMPX
			[01;36m(SIMPX[00m
				(VF das)
				(LK hort)
				(MF sich immer so)
				(VC an)[01;36m)[00m
			[01;31m(NF[00m
				(KOUS als)
				(SIMPX
					[01;31m(C[00m
						(KOUS ob)[01;31m)[00m
					(MF [01;33m(MF[00m
						(NX das)
						[01;31m(NX[00m
							[01;31m(NX[00m
								(NX nix) [01;33mMF)[00m
								(NX halbes)[01;31m)[00m
							(KON und)
							(NX nix ganzes)[01;31m)[00m)
					(VC ist))[01;31m)[00m)
		(SIMPX oder wie sehe ich das)))
Step:UNSET add
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['SIMPX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VVFIN', 'PRF', 'ADV', 'ADV', 'PTKVZ'), 'right siblings': [(NF (KOUS als) (SIMPX (C (KOUS ob)) (MF (NX (PDS das)) (NX (NX (NX (PIS nix)) (NX (NN halbes))) (KON und) (NX (NX (PIS nix)) (NX (NN ganzes))))) (VC (VXFIN (VAFIN ist)))))], 'left siblings': [], 'auto preterminal span': (3, 9), 'span': (3, 9), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM aha)
		(DM ach gut)
		(SIMPX
			(SIMPX das hort sich immer so an)
			[01;31m(NF[00m
				(KOUS als)
				(SIMPX
					[01;31m(C[00m
						(KOUS ob)[01;31m)[00m
					(MF [01;33m(MF[00m
						(NX das)
						[01;31m(NX[00m
							[01;31m(NX[00m
								(NX nix) [01;33mMF)[00m
								(NX halbes)[01;31m)[00m
							(KON und)
							(NX nix ganzes)[01;31m)[00m)
					(VC ist))[01;31m)[00m)
		(SIMPX oder wie sehe ich das)))
Step:Clause Attachment
{'subtrees': ['KOUS', 'SIMPX'], 'family': ['SIMPX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VVFIN', 'PRF', 'ADV', 'ADV', 'PTKVZ', 'KOUS', 'KOUS', 'PDS', 'PIS', 'NN', 'KON', 'PIS', 'NN', 'VAFIN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (3, 18), 'span': (9, 18), 'left siblings': ['SIMPX'], 'label': 'NF', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM aha)
		(DM ach gut)
		(SIMPX
			(SIMPX das hort sich immer so an)
			(KOUS als)
			(SIMPX
				[01;31m(C[00m
					(KOUS ob)[01;31m)[00m
				(MF [01;33m(MF[00m
					(NX das)
					[01;31m(NX[00m
						[01;31m(NX[00m
							(NX nix) [01;33mMF)[00m
							(NX halbes)[01;31m)[00m
						(KON und)
						(NX nix ganzes)[01;31m)[00m)
				(VC ist)))
		(SIMPX oder wie sehe ich das)))
Step:Single Word Phrase
{'subtrees': ['KOUS'], 'family': ['C', 'MF', 'VC'], 'over_word': True, 'over words': True, 'auto preterminals': ('KOUS', 'PDS', 'PIS', 'NN', 'KON', 'PIS', 'NN', 'VAFIN'), 'right siblings': ['MF', 'VC'], 'parent': 'SIMPX', 'auto preterminal span': (10, 18), 'span': (10, 11), 'left siblings': [], 'label': 'C', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(DM aha)
		(DM ach gut)
		(SIMPX
			(SIMPX das hort sich immer so an)
			(KOUS als)
			(SIMPX
				(KOUS ob)
				(MF [01;33m(MF[00m
					(NX das)
					[01;31m(NX[00m
						[01;31m(NX[00m
							(NX nix) [01;33mMF)[00m
							(NX halbes)[01;31m)[00m
						(KON und)
						(NX nix ganzes)[01;31m)[00m)
				(VC ist)))
		(SIMPX oder wie sehe ich das)))
Step:Co-ordination
{'subtrees': ['NX', 'NX'], 'family': ['NX', 'KON', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PIS', 'NN', 'KON', 'PIS', 'NN'), 'right siblings': ['KON', 'NX'], 'parent': 'NX', 'auto preterminal span': (12, 17), 'span': (12, 14), 'left siblings': [], 'label': 'NX', 'classified_type': 'Co-ordination', 'type': 'remove'}
(TOP
	(TURN
		(DM aha)
		(DM ach gut)
		(SIMPX
			(SIMPX das hort sich immer so an)
			(KOUS als)
			(SIMPX
				(KOUS ob)
				(MF [01;33m(MF[00m
					(NX das)
					[01;31m(NX[00m
						(NX nix) [01;33mMF)[00m
						(NX halbes)
						(KON und)
						(NX nix ganzes)[01;31m)[00m)
				(VC ist)))
		(SIMPX oder wie sehe ich das)))
Step:UNSET remove
{'subtrees': ['NX', 'NX', 'KON', 'NX'], 'family': ['NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'PIS', 'NN', 'KON', 'PIS', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (11, 17), 'span': (12, 17), 'left siblings': ['NX'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM aha)
		(DM ach gut)
		(SIMPX
			(SIMPX das hort sich immer so an)
			(KOUS als)
			(SIMPX
				(KOUS ob)
				(MF
					[01;36m(MF[00m
						(NX das)
						(NX nix)[01;36m)[00m
					(NX halbes)
					(KON und)
					(NX nix ganzes))
				(VC ist)))
		(SIMPX oder wie sehe ich das)))
Step:UNSET add
{'subtrees': ['NX', 'NX'], 'family': ['MF', 'NX', 'KON', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'PIS'), 'right siblings': [(NX (NN halbes)), (KON und), (NX (NX (PIS nix)) (NX (NN ganzes)))], 'left siblings': [], 'auto preterminal span': (11, 13), 'span': (11, 13), 'parent': 'MF', 'label': 'MF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP aha ach gut das hort sich immer so an als ob das nix halbes und nix ganzes ist oder wie sehe ich das)

Sentence 308:
11 Initial errors
0 on fringe, 5 iterations
4 Error:UNSET move
4 Error:NP Attachment
1 Error:Clause Attachment
1 Error:Single Word Phrase
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM nein)
		(SIMPX
			(VF jetzt)
			(LK habe)
			[01;36m(MF[00m
				[01;31m(MF[00m
					(NX ich)
					[01;31m(NX[00m [01;33m(NX[00m
						(PDS das)[01;31m)[00m[01;31m)[00m
				[01;31m(VC[00m
					[01;31m(VXINF[00m
						(VVPP vermerkt)[01;31m)[00m[01;31m)[00m[01;36m)[00m) [01;33mNX)[00m
		[01;31m(SIMPX[00m [01;33m(SIMPX (SIMPX[00m
			(KOORD und)
			(VF ich)
			(LK schicke)
			[01;31m(MF[00m
				[01;36m(MF[00m
					(NX ihnen)
					(ADVX dann) [01;33mSIMPX)[00m[01;36m)[00m
				(SIMPX wenn sie mir ihre adresse grade noch geben wurden) [01;33mSIMPX)[00m
				(NX das)[01;31m)[00m[01;31m)[00m))
Step:UNSET move
{'new_parent': 'NX', 'new_family': ['PDS', 'VC'], 'mover info': [('VC', (5, 6))], 'old_family': ['VF', 'LK', 'MF', 'VC'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'PDS', 'VVPP'), 'start right siblings': [], 'end left siblings': ['PDS'], 'auto preterminal span': (1, 6), 'movers': ['VC'], 'old_parent': 'SIMPX', 'POS confusion': ('VVPP', 'VVPP'), 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM nein)
		(SIMPX
			(VF jetzt)
			(LK habe)
			(MF
				(NX ich)
				(NX
					(PDS das)
					[01;31m(VC[00m
						[01;31m(VXINF[00m
							(VVPP vermerkt)[01;31m)[00m[01;31m)[00m)))
		[01;31m(SIMPX[00m [01;33m(SIMPX (SIMPX[00m
			(KOORD und)
			(VF ich)
			(LK schicke)
			[01;31m(MF[00m
				[01;36m(MF[00m
					(NX ihnen)
					(ADVX dann) [01;33mSIMPX)[00m[01;36m)[00m
				(SIMPX wenn sie mir ihre adresse grade noch geben wurden) [01;33mSIMPX)[00m
				(NX das)[01;31m)[00m[01;31m)[00m))
Step:NP Attachment
{'new_parent': 'TURN', 'new_family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'NX'], 'mover info': [('SIMPX', (11, 20)), ('NX', (20, 21))], 'old_family': ['NX', 'ADVX', 'SIMPX', 'NX'], 'start left siblings': ['NX', 'ADVX'], 'auto preterminals': ('PTKANT', 'ADV', 'VAFIN', 'PPER', 'PDS', 'VVPP', 'KON', 'PPER', 'VVFIN', 'PPER', 'ADV', 'KOUS', 'PPER', 'PPER', 'PPOSAT', 'NN', 'ADV', 'ADV', 'VVINF', 'VAFIN', 'PDS'), 'start right siblings': [], 'end left siblings': ['DM', 'SIMPX', 'SIMPX'], 'auto preterminal span': (0, 21), 'movers': ['SIMPX', 'NX'], 'old_parent': 'MF', 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM nein)
		(SIMPX
			(VF jetzt)
			(LK habe)
			(MF
				(NX ich)
				(NX
					(PDS das)
					[01;31m(VC[00m
						[01;31m(VXINF[00m
							(VVPP vermerkt)[01;31m)[00m[01;31m)[00m)))
		[01;36m(SIMPX[00m
			(SIMPX und ich schicke ihnen dann)
			(SIMPX wenn sie mir ihre adresse grade noch geben wurden)[01;36m)[00m
		(NX das)))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['DM', 'SIMPX', 'SIMPX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'PPER', 'VVFIN', 'PPER', 'ADV', 'KOUS', 'PPER', 'PPER', 'PPOSAT', 'NN', 'ADV', 'ADV', 'VVINF', 'VAFIN'), 'right siblings': [(NX (PDS das))], 'left siblings': [(DM (PTKANT nein)), (SIMPX (VF (ADVX (ADV jetzt))) (LK (VXFIN (VAFIN habe))) (MF (NX (PPER ich)) (NX (PDS das) (VC (VXINF (VVPP vermerkt))))))], 'auto preterminal span': (6, 20), 'span': (6, 20), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM nein)
		(SIMPX
			(VF jetzt)
			(LK habe)
			(MF
				(NX ich)
				(NX
					(PDS das)
					[01;31m(VC[00m
						[01;31m(VXINF[00m
							(VVPP vermerkt)[01;31m)[00m[01;31m)[00m)))
		(SIMPX und ich schicke ihnen dann wenn sie mir ihre adresse grade noch geben wurden)
		(NX das)))
Step:Single Word Phrase
{'subtrees': ['VVPP'], 'family': ['VXINF'], 'over_word': True, 'over words': True, 'auto preterminals': ('VVPP',), 'right siblings': [], 'parent': 'VC', 'auto preterminal span': (5, 6), 'span': (5, 6), 'left siblings': [], 'label': 'VXINF', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(DM nein)
		(SIMPX
			(VF jetzt)
			(LK habe)
			(MF
				(NX ich)
				(NX
					(PDS das)
					[01;31m(VC[00m
						(VVPP vermerkt)[01;31m)[00m)))
		(SIMPX und ich schicke ihnen dann wenn sie mir ihre adresse grade noch geben wurden)
		(NX das)))
Step:Single Word Phrase
{'subtrees': ['VVPP'], 'family': ['PDS', 'VC'], 'over_word': True, 'over words': True, 'auto preterminals': ('PDS', 'VVPP'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (4, 6), 'span': (5, 6), 'left siblings': ['PDS'], 'label': 'VC', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP nein jetzt habe ich das vermerkt und ich schicke ihnen dann wenn sie mir ihre adresse grade noch geben wurden das)

Sentence 309:
8 Initial errors
0 on fringe, 5 iterations
3 Error:NP Attachment
2 Error:Single Word Phrase
1 Error:UNSET remove
1 Error:NP Internal Structure
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF da)
			(LK ist)
			(MF
				[01;31m(NX[00m
					[01;31m(NX[00m
						[01;31m(NX[00m
							[01;36m(ADVX[00m [01;31m(ADJX[00m
								(ADJA hirschberger)[01;31m)[00m[01;36m)[00m
							(NN strase)[01;31m)[00m
						[01;33m(NX[00m (NX vierundsechzig)[01;31m)[00m
					(PX
						(APPR in)
						(NX
							[01;31m(NX[00m
								(NX funf)
								(NX drei)
								(NX eins)
								(NX eins)
								[01;31m(NX[00m
									(CARD neun)[01;31m)[00m[01;31m)[00m
							(NE bonn)))[01;31m)[00m)))) [01;33mNX)[00m
Step:NP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'NX'], 'mover info': [('NX', (3, 5))], 'old_family': ['NX', 'NX'], 'start left siblings': [], 'auto preterminals': ('ADJA', 'NN', 'CARD', 'APPR', 'CARD', 'CARD', 'CARD', 'CARD', 'CARD', 'NE'), 'start right siblings': ['NX'], 'end left siblings': [], 'auto preterminal span': (3, 13), 'movers': ['NX'], 'old_parent': 'NX', 'end right siblings': ['NX'], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF da)
			(LK ist)
			(MF
				[01;31m(NX[00m
					[01;36m(ADVX[00m [01;31m(ADJX[00m
						(ADJA hirschberger)[01;31m)[00m[01;36m)[00m
					(NN strase)[01;31m)[00m
				(NX
					(NX vierundsechzig)
					(PX
						(APPR in)
						(NX
							[01;31m(NX[00m
								(NX funf)
								(NX drei)
								(NX eins)
								(NX eins)
								[01;31m(NX[00m
									(CARD neun)[01;31m)[00m[01;31m)[00m
							(NE bonn))))))))
Step:Single Word Phrase
{'family': ['ADVX', 'NN'], 'auto preterminal span': (3, 4), 'span': (3, 4), 'subtrees': ['ADJA'], 'parent': 'NX', 'over_word': True, 'auto preterminals': ('ADJA',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'ADVX')}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF da)
			(LK ist)
			(MF
				[01;31m(NX[00m
					(ADVX hirschberger)
					(NN strase)[01;31m)[00m
				(NX
					(NX vierundsechzig)
					(PX
						(APPR in)
						(NX
							[01;31m(NX[00m
								(NX funf)
								(NX drei)
								(NX eins)
								(NX eins)
								[01;31m(NX[00m
									(CARD neun)[01;31m)[00m[01;31m)[00m
							(NE bonn))))))))
Step:UNSET remove
{'subtrees': ['ADVX', 'NN'], 'family': ['NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJA', 'NN', 'CARD', 'APPR', 'CARD', 'CARD', 'CARD', 'CARD', 'CARD', 'NE'), 'right siblings': ['NX'], 'parent': 'MF', 'auto preterminal span': (3, 13), 'span': (3, 5), 'left siblings': [], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF da)
			(LK ist)
			(MF
				(ADVX hirschberger)
				(NN strase)
				(NX
					(NX vierundsechzig)
					(PX
						(APPR in)
						(NX
							[01;31m(NX[00m
								(NX funf)
								(NX drei)
								(NX eins)
								(NX eins)
								[01;31m(NX[00m
									(CARD neun)[01;31m)[00m[01;31m)[00m
							(NE bonn))))))))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX', 'NX', 'NX', 'NX'], 'family': ['NX', 'NE'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'CARD', 'CARD', 'CARD', 'CARD', 'NE'), 'right siblings': ['NE'], 'parent': 'NX', 'auto preterminal span': (7, 13), 'span': (7, 12), 'left siblings': [], 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF da)
			(LK ist)
			(MF
				(ADVX hirschberger)
				(NN strase)
				(NX
					(NX vierundsechzig)
					(PX
						(APPR in)
						(NX
							(NX funf)
							(NX drei)
							(NX eins)
							(NX eins)
							[01;31m(NX[00m
								(CARD neun)[01;31m)[00m
							(NE bonn))))))))
Step:Single Word Phrase
{'subtrees': ['CARD'], 'family': ['NX', 'NX', 'NX', 'NX', 'NX', 'NE'], 'over_word': True, 'over words': True, 'auto preterminals': ('CARD', 'CARD', 'CARD', 'CARD', 'CARD', 'NE'), 'right siblings': ['NE'], 'parent': 'NX', 'auto preterminal span': (7, 13), 'span': (11, 12), 'left siblings': ['NX', 'NX', 'NX', 'NX'], 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP ja da ist hirschberger strase vierundsechzig in funf drei eins eins neun bonn)

Sentence 310:
0 Initial errors
0 on fringe, 0 iterations

Sentence 311:
0 Initial errors
0 on fringe, 0 iterations

Sentence 312:
11 Initial errors
0 on fringe, 6 iterations
6 Error:Co-ordination
1 Error:Unary
1 Error:Single Word Phrase
1 Error:Clause Attachment
1 Error:UNSET add
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(NX[00m
			(ADVX erst)
			(ADVX mal)
			(NX die frage)
			[01;33m(SIMPX (NF[00m (SIMPX wie sie anreisen mochten)[01;31m)[00m
		[01;31m(SIMPX[00m [01;33m(SIMPX (NF[00m
			(C ob)
			(MF sie mit der bahn)
			(VC fahren)
			[01;31m(NF[00m
				[01;31m(PX[00m
					[01;36m(NF[00m
						[01;36m(PX[00m
							(KON oder)
							(PX mit dem bus) [01;33mNF) SIMPX) NF) SIMPX)[00m[01;36m)[00m[01;36m)[00m
					[01;36m(DM[00m
						(KON oder)[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Co-ordination
{'new_parent': 'TURN', 'new_family': ['NX', 'SIMPX', 'KON'], 'mover info': [('KON', (18, 19))], 'old_family': ['KON', 'PX', 'KON'], 'start left siblings': ['KON', 'PX'], 'auto preterminals': ('ADV', 'ADV', 'ART', 'NN', 'KOUS', 'PPER', 'VVINF', 'VMFIN', 'KOUS', 'PPER', 'APPR', 'ART', 'NN', 'VVFIN', 'KON', 'APPR', 'ART', 'NN', 'KON'), 'start right siblings': [], 'end left siblings': ['NX', 'SIMPX'], 'auto preterminal span': (0, 19), 'movers': ['KON'], 'old_parent': 'PX', 'POS confusion': ('KON', 'KON'), 'end right siblings': [], 'classified_type': 'Co-ordination', 'type': 'move'}
(TOP
	(TURN
		[01;31m(NX[00m
			(ADVX erst)
			(ADVX mal)
			(NX die frage)
			[01;33m(SIMPX (NF[00m (SIMPX wie sie anreisen mochten)[01;31m)[00m
		[01;36m(NF[00m
			(SIMPX
				(C ob)
				(MF sie mit der bahn)
				(VC fahren)
				(NF oder mit dem bus)) [01;33mNF) SIMPX)[00m[01;36m)[00m
		[01;36m(DM[00m
			(KON oder)[01;36m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['NX', 'NF', 'KON'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'APPR', 'ART', 'NN', 'VVFIN', 'KON', 'APPR', 'ART', 'NN'), 'right siblings': [(KON oder)], 'left siblings': [(NX (ADVX (ADV erst)) (ADVX (ADV mal)) (NX (ART die) (NN frage)) (SIMPX (C (KOUS wie)) (MF (NX (PPER sie))) (VC (VXINF (VVINF anreisen)) (VXFIN (VMFIN mochten)))))], 'auto preterminal span': (8, 18), 'span': (8, 18), 'parent': 'TURN', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		[01;31m(NX[00m
			(ADVX erst)
			(ADVX mal)
			(NX die frage)
			[01;33m(SIMPX (NF[00m (SIMPX wie sie anreisen mochten)[01;31m)[00m
		(NF ob sie mit der bahn fahren oder mit dem bus) [01;33mNF) SIMPX)[00m
		[01;36m(DM[00m
			(KON oder)[01;36m)[00m))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['NX', 'NF', 'DM'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON',), 'right siblings': [], 'left siblings': [(NX (ADVX (ADV erst)) (ADVX (ADV mal)) (NX (ART die) (NN frage)) (SIMPX (C (KOUS wie)) (MF (NX (PPER sie))) (VC (VXINF (VVINF anreisen)) (VXFIN (VMFIN mochten))))), (NF (SIMPX (C (KOUS ob)) (MF (NX (PPER sie)) (PX (APPR mit) (NX (ART der) (NN bahn)))) (VC (VXFIN (VVFIN fahren))) (NF (PX (KON oder) (PX (APPR mit) (NX (ART dem) (NN bus)))))))], 'auto preterminal span': (18, 19), 'span': (18, 19), 'parent': 'TURN', 'label': 'DM', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		[01;31m(NX[00m
			(ADVX erst)
			(ADVX mal)
			(NX die frage)
			[01;33m(SIMPX (NF[00m (SIMPX wie sie anreisen mochten)[01;31m)[00m
		(NF ob sie mit der bahn fahren oder mit dem bus) [01;33mNF) SIMPX)[00m
		(DM oder)))
Step:Clause Attachment
{'subtrees': ['ADVX', 'ADVX', 'NX', 'SIMPX'], 'family': ['NX', 'NF', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'ART', 'NN', 'KOUS', 'PPER', 'VVINF', 'VMFIN', 'KOUS', 'PPER', 'APPR', 'ART', 'NN', 'VVFIN', 'KON', 'APPR', 'ART', 'NN', 'KON'), 'right siblings': ['NF', 'DM'], 'parent': 'TURN', 'auto preterminal span': (0, 19), 'span': (0, 8), 'left siblings': [], 'label': 'NX', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(ADVX erst)
		(ADVX mal)
		(NX die frage)
		[01;36m(NF[00m
			[01;36m(SIMPX[00m
				(SIMPX wie sie anreisen mochten)
				(NF ob sie mit der bahn fahren oder mit dem bus)[01;36m)[00m[01;36m)[00m
		(DM oder)))
Step:UNSET add
{'subtrees': ['SIMPX', 'NF'], 'family': ['ADVX', 'ADVX', 'NX', 'SIMPX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'VVINF', 'VMFIN', 'KOUS', 'PPER', 'APPR', 'ART', 'NN', 'VVFIN', 'KON', 'APPR', 'ART', 'NN'), 'right siblings': [(DM (KON oder))], 'left siblings': [(ADVX (ADV erst)), (ADVX (ADV mal)), (NX (ART die) (NN frage))], 'auto preterminal span': (4, 18), 'span': (4, 18), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(ADVX erst)
		(ADVX mal)
		(NX die frage)
		[01;36m(NF[00m
			(SIMPX
				(SIMPX wie sie anreisen mochten)
				(NF ob sie mit der bahn fahren oder mit dem bus))[01;36m)[00m
		(DM oder)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['ADVX', 'ADVX', 'NX', 'NF', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'VVINF', 'VMFIN', 'KOUS', 'PPER', 'APPR', 'ART', 'NN', 'VVFIN', 'KON', 'APPR', 'ART', 'NN'), 'right siblings': [(DM (KON oder))], 'left siblings': [(ADVX (ADV erst)), (ADVX (ADV mal)), (NX (ART die) (NN frage))], 'auto preterminal span': (4, 18), 'span': (4, 18), 'parent': 'TURN', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP erst mal die frage wie sie anreisen mochten ob sie mit der bahn fahren oder mit dem bus oder)

Sentence 313:
3 Initial errors
0 on fringe, 2 iterations
2 Error:Modifier Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF ich)
			(LK dachte)
			(MF
				(NX mir)
				[01;31m(PX[00m
					(ADVX moglichst)
					[01;36m(NF[00m
						[01;36m(PX[00m
							(APPR mit)
							(NX der bahn)[01;36m)[00m[01;36m)[00m[01;31m)[00m))))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'ADVX', 'PX'], 'mover info': [('ADVX', (4, 5))], 'old_family': ['ADVX', 'APPR', 'NX'], 'start left siblings': [], 'auto preterminals': ('PRF', 'ADV', 'APPR', 'ART', 'NN'), 'start right siblings': ['APPR', 'NX'], 'end left siblings': ['NX'], 'auto preterminal span': (3, 8), 'movers': ['ADVX'], 'old_parent': 'PX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['PX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF ich)
			(LK dachte)
			(MF
				(NX mir)
				(ADVX moglichst)
				[01;36m(NF[00m
					(PX
						(APPR mit)
						(NX der bahn))[01;36m)[00m))))
Step:Unary
{'subtrees': ['PX'], 'family': ['NX', 'ADVX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NN'), 'right siblings': [], 'left siblings': [(NX (PRF mir)), (ADVX (ADV moglichst))], 'auto preterminal span': (5, 8), 'span': (5, 8), 'parent': 'MF', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP ja ich dachte mir moglichst mit der bahn)

Sentence 314:
0 Initial errors
0 on fringe, 0 iterations

Sentence 315:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(ADVX
			[01;36m(ADVX[00m [01;31m(ADJX[00m
				(ADJD lieber)[01;31m)[00m[01;36m)[00m
			(ADVX gern)
			(ADVX morgens))))
Step:Single Word Phrase
{'family': ['ADVX', 'ADVX', 'ADVX'], 'auto preterminal span': (0, 1), 'span': (0, 1), 'subtrees': ['ADJD'], 'parent': 'ADVX', 'over_word': True, 'auto preterminals': ('ADJD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'ADVX')}
(TOP lieber gern morgens)

Sentence 316:
0 Initial errors
0 on fringe, 0 iterations

Sentence 317:
0 Initial errors
0 on fringe, 0 iterations

Sentence 318:
0 Initial errors
0 on fringe, 0 iterations

Sentence 319:
0 Initial errors
0 on fringe, 0 iterations

Sentence 320:
0 Initial errors
0 on fringe, 0 iterations

Sentence 321:
0 Initial errors
0 on fringe, 0 iterations

Sentence 322:
0 Initial errors
0 on fringe, 0 iterations

Sentence 323:
0 Initial errors
0 on fringe, 0 iterations

Sentence 324:
0 Initial errors
0 on fringe, 0 iterations

Sentence 325:
0 Initial errors
0 on fringe, 0 iterations

Sentence 326:
1 Initial errors
0 on fringe, 1 iterations
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM nee)
		(SIMPX das musten sie)
		(SIMPX
			(VF das)
			(LK musten)
			[01;31m(FKOORD[00m
				(MVC sie schon selber zum zum bahnhof bringen)
				(KON und)
				(MVCN von da aus dann halt transportieren lassen vielleicht)[01;31m)[00m)))
Step:UNSET remove
{'subtrees': ['MVC', 'KON', 'MVCN'], 'family': ['VF', 'LK', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VMFIN', 'PPER', 'ADV', 'ADV', 'APPRART', 'APPRART', 'NN', 'VVINF', 'KON', 'APPR', 'ADV', 'APZR', 'ADV', 'ADV', 'VVINF', 'VVINF', 'ADV'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (4, 22), 'span': (6, 22), 'left siblings': ['VF', 'LK'], 'label': 'FKOORD', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP nee das musten sie das musten sie schon selber zum zum bahnhof bringen und von da aus dann halt transportieren lassen vielleicht)

Sentence 327:
0 Initial errors
0 on fringe, 0 iterations

Sentence 328:
1 Initial errors
0 on fringe, 1 iterations
1 Error:UNSET add
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM sicher)
		(DM herr klein)
		(SIMPX ich mache das fertig)
		(SIMPX
			(KOORD und)
			[01;36m(SIMPX[00m
				(VF dann)
				(LK werde)
				(MF ich sie noch mal)
				(VC anrufen)[01;36m)[00m)))
Step:UNSET add
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['KOORD', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'PPER', 'ADV', 'ADV', 'VVINF'), 'right siblings': [], 'left siblings': [(KOORD (KON und))], 'auto preterminal span': (9, 16), 'span': (9, 16), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP ja sicher herr klein ich mache das fertig und dann werde ich sie noch mal anrufen)

Sentence 329:
0 Initial errors
0 on fringe, 0 iterations

Sentence 330:
1 Initial errors
0 on fringe, 1 iterations
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(SIMPX mochten sie auf jeden fall mit der bahn fahren)
			(KON oder)
			[01;31m(SIMPX[00m
				(LK sollen)
				(MF wir nicht lieber)
				(VC fliegen)[01;31m)[00m)))
Step:UNSET remove
{'subtrees': ['LK', 'MF', 'VC'], 'family': ['SIMPX', 'KON', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VMFIN', 'PPER', 'APPR', 'PIDAT', 'NN', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'VMFIN', 'PPER', 'PTKNEG', 'ADV', 'VVINF'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (1, 16), 'span': (11, 16), 'left siblings': ['SIMPX', 'KON'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ja mochten sie auf jeden fall mit der bahn fahren oder sollen wir nicht lieber fliegen)

Sentence 331:
0 Initial errors
0 on fringe, 0 iterations

Sentence 332:
0 Initial errors
0 on fringe, 0 iterations

Sentence 333:
0 Initial errors
0 on fringe, 0 iterations

Sentence 334:
0 Initial errors
0 on fringe, 0 iterations

Sentence 335:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF ich)
			(LK wurde)
			(VC sagen)
			(NF
				(SIMPX
					(VF wir)
					(LK wurden)
					(MF
						[01;36m(ADVX[00m [01;31m(ADJX[00m
							(ADJD besser)[01;31m)[00m[01;36m)[00m
						(ADJX ziemlich fruh))
					(VC fahren)
					(NF damit wir morgens direkt da sind und dann direkt auf die messe losgehen konnen))))))
Step:Single Word Phrase
{'family': ['ADVX', 'ADJX'], 'auto preterminal span': (6, 7), 'span': (6, 7), 'subtrees': ['ADJD'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('ADJD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'ADVX')}
(TOP ja ich wurde sagen wir wurden besser ziemlich fruh fahren damit wir morgens direkt da sind und dann direkt auf die messe losgehen konnen)

Sentence 336:
0 Initial errors
0 on fringe, 0 iterations

Sentence 337:
0 Initial errors
0 on fringe, 0 iterations

Sentence 338:
0 Initial errors
0 on fringe, 0 iterations

Sentence 339:
0 Initial errors
0 on fringe, 0 iterations

Sentence 340:
0 Initial errors
0 on fringe, 0 iterations

Sentence 341:
0 Initial errors
0 on fringe, 0 iterations

Sentence 342:
0 Initial errors
0 on fringe, 0 iterations

Sentence 343:
0 Initial errors
0 on fringe, 0 iterations

Sentence 344:
0 Initial errors
0 on fringe, 0 iterations

Sentence 345:
0 Initial errors
0 on fringe, 0 iterations

Sentence 346:
0 Initial errors
0 on fringe, 0 iterations

Sentence 347:
0 Initial errors
0 on fringe, 0 iterations

Sentence 348:
0 Initial errors
0 on fringe, 0 iterations

Sentence 349:
0 Initial errors
0 on fringe, 0 iterations

Sentence 350:
0 Initial errors
0 on fringe, 0 iterations

Sentence 351:
0 Initial errors
0 on fringe, 0 iterations

Sentence 352:
0 Initial errors
0 on fringe, 0 iterations

Sentence 353:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		[01;31m(DM[00m
			[01;36m(DM[00m
				(ITJ tschus)[01;36m)[00m
			(ADVX dann)[01;31m)[00m))
Step:Modifier Attachment
{'new_parent': 'TURN', 'new_family': ['DM', 'DM', 'ADVX'], 'mover info': [('ADVX', (2, 3))], 'old_family': ['ITJ', 'ADVX'], 'start left siblings': ['ITJ'], 'auto preterminals': ('PTKANT', 'ITJ', 'ADV'), 'start right siblings': [], 'end left siblings': ['DM', 'DM'], 'auto preterminal span': (0, 3), 'movers': ['ADVX'], 'old_parent': 'DM', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP ja tschus dann)

Sentence 354:
0 Initial errors
0 on fringe, 0 iterations

Sentence 355:
0 Initial errors
0 on fringe, 0 iterations

Sentence 356:
0 Initial errors
0 on fringe, 0 iterations

Sentence 357:
0 Initial errors
0 on fringe, 0 iterations

Sentence 358:
0 Initial errors
0 on fringe, 0 iterations

Sentence 359:
5 Initial errors
0 on fringe, 1 iterations
5 Error:NP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SIMPX[00m
	(TOP [01;33m(VF (NX[00m
		(TURN
			(NX geschaft)
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(NX
						(NN geschaft))[01;31m)[00m [01;33mNX) VF)[00m
				(LK ist)
				(MF geschaft)[01;31m)[00m))[01;36m)[00m
Step:NP Attachment
{'new_parent': 'VF', 'new_family': ['NX', 'NX'], 'mover info': [('NX', (0, 1))], 'old_family': ['NX', 'SIMPX'], 'start left siblings': [], 'auto preterminals': ('NN', 'NN', 'VAFIN', 'NN'), 'start right siblings': ['SIMPX'], 'end left siblings': [], 'auto preterminal span': (0, 4), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'TURN', 'POS confusion': ('NN', 'NN'), 'added and moved': True, 'end right siblings': ['NX'], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'NX'}
(TOP geschaft geschaft ist geschaft)

Sentence 360:
3 Initial errors
0 on fringe, 2 iterations
2 Error:Single Word Phrase
1 Error:UNSET add
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(NX
			[01;36m(ADJX[00m [01;31m(ADVX[00m
				(ADV ungefahr)[01;31m)[00m[01;36m)[00m
			[01;36m(NX[00m
				(ADJX zweihundert dreisig)
				(NN mark)[01;36m)[00m)))
Step:Single Word Phrase
{'family': ['ADJX', 'ADJX', 'NN'], 'auto preterminal span': (0, 1), 'span': (0, 1), 'subtrees': ['ADV'], 'parent': 'NX', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'ADJX')}
(TOP
	(TURN
		(NX
			(ADJX ungefahr)
			[01;36m(NX[00m
				(ADJX zweihundert dreisig)
				(NN mark)[01;36m)[00m)))
Step:UNSET add
{'subtrees': ['ADJX', 'NN'], 'family': ['ADJX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'CARD', 'NN'), 'right siblings': [], 'left siblings': [(ADJX (ADV ungefahr))], 'auto preterminal span': (1, 4), 'span': (1, 4), 'parent': 'NX', 'label': 'NX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP ungefahr zweihundert dreisig mark)

Sentence 361:
0 Initial errors
0 on fringe, 0 iterations

Sentence 362:
0 Initial errors
0 on fringe, 0 iterations

Sentence 363:
0 Initial errors
0 on fringe, 0 iterations

Sentence 364:
0 Initial errors
0 on fringe, 0 iterations

Sentence 365:
0 Initial errors
0 on fringe, 0 iterations

Sentence 366:
11 Initial errors
0 on fringe, 6 iterations
4 Error:UNSET move
3 Error:PP Attachment
1 Error:UNSET add
1 Error:NP Internal Structure
1 Error:Single Word Phrase
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX
			(VF da)
			(LK kann)
			(MF
				(NX ich)
				(NX ihnen)
				(NX
					(ART das)
					[01;31m(NX[00m
						(NX grandhotel)
						[01;31m(NX[00m
							(NE musmann)[01;31m)[00m[01;31m)[00m))
			(VC anbieten))
		[01;36m(NX[00m
			(ART [01;33m(NX[00m das)
			[01;31m(NX[00m
				[01;31m(NX[00m
					(ADJX zentrale)
					(NN lage)[01;31m)[00m [01;33mNX)[00m
				(PX mit garage)[01;31m)[00m[01;36m)[00m
		(SIMPX die brauchen sie zwar nicht)
		(SIMPX
			(VF da)
			(LK liegt)
			(MF
				[01;31m(NX[00m
					(NX die preiskategorie)
					[01;31m(PX[00m [01;33m(PX[00m
						(APPR fur)
						[01;33m(NX[00m (NX ein einzelzimmer)[01;31m)[00m[01;31m)[00m
				(PX
					(APPR bei)
					(NX
						(NX hundert achtundsiebzig mark)
						[01;36m(PX[00m
							(APPR bis)
							(NX funfhundert achtzehn mark)[01;36m)[00m)))))) [01;33mNX) PX)[00m
Step:UNSET move
{'new_parent': 'NX', 'new_family': ['ART', 'ADJX', 'NN'], 'mover info': [('ART', (8, 9))], 'old_family': ['SIMPX', 'ART', 'NX', 'SIMPX', 'SIMPX'], 'start left siblings': ['SIMPX'], 'auto preterminals': ('ADV', 'VMFIN', 'PPER', 'PPER', 'ART', 'NE', 'NE', 'VVINF', 'ART', 'ADJA', 'NN', 'APPR', 'NN', 'PDS', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADV', 'VVFIN', 'ART', 'NN', 'APPR', 'ART', 'NN', 'APPR', 'CARD', 'CARD', 'NN', 'APPR', 'CARD', 'CARD', 'NN'), 'start right siblings': ['NX', 'SIMPX', 'SIMPX'], 'end left siblings': [], 'auto preterminal span': (0, 33), 'movers': ['ART'], 'old_parent': 'TURN', 'POS confusion': ('ART', 'ART'), 'end right siblings': ['ADJX', 'NN'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SIMPX
			(VF da)
			(LK kann)
			(MF
				(NX ich)
				(NX ihnen)
				(NX
					(ART das)
					[01;31m(NX[00m
						(NX grandhotel)
						[01;31m(NX[00m
							(NE musmann)[01;31m)[00m[01;31m)[00m))
			(VC anbieten))
		(NX das zentrale lage mit garage)
		(SIMPX die brauchen sie zwar nicht)
		(SIMPX
			(VF da)
			(LK liegt)
			(MF
				[01;31m(NX[00m
					(NX die preiskategorie)
					[01;31m(PX[00m [01;33m(PX[00m
						(APPR fur)
						[01;33m(NX[00m (NX ein einzelzimmer)[01;31m)[00m[01;31m)[00m
				(PX
					(APPR bei)
					(NX
						(NX hundert achtundsiebzig mark)
						[01;36m(PX[00m
							(APPR bis)
							(NX funfhundert achtzehn mark)[01;36m)[00m)))))) [01;33mNX) PX)[00m
Step:PP Attachment
{'new_parent': 'PX', 'new_family': ['APPR', 'NX', 'PX'], 'mover info': [('PX', (25, 33))], 'old_family': ['NX', 'PX'], 'start left siblings': ['NX'], 'auto preterminals': ('ART', 'NN', 'APPR', 'ART', 'NN', 'APPR', 'CARD', 'CARD', 'NN', 'APPR', 'CARD', 'CARD', 'NN'), 'start right siblings': [], 'end left siblings': ['APPR', 'NX'], 'auto preterminal span': (20, 33), 'adding node already present': False, 'movers': ['PX'], 'old_parent': 'MF', 'added and moved': True, 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'PX'}
(TOP
	(TURN
		(SIMPX
			(VF da)
			(LK kann)
			(MF
				(NX ich)
				(NX ihnen)
				(NX
					(ART das)
					[01;31m(NX[00m
						(NX grandhotel)
						[01;31m(NX[00m
							(NE musmann)[01;31m)[00m[01;31m)[00m))
			(VC anbieten))
		(NX das zentrale lage mit garage)
		(SIMPX die brauchen sie zwar nicht)
		(SIMPX
			(VF da)
			(LK liegt)
			(MF
				[01;31m(NX[00m
					(NX die preiskategorie)
					(PX
						(APPR fur)
						(NX
							(NX ein einzelzimmer)
							(PX
								(APPR bei)
								(NX
									(NX hundert achtundsiebzig mark)
									[01;36m(PX[00m
										(APPR bis)
										(NX funfhundert achtzehn mark)[01;36m)[00m))))[01;31m)[00m))))
Step:UNSET add
{'subtrees': ['APPR', 'NX'], 'family': ['NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'CARD', 'CARD', 'NN'), 'right siblings': [], 'left siblings': [(NX (ADJX (CARD hundert) (CARD achtundsiebzig)) (NN mark))], 'auto preterminal span': (29, 33), 'span': (29, 33), 'parent': 'NX', 'label': 'PX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SIMPX
			(VF da)
			(LK kann)
			(MF
				(NX ich)
				(NX ihnen)
				(NX
					(ART das)
					[01;31m(NX[00m
						(NX grandhotel)
						[01;31m(NX[00m
							(NE musmann)[01;31m)[00m[01;31m)[00m))
			(VC anbieten))
		(NX das zentrale lage mit garage)
		(SIMPX die brauchen sie zwar nicht)
		(SIMPX
			(VF da)
			(LK liegt)
			(MF
				[01;31m(NX[00m
					(NX die preiskategorie)
					(PX fur ein einzelzimmer bei hundert achtundsiebzig mark bis funfhundert achtzehn mark)[01;31m)[00m))))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['ART', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NE', 'NE'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (4, 7), 'span': (5, 7), 'left siblings': ['ART'], 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX
			(VF da)
			(LK kann)
			(MF
				(NX ich)
				(NX ihnen)
				(NX
					(ART das)
					(NX grandhotel)
					[01;31m(NX[00m
						(NE musmann)[01;31m)[00m))
			(VC anbieten))
		(NX das zentrale lage mit garage)
		(SIMPX die brauchen sie zwar nicht)
		(SIMPX
			(VF da)
			(LK liegt)
			(MF
				[01;31m(NX[00m
					(NX die preiskategorie)
					(PX fur ein einzelzimmer bei hundert achtundsiebzig mark bis funfhundert achtzehn mark)[01;31m)[00m))))
Step:Single Word Phrase
{'subtrees': ['NE'], 'family': ['ART', 'NX', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ART', 'NE', 'NE'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (4, 7), 'span': (6, 7), 'left siblings': ['ART', 'NX'], 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX da kann ich ihnen das grandhotel musmann anbieten)
		(NX das zentrale lage mit garage)
		(SIMPX die brauchen sie zwar nicht)
		(SIMPX
			(VF da)
			(LK liegt)
			(MF
				[01;31m(NX[00m
					(NX die preiskategorie)
					(PX fur ein einzelzimmer bei hundert achtundsiebzig mark bis funfhundert achtzehn mark)[01;31m)[00m))))
Step:Unary
{'subtrees': ['NX', 'PX'], 'family': ['NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'APPR', 'ART', 'NN', 'APPR', 'CARD', 'CARD', 'NN', 'APPR', 'CARD', 'CARD', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (20, 33), 'span': (20, 33), 'left siblings': [], 'label': 'NX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP da kann ich ihnen das grandhotel musmann anbieten das zentrale lage mit garage die brauchen sie zwar nicht da liegt die preiskategorie fur ein einzelzimmer bei hundert achtundsiebzig mark bis funfhundert achtzehn mark)

Sentence 367:
0 Initial errors
0 on fringe, 0 iterations

Sentence 368:
0 Initial errors
0 on fringe, 0 iterations

Sentence 369:
0 Initial errors
0 on fringe, 0 iterations

Sentence 370:
0 Initial errors
0 on fringe, 0 iterations

Sentence 371:
10 Initial errors
0 on fringe, 4 iterations
4 Error:NP Attachment
4 Error:NP Attachment
1 Error:UNSET remove
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM ja)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK wurde)
			(MF ich aber)
			(VC sagen)
			(NF
				(SIMPX
					(VF ich)
					(LK nehme)
					(MF auf jeden fall mal den hinflug)
					[01;31m(NF[00m
						(ADVX
							(ADV einfach))[01;31m)[00m))[01;31m)[00m
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF das)
			(LK waren)
			[01;31m(MF[00m
				[01;36m(MF[00m
					(ADVX
						(ADV dann)) [01;33mSIMPX)[00m[01;36m)[00m
				[01;36m(SIMPX[00m
					[01;31m(SIMPX[00m
						(VF wieviel)
						(LK sagten)
						[01;31m(MF[00m [01;33m(MF[00m
							(NX
								(PPER sie))[01;31m)[00m[01;31m)[00m
					(NX zweihundert)[01;36m)[00m[01;31m)[00m[01;31m)[00m)) [01;33mMF)[00m
Step:NP Attachment
{'new_parent': 'TURN', 'new_family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'NX'], 'mover info': [('SIMPX', (19, 22)), ('NX', (22, 23))], 'old_family': ['ADVX', 'SIMPX', 'NX'], 'start left siblings': ['ADVX'], 'auto preterminals': ('PTKANT', 'PTKANT', 'ADV', 'VAFIN', 'PPER', 'ADV', 'VVINF', 'PPER', 'VVFIN', 'APPR', 'PIDAT', 'NN', 'ADV', 'ART', 'NN', 'ADV', 'PDS', 'VAFIN', 'ADV', 'PWS', 'VVFIN', 'PPER', 'CARD'), 'start right siblings': [], 'end left siblings': ['DM', 'DM', 'SIMPX', 'SIMPX'], 'auto preterminal span': (0, 23), 'movers': ['SIMPX', 'NX'], 'old_parent': 'MF', 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(DM ja)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK wurde)
			(MF ich aber)
			(VC sagen)
			(NF
				(SIMPX
					(VF ich)
					(LK nehme)
					(MF auf jeden fall mal den hinflug)
					[01;31m(NF[00m
						(ADVX
							(ADV einfach))[01;31m)[00m))[01;31m)[00m
		(SIMPX das waren dann)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF wieviel)
				(LK sagten)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX
						(PPER sie))[01;31m)[00m[01;31m)[00m
			(NX zweihundert)[01;36m)[00m)) [01;33mMF)[00m
Step:NP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'NX'], 'mover info': [('NX', (22, 23))], 'old_family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'NX'], 'start left siblings': ['DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'auto preterminals': ('PTKANT', 'PTKANT', 'ADV', 'VAFIN', 'PPER', 'ADV', 'VVINF', 'PPER', 'VVFIN', 'APPR', 'PIDAT', 'NN', 'ADV', 'ART', 'NN', 'ADV', 'PDS', 'VAFIN', 'ADV', 'PWS', 'VVFIN', 'PPER', 'CARD'), 'start right siblings': [], 'end left siblings': ['NX'], 'auto preterminal span': (0, 23), 'movers': ['NX'], 'old_parent': 'TURN', 'POS confusion': ('CARD', 'CARD'), 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(DM ja)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK wurde)
			(MF ich aber)
			(VC sagen)
			(NF
				(SIMPX
					(VF ich)
					(LK nehme)
					(MF auf jeden fall mal den hinflug)
					[01;31m(NF[00m
						(ADVX
							(ADV einfach))[01;31m)[00m))[01;31m)[00m
		(SIMPX das waren dann)
		(SIMPX wieviel sagten sie zweihundert)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'VC', 'NF'], 'family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PTKANT', 'ADV', 'VAFIN', 'PPER', 'ADV', 'VVINF', 'PPER', 'VVFIN', 'APPR', 'PIDAT', 'NN', 'ADV', 'ART', 'NN', 'ADV', 'PDS', 'VAFIN', 'ADV', 'PWS', 'VVFIN', 'PPER', 'CARD'), 'right siblings': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 23), 'span': (2, 16), 'left siblings': ['DM', 'DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM ja)
		(VF dann)
		(LK wurde)
		(MF ich aber)
		(VC sagen)
		(NF
			(SIMPX
				(VF ich)
				(LK nehme)
				(MF auf jeden fall mal den hinflug)
				[01;31m(NF[00m
					(ADVX
						(ADV einfach))[01;31m)[00m))
		(SIMPX das waren dann)
		(SIMPX wieviel sagten sie zweihundert)))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['VF', 'LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'APPR', 'PIDAT', 'NN', 'ADV', 'ART', 'NN', 'ADV'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (7, 16), 'span': (15, 16), 'left siblings': ['VF', 'LK', 'MF'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja ja dann wurde ich aber sagen ich nehme auf jeden fall mal den hinflug einfach das waren dann wieviel sagten sie zweihundert)

Sentence 372:
0 Initial errors
0 on fringe, 0 iterations

Sentence 373:
4 Initial errors
0 on fringe, 3 iterations
2 Error:Co-ordination
1 Error:Modifier Attachment
1 Error:UNSET add
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP [01;33m(NX[00m
	(TURN
		[01;36m(ADVX[00m
			(NX zweihundert dreisig mark)
			[01;31m(NX[00m
				(KON und)
				[01;31m(NX[00m
					(NX eine einfache fahrt) [01;33mNX)[00m
					(ADVX zuruck)[01;31m)[00m[01;31m)[00m[01;36m)[00m
		(DM ja)))
Step:Co-ordination
{'new_parent': 'TURN', 'new_family': ['NX', 'KON', 'NX', 'DM'], 'mover info': [('KON', (3, 4))], 'old_family': ['KON', 'NX'], 'start left siblings': [], 'auto preterminals': ('CARD', 'CARD', 'NN', 'KON', 'ART', 'ADJA', 'NN', 'ADV', 'PTKANT'), 'start right siblings': ['NX'], 'end left siblings': ['NX'], 'auto preterminal span': (0, 9), 'adding node already present': False, 'movers': ['KON'], 'old_parent': 'NX', 'POS confusion': ('KON', 'KON'), 'added and moved': True, 'end right siblings': ['NX', 'DM'], 'classified_type': 'Co-ordination', 'type': 'move', 'added label': 'ADVX'}
(TOP [01;33m(NX[00m
	(TURN
		(ADVX
			(NX zweihundert dreisig mark)
			(KON und)
			[01;31m(NX[00m
				(NX eine einfache fahrt) [01;33mNX)[00m
				(ADVX zuruck)[01;31m)[00m)
		(DM ja)))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADVX'], 'family': ['NX', 'KON', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'CARD', 'NN', 'KON', 'ART', 'ADJA', 'NN', 'ADV'), 'right siblings': [], 'parent': 'ADVX', 'auto preterminal span': (0, 8), 'span': (4, 8), 'left siblings': ['NX', 'KON'], 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(ADVX
			[01;36m(NX[00m
				(NX zweihundert dreisig mark)
				(KON und)
				(NX eine einfache fahrt)[01;36m)[00m
			(ADVX zuruck))
		(DM ja)))
Step:UNSET add
{'subtrees': ['NX', 'KON', 'NX'], 'family': ['NX', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'CARD', 'NN', 'KON', 'ART', 'ADJA', 'NN'), 'right siblings': [(ADVX (ADV zuruck))], 'left siblings': [], 'auto preterminal span': (0, 7), 'span': (0, 7), 'parent': 'ADVX', 'label': 'NX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP zweihundert dreisig mark und eine einfache fahrt zuruck ja)

Sentence 374:
0 Initial errors
0 on fringe, 0 iterations

Sentence 375:
0 Initial errors
0 on fringe, 0 iterations

Sentence 376:
0 Initial errors
0 on fringe, 0 iterations

Sentence 377:
0 Initial errors
0 on fringe, 0 iterations

Sentence 378:
0 Initial errors
0 on fringe, 0 iterations

Sentence 379:
0 Initial errors
0 on fringe, 0 iterations

Sentence 380:
0 Initial errors
0 on fringe, 0 iterations

Sentence 381:
0 Initial errors
0 on fringe, 0 iterations

Sentence 382:
0 Initial errors
0 on fringe, 0 iterations

Sentence 383:
0 Initial errors
0 on fringe, 0 iterations

Sentence 384:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(DM[00m
			(NX
				(NE meurer))[01;31m)[00m))
Step:Unary
{'subtrees': ['NX'], 'family': ['DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('NE',), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 1), 'span': (0, 1), 'left siblings': [], 'label': 'DM', 'classified_type': 'Unary', 'type': 'remove'}
(TOP meurer)

Sentence 385:
0 Initial errors
0 on fringe, 0 iterations

Sentence 386:
3 Initial errors
0 on fringe, 3 iterations
1 Error:Unary
1 Error:PP Attachment
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;36m(VF[00m
			(PX
				(APPRART im)
				(NX august))[01;36m)[00m
		(DM ja)
		[01;31m(SIMPX[00m
			(LK gibt)
			(MF
				(NX es)
				(ADVX da)
				[01;36m(NX[00m
					(NX einen romantischen termin)
					(PX im august)[01;36m)[00m)[01;31m)[00m))
Step:Unary
{'subtrees': ['PX'], 'family': ['VF', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'NN'), 'right siblings': [(DM (PTKANT ja)), (SIMPX (LK (VXFIN (VVFIN gibt))) (MF (NX (PPER es)) (ADVX (ADV da)) (NX (ART einen) (ADJX (ADJA romantischen)) (NN termin)) (PX (APPRART im) (NX (NN august)))))], 'left siblings': [], 'auto preterminal span': (0, 2), 'span': (0, 2), 'parent': 'TURN', 'label': 'VF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(VF im august)
		(DM ja)
		[01;31m(SIMPX[00m
			(LK gibt)
			(MF
				(NX es)
				(ADVX da)
				[01;36m(NX[00m
					(NX einen romantischen termin)
					(PX im august)[01;36m)[00m)[01;31m)[00m))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['NX', 'ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'ADJA', 'NN', 'APPRART', 'NN'), 'right siblings': [], 'left siblings': [(NX (PPER es)), (ADVX (ADV da))], 'auto preterminal span': (6, 11), 'span': (6, 11), 'parent': 'MF', 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(VF im august)
		(DM ja)
		[01;31m(SIMPX[00m
			(LK gibt)
			(MF es da einen romantischen termin im august)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['VF', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'NN', 'PTKANT', 'VVFIN', 'PPER', 'ADV', 'ART', 'ADJA', 'NN', 'APPRART', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 11), 'span': (3, 11), 'left siblings': ['VF', 'DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP im august ja gibt es da einen romantischen termin im august)

Sentence 387:
3 Initial errors
0 on fringe, 3 iterations
1 Error:UNSET add
1 Error:UNSET remove
1 Error:UNSET add
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX
			(KOORD und)
			(LK wurden)
			(MF
				(NX sie)
				(NX mir)
				(ADVX bitte)
				(ADVX noch)
				(PX [01;33m(NX[00m
					(APPR fur)
					[01;31m(NX[00m
						(NX die nachte) [01;33mNX)[00m
						(APPRART vom)
						(DM also)
						(NX
							(NX dienstag nacht)
							[01;36m(PX[00m
								(APPR bis)
								(NX freitag nacht)[01;36m)[00m)[01;31m)[00m)
				(ADVX noch)
				(NX das hotel))
			(VC buchen))))
Step:UNSET add
{'subtrees': ['APPR', 'NX'], 'family': ['NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'NN', 'ADV'), 'right siblings': [], 'left siblings': [(NX (NX (NN dienstag)) (ADVX (ADV nacht)))], 'auto preterminal span': (13, 16), 'span': (13, 16), 'parent': 'NX', 'label': 'PX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SIMPX
			(KOORD und)
			(LK wurden)
			(MF
				(NX sie)
				(NX mir)
				(ADVX bitte)
				(ADVX noch)
				(PX [01;33m(NX[00m
					(APPR fur)
					[01;31m(NX[00m
						(NX die nachte) [01;33mNX)[00m
						(APPRART vom)
						(DM also)
						(NX dienstag nacht bis freitag nacht)[01;31m)[00m)
				(ADVX noch)
				(NX das hotel))
			(VC buchen))))
Step:UNSET remove
{'subtrees': ['NX', 'APPRART', 'DM', 'NX'], 'family': ['APPR', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NN', 'APPRART', 'ADV', 'NN', 'ADV', 'APPR', 'NN', 'ADV'), 'right siblings': [], 'parent': 'PX', 'auto preterminal span': (6, 16), 'span': (7, 16), 'left siblings': ['APPR'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX
			(KOORD und)
			(LK wurden)
			(MF
				(NX sie)
				(NX mir)
				(ADVX bitte)
				(ADVX noch)
				(PX
					[01;36m(NX[00m
						(APPR fur)
						(NX die nachte)[01;36m)[00m
					(APPRART vom)
					(DM also)
					(NX dienstag nacht bis freitag nacht))
				(ADVX noch)
				(NX das hotel))
			(VC buchen))))
Step:UNSET add
{'subtrees': ['APPR', 'NX'], 'family': ['NX', 'APPRART', 'DM', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NN'), 'right siblings': [(APPRART vom), (DM (ADVX (ADV also))), (NX (NX (NX (NN dienstag)) (ADVX (ADV nacht))) (PX (APPR bis) (NX (NX (NN freitag)) (ADVX (ADV nacht)))))], 'left siblings': [], 'auto preterminal span': (6, 9), 'span': (6, 9), 'parent': 'PX', 'label': 'NX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP und wurden sie mir bitte noch fur die nachte vom also dienstag nacht bis freitag nacht noch das hotel buchen)

Sentence 388:
0 Initial errors
0 on fringe, 0 iterations

Sentence 389:
2 Initial errors
0 on fringe, 1 iterations
2 Error:NP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP [01;33m(PX[00m
	(TURN
		(PX
			(APPR fur)
			[01;31m(NX[00m
				(NX hundert funfundvierzig mark) [01;33mPX)[00m
				(NX das einzelzimmer)[01;31m)[00m)))
Step:NP Attachment
{'new_parent': 'PX', 'new_family': ['APPR', 'NX', 'NX'], 'mover info': [('NX', (1, 4))], 'old_family': ['NX', 'NX'], 'start left siblings': [], 'auto preterminals': ('APPR', 'CARD', 'CARD', 'NN', 'ART', 'NN'), 'start right siblings': ['NX'], 'end left siblings': ['APPR'], 'auto preterminal span': (0, 6), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': ['NX'], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'PX'}
(TOP fur hundert funfundvierzig mark das einzelzimmer)

Sentence 390:
0 Initial errors
0 on fringe, 0 iterations

Sentence 391:
9 Initial errors
0 on fringe, 4 iterations
6 Error:UNSET move
1 Error:Single Word Phrase
1 Error:Single Word Phrase
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM grus gott)
		(DM frau johann)
		(SIMPX
			(VF
				(SIMPX
					(C wenn)
					[01;31m(MF[00m [01;33m(MF[00m
						(NX ich)
						[01;31m(ADJX[00m
							[01;36m(ADJX[00m [01;31m(ADVX[00m
								(ADV richtig)[01;31m)[00m [01;33mMF)[00m[01;36m)[00m
							[01;36m(VXINF[00m
								(ADJD [01;33m(VC[00m informiert)[01;36m)[00m[01;31m)[00m[01;31m)[00m
					[01;31m(VC[00m
						(VXFIN
							(VAFIN bin))[01;31m)[00m)) [01;33mVC)[00m
			(LK musten)
			(MF wir unbedingt eine termin fur eine geschaftsreise nach hannover)
			(VC vereinbaren))
		(DM ja)
		(SIMPX
			(VF die frage)
			(LK ist)
			(NF
				(SIMPX
					(LK haben)
					[01;31m(MF[00m
						(NX sie)
						(NX irgendwelche praferierten termine)
						(PX von sich aus)[01;31m)[00m)))))
Step:UNSET move
{'new_parent': 'VC', 'new_family': ['ADJD', 'VXFIN'], 'mover info': [('ADJD', (7, 8))], 'old_family': ['ADVX', 'ADJD'], 'start left siblings': ['ADVX'], 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'ADJD', 'VAFIN'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (4, 9), 'movers': ['ADJD'], 'old_parent': 'ADJX', 'POS confusion': ('ADJD', 'ADJD'), 'end right siblings': ['VXFIN'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM grus gott)
		(DM frau johann)
		(SIMPX
			(VF
				(SIMPX
					(C wenn)
					(MF
						(NX ich)
						(ADJX
							[01;31m(ADVX[00m
								(ADV richtig)[01;31m)[00m))
					(VC
						[01;36m(VXINF[00m
							(ADJD informiert)[01;36m)[00m
						(VXFIN bin))))
			(LK musten)
			(MF wir unbedingt eine termin fur eine geschaftsreise nach hannover)
			(VC vereinbaren))
		(DM ja)
		(SIMPX
			(VF die frage)
			(LK ist)
			(NF
				(SIMPX
					(LK haben)
					[01;31m(MF[00m
						(NX sie)
						(NX irgendwelche praferierten termine)
						(PX von sich aus)[01;31m)[00m)))))
Step:Single Word Phrase
{'subtrees': ['ADJD'], 'family': ['VXINF', 'VXFIN'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADJD',), 'right siblings': [(VXFIN (VAFIN bin))], 'left siblings': [], 'auto preterminal span': (7, 8), 'span': (7, 8), 'parent': 'VC', 'label': 'VXINF', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM grus gott)
		(DM frau johann)
		(SIMPX
			(VF
				(SIMPX
					(C wenn)
					(MF
						(NX ich)
						(ADJX
							[01;31m(ADVX[00m
								(ADV richtig)[01;31m)[00m))
					(VC informiert bin)))
			(LK musten)
			(MF wir unbedingt eine termin fur eine geschaftsreise nach hannover)
			(VC vereinbaren))
		(DM ja)
		(SIMPX
			(VF die frage)
			(LK ist)
			(NF
				(SIMPX
					(LK haben)
					[01;31m(MF[00m
						(NX sie)
						(NX irgendwelche praferierten termine)
						(PX von sich aus)[01;31m)[00m)))))
Step:Single Word Phrase
{'subtrees': ['ADV'], 'family': ['ADVX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADV',), 'right siblings': [], 'parent': 'ADJX', 'auto preterminal span': (6, 7), 'span': (6, 7), 'left siblings': [], 'label': 'ADVX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(DM grus gott)
		(DM frau johann)
		(SIMPX wenn ich richtig informiert bin musten wir unbedingt eine termin fur eine geschaftsreise nach hannover vereinbaren)
		(DM ja)
		(SIMPX
			(VF die frage)
			(LK ist)
			(NF
				(SIMPX
					(LK haben)
					[01;31m(MF[00m
						(NX sie)
						(NX irgendwelche praferierten termine)
						(PX von sich aus)[01;31m)[00m)))))
Step:PP Attachment
{'subtrees': ['NX', 'NX', 'PX'], 'family': ['LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'PPER', 'PIAT', 'ADJA', 'NN', 'APPR', 'PRF', 'APZR'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (24, 32), 'span': (25, 32), 'left siblings': ['LK'], 'label': 'MF', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP grus gott frau johann wenn ich richtig informiert bin musten wir unbedingt eine termin fur eine geschaftsreise nach hannover vereinbaren ja die frage ist haben sie irgendwelche praferierten termine von sich aus)

Sentence 392:
0 Initial errors
0 on fringe, 0 iterations

Sentence 393:
12 Initial errors
0 on fringe, 5 iterations
5 Error:UNSET move
4 Error:UNSET move
1 Error:Unary
1 Error:PP Attachment
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX das ware mir recht)
		[01;31m(SIMPX[00m
			(VF das)
			(LK wurde)
			(MF ja)
			(VC bedeuten)
			[01;31m(NF[00m [01;33m(SIMPX (NF (SIMPX (NF[00m
				[01;31m(SIMPX[00m
					(C das)
					(MF wir am eine ubernachtung in hannover)
					[01;33m(VXFIN (VC[00m (VC brauchten)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VC vorausgesetzt) [01;33mVC) VXFIN) NF) SIMPX)[00m
			[01;31m(NF[00m
				(SIMPX
					(VF wir)
					(LK kriegen)
					(MF dann am dienstag abend noch den flug nach berlin))[01;31m)[00m[01;31m)[00m [01;33mNF) SIMPX)[00m
		(SIMPX meine sekretarin hat mir hier schon drei hotels rausgesucht)
		(SIMPX
			(LK haben)
			(MF
				(NX sie)
				[01;36m(NX[00m
					(NX irgendwelche vorstellungen)
					(PX davon)[01;36m)[00m)
			(NF wie das hotel aussehen sollte))
		(DM oder)))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['C', 'MF', 'VC', 'VC'], 'mover info': [('VC', (17, 18))], 'old_family': ['VC', 'NF'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'PDS', 'VAFIN', 'PPER', 'ADJD', 'PDS', 'VAFIN', 'ADV', 'VVINF', 'KOUS', 'PPER', 'APPRART', 'ART', 'NN', 'APPR', 'NE', 'VVFIN', 'VVPP', 'PPER', 'VVFIN', 'ADV', 'APPRART', 'NN', 'ADV', 'ADV', 'ART', 'NN', 'APPR', 'NE', 'PPOSAT', 'NN', 'VAFIN', 'PPER', 'ADV', 'ADV', 'CARD', 'NN', 'VVPP', 'VAFIN', 'PPER', 'PIAT', 'NN', 'PROP', 'KOUS', 'ART', 'NN', 'VVINF', 'VMFIN', 'ITJ'), 'start right siblings': ['NF'], 'end left siblings': ['C', 'MF', 'VC'], 'auto preterminal span': (0, 49), 'adding node already present': False, 'movers': ['VC'], 'old_parent': 'SIMPX', 'POS confusion': ('VVPP', 'VVPP'), 'added and moved': True, 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(DM ja)
		(SIMPX das ware mir recht)
		[01;31m(SIMPX[00m
			(VF das)
			(LK wurde)
			(MF ja)
			(VC bedeuten)
			(NF [01;33m(SIMPX (NF[00m
				(SIMPX
					(C das)
					(MF wir am eine ubernachtung in hannover)
					[01;36m(VC[00m
						(VXFIN
							(VC brauchten)
							(VC vorausgesetzt))[01;36m)[00m))[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(NF[00m
				(SIMPX
					(VF wir)
					(LK kriegen)
					(MF dann am dienstag abend noch den flug nach berlin))[01;31m)[00m[01;31m)[00m [01;33mNF) SIMPX)[00m
		(SIMPX meine sekretarin hat mir hier schon drei hotels rausgesucht)
		(SIMPX
			(LK haben)
			(MF
				(NX sie)
				[01;36m(NX[00m
					(NX irgendwelche vorstellungen)
					(PX davon)[01;36m)[00m)
			(NF wie das hotel aussehen sollte))
		(DM oder)))
Step:UNSET move
{'new_parent': 'NF', 'new_family': ['NF', 'SIMPX'], 'mover info': [('NF', (9, 18))], 'old_family': ['VF', 'LK', 'MF', 'VC', 'NF'], 'start left siblings': ['VF', 'LK', 'MF', 'VC'], 'auto preterminals': ('PTKANT', 'PDS', 'VAFIN', 'PPER', 'ADJD', 'PDS', 'VAFIN', 'ADV', 'VVINF', 'KOUS', 'PPER', 'APPRART', 'ART', 'NN', 'APPR', 'NE', 'VVFIN', 'VVPP', 'PPER', 'VVFIN', 'ADV', 'APPRART', 'NN', 'ADV', 'ADV', 'ART', 'NN', 'APPR', 'NE', 'PPOSAT', 'NN', 'VAFIN', 'PPER', 'ADV', 'ADV', 'CARD', 'NN', 'VVPP', 'VAFIN', 'PPER', 'PIAT', 'NN', 'PROP', 'KOUS', 'ART', 'NN', 'VVINF', 'VMFIN', 'ITJ'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 49), 'movers': ['NF'], 'old_parent': 'SIMPX', 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(SIMPX das ware mir recht)
		[01;31m(SIMPX[00m
			(VF das)
			(LK wurde)
			(MF ja)
			(VC bedeuten)[01;31m)[00m
		(SIMPX
			(NF
				(NF
					(SIMPX
						(C das)
						(MF wir am eine ubernachtung in hannover)
						[01;36m(VC[00m
							(VXFIN
								(VC brauchten)
								(VC vorausgesetzt))[01;36m)[00m))
				(SIMPX wir kriegen dann am dienstag abend noch den flug nach berlin)))
		(SIMPX meine sekretarin hat mir hier schon drei hotels rausgesucht)
		(SIMPX
			(LK haben)
			(MF
				(NX sie)
				[01;36m(NX[00m
					(NX irgendwelche vorstellungen)
					(PX davon)[01;36m)[00m)
			(NF wie das hotel aussehen sollte))
		(DM oder)))
Step:Unary
{'subtrees': ['VXFIN'], 'family': ['C', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'VVPP'), 'right siblings': [], 'left siblings': [(C (KOUS das)), (MF (NX (PPER wir)) (APPRART am) (NX (NX (ART eine) (NN ubernachtung)) (PX (APPR in) (NX (NE hannover)))))], 'auto preterminal span': (16, 18), 'span': (16, 18), 'parent': 'SIMPX', 'label': 'VC', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX das ware mir recht)
		[01;31m(SIMPX[00m
			(VF das)
			(LK wurde)
			(MF ja)
			(VC bedeuten)[01;31m)[00m
		(SIMPX das wir am eine ubernachtung in hannover brauchten vorausgesetzt wir kriegen dann am dienstag abend noch den flug nach berlin)
		(SIMPX meine sekretarin hat mir hier schon drei hotels rausgesucht)
		(SIMPX
			(LK haben)
			(MF
				(NX sie)
				[01;36m(NX[00m
					(NX irgendwelche vorstellungen)
					(PX davon)[01;36m)[00m)
			(NF wie das hotel aussehen sollte))
		(DM oder)))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PIAT', 'NN', 'PROP'), 'right siblings': [], 'left siblings': [(NX (PPER sie))], 'auto preterminal span': (40, 43), 'span': (40, 43), 'parent': 'MF', 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX das ware mir recht)
		[01;31m(SIMPX[00m
			(VF das)
			(LK wurde)
			(MF ja)
			(VC bedeuten)[01;31m)[00m
		(SIMPX das wir am eine ubernachtung in hannover brauchten vorausgesetzt wir kriegen dann am dienstag abend noch den flug nach berlin)
		(SIMPX meine sekretarin hat mir hier schon drei hotels rausgesucht)
		(SIMPX haben sie irgendwelche vorstellungen davon wie das hotel aussehen sollte)
		(DM oder)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PDS', 'VAFIN', 'PPER', 'ADJD', 'PDS', 'VAFIN', 'ADV', 'VVINF', 'KOUS', 'PPER', 'APPRART', 'ART', 'NN', 'APPR', 'NE', 'VVFIN', 'VVPP', 'PPER', 'VVFIN', 'ADV', 'APPRART', 'NN', 'ADV', 'ADV', 'ART', 'NN', 'APPR', 'NE', 'PPOSAT', 'NN', 'VAFIN', 'PPER', 'ADV', 'ADV', 'CARD', 'NN', 'VVPP', 'VAFIN', 'PPER', 'PIAT', 'NN', 'PROP', 'KOUS', 'ART', 'NN', 'VVINF', 'VMFIN', 'ITJ'), 'right siblings': ['SIMPX', 'SIMPX', 'SIMPX', 'DM'], 'parent': 'TURN', 'auto preterminal span': (0, 49), 'span': (5, 9), 'left siblings': ['DM', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ja das ware mir recht das wurde ja bedeuten das wir am eine ubernachtung in hannover brauchten vorausgesetzt wir kriegen dann am dienstag abend noch den flug nach berlin meine sekretarin hat mir hier schon drei hotels rausgesucht haben sie irgendwelche vorstellungen davon wie das hotel aussehen sollte oder)

Sentence 394:
4 Initial errors
0 on fringe, 4 iterations
1 Error:Unary
1 Error:PP Attachment
1 Error:Modifier Attachment
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM also)
		(SIMPX
			(VF es)
			(LK gabe)
			(MF
				[01;31m(NX[00m
					(NX eines mit sauna)
					[01;31m(NX[00m
						(NX ein anderes)
						(PX mit hallenbad)[01;31m)[00m[01;31m)[00m))
		[01;31m(NX[00m
			(ADVX scheinbar)
			(ADVX nicht)
			[01;31m(NX[00m
				(NX beides)
				(ADVX zusammen)[01;31m)[00m[01;31m)[00m
		(SIMPX sie wurden dann die sauna vorziehen)))
Step:Unary
{'subtrees': ['NX', 'NX'], 'family': ['NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PIS', 'APPR', 'NN', 'ART', 'PIS', 'APPR', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (3, 10), 'span': (3, 10), 'left siblings': [], 'label': 'NX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX
			(VF es)
			(LK gabe)
			(MF
				(NX eines mit sauna)
				[01;31m(NX[00m
					(NX ein anderes)
					(PX mit hallenbad)[01;31m)[00m))
		[01;31m(NX[00m
			(ADVX scheinbar)
			(ADVX nicht)
			[01;31m(NX[00m
				(NX beides)
				(ADVX zusammen)[01;31m)[00m[01;31m)[00m
		(SIMPX sie wurden dann die sauna vorziehen)))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PIS', 'APPR', 'NN', 'ART', 'PIS', 'APPR', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (3, 10), 'span': (6, 10), 'left siblings': ['NX'], 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX es gabe eines mit sauna ein anderes mit hallenbad)
		[01;31m(NX[00m
			(ADVX scheinbar)
			(ADVX nicht)
			[01;31m(NX[00m
				(NX beides)
				(ADVX zusammen)[01;31m)[00m[01;31m)[00m
		(SIMPX sie wurden dann die sauna vorziehen)))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'ADVX', 'NX'], 'family': ['DM', 'SIMPX', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPER', 'VVFIN', 'PIS', 'APPR', 'NN', 'ART', 'PIS', 'APPR', 'NN', 'ADV', 'PTKNEG', 'PIS', 'ADV', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'VVINF'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 20), 'span': (10, 14), 'left siblings': ['DM', 'SIMPX'], 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX es gabe eines mit sauna ein anderes mit hallenbad)
		(ADVX scheinbar)
		(ADVX nicht)
		[01;31m(NX[00m
			(NX beides)
			(ADVX zusammen)[01;31m)[00m
		(SIMPX sie wurden dann die sauna vorziehen)))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADVX'], 'family': ['DM', 'SIMPX', 'ADVX', 'ADVX', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPER', 'VVFIN', 'PIS', 'APPR', 'NN', 'ART', 'PIS', 'APPR', 'NN', 'ADV', 'PTKNEG', 'PIS', 'ADV', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'VVINF'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 20), 'span': (12, 14), 'left siblings': ['DM', 'SIMPX', 'ADVX', 'ADVX'], 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP also es gabe eines mit sauna ein anderes mit hallenbad scheinbar nicht beides zusammen sie wurden dann die sauna vorziehen)

Sentence 395:
7 Initial errors
0 on fringe, 5 iterations
2 Error:Single Word Phrase
2 Error:Clause Attachment
1 Error:UNSET add
1 Error:Clause Attachment
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM gut)
		[01;31m(P[00m
			(SIMPX es scheint mir sowieso gunstig)
			(KOUS weil)
			(SIMPX
				(VF ich)
				(LK sehe)
				(MF grade)
				(NF
					(SIMPX
						(C das)
						(MF
							(NX es)
							(ADVX auch)
							(PX
								(APPR in)
								(NX
									(NX der nahe)
									[01;36m(PX[00m
										(APPRART beim)
										(NX des hauptbahnhofs)[01;36m)[00m)))
						(VC ist)
						(NF
							(SIMPX
								(C was)
								(MF
									(ADVX dann)
									(ADVX sicherlich)
									(ADVX ja)
									(ADVX auch)
									[01;36m(NX[00m [01;31m(ADJX[00m
										(ADJD verkehrsgunstig)[01;31m)[00m[01;36m)[00m)
								(VC ist))))))[01;31m)[00m
		(DM ja)
		(SIMPX dann werde ich die buchen)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(LK kummern)
				(MF sie sich um die fluge)[01;31m)[00m
			[01;31m(SIMPX[00m
				(LK ginge)
				(MF das)[01;31m)[00m[01;36m)[00m))
Step:Single Word Phrase
{'family': ['ADVX', 'ADVX', 'ADVX', 'ADVX', 'NX'], 'auto preterminal span': (25, 26), 'span': (25, 26), 'subtrees': ['ADJD'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('ADJD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'NX')}
(TOP
	(TURN
		(DM gut)
		[01;31m(P[00m
			(SIMPX es scheint mir sowieso gunstig)
			(KOUS weil)
			(SIMPX
				(VF ich)
				(LK sehe)
				(MF grade)
				(NF
					(SIMPX
						(C das)
						(MF
							(NX es)
							(ADVX auch)
							(PX
								(APPR in)
								(NX
									(NX der nahe)
									[01;36m(PX[00m
										(APPRART beim)
										(NX des hauptbahnhofs)[01;36m)[00m)))
						(VC ist)
						(NF was dann sicherlich ja auch verkehrsgunstig ist))))[01;31m)[00m
		(DM ja)
		(SIMPX dann werde ich die buchen)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(LK kummern)
				(MF sie sich um die fluge)[01;31m)[00m
			[01;31m(SIMPX[00m
				(LK ginge)
				(MF das)[01;31m)[00m[01;36m)[00m))
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['SIMPX', 'LK', 'MF'], 'mover info': [('SIMPX', (33, 39))], 'old_family': ['DM', 'P', 'DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'start left siblings': ['DM', 'P', 'DM', 'SIMPX'], 'auto preterminals': ('ITJ', 'PPER', 'VVFIN', 'PPER', 'ADV', 'ADJD', 'KOUS', 'PPER', 'VVFIN', 'ADV', 'KOUS', 'PPER', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'ART', 'NN', 'VAFIN', 'PWS', 'ADV', 'ADV', 'ADV', 'ADV', 'ADJD', 'VAFIN', 'PTKANT', 'ADV', 'VAFIN', 'PPER', 'PDS', 'VVINF', 'VVFIN', 'PPER', 'PRF', 'APPR', 'ART', 'NN', 'VVFIN', 'PDS'), 'start right siblings': ['SIMPX'], 'end left siblings': [], 'auto preterminal span': (0, 41), 'movers': ['SIMPX'], 'old_parent': 'TURN', 'end right siblings': ['LK', 'MF'], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM gut)
		[01;31m(P[00m
			(SIMPX es scheint mir sowieso gunstig)
			(KOUS weil)
			(SIMPX
				(VF ich)
				(LK sehe)
				(MF grade)
				(NF
					(SIMPX
						(C das)
						(MF
							(NX es)
							(ADVX auch)
							(PX
								(APPR in)
								(NX
									(NX der nahe)
									[01;36m(PX[00m
										(APPRART beim)
										(NX des hauptbahnhofs)[01;36m)[00m)))
						(VC ist)
						(NF was dann sicherlich ja auch verkehrsgunstig ist))))[01;31m)[00m
		(DM ja)
		(SIMPX dann werde ich die buchen)
		(SIMPX
			[01;31m(SIMPX[00m
				(LK kummern)
				(MF sie sich um die fluge)[01;31m)[00m
			(LK ginge)
			(MF das))))
Step:UNSET add
{'subtrees': ['APPRART', 'NX'], 'family': ['NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'ART', 'NN'), 'right siblings': [], 'left siblings': [(NX (ART der) (NN nahe))], 'auto preterminal span': (16, 19), 'span': (16, 19), 'parent': 'NX', 'label': 'PX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM gut)
		[01;31m(P[00m
			(SIMPX es scheint mir sowieso gunstig)
			(KOUS weil)
			(SIMPX ich sehe grade das es auch in der nahe beim des hauptbahnhofs ist was dann sicherlich ja auch verkehrsgunstig ist)[01;31m)[00m
		(DM ja)
		(SIMPX dann werde ich die buchen)
		(SIMPX
			[01;31m(SIMPX[00m
				(LK kummern)
				(MF sie sich um die fluge)[01;31m)[00m
			(LK ginge)
			(MF das))))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'KOUS', 'SIMPX'], 'family': ['DM', 'P', 'DM', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PPER', 'VVFIN', 'PPER', 'ADV', 'ADJD', 'KOUS', 'PPER', 'VVFIN', 'ADV', 'KOUS', 'PPER', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'ART', 'NN', 'VAFIN', 'PWS', 'ADV', 'ADV', 'ADV', 'ADV', 'ADJD', 'VAFIN', 'PTKANT', 'ADV', 'VAFIN', 'PPER', 'PDS', 'VVINF', 'VVFIN', 'PPER', 'PRF', 'APPR', 'ART', 'NN', 'VVFIN', 'PDS'), 'right siblings': ['DM', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 41), 'span': (1, 27), 'left siblings': ['DM'], 'label': 'P', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM gut)
		(SIMPX es scheint mir sowieso gunstig)
		(KOUS weil)
		(SIMPX ich sehe grade das es auch in der nahe beim des hauptbahnhofs ist was dann sicherlich ja auch verkehrsgunstig ist)
		(DM ja)
		(SIMPX dann werde ich die buchen)
		(SIMPX
			[01;31m(SIMPX[00m
				(LK kummern)
				(MF sie sich um die fluge)[01;31m)[00m
			(LK ginge)
			(MF das))))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['SIMPX', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'PRF', 'APPR', 'ART', 'NN', 'VVFIN', 'PDS'), 'right siblings': ['LK', 'MF'], 'parent': 'SIMPX', 'auto preterminal span': (33, 41), 'span': (33, 39), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP gut es scheint mir sowieso gunstig weil ich sehe grade das es auch in der nahe beim des hauptbahnhofs ist was dann sicherlich ja auch verkehrsgunstig ist ja dann werde ich die buchen kummern sie sich um die fluge ginge das)

Sentence 396:
0 Initial errors
0 on fringe, 0 iterations

Sentence 397:
7 Initial errors
0 on fringe, 5 iterations
2 Error:Clause Attachment
2 Error:Modifier Attachment
1 Error:Unary
1 Error:Unary
1 Error:Clause Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX
			(VF das)
			(LK sollte)
			(MF dann)
			[01;36m(VXINF[00m
				(VC
					(VXINF zu machen)
					(VXINF sein))[01;36m)[00m)
		(DM ja)
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(VF die frage)
				(LK ist)
				(MF jetzt noch)[01;36m)[00m
			(SIMPX
				(VF man)
				(LK hat)
				(MF
					(NX mir)
					[01;31m(PX[00m
						(ADVX hier)
						[01;36m(PX[00m
							(APPR bei)
							(NX der mappe)[01;36m)[00m[01;31m)[00m
					(ADVX auch)
					(NX einige informationen uber sehenswurdigkeiten und veranstaltungen))
				(VC hingelegt))
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					(SIMPX haben sie da auch interesse)
					(SIMPX soll ich da irgendwas buchen)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(DM oder)))
Step:Clause Attachment
{'new_parent': 'TURN', 'new_family': ['SIMPX', 'DM', 'SIMPX', 'SIMPX', 'NF', 'DM'], 'mover info': [('SIMPX', (12, 27)), ('NF', (27, 37))], 'old_family': ['VF', 'LK', 'MF', 'SIMPX', 'NF'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('PDS', 'VMFIN', 'ADV', 'PTKZU', 'VVINF', 'VAINF', 'PTKANT', 'ART', 'NN', 'VAFIN', 'ADV', 'ADV', 'PIS', 'VAFIN', 'PPER', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'PIAT', 'NN', 'APPR', 'NN', 'KON', 'NN', 'VVPP', 'VAFIN', 'PPER', 'ADV', 'ADV', 'NN', 'VMFIN', 'PPER', 'ADV', 'PIS', 'VVINF', 'ITJ'), 'start right siblings': [], 'end left siblings': ['SIMPX', 'DM', 'SIMPX'], 'auto preterminal span': (0, 38), 'movers': ['SIMPX', 'NF'], 'old_parent': 'SIMPX', 'end right siblings': ['DM'], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(SIMPX
			(VF das)
			(LK sollte)
			(MF dann)
			[01;36m(VXINF[00m
				(VC
					(VXINF zu machen)
					(VXINF sein))[01;36m)[00m)
		(DM ja)
		(SIMPX die frage ist jetzt noch)
		(SIMPX
			(VF man)
			(LK hat)
			(MF
				(NX mir)
				[01;31m(PX[00m
					(ADVX hier)
					[01;36m(PX[00m
						(APPR bei)
						(NX der mappe)[01;36m)[00m[01;31m)[00m
				(ADVX auch)
				(NX einige informationen uber sehenswurdigkeiten und veranstaltungen))
			(VC hingelegt))
		[01;31m(NF[00m
			[01;31m(SIMPX[00m
				(SIMPX haben sie da auch interesse)
				(SIMPX soll ich da irgendwas buchen)[01;31m)[00m[01;31m)[00m
		(DM oder)))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'ADVX', 'PX', 'ADVX', 'NX'], 'mover info': [('ADVX', (15, 16))], 'old_family': ['ADVX', 'APPR', 'NX'], 'start left siblings': [], 'auto preterminals': ('PPER', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'PIAT', 'NN', 'APPR', 'NN', 'KON', 'NN'), 'start right siblings': ['APPR', 'NX'], 'end left siblings': ['NX'], 'auto preterminal span': (14, 26), 'movers': ['ADVX'], 'old_parent': 'PX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['PX', 'ADVX', 'NX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SIMPX
			(VF das)
			(LK sollte)
			(MF dann)
			[01;36m(VXINF[00m
				(VC
					(VXINF zu machen)
					(VXINF sein))[01;36m)[00m)
		(DM ja)
		(SIMPX die frage ist jetzt noch)
		(SIMPX man hat mir hier bei der mappe auch einige informationen uber sehenswurdigkeiten und veranstaltungen hingelegt)
		[01;31m(NF[00m
			[01;31m(SIMPX[00m
				(SIMPX haben sie da auch interesse)
				(SIMPX soll ich da irgendwas buchen)[01;31m)[00m[01;31m)[00m
		(DM oder)))
Step:Unary
{'subtrees': ['VC'], 'family': ['VF', 'LK', 'MF', 'VXINF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKZU', 'VVINF', 'VAINF'), 'right siblings': [], 'left siblings': [(VF (NX (PDS das))), (LK (VXFIN (VMFIN sollte))), (MF (ADVX (ADV dann)))], 'auto preterminal span': (3, 6), 'span': (3, 6), 'parent': 'SIMPX', 'label': 'VXINF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SIMPX das sollte dann zu machen sein)
		(DM ja)
		(SIMPX die frage ist jetzt noch)
		(SIMPX man hat mir hier bei der mappe auch einige informationen uber sehenswurdigkeiten und veranstaltungen hingelegt)
		[01;31m(NF[00m
			[01;31m(SIMPX[00m
				(SIMPX haben sie da auch interesse)
				(SIMPX soll ich da irgendwas buchen)[01;31m)[00m[01;31m)[00m
		(DM oder)))
Step:Unary
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'PPER', 'ADV', 'ADV', 'NN', 'VMFIN', 'PPER', 'ADV', 'PIS', 'VVINF'), 'right siblings': [], 'parent': 'NF', 'auto preterminal span': (27, 37), 'span': (27, 37), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX das sollte dann zu machen sein)
		(DM ja)
		(SIMPX die frage ist jetzt noch)
		(SIMPX man hat mir hier bei der mappe auch einige informationen uber sehenswurdigkeiten und veranstaltungen hingelegt)
		[01;31m(NF[00m
			(SIMPX haben sie da auch interesse)
			(SIMPX soll ich da irgendwas buchen)[01;31m)[00m
		(DM oder)))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['SIMPX', 'DM', 'SIMPX', 'SIMPX', 'NF', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VMFIN', 'ADV', 'PTKZU', 'VVINF', 'VAINF', 'PTKANT', 'ART', 'NN', 'VAFIN', 'ADV', 'ADV', 'PIS', 'VAFIN', 'PPER', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'PIAT', 'NN', 'APPR', 'NN', 'KON', 'NN', 'VVPP', 'VAFIN', 'PPER', 'ADV', 'ADV', 'NN', 'VMFIN', 'PPER', 'ADV', 'PIS', 'VVINF', 'ITJ'), 'right siblings': ['DM'], 'parent': 'TURN', 'auto preterminal span': (0, 38), 'span': (27, 37), 'left siblings': ['SIMPX', 'DM', 'SIMPX', 'SIMPX'], 'label': 'NF', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP das sollte dann zu machen sein ja die frage ist jetzt noch man hat mir hier bei der mappe auch einige informationen uber sehenswurdigkeiten und veranstaltungen hingelegt haben sie da auch interesse soll ich da irgendwas buchen oder)

Sentence 398:
14 Initial errors
0 on fringe, 11 iterations
3 Error:NP Attachment
2 Error:Single Word Phrase
1 Error:Modifier Attachment
1 Error:Single Word Phrase
1 Error:PP Attachment
1 Error:PP Attachment
1 Error:UNSET add
1 Error:Unary
1 Error:Modifier Attachment
1 Error:Modifier Attachment
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM also)
		(SIMPX [01;33m(SIMPX[00m
			(VF unter den angeboten)
			(LK sind)
			[01;31m(MF[00m [01;33m(PX[00m
				[01;31m(PX[00m
					(APPR in)
					[01;31m(NX[00m
						(NX diese richtung) [01;33mPX) SIMPX)[00m
						[01;31m(NX[00m
							(ART der)
							[01;36m(ADJX[00m
								(ADJX darstellenden)
								[01;36m(ADJX[00m
									(NN kunste)[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(ADJX zwei)
						(NN kategorien)[01;31m)[00m
					(NX
						(NX opernbesuche)
						(KON und)
						[01;36m(ADVX[00m [01;31m(NX[00m
							(NN gospelkonzert)[01;31m)[00m[01;36m)[00m)[01;31m)[00m
				[01;33m(SIMPX (NF[00m (PX an dem abend)[01;31m)[00m
			(VC zu buchen)) [01;33mNF) SIMPX)[00m
		(SIMPX sollen wir dann das gospelkonzert nehmen)
		(SIMPX das ist sicherlich leichter als ein wagner)))
Step:NP Attachment
{'new_parent': 'NX', 'new_family': ['NX', 'NX', 'NX'], 'mover info': [('NX', (8, 11))], 'old_family': ['NX', 'NX'], 'start left siblings': ['NX'], 'auto preterminals': ('APPR', 'PDAT', 'NN', 'ART', 'ADJA', 'NN', 'CARD', 'NN', 'NN', 'KON', 'NN', 'APPR', 'ART', 'NN'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (5, 19), 'movers': ['NX'], 'old_parent': 'NX', 'end right siblings': ['NX', 'NX'], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM also)
		(SIMPX [01;33m(SIMPX[00m
			(VF unter den angeboten)
			(LK sind)
			[01;31m(MF[00m
				(PX in diese richtung) [01;33mSIMPX)[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(ART der)
						[01;36m(ADJX[00m
							(ADJX darstellenden)
							[01;36m(ADJX[00m
								(NN kunste)[01;36m)[00m[01;36m)[00m[01;31m)[00m
					[01;31m(NX[00m
						(ADJX zwei)
						(NN kategorien)[01;31m)[00m
					(NX
						(NX opernbesuche)
						(KON und)
						[01;36m(ADVX[00m [01;31m(NX[00m
							(NN gospelkonzert)[01;31m)[00m[01;36m)[00m)[01;31m)[00m
				[01;33m(SIMPX (NF[00m (PX an dem abend)[01;31m)[00m
			(VC zu buchen)) [01;33mNF) SIMPX)[00m
		(SIMPX sollen wir dann das gospelkonzert nehmen)
		(SIMPX das ist sicherlich leichter als ein wagner)))
Step:Single Word Phrase
{'family': ['NX', 'KON', 'ADVX'], 'auto preterminal span': (15, 16), 'span': (15, 16), 'subtrees': ['NN'], 'parent': 'NX', 'over_word': True, 'auto preterminals': ('NN',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('NX', 'ADVX')}
(TOP
	(TURN
		(DM also)
		(SIMPX [01;33m(SIMPX[00m
			(VF unter den angeboten)
			(LK sind)
			[01;31m(MF[00m
				(PX in diese richtung) [01;33mSIMPX)[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(ART der)
						[01;36m(ADJX[00m
							(ADJX darstellenden)
							[01;36m(ADJX[00m
								(NN kunste)[01;36m)[00m[01;36m)[00m[01;31m)[00m
					[01;31m(NX[00m
						(ADJX zwei)
						(NN kategorien)[01;31m)[00m
					(NX opernbesuche und gospelkonzert)[01;31m)[00m
				[01;33m(SIMPX (NF[00m (PX an dem abend)[01;31m)[00m
			(VC zu buchen)) [01;33mNF) SIMPX)[00m
		(SIMPX sollen wir dann das gospelkonzert nehmen)
		(SIMPX das ist sicherlich leichter als ein wagner)))
Step:Modifier Attachment
{'subtrees': ['ADJX', 'NN'], 'family': ['ART', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJA', 'NN'), 'right siblings': [], 'left siblings': [(ART der)], 'auto preterminal span': (9, 11), 'span': (9, 11), 'parent': 'NX', 'label': 'ADJX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		(SIMPX [01;33m(SIMPX[00m
			(VF unter den angeboten)
			(LK sind)
			[01;31m(MF[00m
				(PX in diese richtung) [01;33mSIMPX)[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(ART der)
						(ADJX
							(ADJX darstellenden)
							[01;36m(ADJX[00m
								(NN kunste)[01;36m)[00m)[01;31m)[00m
					[01;31m(NX[00m
						(ADJX zwei)
						(NN kategorien)[01;31m)[00m
					(NX opernbesuche und gospelkonzert)[01;31m)[00m
				[01;33m(SIMPX (NF[00m (PX an dem abend)[01;31m)[00m
			(VC zu buchen)) [01;33mNF) SIMPX)[00m
		(SIMPX sollen wir dann das gospelkonzert nehmen)
		(SIMPX das ist sicherlich leichter als ein wagner)))
Step:Single Word Phrase
{'subtrees': ['NN'], 'family': ['ADJX', 'ADJX'], 'over_word': True, 'over words': True, 'auto preterminals': ('NN',), 'right siblings': [], 'left siblings': [(ADJX (ADJA darstellenden))], 'auto preterminal span': (10, 11), 'span': (10, 11), 'parent': 'ADJX', 'label': 'ADJX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		(SIMPX [01;33m(SIMPX[00m
			(VF unter den angeboten)
			(LK sind)
			[01;31m(MF[00m
				(PX in diese richtung) [01;33mSIMPX)[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(ART der)
						(ADJX darstellenden kunste)[01;31m)[00m
					[01;31m(NX[00m
						(ADJX zwei)
						(NN kategorien)[01;31m)[00m
					(NX opernbesuche und gospelkonzert)[01;31m)[00m
				[01;33m(SIMPX (NF[00m (PX an dem abend)[01;31m)[00m
			(VC zu buchen)) [01;33mNF) SIMPX)[00m
		(SIMPX sollen wir dann das gospelkonzert nehmen)
		(SIMPX das ist sicherlich leichter als ein wagner)))
Step:PP Attachment
{'subtrees': ['PX', 'NX', 'PX'], 'family': ['VF', 'LK', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NN', 'VAFIN', 'APPR', 'PDAT', 'NN', 'ART', 'ADJA', 'NN', 'CARD', 'NN', 'NN', 'KON', 'NN', 'APPR', 'ART', 'NN', 'PTKZU', 'VVINF'), 'right siblings': ['VC'], 'parent': 'SIMPX', 'auto preterminal span': (1, 21), 'span': (5, 19), 'left siblings': ['VF', 'LK'], 'label': 'MF', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX
			[01;36m(SIMPX[00m
				(VF unter den angeboten)
				(LK sind)
				(PX in diese richtung)[01;36m)[00m
			[01;31m(NX[00m
				[01;31m(NX[00m
					(ART der)
					(ADJX darstellenden kunste)[01;31m)[00m
				[01;31m(NX[00m
					(ADJX zwei)
					(NN kategorien)[01;31m)[00m
				(NX opernbesuche und gospelkonzert)[01;31m)[00m
			[01;36m(NF[00m
				[01;36m(SIMPX[00m
					(PX an dem abend)
					(VC zu buchen)[01;36m)[00m[01;36m)[00m)
		(SIMPX sollen wir dann das gospelkonzert nehmen)
		(SIMPX das ist sicherlich leichter als ein wagner)))
Step:PP Attachment
{'subtrees': ['VF', 'LK', 'PX'], 'family': ['SIMPX', 'NX', 'PX', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NN', 'VAFIN', 'APPR', 'PDAT', 'NN'), 'right siblings': [(NX (NX (ART der) (ADJX (ADJX (ADJA darstellenden)) (ADJX (NN kunste)))) (NX (ADJX (CARD zwei)) (NN kategorien)) (NX (NX (NN opernbesuche)) (KON und) (ADVX (NN gospelkonzert)))), (PX (APPR an) (NX (ART dem) (NN abend))), (VC (VXINF (PTKZU zu) (VVINF buchen)))], 'left siblings': [], 'auto preterminal span': (1, 8), 'span': (1, 8), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		(SIMPX
			(SIMPX unter den angeboten sind in diese richtung)
			[01;31m(NX[00m
				[01;31m(NX[00m
					(ART der)
					(ADJX darstellenden kunste)[01;31m)[00m
				[01;31m(NX[00m
					(ADJX zwei)
					(NN kategorien)[01;31m)[00m
				(NX opernbesuche und gospelkonzert)[01;31m)[00m
			[01;36m(NF[00m
				[01;36m(SIMPX[00m
					(PX an dem abend)
					(VC zu buchen)[01;36m)[00m[01;36m)[00m)
		(SIMPX sollen wir dann das gospelkonzert nehmen)
		(SIMPX das ist sicherlich leichter als ein wagner)))
Step:UNSET add
{'subtrees': ['PX', 'VC'], 'family': ['SIMPX', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NN', 'PTKZU', 'VVINF'), 'right siblings': [], 'left siblings': [(SIMPX (VF (PX (APPR unter) (NX (ART den) (NN angeboten)))) (LK (VXFIN (VAFIN sind))) (PX (APPR in) (NX (PDAT diese) (NN richtung)))), (NX (NX (ART der) (ADJX (ADJX (ADJA darstellenden)) (ADJX (NN kunste)))) (NX (ADJX (CARD zwei)) (NN kategorien)) (NX (NX (NN opernbesuche)) (KON und) (ADVX (NN gospelkonzert))))], 'auto preterminal span': (16, 21), 'span': (16, 21), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		(SIMPX
			(SIMPX unter den angeboten sind in diese richtung)
			[01;31m(NX[00m
				[01;31m(NX[00m
					(ART der)
					(ADJX darstellenden kunste)[01;31m)[00m
				[01;31m(NX[00m
					(ADJX zwei)
					(NN kategorien)[01;31m)[00m
				(NX opernbesuche und gospelkonzert)[01;31m)[00m
			[01;36m(NF[00m
				(SIMPX
					(PX an dem abend)
					(VC zu buchen))[01;36m)[00m)
		(SIMPX sollen wir dann das gospelkonzert nehmen)
		(SIMPX das ist sicherlich leichter als ein wagner)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SIMPX', 'NX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NN', 'PTKZU', 'VVINF'), 'right siblings': [], 'left siblings': [(SIMPX (VF (PX (APPR unter) (NX (ART den) (NN angeboten)))) (LK (VXFIN (VAFIN sind))) (PX (APPR in) (NX (PDAT diese) (NN richtung)))), (NX (NX (ART der) (ADJX (ADJX (ADJA darstellenden)) (ADJX (NN kunste)))) (NX (ADJX (CARD zwei)) (NN kategorien)) (NX (NX (NN opernbesuche)) (KON und) (ADVX (NN gospelkonzert))))], 'auto preterminal span': (16, 21), 'span': (16, 21), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		(SIMPX
			(SIMPX unter den angeboten sind in diese richtung)
			[01;31m(NX[00m
				[01;31m(NX[00m
					(ART der)
					(ADJX darstellenden kunste)[01;31m)[00m
				[01;31m(NX[00m
					(ADJX zwei)
					(NN kategorien)[01;31m)[00m
				(NX opernbesuche und gospelkonzert)[01;31m)[00m
			(NF an dem abend zu buchen))
		(SIMPX sollen wir dann das gospelkonzert nehmen)
		(SIMPX das ist sicherlich leichter als ein wagner)))
Step:Modifier Attachment
{'subtrees': ['ART', 'ADJX'], 'family': ['NX', 'NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'ADJA', 'NN', 'CARD', 'NN', 'NN', 'KON', 'NN'), 'right siblings': ['NX', 'NX'], 'parent': 'NX', 'auto preterminal span': (8, 16), 'span': (8, 11), 'left siblings': [], 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX
			(SIMPX unter den angeboten sind in diese richtung)
			[01;31m(NX[00m
				(ART der)
				(ADJX darstellenden kunste)
				[01;31m(NX[00m
					(ADJX zwei)
					(NN kategorien)[01;31m)[00m
				(NX opernbesuche und gospelkonzert)[01;31m)[00m
			(NF an dem abend zu buchen))
		(SIMPX sollen wir dann das gospelkonzert nehmen)
		(SIMPX das ist sicherlich leichter als ein wagner)))
Step:Modifier Attachment
{'subtrees': ['ART', 'ADJX', 'NX', 'NX'], 'family': ['SIMPX', 'NX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NN', 'VAFIN', 'APPR', 'PDAT', 'NN', 'ART', 'ADJA', 'NN', 'CARD', 'NN', 'NN', 'KON', 'NN', 'APPR', 'ART', 'NN', 'PTKZU', 'VVINF'), 'right siblings': ['NF'], 'parent': 'SIMPX', 'auto preterminal span': (1, 21), 'span': (8, 16), 'left siblings': ['SIMPX'], 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX
			(SIMPX unter den angeboten sind in diese richtung)
			(ART der)
			(ADJX darstellenden kunste)
			[01;31m(NX[00m
				(ADJX zwei)
				(NN kategorien)[01;31m)[00m
			(NX opernbesuche und gospelkonzert)
			(NF an dem abend zu buchen))
		(SIMPX sollen wir dann das gospelkonzert nehmen)
		(SIMPX das ist sicherlich leichter als ein wagner)))
Step:UNSET remove
{'subtrees': ['ADJX', 'NN'], 'family': ['SIMPX', 'ART', 'ADJX', 'NX', 'NX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NN', 'VAFIN', 'APPR', 'PDAT', 'NN', 'ART', 'ADJA', 'NN', 'CARD', 'NN', 'NN', 'KON', 'NN', 'APPR', 'ART', 'NN', 'PTKZU', 'VVINF'), 'right siblings': ['NX', 'NF'], 'parent': 'SIMPX', 'auto preterminal span': (1, 21), 'span': (11, 13), 'left siblings': ['SIMPX', 'ART', 'ADJX'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP also unter den angeboten sind in diese richtung der darstellenden kunste zwei kategorien opernbesuche und gospelkonzert an dem abend zu buchen sollen wir dann das gospelkonzert nehmen das ist sicherlich leichter als ein wagner)

Sentence 399:
6 Initial errors
0 on fringe, 6 iterations
1 Error:UNSET remove
1 Error:Unary
1 Error:UNSET remove
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET add
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		(SIMPX dann organisiere ich das auch)
		(DM ja)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK denke)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					(VF dann)
					(LK ist)
					(MF es am sinnvollsten)
					[01;31m(NF[00m [01;33m(SIMPX[00m
						(SIMPX
							(C wenn)
							(MF wir die restlichen dinge)
							(VC vertagen)
							(NF bis zu unserem nachsten telefonat))[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(C das)
			(MF wir dann)
			(VC fixieren) [01;33mSIMPX)[00m
			(NF wie das mit den buchungen der hotels und so weiter aussehen sollte)[01;31m)[00m
		(ADVX dann)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'NF'], 'family': ['DM', 'DM', 'SIMPX', 'DM', 'SIMPX', 'SIMPX', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'ADV', 'VVFIN', 'PPER', 'PDS', 'ADV', 'PTKANT', 'PPER', 'VVFIN', 'ADV', 'VAFIN', 'PPER', 'PTKA', 'ADJD', 'KOUS', 'PPER', 'ART', 'ADJA', 'NN', 'VVFIN', 'APPR', 'APPR', 'PPOSAT', 'ADJA', 'NN', 'KOUS', 'PPER', 'ADV', 'VVFIN', 'KOUS', 'PDS', 'APPR', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ADV', 'VVINF', 'VMFIN', 'ADV'), 'right siblings': ['SIMPX', 'ADVX'], 'parent': 'TURN', 'auto preterminal span': (0, 43), 'span': (8, 26), 'left siblings': ['DM', 'DM', 'SIMPX', 'DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		(SIMPX dann organisiere ich das auch)
		(DM ja)
		(VF ich)
		(LK denke)
		[01;31m(NF[00m
			[01;31m(SIMPX[00m
				(VF dann)
				(LK ist)
				(MF es am sinnvollsten)
				[01;31m(NF[00m [01;33m(SIMPX[00m
					(SIMPX
						(C wenn)
						(MF wir die restlichen dinge)
						(VC vertagen)
						(NF bis zu unserem nachsten telefonat))[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(C das)
			(MF wir dann)
			(VC fixieren) [01;33mSIMPX)[00m
			(NF wie das mit den buchungen der hotels und so weiter aussehen sollte)[01;31m)[00m
		(ADVX dann)))
Step:Unary
{'subtrees': ['VF', 'LK', 'MF', 'NF'], 'family': ['SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'PTKA', 'ADJD', 'KOUS', 'PPER', 'ART', 'ADJA', 'NN', 'VVFIN', 'APPR', 'APPR', 'PPOSAT', 'ADJA', 'NN'), 'right siblings': [], 'parent': 'NF', 'auto preterminal span': (10, 26), 'span': (10, 26), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		(SIMPX dann organisiere ich das auch)
		(DM ja)
		(VF ich)
		(LK denke)
		[01;31m(NF[00m
			(VF dann)
			(LK ist)
			(MF es am sinnvollsten)
			[01;31m(NF[00m [01;33m(SIMPX[00m
				(SIMPX
					(C wenn)
					(MF wir die restlichen dinge)
					(VC vertagen)
					(NF bis zu unserem nachsten telefonat))[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(C das)
			(MF wir dann)
			(VC fixieren) [01;33mSIMPX)[00m
			(NF wie das mit den buchungen der hotels und so weiter aussehen sollte)[01;31m)[00m
		(ADVX dann)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'NF'], 'family': ['DM', 'DM', 'SIMPX', 'DM', 'VF', 'LK', 'NF', 'SIMPX', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'ADV', 'VVFIN', 'PPER', 'PDS', 'ADV', 'PTKANT', 'PPER', 'VVFIN', 'ADV', 'VAFIN', 'PPER', 'PTKA', 'ADJD', 'KOUS', 'PPER', 'ART', 'ADJA', 'NN', 'VVFIN', 'APPR', 'APPR', 'PPOSAT', 'ADJA', 'NN', 'KOUS', 'PPER', 'ADV', 'VVFIN', 'KOUS', 'PDS', 'APPR', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ADV', 'VVINF', 'VMFIN', 'ADV'), 'right siblings': ['SIMPX', 'ADVX'], 'parent': 'TURN', 'auto preterminal span': (0, 43), 'span': (10, 26), 'left siblings': ['DM', 'DM', 'SIMPX', 'DM', 'VF', 'LK'], 'label': 'NF', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		(SIMPX dann organisiere ich das auch)
		(DM ja)
		(VF ich)
		(LK denke)
		(VF dann)
		(LK ist)
		(MF es am sinnvollsten)
		[01;31m(NF[00m [01;33m(SIMPX[00m
			(SIMPX
				(C wenn)
				(MF wir die restlichen dinge)
				(VC vertagen)
				(NF bis zu unserem nachsten telefonat))[01;31m)[00m
		[01;31m(SIMPX[00m
			(C das)
			(MF wir dann)
			(VC fixieren) [01;33mSIMPX)[00m
			(NF wie das mit den buchungen der hotels und so weiter aussehen sollte)[01;31m)[00m
		(ADVX dann)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['DM', 'DM', 'SIMPX', 'DM', 'VF', 'LK', 'VF', 'LK', 'MF', 'NF', 'SIMPX', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'ADV', 'VVFIN', 'PPER', 'PDS', 'ADV', 'PTKANT', 'PPER', 'VVFIN', 'ADV', 'VAFIN', 'PPER', 'PTKA', 'ADJD', 'KOUS', 'PPER', 'ART', 'ADJA', 'NN', 'VVFIN', 'APPR', 'APPR', 'PPOSAT', 'ADJA', 'NN', 'KOUS', 'PPER', 'ADV', 'VVFIN', 'KOUS', 'PDS', 'APPR', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ADV', 'VVINF', 'VMFIN', 'ADV'), 'right siblings': ['SIMPX', 'ADVX'], 'parent': 'TURN', 'auto preterminal span': (0, 43), 'span': (15, 26), 'left siblings': ['DM', 'DM', 'SIMPX', 'DM', 'VF', 'LK', 'VF', 'LK', 'MF'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		(SIMPX dann organisiere ich das auch)
		(DM ja)
		(VF ich)
		(LK denke)
		(VF dann)
		(LK ist)
		(MF es am sinnvollsten)
		[01;33m(SIMPX[00m (SIMPX wenn wir die restlichen dinge vertagen bis zu unserem nachsten telefonat)
		[01;31m(SIMPX[00m
			(C das)
			(MF wir dann)
			(VC fixieren) [01;33mSIMPX)[00m
			(NF wie das mit den buchungen der hotels und so weiter aussehen sollte)[01;31m)[00m
		(ADVX dann)))
Step:UNSET remove
{'subtrees': ['C', 'MF', 'VC', 'NF'], 'family': ['DM', 'DM', 'SIMPX', 'DM', 'VF', 'LK', 'VF', 'LK', 'MF', 'SIMPX', 'SIMPX', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'ADV', 'VVFIN', 'PPER', 'PDS', 'ADV', 'PTKANT', 'PPER', 'VVFIN', 'ADV', 'VAFIN', 'PPER', 'PTKA', 'ADJD', 'KOUS', 'PPER', 'ART', 'ADJA', 'NN', 'VVFIN', 'APPR', 'APPR', 'PPOSAT', 'ADJA', 'NN', 'KOUS', 'PPER', 'ADV', 'VVFIN', 'KOUS', 'PDS', 'APPR', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ADV', 'VVINF', 'VMFIN', 'ADV'), 'right siblings': ['ADVX'], 'parent': 'TURN', 'auto preterminal span': (0, 43), 'span': (26, 42), 'left siblings': ['DM', 'DM', 'SIMPX', 'DM', 'VF', 'LK', 'VF', 'LK', 'MF', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		(SIMPX dann organisiere ich das auch)
		(DM ja)
		(VF ich)
		(LK denke)
		(VF dann)
		(LK ist)
		(MF es am sinnvollsten)
		[01;36m(SIMPX[00m
			(SIMPX wenn wir die restlichen dinge vertagen bis zu unserem nachsten telefonat)
			(C das)
			(MF wir dann)
			(VC fixieren)[01;36m)[00m
		(NF wie das mit den buchungen der hotels und so weiter aussehen sollte)
		(ADVX dann)))
Step:UNSET add
{'subtrees': ['SIMPX', 'C', 'MF', 'VC'], 'family': ['DM', 'DM', 'SIMPX', 'DM', 'VF', 'LK', 'VF', 'LK', 'MF', 'SIMPX', 'NF', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ART', 'ADJA', 'NN', 'VVFIN', 'APPR', 'APPR', 'PPOSAT', 'ADJA', 'NN', 'KOUS', 'PPER', 'ADV', 'VVFIN'), 'right siblings': [(NF (SIMPX (C (KOUS wie)) (MF (NX (PDS das)) (PX (APPR mit) (NX (NX (NX (ART den) (NN buchungen)) (NX (ART der) (NN hotels))) (KON und) (ADVX (ADVX (ADV so)) (ADV weiter))))) (VC (VXINF (VVINF aussehen)) (VXFIN (VMFIN sollte))))), (ADVX (ADV dann))], 'left siblings': [(DM (PTKANT ja)), (DM (ITJ gut)), (SIMPX (VF (ADVX (ADV dann))) (LK (VXFIN (VVFIN organisiere))) (MF (NX (PPER ich)) (NX (PDS das)) (ADVX (ADV auch)))), (DM (PTKANT ja)), (VF (NX (PPER ich))), (LK (VXFIN (VVFIN denke))), (VF (ADVX (ADV dann))), (LK (VXFIN (VAFIN ist))), (MF (NX (PPER es)) (ADJX (PTKA am) (ADJD sinnvollsten)))], 'auto preterminal span': (15, 30), 'span': (15, 30), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP ja gut dann organisiere ich das auch ja ich denke dann ist es am sinnvollsten wenn wir die restlichen dinge vertagen bis zu unserem nachsten telefonat das wir dann fixieren wie das mit den buchungen der hotels und so weiter aussehen sollte dann)

Sentence 400:
0 Initial errors
0 on fringe, 0 iterations

Sentence 401:
3 Initial errors
0 on fringe, 3 iterations
1 Error:Modifier Attachment
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(NX schonen tag noch)
		[01;31m(PX[00m
			(PX bis zum wiederhoren)
			(ADVX dann)[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				(PX
					(APPRART am)
					(NX telefon))[01;31m)[00m
			(LK nehme)
			(MF ich)
			(VC an)[01;31m)[00m
		(DM ja)))
Step:Modifier Attachment
{'subtrees': ['PX', 'ADVX'], 'family': ['DM', 'NX', 'PX', 'SIMPX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADJA', 'NN', 'ADV', 'APPR', 'APPRART', 'NN', 'ADV', 'APPRART', 'NN', 'VVFIN', 'PPER', 'PTKVZ', 'PTKANT'), 'right siblings': ['SIMPX', 'DM'], 'parent': 'TURN', 'auto preterminal span': (0, 14), 'span': (4, 8), 'left siblings': ['DM', 'NX'], 'label': 'PX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(NX schonen tag noch)
		(PX bis zum wiederhoren)
		(ADVX dann)
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				(PX
					(APPRART am)
					(NX telefon))[01;31m)[00m
			(LK nehme)
			(MF ich)
			(VC an)[01;31m)[00m
		(DM ja)))
Step:Unary
{'subtrees': ['PX'], 'family': ['VF', 'LK', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'NN', 'VVFIN', 'PPER', 'PTKVZ'), 'right siblings': ['LK', 'MF', 'VC'], 'parent': 'SIMPX', 'auto preterminal span': (8, 13), 'span': (8, 10), 'left siblings': [], 'label': 'VF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(NX schonen tag noch)
		(PX bis zum wiederhoren)
		(ADVX dann)
		[01;31m(SIMPX[00m
			(PX am telefon)
			(LK nehme)
			(MF ich)
			(VC an)[01;31m)[00m
		(DM ja)))
Step:UNSET remove
{'subtrees': ['PX', 'LK', 'MF', 'VC'], 'family': ['DM', 'NX', 'PX', 'ADVX', 'SIMPX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADJA', 'NN', 'ADV', 'APPR', 'APPRART', 'NN', 'ADV', 'APPRART', 'NN', 'VVFIN', 'PPER', 'PTKVZ', 'PTKANT'), 'right siblings': ['DM'], 'parent': 'TURN', 'auto preterminal span': (0, 14), 'span': (8, 13), 'left siblings': ['DM', 'NX', 'PX', 'ADVX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ja schonen tag noch bis zum wiederhoren dann am telefon nehme ich an ja)

Sentence 402:
0 Initial errors
0 on fringe, 0 iterations

Sentence 403:
0 Initial errors
0 on fringe, 0 iterations

Sentence 404:
28 Initial errors
0 on fringe, 16 iterations
3 Error:Clause Attachment
3 Error:UNSET move
2 Error:Different label
2 Error:Different label
2 Error:Different label
2 Error:Single Word Phrase
2 Error:Modifier Attachment
2 Error:UNSET move
2 Error:Modifier Attachment
2 Error:UNSET move
1 Error:Clause Attachment
1 Error:PP Attachment
1 Error:UNSET remove
1 Error:Single Word Phrase
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM ja)
		(SIMPX
			(VF dann)
			(LK wurde)
			(MF ich ja)
			(VC vorschlagen)
			[01;36m(SIMPX[00m
				[01;36m(NF[00m
					[01;31m(SIMPX[00m
						(VF es)
						(LK gibt)
						[01;36m(MF[00m
							[01;31m(MF[00m
								(NX
									(NN fluge))[01;31m)[00m
							[01;31m(NF[00m
								[01;31m(PX[00m
									(ADVX schon)
									[01;36m(PX[00m
										(APPR ab)
										(NX sechs uhr morgens)[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m
					(NF das wir wirklich um sechs uhr losfliegen)[01;36m)[00m[01;36m)[00m)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK sind)
			[01;31m(MF[00m [01;33m(MF[00m
				(NX wir)
				(PX in zwei stunden)[01;31m)[00m[01;31m)[00m
		[01;31m(ADVX[00m
			(ADV spater)[01;31m)[00m [01;33mMF)[00m
		[01;36m(SIMPX[00m
			[01;36m(VF[00m [01;31m(DM[00m
				(ADVX
					(ADV also))[01;31m)[00m[01;36m)[00m
			(SIMPX sind wir um acht in hannover)[01;36m)[00m
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(C bis)
				[01;31m(MF[00m [01;33m(FKOORD (MF[00m
					(NX
						(PPER wir))[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				(VF dann) [01;33mMF)[00m
				(FKOORD
					(LKM trinken wir noch einen kaffee)
					(KON und)
					[01;36m(LKM[00m [01;31m(FKOORD[00m
						(LK konnen)
						(FKOORD
							(MVC dann gleich zu unsrer filiale fahren)
							(KON und)
							[01;36m(MVC[00m [01;31m(MVCN[00m
								(MF dort)
								[01;36m(VXFIN[00m [01;31m(VC[00m
									[01;31m(VXINF[00m
										(VVINF anfangen)[01;31m)[00m[01;31m)[00m[01;36m)[00m
								(NF zu arbeiten)[01;31m)[00m[01;36m)[00m)[01;31m)[00m[01;36m)[00m)[01;31m)[00m[01;36m)[00m)) [01;33mFKOORD)[00m
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['C', 'MF', 'SIMPX'], 'mover info': [('SIMPX', (38, 57))], 'old_family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'ADVX', 'DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'start left siblings': ['DM', 'DM', 'SIMPX', 'SIMPX', 'ADVX', 'DM', 'SIMPX', 'SIMPX'], 'auto preterminals': ('PTKANT', 'PTKANT', 'ADV', 'VAFIN', 'PPER', 'ADV', 'VVINF', 'PPER', 'VVFIN', 'NN', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'KOUS', 'PPER', 'ADV', 'APPR', 'CARD', 'NN', 'VVFIN', 'ADV', 'VAFIN', 'PPER', 'APPR', 'CARD', 'NN', 'ADV', 'ADV', 'VAFIN', 'PPER', 'APPR', 'CARD', 'APPR', 'NE', 'KOUS', 'PPER', 'ADV', 'VVFIN', 'PPER', 'ADV', 'ART', 'NN', 'KON', 'VMFIN', 'ADV', 'ADV', 'APPR', 'PPOSAT', 'NN', 'VVINF', 'KON', 'ADV', 'VVINF', 'PTKZU', 'VVINF'), 'start right siblings': [], 'end left siblings': ['C', 'MF'], 'auto preterminal span': (0, 57), 'adding node already present': False, 'movers': ['SIMPX'], 'old_parent': 'TURN', 'added and moved': True, 'end right siblings': [], 'classified_type': 'Clause Attachment', 'type': 'move', 'added label': 'VXFIN'}
(TOP
	(TURN
		(DM ja)
		(DM ja)
		(SIMPX
			(VF dann)
			(LK wurde)
			(MF ich ja)
			(VC vorschlagen)
			[01;36m(SIMPX[00m
				[01;36m(NF[00m
					[01;31m(SIMPX[00m
						(VF es)
						(LK gibt)
						[01;36m(MF[00m
							[01;31m(MF[00m
								(NX
									(NN fluge))[01;31m)[00m
							[01;31m(NF[00m
								[01;31m(PX[00m
									(ADVX schon)
									[01;36m(PX[00m
										(APPR ab)
										(NX sechs uhr morgens)[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m
					(NF das wir wirklich um sechs uhr losfliegen)[01;36m)[00m[01;36m)[00m)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK sind)
			[01;31m(MF[00m [01;33m(MF[00m
				(NX wir)
				(PX in zwei stunden)[01;31m)[00m[01;31m)[00m
		[01;31m(ADVX[00m
			(ADV spater)[01;31m)[00m [01;33mMF)[00m
		[01;36m(SIMPX[00m
			[01;36m(VF[00m [01;31m(DM[00m
				(ADVX
					(ADV also))[01;31m)[00m[01;36m)[00m
			(SIMPX sind wir um acht in hannover)[01;36m)[00m
		(SIMPX
			(C bis)
			(FKOORD [01;33m(MF[00m
				[01;31m(MF[00m
					(NX
						(PPER wir))[01;31m)[00m
				[01;31m(SIMPX[00m
					(VF dann) [01;33mMF)[00m
					(FKOORD
						(LKM trinken wir noch einen kaffee)
						(KON und)
						[01;36m(LKM[00m [01;31m(FKOORD[00m
							(LK konnen)
							(FKOORD
								(MVC dann gleich zu unsrer filiale fahren)
								(KON und)
								[01;36m(MVC[00m [01;31m(MVCN[00m
									(MF dort)
									[01;36m(VXFIN[00m [01;31m(VC[00m
										[01;31m(VXINF[00m
											(VVINF anfangen)[01;31m)[00m[01;31m)[00m[01;36m)[00m
									(NF zu arbeiten)[01;31m)[00m[01;36m)[00m)[01;31m)[00m[01;36m)[00m)[01;31m)[00m))))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'NF', 'NF'], 'mover info': [('NF', (15, 22))], 'old_family': ['VF', 'LK', 'MF', 'VC', 'SIMPX', 'NF'], 'start left siblings': ['VF', 'LK', 'MF', 'VC', 'SIMPX'], 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'ADV', 'VVINF', 'PPER', 'VVFIN', 'NN', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'KOUS', 'PPER', 'ADV', 'APPR', 'CARD', 'NN', 'VVFIN'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'MF', 'NF'], 'auto preterminal span': (2, 22), 'adding node already present': False, 'movers': ['NF'], 'old_parent': 'SIMPX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'VXFIN'}
(TOP
	(TURN
		(DM ja)
		(DM ja)
		(SIMPX
			(VF dann)
			(LK wurde)
			(MF ich ja)
			(VC vorschlagen)
			(NF
				(SIMPX
					(VF es)
					(LK gibt)
					[01;36m(MF[00m
						[01;31m(MF[00m
							(NX
								(NN fluge))[01;31m)[00m
						[01;31m(NF[00m
							[01;31m(PX[00m
								(ADVX schon)
								[01;36m(PX[00m
									(APPR ab)
									(NX sechs uhr morgens)[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m
					(NF das wir wirklich um sechs uhr losfliegen))))
		[01;31m(SIMPX[00m
			(VF dann)
			(LK sind)
			[01;31m(MF[00m [01;33m(MF[00m
				(NX wir)
				(PX in zwei stunden)[01;31m)[00m[01;31m)[00m
		[01;31m(ADVX[00m
			(ADV spater)[01;31m)[00m [01;33mMF)[00m
		[01;36m(SIMPX[00m
			[01;36m(VF[00m [01;31m(DM[00m
				(ADVX
					(ADV also))[01;31m)[00m[01;36m)[00m
			(SIMPX sind wir um acht in hannover)[01;36m)[00m
		(SIMPX
			(C bis)
			(FKOORD [01;33m(MF[00m
				[01;31m(MF[00m
					(NX
						(PPER wir))[01;31m)[00m
				[01;31m(SIMPX[00m
					(VF dann) [01;33mMF)[00m
					(FKOORD
						(LKM trinken wir noch einen kaffee)
						(KON und)
						[01;36m(LKM[00m [01;31m(FKOORD[00m
							(LK konnen)
							(FKOORD
								(MVC dann gleich zu unsrer filiale fahren)
								(KON und)
								[01;36m(MVC[00m [01;31m(MVCN[00m
									(MF dort)
									[01;36m(VXFIN[00m [01;31m(VC[00m
										[01;31m(VXINF[00m
											(VVINF anfangen)[01;31m)[00m[01;31m)[00m[01;36m)[00m
									(NF zu arbeiten)[01;31m)[00m[01;36m)[00m)[01;31m)[00m[01;36m)[00m)[01;31m)[00m))))
Step:Different label
{'family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'ADVX', 'VF', 'SIMPX', 'SIMPX'], 'auto preterminal span': (29, 30), 'span': (29, 30), 'subtrees': ['ADVX'], 'parent': 'TURN', 'over_word': False, 'auto preterminals': ('ADV',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('DM', 'VF')}
(TOP
	(TURN
		(DM ja)
		(DM ja)
		(SIMPX
			(VF dann)
			(LK wurde)
			(MF ich ja)
			(VC vorschlagen)
			(NF
				(SIMPX
					(VF es)
					(LK gibt)
					[01;36m(MF[00m
						[01;31m(MF[00m
							(NX
								(NN fluge))[01;31m)[00m
						[01;31m(NF[00m
							[01;31m(PX[00m
								(ADVX schon)
								[01;36m(PX[00m
									(APPR ab)
									(NX sechs uhr morgens)[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m
					(NF das wir wirklich um sechs uhr losfliegen))))
		[01;31m(SIMPX[00m
			(VF dann)
			(LK sind)
			[01;31m(MF[00m [01;33m(MF[00m
				(NX wir)
				(PX in zwei stunden)[01;31m)[00m[01;31m)[00m
		[01;31m(ADVX[00m
			(ADV spater)[01;31m)[00m [01;33mMF)[00m
		[01;36m(SIMPX[00m
			(VF also)
			(SIMPX sind wir um acht in hannover)[01;36m)[00m
		(SIMPX
			(C bis)
			(FKOORD [01;33m(MF[00m
				[01;31m(MF[00m
					(NX
						(PPER wir))[01;31m)[00m
				[01;31m(SIMPX[00m
					(VF dann) [01;33mMF)[00m
					(FKOORD
						(LKM trinken wir noch einen kaffee)
						(KON und)
						[01;36m(LKM[00m [01;31m(FKOORD[00m
							(LK konnen)
							(FKOORD
								(MVC dann gleich zu unsrer filiale fahren)
								(KON und)
								[01;36m(MVC[00m [01;31m(MVCN[00m
									(MF dort)
									[01;36m(VXFIN[00m [01;31m(VC[00m
										[01;31m(VXINF[00m
											(VVINF anfangen)[01;31m)[00m[01;31m)[00m[01;36m)[00m
									(NF zu arbeiten)[01;31m)[00m[01;36m)[00m)[01;31m)[00m[01;36m)[00m)[01;31m)[00m))))
Step:Different label
{'family': ['LKM', 'KON', 'LKM'], 'auto preterminal span': (45, 57), 'span': (45, 57), 'subtrees': ['LK', 'FKOORD'], 'parent': 'FKOORD', 'over_word': False, 'auto preterminals': ('VMFIN', 'ADV', 'ADV', 'APPR', 'PPOSAT', 'NN', 'VVINF', 'KON', 'ADV', 'VVINF', 'PTKZU', 'VVINF'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('FKOORD', 'LKM')}
(TOP
	(TURN
		(DM ja)
		(DM ja)
		(SIMPX
			(VF dann)
			(LK wurde)
			(MF ich ja)
			(VC vorschlagen)
			(NF
				(SIMPX
					(VF es)
					(LK gibt)
					[01;36m(MF[00m
						[01;31m(MF[00m
							(NX
								(NN fluge))[01;31m)[00m
						[01;31m(NF[00m
							[01;31m(PX[00m
								(ADVX schon)
								[01;36m(PX[00m
									(APPR ab)
									(NX sechs uhr morgens)[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m
					(NF das wir wirklich um sechs uhr losfliegen))))
		[01;31m(SIMPX[00m
			(VF dann)
			(LK sind)
			[01;31m(MF[00m [01;33m(MF[00m
				(NX wir)
				(PX in zwei stunden)[01;31m)[00m[01;31m)[00m
		[01;31m(ADVX[00m
			(ADV spater)[01;31m)[00m [01;33mMF)[00m
		[01;36m(SIMPX[00m
			(VF also)
			(SIMPX sind wir um acht in hannover)[01;36m)[00m
		(SIMPX
			(C bis)
			(FKOORD [01;33m(MF[00m
				[01;31m(MF[00m
					(NX
						(PPER wir))[01;31m)[00m
				[01;31m(SIMPX[00m
					(VF dann) [01;33mMF)[00m
					(FKOORD
						(LKM trinken wir noch einen kaffee)
						(KON und)
						(LKM
							(LK konnen)
							(FKOORD
								(MVC dann gleich zu unsrer filiale fahren)
								(KON und)
								[01;36m(MVC[00m [01;31m(MVCN[00m
									(MF dort)
									[01;36m(VXFIN[00m [01;31m(VC[00m
										[01;31m(VXINF[00m
											(VVINF anfangen)[01;31m)[00m[01;31m)[00m[01;36m)[00m
									(NF zu arbeiten)[01;31m)[00m[01;36m)[00m)))[01;31m)[00m))))
Step:Different label
{'family': ['MVC', 'KON', 'MVC'], 'auto preterminal span': (53, 57), 'span': (53, 57), 'subtrees': ['MF', 'VC', 'NF'], 'parent': 'FKOORD', 'over_word': False, 'auto preterminals': ('ADV', 'VVINF', 'PTKZU', 'VVINF'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('MVCN', 'MVC')}
(TOP
	(TURN
		(DM ja)
		(DM ja)
		(SIMPX
			(VF dann)
			(LK wurde)
			(MF ich ja)
			(VC vorschlagen)
			(NF
				(SIMPX
					(VF es)
					(LK gibt)
					[01;36m(MF[00m
						[01;31m(MF[00m
							(NX
								(NN fluge))[01;31m)[00m
						[01;31m(NF[00m
							[01;31m(PX[00m
								(ADVX schon)
								[01;36m(PX[00m
									(APPR ab)
									(NX sechs uhr morgens)[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m
					(NF das wir wirklich um sechs uhr losfliegen))))
		[01;31m(SIMPX[00m
			(VF dann)
			(LK sind)
			[01;31m(MF[00m [01;33m(MF[00m
				(NX wir)
				(PX in zwei stunden)[01;31m)[00m[01;31m)[00m
		[01;31m(ADVX[00m
			(ADV spater)[01;31m)[00m [01;33mMF)[00m
		[01;36m(SIMPX[00m
			(VF also)
			(SIMPX sind wir um acht in hannover)[01;36m)[00m
		(SIMPX
			(C bis)
			(FKOORD [01;33m(MF[00m
				[01;31m(MF[00m
					(NX
						(PPER wir))[01;31m)[00m
				[01;31m(SIMPX[00m
					(VF dann) [01;33mMF)[00m
					(FKOORD
						(LKM trinken wir noch einen kaffee)
						(KON und)
						(LKM
							(LK konnen)
							(FKOORD
								(MVC dann gleich zu unsrer filiale fahren)
								(KON und)
								(MVC
									(MF dort)
									[01;36m(VXFIN[00m [01;31m(VC[00m
										[01;31m(VXINF[00m
											(VVINF anfangen)[01;31m)[00m[01;31m)[00m[01;36m)[00m
									(NF zu arbeiten)))))[01;31m)[00m))))
Step:Single Word Phrase
{'family': ['VXFIN'], 'auto preterminal span': (54, 55), 'span': (54, 55), 'subtrees': ['VVINF'], 'parent': 'VC', 'over_word': True, 'auto preterminals': ('VVINF',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VXINF', 'VXFIN')}
(TOP
	(TURN
		(DM ja)
		(DM ja)
		(SIMPX
			(VF dann)
			(LK wurde)
			(MF ich ja)
			(VC vorschlagen)
			(NF
				(SIMPX
					(VF es)
					(LK gibt)
					[01;36m(MF[00m
						[01;31m(MF[00m
							(NX
								(NN fluge))[01;31m)[00m
						[01;31m(NF[00m
							[01;31m(PX[00m
								(ADVX schon)
								[01;36m(PX[00m
									(APPR ab)
									(NX sechs uhr morgens)[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m
					(NF das wir wirklich um sechs uhr losfliegen))))
		[01;31m(SIMPX[00m
			(VF dann)
			(LK sind)
			[01;31m(MF[00m [01;33m(MF[00m
				(NX wir)
				(PX in zwei stunden)[01;31m)[00m[01;31m)[00m
		[01;31m(ADVX[00m
			(ADV spater)[01;31m)[00m [01;33mMF)[00m
		[01;36m(SIMPX[00m
			(VF also)
			(SIMPX sind wir um acht in hannover)[01;36m)[00m
		(SIMPX
			(C bis)
			(FKOORD [01;33m(MF[00m
				[01;31m(MF[00m
					(NX
						(PPER wir))[01;31m)[00m
				[01;31m(SIMPX[00m
					(VF dann) [01;33mMF)[00m
					(FKOORD
						(LKM trinken wir noch einen kaffee)
						(KON und)
						(LKM
							(LK konnen)
							(FKOORD
								(MVC dann gleich zu unsrer filiale fahren)
								(KON und)
								(MVC
									(MF dort)
									[01;31m(VC[00m
										(VXFIN
											(VVINF anfangen))[01;31m)[00m
									(NF zu arbeiten)))))[01;31m)[00m))))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'PX', 'ADVX'], 'mover info': [('ADVX', (28, 29))], 'old_family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'ADVX', 'VF', 'SIMPX', 'SIMPX'], 'start left siblings': ['DM', 'DM', 'SIMPX', 'SIMPX'], 'auto preterminals': ('PTKANT', 'PTKANT', 'ADV', 'VAFIN', 'PPER', 'ADV', 'VVINF', 'PPER', 'VVFIN', 'NN', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'KOUS', 'PPER', 'ADV', 'APPR', 'CARD', 'NN', 'VVFIN', 'ADV', 'VAFIN', 'PPER', 'APPR', 'CARD', 'NN', 'ADV', 'ADV', 'VAFIN', 'PPER', 'APPR', 'CARD', 'APPR', 'NE', 'KOUS', 'PPER', 'ADV', 'VVFIN', 'PPER', 'ADV', 'ART', 'NN', 'KON', 'VMFIN', 'ADV', 'ADV', 'APPR', 'PPOSAT', 'NN', 'VVINF', 'KON', 'ADV', 'VVINF', 'PTKZU', 'VVINF'), 'start right siblings': ['VF', 'SIMPX', 'SIMPX'], 'end left siblings': ['NX', 'PX'], 'auto preterminal span': (0, 57), 'movers': ['ADVX'], 'old_parent': 'TURN', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(DM ja)
		(SIMPX
			(VF dann)
			(LK wurde)
			(MF ich ja)
			(VC vorschlagen)
			(NF
				(SIMPX
					(VF es)
					(LK gibt)
					[01;36m(MF[00m
						[01;31m(MF[00m
							(NX
								(NN fluge))[01;31m)[00m
						[01;31m(NF[00m
							[01;31m(PX[00m
								(ADVX schon)
								[01;36m(PX[00m
									(APPR ab)
									(NX sechs uhr morgens)[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m
					(NF das wir wirklich um sechs uhr losfliegen))))
		[01;31m(SIMPX[00m
			(VF dann)
			(LK sind)
			(MF
				(NX wir)
				(PX in zwei stunden)
				[01;31m(ADVX[00m
					(ADV spater)[01;31m)[00m)[01;31m)[00m
		[01;36m(SIMPX[00m
			(VF also)
			(SIMPX sind wir um acht in hannover)[01;36m)[00m
		(SIMPX
			(C bis)
			(FKOORD [01;33m(MF[00m
				[01;31m(MF[00m
					(NX
						(PPER wir))[01;31m)[00m
				[01;31m(SIMPX[00m
					(VF dann) [01;33mMF)[00m
					(FKOORD
						(LKM trinken wir noch einen kaffee)
						(KON und)
						(LKM
							(LK konnen)
							(FKOORD
								(MVC dann gleich zu unsrer filiale fahren)
								(KON und)
								(MVC
									(MF dort)
									[01;31m(VC[00m
										(VXFIN
											(VVINF anfangen))[01;31m)[00m
									(NF zu arbeiten)))))[01;31m)[00m))))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['NX', 'NF'], 'mover info': [('NF', (10, 15))], 'old_family': ['VF', 'LK', 'MF', 'NF', 'NF'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('PPER', 'VVFIN', 'NN', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'KOUS', 'PPER', 'ADV', 'APPR', 'CARD', 'NN', 'VVFIN'), 'start right siblings': ['NF'], 'end left siblings': ['NX'], 'auto preterminal span': (7, 22), 'movers': ['NF'], 'old_parent': 'SIMPX', 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(DM ja)
		(SIMPX
			(VF dann)
			(LK wurde)
			(MF ich ja)
			(VC vorschlagen)
			(NF
				(SIMPX
					(VF es)
					(LK gibt)
					(MF
						(NX fluge)
						[01;31m(NF[00m
							[01;31m(PX[00m
								(ADVX schon)
								[01;36m(PX[00m
									(APPR ab)
									(NX sechs uhr morgens)[01;36m)[00m[01;31m)[00m[01;31m)[00m)
					(NF das wir wirklich um sechs uhr losfliegen))))
		[01;31m(SIMPX[00m
			(VF dann)
			(LK sind)
			(MF
				(NX wir)
				(PX in zwei stunden)
				[01;31m(ADVX[00m
					(ADV spater)[01;31m)[00m)[01;31m)[00m
		[01;36m(SIMPX[00m
			(VF also)
			(SIMPX sind wir um acht in hannover)[01;36m)[00m
		(SIMPX
			(C bis)
			(FKOORD [01;33m(MF[00m
				[01;31m(MF[00m
					(NX
						(PPER wir))[01;31m)[00m
				[01;31m(SIMPX[00m
					(VF dann) [01;33mMF)[00m
					(FKOORD
						(LKM trinken wir noch einen kaffee)
						(KON und)
						(LKM
							(LK konnen)
							(FKOORD
								(MVC dann gleich zu unsrer filiale fahren)
								(KON und)
								(MVC
									(MF dort)
									[01;31m(VC[00m
										(VXFIN
											(VVINF anfangen))[01;31m)[00m
									(NF zu arbeiten)))))[01;31m)[00m))))
Step:Modifier Attachment
{'new_parent': 'NF', 'new_family': ['ADVX', 'PX'], 'mover info': [('ADVX', (10, 11))], 'old_family': ['ADVX', 'APPR', 'NX'], 'start left siblings': [], 'auto preterminals': ('ADV', 'APPR', 'CARD', 'NN', 'ADV'), 'start right siblings': ['APPR', 'NX'], 'end left siblings': [], 'auto preterminal span': (10, 15), 'movers': ['ADVX'], 'old_parent': 'PX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['PX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(DM ja)
		(SIMPX
			(VF dann)
			(LK wurde)
			(MF ich ja)
			(VC vorschlagen)
			(NF
				(SIMPX
					(VF es)
					(LK gibt)
					(MF
						(NX fluge)
						[01;31m(NF[00m
							(ADVX schon)
							(PX ab sechs uhr morgens)[01;31m)[00m)
					(NF das wir wirklich um sechs uhr losfliegen))))
		[01;31m(SIMPX[00m
			(VF dann)
			(LK sind)
			(MF
				(NX wir)
				(PX in zwei stunden)
				[01;31m(ADVX[00m
					(ADV spater)[01;31m)[00m)[01;31m)[00m
		[01;36m(SIMPX[00m
			(VF also)
			(SIMPX sind wir um acht in hannover)[01;36m)[00m
		(SIMPX
			(C bis)
			(FKOORD [01;33m(MF[00m
				[01;31m(MF[00m
					(NX
						(PPER wir))[01;31m)[00m
				[01;31m(SIMPX[00m
					(VF dann) [01;33mMF)[00m
					(FKOORD
						(LKM trinken wir noch einen kaffee)
						(KON und)
						(LKM
							(LK konnen)
							(FKOORD
								(MVC dann gleich zu unsrer filiale fahren)
								(KON und)
								(MVC
									(MF dort)
									[01;31m(VC[00m
										(VXFIN
											(VVINF anfangen))[01;31m)[00m
									(NF zu arbeiten)))))[01;31m)[00m))))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['NX', 'VF'], 'mover info': [('VF', (38, 39))], 'old_family': ['VF', 'FKOORD'], 'start left siblings': [], 'auto preterminals': ('PPER', 'ADV', 'VVFIN', 'PPER', 'ADV', 'ART', 'NN', 'KON', 'VMFIN', 'ADV', 'ADV', 'APPR', 'PPOSAT', 'NN', 'VVINF', 'KON', 'ADV', 'VVINF', 'PTKZU', 'VVINF'), 'start right siblings': ['FKOORD'], 'end left siblings': ['NX'], 'auto preterminal span': (37, 57), 'movers': ['VF'], 'old_parent': 'SIMPX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(DM ja)
		(SIMPX
			(VF dann)
			(LK wurde)
			(MF ich ja)
			(VC vorschlagen)
			(NF
				(SIMPX
					(VF es)
					(LK gibt)
					(MF
						(NX fluge)
						[01;31m(NF[00m
							(ADVX schon)
							(PX ab sechs uhr morgens)[01;31m)[00m)
					(NF das wir wirklich um sechs uhr losfliegen))))
		[01;31m(SIMPX[00m
			(VF dann)
			(LK sind)
			(MF
				(NX wir)
				(PX in zwei stunden)
				[01;31m(ADVX[00m
					(ADV spater)[01;31m)[00m)[01;31m)[00m
		[01;36m(SIMPX[00m
			(VF also)
			(SIMPX sind wir um acht in hannover)[01;36m)[00m
		(SIMPX
			(C bis)
			(FKOORD
				(MF wir dann)
				[01;31m(SIMPX[00m
					(FKOORD
						(LKM trinken wir noch einen kaffee)
						(KON und)
						(LKM
							(LK konnen)
							(FKOORD
								(MVC dann gleich zu unsrer filiale fahren)
								(KON und)
								(MVC
									(MF dort)
									[01;31m(VC[00m
										(VXFIN
											(VVINF anfangen))[01;31m)[00m
									(NF zu arbeiten)))))[01;31m)[00m))))
Step:Clause Attachment
{'subtrees': ['VF', 'SIMPX'], 'family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'APPR', 'CARD', 'APPR', 'NE'), 'right siblings': [(SIMPX (C (KOUS bis)) (FKOORD (MF (NX (PPER wir)) (VF (ADVX (ADV dann)))) (SIMPX (FKOORD (LKM (LK (VXFIN (VVFIN trinken))) (MF (NX (PPER wir)) (ADVX (ADV noch)) (NX (ART einen) (NN kaffee)))) (KON und) (LKM (LK (VXFIN (VMFIN konnen))) (FKOORD (MVC (MF (ADVX (ADV dann)) (ADVX (ADV gleich)) (PX (APPR zu) (NX (PPOSAT unsrer) (NN filiale)))) (VC (VXINF (VVINF fahren)))) (KON und) (MVC (MF (ADVX (ADV dort))) (VC (VXFIN (VVINF anfangen))) (NF (SIMPX (VC (VXINF (PTKZU zu) (VVINF arbeiten))))))))))))], 'left siblings': [(DM (PTKANT ja)), (DM (PTKANT ja)), (SIMPX (VF (ADVX (ADV dann))) (LK (VXFIN (VAFIN wurde))) (MF (NX (PPER ich)) (ADVX (ADV ja))) (VC (VXINF (VVINF vorschlagen))) (NF (SIMPX (VF (NX (PPER es))) (LK (VXFIN (VVFIN gibt))) (MF (NX (NN fluge)) (NF (ADVX (ADV schon)) (PX (APPR ab) (NX (NX (ADJX (CARD sechs)) (NN uhr)) (ADVX (ADV morgens)))))) (NF (SIMPX (C (KOUS das)) (MF (NX (PPER wir)) (ADVX (ADV wirklich)) (PX (APPR um) (NX (ADJX (CARD sechs)) (NN uhr)))) (VC (VXFIN (VVFIN losfliegen)))))))), (SIMPX (VF (ADVX (ADV dann))) (LK (VXFIN (VAFIN sind))) (MF (NX (PPER wir)) (PX (APPR in) (NX (ADJX (CARD zwei)) (NN stunden))) (ADVX (ADV spater))))], 'auto preterminal span': (29, 36), 'span': (29, 36), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM ja)
		(SIMPX
			(VF dann)
			(LK wurde)
			(MF ich ja)
			(VC vorschlagen)
			(NF
				(SIMPX
					(VF es)
					(LK gibt)
					(MF
						(NX fluge)
						[01;31m(NF[00m
							(ADVX schon)
							(PX ab sechs uhr morgens)[01;31m)[00m)
					(NF das wir wirklich um sechs uhr losfliegen))))
		[01;31m(SIMPX[00m
			(VF dann)
			(LK sind)
			(MF
				(NX wir)
				(PX in zwei stunden)
				[01;31m(ADVX[00m
					(ADV spater)[01;31m)[00m)[01;31m)[00m
		(SIMPX also sind wir um acht in hannover)
		(SIMPX
			(C bis)
			(FKOORD
				(MF wir dann)
				[01;31m(SIMPX[00m
					(FKOORD
						(LKM trinken wir noch einen kaffee)
						(KON und)
						(LKM
							(LK konnen)
							(FKOORD
								(MVC dann gleich zu unsrer filiale fahren)
								(KON und)
								(MVC
									(MF dort)
									[01;31m(VC[00m
										(VXFIN
											(VVINF anfangen))[01;31m)[00m
									(NF zu arbeiten)))))[01;31m)[00m))))
Step:PP Attachment
{'subtrees': ['ADVX', 'PX'], 'family': ['NX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'ADV', 'APPR', 'CARD', 'NN', 'ADV'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (9, 15), 'span': (10, 15), 'left siblings': ['NX'], 'label': 'NF', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM ja)
		(SIMPX dann wurde ich ja vorschlagen es gibt fluge schon ab sechs uhr morgens das wir wirklich um sechs uhr losfliegen)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK sind)
			(MF
				(NX wir)
				(PX in zwei stunden)
				[01;31m(ADVX[00m
					(ADV spater)[01;31m)[00m)[01;31m)[00m
		(SIMPX also sind wir um acht in hannover)
		(SIMPX
			(C bis)
			(FKOORD
				(MF wir dann)
				[01;31m(SIMPX[00m
					(FKOORD
						(LKM trinken wir noch einen kaffee)
						(KON und)
						(LKM
							(LK konnen)
							(FKOORD
								(MVC dann gleich zu unsrer filiale fahren)
								(KON und)
								(MVC
									(MF dort)
									[01;31m(VC[00m
										(VXFIN
											(VVINF anfangen))[01;31m)[00m
									(NF zu arbeiten)))))[01;31m)[00m))))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PTKANT', 'ADV', 'VAFIN', 'PPER', 'ADV', 'VVINF', 'PPER', 'VVFIN', 'NN', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'KOUS', 'PPER', 'ADV', 'APPR', 'CARD', 'NN', 'VVFIN', 'ADV', 'VAFIN', 'PPER', 'APPR', 'CARD', 'NN', 'ADV', 'ADV', 'VAFIN', 'PPER', 'APPR', 'CARD', 'APPR', 'NE', 'KOUS', 'PPER', 'ADV', 'VVFIN', 'PPER', 'ADV', 'ART', 'NN', 'KON', 'VMFIN', 'ADV', 'ADV', 'APPR', 'PPOSAT', 'NN', 'VVINF', 'KON', 'ADV', 'VVINF', 'PTKZU', 'VVINF'), 'right siblings': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 57), 'span': (22, 29), 'left siblings': ['DM', 'DM', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM ja)
		(SIMPX dann wurde ich ja vorschlagen es gibt fluge schon ab sechs uhr morgens das wir wirklich um sechs uhr losfliegen)
		(VF dann)
		(LK sind)
		(MF
			(NX wir)
			(PX in zwei stunden)
			[01;31m(ADVX[00m
				(ADV spater)[01;31m)[00m)
		(SIMPX also sind wir um acht in hannover)
		(SIMPX
			(C bis)
			(FKOORD
				(MF wir dann)
				[01;31m(SIMPX[00m
					(FKOORD
						(LKM trinken wir noch einen kaffee)
						(KON und)
						(LKM
							(LK konnen)
							(FKOORD
								(MVC dann gleich zu unsrer filiale fahren)
								(KON und)
								(MVC
									(MF dort)
									[01;31m(VC[00m
										(VXFIN
											(VVINF anfangen))[01;31m)[00m
									(NF zu arbeiten)))))[01;31m)[00m))))
Step:Single Word Phrase
{'subtrees': ['ADV'], 'family': ['NX', 'PX', 'ADVX'], 'over_word': True, 'over words': True, 'auto preterminals': ('PPER', 'APPR', 'CARD', 'NN', 'ADV'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (24, 29), 'span': (28, 29), 'left siblings': ['NX', 'PX'], 'label': 'ADVX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM ja)
		(SIMPX dann wurde ich ja vorschlagen es gibt fluge schon ab sechs uhr morgens das wir wirklich um sechs uhr losfliegen)
		(VF dann)
		(LK sind)
		(MF wir in zwei stunden spater)
		(SIMPX also sind wir um acht in hannover)
		(SIMPX
			(C bis)
			(FKOORD
				(MF wir dann)
				[01;31m(SIMPX[00m
					(FKOORD
						(LKM trinken wir noch einen kaffee)
						(KON und)
						(LKM
							(LK konnen)
							(FKOORD
								(MVC dann gleich zu unsrer filiale fahren)
								(KON und)
								(MVC
									(MF dort)
									[01;31m(VC[00m
										(VXFIN
											(VVINF anfangen))[01;31m)[00m
									(NF zu arbeiten)))))[01;31m)[00m))))
Step:Unary
{'subtrees': ['FKOORD'], 'family': ['MF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV', 'VVFIN', 'PPER', 'ADV', 'ART', 'NN', 'KON', 'VMFIN', 'ADV', 'ADV', 'APPR', 'PPOSAT', 'NN', 'VVINF', 'KON', 'ADV', 'VVINF', 'PTKZU', 'VVINF'), 'right siblings': [], 'parent': 'FKOORD', 'auto preterminal span': (37, 57), 'span': (39, 57), 'left siblings': ['MF'], 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM ja)
		(SIMPX dann wurde ich ja vorschlagen es gibt fluge schon ab sechs uhr morgens das wir wirklich um sechs uhr losfliegen)
		(VF dann)
		(LK sind)
		(MF wir in zwei stunden spater)
		(SIMPX also sind wir um acht in hannover)
		(SIMPX
			(C bis)
			(FKOORD
				(MF wir dann)
				(FKOORD
					(LKM trinken wir noch einen kaffee)
					(KON und)
					(LKM
						(LK konnen)
						(FKOORD
							(MVC dann gleich zu unsrer filiale fahren)
							(KON und)
							(MVC
								(MF dort)
								[01;31m(VC[00m
									(VXFIN
										(VVINF anfangen))[01;31m)[00m
								(NF zu arbeiten)))))))))
Step:Unary
{'subtrees': ['VXFIN'], 'family': ['MF', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVINF', 'PTKZU', 'VVINF'), 'right siblings': ['NF'], 'parent': 'MVC', 'auto preterminal span': (53, 57), 'span': (54, 55), 'left siblings': ['MF'], 'label': 'VC', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja ja dann wurde ich ja vorschlagen es gibt fluge schon ab sechs uhr morgens das wir wirklich um sechs uhr losfliegen dann sind wir in zwei stunden spater also sind wir um acht in hannover bis wir dann trinken wir noch einen kaffee und konnen dann gleich zu unsrer filiale fahren und dort anfangen zu arbeiten)

Sentence 405:
9 Initial errors
0 on fringe, 7 iterations
3 Error:UNSET move
1 Error:Unary
1 Error:UNSET remove
1 Error:Unary
1 Error:UNSET remove
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM also)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF ich)
			(LK wurde)
			[01;31m(MF[00m
				(ADVX
					(ADVX ganz)
					(ADV gerne))[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(C wenn)
			[01;31m(MF[00m
				(PX
					(APPR nach)
					(NX so einem harten arbeitstag))[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(LV[00m
				(SIMPX
					(C wenn)
					(MF es da eine sauna)
					(VC gabe))[01;31m)[00m [01;33mSIMPX)[00m
			[01;36m(SIMPX[00m
				(VF ich)
				(LK wurde)
				(MF ganz gern in die sauna)
				(VC gehen)
				[01;36m(ADVX[00m
					(NF
						(ADVX dann)
						(ADVX kurz))[01;36m)[00m[01;36m)[00m[01;31m)[00m
		(SIMPX das ich mich ein bischen erholen kann)))
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['DM', 'SIMPX', 'SIMPX', 'LV', 'SIMPX', 'SIMPX'], 'mover info': [('LV', (11, 17))], 'old_family': ['LV', 'VF', 'LK', 'MF', 'VC', 'NF'], 'start left siblings': [], 'auto preterminals': ('ADV', 'PPER', 'VAFIN', 'ADV', 'ADV', 'KOUS', 'APPR', 'ADV', 'ART', 'ADJA', 'NN', 'KOUS', 'PPER', 'ADV', 'ART', 'NN', 'VVFIN', 'PPER', 'VAFIN', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'VVINF', 'ADV', 'ADV', 'KOUS', 'PPER', 'PRF', 'ART', 'PIS', 'VVINF', 'VMFIN'), 'start right siblings': ['VF', 'LK', 'MF', 'VC', 'NF'], 'end left siblings': ['DM', 'SIMPX', 'SIMPX'], 'auto preterminal span': (0, 34), 'adding node already present': True, 'movers': ['LV'], 'old_parent': 'SIMPX', 'added and moved': True, 'end right siblings': ['SIMPX', 'SIMPX'], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'ADVX'}
(TOP
	(TURN
		(DM also)
		(SIMPX
			[01;31m(SIMPX[00m
				(VF ich)
				(LK wurde)
				[01;31m(MF[00m
					(ADVX
						(ADVX ganz)
						(ADV gerne))[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				(C wenn)
				[01;31m(MF[00m
					(PX
						(APPR nach)
						(NX so einem harten arbeitstag))[01;31m)[00m[01;31m)[00m
			[01;31m(LV[00m
				(SIMPX
					(C wenn)
					(MF es da eine sauna)
					(VC gabe))[01;31m)[00m)
		(SIMPX
			(VF ich)
			(LK wurde)
			(MF ganz gern in die sauna)
			(VC gehen)
			[01;36m(ADVX[00m
				(NF
					(ADVX dann)
					(ADVX kurz))[01;36m)[00m)
		(SIMPX das ich mich ein bischen erholen kann)))
Step:Unary
{'subtrees': ['NF'], 'family': ['VF', 'LK', 'MF', 'VC', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV'), 'right siblings': [], 'left siblings': [(VF (NX (PPER ich))), (LK (VXFIN (VAFIN wurde))), (MF (ADVX (ADVX (ADV ganz)) (ADV gern)) (PX (APPR in) (NX (ART die) (NN sauna)))), (VC (VXINF (VVINF gehen)))], 'auto preterminal span': (25, 27), 'span': (25, 27), 'parent': 'SIMPX', 'label': 'ADVX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		(SIMPX
			[01;31m(SIMPX[00m
				(VF ich)
				(LK wurde)
				[01;31m(MF[00m
					(ADVX
						(ADVX ganz)
						(ADV gerne))[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				(C wenn)
				[01;31m(MF[00m
					(PX
						(APPR nach)
						(NX so einem harten arbeitstag))[01;31m)[00m[01;31m)[00m
			[01;31m(LV[00m
				(SIMPX
					(C wenn)
					(MF es da eine sauna)
					(VC gabe))[01;31m)[00m)
		(SIMPX ich wurde ganz gern in die sauna gehen dann kurz)
		(SIMPX das ich mich ein bischen erholen kann)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['SIMPX', 'SIMPX', 'LV'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'ADV', 'ADV', 'KOUS', 'APPR', 'ADV', 'ART', 'ADJA', 'NN', 'KOUS', 'PPER', 'ADV', 'ART', 'NN', 'VVFIN'), 'right siblings': ['SIMPX', 'LV'], 'parent': 'SIMPX', 'auto preterminal span': (1, 17), 'span': (1, 5), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX
			(VF ich)
			(LK wurde)
			[01;31m(MF[00m
				(ADVX
					(ADVX ganz)
					(ADV gerne))[01;31m)[00m
			[01;31m(SIMPX[00m
				(C wenn)
				[01;31m(MF[00m
					(PX
						(APPR nach)
						(NX so einem harten arbeitstag))[01;31m)[00m[01;31m)[00m
			[01;31m(LV[00m
				(SIMPX
					(C wenn)
					(MF es da eine sauna)
					(VC gabe))[01;31m)[00m)
		(SIMPX ich wurde ganz gern in die sauna gehen dann kurz)
		(SIMPX das ich mich ein bischen erholen kann)))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['VF', 'LK', 'MF', 'SIMPX', 'LV'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'ADV', 'ADV', 'KOUS', 'APPR', 'ADV', 'ART', 'ADJA', 'NN', 'KOUS', 'PPER', 'ADV', 'ART', 'NN', 'VVFIN'), 'right siblings': ['SIMPX', 'LV'], 'parent': 'SIMPX', 'auto preterminal span': (1, 17), 'span': (3, 5), 'left siblings': ['VF', 'LK'], 'label': 'MF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX
			(VF ich)
			(LK wurde)
			(ADVX ganz gerne)
			[01;31m(SIMPX[00m
				(C wenn)
				[01;31m(MF[00m
					(PX
						(APPR nach)
						(NX so einem harten arbeitstag))[01;31m)[00m[01;31m)[00m
			[01;31m(LV[00m
				(SIMPX
					(C wenn)
					(MF es da eine sauna)
					(VC gabe))[01;31m)[00m)
		(SIMPX ich wurde ganz gern in die sauna gehen dann kurz)
		(SIMPX das ich mich ein bischen erholen kann)))
Step:UNSET remove
{'subtrees': ['C', 'MF'], 'family': ['VF', 'LK', 'ADVX', 'SIMPX', 'LV'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'ADV', 'ADV', 'KOUS', 'APPR', 'ADV', 'ART', 'ADJA', 'NN', 'KOUS', 'PPER', 'ADV', 'ART', 'NN', 'VVFIN'), 'right siblings': ['LV'], 'parent': 'SIMPX', 'auto preterminal span': (1, 17), 'span': (5, 11), 'left siblings': ['VF', 'LK', 'ADVX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX
			(VF ich)
			(LK wurde)
			(ADVX ganz gerne)
			(C wenn)
			[01;31m(MF[00m
				(PX
					(APPR nach)
					(NX so einem harten arbeitstag))[01;31m)[00m
			[01;31m(LV[00m
				(SIMPX
					(C wenn)
					(MF es da eine sauna)
					(VC gabe))[01;31m)[00m)
		(SIMPX ich wurde ganz gern in die sauna gehen dann kurz)
		(SIMPX das ich mich ein bischen erholen kann)))
Step:Unary
{'subtrees': ['PX'], 'family': ['VF', 'LK', 'ADVX', 'C', 'MF', 'LV'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'ADV', 'ADV', 'KOUS', 'APPR', 'ADV', 'ART', 'ADJA', 'NN', 'KOUS', 'PPER', 'ADV', 'ART', 'NN', 'VVFIN'), 'right siblings': ['LV'], 'parent': 'SIMPX', 'auto preterminal span': (1, 17), 'span': (6, 11), 'left siblings': ['VF', 'LK', 'ADVX', 'C'], 'label': 'MF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX
			(VF ich)
			(LK wurde)
			(ADVX ganz gerne)
			(C wenn)
			(PX nach so einem harten arbeitstag)
			[01;31m(LV[00m
				(SIMPX
					(C wenn)
					(MF es da eine sauna)
					(VC gabe))[01;31m)[00m)
		(SIMPX ich wurde ganz gern in die sauna gehen dann kurz)
		(SIMPX das ich mich ein bischen erholen kann)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['VF', 'LK', 'ADVX', 'C', 'PX', 'LV'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'ADV', 'ADV', 'KOUS', 'APPR', 'ADV', 'ART', 'ADJA', 'NN', 'KOUS', 'PPER', 'ADV', 'ART', 'NN', 'VVFIN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (1, 17), 'span': (11, 17), 'left siblings': ['VF', 'LK', 'ADVX', 'C', 'PX'], 'label': 'LV', 'classified_type': 'Unary', 'type': 'remove'}
(TOP also ich wurde ganz gerne wenn nach so einem harten arbeitstag wenn es da eine sauna gabe ich wurde ganz gern in die sauna gehen dann kurz das ich mich ein bischen erholen kann)

Sentence 406:
8 Initial errors
0 on fringe, 5 iterations
3 Error:UNSET move
2 Error:Single Word Phrase
1 Error:Unary
1 Error:Clause Attachment
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM na ja)
		(DM gut)
		(SIMPX
			[01;36m(SIMPX[00m
				[01;36m(VF[00m
					(KOORD aber)
					[01;31m(VF[00m
						[01;31m(PX[00m
							[01;36m(LK[00m [01;36m(VXFIN[00m [01;31m(PX[00m
								(PROP dafur)[01;31m)[00m[01;36m)[00m[01;36m)[00m
							[01;31m(SIMPX[00m
								(C das)
								(MF wir die woche dann so)
								(VC vollpacken)
								(NF mit terminen)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m
			(LK ware)
			(MF das sicherlich okay))))
Step:UNSET move
{'new_parent': 'VF', 'new_family': ['KOORD', 'PX'], 'mover info': [('KOORD', (3, 4))], 'old_family': ['KOORD', 'VF', 'LK', 'MF'], 'start left siblings': [], 'auto preterminals': ('KON', 'PROP', 'KOUS', 'PPER', 'ART', 'NN', 'ADV', 'ADV', 'VVFIN', 'APPR', 'NN', 'VAFIN', 'PDS', 'ADV', 'ADJD'), 'start right siblings': ['VF', 'LK', 'MF'], 'end left siblings': [], 'auto preterminal span': (3, 18), 'adding node already present': False, 'movers': ['KOORD'], 'old_parent': 'SIMPX', 'POS confusion': ('KON', 'KON'), 'added and moved': True, 'end right siblings': ['PX'], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'LK'}
(TOP
	(TURN
		(DM na ja)
		(DM gut)
		(SIMPX
			(SIMPX
				(VF
					(KOORD aber)
					[01;31m(PX[00m
						[01;36m(LK[00m [01;36m(VXFIN[00m [01;31m(PX[00m
							(PROP dafur)[01;31m)[00m[01;36m)[00m[01;36m)[00m
						[01;31m(SIMPX[00m
							(C das)
							(MF wir die woche dann so)
							(VC vollpacken)
							(NF mit terminen)[01;31m)[00m[01;31m)[00m))
			(LK ware)
			(MF das sicherlich okay))))
Step:Single Word Phrase
{'family': ['VXFIN', 'SIMPX'], 'auto preterminal span': (4, 5), 'span': (4, 5), 'subtrees': ['PROP'], 'parent': 'PX', 'over_word': True, 'auto preterminals': ('PROP',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('PX', 'VXFIN')}
(TOP
	(TURN
		(DM na ja)
		(DM gut)
		(SIMPX
			(SIMPX
				(VF
					(KOORD aber)
					[01;31m(PX[00m
						[01;36m(LK[00m
							(VXFIN
								(PROP dafur))[01;36m)[00m
						[01;31m(SIMPX[00m
							(C das)
							(MF wir die woche dann so)
							(VC vollpacken)
							(NF mit terminen)[01;31m)[00m[01;31m)[00m))
			(LK ware)
			(MF das sicherlich okay))))
Step:Unary
{'subtrees': ['VXFIN'], 'family': ['LK', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PROP',), 'right siblings': [(SIMPX (C (KOUS das)) (MF (NX (PPER wir)) (NX (ART die) (NN woche)) (ADVX (ADV dann)) (ADVX (ADV so))) (VC (VXFIN (VVFIN vollpacken))) (NF (PX (APPR mit) (NX (NN terminen)))))], 'left siblings': [], 'auto preterminal span': (4, 5), 'span': (4, 5), 'parent': 'PX', 'label': 'LK', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM na ja)
		(DM gut)
		(SIMPX
			(SIMPX
				(VF
					(KOORD aber)
					[01;31m(PX[00m
						(LK dafur)
						[01;31m(SIMPX[00m
							(C das)
							(MF wir die woche dann so)
							(VC vollpacken)
							(NF mit terminen)[01;31m)[00m[01;31m)[00m))
			(LK ware)
			(MF das sicherlich okay))))
Step:Clause Attachment
{'subtrees': ['LK', 'SIMPX'], 'family': ['KOORD', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'PROP', 'KOUS', 'PPER', 'ART', 'NN', 'ADV', 'ADV', 'VVFIN', 'APPR', 'NN'), 'right siblings': [], 'parent': 'VF', 'auto preterminal span': (3, 14), 'span': (4, 14), 'left siblings': ['KOORD'], 'label': 'PX', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM na ja)
		(DM gut)
		(SIMPX
			(SIMPX
				(VF
					(KOORD aber)
					(LK dafur)
					[01;31m(SIMPX[00m
						(C das)
						(MF wir die woche dann so)
						(VC vollpacken)
						(NF mit terminen)[01;31m)[00m))
			(LK ware)
			(MF das sicherlich okay))))
Step:UNSET remove
{'subtrees': ['C', 'MF', 'VC', 'NF'], 'family': ['KOORD', 'LK', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'PROP', 'KOUS', 'PPER', 'ART', 'NN', 'ADV', 'ADV', 'VVFIN', 'APPR', 'NN'), 'right siblings': [], 'parent': 'VF', 'auto preterminal span': (3, 14), 'span': (5, 14), 'left siblings': ['KOORD', 'LK'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP na ja gut aber dafur das wir die woche dann so vollpacken mit terminen ware das sicherlich okay)

Sentence 407:
4 Initial errors
0 on fringe, 2 iterations
3 Error:UNSET move
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		[01;36m(SIMPX[00m
			(SIMPX ich kummere mich um die fluge)
			[01;31m(SIMPX[00m
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				[01;36m(SIMPX[00m
					(VF wir)
					(LK checken)
					(MF mal)
					(NF ob wir dienstag abend oder mittwoch morgen nach berlin fliegen konnen)[01;36m)[00m[01;31m)[00m[01;36m)[00m
		(SIMPX und ich gebe ihnen dann noch bescheid)
		(SIMPX ware ihnen beides recht)))
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['DM', 'SIMPX', 'KOORD', 'SIMPX', 'SIMPX', 'SIMPX'], 'mover info': [('KOORD', (7, 8))], 'old_family': ['KOORD', 'VF', 'LK', 'MF', 'NF'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'PPER', 'VVFIN', 'PRF', 'APPR', 'ART', 'NN', 'KON', 'PPER', 'VVFIN', 'ADV', 'KOUS', 'PPER', 'NN', 'ADV', 'KON', 'NN', 'ADV', 'APPR', 'NE', 'VVINF', 'VMFIN', 'KON', 'PPER', 'VVFIN', 'PPER', 'ADV', 'ADV', 'NN', 'VAFIN', 'PPER', 'PIS', 'ADJD'), 'start right siblings': ['VF', 'LK', 'MF', 'NF'], 'end left siblings': ['DM', 'SIMPX'], 'auto preterminal span': (0, 33), 'adding node already present': False, 'movers': ['KOORD'], 'old_parent': 'SIMPX', 'POS confusion': ('KON', 'KON'), 'added and moved': True, 'end right siblings': ['SIMPX', 'SIMPX', 'SIMPX'], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'SIMPX'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(SIMPX ich kummere mich um die fluge)
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(SIMPX wir checken mal ob wir dienstag abend oder mittwoch morgen nach berlin fliegen konnen))
		(SIMPX und ich gebe ihnen dann noch bescheid)
		(SIMPX ware ihnen beides recht)))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['SIMPX', 'KOORD', 'SIMPX'], 'over_word': True, 'over words': True, 'auto preterminals': ('PPER', 'VVFIN', 'PRF', 'APPR', 'ART', 'NN', 'KON', 'PPER', 'VVFIN', 'ADV', 'KOUS', 'PPER', 'NN', 'ADV', 'KON', 'NN', 'ADV', 'APPR', 'NE', 'VVINF', 'VMFIN'), 'right siblings': ['SIMPX'], 'parent': 'SIMPX', 'auto preterminal span': (1, 22), 'span': (7, 8), 'left siblings': ['SIMPX'], 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP ja ich kummere mich um die fluge und wir checken mal ob wir dienstag abend oder mittwoch morgen nach berlin fliegen konnen und ich gebe ihnen dann noch bescheid ware ihnen beides recht)

Sentence 408:
0 Initial errors
0 on fringe, 0 iterations

Sentence 409:
8 Initial errors
0 on fringe, 6 iterations
2 Error:Single Word Phrase
1 Error:UNSET remove
2 Error:Modifier Attachment
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM also)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK hatte)
			(MF grose lust)
			[01;33m(SIMPX (NF[00m (NF ins theater zu gehen)[01;31m)[00m
		[01;31m(NX[00m
			(ADVX aber)
			(ADVX nicht)
			(NX so was ganz schweres)[01;31m)[00m [01;33mNF) SIMPX)[00m
		(DM also)
		(SIMPX
			(VF ich)
			(LK weis)
			(MF zufallig)
			(NF
				(SIMPX
					[01;36m(NX[00m [01;31m(C[00m
						(KOUS das)[01;31m)[00m[01;36m)[00m
					(MF im letzten monat woyzek da)
					(VC gegeben wurde))))
		(SIMPX das ware mir ein bischen zu anstrengend)
		[01;31m(SIMPX[00m
			(VF vielleicht)
			(LK finden)
			[01;31m(MF[00m
				(NX wir)
				(NX so was in richtung musical oder variete)[01;31m)[00m[01;31m)[00m))
Step:Single Word Phrase
{'family': ['NX', 'MF', 'VC'], 'auto preterminal span': (19, 20), 'span': (19, 20), 'subtrees': ['KOUS'], 'parent': 'SIMPX', 'over_word': True, 'auto preterminals': ('KOUS',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('C', 'NX')}
(TOP
	(TURN
		(DM also)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK hatte)
			(MF grose lust)
			[01;33m(SIMPX (NF[00m (NF ins theater zu gehen)[01;31m)[00m
		[01;31m(NX[00m
			(ADVX aber)
			(ADVX nicht)
			(NX so was ganz schweres)[01;31m)[00m [01;33mNF) SIMPX)[00m
		(DM also)
		(SIMPX ich weis zufallig das im letzten monat woyzek da gegeben wurde)
		(SIMPX das ware mir ein bischen zu anstrengend)
		[01;31m(SIMPX[00m
			(VF vielleicht)
			(LK finden)
			[01;31m(MF[00m
				(NX wir)
				(NX so was in richtung musical oder variete)[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'NF'], 'family': ['DM', 'SIMPX', 'NX', 'DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPER', 'VAFIN', 'ADJA', 'NN', 'APPRART', 'NN', 'PTKZU', 'VVINF', 'ADV', 'PTKNEG', 'ADV', 'PIS', 'ADV', 'NN', 'ADV', 'PPER', 'VVFIN', 'ADV', 'KOUS', 'APPRART', 'ADJA', 'NN', 'NE', 'ADV', 'VVPP', 'VAFIN', 'PDS', 'VAFIN', 'PPER', 'ART', 'PIS', 'PTKA', 'ADJD', 'ADV', 'VVFIN', 'PPER', 'ADV', 'PIS', 'APPR', 'NN', 'NN', 'KON', 'NN'), 'right siblings': ['NX', 'DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 44), 'span': (1, 9), 'left siblings': ['DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(VF ich)
		(LK hatte)
		(MF grose lust)
		[01;36m(SIMPX[00m
			[01;36m(NF[00m
				(NF ins theater zu gehen)
				[01;31m(NX[00m
					(ADVX aber)
					(ADVX nicht)
					(NX so was ganz schweres)[01;31m)[00m[01;36m)[00m[01;36m)[00m
		(DM also)
		(SIMPX ich weis zufallig das im letzten monat woyzek da gegeben wurde)
		(SIMPX das ware mir ein bischen zu anstrengend)
		[01;31m(SIMPX[00m
			(VF vielleicht)
			(LK finden)
			[01;31m(MF[00m
				(NX wir)
				(NX so was in richtung musical oder variete)[01;31m)[00m[01;31m)[00m))
Step:Modifier Attachment
{'new_parent': 'TURN', 'new_family': ['DM', 'VF', 'LK', 'MF', 'NF', 'ADVX', 'ADVX', 'NX', 'DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'mover info': [('ADVX', (9, 10)), ('ADVX', (10, 11))], 'old_family': ['ADVX', 'ADVX', 'NX'], 'start left siblings': [], 'auto preterminals': ('ADV', 'PPER', 'VAFIN', 'ADJA', 'NN', 'APPRART', 'NN', 'PTKZU', 'VVINF', 'ADV', 'PTKNEG', 'ADV', 'PIS', 'ADV', 'NN', 'ADV', 'PPER', 'VVFIN', 'ADV', 'KOUS', 'APPRART', 'ADJA', 'NN', 'NE', 'ADV', 'VVPP', 'VAFIN', 'PDS', 'VAFIN', 'PPER', 'ART', 'PIS', 'PTKA', 'ADJD', 'ADV', 'VVFIN', 'PPER', 'ADV', 'PIS', 'APPR', 'NN', 'NN', 'KON', 'NN'), 'start right siblings': ['NX'], 'end left siblings': ['DM', 'VF', 'LK', 'MF', 'NF'], 'auto preterminal span': (0, 44), 'adding node already present': False, 'movers': ['ADVX', 'ADVX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': ['NX', 'DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'SIMPX'}
(TOP
	(TURN
		(DM also)
		(VF ich)
		(LK hatte)
		(MF grose lust)
		[01;36m(SIMPX[00m
			(NF
				(NF ins theater zu gehen)
				(ADVX aber)
				(ADVX nicht)
				(NX so was ganz schweres))[01;36m)[00m
		(DM also)
		(SIMPX ich weis zufallig das im letzten monat woyzek da gegeben wurde)
		(SIMPX das ware mir ein bischen zu anstrengend)
		[01;31m(SIMPX[00m
			(VF vielleicht)
			(LK finden)
			[01;31m(MF[00m
				(NX wir)
				(NX so was in richtung musical oder variete)[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['NF'], 'family': ['DM', 'VF', 'LK', 'MF', 'SIMPX', 'DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'NN', 'PTKZU', 'VVINF', 'ADV', 'PTKNEG', 'ADV', 'PIS', 'ADV', 'NN'), 'right siblings': [(DM (ADVX (ADV also))), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN weis))) (MF (ADVX (ADV zufallig))) (NF (SIMPX (NX (KOUS das)) (MF (PX (APPRART im) (NX (ADJX (ADJA letzten)) (NN monat))) (NX (NE woyzek)) (ADVX (ADV da))) (VC (VXINF (VVPP gegeben)) (VXFIN (VAFIN wurde)))))), (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VAFIN ware))) (MF (NX (PPER mir)) (ADJX (NX (ART ein) (PIS bischen)) (PTKA zu) (ADJD anstrengend)))), (SIMPX (VF (ADVX (ADV vielleicht))) (LK (VXFIN (VVFIN finden))) (MF (NX (PPER wir)) (NX (NX (ADVX (ADV so)) (PIS was)) (PX (APPR in) (NX (NX (NN richtung)) (NX (NX (NN musical)) (KON oder) (NX (NN variete))))))))], 'left siblings': [(DM (ADVX (ADV also))), (VF (NX (PPER ich))), (LK (VXFIN (VAFIN hatte))), (MF (NX (ADJX (ADJA grose)) (NN lust)))], 'auto preterminal span': (5, 15), 'span': (5, 15), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		(VF ich)
		(LK hatte)
		(MF grose lust)
		(SIMPX ins theater zu gehen aber nicht so was ganz schweres)
		(DM also)
		(SIMPX ich weis zufallig das im letzten monat woyzek da gegeben wurde)
		(SIMPX das ware mir ein bischen zu anstrengend)
		[01;31m(SIMPX[00m
			(VF vielleicht)
			(LK finden)
			[01;31m(MF[00m
				(NX wir)
				(NX so was in richtung musical oder variete)[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['DM', 'VF', 'LK', 'MF', 'SIMPX', 'DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPER', 'VAFIN', 'ADJA', 'NN', 'APPRART', 'NN', 'PTKZU', 'VVINF', 'ADV', 'PTKNEG', 'ADV', 'PIS', 'ADV', 'NN', 'ADV', 'PPER', 'VVFIN', 'ADV', 'KOUS', 'APPRART', 'ADJA', 'NN', 'NE', 'ADV', 'VVPP', 'VAFIN', 'PDS', 'VAFIN', 'PPER', 'ART', 'PIS', 'PTKA', 'ADJD', 'ADV', 'VVFIN', 'PPER', 'ADV', 'PIS', 'APPR', 'NN', 'NN', 'KON', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 44), 'span': (34, 44), 'left siblings': ['DM', 'VF', 'LK', 'MF', 'SIMPX', 'DM', 'SIMPX', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(VF ich)
		(LK hatte)
		(MF grose lust)
		(SIMPX ins theater zu gehen aber nicht so was ganz schweres)
		(DM also)
		(SIMPX ich weis zufallig das im letzten monat woyzek da gegeben wurde)
		(SIMPX das ware mir ein bischen zu anstrengend)
		(VF vielleicht)
		(LK finden)
		[01;31m(MF[00m
			(NX wir)
			(NX so was in richtung musical oder variete)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['NX', 'NX'], 'family': ['DM', 'VF', 'LK', 'MF', 'SIMPX', 'DM', 'SIMPX', 'SIMPX', 'VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPER', 'VAFIN', 'ADJA', 'NN', 'APPRART', 'NN', 'PTKZU', 'VVINF', 'ADV', 'PTKNEG', 'ADV', 'PIS', 'ADV', 'NN', 'ADV', 'PPER', 'VVFIN', 'ADV', 'KOUS', 'APPRART', 'ADJA', 'NN', 'NE', 'ADV', 'VVPP', 'VAFIN', 'PDS', 'VAFIN', 'PPER', 'ART', 'PIS', 'PTKA', 'ADJD', 'ADV', 'VVFIN', 'PPER', 'ADV', 'PIS', 'APPR', 'NN', 'NN', 'KON', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 44), 'span': (36, 44), 'left siblings': ['DM', 'VF', 'LK', 'MF', 'SIMPX', 'DM', 'SIMPX', 'SIMPX', 'VF', 'LK'], 'label': 'MF', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP also ich hatte grose lust ins theater zu gehen aber nicht so was ganz schweres also ich weis zufallig das im letzten monat woyzek da gegeben wurde das ware mir ein bischen zu anstrengend vielleicht finden wir so was in richtung musical oder variete)

Sentence 410:
0 Initial errors
0 on fringe, 0 iterations

Sentence 411:
9 Initial errors
0 on fringe, 7 iterations
2 Error:Single Word Phrase
2 Error:UNSET move
1 Error:NP Internal Structure
1 Error:Single Word Phrase
1 Error:Modifier Attachment
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM okay)
		(SIMPX
			(VF ich)
			(LK setze)
			(MF
				(NX mich)
				(ADVX also)
				(NX
					[01;36m(ADJX[00m [01;31m(ADVX[00m
						(ADV spatestens)[01;31m)[00m[01;36m)[00m
					[01;36m(NX[00m
						(NX mitte)
						(NX nachste woche)[01;36m)[00m)
				(PX mit ihnen)
				(PX in verbindung)))
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			[01;36m(SIMPX[00m
				(VF dann)
				(LK machen)
				[01;31m(MF[00m
					(NX wir)
					(NX alles weitere)
					(ADVX so)[01;31m)[00m
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						(C wie)
						(VC besprochen)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m))
Step:Single Word Phrase
{'family': ['ADJX', 'NX', 'NX'], 'auto preterminal span': (5, 6), 'span': (5, 6), 'subtrees': ['ADV'], 'parent': 'NX', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'ADJX')}
(TOP
	(TURN
		(DM okay)
		(SIMPX
			(VF ich)
			(LK setze)
			(MF
				(NX mich)
				(ADVX also)
				(NX
					(ADJX spatestens)
					[01;36m(NX[00m
						(NX mitte)
						(NX nachste woche)[01;36m)[00m)
				(PX mit ihnen)
				(PX in verbindung)))
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			[01;36m(SIMPX[00m
				(VF dann)
				(LK machen)
				[01;31m(MF[00m
					(NX wir)
					(NX alles weitere)
					(ADVX so)[01;31m)[00m
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						(C wie)
						(VC besprochen)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m))
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['DM', 'SIMPX', 'KOORD', 'SIMPX'], 'mover info': [('KOORD', (13, 14))], 'old_family': ['KOORD', 'VF', 'LK', 'MF', 'NF'], 'start left siblings': [], 'auto preterminals': ('ITJ', 'PPER', 'VVFIN', 'PRF', 'ADV', 'ADV', 'NN', 'ADJA', 'NN', 'APPR', 'PPER', 'APPR', 'NN', 'KON', 'ADV', 'VVFIN', 'PPER', 'PIS', 'NN', 'ADV', 'KOUS', 'VVPP'), 'start right siblings': ['VF', 'LK', 'MF', 'NF'], 'end left siblings': ['DM', 'SIMPX'], 'auto preterminal span': (0, 22), 'movers': ['KOORD'], 'old_parent': 'SIMPX', 'POS confusion': ('KON', 'KON'), 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM okay)
		(SIMPX
			(VF ich)
			(LK setze)
			(MF
				(NX mich)
				(ADVX also)
				(NX
					(ADJX spatestens)
					[01;36m(NX[00m
						(NX mitte)
						(NX nachste woche)[01;36m)[00m)
				(PX mit ihnen)
				(PX in verbindung)))
		[01;31m(KOORD[00m
			(KON und)[01;31m)[00m
		(SIMPX
			(VF dann)
			(LK machen)
			[01;31m(MF[00m
				(NX wir)
				(NX alles weitere)
				(ADVX so)[01;31m)[00m
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					(C wie)
					(VC besprochen)[01;31m)[00m[01;31m)[00m)))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['ADJX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'ADJA', 'NN'), 'right siblings': [], 'left siblings': [(ADJX (ADV spatestens))], 'auto preterminal span': (6, 9), 'span': (6, 9), 'parent': 'NX', 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'add'}
(TOP
	(TURN
		(DM okay)
		(SIMPX ich setze mich also spatestens mitte nachste woche mit ihnen in verbindung)
		[01;31m(KOORD[00m
			(KON und)[01;31m)[00m
		(SIMPX
			(VF dann)
			(LK machen)
			[01;31m(MF[00m
				(NX wir)
				(NX alles weitere)
				(ADVX so)[01;31m)[00m
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					(C wie)
					(VC besprochen)[01;31m)[00m[01;31m)[00m)))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['DM', 'SIMPX', 'KOORD', 'SIMPX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ITJ', 'PPER', 'VVFIN', 'PRF', 'ADV', 'ADV', 'NN', 'ADJA', 'NN', 'APPR', 'PPER', 'APPR', 'NN', 'KON', 'ADV', 'VVFIN', 'PPER', 'PIS', 'NN', 'ADV', 'KOUS', 'VVPP'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 22), 'span': (13, 14), 'left siblings': ['DM', 'SIMPX'], 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(SIMPX ich setze mich also spatestens mitte nachste woche mit ihnen in verbindung)
		(KON und)
		(SIMPX
			(VF dann)
			(LK machen)
			[01;31m(MF[00m
				(NX wir)
				(NX alles weitere)
				(ADVX so)[01;31m)[00m
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					(C wie)
					(VC besprochen)[01;31m)[00m[01;31m)[00m)))
Step:Modifier Attachment
{'subtrees': ['NX', 'NX', 'ADVX'], 'family': ['VF', 'LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'PIS', 'NN', 'ADV', 'KOUS', 'VVPP'), 'right siblings': ['NF'], 'parent': 'SIMPX', 'auto preterminal span': (14, 22), 'span': (16, 20), 'left siblings': ['VF', 'LK'], 'label': 'MF', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(SIMPX ich setze mich also spatestens mitte nachste woche mit ihnen in verbindung)
		(KON und)
		(SIMPX
			(VF dann)
			(LK machen)
			(NX wir)
			(NX alles weitere)
			(ADVX so)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					(C wie)
					(VC besprochen)[01;31m)[00m[01;31m)[00m)))
Step:Unary
{'subtrees': ['C', 'VC'], 'family': ['SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'VVPP'), 'right siblings': [], 'parent': 'NF', 'auto preterminal span': (20, 22), 'span': (20, 22), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(SIMPX ich setze mich also spatestens mitte nachste woche mit ihnen in verbindung)
		(KON und)
		(SIMPX
			(VF dann)
			(LK machen)
			(NX wir)
			(NX alles weitere)
			(ADVX so)
			[01;31m(NF[00m
				(C wie)
				(VC besprochen)[01;31m)[00m)))
Step:UNSET remove
{'subtrees': ['C', 'VC'], 'family': ['VF', 'LK', 'NX', 'NX', 'ADVX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'PIS', 'NN', 'ADV', 'KOUS', 'VVPP'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (14, 22), 'span': (20, 22), 'left siblings': ['VF', 'LK', 'NX', 'NX', 'ADVX'], 'label': 'NF', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP okay ich setze mich also spatestens mitte nachste woche mit ihnen in verbindung und dann machen wir alles weitere so wie besprochen)

Sentence 412:
0 Initial errors
0 on fringe, 0 iterations

Sentence 413:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM okay)
		(SIMPX ich wuste sogar schon ein gutes hotel)
		(SIMPX
			(VF das)
			(LK konnte)
			[01;31m(MF[00m
				(NX
					(PPER ich))[01;31m)[00m
			(VC ubernehmen))))
Step:Unary
{'subtrees': ['NX'], 'family': ['VF', 'LK', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VMFIN', 'PPER', 'VVINF'), 'right siblings': ['VC'], 'parent': 'SIMPX', 'auto preterminal span': (8, 12), 'span': (10, 11), 'left siblings': ['VF', 'LK'], 'label': 'MF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP okay ich wuste sogar schon ein gutes hotel das konnte ich ubernehmen)

Sentence 414:
5 Initial errors
0 on fringe, 4 iterations
2 Error:Clause Attachment
1 Error:Unary
1 Error:UNSET remove
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM nein)
		(DM nein)
		(SIMPX das past schon)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(LK wissen)
				(MF sie)[01;31m)[00m
			[01;36m(NF[00m
				(SIMPX
					(LK kommen)
					(MF sie doch lieber)
					(VC mit))[01;36m)[00m[01;36m)[00m
		[01;31m(SIMPX[00m
			(LK unternehmen)
			[01;31m(MF[00m
				(ADVX abends)
				(ADVX noch)
				(NX was)[01;31m)[00m[01;31m)[00m))
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['LK', 'MF', 'SIMPX'], 'mover info': [('SIMPX', (7, 12))], 'old_family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'start left siblings': ['DM', 'DM', 'SIMPX', 'SIMPX'], 'auto preterminals': ('PTKANT', 'PTKANT', 'PDS', 'VVFIN', 'ADV', 'VVFIN', 'PPER', 'VVIMP', 'PPER', 'ADV', 'ADV', 'PTKVZ', 'VVFIN', 'ADV', 'ADV', 'PIS'), 'start right siblings': ['SIMPX'], 'end left siblings': ['LK', 'MF'], 'auto preterminal span': (0, 16), 'movers': ['SIMPX'], 'old_parent': 'TURN', 'end right siblings': [], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM nein)
		(DM nein)
		(SIMPX das past schon)
		(SIMPX
			(LK wissen)
			(MF sie)
			[01;36m(NF[00m
				(SIMPX
					(LK kommen)
					(MF sie doch lieber)
					(VC mit))[01;36m)[00m)
		[01;31m(SIMPX[00m
			(LK unternehmen)
			[01;31m(MF[00m
				(ADVX abends)
				(ADVX noch)
				(NX was)[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVIMP', 'PPER', 'ADV', 'ADV', 'PTKVZ'), 'right siblings': [], 'left siblings': [(LK (VXFIN (VVFIN wissen))), (MF (NX (PPER sie)))], 'auto preterminal span': (7, 12), 'span': (7, 12), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM nein)
		(DM nein)
		(SIMPX das past schon)
		(SIMPX wissen sie kommen sie doch lieber mit)
		[01;31m(SIMPX[00m
			(LK unternehmen)
			[01;31m(MF[00m
				(ADVX abends)
				(ADVX noch)
				(NX was)[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PTKANT', 'PDS', 'VVFIN', 'ADV', 'VVFIN', 'PPER', 'VVIMP', 'PPER', 'ADV', 'ADV', 'PTKVZ', 'VVFIN', 'ADV', 'ADV', 'PIS'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 16), 'span': (12, 16), 'left siblings': ['DM', 'DM', 'SIMPX', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM nein)
		(DM nein)
		(SIMPX das past schon)
		(SIMPX wissen sie kommen sie doch lieber mit)
		(LK unternehmen)
		[01;31m(MF[00m
			(ADVX abends)
			(ADVX noch)
			(NX was)[01;31m)[00m))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'ADVX', 'NX'], 'family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PTKANT', 'PDS', 'VVFIN', 'ADV', 'VVFIN', 'PPER', 'VVIMP', 'PPER', 'ADV', 'ADV', 'PTKVZ', 'VVFIN', 'ADV', 'ADV', 'PIS'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 16), 'span': (13, 16), 'left siblings': ['DM', 'DM', 'SIMPX', 'SIMPX', 'LK'], 'label': 'MF', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP nein nein das past schon wissen sie kommen sie doch lieber mit unternehmen abends noch was)

Sentence 415:
1 Initial errors
0 on fringe, 1 iterations
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX das past mir sehr gut)
		(DM also)
		[01;36m(SIMPX[00m
			(SIMPX ich freue mich)
			(PX bis august)[01;36m)[00m
		(DM auf wiedersehen)
		(DM herr doll)))
Step:PP Attachment
{'subtrees': ['SIMPX', 'PX'], 'family': ['DM', 'SIMPX', 'DM', 'SIMPX', 'DM', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'PRF', 'APPR', 'NN'), 'right siblings': [(DM (PX (APPR auf) (NX (NN wiedersehen)))), (DM (NX (NN herr) (NE doll)))], 'left siblings': [(DM (PTKANT ja)), (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VVFIN past))) (MF (NX (PPER mir)) (ADJX (ADVX (ADV sehr)) (ADJD gut)))), (DM (ADVX (ADV also)))], 'auto preterminal span': (7, 12), 'span': (7, 12), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP ja das past mir sehr gut also ich freue mich bis august auf wiedersehen herr doll)

Sentence 416:
0 Initial errors
0 on fringe, 0 iterations

Sentence 417:
5 Initial errors
0 on fringe, 4 iterations
2 Error:UNSET move
1 Error:UNSET add
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM aha)
		(DM ja)
		(SIMPX schauen wir mal ob wir irgendeinen termin finden)
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(VF dann)
				(LK ware)
				(MF es ja am besten)[01;36m)[00m
			[01;31m(NF[00m
				(SIMPX
					(VF wir)
					(LK nahmen)
					(MF das wochenende))[01;31m)[00m[01;31m)[00m
		(SIMPX
			[01;36m(SIMPX[00m
				(VF vielleicht)
				(LK konnen)
				(MF wir ja noch ein bischen)
				(VC verlangern)[01;36m)[00m
			[01;31m(NF[00m
				(NX
					(ADJX eineinhalb)
					(NN tage))[01;31m)[00m)
		(NX nix)))
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'NF', 'SIMPX', 'NX'], 'mover info': [('NF', (16, 20))], 'old_family': ['VF', 'LK', 'MF', 'NF'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('ITJ', 'PTKANT', 'VVFIN', 'PPER', 'ADV', 'KOUS', 'PPER', 'PIAT', 'NN', 'VVFIN', 'ADV', 'VAFIN', 'PPER', 'ADV', 'PTKA', 'ADJD', 'PPER', 'VVFIN', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'VVINF', 'CARD', 'NN', 'PIS'), 'start right siblings': [], 'end left siblings': ['DM', 'DM', 'SIMPX', 'SIMPX'], 'auto preterminal span': (0, 31), 'movers': ['NF'], 'old_parent': 'SIMPX', 'end right siblings': ['SIMPX', 'NX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM aha)
		(DM ja)
		(SIMPX schauen wir mal ob wir irgendeinen termin finden)
		(SIMPX dann ware es ja am besten)
		[01;31m(NF[00m
			(SIMPX
				(VF wir)
				(LK nahmen)
				(MF das wochenende))[01;31m)[00m
		(SIMPX
			[01;36m(SIMPX[00m
				(VF vielleicht)
				(LK konnen)
				(MF wir ja noch ein bischen)
				(VC verlangern)[01;36m)[00m
			[01;31m(NF[00m
				(NX
					(ADJX eineinhalb)
					(NN tage))[01;31m)[00m)
		(NX nix)))
Step:UNSET add
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['SIMPX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'VVINF'), 'right siblings': [(NF (NX (ADJX (CARD eineinhalb)) (NN tage)))], 'left siblings': [], 'auto preterminal span': (20, 28), 'span': (20, 28), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM aha)
		(DM ja)
		(SIMPX schauen wir mal ob wir irgendeinen termin finden)
		(SIMPX dann ware es ja am besten)
		[01;31m(NF[00m
			(SIMPX
				(VF wir)
				(LK nahmen)
				(MF das wochenende))[01;31m)[00m
		(SIMPX
			(SIMPX vielleicht konnen wir ja noch ein bischen verlangern)
			[01;31m(NF[00m
				(NX
					(ADJX eineinhalb)
					(NN tage))[01;31m)[00m)
		(NX nix)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'NF', 'SIMPX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PTKANT', 'VVFIN', 'PPER', 'ADV', 'KOUS', 'PPER', 'PIAT', 'NN', 'VVFIN', 'ADV', 'VAFIN', 'PPER', 'ADV', 'PTKA', 'ADJD', 'PPER', 'VVFIN', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'VVINF', 'CARD', 'NN', 'PIS'), 'right siblings': ['SIMPX', 'NX'], 'parent': 'TURN', 'auto preterminal span': (0, 31), 'span': (16, 20), 'left siblings': ['DM', 'DM', 'SIMPX', 'SIMPX'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM aha)
		(DM ja)
		(SIMPX schauen wir mal ob wir irgendeinen termin finden)
		(SIMPX dann ware es ja am besten)
		(SIMPX wir nahmen das wochenende)
		(SIMPX
			(SIMPX vielleicht konnen wir ja noch ein bischen verlangern)
			[01;31m(NF[00m
				(NX
					(ADJX eineinhalb)
					(NN tage))[01;31m)[00m)
		(NX nix)))
Step:Unary
{'subtrees': ['NX'], 'family': ['SIMPX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'VVINF', 'CARD', 'NN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (20, 30), 'span': (28, 30), 'left siblings': ['SIMPX'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP aha ja schauen wir mal ob wir irgendeinen termin finden dann ware es ja am besten wir nahmen das wochenende vielleicht konnen wir ja noch ein bischen verlangern eineinhalb tage nix)

Sentence 418:
5 Initial errors
0 on fringe, 4 iterations
2 Error:UNSET move
1 Error:UNSET add
1 Error:Unary
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ah)
		(DM frau schmidt)
		(SIMPX das ist ja wirklich schade)
		(SIMPX
			[01;36m(SIMPX[00m
				(VF sie)
				(LK wissen)
				(MF doch)[01;36m)[00m
			[01;31m(NF[00m
				(SIMPX
					(VF mit ihnen)
					(LK fahre)
					(MF ich so gern immer)
					(VC weg))[01;31m)[00m)
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			[01;36m(SIMPX[00m
				(VF sie)
				(LK bestehen)
				(MF immer auf diese eineinhalb tage)[01;36m)[00m[01;31m)[00m
		(SIMPX finde ich wirklich schade)))
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'KOORD', 'SIMPX', 'SIMPX'], 'mover info': [('KOORD', (19, 20))], 'old_family': ['KOORD', 'VF', 'LK', 'MF'], 'start left siblings': [], 'auto preterminals': ('ITJ', 'NN', 'NE', 'PDS', 'VAFIN', 'ADV', 'ADV', 'ADJD', 'PPER', 'VVFIN', 'ADV', 'APPR', 'PPER', 'VVFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'PTKVZ', 'KON', 'PPER', 'VVFIN', 'ADV', 'APPR', 'PDAT', 'CARD', 'NN', 'VVFIN', 'PPER', 'ADV', 'ADJD'), 'start right siblings': ['VF', 'LK', 'MF'], 'end left siblings': ['DM', 'DM', 'SIMPX', 'SIMPX'], 'auto preterminal span': (0, 31), 'movers': ['KOORD'], 'old_parent': 'SIMPX', 'POS confusion': ('KON', 'KON'), 'end right siblings': ['SIMPX', 'SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM ah)
		(DM frau schmidt)
		(SIMPX das ist ja wirklich schade)
		(SIMPX
			[01;36m(SIMPX[00m
				(VF sie)
				(LK wissen)
				(MF doch)[01;36m)[00m
			[01;31m(NF[00m
				(SIMPX
					(VF mit ihnen)
					(LK fahre)
					(MF ich so gern immer)
					(VC weg))[01;31m)[00m)
		[01;31m(KOORD[00m
			(KON und)[01;31m)[00m
		(SIMPX sie bestehen immer auf diese eineinhalb tage)
		(SIMPX finde ich wirklich schade)))
Step:UNSET add
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['SIMPX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ADV'), 'right siblings': [(NF (SIMPX (VF (PX (APPR mit) (NX (PPER ihnen)))) (LK (VXFIN (VVFIN fahre))) (MF (NX (PPER ich)) (ADVX (ADVX (ADV so)) (ADV gern)) (ADVX (ADV immer))) (VC (PTKVZ weg))))], 'left siblings': [], 'auto preterminal span': (8, 11), 'span': (8, 11), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ah)
		(DM frau schmidt)
		(SIMPX das ist ja wirklich schade)
		(SIMPX
			(SIMPX sie wissen doch)
			[01;31m(NF[00m
				(SIMPX
					(VF mit ihnen)
					(LK fahre)
					(MF ich so gern immer)
					(VC weg))[01;31m)[00m)
		[01;31m(KOORD[00m
			(KON und)[01;31m)[00m
		(SIMPX sie bestehen immer auf diese eineinhalb tage)
		(SIMPX finde ich wirklich schade)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SIMPX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'APPR', 'PPER', 'VVFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'PTKVZ'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (8, 19), 'span': (11, 19), 'left siblings': ['SIMPX'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ah)
		(DM frau schmidt)
		(SIMPX das ist ja wirklich schade)
		(SIMPX sie wissen doch mit ihnen fahre ich so gern immer weg)
		[01;31m(KOORD[00m
			(KON und)[01;31m)[00m
		(SIMPX sie bestehen immer auf diese eineinhalb tage)
		(SIMPX finde ich wirklich schade)))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'KOORD', 'SIMPX', 'SIMPX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ITJ', 'NN', 'NE', 'PDS', 'VAFIN', 'ADV', 'ADV', 'ADJD', 'PPER', 'VVFIN', 'ADV', 'APPR', 'PPER', 'VVFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'PTKVZ', 'KON', 'PPER', 'VVFIN', 'ADV', 'APPR', 'PDAT', 'CARD', 'NN', 'VVFIN', 'PPER', 'ADV', 'ADJD'), 'right siblings': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 31), 'span': (19, 20), 'left siblings': ['DM', 'DM', 'SIMPX', 'SIMPX'], 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP ah frau schmidt das ist ja wirklich schade sie wissen doch mit ihnen fahre ich so gern immer weg und sie bestehen immer auf diese eineinhalb tage finde ich wirklich schade)

Sentence 419:
0 Initial errors
0 on fringe, 0 iterations

Sentence 420:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Clause Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM nein)
		(SIMPX wir konnen auch einzelzimmer nehmen)
		(SIMPX an dem soll es ja nicht liegen)
		[01;31m(ADVX[00m
			(ADVX nicht)
			(SIMPX das sie dann)[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['ADVX', 'SIMPX'], 'family': ['DM', 'SIMPX', 'SIMPX', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VMFIN', 'ADV', 'NN', 'VVINF', 'APPR', 'PDS', 'VMFIN', 'PPER', 'ADV', 'PTKNEG', 'VVINF', 'PTKNEG', 'KOUS', 'PPER', 'ADV'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 17), 'span': (13, 17), 'left siblings': ['DM', 'SIMPX', 'SIMPX'], 'label': 'ADVX', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP nein wir konnen auch einzelzimmer nehmen an dem soll es ja nicht liegen nicht das sie dann)

Sentence 421:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Clause Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ach)
		(DM frau schmidt)
		(SIMPX da mus ich zuerst mal uberlegen was romantischer ist)
		(SIMPX ich denke ja im zug ist viel romantischer)
		[01;36m(SIMPX[00m
			(SIMPX brauchen wir viel langer)
			(SIMPX habe ich mehr von ihnen)[01;36m)[00m))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'ADV', 'ADJD', 'VAFIN', 'PPER', 'PIS', 'APPR', 'PPER'), 'right siblings': [], 'left siblings': [(DM (ITJ ach)), (DM (NX (NN frau) (NE schmidt))), (SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VMFIN mus))) (MF (NX (PPER ich)) (ADVX (ADV zuerst)) (ADVX (ADV mal))) (VC (VXINF (VVINF uberlegen))) (NF (SIMPX (C (NX (PWS was))) (MF (ADJX (ADJD romantischer))) (VC (VXFIN (VAFIN ist)))))), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN denke))) (MF (ADVX (ADV ja))) (NF (SIMPX (VF (PX (APPRART im) (NX (NN zug)))) (LK (VXFIN (VAFIN ist))) (MF (ADJX (ADVX (ADV viel)) (ADJD romantischer))))))], 'auto preterminal span': (20, 29), 'span': (20, 29), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP ach frau schmidt da mus ich zuerst mal uberlegen was romantischer ist ich denke ja im zug ist viel romantischer brauchen wir viel langer habe ich mehr von ihnen)

Sentence 422:
8 Initial errors
0 on fringe, 6 iterations
2 Error:Clause Attachment
2 Error:Clause Attachment
1 Error:Unary
1 Error:PP Attachment
1 Error:UNSET remove
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM gut)
		[01;31m(NX[00m
			[01;36m(DM[00m
				(ADVX
					(ADV also))[01;36m)[00m
			(NX den zug)[01;31m)[00m
		(SIMPX wir brauchen von munchen nach hannover viereinhalb stunden)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF ich)
			(LK wurde)
			(VC sagen)
			[01;31m(NF[00m
				[01;31m(P[00m
					[01;36m(NF[00m
						(SIMPX
							(VF
								(SIMPX
									(C damit)
									(MF
										(NX wir)
										(ADVX auch)
										[01;36m(NX[00m
											(NX was)
											(PX von der zugfahrt)[01;36m)[00m)
									(VC haben)))
							(LK fahren)
							(MF wir nicht zu fruh)
							(VC los)) [01;33mSIMPX)[00m[01;36m)[00m
					(KOUS weil)
					(SIMPX sonst bin ich unausgeschlafen)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX da haben sie dann von mir nix)
		(SIMPX wurde ich sagen so elf uhr mit dem zug)))
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'VC', 'NF', 'KOUS', 'SIMPX'], 'mover info': [('KOUS', (29, 30)), ('SIMPX', (30, 34))], 'old_family': ['SIMPX', 'KOUS', 'SIMPX'], 'start left siblings': ['SIMPX'], 'auto preterminals': ('PPER', 'VAFIN', 'VVINF', 'KOUS', 'PPER', 'ADV', 'PIS', 'APPR', 'ART', 'NN', 'VAFIN', 'VVFIN', 'PPER', 'PTKNEG', 'PTKA', 'ADJD', 'PTKVZ', 'KOUS', 'ADV', 'VAFIN', 'PPER', 'ADJD'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'VC', 'NF'], 'auto preterminal span': (12, 34), 'movers': ['KOUS', 'SIMPX'], 'old_parent': 'P', 'end right siblings': [], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM gut)
		[01;31m(NX[00m
			[01;36m(DM[00m
				(ADVX
					(ADV also))[01;36m)[00m
			(NX den zug)[01;31m)[00m
		(SIMPX wir brauchen von munchen nach hannover viereinhalb stunden)
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(VF ich)
				(LK wurde)
				(VC sagen)
				(NF
					[01;31m(P[00m
						(SIMPX
							(VF
								(SIMPX
									(C damit)
									(MF
										(NX wir)
										(ADVX auch)
										[01;36m(NX[00m
											(NX was)
											(PX von der zugfahrt)[01;36m)[00m)
									(VC haben)))
							(LK fahren)
							(MF wir nicht zu fruh)
							(VC los))[01;31m)[00m)[01;36m)[00m
			(KOUS weil)
			(SIMPX sonst bin ich unausgeschlafen)[01;31m)[00m
		(SIMPX da haben sie dann von mir nix)
		(SIMPX wurde ich sagen so elf uhr mit dem zug)))
Step:Clause Attachment
{'new_parent': 'TURN', 'new_family': ['DM', 'NX', 'SIMPX', 'SIMPX', 'KOUS', 'SIMPX', 'SIMPX', 'SIMPX'], 'mover info': [('KOUS', (29, 30)), ('SIMPX', (30, 34))], 'old_family': ['VF', 'LK', 'VC', 'NF', 'KOUS', 'SIMPX'], 'start left siblings': ['VF', 'LK', 'VC', 'NF'], 'auto preterminals': ('ITJ', 'ADV', 'ART', 'NN', 'PPER', 'VVFIN', 'APPR', 'NE', 'APPR', 'NE', 'CARD', 'NN', 'PPER', 'VAFIN', 'VVINF', 'KOUS', 'PPER', 'ADV', 'PIS', 'APPR', 'ART', 'NN', 'VAFIN', 'VVFIN', 'PPER', 'PTKNEG', 'PTKA', 'ADJD', 'PTKVZ', 'KOUS', 'ADV', 'VAFIN', 'PPER', 'ADJD', 'ADV', 'VAFIN', 'PPER', 'ADV', 'APPR', 'PPER', 'PIS', 'VAFIN', 'PPER', 'VVINF', 'ADV', 'CARD', 'NN', 'APPR', 'ART', 'NN'), 'start right siblings': [], 'end left siblings': ['DM', 'NX', 'SIMPX', 'SIMPX'], 'auto preterminal span': (0, 50), 'movers': ['KOUS', 'SIMPX'], 'old_parent': 'SIMPX', 'end right siblings': ['SIMPX', 'SIMPX'], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM gut)
		[01;31m(NX[00m
			[01;36m(DM[00m
				(ADVX
					(ADV also))[01;36m)[00m
			(NX den zug)[01;31m)[00m
		(SIMPX wir brauchen von munchen nach hannover viereinhalb stunden)
		(SIMPX
			(VF ich)
			(LK wurde)
			(VC sagen)
			(NF
				[01;31m(P[00m
					(SIMPX
						(VF
							(SIMPX
								(C damit)
								(MF
									(NX wir)
									(ADVX auch)
									[01;36m(NX[00m
										(NX was)
										(PX von der zugfahrt)[01;36m)[00m)
								(VC haben)))
						(LK fahren)
						(MF wir nicht zu fruh)
						(VC los))[01;31m)[00m))
		(KOUS weil)
		(SIMPX sonst bin ich unausgeschlafen)
		(SIMPX da haben sie dann von mir nix)
		(SIMPX wurde ich sagen so elf uhr mit dem zug)))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['DM', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV',), 'right siblings': [(NX (ART den) (NN zug))], 'left siblings': [], 'auto preterminal span': (1, 2), 'span': (1, 2), 'parent': 'NX', 'label': 'DM', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM gut)
		[01;31m(NX[00m
			(DM also)
			(NX den zug)[01;31m)[00m
		(SIMPX wir brauchen von munchen nach hannover viereinhalb stunden)
		(SIMPX
			(VF ich)
			(LK wurde)
			(VC sagen)
			(NF
				[01;31m(P[00m
					(SIMPX
						(VF
							(SIMPX
								(C damit)
								(MF
									(NX wir)
									(ADVX auch)
									[01;36m(NX[00m
										(NX was)
										(PX von der zugfahrt)[01;36m)[00m)
								(VC haben)))
						(LK fahren)
						(MF wir nicht zu fruh)
						(VC los))[01;31m)[00m))
		(KOUS weil)
		(SIMPX sonst bin ich unausgeschlafen)
		(SIMPX da haben sie dann von mir nix)
		(SIMPX wurde ich sagen so elf uhr mit dem zug)))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['NX', 'ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PIS', 'APPR', 'ART', 'NN'), 'right siblings': [], 'left siblings': [(NX (PPER wir)), (ADVX (ADV auch))], 'auto preterminal span': (18, 22), 'span': (18, 22), 'parent': 'MF', 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM gut)
		[01;31m(NX[00m
			(DM also)
			(NX den zug)[01;31m)[00m
		(SIMPX wir brauchen von munchen nach hannover viereinhalb stunden)
		(SIMPX
			(VF ich)
			(LK wurde)
			(VC sagen)
			(NF
				[01;31m(P[00m
					(SIMPX
						(VF damit wir auch was von der zugfahrt haben)
						(LK fahren)
						(MF wir nicht zu fruh)
						(VC los))[01;31m)[00m))
		(KOUS weil)
		(SIMPX sonst bin ich unausgeschlafen)
		(SIMPX da haben sie dann von mir nix)
		(SIMPX wurde ich sagen so elf uhr mit dem zug)))
Step:UNSET remove
{'subtrees': ['DM', 'NX'], 'family': ['DM', 'NX', 'SIMPX', 'SIMPX', 'KOUS', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'ART', 'NN', 'PPER', 'VVFIN', 'APPR', 'NE', 'APPR', 'NE', 'CARD', 'NN', 'PPER', 'VAFIN', 'VVINF', 'KOUS', 'PPER', 'ADV', 'PIS', 'APPR', 'ART', 'NN', 'VAFIN', 'VVFIN', 'PPER', 'PTKNEG', 'PTKA', 'ADJD', 'PTKVZ', 'KOUS', 'ADV', 'VAFIN', 'PPER', 'ADJD', 'ADV', 'VAFIN', 'PPER', 'ADV', 'APPR', 'PPER', 'PIS', 'VAFIN', 'PPER', 'VVINF', 'ADV', 'CARD', 'NN', 'APPR', 'ART', 'NN'), 'right siblings': ['SIMPX', 'SIMPX', 'KOUS', 'SIMPX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 50), 'span': (1, 4), 'left siblings': ['DM'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM gut)
		(DM also)
		(NX den zug)
		(SIMPX wir brauchen von munchen nach hannover viereinhalb stunden)
		(SIMPX
			(VF ich)
			(LK wurde)
			(VC sagen)
			(NF
				[01;31m(P[00m
					(SIMPX
						(VF damit wir auch was von der zugfahrt haben)
						(LK fahren)
						(MF wir nicht zu fruh)
						(VC los))[01;31m)[00m))
		(KOUS weil)
		(SIMPX sonst bin ich unausgeschlafen)
		(SIMPX da haben sie dann von mir nix)
		(SIMPX wurde ich sagen so elf uhr mit dem zug)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['P'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'PIS', 'APPR', 'ART', 'NN', 'VAFIN', 'VVFIN', 'PPER', 'PTKNEG', 'PTKA', 'ADJD', 'PTKVZ'), 'right siblings': [], 'parent': 'NF', 'auto preterminal span': (15, 29), 'span': (15, 29), 'left siblings': [], 'label': 'P', 'classified_type': 'Unary', 'type': 'remove'}
(TOP gut also den zug wir brauchen von munchen nach hannover viereinhalb stunden ich wurde sagen damit wir auch was von der zugfahrt haben fahren wir nicht zu fruh los weil sonst bin ich unausgeschlafen da haben sie dann von mir nix wurde ich sagen so elf uhr mit dem zug)

Sentence 423:
0 Initial errors
0 on fringe, 0 iterations

Sentence 424:
8 Initial errors
0 on fringe, 5 iterations
2 Error:Different label
2 Error:UNSET move
2 Error:UNSET move
1 Error:Unary
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(VF sie)
				(LK horen)
				(MF sich heute so formlich)
				(VC an)[01;36m)[00m
			[01;36m(DM[00m [01;31m(NF[00m
				(NX
					(NN frau)
					(NE schmidt))[01;31m)[00m[01;36m)[00m[01;31m)[00m
		(SIMPX
			(LK ist)
			(MF
				(NX ihnen)
				(NX eine laus)
				[01;36m(MF[00m
					(PX
						(APPR uber)
						(NX die leber))[01;36m)[00m)
			(VC gelaufen))
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON oder)[01;31m)[00m
			[01;36m(SIMPX[00m
				(VF wie)
				(LK sehe)
				(MF ich das)[01;36m)[00m[01;31m)[00m))
Step:Different label
{'family': ['VF', 'LK', 'MF', 'VC', 'DM'], 'auto preterminal span': (7, 9), 'span': (7, 9), 'subtrees': ['NX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('NN', 'NE'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('NF', 'DM')}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(VF sie)
				(LK horen)
				(MF sich heute so formlich)
				(VC an)[01;36m)[00m
			(DM frau schmidt)[01;31m)[00m
		(SIMPX
			(LK ist)
			(MF
				(NX ihnen)
				(NX eine laus)
				[01;36m(MF[00m
					(PX
						(APPR uber)
						(NX die leber))[01;36m)[00m)
			(VC gelaufen))
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON oder)[01;31m)[00m
			[01;36m(SIMPX[00m
				(VF wie)
				(LK sehe)
				(MF ich das)[01;36m)[00m[01;31m)[00m))
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['SIMPX', 'DM', 'SIMPX', 'SIMPX'], 'mover info': [('DM', (7, 9))], 'old_family': ['VF', 'LK', 'MF', 'VC', 'DM'], 'start left siblings': ['VF', 'LK', 'MF', 'VC'], 'auto preterminals': ('PPER', 'VVFIN', 'PRF', 'ADV', 'ADV', 'ADJD', 'PTKVZ', 'NN', 'NE', 'VAFIN', 'PPER', 'ART', 'NN', 'APPR', 'ART', 'NN', 'VVPP', 'KON', 'PWAV', 'VVFIN', 'PPER', 'PDS'), 'start right siblings': [], 'end left siblings': ['SIMPX'], 'auto preterminal span': (0, 22), 'movers': ['DM'], 'old_parent': 'SIMPX', 'end right siblings': ['SIMPX', 'SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SIMPX sie horen sich heute so formlich an)
		(DM frau schmidt)
		(SIMPX
			(LK ist)
			(MF
				(NX ihnen)
				(NX eine laus)
				[01;36m(MF[00m
					(PX
						(APPR uber)
						(NX die leber))[01;36m)[00m)
			(VC gelaufen))
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON oder)[01;31m)[00m
			[01;36m(SIMPX[00m
				(VF wie)
				(LK sehe)
				(MF ich das)[01;36m)[00m[01;31m)[00m))
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['SIMPX', 'DM', 'SIMPX', 'KOORD', 'SIMPX'], 'mover info': [('KOORD', (17, 18))], 'old_family': ['KOORD', 'VF', 'LK', 'MF'], 'start left siblings': [], 'auto preterminals': ('PPER', 'VVFIN', 'PRF', 'ADV', 'ADV', 'ADJD', 'PTKVZ', 'NN', 'NE', 'VAFIN', 'PPER', 'ART', 'NN', 'APPR', 'ART', 'NN', 'VVPP', 'KON', 'PWAV', 'VVFIN', 'PPER', 'PDS'), 'start right siblings': ['VF', 'LK', 'MF'], 'end left siblings': ['SIMPX', 'DM', 'SIMPX'], 'auto preterminal span': (0, 22), 'movers': ['KOORD'], 'old_parent': 'SIMPX', 'POS confusion': ('KON', 'KON'), 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SIMPX sie horen sich heute so formlich an)
		(DM frau schmidt)
		(SIMPX
			(LK ist)
			(MF
				(NX ihnen)
				(NX eine laus)
				[01;36m(MF[00m
					(PX
						(APPR uber)
						(NX die leber))[01;36m)[00m)
			(VC gelaufen))
		[01;31m(KOORD[00m
			(KON oder)[01;31m)[00m
		(SIMPX wie sehe ich das)))
Step:Unary
{'subtrees': ['PX'], 'family': ['NX', 'NX', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NN'), 'right siblings': [], 'left siblings': [(NX (PPER ihnen)), (NX (ART eine) (NN laus))], 'auto preterminal span': (13, 16), 'span': (13, 16), 'parent': 'MF', 'label': 'MF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SIMPX sie horen sich heute so formlich an)
		(DM frau schmidt)
		(SIMPX ist ihnen eine laus uber die leber gelaufen)
		[01;31m(KOORD[00m
			(KON oder)[01;31m)[00m
		(SIMPX wie sehe ich das)))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['SIMPX', 'DM', 'SIMPX', 'KOORD', 'SIMPX'], 'over_word': True, 'over words': True, 'auto preterminals': ('PPER', 'VVFIN', 'PRF', 'ADV', 'ADV', 'ADJD', 'PTKVZ', 'NN', 'NE', 'VAFIN', 'PPER', 'ART', 'NN', 'APPR', 'ART', 'NN', 'VVPP', 'KON', 'PWAV', 'VVFIN', 'PPER', 'PDS'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 22), 'span': (17, 18), 'left siblings': ['SIMPX', 'DM', 'SIMPX'], 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP sie horen sich heute so formlich an frau schmidt ist ihnen eine laus uber die leber gelaufen oder wie sehe ich das)

Sentence 425:
5 Initial errors
0 on fringe, 3 iterations
2 Error:Different label
2 Error:UNSET move
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(VF sie)
				(LK wollen)
				(MF abends noch was)
				(VC unternehmen)[01;36m)[00m
			[01;36m(DM[00m [01;31m(NF[00m
				(NX
					(NN frau)
					(NE schmidt))[01;31m)[00m[01;36m)[00m[01;31m)[00m
		(SIMPX sie springen ja uber ihren schatten)
		[01;31m(SIMPX[00m
			(VF das)
			(LK ist)
			(MF mir ja ganz neu)[01;31m)[00m
		(SIMPX bisher haben sie immer abgelehnt)
		(SIMPX sie machen mich noch ganz schwach)))
Step:Different label
{'family': ['VF', 'LK', 'MF', 'VC', 'DM'], 'auto preterminal span': (6, 8), 'span': (6, 8), 'subtrees': ['NX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('NN', 'NE'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('NF', 'DM')}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(VF sie)
				(LK wollen)
				(MF abends noch was)
				(VC unternehmen)[01;36m)[00m
			(DM frau schmidt)[01;31m)[00m
		(SIMPX sie springen ja uber ihren schatten)
		[01;31m(SIMPX[00m
			(VF das)
			(LK ist)
			(MF mir ja ganz neu)[01;31m)[00m
		(SIMPX bisher haben sie immer abgelehnt)
		(SIMPX sie machen mich noch ganz schwach)))
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['SIMPX', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'mover info': [('DM', (6, 8))], 'old_family': ['VF', 'LK', 'MF', 'VC', 'DM'], 'start left siblings': ['VF', 'LK', 'MF', 'VC'], 'auto preterminals': ('PPER', 'VMFIN', 'ADV', 'ADV', 'PIS', 'VVINF', 'NN', 'NE', 'PPER', 'VVFIN', 'ADV', 'APPR', 'PPOSAT', 'NN', 'PDS', 'VAFIN', 'PPER', 'ADV', 'ADV', 'ADJD', 'ADV', 'VAFIN', 'PPER', 'ADV', 'VVPP', 'PPER', 'VVFIN', 'PPER', 'ADV', 'ADV', 'ADJD'), 'start right siblings': [], 'end left siblings': ['SIMPX'], 'auto preterminal span': (0, 31), 'movers': ['DM'], 'old_parent': 'SIMPX', 'end right siblings': ['SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SIMPX sie wollen abends noch was unternehmen)
		(DM frau schmidt)
		(SIMPX sie springen ja uber ihren schatten)
		[01;31m(SIMPX[00m
			(VF das)
			(LK ist)
			(MF mir ja ganz neu)[01;31m)[00m
		(SIMPX bisher haben sie immer abgelehnt)
		(SIMPX sie machen mich noch ganz schwach)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['SIMPX', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VMFIN', 'ADV', 'ADV', 'PIS', 'VVINF', 'NN', 'NE', 'PPER', 'VVFIN', 'ADV', 'APPR', 'PPOSAT', 'NN', 'PDS', 'VAFIN', 'PPER', 'ADV', 'ADV', 'ADJD', 'ADV', 'VAFIN', 'PPER', 'ADV', 'VVPP', 'PPER', 'VVFIN', 'PPER', 'ADV', 'ADV', 'ADJD'), 'right siblings': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 31), 'span': (14, 20), 'left siblings': ['SIMPX', 'DM', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP sie wollen abends noch was unternehmen frau schmidt sie springen ja uber ihren schatten das ist mir ja ganz neu bisher haben sie immer abgelehnt sie machen mich noch ganz schwach)

Sentence 426:
8 Initial errors
0 on fringe, 5 iterations
3 Error:UNSET move
2 Error:NP Attachment
1 Error:NP Internal Structure
1 Error:UNSET remove
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(NX[00m
			(NX was)
			(NX schones)[01;31m)[00m
		(DM ach)
		(DM frau schmidt)
		(SIMPX ich denke ich kenne da ganz eine schone bar)
		(SIMPX da gehen wir dann hin)
		(SIMPX vor allem gibt es da ganz schone musik)
		(SIMPX die gefallt mir immer sehr gut)
		(SIMPX letzte mal muste ich immer alleine weggehen)
		(SIMPX da waren sie ja dann nie dabei)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF jetzt)
				(LK kann)
				(MF ich ihnen das gleich schon)[01;31m)[00m
			[01;31m(SIMPX[00m
				[01;31m(KOORD[00m
					(KON oder)[01;31m)[00m
				[01;36m(SIMPX[00m
					(LK habe)
					[01;36m(MF[00m
						[01;31m(MF[00m
							(NX ich)
							(NX das)
							(ADVX schon)[01;31m)[00m
						(NX erfahrung)[01;36m)[00m
					(VC gebracht)[01;36m)[00m[01;31m)[00m[01;36m)[00m
		(SIMPX ich reserviere dann dort zwei platze zum essen)
		(SIMPX past ihnen das so)))
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['NX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'KOORD', 'SIMPX', 'SIMPX', 'SIMPX'], 'mover info': [('KOORD', (55, 56))], 'old_family': ['KOORD', 'LK', 'MF', 'NX', 'VC'], 'start left siblings': [], 'auto preterminals': ('PIS', 'NN', 'ITJ', 'NN', 'NE', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'ART', 'ADJA', 'NN', 'ADV', 'VVFIN', 'PPER', 'ADV', 'PTKVZ', 'APPR', 'PIS', 'VVFIN', 'PPER', 'ADV', 'ADV', 'ADJA', 'NN', 'PDS', 'VVFIN', 'PPER', 'ADV', 'ADV', 'ADJD', 'ADJA', 'NN', 'VMFIN', 'PPER', 'ADV', 'ADV', 'VVINF', 'ADV', 'VAFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'PROP', 'KON', 'ADV', 'VMFIN', 'PPER', 'PPER', 'PDS', 'ADV', 'ADV', 'KON', 'VAFIN', 'PPER', 'PDS', 'ADV', 'NN', 'VVPP', 'PPER', 'VVFIN', 'ADV', 'ADV', 'CARD', 'NN', 'APPRART', 'NN', 'VVFIN', 'PPER', 'PDS', 'ADV'), 'start right siblings': ['LK', 'MF', 'NX', 'VC'], 'end left siblings': ['NX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'auto preterminal span': (0, 74), 'adding node already present': False, 'movers': ['KOORD'], 'old_parent': 'SIMPX', 'POS confusion': ('KON', 'KON'), 'added and moved': True, 'end right siblings': ['SIMPX', 'SIMPX', 'SIMPX'], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'MF'}
(TOP
	(TURN
		[01;31m(NX[00m
			(NX was)
			(NX schones)[01;31m)[00m
		(DM ach)
		(DM frau schmidt)
		(SIMPX ich denke ich kenne da ganz eine schone bar)
		(SIMPX da gehen wir dann hin)
		(SIMPX vor allem gibt es da ganz schone musik)
		(SIMPX die gefallt mir immer sehr gut)
		(SIMPX letzte mal muste ich immer alleine weggehen)
		(SIMPX da waren sie ja dann nie dabei)
		(SIMPX
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF jetzt)
				(LK kann)
				(MF ich ihnen das gleich schon)[01;31m)[00m
			[01;31m(KOORD[00m
				(KON oder)[01;31m)[00m
			(SIMPX
				(LK habe)
				[01;36m(MF[00m
					[01;31m(MF[00m
						(NX ich)
						(NX das)
						(ADVX schon)[01;31m)[00m
					(NX erfahrung)[01;36m)[00m
				(VC gebracht)))
		(SIMPX ich reserviere dann dort zwei platze zum essen)
		(SIMPX past ihnen das so)))
Step:NP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'NX', 'ADVX', 'NX'], 'mover info': [('NX', (60, 61))], 'old_family': ['LK', 'MF', 'NX', 'VC'], 'start left siblings': ['LK', 'MF'], 'auto preterminals': ('VAFIN', 'PPER', 'PDS', 'ADV', 'NN', 'VVPP'), 'start right siblings': ['VC'], 'end left siblings': ['NX', 'NX', 'ADVX'], 'auto preterminal span': (56, 62), 'movers': ['NX'], 'old_parent': 'SIMPX', 'POS confusion': ('NN', 'NN'), 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;31m(NX[00m
			(NX was)
			(NX schones)[01;31m)[00m
		(DM ach)
		(DM frau schmidt)
		(SIMPX ich denke ich kenne da ganz eine schone bar)
		(SIMPX da gehen wir dann hin)
		(SIMPX vor allem gibt es da ganz schone musik)
		(SIMPX die gefallt mir immer sehr gut)
		(SIMPX letzte mal muste ich immer alleine weggehen)
		(SIMPX da waren sie ja dann nie dabei)
		(SIMPX
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF jetzt)
				(LK kann)
				(MF ich ihnen das gleich schon)[01;31m)[00m
			[01;31m(KOORD[00m
				(KON oder)[01;31m)[00m
			(SIMPX habe ich das schon erfahrung gebracht))
		(SIMPX ich reserviere dann dort zwei platze zum essen)
		(SIMPX past ihnen das so)))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['NX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PIS', 'NN', 'ITJ', 'NN', 'NE', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'ART', 'ADJA', 'NN', 'ADV', 'VVFIN', 'PPER', 'ADV', 'PTKVZ', 'APPR', 'PIS', 'VVFIN', 'PPER', 'ADV', 'ADV', 'ADJA', 'NN', 'PDS', 'VVFIN', 'PPER', 'ADV', 'ADV', 'ADJD', 'ADJA', 'NN', 'VMFIN', 'PPER', 'ADV', 'ADV', 'VVINF', 'ADV', 'VAFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'PROP', 'KON', 'ADV', 'VMFIN', 'PPER', 'PPER', 'PDS', 'ADV', 'ADV', 'KON', 'VAFIN', 'PPER', 'PDS', 'ADV', 'NN', 'VVPP', 'PPER', 'VVFIN', 'ADV', 'ADV', 'CARD', 'NN', 'APPRART', 'NN', 'VVFIN', 'PPER', 'PDS', 'ADV'), 'right siblings': ['DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 74), 'span': (0, 2), 'left siblings': [], 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'remove'}
(TOP
	(TURN
		(NX was)
		(NX schones)
		(DM ach)
		(DM frau schmidt)
		(SIMPX ich denke ich kenne da ganz eine schone bar)
		(SIMPX da gehen wir dann hin)
		(SIMPX vor allem gibt es da ganz schone musik)
		(SIMPX die gefallt mir immer sehr gut)
		(SIMPX letzte mal muste ich immer alleine weggehen)
		(SIMPX da waren sie ja dann nie dabei)
		(SIMPX
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF jetzt)
				(LK kann)
				(MF ich ihnen das gleich schon)[01;31m)[00m
			[01;31m(KOORD[00m
				(KON oder)[01;31m)[00m
			(SIMPX habe ich das schon erfahrung gebracht))
		(SIMPX ich reserviere dann dort zwei platze zum essen)
		(SIMPX past ihnen das so)))
Step:UNSET remove
{'subtrees': ['KOORD', 'VF', 'LK', 'MF'], 'family': ['SIMPX', 'KOORD', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'ADV', 'VMFIN', 'PPER', 'PPER', 'PDS', 'ADV', 'ADV', 'KON', 'VAFIN', 'PPER', 'PDS', 'ADV', 'NN', 'VVPP'), 'right siblings': ['KOORD', 'SIMPX'], 'parent': 'SIMPX', 'auto preterminal span': (47, 62), 'span': (47, 55), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(NX was)
		(NX schones)
		(DM ach)
		(DM frau schmidt)
		(SIMPX ich denke ich kenne da ganz eine schone bar)
		(SIMPX da gehen wir dann hin)
		(SIMPX vor allem gibt es da ganz schone musik)
		(SIMPX die gefallt mir immer sehr gut)
		(SIMPX letzte mal muste ich immer alleine weggehen)
		(SIMPX da waren sie ja dann nie dabei)
		(SIMPX
			(KOORD und)
			(VF jetzt)
			(LK kann)
			(MF ich ihnen das gleich schon)
			[01;31m(KOORD[00m
				(KON oder)[01;31m)[00m
			(SIMPX habe ich das schon erfahrung gebracht))
		(SIMPX ich reserviere dann dort zwei platze zum essen)
		(SIMPX past ihnen das so)))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['KOORD', 'VF', 'LK', 'MF', 'KOORD', 'SIMPX'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON', 'ADV', 'VMFIN', 'PPER', 'PPER', 'PDS', 'ADV', 'ADV', 'KON', 'VAFIN', 'PPER', 'PDS', 'ADV', 'NN', 'VVPP'), 'right siblings': ['SIMPX'], 'parent': 'SIMPX', 'auto preterminal span': (47, 62), 'span': (55, 56), 'left siblings': ['KOORD', 'VF', 'LK', 'MF'], 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP was schones ach frau schmidt ich denke ich kenne da ganz eine schone bar da gehen wir dann hin vor allem gibt es da ganz schone musik die gefallt mir immer sehr gut letzte mal muste ich immer alleine weggehen da waren sie ja dann nie dabei und jetzt kann ich ihnen das gleich schon oder habe ich das schon erfahrung gebracht ich reserviere dann dort zwei platze zum essen past ihnen das so)

Sentence 427:
0 Initial errors
0 on fringe, 0 iterations

Sentence 428:
0 Initial errors
0 on fringe, 0 iterations

Sentence 429:
0 Initial errors
0 on fringe, 0 iterations

Sentence 430:
6 Initial errors
0 on fringe, 2 iterations
4 Error:UNSET move
2 Error:Different label
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM ja)
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(VF das)
				(LK war)
				(MF sehr nett)[01;36m)[00m
			[01;36m(VF[00m [01;31m(NF[00m [01;33m(SIMPX[00m
				(NX
					(ADJX letztes)
					(NN mal))[01;31m)[00m[01;36m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK mochte)
			(MF ich ganz gerne wieder)
			(VC hingehen)[01;31m)[00m [01;33mSIMPX)[00m
		(SIMPX nehmen wir wieder zwei einzelzimmer)))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['NF', 'LK', 'MF', 'VC'], 'mover info': [('NF', (6, 8))], 'old_family': ['VF', 'LK', 'MF', 'NF'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('PTKANT', 'PTKANT', 'PDS', 'VAFIN', 'ADV', 'ADJD', 'ADJA', 'NN', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'VVINF', 'VVFIN', 'PPER', 'ADV', 'CARD', 'NN'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 19), 'movers': ['NF'], 'old_parent': 'SIMPX', 'end right siblings': ['LK', 'MF', 'VC'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(DM ja)
		(SIMPX das war sehr nett)
		(SIMPX
			[01;36m(VF[00m [01;31m(NF[00m
				(NX
					(ADJX letztes)
					(NN mal))[01;31m)[00m[01;36m)[00m
			(LK mochte)
			(MF ich ganz gerne wieder)
			(VC hingehen))
		(SIMPX nehmen wir wieder zwei einzelzimmer)))
Step:Different label
{'family': ['VF', 'LK', 'MF', 'VC'], 'auto preterminal span': (6, 8), 'span': (6, 8), 'subtrees': ['NX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('ADJA', 'NN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('NF', 'VF')}
(TOP ja ja das war sehr nett letztes mal mochte ich ganz gerne wieder hingehen nehmen wir wieder zwei einzelzimmer)

Sentence 431:
5 Initial errors
0 on fringe, 3 iterations
2 Error:Single Word Phrase
2 Error:Modifier Attachment
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(MF
				[01;31m(PX[00m
					(APPR seit)
					[01;31m(NX[00m
						[01;36m(ADVX[00m [01;31m(ADJX[00m
							(ADJA langerer)[01;31m)[00m[01;36m)[00m
						[01;36m(NX[00m
							(NN zeit)[01;36m)[00m[01;31m)[00m[01;31m)[00m
				(ADVX nicht mehr))
			(VC gesehen))
		(ADVX jetzt)
		(SIMPX ich wollte sie treffen um mit ihnen die geschaftsreise nach hannover zu planen)))
Step:Single Word Phrase
{'family': ['ADVX', 'NN'], 'auto preterminal span': (2, 3), 'span': (2, 3), 'subtrees': ['ADJA'], 'parent': 'NX', 'over_word': True, 'auto preterminals': ('ADJA',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'ADVX')}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(MF
				[01;31m(PX[00m
					(APPR seit)
					[01;31m(NX[00m
						(ADVX langerer)
						[01;36m(NX[00m
							(NN zeit)[01;36m)[00m[01;31m)[00m[01;31m)[00m
				(ADVX nicht mehr))
			(VC gesehen))
		(ADVX jetzt)
		(SIMPX ich wollte sie treffen um mit ihnen die geschaftsreise nach hannover zu planen)))
Step:Modifier Attachment
{'new_parent': 'PX', 'new_family': ['APPR', 'ADVX', 'NX'], 'mover info': [('ADVX', (2, 3))], 'old_family': ['ADVX', 'NN'], 'start left siblings': [], 'auto preterminals': ('APPR', 'ADJA', 'NN'), 'start right siblings': ['NN'], 'end left siblings': ['APPR'], 'auto preterminal span': (1, 4), 'movers': ['ADVX'], 'old_parent': 'NX', 'POS confusion': ('ADJA', 'ADJA'), 'end right siblings': ['NX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(MF
				[01;31m(PX[00m
					(APPR seit)
					(ADVX langerer)
					(NX zeit)[01;31m)[00m
				(ADVX nicht mehr))
			(VC gesehen))
		(ADVX jetzt)
		(SIMPX ich wollte sie treffen um mit ihnen die geschaftsreise nach hannover zu planen)))
Step:Modifier Attachment
{'subtrees': ['APPR', 'ADVX', 'NX'], 'family': ['PX', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ADJA', 'NN', 'PTKNEG', 'ADV'), 'right siblings': ['ADVX'], 'parent': 'MF', 'auto preterminal span': (1, 6), 'span': (1, 4), 'left siblings': [], 'label': 'PX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP ja seit langerer zeit nicht mehr gesehen jetzt ich wollte sie treffen um mit ihnen die geschaftsreise nach hannover zu planen)

Sentence 432:
0 Initial errors
0 on fringe, 0 iterations

Sentence 433:
3 Initial errors
0 on fringe, 3 iterations
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		[01;31m(SIMPX[00m
			[01;31m(MF[00m
				(ADVX irgendwie)
				[01;33m(NX[00m (NX was)[01;31m)[00m
			(VC essen)[01;31m)[00m
		(ADVX oder so))) [01;33mNX)[00m
Step:UNSET remove
{'subtrees': ['ADVX', 'NX'], 'family': ['MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PIS', 'VVINF'), 'right siblings': ['VC'], 'parent': 'SIMPX', 'auto preterminal span': (1, 4), 'span': (1, 3), 'left siblings': [], 'label': 'MF', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		[01;31m(SIMPX[00m
			(ADVX irgendwie)
			[01;33m(NX[00m (NX was)
			(VC essen)[01;31m)[00m
		(ADVX oder so))) [01;33mNX)[00m
Step:UNSET remove
{'subtrees': ['ADVX', 'NX', 'VC'], 'family': ['DM', 'SIMPX', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADV', 'PIS', 'VVINF', 'KON', 'ADV'), 'right siblings': ['ADVX'], 'parent': 'TURN', 'auto preterminal span': (0, 6), 'span': (1, 4), 'left siblings': ['DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(ADVX irgendwie)
		[01;36m(NX[00m
			(NX was)
			(VC essen)
			(ADVX oder so)[01;36m)[00m))
Step:Modifier Attachment
{'subtrees': ['NX', 'VC', 'ADVX'], 'family': ['DM', 'ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PIS', 'VVINF', 'KON', 'ADV'), 'right siblings': [], 'left siblings': [(DM (PTKANT ja)), (ADVX (ADV irgendwie))], 'auto preterminal span': (2, 6), 'span': (2, 6), 'parent': 'TURN', 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP ja irgendwie was essen oder so)

Sentence 434:
0 Initial errors
0 on fringe, 0 iterations

Sentence 435:
0 Initial errors
0 on fringe, 0 iterations

Sentence 436:
7 Initial errors
0 on fringe, 6 iterations
2 Error:Single Word Phrase
1 Error:Unary
1 Error:Unary
1 Error:Unary
1 Error:UNSET remove
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM okay)
		(NX januar)
		[01;31m(SIMPX[00m
			[01;31m(LV[00m
				(SIMPX
					(C wenn)
					(MF ich in meinen terminkalender)
					(VC schaue))[01;31m)[00m
			(VF da)
			(LK habe)
			(MF
				(NX ich)
				[01;36m(LK[00m [01;36m(VXFIN[00m [01;31m(ADVX[00m
					(ADV absurderweise)[01;31m)[00m[01;36m)[00m[01;36m)[00m
				[01;36m(MF[00m
					(NX
						(NX freitag)
						(KON und)
						(NX samstag))[01;36m)[00m)[01;31m)[00m
		(SIMPX
			(KOORD aber)
			(VF ich)
			(LK denke)
			(NF
				(SIMPX
					(VF unsre geschaftspartner)
					(LK haben)
					(MF
						(NX samstag)
						[01;31m(NX[00m
							(NX kein interesse)
							(PX an unserm besuch)[01;31m)[00m))))
		(SIMPX dann ware hatte ich die erste moglichkeit wieder zwolfter dreizehnter januar)))
Step:Single Word Phrase
{'family': ['NX', 'VXFIN', 'NX'], 'auto preterminal span': (11, 12), 'span': (11, 12), 'subtrees': ['ADV'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'VXFIN')}
(TOP
	(TURN
		(DM okay)
		(NX januar)
		[01;31m(SIMPX[00m
			[01;31m(LV[00m
				(SIMPX
					(C wenn)
					(MF ich in meinen terminkalender)
					(VC schaue))[01;31m)[00m
			(VF da)
			(LK habe)
			(MF
				(NX ich)
				[01;36m(LK[00m
					(VXFIN
						(ADV absurderweise))[01;36m)[00m
				[01;36m(MF[00m
					(NX
						(NX freitag)
						(KON und)
						(NX samstag))[01;36m)[00m)[01;31m)[00m
		(SIMPX
			(KOORD aber)
			(VF ich)
			(LK denke)
			(NF
				(SIMPX
					(VF unsre geschaftspartner)
					(LK haben)
					(MF
						(NX samstag)
						[01;31m(NX[00m
							(NX kein interesse)
							(PX an unserm besuch)[01;31m)[00m))))
		(SIMPX dann ware hatte ich die erste moglichkeit wieder zwolfter dreizehnter januar)))
Step:Unary
{'subtrees': ['VXFIN'], 'family': ['NX', 'LK', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV',), 'right siblings': [(NX (NX (NN freitag)) (KON und) (NX (NN samstag)))], 'left siblings': [(NX (PPER ich))], 'auto preterminal span': (11, 12), 'span': (11, 12), 'parent': 'MF', 'label': 'LK', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM okay)
		(NX januar)
		[01;31m(SIMPX[00m
			[01;31m(LV[00m
				(SIMPX
					(C wenn)
					(MF ich in meinen terminkalender)
					(VC schaue))[01;31m)[00m
			(VF da)
			(LK habe)
			(MF
				(NX ich)
				(LK absurderweise)
				[01;36m(MF[00m
					(NX
						(NX freitag)
						(KON und)
						(NX samstag))[01;36m)[00m)[01;31m)[00m
		(SIMPX
			(KOORD aber)
			(VF ich)
			(LK denke)
			(NF
				(SIMPX
					(VF unsre geschaftspartner)
					(LK haben)
					(MF
						(NX samstag)
						[01;31m(NX[00m
							(NX kein interesse)
							(PX an unserm besuch)[01;31m)[00m))))
		(SIMPX dann ware hatte ich die erste moglichkeit wieder zwolfter dreizehnter januar)))
Step:Unary
{'subtrees': ['NX'], 'family': ['NX', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'KON', 'NN'), 'right siblings': [], 'left siblings': [(NX (PPER ich)), (LK (VXFIN (ADV absurderweise)))], 'auto preterminal span': (12, 15), 'span': (12, 15), 'parent': 'MF', 'label': 'MF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM okay)
		(NX januar)
		[01;31m(SIMPX[00m
			[01;31m(LV[00m
				(SIMPX
					(C wenn)
					(MF ich in meinen terminkalender)
					(VC schaue))[01;31m)[00m
			(VF da)
			(LK habe)
			(MF ich absurderweise freitag und samstag)[01;31m)[00m
		(SIMPX
			(KOORD aber)
			(VF ich)
			(LK denke)
			(NF
				(SIMPX
					(VF unsre geschaftspartner)
					(LK haben)
					(MF
						(NX samstag)
						[01;31m(NX[00m
							(NX kein interesse)
							(PX an unserm besuch)[01;31m)[00m))))
		(SIMPX dann ware hatte ich die erste moglichkeit wieder zwolfter dreizehnter januar)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['LV', 'VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'APPR', 'PPOSAT', 'NN', 'VVFIN', 'ADV', 'VAFIN', 'PPER', 'ADV', 'NN', 'KON', 'NN'), 'right siblings': ['VF', 'LK', 'MF'], 'parent': 'SIMPX', 'auto preterminal span': (2, 15), 'span': (2, 8), 'left siblings': [], 'label': 'LV', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(NX januar)
		[01;31m(SIMPX[00m
			(SIMPX wenn ich in meinen terminkalender schaue)
			(VF da)
			(LK habe)
			(MF ich absurderweise freitag und samstag)[01;31m)[00m
		(SIMPX
			(KOORD aber)
			(VF ich)
			(LK denke)
			(NF
				(SIMPX
					(VF unsre geschaftspartner)
					(LK haben)
					(MF
						(NX samstag)
						[01;31m(NX[00m
							(NX kein interesse)
							(PX an unserm besuch)[01;31m)[00m))))
		(SIMPX dann ware hatte ich die erste moglichkeit wieder zwolfter dreizehnter januar)))
Step:UNSET remove
{'subtrees': ['SIMPX', 'VF', 'LK', 'MF'], 'family': ['DM', 'NX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'NN', 'KOUS', 'PPER', 'APPR', 'PPOSAT', 'NN', 'VVFIN', 'ADV', 'VAFIN', 'PPER', 'ADV', 'NN', 'KON', 'NN', 'KON', 'PPER', 'VVFIN', 'PPOSAT', 'NN', 'VAFIN', 'NN', 'PIAT', 'NN', 'APPR', 'PPOSAT', 'NN', 'ADV', 'VAFIN', 'VAFIN', 'PPER', 'ART', 'ADJA', 'NN', 'ADV', 'ADJA', 'ADJA', 'NN'), 'right siblings': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 38), 'span': (2, 15), 'left siblings': ['DM', 'NX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(NX januar)
		(SIMPX wenn ich in meinen terminkalender schaue)
		(VF da)
		(LK habe)
		(MF ich absurderweise freitag und samstag)
		(SIMPX
			(KOORD aber)
			(VF ich)
			(LK denke)
			(NF
				(SIMPX
					(VF unsre geschaftspartner)
					(LK haben)
					(MF
						(NX samstag)
						[01;31m(NX[00m
							(NX kein interesse)
							(PX an unserm besuch)[01;31m)[00m))))
		(SIMPX dann ware hatte ich die erste moglichkeit wieder zwolfter dreizehnter januar)))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'PIAT', 'NN', 'APPR', 'PPOSAT', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (21, 27), 'span': (22, 27), 'left siblings': ['NX'], 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP okay januar wenn ich in meinen terminkalender schaue da habe ich absurderweise freitag und samstag aber ich denke unsre geschaftspartner haben samstag kein interesse an unserm besuch dann ware hatte ich die erste moglichkeit wieder zwolfter dreizehnter januar)

Sentence 437:
2 Initial errors
0 on fringe, 1 iterations
2 Error:NP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM aha)
		(DM gut)
		[01;33m(PX[00m (PX bei mir auch)
		[01;31m(NX[00m
			(NX ende januar) [01;33mPX)[00m
			(NX siebenundzwanzigster achtundzwanzigster)[01;31m)[00m))
Step:NP Attachment
{'new_parent': 'TURN', 'new_family': ['DM', 'DM', 'PX', 'NX', 'NX'], 'mover info': [('NX', (5, 7))], 'old_family': ['NX', 'NX'], 'start left siblings': [], 'auto preterminals': ('ITJ', 'ITJ', 'APPR', 'PPER', 'ADV', 'NN', 'NN', 'NN', 'NN'), 'start right siblings': ['NX'], 'end left siblings': ['DM', 'DM', 'PX'], 'auto preterminal span': (0, 9), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': ['NX'], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'PX'}
(TOP aha gut bei mir auch ende januar siebenundzwanzigster achtundzwanzigster)

Sentence 438:
2 Initial errors
0 on fringe, 1 iterations
2 Error:NP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM aha)
		(DM okay)
		(ADVX dann)
		(DM ja)
		(DM nee)
		(SIMPX
			(VF dann)
			(LK nehmen)
			(MF [01;33m(MF[00m
				(NX wir)
				(ADVX doch)
				[01;31m(NX[00m
					(NX siebenundzwanzigsten und achtundzwanzigsten) [01;33mMF)[00m
					(NX dienstag mittwoch)[01;31m)[00m))))
Step:NP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'ADVX', 'NX', 'NX'], 'mover info': [('NX', (9, 12))], 'old_family': ['NX', 'NX'], 'start left siblings': [], 'auto preterminals': ('PPER', 'ADV', 'NN', 'KON', 'NN', 'NN', 'NN'), 'start right siblings': ['NX'], 'end left siblings': ['NX', 'ADVX'], 'auto preterminal span': (7, 14), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': ['NX'], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'MF'}
(TOP aha okay dann ja nee dann nehmen wir doch siebenundzwanzigsten und achtundzwanzigsten dienstag mittwoch)

Sentence 439:
7 Initial errors
0 on fringe, 5 iterations
2 Error:Modifier Attachment
2 Error:Modifier Attachment
1 Error:Unary
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX
			(LK konnen)
			(MF
				[01;36m(MF[00m
					(NX
						(PPER wir))[01;36m)[00m
				[01;36m(DM[00m
					(ADVX
						(ADV also))[01;36m)[00m))
		(SIMPX konnen wir probieren)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(C wenn)
			[01;31m(MF[00m
				[01;36m(MF[00m
					(NX ich)
					(NX die verbindung) [01;33mSIMPX)[00m[01;36m)[00m
				[01;36m(DM[00m
					(ADVX
						(ADV also))[01;36m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX wir konnen zug oder flugzeug nehmen)
		(NX was)
		(SIMPX was ist dir lieber)))
Step:Modifier Attachment
{'new_parent': 'SIMPX', 'new_family': ['C', 'MF', 'ADVX'], 'mover info': [('ADVX', (10, 11))], 'old_family': ['NX', 'NX', 'ADVX'], 'start left siblings': ['NX', 'NX'], 'auto preterminals': ('KOUS', 'PPER', 'ART', 'NN', 'ADV'), 'start right siblings': [], 'end left siblings': ['C', 'MF'], 'auto preterminal span': (6, 11), 'movers': ['ADVX'], 'old_parent': 'MF', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SIMPX
			(LK konnen)
			(MF
				[01;36m(MF[00m
					(NX
						(PPER wir))[01;36m)[00m
				[01;36m(DM[00m
					(ADVX
						(ADV also))[01;36m)[00m))
		(SIMPX konnen wir probieren)
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(C wenn)
				(MF ich die verbindung)[01;36m)[00m
			[01;36m(DM[00m
				(ADVX
					(ADV also))[01;36m)[00m[01;31m)[00m
		(SIMPX wir konnen zug oder flugzeug nehmen)
		(NX was)
		(SIMPX was ist dir lieber)))
Step:Modifier Attachment
{'new_parent': 'TURN', 'new_family': ['SIMPX', 'SIMPX', 'SIMPX', 'ADVX', 'SIMPX', 'NX', 'SIMPX'], 'mover info': [('ADVX', (10, 11))], 'old_family': ['C', 'MF', 'ADVX'], 'start left siblings': ['C', 'MF'], 'auto preterminals': ('VMFIN', 'PPER', 'ADV', 'VMFIN', 'PPER', 'VVINF', 'KOUS', 'PPER', 'ART', 'NN', 'ADV', 'PPER', 'VMFIN', 'NN', 'KON', 'NN', 'VVINF', 'PWS', 'PWS', 'VAFIN', 'PPER', 'ADJD'), 'start right siblings': [], 'end left siblings': ['SIMPX', 'SIMPX', 'SIMPX'], 'auto preterminal span': (0, 22), 'movers': ['ADVX'], 'old_parent': 'SIMPX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['SIMPX', 'NX', 'SIMPX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SIMPX
			(LK konnen)
			(MF
				[01;36m(MF[00m
					(NX
						(PPER wir))[01;36m)[00m
				[01;36m(DM[00m
					(ADVX
						(ADV also))[01;36m)[00m))
		(SIMPX konnen wir probieren)
		(SIMPX wenn ich die verbindung)
		[01;36m(DM[00m
			(ADVX
				(ADV also))[01;36m)[00m
		(SIMPX wir konnen zug oder flugzeug nehmen)
		(NX was)
		(SIMPX was ist dir lieber)))
Step:Unary
{'subtrees': ['NX'], 'family': ['MF', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER',), 'right siblings': [(ADVX (ADV also))], 'left siblings': [], 'auto preterminal span': (1, 2), 'span': (1, 2), 'parent': 'MF', 'label': 'MF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SIMPX
			(LK konnen)
			(MF
				(MF wir)
				[01;36m(DM[00m
					(ADVX
						(ADV also))[01;36m)[00m))
		(SIMPX konnen wir probieren)
		(SIMPX wenn ich die verbindung)
		[01;36m(DM[00m
			(ADVX
				(ADV also))[01;36m)[00m
		(SIMPX wir konnen zug oder flugzeug nehmen)
		(NX was)
		(SIMPX was ist dir lieber)))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['MF', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV',), 'right siblings': [], 'left siblings': [(MF (NX (PPER wir)))], 'auto preterminal span': (2, 3), 'span': (2, 3), 'parent': 'MF', 'label': 'DM', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SIMPX konnen wir also)
		(SIMPX konnen wir probieren)
		(SIMPX wenn ich die verbindung)
		[01;36m(DM[00m
			(ADVX
				(ADV also))[01;36m)[00m
		(SIMPX wir konnen zug oder flugzeug nehmen)
		(NX was)
		(SIMPX was ist dir lieber)))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['SIMPX', 'SIMPX', 'SIMPX', 'DM', 'SIMPX', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV',), 'right siblings': [(SIMPX (VF (NX (PPER wir))) (LK (VXFIN (VMFIN konnen))) (MF (NX (NX (NN zug)) (KON oder) (NX (NN flugzeug)))) (VC (VXINF (VVINF nehmen)))), (NX (PWS was)), (SIMPX (VF (NX (PWS was))) (LK (VXFIN (VAFIN ist))) (MF (NX (PPER dir)) (ADJX (ADJD lieber))))], 'left siblings': [(SIMPX (LK (VXFIN (VMFIN konnen))) (MF (MF (NX (PPER wir))) (DM (ADVX (ADV also))))), (SIMPX (LK (VXFIN (VMFIN konnen))) (MF (NX (PPER wir))) (VC (VXINF (VVINF probieren)))), (SIMPX (C (KOUS wenn)) (MF (NX (PPER ich)) (NX (ART die) (NN verbindung))))], 'auto preterminal span': (10, 11), 'span': (10, 11), 'parent': 'TURN', 'label': 'DM', 'classified_type': 'Unary', 'type': 'add'}
(TOP konnen wir also konnen wir probieren wenn ich die verbindung also wir konnen zug oder flugzeug nehmen was was ist dir lieber)

Sentence 440:
10 Initial errors
0 on fringe, 4 iterations
7 Error:Modifier Attachment
1 Error:Clause Attachment
1 Error:UNSET remove
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;36m(SIMPX[00m
			(SIMPX der muste ja)
			(SIMPX der muste eigentlich reichen)[01;36m)[00m
		(DM also)
		[01;31m(SIMPX[00m
			(LV munchen hannover)
			(VF das)
			(LK sind)
			(MF knapp funf stunden)[01;31m)[00m
		(DM ja)
		(DM also)
		[01;31m(DM[00m
			(ADVX
				(ADV also))[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				[01;31m(NX[00m
					[01;31m(ADJX[00m
						(ADJX vier)
						[01;33m(SIMPX (VF (NX[00m (ADJX viereinhalb)[01;31m)[00m
					(NN stunden)[01;31m)[00m[01;31m)[00m [01;33mNX) VF)[00m
			(LK sehe)
			(MF ich)[01;31m)[00m [01;33mSIMPX)[00m
		(NX viereinhalb stunden fahrzeit nach hannover)))
Step:Modifier Attachment
{'new_parent': 'DM', 'new_family': ['ADVX', 'ADJX'], 'mover info': [('ADJX', (18, 19))], 'old_family': ['ADJX', 'ADJX'], 'start left siblings': [], 'auto preterminals': ('PDS', 'VMFIN', 'ADV', 'PDS', 'VMFIN', 'ADV', 'VVINF', 'ADV', 'NE', 'NE', 'PDS', 'VAFIN', 'ADV', 'CARD', 'NN', 'PTKANT', 'ADV', 'ADV', 'CARD', 'CARD', 'NN', 'VVFIN', 'PPER', 'CARD', 'NN', 'NN', 'APPR', 'NE'), 'start right siblings': ['ADJX'], 'end left siblings': ['ADVX'], 'auto preterminal span': (0, 28), 'movers': ['ADJX'], 'old_parent': 'ADJX', 'POS confusion': ('CARD', 'CARD'), 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;36m(SIMPX[00m
			(SIMPX der muste ja)
			(SIMPX der muste eigentlich reichen)[01;36m)[00m
		(DM also)
		[01;31m(SIMPX[00m
			(LV munchen hannover)
			(VF das)
			(LK sind)
			(MF knapp funf stunden)[01;31m)[00m
		(DM ja)
		(DM also)
		[01;31m(DM[00m
			(ADVX also)
			(ADJX vier)[01;31m)[00m
		(SIMPX viereinhalb stunden sehe ich)
		(NX viereinhalb stunden fahrzeit nach hannover)))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['SIMPX', 'DM', 'SIMPX', 'DM', 'DM', 'DM', 'SIMPX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VMFIN', 'ADV', 'PDS', 'VMFIN', 'ADV', 'VVINF'), 'right siblings': [(DM (ADVX (ADV also))), (SIMPX (LV (NX (NX (NE munchen)) (NX (NE hannover)))) (VF (NX (PDS das))) (LK (VXFIN (VAFIN sind))) (MF (NX (ADVX (ADV knapp)) (ADJX (CARD funf)) (NN stunden)))), (DM (PTKANT ja)), (DM (ADVX (ADV also))), (DM (ADVX (ADV also)) (ADJX (CARD vier))), (SIMPX (VF (NX (ADJX (CARD viereinhalb)) (NN stunden))) (LK (VXFIN (VVFIN sehe))) (MF (NX (PPER ich)))), (NX (NX (NX (ADJX (CARD viereinhalb)) (NN stunden)) (NX (NN fahrzeit))) (PX (APPR nach) (NX (NE hannover))))], 'left siblings': [], 'auto preterminal span': (0, 7), 'span': (0, 7), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(SIMPX der muste ja der muste eigentlich reichen)
		(DM also)
		[01;31m(SIMPX[00m
			(LV munchen hannover)
			(VF das)
			(LK sind)
			(MF knapp funf stunden)[01;31m)[00m
		(DM ja)
		(DM also)
		[01;31m(DM[00m
			(ADVX also)
			(ADJX vier)[01;31m)[00m
		(SIMPX viereinhalb stunden sehe ich)
		(NX viereinhalb stunden fahrzeit nach hannover)))
Step:UNSET remove
{'subtrees': ['LV', 'VF', 'LK', 'MF'], 'family': ['SIMPX', 'DM', 'SIMPX', 'DM', 'DM', 'DM', 'SIMPX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VMFIN', 'ADV', 'PDS', 'VMFIN', 'ADV', 'VVINF', 'ADV', 'NE', 'NE', 'PDS', 'VAFIN', 'ADV', 'CARD', 'NN', 'PTKANT', 'ADV', 'ADV', 'CARD', 'CARD', 'NN', 'VVFIN', 'PPER', 'CARD', 'NN', 'NN', 'APPR', 'NE'), 'right siblings': ['DM', 'DM', 'DM', 'SIMPX', 'NX'], 'parent': 'TURN', 'auto preterminal span': (0, 28), 'span': (8, 15), 'left siblings': ['SIMPX', 'DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX der muste ja der muste eigentlich reichen)
		(DM also)
		(LV munchen hannover)
		(VF das)
		(LK sind)
		(MF knapp funf stunden)
		(DM ja)
		(DM also)
		[01;31m(DM[00m
			(ADVX also)
			(ADJX vier)[01;31m)[00m
		(SIMPX viereinhalb stunden sehe ich)
		(NX viereinhalb stunden fahrzeit nach hannover)))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'ADJX'], 'family': ['SIMPX', 'DM', 'LV', 'VF', 'LK', 'MF', 'DM', 'DM', 'DM', 'SIMPX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VMFIN', 'ADV', 'PDS', 'VMFIN', 'ADV', 'VVINF', 'ADV', 'NE', 'NE', 'PDS', 'VAFIN', 'ADV', 'CARD', 'NN', 'PTKANT', 'ADV', 'ADV', 'CARD', 'CARD', 'NN', 'VVFIN', 'PPER', 'CARD', 'NN', 'NN', 'APPR', 'NE'), 'right siblings': ['SIMPX', 'NX'], 'parent': 'TURN', 'auto preterminal span': (0, 28), 'span': (17, 19), 'left siblings': ['SIMPX', 'DM', 'LV', 'VF', 'LK', 'MF', 'DM', 'DM'], 'label': 'DM', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP der muste ja der muste eigentlich reichen also munchen hannover das sind knapp funf stunden ja also also vier viereinhalb stunden sehe ich viereinhalb stunden fahrzeit nach hannover)

Sentence 441:
29 Initial errors
0 on fringe, 22 iterations
2 Error:Different label
2 Error:Single Word Phrase
2 Error:Different label
2 Error:NP Attachment
2 Error:NP Attachment
2 Error:PP Attachment
2 Error:UNSET move
1 Error:Single Word Phrase
1 Error:UNSET add
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:Clause Attachment
1 Error:UNSET add
1 Error:UNSET remove
1 Error:Clause Attachment
1 Error:Co-ordination
1 Error:Modifier Attachment
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM okay)
		[01;31m(SIMPX[00m
			[01;31m(LV[00m
				(NX
					(ADJX siebenundzwanzigster)
					(NN januar))[01;31m)[00m
			[01;33m(SIMPX[00m (VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK fahren)
					(MF wir)
					(VC los)[01;31m)[00m [01;33mSIMPX)[00m
				(APPR um)
				[01;31m(LKM[00m
					(LK nehmen)
					[01;33m(MF[00m (MF den ice um zehn uhr)[01;31m)[00m
				[01;36m(SIMPX[00m [01;31m(LKM[00m
					(LK sind)
					(MF um funfzehn uhr in hannover)[01;31m)[00m [01;33mMF)[00m[01;36m)[00m
				[01;31m(LKM[00m
					[01;36m(VXINF[00m [01;36m(VC[00m [01;31m(LK[00m
						[01;31m(VXFIN[00m
							(VVFIN nehmen)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m
					(MF da ein taxi)[01;31m)[00m
				(KON und)
				[01;36m(ADVX[00m
					(KON und)[01;36m)[00m
				(KON und)
				(LKMVC kommen rechtzeitig an)[01;31m)[00m[01;31m)[00m
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK wurden)
			(MF
				(NX wir)
				[01;31m(PX[00m
					(PX am achtundzwanzigsten)
					(ADVX abends)[01;31m)[00m
				(ADVX einfach)
				(ADVX wieder))
			(VC zuruckfahren))
		[01;31m(SIMPX[00m
			(VF da)
			(LK wurde)
			(MF ich vielleicht)
			(VC sagen)
			(NF wir nehmen das flugzeug)[01;31m)[00m
		[01;36m(SIMPX[00m
			(SIMPX [01;33m(SIMPX[00m
				(VF da)
				(LK gibt)
				[01;31m(MF[00m
					[01;36m(MF[00m
						(NX es)
						(NX einen flug) [01;33mSIMPX)[00m[01;36m)[00m
					(NX siebzehn uhr zwanzig)[01;31m)[00m)
			[01;31m(ADJX[00m
				(ADVX sogar)
				(ADJX stundlich bis einundzwanzig uhr zwanzig)[01;31m)[00m[01;36m)[00m
		[01;31m(SIMPX[00m
			(VF das)
			(LK heist)
			(NF
				(SIMPX
					(VF wir)
					[01;31m(FKOORD[00m
						(LKMVC
							(LK konnen)
							[01;31m(MF[00m
								(ADVX auch)
								(ADVX noch)
								(PX um zwanzig nach acht)
								[01;31m(SIMPX[00m [01;33m(SIMPX[00m
									(LK konnen)
									[01;31m(MF[00m [01;33m(MF[00m
										(NX
											(PPER wir))[01;31m)[00m[01;31m)[00m
								(PX in hannover)[01;31m)[00m [01;33mMF)[00m
							(VC abfliegen)) [01;33mSIMPX)[00m
						(KON und)
						(LKM sind in siebzig minuten in munchen)[01;31m)[00m))[01;31m)[00m))
Step:Different label
{'family': ['LKMVC', 'APPR', 'LKM', 'SIMPX', 'LKM', 'KON', 'KON', 'KON', 'LKMVC'], 'auto preterminal span': (14, 20), 'span': (14, 20), 'subtrees': ['LK', 'MF'], 'parent': 'FKOORD', 'over_word': False, 'auto preterminals': ('VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('LKM', 'SIMPX')}
(TOP
	(TURN
		(DM okay)
		[01;31m(SIMPX[00m
			[01;31m(LV[00m
				(NX
					(ADJX siebenundzwanzigster)
					(NN januar))[01;31m)[00m
			[01;33m(SIMPX[00m (VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK fahren)
					(MF wir)
					(VC los)[01;31m)[00m [01;33mSIMPX)[00m
				(APPR um)
				[01;31m(LKM[00m
					(LK nehmen)
					[01;33m(MF[00m (MF den ice um zehn uhr)[01;31m)[00m
				(SIMPX sind um funfzehn uhr in hannover) [01;33mMF)[00m
				[01;31m(LKM[00m
					[01;36m(VXINF[00m [01;36m(VC[00m [01;31m(LK[00m
						[01;31m(VXFIN[00m
							(VVFIN nehmen)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m
					(MF da ein taxi)[01;31m)[00m
				(KON und)
				[01;36m(ADVX[00m
					(KON und)[01;36m)[00m
				(KON und)
				(LKMVC kommen rechtzeitig an)[01;31m)[00m[01;31m)[00m
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK wurden)
			(MF
				(NX wir)
				[01;31m(PX[00m
					(PX am achtundzwanzigsten)
					(ADVX abends)[01;31m)[00m
				(ADVX einfach)
				(ADVX wieder))
			(VC zuruckfahren))
		[01;31m(SIMPX[00m
			(VF da)
			(LK wurde)
			(MF ich vielleicht)
			(VC sagen)
			(NF wir nehmen das flugzeug)[01;31m)[00m
		[01;36m(SIMPX[00m
			(SIMPX [01;33m(SIMPX[00m
				(VF da)
				(LK gibt)
				[01;31m(MF[00m
					[01;36m(MF[00m
						(NX es)
						(NX einen flug) [01;33mSIMPX)[00m[01;36m)[00m
					(NX siebzehn uhr zwanzig)[01;31m)[00m)
			[01;31m(ADJX[00m
				(ADVX sogar)
				(ADJX stundlich bis einundzwanzig uhr zwanzig)[01;31m)[00m[01;36m)[00m
		[01;31m(SIMPX[00m
			(VF das)
			(LK heist)
			(NF
				(SIMPX
					(VF wir)
					[01;31m(FKOORD[00m
						(LKMVC
							(LK konnen)
							[01;31m(MF[00m
								(ADVX auch)
								(ADVX noch)
								(PX um zwanzig nach acht)
								[01;31m(SIMPX[00m [01;33m(SIMPX[00m
									(LK konnen)
									[01;31m(MF[00m [01;33m(MF[00m
										(NX
											(PPER wir))[01;31m)[00m[01;31m)[00m
								(PX in hannover)[01;31m)[00m [01;33mMF)[00m
							(VC abfliegen)) [01;33mSIMPX)[00m
						(KON und)
						(LKM sind in siebzig minuten in munchen)[01;31m)[00m))[01;31m)[00m))
Step:Single Word Phrase
{'family': ['VC'], 'auto preterminal span': (20, 21), 'span': (20, 21), 'subtrees': ['VVFIN'], 'parent': 'LK', 'over_word': True, 'auto preterminals': ('VVFIN',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VXFIN', 'VC')}
(TOP
	(TURN
		(DM okay)
		[01;31m(SIMPX[00m
			[01;31m(LV[00m
				(NX
					(ADJX siebenundzwanzigster)
					(NN januar))[01;31m)[00m
			[01;33m(SIMPX[00m (VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK fahren)
					(MF wir)
					(VC los)[01;31m)[00m [01;33mSIMPX)[00m
				(APPR um)
				[01;31m(LKM[00m
					(LK nehmen)
					[01;33m(MF[00m (MF den ice um zehn uhr)[01;31m)[00m
				(SIMPX sind um funfzehn uhr in hannover) [01;33mMF)[00m
				[01;31m(LKM[00m
					[01;36m(VXINF[00m [01;31m(LK[00m
						(VC
							(VVFIN nehmen))[01;31m)[00m[01;36m)[00m
					(MF da ein taxi)[01;31m)[00m
				(KON und)
				[01;36m(ADVX[00m
					(KON und)[01;36m)[00m
				(KON und)
				(LKMVC kommen rechtzeitig an)[01;31m)[00m[01;31m)[00m
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK wurden)
			(MF
				(NX wir)
				[01;31m(PX[00m
					(PX am achtundzwanzigsten)
					(ADVX abends)[01;31m)[00m
				(ADVX einfach)
				(ADVX wieder))
			(VC zuruckfahren))
		[01;31m(SIMPX[00m
			(VF da)
			(LK wurde)
			(MF ich vielleicht)
			(VC sagen)
			(NF wir nehmen das flugzeug)[01;31m)[00m
		[01;36m(SIMPX[00m
			(SIMPX [01;33m(SIMPX[00m
				(VF da)
				(LK gibt)
				[01;31m(MF[00m
					[01;36m(MF[00m
						(NX es)
						(NX einen flug) [01;33mSIMPX)[00m[01;36m)[00m
					(NX siebzehn uhr zwanzig)[01;31m)[00m)
			[01;31m(ADJX[00m
				(ADVX sogar)
				(ADJX stundlich bis einundzwanzig uhr zwanzig)[01;31m)[00m[01;36m)[00m
		[01;31m(SIMPX[00m
			(VF das)
			(LK heist)
			(NF
				(SIMPX
					(VF wir)
					[01;31m(FKOORD[00m
						(LKMVC
							(LK konnen)
							[01;31m(MF[00m
								(ADVX auch)
								(ADVX noch)
								(PX um zwanzig nach acht)
								[01;31m(SIMPX[00m [01;33m(SIMPX[00m
									(LK konnen)
									[01;31m(MF[00m [01;33m(MF[00m
										(NX
											(PPER wir))[01;31m)[00m[01;31m)[00m
								(PX in hannover)[01;31m)[00m [01;33mMF)[00m
							(VC abfliegen)) [01;33mSIMPX)[00m
						(KON und)
						(LKM sind in siebzig minuten in munchen)[01;31m)[00m))[01;31m)[00m))
Step:Different label
{'family': ['VXINF', 'MF'], 'auto preterminal span': (20, 21), 'span': (20, 21), 'subtrees': ['VC'], 'parent': 'LKM', 'over_word': False, 'auto preterminals': ('VVFIN',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('LK', 'VXINF')}
(TOP
	(TURN
		(DM okay)
		[01;31m(SIMPX[00m
			[01;31m(LV[00m
				(NX
					(ADJX siebenundzwanzigster)
					(NN januar))[01;31m)[00m
			[01;33m(SIMPX[00m (VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK fahren)
					(MF wir)
					(VC los)[01;31m)[00m [01;33mSIMPX)[00m
				(APPR um)
				[01;31m(LKM[00m
					(LK nehmen)
					[01;33m(MF[00m (MF den ice um zehn uhr)[01;31m)[00m
				(SIMPX sind um funfzehn uhr in hannover) [01;33mMF)[00m
				[01;31m(LKM[00m
					(VXINF nehmen)
					(MF da ein taxi)[01;31m)[00m
				(KON und)
				[01;36m(ADVX[00m
					(KON und)[01;36m)[00m
				(KON und)
				(LKMVC kommen rechtzeitig an)[01;31m)[00m[01;31m)[00m
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK wurden)
			(MF
				(NX wir)
				[01;31m(PX[00m
					(PX am achtundzwanzigsten)
					(ADVX abends)[01;31m)[00m
				(ADVX einfach)
				(ADVX wieder))
			(VC zuruckfahren))
		[01;31m(SIMPX[00m
			(VF da)
			(LK wurde)
			(MF ich vielleicht)
			(VC sagen)
			(NF wir nehmen das flugzeug)[01;31m)[00m
		[01;36m(SIMPX[00m
			(SIMPX [01;33m(SIMPX[00m
				(VF da)
				(LK gibt)
				[01;31m(MF[00m
					[01;36m(MF[00m
						(NX es)
						(NX einen flug) [01;33mSIMPX)[00m[01;36m)[00m
					(NX siebzehn uhr zwanzig)[01;31m)[00m)
			[01;31m(ADJX[00m
				(ADVX sogar)
				(ADJX stundlich bis einundzwanzig uhr zwanzig)[01;31m)[00m[01;36m)[00m
		[01;31m(SIMPX[00m
			(VF das)
			(LK heist)
			(NF
				(SIMPX
					(VF wir)
					[01;31m(FKOORD[00m
						(LKMVC
							(LK konnen)
							[01;31m(MF[00m
								(ADVX auch)
								(ADVX noch)
								(PX um zwanzig nach acht)
								[01;31m(SIMPX[00m [01;33m(SIMPX[00m
									(LK konnen)
									[01;31m(MF[00m [01;33m(MF[00m
										(NX
											(PPER wir))[01;31m)[00m[01;31m)[00m
								(PX in hannover)[01;31m)[00m [01;33mMF)[00m
							(VC abfliegen)) [01;33mSIMPX)[00m
						(KON und)
						(LKM sind in siebzig minuten in munchen)[01;31m)[00m))[01;31m)[00m))
Step:NP Attachment
{'new_parent': 'ADJX', 'new_family': ['NX', 'ADVX', 'ADJX'], 'mover info': [('NX', (54, 57))], 'old_family': ['NX', 'NX', 'NX'], 'start left siblings': ['NX', 'NX'], 'auto preterminals': ('ITJ', 'ADJA', 'NN', 'ADV', 'VVFIN', 'PPER', 'PTKVZ', 'APPR', 'VVFIN', 'ART', 'NE', 'APPR', 'CARD', 'NN', 'VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE', 'VVFIN', 'ADV', 'ART', 'NN', 'KON', 'KON', 'KON', 'VVFIN', 'ADJD', 'PTKVZ', 'KON', 'ADV', 'VAFIN', 'PPER', 'APPRART', 'NN', 'ADV', 'ADV', 'ADV', 'VVINF', 'ADV', 'VAFIN', 'PPER', 'ADV', 'VVINF', 'PPER', 'VVFIN', 'ART', 'NN', 'ADV', 'VVFIN', 'PPER', 'ART', 'NN', 'CARD', 'NN', 'CARD', 'ADV', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'PDS', 'VVFIN', 'PPER', 'VMFIN', 'ADV', 'ADV', 'APPR', 'CARD', 'APPR', 'CARD', 'VMFIN', 'PPER', 'APPR', 'NE', 'VVINF', 'KON', 'VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 85), 'movers': ['NX'], 'old_parent': 'MF', 'end right siblings': ['ADVX', 'ADJX'], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM okay)
		[01;31m(SIMPX[00m
			[01;31m(LV[00m
				(NX
					(ADJX siebenundzwanzigster)
					(NN januar))[01;31m)[00m
			[01;33m(SIMPX[00m (VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK fahren)
					(MF wir)
					(VC los)[01;31m)[00m [01;33mSIMPX)[00m
				(APPR um)
				[01;31m(LKM[00m
					(LK nehmen)
					[01;33m(MF[00m (MF den ice um zehn uhr)[01;31m)[00m
				(SIMPX sind um funfzehn uhr in hannover) [01;33mMF)[00m
				[01;31m(LKM[00m
					(VXINF nehmen)
					(MF da ein taxi)[01;31m)[00m
				(KON und)
				[01;36m(ADVX[00m
					(KON und)[01;36m)[00m
				(KON und)
				(LKMVC kommen rechtzeitig an)[01;31m)[00m[01;31m)[00m
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK wurden)
			(MF
				(NX wir)
				[01;31m(PX[00m
					(PX am achtundzwanzigsten)
					(ADVX abends)[01;31m)[00m
				(ADVX einfach)
				(ADVX wieder))
			(VC zuruckfahren))
		[01;31m(SIMPX[00m
			(VF da)
			(LK wurde)
			(MF ich vielleicht)
			(VC sagen)
			(NF wir nehmen das flugzeug)[01;31m)[00m
		[01;36m(SIMPX[00m
			[01;33m(SIMPX[00m (SIMPX da gibt es einen flug)
			[01;31m(ADJX[00m
				(NX siebzehn uhr zwanzig) [01;33mSIMPX)[00m
				(ADVX sogar)
				(ADJX stundlich bis einundzwanzig uhr zwanzig)[01;31m)[00m[01;36m)[00m
		[01;31m(SIMPX[00m
			(VF das)
			(LK heist)
			(NF
				(SIMPX
					(VF wir)
					[01;31m(FKOORD[00m
						(LKMVC
							(LK konnen)
							[01;31m(MF[00m
								(ADVX auch)
								(ADVX noch)
								(PX um zwanzig nach acht)
								[01;31m(SIMPX[00m [01;33m(SIMPX[00m
									(LK konnen)
									[01;31m(MF[00m [01;33m(MF[00m
										(NX
											(PPER wir))[01;31m)[00m[01;31m)[00m
								(PX in hannover)[01;31m)[00m [01;33mMF)[00m
							(VC abfliegen)) [01;33mSIMPX)[00m
						(KON und)
						(LKM sind in siebzig minuten in munchen)[01;31m)[00m))[01;31m)[00m))
Step:NP Attachment
{'new_parent': 'TURN', 'new_family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'ADVX', 'ADJX', 'SIMPX'], 'mover info': [('NX', (54, 57)), ('ADVX', (57, 58))], 'old_family': ['NX', 'ADVX', 'ADJX'], 'start left siblings': [], 'auto preterminals': ('ITJ', 'ADJA', 'NN', 'ADV', 'VVFIN', 'PPER', 'PTKVZ', 'APPR', 'VVFIN', 'ART', 'NE', 'APPR', 'CARD', 'NN', 'VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE', 'VVFIN', 'ADV', 'ART', 'NN', 'KON', 'KON', 'KON', 'VVFIN', 'ADJD', 'PTKVZ', 'KON', 'ADV', 'VAFIN', 'PPER', 'APPRART', 'NN', 'ADV', 'ADV', 'ADV', 'VVINF', 'ADV', 'VAFIN', 'PPER', 'ADV', 'VVINF', 'PPER', 'VVFIN', 'ART', 'NN', 'ADV', 'VVFIN', 'PPER', 'ART', 'NN', 'CARD', 'NN', 'CARD', 'ADV', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'PDS', 'VVFIN', 'PPER', 'VMFIN', 'ADV', 'ADV', 'APPR', 'CARD', 'APPR', 'CARD', 'VMFIN', 'PPER', 'APPR', 'NE', 'VVINF', 'KON', 'VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE'), 'start right siblings': ['ADJX'], 'end left siblings': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'auto preterminal span': (0, 85), 'adding node already present': False, 'movers': ['NX', 'ADVX'], 'old_parent': 'ADJX', 'added and moved': True, 'end right siblings': ['ADJX', 'SIMPX'], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'SIMPX'}
(TOP
	(TURN
		(DM okay)
		[01;31m(SIMPX[00m
			[01;31m(LV[00m
				(NX
					(ADJX siebenundzwanzigster)
					(NN januar))[01;31m)[00m
			[01;33m(SIMPX[00m (VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK fahren)
					(MF wir)
					(VC los)[01;31m)[00m [01;33mSIMPX)[00m
				(APPR um)
				[01;31m(LKM[00m
					(LK nehmen)
					[01;33m(MF[00m (MF den ice um zehn uhr)[01;31m)[00m
				(SIMPX sind um funfzehn uhr in hannover) [01;33mMF)[00m
				[01;31m(LKM[00m
					(VXINF nehmen)
					(MF da ein taxi)[01;31m)[00m
				(KON und)
				[01;36m(ADVX[00m
					(KON und)[01;36m)[00m
				(KON und)
				(LKMVC kommen rechtzeitig an)[01;31m)[00m[01;31m)[00m
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK wurden)
			(MF
				(NX wir)
				[01;31m(PX[00m
					(PX am achtundzwanzigsten)
					(ADVX abends)[01;31m)[00m
				(ADVX einfach)
				(ADVX wieder))
			(VC zuruckfahren))
		[01;31m(SIMPX[00m
			(VF da)
			(LK wurde)
			(MF ich vielleicht)
			(VC sagen)
			(NF wir nehmen das flugzeug)[01;31m)[00m
		(SIMPX
			[01;36m(SIMPX[00m
				(SIMPX da gibt es einen flug)
				(NX siebzehn uhr zwanzig)[01;36m)[00m
			(ADVX sogar)
			(ADJX stundlich bis einundzwanzig uhr zwanzig))
		[01;31m(SIMPX[00m
			(VF das)
			(LK heist)
			(NF
				(SIMPX
					(VF wir)
					[01;31m(FKOORD[00m
						(LKMVC
							(LK konnen)
							[01;31m(MF[00m
								(ADVX auch)
								(ADVX noch)
								(PX um zwanzig nach acht)
								[01;31m(SIMPX[00m [01;33m(SIMPX[00m
									(LK konnen)
									[01;31m(MF[00m [01;33m(MF[00m
										(NX
											(PPER wir))[01;31m)[00m[01;31m)[00m
								(PX in hannover)[01;31m)[00m [01;33mMF)[00m
							(VC abfliegen)) [01;33mSIMPX)[00m
						(KON und)
						(LKM sind in siebzig minuten in munchen)[01;31m)[00m))[01;31m)[00m))
Step:PP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'PX'], 'mover info': [('PX', (75, 77))], 'old_family': ['ADVX', 'ADVX', 'PX', 'SIMPX', 'PX'], 'start left siblings': ['ADVX', 'ADVX', 'PX', 'SIMPX'], 'auto preterminals': ('ADV', 'ADV', 'APPR', 'CARD', 'APPR', 'CARD', 'VMFIN', 'PPER', 'APPR', 'NE'), 'start right siblings': [], 'end left siblings': ['NX'], 'auto preterminal span': (67, 77), 'movers': ['PX'], 'old_parent': 'MF', 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM okay)
		[01;31m(SIMPX[00m
			[01;31m(LV[00m
				(NX
					(ADJX siebenundzwanzigster)
					(NN januar))[01;31m)[00m
			[01;33m(SIMPX[00m (VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK fahren)
					(MF wir)
					(VC los)[01;31m)[00m [01;33mSIMPX)[00m
				(APPR um)
				[01;31m(LKM[00m
					(LK nehmen)
					[01;33m(MF[00m (MF den ice um zehn uhr)[01;31m)[00m
				(SIMPX sind um funfzehn uhr in hannover) [01;33mMF)[00m
				[01;31m(LKM[00m
					(VXINF nehmen)
					(MF da ein taxi)[01;31m)[00m
				(KON und)
				[01;36m(ADVX[00m
					(KON und)[01;36m)[00m
				(KON und)
				(LKMVC kommen rechtzeitig an)[01;31m)[00m[01;31m)[00m
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK wurden)
			(MF
				(NX wir)
				[01;31m(PX[00m
					(PX am achtundzwanzigsten)
					(ADVX abends)[01;31m)[00m
				(ADVX einfach)
				(ADVX wieder))
			(VC zuruckfahren))
		[01;31m(SIMPX[00m
			(VF da)
			(LK wurde)
			(MF ich vielleicht)
			(VC sagen)
			(NF wir nehmen das flugzeug)[01;31m)[00m
		(SIMPX
			[01;36m(SIMPX[00m
				(SIMPX da gibt es einen flug)
				(NX siebzehn uhr zwanzig)[01;36m)[00m
			(ADVX sogar)
			(ADJX stundlich bis einundzwanzig uhr zwanzig))
		[01;31m(SIMPX[00m
			(VF das)
			(LK heist)
			(NF
				(SIMPX
					(VF wir)
					[01;31m(FKOORD[00m
						(LKMVC
							(LK konnen)
							[01;31m(MF[00m
								(ADVX auch)
								(ADVX noch)
								(PX um zwanzig nach acht)
								[01;31m(SIMPX[00m [01;33m(SIMPX[00m
									(LK konnen)
									(MF wir in hannover)[01;31m)[00m[01;31m)[00m
							(VC abfliegen)) [01;33mSIMPX)[00m
						(KON und)
						(LKM sind in siebzig minuten in munchen)[01;31m)[00m))[01;31m)[00m))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['LK', 'MF', 'VC'], 'mover info': [('VC', (77, 78))], 'old_family': ['LK', 'MF', 'VC'], 'start left siblings': ['LK', 'MF'], 'auto preterminals': ('VMFIN', 'ADV', 'ADV', 'APPR', 'CARD', 'APPR', 'CARD', 'VMFIN', 'PPER', 'APPR', 'NE', 'VVINF'), 'start right siblings': [], 'end left siblings': ['LK', 'MF'], 'auto preterminal span': (66, 78), 'movers': ['VC'], 'old_parent': 'LKMVC', 'POS confusion': ('VVINF', 'VVINF'), 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM okay)
		[01;31m(SIMPX[00m
			[01;31m(LV[00m
				(NX
					(ADJX siebenundzwanzigster)
					(NN januar))[01;31m)[00m
			[01;33m(SIMPX[00m (VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK fahren)
					(MF wir)
					(VC los)[01;31m)[00m [01;33mSIMPX)[00m
				(APPR um)
				[01;31m(LKM[00m
					(LK nehmen)
					[01;33m(MF[00m (MF den ice um zehn uhr)[01;31m)[00m
				(SIMPX sind um funfzehn uhr in hannover) [01;33mMF)[00m
				[01;31m(LKM[00m
					(VXINF nehmen)
					(MF da ein taxi)[01;31m)[00m
				(KON und)
				[01;36m(ADVX[00m
					(KON und)[01;36m)[00m
				(KON und)
				(LKMVC kommen rechtzeitig an)[01;31m)[00m[01;31m)[00m
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK wurden)
			(MF
				(NX wir)
				[01;31m(PX[00m
					(PX am achtundzwanzigsten)
					(ADVX abends)[01;31m)[00m
				(ADVX einfach)
				(ADVX wieder))
			(VC zuruckfahren))
		[01;31m(SIMPX[00m
			(VF da)
			(LK wurde)
			(MF ich vielleicht)
			(VC sagen)
			(NF wir nehmen das flugzeug)[01;31m)[00m
		(SIMPX
			[01;36m(SIMPX[00m
				(SIMPX da gibt es einen flug)
				(NX siebzehn uhr zwanzig)[01;36m)[00m
			(ADVX sogar)
			(ADJX stundlich bis einundzwanzig uhr zwanzig))
		[01;31m(SIMPX[00m
			(VF das)
			(LK heist)
			(NF
				(SIMPX
					(VF wir)
					[01;31m(FKOORD[00m
						(LKMVC
							(LK konnen)
							[01;31m(MF[00m
								(ADVX auch)
								(ADVX noch)
								(PX um zwanzig nach acht)
								(SIMPX konnen wir in hannover abfliegen)[01;31m)[00m)
						(KON und)
						(LKM sind in siebzig minuten in munchen)[01;31m)[00m))[01;31m)[00m))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['LKMVC', 'APPR', 'LKM', 'SIMPX', 'LKM', 'KON', 'ADVX', 'KON', 'LKMVC'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON',), 'right siblings': [(KON und), (LKMVC (LK (VXFIN (VVFIN kommen))) (MF (ADJX (ADJD rechtzeitig))) (VC (PTKVZ an)))], 'left siblings': [(LKMVC (LK (VXFIN (VVFIN fahren))) (MF (NX (PPER wir))) (VC (PTKVZ los))), (APPR um), (LKM (LK (VXFIN (VVFIN nehmen))) (MF (NX (ART den) (NE ice)) (PX (APPR um) (NX (ADJX (CARD zehn)) (NN uhr))))), (SIMPX (LK (VXFIN (VAFIN sind))) (MF (PX (APPR um) (NX (ADJX (CARD funfzehn)) (NN uhr))) (PX (APPR in) (NX (NE hannover))))), (LKM (VXINF (VC (VVFIN nehmen))) (MF (ADVX (ADV da)) (NX (ART ein) (NN taxi)))), (KON und)], 'auto preterminal span': (25, 26), 'span': (25, 26), 'parent': 'FKOORD', 'label': 'ADVX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM okay)
		[01;31m(SIMPX[00m
			[01;31m(LV[00m
				(NX
					(ADJX siebenundzwanzigster)
					(NN januar))[01;31m)[00m
			[01;33m(SIMPX[00m (VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK fahren)
					(MF wir)
					(VC los)[01;31m)[00m [01;33mSIMPX)[00m
				(APPR um)
				[01;31m(LKM[00m
					(LK nehmen)
					[01;33m(MF[00m (MF den ice um zehn uhr)[01;31m)[00m
				(SIMPX sind um funfzehn uhr in hannover) [01;33mMF)[00m
				[01;31m(LKM[00m
					(VXINF nehmen)
					(MF da ein taxi)[01;31m)[00m
				(KON und)
				(ADVX und)
				(KON und)
				(LKMVC kommen rechtzeitig an)[01;31m)[00m[01;31m)[00m
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK wurden)
			(MF
				(NX wir)
				[01;31m(PX[00m
					(PX am achtundzwanzigsten)
					(ADVX abends)[01;31m)[00m
				(ADVX einfach)
				(ADVX wieder))
			(VC zuruckfahren))
		[01;31m(SIMPX[00m
			(VF da)
			(LK wurde)
			(MF ich vielleicht)
			(VC sagen)
			(NF wir nehmen das flugzeug)[01;31m)[00m
		(SIMPX
			[01;36m(SIMPX[00m
				(SIMPX da gibt es einen flug)
				(NX siebzehn uhr zwanzig)[01;36m)[00m
			(ADVX sogar)
			(ADJX stundlich bis einundzwanzig uhr zwanzig))
		[01;31m(SIMPX[00m
			(VF das)
			(LK heist)
			(NF
				(SIMPX
					(VF wir)
					[01;31m(FKOORD[00m
						(LKMVC
							(LK konnen)
							[01;31m(MF[00m
								(ADVX auch)
								(ADVX noch)
								(PX um zwanzig nach acht)
								(SIMPX konnen wir in hannover abfliegen)[01;31m)[00m)
						(KON und)
						(LKM sind in siebzig minuten in munchen)[01;31m)[00m))[01;31m)[00m))
Step:UNSET add
{'subtrees': ['SIMPX', 'NX'], 'family': ['SIMPX', 'ADVX', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'ART', 'NN', 'CARD', 'NN', 'CARD'), 'right siblings': [(ADVX (ADV sogar)), (ADJX (ADJX (ADJD stundlich)) (PX (APPR bis) (NX (NX (ADJX (CARD einundzwanzig)) (NN uhr)) (ADJX (CARD zwanzig)))))], 'left siblings': [], 'auto preterminal span': (49, 57), 'span': (49, 57), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM okay)
		[01;31m(SIMPX[00m
			[01;31m(LV[00m
				(NX
					(ADJX siebenundzwanzigster)
					(NN januar))[01;31m)[00m
			[01;33m(SIMPX[00m (VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK fahren)
					(MF wir)
					(VC los)[01;31m)[00m [01;33mSIMPX)[00m
				(APPR um)
				[01;31m(LKM[00m
					(LK nehmen)
					[01;33m(MF[00m (MF den ice um zehn uhr)[01;31m)[00m
				(SIMPX sind um funfzehn uhr in hannover) [01;33mMF)[00m
				[01;31m(LKM[00m
					(VXINF nehmen)
					(MF da ein taxi)[01;31m)[00m
				(KON und)
				(ADVX und)
				(KON und)
				(LKMVC kommen rechtzeitig an)[01;31m)[00m[01;31m)[00m
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK wurden)
			(MF
				(NX wir)
				[01;31m(PX[00m
					(PX am achtundzwanzigsten)
					(ADVX abends)[01;31m)[00m
				(ADVX einfach)
				(ADVX wieder))
			(VC zuruckfahren))
		[01;31m(SIMPX[00m
			(VF da)
			(LK wurde)
			(MF ich vielleicht)
			(VC sagen)
			(NF wir nehmen das flugzeug)[01;31m)[00m
		(SIMPX da gibt es einen flug siebzehn uhr zwanzig sogar stundlich bis einundzwanzig uhr zwanzig)
		[01;31m(SIMPX[00m
			(VF das)
			(LK heist)
			(NF
				(SIMPX
					(VF wir)
					[01;31m(FKOORD[00m
						(LKMVC
							(LK konnen)
							[01;31m(MF[00m
								(ADVX auch)
								(ADVX noch)
								(PX um zwanzig nach acht)
								(SIMPX konnen wir in hannover abfliegen)[01;31m)[00m)
						(KON und)
						(LKM sind in siebzig minuten in munchen)[01;31m)[00m))[01;31m)[00m))
Step:Unary
{'subtrees': ['NX'], 'family': ['LV', 'VF', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJA', 'NN', 'ADV', 'VVFIN', 'PPER', 'PTKVZ', 'APPR', 'VVFIN', 'ART', 'NE', 'APPR', 'CARD', 'NN', 'VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE', 'VVFIN', 'ADV', 'ART', 'NN', 'KON', 'KON', 'KON', 'VVFIN', 'ADJD', 'PTKVZ'), 'right siblings': ['VF', 'FKOORD'], 'parent': 'SIMPX', 'auto preterminal span': (1, 30), 'span': (1, 3), 'left siblings': [], 'label': 'LV', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		[01;31m(SIMPX[00m
			(NX siebenundzwanzigster januar)
			[01;33m(SIMPX[00m (VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK fahren)
					(MF wir)
					(VC los)[01;31m)[00m [01;33mSIMPX)[00m
				(APPR um)
				[01;31m(LKM[00m
					(LK nehmen)
					[01;33m(MF[00m (MF den ice um zehn uhr)[01;31m)[00m
				(SIMPX sind um funfzehn uhr in hannover) [01;33mMF)[00m
				[01;31m(LKM[00m
					(VXINF nehmen)
					(MF da ein taxi)[01;31m)[00m
				(KON und)
				(ADVX und)
				(KON und)
				(LKMVC kommen rechtzeitig an)[01;31m)[00m[01;31m)[00m
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK wurden)
			(MF
				(NX wir)
				[01;31m(PX[00m
					(PX am achtundzwanzigsten)
					(ADVX abends)[01;31m)[00m
				(ADVX einfach)
				(ADVX wieder))
			(VC zuruckfahren))
		[01;31m(SIMPX[00m
			(VF da)
			(LK wurde)
			(MF ich vielleicht)
			(VC sagen)
			(NF wir nehmen das flugzeug)[01;31m)[00m
		(SIMPX da gibt es einen flug siebzehn uhr zwanzig sogar stundlich bis einundzwanzig uhr zwanzig)
		[01;31m(SIMPX[00m
			(VF das)
			(LK heist)
			(NF
				(SIMPX
					(VF wir)
					[01;31m(FKOORD[00m
						(LKMVC
							(LK konnen)
							[01;31m(MF[00m
								(ADVX auch)
								(ADVX noch)
								(PX um zwanzig nach acht)
								(SIMPX konnen wir in hannover abfliegen)[01;31m)[00m)
						(KON und)
						(LKM sind in siebzig minuten in munchen)[01;31m)[00m))[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['NX', 'VF', 'FKOORD'], 'family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADJA', 'NN', 'ADV', 'VVFIN', 'PPER', 'PTKVZ', 'APPR', 'VVFIN', 'ART', 'NE', 'APPR', 'CARD', 'NN', 'VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE', 'VVFIN', 'ADV', 'ART', 'NN', 'KON', 'KON', 'KON', 'VVFIN', 'ADJD', 'PTKVZ', 'KON', 'ADV', 'VAFIN', 'PPER', 'APPRART', 'NN', 'ADV', 'ADV', 'ADV', 'VVINF', 'ADV', 'VAFIN', 'PPER', 'ADV', 'VVINF', 'PPER', 'VVFIN', 'ART', 'NN', 'ADV', 'VVFIN', 'PPER', 'ART', 'NN', 'CARD', 'NN', 'CARD', 'ADV', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'PDS', 'VVFIN', 'PPER', 'VMFIN', 'ADV', 'ADV', 'APPR', 'CARD', 'APPR', 'CARD', 'VMFIN', 'PPER', 'APPR', 'NE', 'VVINF', 'KON', 'VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE'), 'right siblings': ['SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 85), 'span': (1, 30), 'left siblings': ['DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(NX siebenundzwanzigster januar)
		[01;33m(SIMPX[00m (VF dann)
		[01;31m(FKOORD[00m
			[01;31m(LKMVC[00m
				(LK fahren)
				(MF wir)
				(VC los)[01;31m)[00m [01;33mSIMPX)[00m
			(APPR um)
			[01;31m(LKM[00m
				(LK nehmen)
				[01;33m(MF[00m (MF den ice um zehn uhr)[01;31m)[00m
			(SIMPX sind um funfzehn uhr in hannover) [01;33mMF)[00m
			[01;31m(LKM[00m
				(VXINF nehmen)
				(MF da ein taxi)[01;31m)[00m
			(KON und)
			(ADVX und)
			(KON und)
			(LKMVC kommen rechtzeitig an)[01;31m)[00m
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK wurden)
			(MF
				(NX wir)
				[01;31m(PX[00m
					(PX am achtundzwanzigsten)
					(ADVX abends)[01;31m)[00m
				(ADVX einfach)
				(ADVX wieder))
			(VC zuruckfahren))
		[01;31m(SIMPX[00m
			(VF da)
			(LK wurde)
			(MF ich vielleicht)
			(VC sagen)
			(NF wir nehmen das flugzeug)[01;31m)[00m
		(SIMPX da gibt es einen flug siebzehn uhr zwanzig sogar stundlich bis einundzwanzig uhr zwanzig)
		[01;31m(SIMPX[00m
			(VF das)
			(LK heist)
			(NF
				(SIMPX
					(VF wir)
					[01;31m(FKOORD[00m
						(LKMVC
							(LK konnen)
							[01;31m(MF[00m
								(ADVX auch)
								(ADVX noch)
								(PX um zwanzig nach acht)
								(SIMPX konnen wir in hannover abfliegen)[01;31m)[00m)
						(KON und)
						(LKM sind in siebzig minuten in munchen)[01;31m)[00m))[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['LK', 'MF', 'VC'], 'family': ['LKMVC', 'APPR', 'LKM', 'SIMPX', 'LKM', 'KON', 'ADVX', 'KON', 'LKMVC'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'PTKVZ', 'APPR', 'VVFIN', 'ART', 'NE', 'APPR', 'CARD', 'NN', 'VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE', 'VVFIN', 'ADV', 'ART', 'NN', 'KON', 'KON', 'KON', 'VVFIN', 'ADJD', 'PTKVZ'), 'right siblings': ['APPR', 'LKM', 'SIMPX', 'LKM', 'KON', 'ADVX', 'KON', 'LKMVC'], 'parent': 'FKOORD', 'auto preterminal span': (4, 30), 'span': (4, 7), 'left siblings': [], 'label': 'LKMVC', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(NX siebenundzwanzigster januar)
		[01;33m(SIMPX[00m (VF dann)
		[01;31m(FKOORD[00m
			(LK fahren)
			(MF wir)
			(VC los) [01;33mSIMPX)[00m
			(APPR um)
			[01;31m(LKM[00m
				(LK nehmen)
				[01;33m(MF[00m (MF den ice um zehn uhr)[01;31m)[00m
			(SIMPX sind um funfzehn uhr in hannover) [01;33mMF)[00m
			[01;31m(LKM[00m
				(VXINF nehmen)
				(MF da ein taxi)[01;31m)[00m
			(KON und)
			(ADVX und)
			(KON und)
			(LKMVC kommen rechtzeitig an)[01;31m)[00m
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK wurden)
			(MF
				(NX wir)
				[01;31m(PX[00m
					(PX am achtundzwanzigsten)
					(ADVX abends)[01;31m)[00m
				(ADVX einfach)
				(ADVX wieder))
			(VC zuruckfahren))
		[01;31m(SIMPX[00m
			(VF da)
			(LK wurde)
			(MF ich vielleicht)
			(VC sagen)
			(NF wir nehmen das flugzeug)[01;31m)[00m
		(SIMPX da gibt es einen flug siebzehn uhr zwanzig sogar stundlich bis einundzwanzig uhr zwanzig)
		[01;31m(SIMPX[00m
			(VF das)
			(LK heist)
			(NF
				(SIMPX
					(VF wir)
					[01;31m(FKOORD[00m
						(LKMVC
							(LK konnen)
							[01;31m(MF[00m
								(ADVX auch)
								(ADVX noch)
								(PX um zwanzig nach acht)
								(SIMPX konnen wir in hannover abfliegen)[01;31m)[00m)
						(KON und)
						(LKM sind in siebzig minuten in munchen)[01;31m)[00m))[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['LK', 'MF', 'VC', 'APPR', 'LKM', 'SIMPX', 'LKM', 'KON', 'ADVX', 'KON', 'LKMVC'], 'family': ['DM', 'NX', 'VF', 'FKOORD', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADJA', 'NN', 'ADV', 'VVFIN', 'PPER', 'PTKVZ', 'APPR', 'VVFIN', 'ART', 'NE', 'APPR', 'CARD', 'NN', 'VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE', 'VVFIN', 'ADV', 'ART', 'NN', 'KON', 'KON', 'KON', 'VVFIN', 'ADJD', 'PTKVZ', 'KON', 'ADV', 'VAFIN', 'PPER', 'APPRART', 'NN', 'ADV', 'ADV', 'ADV', 'VVINF', 'ADV', 'VAFIN', 'PPER', 'ADV', 'VVINF', 'PPER', 'VVFIN', 'ART', 'NN', 'ADV', 'VVFIN', 'PPER', 'ART', 'NN', 'CARD', 'NN', 'CARD', 'ADV', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'PDS', 'VVFIN', 'PPER', 'VMFIN', 'ADV', 'ADV', 'APPR', 'CARD', 'APPR', 'CARD', 'VMFIN', 'PPER', 'APPR', 'NE', 'VVINF', 'KON', 'VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE'), 'right siblings': ['SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 85), 'span': (4, 30), 'left siblings': ['DM', 'NX', 'VF'], 'label': 'FKOORD', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(NX siebenundzwanzigster januar)
		[01;36m(SIMPX[00m
			(VF dann)
			(LK fahren)
			(MF wir)
			(VC los)[01;36m)[00m
		(APPR um)
		[01;31m(LKM[00m
			(LK nehmen)
			[01;33m(MF[00m (MF den ice um zehn uhr)[01;31m)[00m
		(SIMPX sind um funfzehn uhr in hannover) [01;33mMF)[00m
		[01;31m(LKM[00m
			(VXINF nehmen)
			(MF da ein taxi)[01;31m)[00m
		(KON und)
		(ADVX und)
		(KON und)
		(LKMVC kommen rechtzeitig an)
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK wurden)
			(MF
				(NX wir)
				[01;31m(PX[00m
					(PX am achtundzwanzigsten)
					(ADVX abends)[01;31m)[00m
				(ADVX einfach)
				(ADVX wieder))
			(VC zuruckfahren))
		[01;31m(SIMPX[00m
			(VF da)
			(LK wurde)
			(MF ich vielleicht)
			(VC sagen)
			(NF wir nehmen das flugzeug)[01;31m)[00m
		(SIMPX da gibt es einen flug siebzehn uhr zwanzig sogar stundlich bis einundzwanzig uhr zwanzig)
		[01;31m(SIMPX[00m
			(VF das)
			(LK heist)
			(NF
				(SIMPX
					(VF wir)
					[01;31m(FKOORD[00m
						(LKMVC
							(LK konnen)
							[01;31m(MF[00m
								(ADVX auch)
								(ADVX noch)
								(PX um zwanzig nach acht)
								(SIMPX konnen wir in hannover abfliegen)[01;31m)[00m)
						(KON und)
						(LKM sind in siebzig minuten in munchen)[01;31m)[00m))[01;31m)[00m))
Step:UNSET add
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['DM', 'NX', 'SIMPX', 'APPR', 'LKM', 'SIMPX', 'LKM', 'KON', 'ADVX', 'KON', 'LKMVC', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'PTKVZ'), 'right siblings': [(APPR um), (LKM (LK (VXFIN (VVFIN nehmen))) (MF (NX (ART den) (NE ice)) (PX (APPR um) (NX (ADJX (CARD zehn)) (NN uhr))))), (SIMPX (LK (VXFIN (VAFIN sind))) (MF (PX (APPR um) (NX (ADJX (CARD funfzehn)) (NN uhr))) (PX (APPR in) (NX (NE hannover))))), (LKM (VXINF (VC (VVFIN nehmen))) (MF (ADVX (ADV da)) (NX (ART ein) (NN taxi)))), (KON und), (ADVX (KON und)), (KON und), (LKMVC (LK (VXFIN (VVFIN kommen))) (MF (ADJX (ADJD rechtzeitig))) (VC (PTKVZ an))), (SIMPX (KOORD (KON und)) (VF (ADVX (ADV dann))) (LK (VXFIN (VAFIN wurden))) (MF (NX (PPER wir)) (PX (PX (APPRART am) (NX (NN achtundzwanzigsten))) (ADVX (ADV abends))) (ADVX (ADV einfach)) (ADVX (ADV wieder))) (VC (VXINF (VVINF zuruckfahren)))), (SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VAFIN wurde))) (MF (NX (PPER ich)) (ADVX (ADV vielleicht))) (VC (VXINF (VVINF sagen))) (NF (SIMPX (VF (NX (PPER wir))) (LK (VXFIN (VVFIN nehmen))) (MF (NX (ART das) (NN flugzeug)))))), (SIMPX (SIMPX (SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VVFIN gibt))) (MF (NX (PPER es)) (NX (ART einen) (NN flug)))) (NX (NX (ADJX (CARD siebzehn)) (NN uhr)) (ADJX (CARD zwanzig)))) (ADVX (ADV sogar)) (ADJX (ADJX (ADJD stundlich)) (PX (APPR bis) (NX (NX (ADJX (CARD einundzwanzig)) (NN uhr)) (ADJX (CARD zwanzig)))))), (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VVFIN heist))) (NF (SIMPX (VF (NX (PPER wir))) (FKOORD (LKMVC (LK (VXFIN (VMFIN konnen))) (MF (ADVX (ADV auch)) (ADVX (ADV noch)) (PX (APPR um) (NX (NX (CARD zwanzig)) (PX (APPR nach) (NX (CARD acht))))) (SIMPX (LK (VXFIN (VMFIN konnen))) (MF (NX (PPER wir)) (PX (APPR in) (NX (NE hannover)))) (VC (VXINF (VVINF abfliegen)))))) (KON und) (LKM (LK (VXFIN (VAFIN sind))) (MF (PX (APPR in) (NX (ADJX (CARD siebzig)) (NN minuten))) (PX (APPR in) (NX (NE munchen)))))))))], 'left siblings': [(DM (ITJ okay)), (NX (ADJX (ADJA siebenundzwanzigster)) (NN januar))], 'auto preterminal span': (3, 7), 'span': (3, 7), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM okay)
		(NX siebenundzwanzigster januar)
		(SIMPX dann fahren wir los)
		(APPR um)
		[01;31m(LKM[00m
			(LK nehmen)
			[01;33m(MF[00m (MF den ice um zehn uhr)[01;31m)[00m
		(SIMPX sind um funfzehn uhr in hannover) [01;33mMF)[00m
		[01;31m(LKM[00m
			(VXINF nehmen)
			(MF da ein taxi)[01;31m)[00m
		(KON und)
		(ADVX und)
		(KON und)
		(LKMVC kommen rechtzeitig an)
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK wurden)
			(MF
				(NX wir)
				[01;31m(PX[00m
					(PX am achtundzwanzigsten)
					(ADVX abends)[01;31m)[00m
				(ADVX einfach)
				(ADVX wieder))
			(VC zuruckfahren))
		[01;31m(SIMPX[00m
			(VF da)
			(LK wurde)
			(MF ich vielleicht)
			(VC sagen)
			(NF wir nehmen das flugzeug)[01;31m)[00m
		(SIMPX da gibt es einen flug siebzehn uhr zwanzig sogar stundlich bis einundzwanzig uhr zwanzig)
		[01;31m(SIMPX[00m
			(VF das)
			(LK heist)
			(NF
				(SIMPX
					(VF wir)
					[01;31m(FKOORD[00m
						(LKMVC
							(LK konnen)
							[01;31m(MF[00m
								(ADVX auch)
								(ADVX noch)
								(PX um zwanzig nach acht)
								(SIMPX konnen wir in hannover abfliegen)[01;31m)[00m)
						(KON und)
						(LKM sind in siebzig minuten in munchen)[01;31m)[00m))[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['DM', 'NX', 'SIMPX', 'APPR', 'LKM', 'SIMPX', 'LKM', 'KON', 'ADVX', 'KON', 'LKMVC', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADJA', 'NN', 'ADV', 'VVFIN', 'PPER', 'PTKVZ', 'APPR', 'VVFIN', 'ART', 'NE', 'APPR', 'CARD', 'NN', 'VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE', 'VVFIN', 'ADV', 'ART', 'NN', 'KON', 'KON', 'KON', 'VVFIN', 'ADJD', 'PTKVZ', 'KON', 'ADV', 'VAFIN', 'PPER', 'APPRART', 'NN', 'ADV', 'ADV', 'ADV', 'VVINF', 'ADV', 'VAFIN', 'PPER', 'ADV', 'VVINF', 'PPER', 'VVFIN', 'ART', 'NN', 'ADV', 'VVFIN', 'PPER', 'ART', 'NN', 'CARD', 'NN', 'CARD', 'ADV', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'PDS', 'VVFIN', 'PPER', 'VMFIN', 'ADV', 'ADV', 'APPR', 'CARD', 'APPR', 'CARD', 'VMFIN', 'PPER', 'APPR', 'NE', 'VVINF', 'KON', 'VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE'), 'right siblings': ['SIMPX', 'LKM', 'KON', 'ADVX', 'KON', 'LKMVC', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 85), 'span': (8, 14), 'left siblings': ['DM', 'NX', 'SIMPX', 'APPR'], 'label': 'LKM', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(NX siebenundzwanzigster januar)
		(SIMPX dann fahren wir los)
		(APPR um)
		(LK nehmen)
		[01;36m(MF[00m
			(MF den ice um zehn uhr)
			(SIMPX sind um funfzehn uhr in hannover)[01;36m)[00m
		[01;31m(LKM[00m
			(VXINF nehmen)
			(MF da ein taxi)[01;31m)[00m
		(KON und)
		(ADVX und)
		(KON und)
		(LKMVC kommen rechtzeitig an)
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK wurden)
			(MF
				(NX wir)
				[01;31m(PX[00m
					(PX am achtundzwanzigsten)
					(ADVX abends)[01;31m)[00m
				(ADVX einfach)
				(ADVX wieder))
			(VC zuruckfahren))
		[01;31m(SIMPX[00m
			(VF da)
			(LK wurde)
			(MF ich vielleicht)
			(VC sagen)
			(NF wir nehmen das flugzeug)[01;31m)[00m
		(SIMPX da gibt es einen flug siebzehn uhr zwanzig sogar stundlich bis einundzwanzig uhr zwanzig)
		[01;31m(SIMPX[00m
			(VF das)
			(LK heist)
			(NF
				(SIMPX
					(VF wir)
					[01;31m(FKOORD[00m
						(LKMVC
							(LK konnen)
							[01;31m(MF[00m
								(ADVX auch)
								(ADVX noch)
								(PX um zwanzig nach acht)
								(SIMPX konnen wir in hannover abfliegen)[01;31m)[00m)
						(KON und)
						(LKM sind in siebzig minuten in munchen)[01;31m)[00m))[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['MF', 'SIMPX'], 'family': ['DM', 'NX', 'SIMPX', 'APPR', 'LK', 'MF', 'LKM', 'KON', 'ADVX', 'KON', 'LKMVC', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NE', 'APPR', 'CARD', 'NN', 'VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE'), 'right siblings': [(LKM (VXINF (VC (VVFIN nehmen))) (MF (ADVX (ADV da)) (NX (ART ein) (NN taxi)))), (KON und), (ADVX (KON und)), (KON und), (LKMVC (LK (VXFIN (VVFIN kommen))) (MF (ADJX (ADJD rechtzeitig))) (VC (PTKVZ an))), (SIMPX (KOORD (KON und)) (VF (ADVX (ADV dann))) (LK (VXFIN (VAFIN wurden))) (MF (NX (PPER wir)) (PX (PX (APPRART am) (NX (NN achtundzwanzigsten))) (ADVX (ADV abends))) (ADVX (ADV einfach)) (ADVX (ADV wieder))) (VC (VXINF (VVINF zuruckfahren)))), (SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VAFIN wurde))) (MF (NX (PPER ich)) (ADVX (ADV vielleicht))) (VC (VXINF (VVINF sagen))) (NF (SIMPX (VF (NX (PPER wir))) (LK (VXFIN (VVFIN nehmen))) (MF (NX (ART das) (NN flugzeug)))))), (SIMPX (SIMPX (SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VVFIN gibt))) (MF (NX (PPER es)) (NX (ART einen) (NN flug)))) (NX (NX (ADJX (CARD siebzehn)) (NN uhr)) (ADJX (CARD zwanzig)))) (ADVX (ADV sogar)) (ADJX (ADJX (ADJD stundlich)) (PX (APPR bis) (NX (NX (ADJX (CARD einundzwanzig)) (NN uhr)) (ADJX (CARD zwanzig)))))), (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VVFIN heist))) (NF (SIMPX (VF (NX (PPER wir))) (FKOORD (LKMVC (LK (VXFIN (VMFIN konnen))) (MF (ADVX (ADV auch)) (ADVX (ADV noch)) (PX (APPR um) (NX (NX (CARD zwanzig)) (PX (APPR nach) (NX (CARD acht))))) (SIMPX (LK (VXFIN (VMFIN konnen))) (MF (NX (PPER wir)) (PX (APPR in) (NX (NE hannover)))) (VC (VXINF (VVINF abfliegen)))))) (KON und) (LKM (LK (VXFIN (VAFIN sind))) (MF (PX (APPR in) (NX (ADJX (CARD siebzig)) (NN minuten))) (PX (APPR in) (NX (NE munchen)))))))))], 'left siblings': [(DM (ITJ okay)), (NX (ADJX (ADJA siebenundzwanzigster)) (NN januar)), (SIMPX (VF (ADVX (ADV dann))) (LK (VXFIN (VVFIN fahren))) (MF (NX (PPER wir))) (VC (PTKVZ los))), (APPR um), (LK (VXFIN (VVFIN nehmen)))], 'auto preterminal span': (9, 20), 'span': (9, 20), 'parent': 'TURN', 'label': 'MF', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM okay)
		(NX siebenundzwanzigster januar)
		(SIMPX dann fahren wir los)
		(APPR um)
		(LK nehmen)
		(MF den ice um zehn uhr sind um funfzehn uhr in hannover)
		[01;31m(LKM[00m
			(VXINF nehmen)
			(MF da ein taxi)[01;31m)[00m
		(KON und)
		(ADVX und)
		(KON und)
		(LKMVC kommen rechtzeitig an)
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK wurden)
			(MF
				(NX wir)
				[01;31m(PX[00m
					(PX am achtundzwanzigsten)
					(ADVX abends)[01;31m)[00m
				(ADVX einfach)
				(ADVX wieder))
			(VC zuruckfahren))
		[01;31m(SIMPX[00m
			(VF da)
			(LK wurde)
			(MF ich vielleicht)
			(VC sagen)
			(NF wir nehmen das flugzeug)[01;31m)[00m
		(SIMPX da gibt es einen flug siebzehn uhr zwanzig sogar stundlich bis einundzwanzig uhr zwanzig)
		[01;31m(SIMPX[00m
			(VF das)
			(LK heist)
			(NF
				(SIMPX
					(VF wir)
					[01;31m(FKOORD[00m
						(LKMVC
							(LK konnen)
							[01;31m(MF[00m
								(ADVX auch)
								(ADVX noch)
								(PX um zwanzig nach acht)
								(SIMPX konnen wir in hannover abfliegen)[01;31m)[00m)
						(KON und)
						(LKM sind in siebzig minuten in munchen)[01;31m)[00m))[01;31m)[00m))
Step:Co-ordination
{'subtrees': ['VXINF', 'MF'], 'family': ['DM', 'NX', 'SIMPX', 'APPR', 'LK', 'MF', 'LKM', 'KON', 'ADVX', 'KON', 'LKMVC', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADJA', 'NN', 'ADV', 'VVFIN', 'PPER', 'PTKVZ', 'APPR', 'VVFIN', 'ART', 'NE', 'APPR', 'CARD', 'NN', 'VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE', 'VVFIN', 'ADV', 'ART', 'NN', 'KON', 'KON', 'KON', 'VVFIN', 'ADJD', 'PTKVZ', 'KON', 'ADV', 'VAFIN', 'PPER', 'APPRART', 'NN', 'ADV', 'ADV', 'ADV', 'VVINF', 'ADV', 'VAFIN', 'PPER', 'ADV', 'VVINF', 'PPER', 'VVFIN', 'ART', 'NN', 'ADV', 'VVFIN', 'PPER', 'ART', 'NN', 'CARD', 'NN', 'CARD', 'ADV', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'PDS', 'VVFIN', 'PPER', 'VMFIN', 'ADV', 'ADV', 'APPR', 'CARD', 'APPR', 'CARD', 'VMFIN', 'PPER', 'APPR', 'NE', 'VVINF', 'KON', 'VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE'), 'right siblings': ['KON', 'ADVX', 'KON', 'LKMVC', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 85), 'span': (20, 24), 'left siblings': ['DM', 'NX', 'SIMPX', 'APPR', 'LK', 'MF'], 'label': 'LKM', 'classified_type': 'Co-ordination', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(NX siebenundzwanzigster januar)
		(SIMPX dann fahren wir los)
		(APPR um)
		(LK nehmen)
		(MF den ice um zehn uhr sind um funfzehn uhr in hannover)
		(VXINF nehmen)
		(MF da ein taxi)
		(KON und)
		(ADVX und)
		(KON und)
		(LKMVC kommen rechtzeitig an)
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK wurden)
			(MF
				(NX wir)
				[01;31m(PX[00m
					(PX am achtundzwanzigsten)
					(ADVX abends)[01;31m)[00m
				(ADVX einfach)
				(ADVX wieder))
			(VC zuruckfahren))
		[01;31m(SIMPX[00m
			(VF da)
			(LK wurde)
			(MF ich vielleicht)
			(VC sagen)
			(NF wir nehmen das flugzeug)[01;31m)[00m
		(SIMPX da gibt es einen flug siebzehn uhr zwanzig sogar stundlich bis einundzwanzig uhr zwanzig)
		[01;31m(SIMPX[00m
			(VF das)
			(LK heist)
			(NF
				(SIMPX
					(VF wir)
					[01;31m(FKOORD[00m
						(LKMVC
							(LK konnen)
							[01;31m(MF[00m
								(ADVX auch)
								(ADVX noch)
								(PX um zwanzig nach acht)
								(SIMPX konnen wir in hannover abfliegen)[01;31m)[00m)
						(KON und)
						(LKM sind in siebzig minuten in munchen)[01;31m)[00m))[01;31m)[00m))
Step:Modifier Attachment
{'subtrees': ['PX', 'ADVX'], 'family': ['NX', 'PX', 'ADVX', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'APPRART', 'NN', 'ADV', 'ADV', 'ADV'), 'right siblings': ['ADVX', 'ADVX'], 'parent': 'MF', 'auto preterminal span': (33, 39), 'span': (34, 37), 'left siblings': ['NX'], 'label': 'PX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(NX siebenundzwanzigster januar)
		(SIMPX dann fahren wir los)
		(APPR um)
		(LK nehmen)
		(MF den ice um zehn uhr sind um funfzehn uhr in hannover)
		(VXINF nehmen)
		(MF da ein taxi)
		(KON und)
		(ADVX und)
		(KON und)
		(LKMVC kommen rechtzeitig an)
		(SIMPX und dann wurden wir am achtundzwanzigsten abends einfach wieder zuruckfahren)
		[01;31m(SIMPX[00m
			(VF da)
			(LK wurde)
			(MF ich vielleicht)
			(VC sagen)
			(NF wir nehmen das flugzeug)[01;31m)[00m
		(SIMPX da gibt es einen flug siebzehn uhr zwanzig sogar stundlich bis einundzwanzig uhr zwanzig)
		[01;31m(SIMPX[00m
			(VF das)
			(LK heist)
			(NF
				(SIMPX
					(VF wir)
					[01;31m(FKOORD[00m
						(LKMVC
							(LK konnen)
							[01;31m(MF[00m
								(ADVX auch)
								(ADVX noch)
								(PX um zwanzig nach acht)
								(SIMPX konnen wir in hannover abfliegen)[01;31m)[00m)
						(KON und)
						(LKM sind in siebzig minuten in munchen)[01;31m)[00m))[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'VC', 'NF'], 'family': ['DM', 'NX', 'SIMPX', 'APPR', 'LK', 'MF', 'VXINF', 'MF', 'KON', 'ADVX', 'KON', 'LKMVC', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADJA', 'NN', 'ADV', 'VVFIN', 'PPER', 'PTKVZ', 'APPR', 'VVFIN', 'ART', 'NE', 'APPR', 'CARD', 'NN', 'VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE', 'VVFIN', 'ADV', 'ART', 'NN', 'KON', 'KON', 'KON', 'VVFIN', 'ADJD', 'PTKVZ', 'KON', 'ADV', 'VAFIN', 'PPER', 'APPRART', 'NN', 'ADV', 'ADV', 'ADV', 'VVINF', 'ADV', 'VAFIN', 'PPER', 'ADV', 'VVINF', 'PPER', 'VVFIN', 'ART', 'NN', 'ADV', 'VVFIN', 'PPER', 'ART', 'NN', 'CARD', 'NN', 'CARD', 'ADV', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'PDS', 'VVFIN', 'PPER', 'VMFIN', 'ADV', 'ADV', 'APPR', 'CARD', 'APPR', 'CARD', 'VMFIN', 'PPER', 'APPR', 'NE', 'VVINF', 'KON', 'VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE'), 'right siblings': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 85), 'span': (40, 49), 'left siblings': ['DM', 'NX', 'SIMPX', 'APPR', 'LK', 'MF', 'VXINF', 'MF', 'KON', 'ADVX', 'KON', 'LKMVC', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(NX siebenundzwanzigster januar)
		(SIMPX dann fahren wir los)
		(APPR um)
		(LK nehmen)
		(MF den ice um zehn uhr sind um funfzehn uhr in hannover)
		(VXINF nehmen)
		(MF da ein taxi)
		(KON und)
		(ADVX und)
		(KON und)
		(LKMVC kommen rechtzeitig an)
		(SIMPX und dann wurden wir am achtundzwanzigsten abends einfach wieder zuruckfahren)
		(VF da)
		(LK wurde)
		(MF ich vielleicht)
		(VC sagen)
		(NF wir nehmen das flugzeug)
		(SIMPX da gibt es einen flug siebzehn uhr zwanzig sogar stundlich bis einundzwanzig uhr zwanzig)
		[01;31m(SIMPX[00m
			(VF das)
			(LK heist)
			(NF
				(SIMPX
					(VF wir)
					[01;31m(FKOORD[00m
						(LKMVC
							(LK konnen)
							[01;31m(MF[00m
								(ADVX auch)
								(ADVX noch)
								(PX um zwanzig nach acht)
								(SIMPX konnen wir in hannover abfliegen)[01;31m)[00m)
						(KON und)
						(LKM sind in siebzig minuten in munchen)[01;31m)[00m))[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'NF'], 'family': ['DM', 'NX', 'SIMPX', 'APPR', 'LK', 'MF', 'VXINF', 'MF', 'KON', 'ADVX', 'KON', 'LKMVC', 'SIMPX', 'VF', 'LK', 'MF', 'VC', 'NF', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADJA', 'NN', 'ADV', 'VVFIN', 'PPER', 'PTKVZ', 'APPR', 'VVFIN', 'ART', 'NE', 'APPR', 'CARD', 'NN', 'VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE', 'VVFIN', 'ADV', 'ART', 'NN', 'KON', 'KON', 'KON', 'VVFIN', 'ADJD', 'PTKVZ', 'KON', 'ADV', 'VAFIN', 'PPER', 'APPRART', 'NN', 'ADV', 'ADV', 'ADV', 'VVINF', 'ADV', 'VAFIN', 'PPER', 'ADV', 'VVINF', 'PPER', 'VVFIN', 'ART', 'NN', 'ADV', 'VVFIN', 'PPER', 'ART', 'NN', 'CARD', 'NN', 'CARD', 'ADV', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'PDS', 'VVFIN', 'PPER', 'VMFIN', 'ADV', 'ADV', 'APPR', 'CARD', 'APPR', 'CARD', 'VMFIN', 'PPER', 'APPR', 'NE', 'VVINF', 'KON', 'VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 85), 'span': (63, 85), 'left siblings': ['DM', 'NX', 'SIMPX', 'APPR', 'LK', 'MF', 'VXINF', 'MF', 'KON', 'ADVX', 'KON', 'LKMVC', 'SIMPX', 'VF', 'LK', 'MF', 'VC', 'NF', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(NX siebenundzwanzigster januar)
		(SIMPX dann fahren wir los)
		(APPR um)
		(LK nehmen)
		(MF den ice um zehn uhr sind um funfzehn uhr in hannover)
		(VXINF nehmen)
		(MF da ein taxi)
		(KON und)
		(ADVX und)
		(KON und)
		(LKMVC kommen rechtzeitig an)
		(SIMPX und dann wurden wir am achtundzwanzigsten abends einfach wieder zuruckfahren)
		(VF da)
		(LK wurde)
		(MF ich vielleicht)
		(VC sagen)
		(NF wir nehmen das flugzeug)
		(SIMPX da gibt es einen flug siebzehn uhr zwanzig sogar stundlich bis einundzwanzig uhr zwanzig)
		(VF das)
		(LK heist)
		(NF
			(SIMPX
				(VF wir)
				[01;31m(FKOORD[00m
					(LKMVC
						(LK konnen)
						[01;31m(MF[00m
							(ADVX auch)
							(ADVX noch)
							(PX um zwanzig nach acht)
							(SIMPX konnen wir in hannover abfliegen)[01;31m)[00m)
					(KON und)
					(LKM sind in siebzig minuten in munchen)[01;31m)[00m))))
Step:UNSET remove
{'subtrees': ['LKMVC', 'KON', 'LKM'], 'family': ['VF', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VMFIN', 'ADV', 'ADV', 'APPR', 'CARD', 'APPR', 'CARD', 'VMFIN', 'PPER', 'APPR', 'NE', 'VVINF', 'KON', 'VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (65, 85), 'span': (66, 85), 'left siblings': ['VF'], 'label': 'FKOORD', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(NX siebenundzwanzigster januar)
		(SIMPX dann fahren wir los)
		(APPR um)
		(LK nehmen)
		(MF den ice um zehn uhr sind um funfzehn uhr in hannover)
		(VXINF nehmen)
		(MF da ein taxi)
		(KON und)
		(ADVX und)
		(KON und)
		(LKMVC kommen rechtzeitig an)
		(SIMPX und dann wurden wir am achtundzwanzigsten abends einfach wieder zuruckfahren)
		(VF da)
		(LK wurde)
		(MF ich vielleicht)
		(VC sagen)
		(NF wir nehmen das flugzeug)
		(SIMPX da gibt es einen flug siebzehn uhr zwanzig sogar stundlich bis einundzwanzig uhr zwanzig)
		(VF das)
		(LK heist)
		(NF
			(SIMPX
				(VF wir)
				(LKMVC
					(LK konnen)
					[01;31m(MF[00m
						(ADVX auch)
						(ADVX noch)
						(PX um zwanzig nach acht)
						(SIMPX konnen wir in hannover abfliegen)[01;31m)[00m)
				(KON und)
				(LKM sind in siebzig minuten in munchen)))))
Step:PP Attachment
{'subtrees': ['ADVX', 'ADVX', 'PX', 'SIMPX'], 'family': ['LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('VMFIN', 'ADV', 'ADV', 'APPR', 'CARD', 'APPR', 'CARD', 'VMFIN', 'PPER', 'APPR', 'NE', 'VVINF'), 'right siblings': [], 'parent': 'LKMVC', 'auto preterminal span': (66, 78), 'span': (67, 78), 'left siblings': ['LK'], 'label': 'MF', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP okay siebenundzwanzigster januar dann fahren wir los um nehmen den ice um zehn uhr sind um funfzehn uhr in hannover nehmen da ein taxi und und und kommen rechtzeitig an und dann wurden wir am achtundzwanzigsten abends einfach wieder zuruckfahren da wurde ich vielleicht sagen wir nehmen das flugzeug da gibt es einen flug siebzehn uhr zwanzig sogar stundlich bis einundzwanzig uhr zwanzig das heist wir konnen auch noch um zwanzig nach acht konnen wir in hannover abfliegen und sind in siebzig minuten in munchen)

Sentence 442:
0 Initial errors
0 on fringe, 0 iterations

Sentence 443:
1 Initial errors
0 on fringe, 1 iterations
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM genau)
		(DM also)
		(SIMPX dann haben wir einen termin)
		(SIMPX wir haben einen zug)
		[01;31m(SIMPX[00m
			(VF wir)
			(LK haben)
			(MF einen flug fur die ruckfahrt)[01;31m)[00m
		(SIMPX wir haben ein hotel fur die nacht)
		(SIMPX wir haben ein treffen)
		(SIMPX dann konnen wir uns jetzt noch uberlegen ob wir abends irgendwas machen wollen)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'ADV', 'VAFIN', 'PPER', 'ART', 'NN', 'PPER', 'VAFIN', 'ART', 'NN', 'PPER', 'VAFIN', 'ART', 'NN', 'APPR', 'ART', 'NN', 'PPER', 'VAFIN', 'ART', 'NN', 'APPR', 'ART', 'NN', 'PPER', 'VAFIN', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'VVINF', 'KOUS', 'PPER', 'ADV', 'PIS', 'VVINF', 'VMFIN'), 'right siblings': ['SIMPX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 42), 'span': (11, 18), 'left siblings': ['DM', 'DM', 'SIMPX', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP genau also dann haben wir einen termin wir haben einen zug wir haben einen flug fur die ruckfahrt wir haben ein hotel fur die nacht wir haben ein treffen dann konnen wir uns jetzt noch uberlegen ob wir abends irgendwas machen wollen)

Sentence 444:
0 Initial errors
0 on fringe, 0 iterations

Sentence 445:
0 Initial errors
0 on fringe, 0 iterations

Sentence 446:
0 Initial errors
0 on fringe, 0 iterations

Sentence 447:
3 Initial errors
0 on fringe, 3 iterations
1 Error:Unary
1 Error:Co-ordination
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM okay)
		(SIMPX
			(LK konnen)
			(MF wir um zehn uhr etwa)
			[01;31m(VC[00m
				[01;31m(VXINF[00m
					(VXINF wegfahren)
					[01;31m(VXINF[00m
						(VVINF wegfliegen)[01;31m)[00m[01;31m)[00m[01;31m)[00m)
		(PX je nachdem)))
Step:Unary
{'subtrees': ['VXINF'], 'family': ['LK', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('VMFIN', 'PPER', 'APPR', 'CARD', 'NN', 'ADV', 'VVINF', 'VVINF'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (1, 9), 'span': (7, 9), 'left siblings': ['LK', 'MF'], 'label': 'VC', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(SIMPX
			(LK konnen)
			(MF wir um zehn uhr etwa)
			[01;31m(VXINF[00m
				(VXINF wegfahren)
				[01;31m(VXINF[00m
					(VVINF wegfliegen)[01;31m)[00m[01;31m)[00m)
		(PX je nachdem)))
Step:Co-ordination
{'subtrees': ['VXINF', 'VXINF'], 'family': ['LK', 'MF', 'VXINF'], 'over_word': False, 'over words': False, 'auto preterminals': ('VMFIN', 'PPER', 'APPR', 'CARD', 'NN', 'ADV', 'VVINF', 'VVINF'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (1, 9), 'span': (7, 9), 'left siblings': ['LK', 'MF'], 'label': 'VXINF', 'classified_type': 'Co-ordination', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(SIMPX
			(LK konnen)
			(MF wir um zehn uhr etwa)
			(VXINF wegfahren)
			[01;31m(VXINF[00m
				(VVINF wegfliegen)[01;31m)[00m)
		(PX je nachdem)))
Step:Single Word Phrase
{'subtrees': ['VVINF'], 'family': ['LK', 'MF', 'VXINF', 'VXINF'], 'over_word': True, 'over words': True, 'auto preterminals': ('VMFIN', 'PPER', 'APPR', 'CARD', 'NN', 'ADV', 'VVINF', 'VVINF'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (1, 9), 'span': (8, 9), 'left siblings': ['LK', 'MF', 'VXINF'], 'label': 'VXINF', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP okay konnen wir um zehn uhr etwa wegfahren wegfliegen je nachdem)

Sentence 448:
1 Initial errors
0 on fringe, 1 iterations
1 Error:NP Internal Structure
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM okay)
		(SIMPX konnen wir gern machen)
		(DM also)
		[01;31m(NX[00m
			(NX siebenundzwanzigster)
			(NX achtundzwanzigster)[01;31m)[00m))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['DM', 'SIMPX', 'DM', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'VMFIN', 'PPER', 'ADV', 'VVINF', 'ADV', 'NN', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 8), 'span': (6, 8), 'left siblings': ['DM', 'SIMPX', 'DM'], 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'remove'}
(TOP okay konnen wir gern machen also siebenundzwanzigster achtundzwanzigster)

Sentence 449:
17 Initial errors
0 on fringe, 15 iterations
2 Error:Single Word Phrase
2 Error:NP Attachment
1 Error:Unary
1 Error:UNSET remove
1 Error:PP Attachment
1 Error:PP Attachment
1 Error:PP Attachment
1 Error:NP Internal Structure
1 Error:PP Attachment
1 Error:PP Attachment
1 Error:UNSET add
1 Error:UNSET remove
1 Error:NP Internal Structure
1 Error:Co-ordination
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(NX hotels)
		(DM ja)
		(SIMPX mussen wir mal kucken)
		(SIMPX
			(VF ich)
			(LK habe)
			[01;31m(MF[00m
				(ADVX hier)
				(NX eine liste von meiner sekretarin)[01;31m)[00m)
		[01;33m(NX (SIMPX (NX[00m (NX drei moglichkeiten)
		[01;31m(NX[00m
			[01;31m(NX[00m
				[01;31m(NX[00m
					(NX maritimhotel) [01;33mNX)[00m
					(PX am hauptbahnhof)[01;31m)[00m [01;33mSIMPX)[00m
				[01;31m(NX[00m
					(NX funfzehn minuten) [01;33mNX)[00m
					(PX zum zentrum)[01;31m)[00m[01;31m)[00m
			(DM na ja)
			[01;31m(SIMPX[00m
				(VF garage)
				(LK brauchen)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX wir)
					(ADVX ja)
					(ADVX nicht)[01;31m)[00m[01;31m)[00m
			[01;31m(NX[00m
				(NX ein hotel luisenhof) [01;33mMF)[00m
				(NX funf minuten vom bahnhof)
				(NX bar restaurant garage)[01;31m)[00m
			[01;31m(ADJX[00m
				(NX alles)
				[01;36m(VC[00m [01;36m(VXINF[00m [01;31m(ADJX[00m
					(ADJD uberflussig)[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;31m)[00m
			(KON und)
			[01;31m(NX[00m
				(PX direkt beim hauptbahnhof)
				(ADVX noch)
				(NX ein hotel mit schwimm und dampfbad)[01;31m)[00m[01;31m)[00m
		(SIMPX brauchen wir es)))
Step:Single Word Phrase
{'family': ['NX', 'VXINF'], 'auto preterminal span': (41, 42), 'span': (41, 42), 'subtrees': ['ADJD'], 'parent': 'ADJX', 'over_word': True, 'auto preterminals': ('ADJD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'VXINF')}
(TOP
	(TURN
		(NX hotels)
		(DM ja)
		(SIMPX mussen wir mal kucken)
		(SIMPX
			(VF ich)
			(LK habe)
			[01;31m(MF[00m
				(ADVX hier)
				(NX eine liste von meiner sekretarin)[01;31m)[00m)
		[01;33m(NX (SIMPX (NX[00m (NX drei moglichkeiten)
		[01;31m(NX[00m
			[01;31m(NX[00m
				[01;31m(NX[00m
					(NX maritimhotel) [01;33mNX)[00m
					(PX am hauptbahnhof)[01;31m)[00m [01;33mSIMPX)[00m
				[01;31m(NX[00m
					(NX funfzehn minuten) [01;33mNX)[00m
					(PX zum zentrum)[01;31m)[00m[01;31m)[00m
			(DM na ja)
			[01;31m(SIMPX[00m
				(VF garage)
				(LK brauchen)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX wir)
					(ADVX ja)
					(ADVX nicht)[01;31m)[00m[01;31m)[00m
			[01;31m(NX[00m
				(NX ein hotel luisenhof) [01;33mMF)[00m
				(NX funf minuten vom bahnhof)
				(NX bar restaurant garage)[01;31m)[00m
			[01;31m(ADJX[00m
				(NX alles)
				[01;36m(VC[00m
					(VXINF
						(ADJD uberflussig))[01;36m)[00m[01;31m)[00m
			(KON und)
			[01;31m(NX[00m
				(PX direkt beim hauptbahnhof)
				(ADVX noch)
				(NX ein hotel mit schwimm und dampfbad)[01;31m)[00m[01;31m)[00m
		(SIMPX brauchen wir es)))
Step:NP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'ADVX', 'ADVX', 'NX'], 'mover info': [('NX', (30, 33))], 'old_family': ['NX', 'NX', 'NX'], 'start left siblings': [], 'auto preterminals': ('NE', 'APPRART', 'NN', 'CARD', 'NN', 'APPRART', 'NN', 'ITJ', 'PTKANT', 'NN', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'NN', 'NN', 'NN', 'PIS', 'ADJD', 'KON', 'ADV', 'APPRART', 'NN', 'ADV', 'ART', 'NN', 'APPR', 'TRUNC', 'KON', 'NN'), 'start right siblings': ['NX', 'NX'], 'end left siblings': ['NX', 'ADVX', 'ADVX'], 'auto preterminal span': (16, 53), 'movers': ['NX'], 'old_parent': 'NX', 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(NX hotels)
		(DM ja)
		(SIMPX mussen wir mal kucken)
		(SIMPX
			(VF ich)
			(LK habe)
			[01;31m(MF[00m
				(ADVX hier)
				(NX eine liste von meiner sekretarin)[01;31m)[00m)
		[01;33m(NX (SIMPX (NX[00m (NX drei moglichkeiten)
		[01;31m(NX[00m
			[01;31m(NX[00m
				[01;31m(NX[00m
					(NX maritimhotel) [01;33mNX)[00m
					(PX am hauptbahnhof)[01;31m)[00m [01;33mSIMPX)[00m
				[01;31m(NX[00m
					(NX funfzehn minuten) [01;33mNX)[00m
					(PX zum zentrum)[01;31m)[00m[01;31m)[00m
			(DM na ja)
			[01;31m(SIMPX[00m
				(VF garage)
				(LK brauchen)
				(MF wir ja nicht ein hotel luisenhof)[01;31m)[00m
			[01;31m(NX[00m
				(NX funf minuten vom bahnhof)
				(NX bar restaurant garage)[01;31m)[00m
			[01;31m(ADJX[00m
				(NX alles)
				[01;36m(VC[00m
					(VXINF
						(ADJD uberflussig))[01;36m)[00m[01;31m)[00m
			(KON und)
			[01;31m(NX[00m
				(PX direkt beim hauptbahnhof)
				(ADVX noch)
				(NX ein hotel mit schwimm und dampfbad)[01;31m)[00m[01;31m)[00m
		(SIMPX brauchen wir es)))
Step:Unary
{'subtrees': ['VXINF'], 'family': ['NX', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJD',), 'right siblings': [], 'left siblings': [(NX (PIS alles))], 'auto preterminal span': (41, 42), 'span': (41, 42), 'parent': 'ADJX', 'label': 'VC', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(NX hotels)
		(DM ja)
		(SIMPX mussen wir mal kucken)
		(SIMPX
			(VF ich)
			(LK habe)
			[01;31m(MF[00m
				(ADVX hier)
				(NX eine liste von meiner sekretarin)[01;31m)[00m)
		[01;33m(NX (SIMPX (NX[00m (NX drei moglichkeiten)
		[01;31m(NX[00m
			[01;31m(NX[00m
				[01;31m(NX[00m
					(NX maritimhotel) [01;33mNX)[00m
					(PX am hauptbahnhof)[01;31m)[00m [01;33mSIMPX)[00m
				[01;31m(NX[00m
					(NX funfzehn minuten) [01;33mNX)[00m
					(PX zum zentrum)[01;31m)[00m[01;31m)[00m
			(DM na ja)
			[01;31m(SIMPX[00m
				(VF garage)
				(LK brauchen)
				(MF wir ja nicht ein hotel luisenhof)[01;31m)[00m
			[01;31m(NX[00m
				(NX funf minuten vom bahnhof)
				(NX bar restaurant garage)[01;31m)[00m
			[01;31m(ADJX[00m
				(NX alles)
				(VC uberflussig)[01;31m)[00m
			(KON und)
			[01;31m(NX[00m
				(PX direkt beim hauptbahnhof)
				(ADVX noch)
				(NX ein hotel mit schwimm und dampfbad)[01;31m)[00m[01;31m)[00m
		(SIMPX brauchen wir es)))
Step:UNSET remove
{'subtrees': ['ADVX', 'NX'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'APPR', 'PPOSAT', 'NN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (6, 14), 'span': (8, 14), 'left siblings': ['VF', 'LK'], 'label': 'MF', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(NX hotels)
		(DM ja)
		(SIMPX mussen wir mal kucken)
		(SIMPX ich habe hier eine liste von meiner sekretarin)
		[01;33m(NX (SIMPX (NX[00m (NX drei moglichkeiten)
		[01;31m(NX[00m
			[01;31m(NX[00m
				[01;31m(NX[00m
					(NX maritimhotel) [01;33mNX)[00m
					(PX am hauptbahnhof)[01;31m)[00m [01;33mSIMPX)[00m
				[01;31m(NX[00m
					(NX funfzehn minuten) [01;33mNX)[00m
					(PX zum zentrum)[01;31m)[00m[01;31m)[00m
			(DM na ja)
			[01;31m(SIMPX[00m
				(VF garage)
				(LK brauchen)
				(MF wir ja nicht ein hotel luisenhof)[01;31m)[00m
			[01;31m(NX[00m
				(NX funf minuten vom bahnhof)
				(NX bar restaurant garage)[01;31m)[00m
			[01;31m(ADJX[00m
				(NX alles)
				(VC uberflussig)[01;31m)[00m
			(KON und)
			[01;31m(NX[00m
				(PX direkt beim hauptbahnhof)
				(ADVX noch)
				(NX ein hotel mit schwimm und dampfbad)[01;31m)[00m[01;31m)[00m
		(SIMPX brauchen wir es)))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NE', 'APPRART', 'NN', 'CARD', 'NN', 'APPRART', 'NN'), 'right siblings': ['NX'], 'parent': 'NX', 'auto preterminal span': (16, 23), 'span': (16, 19), 'left siblings': [], 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(NX hotels)
		(DM ja)
		(SIMPX mussen wir mal kucken)
		(SIMPX ich habe hier eine liste von meiner sekretarin)
		[01;33m(NX (SIMPX (NX[00m (NX drei moglichkeiten)
		[01;31m(NX[00m
			[01;31m(NX[00m
				(NX maritimhotel) [01;33mNX)[00m
				(PX am hauptbahnhof) [01;33mSIMPX)[00m
				[01;31m(NX[00m
					(NX funfzehn minuten) [01;33mNX)[00m
					(PX zum zentrum)[01;31m)[00m[01;31m)[00m
			(DM na ja)
			[01;31m(SIMPX[00m
				(VF garage)
				(LK brauchen)
				(MF wir ja nicht ein hotel luisenhof)[01;31m)[00m
			[01;31m(NX[00m
				(NX funf minuten vom bahnhof)
				(NX bar restaurant garage)[01;31m)[00m
			[01;31m(ADJX[00m
				(NX alles)
				(VC uberflussig)[01;31m)[00m
			(KON und)
			[01;31m(NX[00m
				(PX direkt beim hauptbahnhof)
				(ADVX noch)
				(NX ein hotel mit schwimm und dampfbad)[01;31m)[00m[01;31m)[00m
		(SIMPX brauchen wir es)))
Step:PP Attachment
{'subtrees': ['NX', 'PX', 'NX'], 'family': ['NX', 'DM', 'SIMPX', 'NX', 'ADJX', 'KON', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NE', 'APPRART', 'NN', 'CARD', 'NN', 'APPRART', 'NN', 'ITJ', 'PTKANT', 'NN', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'NN', 'NN', 'NN', 'PIS', 'ADJD', 'KON', 'ADV', 'APPRART', 'NN', 'ADV', 'ART', 'NN', 'APPR', 'TRUNC', 'KON', 'NN'), 'right siblings': ['DM', 'SIMPX', 'NX', 'ADJX', 'KON', 'NX'], 'parent': 'NX', 'auto preterminal span': (16, 53), 'span': (16, 23), 'left siblings': [], 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(NX hotels)
		(DM ja)
		(SIMPX mussen wir mal kucken)
		(SIMPX ich habe hier eine liste von meiner sekretarin)
		[01;33m(NX (SIMPX (NX[00m (NX drei moglichkeiten)
		[01;31m(NX[00m
			(NX maritimhotel) [01;33mNX)[00m
			(PX am hauptbahnhof) [01;33mSIMPX)[00m
			[01;31m(NX[00m
				(NX funfzehn minuten) [01;33mNX)[00m
				(PX zum zentrum)[01;31m)[00m
			(DM na ja)
			[01;31m(SIMPX[00m
				(VF garage)
				(LK brauchen)
				(MF wir ja nicht ein hotel luisenhof)[01;31m)[00m
			[01;31m(NX[00m
				(NX funf minuten vom bahnhof)
				(NX bar restaurant garage)[01;31m)[00m
			[01;31m(ADJX[00m
				(NX alles)
				(VC uberflussig)[01;31m)[00m
			(KON und)
			[01;31m(NX[00m
				(PX direkt beim hauptbahnhof)
				(ADVX noch)
				(NX ein hotel mit schwimm und dampfbad)[01;31m)[00m[01;31m)[00m
		(SIMPX brauchen wir es)))
Step:PP Attachment
{'subtrees': ['NX', 'PX', 'NX', 'DM', 'SIMPX', 'NX', 'ADJX', 'KON', 'NX'], 'family': ['NX', 'DM', 'SIMPX', 'SIMPX', 'NX', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'PTKANT', 'VMFIN', 'PPER', 'ADV', 'VVINF', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'APPR', 'PPOSAT', 'NN', 'CARD', 'NN', 'NE', 'APPRART', 'NN', 'CARD', 'NN', 'APPRART', 'NN', 'ITJ', 'PTKANT', 'NN', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'NN', 'NN', 'NN', 'PIS', 'ADJD', 'KON', 'ADV', 'APPRART', 'NN', 'ADV', 'ART', 'NN', 'APPR', 'TRUNC', 'KON', 'NN', 'VVFIN', 'PPER', 'PPER'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 56), 'span': (16, 53), 'left siblings': ['NX', 'DM', 'SIMPX', 'SIMPX', 'NX'], 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(NX hotels)
		(DM ja)
		(SIMPX mussen wir mal kucken)
		(SIMPX ich habe hier eine liste von meiner sekretarin)
		[01;36m(SIMPX[00m
			[01;36m(NX[00m
				[01;33m(NX[00m (NX drei moglichkeiten)
				(NX maritimhotel)[01;36m)[00m
			(PX am hauptbahnhof)[01;36m)[00m
		[01;31m(NX[00m
			(NX funfzehn minuten) [01;33mNX)[00m
			(PX zum zentrum)[01;31m)[00m
		(DM na ja)
		[01;31m(SIMPX[00m
			(VF garage)
			(LK brauchen)
			(MF wir ja nicht ein hotel luisenhof)[01;31m)[00m
		[01;31m(NX[00m
			(NX funf minuten vom bahnhof)
			(NX bar restaurant garage)[01;31m)[00m
		[01;31m(ADJX[00m
			(NX alles)
			(VC uberflussig)[01;31m)[00m
		(KON und)
		[01;31m(NX[00m
			(PX direkt beim hauptbahnhof)
			(ADVX noch)
			(NX ein hotel mit schwimm und dampfbad)[01;31m)[00m
		(SIMPX brauchen wir es)))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['NX', 'DM', 'SIMPX', 'SIMPX', 'NX', 'PX', 'NX', 'DM', 'SIMPX', 'NX', 'ADJX', 'KON', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'NN', 'NE'), 'right siblings': [(PX (APPRART am) (NX (NN hauptbahnhof))), (NX (NX (ADJX (CARD funfzehn)) (NN minuten)) (PX (APPRART zum) (NX (NN zentrum)))), (DM (ITJ na) (PTKANT ja)), (SIMPX (VF (NX (NN garage))) (LK (VXFIN (VVFIN brauchen))) (MF (NX (PPER wir)) (ADVX (ADV ja)) (ADVX (PTKNEG nicht)) (NX (ART ein) (NX (NX (NN hotel)) (NX (NE luisenhof)))))), (NX (NX (NX (ADJX (CARD funf)) (NN minuten)) (PX (APPRART vom) (NX (NN bahnhof)))) (NX (NX (NN bar)) (NX (NN restaurant)) (NX (NN garage)))), (ADJX (NX (PIS alles)) (VC (VXINF (ADJD uberflussig)))), (KON und), (NX (PX (ADVX (ADV direkt)) (APPRART beim) (NX (NN hauptbahnhof))) (ADVX (ADV noch)) (NX (NX (ART ein) (NN hotel)) (PX (APPR mit) (NX (TRUNC schwimm) (KON und) (NN dampfbad))))), (SIMPX (LK (VXFIN (VVFIN brauchen))) (MF (NX (PPER wir)) (NX (PPER es))))], 'left siblings': [(NX (NN hotels)), (DM (PTKANT ja)), (SIMPX (LK (VXFIN (VMFIN mussen))) (MF (NX (PPER wir)) (ADVX (ADV mal))) (VC (VXINF (VVINF kucken)))), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VAFIN habe))) (ADVX (ADV hier)) (NX (NX (ART eine) (NN liste)) (PX (APPR von) (NX (PPOSAT meiner) (NN sekretarin)))))], 'auto preterminal span': (14, 17), 'span': (14, 17), 'parent': 'TURN', 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'add'}
(TOP
	(TURN
		(NX hotels)
		(DM ja)
		(SIMPX mussen wir mal kucken)
		(SIMPX ich habe hier eine liste von meiner sekretarin)
		[01;36m(SIMPX[00m
			[01;33m(NX[00m (NX drei moglichkeiten maritimhotel)
			(PX am hauptbahnhof)[01;36m)[00m
		[01;31m(NX[00m
			(NX funfzehn minuten) [01;33mNX)[00m
			(PX zum zentrum)[01;31m)[00m
		(DM na ja)
		[01;31m(SIMPX[00m
			(VF garage)
			(LK brauchen)
			(MF wir ja nicht ein hotel luisenhof)[01;31m)[00m
		[01;31m(NX[00m
			(NX funf minuten vom bahnhof)
			(NX bar restaurant garage)[01;31m)[00m
		[01;31m(ADJX[00m
			(NX alles)
			(VC uberflussig)[01;31m)[00m
		(KON und)
		[01;31m(NX[00m
			(PX direkt beim hauptbahnhof)
			(ADVX noch)
			(NX ein hotel mit schwimm und dampfbad)[01;31m)[00m
		(SIMPX brauchen wir es)))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['NX', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'DM', 'SIMPX', 'NX', 'ADJX', 'KON', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'NN', 'NE', 'APPRART', 'NN'), 'right siblings': [(NX (NX (ADJX (CARD funfzehn)) (NN minuten)) (PX (APPRART zum) (NX (NN zentrum)))), (DM (ITJ na) (PTKANT ja)), (SIMPX (VF (NX (NN garage))) (LK (VXFIN (VVFIN brauchen))) (MF (NX (PPER wir)) (ADVX (ADV ja)) (ADVX (PTKNEG nicht)) (NX (ART ein) (NX (NX (NN hotel)) (NX (NE luisenhof)))))), (NX (NX (NX (ADJX (CARD funf)) (NN minuten)) (PX (APPRART vom) (NX (NN bahnhof)))) (NX (NX (NN bar)) (NX (NN restaurant)) (NX (NN garage)))), (ADJX (NX (PIS alles)) (VC (VXINF (ADJD uberflussig)))), (KON und), (NX (PX (ADVX (ADV direkt)) (APPRART beim) (NX (NN hauptbahnhof))) (ADVX (ADV noch)) (NX (NX (ART ein) (NN hotel)) (PX (APPR mit) (NX (TRUNC schwimm) (KON und) (NN dampfbad))))), (SIMPX (LK (VXFIN (VVFIN brauchen))) (MF (NX (PPER wir)) (NX (PPER es))))], 'left siblings': [(NX (NN hotels)), (DM (PTKANT ja)), (SIMPX (LK (VXFIN (VMFIN mussen))) (MF (NX (PPER wir)) (ADVX (ADV mal))) (VC (VXINF (VVINF kucken)))), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VAFIN habe))) (ADVX (ADV hier)) (NX (NX (ART eine) (NN liste)) (PX (APPR von) (NX (PPOSAT meiner) (NN sekretarin)))))], 'auto preterminal span': (14, 19), 'span': (14, 19), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(NX hotels)
		(DM ja)
		(SIMPX mussen wir mal kucken)
		(SIMPX ich habe hier eine liste von meiner sekretarin)
		[01;33m(NX[00m (SIMPX drei moglichkeiten maritimhotel am hauptbahnhof)
		[01;31m(NX[00m
			(NX funfzehn minuten) [01;33mNX)[00m
			(PX zum zentrum)[01;31m)[00m
		(DM na ja)
		[01;31m(SIMPX[00m
			(VF garage)
			(LK brauchen)
			(MF wir ja nicht ein hotel luisenhof)[01;31m)[00m
		[01;31m(NX[00m
			(NX funf minuten vom bahnhof)
			(NX bar restaurant garage)[01;31m)[00m
		[01;31m(ADJX[00m
			(NX alles)
			(VC uberflussig)[01;31m)[00m
		(KON und)
		[01;31m(NX[00m
			(PX direkt beim hauptbahnhof)
			(ADVX noch)
			(NX ein hotel mit schwimm und dampfbad)[01;31m)[00m
		(SIMPX brauchen wir es)))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['NX', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'DM', 'SIMPX', 'NX', 'ADJX', 'KON', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'PTKANT', 'VMFIN', 'PPER', 'ADV', 'VVINF', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'APPR', 'PPOSAT', 'NN', 'CARD', 'NN', 'NE', 'APPRART', 'NN', 'CARD', 'NN', 'APPRART', 'NN', 'ITJ', 'PTKANT', 'NN', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'NN', 'NN', 'NN', 'PIS', 'ADJD', 'KON', 'ADV', 'APPRART', 'NN', 'ADV', 'ART', 'NN', 'APPR', 'TRUNC', 'KON', 'NN', 'VVFIN', 'PPER', 'PPER'), 'right siblings': ['DM', 'SIMPX', 'NX', 'ADJX', 'KON', 'NX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 56), 'span': (19, 23), 'left siblings': ['NX', 'DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(NX hotels)
		(DM ja)
		(SIMPX mussen wir mal kucken)
		(SIMPX ich habe hier eine liste von meiner sekretarin)
		[01;36m(NX[00m
			(SIMPX drei moglichkeiten maritimhotel am hauptbahnhof)
			(NX funfzehn minuten)[01;36m)[00m
		(PX zum zentrum)
		(DM na ja)
		[01;31m(SIMPX[00m
			(VF garage)
			(LK brauchen)
			(MF wir ja nicht ein hotel luisenhof)[01;31m)[00m
		[01;31m(NX[00m
			(NX funf minuten vom bahnhof)
			(NX bar restaurant garage)[01;31m)[00m
		[01;31m(ADJX[00m
			(NX alles)
			(VC uberflussig)[01;31m)[00m
		(KON und)
		[01;31m(NX[00m
			(PX direkt beim hauptbahnhof)
			(ADVX noch)
			(NX ein hotel mit schwimm und dampfbad)[01;31m)[00m
		(SIMPX brauchen wir es)))
Step:UNSET add
{'subtrees': ['SIMPX', 'NX'], 'family': ['NX', 'DM', 'SIMPX', 'SIMPX', 'NX', 'PX', 'DM', 'SIMPX', 'NX', 'ADJX', 'KON', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'NN', 'NE', 'APPRART', 'NN', 'CARD', 'NN'), 'right siblings': [(PX (APPRART zum) (NX (NN zentrum))), (DM (ITJ na) (PTKANT ja)), (SIMPX (VF (NX (NN garage))) (LK (VXFIN (VVFIN brauchen))) (MF (NX (PPER wir)) (ADVX (ADV ja)) (ADVX (PTKNEG nicht)) (NX (ART ein) (NX (NX (NN hotel)) (NX (NE luisenhof)))))), (NX (NX (NX (ADJX (CARD funf)) (NN minuten)) (PX (APPRART vom) (NX (NN bahnhof)))) (NX (NX (NN bar)) (NX (NN restaurant)) (NX (NN garage)))), (ADJX (NX (PIS alles)) (VC (VXINF (ADJD uberflussig)))), (KON und), (NX (PX (ADVX (ADV direkt)) (APPRART beim) (NX (NN hauptbahnhof))) (ADVX (ADV noch)) (NX (NX (ART ein) (NN hotel)) (PX (APPR mit) (NX (TRUNC schwimm) (KON und) (NN dampfbad))))), (SIMPX (LK (VXFIN (VVFIN brauchen))) (MF (NX (PPER wir)) (NX (PPER es))))], 'left siblings': [(NX (NN hotels)), (DM (PTKANT ja)), (SIMPX (LK (VXFIN (VMFIN mussen))) (MF (NX (PPER wir)) (ADVX (ADV mal))) (VC (VXINF (VVINF kucken)))), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VAFIN habe))) (ADVX (ADV hier)) (NX (NX (ART eine) (NN liste)) (PX (APPR von) (NX (PPOSAT meiner) (NN sekretarin)))))], 'auto preterminal span': (14, 21), 'span': (14, 21), 'parent': 'TURN', 'label': 'NX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(NX hotels)
		(DM ja)
		(SIMPX mussen wir mal kucken)
		(SIMPX ich habe hier eine liste von meiner sekretarin)
		(NX drei moglichkeiten maritimhotel am hauptbahnhof funfzehn minuten)
		(PX zum zentrum)
		(DM na ja)
		[01;31m(SIMPX[00m
			(VF garage)
			(LK brauchen)
			(MF wir ja nicht ein hotel luisenhof)[01;31m)[00m
		[01;31m(NX[00m
			(NX funf minuten vom bahnhof)
			(NX bar restaurant garage)[01;31m)[00m
		[01;31m(ADJX[00m
			(NX alles)
			(VC uberflussig)[01;31m)[00m
		(KON und)
		[01;31m(NX[00m
			(PX direkt beim hauptbahnhof)
			(ADVX noch)
			(NX ein hotel mit schwimm und dampfbad)[01;31m)[00m
		(SIMPX brauchen wir es)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['NX', 'DM', 'SIMPX', 'SIMPX', 'NX', 'PX', 'DM', 'SIMPX', 'NX', 'ADJX', 'KON', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'PTKANT', 'VMFIN', 'PPER', 'ADV', 'VVINF', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'APPR', 'PPOSAT', 'NN', 'CARD', 'NN', 'NE', 'APPRART', 'NN', 'CARD', 'NN', 'APPRART', 'NN', 'ITJ', 'PTKANT', 'NN', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'NN', 'NN', 'NN', 'PIS', 'ADJD', 'KON', 'ADV', 'APPRART', 'NN', 'ADV', 'ART', 'NN', 'APPR', 'TRUNC', 'KON', 'NN', 'VVFIN', 'PPER', 'PPER'), 'right siblings': ['NX', 'ADJX', 'KON', 'NX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 56), 'span': (25, 33), 'left siblings': ['NX', 'DM', 'SIMPX', 'SIMPX', 'NX', 'PX', 'DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(NX hotels)
		(DM ja)
		(SIMPX mussen wir mal kucken)
		(SIMPX ich habe hier eine liste von meiner sekretarin)
		(NX drei moglichkeiten maritimhotel am hauptbahnhof funfzehn minuten)
		(PX zum zentrum)
		(DM na ja)
		(VF garage)
		(LK brauchen)
		(MF wir ja nicht ein hotel luisenhof)
		[01;31m(NX[00m
			(NX funf minuten vom bahnhof)
			(NX bar restaurant garage)[01;31m)[00m
		[01;31m(ADJX[00m
			(NX alles)
			(VC uberflussig)[01;31m)[00m
		(KON und)
		[01;31m(NX[00m
			(PX direkt beim hauptbahnhof)
			(ADVX noch)
			(NX ein hotel mit schwimm und dampfbad)[01;31m)[00m
		(SIMPX brauchen wir es)))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['NX', 'DM', 'SIMPX', 'SIMPX', 'NX', 'PX', 'DM', 'VF', 'LK', 'MF', 'NX', 'ADJX', 'KON', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'PTKANT', 'VMFIN', 'PPER', 'ADV', 'VVINF', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'APPR', 'PPOSAT', 'NN', 'CARD', 'NN', 'NE', 'APPRART', 'NN', 'CARD', 'NN', 'APPRART', 'NN', 'ITJ', 'PTKANT', 'NN', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'NN', 'NN', 'NN', 'PIS', 'ADJD', 'KON', 'ADV', 'APPRART', 'NN', 'ADV', 'ART', 'NN', 'APPR', 'TRUNC', 'KON', 'NN', 'VVFIN', 'PPER', 'PPER'), 'right siblings': ['ADJX', 'KON', 'NX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 56), 'span': (33, 40), 'left siblings': ['NX', 'DM', 'SIMPX', 'SIMPX', 'NX', 'PX', 'DM', 'VF', 'LK', 'MF'], 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'remove'}
(TOP
	(TURN
		(NX hotels)
		(DM ja)
		(SIMPX mussen wir mal kucken)
		(SIMPX ich habe hier eine liste von meiner sekretarin)
		(NX drei moglichkeiten maritimhotel am hauptbahnhof funfzehn minuten)
		(PX zum zentrum)
		(DM na ja)
		(VF garage)
		(LK brauchen)
		(MF wir ja nicht ein hotel luisenhof)
		(NX funf minuten vom bahnhof)
		(NX bar restaurant garage)
		[01;31m(ADJX[00m
			(NX alles)
			(VC uberflussig)[01;31m)[00m
		(KON und)
		[01;31m(NX[00m
			(PX direkt beim hauptbahnhof)
			(ADVX noch)
			(NX ein hotel mit schwimm und dampfbad)[01;31m)[00m
		(SIMPX brauchen wir es)))
Step:Co-ordination
{'subtrees': ['NX', 'VC'], 'family': ['NX', 'DM', 'SIMPX', 'SIMPX', 'NX', 'PX', 'DM', 'VF', 'LK', 'MF', 'NX', 'NX', 'ADJX', 'KON', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'PTKANT', 'VMFIN', 'PPER', 'ADV', 'VVINF', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'APPR', 'PPOSAT', 'NN', 'CARD', 'NN', 'NE', 'APPRART', 'NN', 'CARD', 'NN', 'APPRART', 'NN', 'ITJ', 'PTKANT', 'NN', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'NN', 'NN', 'NN', 'PIS', 'ADJD', 'KON', 'ADV', 'APPRART', 'NN', 'ADV', 'ART', 'NN', 'APPR', 'TRUNC', 'KON', 'NN', 'VVFIN', 'PPER', 'PPER'), 'right siblings': ['KON', 'NX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 56), 'span': (40, 42), 'left siblings': ['NX', 'DM', 'SIMPX', 'SIMPX', 'NX', 'PX', 'DM', 'VF', 'LK', 'MF', 'NX', 'NX'], 'label': 'ADJX', 'classified_type': 'Co-ordination', 'type': 'remove'}
(TOP
	(TURN
		(NX hotels)
		(DM ja)
		(SIMPX mussen wir mal kucken)
		(SIMPX ich habe hier eine liste von meiner sekretarin)
		(NX drei moglichkeiten maritimhotel am hauptbahnhof funfzehn minuten)
		(PX zum zentrum)
		(DM na ja)
		(VF garage)
		(LK brauchen)
		(MF wir ja nicht ein hotel luisenhof)
		(NX funf minuten vom bahnhof)
		(NX bar restaurant garage)
		(NX alles)
		(VC uberflussig)
		(KON und)
		[01;31m(NX[00m
			(PX direkt beim hauptbahnhof)
			(ADVX noch)
			(NX ein hotel mit schwimm und dampfbad)[01;31m)[00m
		(SIMPX brauchen wir es)))
Step:Modifier Attachment
{'subtrees': ['PX', 'ADVX', 'NX'], 'family': ['NX', 'DM', 'SIMPX', 'SIMPX', 'NX', 'PX', 'DM', 'VF', 'LK', 'MF', 'NX', 'NX', 'NX', 'VC', 'KON', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'PTKANT', 'VMFIN', 'PPER', 'ADV', 'VVINF', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'APPR', 'PPOSAT', 'NN', 'CARD', 'NN', 'NE', 'APPRART', 'NN', 'CARD', 'NN', 'APPRART', 'NN', 'ITJ', 'PTKANT', 'NN', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'NN', 'NN', 'NN', 'PIS', 'ADJD', 'KON', 'ADV', 'APPRART', 'NN', 'ADV', 'ART', 'NN', 'APPR', 'TRUNC', 'KON', 'NN', 'VVFIN', 'PPER', 'PPER'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 56), 'span': (43, 53), 'left siblings': ['NX', 'DM', 'SIMPX', 'SIMPX', 'NX', 'PX', 'DM', 'VF', 'LK', 'MF', 'NX', 'NX', 'NX', 'VC', 'KON'], 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP hotels ja mussen wir mal kucken ich habe hier eine liste von meiner sekretarin drei moglichkeiten maritimhotel am hauptbahnhof funfzehn minuten zum zentrum na ja garage brauchen wir ja nicht ein hotel luisenhof funf minuten vom bahnhof bar restaurant garage alles uberflussig und direkt beim hauptbahnhof noch ein hotel mit schwimm und dampfbad brauchen wir es)

Sentence 450:
5 Initial errors
0 on fringe, 2 iterations
4 Error:NP Attachment
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX ist ein bischen teurer)
		(NX
			(NX einzelzimmer zwohundert achtundvierzig mark)
			(KON und)
			[01;36m(NX[00m
				[01;33m(NX[00m (NX doppelzimmer)
				[01;31m(PX[00m [01;33m(PX[00m
					(APPRART im)
					[01;31m(NX[00m
						(NX doppelzimmer) [01;33mPX) NX)[00m
						(NX hundert dreiundvierzig)[01;31m)[00m[01;31m)[00m[01;36m)[00m)))
Step:NP Attachment
{'new_parent': 'NX', 'new_family': ['NX', 'KON', 'NX', 'PX', 'NX'], 'mover info': [('NX', (12, 14))], 'old_family': ['NX', 'NX'], 'start left siblings': ['NX'], 'auto preterminals': ('NN', 'CARD', 'CARD', 'NN', 'KON', 'NN', 'APPRART', 'NN', 'CARD', 'CARD'), 'start right siblings': [], 'end left siblings': ['NX', 'KON', 'NX', 'PX'], 'auto preterminal span': (4, 14), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(SIMPX ist ein bischen teurer)
		(NX
			(NX einzelzimmer zwohundert achtundvierzig mark)
			(KON und)
			(NX
				[01;36m(NX[00m
					(NX doppelzimmer)
					(PX im doppelzimmer)[01;36m)[00m
				(NX hundert dreiundvierzig)))))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'APPRART', 'NN'), 'right siblings': [(NX (CARD hundert) (CARD dreiundvierzig))], 'left siblings': [], 'auto preterminal span': (9, 12), 'span': (9, 12), 'parent': 'NX', 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP ist ein bischen teurer einzelzimmer zwohundert achtundvierzig mark und doppelzimmer im doppelzimmer hundert dreiundvierzig)

Sentence 451:
12 Initial errors
0 on fringe, 12 iterations
1 Error:Single Word Phrase
1 Error:PP Attachment
1 Error:Unary
1 Error:UNSET remove
1 Error:Modifier Attachment
1 Error:Unary
1 Error:Modifier Attachment
1 Error:Co-ordination
1 Error:Modifier Attachment
1 Error:UNSET remove
1 Error:Modifier Attachment
1 Error:UNSET add
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP [01;33m(ADVX[00m
	(TURN
		(ADVX
			(ADVX prinzipiell)
			[01;36m(ADVX[00m
				(ADV immer)[01;36m)[00m)
		[01;31m(SIMPX[00m
			[01;31m(PARORD[00m
				(ADVX
					(ADV nur))[01;31m)[00m [01;33mADVX)[00m
			(VF wahrscheinlich)
			(LK wird)
			[01;36m(MF[00m
				(MF es am dienstag etwas spater)
				(DM ja)
				(PX am dienstag)
				(ADJX etwas spater)[01;36m)[00m
			[01;31m(NF[00m
				(SIMPX
					(C bis)
					[01;31m(FKOORD[00m [01;33m(MF[00m
						[01;31m(MVC[00m
							[01;31m(MF[00m
								(NX wir)
								[01;33m(NX[00m (ADVX uberhaupt)[01;31m)[00m
							(VC loskommen)[01;31m)[00m
						(KON und)
						[01;31m(MVC[00m
							(MF was) [01;33mNX) MF)[00m
							(VC unternehmen konnen)[01;31m)[00m[01;31m)[00m)[01;31m)[00m[01;31m)[00m
		(DM also)
		(SIMPX fur viele veranstaltungen wird es eher zu spat werden)))
Step:Single Word Phrase
{'subtrees': ['ADV'], 'family': ['ADVX', 'ADVX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADV',), 'right siblings': [], 'left siblings': [(ADVX (ADV prinzipiell))], 'auto preterminal span': (1, 2), 'span': (1, 2), 'parent': 'ADVX', 'label': 'ADVX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP [01;33m(ADVX[00m
	(TURN
		(ADVX prinzipiell immer)
		[01;31m(SIMPX[00m
			[01;31m(PARORD[00m
				(ADVX
					(ADV nur))[01;31m)[00m [01;33mADVX)[00m
			(VF wahrscheinlich)
			(LK wird)
			[01;36m(MF[00m
				(MF es am dienstag etwas spater)
				(DM ja)
				(PX am dienstag)
				(ADJX etwas spater)[01;36m)[00m
			[01;31m(NF[00m
				(SIMPX
					(C bis)
					[01;31m(FKOORD[00m [01;33m(MF[00m
						[01;31m(MVC[00m
							[01;31m(MF[00m
								(NX wir)
								[01;33m(NX[00m (ADVX uberhaupt)[01;31m)[00m
							(VC loskommen)[01;31m)[00m
						(KON und)
						[01;31m(MVC[00m
							(MF was) [01;33mNX) MF)[00m
							(VC unternehmen konnen)[01;31m)[00m[01;31m)[00m)[01;31m)[00m[01;31m)[00m
		(DM also)
		(SIMPX fur viele veranstaltungen wird es eher zu spat werden)))
Step:PP Attachment
{'subtrees': ['MF', 'DM', 'PX', 'ADJX'], 'family': ['PARORD', 'VF', 'LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'APPRART', 'NN', 'ADV', 'ADJD', 'PTKANT', 'APPRART', 'NN', 'ADV', 'ADJD'), 'right siblings': [(NF (SIMPX (C (KOUS bis)) (FKOORD (MVC (MF (NX (PPER wir)) (ADVX (ADV uberhaupt))) (VC (VXFIN (VVFIN loskommen)))) (KON und) (MVC (MF (NX (PIS was))) (VC (VXINF (VVINF unternehmen)) (VXFIN (VMFIN konnen)))))))], 'left siblings': [(PARORD (ADVX (ADV nur))), (VF (ADVX (ADV wahrscheinlich))), (LK (VXFIN (VAFIN wird)))], 'auto preterminal span': (5, 15), 'span': (5, 15), 'parent': 'SIMPX', 'label': 'MF', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP [01;33m(ADVX[00m
	(TURN
		(ADVX prinzipiell immer)
		[01;31m(SIMPX[00m
			[01;31m(PARORD[00m
				(ADVX
					(ADV nur))[01;31m)[00m [01;33mADVX)[00m
			(VF wahrscheinlich)
			(LK wird)
			(MF es am dienstag etwas spater ja am dienstag etwas spater)
			[01;31m(NF[00m
				(SIMPX
					(C bis)
					[01;31m(FKOORD[00m [01;33m(MF[00m
						[01;31m(MVC[00m
							[01;31m(MF[00m
								(NX wir)
								[01;33m(NX[00m (ADVX uberhaupt)[01;31m)[00m
							(VC loskommen)[01;31m)[00m
						(KON und)
						[01;31m(MVC[00m
							(MF was) [01;33mNX) MF)[00m
							(VC unternehmen konnen)[01;31m)[00m[01;31m)[00m)[01;31m)[00m[01;31m)[00m
		(DM also)
		(SIMPX fur viele veranstaltungen wird es eher zu spat werden)))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['PARORD', 'VF', 'LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'VAFIN', 'PPER', 'APPRART', 'NN', 'ADV', 'ADJD', 'PTKANT', 'APPRART', 'NN', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'VVFIN', 'KON', 'PIS', 'VVINF', 'VMFIN'), 'right siblings': ['VF', 'LK', 'MF', 'NF'], 'parent': 'SIMPX', 'auto preterminal span': (2, 23), 'span': (2, 3), 'left siblings': [], 'label': 'PARORD', 'classified_type': 'Unary', 'type': 'remove'}
(TOP [01;33m(ADVX[00m
	(TURN
		(ADVX prinzipiell immer)
		[01;31m(SIMPX[00m
			(ADVX nur) [01;33mADVX)[00m
			(VF wahrscheinlich)
			(LK wird)
			(MF es am dienstag etwas spater ja am dienstag etwas spater)
			[01;31m(NF[00m
				(SIMPX
					(C bis)
					[01;31m(FKOORD[00m [01;33m(MF[00m
						[01;31m(MVC[00m
							[01;31m(MF[00m
								(NX wir)
								[01;33m(NX[00m (ADVX uberhaupt)[01;31m)[00m
							(VC loskommen)[01;31m)[00m
						(KON und)
						[01;31m(MVC[00m
							(MF was) [01;33mNX) MF)[00m
							(VC unternehmen konnen)[01;31m)[00m[01;31m)[00m)[01;31m)[00m[01;31m)[00m
		(DM also)
		(SIMPX fur viele veranstaltungen wird es eher zu spat werden)))
Step:UNSET remove
{'subtrees': ['ADVX', 'VF', 'LK', 'MF', 'NF'], 'family': ['ADVX', 'SIMPX', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'ADV', 'ADV', 'VAFIN', 'PPER', 'APPRART', 'NN', 'ADV', 'ADJD', 'PTKANT', 'APPRART', 'NN', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'VVFIN', 'KON', 'PIS', 'VVINF', 'VMFIN', 'ADV', 'APPR', 'PIDAT', 'NN', 'VAFIN', 'PPER', 'ADV', 'PTKA', 'ADJD', 'VAINF'), 'right siblings': ['DM', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 33), 'span': (2, 23), 'left siblings': ['ADVX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		[01;36m(ADVX[00m
			(ADVX prinzipiell immer)
			(ADVX nur)[01;36m)[00m
		(VF wahrscheinlich)
		(LK wird)
		(MF es am dienstag etwas spater ja am dienstag etwas spater)
		[01;31m(NF[00m
			(SIMPX
				(C bis)
				[01;31m(FKOORD[00m [01;33m(MF[00m
					[01;31m(MVC[00m
						[01;31m(MF[00m
							(NX wir)
							[01;33m(NX[00m (ADVX uberhaupt)[01;31m)[00m
						(VC loskommen)[01;31m)[00m
					(KON und)
					[01;31m(MVC[00m
						(MF was) [01;33mNX) MF)[00m
						(VC unternehmen konnen)[01;31m)[00m[01;31m)[00m)[01;31m)[00m
		(DM also)
		(SIMPX fur viele veranstaltungen wird es eher zu spat werden)))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'ADVX'], 'family': ['ADVX', 'VF', 'LK', 'MF', 'NF', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'ADV'), 'right siblings': [(VF (ADVX (ADV wahrscheinlich))), (LK (VXFIN (VAFIN wird))), (MF (MF (NX (PPER es)) (PX (APPRART am) (NX (NN dienstag))) (ADJX (ADVX (ADV etwas)) (ADJD spater))) (DM (PTKANT ja)) (PX (APPRART am) (NX (NN dienstag))) (ADJX (ADVX (ADV etwas)) (ADJD spater))), (NF (SIMPX (C (KOUS bis)) (FKOORD (MVC (MF (NX (PPER wir)) (ADVX (ADV uberhaupt))) (VC (VXFIN (VVFIN loskommen)))) (KON und) (MVC (MF (NX (PIS was))) (VC (VXINF (VVINF unternehmen)) (VXFIN (VMFIN konnen))))))), (DM (ADVX (ADV also))), (SIMPX (VF (PX (APPR fur) (NX (PIDAT viele) (NN veranstaltungen)))) (LK (VXFIN (VAFIN wird))) (MF (NX (PPER es)) (ADVX (ADV eher)) (ADJX (PTKA zu) (ADJD spat))) (VC (VXINF (VAINF werden))))], 'left siblings': [], 'auto preterminal span': (0, 3), 'span': (0, 3), 'parent': 'TURN', 'label': 'ADVX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		(ADVX prinzipiell immer nur)
		(VF wahrscheinlich)
		(LK wird)
		(MF es am dienstag etwas spater ja am dienstag etwas spater)
		[01;31m(NF[00m
			(SIMPX
				(C bis)
				[01;31m(FKOORD[00m [01;33m(MF[00m
					[01;31m(MVC[00m
						[01;31m(MF[00m
							(NX wir)
							[01;33m(NX[00m (ADVX uberhaupt)[01;31m)[00m
						(VC loskommen)[01;31m)[00m
					(KON und)
					[01;31m(MVC[00m
						(MF was) [01;33mNX) MF)[00m
						(VC unternehmen konnen)[01;31m)[00m[01;31m)[00m)[01;31m)[00m
		(DM also)
		(SIMPX fur viele veranstaltungen wird es eher zu spat werden)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['ADVX', 'VF', 'LK', 'MF', 'NF', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'ADV', 'ADV', 'VAFIN', 'PPER', 'APPRART', 'NN', 'ADV', 'ADJD', 'PTKANT', 'APPRART', 'NN', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'VVFIN', 'KON', 'PIS', 'VVINF', 'VMFIN', 'ADV', 'APPR', 'PIDAT', 'NN', 'VAFIN', 'PPER', 'ADV', 'PTKA', 'ADJD', 'VAINF'), 'right siblings': ['DM', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 33), 'span': (15, 23), 'left siblings': ['ADVX', 'VF', 'LK', 'MF'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(ADVX prinzipiell immer nur)
		(VF wahrscheinlich)
		(LK wird)
		(MF es am dienstag etwas spater ja am dienstag etwas spater)
		(SIMPX
			(C bis)
			[01;31m(FKOORD[00m [01;33m(MF[00m
				[01;31m(MVC[00m
					[01;31m(MF[00m
						(NX wir)
						[01;33m(NX[00m (ADVX uberhaupt)[01;31m)[00m
					(VC loskommen)[01;31m)[00m
				(KON und)
				[01;31m(MVC[00m
					(MF was) [01;33mNX) MF)[00m
					(VC unternehmen konnen)[01;31m)[00m[01;31m)[00m)
		(DM also)
		(SIMPX fur viele veranstaltungen wird es eher zu spat werden)))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADVX'], 'family': ['MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV', 'VVFIN'), 'right siblings': ['VC'], 'parent': 'MVC', 'auto preterminal span': (16, 19), 'span': (16, 18), 'left siblings': [], 'label': 'MF', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(ADVX prinzipiell immer nur)
		(VF wahrscheinlich)
		(LK wird)
		(MF es am dienstag etwas spater ja am dienstag etwas spater)
		(SIMPX
			(C bis)
			[01;31m(FKOORD[00m [01;33m(MF[00m
				[01;31m(MVC[00m
					(NX wir)
					[01;33m(NX[00m (ADVX uberhaupt)
					(VC loskommen)[01;31m)[00m
				(KON und)
				[01;31m(MVC[00m
					(MF was) [01;33mNX) MF)[00m
					(VC unternehmen konnen)[01;31m)[00m[01;31m)[00m)
		(DM also)
		(SIMPX fur viele veranstaltungen wird es eher zu spat werden)))
Step:Co-ordination
{'subtrees': ['NX', 'ADVX', 'VC'], 'family': ['MVC', 'KON', 'MVC'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV', 'VVFIN', 'KON', 'PIS', 'VVINF', 'VMFIN'), 'right siblings': ['KON', 'MVC'], 'parent': 'FKOORD', 'auto preterminal span': (16, 23), 'span': (16, 19), 'left siblings': [], 'label': 'MVC', 'classified_type': 'Co-ordination', 'type': 'remove'}
(TOP
	(TURN
		(ADVX prinzipiell immer nur)
		(VF wahrscheinlich)
		(LK wird)
		(MF es am dienstag etwas spater ja am dienstag etwas spater)
		(SIMPX
			(C bis)
			[01;31m(FKOORD[00m [01;33m(MF[00m
				(NX wir)
				[01;33m(NX[00m (ADVX uberhaupt)
				(VC loskommen)
				(KON und)
				[01;31m(MVC[00m
					(MF was) [01;33mNX) MF)[00m
					(VC unternehmen konnen)[01;31m)[00m[01;31m)[00m)
		(DM also)
		(SIMPX fur viele veranstaltungen wird es eher zu spat werden)))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADVX', 'VC', 'KON', 'MVC'], 'family': ['C', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'VVFIN', 'KON', 'PIS', 'VVINF', 'VMFIN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (15, 23), 'span': (16, 23), 'left siblings': ['C'], 'label': 'FKOORD', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(ADVX prinzipiell immer nur)
		(VF wahrscheinlich)
		(LK wird)
		(MF es am dienstag etwas spater ja am dienstag etwas spater)
		(SIMPX
			(C bis)
			[01;33m(MF[00m (NX wir)
			[01;33m(NX[00m (ADVX uberhaupt)
			(VC loskommen)
			(KON und)
			[01;31m(MVC[00m
				(MF was) [01;33mNX) MF)[00m
				(VC unternehmen konnen)[01;31m)[00m)
		(DM also)
		(SIMPX fur viele veranstaltungen wird es eher zu spat werden)))
Step:UNSET remove
{'subtrees': ['MF', 'VC'], 'family': ['C', 'NX', 'ADVX', 'VC', 'KON', 'MVC'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'VVFIN', 'KON', 'PIS', 'VVINF', 'VMFIN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (15, 23), 'span': (20, 23), 'left siblings': ['C', 'NX', 'ADVX', 'VC', 'KON'], 'label': 'MVC', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(ADVX prinzipiell immer nur)
		(VF wahrscheinlich)
		(LK wird)
		(MF es am dienstag etwas spater ja am dienstag etwas spater)
		(SIMPX
			(C bis)
			[01;36m(MF[00m
				(NX wir)
				[01;36m(NX[00m
					(ADVX uberhaupt)
					(VC loskommen)
					(KON und)
					(MF was)[01;36m)[00m[01;36m)[00m
			(VC unternehmen konnen))
		(DM also)
		(SIMPX fur viele veranstaltungen wird es eher zu spat werden)))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADVX', 'VC', 'KON', 'MF'], 'family': ['C', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV', 'VVFIN', 'KON', 'PIS'), 'right siblings': [(VC (VXINF (VVINF unternehmen)) (VXFIN (VMFIN konnen)))], 'left siblings': [(C (KOUS bis))], 'auto preterminal span': (16, 21), 'span': (16, 21), 'parent': 'SIMPX', 'label': 'MF', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		(ADVX prinzipiell immer nur)
		(VF wahrscheinlich)
		(LK wird)
		(MF es am dienstag etwas spater ja am dienstag etwas spater)
		(SIMPX
			(C bis)
			(MF
				(NX wir)
				[01;36m(NX[00m
					(ADVX uberhaupt)
					(VC loskommen)
					(KON und)
					(MF was)[01;36m)[00m)
			(VC unternehmen konnen))
		(DM also)
		(SIMPX fur viele veranstaltungen wird es eher zu spat werden)))
Step:UNSET add
{'subtrees': ['ADVX', 'VC', 'KON', 'MF'], 'family': ['NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN', 'KON', 'PIS'), 'right siblings': [], 'left siblings': [(NX (PPER wir))], 'auto preterminal span': (17, 21), 'span': (17, 21), 'parent': 'MF', 'label': 'NX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP prinzipiell immer nur wahrscheinlich wird es am dienstag etwas spater ja am dienstag etwas spater bis wir uberhaupt loskommen und was unternehmen konnen also fur viele veranstaltungen wird es eher zu spat werden)

Sentence 452:
0 Initial errors
0 on fringe, 0 iterations

Sentence 453:
9 Initial errors
0 on fringe, 7 iterations
3 Error:Modifier Attachment
1 Error:Unary
1 Error:Single Word Phrase
1 Error:Clause Attachment
1 Error:UNSET remove
1 Error:PP Attachment
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM also)
		(SIMPX ich wurde mal sagen im april ist es ein bischen schlecht)
		(SIMPX
			(VF ich)
			(LK habe)
			(MF
				(PX
					[01;31m(PX[00m
						(APPR in)
						[01;33m(NX[00m (NX der mitte)[01;31m)[00m
					(PX vom april)) [01;33mNX)[00m
				(NX urlaub)))
		[01;31m(PX[00m
			[01;36m(DM[00m
				(ADVX
					(ADV also))[01;36m)[00m
			(PX uber ostern)[01;31m)[00m
		(SIMPX wir fahren uber ostern weg)
		(SIMPX
			(VF ich)
			(LK wurde)
			(MF
				(ADJX am liebsten)
				[01;36m(PX[00m
					[01;36m(MF[00m
						(ADVX direkt)
						[01;31m(PX[00m
							(APPR in)
							(NX den mai)[01;31m)[00m[01;36m)[00m[01;36m)[00m)
			(VC gehen))
		(SIMPX und da ware bei mir die erste maiwoche)
		(DM also)
		[01;36m(SIMPX[00m
			(SIMPX
				(VF
					(NX
						[01;36m(NX[00m
							(NN dienstag)[01;36m)[00m
						(NX funfter mai)))
				(LK konnte)
				(MF ich))
			(DM also)
			(SIMPX funfter sechster mai hatte ich zeit)[01;36m)[00m))
Step:Modifier Attachment
{'new_parent': 'PX', 'new_family': ['ADVX', 'APPR', 'NX'], 'mover info': [('ADVX', (32, 33))], 'old_family': ['ADJX', 'ADVX', 'PX'], 'start left siblings': ['ADJX'], 'auto preterminals': ('PTKA', 'ADJD', 'ADV', 'APPR', 'ART', 'NN'), 'start right siblings': ['PX'], 'end left siblings': [], 'auto preterminal span': (30, 36), 'adding node already present': False, 'movers': ['ADVX'], 'old_parent': 'MF', 'POS confusion': ('ADV', 'ADV'), 'added and moved': True, 'end right siblings': ['APPR', 'NX'], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'SIMPX'}
(TOP
	(TURN
		(DM also)
		(SIMPX ich wurde mal sagen im april ist es ein bischen schlecht)
		(SIMPX
			(VF ich)
			(LK habe)
			(MF
				(PX
					[01;31m(PX[00m
						(APPR in)
						[01;33m(NX[00m (NX der mitte)[01;31m)[00m
					(PX vom april)) [01;33mNX)[00m
				(NX urlaub)))
		[01;31m(PX[00m
			[01;36m(DM[00m
				(ADVX
					(ADV also))[01;36m)[00m
			(PX uber ostern)[01;31m)[00m
		(SIMPX wir fahren uber ostern weg)
		(SIMPX ich wurde am liebsten direkt in den mai gehen)
		(SIMPX und da ware bei mir die erste maiwoche)
		(DM also)
		[01;36m(SIMPX[00m
			(SIMPX
				(VF
					(NX
						[01;36m(NX[00m
							(NN dienstag)[01;36m)[00m
						(NX funfter mai)))
				(LK konnte)
				(MF ich))
			(DM also)
			(SIMPX funfter sechster mai hatte ich zeit)[01;36m)[00m))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['DM', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV',), 'right siblings': [(PX (APPR uber) (NX (NE ostern)))], 'left siblings': [], 'auto preterminal span': (20, 21), 'span': (20, 21), 'parent': 'PX', 'label': 'DM', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		(SIMPX ich wurde mal sagen im april ist es ein bischen schlecht)
		(SIMPX
			(VF ich)
			(LK habe)
			(MF
				(PX
					[01;31m(PX[00m
						(APPR in)
						[01;33m(NX[00m (NX der mitte)[01;31m)[00m
					(PX vom april)) [01;33mNX)[00m
				(NX urlaub)))
		[01;31m(PX[00m
			(DM also)
			(PX uber ostern)[01;31m)[00m
		(SIMPX wir fahren uber ostern weg)
		(SIMPX ich wurde am liebsten direkt in den mai gehen)
		(SIMPX und da ware bei mir die erste maiwoche)
		(DM also)
		[01;36m(SIMPX[00m
			(SIMPX
				(VF
					(NX
						[01;36m(NX[00m
							(NN dienstag)[01;36m)[00m
						(NX funfter mai)))
				(LK konnte)
				(MF ich))
			(DM also)
			(SIMPX funfter sechster mai hatte ich zeit)[01;36m)[00m))
Step:Single Word Phrase
{'subtrees': ['NN'], 'family': ['NX', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('NN',), 'right siblings': [(NX (ADJX (ADJA funfter)) (NN mai))], 'left siblings': [], 'auto preterminal span': (46, 47), 'span': (46, 47), 'parent': 'NX', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		(SIMPX ich wurde mal sagen im april ist es ein bischen schlecht)
		(SIMPX
			(VF ich)
			(LK habe)
			(MF
				(PX
					[01;31m(PX[00m
						(APPR in)
						[01;33m(NX[00m (NX der mitte)[01;31m)[00m
					(PX vom april)) [01;33mNX)[00m
				(NX urlaub)))
		[01;31m(PX[00m
			(DM also)
			(PX uber ostern)[01;31m)[00m
		(SIMPX wir fahren uber ostern weg)
		(SIMPX ich wurde am liebsten direkt in den mai gehen)
		(SIMPX und da ware bei mir die erste maiwoche)
		(DM also)
		[01;36m(SIMPX[00m
			(SIMPX dienstag funfter mai konnte ich)
			(DM also)
			(SIMPX funfter sechster mai hatte ich zeit)[01;36m)[00m))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'DM', 'SIMPX'], 'family': ['DM', 'SIMPX', 'SIMPX', 'PX', 'SIMPX', 'SIMPX', 'SIMPX', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'ADJA', 'NN', 'VMFIN', 'PPER', 'ADV', 'ADJA', 'ADJA', 'NN', 'VAFIN', 'PPER', 'NN'), 'right siblings': [], 'left siblings': [(DM (ADVX (ADV also))), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VAFIN wurde))) (MF (ADVX (ADV mal))) (VC (VXINF (VVINF sagen))) (NF (SIMPX (VF (PX (APPRART im) (NX (NN april)))) (LK (VXFIN (VAFIN ist))) (MF (NX (PPER es)) (ADJX (NX (ART ein) (PIS bischen)) (ADJD schlecht)))))), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VAFIN habe))) (MF (PX (PX (APPR in) (NX (ART der) (NN mitte))) (PX (APPRART vom) (NX (NN april)))) (NX (NN urlaub)))), (PX (DM (ADVX (ADV also))) (PX (APPR uber) (NX (NE ostern)))), (SIMPX (VF (NX (PPER wir))) (LK (VXFIN (VVFIN fahren))) (MF (PX (APPR uber) (NX (NE ostern)))) (VC (PTKVZ weg))), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VAFIN wurde))) (MF (ADJX (PTKA am) (ADJD liebsten)) (MF (PX (ADVX (ADV direkt)) (APPR in) (NX (ART den) (NN mai))))) (VC (VXINF (VVINF gehen)))), (SIMPX (KOORD (KON und)) (VF (ADVX (ADV da))) (LK (VXFIN (VAFIN ware))) (MF (PX (APPR bei) (NX (PPER mir))) (NX (ART die) (ADJX (ADJA erste)) (NN maiwoche)))), (DM (ADVX (ADV also)))], 'auto preterminal span': (46, 58), 'span': (46, 58), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		(SIMPX ich wurde mal sagen im april ist es ein bischen schlecht)
		(SIMPX
			(VF ich)
			(LK habe)
			(MF
				(PX
					[01;31m(PX[00m
						(APPR in)
						[01;33m(NX[00m (NX der mitte)[01;31m)[00m
					(PX vom april)) [01;33mNX)[00m
				(NX urlaub)))
		[01;31m(PX[00m
			(DM also)
			(PX uber ostern)[01;31m)[00m
		(SIMPX wir fahren uber ostern weg)
		(SIMPX ich wurde am liebsten direkt in den mai gehen)
		(SIMPX und da ware bei mir die erste maiwoche)
		(DM also)
		(SIMPX dienstag funfter mai konnte ich also funfter sechster mai hatte ich zeit)))
Step:UNSET remove
{'subtrees': ['APPR', 'NX'], 'family': ['PX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NN', 'APPRART', 'NN'), 'right siblings': ['PX'], 'parent': 'PX', 'auto preterminal span': (14, 19), 'span': (14, 17), 'left siblings': [], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX ich wurde mal sagen im april ist es ein bischen schlecht)
		(SIMPX
			(VF ich)
			(LK habe)
			(MF
				(PX
					(APPR in)
					[01;36m(NX[00m
						(NX der mitte)
						(PX vom april)[01;36m)[00m)
				(NX urlaub)))
		[01;31m(PX[00m
			(DM also)
			(PX uber ostern)[01;31m)[00m
		(SIMPX wir fahren uber ostern weg)
		(SIMPX ich wurde am liebsten direkt in den mai gehen)
		(SIMPX und da ware bei mir die erste maiwoche)
		(DM also)
		(SIMPX dienstag funfter mai konnte ich also funfter sechster mai hatte ich zeit)))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['APPR', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'APPRART', 'NN'), 'right siblings': [], 'left siblings': [(APPR in)], 'auto preterminal span': (15, 19), 'span': (15, 19), 'parent': 'PX', 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		(SIMPX ich wurde mal sagen im april ist es ein bischen schlecht)
		(SIMPX ich habe in der mitte vom april urlaub)
		[01;31m(PX[00m
			(DM also)
			(PX uber ostern)[01;31m)[00m
		(SIMPX wir fahren uber ostern weg)
		(SIMPX ich wurde am liebsten direkt in den mai gehen)
		(SIMPX und da ware bei mir die erste maiwoche)
		(DM also)
		(SIMPX dienstag funfter mai konnte ich also funfter sechster mai hatte ich zeit)))
Step:PP Attachment
{'subtrees': ['DM', 'PX'], 'family': ['DM', 'SIMPX', 'SIMPX', 'PX', 'SIMPX', 'SIMPX', 'SIMPX', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPER', 'VAFIN', 'ADV', 'VVINF', 'APPRART', 'NN', 'VAFIN', 'PPER', 'ART', 'PIS', 'ADJD', 'PPER', 'VAFIN', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'NN', 'ADV', 'APPR', 'NE', 'PPER', 'VVFIN', 'APPR', 'NE', 'PTKVZ', 'PPER', 'VAFIN', 'PTKA', 'ADJD', 'ADV', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'ADV', 'VAFIN', 'APPR', 'PPER', 'ART', 'ADJA', 'NN', 'ADV', 'NN', 'ADJA', 'NN', 'VMFIN', 'PPER', 'ADV', 'ADJA', 'ADJA', 'NN', 'VAFIN', 'PPER', 'NN'), 'right siblings': ['SIMPX', 'SIMPX', 'SIMPX', 'DM', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 58), 'span': (20, 23), 'left siblings': ['DM', 'SIMPX', 'SIMPX'], 'label': 'PX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP also ich wurde mal sagen im april ist es ein bischen schlecht ich habe in der mitte vom april urlaub also uber ostern wir fahren uber ostern weg ich wurde am liebsten direkt in den mai gehen und da ware bei mir die erste maiwoche also dienstag funfter mai konnte ich also funfter sechster mai hatte ich zeit)

Sentence 454:
1 Initial errors
0 on fringe, 1 iterations
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM okay)
		(SIMPX dann haben wir da keine chance)
		(SIMPX
			(VF wie)
			(LK ware)
			(MF
				(NX es)
				[01;31m(PX[00m
					(PX in der nachsten woche)
					(NX montag dienstag)[01;31m)[00m))
		(SIMPX das ist der elfte und zwolfte mai)))
Step:UNSET remove
{'subtrees': ['PX', 'NX'], 'family': ['NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'APPR', 'ART', 'ADJA', 'NN', 'NN', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (9, 16), 'span': (10, 16), 'left siblings': ['NX'], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP okay dann haben wir da keine chance wie ware es in der nachsten woche montag dienstag das ist der elfte und zwolfte mai)

Sentence 455:
0 Initial errors
0 on fringe, 0 iterations

Sentence 456:
23 Initial errors
0 on fringe, 15 iterations
3 Error:UNSET move
2 Error:Different label
2 Error:Different label
2 Error:Different label
2 Error:Single Word Phrase
2 Error:UNSET move
2 Error:UNSET move
1 Error:Unary
1 Error:Clause Attachment
1 Error:Clause Attachment
1 Error:Unary
1 Error:UNSET add
1 Error:Unary
1 Error:UNSET remove
1 Error:Clause Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM also)
		(SIMPX
			(VF ich)
			(LK denke)
			[01;36m(NF[00m
				[01;36m(SIMPX[00m
					[01;31m(SIMPX[00m
						(LK sagen)
						[01;33m(MF (MF[00m (MF wir mal)[01;31m)[00m
					[01;31m(MF[00m
						[01;31m(NX[00m
							(PX mit dem ice) [01;33mMF)[00m
							(NX funf stunden)
							(PX nach hannover)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m) [01;33mMF)[00m
		[01;36m(SIMPX[00m
			(SIMPX und wir mussen)
			(DM na ja)
			(SIMPX funfzehn uhr mussen wir vielleicht da sein)[01;36m)[00m
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				[01;36m(VF[00m [01;31m(LV[00m
					(SIMPX
						(C wenn)
						(MF wir dann um neun oder zehn)
						(VC fahren))[01;31m)[00m[01;36m)[00m
				(SIMPX sagen wir wir konnten um neun fahren)[01;36m)[00m
			(VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK nehmen)
					(MF wir ein zweites fruhstuck im ice)[01;31m)[00m
				[01;36m(SIMPX[00m
					[01;36m(SIMPX[00m [01;31m(LKM[00m
						(LK lesen)
						[01;36m(MF[00m
							(NX
								(ART ein)
								(ADJX bischen)
								(NN zeitung))[01;36m)[00m[01;31m)[00m[01;36m)[00m
					[01;36m(SIMPX[00m
						[01;36m(SIMPX[00m [01;31m(LKMVC[00m
							(LK haben)
							(MF das meeting)
							(VC vorbereitet)[01;31m)[00m[01;36m)[00m
						(KON und)
						(LKMVC
							(LK kommen)
							(MF
								(ADVX dann)
								(PX
									(APPR um)
									(NX
										[01;36m(ADJX[00m [01;31m(NX[00m
											(CARD zwei)[01;31m)[00m[01;36m)[00m
										(KON oder)
										(NX drei)))
								(PX in hannover))
							(VC an))[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX das ware doch)
		(SIMPX das konnten wir noch machen)))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['LK', 'MF', 'MF'], 'mover info': [('MF', (6, 13))], 'old_family': ['VF', 'LK', 'SIMPX', 'MF'], 'start left siblings': ['VF', 'LK', 'SIMPX'], 'auto preterminals': ('PPER', 'VVFIN', 'VVFIN', 'PPER', 'ADV', 'APPR', 'ART', 'NE', 'CARD', 'NN', 'APPR', 'NE'), 'start right siblings': [], 'end left siblings': ['LK', 'MF'], 'auto preterminal span': (1, 13), 'adding node already present': False, 'movers': ['MF'], 'old_parent': 'SIMPX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'ADJX'}
(TOP
	(TURN
		(DM also)
		(SIMPX
			(VF ich)
			(LK denke)
			[01;36m(NF[00m
				(SIMPX
					(LK sagen)
					(MF [01;33m(MF[00m
						(MF wir mal)
						[01;31m(MF[00m
							[01;31m(NX[00m
								(PX mit dem ice) [01;33mMF)[00m
								(NX funf stunden)
								(PX nach hannover)[01;31m)[00m[01;31m)[00m))[01;36m)[00m)
		[01;36m(SIMPX[00m
			(SIMPX und wir mussen)
			(DM na ja)
			(SIMPX funfzehn uhr mussen wir vielleicht da sein)[01;36m)[00m
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				[01;36m(VF[00m [01;31m(LV[00m
					(SIMPX
						(C wenn)
						(MF wir dann um neun oder zehn)
						(VC fahren))[01;31m)[00m[01;36m)[00m
				(SIMPX sagen wir wir konnten um neun fahren)[01;36m)[00m
			(VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK nehmen)
					(MF wir ein zweites fruhstuck im ice)[01;31m)[00m
				[01;36m(SIMPX[00m
					[01;36m(SIMPX[00m [01;31m(LKM[00m
						(LK lesen)
						[01;36m(MF[00m
							(NX
								(ART ein)
								(ADJX bischen)
								(NN zeitung))[01;36m)[00m[01;31m)[00m[01;36m)[00m
					[01;36m(SIMPX[00m
						[01;36m(SIMPX[00m [01;31m(LKMVC[00m
							(LK haben)
							(MF das meeting)
							(VC vorbereitet)[01;31m)[00m[01;36m)[00m
						(KON und)
						(LKMVC
							(LK kommen)
							(MF
								(ADVX dann)
								(PX
									(APPR um)
									(NX
										[01;36m(ADJX[00m [01;31m(NX[00m
											(CARD zwei)[01;31m)[00m[01;36m)[00m
										(KON oder)
										(NX drei)))
								(PX in hannover))
							(VC an))[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX das ware doch)
		(SIMPX das konnten wir noch machen)))
Step:Different label
{'family': ['VF', 'SIMPX', 'VF', 'FKOORD'], 'auto preterminal span': (25, 33), 'span': (25, 33), 'subtrees': ['SIMPX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'APPR', 'CARD', 'KON', 'CARD', 'VVFIN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('LV', 'VF')}
(TOP
	(TURN
		(DM also)
		(SIMPX
			(VF ich)
			(LK denke)
			[01;36m(NF[00m
				(SIMPX
					(LK sagen)
					(MF [01;33m(MF[00m
						(MF wir mal)
						[01;31m(MF[00m
							[01;31m(NX[00m
								(PX mit dem ice) [01;33mMF)[00m
								(NX funf stunden)
								(PX nach hannover)[01;31m)[00m[01;31m)[00m))[01;36m)[00m)
		[01;36m(SIMPX[00m
			(SIMPX und wir mussen)
			(DM na ja)
			(SIMPX funfzehn uhr mussen wir vielleicht da sein)[01;36m)[00m
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(VF wenn wir dann um neun oder zehn fahren)
				(SIMPX sagen wir wir konnten um neun fahren)[01;36m)[00m
			(VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK nehmen)
					(MF wir ein zweites fruhstuck im ice)[01;31m)[00m
				[01;36m(SIMPX[00m
					[01;36m(SIMPX[00m [01;31m(LKM[00m
						(LK lesen)
						[01;36m(MF[00m
							(NX
								(ART ein)
								(ADJX bischen)
								(NN zeitung))[01;36m)[00m[01;31m)[00m[01;36m)[00m
					[01;36m(SIMPX[00m
						[01;36m(SIMPX[00m [01;31m(LKMVC[00m
							(LK haben)
							(MF das meeting)
							(VC vorbereitet)[01;31m)[00m[01;36m)[00m
						(KON und)
						(LKMVC
							(LK kommen)
							(MF
								(ADVX dann)
								(PX
									(APPR um)
									(NX
										[01;36m(ADJX[00m [01;31m(NX[00m
											(CARD zwei)[01;31m)[00m[01;36m)[00m
										(KON oder)
										(NX drei)))
								(PX in hannover))
							(VC an))[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX das ware doch)
		(SIMPX das konnten wir noch machen)))
Step:Different label
{'family': ['LKM', 'SIMPX', 'LKMVC', 'KON', 'LKMVC'], 'auto preterminal span': (48, 52), 'span': (48, 52), 'subtrees': ['LK', 'NX'], 'parent': 'FKOORD', 'over_word': False, 'auto preterminals': ('VVFIN', 'ART', 'PIDAT', 'NN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('LKM', 'SIMPX')}
(TOP
	(TURN
		(DM also)
		(SIMPX
			(VF ich)
			(LK denke)
			[01;36m(NF[00m
				(SIMPX
					(LK sagen)
					(MF [01;33m(MF[00m
						(MF wir mal)
						[01;31m(MF[00m
							[01;31m(NX[00m
								(PX mit dem ice) [01;33mMF)[00m
								(NX funf stunden)
								(PX nach hannover)[01;31m)[00m[01;31m)[00m))[01;36m)[00m)
		[01;36m(SIMPX[00m
			(SIMPX und wir mussen)
			(DM na ja)
			(SIMPX funfzehn uhr mussen wir vielleicht da sein)[01;36m)[00m
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(VF wenn wir dann um neun oder zehn fahren)
				(SIMPX sagen wir wir konnten um neun fahren)[01;36m)[00m
			(VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK nehmen)
					(MF wir ein zweites fruhstuck im ice)[01;31m)[00m
				[01;36m(SIMPX[00m
					(SIMPX
						(LK lesen)
						[01;36m(MF[00m
							(NX
								(ART ein)
								(ADJX bischen)
								(NN zeitung))[01;36m)[00m)
					[01;36m(SIMPX[00m
						[01;36m(SIMPX[00m [01;31m(LKMVC[00m
							(LK haben)
							(MF das meeting)
							(VC vorbereitet)[01;31m)[00m[01;36m)[00m
						(KON und)
						(LKMVC
							(LK kommen)
							(MF
								(ADVX dann)
								(PX
									(APPR um)
									(NX
										[01;36m(ADJX[00m [01;31m(NX[00m
											(CARD zwei)[01;31m)[00m[01;36m)[00m
										(KON oder)
										(NX drei)))
								(PX in hannover))
							(VC an))[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX das ware doch)
		(SIMPX das konnten wir noch machen)))
Step:Different label
{'family': ['LKM', 'SIMPX', 'SIMPX', 'KON', 'LKMVC'], 'auto preterminal span': (52, 56), 'span': (52, 56), 'subtrees': ['LK', 'MF', 'VC'], 'parent': 'FKOORD', 'over_word': False, 'auto preterminals': ('VAFIN', 'ART', 'NN', 'VVPP'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('LKMVC', 'SIMPX')}
(TOP
	(TURN
		(DM also)
		(SIMPX
			(VF ich)
			(LK denke)
			[01;36m(NF[00m
				(SIMPX
					(LK sagen)
					(MF [01;33m(MF[00m
						(MF wir mal)
						[01;31m(MF[00m
							[01;31m(NX[00m
								(PX mit dem ice) [01;33mMF)[00m
								(NX funf stunden)
								(PX nach hannover)[01;31m)[00m[01;31m)[00m))[01;36m)[00m)
		[01;36m(SIMPX[00m
			(SIMPX und wir mussen)
			(DM na ja)
			(SIMPX funfzehn uhr mussen wir vielleicht da sein)[01;36m)[00m
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(VF wenn wir dann um neun oder zehn fahren)
				(SIMPX sagen wir wir konnten um neun fahren)[01;36m)[00m
			(VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK nehmen)
					(MF wir ein zweites fruhstuck im ice)[01;31m)[00m
				[01;36m(SIMPX[00m
					(SIMPX
						(LK lesen)
						[01;36m(MF[00m
							(NX
								(ART ein)
								(ADJX bischen)
								(NN zeitung))[01;36m)[00m)
					[01;36m(SIMPX[00m
						(SIMPX haben das meeting vorbereitet)
						(KON und)
						(LKMVC
							(LK kommen)
							(MF
								(ADVX dann)
								(PX
									(APPR um)
									(NX
										[01;36m(ADJX[00m [01;31m(NX[00m
											(CARD zwei)[01;31m)[00m[01;36m)[00m
										(KON oder)
										(NX drei)))
								(PX in hannover))
							(VC an))[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX das ware doch)
		(SIMPX das konnten wir noch machen)))
Step:Single Word Phrase
{'family': ['ADJX', 'KON', 'NX'], 'auto preterminal span': (60, 61), 'span': (60, 61), 'subtrees': ['CARD'], 'parent': 'NX', 'over_word': True, 'auto preterminals': ('CARD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('NX', 'ADJX')}
(TOP
	(TURN
		(DM also)
		(SIMPX
			(VF ich)
			(LK denke)
			[01;36m(NF[00m
				(SIMPX
					(LK sagen)
					(MF [01;33m(MF[00m
						(MF wir mal)
						[01;31m(MF[00m
							[01;31m(NX[00m
								(PX mit dem ice) [01;33mMF)[00m
								(NX funf stunden)
								(PX nach hannover)[01;31m)[00m[01;31m)[00m))[01;36m)[00m)
		[01;36m(SIMPX[00m
			(SIMPX und wir mussen)
			(DM na ja)
			(SIMPX funfzehn uhr mussen wir vielleicht da sein)[01;36m)[00m
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(VF wenn wir dann um neun oder zehn fahren)
				(SIMPX sagen wir wir konnten um neun fahren)[01;36m)[00m
			(VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK nehmen)
					(MF wir ein zweites fruhstuck im ice)[01;31m)[00m
				[01;36m(SIMPX[00m
					(SIMPX
						(LK lesen)
						[01;36m(MF[00m
							(NX
								(ART ein)
								(ADJX bischen)
								(NN zeitung))[01;36m)[00m)
					[01;36m(SIMPX[00m
						(SIMPX haben das meeting vorbereitet)
						(KON und)
						(LKMVC kommen dann um zwei oder drei in hannover an)[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX das ware doch)
		(SIMPX das konnten wir noch machen)))
Step:UNSET move
{'new_parent': 'NX', 'new_family': ['MF', 'PX', 'NX', 'PX'], 'mover info': [('MF', (4, 6))], 'old_family': ['MF', 'MF'], 'start left siblings': [], 'auto preterminals': ('PPER', 'ADV', 'APPR', 'ART', 'NE', 'CARD', 'NN', 'APPR', 'NE'), 'start right siblings': ['MF'], 'end left siblings': [], 'auto preterminal span': (4, 13), 'adding node already present': False, 'movers': ['MF'], 'old_parent': 'MF', 'added and moved': True, 'end right siblings': ['PX', 'NX', 'PX'], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'SIMPX'}
(TOP
	(TURN
		(DM also)
		(SIMPX
			(VF ich)
			(LK denke)
			[01;36m(NF[00m
				(SIMPX
					(LK sagen)
					(MF
						[01;31m(NX[00m
							(MF wir mal mit dem ice)
							(NX funf stunden)
							(PX nach hannover)[01;31m)[00m))[01;36m)[00m)
		[01;36m(SIMPX[00m
			(SIMPX und wir mussen)
			(DM na ja)
			(SIMPX funfzehn uhr mussen wir vielleicht da sein)[01;36m)[00m
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(VF wenn wir dann um neun oder zehn fahren)
				(SIMPX sagen wir wir konnten um neun fahren)[01;36m)[00m
			(VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK nehmen)
					(MF wir ein zweites fruhstuck im ice)[01;31m)[00m
				[01;36m(SIMPX[00m
					(SIMPX
						(LK lesen)
						[01;36m(MF[00m
							(NX
								(ART ein)
								(ADJX bischen)
								(NN zeitung))[01;36m)[00m)
					[01;36m(SIMPX[00m
						(SIMPX haben das meeting vorbereitet)
						(KON und)
						(LKMVC kommen dann um zwei oder drei in hannover an)[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX das ware doch)
		(SIMPX das konnten wir noch machen)))
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['DM', 'SIMPX', 'SIMPX', 'DM', 'SIMPX', 'SIMPX', 'VF', 'FKOORD', 'SIMPX', 'SIMPX'], 'mover info': [('VF', (40, 41)), ('FKOORD', (41, 66))], 'old_family': ['VF', 'SIMPX', 'VF', 'FKOORD'], 'start left siblings': ['VF', 'SIMPX'], 'auto preterminals': ('ADV', 'PPER', 'VVFIN', 'VVFIN', 'PPER', 'ADV', 'APPR', 'ART', 'NE', 'CARD', 'NN', 'APPR', 'NE', 'KON', 'PPER', 'VMFIN', 'ITJ', 'PTKANT', 'CARD', 'NN', 'VMFIN', 'PPER', 'ADV', 'ADV', 'VAINF', 'KOUS', 'PPER', 'ADV', 'APPR', 'CARD', 'KON', 'CARD', 'VVFIN', 'VVFIN', 'PPER', 'PPER', 'VMFIN', 'APPR', 'CARD', 'VVINF', 'ADV', 'VVFIN', 'PPER', 'ART', 'ADJA', 'NN', 'APPRART', 'NE', 'VVFIN', 'ART', 'PIDAT', 'NN', 'VAFIN', 'ART', 'NN', 'VVPP', 'KON', 'VVFIN', 'ADV', 'APPR', 'CARD', 'KON', 'CARD', 'APPR', 'NE', 'PTKVZ', 'PDS', 'VAFIN', 'ADV', 'PDS', 'VMFIN', 'PPER', 'ADV', 'VVINF'), 'start right siblings': [], 'end left siblings': ['DM', 'SIMPX', 'SIMPX', 'DM', 'SIMPX', 'SIMPX'], 'auto preterminal span': (0, 74), 'movers': ['VF', 'FKOORD'], 'old_parent': 'SIMPX', 'end right siblings': ['SIMPX', 'SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM also)
		(SIMPX
			(VF ich)
			(LK denke)
			[01;36m(NF[00m
				(SIMPX
					(LK sagen)
					(MF
						[01;31m(NX[00m
							(MF wir mal mit dem ice)
							(NX funf stunden)
							(PX nach hannover)[01;31m)[00m))[01;36m)[00m)
		[01;36m(SIMPX[00m
			(SIMPX und wir mussen)
			(DM na ja)
			(SIMPX funfzehn uhr mussen wir vielleicht da sein)[01;36m)[00m
		(SIMPX wenn wir dann um neun oder zehn fahren sagen wir wir konnten um neun fahren)
		(VF dann)
		[01;31m(FKOORD[00m
			[01;31m(LKM[00m
				(LK nehmen)
				(MF wir ein zweites fruhstuck im ice)[01;31m)[00m
			[01;36m(SIMPX[00m
				(SIMPX
					(LK lesen)
					[01;36m(MF[00m
						(NX
							(ART ein)
							(ADJX bischen)
							(NN zeitung))[01;36m)[00m)
				[01;36m(SIMPX[00m
					(SIMPX haben das meeting vorbereitet)
					(KON und)
					(LKMVC kommen dann um zwei oder drei in hannover an)[01;36m)[00m[01;36m)[00m[01;31m)[00m
		(SIMPX das ware doch)
		(SIMPX das konnten wir noch machen)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['VF', 'LK', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'ADV', 'APPR', 'ART', 'NE', 'CARD', 'NN', 'APPR', 'NE'), 'right siblings': [], 'left siblings': [(VF (NX (PPER ich))), (LK (VXFIN (VVFIN denke)))], 'auto preterminal span': (3, 13), 'span': (3, 13), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		(SIMPX
			(VF ich)
			(LK denke)
			(NF
				(SIMPX
					(LK sagen)
					(MF
						[01;31m(NX[00m
							(MF wir mal mit dem ice)
							(NX funf stunden)
							(PX nach hannover)[01;31m)[00m))))
		[01;36m(SIMPX[00m
			(SIMPX und wir mussen)
			(DM na ja)
			(SIMPX funfzehn uhr mussen wir vielleicht da sein)[01;36m)[00m
		(SIMPX wenn wir dann um neun oder zehn fahren sagen wir wir konnten um neun fahren)
		(VF dann)
		[01;31m(FKOORD[00m
			[01;31m(LKM[00m
				(LK nehmen)
				(MF wir ein zweites fruhstuck im ice)[01;31m)[00m
			[01;36m(SIMPX[00m
				(SIMPX
					(LK lesen)
					[01;36m(MF[00m
						(NX
							(ART ein)
							(ADJX bischen)
							(NN zeitung))[01;36m)[00m)
				[01;36m(SIMPX[00m
					(SIMPX haben das meeting vorbereitet)
					(KON und)
					(LKMVC kommen dann um zwei oder drei in hannover an)[01;36m)[00m[01;36m)[00m[01;31m)[00m
		(SIMPX das ware doch)
		(SIMPX das konnten wir noch machen)))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'DM', 'SIMPX'], 'family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'VF', 'FKOORD', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'PPER', 'VMFIN', 'ITJ', 'PTKANT', 'CARD', 'NN', 'VMFIN', 'PPER', 'ADV', 'ADV', 'VAINF'), 'right siblings': [(SIMPX (VF (SIMPX (C (KOUS wenn)) (MF (NX (PPER wir)) (ADVX (ADV dann)) (PX (APPR um) (NX (NX (CARD neun)) (KON oder) (NX (CARD zehn))))) (VC (VXFIN (VVFIN fahren))))) (SIMPX (LK (VXFIN (VVFIN sagen))) (MF (NX (PPER wir))) (NF (SIMPX (VF (NX (PPER wir))) (LK (VXFIN (VMFIN konnten))) (MF (PX (APPR um) (NX (CARD neun)))) (VC (VXINF (VVINF fahren))))))), (VF (ADVX (ADV dann))), (FKOORD (LKM (LK (VXFIN (VVFIN nehmen))) (MF (NX (PPER wir)) (NX (ART ein) (ADJX (ADJA zweites)) (NN fruhstuck)) (PX (APPRART im) (NX (NE ice))))) (SIMPX (LK (VXFIN (VVFIN lesen))) (NX (ART ein) (ADJX (PIDAT bischen)) (NN zeitung))) (SIMPX (LK (VXFIN (VAFIN haben))) (MF (NX (ART das) (NN meeting))) (VC (VXINF (VVPP vorbereitet)))) (KON und) (LKMVC (LK (VXFIN (VVFIN kommen))) (MF (ADVX (ADV dann)) (PX (APPR um) (NX (ADJX (CARD zwei)) (KON oder) (NX (CARD drei)))) (PX (APPR in) (NX (NE hannover)))) (VC (PTKVZ an)))), (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VAFIN ware))) (MF (ADVX (ADV doch)))), (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VMFIN konnten))) (MF (NX (PPER wir)) (ADVX (ADV noch))) (VC (VXINF (VVINF machen))))], 'left siblings': [(DM (ADVX (ADV also))), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN denke))) (NF (SIMPX (LK (VXFIN (VVFIN sagen))) (MF (NX (MF (MF (NX (PPER wir)) (ADVX (ADV mal))) (PX (APPR mit) (NX (ART dem) (NE ice)))) (NX (ADJX (CARD funf)) (NN stunden)) (PX (APPR nach) (NX (NE hannover))))))))], 'auto preterminal span': (13, 25), 'span': (13, 25), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		(SIMPX
			(VF ich)
			(LK denke)
			(NF
				(SIMPX
					(LK sagen)
					(MF
						[01;31m(NX[00m
							(MF wir mal mit dem ice)
							(NX funf stunden)
							(PX nach hannover)[01;31m)[00m))))
		(SIMPX und wir mussen na ja funfzehn uhr mussen wir vielleicht da sein)
		(SIMPX wenn wir dann um neun oder zehn fahren sagen wir wir konnten um neun fahren)
		(VF dann)
		[01;31m(FKOORD[00m
			[01;31m(LKM[00m
				(LK nehmen)
				(MF wir ein zweites fruhstuck im ice)[01;31m)[00m
			[01;36m(SIMPX[00m
				(SIMPX
					(LK lesen)
					[01;36m(MF[00m
						(NX
							(ART ein)
							(ADJX bischen)
							(NN zeitung))[01;36m)[00m)
				[01;36m(SIMPX[00m
					(SIMPX haben das meeting vorbereitet)
					(KON und)
					(LKMVC kommen dann um zwei oder drei in hannover an)[01;36m)[00m[01;36m)[00m[01;31m)[00m
		(SIMPX das ware doch)
		(SIMPX das konnten wir noch machen)))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX', 'KON', 'LKMVC'], 'family': ['LKM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'ART', 'PIDAT', 'NN', 'VAFIN', 'ART', 'NN', 'VVPP', 'KON', 'VVFIN', 'ADV', 'APPR', 'CARD', 'KON', 'CARD', 'APPR', 'NE', 'PTKVZ'), 'right siblings': [], 'left siblings': [(LKM (LK (VXFIN (VVFIN nehmen))) (MF (NX (PPER wir)) (NX (ART ein) (ADJX (ADJA zweites)) (NN fruhstuck)) (PX (APPRART im) (NX (NE ice)))))], 'auto preterminal span': (48, 66), 'span': (48, 66), 'parent': 'FKOORD', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		(SIMPX
			(VF ich)
			(LK denke)
			(NF
				(SIMPX
					(LK sagen)
					(MF
						[01;31m(NX[00m
							(MF wir mal mit dem ice)
							(NX funf stunden)
							(PX nach hannover)[01;31m)[00m))))
		(SIMPX und wir mussen na ja funfzehn uhr mussen wir vielleicht da sein)
		(SIMPX wenn wir dann um neun oder zehn fahren sagen wir wir konnten um neun fahren)
		(VF dann)
		[01;31m(FKOORD[00m
			[01;31m(LKM[00m
				(LK nehmen)
				(MF wir ein zweites fruhstuck im ice)[01;31m)[00m
			(SIMPX
				(SIMPX
					(LK lesen)
					[01;36m(MF[00m
						(NX
							(ART ein)
							(ADJX bischen)
							(NN zeitung))[01;36m)[00m)
				[01;36m(SIMPX[00m
					(SIMPX haben das meeting vorbereitet)
					(KON und)
					(LKMVC kommen dann um zwei oder drei in hannover an)[01;36m)[00m)[01;31m)[00m
		(SIMPX das ware doch)
		(SIMPX das konnten wir noch machen)))
Step:Unary
{'subtrees': ['NX'], 'family': ['LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'PIDAT', 'NN'), 'right siblings': [], 'left siblings': [(LK (VXFIN (VVFIN lesen)))], 'auto preterminal span': (49, 52), 'span': (49, 52), 'parent': 'SIMPX', 'label': 'MF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		(SIMPX
			(VF ich)
			(LK denke)
			(NF
				(SIMPX
					(LK sagen)
					(MF
						[01;31m(NX[00m
							(MF wir mal mit dem ice)
							(NX funf stunden)
							(PX nach hannover)[01;31m)[00m))))
		(SIMPX und wir mussen na ja funfzehn uhr mussen wir vielleicht da sein)
		(SIMPX wenn wir dann um neun oder zehn fahren sagen wir wir konnten um neun fahren)
		(VF dann)
		[01;31m(FKOORD[00m
			[01;31m(LKM[00m
				(LK nehmen)
				(MF wir ein zweites fruhstuck im ice)[01;31m)[00m
			(SIMPX
				(SIMPX lesen ein bischen zeitung)
				[01;36m(SIMPX[00m
					(SIMPX haben das meeting vorbereitet)
					(KON und)
					(LKMVC kommen dann um zwei oder drei in hannover an)[01;36m)[00m)[01;31m)[00m
		(SIMPX das ware doch)
		(SIMPX das konnten wir noch machen)))
Step:UNSET add
{'subtrees': ['SIMPX', 'KON', 'LKMVC'], 'family': ['SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'ART', 'NN', 'VVPP', 'KON', 'VVFIN', 'ADV', 'APPR', 'CARD', 'KON', 'CARD', 'APPR', 'NE', 'PTKVZ'), 'right siblings': [], 'left siblings': [(SIMPX (LK (VXFIN (VVFIN lesen))) (MF (NX (ART ein) (ADJX (PIDAT bischen)) (NN zeitung))))], 'auto preterminal span': (52, 66), 'span': (52, 66), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		(SIMPX
			(VF ich)
			(LK denke)
			(NF
				(SIMPX
					(LK sagen)
					(MF
						[01;31m(NX[00m
							(MF wir mal mit dem ice)
							(NX funf stunden)
							(PX nach hannover)[01;31m)[00m))))
		(SIMPX und wir mussen na ja funfzehn uhr mussen wir vielleicht da sein)
		(SIMPX wenn wir dann um neun oder zehn fahren sagen wir wir konnten um neun fahren)
		(VF dann)
		[01;31m(FKOORD[00m
			[01;31m(LKM[00m
				(LK nehmen)
				(MF wir ein zweites fruhstuck im ice)[01;31m)[00m
			(SIMPX lesen ein bischen zeitung haben das meeting vorbereitet und kommen dann um zwei oder drei in hannover an)[01;31m)[00m
		(SIMPX das ware doch)
		(SIMPX das konnten wir noch machen)))
Step:Unary
{'subtrees': ['MF', 'NX', 'PX'], 'family': ['NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV', 'APPR', 'ART', 'NE', 'CARD', 'NN', 'APPR', 'NE'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (4, 13), 'span': (4, 13), 'left siblings': [], 'label': 'NX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX ich denke sagen wir mal mit dem ice funf stunden nach hannover)
		(SIMPX und wir mussen na ja funfzehn uhr mussen wir vielleicht da sein)
		(SIMPX wenn wir dann um neun oder zehn fahren sagen wir wir konnten um neun fahren)
		(VF dann)
		[01;31m(FKOORD[00m
			[01;31m(LKM[00m
				(LK nehmen)
				(MF wir ein zweites fruhstuck im ice)[01;31m)[00m
			(SIMPX lesen ein bischen zeitung haben das meeting vorbereitet und kommen dann um zwei oder drei in hannover an)[01;31m)[00m
		(SIMPX das ware doch)
		(SIMPX das konnten wir noch machen)))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['LKM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'ART', 'ADJA', 'NN', 'APPRART', 'NE', 'VVFIN', 'ART', 'PIDAT', 'NN', 'VAFIN', 'ART', 'NN', 'VVPP', 'KON', 'VVFIN', 'ADV', 'APPR', 'CARD', 'KON', 'CARD', 'APPR', 'NE', 'PTKVZ'), 'right siblings': ['SIMPX'], 'parent': 'FKOORD', 'auto preterminal span': (41, 66), 'span': (41, 48), 'left siblings': [], 'label': 'LKM', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX ich denke sagen wir mal mit dem ice funf stunden nach hannover)
		(SIMPX und wir mussen na ja funfzehn uhr mussen wir vielleicht da sein)
		(SIMPX wenn wir dann um neun oder zehn fahren sagen wir wir konnten um neun fahren)
		(VF dann)
		[01;31m(FKOORD[00m
			(LK nehmen)
			(MF wir ein zweites fruhstuck im ice)
			(SIMPX lesen ein bischen zeitung haben das meeting vorbereitet und kommen dann um zwei oder drei in hannover an)[01;31m)[00m
		(SIMPX das ware doch)
		(SIMPX das konnten wir noch machen)))
Step:Clause Attachment
{'subtrees': ['LK', 'MF', 'SIMPX'], 'family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'VF', 'FKOORD', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPER', 'VVFIN', 'VVFIN', 'PPER', 'ADV', 'APPR', 'ART', 'NE', 'CARD', 'NN', 'APPR', 'NE', 'KON', 'PPER', 'VMFIN', 'ITJ', 'PTKANT', 'CARD', 'NN', 'VMFIN', 'PPER', 'ADV', 'ADV', 'VAINF', 'KOUS', 'PPER', 'ADV', 'APPR', 'CARD', 'KON', 'CARD', 'VVFIN', 'VVFIN', 'PPER', 'PPER', 'VMFIN', 'APPR', 'CARD', 'VVINF', 'ADV', 'VVFIN', 'PPER', 'ART', 'ADJA', 'NN', 'APPRART', 'NE', 'VVFIN', 'ART', 'PIDAT', 'NN', 'VAFIN', 'ART', 'NN', 'VVPP', 'KON', 'VVFIN', 'ADV', 'APPR', 'CARD', 'KON', 'CARD', 'APPR', 'NE', 'PTKVZ', 'PDS', 'VAFIN', 'ADV', 'PDS', 'VMFIN', 'PPER', 'ADV', 'VVINF'), 'right siblings': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 74), 'span': (41, 66), 'left siblings': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'VF'], 'label': 'FKOORD', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP also ich denke sagen wir mal mit dem ice funf stunden nach hannover und wir mussen na ja funfzehn uhr mussen wir vielleicht da sein wenn wir dann um neun oder zehn fahren sagen wir wir konnten um neun fahren dann nehmen wir ein zweites fruhstuck im ice lesen ein bischen zeitung haben das meeting vorbereitet und kommen dann um zwei oder drei in hannover an das ware doch das konnten wir noch machen)

Sentence 457:
7 Initial errors
0 on fringe, 3 iterations
2 Error:Clause Attachment
4 Error:Co-ordination
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(PX grade am montag)
		[01;36m(SIMPX[00m
			[01;36m(SIMPX[00m
				[01;31m(DM[00m
					[01;31m(NX[00m
						[01;36m(KOORD[00m
							(KON und)[01;36m)[00m
						[01;36m(DM[00m
							(NX
								(NN moment))[01;36m)[00m[01;31m)[00m[01;31m)[00m
				(SIMPX wir hatten)[01;36m)[00m
			[01;31m(SIMPX[00m
				(VF wir)
				(LK haben)
				(MF ein datum)[01;31m)[00m[01;36m)[00m
		(SIMPX wir haben einen zug)
		(SIMPX wie kommen wir denn zuruck)
		(SIMPX hast du informationen uber eine ruckreise)))
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['DM', 'SIMPX', 'VF', 'LK', 'MF'], 'mover info': [('DM', (3, 5)), ('SIMPX', (5, 7))], 'old_family': ['PX', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'start left siblings': ['PX'], 'auto preterminals': ('ADV', 'APPRART', 'NN', 'KON', 'NN', 'PPER', 'VAFIN', 'PPER', 'VAFIN', 'ART', 'NN', 'PPER', 'VAFIN', 'ART', 'NN', 'PWAV', 'VVFIN', 'PPER', 'ADV', 'PTKVZ', 'VAFIN', 'PPER', 'NN', 'APPR', 'ART', 'NN'), 'start right siblings': ['SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'end left siblings': [], 'auto preterminal span': (0, 26), 'movers': ['DM', 'SIMPX'], 'old_parent': 'TURN', 'end right siblings': ['VF', 'LK', 'MF'], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(PX grade am montag)
		(SIMPX
			[01;36m(SIMPX[00m
				[01;31m(DM[00m
					[01;31m(NX[00m
						[01;36m(KOORD[00m
							(KON und)[01;36m)[00m
						[01;36m(DM[00m
							(NX
								(NN moment))[01;36m)[00m[01;31m)[00m[01;31m)[00m
				(SIMPX wir hatten)[01;36m)[00m
			(VF wir)
			(LK haben)
			(MF ein datum))
		(SIMPX wir haben einen zug)
		(SIMPX wie kommen wir denn zuruck)
		(SIMPX hast du informationen uber eine ruckreise)))
Step:Co-ordination
{'new_parent': 'SIMPX', 'new_family': ['KON', 'DM', 'SIMPX', 'VF', 'LK', 'MF'], 'mover info': [('KON', (3, 4))], 'old_family': ['KON', 'NX'], 'start left siblings': [], 'auto preterminals': ('KON', 'NN', 'PPER', 'VAFIN', 'PPER', 'VAFIN', 'ART', 'NN'), 'start right siblings': ['NX'], 'end left siblings': [], 'auto preterminal span': (3, 11), 'adding node already present': False, 'movers': ['KON'], 'old_parent': 'NX', 'POS confusion': ('KON', 'KON'), 'added and moved': True, 'end right siblings': ['DM', 'SIMPX', 'VF', 'LK', 'MF'], 'classified_type': 'Co-ordination', 'type': 'move', 'added label': 'SIMPX'}
(TOP
	(TURN
		(PX grade am montag)
		(SIMPX
			(SIMPX
				[01;36m(KOORD[00m
					(KON und)[01;36m)[00m
				(DM moment)
				(SIMPX wir hatten))
			(VF wir)
			(LK haben)
			(MF ein datum))
		(SIMPX wir haben einen zug)
		(SIMPX wie kommen wir denn zuruck)
		(SIMPX hast du informationen uber eine ruckreise)))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['KOORD', 'DM', 'SIMPX'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON',), 'right siblings': [(DM (NX (NN moment))), (SIMPX (VF (NX (PPER wir))) (LK (VXFIN (VAFIN hatten))))], 'left siblings': [], 'auto preterminal span': (3, 4), 'span': (3, 4), 'parent': 'SIMPX', 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP grade am montag und moment wir hatten wir haben ein datum wir haben einen zug wie kommen wir denn zuruck hast du informationen uber eine ruckreise)

Sentence 458:
63 Initial errors
0 on fringe, 48 iterations
4 Error:UNSET move
4 Error:PP Attachment
3 Error:NP Attachment
2 Error:Single Word Phrase
2 Error:Different label
2 Error:Single Word Phrase
2 Error:Single Word Phrase
2 Error:UNSET move
1 Error:Single Word Phrase
1 Error:Modifier Attachment
1 Error:Single Word Phrase
1 Error:Unary
1 Error:Single Word Phrase
1 Error:PP Attachment
1 Error:Unary
1 Error:Unary
1 Error:UNSET remove
1 Error:Modifier Attachment
1 Error:UNSET add
1 Error:UNSET remove
1 Error:Unary
1 Error:Unary
1 Error:UNSET remove
1 Error:Single Word Phrase
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:Unary
1 Error:UNSET remove
2 Error:NP Attachment
1 Error:UNSET remove
1 Error:UNSET add
1 Error:UNSET remove
1 Error:PP Attachment
2 Error:Co-ordination
1 Error:UNSET add
1 Error:Modifier Attachment
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:Modifier Attachment
1 Error:UNSET remove
1 Error:Modifier Attachment
1 Error:UNSET add
1 Error:UNSET remove
1 Error:Single Word Phrase
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF dann)
				(LK konnen)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX wir)
					(ADVX einfach)[01;31m)[00m[01;31m)[00m
			[01;36m(NX[00m
				(ART den) [01;33mMF)[00m[01;36m)[00m[01;36m)[00m
		(SIMPX [01;33m(SIMPX[00m
			(VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK brauchen)
					(MF wir uns jetzt vielleicht gar nicht)
					(VC festlegen)[01;31m)[00m [01;33mSIMPX)[00m
				[01;36m(ADVX[00m
					(KON und)
					[01;31m(LKMN[00m
						(LK sagen)
						[01;31m(MF[00m
							(ADVX
								(ADV einfach))[01;31m)[00m
						(NF
							(SIMPX
								(VF wir)
								(LK fliegen)
								[01;36m(ADVX[00m [01;31m(VC[00m
									(PTKVZ zuruck)[01;31m)[00m[01;36m)[00m))[01;31m)[00m[01;36m)[00m[01;31m)[00m)
		(DM gut)
		(ADVX dann)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF dann)
				(LK denke)
				(MF ich)
				[01;31m(NF[00m [01;33m(SIMPX[00m
					[01;31m(SIMPX[00m
						(VF dann)
						(LK haben)
						(MF wir alles)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			[01;31m(PX[00m
				[01;36m(VC[00m
					(APPR auser)[01;36m)[00m
				[01;36m(NF[00m
					(SIMPX
						(C das)
						(MF
							(NX wir)
							(ADVX immer)
							(ADVX
								(ADVX noch)
								[01;36m(ADVX[00m
									(PTKNEG nicht)[01;36m)[00m))
						(VC wissen)
						[01;36m(R[00m
							(NF
								[01;31m(SIMPX[00m
									(C wo)
									(MF wir)
									(VC ubernachten konnen)[01;31m)[00m)[01;36m)[00m)[01;36m)[00m[01;31m)[00m [01;33mSIMPX)[00m[01;36m)[00m
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX
			(VF dann)
			(LK konnen)
			(MF
				(NX wir)
				(ADVX abends)
				(ADVX noch)
				[01;36m(NX[00m
					(NX ein bischen)
					(PX in der bar)[01;36m)[00m)
			(VC sitzen))
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON oder)[01;31m)[00m
			(VF auf alle falle)
			[01;36m(SIMPX[00m
				(LK treffen)
				(MF wir uns dann da)[01;36m)[00m[01;31m)[00m
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF das)
			(LK ist)
			[01;31m(MF[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(ART das)
						[01;31m(NX[00m
							(NX marriotthotel) [01;33mSIMPX)[00m
							(NX hannover)[01;31m)[00m[01;31m)[00m
					[01;36m(SIMPX[00m [01;31m(NX[00m [01;33m(NX[00m
						(ART das)
						[01;31m(NX[00m
							(NX parkhotel) [01;33mNX)[00m
							(NX hannover)[01;31m)[00m[01;31m)[00m[01;36m)[00m
					[01;31m(NX[00m [01;33m(SIMPX (SIMPX (SIMPX[00m
						(ART das)
						(NX hotel cristal hannover)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF die)
			(LK sind)
			[01;31m(MF[00m
				(NX alle) [01;33mSIMPX)[00m
				[01;31m(ADVX[00m
					(ADVX mehr) [01;33mSIMPX)[00m
					(KON oder)
					(ADVX minder)[01;31m)[00m [01;33mSIMPX)[00m
				[01;31m(PX[00m
					(APPR in)
					(NX der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF ich)
			(LK kucke)
			[01;33m(MF[00m (MF mir mal die preise)
			(VC an)[01;31m)[00m
		(DM also)
		[01;31m(SIMPX[00m
			(VF
				(NX
					(ART das)
					(NX
						(NX hotel)
						(NX
							(NX cristal)
							[01;36m(VF[00m
								(NX
									(NE hannover))[01;36m)[00m))))
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF
						(ADVX vielleicht)
						[01;31m(ADJX[00m
							(NX ein bischen)
							(ADJD teuer)[01;31m)[00m)[01;31m)[00m
				[01;31m(LKM[00m
					(LK hat)
					[01;31m(MF[00m
						[01;36m(NX[00m [01;36m(MF[00m [01;31m(PX[00m
							(PROP dafur)[01;31m)[00m [01;33mMF)[00m[01;36m)[00m[01;36m)[00m
						(ADVX aber)
						[01;31m(NX[00m
							[01;36m(ADVX[00m [01;31m(NX[00m
								(NN sauna)[01;31m)[00m[01;36m)[00m
							[01;31m(NX[00m
								(NN solarium)[01;31m)[00m
							[01;31m(NX[00m
								(NN bar)[01;31m)[00m
							(KON und)
							(NX bistro)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['NX', 'ADVX', 'ART'], 'mover info': [('ART', (11, 12))], 'old_family': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'ART', 'SIMPX', 'DM', 'ADVX', 'SIMPX', 'PX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'DM', 'SIMPX'], 'start left siblings': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX'], 'auto preterminals': ('ITJ', 'PTKANT', 'PDS', 'VVFIN', 'PTKANT', 'ADV', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ART', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'VVFIN', 'ADV', 'PPER', 'VVFIN', 'PTKVZ', 'ITJ', 'ADV', 'ADV', 'VVFIN', 'PPER', 'ADV', 'VAFIN', 'PPER', 'PIS', 'APPR', 'KOUS', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'VVFIN', 'PWAV', 'PPER', 'VVINF', 'VMFIN', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'APPR', 'PIDAT', 'NN', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'KON', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'VVPP', 'APPR', 'NN', 'PDS', 'VAFIN', 'ART', 'NE', 'NE', 'ART', 'NE', 'NE', 'ART', 'NN', 'NE', 'NE', 'PDS', 'VAFIN', 'PIS', 'ADV', 'KON', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'PPER', 'VVFIN', 'PRF', 'ADV', 'ART', 'NN', 'PTKVZ', 'ADV', 'ART', 'NN', 'NE', 'NE', 'VAFIN', 'ADV', 'ART', 'PIS', 'ADJD', 'VAFIN', 'PROP', 'ADV', 'NN', 'NN', 'NN', 'KON', 'NN'), 'start right siblings': ['SIMPX', 'DM', 'ADVX', 'SIMPX', 'PX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'DM', 'SIMPX'], 'end left siblings': ['NX', 'ADVX'], 'auto preterminal span': (0, 132), 'movers': ['ART'], 'old_parent': 'TURN', 'POS confusion': ('ART', 'ART'), 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK konnen)
			(MF
				(NX wir)
				(ADVX einfach)
				[01;36m(NX[00m
					(ART den)[01;36m)[00m))
		(SIMPX [01;33m(SIMPX[00m
			(VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK brauchen)
					(MF wir uns jetzt vielleicht gar nicht)
					(VC festlegen)[01;31m)[00m [01;33mSIMPX)[00m
				[01;36m(ADVX[00m
					(KON und)
					[01;31m(LKMN[00m
						(LK sagen)
						[01;31m(MF[00m
							(ADVX
								(ADV einfach))[01;31m)[00m
						(NF
							(SIMPX
								(VF wir)
								(LK fliegen)
								[01;36m(ADVX[00m [01;31m(VC[00m
									(PTKVZ zuruck)[01;31m)[00m[01;36m)[00m))[01;31m)[00m[01;36m)[00m[01;31m)[00m)
		(DM gut)
		(ADVX dann)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF dann)
				(LK denke)
				(MF ich)
				[01;31m(NF[00m [01;33m(SIMPX[00m
					[01;31m(SIMPX[00m
						(VF dann)
						(LK haben)
						(MF wir alles)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			[01;31m(PX[00m
				[01;36m(VC[00m
					(APPR auser)[01;36m)[00m
				[01;36m(NF[00m
					(SIMPX
						(C das)
						(MF
							(NX wir)
							(ADVX immer)
							(ADVX
								(ADVX noch)
								[01;36m(ADVX[00m
									(PTKNEG nicht)[01;36m)[00m))
						(VC wissen)
						[01;36m(R[00m
							(NF
								[01;31m(SIMPX[00m
									(C wo)
									(MF wir)
									(VC ubernachten konnen)[01;31m)[00m)[01;36m)[00m)[01;36m)[00m[01;31m)[00m [01;33mSIMPX)[00m[01;36m)[00m
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX
			(VF dann)
			(LK konnen)
			(MF
				(NX wir)
				(ADVX abends)
				(ADVX noch)
				[01;36m(NX[00m
					(NX ein bischen)
					(PX in der bar)[01;36m)[00m)
			(VC sitzen))
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON oder)[01;31m)[00m
			(VF auf alle falle)
			[01;36m(SIMPX[00m
				(LK treffen)
				(MF wir uns dann da)[01;36m)[00m[01;31m)[00m
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF das)
			(LK ist)
			[01;31m(MF[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(ART das)
						[01;31m(NX[00m
							(NX marriotthotel) [01;33mSIMPX)[00m
							(NX hannover)[01;31m)[00m[01;31m)[00m
					[01;36m(SIMPX[00m [01;31m(NX[00m [01;33m(NX[00m
						(ART das)
						[01;31m(NX[00m
							(NX parkhotel) [01;33mNX)[00m
							(NX hannover)[01;31m)[00m[01;31m)[00m[01;36m)[00m
					[01;31m(NX[00m [01;33m(SIMPX (SIMPX (SIMPX[00m
						(ART das)
						(NX hotel cristal hannover)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF die)
			(LK sind)
			[01;31m(MF[00m
				(NX alle) [01;33mSIMPX)[00m
				[01;31m(ADVX[00m
					(ADVX mehr) [01;33mSIMPX)[00m
					(KON oder)
					(ADVX minder)[01;31m)[00m [01;33mSIMPX)[00m
				[01;31m(PX[00m
					(APPR in)
					(NX der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF ich)
			(LK kucke)
			[01;33m(MF[00m (MF mir mal die preise)
			(VC an)[01;31m)[00m
		(DM also)
		[01;31m(SIMPX[00m
			(VF
				(NX
					(ART das)
					(NX
						(NX hotel)
						(NX
							(NX cristal)
							[01;36m(VF[00m
								(NX
									(NE hannover))[01;36m)[00m))))
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF
						(ADVX vielleicht)
						[01;31m(ADJX[00m
							(NX ein bischen)
							(ADJD teuer)[01;31m)[00m)[01;31m)[00m
				[01;31m(LKM[00m
					(LK hat)
					[01;31m(MF[00m
						[01;36m(NX[00m [01;36m(MF[00m [01;31m(PX[00m
							(PROP dafur)[01;31m)[00m [01;33mMF)[00m[01;36m)[00m[01;36m)[00m
						(ADVX aber)
						[01;31m(NX[00m
							[01;36m(ADVX[00m [01;31m(NX[00m
								(NN sauna)[01;31m)[00m[01;36m)[00m
							[01;31m(NX[00m
								(NN solarium)[01;31m)[00m
							[01;31m(NX[00m
								(NN bar)[01;31m)[00m
							(KON und)
							(NX bistro)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:PP Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'PX'], 'mover info': [('PX', (36, 47))], 'old_family': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'SIMPX', 'PX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'DM', 'SIMPX'], 'start left siblings': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'SIMPX'], 'auto preterminals': ('ITJ', 'PTKANT', 'PDS', 'VVFIN', 'PTKANT', 'ADV', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ART', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'VVFIN', 'ADV', 'PPER', 'VVFIN', 'PTKVZ', 'ITJ', 'ADV', 'ADV', 'VVFIN', 'PPER', 'ADV', 'VAFIN', 'PPER', 'PIS', 'APPR', 'KOUS', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'VVFIN', 'PWAV', 'PPER', 'VVINF', 'VMFIN', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'APPR', 'PIDAT', 'NN', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'KON', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'VVPP', 'APPR', 'NN', 'PDS', 'VAFIN', 'ART', 'NE', 'NE', 'ART', 'NE', 'NE', 'ART', 'NN', 'NE', 'NE', 'PDS', 'VAFIN', 'PIS', 'ADV', 'KON', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'PPER', 'VVFIN', 'PRF', 'ADV', 'ART', 'NN', 'PTKVZ', 'ADV', 'ART', 'NN', 'NE', 'NE', 'VAFIN', 'ADV', 'ART', 'PIS', 'ADJD', 'VAFIN', 'PROP', 'ADV', 'NN', 'NN', 'NN', 'KON', 'NN'), 'start right siblings': ['SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'DM', 'SIMPX'], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (0, 132), 'movers': ['PX'], 'old_parent': 'TURN', 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK konnen)
			(MF
				(NX wir)
				(ADVX einfach)
				[01;36m(NX[00m
					(ART den)[01;36m)[00m))
		(SIMPX [01;33m(SIMPX[00m
			(VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK brauchen)
					(MF wir uns jetzt vielleicht gar nicht)
					(VC festlegen)[01;31m)[00m [01;33mSIMPX)[00m
				[01;36m(ADVX[00m
					(KON und)
					[01;31m(LKMN[00m
						(LK sagen)
						[01;31m(MF[00m
							(ADVX
								(ADV einfach))[01;31m)[00m
						(NF
							(SIMPX
								(VF wir)
								(LK fliegen)
								[01;36m(ADVX[00m [01;31m(VC[00m
									(PTKVZ zuruck)[01;31m)[00m[01;36m)[00m))[01;31m)[00m[01;36m)[00m[01;31m)[00m)
		(DM gut)
		(ADVX dann)
		(SIMPX
			(VF dann)
			(LK denke)
			(MF ich)
			[01;31m(NF[00m
				(SIMPX
					(VF dann)
					(LK haben)
					(MF wir alles)
					[01;31m(PX[00m
						[01;36m(VC[00m
							(APPR auser)[01;36m)[00m
						[01;36m(NF[00m
							(SIMPX
								(C das)
								(MF
									(NX wir)
									(ADVX immer)
									(ADVX
										(ADVX noch)
										[01;36m(ADVX[00m
											(PTKNEG nicht)[01;36m)[00m))
								(VC wissen)
								[01;36m(R[00m
									(NF
										[01;31m(SIMPX[00m
											(C wo)
											(MF wir)
											(VC ubernachten konnen)[01;31m)[00m)[01;36m)[00m)[01;36m)[00m[01;31m)[00m)[01;31m)[00m)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX
			(VF dann)
			(LK konnen)
			(MF
				(NX wir)
				(ADVX abends)
				(ADVX noch)
				[01;36m(NX[00m
					(NX ein bischen)
					(PX in der bar)[01;36m)[00m)
			(VC sitzen))
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON oder)[01;31m)[00m
			(VF auf alle falle)
			[01;36m(SIMPX[00m
				(LK treffen)
				(MF wir uns dann da)[01;36m)[00m[01;31m)[00m
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF das)
			(LK ist)
			[01;31m(MF[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(ART das)
						[01;31m(NX[00m
							(NX marriotthotel) [01;33mSIMPX)[00m
							(NX hannover)[01;31m)[00m[01;31m)[00m
					[01;36m(SIMPX[00m [01;31m(NX[00m [01;33m(NX[00m
						(ART das)
						[01;31m(NX[00m
							(NX parkhotel) [01;33mNX)[00m
							(NX hannover)[01;31m)[00m[01;31m)[00m[01;36m)[00m
					[01;31m(NX[00m [01;33m(SIMPX (SIMPX (SIMPX[00m
						(ART das)
						(NX hotel cristal hannover)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF die)
			(LK sind)
			[01;31m(MF[00m
				(NX alle) [01;33mSIMPX)[00m
				[01;31m(ADVX[00m
					(ADVX mehr) [01;33mSIMPX)[00m
					(KON oder)
					(ADVX minder)[01;31m)[00m [01;33mSIMPX)[00m
				[01;31m(PX[00m
					(APPR in)
					(NX der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF ich)
			(LK kucke)
			[01;33m(MF[00m (MF mir mal die preise)
			(VC an)[01;31m)[00m
		(DM also)
		[01;31m(SIMPX[00m
			(VF
				(NX
					(ART das)
					(NX
						(NX hotel)
						(NX
							(NX cristal)
							[01;36m(VF[00m
								(NX
									(NE hannover))[01;36m)[00m))))
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF
						(ADVX vielleicht)
						[01;31m(ADJX[00m
							(NX ein bischen)
							(ADJD teuer)[01;31m)[00m)[01;31m)[00m
				[01;31m(LKM[00m
					(LK hat)
					[01;31m(MF[00m
						[01;36m(NX[00m [01;36m(MF[00m [01;31m(PX[00m
							(PROP dafur)[01;31m)[00m [01;33mMF)[00m[01;36m)[00m[01;36m)[00m
						(ADVX aber)
						[01;31m(NX[00m
							[01;36m(ADVX[00m [01;31m(NX[00m
								(NN sauna)[01;31m)[00m[01;36m)[00m
							[01;31m(NX[00m
								(NN solarium)[01;31m)[00m
							[01;31m(NX[00m
								(NN bar)[01;31m)[00m
							(KON und)
							(NX bistro)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:NP Attachment
{'new_parent': 'NX', 'new_family': ['NX', 'ART', 'NX'], 'mover info': [('NX', (91, 92))], 'old_family': ['NX', 'NX'], 'start left siblings': ['NX'], 'auto preterminals': ('ART', 'NE', 'NE', 'ART', 'NE', 'NE', 'ART', 'NN', 'NE', 'NE'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (86, 96), 'movers': ['NX'], 'old_parent': 'NX', 'POS confusion': ('NE', 'NE'), 'end right siblings': ['ART', 'NX'], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK konnen)
			(MF
				(NX wir)
				(ADVX einfach)
				[01;36m(NX[00m
					(ART den)[01;36m)[00m))
		(SIMPX [01;33m(SIMPX[00m
			(VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK brauchen)
					(MF wir uns jetzt vielleicht gar nicht)
					(VC festlegen)[01;31m)[00m [01;33mSIMPX)[00m
				[01;36m(ADVX[00m
					(KON und)
					[01;31m(LKMN[00m
						(LK sagen)
						[01;31m(MF[00m
							(ADVX
								(ADV einfach))[01;31m)[00m
						(NF
							(SIMPX
								(VF wir)
								(LK fliegen)
								[01;36m(ADVX[00m [01;31m(VC[00m
									(PTKVZ zuruck)[01;31m)[00m[01;36m)[00m))[01;31m)[00m[01;36m)[00m[01;31m)[00m)
		(DM gut)
		(ADVX dann)
		(SIMPX
			(VF dann)
			(LK denke)
			(MF ich)
			[01;31m(NF[00m
				(SIMPX
					(VF dann)
					(LK haben)
					(MF wir alles)
					[01;31m(PX[00m
						[01;36m(VC[00m
							(APPR auser)[01;36m)[00m
						[01;36m(NF[00m
							(SIMPX
								(C das)
								(MF
									(NX wir)
									(ADVX immer)
									(ADVX
										(ADVX noch)
										[01;36m(ADVX[00m
											(PTKNEG nicht)[01;36m)[00m))
								(VC wissen)
								[01;36m(R[00m
									(NF
										[01;31m(SIMPX[00m
											(C wo)
											(MF wir)
											(VC ubernachten konnen)[01;31m)[00m)[01;36m)[00m)[01;36m)[00m[01;31m)[00m)[01;31m)[00m)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX
			(VF dann)
			(LK konnen)
			(MF
				(NX wir)
				(ADVX abends)
				(ADVX noch)
				[01;36m(NX[00m
					(NX ein bischen)
					(PX in der bar)[01;36m)[00m)
			(VC sitzen))
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON oder)[01;31m)[00m
			(VF auf alle falle)
			[01;36m(SIMPX[00m
				(LK treffen)
				(MF wir uns dann da)[01;36m)[00m[01;31m)[00m
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF das)
			(LK ist)
			[01;31m(MF[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(ART das)
						[01;31m(NX[00m
							(NX marriotthotel) [01;33mSIMPX)[00m
							(NX hannover)[01;31m)[00m[01;31m)[00m
					[01;33m(SIMPX[00m (NX das parkhotel)
					[01;31m(NX[00m
						(NX hannover) [01;33mSIMPX)[00m
						(ART [01;33m(SIMPX (SIMPX (SIMPX[00m das)
						(NX hotel cristal hannover)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF die)
			(LK sind)
			[01;31m(MF[00m
				(NX alle) [01;33mSIMPX)[00m
				[01;31m(ADVX[00m
					(ADVX mehr) [01;33mSIMPX)[00m
					(KON oder)
					(ADVX minder)[01;31m)[00m [01;33mSIMPX)[00m
				[01;31m(PX[00m
					(APPR in)
					(NX der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF ich)
			(LK kucke)
			[01;33m(MF[00m (MF mir mal die preise)
			(VC an)[01;31m)[00m
		(DM also)
		[01;31m(SIMPX[00m
			(VF
				(NX
					(ART das)
					(NX
						(NX hotel)
						(NX
							(NX cristal)
							[01;36m(VF[00m
								(NX
									(NE hannover))[01;36m)[00m))))
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF
						(ADVX vielleicht)
						[01;31m(ADJX[00m
							(NX ein bischen)
							(ADJD teuer)[01;31m)[00m)[01;31m)[00m
				[01;31m(LKM[00m
					(LK hat)
					[01;31m(MF[00m
						[01;36m(NX[00m [01;36m(MF[00m [01;31m(PX[00m
							(PROP dafur)[01;31m)[00m [01;33mMF)[00m[01;36m)[00m[01;36m)[00m
						(ADVX aber)
						[01;31m(NX[00m
							[01;36m(ADVX[00m [01;31m(NX[00m
								(NN sauna)[01;31m)[00m[01;36m)[00m
							[01;31m(NX[00m
								(NN solarium)[01;31m)[00m
							[01;31m(NX[00m
								(NN bar)[01;31m)[00m
							(KON und)
							(NX bistro)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Single Word Phrase
{'family': ['VF', 'LK', 'ADVX'], 'auto preterminal span': (26, 27), 'span': (26, 27), 'subtrees': ['PTKVZ'], 'parent': 'SIMPX', 'over_word': True, 'auto preterminals': ('PTKVZ',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VC', 'ADVX')}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK konnen)
			(MF
				(NX wir)
				(ADVX einfach)
				[01;36m(NX[00m
					(ART den)[01;36m)[00m))
		(SIMPX [01;33m(SIMPX[00m
			(VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK brauchen)
					(MF wir uns jetzt vielleicht gar nicht)
					(VC festlegen)[01;31m)[00m [01;33mSIMPX)[00m
				[01;36m(ADVX[00m
					(KON und)
					[01;31m(LKMN[00m
						(LK sagen)
						[01;31m(MF[00m
							(ADVX
								(ADV einfach))[01;31m)[00m
						(NF wir fliegen zuruck)[01;31m)[00m[01;36m)[00m[01;31m)[00m)
		(DM gut)
		(ADVX dann)
		(SIMPX
			(VF dann)
			(LK denke)
			(MF ich)
			[01;31m(NF[00m
				(SIMPX
					(VF dann)
					(LK haben)
					(MF wir alles)
					[01;31m(PX[00m
						[01;36m(VC[00m
							(APPR auser)[01;36m)[00m
						[01;36m(NF[00m
							(SIMPX
								(C das)
								(MF
									(NX wir)
									(ADVX immer)
									(ADVX
										(ADVX noch)
										[01;36m(ADVX[00m
											(PTKNEG nicht)[01;36m)[00m))
								(VC wissen)
								[01;36m(R[00m
									(NF
										[01;31m(SIMPX[00m
											(C wo)
											(MF wir)
											(VC ubernachten konnen)[01;31m)[00m)[01;36m)[00m)[01;36m)[00m[01;31m)[00m)[01;31m)[00m)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX
			(VF dann)
			(LK konnen)
			(MF
				(NX wir)
				(ADVX abends)
				(ADVX noch)
				[01;36m(NX[00m
					(NX ein bischen)
					(PX in der bar)[01;36m)[00m)
			(VC sitzen))
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON oder)[01;31m)[00m
			(VF auf alle falle)
			[01;36m(SIMPX[00m
				(LK treffen)
				(MF wir uns dann da)[01;36m)[00m[01;31m)[00m
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF das)
			(LK ist)
			[01;31m(MF[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(ART das)
						[01;31m(NX[00m
							(NX marriotthotel) [01;33mSIMPX)[00m
							(NX hannover)[01;31m)[00m[01;31m)[00m
					[01;33m(SIMPX[00m (NX das parkhotel)
					[01;31m(NX[00m
						(NX hannover) [01;33mSIMPX)[00m
						(ART [01;33m(SIMPX (SIMPX (SIMPX[00m das)
						(NX hotel cristal hannover)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF die)
			(LK sind)
			[01;31m(MF[00m
				(NX alle) [01;33mSIMPX)[00m
				[01;31m(ADVX[00m
					(ADVX mehr) [01;33mSIMPX)[00m
					(KON oder)
					(ADVX minder)[01;31m)[00m [01;33mSIMPX)[00m
				[01;31m(PX[00m
					(APPR in)
					(NX der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF ich)
			(LK kucke)
			[01;33m(MF[00m (MF mir mal die preise)
			(VC an)[01;31m)[00m
		(DM also)
		[01;31m(SIMPX[00m
			(VF
				(NX
					(ART das)
					(NX
						(NX hotel)
						(NX
							(NX cristal)
							[01;36m(VF[00m
								(NX
									(NE hannover))[01;36m)[00m))))
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF
						(ADVX vielleicht)
						[01;31m(ADJX[00m
							(NX ein bischen)
							(ADJD teuer)[01;31m)[00m)[01;31m)[00m
				[01;31m(LKM[00m
					(LK hat)
					[01;31m(MF[00m
						[01;36m(NX[00m [01;36m(MF[00m [01;31m(PX[00m
							(PROP dafur)[01;31m)[00m [01;33mMF)[00m[01;36m)[00m[01;36m)[00m
						(ADVX aber)
						[01;31m(NX[00m
							[01;36m(ADVX[00m [01;31m(NX[00m
								(NN sauna)[01;31m)[00m[01;36m)[00m
							[01;31m(NX[00m
								(NN solarium)[01;31m)[00m
							[01;31m(NX[00m
								(NN bar)[01;31m)[00m
							(KON und)
							(NX bistro)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Different label
{'family': ['R'], 'auto preterminal span': (43, 47), 'span': (43, 47), 'subtrees': ['C', 'MF', 'VC'], 'parent': 'NF', 'over_word': False, 'auto preterminals': ('PWAV', 'PPER', 'VVINF', 'VMFIN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('SIMPX', 'R')}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK konnen)
			(MF
				(NX wir)
				(ADVX einfach)
				[01;36m(NX[00m
					(ART den)[01;36m)[00m))
		(SIMPX [01;33m(SIMPX[00m
			(VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK brauchen)
					(MF wir uns jetzt vielleicht gar nicht)
					(VC festlegen)[01;31m)[00m [01;33mSIMPX)[00m
				[01;36m(ADVX[00m
					(KON und)
					[01;31m(LKMN[00m
						(LK sagen)
						[01;31m(MF[00m
							(ADVX
								(ADV einfach))[01;31m)[00m
						(NF wir fliegen zuruck)[01;31m)[00m[01;36m)[00m[01;31m)[00m)
		(DM gut)
		(ADVX dann)
		(SIMPX
			(VF dann)
			(LK denke)
			(MF ich)
			[01;31m(NF[00m
				(SIMPX
					(VF dann)
					(LK haben)
					(MF wir alles)
					[01;31m(PX[00m
						[01;36m(VC[00m
							(APPR auser)[01;36m)[00m
						[01;36m(NF[00m
							(SIMPX
								(C das)
								(MF
									(NX wir)
									(ADVX immer)
									(ADVX
										(ADVX noch)
										[01;36m(ADVX[00m
											(PTKNEG nicht)[01;36m)[00m))
								(VC wissen)
								(NF wo wir ubernachten konnen))[01;36m)[00m[01;31m)[00m)[01;31m)[00m)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX
			(VF dann)
			(LK konnen)
			(MF
				(NX wir)
				(ADVX abends)
				(ADVX noch)
				[01;36m(NX[00m
					(NX ein bischen)
					(PX in der bar)[01;36m)[00m)
			(VC sitzen))
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON oder)[01;31m)[00m
			(VF auf alle falle)
			[01;36m(SIMPX[00m
				(LK treffen)
				(MF wir uns dann da)[01;36m)[00m[01;31m)[00m
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF das)
			(LK ist)
			[01;31m(MF[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(ART das)
						[01;31m(NX[00m
							(NX marriotthotel) [01;33mSIMPX)[00m
							(NX hannover)[01;31m)[00m[01;31m)[00m
					[01;33m(SIMPX[00m (NX das parkhotel)
					[01;31m(NX[00m
						(NX hannover) [01;33mSIMPX)[00m
						(ART [01;33m(SIMPX (SIMPX (SIMPX[00m das)
						(NX hotel cristal hannover)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF die)
			(LK sind)
			[01;31m(MF[00m
				(NX alle) [01;33mSIMPX)[00m
				[01;31m(ADVX[00m
					(ADVX mehr) [01;33mSIMPX)[00m
					(KON oder)
					(ADVX minder)[01;31m)[00m [01;33mSIMPX)[00m
				[01;31m(PX[00m
					(APPR in)
					(NX der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF ich)
			(LK kucke)
			[01;33m(MF[00m (MF mir mal die preise)
			(VC an)[01;31m)[00m
		(DM also)
		[01;31m(SIMPX[00m
			(VF
				(NX
					(ART das)
					(NX
						(NX hotel)
						(NX
							(NX cristal)
							[01;36m(VF[00m
								(NX
									(NE hannover))[01;36m)[00m))))
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF
						(ADVX vielleicht)
						[01;31m(ADJX[00m
							(NX ein bischen)
							(ADJD teuer)[01;31m)[00m)[01;31m)[00m
				[01;31m(LKM[00m
					(LK hat)
					[01;31m(MF[00m
						[01;36m(NX[00m [01;36m(MF[00m [01;31m(PX[00m
							(PROP dafur)[01;31m)[00m [01;33mMF)[00m[01;36m)[00m[01;36m)[00m
						(ADVX aber)
						[01;31m(NX[00m
							[01;36m(ADVX[00m [01;31m(NX[00m
								(NN sauna)[01;31m)[00m[01;36m)[00m
							[01;31m(NX[00m
								(NN solarium)[01;31m)[00m
							[01;31m(NX[00m
								(NN bar)[01;31m)[00m
							(KON und)
							(NX bistro)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Single Word Phrase
{'family': ['MF', 'ADVX', 'NX'], 'auto preterminal span': (125, 126), 'span': (125, 126), 'subtrees': ['PROP'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('PROP',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('PX', 'MF')}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK konnen)
			(MF
				(NX wir)
				(ADVX einfach)
				[01;36m(NX[00m
					(ART den)[01;36m)[00m))
		(SIMPX [01;33m(SIMPX[00m
			(VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK brauchen)
					(MF wir uns jetzt vielleicht gar nicht)
					(VC festlegen)[01;31m)[00m [01;33mSIMPX)[00m
				[01;36m(ADVX[00m
					(KON und)
					[01;31m(LKMN[00m
						(LK sagen)
						[01;31m(MF[00m
							(ADVX
								(ADV einfach))[01;31m)[00m
						(NF wir fliegen zuruck)[01;31m)[00m[01;36m)[00m[01;31m)[00m)
		(DM gut)
		(ADVX dann)
		(SIMPX
			(VF dann)
			(LK denke)
			(MF ich)
			[01;31m(NF[00m
				(SIMPX
					(VF dann)
					(LK haben)
					(MF wir alles)
					[01;31m(PX[00m
						[01;36m(VC[00m
							(APPR auser)[01;36m)[00m
						[01;36m(NF[00m
							(SIMPX
								(C das)
								(MF
									(NX wir)
									(ADVX immer)
									(ADVX
										(ADVX noch)
										[01;36m(ADVX[00m
											(PTKNEG nicht)[01;36m)[00m))
								(VC wissen)
								(NF wo wir ubernachten konnen))[01;36m)[00m[01;31m)[00m)[01;31m)[00m)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX
			(VF dann)
			(LK konnen)
			(MF
				(NX wir)
				(ADVX abends)
				(ADVX noch)
				[01;36m(NX[00m
					(NX ein bischen)
					(PX in der bar)[01;36m)[00m)
			(VC sitzen))
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON oder)[01;31m)[00m
			(VF auf alle falle)
			[01;36m(SIMPX[00m
				(LK treffen)
				(MF wir uns dann da)[01;36m)[00m[01;31m)[00m
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF das)
			(LK ist)
			[01;31m(MF[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(ART das)
						[01;31m(NX[00m
							(NX marriotthotel) [01;33mSIMPX)[00m
							(NX hannover)[01;31m)[00m[01;31m)[00m
					[01;33m(SIMPX[00m (NX das parkhotel)
					[01;31m(NX[00m
						(NX hannover) [01;33mSIMPX)[00m
						(ART [01;33m(SIMPX (SIMPX (SIMPX[00m das)
						(NX hotel cristal hannover)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF die)
			(LK sind)
			[01;31m(MF[00m
				(NX alle) [01;33mSIMPX)[00m
				[01;31m(ADVX[00m
					(ADVX mehr) [01;33mSIMPX)[00m
					(KON oder)
					(ADVX minder)[01;31m)[00m [01;33mSIMPX)[00m
				[01;31m(PX[00m
					(APPR in)
					(NX der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF ich)
			(LK kucke)
			[01;33m(MF[00m (MF mir mal die preise)
			(VC an)[01;31m)[00m
		(DM also)
		[01;31m(SIMPX[00m
			(VF
				(NX
					(ART das)
					(NX
						(NX hotel)
						(NX
							(NX cristal)
							[01;36m(VF[00m
								(NX
									(NE hannover))[01;36m)[00m))))
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF
						(ADVX vielleicht)
						[01;31m(ADJX[00m
							(NX ein bischen)
							(ADJD teuer)[01;31m)[00m)[01;31m)[00m
				[01;31m(LKM[00m
					(LK hat)
					[01;31m(MF[00m
						[01;36m(NX[00m
							(MF
								(PROP dafur)) [01;33mMF)[00m[01;36m)[00m
						(ADVX aber)
						[01;31m(NX[00m
							[01;36m(ADVX[00m [01;31m(NX[00m
								(NN sauna)[01;31m)[00m[01;36m)[00m
							[01;31m(NX[00m
								(NN solarium)[01;31m)[00m
							[01;31m(NX[00m
								(NN bar)[01;31m)[00m
							(KON und)
							(NX bistro)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Single Word Phrase
{'family': ['ADVX', 'NX', 'NX', 'KON', 'NX'], 'auto preterminal span': (127, 128), 'span': (127, 128), 'subtrees': ['NN'], 'parent': 'NX', 'over_word': True, 'auto preterminals': ('NN',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('NX', 'ADVX')}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK konnen)
			(MF
				(NX wir)
				(ADVX einfach)
				[01;36m(NX[00m
					(ART den)[01;36m)[00m))
		(SIMPX [01;33m(SIMPX[00m
			(VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK brauchen)
					(MF wir uns jetzt vielleicht gar nicht)
					(VC festlegen)[01;31m)[00m [01;33mSIMPX)[00m
				[01;36m(ADVX[00m
					(KON und)
					[01;31m(LKMN[00m
						(LK sagen)
						[01;31m(MF[00m
							(ADVX
								(ADV einfach))[01;31m)[00m
						(NF wir fliegen zuruck)[01;31m)[00m[01;36m)[00m[01;31m)[00m)
		(DM gut)
		(ADVX dann)
		(SIMPX
			(VF dann)
			(LK denke)
			(MF ich)
			[01;31m(NF[00m
				(SIMPX
					(VF dann)
					(LK haben)
					(MF wir alles)
					[01;31m(PX[00m
						[01;36m(VC[00m
							(APPR auser)[01;36m)[00m
						[01;36m(NF[00m
							(SIMPX
								(C das)
								(MF
									(NX wir)
									(ADVX immer)
									(ADVX
										(ADVX noch)
										[01;36m(ADVX[00m
											(PTKNEG nicht)[01;36m)[00m))
								(VC wissen)
								(NF wo wir ubernachten konnen))[01;36m)[00m[01;31m)[00m)[01;31m)[00m)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX
			(VF dann)
			(LK konnen)
			(MF
				(NX wir)
				(ADVX abends)
				(ADVX noch)
				[01;36m(NX[00m
					(NX ein bischen)
					(PX in der bar)[01;36m)[00m)
			(VC sitzen))
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON oder)[01;31m)[00m
			(VF auf alle falle)
			[01;36m(SIMPX[00m
				(LK treffen)
				(MF wir uns dann da)[01;36m)[00m[01;31m)[00m
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF das)
			(LK ist)
			[01;31m(MF[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(ART das)
						[01;31m(NX[00m
							(NX marriotthotel) [01;33mSIMPX)[00m
							(NX hannover)[01;31m)[00m[01;31m)[00m
					[01;33m(SIMPX[00m (NX das parkhotel)
					[01;31m(NX[00m
						(NX hannover) [01;33mSIMPX)[00m
						(ART [01;33m(SIMPX (SIMPX (SIMPX[00m das)
						(NX hotel cristal hannover)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF die)
			(LK sind)
			[01;31m(MF[00m
				(NX alle) [01;33mSIMPX)[00m
				[01;31m(ADVX[00m
					(ADVX mehr) [01;33mSIMPX)[00m
					(KON oder)
					(ADVX minder)[01;31m)[00m [01;33mSIMPX)[00m
				[01;31m(PX[00m
					(APPR in)
					(NX der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF ich)
			(LK kucke)
			[01;33m(MF[00m (MF mir mal die preise)
			(VC an)[01;31m)[00m
		(DM also)
		[01;31m(SIMPX[00m
			(VF
				(NX
					(ART das)
					(NX
						(NX hotel)
						(NX
							(NX cristal)
							[01;36m(VF[00m
								(NX
									(NE hannover))[01;36m)[00m))))
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF
						(ADVX vielleicht)
						[01;31m(ADJX[00m
							(NX ein bischen)
							(ADJD teuer)[01;31m)[00m)[01;31m)[00m
				[01;31m(LKM[00m
					(LK hat)
					[01;31m(MF[00m
						[01;36m(NX[00m
							(MF
								(PROP dafur)) [01;33mMF)[00m[01;36m)[00m
						(ADVX aber)
						[01;31m(NX[00m
							(ADVX sauna)
							[01;31m(NX[00m
								(NN solarium)[01;31m)[00m
							[01;31m(NX[00m
								(NN bar)[01;31m)[00m
							(KON und)
							(NX bistro)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'SIMPX', 'SIMPX', 'SIMPX', 'KOORD', 'VF', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'DM', 'SIMPX'], 'mover info': [('KOORD', (66, 67)), ('VF', (67, 70))], 'old_family': ['KOORD', 'VF', 'LK', 'MF'], 'start left siblings': [], 'auto preterminals': ('ITJ', 'PTKANT', 'PDS', 'VVFIN', 'PTKANT', 'ADV', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ART', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'VVFIN', 'ADV', 'PPER', 'VVFIN', 'PTKVZ', 'ITJ', 'ADV', 'ADV', 'VVFIN', 'PPER', 'ADV', 'VAFIN', 'PPER', 'PIS', 'APPR', 'KOUS', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'VVFIN', 'PWAV', 'PPER', 'VVINF', 'VMFIN', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'APPR', 'PIDAT', 'NN', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'KON', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'VVPP', 'APPR', 'NN', 'PDS', 'VAFIN', 'ART', 'NE', 'NE', 'ART', 'NE', 'NE', 'ART', 'NN', 'NE', 'NE', 'PDS', 'VAFIN', 'PIS', 'ADV', 'KON', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'PPER', 'VVFIN', 'PRF', 'ADV', 'ART', 'NN', 'PTKVZ', 'ADV', 'ART', 'NN', 'NE', 'NE', 'VAFIN', 'ADV', 'ART', 'PIS', 'ADJD', 'VAFIN', 'PROP', 'ADV', 'NN', 'NN', 'NN', 'KON', 'NN'), 'start right siblings': ['LK', 'MF'], 'end left siblings': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'SIMPX', 'SIMPX', 'SIMPX'], 'auto preterminal span': (0, 132), 'movers': ['KOORD', 'VF'], 'old_parent': 'SIMPX', 'end right siblings': ['SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'DM', 'SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK konnen)
			(MF
				(NX wir)
				(ADVX einfach)
				[01;36m(NX[00m
					(ART den)[01;36m)[00m))
		(SIMPX [01;33m(SIMPX[00m
			(VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK brauchen)
					(MF wir uns jetzt vielleicht gar nicht)
					(VC festlegen)[01;31m)[00m [01;33mSIMPX)[00m
				[01;36m(ADVX[00m
					(KON und)
					[01;31m(LKMN[00m
						(LK sagen)
						[01;31m(MF[00m
							(ADVX
								(ADV einfach))[01;31m)[00m
						(NF wir fliegen zuruck)[01;31m)[00m[01;36m)[00m[01;31m)[00m)
		(DM gut)
		(ADVX dann)
		(SIMPX
			(VF dann)
			(LK denke)
			(MF ich)
			[01;31m(NF[00m
				(SIMPX
					(VF dann)
					(LK haben)
					(MF wir alles)
					[01;31m(PX[00m
						[01;36m(VC[00m
							(APPR auser)[01;36m)[00m
						[01;36m(NF[00m
							(SIMPX
								(C das)
								(MF
									(NX wir)
									(ADVX immer)
									(ADVX
										(ADVX noch)
										[01;36m(ADVX[00m
											(PTKNEG nicht)[01;36m)[00m))
								(VC wissen)
								(NF wo wir ubernachten konnen))[01;36m)[00m[01;31m)[00m)[01;31m)[00m)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX
			(VF dann)
			(LK konnen)
			(MF
				(NX wir)
				(ADVX abends)
				(ADVX noch)
				[01;36m(NX[00m
					(NX ein bischen)
					(PX in der bar)[01;36m)[00m)
			(VC sitzen))
		[01;31m(KOORD[00m
			(KON oder)[01;31m)[00m
		(VF auf alle falle)
		(SIMPX treffen wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF das)
			(LK ist)
			[01;31m(MF[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(ART das)
						[01;31m(NX[00m
							(NX marriotthotel) [01;33mSIMPX)[00m
							(NX hannover)[01;31m)[00m[01;31m)[00m
					[01;33m(SIMPX[00m (NX das parkhotel)
					[01;31m(NX[00m
						(NX hannover) [01;33mSIMPX)[00m
						(ART [01;33m(SIMPX (SIMPX (SIMPX[00m das)
						(NX hotel cristal hannover)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF die)
			(LK sind)
			[01;31m(MF[00m
				(NX alle) [01;33mSIMPX)[00m
				[01;31m(ADVX[00m
					(ADVX mehr) [01;33mSIMPX)[00m
					(KON oder)
					(ADVX minder)[01;31m)[00m [01;33mSIMPX)[00m
				[01;31m(PX[00m
					(APPR in)
					(NX der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF ich)
			(LK kucke)
			[01;33m(MF[00m (MF mir mal die preise)
			(VC an)[01;31m)[00m
		(DM also)
		[01;31m(SIMPX[00m
			(VF
				(NX
					(ART das)
					(NX
						(NX hotel)
						(NX
							(NX cristal)
							[01;36m(VF[00m
								(NX
									(NE hannover))[01;36m)[00m))))
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF
						(ADVX vielleicht)
						[01;31m(ADJX[00m
							(NX ein bischen)
							(ADJD teuer)[01;31m)[00m)[01;31m)[00m
				[01;31m(LKM[00m
					(LK hat)
					[01;31m(MF[00m
						[01;36m(NX[00m
							(MF
								(PROP dafur)) [01;33mMF)[00m[01;36m)[00m
						(ADVX aber)
						[01;31m(NX[00m
							(ADVX sauna)
							[01;31m(NX[00m
								(NN solarium)[01;31m)[00m
							[01;31m(NX[00m
								(NN bar)[01;31m)[00m
							(KON und)
							(NX bistro)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Single Word Phrase
{'subtrees': ['ART'], 'family': ['NX', 'ADVX', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ART',), 'right siblings': [], 'left siblings': [(NX (PPER wir)), (ADVX (ADV einfach))], 'auto preterminal span': (11, 12), 'span': (11, 12), 'parent': 'MF', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX [01;33m(SIMPX[00m
			(VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK brauchen)
					(MF wir uns jetzt vielleicht gar nicht)
					(VC festlegen)[01;31m)[00m [01;33mSIMPX)[00m
				[01;36m(ADVX[00m
					(KON und)
					[01;31m(LKMN[00m
						(LK sagen)
						[01;31m(MF[00m
							(ADVX
								(ADV einfach))[01;31m)[00m
						(NF wir fliegen zuruck)[01;31m)[00m[01;36m)[00m[01;31m)[00m)
		(DM gut)
		(ADVX dann)
		(SIMPX
			(VF dann)
			(LK denke)
			(MF ich)
			[01;31m(NF[00m
				(SIMPX
					(VF dann)
					(LK haben)
					(MF wir alles)
					[01;31m(PX[00m
						[01;36m(VC[00m
							(APPR auser)[01;36m)[00m
						[01;36m(NF[00m
							(SIMPX
								(C das)
								(MF
									(NX wir)
									(ADVX immer)
									(ADVX
										(ADVX noch)
										[01;36m(ADVX[00m
											(PTKNEG nicht)[01;36m)[00m))
								(VC wissen)
								(NF wo wir ubernachten konnen))[01;36m)[00m[01;31m)[00m)[01;31m)[00m)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX
			(VF dann)
			(LK konnen)
			(MF
				(NX wir)
				(ADVX abends)
				(ADVX noch)
				[01;36m(NX[00m
					(NX ein bischen)
					(PX in der bar)[01;36m)[00m)
			(VC sitzen))
		[01;31m(KOORD[00m
			(KON oder)[01;31m)[00m
		(VF auf alle falle)
		(SIMPX treffen wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF das)
			(LK ist)
			[01;31m(MF[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(ART das)
						[01;31m(NX[00m
							(NX marriotthotel) [01;33mSIMPX)[00m
							(NX hannover)[01;31m)[00m[01;31m)[00m
					[01;33m(SIMPX[00m (NX das parkhotel)
					[01;31m(NX[00m
						(NX hannover) [01;33mSIMPX)[00m
						(ART [01;33m(SIMPX (SIMPX (SIMPX[00m das)
						(NX hotel cristal hannover)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF die)
			(LK sind)
			[01;31m(MF[00m
				(NX alle) [01;33mSIMPX)[00m
				[01;31m(ADVX[00m
					(ADVX mehr) [01;33mSIMPX)[00m
					(KON oder)
					(ADVX minder)[01;31m)[00m [01;33mSIMPX)[00m
				[01;31m(PX[00m
					(APPR in)
					(NX der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF ich)
			(LK kucke)
			[01;33m(MF[00m (MF mir mal die preise)
			(VC an)[01;31m)[00m
		(DM also)
		[01;31m(SIMPX[00m
			(VF
				(NX
					(ART das)
					(NX
						(NX hotel)
						(NX
							(NX cristal)
							[01;36m(VF[00m
								(NX
									(NE hannover))[01;36m)[00m))))
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF
						(ADVX vielleicht)
						[01;31m(ADJX[00m
							(NX ein bischen)
							(ADJD teuer)[01;31m)[00m)[01;31m)[00m
				[01;31m(LKM[00m
					(LK hat)
					[01;31m(MF[00m
						[01;36m(NX[00m
							(MF
								(PROP dafur)) [01;33mMF)[00m[01;36m)[00m
						(ADVX aber)
						[01;31m(NX[00m
							(ADVX sauna)
							[01;31m(NX[00m
								(NN solarium)[01;31m)[00m
							[01;31m(NX[00m
								(NN bar)[01;31m)[00m
							(KON und)
							(NX bistro)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Modifier Attachment
{'subtrees': ['KON', 'LKMN'], 'family': ['LKMVC', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'VVFIN', 'ADV', 'PPER', 'VVFIN', 'PTKVZ'), 'right siblings': [], 'left siblings': [(LKMVC (LK (VXFIN (VVFIN brauchen))) (MF (NX (PPER wir)) (NX (PRF uns)) (ADVX (ADV jetzt)) (ADVX (ADV vielleicht)) (ADVX (ADVX (ADV gar)) (PTKNEG nicht))) (VC (VXINF (VVINF festlegen))))], 'auto preterminal span': (21, 27), 'span': (21, 27), 'parent': 'FKOORD', 'label': 'ADVX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX [01;33m(SIMPX[00m
			(VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK brauchen)
					(MF wir uns jetzt vielleicht gar nicht)
					(VC festlegen)[01;31m)[00m [01;33mSIMPX)[00m
				(ADVX
					(KON und)
					[01;31m(LKMN[00m
						(LK sagen)
						[01;31m(MF[00m
							(ADVX
								(ADV einfach))[01;31m)[00m
						(NF wir fliegen zuruck)[01;31m)[00m)[01;31m)[00m)
		(DM gut)
		(ADVX dann)
		(SIMPX
			(VF dann)
			(LK denke)
			(MF ich)
			[01;31m(NF[00m
				(SIMPX
					(VF dann)
					(LK haben)
					(MF wir alles)
					[01;31m(PX[00m
						[01;36m(VC[00m
							(APPR auser)[01;36m)[00m
						[01;36m(NF[00m
							(SIMPX
								(C das)
								(MF
									(NX wir)
									(ADVX immer)
									(ADVX
										(ADVX noch)
										[01;36m(ADVX[00m
											(PTKNEG nicht)[01;36m)[00m))
								(VC wissen)
								(NF wo wir ubernachten konnen))[01;36m)[00m[01;31m)[00m)[01;31m)[00m)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX
			(VF dann)
			(LK konnen)
			(MF
				(NX wir)
				(ADVX abends)
				(ADVX noch)
				[01;36m(NX[00m
					(NX ein bischen)
					(PX in der bar)[01;36m)[00m)
			(VC sitzen))
		[01;31m(KOORD[00m
			(KON oder)[01;31m)[00m
		(VF auf alle falle)
		(SIMPX treffen wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF das)
			(LK ist)
			[01;31m(MF[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(ART das)
						[01;31m(NX[00m
							(NX marriotthotel) [01;33mSIMPX)[00m
							(NX hannover)[01;31m)[00m[01;31m)[00m
					[01;33m(SIMPX[00m (NX das parkhotel)
					[01;31m(NX[00m
						(NX hannover) [01;33mSIMPX)[00m
						(ART [01;33m(SIMPX (SIMPX (SIMPX[00m das)
						(NX hotel cristal hannover)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF die)
			(LK sind)
			[01;31m(MF[00m
				(NX alle) [01;33mSIMPX)[00m
				[01;31m(ADVX[00m
					(ADVX mehr) [01;33mSIMPX)[00m
					(KON oder)
					(ADVX minder)[01;31m)[00m [01;33mSIMPX)[00m
				[01;31m(PX[00m
					(APPR in)
					(NX der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF ich)
			(LK kucke)
			[01;33m(MF[00m (MF mir mal die preise)
			(VC an)[01;31m)[00m
		(DM also)
		[01;31m(SIMPX[00m
			(VF
				(NX
					(ART das)
					(NX
						(NX hotel)
						(NX
							(NX cristal)
							[01;36m(VF[00m
								(NX
									(NE hannover))[01;36m)[00m))))
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF
						(ADVX vielleicht)
						[01;31m(ADJX[00m
							(NX ein bischen)
							(ADJD teuer)[01;31m)[00m)[01;31m)[00m
				[01;31m(LKM[00m
					(LK hat)
					[01;31m(MF[00m
						[01;36m(NX[00m
							(MF
								(PROP dafur)) [01;33mMF)[00m[01;36m)[00m
						(ADVX aber)
						[01;31m(NX[00m
							(ADVX sauna)
							[01;31m(NX[00m
								(NN solarium)[01;31m)[00m
							[01;31m(NX[00m
								(NN bar)[01;31m)[00m
							(KON und)
							(NX bistro)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Single Word Phrase
{'subtrees': ['APPR'], 'family': ['VC', 'SIMPX'], 'over_word': True, 'over words': True, 'auto preterminals': ('APPR',), 'right siblings': [(SIMPX (C (KOUS das)) (MF (NX (PPER wir)) (ADVX (ADV immer)) (ADVX (ADVX (ADV noch)) (PTKNEG nicht))) (VC (VXFIN (VVFIN wissen))) (NF (R (C (PX (PWAV wo))) (MF (NX (PPER wir))) (VC (VXINF (VVINF ubernachten)) (VXFIN (VMFIN konnen))))))], 'left siblings': [], 'auto preterminal span': (36, 37), 'span': (36, 37), 'parent': 'PX', 'label': 'VC', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX [01;33m(SIMPX[00m
			(VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK brauchen)
					(MF wir uns jetzt vielleicht gar nicht)
					(VC festlegen)[01;31m)[00m [01;33mSIMPX)[00m
				(ADVX
					(KON und)
					[01;31m(LKMN[00m
						(LK sagen)
						[01;31m(MF[00m
							(ADVX
								(ADV einfach))[01;31m)[00m
						(NF wir fliegen zuruck)[01;31m)[00m)[01;31m)[00m)
		(DM gut)
		(ADVX dann)
		(SIMPX
			(VF dann)
			(LK denke)
			(MF ich)
			[01;31m(NF[00m
				(SIMPX
					(VF dann)
					(LK haben)
					(MF wir alles)
					[01;31m(PX[00m
						(VC auser)
						[01;36m(NF[00m
							(SIMPX
								(C das)
								(MF
									(NX wir)
									(ADVX immer)
									(ADVX
										(ADVX noch)
										[01;36m(ADVX[00m
											(PTKNEG nicht)[01;36m)[00m))
								(VC wissen)
								(NF wo wir ubernachten konnen))[01;36m)[00m[01;31m)[00m)[01;31m)[00m)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX
			(VF dann)
			(LK konnen)
			(MF
				(NX wir)
				(ADVX abends)
				(ADVX noch)
				[01;36m(NX[00m
					(NX ein bischen)
					(PX in der bar)[01;36m)[00m)
			(VC sitzen))
		[01;31m(KOORD[00m
			(KON oder)[01;31m)[00m
		(VF auf alle falle)
		(SIMPX treffen wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF das)
			(LK ist)
			[01;31m(MF[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(ART das)
						[01;31m(NX[00m
							(NX marriotthotel) [01;33mSIMPX)[00m
							(NX hannover)[01;31m)[00m[01;31m)[00m
					[01;33m(SIMPX[00m (NX das parkhotel)
					[01;31m(NX[00m
						(NX hannover) [01;33mSIMPX)[00m
						(ART [01;33m(SIMPX (SIMPX (SIMPX[00m das)
						(NX hotel cristal hannover)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF die)
			(LK sind)
			[01;31m(MF[00m
				(NX alle) [01;33mSIMPX)[00m
				[01;31m(ADVX[00m
					(ADVX mehr) [01;33mSIMPX)[00m
					(KON oder)
					(ADVX minder)[01;31m)[00m [01;33mSIMPX)[00m
				[01;31m(PX[00m
					(APPR in)
					(NX der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF ich)
			(LK kucke)
			[01;33m(MF[00m (MF mir mal die preise)
			(VC an)[01;31m)[00m
		(DM also)
		[01;31m(SIMPX[00m
			(VF
				(NX
					(ART das)
					(NX
						(NX hotel)
						(NX
							(NX cristal)
							[01;36m(VF[00m
								(NX
									(NE hannover))[01;36m)[00m))))
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF
						(ADVX vielleicht)
						[01;31m(ADJX[00m
							(NX ein bischen)
							(ADJD teuer)[01;31m)[00m)[01;31m)[00m
				[01;31m(LKM[00m
					(LK hat)
					[01;31m(MF[00m
						[01;36m(NX[00m
							(MF
								(PROP dafur)) [01;33mMF)[00m[01;36m)[00m
						(ADVX aber)
						[01;31m(NX[00m
							(ADVX sauna)
							[01;31m(NX[00m
								(NN solarium)[01;31m)[00m
							[01;31m(NX[00m
								(NN bar)[01;31m)[00m
							(KON und)
							(NX bistro)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'VVFIN', 'PWAV', 'PPER', 'VVINF', 'VMFIN'), 'right siblings': [], 'left siblings': [(VC (APPR auser))], 'auto preterminal span': (37, 47), 'span': (37, 47), 'parent': 'PX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX [01;33m(SIMPX[00m
			(VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK brauchen)
					(MF wir uns jetzt vielleicht gar nicht)
					(VC festlegen)[01;31m)[00m [01;33mSIMPX)[00m
				(ADVX
					(KON und)
					[01;31m(LKMN[00m
						(LK sagen)
						[01;31m(MF[00m
							(ADVX
								(ADV einfach))[01;31m)[00m
						(NF wir fliegen zuruck)[01;31m)[00m)[01;31m)[00m)
		(DM gut)
		(ADVX dann)
		(SIMPX
			(VF dann)
			(LK denke)
			(MF ich)
			[01;31m(NF[00m
				(SIMPX
					(VF dann)
					(LK haben)
					(MF wir alles)
					[01;31m(PX[00m
						(VC auser)
						(NF
							(SIMPX
								(C das)
								(MF
									(NX wir)
									(ADVX immer)
									(ADVX
										(ADVX noch)
										[01;36m(ADVX[00m
											(PTKNEG nicht)[01;36m)[00m))
								(VC wissen)
								(NF wo wir ubernachten konnen)))[01;31m)[00m)[01;31m)[00m)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX
			(VF dann)
			(LK konnen)
			(MF
				(NX wir)
				(ADVX abends)
				(ADVX noch)
				[01;36m(NX[00m
					(NX ein bischen)
					(PX in der bar)[01;36m)[00m)
			(VC sitzen))
		[01;31m(KOORD[00m
			(KON oder)[01;31m)[00m
		(VF auf alle falle)
		(SIMPX treffen wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF das)
			(LK ist)
			[01;31m(MF[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(ART das)
						[01;31m(NX[00m
							(NX marriotthotel) [01;33mSIMPX)[00m
							(NX hannover)[01;31m)[00m[01;31m)[00m
					[01;33m(SIMPX[00m (NX das parkhotel)
					[01;31m(NX[00m
						(NX hannover) [01;33mSIMPX)[00m
						(ART [01;33m(SIMPX (SIMPX (SIMPX[00m das)
						(NX hotel cristal hannover)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF die)
			(LK sind)
			[01;31m(MF[00m
				(NX alle) [01;33mSIMPX)[00m
				[01;31m(ADVX[00m
					(ADVX mehr) [01;33mSIMPX)[00m
					(KON oder)
					(ADVX minder)[01;31m)[00m [01;33mSIMPX)[00m
				[01;31m(PX[00m
					(APPR in)
					(NX der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF ich)
			(LK kucke)
			[01;33m(MF[00m (MF mir mal die preise)
			(VC an)[01;31m)[00m
		(DM also)
		[01;31m(SIMPX[00m
			(VF
				(NX
					(ART das)
					(NX
						(NX hotel)
						(NX
							(NX cristal)
							[01;36m(VF[00m
								(NX
									(NE hannover))[01;36m)[00m))))
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF
						(ADVX vielleicht)
						[01;31m(ADJX[00m
							(NX ein bischen)
							(ADJD teuer)[01;31m)[00m)[01;31m)[00m
				[01;31m(LKM[00m
					(LK hat)
					[01;31m(MF[00m
						[01;36m(NX[00m
							(MF
								(PROP dafur)) [01;33mMF)[00m[01;36m)[00m
						(ADVX aber)
						[01;31m(NX[00m
							(ADVX sauna)
							[01;31m(NX[00m
								(NN solarium)[01;31m)[00m
							[01;31m(NX[00m
								(NN bar)[01;31m)[00m
							(KON und)
							(NX bistro)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Single Word Phrase
{'subtrees': ['PTKNEG'], 'family': ['ADVX', 'ADVX'], 'over_word': True, 'over words': True, 'auto preterminals': ('PTKNEG',), 'right siblings': [], 'left siblings': [(ADVX (ADV noch))], 'auto preterminal span': (41, 42), 'span': (41, 42), 'parent': 'ADVX', 'label': 'ADVX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX [01;33m(SIMPX[00m
			(VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK brauchen)
					(MF wir uns jetzt vielleicht gar nicht)
					(VC festlegen)[01;31m)[00m [01;33mSIMPX)[00m
				(ADVX
					(KON und)
					[01;31m(LKMN[00m
						(LK sagen)
						[01;31m(MF[00m
							(ADVX
								(ADV einfach))[01;31m)[00m
						(NF wir fliegen zuruck)[01;31m)[00m)[01;31m)[00m)
		(DM gut)
		(ADVX dann)
		(SIMPX
			(VF dann)
			(LK denke)
			(MF ich)
			[01;31m(NF[00m
				(SIMPX
					(VF dann)
					(LK haben)
					(MF wir alles)
					[01;31m(PX[00m
						(VC auser)
						(NF das wir immer noch nicht wissen wo wir ubernachten konnen)[01;31m)[00m)[01;31m)[00m)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX
			(VF dann)
			(LK konnen)
			(MF
				(NX wir)
				(ADVX abends)
				(ADVX noch)
				[01;36m(NX[00m
					(NX ein bischen)
					(PX in der bar)[01;36m)[00m)
			(VC sitzen))
		[01;31m(KOORD[00m
			(KON oder)[01;31m)[00m
		(VF auf alle falle)
		(SIMPX treffen wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF das)
			(LK ist)
			[01;31m(MF[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(ART das)
						[01;31m(NX[00m
							(NX marriotthotel) [01;33mSIMPX)[00m
							(NX hannover)[01;31m)[00m[01;31m)[00m
					[01;33m(SIMPX[00m (NX das parkhotel)
					[01;31m(NX[00m
						(NX hannover) [01;33mSIMPX)[00m
						(ART [01;33m(SIMPX (SIMPX (SIMPX[00m das)
						(NX hotel cristal hannover)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF die)
			(LK sind)
			[01;31m(MF[00m
				(NX alle) [01;33mSIMPX)[00m
				[01;31m(ADVX[00m
					(ADVX mehr) [01;33mSIMPX)[00m
					(KON oder)
					(ADVX minder)[01;31m)[00m [01;33mSIMPX)[00m
				[01;31m(PX[00m
					(APPR in)
					(NX der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF ich)
			(LK kucke)
			[01;33m(MF[00m (MF mir mal die preise)
			(VC an)[01;31m)[00m
		(DM also)
		[01;31m(SIMPX[00m
			(VF
				(NX
					(ART das)
					(NX
						(NX hotel)
						(NX
							(NX cristal)
							[01;36m(VF[00m
								(NX
									(NE hannover))[01;36m)[00m))))
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF
						(ADVX vielleicht)
						[01;31m(ADJX[00m
							(NX ein bischen)
							(ADJD teuer)[01;31m)[00m)[01;31m)[00m
				[01;31m(LKM[00m
					(LK hat)
					[01;31m(MF[00m
						[01;36m(NX[00m
							(MF
								(PROP dafur)) [01;33mMF)[00m[01;36m)[00m
						(ADVX aber)
						[01;31m(NX[00m
							(ADVX sauna)
							[01;31m(NX[00m
								(NN solarium)[01;31m)[00m
							[01;31m(NX[00m
								(NN bar)[01;31m)[00m
							(KON und)
							(NX bistro)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['NX', 'ADVX', 'ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'PIS', 'APPR', 'ART', 'NN'), 'right siblings': [], 'left siblings': [(NX (PPER wir)), (ADVX (ADV abends)), (ADVX (ADV noch))], 'auto preterminal span': (60, 65), 'span': (60, 65), 'parent': 'MF', 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX [01;33m(SIMPX[00m
			(VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK brauchen)
					(MF wir uns jetzt vielleicht gar nicht)
					(VC festlegen)[01;31m)[00m [01;33mSIMPX)[00m
				(ADVX
					(KON und)
					[01;31m(LKMN[00m
						(LK sagen)
						[01;31m(MF[00m
							(ADVX
								(ADV einfach))[01;31m)[00m
						(NF wir fliegen zuruck)[01;31m)[00m)[01;31m)[00m)
		(DM gut)
		(ADVX dann)
		(SIMPX
			(VF dann)
			(LK denke)
			(MF ich)
			[01;31m(NF[00m
				(SIMPX
					(VF dann)
					(LK haben)
					(MF wir alles)
					[01;31m(PX[00m
						(VC auser)
						(NF das wir immer noch nicht wissen wo wir ubernachten konnen)[01;31m)[00m)[01;31m)[00m)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX dann konnen wir abends noch ein bischen in der bar sitzen)
		[01;31m(KOORD[00m
			(KON oder)[01;31m)[00m
		(VF auf alle falle)
		(SIMPX treffen wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF das)
			(LK ist)
			[01;31m(MF[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(ART das)
						[01;31m(NX[00m
							(NX marriotthotel) [01;33mSIMPX)[00m
							(NX hannover)[01;31m)[00m[01;31m)[00m
					[01;33m(SIMPX[00m (NX das parkhotel)
					[01;31m(NX[00m
						(NX hannover) [01;33mSIMPX)[00m
						(ART [01;33m(SIMPX (SIMPX (SIMPX[00m das)
						(NX hotel cristal hannover)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF die)
			(LK sind)
			[01;31m(MF[00m
				(NX alle) [01;33mSIMPX)[00m
				[01;31m(ADVX[00m
					(ADVX mehr) [01;33mSIMPX)[00m
					(KON oder)
					(ADVX minder)[01;31m)[00m [01;33mSIMPX)[00m
				[01;31m(PX[00m
					(APPR in)
					(NX der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF ich)
			(LK kucke)
			[01;33m(MF[00m (MF mir mal die preise)
			(VC an)[01;31m)[00m
		(DM also)
		[01;31m(SIMPX[00m
			(VF
				(NX
					(ART das)
					(NX
						(NX hotel)
						(NX
							(NX cristal)
							[01;36m(VF[00m
								(NX
									(NE hannover))[01;36m)[00m))))
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF
						(ADVX vielleicht)
						[01;31m(ADJX[00m
							(NX ein bischen)
							(ADJD teuer)[01;31m)[00m)[01;31m)[00m
				[01;31m(LKM[00m
					(LK hat)
					[01;31m(MF[00m
						[01;36m(NX[00m
							(MF
								(PROP dafur)) [01;33mMF)[00m[01;36m)[00m
						(ADVX aber)
						[01;31m(NX[00m
							(ADVX sauna)
							[01;31m(NX[00m
								(NN solarium)[01;31m)[00m
							[01;31m(NX[00m
								(NN bar)[01;31m)[00m
							(KON und)
							(NX bistro)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['NX'], 'family': ['NX', 'VF'], 'over_word': False, 'over words': False, 'auto preterminals': ('NE',), 'right siblings': [], 'left siblings': [(NX (NE cristal))], 'auto preterminal span': (118, 119), 'span': (118, 119), 'parent': 'NX', 'label': 'VF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX [01;33m(SIMPX[00m
			(VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK brauchen)
					(MF wir uns jetzt vielleicht gar nicht)
					(VC festlegen)[01;31m)[00m [01;33mSIMPX)[00m
				(ADVX
					(KON und)
					[01;31m(LKMN[00m
						(LK sagen)
						[01;31m(MF[00m
							(ADVX
								(ADV einfach))[01;31m)[00m
						(NF wir fliegen zuruck)[01;31m)[00m)[01;31m)[00m)
		(DM gut)
		(ADVX dann)
		(SIMPX
			(VF dann)
			(LK denke)
			(MF ich)
			[01;31m(NF[00m
				(SIMPX
					(VF dann)
					(LK haben)
					(MF wir alles)
					[01;31m(PX[00m
						(VC auser)
						(NF das wir immer noch nicht wissen wo wir ubernachten konnen)[01;31m)[00m)[01;31m)[00m)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX dann konnen wir abends noch ein bischen in der bar sitzen)
		[01;31m(KOORD[00m
			(KON oder)[01;31m)[00m
		(VF auf alle falle)
		(SIMPX treffen wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF das)
			(LK ist)
			[01;31m(MF[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(ART das)
						[01;31m(NX[00m
							(NX marriotthotel) [01;33mSIMPX)[00m
							(NX hannover)[01;31m)[00m[01;31m)[00m
					[01;33m(SIMPX[00m (NX das parkhotel)
					[01;31m(NX[00m
						(NX hannover) [01;33mSIMPX)[00m
						(ART [01;33m(SIMPX (SIMPX (SIMPX[00m das)
						(NX hotel cristal hannover)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF die)
			(LK sind)
			[01;31m(MF[00m
				(NX alle) [01;33mSIMPX)[00m
				[01;31m(ADVX[00m
					(ADVX mehr) [01;33mSIMPX)[00m
					(KON oder)
					(ADVX minder)[01;31m)[00m [01;33mSIMPX)[00m
				[01;31m(PX[00m
					(APPR in)
					(NX der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF ich)
			(LK kucke)
			[01;33m(MF[00m (MF mir mal die preise)
			(VC an)[01;31m)[00m
		(DM also)
		[01;31m(SIMPX[00m
			(VF das hotel cristal hannover)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF
						(ADVX vielleicht)
						[01;31m(ADJX[00m
							(NX ein bischen)
							(ADJD teuer)[01;31m)[00m)[01;31m)[00m
				[01;31m(LKM[00m
					(LK hat)
					[01;31m(MF[00m
						[01;36m(NX[00m
							(MF
								(PROP dafur)) [01;33mMF)[00m[01;36m)[00m
						(ADVX aber)
						[01;31m(NX[00m
							(ADVX sauna)
							[01;31m(NX[00m
								(NN solarium)[01;31m)[00m
							[01;31m(NX[00m
								(NN bar)[01;31m)[00m
							(KON und)
							(NX bistro)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['MF'], 'family': ['NX', 'ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PROP',), 'right siblings': [(ADVX (ADV aber)), (NX (ADVX (NN sauna)) (NX (NN solarium)) (NX (NN bar)) (KON und) (NX (NN bistro)))], 'left siblings': [], 'auto preterminal span': (125, 126), 'span': (125, 126), 'parent': 'MF', 'label': 'NX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX [01;33m(SIMPX[00m
			(VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK brauchen)
					(MF wir uns jetzt vielleicht gar nicht)
					(VC festlegen)[01;31m)[00m [01;33mSIMPX)[00m
				(ADVX
					(KON und)
					[01;31m(LKMN[00m
						(LK sagen)
						[01;31m(MF[00m
							(ADVX
								(ADV einfach))[01;31m)[00m
						(NF wir fliegen zuruck)[01;31m)[00m)[01;31m)[00m)
		(DM gut)
		(ADVX dann)
		(SIMPX
			(VF dann)
			(LK denke)
			(MF ich)
			[01;31m(NF[00m
				(SIMPX
					(VF dann)
					(LK haben)
					(MF wir alles)
					[01;31m(PX[00m
						(VC auser)
						(NF das wir immer noch nicht wissen wo wir ubernachten konnen)[01;31m)[00m)[01;31m)[00m)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX dann konnen wir abends noch ein bischen in der bar sitzen)
		[01;31m(KOORD[00m
			(KON oder)[01;31m)[00m
		(VF auf alle falle)
		(SIMPX treffen wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF das)
			(LK ist)
			[01;31m(MF[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(ART das)
						[01;31m(NX[00m
							(NX marriotthotel) [01;33mSIMPX)[00m
							(NX hannover)[01;31m)[00m[01;31m)[00m
					[01;33m(SIMPX[00m (NX das parkhotel)
					[01;31m(NX[00m
						(NX hannover) [01;33mSIMPX)[00m
						(ART [01;33m(SIMPX (SIMPX (SIMPX[00m das)
						(NX hotel cristal hannover)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF die)
			(LK sind)
			[01;31m(MF[00m
				(NX alle) [01;33mSIMPX)[00m
				[01;31m(ADVX[00m
					(ADVX mehr) [01;33mSIMPX)[00m
					(KON oder)
					(ADVX minder)[01;31m)[00m [01;33mSIMPX)[00m
				[01;31m(PX[00m
					(APPR in)
					(NX der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF ich)
			(LK kucke)
			[01;33m(MF[00m (MF mir mal die preise)
			(VC an)[01;31m)[00m
		(DM also)
		[01;31m(SIMPX[00m
			(VF das hotel cristal hannover)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF
						(ADVX vielleicht)
						[01;31m(ADJX[00m
							(NX ein bischen)
							(ADJD teuer)[01;31m)[00m)[01;31m)[00m
				[01;31m(LKM[00m
					(LK hat)
					[01;31m(MF[00m
						(NX dafur) [01;33mMF)[00m
						(ADVX aber)
						[01;31m(NX[00m
							(ADVX sauna)
							[01;31m(NX[00m
								(NN solarium)[01;31m)[00m
							[01;31m(NX[00m
								(NN bar)[01;31m)[00m
							(KON und)
							(NX bistro)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['LK', 'MF', 'VC'], 'family': ['LKMVC', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'VVFIN', 'ADV', 'PPER', 'VVFIN', 'PTKVZ'), 'right siblings': ['ADVX'], 'parent': 'FKOORD', 'auto preterminal span': (13, 27), 'span': (13, 21), 'left siblings': [], 'label': 'LKMVC', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX [01;33m(SIMPX[00m
			(VF dann)
			[01;31m(FKOORD[00m
				(LK brauchen)
				(MF wir uns jetzt vielleicht gar nicht)
				(VC festlegen) [01;33mSIMPX)[00m
				(ADVX
					(KON und)
					[01;31m(LKMN[00m
						(LK sagen)
						[01;31m(MF[00m
							(ADVX
								(ADV einfach))[01;31m)[00m
						(NF wir fliegen zuruck)[01;31m)[00m)[01;31m)[00m)
		(DM gut)
		(ADVX dann)
		(SIMPX
			(VF dann)
			(LK denke)
			(MF ich)
			[01;31m(NF[00m
				(SIMPX
					(VF dann)
					(LK haben)
					(MF wir alles)
					[01;31m(PX[00m
						(VC auser)
						(NF das wir immer noch nicht wissen wo wir ubernachten konnen)[01;31m)[00m)[01;31m)[00m)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX dann konnen wir abends noch ein bischen in der bar sitzen)
		[01;31m(KOORD[00m
			(KON oder)[01;31m)[00m
		(VF auf alle falle)
		(SIMPX treffen wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF das)
			(LK ist)
			[01;31m(MF[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(ART das)
						[01;31m(NX[00m
							(NX marriotthotel) [01;33mSIMPX)[00m
							(NX hannover)[01;31m)[00m[01;31m)[00m
					[01;33m(SIMPX[00m (NX das parkhotel)
					[01;31m(NX[00m
						(NX hannover) [01;33mSIMPX)[00m
						(ART [01;33m(SIMPX (SIMPX (SIMPX[00m das)
						(NX hotel cristal hannover)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF die)
			(LK sind)
			[01;31m(MF[00m
				(NX alle) [01;33mSIMPX)[00m
				[01;31m(ADVX[00m
					(ADVX mehr) [01;33mSIMPX)[00m
					(KON oder)
					(ADVX minder)[01;31m)[00m [01;33mSIMPX)[00m
				[01;31m(PX[00m
					(APPR in)
					(NX der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF ich)
			(LK kucke)
			[01;33m(MF[00m (MF mir mal die preise)
			(VC an)[01;31m)[00m
		(DM also)
		[01;31m(SIMPX[00m
			(VF das hotel cristal hannover)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF
						(ADVX vielleicht)
						[01;31m(ADJX[00m
							(NX ein bischen)
							(ADJD teuer)[01;31m)[00m)[01;31m)[00m
				[01;31m(LKM[00m
					(LK hat)
					[01;31m(MF[00m
						(NX dafur) [01;33mMF)[00m
						(ADVX aber)
						[01;31m(NX[00m
							(ADVX sauna)
							[01;31m(NX[00m
								(NN solarium)[01;31m)[00m
							[01;31m(NX[00m
								(NN bar)[01;31m)[00m
							(KON und)
							(NX bistro)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Modifier Attachment
{'subtrees': ['LK', 'MF', 'VC', 'ADVX'], 'family': ['VF', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'VVFIN', 'ADV', 'PPER', 'VVFIN', 'PTKVZ'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (12, 27), 'span': (13, 27), 'left siblings': ['VF'], 'label': 'FKOORD', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX
			[01;36m(SIMPX[00m
				(VF dann)
				(LK brauchen)
				(MF wir uns jetzt vielleicht gar nicht)
				(VC festlegen)[01;36m)[00m
			(ADVX
				(KON und)
				[01;31m(LKMN[00m
					(LK sagen)
					[01;31m(MF[00m
						(ADVX
							(ADV einfach))[01;31m)[00m
					(NF wir fliegen zuruck)[01;31m)[00m))
		(DM gut)
		(ADVX dann)
		(SIMPX
			(VF dann)
			(LK denke)
			(MF ich)
			[01;31m(NF[00m
				(SIMPX
					(VF dann)
					(LK haben)
					(MF wir alles)
					[01;31m(PX[00m
						(VC auser)
						(NF das wir immer noch nicht wissen wo wir ubernachten konnen)[01;31m)[00m)[01;31m)[00m)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX dann konnen wir abends noch ein bischen in der bar sitzen)
		[01;31m(KOORD[00m
			(KON oder)[01;31m)[00m
		(VF auf alle falle)
		(SIMPX treffen wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF das)
			(LK ist)
			[01;31m(MF[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(ART das)
						[01;31m(NX[00m
							(NX marriotthotel) [01;33mSIMPX)[00m
							(NX hannover)[01;31m)[00m[01;31m)[00m
					[01;33m(SIMPX[00m (NX das parkhotel)
					[01;31m(NX[00m
						(NX hannover) [01;33mSIMPX)[00m
						(ART [01;33m(SIMPX (SIMPX (SIMPX[00m das)
						(NX hotel cristal hannover)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF die)
			(LK sind)
			[01;31m(MF[00m
				(NX alle) [01;33mSIMPX)[00m
				[01;31m(ADVX[00m
					(ADVX mehr) [01;33mSIMPX)[00m
					(KON oder)
					(ADVX minder)[01;31m)[00m [01;33mSIMPX)[00m
				[01;31m(PX[00m
					(APPR in)
					(NX der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF ich)
			(LK kucke)
			[01;33m(MF[00m (MF mir mal die preise)
			(VC an)[01;31m)[00m
		(DM also)
		[01;31m(SIMPX[00m
			(VF das hotel cristal hannover)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF
						(ADVX vielleicht)
						[01;31m(ADJX[00m
							(NX ein bischen)
							(ADJD teuer)[01;31m)[00m)[01;31m)[00m
				[01;31m(LKM[00m
					(LK hat)
					[01;31m(MF[00m
						(NX dafur) [01;33mMF)[00m
						(ADVX aber)
						[01;31m(NX[00m
							(ADVX sauna)
							[01;31m(NX[00m
								(NN solarium)[01;31m)[00m
							[01;31m(NX[00m
								(NN bar)[01;31m)[00m
							(KON und)
							(NX bistro)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:UNSET add
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['SIMPX', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'VVINF'), 'right siblings': [(ADVX (KON und) (LKMN (LK (VXFIN (VVFIN sagen))) (MF (ADVX (ADV einfach))) (NF (SIMPX (VF (NX (PPER wir))) (LK (VXFIN (VVFIN fliegen))) (ADVX (PTKVZ zuruck))))))], 'left siblings': [], 'auto preterminal span': (12, 21), 'span': (12, 21), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX
			(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen)
			(ADVX
				(KON und)
				[01;31m(LKMN[00m
					(LK sagen)
					[01;31m(MF[00m
						(ADVX
							(ADV einfach))[01;31m)[00m
					(NF wir fliegen zuruck)[01;31m)[00m))
		(DM gut)
		(ADVX dann)
		(SIMPX
			(VF dann)
			(LK denke)
			(MF ich)
			[01;31m(NF[00m
				(SIMPX
					(VF dann)
					(LK haben)
					(MF wir alles)
					[01;31m(PX[00m
						(VC auser)
						(NF das wir immer noch nicht wissen wo wir ubernachten konnen)[01;31m)[00m)[01;31m)[00m)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX dann konnen wir abends noch ein bischen in der bar sitzen)
		[01;31m(KOORD[00m
			(KON oder)[01;31m)[00m
		(VF auf alle falle)
		(SIMPX treffen wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF das)
			(LK ist)
			[01;31m(MF[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(ART das)
						[01;31m(NX[00m
							(NX marriotthotel) [01;33mSIMPX)[00m
							(NX hannover)[01;31m)[00m[01;31m)[00m
					[01;33m(SIMPX[00m (NX das parkhotel)
					[01;31m(NX[00m
						(NX hannover) [01;33mSIMPX)[00m
						(ART [01;33m(SIMPX (SIMPX (SIMPX[00m das)
						(NX hotel cristal hannover)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF die)
			(LK sind)
			[01;31m(MF[00m
				(NX alle) [01;33mSIMPX)[00m
				[01;31m(ADVX[00m
					(ADVX mehr) [01;33mSIMPX)[00m
					(KON oder)
					(ADVX minder)[01;31m)[00m [01;33mSIMPX)[00m
				[01;31m(PX[00m
					(APPR in)
					(NX der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF ich)
			(LK kucke)
			[01;33m(MF[00m (MF mir mal die preise)
			(VC an)[01;31m)[00m
		(DM also)
		[01;31m(SIMPX[00m
			(VF das hotel cristal hannover)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF
						(ADVX vielleicht)
						[01;31m(ADJX[00m
							(NX ein bischen)
							(ADJD teuer)[01;31m)[00m)[01;31m)[00m
				[01;31m(LKM[00m
					(LK hat)
					[01;31m(MF[00m
						(NX dafur) [01;33mMF)[00m
						(ADVX aber)
						[01;31m(NX[00m
							(ADVX sauna)
							[01;31m(NX[00m
								(NN solarium)[01;31m)[00m
							[01;31m(NX[00m
								(NN bar)[01;31m)[00m
							(KON und)
							(NX bistro)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['LK', 'MF', 'NF'], 'family': ['KON', 'LKMN'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'VVFIN', 'ADV', 'PPER', 'VVFIN', 'PTKVZ'), 'right siblings': [], 'parent': 'ADVX', 'auto preterminal span': (21, 27), 'span': (22, 27), 'left siblings': ['KON'], 'label': 'LKMN', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX
			(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen)
			(ADVX
				(KON und)
				(LK sagen)
				[01;31m(MF[00m
					(ADVX
						(ADV einfach))[01;31m)[00m
				(NF wir fliegen zuruck)))
		(DM gut)
		(ADVX dann)
		(SIMPX
			(VF dann)
			(LK denke)
			(MF ich)
			[01;31m(NF[00m
				(SIMPX
					(VF dann)
					(LK haben)
					(MF wir alles)
					[01;31m(PX[00m
						(VC auser)
						(NF das wir immer noch nicht wissen wo wir ubernachten konnen)[01;31m)[00m)[01;31m)[00m)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX dann konnen wir abends noch ein bischen in der bar sitzen)
		[01;31m(KOORD[00m
			(KON oder)[01;31m)[00m
		(VF auf alle falle)
		(SIMPX treffen wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF das)
			(LK ist)
			[01;31m(MF[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(ART das)
						[01;31m(NX[00m
							(NX marriotthotel) [01;33mSIMPX)[00m
							(NX hannover)[01;31m)[00m[01;31m)[00m
					[01;33m(SIMPX[00m (NX das parkhotel)
					[01;31m(NX[00m
						(NX hannover) [01;33mSIMPX)[00m
						(ART [01;33m(SIMPX (SIMPX (SIMPX[00m das)
						(NX hotel cristal hannover)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF die)
			(LK sind)
			[01;31m(MF[00m
				(NX alle) [01;33mSIMPX)[00m
				[01;31m(ADVX[00m
					(ADVX mehr) [01;33mSIMPX)[00m
					(KON oder)
					(ADVX minder)[01;31m)[00m [01;33mSIMPX)[00m
				[01;31m(PX[00m
					(APPR in)
					(NX der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF ich)
			(LK kucke)
			[01;33m(MF[00m (MF mir mal die preise)
			(VC an)[01;31m)[00m
		(DM also)
		[01;31m(SIMPX[00m
			(VF das hotel cristal hannover)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF
						(ADVX vielleicht)
						[01;31m(ADJX[00m
							(NX ein bischen)
							(ADJD teuer)[01;31m)[00m)[01;31m)[00m
				[01;31m(LKM[00m
					(LK hat)
					[01;31m(MF[00m
						(NX dafur) [01;33mMF)[00m
						(ADVX aber)
						[01;31m(NX[00m
							(ADVX sauna)
							[01;31m(NX[00m
								(NN solarium)[01;31m)[00m
							[01;31m(NX[00m
								(NN bar)[01;31m)[00m
							(KON und)
							(NX bistro)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['KON', 'LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'VVFIN', 'ADV', 'PPER', 'VVFIN', 'PTKVZ'), 'right siblings': ['NF'], 'parent': 'ADVX', 'auto preterminal span': (21, 27), 'span': (23, 24), 'left siblings': ['KON', 'LK'], 'label': 'MF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen und sagen einfach wir fliegen zuruck)
		(DM gut)
		(ADVX dann)
		(SIMPX
			(VF dann)
			(LK denke)
			(MF ich)
			[01;31m(NF[00m
				(SIMPX
					(VF dann)
					(LK haben)
					(MF wir alles)
					[01;31m(PX[00m
						(VC auser)
						(NF das wir immer noch nicht wissen wo wir ubernachten konnen)[01;31m)[00m)[01;31m)[00m)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX dann konnen wir abends noch ein bischen in der bar sitzen)
		[01;31m(KOORD[00m
			(KON oder)[01;31m)[00m
		(VF auf alle falle)
		(SIMPX treffen wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF das)
			(LK ist)
			[01;31m(MF[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(ART das)
						[01;31m(NX[00m
							(NX marriotthotel) [01;33mSIMPX)[00m
							(NX hannover)[01;31m)[00m[01;31m)[00m
					[01;33m(SIMPX[00m (NX das parkhotel)
					[01;31m(NX[00m
						(NX hannover) [01;33mSIMPX)[00m
						(ART [01;33m(SIMPX (SIMPX (SIMPX[00m das)
						(NX hotel cristal hannover)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF die)
			(LK sind)
			[01;31m(MF[00m
				(NX alle) [01;33mSIMPX)[00m
				[01;31m(ADVX[00m
					(ADVX mehr) [01;33mSIMPX)[00m
					(KON oder)
					(ADVX minder)[01;31m)[00m [01;33mSIMPX)[00m
				[01;31m(PX[00m
					(APPR in)
					(NX der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF ich)
			(LK kucke)
			[01;33m(MF[00m (MF mir mal die preise)
			(VC an)[01;31m)[00m
		(DM also)
		[01;31m(SIMPX[00m
			(VF das hotel cristal hannover)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF
						(ADVX vielleicht)
						[01;31m(ADJX[00m
							(NX ein bischen)
							(ADJD teuer)[01;31m)[00m)[01;31m)[00m
				[01;31m(LKM[00m
					(LK hat)
					[01;31m(MF[00m
						(NX dafur) [01;33mMF)[00m
						(ADVX aber)
						[01;31m(NX[00m
							(ADVX sauna)
							[01;31m(NX[00m
								(NN solarium)[01;31m)[00m
							[01;31m(NX[00m
								(NN bar)[01;31m)[00m
							(KON und)
							(NX bistro)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['VF', 'LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'ADV', 'VAFIN', 'PPER', 'PIS', 'APPR', 'KOUS', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'VVFIN', 'PWAV', 'PPER', 'VVINF', 'VMFIN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (29, 47), 'span': (32, 47), 'left siblings': ['VF', 'LK', 'MF'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen und sagen einfach wir fliegen zuruck)
		(DM gut)
		(ADVX dann)
		(SIMPX
			(VF dann)
			(LK denke)
			(MF ich)
			(SIMPX
				(VF dann)
				(LK haben)
				(MF wir alles)
				[01;31m(PX[00m
					(VC auser)
					(NF das wir immer noch nicht wissen wo wir ubernachten konnen)[01;31m)[00m))
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX dann konnen wir abends noch ein bischen in der bar sitzen)
		[01;31m(KOORD[00m
			(KON oder)[01;31m)[00m
		(VF auf alle falle)
		(SIMPX treffen wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF das)
			(LK ist)
			[01;31m(MF[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(ART das)
						[01;31m(NX[00m
							(NX marriotthotel) [01;33mSIMPX)[00m
							(NX hannover)[01;31m)[00m[01;31m)[00m
					[01;33m(SIMPX[00m (NX das parkhotel)
					[01;31m(NX[00m
						(NX hannover) [01;33mSIMPX)[00m
						(ART [01;33m(SIMPX (SIMPX (SIMPX[00m das)
						(NX hotel cristal hannover)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF die)
			(LK sind)
			[01;31m(MF[00m
				(NX alle) [01;33mSIMPX)[00m
				[01;31m(ADVX[00m
					(ADVX mehr) [01;33mSIMPX)[00m
					(KON oder)
					(ADVX minder)[01;31m)[00m [01;33mSIMPX)[00m
				[01;31m(PX[00m
					(APPR in)
					(NX der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF ich)
			(LK kucke)
			[01;33m(MF[00m (MF mir mal die preise)
			(VC an)[01;31m)[00m
		(DM also)
		[01;31m(SIMPX[00m
			(VF das hotel cristal hannover)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF
						(ADVX vielleicht)
						[01;31m(ADJX[00m
							(NX ein bischen)
							(ADJD teuer)[01;31m)[00m)[01;31m)[00m
				[01;31m(LKM[00m
					(LK hat)
					[01;31m(MF[00m
						(NX dafur) [01;33mMF)[00m
						(ADVX aber)
						[01;31m(NX[00m
							(ADVX sauna)
							[01;31m(NX[00m
								(NN solarium)[01;31m)[00m
							[01;31m(NX[00m
								(NN bar)[01;31m)[00m
							(KON und)
							(NX bistro)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VC', 'NF'], 'family': ['VF', 'LK', 'MF', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'PIS', 'APPR', 'KOUS', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'VVFIN', 'PWAV', 'PPER', 'VVINF', 'VMFIN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (32, 47), 'span': (36, 47), 'left siblings': ['VF', 'LK', 'MF'], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen und sagen einfach wir fliegen zuruck)
		(DM gut)
		(ADVX dann)
		(SIMPX dann denke ich dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX dann konnen wir abends noch ein bischen in der bar sitzen)
		[01;31m(KOORD[00m
			(KON oder)[01;31m)[00m
		(VF auf alle falle)
		(SIMPX treffen wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF das)
			(LK ist)
			[01;31m(MF[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(ART das)
						[01;31m(NX[00m
							(NX marriotthotel) [01;33mSIMPX)[00m
							(NX hannover)[01;31m)[00m[01;31m)[00m
					[01;33m(SIMPX[00m (NX das parkhotel)
					[01;31m(NX[00m
						(NX hannover) [01;33mSIMPX)[00m
						(ART [01;33m(SIMPX (SIMPX (SIMPX[00m das)
						(NX hotel cristal hannover)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF die)
			(LK sind)
			[01;31m(MF[00m
				(NX alle) [01;33mSIMPX)[00m
				[01;31m(ADVX[00m
					(ADVX mehr) [01;33mSIMPX)[00m
					(KON oder)
					(ADVX minder)[01;31m)[00m [01;33mSIMPX)[00m
				[01;31m(PX[00m
					(APPR in)
					(NX der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF ich)
			(LK kucke)
			[01;33m(MF[00m (MF mir mal die preise)
			(VC an)[01;31m)[00m
		(DM also)
		[01;31m(SIMPX[00m
			(VF das hotel cristal hannover)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF
						(ADVX vielleicht)
						[01;31m(ADJX[00m
							(NX ein bischen)
							(ADJD teuer)[01;31m)[00m)[01;31m)[00m
				[01;31m(LKM[00m
					(LK hat)
					[01;31m(MF[00m
						(NX dafur) [01;33mMF)[00m
						(ADVX aber)
						[01;31m(NX[00m
							(ADVX sauna)
							[01;31m(NX[00m
								(NN solarium)[01;31m)[00m
							[01;31m(NX[00m
								(NN bar)[01;31m)[00m
							(KON und)
							(NX bistro)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'SIMPX', 'SIMPX', 'SIMPX', 'KOORD', 'VF', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'DM', 'SIMPX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ITJ', 'PTKANT', 'PDS', 'VVFIN', 'PTKANT', 'ADV', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ART', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'VVFIN', 'ADV', 'PPER', 'VVFIN', 'PTKVZ', 'ITJ', 'ADV', 'ADV', 'VVFIN', 'PPER', 'ADV', 'VAFIN', 'PPER', 'PIS', 'APPR', 'KOUS', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'VVFIN', 'PWAV', 'PPER', 'VVINF', 'VMFIN', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'APPR', 'PIDAT', 'NN', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'KON', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'VVPP', 'APPR', 'NN', 'PDS', 'VAFIN', 'ART', 'NE', 'NE', 'ART', 'NE', 'NE', 'ART', 'NN', 'NE', 'NE', 'PDS', 'VAFIN', 'PIS', 'ADV', 'KON', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'PPER', 'VVFIN', 'PRF', 'ADV', 'ART', 'NN', 'PTKVZ', 'ADV', 'ART', 'NN', 'NE', 'NE', 'VAFIN', 'ADV', 'ART', 'PIS', 'ADJD', 'VAFIN', 'PROP', 'ADV', 'NN', 'NN', 'NN', 'KON', 'NN'), 'right siblings': ['VF', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'DM', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 132), 'span': (66, 67), 'left siblings': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'SIMPX', 'SIMPX', 'SIMPX'], 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen und sagen einfach wir fliegen zuruck)
		(DM gut)
		(ADVX dann)
		(SIMPX dann denke ich dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX dann konnen wir abends noch ein bischen in der bar sitzen)
		(KON oder)
		(VF auf alle falle)
		(SIMPX treffen wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF das)
			(LK ist)
			[01;31m(MF[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(ART das)
						[01;31m(NX[00m
							(NX marriotthotel) [01;33mSIMPX)[00m
							(NX hannover)[01;31m)[00m[01;31m)[00m
					[01;33m(SIMPX[00m (NX das parkhotel)
					[01;31m(NX[00m
						(NX hannover) [01;33mSIMPX)[00m
						(ART [01;33m(SIMPX (SIMPX (SIMPX[00m das)
						(NX hotel cristal hannover)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF die)
			(LK sind)
			[01;31m(MF[00m
				(NX alle) [01;33mSIMPX)[00m
				[01;31m(ADVX[00m
					(ADVX mehr) [01;33mSIMPX)[00m
					(KON oder)
					(ADVX minder)[01;31m)[00m [01;33mSIMPX)[00m
				[01;31m(PX[00m
					(APPR in)
					(NX der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF ich)
			(LK kucke)
			[01;33m(MF[00m (MF mir mal die preise)
			(VC an)[01;31m)[00m
		(DM also)
		[01;31m(SIMPX[00m
			(VF das hotel cristal hannover)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF
						(ADVX vielleicht)
						[01;31m(ADJX[00m
							(NX ein bischen)
							(ADJD teuer)[01;31m)[00m)[01;31m)[00m
				[01;31m(LKM[00m
					(LK hat)
					[01;31m(MF[00m
						(NX dafur) [01;33mMF)[00m
						(ADVX aber)
						[01;31m(NX[00m
							(ADVX sauna)
							[01;31m(NX[00m
								(NN solarium)[01;31m)[00m
							[01;31m(NX[00m
								(NN bar)[01;31m)[00m
							(KON und)
							(NX bistro)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'SIMPX', 'SIMPX', 'SIMPX', 'KON', 'VF', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PTKANT', 'PDS', 'VVFIN', 'PTKANT', 'ADV', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ART', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'VVFIN', 'ADV', 'PPER', 'VVFIN', 'PTKVZ', 'ITJ', 'ADV', 'ADV', 'VVFIN', 'PPER', 'ADV', 'VAFIN', 'PPER', 'PIS', 'APPR', 'KOUS', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'VVFIN', 'PWAV', 'PPER', 'VVINF', 'VMFIN', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'APPR', 'PIDAT', 'NN', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'KON', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'VVPP', 'APPR', 'NN', 'PDS', 'VAFIN', 'ART', 'NE', 'NE', 'ART', 'NE', 'NE', 'ART', 'NN', 'NE', 'NE', 'PDS', 'VAFIN', 'PIS', 'ADV', 'KON', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'PPER', 'VVFIN', 'PRF', 'ADV', 'ART', 'NN', 'PTKVZ', 'ADV', 'ART', 'NN', 'NE', 'NE', 'VAFIN', 'ADV', 'ART', 'PIS', 'ADJD', 'VAFIN', 'PROP', 'ADV', 'NN', 'NN', 'NN', 'KON', 'NN'), 'right siblings': ['SIMPX', 'SIMPX', 'DM', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 132), 'span': (84, 96), 'left siblings': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'SIMPX', 'SIMPX', 'SIMPX', 'KON', 'VF', 'SIMPX', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen und sagen einfach wir fliegen zuruck)
		(DM gut)
		(ADVX dann)
		(SIMPX dann denke ich dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX dann konnen wir abends noch ein bischen in der bar sitzen)
		(KON oder)
		(VF auf alle falle)
		(SIMPX treffen wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		[01;33m(SIMPX[00m (VF das)
		(LK ist)
		[01;31m(MF[00m
			[01;31m(NX[00m
				[01;31m(NX[00m
					(ART das)
					[01;31m(NX[00m
						(NX marriotthotel) [01;33mSIMPX)[00m
						(NX hannover)[01;31m)[00m[01;31m)[00m
				[01;33m(SIMPX[00m (NX das parkhotel)
				[01;31m(NX[00m
					(NX hannover) [01;33mSIMPX)[00m
					(ART [01;33m(SIMPX (SIMPX (SIMPX[00m das)
					(NX hotel cristal hannover)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF die)
			(LK sind)
			[01;31m(MF[00m
				(NX alle) [01;33mSIMPX)[00m
				[01;31m(ADVX[00m
					(ADVX mehr) [01;33mSIMPX)[00m
					(KON oder)
					(ADVX minder)[01;31m)[00m [01;33mSIMPX)[00m
				[01;31m(PX[00m
					(APPR in)
					(NX der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF ich)
			(LK kucke)
			[01;33m(MF[00m (MF mir mal die preise)
			(VC an)[01;31m)[00m
		(DM also)
		[01;31m(SIMPX[00m
			(VF das hotel cristal hannover)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF
						(ADVX vielleicht)
						[01;31m(ADJX[00m
							(NX ein bischen)
							(ADJD teuer)[01;31m)[00m)[01;31m)[00m
				[01;31m(LKM[00m
					(LK hat)
					[01;31m(MF[00m
						(NX dafur) [01;33mMF)[00m
						(ADVX aber)
						[01;31m(NX[00m
							(ADVX sauna)
							[01;31m(NX[00m
								(NN solarium)[01;31m)[00m
							[01;31m(NX[00m
								(NN bar)[01;31m)[00m
							(KON und)
							(NX bistro)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['ART', 'NX'], 'family': ['NX', 'NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NE', 'NE', 'ART', 'NE', 'NE', 'ART', 'NN', 'NE', 'NE'), 'right siblings': ['NX', 'NX'], 'parent': 'NX', 'auto preterminal span': (86, 96), 'span': (86, 89), 'left siblings': [], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen und sagen einfach wir fliegen zuruck)
		(DM gut)
		(ADVX dann)
		(SIMPX dann denke ich dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX dann konnen wir abends noch ein bischen in der bar sitzen)
		(KON oder)
		(VF auf alle falle)
		(SIMPX treffen wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		[01;33m(SIMPX[00m (VF das)
		(LK ist)
		[01;31m(MF[00m
			[01;31m(NX[00m
				(ART das)
				[01;31m(NX[00m
					(NX marriotthotel) [01;33mSIMPX)[00m
					(NX hannover)[01;31m)[00m
				[01;33m(SIMPX[00m (NX das parkhotel)
				[01;31m(NX[00m
					(NX hannover) [01;33mSIMPX)[00m
					(ART [01;33m(SIMPX (SIMPX (SIMPX[00m das)
					(NX hotel cristal hannover)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF die)
			(LK sind)
			[01;31m(MF[00m
				(NX alle) [01;33mSIMPX)[00m
				[01;31m(ADVX[00m
					(ADVX mehr) [01;33mSIMPX)[00m
					(KON oder)
					(ADVX minder)[01;31m)[00m [01;33mSIMPX)[00m
				[01;31m(PX[00m
					(APPR in)
					(NX der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF ich)
			(LK kucke)
			[01;33m(MF[00m (MF mir mal die preise)
			(VC an)[01;31m)[00m
		(DM also)
		[01;31m(SIMPX[00m
			(VF das hotel cristal hannover)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF
						(ADVX vielleicht)
						[01;31m(ADJX[00m
							(NX ein bischen)
							(ADJD teuer)[01;31m)[00m)[01;31m)[00m
				[01;31m(LKM[00m
					(LK hat)
					[01;31m(MF[00m
						(NX dafur) [01;33mMF)[00m
						(ADVX aber)
						[01;31m(NX[00m
							(ADVX sauna)
							[01;31m(NX[00m
								(NN solarium)[01;31m)[00m
							[01;31m(NX[00m
								(NN bar)[01;31m)[00m
							(KON und)
							(NX bistro)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['ART', 'NX', 'NX', 'NX'], 'family': ['NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NE', 'NE', 'ART', 'NE', 'NE', 'ART', 'NN', 'NE', 'NE'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (86, 96), 'span': (86, 96), 'left siblings': [], 'label': 'NX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen und sagen einfach wir fliegen zuruck)
		(DM gut)
		(ADVX dann)
		(SIMPX dann denke ich dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX dann konnen wir abends noch ein bischen in der bar sitzen)
		(KON oder)
		(VF auf alle falle)
		(SIMPX treffen wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		[01;33m(SIMPX[00m (VF das)
		(LK ist)
		[01;31m(MF[00m
			(ART das)
			[01;31m(NX[00m
				(NX marriotthotel) [01;33mSIMPX)[00m
				(NX hannover)[01;31m)[00m
			[01;33m(SIMPX[00m (NX das parkhotel)
			[01;31m(NX[00m
				(NX hannover) [01;33mSIMPX)[00m
				(ART [01;33m(SIMPX (SIMPX (SIMPX[00m das)
				(NX hotel cristal hannover)[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF die)
			(LK sind)
			[01;31m(MF[00m
				(NX alle) [01;33mSIMPX)[00m
				[01;31m(ADVX[00m
					(ADVX mehr) [01;33mSIMPX)[00m
					(KON oder)
					(ADVX minder)[01;31m)[00m [01;33mSIMPX)[00m
				[01;31m(PX[00m
					(APPR in)
					(NX der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF ich)
			(LK kucke)
			[01;33m(MF[00m (MF mir mal die preise)
			(VC an)[01;31m)[00m
		(DM also)
		[01;31m(SIMPX[00m
			(VF das hotel cristal hannover)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF
						(ADVX vielleicht)
						[01;31m(ADJX[00m
							(NX ein bischen)
							(ADJD teuer)[01;31m)[00m)[01;31m)[00m
				[01;31m(LKM[00m
					(LK hat)
					[01;31m(MF[00m
						(NX dafur) [01;33mMF)[00m
						(ADVX aber)
						[01;31m(NX[00m
							(ADVX sauna)
							[01;31m(NX[00m
								(NN solarium)[01;31m)[00m
							[01;31m(NX[00m
								(NN bar)[01;31m)[00m
							(KON und)
							(NX bistro)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['ART', 'NX', 'NX', 'NX'], 'family': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'SIMPX', 'SIMPX', 'SIMPX', 'KON', 'VF', 'SIMPX', 'SIMPX', 'VF', 'LK', 'MF', 'SIMPX', 'SIMPX', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PTKANT', 'PDS', 'VVFIN', 'PTKANT', 'ADV', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ART', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'VVFIN', 'ADV', 'PPER', 'VVFIN', 'PTKVZ', 'ITJ', 'ADV', 'ADV', 'VVFIN', 'PPER', 'ADV', 'VAFIN', 'PPER', 'PIS', 'APPR', 'KOUS', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'VVFIN', 'PWAV', 'PPER', 'VVINF', 'VMFIN', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'APPR', 'PIDAT', 'NN', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'KON', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'VVPP', 'APPR', 'NN', 'PDS', 'VAFIN', 'ART', 'NE', 'NE', 'ART', 'NE', 'NE', 'ART', 'NN', 'NE', 'NE', 'PDS', 'VAFIN', 'PIS', 'ADV', 'KON', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'PPER', 'VVFIN', 'PRF', 'ADV', 'ART', 'NN', 'PTKVZ', 'ADV', 'ART', 'NN', 'NE', 'NE', 'VAFIN', 'ADV', 'ART', 'PIS', 'ADJD', 'VAFIN', 'PROP', 'ADV', 'NN', 'NN', 'NN', 'KON', 'NN'), 'right siblings': ['SIMPX', 'SIMPX', 'DM', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 132), 'span': (86, 96), 'left siblings': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'SIMPX', 'SIMPX', 'SIMPX', 'KON', 'VF', 'SIMPX', 'SIMPX', 'VF', 'LK'], 'label': 'MF', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen und sagen einfach wir fliegen zuruck)
		(DM gut)
		(ADVX dann)
		(SIMPX dann denke ich dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX dann konnen wir abends noch ein bischen in der bar sitzen)
		(KON oder)
		(VF auf alle falle)
		(SIMPX treffen wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		[01;33m(SIMPX[00m (VF das)
		(LK ist)
		(ART das)
		[01;31m(NX[00m
			(NX marriotthotel) [01;33mSIMPX)[00m
			(NX hannover)[01;31m)[00m
		[01;33m(SIMPX[00m (NX das parkhotel)
		[01;31m(NX[00m
			(NX hannover) [01;33mSIMPX)[00m
			(ART [01;33m(SIMPX (SIMPX (SIMPX[00m das)
			(NX hotel cristal hannover)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF die)
			(LK sind)
			[01;31m(MF[00m
				(NX alle) [01;33mSIMPX)[00m
				[01;31m(ADVX[00m
					(ADVX mehr) [01;33mSIMPX)[00m
					(KON oder)
					(ADVX minder)[01;31m)[00m [01;33mSIMPX)[00m
				[01;31m(PX[00m
					(APPR in)
					(NX der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF ich)
			(LK kucke)
			[01;33m(MF[00m (MF mir mal die preise)
			(VC an)[01;31m)[00m
		(DM also)
		[01;31m(SIMPX[00m
			(VF das hotel cristal hannover)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF
						(ADVX vielleicht)
						[01;31m(ADJX[00m
							(NX ein bischen)
							(ADJD teuer)[01;31m)[00m)[01;31m)[00m
				[01;31m(LKM[00m
					(LK hat)
					[01;31m(MF[00m
						(NX dafur) [01;33mMF)[00m
						(ADVX aber)
						[01;31m(NX[00m
							(ADVX sauna)
							[01;31m(NX[00m
								(NN solarium)[01;31m)[00m
							[01;31m(NX[00m
								(NN bar)[01;31m)[00m
							(KON und)
							(NX bistro)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:NP Attachment
{'new_parent': 'TURN', 'new_family': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'SIMPX', 'SIMPX', 'SIMPX', 'KON', 'VF', 'SIMPX', 'SIMPX', 'VF', 'LK', 'ART', 'NX', 'NX', 'NX', 'NX', 'SIMPX', 'SIMPX', 'DM', 'SIMPX'], 'mover info': [('NX', (87, 88))], 'old_family': ['NX', 'NX'], 'start left siblings': [], 'auto preterminals': ('ITJ', 'PTKANT', 'PDS', 'VVFIN', 'PTKANT', 'ADV', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ART', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'VVFIN', 'ADV', 'PPER', 'VVFIN', 'PTKVZ', 'ITJ', 'ADV', 'ADV', 'VVFIN', 'PPER', 'ADV', 'VAFIN', 'PPER', 'PIS', 'APPR', 'KOUS', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'VVFIN', 'PWAV', 'PPER', 'VVINF', 'VMFIN', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'APPR', 'PIDAT', 'NN', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'KON', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'VVPP', 'APPR', 'NN', 'PDS', 'VAFIN', 'ART', 'NE', 'NE', 'ART', 'NE', 'NE', 'ART', 'NN', 'NE', 'NE', 'PDS', 'VAFIN', 'PIS', 'ADV', 'KON', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'PPER', 'VVFIN', 'PRF', 'ADV', 'ART', 'NN', 'PTKVZ', 'ADV', 'ART', 'NN', 'NE', 'NE', 'VAFIN', 'ADV', 'ART', 'PIS', 'ADJD', 'VAFIN', 'PROP', 'ADV', 'NN', 'NN', 'NN', 'KON', 'NN'), 'start right siblings': ['NX'], 'end left siblings': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'SIMPX', 'SIMPX', 'SIMPX', 'KON', 'VF', 'SIMPX', 'SIMPX', 'VF', 'LK', 'ART'], 'auto preterminal span': (0, 132), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'NX', 'POS confusion': ('NE', 'NE'), 'added and moved': True, 'end right siblings': ['NX', 'NX', 'NX', 'SIMPX', 'SIMPX', 'DM', 'SIMPX'], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'SIMPX'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen und sagen einfach wir fliegen zuruck)
		(DM gut)
		(ADVX dann)
		(SIMPX dann denke ich dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX dann konnen wir abends noch ein bischen in der bar sitzen)
		(KON oder)
		(VF auf alle falle)
		(SIMPX treffen wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		(SIMPX das ist das marriotthotel)
		(NX hannover)
		[01;33m(SIMPX[00m (NX das parkhotel)
		[01;31m(NX[00m
			(NX hannover) [01;33mSIMPX)[00m
			(ART [01;33m(SIMPX (SIMPX (SIMPX[00m das)
			(NX hotel cristal hannover)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF die)
			(LK sind)
			[01;31m(MF[00m
				(NX alle) [01;33mSIMPX)[00m
				[01;31m(ADVX[00m
					(ADVX mehr) [01;33mSIMPX)[00m
					(KON oder)
					(ADVX minder)[01;31m)[00m [01;33mSIMPX)[00m
				[01;31m(PX[00m
					(APPR in)
					(NX der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF ich)
			(LK kucke)
			[01;33m(MF[00m (MF mir mal die preise)
			(VC an)[01;31m)[00m
		(DM also)
		[01;31m(SIMPX[00m
			(VF das hotel cristal hannover)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF
						(ADVX vielleicht)
						[01;31m(ADJX[00m
							(NX ein bischen)
							(ADJD teuer)[01;31m)[00m)[01;31m)[00m
				[01;31m(LKM[00m
					(LK hat)
					[01;31m(MF[00m
						(NX dafur) [01;33mMF)[00m
						(ADVX aber)
						[01;31m(NX[00m
							(ADVX sauna)
							[01;31m(NX[00m
								(NN solarium)[01;31m)[00m
							[01;31m(NX[00m
								(NN bar)[01;31m)[00m
							(KON und)
							(NX bistro)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['NX', 'ART', 'NX'], 'family': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'SIMPX', 'SIMPX', 'SIMPX', 'KON', 'VF', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'NX', 'NX', 'SIMPX', 'SIMPX', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PTKANT', 'PDS', 'VVFIN', 'PTKANT', 'ADV', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ART', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'VVFIN', 'ADV', 'PPER', 'VVFIN', 'PTKVZ', 'ITJ', 'ADV', 'ADV', 'VVFIN', 'PPER', 'ADV', 'VAFIN', 'PPER', 'PIS', 'APPR', 'KOUS', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'VVFIN', 'PWAV', 'PPER', 'VVINF', 'VMFIN', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'APPR', 'PIDAT', 'NN', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'KON', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'VVPP', 'APPR', 'NN', 'PDS', 'VAFIN', 'ART', 'NE', 'NE', 'ART', 'NE', 'NE', 'ART', 'NN', 'NE', 'NE', 'PDS', 'VAFIN', 'PIS', 'ADV', 'KON', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'PPER', 'VVFIN', 'PRF', 'ADV', 'ART', 'NN', 'PTKVZ', 'ADV', 'ART', 'NN', 'NE', 'NE', 'VAFIN', 'ADV', 'ART', 'PIS', 'ADJD', 'VAFIN', 'PROP', 'ADV', 'NN', 'NN', 'NN', 'KON', 'NN'), 'right siblings': ['SIMPX', 'SIMPX', 'DM', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 132), 'span': (91, 96), 'left siblings': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'SIMPX', 'SIMPX', 'SIMPX', 'KON', 'VF', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'NX'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen und sagen einfach wir fliegen zuruck)
		(DM gut)
		(ADVX dann)
		(SIMPX dann denke ich dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX dann konnen wir abends noch ein bischen in der bar sitzen)
		(KON oder)
		(VF auf alle falle)
		(SIMPX treffen wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		(SIMPX das ist das marriotthotel)
		(NX hannover)
		[01;36m(SIMPX[00m
			(NX das parkhotel)
			(NX hannover)[01;36m)[00m
		(ART [01;33m(SIMPX (SIMPX (SIMPX[00m das)
		(NX hotel cristal hannover)
		[01;31m(SIMPX[00m
			(VF die)
			(LK sind)
			[01;31m(MF[00m
				(NX alle) [01;33mSIMPX)[00m
				[01;31m(ADVX[00m
					(ADVX mehr) [01;33mSIMPX)[00m
					(KON oder)
					(ADVX minder)[01;31m)[00m [01;33mSIMPX)[00m
				[01;31m(PX[00m
					(APPR in)
					(NX der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF ich)
			(LK kucke)
			[01;33m(MF[00m (MF mir mal die preise)
			(VC an)[01;31m)[00m
		(DM also)
		[01;31m(SIMPX[00m
			(VF das hotel cristal hannover)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF
						(ADVX vielleicht)
						[01;31m(ADJX[00m
							(NX ein bischen)
							(ADJD teuer)[01;31m)[00m)[01;31m)[00m
				[01;31m(LKM[00m
					(LK hat)
					[01;31m(MF[00m
						(NX dafur) [01;33mMF)[00m
						(ADVX aber)
						[01;31m(NX[00m
							(ADVX sauna)
							[01;31m(NX[00m
								(NN solarium)[01;31m)[00m
							[01;31m(NX[00m
								(NN bar)[01;31m)[00m
							(KON und)
							(NX bistro)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:UNSET add
{'subtrees': ['NX', 'NX'], 'family': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'SIMPX', 'SIMPX', 'SIMPX', 'KON', 'VF', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX', 'ART', 'NX', 'SIMPX', 'SIMPX', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NE', 'NE'), 'right siblings': [(ART das), (NX (NX (NN hotel)) (NX (NX (NE cristal)) (NX (NE hannover)))), (SIMPX (VF (NX (PDS die))) (LK (VXFIN (VAFIN sind))) (MF (NX (PIS alle)) (ADVX (ADVX (ADV mehr)) (KON oder) (ADVX (ADV minder))) (PX (APPR in) (NX (NX (ART der) (NN nahe)) (PX (APPRART vom) (NX (NN hauptbahnhof))))))), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN kucke))) (MF (NX (PRF mir)) (ADVX (ADV mal)) (NX (ART die) (NN preise))) (VC (PTKVZ an))), (DM (ADVX (ADV also))), (SIMPX (VF (NX (ART das) (NX (NX (NN hotel)) (NX (NX (NE cristal)) (VF (NX (NE hannover))))))) (FKOORD (LKM (LK (VXFIN (VAFIN ist))) (MF (ADVX (ADV vielleicht)) (ADJX (NX (ART ein) (PIS bischen)) (ADJD teuer)))) (LKM (LK (VXFIN (VAFIN hat))) (MF (NX (MF (PROP dafur))) (ADVX (ADV aber)) (NX (ADVX (NN sauna)) (NX (NN solarium)) (NX (NN bar)) (KON und) (NX (NN bistro)))))))], 'left siblings': [(DM (ITJ na) (PTKANT ja)), (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VVFIN stimmt)))), (DM (PTKANT ja)), (DM (ADVX (ADV also))), (SIMPX (KOORD (KON und)) (VF (ADVX (ADV dann))) (LK (VXFIN (VMFIN konnen))) (MF (NX (PPER wir)) (ADVX (ADV einfach)) (NX (ART den)))), (SIMPX (SIMPX (VF (ADVX (ADV dann))) (LK (VXFIN (VVFIN brauchen))) (MF (NX (PPER wir)) (NX (PRF uns)) (ADVX (ADV jetzt)) (ADVX (ADV vielleicht)) (ADVX (ADVX (ADV gar)) (PTKNEG nicht))) (VC (VXINF (VVINF festlegen)))) (ADVX (KON und) (LK (VXFIN (VVFIN sagen))) (ADVX (ADV einfach)) (NF (SIMPX (VF (NX (PPER wir))) (LK (VXFIN (VVFIN fliegen))) (ADVX (PTKVZ zuruck)))))), (DM (ITJ gut)), (ADVX (ADV dann)), (SIMPX (VF (ADVX (ADV dann))) (LK (VXFIN (VVFIN denke))) (MF (NX (PPER ich))) (SIMPX (VF (ADVX (ADV dann))) (LK (VXFIN (VAFIN haben))) (MF (NX (PPER wir)) (NX (PIS alles))) (VC (APPR auser)) (NF (SIMPX (C (KOUS das)) (MF (NX (PPER wir)) (ADVX (ADV immer)) (ADVX (ADVX (ADV noch)) (ADVX (PTKNEG nicht)))) (VC (VXFIN (VVFIN wissen))) (NF (R (C (PX (PWAV wo))) (MF (NX (PPER wir))) (VC (VXINF (VVINF ubernachten)) (VXFIN (VMFIN konnen))))))))), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN denke))) (NF (SIMPX (VF (NX (PPER wir))) (LK (VXFIN (VVFIN nehmen))) (MF (ADVX (ADV zusammen)) (ADVX (ADV einfach)) (NX (ART ein) (NN hotel)))))), (SIMPX (VF (ADVX (ADV dann))) (LK (VXFIN (VMFIN konnen))) (MF (NX (PPER wir)) (ADVX (ADV abends)) (ADVX (ADV noch)) (NX (NX (ART ein) (PIS bischen)) (PX (APPR in) (NX (ART der) (NN bar))))) (VC (VXINF (VVINF sitzen)))), (KON oder), (VF (PX (APPR auf) (NX (PIDAT alle) (NN falle)))), (SIMPX (LK (VXFIN (VVFIN treffen))) (MF (NX (PPER wir)) (NX (PRF uns)) (ADVX (ADV dann)) (ADVX (ADV da)))), (SIMPX (KOORD (KON und)) (VF (NX (PPER ich))) (LK (VXFIN (VAFIN habe))) (MF (ADVX (ADV hier)) (NX (ART eine) (NN liste))) (VC (VXINF (VVPP vorbereitet))) (NF (PX (APPR mit) (NX (NN hotels))))), (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VAFIN ist))) (ART das) (NX (NE marriotthotel))), (NX (NE hannover))], 'auto preterminal span': (89, 92), 'span': (89, 92), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen und sagen einfach wir fliegen zuruck)
		(DM gut)
		(ADVX dann)
		(SIMPX dann denke ich dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX dann konnen wir abends noch ein bischen in der bar sitzen)
		(KON oder)
		(VF auf alle falle)
		(SIMPX treffen wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		(SIMPX das ist das marriotthotel)
		(NX hannover)
		(SIMPX das parkhotel hannover)
		(ART [01;33m(SIMPX (SIMPX (SIMPX[00m das)
		(NX hotel cristal hannover)
		[01;31m(SIMPX[00m
			(VF die)
			(LK sind)
			[01;31m(MF[00m
				(NX alle) [01;33mSIMPX)[00m
				[01;31m(ADVX[00m
					(ADVX mehr) [01;33mSIMPX)[00m
					(KON oder)
					(ADVX minder)[01;31m)[00m [01;33mSIMPX)[00m
				[01;31m(PX[00m
					(APPR in)
					(NX der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF ich)
			(LK kucke)
			[01;33m(MF[00m (MF mir mal die preise)
			(VC an)[01;31m)[00m
		(DM also)
		[01;31m(SIMPX[00m
			(VF das hotel cristal hannover)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF
						(ADVX vielleicht)
						[01;31m(ADJX[00m
							(NX ein bischen)
							(ADJD teuer)[01;31m)[00m)[01;31m)[00m
				[01;31m(LKM[00m
					(LK hat)
					[01;31m(MF[00m
						(NX dafur) [01;33mMF)[00m
						(ADVX aber)
						[01;31m(NX[00m
							(ADVX sauna)
							[01;31m(NX[00m
								(NN solarium)[01;31m)[00m
							[01;31m(NX[00m
								(NN bar)[01;31m)[00m
							(KON und)
							(NX bistro)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'SIMPX', 'SIMPX', 'SIMPX', 'KON', 'VF', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX', 'ART', 'NX', 'SIMPX', 'SIMPX', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PTKANT', 'PDS', 'VVFIN', 'PTKANT', 'ADV', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ART', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'VVFIN', 'ADV', 'PPER', 'VVFIN', 'PTKVZ', 'ITJ', 'ADV', 'ADV', 'VVFIN', 'PPER', 'ADV', 'VAFIN', 'PPER', 'PIS', 'APPR', 'KOUS', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'VVFIN', 'PWAV', 'PPER', 'VVINF', 'VMFIN', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'APPR', 'PIDAT', 'NN', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'KON', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'VVPP', 'APPR', 'NN', 'PDS', 'VAFIN', 'ART', 'NE', 'NE', 'ART', 'NE', 'NE', 'ART', 'NN', 'NE', 'NE', 'PDS', 'VAFIN', 'PIS', 'ADV', 'KON', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'PPER', 'VVFIN', 'PRF', 'ADV', 'ART', 'NN', 'PTKVZ', 'ADV', 'ART', 'NN', 'NE', 'NE', 'VAFIN', 'ADV', 'ART', 'PIS', 'ADJD', 'VAFIN', 'PROP', 'ADV', 'NN', 'NN', 'NN', 'KON', 'NN'), 'right siblings': ['SIMPX', 'DM', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 132), 'span': (96, 107), 'left siblings': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'SIMPX', 'SIMPX', 'SIMPX', 'KON', 'VF', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX', 'ART', 'NX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen und sagen einfach wir fliegen zuruck)
		(DM gut)
		(ADVX dann)
		(SIMPX dann denke ich dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX dann konnen wir abends noch ein bischen in der bar sitzen)
		(KON oder)
		(VF auf alle falle)
		(SIMPX treffen wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		(SIMPX das ist das marriotthotel)
		(NX hannover)
		(SIMPX das parkhotel hannover)
		(ART [01;33m(SIMPX (SIMPX (SIMPX[00m das)
		(NX hotel cristal hannover)
		(VF die)
		(LK sind)
		[01;31m(MF[00m
			(NX alle) [01;33mSIMPX)[00m
			[01;31m(ADVX[00m
				(ADVX mehr) [01;33mSIMPX)[00m
				(KON oder)
				(ADVX minder)[01;31m)[00m [01;33mSIMPX)[00m
			[01;31m(PX[00m
				(APPR in)
				(NX der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF ich)
			(LK kucke)
			[01;33m(MF[00m (MF mir mal die preise)
			(VC an)[01;31m)[00m
		(DM also)
		[01;31m(SIMPX[00m
			(VF das hotel cristal hannover)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF
						(ADVX vielleicht)
						[01;31m(ADJX[00m
							(NX ein bischen)
							(ADJD teuer)[01;31m)[00m)[01;31m)[00m
				[01;31m(LKM[00m
					(LK hat)
					[01;31m(MF[00m
						(NX dafur) [01;33mMF)[00m
						(ADVX aber)
						[01;31m(NX[00m
							(ADVX sauna)
							[01;31m(NX[00m
								(NN solarium)[01;31m)[00m
							[01;31m(NX[00m
								(NN bar)[01;31m)[00m
							(KON und)
							(NX bistro)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:PP Attachment
{'subtrees': ['NX', 'ADVX', 'PX'], 'family': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'SIMPX', 'SIMPX', 'SIMPX', 'KON', 'VF', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX', 'ART', 'NX', 'VF', 'LK', 'MF', 'SIMPX', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PTKANT', 'PDS', 'VVFIN', 'PTKANT', 'ADV', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ART', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'VVFIN', 'ADV', 'PPER', 'VVFIN', 'PTKVZ', 'ITJ', 'ADV', 'ADV', 'VVFIN', 'PPER', 'ADV', 'VAFIN', 'PPER', 'PIS', 'APPR', 'KOUS', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'VVFIN', 'PWAV', 'PPER', 'VVINF', 'VMFIN', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'APPR', 'PIDAT', 'NN', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'KON', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'VVPP', 'APPR', 'NN', 'PDS', 'VAFIN', 'ART', 'NE', 'NE', 'ART', 'NE', 'NE', 'ART', 'NN', 'NE', 'NE', 'PDS', 'VAFIN', 'PIS', 'ADV', 'KON', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'PPER', 'VVFIN', 'PRF', 'ADV', 'ART', 'NN', 'PTKVZ', 'ADV', 'ART', 'NN', 'NE', 'NE', 'VAFIN', 'ADV', 'ART', 'PIS', 'ADJD', 'VAFIN', 'PROP', 'ADV', 'NN', 'NN', 'NN', 'KON', 'NN'), 'right siblings': ['SIMPX', 'DM', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 132), 'span': (98, 107), 'left siblings': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'SIMPX', 'SIMPX', 'SIMPX', 'KON', 'VF', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX', 'ART', 'NX', 'VF', 'LK'], 'label': 'MF', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen und sagen einfach wir fliegen zuruck)
		(DM gut)
		(ADVX dann)
		(SIMPX dann denke ich dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX dann konnen wir abends noch ein bischen in der bar sitzen)
		(KON oder)
		(VF auf alle falle)
		(SIMPX treffen wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		(SIMPX das ist das marriotthotel)
		(NX hannover)
		(SIMPX das parkhotel hannover)
		[01;36m(SIMPX[00m
			[01;36m(SIMPX[00m
				(ART [01;33m(SIMPX[00m das)
				(NX hotel cristal hannover)
				(VF die)
				(LK sind)
				(NX alle)[01;36m)[00m
			[01;31m(ADVX[00m
				(ADVX mehr) [01;33mSIMPX)[00m
				(KON oder)
				(ADVX minder)[01;31m)[00m[01;36m)[00m
		[01;31m(PX[00m
			(APPR in)
			(NX der nahe vom hauptbahnhof)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF ich)
			(LK kucke)
			[01;33m(MF[00m (MF mir mal die preise)
			(VC an)[01;31m)[00m
		(DM also)
		[01;31m(SIMPX[00m
			(VF das hotel cristal hannover)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF
						(ADVX vielleicht)
						[01;31m(ADJX[00m
							(NX ein bischen)
							(ADJD teuer)[01;31m)[00m)[01;31m)[00m
				[01;31m(LKM[00m
					(LK hat)
					[01;31m(MF[00m
						(NX dafur) [01;33mMF)[00m
						(ADVX aber)
						[01;31m(NX[00m
							(ADVX sauna)
							[01;31m(NX[00m
								(NN solarium)[01;31m)[00m
							[01;31m(NX[00m
								(NN bar)[01;31m)[00m
							(KON und)
							(NX bistro)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Co-ordination
{'new_parent': 'TURN', 'new_family': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'SIMPX', 'SIMPX', 'SIMPX', 'KON', 'VF', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX', 'ART', 'NX', 'VF', 'LK', 'NX', 'ADVX', 'KON', 'ADVX', 'PX', 'SIMPX', 'DM', 'SIMPX'], 'mover info': [('ADVX', (99, 100)), ('KON', (100, 101))], 'old_family': ['ADVX', 'KON', 'ADVX'], 'start left siblings': [], 'auto preterminals': ('ITJ', 'PTKANT', 'PDS', 'VVFIN', 'PTKANT', 'ADV', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ART', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'VVFIN', 'ADV', 'PPER', 'VVFIN', 'PTKVZ', 'ITJ', 'ADV', 'ADV', 'VVFIN', 'PPER', 'ADV', 'VAFIN', 'PPER', 'PIS', 'APPR', 'KOUS', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'VVFIN', 'PWAV', 'PPER', 'VVINF', 'VMFIN', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'APPR', 'PIDAT', 'NN', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'KON', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'VVPP', 'APPR', 'NN', 'PDS', 'VAFIN', 'ART', 'NE', 'NE', 'ART', 'NE', 'NE', 'ART', 'NN', 'NE', 'NE', 'PDS', 'VAFIN', 'PIS', 'ADV', 'KON', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'PPER', 'VVFIN', 'PRF', 'ADV', 'ART', 'NN', 'PTKVZ', 'ADV', 'ART', 'NN', 'NE', 'NE', 'VAFIN', 'ADV', 'ART', 'PIS', 'ADJD', 'VAFIN', 'PROP', 'ADV', 'NN', 'NN', 'NN', 'KON', 'NN'), 'start right siblings': ['ADVX'], 'end left siblings': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'SIMPX', 'SIMPX', 'SIMPX', 'KON', 'VF', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX', 'ART', 'NX', 'VF', 'LK', 'NX'], 'auto preterminal span': (0, 132), 'adding node already present': False, 'movers': ['ADVX', 'KON'], 'old_parent': 'ADVX', 'added and moved': True, 'end right siblings': ['ADVX', 'PX', 'SIMPX', 'DM', 'SIMPX'], 'classified_type': 'Co-ordination', 'type': 'move', 'added label': 'SIMPX'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen und sagen einfach wir fliegen zuruck)
		(DM gut)
		(ADVX dann)
		(SIMPX dann denke ich dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX dann konnen wir abends noch ein bischen in der bar sitzen)
		(KON oder)
		(VF auf alle falle)
		(SIMPX treffen wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		(SIMPX das ist das marriotthotel)
		(NX hannover)
		(SIMPX das parkhotel hannover)
		(SIMPX
			[01;36m(SIMPX[00m
				[01;36m(SIMPX[00m
					(ART das)
					(NX hotel cristal hannover)
					(VF die)
					(LK sind)
					(NX alle)[01;36m)[00m
				(ADVX mehr)[01;36m)[00m
			(KON oder)
			(ADVX minder))
		[01;31m(PX[00m
			(APPR in)
			(NX der nahe vom hauptbahnhof)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF ich)
			(LK kucke)
			[01;33m(MF[00m (MF mir mal die preise)
			(VC an)[01;31m)[00m
		(DM also)
		[01;31m(SIMPX[00m
			(VF das hotel cristal hannover)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF
						(ADVX vielleicht)
						[01;31m(ADJX[00m
							(NX ein bischen)
							(ADJD teuer)[01;31m)[00m)[01;31m)[00m
				[01;31m(LKM[00m
					(LK hat)
					[01;31m(MF[00m
						(NX dafur) [01;33mMF)[00m
						(ADVX aber)
						[01;31m(NX[00m
							(ADVX sauna)
							[01;31m(NX[00m
								(NN solarium)[01;31m)[00m
							[01;31m(NX[00m
								(NN bar)[01;31m)[00m
							(KON und)
							(NX bistro)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:UNSET add
{'subtrees': ['ART', 'NX', 'VF', 'LK', 'NX'], 'family': ['SIMPX', 'ADVX', 'KON', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'NE', 'NE', 'PDS', 'VAFIN', 'PIS'), 'right siblings': [(ADVX (ADV mehr)), (KON oder), (ADVX (ADV minder))], 'left siblings': [], 'auto preterminal span': (92, 99), 'span': (92, 99), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen und sagen einfach wir fliegen zuruck)
		(DM gut)
		(ADVX dann)
		(SIMPX dann denke ich dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX dann konnen wir abends noch ein bischen in der bar sitzen)
		(KON oder)
		(VF auf alle falle)
		(SIMPX treffen wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		(SIMPX das ist das marriotthotel)
		(NX hannover)
		(SIMPX das parkhotel hannover)
		(SIMPX
			[01;36m(SIMPX[00m
				(SIMPX das hotel cristal hannover die sind alle)
				(ADVX mehr)[01;36m)[00m
			(KON oder)
			(ADVX minder))
		[01;31m(PX[00m
			(APPR in)
			(NX der nahe vom hauptbahnhof)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF ich)
			(LK kucke)
			[01;33m(MF[00m (MF mir mal die preise)
			(VC an)[01;31m)[00m
		(DM also)
		[01;31m(SIMPX[00m
			(VF das hotel cristal hannover)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF
						(ADVX vielleicht)
						[01;31m(ADJX[00m
							(NX ein bischen)
							(ADJD teuer)[01;31m)[00m)[01;31m)[00m
				[01;31m(LKM[00m
					(LK hat)
					[01;31m(MF[00m
						(NX dafur) [01;33mMF)[00m
						(ADVX aber)
						[01;31m(NX[00m
							(ADVX sauna)
							[01;31m(NX[00m
								(NN solarium)[01;31m)[00m
							[01;31m(NX[00m
								(NN bar)[01;31m)[00m
							(KON und)
							(NX bistro)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Modifier Attachment
{'subtrees': ['SIMPX', 'ADVX'], 'family': ['SIMPX', 'KON', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'NE', 'NE', 'PDS', 'VAFIN', 'PIS', 'ADV'), 'right siblings': [(KON oder), (ADVX (ADV minder))], 'left siblings': [], 'auto preterminal span': (92, 100), 'span': (92, 100), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen und sagen einfach wir fliegen zuruck)
		(DM gut)
		(ADVX dann)
		(SIMPX dann denke ich dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX dann konnen wir abends noch ein bischen in der bar sitzen)
		(KON oder)
		(VF auf alle falle)
		(SIMPX treffen wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		(SIMPX das ist das marriotthotel)
		(NX hannover)
		(SIMPX das parkhotel hannover)
		(SIMPX das hotel cristal hannover die sind alle mehr oder minder)
		[01;31m(PX[00m
			(APPR in)
			(NX der nahe vom hauptbahnhof)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF ich)
			(LK kucke)
			[01;33m(MF[00m (MF mir mal die preise)
			(VC an)[01;31m)[00m
		(DM also)
		[01;31m(SIMPX[00m
			(VF das hotel cristal hannover)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF
						(ADVX vielleicht)
						[01;31m(ADJX[00m
							(NX ein bischen)
							(ADJD teuer)[01;31m)[00m)[01;31m)[00m
				[01;31m(LKM[00m
					(LK hat)
					[01;31m(MF[00m
						(NX dafur) [01;33mMF)[00m
						(ADVX aber)
						[01;31m(NX[00m
							(ADVX sauna)
							[01;31m(NX[00m
								(NN solarium)[01;31m)[00m
							[01;31m(NX[00m
								(NN bar)[01;31m)[00m
							(KON und)
							(NX bistro)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['APPR', 'NX'], 'family': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'SIMPX', 'SIMPX', 'SIMPX', 'KON', 'VF', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX', 'SIMPX', 'PX', 'SIMPX', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PTKANT', 'PDS', 'VVFIN', 'PTKANT', 'ADV', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ART', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'VVFIN', 'ADV', 'PPER', 'VVFIN', 'PTKVZ', 'ITJ', 'ADV', 'ADV', 'VVFIN', 'PPER', 'ADV', 'VAFIN', 'PPER', 'PIS', 'APPR', 'KOUS', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'VVFIN', 'PWAV', 'PPER', 'VVINF', 'VMFIN', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'APPR', 'PIDAT', 'NN', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'KON', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'VVPP', 'APPR', 'NN', 'PDS', 'VAFIN', 'ART', 'NE', 'NE', 'ART', 'NE', 'NE', 'ART', 'NN', 'NE', 'NE', 'PDS', 'VAFIN', 'PIS', 'ADV', 'KON', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'PPER', 'VVFIN', 'PRF', 'ADV', 'ART', 'NN', 'PTKVZ', 'ADV', 'ART', 'NN', 'NE', 'NE', 'VAFIN', 'ADV', 'ART', 'PIS', 'ADJD', 'VAFIN', 'PROP', 'ADV', 'NN', 'NN', 'NN', 'KON', 'NN'), 'right siblings': ['SIMPX', 'DM', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 132), 'span': (102, 107), 'left siblings': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'SIMPX', 'SIMPX', 'SIMPX', 'KON', 'VF', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX', 'SIMPX'], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen und sagen einfach wir fliegen zuruck)
		(DM gut)
		(ADVX dann)
		(SIMPX dann denke ich dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX dann konnen wir abends noch ein bischen in der bar sitzen)
		(KON oder)
		(VF auf alle falle)
		(SIMPX treffen wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		(SIMPX das ist das marriotthotel)
		(NX hannover)
		(SIMPX das parkhotel hannover)
		(SIMPX das hotel cristal hannover die sind alle mehr oder minder)
		(APPR in)
		(NX der nahe vom hauptbahnhof)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK kucke)
			[01;33m(MF[00m (MF mir mal die preise)
			(VC an)[01;31m)[00m
		(DM also)
		[01;31m(SIMPX[00m
			(VF das hotel cristal hannover)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF
						(ADVX vielleicht)
						[01;31m(ADJX[00m
							(NX ein bischen)
							(ADJD teuer)[01;31m)[00m)[01;31m)[00m
				[01;31m(LKM[00m
					(LK hat)
					[01;31m(MF[00m
						(NX dafur) [01;33mMF)[00m
						(ADVX aber)
						[01;31m(NX[00m
							(ADVX sauna)
							[01;31m(NX[00m
								(NN solarium)[01;31m)[00m
							[01;31m(NX[00m
								(NN bar)[01;31m)[00m
							(KON und)
							(NX bistro)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'SIMPX', 'SIMPX', 'SIMPX', 'KON', 'VF', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX', 'SIMPX', 'APPR', 'NX', 'SIMPX', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PTKANT', 'PDS', 'VVFIN', 'PTKANT', 'ADV', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ART', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'VVFIN', 'ADV', 'PPER', 'VVFIN', 'PTKVZ', 'ITJ', 'ADV', 'ADV', 'VVFIN', 'PPER', 'ADV', 'VAFIN', 'PPER', 'PIS', 'APPR', 'KOUS', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'VVFIN', 'PWAV', 'PPER', 'VVINF', 'VMFIN', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'APPR', 'PIDAT', 'NN', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'KON', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'VVPP', 'APPR', 'NN', 'PDS', 'VAFIN', 'ART', 'NE', 'NE', 'ART', 'NE', 'NE', 'ART', 'NN', 'NE', 'NE', 'PDS', 'VAFIN', 'PIS', 'ADV', 'KON', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'PPER', 'VVFIN', 'PRF', 'ADV', 'ART', 'NN', 'PTKVZ', 'ADV', 'ART', 'NN', 'NE', 'NE', 'VAFIN', 'ADV', 'ART', 'PIS', 'ADJD', 'VAFIN', 'PROP', 'ADV', 'NN', 'NN', 'NN', 'KON', 'NN'), 'right siblings': ['DM', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 132), 'span': (107, 114), 'left siblings': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'SIMPX', 'SIMPX', 'SIMPX', 'KON', 'VF', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX', 'SIMPX', 'APPR', 'NX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen und sagen einfach wir fliegen zuruck)
		(DM gut)
		(ADVX dann)
		(SIMPX dann denke ich dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX dann konnen wir abends noch ein bischen in der bar sitzen)
		(KON oder)
		(VF auf alle falle)
		(SIMPX treffen wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		(SIMPX das ist das marriotthotel)
		(NX hannover)
		(SIMPX das parkhotel hannover)
		(SIMPX das hotel cristal hannover die sind alle mehr oder minder)
		(APPR in)
		(NX der nahe vom hauptbahnhof)
		(VF ich)
		(LK kucke)
		[01;33m(MF[00m (MF mir mal die preise)
		(VC an)
		(DM also)
		[01;31m(SIMPX[00m
			(VF das hotel cristal hannover)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF
						(ADVX vielleicht)
						[01;31m(ADJX[00m
							(NX ein bischen)
							(ADJD teuer)[01;31m)[00m)[01;31m)[00m
				[01;31m(LKM[00m
					(LK hat)
					[01;31m(MF[00m
						(NX dafur) [01;33mMF)[00m
						(ADVX aber)
						[01;31m(NX[00m
							(ADVX sauna)
							[01;31m(NX[00m
								(NN solarium)[01;31m)[00m
							[01;31m(NX[00m
								(NN bar)[01;31m)[00m
							(KON und)
							(NX bistro)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VF', 'FKOORD'], 'family': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'SIMPX', 'SIMPX', 'SIMPX', 'KON', 'VF', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX', 'SIMPX', 'APPR', 'NX', 'VF', 'LK', 'MF', 'VC', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PTKANT', 'PDS', 'VVFIN', 'PTKANT', 'ADV', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ART', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'VVFIN', 'ADV', 'PPER', 'VVFIN', 'PTKVZ', 'ITJ', 'ADV', 'ADV', 'VVFIN', 'PPER', 'ADV', 'VAFIN', 'PPER', 'PIS', 'APPR', 'KOUS', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'VVFIN', 'PWAV', 'PPER', 'VVINF', 'VMFIN', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'APPR', 'PIDAT', 'NN', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'KON', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'VVPP', 'APPR', 'NN', 'PDS', 'VAFIN', 'ART', 'NE', 'NE', 'ART', 'NE', 'NE', 'ART', 'NN', 'NE', 'NE', 'PDS', 'VAFIN', 'PIS', 'ADV', 'KON', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'PPER', 'VVFIN', 'PRF', 'ADV', 'ART', 'NN', 'PTKVZ', 'ADV', 'ART', 'NN', 'NE', 'NE', 'VAFIN', 'ADV', 'ART', 'PIS', 'ADJD', 'VAFIN', 'PROP', 'ADV', 'NN', 'NN', 'NN', 'KON', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 132), 'span': (115, 132), 'left siblings': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'SIMPX', 'SIMPX', 'SIMPX', 'KON', 'VF', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX', 'SIMPX', 'APPR', 'NX', 'VF', 'LK', 'MF', 'VC', 'DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen und sagen einfach wir fliegen zuruck)
		(DM gut)
		(ADVX dann)
		(SIMPX dann denke ich dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX dann konnen wir abends noch ein bischen in der bar sitzen)
		(KON oder)
		(VF auf alle falle)
		(SIMPX treffen wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		(SIMPX das ist das marriotthotel)
		(NX hannover)
		(SIMPX das parkhotel hannover)
		(SIMPX das hotel cristal hannover die sind alle mehr oder minder)
		(APPR in)
		(NX der nahe vom hauptbahnhof)
		(VF ich)
		(LK kucke)
		[01;33m(MF[00m (MF mir mal die preise)
		(VC an)
		(DM also)
		(VF das hotel cristal hannover)
		[01;31m(FKOORD[00m
			[01;31m(LKM[00m
				(LK ist)
				(MF
					(ADVX vielleicht)
					[01;31m(ADJX[00m
						(NX ein bischen)
						(ADJD teuer)[01;31m)[00m)[01;31m)[00m
			[01;31m(LKM[00m
				(LK hat)
				[01;31m(MF[00m
					(NX dafur) [01;33mMF)[00m
					(ADVX aber)
					[01;31m(NX[00m
						(ADVX sauna)
						[01;31m(NX[00m
							(NN solarium)[01;31m)[00m
						[01;31m(NX[00m
							(NN bar)[01;31m)[00m
						(KON und)
						(NX bistro)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['LKM', 'LKM'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'ADV', 'ART', 'PIS', 'ADJD', 'VAFIN', 'PROP', 'ADV', 'NN', 'NN', 'NN', 'KON', 'NN'), 'right siblings': ['LKM'], 'parent': 'FKOORD', 'auto preterminal span': (119, 132), 'span': (119, 124), 'left siblings': [], 'label': 'LKM', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen und sagen einfach wir fliegen zuruck)
		(DM gut)
		(ADVX dann)
		(SIMPX dann denke ich dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX dann konnen wir abends noch ein bischen in der bar sitzen)
		(KON oder)
		(VF auf alle falle)
		(SIMPX treffen wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		(SIMPX das ist das marriotthotel)
		(NX hannover)
		(SIMPX das parkhotel hannover)
		(SIMPX das hotel cristal hannover die sind alle mehr oder minder)
		(APPR in)
		(NX der nahe vom hauptbahnhof)
		(VF ich)
		(LK kucke)
		[01;33m(MF[00m (MF mir mal die preise)
		(VC an)
		(DM also)
		(VF das hotel cristal hannover)
		[01;31m(FKOORD[00m
			(LK ist)
			(MF
				(ADVX vielleicht)
				[01;31m(ADJX[00m
					(NX ein bischen)
					(ADJD teuer)[01;31m)[00m)
			[01;31m(LKM[00m
				(LK hat)
				[01;31m(MF[00m
					(NX dafur) [01;33mMF)[00m
					(ADVX aber)
					[01;31m(NX[00m
						(ADVX sauna)
						[01;31m(NX[00m
							(NN solarium)[01;31m)[00m
						[01;31m(NX[00m
							(NN bar)[01;31m)[00m
						(KON und)
						(NX bistro)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['LK', 'MF', 'LKM'], 'family': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'SIMPX', 'SIMPX', 'SIMPX', 'KON', 'VF', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX', 'SIMPX', 'APPR', 'NX', 'VF', 'LK', 'MF', 'VC', 'DM', 'VF', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PTKANT', 'PDS', 'VVFIN', 'PTKANT', 'ADV', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ART', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'VVFIN', 'ADV', 'PPER', 'VVFIN', 'PTKVZ', 'ITJ', 'ADV', 'ADV', 'VVFIN', 'PPER', 'ADV', 'VAFIN', 'PPER', 'PIS', 'APPR', 'KOUS', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'VVFIN', 'PWAV', 'PPER', 'VVINF', 'VMFIN', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'APPR', 'PIDAT', 'NN', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'KON', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'VVPP', 'APPR', 'NN', 'PDS', 'VAFIN', 'ART', 'NE', 'NE', 'ART', 'NE', 'NE', 'ART', 'NN', 'NE', 'NE', 'PDS', 'VAFIN', 'PIS', 'ADV', 'KON', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'PPER', 'VVFIN', 'PRF', 'ADV', 'ART', 'NN', 'PTKVZ', 'ADV', 'ART', 'NN', 'NE', 'NE', 'VAFIN', 'ADV', 'ART', 'PIS', 'ADJD', 'VAFIN', 'PROP', 'ADV', 'NN', 'NN', 'NN', 'KON', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 132), 'span': (119, 132), 'left siblings': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'SIMPX', 'SIMPX', 'SIMPX', 'KON', 'VF', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX', 'SIMPX', 'APPR', 'NX', 'VF', 'LK', 'MF', 'VC', 'DM', 'VF'], 'label': 'FKOORD', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen und sagen einfach wir fliegen zuruck)
		(DM gut)
		(ADVX dann)
		(SIMPX dann denke ich dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX dann konnen wir abends noch ein bischen in der bar sitzen)
		(KON oder)
		(VF auf alle falle)
		(SIMPX treffen wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		(SIMPX das ist das marriotthotel)
		(NX hannover)
		(SIMPX das parkhotel hannover)
		(SIMPX das hotel cristal hannover die sind alle mehr oder minder)
		(APPR in)
		(NX der nahe vom hauptbahnhof)
		(VF ich)
		(LK kucke)
		[01;33m(MF[00m (MF mir mal die preise)
		(VC an)
		(DM also)
		(VF das hotel cristal hannover)
		(LK ist)
		(MF
			(ADVX vielleicht)
			[01;31m(ADJX[00m
				(NX ein bischen)
				(ADJD teuer)[01;31m)[00m)
		[01;31m(LKM[00m
			(LK hat)
			[01;31m(MF[00m
				(NX dafur) [01;33mMF)[00m
				(ADVX aber)
				[01;31m(NX[00m
					(ADVX sauna)
					[01;31m(NX[00m
						(NN solarium)[01;31m)[00m
					[01;31m(NX[00m
						(NN bar)[01;31m)[00m
					(KON und)
					(NX bistro)[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADJD'], 'family': ['ADVX', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ART', 'PIS', 'ADJD'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (120, 124), 'span': (121, 124), 'left siblings': ['ADVX'], 'label': 'ADJX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen und sagen einfach wir fliegen zuruck)
		(DM gut)
		(ADVX dann)
		(SIMPX dann denke ich dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX dann konnen wir abends noch ein bischen in der bar sitzen)
		(KON oder)
		(VF auf alle falle)
		(SIMPX treffen wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		(SIMPX das ist das marriotthotel)
		(NX hannover)
		(SIMPX das parkhotel hannover)
		(SIMPX das hotel cristal hannover die sind alle mehr oder minder)
		(APPR in)
		(NX der nahe vom hauptbahnhof)
		(VF ich)
		(LK kucke)
		[01;33m(MF[00m (MF mir mal die preise)
		(VC an)
		(DM also)
		(VF das hotel cristal hannover)
		(LK ist)
		(MF vielleicht ein bischen teuer)
		[01;31m(LKM[00m
			(LK hat)
			[01;31m(MF[00m
				(NX dafur) [01;33mMF)[00m
				(ADVX aber)
				[01;31m(NX[00m
					(ADVX sauna)
					[01;31m(NX[00m
						(NN solarium)[01;31m)[00m
					[01;31m(NX[00m
						(NN bar)[01;31m)[00m
					(KON und)
					(NX bistro)[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'SIMPX', 'SIMPX', 'SIMPX', 'KON', 'VF', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX', 'SIMPX', 'APPR', 'NX', 'VF', 'LK', 'MF', 'VC', 'DM', 'VF', 'LK', 'MF', 'LKM'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PTKANT', 'PDS', 'VVFIN', 'PTKANT', 'ADV', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ART', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'VVFIN', 'ADV', 'PPER', 'VVFIN', 'PTKVZ', 'ITJ', 'ADV', 'ADV', 'VVFIN', 'PPER', 'ADV', 'VAFIN', 'PPER', 'PIS', 'APPR', 'KOUS', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'VVFIN', 'PWAV', 'PPER', 'VVINF', 'VMFIN', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'APPR', 'PIDAT', 'NN', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'KON', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'VVPP', 'APPR', 'NN', 'PDS', 'VAFIN', 'ART', 'NE', 'NE', 'ART', 'NE', 'NE', 'ART', 'NN', 'NE', 'NE', 'PDS', 'VAFIN', 'PIS', 'ADV', 'KON', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'PPER', 'VVFIN', 'PRF', 'ADV', 'ART', 'NN', 'PTKVZ', 'ADV', 'ART', 'NN', 'NE', 'NE', 'VAFIN', 'ADV', 'ART', 'PIS', 'ADJD', 'VAFIN', 'PROP', 'ADV', 'NN', 'NN', 'NN', 'KON', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 132), 'span': (124, 132), 'left siblings': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'SIMPX', 'SIMPX', 'SIMPX', 'KON', 'VF', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX', 'SIMPX', 'APPR', 'NX', 'VF', 'LK', 'MF', 'VC', 'DM', 'VF', 'LK', 'MF'], 'label': 'LKM', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen und sagen einfach wir fliegen zuruck)
		(DM gut)
		(ADVX dann)
		(SIMPX dann denke ich dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX dann konnen wir abends noch ein bischen in der bar sitzen)
		(KON oder)
		(VF auf alle falle)
		(SIMPX treffen wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		(SIMPX das ist das marriotthotel)
		(NX hannover)
		(SIMPX das parkhotel hannover)
		(SIMPX das hotel cristal hannover die sind alle mehr oder minder)
		(APPR in)
		(NX der nahe vom hauptbahnhof)
		(VF ich)
		(LK kucke)
		[01;33m(MF[00m (MF mir mal die preise)
		(VC an)
		(DM also)
		(VF das hotel cristal hannover)
		(LK ist)
		(MF vielleicht ein bischen teuer)
		(LK hat)
		[01;31m(MF[00m
			(NX dafur) [01;33mMF)[00m
			(ADVX aber)
			[01;31m(NX[00m
				(ADVX sauna)
				[01;31m(NX[00m
					(NN solarium)[01;31m)[00m
				[01;31m(NX[00m
					(NN bar)[01;31m)[00m
				(KON und)
				(NX bistro)[01;31m)[00m[01;31m)[00m))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADVX', 'NX'], 'family': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'SIMPX', 'SIMPX', 'SIMPX', 'KON', 'VF', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX', 'SIMPX', 'APPR', 'NX', 'VF', 'LK', 'MF', 'VC', 'DM', 'VF', 'LK', 'MF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PTKANT', 'PDS', 'VVFIN', 'PTKANT', 'ADV', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ART', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'VVFIN', 'ADV', 'PPER', 'VVFIN', 'PTKVZ', 'ITJ', 'ADV', 'ADV', 'VVFIN', 'PPER', 'ADV', 'VAFIN', 'PPER', 'PIS', 'APPR', 'KOUS', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'VVFIN', 'PWAV', 'PPER', 'VVINF', 'VMFIN', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'APPR', 'PIDAT', 'NN', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'KON', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'VVPP', 'APPR', 'NN', 'PDS', 'VAFIN', 'ART', 'NE', 'NE', 'ART', 'NE', 'NE', 'ART', 'NN', 'NE', 'NE', 'PDS', 'VAFIN', 'PIS', 'ADV', 'KON', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'PPER', 'VVFIN', 'PRF', 'ADV', 'ART', 'NN', 'PTKVZ', 'ADV', 'ART', 'NN', 'NE', 'NE', 'VAFIN', 'ADV', 'ART', 'PIS', 'ADJD', 'VAFIN', 'PROP', 'ADV', 'NN', 'NN', 'NN', 'KON', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 132), 'span': (125, 132), 'left siblings': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'SIMPX', 'SIMPX', 'SIMPX', 'KON', 'VF', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX', 'SIMPX', 'APPR', 'NX', 'VF', 'LK', 'MF', 'VC', 'DM', 'VF', 'LK', 'MF', 'LK'], 'label': 'MF', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen und sagen einfach wir fliegen zuruck)
		(DM gut)
		(ADVX dann)
		(SIMPX dann denke ich dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX dann konnen wir abends noch ein bischen in der bar sitzen)
		(KON oder)
		(VF auf alle falle)
		(SIMPX treffen wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		(SIMPX das ist das marriotthotel)
		(NX hannover)
		(SIMPX das parkhotel hannover)
		(SIMPX das hotel cristal hannover die sind alle mehr oder minder)
		(APPR in)
		(NX der nahe vom hauptbahnhof)
		(VF ich)
		(LK kucke)
		[01;36m(MF[00m
			(MF mir mal die preise)
			(VC an)
			(DM also)
			(VF das hotel cristal hannover)
			(LK ist)
			(MF vielleicht ein bischen teuer)
			(LK hat)
			(NX dafur)[01;36m)[00m
		(ADVX aber)
		[01;31m(NX[00m
			(ADVX sauna)
			[01;31m(NX[00m
				(NN solarium)[01;31m)[00m
			[01;31m(NX[00m
				(NN bar)[01;31m)[00m
			(KON und)
			(NX bistro)[01;31m)[00m))
Step:UNSET add
{'subtrees': ['MF', 'VC', 'DM', 'VF', 'LK', 'MF', 'LK', 'NX'], 'family': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'SIMPX', 'SIMPX', 'SIMPX', 'KON', 'VF', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX', 'SIMPX', 'APPR', 'NX', 'VF', 'LK', 'MF', 'ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PRF', 'ADV', 'ART', 'NN', 'PTKVZ', 'ADV', 'ART', 'NN', 'NE', 'NE', 'VAFIN', 'ADV', 'ART', 'PIS', 'ADJD', 'VAFIN', 'PROP'), 'right siblings': [(ADVX (ADV aber)), (NX (ADVX (NN sauna)) (NX (NN solarium)) (NX (NN bar)) (KON und) (NX (NN bistro)))], 'left siblings': [(DM (ITJ na) (PTKANT ja)), (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VVFIN stimmt)))), (DM (PTKANT ja)), (DM (ADVX (ADV also))), (SIMPX (KOORD (KON und)) (VF (ADVX (ADV dann))) (LK (VXFIN (VMFIN konnen))) (MF (NX (PPER wir)) (ADVX (ADV einfach)) (NX (ART den)))), (SIMPX (SIMPX (VF (ADVX (ADV dann))) (LK (VXFIN (VVFIN brauchen))) (MF (NX (PPER wir)) (NX (PRF uns)) (ADVX (ADV jetzt)) (ADVX (ADV vielleicht)) (ADVX (ADVX (ADV gar)) (PTKNEG nicht))) (VC (VXINF (VVINF festlegen)))) (ADVX (KON und) (LK (VXFIN (VVFIN sagen))) (ADVX (ADV einfach)) (NF (SIMPX (VF (NX (PPER wir))) (LK (VXFIN (VVFIN fliegen))) (ADVX (PTKVZ zuruck)))))), (DM (ITJ gut)), (ADVX (ADV dann)), (SIMPX (VF (ADVX (ADV dann))) (LK (VXFIN (VVFIN denke))) (MF (NX (PPER ich))) (SIMPX (VF (ADVX (ADV dann))) (LK (VXFIN (VAFIN haben))) (MF (NX (PPER wir)) (NX (PIS alles))) (VC (APPR auser)) (NF (SIMPX (C (KOUS das)) (MF (NX (PPER wir)) (ADVX (ADV immer)) (ADVX (ADVX (ADV noch)) (ADVX (PTKNEG nicht)))) (VC (VXFIN (VVFIN wissen))) (NF (R (C (PX (PWAV wo))) (MF (NX (PPER wir))) (VC (VXINF (VVINF ubernachten)) (VXFIN (VMFIN konnen))))))))), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN denke))) (NF (SIMPX (VF (NX (PPER wir))) (LK (VXFIN (VVFIN nehmen))) (MF (ADVX (ADV zusammen)) (ADVX (ADV einfach)) (NX (ART ein) (NN hotel)))))), (SIMPX (VF (ADVX (ADV dann))) (LK (VXFIN (VMFIN konnen))) (MF (NX (PPER wir)) (ADVX (ADV abends)) (ADVX (ADV noch)) (NX (NX (ART ein) (PIS bischen)) (PX (APPR in) (NX (ART der) (NN bar))))) (VC (VXINF (VVINF sitzen)))), (KON oder), (VF (PX (APPR auf) (NX (PIDAT alle) (NN falle)))), (SIMPX (LK (VXFIN (VVFIN treffen))) (MF (NX (PPER wir)) (NX (PRF uns)) (ADVX (ADV dann)) (ADVX (ADV da)))), (SIMPX (KOORD (KON und)) (VF (NX (PPER ich))) (LK (VXFIN (VAFIN habe))) (MF (ADVX (ADV hier)) (NX (ART eine) (NN liste))) (VC (VXINF (VVPP vorbereitet))) (NF (PX (APPR mit) (NX (NN hotels))))), (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VAFIN ist))) (ART das) (NX (NE marriotthotel))), (NX (NE hannover)), (SIMPX (NX (ART das) (NX (NE parkhotel))) (NX (NE hannover))), (SIMPX (SIMPX (SIMPX (ART das) (NX (NX (NN hotel)) (NX (NX (NE cristal)) (NX (NE hannover)))) (VF (NX (PDS die))) (LK (VXFIN (VAFIN sind))) (NX (PIS alle))) (ADVX (ADV mehr))) (KON oder) (ADVX (ADV minder))), (APPR in), (NX (NX (ART der) (NN nahe)) (PX (APPRART vom) (NX (NN hauptbahnhof)))), (VF (NX (PPER ich))), (LK (VXFIN (VVFIN kucke)))], 'auto preterminal span': (109, 126), 'span': (109, 126), 'parent': 'TURN', 'label': 'MF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen und sagen einfach wir fliegen zuruck)
		(DM gut)
		(ADVX dann)
		(SIMPX dann denke ich dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX dann konnen wir abends noch ein bischen in der bar sitzen)
		(KON oder)
		(VF auf alle falle)
		(SIMPX treffen wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		(SIMPX das ist das marriotthotel)
		(NX hannover)
		(SIMPX das parkhotel hannover)
		(SIMPX das hotel cristal hannover die sind alle mehr oder minder)
		(APPR in)
		(NX der nahe vom hauptbahnhof)
		(VF ich)
		(LK kucke)
		(MF mir mal die preise an also das hotel cristal hannover ist vielleicht ein bischen teuer hat dafur)
		(ADVX aber)
		[01;31m(NX[00m
			(ADVX sauna)
			[01;31m(NX[00m
				(NN solarium)[01;31m)[00m
			[01;31m(NX[00m
				(NN bar)[01;31m)[00m
			(KON und)
			(NX bistro)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['ADVX', 'NX', 'NX', 'KON', 'NX'], 'family': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'SIMPX', 'SIMPX', 'SIMPX', 'KON', 'VF', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX', 'SIMPX', 'APPR', 'NX', 'VF', 'LK', 'MF', 'ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PTKANT', 'PDS', 'VVFIN', 'PTKANT', 'ADV', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ART', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'VVFIN', 'ADV', 'PPER', 'VVFIN', 'PTKVZ', 'ITJ', 'ADV', 'ADV', 'VVFIN', 'PPER', 'ADV', 'VAFIN', 'PPER', 'PIS', 'APPR', 'KOUS', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'VVFIN', 'PWAV', 'PPER', 'VVINF', 'VMFIN', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'APPR', 'PIDAT', 'NN', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'KON', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'VVPP', 'APPR', 'NN', 'PDS', 'VAFIN', 'ART', 'NE', 'NE', 'ART', 'NE', 'NE', 'ART', 'NN', 'NE', 'NE', 'PDS', 'VAFIN', 'PIS', 'ADV', 'KON', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'PPER', 'VVFIN', 'PRF', 'ADV', 'ART', 'NN', 'PTKVZ', 'ADV', 'ART', 'NN', 'NE', 'NE', 'VAFIN', 'ADV', 'ART', 'PIS', 'ADJD', 'VAFIN', 'PROP', 'ADV', 'NN', 'NN', 'NN', 'KON', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 132), 'span': (127, 132), 'left siblings': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'SIMPX', 'SIMPX', 'SIMPX', 'KON', 'VF', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX', 'SIMPX', 'APPR', 'NX', 'VF', 'LK', 'MF', 'ADVX'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen und sagen einfach wir fliegen zuruck)
		(DM gut)
		(ADVX dann)
		(SIMPX dann denke ich dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX dann konnen wir abends noch ein bischen in der bar sitzen)
		(KON oder)
		(VF auf alle falle)
		(SIMPX treffen wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		(SIMPX das ist das marriotthotel)
		(NX hannover)
		(SIMPX das parkhotel hannover)
		(SIMPX das hotel cristal hannover die sind alle mehr oder minder)
		(APPR in)
		(NX der nahe vom hauptbahnhof)
		(VF ich)
		(LK kucke)
		(MF mir mal die preise an also das hotel cristal hannover ist vielleicht ein bischen teuer hat dafur)
		(ADVX aber)
		(ADVX sauna)
		[01;31m(NX[00m
			(NN solarium)[01;31m)[00m
		[01;31m(NX[00m
			(NN bar)[01;31m)[00m
		(KON und)
		(NX bistro)))
Step:Single Word Phrase
{'subtrees': ['NN'], 'family': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'SIMPX', 'SIMPX', 'SIMPX', 'KON', 'VF', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX', 'SIMPX', 'APPR', 'NX', 'VF', 'LK', 'MF', 'ADVX', 'ADVX', 'NX', 'NX', 'KON', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ITJ', 'PTKANT', 'PDS', 'VVFIN', 'PTKANT', 'ADV', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ART', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'VVFIN', 'ADV', 'PPER', 'VVFIN', 'PTKVZ', 'ITJ', 'ADV', 'ADV', 'VVFIN', 'PPER', 'ADV', 'VAFIN', 'PPER', 'PIS', 'APPR', 'KOUS', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'VVFIN', 'PWAV', 'PPER', 'VVINF', 'VMFIN', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'APPR', 'PIDAT', 'NN', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'KON', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'VVPP', 'APPR', 'NN', 'PDS', 'VAFIN', 'ART', 'NE', 'NE', 'ART', 'NE', 'NE', 'ART', 'NN', 'NE', 'NE', 'PDS', 'VAFIN', 'PIS', 'ADV', 'KON', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'PPER', 'VVFIN', 'PRF', 'ADV', 'ART', 'NN', 'PTKVZ', 'ADV', 'ART', 'NN', 'NE', 'NE', 'VAFIN', 'ADV', 'ART', 'PIS', 'ADJD', 'VAFIN', 'PROP', 'ADV', 'NN', 'NN', 'NN', 'KON', 'NN'), 'right siblings': ['NX', 'KON', 'NX'], 'parent': 'TURN', 'auto preterminal span': (0, 132), 'span': (128, 129), 'left siblings': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'SIMPX', 'SIMPX', 'SIMPX', 'KON', 'VF', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX', 'SIMPX', 'APPR', 'NX', 'VF', 'LK', 'MF', 'ADVX', 'ADVX'], 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen und sagen einfach wir fliegen zuruck)
		(DM gut)
		(ADVX dann)
		(SIMPX dann denke ich dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		(SIMPX dann konnen wir abends noch ein bischen in der bar sitzen)
		(KON oder)
		(VF auf alle falle)
		(SIMPX treffen wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		(SIMPX das ist das marriotthotel)
		(NX hannover)
		(SIMPX das parkhotel hannover)
		(SIMPX das hotel cristal hannover die sind alle mehr oder minder)
		(APPR in)
		(NX der nahe vom hauptbahnhof)
		(VF ich)
		(LK kucke)
		(MF mir mal die preise an also das hotel cristal hannover ist vielleicht ein bischen teuer hat dafur)
		(ADVX aber)
		(ADVX sauna)
		(NN solarium)
		[01;31m(NX[00m
			(NN bar)[01;31m)[00m
		(KON und)
		(NX bistro)))
Step:Single Word Phrase
{'subtrees': ['NN'], 'family': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'SIMPX', 'SIMPX', 'SIMPX', 'KON', 'VF', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX', 'SIMPX', 'APPR', 'NX', 'VF', 'LK', 'MF', 'ADVX', 'ADVX', 'NN', 'NX', 'KON', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ITJ', 'PTKANT', 'PDS', 'VVFIN', 'PTKANT', 'ADV', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ART', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'VVFIN', 'ADV', 'PPER', 'VVFIN', 'PTKVZ', 'ITJ', 'ADV', 'ADV', 'VVFIN', 'PPER', 'ADV', 'VAFIN', 'PPER', 'PIS', 'APPR', 'KOUS', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'VVFIN', 'PWAV', 'PPER', 'VVINF', 'VMFIN', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'APPR', 'PIDAT', 'NN', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'KON', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'VVPP', 'APPR', 'NN', 'PDS', 'VAFIN', 'ART', 'NE', 'NE', 'ART', 'NE', 'NE', 'ART', 'NN', 'NE', 'NE', 'PDS', 'VAFIN', 'PIS', 'ADV', 'KON', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'PPER', 'VVFIN', 'PRF', 'ADV', 'ART', 'NN', 'PTKVZ', 'ADV', 'ART', 'NN', 'NE', 'NE', 'VAFIN', 'ADV', 'ART', 'PIS', 'ADJD', 'VAFIN', 'PROP', 'ADV', 'NN', 'NN', 'NN', 'KON', 'NN'), 'right siblings': ['KON', 'NX'], 'parent': 'TURN', 'auto preterminal span': (0, 132), 'span': (129, 130), 'left siblings': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'SIMPX', 'SIMPX', 'SIMPX', 'KON', 'VF', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX', 'SIMPX', 'APPR', 'NX', 'VF', 'LK', 'MF', 'ADVX', 'ADVX', 'NN'], 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP na ja das stimmt ja also und dann konnen wir einfach den dann brauchen wir uns jetzt vielleicht gar nicht festlegen und sagen einfach wir fliegen zuruck gut dann dann denke ich dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen ich denke wir nehmen zusammen einfach ein hotel dann konnen wir abends noch ein bischen in der bar sitzen oder auf alle falle treffen wir uns dann da und ich habe hier eine liste vorbereitet mit hotels das ist das marriotthotel hannover das parkhotel hannover das hotel cristal hannover die sind alle mehr oder minder in der nahe vom hauptbahnhof ich kucke mir mal die preise an also das hotel cristal hannover ist vielleicht ein bischen teuer hat dafur aber sauna solarium bar und bistro)

Sentence 459:
12 Initial errors
0 on fringe, 8 iterations
3 Error:UNSET move
2 Error:Different label
2 Error:UNSET move
1 Error:UNSET remove
1 Error:Unary
1 Error:UNSET remove
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM stimmt)
		(SIMPX
			(VF wir)
			(LK haben)
			[01;31m(MF[00m
				(ADVX wahrscheinlich)
				(NX keine zeit)[01;31m)[00m
			(NF
				(SIMPX
					[01;31m(MF[00m
						(PX
							(APPR in)
							(NX die sauna))[01;31m)[00m
					(VC zu gehen))))
		[01;31m(SIMPX[00m
			[01;36m(DM[00m [01;31m(VF[00m
				(ADVX
					(ADV also))[01;31m)[00m[01;36m)[00m
			[01;36m(SIMPX[00m
				(LK konnten)
				(MF wir auch das parkhotel hannover)
				(VC nehmen)[01;36m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF das)
			(LK ist)
			[01;36m(MF[00m
				(APPR [01;33m(PX[00m mit)
				[01;31m(MF[00m
					[01;31m(NX[00m
						(NX das einzelzimmer) [01;33mPX)[00m
						(PX mit einhundert neunzehn mark)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK ware)
			(MF das doch das doch annehmbar)[01;31m)[00m))
Step:UNSET move
{'new_parent': 'NX', 'new_family': ['APPR', 'NX', 'PX'], 'mover info': [('APPR', (21, 22))], 'old_family': ['VF', 'LK', 'APPR', 'MF'], 'start left siblings': ['VF', 'LK'], 'auto preterminals': ('PDS', 'VAFIN', 'APPR', 'ART', 'NN', 'APPR', 'CARD', 'CARD', 'NN'), 'start right siblings': ['MF'], 'end left siblings': [], 'auto preterminal span': (19, 28), 'adding node already present': False, 'movers': ['APPR'], 'old_parent': 'SIMPX', 'POS confusion': ('APPR', 'APPR'), 'added and moved': True, 'end right siblings': ['NX', 'PX'], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'PX'}
(TOP
	(TURN
		(DM stimmt)
		(SIMPX
			(VF wir)
			(LK haben)
			[01;31m(MF[00m
				(ADVX wahrscheinlich)
				(NX keine zeit)[01;31m)[00m
			(NF
				(SIMPX
					[01;31m(MF[00m
						(PX
							(APPR in)
							(NX die sauna))[01;31m)[00m
					(VC zu gehen))))
		[01;31m(SIMPX[00m
			[01;36m(DM[00m [01;31m(VF[00m
				(ADVX
					(ADV also))[01;31m)[00m[01;36m)[00m
			[01;36m(SIMPX[00m
				(LK konnten)
				(MF wir auch das parkhotel hannover)
				(VC nehmen)[01;36m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF das)
			(LK ist)
			(MF
				[01;31m(NX[00m
					(PX mit das einzelzimmer)
					(PX mit einhundert neunzehn mark)[01;31m)[00m)[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK ware)
			(MF das doch das doch annehmbar)[01;31m)[00m))
Step:Different label
{'family': ['DM', 'LK', 'MF', 'VC'], 'auto preterminal span': (11, 12), 'span': (11, 12), 'subtrees': ['ADVX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('ADV',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('VF', 'DM')}
(TOP
	(TURN
		(DM stimmt)
		(SIMPX
			(VF wir)
			(LK haben)
			[01;31m(MF[00m
				(ADVX wahrscheinlich)
				(NX keine zeit)[01;31m)[00m
			(NF
				(SIMPX
					[01;31m(MF[00m
						(PX
							(APPR in)
							(NX die sauna))[01;31m)[00m
					(VC zu gehen))))
		[01;31m(SIMPX[00m
			(DM also)
			[01;36m(SIMPX[00m
				(LK konnten)
				(MF wir auch das parkhotel hannover)
				(VC nehmen)[01;36m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF das)
			(LK ist)
			(MF
				[01;31m(NX[00m
					(PX mit das einzelzimmer)
					(PX mit einhundert neunzehn mark)[01;31m)[00m)[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK ware)
			(MF das doch das doch annehmbar)[01;31m)[00m))
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['DM', 'SIMPX', 'DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'mover info': [('DM', (11, 12))], 'old_family': ['DM', 'LK', 'MF', 'VC'], 'start left siblings': [], 'auto preterminals': ('ITJ', 'PPER', 'VAFIN', 'ADV', 'PIAT', 'NN', 'APPR', 'ART', 'NN', 'PTKZU', 'VVINF', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ART', 'NE', 'NE', 'VVINF', 'PDS', 'VAFIN', 'APPR', 'ART', 'NN', 'APPR', 'CARD', 'CARD', 'NN', 'VAFIN', 'PDS', 'ADV', 'PDS', 'ADV', 'ADJD'), 'start right siblings': ['LK', 'MF', 'VC'], 'end left siblings': ['DM', 'SIMPX'], 'auto preterminal span': (0, 34), 'movers': ['DM'], 'old_parent': 'SIMPX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['SIMPX', 'SIMPX', 'SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM stimmt)
		(SIMPX
			(VF wir)
			(LK haben)
			[01;31m(MF[00m
				(ADVX wahrscheinlich)
				(NX keine zeit)[01;31m)[00m
			(NF
				(SIMPX
					[01;31m(MF[00m
						(PX
							(APPR in)
							(NX die sauna))[01;31m)[00m
					(VC zu gehen))))
		(DM also)
		(SIMPX konnten wir auch das parkhotel hannover nehmen)
		[01;31m(SIMPX[00m
			(VF das)
			(LK ist)
			(MF
				[01;31m(NX[00m
					(PX mit das einzelzimmer)
					(PX mit einhundert neunzehn mark)[01;31m)[00m)[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK ware)
			(MF das doch das doch annehmbar)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['ADVX', 'NX'], 'family': ['VF', 'LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'ADV', 'PIAT', 'NN', 'APPR', 'ART', 'NN', 'PTKZU', 'VVINF'), 'right siblings': ['NF'], 'parent': 'SIMPX', 'auto preterminal span': (1, 11), 'span': (3, 6), 'left siblings': ['VF', 'LK'], 'label': 'MF', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM stimmt)
		(SIMPX
			(VF wir)
			(LK haben)
			(ADVX wahrscheinlich)
			(NX keine zeit)
			(NF
				(SIMPX
					[01;31m(MF[00m
						(PX
							(APPR in)
							(NX die sauna))[01;31m)[00m
					(VC zu gehen))))
		(DM also)
		(SIMPX konnten wir auch das parkhotel hannover nehmen)
		[01;31m(SIMPX[00m
			(VF das)
			(LK ist)
			(MF
				[01;31m(NX[00m
					(PX mit das einzelzimmer)
					(PX mit einhundert neunzehn mark)[01;31m)[00m)[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK ware)
			(MF das doch das doch annehmbar)[01;31m)[00m))
Step:Unary
{'subtrees': ['PX'], 'family': ['MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NN', 'PTKZU', 'VVINF'), 'right siblings': ['VC'], 'parent': 'SIMPX', 'auto preterminal span': (6, 11), 'span': (6, 9), 'left siblings': [], 'label': 'MF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM stimmt)
		(SIMPX wir haben wahrscheinlich keine zeit in die sauna zu gehen)
		(DM also)
		(SIMPX konnten wir auch das parkhotel hannover nehmen)
		[01;31m(SIMPX[00m
			(VF das)
			(LK ist)
			(MF
				[01;31m(NX[00m
					(PX mit das einzelzimmer)
					(PX mit einhundert neunzehn mark)[01;31m)[00m)[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK ware)
			(MF das doch das doch annehmbar)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['DM', 'SIMPX', 'DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PPER', 'VAFIN', 'ADV', 'PIAT', 'NN', 'APPR', 'ART', 'NN', 'PTKZU', 'VVINF', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ART', 'NE', 'NE', 'VVINF', 'PDS', 'VAFIN', 'APPR', 'ART', 'NN', 'APPR', 'CARD', 'CARD', 'NN', 'VAFIN', 'PDS', 'ADV', 'PDS', 'ADV', 'ADJD'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 34), 'span': (19, 28), 'left siblings': ['DM', 'SIMPX', 'DM', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM stimmt)
		(SIMPX wir haben wahrscheinlich keine zeit in die sauna zu gehen)
		(DM also)
		(SIMPX konnten wir auch das parkhotel hannover nehmen)
		(VF das)
		(LK ist)
		(MF
			[01;31m(NX[00m
				(PX mit das einzelzimmer)
				(PX mit einhundert neunzehn mark)[01;31m)[00m)
		[01;31m(SIMPX[00m
			(LK ware)
			(MF das doch das doch annehmbar)[01;31m)[00m))
Step:Unary
{'subtrees': ['PX', 'PX'], 'family': ['NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NN', 'APPR', 'CARD', 'CARD', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (21, 28), 'span': (21, 28), 'left siblings': [], 'label': 'NX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM stimmt)
		(SIMPX wir haben wahrscheinlich keine zeit in die sauna zu gehen)
		(DM also)
		(SIMPX konnten wir auch das parkhotel hannover nehmen)
		(VF das)
		(LK ist)
		(MF mit das einzelzimmer mit einhundert neunzehn mark)
		[01;31m(SIMPX[00m
			(LK ware)
			(MF das doch das doch annehmbar)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['DM', 'SIMPX', 'DM', 'SIMPX', 'VF', 'LK', 'MF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PPER', 'VAFIN', 'ADV', 'PIAT', 'NN', 'APPR', 'ART', 'NN', 'PTKZU', 'VVINF', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ART', 'NE', 'NE', 'VVINF', 'PDS', 'VAFIN', 'APPR', 'ART', 'NN', 'APPR', 'CARD', 'CARD', 'NN', 'VAFIN', 'PDS', 'ADV', 'PDS', 'ADV', 'ADJD'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 34), 'span': (28, 34), 'left siblings': ['DM', 'SIMPX', 'DM', 'SIMPX', 'VF', 'LK', 'MF'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP stimmt wir haben wahrscheinlich keine zeit in die sauna zu gehen also konnten wir auch das parkhotel hannover nehmen das ist mit das einzelzimmer mit einhundert neunzehn mark ware das doch das doch annehmbar)

Sentence 460:
7 Initial errors
0 on fringe, 7 iterations
1 Error:Single Word Phrase
1 Error:Clause Attachment
1 Error:UNSET remove
1 Error:UNSET add
1 Error:Single Word Phrase
1 Error:UNSET remove
1 Error:UNSET add
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM okay)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF parkhotel)
			[01;31m(SIMPX[00m
				(LK sehe)
				(MF ich) [01;33mSIMPX)[00m
				[01;31m(VC[00m
					(PTKVZ ein)[01;31m)[00m[01;31m)[00m
			(LK ist)
			(MF zu riskant)[01;31m)[00m
		(SIMPX nehmen wir das marriotthotel)
		(DM also)
		[01;31m(SIMPX[00m
			(VF die)
			(LK konnen)
			[01;33m(MF[00m (MF sich)[01;31m)[00m
		[01;36m(NX[00m
			(ART die) [01;33mMF)[00m[01;36m)[00m
		(SIMPX die konnen sich da auch in hannover keinen durchhanger erlauben)
		(DM also)
		(SIMPX nehmen wir marriott)))
Step:Single Word Phrase
{'subtrees': ['ART'], 'family': ['DM', 'SIMPX', 'SIMPX', 'DM', 'SIMPX', 'NX', 'SIMPX', 'DM', 'SIMPX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ART',), 'right siblings': [(SIMPX (VF (NX (PDS die))) (LK (VXFIN (VMFIN konnen))) (MF (NX (PRF sich)) (ADVX (ADV da)) (ADVX (ADV auch)) (PX (APPR in) (NX (NE hannover))) (NX (PIAT keinen) (NN durchhanger))) (VC (VXINF (VVINF erlauben)))), (DM (ADVX (ADV also))), (SIMPX (LK (VXFIN (VVFIN nehmen))) (MF (NX (PPER wir)) (NX (NE marriott))))], 'left siblings': [(DM (ITJ okay)), (SIMPX (VF (NX (NE parkhotel))) (SIMPX (LK (VXFIN (VVFIN sehe))) (MF (NX (PPER ich))) (VC (PTKVZ ein))) (LK (VXFIN (VAFIN ist))) (MF (ADJX (PTKA zu) (ADJD riskant)))), (SIMPX (LK (VXFIN (VVFIN nehmen))) (MF (NX (PPER wir)) (NX (ART das) (NE marriotthotel)))), (DM (ADVX (ADV also))), (SIMPX (VF (NX (PDS die))) (LK (VXFIN (VMFIN konnen))) (MF (NX (PRF sich))))], 'auto preterminal span': (16, 17), 'span': (16, 17), 'parent': 'TURN', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM okay)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF parkhotel)
			[01;31m(SIMPX[00m
				(LK sehe)
				(MF ich) [01;33mSIMPX)[00m
				[01;31m(VC[00m
					(PTKVZ ein)[01;31m)[00m[01;31m)[00m
			(LK ist)
			(MF zu riskant)[01;31m)[00m
		(SIMPX nehmen wir das marriotthotel)
		(DM also)
		[01;31m(SIMPX[00m
			(VF die)
			(LK konnen)
			[01;33m(MF[00m (MF sich)[01;31m)[00m
		(NX die) [01;33mMF)[00m
		(SIMPX die konnen sich da auch in hannover keinen durchhanger erlauben)
		(DM also)
		(SIMPX nehmen wir marriott)))
Step:Clause Attachment
{'subtrees': ['VF', 'SIMPX', 'LK', 'MF'], 'family': ['DM', 'SIMPX', 'SIMPX', 'DM', 'SIMPX', 'NX', 'SIMPX', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'NE', 'VVFIN', 'PPER', 'PTKVZ', 'VAFIN', 'PTKA', 'ADJD', 'VVFIN', 'PPER', 'ART', 'NE', 'ADV', 'PDS', 'VMFIN', 'PRF', 'ART', 'PDS', 'VMFIN', 'PRF', 'ADV', 'ADV', 'APPR', 'NE', 'PIAT', 'NN', 'VVINF', 'ADV', 'VVFIN', 'PPER', 'NE'), 'right siblings': ['SIMPX', 'DM', 'SIMPX', 'NX', 'SIMPX', 'DM', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 31), 'span': (1, 8), 'left siblings': ['DM'], 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		[01;33m(SIMPX[00m (VF parkhotel)
		[01;31m(SIMPX[00m
			(LK sehe)
			(MF ich) [01;33mSIMPX)[00m
			[01;31m(VC[00m
				(PTKVZ ein)[01;31m)[00m[01;31m)[00m
		(LK ist)
		(MF zu riskant)
		(SIMPX nehmen wir das marriotthotel)
		(DM also)
		[01;31m(SIMPX[00m
			(VF die)
			(LK konnen)
			[01;33m(MF[00m (MF sich)[01;31m)[00m
		(NX die) [01;33mMF)[00m
		(SIMPX die konnen sich da auch in hannover keinen durchhanger erlauben)
		(DM also)
		(SIMPX nehmen wir marriott)))
Step:UNSET remove
{'subtrees': ['LK', 'MF', 'VC'], 'family': ['DM', 'VF', 'SIMPX', 'LK', 'MF', 'SIMPX', 'DM', 'SIMPX', 'NX', 'SIMPX', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'NE', 'VVFIN', 'PPER', 'PTKVZ', 'VAFIN', 'PTKA', 'ADJD', 'VVFIN', 'PPER', 'ART', 'NE', 'ADV', 'PDS', 'VMFIN', 'PRF', 'ART', 'PDS', 'VMFIN', 'PRF', 'ADV', 'ADV', 'APPR', 'NE', 'PIAT', 'NN', 'VVINF', 'ADV', 'VVFIN', 'PPER', 'NE'), 'right siblings': ['LK', 'MF', 'SIMPX', 'DM', 'SIMPX', 'NX', 'SIMPX', 'DM', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 31), 'span': (2, 5), 'left siblings': ['DM', 'VF'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		[01;36m(SIMPX[00m
			(VF parkhotel)
			(LK sehe)
			(MF ich)[01;36m)[00m
		[01;31m(VC[00m
			(PTKVZ ein)[01;31m)[00m
		(LK ist)
		(MF zu riskant)
		(SIMPX nehmen wir das marriotthotel)
		(DM also)
		[01;31m(SIMPX[00m
			(VF die)
			(LK konnen)
			[01;33m(MF[00m (MF sich)[01;31m)[00m
		(NX die) [01;33mMF)[00m
		(SIMPX die konnen sich da auch in hannover keinen durchhanger erlauben)
		(DM also)
		(SIMPX nehmen wir marriott)))
Step:UNSET add
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['DM', 'SIMPX', 'VC', 'LK', 'MF', 'SIMPX', 'DM', 'SIMPX', 'NX', 'SIMPX', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NE', 'VVFIN', 'PPER'), 'right siblings': [(VC (PTKVZ ein)), (LK (VXFIN (VAFIN ist))), (MF (ADJX (PTKA zu) (ADJD riskant))), (SIMPX (LK (VXFIN (VVFIN nehmen))) (MF (NX (PPER wir)) (NX (ART das) (NE marriotthotel)))), (DM (ADVX (ADV also))), (SIMPX (VF (NX (PDS die))) (LK (VXFIN (VMFIN konnen))) (MF (NX (PRF sich)))), (NX (ART die)), (SIMPX (VF (NX (PDS die))) (LK (VXFIN (VMFIN konnen))) (MF (NX (PRF sich)) (ADVX (ADV da)) (ADVX (ADV auch)) (PX (APPR in) (NX (NE hannover))) (NX (PIAT keinen) (NN durchhanger))) (VC (VXINF (VVINF erlauben)))), (DM (ADVX (ADV also))), (SIMPX (LK (VXFIN (VVFIN nehmen))) (MF (NX (PPER wir)) (NX (NE marriott))))], 'left siblings': [(DM (ITJ okay))], 'auto preterminal span': (1, 4), 'span': (1, 4), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM okay)
		(SIMPX parkhotel sehe ich)
		[01;31m(VC[00m
			(PTKVZ ein)[01;31m)[00m
		(LK ist)
		(MF zu riskant)
		(SIMPX nehmen wir das marriotthotel)
		(DM also)
		[01;31m(SIMPX[00m
			(VF die)
			(LK konnen)
			[01;33m(MF[00m (MF sich)[01;31m)[00m
		(NX die) [01;33mMF)[00m
		(SIMPX die konnen sich da auch in hannover keinen durchhanger erlauben)
		(DM also)
		(SIMPX nehmen wir marriott)))
Step:Single Word Phrase
{'subtrees': ['PTKVZ'], 'family': ['DM', 'SIMPX', 'VC', 'LK', 'MF', 'SIMPX', 'DM', 'SIMPX', 'NX', 'SIMPX', 'DM', 'SIMPX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ITJ', 'NE', 'VVFIN', 'PPER', 'PTKVZ', 'VAFIN', 'PTKA', 'ADJD', 'VVFIN', 'PPER', 'ART', 'NE', 'ADV', 'PDS', 'VMFIN', 'PRF', 'ART', 'PDS', 'VMFIN', 'PRF', 'ADV', 'ADV', 'APPR', 'NE', 'PIAT', 'NN', 'VVINF', 'ADV', 'VVFIN', 'PPER', 'NE'), 'right siblings': ['LK', 'MF', 'SIMPX', 'DM', 'SIMPX', 'NX', 'SIMPX', 'DM', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 31), 'span': (4, 5), 'left siblings': ['DM', 'SIMPX'], 'label': 'VC', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(SIMPX parkhotel sehe ich)
		(PTKVZ ein)
		(LK ist)
		(MF zu riskant)
		(SIMPX nehmen wir das marriotthotel)
		(DM also)
		[01;31m(SIMPX[00m
			(VF die)
			(LK konnen)
			[01;33m(MF[00m (MF sich)[01;31m)[00m
		(NX die) [01;33mMF)[00m
		(SIMPX die konnen sich da auch in hannover keinen durchhanger erlauben)
		(DM also)
		(SIMPX nehmen wir marriott)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['DM', 'SIMPX', 'PTKVZ', 'LK', 'MF', 'SIMPX', 'DM', 'SIMPX', 'NX', 'SIMPX', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'NE', 'VVFIN', 'PPER', 'PTKVZ', 'VAFIN', 'PTKA', 'ADJD', 'VVFIN', 'PPER', 'ART', 'NE', 'ADV', 'PDS', 'VMFIN', 'PRF', 'ART', 'PDS', 'VMFIN', 'PRF', 'ADV', 'ADV', 'APPR', 'NE', 'PIAT', 'NN', 'VVINF', 'ADV', 'VVFIN', 'PPER', 'NE'), 'right siblings': ['NX', 'SIMPX', 'DM', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 31), 'span': (13, 16), 'left siblings': ['DM', 'SIMPX', 'PTKVZ', 'LK', 'MF', 'SIMPX', 'DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(SIMPX parkhotel sehe ich)
		(PTKVZ ein)
		(LK ist)
		(MF zu riskant)
		(SIMPX nehmen wir das marriotthotel)
		(DM also)
		(VF die)
		(LK konnen)
		[01;36m(MF[00m
			(MF sich)
			(NX die)[01;36m)[00m
		(SIMPX die konnen sich da auch in hannover keinen durchhanger erlauben)
		(DM also)
		(SIMPX nehmen wir marriott)))
Step:UNSET add
{'subtrees': ['MF', 'NX'], 'family': ['DM', 'SIMPX', 'PTKVZ', 'LK', 'MF', 'SIMPX', 'DM', 'VF', 'LK', 'MF', 'SIMPX', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PRF', 'ART'), 'right siblings': [(SIMPX (VF (NX (PDS die))) (LK (VXFIN (VMFIN konnen))) (MF (NX (PRF sich)) (ADVX (ADV da)) (ADVX (ADV auch)) (PX (APPR in) (NX (NE hannover))) (NX (PIAT keinen) (NN durchhanger))) (VC (VXINF (VVINF erlauben)))), (DM (ADVX (ADV also))), (SIMPX (LK (VXFIN (VVFIN nehmen))) (MF (NX (PPER wir)) (NX (NE marriott))))], 'left siblings': [(DM (ITJ okay)), (SIMPX (VF (NX (NE parkhotel))) (LK (VXFIN (VVFIN sehe))) (MF (NX (PPER ich)))), (PTKVZ ein), (LK (VXFIN (VAFIN ist))), (MF (ADJX (PTKA zu) (ADJD riskant))), (SIMPX (LK (VXFIN (VVFIN nehmen))) (MF (NX (PPER wir)) (NX (ART das) (NE marriotthotel)))), (DM (ADVX (ADV also))), (VF (NX (PDS die))), (LK (VXFIN (VMFIN konnen)))], 'auto preterminal span': (15, 17), 'span': (15, 17), 'parent': 'TURN', 'label': 'MF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP okay parkhotel sehe ich ein ist zu riskant nehmen wir das marriotthotel also die konnen sich die die konnen sich da auch in hannover keinen durchhanger erlauben also nehmen wir marriott)

Sentence 461:
0 Initial errors
0 on fringe, 0 iterations

Sentence 462:
7 Initial errors
0 on fringe, 5 iterations
2 Error:Single Word Phrase
2 Error:Clause Attachment
1 Error:Unary
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM na ja)
		(DM gut)
		(SIMPX ich gehe auch nicht so oft ins fitnesstudio)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				[01;36m(KOORD[00m [01;31m(VF[00m
					[01;31m(ADVX[00m
						(ADV aber)[01;31m)[00m[01;31m)[00m[01;36m)[00m
				(LK meine)[01;31m)[00m
			[01;36m(NF[00m
				(SIMPX
					(VF ich)
					(LK wollte)
					(MF es jetzt nur mal)
					(VC sagen)
					(NF falls du da lust dazu hast))[01;36m)[00m[01;36m)[00m
		(DM ja)
		(SIMPX dann konnen wir uns noch uberlegen)
		[01;31m(SIMPX[00m
			(LK machen)
			(MF wir abends was)[01;31m)[00m))
Step:Single Word Phrase
{'family': ['KOORD'], 'auto preterminal span': (11, 12), 'span': (11, 12), 'subtrees': ['ADV'], 'parent': 'VF', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'KOORD')}
(TOP
	(TURN
		(DM na ja)
		(DM gut)
		(SIMPX ich gehe auch nicht so oft ins fitnesstudio)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(KOORD
						(ADV aber))[01;31m)[00m
				(LK meine)[01;31m)[00m
			[01;36m(NF[00m
				(SIMPX
					(VF ich)
					(LK wollte)
					(MF es jetzt nur mal)
					(VC sagen)
					(NF falls du da lust dazu hast))[01;36m)[00m[01;36m)[00m
		(DM ja)
		(SIMPX dann konnen wir uns noch uberlegen)
		[01;31m(SIMPX[00m
			(LK machen)
			(MF wir abends was)[01;31m)[00m))
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'SIMPX'], 'mover info': [('SIMPX', (13, 26))], 'old_family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'DM', 'SIMPX', 'SIMPX'], 'start left siblings': ['DM', 'DM', 'SIMPX', 'SIMPX'], 'auto preterminals': ('ITJ', 'PTKANT', 'ITJ', 'PPER', 'VVFIN', 'ADV', 'PTKNEG', 'ADV', 'ADV', 'APPRART', 'NN', 'ADV', 'VVFIN', 'PPER', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'VVINF', 'KOUS', 'PPER', 'ADV', 'NN', 'PROP', 'VAFIN', 'PTKANT', 'ADV', 'VMFIN', 'PPER', 'PRF', 'ADV', 'VVINF', 'VVFIN', 'PPER', 'ADV', 'PIS'), 'start right siblings': ['DM', 'SIMPX', 'SIMPX'], 'end left siblings': ['VF', 'LK'], 'auto preterminal span': (0, 37), 'movers': ['SIMPX'], 'old_parent': 'TURN', 'end right siblings': [], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM na ja)
		(DM gut)
		(SIMPX ich gehe auch nicht so oft ins fitnesstudio)
		(SIMPX
			[01;31m(VF[00m
				(KOORD
					(ADV aber))[01;31m)[00m
			(LK meine)
			[01;36m(NF[00m
				(SIMPX
					(VF ich)
					(LK wollte)
					(MF es jetzt nur mal)
					(VC sagen)
					(NF falls du da lust dazu hast))[01;36m)[00m)
		(DM ja)
		(SIMPX dann konnen wir uns noch uberlegen)
		[01;31m(SIMPX[00m
			(LK machen)
			(MF wir abends was)[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['VF', 'LK', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'VVINF', 'KOUS', 'PPER', 'ADV', 'NN', 'PROP', 'VAFIN'), 'right siblings': [], 'left siblings': [(VF (KOORD (ADV aber))), (LK (VXFIN (VVFIN meine)))], 'auto preterminal span': (13, 26), 'span': (13, 26), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM na ja)
		(DM gut)
		(SIMPX ich gehe auch nicht so oft ins fitnesstudio)
		(SIMPX
			[01;31m(VF[00m
				(KOORD
					(ADV aber))[01;31m)[00m
			(LK meine)
			(NF ich wollte es jetzt nur mal sagen falls du da lust dazu hast))
		(DM ja)
		(SIMPX dann konnen wir uns noch uberlegen)
		[01;31m(SIMPX[00m
			(LK machen)
			(MF wir abends was)[01;31m)[00m))
Step:Unary
{'subtrees': ['KOORD'], 'family': ['VF', 'LK', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'VVINF', 'KOUS', 'PPER', 'ADV', 'NN', 'PROP', 'VAFIN'), 'right siblings': ['LK', 'NF'], 'parent': 'SIMPX', 'auto preterminal span': (11, 26), 'span': (11, 12), 'left siblings': [], 'label': 'VF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM na ja)
		(DM gut)
		(SIMPX ich gehe auch nicht so oft ins fitnesstudio)
		(SIMPX aber meine ich wollte es jetzt nur mal sagen falls du da lust dazu hast)
		(DM ja)
		(SIMPX dann konnen wir uns noch uberlegen)
		[01;31m(SIMPX[00m
			(LK machen)
			(MF wir abends was)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PTKANT', 'ITJ', 'PPER', 'VVFIN', 'ADV', 'PTKNEG', 'ADV', 'ADV', 'APPRART', 'NN', 'ADV', 'VVFIN', 'PPER', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'VVINF', 'KOUS', 'PPER', 'ADV', 'NN', 'PROP', 'VAFIN', 'PTKANT', 'ADV', 'VMFIN', 'PPER', 'PRF', 'ADV', 'VVINF', 'VVFIN', 'PPER', 'ADV', 'PIS'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 37), 'span': (33, 37), 'left siblings': ['DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP na ja gut ich gehe auch nicht so oft ins fitnesstudio aber meine ich wollte es jetzt nur mal sagen falls du da lust dazu hast ja dann konnen wir uns noch uberlegen machen wir abends was)

Sentence 463:
7 Initial errors
0 on fringe, 5 iterations
2 Error:Different label
2 Error:Single Word Phrase
1 Error:Single Word Phrase
1 Error:UNSET remove
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;36m(ADVX[00m [01;31m(DM[00m
			(ADVX immer)
			(ADVX doch)[01;31m)[00m[01;36m)[00m
		(NX kino theater restaurant)
		(DM also)
		[01;31m(SIMPX[00m
			(VF theater)
			(LK denke)
			[01;31m(MF[00m
				(NX
					(PPER ich))[01;31m)[00m[01;31m)[00m
		[01;36m(NX[00m
			(KOUS das)[01;36m)[00m
		(ADVX da)
		(SIMPX da kriegen wir keine karten mehr)
		(SIMPX
			(KOORD und)
			[01;36m(ADVX[00m
				(VF
					[01;31m(PX[00m
						(PROP auserdem)[01;31m)[00m)[01;36m)[00m
			(LK mussen)
			(MF wir uns)
			(VC kummern))))
Step:Different label
{'family': ['ADVX', 'NX', 'DM', 'SIMPX', 'KOUS', 'ADVX', 'SIMPX', 'SIMPX'], 'auto preterminal span': (0, 2), 'span': (0, 2), 'subtrees': ['ADVX', 'ADVX'], 'parent': 'TURN', 'over_word': False, 'auto preterminals': ('ADV', 'ADV'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('DM', 'ADVX')}
(TOP
	(TURN
		(ADVX immer doch)
		(NX kino theater restaurant)
		(DM also)
		[01;31m(SIMPX[00m
			(VF theater)
			(LK denke)
			[01;31m(MF[00m
				(NX
					(PPER ich))[01;31m)[00m[01;31m)[00m
		[01;36m(NX[00m
			(KOUS das)[01;36m)[00m
		(ADVX da)
		(SIMPX da kriegen wir keine karten mehr)
		(SIMPX
			(KOORD und)
			[01;36m(ADVX[00m
				(VF
					[01;31m(PX[00m
						(PROP auserdem)[01;31m)[00m)[01;36m)[00m
			(LK mussen)
			(MF wir uns)
			(VC kummern))))
Step:Single Word Phrase
{'family': ['ADVX'], 'auto preterminal span': (18, 19), 'span': (18, 19), 'subtrees': ['PROP'], 'parent': 'VF', 'over_word': True, 'auto preterminals': ('PROP',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('PX', 'ADVX')}
(TOP
	(TURN
		(ADVX immer doch)
		(NX kino theater restaurant)
		(DM also)
		[01;31m(SIMPX[00m
			(VF theater)
			(LK denke)
			[01;31m(MF[00m
				(NX
					(PPER ich))[01;31m)[00m[01;31m)[00m
		[01;36m(NX[00m
			(KOUS das)[01;36m)[00m
		(ADVX da)
		(SIMPX da kriegen wir keine karten mehr)
		(SIMPX und auserdem mussen wir uns kummern)))
Step:Single Word Phrase
{'subtrees': ['KOUS'], 'family': ['ADVX', 'NX', 'DM', 'SIMPX', 'NX', 'ADVX', 'SIMPX', 'SIMPX'], 'over_word': True, 'over words': True, 'auto preterminals': ('KOUS',), 'right siblings': [(ADVX (ADV da)), (SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VVFIN kriegen))) (MF (NX (PPER wir)) (NX (NX (PIAT keine) (NN karten)) (ADVX (ADV mehr))))), (SIMPX (KOORD (KON und)) (VF (ADVX (PROP auserdem))) (LK (VXFIN (VMFIN mussen))) (MF (NX (PPER wir)) (NX (PRF uns))) (VC (VXINF (VVINF kummern))))], 'left siblings': [(ADVX (ADVX (ADV immer)) (ADVX (ADV doch))), (NX (NX (NN kino)) (NX (NN theater)) (NX (NN restaurant))), (DM (ADVX (ADV also))), (SIMPX (VF (NX (NN theater))) (LK (VXFIN (VVFIN denke))) (MF (NX (PPER ich))))], 'auto preterminal span': (9, 10), 'span': (9, 10), 'parent': 'TURN', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(ADVX immer doch)
		(NX kino theater restaurant)
		(DM also)
		[01;31m(SIMPX[00m
			(VF theater)
			(LK denke)
			[01;31m(MF[00m
				(NX
					(PPER ich))[01;31m)[00m[01;31m)[00m
		(NX das)
		(ADVX da)
		(SIMPX da kriegen wir keine karten mehr)
		(SIMPX und auserdem mussen wir uns kummern)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['ADVX', 'NX', 'DM', 'SIMPX', 'NX', 'ADVX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'NN', 'NN', 'NN', 'ADV', 'NN', 'VVFIN', 'PPER', 'KOUS', 'ADV', 'ADV', 'VVFIN', 'PPER', 'PIAT', 'NN', 'ADV', 'KON', 'PROP', 'VMFIN', 'PPER', 'PRF', 'VVINF'), 'right siblings': ['NX', 'ADVX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 23), 'span': (6, 9), 'left siblings': ['ADVX', 'NX', 'DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(ADVX immer doch)
		(NX kino theater restaurant)
		(DM also)
		(VF theater)
		(LK denke)
		[01;31m(MF[00m
			(NX
				(PPER ich))[01;31m)[00m
		(NX das)
		(ADVX da)
		(SIMPX da kriegen wir keine karten mehr)
		(SIMPX und auserdem mussen wir uns kummern)))
Step:Unary
{'subtrees': ['NX'], 'family': ['ADVX', 'NX', 'DM', 'VF', 'LK', 'MF', 'NX', 'ADVX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'NN', 'NN', 'NN', 'ADV', 'NN', 'VVFIN', 'PPER', 'KOUS', 'ADV', 'ADV', 'VVFIN', 'PPER', 'PIAT', 'NN', 'ADV', 'KON', 'PROP', 'VMFIN', 'PPER', 'PRF', 'VVINF'), 'right siblings': ['NX', 'ADVX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 23), 'span': (8, 9), 'left siblings': ['ADVX', 'NX', 'DM', 'VF', 'LK'], 'label': 'MF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP immer doch kino theater restaurant also theater denke ich das da da kriegen wir keine karten mehr und auserdem mussen wir uns kummern)

Sentence 464:
11 Initial errors
0 on fringe, 7 iterations
3 Error:Modifier Attachment
2 Error:Single Word Phrase
2 Error:PP Attachment
1 Error:UNSET add
1 Error:NP Internal Structure
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM okay)
		(DM gut)
		(DM klar)
		(DM ja)
		(DM nee)
		[01;36m(NX[00m
			(ADVX dann)
			[01;36m(NX[00m
				(NX das)
				(NX das)[01;36m)[00m[01;36m)[00m
		(SIMPX
			(VF das)
			(LK ware)
			[01;31m(MF[00m
				[01;36m(MF[00m
					(NX es)
					[01;36m(ADJX[00m [01;31m(ADVX[00m
						(ADV vorerst)[01;31m)[00m[01;36m)[00m[01;36m)[00m
				[01;36m(NF[00m
					(PX
						(APPR von)
						(NX mir)
						(APZR aus))[01;36m)[00m[01;31m)[00m)
		[01;36m(SIMPX[00m
			[01;31m(DM[00m
				(ADVX dann)
				[01;36m(DM[00m
					(PTKANT danke)[01;36m)[00m[01;31m)[00m
			[01;31m(DM[00m
				(NX
					(NE peter))[01;31m)[00m
			(SIMPX und wir sehen uns)[01;36m)[00m))
Step:Modifier Attachment
{'new_parent': 'TURN', 'new_family': ['DM', 'DM', 'DM', 'DM', 'DM', 'DM', 'ADVX', 'NX', 'NX', 'SIMPX', 'ADVX', 'DM', 'DM', 'SIMPX'], 'mover info': [('ADVX', (16, 17))], 'old_family': ['ADVX', 'PTKANT'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'ITJ', 'ITJ', 'ITJ', 'PTKANT', 'PTKANT', 'ADV', 'PDS', 'PDS', 'PDS', 'VAFIN', 'PPER', 'ADV', 'APPR', 'PPER', 'APZR', 'ADV', 'PTKANT', 'NE', 'KON', 'PPER', 'VVFIN', 'PRF'), 'start right siblings': ['PTKANT'], 'end left siblings': ['DM', 'DM', 'DM', 'DM', 'DM', 'DM', 'ADVX', 'NX', 'NX', 'SIMPX'], 'auto preterminal span': (0, 23), 'adding node already present': False, 'movers': ['ADVX'], 'old_parent': 'DM', 'POS confusion': ('ADV', 'ADV'), 'added and moved': True, 'end right siblings': ['DM', 'DM', 'SIMPX'], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'SIMPX'}
(TOP
	(TURN
		(DM ja)
		(DM okay)
		(DM gut)
		(DM klar)
		(DM ja)
		(DM nee)
		[01;36m(NX[00m
			(ADVX dann)
			[01;36m(NX[00m
				(NX das)
				(NX das)[01;36m)[00m[01;36m)[00m
		(SIMPX
			(VF das)
			(LK ware)
			[01;31m(MF[00m
				[01;36m(MF[00m
					(NX es)
					[01;36m(ADJX[00m [01;31m(ADVX[00m
						(ADV vorerst)[01;31m)[00m[01;36m)[00m[01;36m)[00m
				[01;36m(NF[00m
					(PX
						(APPR von)
						(NX mir)
						(APZR aus))[01;36m)[00m[01;31m)[00m)
		(SIMPX
			(ADVX dann)
			(DM danke)
			[01;31m(DM[00m
				(NX
					(NE peter))[01;31m)[00m
			(SIMPX und wir sehen uns))))
Step:Single Word Phrase
{'family': ['NX', 'ADJX', 'PX'], 'auto preterminal span': (12, 13), 'span': (12, 13), 'subtrees': ['ADV'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'ADJX')}
(TOP
	(TURN
		(DM ja)
		(DM okay)
		(DM gut)
		(DM klar)
		(DM ja)
		(DM nee)
		[01;36m(NX[00m
			(ADVX dann)
			[01;36m(NX[00m
				(NX das)
				(NX das)[01;36m)[00m[01;36m)[00m
		(SIMPX
			(VF das)
			(LK ware)
			[01;31m(MF[00m
				[01;36m(MF[00m
					(NX es)
					(ADJX vorerst)[01;36m)[00m
				[01;36m(NF[00m
					(PX
						(APPR von)
						(NX mir)
						(APZR aus))[01;36m)[00m[01;31m)[00m)
		(SIMPX
			(ADVX dann)
			(DM danke)
			[01;31m(DM[00m
				(NX
					(NE peter))[01;31m)[00m
			(SIMPX und wir sehen uns))))
Step:PP Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'PX'], 'mover info': [('PX', (13, 16))], 'old_family': ['NX', 'ADJX', 'PX'], 'start left siblings': ['NX', 'ADJX'], 'auto preterminals': ('PDS', 'VAFIN', 'PPER', 'ADV', 'APPR', 'PPER', 'APZR'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (9, 16), 'movers': ['PX'], 'old_parent': 'MF', 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(DM okay)
		(DM gut)
		(DM klar)
		(DM ja)
		(DM nee)
		[01;36m(NX[00m
			(ADVX dann)
			[01;36m(NX[00m
				(NX das)
				(NX das)[01;36m)[00m[01;36m)[00m
		(SIMPX
			(VF das)
			(LK ware)
			(MF es vorerst)
			[01;36m(NF[00m
				(PX
					(APPR von)
					(NX mir)
					(APZR aus))[01;36m)[00m)
		(SIMPX
			(ADVX dann)
			(DM danke)
			[01;31m(DM[00m
				(NX
					(NE peter))[01;31m)[00m
			(SIMPX und wir sehen uns))))
Step:UNSET add
{'subtrees': ['ADVX', 'NX', 'NX'], 'family': ['DM', 'DM', 'DM', 'DM', 'DM', 'DM', 'NX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PDS', 'PDS'), 'right siblings': [(SIMPX (VF (NX (PDS das))) (LK (VXFIN (VAFIN ware))) (MF (NX (PPER es)) (ADJX (ADV vorerst))) (PX (APPR von) (NX (PPER mir)) (APZR aus))), (SIMPX (ADVX (ADV dann)) (DM (PTKANT danke)) (DM (NX (NE peter))) (SIMPX (KOORD (KON und)) (VF (NX (PPER wir))) (LK (VXFIN (VVFIN sehen))) (MF (NX (PRF uns)))))], 'left siblings': [(DM (PTKANT ja)), (DM (ITJ okay)), (DM (ITJ gut)), (DM (ITJ klar)), (DM (PTKANT ja)), (DM (PTKANT nee))], 'auto preterminal span': (6, 9), 'span': (6, 9), 'parent': 'TURN', 'label': 'NX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM okay)
		(DM gut)
		(DM klar)
		(DM ja)
		(DM nee)
		(NX
			(ADVX dann)
			[01;36m(NX[00m
				(NX das)
				(NX das)[01;36m)[00m)
		(SIMPX
			(VF das)
			(LK ware)
			(MF es vorerst)
			[01;36m(NF[00m
				(PX
					(APPR von)
					(NX mir)
					(APZR aus))[01;36m)[00m)
		(SIMPX
			(ADVX dann)
			(DM danke)
			[01;31m(DM[00m
				(NX
					(NE peter))[01;31m)[00m
			(SIMPX und wir sehen uns))))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'PDS'), 'right siblings': [], 'left siblings': [(ADVX (ADV dann))], 'auto preterminal span': (7, 9), 'span': (7, 9), 'parent': 'NX', 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM okay)
		(DM gut)
		(DM klar)
		(DM ja)
		(DM nee)
		(NX dann das das)
		(SIMPX
			(VF das)
			(LK ware)
			(MF es vorerst)
			[01;36m(NF[00m
				(PX
					(APPR von)
					(NX mir)
					(APZR aus))[01;36m)[00m)
		(SIMPX
			(ADVX dann)
			(DM danke)
			[01;31m(DM[00m
				(NX
					(NE peter))[01;31m)[00m
			(SIMPX und wir sehen uns))))
Step:Unary
{'subtrees': ['PX'], 'family': ['VF', 'LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'PPER', 'APZR'), 'right siblings': [], 'left siblings': [(VF (NX (PDS das))), (LK (VXFIN (VAFIN ware))), (MF (NX (PPER es)) (ADJX (ADV vorerst)))], 'auto preterminal span': (13, 16), 'span': (13, 16), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM okay)
		(DM gut)
		(DM klar)
		(DM ja)
		(DM nee)
		(NX dann das das)
		(SIMPX das ware es vorerst von mir aus)
		(SIMPX
			(ADVX dann)
			(DM danke)
			[01;31m(DM[00m
				(NX
					(NE peter))[01;31m)[00m
			(SIMPX und wir sehen uns))))
Step:Unary
{'subtrees': ['NX'], 'family': ['ADVX', 'DM', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PTKANT', 'NE', 'KON', 'PPER', 'VVFIN', 'PRF'), 'right siblings': ['SIMPX'], 'parent': 'SIMPX', 'auto preterminal span': (16, 23), 'span': (18, 19), 'left siblings': ['ADVX', 'DM'], 'label': 'DM', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja okay gut klar ja nee dann das das das ware es vorerst von mir aus dann danke peter und wir sehen uns)

Sentence 465:
13 Initial errors
0 on fringe, 8 iterations
4 Error:VP Attachment
2 Error:Different label
2 Error:Single Word Phrase
1 Error:Unary
1 Error:Single Word Phrase
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:Clause Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM hallo)
		[01;31m(DM[00m
			(NX
				(NE reinhard))[01;31m)[00m
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			[01;36m(DM[00m [01;31m(LK[00m
				[01;31m(VXFIN[00m
					(VVFIN danke)[01;31m)[00m[01;31m)[00m[01;36m)[00m
			[01;31m(NF[00m [01;33m(SIMPX[00m
				[01;31m(SIMPX[00m
					(C das)
					(MF du so kurzfristig hier)
					[01;31m(VC[00m
						[01;36m(VC[00m [01;36m(VXFIN[00m [01;31m(VXINF[00m
							(VVPP runtergeschaut)[01;31m)[00m [01;33mSIMPX) SIMPX)[00m[01;36m)[00m[01;36m)[00m
						(VXFIN hast)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX wir mussen ja noch ein termin vereinbaren)))
Step:VP Attachment
{'new_parent': 'NF', 'new_family': ['SIMPX', 'VXFIN'], 'mover info': [('VXFIN', (9, 10))], 'old_family': ['VXINF', 'VXFIN'], 'start left siblings': ['VXINF'], 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'ADJD', 'ADV', 'VVPP', 'VAFIN'), 'start right siblings': [], 'end left siblings': ['SIMPX'], 'auto preterminal span': (3, 10), 'movers': ['VXFIN'], 'old_parent': 'VC', 'POS confusion': ('VAFIN', 'VAFIN'), 'end right siblings': [], 'classified_type': 'VP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM hallo)
		[01;31m(DM[00m
			(NX
				(NE reinhard))[01;31m)[00m
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			[01;36m(DM[00m [01;31m(LK[00m
				[01;31m(VXFIN[00m
					(VVFIN danke)[01;31m)[00m[01;31m)[00m[01;36m)[00m
			[01;31m(NF[00m
				(SIMPX
					(C das)
					(MF du so kurzfristig hier)
					[01;36m(VXFIN[00m
						(VC
							[01;31m(VXINF[00m
								(VVPP runtergeschaut)[01;31m)[00m)[01;36m)[00m) [01;33mSIMPX)[00m
				(VXFIN hast)[01;31m)[00m[01;31m)[00m
		(SIMPX wir mussen ja noch ein termin vereinbaren)))
Step:Different label
{'family': ['DM', 'NF'], 'auto preterminal span': (2, 3), 'span': (2, 3), 'subtrees': ['VXFIN'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('VVFIN',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('LK', 'DM')}
(TOP
	(TURN
		(DM hallo)
		[01;31m(DM[00m
			(NX
				(NE reinhard))[01;31m)[00m
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(DM
				[01;31m(VXFIN[00m
					(VVFIN danke)[01;31m)[00m)
			[01;31m(NF[00m
				(SIMPX
					(C das)
					(MF du so kurzfristig hier)
					[01;36m(VXFIN[00m
						(VC
							[01;31m(VXINF[00m
								(VVPP runtergeschaut)[01;31m)[00m)[01;36m)[00m) [01;33mSIMPX)[00m
				(VXFIN hast)[01;31m)[00m[01;31m)[00m
		(SIMPX wir mussen ja noch ein termin vereinbaren)))
Step:Single Word Phrase
{'family': ['VXFIN'], 'auto preterminal span': (8, 9), 'span': (8, 9), 'subtrees': ['VVPP'], 'parent': 'VC', 'over_word': True, 'auto preterminals': ('VVPP',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VXINF', 'VXFIN')}
(TOP
	(TURN
		(DM hallo)
		[01;31m(DM[00m
			(NX
				(NE reinhard))[01;31m)[00m
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(DM
				[01;31m(VXFIN[00m
					(VVFIN danke)[01;31m)[00m)
			[01;31m(NF[00m
				(SIMPX das du so kurzfristig hier runtergeschaut) [01;33mSIMPX)[00m
				(VXFIN hast)[01;31m)[00m[01;31m)[00m
		(SIMPX wir mussen ja noch ein termin vereinbaren)))
Step:Unary
{'subtrees': ['NX'], 'family': ['DM', 'DM', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'NE', 'VVFIN', 'KOUS', 'PPER', 'ADV', 'ADJD', 'ADV', 'VVPP', 'VAFIN', 'PPER', 'VMFIN', 'ADV', 'ADV', 'ART', 'NN', 'VVINF'), 'right siblings': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 17), 'span': (1, 2), 'left siblings': ['DM'], 'label': 'DM', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM hallo)
		(NX reinhard)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(DM
				[01;31m(VXFIN[00m
					(VVFIN danke)[01;31m)[00m)
			[01;31m(NF[00m
				(SIMPX das du so kurzfristig hier runtergeschaut) [01;33mSIMPX)[00m
				(VXFIN hast)[01;31m)[00m[01;31m)[00m
		(SIMPX wir mussen ja noch ein termin vereinbaren)))
Step:Single Word Phrase
{'subtrees': ['VVFIN'], 'family': ['VXFIN'], 'over_word': True, 'over words': True, 'auto preterminals': ('VVFIN',), 'right siblings': [], 'parent': 'DM', 'auto preterminal span': (2, 3), 'span': (2, 3), 'left siblings': [], 'label': 'VXFIN', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(DM hallo)
		(NX reinhard)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(DM danke)
			[01;31m(NF[00m
				(SIMPX das du so kurzfristig hier runtergeschaut) [01;33mSIMPX)[00m
				(VXFIN hast)[01;31m)[00m[01;31m)[00m
		(SIMPX wir mussen ja noch ein termin vereinbaren)))
Step:UNSET remove
{'subtrees': ['DM', 'NF'], 'family': ['DM', 'NX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'NE', 'VVFIN', 'KOUS', 'PPER', 'ADV', 'ADJD', 'ADV', 'VVPP', 'VAFIN', 'PPER', 'VMFIN', 'ADV', 'ADV', 'ART', 'NN', 'VVINF'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 17), 'span': (2, 10), 'left siblings': ['DM', 'NX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM hallo)
		(NX reinhard)
		[01;33m(SIMPX[00m (DM danke)
		[01;31m(NF[00m
			(SIMPX das du so kurzfristig hier runtergeschaut) [01;33mSIMPX)[00m
			(VXFIN hast)[01;31m)[00m
		(SIMPX wir mussen ja noch ein termin vereinbaren)))
Step:UNSET remove
{'subtrees': ['SIMPX', 'VXFIN'], 'family': ['DM', 'NX', 'DM', 'NF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'NE', 'VVFIN', 'KOUS', 'PPER', 'ADV', 'ADJD', 'ADV', 'VVPP', 'VAFIN', 'PPER', 'VMFIN', 'ADV', 'ADV', 'ART', 'NN', 'VVINF'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 17), 'span': (3, 10), 'left siblings': ['DM', 'NX', 'DM'], 'label': 'NF', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM hallo)
		(NX reinhard)
		[01;36m(SIMPX[00m
			(DM danke)
			(SIMPX das du so kurzfristig hier runtergeschaut)[01;36m)[00m
		(VXFIN hast)
		(SIMPX wir mussen ja noch ein termin vereinbaren)))
Step:Clause Attachment
{'subtrees': ['DM', 'SIMPX'], 'family': ['DM', 'NX', 'SIMPX', 'VXFIN', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'KOUS', 'PPER', 'ADV', 'ADJD', 'ADV', 'VVPP'), 'right siblings': [(VXFIN (VAFIN hast)), (SIMPX (VF (NX (PPER wir))) (LK (VXFIN (VMFIN mussen))) (MF (ADVX (ADV ja)) (ADVX (ADV noch)) (NX (ART ein) (NN termin))) (VC (VXINF (VVINF vereinbaren))))], 'left siblings': [(DM (ITJ hallo)), (NX (NE reinhard))], 'auto preterminal span': (2, 9), 'span': (2, 9), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP hallo reinhard danke das du so kurzfristig hier runtergeschaut hast wir mussen ja noch ein termin vereinbaren)

Sentence 466:
5 Initial errors
0 on fringe, 5 iterations
1 Error:UNSET add
1 Error:UNSET remove
1 Error:Modifier Attachment
1 Error:Modifier Attachment
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;36m(SIMPX[00m
			(SIMPX hannover ist das ziel)
			(NX anderthalb tage)[01;36m)[00m
		[01;31m(SIMPX[00m
			(VF in den nachsten drei monaten)
			(LK gibt)
			[01;31m(MF[00m
				(NX es)
				(ADVX ja)
				(ADVX ofter)
				[01;31m(NX[00m
					(PDAT diese)
					(ADJX ganzen)
					(NN feiertage)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(NX[00m
			(NX ostern)
			(NX pfingsten)
			(KON und)
			(ADVX so weiter)[01;31m)[00m
		(SIMPX mal kucken wie wir da in die gange kommen)
		(SIMPX wie schaut es denn bei dir aus)))
Step:UNSET add
{'subtrees': ['SIMPX', 'NX'], 'family': ['SIMPX', 'SIMPX', 'NX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NE', 'VAFIN', 'ART', 'NN', 'CARD', 'NN'), 'right siblings': [(SIMPX (VF (PX (APPR in) (NX (ART den) (ADJX (ADJA nachsten)) (ADJX (CARD drei)) (NN monaten)))) (LK (VXFIN (VVFIN gibt))) (MF (NX (PPER es)) (ADVX (ADV ja)) (ADVX (ADV ofter)) (NX (PDAT diese) (ADJX (ADJA ganzen)) (NN feiertage)))), (NX (NX (NE ostern)) (NX (NE pfingsten)) (KON und) (ADVX (ADVX (ADV so)) (ADV weiter))), (SIMPX (MF (ADVX (ADV mal))) (VC (VXINF (VVINF kucken))) (NF (SIMPX (C (KOUS wie)) (MF (NX (PPER wir)) (ADVX (ADV da)) (PX (APPR in) (NX (ART die) (NN gange)))) (VC (VXFIN (VVFIN kommen)))))), (SIMPX (VF (ADJX (PWAV wie))) (LK (VXFIN (VVFIN schaut))) (MF (NX (PPER es)) (ADVX (ADV denn)) (PX (APPR bei) (NX (PPER dir)))) (VC (PTKVZ aus)))], 'left siblings': [], 'auto preterminal span': (0, 6), 'span': (0, 6), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SIMPX hannover ist das ziel anderthalb tage)
		[01;31m(SIMPX[00m
			(VF in den nachsten drei monaten)
			(LK gibt)
			[01;31m(MF[00m
				(NX es)
				(ADVX ja)
				(ADVX ofter)
				[01;31m(NX[00m
					(PDAT diese)
					(ADJX ganzen)
					(NN feiertage)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(NX[00m
			(NX ostern)
			(NX pfingsten)
			(KON und)
			(ADVX so weiter)[01;31m)[00m
		(SIMPX mal kucken wie wir da in die gange kommen)
		(SIMPX wie schaut es denn bei dir aus)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['SIMPX', 'SIMPX', 'NX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NE', 'VAFIN', 'ART', 'NN', 'CARD', 'NN', 'APPR', 'ART', 'ADJA', 'CARD', 'NN', 'VVFIN', 'PPER', 'ADV', 'ADV', 'PDAT', 'ADJA', 'NN', 'NE', 'NE', 'KON', 'ADV', 'ADV', 'ADV', 'VVINF', 'KOUS', 'PPER', 'ADV', 'APPR', 'ART', 'NN', 'VVFIN', 'PWAV', 'VVFIN', 'PPER', 'ADV', 'APPR', 'PPER', 'PTKVZ'), 'right siblings': ['NX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 39), 'span': (6, 18), 'left siblings': ['SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX hannover ist das ziel anderthalb tage)
		(VF in den nachsten drei monaten)
		(LK gibt)
		[01;31m(MF[00m
			(NX es)
			(ADVX ja)
			(ADVX ofter)
			[01;31m(NX[00m
				(PDAT diese)
				(ADJX ganzen)
				(NN feiertage)[01;31m)[00m[01;31m)[00m
		[01;31m(NX[00m
			(NX ostern)
			(NX pfingsten)
			(KON und)
			(ADVX so weiter)[01;31m)[00m
		(SIMPX mal kucken wie wir da in die gange kommen)
		(SIMPX wie schaut es denn bei dir aus)))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADVX', 'ADVX', 'NX'], 'family': ['SIMPX', 'VF', 'LK', 'MF', 'NX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NE', 'VAFIN', 'ART', 'NN', 'CARD', 'NN', 'APPR', 'ART', 'ADJA', 'CARD', 'NN', 'VVFIN', 'PPER', 'ADV', 'ADV', 'PDAT', 'ADJA', 'NN', 'NE', 'NE', 'KON', 'ADV', 'ADV', 'ADV', 'VVINF', 'KOUS', 'PPER', 'ADV', 'APPR', 'ART', 'NN', 'VVFIN', 'PWAV', 'VVFIN', 'PPER', 'ADV', 'APPR', 'PPER', 'PTKVZ'), 'right siblings': ['NX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 39), 'span': (12, 18), 'left siblings': ['SIMPX', 'VF', 'LK'], 'label': 'MF', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX hannover ist das ziel anderthalb tage)
		(VF in den nachsten drei monaten)
		(LK gibt)
		(NX es)
		(ADVX ja)
		(ADVX ofter)
		[01;31m(NX[00m
			(PDAT diese)
			(ADJX ganzen)
			(NN feiertage)[01;31m)[00m
		[01;31m(NX[00m
			(NX ostern)
			(NX pfingsten)
			(KON und)
			(ADVX so weiter)[01;31m)[00m
		(SIMPX mal kucken wie wir da in die gange kommen)
		(SIMPX wie schaut es denn bei dir aus)))
Step:Modifier Attachment
{'subtrees': ['PDAT', 'ADJX', 'NN'], 'family': ['SIMPX', 'VF', 'LK', 'NX', 'ADVX', 'ADVX', 'NX', 'NX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NE', 'VAFIN', 'ART', 'NN', 'CARD', 'NN', 'APPR', 'ART', 'ADJA', 'CARD', 'NN', 'VVFIN', 'PPER', 'ADV', 'ADV', 'PDAT', 'ADJA', 'NN', 'NE', 'NE', 'KON', 'ADV', 'ADV', 'ADV', 'VVINF', 'KOUS', 'PPER', 'ADV', 'APPR', 'ART', 'NN', 'VVFIN', 'PWAV', 'VVFIN', 'PPER', 'ADV', 'APPR', 'PPER', 'PTKVZ'), 'right siblings': ['NX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 39), 'span': (15, 18), 'left siblings': ['SIMPX', 'VF', 'LK', 'NX', 'ADVX', 'ADVX'], 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX hannover ist das ziel anderthalb tage)
		(VF in den nachsten drei monaten)
		(LK gibt)
		(NX es)
		(ADVX ja)
		(ADVX ofter)
		(PDAT diese)
		(ADJX ganzen)
		(NN feiertage)
		[01;31m(NX[00m
			(NX ostern)
			(NX pfingsten)
			(KON und)
			(ADVX so weiter)[01;31m)[00m
		(SIMPX mal kucken wie wir da in die gange kommen)
		(SIMPX wie schaut es denn bei dir aus)))
Step:Modifier Attachment
{'subtrees': ['NX', 'NX', 'KON', 'ADVX'], 'family': ['SIMPX', 'VF', 'LK', 'NX', 'ADVX', 'ADVX', 'PDAT', 'ADJX', 'NN', 'NX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NE', 'VAFIN', 'ART', 'NN', 'CARD', 'NN', 'APPR', 'ART', 'ADJA', 'CARD', 'NN', 'VVFIN', 'PPER', 'ADV', 'ADV', 'PDAT', 'ADJA', 'NN', 'NE', 'NE', 'KON', 'ADV', 'ADV', 'ADV', 'VVINF', 'KOUS', 'PPER', 'ADV', 'APPR', 'ART', 'NN', 'VVFIN', 'PWAV', 'VVFIN', 'PPER', 'ADV', 'APPR', 'PPER', 'PTKVZ'), 'right siblings': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 39), 'span': (18, 23), 'left siblings': ['SIMPX', 'VF', 'LK', 'NX', 'ADVX', 'ADVX', 'PDAT', 'ADJX', 'NN'], 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP hannover ist das ziel anderthalb tage in den nachsten drei monaten gibt es ja ofter diese ganzen feiertage ostern pfingsten und so weiter mal kucken wie wir da in die gange kommen wie schaut es denn bei dir aus)

Sentence 467:
0 Initial errors
0 on fringe, 0 iterations

Sentence 468:
0 Initial errors
0 on fringe, 0 iterations

Sentence 469:
8 Initial errors
0 on fringe, 7 iterations
2 Error:NP Attachment
1 Error:Modifier Attachment
1 Error:Modifier Attachment
1 Error:UNSET remove
1 Error:Single Word Phrase
1 Error:UNSET remove
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX wurde ich auch vorschlagen das wir montag fruh losfahren)
		(ADJX
			[01;36m(ADVX[00m
				(ADVX vielleicht)
				(ADVX nicht)[01;36m)[00m
			(ADJX allzu fruh))
		(SIMPX ab funf uhr drei konnte man abfahren)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(KOORD aber)
				(LK ist)
				[01;31m(MF[00m
					(ADVX nicht)
					[01;31m(NX[00m
						[01;31m(NX[00m
							(NN ziel)[01;31m)[00m
						(NX der sache)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			[01;31m(NX[00m
				(KON sondern)
				[01;36m(ADJX[00m
					(ADVX lieber)
					(NX so sieben)[01;36m)[00m[01;31m)[00m[01;36m)[00m))
Step:NP Attachment
{'new_parent': 'SIMPX', 'new_family': ['KOORD', 'LK', 'MF', 'NX'], 'mover info': [('NX', (26, 30))], 'old_family': ['SIMPX', 'ADJX', 'SIMPX', 'SIMPX', 'NX'], 'start left siblings': ['SIMPX', 'ADJX', 'SIMPX', 'SIMPX'], 'auto preterminals': ('VAFIN', 'PPER', 'ADV', 'VVINF', 'KOUS', 'PPER', 'NN', 'ADV', 'VVFIN', 'ADV', 'PTKNEG', 'PTKA', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'VMFIN', 'PIS', 'VVINF', 'KON', 'VAFIN', 'PTKNEG', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ADV', 'CARD'), 'start right siblings': [], 'end left siblings': ['KOORD', 'LK', 'MF'], 'auto preterminal span': (0, 30), 'movers': ['NX'], 'old_parent': 'TURN', 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SIMPX wurde ich auch vorschlagen das wir montag fruh losfahren)
		(ADJX
			[01;36m(ADVX[00m
				(ADVX vielleicht)
				(ADVX nicht)[01;36m)[00m
			(ADJX allzu fruh))
		(SIMPX ab funf uhr drei konnte man abfahren)
		(SIMPX
			(KOORD aber)
			(LK ist)
			[01;31m(MF[00m
				(ADVX nicht)
				[01;31m(NX[00m
					[01;31m(NX[00m
						(NN ziel)[01;31m)[00m
					(NX der sache)[01;31m)[00m[01;31m)[00m
			[01;31m(NX[00m
				(KON sondern)
				[01;36m(ADJX[00m
					(ADVX lieber)
					(NX so sieben)[01;36m)[00m[01;31m)[00m)))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'ADVX'], 'family': ['ADVX', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PTKNEG'), 'right siblings': [(ADJX (PTKA allzu) (ADJD fruh))], 'left siblings': [], 'auto preterminal span': (9, 11), 'span': (9, 11), 'parent': 'ADJX', 'label': 'ADVX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		(SIMPX wurde ich auch vorschlagen das wir montag fruh losfahren)
		(ADJX vielleicht nicht allzu fruh)
		(SIMPX ab funf uhr drei konnte man abfahren)
		(SIMPX
			(KOORD aber)
			(LK ist)
			[01;31m(MF[00m
				(ADVX nicht)
				[01;31m(NX[00m
					[01;31m(NX[00m
						(NN ziel)[01;31m)[00m
					(NX der sache)[01;31m)[00m[01;31m)[00m
			[01;31m(NX[00m
				(KON sondern)
				[01;36m(ADJX[00m
					(ADVX lieber)
					(NX so sieben)[01;36m)[00m[01;31m)[00m)))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'NX'], 'family': ['KON', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'CARD'), 'right siblings': [], 'left siblings': [(KON sondern)], 'auto preterminal span': (27, 30), 'span': (27, 30), 'parent': 'NX', 'label': 'ADJX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		(SIMPX wurde ich auch vorschlagen das wir montag fruh losfahren)
		(ADJX vielleicht nicht allzu fruh)
		(SIMPX ab funf uhr drei konnte man abfahren)
		(SIMPX
			(KOORD aber)
			(LK ist)
			[01;31m(MF[00m
				(ADVX nicht)
				[01;31m(NX[00m
					[01;31m(NX[00m
						(NN ziel)[01;31m)[00m
					(NX der sache)[01;31m)[00m[01;31m)[00m
			[01;31m(NX[00m
				(KON sondern)
				(ADJX lieber so sieben)[01;31m)[00m)))
Step:UNSET remove
{'subtrees': ['ADVX', 'NX'], 'family': ['KOORD', 'LK', 'MF', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'VAFIN', 'PTKNEG', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ADV', 'CARD'), 'right siblings': ['NX'], 'parent': 'SIMPX', 'auto preterminal span': (20, 30), 'span': (22, 26), 'left siblings': ['KOORD', 'LK'], 'label': 'MF', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX wurde ich auch vorschlagen das wir montag fruh losfahren)
		(ADJX vielleicht nicht allzu fruh)
		(SIMPX ab funf uhr drei konnte man abfahren)
		(SIMPX
			(KOORD aber)
			(LK ist)
			(ADVX nicht)
			[01;31m(NX[00m
				[01;31m(NX[00m
					(NN ziel)[01;31m)[00m
				(NX der sache)[01;31m)[00m
			[01;31m(NX[00m
				(KON sondern)
				(ADJX lieber so sieben)[01;31m)[00m)))
Step:Single Word Phrase
{'subtrees': ['NN'], 'family': ['NX', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('NN', 'ART', 'NN'), 'right siblings': ['NX'], 'parent': 'NX', 'auto preterminal span': (23, 26), 'span': (23, 24), 'left siblings': [], 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX wurde ich auch vorschlagen das wir montag fruh losfahren)
		(ADJX vielleicht nicht allzu fruh)
		(SIMPX ab funf uhr drei konnte man abfahren)
		(SIMPX
			(KOORD aber)
			(LK ist)
			(ADVX nicht)
			[01;31m(NX[00m
				(NN ziel)
				(NX der sache)[01;31m)[00m
			[01;31m(NX[00m
				(KON sondern)
				(ADJX lieber so sieben)[01;31m)[00m)))
Step:UNSET remove
{'subtrees': ['NN', 'NX'], 'family': ['KOORD', 'LK', 'ADVX', 'NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'VAFIN', 'PTKNEG', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ADV', 'CARD'), 'right siblings': ['NX'], 'parent': 'SIMPX', 'auto preterminal span': (20, 30), 'span': (23, 26), 'left siblings': ['KOORD', 'LK', 'ADVX'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX wurde ich auch vorschlagen das wir montag fruh losfahren)
		(ADJX vielleicht nicht allzu fruh)
		(SIMPX ab funf uhr drei konnte man abfahren)
		(SIMPX
			(KOORD aber)
			(LK ist)
			(ADVX nicht)
			(NN ziel)
			(NX der sache)
			[01;31m(NX[00m
				(KON sondern)
				(ADJX lieber so sieben)[01;31m)[00m)))
Step:Modifier Attachment
{'subtrees': ['KON', 'ADJX'], 'family': ['KOORD', 'LK', 'ADVX', 'NN', 'NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'VAFIN', 'PTKNEG', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ADV', 'CARD'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (20, 30), 'span': (26, 30), 'left siblings': ['KOORD', 'LK', 'ADVX', 'NN', 'NX'], 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP wurde ich auch vorschlagen das wir montag fruh losfahren vielleicht nicht allzu fruh ab funf uhr drei konnte man abfahren aber ist nicht ziel der sache sondern lieber so sieben)

Sentence 470:
0 Initial errors
0 on fringe, 0 iterations

Sentence 471:
13 Initial errors
0 on fringe, 12 iterations
2 Error:UNSET move
1 Error:Single Word Phrase
1 Error:PP Attachment
1 Error:PP Attachment
1 Error:PP Attachment
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:UNSET add
1 Error:Clause Attachment
1 Error:PP Attachment
1 Error:Modifier Attachment
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM also)
		(SIMPX es ist vollkommen wahlfrei)
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(VF fluge)
				(LK gibt)
				(MF es immer am abend)[01;36m)[00m
			[01;31m(NF[00m
				(ADVX allerdings)
				(PX erst ab achtzehn uhr funfunddreisig)[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF zuge)
			(LK gehen)
			(MF sowieso den ganzen tag uber)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF wir)
			[01;31m(FKOORD[00m
				[01;31m(LKMN[00m
					(LK waren)
					[01;31m(MF[00m
						(ADVX naturlich)
						(PX mit dem flugzeug)
						[01;33m(ADJX[00m (ADJX etwas flexibler)
						[01;31m(PX[00m
							(PX zum abend) [01;33mADJX)[00m
							(ADVX hin)[01;31m)[00m[01;31m)[00m
					[01;33m(SIMPX[00m (NF weil wir den letzten flug sogar um neun uhr noch nehmen konnten)[01;31m)[00m
				[01;36m(KOORD[00m
					(KON und)[01;36m)[00m
				(LKM
					(LK waren)
					(MF
						(ADVX dann)
						[01;36m(PX[00m
							(PX trotzdem)
							(ADVX noch)
							(PX vor elf)[01;36m)[00m
						(PX zu hause)))[01;31m)[00m[01;31m)[00m)) [01;33mSIMPX)[00m
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['NF', 'KOORD', 'VF', 'LK', 'MF'], 'mover info': [('NF', (11, 17))], 'old_family': ['VF', 'LK', 'MF', 'NF'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('ADV', 'PPER', 'VAFIN', 'ADV', 'ADJD', 'NN', 'VVFIN', 'PPER', 'ADV', 'APPRART', 'NN', 'ADV', 'ADV', 'APPR', 'CARD', 'NN', 'CARD', 'KON', 'NN', 'VVFIN', 'ADV', 'ART', 'ADJA', 'NN', 'APPO', 'PPER', 'VAFIN', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'ADJD', 'APPRART', 'NN', 'ADV', 'KOUS', 'PPER', 'ART', 'ADJA', 'NN', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'VVINF', 'VMFIN', 'KON', 'VAFIN', 'ADV', 'PROP', 'ADV', 'APPR', 'CARD', 'APPR', 'NN'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 57), 'movers': ['NF'], 'old_parent': 'SIMPX', 'end right siblings': ['KOORD', 'VF', 'LK', 'MF'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM also)
		(SIMPX es ist vollkommen wahlfrei)
		(SIMPX fluge gibt es immer am abend)
		[01;31m(SIMPX[00m
			[01;31m(NF[00m
				(ADVX allerdings)
				(PX erst ab achtzehn uhr funfunddreisig)[01;31m)[00m
			(KOORD und)
			(VF zuge)
			(LK gehen)
			(MF sowieso den ganzen tag uber)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF wir)
			[01;31m(FKOORD[00m
				[01;31m(LKMN[00m
					(LK waren)
					[01;31m(MF[00m
						(ADVX naturlich)
						(PX mit dem flugzeug)
						[01;33m(ADJX[00m (ADJX etwas flexibler)
						[01;31m(PX[00m
							(PX zum abend) [01;33mADJX)[00m
							(ADVX hin)[01;31m)[00m[01;31m)[00m
					[01;33m(SIMPX[00m (NF weil wir den letzten flug sogar um neun uhr noch nehmen konnten)[01;31m)[00m
				[01;36m(KOORD[00m
					(KON und)[01;36m)[00m
				(LKM
					(LK waren)
					(MF
						(ADVX dann)
						[01;36m(PX[00m
							(PX trotzdem)
							(ADVX noch)
							(PX vor elf)[01;36m)[00m
						(PX zu hause)))[01;31m)[00m[01;31m)[00m)) [01;33mSIMPX)[00m
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['LKMN', 'KOORD', 'LKM'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON',), 'right siblings': [(LKM (LK (VXFIN (VAFIN waren))) (MF (ADVX (ADV dann)) (PX (PROP trotzdem)) (ADVX (ADV noch)) (PX (APPR vor) (NX (CARD elf))) (PX (APPR zu) (NX (NN hause)))))], 'left siblings': [(LKMN (LK (VXFIN (VAFIN waren))) (MF (ADVX (ADV naturlich)) (PX (APPR mit) (NX (ART dem) (NN flugzeug))) (ADJX (ADVX (ADV etwas)) (ADJD flexibler)) (PX (PX (APPRART zum) (NX (NN abend))) (ADVX (ADV hin)))) (NF (SIMPX (C (KOUS weil)) (MF (NX (PPER wir)) (NX (ART den) (ADJX (ADJA letzten)) (NN flug)) (ADVX (ADV sogar)) (PX (APPR um) (NX (ADJX (CARD neun)) (NN uhr))) (ADVX (ADV noch))) (VC (VXINF (VVINF nehmen)) (VXFIN (VMFIN konnten))))))], 'auto preterminal span': (48, 49), 'span': (48, 49), 'parent': 'FKOORD', 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		(SIMPX es ist vollkommen wahlfrei)
		(SIMPX fluge gibt es immer am abend)
		[01;31m(SIMPX[00m
			[01;31m(NF[00m
				(ADVX allerdings)
				(PX erst ab achtzehn uhr funfunddreisig)[01;31m)[00m
			(KOORD und)
			(VF zuge)
			(LK gehen)
			(MF sowieso den ganzen tag uber)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF wir)
			[01;31m(FKOORD[00m
				[01;31m(LKMN[00m
					(LK waren)
					[01;31m(MF[00m
						(ADVX naturlich)
						(PX mit dem flugzeug)
						[01;33m(ADJX[00m (ADJX etwas flexibler)
						[01;31m(PX[00m
							(PX zum abend) [01;33mADJX)[00m
							(ADVX hin)[01;31m)[00m[01;31m)[00m
					[01;33m(SIMPX[00m (NF weil wir den letzten flug sogar um neun uhr noch nehmen konnten)[01;31m)[00m
				(KOORD und)
				(LKM
					(LK waren)
					(MF
						(ADVX dann)
						[01;36m(PX[00m
							(PX trotzdem)
							(ADVX noch)
							(PX vor elf)[01;36m)[00m
						(PX zu hause)))[01;31m)[00m[01;31m)[00m)) [01;33mSIMPX)[00m
Step:PP Attachment
{'subtrees': ['PX', 'ADVX', 'PX'], 'family': ['ADVX', 'PX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PROP', 'ADV', 'APPR', 'CARD'), 'right siblings': [(PX (APPR zu) (NX (NN hause)))], 'left siblings': [(ADVX (ADV dann))], 'auto preterminal span': (51, 55), 'span': (51, 55), 'parent': 'MF', 'label': 'PX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		(SIMPX es ist vollkommen wahlfrei)
		(SIMPX fluge gibt es immer am abend)
		[01;31m(SIMPX[00m
			[01;31m(NF[00m
				(ADVX allerdings)
				(PX erst ab achtzehn uhr funfunddreisig)[01;31m)[00m
			(KOORD und)
			(VF zuge)
			(LK gehen)
			(MF sowieso den ganzen tag uber)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF wir)
			[01;31m(FKOORD[00m
				[01;31m(LKMN[00m
					(LK waren)
					[01;31m(MF[00m
						(ADVX naturlich)
						(PX mit dem flugzeug)
						[01;33m(ADJX[00m (ADJX etwas flexibler)
						[01;31m(PX[00m
							(PX zum abend) [01;33mADJX)[00m
							(ADVX hin)[01;31m)[00m[01;31m)[00m
					[01;33m(SIMPX[00m (NF weil wir den letzten flug sogar um neun uhr noch nehmen konnten)[01;31m)[00m
				(KOORD und)
				(LKM waren dann trotzdem noch vor elf zu hause)[01;31m)[00m[01;31m)[00m)) [01;33mSIMPX)[00m
Step:PP Attachment
{'subtrees': ['ADVX', 'PX'], 'family': ['NF', 'KOORD', 'VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'APPR', 'CARD', 'NN', 'CARD', 'KON', 'NN', 'VVFIN', 'ADV', 'ART', 'ADJA', 'NN', 'APPO'), 'right siblings': ['KOORD', 'VF', 'LK', 'MF'], 'parent': 'SIMPX', 'auto preterminal span': (11, 25), 'span': (11, 17), 'left siblings': [], 'label': 'NF', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX es ist vollkommen wahlfrei)
		(SIMPX fluge gibt es immer am abend)
		[01;31m(SIMPX[00m
			(ADVX allerdings)
			(PX erst ab achtzehn uhr funfunddreisig)
			(KOORD und)
			(VF zuge)
			(LK gehen)
			(MF sowieso den ganzen tag uber)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF wir)
			[01;31m(FKOORD[00m
				[01;31m(LKMN[00m
					(LK waren)
					[01;31m(MF[00m
						(ADVX naturlich)
						(PX mit dem flugzeug)
						[01;33m(ADJX[00m (ADJX etwas flexibler)
						[01;31m(PX[00m
							(PX zum abend) [01;33mADJX)[00m
							(ADVX hin)[01;31m)[00m[01;31m)[00m
					[01;33m(SIMPX[00m (NF weil wir den letzten flug sogar um neun uhr noch nehmen konnten)[01;31m)[00m
				(KOORD und)
				(LKM waren dann trotzdem noch vor elf zu hause)[01;31m)[00m[01;31m)[00m)) [01;33mSIMPX)[00m
Step:PP Attachment
{'subtrees': ['ADVX', 'PX', 'KOORD', 'VF', 'LK', 'MF'], 'family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPER', 'VAFIN', 'ADV', 'ADJD', 'NN', 'VVFIN', 'PPER', 'ADV', 'APPRART', 'NN', 'ADV', 'ADV', 'APPR', 'CARD', 'NN', 'CARD', 'KON', 'NN', 'VVFIN', 'ADV', 'ART', 'ADJA', 'NN', 'APPO', 'PPER', 'VAFIN', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'ADJD', 'APPRART', 'NN', 'ADV', 'KOUS', 'PPER', 'ART', 'ADJA', 'NN', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'VVINF', 'VMFIN', 'KON', 'VAFIN', 'ADV', 'PROP', 'ADV', 'APPR', 'CARD', 'APPR', 'NN'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 57), 'span': (11, 25), 'left siblings': ['DM', 'SIMPX', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX es ist vollkommen wahlfrei)
		(SIMPX fluge gibt es immer am abend)
		(ADVX allerdings)
		(PX erst ab achtzehn uhr funfunddreisig)
		(KOORD und)
		(VF zuge)
		(LK gehen)
		(MF sowieso den ganzen tag uber)
		[01;31m(SIMPX[00m
			(VF wir)
			[01;31m(FKOORD[00m
				[01;31m(LKMN[00m
					(LK waren)
					[01;31m(MF[00m
						(ADVX naturlich)
						(PX mit dem flugzeug)
						[01;33m(ADJX[00m (ADJX etwas flexibler)
						[01;31m(PX[00m
							(PX zum abend) [01;33mADJX)[00m
							(ADVX hin)[01;31m)[00m[01;31m)[00m
					[01;33m(SIMPX[00m (NF weil wir den letzten flug sogar um neun uhr noch nehmen konnten)[01;31m)[00m
				(KOORD und)
				(LKM waren dann trotzdem noch vor elf zu hause)[01;31m)[00m[01;31m)[00m)) [01;33mSIMPX)[00m
Step:UNSET remove
{'subtrees': ['VF', 'FKOORD'], 'family': ['DM', 'SIMPX', 'SIMPX', 'ADVX', 'PX', 'KOORD', 'VF', 'LK', 'MF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPER', 'VAFIN', 'ADV', 'ADJD', 'NN', 'VVFIN', 'PPER', 'ADV', 'APPRART', 'NN', 'ADV', 'ADV', 'APPR', 'CARD', 'NN', 'CARD', 'KON', 'NN', 'VVFIN', 'ADV', 'ART', 'ADJA', 'NN', 'APPO', 'PPER', 'VAFIN', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'ADJD', 'APPRART', 'NN', 'ADV', 'KOUS', 'PPER', 'ART', 'ADJA', 'NN', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'VVINF', 'VMFIN', 'KON', 'VAFIN', 'ADV', 'PROP', 'ADV', 'APPR', 'CARD', 'APPR', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 57), 'span': (25, 57), 'left siblings': ['DM', 'SIMPX', 'SIMPX', 'ADVX', 'PX', 'KOORD', 'VF', 'LK', 'MF'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX es ist vollkommen wahlfrei)
		(SIMPX fluge gibt es immer am abend)
		(ADVX allerdings)
		(PX erst ab achtzehn uhr funfunddreisig)
		(KOORD und)
		(VF zuge)
		(LK gehen)
		(MF sowieso den ganzen tag uber)
		(VF wir)
		[01;31m(FKOORD[00m
			[01;31m(LKMN[00m
				(LK waren)
				[01;31m(MF[00m
					(ADVX naturlich)
					(PX mit dem flugzeug)
					[01;33m(ADJX[00m (ADJX etwas flexibler)
					[01;31m(PX[00m
						(PX zum abend) [01;33mADJX)[00m
						(ADVX hin)[01;31m)[00m[01;31m)[00m
				[01;33m(SIMPX[00m (NF weil wir den letzten flug sogar um neun uhr noch nehmen konnten)[01;31m)[00m
			(KOORD und)
			(LKM waren dann trotzdem noch vor elf zu hause)[01;31m)[00m)) [01;33mSIMPX)[00m
Step:UNSET remove
{'subtrees': ['LK', 'MF', 'NF'], 'family': ['LKMN', 'KOORD', 'LKM'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'ADJD', 'APPRART', 'NN', 'ADV', 'KOUS', 'PPER', 'ART', 'ADJA', 'NN', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'VVINF', 'VMFIN', 'KON', 'VAFIN', 'ADV', 'PROP', 'ADV', 'APPR', 'CARD', 'APPR', 'NN'), 'right siblings': ['KOORD', 'LKM'], 'parent': 'FKOORD', 'auto preterminal span': (26, 57), 'span': (26, 48), 'left siblings': [], 'label': 'LKMN', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX es ist vollkommen wahlfrei)
		(SIMPX fluge gibt es immer am abend)
		(ADVX allerdings)
		(PX erst ab achtzehn uhr funfunddreisig)
		(KOORD und)
		(VF zuge)
		(LK gehen)
		(MF sowieso den ganzen tag uber)
		(VF wir)
		[01;31m(FKOORD[00m
			(LK waren)
			[01;31m(MF[00m
				(ADVX naturlich)
				(PX mit dem flugzeug)
				[01;33m(ADJX[00m (ADJX etwas flexibler)
				[01;31m(PX[00m
					(PX zum abend) [01;33mADJX)[00m
					(ADVX hin)[01;31m)[00m[01;31m)[00m
			[01;36m(SIMPX[00m
				(NF weil wir den letzten flug sogar um neun uhr noch nehmen konnten)
				(KOORD und)
				(LKM waren dann trotzdem noch vor elf zu hause)[01;36m)[00m[01;31m)[00m))
Step:UNSET add
{'subtrees': ['NF', 'KOORD', 'LKM'], 'family': ['LK', 'MF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ART', 'ADJA', 'NN', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'VVINF', 'VMFIN', 'KON', 'VAFIN', 'ADV', 'PROP', 'ADV', 'APPR', 'CARD', 'APPR', 'NN'), 'right siblings': [], 'left siblings': [(LK (VXFIN (VAFIN waren))), (MF (ADVX (ADV naturlich)) (PX (APPR mit) (NX (ART dem) (NN flugzeug))) (ADJX (ADVX (ADV etwas)) (ADJD flexibler)) (PX (PX (APPRART zum) (NX (NN abend))) (ADVX (ADV hin))))], 'auto preterminal span': (36, 57), 'span': (36, 57), 'parent': 'FKOORD', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		(SIMPX es ist vollkommen wahlfrei)
		(SIMPX fluge gibt es immer am abend)
		(ADVX allerdings)
		(PX erst ab achtzehn uhr funfunddreisig)
		(KOORD und)
		(VF zuge)
		(LK gehen)
		(MF sowieso den ganzen tag uber)
		(VF wir)
		[01;31m(FKOORD[00m
			(LK waren)
			[01;31m(MF[00m
				(ADVX naturlich)
				(PX mit dem flugzeug)
				[01;33m(ADJX[00m (ADJX etwas flexibler)
				[01;31m(PX[00m
					(PX zum abend) [01;33mADJX)[00m
					(ADVX hin)[01;31m)[00m[01;31m)[00m
			(SIMPX weil wir den letzten flug sogar um neun uhr noch nehmen konnten und waren dann trotzdem noch vor elf zu hause)[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['LK', 'MF', 'SIMPX'], 'family': ['DM', 'SIMPX', 'SIMPX', 'ADVX', 'PX', 'KOORD', 'VF', 'LK', 'MF', 'VF', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPER', 'VAFIN', 'ADV', 'ADJD', 'NN', 'VVFIN', 'PPER', 'ADV', 'APPRART', 'NN', 'ADV', 'ADV', 'APPR', 'CARD', 'NN', 'CARD', 'KON', 'NN', 'VVFIN', 'ADV', 'ART', 'ADJA', 'NN', 'APPO', 'PPER', 'VAFIN', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'ADJD', 'APPRART', 'NN', 'ADV', 'KOUS', 'PPER', 'ART', 'ADJA', 'NN', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'VVINF', 'VMFIN', 'KON', 'VAFIN', 'ADV', 'PROP', 'ADV', 'APPR', 'CARD', 'APPR', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 57), 'span': (26, 57), 'left siblings': ['DM', 'SIMPX', 'SIMPX', 'ADVX', 'PX', 'KOORD', 'VF', 'LK', 'MF', 'VF'], 'label': 'FKOORD', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX es ist vollkommen wahlfrei)
		(SIMPX fluge gibt es immer am abend)
		(ADVX allerdings)
		(PX erst ab achtzehn uhr funfunddreisig)
		(KOORD und)
		(VF zuge)
		(LK gehen)
		(MF sowieso den ganzen tag uber)
		(VF wir)
		(LK waren)
		[01;31m(MF[00m
			(ADVX naturlich)
			(PX mit dem flugzeug)
			[01;33m(ADJX[00m (ADJX etwas flexibler)
			[01;31m(PX[00m
				(PX zum abend) [01;33mADJX)[00m
				(ADVX hin)[01;31m)[00m[01;31m)[00m
		(SIMPX weil wir den letzten flug sogar um neun uhr noch nehmen konnten und waren dann trotzdem noch vor elf zu hause)))
Step:PP Attachment
{'subtrees': ['ADVX', 'PX', 'ADJX', 'PX'], 'family': ['DM', 'SIMPX', 'SIMPX', 'ADVX', 'PX', 'KOORD', 'VF', 'LK', 'MF', 'VF', 'LK', 'MF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPER', 'VAFIN', 'ADV', 'ADJD', 'NN', 'VVFIN', 'PPER', 'ADV', 'APPRART', 'NN', 'ADV', 'ADV', 'APPR', 'CARD', 'NN', 'CARD', 'KON', 'NN', 'VVFIN', 'ADV', 'ART', 'ADJA', 'NN', 'APPO', 'PPER', 'VAFIN', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'ADJD', 'APPRART', 'NN', 'ADV', 'KOUS', 'PPER', 'ART', 'ADJA', 'NN', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'VVINF', 'VMFIN', 'KON', 'VAFIN', 'ADV', 'PROP', 'ADV', 'APPR', 'CARD', 'APPR', 'NN'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 57), 'span': (27, 36), 'left siblings': ['DM', 'SIMPX', 'SIMPX', 'ADVX', 'PX', 'KOORD', 'VF', 'LK', 'MF', 'VF', 'LK'], 'label': 'MF', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX es ist vollkommen wahlfrei)
		(SIMPX fluge gibt es immer am abend)
		(ADVX allerdings)
		(PX erst ab achtzehn uhr funfunddreisig)
		(KOORD und)
		(VF zuge)
		(LK gehen)
		(MF sowieso den ganzen tag uber)
		(VF wir)
		(LK waren)
		(ADVX naturlich)
		(PX mit dem flugzeug)
		[01;33m(ADJX[00m (ADJX etwas flexibler)
		[01;31m(PX[00m
			(PX zum abend) [01;33mADJX)[00m
			(ADVX hin)[01;31m)[00m
		(SIMPX weil wir den letzten flug sogar um neun uhr noch nehmen konnten und waren dann trotzdem noch vor elf zu hause)))
Step:Modifier Attachment
{'subtrees': ['PX', 'ADVX'], 'family': ['DM', 'SIMPX', 'SIMPX', 'ADVX', 'PX', 'KOORD', 'VF', 'LK', 'MF', 'VF', 'LK', 'ADVX', 'PX', 'ADJX', 'PX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPER', 'VAFIN', 'ADV', 'ADJD', 'NN', 'VVFIN', 'PPER', 'ADV', 'APPRART', 'NN', 'ADV', 'ADV', 'APPR', 'CARD', 'NN', 'CARD', 'KON', 'NN', 'VVFIN', 'ADV', 'ART', 'ADJA', 'NN', 'APPO', 'PPER', 'VAFIN', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'ADJD', 'APPRART', 'NN', 'ADV', 'KOUS', 'PPER', 'ART', 'ADJA', 'NN', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'VVINF', 'VMFIN', 'KON', 'VAFIN', 'ADV', 'PROP', 'ADV', 'APPR', 'CARD', 'APPR', 'NN'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 57), 'span': (33, 36), 'left siblings': ['DM', 'SIMPX', 'SIMPX', 'ADVX', 'PX', 'KOORD', 'VF', 'LK', 'MF', 'VF', 'LK', 'ADVX', 'PX', 'ADJX'], 'label': 'PX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX es ist vollkommen wahlfrei)
		(SIMPX fluge gibt es immer am abend)
		(ADVX allerdings)
		(PX erst ab achtzehn uhr funfunddreisig)
		(KOORD und)
		(VF zuge)
		(LK gehen)
		(MF sowieso den ganzen tag uber)
		(VF wir)
		(LK waren)
		(ADVX naturlich)
		(PX mit dem flugzeug)
		[01;36m(ADJX[00m
			(ADJX etwas flexibler)
			(PX zum abend)[01;36m)[00m
		(ADVX hin)
		(SIMPX weil wir den letzten flug sogar um neun uhr noch nehmen konnten und waren dann trotzdem noch vor elf zu hause)))
Step:PP Attachment
{'subtrees': ['ADJX', 'PX'], 'family': ['DM', 'SIMPX', 'SIMPX', 'ADVX', 'PX', 'KOORD', 'VF', 'LK', 'MF', 'VF', 'LK', 'ADVX', 'PX', 'ADJX', 'ADVX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADJD', 'APPRART', 'NN'), 'right siblings': [(ADVX (ADV hin)), (SIMPX (NF (SIMPX (C (KOUS weil)) (MF (NX (PPER wir)) (NX (ART den) (ADJX (ADJA letzten)) (NN flug)) (ADVX (ADV sogar)) (PX (APPR um) (NX (ADJX (CARD neun)) (NN uhr))) (ADVX (ADV noch))) (VC (VXINF (VVINF nehmen)) (VXFIN (VMFIN konnten))))) (KOORD (KON und)) (LKM (LK (VXFIN (VAFIN waren))) (MF (ADVX (ADV dann)) (PX (PX (PROP trotzdem)) (ADVX (ADV noch)) (PX (APPR vor) (NX (CARD elf)))) (PX (APPR zu) (NX (NN hause))))))], 'left siblings': [(DM (ADVX (ADV also))), (SIMPX (VF (NX (PPER es))) (LK (VXFIN (VAFIN ist))) (MF (ADJX (ADVX (ADV vollkommen)) (ADJD wahlfrei)))), (SIMPX (VF (NX (NN fluge))) (LK (VXFIN (VVFIN gibt))) (MF (NX (PPER es)) (ADVX (ADV immer)) (PX (APPRART am) (NX (NN abend))))), (ADVX (ADV allerdings)), (PX (ADVX (ADV erst)) (APPR ab) (NX (NX (ADJX (CARD achtzehn)) (NN uhr)) (ADJX (CARD funfunddreisig)))), (KOORD (KON und)), (VF (NX (NN zuge))), (LK (VXFIN (VVFIN gehen))), (MF (ADVX (ADV sowieso)) (PX (NX (ART den) (ADJX (ADJA ganzen)) (NN tag)) (APPO uber))), (VF (NX (PPER wir))), (LK (VXFIN (VAFIN waren))), (ADVX (ADV naturlich)), (PX (APPR mit) (NX (ART dem) (NN flugzeug)))], 'auto preterminal span': (31, 35), 'span': (31, 35), 'parent': 'TURN', 'label': 'ADJX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP also es ist vollkommen wahlfrei fluge gibt es immer am abend allerdings erst ab achtzehn uhr funfunddreisig und zuge gehen sowieso den ganzen tag uber wir waren naturlich mit dem flugzeug etwas flexibler zum abend hin weil wir den letzten flug sogar um neun uhr noch nehmen konnten und waren dann trotzdem noch vor elf zu hause)

Sentence 472:
0 Initial errors
0 on fringe, 0 iterations

Sentence 473:
4 Initial errors
0 on fringe, 1 iterations
4 Error:UNSET move
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX wir kucken einfach was dann gespielt wird)
		(SIMPX
			[01;31m(VF[00m
				[01;31m(SIMPX[00m
					(KOORD und)
					[01;36m(VF[00m
						[01;36m(SIMPX[00m
							(C wenn)
							(MF nix gescheites)
							(VC kommt)[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
			(LK konnen)
			(MF wir immer noch einfach nur eine kneipentour)
			(VC machen))))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['KOORD', 'VF', 'LK', 'MF', 'VC'], 'mover info': [('KOORD', (8, 9))], 'old_family': ['KOORD', 'C', 'MF', 'VC'], 'start left siblings': [], 'auto preterminals': ('KON', 'KOUS', 'PIS', 'NN', 'VVFIN', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'ADV', 'ART', 'NN', 'VVINF'), 'start right siblings': ['C', 'MF', 'VC'], 'end left siblings': [], 'auto preterminal span': (8, 22), 'movers': ['KOORD'], 'old_parent': 'SIMPX', 'POS confusion': ('KON', 'KON'), 'end right siblings': ['VF', 'LK', 'MF', 'VC'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP ja wir kucken einfach was dann gespielt wird und wenn nix gescheites kommt konnen wir immer noch einfach nur eine kneipentour machen)

Sentence 474:
4 Initial errors
0 on fringe, 4 iterations
1 Error:Modifier Attachment
1 Error:Unary
1 Error:PP Attachment
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX ging ja ganz schnell)
		[01;31m(DM[00m
			(PTKANT danke)
			(ADVX auch)[01;31m)[00m
		[01;31m(DM[00m
			[01;31m(PX[00m
				(KON und)
				[01;31m(PX[00m
					(APPR bis)
					(ADVX dann)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(DM tschus)))
Step:Modifier Attachment
{'subtrees': ['PTKANT', 'ADVX'], 'family': ['SIMPX', 'DM', 'DM', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'ADV', 'ADV', 'ADJD', 'PTKANT', 'ADV', 'KON', 'APPR', 'ADV', 'ITJ'), 'right siblings': ['DM', 'DM'], 'parent': 'TURN', 'auto preterminal span': (0, 10), 'span': (4, 6), 'left siblings': ['SIMPX'], 'label': 'DM', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX ging ja ganz schnell)
		(PTKANT danke)
		(ADVX auch)
		[01;31m(DM[00m
			[01;31m(PX[00m
				(KON und)
				[01;31m(PX[00m
					(APPR bis)
					(ADVX dann)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(DM tschus)))
Step:Unary
{'subtrees': ['PX'], 'family': ['SIMPX', 'PTKANT', 'ADVX', 'DM', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'ADV', 'ADV', 'ADJD', 'PTKANT', 'ADV', 'KON', 'APPR', 'ADV', 'ITJ'), 'right siblings': ['DM'], 'parent': 'TURN', 'auto preterminal span': (0, 10), 'span': (6, 9), 'left siblings': ['SIMPX', 'PTKANT', 'ADVX'], 'label': 'DM', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX ging ja ganz schnell)
		(PTKANT danke)
		(ADVX auch)
		[01;31m(PX[00m
			(KON und)
			[01;31m(PX[00m
				(APPR bis)
				(ADVX dann)[01;31m)[00m[01;31m)[00m
		(DM tschus)))
Step:PP Attachment
{'subtrees': ['KON', 'PX'], 'family': ['SIMPX', 'PTKANT', 'ADVX', 'PX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'ADV', 'ADV', 'ADJD', 'PTKANT', 'ADV', 'KON', 'APPR', 'ADV', 'ITJ'), 'right siblings': ['DM'], 'parent': 'TURN', 'auto preterminal span': (0, 10), 'span': (6, 9), 'left siblings': ['SIMPX', 'PTKANT', 'ADVX'], 'label': 'PX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX ging ja ganz schnell)
		(PTKANT danke)
		(ADVX auch)
		(KON und)
		[01;31m(PX[00m
			(APPR bis)
			(ADVX dann)[01;31m)[00m
		(DM tschus)))
Step:Modifier Attachment
{'subtrees': ['APPR', 'ADVX'], 'family': ['SIMPX', 'PTKANT', 'ADVX', 'KON', 'PX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'ADV', 'ADV', 'ADJD', 'PTKANT', 'ADV', 'KON', 'APPR', 'ADV', 'ITJ'), 'right siblings': ['DM'], 'parent': 'TURN', 'auto preterminal span': (0, 10), 'span': (7, 9), 'left siblings': ['SIMPX', 'PTKANT', 'ADVX', 'KON'], 'label': 'PX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP ging ja ganz schnell danke auch und bis dann tschus)

Sentence 475:
11 Initial errors
0 on fringe, 4 iterations
7 Error:NP Attachment
2 Error:Modifier Attachment
1 Error:Clause Attachment
1 Error:NP Internal Structure
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM hallo)
		(DM peter)
		(ADJX gut das wir uns treffen)
		[01;36m(SIMPX[00m
			[01;36m(SIMPX[00m
				[01;31m(SIMPX[00m
					(VF es)
					(LK geht)
					[01;31m(MF[00m [01;33m(PX (MF[00m
						[01;31m(PX[00m
							(APPR um)
							[01;33m(NX[00m (NX termin)[01;31m)[00m[01;31m)[00m[01;31m)[00m
				(NX eine reise) [01;33mNX) MF) PX)[00m[01;36m)[00m
			[01;36m(SIMPX[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(NX wir)
						(NX beide)[01;31m)[00m
					(ADVX zusammen)[01;31m)[00m
				(PX von munchen nach hannover)[01;36m)[00m[01;36m)[00m
		(NX anderthalb tage in den nachsten drei monaten)
		(SIMPX wann hast du zeit)))
Step:NP Attachment
{'new_parent': 'PX', 'new_family': ['APPR', 'NX', 'NX'], 'mover info': [('NX', (11, 13))], 'old_family': ['DM', 'DM', 'ADJX', 'SIMPX', 'NX', 'NX', 'PX', 'NX', 'SIMPX'], 'start left siblings': ['DM', 'DM', 'ADJX', 'SIMPX'], 'auto preterminals': ('ITJ', 'NE', 'ADJD', 'KOUS', 'PPER', 'PRF', 'VVFIN', 'PPER', 'VVFIN', 'APPR', 'NN', 'ART', 'NN', 'PPER', 'PIS', 'ADV', 'APPR', 'NE', 'APPR', 'NE', 'CARD', 'NN', 'APPR', 'ART', 'ADJA', 'CARD', 'NN', 'PWAV', 'VAFIN', 'PPER', 'NN'), 'start right siblings': ['NX', 'PX', 'NX', 'SIMPX'], 'end left siblings': ['APPR', 'NX'], 'auto preterminal span': (0, 31), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'TURN', 'added and moved': True, 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'SIMPX'}
(TOP
	(TURN
		(DM hallo)
		(DM peter)
		(ADJX gut das wir uns treffen)
		[01;36m(SIMPX[00m
			(SIMPX es geht um termin eine reise)
			[01;36m(SIMPX[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(NX wir)
						(NX beide)[01;31m)[00m
					(ADVX zusammen)[01;31m)[00m
				(PX von munchen nach hannover)[01;36m)[00m[01;36m)[00m
		(NX anderthalb tage in den nachsten drei monaten)
		(SIMPX wann hast du zeit)))
Step:Modifier Attachment
{'new_parent': 'TURN', 'new_family': ['DM', 'DM', 'ADJX', 'SIMPX', 'NX', 'ADVX', 'PX', 'NX', 'SIMPX'], 'mover info': [('ADVX', (15, 16))], 'old_family': ['NX', 'ADVX'], 'start left siblings': ['NX'], 'auto preterminals': ('ITJ', 'NE', 'ADJD', 'KOUS', 'PPER', 'PRF', 'VVFIN', 'PPER', 'VVFIN', 'APPR', 'NN', 'ART', 'NN', 'PPER', 'PIS', 'ADV', 'APPR', 'NE', 'APPR', 'NE', 'CARD', 'NN', 'APPR', 'ART', 'ADJA', 'CARD', 'NN', 'PWAV', 'VAFIN', 'PPER', 'NN'), 'start right siblings': [], 'end left siblings': ['DM', 'DM', 'ADJX', 'SIMPX', 'NX'], 'auto preterminal span': (0, 31), 'adding node already present': False, 'movers': ['ADVX'], 'old_parent': 'NX', 'POS confusion': ('ADV', 'ADV'), 'added and moved': True, 'end right siblings': ['PX', 'NX', 'SIMPX'], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'SIMPX'}
(TOP
	(TURN
		(DM hallo)
		(DM peter)
		(ADJX gut das wir uns treffen)
		[01;36m(SIMPX[00m
			(SIMPX es geht um termin eine reise)
			(SIMPX
				[01;31m(NX[00m
					(NX wir)
					(NX beide)[01;31m)[00m
				(ADVX zusammen)
				(PX von munchen nach hannover))[01;36m)[00m
		(NX anderthalb tage in den nachsten drei monaten)
		(SIMPX wann hast du zeit)))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['DM', 'DM', 'ADJX', 'SIMPX', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'APPR', 'NN', 'ART', 'NN', 'PPER', 'PIS', 'ADV', 'APPR', 'NE', 'APPR', 'NE'), 'right siblings': [(NX (NX (ADJX (CARD anderthalb)) (NN tage)) (PX (APPR in) (NX (ART den) (ADJX (ADJA nachsten)) (ADJX (CARD drei)) (NN monaten)))), (SIMPX (VF (PX (PWAV wann))) (LK (VXFIN (VAFIN hast))) (MF (NX (PPER du)) (NX (NN zeit))))], 'left siblings': [(DM (ITJ hallo)), (DM (NX (NE peter))), (ADJX (ADJX (ADJD gut)) (SIMPX (C (KOUS das)) (MF (NX (PPER wir)) (NX (PRF uns))) (VC (VXFIN (VVFIN treffen)))))], 'auto preterminal span': (7, 20), 'span': (7, 20), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM hallo)
		(DM peter)
		(ADJX gut das wir uns treffen)
		(SIMPX
			(SIMPX es geht um termin eine reise)
			(SIMPX
				[01;31m(NX[00m
					(NX wir)
					(NX beide)[01;31m)[00m
				(ADVX zusammen)
				(PX von munchen nach hannover)))
		(NX anderthalb tage in den nachsten drei monaten)
		(SIMPX wann hast du zeit)))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['NX', 'ADVX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'PIS', 'ADV', 'APPR', 'NE', 'APPR', 'NE'), 'right siblings': ['ADVX', 'PX'], 'parent': 'SIMPX', 'auto preterminal span': (13, 20), 'span': (13, 15), 'left siblings': [], 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'remove'}
(TOP hallo peter gut das wir uns treffen es geht um termin eine reise wir beide zusammen von munchen nach hannover anderthalb tage in den nachsten drei monaten wann hast du zeit)

Sentence 476:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM moment)
		[01;36m(DM[00m [01;31m(VXFIN[00m
			(VVIMP warte)[01;31m)[00m[01;36m)[00m
		(SIMPX das war der neunzehnte juli)))
Step:Single Word Phrase
{'family': ['DM', 'DM', 'SIMPX'], 'auto preterminal span': (1, 2), 'span': (1, 2), 'subtrees': ['VVIMP'], 'parent': 'TURN', 'over_word': True, 'auto preterminals': ('VVIMP',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VXFIN', 'DM')}
(TOP moment warte das war der neunzehnte juli)

Sentence 477:
1 Initial errors
0 on fringe, 1 iterations
1 Error:UNSET add
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(PX bis funfzehnter august)
		(DM aha)
		(SIMPX
			(VF mein urlaub)
			[01;36m(FKOORD[00m
				(VXFIN ist)
				(FKOORD fangt am neunten august an und geht bis zum einunddreisigsten august)[01;36m)[00m)))
Step:UNSET add
{'subtrees': ['VXFIN', 'FKOORD'], 'family': ['VF', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'VVFIN', 'APPRART', 'ADJA', 'NN', 'PTKVZ', 'KON', 'VVFIN', 'APPR', 'APPRART', 'ADJA', 'NN'), 'right siblings': [], 'left siblings': [(VF (NX (PPOSAT mein) (NN urlaub)))], 'auto preterminal span': (6, 18), 'span': (6, 18), 'parent': 'SIMPX', 'label': 'FKOORD', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP bis funfzehnter august aha mein urlaub ist fangt am neunten august an und geht bis zum einunddreisigsten august)

Sentence 478:
3 Initial errors
0 on fringe, 3 iterations
1 Error:Single Word Phrase
1 Error:Unary
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX am sechsten juli habe ich eine dienstbesprechung)
		(PX am siebten)
		(DM ah)
		(SIMPX
			(VF da)
			(LK hatte)
			(MF
				(NX ich)
				(ADVX
					(ADVX nur)
					[01;36m(ADVX[00m
						(ADV abends)[01;36m)[00m)
				(NX kino)))
		(SIMPX
			(KOORD aber)
			(VF am neunter zehnter juli)
			[01;31m(LK[00m
				[01;31m(VXFIN[00m
					(VAFIN hattest)[01;31m)[00m[01;31m)[00m
			(MF du)
			(VC gesagt))))
Step:Single Word Phrase
{'subtrees': ['ADV'], 'family': ['ADVX', 'ADVX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADV',), 'right siblings': [], 'left siblings': [(ADVX (ADV nur))], 'auto preterminal span': (15, 16), 'span': (15, 16), 'parent': 'ADVX', 'label': 'ADVX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX am sechsten juli habe ich eine dienstbesprechung)
		(PX am siebten)
		(DM ah)
		(SIMPX da hatte ich nur abends kino)
		(SIMPX
			(KOORD aber)
			(VF am neunter zehnter juli)
			[01;31m(LK[00m
				[01;31m(VXFIN[00m
					(VAFIN hattest)[01;31m)[00m[01;31m)[00m
			(MF du)
			(VC gesagt))))
Step:Unary
{'subtrees': ['VXFIN'], 'family': ['KOORD', 'VF', 'LK', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'APPRART', 'ADJA', 'ADJA', 'NN', 'VAFIN', 'PPER', 'VVPP'), 'right siblings': ['MF', 'VC'], 'parent': 'SIMPX', 'auto preterminal span': (17, 25), 'span': (22, 23), 'left siblings': ['KOORD', 'VF'], 'label': 'LK', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX am sechsten juli habe ich eine dienstbesprechung)
		(PX am siebten)
		(DM ah)
		(SIMPX da hatte ich nur abends kino)
		(SIMPX
			(KOORD aber)
			(VF am neunter zehnter juli)
			[01;31m(VXFIN[00m
				(VAFIN hattest)[01;31m)[00m
			(MF du)
			(VC gesagt))))
Step:Single Word Phrase
{'subtrees': ['VAFIN'], 'family': ['KOORD', 'VF', 'VXFIN', 'MF', 'VC'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON', 'APPRART', 'ADJA', 'ADJA', 'NN', 'VAFIN', 'PPER', 'VVPP'), 'right siblings': ['MF', 'VC'], 'parent': 'SIMPX', 'auto preterminal span': (17, 25), 'span': (22, 23), 'left siblings': ['KOORD', 'VF'], 'label': 'VXFIN', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP ja am sechsten juli habe ich eine dienstbesprechung am siebten ah da hatte ich nur abends kino aber am neunter zehnter juli hattest du gesagt)

Sentence 479:
0 Initial errors
0 on fringe, 0 iterations

Sentence 480:
8 Initial errors
0 on fringe, 3 iterations
6 Error:Clause Attachment
1 Error:UNSET add
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM okay)
		(SIMPX dann fahren wir zusammen dahin)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(DM also)
				[01;33m(SIMPX[00m (VF ich)
				(LK meine)
				[01;31m(NF[00m [01;33m(SIMPX (NF[00m
					[01;31m(SIMPX[00m
						(VF wir)
						(LK haben)
						(MF jetzt die)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			(SIMPX
				(VF wir)
				(LK brauchen)
				[01;31m(MF[00m
					(NX anderthalb tage)
					(PX fur das treffen)[01;31m)[00m) [01;33mNF) SIMPX) SIMPX)[00m[01;36m)[00m
		(SIMPX wir haben zwei tage zeit)
		(SIMPX also konnten wir mit dem zug hinfahren zum beispiel)))
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'SIMPX'], 'mover info': [('SIMPX', (14, 21))], 'old_family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'start left siblings': ['DM', 'SIMPX', 'SIMPX'], 'auto preterminals': ('ITJ', 'ADV', 'VVFIN', 'PPER', 'ADV', 'PROP', 'KON', 'ADV', 'PPER', 'VVFIN', 'PPER', 'VAFIN', 'ADV', 'PDS', 'PPER', 'VVFIN', 'CARD', 'NN', 'APPR', 'ART', 'NN', 'PPER', 'VAFIN', 'CARD', 'NN', 'NN', 'ADV', 'VMFIN', 'PPER', 'APPR', 'ART', 'NN', 'VVINF', 'APPRART', 'NN'), 'start right siblings': ['SIMPX', 'SIMPX'], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (0, 35), 'movers': ['SIMPX'], 'old_parent': 'TURN', 'end right siblings': [], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM okay)
		(SIMPX dann fahren wir zusammen dahin)
		(SIMPX
			(KOORD und)
			(DM also)
			[01;36m(SIMPX[00m
				(VF ich)
				(LK meine)
				(NF
					(SIMPX
						(VF wir)
						(LK haben)
						(MF jetzt die)
						(SIMPX
							(VF wir)
							(LK brauchen)
							[01;31m(MF[00m
								(NX anderthalb tage)
								(PX fur das treffen)[01;31m)[00m)))[01;36m)[00m)
		(SIMPX wir haben zwei tage zeit)
		(SIMPX also konnten wir mit dem zug hinfahren zum beispiel)))
Step:UNSET add
{'subtrees': ['VF', 'LK', 'NF'], 'family': ['KOORD', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'PPER', 'VAFIN', 'ADV', 'PDS', 'PPER', 'VVFIN', 'CARD', 'NN', 'APPR', 'ART', 'NN'), 'right siblings': [], 'left siblings': [(KOORD (KON und)), (DM (ADVX (ADV also)))], 'auto preterminal span': (8, 21), 'span': (8, 21), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM okay)
		(SIMPX dann fahren wir zusammen dahin)
		(SIMPX
			(KOORD und)
			(DM also)
			(SIMPX
				(VF ich)
				(LK meine)
				(NF
					(SIMPX
						(VF wir)
						(LK haben)
						(MF jetzt die)
						(SIMPX
							(VF wir)
							(LK brauchen)
							[01;31m(MF[00m
								(NX anderthalb tage)
								(PX fur das treffen)[01;31m)[00m)))))
		(SIMPX wir haben zwei tage zeit)
		(SIMPX also konnten wir mit dem zug hinfahren zum beispiel)))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'CARD', 'NN', 'APPR', 'ART', 'NN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (14, 21), 'span': (16, 21), 'left siblings': ['VF', 'LK'], 'label': 'MF', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP okay dann fahren wir zusammen dahin und also ich meine wir haben jetzt die wir brauchen anderthalb tage fur das treffen wir haben zwei tage zeit also konnten wir mit dem zug hinfahren zum beispiel)

Sentence 481:
15 Initial errors
0 on fringe, 9 iterations
3 Error:UNSET move
3 Error:UNSET move
2 Error:Different label
2 Error:UNSET move
1 Error:UNSET remove
1 Error:Unary
1 Error:Unary
1 Error:PP Attachment
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM genau)
		(DM also)
		(SIMPX ich kucke kurz mal nach)
		[01;31m(SIMPX[00m [01;33m(PX[00m
			[01;31m(LV[00m
				[01;31m(PX[00m
					(APPR bei)
					[01;31m(NX[00m
						(NX den zugverbindungen) [01;33mPX)[00m
						(R die ich hier habe)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			[01;36m(SIMPX[00m
				(VF das)
				(LK sind)
				[01;36m(NX[00m
					[01;36m(MF[00m
						[01;31m(MF[00m
							(NX
								(NX munchen)
								(NX hannover))[01;31m)[00m
						[01;31m(NF[00m
							(PX
								(APPR mit)
								(NX dem ice))[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;36m)[00m[01;31m)[00m
		(SIMPX
			(VF das)
			(LK sind)
			[01;31m(MF[00m
				[01;31m(NX[00m
					(NX stundliche verbindungen)
					(PX
						(APPR ab)
						[01;36m(ADVX[00m [01;31m(PX[00m
							(ADVX morgens)
							(NX vier uhr dreiundvierzig)[01;31m)[00m[01;36m)[00m)[01;31m)[00m[01;31m)[00m)
		(DM also)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK mein)
			(NF das ist mir zu fruh)[01;31m)[00m))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['NX', 'NF'], 'mover info': [('NF', (18, 21))], 'old_family': ['LV', 'VF', 'LK', 'MF', 'NF'], 'start left siblings': ['LV', 'VF', 'LK', 'MF'], 'auto preterminals': ('APPR', 'ART', 'NN', 'PRELS', 'PPER', 'ADV', 'VAFIN', 'PDS', 'VAFIN', 'NE', 'NE', 'APPR', 'ART', 'NE'), 'start right siblings': [], 'end left siblings': ['NX'], 'auto preterminal span': (7, 21), 'adding node already present': False, 'movers': ['NF'], 'old_parent': 'SIMPX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'ADVX'}
(TOP
	(TURN
		(DM genau)
		(DM also)
		(SIMPX ich kucke kurz mal nach)
		[01;31m(SIMPX[00m [01;33m(PX[00m
			[01;31m(LV[00m
				[01;31m(PX[00m
					(APPR bei)
					[01;31m(NX[00m
						(NX den zugverbindungen) [01;33mPX)[00m
						(R die ich hier habe)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			[01;36m(SIMPX[00m
				(VF das)
				(LK sind)
				(NX
					(MF
						(NX munchen hannover)
						[01;31m(NF[00m
							(PX
								(APPR mit)
								(NX dem ice))[01;31m)[00m))[01;36m)[00m[01;31m)[00m
		(SIMPX
			(VF das)
			(LK sind)
			[01;31m(MF[00m
				[01;31m(NX[00m
					(NX stundliche verbindungen)
					(PX
						(APPR ab)
						[01;36m(ADVX[00m [01;31m(PX[00m
							(ADVX morgens)
							(NX vier uhr dreiundvierzig)[01;31m)[00m[01;36m)[00m)[01;31m)[00m[01;31m)[00m)
		(DM also)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK mein)
			(NF das ist mir zu fruh)[01;31m)[00m))
Step:UNSET move
{'new_parent': 'LV', 'new_family': ['PX', 'R'], 'mover info': [('R', (10, 14))], 'old_family': ['NX', 'R'], 'start left siblings': ['NX'], 'auto preterminals': ('APPR', 'ART', 'NN', 'PRELS', 'PPER', 'ADV', 'VAFIN'), 'start right siblings': [], 'end left siblings': ['PX'], 'auto preterminal span': (7, 14), 'movers': ['R'], 'old_parent': 'NX', 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM genau)
		(DM also)
		(SIMPX ich kucke kurz mal nach)
		[01;31m(SIMPX[00m
			[01;31m(LV[00m
				(PX bei den zugverbindungen)
				(R die ich hier habe)[01;31m)[00m
			[01;36m(SIMPX[00m
				(VF das)
				(LK sind)
				(NX
					(MF
						(NX munchen hannover)
						[01;31m(NF[00m
							(PX
								(APPR mit)
								(NX dem ice))[01;31m)[00m))[01;36m)[00m[01;31m)[00m
		(SIMPX
			(VF das)
			(LK sind)
			[01;31m(MF[00m
				[01;31m(NX[00m
					(NX stundliche verbindungen)
					(PX
						(APPR ab)
						[01;36m(ADVX[00m [01;31m(PX[00m
							(ADVX morgens)
							(NX vier uhr dreiundvierzig)[01;31m)[00m[01;36m)[00m)[01;31m)[00m[01;31m)[00m)
		(DM also)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK mein)
			(NF das ist mir zu fruh)[01;31m)[00m))
Step:Different label
{'family': ['APPR', 'ADVX'], 'auto preterminal span': (26, 30), 'span': (26, 30), 'subtrees': ['ADVX', 'NX'], 'parent': 'PX', 'over_word': False, 'auto preterminals': ('ADV', 'CARD', 'NN', 'CARD'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('PX', 'ADVX')}
(TOP
	(TURN
		(DM genau)
		(DM also)
		(SIMPX ich kucke kurz mal nach)
		[01;31m(SIMPX[00m
			[01;31m(LV[00m
				(PX bei den zugverbindungen)
				(R die ich hier habe)[01;31m)[00m
			[01;36m(SIMPX[00m
				(VF das)
				(LK sind)
				(NX
					(MF
						(NX munchen hannover)
						[01;31m(NF[00m
							(PX
								(APPR mit)
								(NX dem ice))[01;31m)[00m))[01;36m)[00m[01;31m)[00m
		(SIMPX
			(VF das)
			(LK sind)
			[01;31m(MF[00m
				[01;31m(NX[00m
					(NX stundliche verbindungen)
					(PX ab morgens vier uhr dreiundvierzig)[01;31m)[00m[01;31m)[00m)
		(DM also)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK mein)
			(NF das ist mir zu fruh)[01;31m)[00m))
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['DM', 'DM', 'SIMPX', 'LV', 'SIMPX', 'SIMPX', 'DM', 'SIMPX'], 'mover info': [('LV', (7, 14))], 'old_family': ['LV', 'VF', 'LK', 'NX'], 'start left siblings': [], 'auto preterminals': ('ITJ', 'ADV', 'PPER', 'VVFIN', 'ADV', 'ADV', 'PTKVZ', 'APPR', 'ART', 'NN', 'PRELS', 'PPER', 'ADV', 'VAFIN', 'PDS', 'VAFIN', 'NE', 'NE', 'APPR', 'ART', 'NE', 'PDS', 'VAFIN', 'ADJA', 'NN', 'APPR', 'ADV', 'CARD', 'NN', 'CARD', 'ADV', 'PPER', 'VVFIN', 'PDS', 'VAFIN', 'PPER', 'PTKA', 'ADJD'), 'start right siblings': ['VF', 'LK', 'NX'], 'end left siblings': ['DM', 'DM', 'SIMPX'], 'auto preterminal span': (0, 38), 'movers': ['LV'], 'old_parent': 'SIMPX', 'end right siblings': ['SIMPX', 'SIMPX', 'DM', 'SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM genau)
		(DM also)
		(SIMPX ich kucke kurz mal nach)
		[01;31m(LV[00m
			(PX bei den zugverbindungen)
			(R die ich hier habe)[01;31m)[00m
		(SIMPX
			(VF das)
			(LK sind)
			(NX
				(MF
					(NX munchen hannover)
					[01;31m(NF[00m
						(PX
							(APPR mit)
							(NX dem ice))[01;31m)[00m)))
		(SIMPX
			(VF das)
			(LK sind)
			[01;31m(MF[00m
				[01;31m(NX[00m
					(NX stundliche verbindungen)
					(PX ab morgens vier uhr dreiundvierzig)[01;31m)[00m[01;31m)[00m)
		(DM also)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK mein)
			(NF das ist mir zu fruh)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['PX', 'R'], 'family': ['DM', 'DM', 'SIMPX', 'LV', 'SIMPX', 'SIMPX', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'PPER', 'VVFIN', 'ADV', 'ADV', 'PTKVZ', 'APPR', 'ART', 'NN', 'PRELS', 'PPER', 'ADV', 'VAFIN', 'PDS', 'VAFIN', 'NE', 'NE', 'APPR', 'ART', 'NE', 'PDS', 'VAFIN', 'ADJA', 'NN', 'APPR', 'ADV', 'CARD', 'NN', 'CARD', 'ADV', 'PPER', 'VVFIN', 'PDS', 'VAFIN', 'PPER', 'PTKA', 'ADJD'), 'right siblings': ['SIMPX', 'SIMPX', 'DM', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 38), 'span': (7, 14), 'left siblings': ['DM', 'DM', 'SIMPX'], 'label': 'LV', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM genau)
		(DM also)
		(SIMPX ich kucke kurz mal nach)
		(PX bei den zugverbindungen)
		(R die ich hier habe)
		(SIMPX
			(VF das)
			(LK sind)
			(NX
				(MF
					(NX munchen hannover)
					[01;31m(NF[00m
						(PX
							(APPR mit)
							(NX dem ice))[01;31m)[00m)))
		(SIMPX
			(VF das)
			(LK sind)
			[01;31m(MF[00m
				[01;31m(NX[00m
					(NX stundliche verbindungen)
					(PX ab morgens vier uhr dreiundvierzig)[01;31m)[00m[01;31m)[00m)
		(DM also)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK mein)
			(NF das ist mir zu fruh)[01;31m)[00m))
Step:Unary
{'subtrees': ['PX'], 'family': ['NX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('NE', 'NE', 'APPR', 'ART', 'NE'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (16, 21), 'span': (18, 21), 'left siblings': ['NX'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM genau)
		(DM also)
		(SIMPX ich kucke kurz mal nach)
		(PX bei den zugverbindungen)
		(R die ich hier habe)
		(SIMPX das sind munchen hannover mit dem ice)
		(SIMPX
			(VF das)
			(LK sind)
			[01;31m(MF[00m
				[01;31m(NX[00m
					(NX stundliche verbindungen)
					(PX ab morgens vier uhr dreiundvierzig)[01;31m)[00m[01;31m)[00m)
		(DM also)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK mein)
			(NF das ist mir zu fruh)[01;31m)[00m))
Step:Unary
{'subtrees': ['NX', 'PX'], 'family': ['NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJA', 'NN', 'APPR', 'ADV', 'CARD', 'NN', 'CARD'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (23, 30), 'span': (23, 30), 'left siblings': [], 'label': 'NX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM genau)
		(DM also)
		(SIMPX ich kucke kurz mal nach)
		(PX bei den zugverbindungen)
		(R die ich hier habe)
		(SIMPX das sind munchen hannover mit dem ice)
		(SIMPX
			(VF das)
			(LK sind)
			[01;31m(MF[00m
				(NX stundliche verbindungen)
				(PX ab morgens vier uhr dreiundvierzig)[01;31m)[00m)
		(DM also)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK mein)
			(NF das ist mir zu fruh)[01;31m)[00m))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VAFIN', 'ADJA', 'NN', 'APPR', 'ADV', 'CARD', 'NN', 'CARD'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (21, 30), 'span': (23, 30), 'left siblings': ['VF', 'LK'], 'label': 'MF', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM genau)
		(DM also)
		(SIMPX ich kucke kurz mal nach)
		(PX bei den zugverbindungen)
		(R die ich hier habe)
		(SIMPX das sind munchen hannover mit dem ice)
		(SIMPX das sind stundliche verbindungen ab morgens vier uhr dreiundvierzig)
		(DM also)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK mein)
			(NF das ist mir zu fruh)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'NF'], 'family': ['DM', 'DM', 'SIMPX', 'PX', 'R', 'SIMPX', 'SIMPX', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'PPER', 'VVFIN', 'ADV', 'ADV', 'PTKVZ', 'APPR', 'ART', 'NN', 'PRELS', 'PPER', 'ADV', 'VAFIN', 'PDS', 'VAFIN', 'NE', 'NE', 'APPR', 'ART', 'NE', 'PDS', 'VAFIN', 'ADJA', 'NN', 'APPR', 'ADV', 'CARD', 'NN', 'CARD', 'ADV', 'PPER', 'VVFIN', 'PDS', 'VAFIN', 'PPER', 'PTKA', 'ADJD'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 38), 'span': (31, 38), 'left siblings': ['DM', 'DM', 'SIMPX', 'PX', 'R', 'SIMPX', 'SIMPX', 'DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP genau also ich kucke kurz mal nach bei den zugverbindungen die ich hier habe das sind munchen hannover mit dem ice das sind stundliche verbindungen ab morgens vier uhr dreiundvierzig also ich mein das ist mir zu fruh)

Sentence 482:
0 Initial errors
0 on fringe, 0 iterations

Sentence 483:
5 Initial errors
0 on fringe, 4 iterations
2 Error:Different label
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM okay)
		(SIMPX den ice nehmen wir)
		(SIMPX wir wissen wann wir fahren)
		(SIMPX
			(VF wir)
			(LK wissen)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					(C wohin)
					(MF wir)
					[01;36m(LK[00m [01;31m(VC[00m
						(VXFIN
							(VVFIN fahren))[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m)
		[01;31m(SIMPX[00m
			(VF wir)
			(LK wissen)
			(NF wo wir schlafen)[01;31m)[00m
		(SIMPX wir wissen aber noch nicht was wir abends machen)))
Step:Different label
{'family': ['C', 'MF', 'LK'], 'auto preterminal span': (14, 15), 'span': (14, 15), 'subtrees': ['VXFIN'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('VVFIN',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('VC', 'LK')}
(TOP
	(TURN
		(DM okay)
		(SIMPX den ice nehmen wir)
		(SIMPX wir wissen wann wir fahren)
		(SIMPX
			(VF wir)
			(LK wissen)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					(C wohin)
					(MF wir)
					(LK fahren)[01;31m)[00m[01;31m)[00m)
		[01;31m(SIMPX[00m
			(VF wir)
			(LK wissen)
			(NF wo wir schlafen)[01;31m)[00m
		(SIMPX wir wissen aber noch nicht was wir abends machen)))
Step:Unary
{'subtrees': ['C', 'MF', 'LK'], 'family': ['SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PWAV', 'PPER', 'VVFIN'), 'right siblings': [], 'parent': 'NF', 'auto preterminal span': (12, 15), 'span': (12, 15), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(SIMPX den ice nehmen wir)
		(SIMPX wir wissen wann wir fahren)
		(SIMPX
			(VF wir)
			(LK wissen)
			[01;31m(NF[00m
				(C wohin)
				(MF wir)
				(LK fahren)[01;31m)[00m)
		[01;31m(SIMPX[00m
			(VF wir)
			(LK wissen)
			(NF wo wir schlafen)[01;31m)[00m
		(SIMPX wir wissen aber noch nicht was wir abends machen)))
Step:UNSET remove
{'subtrees': ['C', 'MF', 'LK'], 'family': ['VF', 'LK', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'PWAV', 'PPER', 'VVFIN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (10, 15), 'span': (12, 15), 'left siblings': ['VF', 'LK'], 'label': 'NF', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(SIMPX den ice nehmen wir)
		(SIMPX wir wissen wann wir fahren)
		(SIMPX wir wissen wohin wir fahren)
		[01;31m(SIMPX[00m
			(VF wir)
			(LK wissen)
			(NF wo wir schlafen)[01;31m)[00m
		(SIMPX wir wissen aber noch nicht was wir abends machen)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'NF'], 'family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ART', 'NE', 'VVFIN', 'PPER', 'PPER', 'VVFIN', 'PWAV', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'PWAV', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'PWAV', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'PTKNEG', 'PWS', 'PPER', 'ADV', 'VVFIN'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 29), 'span': (15, 20), 'left siblings': ['DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP okay den ice nehmen wir wir wissen wann wir fahren wir wissen wohin wir fahren wir wissen wo wir schlafen wir wissen aber noch nicht was wir abends machen)

Sentence 484:
12 Initial errors
0 on fringe, 7 iterations
2 Error:Single Word Phrase
2 Error:Different label
2 Error:Different label
2 Error:UNSET move
2 Error:UNSET move
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(PX am neunten juli)
		(SIMPX
			(VF ich)
			(LK mus)
			[01;36m(MF[00m [01;36m(ADJX[00m [01;31m(VC[00m
				[01;31m(VXINF[00m
					(VVINF uberlegen)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m)
		[01;31m(SIMPX[00m
			(LK ist)
			[01;36m(VF[00m [01;31m(MF[00m [01;33m(SIMPX[00m
				(NX
					(PDS das))[01;31m)[00m[01;36m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK gibt)
			[01;36m(MF[00m
				[01;31m(MF[00m
					(NX es)
					(ADVX da)
					(ADVX irgendwie)
					(NX was)[01;31m)[00m
				[01;31m(NF[00m
					(NX
						(ART einen)
						(ADJX interessanten)
						(NN feiertag))[01;31m)[00m[01;36m)[00m[01;31m)[00m [01;33mSIMPX)[00m
		(DM nein)))
Step:Single Word Phrase
{'family': ['ADJX'], 'auto preterminal span': (5, 6), 'span': (5, 6), 'subtrees': ['VVINF'], 'parent': 'VC', 'over_word': True, 'auto preterminals': ('VVINF',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VXINF', 'ADJX')}
(TOP
	(TURN
		(PX am neunten juli)
		(SIMPX
			(VF ich)
			(LK mus)
			[01;36m(MF[00m [01;31m(VC[00m
				(ADJX
					(VVINF uberlegen))[01;31m)[00m[01;36m)[00m)
		[01;31m(SIMPX[00m
			(LK ist)
			[01;36m(VF[00m [01;31m(MF[00m [01;33m(SIMPX[00m
				(NX
					(PDS das))[01;31m)[00m[01;36m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK gibt)
			[01;36m(MF[00m
				[01;31m(MF[00m
					(NX es)
					(ADVX da)
					(ADVX irgendwie)
					(NX was)[01;31m)[00m
				[01;31m(NF[00m
					(NX
						(ART einen)
						(ADJX interessanten)
						(NN feiertag))[01;31m)[00m[01;36m)[00m[01;31m)[00m [01;33mSIMPX)[00m
		(DM nein)))
Step:Different label
{'family': ['VF', 'LK', 'MF'], 'auto preterminal span': (5, 6), 'span': (5, 6), 'subtrees': ['ADJX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('VVINF',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('VC', 'MF')}
(TOP
	(TURN
		(PX am neunten juli)
		(SIMPX ich mus uberlegen)
		[01;31m(SIMPX[00m
			(LK ist)
			[01;36m(VF[00m [01;31m(MF[00m [01;33m(SIMPX[00m
				(NX
					(PDS das))[01;31m)[00m[01;36m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK gibt)
			[01;36m(MF[00m
				[01;31m(MF[00m
					(NX es)
					(ADVX da)
					(ADVX irgendwie)
					(NX was)[01;31m)[00m
				[01;31m(NF[00m
					(NX
						(ART einen)
						(ADJX interessanten)
						(NN feiertag))[01;31m)[00m[01;36m)[00m[01;31m)[00m [01;33mSIMPX)[00m
		(DM nein)))
Step:Different label
{'family': ['LK', 'VF'], 'auto preterminal span': (7, 8), 'span': (7, 8), 'subtrees': ['NX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('PDS',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('MF', 'VF')}
(TOP
	(TURN
		(PX am neunten juli)
		(SIMPX ich mus uberlegen)
		[01;31m(SIMPX[00m
			(LK ist)
			[01;33m(SIMPX[00m (VF das)[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK gibt)
			[01;36m(MF[00m
				[01;31m(MF[00m
					(NX es)
					(ADVX da)
					(ADVX irgendwie)
					(NX was)[01;31m)[00m
				[01;31m(NF[00m
					(NX
						(ART einen)
						(ADJX interessanten)
						(NN feiertag))[01;31m)[00m[01;36m)[00m[01;31m)[00m [01;33mSIMPX)[00m
		(DM nein)))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'NF'], 'mover info': [('VF', (7, 8))], 'old_family': ['LK', 'VF'], 'start left siblings': ['LK'], 'auto preterminals': ('APPRART', 'ADJA', 'NN', 'PPER', 'VMFIN', 'VVINF', 'VAFIN', 'PDS', 'VVFIN', 'PPER', 'ADV', 'ADV', 'PIS', 'ART', 'ADJA', 'NN', 'PTKANT'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 17), 'movers': ['VF'], 'old_parent': 'SIMPX', 'POS confusion': ('PDS', 'PDS'), 'end right siblings': ['LK', 'MF', 'NF'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(PX am neunten juli)
		(SIMPX ich mus uberlegen)
		[01;31m(SIMPX[00m
			(LK
				(VXFIN
					(VAFIN ist)))[01;31m)[00m
		(SIMPX
			(VF das)
			(LK gibt)
			[01;36m(MF[00m
				[01;31m(MF[00m
					(NX es)
					(ADVX da)
					(ADVX irgendwie)
					(NX was)[01;31m)[00m
				[01;31m(NF[00m
					(NX
						(ART einen)
						(ADJX interessanten)
						(NN feiertag))[01;31m)[00m[01;36m)[00m)
		(DM nein)))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['NX', 'ADVX', 'ADVX', 'NX', 'NF'], 'mover info': [('NF', (13, 16))], 'old_family': ['VF', 'LK', 'MF', 'NF'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('PDS', 'VVFIN', 'PPER', 'ADV', 'ADV', 'PIS', 'ART', 'ADJA', 'NN'), 'start right siblings': [], 'end left siblings': ['NX', 'ADVX', 'ADVX', 'NX'], 'auto preterminal span': (7, 16), 'movers': ['NF'], 'old_parent': 'SIMPX', 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(PX am neunten juli)
		(SIMPX ich mus uberlegen)
		[01;31m(SIMPX[00m
			(LK
				(VXFIN
					(VAFIN ist)))[01;31m)[00m
		(SIMPX
			(VF das)
			(LK gibt)
			(MF
				(NX es)
				(ADVX da)
				(ADVX irgendwie)
				(NX was)
				[01;31m(NF[00m
					(NX
						(ART einen)
						(ADJX interessanten)
						(NN feiertag))[01;31m)[00m))
		(DM nein)))
Step:Unary
{'subtrees': ['LK'], 'family': ['PX', 'SIMPX', 'SIMPX', 'SIMPX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'ADJA', 'NN', 'PPER', 'VMFIN', 'VVINF', 'VAFIN', 'PDS', 'VVFIN', 'PPER', 'ADV', 'ADV', 'PIS', 'ART', 'ADJA', 'NN', 'PTKANT'), 'right siblings': ['SIMPX', 'DM'], 'parent': 'TURN', 'auto preterminal span': (0, 17), 'span': (6, 7), 'left siblings': ['PX', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(PX am neunten juli)
		(SIMPX ich mus uberlegen)
		(LK ist)
		(SIMPX
			(VF das)
			(LK gibt)
			(MF
				(NX es)
				(ADVX da)
				(ADVX irgendwie)
				(NX was)
				[01;31m(NF[00m
					(NX
						(ART einen)
						(ADJX interessanten)
						(NN feiertag))[01;31m)[00m))
		(DM nein)))
Step:Unary
{'subtrees': ['NX'], 'family': ['NX', 'ADVX', 'ADVX', 'NX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV', 'ADV', 'PIS', 'ART', 'ADJA', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (9, 16), 'span': (13, 16), 'left siblings': ['NX', 'ADVX', 'ADVX', 'NX'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP am neunten juli ich mus uberlegen ist das gibt es da irgendwie was einen interessanten feiertag nein)

Sentence 485:
10 Initial errors
0 on fringe, 10 iterations
1 Error:Single Word Phrase
1 Error:Single Word Phrase
1 Error:Modifier Attachment
1 Error:Unary
1 Error:UNSET remove
1 Error:Unary
1 Error:Co-ordination
1 Error:UNSET add
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM okay)
		(SIMPX
			(VF dann)
			(LK sage)
			[01;31m(MF[00m
				(NX ich)
				(ADVX einfach)
				(ADVX mal)[01;31m)[00m
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					(VF von mir aus)
					(LK gehen)
					(MF wir ins kino)
					[01;36m(C[00m
						(KOUS wenn)[01;36m)[00m
					(APPR bei)
					[01;36m(NX[00m
						(KOUS wenn)[01;36m)[00m
					[01;31m(NF[00m
						(SIMPX
							(C wenn)
							(MF die was)
							(VC anbieten))[01;31m)[00m[01;31m)[00m[01;31m)[00m)
		(SIMPX oder wir gehen in eine kneipe)
		(DM also)
		(SIMPX ich wurde sagen wir brauchen das gar nicht weiter planen)
		(SIMPX
			(VF wir)
			(FKOORD
				[01;31m(LKMN[00m
					(LK kucken)
					(MF einfach)
					(NF [01;33m(SIMPX (NF[00m
						(SIMPX
							(C wie)
							(MF die sache)
							(VC lauft)
							[01;31m(NF[00m
								(ADVX
									(ADV da))[01;31m)[00m))[01;31m)[00m
				(KON und)
				(LKMVC gehen dann abends aus))))) [01;33mNF) SIMPX)[00m
Step:Single Word Phrase
{'subtrees': ['KOUS'], 'family': ['VF', 'LK', 'MF', 'C', 'APPR', 'KOUS', 'NF'], 'over_word': True, 'over words': True, 'auto preterminals': ('KOUS',), 'right siblings': [(APPR bei), (KOUS wenn), (NF (SIMPX (C (KOUS wenn)) (MF (NX (PDS die)) (NX (PIS was))) (VC (VXFIN (VVFIN anbieten)))))], 'left siblings': [(VF (PX (APPR von) (NX (PPER mir)) (APZR aus))), (LK (VXFIN (VVFIN gehen))), (MF (NX (PPER wir)) (PX (APPRART ins) (NX (NN kino))))], 'auto preterminal span': (13, 14), 'span': (13, 14), 'parent': 'SIMPX', 'label': 'C', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM okay)
		(SIMPX
			(VF dann)
			(LK sage)
			[01;31m(MF[00m
				(NX ich)
				(ADVX einfach)
				(ADVX mal)[01;31m)[00m
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					(VF von mir aus)
					(LK gehen)
					(MF wir ins kino)
					(C wenn)
					(APPR bei)
					[01;36m(NX[00m
						(KOUS wenn)[01;36m)[00m
					[01;31m(NF[00m
						(SIMPX
							(C wenn)
							(MF die was)
							(VC anbieten))[01;31m)[00m[01;31m)[00m[01;31m)[00m)
		(SIMPX oder wir gehen in eine kneipe)
		(DM also)
		(SIMPX ich wurde sagen wir brauchen das gar nicht weiter planen)
		(SIMPX
			(VF wir)
			(FKOORD
				[01;31m(LKMN[00m
					(LK kucken)
					(MF einfach)
					(NF [01;33m(SIMPX (NF[00m
						(SIMPX
							(C wie)
							(MF die sache)
							(VC lauft)
							[01;31m(NF[00m
								(ADVX
									(ADV da))[01;31m)[00m))[01;31m)[00m
				(KON und)
				(LKMVC gehen dann abends aus))))) [01;33mNF) SIMPX)[00m
Step:Single Word Phrase
{'subtrees': ['KOUS'], 'family': ['VF', 'LK', 'MF', 'C', 'APPR', 'NX', 'NF'], 'over_word': True, 'over words': True, 'auto preterminals': ('KOUS',), 'right siblings': [(NF (SIMPX (C (KOUS wenn)) (MF (NX (PDS die)) (NX (PIS was))) (VC (VXFIN (VVFIN anbieten)))))], 'left siblings': [(VF (PX (APPR von) (NX (PPER mir)) (APZR aus))), (LK (VXFIN (VVFIN gehen))), (MF (NX (PPER wir)) (PX (APPRART ins) (NX (NN kino)))), (C (KOUS wenn)), (APPR bei)], 'auto preterminal span': (15, 16), 'span': (15, 16), 'parent': 'SIMPX', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM okay)
		(SIMPX
			(VF dann)
			(LK sage)
			[01;31m(MF[00m
				(NX ich)
				(ADVX einfach)
				(ADVX mal)[01;31m)[00m
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					(VF von mir aus)
					(LK gehen)
					(MF wir ins kino)
					(C wenn)
					(APPR bei)
					(NX wenn)
					[01;31m(NF[00m
						(SIMPX
							(C wenn)
							(MF die was)
							(VC anbieten))[01;31m)[00m[01;31m)[00m[01;31m)[00m)
		(SIMPX oder wir gehen in eine kneipe)
		(DM also)
		(SIMPX ich wurde sagen wir brauchen das gar nicht weiter planen)
		(SIMPX
			(VF wir)
			(FKOORD
				[01;31m(LKMN[00m
					(LK kucken)
					(MF einfach)
					(NF [01;33m(SIMPX (NF[00m
						(SIMPX
							(C wie)
							(MF die sache)
							(VC lauft)
							[01;31m(NF[00m
								(ADVX
									(ADV da))[01;31m)[00m))[01;31m)[00m
				(KON und)
				(LKMVC gehen dann abends aus))))) [01;33mNF) SIMPX)[00m
Step:Modifier Attachment
{'subtrees': ['NX', 'ADVX', 'ADVX'], 'family': ['VF', 'LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'ADV', 'ADV', 'APPR', 'PPER', 'APZR', 'VVFIN', 'PPER', 'APPRART', 'NN', 'KOUS', 'APPR', 'KOUS', 'KOUS', 'PDS', 'PIS', 'VVFIN'), 'right siblings': ['NF'], 'parent': 'SIMPX', 'auto preterminal span': (1, 20), 'span': (3, 6), 'left siblings': ['VF', 'LK'], 'label': 'MF', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(SIMPX
			(VF dann)
			(LK sage)
			(NX ich)
			(ADVX einfach)
			(ADVX mal)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					(VF von mir aus)
					(LK gehen)
					(MF wir ins kino)
					(C wenn)
					(APPR bei)
					(NX wenn)
					[01;31m(NF[00m
						(SIMPX
							(C wenn)
							(MF die was)
							(VC anbieten))[01;31m)[00m[01;31m)[00m[01;31m)[00m)
		(SIMPX oder wir gehen in eine kneipe)
		(DM also)
		(SIMPX ich wurde sagen wir brauchen das gar nicht weiter planen)
		(SIMPX
			(VF wir)
			(FKOORD
				[01;31m(LKMN[00m
					(LK kucken)
					(MF einfach)
					(NF [01;33m(SIMPX (NF[00m
						(SIMPX
							(C wie)
							(MF die sache)
							(VC lauft)
							[01;31m(NF[00m
								(ADVX
									(ADV da))[01;31m)[00m))[01;31m)[00m
				(KON und)
				(LKMVC gehen dann abends aus))))) [01;33mNF) SIMPX)[00m
Step:Unary
{'subtrees': ['VF', 'LK', 'MF', 'C', 'APPR', 'NX', 'NF'], 'family': ['SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'PPER', 'APZR', 'VVFIN', 'PPER', 'APPRART', 'NN', 'KOUS', 'APPR', 'KOUS', 'KOUS', 'PDS', 'PIS', 'VVFIN'), 'right siblings': [], 'parent': 'NF', 'auto preterminal span': (6, 20), 'span': (6, 20), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(SIMPX
			(VF dann)
			(LK sage)
			(NX ich)
			(ADVX einfach)
			(ADVX mal)
			[01;31m(NF[00m
				(VF von mir aus)
				(LK gehen)
				(MF wir ins kino)
				(C wenn)
				(APPR bei)
				(NX wenn)
				[01;31m(NF[00m
					(SIMPX
						(C wenn)
						(MF die was)
						(VC anbieten))[01;31m)[00m[01;31m)[00m)
		(SIMPX oder wir gehen in eine kneipe)
		(DM also)
		(SIMPX ich wurde sagen wir brauchen das gar nicht weiter planen)
		(SIMPX
			(VF wir)
			(FKOORD
				[01;31m(LKMN[00m
					(LK kucken)
					(MF einfach)
					(NF [01;33m(SIMPX (NF[00m
						(SIMPX
							(C wie)
							(MF die sache)
							(VC lauft)
							[01;31m(NF[00m
								(ADVX
									(ADV da))[01;31m)[00m))[01;31m)[00m
				(KON und)
				(LKMVC gehen dann abends aus))))) [01;33mNF) SIMPX)[00m
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'C', 'APPR', 'NX', 'NF'], 'family': ['VF', 'LK', 'NX', 'ADVX', 'ADVX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'ADV', 'ADV', 'APPR', 'PPER', 'APZR', 'VVFIN', 'PPER', 'APPRART', 'NN', 'KOUS', 'APPR', 'KOUS', 'KOUS', 'PDS', 'PIS', 'VVFIN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (1, 20), 'span': (6, 20), 'left siblings': ['VF', 'LK', 'NX', 'ADVX', 'ADVX'], 'label': 'NF', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(SIMPX
			(VF dann)
			(LK sage)
			(NX ich)
			(ADVX einfach)
			(ADVX mal)
			(VF von mir aus)
			(LK gehen)
			(MF wir ins kino)
			(C wenn)
			(APPR bei)
			(NX wenn)
			[01;31m(NF[00m
				(SIMPX
					(C wenn)
					(MF die was)
					(VC anbieten))[01;31m)[00m)
		(SIMPX oder wir gehen in eine kneipe)
		(DM also)
		(SIMPX ich wurde sagen wir brauchen das gar nicht weiter planen)
		(SIMPX
			(VF wir)
			(FKOORD
				[01;31m(LKMN[00m
					(LK kucken)
					(MF einfach)
					(NF [01;33m(SIMPX (NF[00m
						(SIMPX
							(C wie)
							(MF die sache)
							(VC lauft)
							[01;31m(NF[00m
								(ADVX
									(ADV da))[01;31m)[00m))[01;31m)[00m
				(KON und)
				(LKMVC gehen dann abends aus))))) [01;33mNF) SIMPX)[00m
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['VF', 'LK', 'NX', 'ADVX', 'ADVX', 'VF', 'LK', 'MF', 'C', 'APPR', 'NX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'ADV', 'ADV', 'APPR', 'PPER', 'APZR', 'VVFIN', 'PPER', 'APPRART', 'NN', 'KOUS', 'APPR', 'KOUS', 'KOUS', 'PDS', 'PIS', 'VVFIN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (1, 20), 'span': (16, 20), 'left siblings': ['VF', 'LK', 'NX', 'ADVX', 'ADVX', 'VF', 'LK', 'MF', 'C', 'APPR', 'NX'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(SIMPX dann sage ich einfach mal von mir aus gehen wir ins kino wenn bei wenn wenn die was anbieten)
		(SIMPX oder wir gehen in eine kneipe)
		(DM also)
		(SIMPX ich wurde sagen wir brauchen das gar nicht weiter planen)
		(SIMPX
			(VF wir)
			(FKOORD
				[01;31m(LKMN[00m
					(LK kucken)
					(MF einfach)
					(NF [01;33m(SIMPX (NF[00m
						(SIMPX
							(C wie)
							(MF die sache)
							(VC lauft)
							[01;31m(NF[00m
								(ADVX
									(ADV da))[01;31m)[00m))[01;31m)[00m
				(KON und)
				(LKMVC gehen dann abends aus))))) [01;33mNF) SIMPX)[00m
Step:Co-ordination
{'subtrees': ['LK', 'MF', 'NF'], 'family': ['LKMN', 'KON', 'LKMVC'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'ADV', 'KOUS', 'ART', 'NN', 'VVFIN', 'ADV', 'KON', 'VVFIN', 'ADV', 'ADV', 'PTKVZ'), 'right siblings': ['KON', 'LKMVC'], 'parent': 'FKOORD', 'auto preterminal span': (38, 50), 'span': (38, 45), 'left siblings': [], 'label': 'LKMN', 'classified_type': 'Co-ordination', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(SIMPX dann sage ich einfach mal von mir aus gehen wir ins kino wenn bei wenn wenn die was anbieten)
		(SIMPX oder wir gehen in eine kneipe)
		(DM also)
		(SIMPX ich wurde sagen wir brauchen das gar nicht weiter planen)
		(SIMPX
			(VF wir)
			(FKOORD
				(LK kucken)
				(MF einfach)
				[01;36m(SIMPX[00m
					[01;36m(NF[00m
						(NF
							(SIMPX
								(C wie)
								(MF die sache)
								(VC lauft)
								[01;31m(NF[00m
									(ADVX
										(ADV da))[01;31m)[00m))
						(KON und)
						(LKMVC gehen dann abends aus)[01;36m)[00m[01;36m)[00m))))
Step:UNSET add
{'subtrees': ['NF', 'KON', 'LKMVC'], 'family': ['LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'ART', 'NN', 'VVFIN', 'ADV', 'KON', 'VVFIN', 'ADV', 'ADV', 'PTKVZ'), 'right siblings': [], 'left siblings': [(LK (VXFIN (VVFIN kucken))), (MF (ADVX (ADV einfach)))], 'auto preterminal span': (40, 50), 'span': (40, 50), 'parent': 'FKOORD', 'label': 'NF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM okay)
		(SIMPX dann sage ich einfach mal von mir aus gehen wir ins kino wenn bei wenn wenn die was anbieten)
		(SIMPX oder wir gehen in eine kneipe)
		(DM also)
		(SIMPX ich wurde sagen wir brauchen das gar nicht weiter planen)
		(SIMPX
			(VF wir)
			(FKOORD
				(LK kucken)
				(MF einfach)
				[01;36m(SIMPX[00m
					(NF
						(NF
							(SIMPX
								(C wie)
								(MF die sache)
								(VC lauft)
								[01;31m(NF[00m
									(ADVX
										(ADV da))[01;31m)[00m))
						(KON und)
						(LKMVC gehen dann abends aus))[01;36m)[00m))))
Step:Unary
{'subtrees': ['NF'], 'family': ['LK', 'MF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'ART', 'NN', 'VVFIN', 'ADV', 'KON', 'VVFIN', 'ADV', 'ADV', 'PTKVZ'), 'right siblings': [], 'left siblings': [(LK (VXFIN (VVFIN kucken))), (MF (ADVX (ADV einfach)))], 'auto preterminal span': (40, 50), 'span': (40, 50), 'parent': 'FKOORD', 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM okay)
		(SIMPX dann sage ich einfach mal von mir aus gehen wir ins kino wenn bei wenn wenn die was anbieten)
		(SIMPX oder wir gehen in eine kneipe)
		(DM also)
		(SIMPX ich wurde sagen wir brauchen das gar nicht weiter planen)
		(SIMPX
			(VF wir)
			(FKOORD
				(LK kucken)
				(MF einfach)
				(SIMPX
					(NF
						(NF
							(SIMPX
								(C wie)
								(MF die sache)
								(VC lauft)
								[01;31m(NF[00m
									(ADVX
										(ADV da))[01;31m)[00m))
						(KON und)
						(LKMVC gehen dann abends aus)))))))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['C', 'MF', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'ART', 'NN', 'VVFIN', 'ADV'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (40, 45), 'span': (44, 45), 'left siblings': ['C', 'MF', 'VC'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP okay dann sage ich einfach mal von mir aus gehen wir ins kino wenn bei wenn wenn die was anbieten oder wir gehen in eine kneipe also ich wurde sagen wir brauchen das gar nicht weiter planen wir kucken einfach wie die sache lauft da und gehen dann abends aus)

Sentence 486:
9 Initial errors
0 on fringe, 5 iterations
5 Error:NP Attachment
1 Error:Unary
1 Error:Unary
1 Error:Single Word Phrase
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM okay)
		(DM
			[01;31m(NX[00m
				(NE peter)[01;31m)[00m)
		(SIMPX
			(VF von mir aus)
			(LK hatte)
			(MF ich alles)
			[01;36m(NF[00m
				[01;36m(R[00m
					[01;36m(C[00m
						(NX [01;33m(NX (C[00m
							(PRELS was))[01;36m)[00m
					(NX ich)
					[01;31m(NF[00m
						[01;31m(R[00m
							(C was) [01;33mC) NX)[00m
							(MF ich)
							(VC brauchte)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m)
		[01;36m(DM[00m
			(KON und)[01;36m)[00m))
Step:NP Attachment
{'new_parent': 'R', 'new_family': ['NX', 'NX', 'C', 'MF', 'VC'], 'mover info': [('NX', (8, 9)), ('NX', (9, 10))], 'old_family': ['VF', 'LK', 'MF', 'NX', 'NX', 'NF'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('APPR', 'PPER', 'APZR', 'VAFIN', 'PPER', 'PIS', 'PRELS', 'PPER', 'PRELS', 'PPER', 'VVFIN'), 'start right siblings': ['NF'], 'end left siblings': [], 'auto preterminal span': (2, 13), 'adding node already present': False, 'movers': ['NX', 'NX'], 'old_parent': 'SIMPX', 'added and moved': True, 'end right siblings': ['C', 'MF', 'VC'], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'DM'}
(TOP
	(TURN
		(DM okay)
		(DM
			[01;31m(NX[00m
				(NE peter)[01;31m)[00m)
		(SIMPX
			(VF von mir aus)
			(LK hatte)
			(MF ich alles)
			(NF
				(R
					[01;36m(NX[00m
						(C
							[01;36m(C[00m
								(NX
									(PRELS was))[01;36m)[00m
							(NX ich)
							(C was))[01;36m)[00m
					(MF ich)
					(VC brauchte))))
		[01;36m(DM[00m
			(KON und)[01;36m)[00m))
Step:Unary
{'subtrees': ['NX'], 'family': ['C', 'NX', 'C'], 'over_word': False, 'over words': False, 'auto preterminals': ('PRELS',), 'right siblings': [(NX (PPER ich)), (C (NX (PRELS was)))], 'left siblings': [], 'auto preterminal span': (8, 9), 'span': (8, 9), 'parent': 'C', 'label': 'C', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM okay)
		(DM
			[01;31m(NX[00m
				(NE peter)[01;31m)[00m)
		(SIMPX
			(VF von mir aus)
			(LK hatte)
			(MF ich alles)
			(NF
				(R
					[01;36m(NX[00m
						(C
							(C was)
							(NX ich)
							(C was))[01;36m)[00m
					(MF ich)
					(VC brauchte))))
		[01;36m(DM[00m
			(KON und)[01;36m)[00m))
Step:Unary
{'subtrees': ['C'], 'family': ['NX', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('PRELS', 'PPER', 'PRELS'), 'right siblings': [(MF (NX (PPER ich))), (VC (VXFIN (VVFIN brauchte)))], 'left siblings': [], 'auto preterminal span': (8, 11), 'span': (8, 11), 'parent': 'R', 'label': 'NX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM okay)
		(DM
			[01;31m(NX[00m
				(NE peter)[01;31m)[00m)
		(SIMPX von mir aus hatte ich alles was ich was ich brauchte)
		[01;36m(DM[00m
			(KON und)[01;36m)[00m))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['DM', 'DM', 'SIMPX', 'DM'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON',), 'right siblings': [], 'left siblings': [(DM (ITJ okay)), (DM (NX (NE peter))), (SIMPX (VF (PX (APPR von) (NX (PPER mir)) (APZR aus))) (LK (VXFIN (VAFIN hatte))) (MF (NX (PPER ich)) (NX (PIS alles))) (NF (R (NX (C (C (NX (PRELS was))) (NX (PPER ich)) (C (NX (PRELS was))))) (MF (NX (PPER ich))) (VC (VXFIN (VVFIN brauchte))))))], 'auto preterminal span': (13, 14), 'span': (13, 14), 'parent': 'TURN', 'label': 'DM', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM okay)
		(DM
			[01;31m(NX[00m
				(NE peter)[01;31m)[00m)
		(SIMPX von mir aus hatte ich alles was ich was ich brauchte)
		(DM und)))
Step:Single Word Phrase
{'subtrees': ['NE'], 'family': ['NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('NE',), 'right siblings': [], 'parent': 'DM', 'auto preterminal span': (1, 2), 'span': (1, 2), 'left siblings': [], 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP okay peter von mir aus hatte ich alles was ich was ich brauchte und)

Sentence 487:
0 Initial errors
0 on fringe, 0 iterations

Sentence 488:
7 Initial errors
0 on fringe, 5 iterations
2 Error:Different label
2 Error:Clause Attachment
1 Error:UNSET remove
1 Error:Modifier Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX
			(VF das)
			(LK klingt)
			[01;36m(ADVX[00m
				(MF
					[01;31m(ADJX[00m
						(ADVX so)
						(ADJD euphorisch)[01;31m)[00m)[01;36m)[00m)
		(NX hannover)
		(DM na gut)
		(SIMPX wenn es denn sein mus)
		(DM ja)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF ich)
				(LK sage)
				[01;31m(MF[00m
					(NX es)
					(NX dir)
					(ADVX gleich)[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(NX
						(NN urlaub))[01;31m)[00m
				(LK habe)
				(MF ich vom neunzehnten juli bis mitte august)[01;31m)[00m[01;36m)[00m))
Step:Different label
{'family': ['ADVX'], 'auto preterminal span': (2, 4), 'span': (2, 4), 'subtrees': ['ADVX', 'ADJD'], 'parent': 'MF', 'over_word': False, 'auto preterminals': ('ADV', 'ADJD'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('ADJX', 'ADVX')}
(TOP
	(TURN
		(SIMPX das klingt so euphorisch)
		(NX hannover)
		(DM na gut)
		(SIMPX wenn es denn sein mus)
		(DM ja)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF ich)
				(LK sage)
				[01;31m(MF[00m
					(NX es)
					(NX dir)
					(ADVX gleich)[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(NX
						(NN urlaub))[01;31m)[00m
				(LK habe)
				(MF ich vom neunzehnten juli bis mitte august)[01;31m)[00m[01;36m)[00m))
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['SIMPX', 'VF', 'LK', 'MF'], 'mover info': [('SIMPX', (13, 18))], 'old_family': ['SIMPX', 'NX', 'DM', 'SIMPX', 'DM', 'SIMPX', 'SIMPX'], 'start left siblings': ['SIMPX', 'NX', 'DM', 'SIMPX', 'DM'], 'auto preterminals': ('PDS', 'VVFIN', 'ADV', 'ADJD', 'NE', 'ITJ', 'ITJ', 'KOUS', 'PPER', 'ADV', 'VAINF', 'VMFIN', 'PTKANT', 'PPER', 'VVFIN', 'PPER', 'PPER', 'ADV', 'NN', 'VAFIN', 'PPER', 'APPRART', 'ADJA', 'NN', 'APPR', 'NN', 'NN'), 'start right siblings': ['SIMPX'], 'end left siblings': [], 'auto preterminal span': (0, 27), 'movers': ['SIMPX'], 'old_parent': 'TURN', 'end right siblings': ['VF', 'LK', 'MF'], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(SIMPX das klingt so euphorisch)
		(NX hannover)
		(DM na gut)
		(SIMPX wenn es denn sein mus)
		(DM ja)
		(SIMPX
			[01;31m(SIMPX[00m
				(VF ich)
				(LK sage)
				[01;31m(MF[00m
					(NX es)
					(NX dir)
					(ADVX gleich)[01;31m)[00m[01;31m)[00m
			[01;31m(VF[00m
				(NX
					(NN urlaub))[01;31m)[00m
			(LK habe)
			(MF ich vom neunzehnten juli bis mitte august))))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['SIMPX', 'VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'PPER', 'PPER', 'ADV', 'NN', 'VAFIN', 'PPER', 'APPRART', 'ADJA', 'NN', 'APPR', 'NN', 'NN'), 'right siblings': ['VF', 'LK', 'MF'], 'parent': 'SIMPX', 'auto preterminal span': (13, 27), 'span': (13, 18), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX das klingt so euphorisch)
		(NX hannover)
		(DM na gut)
		(SIMPX wenn es denn sein mus)
		(DM ja)
		(SIMPX
			(VF ich)
			(LK sage)
			[01;31m(MF[00m
				(NX es)
				(NX dir)
				(ADVX gleich)[01;31m)[00m
			[01;31m(VF[00m
				(NX
					(NN urlaub))[01;31m)[00m
			(LK habe)
			(MF ich vom neunzehnten juli bis mitte august))))
Step:Modifier Attachment
{'subtrees': ['NX', 'NX', 'ADVX'], 'family': ['VF', 'LK', 'MF', 'VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'PPER', 'PPER', 'ADV', 'NN', 'VAFIN', 'PPER', 'APPRART', 'ADJA', 'NN', 'APPR', 'NN', 'NN'), 'right siblings': ['VF', 'LK', 'MF'], 'parent': 'SIMPX', 'auto preterminal span': (13, 27), 'span': (15, 18), 'left siblings': ['VF', 'LK'], 'label': 'MF', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX das klingt so euphorisch)
		(NX hannover)
		(DM na gut)
		(SIMPX wenn es denn sein mus)
		(DM ja)
		(SIMPX
			(VF ich)
			(LK sage)
			(NX es)
			(NX dir)
			(ADVX gleich)
			[01;31m(VF[00m
				(NX
					(NN urlaub))[01;31m)[00m
			(LK habe)
			(MF ich vom neunzehnten juli bis mitte august))))
Step:Unary
{'subtrees': ['NX'], 'family': ['VF', 'LK', 'NX', 'NX', 'ADVX', 'VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'PPER', 'PPER', 'ADV', 'NN', 'VAFIN', 'PPER', 'APPRART', 'ADJA', 'NN', 'APPR', 'NN', 'NN'), 'right siblings': ['LK', 'MF'], 'parent': 'SIMPX', 'auto preterminal span': (13, 27), 'span': (18, 19), 'left siblings': ['VF', 'LK', 'NX', 'NX', 'ADVX'], 'label': 'VF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP das klingt so euphorisch hannover na gut wenn es denn sein mus ja ich sage es dir gleich urlaub habe ich vom neunzehnten juli bis mitte august)

Sentence 489:
3 Initial errors
0 on fringe, 3 iterations
1 Error:Clause Attachment
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;36m(SIMPX[00m
			(SIMPX und ich sage es dir gleich)
			(SIMPX
				[01;31m(VF[00m
					[01;31m(PX[00m
						(APPRART im)
						(NX juli)[01;31m)[00m[01;31m)[00m
				(LK wird)
				(MF es etwas knapp))[01;36m)[00m
		(SIMPX da ginge nur noch der neunte zehnte)))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'PPER', 'VVFIN', 'PPER', 'PPER', 'ADV', 'APPRART', 'NN', 'VAFIN', 'PPER', 'ADV', 'ADJD'), 'right siblings': [(SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VVFIN ginge))) (MF (ADVX (ADV nur)) (ADVX (ADV noch)) (NX (ART der) (NX (NX (NN neunte)) (NX (NN zehnte))))))], 'left siblings': [], 'auto preterminal span': (0, 12), 'span': (0, 12), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(SIMPX
			(SIMPX und ich sage es dir gleich)
			(SIMPX
				[01;31m(VF[00m
					[01;31m(PX[00m
						(APPRART im)
						(NX juli)[01;31m)[00m[01;31m)[00m
				(LK wird)
				(MF es etwas knapp)))
		(SIMPX da ginge nur noch der neunte zehnte)))
Step:Unary
{'subtrees': ['APPRART', 'NX'], 'family': ['PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'NN'), 'right siblings': [], 'parent': 'VF', 'auto preterminal span': (6, 8), 'span': (6, 8), 'left siblings': [], 'label': 'PX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX
			(SIMPX und ich sage es dir gleich)
			(SIMPX
				[01;31m(VF[00m
					(APPRART im)
					(NX juli)[01;31m)[00m
				(LK wird)
				(MF es etwas knapp)))
		(SIMPX da ginge nur noch der neunte zehnte)))
Step:UNSET remove
{'subtrees': ['APPRART', 'NX'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'NN', 'VAFIN', 'PPER', 'ADV', 'ADJD'), 'right siblings': ['LK', 'MF'], 'parent': 'SIMPX', 'auto preterminal span': (6, 12), 'span': (6, 8), 'left siblings': [], 'label': 'VF', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP und ich sage es dir gleich im juli wird es etwas knapp da ginge nur noch der neunte zehnte)

Sentence 490:
0 Initial errors
0 on fringe, 0 iterations

Sentence 491:
0 Initial errors
0 on fringe, 0 iterations

Sentence 492:
14 Initial errors
0 on fringe, 9 iterations
4 Error:NP Attachment
2 Error:Single Word Phrase
2 Error:NP Attachment
1 Error:PP Attachment
1 Error:PP Attachment
1 Error:NP Internal Structure
1 Error:PP Attachment
1 Error:NP Internal Structure
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX brauchen wir nur noch ein hotel)
		(DM ach)
		(SIMPX hotels habe ich)
		(DM ja)
		[01;33m(NX[00m (NX zwei moglichkeiten)
		[01;31m(NX[00m
			(NX hundert zweiundvierzig mark) [01;33mNX)[00m
			(PX im zentrum)[01;31m)[00m
		[01;31m(NX[00m [01;33m(NX[00m
			(NX hundert funfunddreisig mark)
			[01;31m(PX[00m
				(NX funf minuten) [01;33mNX)[00m
				[01;33m(PX[00m (PX vom bahnhof)[01;31m)[00m
			(PX mit garage)[01;31m)[00m [01;33mPX)[00m
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(LK brauchen)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX wir)
					(ADVX eh)
					(ADVX nicht)[01;31m)[00m[01;31m)[00m
			(NX
				(ADVX so)
				[01;31m(NX[00m
					(ART ein)
					(NN quatsch)[01;31m)[00m) [01;33mMF)[00m[01;36m)[00m
		(NX
			(KON und)
			(ADVX einmal)
			[01;31m(NX[00m
				(NX hundert sechsundachtzig mark)
				(PX mit schwimmbad)[01;31m)[00m)
		(SIMPX
			(LK hast)
			(MF du aber eh keine zeit)
			[01;36m(ADVX[00m
				(NF
					[01;31m(PX[00m
						(PROP dafur)[01;31m)[00m)[01;36m)[00m)
		(SIMPX was steckt)))
Step:NP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'ADVX', 'ADVX', 'NX'], 'mover info': [('NX', (31, 34))], 'old_family': ['SIMPX', 'DM', 'SIMPX', 'DM', 'NX', 'NX', 'NX', 'SIMPX', 'NX', 'NX', 'SIMPX', 'SIMPX'], 'start left siblings': ['SIMPX', 'DM', 'SIMPX', 'DM', 'NX', 'NX', 'NX', 'SIMPX'], 'auto preterminals': ('VVFIN', 'PPER', 'ADV', 'ADV', 'ART', 'NN', 'ITJ', 'NN', 'VAFIN', 'PPER', 'PTKANT', 'CARD', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'CARD', 'CARD', 'NN', 'CARD', 'NN', 'APPRART', 'NN', 'APPR', 'NN', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADV', 'ART', 'NN', 'KON', 'ADV', 'CARD', 'CARD', 'NN', 'APPR', 'NN', 'VAFIN', 'PPER', 'ADV', 'ADV', 'PIAT', 'NN', 'PROP', 'PWS', 'VVFIN'), 'start right siblings': ['NX', 'SIMPX', 'SIMPX'], 'end left siblings': ['NX', 'ADVX', 'ADVX'], 'auto preterminal span': (0, 50), 'movers': ['NX'], 'old_parent': 'TURN', 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SIMPX brauchen wir nur noch ein hotel)
		(DM ach)
		(SIMPX hotels habe ich)
		(DM ja)
		[01;33m(NX[00m (NX zwei moglichkeiten)
		[01;31m(NX[00m
			(NX hundert zweiundvierzig mark) [01;33mNX)[00m
			(PX im zentrum)[01;31m)[00m
		[01;31m(NX[00m [01;33m(NX[00m
			(NX hundert funfunddreisig mark)
			[01;31m(PX[00m
				(NX funf minuten) [01;33mNX)[00m
				[01;33m(PX[00m (PX vom bahnhof)[01;31m)[00m
			(PX mit garage)[01;31m)[00m [01;33mPX)[00m
		(SIMPX
			(LK brauchen)
			(MF
				(NX wir)
				(ADVX eh)
				(ADVX nicht)
				(NX
					(ADVX so)
					[01;31m(NX[00m
						(ART ein)
						(NN quatsch)[01;31m)[00m)))
		(NX
			(KON und)
			(ADVX einmal)
			[01;31m(NX[00m
				(NX hundert sechsundachtzig mark)
				(PX mit schwimmbad)[01;31m)[00m)
		(SIMPX
			(LK hast)
			(MF du aber eh keine zeit)
			[01;36m(ADVX[00m
				(NF
					[01;31m(PX[00m
						(PROP dafur)[01;31m)[00m)[01;36m)[00m)
		(SIMPX was steckt)))
Step:Single Word Phrase
{'family': ['ADVX'], 'auto preterminal span': (47, 48), 'span': (47, 48), 'subtrees': ['PROP'], 'parent': 'NF', 'over_word': True, 'auto preterminals': ('PROP',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('PX', 'ADVX')}
(TOP
	(TURN
		(SIMPX brauchen wir nur noch ein hotel)
		(DM ach)
		(SIMPX hotels habe ich)
		(DM ja)
		[01;33m(NX[00m (NX zwei moglichkeiten)
		[01;31m(NX[00m
			(NX hundert zweiundvierzig mark) [01;33mNX)[00m
			(PX im zentrum)[01;31m)[00m
		[01;31m(NX[00m [01;33m(NX[00m
			(NX hundert funfunddreisig mark)
			[01;31m(PX[00m
				(NX funf minuten) [01;33mNX)[00m
				[01;33m(PX[00m (PX vom bahnhof)[01;31m)[00m
			(PX mit garage)[01;31m)[00m [01;33mPX)[00m
		(SIMPX
			(LK brauchen)
			(MF
				(NX wir)
				(ADVX eh)
				(ADVX nicht)
				(NX
					(ADVX so)
					[01;31m(NX[00m
						(ART ein)
						(NN quatsch)[01;31m)[00m)))
		(NX
			(KON und)
			(ADVX einmal)
			[01;31m(NX[00m
				(NX hundert sechsundachtzig mark)
				(PX mit schwimmbad)[01;31m)[00m)
		(SIMPX hast du aber eh keine zeit dafur)
		(SIMPX was steckt)))
Step:NP Attachment
{'new_parent': 'NX', 'new_family': ['NX', 'NX', 'PX', 'PX'], 'mover info': [('NX', (21, 23))], 'old_family': ['NX', 'PX'], 'start left siblings': [], 'auto preterminals': ('CARD', 'CARD', 'NN', 'CARD', 'NN', 'APPRART', 'NN', 'APPR', 'NN'), 'start right siblings': ['PX'], 'end left siblings': ['NX'], 'auto preterminal span': (18, 27), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'PX', 'added and moved': True, 'end right siblings': ['PX', 'PX'], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'PX'}
(TOP
	(TURN
		(SIMPX brauchen wir nur noch ein hotel)
		(DM ach)
		(SIMPX hotels habe ich)
		(DM ja)
		[01;33m(NX[00m (NX zwei moglichkeiten)
		[01;31m(NX[00m
			(NX hundert zweiundvierzig mark) [01;33mNX)[00m
			(PX im zentrum)[01;31m)[00m
		[01;31m(NX[00m
			(NX hundert funfunddreisig mark funf minuten)
			[01;36m(PX[00m
				(PX vom bahnhof)
				(PX mit garage)[01;36m)[00m[01;31m)[00m
		(SIMPX
			(LK brauchen)
			(MF
				(NX wir)
				(ADVX eh)
				(ADVX nicht)
				(NX
					(ADVX so)
					[01;31m(NX[00m
						(ART ein)
						(NN quatsch)[01;31m)[00m)))
		(NX
			(KON und)
			(ADVX einmal)
			[01;31m(NX[00m
				(NX hundert sechsundachtzig mark)
				(PX mit schwimmbad)[01;31m)[00m)
		(SIMPX hast du aber eh keine zeit dafur)
		(SIMPX was steckt)))
Step:PP Attachment
{'subtrees': ['PX', 'PX'], 'family': ['NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'NN', 'APPR', 'NN'), 'right siblings': [], 'left siblings': [(NX (NX (ADJX (CARD hundert) (CARD funfunddreisig)) (NN mark)) (NX (ADJX (CARD funf)) (NN minuten)))], 'auto preterminal span': (23, 27), 'span': (23, 27), 'parent': 'NX', 'label': 'PX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(SIMPX brauchen wir nur noch ein hotel)
		(DM ach)
		(SIMPX hotels habe ich)
		(DM ja)
		[01;33m(NX[00m (NX zwei moglichkeiten)
		[01;31m(NX[00m
			(NX hundert zweiundvierzig mark) [01;33mNX)[00m
			(PX im zentrum)[01;31m)[00m
		[01;31m(NX[00m
			(NX hundert funfunddreisig mark funf minuten)
			(PX vom bahnhof mit garage)[01;31m)[00m
		(SIMPX
			(LK brauchen)
			(MF
				(NX wir)
				(ADVX eh)
				(ADVX nicht)
				(NX
					(ADVX so)
					[01;31m(NX[00m
						(ART ein)
						(NN quatsch)[01;31m)[00m)))
		(NX
			(KON und)
			(ADVX einmal)
			[01;31m(NX[00m
				(NX hundert sechsundachtzig mark)
				(PX mit schwimmbad)[01;31m)[00m)
		(SIMPX hast du aber eh keine zeit dafur)
		(SIMPX was steckt)))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['SIMPX', 'DM', 'SIMPX', 'DM', 'NX', 'NX', 'NX', 'SIMPX', 'NX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'ADV', 'ADV', 'ART', 'NN', 'ITJ', 'NN', 'VAFIN', 'PPER', 'PTKANT', 'CARD', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'CARD', 'CARD', 'NN', 'CARD', 'NN', 'APPRART', 'NN', 'APPR', 'NN', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADV', 'ART', 'NN', 'KON', 'ADV', 'CARD', 'CARD', 'NN', 'APPR', 'NN', 'VAFIN', 'PPER', 'ADV', 'ADV', 'PIAT', 'NN', 'PROP', 'PWS', 'VVFIN'), 'right siblings': ['NX', 'SIMPX', 'NX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 50), 'span': (13, 18), 'left siblings': ['SIMPX', 'DM', 'SIMPX', 'DM', 'NX'], 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX brauchen wir nur noch ein hotel)
		(DM ach)
		(SIMPX hotels habe ich)
		(DM ja)
		[01;36m(NX[00m
			(NX zwei moglichkeiten)
			(NX hundert zweiundvierzig mark)[01;36m)[00m
		(PX im zentrum)
		[01;31m(NX[00m
			(NX hundert funfunddreisig mark funf minuten)
			(PX vom bahnhof mit garage)[01;31m)[00m
		(SIMPX
			(LK brauchen)
			(MF
				(NX wir)
				(ADVX eh)
				(ADVX nicht)
				(NX
					(ADVX so)
					[01;31m(NX[00m
						(ART ein)
						(NN quatsch)[01;31m)[00m)))
		(NX
			(KON und)
			(ADVX einmal)
			[01;31m(NX[00m
				(NX hundert sechsundachtzig mark)
				(PX mit schwimmbad)[01;31m)[00m)
		(SIMPX hast du aber eh keine zeit dafur)
		(SIMPX was steckt)))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['SIMPX', 'DM', 'SIMPX', 'DM', 'NX', 'PX', 'NX', 'SIMPX', 'NX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'NN', 'CARD', 'CARD', 'NN'), 'right siblings': [(PX (APPRART im) (NX (NN zentrum))), (NX (NX (NX (ADJX (CARD hundert) (CARD funfunddreisig)) (NN mark)) (NX (ADJX (CARD funf)) (NN minuten))) (PX (PX (APPRART vom) (NX (NN bahnhof))) (PX (APPR mit) (NX (NN garage))))), (SIMPX (LK (VXFIN (VVFIN brauchen))) (MF (NX (PPER wir)) (ADVX (ADV eh)) (ADVX (PTKNEG nicht)) (NX (ADVX (ADV so)) (NX (ART ein) (NN quatsch))))), (NX (KON und) (ADVX (ADV einmal)) (NX (NX (ADJX (CARD hundert) (CARD sechsundachtzig)) (NN mark)) (PX (APPR mit) (NX (NN schwimmbad))))), (SIMPX (LK (VXFIN (VAFIN hast))) (MF (NX (PPER du)) (ADVX (ADV aber)) (ADVX (ADV eh)) (NX (PIAT keine) (NN zeit))) (NF (ADVX (PROP dafur)))), (SIMPX (VF (NX (PWS was))) (LK (VXFIN (VVFIN steckt))))], 'left siblings': [(SIMPX (LK (VXFIN (VVFIN brauchen))) (MF (NX (PPER wir)) (ADVX (ADV nur)) (ADVX (ADV noch)) (NX (ART ein) (NN hotel)))), (DM (ITJ ach)), (SIMPX (VF (NX (NN hotels))) (LK (VXFIN (VAFIN habe))) (MF (NX (PPER ich)))), (DM (PTKANT ja))], 'auto preterminal span': (11, 16), 'span': (11, 16), 'parent': 'TURN', 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'add'}
(TOP
	(TURN
		(SIMPX brauchen wir nur noch ein hotel)
		(DM ach)
		(SIMPX hotels habe ich)
		(DM ja)
		(NX zwei moglichkeiten hundert zweiundvierzig mark)
		(PX im zentrum)
		[01;31m(NX[00m
			(NX hundert funfunddreisig mark funf minuten)
			(PX vom bahnhof mit garage)[01;31m)[00m
		(SIMPX
			(LK brauchen)
			(MF
				(NX wir)
				(ADVX eh)
				(ADVX nicht)
				(NX
					(ADVX so)
					[01;31m(NX[00m
						(ART ein)
						(NN quatsch)[01;31m)[00m)))
		(NX
			(KON und)
			(ADVX einmal)
			[01;31m(NX[00m
				(NX hundert sechsundachtzig mark)
				(PX mit schwimmbad)[01;31m)[00m)
		(SIMPX hast du aber eh keine zeit dafur)
		(SIMPX was steckt)))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['SIMPX', 'DM', 'SIMPX', 'DM', 'NX', 'PX', 'NX', 'SIMPX', 'NX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'ADV', 'ADV', 'ART', 'NN', 'ITJ', 'NN', 'VAFIN', 'PPER', 'PTKANT', 'CARD', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'CARD', 'CARD', 'NN', 'CARD', 'NN', 'APPRART', 'NN', 'APPR', 'NN', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADV', 'ART', 'NN', 'KON', 'ADV', 'CARD', 'CARD', 'NN', 'APPR', 'NN', 'VAFIN', 'PPER', 'ADV', 'ADV', 'PIAT', 'NN', 'PROP', 'PWS', 'VVFIN'), 'right siblings': ['SIMPX', 'NX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 50), 'span': (18, 27), 'left siblings': ['SIMPX', 'DM', 'SIMPX', 'DM', 'NX', 'PX'], 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX brauchen wir nur noch ein hotel)
		(DM ach)
		(SIMPX hotels habe ich)
		(DM ja)
		(NX zwei moglichkeiten hundert zweiundvierzig mark)
		(PX im zentrum)
		(NX hundert funfunddreisig mark funf minuten)
		(PX vom bahnhof mit garage)
		(SIMPX
			(LK brauchen)
			(MF
				(NX wir)
				(ADVX eh)
				(ADVX nicht)
				(NX
					(ADVX so)
					[01;31m(NX[00m
						(ART ein)
						(NN quatsch)[01;31m)[00m)))
		(NX
			(KON und)
			(ADVX einmal)
			[01;31m(NX[00m
				(NX hundert sechsundachtzig mark)
				(PX mit schwimmbad)[01;31m)[00m)
		(SIMPX hast du aber eh keine zeit dafur)
		(SIMPX was steckt)))
Step:NP Internal Structure
{'subtrees': ['ART', 'NN'], 'family': ['ADVX', 'NX'], 'over_word': False, 'over words': True, 'auto preterminals': ('ADV', 'ART', 'NN'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (31, 34), 'span': (32, 34), 'left siblings': ['ADVX'], 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX brauchen wir nur noch ein hotel)
		(DM ach)
		(SIMPX hotels habe ich)
		(DM ja)
		(NX zwei moglichkeiten hundert zweiundvierzig mark)
		(PX im zentrum)
		(NX hundert funfunddreisig mark funf minuten)
		(PX vom bahnhof mit garage)
		(SIMPX brauchen wir eh nicht so ein quatsch)
		(NX
			(KON und)
			(ADVX einmal)
			[01;31m(NX[00m
				(NX hundert sechsundachtzig mark)
				(PX mit schwimmbad)[01;31m)[00m)
		(SIMPX hast du aber eh keine zeit dafur)
		(SIMPX was steckt)))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['KON', 'ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'ADV', 'CARD', 'CARD', 'NN', 'APPR', 'NN'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (34, 41), 'span': (36, 41), 'left siblings': ['KON', 'ADVX'], 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP brauchen wir nur noch ein hotel ach hotels habe ich ja zwei moglichkeiten hundert zweiundvierzig mark im zentrum hundert funfunddreisig mark funf minuten vom bahnhof mit garage brauchen wir eh nicht so ein quatsch und einmal hundert sechsundachtzig mark mit schwimmbad hast du aber eh keine zeit dafur was steckt)

Sentence 493:
4 Initial errors
0 on fringe, 2 iterations
2 Error:Single Word Phrase
2 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX
			(VF
				(SIMPX
					(VF schloshotel)
					(LK ist)
					[01;36m(MF[00m
						[01;36m(ADVX[00m [01;31m(DM[00m
							(PTKANT ja)[01;31m)[00m[01;36m)[00m
						[01;31m(MF[00m
							(ADJX
								(ADJD standesgemas))[01;31m)[00m[01;36m)[00m))
			(LK wurde)
			(MF ich)
			(VC sagen))
		(DM also)
		(SIMPX schloshotel wird gebucht)))
Step:Single Word Phrase
{'family': ['VF', 'LK', 'ADVX', 'MF'], 'auto preterminal span': (2, 3), 'span': (2, 3), 'subtrees': ['PTKANT'], 'parent': 'SIMPX', 'over_word': True, 'auto preterminals': ('PTKANT',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('DM', 'ADVX')}
(TOP
	(TURN
		(SIMPX
			(VF
				(SIMPX
					(VF schloshotel)
					(LK ist)
					[01;36m(MF[00m
						(ADVX ja)
						[01;31m(MF[00m
							(ADJX
								(ADJD standesgemas))[01;31m)[00m[01;36m)[00m))
			(LK wurde)
			(MF ich)
			(VC sagen))
		(DM also)
		(SIMPX schloshotel wird gebucht)))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['ADVX', 'ADJX'], 'mover info': [('ADVX', (2, 3))], 'old_family': ['VF', 'LK', 'ADVX', 'MF'], 'start left siblings': ['VF', 'LK'], 'auto preterminals': ('NE', 'VAFIN', 'PTKANT', 'ADJD'), 'start right siblings': ['MF'], 'end left siblings': [], 'auto preterminal span': (0, 4), 'movers': ['ADVX'], 'old_parent': 'SIMPX', 'POS confusion': ('PTKANT', 'PTKANT'), 'end right siblings': ['ADJX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP schloshotel ist ja standesgemas wurde ich sagen also schloshotel wird gebucht)

Sentence 494:
0 Initial errors
0 on fringe, 0 iterations

Sentence 495:
0 Initial errors
0 on fringe, 0 iterations

Sentence 496:
0 Initial errors
0 on fringe, 0 iterations

Sentence 497:
0 Initial errors
0 on fringe, 0 iterations

Sentence 498:
9 Initial errors
0 on fringe, 6 iterations
2 Error:Different label
2 Error:Different label
2 Error:Different label
1 Error:Modifier Attachment
1 Error:Unary
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF grundsatzlich)
			(LK gabe)
			(MF
				[01;36m(MF[00m
					(NX es)
					(ADVX naturlich)[01;36m)[00m
				(NX die moglichkeit))
			[01;36m(VXINF[00m [01;36m(VC[00m [01;31m(NF[00m
				[01;31m(SIMPX[00m
					[01;31m(SIMPX[00m
						(VC
							(VXINF
								(PTKZU zu)
								(VVINF fliegen)))[01;31m)[00m
					(KON beziehungsweise)
					[01;36m(MVC[00m [01;31m(SIMPX[00m
						(MF den zug)
						(VC zu nehmen)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m)
		(SIMPX
			(VF ich)
			(LK wurde)
			(VC vorschlagen)
			(NF
				(SIMPX
					(VF wir)
					(LK fliegen)
					(NF
						(SIMPX
							(C da)
							(MF
								(NX wir)
								(NX
									(ADVX nur)
									[01;31m(ADJX[00m
										(ADJA begrenzte)[01;31m)[00m
									(NN zeit))
								(PX zur verfugung))
							(VC haben))))))
		(SIMPX ich weis nicht ob ihnen das recht ist)))
Step:Different label
{'family': ['VF', 'LK', 'MF', 'VC'], 'auto preterminal span': (7, 14), 'span': (7, 14), 'subtrees': ['SIMPX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('PTKZU', 'VVINF', 'KON', 'ART', 'NN', 'PTKZU', 'VVINF'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('NF', 'VC')}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF grundsatzlich)
			(LK gabe)
			(MF
				[01;36m(MF[00m
					(NX es)
					(ADVX naturlich)[01;36m)[00m
				(NX die moglichkeit))
			[01;36m(VXINF[00m
				(VC
					[01;31m(SIMPX[00m
						[01;31m(SIMPX[00m
							(VC
								(VXINF
									(PTKZU zu)
									(VVINF fliegen)))[01;31m)[00m
						(KON beziehungsweise)
						[01;36m(MVC[00m [01;31m(SIMPX[00m
							(MF den zug)
							(VC zu nehmen)[01;31m)[00m[01;36m)[00m[01;31m)[00m)[01;36m)[00m)
		(SIMPX
			(VF ich)
			(LK wurde)
			(VC vorschlagen)
			(NF
				(SIMPX
					(VF wir)
					(LK fliegen)
					(NF
						(SIMPX
							(C da)
							(MF
								(NX wir)
								(NX
									(ADVX nur)
									[01;31m(ADJX[00m
										(ADJA begrenzte)[01;31m)[00m
									(NN zeit))
								(PX zur verfugung))
							(VC haben))))))
		(SIMPX ich weis nicht ob ihnen das recht ist)))
Step:Different label
{'family': ['VXINF'], 'auto preterminal span': (7, 14), 'span': (7, 14), 'subtrees': ['SIMPX', 'KON', 'SIMPX'], 'parent': 'VC', 'over_word': False, 'auto preterminals': ('PTKZU', 'VVINF', 'KON', 'ART', 'NN', 'PTKZU', 'VVINF'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('SIMPX', 'VXINF')}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF grundsatzlich)
			(LK gabe)
			(MF
				[01;36m(MF[00m
					(NX es)
					(ADVX naturlich)[01;36m)[00m
				(NX die moglichkeit))
			(VC
				(VXINF
					[01;31m(SIMPX[00m
						(VC
							(VXINF
								(PTKZU zu)
								(VVINF fliegen)))[01;31m)[00m
					(KON beziehungsweise)
					[01;36m(MVC[00m [01;31m(SIMPX[00m
						(MF den zug)
						(VC zu nehmen)[01;31m)[00m[01;36m)[00m)))
		(SIMPX
			(VF ich)
			(LK wurde)
			(VC vorschlagen)
			(NF
				(SIMPX
					(VF wir)
					(LK fliegen)
					(NF
						(SIMPX
							(C da)
							(MF
								(NX wir)
								(NX
									(ADVX nur)
									[01;31m(ADJX[00m
										(ADJA begrenzte)[01;31m)[00m
									(NN zeit))
								(PX zur verfugung))
							(VC haben))))))
		(SIMPX ich weis nicht ob ihnen das recht ist)))
Step:Different label
{'family': ['SIMPX', 'KON', 'MVC'], 'auto preterminal span': (10, 14), 'span': (10, 14), 'subtrees': ['MF', 'VC'], 'parent': 'VXINF', 'over_word': False, 'auto preterminals': ('ART', 'NN', 'PTKZU', 'VVINF'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('SIMPX', 'MVC')}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF grundsatzlich)
			(LK gabe)
			(MF
				[01;36m(MF[00m
					(NX es)
					(ADVX naturlich)[01;36m)[00m
				(NX die moglichkeit))
			(VC
				(VXINF
					[01;31m(SIMPX[00m
						(VC
							(VXINF
								(PTKZU zu)
								(VVINF fliegen)))[01;31m)[00m
					(KON beziehungsweise)
					(MVC den zug zu nehmen))))
		(SIMPX
			(VF ich)
			(LK wurde)
			(VC vorschlagen)
			(NF
				(SIMPX
					(VF wir)
					(LK fliegen)
					(NF
						(SIMPX
							(C da)
							(MF
								(NX wir)
								(NX
									(ADVX nur)
									[01;31m(ADJX[00m
										(ADJA begrenzte)[01;31m)[00m
									(NN zeit))
								(PX zur verfugung))
							(VC haben))))))
		(SIMPX ich weis nicht ob ihnen das recht ist)))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADVX'], 'family': ['MF', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV'), 'right siblings': [(NX (ART die) (NN moglichkeit))], 'left siblings': [], 'auto preterminal span': (3, 5), 'span': (3, 5), 'parent': 'MF', 'label': 'MF', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF grundsatzlich)
			(LK gabe)
			(MF es naturlich die moglichkeit)
			(VC
				(VXINF
					[01;31m(SIMPX[00m
						(VC
							(VXINF
								(PTKZU zu)
								(VVINF fliegen)))[01;31m)[00m
					(KON beziehungsweise)
					(MVC den zug zu nehmen))))
		(SIMPX
			(VF ich)
			(LK wurde)
			(VC vorschlagen)
			(NF
				(SIMPX
					(VF wir)
					(LK fliegen)
					(NF
						(SIMPX
							(C da)
							(MF
								(NX wir)
								(NX
									(ADVX nur)
									[01;31m(ADJX[00m
										(ADJA begrenzte)[01;31m)[00m
									(NN zeit))
								(PX zur verfugung))
							(VC haben))))))
		(SIMPX ich weis nicht ob ihnen das recht ist)))
Step:Unary
{'subtrees': ['VC'], 'family': ['SIMPX', 'KON', 'MVC'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKZU', 'VVINF', 'KON', 'ART', 'NN', 'PTKZU', 'VVINF'), 'right siblings': ['KON', 'MVC'], 'parent': 'VXINF', 'auto preterminal span': (7, 14), 'span': (7, 9), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX grundsatzlich gabe es naturlich die moglichkeit zu fliegen beziehungsweise den zug zu nehmen)
		(SIMPX
			(VF ich)
			(LK wurde)
			(VC vorschlagen)
			(NF
				(SIMPX
					(VF wir)
					(LK fliegen)
					(NF
						(SIMPX
							(C da)
							(MF
								(NX wir)
								(NX
									(ADVX nur)
									[01;31m(ADJX[00m
										(ADJA begrenzte)[01;31m)[00m
									(NN zeit))
								(PX zur verfugung))
							(VC haben))))))
		(SIMPX ich weis nicht ob ihnen das recht ist)))
Step:Single Word Phrase
{'subtrees': ['ADJA'], 'family': ['ADVX', 'ADJX', 'NN'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADV', 'ADJA', 'NN'), 'right siblings': ['NN'], 'parent': 'NX', 'auto preterminal span': (21, 24), 'span': (22, 23), 'left siblings': ['ADVX'], 'label': 'ADJX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP ja grundsatzlich gabe es naturlich die moglichkeit zu fliegen beziehungsweise den zug zu nehmen ich wurde vorschlagen wir fliegen da wir nur begrenzte zeit zur verfugung haben ich weis nicht ob ihnen das recht ist)

Sentence 499:
0 Initial errors
0 on fringe, 0 iterations

Sentence 500:
9 Initial errors
0 on fringe, 6 iterations
4 Error:UNSET move
1 Error:Single Word Phrase
1 Error:NP Internal Structure
1 Error:UNSET remove
1 Error:Unary
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX es mus nicht das teuerste sein)
		(SIMPX zentrale lage ware naturlich ganz gunstig)
		(SIMPX
			(VF deswegen)
			(LK ware)
			[01;36m(MF[00m
				[01;31m(MF[00m
					(ADVX vielleicht)
					[01;31m(NX[00m
						(NX das zweite)
						[01;31m(NX[00m
							(PX von ihnen)
							[01;36m(ADJX[00m [01;31m(NX[00m [01;33m(NX[00m
								(NN genannte)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
				[01;31m(VC[00m
					[01;31m(VXINF[00m
						(VVIZU vorzuziehen)[01;31m)[00m[01;31m)[00m[01;36m)[00m))) [01;33mNX)[00m
Step:UNSET move
{'new_parent': 'NX', 'new_family': ['NN', 'VC'], 'mover info': [('VC', (20, 21))], 'old_family': ['VF', 'LK', 'MF', 'VC'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('PROP', 'VAFIN', 'ADV', 'ART', 'NN', 'APPR', 'PPER', 'NN', 'VVIZU'), 'start right siblings': [], 'end left siblings': ['NN'], 'auto preterminal span': (12, 21), 'movers': ['VC'], 'old_parent': 'SIMPX', 'POS confusion': ('VVIZU', 'VVIZU'), 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SIMPX es mus nicht das teuerste sein)
		(SIMPX zentrale lage ware naturlich ganz gunstig)
		(SIMPX
			(VF deswegen)
			(LK ware)
			(MF
				(ADVX vielleicht)
				[01;31m(NX[00m
					(NX das zweite)
					[01;31m(NX[00m
						(PX von ihnen)
						(NX
							[01;36m(ADJX[00m
								(NN genannte)[01;36m)[00m
							[01;31m(VC[00m
								[01;31m(VXINF[00m
									(VVIZU vorzuziehen)[01;31m)[00m[01;31m)[00m)[01;31m)[00m[01;31m)[00m))))
Step:Single Word Phrase
{'subtrees': ['NN'], 'family': ['ADJX', 'VC'], 'over_word': True, 'over words': True, 'auto preterminals': ('NN',), 'right siblings': [(VC (VXINF (VVIZU vorzuziehen)))], 'left siblings': [], 'auto preterminal span': (19, 20), 'span': (19, 20), 'parent': 'NX', 'label': 'ADJX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SIMPX es mus nicht das teuerste sein)
		(SIMPX zentrale lage ware naturlich ganz gunstig)
		(SIMPX
			(VF deswegen)
			(LK ware)
			(MF
				(ADVX vielleicht)
				[01;31m(NX[00m
					(NX das zweite)
					[01;31m(NX[00m
						(PX von ihnen)
						(NX
							(ADJX genannte)
							[01;31m(VC[00m
								[01;31m(VXINF[00m
									(VVIZU vorzuziehen)[01;31m)[00m[01;31m)[00m)[01;31m)[00m[01;31m)[00m))))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ART', 'NN', 'APPR', 'PPER', 'NN', 'VVIZU'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (14, 21), 'span': (15, 21), 'left siblings': ['ADVX'], 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX es mus nicht das teuerste sein)
		(SIMPX zentrale lage ware naturlich ganz gunstig)
		(SIMPX
			(VF deswegen)
			(LK ware)
			(MF
				(ADVX vielleicht)
				(NX das zweite)
				[01;31m(NX[00m
					(PX von ihnen)
					(NX
						(ADJX genannte)
						[01;31m(VC[00m
							[01;31m(VXINF[00m
								(VVIZU vorzuziehen)[01;31m)[00m[01;31m)[00m)[01;31m)[00m))))
Step:UNSET remove
{'subtrees': ['PX', 'NX'], 'family': ['ADVX', 'NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ART', 'NN', 'APPR', 'PPER', 'NN', 'VVIZU'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (14, 21), 'span': (17, 21), 'left siblings': ['ADVX', 'NX'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX es mus nicht das teuerste sein)
		(SIMPX zentrale lage ware naturlich ganz gunstig)
		(SIMPX
			(VF deswegen)
			(LK ware)
			(MF
				(ADVX vielleicht)
				(NX das zweite)
				(PX von ihnen)
				(NX
					(ADJX genannte)
					[01;31m(VC[00m
						[01;31m(VXINF[00m
							(VVIZU vorzuziehen)[01;31m)[00m[01;31m)[00m)))))
Step:Unary
{'subtrees': ['VXINF'], 'family': ['ADJX', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'VVIZU'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (19, 21), 'span': (20, 21), 'left siblings': ['ADJX'], 'label': 'VC', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX es mus nicht das teuerste sein)
		(SIMPX zentrale lage ware naturlich ganz gunstig)
		(SIMPX
			(VF deswegen)
			(LK ware)
			(MF
				(ADVX vielleicht)
				(NX das zweite)
				(PX von ihnen)
				(NX
					(ADJX genannte)
					[01;31m(VXINF[00m
						(VVIZU vorzuziehen)[01;31m)[00m)))))
Step:Single Word Phrase
{'subtrees': ['VVIZU'], 'family': ['ADJX', 'VXINF'], 'over_word': True, 'over words': True, 'auto preterminals': ('NN', 'VVIZU'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (19, 21), 'span': (20, 21), 'left siblings': ['ADJX'], 'label': 'VXINF', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP es mus nicht das teuerste sein zentrale lage ware naturlich ganz gunstig deswegen ware vielleicht das zweite von ihnen genannte vorzuziehen)

Sentence 501:
0 Initial errors
0 on fringe, 0 iterations

Sentence 502:
0 Initial errors
0 on fringe, 0 iterations

Sentence 503:
2 Initial errors
0 on fringe, 2 iterations
1 Error:UNSET remove
1 Error:NP Internal Structure
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX ich kann ihnen gleich mal einen vorschlag machen fur einen termin)
		[01;31m(NX[00m
			(ADVX zwar)
			[01;33m(NX[00m (NX die zweite juliwoche)[01;31m)[00m
		(NX die zweite halfte))) [01;33mNX)[00m
Step:UNSET remove
{'subtrees': ['ADVX', 'NX'], 'family': ['SIMPX', 'NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'NN', 'VVINF', 'APPR', 'ART', 'NN', 'ADV', 'ART', 'ADJA', 'NN', 'ART', 'ADJA', 'NN'), 'right siblings': ['NX'], 'parent': 'TURN', 'auto preterminal span': (0, 18), 'span': (11, 15), 'left siblings': ['SIMPX'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX ich kann ihnen gleich mal einen vorschlag machen fur einen termin)
		(ADVX zwar)
		[01;36m(NX[00m
			(NX die zweite juliwoche)
			(NX die zweite halfte)[01;36m)[00m))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['SIMPX', 'ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'ADJA', 'NN', 'ART', 'ADJA', 'NN'), 'right siblings': [], 'left siblings': [(SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VMFIN kann))) (MF (NX (PPER ihnen)) (ADVX (ADV gleich)) (ADVX (ADV mal)) (NX (ART einen) (NN vorschlag))) (VC (VXINF (VVINF machen))) (NF (PX (APPR fur) (NX (ART einen) (NN termin))))), (ADVX (ADV zwar))], 'auto preterminal span': (12, 18), 'span': (12, 18), 'parent': 'TURN', 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'add'}
(TOP ich kann ihnen gleich mal einen vorschlag machen fur einen termin zwar die zweite juliwoche die zweite halfte)

Sentence 504:
0 Initial errors
0 on fringe, 0 iterations

Sentence 505:
0 Initial errors
0 on fringe, 0 iterations

Sentence 506:
0 Initial errors
0 on fringe, 0 iterations

Sentence 507:
1 Initial errors
0 on fringe, 1 iterations
1 Error:UNSET add
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(PX
			(ADVX gleich)
			[01;36m(PX[00m
				(APPR in)
				(NX der fruh)[01;36m)[00m)
		(SIMPX dann konnten wir die partner schon am nachmittag treffen)
		(DM ja)
		(SIMPX das ware mir recht)))
Step:UNSET add
{'subtrees': ['APPR', 'NX'], 'family': ['ADVX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NN'), 'right siblings': [], 'left siblings': [(ADVX (ADV gleich))], 'auto preterminal span': (2, 5), 'span': (2, 5), 'parent': 'PX', 'label': 'PX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP ja gleich in der fruh dann konnten wir die partner schon am nachmittag treffen ja das ware mir recht)

Sentence 508:
24 Initial errors
0 on fringe, 18 iterations
3 Error:Modifier Attachment
2 Error:Different label
2 Error:Different label
2 Error:Different label
2 Error:Modifier Attachment
1 Error:UNSET add
1 Error:Unary
1 Error:Single Word Phrase
1 Error:Single Word Phrase
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:Unary
1 Error:UNSET remove
1 Error:Unary
1 Error:Unary
1 Error:Single Word Phrase
1 Error:Single Word Phrase
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX zur unterkunft hatte ich vorschlage zu machen)
		(SIMPX es gabe hier drei moglichkeiten)
		(DM also)
		(NX
			(NX ein hotel)
			[01;36m(R[00m
				(R was in der nahe des zentrums liegt)
				[01;36m(MF[00m
					[01;31m(PX[00m
						(ADVX auch)
						(PX mit cafeteria und terrasse)[01;31m)[00m
					(ADJX etwas gunstiger)[01;36m)[00m[01;36m)[00m)
		(DM nee)
		(SIMPX ich sehe grade das ist in der mittleren preislage)
		[01;31m(NX[00m
			(ADVX dann)
			[01;31m(NX[00m
				(NX das schloshotel)
				[01;31m(R[00m
					[01;31m(C[00m
						(NX
							(PRELS das))[01;31m)[00m
					[01;31m(MF[00m
						(PX
							(APPR in)
							(NX der nahe vom bahnhof))[01;31m)[00m
					[01;36m(LK[00m [01;31m(VC[00m
						(VXFIN
							(VAFIN ist))[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;36m(MF[00m [01;31m(SIMPX[00m
			[01;31m(VF[00m
				[01;31m(NX[00m
					(PDS das)[01;31m)[00m[01;31m)[00m
			[01;31m(LK[00m
				[01;31m(VXFIN[00m
					(VVFIN fande)[01;31m)[00m[01;31m)[00m
			(MF ich auch nicht schlecht)[01;31m)[00m[01;36m)[00m
		(SIMPX
			(KOORD und)
			(VF
				(NX
					[01;31m(NX[00m
						(ART das)
						(ADJX teuerste)
						[01;36m(NX[00m
							(NN [01;33m(NX[00m hotel)[01;36m)[00m[01;31m)[00m
					(NX amgeorgengarten))) [01;33mNX)[00m
			(LK bietet)
			(MF
				(NX
					[01;36m(MF[00m
						(NX
							(ART den)
							(NN luxus))[01;36m)[00m
					(NX
						[01;36m(NX[00m
							(ART eines)[01;36m)[00m
						[01;36m(NX[00m
							(NN schwimmbads)[01;36m)[00m)))
			[01;36m(SIMPX[00m
				(NF
					[01;31m(R[00m
						(C was)
						(MF naturlich auch nicht)
						(VC zu verachten ist)[01;31m)[00m)[01;36m)[00m)))
Step:Modifier Attachment
{'new_parent': 'VF', 'new_family': ['ART', 'ADJX', 'NX'], 'mover info': [('ART', (57, 58)), ('ADJX', (58, 59))], 'old_family': ['ART', 'ADJX', 'NN'], 'start left siblings': [], 'auto preterminals': ('ART', 'ADJA', 'NN', 'NE'), 'start right siblings': ['NN'], 'end left siblings': [], 'auto preterminal span': (57, 61), 'adding node already present': False, 'movers': ['ART', 'ADJX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': ['NX'], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'SIMPX'}
(TOP
	(TURN
		(DM ja)
		(SIMPX zur unterkunft hatte ich vorschlage zu machen)
		(SIMPX es gabe hier drei moglichkeiten)
		(DM also)
		(NX
			(NX ein hotel)
			[01;36m(R[00m
				(R was in der nahe des zentrums liegt)
				[01;36m(MF[00m
					[01;31m(PX[00m
						(ADVX auch)
						(PX mit cafeteria und terrasse)[01;31m)[00m
					(ADJX etwas gunstiger)[01;36m)[00m[01;36m)[00m)
		(DM nee)
		(SIMPX ich sehe grade das ist in der mittleren preislage)
		[01;31m(NX[00m
			(ADVX dann)
			[01;31m(NX[00m
				(NX das schloshotel)
				[01;31m(R[00m
					[01;31m(C[00m
						(NX
							(PRELS das))[01;31m)[00m
					[01;31m(MF[00m
						(PX
							(APPR in)
							(NX der nahe vom bahnhof))[01;31m)[00m
					[01;36m(LK[00m [01;31m(VC[00m
						(VXFIN
							(VAFIN ist))[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;36m(MF[00m [01;31m(SIMPX[00m
			[01;31m(VF[00m
				[01;31m(NX[00m
					(PDS das)[01;31m)[00m[01;31m)[00m
			[01;31m(LK[00m
				[01;31m(VXFIN[00m
					(VVFIN fande)[01;31m)[00m[01;31m)[00m
			(MF ich auch nicht schlecht)[01;31m)[00m[01;36m)[00m
		(SIMPX
			(KOORD und)
			(NX das teuerste hotel amgeorgengarten)
			(LK bietet)
			(MF
				(NX
					[01;36m(MF[00m
						(NX
							(ART den)
							(NN luxus))[01;36m)[00m
					(NX
						[01;36m(NX[00m
							(ART eines)[01;36m)[00m
						[01;36m(NX[00m
							(NN schwimmbads)[01;36m)[00m)))
			[01;36m(SIMPX[00m
				(NF
					[01;31m(R[00m
						(C was)
						(MF naturlich auch nicht)
						(VC zu verachten ist)[01;31m)[00m)[01;36m)[00m)))
Step:Different label
{'family': ['C', 'MF', 'LK'], 'auto preterminal span': (49, 50), 'span': (49, 50), 'subtrees': ['VXFIN'], 'parent': 'R', 'over_word': False, 'auto preterminals': ('VAFIN',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('VC', 'LK')}
(TOP
	(TURN
		(DM ja)
		(SIMPX zur unterkunft hatte ich vorschlage zu machen)
		(SIMPX es gabe hier drei moglichkeiten)
		(DM also)
		(NX
			(NX ein hotel)
			[01;36m(R[00m
				(R was in der nahe des zentrums liegt)
				[01;36m(MF[00m
					[01;31m(PX[00m
						(ADVX auch)
						(PX mit cafeteria und terrasse)[01;31m)[00m
					(ADJX etwas gunstiger)[01;36m)[00m[01;36m)[00m)
		(DM nee)
		(SIMPX ich sehe grade das ist in der mittleren preislage)
		[01;31m(NX[00m
			(ADVX dann)
			[01;31m(NX[00m
				(NX das schloshotel)
				[01;31m(R[00m
					[01;31m(C[00m
						(NX
							(PRELS das))[01;31m)[00m
					[01;31m(MF[00m
						(PX
							(APPR in)
							(NX der nahe vom bahnhof))[01;31m)[00m
					(LK ist)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;36m(MF[00m [01;31m(SIMPX[00m
			[01;31m(VF[00m
				[01;31m(NX[00m
					(PDS das)[01;31m)[00m[01;31m)[00m
			[01;31m(LK[00m
				[01;31m(VXFIN[00m
					(VVFIN fande)[01;31m)[00m[01;31m)[00m
			(MF ich auch nicht schlecht)[01;31m)[00m[01;36m)[00m
		(SIMPX
			(KOORD und)
			(NX das teuerste hotel amgeorgengarten)
			(LK bietet)
			(MF
				(NX
					[01;36m(MF[00m
						(NX
							(ART den)
							(NN luxus))[01;36m)[00m
					(NX
						[01;36m(NX[00m
							(ART eines)[01;36m)[00m
						[01;36m(NX[00m
							(NN schwimmbads)[01;36m)[00m)))
			[01;36m(SIMPX[00m
				(NF
					[01;31m(R[00m
						(C was)
						(MF naturlich auch nicht)
						(VC zu verachten ist)[01;31m)[00m)[01;36m)[00m)))
Step:Different label
{'family': ['DM', 'SIMPX', 'SIMPX', 'DM', 'NX', 'DM', 'SIMPX', 'NX', 'MF', 'SIMPX'], 'auto preterminal span': (50, 56), 'span': (50, 56), 'subtrees': ['VF', 'LK', 'MF'], 'parent': 'TURN', 'over_word': False, 'auto preterminals': ('PDS', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADJD'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('SIMPX', 'MF')}
(TOP
	(TURN
		(DM ja)
		(SIMPX zur unterkunft hatte ich vorschlage zu machen)
		(SIMPX es gabe hier drei moglichkeiten)
		(DM also)
		(NX
			(NX ein hotel)
			[01;36m(R[00m
				(R was in der nahe des zentrums liegt)
				[01;36m(MF[00m
					[01;31m(PX[00m
						(ADVX auch)
						(PX mit cafeteria und terrasse)[01;31m)[00m
					(ADJX etwas gunstiger)[01;36m)[00m[01;36m)[00m)
		(DM nee)
		(SIMPX ich sehe grade das ist in der mittleren preislage)
		[01;31m(NX[00m
			(ADVX dann)
			[01;31m(NX[00m
				(NX das schloshotel)
				[01;31m(R[00m
					[01;31m(C[00m
						(NX
							(PRELS das))[01;31m)[00m
					[01;31m(MF[00m
						(PX
							(APPR in)
							(NX der nahe vom bahnhof))[01;31m)[00m
					(LK ist)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(MF
			[01;31m(VF[00m
				[01;31m(NX[00m
					(PDS das)[01;31m)[00m[01;31m)[00m
			[01;31m(LK[00m
				[01;31m(VXFIN[00m
					(VVFIN fande)[01;31m)[00m[01;31m)[00m
			(MF ich auch nicht schlecht))
		(SIMPX
			(KOORD und)
			(NX das teuerste hotel amgeorgengarten)
			(LK bietet)
			(MF
				(NX
					[01;36m(MF[00m
						(NX
							(ART den)
							(NN luxus))[01;36m)[00m
					(NX
						[01;36m(NX[00m
							(ART eines)[01;36m)[00m
						[01;36m(NX[00m
							(NN schwimmbads)[01;36m)[00m)))
			[01;36m(SIMPX[00m
				(NF
					[01;31m(R[00m
						(C was)
						(MF naturlich auch nicht)
						(VC zu verachten ist)[01;31m)[00m)[01;36m)[00m)))
Step:Different label
{'family': ['SIMPX'], 'auto preterminal span': (66, 73), 'span': (66, 73), 'subtrees': ['C', 'MF', 'VC'], 'parent': 'NF', 'over_word': False, 'auto preterminals': ('PRELS', 'ADV', 'ADV', 'PTKNEG', 'PTKZU', 'VVINF', 'VAFIN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('R', 'SIMPX')}
(TOP
	(TURN
		(DM ja)
		(SIMPX zur unterkunft hatte ich vorschlage zu machen)
		(SIMPX es gabe hier drei moglichkeiten)
		(DM also)
		(NX
			(NX ein hotel)
			[01;36m(R[00m
				(R was in der nahe des zentrums liegt)
				[01;36m(MF[00m
					[01;31m(PX[00m
						(ADVX auch)
						(PX mit cafeteria und terrasse)[01;31m)[00m
					(ADJX etwas gunstiger)[01;36m)[00m[01;36m)[00m)
		(DM nee)
		(SIMPX ich sehe grade das ist in der mittleren preislage)
		[01;31m(NX[00m
			(ADVX dann)
			[01;31m(NX[00m
				(NX das schloshotel)
				[01;31m(R[00m
					[01;31m(C[00m
						(NX
							(PRELS das))[01;31m)[00m
					[01;31m(MF[00m
						(PX
							(APPR in)
							(NX der nahe vom bahnhof))[01;31m)[00m
					(LK ist)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(MF
			[01;31m(VF[00m
				[01;31m(NX[00m
					(PDS das)[01;31m)[00m[01;31m)[00m
			[01;31m(LK[00m
				[01;31m(VXFIN[00m
					(VVFIN fande)[01;31m)[00m[01;31m)[00m
			(MF ich auch nicht schlecht))
		(SIMPX
			(KOORD und)
			(NX das teuerste hotel amgeorgengarten)
			(LK bietet)
			(MF
				(NX
					[01;36m(MF[00m
						(NX
							(ART den)
							(NN luxus))[01;36m)[00m
					(NX
						[01;36m(NX[00m
							(ART eines)[01;36m)[00m
						[01;36m(NX[00m
							(NN schwimmbads)[01;36m)[00m)))
			(NF was naturlich auch nicht zu verachten ist))))
Step:Modifier Attachment
{'new_parent': 'NX', 'new_family': ['NX', 'R', 'ADVX', 'PX', 'ADJX'], 'mover info': [('ADVX', (23, 24))], 'old_family': ['ADVX', 'PX'], 'start left siblings': [], 'auto preterminals': ('ART', 'NN', 'PRELS', 'APPR', 'ART', 'NN', 'ART', 'NN', 'VVFIN', 'ADV', 'APPR', 'NN', 'KON', 'NN', 'ADV', 'ADJD'), 'start right siblings': ['PX'], 'end left siblings': ['NX', 'R'], 'auto preterminal span': (14, 30), 'adding node already present': False, 'movers': ['ADVX'], 'old_parent': 'PX', 'POS confusion': ('ADV', 'ADV'), 'added and moved': True, 'end right siblings': ['PX', 'ADJX'], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(DM ja)
		(SIMPX zur unterkunft hatte ich vorschlage zu machen)
		(SIMPX es gabe hier drei moglichkeiten)
		(DM also)
		(NX
			(NX ein hotel)
			[01;36m(R[00m
				(R was in der nahe des zentrums liegt)
				(MF auch mit cafeteria und terrasse etwas gunstiger)[01;36m)[00m)
		(DM nee)
		(SIMPX ich sehe grade das ist in der mittleren preislage)
		[01;31m(NX[00m
			(ADVX dann)
			[01;31m(NX[00m
				(NX das schloshotel)
				[01;31m(R[00m
					[01;31m(C[00m
						(NX
							(PRELS das))[01;31m)[00m
					[01;31m(MF[00m
						(PX
							(APPR in)
							(NX der nahe vom bahnhof))[01;31m)[00m
					(LK ist)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(MF
			[01;31m(VF[00m
				[01;31m(NX[00m
					(PDS das)[01;31m)[00m[01;31m)[00m
			[01;31m(LK[00m
				[01;31m(VXFIN[00m
					(VVFIN fande)[01;31m)[00m[01;31m)[00m
			(MF ich auch nicht schlecht))
		(SIMPX
			(KOORD und)
			(NX das teuerste hotel amgeorgengarten)
			(LK bietet)
			(MF
				(NX
					[01;36m(MF[00m
						(NX
							(ART den)
							(NN luxus))[01;36m)[00m
					(NX
						[01;36m(NX[00m
							(ART eines)[01;36m)[00m
						[01;36m(NX[00m
							(NN schwimmbads)[01;36m)[00m)))
			(NF was naturlich auch nicht zu verachten ist))))
Step:UNSET add
{'subtrees': ['R', 'MF'], 'family': ['NX', 'R'], 'over_word': False, 'over words': False, 'auto preterminals': ('PRELS', 'APPR', 'ART', 'NN', 'ART', 'NN', 'VVFIN', 'ADV', 'APPR', 'NN', 'KON', 'NN', 'ADV', 'ADJD'), 'right siblings': [], 'left siblings': [(NX (ART ein) (NN hotel))], 'auto preterminal span': (16, 30), 'span': (16, 30), 'parent': 'NX', 'label': 'R', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX zur unterkunft hatte ich vorschlage zu machen)
		(SIMPX es gabe hier drei moglichkeiten)
		(DM also)
		(NX ein hotel was in der nahe des zentrums liegt auch mit cafeteria und terrasse etwas gunstiger)
		(DM nee)
		(SIMPX ich sehe grade das ist in der mittleren preislage)
		[01;31m(NX[00m
			(ADVX dann)
			[01;31m(NX[00m
				(NX das schloshotel)
				[01;31m(R[00m
					[01;31m(C[00m
						(NX
							(PRELS das))[01;31m)[00m
					[01;31m(MF[00m
						(PX
							(APPR in)
							(NX der nahe vom bahnhof))[01;31m)[00m
					(LK ist)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(MF
			[01;31m(VF[00m
				[01;31m(NX[00m
					(PDS das)[01;31m)[00m[01;31m)[00m
			[01;31m(LK[00m
				[01;31m(VXFIN[00m
					(VVFIN fande)[01;31m)[00m[01;31m)[00m
			(MF ich auch nicht schlecht))
		(SIMPX
			(KOORD und)
			(NX das teuerste hotel amgeorgengarten)
			(LK bietet)
			(MF
				(NX
					[01;36m(MF[00m
						(NX
							(ART den)
							(NN luxus))[01;36m)[00m
					(NX
						[01;36m(NX[00m
							(ART eines)[01;36m)[00m
						[01;36m(NX[00m
							(NN schwimmbads)[01;36m)[00m)))
			(NF was naturlich auch nicht zu verachten ist))))
Step:Unary
{'subtrees': ['NX'], 'family': ['MF', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN'), 'right siblings': [(NX (ART eines) (NN schwimmbads))], 'left siblings': [], 'auto preterminal span': (62, 64), 'span': (62, 64), 'parent': 'NX', 'label': 'MF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX zur unterkunft hatte ich vorschlage zu machen)
		(SIMPX es gabe hier drei moglichkeiten)
		(DM also)
		(NX ein hotel was in der nahe des zentrums liegt auch mit cafeteria und terrasse etwas gunstiger)
		(DM nee)
		(SIMPX ich sehe grade das ist in der mittleren preislage)
		[01;31m(NX[00m
			(ADVX dann)
			[01;31m(NX[00m
				(NX das schloshotel)
				[01;31m(R[00m
					[01;31m(C[00m
						(NX
							(PRELS das))[01;31m)[00m
					[01;31m(MF[00m
						(PX
							(APPR in)
							(NX der nahe vom bahnhof))[01;31m)[00m
					(LK ist)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(MF
			[01;31m(VF[00m
				[01;31m(NX[00m
					(PDS das)[01;31m)[00m[01;31m)[00m
			[01;31m(LK[00m
				[01;31m(VXFIN[00m
					(VVFIN fande)[01;31m)[00m[01;31m)[00m
			(MF ich auch nicht schlecht))
		(SIMPX
			(KOORD und)
			(NX das teuerste hotel amgeorgengarten)
			(LK bietet)
			(MF
				(NX
					(MF den luxus)
					(NX
						[01;36m(NX[00m
							(ART eines)[01;36m)[00m
						[01;36m(NX[00m
							(NN schwimmbads)[01;36m)[00m)))
			(NF was naturlich auch nicht zu verachten ist))))
Step:Single Word Phrase
{'subtrees': ['ART'], 'family': ['NX', 'NN'], 'over_word': True, 'over words': True, 'auto preterminals': ('ART',), 'right siblings': [(NN schwimmbads)], 'left siblings': [], 'auto preterminal span': (64, 65), 'span': (64, 65), 'parent': 'NX', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX zur unterkunft hatte ich vorschlage zu machen)
		(SIMPX es gabe hier drei moglichkeiten)
		(DM also)
		(NX ein hotel was in der nahe des zentrums liegt auch mit cafeteria und terrasse etwas gunstiger)
		(DM nee)
		(SIMPX ich sehe grade das ist in der mittleren preislage)
		[01;31m(NX[00m
			(ADVX dann)
			[01;31m(NX[00m
				(NX das schloshotel)
				[01;31m(R[00m
					[01;31m(C[00m
						(NX
							(PRELS das))[01;31m)[00m
					[01;31m(MF[00m
						(PX
							(APPR in)
							(NX der nahe vom bahnhof))[01;31m)[00m
					(LK ist)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(MF
			[01;31m(VF[00m
				[01;31m(NX[00m
					(PDS das)[01;31m)[00m[01;31m)[00m
			[01;31m(LK[00m
				[01;31m(VXFIN[00m
					(VVFIN fande)[01;31m)[00m[01;31m)[00m
			(MF ich auch nicht schlecht))
		(SIMPX
			(KOORD und)
			(NX das teuerste hotel amgeorgengarten)
			(LK bietet)
			(MF
				(NX
					(MF den luxus)
					(NX
						(NX eines)
						[01;36m(NX[00m
							(NN schwimmbads)[01;36m)[00m)))
			(NF was naturlich auch nicht zu verachten ist))))
Step:Single Word Phrase
{'subtrees': ['NN'], 'family': ['NX', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('NN',), 'right siblings': [], 'left siblings': [(NX (ART eines))], 'auto preterminal span': (65, 66), 'span': (65, 66), 'parent': 'NX', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX zur unterkunft hatte ich vorschlage zu machen)
		(SIMPX es gabe hier drei moglichkeiten)
		(DM also)
		(NX ein hotel was in der nahe des zentrums liegt auch mit cafeteria und terrasse etwas gunstiger)
		(DM nee)
		(SIMPX ich sehe grade das ist in der mittleren preislage)
		[01;31m(NX[00m
			(ADVX dann)
			[01;31m(NX[00m
				(NX das schloshotel)
				[01;31m(R[00m
					[01;31m(C[00m
						(NX
							(PRELS das))[01;31m)[00m
					[01;31m(MF[00m
						(PX
							(APPR in)
							(NX der nahe vom bahnhof))[01;31m)[00m
					(LK ist)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(MF
			[01;31m(VF[00m
				[01;31m(NX[00m
					(PDS das)[01;31m)[00m[01;31m)[00m
			[01;31m(LK[00m
				[01;31m(VXFIN[00m
					(VVFIN fande)[01;31m)[00m[01;31m)[00m
			(MF ich auch nicht schlecht))
		(SIMPX und das teuerste hotel amgeorgengarten bietet den luxus eines schwimmbads was naturlich auch nicht zu verachten ist)))
Step:UNSET remove
{'subtrees': ['ADVX', 'NX'], 'family': ['DM', 'SIMPX', 'SIMPX', 'DM', 'NX', 'DM', 'SIMPX', 'NX', 'MF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'APPRART', 'NN', 'VAFIN', 'PPER', 'NN', 'PTKZU', 'VVINF', 'PPER', 'VVFIN', 'ADV', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'PRELS', 'APPR', 'ART', 'NN', 'ART', 'NN', 'VVFIN', 'ADV', 'APPR', 'NN', 'KON', 'NN', 'ADV', 'ADJD', 'PTKANT', 'PPER', 'VVFIN', 'ADV', 'PDS', 'VAFIN', 'APPR', 'ART', 'ADJA', 'NN', 'ADV', 'ART', 'NE', 'PRELS', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'VAFIN', 'PDS', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADJD', 'KON', 'ART', 'ADJA', 'NN', 'NE', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'PRELS', 'ADV', 'ADV', 'PTKNEG', 'PTKZU', 'VVINF', 'VAFIN'), 'right siblings': ['MF', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 73), 'span': (40, 50), 'left siblings': ['DM', 'SIMPX', 'SIMPX', 'DM', 'NX', 'DM', 'SIMPX'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX zur unterkunft hatte ich vorschlage zu machen)
		(SIMPX es gabe hier drei moglichkeiten)
		(DM also)
		(NX ein hotel was in der nahe des zentrums liegt auch mit cafeteria und terrasse etwas gunstiger)
		(DM nee)
		(SIMPX ich sehe grade das ist in der mittleren preislage)
		(ADVX dann)
		[01;31m(NX[00m
			(NX das schloshotel)
			[01;31m(R[00m
				[01;31m(C[00m
					(NX
						(PRELS das))[01;31m)[00m
				[01;31m(MF[00m
					(PX
						(APPR in)
						(NX der nahe vom bahnhof))[01;31m)[00m
				(LK ist)[01;31m)[00m[01;31m)[00m
		(MF
			[01;31m(VF[00m
				[01;31m(NX[00m
					(PDS das)[01;31m)[00m[01;31m)[00m
			[01;31m(LK[00m
				[01;31m(VXFIN[00m
					(VVFIN fande)[01;31m)[00m[01;31m)[00m
			(MF ich auch nicht schlecht))
		(SIMPX und das teuerste hotel amgeorgengarten bietet den luxus eines schwimmbads was naturlich auch nicht zu verachten ist)))
Step:UNSET remove
{'subtrees': ['NX', 'R'], 'family': ['DM', 'SIMPX', 'SIMPX', 'DM', 'NX', 'DM', 'SIMPX', 'ADVX', 'NX', 'MF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'APPRART', 'NN', 'VAFIN', 'PPER', 'NN', 'PTKZU', 'VVINF', 'PPER', 'VVFIN', 'ADV', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'PRELS', 'APPR', 'ART', 'NN', 'ART', 'NN', 'VVFIN', 'ADV', 'APPR', 'NN', 'KON', 'NN', 'ADV', 'ADJD', 'PTKANT', 'PPER', 'VVFIN', 'ADV', 'PDS', 'VAFIN', 'APPR', 'ART', 'ADJA', 'NN', 'ADV', 'ART', 'NE', 'PRELS', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'VAFIN', 'PDS', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADJD', 'KON', 'ART', 'ADJA', 'NN', 'NE', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'PRELS', 'ADV', 'ADV', 'PTKNEG', 'PTKZU', 'VVINF', 'VAFIN'), 'right siblings': ['MF', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 73), 'span': (41, 50), 'left siblings': ['DM', 'SIMPX', 'SIMPX', 'DM', 'NX', 'DM', 'SIMPX', 'ADVX'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX zur unterkunft hatte ich vorschlage zu machen)
		(SIMPX es gabe hier drei moglichkeiten)
		(DM also)
		(NX ein hotel was in der nahe des zentrums liegt auch mit cafeteria und terrasse etwas gunstiger)
		(DM nee)
		(SIMPX ich sehe grade das ist in der mittleren preislage)
		(ADVX dann)
		(NX das schloshotel)
		[01;31m(R[00m
			[01;31m(C[00m
				(NX
					(PRELS das))[01;31m)[00m
			[01;31m(MF[00m
				(PX
					(APPR in)
					(NX der nahe vom bahnhof))[01;31m)[00m
			(LK ist)[01;31m)[00m
		(MF
			[01;31m(VF[00m
				[01;31m(NX[00m
					(PDS das)[01;31m)[00m[01;31m)[00m
			[01;31m(LK[00m
				[01;31m(VXFIN[00m
					(VVFIN fande)[01;31m)[00m[01;31m)[00m
			(MF ich auch nicht schlecht))
		(SIMPX und das teuerste hotel amgeorgengarten bietet den luxus eines schwimmbads was naturlich auch nicht zu verachten ist)))
Step:Unary
{'subtrees': ['NX'], 'family': ['C', 'MF', 'LK'], 'over_word': False, 'over words': False, 'auto preterminals': ('PRELS', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'VAFIN'), 'right siblings': ['MF', 'LK'], 'parent': 'R', 'auto preterminal span': (43, 50), 'span': (43, 44), 'left siblings': [], 'label': 'C', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX zur unterkunft hatte ich vorschlage zu machen)
		(SIMPX es gabe hier drei moglichkeiten)
		(DM also)
		(NX ein hotel was in der nahe des zentrums liegt auch mit cafeteria und terrasse etwas gunstiger)
		(DM nee)
		(SIMPX ich sehe grade das ist in der mittleren preislage)
		(ADVX dann)
		(NX das schloshotel)
		[01;31m(R[00m
			(NX das)
			[01;31m(MF[00m
				(PX
					(APPR in)
					(NX der nahe vom bahnhof))[01;31m)[00m
			(LK ist)[01;31m)[00m
		(MF
			[01;31m(VF[00m
				[01;31m(NX[00m
					(PDS das)[01;31m)[00m[01;31m)[00m
			[01;31m(LK[00m
				[01;31m(VXFIN[00m
					(VVFIN fande)[01;31m)[00m[01;31m)[00m
			(MF ich auch nicht schlecht))
		(SIMPX und das teuerste hotel amgeorgengarten bietet den luxus eines schwimmbads was naturlich auch nicht zu verachten ist)))
Step:UNSET remove
{'subtrees': ['NX', 'MF', 'LK'], 'family': ['DM', 'SIMPX', 'SIMPX', 'DM', 'NX', 'DM', 'SIMPX', 'ADVX', 'NX', 'R', 'MF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'APPRART', 'NN', 'VAFIN', 'PPER', 'NN', 'PTKZU', 'VVINF', 'PPER', 'VVFIN', 'ADV', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'PRELS', 'APPR', 'ART', 'NN', 'ART', 'NN', 'VVFIN', 'ADV', 'APPR', 'NN', 'KON', 'NN', 'ADV', 'ADJD', 'PTKANT', 'PPER', 'VVFIN', 'ADV', 'PDS', 'VAFIN', 'APPR', 'ART', 'ADJA', 'NN', 'ADV', 'ART', 'NE', 'PRELS', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'VAFIN', 'PDS', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADJD', 'KON', 'ART', 'ADJA', 'NN', 'NE', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'PRELS', 'ADV', 'ADV', 'PTKNEG', 'PTKZU', 'VVINF', 'VAFIN'), 'right siblings': ['MF', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 73), 'span': (43, 50), 'left siblings': ['DM', 'SIMPX', 'SIMPX', 'DM', 'NX', 'DM', 'SIMPX', 'ADVX', 'NX'], 'label': 'R', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX zur unterkunft hatte ich vorschlage zu machen)
		(SIMPX es gabe hier drei moglichkeiten)
		(DM also)
		(NX ein hotel was in der nahe des zentrums liegt auch mit cafeteria und terrasse etwas gunstiger)
		(DM nee)
		(SIMPX ich sehe grade das ist in der mittleren preislage)
		(ADVX dann)
		(NX das schloshotel)
		(NX das)
		[01;31m(MF[00m
			(PX
				(APPR in)
				(NX der nahe vom bahnhof))[01;31m)[00m
		(LK ist)
		(MF
			[01;31m(VF[00m
				[01;31m(NX[00m
					(PDS das)[01;31m)[00m[01;31m)[00m
			[01;31m(LK[00m
				[01;31m(VXFIN[00m
					(VVFIN fande)[01;31m)[00m[01;31m)[00m
			(MF ich auch nicht schlecht))
		(SIMPX und das teuerste hotel amgeorgengarten bietet den luxus eines schwimmbads was naturlich auch nicht zu verachten ist)))
Step:Unary
{'subtrees': ['PX'], 'family': ['DM', 'SIMPX', 'SIMPX', 'DM', 'NX', 'DM', 'SIMPX', 'ADVX', 'NX', 'NX', 'MF', 'LK', 'MF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'APPRART', 'NN', 'VAFIN', 'PPER', 'NN', 'PTKZU', 'VVINF', 'PPER', 'VVFIN', 'ADV', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'PRELS', 'APPR', 'ART', 'NN', 'ART', 'NN', 'VVFIN', 'ADV', 'APPR', 'NN', 'KON', 'NN', 'ADV', 'ADJD', 'PTKANT', 'PPER', 'VVFIN', 'ADV', 'PDS', 'VAFIN', 'APPR', 'ART', 'ADJA', 'NN', 'ADV', 'ART', 'NE', 'PRELS', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'VAFIN', 'PDS', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADJD', 'KON', 'ART', 'ADJA', 'NN', 'NE', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'PRELS', 'ADV', 'ADV', 'PTKNEG', 'PTKZU', 'VVINF', 'VAFIN'), 'right siblings': ['LK', 'MF', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 73), 'span': (44, 49), 'left siblings': ['DM', 'SIMPX', 'SIMPX', 'DM', 'NX', 'DM', 'SIMPX', 'ADVX', 'NX', 'NX'], 'label': 'MF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX zur unterkunft hatte ich vorschlage zu machen)
		(SIMPX es gabe hier drei moglichkeiten)
		(DM also)
		(NX ein hotel was in der nahe des zentrums liegt auch mit cafeteria und terrasse etwas gunstiger)
		(DM nee)
		(SIMPX ich sehe grade das ist in der mittleren preislage)
		(ADVX dann)
		(NX das schloshotel)
		(NX das)
		(PX in der nahe vom bahnhof)
		(LK ist)
		(MF
			[01;31m(VF[00m
				[01;31m(NX[00m
					(PDS das)[01;31m)[00m[01;31m)[00m
			[01;31m(LK[00m
				[01;31m(VXFIN[00m
					(VVFIN fande)[01;31m)[00m[01;31m)[00m
			(MF ich auch nicht schlecht))
		(SIMPX und das teuerste hotel amgeorgengarten bietet den luxus eines schwimmbads was naturlich auch nicht zu verachten ist)))
Step:Unary
{'subtrees': ['NX'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADJD'), 'right siblings': ['LK', 'MF'], 'parent': 'MF', 'auto preterminal span': (50, 56), 'span': (50, 51), 'left siblings': [], 'label': 'VF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX zur unterkunft hatte ich vorschlage zu machen)
		(SIMPX es gabe hier drei moglichkeiten)
		(DM also)
		(NX ein hotel was in der nahe des zentrums liegt auch mit cafeteria und terrasse etwas gunstiger)
		(DM nee)
		(SIMPX ich sehe grade das ist in der mittleren preislage)
		(ADVX dann)
		(NX das schloshotel)
		(NX das)
		(PX in der nahe vom bahnhof)
		(LK ist)
		(MF
			[01;31m(NX[00m
				(PDS das)[01;31m)[00m
			[01;31m(LK[00m
				[01;31m(VXFIN[00m
					(VVFIN fande)[01;31m)[00m[01;31m)[00m
			(MF ich auch nicht schlecht))
		(SIMPX und das teuerste hotel amgeorgengarten bietet den luxus eines schwimmbads was naturlich auch nicht zu verachten ist)))
Step:Single Word Phrase
{'subtrees': ['PDS'], 'family': ['NX', 'LK', 'MF'], 'over_word': True, 'over words': True, 'auto preterminals': ('PDS', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADJD'), 'right siblings': ['LK', 'MF'], 'parent': 'MF', 'auto preterminal span': (50, 56), 'span': (50, 51), 'left siblings': [], 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX zur unterkunft hatte ich vorschlage zu machen)
		(SIMPX es gabe hier drei moglichkeiten)
		(DM also)
		(NX ein hotel was in der nahe des zentrums liegt auch mit cafeteria und terrasse etwas gunstiger)
		(DM nee)
		(SIMPX ich sehe grade das ist in der mittleren preislage)
		(ADVX dann)
		(NX das schloshotel)
		(NX das)
		(PX in der nahe vom bahnhof)
		(LK ist)
		(MF
			(PDS das)
			[01;31m(LK[00m
				[01;31m(VXFIN[00m
					(VVFIN fande)[01;31m)[00m[01;31m)[00m
			(MF ich auch nicht schlecht))
		(SIMPX und das teuerste hotel amgeorgengarten bietet den luxus eines schwimmbads was naturlich auch nicht zu verachten ist)))
Step:Single Word Phrase
{'subtrees': ['VVFIN'], 'family': ['VXFIN'], 'over_word': True, 'over words': True, 'auto preterminals': ('VVFIN',), 'right siblings': [], 'parent': 'LK', 'auto preterminal span': (51, 52), 'span': (51, 52), 'left siblings': [], 'label': 'VXFIN', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX zur unterkunft hatte ich vorschlage zu machen)
		(SIMPX es gabe hier drei moglichkeiten)
		(DM also)
		(NX ein hotel was in der nahe des zentrums liegt auch mit cafeteria und terrasse etwas gunstiger)
		(DM nee)
		(SIMPX ich sehe grade das ist in der mittleren preislage)
		(ADVX dann)
		(NX das schloshotel)
		(NX das)
		(PX in der nahe vom bahnhof)
		(LK ist)
		(MF
			(PDS das)
			[01;31m(LK[00m
				(VVFIN fande)[01;31m)[00m
			(MF ich auch nicht schlecht))
		(SIMPX und das teuerste hotel amgeorgengarten bietet den luxus eines schwimmbads was naturlich auch nicht zu verachten ist)))
Step:Single Word Phrase
{'subtrees': ['VVFIN'], 'family': ['PDS', 'LK', 'MF'], 'over_word': True, 'over words': True, 'auto preterminals': ('PDS', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADJD'), 'right siblings': ['MF'], 'parent': 'MF', 'auto preterminal span': (50, 56), 'span': (51, 52), 'left siblings': ['PDS'], 'label': 'LK', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP ja zur unterkunft hatte ich vorschlage zu machen es gabe hier drei moglichkeiten also ein hotel was in der nahe des zentrums liegt auch mit cafeteria und terrasse etwas gunstiger nee ich sehe grade das ist in der mittleren preislage dann das schloshotel das in der nahe vom bahnhof ist das fande ich auch nicht schlecht und das teuerste hotel amgeorgengarten bietet den luxus eines schwimmbads was naturlich auch nicht zu verachten ist)

Sentence 509:
0 Initial errors
0 on fringe, 0 iterations

Sentence 510:
3 Initial errors
0 on fringe, 1 iterations
3 Error:UNSET move
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM nee)
		(SIMPX
			(VF ich)
			(LK hatte)
			[01;36m(PX[00m
				[01;36m(MF[00m
					(APPR in)
					[01;31m(MF[00m
						(NX
							(DP so wenig)
							(NN zeit))[01;31m)[00m[01;36m)[00m[01;36m)[00m
			(NF das ich mich darum nicht gekummert habe))
		(SIMPX aber es ware ein guter anlas)
		(NX das)))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['APPR', 'NX'], 'mover info': [('APPR', (3, 4))], 'old_family': ['VF', 'LK', 'APPR', 'MF', 'NF'], 'start left siblings': ['VF', 'LK'], 'auto preterminals': ('PPER', 'VAFIN', 'APPR', 'ADV', 'PIAT', 'NN', 'KOUS', 'PPER', 'PRF', 'PROP', 'PTKNEG', 'VVPP', 'VAFIN'), 'start right siblings': ['MF', 'NF'], 'end left siblings': [], 'auto preterminal span': (1, 14), 'adding node already present': False, 'movers': ['APPR'], 'old_parent': 'SIMPX', 'POS confusion': ('APPR', 'APPR'), 'added and moved': True, 'end right siblings': ['NX'], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'PX'}
(TOP nee ich hatte in so wenig zeit das ich mich darum nicht gekummert habe aber es ware ein guter anlas das)

Sentence 511:
0 Initial errors
0 on fringe, 0 iterations

Sentence 512:
0 Initial errors
0 on fringe, 0 iterations

Sentence 513:
25 Initial errors
0 on fringe, 16 iterations
5 Error:VP Attachment
2 Error:Single Word Phrase
2 Error:Single Word Phrase
2 Error:PP Attachment
2 Error:Clause Attachment
1 Error:Modifier Attachment
1 Error:Single Word Phrase
1 Error:PP Attachment
2 Error:Clause Attachment
1 Error:PP Attachment
1 Error:Clause Attachment
1 Error:UNSET remove
1 Error:Single Word Phrase
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET add
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX
			(VF wir)
			(LK wollten)
			[01;31m(FKOORD[00m
				(MVC uns ja fur ein meeting treffen)
				(KON beziehungsweise)
				[01;31m(MVC[00m [01;33m(MVCN (MVCN[00m
					(MF eines)
					(VC ausmachen)[01;31m)[00m[01;31m)[00m
			[01;31m(NF[00m
				[01;31m(PX[00m
					(PX in hannover) [01;33mMVCN)[00m
					[01;33m(SIMPX[00m (SIMPX wenn ich mich recht entsinne)[01;31m)[00m
				[01;36m(NF[00m
					(SIMPX
						[01;31m(C[00m
							(KOUS weil)[01;31m)[00m
						[01;31m(MF[00m [01;33m(MF[00m
							(ADVX da)
							[01;36m(NX[00m
								[01;33m(MF[00m (NX die geschaftspartner)
								(ADVX auch)
								(NX eine filiale)[01;36m)[00m
							(ADVX jetzt)[01;31m)[00m
						[01;31m(VC[00m
							[01;36m(ADJX[00m [01;31m(VXINF[00m
								(VVPP eroffnet)[01;31m)[00m [01;33mMF) MF)[00m[01;36m)[00m
							[01;36m(VC[00m
								(VXFIN
									(VAFIN haben))[01;36m)[00m[01;31m)[00m)[01;36m)[00m[01;31m)[00m) [01;33mSIMPX) MVCN)[00m
		[01;31m(SIMPX[00m
			[01;36m(DM[00m [01;31m(KOORD[00m
				(KON und)[01;31m)[00m[01;36m)[00m
			(DM ja)
			(SIMPX ich weis nicht)
			[01;36m(SIMPX[00m
				(VF es)
				(LK sollte)
				[01;33m(MF[00m (MF auf alle falle noch in den nachsten drei monaten)
				(VC geschehen)
				[01;31m(NF[00m
					[01;31m(PX[00m
						(NX meiner ansicht) [01;33mMF)[00m
						[01;36m(VC[00m
							(APPO nach)[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m
		(SIMPX wie sehen sie das)))
Step:VP Attachment
{'new_parent': 'MF', 'new_family': ['ADVX', 'NX', 'ADVX', 'NX', 'ADVX', 'VXINF'], 'mover info': [('VXINF', (26, 27))], 'old_family': ['VXINF', 'VXFIN'], 'start left siblings': [], 'auto preterminals': ('KOUS', 'ADV', 'ART', 'NN', 'ADV', 'ART', 'NN', 'ADV', 'VVPP', 'VAFIN'), 'start right siblings': ['VXFIN'], 'end left siblings': ['ADVX', 'NX', 'ADVX', 'NX', 'ADVX'], 'auto preterminal span': (18, 28), 'adding node already present': False, 'movers': ['VXINF'], 'old_parent': 'VC', 'POS confusion': ('VVPP', 'VVPP'), 'added and moved': True, 'end right siblings': [], 'classified_type': 'VP Attachment', 'type': 'move', 'added label': 'VC'}
(TOP
	(TURN
		(SIMPX
			(VF wir)
			(LK wollten)
			[01;31m(FKOORD[00m
				(MVC uns ja fur ein meeting treffen)
				(KON beziehungsweise)
				[01;31m(MVC[00m [01;33m(MVCN (MVCN[00m
					(MF eines)
					(VC ausmachen)[01;31m)[00m[01;31m)[00m
			[01;31m(NF[00m
				[01;31m(PX[00m
					(PX in hannover) [01;33mMVCN)[00m
					[01;33m(SIMPX[00m (SIMPX wenn ich mich recht entsinne)[01;31m)[00m
				[01;36m(NF[00m
					(SIMPX
						[01;31m(C[00m
							(KOUS weil)[01;31m)[00m
						(MF
							(ADVX da)
							(MF
								[01;36m(NX[00m
									(NX die geschaftspartner)
									(ADVX auch)
									(NX eine filiale)[01;36m)[00m
								(ADVX jetzt)
								[01;36m(ADJX[00m [01;31m(VXINF[00m
									(VVPP eroffnet)[01;31m)[00m[01;36m)[00m))
						(VC haben))[01;36m)[00m[01;31m)[00m) [01;33mSIMPX) MVCN)[00m
		[01;31m(SIMPX[00m
			[01;36m(DM[00m [01;31m(KOORD[00m
				(KON und)[01;31m)[00m[01;36m)[00m
			(DM ja)
			(SIMPX ich weis nicht)
			[01;36m(SIMPX[00m
				(VF es)
				(LK sollte)
				[01;33m(MF[00m (MF auf alle falle noch in den nachsten drei monaten)
				(VC geschehen)
				[01;31m(NF[00m
					[01;31m(PX[00m
						(NX meiner ansicht) [01;33mMF)[00m
						[01;36m(VC[00m
							(APPO nach)[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m
		(SIMPX wie sehen sie das)))
Step:Single Word Phrase
{'family': ['NX', 'ADVX', 'NX', 'ADVX', 'ADJX'], 'auto preterminal span': (26, 27), 'span': (26, 27), 'subtrees': ['VVPP'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('VVPP',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VXINF', 'ADJX')}
(TOP
	(TURN
		(SIMPX
			(VF wir)
			(LK wollten)
			[01;31m(FKOORD[00m
				(MVC uns ja fur ein meeting treffen)
				(KON beziehungsweise)
				[01;31m(MVC[00m [01;33m(MVCN (MVCN[00m
					(MF eines)
					(VC ausmachen)[01;31m)[00m[01;31m)[00m
			[01;31m(NF[00m
				[01;31m(PX[00m
					(PX in hannover) [01;33mMVCN)[00m
					[01;33m(SIMPX[00m (SIMPX wenn ich mich recht entsinne)[01;31m)[00m
				[01;36m(NF[00m
					(SIMPX
						[01;31m(C[00m
							(KOUS weil)[01;31m)[00m
						(MF
							(ADVX da)
							(MF
								[01;36m(NX[00m
									(NX die geschaftspartner)
									(ADVX auch)
									(NX eine filiale)[01;36m)[00m
								(ADVX jetzt)
								(ADJX eroffnet)))
						(VC haben))[01;36m)[00m[01;31m)[00m) [01;33mSIMPX) MVCN)[00m
		[01;31m(SIMPX[00m
			[01;36m(DM[00m [01;31m(KOORD[00m
				(KON und)[01;31m)[00m[01;36m)[00m
			(DM ja)
			(SIMPX ich weis nicht)
			[01;36m(SIMPX[00m
				(VF es)
				(LK sollte)
				[01;33m(MF[00m (MF auf alle falle noch in den nachsten drei monaten)
				(VC geschehen)
				[01;31m(NF[00m
					[01;31m(PX[00m
						(NX meiner ansicht) [01;33mMF)[00m
						[01;36m(VC[00m
							(APPO nach)[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m
		(SIMPX wie sehen sie das)))
Step:Single Word Phrase
{'family': ['DM', 'DM', 'SIMPX', 'VF', 'LK', 'MF', 'VC', 'NF'], 'auto preterminal span': (28, 29), 'span': (28, 29), 'subtrees': ['KON'], 'parent': 'SIMPX', 'over_word': True, 'auto preterminals': ('KON',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('KOORD', 'DM')}
(TOP
	(TURN
		(SIMPX
			(VF wir)
			(LK wollten)
			[01;31m(FKOORD[00m
				(MVC uns ja fur ein meeting treffen)
				(KON beziehungsweise)
				[01;31m(MVC[00m [01;33m(MVCN (MVCN[00m
					(MF eines)
					(VC ausmachen)[01;31m)[00m[01;31m)[00m
			[01;31m(NF[00m
				[01;31m(PX[00m
					(PX in hannover) [01;33mMVCN)[00m
					[01;33m(SIMPX[00m (SIMPX wenn ich mich recht entsinne)[01;31m)[00m
				[01;36m(NF[00m
					(SIMPX
						[01;31m(C[00m
							(KOUS weil)[01;31m)[00m
						(MF
							(ADVX da)
							(MF
								[01;36m(NX[00m
									(NX die geschaftspartner)
									(ADVX auch)
									(NX eine filiale)[01;36m)[00m
								(ADVX jetzt)
								(ADJX eroffnet)))
						(VC haben))[01;36m)[00m[01;31m)[00m) [01;33mSIMPX) MVCN)[00m
		[01;31m(SIMPX[00m
			(DM und)
			(DM ja)
			(SIMPX ich weis nicht)
			[01;36m(SIMPX[00m
				(VF es)
				(LK sollte)
				[01;33m(MF[00m (MF auf alle falle noch in den nachsten drei monaten)
				(VC geschehen)
				[01;31m(NF[00m
					[01;31m(PX[00m
						(NX meiner ansicht) [01;33mMF)[00m
						[01;36m(VC[00m
							(APPO nach)[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m
		(SIMPX wie sehen sie das)))
Step:PP Attachment
{'new_parent': 'FKOORD', 'new_family': ['MVC', 'KON', 'MVC', 'PX'], 'mover info': [('PX', (11, 18))], 'old_family': ['PX', 'SIMPX'], 'start left siblings': [], 'auto preterminals': ('PPER', 'VMFIN', 'PRF', 'ADV', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'PIS', 'VVINF', 'APPR', 'NE', 'KOUS', 'PPER', 'PRF', 'ADJD', 'VVFIN', 'KOUS', 'ADV', 'ART', 'NN', 'ADV', 'ART', 'NN', 'ADV', 'VVPP', 'VAFIN'), 'start right siblings': ['SIMPX'], 'end left siblings': ['MVC', 'KON', 'MVC'], 'auto preterminal span': (0, 28), 'movers': ['PX'], 'old_parent': 'NF', 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SIMPX
			(VF wir)
			(LK wollten)
			[01;31m(FKOORD[00m
				(MVC uns ja fur ein meeting treffen)
				(KON beziehungsweise)
				[01;31m(MVC[00m [01;33m(MVCN (MVCN[00m
					(MF eines)
					(VC ausmachen)[01;31m)[00m
				[01;31m(PX[00m
					(PX in hannover) [01;33mMVCN)[00m
					[01;33m(SIMPX[00m (SIMPX wenn ich mich recht entsinne)[01;31m)[00m[01;31m)[00m
			(NF
				(SIMPX
					[01;31m(C[00m
						(KOUS weil)[01;31m)[00m
					(MF
						(ADVX da)
						(MF
							[01;36m(NX[00m
								(NX die geschaftspartner)
								(ADVX auch)
								(NX eine filiale)[01;36m)[00m
							(ADVX jetzt)
							(ADJX eroffnet)))
					(VC haben)))) [01;33mSIMPX) MVCN)[00m
		[01;31m(SIMPX[00m
			(DM und)
			(DM ja)
			(SIMPX ich weis nicht)
			[01;36m(SIMPX[00m
				(VF es)
				(LK sollte)
				[01;33m(MF[00m (MF auf alle falle noch in den nachsten drei monaten)
				(VC geschehen)
				[01;31m(NF[00m
					[01;31m(PX[00m
						(NX meiner ansicht) [01;33mMF)[00m
						[01;36m(VC[00m
							(APPO nach)[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m
		(SIMPX wie sehen sie das)))
Step:Clause Attachment
{'new_parent': 'TURN', 'new_family': ['SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'mover info': [('DM', (28, 29)), ('DM', (29, 30)), ('SIMPX', (30, 33))], 'old_family': ['DM', 'DM', 'SIMPX', 'VF', 'LK', 'MF', 'VC', 'NF'], 'start left siblings': [], 'auto preterminals': ('PPER', 'VMFIN', 'PRF', 'ADV', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'PIS', 'VVINF', 'APPR', 'NE', 'KOUS', 'PPER', 'PRF', 'ADJD', 'VVFIN', 'KOUS', 'ADV', 'ART', 'NN', 'ADV', 'ART', 'NN', 'ADV', 'VVPP', 'VAFIN', 'KON', 'PTKANT', 'PPER', 'VVFIN', 'PTKNEG', 'PPER', 'VMFIN', 'APPR', 'PIDAT', 'NN', 'ADV', 'APPR', 'ART', 'ADJA', 'CARD', 'NN', 'VVINF', 'PPOSAT', 'NN', 'APPO', 'PWAV', 'VVFIN', 'PPER', 'PDS'), 'start right siblings': ['VF', 'LK', 'MF', 'VC', 'NF'], 'end left siblings': ['SIMPX'], 'auto preterminal span': (0, 52), 'movers': ['DM', 'DM', 'SIMPX'], 'old_parent': 'SIMPX', 'end right siblings': ['SIMPX', 'SIMPX'], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(SIMPX
			(VF wir)
			(LK wollten)
			[01;31m(FKOORD[00m
				(MVC uns ja fur ein meeting treffen)
				(KON beziehungsweise)
				[01;31m(MVC[00m [01;33m(MVCN (MVCN[00m
					(MF eines)
					(VC ausmachen)[01;31m)[00m
				[01;31m(PX[00m
					(PX in hannover) [01;33mMVCN)[00m
					[01;33m(SIMPX[00m (SIMPX wenn ich mich recht entsinne)[01;31m)[00m[01;31m)[00m
			(NF
				(SIMPX
					[01;31m(C[00m
						(KOUS weil)[01;31m)[00m
					(MF
						(ADVX da)
						(MF
							[01;36m(NX[00m
								(NX die geschaftspartner)
								(ADVX auch)
								(NX eine filiale)[01;36m)[00m
							(ADVX jetzt)
							(ADJX eroffnet)))
					(VC haben)))) [01;33mSIMPX) MVCN)[00m
		(DM und)
		(DM ja)
		(SIMPX ich weis nicht)
		(SIMPX
			(VF es)
			(LK sollte)
			[01;33m(MF[00m (MF auf alle falle noch in den nachsten drei monaten)
			(VC geschehen)
			[01;31m(NF[00m
				[01;31m(PX[00m
					(NX meiner ansicht) [01;33mMF)[00m
					[01;36m(VC[00m
						(APPO nach)[01;36m)[00m[01;31m)[00m[01;31m)[00m)
		(SIMPX wie sehen sie das)))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADVX', 'NX'], 'family': ['NX', 'ADVX', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'ADV', 'ART', 'NN'), 'right siblings': [(ADVX (ADV jetzt)), (ADJX (VVPP eroffnet))], 'left siblings': [], 'auto preterminal span': (20, 25), 'span': (20, 25), 'parent': 'MF', 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		(SIMPX
			(VF wir)
			(LK wollten)
			[01;31m(FKOORD[00m
				(MVC uns ja fur ein meeting treffen)
				(KON beziehungsweise)
				[01;31m(MVC[00m [01;33m(MVCN (MVCN[00m
					(MF eines)
					(VC ausmachen)[01;31m)[00m
				[01;31m(PX[00m
					(PX in hannover) [01;33mMVCN)[00m
					[01;33m(SIMPX[00m (SIMPX wenn ich mich recht entsinne)[01;31m)[00m[01;31m)[00m
			(NF
				(SIMPX
					[01;31m(C[00m
						(KOUS weil)[01;31m)[00m
					(MF da die geschaftspartner auch eine filiale jetzt eroffnet)
					(VC haben)))) [01;33mSIMPX) MVCN)[00m
		(DM und)
		(DM ja)
		(SIMPX ich weis nicht)
		(SIMPX
			(VF es)
			(LK sollte)
			[01;33m(MF[00m (MF auf alle falle noch in den nachsten drei monaten)
			(VC geschehen)
			[01;31m(NF[00m
				[01;31m(PX[00m
					(NX meiner ansicht) [01;33mMF)[00m
					[01;36m(VC[00m
						(APPO nach)[01;36m)[00m[01;31m)[00m[01;31m)[00m)
		(SIMPX wie sehen sie das)))
Step:Single Word Phrase
{'subtrees': ['APPO'], 'family': ['NX', 'VC'], 'over_word': True, 'over words': True, 'auto preterminals': ('APPO',), 'right siblings': [], 'left siblings': [(NX (PPOSAT meiner) (NN ansicht))], 'auto preterminal span': (47, 48), 'span': (47, 48), 'parent': 'PX', 'label': 'VC', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SIMPX
			(VF wir)
			(LK wollten)
			[01;31m(FKOORD[00m
				(MVC uns ja fur ein meeting treffen)
				(KON beziehungsweise)
				[01;31m(MVC[00m [01;33m(MVCN (MVCN[00m
					(MF eines)
					(VC ausmachen)[01;31m)[00m
				[01;31m(PX[00m
					(PX in hannover) [01;33mMVCN)[00m
					[01;33m(SIMPX[00m (SIMPX wenn ich mich recht entsinne)[01;31m)[00m[01;31m)[00m
			(NF
				(SIMPX
					[01;31m(C[00m
						(KOUS weil)[01;31m)[00m
					(MF da die geschaftspartner auch eine filiale jetzt eroffnet)
					(VC haben)))) [01;33mSIMPX) MVCN)[00m
		(DM und)
		(DM ja)
		(SIMPX ich weis nicht)
		(SIMPX
			(VF es)
			(LK sollte)
			[01;33m(MF[00m (MF auf alle falle noch in den nachsten drei monaten)
			(VC geschehen)
			[01;31m(NF[00m
				[01;31m(PX[00m
					(NX meiner ansicht) [01;33mMF)[00m
					(VC nach)[01;31m)[00m[01;31m)[00m)
		(SIMPX wie sehen sie das)))
Step:PP Attachment
{'subtrees': ['MVC', 'KON', 'MVC', 'PX'], 'family': ['VF', 'LK', 'FKOORD', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VMFIN', 'PRF', 'ADV', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'PIS', 'VVINF', 'APPR', 'NE', 'KOUS', 'PPER', 'PRF', 'ADJD', 'VVFIN', 'KOUS', 'ADV', 'ART', 'NN', 'ADV', 'ART', 'NN', 'ADV', 'VVPP', 'VAFIN'), 'right siblings': ['NF'], 'parent': 'SIMPX', 'auto preterminal span': (0, 28), 'span': (2, 18), 'left siblings': ['VF', 'LK'], 'label': 'FKOORD', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX
			(VF wir)
			(LK wollten)
			(MVC uns ja fur ein meeting treffen)
			(KON beziehungsweise)
			[01;36m(MVCN[00m
				[01;31m(MVC[00m [01;33m(MVCN[00m
					(MF eines)
					(VC ausmachen)[01;31m)[00m
				[01;31m(PX[00m
					(PX in hannover) [01;33mMVCN)[00m
					[01;33m(SIMPX[00m (SIMPX wenn ich mich recht entsinne)[01;31m)[00m
				(NF
					(SIMPX
						[01;31m(C[00m
							(KOUS weil)[01;31m)[00m
						(MF da die geschaftspartner auch eine filiale jetzt eroffnet)
						(VC haben)))[01;36m)[00m) [01;33mSIMPX)[00m
		(DM und)
		(DM ja)
		(SIMPX ich weis nicht)
		(SIMPX
			(VF es)
			(LK sollte)
			[01;33m(MF[00m (MF auf alle falle noch in den nachsten drei monaten)
			(VC geschehen)
			[01;31m(NF[00m
				[01;31m(PX[00m
					(NX meiner ansicht) [01;33mMF)[00m
					(VC nach)[01;31m)[00m[01;31m)[00m)
		(SIMPX wie sehen sie das)))
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MVC', 'KON', 'MVC', 'PX', 'SIMPX', 'NF'], 'mover info': [('SIMPX', (13, 18))], 'old_family': ['PX', 'SIMPX'], 'start left siblings': ['PX'], 'auto preterminals': ('PPER', 'VMFIN', 'PRF', 'ADV', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'PIS', 'VVINF', 'APPR', 'NE', 'KOUS', 'PPER', 'PRF', 'ADJD', 'VVFIN', 'KOUS', 'ADV', 'ART', 'NN', 'ADV', 'ART', 'NN', 'ADV', 'VVPP', 'VAFIN'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'MVC', 'KON', 'MVC', 'PX'], 'auto preterminal span': (0, 28), 'adding node already present': False, 'movers': ['SIMPX'], 'old_parent': 'PX', 'added and moved': True, 'end right siblings': ['NF'], 'classified_type': 'Clause Attachment', 'type': 'move', 'added label': 'SIMPX'}
(TOP
	(TURN
		(SIMPX
			(VF wir)
			(LK wollten)
			(MVC uns ja fur ein meeting treffen)
			(KON beziehungsweise)
			[01;36m(MVCN[00m
				[01;36m(MVCN[00m
					[01;31m(MVC[00m
						(MF eines)
						(VC ausmachen)[01;31m)[00m
					(PX in hannover)[01;36m)[00m
				(SIMPX
					(SIMPX wenn ich mich recht entsinne)
					(NF
						(SIMPX
							[01;31m(C[00m
								(KOUS weil)[01;31m)[00m
							(MF da die geschaftspartner auch eine filiale jetzt eroffnet)
							(VC haben))))[01;36m)[00m)
		(DM und)
		(DM ja)
		(SIMPX ich weis nicht)
		(SIMPX
			(VF es)
			(LK sollte)
			[01;33m(MF[00m (MF auf alle falle noch in den nachsten drei monaten)
			(VC geschehen)
			[01;31m(NF[00m
				[01;31m(PX[00m
					(NX meiner ansicht) [01;33mMF)[00m
					(VC nach)[01;31m)[00m[01;31m)[00m)
		(SIMPX wie sehen sie das)))
Step:PP Attachment
{'subtrees': ['MVC', 'PX'], 'family': ['VF', 'LK', 'MVC', 'KON', 'MVCN', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PIS', 'VVINF', 'APPR', 'NE'), 'right siblings': [(SIMPX (SIMPX (C (KOUS wenn)) (MF (NX (PPER ich)) (NX (PRF mich)) (ADJX (ADJD recht))) (VC (VXFIN (VVFIN entsinne)))) (NF (SIMPX (C (KOUS weil)) (MF (ADVX (ADV da)) (MF (NX (NX (ART die) (NN geschaftspartner)) (ADVX (ADV auch)) (NX (ART eine) (NN filiale))) (ADVX (ADV jetzt)) (ADJX (VVPP eroffnet)))) (VC (VXFIN (VAFIN haben))))))], 'left siblings': [(VF (NX (PPER wir))), (LK (VXFIN (VMFIN wollten))), (MVC (MF (NX (PRF uns)) (ADVX (ADV ja)) (PX (APPR fur) (NX (ART ein) (NN meeting)))) (VC (VXINF (VVINF treffen)))), (KON beziehungsweise)], 'auto preterminal span': (9, 13), 'span': (9, 13), 'parent': 'SIMPX', 'label': 'MVCN', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(SIMPX
			(VF wir)
			(LK wollten)
			(MVC uns ja fur ein meeting treffen)
			(KON beziehungsweise)
			[01;36m(MVCN[00m
				(MVCN
					[01;31m(MVC[00m
						(MF eines)
						(VC ausmachen)[01;31m)[00m
					(PX in hannover))
				(SIMPX
					(SIMPX wenn ich mich recht entsinne)
					(NF
						(SIMPX
							[01;31m(C[00m
								(KOUS weil)[01;31m)[00m
							(MF da die geschaftspartner auch eine filiale jetzt eroffnet)
							(VC haben))))[01;36m)[00m)
		(DM und)
		(DM ja)
		(SIMPX ich weis nicht)
		(SIMPX
			(VF es)
			(LK sollte)
			[01;33m(MF[00m (MF auf alle falle noch in den nachsten drei monaten)
			(VC geschehen)
			[01;31m(NF[00m
				[01;31m(PX[00m
					(NX meiner ansicht) [01;33mMF)[00m
					(VC nach)[01;31m)[00m[01;31m)[00m)
		(SIMPX wie sehen sie das)))
Step:Clause Attachment
{'subtrees': ['MVCN', 'SIMPX'], 'family': ['VF', 'LK', 'MVC', 'KON', 'MVCN'], 'over_word': False, 'over words': False, 'auto preterminals': ('PIS', 'VVINF', 'APPR', 'NE', 'KOUS', 'PPER', 'PRF', 'ADJD', 'VVFIN', 'KOUS', 'ADV', 'ART', 'NN', 'ADV', 'ART', 'NN', 'ADV', 'VVPP', 'VAFIN'), 'right siblings': [], 'left siblings': [(VF (NX (PPER wir))), (LK (VXFIN (VMFIN wollten))), (MVC (MF (NX (PRF uns)) (ADVX (ADV ja)) (PX (APPR fur) (NX (ART ein) (NN meeting)))) (VC (VXINF (VVINF treffen)))), (KON beziehungsweise)], 'auto preterminal span': (9, 28), 'span': (9, 28), 'parent': 'SIMPX', 'label': 'MVCN', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(SIMPX
			(VF wir)
			(LK wollten)
			(MVC uns ja fur ein meeting treffen)
			(KON beziehungsweise)
			(MVCN
				(MVCN
					[01;31m(MVC[00m
						(MF eines)
						(VC ausmachen)[01;31m)[00m
					(PX in hannover))
				(SIMPX
					(SIMPX wenn ich mich recht entsinne)
					(NF
						(SIMPX
							[01;31m(C[00m
								(KOUS weil)[01;31m)[00m
							(MF da die geschaftspartner auch eine filiale jetzt eroffnet)
							(VC haben))))))
		(DM und)
		(DM ja)
		(SIMPX ich weis nicht)
		(SIMPX
			(VF es)
			(LK sollte)
			[01;33m(MF[00m (MF auf alle falle noch in den nachsten drei monaten)
			(VC geschehen)
			[01;31m(NF[00m
				[01;31m(PX[00m
					(NX meiner ansicht) [01;33mMF)[00m
					(VC nach)[01;31m)[00m[01;31m)[00m)
		(SIMPX wie sehen sie das)))
Step:UNSET remove
{'subtrees': ['MF', 'VC'], 'family': ['MVC', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PIS', 'VVINF', 'APPR', 'NE'), 'right siblings': ['PX'], 'parent': 'MVCN', 'auto preterminal span': (9, 13), 'span': (9, 11), 'left siblings': [], 'label': 'MVC', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX
			(VF wir)
			(LK wollten)
			(MVC uns ja fur ein meeting treffen)
			(KON beziehungsweise)
			(MVCN
				(MVCN eines ausmachen in hannover)
				(SIMPX
					(SIMPX wenn ich mich recht entsinne)
					(NF
						(SIMPX
							[01;31m(C[00m
								(KOUS weil)[01;31m)[00m
							(MF da die geschaftspartner auch eine filiale jetzt eroffnet)
							(VC haben))))))
		(DM und)
		(DM ja)
		(SIMPX ich weis nicht)
		(SIMPX
			(VF es)
			(LK sollte)
			[01;33m(MF[00m (MF auf alle falle noch in den nachsten drei monaten)
			(VC geschehen)
			[01;31m(NF[00m
				[01;31m(PX[00m
					(NX meiner ansicht) [01;33mMF)[00m
					(VC nach)[01;31m)[00m[01;31m)[00m)
		(SIMPX wie sehen sie das)))
Step:Single Word Phrase
{'subtrees': ['KOUS'], 'family': ['C', 'MF', 'VC'], 'over_word': True, 'over words': True, 'auto preterminals': ('KOUS', 'ADV', 'ART', 'NN', 'ADV', 'ART', 'NN', 'ADV', 'VVPP', 'VAFIN'), 'right siblings': ['MF', 'VC'], 'parent': 'SIMPX', 'auto preterminal span': (18, 28), 'span': (18, 19), 'left siblings': [], 'label': 'C', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX wir wollten uns ja fur ein meeting treffen beziehungsweise eines ausmachen in hannover wenn ich mich recht entsinne weil da die geschaftspartner auch eine filiale jetzt eroffnet haben)
		(DM und)
		(DM ja)
		(SIMPX ich weis nicht)
		(SIMPX
			(VF es)
			(LK sollte)
			[01;33m(MF[00m (MF auf alle falle noch in den nachsten drei monaten)
			(VC geschehen)
			[01;31m(NF[00m
				[01;31m(PX[00m
					(NX meiner ansicht) [01;33mMF)[00m
					(VC nach)[01;31m)[00m[01;31m)[00m)
		(SIMPX wie sehen sie das)))
Step:Unary
{'subtrees': ['NX', 'VC'], 'family': ['PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPOSAT', 'NN', 'APPO'), 'right siblings': [], 'parent': 'NF', 'auto preterminal span': (45, 48), 'span': (45, 48), 'left siblings': [], 'label': 'PX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX wir wollten uns ja fur ein meeting treffen beziehungsweise eines ausmachen in hannover wenn ich mich recht entsinne weil da die geschaftspartner auch eine filiale jetzt eroffnet haben)
		(DM und)
		(DM ja)
		(SIMPX ich weis nicht)
		(SIMPX
			(VF es)
			(LK sollte)
			[01;33m(MF[00m (MF auf alle falle noch in den nachsten drei monaten)
			(VC geschehen)
			[01;31m(NF[00m
				(NX meiner ansicht) [01;33mMF)[00m
				(VC nach)[01;31m)[00m)
		(SIMPX wie sehen sie das)))
Step:UNSET remove
{'subtrees': ['NX', 'VC'], 'family': ['VF', 'LK', 'MF', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VMFIN', 'APPR', 'PIDAT', 'NN', 'ADV', 'APPR', 'ART', 'ADJA', 'CARD', 'NN', 'VVINF', 'PPOSAT', 'NN', 'APPO'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (33, 48), 'span': (45, 48), 'left siblings': ['VF', 'LK', 'MF', 'VC'], 'label': 'NF', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX wir wollten uns ja fur ein meeting treffen beziehungsweise eines ausmachen in hannover wenn ich mich recht entsinne weil da die geschaftspartner auch eine filiale jetzt eroffnet haben)
		(DM und)
		(DM ja)
		(SIMPX ich weis nicht)
		(SIMPX
			(VF es)
			(LK sollte)
			[01;36m(MF[00m
				(MF auf alle falle noch in den nachsten drei monaten)
				(VC geschehen)
				(NX meiner ansicht)[01;36m)[00m
			(VC nach))
		(SIMPX wie sehen sie das)))
Step:UNSET add
{'subtrees': ['MF', 'VC', 'NX'], 'family': ['VF', 'LK', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'PIDAT', 'NN', 'ADV', 'APPR', 'ART', 'ADJA', 'CARD', 'NN', 'VVINF', 'PPOSAT', 'NN'), 'right siblings': [(VC (APPO nach))], 'left siblings': [(VF (NX (PPER es))), (LK (VXFIN (VMFIN sollte)))], 'auto preterminal span': (35, 47), 'span': (35, 47), 'parent': 'SIMPX', 'label': 'MF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP wir wollten uns ja fur ein meeting treffen beziehungsweise eines ausmachen in hannover wenn ich mich recht entsinne weil da die geschaftspartner auch eine filiale jetzt eroffnet haben und ja ich weis nicht es sollte auf alle falle noch in den nachsten drei monaten geschehen meiner ansicht nach wie sehen sie das)

Sentence 514:
8 Initial errors
0 on fringe, 4 iterations
2 Error:Different label
2 Error:UNSET move
2 Error:Modifier Attachment
2 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX november kame dann in frage)
		(SIMPX
			(C wenn)
			(MF
				(ADVX dann)
				[01;31m(NX[00m
					(ADVX so)
					[01;36m(NX[00m
						(ART die)
						(ADJX zweite)
						(NN woche)[01;36m)[00m[01;31m)[00m))
		(SIMPX
			(VF ich)
			(LK glaube)
			(NF
				(SIMPX
					(VF die zweite woche)
					(LK ware)
					[01;36m(ADJX[00m
						(MF
							[01;36m(ADVX[00m [01;31m(ADJX[00m
								(ADVX ganz)
								(ADJD gut)[01;31m)[00m[01;36m)[00m
							[01;31m(ADJX[00m
								(ADJD machbar)[01;31m)[00m)[01;36m)[00m)))
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF wie)
				(LK sieht)
				(MF es da)[01;31m)[00m
			(APPR bei)[01;36m)[00m))
Step:Different label
{'family': ['ADVX', 'ADJX'], 'auto preterminal span': (18, 20), 'span': (18, 20), 'subtrees': ['ADVX', 'ADJD'], 'parent': 'MF', 'over_word': False, 'auto preterminals': ('ADV', 'ADJD'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('ADJX', 'ADVX')}
(TOP
	(TURN
		(DM ja)
		(SIMPX november kame dann in frage)
		(SIMPX
			(C wenn)
			(MF
				(ADVX dann)
				[01;31m(NX[00m
					(ADVX so)
					[01;36m(NX[00m
						(ART die)
						(ADJX zweite)
						(NN woche)[01;36m)[00m[01;31m)[00m))
		(SIMPX
			(VF ich)
			(LK glaube)
			(NF
				(SIMPX
					(VF die zweite woche)
					(LK ware)
					[01;36m(ADJX[00m
						(MF
							(ADVX ganz gut)
							[01;31m(ADJX[00m
								(ADJD machbar)[01;31m)[00m)[01;36m)[00m)))
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF wie)
				(LK sieht)
				(MF es da)[01;31m)[00m
			(APPR bei)[01;36m)[00m))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'APPR'], 'mover info': [('APPR', (25, 26))], 'old_family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'APPR'], 'start left siblings': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'auto preterminals': ('PTKANT', 'NN', 'VVFIN', 'ADV', 'APPR', 'NN', 'KOUS', 'ADV', 'ADV', 'ART', 'ADJA', 'NN', 'PPER', 'VVFIN', 'ART', 'ADJA', 'NN', 'VAFIN', 'ADV', 'ADJD', 'ADJD', 'PWAV', 'VVFIN', 'PPER', 'ADV', 'APPR'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (0, 26), 'movers': ['APPR'], 'old_parent': 'TURN', 'POS confusion': ('APPR', 'APPR'), 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(SIMPX november kame dann in frage)
		(SIMPX
			(C wenn)
			(MF
				(ADVX dann)
				[01;31m(NX[00m
					(ADVX so)
					[01;36m(NX[00m
						(ART die)
						(ADJX zweite)
						(NN woche)[01;36m)[00m[01;31m)[00m))
		(SIMPX
			(VF ich)
			(LK glaube)
			(NF
				(SIMPX
					(VF die zweite woche)
					(LK ware)
					[01;36m(ADJX[00m
						(MF
							(ADVX ganz gut)
							[01;31m(ADJX[00m
								(ADJD machbar)[01;31m)[00m)[01;36m)[00m)))
		(SIMPX wie sieht es da bei)))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['ADVX', 'ADVX', 'NX'], 'mover info': [('ADVX', (8, 9))], 'old_family': ['ADVX', 'ART', 'ADJX', 'NN'], 'start left siblings': [], 'auto preterminals': ('ADV', 'ADV', 'ART', 'ADJA', 'NN'), 'start right siblings': ['ART', 'ADJX', 'NN'], 'end left siblings': ['ADVX'], 'auto preterminal span': (7, 12), 'movers': ['ADVX'], 'old_parent': 'NX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['NX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(SIMPX november kame dann in frage)
		(SIMPX wenn dann so die zweite woche)
		(SIMPX
			(VF ich)
			(LK glaube)
			(NF
				(SIMPX
					(VF die zweite woche)
					(LK ware)
					[01;36m(ADJX[00m
						(MF
							(ADVX ganz gut)
							[01;31m(ADJX[00m
								(ADJD machbar)[01;31m)[00m)[01;36m)[00m)))
		(SIMPX wie sieht es da bei)))
Step:Modifier Attachment
{'new_parent': 'ADJX', 'new_family': ['ADVX', 'ADJD'], 'mover info': [('ADVX', (18, 20))], 'old_family': ['ADVX', 'ADJX'], 'start left siblings': [], 'auto preterminals': ('ADV', 'ADJD', 'ADJD'), 'start right siblings': ['ADJX'], 'end left siblings': [], 'auto preterminal span': (18, 21), 'movers': ['ADVX'], 'old_parent': 'MF', 'end right siblings': ['ADJD'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP ja november kame dann in frage wenn dann so die zweite woche ich glaube die zweite woche ware ganz gut machbar wie sieht es da bei)

Sentence 515:
4 Initial errors
0 on fringe, 3 iterations
2 Error:UNSET move
1 Error:PP Attachment
1 Error:Clause Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX erste halfte ist in ordnung)
		[01;31m(PX[00m
			(ADVX blos)
			(ADVX nicht)
			[01;33m(SIMPX[00m (PX am montag)[01;31m)[00m
		(SIMPX montag ist ausgeschlossen) [01;33mSIMPX)[00m
		(SIMPX da ist namlich eine dienstbesprechung)
		[01;31m(SIMPX[00m
			(KOORD und)
			[01;36m(SIMPX[00m
				(VF die)
				(LK ist)
				(MF sehr wichtig)[01;36m)[00m[01;31m)[00m))
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['SIMPX', 'PX', 'SIMPX', 'SIMPX', 'KOORD', 'SIMPX'], 'mover info': [('KOORD', (17, 18))], 'old_family': ['KOORD', 'VF', 'LK', 'MF'], 'start left siblings': [], 'auto preterminals': ('ADJA', 'NN', 'VAFIN', 'APPR', 'NN', 'ADV', 'PTKNEG', 'APPRART', 'NN', 'NN', 'VAFIN', 'ADJD', 'ADV', 'VAFIN', 'ADV', 'ART', 'NN', 'KON', 'PDS', 'VAFIN', 'ADV', 'ADJD'), 'start right siblings': ['VF', 'LK', 'MF'], 'end left siblings': ['SIMPX', 'PX', 'SIMPX', 'SIMPX'], 'auto preterminal span': (0, 22), 'movers': ['KOORD'], 'old_parent': 'SIMPX', 'POS confusion': ('KON', 'KON'), 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SIMPX erste halfte ist in ordnung)
		[01;31m(PX[00m
			(ADVX blos)
			(ADVX nicht)
			[01;33m(SIMPX[00m (PX am montag)[01;31m)[00m
		(SIMPX montag ist ausgeschlossen) [01;33mSIMPX)[00m
		(SIMPX da ist namlich eine dienstbesprechung)
		(KOORD und)
		(SIMPX die ist sehr wichtig)))
Step:PP Attachment
{'subtrees': ['ADVX', 'ADVX', 'PX'], 'family': ['SIMPX', 'PX', 'SIMPX', 'SIMPX', 'KOORD', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJA', 'NN', 'VAFIN', 'APPR', 'NN', 'ADV', 'PTKNEG', 'APPRART', 'NN', 'NN', 'VAFIN', 'ADJD', 'ADV', 'VAFIN', 'ADV', 'ART', 'NN', 'KON', 'PDS', 'VAFIN', 'ADV', 'ADJD'), 'right siblings': ['SIMPX', 'SIMPX', 'KOORD', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 22), 'span': (5, 9), 'left siblings': ['SIMPX'], 'label': 'PX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX erste halfte ist in ordnung)
		(ADVX blos)
		(ADVX nicht)
		[01;36m(SIMPX[00m
			(PX am montag)
			(SIMPX montag ist ausgeschlossen)[01;36m)[00m
		(SIMPX da ist namlich eine dienstbesprechung)
		(KOORD und)
		(SIMPX die ist sehr wichtig)))
Step:Clause Attachment
{'subtrees': ['PX', 'SIMPX'], 'family': ['SIMPX', 'ADVX', 'ADVX', 'SIMPX', 'SIMPX', 'KOORD', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'NN', 'NN', 'VAFIN', 'ADJD'), 'right siblings': [(SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VAFIN ist))) (MF (ADVX (ADV namlich)) (NX (ART eine) (NN dienstbesprechung)))), (KOORD (KON und)), (SIMPX (VF (NX (PDS die))) (LK (VXFIN (VAFIN ist))) (MF (ADJX (ADVX (ADV sehr)) (ADJD wichtig))))], 'left siblings': [(SIMPX (VF (NX (ADJX (ADJA erste)) (NN halfte))) (LK (VXFIN (VAFIN ist))) (MF (PX (APPR in) (NX (NN ordnung))))), (ADVX (ADV blos)), (ADVX (PTKNEG nicht))], 'auto preterminal span': (7, 12), 'span': (7, 12), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP erste halfte ist in ordnung blos nicht am montag montag ist ausgeschlossen da ist namlich eine dienstbesprechung und die ist sehr wichtig)

Sentence 516:
0 Initial errors
0 on fringe, 0 iterations

Sentence 517:
5 Initial errors
0 on fringe, 4 iterations
2 Error:Modifier Attachment
1 Error:Modifier Attachment
1 Error:Modifier Attachment
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(APPR ab)
		(SIMPX ab halb sechs ist in ordnung)
		[01;31m(NX[00m
			[01;36m(ADVX[00m
				(ADVX nur)
				(ADVX nicht)[01;36m)[00m
			(ADVX gleich)
			(NX halb sechs)[01;31m)[00m
		(SIMPX das ware mir etwas zu fruh)
		(ADJX
			[01;31m(NX[00m
				(ADVX fruhestens)
				[01;36m(NX[00m
					(ART [01;33m(ADJX[00m eine)
					(NN stunde)[01;36m)[00m[01;31m)[00m
			(ADJD spater)))) [01;33mADJX)[00m
Step:Modifier Attachment
{'new_parent': 'ADJX', 'new_family': ['ADVX', 'NX', 'ADJD'], 'mover info': [('ADVX', (18, 19))], 'old_family': ['ADVX', 'ART', 'NN'], 'start left siblings': [], 'auto preterminals': ('ADV', 'ART', 'NN', 'ADJD'), 'start right siblings': ['ART', 'NN'], 'end left siblings': [], 'auto preterminal span': (18, 22), 'movers': ['ADVX'], 'old_parent': 'NX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['NX', 'ADJD'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(APPR ab)
		(SIMPX ab halb sechs ist in ordnung)
		[01;31m(NX[00m
			[01;36m(ADVX[00m
				(ADVX nur)
				(ADVX nicht)[01;36m)[00m
			(ADVX gleich)
			(NX halb sechs)[01;31m)[00m
		(SIMPX das ware mir etwas zu fruh)
		(ADJX
			(ADVX fruhestens)
			[01;36m(ADJX[00m
				(NX eine stunde)
				(ADJD spater)[01;36m)[00m)))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'ADVX'], 'family': ['ADVX', 'ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PTKNEG'), 'right siblings': [(ADVX (ADV gleich)), (NX (ADJX (ADJD halb)) (CARD sechs))], 'left siblings': [], 'auto preterminal span': (7, 9), 'span': (7, 9), 'parent': 'NX', 'label': 'ADVX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		(APPR ab)
		(SIMPX ab halb sechs ist in ordnung)
		[01;31m(NX[00m
			(ADVX nur nicht)
			(ADVX gleich)
			(NX halb sechs)[01;31m)[00m
		(SIMPX das ware mir etwas zu fruh)
		(ADJX
			(ADVX fruhestens)
			[01;36m(ADJX[00m
				(NX eine stunde)
				(ADJD spater)[01;36m)[00m)))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADJD'], 'family': ['ADVX', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'ADJD'), 'right siblings': [], 'left siblings': [(ADVX (ADV fruhestens))], 'auto preterminal span': (19, 22), 'span': (19, 22), 'parent': 'ADJX', 'label': 'ADJX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		(APPR ab)
		(SIMPX ab halb sechs ist in ordnung)
		[01;31m(NX[00m
			(ADVX nur nicht)
			(ADVX gleich)
			(NX halb sechs)[01;31m)[00m
		(SIMPX das ware mir etwas zu fruh)
		(ADJX fruhestens eine stunde spater)))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'ADVX', 'NX'], 'family': ['APPR', 'SIMPX', 'NX', 'SIMPX', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'APPR', 'ADJD', 'CARD', 'VAFIN', 'APPR', 'NN', 'ADV', 'PTKNEG', 'ADV', 'ADJD', 'CARD', 'PDS', 'VAFIN', 'PPER', 'ADV', 'PTKA', 'ADJD', 'ADV', 'ART', 'NN', 'ADJD'), 'right siblings': ['SIMPX', 'ADJX'], 'parent': 'TURN', 'auto preterminal span': (0, 22), 'span': (7, 12), 'left siblings': ['APPR', 'SIMPX'], 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP ab ab halb sechs ist in ordnung nur nicht gleich halb sechs das ware mir etwas zu fruh fruhestens eine stunde spater)

Sentence 518:
0 Initial errors
0 on fringe, 0 iterations

Sentence 519:
16 Initial errors
0 on fringe, 13 iterations
2 Error:Different label
2 Error:NP Attachment
2 Error:NP Attachment
1 Error:Unary
1 Error:UNSET remove
1 Error:PP Attachment
1 Error:Single Word Phrase
1 Error:Co-ordination
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:Co-ordination
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich weis nicht ob sie sich um die unterkunft schon gekummert haben)
		(SIMPX
			[01;31m(VF[00m
				(SIMPX
					(C wenn)
					(MF nicht))[01;31m)[00m
			(LK hatte)
			(MF ich hier drei vorschlage))
		[01;31m(SIMPX[00m
			(VF es)
			(LK gabe)
			[01;31m(MF[00m
				(ADVX da)
				(NX das hotel zentral das hotel nohre und das hotel prinzenhof)
				(PX in hannover)[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						[01;31m(NX[00m
							(PIS beides)[01;31m)[00m
						[01;31m(NX[00m
							(ADJX sehr gute)
							(NN unterkunfte)[01;31m)[00m[01;31m)[00m
					(KON und)
					[01;36m(MF[00m [01;31m(ADJX[00m
						(ADVX auch)
						(ADJX ziemlich zentral gelegen)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
			(LK glaube)
			(MF ich)[01;31m)[00m
		(SIMPX die unterscheiden sich dann wohl nur im preis)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF das eine)
			(LK liegt)
			(MF etwas uber zweihundert mark)[01;31m)[00m
		[01;31m(NX[00m
			(NX die anderen) [01;33mSIMPX)[00m
			(PX [01;33m(PX[00m
				(ADVX so)
				(APPR um)
				[01;31m(NX[00m
					(NX hundert vierzig mark) [01;33mPX)[00m
					(NX hundert zwanzig mark)[01;31m)[00m)[01;31m)[00m
		(SIMPX ich weis)))
Step:Different label
{'family': ['NX', 'KON', 'MF'], 'auto preterminal span': (40, 44), 'span': (40, 44), 'subtrees': ['ADVX', 'ADJX'], 'parent': 'NX', 'over_word': False, 'auto preterminals': ('ADV', 'ADV', 'ADV', 'ADJD'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('ADJX', 'MF')}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich weis nicht ob sie sich um die unterkunft schon gekummert haben)
		(SIMPX
			[01;31m(VF[00m
				(SIMPX
					(C wenn)
					(MF nicht))[01;31m)[00m
			(LK hatte)
			(MF ich hier drei vorschlage))
		[01;31m(SIMPX[00m
			(VF es)
			(LK gabe)
			[01;31m(MF[00m
				(ADVX da)
				(NX das hotel zentral das hotel nohre und das hotel prinzenhof)
				(PX in hannover)[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						[01;31m(NX[00m
							(PIS beides)[01;31m)[00m
						[01;31m(NX[00m
							(ADJX sehr gute)
							(NN unterkunfte)[01;31m)[00m[01;31m)[00m
					(KON und)
					(MF auch ziemlich zentral gelegen)[01;31m)[00m[01;31m)[00m
			(LK glaube)
			(MF ich)[01;31m)[00m
		(SIMPX die unterscheiden sich dann wohl nur im preis)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF das eine)
			(LK liegt)
			(MF etwas uber zweihundert mark)[01;31m)[00m
		[01;31m(NX[00m
			(NX die anderen) [01;33mSIMPX)[00m
			(PX [01;33m(PX[00m
				(ADVX so)
				(APPR um)
				[01;31m(NX[00m
					(NX hundert vierzig mark) [01;33mPX)[00m
					(NX hundert zwanzig mark)[01;31m)[00m)[01;31m)[00m
		(SIMPX ich weis)))
Step:NP Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'NX'], 'mover info': [('NX', (61, 63))], 'old_family': ['NX', 'PX'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'PPER', 'VVFIN', 'PTKNEG', 'KOUS', 'PPER', 'PRF', 'APPR', 'ART', 'NN', 'ADV', 'VVPP', 'VAFIN', 'KOUS', 'PTKNEG', 'VAFIN', 'PPER', 'ADV', 'CARD', 'NN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NE', 'ART', 'NN', 'NE', 'KON', 'ART', 'NN', 'NE', 'APPR', 'NE', 'PIS', 'ADV', 'ADJA', 'NN', 'KON', 'ADV', 'ADV', 'ADV', 'ADJD', 'VVFIN', 'PPER', 'PDS', 'VVFIN', 'PRF', 'ADV', 'ADV', 'ADV', 'APPRART', 'NN', 'ART', 'PIS', 'VVFIN', 'ADV', 'APPR', 'CARD', 'NN', 'ART', 'PIS', 'ADV', 'APPR', 'CARD', 'CARD', 'NN', 'CARD', 'CARD', 'NN', 'PPER', 'VVFIN'), 'start right siblings': ['PX'], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (0, 73), 'movers': ['NX'], 'old_parent': 'NX', 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich weis nicht ob sie sich um die unterkunft schon gekummert haben)
		(SIMPX
			[01;31m(VF[00m
				(SIMPX
					(C wenn)
					(MF nicht))[01;31m)[00m
			(LK hatte)
			(MF ich hier drei vorschlage))
		[01;31m(SIMPX[00m
			(VF es)
			(LK gabe)
			[01;31m(MF[00m
				(ADVX da)
				(NX das hotel zentral das hotel nohre und das hotel prinzenhof)
				(PX in hannover)[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						[01;31m(NX[00m
							(PIS beides)[01;31m)[00m
						[01;31m(NX[00m
							(ADJX sehr gute)
							(NN unterkunfte)[01;31m)[00m[01;31m)[00m
					(KON und)
					(MF auch ziemlich zentral gelegen)[01;31m)[00m[01;31m)[00m
			(LK glaube)
			(MF ich)[01;31m)[00m
		(SIMPX die unterscheiden sich dann wohl nur im preis)
		(SIMPX das eine liegt etwas uber zweihundert mark die anderen)
		[01;31m(NX[00m [01;33m(PX[00m
			(PX
				(ADVX so)
				(APPR um)
				[01;31m(NX[00m
					(NX hundert vierzig mark) [01;33mPX)[00m
					(NX hundert zwanzig mark)[01;31m)[00m)[01;31m)[00m
		(SIMPX ich weis)))
Step:NP Attachment
{'new_parent': 'PX', 'new_family': ['ADVX', 'APPR', 'NX', 'NX'], 'mover info': [('NX', (65, 68))], 'old_family': ['NX', 'NX'], 'start left siblings': [], 'auto preterminals': ('ADV', 'APPR', 'CARD', 'CARD', 'NN', 'CARD', 'CARD', 'NN'), 'start right siblings': ['NX'], 'end left siblings': ['ADVX', 'APPR'], 'auto preterminal span': (63, 71), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': ['NX'], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'PX'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich weis nicht ob sie sich um die unterkunft schon gekummert haben)
		(SIMPX
			[01;31m(VF[00m
				(SIMPX
					(C wenn)
					(MF nicht))[01;31m)[00m
			(LK hatte)
			(MF ich hier drei vorschlage))
		[01;31m(SIMPX[00m
			(VF es)
			(LK gabe)
			[01;31m(MF[00m
				(ADVX da)
				(NX das hotel zentral das hotel nohre und das hotel prinzenhof)
				(PX in hannover)[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						[01;31m(NX[00m
							(PIS beides)[01;31m)[00m
						[01;31m(NX[00m
							(ADJX sehr gute)
							(NN unterkunfte)[01;31m)[00m[01;31m)[00m
					(KON und)
					(MF auch ziemlich zentral gelegen)[01;31m)[00m[01;31m)[00m
			(LK glaube)
			(MF ich)[01;31m)[00m
		(SIMPX die unterscheiden sich dann wohl nur im preis)
		(SIMPX das eine liegt etwas uber zweihundert mark die anderen)
		[01;31m(NX[00m
			(PX
				(PX so um hundert vierzig mark)
				(NX hundert zwanzig mark))[01;31m)[00m
		(SIMPX ich weis)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PTKNEG', 'VAFIN', 'PPER', 'ADV', 'CARD', 'NN'), 'right siblings': ['LK', 'MF'], 'parent': 'SIMPX', 'auto preterminal span': (13, 20), 'span': (13, 15), 'left siblings': [], 'label': 'VF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich weis nicht ob sie sich um die unterkunft schon gekummert haben)
		(SIMPX wenn nicht hatte ich hier drei vorschlage)
		[01;31m(SIMPX[00m
			(VF es)
			(LK gabe)
			[01;31m(MF[00m
				(ADVX da)
				(NX das hotel zentral das hotel nohre und das hotel prinzenhof)
				(PX in hannover)[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						[01;31m(NX[00m
							(PIS beides)[01;31m)[00m
						[01;31m(NX[00m
							(ADJX sehr gute)
							(NN unterkunfte)[01;31m)[00m[01;31m)[00m
					(KON und)
					(MF auch ziemlich zentral gelegen)[01;31m)[00m[01;31m)[00m
			(LK glaube)
			(MF ich)[01;31m)[00m
		(SIMPX die unterscheiden sich dann wohl nur im preis)
		(SIMPX das eine liegt etwas uber zweihundert mark die anderen)
		[01;31m(NX[00m
			(PX
				(PX so um hundert vierzig mark)
				(NX hundert zwanzig mark))[01;31m)[00m
		(SIMPX ich weis)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VVFIN', 'PTKNEG', 'KOUS', 'PPER', 'PRF', 'APPR', 'ART', 'NN', 'ADV', 'VVPP', 'VAFIN', 'KOUS', 'PTKNEG', 'VAFIN', 'PPER', 'ADV', 'CARD', 'NN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NE', 'ART', 'NN', 'NE', 'KON', 'ART', 'NN', 'NE', 'APPR', 'NE', 'PIS', 'ADV', 'ADJA', 'NN', 'KON', 'ADV', 'ADV', 'ADV', 'ADJD', 'VVFIN', 'PPER', 'PDS', 'VVFIN', 'PRF', 'ADV', 'ADV', 'ADV', 'APPRART', 'NN', 'ART', 'PIS', 'VVFIN', 'ADV', 'APPR', 'CARD', 'NN', 'ART', 'PIS', 'ADV', 'APPR', 'CARD', 'CARD', 'NN', 'CARD', 'CARD', 'NN', 'PPER', 'VVFIN'), 'right siblings': ['SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 73), 'span': (20, 35), 'left siblings': ['DM', 'SIMPX', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich weis nicht ob sie sich um die unterkunft schon gekummert haben)
		(SIMPX wenn nicht hatte ich hier drei vorschlage)
		(VF es)
		(LK gabe)
		[01;31m(MF[00m
			(ADVX da)
			(NX das hotel zentral das hotel nohre und das hotel prinzenhof)
			(PX in hannover)[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						[01;31m(NX[00m
							(PIS beides)[01;31m)[00m
						[01;31m(NX[00m
							(ADJX sehr gute)
							(NN unterkunfte)[01;31m)[00m[01;31m)[00m
					(KON und)
					(MF auch ziemlich zentral gelegen)[01;31m)[00m[01;31m)[00m
			(LK glaube)
			(MF ich)[01;31m)[00m
		(SIMPX die unterscheiden sich dann wohl nur im preis)
		(SIMPX das eine liegt etwas uber zweihundert mark die anderen)
		[01;31m(NX[00m
			(PX
				(PX so um hundert vierzig mark)
				(NX hundert zwanzig mark))[01;31m)[00m
		(SIMPX ich weis)))
Step:PP Attachment
{'subtrees': ['ADVX', 'NX', 'PX'], 'family': ['DM', 'SIMPX', 'SIMPX', 'VF', 'LK', 'MF', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VVFIN', 'PTKNEG', 'KOUS', 'PPER', 'PRF', 'APPR', 'ART', 'NN', 'ADV', 'VVPP', 'VAFIN', 'KOUS', 'PTKNEG', 'VAFIN', 'PPER', 'ADV', 'CARD', 'NN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NE', 'ART', 'NN', 'NE', 'KON', 'ART', 'NN', 'NE', 'APPR', 'NE', 'PIS', 'ADV', 'ADJA', 'NN', 'KON', 'ADV', 'ADV', 'ADV', 'ADJD', 'VVFIN', 'PPER', 'PDS', 'VVFIN', 'PRF', 'ADV', 'ADV', 'ADV', 'APPRART', 'NN', 'ART', 'PIS', 'VVFIN', 'ADV', 'APPR', 'CARD', 'NN', 'ART', 'PIS', 'ADV', 'APPR', 'CARD', 'CARD', 'NN', 'CARD', 'CARD', 'NN', 'PPER', 'VVFIN'), 'right siblings': ['SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 73), 'span': (22, 35), 'left siblings': ['DM', 'SIMPX', 'SIMPX', 'VF', 'LK'], 'label': 'MF', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich weis nicht ob sie sich um die unterkunft schon gekummert haben)
		(SIMPX wenn nicht hatte ich hier drei vorschlage)
		(VF es)
		(LK gabe)
		(ADVX da)
		(NX das hotel zentral das hotel nohre und das hotel prinzenhof)
		(PX in hannover)
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						[01;31m(NX[00m
							(PIS beides)[01;31m)[00m
						[01;31m(NX[00m
							(ADJX sehr gute)
							(NN unterkunfte)[01;31m)[00m[01;31m)[00m
					(KON und)
					(MF auch ziemlich zentral gelegen)[01;31m)[00m[01;31m)[00m
			(LK glaube)
			(MF ich)[01;31m)[00m
		(SIMPX die unterscheiden sich dann wohl nur im preis)
		(SIMPX das eine liegt etwas uber zweihundert mark die anderen)
		[01;31m(NX[00m
			(PX
				(PX so um hundert vierzig mark)
				(NX hundert zwanzig mark))[01;31m)[00m
		(SIMPX ich weis)))
Step:Single Word Phrase
{'subtrees': ['PIS'], 'family': ['NX', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('PIS', 'ADV', 'ADJA', 'NN'), 'right siblings': ['NX'], 'parent': 'NX', 'auto preterminal span': (35, 39), 'span': (35, 36), 'left siblings': [], 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich weis nicht ob sie sich um die unterkunft schon gekummert haben)
		(SIMPX wenn nicht hatte ich hier drei vorschlage)
		(VF es)
		(LK gabe)
		(ADVX da)
		(NX das hotel zentral das hotel nohre und das hotel prinzenhof)
		(PX in hannover)
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(PIS beides)
						[01;31m(NX[00m
							(ADJX sehr gute)
							(NN unterkunfte)[01;31m)[00m[01;31m)[00m
					(KON und)
					(MF auch ziemlich zentral gelegen)[01;31m)[00m[01;31m)[00m
			(LK glaube)
			(MF ich)[01;31m)[00m
		(SIMPX die unterscheiden sich dann wohl nur im preis)
		(SIMPX das eine liegt etwas uber zweihundert mark die anderen)
		[01;31m(NX[00m
			(PX
				(PX so um hundert vierzig mark)
				(NX hundert zwanzig mark))[01;31m)[00m
		(SIMPX ich weis)))
Step:Co-ordination
{'subtrees': ['PIS', 'NX'], 'family': ['NX', 'KON', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PIS', 'ADV', 'ADJA', 'NN', 'KON', 'ADV', 'ADV', 'ADV', 'ADJD'), 'right siblings': ['KON', 'MF'], 'parent': 'NX', 'auto preterminal span': (35, 44), 'span': (35, 39), 'left siblings': [], 'label': 'NX', 'classified_type': 'Co-ordination', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich weis nicht ob sie sich um die unterkunft schon gekummert haben)
		(SIMPX wenn nicht hatte ich hier drei vorschlage)
		(VF es)
		(LK gabe)
		(ADVX da)
		(NX das hotel zentral das hotel nohre und das hotel prinzenhof)
		(PX in hannover)
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				[01;31m(NX[00m
					(PIS beides)
					[01;31m(NX[00m
						(ADJX sehr gute)
						(NN unterkunfte)[01;31m)[00m
					(KON und)
					(MF auch ziemlich zentral gelegen)[01;31m)[00m[01;31m)[00m
			(LK glaube)
			(MF ich)[01;31m)[00m
		(SIMPX die unterscheiden sich dann wohl nur im preis)
		(SIMPX das eine liegt etwas uber zweihundert mark die anderen)
		[01;31m(NX[00m
			(PX
				(PX so um hundert vierzig mark)
				(NX hundert zwanzig mark))[01;31m)[00m
		(SIMPX ich weis)))
Step:Unary
{'subtrees': ['NX'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PIS', 'ADV', 'ADJA', 'NN', 'KON', 'ADV', 'ADV', 'ADV', 'ADJD', 'VVFIN', 'PPER'), 'right siblings': ['LK', 'MF'], 'parent': 'SIMPX', 'auto preterminal span': (35, 46), 'span': (35, 44), 'left siblings': [], 'label': 'VF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich weis nicht ob sie sich um die unterkunft schon gekummert haben)
		(SIMPX wenn nicht hatte ich hier drei vorschlage)
		(VF es)
		(LK gabe)
		(ADVX da)
		(NX das hotel zentral das hotel nohre und das hotel prinzenhof)
		(PX in hannover)
		[01;31m(SIMPX[00m
			[01;31m(NX[00m
				(PIS beides)
				[01;31m(NX[00m
					(ADJX sehr gute)
					(NN unterkunfte)[01;31m)[00m
				(KON und)
				(MF auch ziemlich zentral gelegen)[01;31m)[00m
			(LK glaube)
			(MF ich)[01;31m)[00m
		(SIMPX die unterscheiden sich dann wohl nur im preis)
		(SIMPX das eine liegt etwas uber zweihundert mark die anderen)
		[01;31m(NX[00m
			(PX
				(PX so um hundert vierzig mark)
				(NX hundert zwanzig mark))[01;31m)[00m
		(SIMPX ich weis)))
Step:UNSET remove
{'subtrees': ['PIS', 'NX', 'KON', 'MF'], 'family': ['NX', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PIS', 'ADV', 'ADJA', 'NN', 'KON', 'ADV', 'ADV', 'ADV', 'ADJD', 'VVFIN', 'PPER'), 'right siblings': ['LK', 'MF'], 'parent': 'SIMPX', 'auto preterminal span': (35, 46), 'span': (35, 44), 'left siblings': [], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich weis nicht ob sie sich um die unterkunft schon gekummert haben)
		(SIMPX wenn nicht hatte ich hier drei vorschlage)
		(VF es)
		(LK gabe)
		(ADVX da)
		(NX das hotel zentral das hotel nohre und das hotel prinzenhof)
		(PX in hannover)
		[01;31m(SIMPX[00m
			(PIS beides)
			[01;31m(NX[00m
				(ADJX sehr gute)
				(NN unterkunfte)[01;31m)[00m
			(KON und)
			(MF auch ziemlich zentral gelegen)
			(LK glaube)
			(MF ich)[01;31m)[00m
		(SIMPX die unterscheiden sich dann wohl nur im preis)
		(SIMPX das eine liegt etwas uber zweihundert mark die anderen)
		[01;31m(NX[00m
			(PX
				(PX so um hundert vierzig mark)
				(NX hundert zwanzig mark))[01;31m)[00m
		(SIMPX ich weis)))
Step:UNSET remove
{'subtrees': ['PIS', 'NX', 'KON', 'MF', 'LK', 'MF'], 'family': ['DM', 'SIMPX', 'SIMPX', 'VF', 'LK', 'ADVX', 'NX', 'PX', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VVFIN', 'PTKNEG', 'KOUS', 'PPER', 'PRF', 'APPR', 'ART', 'NN', 'ADV', 'VVPP', 'VAFIN', 'KOUS', 'PTKNEG', 'VAFIN', 'PPER', 'ADV', 'CARD', 'NN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NE', 'ART', 'NN', 'NE', 'KON', 'ART', 'NN', 'NE', 'APPR', 'NE', 'PIS', 'ADV', 'ADJA', 'NN', 'KON', 'ADV', 'ADV', 'ADV', 'ADJD', 'VVFIN', 'PPER', 'PDS', 'VVFIN', 'PRF', 'ADV', 'ADV', 'ADV', 'APPRART', 'NN', 'ART', 'PIS', 'VVFIN', 'ADV', 'APPR', 'CARD', 'NN', 'ART', 'PIS', 'ADV', 'APPR', 'CARD', 'CARD', 'NN', 'CARD', 'CARD', 'NN', 'PPER', 'VVFIN'), 'right siblings': ['SIMPX', 'SIMPX', 'NX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 73), 'span': (35, 46), 'left siblings': ['DM', 'SIMPX', 'SIMPX', 'VF', 'LK', 'ADVX', 'NX', 'PX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich weis nicht ob sie sich um die unterkunft schon gekummert haben)
		(SIMPX wenn nicht hatte ich hier drei vorschlage)
		(VF es)
		(LK gabe)
		(ADVX da)
		(NX das hotel zentral das hotel nohre und das hotel prinzenhof)
		(PX in hannover)
		(PIS beides)
		[01;31m(NX[00m
			(ADJX sehr gute)
			(NN unterkunfte)[01;31m)[00m
		(KON und)
		(MF auch ziemlich zentral gelegen)
		(LK glaube)
		(MF ich)
		(SIMPX die unterscheiden sich dann wohl nur im preis)
		(SIMPX das eine liegt etwas uber zweihundert mark die anderen)
		[01;31m(NX[00m
			(PX
				(PX so um hundert vierzig mark)
				(NX hundert zwanzig mark))[01;31m)[00m
		(SIMPX ich weis)))
Step:Co-ordination
{'subtrees': ['ADJX', 'NN'], 'family': ['DM', 'SIMPX', 'SIMPX', 'VF', 'LK', 'ADVX', 'NX', 'PX', 'PIS', 'NX', 'KON', 'MF', 'LK', 'MF', 'SIMPX', 'SIMPX', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VVFIN', 'PTKNEG', 'KOUS', 'PPER', 'PRF', 'APPR', 'ART', 'NN', 'ADV', 'VVPP', 'VAFIN', 'KOUS', 'PTKNEG', 'VAFIN', 'PPER', 'ADV', 'CARD', 'NN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NE', 'ART', 'NN', 'NE', 'KON', 'ART', 'NN', 'NE', 'APPR', 'NE', 'PIS', 'ADV', 'ADJA', 'NN', 'KON', 'ADV', 'ADV', 'ADV', 'ADJD', 'VVFIN', 'PPER', 'PDS', 'VVFIN', 'PRF', 'ADV', 'ADV', 'ADV', 'APPRART', 'NN', 'ART', 'PIS', 'VVFIN', 'ADV', 'APPR', 'CARD', 'NN', 'ART', 'PIS', 'ADV', 'APPR', 'CARD', 'CARD', 'NN', 'CARD', 'CARD', 'NN', 'PPER', 'VVFIN'), 'right siblings': ['KON', 'MF', 'LK', 'MF', 'SIMPX', 'SIMPX', 'NX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 73), 'span': (36, 39), 'left siblings': ['DM', 'SIMPX', 'SIMPX', 'VF', 'LK', 'ADVX', 'NX', 'PX', 'PIS'], 'label': 'NX', 'classified_type': 'Co-ordination', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich weis nicht ob sie sich um die unterkunft schon gekummert haben)
		(SIMPX wenn nicht hatte ich hier drei vorschlage)
		(VF es)
		(LK gabe)
		(ADVX da)
		(NX das hotel zentral das hotel nohre und das hotel prinzenhof)
		(PX in hannover)
		(PIS beides)
		(ADJX sehr gute)
		(NN unterkunfte)
		(KON und)
		(MF auch ziemlich zentral gelegen)
		(LK glaube)
		(MF ich)
		(SIMPX die unterscheiden sich dann wohl nur im preis)
		(SIMPX das eine liegt etwas uber zweihundert mark die anderen)
		[01;31m(NX[00m
			(PX
				(PX so um hundert vierzig mark)
				(NX hundert zwanzig mark))[01;31m)[00m
		(SIMPX ich weis)))
Step:Unary
{'subtrees': ['PX'], 'family': ['DM', 'SIMPX', 'SIMPX', 'VF', 'LK', 'ADVX', 'NX', 'PX', 'PIS', 'ADJX', 'NN', 'KON', 'MF', 'LK', 'MF', 'SIMPX', 'SIMPX', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VVFIN', 'PTKNEG', 'KOUS', 'PPER', 'PRF', 'APPR', 'ART', 'NN', 'ADV', 'VVPP', 'VAFIN', 'KOUS', 'PTKNEG', 'VAFIN', 'PPER', 'ADV', 'CARD', 'NN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NE', 'ART', 'NN', 'NE', 'KON', 'ART', 'NN', 'NE', 'APPR', 'NE', 'PIS', 'ADV', 'ADJA', 'NN', 'KON', 'ADV', 'ADV', 'ADV', 'ADJD', 'VVFIN', 'PPER', 'PDS', 'VVFIN', 'PRF', 'ADV', 'ADV', 'ADV', 'APPRART', 'NN', 'ART', 'PIS', 'VVFIN', 'ADV', 'APPR', 'CARD', 'NN', 'ART', 'PIS', 'ADV', 'APPR', 'CARD', 'CARD', 'NN', 'CARD', 'CARD', 'NN', 'PPER', 'VVFIN'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 73), 'span': (63, 71), 'left siblings': ['DM', 'SIMPX', 'SIMPX', 'VF', 'LK', 'ADVX', 'NX', 'PX', 'PIS', 'ADJX', 'NN', 'KON', 'MF', 'LK', 'MF', 'SIMPX', 'SIMPX'], 'label': 'NX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja ich weis nicht ob sie sich um die unterkunft schon gekummert haben wenn nicht hatte ich hier drei vorschlage es gabe da das hotel zentral das hotel nohre und das hotel prinzenhof in hannover beides sehr gute unterkunfte und auch ziemlich zentral gelegen glaube ich die unterscheiden sich dann wohl nur im preis das eine liegt etwas uber zweihundert mark die anderen so um hundert vierzig mark hundert zwanzig mark ich weis)

Sentence 520:
0 Initial errors
0 on fringe, 0 iterations

Sentence 521:
0 Initial errors
0 on fringe, 0 iterations

Sentence 522:
14 Initial errors
0 on fringe, 10 iterations
3 Error:NP Attachment
2 Error:UNSET move
1 Error:Single Word Phrase
1 Error:Unary
1 Error:Unary
1 Error:PP Attachment
2 Error:Modifier Attachment
1 Error:UNSET add
1 Error:NP Internal Structure
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX haben sie schon irgendwelche vorschlage)
		(SIMPX ich weis nicht)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF in die oper)
				(LK mochte)
				[01;33m(FKOORD[00m (MF ich grade nicht)
				(VC gehen)
				[01;31m(NF[00m
					[01;31m(PX[00m
						(KON oder)
						[01;33m(MVC (MF[00m (PX ins konzert)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			[01;31m(NX[00m
				(ADVX aber)
				(ADVX vielleicht)
				[01;33m(NX[00m (NX irgendwas)[01;31m)[00m
			[01;31m(NX[00m
				[01;36m(NX[00m
					(ADJX kleines)
					[01;31m(ADJX[00m
						(ADJA gemutliches)[01;31m)[00m [01;33mNX) MF)[00m[01;36m)[00m
				[01;36m(VC[00m
					[01;36m(VXINF[00m
						(NN treffen)[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;36m)[00m)) [01;33mMVC) FKOORD)[00m
Step:NP Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'VC', 'NF', 'NX', 'NX'], 'mover info': [('NX', (19, 22)), ('NX', (22, 25))], 'old_family': ['SIMPX', 'SIMPX', 'SIMPX', 'NX', 'NX'], 'start left siblings': ['SIMPX', 'SIMPX', 'SIMPX'], 'auto preterminals': ('VAFIN', 'PPER', 'ADV', 'PIAT', 'NN', 'PPER', 'VVFIN', 'PTKNEG', 'APPR', 'ART', 'NN', 'VMFIN', 'PPER', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'APPRART', 'NN', 'ADV', 'ADV', 'PIS', 'ADJA', 'ADJA', 'NN'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'MF', 'VC', 'NF'], 'auto preterminal span': (0, 25), 'adding node already present': False, 'movers': ['NX', 'NX'], 'old_parent': 'TURN', 'added and moved': True, 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'VC'}
(TOP
	(TURN
		(SIMPX haben sie schon irgendwelche vorschlage)
		(SIMPX ich weis nicht)
		(SIMPX
			(VF in die oper)
			(LK mochte)
			(FKOORD
				(MF ich grade nicht)
				(VC gehen)
				[01;31m(NF[00m
					[01;31m(PX[00m
						(KON oder)
						[01;33m(MVC (MF[00m (PX ins konzert)[01;31m)[00m[01;31m)[00m
				[01;31m(NX[00m
					(ADVX aber)
					(ADVX vielleicht)
					[01;33m(NX[00m (NX irgendwas)[01;31m)[00m
				[01;31m(NX[00m
					[01;36m(NX[00m
						(ADJX kleines)
						[01;31m(ADJX[00m
							(ADJA gemutliches)[01;31m)[00m [01;33mNX) MF)[00m[01;36m)[00m
					[01;36m(VC[00m
						[01;36m(VXINF[00m
							(NN treffen)[01;36m)[00m[01;36m)[00m[01;31m)[00m)))) [01;33mMVC)[00m
Step:UNSET move
{'new_parent': 'FKOORD', 'new_family': ['MF', 'VC', 'NF', 'NX', 'NX', 'NN'], 'mover info': [('NN', (24, 25))], 'old_family': ['ADJX', 'ADJX', 'NN'], 'start left siblings': ['ADJX', 'ADJX'], 'auto preterminals': ('PPER', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'APPRART', 'NN', 'ADV', 'ADV', 'PIS', 'ADJA', 'ADJA', 'NN'), 'start right siblings': [], 'end left siblings': ['MF', 'VC', 'NF', 'NX', 'NX'], 'auto preterminal span': (12, 25), 'movers': ['NN'], 'old_parent': 'NX', 'POS confusion': ('NN', 'NN'), 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SIMPX haben sie schon irgendwelche vorschlage)
		(SIMPX ich weis nicht)
		(SIMPX
			(VF in die oper)
			(LK mochte)
			(FKOORD
				(MF ich grade nicht)
				(VC gehen)
				[01;31m(NF[00m
					[01;31m(PX[00m
						(KON oder)
						[01;33m(MVC (MF[00m (PX ins konzert)[01;31m)[00m[01;31m)[00m
				[01;31m(NX[00m
					(ADVX aber)
					(ADVX vielleicht)
					[01;33m(NX[00m (NX irgendwas)[01;31m)[00m
				(NX
					(ADJX kleines)
					[01;31m(ADJX[00m
						(ADJA gemutliches)[01;31m)[00m) [01;33mNX) MF)[00m
				[01;36m(VC[00m
					[01;36m(VXINF[00m
						(NN treffen)[01;36m)[00m[01;36m)[00m)))) [01;33mMVC)[00m
Step:Single Word Phrase
{'subtrees': ['NN'], 'family': ['MF', 'VC', 'NF', 'NX', 'NX', 'VXINF'], 'over_word': True, 'over words': True, 'auto preterminals': ('NN',), 'right siblings': [], 'left siblings': [(MF (NX (PPER ich)) (ADVX (ADV grade)) (ADVX (PTKNEG nicht))), (VC (VXINF (VVINF gehen))), (NF (PX (KON oder) (PX (APPRART ins) (NX (NN konzert))))), (NX (ADVX (ADV aber)) (ADVX (ADV vielleicht)) (NX (PIS irgendwas))), (NX (ADJX (ADJA kleines)) (ADJX (ADJA gemutliches)))], 'auto preterminal span': (24, 25), 'span': (24, 25), 'parent': 'FKOORD', 'label': 'VXINF', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SIMPX haben sie schon irgendwelche vorschlage)
		(SIMPX ich weis nicht)
		(SIMPX
			(VF in die oper)
			(LK mochte)
			(FKOORD
				(MF ich grade nicht)
				(VC gehen)
				[01;31m(NF[00m
					[01;31m(PX[00m
						(KON oder)
						[01;33m(MVC (MF[00m (PX ins konzert)[01;31m)[00m[01;31m)[00m
				[01;31m(NX[00m
					(ADVX aber)
					(ADVX vielleicht)
					[01;33m(NX[00m (NX irgendwas)[01;31m)[00m
				(NX
					(ADJX kleines)
					[01;31m(ADJX[00m
						(ADJA gemutliches)[01;31m)[00m) [01;33mNX) MF)[00m
				[01;36m(VC[00m
					(VXINF
						(NN treffen))[01;36m)[00m)))) [01;33mMVC)[00m
Step:Unary
{'subtrees': ['VXINF'], 'family': ['MF', 'VC', 'NF', 'NX', 'NX', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN',), 'right siblings': [], 'left siblings': [(MF (NX (PPER ich)) (ADVX (ADV grade)) (ADVX (PTKNEG nicht))), (VC (VXINF (VVINF gehen))), (NF (PX (KON oder) (PX (APPRART ins) (NX (NN konzert))))), (NX (ADVX (ADV aber)) (ADVX (ADV vielleicht)) (NX (PIS irgendwas))), (NX (ADJX (ADJA kleines)) (ADJX (ADJA gemutliches)))], 'auto preterminal span': (24, 25), 'span': (24, 25), 'parent': 'FKOORD', 'label': 'VC', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SIMPX haben sie schon irgendwelche vorschlage)
		(SIMPX ich weis nicht)
		(SIMPX
			(VF in die oper)
			(LK mochte)
			(FKOORD
				(MF ich grade nicht)
				(VC gehen)
				[01;31m(NF[00m
					[01;31m(PX[00m
						(KON oder)
						[01;33m(MVC (MF[00m (PX ins konzert)[01;31m)[00m[01;31m)[00m
				[01;31m(NX[00m
					(ADVX aber)
					(ADVX vielleicht)
					[01;33m(NX[00m (NX irgendwas)[01;31m)[00m
				(NX
					(ADJX kleines)
					[01;31m(ADJX[00m
						(ADJA gemutliches)[01;31m)[00m) [01;33mNX) MF)[00m
				(VC treffen))))) [01;33mMVC)[00m
Step:Unary
{'subtrees': ['KON', 'PX'], 'family': ['PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'APPRART', 'NN'), 'right siblings': [], 'parent': 'NF', 'auto preterminal span': (16, 19), 'span': (16, 19), 'left siblings': [], 'label': 'PX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX haben sie schon irgendwelche vorschlage)
		(SIMPX ich weis nicht)
		(SIMPX
			(VF in die oper)
			(LK mochte)
			(FKOORD
				(MF ich grade nicht)
				(VC gehen)
				[01;31m(NF[00m
					(KON oder)
					[01;33m(MVC (MF[00m (PX ins konzert)[01;31m)[00m
				[01;31m(NX[00m
					(ADVX aber)
					(ADVX vielleicht)
					[01;33m(NX[00m (NX irgendwas)[01;31m)[00m
				(NX
					(ADJX kleines)
					[01;31m(ADJX[00m
						(ADJA gemutliches)[01;31m)[00m) [01;33mNX) MF)[00m
				(VC treffen))))) [01;33mMVC)[00m
Step:PP Attachment
{'subtrees': ['KON', 'PX'], 'family': ['MF', 'VC', 'NF', 'NX', 'NX', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'APPRART', 'NN', 'ADV', 'ADV', 'PIS', 'ADJA', 'ADJA', 'NN'), 'right siblings': ['NX', 'NX', 'VC'], 'parent': 'FKOORD', 'auto preterminal span': (12, 25), 'span': (16, 19), 'left siblings': ['MF', 'VC'], 'label': 'NF', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX haben sie schon irgendwelche vorschlage)
		(SIMPX ich weis nicht)
		(SIMPX
			(VF in die oper)
			(LK mochte)
			(FKOORD
				(MF ich grade nicht)
				(VC gehen)
				(KON oder)
				[01;36m(MVC[00m
					[01;36m(MF[00m
						(PX ins konzert)
						[01;31m(NX[00m
							(ADVX aber)
							(ADVX vielleicht)
							[01;33m(NX[00m (NX irgendwas)[01;31m)[00m
						(NX
							(ADJX kleines)
							[01;31m(ADJX[00m
								(ADJA gemutliches)[01;31m)[00m) [01;33mNX)[00m[01;36m)[00m
					(VC treffen)[01;36m)[00m))))
Step:Modifier Attachment
{'new_parent': 'FKOORD', 'new_family': ['MF', 'VC', 'KON', 'PX', 'ADVX', 'ADVX', 'NX', 'NX', 'VC'], 'mover info': [('ADVX', (19, 20)), ('ADVX', (20, 21))], 'old_family': ['ADVX', 'ADVX', 'NX'], 'start left siblings': [], 'auto preterminals': ('PPER', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'APPRART', 'NN', 'ADV', 'ADV', 'PIS', 'ADJA', 'ADJA', 'NN'), 'start right siblings': ['NX'], 'end left siblings': ['MF', 'VC', 'KON', 'PX'], 'auto preterminal span': (12, 25), 'adding node already present': False, 'movers': ['ADVX', 'ADVX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': ['NX', 'NX', 'VC'], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(SIMPX haben sie schon irgendwelche vorschlage)
		(SIMPX ich weis nicht)
		(SIMPX
			(VF in die oper)
			(LK mochte)
			(FKOORD
				(MF ich grade nicht)
				(VC gehen)
				(KON oder)
				[01;36m(MVC[00m
					(MF
						(PX ins konzert)
						(ADVX aber)
						(ADVX vielleicht)
						[01;36m(NX[00m
							(NX irgendwas)
							(NX
								(ADJX kleines)
								[01;31m(ADJX[00m
									(ADJA gemutliches)[01;31m)[00m)[01;36m)[00m)
					(VC treffen)[01;36m)[00m))))
Step:UNSET add
{'subtrees': ['MF', 'VC'], 'family': ['MF', 'VC', 'KON', 'MVC'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'NN', 'ADV', 'ADV', 'PIS', 'ADJA', 'ADJA', 'NN'), 'right siblings': [], 'left siblings': [(MF (NX (PPER ich)) (ADVX (ADV grade)) (ADVX (PTKNEG nicht))), (VC (VXINF (VVINF gehen))), (KON oder)], 'auto preterminal span': (17, 25), 'span': (17, 25), 'parent': 'FKOORD', 'label': 'MVC', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SIMPX haben sie schon irgendwelche vorschlage)
		(SIMPX ich weis nicht)
		(SIMPX
			(VF in die oper)
			(LK mochte)
			(FKOORD
				(MF ich grade nicht)
				(VC gehen)
				(KON oder)
				(MVC
					(MF
						(PX ins konzert)
						(ADVX aber)
						(ADVX vielleicht)
						[01;36m(NX[00m
							(NX irgendwas)
							(NX
								(ADJX kleines)
								[01;31m(ADJX[00m
									(ADJA gemutliches)[01;31m)[00m)[01;36m)[00m)
					(VC treffen))))))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['PX', 'ADVX', 'ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PIS', 'ADJA', 'ADJA'), 'right siblings': [], 'left siblings': [(PX (APPRART ins) (NX (NN konzert))), (ADVX (ADV aber)), (ADVX (ADV vielleicht))], 'auto preterminal span': (21, 24), 'span': (21, 24), 'parent': 'MF', 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'add'}
(TOP
	(TURN
		(SIMPX haben sie schon irgendwelche vorschlage)
		(SIMPX ich weis nicht)
		(SIMPX
			(VF in die oper)
			(LK mochte)
			(FKOORD
				(MF ich grade nicht)
				(VC gehen)
				(KON oder)
				(MVC
					(MF
						(PX ins konzert)
						(ADVX aber)
						(ADVX vielleicht)
						(NX
							(NX irgendwas)
							(NX
								(ADJX kleines)
								[01;31m(ADJX[00m
									(ADJA gemutliches)[01;31m)[00m)))
					(VC treffen))))))
Step:Single Word Phrase
{'subtrees': ['ADJA'], 'family': ['ADJX', 'ADJX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADJA', 'ADJA'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (22, 24), 'span': (23, 24), 'left siblings': ['ADJX'], 'label': 'ADJX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP haben sie schon irgendwelche vorschlage ich weis nicht in die oper mochte ich grade nicht gehen oder ins konzert aber vielleicht irgendwas kleines gemutliches treffen)

Sentence 523:
0 Initial errors
0 on fringe, 0 iterations

Sentence 524:
0 Initial errors
0 on fringe, 0 iterations

Sentence 525:
0 Initial errors
0 on fringe, 0 iterations

Sentence 526:
2 Initial errors
0 on fringe, 2 iterations
1 Error:UNSET remove
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		[01;31m(SIMPX[00m
			(VF wir)
			(LK konnen)
			(MF auch gleich halb acht)
			(VC sagen)
			[01;31m(NF[00m
				(NX
					(NX sieben uhr)
					(NX sieben uhr funfundzwanzig))[01;31m)[00m[01;31m)[00m
		(DM gut)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'VC', 'NF'], 'family': ['DM', 'SIMPX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VMFIN', 'ADV', 'ADV', 'ADJD', 'CARD', 'VVINF', 'CARD', 'NN', 'CARD', 'NN', 'CARD', 'ITJ'), 'right siblings': ['DM'], 'parent': 'TURN', 'auto preterminal span': (0, 14), 'span': (1, 13), 'left siblings': ['DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(VF wir)
		(LK konnen)
		(MF auch gleich halb acht)
		(VC sagen)
		[01;31m(NF[00m
			(NX
				(NX sieben uhr)
				(NX sieben uhr funfundzwanzig))[01;31m)[00m
		(DM gut)))
Step:Unary
{'subtrees': ['NX'], 'family': ['DM', 'VF', 'LK', 'MF', 'VC', 'NF', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VMFIN', 'ADV', 'ADV', 'ADJD', 'CARD', 'VVINF', 'CARD', 'NN', 'CARD', 'NN', 'CARD', 'ITJ'), 'right siblings': ['DM'], 'parent': 'TURN', 'auto preterminal span': (0, 14), 'span': (8, 13), 'left siblings': ['DM', 'VF', 'LK', 'MF', 'VC'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja wir konnen auch gleich halb acht sagen sieben uhr sieben uhr funfundzwanzig gut)

Sentence 527:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX das teuerste mus es vielleicht nicht sein)
		[01;36m(ADVX[00m [01;31m(DM[00m
			(KON aber)[01;31m)[00m[01;36m)[00m))
Step:Single Word Phrase
{'family': ['DM', 'SIMPX', 'ADVX'], 'auto preterminal span': (8, 9), 'span': (8, 9), 'subtrees': ['KON'], 'parent': 'TURN', 'over_word': True, 'auto preterminals': ('KON',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('DM', 'ADVX')}
(TOP ja das teuerste mus es vielleicht nicht sein aber)

Sentence 528:
0 Initial errors
0 on fringe, 0 iterations

Sentence 529:
0 Initial errors
0 on fringe, 0 iterations

Sentence 530:
0 Initial errors
0 on fringe, 0 iterations

Sentence 531:
0 Initial errors
0 on fringe, 0 iterations

Sentence 532:
0 Initial errors
0 on fringe, 0 iterations

Sentence 533:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Co-ordination
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX [01;33m(NX[00m
			(VF
				(NX
					(ART der)
					[01;31m(NX[00m
						(NX dienstag) [01;33mNX)[00m
						(KON und)
						(NX mittwoch)[01;31m)[00m))
			(LK wurde)
			(MF bei mir sehr gut)
			(VC passen))))
Step:Co-ordination
{'new_parent': 'VF', 'new_family': ['NX', 'KON', 'NX'], 'mover info': [('KON', (3, 4)), ('NX', (4, 5))], 'old_family': ['NX', 'KON', 'NX'], 'start left siblings': ['NX'], 'auto preterminals': ('ART', 'NN', 'KON', 'NN'), 'start right siblings': [], 'end left siblings': ['NX'], 'auto preterminal span': (1, 5), 'adding node already present': False, 'movers': ['KON', 'NX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'Co-ordination', 'type': 'move', 'added label': 'NX'}
(TOP ja der dienstag und mittwoch wurde bei mir sehr gut passen)

Sentence 534:
0 Initial errors
0 on fringe, 0 iterations

Sentence 535:
3 Initial errors
0 on fringe, 2 iterations
2 Error:Modifier Attachment
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ach)
		(SIMPX
			(VF das)
			(LK ist)
			(MF
				(ADVX doch)
				[01;36m(ADJX[00m
					(ADVX etwas)
					[01;31m(ADJX[00m
						(ADVX sehr)
						(ADJD fruh)[01;31m)[00m[01;36m)[00m))
		(DM oder)
		(SIMPX
			(VF wann)
			(LK geht)
			(MF
				(ADVX denn)
				[01;36m(NX[00m
					(NX der zweite zug)
					(PX in der fruh)[01;36m)[00m))))
Step:Modifier Attachment
{'new_parent': 'ADJX', 'new_family': ['ADVX', 'ADVX', 'ADJD'], 'mover info': [('ADVX', (4, 5))], 'old_family': ['ADVX', 'ADVX', 'ADJX'], 'start left siblings': ['ADVX'], 'auto preterminals': ('ADV', 'ADV', 'ADV', 'ADJD'), 'start right siblings': ['ADJX'], 'end left siblings': [], 'auto preterminal span': (3, 7), 'movers': ['ADVX'], 'old_parent': 'MF', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['ADVX', 'ADJD'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ach)
		(SIMPX das ist doch etwas sehr fruh)
		(DM oder)
		(SIMPX
			(VF wann)
			(LK geht)
			(MF
				(ADVX denn)
				[01;36m(NX[00m
					(NX der zweite zug)
					(PX in der fruh)[01;36m)[00m))))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'ADJA', 'NN', 'APPR', 'ART', 'NN'), 'right siblings': [], 'left siblings': [(ADVX (ADV denn))], 'auto preterminal span': (11, 17), 'span': (11, 17), 'parent': 'MF', 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP ach das ist doch etwas sehr fruh oder wann geht denn der zweite zug in der fruh)

Sentence 536:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX
			(VF ich)
			(LK denke)
			(NF
				(SIMPX
					(VF es)
					(LK wird)
					(MF doch)
					(VC reichen)
					(NF
						(SIMPX
							(C wenn)
							(MF
								(NX wir)
								(PX
									(ADVX
										(ADVX so)
										[01;36m(ADVX[00m
											(ADV etwa)[01;36m)[00m)
									(APPR um)
									(NX acht uhr)))
							(VC losfahren wurden))))))
		(SIMPX was meinen sie denn)))
Step:Single Word Phrase
{'subtrees': ['ADV'], 'family': ['ADVX', 'ADVX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADV',), 'right siblings': [], 'left siblings': [(ADVX (ADV so))], 'auto preterminal span': (9, 10), 'span': (9, 10), 'parent': 'ADVX', 'label': 'ADVX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP ich denke es wird doch reichen wenn wir so etwa um acht uhr losfahren wurden was meinen sie denn)

Sentence 537:
7 Initial errors
0 on fringe, 6 iterations
2 Error:UNSET move
1 Error:Modifier Attachment
1 Error:UNSET remove
1 Error:Single Word Phrase
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM sehr schon)
		(SIMPX dann sollten wir auch gleich ein hotel in der nahe vom hauptbahnhof nehmen)
		[01;31m(SIMPX[00m
			(VF was)
			(LK wurden)
			(MF sie denn vom schloshotel hannover)
			(VC halten)[01;31m)[00m
		(SIMPX
			(VF es)
			(LK ist)
			(MF
				(ADJX
					(NX
						(NX
							[01;36m(ADVX[00m
								(ADVX etwa)
								(ADVX nur)[01;36m)[00m
							(ADJX funf)
							(NN minuten))
						(PX vom hauptbahnhof))
					(ADJD entfernt))))
		(SIMPX
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			[01;31m(VF[00m
				(NX
					(NX der preis)
					(PX fur das einzelzimmer))[01;31m)[00m
			[01;36m(NX[00m
				(LK betragt)
				[01;31m(MF[00m
					[01;31m(NX[00m
						(ADJX hundert funfunddreisig)
						(NN mark)[01;31m)[00m[01;31m)[00m[01;36m)[00m)))
Step:UNSET move
{'new_parent': 'NX', 'new_family': ['LK', 'ADJX', 'NN'], 'mover info': [('LK', (38, 39))], 'old_family': ['KOORD', 'VF', 'LK', 'MF'], 'start left siblings': ['KOORD', 'VF'], 'auto preterminals': ('KON', 'ART', 'NN', 'APPR', 'ART', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN'), 'start right siblings': ['MF'], 'end left siblings': [], 'auto preterminal span': (32, 42), 'movers': ['LK'], 'old_parent': 'SIMPX', 'POS confusion': ('VVFIN', 'VVFIN'), 'end right siblings': ['ADJX', 'NN'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM sehr schon)
		(SIMPX dann sollten wir auch gleich ein hotel in der nahe vom hauptbahnhof nehmen)
		[01;31m(SIMPX[00m
			(VF was)
			(LK wurden)
			(MF sie denn vom schloshotel hannover)
			(VC halten)[01;31m)[00m
		(SIMPX
			(VF es)
			(LK ist)
			(MF
				(ADJX
					(NX
						(NX
							[01;36m(ADVX[00m
								(ADVX etwa)
								(ADVX nur)[01;36m)[00m
							(ADJX funf)
							(NN minuten))
						(PX vom hauptbahnhof))
					(ADJD entfernt))))
		(SIMPX
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			[01;31m(VF[00m
				(NX
					(NX der preis)
					(PX fur das einzelzimmer))[01;31m)[00m
			[01;31m(MF[00m
				(NX
					(LK betragt)
					(ADJX hundert funfunddreisig)
					(NN mark))[01;31m)[00m)))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'ADVX'], 'family': ['ADVX', 'ADJX', 'NN'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV'), 'right siblings': [(ADJX (CARD funf)), (NN minuten)], 'left siblings': [], 'auto preterminal span': (25, 27), 'span': (25, 27), 'parent': 'NX', 'label': 'ADVX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM sehr schon)
		(SIMPX dann sollten wir auch gleich ein hotel in der nahe vom hauptbahnhof nehmen)
		[01;31m(SIMPX[00m
			(VF was)
			(LK wurden)
			(MF sie denn vom schloshotel hannover)
			(VC halten)[01;31m)[00m
		(SIMPX es ist etwa nur funf minuten vom hauptbahnhof entfernt)
		(SIMPX
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			[01;31m(VF[00m
				(NX
					(NX der preis)
					(PX fur das einzelzimmer))[01;31m)[00m
			[01;31m(MF[00m
				(NX
					(LK betragt)
					(ADJX hundert funfunddreisig)
					(NN mark))[01;31m)[00m)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADJD', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'NN', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'VVINF', 'PWS', 'VAFIN', 'PPER', 'ADV', 'APPRART', 'NE', 'NE', 'VVINF', 'PPER', 'VAFIN', 'ADV', 'ADV', 'CARD', 'NN', 'APPRART', 'NN', 'ADJD', 'KON', 'ART', 'NN', 'APPR', 'ART', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN'), 'right siblings': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 42), 'span': (15, 23), 'left siblings': ['DM', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM sehr schon)
		(SIMPX dann sollten wir auch gleich ein hotel in der nahe vom hauptbahnhof nehmen)
		(VF was)
		(LK wurden)
		(MF sie denn vom schloshotel hannover)
		(VC halten)
		(SIMPX es ist etwa nur funf minuten vom hauptbahnhof entfernt)
		(SIMPX
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			[01;31m(VF[00m
				(NX
					(NX der preis)
					(PX fur das einzelzimmer))[01;31m)[00m
			[01;31m(MF[00m
				(NX
					(LK betragt)
					(ADJX hundert funfunddreisig)
					(NN mark))[01;31m)[00m)))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['KOORD', 'VF', 'MF'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON', 'ART', 'NN', 'APPR', 'ART', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN'), 'right siblings': ['VF', 'MF'], 'parent': 'SIMPX', 'auto preterminal span': (32, 42), 'span': (32, 33), 'left siblings': [], 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(DM sehr schon)
		(SIMPX dann sollten wir auch gleich ein hotel in der nahe vom hauptbahnhof nehmen)
		(VF was)
		(LK wurden)
		(MF sie denn vom schloshotel hannover)
		(VC halten)
		(SIMPX es ist etwa nur funf minuten vom hauptbahnhof entfernt)
		(SIMPX
			(KON und)
			[01;31m(VF[00m
				(NX
					(NX der preis)
					(PX fur das einzelzimmer))[01;31m)[00m
			[01;31m(MF[00m
				(NX
					(LK betragt)
					(ADJX hundert funfunddreisig)
					(NN mark))[01;31m)[00m)))
Step:Unary
{'subtrees': ['NX'], 'family': ['KON', 'VF', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'ART', 'NN', 'APPR', 'ART', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN'), 'right siblings': ['MF'], 'parent': 'SIMPX', 'auto preterminal span': (32, 42), 'span': (33, 38), 'left siblings': ['KON'], 'label': 'VF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM sehr schon)
		(SIMPX dann sollten wir auch gleich ein hotel in der nahe vom hauptbahnhof nehmen)
		(VF was)
		(LK wurden)
		(MF sie denn vom schloshotel hannover)
		(VC halten)
		(SIMPX es ist etwa nur funf minuten vom hauptbahnhof entfernt)
		(SIMPX
			(KON und)
			(NX der preis fur das einzelzimmer)
			[01;31m(MF[00m
				(NX
					(LK betragt)
					(ADJX hundert funfunddreisig)
					(NN mark))[01;31m)[00m)))
Step:Unary
{'subtrees': ['NX'], 'family': ['KON', 'NX', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'ART', 'NN', 'APPR', 'ART', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (32, 42), 'span': (38, 42), 'left siblings': ['KON', 'NX'], 'label': 'MF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP sehr schon dann sollten wir auch gleich ein hotel in der nahe vom hauptbahnhof nehmen was wurden sie denn vom schloshotel hannover halten es ist etwa nur funf minuten vom hauptbahnhof entfernt und der preis fur das einzelzimmer betragt hundert funfunddreisig mark)

Sentence 538:
2 Initial errors
0 on fringe, 2 iterations
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM sehr schon)
		(SIMPX und wie sieht es dann aus)
		(SIMPX
			(LK sollen)
			(MF wir uns vielleicht irgendwelche theaterkarten)
			(VC besorgen)
			[01;31m(NF[00m
				(SIMPX
					(SIMPX wenn wir schon dort sind)
					[01;36m(NF[00m
						(SIMPX
							(C das)
							(MF wir bischen kultur)
							(VC mitnehmen))[01;36m)[00m)[01;31m)[00m)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SIMPX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'PIDAT', 'NN', 'VVFIN'), 'right siblings': [], 'left siblings': [(SIMPX (C (KOUS wenn)) (MF (NX (PPER wir)) (ADVX (ADV schon)) (ADVX (ADV dort))) (VC (VXFIN (VAFIN sind))))], 'auto preterminal span': (20, 25), 'span': (20, 25), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM sehr schon)
		(SIMPX und wie sieht es dann aus)
		(SIMPX
			(LK sollen)
			(MF wir uns vielleicht irgendwelche theaterkarten)
			(VC besorgen)
			[01;31m(NF[00m
				(SIMPX
					(SIMPX wenn wir schon dort sind)
					(NF das wir bischen kultur mitnehmen))[01;31m)[00m)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['LK', 'MF', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('VMFIN', 'PPER', 'PRF', 'ADV', 'PIAT', 'NN', 'VVINF', 'KOUS', 'PPER', 'ADV', 'ADV', 'VAFIN', 'KOUS', 'PPER', 'PIDAT', 'NN', 'VVFIN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (8, 25), 'span': (15, 25), 'left siblings': ['LK', 'MF', 'VC'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP sehr schon und wie sieht es dann aus sollen wir uns vielleicht irgendwelche theaterkarten besorgen wenn wir schon dort sind das wir bischen kultur mitnehmen)

Sentence 539:
0 Initial errors
0 on fringe, 0 iterations

Sentence 540:
7 Initial errors
0 on fringe, 4 iterations
2 Error:UNSET move
3 Error:Co-ordination
1 Error:UNSET add
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX finde ich auch)
		(SIMPX [01;33m(SIMPX[00m
			(KOORD und)
			[01;31m(LV[00m
				[01;31m(SIMPX[00m
					[01;31m(SIMPX[00m
						(C falls)
						(MF sich irgendwas)
						(VC andert)[01;31m)[00m [01;33mSIMPX)[00m
					(KON oder)
					[01;36m(LV[00m
						(SIMPX [01;33m(SIMPX[00m
							(C wenn)
							(MF
								(NX wir)
								(NX
									(ADJX nahere)
									[01;36m(NX[00m
										(NN einzelheiten)[01;36m)[00m))
							(VC wissen))[01;36m)[00m[01;31m)[00m[01;31m)[00m
			(VF dann)
			(LK kontaktieren)
			(MF wir uns einfach noch mal)))) [01;33mSIMPX)[00m
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['KOORD', 'C', 'MF', 'VC'], 'mover info': [('KOORD', (4, 5))], 'old_family': ['KOORD', 'LV', 'VF', 'LK', 'MF'], 'start left siblings': [], 'auto preterminals': ('KON', 'KOUS', 'PRF', 'PIS', 'VVFIN', 'KON', 'KOUS', 'PPER', 'ADJA', 'NN', 'VVFIN', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV'), 'start right siblings': ['LV', 'VF', 'LK', 'MF'], 'end left siblings': [], 'auto preterminal span': (4, 22), 'movers': ['KOORD'], 'old_parent': 'SIMPX', 'POS confusion': ('KON', 'KON'), 'end right siblings': ['C', 'MF', 'VC'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(SIMPX finde ich auch)
		(SIMPX
			[01;31m(LV[00m
				[01;31m(SIMPX[00m
					(SIMPX und falls sich irgendwas andert)
					(KON oder)
					[01;36m(LV[00m
						(SIMPX [01;33m(SIMPX[00m
							(C wenn)
							(MF
								(NX wir)
								(NX
									(ADJX nahere)
									[01;36m(NX[00m
										(NN einzelheiten)[01;36m)[00m))
							(VC wissen))[01;36m)[00m[01;31m)[00m[01;31m)[00m
			(VF dann)
			(LK kontaktieren)
			(MF wir uns einfach noch mal)))) [01;33mSIMPX)[00m
Step:Co-ordination
{'new_parent': 'SIMPX', 'new_family': ['SIMPX', 'KON', 'LV', 'VF', 'LK', 'MF'], 'mover info': [('SIMPX', (4, 9)), ('KON', (9, 10))], 'old_family': ['SIMPX', 'KON', 'SIMPX'], 'start left siblings': [], 'auto preterminals': ('KON', 'KOUS', 'PRF', 'PIS', 'VVFIN', 'KON', 'KOUS', 'PPER', 'ADJA', 'NN', 'VVFIN', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV'), 'start right siblings': ['SIMPX'], 'end left siblings': [], 'auto preterminal span': (4, 22), 'movers': ['SIMPX', 'KON'], 'old_parent': 'SIMPX', 'end right siblings': ['LV', 'VF', 'LK', 'MF'], 'classified_type': 'Co-ordination', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(SIMPX finde ich auch)
		(SIMPX
			(SIMPX und falls sich irgendwas andert)
			(KON oder)
			[01;36m(SIMPX[00m
				(LV
					(SIMPX
						(C wenn)
						(MF
							(NX wir)
							(NX
								(ADJX nahere)
								[01;36m(NX[00m
									(NN einzelheiten)[01;36m)[00m))
						(VC wissen)))
				(VF dann)
				(LK kontaktieren)
				(MF wir uns einfach noch mal)[01;36m)[00m)))
Step:UNSET add
{'subtrees': ['LV', 'VF', 'LK', 'MF'], 'family': ['SIMPX', 'KON', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ADJA', 'NN', 'VVFIN', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV'), 'right siblings': [], 'left siblings': [(SIMPX (KOORD (KON und)) (C (KOUS falls)) (MF (NX (PRF sich)) (NX (PIS irgendwas))) (VC (VXFIN (VVFIN andert)))), (KON oder)], 'auto preterminal span': (10, 22), 'span': (10, 22), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX finde ich auch)
		(SIMPX
			(SIMPX und falls sich irgendwas andert)
			(KON oder)
			(SIMPX
				(LV
					(SIMPX
						(C wenn)
						(MF
							(NX wir)
							(NX
								(ADJX nahere)
								[01;36m(NX[00m
									(NN einzelheiten)[01;36m)[00m))
						(VC wissen)))
				(VF dann)
				(LK kontaktieren)
				(MF wir uns einfach noch mal)))))
Step:Single Word Phrase
{'subtrees': ['NN'], 'family': ['ADJX', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('NN',), 'right siblings': [], 'left siblings': [(ADJX (ADJA nahere))], 'auto preterminal span': (13, 14), 'span': (13, 14), 'parent': 'NX', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP ja finde ich auch und falls sich irgendwas andert oder wenn wir nahere einzelheiten wissen dann kontaktieren wir uns einfach noch mal)

Sentence 541:
0 Initial errors
0 on fringe, 0 iterations

Sentence 542:
0 Initial errors
0 on fringe, 0 iterations

Sentence 543:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM hervorragend)
		[01;36m(ADVX[00m
			(DM
				[01;31m(VXFIN[00m
					(VVIMP sprich)[01;31m)[00m)[01;36m)[00m
		(NX der erste und zweite september)))
Step:Single Word Phrase
{'family': ['ADVX'], 'auto preterminal span': (1, 2), 'span': (1, 2), 'subtrees': ['VVIMP'], 'parent': 'DM', 'over_word': True, 'auto preterminals': ('VVIMP',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VXFIN', 'ADVX')}
(TOP hervorragend sprich der erste und zweite september)

Sentence 544:
0 Initial errors
0 on fringe, 0 iterations

Sentence 545:
0 Initial errors
0 on fringe, 0 iterations

Sentence 546:
0 Initial errors
0 on fringe, 0 iterations

Sentence 547:
0 Initial errors
0 on fringe, 0 iterations

Sentence 548:
12 Initial errors
0 on fringe, 8 iterations
2 Error:Single Word Phrase
2 Error:UNSET move
2 Error:PP Attachment
2 Error:Modifier Attachment
1 Error:UNSET add
1 Error:Unary
1 Error:Single Word Phrase
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX ich werde meiner sekretarin bescheid sagen)
		(SIMPX die soll sich da drum kummern)
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK werde)
			[01;36m(MF[00m
				[01;31m(MF[00m
					(NX ich)
					(NX ihnen)
					[01;36m(ADJX[00m [01;31m(NX[00m [01;33m(NX[00m
						(NN neues)[01;31m)[00m[01;36m)[00m[01;31m)[00m
				[01;31m(VC[00m
					[01;31m(VXINF[00m
						(VVINF erzahlen)[01;31m)[00m[01;31m)[00m [01;33mNX)[00m
				[01;31m(NF[00m [01;33m(PX[00m
					(PX
						(APPRART vom)
						[01;31m(NX[00m
							(NX kulturleben) [01;33mPX)[00m
							(PX in hannover)[01;31m)[00m)[01;31m)[00m[01;36m)[00m)
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK konnen)
			(MF
				(NX wir)
				(NX uns)
				(ADVX ja)
				[01;31m(ADVX[00m
					(ADVX immer)
					[01;36m(ADVX[00m
						(ADV noch)[01;36m)[00m[01;31m)[00m)
			(VC einigen))
		(SIMPX was halten sie davon)))
Step:Single Word Phrase
{'family': ['NX', 'NX', 'ADJX'], 'auto preterminal span': (17, 18), 'span': (17, 18), 'subtrees': ['NN'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('NN',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('NX', 'ADJX')}
(TOP
	(TURN
		(SIMPX ich werde meiner sekretarin bescheid sagen)
		(SIMPX die soll sich da drum kummern)
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK werde)
			[01;36m(MF[00m
				[01;31m(MF[00m
					(NX ich)
					(NX ihnen)
					[01;33m(NX[00m (ADJX neues)[01;31m)[00m
				[01;31m(VC[00m
					[01;31m(VXINF[00m
						(VVINF erzahlen)[01;31m)[00m[01;31m)[00m [01;33mNX)[00m
				[01;31m(NF[00m [01;33m(PX[00m
					(PX
						(APPRART vom)
						[01;31m(NX[00m
							(NX kulturleben) [01;33mPX)[00m
							(PX in hannover)[01;31m)[00m)[01;31m)[00m[01;36m)[00m)
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK konnen)
			(MF
				(NX wir)
				(NX uns)
				(ADVX ja)
				[01;31m(ADVX[00m
					(ADVX immer)
					[01;36m(ADVX[00m
						(ADV noch)[01;36m)[00m[01;31m)[00m)
			(VC einigen))
		(SIMPX was halten sie davon)))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['NX', 'NX', 'ADJX', 'VC', 'NF'], 'mover info': [('VC', (18, 19)), ('NF', (19, 23))], 'old_family': ['KOORD', 'VF', 'LK', 'MF', 'VC', 'NF'], 'start left siblings': ['KOORD', 'VF', 'LK', 'MF'], 'auto preterminals': ('KON', 'ADV', 'VAFIN', 'PPER', 'PPER', 'NN', 'VVINF', 'APPRART', 'NN', 'APPR', 'NE'), 'start right siblings': [], 'end left siblings': ['NX', 'NX', 'ADJX'], 'auto preterminal span': (12, 23), 'movers': ['VC', 'NF'], 'old_parent': 'SIMPX', 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SIMPX ich werde meiner sekretarin bescheid sagen)
		(SIMPX die soll sich da drum kummern)
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK werde)
			(MF
				(NX ich)
				(NX ihnen)
				[01;36m(NX[00m
					(ADJX neues)
					[01;31m(VC[00m
						[01;31m(VXINF[00m
							(VVINF erzahlen)[01;31m)[00m[01;31m)[00m[01;36m)[00m
				[01;31m(NF[00m [01;33m(PX[00m
					(PX
						(APPRART vom)
						[01;31m(NX[00m
							(NX kulturleben) [01;33mPX)[00m
							(PX in hannover)[01;31m)[00m)[01;31m)[00m))
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK konnen)
			(MF
				(NX wir)
				(NX uns)
				(ADVX ja)
				[01;31m(ADVX[00m
					(ADVX immer)
					[01;36m(ADVX[00m
						(ADV noch)[01;36m)[00m[01;31m)[00m)
			(VC einigen))
		(SIMPX was halten sie davon)))
Step:PP Attachment
{'new_parent': 'NF', 'new_family': ['PX', 'PX'], 'mover info': [('PX', (21, 23))], 'old_family': ['NX', 'PX'], 'start left siblings': ['NX'], 'auto preterminals': ('APPRART', 'NN', 'APPR', 'NE'), 'start right siblings': [], 'end left siblings': ['PX'], 'auto preterminal span': (19, 23), 'adding node already present': False, 'movers': ['PX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'ADVX'}
(TOP
	(TURN
		(SIMPX ich werde meiner sekretarin bescheid sagen)
		(SIMPX die soll sich da drum kummern)
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK werde)
			(MF
				(NX ich)
				(NX ihnen)
				[01;36m(NX[00m
					(ADJX neues)
					[01;31m(VC[00m
						[01;31m(VXINF[00m
							(VVINF erzahlen)[01;31m)[00m[01;31m)[00m[01;36m)[00m
				(PX
					[01;31m(NF[00m
						(PX vom kulturleben)
						(PX in hannover)[01;31m)[00m)))
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK konnen)
			(MF
				(NX wir)
				(NX uns)
				(ADVX ja)
				[01;31m(ADVX[00m
					(ADVX immer)
					[01;36m(ADVX[00m
						(ADV noch)[01;36m)[00m[01;31m)[00m)
			(VC einigen))
		(SIMPX was halten sie davon)))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'NX', 'ADVX', 'ADVX', 'ADVX'], 'mover info': [('ADVX', (29, 30))], 'old_family': ['ADVX', 'ADV'], 'start left siblings': [], 'auto preterminals': ('PPER', 'PRF', 'ADV', 'ADV', 'ADV'), 'start right siblings': ['ADV'], 'end left siblings': ['NX', 'NX', 'ADVX'], 'auto preterminal span': (26, 31), 'movers': ['ADVX'], 'old_parent': 'ADVX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['ADVX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SIMPX ich werde meiner sekretarin bescheid sagen)
		(SIMPX die soll sich da drum kummern)
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK werde)
			(MF
				(NX ich)
				(NX ihnen)
				[01;36m(NX[00m
					(ADJX neues)
					[01;31m(VC[00m
						[01;31m(VXINF[00m
							(VVINF erzahlen)[01;31m)[00m[01;31m)[00m[01;36m)[00m
				(PX
					[01;31m(NF[00m
						(PX vom kulturleben)
						(PX in hannover)[01;31m)[00m)))
		(SIMPX und dann konnen wir uns ja immer noch einigen)
		(SIMPX was halten sie davon)))
Step:UNSET add
{'subtrees': ['ADJX', 'VC'], 'family': ['NX', 'NX', 'NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'VVINF'), 'right siblings': [(PX (NF (PX (APPRART vom) (NX (NN kulturleben))) (PX (APPR in) (NX (NE hannover)))))], 'left siblings': [(NX (PPER ich)), (NX (PPER ihnen))], 'auto preterminal span': (17, 19), 'span': (17, 19), 'parent': 'MF', 'label': 'NX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SIMPX ich werde meiner sekretarin bescheid sagen)
		(SIMPX die soll sich da drum kummern)
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK werde)
			(MF
				(NX ich)
				(NX ihnen)
				(NX
					(ADJX neues)
					[01;31m(VC[00m
						[01;31m(VXINF[00m
							(VVINF erzahlen)[01;31m)[00m[01;31m)[00m)
				(PX
					[01;31m(NF[00m
						(PX vom kulturleben)
						(PX in hannover)[01;31m)[00m)))
		(SIMPX und dann konnen wir uns ja immer noch einigen)
		(SIMPX was halten sie davon)))
Step:Unary
{'subtrees': ['VXINF'], 'family': ['ADJX', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'VVINF'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (17, 19), 'span': (18, 19), 'left siblings': ['ADJX'], 'label': 'VC', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX ich werde meiner sekretarin bescheid sagen)
		(SIMPX die soll sich da drum kummern)
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK werde)
			(MF
				(NX ich)
				(NX ihnen)
				(NX
					(ADJX neues)
					[01;31m(VXINF[00m
						(VVINF erzahlen)[01;31m)[00m)
				(PX
					[01;31m(NF[00m
						(PX vom kulturleben)
						(PX in hannover)[01;31m)[00m)))
		(SIMPX und dann konnen wir uns ja immer noch einigen)
		(SIMPX was halten sie davon)))
Step:Single Word Phrase
{'subtrees': ['VVINF'], 'family': ['ADJX', 'VXINF'], 'over_word': True, 'over words': True, 'auto preterminals': ('NN', 'VVINF'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (17, 19), 'span': (18, 19), 'left siblings': ['ADJX'], 'label': 'VXINF', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX ich werde meiner sekretarin bescheid sagen)
		(SIMPX die soll sich da drum kummern)
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK werde)
			(MF
				(NX ich)
				(NX ihnen)
				(NX neues erzahlen)
				(PX
					[01;31m(NF[00m
						(PX vom kulturleben)
						(PX in hannover)[01;31m)[00m)))
		(SIMPX und dann konnen wir uns ja immer noch einigen)
		(SIMPX was halten sie davon)))
Step:Unary
{'subtrees': ['PX', 'PX'], 'family': ['NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'NN', 'APPR', 'NE'), 'right siblings': [], 'parent': 'PX', 'auto preterminal span': (19, 23), 'span': (19, 23), 'left siblings': [], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ich werde meiner sekretarin bescheid sagen die soll sich da drum kummern und dann werde ich ihnen neues erzahlen vom kulturleben in hannover und dann konnen wir uns ja immer noch einigen was halten sie davon)

Sentence 549:
3 Initial errors
0 on fringe, 2 iterations
2 Error:UNSET move
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM genau)
		(SIMPX das mache ich)
		(DM okay)
		(SIMPX
			(VF dann)
			(LK waren)
			[01;36m(MF[00m
				[01;31m(MF[00m
					(NX wir)
					(PX von meiner seite)
					(ADVX soweit)
					(ADJX fertig)[01;31m)[00m
				[01;31m(NF[00m
					(PX
						(APPR mit)
						(NX der planung))[01;31m)[00m[01;36m)[00m)))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['NX', 'PX', 'ADVX', 'ADJX', 'NF'], 'mover info': [('NF', (13, 16))], 'old_family': ['VF', 'LK', 'MF', 'NF'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'APPR', 'PPOSAT', 'NN', 'ADV', 'ADJD', 'APPR', 'ART', 'NN'), 'start right siblings': [], 'end left siblings': ['NX', 'PX', 'ADVX', 'ADJX'], 'auto preterminal span': (5, 16), 'movers': ['NF'], 'old_parent': 'SIMPX', 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM genau)
		(SIMPX das mache ich)
		(DM okay)
		(SIMPX
			(VF dann)
			(LK waren)
			(MF
				(NX wir)
				(PX von meiner seite)
				(ADVX soweit)
				(ADJX fertig)
				[01;31m(NF[00m
					(PX
						(APPR mit)
						(NX der planung))[01;31m)[00m))))
Step:Unary
{'subtrees': ['PX'], 'family': ['NX', 'PX', 'ADVX', 'ADJX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'APPR', 'PPOSAT', 'NN', 'ADV', 'ADJD', 'APPR', 'ART', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (7, 16), 'span': (13, 16), 'left siblings': ['NX', 'PX', 'ADVX', 'ADJX'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP genau das mache ich okay dann waren wir von meiner seite soweit fertig mit der planung)

Sentence 550:
0 Initial errors
0 on fringe, 0 iterations

Sentence 551:
0 Initial errors
0 on fringe, 0 iterations

Sentence 552:
5 Initial errors
0 on fringe, 3 iterations
3 Error:NP Attachment
1 Error:Unary
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF ich)
			(LK hatte)
			(MF jetzt am vierzehnten und funfzehnten januar zeit)
			[01;36m(NX[00m
				(NF
					[01;31m(PX[00m
						(KON oder)
						[01;31m(PX[00m
							[01;36m(PX[00m
								(ADVX auch)
								(PX am wochenende)[01;36m)[00m
							(NX siebzehnter achtzehnter januar)[01;31m)[00m[01;31m)[00m)[01;36m)[00m)
		[01;31m(PX[00m
			(KON und)
			(PX zwischen dem dreiundzwanzigsten und sechsundzwanzigsten januar und dem achtundzwanzigsten und neunundzwanzigsten januar)[01;31m)[00m))
Step:NP Attachment
{'new_parent': 'PX', 'new_family': ['KON', 'PX', 'NX'], 'mover info': [('NX', (14, 17))], 'old_family': ['ADVX', 'PX', 'NX'], 'start left siblings': ['ADVX', 'PX'], 'auto preterminals': ('KON', 'ADV', 'APPRART', 'NN', 'ADJA', 'ADJA', 'NN'), 'start right siblings': [], 'end left siblings': ['KON', 'PX'], 'auto preterminal span': (10, 17), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'PX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF ich)
			(LK hatte)
			(MF jetzt am vierzehnten und funfzehnten januar zeit)
			(NX
				(NF
					[01;31m(PX[00m
						(KON oder)
						(PX auch am wochenende)
						(NX siebzehnter achtzehnter januar)[01;31m)[00m)))
		[01;31m(PX[00m
			(KON und)
			(PX zwischen dem dreiundzwanzigsten und sechsundzwanzigsten januar und dem achtundzwanzigsten und neunundzwanzigsten januar)[01;31m)[00m))
Step:Unary
{'subtrees': ['KON', 'PX', 'NX'], 'family': ['PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'ADV', 'APPRART', 'NN', 'ADJA', 'ADJA', 'NN'), 'right siblings': [], 'parent': 'NF', 'auto preterminal span': (10, 17), 'span': (10, 17), 'left siblings': [], 'label': 'PX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich hatte jetzt am vierzehnten und funfzehnten januar zeit oder auch am wochenende siebzehnter achtzehnter januar)
		[01;31m(PX[00m
			(KON und)
			(PX zwischen dem dreiundzwanzigsten und sechsundzwanzigsten januar und dem achtundzwanzigsten und neunundzwanzigsten januar)[01;31m)[00m))
Step:PP Attachment
{'subtrees': ['KON', 'PX'], 'family': ['DM', 'SIMPX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VAFIN', 'ADV', 'APPRART', 'ADJA', 'KON', 'ADJA', 'NN', 'NN', 'KON', 'ADV', 'APPRART', 'NN', 'ADJA', 'ADJA', 'NN', 'KON', 'APPR', 'ART', 'ADJA', 'KON', 'ADJA', 'NN', 'KON', 'ART', 'ADJA', 'KON', 'ADJA', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 30), 'span': (17, 30), 'left siblings': ['DM', 'SIMPX'], 'label': 'PX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP ja ich hatte jetzt am vierzehnten und funfzehnten januar zeit oder auch am wochenende siebzehnter achtzehnter januar und zwischen dem dreiundzwanzigsten und sechsundzwanzigsten januar und dem achtundzwanzigsten und neunundzwanzigsten januar)

Sentence 553:
3 Initial errors
0 on fringe, 2 iterations
2 Error:UNSET move
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM gut)
		(SIMPX verbleiben wir beim achtundzwanzigsten und neunundzwanzigsten januar)
		[01;31m(SIMPX[00m
			[01;31m(LV[00m
				(PX
					(APPR bezuglich)
					(NX des verkehrsmittels))[01;31m)[00m
			[01;36m(SIMPX[00m
				(VF was)
				(LK haben)
				(MF sie sich da)
				(VC vorgestellt)[01;36m)[00m[01;31m)[00m))
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['DM', 'SIMPX', 'LV', 'SIMPX'], 'mover info': [('LV', (8, 11))], 'old_family': ['LV', 'VF', 'LK', 'MF', 'VC'], 'start left siblings': [], 'auto preterminals': ('ITJ', 'VVFIN', 'PPER', 'APPRART', 'ADJA', 'KON', 'ADJA', 'NN', 'APPR', 'ART', 'NN', 'PWS', 'VAFIN', 'PPER', 'PRF', 'ADV', 'VVPP'), 'start right siblings': ['VF', 'LK', 'MF', 'VC'], 'end left siblings': ['DM', 'SIMPX'], 'auto preterminal span': (0, 17), 'movers': ['LV'], 'old_parent': 'SIMPX', 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM gut)
		(SIMPX verbleiben wir beim achtundzwanzigsten und neunundzwanzigsten januar)
		[01;31m(LV[00m
			(PX
				(APPR bezuglich)
				(NX des verkehrsmittels))[01;31m)[00m
		(SIMPX was haben sie sich da vorgestellt)))
Step:Unary
{'subtrees': ['PX'], 'family': ['DM', 'SIMPX', 'LV', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'VVFIN', 'PPER', 'APPRART', 'ADJA', 'KON', 'ADJA', 'NN', 'APPR', 'ART', 'NN', 'PWS', 'VAFIN', 'PPER', 'PRF', 'ADV', 'VVPP'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 17), 'span': (8, 11), 'left siblings': ['DM', 'SIMPX'], 'label': 'LV', 'classified_type': 'Unary', 'type': 'remove'}
(TOP gut verbleiben wir beim achtundzwanzigsten und neunundzwanzigsten januar bezuglich des verkehrsmittels was haben sie sich da vorgestellt)

Sentence 554:
3 Initial errors
0 on fringe, 2 iterations
2 Error:Single Word Phrase
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(NX ich ebenso)
		[01;31m(PX[00m
			[01;36m(DM[00m [01;31m(ADVX[00m
				(ADV eben)[01;31m)[00m[01;36m)[00m
			(PX aus zeitgrunden)[01;31m)[00m))
Step:Single Word Phrase
{'family': ['DM', 'PX'], 'auto preterminal span': (3, 4), 'span': (3, 4), 'subtrees': ['ADV'], 'parent': 'PX', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'DM')}
(TOP
	(TURN
		(DM ja)
		(NX ich ebenso)
		[01;31m(PX[00m
			(DM eben)
			(PX aus zeitgrunden)[01;31m)[00m))
Step:PP Attachment
{'subtrees': ['DM', 'PX'], 'family': ['DM', 'NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'ADV', 'ADV', 'APPR', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 6), 'span': (3, 6), 'left siblings': ['DM', 'NX'], 'label': 'PX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP ja ich ebenso eben aus zeitgrunden)

Sentence 555:
40 Initial errors
0 on fringe, 26 iterations
7 Error:UNSET move
5 Error:NP Attachment
2 Error:Different label
2 Error:NP Attachment
2 Error:UNSET move
1 Error:Unary
1 Error:Unary
1 Error:NP Internal Structure
1 Error:Unary
1 Error:NP Internal Structure
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:UNSET add
1 Error:Co-ordination
1 Error:Unary
1 Error:Modifier Attachment
1 Error:PP Attachment
1 Error:Co-ordination
1 Error:Co-ordination
1 Error:UNSET remove
2 Error:Co-ordination
1 Error:Unary
1 Error:UNSET remove
1 Error:PP Attachment
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen)
		[01;31m(NX[00m [01;33m(NX[00m
			(PX zum einen)
			[01;31m(NX[00m
				(NX das maritimhotel in hannover) [01;33mNX)[00m
				[01;36m(NF[00m
					(R
						(C welches)
						(FKOORD
							[01;31m(MVC[00m
								(MF am bahnhof)
								(VC liegt)[01;31m)[00m
							(KON und)
							(MVC [01;33m(MF[00m
								(MF
									(PX zum zentrum)
									[01;31m(NX[00m
										(NX funfzehn minuten) [01;33mMF)[00m
										[01;36m(VF[00m
											(NX
												(NN laufzeit))[01;36m)[00m[01;31m)[00m)
								(VC hat))))[01;36m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF es)
			(LK gibt)
			[01;31m(MF[00m [01;33m(MF[00m
				(ADVX dort)
				[01;33m(NX[00m (NX eine cafeteria)[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				(NX
					(NN garage))[01;31m)[00m [01;33mNX) MF) SIMPX)[00m
			[01;36m(SIMPX[00m
				(LK ist)
				(MF naturlich dann nicht nicht unbedingt so wichtig)[01;36m)[00m[01;31m)[00m
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF einzelzimmer)
				(LK kostet)
				[01;31m(MF[00m [01;33m(NX (MF[00m
					(NX
						(ADJX hundert einundfunfzig)
						(NN mark))[01;31m)[00m[01;31m)[00m
			(NX doppelzimmer hundert funf mark) [01;33mMF) NX)[00m[01;36m)[00m
		(NX dann das hotel luisenhof)
		(ADJX funf minuten vom bahnhof entfernt)
		[01;31m(ADJX[00m
			(ADVX also)
			(ADJX etwas schneller)[01;31m)[00m
		(SIMPX
			(VF es)
			(LK gibt)
			(MF
				(NX
					[01;36m(MF[00m
						[01;36m(NX[00m
							(NX eine bar)
							(NX ein restaurant)[01;36m)[00m[01;36m)[00m
					(KON und)
					(NX
						(ADVX ebenfalls)
						[01;36m(NX[00m
							(ART eine)
							(NN garage)[01;36m)[00m))))
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das hotel loccumerhof)
			(LK ist)
			[01;36m(PX[00m
				(MF
					(ADVX gleich)
					(PX beim bahnhof))[01;36m)[00m
			(NF anscheinend)[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			[01;36m(SIMPX[00m
				(VF es)
				(LK gibt)
				(MF
					(NX
						[01;31m(NX[00m
							(ART ein)
							[01;31m(NX[00m
								(TRUNC schwimm)
								(KON und)
								(NN dampfbad)[01;31m)[00m[01;31m)[00m
						(KON und)
						(NX eine pianobar)))[01;36m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das einzelzimmer)
			(LK kostet)
			[01;33m(MF (MF[00m (MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m
		[01;31m(NX[00m
			(KON und)
			(NX das doppelzimmer hundert dreiundvierzig mark)[01;31m)[00m [01;33mMF)[00m
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				(PX
					(APPRART vom)
					(NX zeitangebot))[01;31m)[00m [01;33mMF)[00m
			(LK ware)
			(MF
				[01;31m(NX[00m
					(ART das)
					(NX hotel loccumerhof)[01;31m)[00m
				(ADVX anscheinend)
				(ADJX besonders gunstig))
			(NF
				(SIMPX
					(C weil)
					(MF
						(NX es)
						(ADVX gleich)
						[01;36m(NX[00m [01;31m(PX[00m
							(APPRART beim)
							(NX bahnhof)[01;31m)[00m[01;36m)[00m)
					(VC liegt)))[01;31m)[00m))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['ADVX', 'NX', 'VF'], 'mover info': [('VF', (39, 40))], 'old_family': ['VF', 'LK', 'MF'], 'start left siblings': [], 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'PIAT', 'NN', 'VVPP', 'PDS', 'VMFIN', 'PPER', 'APPR', 'PPER', 'ADV', 'ADV', 'VVINF', 'APPRART', 'PIS', 'ART', 'NE', 'APPR', 'NE', 'PRELS', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPRART', 'NN', 'CARD', 'NN', 'NN', 'VAFIN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NN', 'VAFIN', 'ADV', 'ADV', 'PTKNEG', 'PTKNEG', 'ADV', 'ADV', 'ADJD', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN', 'NN', 'CARD', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'ADJD', 'ADV', 'ADV', 'ADJD', 'PPER', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ART', 'NN', 'KON', 'ART', 'NN', 'NE', 'VAFIN', 'ADV', 'APPRART', 'NN', 'ADV', 'KON', 'PPER', 'VVFIN', 'ART', 'TRUNC', 'KON', 'NN', 'KON', 'ART', 'NN', 'KON', 'ART', 'NN', 'VVFIN', 'ADV', 'CARD', 'CARD', 'NN', 'KON', 'ART', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'VAFIN', 'ART', 'NN', 'NE', 'ADV', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'VVFIN'), 'start right siblings': ['LK', 'MF'], 'end left siblings': ['ADVX', 'NX'], 'auto preterminal span': (0, 127), 'adding node already present': False, 'movers': ['VF'], 'old_parent': 'SIMPX', 'POS confusion': ('NN', 'NN'), 'added and moved': True, 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(SIMPX jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen)
		[01;31m(NX[00m [01;33m(NX[00m
			(PX zum einen)
			[01;31m(NX[00m
				(NX das maritimhotel in hannover) [01;33mNX)[00m
				[01;36m(NF[00m
					(R
						(C welches)
						(FKOORD
							[01;31m(MVC[00m
								(MF am bahnhof)
								(VC liegt)[01;31m)[00m
							(KON und)
							(MVC [01;33m(MF[00m
								(MF
									(PX zum zentrum)
									[01;31m(NX[00m
										(NX funfzehn minuten) [01;33mMF)[00m
										[01;36m(VF[00m
											(NX
												(NN laufzeit))[01;36m)[00m[01;31m)[00m)
								(VC hat))))[01;36m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX
			(VF es)
			(LK gibt)
			(MF
				(ADVX dort)
				(NX
					(NX eine cafeteria)
					[01;31m(VF[00m
						(NX
							(NN garage))[01;31m)[00m)))
		(SIMPX ist naturlich dann nicht nicht unbedingt so wichtig)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF einzelzimmer)
				(LK kostet)
				[01;31m(MF[00m [01;33m(NX (MF[00m
					(NX
						(ADJX hundert einundfunfzig)
						(NN mark))[01;31m)[00m[01;31m)[00m
			(NX doppelzimmer hundert funf mark) [01;33mMF) NX)[00m[01;36m)[00m
		(NX dann das hotel luisenhof)
		(ADJX funf minuten vom bahnhof entfernt)
		[01;31m(ADJX[00m
			(ADVX also)
			(ADJX etwas schneller)[01;31m)[00m
		(SIMPX
			(VF es)
			(LK gibt)
			(MF
				(NX
					[01;36m(MF[00m
						[01;36m(NX[00m
							(NX eine bar)
							(NX ein restaurant)[01;36m)[00m[01;36m)[00m
					(KON und)
					(NX
						(ADVX ebenfalls)
						[01;36m(NX[00m
							(ART eine)
							(NN garage)[01;36m)[00m))))
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das hotel loccumerhof)
			(LK ist)
			[01;36m(PX[00m
				(MF
					(ADVX gleich)
					(PX beim bahnhof))[01;36m)[00m
			(NF anscheinend)[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			[01;36m(SIMPX[00m
				(VF es)
				(LK gibt)
				(MF
					(NX
						[01;31m(NX[00m
							(ART ein)
							[01;31m(NX[00m
								(TRUNC schwimm)
								(KON und)
								(NN dampfbad)[01;31m)[00m[01;31m)[00m
						(KON und)
						(NX eine pianobar)))[01;36m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das einzelzimmer)
			(LK kostet)
			[01;33m(MF (MF[00m (MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m
		[01;31m(NX[00m
			(KON und)
			(NX das doppelzimmer hundert dreiundvierzig mark)[01;31m)[00m [01;33mMF)[00m
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				(PX
					(APPRART vom)
					(NX zeitangebot))[01;31m)[00m [01;33mMF)[00m
			(LK ware)
			(MF
				[01;31m(NX[00m
					(ART das)
					(NX hotel loccumerhof)[01;31m)[00m
				(ADVX anscheinend)
				(ADJX besonders gunstig))
			(NF
				(SIMPX
					(C weil)
					(MF
						(NX es)
						(ADVX gleich)
						[01;36m(NX[00m [01;31m(PX[00m
							(APPRART beim)
							(NX bahnhof)[01;31m)[00m[01;36m)[00m)
					(VC liegt)))[01;31m)[00m))
Step:NP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'NX'], 'mover info': [('NX', (53, 57))], 'old_family': ['SIMPX', 'SIMPX', 'NX', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'NX', 'ADJX', 'ADJX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX'], 'start left siblings': ['SIMPX', 'SIMPX', 'NX', 'SIMPX', 'SIMPX', 'SIMPX'], 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'PIAT', 'NN', 'VVPP', 'PDS', 'VMFIN', 'PPER', 'APPR', 'PPER', 'ADV', 'ADV', 'VVINF', 'APPRART', 'PIS', 'ART', 'NE', 'APPR', 'NE', 'PRELS', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPRART', 'NN', 'CARD', 'NN', 'NN', 'VAFIN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NN', 'VAFIN', 'ADV', 'ADV', 'PTKNEG', 'PTKNEG', 'ADV', 'ADV', 'ADJD', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN', 'NN', 'CARD', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'ADJD', 'ADV', 'ADV', 'ADJD', 'PPER', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ART', 'NN', 'KON', 'ART', 'NN', 'NE', 'VAFIN', 'ADV', 'APPRART', 'NN', 'ADV', 'KON', 'PPER', 'VVFIN', 'ART', 'TRUNC', 'KON', 'NN', 'KON', 'ART', 'NN', 'KON', 'ART', 'NN', 'VVFIN', 'ADV', 'CARD', 'CARD', 'NN', 'KON', 'ART', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'VAFIN', 'ART', 'NN', 'NE', 'ADV', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'VVFIN'), 'start right siblings': ['NX', 'ADJX', 'ADJX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX'], 'end left siblings': ['NX'], 'auto preterminal span': (0, 127), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'TURN', 'added and moved': True, 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(SIMPX jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen)
		[01;31m(NX[00m [01;33m(NX[00m
			(PX zum einen)
			[01;31m(NX[00m
				(NX das maritimhotel in hannover) [01;33mNX)[00m
				[01;36m(NF[00m
					(R
						(C welches)
						(FKOORD
							[01;31m(MVC[00m
								(MF am bahnhof)
								(VC liegt)[01;31m)[00m
							(KON und)
							(MVC [01;33m(MF[00m
								(MF
									(PX zum zentrum)
									[01;31m(NX[00m
										(NX funfzehn minuten) [01;33mMF)[00m
										[01;36m(VF[00m
											(NX
												(NN laufzeit))[01;36m)[00m[01;31m)[00m)
								(VC hat))))[01;36m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX
			(VF es)
			(LK gibt)
			(MF
				(ADVX dort)
				(NX
					(NX eine cafeteria)
					[01;31m(VF[00m
						(NX
							(NN garage))[01;31m)[00m)))
		(SIMPX ist naturlich dann nicht nicht unbedingt so wichtig)
		(SIMPX einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(NX dann das hotel luisenhof)
		(ADJX funf minuten vom bahnhof entfernt)
		[01;31m(ADJX[00m
			(ADVX also)
			(ADJX etwas schneller)[01;31m)[00m
		(SIMPX
			(VF es)
			(LK gibt)
			(MF
				(NX
					[01;36m(MF[00m
						[01;36m(NX[00m
							(NX eine bar)
							(NX ein restaurant)[01;36m)[00m[01;36m)[00m
					(KON und)
					(NX
						(ADVX ebenfalls)
						[01;36m(NX[00m
							(ART eine)
							(NN garage)[01;36m)[00m))))
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das hotel loccumerhof)
			(LK ist)
			[01;36m(PX[00m
				(MF
					(ADVX gleich)
					(PX beim bahnhof))[01;36m)[00m
			(NF anscheinend)[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			[01;36m(SIMPX[00m
				(VF es)
				(LK gibt)
				(MF
					(NX
						[01;31m(NX[00m
							(ART ein)
							[01;31m(NX[00m
								(TRUNC schwimm)
								(KON und)
								(NN dampfbad)[01;31m)[00m[01;31m)[00m
						(KON und)
						(NX eine pianobar)))[01;36m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das einzelzimmer)
			(LK kostet)
			[01;33m(MF (MF[00m (MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m
		[01;31m(NX[00m
			(KON und)
			(NX das doppelzimmer hundert dreiundvierzig mark)[01;31m)[00m [01;33mMF)[00m
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				(PX
					(APPRART vom)
					(NX zeitangebot))[01;31m)[00m [01;33mMF)[00m
			(LK ware)
			(MF
				[01;31m(NX[00m
					(ART das)
					(NX hotel loccumerhof)[01;31m)[00m
				(ADVX anscheinend)
				(ADJX besonders gunstig))
			(NF
				(SIMPX
					(C weil)
					(MF
						(NX es)
						(ADVX gleich)
						[01;36m(NX[00m [01;31m(PX[00m
							(APPRART beim)
							(NX bahnhof)[01;31m)[00m[01;36m)[00m)
					(VC liegt)))[01;31m)[00m))
Step:Different label
{'family': ['NX', 'ADVX', 'NX'], 'auto preterminal span': (124, 126), 'span': (124, 126), 'subtrees': ['APPRART', 'NX'], 'parent': 'MF', 'over_word': False, 'auto preterminals': ('APPRART', 'NN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('PX', 'NX')}
(TOP
	(TURN
		(SIMPX jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen)
		[01;31m(NX[00m [01;33m(NX[00m
			(PX zum einen)
			[01;31m(NX[00m
				(NX das maritimhotel in hannover) [01;33mNX)[00m
				[01;36m(NF[00m
					(R
						(C welches)
						(FKOORD
							[01;31m(MVC[00m
								(MF am bahnhof)
								(VC liegt)[01;31m)[00m
							(KON und)
							(MVC [01;33m(MF[00m
								(MF
									(PX zum zentrum)
									[01;31m(NX[00m
										(NX funfzehn minuten) [01;33mMF)[00m
										[01;36m(VF[00m
											(NX
												(NN laufzeit))[01;36m)[00m[01;31m)[00m)
								(VC hat))))[01;36m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX
			(VF es)
			(LK gibt)
			(MF
				(ADVX dort)
				(NX
					(NX eine cafeteria)
					[01;31m(VF[00m
						(NX
							(NN garage))[01;31m)[00m)))
		(SIMPX ist naturlich dann nicht nicht unbedingt so wichtig)
		(SIMPX einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(NX dann das hotel luisenhof)
		(ADJX funf minuten vom bahnhof entfernt)
		[01;31m(ADJX[00m
			(ADVX also)
			(ADJX etwas schneller)[01;31m)[00m
		(SIMPX
			(VF es)
			(LK gibt)
			(MF
				(NX
					[01;36m(MF[00m
						[01;36m(NX[00m
							(NX eine bar)
							(NX ein restaurant)[01;36m)[00m[01;36m)[00m
					(KON und)
					(NX
						(ADVX ebenfalls)
						[01;36m(NX[00m
							(ART eine)
							(NN garage)[01;36m)[00m))))
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das hotel loccumerhof)
			(LK ist)
			[01;36m(PX[00m
				(MF
					(ADVX gleich)
					(PX beim bahnhof))[01;36m)[00m
			(NF anscheinend)[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			[01;36m(SIMPX[00m
				(VF es)
				(LK gibt)
				(MF
					(NX
						[01;31m(NX[00m
							(ART ein)
							[01;31m(NX[00m
								(TRUNC schwimm)
								(KON und)
								(NN dampfbad)[01;31m)[00m[01;31m)[00m
						(KON und)
						(NX eine pianobar)))[01;36m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das einzelzimmer)
			(LK kostet)
			[01;33m(MF (MF[00m (MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m
		[01;31m(NX[00m
			(KON und)
			(NX das doppelzimmer hundert dreiundvierzig mark)[01;31m)[00m [01;33mMF)[00m
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				(PX
					(APPRART vom)
					(NX zeitangebot))[01;31m)[00m [01;33mMF)[00m
			(LK ware)
			(MF
				[01;31m(NX[00m
					(ART das)
					(NX hotel loccumerhof)[01;31m)[00m
				(ADVX anscheinend)
				(ADJX besonders gunstig))
			(NF weil es gleich beim bahnhof liegt)[01;31m)[00m))
Step:NP Attachment
{'new_parent': 'MF', 'new_family': ['PX', 'NX', 'NX'], 'mover info': [('NX', (30, 32))], 'old_family': ['NX', 'NX'], 'start left siblings': [], 'auto preterminals': ('APPRART', 'NN', 'CARD', 'NN', 'NN'), 'start right siblings': ['NX'], 'end left siblings': ['PX'], 'auto preterminal span': (28, 33), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': ['NX'], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'SIMPX'}
(TOP
	(TURN
		(SIMPX jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen)
		[01;31m(NX[00m [01;33m(NX[00m
			(PX zum einen)
			[01;31m(NX[00m
				(NX das maritimhotel in hannover) [01;33mNX)[00m
				[01;36m(NF[00m
					(R
						(C welches)
						(FKOORD
							[01;31m(MVC[00m
								(MF am bahnhof)
								(VC liegt)[01;31m)[00m
							(KON und)
							(MVC
								(MF
									(MF zum zentrum funfzehn minuten)
									[01;36m(VF[00m
										(NX
											(NN laufzeit))[01;36m)[00m)
								(VC hat))))[01;36m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX
			(VF es)
			(LK gibt)
			(MF
				(ADVX dort)
				(NX
					(NX eine cafeteria)
					[01;31m(VF[00m
						(NX
							(NN garage))[01;31m)[00m)))
		(SIMPX ist naturlich dann nicht nicht unbedingt so wichtig)
		(SIMPX einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(NX dann das hotel luisenhof)
		(ADJX funf minuten vom bahnhof entfernt)
		[01;31m(ADJX[00m
			(ADVX also)
			(ADJX etwas schneller)[01;31m)[00m
		(SIMPX
			(VF es)
			(LK gibt)
			(MF
				(NX
					[01;36m(MF[00m
						[01;36m(NX[00m
							(NX eine bar)
							(NX ein restaurant)[01;36m)[00m[01;36m)[00m
					(KON und)
					(NX
						(ADVX ebenfalls)
						[01;36m(NX[00m
							(ART eine)
							(NN garage)[01;36m)[00m))))
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das hotel loccumerhof)
			(LK ist)
			[01;36m(PX[00m
				(MF
					(ADVX gleich)
					(PX beim bahnhof))[01;36m)[00m
			(NF anscheinend)[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			[01;36m(SIMPX[00m
				(VF es)
				(LK gibt)
				(MF
					(NX
						[01;31m(NX[00m
							(ART ein)
							[01;31m(NX[00m
								(TRUNC schwimm)
								(KON und)
								(NN dampfbad)[01;31m)[00m[01;31m)[00m
						(KON und)
						(NX eine pianobar)))[01;36m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das einzelzimmer)
			(LK kostet)
			[01;33m(MF (MF[00m (MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m
		[01;31m(NX[00m
			(KON und)
			(NX das doppelzimmer hundert dreiundvierzig mark)[01;31m)[00m [01;33mMF)[00m
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				(PX
					(APPRART vom)
					(NX zeitangebot))[01;31m)[00m [01;33mMF)[00m
			(LK ware)
			(MF
				[01;31m(NX[00m
					(ART das)
					(NX hotel loccumerhof)[01;31m)[00m
				(ADVX anscheinend)
				(ADJX besonders gunstig))
			(NF weil es gleich beim bahnhof liegt)[01;31m)[00m))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['KOORD', 'VF', 'LK', 'MF', 'NF', 'KOORD'], 'mover info': [('KOORD', (88, 89))], 'old_family': ['KOORD', 'VF', 'LK', 'MF'], 'start left siblings': [], 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'PIAT', 'NN', 'VVPP', 'PDS', 'VMFIN', 'PPER', 'APPR', 'PPER', 'ADV', 'ADV', 'VVINF', 'APPRART', 'PIS', 'ART', 'NE', 'APPR', 'NE', 'PRELS', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPRART', 'NN', 'CARD', 'NN', 'NN', 'VAFIN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NN', 'VAFIN', 'ADV', 'ADV', 'PTKNEG', 'PTKNEG', 'ADV', 'ADV', 'ADJD', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN', 'NN', 'CARD', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'ADJD', 'ADV', 'ADV', 'ADJD', 'PPER', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ART', 'NN', 'KON', 'ART', 'NN', 'NE', 'VAFIN', 'ADV', 'APPRART', 'NN', 'ADV', 'KON', 'PPER', 'VVFIN', 'ART', 'TRUNC', 'KON', 'NN', 'KON', 'ART', 'NN', 'KON', 'ART', 'NN', 'VVFIN', 'ADV', 'CARD', 'CARD', 'NN', 'KON', 'ART', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'VAFIN', 'ART', 'NN', 'NE', 'ADV', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'VVFIN'), 'start right siblings': ['VF', 'LK', 'MF'], 'end left siblings': ['KOORD', 'VF', 'LK', 'MF', 'NF'], 'auto preterminal span': (0, 127), 'movers': ['KOORD'], 'old_parent': 'SIMPX', 'POS confusion': ('KON', 'KON'), 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SIMPX jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen)
		[01;31m(NX[00m [01;33m(NX[00m
			(PX zum einen)
			[01;31m(NX[00m
				(NX das maritimhotel in hannover) [01;33mNX)[00m
				[01;36m(NF[00m
					(R
						(C welches)
						(FKOORD
							[01;31m(MVC[00m
								(MF am bahnhof)
								(VC liegt)[01;31m)[00m
							(KON und)
							(MVC
								(MF
									(MF zum zentrum funfzehn minuten)
									[01;36m(VF[00m
										(NX
											(NN laufzeit))[01;36m)[00m)
								(VC hat))))[01;36m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX
			(VF es)
			(LK gibt)
			(MF
				(ADVX dort)
				(NX
					(NX eine cafeteria)
					[01;31m(VF[00m
						(NX
							(NN garage))[01;31m)[00m)))
		(SIMPX ist naturlich dann nicht nicht unbedingt so wichtig)
		(SIMPX einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(NX dann das hotel luisenhof)
		(ADJX funf minuten vom bahnhof entfernt)
		[01;31m(ADJX[00m
			(ADVX also)
			(ADJX etwas schneller)[01;31m)[00m
		(SIMPX
			(VF es)
			(LK gibt)
			(MF
				(NX
					[01;36m(MF[00m
						[01;36m(NX[00m
							(NX eine bar)
							(NX ein restaurant)[01;36m)[00m[01;36m)[00m
					(KON und)
					(NX
						(ADVX ebenfalls)
						[01;36m(NX[00m
							(ART eine)
							(NN garage)[01;36m)[00m))))
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das hotel loccumerhof)
			(LK ist)
			[01;36m(PX[00m
				(MF
					(ADVX gleich)
					(PX beim bahnhof))[01;36m)[00m
			(NF anscheinend)
			(KOORD und)[01;31m)[00m
		(SIMPX
			(VF es)
			(LK gibt)
			(MF
				(NX
					[01;31m(NX[00m
						(ART ein)
						[01;31m(NX[00m
							(TRUNC schwimm)
							(KON und)
							(NN dampfbad)[01;31m)[00m[01;31m)[00m
					(KON und)
					(NX eine pianobar))))
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das einzelzimmer)
			(LK kostet)
			[01;33m(MF (MF[00m (MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m
		[01;31m(NX[00m
			(KON und)
			(NX das doppelzimmer hundert dreiundvierzig mark)[01;31m)[00m [01;33mMF)[00m
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				(PX
					(APPRART vom)
					(NX zeitangebot))[01;31m)[00m [01;33mMF)[00m
			(LK ware)
			(MF
				[01;31m(NX[00m
					(ART das)
					(NX hotel loccumerhof)[01;31m)[00m
				(ADVX anscheinend)
				(ADJX besonders gunstig))
			(NF weil es gleich beim bahnhof liegt)[01;31m)[00m))
Step:Unary
{'subtrees': ['R'], 'family': ['NX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PRELS', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPRART', 'NN', 'CARD', 'NN', 'NN', 'VAFIN'), 'right siblings': [], 'left siblings': [(NX (NX (ART das) (NE maritimhotel)) (PX (APPR in) (NX (NE hannover))))], 'auto preterminal span': (23, 34), 'span': (23, 34), 'parent': 'NX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SIMPX jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen)
		[01;31m(NX[00m [01;33m(NX[00m
			(PX zum einen)
			[01;31m(NX[00m
				(NX das maritimhotel in hannover) [01;33mNX)[00m
				(NF
					(R
						(C welches)
						(FKOORD
							[01;31m(MVC[00m
								(MF am bahnhof)
								(VC liegt)[01;31m)[00m
							(KON und)
							(MVC
								(MF
									(MF zum zentrum funfzehn minuten)
									[01;36m(VF[00m
										(NX
											(NN laufzeit))[01;36m)[00m)
								(VC hat)))))[01;31m)[00m[01;31m)[00m
		(SIMPX
			(VF es)
			(LK gibt)
			(MF
				(ADVX dort)
				(NX
					(NX eine cafeteria)
					[01;31m(VF[00m
						(NX
							(NN garage))[01;31m)[00m)))
		(SIMPX ist naturlich dann nicht nicht unbedingt so wichtig)
		(SIMPX einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(NX dann das hotel luisenhof)
		(ADJX funf minuten vom bahnhof entfernt)
		[01;31m(ADJX[00m
			(ADVX also)
			(ADJX etwas schneller)[01;31m)[00m
		(SIMPX
			(VF es)
			(LK gibt)
			(MF
				(NX
					[01;36m(MF[00m
						[01;36m(NX[00m
							(NX eine bar)
							(NX ein restaurant)[01;36m)[00m[01;36m)[00m
					(KON und)
					(NX
						(ADVX ebenfalls)
						[01;36m(NX[00m
							(ART eine)
							(NN garage)[01;36m)[00m))))
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das hotel loccumerhof)
			(LK ist)
			[01;36m(PX[00m
				(MF
					(ADVX gleich)
					(PX beim bahnhof))[01;36m)[00m
			(NF anscheinend)
			(KOORD und)[01;31m)[00m
		(SIMPX
			(VF es)
			(LK gibt)
			(MF
				(NX
					[01;31m(NX[00m
						(ART ein)
						[01;31m(NX[00m
							(TRUNC schwimm)
							(KON und)
							(NN dampfbad)[01;31m)[00m[01;31m)[00m
					(KON und)
					(NX eine pianobar))))
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das einzelzimmer)
			(LK kostet)
			[01;33m(MF (MF[00m (MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m
		[01;31m(NX[00m
			(KON und)
			(NX das doppelzimmer hundert dreiundvierzig mark)[01;31m)[00m [01;33mMF)[00m
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				(PX
					(APPRART vom)
					(NX zeitangebot))[01;31m)[00m [01;33mMF)[00m
			(LK ware)
			(MF
				[01;31m(NX[00m
					(ART das)
					(NX hotel loccumerhof)[01;31m)[00m
				(ADVX anscheinend)
				(ADJX besonders gunstig))
			(NF weil es gleich beim bahnhof liegt)[01;31m)[00m))
Step:Unary
{'subtrees': ['NX'], 'family': ['MF', 'VF'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN',), 'right siblings': [], 'left siblings': [(MF (PX (APPRART zum) (NX (NN zentrum))) (NX (ADJX (CARD funfzehn)) (NN minuten)))], 'auto preterminal span': (32, 33), 'span': (32, 33), 'parent': 'MF', 'label': 'VF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SIMPX jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen)
		[01;31m(NX[00m [01;33m(NX[00m
			(PX zum einen)
			[01;31m(NX[00m
				(NX das maritimhotel in hannover) [01;33mNX)[00m
				(NF
					(R
						(C welches)
						(FKOORD
							[01;31m(MVC[00m
								(MF am bahnhof)
								(VC liegt)[01;31m)[00m
							(KON und)
							(MVC zum zentrum funfzehn minuten laufzeit hat))))[01;31m)[00m[01;31m)[00m
		(SIMPX
			(VF es)
			(LK gibt)
			(MF
				(ADVX dort)
				(NX
					(NX eine cafeteria)
					[01;31m(VF[00m
						(NX
							(NN garage))[01;31m)[00m)))
		(SIMPX ist naturlich dann nicht nicht unbedingt so wichtig)
		(SIMPX einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(NX dann das hotel luisenhof)
		(ADJX funf minuten vom bahnhof entfernt)
		[01;31m(ADJX[00m
			(ADVX also)
			(ADJX etwas schneller)[01;31m)[00m
		(SIMPX
			(VF es)
			(LK gibt)
			(MF
				(NX
					[01;36m(MF[00m
						[01;36m(NX[00m
							(NX eine bar)
							(NX ein restaurant)[01;36m)[00m[01;36m)[00m
					(KON und)
					(NX
						(ADVX ebenfalls)
						[01;36m(NX[00m
							(ART eine)
							(NN garage)[01;36m)[00m))))
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das hotel loccumerhof)
			(LK ist)
			[01;36m(PX[00m
				(MF
					(ADVX gleich)
					(PX beim bahnhof))[01;36m)[00m
			(NF anscheinend)
			(KOORD und)[01;31m)[00m
		(SIMPX
			(VF es)
			(LK gibt)
			(MF
				(NX
					[01;31m(NX[00m
						(ART ein)
						[01;31m(NX[00m
							(TRUNC schwimm)
							(KON und)
							(NN dampfbad)[01;31m)[00m[01;31m)[00m
					(KON und)
					(NX eine pianobar))))
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das einzelzimmer)
			(LK kostet)
			[01;33m(MF (MF[00m (MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m
		[01;31m(NX[00m
			(KON und)
			(NX das doppelzimmer hundert dreiundvierzig mark)[01;31m)[00m [01;33mMF)[00m
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				(PX
					(APPRART vom)
					(NX zeitangebot))[01;31m)[00m [01;33mMF)[00m
			(LK ware)
			(MF
				[01;31m(NX[00m
					(ART das)
					(NX hotel loccumerhof)[01;31m)[00m
				(ADVX anscheinend)
				(ADJX besonders gunstig))
			(NF weil es gleich beim bahnhof liegt)[01;31m)[00m))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['NX', 'KON', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'ART', 'NN'), 'right siblings': [(KON und), (NX (ADVX (ADV ebenfalls)) (ART eine) (NN garage))], 'left siblings': [], 'auto preterminal span': (71, 75), 'span': (71, 75), 'parent': 'NX', 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'add'}
(TOP
	(TURN
		(SIMPX jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen)
		[01;31m(NX[00m [01;33m(NX[00m
			(PX zum einen)
			[01;31m(NX[00m
				(NX das maritimhotel in hannover) [01;33mNX)[00m
				(NF
					(R
						(C welches)
						(FKOORD
							[01;31m(MVC[00m
								(MF am bahnhof)
								(VC liegt)[01;31m)[00m
							(KON und)
							(MVC zum zentrum funfzehn minuten laufzeit hat))))[01;31m)[00m[01;31m)[00m
		(SIMPX
			(VF es)
			(LK gibt)
			(MF
				(ADVX dort)
				(NX
					(NX eine cafeteria)
					[01;31m(VF[00m
						(NX
							(NN garage))[01;31m)[00m)))
		(SIMPX ist naturlich dann nicht nicht unbedingt so wichtig)
		(SIMPX einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(NX dann das hotel luisenhof)
		(ADJX funf minuten vom bahnhof entfernt)
		[01;31m(ADJX[00m
			(ADVX also)
			(ADJX etwas schneller)[01;31m)[00m
		(SIMPX
			(VF es)
			(LK gibt)
			(MF
				(NX
					[01;36m(MF[00m
						(NX
							(NX eine bar)
							(NX ein restaurant))[01;36m)[00m
					(KON und)
					(NX
						(ADVX ebenfalls)
						[01;36m(NX[00m
							(ART eine)
							(NN garage)[01;36m)[00m))))
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das hotel loccumerhof)
			(LK ist)
			[01;36m(PX[00m
				(MF
					(ADVX gleich)
					(PX beim bahnhof))[01;36m)[00m
			(NF anscheinend)
			(KOORD und)[01;31m)[00m
		(SIMPX
			(VF es)
			(LK gibt)
			(MF
				(NX
					[01;31m(NX[00m
						(ART ein)
						[01;31m(NX[00m
							(TRUNC schwimm)
							(KON und)
							(NN dampfbad)[01;31m)[00m[01;31m)[00m
					(KON und)
					(NX eine pianobar))))
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das einzelzimmer)
			(LK kostet)
			[01;33m(MF (MF[00m (MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m
		[01;31m(NX[00m
			(KON und)
			(NX das doppelzimmer hundert dreiundvierzig mark)[01;31m)[00m [01;33mMF)[00m
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				(PX
					(APPRART vom)
					(NX zeitangebot))[01;31m)[00m [01;33mMF)[00m
			(LK ware)
			(MF
				[01;31m(NX[00m
					(ART das)
					(NX hotel loccumerhof)[01;31m)[00m
				(ADVX anscheinend)
				(ADJX besonders gunstig))
			(NF weil es gleich beim bahnhof liegt)[01;31m)[00m))
Step:Unary
{'subtrees': ['NX'], 'family': ['MF', 'KON', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'ART', 'NN'), 'right siblings': [(KON und), (NX (ADVX (ADV ebenfalls)) (ART eine) (NN garage))], 'left siblings': [], 'auto preterminal span': (71, 75), 'span': (71, 75), 'parent': 'NX', 'label': 'MF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SIMPX jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen)
		[01;31m(NX[00m [01;33m(NX[00m
			(PX zum einen)
			[01;31m(NX[00m
				(NX das maritimhotel in hannover) [01;33mNX)[00m
				(NF
					(R
						(C welches)
						(FKOORD
							[01;31m(MVC[00m
								(MF am bahnhof)
								(VC liegt)[01;31m)[00m
							(KON und)
							(MVC zum zentrum funfzehn minuten laufzeit hat))))[01;31m)[00m[01;31m)[00m
		(SIMPX
			(VF es)
			(LK gibt)
			(MF
				(ADVX dort)
				(NX
					(NX eine cafeteria)
					[01;31m(VF[00m
						(NX
							(NN garage))[01;31m)[00m)))
		(SIMPX ist naturlich dann nicht nicht unbedingt so wichtig)
		(SIMPX einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(NX dann das hotel luisenhof)
		(ADJX funf minuten vom bahnhof entfernt)
		[01;31m(ADJX[00m
			(ADVX also)
			(ADJX etwas schneller)[01;31m)[00m
		(SIMPX
			(VF es)
			(LK gibt)
			(MF
				(NX
					(MF eine bar ein restaurant)
					(KON und)
					(NX
						(ADVX ebenfalls)
						[01;36m(NX[00m
							(ART eine)
							(NN garage)[01;36m)[00m))))
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das hotel loccumerhof)
			(LK ist)
			[01;36m(PX[00m
				(MF
					(ADVX gleich)
					(PX beim bahnhof))[01;36m)[00m
			(NF anscheinend)
			(KOORD und)[01;31m)[00m
		(SIMPX
			(VF es)
			(LK gibt)
			(MF
				(NX
					[01;31m(NX[00m
						(ART ein)
						[01;31m(NX[00m
							(TRUNC schwimm)
							(KON und)
							(NN dampfbad)[01;31m)[00m[01;31m)[00m
					(KON und)
					(NX eine pianobar))))
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das einzelzimmer)
			(LK kostet)
			[01;33m(MF (MF[00m (MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m
		[01;31m(NX[00m
			(KON und)
			(NX das doppelzimmer hundert dreiundvierzig mark)[01;31m)[00m [01;33mMF)[00m
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				(PX
					(APPRART vom)
					(NX zeitangebot))[01;31m)[00m [01;33mMF)[00m
			(LK ware)
			(MF
				[01;31m(NX[00m
					(ART das)
					(NX hotel loccumerhof)[01;31m)[00m
				(ADVX anscheinend)
				(ADJX besonders gunstig))
			(NF weil es gleich beim bahnhof liegt)[01;31m)[00m))
Step:NP Internal Structure
{'subtrees': ['ART', 'NN'], 'family': ['ADVX', 'NX'], 'over_word': False, 'over words': True, 'auto preterminals': ('ART', 'NN'), 'right siblings': [], 'left siblings': [(ADVX (ADV ebenfalls))], 'auto preterminal span': (77, 79), 'span': (77, 79), 'parent': 'NX', 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'add'}
(TOP
	(TURN
		(SIMPX jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen)
		[01;31m(NX[00m [01;33m(NX[00m
			(PX zum einen)
			[01;31m(NX[00m
				(NX das maritimhotel in hannover) [01;33mNX)[00m
				(NF
					(R
						(C welches)
						(FKOORD
							[01;31m(MVC[00m
								(MF am bahnhof)
								(VC liegt)[01;31m)[00m
							(KON und)
							(MVC zum zentrum funfzehn minuten laufzeit hat))))[01;31m)[00m[01;31m)[00m
		(SIMPX
			(VF es)
			(LK gibt)
			(MF
				(ADVX dort)
				(NX
					(NX eine cafeteria)
					[01;31m(VF[00m
						(NX
							(NN garage))[01;31m)[00m)))
		(SIMPX ist naturlich dann nicht nicht unbedingt so wichtig)
		(SIMPX einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(NX dann das hotel luisenhof)
		(ADJX funf minuten vom bahnhof entfernt)
		[01;31m(ADJX[00m
			(ADVX also)
			(ADJX etwas schneller)[01;31m)[00m
		(SIMPX es gibt eine bar ein restaurant und ebenfalls eine garage)
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das hotel loccumerhof)
			(LK ist)
			[01;36m(PX[00m
				(MF
					(ADVX gleich)
					(PX beim bahnhof))[01;36m)[00m
			(NF anscheinend)
			(KOORD und)[01;31m)[00m
		(SIMPX
			(VF es)
			(LK gibt)
			(MF
				(NX
					[01;31m(NX[00m
						(ART ein)
						[01;31m(NX[00m
							(TRUNC schwimm)
							(KON und)
							(NN dampfbad)[01;31m)[00m[01;31m)[00m
					(KON und)
					(NX eine pianobar))))
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das einzelzimmer)
			(LK kostet)
			[01;33m(MF (MF[00m (MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m
		[01;31m(NX[00m
			(KON und)
			(NX das doppelzimmer hundert dreiundvierzig mark)[01;31m)[00m [01;33mMF)[00m
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				(PX
					(APPRART vom)
					(NX zeitangebot))[01;31m)[00m [01;33mMF)[00m
			(LK ware)
			(MF
				[01;31m(NX[00m
					(ART das)
					(NX hotel loccumerhof)[01;31m)[00m
				(ADVX anscheinend)
				(ADJX besonders gunstig))
			(NF weil es gleich beim bahnhof liegt)[01;31m)[00m))
Step:Unary
{'subtrees': ['MF'], 'family': ['KOORD', 'VF', 'LK', 'PX', 'NF', 'KOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'APPRART', 'NN'), 'right siblings': [(NF (ADVX (ADV anscheinend))), (KOORD (KON und))], 'left siblings': [(KOORD (KON und)), (VF (NX (ART das) (NX (NX (NN hotel)) (NX (NE loccumerhof))))), (LK (VXFIN (VAFIN ist)))], 'auto preterminal span': (84, 87), 'span': (84, 87), 'parent': 'SIMPX', 'label': 'PX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SIMPX jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen)
		[01;31m(NX[00m [01;33m(NX[00m
			(PX zum einen)
			[01;31m(NX[00m
				(NX das maritimhotel in hannover) [01;33mNX)[00m
				(NF
					(R
						(C welches)
						(FKOORD
							[01;31m(MVC[00m
								(MF am bahnhof)
								(VC liegt)[01;31m)[00m
							(KON und)
							(MVC zum zentrum funfzehn minuten laufzeit hat))))[01;31m)[00m[01;31m)[00m
		(SIMPX
			(VF es)
			(LK gibt)
			(MF
				(ADVX dort)
				(NX
					(NX eine cafeteria)
					[01;31m(VF[00m
						(NX
							(NN garage))[01;31m)[00m)))
		(SIMPX ist naturlich dann nicht nicht unbedingt so wichtig)
		(SIMPX einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(NX dann das hotel luisenhof)
		(ADJX funf minuten vom bahnhof entfernt)
		[01;31m(ADJX[00m
			(ADVX also)
			(ADJX etwas schneller)[01;31m)[00m
		(SIMPX es gibt eine bar ein restaurant und ebenfalls eine garage)
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das hotel loccumerhof)
			(LK ist)
			(PX gleich beim bahnhof)
			(NF anscheinend)
			(KOORD und)[01;31m)[00m
		(SIMPX
			(VF es)
			(LK gibt)
			(MF
				(NX
					[01;31m(NX[00m
						(ART ein)
						[01;31m(NX[00m
							(TRUNC schwimm)
							(KON und)
							(NN dampfbad)[01;31m)[00m[01;31m)[00m
					(KON und)
					(NX eine pianobar))))
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das einzelzimmer)
			(LK kostet)
			[01;33m(MF (MF[00m (MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m
		[01;31m(NX[00m
			(KON und)
			(NX das doppelzimmer hundert dreiundvierzig mark)[01;31m)[00m [01;33mMF)[00m
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				(PX
					(APPRART vom)
					(NX zeitangebot))[01;31m)[00m [01;33mMF)[00m
			(LK ware)
			(MF
				[01;31m(NX[00m
					(ART das)
					(NX hotel loccumerhof)[01;31m)[00m
				(ADVX anscheinend)
				(ADJX besonders gunstig))
			(NF weil es gleich beim bahnhof liegt)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['PX', 'NX'], 'family': ['SIMPX', 'SIMPX', 'NX', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'ADJX', 'ADJX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'PIAT', 'NN', 'VVPP', 'PDS', 'VMFIN', 'PPER', 'APPR', 'PPER', 'ADV', 'ADV', 'VVINF', 'APPRART', 'PIS', 'ART', 'NE', 'APPR', 'NE', 'PRELS', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPRART', 'NN', 'CARD', 'NN', 'NN', 'VAFIN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NN', 'VAFIN', 'ADV', 'ADV', 'PTKNEG', 'PTKNEG', 'ADV', 'ADV', 'ADJD', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN', 'NN', 'CARD', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'ADJD', 'ADV', 'ADV', 'ADJD', 'PPER', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ART', 'NN', 'KON', 'ART', 'NN', 'NE', 'VAFIN', 'ADV', 'APPRART', 'NN', 'ADV', 'KON', 'PPER', 'VVFIN', 'ART', 'TRUNC', 'KON', 'NN', 'KON', 'ART', 'NN', 'KON', 'ART', 'NN', 'VVFIN', 'ADV', 'CARD', 'CARD', 'NN', 'KON', 'ART', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'VAFIN', 'ART', 'NN', 'NE', 'ADV', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'VVFIN'), 'right siblings': ['SIMPX', 'SIMPX', 'SIMPX', 'NX', 'ADJX', 'ADJX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 127), 'span': (17, 34), 'left siblings': ['SIMPX', 'SIMPX'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen)
		[01;33m(NX[00m (PX zum einen)
		[01;31m(NX[00m
			(NX das maritimhotel in hannover) [01;33mNX)[00m
			(NF
				(R
					(C welches)
					(FKOORD
						[01;31m(MVC[00m
							(MF am bahnhof)
							(VC liegt)[01;31m)[00m
						(KON und)
						(MVC zum zentrum funfzehn minuten laufzeit hat))))[01;31m)[00m
		(SIMPX
			(VF es)
			(LK gibt)
			(MF
				(ADVX dort)
				(NX
					(NX eine cafeteria)
					[01;31m(VF[00m
						(NX
							(NN garage))[01;31m)[00m)))
		(SIMPX ist naturlich dann nicht nicht unbedingt so wichtig)
		(SIMPX einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(NX dann das hotel luisenhof)
		(ADJX funf minuten vom bahnhof entfernt)
		[01;31m(ADJX[00m
			(ADVX also)
			(ADJX etwas schneller)[01;31m)[00m
		(SIMPX es gibt eine bar ein restaurant und ebenfalls eine garage)
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das hotel loccumerhof)
			(LK ist)
			(PX gleich beim bahnhof)
			(NF anscheinend)
			(KOORD und)[01;31m)[00m
		(SIMPX
			(VF es)
			(LK gibt)
			(MF
				(NX
					[01;31m(NX[00m
						(ART ein)
						[01;31m(NX[00m
							(TRUNC schwimm)
							(KON und)
							(NN dampfbad)[01;31m)[00m[01;31m)[00m
					(KON und)
					(NX eine pianobar))))
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das einzelzimmer)
			(LK kostet)
			[01;33m(MF (MF[00m (MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m
		[01;31m(NX[00m
			(KON und)
			(NX das doppelzimmer hundert dreiundvierzig mark)[01;31m)[00m [01;33mMF)[00m
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				(PX
					(APPRART vom)
					(NX zeitangebot))[01;31m)[00m [01;33mMF)[00m
			(LK ware)
			(MF
				[01;31m(NX[00m
					(ART das)
					(NX hotel loccumerhof)[01;31m)[00m
				(ADVX anscheinend)
				(ADJX besonders gunstig))
			(NF weil es gleich beim bahnhof liegt)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['NX', 'NF'], 'family': ['SIMPX', 'SIMPX', 'PX', 'NX', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'ADJX', 'ADJX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'PIAT', 'NN', 'VVPP', 'PDS', 'VMFIN', 'PPER', 'APPR', 'PPER', 'ADV', 'ADV', 'VVINF', 'APPRART', 'PIS', 'ART', 'NE', 'APPR', 'NE', 'PRELS', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPRART', 'NN', 'CARD', 'NN', 'NN', 'VAFIN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NN', 'VAFIN', 'ADV', 'ADV', 'PTKNEG', 'PTKNEG', 'ADV', 'ADV', 'ADJD', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN', 'NN', 'CARD', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'ADJD', 'ADV', 'ADV', 'ADJD', 'PPER', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ART', 'NN', 'KON', 'ART', 'NN', 'NE', 'VAFIN', 'ADV', 'APPRART', 'NN', 'ADV', 'KON', 'PPER', 'VVFIN', 'ART', 'TRUNC', 'KON', 'NN', 'KON', 'ART', 'NN', 'KON', 'ART', 'NN', 'VVFIN', 'ADV', 'CARD', 'CARD', 'NN', 'KON', 'ART', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'VAFIN', 'ART', 'NN', 'NE', 'ADV', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'VVFIN'), 'right siblings': ['SIMPX', 'SIMPX', 'SIMPX', 'NX', 'ADJX', 'ADJX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 127), 'span': (19, 34), 'left siblings': ['SIMPX', 'SIMPX', 'PX'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen)
		[01;36m(NX[00m
			(PX zum einen)
			(NX das maritimhotel in hannover)[01;36m)[00m
		(NF
			(R
				(C welches)
				(FKOORD
					[01;31m(MVC[00m
						(MF am bahnhof)
						(VC liegt)[01;31m)[00m
					(KON und)
					(MVC zum zentrum funfzehn minuten laufzeit hat))))
		(SIMPX
			(VF es)
			(LK gibt)
			(MF
				(ADVX dort)
				(NX
					(NX eine cafeteria)
					[01;31m(VF[00m
						(NX
							(NN garage))[01;31m)[00m)))
		(SIMPX ist naturlich dann nicht nicht unbedingt so wichtig)
		(SIMPX einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(NX dann das hotel luisenhof)
		(ADJX funf minuten vom bahnhof entfernt)
		[01;31m(ADJX[00m
			(ADVX also)
			(ADJX etwas schneller)[01;31m)[00m
		(SIMPX es gibt eine bar ein restaurant und ebenfalls eine garage)
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das hotel loccumerhof)
			(LK ist)
			(PX gleich beim bahnhof)
			(NF anscheinend)
			(KOORD und)[01;31m)[00m
		(SIMPX
			(VF es)
			(LK gibt)
			(MF
				(NX
					[01;31m(NX[00m
						(ART ein)
						[01;31m(NX[00m
							(TRUNC schwimm)
							(KON und)
							(NN dampfbad)[01;31m)[00m[01;31m)[00m
					(KON und)
					(NX eine pianobar))))
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das einzelzimmer)
			(LK kostet)
			[01;33m(MF (MF[00m (MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m
		[01;31m(NX[00m
			(KON und)
			(NX das doppelzimmer hundert dreiundvierzig mark)[01;31m)[00m [01;33mMF)[00m
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				(PX
					(APPRART vom)
					(NX zeitangebot))[01;31m)[00m [01;33mMF)[00m
			(LK ware)
			(MF
				[01;31m(NX[00m
					(ART das)
					(NX hotel loccumerhof)[01;31m)[00m
				(ADVX anscheinend)
				(ADJX besonders gunstig))
			(NF weil es gleich beim bahnhof liegt)[01;31m)[00m))
Step:UNSET add
{'subtrees': ['PX', 'NX'], 'family': ['SIMPX', 'SIMPX', 'NX', 'NF', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'ADJX', 'ADJX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'PIS', 'ART', 'NE', 'APPR', 'NE'), 'right siblings': [(NF (R (C (NX (PRELS welches))) (FKOORD (MVC (MF (PX (APPRART am) (NX (NN bahnhof)))) (VC (VXFIN (VVFIN liegt)))) (KON und) (MVC (MF (MF (PX (APPRART zum) (NX (NN zentrum))) (NX (ADJX (CARD funfzehn)) (NN minuten))) (VF (NX (NN laufzeit)))) (VC (VXFIN (VAFIN hat))))))), (SIMPX (VF (NX (PPER es))) (LK (VXFIN (VVFIN gibt))) (MF (ADVX (ADV dort)) (NX (NX (ART eine) (NN cafeteria)) (VF (NX (NN garage)))))), (SIMPX (LK (VXFIN (VAFIN ist))) (MF (ADVX (ADV naturlich)) (ADVX (ADV dann)) (ADVX (PTKNEG nicht)) (ADVX (PTKNEG nicht)) (ADVX (ADV unbedingt)) (ADJX (ADVX (ADV so)) (ADJD wichtig)))), (SIMPX (VF (NX (NN einzelzimmer))) (LK (VXFIN (VVFIN kostet))) (NX (MF (NX (ADJX (CARD hundert) (CARD einundfunfzig)) (NN mark)) (NX (NX (NN doppelzimmer)) (NX (ADJX (CARD hundert) (CARD funf)) (NN mark)))))), (NX (ADVX (ADV dann)) (NX (ART das) (NX (NX (NN hotel)) (NX (NE luisenhof))))), (ADJX (NX (NX (ADJX (CARD funf)) (NN minuten)) (PX (APPRART vom) (NX (NN bahnhof)))) (ADJD entfernt)), (ADJX (ADVX (ADV also)) (ADJX (ADVX (ADV etwas)) (ADJD schneller))), (SIMPX (VF (NX (PPER es))) (LK (VXFIN (VVFIN gibt))) (MF (NX (MF (NX (NX (ART eine) (NN bar)) (NX (ART ein) (NN restaurant)))) (KON und) (NX (ADVX (ADV ebenfalls)) (NX (ART eine) (NN garage)))))), (SIMPX (KOORD (KON und)) (VF (NX (ART das) (NX (NX (NN hotel)) (NX (NE loccumerhof))))) (LK (VXFIN (VAFIN ist))) (PX (MF (ADVX (ADV gleich)) (PX (APPRART beim) (NX (NN bahnhof))))) (NF (ADVX (ADV anscheinend))) (KOORD (KON und))), (SIMPX (VF (NX (PPER es))) (LK (VXFIN (VVFIN gibt))) (MF (NX (NX (ART ein) (NX (TRUNC schwimm) (KON und) (NN dampfbad))) (KON und) (NX (ART eine) (NN pianobar))))), (SIMPX (KOORD (KON und)) (VF (NX (ART das) (NN einzelzimmer))) (LK (VXFIN (VVFIN kostet))) (MF (ADVX (ADV allerdings)) (NX (ADJX (CARD zweihundert) (CARD achtundvierzig)) (NN mark)))), (NX (KON und) (NX (NX (ART das) (NN doppelzimmer)) (NX (ADJX (CARD hundert) (CARD dreiundvierzig)) (NN mark)))), (SIMPX (VF (PX (APPRART vom) (NX (NN zeitangebot)))) (LK (VXFIN (VAFIN ware))) (MF (NX (ART das) (NX (NX (NN hotel)) (NX (NE loccumerhof)))) (ADVX (ADV anscheinend)) (ADJX (ADVX (ADV besonders)) (ADJD gunstig))) (NF (SIMPX (C (KOUS weil)) (MF (NX (PPER es)) (ADVX (ADV gleich)) (NX (APPRART beim) (NX (NN bahnhof)))) (VC (VXFIN (VVFIN liegt))))))], 'left siblings': [(SIMPX (VF (ADVX (ADV jetzt))) (LK (VXFIN (VAFIN habe))) (MF (NX (PPER ich)) (NX (PRF mir)) (ADVX (ADV auch)) (ADVX (ADV schon)) (NX (PIAT einige) (NN hotelangebote))) (VC (VXINF (VVPP herausgesucht)))), (SIMPX (VF (NX (PDS die))) (LK (VXFIN (VMFIN mus))) (MF (NX (PPER ich)) (PX (APPR mit) (NX (PPER ihnen))) (ADVX (ADV jetzt)) (ADVX (ADV noch))) (VC (VXINF (VVINF absprechen))))], 'auto preterminal span': (17, 23), 'span': (17, 23), 'parent': 'TURN', 'label': 'NX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SIMPX jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen)
		(NX zum einen das maritimhotel in hannover)
		(NF
			(R
				(C welches)
				(FKOORD
					[01;31m(MVC[00m
						(MF am bahnhof)
						(VC liegt)[01;31m)[00m
					(KON und)
					(MVC zum zentrum funfzehn minuten laufzeit hat))))
		(SIMPX
			(VF es)
			(LK gibt)
			(MF
				(ADVX dort)
				(NX
					(NX eine cafeteria)
					[01;31m(VF[00m
						(NX
							(NN garage))[01;31m)[00m)))
		(SIMPX ist naturlich dann nicht nicht unbedingt so wichtig)
		(SIMPX einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(NX dann das hotel luisenhof)
		(ADJX funf minuten vom bahnhof entfernt)
		[01;31m(ADJX[00m
			(ADVX also)
			(ADJX etwas schneller)[01;31m)[00m
		(SIMPX es gibt eine bar ein restaurant und ebenfalls eine garage)
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das hotel loccumerhof)
			(LK ist)
			(PX gleich beim bahnhof)
			(NF anscheinend)
			(KOORD und)[01;31m)[00m
		(SIMPX
			(VF es)
			(LK gibt)
			(MF
				(NX
					[01;31m(NX[00m
						(ART ein)
						[01;31m(NX[00m
							(TRUNC schwimm)
							(KON und)
							(NN dampfbad)[01;31m)[00m[01;31m)[00m
					(KON und)
					(NX eine pianobar))))
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das einzelzimmer)
			(LK kostet)
			[01;33m(MF (MF[00m (MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m
		[01;31m(NX[00m
			(KON und)
			(NX das doppelzimmer hundert dreiundvierzig mark)[01;31m)[00m [01;33mMF)[00m
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				(PX
					(APPRART vom)
					(NX zeitangebot))[01;31m)[00m [01;33mMF)[00m
			(LK ware)
			(MF
				[01;31m(NX[00m
					(ART das)
					(NX hotel loccumerhof)[01;31m)[00m
				(ADVX anscheinend)
				(ADJX besonders gunstig))
			(NF weil es gleich beim bahnhof liegt)[01;31m)[00m))
Step:Co-ordination
{'subtrees': ['MF', 'VC'], 'family': ['MVC', 'KON', 'MVC'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'NN', 'VVFIN', 'KON', 'APPRART', 'NN', 'CARD', 'NN', 'NN', 'VAFIN'), 'right siblings': ['KON', 'MVC'], 'parent': 'FKOORD', 'auto preterminal span': (24, 34), 'span': (24, 27), 'left siblings': [], 'label': 'MVC', 'classified_type': 'Co-ordination', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen)
		(NX zum einen das maritimhotel in hannover)
		(NF welches am bahnhof liegt und zum zentrum funfzehn minuten laufzeit hat)
		(SIMPX
			(VF es)
			(LK gibt)
			(MF
				(ADVX dort)
				(NX
					(NX eine cafeteria)
					[01;31m(VF[00m
						(NX
							(NN garage))[01;31m)[00m)))
		(SIMPX ist naturlich dann nicht nicht unbedingt so wichtig)
		(SIMPX einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(NX dann das hotel luisenhof)
		(ADJX funf minuten vom bahnhof entfernt)
		[01;31m(ADJX[00m
			(ADVX also)
			(ADJX etwas schneller)[01;31m)[00m
		(SIMPX es gibt eine bar ein restaurant und ebenfalls eine garage)
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das hotel loccumerhof)
			(LK ist)
			(PX gleich beim bahnhof)
			(NF anscheinend)
			(KOORD und)[01;31m)[00m
		(SIMPX
			(VF es)
			(LK gibt)
			(MF
				(NX
					[01;31m(NX[00m
						(ART ein)
						[01;31m(NX[00m
							(TRUNC schwimm)
							(KON und)
							(NN dampfbad)[01;31m)[00m[01;31m)[00m
					(KON und)
					(NX eine pianobar))))
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das einzelzimmer)
			(LK kostet)
			[01;33m(MF (MF[00m (MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m
		[01;31m(NX[00m
			(KON und)
			(NX das doppelzimmer hundert dreiundvierzig mark)[01;31m)[00m [01;33mMF)[00m
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				(PX
					(APPRART vom)
					(NX zeitangebot))[01;31m)[00m [01;33mMF)[00m
			(LK ware)
			(MF
				[01;31m(NX[00m
					(ART das)
					(NX hotel loccumerhof)[01;31m)[00m
				(ADVX anscheinend)
				(ADJX besonders gunstig))
			(NF weil es gleich beim bahnhof liegt)[01;31m)[00m))
Step:Unary
{'subtrees': ['NX'], 'family': ['NX', 'VF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'NN'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (37, 40), 'span': (39, 40), 'left siblings': ['NX'], 'label': 'VF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen)
		(NX zum einen das maritimhotel in hannover)
		(NF welches am bahnhof liegt und zum zentrum funfzehn minuten laufzeit hat)
		(SIMPX es gibt dort eine cafeteria garage)
		(SIMPX ist naturlich dann nicht nicht unbedingt so wichtig)
		(SIMPX einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(NX dann das hotel luisenhof)
		(ADJX funf minuten vom bahnhof entfernt)
		[01;31m(ADJX[00m
			(ADVX also)
			(ADJX etwas schneller)[01;31m)[00m
		(SIMPX es gibt eine bar ein restaurant und ebenfalls eine garage)
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das hotel loccumerhof)
			(LK ist)
			(PX gleich beim bahnhof)
			(NF anscheinend)
			(KOORD und)[01;31m)[00m
		(SIMPX
			(VF es)
			(LK gibt)
			(MF
				(NX
					[01;31m(NX[00m
						(ART ein)
						[01;31m(NX[00m
							(TRUNC schwimm)
							(KON und)
							(NN dampfbad)[01;31m)[00m[01;31m)[00m
					(KON und)
					(NX eine pianobar))))
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das einzelzimmer)
			(LK kostet)
			[01;33m(MF (MF[00m (MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m
		[01;31m(NX[00m
			(KON und)
			(NX das doppelzimmer hundert dreiundvierzig mark)[01;31m)[00m [01;33mMF)[00m
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				(PX
					(APPRART vom)
					(NX zeitangebot))[01;31m)[00m [01;33mMF)[00m
			(LK ware)
			(MF
				[01;31m(NX[00m
					(ART das)
					(NX hotel loccumerhof)[01;31m)[00m
				(ADVX anscheinend)
				(ADJX besonders gunstig))
			(NF weil es gleich beim bahnhof liegt)[01;31m)[00m))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'ADJX'], 'family': ['SIMPX', 'SIMPX', 'NX', 'NF', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'ADJX', 'ADJX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'PIAT', 'NN', 'VVPP', 'PDS', 'VMFIN', 'PPER', 'APPR', 'PPER', 'ADV', 'ADV', 'VVINF', 'APPRART', 'PIS', 'ART', 'NE', 'APPR', 'NE', 'PRELS', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPRART', 'NN', 'CARD', 'NN', 'NN', 'VAFIN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NN', 'VAFIN', 'ADV', 'ADV', 'PTKNEG', 'PTKNEG', 'ADV', 'ADV', 'ADJD', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN', 'NN', 'CARD', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'ADJD', 'ADV', 'ADV', 'ADJD', 'PPER', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ART', 'NN', 'KON', 'ART', 'NN', 'NE', 'VAFIN', 'ADV', 'APPRART', 'NN', 'ADV', 'KON', 'PPER', 'VVFIN', 'ART', 'TRUNC', 'KON', 'NN', 'KON', 'ART', 'NN', 'KON', 'ART', 'NN', 'VVFIN', 'ADV', 'CARD', 'CARD', 'NN', 'KON', 'ART', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'VAFIN', 'ART', 'NN', 'NE', 'ADV', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'VVFIN'), 'right siblings': ['SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 127), 'span': (66, 69), 'left siblings': ['SIMPX', 'SIMPX', 'NX', 'NF', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'ADJX'], 'label': 'ADJX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen)
		(NX zum einen das maritimhotel in hannover)
		(NF welches am bahnhof liegt und zum zentrum funfzehn minuten laufzeit hat)
		(SIMPX es gibt dort eine cafeteria garage)
		(SIMPX ist naturlich dann nicht nicht unbedingt so wichtig)
		(SIMPX einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(NX dann das hotel luisenhof)
		(ADJX funf minuten vom bahnhof entfernt)
		(ADVX also)
		(ADJX etwas schneller)
		(SIMPX es gibt eine bar ein restaurant und ebenfalls eine garage)
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das hotel loccumerhof)
			(LK ist)
			(PX gleich beim bahnhof)
			(NF anscheinend)
			(KOORD und)[01;31m)[00m
		(SIMPX
			(VF es)
			(LK gibt)
			(MF
				(NX
					[01;31m(NX[00m
						(ART ein)
						[01;31m(NX[00m
							(TRUNC schwimm)
							(KON und)
							(NN dampfbad)[01;31m)[00m[01;31m)[00m
					(KON und)
					(NX eine pianobar))))
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das einzelzimmer)
			(LK kostet)
			[01;33m(MF (MF[00m (MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m
		[01;31m(NX[00m
			(KON und)
			(NX das doppelzimmer hundert dreiundvierzig mark)[01;31m)[00m [01;33mMF)[00m
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				(PX
					(APPRART vom)
					(NX zeitangebot))[01;31m)[00m [01;33mMF)[00m
			(LK ware)
			(MF
				[01;31m(NX[00m
					(ART das)
					(NX hotel loccumerhof)[01;31m)[00m
				(ADVX anscheinend)
				(ADJX besonders gunstig))
			(NF weil es gleich beim bahnhof liegt)[01;31m)[00m))
Step:PP Attachment
{'subtrees': ['KOORD', 'VF', 'LK', 'PX', 'NF', 'KOORD'], 'family': ['SIMPX', 'SIMPX', 'NX', 'NF', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'ADJX', 'ADVX', 'ADJX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'PIAT', 'NN', 'VVPP', 'PDS', 'VMFIN', 'PPER', 'APPR', 'PPER', 'ADV', 'ADV', 'VVINF', 'APPRART', 'PIS', 'ART', 'NE', 'APPR', 'NE', 'PRELS', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPRART', 'NN', 'CARD', 'NN', 'NN', 'VAFIN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NN', 'VAFIN', 'ADV', 'ADV', 'PTKNEG', 'PTKNEG', 'ADV', 'ADV', 'ADJD', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN', 'NN', 'CARD', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'ADJD', 'ADV', 'ADV', 'ADJD', 'PPER', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ART', 'NN', 'KON', 'ART', 'NN', 'NE', 'VAFIN', 'ADV', 'APPRART', 'NN', 'ADV', 'KON', 'PPER', 'VVFIN', 'ART', 'TRUNC', 'KON', 'NN', 'KON', 'ART', 'NN', 'KON', 'ART', 'NN', 'VVFIN', 'ADV', 'CARD', 'CARD', 'NN', 'KON', 'ART', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'VAFIN', 'ART', 'NN', 'NE', 'ADV', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'VVFIN'), 'right siblings': ['SIMPX', 'SIMPX', 'NX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 127), 'span': (79, 89), 'left siblings': ['SIMPX', 'SIMPX', 'NX', 'NF', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'ADJX', 'ADVX', 'ADJX', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen)
		(NX zum einen das maritimhotel in hannover)
		(NF welches am bahnhof liegt und zum zentrum funfzehn minuten laufzeit hat)
		(SIMPX es gibt dort eine cafeteria garage)
		(SIMPX ist naturlich dann nicht nicht unbedingt so wichtig)
		(SIMPX einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(NX dann das hotel luisenhof)
		(ADJX funf minuten vom bahnhof entfernt)
		(ADVX also)
		(ADJX etwas schneller)
		(SIMPX es gibt eine bar ein restaurant und ebenfalls eine garage)
		(KOORD und)
		(VF das hotel loccumerhof)
		(LK ist)
		(PX gleich beim bahnhof)
		(NF anscheinend)
		(KOORD und)
		(SIMPX
			(VF es)
			(LK gibt)
			(MF
				(NX
					[01;31m(NX[00m
						(ART ein)
						[01;31m(NX[00m
							(TRUNC schwimm)
							(KON und)
							(NN dampfbad)[01;31m)[00m[01;31m)[00m
					(KON und)
					(NX eine pianobar))))
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das einzelzimmer)
			(LK kostet)
			[01;33m(MF (MF[00m (MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m
		[01;31m(NX[00m
			(KON und)
			(NX das doppelzimmer hundert dreiundvierzig mark)[01;31m)[00m [01;33mMF)[00m
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				(PX
					(APPRART vom)
					(NX zeitangebot))[01;31m)[00m [01;33mMF)[00m
			(LK ware)
			(MF
				[01;31m(NX[00m
					(ART das)
					(NX hotel loccumerhof)[01;31m)[00m
				(ADVX anscheinend)
				(ADJX besonders gunstig))
			(NF weil es gleich beim bahnhof liegt)[01;31m)[00m))
Step:Co-ordination
{'subtrees': ['ART', 'NX'], 'family': ['NX', 'KON', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'TRUNC', 'KON', 'NN', 'KON', 'ART', 'NN'), 'right siblings': ['KON', 'NX'], 'parent': 'NX', 'auto preterminal span': (91, 98), 'span': (91, 95), 'left siblings': [], 'label': 'NX', 'classified_type': 'Co-ordination', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen)
		(NX zum einen das maritimhotel in hannover)
		(NF welches am bahnhof liegt und zum zentrum funfzehn minuten laufzeit hat)
		(SIMPX es gibt dort eine cafeteria garage)
		(SIMPX ist naturlich dann nicht nicht unbedingt so wichtig)
		(SIMPX einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(NX dann das hotel luisenhof)
		(ADJX funf minuten vom bahnhof entfernt)
		(ADVX also)
		(ADJX etwas schneller)
		(SIMPX es gibt eine bar ein restaurant und ebenfalls eine garage)
		(KOORD und)
		(VF das hotel loccumerhof)
		(LK ist)
		(PX gleich beim bahnhof)
		(NF anscheinend)
		(KOORD und)
		(SIMPX
			(VF es)
			(LK gibt)
			(MF
				(NX
					(ART ein)
					[01;31m(NX[00m
						(TRUNC schwimm)
						(KON und)
						(NN dampfbad)[01;31m)[00m
					(KON und)
					(NX eine pianobar))))
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das einzelzimmer)
			(LK kostet)
			[01;33m(MF (MF[00m (MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m
		[01;31m(NX[00m
			(KON und)
			(NX das doppelzimmer hundert dreiundvierzig mark)[01;31m)[00m [01;33mMF)[00m
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				(PX
					(APPRART vom)
					(NX zeitangebot))[01;31m)[00m [01;33mMF)[00m
			(LK ware)
			(MF
				[01;31m(NX[00m
					(ART das)
					(NX hotel loccumerhof)[01;31m)[00m
				(ADVX anscheinend)
				(ADJX besonders gunstig))
			(NF weil es gleich beim bahnhof liegt)[01;31m)[00m))
Step:Co-ordination
{'subtrees': ['TRUNC', 'KON', 'NN'], 'family': ['ART', 'NX', 'KON', 'NX'], 'over_word': False, 'over words': True, 'auto preterminals': ('ART', 'TRUNC', 'KON', 'NN', 'KON', 'ART', 'NN'), 'right siblings': ['KON', 'NX'], 'parent': 'NX', 'auto preterminal span': (91, 98), 'span': (92, 95), 'left siblings': ['ART'], 'label': 'NX', 'classified_type': 'Co-ordination', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen)
		(NX zum einen das maritimhotel in hannover)
		(NF welches am bahnhof liegt und zum zentrum funfzehn minuten laufzeit hat)
		(SIMPX es gibt dort eine cafeteria garage)
		(SIMPX ist naturlich dann nicht nicht unbedingt so wichtig)
		(SIMPX einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(NX dann das hotel luisenhof)
		(ADJX funf minuten vom bahnhof entfernt)
		(ADVX also)
		(ADJX etwas schneller)
		(SIMPX es gibt eine bar ein restaurant und ebenfalls eine garage)
		(KOORD und)
		(VF das hotel loccumerhof)
		(LK ist)
		(PX gleich beim bahnhof)
		(NF anscheinend)
		(KOORD und)
		(SIMPX es gibt ein schwimm und dampfbad und eine pianobar)
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das einzelzimmer)
			(LK kostet)
			[01;33m(MF (MF[00m (MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m
		[01;31m(NX[00m
			(KON und)
			(NX das doppelzimmer hundert dreiundvierzig mark)[01;31m)[00m [01;33mMF)[00m
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				(PX
					(APPRART vom)
					(NX zeitangebot))[01;31m)[00m [01;33mMF)[00m
			(LK ware)
			(MF
				[01;31m(NX[00m
					(ART das)
					(NX hotel loccumerhof)[01;31m)[00m
				(ADVX anscheinend)
				(ADJX besonders gunstig))
			(NF weil es gleich beim bahnhof liegt)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['KOORD', 'VF', 'LK', 'MF'], 'family': ['SIMPX', 'SIMPX', 'NX', 'NF', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'ADJX', 'ADVX', 'ADJX', 'SIMPX', 'KOORD', 'VF', 'LK', 'PX', 'NF', 'KOORD', 'SIMPX', 'SIMPX', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'PIAT', 'NN', 'VVPP', 'PDS', 'VMFIN', 'PPER', 'APPR', 'PPER', 'ADV', 'ADV', 'VVINF', 'APPRART', 'PIS', 'ART', 'NE', 'APPR', 'NE', 'PRELS', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPRART', 'NN', 'CARD', 'NN', 'NN', 'VAFIN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NN', 'VAFIN', 'ADV', 'ADV', 'PTKNEG', 'PTKNEG', 'ADV', 'ADV', 'ADJD', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN', 'NN', 'CARD', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'ADJD', 'ADV', 'ADV', 'ADJD', 'PPER', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ART', 'NN', 'KON', 'ART', 'NN', 'NE', 'VAFIN', 'ADV', 'APPRART', 'NN', 'ADV', 'KON', 'PPER', 'VVFIN', 'ART', 'TRUNC', 'KON', 'NN', 'KON', 'ART', 'NN', 'KON', 'ART', 'NN', 'VVFIN', 'ADV', 'CARD', 'CARD', 'NN', 'KON', 'ART', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'VAFIN', 'ART', 'NN', 'NE', 'ADV', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'VVFIN'), 'right siblings': ['NX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 127), 'span': (98, 106), 'left siblings': ['SIMPX', 'SIMPX', 'NX', 'NF', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'ADJX', 'ADVX', 'ADJX', 'SIMPX', 'KOORD', 'VF', 'LK', 'PX', 'NF', 'KOORD', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen)
		(NX zum einen das maritimhotel in hannover)
		(NF welches am bahnhof liegt und zum zentrum funfzehn minuten laufzeit hat)
		(SIMPX es gibt dort eine cafeteria garage)
		(SIMPX ist naturlich dann nicht nicht unbedingt so wichtig)
		(SIMPX einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(NX dann das hotel luisenhof)
		(ADJX funf minuten vom bahnhof entfernt)
		(ADVX also)
		(ADJX etwas schneller)
		(SIMPX es gibt eine bar ein restaurant und ebenfalls eine garage)
		(KOORD und)
		(VF das hotel loccumerhof)
		(LK ist)
		(PX gleich beim bahnhof)
		(NF anscheinend)
		(KOORD und)
		(SIMPX es gibt ein schwimm und dampfbad und eine pianobar)
		(KOORD und)
		(VF das einzelzimmer)
		(LK kostet)
		[01;36m(MF[00m
			[01;33m(MF[00m (MF allerdings zweihundert achtundvierzig mark)
			[01;31m(NX[00m
				(KON und)
				(NX das doppelzimmer hundert dreiundvierzig mark)[01;31m)[00m[01;36m)[00m
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				(PX
					(APPRART vom)
					(NX zeitangebot))[01;31m)[00m [01;33mMF)[00m
			(LK ware)
			(MF
				[01;31m(NX[00m
					(ART das)
					(NX hotel loccumerhof)[01;31m)[00m
				(ADVX anscheinend)
				(ADJX besonders gunstig))
			(NF weil es gleich beim bahnhof liegt)[01;31m)[00m))
Step:Co-ordination
{'new_parent': 'TURN', 'new_family': ['SIMPX', 'SIMPX', 'NX', 'NF', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'ADJX', 'ADVX', 'ADJX', 'SIMPX', 'KOORD', 'VF', 'LK', 'PX', 'NF', 'KOORD', 'SIMPX', 'KOORD', 'VF', 'LK', 'MF', 'KON', 'NX', 'SIMPX'], 'mover info': [('KON', (106, 107))], 'old_family': ['KON', 'NX'], 'start left siblings': [], 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'PIAT', 'NN', 'VVPP', 'PDS', 'VMFIN', 'PPER', 'APPR', 'PPER', 'ADV', 'ADV', 'VVINF', 'APPRART', 'PIS', 'ART', 'NE', 'APPR', 'NE', 'PRELS', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPRART', 'NN', 'CARD', 'NN', 'NN', 'VAFIN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NN', 'VAFIN', 'ADV', 'ADV', 'PTKNEG', 'PTKNEG', 'ADV', 'ADV', 'ADJD', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN', 'NN', 'CARD', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'ADJD', 'ADV', 'ADV', 'ADJD', 'PPER', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ART', 'NN', 'KON', 'ART', 'NN', 'NE', 'VAFIN', 'ADV', 'APPRART', 'NN', 'ADV', 'KON', 'PPER', 'VVFIN', 'ART', 'TRUNC', 'KON', 'NN', 'KON', 'ART', 'NN', 'KON', 'ART', 'NN', 'VVFIN', 'ADV', 'CARD', 'CARD', 'NN', 'KON', 'ART', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'VAFIN', 'ART', 'NN', 'NE', 'ADV', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'VVFIN'), 'start right siblings': ['NX'], 'end left siblings': ['SIMPX', 'SIMPX', 'NX', 'NF', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'ADJX', 'ADVX', 'ADJX', 'SIMPX', 'KOORD', 'VF', 'LK', 'PX', 'NF', 'KOORD', 'SIMPX', 'KOORD', 'VF', 'LK', 'MF'], 'auto preterminal span': (0, 127), 'adding node already present': False, 'movers': ['KON'], 'old_parent': 'NX', 'POS confusion': ('KON', 'KON'), 'added and moved': True, 'end right siblings': ['NX', 'SIMPX'], 'classified_type': 'Co-ordination', 'type': 'move', 'added label': 'MF'}
(TOP
	(TURN
		(SIMPX jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen)
		(NX zum einen das maritimhotel in hannover)
		(NF welches am bahnhof liegt und zum zentrum funfzehn minuten laufzeit hat)
		(SIMPX es gibt dort eine cafeteria garage)
		(SIMPX ist naturlich dann nicht nicht unbedingt so wichtig)
		(SIMPX einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(NX dann das hotel luisenhof)
		(ADJX funf minuten vom bahnhof entfernt)
		(ADVX also)
		(ADJX etwas schneller)
		(SIMPX es gibt eine bar ein restaurant und ebenfalls eine garage)
		(KOORD und)
		(VF das hotel loccumerhof)
		(LK ist)
		(PX gleich beim bahnhof)
		(NF anscheinend)
		(KOORD und)
		(SIMPX es gibt ein schwimm und dampfbad und eine pianobar)
		(KOORD und)
		(VF das einzelzimmer)
		(LK kostet)
		[01;33m(MF[00m (MF allerdings zweihundert achtundvierzig mark und das doppelzimmer hundert dreiundvierzig mark)
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				(PX
					(APPRART vom)
					(NX zeitangebot))[01;31m)[00m [01;33mMF)[00m
			(LK ware)
			(MF
				[01;31m(NX[00m
					(ART das)
					(NX hotel loccumerhof)[01;31m)[00m
				(ADVX anscheinend)
				(ADJX besonders gunstig))
			(NF weil es gleich beim bahnhof liegt)[01;31m)[00m))
Step:Unary
{'subtrees': ['PX'], 'family': ['VF', 'LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'NN', 'VAFIN', 'ART', 'NN', 'NE', 'ADV', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'VVFIN'), 'right siblings': ['LK', 'MF', 'NF'], 'parent': 'SIMPX', 'auto preterminal span': (112, 127), 'span': (112, 114), 'left siblings': [], 'label': 'VF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen)
		(NX zum einen das maritimhotel in hannover)
		(NF welches am bahnhof liegt und zum zentrum funfzehn minuten laufzeit hat)
		(SIMPX es gibt dort eine cafeteria garage)
		(SIMPX ist naturlich dann nicht nicht unbedingt so wichtig)
		(SIMPX einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(NX dann das hotel luisenhof)
		(ADJX funf minuten vom bahnhof entfernt)
		(ADVX also)
		(ADJX etwas schneller)
		(SIMPX es gibt eine bar ein restaurant und ebenfalls eine garage)
		(KOORD und)
		(VF das hotel loccumerhof)
		(LK ist)
		(PX gleich beim bahnhof)
		(NF anscheinend)
		(KOORD und)
		(SIMPX es gibt ein schwimm und dampfbad und eine pianobar)
		(KOORD und)
		(VF das einzelzimmer)
		(LK kostet)
		[01;33m(MF[00m (MF allerdings zweihundert achtundvierzig mark und das doppelzimmer hundert dreiundvierzig mark)
		[01;31m(SIMPX[00m
			(PX vom zeitangebot) [01;33mMF)[00m
			(LK ware)
			(MF
				[01;31m(NX[00m
					(ART das)
					(NX hotel loccumerhof)[01;31m)[00m
				(ADVX anscheinend)
				(ADJX besonders gunstig))
			(NF weil es gleich beim bahnhof liegt)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['PX', 'LK', 'MF', 'NF'], 'family': ['SIMPX', 'SIMPX', 'NX', 'NF', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'ADJX', 'ADVX', 'ADJX', 'SIMPX', 'KOORD', 'VF', 'LK', 'PX', 'NF', 'KOORD', 'SIMPX', 'KOORD', 'VF', 'LK', 'MF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'PIAT', 'NN', 'VVPP', 'PDS', 'VMFIN', 'PPER', 'APPR', 'PPER', 'ADV', 'ADV', 'VVINF', 'APPRART', 'PIS', 'ART', 'NE', 'APPR', 'NE', 'PRELS', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPRART', 'NN', 'CARD', 'NN', 'NN', 'VAFIN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NN', 'VAFIN', 'ADV', 'ADV', 'PTKNEG', 'PTKNEG', 'ADV', 'ADV', 'ADJD', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN', 'NN', 'CARD', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'ADJD', 'ADV', 'ADV', 'ADJD', 'PPER', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ART', 'NN', 'KON', 'ART', 'NN', 'NE', 'VAFIN', 'ADV', 'APPRART', 'NN', 'ADV', 'KON', 'PPER', 'VVFIN', 'ART', 'TRUNC', 'KON', 'NN', 'KON', 'ART', 'NN', 'KON', 'ART', 'NN', 'VVFIN', 'ADV', 'CARD', 'CARD', 'NN', 'KON', 'ART', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'VAFIN', 'ART', 'NN', 'NE', 'ADV', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'VVFIN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 127), 'span': (112, 127), 'left siblings': ['SIMPX', 'SIMPX', 'NX', 'NF', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'ADJX', 'ADVX', 'ADJX', 'SIMPX', 'KOORD', 'VF', 'LK', 'PX', 'NF', 'KOORD', 'SIMPX', 'KOORD', 'VF', 'LK', 'MF'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen)
		(NX zum einen das maritimhotel in hannover)
		(NF welches am bahnhof liegt und zum zentrum funfzehn minuten laufzeit hat)
		(SIMPX es gibt dort eine cafeteria garage)
		(SIMPX ist naturlich dann nicht nicht unbedingt so wichtig)
		(SIMPX einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(NX dann das hotel luisenhof)
		(ADJX funf minuten vom bahnhof entfernt)
		(ADVX also)
		(ADJX etwas schneller)
		(SIMPX es gibt eine bar ein restaurant und ebenfalls eine garage)
		(KOORD und)
		(VF das hotel loccumerhof)
		(LK ist)
		(PX gleich beim bahnhof)
		(NF anscheinend)
		(KOORD und)
		(SIMPX es gibt ein schwimm und dampfbad und eine pianobar)
		(KOORD und)
		(VF das einzelzimmer)
		(LK kostet)
		[01;36m(MF[00m
			(MF allerdings zweihundert achtundvierzig mark und das doppelzimmer hundert dreiundvierzig mark)
			(PX vom zeitangebot)[01;36m)[00m
		(LK ware)
		(MF
			[01;31m(NX[00m
				(ART das)
				(NX hotel loccumerhof)[01;31m)[00m
			(ADVX anscheinend)
			(ADJX besonders gunstig))
		(NF weil es gleich beim bahnhof liegt)))
Step:PP Attachment
{'subtrees': ['MF', 'PX'], 'family': ['SIMPX', 'SIMPX', 'NX', 'NF', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'ADJX', 'ADVX', 'ADJX', 'SIMPX', 'KOORD', 'VF', 'LK', 'PX', 'NF', 'KOORD', 'SIMPX', 'KOORD', 'VF', 'LK', 'MF', 'LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'CARD', 'CARD', 'NN', 'KON', 'ART', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN'), 'right siblings': [(LK (VXFIN (VAFIN ware))), (MF (NX (ART das) (NX (NX (NN hotel)) (NX (NE loccumerhof)))) (ADVX (ADV anscheinend)) (ADJX (ADVX (ADV besonders)) (ADJD gunstig))), (NF (SIMPX (C (KOUS weil)) (MF (NX (PPER es)) (ADVX (ADV gleich)) (NX (APPRART beim) (NX (NN bahnhof)))) (VC (VXFIN (VVFIN liegt)))))], 'left siblings': [(SIMPX (VF (ADVX (ADV jetzt))) (LK (VXFIN (VAFIN habe))) (MF (NX (PPER ich)) (NX (PRF mir)) (ADVX (ADV auch)) (ADVX (ADV schon)) (NX (PIAT einige) (NN hotelangebote))) (VC (VXINF (VVPP herausgesucht)))), (SIMPX (VF (NX (PDS die))) (LK (VXFIN (VMFIN mus))) (MF (NX (PPER ich)) (PX (APPR mit) (NX (PPER ihnen))) (ADVX (ADV jetzt)) (ADVX (ADV noch))) (VC (VXINF (VVINF absprechen)))), (NX (PX (APPRART zum) (NX (PIS einen))) (NX (NX (ART das) (NE maritimhotel)) (PX (APPR in) (NX (NE hannover))))), (NF (R (C (NX (PRELS welches))) (FKOORD (MF (PX (APPRART am) (NX (NN bahnhof)))) (VC (VXFIN (VVFIN liegt))) (KON und) (MVC (MF (MF (PX (APPRART zum) (NX (NN zentrum))) (NX (ADJX (CARD funfzehn)) (NN minuten))) (VF (NX (NN laufzeit)))) (VC (VXFIN (VAFIN hat))))))), (SIMPX (VF (NX (PPER es))) (LK (VXFIN (VVFIN gibt))) (MF (ADVX (ADV dort)) (NX (NX (ART eine) (NN cafeteria)) (NX (NN garage))))), (SIMPX (LK (VXFIN (VAFIN ist))) (MF (ADVX (ADV naturlich)) (ADVX (ADV dann)) (ADVX (PTKNEG nicht)) (ADVX (PTKNEG nicht)) (ADVX (ADV unbedingt)) (ADJX (ADVX (ADV so)) (ADJD wichtig)))), (SIMPX (VF (NX (NN einzelzimmer))) (LK (VXFIN (VVFIN kostet))) (NX (MF (NX (ADJX (CARD hundert) (CARD einundfunfzig)) (NN mark)) (NX (NX (NN doppelzimmer)) (NX (ADJX (CARD hundert) (CARD funf)) (NN mark)))))), (NX (ADVX (ADV dann)) (NX (ART das) (NX (NX (NN hotel)) (NX (NE luisenhof))))), (ADJX (NX (NX (ADJX (CARD funf)) (NN minuten)) (PX (APPRART vom) (NX (NN bahnhof)))) (ADJD entfernt)), (ADVX (ADV also)), (ADJX (ADVX (ADV etwas)) (ADJD schneller)), (SIMPX (VF (NX (PPER es))) (LK (VXFIN (VVFIN gibt))) (MF (NX (MF (NX (NX (ART eine) (NN bar)) (NX (ART ein) (NN restaurant)))) (KON und) (NX (ADVX (ADV ebenfalls)) (NX (ART eine) (NN garage)))))), (KOORD (KON und)), (VF (NX (ART das) (NX (NX (NN hotel)) (NX (NE loccumerhof))))), (LK (VXFIN (VAFIN ist))), (PX (MF (ADVX (ADV gleich)) (PX (APPRART beim) (NX (NN bahnhof))))), (NF (ADVX (ADV anscheinend))), (KOORD (KON und)), (SIMPX (VF (NX (PPER es))) (LK (VXFIN (VVFIN gibt))) (MF (NX (ART ein) (TRUNC schwimm) (KON und) (NN dampfbad) (KON und) (NX (ART eine) (NN pianobar))))), (KOORD (KON und)), (VF (NX (ART das) (NN einzelzimmer))), (LK (VXFIN (VVFIN kostet)))], 'auto preterminal span': (102, 114), 'span': (102, 114), 'parent': 'TURN', 'label': 'MF', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(SIMPX jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen)
		(NX zum einen das maritimhotel in hannover)
		(NF welches am bahnhof liegt und zum zentrum funfzehn minuten laufzeit hat)
		(SIMPX es gibt dort eine cafeteria garage)
		(SIMPX ist naturlich dann nicht nicht unbedingt so wichtig)
		(SIMPX einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(NX dann das hotel luisenhof)
		(ADJX funf minuten vom bahnhof entfernt)
		(ADVX also)
		(ADJX etwas schneller)
		(SIMPX es gibt eine bar ein restaurant und ebenfalls eine garage)
		(KOORD und)
		(VF das hotel loccumerhof)
		(LK ist)
		(PX gleich beim bahnhof)
		(NF anscheinend)
		(KOORD und)
		(SIMPX es gibt ein schwimm und dampfbad und eine pianobar)
		(KOORD und)
		(VF das einzelzimmer)
		(LK kostet)
		(MF allerdings zweihundert achtundvierzig mark und das doppelzimmer hundert dreiundvierzig mark vom zeitangebot)
		(LK ware)
		(MF
			[01;31m(NX[00m
				(ART das)
				(NX hotel loccumerhof)[01;31m)[00m
			(ADVX anscheinend)
			(ADJX besonders gunstig))
		(NF weil es gleich beim bahnhof liegt)))
Step:UNSET remove
{'subtrees': ['ART', 'NX'], 'family': ['NX', 'ADVX', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'NE', 'ADV', 'ADV', 'ADJD'), 'right siblings': ['ADVX', 'ADJX'], 'parent': 'MF', 'auto preterminal span': (115, 121), 'span': (115, 118), 'left siblings': [], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP jetzt habe ich mir auch schon einige hotelangebote herausgesucht die mus ich mit ihnen jetzt noch absprechen zum einen das maritimhotel in hannover welches am bahnhof liegt und zum zentrum funfzehn minuten laufzeit hat es gibt dort eine cafeteria garage ist naturlich dann nicht nicht unbedingt so wichtig einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark dann das hotel luisenhof funf minuten vom bahnhof entfernt also etwas schneller es gibt eine bar ein restaurant und ebenfalls eine garage und das hotel loccumerhof ist gleich beim bahnhof anscheinend und es gibt ein schwimm und dampfbad und eine pianobar und das einzelzimmer kostet allerdings zweihundert achtundvierzig mark und das doppelzimmer hundert dreiundvierzig mark vom zeitangebot ware das hotel loccumerhof anscheinend besonders gunstig weil es gleich beim bahnhof liegt)

Sentence 556:
0 Initial errors
0 on fringe, 0 iterations

Sentence 557:
0 Initial errors
0 on fringe, 0 iterations

Sentence 558:
3 Initial errors
0 on fringe, 1 iterations
3 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM guten tag)
		(DM frau heinicke)
		(SIMPX
			(VF wie wir bereits ausgemacht haben)
			(LK wollten)
			(MF
				(NX wir)
				[01;36m(PX[00m
					[01;31m(PX[00m
						(APPR auf)
						[01;33m(NX[00m (NX eine eineinhalbtagige geschaftsreise)[01;31m)[00m
					(PX nach hamburg)[01;36m)[00m) [01;33mNX)[00m
			(VC fahren))))
Step:PP Attachment
{'new_parent': 'PX', 'new_family': ['APPR', 'NX', 'PX'], 'mover info': [('PX', (15, 17))], 'old_family': ['NX', 'PX', 'PX'], 'start left siblings': ['NX', 'PX'], 'auto preterminals': ('PPER', 'APPR', 'ART', 'ADJA', 'NN', 'APPR', 'NE'), 'start right siblings': [], 'end left siblings': ['APPR', 'NX'], 'auto preterminal span': (10, 17), 'adding node already present': False, 'movers': ['PX'], 'old_parent': 'MF', 'added and moved': True, 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'NX'}
(TOP guten tag frau heinicke wie wir bereits ausgemacht haben wollten wir auf eine eineinhalbtagige geschaftsreise nach hamburg fahren)

Sentence 559:
9 Initial errors
0 on fringe, 7 iterations
2 Error:Single Word Phrase
2 Error:UNSET move
1 Error:Single Word Phrase
1 Error:Clause Attachment
1 Error:Clause Attachment
1 Error:Clause Attachment
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		[01;31m(P[00m [01;33m(P[00m
			(SIMPX da wurde mir der letzte termin am besten passen)
			(KOUS weil)
			[01;31m(SIMPX[00m
				(SIMPX am vierzehnten und funfzehnten ist eine messe) [01;33mP)[00m
				[01;36m(KOORD[00m
					(KON und)[01;36m)[00m
				[01;31m(SIMPX[00m
					(VF in der letzten januarwoche)
					(LK ist)
					[01;31m(MF[00m
						[01;36m(MF[00m
							(PX bei mir)
							(PX bis auf montag)
							(ADVX eigentlich)
							(NX alles)[01;36m)[00m
						[01;36m(VC[00m [01;31m(ADJX[00m
							(ADJD frei)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(DM also)
		(SIMPX da wurde ich doch sagen das wir am mittwoch und donnerstag nach hannover fahren)))
Step:Single Word Phrase
{'family': ['PX', 'PX', 'ADVX', 'NX', 'VC'], 'auto preterminal span': (31, 32), 'span': (31, 32), 'subtrees': ['ADJD'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('ADJD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'VC')}
(TOP
	(TURN
		(DM ja)
		[01;31m(P[00m [01;33m(P[00m
			(SIMPX da wurde mir der letzte termin am besten passen)
			(KOUS weil)
			[01;31m(SIMPX[00m
				(SIMPX am vierzehnten und funfzehnten ist eine messe) [01;33mP)[00m
				[01;36m(KOORD[00m
					(KON und)[01;36m)[00m
				[01;31m(SIMPX[00m
					(VF in der letzten januarwoche)
					(LK ist)
					[01;31m(MF[00m
						[01;36m(MF[00m
							(PX bei mir)
							(PX bis auf montag)
							(ADVX eigentlich)
							(NX alles)[01;36m)[00m
						(VC frei)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(DM also)
		(SIMPX da wurde ich doch sagen das wir am mittwoch und donnerstag nach hannover fahren)))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'VC'], 'mover info': [('VC', (31, 32))], 'old_family': ['PX', 'PX', 'ADVX', 'NX', 'VC'], 'start left siblings': ['PX', 'PX', 'ADVX', 'NX'], 'auto preterminals': ('APPR', 'ART', 'ADJA', 'NN', 'VAFIN', 'APPR', 'PPER', 'APPR', 'APPR', 'NN', 'ADV', 'PIS', 'ADJD'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (19, 32), 'movers': ['VC'], 'old_parent': 'MF', 'POS confusion': ('ADJD', 'ADJD'), 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		[01;31m(P[00m [01;33m(P[00m
			(SIMPX da wurde mir der letzte termin am besten passen)
			(KOUS weil)
			[01;31m(SIMPX[00m
				(SIMPX am vierzehnten und funfzehnten ist eine messe) [01;33mP)[00m
				[01;36m(KOORD[00m
					(KON und)[01;36m)[00m
				[01;31m(SIMPX[00m
					(VF in der letzten januarwoche)
					(LK ist)
					(MF bei mir bis auf montag eigentlich alles)
					(VC frei)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(DM also)
		(SIMPX da wurde ich doch sagen das wir am mittwoch und donnerstag nach hannover fahren)))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['SIMPX', 'KOORD', 'SIMPX'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON',), 'right siblings': [(SIMPX (VF (PX (APPR in) (NX (ART der) (ADJX (ADJA letzten)) (NN januarwoche)))) (LK (VXFIN (VAFIN ist))) (MF (PX (APPR bei) (NX (PPER mir))) (PX (APPR bis) (PX (APPR auf) (NX (NN montag)))) (ADVX (ADV eigentlich)) (NX (PIS alles))) (VC (ADJD frei)))], 'left siblings': [(SIMPX (VF (PX (APPRART am) (NX (NX (NN vierzehnten)) (KON und) (NX (NN funfzehnten))))) (LK (VXFIN (VAFIN ist))) (MF (NX (ART eine) (NN messe))))], 'auto preterminal span': (18, 19), 'span': (18, 19), 'parent': 'SIMPX', 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		[01;31m(P[00m [01;33m(P[00m
			(SIMPX da wurde mir der letzte termin am besten passen)
			(KOUS weil)
			[01;31m(SIMPX[00m
				(SIMPX am vierzehnten und funfzehnten ist eine messe) [01;33mP)[00m
				(KOORD und)
				[01;31m(SIMPX[00m
					(VF in der letzten januarwoche)
					(LK ist)
					(MF bei mir bis auf montag eigentlich alles)
					(VC frei)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(DM also)
		(SIMPX da wurde ich doch sagen das wir am mittwoch und donnerstag nach hannover fahren)))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'KOUS', 'SIMPX'], 'family': ['DM', 'P', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADV', 'VAFIN', 'PPER', 'ART', 'ADJA', 'NN', 'PTKA', 'ADJD', 'VVINF', 'KOUS', 'APPRART', 'NN', 'KON', 'NN', 'VAFIN', 'ART', 'NN', 'KON', 'APPR', 'ART', 'ADJA', 'NN', 'VAFIN', 'APPR', 'PPER', 'APPR', 'APPR', 'NN', 'ADV', 'PIS', 'ADJD', 'ADV', 'ADV', 'VAFIN', 'PPER', 'ADV', 'VVINF', 'KOUS', 'PPER', 'APPRART', 'NN', 'KON', 'NN', 'APPR', 'NE', 'VVFIN'), 'right siblings': ['DM', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 47), 'span': (1, 32), 'left siblings': ['DM'], 'label': 'P', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		[01;33m(P[00m (SIMPX da wurde mir der letzte termin am besten passen)
		(KOUS weil)
		[01;31m(SIMPX[00m
			(SIMPX am vierzehnten und funfzehnten ist eine messe) [01;33mP)[00m
			(KOORD und)
			[01;31m(SIMPX[00m
				(VF in der letzten januarwoche)
				(LK ist)
				(MF bei mir bis auf montag eigentlich alles)
				(VC frei)[01;31m)[00m[01;31m)[00m
		(DM also)
		(SIMPX da wurde ich doch sagen das wir am mittwoch und donnerstag nach hannover fahren)))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'KOORD', 'SIMPX'], 'family': ['DM', 'SIMPX', 'KOUS', 'SIMPX', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADV', 'VAFIN', 'PPER', 'ART', 'ADJA', 'NN', 'PTKA', 'ADJD', 'VVINF', 'KOUS', 'APPRART', 'NN', 'KON', 'NN', 'VAFIN', 'ART', 'NN', 'KON', 'APPR', 'ART', 'ADJA', 'NN', 'VAFIN', 'APPR', 'PPER', 'APPR', 'APPR', 'NN', 'ADV', 'PIS', 'ADJD', 'ADV', 'ADV', 'VAFIN', 'PPER', 'ADV', 'VVINF', 'KOUS', 'PPER', 'APPRART', 'NN', 'KON', 'NN', 'APPR', 'NE', 'VVFIN'), 'right siblings': ['DM', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 47), 'span': (11, 32), 'left siblings': ['DM', 'SIMPX', 'KOUS'], 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		[01;36m(P[00m
			(SIMPX da wurde mir der letzte termin am besten passen)
			(KOUS weil)
			(SIMPX am vierzehnten und funfzehnten ist eine messe)[01;36m)[00m
		(KOORD und)
		[01;31m(SIMPX[00m
			(VF in der letzten januarwoche)
			(LK ist)
			(MF bei mir bis auf montag eigentlich alles)
			(VC frei)[01;31m)[00m
		(DM also)
		(SIMPX da wurde ich doch sagen das wir am mittwoch und donnerstag nach hannover fahren)))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'KOUS', 'SIMPX'], 'family': ['DM', 'P', 'KOORD', 'SIMPX', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'ART', 'ADJA', 'NN', 'PTKA', 'ADJD', 'VVINF', 'KOUS', 'APPRART', 'NN', 'KON', 'NN', 'VAFIN', 'ART', 'NN'), 'right siblings': [(KOORD (KON und)), (SIMPX (VF (PX (APPR in) (NX (ART der) (ADJX (ADJA letzten)) (NN januarwoche)))) (LK (VXFIN (VAFIN ist))) (MF (PX (APPR bei) (NX (PPER mir))) (PX (APPR bis) (PX (APPR auf) (NX (NN montag)))) (ADVX (ADV eigentlich)) (NX (PIS alles))) (VC (ADJD frei))), (DM (ADVX (ADV also))), (SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VAFIN wurde))) (MF (NX (PPER ich)) (ADVX (ADV doch))) (VC (VXINF (VVINF sagen))) (NF (SIMPX (C (KOUS das)) (MF (NX (PPER wir)) (PX (APPRART am) (NX (NX (NN mittwoch)) (KON und) (NX (NN donnerstag)))) (PX (APPR nach) (NX (NE hannover)))) (VC (VXFIN (VVFIN fahren))))))], 'left siblings': [(DM (PTKANT ja))], 'auto preterminal span': (1, 18), 'span': (1, 18), 'parent': 'TURN', 'label': 'P', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(P da wurde mir der letzte termin am besten passen weil am vierzehnten und funfzehnten ist eine messe)
		(KOORD und)
		[01;31m(SIMPX[00m
			(VF in der letzten januarwoche)
			(LK ist)
			(MF bei mir bis auf montag eigentlich alles)
			(VC frei)[01;31m)[00m
		(DM also)
		(SIMPX da wurde ich doch sagen das wir am mittwoch und donnerstag nach hannover fahren)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['DM', 'P', 'KOORD', 'SIMPX', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADV', 'VAFIN', 'PPER', 'ART', 'ADJA', 'NN', 'PTKA', 'ADJD', 'VVINF', 'KOUS', 'APPRART', 'NN', 'KON', 'NN', 'VAFIN', 'ART', 'NN', 'KON', 'APPR', 'ART', 'ADJA', 'NN', 'VAFIN', 'APPR', 'PPER', 'APPR', 'APPR', 'NN', 'ADV', 'PIS', 'ADJD', 'ADV', 'ADV', 'VAFIN', 'PPER', 'ADV', 'VVINF', 'KOUS', 'PPER', 'APPRART', 'NN', 'KON', 'NN', 'APPR', 'NE', 'VVFIN'), 'right siblings': ['DM', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 47), 'span': (19, 32), 'left siblings': ['DM', 'P', 'KOORD'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ja da wurde mir der letzte termin am besten passen weil am vierzehnten und funfzehnten ist eine messe und in der letzten januarwoche ist bei mir bis auf montag eigentlich alles frei also da wurde ich doch sagen das wir am mittwoch und donnerstag nach hannover fahren)

Sentence 560:
21 Initial errors
0 on fringe, 18 iterations
3 Error:Co-ordination
2 Error:Different label
1 Error:UNSET add
1 Error:Single Word Phrase
1 Error:PP Attachment
1 Error:Unary
1 Error:Unary
1 Error:Unary
1 Error:Clause Attachment
1 Error:NP Internal Structure
1 Error:UNSET remove
1 Error:PP Attachment
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:Clause Attachment
1 Error:UNSET add
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		[01;33m(SIMPX[00m (SIMPX ich habe mir da einige zugverbindungen und fluge geben lassen)
		[01;31m(SIMPX[00m
			(SIMPX
				(KOORD und)
				[01;36m(SIMPX[00m
					(VF der zug)
					(LK fahrt)
					(MF stundlich ab vier uhr sechsundfunfzig am morgen)[01;36m)[00m) [01;33mSIMPX)[00m
			[01;36m(SIMPX[00m
				[01;36m(KOORD[00m
					(KON und)[01;36m)[00m
				[01;31m(SIMPX[00m
					(VF er)
					(LK braucht)
					[01;31m(MF[00m
						(NX viereinhalb stunden)
						[01;36m(PX[00m
							[01;36m(NF[00m
								(PX bis hannover)
								[01;36m(NF[00m
									(PX
										(APPR von)
										(NX munchen)
										(APZR aus))[01;36m)[00m[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(KOORD und)
			(VF das flugzeug)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK wurde)
					(MF
						[01;31m(ADJX[00m
							(ADJX stundlich)
							(PX ab sieben uhr bis achtzehn uhr)[01;31m)[00m)
					[01;36m(VC[00m
						(VXINF
							(VVINF fahren))[01;36m)[00m
					[01;31m(VC[00m
						(VXINF
							(VVINF fliegen))[01;31m)[00m[01;31m)[00m [01;33mSIMPX)[00m
				[01;36m(SIMPX[00m
					(KON und)
					[01;36m(SIMPX[00m [01;31m(LKM[00m
						(LK braucht)
						(MF siebzig minuten)[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX
			(VF ich)
			(LK weis)
			(MF nicht)
			(NF
				(SIMPX
					(C wie)
					(MF
						[01;36m(NX[00m
							(NX sie)
							(NX es)[01;36m)[00m
						(NX sich)
						(NX das))
					(VC vorgestellt haben))))
		(SIMPX aber ich wurde doch eher fur einen flug pladieren)))
Step:Co-ordination
{'new_parent': 'TURN', 'new_family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'mover info': [('SIMPX', (11, 22))], 'old_family': ['SIMPX', 'KON', 'SIMPX'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'PPER', 'VAFIN', 'PRF', 'ADV', 'PIAT', 'NN', 'KON', 'NN', 'VVINF', 'VVINF', 'KON', 'ART', 'NN', 'VVFIN', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'APPRART', 'NN', 'KON', 'PPER', 'VVFIN', 'CARD', 'NN', 'APPR', 'NE', 'APPR', 'NE', 'APZR', 'KON', 'ART', 'NN', 'VAFIN', 'ADJD', 'APPR', 'CARD', 'NN', 'APPR', 'CARD', 'NN', 'VVINF', 'VVINF', 'KON', 'VVFIN', 'CARD', 'NN', 'PPER', 'VVFIN', 'PTKNEG', 'KOUS', 'PPER', 'PPER', 'PRF', 'PDS', 'VVPP', 'VAFIN', 'KON', 'PPER', 'VAFIN', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'VVINF'), 'start right siblings': ['KON', 'SIMPX'], 'end left siblings': ['DM', 'SIMPX'], 'auto preterminal span': (0, 68), 'adding node already present': False, 'movers': ['SIMPX'], 'old_parent': 'SIMPX', 'added and moved': True, 'end right siblings': ['SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'classified_type': 'Co-ordination', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(SIMPX ich habe mir da einige zugverbindungen und fluge geben lassen)
			(SIMPX
				(KOORD und)
				[01;36m(SIMPX[00m
					(VF der zug)
					(LK fahrt)
					(MF stundlich ab vier uhr sechsundfunfzig am morgen)[01;36m)[00m))
		(SIMPX
			[01;36m(KOORD[00m
				(KON und)[01;36m)[00m
			[01;31m(SIMPX[00m
				(VF er)
				(LK braucht)
				[01;31m(MF[00m
					(NX viereinhalb stunden)
					[01;36m(PX[00m
						[01;36m(NF[00m
							(PX bis hannover)
							[01;36m(NF[00m
								(PX
									(APPR von)
									(NX munchen)
									(APZR aus))[01;36m)[00m[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(KOORD und)
			(VF das flugzeug)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK wurde)
					(MF
						[01;31m(ADJX[00m
							(ADJX stundlich)
							(PX ab sieben uhr bis achtzehn uhr)[01;31m)[00m)
					[01;36m(VC[00m
						(VXINF
							(VVINF fahren))[01;36m)[00m
					[01;31m(VC[00m
						(VXINF
							(VVINF fliegen))[01;31m)[00m[01;31m)[00m [01;33mSIMPX)[00m
				[01;36m(SIMPX[00m
					(KON und)
					[01;36m(SIMPX[00m [01;31m(LKM[00m
						(LK braucht)
						(MF siebzig minuten)[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX
			(VF ich)
			(LK weis)
			(MF nicht)
			(NF
				(SIMPX
					(C wie)
					(MF
						[01;36m(NX[00m
							(NX sie)
							(NX es)[01;36m)[00m
						(NX sich)
						(NX das))
					(VC vorgestellt haben))))
		(SIMPX aber ich wurde doch eher fur einen flug pladieren)))
Step:Different label
{'family': ['LKMVC', 'KON', 'SIMPX'], 'auto preterminal span': (46, 49), 'span': (46, 49), 'subtrees': ['LK', 'MF'], 'parent': 'FKOORD', 'over_word': False, 'auto preterminals': ('VVFIN', 'CARD', 'NN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('LKM', 'SIMPX')}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(SIMPX ich habe mir da einige zugverbindungen und fluge geben lassen)
			(SIMPX
				(KOORD und)
				[01;36m(SIMPX[00m
					(VF der zug)
					(LK fahrt)
					(MF stundlich ab vier uhr sechsundfunfzig am morgen)[01;36m)[00m))
		(SIMPX
			[01;36m(KOORD[00m
				(KON und)[01;36m)[00m
			[01;31m(SIMPX[00m
				(VF er)
				(LK braucht)
				[01;31m(MF[00m
					(NX viereinhalb stunden)
					[01;36m(PX[00m
						[01;36m(NF[00m
							(PX bis hannover)
							[01;36m(NF[00m
								(PX
									(APPR von)
									(NX munchen)
									(APZR aus))[01;36m)[00m[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(KOORD und)
			(VF das flugzeug)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK wurde)
					(MF
						[01;31m(ADJX[00m
							(ADJX stundlich)
							(PX ab sieben uhr bis achtzehn uhr)[01;31m)[00m)
					[01;36m(VC[00m
						(VXINF
							(VVINF fahren))[01;36m)[00m
					[01;31m(VC[00m
						(VXINF
							(VVINF fliegen))[01;31m)[00m[01;31m)[00m [01;33mSIMPX)[00m
				[01;36m(SIMPX[00m
					(KON und)
					(SIMPX braucht siebzig minuten)[01;36m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX
			(VF ich)
			(LK weis)
			(MF nicht)
			(NF
				(SIMPX
					(C wie)
					(MF
						[01;36m(NX[00m
							(NX sie)
							(NX es)[01;36m)[00m
						(NX sich)
						(NX das))
					(VC vorgestellt haben))))
		(SIMPX aber ich wurde doch eher fur einen flug pladieren)))
Step:UNSET add
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['KOORD', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'VVFIN', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'APPRART', 'NN'), 'right siblings': [], 'left siblings': [(KOORD (KON und))], 'auto preterminal span': (12, 22), 'span': (12, 22), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich habe mir da einige zugverbindungen und fluge geben lassen und der zug fahrt stundlich ab vier uhr sechsundfunfzig am morgen)
		(SIMPX
			[01;36m(KOORD[00m
				(KON und)[01;36m)[00m
			[01;31m(SIMPX[00m
				(VF er)
				(LK braucht)
				[01;31m(MF[00m
					(NX viereinhalb stunden)
					[01;36m(PX[00m
						[01;36m(NF[00m
							(PX bis hannover)
							[01;36m(NF[00m
								(PX
									(APPR von)
									(NX munchen)
									(APZR aus))[01;36m)[00m[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(KOORD und)
			(VF das flugzeug)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK wurde)
					(MF
						[01;31m(ADJX[00m
							(ADJX stundlich)
							(PX ab sieben uhr bis achtzehn uhr)[01;31m)[00m)
					[01;36m(VC[00m
						(VXINF
							(VVINF fahren))[01;36m)[00m
					[01;31m(VC[00m
						(VXINF
							(VVINF fliegen))[01;31m)[00m[01;31m)[00m [01;33mSIMPX)[00m
				[01;36m(SIMPX[00m
					(KON und)
					(SIMPX braucht siebzig minuten)[01;36m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX
			(VF ich)
			(LK weis)
			(MF nicht)
			(NF
				(SIMPX
					(C wie)
					(MF
						[01;36m(NX[00m
							(NX sie)
							(NX es)[01;36m)[00m
						(NX sich)
						(NX das))
					(VC vorgestellt haben))))
		(SIMPX aber ich wurde doch eher fur einen flug pladieren)))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['KOORD', 'SIMPX'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON',), 'right siblings': [(SIMPX (VF (NX (PPER er))) (LK (VXFIN (VVFIN braucht))) (MF (NX (ADJX (CARD viereinhalb)) (NN stunden)) (PX (APPR bis) (NX (NE hannover))) (PX (APPR von) (NX (NE munchen)) (APZR aus))))], 'left siblings': [], 'auto preterminal span': (22, 23), 'span': (22, 23), 'parent': 'SIMPX', 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich habe mir da einige zugverbindungen und fluge geben lassen und der zug fahrt stundlich ab vier uhr sechsundfunfzig am morgen)
		(SIMPX
			(KOORD und)
			[01;31m(SIMPX[00m
				(VF er)
				(LK braucht)
				[01;31m(MF[00m
					(NX viereinhalb stunden)
					[01;36m(PX[00m
						[01;36m(NF[00m
							(PX bis hannover)
							[01;36m(NF[00m
								(PX
									(APPR von)
									(NX munchen)
									(APZR aus))[01;36m)[00m[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(KOORD und)
			(VF das flugzeug)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK wurde)
					(MF
						[01;31m(ADJX[00m
							(ADJX stundlich)
							(PX ab sieben uhr bis achtzehn uhr)[01;31m)[00m)
					[01;36m(VC[00m
						(VXINF
							(VVINF fahren))[01;36m)[00m
					[01;31m(VC[00m
						(VXINF
							(VVINF fliegen))[01;31m)[00m[01;31m)[00m [01;33mSIMPX)[00m
				[01;36m(SIMPX[00m
					(KON und)
					(SIMPX braucht siebzig minuten)[01;36m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX
			(VF ich)
			(LK weis)
			(MF nicht)
			(NF
				(SIMPX
					(C wie)
					(MF
						[01;36m(NX[00m
							(NX sie)
							(NX es)[01;36m)[00m
						(NX sich)
						(NX das))
					(VC vorgestellt haben))))
		(SIMPX aber ich wurde doch eher fur einen flug pladieren)))
Step:PP Attachment
{'subtrees': ['PX', 'PX'], 'family': ['NX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'NE', 'APPR', 'NE', 'APZR'), 'right siblings': [], 'left siblings': [(NX (ADJX (CARD viereinhalb)) (NN stunden))], 'auto preterminal span': (27, 32), 'span': (27, 32), 'parent': 'MF', 'label': 'NF', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich habe mir da einige zugverbindungen und fluge geben lassen und der zug fahrt stundlich ab vier uhr sechsundfunfzig am morgen)
		(SIMPX
			(KOORD und)
			[01;31m(SIMPX[00m
				(VF er)
				(LK braucht)
				[01;31m(MF[00m
					(NX viereinhalb stunden)
					[01;36m(PX[00m
						(NF
							(PX bis hannover)
							[01;36m(NF[00m
								(PX
									(APPR von)
									(NX munchen)
									(APZR aus))[01;36m)[00m)[01;36m)[00m[01;31m)[00m[01;31m)[00m)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(KOORD und)
			(VF das flugzeug)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK wurde)
					(MF
						[01;31m(ADJX[00m
							(ADJX stundlich)
							(PX ab sieben uhr bis achtzehn uhr)[01;31m)[00m)
					[01;36m(VC[00m
						(VXINF
							(VVINF fahren))[01;36m)[00m
					[01;31m(VC[00m
						(VXINF
							(VVINF fliegen))[01;31m)[00m[01;31m)[00m [01;33mSIMPX)[00m
				[01;36m(SIMPX[00m
					(KON und)
					(SIMPX braucht siebzig minuten)[01;36m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX
			(VF ich)
			(LK weis)
			(MF nicht)
			(NF
				(SIMPX
					(C wie)
					(MF
						[01;36m(NX[00m
							(NX sie)
							(NX es)[01;36m)[00m
						(NX sich)
						(NX das))
					(VC vorgestellt haben))))
		(SIMPX aber ich wurde doch eher fur einen flug pladieren)))
Step:Unary
{'subtrees': ['NF'], 'family': ['NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'NE', 'APPR', 'NE', 'APZR'), 'right siblings': [], 'left siblings': [(NX (ADJX (CARD viereinhalb)) (NN stunden))], 'auto preterminal span': (27, 32), 'span': (27, 32), 'parent': 'MF', 'label': 'PX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich habe mir da einige zugverbindungen und fluge geben lassen und der zug fahrt stundlich ab vier uhr sechsundfunfzig am morgen)
		(SIMPX
			(KOORD und)
			[01;31m(SIMPX[00m
				(VF er)
				(LK braucht)
				[01;31m(MF[00m
					(NX viereinhalb stunden)
					(PX
						(NF
							(PX bis hannover)
							[01;36m(NF[00m
								(PX
									(APPR von)
									(NX munchen)
									(APZR aus))[01;36m)[00m))[01;31m)[00m[01;31m)[00m)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(KOORD und)
			(VF das flugzeug)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK wurde)
					(MF
						[01;31m(ADJX[00m
							(ADJX stundlich)
							(PX ab sieben uhr bis achtzehn uhr)[01;31m)[00m)
					[01;36m(VC[00m
						(VXINF
							(VVINF fahren))[01;36m)[00m
					[01;31m(VC[00m
						(VXINF
							(VVINF fliegen))[01;31m)[00m[01;31m)[00m [01;33mSIMPX)[00m
				[01;36m(SIMPX[00m
					(KON und)
					(SIMPX braucht siebzig minuten)[01;36m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX
			(VF ich)
			(LK weis)
			(MF nicht)
			(NF
				(SIMPX
					(C wie)
					(MF
						[01;36m(NX[00m
							(NX sie)
							(NX es)[01;36m)[00m
						(NX sich)
						(NX das))
					(VC vorgestellt haben))))
		(SIMPX aber ich wurde doch eher fur einen flug pladieren)))
Step:Unary
{'subtrees': ['PX'], 'family': ['PX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'NE', 'APZR'), 'right siblings': [], 'left siblings': [(PX (APPR bis) (NX (NE hannover)))], 'auto preterminal span': (29, 32), 'span': (29, 32), 'parent': 'NF', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich habe mir da einige zugverbindungen und fluge geben lassen und der zug fahrt stundlich ab vier uhr sechsundfunfzig am morgen)
		(SIMPX
			(KOORD und)
			[01;31m(SIMPX[00m
				(VF er)
				(LK braucht)
				[01;31m(MF[00m
					(NX viereinhalb stunden)
					(PX bis hannover von munchen aus)[01;31m)[00m[01;31m)[00m)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(KOORD und)
			(VF das flugzeug)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK wurde)
					(MF
						[01;31m(ADJX[00m
							(ADJX stundlich)
							(PX ab sieben uhr bis achtzehn uhr)[01;31m)[00m)
					[01;36m(VC[00m
						(VXINF
							(VVINF fahren))[01;36m)[00m
					[01;31m(VC[00m
						(VXINF
							(VVINF fliegen))[01;31m)[00m[01;31m)[00m [01;33mSIMPX)[00m
				[01;36m(SIMPX[00m
					(KON und)
					(SIMPX braucht siebzig minuten)[01;36m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX
			(VF ich)
			(LK weis)
			(MF nicht)
			(NF
				(SIMPX
					(C wie)
					(MF
						[01;36m(NX[00m
							(NX sie)
							(NX es)[01;36m)[00m
						(NX sich)
						(NX das))
					(VC vorgestellt haben))))
		(SIMPX aber ich wurde doch eher fur einen flug pladieren)))
Step:Unary
{'subtrees': ['VXINF'], 'family': ['LK', 'MF', 'VC', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVINF',), 'right siblings': [(VC (VXINF (VVINF fliegen)))], 'left siblings': [(LK (VXFIN (VAFIN wurde))), (MF (ADJX (ADJX (ADJD stundlich)) (PX (PX (APPR ab) (NX (ADJX (CARD sieben)) (NN uhr))) (PX (APPR bis) (NX (ADJX (CARD achtzehn)) (NN uhr))))))], 'auto preterminal span': (43, 44), 'span': (43, 44), 'parent': 'LKMVC', 'label': 'VC', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich habe mir da einige zugverbindungen und fluge geben lassen und der zug fahrt stundlich ab vier uhr sechsundfunfzig am morgen)
		(SIMPX
			(KOORD und)
			[01;31m(SIMPX[00m
				(VF er)
				(LK braucht)
				[01;31m(MF[00m
					(NX viereinhalb stunden)
					(PX bis hannover von munchen aus)[01;31m)[00m[01;31m)[00m)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(KOORD und)
			(VF das flugzeug)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK wurde)
					(MF
						[01;31m(ADJX[00m
							(ADJX stundlich)
							(PX ab sieben uhr bis achtzehn uhr)[01;31m)[00m)
					(VC fahren)
					[01;31m(VC[00m
						(VXINF
							(VVINF fliegen))[01;31m)[00m[01;31m)[00m [01;33mSIMPX)[00m
				[01;36m(SIMPX[00m
					(KON und)
					(SIMPX braucht siebzig minuten)[01;36m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX
			(VF ich)
			(LK weis)
			(MF nicht)
			(NF
				(SIMPX
					(C wie)
					(MF
						[01;36m(NX[00m
							(NX sie)
							(NX es)[01;36m)[00m
						(NX sich)
						(NX das))
					(VC vorgestellt haben))))
		(SIMPX aber ich wurde doch eher fur einen flug pladieren)))
Step:Clause Attachment
{'subtrees': ['KON', 'SIMPX'], 'family': ['LKMVC', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'VVFIN', 'CARD', 'NN'), 'right siblings': [], 'left siblings': [(LKMVC (LK (VXFIN (VAFIN wurde))) (MF (ADJX (ADJX (ADJD stundlich)) (PX (PX (APPR ab) (NX (ADJX (CARD sieben)) (NN uhr))) (PX (APPR bis) (NX (ADJX (CARD achtzehn)) (NN uhr)))))) (VC (VXINF (VVINF fahren))) (VC (VXINF (VVINF fliegen))))], 'auto preterminal span': (45, 49), 'span': (45, 49), 'parent': 'FKOORD', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich habe mir da einige zugverbindungen und fluge geben lassen und der zug fahrt stundlich ab vier uhr sechsundfunfzig am morgen)
		(SIMPX
			(KOORD und)
			[01;31m(SIMPX[00m
				(VF er)
				(LK braucht)
				[01;31m(MF[00m
					(NX viereinhalb stunden)
					(PX bis hannover von munchen aus)[01;31m)[00m[01;31m)[00m)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(KOORD und)
			(VF das flugzeug)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK wurde)
					(MF
						[01;31m(ADJX[00m
							(ADJX stundlich)
							(PX ab sieben uhr bis achtzehn uhr)[01;31m)[00m)
					(VC fahren)
					[01;31m(VC[00m
						(VXINF
							(VVINF fliegen))[01;31m)[00m[01;31m)[00m [01;33mSIMPX)[00m
				(SIMPX und braucht siebzig minuten)[01;31m)[00m[01;31m)[00m
		(SIMPX
			(VF ich)
			(LK weis)
			(MF nicht)
			(NF
				(SIMPX
					(C wie)
					(MF
						[01;36m(NX[00m
							(NX sie)
							(NX es)[01;36m)[00m
						(NX sich)
						(NX das))
					(VC vorgestellt haben))))
		(SIMPX aber ich wurde doch eher fur einen flug pladieren)))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['NX', 'NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'PPER'), 'right siblings': [(NX (PRF sich)), (NX (PDS das))], 'left siblings': [], 'auto preterminal span': (53, 55), 'span': (53, 55), 'parent': 'MF', 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich habe mir da einige zugverbindungen und fluge geben lassen und der zug fahrt stundlich ab vier uhr sechsundfunfzig am morgen)
		(SIMPX
			(KOORD und)
			[01;31m(SIMPX[00m
				(VF er)
				(LK braucht)
				[01;31m(MF[00m
					(NX viereinhalb stunden)
					(PX bis hannover von munchen aus)[01;31m)[00m[01;31m)[00m)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(KOORD und)
			(VF das flugzeug)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK wurde)
					(MF
						[01;31m(ADJX[00m
							(ADJX stundlich)
							(PX ab sieben uhr bis achtzehn uhr)[01;31m)[00m)
					(VC fahren)
					[01;31m(VC[00m
						(VXINF
							(VVINF fliegen))[01;31m)[00m[01;31m)[00m [01;33mSIMPX)[00m
				(SIMPX und braucht siebzig minuten)[01;31m)[00m[01;31m)[00m
		(SIMPX ich weis nicht wie sie es sich das vorgestellt haben)
		(SIMPX aber ich wurde doch eher fur einen flug pladieren)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['KOORD', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'PPER', 'VVFIN', 'CARD', 'NN', 'APPR', 'NE', 'APPR', 'NE', 'APZR'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (22, 32), 'span': (23, 32), 'left siblings': ['KOORD'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich habe mir da einige zugverbindungen und fluge geben lassen und der zug fahrt stundlich ab vier uhr sechsundfunfzig am morgen)
		(SIMPX
			(KOORD und)
			(VF er)
			(LK braucht)
			[01;31m(MF[00m
				(NX viereinhalb stunden)
				(PX bis hannover von munchen aus)[01;31m)[00m)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(KOORD und)
			(VF das flugzeug)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK wurde)
					(MF
						[01;31m(ADJX[00m
							(ADJX stundlich)
							(PX ab sieben uhr bis achtzehn uhr)[01;31m)[00m)
					(VC fahren)
					[01;31m(VC[00m
						(VXINF
							(VVINF fliegen))[01;31m)[00m[01;31m)[00m [01;33mSIMPX)[00m
				(SIMPX und braucht siebzig minuten)[01;31m)[00m[01;31m)[00m
		(SIMPX ich weis nicht wie sie es sich das vorgestellt haben)
		(SIMPX aber ich wurde doch eher fur einen flug pladieren)))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['KOORD', 'VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'PPER', 'VVFIN', 'CARD', 'NN', 'APPR', 'NE', 'APPR', 'NE', 'APZR'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (22, 32), 'span': (25, 32), 'left siblings': ['KOORD', 'VF', 'LK'], 'label': 'MF', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich habe mir da einige zugverbindungen und fluge geben lassen und der zug fahrt stundlich ab vier uhr sechsundfunfzig am morgen)
		(SIMPX und er braucht viereinhalb stunden bis hannover von munchen aus)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(KOORD und)
			(VF das flugzeug)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK wurde)
					(MF
						[01;31m(ADJX[00m
							(ADJX stundlich)
							(PX ab sieben uhr bis achtzehn uhr)[01;31m)[00m)
					(VC fahren)
					[01;31m(VC[00m
						(VXINF
							(VVINF fliegen))[01;31m)[00m[01;31m)[00m [01;33mSIMPX)[00m
				(SIMPX und braucht siebzig minuten)[01;31m)[00m[01;31m)[00m
		(SIMPX ich weis nicht wie sie es sich das vorgestellt haben)
		(SIMPX aber ich wurde doch eher fur einen flug pladieren)))
Step:UNSET remove
{'subtrees': ['KOORD', 'VF', 'FKOORD'], 'family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VAFIN', 'PRF', 'ADV', 'PIAT', 'NN', 'KON', 'NN', 'VVINF', 'VVINF', 'KON', 'ART', 'NN', 'VVFIN', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'APPRART', 'NN', 'KON', 'PPER', 'VVFIN', 'CARD', 'NN', 'APPR', 'NE', 'APPR', 'NE', 'APZR', 'KON', 'ART', 'NN', 'VAFIN', 'ADJD', 'APPR', 'CARD', 'NN', 'APPR', 'CARD', 'NN', 'VVINF', 'VVINF', 'KON', 'VVFIN', 'CARD', 'NN', 'PPER', 'VVFIN', 'PTKNEG', 'KOUS', 'PPER', 'PPER', 'PRF', 'PDS', 'VVPP', 'VAFIN', 'KON', 'PPER', 'VAFIN', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'VVINF'), 'right siblings': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 68), 'span': (32, 49), 'left siblings': ['DM', 'SIMPX', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich habe mir da einige zugverbindungen und fluge geben lassen und der zug fahrt stundlich ab vier uhr sechsundfunfzig am morgen)
		(SIMPX und er braucht viereinhalb stunden bis hannover von munchen aus)
		[01;33m(SIMPX[00m (KOORD und)
		(VF das flugzeug)
		[01;31m(FKOORD[00m
			[01;31m(LKMVC[00m
				(LK wurde)
				(MF
					[01;31m(ADJX[00m
						(ADJX stundlich)
						(PX ab sieben uhr bis achtzehn uhr)[01;31m)[00m)
				(VC fahren)
				[01;31m(VC[00m
					(VXINF
						(VVINF fliegen))[01;31m)[00m[01;31m)[00m [01;33mSIMPX)[00m
			(SIMPX und braucht siebzig minuten)[01;31m)[00m
		(SIMPX ich weis nicht wie sie es sich das vorgestellt haben)
		(SIMPX aber ich wurde doch eher fur einen flug pladieren)))
Step:UNSET remove
{'subtrees': ['LK', 'MF', 'VC', 'VC'], 'family': ['LKMVC', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'ADJD', 'APPR', 'CARD', 'NN', 'APPR', 'CARD', 'NN', 'VVINF', 'VVINF', 'KON', 'VVFIN', 'CARD', 'NN'), 'right siblings': ['SIMPX'], 'parent': 'FKOORD', 'auto preterminal span': (35, 49), 'span': (35, 45), 'left siblings': [], 'label': 'LKMVC', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich habe mir da einige zugverbindungen und fluge geben lassen und der zug fahrt stundlich ab vier uhr sechsundfunfzig am morgen)
		(SIMPX und er braucht viereinhalb stunden bis hannover von munchen aus)
		[01;33m(SIMPX[00m (KOORD und)
		(VF das flugzeug)
		[01;31m(FKOORD[00m
			(LK wurde)
			(MF
				[01;31m(ADJX[00m
					(ADJX stundlich)
					(PX ab sieben uhr bis achtzehn uhr)[01;31m)[00m)
			(VC fahren)
			[01;31m(VC[00m
				(VXINF
					(VVINF fliegen))[01;31m)[00m [01;33mSIMPX)[00m
			(SIMPX und braucht siebzig minuten)[01;31m)[00m
		(SIMPX ich weis nicht wie sie es sich das vorgestellt haben)
		(SIMPX aber ich wurde doch eher fur einen flug pladieren)))
Step:Clause Attachment
{'subtrees': ['LK', 'MF', 'VC', 'VC', 'SIMPX'], 'family': ['DM', 'SIMPX', 'SIMPX', 'KOORD', 'VF', 'FKOORD', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VAFIN', 'PRF', 'ADV', 'PIAT', 'NN', 'KON', 'NN', 'VVINF', 'VVINF', 'KON', 'ART', 'NN', 'VVFIN', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'APPRART', 'NN', 'KON', 'PPER', 'VVFIN', 'CARD', 'NN', 'APPR', 'NE', 'APPR', 'NE', 'APZR', 'KON', 'ART', 'NN', 'VAFIN', 'ADJD', 'APPR', 'CARD', 'NN', 'APPR', 'CARD', 'NN', 'VVINF', 'VVINF', 'KON', 'VVFIN', 'CARD', 'NN', 'PPER', 'VVFIN', 'PTKNEG', 'KOUS', 'PPER', 'PPER', 'PRF', 'PDS', 'VVPP', 'VAFIN', 'KON', 'PPER', 'VAFIN', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'VVINF'), 'right siblings': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 68), 'span': (35, 49), 'left siblings': ['DM', 'SIMPX', 'SIMPX', 'KOORD', 'VF'], 'label': 'FKOORD', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich habe mir da einige zugverbindungen und fluge geben lassen und der zug fahrt stundlich ab vier uhr sechsundfunfzig am morgen)
		(SIMPX und er braucht viereinhalb stunden bis hannover von munchen aus)
		[01;36m(SIMPX[00m
			(KOORD und)
			(VF das flugzeug)
			(LK wurde)
			(MF
				[01;31m(ADJX[00m
					(ADJX stundlich)
					(PX ab sieben uhr bis achtzehn uhr)[01;31m)[00m)
			(VC fahren)
			[01;31m(VC[00m
				(VXINF
					(VVINF fliegen))[01;31m)[00m[01;36m)[00m
		(SIMPX und braucht siebzig minuten)
		(SIMPX ich weis nicht wie sie es sich das vorgestellt haben)
		(SIMPX aber ich wurde doch eher fur einen flug pladieren)))
Step:UNSET add
{'subtrees': ['KOORD', 'VF', 'LK', 'MF', 'VC', 'VC'], 'family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'ART', 'NN', 'VAFIN', 'ADJD', 'APPR', 'CARD', 'NN', 'APPR', 'CARD', 'NN', 'VVINF', 'VVINF'), 'right siblings': [(SIMPX (KON und) (SIMPX (LK (VXFIN (VVFIN braucht))) (MF (NX (ADJX (CARD siebzig)) (NN minuten))))), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN weis))) (MF (ADVX (PTKNEG nicht))) (NF (SIMPX (C (KOUS wie)) (MF (NX (NX (PPER sie)) (NX (PPER es))) (NX (PRF sich)) (NX (PDS das))) (VC (VXINF (VVPP vorgestellt)) (VXFIN (VAFIN haben)))))), (SIMPX (KOORD (KON aber)) (VF (NX (PPER ich))) (LK (VXFIN (VAFIN wurde))) (MF (ADVX (ADV doch)) (ADVX (ADV eher)) (PX (APPR fur) (NX (ART einen) (NN flug)))) (VC (VXINF (VVINF pladieren))))], 'left siblings': [(DM (PTKANT ja)), (SIMPX (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VAFIN habe))) (MF (NX (PRF mir)) (ADVX (ADV da)) (NX (PIAT einige) (NX (NX (NN zugverbindungen)) (KON und) (NX (NN fluge))))) (VC (VXINF (VVINF geben)) (VXINF (VVINF lassen)))) (SIMPX (KOORD (KON und)) (SIMPX (VF (NX (ART der) (NN zug))) (LK (VXFIN (VVFIN fahrt))) (MF (ADJX (ADJX (ADJD stundlich)) (PX (PX (APPR ab) (NX (NX (ADJX (CARD vier)) (NN uhr)) (ADJX (CARD sechsundfunfzig)))) (PX (APPRART am) (NX (NN morgen))))))))), (SIMPX (KOORD (KON und)) (VF (NX (PPER er))) (LK (VXFIN (VVFIN braucht))) (NX (ADJX (CARD viereinhalb)) (NN stunden)) (PX (NF (PX (APPR bis) (NX (NE hannover))) (NF (PX (APPR von) (NX (NE munchen)) (APZR aus))))))], 'auto preterminal span': (32, 45), 'span': (32, 45), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich habe mir da einige zugverbindungen und fluge geben lassen und der zug fahrt stundlich ab vier uhr sechsundfunfzig am morgen)
		(SIMPX und er braucht viereinhalb stunden bis hannover von munchen aus)
		(SIMPX
			(KOORD und)
			(VF das flugzeug)
			(LK wurde)
			(MF
				[01;31m(ADJX[00m
					(ADJX stundlich)
					(PX ab sieben uhr bis achtzehn uhr)[01;31m)[00m)
			(VC fahren)
			[01;31m(VC[00m
				(VXINF
					(VVINF fliegen))[01;31m)[00m)
		(SIMPX und braucht siebzig minuten)
		(SIMPX ich weis nicht wie sie es sich das vorgestellt haben)
		(SIMPX aber ich wurde doch eher fur einen flug pladieren)))
Step:Unary
{'subtrees': ['ADJX', 'PX'], 'family': ['ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJD', 'APPR', 'CARD', 'NN', 'APPR', 'CARD', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (36, 43), 'span': (36, 43), 'left siblings': [], 'label': 'ADJX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich habe mir da einige zugverbindungen und fluge geben lassen und der zug fahrt stundlich ab vier uhr sechsundfunfzig am morgen)
		(SIMPX und er braucht viereinhalb stunden bis hannover von munchen aus)
		(SIMPX
			(KOORD und)
			(VF das flugzeug)
			(LK wurde)
			(MF stundlich ab sieben uhr bis achtzehn uhr)
			(VC fahren)
			[01;31m(VC[00m
				(VXINF
					(VVINF fliegen))[01;31m)[00m)
		(SIMPX und braucht siebzig minuten)
		(SIMPX ich weis nicht wie sie es sich das vorgestellt haben)
		(SIMPX aber ich wurde doch eher fur einen flug pladieren)))
Step:Unary
{'subtrees': ['VXINF'], 'family': ['KOORD', 'VF', 'LK', 'MF', 'VC', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'ART', 'NN', 'VAFIN', 'ADJD', 'APPR', 'CARD', 'NN', 'APPR', 'CARD', 'NN', 'VVINF', 'VVINF'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (32, 45), 'span': (44, 45), 'left siblings': ['KOORD', 'VF', 'LK', 'MF', 'VC'], 'label': 'VC', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja ich habe mir da einige zugverbindungen und fluge geben lassen und der zug fahrt stundlich ab vier uhr sechsundfunfzig am morgen und er braucht viereinhalb stunden bis hannover von munchen aus und das flugzeug wurde stundlich ab sieben uhr bis achtzehn uhr fahren fliegen und braucht siebzig minuten ich weis nicht wie sie es sich das vorgestellt haben aber ich wurde doch eher fur einen flug pladieren)

Sentence 561:
2 Initial errors
0 on fringe, 2 iterations
1 Error:UNSET add
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM also)
		(SIMPX dieses letzte hotel das hat mich auch am meisten interessiert)
		(SIMPX
			[01;36m(SIMPX[00m
				[01;36m(VF[00m
					(KOORD und)
					(VF da wir sowieso auf firmenkosten reisen werden)[01;36m)[00m[01;36m)[00m
			(LK denke)
			(MF ich schon)
			(NF das wir uns dort ein einzelzimmer auch nehmen konnen))))
Step:UNSET add
{'subtrees': ['KOORD', 'VF'], 'family': ['VF', 'LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'KOUS', 'PPER', 'ADV', 'APPR', 'NN', 'VVINF', 'VAFIN'), 'right siblings': [(LK (VXFIN (VVFIN denke))), (MF (NX (PPER ich)) (ADVX (ADV schon))), (NF (SIMPX (C (KOUS das)) (MF (NX (PPER wir)) (NX (PRF uns)) (ADVX (ADV dort)) (NX (ART ein) (NN einzelzimmer)) (ADVX (ADV auch))) (VC (VXINF (VVINF nehmen)) (VXFIN (VMFIN konnen)))))], 'left siblings': [], 'auto preterminal span': (12, 20), 'span': (12, 20), 'parent': 'SIMPX', 'label': 'VF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM also)
		(SIMPX dieses letzte hotel das hat mich auch am meisten interessiert)
		(SIMPX
			[01;36m(SIMPX[00m
				(VF
					(KOORD und)
					(VF da wir sowieso auf firmenkosten reisen werden))[01;36m)[00m
			(LK denke)
			(MF ich schon)
			(NF das wir uns dort ein einzelzimmer auch nehmen konnen))))
Step:Unary
{'subtrees': ['VF'], 'family': ['SIMPX', 'LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'KOUS', 'PPER', 'ADV', 'APPR', 'NN', 'VVINF', 'VAFIN'), 'right siblings': [(LK (VXFIN (VVFIN denke))), (MF (NX (PPER ich)) (ADVX (ADV schon))), (NF (SIMPX (C (KOUS das)) (MF (NX (PPER wir)) (NX (PRF uns)) (ADVX (ADV dort)) (NX (ART ein) (NN einzelzimmer)) (ADVX (ADV auch))) (VC (VXINF (VVINF nehmen)) (VXFIN (VMFIN konnen)))))], 'left siblings': [], 'auto preterminal span': (12, 20), 'span': (12, 20), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'add'}
(TOP ja also dieses letzte hotel das hat mich auch am meisten interessiert und da wir sowieso auf firmenkosten reisen werden denke ich schon das wir uns dort ein einzelzimmer auch nehmen konnen)

Sentence 562:
0 Initial errors
0 on fringe, 0 iterations

Sentence 563:
5 Initial errors
0 on fringe, 3 iterations
3 Error:PP Attachment
1 Error:Unary
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM guten tag)
		(DM
			(NX
				[01;36m(DM[00m
					(NX
						(NE krings))[01;36m)[00m
				(ADVX hier)))
		(SIMPX ich habe eine frage)
		(SIMPX
			(VF vom vierundzwanzigsten bis zum funfundzwanzigsten juni)
			(LK bin)
			(MF
				(NX ich)
				[01;31m(PX[00m [01;33m(PX[00m
					(APPR auf)
					[01;31m(NX[00m
						(NX einem kongres) [01;33mPX)[00m
						(PX in hannover)[01;31m)[00m[01;31m)[00m))
		(SIMPX
			(KOORD und)
			(VF ich)
			(LK wurde)
			(MF
				(ADVX gern)
				[01;31m(NX[00m
					(ADVX einen tag vorher)
					(PX am dreiundzwanzigsten)[01;31m)[00m)
			(VC anreisen))))
Step:PP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'PX', 'PX'], 'mover info': [('PX', (19, 21))], 'old_family': ['NX', 'PX'], 'start left siblings': ['NX'], 'auto preterminals': ('PPER', 'APPR', 'ART', 'NN', 'APPR', 'NE'), 'start right siblings': [], 'end left siblings': ['NX', 'PX'], 'auto preterminal span': (15, 21), 'movers': ['PX'], 'old_parent': 'NX', 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM guten tag)
		(DM
			(NX
				[01;36m(DM[00m
					(NX
						(NE krings))[01;36m)[00m
				(ADVX hier)))
		(SIMPX ich habe eine frage)
		(SIMPX vom vierundzwanzigsten bis zum funfundzwanzigsten juni bin ich auf einem kongres in hannover)
		(SIMPX
			(KOORD und)
			(VF ich)
			(LK wurde)
			(MF
				(ADVX gern)
				[01;31m(NX[00m
					(ADVX einen tag vorher)
					(PX am dreiundzwanzigsten)[01;31m)[00m)
			(VC anreisen))))
Step:Unary
{'subtrees': ['NX'], 'family': ['DM', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NE',), 'right siblings': [(ADVX (ADV hier))], 'left siblings': [], 'auto preterminal span': (2, 3), 'span': (2, 3), 'parent': 'NX', 'label': 'DM', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM guten tag)
		(DM krings hier)
		(SIMPX ich habe eine frage)
		(SIMPX vom vierundzwanzigsten bis zum funfundzwanzigsten juni bin ich auf einem kongres in hannover)
		(SIMPX
			(KOORD und)
			(VF ich)
			(LK wurde)
			(MF
				(ADVX gern)
				[01;31m(NX[00m
					(ADVX einen tag vorher)
					(PX am dreiundzwanzigsten)[01;31m)[00m)
			(VC anreisen))))
Step:PP Attachment
{'subtrees': ['ADVX', 'PX'], 'family': ['ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ART', 'NN', 'ADV', 'APPRART', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (24, 30), 'span': (25, 30), 'left siblings': ['ADVX'], 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP guten tag krings hier ich habe eine frage vom vierundzwanzigsten bis zum funfundzwanzigsten juni bin ich auf einem kongres in hannover und ich wurde gern einen tag vorher am dreiundzwanzigsten anreisen)

Sentence 564:
0 Initial errors
0 on fringe, 0 iterations

Sentence 565:
0 Initial errors
0 on fringe, 0 iterations

Sentence 566:
0 Initial errors
0 on fringe, 0 iterations

Sentence 567:
0 Initial errors
0 on fringe, 0 iterations

Sentence 568:
4 Initial errors
0 on fringe, 4 iterations
1 Error:Clause Attachment
1 Error:UNSET add
1 Error:Single Word Phrase
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM gut)
		[01;36m(SIMPX[00m
			(SIMPX dann ware zu empfehlen um acht uhr dreisig)
			(SIMPX
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				[01;36m(SIMPX[00m
					(VF sie)
					(LK kamen)
					(VC an)
					[01;31m(NF[00m
						(PX in hannover)
						(PX um ein uhr)[01;31m)[00m[01;36m)[00m)[01;36m)[00m
		(ADVX etwa)))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['DM', 'SIMPX', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PTKZU', 'VVINF', 'APPR', 'CARD', 'NN', 'CARD', 'KON', 'PPER', 'VVFIN', 'PTKVZ', 'APPR', 'NE', 'APPR', 'CARD', 'NN'), 'right siblings': [(ADVX (ADV etwa))], 'left siblings': [(DM (ITJ gut))], 'auto preterminal span': (1, 18), 'span': (1, 18), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM gut)
		(SIMPX
			(SIMPX dann ware zu empfehlen um acht uhr dreisig)
			(SIMPX
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				[01;36m(SIMPX[00m
					(VF sie)
					(LK kamen)
					(VC an)
					[01;31m(NF[00m
						(PX in hannover)
						(PX um ein uhr)[01;31m)[00m[01;36m)[00m))
		(ADVX etwa)))
Step:UNSET add
{'subtrees': ['VF', 'LK', 'VC', 'NF'], 'family': ['KOORD', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'PTKVZ', 'APPR', 'NE', 'APPR', 'CARD', 'NN'), 'right siblings': [], 'left siblings': [(KOORD (KON und))], 'auto preterminal span': (10, 18), 'span': (10, 18), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM gut)
		(SIMPX
			(SIMPX dann ware zu empfehlen um acht uhr dreisig)
			(SIMPX
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				(SIMPX
					(VF sie)
					(LK kamen)
					(VC an)
					[01;31m(NF[00m
						(PX in hannover)
						(PX um ein uhr)[01;31m)[00m)))
		(ADVX etwa)))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['KOORD', 'SIMPX'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON', 'PPER', 'VVFIN', 'PTKVZ', 'APPR', 'NE', 'APPR', 'CARD', 'NN'), 'right siblings': ['SIMPX'], 'parent': 'SIMPX', 'auto preterminal span': (9, 18), 'span': (9, 10), 'left siblings': [], 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(DM gut)
		(SIMPX
			(SIMPX dann ware zu empfehlen um acht uhr dreisig)
			(SIMPX
				(KON und)
				(SIMPX
					(VF sie)
					(LK kamen)
					(VC an)
					[01;31m(NF[00m
						(PX in hannover)
						(PX um ein uhr)[01;31m)[00m)))
		(ADVX etwa)))
Step:PP Attachment
{'subtrees': ['PX', 'PX'], 'family': ['VF', 'LK', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'PTKVZ', 'APPR', 'NE', 'APPR', 'CARD', 'NN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (10, 18), 'span': (13, 18), 'left siblings': ['VF', 'LK', 'VC'], 'label': 'NF', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP gut dann ware zu empfehlen um acht uhr dreisig und sie kamen an in hannover um ein uhr etwa)

Sentence 569:
0 Initial errors
0 on fringe, 0 iterations

Sentence 570:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX da gibt es das hotel am thielenplatz)
		(SIMPX das ist ganz in der nahe vom bahnhof)
		(SIMPX das ist wohl am angenehmsten)
		(SIMPX
			(VF das)
			(VXFIN ist)
			(LK liegt)
			[01;36m(PX[00m
				(MF
					(ADVX so)
					[01;31m(PX[00m
						(APPR zwischen)
						(NX funfundachtzig und einhundert dreisig mark)[01;31m)[00m)[01;36m)[00m)))
Step:Modifier Attachment
{'new_parent': 'PX', 'new_family': ['ADVX', 'APPR', 'NX'], 'mover info': [('ADVX', (23, 24))], 'old_family': ['ADVX', 'PX'], 'start left siblings': [], 'auto preterminals': ('ADV', 'APPR', 'CARD', 'KON', 'CARD', 'CARD', 'NN'), 'start right siblings': ['PX'], 'end left siblings': [], 'auto preterminal span': (23, 30), 'movers': ['ADVX'], 'old_parent': 'MF', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['APPR', 'NX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP da gibt es das hotel am thielenplatz das ist ganz in der nahe vom bahnhof das ist wohl am angenehmsten das ist liegt so zwischen funfundachtzig und einhundert dreisig mark)

Sentence 571:
0 Initial errors
0 on fringe, 0 iterations

Sentence 572:
14 Initial errors
0 on fringe, 10 iterations
3 Error:PP Attachment
2 Error:Single Word Phrase
2 Error:Different label
1 Error:Unary
1 Error:Single Word Phrase
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM guten tag)
		(SIMPX
			(VF hier)
			(LK ist)
			[01;31m(MF[00m
				[01;31m(NX[00m
					[01;36m(MF[00m
						(NX
							(NE gero)
							(NE muller))[01;36m)[00m
					(PX aus koln)[01;31m)[00m[01;31m)[00m)
		(SIMPX
			(VF ich)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK plane)
					(MF
						[01;36m(MF[00m
							(NX
								(NX eine geschaftsreise)
								(PX nach hannover))[01;36m)[00m
						(NX anfang juli))[01;31m)[00m
				[01;36m(KOORD[00m
					(KON und)[01;36m)[00m
				[01;31m(LKMVCN[00m
					(LK wurde)
					(MF sie)
					[01;36m(VXFIN[00m [01;36m(LK[00m [01;31m(VC[00m
						[01;31m(VXINF[00m
							(VVINF bitten)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m
					[01;31m(NF[00m
						[01;31m(SIMPX[00m
							(MF mir dort ein entsprechendes hotel und ein verkehrsmittel)
							(VC zu buchen)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m)))
Step:PP Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'PX'], 'mover info': [('PX', (7, 9))], 'old_family': ['NX', 'PX'], 'start left siblings': ['NX'], 'auto preterminals': ('ADV', 'VAFIN', 'NE', 'NE', 'APPR', 'NE'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (3, 9), 'movers': ['PX'], 'old_parent': 'NX', 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(DM guten tag)
		(SIMPX hier ist gero muller aus koln)
		(SIMPX
			(VF ich)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK plane)
					(MF
						[01;36m(MF[00m
							(NX
								(NX eine geschaftsreise)
								(PX nach hannover))[01;36m)[00m
						(NX anfang juli))[01;31m)[00m
				[01;36m(KOORD[00m
					(KON und)[01;36m)[00m
				[01;31m(LKMVCN[00m
					(LK wurde)
					(MF sie)
					[01;36m(VXFIN[00m [01;36m(LK[00m [01;31m(VC[00m
						[01;31m(VXINF[00m
							(VVINF bitten)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m
					[01;31m(NF[00m
						[01;31m(SIMPX[00m
							(MF mir dort ein entsprechendes hotel und ein verkehrsmittel)
							(VC zu buchen)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m)))
Step:Single Word Phrase
{'family': ['LK'], 'auto preterminal span': (20, 21), 'span': (20, 21), 'subtrees': ['VVINF'], 'parent': 'VC', 'over_word': True, 'auto preterminals': ('VVINF',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VXINF', 'LK')}
(TOP
	(TURN
		(DM ja)
		(DM guten tag)
		(SIMPX hier ist gero muller aus koln)
		(SIMPX
			(VF ich)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK plane)
					(MF
						[01;36m(MF[00m
							(NX
								(NX eine geschaftsreise)
								(PX nach hannover))[01;36m)[00m
						(NX anfang juli))[01;31m)[00m
				[01;36m(KOORD[00m
					(KON und)[01;36m)[00m
				[01;31m(LKMVCN[00m
					(LK wurde)
					(MF sie)
					[01;36m(VXFIN[00m [01;31m(VC[00m
						(LK
							(VVINF bitten))[01;31m)[00m[01;36m)[00m
					[01;31m(NF[00m
						[01;31m(SIMPX[00m
							(MF mir dort ein entsprechendes hotel und ein verkehrsmittel)
							(VC zu buchen)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m)))
Step:Different label
{'family': ['LK', 'MF', 'VXFIN', 'NF'], 'auto preterminal span': (20, 21), 'span': (20, 21), 'subtrees': ['LK'], 'parent': 'LKMVCN', 'over_word': False, 'auto preterminals': ('VVINF',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('VC', 'VXFIN')}
(TOP
	(TURN
		(DM ja)
		(DM guten tag)
		(SIMPX hier ist gero muller aus koln)
		(SIMPX
			(VF ich)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK plane)
					(MF
						[01;36m(MF[00m
							(NX
								(NX eine geschaftsreise)
								(PX nach hannover))[01;36m)[00m
						(NX anfang juli))[01;31m)[00m
				[01;36m(KOORD[00m
					(KON und)[01;36m)[00m
				[01;31m(LKMVCN[00m
					(LK wurde)
					(MF sie)
					(VXFIN bitten)
					[01;31m(NF[00m
						[01;31m(SIMPX[00m
							(MF mir dort ein entsprechendes hotel und ein verkehrsmittel)
							(VC zu buchen)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m)))
Step:Unary
{'subtrees': ['NX'], 'family': ['MF', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'APPR', 'NE'), 'right siblings': [(NX (NX (NN anfang)) (NX (NN juli)))], 'left siblings': [], 'auto preterminal span': (11, 15), 'span': (11, 15), 'parent': 'MF', 'label': 'MF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM guten tag)
		(SIMPX hier ist gero muller aus koln)
		(SIMPX
			(VF ich)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK plane)
					(MF eine geschaftsreise nach hannover anfang juli)[01;31m)[00m
				[01;36m(KOORD[00m
					(KON und)[01;36m)[00m
				[01;31m(LKMVCN[00m
					(LK wurde)
					(MF sie)
					(VXFIN bitten)
					[01;31m(NF[00m
						[01;31m(SIMPX[00m
							(MF mir dort ein entsprechendes hotel und ein verkehrsmittel)
							(VC zu buchen)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m)))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['LKM', 'KOORD', 'LKMVCN'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON',), 'right siblings': [(LKMVCN (LK (VXFIN (VAFIN wurde))) (MF (NX (PPER sie))) (VXFIN (LK (VVINF bitten))) (NF (SIMPX (MF (NX (PPER mir)) (ADVX (ADV dort)) (NX (NX (ART ein) (ADJX (ADJA entsprechendes)) (NN hotel)) (KON und) (NX (ART ein) (NN verkehrsmittel)))) (VC (VXINF (PTKZU zu) (VVINF buchen))))))], 'left siblings': [(LKM (LK (VXFIN (VVFIN plane))) (MF (MF (NX (NX (ART eine) (NN geschaftsreise)) (PX (APPR nach) (NX (NE hannover))))) (NX (NX (NN anfang)) (NX (NN juli)))))], 'auto preterminal span': (17, 18), 'span': (17, 18), 'parent': 'FKOORD', 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM guten tag)
		(SIMPX hier ist gero muller aus koln)
		(SIMPX
			(VF ich)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK plane)
					(MF eine geschaftsreise nach hannover anfang juli)[01;31m)[00m
				(KOORD und)
				[01;31m(LKMVCN[00m
					(LK wurde)
					(MF sie)
					(VXFIN bitten)
					[01;31m(NF[00m
						[01;31m(SIMPX[00m
							(MF mir dort ein entsprechendes hotel und ein verkehrsmittel)
							(VC zu buchen)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m)))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['LKM', 'KOORD', 'LKMVCN'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'ART', 'NN', 'APPR', 'NE', 'NN', 'NN', 'KON', 'VAFIN', 'PPER', 'VVINF', 'PPER', 'ADV', 'ART', 'ADJA', 'NN', 'KON', 'ART', 'NN', 'PTKZU', 'VVINF'), 'right siblings': ['KOORD', 'LKMVCN'], 'parent': 'FKOORD', 'auto preterminal span': (10, 31), 'span': (10, 17), 'left siblings': [], 'label': 'LKM', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM guten tag)
		(SIMPX hier ist gero muller aus koln)
		(SIMPX
			(VF ich)
			[01;31m(FKOORD[00m
				(LK plane)
				(MF eine geschaftsreise nach hannover anfang juli)
				(KOORD und)
				[01;31m(LKMVCN[00m
					(LK wurde)
					(MF sie)
					(VXFIN bitten)
					[01;31m(NF[00m
						[01;31m(SIMPX[00m
							(MF mir dort ein entsprechendes hotel und ein verkehrsmittel)
							(VC zu buchen)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m)))
Step:UNSET remove
{'subtrees': ['LK', 'MF', 'KOORD', 'LKMVCN'], 'family': ['VF', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ART', 'NN', 'APPR', 'NE', 'NN', 'NN', 'KON', 'VAFIN', 'PPER', 'VVINF', 'PPER', 'ADV', 'ART', 'ADJA', 'NN', 'KON', 'ART', 'NN', 'PTKZU', 'VVINF'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (9, 31), 'span': (10, 31), 'left siblings': ['VF'], 'label': 'FKOORD', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM guten tag)
		(SIMPX hier ist gero muller aus koln)
		(SIMPX
			(VF ich)
			(LK plane)
			(MF eine geschaftsreise nach hannover anfang juli)
			(KOORD und)
			[01;31m(LKMVCN[00m
				(LK wurde)
				(MF sie)
				(VXFIN bitten)
				[01;31m(NF[00m
					[01;31m(SIMPX[00m
						(MF mir dort ein entsprechendes hotel und ein verkehrsmittel)
						(VC zu buchen)[01;31m)[00m[01;31m)[00m[01;31m)[00m)))
Step:UNSET remove
{'subtrees': ['LK', 'MF', 'VXFIN', 'NF'], 'family': ['VF', 'LK', 'MF', 'KOORD', 'LKMVCN'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ART', 'NN', 'APPR', 'NE', 'NN', 'NN', 'KON', 'VAFIN', 'PPER', 'VVINF', 'PPER', 'ADV', 'ART', 'ADJA', 'NN', 'KON', 'ART', 'NN', 'PTKZU', 'VVINF'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (9, 31), 'span': (18, 31), 'left siblings': ['VF', 'LK', 'MF', 'KOORD'], 'label': 'LKMVCN', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM guten tag)
		(SIMPX hier ist gero muller aus koln)
		(SIMPX
			(VF ich)
			(LK plane)
			(MF eine geschaftsreise nach hannover anfang juli)
			(KOORD und)
			(LK wurde)
			(MF sie)
			(VXFIN bitten)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					(MF mir dort ein entsprechendes hotel und ein verkehrsmittel)
					(VC zu buchen)[01;31m)[00m[01;31m)[00m)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['VF', 'LK', 'MF', 'KOORD', 'LK', 'MF', 'VXFIN', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ART', 'NN', 'APPR', 'NE', 'NN', 'NN', 'KON', 'VAFIN', 'PPER', 'VVINF', 'PPER', 'ADV', 'ART', 'ADJA', 'NN', 'KON', 'ART', 'NN', 'PTKZU', 'VVINF'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (9, 31), 'span': (21, 31), 'left siblings': ['VF', 'LK', 'MF', 'KOORD', 'LK', 'MF', 'VXFIN'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM guten tag)
		(SIMPX hier ist gero muller aus koln)
		(SIMPX
			(VF ich)
			(LK plane)
			(MF eine geschaftsreise nach hannover anfang juli)
			(KOORD und)
			(LK wurde)
			(MF sie)
			(VXFIN bitten)
			[01;31m(SIMPX[00m
				(MF mir dort ein entsprechendes hotel und ein verkehrsmittel)
				(VC zu buchen)[01;31m)[00m)))
Step:UNSET remove
{'subtrees': ['MF', 'VC'], 'family': ['VF', 'LK', 'MF', 'KOORD', 'LK', 'MF', 'VXFIN', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ART', 'NN', 'APPR', 'NE', 'NN', 'NN', 'KON', 'VAFIN', 'PPER', 'VVINF', 'PPER', 'ADV', 'ART', 'ADJA', 'NN', 'KON', 'ART', 'NN', 'PTKZU', 'VVINF'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (9, 31), 'span': (21, 31), 'left siblings': ['VF', 'LK', 'MF', 'KOORD', 'LK', 'MF', 'VXFIN'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ja guten tag hier ist gero muller aus koln ich plane eine geschaftsreise nach hannover anfang juli und wurde sie bitten mir dort ein entsprechendes hotel und ein verkehrsmittel zu buchen)

Sentence 573:
8 Initial errors
0 on fringe, 6 iterations
2 Error:Different label
2 Error:UNSET move
1 Error:UNSET remove
1 Error:Unary
1 Error:Modifier Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich habe mich ja)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK habe)
			(MF mich da auch schon)
			(VC erkundigt)[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(LV[00m
				[01;31m(NX[00m
					(NX der zug)
					[01;36m(ADVX[00m [01;31m(PX[00m
						(ADVX hier)
						(PX in bonn)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
			[01;36m(SIMPX[00m
				(VF der)
				(LK fahrt)
				(MF
					[01;31m(PX[00m
						(APPR um)
						(NX acht uhr neununddreisig)[01;31m)[00m)
				(VC ab)[01;36m)[00m[01;31m)[00m
		(SIMPX und das habe ich mir schon zurechtgelegt)
		(SIMPX den wurde ich eigentlich ganz gerne nehmen)
		(SIMPX konnten sie mir da was reservieren)))
Step:Different label
{'family': ['NX', 'ADVX'], 'auto preterminal span': (14, 17), 'span': (14, 17), 'subtrees': ['ADVX', 'PX'], 'parent': 'NX', 'over_word': False, 'auto preterminals': ('ADV', 'APPR', 'NE'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('PX', 'ADVX')}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich habe mich ja)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK habe)
			(MF mich da auch schon)
			(VC erkundigt)[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(LV[00m
				[01;31m(NX[00m
					(NX der zug)
					(ADVX hier in bonn)[01;31m)[00m[01;31m)[00m
			[01;36m(SIMPX[00m
				(VF der)
				(LK fahrt)
				(MF
					[01;31m(PX[00m
						(APPR um)
						(NX acht uhr neununddreisig)[01;31m)[00m)
				(VC ab)[01;36m)[00m[01;31m)[00m
		(SIMPX und das habe ich mir schon zurechtgelegt)
		(SIMPX den wurde ich eigentlich ganz gerne nehmen)
		(SIMPX konnten sie mir da was reservieren)))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'VC', 'LV'], 'mover info': [('LV', (12, 17))], 'old_family': ['LV', 'VF', 'LK', 'MF', 'VC'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'PPER', 'VAFIN', 'PRF', 'ADV', 'PPER', 'VAFIN', 'PRF', 'ADV', 'ADV', 'ADV', 'VVPP', 'ART', 'NN', 'ADV', 'APPR', 'NE', 'PDS', 'VVFIN', 'APPR', 'CARD', 'NN', 'CARD', 'PTKVZ', 'KON', 'PDS', 'VAFIN', 'PPER', 'PRF', 'ADV', 'VVPP', 'PDS', 'VAFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'VVINF', 'VMFIN', 'PPER', 'PPER', 'ADV', 'PIS', 'VVINF'), 'start right siblings': ['VF', 'LK', 'MF', 'VC'], 'end left siblings': ['VF', 'LK', 'MF', 'VC'], 'auto preterminal span': (0, 44), 'movers': ['LV'], 'old_parent': 'SIMPX', 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich habe mich ja)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK habe)
			(MF mich da auch schon)
			(VC erkundigt)
			[01;31m(LV[00m
				[01;31m(NX[00m
					(NX der zug)
					(ADVX hier in bonn)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX
			(VF der)
			(LK fahrt)
			(MF
				[01;31m(PX[00m
					(APPR um)
					(NX acht uhr neununddreisig)[01;31m)[00m)
			(VC ab))
		(SIMPX und das habe ich mir schon zurechtgelegt)
		(SIMPX den wurde ich eigentlich ganz gerne nehmen)
		(SIMPX konnten sie mir da was reservieren)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'VC', 'LV'], 'family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VAFIN', 'PRF', 'ADV', 'PPER', 'VAFIN', 'PRF', 'ADV', 'ADV', 'ADV', 'VVPP', 'ART', 'NN', 'ADV', 'APPR', 'NE', 'PDS', 'VVFIN', 'APPR', 'CARD', 'NN', 'CARD', 'PTKVZ', 'KON', 'PDS', 'VAFIN', 'PPER', 'PRF', 'ADV', 'VVPP', 'PDS', 'VAFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'VVINF', 'VMFIN', 'PPER', 'PPER', 'ADV', 'PIS', 'VVINF'), 'right siblings': ['SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 44), 'span': (5, 17), 'left siblings': ['DM', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich habe mich ja)
		(VF ich)
		(LK habe)
		(MF mich da auch schon)
		(VC erkundigt)
		[01;31m(LV[00m
			[01;31m(NX[00m
				(NX der zug)
				(ADVX hier in bonn)[01;31m)[00m[01;31m)[00m
		(SIMPX
			(VF der)
			(LK fahrt)
			(MF
				[01;31m(PX[00m
					(APPR um)
					(NX acht uhr neununddreisig)[01;31m)[00m)
			(VC ab))
		(SIMPX und das habe ich mir schon zurechtgelegt)
		(SIMPX den wurde ich eigentlich ganz gerne nehmen)
		(SIMPX konnten sie mir da was reservieren)))
Step:Unary
{'subtrees': ['NX'], 'family': ['DM', 'SIMPX', 'VF', 'LK', 'MF', 'VC', 'LV', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VAFIN', 'PRF', 'ADV', 'PPER', 'VAFIN', 'PRF', 'ADV', 'ADV', 'ADV', 'VVPP', 'ART', 'NN', 'ADV', 'APPR', 'NE', 'PDS', 'VVFIN', 'APPR', 'CARD', 'NN', 'CARD', 'PTKVZ', 'KON', 'PDS', 'VAFIN', 'PPER', 'PRF', 'ADV', 'VVPP', 'PDS', 'VAFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'VVINF', 'VMFIN', 'PPER', 'PPER', 'ADV', 'PIS', 'VVINF'), 'right siblings': ['SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 44), 'span': (12, 17), 'left siblings': ['DM', 'SIMPX', 'VF', 'LK', 'MF', 'VC'], 'label': 'LV', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich habe mich ja)
		(VF ich)
		(LK habe)
		(MF mich da auch schon)
		(VC erkundigt)
		[01;31m(NX[00m
			(NX der zug)
			(ADVX hier in bonn)[01;31m)[00m
		(SIMPX
			(VF der)
			(LK fahrt)
			(MF
				[01;31m(PX[00m
					(APPR um)
					(NX acht uhr neununddreisig)[01;31m)[00m)
			(VC ab))
		(SIMPX und das habe ich mir schon zurechtgelegt)
		(SIMPX den wurde ich eigentlich ganz gerne nehmen)
		(SIMPX konnten sie mir da was reservieren)))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADVX'], 'family': ['DM', 'SIMPX', 'VF', 'LK', 'MF', 'VC', 'NX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VAFIN', 'PRF', 'ADV', 'PPER', 'VAFIN', 'PRF', 'ADV', 'ADV', 'ADV', 'VVPP', 'ART', 'NN', 'ADV', 'APPR', 'NE', 'PDS', 'VVFIN', 'APPR', 'CARD', 'NN', 'CARD', 'PTKVZ', 'KON', 'PDS', 'VAFIN', 'PPER', 'PRF', 'ADV', 'VVPP', 'PDS', 'VAFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'VVINF', 'VMFIN', 'PPER', 'PPER', 'ADV', 'PIS', 'VVINF'), 'right siblings': ['SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 44), 'span': (12, 17), 'left siblings': ['DM', 'SIMPX', 'VF', 'LK', 'MF', 'VC'], 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich habe mich ja)
		(VF ich)
		(LK habe)
		(MF mich da auch schon)
		(VC erkundigt)
		(NX der zug)
		(ADVX hier in bonn)
		(SIMPX
			(VF der)
			(LK fahrt)
			(MF
				[01;31m(PX[00m
					(APPR um)
					(NX acht uhr neununddreisig)[01;31m)[00m)
			(VC ab))
		(SIMPX und das habe ich mir schon zurechtgelegt)
		(SIMPX den wurde ich eigentlich ganz gerne nehmen)
		(SIMPX konnten sie mir da was reservieren)))
Step:Unary
{'subtrees': ['APPR', 'NX'], 'family': ['PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'CARD', 'NN', 'CARD'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (19, 23), 'span': (19, 23), 'left siblings': [], 'label': 'PX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja ich habe mich ja ich habe mich da auch schon erkundigt der zug hier in bonn der fahrt um acht uhr neununddreisig ab und das habe ich mir schon zurechtgelegt den wurde ich eigentlich ganz gerne nehmen konnten sie mir da was reservieren)

Sentence 574:
20 Initial errors
0 on fringe, 16 iterations
4 Error:UNSET move
2 Error:NP Attachment
1 Error:UNSET add
1 Error:Unary
1 Error:Single Word Phrase
1 Error:Single Word Phrase
1 Error:Unary
1 Error:Single Word Phrase
1 Error:Unary
1 Error:UNSET remove
1 Error:Unary
1 Error:UNSET remove
1 Error:Unary
1 Error:Clause Attachment
1 Error:UNSET add
1 Error:UNSET add
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK wurde)
			(MF ich)
			(VC sagen)
			[01;31m(NF[00m
				(SIMPX
					(VF dann)
					(LK nehme)
					(MF ich das))[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(LK kann)
			(MF ich)[01;31m)[00m
		(DM also)
		(DM wie gesagt)
		(SIMPX [01;33m(SIMPX (SIMPX[00m
			(VF ich)
			(LK war)
			(MF noch nicht ganz sicher)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					[01;31m(C[00m
						(NX
							(PWS was))[01;31m)[00m
					[01;36m(MF[00m
						[01;36m(NX[00m
							(ART den)
							(NX ende) [01;33mSIMPX)[00m[01;36m)[00m[01;36m)[00m
					[01;36m(NX[00m
						(ART der) [01;33mSIMPX)[00m[01;36m)[00m
					[01;36m(SIMPX[00m
						[01;36m(C[00m
							[01;36m(NX[00m
								(PWS was)[01;36m)[00m[01;36m)[00m
						(MF
							[01;31m(NX[00m
								[01;31m(NX[00m
									[01;36m(NX[00m
										(ART das)[01;36m)[00m
									[01;36m(NX[00m
										(NN [01;33m(NX[00m ende)[01;36m)[00m[01;31m)[00m
								(NX der abreise)[01;31m)[00m) [01;33mNX)[00m
						(VC anging)[01;36m)[00m[01;31m)[00m[01;31m)[00m)
		[01;36m(NF[00m
			(SIMPX
				(C das)
				(MF ich mich im laufe der woche noch mal)
				(VC melde)
				(NF bei ihnen))[01;36m)[00m
		(ADVX und dann)))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['ART', 'NX'], 'mover info': [('ART', (27, 28))], 'old_family': ['ART', 'NN'], 'start left siblings': [], 'auto preterminals': ('ART', 'NN', 'ART', 'NN'), 'start right siblings': ['NN'], 'end left siblings': [], 'auto preterminal span': (27, 31), 'movers': ['ART'], 'old_parent': 'NX', 'POS confusion': ('ART', 'ART'), 'end right siblings': ['NX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK wurde)
			(MF ich)
			(VC sagen)
			[01;31m(NF[00m
				(SIMPX
					(VF dann)
					(LK nehme)
					(MF ich das))[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(LK kann)
			(MF ich)[01;31m)[00m
		(DM also)
		(DM wie gesagt)
		(SIMPX [01;33m(SIMPX (SIMPX[00m
			(VF ich)
			(LK war)
			(MF noch nicht ganz sicher)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					[01;31m(C[00m
						(NX
							(PWS was))[01;31m)[00m
					[01;36m(MF[00m
						[01;36m(NX[00m
							(ART den)
							(NX ende) [01;33mSIMPX)[00m[01;36m)[00m[01;36m)[00m
					[01;36m(NX[00m
						(ART der) [01;33mSIMPX)[00m[01;36m)[00m
					[01;36m(SIMPX[00m
						[01;36m(C[00m
							[01;36m(NX[00m
								(PWS was)[01;36m)[00m[01;36m)[00m
						(MF
							[01;36m(NX[00m
								(ART das)[01;36m)[00m
							(NX ende der abreise))
						(VC anging)[01;36m)[00m[01;31m)[00m[01;31m)[00m)
		[01;36m(NF[00m
			(SIMPX
				(C das)
				(MF ich mich im laufe der woche noch mal)
				(VC melde)
				(NF bei ihnen))[01;36m)[00m
		(ADVX und dann)))
Step:NP Attachment
{'new_parent': 'NF', 'new_family': ['C', 'ART', 'NX', 'ART', 'SIMPX'], 'mover info': [('C', (22, 23)), ('ART', (23, 24)), ('NX', (24, 25)), ('ART', (25, 26))], 'old_family': ['C', 'ART', 'NX', 'ART', 'PWS', 'MF', 'VC'], 'start left siblings': [], 'auto preterminals': ('PWS', 'ART', 'NN', 'ART', 'PWS', 'ART', 'NN', 'ART', 'NN', 'VVFIN'), 'start right siblings': ['PWS', 'MF', 'VC'], 'end left siblings': [], 'auto preterminal span': (22, 32), 'movers': ['C', 'ART', 'NX', 'ART'], 'old_parent': 'SIMPX', 'end right siblings': ['SIMPX'], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK wurde)
			(MF ich)
			(VC sagen)
			[01;31m(NF[00m
				(SIMPX
					(VF dann)
					(LK nehme)
					(MF ich das))[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(LK kann)
			(MF ich)[01;31m)[00m
		(DM also)
		(DM wie gesagt)
		(SIMPX [01;33m(SIMPX (SIMPX[00m
			(VF ich)
			(LK war)
			(MF noch nicht ganz sicher)
			[01;31m(NF[00m
				[01;31m(C[00m
					(NX
						(PWS was))[01;31m)[00m
				[01;36m(MF[00m
					[01;36m(NX[00m
						(ART den)
						(NX ende) [01;33mSIMPX)[00m[01;36m)[00m[01;36m)[00m
				[01;36m(NX[00m
					(ART der) [01;33mSIMPX)[00m[01;36m)[00m
				(SIMPX
					[01;36m(C[00m
						[01;36m(NX[00m
							(PWS was)[01;36m)[00m[01;36m)[00m
					(MF
						[01;36m(NX[00m
							(ART das)[01;36m)[00m
						(NX ende der abreise))
					(VC anging))[01;31m)[00m)
		[01;36m(NF[00m
			(SIMPX
				(C das)
				(MF ich mich im laufe der woche noch mal)
				(VC melde)
				(NF bei ihnen))[01;36m)[00m
		(ADVX und dann)))
Step:UNSET add
{'subtrees': ['ART', 'NX'], 'family': ['C', 'NX', 'ART', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN'), 'right siblings': [(ART der), (SIMPX (PWS was) (MF (ART das) (NX (NX (NN ende)) (NX (ART der) (NN abreise)))) (VC (VXFIN (VVFIN anging))))], 'left siblings': [(C (NX (PWS was)))], 'auto preterminal span': (23, 25), 'span': (23, 25), 'parent': 'NF', 'label': 'NX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK wurde)
			(MF ich)
			(VC sagen)
			[01;31m(NF[00m
				(SIMPX
					(VF dann)
					(LK nehme)
					(MF ich das))[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(LK kann)
			(MF ich)[01;31m)[00m
		(DM also)
		(DM wie gesagt)
		(SIMPX [01;33m(SIMPX (SIMPX[00m
			(VF ich)
			(LK war)
			(MF noch nicht ganz sicher)
			[01;31m(NF[00m
				[01;31m(C[00m
					(NX
						(PWS was))[01;31m)[00m
				[01;36m(MF[00m
					(NX
						(ART den)
						(NX ende)) [01;33mSIMPX)[00m[01;36m)[00m
				[01;36m(NX[00m
					(ART der) [01;33mSIMPX)[00m[01;36m)[00m
				(SIMPX
					[01;36m(C[00m
						[01;36m(NX[00m
							(PWS was)[01;36m)[00m[01;36m)[00m
					(MF
						[01;36m(NX[00m
							(ART das)[01;36m)[00m
						(NX ende der abreise))
					(VC anging))[01;31m)[00m)
		[01;36m(NF[00m
			(SIMPX
				(C das)
				(MF ich mich im laufe der woche noch mal)
				(VC melde)
				(NF bei ihnen))[01;36m)[00m
		(ADVX und dann)))
Step:Unary
{'subtrees': ['NX'], 'family': ['C', 'MF', 'ART', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN'), 'right siblings': [(ART der), (SIMPX (PWS was) (MF (ART das) (NX (NX (NN ende)) (NX (ART der) (NN abreise)))) (VC (VXFIN (VVFIN anging))))], 'left siblings': [(C (NX (PWS was)))], 'auto preterminal span': (23, 25), 'span': (23, 25), 'parent': 'NF', 'label': 'MF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK wurde)
			(MF ich)
			(VC sagen)
			[01;31m(NF[00m
				(SIMPX
					(VF dann)
					(LK nehme)
					(MF ich das))[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(LK kann)
			(MF ich)[01;31m)[00m
		(DM also)
		(DM wie gesagt)
		(SIMPX [01;33m(SIMPX (SIMPX[00m
			(VF ich)
			(LK war)
			(MF noch nicht ganz sicher)
			[01;31m(NF[00m
				[01;31m(C[00m
					(NX
						(PWS was))[01;31m)[00m
				(MF den ende) [01;33mSIMPX)[00m
				[01;36m(NX[00m
					(ART der) [01;33mSIMPX)[00m[01;36m)[00m
				(SIMPX
					[01;36m(C[00m
						[01;36m(NX[00m
							(PWS was)[01;36m)[00m[01;36m)[00m
					(MF
						[01;36m(NX[00m
							(ART das)[01;36m)[00m
						(NX ende der abreise))
					(VC anging))[01;31m)[00m)
		[01;36m(NF[00m
			(SIMPX
				(C das)
				(MF ich mich im laufe der woche noch mal)
				(VC melde)
				(NF bei ihnen))[01;36m)[00m
		(ADVX und dann)))
Step:Single Word Phrase
{'subtrees': ['ART'], 'family': ['C', 'MF', 'NX', 'SIMPX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ART',), 'right siblings': [(SIMPX (PWS was) (MF (ART das) (NX (NX (NN ende)) (NX (ART der) (NN abreise)))) (VC (VXFIN (VVFIN anging))))], 'left siblings': [(C (NX (PWS was))), (MF (NX (ART den) (NX (NN ende))))], 'auto preterminal span': (25, 26), 'span': (25, 26), 'parent': 'NF', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK wurde)
			(MF ich)
			(VC sagen)
			[01;31m(NF[00m
				(SIMPX
					(VF dann)
					(LK nehme)
					(MF ich das))[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(LK kann)
			(MF ich)[01;31m)[00m
		(DM also)
		(DM wie gesagt)
		(SIMPX [01;33m(SIMPX (SIMPX[00m
			(VF ich)
			(LK war)
			(MF noch nicht ganz sicher)
			[01;31m(NF[00m
				[01;31m(C[00m
					(NX
						(PWS was))[01;31m)[00m
				(MF den ende) [01;33mSIMPX)[00m
				(NX der) [01;33mSIMPX)[00m
				(SIMPX
					[01;36m(C[00m
						[01;36m(NX[00m
							(PWS was)[01;36m)[00m[01;36m)[00m
					(MF
						[01;36m(NX[00m
							(ART das)[01;36m)[00m
						(NX ende der abreise))
					(VC anging))[01;31m)[00m)
		[01;36m(NF[00m
			(SIMPX
				(C das)
				(MF ich mich im laufe der woche noch mal)
				(VC melde)
				(NF bei ihnen))[01;36m)[00m
		(ADVX und dann)))
Step:Single Word Phrase
{'subtrees': ['PWS'], 'family': ['NX', 'MF', 'VC'], 'over_word': True, 'over words': True, 'auto preterminals': ('PWS',), 'right siblings': [(MF (ART das) (NX (NX (NN ende)) (NX (ART der) (NN abreise)))), (VC (VXFIN (VVFIN anging)))], 'left siblings': [], 'auto preterminal span': (26, 27), 'span': (26, 27), 'parent': 'SIMPX', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK wurde)
			(MF ich)
			(VC sagen)
			[01;31m(NF[00m
				(SIMPX
					(VF dann)
					(LK nehme)
					(MF ich das))[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(LK kann)
			(MF ich)[01;31m)[00m
		(DM also)
		(DM wie gesagt)
		(SIMPX [01;33m(SIMPX (SIMPX[00m
			(VF ich)
			(LK war)
			(MF noch nicht ganz sicher)
			[01;31m(NF[00m
				[01;31m(C[00m
					(NX
						(PWS was))[01;31m)[00m
				(MF den ende) [01;33mSIMPX)[00m
				(NX der) [01;33mSIMPX)[00m
				(SIMPX
					[01;36m(C[00m
						(NX
							(PWS was))[01;36m)[00m
					(MF
						[01;36m(NX[00m
							(ART das)[01;36m)[00m
						(NX ende der abreise))
					(VC anging))[01;31m)[00m)
		[01;36m(NF[00m
			(SIMPX
				(C das)
				(MF ich mich im laufe der woche noch mal)
				(VC melde)
				(NF bei ihnen))[01;36m)[00m
		(ADVX und dann)))
Step:Unary
{'subtrees': ['NX'], 'family': ['C', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('PWS',), 'right siblings': [(MF (ART das) (NX (NX (NN ende)) (NX (ART der) (NN abreise)))), (VC (VXFIN (VVFIN anging)))], 'left siblings': [], 'auto preterminal span': (26, 27), 'span': (26, 27), 'parent': 'SIMPX', 'label': 'C', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK wurde)
			(MF ich)
			(VC sagen)
			[01;31m(NF[00m
				(SIMPX
					(VF dann)
					(LK nehme)
					(MF ich das))[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(LK kann)
			(MF ich)[01;31m)[00m
		(DM also)
		(DM wie gesagt)
		(SIMPX [01;33m(SIMPX (SIMPX[00m
			(VF ich)
			(LK war)
			(MF noch nicht ganz sicher)
			[01;31m(NF[00m
				[01;31m(C[00m
					(NX
						(PWS was))[01;31m)[00m
				(MF den ende) [01;33mSIMPX)[00m
				(NX der) [01;33mSIMPX)[00m
				(SIMPX
					(C was)
					(MF
						[01;36m(NX[00m
							(ART das)[01;36m)[00m
						(NX ende der abreise))
					(VC anging))[01;31m)[00m)
		[01;36m(NF[00m
			(SIMPX
				(C das)
				(MF ich mich im laufe der woche noch mal)
				(VC melde)
				(NF bei ihnen))[01;36m)[00m
		(ADVX und dann)))
Step:Single Word Phrase
{'subtrees': ['ART'], 'family': ['NX', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ART',), 'right siblings': [(NX (NX (NN ende)) (NX (ART der) (NN abreise)))], 'left siblings': [], 'auto preterminal span': (27, 28), 'span': (27, 28), 'parent': 'MF', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK wurde)
			(MF ich)
			(VC sagen)
			[01;31m(NF[00m
				(SIMPX
					(VF dann)
					(LK nehme)
					(MF ich das))[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(LK kann)
			(MF ich)[01;31m)[00m
		(DM also)
		(DM wie gesagt)
		(SIMPX [01;33m(SIMPX (SIMPX[00m
			(VF ich)
			(LK war)
			(MF noch nicht ganz sicher)
			[01;31m(NF[00m
				[01;31m(C[00m
					(NX
						(PWS was))[01;31m)[00m
				(MF den ende) [01;33mSIMPX)[00m
				(NX der) [01;33mSIMPX)[00m
				(SIMPX was das ende der abreise anging)[01;31m)[00m)
		[01;36m(NF[00m
			(SIMPX
				(C das)
				(MF ich mich im laufe der woche noch mal)
				(VC melde)
				(NF bei ihnen))[01;36m)[00m
		(ADVX und dann)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'DM', 'SIMPX', 'NF', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'PRF', 'APPRART', 'NN', 'ART', 'NN', 'ADV', 'ADV', 'VVFIN', 'APPR', 'PPER'), 'right siblings': [(ADVX (KON und) (ADVX (ADV dann)))], 'left siblings': [(DM (PTKANT ja)), (DM (ITJ gut)), (SIMPX (VF (ADVX (ADV dann))) (LK (VXFIN (VAFIN wurde))) (MF (NX (PPER ich))) (VC (VXINF (VVINF sagen))) (NF (SIMPX (VF (ADVX (ADV dann))) (LK (VXFIN (VVFIN nehme))) (MF (NX (PPER ich)) (NX (PDS das)))))), (SIMPX (KOORD (KON und)) (LK (VXFIN (VMFIN kann))) (MF (NX (PPER ich)))), (DM (ADVX (ADV also))), (DM (SIMPX (C (KOUS wie)) (VC (VXINF (VVPP gesagt))))), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VAFIN war))) (MF (ADVX (ADVX (ADV noch)) (PTKNEG nicht)) (ADJX (ADVX (ADV ganz)) (ADJD sicher))) (NF (C (NX (PWS was))) (MF (NX (ART den) (NX (NN ende)))) (NX (ART der)) (SIMPX (C (NX (PWS was))) (MF (NX (ART das)) (NX (NX (NN ende)) (NX (ART der) (NN abreise)))) (VC (VXFIN (VVFIN anging))))))], 'auto preterminal span': (32, 44), 'span': (32, 44), 'parent': 'TURN', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK wurde)
			(MF ich)
			(VC sagen)
			[01;31m(NF[00m
				(SIMPX
					(VF dann)
					(LK nehme)
					(MF ich das))[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(LK kann)
			(MF ich)[01;31m)[00m
		(DM also)
		(DM wie gesagt)
		(SIMPX [01;33m(SIMPX (SIMPX[00m
			(VF ich)
			(LK war)
			(MF noch nicht ganz sicher)
			[01;31m(NF[00m
				[01;31m(C[00m
					(NX
						(PWS was))[01;31m)[00m
				(MF den ende) [01;33mSIMPX)[00m
				(NX der) [01;33mSIMPX)[00m
				(SIMPX was das ende der abreise anging)[01;31m)[00m)
		(NF das ich mich im laufe der woche noch mal melde bei ihnen)
		(ADVX und dann)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'VC', 'NF'], 'family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'DM', 'SIMPX', 'NF', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'ADV', 'VAFIN', 'PPER', 'VVINF', 'ADV', 'VVFIN', 'PPER', 'PDS', 'KON', 'VMFIN', 'PPER', 'ADV', 'KOUS', 'VVPP', 'PPER', 'VAFIN', 'ADV', 'PTKNEG', 'ADV', 'ADJD', 'PWS', 'ART', 'NN', 'ART', 'PWS', 'ART', 'NN', 'ART', 'NN', 'VVFIN', 'KOUS', 'PPER', 'PRF', 'APPRART', 'NN', 'ART', 'NN', 'ADV', 'ADV', 'VVFIN', 'APPR', 'PPER', 'KON', 'ADV'), 'right siblings': ['SIMPX', 'DM', 'DM', 'SIMPX', 'NF', 'ADVX'], 'parent': 'TURN', 'auto preterminal span': (0, 46), 'span': (2, 10), 'left siblings': ['DM', 'DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		(VF dann)
		(LK wurde)
		(MF ich)
		(VC sagen)
		[01;31m(NF[00m
			(SIMPX
				(VF dann)
				(LK nehme)
				(MF ich das))[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(LK kann)
			(MF ich)[01;31m)[00m
		(DM also)
		(DM wie gesagt)
		(SIMPX [01;33m(SIMPX (SIMPX[00m
			(VF ich)
			(LK war)
			(MF noch nicht ganz sicher)
			[01;31m(NF[00m
				[01;31m(C[00m
					(NX
						(PWS was))[01;31m)[00m
				(MF den ende) [01;33mSIMPX)[00m
				(NX der) [01;33mSIMPX)[00m
				(SIMPX was das ende der abreise anging)[01;31m)[00m)
		(NF das ich mich im laufe der woche noch mal melde bei ihnen)
		(ADVX und dann)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['DM', 'DM', 'VF', 'LK', 'MF', 'VC', 'NF', 'SIMPX', 'DM', 'DM', 'SIMPX', 'NF', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'ADV', 'VAFIN', 'PPER', 'VVINF', 'ADV', 'VVFIN', 'PPER', 'PDS', 'KON', 'VMFIN', 'PPER', 'ADV', 'KOUS', 'VVPP', 'PPER', 'VAFIN', 'ADV', 'PTKNEG', 'ADV', 'ADJD', 'PWS', 'ART', 'NN', 'ART', 'PWS', 'ART', 'NN', 'ART', 'NN', 'VVFIN', 'KOUS', 'PPER', 'PRF', 'APPRART', 'NN', 'ART', 'NN', 'ADV', 'ADV', 'VVFIN', 'APPR', 'PPER', 'KON', 'ADV'), 'right siblings': ['SIMPX', 'DM', 'DM', 'SIMPX', 'NF', 'ADVX'], 'parent': 'TURN', 'auto preterminal span': (0, 46), 'span': (6, 10), 'left siblings': ['DM', 'DM', 'VF', 'LK', 'MF', 'VC'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		(VF dann)
		(LK wurde)
		(MF ich)
		(VC sagen)
		(SIMPX dann nehme ich das)
		[01;31m(SIMPX[00m
			(KOORD und)
			(LK kann)
			(MF ich)[01;31m)[00m
		(DM also)
		(DM wie gesagt)
		(SIMPX [01;33m(SIMPX (SIMPX[00m
			(VF ich)
			(LK war)
			(MF noch nicht ganz sicher)
			[01;31m(NF[00m
				[01;31m(C[00m
					(NX
						(PWS was))[01;31m)[00m
				(MF den ende) [01;33mSIMPX)[00m
				(NX der) [01;33mSIMPX)[00m
				(SIMPX was das ende der abreise anging)[01;31m)[00m)
		(NF das ich mich im laufe der woche noch mal melde bei ihnen)
		(ADVX und dann)))
Step:UNSET remove
{'subtrees': ['KOORD', 'LK', 'MF'], 'family': ['DM', 'DM', 'VF', 'LK', 'MF', 'VC', 'SIMPX', 'SIMPX', 'DM', 'DM', 'SIMPX', 'NF', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'ADV', 'VAFIN', 'PPER', 'VVINF', 'ADV', 'VVFIN', 'PPER', 'PDS', 'KON', 'VMFIN', 'PPER', 'ADV', 'KOUS', 'VVPP', 'PPER', 'VAFIN', 'ADV', 'PTKNEG', 'ADV', 'ADJD', 'PWS', 'ART', 'NN', 'ART', 'PWS', 'ART', 'NN', 'ART', 'NN', 'VVFIN', 'KOUS', 'PPER', 'PRF', 'APPRART', 'NN', 'ART', 'NN', 'ADV', 'ADV', 'VVFIN', 'APPR', 'PPER', 'KON', 'ADV'), 'right siblings': ['DM', 'DM', 'SIMPX', 'NF', 'ADVX'], 'parent': 'TURN', 'auto preterminal span': (0, 46), 'span': (10, 13), 'left siblings': ['DM', 'DM', 'VF', 'LK', 'MF', 'VC', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		(VF dann)
		(LK wurde)
		(MF ich)
		(VC sagen)
		(SIMPX dann nehme ich das)
		(KOORD und)
		(LK kann)
		(MF ich)
		(DM also)
		(DM wie gesagt)
		(SIMPX [01;33m(SIMPX (SIMPX[00m
			(VF ich)
			(LK war)
			(MF noch nicht ganz sicher)
			[01;31m(NF[00m
				[01;31m(C[00m
					(NX
						(PWS was))[01;31m)[00m
				(MF den ende) [01;33mSIMPX)[00m
				(NX der) [01;33mSIMPX)[00m
				(SIMPX was das ende der abreise anging)[01;31m)[00m)
		(NF das ich mich im laufe der woche noch mal melde bei ihnen)
		(ADVX und dann)))
Step:Unary
{'subtrees': ['NX'], 'family': ['C', 'MF', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PWS', 'ART', 'NN', 'ART', 'PWS', 'ART', 'NN', 'ART', 'NN', 'VVFIN'), 'right siblings': ['MF', 'NX', 'SIMPX'], 'parent': 'NF', 'auto preterminal span': (22, 32), 'span': (22, 23), 'left siblings': [], 'label': 'C', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		(VF dann)
		(LK wurde)
		(MF ich)
		(VC sagen)
		(SIMPX dann nehme ich das)
		(KOORD und)
		(LK kann)
		(MF ich)
		(DM also)
		(DM wie gesagt)
		(SIMPX [01;33m(SIMPX (SIMPX[00m
			(VF ich)
			(LK war)
			(MF noch nicht ganz sicher)
			[01;31m(NF[00m
				(NX was)
				(MF den ende) [01;33mSIMPX)[00m
				(NX der) [01;33mSIMPX)[00m
				(SIMPX was das ende der abreise anging)[01;31m)[00m)
		(NF das ich mich im laufe der woche noch mal melde bei ihnen)
		(ADVX und dann)))
Step:Clause Attachment
{'subtrees': ['NX', 'MF', 'NX', 'SIMPX'], 'family': ['VF', 'LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'ADV', 'PTKNEG', 'ADV', 'ADJD', 'PWS', 'ART', 'NN', 'ART', 'PWS', 'ART', 'NN', 'ART', 'NN', 'VVFIN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (16, 32), 'span': (22, 32), 'left siblings': ['VF', 'LK', 'MF'], 'label': 'NF', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		(VF dann)
		(LK wurde)
		(MF ich)
		(VC sagen)
		(SIMPX dann nehme ich das)
		(KOORD und)
		(LK kann)
		(MF ich)
		(DM also)
		(DM wie gesagt)
		(SIMPX
			[01;36m(SIMPX[00m
				[01;36m(SIMPX[00m
					(VF ich)
					(LK war)
					(MF noch nicht ganz sicher)
					(NX was)
					(MF den ende)[01;36m)[00m
				(NX der)[01;36m)[00m
			(SIMPX was das ende der abreise anging))
		(NF das ich mich im laufe der woche noch mal melde bei ihnen)
		(ADVX und dann)))
Step:UNSET add
{'subtrees': ['VF', 'LK', 'MF', 'NX', 'MF'], 'family': ['SIMPX', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'ADV', 'PTKNEG', 'ADV', 'ADJD', 'PWS', 'ART', 'NN'), 'right siblings': [(NX (ART der)), (SIMPX (C (NX (PWS was))) (MF (NX (ART das)) (NX (NX (NN ende)) (NX (ART der) (NN abreise)))) (VC (VXFIN (VVFIN anging))))], 'left siblings': [], 'auto preterminal span': (16, 25), 'span': (16, 25), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		(VF dann)
		(LK wurde)
		(MF ich)
		(VC sagen)
		(SIMPX dann nehme ich das)
		(KOORD und)
		(LK kann)
		(MF ich)
		(DM also)
		(DM wie gesagt)
		(SIMPX
			[01;36m(SIMPX[00m
				(SIMPX ich war noch nicht ganz sicher was den ende)
				(NX der)[01;36m)[00m
			(SIMPX was das ende der abreise anging))
		(NF das ich mich im laufe der woche noch mal melde bei ihnen)
		(ADVX und dann)))
Step:UNSET add
{'subtrees': ['SIMPX', 'NX'], 'family': ['SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'ADV', 'PTKNEG', 'ADV', 'ADJD', 'PWS', 'ART', 'NN', 'ART'), 'right siblings': [(SIMPX (C (NX (PWS was))) (MF (NX (ART das)) (NX (NX (NN ende)) (NX (ART der) (NN abreise)))) (VC (VXFIN (VVFIN anging))))], 'left siblings': [], 'auto preterminal span': (16, 26), 'span': (16, 26), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP ja gut dann wurde ich sagen dann nehme ich das und kann ich also wie gesagt ich war noch nicht ganz sicher was den ende der was das ende der abreise anging das ich mich im laufe der woche noch mal melde bei ihnen und dann)

Sentence 575:
2 Initial errors
0 on fringe, 2 iterations
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM wunderbar)
		(DM wunderbar)
		(DM ja)
		[01;31m(DM[00m
			[01;31m(NX[00m
				(ADVX dann)
				(NX alles gute)[01;31m)[00m[01;31m)[00m
		(SIMPX und ich melde mich dann in den nachsten wochen noch mal)))
Step:Unary
{'subtrees': ['NX'], 'family': ['DM', 'DM', 'DM', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ITJ', 'PTKANT', 'ADV', 'PIS', 'NN', 'KON', 'PPER', 'VVFIN', 'PRF', 'ADV', 'APPR', 'ART', 'ADJA', 'NN', 'ADV', 'ADV'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 17), 'span': (3, 6), 'left siblings': ['DM', 'DM', 'DM'], 'label': 'DM', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM wunderbar)
		(DM wunderbar)
		(DM ja)
		[01;31m(NX[00m
			(ADVX dann)
			(NX alles gute)[01;31m)[00m
		(SIMPX und ich melde mich dann in den nachsten wochen noch mal)))
Step:UNSET remove
{'subtrees': ['ADVX', 'NX'], 'family': ['DM', 'DM', 'DM', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ITJ', 'PTKANT', 'ADV', 'PIS', 'NN', 'KON', 'PPER', 'VVFIN', 'PRF', 'ADV', 'APPR', 'ART', 'ADJA', 'NN', 'ADV', 'ADV'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 17), 'span': (3, 6), 'left siblings': ['DM', 'DM', 'DM'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP wunderbar wunderbar ja dann alles gute und ich melde mich dann in den nachsten wochen noch mal)

Sentence 576:
0 Initial errors
0 on fringe, 0 iterations

Sentence 577:
8 Initial errors
0 on fringe, 5 iterations
3 Error:UNSET move
2 Error:Single Word Phrase
1 Error:Single Word Phrase
1 Error:Unary
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX das durfte kein problem sein)
		(DM also)
		(SIMPX die zugverbindungen sind wunderbar)
		(SIMPX naturlich konnen sie auch fliegen)
		(DM wobei)
		(SIMPX
			(VF da)
			(LK wurde)
			(MF
				(NX ich)
				(NX ihnen)
				[01;31m(PX[00m
					(PROP von)[01;31m)[00m)
			[01;36m(NX[00m [01;31m(VC[00m
				[01;31m(VXINF[00m
					(VVINF abraten)[01;31m)[00m[01;31m)[00m[01;36m)[00m)
		[01;36m(SIMPX[00m
			(SIMPX das lohnt sich nicht bis hannover)
			[01;31m(SIMPX[00m
				[01;31m(KOORD[00m
					(KON oder)[01;31m)[00m
				[01;36m(SIMPX[00m
					(LK mochten)
					(MF sie das)[01;36m)[00m[01;31m)[00m[01;36m)[00m))
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['DM', 'SIMPX', 'DM', 'SIMPX', 'SIMPX', 'DM', 'SIMPX', 'SIMPX', 'KOORD', 'SIMPX'], 'mover info': [('KOORD', (29, 30))], 'old_family': ['KOORD', 'LK', 'MF'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'PDS', 'VMFIN', 'PIAT', 'NN', 'VAINF', 'ADV', 'ART', 'NN', 'VAFIN', 'ADJD', 'ADV', 'VMFIN', 'PPER', 'ADV', 'VVINF', 'PWAV', 'ADV', 'VAFIN', 'PPER', 'PPER', 'PROP', 'VVINF', 'PDS', 'VVFIN', 'PRF', 'PTKNEG', 'APPR', 'NE', 'KON', 'VMFIN', 'PPER', 'PDS'), 'start right siblings': ['LK', 'MF'], 'end left siblings': ['DM', 'SIMPX', 'DM', 'SIMPX', 'SIMPX', 'DM', 'SIMPX', 'SIMPX'], 'auto preterminal span': (0, 33), 'adding node already present': False, 'movers': ['KOORD'], 'old_parent': 'SIMPX', 'POS confusion': ('KON', 'KON'), 'added and moved': True, 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'SIMPX'}
(TOP
	(TURN
		(DM ja)
		(SIMPX das durfte kein problem sein)
		(DM also)
		(SIMPX die zugverbindungen sind wunderbar)
		(SIMPX naturlich konnen sie auch fliegen)
		(DM wobei)
		(SIMPX
			(VF da)
			(LK wurde)
			(MF
				(NX ich)
				(NX ihnen)
				[01;31m(PX[00m
					(PROP von)[01;31m)[00m)
			[01;36m(NX[00m [01;31m(VC[00m
				[01;31m(VXINF[00m
					(VVINF abraten)[01;31m)[00m[01;31m)[00m[01;36m)[00m)
		(SIMPX
			(SIMPX das lohnt sich nicht bis hannover)
			[01;31m(KOORD[00m
				(KON oder)[01;31m)[00m
			(SIMPX mochten sie das))))
Step:Single Word Phrase
{'family': ['NX'], 'auto preterminal span': (22, 23), 'span': (22, 23), 'subtrees': ['VVINF'], 'parent': 'VC', 'over_word': True, 'auto preterminals': ('VVINF',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VXINF', 'NX')}
(TOP
	(TURN
		(DM ja)
		(SIMPX das durfte kein problem sein)
		(DM also)
		(SIMPX die zugverbindungen sind wunderbar)
		(SIMPX naturlich konnen sie auch fliegen)
		(DM wobei)
		(SIMPX
			(VF da)
			(LK wurde)
			(MF
				(NX ich)
				(NX ihnen)
				[01;31m(PX[00m
					(PROP von)[01;31m)[00m)
			[01;31m(VC[00m
				(NX
					(VVINF abraten))[01;31m)[00m)
		(SIMPX
			(SIMPX das lohnt sich nicht bis hannover)
			[01;31m(KOORD[00m
				(KON oder)[01;31m)[00m
			(SIMPX mochten sie das))))
Step:Single Word Phrase
{'subtrees': ['PROP'], 'family': ['NX', 'NX', 'PX'], 'over_word': True, 'over words': True, 'auto preterminals': ('PPER', 'PPER', 'PROP'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (19, 22), 'span': (21, 22), 'left siblings': ['NX', 'NX'], 'label': 'PX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX das durfte kein problem sein)
		(DM also)
		(SIMPX die zugverbindungen sind wunderbar)
		(SIMPX naturlich konnen sie auch fliegen)
		(DM wobei)
		(SIMPX
			(VF da)
			(LK wurde)
			(MF ich ihnen von)
			[01;31m(VC[00m
				(NX
					(VVINF abraten))[01;31m)[00m)
		(SIMPX
			(SIMPX das lohnt sich nicht bis hannover)
			[01;31m(KOORD[00m
				(KON oder)[01;31m)[00m
			(SIMPX mochten sie das))))
Step:Unary
{'subtrees': ['NX'], 'family': ['VF', 'LK', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'PPER', 'PROP', 'VVINF'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (17, 23), 'span': (22, 23), 'left siblings': ['VF', 'LK', 'MF'], 'label': 'VC', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX das durfte kein problem sein)
		(DM also)
		(SIMPX die zugverbindungen sind wunderbar)
		(SIMPX naturlich konnen sie auch fliegen)
		(DM wobei)
		(SIMPX da wurde ich ihnen von abraten)
		(SIMPX
			(SIMPX das lohnt sich nicht bis hannover)
			[01;31m(KOORD[00m
				(KON oder)[01;31m)[00m
			(SIMPX mochten sie das))))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['SIMPX', 'KOORD', 'SIMPX'], 'over_word': True, 'over words': True, 'auto preterminals': ('PDS', 'VVFIN', 'PRF', 'PTKNEG', 'APPR', 'NE', 'KON', 'VMFIN', 'PPER', 'PDS'), 'right siblings': ['SIMPX'], 'parent': 'SIMPX', 'auto preterminal span': (23, 33), 'span': (29, 30), 'left siblings': ['SIMPX'], 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP ja das durfte kein problem sein also die zugverbindungen sind wunderbar naturlich konnen sie auch fliegen wobei da wurde ich ihnen von abraten das lohnt sich nicht bis hannover oder mochten sie das)

Sentence 578:
15 Initial errors
0 on fringe, 9 iterations
3 Error:PP Attachment
2 Error:Different label
2 Error:Single Word Phrase
2 Error:Single Word Phrase
2 Error:Modifier Attachment
1 Error:Modifier Attachment
1 Error:Single Word Phrase
1 Error:Unary
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM naturlich)
		(SIMPX den kann ich ihnen buchen)
		(SIMPX ich schaue mal nach)
		(SIMPX da ist auch noch was frei)
		(SIMPX und wo mochten sie denn wohnen)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(LK haben)
				[01;31m(MF[00m
					(NX sie)
					(ADVX da)
					(ADVX schon)[01;31m)[00m
				[01;36m(ADVX[00m [01;31m(VC[00m
					[01;31m(VXINF[00m
						(VVPP uberlegt)[01;31m)[00m[01;31m)[00m[01;36m)[00m
				[01;31m(NF[00m [01;33m(PX[00m
					[01;31m(PX[00m
						(APPR in)
						[01;31m(NX[00m
							(NX was) [01;33mPX)[00m
							(PX fur eine art von hotel)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
			[01;31m(ADJX[00m
				[01;36m(ADVX[00m [01;31m(ADJX[00m
					(ADJD teuer)[01;31m)[00m[01;36m)[00m
				[01;36m(ADVX[00m [01;31m(ADJX[00m
					(ADJD billig)[01;31m)[00m[01;36m)[00m
				(ADJX zentral)[01;31m)[00m[01;36m)[00m))
Step:PP Attachment
{'new_parent': 'ADJX', 'new_family': ['PX', 'ADJX', 'ADJX', 'ADJX'], 'mover info': [('PX', (30, 35))], 'old_family': ['NX', 'PX'], 'start left siblings': ['NX'], 'auto preterminals': ('PTKANT', 'ITJ', 'PDS', 'VMFIN', 'PPER', 'PPER', 'VVINF', 'PPER', 'VVFIN', 'ADV', 'PTKVZ', 'ADV', 'VAFIN', 'ADV', 'ADV', 'PIS', 'ADJD', 'KON', 'PWAV', 'VMFIN', 'PPER', 'ADV', 'VVINF', 'VAFIN', 'PPER', 'ADV', 'ADV', 'VVPP', 'APPR', 'PWS', 'APPR', 'ART', 'NN', 'APPR', 'NN', 'ADJD', 'ADJD', 'ADJD'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 38), 'movers': ['PX'], 'old_parent': 'NX', 'end right siblings': ['ADJX', 'ADJX', 'ADJX'], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(DM naturlich)
		(SIMPX den kann ich ihnen buchen)
		(SIMPX ich schaue mal nach)
		(SIMPX da ist auch noch was frei)
		(SIMPX und wo mochten sie denn wohnen)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(LK haben)
				[01;31m(MF[00m
					(NX sie)
					(ADVX da)
					(ADVX schon)[01;31m)[00m
				[01;36m(ADVX[00m [01;31m(VC[00m
					[01;31m(VXINF[00m
						(VVPP uberlegt)[01;31m)[00m[01;31m)[00m[01;36m)[00m
				[01;31m(NF[00m
					(PX
						(APPR in)
						(NX was))[01;31m)[00m[01;31m)[00m
			[01;31m(ADJX[00m
				(PX fur eine art von hotel)
				[01;36m(ADVX[00m [01;31m(ADJX[00m
					(ADJD teuer)[01;31m)[00m[01;36m)[00m
				[01;36m(ADVX[00m [01;31m(ADJX[00m
					(ADJD billig)[01;31m)[00m[01;36m)[00m
				(ADJX zentral)[01;31m)[00m[01;36m)[00m))
Step:Different label
{'family': ['LK', 'MF', 'ADVX', 'NF'], 'auto preterminal span': (27, 28), 'span': (27, 28), 'subtrees': ['VXINF'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('VVPP',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('VC', 'ADVX')}
(TOP
	(TURN
		(DM ja)
		(DM naturlich)
		(SIMPX den kann ich ihnen buchen)
		(SIMPX ich schaue mal nach)
		(SIMPX da ist auch noch was frei)
		(SIMPX und wo mochten sie denn wohnen)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(LK haben)
				[01;31m(MF[00m
					(NX sie)
					(ADVX da)
					(ADVX schon)[01;31m)[00m
				(ADVX
					[01;31m(VXINF[00m
						(VVPP uberlegt)[01;31m)[00m)
				[01;31m(NF[00m
					(PX
						(APPR in)
						(NX was))[01;31m)[00m[01;31m)[00m
			[01;31m(ADJX[00m
				(PX fur eine art von hotel)
				[01;36m(ADVX[00m [01;31m(ADJX[00m
					(ADJD teuer)[01;31m)[00m[01;36m)[00m
				[01;36m(ADVX[00m [01;31m(ADJX[00m
					(ADJD billig)[01;31m)[00m[01;36m)[00m
				(ADJX zentral)[01;31m)[00m[01;36m)[00m))
Step:Single Word Phrase
{'family': ['PX', 'ADVX', 'ADJX', 'ADJX'], 'auto preterminal span': (35, 36), 'span': (35, 36), 'subtrees': ['ADJD'], 'parent': 'ADJX', 'over_word': True, 'auto preterminals': ('ADJD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'ADVX')}
(TOP
	(TURN
		(DM ja)
		(DM naturlich)
		(SIMPX den kann ich ihnen buchen)
		(SIMPX ich schaue mal nach)
		(SIMPX da ist auch noch was frei)
		(SIMPX und wo mochten sie denn wohnen)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(LK haben)
				[01;31m(MF[00m
					(NX sie)
					(ADVX da)
					(ADVX schon)[01;31m)[00m
				(ADVX
					[01;31m(VXINF[00m
						(VVPP uberlegt)[01;31m)[00m)
				[01;31m(NF[00m
					(PX
						(APPR in)
						(NX was))[01;31m)[00m[01;31m)[00m
			[01;31m(ADJX[00m
				(PX fur eine art von hotel)
				(ADVX teuer)
				[01;36m(ADVX[00m [01;31m(ADJX[00m
					(ADJD billig)[01;31m)[00m[01;36m)[00m
				(ADJX zentral)[01;31m)[00m[01;36m)[00m))
Step:Single Word Phrase
{'family': ['PX', 'ADVX', 'ADVX', 'ADJX'], 'auto preterminal span': (36, 37), 'span': (36, 37), 'subtrees': ['ADJD'], 'parent': 'ADJX', 'over_word': True, 'auto preterminals': ('ADJD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'ADVX')}
(TOP
	(TURN
		(DM ja)
		(DM naturlich)
		(SIMPX den kann ich ihnen buchen)
		(SIMPX ich schaue mal nach)
		(SIMPX da ist auch noch was frei)
		(SIMPX und wo mochten sie denn wohnen)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(LK haben)
				[01;31m(MF[00m
					(NX sie)
					(ADVX da)
					(ADVX schon)[01;31m)[00m
				(ADVX
					[01;31m(VXINF[00m
						(VVPP uberlegt)[01;31m)[00m)
				[01;31m(NF[00m
					(PX
						(APPR in)
						(NX was))[01;31m)[00m[01;31m)[00m
			[01;31m(ADJX[00m
				(PX fur eine art von hotel)
				(ADVX teuer)
				(ADVX billig)
				(ADJX zentral)[01;31m)[00m[01;36m)[00m))
Step:Modifier Attachment
{'new_parent': 'SIMPX', 'new_family': ['LK', 'MF', 'ADVX', 'NF', 'ADJX'], 'mover info': [('ADJX', (30, 38))], 'old_family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'ADJX'], 'start left siblings': ['DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'auto preterminals': ('PTKANT', 'ITJ', 'PDS', 'VMFIN', 'PPER', 'PPER', 'VVINF', 'PPER', 'VVFIN', 'ADV', 'PTKVZ', 'ADV', 'VAFIN', 'ADV', 'ADV', 'PIS', 'ADJD', 'KON', 'PWAV', 'VMFIN', 'PPER', 'ADV', 'VVINF', 'VAFIN', 'PPER', 'ADV', 'ADV', 'VVPP', 'APPR', 'PWS', 'APPR', 'ART', 'NN', 'APPR', 'NN', 'ADJD', 'ADJD', 'ADJD'), 'start right siblings': [], 'end left siblings': ['LK', 'MF', 'ADVX', 'NF'], 'auto preterminal span': (0, 38), 'movers': ['ADJX'], 'old_parent': 'TURN', 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(DM naturlich)
		(SIMPX den kann ich ihnen buchen)
		(SIMPX ich schaue mal nach)
		(SIMPX da ist auch noch was frei)
		(SIMPX und wo mochten sie denn wohnen)
		(SIMPX
			(LK haben)
			[01;31m(MF[00m
				(NX sie)
				(ADVX da)
				(ADVX schon)[01;31m)[00m
			(ADVX
				[01;31m(VXINF[00m
					(VVPP uberlegt)[01;31m)[00m)
			[01;31m(NF[00m
				(PX
					(APPR in)
					(NX was))[01;31m)[00m
			[01;31m(ADJX[00m
				(PX fur eine art von hotel)
				(ADVX teuer)
				(ADVX billig)
				(ADJX zentral)[01;31m)[00m)))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADVX', 'ADVX'], 'family': ['LK', 'MF', 'ADVX', 'NF', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'PPER', 'ADV', 'ADV', 'VVPP', 'APPR', 'PWS', 'APPR', 'ART', 'NN', 'APPR', 'NN', 'ADJD', 'ADJD', 'ADJD'), 'right siblings': ['ADVX', 'NF', 'ADJX'], 'parent': 'SIMPX', 'auto preterminal span': (23, 38), 'span': (24, 27), 'left siblings': ['LK'], 'label': 'MF', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM naturlich)
		(SIMPX den kann ich ihnen buchen)
		(SIMPX ich schaue mal nach)
		(SIMPX da ist auch noch was frei)
		(SIMPX und wo mochten sie denn wohnen)
		(SIMPX
			(LK haben)
			(NX sie)
			(ADVX da)
			(ADVX schon)
			(ADVX
				[01;31m(VXINF[00m
					(VVPP uberlegt)[01;31m)[00m)
			[01;31m(NF[00m
				(PX
					(APPR in)
					(NX was))[01;31m)[00m
			[01;31m(ADJX[00m
				(PX fur eine art von hotel)
				(ADVX teuer)
				(ADVX billig)
				(ADJX zentral)[01;31m)[00m)))
Step:Single Word Phrase
{'subtrees': ['VVPP'], 'family': ['VXINF'], 'over_word': True, 'over words': True, 'auto preterminals': ('VVPP',), 'right siblings': [], 'parent': 'ADVX', 'auto preterminal span': (27, 28), 'span': (27, 28), 'left siblings': [], 'label': 'VXINF', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM naturlich)
		(SIMPX den kann ich ihnen buchen)
		(SIMPX ich schaue mal nach)
		(SIMPX da ist auch noch was frei)
		(SIMPX und wo mochten sie denn wohnen)
		(SIMPX
			(LK haben)
			(NX sie)
			(ADVX da)
			(ADVX schon)
			(ADVX uberlegt)
			[01;31m(NF[00m
				(PX
					(APPR in)
					(NX was))[01;31m)[00m
			[01;31m(ADJX[00m
				(PX fur eine art von hotel)
				(ADVX teuer)
				(ADVX billig)
				(ADJX zentral)[01;31m)[00m)))
Step:Unary
{'subtrees': ['PX'], 'family': ['LK', 'NX', 'ADVX', 'ADVX', 'ADVX', 'NF', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'PPER', 'ADV', 'ADV', 'VVPP', 'APPR', 'PWS', 'APPR', 'ART', 'NN', 'APPR', 'NN', 'ADJD', 'ADJD', 'ADJD'), 'right siblings': ['ADJX'], 'parent': 'SIMPX', 'auto preterminal span': (23, 38), 'span': (28, 30), 'left siblings': ['LK', 'NX', 'ADVX', 'ADVX', 'ADVX'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM naturlich)
		(SIMPX den kann ich ihnen buchen)
		(SIMPX ich schaue mal nach)
		(SIMPX da ist auch noch was frei)
		(SIMPX und wo mochten sie denn wohnen)
		(SIMPX
			(LK haben)
			(NX sie)
			(ADVX da)
			(ADVX schon)
			(ADVX uberlegt)
			(PX in was)
			[01;31m(ADJX[00m
				(PX fur eine art von hotel)
				(ADVX teuer)
				(ADVX billig)
				(ADJX zentral)[01;31m)[00m)))
Step:Modifier Attachment
{'subtrees': ['PX', 'ADVX', 'ADVX', 'ADJX'], 'family': ['LK', 'NX', 'ADVX', 'ADVX', 'ADVX', 'PX', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'PPER', 'ADV', 'ADV', 'VVPP', 'APPR', 'PWS', 'APPR', 'ART', 'NN', 'APPR', 'NN', 'ADJD', 'ADJD', 'ADJD'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (23, 38), 'span': (30, 38), 'left siblings': ['LK', 'NX', 'ADVX', 'ADVX', 'ADVX', 'PX'], 'label': 'ADJX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP ja naturlich den kann ich ihnen buchen ich schaue mal nach da ist auch noch was frei und wo mochten sie denn wohnen haben sie da schon uberlegt in was fur eine art von hotel teuer billig zentral)

Sentence 579:
6 Initial errors
0 on fringe, 4 iterations
2 Error:Single Word Phrase
2 Error:Modifier Attachment
1 Error:NP Internal Structure
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(NX
			(ART das)
			[01;31m(NX[00m
				(NX zentralhotel)
				[01;31m(NX[00m
					(NE kaiserhof)[01;31m)[00m[01;31m)[00m)
		(DM ja)
		(SIMPX das ist auch ein sehr schones hotel)
		(DM also)
		(SIMPX
			(LK ist)
			(MF auch mit aufenthaltsraumen und konferenzraumen)
			(NF
				(SIMPX
					(C wenn)
					(MF
						(NX sie)
						[01;31m(ADVX[00m
							[01;36m(ADVX[00m [01;31m(ADJX[00m
								(ADJD geschaftlich)[01;31m)[00m[01;36m)[00m
							[01;36m(ADVX[00m
								(ADV unterwegs)[01;36m)[00m[01;31m)[00m)
					(VC sind))))))
Step:Single Word Phrase
{'family': ['ADVX', 'ADV'], 'auto preterminal span': (20, 21), 'span': (20, 21), 'subtrees': ['ADJD'], 'parent': 'ADVX', 'over_word': True, 'auto preterminals': ('ADJD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'ADVX')}
(TOP
	(TURN
		(NX
			(ART das)
			[01;31m(NX[00m
				(NX zentralhotel)
				[01;31m(NX[00m
					(NE kaiserhof)[01;31m)[00m[01;31m)[00m)
		(DM ja)
		(SIMPX das ist auch ein sehr schones hotel)
		(DM also)
		(SIMPX
			(LK ist)
			(MF auch mit aufenthaltsraumen und konferenzraumen)
			(NF
				(SIMPX
					(C wenn)
					(MF
						(NX sie)
						[01;31m(ADVX[00m
							(ADVX geschaftlich)
							[01;36m(ADVX[00m
								(ADV unterwegs)[01;36m)[00m[01;31m)[00m)
					(VC sind))))))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'ADVX', 'ADVX'], 'mover info': [('ADVX', (20, 21))], 'old_family': ['ADVX', 'ADV'], 'start left siblings': [], 'auto preterminals': ('PPER', 'ADJD', 'ADV'), 'start right siblings': ['ADV'], 'end left siblings': ['NX'], 'auto preterminal span': (19, 22), 'movers': ['ADVX'], 'old_parent': 'ADVX', 'POS confusion': ('ADJD', 'ADJD'), 'end right siblings': ['ADVX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(NX
			(ART das)
			[01;31m(NX[00m
				(NX zentralhotel)
				[01;31m(NX[00m
					(NE kaiserhof)[01;31m)[00m[01;31m)[00m)
		(DM ja)
		(SIMPX das ist auch ein sehr schones hotel)
		(DM also)
		(SIMPX ist auch mit aufenthaltsraumen und konferenzraumen wenn sie geschaftlich unterwegs sind)))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['ART', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NE', 'NE'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (0, 3), 'span': (1, 3), 'left siblings': ['ART'], 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'remove'}
(TOP
	(TURN
		(NX
			(ART das)
			(NX zentralhotel)
			[01;31m(NX[00m
				(NE kaiserhof)[01;31m)[00m)
		(DM ja)
		(SIMPX das ist auch ein sehr schones hotel)
		(DM also)
		(SIMPX ist auch mit aufenthaltsraumen und konferenzraumen wenn sie geschaftlich unterwegs sind)))
Step:Single Word Phrase
{'subtrees': ['NE'], 'family': ['ART', 'NX', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ART', 'NE', 'NE'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (0, 3), 'span': (2, 3), 'left siblings': ['ART', 'NX'], 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP das zentralhotel kaiserhof ja das ist auch ein sehr schones hotel also ist auch mit aufenthaltsraumen und konferenzraumen wenn sie geschaftlich unterwegs sind)

Sentence 580:
0 Initial errors
0 on fringe, 0 iterations

Sentence 581:
7 Initial errors
0 on fringe, 4 iterations
2 Error:Single Word Phrase
2 Error:Modifier Attachment
2 Error:Modifier Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM guten tag)
		(SIMPX
			(VF ich)
			(LK bin)
			(MF
				[01;31m(NX[00m
					(NX frau bartels)
					(PX [01;33m(PX[00m
						(APPRART vom)
						[01;31m(NX[00m
							[01;31m(NX[00m
								(NX reiseburo) [01;33mPX)[00m
								[01;36m(ADJX[00m [01;31m(NX[00m [01;33m(ADJX[00m
									(NE zentral)[01;31m)[00m[01;36m)[00m[01;31m)[00m
							(PX in hannover)[01;31m)[00m)[01;31m)[00m)))) [01;33mADJX)[00m
Step:Single Word Phrase
{'family': ['NX', 'ADJX'], 'auto preterminal span': (8, 9), 'span': (8, 9), 'subtrees': ['NE'], 'parent': 'NX', 'over_word': True, 'auto preterminals': ('NE',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('NX', 'ADJX')}
(TOP
	(TURN
		(DM guten tag)
		(SIMPX
			(VF ich)
			(LK bin)
			(MF
				[01;31m(NX[00m
					(NX frau bartels)
					(PX [01;33m(PX[00m
						(APPRART vom)
						[01;31m(NX[00m
							[01;31m(NX[00m
								(NX reiseburo) [01;33mPX)[00m
								[01;33m(ADJX[00m (ADJX zentral)[01;31m)[00m
							(PX in hannover)[01;31m)[00m)[01;31m)[00m)))) [01;33mADJX)[00m
Step:Modifier Attachment
{'new_parent': 'NX', 'new_family': ['NX', 'ADJX', 'PX'], 'mover info': [('ADJX', (8, 9))], 'old_family': ['NX', 'ADJX'], 'start left siblings': ['NX'], 'auto preterminals': ('NN', 'NE', 'APPR', 'NE'), 'start right siblings': [], 'end left siblings': ['NX'], 'auto preterminal span': (7, 11), 'adding node already present': False, 'movers': ['ADJX'], 'old_parent': 'NX', 'POS confusion': ('NE', 'NE'), 'added and moved': True, 'end right siblings': ['PX'], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'ADJX'}
(TOP
	(TURN
		(DM guten tag)
		(SIMPX
			(VF ich)
			(LK bin)
			(MF
				[01;31m(NX[00m
					(NX frau bartels)
					(PX [01;33m(PX[00m
						(APPRART vom)
						[01;31m(NX[00m
							(NX reiseburo) [01;33mPX)[00m
							(ADJX zentral in hannover)[01;31m)[00m)[01;31m)[00m))))
Step:Modifier Attachment
{'new_parent': 'NX', 'new_family': ['NX', 'PX', 'ADJX'], 'mover info': [('ADJX', (8, 11))], 'old_family': ['NX', 'ADJX'], 'start left siblings': ['NX'], 'auto preterminals': ('NN', 'NE', 'APPRART', 'NN', 'NE', 'APPR', 'NE'), 'start right siblings': [], 'end left siblings': ['NX', 'PX'], 'auto preterminal span': (4, 11), 'adding node already present': False, 'movers': ['ADJX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'PX'}
(TOP
	(TURN
		(DM guten tag)
		(SIMPX
			(VF ich)
			(LK bin)
			(MF
				[01;31m(NX[00m
					(NX frau bartels)
					(PX vom reiseburo zentral in hannover)[01;31m)[00m))))
Step:Unary
{'subtrees': ['NX', 'PX'], 'family': ['NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'NE', 'APPRART', 'NN', 'NE', 'APPR', 'NE'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (4, 11), 'span': (4, 11), 'left siblings': [], 'label': 'NX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP guten tag ich bin frau bartels vom reiseburo zentral in hannover)

Sentence 582:
6 Initial errors
0 on fringe, 3 iterations
3 Error:NP Attachment
2 Error:NP Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF eines der hotels)
			(LK ist)
			(MF [01;33m(NX[00m
				(NX
					(ART das)
					[01;31m(NX[00m
						(NX grandhotel) [01;33mNX)[00m
						(NX musmann)[01;31m)[00m)))
		(SIMPX das liegt sehr zentral)
		(SIMPX
			(VF und platze haben die auch noch)
			(LK sehe)
			[01;31m(MF[00m
				(NX
					(PPER ich))[01;31m)[00m)
		(DM ja)
		(SIMPX
			(LK kostet)
			(MF
				(ADVX dann)
				[01;36m(NX[00m
					[01;33m(NX[00m (NX einzelzimmer)
					[01;31m(NX[00m
						(NX dreihundert funfzig) [01;33mNX)[00m
						(NX die nacht)[01;31m)[00m[01;36m)[00m))))
Step:NP Attachment
{'new_parent': 'NX', 'new_family': ['NX', 'NX', 'NX'], 'mover info': [('NX', (23, 24))], 'old_family': ['ADVX', 'NX', 'NX'], 'start left siblings': ['ADVX'], 'auto preterminals': ('ADV', 'NN', 'CARD', 'CARD', 'ART', 'NN'), 'start right siblings': ['NX'], 'end left siblings': [], 'auto preterminal span': (22, 28), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'MF', 'POS confusion': ('NN', 'NN'), 'added and moved': True, 'end right siblings': ['NX', 'NX'], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF eines der hotels)
			(LK ist)
			(MF [01;33m(NX[00m
				(NX
					(ART das)
					[01;31m(NX[00m
						(NX grandhotel) [01;33mNX)[00m
						(NX musmann)[01;31m)[00m)))
		(SIMPX das liegt sehr zentral)
		(SIMPX
			(VF und platze haben die auch noch)
			(LK sehe)
			[01;31m(MF[00m
				(NX
					(PPER ich))[01;31m)[00m)
		(DM ja)
		(SIMPX kostet dann einzelzimmer dreihundert funfzig die nacht)))
Step:NP Attachment
{'new_parent': 'NX', 'new_family': ['ART', 'NX', 'NX'], 'mover info': [('NX', (6, 7))], 'old_family': ['NX', 'NX'], 'start left siblings': [], 'auto preterminals': ('ART', 'NE', 'NE'), 'start right siblings': ['NX'], 'end left siblings': ['ART'], 'auto preterminal span': (5, 8), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'NX', 'POS confusion': ('NE', 'NE'), 'added and moved': True, 'end right siblings': ['NX'], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(DM ja)
		(SIMPX eines der hotels ist das grandhotel musmann)
		(SIMPX das liegt sehr zentral)
		(SIMPX
			(VF und platze haben die auch noch)
			(LK sehe)
			[01;31m(MF[00m
				(NX
					(PPER ich))[01;31m)[00m)
		(DM ja)
		(SIMPX kostet dann einzelzimmer dreihundert funfzig die nacht)))
Step:Unary
{'subtrees': ['NX'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'NN', 'VAFIN', 'PDS', 'ADV', 'ADV', 'VVFIN', 'PPER'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (12, 20), 'span': (19, 20), 'left siblings': ['VF', 'LK'], 'label': 'MF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja eines der hotels ist das grandhotel musmann das liegt sehr zentral und platze haben die auch noch sehe ich ja kostet dann einzelzimmer dreihundert funfzig die nacht)

Sentence 583:
0 Initial errors
0 on fringe, 0 iterations

Sentence 584:
13 Initial errors
0 on fringe, 8 iterations
3 Error:UNSET move
2 Error:Different label
2 Error:Different label
2 Error:Co-ordination
1 Error:UNSET add
1 Error:NP Internal Structure
1 Error:PP Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX dreieinhalb stunden fahren sie)
		(SIMPX
			(SIMPX kommen dann am hauptbahnhof an)
			[01;36m(SIMPX[00m
				(KON und)
				[01;36m(LKMVC[00m [01;31m(SIMPX[00m
					(LK konnen)
					(MF ja dann ein taxi)
					(VC nehmen)[01;31m)[00m[01;36m)[00m[01;36m)[00m
			(KON und)
			[01;36m(LKM[00m [01;31m(SIMPX[00m
				(LK kommen)
				(MF direkt zum hotel)[01;31m)[00m[01;36m)[00m)
		(DM ja)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF dann)
				(LK buche)
				[01;33m(MF[00m (MF ich das fur sie)[01;31m)[00m
			[01;31m(DM[00m [01;33m(NX[00m
				(NX
					(NN herr)
					[01;31m(NX[00m
						(NE obrowski) [01;33mNX)[00m
						(KON und)
						[01;36m(NX[00m
							(NE oborski)[01;36m)[00m[01;31m)[00m)[01;31m)[00m [01;33mMF)[00m[01;36m)[00m
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK muste)
			(MF
				(NX ich)
				[01;36m(PX[00m
					(ADVX nur)
					(PX von ihnen)[01;36m)[00m
				(ADVX noch)
				(NX die kontonummer))
			(VC haben)
			(NF und die formalitaten))))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'DM'], 'mover info': [('DM', (28, 32))], 'old_family': ['SIMPX', 'SIMPX', 'DM', 'SIMPX', 'DM', 'SIMPX'], 'start left siblings': ['SIMPX', 'SIMPX', 'DM', 'SIMPX'], 'auto preterminals': ('CARD', 'NN', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'APPRART', 'NN', 'PTKVZ', 'KON', 'VMFIN', 'ADV', 'ADV', 'ART', 'NN', 'VVINF', 'KON', 'VVFIN', 'ADV', 'APPRART', 'NN', 'PTKANT', 'ADV', 'VVFIN', 'PPER', 'PDS', 'APPR', 'PPER', 'NN', 'NE', 'KON', 'NE', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'APPR', 'PPER', 'ADV', 'ART', 'NN', 'VAINF', 'KON', 'ART', 'NN'), 'start right siblings': ['SIMPX'], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (0, 46), 'adding node already present': False, 'movers': ['DM'], 'old_parent': 'TURN', 'added and moved': True, 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'PX'}
(TOP
	(TURN
		(SIMPX dreieinhalb stunden fahren sie)
		(SIMPX
			(SIMPX kommen dann am hauptbahnhof an)
			[01;36m(SIMPX[00m
				(KON und)
				[01;36m(LKMVC[00m [01;31m(SIMPX[00m
					(LK konnen)
					(MF ja dann ein taxi)
					(VC nehmen)[01;31m)[00m[01;36m)[00m[01;36m)[00m
			(KON und)
			[01;36m(LKM[00m [01;31m(SIMPX[00m
				(LK kommen)
				(MF direkt zum hotel)[01;31m)[00m[01;36m)[00m)
		(DM ja)
		(SIMPX
			(VF dann)
			(LK buche)
			(MF
				(MF ich das fur sie)
				[01;31m(DM[00m [01;33m(NX[00m
					(NX
						(NN herr)
						[01;31m(NX[00m
							(NE obrowski) [01;33mNX)[00m
							(KON und)
							[01;36m(NX[00m
								(NE oborski)[01;36m)[00m[01;31m)[00m)[01;31m)[00m))
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK muste)
			(MF
				(NX ich)
				[01;36m(PX[00m
					(ADVX nur)
					(PX von ihnen)[01;36m)[00m
				(ADVX noch)
				(NX die kontonummer))
			(VC haben)
			(NF und die formalitaten))))
Step:Different label
{'family': ['SIMPX', 'KON', 'LKMVC', 'KON', 'SIMPX'], 'auto preterminal span': (10, 16), 'span': (10, 16), 'subtrees': ['LK', 'MF', 'VC'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('VMFIN', 'ADV', 'ADV', 'ART', 'NN', 'VVINF'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('SIMPX', 'LKMVC')}
(TOP
	(TURN
		(SIMPX dreieinhalb stunden fahren sie)
		(SIMPX
			(SIMPX kommen dann am hauptbahnhof an)
			[01;36m(SIMPX[00m
				(KON und)
				(LKMVC konnen ja dann ein taxi nehmen)[01;36m)[00m
			(KON und)
			[01;36m(LKM[00m [01;31m(SIMPX[00m
				(LK kommen)
				(MF direkt zum hotel)[01;31m)[00m[01;36m)[00m)
		(DM ja)
		(SIMPX
			(VF dann)
			(LK buche)
			(MF
				(MF ich das fur sie)
				[01;31m(DM[00m [01;33m(NX[00m
					(NX
						(NN herr)
						[01;31m(NX[00m
							(NE obrowski) [01;33mNX)[00m
							(KON und)
							[01;36m(NX[00m
								(NE oborski)[01;36m)[00m[01;31m)[00m)[01;31m)[00m))
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK muste)
			(MF
				(NX ich)
				[01;36m(PX[00m
					(ADVX nur)
					(PX von ihnen)[01;36m)[00m
				(ADVX noch)
				(NX die kontonummer))
			(VC haben)
			(NF und die formalitaten))))
Step:Different label
{'family': ['SIMPX', 'KON', 'LKMVC', 'KON', 'LKM'], 'auto preterminal span': (17, 21), 'span': (17, 21), 'subtrees': ['LK', 'MF'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('VVFIN', 'ADV', 'APPRART', 'NN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('SIMPX', 'LKM')}
(TOP
	(TURN
		(SIMPX dreieinhalb stunden fahren sie)
		(SIMPX
			(SIMPX kommen dann am hauptbahnhof an)
			[01;36m(SIMPX[00m
				(KON und)
				(LKMVC konnen ja dann ein taxi nehmen)[01;36m)[00m
			(KON und)
			(LKM kommen direkt zum hotel))
		(DM ja)
		(SIMPX
			(VF dann)
			(LK buche)
			(MF
				(MF ich das fur sie)
				[01;31m(DM[00m [01;33m(NX[00m
					(NX
						(NN herr)
						[01;31m(NX[00m
							(NE obrowski) [01;33mNX)[00m
							(KON und)
							[01;36m(NX[00m
								(NE oborski)[01;36m)[00m[01;31m)[00m)[01;31m)[00m))
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK muste)
			(MF
				(NX ich)
				[01;36m(PX[00m
					(ADVX nur)
					(PX von ihnen)[01;36m)[00m
				(ADVX noch)
				(NX die kontonummer))
			(VC haben)
			(NF und die formalitaten))))
Step:Co-ordination
{'new_parent': 'NX', 'new_family': ['NN', 'NE', 'KON', 'NX'], 'mover info': [('NE', (29, 30)), ('KON', (30, 31))], 'old_family': ['NE', 'KON', 'NE'], 'start left siblings': [], 'auto preterminals': ('NN', 'NE', 'KON', 'NE'), 'start right siblings': ['NE'], 'end left siblings': ['NN'], 'auto preterminal span': (28, 32), 'movers': ['NE', 'KON'], 'old_parent': 'NX', 'end right siblings': ['NX'], 'classified_type': 'Co-ordination', 'type': 'move'}
(TOP
	(TURN
		(SIMPX dreieinhalb stunden fahren sie)
		(SIMPX
			(SIMPX kommen dann am hauptbahnhof an)
			[01;36m(SIMPX[00m
				(KON und)
				(LKMVC konnen ja dann ein taxi nehmen)[01;36m)[00m
			(KON und)
			(LKM kommen direkt zum hotel))
		(DM ja)
		(SIMPX
			(VF dann)
			(LK buche)
			(MF
				(MF ich das fur sie)
				[01;31m(DM[00m
					(NX
						[01;36m(NX[00m
							(NN herr)
							(NE obrowski)[01;36m)[00m
						(KON und)
						(NX oborski))[01;31m)[00m))
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK muste)
			(MF
				(NX ich)
				[01;36m(PX[00m
					(ADVX nur)
					(PX von ihnen)[01;36m)[00m
				(ADVX noch)
				(NX die kontonummer))
			(VC haben)
			(NF und die formalitaten))))
Step:UNSET add
{'subtrees': ['KON', 'LKMVC'], 'family': ['SIMPX', 'SIMPX', 'KON', 'LKM'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'VMFIN', 'ADV', 'ADV', 'ART', 'NN', 'VVINF'), 'right siblings': [(KON und), (LKM (LK (VXFIN (VVFIN kommen))) (MF (PX (ADVX (ADV direkt)) (APPRART zum) (NX (NN hotel)))))], 'left siblings': [(SIMPX (LK (VXFIN (VVFIN kommen))) (MF (ADVX (ADV dann)) (PX (APPRART am) (NX (NN hauptbahnhof)))) (VC (PTKVZ an)))], 'auto preterminal span': (9, 16), 'span': (9, 16), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SIMPX dreieinhalb stunden fahren sie)
		(SIMPX kommen dann am hauptbahnhof an und konnen ja dann ein taxi nehmen und kommen direkt zum hotel)
		(DM ja)
		(SIMPX
			(VF dann)
			(LK buche)
			(MF
				(MF ich das fur sie)
				[01;31m(DM[00m
					(NX
						[01;36m(NX[00m
							(NN herr)
							(NE obrowski)[01;36m)[00m
						(KON und)
						(NX oborski))[01;31m)[00m))
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK muste)
			(MF
				(NX ich)
				[01;36m(PX[00m
					(ADVX nur)
					(PX von ihnen)[01;36m)[00m
				(ADVX noch)
				(NX die kontonummer))
			(VC haben)
			(NF und die formalitaten))))
Step:NP Internal Structure
{'subtrees': ['NN', 'NE'], 'family': ['NX', 'KON', 'NX'], 'over_word': False, 'over words': True, 'auto preterminals': ('NN', 'NE'), 'right siblings': [(KON und), (NX (NE oborski))], 'left siblings': [], 'auto preterminal span': (28, 30), 'span': (28, 30), 'parent': 'NX', 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'add'}
(TOP
	(TURN
		(SIMPX dreieinhalb stunden fahren sie)
		(SIMPX kommen dann am hauptbahnhof an und konnen ja dann ein taxi nehmen und kommen direkt zum hotel)
		(DM ja)
		(SIMPX
			(VF dann)
			(LK buche)
			(MF
				(MF ich das fur sie)
				[01;31m(DM[00m
					(NX
						(NX herr obrowski)
						(KON und)
						(NX oborski))[01;31m)[00m))
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK muste)
			(MF
				(NX ich)
				[01;36m(PX[00m
					(ADVX nur)
					(PX von ihnen)[01;36m)[00m
				(ADVX noch)
				(NX die kontonummer))
			(VC haben)
			(NF und die formalitaten))))
Step:PP Attachment
{'subtrees': ['ADVX', 'PX'], 'family': ['NX', 'PX', 'ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'APPR', 'PPER'), 'right siblings': [(ADVX (ADV noch)), (NX (ART die) (NN kontonummer))], 'left siblings': [(NX (PPER ich))], 'auto preterminal span': (36, 39), 'span': (36, 39), 'parent': 'MF', 'label': 'PX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(SIMPX dreieinhalb stunden fahren sie)
		(SIMPX kommen dann am hauptbahnhof an und konnen ja dann ein taxi nehmen und kommen direkt zum hotel)
		(DM ja)
		(SIMPX
			(VF dann)
			(LK buche)
			(MF
				(MF ich das fur sie)
				[01;31m(DM[00m
					(NX
						(NX herr obrowski)
						(KON und)
						(NX oborski))[01;31m)[00m))
		(SIMPX und dann muste ich nur von ihnen noch die kontonummer haben und die formalitaten)))
Step:Unary
{'subtrees': ['NX'], 'family': ['MF', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'PDS', 'APPR', 'PPER', 'NN', 'NE', 'KON', 'NE'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (24, 32), 'span': (28, 32), 'left siblings': ['MF'], 'label': 'DM', 'classified_type': 'Unary', 'type': 'remove'}
(TOP dreieinhalb stunden fahren sie kommen dann am hauptbahnhof an und konnen ja dann ein taxi nehmen und kommen direkt zum hotel ja dann buche ich das fur sie herr obrowski und oborski und dann muste ich nur von ihnen noch die kontonummer haben und die formalitaten)

Sentence 585:
8 Initial errors
0 on fringe, 5 iterations
3 Error:Co-ordination
2 Error:Co-ordination
1 Error:Single Word Phrase
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX dann schicke ich ihnen die quittung zu)
		[01;31m(DM[00m
			[01;36m(DM[00m
				(KON und)[01;36m)[00m
			[01;36m(DM[00m
				(PTKANT ja)[01;36m)[00m[01;31m)[00m
		(SIMPX dann verbleibe ich so)
		[01;31m(DM[00m
			[01;31m(NX[00m
				(NX vielen dank)
				[01;33m(PX[00m (PX fur die buchung)[01;31m)[00m[01;31m)[00m
		[01;31m(DM[00m
			[01;31m(PX[00m
				(KON und)
				(PX auf wiederhoren)[01;31m)[00m[01;31m)[00m)) [01;33mPX)[00m
Step:Co-ordination
{'new_parent': 'PX', 'new_family': ['PX', 'KON', 'PX'], 'mover info': [('PX', (15, 18))], 'old_family': ['NX', 'PX'], 'start left siblings': ['NX'], 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'PPER', 'ART', 'NN', 'PTKVZ', 'KON', 'PTKANT', 'ADV', 'VVFIN', 'PPER', 'ADV', 'PIDAT', 'NN', 'APPR', 'ART', 'NN', 'KON', 'APPR', 'NN'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 21), 'movers': ['PX'], 'old_parent': 'NX', 'end right siblings': ['KON', 'PX'], 'classified_type': 'Co-ordination', 'type': 'move'}
(TOP
	(TURN
		(SIMPX dann schicke ich ihnen die quittung zu)
		[01;31m(DM[00m
			[01;36m(DM[00m
				(KON und)[01;36m)[00m
			[01;36m(DM[00m
				(PTKANT ja)[01;36m)[00m[01;31m)[00m
		(SIMPX dann verbleibe ich so)
		[01;31m(DM[00m
			(NX
				(PIDAT vielen)
				(NN dank))[01;31m)[00m
		[01;31m(DM[00m
			(PX
				(PX fur die buchung)
				(KON und)
				(PX auf wiederhoren))[01;31m)[00m))
Step:Co-ordination
{'new_parent': 'TURN', 'new_family': ['SIMPX', 'KON', 'DM', 'SIMPX', 'DM', 'DM'], 'mover info': [('KON', (7, 8))], 'old_family': ['KON', 'PTKANT'], 'start left siblings': [], 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'PPER', 'ART', 'NN', 'PTKVZ', 'KON', 'PTKANT', 'ADV', 'VVFIN', 'PPER', 'ADV', 'PIDAT', 'NN', 'APPR', 'ART', 'NN', 'KON', 'APPR', 'NN'), 'start right siblings': ['PTKANT'], 'end left siblings': ['SIMPX'], 'auto preterminal span': (0, 21), 'movers': ['KON'], 'old_parent': 'DM', 'POS confusion': ('KON', 'KON'), 'end right siblings': ['DM', 'SIMPX', 'DM', 'DM'], 'classified_type': 'Co-ordination', 'type': 'move'}
(TOP
	(TURN
		(SIMPX dann schicke ich ihnen die quittung zu)
		[01;36m(DM[00m
			(KON und)[01;36m)[00m
		(DM ja)
		(SIMPX dann verbleibe ich so)
		[01;31m(DM[00m
			(NX
				(PIDAT vielen)
				(NN dank))[01;31m)[00m
		[01;31m(DM[00m
			(PX
				(PX fur die buchung)
				(KON und)
				(PX auf wiederhoren))[01;31m)[00m))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['SIMPX', 'DM', 'DM', 'SIMPX', 'DM', 'DM'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON',), 'right siblings': [(DM (PTKANT ja)), (SIMPX (VF (ADVX (ADV dann))) (LK (VXFIN (VVFIN verbleibe))) (MF (NX (PPER ich)) (ADVX (ADV so)))), (DM (NX (PIDAT vielen) (NN dank))), (DM (PX (PX (APPR fur) (NX (ART die) (NN buchung))) (KON und) (PX (APPR auf) (NX (NN wiederhoren)))))], 'left siblings': [(SIMPX (VF (ADVX (ADV dann))) (LK (VXFIN (VVFIN schicke))) (MF (NX (PPER ich)) (NX (PPER ihnen)) (NX (ART die) (NN quittung))) (VC (PTKVZ zu)))], 'auto preterminal span': (7, 8), 'span': (7, 8), 'parent': 'TURN', 'label': 'DM', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SIMPX dann schicke ich ihnen die quittung zu)
		(DM und)
		(DM ja)
		(SIMPX dann verbleibe ich so)
		[01;31m(DM[00m
			(NX
				(PIDAT vielen)
				(NN dank))[01;31m)[00m
		[01;31m(DM[00m
			(PX
				(PX fur die buchung)
				(KON und)
				(PX auf wiederhoren))[01;31m)[00m))
Step:Unary
{'subtrees': ['NX'], 'family': ['SIMPX', 'DM', 'DM', 'SIMPX', 'DM', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'PPER', 'ART', 'NN', 'PTKVZ', 'KON', 'PTKANT', 'ADV', 'VVFIN', 'PPER', 'ADV', 'PIDAT', 'NN', 'APPR', 'ART', 'NN', 'KON', 'APPR', 'NN'), 'right siblings': ['DM'], 'parent': 'TURN', 'auto preterminal span': (0, 21), 'span': (13, 15), 'left siblings': ['SIMPX', 'DM', 'DM', 'SIMPX'], 'label': 'DM', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX dann schicke ich ihnen die quittung zu)
		(DM und)
		(DM ja)
		(SIMPX dann verbleibe ich so)
		(NX vielen dank)
		[01;31m(DM[00m
			(PX
				(PX fur die buchung)
				(KON und)
				(PX auf wiederhoren))[01;31m)[00m))
Step:Unary
{'subtrees': ['PX'], 'family': ['SIMPX', 'DM', 'DM', 'SIMPX', 'NX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'PPER', 'ART', 'NN', 'PTKVZ', 'KON', 'PTKANT', 'ADV', 'VVFIN', 'PPER', 'ADV', 'PIDAT', 'NN', 'APPR', 'ART', 'NN', 'KON', 'APPR', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 21), 'span': (15, 21), 'left siblings': ['SIMPX', 'DM', 'DM', 'SIMPX', 'NX'], 'label': 'DM', 'classified_type': 'Unary', 'type': 'remove'}
(TOP dann schicke ich ihnen die quittung zu und ja dann verbleibe ich so vielen dank fur die buchung und auf wiederhoren)

Sentence 586:
4 Initial errors
0 on fringe, 4 iterations
1 Error:UNSET remove
1 Error:Single Word Phrase
1 Error:UNSET remove
1 Error:NP Internal Structure
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM schonen guten tag)
		(SIMPX hier spricht matthias oborski)
		(SIMPX ich wollte sie fragen wegen einer geschaftsreise nach hannover)
		[01;31m(SIMPX[00m
			(VF und zwar)
			(LK muste)
			(MF ich im august vom funfzehnten bis zum siebzehnten in hannover)
			(VC sein)[01;31m)[00m
		(SIMPX
			(KOORD und)
			(VF ich)
			(LK hatte)
			[01;31m(VC[00m
				(PTKVZ vor)[01;31m)[00m
			(NF
				(SIMPX
					(MF
						(PX mit dem zug)
						(PX
							[01;31m(PX[00m
								(APPR ab)
								[01;33m(NX[00m (NX bonn)[01;31m)[00m
							(NX hannover))) [01;33mNX)[00m
					(VC zu fahren))))))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADJA', 'ADJA', 'NN', 'ADV', 'VVFIN', 'NE', 'NE', 'PPER', 'VMFIN', 'PPER', 'VVINF', 'APPR', 'ART', 'NN', 'APPR', 'NE', 'KON', 'ADV', 'VMFIN', 'PPER', 'APPRART', 'NN', 'APPRART', 'NN', 'APPR', 'APPRART', 'NN', 'APPR', 'NE', 'VAINF', 'KON', 'PPER', 'VAFIN', 'PTKVZ', 'APPR', 'ART', 'NN', 'APPR', 'NE', 'NE', 'PTKZU', 'VVINF'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 43), 'span': (17, 31), 'left siblings': ['DM', 'DM', 'SIMPX', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM schonen guten tag)
		(SIMPX hier spricht matthias oborski)
		(SIMPX ich wollte sie fragen wegen einer geschaftsreise nach hannover)
		(VF und zwar)
		(LK muste)
		(MF ich im august vom funfzehnten bis zum siebzehnten in hannover)
		(VC sein)
		(SIMPX
			(KOORD und)
			(VF ich)
			(LK hatte)
			[01;31m(VC[00m
				(PTKVZ vor)[01;31m)[00m
			(NF
				(SIMPX
					(MF
						(PX mit dem zug)
						(PX
							[01;31m(PX[00m
								(APPR ab)
								[01;33m(NX[00m (NX bonn)[01;31m)[00m
							(NX hannover))) [01;33mNX)[00m
					(VC zu fahren))))))
Step:Single Word Phrase
{'subtrees': ['PTKVZ'], 'family': ['KOORD', 'VF', 'LK', 'VC', 'NF'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON', 'PPER', 'VAFIN', 'PTKVZ', 'APPR', 'ART', 'NN', 'APPR', 'NE', 'NE', 'PTKZU', 'VVINF'), 'right siblings': ['NF'], 'parent': 'SIMPX', 'auto preterminal span': (31, 43), 'span': (34, 35), 'left siblings': ['KOORD', 'VF', 'LK'], 'label': 'VC', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM schonen guten tag)
		(SIMPX hier spricht matthias oborski)
		(SIMPX ich wollte sie fragen wegen einer geschaftsreise nach hannover)
		(VF und zwar)
		(LK muste)
		(MF ich im august vom funfzehnten bis zum siebzehnten in hannover)
		(VC sein)
		(SIMPX
			(KOORD und)
			(VF ich)
			(LK hatte)
			(PTKVZ vor)
			(NF
				(SIMPX
					(MF
						(PX mit dem zug)
						(PX
							[01;31m(PX[00m
								(APPR ab)
								[01;33m(NX[00m (NX bonn)[01;31m)[00m
							(NX hannover))) [01;33mNX)[00m
					(VC zu fahren))))))
Step:UNSET remove
{'subtrees': ['APPR', 'NX'], 'family': ['PX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'NE', 'NE'), 'right siblings': ['NX'], 'parent': 'PX', 'auto preterminal span': (38, 41), 'span': (38, 40), 'left siblings': [], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM schonen guten tag)
		(SIMPX hier spricht matthias oborski)
		(SIMPX ich wollte sie fragen wegen einer geschaftsreise nach hannover)
		(VF und zwar)
		(LK muste)
		(MF ich im august vom funfzehnten bis zum siebzehnten in hannover)
		(VC sein)
		(SIMPX
			(KOORD und)
			(VF ich)
			(LK hatte)
			(PTKVZ vor)
			(NF
				(SIMPX
					(MF
						(PX mit dem zug)
						(PX
							(APPR ab)
							[01;36m(NX[00m
								(NX bonn)
								(NX hannover)[01;36m)[00m))
					(VC zu fahren))))))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['APPR', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NE', 'NE'), 'right siblings': [], 'left siblings': [(APPR ab)], 'auto preterminal span': (39, 41), 'span': (39, 41), 'parent': 'PX', 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'add'}
(TOP ja schonen guten tag hier spricht matthias oborski ich wollte sie fragen wegen einer geschaftsreise nach hannover und zwar muste ich im august vom funfzehnten bis zum siebzehnten in hannover sein und ich hatte vor mit dem zug ab bonn hannover zu fahren)

Sentence 587:
2 Initial errors
0 on fringe, 2 iterations
1 Error:UNSET add
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			[01;36m(PX[00m
				(KOORD und)
				[01;31m(LV[00m
					(PX
						(APPR mit)
						(NX der zugverbindung))[01;31m)[00m[01;36m)[00m
			(VF wie lange)
			(LK wird)
			(MF das)
			(VC dauern))))
Step:UNSET add
{'subtrees': ['KOORD', 'LV'], 'family': ['PX', 'VF', 'LK', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'APPR', 'ART', 'NN'), 'right siblings': [(VF (ADJX (ADVX (PWAV wie)) (ADJD lange))), (LK (VXFIN (VAFIN wird))), (MF (NX (PDS das))), (VC (VXINF (VVINF dauern)))], 'left siblings': [], 'auto preterminal span': (1, 5), 'span': (1, 5), 'parent': 'SIMPX', 'label': 'PX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(PX
				(KOORD und)
				[01;31m(LV[00m
					(PX
						(APPR mit)
						(NX der zugverbindung))[01;31m)[00m)
			(VF wie lange)
			(LK wird)
			(MF das)
			(VC dauern))))
Step:Unary
{'subtrees': ['PX'], 'family': ['KOORD', 'LV'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'APPR', 'ART', 'NN'), 'right siblings': [], 'parent': 'PX', 'auto preterminal span': (1, 5), 'span': (2, 5), 'left siblings': ['KOORD'], 'label': 'LV', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja und mit der zugverbindung wie lange wird das dauern)

Sentence 588:
7 Initial errors
0 on fringe, 5 iterations
3 Error:PP Attachment
1 Error:Single Word Phrase
1 Error:Modifier Attachment
1 Error:Modifier Attachment
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		[01;31m(NX[00m
			(KON und)
			(NX der name)
			(ADVX noch)
			(ADVX mal)[01;31m)[00m
		[01;31m(NX[00m
			(BS o)
			(BS b)
			(BS o)
			(BS r)
			(BS s)
			(BS k)
			[01;36m(ADJX[00m
				(BS i)[01;36m)[00m[01;31m)[00m
		[01;31m(NX[00m
			[01;31m(NX[00m
				(NE matthias)[01;31m)[00m
			[01;33m(SIMPX[00m (PX mit t t h)[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK brauchen)
			(MF sie sonst noch etwas)[01;31m)[00m)) [01;33mSIMPX)[00m
Step:PP Attachment
{'new_parent': 'SIMPX', 'new_family': ['PX', 'LK', 'MF'], 'mover info': [('PX', (14, 18))], 'old_family': ['NX', 'PX'], 'start left siblings': ['NX'], 'auto preterminals': ('PTKANT', 'KON', 'ART', 'NN', 'ADV', 'ADV', 'BS', 'BS', 'BS', 'BS', 'BS', 'BS', 'BS', 'NE', 'APPR', 'BS', 'BS', 'BS', 'VVFIN', 'PPER', 'ADV', 'ADV', 'PIS'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 23), 'movers': ['PX'], 'old_parent': 'NX', 'end right siblings': ['LK', 'MF'], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		[01;31m(NX[00m
			(KON und)
			(NX der name)
			(ADVX noch)
			(ADVX mal)[01;31m)[00m
		[01;31m(NX[00m
			(BS o)
			(BS b)
			(BS o)
			(BS r)
			(BS s)
			(BS k)
			[01;36m(ADJX[00m
				(BS i)[01;36m)[00m[01;31m)[00m
		[01;31m(NX[00m
			(NE matthias)[01;31m)[00m
		(SIMPX mit t t h brauchen sie sonst noch etwas)))
Step:Single Word Phrase
{'subtrees': ['BS'], 'family': ['BS', 'BS', 'BS', 'BS', 'BS', 'BS', 'ADJX'], 'over_word': True, 'over words': True, 'auto preterminals': ('BS',), 'right siblings': [], 'left siblings': [(BS o), (BS b), (BS o), (BS r), (BS s), (BS k)], 'auto preterminal span': (12, 13), 'span': (12, 13), 'parent': 'NX', 'label': 'ADJX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		[01;31m(NX[00m
			(KON und)
			(NX der name)
			(ADVX noch)
			(ADVX mal)[01;31m)[00m
		[01;31m(NX[00m
			(BS o)
			(BS b)
			(BS o)
			(BS r)
			(BS s)
			(BS k)
			(ADJX i)[01;31m)[00m
		[01;31m(NX[00m
			(NE matthias)[01;31m)[00m
		(SIMPX mit t t h brauchen sie sonst noch etwas)))
Step:Modifier Attachment
{'subtrees': ['KON', 'NX', 'ADVX', 'ADVX'], 'family': ['DM', 'NX', 'NX', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'KON', 'ART', 'NN', 'ADV', 'ADV', 'BS', 'BS', 'BS', 'BS', 'BS', 'BS', 'BS', 'NE', 'APPR', 'BS', 'BS', 'BS', 'VVFIN', 'PPER', 'ADV', 'ADV', 'PIS'), 'right siblings': ['NX', 'NX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 23), 'span': (1, 6), 'left siblings': ['DM'], 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(KON und)
		(NX der name)
		(ADVX noch)
		(ADVX mal)
		[01;31m(NX[00m
			(BS o)
			(BS b)
			(BS o)
			(BS r)
			(BS s)
			(BS k)
			(ADJX i)[01;31m)[00m
		[01;31m(NX[00m
			(NE matthias)[01;31m)[00m
		(SIMPX mit t t h brauchen sie sonst noch etwas)))
Step:Modifier Attachment
{'subtrees': ['BS', 'BS', 'BS', 'BS', 'BS', 'BS', 'ADJX'], 'family': ['DM', 'KON', 'NX', 'ADVX', 'ADVX', 'NX', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'KON', 'ART', 'NN', 'ADV', 'ADV', 'BS', 'BS', 'BS', 'BS', 'BS', 'BS', 'BS', 'NE', 'APPR', 'BS', 'BS', 'BS', 'VVFIN', 'PPER', 'ADV', 'ADV', 'PIS'), 'right siblings': ['NX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 23), 'span': (6, 13), 'left siblings': ['DM', 'KON', 'NX', 'ADVX', 'ADVX'], 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(KON und)
		(NX der name)
		(ADVX noch)
		(ADVX mal)
		(BS o)
		(BS b)
		(BS o)
		(BS r)
		(BS s)
		(BS k)
		(ADJX i)
		[01;31m(NX[00m
			(NE matthias)[01;31m)[00m
		(SIMPX mit t t h brauchen sie sonst noch etwas)))
Step:Single Word Phrase
{'subtrees': ['NE'], 'family': ['DM', 'KON', 'NX', 'ADVX', 'ADVX', 'BS', 'BS', 'BS', 'BS', 'BS', 'BS', 'ADJX', 'NX', 'SIMPX'], 'over_word': True, 'over words': True, 'auto preterminals': ('PTKANT', 'KON', 'ART', 'NN', 'ADV', 'ADV', 'BS', 'BS', 'BS', 'BS', 'BS', 'BS', 'BS', 'NE', 'APPR', 'BS', 'BS', 'BS', 'VVFIN', 'PPER', 'ADV', 'ADV', 'PIS'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 23), 'span': (13, 14), 'left siblings': ['DM', 'KON', 'NX', 'ADVX', 'ADVX', 'BS', 'BS', 'BS', 'BS', 'BS', 'BS', 'ADJX'], 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP ja und der name noch mal o b o r s k i matthias mit t t h brauchen sie sonst noch etwas)

Sentence 589:
7 Initial errors
0 on fringe, 5 iterations
2 Error:Single Word Phrase
2 Error:NP Attachment
1 Error:Single Word Phrase
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(NX[00m
			[01;31m(NX[00m
				[01;36m(NX[00m [01;31m(ADJX[00m
					(FM first)[01;31m)[00m[01;36m)[00m
				[01;36m(VXFIN[00m
					[01;36m(LK[00m
						(FM class)[01;36m)[00m[01;36m)[00m[01;31m)[00m
			[01;36m(NX[00m
				(NN reiseburo)[01;36m)[00m[01;31m)[00m
		(DM schmidt)
		(DM guten tag)
		(SIMPX womit kann ich ihnen helfen)))
Step:Single Word Phrase
{'family': ['NX', 'FM'], 'auto preterminal span': (0, 1), 'span': (0, 1), 'subtrees': ['FM'], 'parent': 'NX', 'over_word': True, 'auto preterminals': ('FM',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'NX')}
(TOP
	(TURN
		[01;31m(NX[00m
			[01;31m(NX[00m
				(NX first)
				[01;36m(VXFIN[00m
					[01;36m(LK[00m
						(FM class)[01;36m)[00m[01;36m)[00m[01;31m)[00m
			[01;36m(NX[00m
				(NN reiseburo)[01;36m)[00m[01;31m)[00m
		(DM schmidt)
		(DM guten tag)
		(SIMPX womit kann ich ihnen helfen)))
Step:NP Attachment
{'new_parent': 'TURN', 'new_family': ['NX', 'NX', 'DM', 'DM', 'SIMPX'], 'mover info': [('NX', (0, 2))], 'old_family': ['NX', 'NN'], 'start left siblings': [], 'auto preterminals': ('FM', 'FM', 'NN', 'NE', 'ADJA', 'NN', 'PWAV', 'VMFIN', 'PPER', 'PPER', 'VVINF'), 'start right siblings': ['NN'], 'end left siblings': [], 'auto preterminal span': (0, 11), 'movers': ['NX'], 'old_parent': 'NX', 'end right siblings': ['NX', 'DM', 'DM', 'SIMPX'], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;31m(NX[00m
			(NX first)
			[01;36m(VXFIN[00m
				[01;36m(LK[00m
					(FM class)[01;36m)[00m[01;36m)[00m[01;31m)[00m
		(NX reiseburo)
		(DM schmidt)
		(DM guten tag)
		(SIMPX womit kann ich ihnen helfen)))
Step:Single Word Phrase
{'subtrees': ['FM'], 'family': ['NX', 'LK'], 'over_word': True, 'over words': True, 'auto preterminals': ('FM',), 'right siblings': [], 'left siblings': [(NX (FM first))], 'auto preterminal span': (1, 2), 'span': (1, 2), 'parent': 'NX', 'label': 'LK', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		[01;31m(NX[00m
			(NX first)
			[01;36m(VXFIN[00m
				(LK
					(FM class))[01;36m)[00m[01;31m)[00m
		(NX reiseburo)
		(DM schmidt)
		(DM guten tag)
		(SIMPX womit kann ich ihnen helfen)))
Step:Unary
{'subtrees': ['LK'], 'family': ['NX', 'VXFIN'], 'over_word': False, 'over words': False, 'auto preterminals': ('FM',), 'right siblings': [], 'left siblings': [(NX (FM first))], 'auto preterminal span': (1, 2), 'span': (1, 2), 'parent': 'NX', 'label': 'VXFIN', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		[01;31m(NX[00m
			(NX first)
			(VXFIN class)[01;31m)[00m
		(NX reiseburo)
		(DM schmidt)
		(DM guten tag)
		(SIMPX womit kann ich ihnen helfen)))
Step:UNSET remove
{'subtrees': ['NX', 'VXFIN'], 'family': ['NX', 'NX', 'DM', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('FM', 'FM', 'NN', 'NE', 'ADJA', 'NN', 'PWAV', 'VMFIN', 'PPER', 'PPER', 'VVINF'), 'right siblings': ['NX', 'DM', 'DM', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 11), 'span': (0, 2), 'left siblings': [], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP first class reiseburo schmidt guten tag womit kann ich ihnen helfen)

Sentence 590:
23 Initial errors
0 on fringe, 14 iterations
4 Error:Co-ordination
2 Error:Clause Attachment
2 Error:PP Attachment
2 Error:Clause Attachment
2 Error:PP Attachment
2 Error:Co-ordination
2 Error:Modifier Attachment
1 Error:PP Attachment
1 Error:PP Attachment
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:Unary
1 Error:Unary
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF da)
				(LK ware)
				[01;31m(MF[00m
					(ADVX noch)
					[01;36m(NX[00m
						(NX die frage)
						[01;36m(PX[00m
							(ADVX naturlich)
							(PX nach dem hotel)[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
			[01;36m(SIMPX[00m
				[01;31m(SIMPX[00m
					(C ob)
					[01;31m(MF[00m
						(NX sie)
						(NX was)[01;31m)[00m[01;31m)[00m
				(SIMPX
					[01;31m(C[00m
						[01;31m(NX[00m
							(NX was)
							[01;33m(PX[00m (PX fur einen hotelwunsch)[01;31m)[00m[01;31m)[00m
					[01;31m(MF[00m
						(NX
							(PPER sie))[01;31m)[00m [01;33mPX)[00m
					(VC haben))[01;36m)[00m[01;36m)[00m
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(C ob)
			[01;31m(MF[00m [01;33m(MF[00m
				(NX sie)
				[01;31m(ADJX[00m
					[01;36m(ADJX[00m
						(ADJX zentral)
						(KON oder)
						(PX am flughafen) [01;33mMF) SIMPX)[00m[01;36m)[00m
					(KON oder)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(DM ja)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(C wenn)
				(MF sie mit der bahn)
				(VC kommen)[01;31m)[00m
			[01;31m(PX[00m
				(ADVX dann)
				[01;36m(ADVX[00m
					(ADVX naturlich)
					[01;31m(ADVX[00m
						(PTKNEG nicht)[01;31m)[00m[01;36m)[00m
				(PX am flughafen)[01;31m)[00m[01;36m)[00m))
Step:Co-ordination
{'new_parent': 'SIMPX', 'new_family': ['C', 'MF', 'KON'], 'mover info': [('KON', (25, 26))], 'old_family': ['ADJX', 'KON', 'PX', 'KON'], 'start left siblings': ['ADJX', 'KON', 'PX'], 'auto preterminals': ('KOUS', 'PPER', 'ADJD', 'KON', 'APPRART', 'NN', 'KON'), 'start right siblings': [], 'end left siblings': ['C', 'MF'], 'auto preterminal span': (19, 26), 'movers': ['KON'], 'old_parent': 'ADJX', 'POS confusion': ('KON', 'KON'), 'end right siblings': [], 'classified_type': 'Co-ordination', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF da)
				(LK ware)
				[01;31m(MF[00m
					(ADVX noch)
					[01;36m(NX[00m
						(NX die frage)
						[01;36m(PX[00m
							(ADVX naturlich)
							(PX nach dem hotel)[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
			[01;36m(SIMPX[00m
				[01;31m(SIMPX[00m
					(C ob)
					[01;31m(MF[00m
						(NX sie)
						(NX was)[01;31m)[00m[01;31m)[00m
				(SIMPX
					[01;31m(C[00m
						[01;31m(NX[00m
							(NX was)
							[01;33m(PX[00m (PX fur einen hotelwunsch)[01;31m)[00m[01;31m)[00m
					[01;31m(MF[00m
						(NX
							(PPER sie))[01;31m)[00m [01;33mPX)[00m
					(VC haben))[01;36m)[00m[01;36m)[00m
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(C ob)
				(MF sie zentral oder am flughafen)[01;36m)[00m
			(KON oder)[01;31m)[00m
		(DM ja)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(C wenn)
				(MF sie mit der bahn)
				(VC kommen)[01;31m)[00m
			[01;31m(PX[00m
				(ADVX dann)
				[01;36m(ADVX[00m
					(ADVX naturlich)
					[01;31m(ADVX[00m
						(PTKNEG nicht)[01;31m)[00m[01;36m)[00m
				(PX am flughafen)[01;31m)[00m[01;36m)[00m))
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'SIMPX', 'SIMPX'], 'mover info': [('SIMPX', (10, 13)), ('SIMPX', (13, 19))], 'old_family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'DM', 'SIMPX', 'PX'], 'start left siblings': ['DM', 'SIMPX'], 'auto preterminals': ('PTKANT', 'ADV', 'VAFIN', 'ADV', 'ART', 'NN', 'ADV', 'APPR', 'ART', 'NN', 'KOUS', 'PPER', 'PIS', 'PWS', 'APPR', 'ART', 'NN', 'PPER', 'VAFIN', 'KOUS', 'PPER', 'ADJD', 'KON', 'APPRART', 'NN', 'KON', 'PTKANT', 'KOUS', 'PPER', 'APPR', 'ART', 'NN', 'VVFIN', 'ADV', 'ADV', 'PTKNEG', 'APPRART', 'NN'), 'start right siblings': ['SIMPX', 'DM', 'SIMPX', 'PX'], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (0, 38), 'movers': ['SIMPX', 'SIMPX'], 'old_parent': 'TURN', 'end right siblings': [], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF da)
			(LK ware)
			[01;31m(MF[00m
				(ADVX noch)
				[01;36m(NX[00m
					(NX die frage)
					[01;36m(PX[00m
						(ADVX naturlich)
						(PX nach dem hotel)[01;36m)[00m[01;36m)[00m[01;31m)[00m
			[01;36m(SIMPX[00m
				[01;31m(SIMPX[00m
					(C ob)
					[01;31m(MF[00m
						(NX sie)
						(NX was)[01;31m)[00m[01;31m)[00m
				(SIMPX
					[01;31m(C[00m
						[01;31m(NX[00m
							(NX was)
							[01;33m(PX[00m (PX fur einen hotelwunsch)[01;31m)[00m[01;31m)[00m
					[01;31m(MF[00m
						(NX
							(PPER sie))[01;31m)[00m [01;33mPX)[00m
					(VC haben))[01;36m)[00m)
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(C ob)
				(MF sie zentral oder am flughafen)[01;36m)[00m
			(KON oder)[01;31m)[00m
		(DM ja)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(C wenn)
				(MF sie mit der bahn)
				(VC kommen)[01;31m)[00m
			[01;31m(PX[00m
				(ADVX dann)
				[01;36m(ADVX[00m
					(ADVX naturlich)
					[01;31m(ADVX[00m
						(PTKNEG nicht)[01;31m)[00m[01;36m)[00m
				(PX am flughafen)[01;31m)[00m[01;36m)[00m))
Step:PP Attachment
{'new_parent': 'SIMPX', 'new_family': ['C', 'MF', 'VC', 'PX'], 'mover info': [('PX', (33, 38))], 'old_family': ['DM', 'SIMPX', 'SIMPX', 'DM', 'SIMPX', 'PX'], 'start left siblings': ['DM', 'SIMPX', 'SIMPX', 'DM', 'SIMPX'], 'auto preterminals': ('PTKANT', 'ADV', 'VAFIN', 'ADV', 'ART', 'NN', 'ADV', 'APPR', 'ART', 'NN', 'KOUS', 'PPER', 'PIS', 'PWS', 'APPR', 'ART', 'NN', 'PPER', 'VAFIN', 'KOUS', 'PPER', 'ADJD', 'KON', 'APPRART', 'NN', 'KON', 'PTKANT', 'KOUS', 'PPER', 'APPR', 'ART', 'NN', 'VVFIN', 'ADV', 'ADV', 'PTKNEG', 'APPRART', 'NN'), 'start right siblings': [], 'end left siblings': ['C', 'MF', 'VC'], 'auto preterminal span': (0, 38), 'movers': ['PX'], 'old_parent': 'TURN', 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF da)
			(LK ware)
			[01;31m(MF[00m
				(ADVX noch)
				[01;36m(NX[00m
					(NX die frage)
					[01;36m(PX[00m
						(ADVX naturlich)
						(PX nach dem hotel)[01;36m)[00m[01;36m)[00m[01;31m)[00m
			[01;36m(SIMPX[00m
				[01;31m(SIMPX[00m
					(C ob)
					[01;31m(MF[00m
						(NX sie)
						(NX was)[01;31m)[00m[01;31m)[00m
				(SIMPX
					[01;31m(C[00m
						[01;31m(NX[00m
							(NX was)
							[01;33m(PX[00m (PX fur einen hotelwunsch)[01;31m)[00m[01;31m)[00m
					[01;31m(MF[00m
						(NX
							(PPER sie))[01;31m)[00m [01;33mPX)[00m
					(VC haben))[01;36m)[00m)
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(C ob)
				(MF sie zentral oder am flughafen)[01;36m)[00m
			(KON oder)[01;31m)[00m
		(DM ja)
		(SIMPX
			(C wenn)
			(MF sie mit der bahn)
			(VC kommen)
			[01;31m(PX[00m
				(ADVX dann)
				[01;36m(ADVX[00m
					(ADVX naturlich)
					[01;31m(ADVX[00m
						(PTKNEG nicht)[01;31m)[00m[01;36m)[00m
				(PX am flughafen)[01;31m)[00m)))
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['C', 'MF', 'SIMPX'], 'mover info': [('SIMPX', (13, 19))], 'old_family': ['VF', 'LK', 'MF', 'SIMPX', 'SIMPX'], 'start left siblings': ['VF', 'LK', 'MF', 'SIMPX'], 'auto preterminals': ('ADV', 'VAFIN', 'ADV', 'ART', 'NN', 'ADV', 'APPR', 'ART', 'NN', 'KOUS', 'PPER', 'PIS', 'PWS', 'APPR', 'ART', 'NN', 'PPER', 'VAFIN'), 'start right siblings': [], 'end left siblings': ['C', 'MF'], 'auto preterminal span': (1, 19), 'movers': ['SIMPX'], 'old_parent': 'SIMPX', 'end right siblings': [], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF da)
			(LK ware)
			[01;31m(MF[00m
				(ADVX noch)
				[01;36m(NX[00m
					(NX die frage)
					[01;36m(PX[00m
						(ADVX naturlich)
						(PX nach dem hotel)[01;36m)[00m[01;36m)[00m[01;31m)[00m
			(SIMPX
				(C ob)
				[01;31m(MF[00m
					(NX sie)
					(NX was)[01;31m)[00m
				(SIMPX
					[01;31m(C[00m
						[01;31m(NX[00m
							(NX was)
							[01;33m(PX[00m (PX fur einen hotelwunsch)[01;31m)[00m[01;31m)[00m
					[01;31m(MF[00m
						(NX
							(PPER sie))[01;31m)[00m [01;33mPX)[00m
					(VC haben))))
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(C ob)
				(MF sie zentral oder am flughafen)[01;36m)[00m
			(KON oder)[01;31m)[00m
		(DM ja)
		(SIMPX
			(C wenn)
			(MF sie mit der bahn)
			(VC kommen)
			[01;31m(PX[00m
				(ADVX dann)
				[01;36m(ADVX[00m
					(ADVX naturlich)
					[01;31m(ADVX[00m
						(PTKNEG nicht)[01;31m)[00m[01;36m)[00m
				(PX am flughafen)[01;31m)[00m)))
Step:PP Attachment
{'new_parent': 'MF', 'new_family': ['PX', 'NX'], 'mover info': [('PX', (14, 17))], 'old_family': ['NX', 'PX'], 'start left siblings': ['NX'], 'auto preterminals': ('PWS', 'APPR', 'ART', 'NN', 'PPER', 'VAFIN'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (13, 19), 'adding node already present': False, 'movers': ['PX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': ['NX'], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'ADVX'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF da)
			(LK ware)
			[01;31m(MF[00m
				(ADVX noch)
				[01;36m(NX[00m
					(NX die frage)
					[01;36m(PX[00m
						(ADVX naturlich)
						(PX nach dem hotel)[01;36m)[00m[01;36m)[00m[01;31m)[00m
			(SIMPX
				(C ob)
				[01;31m(MF[00m
					(NX sie)
					(NX was)[01;31m)[00m
				(SIMPX
					[01;31m(C[00m
						(NX
							(PWS was))[01;31m)[00m
					(PX
						[01;31m(MF[00m
							(PX fur einen hotelwunsch)
							(NX sie)[01;31m)[00m)
					(VC haben))))
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(C ob)
				(MF sie zentral oder am flughafen)[01;36m)[00m
			(KON oder)[01;31m)[00m
		(DM ja)
		(SIMPX
			(C wenn)
			(MF sie mit der bahn)
			(VC kommen)
			[01;31m(PX[00m
				(ADVX dann)
				[01;36m(ADVX[00m
					(ADVX naturlich)
					[01;31m(ADVX[00m
						(PTKNEG nicht)[01;31m)[00m[01;36m)[00m
				(PX am flughafen)[01;31m)[00m)))
Step:Co-ordination
{'new_parent': 'TURN', 'new_family': ['DM', 'SIMPX', 'SIMPX', 'KON', 'DM', 'SIMPX'], 'mover info': [('KON', (25, 26))], 'old_family': ['C', 'MF', 'KON'], 'start left siblings': ['C', 'MF'], 'auto preterminals': ('PTKANT', 'ADV', 'VAFIN', 'ADV', 'ART', 'NN', 'ADV', 'APPR', 'ART', 'NN', 'KOUS', 'PPER', 'PIS', 'PWS', 'APPR', 'ART', 'NN', 'PPER', 'VAFIN', 'KOUS', 'PPER', 'ADJD', 'KON', 'APPRART', 'NN', 'KON', 'PTKANT', 'KOUS', 'PPER', 'APPR', 'ART', 'NN', 'VVFIN', 'ADV', 'ADV', 'PTKNEG', 'APPRART', 'NN'), 'start right siblings': [], 'end left siblings': ['DM', 'SIMPX', 'SIMPX'], 'auto preterminal span': (0, 38), 'movers': ['KON'], 'old_parent': 'SIMPX', 'POS confusion': ('KON', 'KON'), 'end right siblings': ['DM', 'SIMPX'], 'classified_type': 'Co-ordination', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF da)
			(LK ware)
			[01;31m(MF[00m
				(ADVX noch)
				[01;36m(NX[00m
					(NX die frage)
					[01;36m(PX[00m
						(ADVX naturlich)
						(PX nach dem hotel)[01;36m)[00m[01;36m)[00m[01;31m)[00m
			(SIMPX
				(C ob)
				[01;31m(MF[00m
					(NX sie)
					(NX was)[01;31m)[00m
				(SIMPX
					[01;31m(C[00m
						(NX
							(PWS was))[01;31m)[00m
					(PX
						[01;31m(MF[00m
							(PX fur einen hotelwunsch)
							(NX sie)[01;31m)[00m)
					(VC haben))))
		(SIMPX ob sie zentral oder am flughafen)
		(KON oder)
		(DM ja)
		(SIMPX
			(C wenn)
			(MF sie mit der bahn)
			(VC kommen)
			[01;31m(PX[00m
				(ADVX dann)
				[01;36m(ADVX[00m
					(ADVX naturlich)
					[01;31m(ADVX[00m
						(PTKNEG nicht)[01;31m)[00m[01;36m)[00m
				(PX am flughafen)[01;31m)[00m)))
Step:Modifier Attachment
{'new_parent': 'ADVX', 'new_family': ['ADVX', 'PTKNEG'], 'mover info': [('ADVX', (34, 35))], 'old_family': ['ADVX', 'ADVX', 'ADVX', 'PX'], 'start left siblings': ['ADVX'], 'auto preterminals': ('ADV', 'ADV', 'PTKNEG', 'APPRART', 'NN'), 'start right siblings': ['ADVX', 'PX'], 'end left siblings': [], 'auto preterminal span': (33, 38), 'movers': ['ADVX'], 'old_parent': 'PX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['PTKNEG'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF da)
			(LK ware)
			[01;31m(MF[00m
				(ADVX noch)
				[01;36m(NX[00m
					(NX die frage)
					[01;36m(PX[00m
						(ADVX naturlich)
						(PX nach dem hotel)[01;36m)[00m[01;36m)[00m[01;31m)[00m
			(SIMPX
				(C ob)
				[01;31m(MF[00m
					(NX sie)
					(NX was)[01;31m)[00m
				(SIMPX
					[01;31m(C[00m
						(NX
							(PWS was))[01;31m)[00m
					(PX
						[01;31m(MF[00m
							(PX fur einen hotelwunsch)
							(NX sie)[01;31m)[00m)
					(VC haben))))
		(SIMPX ob sie zentral oder am flughafen)
		(KON oder)
		(DM ja)
		(SIMPX
			(C wenn)
			(MF sie mit der bahn)
			(VC kommen)
			[01;31m(PX[00m
				(ADVX dann)
				(ADVX naturlich nicht)
				(PX am flughafen)[01;31m)[00m)))
Step:PP Attachment
{'subtrees': ['NX', 'ADVX', 'PX'], 'family': ['ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'ADV', 'APPR', 'ART', 'NN'), 'right siblings': [], 'left siblings': [(ADVX (ADV noch))], 'auto preterminal span': (4, 10), 'span': (4, 10), 'parent': 'MF', 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF da)
			(LK ware)
			[01;31m(MF[00m
				(ADVX noch)
				(NX
					(NX die frage)
					[01;36m(PX[00m
						(ADVX naturlich)
						(PX nach dem hotel)[01;36m)[00m)[01;31m)[00m
			(SIMPX
				(C ob)
				[01;31m(MF[00m
					(NX sie)
					(NX was)[01;31m)[00m
				(SIMPX
					[01;31m(C[00m
						(NX
							(PWS was))[01;31m)[00m
					(PX
						[01;31m(MF[00m
							(PX fur einen hotelwunsch)
							(NX sie)[01;31m)[00m)
					(VC haben))))
		(SIMPX ob sie zentral oder am flughafen)
		(KON oder)
		(DM ja)
		(SIMPX
			(C wenn)
			(MF sie mit der bahn)
			(VC kommen)
			[01;31m(PX[00m
				(ADVX dann)
				(ADVX naturlich nicht)
				(PX am flughafen)[01;31m)[00m)))
Step:PP Attachment
{'subtrees': ['ADVX', 'PX'], 'family': ['NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'APPR', 'ART', 'NN'), 'right siblings': [], 'left siblings': [(NX (ART die) (NN frage))], 'auto preterminal span': (6, 10), 'span': (6, 10), 'parent': 'NX', 'label': 'PX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF da)
			(LK ware)
			[01;31m(MF[00m
				(ADVX noch)
				(NX die frage naturlich nach dem hotel)[01;31m)[00m
			(SIMPX
				(C ob)
				[01;31m(MF[00m
					(NX sie)
					(NX was)[01;31m)[00m
				(SIMPX
					[01;31m(C[00m
						(NX
							(PWS was))[01;31m)[00m
					(PX
						[01;31m(MF[00m
							(PX fur einen hotelwunsch)
							(NX sie)[01;31m)[00m)
					(VC haben))))
		(SIMPX ob sie zentral oder am flughafen)
		(KON oder)
		(DM ja)
		(SIMPX
			(C wenn)
			(MF sie mit der bahn)
			(VC kommen)
			[01;31m(PX[00m
				(ADVX dann)
				(ADVX naturlich nicht)
				(PX am flughafen)[01;31m)[00m)))
Step:UNSET remove
{'subtrees': ['ADVX', 'NX'], 'family': ['VF', 'LK', 'MF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'ADV', 'ART', 'NN', 'ADV', 'APPR', 'ART', 'NN', 'KOUS', 'PPER', 'PIS', 'PWS', 'APPR', 'ART', 'NN', 'PPER', 'VAFIN'), 'right siblings': ['SIMPX'], 'parent': 'SIMPX', 'auto preterminal span': (1, 19), 'span': (3, 10), 'left siblings': ['VF', 'LK'], 'label': 'MF', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF da)
			(LK ware)
			(ADVX noch)
			(NX die frage naturlich nach dem hotel)
			(SIMPX
				(C ob)
				[01;31m(MF[00m
					(NX sie)
					(NX was)[01;31m)[00m
				(SIMPX
					[01;31m(C[00m
						(NX
							(PWS was))[01;31m)[00m
					(PX
						[01;31m(MF[00m
							(PX fur einen hotelwunsch)
							(NX sie)[01;31m)[00m)
					(VC haben))))
		(SIMPX ob sie zentral oder am flughafen)
		(KON oder)
		(DM ja)
		(SIMPX
			(C wenn)
			(MF sie mit der bahn)
			(VC kommen)
			[01;31m(PX[00m
				(ADVX dann)
				(ADVX naturlich nicht)
				(PX am flughafen)[01;31m)[00m)))
Step:UNSET remove
{'subtrees': ['NX', 'NX'], 'family': ['C', 'MF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'PIS', 'PWS', 'APPR', 'ART', 'NN', 'PPER', 'VAFIN'), 'right siblings': ['SIMPX'], 'parent': 'SIMPX', 'auto preterminal span': (10, 19), 'span': (11, 13), 'left siblings': ['C'], 'label': 'MF', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF da)
			(LK ware)
			(ADVX noch)
			(NX die frage naturlich nach dem hotel)
			(SIMPX
				(C ob)
				(NX sie)
				(NX was)
				(SIMPX
					[01;31m(C[00m
						(NX
							(PWS was))[01;31m)[00m
					(PX
						[01;31m(MF[00m
							(PX fur einen hotelwunsch)
							(NX sie)[01;31m)[00m)
					(VC haben))))
		(SIMPX ob sie zentral oder am flughafen)
		(KON oder)
		(DM ja)
		(SIMPX
			(C wenn)
			(MF sie mit der bahn)
			(VC kommen)
			[01;31m(PX[00m
				(ADVX dann)
				(ADVX naturlich nicht)
				(PX am flughafen)[01;31m)[00m)))
Step:Unary
{'subtrees': ['NX'], 'family': ['C', 'PX', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('PWS', 'APPR', 'ART', 'NN', 'PPER', 'VAFIN'), 'right siblings': ['PX', 'VC'], 'parent': 'SIMPX', 'auto preterminal span': (13, 19), 'span': (13, 14), 'left siblings': [], 'label': 'C', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF da)
			(LK ware)
			(ADVX noch)
			(NX die frage naturlich nach dem hotel)
			(SIMPX
				(C ob)
				(NX sie)
				(NX was)
				(SIMPX
					(NX was)
					(PX
						[01;31m(MF[00m
							(PX fur einen hotelwunsch)
							(NX sie)[01;31m)[00m)
					(VC haben))))
		(SIMPX ob sie zentral oder am flughafen)
		(KON oder)
		(DM ja)
		(SIMPX
			(C wenn)
			(MF sie mit der bahn)
			(VC kommen)
			[01;31m(PX[00m
				(ADVX dann)
				(ADVX naturlich nicht)
				(PX am flughafen)[01;31m)[00m)))
Step:Unary
{'subtrees': ['PX', 'NX'], 'family': ['MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NN', 'PPER'), 'right siblings': [], 'parent': 'PX', 'auto preterminal span': (14, 18), 'span': (14, 18), 'left siblings': [], 'label': 'MF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX da ware noch die frage naturlich nach dem hotel ob sie was was fur einen hotelwunsch sie haben)
		(SIMPX ob sie zentral oder am flughafen)
		(KON oder)
		(DM ja)
		(SIMPX
			(C wenn)
			(MF sie mit der bahn)
			(VC kommen)
			[01;31m(PX[00m
				(ADVX dann)
				(ADVX naturlich nicht)
				(PX am flughafen)[01;31m)[00m)))
Step:PP Attachment
{'subtrees': ['ADVX', 'ADVX', 'PX'], 'family': ['C', 'MF', 'VC', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'APPR', 'ART', 'NN', 'VVFIN', 'ADV', 'ADV', 'PTKNEG', 'APPRART', 'NN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (27, 38), 'span': (33, 38), 'left siblings': ['C', 'MF', 'VC'], 'label': 'PX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP ja da ware noch die frage naturlich nach dem hotel ob sie was was fur einen hotelwunsch sie haben ob sie zentral oder am flughafen oder ja wenn sie mit der bahn kommen dann naturlich nicht am flughafen)

Sentence 591:
17 Initial errors
0 on fringe, 10 iterations
4 Error:PP Attachment
4 Error:NP Attachment
2 Error:Modifier Attachment
1 Error:Unary
1 Error:UNSET remove
1 Error:Clause Attachment
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM sicher)
		(SIMPX
			(VF sie)
			(LK sagten)
			(MF
				(ADVX gerade)
				[01;31m(NX[00m
					(ADVX nicht)
					(ADVX gerade)
					[01;36m(NX[00m
						(ART das)
						(NN billigste)[01;36m)[00m[01;31m)[00m))
		[01;31m(SIMPX[00m
			(VF dann)
			(LK wurde)
			(MF ich vielleicht das hotel schweizerhof)
			(VC empfehlen)
			[01;31m(NF[00m [01;33m(R (NF (R (NF[00m
				[01;31m(R[00m
					(C was)
					(MF ziemlich zentral)
					(VC ist)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;36m(NF[00m
			(PX
				(APPR mit)
				(NX konferenzraum und garage)) [01;33mNF) R)[00m[01;36m)[00m
		(SIMPX falls sie vielleicht doch mit dem wagen kommen wollen) [01;33mNF) R)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das)
			(LK hatte)
			(MF
				(ADVX halt)
				(NX
					(NX eine preisklasse)
					[01;31m(PX[00m
						(APPR von)
						[01;31m(NX[00m [01;33m(PX[00m
							[01;31m(PX[00m
								(APPR pro)
								[01;33m(NX[00m (NX ubernachtung)[01;31m)[00m
							[01;31m(NX[00m
								(NX einzelzimmer) [01;33mNX) PX)[00m
								(NX zweihundert funfundvierzig bis zweihundert funfundneunzig mark)[01;31m)[00m[01;31m)[00m[01;31m)[00m))[01;31m)[00m
		(PX je nachdem)))
Step:PP Attachment
{'new_parent': 'R', 'new_family': ['C', 'MF', 'VC', 'PX'], 'mover info': [('PX', (21, 25))], 'old_family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'PX', 'SIMPX', 'SIMPX', 'PX'], 'start left siblings': ['DM', 'DM', 'SIMPX', 'SIMPX'], 'auto preterminals': ('PTKANT', 'ITJ', 'PPER', 'VVFIN', 'ADV', 'PTKNEG', 'ADV', 'ART', 'NN', 'ADV', 'VAFIN', 'PPER', 'ADV', 'ART', 'NN', 'NE', 'VVINF', 'PRELS', 'ADV', 'ADJD', 'VAFIN', 'APPR', 'NN', 'KON', 'NN', 'KOUS', 'PPER', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'VVINF', 'VMFIN', 'KON', 'PDS', 'VAFIN', 'ADV', 'ART', 'NN', 'APPR', 'APPR', 'NN', 'NN', 'CARD', 'CARD', 'APPR', 'CARD', 'CARD', 'NN', 'ADV', 'PROP'), 'start right siblings': ['SIMPX', 'SIMPX', 'PX'], 'end left siblings': ['C', 'MF', 'VC'], 'auto preterminal span': (0, 52), 'movers': ['PX'], 'old_parent': 'TURN', 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(DM sicher)
		(SIMPX
			(VF sie)
			(LK sagten)
			(MF
				(ADVX gerade)
				[01;31m(NX[00m
					(ADVX nicht)
					(ADVX gerade)
					[01;36m(NX[00m
						(ART das)
						(NN billigste)[01;36m)[00m[01;31m)[00m))
		[01;31m(SIMPX[00m
			(VF dann)
			(LK wurde)
			(MF ich vielleicht das hotel schweizerhof)
			(VC empfehlen)
			(NF [01;33m(R (NF[00m
				(R
					(C was)
					(MF ziemlich zentral)
					(VC ist)
					[01;36m(NF[00m
						(PX
							(APPR mit)
							(NX konferenzraum und garage))[01;36m)[00m))[01;31m)[00m
		(SIMPX falls sie vielleicht doch mit dem wagen kommen wollen) [01;33mNF) R)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das)
			(LK hatte)
			(MF
				(ADVX halt)
				(NX
					(NX eine preisklasse)
					[01;31m(PX[00m
						(APPR von)
						[01;31m(NX[00m [01;33m(PX[00m
							[01;31m(PX[00m
								(APPR pro)
								[01;33m(NX[00m (NX ubernachtung)[01;31m)[00m
							[01;31m(NX[00m
								(NX einzelzimmer) [01;33mNX) PX)[00m
								(NX zweihundert funfundvierzig bis zweihundert funfundneunzig mark)[01;31m)[00m[01;31m)[00m[01;31m)[00m))[01;31m)[00m
		(PX je nachdem)))
Step:NP Attachment
{'new_parent': 'PX', 'new_family': ['APPR', 'NX', 'NX'], 'mover info': [('NX', (43, 44))], 'old_family': ['NX', 'NX'], 'start left siblings': [], 'auto preterminals': ('APPR', 'NN', 'NN', 'CARD', 'CARD', 'APPR', 'CARD', 'CARD', 'NN'), 'start right siblings': ['NX'], 'end left siblings': ['APPR', 'NX'], 'auto preterminal span': (41, 50), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'NX', 'POS confusion': ('NN', 'NN'), 'added and moved': True, 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(DM ja)
		(DM sicher)
		(SIMPX
			(VF sie)
			(LK sagten)
			(MF
				(ADVX gerade)
				[01;31m(NX[00m
					(ADVX nicht)
					(ADVX gerade)
					[01;36m(NX[00m
						(ART das)
						(NN billigste)[01;36m)[00m[01;31m)[00m))
		[01;31m(SIMPX[00m
			(VF dann)
			(LK wurde)
			(MF ich vielleicht das hotel schweizerhof)
			(VC empfehlen)
			(NF [01;33m(R (NF[00m
				(R
					(C was)
					(MF ziemlich zentral)
					(VC ist)
					[01;36m(NF[00m
						(PX
							(APPR mit)
							(NX konferenzraum und garage))[01;36m)[00m))[01;31m)[00m
		(SIMPX falls sie vielleicht doch mit dem wagen kommen wollen) [01;33mNF) R)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das)
			(LK hatte)
			(MF
				(ADVX halt)
				(NX
					(NX eine preisklasse)
					[01;31m(PX[00m
						(APPR von)
						[01;31m(NX[00m
							(PX pro ubernachtung einzelzimmer)
							(NX zweihundert funfundvierzig bis zweihundert funfundneunzig mark)[01;31m)[00m[01;31m)[00m))[01;31m)[00m
		(PX je nachdem)))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['ADVX', 'ADVX', 'ADVX', 'NX'], 'mover info': [('ADVX', (5, 6)), ('ADVX', (6, 7))], 'old_family': ['ADVX', 'ADVX', 'ART', 'NN'], 'start left siblings': [], 'auto preterminals': ('ADV', 'PTKNEG', 'ADV', 'ART', 'NN'), 'start right siblings': ['ART', 'NN'], 'end left siblings': ['ADVX'], 'auto preterminal span': (4, 9), 'movers': ['ADVX', 'ADVX'], 'old_parent': 'NX', 'end right siblings': ['NX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(DM sicher)
		(SIMPX sie sagten gerade nicht gerade das billigste)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK wurde)
			(MF ich vielleicht das hotel schweizerhof)
			(VC empfehlen)
			(NF [01;33m(R (NF[00m
				(R
					(C was)
					(MF ziemlich zentral)
					(VC ist)
					[01;36m(NF[00m
						(PX
							(APPR mit)
							(NX konferenzraum und garage))[01;36m)[00m))[01;31m)[00m
		(SIMPX falls sie vielleicht doch mit dem wagen kommen wollen) [01;33mNF) R)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das)
			(LK hatte)
			(MF
				(ADVX halt)
				(NX
					(NX eine preisklasse)
					[01;31m(PX[00m
						(APPR von)
						[01;31m(NX[00m
							(PX pro ubernachtung einzelzimmer)
							(NX zweihundert funfundvierzig bis zweihundert funfundneunzig mark)[01;31m)[00m[01;31m)[00m))[01;31m)[00m
		(PX je nachdem)))
Step:Unary
{'subtrees': ['PX'], 'family': ['C', 'MF', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'NN', 'KON', 'NN'), 'right siblings': [], 'left siblings': [(C (NX (PRELS was))), (MF (ADJX (ADVX (ADV ziemlich)) (ADJD zentral))), (VC (VXFIN (VAFIN ist)))], 'auto preterminal span': (21, 25), 'span': (21, 25), 'parent': 'R', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM sicher)
		(SIMPX sie sagten gerade nicht gerade das billigste)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK wurde)
			(MF ich vielleicht das hotel schweizerhof)
			(VC empfehlen)
			[01;33m(R (NF[00m (NF was ziemlich zentral ist mit konferenzraum und garage)[01;31m)[00m
		(SIMPX falls sie vielleicht doch mit dem wagen kommen wollen) [01;33mNF) R)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das)
			(LK hatte)
			(MF
				(ADVX halt)
				(NX
					(NX eine preisklasse)
					[01;31m(PX[00m
						(APPR von)
						[01;31m(NX[00m
							(PX pro ubernachtung einzelzimmer)
							(NX zweihundert funfundvierzig bis zweihundert funfundneunzig mark)[01;31m)[00m[01;31m)[00m))[01;31m)[00m
		(PX je nachdem)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'VC', 'NF'], 'family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'PPER', 'VVFIN', 'ADV', 'PTKNEG', 'ADV', 'ART', 'NN', 'ADV', 'VAFIN', 'PPER', 'ADV', 'ART', 'NN', 'NE', 'VVINF', 'PRELS', 'ADV', 'ADJD', 'VAFIN', 'APPR', 'NN', 'KON', 'NN', 'KOUS', 'PPER', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'VVINF', 'VMFIN', 'KON', 'PDS', 'VAFIN', 'ADV', 'ART', 'NN', 'APPR', 'APPR', 'NN', 'NN', 'CARD', 'CARD', 'APPR', 'CARD', 'CARD', 'NN', 'ADV', 'PROP'), 'right siblings': ['SIMPX', 'SIMPX', 'PX'], 'parent': 'TURN', 'auto preterminal span': (0, 52), 'span': (9, 25), 'left siblings': ['DM', 'DM', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM sicher)
		(SIMPX sie sagten gerade nicht gerade das billigste)
		(VF dann)
		(LK wurde)
		(MF ich vielleicht das hotel schweizerhof)
		(VC empfehlen)
		[01;36m(R[00m
			[01;36m(NF[00m
				(NF was ziemlich zentral ist mit konferenzraum und garage)
				(SIMPX falls sie vielleicht doch mit dem wagen kommen wollen)[01;36m)[00m[01;36m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das)
			(LK hatte)
			(MF
				(ADVX halt)
				(NX
					(NX eine preisklasse)
					[01;31m(PX[00m
						(APPR von)
						[01;31m(NX[00m
							(PX pro ubernachtung einzelzimmer)
							(NX zweihundert funfundvierzig bis zweihundert funfundneunzig mark)[01;31m)[00m[01;31m)[00m))[01;31m)[00m
		(PX je nachdem)))
Step:Clause Attachment
{'subtrees': ['NF', 'SIMPX'], 'family': ['DM', 'DM', 'SIMPX', 'VF', 'LK', 'MF', 'VC', 'NF', 'SIMPX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PRELS', 'ADV', 'ADJD', 'VAFIN', 'APPR', 'NN', 'KON', 'NN', 'KOUS', 'PPER', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'VVINF', 'VMFIN'), 'right siblings': [(SIMPX (KOORD (KON und)) (VF (NX (PDS das))) (LK (VXFIN (VAFIN hatte))) (MF (ADVX (ADV halt)) (NX (NX (ART eine) (NN preisklasse)) (PX (APPR von) (NX (PX (APPR pro) (NX (NX (NN ubernachtung)) (NX (NN einzelzimmer)))) (NX (ADJX (ADJX (CARD zweihundert) (CARD funfundvierzig)) (APPR bis) (ADJX (CARD zweihundert) (CARD funfundneunzig))) (NN mark))))))), (PX (ADVX (ADV je)) (PROP nachdem))], 'left siblings': [(DM (PTKANT ja)), (DM (ITJ sicher)), (SIMPX (VF (NX (PPER sie))) (LK (VXFIN (VVFIN sagten))) (MF (ADVX (ADV gerade)) (ADVX (PTKNEG nicht)) (ADVX (ADV gerade)) (NX (ART das) (NN billigste)))), (VF (ADVX (ADV dann))), (LK (VXFIN (VAFIN wurde))), (MF (NX (PPER ich)) (ADVX (ADV vielleicht)) (NX (ART das) (NX (NX (NN hotel)) (NX (NE schweizerhof))))), (VC (VXINF (VVINF empfehlen)))], 'auto preterminal span': (17, 34), 'span': (17, 34), 'parent': 'TURN', 'label': 'NF', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM sicher)
		(SIMPX sie sagten gerade nicht gerade das billigste)
		(VF dann)
		(LK wurde)
		(MF ich vielleicht das hotel schweizerhof)
		(VC empfehlen)
		[01;36m(R[00m
			(NF
				(NF was ziemlich zentral ist mit konferenzraum und garage)
				(SIMPX falls sie vielleicht doch mit dem wagen kommen wollen))[01;36m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das)
			(LK hatte)
			(MF
				(ADVX halt)
				(NX
					(NX eine preisklasse)
					[01;31m(PX[00m
						(APPR von)
						[01;31m(NX[00m
							(PX pro ubernachtung einzelzimmer)
							(NX zweihundert funfundvierzig bis zweihundert funfundneunzig mark)[01;31m)[00m[01;31m)[00m))[01;31m)[00m
		(PX je nachdem)))
Step:Unary
{'subtrees': ['NF'], 'family': ['DM', 'DM', 'SIMPX', 'VF', 'LK', 'MF', 'VC', 'R', 'SIMPX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PRELS', 'ADV', 'ADJD', 'VAFIN', 'APPR', 'NN', 'KON', 'NN', 'KOUS', 'PPER', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'VVINF', 'VMFIN'), 'right siblings': [(SIMPX (KOORD (KON und)) (VF (NX (PDS das))) (LK (VXFIN (VAFIN hatte))) (MF (ADVX (ADV halt)) (NX (NX (ART eine) (NN preisklasse)) (PX (APPR von) (NX (PX (APPR pro) (NX (NX (NN ubernachtung)) (NX (NN einzelzimmer)))) (NX (ADJX (ADJX (CARD zweihundert) (CARD funfundvierzig)) (APPR bis) (ADJX (CARD zweihundert) (CARD funfundneunzig))) (NN mark))))))), (PX (ADVX (ADV je)) (PROP nachdem))], 'left siblings': [(DM (PTKANT ja)), (DM (ITJ sicher)), (SIMPX (VF (NX (PPER sie))) (LK (VXFIN (VVFIN sagten))) (MF (ADVX (ADV gerade)) (ADVX (PTKNEG nicht)) (ADVX (ADV gerade)) (NX (ART das) (NN billigste)))), (VF (ADVX (ADV dann))), (LK (VXFIN (VAFIN wurde))), (MF (NX (PPER ich)) (ADVX (ADV vielleicht)) (NX (ART das) (NX (NX (NN hotel)) (NX (NE schweizerhof))))), (VC (VXINF (VVINF empfehlen)))], 'auto preterminal span': (17, 34), 'span': (17, 34), 'parent': 'TURN', 'label': 'R', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM sicher)
		(SIMPX sie sagten gerade nicht gerade das billigste)
		(VF dann)
		(LK wurde)
		(MF ich vielleicht das hotel schweizerhof)
		(VC empfehlen)
		(R was ziemlich zentral ist mit konferenzraum und garage falls sie vielleicht doch mit dem wagen kommen wollen)
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das)
			(LK hatte)
			(MF
				(ADVX halt)
				(NX
					(NX eine preisklasse)
					[01;31m(PX[00m
						(APPR von)
						[01;31m(NX[00m
							(PX pro ubernachtung einzelzimmer)
							(NX zweihundert funfundvierzig bis zweihundert funfundneunzig mark)[01;31m)[00m[01;31m)[00m))[01;31m)[00m
		(PX je nachdem)))
Step:UNSET remove
{'subtrees': ['KOORD', 'VF', 'LK', 'MF'], 'family': ['DM', 'DM', 'SIMPX', 'VF', 'LK', 'MF', 'VC', 'R', 'SIMPX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'PPER', 'VVFIN', 'ADV', 'PTKNEG', 'ADV', 'ART', 'NN', 'ADV', 'VAFIN', 'PPER', 'ADV', 'ART', 'NN', 'NE', 'VVINF', 'PRELS', 'ADV', 'ADJD', 'VAFIN', 'APPR', 'NN', 'KON', 'NN', 'KOUS', 'PPER', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'VVINF', 'VMFIN', 'KON', 'PDS', 'VAFIN', 'ADV', 'ART', 'NN', 'APPR', 'APPR', 'NN', 'NN', 'CARD', 'CARD', 'APPR', 'CARD', 'CARD', 'NN', 'ADV', 'PROP'), 'right siblings': ['PX'], 'parent': 'TURN', 'auto preterminal span': (0, 52), 'span': (34, 50), 'left siblings': ['DM', 'DM', 'SIMPX', 'VF', 'LK', 'MF', 'VC', 'R'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM sicher)
		(SIMPX sie sagten gerade nicht gerade das billigste)
		(VF dann)
		(LK wurde)
		(MF ich vielleicht das hotel schweizerhof)
		(VC empfehlen)
		(R was ziemlich zentral ist mit konferenzraum und garage falls sie vielleicht doch mit dem wagen kommen wollen)
		(KOORD und)
		(VF das)
		(LK hatte)
		(MF
			(ADVX halt)
			(NX
				(NX eine preisklasse)
				[01;31m(PX[00m
					(APPR von)
					[01;31m(NX[00m
						(PX pro ubernachtung einzelzimmer)
						(NX zweihundert funfundvierzig bis zweihundert funfundneunzig mark)[01;31m)[00m[01;31m)[00m))
		(PX je nachdem)))
Step:UNSET remove
{'subtrees': ['APPR', 'NX'], 'family': ['NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'APPR', 'APPR', 'NN', 'NN', 'CARD', 'CARD', 'APPR', 'CARD', 'CARD', 'NN'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (38, 50), 'span': (40, 50), 'left siblings': ['NX'], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM sicher)
		(SIMPX sie sagten gerade nicht gerade das billigste)
		(VF dann)
		(LK wurde)
		(MF ich vielleicht das hotel schweizerhof)
		(VC empfehlen)
		(R was ziemlich zentral ist mit konferenzraum und garage falls sie vielleicht doch mit dem wagen kommen wollen)
		(KOORD und)
		(VF das)
		(LK hatte)
		(MF
			(ADVX halt)
			(NX
				(NX eine preisklasse)
				(APPR von)
				[01;31m(NX[00m
					(PX pro ubernachtung einzelzimmer)
					(NX zweihundert funfundvierzig bis zweihundert funfundneunzig mark)[01;31m)[00m))
		(PX je nachdem)))
Step:UNSET remove
{'subtrees': ['PX', 'NX'], 'family': ['NX', 'APPR', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'APPR', 'APPR', 'NN', 'NN', 'CARD', 'CARD', 'APPR', 'CARD', 'CARD', 'NN'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (38, 50), 'span': (41, 50), 'left siblings': ['NX', 'APPR'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ja sicher sie sagten gerade nicht gerade das billigste dann wurde ich vielleicht das hotel schweizerhof empfehlen was ziemlich zentral ist mit konferenzraum und garage falls sie vielleicht doch mit dem wagen kommen wollen und das hatte halt eine preisklasse von pro ubernachtung einzelzimmer zweihundert funfundvierzig bis zweihundert funfundneunzig mark je nachdem)

Sentence 592:
3 Initial errors
0 on fringe, 3 iterations
1 Error:PP Attachment
1 Error:UNSET remove
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX sie sagten sie wollten morgens ankommen)
		(SIMPX
			(LK ware)
			(MF
				(NX ihnen)
				[01;31m(NX[00m [01;33m(NX[00m
					(NX die abfahrt)
					[01;31m(PX[00m
						(PX von bonn) [01;33mNX)[00m
						(NX sechs uhr funfundvierzig)[01;31m)[00m[01;31m)[00m
				(ADJX zu fruh)))
		(SIMPX oder ginge das)))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['NX', 'NX', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ART', 'NN', 'APPR', 'NE', 'CARD', 'NN', 'CARD', 'PTKA', 'ADJD'), 'right siblings': ['ADJX'], 'parent': 'MF', 'auto preterminal span': (8, 18), 'span': (9, 16), 'left siblings': ['NX'], 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX sie sagten sie wollten morgens ankommen)
		(SIMPX
			(LK ware)
			(MF
				(NX ihnen)
				[01;33m(NX[00m (NX die abfahrt)
				[01;31m(PX[00m
					(PX von bonn) [01;33mNX)[00m
					(NX sechs uhr funfundvierzig)[01;31m)[00m
				(ADJX zu fruh)))
		(SIMPX oder ginge das)))
Step:UNSET remove
{'subtrees': ['PX', 'NX'], 'family': ['NX', 'NX', 'PX', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ART', 'NN', 'APPR', 'NE', 'CARD', 'NN', 'CARD', 'PTKA', 'ADJD'), 'right siblings': ['ADJX'], 'parent': 'MF', 'auto preterminal span': (8, 18), 'span': (11, 16), 'left siblings': ['NX', 'NX'], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX sie sagten sie wollten morgens ankommen)
		(SIMPX
			(LK ware)
			(MF
				(NX ihnen)
				[01;36m(NX[00m
					(NX die abfahrt)
					(PX von bonn)[01;36m)[00m
				(NX sechs uhr funfundvierzig)
				(ADJX zu fruh)))
		(SIMPX oder ginge das)))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['NX', 'NX', 'NX', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'APPR', 'NE'), 'right siblings': [(NX (NX (ADJX (CARD sechs)) (NN uhr)) (ADJX (CARD funfundvierzig))), (ADJX (PTKA zu) (ADJD fruh))], 'left siblings': [(NX (PPER ihnen))], 'auto preterminal span': (9, 13), 'span': (9, 13), 'parent': 'MF', 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP ja sie sagten sie wollten morgens ankommen ware ihnen die abfahrt von bonn sechs uhr funfundvierzig zu fruh oder ginge das)

Sentence 593:
0 Initial errors
0 on fringe, 0 iterations

Sentence 594:
0 Initial errors
0 on fringe, 0 iterations

Sentence 595:
0 Initial errors
0 on fringe, 0 iterations

Sentence 596:
1 Initial errors
0 on fringe, 1 iterations
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich wurde ganz gern eine reise buchen bei ihnen)
		[01;31m(SIMPX[00m
			(VF und zwar)
			(LK mochte)
			(MF ich im august fur ein paar tage)
			(VC wegfahren)
			(NF nach hannover)[01;31m)[00m
		(SIMPX und zwar wurde das am montag dienstag sein)
		(SIMPX das ist der vierte funfte august)
		(SIMPX was konnen sie mir da anbieten)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'VC', 'NF'], 'family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VAFIN', 'ADV', 'ADV', 'ART', 'NN', 'VVINF', 'APPR', 'PPER', 'KON', 'ADV', 'VMFIN', 'PPER', 'APPRART', 'NN', 'APPR', 'ART', 'PIDAT', 'NN', 'VVINF', 'APPR', 'NE', 'KON', 'ADV', 'VAFIN', 'PDS', 'APPRART', 'NN', 'NN', 'VAINF', 'PDS', 'VAFIN', 'ART', 'ADJA', 'ADJA', 'NN', 'PWS', 'VMFIN', 'PPER', 'PPER', 'ADV', 'VVINF'), 'right siblings': ['SIMPX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 43), 'span': (10, 23), 'left siblings': ['DM', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ja ich wurde ganz gern eine reise buchen bei ihnen und zwar mochte ich im august fur ein paar tage wegfahren nach hannover und zwar wurde das am montag dienstag sein das ist der vierte funfte august was konnen sie mir da anbieten)

Sentence 597:
9 Initial errors
0 on fringe, 5 iterations
4 Error:UNSET move
2 Error:Different label
1 Error:Single Word Phrase
1 Error:UNSET remove
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ach so)
		(DM stimmt)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(LK habe)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX ich)
					(NX mir)
					(ADVX noch)[01;31m)[00m[01;31m)[00m
			[01;36m(NX[00m
				(PIAT keine) [01;33mMF)[00m[01;36m)[00m[01;36m)[00m
		(DM ja)
		(SIMPX habe ich mir noch keine gedanken drum gemacht)
		(DM ja)
		[01;31m(SIMPX[00m
			(VF es sollte schon relativ zentral gelegen sein)
			(LK denke)
			(MF ich)[01;31m)[00m
		(SIMPX es mus auch nicht eines der schlechteren sein)
		(SIMPX
			(LK hatten)
			(MF sie da eines)
			[01;36m(SIMPX[00m
				(NF
					[01;31m(R[00m
						(C
							[01;31m(NX[00m
								(PRELS das)[01;31m)[00m)
						(MF sie mir)
						(VC empfehlen konnten)[01;31m)[00m)[01;36m)[00m)))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['NX', 'NX', 'ADVX', 'PIAT'], 'mover info': [('PIAT', (7, 8))], 'old_family': ['DM', 'DM', 'SIMPX', 'PIAT', 'DM', 'SIMPX', 'DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'start left siblings': ['DM', 'DM', 'SIMPX'], 'auto preterminals': ('ITJ', 'ADV', 'ITJ', 'VAFIN', 'PPER', 'PRF', 'ADV', 'PIAT', 'PTKANT', 'VAFIN', 'PPER', 'PRF', 'ADV', 'PIAT', 'NN', 'PROP', 'VVPP', 'PTKANT', 'PPER', 'VMFIN', 'ADV', 'ADV', 'ADV', 'ADJD', 'VAINF', 'VVFIN', 'PPER', 'PPER', 'VMFIN', 'ADV', 'PTKNEG', 'PIS', 'ART', 'NN', 'VAINF', 'VAFIN', 'PPER', 'ADV', 'PIS', 'PRELS', 'PPER', 'PPER', 'VVINF', 'VMFIN'), 'start right siblings': ['DM', 'SIMPX', 'DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'end left siblings': ['NX', 'NX', 'ADVX'], 'auto preterminal span': (0, 44), 'movers': ['PIAT'], 'old_parent': 'TURN', 'POS confusion': ('PIAT', 'PIAT'), 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM ach so)
		(DM stimmt)
		(SIMPX
			(LK habe)
			(MF
				(NX ich)
				(NX mir)
				(ADVX noch)
				[01;36m(NX[00m
					(PIAT keine)[01;36m)[00m))
		(DM ja)
		(SIMPX habe ich mir noch keine gedanken drum gemacht)
		(DM ja)
		[01;31m(SIMPX[00m
			(VF es sollte schon relativ zentral gelegen sein)
			(LK denke)
			(MF ich)[01;31m)[00m
		(SIMPX es mus auch nicht eines der schlechteren sein)
		(SIMPX
			(LK hatten)
			(MF sie da eines)
			[01;36m(SIMPX[00m
				(NF
					[01;31m(R[00m
						(C
							[01;31m(NX[00m
								(PRELS das)[01;31m)[00m)
						(MF sie mir)
						(VC empfehlen konnten)[01;31m)[00m)[01;36m)[00m)))
Step:Different label
{'family': ['SIMPX'], 'auto preterminal span': (39, 44), 'span': (39, 44), 'subtrees': ['C', 'MF', 'VC'], 'parent': 'NF', 'over_word': False, 'auto preterminals': ('PRELS', 'PPER', 'PPER', 'VVINF', 'VMFIN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('R', 'SIMPX')}
(TOP
	(TURN
		(DM ach so)
		(DM stimmt)
		(SIMPX
			(LK habe)
			(MF
				(NX ich)
				(NX mir)
				(ADVX noch)
				[01;36m(NX[00m
					(PIAT keine)[01;36m)[00m))
		(DM ja)
		(SIMPX habe ich mir noch keine gedanken drum gemacht)
		(DM ja)
		[01;31m(SIMPX[00m
			(VF es sollte schon relativ zentral gelegen sein)
			(LK denke)
			(MF ich)[01;31m)[00m
		(SIMPX es mus auch nicht eines der schlechteren sein)
		(SIMPX
			(LK hatten)
			(MF sie da eines)
			(NF
				(SIMPX
					(C
						[01;31m(NX[00m
							(PRELS das)[01;31m)[00m)
					(MF sie mir)
					(VC empfehlen konnten))))))
Step:Single Word Phrase
{'subtrees': ['PIAT'], 'family': ['NX', 'NX', 'ADVX', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('PIAT',), 'right siblings': [], 'left siblings': [(NX (PPER ich)), (NX (PRF mir)), (ADVX (ADV noch))], 'auto preterminal span': (7, 8), 'span': (7, 8), 'parent': 'MF', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM ach so)
		(DM stimmt)
		(SIMPX habe ich mir noch keine)
		(DM ja)
		(SIMPX habe ich mir noch keine gedanken drum gemacht)
		(DM ja)
		[01;31m(SIMPX[00m
			(VF es sollte schon relativ zentral gelegen sein)
			(LK denke)
			(MF ich)[01;31m)[00m
		(SIMPX es mus auch nicht eines der schlechteren sein)
		(SIMPX
			(LK hatten)
			(MF sie da eines)
			(NF
				(SIMPX
					(C
						[01;31m(NX[00m
							(PRELS das)[01;31m)[00m)
					(MF sie mir)
					(VC empfehlen konnten))))))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['DM', 'DM', 'SIMPX', 'DM', 'SIMPX', 'DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'ITJ', 'VAFIN', 'PPER', 'PRF', 'ADV', 'PIAT', 'PTKANT', 'VAFIN', 'PPER', 'PRF', 'ADV', 'PIAT', 'NN', 'PROP', 'VVPP', 'PTKANT', 'PPER', 'VMFIN', 'ADV', 'ADV', 'ADV', 'ADJD', 'VAINF', 'VVFIN', 'PPER', 'PPER', 'VMFIN', 'ADV', 'PTKNEG', 'PIS', 'ART', 'NN', 'VAINF', 'VAFIN', 'PPER', 'ADV', 'PIS', 'PRELS', 'PPER', 'PPER', 'VVINF', 'VMFIN'), 'right siblings': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 44), 'span': (18, 27), 'left siblings': ['DM', 'DM', 'SIMPX', 'DM', 'SIMPX', 'DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ach so)
		(DM stimmt)
		(SIMPX habe ich mir noch keine)
		(DM ja)
		(SIMPX habe ich mir noch keine gedanken drum gemacht)
		(DM ja)
		(VF es sollte schon relativ zentral gelegen sein)
		(LK denke)
		(MF ich)
		(SIMPX es mus auch nicht eines der schlechteren sein)
		(SIMPX
			(LK hatten)
			(MF sie da eines)
			(NF
				(SIMPX
					(C
						[01;31m(NX[00m
							(PRELS das)[01;31m)[00m)
					(MF sie mir)
					(VC empfehlen konnten))))))
Step:Single Word Phrase
{'subtrees': ['PRELS'], 'family': ['NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('PRELS',), 'right siblings': [], 'parent': 'C', 'auto preterminal span': (39, 40), 'span': (39, 40), 'left siblings': [], 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP ach so stimmt habe ich mir noch keine ja habe ich mir noch keine gedanken drum gemacht ja es sollte schon relativ zentral gelegen sein denke ich es mus auch nicht eines der schlechteren sein hatten sie da eines das sie mir empfehlen konnten)

Sentence 598:
0 Initial errors
0 on fringe, 0 iterations

Sentence 599:
9 Initial errors
0 on fringe, 7 iterations
2 Error:Modifier Attachment
2 Error:UNSET move
1 Error:Single Word Phrase
1 Error:UNSET remove
1 Error:UNSET add
1 Error:Unary
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM wie gesagt)
		[01;33m(VF (NX[00m (SIMPX was war das jetzt)
		[01;31m(SIMPX[00m
			(VF montag der vierte august) [01;33mNX) VF)[00m
			(LK wollte)
			(MF ich dann)
			(VC los)[01;31m)[00m
		[01;31m(PX[00m
			(KON und)
			(ADVX dann)
			(ADJX
				(NX
					[01;31m(ADJX[00m
						(ADJX drei)
						[01;33m(NX[00m (ADJX vier)[01;31m)[00m
					(NN tage)) [01;33mNX)[00m
				(ADJD spater))
			(ADVX wieder)
			(PX nach hause)[01;31m)[00m
		(SIMPX
			(VF dann)
			(LK ist)
			[01;36m(MF[00m
				[01;36m(NX[00m
					(ART das)[01;36m)[00m
				[01;31m(MF[00m
					(NX die ausstellung)
					(ADVX vorbei)[01;31m)[00m[01;36m)[00m)
		(SIMPX das ware also dann spatestens am achten august)))
Step:Modifier Attachment
{'new_parent': 'ADJX', 'new_family': ['ADJX', 'NX', 'ADJD'], 'mover info': [('ADJX', (16, 17))], 'old_family': ['ADJX', 'ADJX'], 'start left siblings': [], 'auto preterminals': ('CARD', 'CARD', 'NN', 'ADJD'), 'start right siblings': ['ADJX'], 'end left siblings': [], 'auto preterminal span': (16, 20), 'adding node already present': False, 'movers': ['ADJX'], 'old_parent': 'ADJX', 'POS confusion': ('CARD', 'CARD'), 'added and moved': True, 'end right siblings': ['NX', 'ADJD'], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'MF'}
(TOP
	(TURN
		(DM wie gesagt)
		[01;33m(VF (NX[00m (SIMPX was war das jetzt)
		[01;31m(SIMPX[00m
			(VF montag der vierte august) [01;33mNX) VF)[00m
			(LK wollte)
			(MF ich dann)
			(VC los)[01;31m)[00m
		[01;31m(PX[00m
			(KON und)
			(ADVX dann)
			(ADJX drei vier tage spater)
			(ADVX wieder)
			(PX nach hause)[01;31m)[00m
		(SIMPX
			(VF dann)
			(LK ist)
			[01;36m(MF[00m
				[01;36m(NX[00m
					(ART das)[01;36m)[00m
				[01;31m(MF[00m
					(NX die ausstellung)
					(ADVX vorbei)[01;31m)[00m[01;36m)[00m)
		(SIMPX das ware also dann spatestens am achten august)))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['ART', 'NX', 'ADVX'], 'mover info': [('ART', (25, 26))], 'old_family': ['VF', 'LK', 'ART', 'MF'], 'start left siblings': ['VF', 'LK'], 'auto preterminals': ('ADV', 'VAFIN', 'ART', 'ART', 'NN', 'ADV'), 'start right siblings': ['MF'], 'end left siblings': [], 'auto preterminal span': (23, 29), 'movers': ['ART'], 'old_parent': 'SIMPX', 'POS confusion': ('ART', 'ART'), 'end right siblings': ['NX', 'ADVX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM wie gesagt)
		[01;33m(VF (NX[00m (SIMPX was war das jetzt)
		[01;31m(SIMPX[00m
			(VF montag der vierte august) [01;33mNX) VF)[00m
			(LK wollte)
			(MF ich dann)
			(VC los)[01;31m)[00m
		[01;31m(PX[00m
			(KON und)
			(ADVX dann)
			(ADJX drei vier tage spater)
			(ADVX wieder)
			(PX nach hause)[01;31m)[00m
		(SIMPX
			(VF dann)
			(LK ist)
			(MF
				[01;36m(NX[00m
					(ART das)[01;36m)[00m
				(NX die ausstellung)
				(ADVX vorbei)))
		(SIMPX das ware also dann spatestens am achten august)))
Step:Single Word Phrase
{'subtrees': ['ART'], 'family': ['NX', 'NX', 'ADVX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ART',), 'right siblings': [(NX (ART die) (NN ausstellung)), (ADVX (ADV vorbei))], 'left siblings': [], 'auto preterminal span': (25, 26), 'span': (25, 26), 'parent': 'MF', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM wie gesagt)
		[01;33m(VF (NX[00m (SIMPX was war das jetzt)
		[01;31m(SIMPX[00m
			(VF montag der vierte august) [01;33mNX) VF)[00m
			(LK wollte)
			(MF ich dann)
			(VC los)[01;31m)[00m
		[01;31m(PX[00m
			(KON und)
			(ADVX dann)
			(ADJX drei vier tage spater)
			(ADVX wieder)
			(PX nach hause)[01;31m)[00m
		(SIMPX dann ist das die ausstellung vorbei)
		(SIMPX das ware also dann spatestens am achten august)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['DM', 'SIMPX', 'SIMPX', 'PX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'VVPP', 'PWS', 'VAFIN', 'PDS', 'ADV', 'NN', 'ART', 'ADJA', 'NN', 'VVFIN', 'PPER', 'ADV', 'PTKVZ', 'KON', 'ADV', 'CARD', 'CARD', 'NN', 'ADJD', 'ADV', 'APPR', 'NN', 'ADV', 'VAFIN', 'ART', 'ART', 'NN', 'ADV', 'PDS', 'VAFIN', 'ADV', 'ADV', 'ADV', 'APPRART', 'ADJA', 'NN'), 'right siblings': ['PX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 37), 'span': (6, 14), 'left siblings': ['DM', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM wie gesagt)
		[01;36m(NX[00m
			[01;36m(VF[00m
				(SIMPX was war das jetzt)
				(VF montag der vierte august)[01;36m)[00m[01;36m)[00m
		(LK wollte)
		(MF ich dann)
		(VC los)
		[01;31m(PX[00m
			(KON und)
			(ADVX dann)
			(ADJX drei vier tage spater)
			(ADVX wieder)
			(PX nach hause)[01;31m)[00m
		(SIMPX dann ist das die ausstellung vorbei)
		(SIMPX das ware also dann spatestens am achten august)))
Step:UNSET add
{'subtrees': ['SIMPX', 'VF'], 'family': ['DM', 'VF', 'LK', 'MF', 'VC', 'PX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PWS', 'VAFIN', 'PDS', 'ADV', 'NN', 'ART', 'ADJA', 'NN'), 'right siblings': [(LK (VXFIN (VVFIN wollte))), (MF (NX (PPER ich)) (ADVX (ADV dann))), (VC (PTKVZ los)), (PX (KON und) (ADVX (ADV dann)) (ADJX (NX (ADJX (CARD drei)) (NX (ADJX (CARD vier)) (NN tage))) (ADJD spater)) (ADVX (ADV wieder)) (PX (APPR nach) (NX (NN hause)))), (SIMPX (VF (ADVX (ADV dann))) (LK (VXFIN (VAFIN ist))) (MF (NX (ART das)) (NX (ART die) (NN ausstellung)) (ADVX (ADV vorbei)))), (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VAFIN ware))) (MF (ADVX (ADV also)) (ADVX (ADV dann)) (PX (ADVX (ADV spatestens)) (APPRART am) (NX (ADJX (ADJA achten)) (NN august)))))], 'left siblings': [(DM (SIMPX (C (KOUS wie)) (VC (VXINF (VVPP gesagt)))))], 'auto preterminal span': (2, 10), 'span': (2, 10), 'parent': 'TURN', 'label': 'VF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM wie gesagt)
		[01;36m(NX[00m
			(VF
				(SIMPX was war das jetzt)
				(VF montag der vierte august))[01;36m)[00m
		(LK wollte)
		(MF ich dann)
		(VC los)
		[01;31m(PX[00m
			(KON und)
			(ADVX dann)
			(ADJX drei vier tage spater)
			(ADVX wieder)
			(PX nach hause)[01;31m)[00m
		(SIMPX dann ist das die ausstellung vorbei)
		(SIMPX das ware also dann spatestens am achten august)))
Step:Unary
{'subtrees': ['VF'], 'family': ['DM', 'NX', 'LK', 'MF', 'VC', 'PX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PWS', 'VAFIN', 'PDS', 'ADV', 'NN', 'ART', 'ADJA', 'NN'), 'right siblings': [(LK (VXFIN (VVFIN wollte))), (MF (NX (PPER ich)) (ADVX (ADV dann))), (VC (PTKVZ los)), (PX (KON und) (ADVX (ADV dann)) (ADJX (NX (ADJX (CARD drei)) (NX (ADJX (CARD vier)) (NN tage))) (ADJD spater)) (ADVX (ADV wieder)) (PX (APPR nach) (NX (NN hause)))), (SIMPX (VF (ADVX (ADV dann))) (LK (VXFIN (VAFIN ist))) (MF (NX (ART das)) (NX (ART die) (NN ausstellung)) (ADVX (ADV vorbei)))), (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VAFIN ware))) (MF (ADVX (ADV also)) (ADVX (ADV dann)) (PX (ADVX (ADV spatestens)) (APPRART am) (NX (ADJX (ADJA achten)) (NN august)))))], 'left siblings': [(DM (SIMPX (C (KOUS wie)) (VC (VXINF (VVPP gesagt)))))], 'auto preterminal span': (2, 10), 'span': (2, 10), 'parent': 'TURN', 'label': 'NX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM wie gesagt)
		(NX was war das jetzt montag der vierte august)
		(LK wollte)
		(MF ich dann)
		(VC los)
		[01;31m(PX[00m
			(KON und)
			(ADVX dann)
			(ADJX drei vier tage spater)
			(ADVX wieder)
			(PX nach hause)[01;31m)[00m
		(SIMPX dann ist das die ausstellung vorbei)
		(SIMPX das ware also dann spatestens am achten august)))
Step:PP Attachment
{'subtrees': ['KON', 'ADVX', 'ADJX', 'ADVX', 'PX'], 'family': ['DM', 'NX', 'LK', 'MF', 'VC', 'PX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'VVPP', 'PWS', 'VAFIN', 'PDS', 'ADV', 'NN', 'ART', 'ADJA', 'NN', 'VVFIN', 'PPER', 'ADV', 'PTKVZ', 'KON', 'ADV', 'CARD', 'CARD', 'NN', 'ADJD', 'ADV', 'APPR', 'NN', 'ADV', 'VAFIN', 'ART', 'ART', 'NN', 'ADV', 'PDS', 'VAFIN', 'ADV', 'ADV', 'ADV', 'APPRART', 'ADJA', 'NN'), 'right siblings': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 37), 'span': (14, 23), 'left siblings': ['DM', 'NX', 'LK', 'MF', 'VC'], 'label': 'PX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP wie gesagt was war das jetzt montag der vierte august wollte ich dann los und dann drei vier tage spater wieder nach hause dann ist das die ausstellung vorbei das ware also dann spatestens am achten august)

Sentence 600:
0 Initial errors
0 on fringe, 0 iterations

Sentence 601:
6 Initial errors
0 on fringe, 4 iterations
2 Error:Clause Attachment
2 Error:UNSET move
1 Error:Unary
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM okay)
		(SIMPX wie ist das mit dem gepack)
		[01;36m(SIMPX[00m
			[01;36m(VF[00m
				(SIMPX
					(LK wird)
					(MF
						[01;31m(NX[00m
							[01;36m(NX[00m
								(ART das)[01;36m)[00m
							[01;36m(ADVX[00m
								(NN gepack)[01;36m)[00m[01;31m)[00m)
					(VC nachgesendet))[01;36m)[00m
			[01;31m(SIMPX[00m
				(LK mus)
				(MF ich das selber)
				(VC schleppen)[01;31m)[00m[01;36m)[00m
		(SIMPX ich habe so ein ruckenleiden)
		(PX deswegen)))
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['SIMPX', 'LK', 'MF', 'VC'], 'mover info': [('SIMPX', (8, 12))], 'old_family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'PX'], 'start left siblings': ['DM', 'DM', 'SIMPX'], 'auto preterminals': ('PTKANT', 'ITJ', 'PWAV', 'VAFIN', 'PDS', 'APPR', 'ART', 'NN', 'VAFIN', 'ART', 'NN', 'VVPP', 'VMFIN', 'PPER', 'PDS', 'ADV', 'VVINF', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'PROP'), 'start right siblings': ['SIMPX', 'SIMPX', 'PX'], 'end left siblings': [], 'auto preterminal span': (0, 23), 'movers': ['SIMPX'], 'old_parent': 'TURN', 'end right siblings': ['LK', 'MF', 'VC'], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(DM okay)
		(SIMPX wie ist das mit dem gepack)
		(SIMPX
			[01;36m(VF[00m
				(SIMPX
					(LK wird)
					(MF
						[01;31m(NX[00m
							[01;36m(NX[00m
								(ART das)[01;36m)[00m
							[01;36m(ADVX[00m
								(NN gepack)[01;36m)[00m[01;31m)[00m)
					(VC nachgesendet))[01;36m)[00m
			(LK mus)
			(MF ich das selber)
			(VC schleppen))
		(SIMPX ich habe so ein ruckenleiden)
		(PX deswegen)))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['NX', 'NN'], 'mover info': [('NN', (10, 11))], 'old_family': ['ART', 'NN'], 'start left siblings': ['ART'], 'auto preterminals': ('ART', 'NN'), 'start right siblings': [], 'end left siblings': ['NX'], 'auto preterminal span': (9, 11), 'movers': ['NN'], 'old_parent': 'NX', 'POS confusion': ('NN', 'NN'), 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(DM okay)
		(SIMPX wie ist das mit dem gepack)
		(SIMPX
			[01;36m(VF[00m
				(SIMPX
					(LK wird)
					(MF
						(NX das)
						[01;36m(ADVX[00m
							(NN gepack)[01;36m)[00m)
					(VC nachgesendet))[01;36m)[00m
			(LK mus)
			(MF ich das selber)
			(VC schleppen))
		(SIMPX ich habe so ein ruckenleiden)
		(PX deswegen)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['VF', 'LK', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'ART', 'NN', 'VVPP'), 'right siblings': [(LK (VXFIN (VMFIN mus))), (MF (NX (PPER ich)) (NX (PDS das)) (ADVX (ADV selber))), (VC (VXINF (VVINF schleppen)))], 'left siblings': [], 'auto preterminal span': (8, 12), 'span': (8, 12), 'parent': 'SIMPX', 'label': 'VF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM okay)
		(SIMPX wie ist das mit dem gepack)
		(SIMPX
			(VF
				(SIMPX
					(LK wird)
					(MF
						(NX das)
						[01;36m(ADVX[00m
							(NN gepack)[01;36m)[00m)
					(VC nachgesendet)))
			(LK mus)
			(MF ich das selber)
			(VC schleppen))
		(SIMPX ich habe so ein ruckenleiden)
		(PX deswegen)))
Step:Single Word Phrase
{'subtrees': ['NN'], 'family': ['NX', 'ADVX'], 'over_word': True, 'over words': True, 'auto preterminals': ('NN',), 'right siblings': [], 'left siblings': [(NX (ART das))], 'auto preterminal span': (10, 11), 'span': (10, 11), 'parent': 'MF', 'label': 'ADVX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP ja okay wie ist das mit dem gepack wird das gepack nachgesendet mus ich das selber schleppen ich habe so ein ruckenleiden deswegen)

Sentence 602:
5 Initial errors
0 on fringe, 4 iterations
2 Error:UNSET move
1 Error:Modifier Attachment
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM okay)
		(DM ja)
		(DM okay)
		(SIMPX werde ich mich drum kummern)
		(DM ja)
		(DM prima)
		(SIMPX
			(VF dann)
			(LK bitte)
			[01;31m(MF[00m [01;33m(MF[00m
				(NX ich)
				(NX sie)
				(ADVX doch)[01;31m)[00m
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					[01;31m(MF[00m
						(NX
							(PDS das))[01;31m)[00m [01;33mMF)[00m
					(VC zu buchen)[01;31m)[00m[01;31m)[00m)
		(DM ja)))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['MF', 'NX'], 'mover info': [('MF', (13, 16))], 'old_family': ['VF', 'LK', 'MF', 'NF'], 'start left siblings': ['VF', 'LK'], 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'PPER', 'ADV', 'PDS', 'PTKZU', 'VVINF'), 'start right siblings': ['NF'], 'end left siblings': [], 'auto preterminal span': (11, 19), 'movers': ['MF'], 'old_parent': 'SIMPX', 'end right siblings': ['NX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(DM okay)
		(DM ja)
		(DM okay)
		(SIMPX werde ich mich drum kummern)
		(DM ja)
		(DM prima)
		(SIMPX
			(VF dann)
			(LK bitte)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					(MF
						[01;31m(MF[00m
							(NX ich)
							(NX sie)
							(ADVX doch)[01;31m)[00m
						(NX das))
					(VC zu buchen)[01;31m)[00m[01;31m)[00m)
		(DM ja)))
Step:Modifier Attachment
{'subtrees': ['NX', 'NX', 'ADVX'], 'family': ['MF', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'PPER', 'ADV', 'PDS'), 'right siblings': ['NX'], 'parent': 'MF', 'auto preterminal span': (13, 17), 'span': (13, 16), 'left siblings': [], 'label': 'MF', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM okay)
		(DM ja)
		(DM okay)
		(SIMPX werde ich mich drum kummern)
		(DM ja)
		(DM prima)
		(SIMPX
			(VF dann)
			(LK bitte)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					(MF ich sie doch das)
					(VC zu buchen)[01;31m)[00m[01;31m)[00m)
		(DM ja)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['VF', 'LK', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'PPER', 'ADV', 'PDS', 'PTKZU', 'VVINF'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (11, 19), 'span': (13, 19), 'left siblings': ['VF', 'LK'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM okay)
		(DM ja)
		(DM okay)
		(SIMPX werde ich mich drum kummern)
		(DM ja)
		(DM prima)
		(SIMPX
			(VF dann)
			(LK bitte)
			[01;31m(SIMPX[00m
				(MF ich sie doch das)
				(VC zu buchen)[01;31m)[00m)
		(DM ja)))
Step:UNSET remove
{'subtrees': ['MF', 'VC'], 'family': ['VF', 'LK', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'PPER', 'ADV', 'PDS', 'PTKZU', 'VVINF'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (11, 19), 'span': (13, 19), 'left siblings': ['VF', 'LK'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ja okay ja okay werde ich mich drum kummern ja prima dann bitte ich sie doch das zu buchen ja)

Sentence 603:
0 Initial errors
0 on fringe, 0 iterations

Sentence 604:
0 Initial errors
0 on fringe, 0 iterations

Sentence 605:
16 Initial errors
0 on fringe, 9 iterations
7 Error:Clause Attachment
2 Error:Single Word Phrase
1 Error:UNSET add
1 Error:Unary
1 Error:Unary
1 Error:Unary
1 Error:Single Word Phrase
1 Error:UNSET remove
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM hallo)
		(DM herr klein)
		(ADJX gut das wir uns treffen)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF ich)
				(LK habe)
				(VC gehort)
				[01;31m(NF[00m [01;33m(SIMPX (NF[00m
					[01;31m(SIMPX[00m
						(VF wir)
						[01;36m(LKMVC[00m
							[01;33m(FKOORD[00m (LK sollen)
							(MF zusammen)
							(VC verreisen)
							[01;36m(PX[00m
								(NF
									[01;36m(MF[00m
										(PX
											(APPR nach)
											(NX hannover))[01;36m)[00m
									[01;36m(VXINF[00m [01;36m(VC[00m [01;31m(ADJX[00m
										(ADJD geschaftlich)[01;31m)[00m[01;36m)[00m[01;36m)[00m)[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				(LK ware)
				(MF doch gut)
				(NF
					(SIMPX
						(C wenn)
						[01;31m(FKOORD[00m
							(MVC wir uns eben zusammensetzen)
							(KON und)
							(MVC die sache klaren)[01;31m)[00m))[01;31m)[00m[01;36m)[00m)) [01;33mFKOORD) NF) SIMPX)[00m
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'VC', 'NF', 'SIMPX'], 'mover info': [('SIMPX', (18, 31))], 'old_family': ['DM', 'DM', 'ADJX', 'SIMPX', 'SIMPX'], 'start left siblings': ['DM', 'DM', 'ADJX', 'SIMPX'], 'auto preterminals': ('ITJ', 'NN', 'NE', 'ADJD', 'KOUS', 'PPER', 'PRF', 'VVFIN', 'PPER', 'VAFIN', 'VVPP', 'PPER', 'VMFIN', 'ADV', 'VVINF', 'APPR', 'NE', 'ADJD', 'KON', 'VAFIN', 'ADV', 'ADJD', 'KOUS', 'PPER', 'PRF', 'ADV', 'VVFIN', 'KON', 'ART', 'NN', 'VVFIN'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'MF', 'VC', 'NF'], 'auto preterminal span': (0, 31), 'adding node already present': False, 'movers': ['SIMPX'], 'old_parent': 'TURN', 'added and moved': True, 'end right siblings': [], 'classified_type': 'Clause Attachment', 'type': 'move', 'added label': 'VXINF'}
(TOP
	(TURN
		(DM hallo)
		(DM herr klein)
		(ADJX gut das wir uns treffen)
		(SIMPX
			(VF ich)
			(LK habe)
			(VC gehort)
			(NF
				(SIMPX
					(VF wir)
					(FKOORD
						[01;36m(LKMVC[00m
							(LK sollen)
							(MF zusammen)
							(VC verreisen)
							[01;36m(PX[00m
								(NF
									[01;36m(MF[00m
										(PX
											(APPR nach)
											(NX hannover))[01;36m)[00m
									[01;36m(VXINF[00m [01;36m(VC[00m [01;31m(ADJX[00m
										(ADJD geschaftlich)[01;31m)[00m[01;36m)[00m[01;36m)[00m)[01;36m)[00m[01;36m)[00m
						[01;31m(SIMPX[00m
							[01;31m(KOORD[00m
								(KON und)[01;31m)[00m
							(LK ware)
							(MF doch gut)
							(NF
								(SIMPX
									(C wenn)
									[01;31m(FKOORD[00m
										(MVC wir uns eben zusammensetzen)
										(KON und)
										(MVC die sache klaren)[01;31m)[00m))[01;31m)[00m))))))
Step:Single Word Phrase
{'family': ['PX', 'VC'], 'auto preterminal span': (17, 18), 'span': (17, 18), 'subtrees': ['ADJD'], 'parent': 'NF', 'over_word': True, 'auto preterminals': ('ADJD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'VC')}
(TOP
	(TURN
		(DM hallo)
		(DM herr klein)
		(ADJX gut das wir uns treffen)
		(SIMPX
			(VF ich)
			(LK habe)
			(VC gehort)
			(NF
				(SIMPX
					(VF wir)
					(FKOORD
						[01;36m(LKMVC[00m
							(LK sollen)
							(MF zusammen)
							(VC verreisen)
							[01;36m(PX[00m
								(NF
									[01;36m(MF[00m
										(PX
											(APPR nach)
											(NX hannover))[01;36m)[00m
									[01;36m(VXINF[00m
										(VC
											(ADJD geschaftlich))[01;36m)[00m)[01;36m)[00m[01;36m)[00m
						[01;31m(SIMPX[00m
							[01;31m(KOORD[00m
								(KON und)[01;31m)[00m
							(LK ware)
							(MF doch gut)
							(NF
								(SIMPX
									(C wenn)
									[01;31m(FKOORD[00m
										(MVC wir uns eben zusammensetzen)
										(KON und)
										(MVC die sache klaren)[01;31m)[00m))[01;31m)[00m))))))
Step:UNSET add
{'subtrees': ['LK', 'MF', 'VC', 'NF'], 'family': ['LKMVC', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VMFIN', 'ADV', 'VVINF', 'APPR', 'NE', 'ADJD'), 'right siblings': [(SIMPX (KOORD (KON und)) (LK (VXFIN (VAFIN ware))) (MF (ADVX (ADV doch)) (ADJX (ADJD gut))) (NF (SIMPX (C (KOUS wenn)) (FKOORD (MVC (MF (NX (PPER wir)) (NX (PRF uns)) (ADVX (ADV eben))) (VC (VXFIN (VVFIN zusammensetzen)))) (KON und) (MVC (MF (NX (ART die) (NN sache))) (VC (VXFIN (VVFIN klaren))))))))], 'left siblings': [], 'auto preterminal span': (12, 18), 'span': (12, 18), 'parent': 'FKOORD', 'label': 'LKMVC', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM hallo)
		(DM herr klein)
		(ADJX gut das wir uns treffen)
		(SIMPX
			(VF ich)
			(LK habe)
			(VC gehort)
			(NF
				(SIMPX
					(VF wir)
					(FKOORD
						(LKMVC
							(LK sollen)
							(MF zusammen)
							(VC verreisen)
							[01;36m(PX[00m
								(NF
									[01;36m(MF[00m
										(PX
											(APPR nach)
											(NX hannover))[01;36m)[00m
									[01;36m(VXINF[00m
										(VC
											(ADJD geschaftlich))[01;36m)[00m)[01;36m)[00m)
						[01;31m(SIMPX[00m
							[01;31m(KOORD[00m
								(KON und)[01;31m)[00m
							(LK ware)
							(MF doch gut)
							(NF
								(SIMPX
									(C wenn)
									[01;31m(FKOORD[00m
										(MVC wir uns eben zusammensetzen)
										(KON und)
										(MVC die sache klaren)[01;31m)[00m))[01;31m)[00m))))))
Step:Unary
{'subtrees': ['PX'], 'family': ['MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'NE'), 'right siblings': [(VC (ADJD geschaftlich))], 'left siblings': [], 'auto preterminal span': (15, 17), 'span': (15, 17), 'parent': 'NF', 'label': 'MF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM hallo)
		(DM herr klein)
		(ADJX gut das wir uns treffen)
		(SIMPX
			(VF ich)
			(LK habe)
			(VC gehort)
			(NF
				(SIMPX
					(VF wir)
					(FKOORD
						(LKMVC
							(LK sollen)
							(MF zusammen)
							(VC verreisen)
							[01;36m(PX[00m
								(NF
									(MF nach hannover)
									[01;36m(VXINF[00m
										(VC
											(ADJD geschaftlich))[01;36m)[00m)[01;36m)[00m)
						[01;31m(SIMPX[00m
							[01;31m(KOORD[00m
								(KON und)[01;31m)[00m
							(LK ware)
							(MF doch gut)
							(NF
								(SIMPX
									(C wenn)
									[01;31m(FKOORD[00m
										(MVC wir uns eben zusammensetzen)
										(KON und)
										(MVC die sache klaren)[01;31m)[00m))[01;31m)[00m))))))
Step:Unary
{'subtrees': ['NF'], 'family': ['LK', 'MF', 'VC', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'NE', 'ADJD'), 'right siblings': [], 'left siblings': [(LK (VXFIN (VMFIN sollen))), (MF (ADVX (ADV zusammen))), (VC (VXINF (VVINF verreisen)))], 'auto preterminal span': (15, 18), 'span': (15, 18), 'parent': 'LKMVC', 'label': 'PX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM hallo)
		(DM herr klein)
		(ADJX gut das wir uns treffen)
		(SIMPX
			(VF ich)
			(LK habe)
			(VC gehort)
			(NF
				(SIMPX
					(VF wir)
					(FKOORD
						(LKMVC
							(LK sollen)
							(MF zusammen)
							(VC verreisen)
							(PX
								(NF
									(MF nach hannover)
									[01;36m(VXINF[00m
										(VC
											(ADJD geschaftlich))[01;36m)[00m)))
						[01;31m(SIMPX[00m
							[01;31m(KOORD[00m
								(KON und)[01;31m)[00m
							(LK ware)
							(MF doch gut)
							(NF
								(SIMPX
									(C wenn)
									[01;31m(FKOORD[00m
										(MVC wir uns eben zusammensetzen)
										(KON und)
										(MVC die sache klaren)[01;31m)[00m))[01;31m)[00m))))))
Step:Unary
{'subtrees': ['VC'], 'family': ['MF', 'VXINF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJD',), 'right siblings': [], 'left siblings': [(MF (PX (APPR nach) (NX (NE hannover))))], 'auto preterminal span': (17, 18), 'span': (17, 18), 'parent': 'NF', 'label': 'VXINF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM hallo)
		(DM herr klein)
		(ADJX gut das wir uns treffen)
		(SIMPX
			(VF ich)
			(LK habe)
			(VC gehort)
			(NF
				(SIMPX
					(VF wir)
					(FKOORD
						(LKMVC sollen zusammen verreisen nach hannover geschaftlich)
						[01;31m(SIMPX[00m
							[01;31m(KOORD[00m
								(KON und)[01;31m)[00m
							(LK ware)
							(MF doch gut)
							(NF
								(SIMPX
									(C wenn)
									[01;31m(FKOORD[00m
										(MVC wir uns eben zusammensetzen)
										(KON und)
										(MVC die sache klaren)[01;31m)[00m))[01;31m)[00m))))))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['KOORD', 'LK', 'MF', 'NF'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON', 'VAFIN', 'ADV', 'ADJD', 'KOUS', 'PPER', 'PRF', 'ADV', 'VVFIN', 'KON', 'ART', 'NN', 'VVFIN'), 'right siblings': ['LK', 'MF', 'NF'], 'parent': 'SIMPX', 'auto preterminal span': (18, 31), 'span': (18, 19), 'left siblings': [], 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(DM hallo)
		(DM herr klein)
		(ADJX gut das wir uns treffen)
		(SIMPX
			(VF ich)
			(LK habe)
			(VC gehort)
			(NF
				(SIMPX
					(VF wir)
					(FKOORD
						(LKMVC sollen zusammen verreisen nach hannover geschaftlich)
						[01;31m(SIMPX[00m
							(KON und)
							(LK ware)
							(MF doch gut)
							(NF
								(SIMPX
									(C wenn)
									[01;31m(FKOORD[00m
										(MVC wir uns eben zusammensetzen)
										(KON und)
										(MVC die sache klaren)[01;31m)[00m))[01;31m)[00m))))))
Step:UNSET remove
{'subtrees': ['KON', 'LK', 'MF', 'NF'], 'family': ['LKMVC', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VMFIN', 'ADV', 'VVINF', 'APPR', 'NE', 'ADJD', 'KON', 'VAFIN', 'ADV', 'ADJD', 'KOUS', 'PPER', 'PRF', 'ADV', 'VVFIN', 'KON', 'ART', 'NN', 'VVFIN'), 'right siblings': [], 'parent': 'FKOORD', 'auto preterminal span': (12, 31), 'span': (18, 31), 'left siblings': ['LKMVC'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM hallo)
		(DM herr klein)
		(ADJX gut das wir uns treffen)
		(SIMPX
			(VF ich)
			(LK habe)
			(VC gehort)
			(NF
				(SIMPX
					(VF wir)
					(FKOORD
						(LKMVC sollen zusammen verreisen nach hannover geschaftlich)
						(KON und)
						(LK ware)
						(MF doch gut)
						(NF
							(SIMPX
								(C wenn)
								[01;31m(FKOORD[00m
									(MVC wir uns eben zusammensetzen)
									(KON und)
									(MVC die sache klaren)[01;31m)[00m))))))))
Step:UNSET remove
{'subtrees': ['MVC', 'KON', 'MVC'], 'family': ['C', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'PRF', 'ADV', 'VVFIN', 'KON', 'ART', 'NN', 'VVFIN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (22, 31), 'span': (23, 31), 'left siblings': ['C'], 'label': 'FKOORD', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP hallo herr klein gut das wir uns treffen ich habe gehort wir sollen zusammen verreisen nach hannover geschaftlich und ware doch gut wenn wir uns eben zusammensetzen und die sache klaren)

Sentence 606:
0 Initial errors
0 on fringe, 0 iterations

Sentence 607:
0 Initial errors
0 on fringe, 0 iterations

Sentence 608:
0 Initial errors
0 on fringe, 0 iterations

Sentence 609:
0 Initial errors
0 on fringe, 0 iterations

Sentence 610:
0 Initial errors
0 on fringe, 0 iterations

Sentence 611:
6 Initial errors
0 on fringe, 4 iterations
2 Error:Single Word Phrase
2 Error:NP Attachment
1 Error:NP Internal Structure
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM okay)
		(SIMPX
			(VF dann)
			(LK mache)
			[01;36m(MF[00m
				[01;31m(MF[00m
					(NX ich)
					[01;33m(NX[00m (NX die sache)[01;31m)[00m
				[01;36m(NX[00m [01;31m(VC[00m
					(PTKVZ feste)[01;31m)[00m [01;33mNX)[00m[01;36m)[00m
				[01;31m(NF[00m
					(PX
						(APPRART im)
						(NX reiseburo))[01;31m)[00m[01;36m)[00m)))
Step:Single Word Phrase
{'family': ['VF', 'LK', 'MF', 'NX', 'NF'], 'auto preterminal span': (6, 7), 'span': (6, 7), 'subtrees': ['PTKVZ'], 'parent': 'SIMPX', 'over_word': True, 'auto preterminals': ('PTKVZ',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VC', 'NX')}
(TOP
	(TURN
		(DM okay)
		(SIMPX
			(VF dann)
			(LK mache)
			[01;36m(MF[00m
				[01;31m(MF[00m
					(NX ich)
					[01;33m(NX[00m (NX die sache)[01;31m)[00m
				(NX feste) [01;33mNX)[00m
				[01;31m(NF[00m
					(PX
						(APPRART im)
						(NX reiseburo))[01;31m)[00m[01;36m)[00m)))
Step:NP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'NX', 'NX', 'NF'], 'mover info': [('NX', (6, 7)), ('NF', (7, 9))], 'old_family': ['VF', 'LK', 'MF', 'NX', 'NF'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'ART', 'NN', 'PTKVZ', 'APPRART', 'NN'), 'start right siblings': [], 'end left siblings': ['NX', 'NX'], 'auto preterminal span': (1, 9), 'movers': ['NX', 'NF'], 'old_parent': 'SIMPX', 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM okay)
		(SIMPX
			(VF dann)
			(LK mache)
			(MF
				(NX ich)
				[01;36m(NX[00m
					(NX die sache)
					(NX feste)[01;36m)[00m
				[01;31m(NF[00m
					(PX
						(APPRART im)
						(NX reiseburo))[01;31m)[00m))))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['NX', 'NX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'PTKVZ'), 'right siblings': [(NF (PX (APPRART im) (NX (NN reiseburo))))], 'left siblings': [(NX (PPER ich))], 'auto preterminal span': (4, 7), 'span': (4, 7), 'parent': 'MF', 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'add'}
(TOP
	(TURN
		(DM okay)
		(SIMPX
			(VF dann)
			(LK mache)
			(MF
				(NX ich)
				(NX die sache feste)
				[01;31m(NF[00m
					(PX
						(APPRART im)
						(NX reiseburo))[01;31m)[00m))))
Step:Unary
{'subtrees': ['PX'], 'family': ['NX', 'NX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ART', 'NN', 'PTKVZ', 'APPRART', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (3, 9), 'span': (7, 9), 'left siblings': ['NX', 'NX'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP okay dann mache ich die sache feste im reiseburo)

Sentence 612:
2 Initial errors
0 on fringe, 2 iterations
1 Error:UNSET add
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM okay)
		(DM frau schmidt)
		(SIMPX musten uns das zu machen)
		(DM also)
		(SIMPX
			[01;36m(SIMPX[00m
				(VF ich)
				(LK habe)
				(MF hier schon eine liste)
				(VC liegen)[01;36m)[00m
			(DM und zwar)
			[01;31m(NF[00m
				(NX
					(NX der zugverbindungen)
					(PX von bonn nach hannover))[01;31m)[00m)
		(SIMPX was meinen sie denn)
		(SIMPX wann sollten wir fahren)))
Step:UNSET add
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['SIMPX', 'DM', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'ADV', 'ADV', 'ART', 'NN', 'VVINF'), 'right siblings': [(DM (KON und) (ADVX (ADV zwar))), (NF (NX (NX (ART der) (NN zugverbindungen)) (PX (PX (APPR von) (NX (NE bonn))) (PX (APPR nach) (NX (NE hannover))))))], 'left siblings': [], 'auto preterminal span': (10, 17), 'span': (10, 17), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM okay)
		(DM frau schmidt)
		(SIMPX musten uns das zu machen)
		(DM also)
		(SIMPX
			(SIMPX ich habe hier schon eine liste liegen)
			(DM und zwar)
			[01;31m(NF[00m
				(NX
					(NX der zugverbindungen)
					(PX von bonn nach hannover))[01;31m)[00m)
		(SIMPX was meinen sie denn)
		(SIMPX wann sollten wir fahren)))
Step:Unary
{'subtrees': ['NX'], 'family': ['SIMPX', 'DM', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'ADV', 'ADV', 'ART', 'NN', 'VVINF', 'KON', 'ADV', 'ART', 'NN', 'APPR', 'NE', 'APPR', 'NE'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (10, 25), 'span': (19, 25), 'left siblings': ['SIMPX', 'DM'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja okay frau schmidt musten uns das zu machen also ich habe hier schon eine liste liegen und zwar der zugverbindungen von bonn nach hannover was meinen sie denn wann sollten wir fahren)

Sentence 613:
4 Initial errors
0 on fringe, 2 iterations
3 Error:Modifier Attachment
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(LK denke)
				[01;33m(MF[00m (MF ich auch)[01;31m)[00m
			[01;31m(ADJX[00m
				(ADVX aber)
				(ADVX nicht)
				(ADJX zu fruh)[01;31m)[00m [01;33mMF)[00m[01;36m)[00m
		(SIMPX ich schaue mal gerade)
		(DM ja)
		(SIMPX acht uhr zwanzig ist mir ganz recht)))
Step:Modifier Attachment
{'new_parent': 'SIMPX', 'new_family': ['LK', 'MF', 'ADJX'], 'mover info': [('ADJX', (4, 8))], 'old_family': ['DM', 'SIMPX', 'ADJX', 'SIMPX', 'DM', 'SIMPX'], 'start left siblings': ['DM', 'SIMPX'], 'auto preterminals': ('PTKANT', 'VVFIN', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'PTKA', 'ADJD', 'PPER', 'VVFIN', 'ADV', 'ADV', 'PTKANT', 'CARD', 'NN', 'CARD', 'VAFIN', 'PPER', 'ADV', 'ADJD'), 'start right siblings': ['SIMPX', 'DM', 'SIMPX'], 'end left siblings': ['LK', 'MF'], 'auto preterminal span': (0, 20), 'adding node already present': False, 'movers': ['ADJX'], 'old_parent': 'TURN', 'added and moved': True, 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'MF'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(LK denke)
			(MF
				(MF ich auch)
				[01;31m(ADJX[00m
					(ADVX aber)
					(ADVX nicht)
					(ADJX zu fruh)[01;31m)[00m))
		(SIMPX ich schaue mal gerade)
		(DM ja)
		(SIMPX acht uhr zwanzig ist mir ganz recht)))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'ADVX', 'ADJX'], 'family': ['MF', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV', 'ADV', 'PTKNEG', 'PTKA', 'ADJD'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (2, 8), 'span': (4, 8), 'left siblings': ['MF'], 'label': 'ADJX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP ja denke ich auch aber nicht zu fruh ich schaue mal gerade ja acht uhr zwanzig ist mir ganz recht)

Sentence 614:
3 Initial errors
0 on fringe, 3 iterations
1 Error:Clause Attachment
1 Error:Modifier Attachment
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM okay)
		(DM ja)
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK habe)
			(MF
				(NX ich)
				(NX mir)
				(ADVX da)
				(NX mich)
				(ADVX da)
				(ADVX auch)
				(ADVX noch)
				[01;31m(ADJX[00m
					(NX so ein bischen)
					(ADJD schlau)[01;31m)[00m)
			(VC gemacht))
		(SIMPX konnte ja auch nach der veranstaltung noch was unternehmen)
		(SIMPX was halten sie davon)
		[01;36m(SIMPX[00m
			(SIMPX
				(VF ich)
				(LK dachte)
				(MF
					(ADVX mehr)
					[01;31m(PX[00m
						(APPR an)
						(NX theaterbesuch im ballhof)[01;31m)[00m))
			(SIMPX da kommen auch die andern kollegen mit)[01;36m)[00m))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['DM', 'DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'APPR', 'NN', 'APPRART', 'NE', 'ADV', 'VVFIN', 'ADV', 'ART', 'ADJA', 'NN', 'PTKVZ'), 'right siblings': [], 'left siblings': [(DM (PTKANT ja)), (DM (ITJ okay)), (DM (PTKANT ja)), (SIMPX (KOORD (KON und)) (VF (ADVX (ADV dann))) (LK (VXFIN (VAFIN habe))) (MF (NX (PPER ich)) (NX (PRF mir)) (ADVX (ADV da)) (NX (PRF mich)) (ADVX (ADV da)) (ADVX (ADV auch)) (ADVX (ADV noch)) (ADJX (NX (ADVX (ADV so)) (ART ein) (PIS bischen)) (ADJD schlau))) (VC (VXINF (VVPP gemacht)))), (SIMPX (LK (VXFIN (VMFIN konnte))) (MF (ADVX (ADV ja)) (ADVX (ADV auch)) (PX (APPR nach) (NX (ART der) (NN veranstaltung))) (ADVX (ADV noch)) (NX (PIS was))) (VC (VXINF (VVINF unternehmen)))), (SIMPX (VF (NX (PWS was))) (LK (VXFIN (VVFIN halten))) (MF (NX (PPER sie)) (PX (PROP davon))))], 'auto preterminal span': (31, 45), 'span': (31, 45), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM okay)
		(DM ja)
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK habe)
			(MF
				(NX ich)
				(NX mir)
				(ADVX da)
				(NX mich)
				(ADVX da)
				(ADVX auch)
				(ADVX noch)
				[01;31m(ADJX[00m
					(NX so ein bischen)
					(ADJD schlau)[01;31m)[00m)
			(VC gemacht))
		(SIMPX konnte ja auch nach der veranstaltung noch was unternehmen)
		(SIMPX was halten sie davon)
		(SIMPX
			(SIMPX
				(VF ich)
				(LK dachte)
				(MF
					(ADVX mehr)
					[01;31m(PX[00m
						(APPR an)
						(NX theaterbesuch im ballhof)[01;31m)[00m))
			(SIMPX da kommen auch die andern kollegen mit))))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADJD'], 'family': ['NX', 'NX', 'ADVX', 'NX', 'ADVX', 'ADVX', 'ADVX', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'PRF', 'ADV', 'PRF', 'ADV', 'ADV', 'ADV', 'ADV', 'ART', 'PIS', 'ADJD'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (6, 17), 'span': (13, 17), 'left siblings': ['NX', 'NX', 'ADVX', 'NX', 'ADVX', 'ADVX', 'ADVX'], 'label': 'ADJX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM okay)
		(DM ja)
		(SIMPX und dann habe ich mir da mich da auch noch so ein bischen schlau gemacht)
		(SIMPX konnte ja auch nach der veranstaltung noch was unternehmen)
		(SIMPX was halten sie davon)
		(SIMPX
			(SIMPX
				(VF ich)
				(LK dachte)
				(MF
					(ADVX mehr)
					[01;31m(PX[00m
						(APPR an)
						(NX theaterbesuch im ballhof)[01;31m)[00m))
			(SIMPX da kommen auch die andern kollegen mit))))
Step:UNSET remove
{'subtrees': ['APPR', 'NX'], 'family': ['ADVX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'APPR', 'NN', 'APPRART', 'NE'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (33, 38), 'span': (34, 38), 'left siblings': ['ADVX'], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ja okay ja und dann habe ich mir da mich da auch noch so ein bischen schlau gemacht konnte ja auch nach der veranstaltung noch was unternehmen was halten sie davon ich dachte mehr an theaterbesuch im ballhof da kommen auch die andern kollegen mit)

Sentence 615:
1 Initial errors
0 on fringe, 1 iterations
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ach so)
		[01;31m(DM[00m
			(ITJ ach)
			(NX gott)[01;31m)[00m
		(SIMPX haben sie eine liste da)
		(SIMPX konnen sie mir die eben reichen)))
Step:UNSET remove
{'subtrees': ['ITJ', 'NX'], 'family': ['DM', 'DM', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'ITJ', 'NE', 'VAFIN', 'PPER', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'PPER', 'PDS', 'ADV', 'VVINF'), 'right siblings': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 15), 'span': (2, 4), 'left siblings': ['DM'], 'label': 'DM', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ach so ach gott haben sie eine liste da konnen sie mir die eben reichen)

Sentence 616:
2 Initial errors
0 on fringe, 2 iterations
1 Error:UNSET add
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ah ja)
		(DM danke)
		(DM ja)
		(SIMPX ich denke das hotel savoy das ist ganz nett)
		(SIMPX da war ein kollege letztens drin gewesen)
		(SIMPX
			[01;36m(NX[00m
				[01;36m(LV[00m
					(VF der)
					(LK meinte)[01;36m)[00m[01;36m)[00m
			(NF das ware in ordnung))
		(DM ja)))
Step:UNSET add
{'subtrees': ['VF', 'LK'], 'family': ['LV', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VVFIN'), 'right siblings': [(NF (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VAFIN ware))) (MF (PX (APPR in) (NX (NN ordnung))))))], 'left siblings': [], 'auto preterminal span': (20, 22), 'span': (20, 22), 'parent': 'SIMPX', 'label': 'LV', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ah ja)
		(DM danke)
		(DM ja)
		(SIMPX ich denke das hotel savoy das ist ganz nett)
		(SIMPX da war ein kollege letztens drin gewesen)
		(SIMPX
			[01;36m(NX[00m
				(LV
					(VF der)
					(LK meinte))[01;36m)[00m
			(NF das ware in ordnung))
		(DM ja)))
Step:Unary
{'subtrees': ['LV'], 'family': ['NX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VVFIN'), 'right siblings': [(NF (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VAFIN ware))) (MF (PX (APPR in) (NX (NN ordnung))))))], 'left siblings': [], 'auto preterminal span': (20, 22), 'span': (20, 22), 'parent': 'SIMPX', 'label': 'NX', 'classified_type': 'Unary', 'type': 'add'}
(TOP ah ja danke ja ich denke das hotel savoy das ist ganz nett da war ein kollege letztens drin gewesen der meinte das ware in ordnung ja)

Sentence 617:
4 Initial errors
0 on fringe, 3 iterations
2 Error:Modifier Attachment
1 Error:UNSET add
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM okay)
		(SIMPX dann kummern sie sich drum)
		(DM ne)
		[01;31m(DM[00m
			(ADVX dann)
			[01;36m(DM[00m
				(PTKANT ja)[01;36m)[00m[01;31m)[00m
		(SIMPX ich habe ja noch eine telefonnummer von dem hotel)
		(SIMPX ich denke mal da konnte ich das dann festmachen)
		(SIMPX
			[01;36m(SIMPX[00m
				[01;36m(LV[00m
					(PARORD weil)
					(LV das mit dem reiseburo)[01;36m)[00m[01;36m)[00m
			(VF das)
			(LK ist)
			(MF immer so ein hinundher so ein hickhack))
		(SIMPX das mus nicht sein)
		(DM ja)))
Step:Modifier Attachment
{'new_parent': 'TURN', 'new_family': ['DM', 'SIMPX', 'DM', 'ADVX', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'DM'], 'mover info': [('ADVX', (7, 8))], 'old_family': ['ADVX', 'PTKANT'], 'start left siblings': [], 'auto preterminals': ('ITJ', 'ADV', 'VVFIN', 'PPER', 'PRF', 'PROP', 'ITJ', 'ADV', 'PTKANT', 'PPER', 'VAFIN', 'ADV', 'ADV', 'ART', 'NN', 'APPR', 'ART', 'NN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'VMFIN', 'PPER', 'PDS', 'ADV', 'VVINF', 'KOUS', 'PDS', 'APPR', 'ART', 'NN', 'PDS', 'VAFIN', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'ART', 'NN', 'PDS', 'VMFIN', 'PTKNEG', 'VAINF', 'PTKANT'), 'start right siblings': ['PTKANT'], 'end left siblings': ['DM', 'SIMPX', 'DM'], 'auto preterminal span': (0, 46), 'movers': ['ADVX'], 'old_parent': 'DM', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'DM'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM okay)
		(SIMPX dann kummern sie sich drum)
		(DM ne)
		(ADVX dann)
		(DM ja)
		(SIMPX ich habe ja noch eine telefonnummer von dem hotel)
		(SIMPX ich denke mal da konnte ich das dann festmachen)
		(SIMPX
			[01;36m(SIMPX[00m
				[01;36m(LV[00m
					(PARORD weil)
					(LV das mit dem reiseburo)[01;36m)[00m[01;36m)[00m
			(VF das)
			(LK ist)
			(MF immer so ein hinundher so ein hickhack))
		(SIMPX das mus nicht sein)
		(DM ja)))
Step:UNSET add
{'subtrees': ['PARORD', 'LV'], 'family': ['LV', 'VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PDS', 'APPR', 'ART', 'NN'), 'right siblings': [(VF (NX (PDS das))), (LK (VXFIN (VAFIN ist))), (MF (ADVX (ADV immer)) (NX (NX (ADVX (ADV so)) (ART ein) (NN hinundher)) (NX (ADVX (ADV so)) (ART ein) (NN hickhack))))], 'left siblings': [], 'auto preterminal span': (27, 32), 'span': (27, 32), 'parent': 'SIMPX', 'label': 'LV', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM okay)
		(SIMPX dann kummern sie sich drum)
		(DM ne)
		(ADVX dann)
		(DM ja)
		(SIMPX ich habe ja noch eine telefonnummer von dem hotel)
		(SIMPX ich denke mal da konnte ich das dann festmachen)
		(SIMPX
			[01;36m(SIMPX[00m
				(LV
					(PARORD weil)
					(LV das mit dem reiseburo))[01;36m)[00m
			(VF das)
			(LK ist)
			(MF immer so ein hinundher so ein hickhack))
		(SIMPX das mus nicht sein)
		(DM ja)))
Step:Unary
{'subtrees': ['LV'], 'family': ['SIMPX', 'VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PDS', 'APPR', 'ART', 'NN'), 'right siblings': [(VF (NX (PDS das))), (LK (VXFIN (VAFIN ist))), (MF (ADVX (ADV immer)) (NX (NX (ADVX (ADV so)) (ART ein) (NN hinundher)) (NX (ADVX (ADV so)) (ART ein) (NN hickhack))))], 'left siblings': [], 'auto preterminal span': (27, 32), 'span': (27, 32), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'add'}
(TOP okay dann kummern sie sich drum ne dann ja ich habe ja noch eine telefonnummer von dem hotel ich denke mal da konnte ich das dann festmachen weil das mit dem reiseburo das ist immer so ein hinundher so ein hickhack das mus nicht sein ja)

Sentence 618:
2 Initial errors
0 on fringe, 2 iterations
1 Error:Unary
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM guten tag)
		(SIMPX
			(VF hier)
			(LK ist)
			(MF
				[01;31m(NX[00m
					(NX meurer)
					(PX aus bonn)[01;31m)[00m))
		(SIMPX ich brauche eine verbindung nach hannover)
		(DM und zwar)
		(PX fur den funfzehnten juli)
		(SIMPX
			(KOORD und)
			(VF ich)
			(LK muste)
			(MF
				[01;31m(PX[00m
					(PX um neun uhr morgens)
					(ADVX ungefahr)[01;31m)[00m
				(ADVX da))
			(VC sein))))
Step:Unary
{'subtrees': ['NX', 'PX'], 'family': ['NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NE', 'APPR', 'NE'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (4, 7), 'span': (4, 7), 'left siblings': [], 'label': 'NX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM guten tag)
		(SIMPX hier ist meurer aus bonn)
		(SIMPX ich brauche eine verbindung nach hannover)
		(DM und zwar)
		(PX fur den funfzehnten juli)
		(SIMPX
			(KOORD und)
			(VF ich)
			(LK muste)
			(MF
				[01;31m(PX[00m
					(PX um neun uhr morgens)
					(ADVX ungefahr)[01;31m)[00m
				(ADVX da))
			(VC sein))))
Step:Modifier Attachment
{'subtrees': ['PX', 'ADVX'], 'family': ['PX', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'CARD', 'NN', 'ADV', 'ADV', 'ADV'), 'right siblings': ['ADVX'], 'parent': 'MF', 'auto preterminal span': (22, 28), 'span': (22, 27), 'left siblings': [], 'label': 'PX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP guten tag hier ist meurer aus bonn ich brauche eine verbindung nach hannover und zwar fur den funfzehnten juli und ich muste um neun uhr morgens ungefahr da sein)

Sentence 619:
2 Initial errors
0 on fringe, 1 iterations
2 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX das kommt drauf an wann ich ankomme)
		(DM also)
		(SIMPX
			(VF
				(SIMPX
					(C wenn)
					(MF
						(NX ich)
						[01;31m(NX[00m
							(PX mit dem flug)
							[01;36m(NX[00m
								(PDS das)[01;36m)[00m[01;31m)[00m
						(PX an demselben tag))
					(VC packe)))
			(LK ginge)
			(MF das eigentlich auch))))
Step:PP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'PX', 'NX', 'PX'], 'mover info': [('PX', (10, 13))], 'old_family': ['PX', 'PDS'], 'start left siblings': [], 'auto preterminals': ('PPER', 'APPR', 'ART', 'NN', 'PDS', 'APPR', 'PDAT', 'NN'), 'start right siblings': ['PDS'], 'end left siblings': ['NX'], 'auto preterminal span': (9, 17), 'movers': ['PX'], 'old_parent': 'NX', 'end right siblings': ['NX', 'PX'], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP das kommt drauf an wann ich ankomme also wenn ich mit dem flug das an demselben tag packe ginge das eigentlich auch)

Sentence 620:
4 Initial errors
0 on fringe, 2 iterations
3 Error:PP Attachment
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX das ware knapp)
		(SIMPX aber es muste eigentlich auch)
		(SIMPX
			(LK geht)
			(MF
				(ADVX auch)
				(ADVX irgendwie)
				(ADVX noch)
				[01;36m(NX[00m
					[01;31m(NX[00m
						(NX ein nachtexpres)
						(KON oder)
						[01;33m(PX[00m (ADVX so)[01;31m)[00m
					[01;31m(PX[00m
						(PROP dahin)[01;31m)[00m[01;36m)[00m)))) [01;33mPX)[00m
Step:PP Attachment
{'new_parent': 'NX', 'new_family': ['NX', 'KON', 'ADVX', 'PX'], 'mover info': [('PX', (16, 17))], 'old_family': ['ADVX', 'ADVX', 'ADVX', 'NX', 'PX'], 'start left siblings': ['ADVX', 'ADVX', 'ADVX', 'NX'], 'auto preterminals': ('ADV', 'ADV', 'ADV', 'ART', 'NN', 'KON', 'ADV', 'PROP'), 'start right siblings': [], 'end left siblings': ['NX', 'KON', 'ADVX'], 'auto preterminal span': (9, 17), 'adding node already present': False, 'movers': ['PX'], 'old_parent': 'MF', 'POS confusion': ('PROP', 'PROP'), 'added and moved': True, 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'PX'}
(TOP
	(TURN
		(SIMPX das ware knapp)
		(SIMPX aber es muste eigentlich auch)
		(SIMPX
			(LK geht)
			(MF
				(ADVX auch)
				(ADVX irgendwie)
				(ADVX noch)
				(NX
					(NX ein nachtexpres)
					(KON oder)
					(PX
						(ADVX so)
						[01;31m(PX[00m
							(PROP dahin)[01;31m)[00m))))))
Step:Single Word Phrase
{'subtrees': ['PROP'], 'family': ['ADVX', 'PX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADV', 'PROP'), 'right siblings': [], 'parent': 'PX', 'auto preterminal span': (15, 17), 'span': (16, 17), 'left siblings': ['ADVX'], 'label': 'PX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP das ware knapp aber es muste eigentlich auch geht auch irgendwie noch ein nachtexpres oder so dahin)

Sentence 621:
0 Initial errors
0 on fringe, 0 iterations

Sentence 622:
9 Initial errors
0 on fringe, 5 iterations
2 Error:Single Word Phrase
2 Error:Single Word Phrase
2 Error:Modifier Attachment
2 Error:Modifier Attachment
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM also)
		(SIMPX
			(VF ich)
			(LK bleibe)
			[01;36m(MF[00m
				[01;31m(MF[00m
					(ADVX sowieso)
					(NX einige tage)[01;31m)[00m
				[01;36m(ADVX[00m [01;31m(VC[00m
					(PTKVZ da)[01;31m)[00m[01;36m)[00m[01;36m)[00m)
		(SIMPX
			(VF ich)
			(LK bleibe)
			[01;36m(MF[00m
				[01;31m(MF[00m
					(NX
						(ADJX drei)
						(NN tage))[01;31m)[00m
				[01;36m(ADVX[00m [01;31m(VC[00m
					(PTKVZ da)[01;31m)[00m[01;36m)[00m[01;36m)[00m)
		(SIMPX das waren auf jeden fall dann mal drei nachte)
		(SIMPX wieviel kostet denn ein hotel in hannover)
		(NX
			(ADVX so)
			[01;31m(NX[00m
				(NN mittelklasse)[01;31m)[00m)))
Step:Single Word Phrase
{'family': ['VF', 'LK', 'MF', 'ADVX'], 'auto preterminal span': (6, 7), 'span': (6, 7), 'subtrees': ['PTKVZ'], 'parent': 'SIMPX', 'over_word': True, 'auto preterminals': ('PTKVZ',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VC', 'ADVX')}
(TOP
	(TURN
		(DM also)
		(SIMPX
			(VF ich)
			(LK bleibe)
			[01;36m(MF[00m
				[01;31m(MF[00m
					(ADVX sowieso)
					(NX einige tage)[01;31m)[00m
				(ADVX da)[01;36m)[00m)
		(SIMPX
			(VF ich)
			(LK bleibe)
			[01;36m(MF[00m
				[01;31m(MF[00m
					(NX
						(ADJX drei)
						(NN tage))[01;31m)[00m
				[01;36m(ADVX[00m [01;31m(VC[00m
					(PTKVZ da)[01;31m)[00m[01;36m)[00m[01;36m)[00m)
		(SIMPX das waren auf jeden fall dann mal drei nachte)
		(SIMPX wieviel kostet denn ein hotel in hannover)
		(NX
			(ADVX so)
			[01;31m(NX[00m
				(NN mittelklasse)[01;31m)[00m)))
Step:Single Word Phrase
{'family': ['VF', 'LK', 'MF', 'ADVX'], 'auto preterminal span': (11, 12), 'span': (11, 12), 'subtrees': ['PTKVZ'], 'parent': 'SIMPX', 'over_word': True, 'auto preterminals': ('PTKVZ',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VC', 'ADVX')}
(TOP
	(TURN
		(DM also)
		(SIMPX
			(VF ich)
			(LK bleibe)
			[01;36m(MF[00m
				[01;31m(MF[00m
					(ADVX sowieso)
					(NX einige tage)[01;31m)[00m
				(ADVX da)[01;36m)[00m)
		(SIMPX
			(VF ich)
			(LK bleibe)
			[01;36m(MF[00m
				[01;31m(MF[00m
					(NX
						(ADJX drei)
						(NN tage))[01;31m)[00m
				(ADVX da)[01;36m)[00m)
		(SIMPX das waren auf jeden fall dann mal drei nachte)
		(SIMPX wieviel kostet denn ein hotel in hannover)
		(NX
			(ADVX so)
			[01;31m(NX[00m
				(NN mittelklasse)[01;31m)[00m)))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['ADVX', 'NX', 'ADVX'], 'mover info': [('ADVX', (6, 7))], 'old_family': ['VF', 'LK', 'MF', 'ADVX'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'PIAT', 'NN', 'PTKVZ'), 'start right siblings': [], 'end left siblings': ['ADVX', 'NX'], 'auto preterminal span': (1, 7), 'movers': ['ADVX'], 'old_parent': 'SIMPX', 'POS confusion': ('PTKVZ', 'PTKVZ'), 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM also)
		(SIMPX ich bleibe sowieso einige tage da)
		(SIMPX
			(VF ich)
			(LK bleibe)
			[01;36m(MF[00m
				[01;31m(MF[00m
					(NX
						(ADJX drei)
						(NN tage))[01;31m)[00m
				(ADVX da)[01;36m)[00m)
		(SIMPX das waren auf jeden fall dann mal drei nachte)
		(SIMPX wieviel kostet denn ein hotel in hannover)
		(NX
			(ADVX so)
			[01;31m(NX[00m
				(NN mittelklasse)[01;31m)[00m)))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'ADVX'], 'mover info': [('ADVX', (11, 12))], 'old_family': ['VF', 'LK', 'MF', 'ADVX'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('PPER', 'VVFIN', 'CARD', 'NN', 'PTKVZ'), 'start right siblings': [], 'end left siblings': ['NX'], 'auto preterminal span': (7, 12), 'movers': ['ADVX'], 'old_parent': 'SIMPX', 'POS confusion': ('PTKVZ', 'PTKVZ'), 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM also)
		(SIMPX ich bleibe sowieso einige tage da)
		(SIMPX ich bleibe drei tage da)
		(SIMPX das waren auf jeden fall dann mal drei nachte)
		(SIMPX wieviel kostet denn ein hotel in hannover)
		(NX
			(ADVX so)
			[01;31m(NX[00m
				(NN mittelklasse)[01;31m)[00m)))
Step:Single Word Phrase
{'subtrees': ['NN'], 'family': ['ADVX', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADV', 'NN'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (28, 30), 'span': (29, 30), 'left siblings': ['ADVX'], 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP also ich bleibe sowieso einige tage da ich bleibe drei tage da das waren auf jeden fall dann mal drei nachte wieviel kostet denn ein hotel in hannover so mittelklasse)

Sentence 623:
4 Initial errors
0 on fringe, 2 iterations
2 Error:Different label
2 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX was ware denn das nachstbilligere hotel)
		[01;36m(PX[00m [01;31m(NX[00m
			(ADVX auch)
			[01;36m(NX[00m
				(ADVX so)
				[01;31m(NX[00m
					(ADJX zentrale)
					(NN lage)[01;31m)[00m[01;36m)[00m
			(ADVX eher)[01;31m)[00m[01;36m)[00m))
Step:Different label
{'family': ['SIMPX', 'PX'], 'auto preterminal span': (6, 11), 'span': (6, 11), 'subtrees': ['ADVX', 'ADVX', 'NX', 'ADVX'], 'parent': 'TURN', 'over_word': False, 'auto preterminals': ('ADV', 'ADV', 'ADJA', 'NN', 'ADV'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('NX', 'PX')}
(TOP
	(TURN
		(SIMPX was ware denn das nachstbilligere hotel)
		(PX
			(ADVX auch)
			[01;36m(NX[00m
				(ADVX so)
				[01;31m(NX[00m
					(ADJX zentrale)
					(NN lage)[01;31m)[00m[01;36m)[00m
			(ADVX eher))))
Step:Modifier Attachment
{'new_parent': 'NX', 'new_family': ['ADVX', 'ADJX', 'NN'], 'mover info': [('ADVX', (7, 8))], 'old_family': ['ADVX', 'ADVX', 'NX', 'ADVX'], 'start left siblings': ['ADVX'], 'auto preterminals': ('ADV', 'ADV', 'ADJA', 'NN', 'ADV'), 'start right siblings': ['NX', 'ADVX'], 'end left siblings': [], 'auto preterminal span': (6, 11), 'movers': ['ADVX'], 'old_parent': 'PX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['ADJX', 'NN'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP was ware denn das nachstbilligere hotel auch so zentrale lage eher)

Sentence 624:
4 Initial errors
0 on fringe, 4 iterations
1 Error:Unary
1 Error:UNSET remove
1 Error:Unary
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX
			[01;31m(VF[00m
				[01;31m(SIMPX[00m
					(KOORD aber)
					(C wenn)
					(MF man es)
					[01;31m(VC[00m
						[01;31m(VXFIN[00m
							(VVFIN zusammenrechnet)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
			(LK ware)
			(MF ja eigentlich der flug doch noch gunstiger))
		(SIMPX wenn ich einfach am selben tag fliegen wurde)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'KOUS', 'PIS', 'PPER', 'VVFIN', 'VAFIN', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'ADV', 'ADJD'), 'right siblings': ['LK', 'MF'], 'parent': 'SIMPX', 'auto preterminal span': (0, 13), 'span': (0, 5), 'left siblings': [], 'label': 'VF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX
			[01;31m(SIMPX[00m
				(KOORD aber)
				(C wenn)
				(MF man es)
				[01;31m(VC[00m
					[01;31m(VXFIN[00m
						(VVFIN zusammenrechnet)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			(LK ware)
			(MF ja eigentlich der flug doch noch gunstiger))
		(SIMPX wenn ich einfach am selben tag fliegen wurde)))
Step:UNSET remove
{'subtrees': ['KOORD', 'C', 'MF', 'VC'], 'family': ['SIMPX', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'KOUS', 'PIS', 'PPER', 'VVFIN', 'VAFIN', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'ADV', 'ADJD'), 'right siblings': ['LK', 'MF'], 'parent': 'SIMPX', 'auto preterminal span': (0, 13), 'span': (0, 5), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX
			(KOORD aber)
			(C wenn)
			(MF man es)
			[01;31m(VC[00m
				[01;31m(VXFIN[00m
					(VVFIN zusammenrechnet)[01;31m)[00m[01;31m)[00m
			(LK ware)
			(MF ja eigentlich der flug doch noch gunstiger))
		(SIMPX wenn ich einfach am selben tag fliegen wurde)))
Step:Unary
{'subtrees': ['VXFIN'], 'family': ['KOORD', 'C', 'MF', 'VC', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'KOUS', 'PIS', 'PPER', 'VVFIN', 'VAFIN', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'ADV', 'ADJD'), 'right siblings': ['LK', 'MF'], 'parent': 'SIMPX', 'auto preterminal span': (0, 13), 'span': (4, 5), 'left siblings': ['KOORD', 'C', 'MF'], 'label': 'VC', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX
			(KOORD aber)
			(C wenn)
			(MF man es)
			[01;31m(VXFIN[00m
				(VVFIN zusammenrechnet)[01;31m)[00m
			(LK ware)
			(MF ja eigentlich der flug doch noch gunstiger))
		(SIMPX wenn ich einfach am selben tag fliegen wurde)))
Step:Single Word Phrase
{'subtrees': ['VVFIN'], 'family': ['KOORD', 'C', 'MF', 'VXFIN', 'LK', 'MF'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON', 'KOUS', 'PIS', 'PPER', 'VVFIN', 'VAFIN', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'ADV', 'ADJD'), 'right siblings': ['LK', 'MF'], 'parent': 'SIMPX', 'auto preterminal span': (0, 13), 'span': (4, 5), 'left siblings': ['KOORD', 'C', 'MF'], 'label': 'VXFIN', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP aber wenn man es zusammenrechnet ware ja eigentlich der flug doch noch gunstiger wenn ich einfach am selben tag fliegen wurde)

Sentence 625:
0 Initial errors
0 on fringe, 0 iterations

Sentence 626:
0 Initial errors
0 on fringe, 0 iterations

Sentence 627:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM genau)
		(DM ja)
		(SIMPX
			(VF wann)
			(LK kann)
			(MF
				(NX ich)
				(PX bei ihnen)
				(NX
					(NX das flugticket)
					(KON und)
					[01;36m(NX[00m
						(NX die hotelbuchung)
						(KON und)
						(ADVX so weiter)[01;36m)[00m))
			(VC abholen))))
Step:Modifier Attachment
{'subtrees': ['NX', 'KON', 'ADVX'], 'family': ['NX', 'KON', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'KON', 'ADV', 'ADV'), 'right siblings': [], 'left siblings': [(NX (ART das) (NN flugticket)), (KON und)], 'auto preterminal span': (11, 16), 'span': (11, 16), 'parent': 'NX', 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP ja genau ja wann kann ich bei ihnen das flugticket und die hotelbuchung und so weiter abholen)

Sentence 628:
0 Initial errors
0 on fringe, 0 iterations

Sentence 629:
4 Initial errors
0 on fringe, 2 iterations
3 Error:UNSET move
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX
			(LK ist)
			[01;36m(MF[00m
				[01;31m(MF[00m
					(NX es)
					(ADVX denn)
					[01;33m(NX[00m (NX ein termin unter der woche)[01;31m)[00m
				[01;31m(NF[00m
					(NX
						(ART der)
						(ADJX funfzehnte)
						(NN juli))[01;31m)[00m[01;36m)[00m) [01;33mNX)[00m
		(SIMPX lassen sie mich mal gucken)))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['NX', 'ADVX', 'NX', 'NF'], 'mover info': [('NF', (8, 11))], 'old_family': ['LK', 'MF', 'NF'], 'start left siblings': ['LK', 'MF'], 'auto preterminals': ('VAFIN', 'PPER', 'ADV', 'ART', 'NN', 'APPR', 'ART', 'NN', 'ART', 'ADJA', 'NN'), 'start right siblings': [], 'end left siblings': ['NX', 'ADVX', 'NX'], 'auto preterminal span': (0, 11), 'adding node already present': False, 'movers': ['NF'], 'old_parent': 'SIMPX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(SIMPX
			(LK ist)
			(MF
				(NX es)
				(ADVX denn)
				(NX
					(NX ein termin unter der woche)
					[01;31m(NF[00m
						(NX
							(ART der)
							(ADJX funfzehnte)
							(NN juli))[01;31m)[00m)))
		(SIMPX lassen sie mich mal gucken)))
Step:Unary
{'subtrees': ['NX'], 'family': ['NX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'APPR', 'ART', 'NN', 'ART', 'ADJA', 'NN'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (3, 11), 'span': (8, 11), 'left siblings': ['NX'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ist es denn ein termin unter der woche der funfzehnte juli lassen sie mich mal gucken)

Sentence 630:
7 Initial errors
0 on fringe, 5 iterations
2 Error:PP Attachment
2 Error:PP Attachment
1 Error:UNSET add
1 Error:NP Internal Structure
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM also)
		(SIMPX
			[01;31m(LV[00m
				(SIMPX
					(C wenn)
					(MF sie)
					(VC fliegen mochten))[01;31m)[00m
			[01;36m(SIMPX[00m
				(VF es)
				(LK gibt)
				(MF [01;33m(NX[00m
					(NX einen flug)
					[01;31m(NX[00m
						[01;31m(NX[00m
							(NX jeden tag) [01;33mNX)[00m
							[01;33m(PX[00m (PX von montag bis freitag)[01;31m)[00m
						[01;33m(PX[00m (PX um sieben uhr zehn)[01;31m)[00m
					(PX von kolnbonn))[01;36m)[00m) [01;33mPX) PX)[00m
		(SIMPX und dann kommen sie in hannover um acht uhr zehn an)
		(SIMPX wurde ihnen das reichen)))
Step:PP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'NX', 'PX', 'PX'], 'mover info': [('PX', (16, 20))], 'old_family': ['NX', 'PX'], 'start left siblings': ['NX'], 'auto preterminals': ('ART', 'NN', 'PIDAT', 'NN', 'APPR', 'NN', 'APPR', 'NN', 'APPR', 'CARD', 'NN', 'CARD', 'APPR', 'NE'), 'start right siblings': [], 'end left siblings': ['NX', 'NX'], 'auto preterminal span': (8, 22), 'adding node already present': False, 'movers': ['PX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': ['PX'], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'PX'}
(TOP
	(TURN
		(DM ja)
		(DM also)
		(SIMPX
			[01;31m(LV[00m
				(SIMPX
					(C wenn)
					(MF sie)
					(VC fliegen mochten))[01;31m)[00m
			[01;36m(SIMPX[00m
				(VF es)
				(LK gibt)
				(MF [01;33m(NX[00m
					(NX einen flug)
					[01;31m(NX[00m
						(NX jeden tag) [01;33mNX)[00m
						[01;33m(PX[00m (PX von montag bis freitag)[01;31m)[00m
					(PX um sieben uhr zehn von kolnbonn))[01;36m)[00m) [01;33mPX)[00m
		(SIMPX und dann kommen sie in hannover um acht uhr zehn an)
		(SIMPX wurde ihnen das reichen)))
Step:PP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'NX', 'PX', 'PX'], 'mover info': [('PX', (12, 16))], 'old_family': ['NX', 'PX'], 'start left siblings': ['NX'], 'auto preterminals': ('ART', 'NN', 'PIDAT', 'NN', 'APPR', 'NN', 'APPR', 'NN', 'APPR', 'CARD', 'NN', 'CARD', 'APPR', 'NE'), 'start right siblings': [], 'end left siblings': ['NX', 'NX'], 'auto preterminal span': (8, 22), 'adding node already present': False, 'movers': ['PX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': ['PX'], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'PX'}
(TOP
	(TURN
		(DM ja)
		(DM also)
		(SIMPX
			[01;31m(LV[00m
				(SIMPX
					(C wenn)
					(MF sie)
					(VC fliegen mochten))[01;31m)[00m
			[01;36m(SIMPX[00m
				(VF es)
				(LK gibt)
				(MF
					[01;36m(NX[00m
						(NX einen flug)
						(NX jeden tag)[01;36m)[00m
					(PX von montag bis freitag um sieben uhr zehn von kolnbonn))[01;36m)[00m)
		(SIMPX und dann kommen sie in hannover um acht uhr zehn an)
		(SIMPX wurde ihnen das reichen)))
Step:UNSET add
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['LV', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ART', 'NN', 'PIDAT', 'NN', 'APPR', 'NN', 'APPR', 'NN', 'APPR', 'CARD', 'NN', 'CARD', 'APPR', 'NE'), 'right siblings': [], 'left siblings': [(LV (SIMPX (C (KOUS wenn)) (MF (NX (PPER sie))) (VC (VXINF (VVINF fliegen)) (VXFIN (VMFIN mochten)))))], 'auto preterminal span': (6, 22), 'span': (6, 22), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM also)
		(SIMPX
			[01;31m(LV[00m
				(SIMPX
					(C wenn)
					(MF sie)
					(VC fliegen mochten))[01;31m)[00m
			(SIMPX
				(VF es)
				(LK gibt)
				(MF
					[01;36m(NX[00m
						(NX einen flug)
						(NX jeden tag)[01;36m)[00m
					(PX von montag bis freitag um sieben uhr zehn von kolnbonn))))
		(SIMPX und dann kommen sie in hannover um acht uhr zehn an)
		(SIMPX wurde ihnen das reichen)))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'PIDAT', 'NN'), 'right siblings': [(PX (PX (PX (APPR von) (NX (NN montag))) (PX (APPR bis) (NX (NN freitag)))) (PX (PX (APPR um) (NX (NX (ADJX (CARD sieben)) (NN uhr)) (ADJX (CARD zehn)))) (PX (APPR von) (NX (NE kolnbonn)))))], 'left siblings': [], 'auto preterminal span': (8, 12), 'span': (8, 12), 'parent': 'MF', 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM also)
		(SIMPX
			[01;31m(LV[00m
				(SIMPX
					(C wenn)
					(MF sie)
					(VC fliegen mochten))[01;31m)[00m
			(SIMPX es gibt einen flug jeden tag von montag bis freitag um sieben uhr zehn von kolnbonn))
		(SIMPX und dann kommen sie in hannover um acht uhr zehn an)
		(SIMPX wurde ihnen das reichen)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['LV', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'VVINF', 'VMFIN', 'PPER', 'VVFIN', 'ART', 'NN', 'PIDAT', 'NN', 'APPR', 'NN', 'APPR', 'NN', 'APPR', 'CARD', 'NN', 'CARD', 'APPR', 'NE'), 'right siblings': ['SIMPX'], 'parent': 'SIMPX', 'auto preterminal span': (2, 22), 'span': (2, 6), 'left siblings': [], 'label': 'LV', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja also wenn sie fliegen mochten es gibt einen flug jeden tag von montag bis freitag um sieben uhr zehn von kolnbonn und dann kommen sie in hannover um acht uhr zehn an wurde ihnen das reichen)

Sentence 631:
29 Initial errors
0 on fringe, 22 iterations
2 Error:Different label
2 Error:Different label
2 Error:Single Word Phrase
2 Error:Clause Attachment
2 Error:Modifier Attachment
2 Error:Co-ordination
2 Error:UNSET move
1 Error:Clause Attachment
1 Error:Unary
1 Error:Co-ordination
1 Error:Unary
1 Error:UNSET add
1 Error:Unary
1 Error:Unary
1 Error:Co-ordination
1 Error:Clause Attachment
1 Error:Clause Attachment
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM moment)
		(SIMPX ich gucke mal nach)
		(SIMPX nachts konnen sie nicht fahren)
		(DM also)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF sie)
				(LK konnen)
				[01;36m(ADJX[00m
					(MF
						[01;31m(ADVX[00m
							(ADVX nur)
							(ADV tagsuber)[01;31m)[00m)[01;36m)[00m
				(VC fahren)[01;31m)[00m
			[01;36m(SIMPX[00m
				(SIMPX
					(VF der erste zug)
					(LK geht)
					(MF um funf uhr zehn)
					(VC ab)
					[01;31m(NF[00m
						(PX
							(APPR von)
							(NX bonn))[01;31m)[00m)
				(SIMPX
					(VF da)
					(FKOORD
						[01;31m(LKMVCN[00m
							(LK musten)
							[01;33m(FKOORD[00m (MF sie allerdings)
							(VC umsteigen)
							[01;33m(PX (NF[00m (NF in dusseldorf hauptbahnhof)[01;31m)[00m
						(KON und)
						[01;36m(SIMPX[00m [01;31m(LKVCN[00m
							(LK kamen)
							(VC an)
							[01;36m(PX[00m
								(NF
									(PX um sechs uhr zehn)
									(PX in hannover))[01;36m)[00m[01;31m)[00m[01;36m)[00m)) [01;33mNF) PX) FKOORD)[00m[01;36m)[00m[01;36m)[00m
		(SIMPX das ist ein ic)
		[01;33m(NX (DM[00m (DM oh)
		[01;31m(DM[00m
			[01;36m(DM[00m
				(NX
					(NN moment)) [01;33mDM) NX)[00m[01;36m)[00m
			(ADVX mal)[01;31m)[00m
		(SIMPX
			(VF sie)
			[01;31m(FKOORD[00m
				(LKMVC kommen in dusseldorf um sechs uhr sechs an)
				(KON und)
				[01;36m(LKMVCN[00m
					[01;31m(LKMVC[00m
						(LK mussen)
						(MF da)
						[01;31m(VC[00m [01;33m(VC[00m
							(VXINF
								(VVINF umsteigen))[01;31m)[00m[01;31m)[00m
					[01;31m(LKMVCN[00m
						[01;36m(VXINF[00m [01;31m(LK[00m
							[01;31m(VXFIN[00m
								(VVFIN kommen)[01;31m)[00m[01;31m)[00m [01;33mVC)[00m[01;36m)[00m
						[01;36m(NF[00m
							[01;36m(PX[00m
								[01;31m(MF[00m
									(PX
										(APPR in)
										(NX hannover))[01;31m)[00m
								(VC an)
								(NF um neun uhr zwei)[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m)))
Step:Different label
{'family': ['ADJX'], 'auto preterminal span': (13, 15), 'span': (13, 15), 'subtrees': ['ADVX', 'ADV'], 'parent': 'MF', 'over_word': False, 'auto preterminals': ('ADV', 'ADV'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('ADVX', 'ADJX')}
(TOP
	(TURN
		(DM moment)
		(SIMPX ich gucke mal nach)
		(SIMPX nachts konnen sie nicht fahren)
		(DM also)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF sie)
				(LK konnen)
				(MF nur tagsuber)
				(VC fahren)[01;31m)[00m
			[01;36m(SIMPX[00m
				(SIMPX
					(VF der erste zug)
					(LK geht)
					(MF um funf uhr zehn)
					(VC ab)
					[01;31m(NF[00m
						(PX
							(APPR von)
							(NX bonn))[01;31m)[00m)
				(SIMPX
					(VF da)
					(FKOORD
						[01;31m(LKMVCN[00m
							(LK musten)
							[01;33m(FKOORD[00m (MF sie allerdings)
							(VC umsteigen)
							[01;33m(PX (NF[00m (NF in dusseldorf hauptbahnhof)[01;31m)[00m
						(KON und)
						[01;36m(SIMPX[00m [01;31m(LKVCN[00m
							(LK kamen)
							(VC an)
							[01;36m(PX[00m
								(NF
									(PX um sechs uhr zehn)
									(PX in hannover))[01;36m)[00m[01;31m)[00m[01;36m)[00m)) [01;33mNF) PX) FKOORD)[00m[01;36m)[00m[01;36m)[00m
		(SIMPX das ist ein ic)
		[01;33m(NX (DM[00m (DM oh)
		[01;31m(DM[00m
			[01;36m(DM[00m
				(NX
					(NN moment)) [01;33mDM) NX)[00m[01;36m)[00m
			(ADVX mal)[01;31m)[00m
		(SIMPX
			(VF sie)
			[01;31m(FKOORD[00m
				(LKMVC kommen in dusseldorf um sechs uhr sechs an)
				(KON und)
				[01;36m(LKMVCN[00m
					[01;31m(LKMVC[00m
						(LK mussen)
						(MF da)
						[01;31m(VC[00m [01;33m(VC[00m
							(VXINF
								(VVINF umsteigen))[01;31m)[00m[01;31m)[00m
					[01;31m(LKMVCN[00m
						[01;36m(VXINF[00m [01;31m(LK[00m
							[01;31m(VXFIN[00m
								(VVFIN kommen)[01;31m)[00m[01;31m)[00m [01;33mVC)[00m[01;36m)[00m
						[01;36m(NF[00m
							[01;36m(PX[00m
								[01;31m(MF[00m
									(PX
										(APPR in)
										(NX hannover))[01;31m)[00m
								(VC an)
								(NF um neun uhr zwei)[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m)))
Step:Different label
{'family': ['LKMVCN', 'KON', 'SIMPX'], 'auto preterminal span': (36, 44), 'span': (36, 44), 'subtrees': ['LK', 'VC', 'NF'], 'parent': 'FKOORD', 'over_word': False, 'auto preterminals': ('VVFIN', 'PTKVZ', 'APPR', 'CARD', 'NN', 'CARD', 'APPR', 'NE'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('LKVCN', 'SIMPX')}
(TOP
	(TURN
		(DM moment)
		(SIMPX ich gucke mal nach)
		(SIMPX nachts konnen sie nicht fahren)
		(DM also)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF sie)
				(LK konnen)
				(MF nur tagsuber)
				(VC fahren)[01;31m)[00m
			[01;36m(SIMPX[00m
				(SIMPX
					(VF der erste zug)
					(LK geht)
					(MF um funf uhr zehn)
					(VC ab)
					[01;31m(NF[00m
						(PX
							(APPR von)
							(NX bonn))[01;31m)[00m)
				(SIMPX
					(VF da)
					(FKOORD
						[01;31m(LKMVCN[00m
							(LK musten)
							[01;33m(FKOORD[00m (MF sie allerdings)
							(VC umsteigen)
							[01;33m(PX (NF[00m (NF in dusseldorf hauptbahnhof)[01;31m)[00m
						(KON und)
						(SIMPX
							(LK kamen)
							(VC an)
							[01;36m(PX[00m
								(NF
									(PX um sechs uhr zehn)
									(PX in hannover))[01;36m)[00m))) [01;33mNF) PX) FKOORD)[00m[01;36m)[00m[01;36m)[00m
		(SIMPX das ist ein ic)
		[01;33m(NX (DM[00m (DM oh)
		[01;31m(DM[00m
			[01;36m(DM[00m
				(NX
					(NN moment)) [01;33mDM) NX)[00m[01;36m)[00m
			(ADVX mal)[01;31m)[00m
		(SIMPX
			(VF sie)
			[01;31m(FKOORD[00m
				(LKMVC kommen in dusseldorf um sechs uhr sechs an)
				(KON und)
				[01;36m(LKMVCN[00m
					[01;31m(LKMVC[00m
						(LK mussen)
						(MF da)
						[01;31m(VC[00m [01;33m(VC[00m
							(VXINF
								(VVINF umsteigen))[01;31m)[00m[01;31m)[00m
					[01;31m(LKMVCN[00m
						[01;36m(VXINF[00m [01;31m(LK[00m
							[01;31m(VXFIN[00m
								(VVFIN kommen)[01;31m)[00m[01;31m)[00m [01;33mVC)[00m[01;36m)[00m
						[01;36m(NF[00m
							[01;36m(PX[00m
								[01;31m(MF[00m
									(PX
										(APPR in)
										(NX hannover))[01;31m)[00m
								(VC an)
								(NF um neun uhr zwei)[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m)))
Step:Single Word Phrase
{'family': ['VXINF'], 'auto preterminal span': (64, 65), 'span': (64, 65), 'subtrees': ['VVFIN'], 'parent': 'LK', 'over_word': True, 'auto preterminals': ('VVFIN',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VXFIN', 'VXINF')}
(TOP
	(TURN
		(DM moment)
		(SIMPX ich gucke mal nach)
		(SIMPX nachts konnen sie nicht fahren)
		(DM also)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF sie)
				(LK konnen)
				(MF nur tagsuber)
				(VC fahren)[01;31m)[00m
			[01;36m(SIMPX[00m
				(SIMPX
					(VF der erste zug)
					(LK geht)
					(MF um funf uhr zehn)
					(VC ab)
					[01;31m(NF[00m
						(PX
							(APPR von)
							(NX bonn))[01;31m)[00m)
				(SIMPX
					(VF da)
					(FKOORD
						[01;31m(LKMVCN[00m
							(LK musten)
							[01;33m(FKOORD[00m (MF sie allerdings)
							(VC umsteigen)
							[01;33m(PX (NF[00m (NF in dusseldorf hauptbahnhof)[01;31m)[00m
						(KON und)
						(SIMPX
							(LK kamen)
							(VC an)
							[01;36m(PX[00m
								(NF
									(PX um sechs uhr zehn)
									(PX in hannover))[01;36m)[00m))) [01;33mNF) PX) FKOORD)[00m[01;36m)[00m[01;36m)[00m
		(SIMPX das ist ein ic)
		[01;33m(NX (DM[00m (DM oh)
		[01;31m(DM[00m
			[01;36m(DM[00m
				(NX
					(NN moment)) [01;33mDM) NX)[00m[01;36m)[00m
			(ADVX mal)[01;31m)[00m
		(SIMPX
			(VF sie)
			[01;31m(FKOORD[00m
				(LKMVC kommen in dusseldorf um sechs uhr sechs an)
				(KON und)
				[01;36m(LKMVCN[00m
					[01;31m(LKMVC[00m
						(LK mussen)
						(MF da)
						[01;31m(VC[00m [01;33m(VC[00m
							(VXINF
								(VVINF umsteigen))[01;31m)[00m[01;31m)[00m
					[01;31m(LKMVCN[00m
						[01;31m(LK[00m
							(VXINF
								(VVFIN kommen))[01;31m)[00m [01;33mVC)[00m
						[01;36m(NF[00m
							[01;36m(PX[00m
								[01;31m(MF[00m
									(PX
										(APPR in)
										(NX hannover))[01;31m)[00m
								(VC an)
								(NF um neun uhr zwei)[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m)))
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'VC', 'SIMPX', 'SIMPX'], 'mover info': [('SIMPX', (16, 27)), ('SIMPX', (27, 44))], 'old_family': ['DM', 'SIMPX', 'SIMPX', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'DM', 'DM', 'SIMPX'], 'start left siblings': ['DM', 'SIMPX', 'SIMPX', 'DM', 'SIMPX'], 'auto preterminals': ('NN', 'PPER', 'VVFIN', 'ADV', 'PTKVZ', 'ADV', 'VMFIN', 'PPER', 'PTKNEG', 'VVINF', 'ADV', 'PPER', 'VMFIN', 'ADV', 'ADV', 'VVINF', 'ART', 'ADJA', 'NN', 'VVFIN', 'APPR', 'CARD', 'NN', 'CARD', 'PTKVZ', 'APPR', 'NE', 'ADV', 'VMFIN', 'PPER', 'ADV', 'VVINF', 'APPR', 'NE', 'NN', 'KON', 'VVFIN', 'PTKVZ', 'APPR', 'CARD', 'NN', 'CARD', 'APPR', 'NE', 'PDS', 'VAFIN', 'ART', 'NE', 'ITJ', 'NN', 'ADV', 'PPER', 'VVFIN', 'APPR', 'NE', 'APPR', 'CARD', 'NN', 'CARD', 'PTKVZ', 'KON', 'VMFIN', 'ADV', 'VVINF', 'VVFIN', 'APPR', 'NE', 'PTKVZ', 'APPR', 'CARD', 'NN', 'CARD'), 'start right siblings': ['SIMPX', 'DM', 'DM', 'SIMPX'], 'end left siblings': ['VF', 'LK', 'MF', 'VC'], 'auto preterminal span': (0, 72), 'movers': ['SIMPX', 'SIMPX'], 'old_parent': 'TURN', 'end right siblings': [], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM moment)
		(SIMPX ich gucke mal nach)
		(SIMPX nachts konnen sie nicht fahren)
		(DM also)
		(SIMPX
			(VF sie)
			(LK konnen)
			(MF nur tagsuber)
			(VC fahren)
			[01;36m(SIMPX[00m
				(SIMPX
					(VF der erste zug)
					(LK geht)
					(MF um funf uhr zehn)
					(VC ab)
					[01;31m(NF[00m
						(PX
							(APPR von)
							(NX bonn))[01;31m)[00m)
				(SIMPX
					(VF da)
					(FKOORD
						[01;31m(LKMVCN[00m
							(LK musten)
							[01;33m(FKOORD[00m (MF sie allerdings)
							(VC umsteigen)
							[01;33m(PX (NF[00m (NF in dusseldorf hauptbahnhof)[01;31m)[00m
						(KON und)
						(SIMPX
							(LK kamen)
							(VC an)
							[01;36m(PX[00m
								(NF
									(PX um sechs uhr zehn)
									(PX in hannover))[01;36m)[00m)))[01;36m)[00m) [01;33mNF) PX) FKOORD)[00m
		(SIMPX das ist ein ic)
		[01;33m(NX (DM[00m (DM oh)
		[01;31m(DM[00m
			[01;36m(DM[00m
				(NX
					(NN moment)) [01;33mDM) NX)[00m[01;36m)[00m
			(ADVX mal)[01;31m)[00m
		(SIMPX
			(VF sie)
			[01;31m(FKOORD[00m
				(LKMVC kommen in dusseldorf um sechs uhr sechs an)
				(KON und)
				[01;36m(LKMVCN[00m
					[01;31m(LKMVC[00m
						(LK mussen)
						(MF da)
						[01;31m(VC[00m [01;33m(VC[00m
							(VXINF
								(VVINF umsteigen))[01;31m)[00m[01;31m)[00m
					[01;31m(LKMVCN[00m
						[01;31m(LK[00m
							(VXINF
								(VVFIN kommen))[01;31m)[00m [01;33mVC)[00m
						[01;36m(NF[00m
							[01;36m(PX[00m
								[01;31m(MF[00m
									(PX
										(APPR in)
										(NX hannover))[01;31m)[00m
								(VC an)
								(NF um neun uhr zwei)[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m)))
Step:Modifier Attachment
{'new_parent': 'TURN', 'new_family': ['DM', 'SIMPX', 'SIMPX', 'DM', 'SIMPX', 'SIMPX', 'DM', 'DM', 'ADVX', 'SIMPX'], 'mover info': [('ADVX', (50, 51))], 'old_family': ['NX', 'ADVX'], 'start left siblings': ['NX'], 'auto preterminals': ('NN', 'PPER', 'VVFIN', 'ADV', 'PTKVZ', 'ADV', 'VMFIN', 'PPER', 'PTKNEG', 'VVINF', 'ADV', 'PPER', 'VMFIN', 'ADV', 'ADV', 'VVINF', 'ART', 'ADJA', 'NN', 'VVFIN', 'APPR', 'CARD', 'NN', 'CARD', 'PTKVZ', 'APPR', 'NE', 'ADV', 'VMFIN', 'PPER', 'ADV', 'VVINF', 'APPR', 'NE', 'NN', 'KON', 'VVFIN', 'PTKVZ', 'APPR', 'CARD', 'NN', 'CARD', 'APPR', 'NE', 'PDS', 'VAFIN', 'ART', 'NE', 'ITJ', 'NN', 'ADV', 'PPER', 'VVFIN', 'APPR', 'NE', 'APPR', 'CARD', 'NN', 'CARD', 'PTKVZ', 'KON', 'VMFIN', 'ADV', 'VVINF', 'VVFIN', 'APPR', 'NE', 'PTKVZ', 'APPR', 'CARD', 'NN', 'CARD'), 'start right siblings': [], 'end left siblings': ['DM', 'SIMPX', 'SIMPX', 'DM', 'SIMPX', 'SIMPX', 'DM', 'DM'], 'auto preterminal span': (0, 72), 'movers': ['ADVX'], 'old_parent': 'DM', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['SIMPX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM moment)
		(SIMPX ich gucke mal nach)
		(SIMPX nachts konnen sie nicht fahren)
		(DM also)
		(SIMPX
			(VF sie)
			(LK konnen)
			(MF nur tagsuber)
			(VC fahren)
			[01;36m(SIMPX[00m
				(SIMPX
					(VF der erste zug)
					(LK geht)
					(MF um funf uhr zehn)
					(VC ab)
					[01;31m(NF[00m
						(PX
							(APPR von)
							(NX bonn))[01;31m)[00m)
				(SIMPX
					(VF da)
					(FKOORD
						[01;31m(LKMVCN[00m
							(LK musten)
							[01;33m(FKOORD[00m (MF sie allerdings)
							(VC umsteigen)
							[01;33m(PX (NF[00m (NF in dusseldorf hauptbahnhof)[01;31m)[00m
						(KON und)
						(SIMPX
							(LK kamen)
							(VC an)
							[01;36m(PX[00m
								(NF
									(PX um sechs uhr zehn)
									(PX in hannover))[01;36m)[00m)))[01;36m)[00m) [01;33mNF) PX) FKOORD)[00m
		(SIMPX das ist ein ic)
		[01;36m(NX[00m
			[01;36m(DM[00m
				(DM oh)
				(DM moment)[01;36m)[00m[01;36m)[00m
		(ADVX mal)
		(SIMPX
			(VF sie)
			[01;31m(FKOORD[00m
				(LKMVC kommen in dusseldorf um sechs uhr sechs an)
				(KON und)
				[01;36m(LKMVCN[00m
					[01;31m(LKMVC[00m
						(LK mussen)
						(MF da)
						[01;31m(VC[00m [01;33m(VC[00m
							(VXINF
								(VVINF umsteigen))[01;31m)[00m[01;31m)[00m
					[01;31m(LKMVCN[00m
						[01;31m(LK[00m
							(VXINF
								(VVFIN kommen))[01;31m)[00m [01;33mVC)[00m
						[01;36m(NF[00m
							[01;36m(PX[00m
								[01;31m(MF[00m
									(PX
										(APPR in)
										(NX hannover))[01;31m)[00m
								(VC an)
								(NF um neun uhr zwei)[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m)))
Step:Co-ordination
{'new_parent': 'LKMVCN', 'new_family': ['LKMVC', 'LK', 'MF', 'VC', 'NF'], 'mover info': [('LKMVC', (61, 64))], 'old_family': ['LKMVC', 'KON', 'LKMVC', 'LKMVCN'], 'start left siblings': ['LKMVC', 'KON'], 'auto preterminals': ('VVFIN', 'APPR', 'NE', 'APPR', 'CARD', 'NN', 'CARD', 'PTKVZ', 'KON', 'VMFIN', 'ADV', 'VVINF', 'VVFIN', 'APPR', 'NE', 'PTKVZ', 'APPR', 'CARD', 'NN', 'CARD'), 'start right siblings': ['LKMVCN'], 'end left siblings': [], 'auto preterminal span': (52, 72), 'movers': ['LKMVC'], 'old_parent': 'FKOORD', 'end right siblings': ['LK', 'MF', 'VC', 'NF'], 'classified_type': 'Co-ordination', 'type': 'move'}
(TOP
	(TURN
		(DM moment)
		(SIMPX ich gucke mal nach)
		(SIMPX nachts konnen sie nicht fahren)
		(DM also)
		(SIMPX
			(VF sie)
			(LK konnen)
			(MF nur tagsuber)
			(VC fahren)
			[01;36m(SIMPX[00m
				(SIMPX
					(VF der erste zug)
					(LK geht)
					(MF um funf uhr zehn)
					(VC ab)
					[01;31m(NF[00m
						(PX
							(APPR von)
							(NX bonn))[01;31m)[00m)
				(SIMPX
					(VF da)
					(FKOORD
						[01;31m(LKMVCN[00m
							(LK musten)
							[01;33m(FKOORD[00m (MF sie allerdings)
							(VC umsteigen)
							[01;33m(PX (NF[00m (NF in dusseldorf hauptbahnhof)[01;31m)[00m
						(KON und)
						(SIMPX
							(LK kamen)
							(VC an)
							[01;36m(PX[00m
								(NF
									(PX um sechs uhr zehn)
									(PX in hannover))[01;36m)[00m)))[01;36m)[00m) [01;33mNF) PX) FKOORD)[00m
		(SIMPX das ist ein ic)
		[01;36m(NX[00m
			[01;36m(DM[00m
				(DM oh)
				(DM moment)[01;36m)[00m[01;36m)[00m
		(ADVX mal)
		(SIMPX
			(VF sie)
			[01;31m(FKOORD[00m
				(LKMVC kommen in dusseldorf um sechs uhr sechs an)
				(KON und)
				(LKMVCN
					[01;31m(LKMVC[00m
						(LK mussen)
						(MF da)
						[01;31m(VC[00m [01;33m(VC[00m
							(VXINF
								(VVINF umsteigen))[01;31m)[00m[01;31m)[00m
					[01;31m(LK[00m
						(VXINF
							(VVFIN kommen))[01;31m)[00m [01;33mVC)[00m
					[01;36m(NF[00m
						[01;36m(PX[00m
							[01;31m(MF[00m
								(PX
									(APPR in)
									(NX hannover))[01;31m)[00m
							(VC an)
							(NF um neun uhr zwei)[01;36m)[00m[01;36m)[00m)[01;31m)[00m)))
Step:UNSET move
{'new_parent': 'VC', 'new_family': ['VXINF', 'LK'], 'mover info': [('LK', (64, 65))], 'old_family': ['LKMVC', 'LK', 'MF', 'VC', 'NF'], 'start left siblings': ['LKMVC'], 'auto preterminals': ('VMFIN', 'ADV', 'VVINF', 'VVFIN', 'APPR', 'NE', 'PTKVZ', 'APPR', 'CARD', 'NN', 'CARD'), 'start right siblings': ['MF', 'VC', 'NF'], 'end left siblings': ['VXINF'], 'auto preterminal span': (61, 72), 'movers': ['LK'], 'old_parent': 'LKMVCN', 'POS confusion': ('VVFIN', 'VVFIN'), 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM moment)
		(SIMPX ich gucke mal nach)
		(SIMPX nachts konnen sie nicht fahren)
		(DM also)
		(SIMPX
			(VF sie)
			(LK konnen)
			(MF nur tagsuber)
			(VC fahren)
			[01;36m(SIMPX[00m
				(SIMPX
					(VF der erste zug)
					(LK geht)
					(MF um funf uhr zehn)
					(VC ab)
					[01;31m(NF[00m
						(PX
							(APPR von)
							(NX bonn))[01;31m)[00m)
				(SIMPX
					(VF da)
					(FKOORD
						[01;31m(LKMVCN[00m
							(LK musten)
							[01;33m(FKOORD[00m (MF sie allerdings)
							(VC umsteigen)
							[01;33m(PX (NF[00m (NF in dusseldorf hauptbahnhof)[01;31m)[00m
						(KON und)
						(SIMPX
							(LK kamen)
							(VC an)
							[01;36m(PX[00m
								(NF
									(PX um sechs uhr zehn)
									(PX in hannover))[01;36m)[00m)))[01;36m)[00m) [01;33mNF) PX) FKOORD)[00m
		(SIMPX das ist ein ic)
		[01;36m(NX[00m
			[01;36m(DM[00m
				(DM oh)
				(DM moment)[01;36m)[00m[01;36m)[00m
		(ADVX mal)
		(SIMPX
			(VF sie)
			[01;31m(FKOORD[00m
				(LKMVC kommen in dusseldorf um sechs uhr sechs an)
				(KON und)
				(LKMVCN
					[01;31m(LKMVC[00m
						(LK mussen)
						(MF da)
						(VC
							(VXINF umsteigen)
							[01;31m(LK[00m
								(VXINF
									(VVFIN kommen))[01;31m)[00m)[01;31m)[00m
					[01;36m(NF[00m
						[01;36m(PX[00m
							[01;31m(MF[00m
								(PX
									(APPR in)
									(NX hannover))[01;31m)[00m
							(VC an)
							(NF um neun uhr zwei)[01;36m)[00m[01;36m)[00m)[01;31m)[00m)))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['VF', 'LK', 'MF', 'VC', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'ADJA', 'NN', 'VVFIN', 'APPR', 'CARD', 'NN', 'CARD', 'PTKVZ', 'APPR', 'NE', 'ADV', 'VMFIN', 'PPER', 'ADV', 'VVINF', 'APPR', 'NE', 'NN', 'KON', 'VVFIN', 'PTKVZ', 'APPR', 'CARD', 'NN', 'CARD', 'APPR', 'NE'), 'right siblings': [], 'left siblings': [(VF (NX (PPER sie))), (LK (VXFIN (VMFIN konnen))), (MF (ADJX (ADVX (ADV nur)) (ADV tagsuber))), (VC (VXINF (VVINF fahren)))], 'auto preterminal span': (16, 44), 'span': (16, 44), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM moment)
		(SIMPX ich gucke mal nach)
		(SIMPX nachts konnen sie nicht fahren)
		(DM also)
		(SIMPX
			(VF sie)
			(LK konnen)
			(MF nur tagsuber)
			(VC fahren)
			(SIMPX
				(SIMPX
					(VF der erste zug)
					(LK geht)
					(MF um funf uhr zehn)
					(VC ab)
					[01;31m(NF[00m
						(PX
							(APPR von)
							(NX bonn))[01;31m)[00m)
				(SIMPX
					(VF da)
					(FKOORD
						[01;31m(LKMVCN[00m
							(LK musten)
							[01;33m(FKOORD[00m (MF sie allerdings)
							(VC umsteigen)
							[01;33m(PX (NF[00m (NF in dusseldorf hauptbahnhof)[01;31m)[00m
						(KON und)
						(SIMPX
							(LK kamen)
							(VC an)
							[01;36m(PX[00m
								(NF
									(PX um sechs uhr zehn)
									(PX in hannover))[01;36m)[00m))))) [01;33mNF) PX) FKOORD)[00m
		(SIMPX das ist ein ic)
		[01;36m(NX[00m
			[01;36m(DM[00m
				(DM oh)
				(DM moment)[01;36m)[00m[01;36m)[00m
		(ADVX mal)
		(SIMPX
			(VF sie)
			[01;31m(FKOORD[00m
				(LKMVC kommen in dusseldorf um sechs uhr sechs an)
				(KON und)
				(LKMVCN
					[01;31m(LKMVC[00m
						(LK mussen)
						(MF da)
						(VC
							(VXINF umsteigen)
							[01;31m(LK[00m
								(VXINF
									(VVFIN kommen))[01;31m)[00m)[01;31m)[00m
					[01;36m(NF[00m
						[01;36m(PX[00m
							[01;31m(MF[00m
								(PX
									(APPR in)
									(NX hannover))[01;31m)[00m
							(VC an)
							(NF um neun uhr zwei)[01;36m)[00m[01;36m)[00m)[01;31m)[00m)))
Step:Unary
{'subtrees': ['NF'], 'family': ['LK', 'VC', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'CARD', 'NN', 'CARD', 'APPR', 'NE'), 'right siblings': [], 'left siblings': [(LK (VXFIN (VVFIN kamen))), (VC (PTKVZ an))], 'auto preterminal span': (38, 44), 'span': (38, 44), 'parent': 'SIMPX', 'label': 'PX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM moment)
		(SIMPX ich gucke mal nach)
		(SIMPX nachts konnen sie nicht fahren)
		(DM also)
		(SIMPX
			(VF sie)
			(LK konnen)
			(MF nur tagsuber)
			(VC fahren)
			(SIMPX
				(SIMPX
					(VF der erste zug)
					(LK geht)
					(MF um funf uhr zehn)
					(VC ab)
					[01;31m(NF[00m
						(PX
							(APPR von)
							(NX bonn))[01;31m)[00m)
				(SIMPX
					(VF da)
					(FKOORD
						[01;31m(LKMVCN[00m
							(LK musten)
							[01;33m(FKOORD[00m (MF sie allerdings)
							(VC umsteigen)
							[01;33m(PX (NF[00m (NF in dusseldorf hauptbahnhof)[01;31m)[00m
						(KON und)
						(SIMPX kamen an um sechs uhr zehn in hannover))))) [01;33mNF) PX) FKOORD)[00m
		(SIMPX das ist ein ic)
		[01;36m(NX[00m
			[01;36m(DM[00m
				(DM oh)
				(DM moment)[01;36m)[00m[01;36m)[00m
		(ADVX mal)
		(SIMPX
			(VF sie)
			[01;31m(FKOORD[00m
				(LKMVC kommen in dusseldorf um sechs uhr sechs an)
				(KON und)
				(LKMVCN
					[01;31m(LKMVC[00m
						(LK mussen)
						(MF da)
						(VC
							(VXINF umsteigen)
							[01;31m(LK[00m
								(VXINF
									(VVFIN kommen))[01;31m)[00m)[01;31m)[00m
					[01;36m(NF[00m
						[01;36m(PX[00m
							[01;31m(MF[00m
								(PX
									(APPR in)
									(NX hannover))[01;31m)[00m
							(VC an)
							(NF um neun uhr zwei)[01;36m)[00m[01;36m)[00m)[01;31m)[00m)))
Step:Co-ordination
{'subtrees': ['DM', 'DM'], 'family': ['DM', 'SIMPX', 'SIMPX', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'NN'), 'right siblings': [(ADVX (ADV mal)), (SIMPX (VF (NX (PPER sie))) (FKOORD (LKMVC (LK (VXFIN (VVFIN kommen))) (MF (PX (APPR in) (NX (NE dusseldorf))) (PX (APPR um) (NX (NX (ADJX (CARD sechs)) (NN uhr)) (ADJX (CARD sechs))))) (VC (PTKVZ an))) (KON und) (LKMVCN (LKMVC (LK (VXFIN (VMFIN mussen))) (MF (ADVX (ADV da))) (VC (VXINF (VVINF umsteigen)) (LK (VXINF (VVFIN kommen))))) (MF (PX (APPR in) (NX (NE hannover)))) (VC (PTKVZ an)) (NF (PX (APPR um) (NX (NX (ADJX (CARD neun)) (NN uhr)) (ADJX (CARD zwei))))))))], 'left siblings': [(DM (NX (NN moment))), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN gucke))) (MF (ADVX (ADV mal))) (VC (PTKVZ nach))), (SIMPX (VF (ADVX (ADV nachts))) (LK (VXFIN (VMFIN konnen))) (MF (NX (PPER sie)) (ADVX (PTKNEG nicht))) (VC (VXINF (VVINF fahren)))), (DM (ADVX (ADV also))), (SIMPX (VF (NX (PPER sie))) (LK (VXFIN (VMFIN konnen))) (MF (ADJX (ADVX (ADV nur)) (ADV tagsuber))) (VC (VXINF (VVINF fahren))) (SIMPX (SIMPX (VF (NX (ART der) (ADJX (ADJA erste)) (NN zug))) (LK (VXFIN (VVFIN geht))) (MF (PX (APPR um) (NX (NX (ADJX (CARD funf)) (NN uhr)) (ADJX (CARD zehn))))) (VC (PTKVZ ab)) (NF (PX (APPR von) (NX (NE bonn))))) (SIMPX (VF (ADVX (ADV da))) (FKOORD (LKMVCN (LK (VXFIN (VMFIN musten))) (MF (NX (PPER sie)) (ADVX (ADV allerdings))) (VC (VXINF (VVINF umsteigen))) (NF (PX (APPR in) (NX (NX (NE dusseldorf)) (NX (NN hauptbahnhof)))))) (KON und) (SIMPX (LK (VXFIN (VVFIN kamen))) (VC (PTKVZ an)) (PX (NF (PX (APPR um) (NX (NX (ADJX (CARD sechs)) (NN uhr)) (ADJX (CARD zehn)))) (PX (APPR in) (NX (NE hannover)))))))))), (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VAFIN ist))) (MF (NX (ART ein) (NE ic))))], 'auto preterminal span': (48, 50), 'span': (48, 50), 'parent': 'TURN', 'label': 'DM', 'classified_type': 'Co-ordination', 'type': 'add'}
(TOP
	(TURN
		(DM moment)
		(SIMPX ich gucke mal nach)
		(SIMPX nachts konnen sie nicht fahren)
		(DM also)
		(SIMPX
			(VF sie)
			(LK konnen)
			(MF nur tagsuber)
			(VC fahren)
			(SIMPX
				(SIMPX
					(VF der erste zug)
					(LK geht)
					(MF um funf uhr zehn)
					(VC ab)
					[01;31m(NF[00m
						(PX
							(APPR von)
							(NX bonn))[01;31m)[00m)
				(SIMPX
					(VF da)
					(FKOORD
						[01;31m(LKMVCN[00m
							(LK musten)
							[01;33m(FKOORD[00m (MF sie allerdings)
							(VC umsteigen)
							[01;33m(PX (NF[00m (NF in dusseldorf hauptbahnhof)[01;31m)[00m
						(KON und)
						(SIMPX kamen an um sechs uhr zehn in hannover))))) [01;33mNF) PX) FKOORD)[00m
		(SIMPX das ist ein ic)
		[01;36m(NX[00m
			(DM
				(DM oh)
				(DM moment))[01;36m)[00m
		(ADVX mal)
		(SIMPX
			(VF sie)
			[01;31m(FKOORD[00m
				(LKMVC kommen in dusseldorf um sechs uhr sechs an)
				(KON und)
				(LKMVCN
					[01;31m(LKMVC[00m
						(LK mussen)
						(MF da)
						(VC
							(VXINF umsteigen)
							[01;31m(LK[00m
								(VXINF
									(VVFIN kommen))[01;31m)[00m)[01;31m)[00m
					[01;36m(NF[00m
						[01;36m(PX[00m
							[01;31m(MF[00m
								(PX
									(APPR in)
									(NX hannover))[01;31m)[00m
							(VC an)
							(NF um neun uhr zwei)[01;36m)[00m[01;36m)[00m)[01;31m)[00m)))
Step:Unary
{'subtrees': ['DM'], 'family': ['DM', 'SIMPX', 'SIMPX', 'DM', 'SIMPX', 'SIMPX', 'NX', 'ADVX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'NN'), 'right siblings': [(ADVX (ADV mal)), (SIMPX (VF (NX (PPER sie))) (FKOORD (LKMVC (LK (VXFIN (VVFIN kommen))) (MF (PX (APPR in) (NX (NE dusseldorf))) (PX (APPR um) (NX (NX (ADJX (CARD sechs)) (NN uhr)) (ADJX (CARD sechs))))) (VC (PTKVZ an))) (KON und) (LKMVCN (LKMVC (LK (VXFIN (VMFIN mussen))) (MF (ADVX (ADV da))) (VC (VXINF (VVINF umsteigen)) (LK (VXINF (VVFIN kommen))))) (MF (PX (APPR in) (NX (NE hannover)))) (VC (PTKVZ an)) (NF (PX (APPR um) (NX (NX (ADJX (CARD neun)) (NN uhr)) (ADJX (CARD zwei))))))))], 'left siblings': [(DM (NX (NN moment))), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN gucke))) (MF (ADVX (ADV mal))) (VC (PTKVZ nach))), (SIMPX (VF (ADVX (ADV nachts))) (LK (VXFIN (VMFIN konnen))) (MF (NX (PPER sie)) (ADVX (PTKNEG nicht))) (VC (VXINF (VVINF fahren)))), (DM (ADVX (ADV also))), (SIMPX (VF (NX (PPER sie))) (LK (VXFIN (VMFIN konnen))) (MF (ADJX (ADVX (ADV nur)) (ADV tagsuber))) (VC (VXINF (VVINF fahren))) (SIMPX (SIMPX (VF (NX (ART der) (ADJX (ADJA erste)) (NN zug))) (LK (VXFIN (VVFIN geht))) (MF (PX (APPR um) (NX (NX (ADJX (CARD funf)) (NN uhr)) (ADJX (CARD zehn))))) (VC (PTKVZ ab)) (NF (PX (APPR von) (NX (NE bonn))))) (SIMPX (VF (ADVX (ADV da))) (FKOORD (LKMVCN (LK (VXFIN (VMFIN musten))) (MF (NX (PPER sie)) (ADVX (ADV allerdings))) (VC (VXINF (VVINF umsteigen))) (NF (PX (APPR in) (NX (NX (NE dusseldorf)) (NX (NN hauptbahnhof)))))) (KON und) (SIMPX (LK (VXFIN (VVFIN kamen))) (VC (PTKVZ an)) (PX (NF (PX (APPR um) (NX (NX (ADJX (CARD sechs)) (NN uhr)) (ADJX (CARD zehn)))) (PX (APPR in) (NX (NE hannover)))))))))), (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VAFIN ist))) (MF (NX (ART ein) (NE ic))))], 'auto preterminal span': (48, 50), 'span': (48, 50), 'parent': 'TURN', 'label': 'NX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM moment)
		(SIMPX ich gucke mal nach)
		(SIMPX nachts konnen sie nicht fahren)
		(DM also)
		(SIMPX
			(VF sie)
			(LK konnen)
			(MF nur tagsuber)
			(VC fahren)
			(SIMPX
				(SIMPX
					(VF der erste zug)
					(LK geht)
					(MF um funf uhr zehn)
					(VC ab)
					[01;31m(NF[00m
						(PX
							(APPR von)
							(NX bonn))[01;31m)[00m)
				(SIMPX
					(VF da)
					(FKOORD
						[01;31m(LKMVCN[00m
							(LK musten)
							[01;33m(FKOORD[00m (MF sie allerdings)
							(VC umsteigen)
							[01;33m(PX (NF[00m (NF in dusseldorf hauptbahnhof)[01;31m)[00m
						(KON und)
						(SIMPX kamen an um sechs uhr zehn in hannover))))) [01;33mNF) PX) FKOORD)[00m
		(SIMPX das ist ein ic)
		(NX oh moment)
		(ADVX mal)
		(SIMPX
			(VF sie)
			[01;31m(FKOORD[00m
				(LKMVC kommen in dusseldorf um sechs uhr sechs an)
				(KON und)
				(LKMVCN
					[01;31m(LKMVC[00m
						(LK mussen)
						(MF da)
						(VC
							(VXINF umsteigen)
							[01;31m(LK[00m
								(VXINF
									(VVFIN kommen))[01;31m)[00m)[01;31m)[00m
					[01;36m(NF[00m
						[01;36m(PX[00m
							[01;31m(MF[00m
								(PX
									(APPR in)
									(NX hannover))[01;31m)[00m
							(VC an)
							(NF um neun uhr zwei)[01;36m)[00m[01;36m)[00m)[01;31m)[00m)))
Step:UNSET add
{'subtrees': ['MF', 'VC', 'NF'], 'family': ['LKMVC', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'NE', 'PTKVZ', 'APPR', 'CARD', 'NN', 'CARD'), 'right siblings': [], 'left siblings': [(LKMVC (LK (VXFIN (VMFIN mussen))) (MF (ADVX (ADV da))) (VC (VXINF (VVINF umsteigen)) (LK (VXINF (VVFIN kommen)))))], 'auto preterminal span': (65, 72), 'span': (65, 72), 'parent': 'LKMVCN', 'label': 'PX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM moment)
		(SIMPX ich gucke mal nach)
		(SIMPX nachts konnen sie nicht fahren)
		(DM also)
		(SIMPX
			(VF sie)
			(LK konnen)
			(MF nur tagsuber)
			(VC fahren)
			(SIMPX
				(SIMPX
					(VF der erste zug)
					(LK geht)
					(MF um funf uhr zehn)
					(VC ab)
					[01;31m(NF[00m
						(PX
							(APPR von)
							(NX bonn))[01;31m)[00m)
				(SIMPX
					(VF da)
					(FKOORD
						[01;31m(LKMVCN[00m
							(LK musten)
							[01;33m(FKOORD[00m (MF sie allerdings)
							(VC umsteigen)
							[01;33m(PX (NF[00m (NF in dusseldorf hauptbahnhof)[01;31m)[00m
						(KON und)
						(SIMPX kamen an um sechs uhr zehn in hannover))))) [01;33mNF) PX) FKOORD)[00m
		(SIMPX das ist ein ic)
		(NX oh moment)
		(ADVX mal)
		(SIMPX
			(VF sie)
			[01;31m(FKOORD[00m
				(LKMVC kommen in dusseldorf um sechs uhr sechs an)
				(KON und)
				(LKMVCN
					[01;31m(LKMVC[00m
						(LK mussen)
						(MF da)
						(VC
							(VXINF umsteigen)
							[01;31m(LK[00m
								(VXINF
									(VVFIN kommen))[01;31m)[00m)[01;31m)[00m
					[01;36m(NF[00m
						(PX
							[01;31m(MF[00m
								(PX
									(APPR in)
									(NX hannover))[01;31m)[00m
							(VC an)
							(NF um neun uhr zwei))[01;36m)[00m)[01;31m)[00m)))
Step:Unary
{'subtrees': ['PX'], 'family': ['LKMVC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'NE', 'PTKVZ', 'APPR', 'CARD', 'NN', 'CARD'), 'right siblings': [], 'left siblings': [(LKMVC (LK (VXFIN (VMFIN mussen))) (MF (ADVX (ADV da))) (VC (VXINF (VVINF umsteigen)) (LK (VXINF (VVFIN kommen)))))], 'auto preterminal span': (65, 72), 'span': (65, 72), 'parent': 'LKMVCN', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM moment)
		(SIMPX ich gucke mal nach)
		(SIMPX nachts konnen sie nicht fahren)
		(DM also)
		(SIMPX
			(VF sie)
			(LK konnen)
			(MF nur tagsuber)
			(VC fahren)
			(SIMPX
				(SIMPX
					(VF der erste zug)
					(LK geht)
					(MF um funf uhr zehn)
					(VC ab)
					[01;31m(NF[00m
						(PX
							(APPR von)
							(NX bonn))[01;31m)[00m)
				(SIMPX
					(VF da)
					(FKOORD
						[01;31m(LKMVCN[00m
							(LK musten)
							[01;33m(FKOORD[00m (MF sie allerdings)
							(VC umsteigen)
							[01;33m(PX (NF[00m (NF in dusseldorf hauptbahnhof)[01;31m)[00m
						(KON und)
						(SIMPX kamen an um sechs uhr zehn in hannover))))) [01;33mNF) PX) FKOORD)[00m
		(SIMPX das ist ein ic)
		(NX oh moment)
		(ADVX mal)
		(SIMPX
			(VF sie)
			[01;31m(FKOORD[00m
				(LKMVC kommen in dusseldorf um sechs uhr sechs an)
				(KON und)
				(LKMVCN
					[01;31m(LKMVC[00m
						(LK mussen)
						(MF da)
						(VC
							(VXINF umsteigen)
							[01;31m(LK[00m
								(VXINF
									(VVFIN kommen))[01;31m)[00m)[01;31m)[00m
					(NF
						(PX
							[01;31m(MF[00m
								(PX
									(APPR in)
									(NX hannover))[01;31m)[00m
							(VC an)
							(NF um neun uhr zwei))))[01;31m)[00m)))
Step:Unary
{'subtrees': ['PX'], 'family': ['VF', 'LK', 'MF', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'ADJA', 'NN', 'VVFIN', 'APPR', 'CARD', 'NN', 'CARD', 'PTKVZ', 'APPR', 'NE'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (16, 27), 'span': (25, 27), 'left siblings': ['VF', 'LK', 'MF', 'VC'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM moment)
		(SIMPX ich gucke mal nach)
		(SIMPX nachts konnen sie nicht fahren)
		(DM also)
		(SIMPX
			(VF sie)
			(LK konnen)
			(MF nur tagsuber)
			(VC fahren)
			(SIMPX
				(SIMPX der erste zug geht um funf uhr zehn ab von bonn)
				(SIMPX
					(VF da)
					(FKOORD
						[01;31m(LKMVCN[00m
							(LK musten)
							[01;33m(FKOORD[00m (MF sie allerdings)
							(VC umsteigen)
							[01;33m(PX (NF[00m (NF in dusseldorf hauptbahnhof)[01;31m)[00m
						(KON und)
						(SIMPX kamen an um sechs uhr zehn in hannover))))) [01;33mNF) PX) FKOORD)[00m
		(SIMPX das ist ein ic)
		(NX oh moment)
		(ADVX mal)
		(SIMPX
			(VF sie)
			[01;31m(FKOORD[00m
				(LKMVC kommen in dusseldorf um sechs uhr sechs an)
				(KON und)
				(LKMVCN
					[01;31m(LKMVC[00m
						(LK mussen)
						(MF da)
						(VC
							(VXINF umsteigen)
							[01;31m(LK[00m
								(VXINF
									(VVFIN kommen))[01;31m)[00m)[01;31m)[00m
					(NF
						(PX
							[01;31m(MF[00m
								(PX
									(APPR in)
									(NX hannover))[01;31m)[00m
							(VC an)
							(NF um neun uhr zwei))))[01;31m)[00m)))
Step:Co-ordination
{'subtrees': ['LK', 'MF', 'VC', 'NF'], 'family': ['LKMVCN', 'KON', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VMFIN', 'PPER', 'ADV', 'VVINF', 'APPR', 'NE', 'NN', 'KON', 'VVFIN', 'PTKVZ', 'APPR', 'CARD', 'NN', 'CARD', 'APPR', 'NE'), 'right siblings': ['KON', 'SIMPX'], 'parent': 'FKOORD', 'auto preterminal span': (28, 44), 'span': (28, 35), 'left siblings': [], 'label': 'LKMVCN', 'classified_type': 'Co-ordination', 'type': 'remove'}
(TOP
	(TURN
		(DM moment)
		(SIMPX ich gucke mal nach)
		(SIMPX nachts konnen sie nicht fahren)
		(DM also)
		(SIMPX
			(VF sie)
			(LK konnen)
			(MF nur tagsuber)
			(VC fahren)
			(SIMPX
				(SIMPX der erste zug geht um funf uhr zehn ab von bonn)
				(SIMPX
					(VF da)
					(FKOORD
						(LK musten)
						[01;36m(FKOORD[00m
							(MF sie allerdings)
							(VC umsteigen)
							[01;36m(PX[00m
								[01;36m(NF[00m
									(NF in dusseldorf hauptbahnhof)
									(KON und)
									(SIMPX kamen an um sechs uhr zehn in hannover)[01;36m)[00m[01;36m)[00m[01;36m)[00m))))
		(SIMPX das ist ein ic)
		(NX oh moment)
		(ADVX mal)
		(SIMPX
			(VF sie)
			[01;31m(FKOORD[00m
				(LKMVC kommen in dusseldorf um sechs uhr sechs an)
				(KON und)
				(LKMVCN
					[01;31m(LKMVC[00m
						(LK mussen)
						(MF da)
						(VC
							(VXINF umsteigen)
							[01;31m(LK[00m
								(VXINF
									(VVFIN kommen))[01;31m)[00m)[01;31m)[00m
					(NF
						(PX
							[01;31m(MF[00m
								(PX
									(APPR in)
									(NX hannover))[01;31m)[00m
							(VC an)
							(NF um neun uhr zwei))))[01;31m)[00m)))
Step:Clause Attachment
{'subtrees': ['MF', 'VC', 'NF', 'KON', 'SIMPX'], 'family': ['LK', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV', 'VVINF', 'APPR', 'NE', 'NN', 'KON', 'VVFIN', 'PTKVZ', 'APPR', 'CARD', 'NN', 'CARD', 'APPR', 'NE'), 'right siblings': [], 'left siblings': [(LK (VXFIN (VMFIN musten)))], 'auto preterminal span': (29, 44), 'span': (29, 44), 'parent': 'FKOORD', 'label': 'FKOORD', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM moment)
		(SIMPX ich gucke mal nach)
		(SIMPX nachts konnen sie nicht fahren)
		(DM also)
		(SIMPX
			(VF sie)
			(LK konnen)
			(MF nur tagsuber)
			(VC fahren)
			(SIMPX
				(SIMPX der erste zug geht um funf uhr zehn ab von bonn)
				(SIMPX
					(VF da)
					(FKOORD
						(LK musten)
						(FKOORD
							(MF sie allerdings)
							(VC umsteigen)
							[01;36m(PX[00m
								[01;36m(NF[00m
									(NF in dusseldorf hauptbahnhof)
									(KON und)
									(SIMPX kamen an um sechs uhr zehn in hannover)[01;36m)[00m[01;36m)[00m)))))
		(SIMPX das ist ein ic)
		(NX oh moment)
		(ADVX mal)
		(SIMPX
			(VF sie)
			[01;31m(FKOORD[00m
				(LKMVC kommen in dusseldorf um sechs uhr sechs an)
				(KON und)
				(LKMVCN
					[01;31m(LKMVC[00m
						(LK mussen)
						(MF da)
						(VC
							(VXINF umsteigen)
							[01;31m(LK[00m
								(VXINF
									(VVFIN kommen))[01;31m)[00m)[01;31m)[00m
					(NF
						(PX
							[01;31m(MF[00m
								(PX
									(APPR in)
									(NX hannover))[01;31m)[00m
							(VC an)
							(NF um neun uhr zwei))))[01;31m)[00m)))
Step:Clause Attachment
{'subtrees': ['NF', 'KON', 'SIMPX'], 'family': ['MF', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'NE', 'NN', 'KON', 'VVFIN', 'PTKVZ', 'APPR', 'CARD', 'NN', 'CARD', 'APPR', 'NE'), 'right siblings': [], 'left siblings': [(MF (NX (PPER sie)) (ADVX (ADV allerdings))), (VC (VXINF (VVINF umsteigen)))], 'auto preterminal span': (32, 44), 'span': (32, 44), 'parent': 'FKOORD', 'label': 'NF', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM moment)
		(SIMPX ich gucke mal nach)
		(SIMPX nachts konnen sie nicht fahren)
		(DM also)
		(SIMPX
			(VF sie)
			(LK konnen)
			(MF nur tagsuber)
			(VC fahren)
			(SIMPX
				(SIMPX der erste zug geht um funf uhr zehn ab von bonn)
				(SIMPX
					(VF da)
					(FKOORD
						(LK musten)
						(FKOORD
							(MF sie allerdings)
							(VC umsteigen)
							[01;36m(PX[00m
								(NF
									(NF in dusseldorf hauptbahnhof)
									(KON und)
									(SIMPX kamen an um sechs uhr zehn in hannover))[01;36m)[00m)))))
		(SIMPX das ist ein ic)
		(NX oh moment)
		(ADVX mal)
		(SIMPX
			(VF sie)
			[01;31m(FKOORD[00m
				(LKMVC kommen in dusseldorf um sechs uhr sechs an)
				(KON und)
				(LKMVCN
					[01;31m(LKMVC[00m
						(LK mussen)
						(MF da)
						(VC
							(VXINF umsteigen)
							[01;31m(LK[00m
								(VXINF
									(VVFIN kommen))[01;31m)[00m)[01;31m)[00m
					(NF
						(PX
							[01;31m(MF[00m
								(PX
									(APPR in)
									(NX hannover))[01;31m)[00m
							(VC an)
							(NF um neun uhr zwei))))[01;31m)[00m)))
Step:Unary
{'subtrees': ['NF'], 'family': ['MF', 'VC', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'NE', 'NN', 'KON', 'VVFIN', 'PTKVZ', 'APPR', 'CARD', 'NN', 'CARD', 'APPR', 'NE'), 'right siblings': [], 'left siblings': [(MF (NX (PPER sie)) (ADVX (ADV allerdings))), (VC (VXINF (VVINF umsteigen)))], 'auto preterminal span': (32, 44), 'span': (32, 44), 'parent': 'FKOORD', 'label': 'PX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM moment)
		(SIMPX ich gucke mal nach)
		(SIMPX nachts konnen sie nicht fahren)
		(DM also)
		(SIMPX sie konnen nur tagsuber fahren der erste zug geht um funf uhr zehn ab von bonn da musten sie allerdings umsteigen in dusseldorf hauptbahnhof und kamen an um sechs uhr zehn in hannover)
		(SIMPX das ist ein ic)
		(NX oh moment)
		(ADVX mal)
		(SIMPX
			(VF sie)
			[01;31m(FKOORD[00m
				(LKMVC kommen in dusseldorf um sechs uhr sechs an)
				(KON und)
				(LKMVCN
					[01;31m(LKMVC[00m
						(LK mussen)
						(MF da)
						(VC
							(VXINF umsteigen)
							[01;31m(LK[00m
								(VXINF
									(VVFIN kommen))[01;31m)[00m)[01;31m)[00m
					(NF
						(PX
							[01;31m(MF[00m
								(PX
									(APPR in)
									(NX hannover))[01;31m)[00m
							(VC an)
							(NF um neun uhr zwei))))[01;31m)[00m)))
Step:UNSET remove
{'subtrees': ['LKMVC', 'KON', 'LKMVCN'], 'family': ['VF', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'APPR', 'NE', 'APPR', 'CARD', 'NN', 'CARD', 'PTKVZ', 'KON', 'VMFIN', 'ADV', 'VVINF', 'VVFIN', 'APPR', 'NE', 'PTKVZ', 'APPR', 'CARD', 'NN', 'CARD'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (51, 72), 'span': (52, 72), 'left siblings': ['VF'], 'label': 'FKOORD', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM moment)
		(SIMPX ich gucke mal nach)
		(SIMPX nachts konnen sie nicht fahren)
		(DM also)
		(SIMPX sie konnen nur tagsuber fahren der erste zug geht um funf uhr zehn ab von bonn da musten sie allerdings umsteigen in dusseldorf hauptbahnhof und kamen an um sechs uhr zehn in hannover)
		(SIMPX das ist ein ic)
		(NX oh moment)
		(ADVX mal)
		(SIMPX
			(VF sie)
			(LKMVC kommen in dusseldorf um sechs uhr sechs an)
			(KON und)
			(LKMVCN
				[01;31m(LKMVC[00m
					(LK mussen)
					(MF da)
					(VC
						(VXINF umsteigen)
						[01;31m(LK[00m
							(VXINF
								(VVFIN kommen))[01;31m)[00m)[01;31m)[00m
				(NF
					(PX
						[01;31m(MF[00m
							(PX
								(APPR in)
								(NX hannover))[01;31m)[00m
						(VC an)
						(NF um neun uhr zwei)))))))
Step:UNSET remove
{'subtrees': ['LK', 'MF', 'VC'], 'family': ['LKMVC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('VMFIN', 'ADV', 'VVINF', 'VVFIN', 'APPR', 'NE', 'PTKVZ', 'APPR', 'CARD', 'NN', 'CARD'), 'right siblings': ['NF'], 'parent': 'LKMVCN', 'auto preterminal span': (61, 72), 'span': (61, 65), 'left siblings': [], 'label': 'LKMVC', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM moment)
		(SIMPX ich gucke mal nach)
		(SIMPX nachts konnen sie nicht fahren)
		(DM also)
		(SIMPX sie konnen nur tagsuber fahren der erste zug geht um funf uhr zehn ab von bonn da musten sie allerdings umsteigen in dusseldorf hauptbahnhof und kamen an um sechs uhr zehn in hannover)
		(SIMPX das ist ein ic)
		(NX oh moment)
		(ADVX mal)
		(SIMPX
			(VF sie)
			(LKMVC kommen in dusseldorf um sechs uhr sechs an)
			(KON und)
			(LKMVCN
				(LK mussen)
				(MF da)
				(VC
					(VXINF umsteigen)
					[01;31m(LK[00m
						(VXINF
							(VVFIN kommen))[01;31m)[00m)
				(NF
					(PX
						[01;31m(MF[00m
							(PX
								(APPR in)
								(NX hannover))[01;31m)[00m
						(VC an)
						(NF um neun uhr zwei)))))))
Step:Unary
{'subtrees': ['VXINF'], 'family': ['VXINF', 'LK'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVINF', 'VVFIN'), 'right siblings': [], 'parent': 'VC', 'auto preterminal span': (63, 65), 'span': (64, 65), 'left siblings': ['VXINF'], 'label': 'LK', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM moment)
		(SIMPX ich gucke mal nach)
		(SIMPX nachts konnen sie nicht fahren)
		(DM also)
		(SIMPX sie konnen nur tagsuber fahren der erste zug geht um funf uhr zehn ab von bonn da musten sie allerdings umsteigen in dusseldorf hauptbahnhof und kamen an um sechs uhr zehn in hannover)
		(SIMPX das ist ein ic)
		(NX oh moment)
		(ADVX mal)
		(SIMPX
			(VF sie)
			(LKMVC kommen in dusseldorf um sechs uhr sechs an)
			(KON und)
			(LKMVCN
				(LK mussen)
				(MF da)
				(VC umsteigen kommen)
				(NF
					(PX
						[01;31m(MF[00m
							(PX
								(APPR in)
								(NX hannover))[01;31m)[00m
						(VC an)
						(NF um neun uhr zwei)))))))
Step:Unary
{'subtrees': ['PX'], 'family': ['MF', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'NE', 'PTKVZ', 'APPR', 'CARD', 'NN', 'CARD'), 'right siblings': ['VC', 'NF'], 'parent': 'PX', 'auto preterminal span': (65, 72), 'span': (65, 67), 'left siblings': [], 'label': 'MF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP moment ich gucke mal nach nachts konnen sie nicht fahren also sie konnen nur tagsuber fahren der erste zug geht um funf uhr zehn ab von bonn da musten sie allerdings umsteigen in dusseldorf hauptbahnhof und kamen an um sechs uhr zehn in hannover das ist ein ic oh moment mal sie kommen in dusseldorf um sechs uhr sechs an und mussen da umsteigen kommen in hannover an um neun uhr zwei)

Sentence 632:
3 Initial errors
0 on fringe, 2 iterations
2 Error:Modifier Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX der fahrt)
		(DM ah)
		(DM entschuldigung)
		(SIMPX der fahrt nur samstag sonntag)
		(SIMPX taglich fahrt dann um sechs uhr funf der erste zug)
		(SIMPX kommen sie an um zehn uhr neunzehn)
		[01;31m(ADJX[00m
			[01;36m(DM[00m
				(ADVX
					(ADV also))[01;36m)[00m
			[01;36m(ADJX[00m
				(ADVX auch)
				(ADJX zu spat)[01;36m)[00m[01;31m)[00m))
Step:Modifier Attachment
{'new_parent': 'TURN', 'new_family': ['SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'ADVX', 'ADJX'], 'mover info': [('ADVX', (26, 27))], 'old_family': ['ADVX', 'ADVX', 'ADJX'], 'start left siblings': [], 'auto preterminals': ('PDS', 'VVFIN', 'ITJ', 'NN', 'PDS', 'VVFIN', 'ADV', 'NN', 'NN', 'ADJD', 'VVFIN', 'ADV', 'APPR', 'CARD', 'NN', 'CARD', 'ART', 'ADJA', 'NN', 'VVFIN', 'PPER', 'PTKVZ', 'APPR', 'CARD', 'NN', 'CARD', 'ADV', 'ADV', 'PTKA', 'ADJD'), 'start right siblings': ['ADVX', 'ADJX'], 'end left siblings': ['SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'auto preterminal span': (0, 30), 'movers': ['ADVX'], 'old_parent': 'ADJX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['ADJX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SIMPX der fahrt)
		(DM ah)
		(DM entschuldigung)
		(SIMPX der fahrt nur samstag sonntag)
		(SIMPX taglich fahrt dann um sechs uhr funf der erste zug)
		(SIMPX kommen sie an um zehn uhr neunzehn)
		[01;36m(DM[00m
			(ADVX
				(ADV also))[01;36m)[00m
		(ADJX auch zu spat)))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'DM', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV',), 'right siblings': [(ADJX (ADVX (ADV auch)) (ADJX (PTKA zu) (ADJD spat)))], 'left siblings': [(SIMPX (VF (NX (PDS der))) (LK (VXFIN (VVFIN fahrt)))), (DM (ITJ ah)), (DM (NX (NN entschuldigung))), (SIMPX (VF (NX (PDS der))) (LK (VXFIN (VVFIN fahrt))) (MF (NX (ADVX (ADV nur)) (NX (NN samstag)) (NX (NN sonntag))))), (SIMPX (VF (ADJX (ADJD taglich))) (LK (VXFIN (VVFIN fahrt))) (MF (ADVX (ADV dann)) (PX (APPR um) (NX (NX (ADJX (CARD sechs)) (NN uhr)) (ADJX (CARD funf)))) (NX (ART der) (ADJX (ADJA erste)) (NN zug)))), (SIMPX (LK (VXFIN (VVFIN kommen))) (MF (NX (PPER sie))) (VC (PTKVZ an)) (NF (PX (APPR um) (NX (NX (ADJX (CARD zehn)) (NN uhr)) (ADJX (CARD neunzehn))))))], 'auto preterminal span': (26, 27), 'span': (26, 27), 'parent': 'TURN', 'label': 'DM', 'classified_type': 'Unary', 'type': 'add'}
(TOP der fahrt ah entschuldigung der fahrt nur samstag sonntag taglich fahrt dann um sechs uhr funf der erste zug kommen sie an um zehn uhr neunzehn also auch zu spat)

Sentence 633:
18 Initial errors
0 on fringe, 9 iterations
3 Error:UNSET move
5 Error:PP Attachment
2 Error:Co-ordination
2 Error:Modifier Attachment
2 Error:UNSET move
1 Error:Modifier Attachment
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:NP Internal Structure
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(NX mittelklasse)
		(SIMPX wollen sie denn eher eine zentrale lage)
		(SIMPX
			(VF
				(PX
					[01;31m(PX[00m
						(PX am bahnhof)
						(KON oder)
						[01;33m(PX[00m (PX am flughafen)[01;31m)[00m
					(ADVX direkt))) [01;33mPX)[00m
			(LK kann)
			(MF ich ihnen eines)
			(VC anbieten))
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF das)
			(LK ist)
			[01;31m(MF[00m [01;33m(NX (MF[00m
				[01;31m(ADVX[00m
					(ADVX so)
					(ADV ungefahr)[01;31m)[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(ADJX mittlere)
						(NN preisklasse)[01;31m)[00m [01;33mMF) NX) SIMPX)[00m
					(PX mit restaurant konferenzraum garage und sauna)[01;31m)[00m[01;31m)[00m
			[01;31m(NF[00m [01;33m(VF (NX[00m
				[01;31m(NX[00m
					(ART das)
					[01;36m(NX[00m
						(NN [01;33m(NX[00m hotel)[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				(NX
					(NE forahotel))[01;31m)[00m [01;33mNX) NX) VF)[00m
			(LK heist)
			(MF das)[01;31m)[00m
		(SIMPX die kategorie fur ein einzelzimmer liegt bei hundert dreisig bis zweihundert funfunddreisig mark)))
Step:UNSET move
{'new_parent': 'VF', 'new_family': ['NF', 'NX'], 'mover info': [('NF', (31, 33))], 'old_family': ['VF', 'LK', 'MF', 'NF'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('NN', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'ADJA', 'NN', 'APPRART', 'NN', 'KON', 'APPRART', 'NN', 'ADV', 'VMFIN', 'PPER', 'PPER', 'PIS', 'VVINF', 'PDS', 'VAFIN', 'ADV', 'ADV', 'ADJA', 'NN', 'APPR', 'NN', 'NN', 'NN', 'KON', 'NN', 'ART', 'NN', 'NE', 'VVFIN', 'PDS', 'ART', 'NN', 'APPR', 'ART', 'NN', 'VVFIN', 'APPR', 'CARD', 'CARD', 'APPR', 'CARD', 'CARD', 'NN'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 49), 'adding node already present': False, 'movers': ['NF'], 'old_parent': 'SIMPX', 'added and moved': True, 'end right siblings': ['NX'], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(NX mittelklasse)
		(SIMPX wollen sie denn eher eine zentrale lage)
		(SIMPX
			(VF
				(PX
					[01;31m(PX[00m
						(PX am bahnhof)
						(KON oder)
						[01;33m(PX[00m (PX am flughafen)[01;31m)[00m
					(ADVX direkt))) [01;33mPX)[00m
			(LK kann)
			(MF ich ihnen eines)
			(VC anbieten))
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF das)
			(LK ist)
			[01;31m(MF[00m [01;33m(NX (MF[00m
				[01;31m(ADVX[00m
					(ADVX so)
					(ADV ungefahr)[01;31m)[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(ADJX mittlere)
						(NN preisklasse)[01;31m)[00m [01;33mMF) NX) SIMPX)[00m
					(PX mit restaurant konferenzraum garage und sauna)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(NX
				(VF
					[01;31m(NF[00m
						[01;31m(NX[00m
							(ART das)
							[01;36m(NX[00m
								(NN [01;33m(NX[00m hotel)[01;36m)[00m[01;31m)[00m[01;31m)[00m
					(NX forahotel))) [01;33mNX)[00m
			(LK heist)
			(MF das)[01;31m)[00m
		(SIMPX die kategorie fur ein einzelzimmer liegt bei hundert dreisig bis zweihundert funfunddreisig mark)))
Step:PP Attachment
{'new_parent': 'SIMPX', 'new_family': ['PX', 'NX', 'LK', 'MF'], 'mover info': [('PX', (25, 31))], 'old_family': ['NX', 'PX'], 'start left siblings': ['NX'], 'auto preterminals': ('NN', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'ADJA', 'NN', 'APPRART', 'NN', 'KON', 'APPRART', 'NN', 'ADV', 'VMFIN', 'PPER', 'PPER', 'PIS', 'VVINF', 'PDS', 'VAFIN', 'ADV', 'ADV', 'ADJA', 'NN', 'APPR', 'NN', 'NN', 'NN', 'KON', 'NN', 'ART', 'NN', 'NE', 'VVFIN', 'PDS', 'ART', 'NN', 'APPR', 'ART', 'NN', 'VVFIN', 'APPR', 'CARD', 'CARD', 'APPR', 'CARD', 'CARD', 'NN'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 49), 'movers': ['PX'], 'old_parent': 'NX', 'end right siblings': ['NX', 'LK', 'MF'], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		(NX mittelklasse)
		(SIMPX wollen sie denn eher eine zentrale lage)
		(SIMPX
			(VF
				(PX
					[01;31m(PX[00m
						(PX am bahnhof)
						(KON oder)
						[01;33m(PX[00m (PX am flughafen)[01;31m)[00m
					(ADVX direkt))) [01;33mPX)[00m
			(LK kann)
			(MF ich ihnen eines)
			(VC anbieten))
		(SIMPX
			(VF das)
			(LK ist)
			[01;36m(NX[00m
				(MF
					[01;31m(ADVX[00m
						(ADVX so)
						(ADV ungefahr)[01;31m)[00m
					[01;31m(NX[00m
						(ADJX mittlere)
						(NN preisklasse)[01;31m)[00m)[01;36m)[00m)
		[01;31m(SIMPX[00m
			(PX mit restaurant konferenzraum garage und sauna)
			(NX
				(VF
					[01;31m(NF[00m
						[01;31m(NX[00m
							(ART das)
							[01;36m(NX[00m
								(NN [01;33m(NX[00m hotel)[01;36m)[00m[01;31m)[00m[01;31m)[00m
					(NX forahotel))) [01;33mNX)[00m
			(LK heist)
			(MF das)[01;31m)[00m
		(SIMPX die kategorie fur ein einzelzimmer liegt bei hundert dreisig bis zweihundert funfunddreisig mark)))
Step:Co-ordination
{'new_parent': 'VF', 'new_family': ['PX', 'KON', 'PX'], 'mover info': [('PX', (8, 10)), ('KON', (10, 11))], 'old_family': ['PX', 'KON', 'PX'], 'start left siblings': [], 'auto preterminals': ('APPRART', 'NN', 'KON', 'APPRART', 'NN', 'ADV'), 'start right siblings': ['PX'], 'end left siblings': [], 'auto preterminal span': (8, 14), 'adding node already present': False, 'movers': ['PX', 'KON'], 'old_parent': 'PX', 'added and moved': True, 'end right siblings': ['PX'], 'classified_type': 'Co-ordination', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(NX mittelklasse)
		(SIMPX wollen sie denn eher eine zentrale lage)
		(SIMPX am bahnhof oder am flughafen direkt kann ich ihnen eines anbieten)
		(SIMPX
			(VF das)
			(LK ist)
			[01;36m(NX[00m
				(MF
					[01;31m(ADVX[00m
						(ADVX so)
						(ADV ungefahr)[01;31m)[00m
					[01;31m(NX[00m
						(ADJX mittlere)
						(NN preisklasse)[01;31m)[00m)[01;36m)[00m)
		[01;31m(SIMPX[00m
			(PX mit restaurant konferenzraum garage und sauna)
			(NX
				(VF
					[01;31m(NF[00m
						[01;31m(NX[00m
							(ART das)
							[01;36m(NX[00m
								(NN [01;33m(NX[00m hotel)[01;36m)[00m[01;31m)[00m[01;31m)[00m
					(NX forahotel))) [01;33mNX)[00m
			(LK heist)
			(MF das)[01;31m)[00m
		(SIMPX die kategorie fur ein einzelzimmer liegt bei hundert dreisig bis zweihundert funfunddreisig mark)))
Step:Modifier Attachment
{'new_parent': 'NX', 'new_family': ['ADVX', 'ADJX', 'NN'], 'mover info': [('ADVX', (21, 23))], 'old_family': ['ADVX', 'NX'], 'start left siblings': [], 'auto preterminals': ('ADV', 'ADV', 'ADJA', 'NN'), 'start right siblings': ['NX'], 'end left siblings': [], 'auto preterminal span': (21, 25), 'movers': ['ADVX'], 'old_parent': 'MF', 'end right siblings': ['ADJX', 'NN'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(NX mittelklasse)
		(SIMPX wollen sie denn eher eine zentrale lage)
		(SIMPX am bahnhof oder am flughafen direkt kann ich ihnen eines anbieten)
		(SIMPX
			(VF das)
			(LK ist)
			(MF
				(NX
					[01;31m(ADVX[00m
						(ADVX so)
						(ADV ungefahr)[01;31m)[00m
					(ADJX mittlere)
					(NN preisklasse))))
		[01;31m(SIMPX[00m
			(PX mit restaurant konferenzraum garage und sauna)
			(NX
				(VF
					[01;31m(NF[00m
						[01;31m(NX[00m
							(ART das)
							[01;36m(NX[00m
								(NN [01;33m(NX[00m hotel)[01;36m)[00m[01;31m)[00m[01;31m)[00m
					(NX forahotel))) [01;33mNX)[00m
			(LK heist)
			(MF das)[01;31m)[00m
		(SIMPX die kategorie fur ein einzelzimmer liegt bei hundert dreisig bis zweihundert funfunddreisig mark)))
Step:UNSET move
{'new_parent': 'NF', 'new_family': ['ART', 'NX'], 'mover info': [('ART', (31, 32))], 'old_family': ['ART', 'NN'], 'start left siblings': [], 'auto preterminals': ('ART', 'NN'), 'start right siblings': ['NN'], 'end left siblings': [], 'auto preterminal span': (31, 33), 'movers': ['ART'], 'old_parent': 'NX', 'POS confusion': ('ART', 'ART'), 'end right siblings': ['NX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(NX mittelklasse)
		(SIMPX wollen sie denn eher eine zentrale lage)
		(SIMPX am bahnhof oder am flughafen direkt kann ich ihnen eines anbieten)
		(SIMPX
			(VF das)
			(LK ist)
			(MF
				(NX
					[01;31m(ADVX[00m
						(ADVX so)
						(ADV ungefahr)[01;31m)[00m
					(ADJX mittlere)
					(NN preisklasse))))
		[01;31m(SIMPX[00m
			(PX mit restaurant konferenzraum garage und sauna)
			(NX
				(VF
					[01;31m(NF[00m
						(ART das)
						[01;33m(NX[00m (NX hotel)[01;31m)[00m
					(NX forahotel))) [01;33mNX)[00m
			(LK heist)
			(MF das)[01;31m)[00m
		(SIMPX die kategorie fur ein einzelzimmer liegt bei hundert dreisig bis zweihundert funfunddreisig mark)))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'ADV'], 'family': ['ADVX', 'ADJX', 'NN'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'ADJA', 'NN'), 'right siblings': ['ADJX', 'NN'], 'parent': 'NX', 'auto preterminal span': (21, 25), 'span': (21, 23), 'left siblings': [], 'label': 'ADVX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(NX mittelklasse)
		(SIMPX wollen sie denn eher eine zentrale lage)
		(SIMPX am bahnhof oder am flughafen direkt kann ich ihnen eines anbieten)
		(SIMPX das ist so ungefahr mittlere preisklasse)
		[01;31m(SIMPX[00m
			(PX mit restaurant konferenzraum garage und sauna)
			(NX
				(VF
					[01;31m(NF[00m
						(ART das)
						[01;33m(NX[00m (NX hotel)[01;31m)[00m
					(NX forahotel))) [01;33mNX)[00m
			(LK heist)
			(MF das)[01;31m)[00m
		(SIMPX die kategorie fur ein einzelzimmer liegt bei hundert dreisig bis zweihundert funfunddreisig mark)))
Step:UNSET remove
{'subtrees': ['PX', 'NX', 'LK', 'MF'], 'family': ['NX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'ADJA', 'NN', 'APPRART', 'NN', 'KON', 'APPRART', 'NN', 'ADV', 'VMFIN', 'PPER', 'PPER', 'PIS', 'VVINF', 'PDS', 'VAFIN', 'ADV', 'ADV', 'ADJA', 'NN', 'APPR', 'NN', 'NN', 'NN', 'KON', 'NN', 'ART', 'NN', 'NE', 'VVFIN', 'PDS', 'ART', 'NN', 'APPR', 'ART', 'NN', 'VVFIN', 'APPR', 'CARD', 'CARD', 'APPR', 'CARD', 'CARD', 'NN'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 49), 'span': (25, 36), 'left siblings': ['NX', 'SIMPX', 'SIMPX', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(NX mittelklasse)
		(SIMPX wollen sie denn eher eine zentrale lage)
		(SIMPX am bahnhof oder am flughafen direkt kann ich ihnen eines anbieten)
		(SIMPX das ist so ungefahr mittlere preisklasse)
		(PX mit restaurant konferenzraum garage und sauna)
		(NX
			(VF
				[01;31m(NF[00m
					(ART das)
					[01;33m(NX[00m (NX hotel)[01;31m)[00m
				(NX forahotel))) [01;33mNX)[00m
		(LK heist)
		(MF das)
		(SIMPX die kategorie fur ein einzelzimmer liegt bei hundert dreisig bis zweihundert funfunddreisig mark)))
Step:UNSET remove
{'subtrees': ['ART', 'NX'], 'family': ['NF', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'NE'), 'right siblings': ['NX'], 'parent': 'VF', 'auto preterminal span': (31, 34), 'span': (31, 33), 'left siblings': [], 'label': 'NF', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(NX mittelklasse)
		(SIMPX wollen sie denn eher eine zentrale lage)
		(SIMPX am bahnhof oder am flughafen direkt kann ich ihnen eines anbieten)
		(SIMPX das ist so ungefahr mittlere preisklasse)
		(PX mit restaurant konferenzraum garage und sauna)
		(NX
			(VF
				(ART das)
				[01;36m(NX[00m
					(NX hotel)
					(NX forahotel)[01;36m)[00m))
		(LK heist)
		(MF das)
		(SIMPX die kategorie fur ein einzelzimmer liegt bei hundert dreisig bis zweihundert funfunddreisig mark)))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['ART', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'NE'), 'right siblings': [], 'left siblings': [(ART das)], 'auto preterminal span': (32, 34), 'span': (32, 34), 'parent': 'VF', 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'add'}
(TOP mittelklasse wollen sie denn eher eine zentrale lage am bahnhof oder am flughafen direkt kann ich ihnen eines anbieten das ist so ungefahr mittlere preisklasse mit restaurant konferenzraum garage und sauna das hotel forahotel heist das die kategorie fur ein einzelzimmer liegt bei hundert dreisig bis zweihundert funfunddreisig mark)

Sentence 634:
0 Initial errors
0 on fringe, 0 iterations

Sentence 635:
17 Initial errors
0 on fringe, 10 iterations
4 Error:Modifier Attachment
3 Error:UNSET move
2 Error:Modifier Attachment
2 Error:Modifier Attachment
1 Error:Unary
1 Error:Modifier Attachment
1 Error:Unary
1 Error:NP Internal Structure
1 Error:UNSET remove
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				[01;36m(ADVX[00m
					(VF
						[01;31m(SIMPX[00m
							(KOORD oder)
							[01;36m(SIMPX[00m
								[01;36m(VF[00m
									(C was)
									(MF
										[01;31m(ADJX[00m
											[01;31m(ADVX[00m
												(ADVX noch)
												[01;36m(ADVX[00m
													(ADV [01;33m(ADJX[00m etwas)[01;36m)[00m[01;31m)[00m
											(ADJD preiswerter)[01;31m)[00m) [01;33mADJX)[00m
									(VC ware)[01;36m)[00m[01;36m)[00m[01;31m)[00m)[01;36m)[00m
				(LK ware)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX
						(NX hotel)
						(NX loccumerhof))[01;31m)[00m[01;31m)[00m
			[01;31m(ADJX[00m
				(ADJX
					(ADVX auch)
					[01;36m(ADJX[00m
						(ADVX zentral)
						(ADJD gelegen)[01;36m)[00m) [01;33mMF)[00m
				(PX mit konferenzraum)[01;31m)[00m[01;36m)[00m
		(NX
			[01;31m(NX[00m
				(ART die)
				(NN preislage)[01;31m)[00m
			(NX [01;33m(ADJX[00m
				(NX hundert funfundvierzig mark)
				(APPR bis)
				[01;31m(NX[00m
					(ADJX hundert achtzig) [01;33mADJX)[00m
					(NN mark)[01;31m)[00m))))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['ADVX', 'ADJX'], 'mover info': [('ADVX', (2, 3))], 'old_family': ['ADVX', 'ADV'], 'start left siblings': [], 'auto preterminals': ('ADV', 'ADV', 'ADJD'), 'start right siblings': ['ADV'], 'end left siblings': [], 'auto preterminal span': (2, 5), 'movers': ['ADVX'], 'old_parent': 'ADVX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['ADJX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				[01;36m(ADVX[00m
					(VF
						[01;31m(SIMPX[00m
							(KOORD oder)
							[01;36m(SIMPX[00m
								[01;36m(VF[00m
									(C was)
									(MF noch etwas preiswerter)
									(VC ware)[01;36m)[00m[01;36m)[00m[01;31m)[00m)[01;36m)[00m
				(LK ware)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX
						(NX hotel)
						(NX loccumerhof))[01;31m)[00m[01;31m)[00m
			[01;31m(ADJX[00m
				(ADJX
					(ADVX auch)
					[01;36m(ADJX[00m
						(ADVX zentral)
						(ADJD gelegen)[01;36m)[00m) [01;33mMF)[00m
				(PX mit konferenzraum)[01;31m)[00m[01;36m)[00m
		(NX
			[01;31m(NX[00m
				(ART die)
				(NN preislage)[01;31m)[00m
			(NX [01;33m(ADJX[00m
				(NX hundert funfundvierzig mark)
				(APPR bis)
				[01;31m(NX[00m
					(ADJX hundert achtzig) [01;33mADJX)[00m
					(NN mark)[01;31m)[00m))))
Step:UNSET move
{'new_parent': 'VF', 'new_family': ['KOORD', 'SIMPX'], 'mover info': [('KOORD', (0, 1))], 'old_family': ['KOORD', 'C', 'MF', 'VC'], 'start left siblings': [], 'auto preterminals': ('KON', 'PWS', 'ADV', 'ADV', 'ADJD', 'VAFIN'), 'start right siblings': ['C', 'MF', 'VC'], 'end left siblings': [], 'auto preterminal span': (0, 6), 'adding node already present': False, 'movers': ['KOORD'], 'old_parent': 'SIMPX', 'POS confusion': ('KON', 'KON'), 'added and moved': True, 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'ADJX'}
(TOP
	(TURN
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(ADVX
					(VF
						(KOORD oder)
						[01;36m(VF[00m
							(SIMPX
								(C was)
								(MF noch etwas preiswerter)
								(VC ware))[01;36m)[00m))
				(LK ware)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX
						(NX hotel)
						(NX loccumerhof))[01;31m)[00m[01;31m)[00m
			[01;31m(ADJX[00m
				(ADJX
					(ADVX auch)
					[01;36m(ADJX[00m
						(ADVX zentral)
						(ADJD gelegen)[01;36m)[00m) [01;33mMF)[00m
				(PX mit konferenzraum)[01;31m)[00m[01;36m)[00m
		(NX
			[01;31m(NX[00m
				(ART die)
				(NN preislage)[01;31m)[00m
			(NX [01;33m(ADJX[00m
				(NX hundert funfundvierzig mark)
				(APPR bis)
				[01;31m(NX[00m
					(ADJX hundert achtzig) [01;33mADJX)[00m
					(NN mark)[01;31m)[00m))))
Step:Modifier Attachment
{'new_parent': 'SIMPX', 'new_family': ['ADVX', 'LK', 'MF', 'ADJX'], 'mover info': [('ADJX', (9, 14))], 'old_family': ['SIMPX', 'ADJX', 'NX'], 'start left siblings': ['SIMPX'], 'auto preterminals': ('KON', 'PWS', 'ADV', 'ADV', 'ADJD', 'VAFIN', 'VAFIN', 'NN', 'NE', 'ADV', 'ADV', 'ADJD', 'APPR', 'NN', 'ART', 'NN', 'CARD', 'CARD', 'NN', 'APPR', 'CARD', 'CARD', 'NN'), 'start right siblings': ['NX'], 'end left siblings': ['ADVX', 'LK', 'MF'], 'auto preterminal span': (0, 23), 'movers': ['ADJX'], 'old_parent': 'TURN', 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SIMPX
			(ADVX
				(VF
					(KOORD oder)
					[01;36m(VF[00m
						(SIMPX
							(C was)
							(MF noch etwas preiswerter)
							(VC ware))[01;36m)[00m))
			(LK ware)
			[01;31m(MF[00m [01;33m(MF[00m
				(NX
					(NX hotel)
					(NX loccumerhof))[01;31m)[00m
			[01;31m(ADJX[00m
				(ADJX
					(ADVX auch)
					[01;36m(ADJX[00m
						(ADVX zentral)
						(ADJD gelegen)[01;36m)[00m) [01;33mMF)[00m
				(PX mit konferenzraum)[01;31m)[00m)
		(NX
			[01;31m(NX[00m
				(ART die)
				(NN preislage)[01;31m)[00m
			(NX [01;33m(ADJX[00m
				(NX hundert funfundvierzig mark)
				(APPR bis)
				[01;31m(NX[00m
					(ADJX hundert achtzig) [01;33mADJX)[00m
					(NN mark)[01;31m)[00m))))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'ADJX'], 'mover info': [('ADJX', (9, 12))], 'old_family': ['ADJX', 'PX'], 'start left siblings': [], 'auto preterminals': ('KON', 'PWS', 'ADV', 'ADV', 'ADJD', 'VAFIN', 'VAFIN', 'NN', 'NE', 'ADV', 'ADV', 'ADJD', 'APPR', 'NN'), 'start right siblings': ['PX'], 'end left siblings': ['NX'], 'auto preterminal span': (0, 14), 'movers': ['ADJX'], 'old_parent': 'ADJX', 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SIMPX
			(ADVX
				(VF
					(KOORD oder)
					[01;36m(VF[00m
						(SIMPX
							(C was)
							(MF noch etwas preiswerter)
							(VC ware))[01;36m)[00m))
			(LK ware)
			(MF
				(NX hotel loccumerhof)
				(ADJX
					(ADVX auch)
					[01;36m(ADJX[00m
						(ADVX zentral)
						(ADJD gelegen)[01;36m)[00m))
			[01;31m(ADJX[00m
				(PX
					(APPR mit)
					(NX konferenzraum))[01;31m)[00m)
		(NX
			[01;31m(NX[00m
				(ART die)
				(NN preislage)[01;31m)[00m
			(NX [01;33m(ADJX[00m
				(NX hundert funfundvierzig mark)
				(APPR bis)
				[01;31m(NX[00m
					(ADJX hundert achtzig) [01;33mADJX)[00m
					(NN mark)[01;31m)[00m))))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['KOORD', 'VF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PWS', 'ADV', 'ADV', 'ADJD', 'VAFIN'), 'right siblings': [], 'left siblings': [(KOORD (KON oder))], 'auto preterminal span': (1, 6), 'span': (1, 6), 'parent': 'VF', 'label': 'VF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SIMPX
			(ADVX oder was noch etwas preiswerter ware)
			(LK ware)
			(MF
				(NX hotel loccumerhof)
				(ADJX
					(ADVX auch)
					[01;36m(ADJX[00m
						(ADVX zentral)
						(ADJD gelegen)[01;36m)[00m))
			[01;31m(ADJX[00m
				(PX
					(APPR mit)
					(NX konferenzraum))[01;31m)[00m)
		(NX
			[01;31m(NX[00m
				(ART die)
				(NN preislage)[01;31m)[00m
			(NX [01;33m(ADJX[00m
				(NX hundert funfundvierzig mark)
				(APPR bis)
				[01;31m(NX[00m
					(ADJX hundert achtzig) [01;33mADJX)[00m
					(NN mark)[01;31m)[00m))))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'ADJD'], 'family': ['ADVX', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADJD'), 'right siblings': [], 'left siblings': [(ADVX (ADV auch))], 'auto preterminal span': (10, 12), 'span': (10, 12), 'parent': 'ADJX', 'label': 'ADJX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		(SIMPX
			(ADVX oder was noch etwas preiswerter ware)
			(LK ware)
			(MF hotel loccumerhof auch zentral gelegen)
			[01;31m(ADJX[00m
				(PX
					(APPR mit)
					(NX konferenzraum))[01;31m)[00m)
		(NX
			[01;31m(NX[00m
				(ART die)
				(NN preislage)[01;31m)[00m
			(NX [01;33m(ADJX[00m
				(NX hundert funfundvierzig mark)
				(APPR bis)
				[01;31m(NX[00m
					(ADJX hundert achtzig) [01;33mADJX)[00m
					(NN mark)[01;31m)[00m))))
Step:Unary
{'subtrees': ['PX'], 'family': ['ADVX', 'LK', 'MF', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'PWS', 'ADV', 'ADV', 'ADJD', 'VAFIN', 'VAFIN', 'NN', 'NE', 'ADV', 'ADV', 'ADJD', 'APPR', 'NN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (0, 14), 'span': (12, 14), 'left siblings': ['ADVX', 'LK', 'MF'], 'label': 'ADJX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX oder was noch etwas preiswerter ware ware hotel loccumerhof auch zentral gelegen mit konferenzraum)
		(NX
			[01;31m(NX[00m
				(ART die)
				(NN preislage)[01;31m)[00m
			(NX [01;33m(ADJX[00m
				(NX hundert funfundvierzig mark)
				(APPR bis)
				[01;31m(NX[00m
					(ADJX hundert achtzig) [01;33mADJX)[00m
					(NN mark)[01;31m)[00m))))
Step:NP Internal Structure
{'subtrees': ['ART', 'NN'], 'family': ['NX', 'NX'], 'over_word': False, 'over words': True, 'auto preterminals': ('ART', 'NN', 'CARD', 'CARD', 'NN', 'APPR', 'CARD', 'CARD', 'NN'), 'right siblings': ['NX'], 'parent': 'NX', 'auto preterminal span': (14, 23), 'span': (14, 16), 'left siblings': [], 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX oder was noch etwas preiswerter ware ware hotel loccumerhof auch zentral gelegen mit konferenzraum)
		(NX
			(ART die)
			(NN preislage)
			(NX [01;33m(ADJX[00m
				(NX hundert funfundvierzig mark)
				(APPR bis)
				[01;31m(NX[00m
					(ADJX hundert achtzig) [01;33mADJX)[00m
					(NN mark)[01;31m)[00m))))
Step:UNSET remove
{'subtrees': ['ADJX', 'NN'], 'family': ['NX', 'APPR', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'CARD', 'NN', 'APPR', 'CARD', 'CARD', 'NN'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (16, 23), 'span': (20, 23), 'left siblings': ['NX', 'APPR'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX oder was noch etwas preiswerter ware ware hotel loccumerhof auch zentral gelegen mit konferenzraum)
		(NX
			(ART die)
			(NN preislage)
			(NX
				[01;36m(ADJX[00m
					(NX hundert funfundvierzig mark)
					(APPR bis)
					(ADJX hundert achtzig)[01;36m)[00m
				(NN mark)))))
Step:Modifier Attachment
{'subtrees': ['NX', 'APPR', 'ADJX'], 'family': ['ADJX', 'NN'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'CARD', 'NN', 'APPR', 'CARD', 'CARD'), 'right siblings': [(NN mark)], 'left siblings': [], 'auto preterminal span': (16, 22), 'span': (16, 22), 'parent': 'NX', 'label': 'ADJX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP oder was noch etwas preiswerter ware ware hotel loccumerhof auch zentral gelegen mit konferenzraum die preislage hundert funfundvierzig mark bis hundert achtzig mark)

Sentence 636:
0 Initial errors
0 on fringe, 0 iterations

Sentence 637:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM guten tag)
		(SIMPX
			(VF wir)
			(LK wollten)
			(MF
				(PX in den nachsten drei monaten)
				(ADVX doch)
				(ADVX noch)
				(ADVX mal)
				[01;36m(VC[00m
					(APPR nach)[01;36m)[00m
				(PX nach hannover zu unserer filiale))
			(VC fahren))
		(SIMPX haben sie jetzt einen freien termin gefunden)))
Step:Single Word Phrase
{'subtrees': ['APPR'], 'family': ['PX', 'ADVX', 'ADVX', 'ADVX', 'VC', 'PX'], 'over_word': True, 'over words': True, 'auto preterminals': ('APPR',), 'right siblings': [(PX (PX (APPR nach) (NX (NE hannover))) (PX (APPR zu) (NX (PPOSAT unserer) (NN filiale))))], 'left siblings': [(PX (APPR in) (NX (ART den) (ADJX (ADJA nachsten)) (ADJX (CARD drei)) (NN monaten))), (ADVX (ADV doch)), (ADVX (ADV noch)), (ADVX (ADV mal))], 'auto preterminal span': (12, 13), 'span': (12, 13), 'parent': 'MF', 'label': 'VC', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP guten tag wir wollten in den nachsten drei monaten doch noch mal nach nach hannover zu unserer filiale fahren haben sie jetzt einen freien termin gefunden)

Sentence 638:
7 Initial errors
0 on fringe, 4 iterations
4 Error:NP Attachment
1 Error:Unary
1 Error:PP Attachment
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM okay)
		[01;31m(PX[00m
			[01;36m(DM[00m
				(ADVX
					(ADV also))[01;36m)[00m
			(PX am zwanzigsten)[01;31m)[00m
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF was)
				(LK meinen)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX
						(PPER sie))[01;31m)[00m[01;31m)[00m
			[01;31m(NX[00m
				(ADVX eher)
				(NX flug)[01;31m)[00m[01;36m)[00m)) [01;33mMF)[00m
Step:NP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'NX'], 'mover info': [('NX', (7, 9))], 'old_family': ['DM', 'PX', 'SIMPX', 'NX'], 'start left siblings': ['DM', 'PX', 'SIMPX'], 'auto preterminals': ('ITJ', 'ADV', 'APPRART', 'NN', 'PWS', 'VVFIN', 'PPER', 'ADV', 'NN'), 'start right siblings': [], 'end left siblings': ['NX'], 'auto preterminal span': (0, 9), 'movers': ['NX'], 'old_parent': 'TURN', 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM okay)
		[01;31m(PX[00m
			[01;36m(DM[00m
				(ADVX
					(ADV also))[01;36m)[00m
			(PX am zwanzigsten)[01;31m)[00m
		(SIMPX
			(VF was)
			(LK meinen)
			(MF
				(NX sie)
				[01;31m(NX[00m
					(ADVX eher)
					(NX flug)[01;31m)[00m))))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['DM', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV',), 'right siblings': [(PX (APPRART am) (NX (NN zwanzigsten)))], 'left siblings': [], 'auto preterminal span': (1, 2), 'span': (1, 2), 'parent': 'PX', 'label': 'DM', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM okay)
		[01;31m(PX[00m
			(DM also)
			(PX am zwanzigsten)[01;31m)[00m
		(SIMPX
			(VF was)
			(LK meinen)
			(MF
				(NX sie)
				[01;31m(NX[00m
					(ADVX eher)
					(NX flug)[01;31m)[00m))))
Step:PP Attachment
{'subtrees': ['DM', 'PX'], 'family': ['DM', 'PX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'APPRART', 'NN', 'PWS', 'VVFIN', 'PPER', 'ADV', 'NN'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 9), 'span': (1, 4), 'left siblings': ['DM'], 'label': 'PX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(DM also)
		(PX am zwanzigsten)
		(SIMPX
			(VF was)
			(LK meinen)
			(MF
				(NX sie)
				[01;31m(NX[00m
					(ADVX eher)
					(NX flug)[01;31m)[00m))))
Step:UNSET remove
{'subtrees': ['ADVX', 'NX'], 'family': ['NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (6, 9), 'span': (7, 9), 'left siblings': ['NX'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP okay also am zwanzigsten was meinen sie eher flug)

Sentence 639:
0 Initial errors
0 on fringe, 0 iterations

Sentence 640:
0 Initial errors
0 on fringe, 0 iterations

Sentence 641:
3 Initial errors
0 on fringe, 2 iterations
2 Error:Single Word Phrase
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM gut)
		(DM ja)
		(SIMPX
			[01;36m(KOORD[00m [01;31m(VF[00m
				[01;31m(ADVX[00m
					(ADV aber)[01;31m)[00m[01;31m)[00m[01;36m)[00m
			(LK gehen)
			(MF wir doch dann sonntag abend noch ins theater))))
Step:Single Word Phrase
{'family': ['KOORD'], 'auto preterminal span': (2, 3), 'span': (2, 3), 'subtrees': ['ADV'], 'parent': 'VF', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'KOORD')}
(TOP
	(TURN
		(DM gut)
		(DM ja)
		(SIMPX
			[01;31m(VF[00m
				(KOORD
					(ADV aber))[01;31m)[00m
			(LK gehen)
			(MF wir doch dann sonntag abend noch ins theater))))
Step:Unary
{'subtrees': ['KOORD'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'ADV', 'ADV', 'NN', 'ADV', 'ADV', 'APPRART', 'NN'), 'right siblings': ['LK', 'MF'], 'parent': 'SIMPX', 'auto preterminal span': (2, 12), 'span': (2, 3), 'left siblings': [], 'label': 'VF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP gut ja aber gehen wir doch dann sonntag abend noch ins theater)

Sentence 642:
8 Initial errors
0 on fringe, 6 iterations
2 Error:Clause Attachment
2 Error:Clause Attachment
1 Error:Unary
1 Error:Clause Attachment
1 Error:Clause Attachment
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF ich)
				(LK war)[01;31m)[00m
			[01;36m(NF[00m
				(SIMPX
					(VF das letzte mal)
					(LK war)
					(MF ich im intercityhotel))[01;36m)[00m[01;36m)[00m
		[01;31m(SIMPX[00m
			(SIMPX das ist ziemlich zentral)
			(KON und)
			(DM ja)
			(DM okay)
			[01;33m(SIMPX[00m (SIMPX es hat einen konferenzraum)[01;31m)[00m
		(SIMPX aber das brauchen wir eigentlich nicht) [01;33mSIMPX)[00m
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF da)
				(LK war)[01;31m)[00m
			[01;31m(SIMPX[00m
				(VF das einzelzimmer)
				(LK hat)
				(MF ungefahr zweihundert mark)
				(VC gekostet)[01;31m)[00m[01;36m)[00m))
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'SIMPX'], 'mover info': [('SIMPX', (3, 10))], 'old_family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'start left siblings': ['DM', 'SIMPX'], 'auto preterminals': ('PTKANT', 'PPER', 'VAFIN', 'ART', 'ADJA', 'NN', 'VAFIN', 'PPER', 'APPRART', 'NE', 'PDS', 'VAFIN', 'ADV', 'ADJD', 'KON', 'PTKANT', 'ITJ', 'PPER', 'VAFIN', 'ART', 'NN', 'KON', 'PDS', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADV', 'VAFIN', 'ART', 'NN', 'VAFIN', 'ADV', 'CARD', 'NN', 'VVPP'), 'start right siblings': ['SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'end left siblings': ['VF', 'LK'], 'auto preterminal span': (0, 36), 'movers': ['SIMPX'], 'old_parent': 'TURN', 'end right siblings': [], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF ich)
			(LK war)
			[01;36m(NF[00m
				(SIMPX
					(VF das letzte mal)
					(LK war)
					(MF ich im intercityhotel))[01;36m)[00m)
		[01;31m(SIMPX[00m
			(SIMPX das ist ziemlich zentral)
			(KON und)
			(DM ja)
			(DM okay)
			[01;33m(SIMPX[00m (SIMPX es hat einen konferenzraum)[01;31m)[00m
		(SIMPX aber das brauchen wir eigentlich nicht) [01;33mSIMPX)[00m
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF da)
				(LK war)[01;31m)[00m
			[01;31m(SIMPX[00m
				(VF das einzelzimmer)
				(LK hat)
				(MF ungefahr zweihundert mark)
				(VC gekostet)[01;31m)[00m[01;36m)[00m))
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['SIMPX', 'VF', 'LK', 'MF', 'VC'], 'mover info': [('SIMPX', (27, 29))], 'old_family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'start left siblings': ['DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'auto preterminals': ('PTKANT', 'PPER', 'VAFIN', 'ART', 'ADJA', 'NN', 'VAFIN', 'PPER', 'APPRART', 'NE', 'PDS', 'VAFIN', 'ADV', 'ADJD', 'KON', 'PTKANT', 'ITJ', 'PPER', 'VAFIN', 'ART', 'NN', 'KON', 'PDS', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADV', 'VAFIN', 'ART', 'NN', 'VAFIN', 'ADV', 'CARD', 'NN', 'VVPP'), 'start right siblings': ['SIMPX'], 'end left siblings': [], 'auto preterminal span': (0, 36), 'movers': ['SIMPX'], 'old_parent': 'TURN', 'end right siblings': ['VF', 'LK', 'MF', 'VC'], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF ich)
			(LK war)
			[01;36m(NF[00m
				(SIMPX
					(VF das letzte mal)
					(LK war)
					(MF ich im intercityhotel))[01;36m)[00m)
		[01;31m(SIMPX[00m
			(SIMPX das ist ziemlich zentral)
			(KON und)
			(DM ja)
			(DM okay)
			[01;33m(SIMPX[00m (SIMPX es hat einen konferenzraum)[01;31m)[00m
		(SIMPX aber das brauchen wir eigentlich nicht) [01;33mSIMPX)[00m
		(SIMPX
			[01;31m(SIMPX[00m
				(VF da)
				(LK war)[01;31m)[00m
			(VF das einzelzimmer)
			(LK hat)
			(MF ungefahr zweihundert mark)
			(VC gekostet))))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['VF', 'LK', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'ADJA', 'NN', 'VAFIN', 'PPER', 'APPRART', 'NE'), 'right siblings': [], 'left siblings': [(VF (NX (PPER ich))), (LK (VXFIN (VAFIN war)))], 'auto preterminal span': (3, 10), 'span': (3, 10), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich war das letzte mal war ich im intercityhotel)
		[01;31m(SIMPX[00m
			(SIMPX das ist ziemlich zentral)
			(KON und)
			(DM ja)
			(DM okay)
			[01;33m(SIMPX[00m (SIMPX es hat einen konferenzraum)[01;31m)[00m
		(SIMPX aber das brauchen wir eigentlich nicht) [01;33mSIMPX)[00m
		(SIMPX
			[01;31m(SIMPX[00m
				(VF da)
				(LK war)[01;31m)[00m
			(VF das einzelzimmer)
			(LK hat)
			(MF ungefahr zweihundert mark)
			(VC gekostet))))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'KON', 'DM', 'DM', 'SIMPX'], 'family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VAFIN', 'ART', 'ADJA', 'NN', 'VAFIN', 'PPER', 'APPRART', 'NE', 'PDS', 'VAFIN', 'ADV', 'ADJD', 'KON', 'PTKANT', 'ITJ', 'PPER', 'VAFIN', 'ART', 'NN', 'KON', 'PDS', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADV', 'VAFIN', 'ART', 'NN', 'VAFIN', 'ADV', 'CARD', 'NN', 'VVPP'), 'right siblings': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 36), 'span': (10, 21), 'left siblings': ['DM', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich war das letzte mal war ich im intercityhotel)
		(SIMPX das ist ziemlich zentral)
		(KON und)
		(DM ja)
		(DM okay)
		[01;36m(SIMPX[00m
			(SIMPX es hat einen konferenzraum)
			(SIMPX aber das brauchen wir eigentlich nicht)[01;36m)[00m
		(SIMPX
			[01;31m(SIMPX[00m
				(VF da)
				(LK war)[01;31m)[00m
			(VF das einzelzimmer)
			(LK hat)
			(MF ungefahr zweihundert mark)
			(VC gekostet))))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['DM', 'SIMPX', 'SIMPX', 'KON', 'DM', 'DM', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'ART', 'NN', 'KON', 'PDS', 'VVFIN', 'PPER', 'ADV', 'PTKNEG'), 'right siblings': [(SIMPX (SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VAFIN war)))) (VF (NX (ART das) (NN einzelzimmer))) (LK (VXFIN (VAFIN hat))) (MF (NX (ADVX (ADV ungefahr)) (ADJX (CARD zweihundert)) (NN mark))) (VC (VXINF (VVPP gekostet))))], 'left siblings': [(DM (PTKANT ja)), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VAFIN war))) (NF (SIMPX (VF (NX (ART das) (ADJX (ADJA letzte)) (NN mal))) (LK (VXFIN (VAFIN war))) (MF (NX (PPER ich)) (PX (APPRART im) (NX (NE intercityhotel))))))), (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VAFIN ist))) (MF (ADJX (ADVX (ADV ziemlich)) (ADJD zentral)))), (KON und), (DM (PTKANT ja)), (DM (ITJ okay))], 'auto preterminal span': (17, 27), 'span': (17, 27), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich war das letzte mal war ich im intercityhotel)
		(SIMPX das ist ziemlich zentral)
		(KON und)
		(DM ja)
		(DM okay)
		(SIMPX es hat einen konferenzraum aber das brauchen wir eigentlich nicht)
		(SIMPX
			[01;31m(SIMPX[00m
				(VF da)
				(LK war)[01;31m)[00m
			(VF das einzelzimmer)
			(LK hat)
			(MF ungefahr zweihundert mark)
			(VC gekostet))))
Step:UNSET remove
{'subtrees': ['VF', 'LK'], 'family': ['SIMPX', 'VF', 'LK', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'ART', 'NN', 'VAFIN', 'ADV', 'CARD', 'NN', 'VVPP'), 'right siblings': ['VF', 'LK', 'MF', 'VC'], 'parent': 'SIMPX', 'auto preterminal span': (27, 36), 'span': (27, 29), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ja ich war das letzte mal war ich im intercityhotel das ist ziemlich zentral und ja okay es hat einen konferenzraum aber das brauchen wir eigentlich nicht da war das einzelzimmer hat ungefahr zweihundert mark gekostet)

Sentence 643:
6 Initial errors
0 on fringe, 5 iterations
2 Error:Modifier Attachment
1 Error:Clause Attachment
1 Error:PP Attachment
1 Error:Unary
1 Error:Clause Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX das ist bestimmt nicht schlecht)
		(SIMPX
			(VF ich)
			(LK kenne)
			(MF
				[01;31m(NX[00m
					(NX ein theater)
					(PX in hannover)[01;31m)[00m))
		(SIMPX das heist ballhof oder so)
		[01;31m(P[00m
			(SIMPX vielleicht haben die auch eine gute inszenierung)
			[01;36m(SIMPX[00m
				(KOUS weil)
				(SIMPX
					(VF das letzte mal)
					(LK haben)
					(MF
						(NX die)
						[01;31m(ADJX[00m
							(ADVX wirklich)
							[01;36m(ADJX[00m
								(ADJD gut)[01;36m)[00m[01;31m)[00m)
					(VC gespielt))[01;36m)[00m[01;31m)[00m
		(SIMPX
			(VF ansonsten)
			(LK weis)
			(MF ich gar nicht)
			(NF
				(SIMPX
					(C was)
					(MF
						[01;36m(PX[00m
							(PX im moment)
							(PX in hannover)[01;36m)[00m
						(ADVX so)
						(ADVX los))
					(VC ist))))))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'ADVX', 'ADJX'], 'mover info': [('ADVX', (30, 31))], 'old_family': ['ADVX', 'ADJD'], 'start left siblings': [], 'auto preterminals': ('PDS', 'ADV', 'ADJD'), 'start right siblings': ['ADJD'], 'end left siblings': ['NX'], 'auto preterminal span': (29, 32), 'movers': ['ADVX'], 'old_parent': 'ADJX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['ADJX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(SIMPX das ist bestimmt nicht schlecht)
		(SIMPX
			(VF ich)
			(LK kenne)
			(MF
				[01;31m(NX[00m
					(NX ein theater)
					(PX in hannover)[01;31m)[00m))
		(SIMPX das heist ballhof oder so)
		[01;31m(P[00m
			(SIMPX vielleicht haben die auch eine gute inszenierung)
			[01;36m(SIMPX[00m
				(KOUS weil)
				(SIMPX das letzte mal haben die wirklich gut gespielt)[01;36m)[00m[01;31m)[00m
		(SIMPX
			(VF ansonsten)
			(LK weis)
			(MF ich gar nicht)
			(NF
				(SIMPX
					(C was)
					(MF
						[01;36m(PX[00m
							(PX im moment)
							(PX in hannover)[01;36m)[00m
						(ADVX so)
						(ADVX los))
					(VC ist))))))
Step:Clause Attachment
{'subtrees': ['KOUS', 'SIMPX'], 'family': ['SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'ART', 'ADJA', 'NN', 'VAFIN', 'PDS', 'ADV', 'ADJD', 'VVPP'), 'right siblings': [], 'left siblings': [(SIMPX (VF (ADVX (ADV vielleicht))) (LK (VXFIN (VAFIN haben))) (MF (NX (PDS die)) (ADVX (ADV auch)) (NX (ART eine) (ADJX (ADJA gute)) (NN inszenierung))))], 'auto preterminal span': (24, 33), 'span': (24, 33), 'parent': 'P', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX das ist bestimmt nicht schlecht)
		(SIMPX
			(VF ich)
			(LK kenne)
			(MF
				[01;31m(NX[00m
					(NX ein theater)
					(PX in hannover)[01;31m)[00m))
		(SIMPX das heist ballhof oder so)
		[01;31m(P[00m
			(SIMPX vielleicht haben die auch eine gute inszenierung)
			(SIMPX weil das letzte mal haben die wirklich gut gespielt)[01;31m)[00m
		(SIMPX
			(VF ansonsten)
			(LK weis)
			(MF ich gar nicht)
			(NF
				(SIMPX
					(C was)
					(MF
						[01;36m(PX[00m
							(PX im moment)
							(PX in hannover)[01;36m)[00m
						(ADVX so)
						(ADVX los))
					(VC ist))))))
Step:PP Attachment
{'subtrees': ['PX', 'PX'], 'family': ['PX', 'ADVX', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'NN', 'APPR', 'NE'), 'right siblings': [(ADVX (ADV so)), (ADVX (ADV los))], 'left siblings': [], 'auto preterminal span': (39, 43), 'span': (39, 43), 'parent': 'MF', 'label': 'PX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX das ist bestimmt nicht schlecht)
		(SIMPX
			(VF ich)
			(LK kenne)
			(MF
				[01;31m(NX[00m
					(NX ein theater)
					(PX in hannover)[01;31m)[00m))
		(SIMPX das heist ballhof oder so)
		[01;31m(P[00m
			(SIMPX vielleicht haben die auch eine gute inszenierung)
			(SIMPX weil das letzte mal haben die wirklich gut gespielt)[01;31m)[00m
		(SIMPX ansonsten weis ich gar nicht was im moment in hannover so los ist)))
Step:Unary
{'subtrees': ['NX', 'PX'], 'family': ['NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'APPR', 'NE'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (8, 12), 'span': (8, 12), 'left siblings': [], 'label': 'NX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX das ist bestimmt nicht schlecht)
		(SIMPX ich kenne ein theater in hannover)
		(SIMPX das heist ballhof oder so)
		[01;31m(P[00m
			(SIMPX vielleicht haben die auch eine gute inszenierung)
			(SIMPX weil das letzte mal haben die wirklich gut gespielt)[01;31m)[00m
		(SIMPX ansonsten weis ich gar nicht was im moment in hannover so los ist)))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'P', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PDS', 'VAFIN', 'ADV', 'PTKNEG', 'ADJD', 'PPER', 'VVFIN', 'ART', 'NN', 'APPR', 'NE', 'PDS', 'VVFIN', 'NE', 'KON', 'ADV', 'ADV', 'VAFIN', 'PDS', 'ADV', 'ART', 'ADJA', 'NN', 'KOUS', 'ART', 'ADJA', 'NN', 'VAFIN', 'PDS', 'ADV', 'ADJD', 'VVPP', 'ADV', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'PWS', 'APPRART', 'NN', 'APPR', 'NE', 'ADV', 'ADV', 'VAFIN'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 46), 'span': (17, 33), 'left siblings': ['DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'label': 'P', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP ja das ist bestimmt nicht schlecht ich kenne ein theater in hannover das heist ballhof oder so vielleicht haben die auch eine gute inszenierung weil das letzte mal haben die wirklich gut gespielt ansonsten weis ich gar nicht was im moment in hannover so los ist)

Sentence 644:
2 Initial errors
0 on fringe, 2 iterations
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(PX irgendwann ja in der woche)
		(SIMPX wir konnen ja)
		(APPRART am)
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				(ADVX
					(ADV vielleicht))[01;31m)[00m
			(LK fahren)
			(MF wir einfach montag schon)
			(VC los)[01;31m)[00m
		(SIMPX dann sind wir vorm wochenende wieder zuruck)))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['VF', 'LK', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'ADV', 'NN', 'ADV', 'PTKVZ'), 'right siblings': ['LK', 'MF', 'VC'], 'parent': 'SIMPX', 'auto preterminal span': (9, 16), 'span': (9, 10), 'left siblings': [], 'label': 'VF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(PX irgendwann ja in der woche)
		(SIMPX wir konnen ja)
		(APPRART am)
		[01;31m(SIMPX[00m
			(ADVX vielleicht)
			(LK fahren)
			(MF wir einfach montag schon)
			(VC los)[01;31m)[00m
		(SIMPX dann sind wir vorm wochenende wieder zuruck)))
Step:UNSET remove
{'subtrees': ['ADVX', 'LK', 'MF', 'VC'], 'family': ['PX', 'SIMPX', 'APPRART', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PTKANT', 'APPR', 'ART', 'NN', 'PPER', 'VMFIN', 'ADV', 'APPRART', 'ADV', 'VVFIN', 'PPER', 'ADV', 'NN', 'ADV', 'PTKVZ', 'ADV', 'VAFIN', 'PPER', 'APPRART', 'NN', 'ADV', 'ADV'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 23), 'span': (9, 16), 'left siblings': ['PX', 'SIMPX', 'APPRART'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP irgendwann ja in der woche wir konnen ja am vielleicht fahren wir einfach montag schon los dann sind wir vorm wochenende wieder zuruck)

Sentence 645:
1 Initial errors
0 on fringe, 1 iterations
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ach)
		(SIMPX ich finde mit dem zug konnen wir auch fahren)
		(SIMPX so weit ist das ja nicht bis hannover)
		[01;31m(SIMPX[00m
			(VF da)
			(LK fahren)
			(MF wir mit dem zug ja nur zwei drei stunden)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PPER', 'VVFIN', 'APPR', 'ART', 'NN', 'VMFIN', 'PPER', 'ADV', 'VVINF', 'ADV', 'ADJD', 'VAFIN', 'PDS', 'ADV', 'PTKNEG', 'APPR', 'NE', 'ADV', 'VVFIN', 'PPER', 'APPR', 'ART', 'NN', 'ADV', 'ADV', 'CARD', 'CARD', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 29), 'span': (18, 29), 'left siblings': ['DM', 'SIMPX', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ach ich finde mit dem zug konnen wir auch fahren so weit ist das ja nicht bis hannover da fahren wir mit dem zug ja nur zwei drei stunden)

Sentence 646:
0 Initial errors
0 on fringe, 0 iterations

Sentence 647:
0 Initial errors
0 on fringe, 0 iterations

Sentence 648:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX wenn wir mittags fahren)
		(SIMPX
			(VF da)
			(LK konnten)
			(MF wir den)
			(VC nehmen)
			[01;36m(PX[00m
				(NF
					(PX um zwolf uhr funfundvierzig)
					(PX zum beispiel))[01;36m)[00m)
		(SIMPX dann sind wir um sechzehn uhr vier in hannover)))
Step:Unary
{'subtrees': ['NF'], 'family': ['VF', 'LK', 'MF', 'VC', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'CARD', 'NN', 'CARD', 'APPRART', 'NN'), 'right siblings': [], 'left siblings': [(VF (ADVX (ADV da))), (LK (VXFIN (VMFIN konnten))), (MF (NX (PPER wir)) (NX (PDS den))), (VC (VXINF (VVINF nehmen)))], 'auto preterminal span': (9, 15), 'span': (9, 15), 'parent': 'SIMPX', 'label': 'PX', 'classified_type': 'Unary', 'type': 'add'}
(TOP wenn wir mittags fahren da konnten wir den nehmen um zwolf uhr funfundvierzig zum beispiel dann sind wir um sechzehn uhr vier in hannover)

Sentence 649:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM ja)
		(SIMPX ich kann ja schon mal zwei platze reservieren lassen)
		(SIMPX
			(VF sie)
			(LK rauchen)
			(SIMPX glaube ich)
			[01;31m(MF[00m
				(ADVX auch)
				(ADVX nicht)[01;31m)[00m)
		(DM frau meurer)))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'ADVX'], 'family': ['VF', 'LK', 'SIMPX', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'VVFIN', 'PPER', 'ADV', 'PTKNEG'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (11, 17), 'span': (15, 17), 'left siblings': ['VF', 'LK', 'SIMPX'], 'label': 'MF', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP ja ja ich kann ja schon mal zwei platze reservieren lassen sie rauchen glaube ich auch nicht frau meurer)

Sentence 650:
0 Initial errors
0 on fringe, 0 iterations

Sentence 651:
6 Initial errors
0 on fringe, 6 iterations
1 Error:Unary
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:UNSET add
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich kann ja mal im reiseburo anrufen)
		(KON oder)
		(APPRART im)
		(SIMPX
			(VF wir)
			(LK mussen)
			(MF uns eh noch)
			(VC uberlegen)
			(NF
				(SIMPX
					(SIMPX wo wir schlafen wollen)
					[01;36m(NF[00m
						(SIMPX
							(C ob)
							(MF wir ein hotel)
							(VC nehmen)
							(NF oder pension))[01;36m)[00m)))
		(SIMPX
			(VF da)
			(LK kann)
			(MF ich ja mal)
			[01;31m(FKOORD[00m [01;33m(VXINF (VC[00m
				[01;31m(VC[00m
					(VXINF
						(VVINF anrufen))[01;31m)[00m
				(KON und)
				[01;31m(VCN[00m
					(VC fragen) [01;33mVC) VXINF)[00m
					(NF ob die ein programm haben fur theater)[01;31m)[00m[01;31m)[00m)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SIMPX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ART', 'NN', 'VVFIN', 'KON', 'NN'), 'right siblings': [], 'left siblings': [(SIMPX (C (PX (PWAV wo))) (MF (NX (PPER wir))) (VC (VXINF (VVINF schlafen)) (VXFIN (VMFIN wollen))))], 'auto preterminal span': (20, 27), 'span': (20, 27), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich kann ja mal im reiseburo anrufen)
		(KON oder)
		(APPRART im)
		(SIMPX wir mussen uns eh noch uberlegen wo wir schlafen wollen ob wir ein hotel nehmen oder pension)
		(SIMPX
			(VF da)
			(LK kann)
			(MF ich ja mal)
			[01;31m(FKOORD[00m [01;33m(VXINF (VC[00m
				[01;31m(VC[00m
					(VXINF
						(VVINF anrufen))[01;31m)[00m
				(KON und)
				[01;31m(VCN[00m
					(VC fragen) [01;33mVC) VXINF)[00m
					(NF ob die ein programm haben fur theater)[01;31m)[00m[01;31m)[00m)))
Step:Unary
{'subtrees': ['VXINF'], 'family': ['VC', 'KON', 'VCN'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVINF', 'KON', 'VVINF', 'KOUS', 'PDS', 'ART', 'NN', 'VAFIN', 'APPR', 'NN'), 'right siblings': ['KON', 'VCN'], 'parent': 'FKOORD', 'auto preterminal span': (32, 42), 'span': (32, 33), 'left siblings': [], 'label': 'VC', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich kann ja mal im reiseburo anrufen)
		(KON oder)
		(APPRART im)
		(SIMPX wir mussen uns eh noch uberlegen wo wir schlafen wollen ob wir ein hotel nehmen oder pension)
		(SIMPX
			(VF da)
			(LK kann)
			(MF ich ja mal)
			[01;31m(FKOORD[00m [01;33m(VXINF (VC[00m
				(VXINF anrufen)
				(KON und)
				[01;31m(VCN[00m
					(VC fragen) [01;33mVC) VXINF)[00m
					(NF ob die ein programm haben fur theater)[01;31m)[00m[01;31m)[00m)))
Step:UNSET remove
{'subtrees': ['VXINF', 'KON', 'VCN'], 'family': ['VF', 'LK', 'MF', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'VVINF', 'KON', 'VVINF', 'KOUS', 'PDS', 'ART', 'NN', 'VAFIN', 'APPR', 'NN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (27, 42), 'span': (32, 42), 'left siblings': ['VF', 'LK', 'MF'], 'label': 'FKOORD', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich kann ja mal im reiseburo anrufen)
		(KON oder)
		(APPRART im)
		(SIMPX wir mussen uns eh noch uberlegen wo wir schlafen wollen ob wir ein hotel nehmen oder pension)
		(SIMPX
			(VF da)
			(LK kann)
			(MF ich ja mal)
			[01;33m(VXINF (VC[00m (VXINF anrufen)
			(KON und)
			[01;31m(VCN[00m
				(VC fragen) [01;33mVC) VXINF)[00m
				(NF ob die ein programm haben fur theater)[01;31m)[00m)))
Step:UNSET remove
{'subtrees': ['VC', 'NF'], 'family': ['VF', 'LK', 'MF', 'VXINF', 'KON', 'VCN'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'VVINF', 'KON', 'VVINF', 'KOUS', 'PDS', 'ART', 'NN', 'VAFIN', 'APPR', 'NN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (27, 42), 'span': (34, 42), 'left siblings': ['VF', 'LK', 'MF', 'VXINF', 'KON'], 'label': 'VCN', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich kann ja mal im reiseburo anrufen)
		(KON oder)
		(APPRART im)
		(SIMPX wir mussen uns eh noch uberlegen wo wir schlafen wollen ob wir ein hotel nehmen oder pension)
		(SIMPX
			(VF da)
			(LK kann)
			(MF ich ja mal)
			[01;36m(VXINF[00m
				[01;36m(VC[00m
					(VXINF anrufen)
					(KON und)
					(VC fragen)[01;36m)[00m[01;36m)[00m
			(NF ob die ein programm haben fur theater))))
Step:UNSET add
{'subtrees': ['VXINF', 'KON', 'VC'], 'family': ['VF', 'LK', 'MF', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVINF', 'KON', 'VVINF'), 'right siblings': [(NF (SIMPX (C (KOUS ob)) (MF (NX (PDS die)) (NX (ART ein) (NN programm))) (VC (VXFIN (VAFIN haben))) (NF (PX (APPR fur) (NX (NN theater))))))], 'left siblings': [(VF (ADVX (ADV da))), (LK (VXFIN (VMFIN kann))), (MF (NX (PPER ich)) (ADVX (ADV ja)) (ADVX (ADV mal)))], 'auto preterminal span': (32, 35), 'span': (32, 35), 'parent': 'SIMPX', 'label': 'VC', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich kann ja mal im reiseburo anrufen)
		(KON oder)
		(APPRART im)
		(SIMPX wir mussen uns eh noch uberlegen wo wir schlafen wollen ob wir ein hotel nehmen oder pension)
		(SIMPX
			(VF da)
			(LK kann)
			(MF ich ja mal)
			[01;36m(VXINF[00m
				(VC
					(VXINF anrufen)
					(KON und)
					(VC fragen))[01;36m)[00m
			(NF ob die ein programm haben fur theater))))
Step:Unary
{'subtrees': ['VC'], 'family': ['VF', 'LK', 'MF', 'VXINF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVINF', 'KON', 'VVINF'), 'right siblings': [(NF (SIMPX (C (KOUS ob)) (MF (NX (PDS die)) (NX (ART ein) (NN programm))) (VC (VXFIN (VAFIN haben))) (NF (PX (APPR fur) (NX (NN theater))))))], 'left siblings': [(VF (ADVX (ADV da))), (LK (VXFIN (VMFIN kann))), (MF (NX (PPER ich)) (ADVX (ADV ja)) (ADVX (ADV mal)))], 'auto preterminal span': (32, 35), 'span': (32, 35), 'parent': 'SIMPX', 'label': 'VXINF', 'classified_type': 'Unary', 'type': 'add'}
(TOP ja ich kann ja mal im reiseburo anrufen oder im wir mussen uns eh noch uberlegen wo wir schlafen wollen ob wir ein hotel nehmen oder pension da kann ich ja mal anrufen und fragen ob die ein programm haben fur theater)

Sentence 652:
18 Initial errors
0 on fringe, 14 iterations
2 Error:Different label
2 Error:Clause Attachment
2 Error:UNSET move
2 Error:Co-ordination
1 Error:Clause Attachment
1 Error:UNSET remove
1 Error:Unary
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET add
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			(LK meinen)
			[01;31m(MF[00m [01;33m(MF[00m
				(NX
					(PPER sie))[01;31m)[00m
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					[01;31m(VF[00m
						(NX
							(PDS die))[01;31m)[00m [01;33mMF)[00m
					(LK wissen)
					(MF das bei der bahn)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX wenn ich da)
		[01;36m(SIMPX[00m
			(SIMPX oder ich gehe ins reiseburo)
			(SIMPX und da kann ich ja auch bahntickets kaufen)[01;36m)[00m
		(SIMPX und dann frage ich da gleich wegen der hotelbuchung)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(C das)
				[01;33m(MF[00m (MF die mir da)[01;31m)[00m
			[01;31m(SIMPX[00m
				(C das)
				[01;31m(FKOORD[00m [01;33m(MF[00m
					[01;36m(MVC[00m [01;31m(MVCN[00m
						(MF die da)
						(VC anrufen)
						[01;31m(NF[00m
							(ADVX
								(ADV vielleicht))[01;31m)[00m[01;31m)[00m[01;36m)[00m
					(KON und)
					[01;31m(MVCN[00m
						[01;31m(MF[00m
							(NX
								(ADJX zwei)
								(NN zimmer))[01;31m)[00m [01;33mMF) MF)[00m
						(VC reservieren)
						(NF fur eine termine)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m))
Step:Different label
{'family': ['MVC', 'KON', 'MVCN'], 'auto preterminal span': (38, 42), 'span': (38, 42), 'subtrees': ['MF', 'VC', 'NF'], 'parent': 'FKOORD', 'over_word': False, 'auto preterminals': ('PDS', 'ADV', 'VVFIN', 'ADV'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('MVCN', 'MVC')}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			(LK meinen)
			[01;31m(MF[00m [01;33m(MF[00m
				(NX
					(PPER sie))[01;31m)[00m
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					[01;31m(VF[00m
						(NX
							(PDS die))[01;31m)[00m [01;33mMF)[00m
					(LK wissen)
					(MF das bei der bahn)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX wenn ich da)
		[01;36m(SIMPX[00m
			(SIMPX oder ich gehe ins reiseburo)
			(SIMPX und da kann ich ja auch bahntickets kaufen)[01;36m)[00m
		(SIMPX und dann frage ich da gleich wegen der hotelbuchung)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(C das)
				[01;33m(MF[00m (MF die mir da)[01;31m)[00m
			[01;31m(SIMPX[00m
				(C das)
				[01;31m(FKOORD[00m [01;33m(MF[00m
					(MVC
						(MF die da)
						(VC anrufen)
						[01;31m(NF[00m
							(ADVX
								(ADV vielleicht))[01;31m)[00m)
					(KON und)
					[01;31m(MVCN[00m
						[01;31m(MF[00m
							(NX
								(ADJX zwei)
								(NN zimmer))[01;31m)[00m [01;33mMF) MF)[00m
						(VC reservieren)
						(NF fur eine termine)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m))
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['SIMPX', 'C', 'FKOORD'], 'mover info': [('SIMPX', (33, 37))], 'old_family': ['SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'start left siblings': ['SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'auto preterminals': ('VVFIN', 'PPER', 'PDS', 'VVFIN', 'PDS', 'APPR', 'ART', 'NN', 'KOUS', 'PPER', 'ADV', 'KON', 'PPER', 'VVFIN', 'APPRART', 'NN', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'NN', 'VVINF', 'KON', 'ADV', 'VVFIN', 'PPER', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'KOUS', 'PDS', 'PPER', 'ADV', 'KOUS', 'PDS', 'ADV', 'VVFIN', 'ADV', 'KON', 'CARD', 'NN', 'VVFIN', 'APPR', 'ART', 'NN'), 'start right siblings': ['SIMPX'], 'end left siblings': [], 'auto preterminal span': (0, 49), 'movers': ['SIMPX'], 'old_parent': 'TURN', 'end right siblings': ['C', 'FKOORD'], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			(LK meinen)
			[01;31m(MF[00m [01;33m(MF[00m
				(NX
					(PPER sie))[01;31m)[00m
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					[01;31m(VF[00m
						(NX
							(PDS die))[01;31m)[00m [01;33mMF)[00m
					(LK wissen)
					(MF das bei der bahn)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX wenn ich da)
		[01;36m(SIMPX[00m
			(SIMPX oder ich gehe ins reiseburo)
			(SIMPX und da kann ich ja auch bahntickets kaufen)[01;36m)[00m
		(SIMPX und dann frage ich da gleich wegen der hotelbuchung)
		(SIMPX
			[01;31m(SIMPX[00m
				(C das)
				[01;33m(MF[00m (MF die mir da)[01;31m)[00m
			(C das)
			[01;31m(FKOORD[00m [01;33m(MF[00m
				(MVC
					(MF die da)
					(VC anrufen)
					[01;31m(NF[00m
						(ADVX
							(ADV vielleicht))[01;31m)[00m)
				(KON und)
				[01;31m(MVCN[00m
					[01;31m(MF[00m
						(NX
							(ADJX zwei)
							(NN zimmer))[01;31m)[00m [01;33mMF) MF)[00m
					(VC reservieren)
					(NF fur eine termine)[01;31m)[00m[01;31m)[00m)))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['NX', 'VF'], 'mover info': [('VF', (2, 3))], 'old_family': ['VF', 'LK', 'MF'], 'start left siblings': [], 'auto preterminals': ('VVFIN', 'PPER', 'PDS', 'VVFIN', 'PDS', 'APPR', 'ART', 'NN'), 'start right siblings': ['LK', 'MF'], 'end left siblings': ['NX'], 'auto preterminal span': (0, 8), 'movers': ['VF'], 'old_parent': 'SIMPX', 'POS confusion': ('PDS', 'PDS'), 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			(LK meinen)
			(MF
				(NX sie)
				[01;31m(VF[00m
					(NX
						(PDS die))[01;31m)[00m)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					(LK wissen)
					(MF das bei der bahn)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX wenn ich da)
		[01;36m(SIMPX[00m
			(SIMPX oder ich gehe ins reiseburo)
			(SIMPX und da kann ich ja auch bahntickets kaufen)[01;36m)[00m
		(SIMPX und dann frage ich da gleich wegen der hotelbuchung)
		(SIMPX
			[01;31m(SIMPX[00m
				(C das)
				[01;33m(MF[00m (MF die mir da)[01;31m)[00m
			(C das)
			[01;31m(FKOORD[00m [01;33m(MF[00m
				(MVC
					(MF die da)
					(VC anrufen)
					[01;31m(NF[00m
						(ADVX
							(ADV vielleicht))[01;31m)[00m)
				(KON und)
				[01;31m(MVCN[00m
					[01;31m(MF[00m
						(NX
							(ADJX zwei)
							(NN zimmer))[01;31m)[00m [01;33mMF) MF)[00m
					(VC reservieren)
					(NF fur eine termine)[01;31m)[00m[01;31m)[00m)))
Step:Co-ordination
{'new_parent': 'MF', 'new_family': ['MVC', 'KON', 'NX'], 'mover info': [('MVC', (38, 42)), ('KON', (42, 43))], 'old_family': ['MVC', 'KON', 'MVCN'], 'start left siblings': [], 'auto preterminals': ('PDS', 'ADV', 'VVFIN', 'ADV', 'KON', 'CARD', 'NN', 'VVFIN', 'APPR', 'ART', 'NN'), 'start right siblings': ['MVCN'], 'end left siblings': [], 'auto preterminal span': (38, 49), 'movers': ['MVC', 'KON'], 'old_parent': 'FKOORD', 'end right siblings': ['NX'], 'classified_type': 'Co-ordination', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			(LK meinen)
			(MF
				(NX sie)
				[01;31m(VF[00m
					(NX
						(PDS die))[01;31m)[00m)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					(LK wissen)
					(MF das bei der bahn)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX wenn ich da)
		[01;36m(SIMPX[00m
			(SIMPX oder ich gehe ins reiseburo)
			(SIMPX und da kann ich ja auch bahntickets kaufen)[01;36m)[00m
		(SIMPX und dann frage ich da gleich wegen der hotelbuchung)
		(SIMPX
			[01;31m(SIMPX[00m
				(C das)
				[01;33m(MF[00m (MF die mir da)[01;31m)[00m
			(C das)
			[01;31m(FKOORD[00m
				[01;31m(MVCN[00m
					(MF
						(MVC
							(MF die da)
							(VC anrufen)
							[01;31m(NF[00m
								(ADVX
									(ADV vielleicht))[01;31m)[00m)
						(KON und)
						(NX zwei zimmer)) [01;33mMF)[00m
					(VC reservieren)
					(NF fur eine termine)[01;31m)[00m[01;31m)[00m)))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'PPER', 'VVFIN', 'APPRART', 'NN', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'NN', 'VVINF'), 'right siblings': [(SIMPX (KOORD (KON und)) (VF (ADVX (ADV dann))) (LK (VXFIN (VVFIN frage))) (MF (NX (PPER ich)) (ADVX (ADV da)) (ADVX (ADV gleich)) (PX (APPR wegen) (NX (ART der) (NN hotelbuchung))))), (SIMPX (SIMPX (C (KOUS das)) (MF (NX (PDS die)) (NX (PPER mir)) (ADVX (ADV da)))) (C (KOUS das)) (FKOORD (MVCN (MF (MVC (MF (NX (PDS die)) (ADVX (ADV da))) (VC (VXFIN (VVFIN anrufen))) (NF (ADVX (ADV vielleicht)))) (KON und) (NX (ADJX (CARD zwei)) (NN zimmer))) (VC (VXFIN (VVFIN reservieren))) (NF (PX (APPR fur) (NX (ART eine) (NN termine)))))))], 'left siblings': [(SIMPX (LK (VXFIN (VVFIN meinen))) (MF (NX (PPER sie)) (VF (NX (PDS die)))) (NF (SIMPX (LK (VXFIN (VVFIN wissen))) (MF (NX (PDS das)) (PX (APPR bei) (NX (ART der) (NN bahn))))))), (SIMPX (C (KOUS wenn)) (MF (NX (PPER ich)) (ADVX (ADV da))))], 'auto preterminal span': (11, 24), 'span': (11, 24), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			(LK meinen)
			(MF
				(NX sie)
				[01;31m(VF[00m
					(NX
						(PDS die))[01;31m)[00m)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					(LK wissen)
					(MF das bei der bahn)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX wenn ich da)
		(SIMPX oder ich gehe ins reiseburo und da kann ich ja auch bahntickets kaufen)
		(SIMPX und dann frage ich da gleich wegen der hotelbuchung)
		(SIMPX
			[01;31m(SIMPX[00m
				(C das)
				[01;33m(MF[00m (MF die mir da)[01;31m)[00m
			(C das)
			[01;31m(FKOORD[00m
				[01;31m(MVCN[00m
					(MF
						(MVC
							(MF die da)
							(VC anrufen)
							[01;31m(NF[00m
								(ADVX
									(ADV vielleicht))[01;31m)[00m)
						(KON und)
						(NX zwei zimmer)) [01;33mMF)[00m
					(VC reservieren)
					(NF fur eine termine)[01;31m)[00m[01;31m)[00m)))
Step:UNSET remove
{'subtrees': ['LK', 'MF', 'NF'], 'family': ['SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'PDS', 'VVFIN', 'PDS', 'APPR', 'ART', 'NN', 'KOUS', 'PPER', 'ADV', 'KON', 'PPER', 'VVFIN', 'APPRART', 'NN', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'NN', 'VVINF', 'KON', 'ADV', 'VVFIN', 'PPER', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'KOUS', 'PDS', 'PPER', 'ADV', 'KOUS', 'PDS', 'ADV', 'VVFIN', 'ADV', 'KON', 'CARD', 'NN', 'VVFIN', 'APPR', 'ART', 'NN'), 'right siblings': ['SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 49), 'span': (0, 8), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(LK meinen)
		(MF
			(NX sie)
			[01;31m(VF[00m
				(NX
					(PDS die))[01;31m)[00m)
		[01;31m(NF[00m
			[01;31m(SIMPX[00m
				(LK wissen)
				(MF das bei der bahn)[01;31m)[00m[01;31m)[00m
		(SIMPX wenn ich da)
		(SIMPX oder ich gehe ins reiseburo und da kann ich ja auch bahntickets kaufen)
		(SIMPX und dann frage ich da gleich wegen der hotelbuchung)
		(SIMPX
			[01;31m(SIMPX[00m
				(C das)
				[01;33m(MF[00m (MF die mir da)[01;31m)[00m
			(C das)
			[01;31m(FKOORD[00m
				[01;31m(MVCN[00m
					(MF
						(MVC
							(MF die da)
							(VC anrufen)
							[01;31m(NF[00m
								(ADVX
									(ADV vielleicht))[01;31m)[00m)
						(KON und)
						(NX zwei zimmer)) [01;33mMF)[00m
					(VC reservieren)
					(NF fur eine termine)[01;31m)[00m[01;31m)[00m)))
Step:Unary
{'subtrees': ['NX'], 'family': ['NX', 'VF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'PDS'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (1, 3), 'span': (2, 3), 'left siblings': ['NX'], 'label': 'VF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(LK meinen)
		(MF sie die)
		[01;31m(NF[00m
			[01;31m(SIMPX[00m
				(LK wissen)
				(MF das bei der bahn)[01;31m)[00m[01;31m)[00m
		(SIMPX wenn ich da)
		(SIMPX oder ich gehe ins reiseburo und da kann ich ja auch bahntickets kaufen)
		(SIMPX und dann frage ich da gleich wegen der hotelbuchung)
		(SIMPX
			[01;31m(SIMPX[00m
				(C das)
				[01;33m(MF[00m (MF die mir da)[01;31m)[00m
			(C das)
			[01;31m(FKOORD[00m
				[01;31m(MVCN[00m
					(MF
						(MVC
							(MF die da)
							(VC anrufen)
							[01;31m(NF[00m
								(ADVX
									(ADV vielleicht))[01;31m)[00m)
						(KON und)
						(NX zwei zimmer)) [01;33mMF)[00m
					(VC reservieren)
					(NF fur eine termine)[01;31m)[00m[01;31m)[00m)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['LK', 'MF', 'NF', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'PDS', 'VVFIN', 'PDS', 'APPR', 'ART', 'NN', 'KOUS', 'PPER', 'ADV', 'KON', 'PPER', 'VVFIN', 'APPRART', 'NN', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'NN', 'VVINF', 'KON', 'ADV', 'VVFIN', 'PPER', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'KOUS', 'PDS', 'PPER', 'ADV', 'KOUS', 'PDS', 'ADV', 'VVFIN', 'ADV', 'KON', 'CARD', 'NN', 'VVFIN', 'APPR', 'ART', 'NN'), 'right siblings': ['SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 49), 'span': (3, 8), 'left siblings': ['LK', 'MF'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(LK meinen)
		(MF sie die)
		[01;31m(SIMPX[00m
			(LK wissen)
			(MF das bei der bahn)[01;31m)[00m
		(SIMPX wenn ich da)
		(SIMPX oder ich gehe ins reiseburo und da kann ich ja auch bahntickets kaufen)
		(SIMPX und dann frage ich da gleich wegen der hotelbuchung)
		(SIMPX
			[01;31m(SIMPX[00m
				(C das)
				[01;33m(MF[00m (MF die mir da)[01;31m)[00m
			(C das)
			[01;31m(FKOORD[00m
				[01;31m(MVCN[00m
					(MF
						(MVC
							(MF die da)
							(VC anrufen)
							[01;31m(NF[00m
								(ADVX
									(ADV vielleicht))[01;31m)[00m)
						(KON und)
						(NX zwei zimmer)) [01;33mMF)[00m
					(VC reservieren)
					(NF fur eine termine)[01;31m)[00m[01;31m)[00m)))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['LK', 'MF', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'PDS', 'VVFIN', 'PDS', 'APPR', 'ART', 'NN', 'KOUS', 'PPER', 'ADV', 'KON', 'PPER', 'VVFIN', 'APPRART', 'NN', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'NN', 'VVINF', 'KON', 'ADV', 'VVFIN', 'PPER', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'KOUS', 'PDS', 'PPER', 'ADV', 'KOUS', 'PDS', 'ADV', 'VVFIN', 'ADV', 'KON', 'CARD', 'NN', 'VVFIN', 'APPR', 'ART', 'NN'), 'right siblings': ['SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 49), 'span': (3, 8), 'left siblings': ['LK', 'MF'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(LK meinen)
		(MF sie die)
		(LK wissen)
		(MF das bei der bahn)
		(SIMPX wenn ich da)
		(SIMPX oder ich gehe ins reiseburo und da kann ich ja auch bahntickets kaufen)
		(SIMPX und dann frage ich da gleich wegen der hotelbuchung)
		(SIMPX
			[01;31m(SIMPX[00m
				(C das)
				[01;33m(MF[00m (MF die mir da)[01;31m)[00m
			(C das)
			[01;31m(FKOORD[00m
				[01;31m(MVCN[00m
					(MF
						(MVC
							(MF die da)
							(VC anrufen)
							[01;31m(NF[00m
								(ADVX
									(ADV vielleicht))[01;31m)[00m)
						(KON und)
						(NX zwei zimmer)) [01;33mMF)[00m
					(VC reservieren)
					(NF fur eine termine)[01;31m)[00m[01;31m)[00m)))
Step:UNSET remove
{'subtrees': ['C', 'MF'], 'family': ['SIMPX', 'C', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PDS', 'PPER', 'ADV', 'KOUS', 'PDS', 'ADV', 'VVFIN', 'ADV', 'KON', 'CARD', 'NN', 'VVFIN', 'APPR', 'ART', 'NN'), 'right siblings': ['C', 'FKOORD'], 'parent': 'SIMPX', 'auto preterminal span': (33, 49), 'span': (33, 37), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(LK meinen)
		(MF sie die)
		(LK wissen)
		(MF das bei der bahn)
		(SIMPX wenn ich da)
		(SIMPX oder ich gehe ins reiseburo und da kann ich ja auch bahntickets kaufen)
		(SIMPX und dann frage ich da gleich wegen der hotelbuchung)
		(SIMPX
			(C das)
			[01;33m(MF[00m (MF die mir da)
			(C das)
			[01;31m(FKOORD[00m
				[01;31m(MVCN[00m
					(MF
						(MVC
							(MF die da)
							(VC anrufen)
							[01;31m(NF[00m
								(ADVX
									(ADV vielleicht))[01;31m)[00m)
						(KON und)
						(NX zwei zimmer)) [01;33mMF)[00m
					(VC reservieren)
					(NF fur eine termine)[01;31m)[00m[01;31m)[00m)))
Step:Unary
{'subtrees': ['MVCN'], 'family': ['C', 'MF', 'C', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PDS', 'PPER', 'ADV', 'KOUS', 'PDS', 'ADV', 'VVFIN', 'ADV', 'KON', 'CARD', 'NN', 'VVFIN', 'APPR', 'ART', 'NN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (33, 49), 'span': (38, 49), 'left siblings': ['C', 'MF', 'C'], 'label': 'FKOORD', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(LK meinen)
		(MF sie die)
		(LK wissen)
		(MF das bei der bahn)
		(SIMPX wenn ich da)
		(SIMPX oder ich gehe ins reiseburo und da kann ich ja auch bahntickets kaufen)
		(SIMPX und dann frage ich da gleich wegen der hotelbuchung)
		(SIMPX
			(C das)
			[01;33m(MF[00m (MF die mir da)
			(C das)
			[01;31m(MVCN[00m
				(MF
					(MVC
						(MF die da)
						(VC anrufen)
						[01;31m(NF[00m
							(ADVX
								(ADV vielleicht))[01;31m)[00m)
					(KON und)
					(NX zwei zimmer)) [01;33mMF)[00m
				(VC reservieren)
				(NF fur eine termine)[01;31m)[00m)))
Step:UNSET remove
{'subtrees': ['MF', 'VC', 'NF'], 'family': ['C', 'MF', 'C', 'MVCN'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PDS', 'PPER', 'ADV', 'KOUS', 'PDS', 'ADV', 'VVFIN', 'ADV', 'KON', 'CARD', 'NN', 'VVFIN', 'APPR', 'ART', 'NN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (33, 49), 'span': (38, 49), 'left siblings': ['C', 'MF', 'C'], 'label': 'MVCN', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(LK meinen)
		(MF sie die)
		(LK wissen)
		(MF das bei der bahn)
		(SIMPX wenn ich da)
		(SIMPX oder ich gehe ins reiseburo und da kann ich ja auch bahntickets kaufen)
		(SIMPX und dann frage ich da gleich wegen der hotelbuchung)
		(SIMPX
			(C das)
			[01;36m(MF[00m
				(MF die mir da)
				(C das)
				(MF
					(MVC
						(MF die da)
						(VC anrufen)
						[01;31m(NF[00m
							(ADVX
								(ADV vielleicht))[01;31m)[00m)
					(KON und)
					(NX zwei zimmer))[01;36m)[00m
			(VC reservieren)
			(NF fur eine termine))))
Step:UNSET add
{'subtrees': ['MF', 'C', 'MF'], 'family': ['C', 'MF', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'PPER', 'ADV', 'KOUS', 'PDS', 'ADV', 'VVFIN', 'ADV', 'KON', 'CARD', 'NN'), 'right siblings': [(VC (VXFIN (VVFIN reservieren))), (NF (PX (APPR fur) (NX (ART eine) (NN termine))))], 'left siblings': [(C (KOUS das))], 'auto preterminal span': (34, 45), 'span': (34, 45), 'parent': 'SIMPX', 'label': 'MF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(LK meinen)
		(MF sie die)
		(LK wissen)
		(MF das bei der bahn)
		(SIMPX wenn ich da)
		(SIMPX oder ich gehe ins reiseburo und da kann ich ja auch bahntickets kaufen)
		(SIMPX und dann frage ich da gleich wegen der hotelbuchung)
		(SIMPX
			(C das)
			(MF
				(MF die mir da)
				(C das)
				(MF
					(MVC
						(MF die da)
						(VC anrufen)
						[01;31m(NF[00m
							(ADVX
								(ADV vielleicht))[01;31m)[00m)
					(KON und)
					(NX zwei zimmer)))
			(VC reservieren)
			(NF fur eine termine))))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['MF', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'ADV', 'VVFIN', 'ADV'), 'right siblings': [], 'parent': 'MVC', 'auto preterminal span': (38, 42), 'span': (41, 42), 'left siblings': ['MF', 'VC'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP meinen sie die wissen das bei der bahn wenn ich da oder ich gehe ins reiseburo und da kann ich ja auch bahntickets kaufen und dann frage ich da gleich wegen der hotelbuchung das die mir da das die da anrufen vielleicht und zwei zimmer reservieren fur eine termine)

Sentence 653:
2 Initial errors
0 on fringe, 1 iterations
2 Error:NP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX sollen wir so verbleiben)
		(SIMPX
			(VF da)
			(LK rufe)
			(MF
				(NX ich)
				(NX sie)
				[01;31m(ADVX[00m
					(NX ein paar tage)
					[01;36m(ADVX[00m
						(ADV vorher)[01;36m)[00m[01;31m)[00m
				(ADVX noch)
				(ADVX mal))
			(VC an))
		(SIMPX ansonsten sehen wir uns ja vielleicht im in der firma)))
Step:NP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'NX', 'NX', 'ADVX', 'ADVX', 'ADVX'], 'mover info': [('NX', (8, 11))], 'old_family': ['NX', 'ADV'], 'start left siblings': [], 'auto preterminals': ('PPER', 'PPER', 'ART', 'PIDAT', 'NN', 'ADV', 'ADV', 'ADV'), 'start right siblings': ['ADV'], 'end left siblings': ['NX', 'NX'], 'auto preterminal span': (6, 14), 'movers': ['NX'], 'old_parent': 'ADVX', 'end right siblings': ['ADVX', 'ADVX', 'ADVX'], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP sollen wir so verbleiben da rufe ich sie ein paar tage vorher noch mal an ansonsten sehen wir uns ja vielleicht im in der firma)

Sentence 654:
13 Initial errors
0 on fringe, 9 iterations
3 Error:Co-ordination
2 Error:Single Word Phrase
2 Error:UNSET move
1 Error:UNSET add
1 Error:UNSET add
1 Error:Unary
1 Error:Unary
1 Error:UNSET add
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX das heist wir konnten jede stunde fahren)
		(SIMPX ich weis gar nicht ob wir da unbedingt reservieren sollen)
		(SIMPX [01;33m(SIMPX[00m
			(VF das)
			(LK konnen)
			[01;31m(MF[00m [01;33m(MF[00m
				(NX wir)
				(NX uns)
				(ADVX dann)
				[01;31m(PX[00m
					(ADVX ganz)
					(APPR nach)
					[01;31m(NX[00m
						(NX lust) [01;33mMF) SIMPX)[00m
						[01;36m(NX[00m
							[01;36m(NF[00m
								(KON und)
								(NX laune)[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m)
		(SIMPX vielleicht haben wir noch lust irgendwie vormittags zu bummeln)
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK konnen)
			(MF
				(NX wir)
				[01;36m(PX[00m
					[01;31m(PX[00m
						(ADVX ganz)
						(APPR nach)
						(NX lust und laune)[01;31m)[00m
					[01;36m(VXFIN[00m [01;36m(LK[00m [01;31m(ADJX[00m
						(ADJD stundlich)[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;36m)[00m
				[01;36m(MF[00m
					(NX uns)
					(NX einen zug)[01;36m)[00m)
			(VC aussuchen)
			(NF fur die ruckfahrt))))
Step:Co-ordination
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'KON', 'NX'], 'mover info': [('KON', (25, 26)), ('NX', (26, 27))], 'old_family': ['NX', 'KON', 'NX'], 'start left siblings': ['NX'], 'auto preterminals': ('PDS', 'VMFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'APPR', 'NN', 'KON', 'NN'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (17, 27), 'movers': ['KON', 'NX'], 'old_parent': 'NX', 'end right siblings': [], 'classified_type': 'Co-ordination', 'type': 'move'}
(TOP
	(TURN
		(SIMPX das heist wir konnten jede stunde fahren)
		(SIMPX ich weis gar nicht ob wir da unbedingt reservieren sollen)
		(SIMPX
			[01;36m(SIMPX[00m
				(VF das)
				(LK konnen)
				(MF
					(NX wir)
					(NX uns)
					(ADVX dann)
					[01;31m(PX[00m
						(ADVX ganz)
						(APPR nach)
						(NX lust)[01;31m)[00m)[01;36m)[00m
			[01;36m(NX[00m
				[01;36m(NF[00m
					(KON und)
					(NX laune)[01;36m)[00m[01;36m)[00m)
		(SIMPX vielleicht haben wir noch lust irgendwie vormittags zu bummeln)
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK konnen)
			(MF
				(NX wir)
				[01;36m(PX[00m
					[01;31m(PX[00m
						(ADVX ganz)
						(APPR nach)
						(NX lust und laune)[01;31m)[00m
					[01;36m(VXFIN[00m [01;36m(LK[00m [01;31m(ADJX[00m
						(ADJD stundlich)[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;36m)[00m
				[01;36m(MF[00m
					(NX uns)
					(NX einen zug)[01;36m)[00m)
			(VC aussuchen)
			(NF fur die ruckfahrt))))
Step:Single Word Phrase
{'family': ['NX', 'PX', 'LK', 'NX', 'NX'], 'auto preterminal span': (45, 46), 'span': (45, 46), 'subtrees': ['ADJD'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('ADJD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'LK')}
(TOP
	(TURN
		(SIMPX das heist wir konnten jede stunde fahren)
		(SIMPX ich weis gar nicht ob wir da unbedingt reservieren sollen)
		(SIMPX
			[01;36m(SIMPX[00m
				(VF das)
				(LK konnen)
				(MF
					(NX wir)
					(NX uns)
					(ADVX dann)
					[01;31m(PX[00m
						(ADVX ganz)
						(APPR nach)
						(NX lust)[01;31m)[00m)[01;36m)[00m
			[01;36m(NX[00m
				[01;36m(NF[00m
					(KON und)
					(NX laune)[01;36m)[00m[01;36m)[00m)
		(SIMPX vielleicht haben wir noch lust irgendwie vormittags zu bummeln)
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK konnen)
			(MF
				(NX wir)
				[01;36m(PX[00m
					[01;31m(PX[00m
						(ADVX ganz)
						(APPR nach)
						(NX lust und laune)[01;31m)[00m
					[01;36m(VXFIN[00m
						(LK
							(ADJD stundlich))[01;36m)[00m[01;36m)[00m
				[01;36m(MF[00m
					(NX uns)
					(NX einen zug)[01;36m)[00m)
			(VC aussuchen)
			(NF fur die ruckfahrt))))
Step:UNSET move
{'new_parent': 'PX', 'new_family': ['ADVX', 'APPR', 'NX', 'LK'], 'mover info': [('LK', (45, 46))], 'old_family': ['NX', 'PX', 'LK', 'NX', 'NX'], 'start left siblings': ['NX', 'PX'], 'auto preterminals': ('PPER', 'ADV', 'APPR', 'NN', 'KON', 'NN', 'ADJD', 'PRF', 'ART', 'NN'), 'start right siblings': ['NX', 'NX'], 'end left siblings': ['ADVX', 'APPR', 'NX'], 'auto preterminal span': (39, 49), 'movers': ['LK'], 'old_parent': 'MF', 'POS confusion': ('ADJD', 'ADJD'), 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SIMPX das heist wir konnten jede stunde fahren)
		(SIMPX ich weis gar nicht ob wir da unbedingt reservieren sollen)
		(SIMPX
			[01;36m(SIMPX[00m
				(VF das)
				(LK konnen)
				(MF
					(NX wir)
					(NX uns)
					(ADVX dann)
					[01;31m(PX[00m
						(ADVX ganz)
						(APPR nach)
						(NX lust)[01;31m)[00m)[01;36m)[00m
			[01;36m(NX[00m
				[01;36m(NF[00m
					(KON und)
					(NX laune)[01;36m)[00m[01;36m)[00m)
		(SIMPX vielleicht haben wir noch lust irgendwie vormittags zu bummeln)
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK konnen)
			(MF
				(NX wir)
				(PX
					(ADVX ganz)
					(APPR nach)
					(NX lust und laune)
					[01;36m(VXFIN[00m
						(LK
							(ADJD stundlich))[01;36m)[00m)
				[01;36m(MF[00m
					(NX uns)
					(NX einen zug)[01;36m)[00m)
			(VC aussuchen)
			(NF fur die ruckfahrt))))
Step:UNSET add
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['SIMPX', 'KON', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VMFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'APPR', 'NN'), 'right siblings': [(KON und), (NX (NN laune))], 'left siblings': [], 'auto preterminal span': (17, 25), 'span': (17, 25), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SIMPX das heist wir konnten jede stunde fahren)
		(SIMPX ich weis gar nicht ob wir da unbedingt reservieren sollen)
		(SIMPX
			(SIMPX
				(VF das)
				(LK konnen)
				(MF
					(NX wir)
					(NX uns)
					(ADVX dann)
					[01;31m(PX[00m
						(ADVX ganz)
						(APPR nach)
						(NX lust)[01;31m)[00m))
			[01;36m(NX[00m
				[01;36m(NF[00m
					(KON und)
					(NX laune)[01;36m)[00m[01;36m)[00m)
		(SIMPX vielleicht haben wir noch lust irgendwie vormittags zu bummeln)
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK konnen)
			(MF
				(NX wir)
				(PX
					(ADVX ganz)
					(APPR nach)
					(NX lust und laune)
					[01;36m(VXFIN[00m
						(LK
							(ADJD stundlich))[01;36m)[00m)
				[01;36m(MF[00m
					(NX uns)
					(NX einen zug)[01;36m)[00m)
			(VC aussuchen)
			(NF fur die ruckfahrt))))
Step:UNSET add
{'subtrees': ['KON', 'NX'], 'family': ['SIMPX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'NN'), 'right siblings': [], 'left siblings': [(SIMPX (VF (NX (PDS das))) (LK (VXFIN (VMFIN konnen))) (MF (NX (PPER wir)) (NX (PRF uns)) (ADVX (ADV dann)) (PX (ADVX (ADV ganz)) (APPR nach) (NX (NN lust)))))], 'auto preterminal span': (25, 27), 'span': (25, 27), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SIMPX das heist wir konnten jede stunde fahren)
		(SIMPX ich weis gar nicht ob wir da unbedingt reservieren sollen)
		(SIMPX
			(SIMPX
				(VF das)
				(LK konnen)
				(MF
					(NX wir)
					(NX uns)
					(ADVX dann)
					[01;31m(PX[00m
						(ADVX ganz)
						(APPR nach)
						(NX lust)[01;31m)[00m))
			[01;36m(NX[00m
				(NF
					(KON und)
					(NX laune))[01;36m)[00m)
		(SIMPX vielleicht haben wir noch lust irgendwie vormittags zu bummeln)
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK konnen)
			(MF
				(NX wir)
				(PX
					(ADVX ganz)
					(APPR nach)
					(NX lust und laune)
					[01;36m(VXFIN[00m
						(LK
							(ADJD stundlich))[01;36m)[00m)
				[01;36m(MF[00m
					(NX uns)
					(NX einen zug)[01;36m)[00m)
			(VC aussuchen)
			(NF fur die ruckfahrt))))
Step:Unary
{'subtrees': ['NF'], 'family': ['SIMPX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'NN'), 'right siblings': [], 'left siblings': [(SIMPX (VF (NX (PDS das))) (LK (VXFIN (VMFIN konnen))) (MF (NX (PPER wir)) (NX (PRF uns)) (ADVX (ADV dann)) (PX (ADVX (ADV ganz)) (APPR nach) (NX (NN lust)))))], 'auto preterminal span': (25, 27), 'span': (25, 27), 'parent': 'SIMPX', 'label': 'NX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SIMPX das heist wir konnten jede stunde fahren)
		(SIMPX ich weis gar nicht ob wir da unbedingt reservieren sollen)
		(SIMPX
			(SIMPX
				(VF das)
				(LK konnen)
				(MF
					(NX wir)
					(NX uns)
					(ADVX dann)
					[01;31m(PX[00m
						(ADVX ganz)
						(APPR nach)
						(NX lust)[01;31m)[00m))
			(NX und laune))
		(SIMPX vielleicht haben wir noch lust irgendwie vormittags zu bummeln)
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK konnen)
			(MF
				(NX wir)
				(PX
					(ADVX ganz)
					(APPR nach)
					(NX lust und laune)
					[01;36m(VXFIN[00m
						(LK
							(ADJD stundlich))[01;36m)[00m)
				[01;36m(MF[00m
					(NX uns)
					(NX einen zug)[01;36m)[00m)
			(VC aussuchen)
			(NF fur die ruckfahrt))))
Step:Unary
{'subtrees': ['LK'], 'family': ['ADVX', 'APPR', 'NX', 'VXFIN'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJD',), 'right siblings': [], 'left siblings': [(ADVX (ADV ganz)), (APPR nach), (NX (NX (NN lust)) (KON und) (NX (NN laune)))], 'auto preterminal span': (45, 46), 'span': (45, 46), 'parent': 'PX', 'label': 'VXFIN', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SIMPX das heist wir konnten jede stunde fahren)
		(SIMPX ich weis gar nicht ob wir da unbedingt reservieren sollen)
		(SIMPX
			(SIMPX
				(VF das)
				(LK konnen)
				(MF
					(NX wir)
					(NX uns)
					(ADVX dann)
					[01;31m(PX[00m
						(ADVX ganz)
						(APPR nach)
						(NX lust)[01;31m)[00m))
			(NX und laune))
		(SIMPX vielleicht haben wir noch lust irgendwie vormittags zu bummeln)
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK konnen)
			(MF
				(NX wir)
				(PX ganz nach lust und laune stundlich)
				[01;36m(MF[00m
					(NX uns)
					(NX einen zug)[01;36m)[00m)
			(VC aussuchen)
			(NF fur die ruckfahrt))))
Step:UNSET add
{'subtrees': ['NX', 'NX'], 'family': ['NX', 'PX', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PRF', 'ART', 'NN'), 'right siblings': [], 'left siblings': [(NX (PPER wir)), (PX (ADVX (ADV ganz)) (APPR nach) (NX (NX (NN lust)) (KON und) (NX (NN laune))) (VXFIN (LK (ADJD stundlich))))], 'auto preterminal span': (46, 49), 'span': (46, 49), 'parent': 'MF', 'label': 'MF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SIMPX das heist wir konnten jede stunde fahren)
		(SIMPX ich weis gar nicht ob wir da unbedingt reservieren sollen)
		(SIMPX
			(SIMPX
				(VF das)
				(LK konnen)
				(MF
					(NX wir)
					(NX uns)
					(ADVX dann)
					[01;31m(PX[00m
						(ADVX ganz)
						(APPR nach)
						(NX lust)[01;31m)[00m))
			(NX und laune))
		(SIMPX vielleicht haben wir noch lust irgendwie vormittags zu bummeln)
		(SIMPX und dann konnen wir ganz nach lust und laune stundlich uns einen zug aussuchen fur die ruckfahrt)))
Step:UNSET remove
{'subtrees': ['ADVX', 'APPR', 'NX'], 'family': ['NX', 'NX', 'ADVX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'PRF', 'ADV', 'ADV', 'APPR', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (19, 25), 'span': (22, 25), 'left siblings': ['NX', 'NX', 'ADVX'], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP das heist wir konnten jede stunde fahren ich weis gar nicht ob wir da unbedingt reservieren sollen das konnen wir uns dann ganz nach lust und laune vielleicht haben wir noch lust irgendwie vormittags zu bummeln und dann konnen wir ganz nach lust und laune stundlich uns einen zug aussuchen fur die ruckfahrt)

Sentence 655:
0 Initial errors
0 on fringe, 0 iterations

Sentence 656:
16 Initial errors
0 on fringe, 10 iterations
3 Error:UNSET move
3 Error:NP Attachment
2 Error:Single Word Phrase
2 Error:Single Word Phrase
1 Error:Single Word Phrase
1 Error:Unary
1 Error:UNSET remove
1 Error:Single Word Phrase
1 Error:Unary
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		[01;31m(DM[00m
			(ADVX
				(ADV so))[01;31m)[00m
		(DM guten tag)
		[01;31m(SIMPX[00m
			(VF hier)
			(LK ist)
			[01;31m(MF[00m [01;33m(NX (MF[00m
				(NX
					(ART das)
					[01;36m(ADVX[00m [01;31m(ADJX[00m [01;33m(ADJX[00m
						(ADJA stadtische)[01;31m)[00m[01;36m)[00m
					[01;31m(NX[00m
						[01;36m(ADJX[00m [01;31m(NX[00m
							(NN reiseburo)[01;31m)[00m [01;33mADJX)[00m[01;36m)[00m
						[01;31m(NX[00m
							(NE bonn)[01;31m)[00m[01;31m)[00m)[01;31m)[00m[01;31m)[00m
		[01;31m(DM[00m
			(NX
				[01;36m(ADJX[00m [01;31m(NX[00m
					(NE bergmann)[01;31m)[00m[01;36m)[00m
				[01;31m(NX[00m
					(NN apparat)[01;31m)[00m)[01;31m)[00m [01;33mMF) NX)[00m
		(SIMPX wie kann ich ihnen helfen)))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['NX', 'DM'], 'mover info': [('DM', (10, 12))], 'old_family': ['DM', 'DM', 'DM', 'SIMPX', 'DM', 'SIMPX'], 'start left siblings': ['DM', 'DM', 'DM', 'SIMPX'], 'auto preterminals': ('PTKANT', 'ADV', 'ADJA', 'NN', 'ADV', 'VAFIN', 'ART', 'ADJA', 'NN', 'NE', 'NE', 'NN', 'PWAV', 'VMFIN', 'PPER', 'PPER', 'VVINF'), 'start right siblings': ['SIMPX'], 'end left siblings': ['NX'], 'auto preterminal span': (0, 17), 'adding node already present': False, 'movers': ['DM'], 'old_parent': 'TURN', 'added and moved': True, 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'ADJX'}
(TOP
	(TURN
		(DM ja)
		[01;31m(DM[00m
			(ADVX
				(ADV so))[01;31m)[00m
		(DM guten tag)
		[01;31m(SIMPX[00m
			(VF hier)
			(LK ist)
			(NX
				(MF
					(NX
						(ART das)
						[01;36m(ADVX[00m [01;31m(ADJX[00m [01;33m(ADJX[00m
							(ADJA stadtische)[01;31m)[00m[01;36m)[00m
						[01;31m(NX[00m
							[01;36m(ADJX[00m [01;31m(NX[00m
								(NN reiseburo)[01;31m)[00m [01;33mADJX)[00m[01;36m)[00m
							[01;31m(NX[00m
								(NE bonn)[01;31m)[00m[01;31m)[00m)
					[01;31m(DM[00m
						(NX
							[01;36m(ADJX[00m [01;31m(NX[00m
								(NE bergmann)[01;31m)[00m[01;36m)[00m
							[01;31m(NX[00m
								(NN apparat)[01;31m)[00m)[01;31m)[00m))[01;31m)[00m
		(SIMPX wie kann ich ihnen helfen)))
Step:NP Attachment
{'new_parent': 'ADJX', 'new_family': ['ADJA', 'NX'], 'mover info': [('NX', (8, 9))], 'old_family': ['NX', 'NX'], 'start left siblings': [], 'auto preterminals': ('ART', 'ADJA', 'NN', 'NE'), 'start right siblings': ['NX'], 'end left siblings': ['ADJA'], 'auto preterminal span': (6, 10), 'movers': ['NX'], 'old_parent': 'NX', 'POS confusion': ('NN', 'NN'), 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		[01;31m(DM[00m
			(ADVX
				(ADV so))[01;31m)[00m
		(DM guten tag)
		[01;31m(SIMPX[00m
			(VF hier)
			(LK ist)
			(NX
				(MF
					(NX
						(ART das)
						(ADJX
							[01;36m(ADVX[00m
								(ADJA stadtische)[01;36m)[00m
							[01;36m(ADJX[00m [01;31m(NX[00m
								(NN reiseburo)[01;31m)[00m[01;36m)[00m)
						[01;31m(NX[00m
							(NE bonn)[01;31m)[00m)
					[01;31m(DM[00m
						(NX
							[01;36m(ADJX[00m [01;31m(NX[00m
								(NE bergmann)[01;31m)[00m[01;36m)[00m
							[01;31m(NX[00m
								(NN apparat)[01;31m)[00m)[01;31m)[00m))[01;31m)[00m
		(SIMPX wie kann ich ihnen helfen)))
Step:Single Word Phrase
{'family': ['ADJA', 'ADJX'], 'auto preterminal span': (8, 9), 'span': (8, 9), 'subtrees': ['NN'], 'parent': 'ADJX', 'over_word': True, 'auto preterminals': ('NN',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('NX', 'ADJX')}
(TOP
	(TURN
		(DM ja)
		[01;31m(DM[00m
			(ADVX
				(ADV so))[01;31m)[00m
		(DM guten tag)
		[01;31m(SIMPX[00m
			(VF hier)
			(LK ist)
			(NX
				(MF
					(NX
						(ART das)
						(ADJX
							[01;36m(ADVX[00m
								(ADJA stadtische)[01;36m)[00m
							(ADJX reiseburo))
						[01;31m(NX[00m
							(NE bonn)[01;31m)[00m)
					[01;31m(DM[00m
						(NX
							[01;36m(ADJX[00m [01;31m(NX[00m
								(NE bergmann)[01;31m)[00m[01;36m)[00m
							[01;31m(NX[00m
								(NN apparat)[01;31m)[00m)[01;31m)[00m))[01;31m)[00m
		(SIMPX wie kann ich ihnen helfen)))
Step:Single Word Phrase
{'family': ['ADJX', 'NX'], 'auto preterminal span': (10, 11), 'span': (10, 11), 'subtrees': ['NE'], 'parent': 'NX', 'over_word': True, 'auto preterminals': ('NE',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('NX', 'ADJX')}
(TOP
	(TURN
		(DM ja)
		[01;31m(DM[00m
			(ADVX
				(ADV so))[01;31m)[00m
		(DM guten tag)
		[01;31m(SIMPX[00m
			(VF hier)
			(LK ist)
			(NX
				(MF
					(NX
						(ART das)
						(ADJX
							[01;36m(ADVX[00m
								(ADJA stadtische)[01;36m)[00m
							(ADJX reiseburo))
						[01;31m(NX[00m
							(NE bonn)[01;31m)[00m)
					[01;31m(DM[00m
						(NX
							(ADJX bergmann)
							[01;31m(NX[00m
								(NN apparat)[01;31m)[00m)[01;31m)[00m))[01;31m)[00m
		(SIMPX wie kann ich ihnen helfen)))
Step:Single Word Phrase
{'subtrees': ['ADJA'], 'family': ['ADVX', 'ADJX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADJA',), 'right siblings': [(ADJX (NN reiseburo))], 'left siblings': [], 'auto preterminal span': (7, 8), 'span': (7, 8), 'parent': 'ADJX', 'label': 'ADVX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		[01;31m(DM[00m
			(ADVX
				(ADV so))[01;31m)[00m
		(DM guten tag)
		[01;31m(SIMPX[00m
			(VF hier)
			(LK ist)
			(NX
				(MF
					(NX
						(ART das)
						(ADJX stadtische reiseburo)
						[01;31m(NX[00m
							(NE bonn)[01;31m)[00m)
					[01;31m(DM[00m
						(NX
							(ADJX bergmann)
							[01;31m(NX[00m
								(NN apparat)[01;31m)[00m)[01;31m)[00m))[01;31m)[00m
		(SIMPX wie kann ich ihnen helfen)))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['DM', 'DM', 'DM', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADV', 'ADJA', 'NN', 'ADV', 'VAFIN', 'ART', 'ADJA', 'NN', 'NE', 'NE', 'NN', 'PWAV', 'VMFIN', 'PPER', 'PPER', 'VVINF'), 'right siblings': ['DM', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 17), 'span': (1, 2), 'left siblings': ['DM'], 'label': 'DM', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(ADVX so)
		(DM guten tag)
		[01;31m(SIMPX[00m
			(VF hier)
			(LK ist)
			(NX
				(MF
					(NX
						(ART das)
						(ADJX stadtische reiseburo)
						[01;31m(NX[00m
							(NE bonn)[01;31m)[00m)
					[01;31m(DM[00m
						(NX
							(ADJX bergmann)
							[01;31m(NX[00m
								(NN apparat)[01;31m)[00m)[01;31m)[00m))[01;31m)[00m
		(SIMPX wie kann ich ihnen helfen)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'NX'], 'family': ['DM', 'ADVX', 'DM', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADV', 'ADJA', 'NN', 'ADV', 'VAFIN', 'ART', 'ADJA', 'NN', 'NE', 'NE', 'NN', 'PWAV', 'VMFIN', 'PPER', 'PPER', 'VVINF'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 17), 'span': (4, 12), 'left siblings': ['DM', 'ADVX', 'DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(ADVX so)
		(DM guten tag)
		(VF hier)
		(LK ist)
		(NX
			(MF
				(NX
					(ART das)
					(ADJX stadtische reiseburo)
					[01;31m(NX[00m
						(NE bonn)[01;31m)[00m)
				[01;31m(DM[00m
					(NX
						(ADJX bergmann)
						[01;31m(NX[00m
							(NN apparat)[01;31m)[00m)[01;31m)[00m))
		(SIMPX wie kann ich ihnen helfen)))
Step:Single Word Phrase
{'subtrees': ['NE'], 'family': ['ART', 'ADJX', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ART', 'ADJA', 'NN', 'NE'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (6, 10), 'span': (9, 10), 'left siblings': ['ART', 'ADJX'], 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(ADVX so)
		(DM guten tag)
		(VF hier)
		(LK ist)
		(NX
			(MF
				(NX das stadtische reiseburo bonn)
				[01;31m(DM[00m
					(NX
						(ADJX bergmann)
						[01;31m(NX[00m
							(NN apparat)[01;31m)[00m)[01;31m)[00m))
		(SIMPX wie kann ich ihnen helfen)))
Step:Unary
{'subtrees': ['NX'], 'family': ['NX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'ADJA', 'NN', 'NE', 'NE', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (6, 12), 'span': (10, 12), 'left siblings': ['NX'], 'label': 'DM', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(ADVX so)
		(DM guten tag)
		(VF hier)
		(LK ist)
		(NX
			(MF
				(NX das stadtische reiseburo bonn)
				(NX
					(ADJX bergmann)
					[01;31m(NX[00m
						(NN apparat)[01;31m)[00m)))
		(SIMPX wie kann ich ihnen helfen)))
Step:Single Word Phrase
{'subtrees': ['NN'], 'family': ['ADJX', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('NE', 'NN'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (10, 12), 'span': (11, 12), 'left siblings': ['ADJX'], 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP ja so guten tag hier ist das stadtische reiseburo bonn bergmann apparat wie kann ich ihnen helfen)

Sentence 657:
10 Initial errors
0 on fringe, 6 iterations
2 Error:Different label
2 Error:Modifier Attachment
2 Error:Modifier Attachment
2 Error:Modifier Attachment
1 Error:Clause Attachment
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM selbstverstandlich)
		(SIMPX
			(VF ich)
			(LK mus)
			[01;36m(PX[00m
				(MF
					(ADVX nur)
					[01;31m(PX[00m
						(PROP dazu)[01;31m)[00m)[01;36m)[00m
			(VC sagen)
			(NF
				(SIMPX
					(C das)
					(MF
						(NX das)
						[01;36m(PX[00m
							(PX von kolnbonn)
							(SIMPX wenn sie von kolnbonn fliegen wollen)[01;36m)[00m
						[01;31m(ADVX[00m
							[01;31m(ADVX[00m
								(ADVX nur)
								[01;36m(ADVX[00m
									(ADV [01;33m(ADVX[00m einmal)[01;36m)[00m[01;31m)[00m
							(PX am tag)[01;31m)[00m [01;33mADVX)[00m
						(ADJX moglich))
					(VC ist))))
		(DM und zwar)
		[01;31m(PX[00m
			(PX um sieben uhr zehn)
			(KON und)
			[01;36m(MF[00m [01;31m(PX[00m
				(PX am wochenende)
				(ADVX leider)
				(ADVX gar nicht)[01;31m)[00m[01;36m)[00m[01;31m)[00m))
Step:Different label
{'family': ['PX', 'KON', 'MF'], 'auto preterminal span': (30, 35), 'span': (30, 35), 'subtrees': ['PX', 'ADVX', 'ADVX'], 'parent': 'PX', 'over_word': False, 'auto preterminals': ('APPRART', 'NN', 'ADV', 'ADV', 'PTKNEG'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('PX', 'MF')}
(TOP
	(TURN
		(DM ja)
		(DM selbstverstandlich)
		(SIMPX
			(VF ich)
			(LK mus)
			[01;36m(PX[00m
				(MF
					(ADVX nur)
					[01;31m(PX[00m
						(PROP dazu)[01;31m)[00m)[01;36m)[00m
			(VC sagen)
			(NF
				(SIMPX
					(C das)
					(MF
						(NX das)
						[01;36m(PX[00m
							(PX von kolnbonn)
							(SIMPX wenn sie von kolnbonn fliegen wollen)[01;36m)[00m
						[01;31m(ADVX[00m
							[01;31m(ADVX[00m
								(ADVX nur)
								[01;36m(ADVX[00m
									(ADV [01;33m(ADVX[00m einmal)[01;36m)[00m[01;31m)[00m
							(PX am tag)[01;31m)[00m [01;33mADVX)[00m
						(ADJX moglich))
					(VC ist))))
		(DM und zwar)
		[01;31m(PX[00m
			(PX um sieben uhr zehn)
			(KON und)
			(MF am wochenende leider gar nicht)[01;31m)[00m))
Step:Modifier Attachment
{'new_parent': 'PX', 'new_family': ['ADVX', 'PROP'], 'mover info': [('ADVX', (4, 5))], 'old_family': ['ADVX', 'PX'], 'start left siblings': [], 'auto preterminals': ('ADV', 'PROP'), 'start right siblings': ['PX'], 'end left siblings': [], 'auto preterminal span': (4, 6), 'movers': ['ADVX'], 'old_parent': 'MF', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['PROP'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(DM selbstverstandlich)
		(SIMPX
			(VF ich)
			(LK mus)
			(MF nur dazu)
			(VC sagen)
			(NF
				(SIMPX
					(C das)
					(MF
						(NX das)
						[01;36m(PX[00m
							(PX von kolnbonn)
							(SIMPX wenn sie von kolnbonn fliegen wollen)[01;36m)[00m
						[01;31m(ADVX[00m
							[01;31m(ADVX[00m
								(ADVX nur)
								[01;36m(ADVX[00m
									(ADV [01;33m(ADVX[00m einmal)[01;36m)[00m[01;31m)[00m
							(PX am tag)[01;31m)[00m [01;33mADVX)[00m
						(ADJX moglich))
					(VC ist))))
		(DM und zwar)
		[01;31m(PX[00m
			(PX um sieben uhr zehn)
			(KON und)
			(MF am wochenende leider gar nicht)[01;31m)[00m))
Step:Modifier Attachment
{'new_parent': 'ADVX', 'new_family': ['ADVX', 'ADVX', 'PX'], 'mover info': [('ADVX', (17, 18))], 'old_family': ['ADVX', 'ADV'], 'start left siblings': [], 'auto preterminals': ('ADV', 'ADV', 'APPRART', 'NN'), 'start right siblings': ['ADV'], 'end left siblings': [], 'auto preterminal span': (17, 21), 'movers': ['ADVX'], 'old_parent': 'ADVX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['ADVX', 'PX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(DM selbstverstandlich)
		(SIMPX
			(VF ich)
			(LK mus)
			(MF nur dazu)
			(VC sagen)
			(NF
				(SIMPX
					(C das)
					(MF
						(NX das)
						[01;36m(PX[00m
							(PX von kolnbonn)
							(SIMPX wenn sie von kolnbonn fliegen wollen)[01;36m)[00m
						[01;31m(ADVX[00m
							(ADVX nur)
							[01;36m(ADVX[00m
								(ADVX einmal)
								(PX am tag)[01;36m)[00m[01;31m)[00m
						(ADJX moglich))
					(VC ist))))
		(DM und zwar)
		[01;31m(PX[00m
			(PX um sieben uhr zehn)
			(KON und)
			(MF am wochenende leider gar nicht)[01;31m)[00m))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'PX', 'SIMPX', 'ADVX', 'ADVX', 'ADJX'], 'mover info': [('ADVX', (17, 18))], 'old_family': ['ADVX', 'ADVX', 'PX'], 'start left siblings': [], 'auto preterminals': ('PDS', 'APPR', 'NE', 'KOUS', 'PPER', 'APPR', 'NE', 'VVINF', 'VMFIN', 'ADV', 'ADV', 'APPRART', 'NN', 'ADJD'), 'start right siblings': ['ADVX', 'PX'], 'end left siblings': ['NX', 'PX', 'SIMPX'], 'auto preterminal span': (8, 22), 'movers': ['ADVX'], 'old_parent': 'ADVX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['ADVX', 'ADJX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(DM selbstverstandlich)
		(SIMPX
			(VF ich)
			(LK mus)
			(MF nur dazu)
			(VC sagen)
			(NF
				(SIMPX
					(C das)
					(MF
						(NX das)
						[01;36m(PX[00m
							(PX von kolnbonn)
							(SIMPX wenn sie von kolnbonn fliegen wollen)[01;36m)[00m
						(ADVX nur)
						(ADVX einmal am tag)
						(ADJX moglich))
					(VC ist))))
		(DM und zwar)
		[01;31m(PX[00m
			(PX um sieben uhr zehn)
			(KON und)
			(MF am wochenende leider gar nicht)[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['PX', 'SIMPX'], 'family': ['NX', 'PX', 'ADVX', 'ADVX', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'NE', 'KOUS', 'PPER', 'APPR', 'NE', 'VVINF', 'VMFIN'), 'right siblings': [(ADVX (ADV nur)), (ADVX (ADVX (ADV einmal)) (PX (APPRART am) (NX (NN tag)))), (ADJX (ADJD moglich))], 'left siblings': [(NX (PDS das))], 'auto preterminal span': (9, 17), 'span': (9, 17), 'parent': 'MF', 'label': 'PX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM selbstverstandlich)
		(SIMPX ich mus nur dazu sagen das das von kolnbonn wenn sie von kolnbonn fliegen wollen nur einmal am tag moglich ist)
		(DM und zwar)
		[01;31m(PX[00m
			(PX um sieben uhr zehn)
			(KON und)
			(MF am wochenende leider gar nicht)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['PX', 'KON', 'MF'], 'family': ['DM', 'DM', 'SIMPX', 'DM', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'PPER', 'VMFIN', 'ADV', 'PROP', 'VVINF', 'KOUS', 'PDS', 'APPR', 'NE', 'KOUS', 'PPER', 'APPR', 'NE', 'VVINF', 'VMFIN', 'ADV', 'ADV', 'APPRART', 'NN', 'ADJD', 'VAFIN', 'KON', 'ADV', 'APPR', 'CARD', 'NN', 'CARD', 'KON', 'APPRART', 'NN', 'ADV', 'ADV', 'PTKNEG'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 35), 'span': (25, 35), 'left siblings': ['DM', 'DM', 'SIMPX', 'DM'], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ja selbstverstandlich ich mus nur dazu sagen das das von kolnbonn wenn sie von kolnbonn fliegen wollen nur einmal am tag moglich ist und zwar um sieben uhr zehn und am wochenende leider gar nicht)

Sentence 658:
0 Initial errors
0 on fringe, 0 iterations

Sentence 659:
0 Initial errors
0 on fringe, 0 iterations

Sentence 660:
2 Initial errors
0 on fringe, 2 iterations
1 Error:Single Word Phrase
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(NX[00m
			(NX
				(ADJX siebten)
				[01;36m(NX[00m
					(NN siebten)[01;36m)[00m)
			(APPR bis)
			(PX zum zehnten juli)[01;31m)[00m
		(DM ja)
		(SIMPX das kann ich machen)))
Step:Single Word Phrase
{'subtrees': ['NN'], 'family': ['ADJX', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('NN',), 'right siblings': [], 'left siblings': [(ADJX (ADJA siebten))], 'auto preterminal span': (1, 2), 'span': (1, 2), 'parent': 'NX', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		[01;31m(NX[00m
			(NX siebten siebten)
			(APPR bis)
			(PX zum zehnten juli)[01;31m)[00m
		(DM ja)
		(SIMPX das kann ich machen)))
Step:PP Attachment
{'subtrees': ['NX', 'APPR', 'PX'], 'family': ['NX', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJA', 'NN', 'APPR', 'APPRART', 'ADJA', 'NN', 'PTKANT', 'PDS', 'VMFIN', 'PPER', 'VVINF'), 'right siblings': ['DM', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 11), 'span': (0, 6), 'left siblings': [], 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP siebten siebten bis zum zehnten juli ja das kann ich machen)

Sentence 661:
9 Initial errors
0 on fringe, 7 iterations
3 Error:UNSET move
1 Error:Single Word Phrase
1 Error:Unary
1 Error:Single Word Phrase
1 Error:Clause Attachment
1 Error:Clause Attachment
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM tja)
		[01;31m(P[00m
			(SIMPX
				(VF da)
				(LK bin)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX ich)
					(ADVX gerade)
					(ADVX ja)
					(ADVX nicht)
					[01;31m(ADJX[00m
						(ADJX so gut) [01;33mMF)[00m
						[01;36m(VXINF[00m
							[01;36m(VC[00m
								(ADJD informiert)[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m)
			[01;36m(KOORD[00m
				(KON [01;33m(SIMPX[00m aber)[01;36m)[00m
			[01;31m(SIMPX[00m
				(VF da)
				(LK wird)
				(MF es einen flug)
				(VC geben)[01;31m)[00m[01;31m)[00m
		(SIMPX und ich denke auch das der vielleicht abends ist) [01;33mSIMPX)[00m
		(SIMPX werde ich noch nachgucken)))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'ADJD'], 'mover info': [('ADJD', (9, 10))], 'old_family': ['ADJX', 'ADJD'], 'start left siblings': ['ADJX'], 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'ADV', 'ADJD', 'ADJD'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (1, 10), 'movers': ['ADJD'], 'old_parent': 'ADJX', 'POS confusion': ('ADJD', 'ADJD'), 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM tja)
		[01;31m(P[00m
			(SIMPX
				(VF da)
				(LK bin)
				(MF ich gerade ja nicht so gut)
				[01;36m(VXINF[00m
					[01;36m(VC[00m
						(ADJD informiert)[01;36m)[00m[01;36m)[00m)
			[01;36m(KOORD[00m
				(KON [01;33m(SIMPX[00m aber)[01;36m)[00m
			[01;31m(SIMPX[00m
				(VF da)
				(LK wird)
				(MF es einen flug)
				(VC geben)[01;31m)[00m[01;31m)[00m
		(SIMPX und ich denke auch das der vielleicht abends ist) [01;33mSIMPX)[00m
		(SIMPX werde ich noch nachgucken)))
Step:Single Word Phrase
{'subtrees': ['ADJD'], 'family': ['VF', 'LK', 'MF', 'VC'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADJD',), 'right siblings': [], 'left siblings': [(VF (ADVX (ADV da))), (LK (VXFIN (VAFIN bin))), (MF (NX (PPER ich)) (ADVX (ADV gerade)) (ADVX (ADV ja)) (ADVX (PTKNEG nicht)) (ADJX (ADVX (ADV so)) (ADJD gut)))], 'auto preterminal span': (9, 10), 'span': (9, 10), 'parent': 'SIMPX', 'label': 'VC', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM tja)
		[01;31m(P[00m
			(SIMPX
				(VF da)
				(LK bin)
				(MF ich gerade ja nicht so gut)
				[01;36m(VXINF[00m
					(VC
						(ADJD informiert))[01;36m)[00m)
			[01;36m(KOORD[00m
				(KON [01;33m(SIMPX[00m aber)[01;36m)[00m
			[01;31m(SIMPX[00m
				(VF da)
				(LK wird)
				(MF es einen flug)
				(VC geben)[01;31m)[00m[01;31m)[00m
		(SIMPX und ich denke auch das der vielleicht abends ist) [01;33mSIMPX)[00m
		(SIMPX werde ich noch nachgucken)))
Step:Unary
{'subtrees': ['VC'], 'family': ['VF', 'LK', 'MF', 'VXINF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJD',), 'right siblings': [], 'left siblings': [(VF (ADVX (ADV da))), (LK (VXFIN (VAFIN bin))), (MF (NX (PPER ich)) (ADVX (ADV gerade)) (ADVX (ADV ja)) (ADVX (PTKNEG nicht)) (ADJX (ADVX (ADV so)) (ADJD gut)))], 'auto preterminal span': (9, 10), 'span': (9, 10), 'parent': 'SIMPX', 'label': 'VXINF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM tja)
		[01;31m(P[00m
			(SIMPX da bin ich gerade ja nicht so gut informiert)
			[01;36m(KOORD[00m
				(KON [01;33m(SIMPX[00m aber)[01;36m)[00m
			[01;31m(SIMPX[00m
				(VF da)
				(LK wird)
				(MF es einen flug)
				(VC geben)[01;31m)[00m[01;31m)[00m
		(SIMPX und ich denke auch das der vielleicht abends ist) [01;33mSIMPX)[00m
		(SIMPX werde ich noch nachgucken)))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['SIMPX', 'KOORD', 'SIMPX'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON',), 'right siblings': [(SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VAFIN wird))) (MF (NX (PPER es)) (NX (ART einen) (NN flug))) (VC (VXINF (VVINF geben))))], 'left siblings': [(SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VAFIN bin))) (MF (NX (PPER ich)) (ADVX (ADV gerade)) (ADVX (ADV ja)) (ADVX (PTKNEG nicht)) (ADJX (ADVX (ADV so)) (ADJD gut))) (VXINF (VC (ADJD informiert))))], 'auto preterminal span': (10, 11), 'span': (10, 11), 'parent': 'P', 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM tja)
		[01;31m(P[00m
			(SIMPX da bin ich gerade ja nicht so gut informiert)
			[01;33m(SIMPX[00m (KOORD aber)
			[01;31m(SIMPX[00m
				(VF da)
				(LK wird)
				(MF es einen flug)
				(VC geben)[01;31m)[00m[01;31m)[00m
		(SIMPX und ich denke auch das der vielleicht abends ist) [01;33mSIMPX)[00m
		(SIMPX werde ich noch nachgucken)))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'KOORD', 'SIMPX'], 'family': ['DM', 'P', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'VAFIN', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'ADV', 'ADJD', 'ADJD', 'KON', 'ADV', 'VAFIN', 'PPER', 'ART', 'NN', 'VVINF', 'KON', 'PPER', 'VVFIN', 'ADV', 'KOUS', 'PDS', 'ADV', 'ADV', 'VAFIN', 'VAFIN', 'PPER', 'ADV', 'VVINF'), 'right siblings': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 30), 'span': (1, 17), 'left siblings': ['DM'], 'label': 'P', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM tja)
		(SIMPX da bin ich gerade ja nicht so gut informiert)
		[01;36m(SIMPX[00m
			(KOORD aber)
			[01;31m(SIMPX[00m
				(VF da)
				(LK wird)
				(MF es einen flug)
				(VC geben)[01;31m)[00m
			(SIMPX und ich denke auch das der vielleicht abends ist)[01;36m)[00m
		(SIMPX werde ich noch nachgucken)))
Step:Clause Attachment
{'subtrees': ['KOORD', 'SIMPX', 'SIMPX'], 'family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'ADV', 'VAFIN', 'PPER', 'ART', 'NN', 'VVINF', 'KON', 'PPER', 'VVFIN', 'ADV', 'KOUS', 'PDS', 'ADV', 'ADV', 'VAFIN'), 'right siblings': [(SIMPX (LK (VXFIN (VAFIN werde))) (MF (NX (PPER ich)) (ADVX (ADV noch))) (VC (VXINF (VVINF nachgucken))))], 'left siblings': [(DM (ITJ tja)), (SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VAFIN bin))) (MF (NX (PPER ich)) (ADVX (ADV gerade)) (ADVX (ADV ja)) (ADVX (PTKNEG nicht)) (ADJX (ADVX (ADV so)) (ADJD gut))) (VXINF (VC (ADJD informiert))))], 'auto preterminal span': (10, 26), 'span': (10, 26), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM tja)
		(SIMPX da bin ich gerade ja nicht so gut informiert)
		(SIMPX
			(KOORD aber)
			[01;31m(SIMPX[00m
				(VF da)
				(LK wird)
				(MF es einen flug)
				(VC geben)[01;31m)[00m
			(SIMPX und ich denke auch das der vielleicht abends ist))
		(SIMPX werde ich noch nachgucken)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['KOORD', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'ADV', 'VAFIN', 'PPER', 'ART', 'NN', 'VVINF', 'KON', 'PPER', 'VVFIN', 'ADV', 'KOUS', 'PDS', 'ADV', 'ADV', 'VAFIN'), 'right siblings': ['SIMPX'], 'parent': 'SIMPX', 'auto preterminal span': (10, 26), 'span': (11, 17), 'left siblings': ['KOORD'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP tja da bin ich gerade ja nicht so gut informiert aber da wird es einen flug geben und ich denke auch das der vielleicht abends ist werde ich noch nachgucken)

Sentence 662:
11 Initial errors
0 on fringe, 6 iterations
4 Error:NP Attachment
2 Error:Single Word Phrase
2 Error:NP Attachment
1 Error:PP Attachment
1 Error:Unary
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX mit dem zug ist es moglich)
		(SIMPX das ist)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF stundlich)
				(LK fahrt)
				[01;31m(MF[00m [01;33m(MF (NX[00m
					(NX ein zug)
					[01;31m(PX[00m [01;33m(PX[00m
						(APPR um)
						(NX achtundfunfzig)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			[01;31m(NX[00m
				[01;31m(NX[00m
					(NX die volle stunde) [01;33mPX) NX)[00m
					(ADVX immer)[01;31m)[00m
				[01;36m(ADJX[00m [01;31m(NX[00m
					(CARD achtundfunfzig)[01;31m)[00m[01;36m)[00m[01;31m)[00m [01;33mMF)[00m[01;36m)[00m
		(SIMPX der dauert dann drei stunden und zwanzig)
		(SIMPX man mus da aber bedenken das man in dortmund umsteigen muste)))
Step:NP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'PX', 'NX'], 'mover info': [('NX', (15, 20))], 'old_family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX', 'SIMPX'], 'start left siblings': ['DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'auto preterminals': ('PTKANT', 'APPR', 'ART', 'NN', 'VAFIN', 'PPER', 'ADJD', 'PDS', 'VAFIN', 'ADJD', 'VVFIN', 'ART', 'NN', 'APPR', 'CARD', 'ART', 'ADJA', 'NN', 'ADV', 'CARD', 'PDS', 'VVFIN', 'ADV', 'CARD', 'NN', 'KON', 'CARD', 'PIS', 'VMFIN', 'ADV', 'ADV', 'VVINF', 'KOUS', 'PIS', 'APPR', 'NE', 'VVINF', 'VMFIN'), 'start right siblings': ['SIMPX', 'SIMPX'], 'end left siblings': ['NX', 'PX'], 'auto preterminal span': (0, 38), 'movers': ['NX'], 'old_parent': 'TURN', 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(SIMPX mit dem zug ist es moglich)
		(SIMPX das ist)
		(SIMPX
			(VF stundlich)
			(LK fahrt)
			(MF [01;33m(NX[00m
				(NX ein zug)
				[01;31m(PX[00m [01;33m(PX[00m
					(APPR um)
					(NX achtundfunfzig)[01;31m)[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(NX die volle stunde) [01;33mPX) NX)[00m
						(ADVX immer)[01;31m)[00m
					[01;36m(ADJX[00m [01;31m(NX[00m
						(CARD achtundfunfzig)[01;31m)[00m[01;36m)[00m[01;31m)[00m))
		(SIMPX der dauert dann drei stunden und zwanzig)
		(SIMPX man mus da aber bedenken das man in dortmund umsteigen muste)))
Step:Single Word Phrase
{'family': ['NX', 'ADJX'], 'auto preterminal span': (19, 20), 'span': (19, 20), 'subtrees': ['CARD'], 'parent': 'NX', 'over_word': True, 'auto preterminals': ('CARD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('NX', 'ADJX')}
(TOP
	(TURN
		(DM ja)
		(SIMPX mit dem zug ist es moglich)
		(SIMPX das ist)
		(SIMPX
			(VF stundlich)
			(LK fahrt)
			(MF [01;33m(NX[00m
				(NX ein zug)
				[01;31m(PX[00m [01;33m(PX[00m
					(APPR um)
					(NX achtundfunfzig)[01;31m)[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(NX die volle stunde) [01;33mPX) NX)[00m
						(ADVX immer)[01;31m)[00m
					(ADJX achtundfunfzig)[01;31m)[00m))
		(SIMPX der dauert dann drei stunden und zwanzig)
		(SIMPX man mus da aber bedenken das man in dortmund umsteigen muste)))
Step:NP Attachment
{'new_parent': 'PX', 'new_family': ['APPR', 'NX', 'NX'], 'mover info': [('NX', (15, 18))], 'old_family': ['NX', 'ADVX'], 'start left siblings': [], 'auto preterminals': ('ART', 'NN', 'APPR', 'CARD', 'ART', 'ADJA', 'NN', 'ADV', 'CARD'), 'start right siblings': ['ADVX'], 'end left siblings': ['APPR', 'NX'], 'auto preterminal span': (11, 20), 'movers': ['NX'], 'old_parent': 'NX', 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(SIMPX mit dem zug ist es moglich)
		(SIMPX das ist)
		(SIMPX
			(VF stundlich)
			(LK fahrt)
			(MF
				[01;36m(NX[00m
					(NX ein zug)
					(PX um achtundfunfzig die volle stunde)[01;36m)[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(ADVX
							(ADV immer))[01;31m)[00m
					(ADJX achtundfunfzig)[01;31m)[00m))
		(SIMPX der dauert dann drei stunden und zwanzig)
		(SIMPX man mus da aber bedenken das man in dortmund umsteigen muste)))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'APPR', 'CARD', 'ART', 'ADJA', 'NN'), 'right siblings': [(NX (NX (ADVX (ADV immer))) (ADJX (CARD achtundfunfzig)))], 'left siblings': [], 'auto preterminal span': (11, 18), 'span': (11, 18), 'parent': 'MF', 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX mit dem zug ist es moglich)
		(SIMPX das ist)
		(SIMPX
			(VF stundlich)
			(LK fahrt)
			(MF
				(NX ein zug um achtundfunfzig die volle stunde)
				[01;31m(NX[00m
					[01;31m(NX[00m
						(ADVX
							(ADV immer))[01;31m)[00m
					(ADJX achtundfunfzig)[01;31m)[00m))
		(SIMPX der dauert dann drei stunden und zwanzig)
		(SIMPX man mus da aber bedenken das man in dortmund umsteigen muste)))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['NX', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'CARD'), 'right siblings': ['ADJX'], 'parent': 'NX', 'auto preterminal span': (18, 20), 'span': (18, 19), 'left siblings': [], 'label': 'NX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX mit dem zug ist es moglich)
		(SIMPX das ist)
		(SIMPX
			(VF stundlich)
			(LK fahrt)
			(MF
				(NX ein zug um achtundfunfzig die volle stunde)
				[01;31m(NX[00m
					(ADVX immer)
					(ADJX achtundfunfzig)[01;31m)[00m))
		(SIMPX der dauert dann drei stunden und zwanzig)
		(SIMPX man mus da aber bedenken das man in dortmund umsteigen muste)))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'ADJX'], 'family': ['NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'APPR', 'CARD', 'ART', 'ADJA', 'NN', 'ADV', 'CARD'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (11, 20), 'span': (18, 20), 'left siblings': ['NX'], 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP ja mit dem zug ist es moglich das ist stundlich fahrt ein zug um achtundfunfzig die volle stunde immer achtundfunfzig der dauert dann drei stunden und zwanzig man mus da aber bedenken das man in dortmund umsteigen muste)

Sentence 663:
4 Initial errors
0 on fringe, 3 iterations
2 Error:UNSET move
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM selbstverstandlich)
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(VF sie)
				(LK sagten)
				(MF jetzt eben)[01;36m)[00m
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					(VF sie)
					(LK mochten)
					(MF zentral)[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['DM', 'DM', 'SIMPX', 'NF'], 'mover info': [('NF', (6, 9))], 'old_family': ['VF', 'LK', 'MF', 'NF'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('PTKANT', 'ITJ', 'PPER', 'VVFIN', 'ADV', 'ADV', 'PPER', 'VMFIN', 'ADJD'), 'start right siblings': [], 'end left siblings': ['DM', 'DM', 'SIMPX'], 'auto preterminal span': (0, 9), 'movers': ['NF'], 'old_parent': 'SIMPX', 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(DM selbstverstandlich)
		(SIMPX sie sagten jetzt eben)
		[01;31m(NF[00m
			[01;31m(SIMPX[00m
				(VF sie)
				(LK mochten)
				(MF zentral)[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['DM', 'DM', 'SIMPX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'PPER', 'VVFIN', 'ADV', 'ADV', 'PPER', 'VMFIN', 'ADJD'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 9), 'span': (6, 9), 'left siblings': ['DM', 'DM', 'SIMPX'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM selbstverstandlich)
		(SIMPX sie sagten jetzt eben)
		[01;31m(SIMPX[00m
			(VF sie)
			(LK mochten)
			(MF zentral)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['DM', 'DM', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'PPER', 'VVFIN', 'ADV', 'ADV', 'PPER', 'VMFIN', 'ADJD'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 9), 'span': (6, 9), 'left siblings': ['DM', 'DM', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ja selbstverstandlich sie sagten jetzt eben sie mochten zentral)

Sentence 664:
6 Initial errors
0 on fringe, 3 iterations
3 Error:PP Attachment
2 Error:Different label
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(NX hundert mark)
		(DM also)
		(SIMPX ich sehe jetzt hier gerade)
		(SIMPX habe ich einmal das hotel am thielenplatz)
		(SIMPX
			(VF das)
			[01;36m(FKOORD[00m [01;31m(LKMN[00m
				(LKM liegt sehr zentral)
				(KON und)
				(LKM hat auch einen konferenzraum)[01;31m)[00m[01;36m)[00m)
		(SIMPX
			(KOORD und)
			(VF da)
			(LK ware)
			(MF
				[01;31m(NX[00m
					(NX die preiskategorie)
					[01;31m(PX[00m [01;33m(PX[00m
						(APPR fur)
						[01;33m(NX[00m (NX ein einzelzimmer)[01;31m)[00m[01;31m)[00m
				(PX zwischen funfundachtzig und hundert dreisig mark))))) [01;33mNX) PX)[00m
Step:PP Attachment
{'new_parent': 'PX', 'new_family': ['APPR', 'NX', 'PX'], 'mover info': [('PX', (32, 38))], 'old_family': ['NX', 'PX'], 'start left siblings': ['NX'], 'auto preterminals': ('ART', 'NN', 'APPR', 'ART', 'NN', 'APPR', 'CARD', 'KON', 'CARD', 'CARD', 'NN'), 'start right siblings': [], 'end left siblings': ['APPR', 'NX'], 'auto preterminal span': (27, 38), 'adding node already present': False, 'movers': ['PX'], 'old_parent': 'MF', 'added and moved': True, 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(NX hundert mark)
		(DM also)
		(SIMPX ich sehe jetzt hier gerade)
		(SIMPX habe ich einmal das hotel am thielenplatz)
		(SIMPX
			(VF das)
			[01;36m(FKOORD[00m [01;31m(LKMN[00m
				(LKM liegt sehr zentral)
				(KON und)
				(LKM hat auch einen konferenzraum)[01;31m)[00m[01;36m)[00m)
		(SIMPX
			(KOORD und)
			(VF da)
			(LK ware)
			(MF
				[01;31m(NX[00m
					(NX die preiskategorie)
					(PX fur ein einzelzimmer zwischen funfundachtzig und hundert dreisig mark)[01;31m)[00m))))
Step:Different label
{'family': ['VF', 'FKOORD'], 'auto preterminal span': (16, 24), 'span': (16, 24), 'subtrees': ['LKM', 'KON', 'LKM'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('VVFIN', 'ADV', 'ADJD', 'KON', 'VAFIN', 'ADV', 'ART', 'NN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('LKMN', 'FKOORD')}
(TOP
	(TURN
		(NX hundert mark)
		(DM also)
		(SIMPX ich sehe jetzt hier gerade)
		(SIMPX habe ich einmal das hotel am thielenplatz)
		(SIMPX das liegt sehr zentral und hat auch einen konferenzraum)
		(SIMPX
			(KOORD und)
			(VF da)
			(LK ware)
			(MF
				[01;31m(NX[00m
					(NX die preiskategorie)
					(PX fur ein einzelzimmer zwischen funfundachtzig und hundert dreisig mark)[01;31m)[00m))))
Step:Unary
{'subtrees': ['NX', 'PX'], 'family': ['NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'APPR', 'ART', 'NN', 'APPR', 'CARD', 'KON', 'CARD', 'CARD', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (27, 38), 'span': (27, 38), 'left siblings': [], 'label': 'NX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP hundert mark also ich sehe jetzt hier gerade habe ich einmal das hotel am thielenplatz das liegt sehr zentral und hat auch einen konferenzraum und da ware die preiskategorie fur ein einzelzimmer zwischen funfundachtzig und hundert dreisig mark)

Sentence 665:
1 Initial errors
0 on fringe, 1 iterations
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF ich)
			[01;31m(FKOORD[00m
				(LKMVC rufe dann da an)
				(KON und)
				(LKM erledige das fur sie)[01;31m)[00m)
		(SIMPX sie mussen mir nur personalien geben)
		(ADVX und dann)))
Step:UNSET remove
{'subtrees': ['LKMVC', 'KON', 'LKM'], 'family': ['VF', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'ADV', 'PTKVZ', 'KON', 'VVFIN', 'PDS', 'APPR', 'PPER'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (1, 11), 'span': (2, 11), 'left siblings': ['VF'], 'label': 'FKOORD', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ja ich rufe dann da an und erledige das fur sie sie mussen mir nur personalien geben und dann)

Sentence 666:
0 Initial errors
0 on fringe, 0 iterations

Sentence 667:
24 Initial errors
0 on fringe, 17 iterations
2 Error:Different label
2 Error:Single Word Phrase
2 Error:Modifier Attachment
2 Error:Modifier Attachment
3 Error:PP Attachment
2 Error:Different label
1 Error:UNSET add
1 Error:Unary
1 Error:Unary
1 Error:Unary
1 Error:Single Word Phrase
1 Error:Unary
1 Error:Unary
1 Error:Modifier Attachment
1 Error:Unary
1 Error:Clause Attachment
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM guten tag)
		[01;36m(DM[00m
			[01;36m(NX[00m
				(DM frau bergmann)
				(DM offergeld)[01;36m)[00m[01;36m)[00m
		(NX mein name)
		(SIMPX
			(VF ich)
			(LK habe)
			[01;31m(MF[00m [01;33m(NX (MF[00m
				[01;31m(NX[00m
					(ART ein)
					(ADJX paar)
					[01;31m(NX[00m
						[01;31m(NX[00m
							(NN fragen) [01;33mMF) NX)[00m
							[01;36m(VF[00m
								(PX [01;33m(SIMPX (NF[00m
									(APPR an)
									[01;36m(VF[00m
										(NX
											(PPER sie))[01;36m)[00m)[01;36m)[00m[01;31m)[00m
						[01;31m(PX[00m
							[01;36m(VXFIN[00m
								[01;36m(LK[00m
									(APPR bezuglich)[01;36m)[00m[01;36m)[00m
							[01;36m(MF[00m [01;31m(NX[00m
								(NX einer geschaftsreise)
								(PX nach hannover)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m) [01;33mNF) SIMPX)[00m
		[01;36m(SIMPX[00m
			[01;36m(VF[00m
				(ADVX
					(ADVX erst)
					(ADVX mal))[01;36m)[00m
			[01;31m(SIMPX[00m
				(LK ist)
				(MF
					(NX es)
					[01;36m(NX[00m
						[01;36m(ADJX[00m [01;31m(ADVX[00m
							(ADV grundsatzlich)[01;31m)[00m[01;36m)[00m
						[01;31m(ADJX[00m
							(ADJD moglich)[01;31m)[00m[01;36m)[00m)
				(NF mit dem flugzeug nach hannover zu fliegen)[01;31m)[00m[01;36m)[00m))
Step:Different label
{'family': ['APPR', 'MF'], 'auto preterminal span': (15, 19), 'span': (15, 19), 'subtrees': ['NX', 'PX'], 'parent': 'PX', 'over_word': False, 'auto preterminals': ('ART', 'NN', 'APPR', 'NE'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('NX', 'MF')}
(TOP
	(TURN
		(DM guten tag)
		[01;36m(DM[00m
			[01;36m(NX[00m
				(DM frau bergmann)
				(DM offergeld)[01;36m)[00m[01;36m)[00m
		(NX mein name)
		(SIMPX
			(VF ich)
			(LK habe)
			[01;31m(MF[00m [01;33m(NX (MF[00m
				[01;31m(NX[00m
					(ART ein)
					(ADJX paar)
					[01;31m(NX[00m
						[01;31m(NX[00m
							(NN fragen) [01;33mMF) NX)[00m
							[01;36m(VF[00m
								(PX [01;33m(SIMPX (NF[00m
									(APPR an)
									[01;36m(VF[00m
										(NX
											(PPER sie))[01;36m)[00m)[01;36m)[00m[01;31m)[00m
						[01;31m(PX[00m
							[01;36m(VXFIN[00m
								[01;36m(LK[00m
									(APPR bezuglich)[01;36m)[00m[01;36m)[00m
							(MF einer geschaftsreise nach hannover)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m) [01;33mNF) SIMPX)[00m
		[01;36m(SIMPX[00m
			[01;36m(VF[00m
				(ADVX
					(ADVX erst)
					(ADVX mal))[01;36m)[00m
			[01;31m(SIMPX[00m
				(LK ist)
				(MF
					(NX es)
					[01;36m(NX[00m
						[01;36m(ADJX[00m [01;31m(ADVX[00m
							(ADV grundsatzlich)[01;31m)[00m[01;36m)[00m
						[01;31m(ADJX[00m
							(ADJD moglich)[01;31m)[00m[01;36m)[00m)
				(NF mit dem flugzeug nach hannover zu fliegen)[01;31m)[00m[01;36m)[00m))
Step:Single Word Phrase
{'family': ['NX', 'ADJX', 'ADJX'], 'auto preterminal span': (23, 24), 'span': (23, 24), 'subtrees': ['ADV'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'ADJX')}
(TOP
	(TURN
		(DM guten tag)
		[01;36m(DM[00m
			[01;36m(NX[00m
				(DM frau bergmann)
				(DM offergeld)[01;36m)[00m[01;36m)[00m
		(NX mein name)
		(SIMPX
			(VF ich)
			(LK habe)
			[01;31m(MF[00m [01;33m(NX (MF[00m
				[01;31m(NX[00m
					(ART ein)
					(ADJX paar)
					[01;31m(NX[00m
						[01;31m(NX[00m
							(NN fragen) [01;33mMF) NX)[00m
							[01;36m(VF[00m
								(PX [01;33m(SIMPX (NF[00m
									(APPR an)
									[01;36m(VF[00m
										(NX
											(PPER sie))[01;36m)[00m)[01;36m)[00m[01;31m)[00m
						[01;31m(PX[00m
							[01;36m(VXFIN[00m
								[01;36m(LK[00m
									(APPR bezuglich)[01;36m)[00m[01;36m)[00m
							(MF einer geschaftsreise nach hannover)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m) [01;33mNF) SIMPX)[00m
		[01;36m(SIMPX[00m
			[01;36m(VF[00m
				(ADVX
					(ADVX erst)
					(ADVX mal))[01;36m)[00m
			[01;31m(SIMPX[00m
				(LK ist)
				(MF
					(NX es)
					[01;36m(NX[00m
						(ADJX grundsatzlich)
						[01;31m(ADJX[00m
							(ADJD moglich)[01;31m)[00m[01;36m)[00m)
				(NF mit dem flugzeug nach hannover zu fliegen)[01;31m)[00m[01;36m)[00m))
Step:Modifier Attachment
{'new_parent': 'SIMPX', 'new_family': ['ADVX', 'LK', 'MF', 'NF'], 'mover info': [('ADVX', (19, 21))], 'old_family': ['DM', 'DM', 'DM', 'NX', 'SIMPX', 'ADVX', 'SIMPX'], 'start left siblings': ['DM', 'DM', 'DM', 'NX', 'SIMPX'], 'auto preterminals': ('ADJA', 'NN', 'NN', 'NE', 'NE', 'PPOSAT', 'NN', 'PPER', 'VAFIN', 'ART', 'PIDAT', 'NN', 'APPR', 'PPER', 'APPR', 'ART', 'NN', 'APPR', 'NE', 'ADV', 'ADV', 'VAFIN', 'PPER', 'ADV', 'ADJD', 'APPR', 'ART', 'NN', 'APPR', 'NE', 'PTKZU', 'VVINF'), 'start right siblings': ['SIMPX'], 'end left siblings': [], 'auto preterminal span': (0, 32), 'movers': ['ADVX'], 'old_parent': 'TURN', 'end right siblings': ['LK', 'MF', 'NF'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM guten tag)
		[01;36m(DM[00m
			[01;36m(NX[00m
				(DM frau bergmann)
				(DM offergeld)[01;36m)[00m[01;36m)[00m
		(NX mein name)
		(SIMPX
			(VF ich)
			(LK habe)
			[01;31m(MF[00m [01;33m(NX (MF[00m
				[01;31m(NX[00m
					(ART ein)
					(ADJX paar)
					[01;31m(NX[00m
						[01;31m(NX[00m
							(NN fragen) [01;33mMF) NX)[00m
							[01;36m(VF[00m
								(PX [01;33m(SIMPX (NF[00m
									(APPR an)
									[01;36m(VF[00m
										(NX
											(PPER sie))[01;36m)[00m)[01;36m)[00m[01;31m)[00m
						[01;31m(PX[00m
							[01;36m(VXFIN[00m
								[01;36m(LK[00m
									(APPR bezuglich)[01;36m)[00m[01;36m)[00m
							(MF einer geschaftsreise nach hannover)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m) [01;33mNF) SIMPX)[00m
		(SIMPX
			[01;36m(VF[00m
				(ADVX
					(ADVX erst)
					(ADVX mal))[01;36m)[00m
			(LK ist)
			(MF
				(NX es)
				[01;36m(NX[00m
					(ADJX grundsatzlich)
					[01;31m(ADJX[00m
						(ADJD moglich)[01;31m)[00m[01;36m)[00m)
			(NF mit dem flugzeug nach hannover zu fliegen))))
Step:Modifier Attachment
{'new_parent': 'NX', 'new_family': ['ART', 'ADJX', 'NN', 'PX'], 'mover info': [('ART', (9, 10)), ('ADJX', (10, 11))], 'old_family': ['ART', 'ADJX', 'NX'], 'start left siblings': [], 'auto preterminals': ('ART', 'PIDAT', 'NN', 'APPR', 'PPER', 'APPR', 'ART', 'NN', 'APPR', 'NE'), 'start right siblings': ['NX'], 'end left siblings': [], 'auto preterminal span': (9, 19), 'adding node already present': False, 'movers': ['ART', 'ADJX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': ['NN', 'PX'], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(DM guten tag)
		[01;36m(DM[00m
			[01;36m(NX[00m
				(DM frau bergmann)
				(DM offergeld)[01;36m)[00m[01;36m)[00m
		(NX mein name)
		(SIMPX
			(VF ich)
			(LK habe)
			[01;31m(MF[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						[01;36m(NX[00m
							(MF
								(ART ein)
								(ADJX paar)
								(NN fragen))[01;36m)[00m
						[01;36m(VF[00m
							(PX [01;33m(SIMPX (NF[00m
								(APPR an)
								[01;36m(VF[00m
									(NX
										(PPER sie))[01;36m)[00m)[01;36m)[00m[01;31m)[00m
					[01;31m(PX[00m
						[01;36m(VXFIN[00m
							[01;36m(LK[00m
								(APPR bezuglich)[01;36m)[00m[01;36m)[00m
						(MF einer geschaftsreise nach hannover)[01;31m)[00m[01;31m)[00m[01;31m)[00m) [01;33mNF) SIMPX)[00m
		(SIMPX
			[01;36m(VF[00m
				(ADVX
					(ADVX erst)
					(ADVX mal))[01;36m)[00m
			(LK ist)
			(MF
				(NX es)
				[01;36m(NX[00m
					(ADJX grundsatzlich)
					[01;31m(ADJX[00m
						(ADJD moglich)[01;31m)[00m[01;36m)[00m)
			(NF mit dem flugzeug nach hannover zu fliegen))))
Step:PP Attachment
{'new_parent': 'PX', 'new_family': ['PX', 'APPR', 'MF'], 'mover info': [('PX', (12, 14))], 'old_family': ['MF', 'PX'], 'start left siblings': ['MF'], 'auto preterminals': ('ART', 'PIDAT', 'NN', 'APPR', 'PPER', 'APPR', 'ART', 'NN', 'APPR', 'NE'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (9, 19), 'adding node already present': False, 'movers': ['PX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': ['APPR', 'MF'], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(DM guten tag)
		[01;36m(DM[00m
			[01;36m(NX[00m
				(DM frau bergmann)
				(DM offergeld)[01;36m)[00m[01;36m)[00m
		(NX mein name)
		(SIMPX
			(VF ich)
			(LK habe)
			[01;31m(MF[00m
				[01;31m(NX[00m
					(NX ein paar fragen)
					[01;36m(NF[00m
						(SIMPX
							[01;31m(PX[00m
								[01;36m(VF[00m
									(PX
										(APPR an)
										[01;36m(VF[00m
											(NX
												(PPER sie))[01;36m)[00m)[01;36m)[00m
								[01;36m(VXFIN[00m
									[01;36m(LK[00m
										(APPR bezuglich)[01;36m)[00m[01;36m)[00m
								(MF einer geschaftsreise nach hannover)[01;31m)[00m)[01;36m)[00m[01;31m)[00m[01;31m)[00m)
		(SIMPX
			[01;36m(VF[00m
				(ADVX
					(ADVX erst)
					(ADVX mal))[01;36m)[00m
			(LK ist)
			(MF
				(NX es)
				[01;36m(NX[00m
					(ADJX grundsatzlich)
					[01;31m(ADJX[00m
						(ADJD moglich)[01;31m)[00m[01;36m)[00m)
			(NF mit dem flugzeug nach hannover zu fliegen))))
Step:Different label
{'family': ['NF'], 'auto preterminal span': (12, 19), 'span': (12, 19), 'subtrees': ['PX', 'APPR', 'MF'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('APPR', 'PPER', 'APPR', 'ART', 'NN', 'APPR', 'NE'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('PX', 'NF')}
(TOP
	(TURN
		(DM guten tag)
		[01;36m(DM[00m
			[01;36m(NX[00m
				(DM frau bergmann)
				(DM offergeld)[01;36m)[00m[01;36m)[00m
		(NX mein name)
		(SIMPX
			(VF ich)
			(LK habe)
			[01;31m(MF[00m
				[01;31m(NX[00m
					(NX ein paar fragen)
					(SIMPX
						(NF
							[01;36m(VF[00m
								(PX
									(APPR an)
									[01;36m(VF[00m
										(NX
											(PPER sie))[01;36m)[00m)[01;36m)[00m
							[01;36m(VXFIN[00m
								[01;36m(LK[00m
									(APPR bezuglich)[01;36m)[00m[01;36m)[00m
							(MF einer geschaftsreise nach hannover)))[01;31m)[00m[01;31m)[00m)
		(SIMPX
			[01;36m(VF[00m
				(ADVX
					(ADVX erst)
					(ADVX mal))[01;36m)[00m
			(LK ist)
			(MF
				(NX es)
				[01;36m(NX[00m
					(ADJX grundsatzlich)
					[01;31m(ADJX[00m
						(ADJD moglich)[01;31m)[00m[01;36m)[00m)
			(NF mit dem flugzeug nach hannover zu fliegen))))
Step:UNSET add
{'subtrees': ['DM', 'DM'], 'family': ['DM', 'NX', 'NX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'NE', 'NE'), 'right siblings': [(NX (PPOSAT mein) (NN name)), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VAFIN habe))) (MF (NX (NX (MF (ART ein) (ADJX (PIDAT paar)) (NN fragen))) (SIMPX (NF (PX (APPR an) (NX (PPER sie))) (APPR bezuglich) (MF (NX (ART einer) (NN geschaftsreise)) (PX (APPR nach) (NX (NE hannover))))))))), (SIMPX (ADVX (ADVX (ADV erst)) (ADVX (ADV mal))) (LK (VXFIN (VAFIN ist))) (MF (NX (PPER es)) (ADJX (ADV grundsatzlich)) (ADJX (ADJD moglich))) (NF (SIMPX (MF (PX (APPR mit) (NX (ART dem) (NN flugzeug))) (PX (APPR nach) (NX (NE hannover)))) (VC (VXINF (PTKZU zu) (VVINF fliegen))))))], 'left siblings': [(DM (NX (ADJX (ADJA guten)) (NN tag)))], 'auto preterminal span': (2, 5), 'span': (2, 5), 'parent': 'TURN', 'label': 'NX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM guten tag)
		[01;36m(DM[00m
			(NX
				(DM frau bergmann)
				(DM offergeld))[01;36m)[00m
		(NX mein name)
		(SIMPX
			(VF ich)
			(LK habe)
			[01;31m(MF[00m
				[01;31m(NX[00m
					(NX ein paar fragen)
					(SIMPX
						(NF
							[01;36m(VF[00m
								(PX
									(APPR an)
									[01;36m(VF[00m
										(NX
											(PPER sie))[01;36m)[00m)[01;36m)[00m
							[01;36m(VXFIN[00m
								[01;36m(LK[00m
									(APPR bezuglich)[01;36m)[00m[01;36m)[00m
							(MF einer geschaftsreise nach hannover)))[01;31m)[00m[01;31m)[00m)
		(SIMPX
			[01;36m(VF[00m
				(ADVX
					(ADVX erst)
					(ADVX mal))[01;36m)[00m
			(LK ist)
			(MF
				(NX es)
				[01;36m(NX[00m
					(ADJX grundsatzlich)
					[01;31m(ADJX[00m
						(ADJD moglich)[01;31m)[00m[01;36m)[00m)
			(NF mit dem flugzeug nach hannover zu fliegen))))
Step:Unary
{'subtrees': ['NX'], 'family': ['DM', 'DM', 'NX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'NE', 'NE'), 'right siblings': [(NX (PPOSAT mein) (NN name)), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VAFIN habe))) (MF (NX (NX (MF (ART ein) (ADJX (PIDAT paar)) (NN fragen))) (SIMPX (NF (PX (APPR an) (NX (PPER sie))) (APPR bezuglich) (MF (NX (ART einer) (NN geschaftsreise)) (PX (APPR nach) (NX (NE hannover))))))))), (SIMPX (ADVX (ADVX (ADV erst)) (ADVX (ADV mal))) (LK (VXFIN (VAFIN ist))) (MF (NX (PPER es)) (ADJX (ADV grundsatzlich)) (ADJX (ADJD moglich))) (NF (SIMPX (MF (PX (APPR mit) (NX (ART dem) (NN flugzeug))) (PX (APPR nach) (NX (NE hannover)))) (VC (VXINF (PTKZU zu) (VVINF fliegen))))))], 'left siblings': [(DM (NX (ADJX (ADJA guten)) (NN tag)))], 'auto preterminal span': (2, 5), 'span': (2, 5), 'parent': 'TURN', 'label': 'DM', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM guten tag)
		(DM frau bergmann offergeld)
		(NX mein name)
		(SIMPX
			(VF ich)
			(LK habe)
			[01;31m(MF[00m
				[01;31m(NX[00m
					(NX ein paar fragen)
					(SIMPX
						(NF
							[01;36m(VF[00m
								(PX
									(APPR an)
									[01;36m(VF[00m
										(NX
											(PPER sie))[01;36m)[00m)[01;36m)[00m
							[01;36m(VXFIN[00m
								[01;36m(LK[00m
									(APPR bezuglich)[01;36m)[00m[01;36m)[00m
							(MF einer geschaftsreise nach hannover)))[01;31m)[00m[01;31m)[00m)
		(SIMPX
			[01;36m(VF[00m
				(ADVX
					(ADVX erst)
					(ADVX mal))[01;36m)[00m
			(LK ist)
			(MF
				(NX es)
				[01;36m(NX[00m
					(ADJX grundsatzlich)
					[01;31m(ADJX[00m
						(ADJD moglich)[01;31m)[00m[01;36m)[00m)
			(NF mit dem flugzeug nach hannover zu fliegen))))
Step:Unary
{'subtrees': ['PX'], 'family': ['VF', 'APPR', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'PPER'), 'right siblings': [(APPR bezuglich), (MF (NX (ART einer) (NN geschaftsreise)) (PX (APPR nach) (NX (NE hannover))))], 'left siblings': [], 'auto preterminal span': (12, 14), 'span': (12, 14), 'parent': 'NF', 'label': 'VF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM guten tag)
		(DM frau bergmann offergeld)
		(NX mein name)
		(SIMPX
			(VF ich)
			(LK habe)
			[01;31m(MF[00m
				[01;31m(NX[00m
					(NX ein paar fragen)
					(SIMPX
						(NF
							(VF
								(PX
									(APPR an)
									[01;36m(VF[00m
										(NX
											(PPER sie))[01;36m)[00m))
							[01;36m(VXFIN[00m
								[01;36m(LK[00m
									(APPR bezuglich)[01;36m)[00m[01;36m)[00m
							(MF einer geschaftsreise nach hannover)))[01;31m)[00m[01;31m)[00m)
		(SIMPX
			[01;36m(VF[00m
				(ADVX
					(ADVX erst)
					(ADVX mal))[01;36m)[00m
			(LK ist)
			(MF
				(NX es)
				[01;36m(NX[00m
					(ADJX grundsatzlich)
					[01;31m(ADJX[00m
						(ADJD moglich)[01;31m)[00m[01;36m)[00m)
			(NF mit dem flugzeug nach hannover zu fliegen))))
Step:Unary
{'subtrees': ['NX'], 'family': ['APPR', 'VF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER',), 'right siblings': [], 'left siblings': [(APPR an)], 'auto preterminal span': (13, 14), 'span': (13, 14), 'parent': 'PX', 'label': 'VF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM guten tag)
		(DM frau bergmann offergeld)
		(NX mein name)
		(SIMPX
			(VF ich)
			(LK habe)
			[01;31m(MF[00m
				[01;31m(NX[00m
					(NX ein paar fragen)
					(SIMPX
						(NF
							(VF an sie)
							[01;36m(VXFIN[00m
								[01;36m(LK[00m
									(APPR bezuglich)[01;36m)[00m[01;36m)[00m
							(MF einer geschaftsreise nach hannover)))[01;31m)[00m[01;31m)[00m)
		(SIMPX
			[01;36m(VF[00m
				(ADVX
					(ADVX erst)
					(ADVX mal))[01;36m)[00m
			(LK ist)
			(MF
				(NX es)
				[01;36m(NX[00m
					(ADJX grundsatzlich)
					[01;31m(ADJX[00m
						(ADJD moglich)[01;31m)[00m[01;36m)[00m)
			(NF mit dem flugzeug nach hannover zu fliegen))))
Step:Single Word Phrase
{'subtrees': ['APPR'], 'family': ['VF', 'LK', 'MF'], 'over_word': True, 'over words': True, 'auto preterminals': ('APPR',), 'right siblings': [(MF (NX (ART einer) (NN geschaftsreise)) (PX (APPR nach) (NX (NE hannover))))], 'left siblings': [(VF (PX (APPR an) (VF (NX (PPER sie)))))], 'auto preterminal span': (14, 15), 'span': (14, 15), 'parent': 'NF', 'label': 'LK', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM guten tag)
		(DM frau bergmann offergeld)
		(NX mein name)
		(SIMPX
			(VF ich)
			(LK habe)
			[01;31m(MF[00m
				[01;31m(NX[00m
					(NX ein paar fragen)
					(SIMPX
						(NF
							(VF an sie)
							[01;36m(VXFIN[00m
								(LK
									(APPR bezuglich))[01;36m)[00m
							(MF einer geschaftsreise nach hannover)))[01;31m)[00m[01;31m)[00m)
		(SIMPX
			[01;36m(VF[00m
				(ADVX
					(ADVX erst)
					(ADVX mal))[01;36m)[00m
			(LK ist)
			(MF
				(NX es)
				[01;36m(NX[00m
					(ADJX grundsatzlich)
					[01;31m(ADJX[00m
						(ADJD moglich)[01;31m)[00m[01;36m)[00m)
			(NF mit dem flugzeug nach hannover zu fliegen))))
Step:Unary
{'subtrees': ['LK'], 'family': ['VF', 'VXFIN', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR',), 'right siblings': [(MF (NX (ART einer) (NN geschaftsreise)) (PX (APPR nach) (NX (NE hannover))))], 'left siblings': [(VF (PX (APPR an) (VF (NX (PPER sie)))))], 'auto preterminal span': (14, 15), 'span': (14, 15), 'parent': 'NF', 'label': 'VXFIN', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM guten tag)
		(DM frau bergmann offergeld)
		(NX mein name)
		(SIMPX
			(VF ich)
			(LK habe)
			[01;31m(MF[00m
				[01;31m(NX[00m
					(NX ein paar fragen)
					(SIMPX an sie bezuglich einer geschaftsreise nach hannover)[01;31m)[00m[01;31m)[00m)
		(SIMPX
			[01;36m(VF[00m
				(ADVX
					(ADVX erst)
					(ADVX mal))[01;36m)[00m
			(LK ist)
			(MF
				(NX es)
				[01;36m(NX[00m
					(ADJX grundsatzlich)
					[01;31m(ADJX[00m
						(ADJD moglich)[01;31m)[00m[01;36m)[00m)
			(NF mit dem flugzeug nach hannover zu fliegen))))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['VF', 'LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV'), 'right siblings': [(LK (VXFIN (VAFIN ist))), (MF (NX (PPER es)) (ADJX (ADV grundsatzlich)) (ADJX (ADJD moglich))), (NF (SIMPX (MF (PX (APPR mit) (NX (ART dem) (NN flugzeug))) (PX (APPR nach) (NX (NE hannover)))) (VC (VXINF (PTKZU zu) (VVINF fliegen)))))], 'left siblings': [], 'auto preterminal span': (19, 21), 'span': (19, 21), 'parent': 'SIMPX', 'label': 'VF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM guten tag)
		(DM frau bergmann offergeld)
		(NX mein name)
		(SIMPX
			(VF ich)
			(LK habe)
			[01;31m(MF[00m
				[01;31m(NX[00m
					(NX ein paar fragen)
					(SIMPX an sie bezuglich einer geschaftsreise nach hannover)[01;31m)[00m[01;31m)[00m)
		(SIMPX
			(VF erst mal)
			(LK ist)
			(MF
				(NX es)
				[01;36m(NX[00m
					(ADJX grundsatzlich)
					[01;31m(ADJX[00m
						(ADJD moglich)[01;31m)[00m[01;36m)[00m)
			(NF mit dem flugzeug nach hannover zu fliegen))))
Step:Modifier Attachment
{'subtrees': ['ADJX', 'ADJX'], 'family': ['NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADJD'), 'right siblings': [], 'left siblings': [(NX (PPER es))], 'auto preterminal span': (23, 25), 'span': (23, 25), 'parent': 'MF', 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM guten tag)
		(DM frau bergmann offergeld)
		(NX mein name)
		(SIMPX
			(VF ich)
			(LK habe)
			[01;31m(MF[00m
				[01;31m(NX[00m
					(NX ein paar fragen)
					(SIMPX an sie bezuglich einer geschaftsreise nach hannover)[01;31m)[00m[01;31m)[00m)
		(SIMPX
			(VF erst mal)
			(LK ist)
			(MF
				(NX es)
				(NX
					(ADJX grundsatzlich)
					[01;31m(ADJX[00m
						(ADJD moglich)[01;31m)[00m))
			(NF mit dem flugzeug nach hannover zu fliegen))))
Step:Unary
{'subtrees': ['NX'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'ART', 'PIDAT', 'NN', 'APPR', 'PPER', 'APPR', 'ART', 'NN', 'APPR', 'NE'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (7, 19), 'span': (9, 19), 'left siblings': ['VF', 'LK'], 'label': 'MF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM guten tag)
		(DM frau bergmann offergeld)
		(NX mein name)
		(SIMPX
			(VF ich)
			(LK habe)
			[01;31m(NX[00m
				(NX ein paar fragen)
				(SIMPX an sie bezuglich einer geschaftsreise nach hannover)[01;31m)[00m)
		(SIMPX
			(VF erst mal)
			(LK ist)
			(MF
				(NX es)
				(NX
					(ADJX grundsatzlich)
					[01;31m(ADJX[00m
						(ADJD moglich)[01;31m)[00m))
			(NF mit dem flugzeug nach hannover zu fliegen))))
Step:Clause Attachment
{'subtrees': ['NX', 'SIMPX'], 'family': ['VF', 'LK', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'ART', 'PIDAT', 'NN', 'APPR', 'PPER', 'APPR', 'ART', 'NN', 'APPR', 'NE'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (7, 19), 'span': (9, 19), 'left siblings': ['VF', 'LK'], 'label': 'NX', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM guten tag)
		(DM frau bergmann offergeld)
		(NX mein name)
		(SIMPX ich habe ein paar fragen an sie bezuglich einer geschaftsreise nach hannover)
		(SIMPX
			(VF erst mal)
			(LK ist)
			(MF
				(NX es)
				(NX
					(ADJX grundsatzlich)
					[01;31m(ADJX[00m
						(ADJD moglich)[01;31m)[00m))
			(NF mit dem flugzeug nach hannover zu fliegen))))
Step:Single Word Phrase
{'subtrees': ['ADJD'], 'family': ['ADJX', 'ADJX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADV', 'ADJD'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (23, 25), 'span': (24, 25), 'left siblings': ['ADJX'], 'label': 'ADJX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP guten tag frau bergmann offergeld mein name ich habe ein paar fragen an sie bezuglich einer geschaftsreise nach hannover erst mal ist es grundsatzlich moglich mit dem flugzeug nach hannover zu fliegen)

Sentence 668:
14 Initial errors
0 on fringe, 8 iterations
4 Error:Modifier Attachment
3 Error:PP Attachment
2 Error:Different label
1 Error:Clause Attachment
1 Error:UNSET add
1 Error:Unary
1 Error:UNSET remove
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;36m(ADVX[00m [01;31m(PX[00m
			(PX am wochenende)
			(ADVX gar nicht)[01;31m)[00m[01;36m)[00m
		(DM ja)
		(DM nee)
		(SIMPX ich mochte montags fliegen)
		[01;31m(SIMPX[00m
			(VF sieben uhr zehn)
			(LK past)
			(MF mir auch sehr gut)[01;31m)[00m
		(SIMPX ich mus um zehn uhr bei einer konferenz sein)
		[01;36m(SIMPX[00m
			(SIMPX ware die frage)
			(SIMPX
				(VF ich)
				(LK brauchte)
				[01;36m(NX[00m
					[01;36m(MF[00m
						(MF ein hotel)
						(NF
							(R
								(C was)
								(MF
									[01;31m(ADJX[00m
										[01;31m(ADVX[00m
											(ADVX moglichst)
											[01;36m(ADVX[00m
												(ADV [01;33m(ADJX[00m zentral)[01;36m)[00m[01;31m)[00m
										(ADJD gelegen)[01;31m)[00m) [01;33mADJX)[00m
								(VC ist)))[01;36m)[00m[01;36m)[00m)[01;36m)[00m
		(SIMPX
			(VF wie lange)
			(LK ware)
			[01;31m(MF[00m
				(ADVX ungefahr)
				[01;31m(NX[00m [01;33m(NX[00m
					(NX die transferzeit)
					[01;31m(PX[00m
						(PX vom flughafen) [01;33mNX)[00m
						(PX zum hotel)[01;31m)[00m[01;31m)[00m[01;31m)[00m)))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['ADVX', 'ADJX'], 'mover info': [('ADVX', (35, 36))], 'old_family': ['ADVX', 'ADV'], 'start left siblings': [], 'auto preterminals': ('ADV', 'ADV', 'ADJD'), 'start right siblings': ['ADV'], 'end left siblings': [], 'auto preterminal span': (35, 38), 'movers': ['ADVX'], 'old_parent': 'ADVX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['ADJX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;36m(ADVX[00m [01;31m(PX[00m
			(PX am wochenende)
			(ADVX gar nicht)[01;31m)[00m[01;36m)[00m
		(DM ja)
		(DM nee)
		(SIMPX ich mochte montags fliegen)
		[01;31m(SIMPX[00m
			(VF sieben uhr zehn)
			(LK past)
			(MF mir auch sehr gut)[01;31m)[00m
		(SIMPX ich mus um zehn uhr bei einer konferenz sein)
		[01;36m(SIMPX[00m
			(SIMPX ware die frage)
			(SIMPX
				(VF ich)
				(LK brauchte)
				[01;36m(NX[00m
					[01;36m(MF[00m
						(MF ein hotel)
						(NF was moglichst zentral gelegen ist)[01;36m)[00m[01;36m)[00m)[01;36m)[00m
		(SIMPX
			(VF wie lange)
			(LK ware)
			[01;31m(MF[00m
				(ADVX ungefahr)
				[01;31m(NX[00m [01;33m(NX[00m
					(NX die transferzeit)
					[01;31m(PX[00m
						(PX vom flughafen) [01;33mNX)[00m
						(PX zum hotel)[01;31m)[00m[01;31m)[00m[01;31m)[00m)))
Step:PP Attachment
{'new_parent': 'MF', 'new_family': ['ADVX', 'NX', 'PX'], 'mover info': [('PX', (47, 49))], 'old_family': ['PX', 'PX'], 'start left siblings': ['PX'], 'auto preterminals': ('ADV', 'ART', 'NN', 'APPRART', 'NN', 'APPRART', 'NN'), 'start right siblings': [], 'end left siblings': ['ADVX', 'NX'], 'auto preterminal span': (42, 49), 'movers': ['PX'], 'old_parent': 'PX', 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;36m(ADVX[00m [01;31m(PX[00m
			(PX am wochenende)
			(ADVX gar nicht)[01;31m)[00m[01;36m)[00m
		(DM ja)
		(DM nee)
		(SIMPX ich mochte montags fliegen)
		[01;31m(SIMPX[00m
			(VF sieben uhr zehn)
			(LK past)
			(MF mir auch sehr gut)[01;31m)[00m
		(SIMPX ich mus um zehn uhr bei einer konferenz sein)
		[01;36m(SIMPX[00m
			(SIMPX ware die frage)
			(SIMPX
				(VF ich)
				(LK brauchte)
				[01;36m(NX[00m
					[01;36m(MF[00m
						(MF ein hotel)
						(NF was moglichst zentral gelegen ist)[01;36m)[00m[01;36m)[00m)[01;36m)[00m
		(SIMPX
			(VF wie lange)
			(LK ware)
			[01;31m(MF[00m
				(ADVX ungefahr)
				(NX die transferzeit vom flughafen)
				(PX zum hotel)[01;31m)[00m)))
Step:Different label
{'family': ['ADVX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'auto preterminal span': (0, 4), 'span': (0, 4), 'subtrees': ['PX', 'ADVX'], 'parent': 'TURN', 'over_word': False, 'auto preterminals': ('APPRART', 'NN', 'ADV', 'PTKNEG'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('PX', 'ADVX')}
(TOP
	(TURN
		(ADVX am wochenende gar nicht)
		(DM ja)
		(DM nee)
		(SIMPX ich mochte montags fliegen)
		[01;31m(SIMPX[00m
			(VF sieben uhr zehn)
			(LK past)
			(MF mir auch sehr gut)[01;31m)[00m
		(SIMPX ich mus um zehn uhr bei einer konferenz sein)
		[01;36m(SIMPX[00m
			(SIMPX ware die frage)
			(SIMPX
				(VF ich)
				(LK brauchte)
				[01;36m(NX[00m
					[01;36m(MF[00m
						(MF ein hotel)
						(NF was moglichst zentral gelegen ist)[01;36m)[00m[01;36m)[00m)[01;36m)[00m
		(SIMPX
			(VF wie lange)
			(LK ware)
			[01;31m(MF[00m
				(ADVX ungefahr)
				(NX die transferzeit vom flughafen)
				(PX zum hotel)[01;31m)[00m)))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['ADVX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'ART', 'NN', 'PPER', 'VVFIN', 'ART', 'NN', 'PRELS', 'ADV', 'ADV', 'ADJD', 'VAFIN'), 'right siblings': [(SIMPX (VF (ADJX (ADVX (PWAV wie)) (ADJD lange))) (LK (VXFIN (VAFIN ware))) (MF (ADVX (ADV ungefahr)) (NX (NX (ART die) (NN transferzeit)) (PX (APPRART vom) (NX (NN flughafen)))) (PX (APPRART zum) (NX (NN hotel)))))], 'left siblings': [(ADVX (PX (APPRART am) (NX (NN wochenende))) (ADVX (ADVX (ADV gar)) (PTKNEG nicht))), (DM (PTKANT ja)), (DM (PTKANT nee)), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VMFIN mochte))) (MF (ADVX (ADV montags))) (VC (VXINF (VVINF fliegen)))), (SIMPX (VF (NX (NX (ADJX (CARD sieben)) (NN uhr)) (ADJX (CARD zehn)))) (LK (VXFIN (VVFIN past))) (MF (NX (PPER mir)) (ADVX (ADV auch)) (ADJX (ADVX (ADV sehr)) (ADJD gut)))), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VMFIN mus))) (MF (PX (APPR um) (NX (ADJX (CARD zehn)) (NN uhr))) (PX (APPR bei) (NX (ART einer) (NN konferenz)))) (VC (VXINF (VAINF sein))))], 'auto preterminal span': (27, 39), 'span': (27, 39), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(ADVX am wochenende gar nicht)
		(DM ja)
		(DM nee)
		(SIMPX ich mochte montags fliegen)
		[01;31m(SIMPX[00m
			(VF sieben uhr zehn)
			(LK past)
			(MF mir auch sehr gut)[01;31m)[00m
		(SIMPX ich mus um zehn uhr bei einer konferenz sein)
		(SIMPX
			(SIMPX ware die frage)
			(SIMPX
				(VF ich)
				(LK brauchte)
				[01;36m(NX[00m
					[01;36m(MF[00m
						(MF ein hotel)
						(NF was moglichst zentral gelegen ist)[01;36m)[00m[01;36m)[00m))
		(SIMPX
			(VF wie lange)
			(LK ware)
			[01;31m(MF[00m
				(ADVX ungefahr)
				(NX die transferzeit vom flughafen)
				(PX zum hotel)[01;31m)[00m)))
Step:UNSET add
{'subtrees': ['MF', 'NF'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'PRELS', 'ADV', 'ADV', 'ADJD', 'VAFIN'), 'right siblings': [], 'left siblings': [(VF (NX (PPER ich))), (LK (VXFIN (VVFIN brauchte)))], 'auto preterminal span': (32, 39), 'span': (32, 39), 'parent': 'SIMPX', 'label': 'MF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(ADVX am wochenende gar nicht)
		(DM ja)
		(DM nee)
		(SIMPX ich mochte montags fliegen)
		[01;31m(SIMPX[00m
			(VF sieben uhr zehn)
			(LK past)
			(MF mir auch sehr gut)[01;31m)[00m
		(SIMPX ich mus um zehn uhr bei einer konferenz sein)
		(SIMPX
			(SIMPX ware die frage)
			(SIMPX
				(VF ich)
				(LK brauchte)
				[01;36m(NX[00m
					(MF
						(MF ein hotel)
						(NF was moglichst zentral gelegen ist))[01;36m)[00m))
		(SIMPX
			(VF wie lange)
			(LK ware)
			[01;31m(MF[00m
				(ADVX ungefahr)
				(NX die transferzeit vom flughafen)
				(PX zum hotel)[01;31m)[00m)))
Step:Unary
{'subtrees': ['MF'], 'family': ['VF', 'LK', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'PRELS', 'ADV', 'ADV', 'ADJD', 'VAFIN'), 'right siblings': [], 'left siblings': [(VF (NX (PPER ich))), (LK (VXFIN (VVFIN brauchte)))], 'auto preterminal span': (32, 39), 'span': (32, 39), 'parent': 'SIMPX', 'label': 'NX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(ADVX am wochenende gar nicht)
		(DM ja)
		(DM nee)
		(SIMPX ich mochte montags fliegen)
		[01;31m(SIMPX[00m
			(VF sieben uhr zehn)
			(LK past)
			(MF mir auch sehr gut)[01;31m)[00m
		(SIMPX ich mus um zehn uhr bei einer konferenz sein)
		(SIMPX ware die frage ich brauchte ein hotel was moglichst zentral gelegen ist)
		(SIMPX
			(VF wie lange)
			(LK ware)
			[01;31m(MF[00m
				(ADVX ungefahr)
				(NX die transferzeit vom flughafen)
				(PX zum hotel)[01;31m)[00m)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['ADVX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'NN', 'ADV', 'PTKNEG', 'PTKANT', 'PTKANT', 'PPER', 'VMFIN', 'ADV', 'VVINF', 'CARD', 'NN', 'CARD', 'VVFIN', 'PPER', 'ADV', 'ADV', 'ADJD', 'PPER', 'VMFIN', 'APPR', 'CARD', 'NN', 'APPR', 'ART', 'NN', 'VAINF', 'VAFIN', 'ART', 'NN', 'PPER', 'VVFIN', 'ART', 'NN', 'PRELS', 'ADV', 'ADV', 'ADJD', 'VAFIN', 'PWAV', 'ADJD', 'VAFIN', 'ADV', 'ART', 'NN', 'APPRART', 'NN', 'APPRART', 'NN'), 'right siblings': ['SIMPX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 49), 'span': (10, 18), 'left siblings': ['ADVX', 'DM', 'DM', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(ADVX am wochenende gar nicht)
		(DM ja)
		(DM nee)
		(SIMPX ich mochte montags fliegen)
		(VF sieben uhr zehn)
		(LK past)
		(MF mir auch sehr gut)
		(SIMPX ich mus um zehn uhr bei einer konferenz sein)
		(SIMPX ware die frage ich brauchte ein hotel was moglichst zentral gelegen ist)
		(SIMPX
			(VF wie lange)
			(LK ware)
			[01;31m(MF[00m
				(ADVX ungefahr)
				(NX die transferzeit vom flughafen)
				(PX zum hotel)[01;31m)[00m)))
Step:PP Attachment
{'subtrees': ['ADVX', 'NX', 'PX'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PWAV', 'ADJD', 'VAFIN', 'ADV', 'ART', 'NN', 'APPRART', 'NN', 'APPRART', 'NN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (39, 49), 'span': (42, 49), 'left siblings': ['VF', 'LK'], 'label': 'MF', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP am wochenende gar nicht ja nee ich mochte montags fliegen sieben uhr zehn past mir auch sehr gut ich mus um zehn uhr bei einer konferenz sein ware die frage ich brauchte ein hotel was moglichst zentral gelegen ist wie lange ware ungefahr die transferzeit vom flughafen zum hotel)

Sentence 669:
13 Initial errors
0 on fringe, 8 iterations
6 Error:UNSET move
1 Error:Unary
1 Error:Unary
1 Error:Clause Attachment
1 Error:Unary
1 Error:UNSET remove
1 Error:PP Attachment
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(NX halbe stunde)
		(DM ja)
		(DM sehr gut)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF dann)
			(LK ware)
			[01;31m(MF[00m [01;33m(MF[00m
				(NX
					(PPER ich))[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(PX
						(APPR um)
						(NX sieben uhr zehn))[01;31m)[00m [01;33mMF) SIMPX)[00m
				[01;36m(SIMPX[00m
					(LK wurde)
					(MF ich)
					(VC losfliegen)[01;36m)[00m[01;31m)[00m
			(KON und)
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(NX
						(NX acht uhr)
						(ADJX zehn))[01;31m)[00m
				(LK ware)
				[01;31m(MF[00m
					(NX ich)
					(ADVX dann)
					[01;31m(PX[00m
						(PX in hannover)
						[01;36m(NF[00m
							(PX
								(APPRART am)
								(NX flughafen))[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(DM richtig)))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['NX', 'VF'], 'mover info': [('VF', (8, 12))], 'old_family': ['VF', 'LK', 'MF', 'VC'], 'start left siblings': [], 'auto preterminals': ('ADJA', 'NN', 'PTKANT', 'ADV', 'ADJD', 'ADV', 'VAFIN', 'PPER', 'APPR', 'CARD', 'NN', 'CARD', 'VAFIN', 'PPER', 'VVINF', 'KON', 'CARD', 'NN', 'CARD', 'VAFIN', 'PPER', 'ADV', 'APPR', 'NE', 'APPRART', 'NN', 'ITJ'), 'start right siblings': ['LK', 'MF', 'VC'], 'end left siblings': ['NX'], 'auto preterminal span': (0, 27), 'movers': ['VF'], 'old_parent': 'SIMPX', 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(NX halbe stunde)
		(DM ja)
		(DM sehr gut)
		(SIMPX
			(VF dann)
			(LK ware)
			(MF
				(NX ich)
				[01;31m(VF[00m
					(PX
						(APPR um)
						(NX sieben uhr zehn))[01;31m)[00m))
		[01;31m(SIMPX[00m
			(SIMPX wurde ich losfliegen)
			(KON und)
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(NX
						(NX acht uhr)
						(ADJX zehn))[01;31m)[00m
				(LK ware)
				[01;31m(MF[00m
					(NX ich)
					(ADVX dann)
					[01;31m(PX[00m
						(PX in hannover)
						[01;36m(NF[00m
							(PX
								(APPRART am)
								(NX flughafen))[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(DM richtig)))
Step:Unary
{'subtrees': ['PX'], 'family': ['PX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'NN'), 'right siblings': [], 'left siblings': [(PX (APPR in) (NX (NE hannover)))], 'auto preterminal span': (24, 26), 'span': (24, 26), 'parent': 'PX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(NX halbe stunde)
		(DM ja)
		(DM sehr gut)
		(SIMPX
			(VF dann)
			(LK ware)
			(MF
				(NX ich)
				[01;31m(VF[00m
					(PX
						(APPR um)
						(NX sieben uhr zehn))[01;31m)[00m))
		[01;31m(SIMPX[00m
			(SIMPX wurde ich losfliegen)
			(KON und)
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(NX
						(NX acht uhr)
						(ADJX zehn))[01;31m)[00m
				(LK ware)
				[01;31m(MF[00m
					(NX ich)
					(ADVX dann)
					[01;31m(PX[00m
						(PX in hannover)
						(NF am flughafen)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(DM richtig)))
Step:Unary
{'subtrees': ['PX'], 'family': ['NX', 'VF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'APPR', 'CARD', 'NN', 'CARD'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (7, 12), 'span': (8, 12), 'left siblings': ['NX'], 'label': 'VF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(NX halbe stunde)
		(DM ja)
		(DM sehr gut)
		(SIMPX dann ware ich um sieben uhr zehn)
		[01;31m(SIMPX[00m
			(SIMPX wurde ich losfliegen)
			(KON und)
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(NX
						(NX acht uhr)
						(ADJX zehn))[01;31m)[00m
				(LK ware)
				[01;31m(MF[00m
					(NX ich)
					(ADVX dann)
					[01;31m(PX[00m
						(PX in hannover)
						(NF am flughafen)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(DM richtig)))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'KON', 'SIMPX'], 'family': ['NX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJA', 'NN', 'PTKANT', 'ADV', 'ADJD', 'ADV', 'VAFIN', 'PPER', 'APPR', 'CARD', 'NN', 'CARD', 'VAFIN', 'PPER', 'VVINF', 'KON', 'CARD', 'NN', 'CARD', 'VAFIN', 'PPER', 'ADV', 'APPR', 'NE', 'APPRART', 'NN', 'ITJ'), 'right siblings': ['DM'], 'parent': 'TURN', 'auto preterminal span': (0, 27), 'span': (12, 26), 'left siblings': ['NX', 'DM', 'DM', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(NX halbe stunde)
		(DM ja)
		(DM sehr gut)
		(SIMPX dann ware ich um sieben uhr zehn)
		(SIMPX wurde ich losfliegen)
		(KON und)
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				(NX
					(NX acht uhr)
					(ADJX zehn))[01;31m)[00m
			(LK ware)
			[01;31m(MF[00m
				(NX ich)
				(ADVX dann)
				[01;31m(PX[00m
					(PX in hannover)
					(NF am flughafen)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(DM richtig)))
Step:Unary
{'subtrees': ['NX'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'NN', 'CARD', 'VAFIN', 'PPER', 'ADV', 'APPR', 'NE', 'APPRART', 'NN'), 'right siblings': ['LK', 'MF'], 'parent': 'SIMPX', 'auto preterminal span': (16, 26), 'span': (16, 19), 'left siblings': [], 'label': 'VF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(NX halbe stunde)
		(DM ja)
		(DM sehr gut)
		(SIMPX dann ware ich um sieben uhr zehn)
		(SIMPX wurde ich losfliegen)
		(KON und)
		[01;31m(SIMPX[00m
			(NX acht uhr zehn)
			(LK ware)
			[01;31m(MF[00m
				(NX ich)
				(ADVX dann)
				[01;31m(PX[00m
					(PX in hannover)
					(NF am flughafen)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(DM richtig)))
Step:UNSET remove
{'subtrees': ['NX', 'LK', 'MF'], 'family': ['NX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'KON', 'SIMPX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJA', 'NN', 'PTKANT', 'ADV', 'ADJD', 'ADV', 'VAFIN', 'PPER', 'APPR', 'CARD', 'NN', 'CARD', 'VAFIN', 'PPER', 'VVINF', 'KON', 'CARD', 'NN', 'CARD', 'VAFIN', 'PPER', 'ADV', 'APPR', 'NE', 'APPRART', 'NN', 'ITJ'), 'right siblings': ['DM'], 'parent': 'TURN', 'auto preterminal span': (0, 27), 'span': (16, 26), 'left siblings': ['NX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'KON'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(NX halbe stunde)
		(DM ja)
		(DM sehr gut)
		(SIMPX dann ware ich um sieben uhr zehn)
		(SIMPX wurde ich losfliegen)
		(KON und)
		(NX acht uhr zehn)
		(LK ware)
		[01;31m(MF[00m
			(NX ich)
			(ADVX dann)
			[01;31m(PX[00m
				(PX in hannover)
				(NF am flughafen)[01;31m)[00m[01;31m)[00m
		(DM richtig)))
Step:PP Attachment
{'subtrees': ['NX', 'ADVX', 'PX'], 'family': ['NX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'KON', 'NX', 'LK', 'MF', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJA', 'NN', 'PTKANT', 'ADV', 'ADJD', 'ADV', 'VAFIN', 'PPER', 'APPR', 'CARD', 'NN', 'CARD', 'VAFIN', 'PPER', 'VVINF', 'KON', 'CARD', 'NN', 'CARD', 'VAFIN', 'PPER', 'ADV', 'APPR', 'NE', 'APPRART', 'NN', 'ITJ'), 'right siblings': ['DM'], 'parent': 'TURN', 'auto preterminal span': (0, 27), 'span': (20, 26), 'left siblings': ['NX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'KON', 'NX', 'LK'], 'label': 'MF', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(NX halbe stunde)
		(DM ja)
		(DM sehr gut)
		(SIMPX dann ware ich um sieben uhr zehn)
		(SIMPX wurde ich losfliegen)
		(KON und)
		(NX acht uhr zehn)
		(LK ware)
		(NX ich)
		(ADVX dann)
		[01;31m(PX[00m
			(PX in hannover)
			(NF am flughafen)[01;31m)[00m
		(DM richtig)))
Step:UNSET remove
{'subtrees': ['PX', 'NF'], 'family': ['NX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'KON', 'NX', 'LK', 'NX', 'ADVX', 'PX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJA', 'NN', 'PTKANT', 'ADV', 'ADJD', 'ADV', 'VAFIN', 'PPER', 'APPR', 'CARD', 'NN', 'CARD', 'VAFIN', 'PPER', 'VVINF', 'KON', 'CARD', 'NN', 'CARD', 'VAFIN', 'PPER', 'ADV', 'APPR', 'NE', 'APPRART', 'NN', 'ITJ'), 'right siblings': ['DM'], 'parent': 'TURN', 'auto preterminal span': (0, 27), 'span': (22, 26), 'left siblings': ['NX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'KON', 'NX', 'LK', 'NX', 'ADVX'], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP halbe stunde ja sehr gut dann ware ich um sieben uhr zehn wurde ich losfliegen und acht uhr zehn ware ich dann in hannover am flughafen richtig)

Sentence 670:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Clause Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM gut)
		(SIMPX wie sieht das mit den buchungsterminen aus)
		(SIMPX ist das generell moglich)
		[01;36m(SIMPX[00m
			(SIMPX das ich am siebten juli)
			[01;31m(SIMPX[00m
				(VF das)
				(LK ist)
				(MF montags)[01;31m)[00m[01;36m)[00m))
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['SIMPX', 'VF', 'LK', 'MF'], 'mover info': [('SIMPX', (12, 17))], 'old_family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'start left siblings': ['DM', 'SIMPX', 'SIMPX'], 'auto preterminals': ('ITJ', 'PWAV', 'VVFIN', 'PDS', 'APPR', 'ART', 'NN', 'PTKVZ', 'VAFIN', 'PDS', 'ADV', 'ADJD', 'KOUS', 'PPER', 'APPRART', 'ADJA', 'NN', 'PDS', 'VAFIN', 'ADV'), 'start right siblings': ['SIMPX'], 'end left siblings': [], 'auto preterminal span': (0, 20), 'movers': ['SIMPX'], 'old_parent': 'TURN', 'end right siblings': ['VF', 'LK', 'MF'], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP gut wie sieht das mit den buchungsterminen aus ist das generell moglich das ich am siebten juli das ist montags)

Sentence 671:
5 Initial errors
0 on fringe, 5 iterations
1 Error:Unary
1 Error:Modifier Attachment
1 Error:Unary
1 Error:Modifier Attachment
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP [01;33m(ADVX[00m
	(TURN
		[01;31m(DM[00m
			[01;31m(ADJX[00m
				(ADVX sehr)
				(ADJD gut)[01;31m)[00m[01;31m)[00m
		[01;31m(DM[00m
			[01;31m(ADJX[00m
				(ADVX sehr) [01;33mADVX)[00m
				(ADJD gut)[01;31m)[00m[01;31m)[00m
		(SIMPX vier tage mochte ich bleiben)
		(SIMPX das ware dann bis zum zehnten juli)
		(SIMPX konnen sie da fur mich eine buchung vornehmen)))
Step:Unary
{'subtrees': ['ADJX'], 'family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADJD', 'ADV', 'ADJD', 'CARD', 'NN', 'VMFIN', 'PPER', 'VVINF', 'PDS', 'VAFIN', 'ADV', 'APPR', 'APPRART', 'ADJA', 'NN', 'VMFIN', 'PPER', 'ADV', 'APPR', 'PPER', 'ART', 'NN', 'VVINF'), 'right siblings': ['DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 24), 'span': (0, 2), 'left siblings': [], 'label': 'DM', 'classified_type': 'Unary', 'type': 'remove'}
(TOP [01;33m(ADVX[00m
	(TURN
		[01;31m(ADJX[00m
			(ADVX sehr)
			(ADJD gut)[01;31m)[00m
		[01;31m(DM[00m
			[01;31m(ADJX[00m
				(ADVX sehr) [01;33mADVX)[00m
				(ADJD gut)[01;31m)[00m[01;31m)[00m
		(SIMPX vier tage mochte ich bleiben)
		(SIMPX das ware dann bis zum zehnten juli)
		(SIMPX konnen sie da fur mich eine buchung vornehmen)))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'ADJD'], 'family': ['ADJX', 'DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADJD', 'ADV', 'ADJD', 'CARD', 'NN', 'VMFIN', 'PPER', 'VVINF', 'PDS', 'VAFIN', 'ADV', 'APPR', 'APPRART', 'ADJA', 'NN', 'VMFIN', 'PPER', 'ADV', 'APPR', 'PPER', 'ART', 'NN', 'VVINF'), 'right siblings': ['DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 24), 'span': (0, 2), 'left siblings': [], 'label': 'ADJX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP [01;33m(ADVX[00m
	(TURN
		(ADVX sehr)
		(ADJD gut)
		[01;31m(DM[00m
			[01;31m(ADJX[00m
				(ADVX sehr) [01;33mADVX)[00m
				(ADJD gut)[01;31m)[00m[01;31m)[00m
		(SIMPX vier tage mochte ich bleiben)
		(SIMPX das ware dann bis zum zehnten juli)
		(SIMPX konnen sie da fur mich eine buchung vornehmen)))
Step:Unary
{'subtrees': ['ADJX'], 'family': ['ADVX', 'ADJD', 'DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADJD', 'ADV', 'ADJD', 'CARD', 'NN', 'VMFIN', 'PPER', 'VVINF', 'PDS', 'VAFIN', 'ADV', 'APPR', 'APPRART', 'ADJA', 'NN', 'VMFIN', 'PPER', 'ADV', 'APPR', 'PPER', 'ART', 'NN', 'VVINF'), 'right siblings': ['SIMPX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 24), 'span': (2, 4), 'left siblings': ['ADVX', 'ADJD'], 'label': 'DM', 'classified_type': 'Unary', 'type': 'remove'}
(TOP [01;33m(ADVX[00m
	(TURN
		(ADVX sehr)
		(ADJD gut)
		[01;31m(ADJX[00m
			(ADVX sehr) [01;33mADVX)[00m
			(ADJD gut)[01;31m)[00m
		(SIMPX vier tage mochte ich bleiben)
		(SIMPX das ware dann bis zum zehnten juli)
		(SIMPX konnen sie da fur mich eine buchung vornehmen)))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'ADJD'], 'family': ['ADVX', 'ADJD', 'ADJX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADJD', 'ADV', 'ADJD', 'CARD', 'NN', 'VMFIN', 'PPER', 'VVINF', 'PDS', 'VAFIN', 'ADV', 'APPR', 'APPRART', 'ADJA', 'NN', 'VMFIN', 'PPER', 'ADV', 'APPR', 'PPER', 'ART', 'NN', 'VVINF'), 'right siblings': ['SIMPX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 24), 'span': (2, 4), 'left siblings': ['ADVX', 'ADJD'], 'label': 'ADJX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		[01;36m(ADVX[00m
			(ADVX sehr)
			(ADJD gut)
			(ADVX sehr)[01;36m)[00m
		(ADJD gut)
		(SIMPX vier tage mochte ich bleiben)
		(SIMPX das ware dann bis zum zehnten juli)
		(SIMPX konnen sie da fur mich eine buchung vornehmen)))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'ADJD', 'ADVX'], 'family': ['ADVX', 'ADJD', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADJD', 'ADV'), 'right siblings': [(ADJD gut), (SIMPX (VF (NX (ADJX (CARD vier)) (NN tage))) (LK (VXFIN (VMFIN mochte))) (MF (NX (PPER ich))) (VC (VXINF (VVINF bleiben)))), (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VAFIN ware))) (MF (ADVX (ADV dann)) (PX (APPR bis) (PX (APPRART zum) (NX (ADJX (ADJA zehnten)) (NN juli)))))), (SIMPX (LK (VXFIN (VMFIN konnen))) (MF (NX (PPER sie)) (ADVX (ADV da)) (PX (APPR fur) (NX (PPER mich))) (NX (ART eine) (NN buchung))) (VC (VXINF (VVINF vornehmen))))], 'left siblings': [], 'auto preterminal span': (0, 3), 'span': (0, 3), 'parent': 'TURN', 'label': 'ADVX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP sehr gut sehr gut vier tage mochte ich bleiben das ware dann bis zum zehnten juli konnen sie da fur mich eine buchung vornehmen)

Sentence 672:
2 Initial errors
0 on fringe, 1 iterations
2 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX das ich dann abends wieder zuruckfliegen kann)
		[01;31m(ADVX[00m
			(ADVX ansonsten)
			(ADVX vielleicht)
			(ADVX auch)
			(PX mit dem zug)
			[01;36m(ADVX[00m
				(ADVX abends)
				(ADVX zuruck)[01;36m)[00m[01;31m)[00m
		(SIMPX wenn das mit dem flugzeug)))
Step:PP Attachment
{'new_parent': 'TURN', 'new_family': ['SIMPX', 'ADVX', 'ADVX', 'ADVX', 'PX', 'ADVX', 'SIMPX'], 'mover info': [('ADVX', (7, 8)), ('ADVX', (8, 9)), ('ADVX', (9, 10)), ('PX', (10, 13))], 'old_family': ['ADVX', 'ADVX', 'ADVX', 'PX', 'ADVX', 'ADVX'], 'start left siblings': [], 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'ADV', 'ADV', 'VVINF', 'VMFIN', 'ADV', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'ADV', 'KOUS', 'PDS', 'APPR', 'ART', 'NN'), 'start right siblings': ['ADVX', 'ADVX'], 'end left siblings': ['SIMPX'], 'auto preterminal span': (0, 20), 'movers': ['ADVX', 'ADVX', 'ADVX', 'PX'], 'old_parent': 'ADVX', 'end right siblings': ['ADVX', 'SIMPX'], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP das ich dann abends wieder zuruckfliegen kann ansonsten vielleicht auch mit dem zug abends zuruck wenn das mit dem flugzeug)

Sentence 673:
5 Initial errors
0 on fringe, 3 iterations
2 Error:Single Word Phrase
2 Error:Single Word Phrase
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ah)
		(SIMPX ist naturlich sehr kompliziert)
		(SIMPX
			(VF wann)
			(LK konnten)
			(MF sie denn genau)
			(VC sagen)
			(NF
				(SIMPX
					(C ob)
					(MF
						(NX ich)
						(PX an dem abend)
						[01;36m(ADVX[00m [01;31m(ADJX[00m
							(ADJD exakt)[01;31m)[00m[01;36m)[00m
						(PX nach hause))
					(VC fahren kann))))
		[01;36m(NX[00m [01;36m(DM[00m [01;31m(VXINF[00m
			(VVINF fliegen)[01;31m)[00m[01;36m)[00m[01;36m)[00m))
Step:Single Word Phrase
{'family': ['NX', 'PX', 'ADVX', 'PX'], 'auto preterminal span': (16, 17), 'span': (16, 17), 'subtrees': ['ADJD'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('ADJD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'ADVX')}
(TOP
	(TURN
		(DM ah)
		(SIMPX ist naturlich sehr kompliziert)
		(SIMPX wann konnten sie denn genau sagen ob ich an dem abend exakt nach hause fahren kann)
		[01;36m(NX[00m [01;36m(DM[00m [01;31m(VXINF[00m
			(VVINF fliegen)[01;31m)[00m[01;36m)[00m[01;36m)[00m))
Step:Single Word Phrase
{'family': ['DM', 'SIMPX', 'SIMPX', 'DM'], 'auto preterminal span': (21, 22), 'span': (21, 22), 'subtrees': ['VVINF'], 'parent': 'TURN', 'over_word': True, 'auto preterminals': ('VVINF',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VXINF', 'DM')}
(TOP
	(TURN
		(DM ah)
		(SIMPX ist naturlich sehr kompliziert)
		(SIMPX wann konnten sie denn genau sagen ob ich an dem abend exakt nach hause fahren kann)
		[01;36m(NX[00m
			(DM
				(VVINF fliegen))[01;36m)[00m))
Step:Unary
{'subtrees': ['DM'], 'family': ['DM', 'SIMPX', 'SIMPX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVINF',), 'right siblings': [], 'left siblings': [(DM (ITJ ah)), (SIMPX (LK (VXFIN (VAFIN ist))) (MF (ADVX (ADV naturlich)) (ADJX (ADVX (ADV sehr)) (ADJD kompliziert)))), (SIMPX (VF (PX (PWAV wann))) (LK (VXFIN (VMFIN konnten))) (MF (NX (PPER sie)) (ADVX (ADV denn)) (ADVX (ADV genau))) (VC (VXINF (VVINF sagen))) (NF (SIMPX (C (KOUS ob)) (MF (NX (PPER ich)) (PX (APPR an) (NX (ART dem) (NN abend))) (ADVX (ADJD exakt)) (PX (APPR nach) (NX (NN hause)))) (VC (VXINF (VVINF fahren)) (VXFIN (VMFIN kann))))))], 'auto preterminal span': (21, 22), 'span': (21, 22), 'parent': 'TURN', 'label': 'NX', 'classified_type': 'Unary', 'type': 'add'}
(TOP ah ist naturlich sehr kompliziert wann konnten sie denn genau sagen ob ich an dem abend exakt nach hause fahren kann fliegen)

Sentence 674:
0 Initial errors
0 on fringe, 0 iterations

Sentence 675:
0 Initial errors
0 on fringe, 0 iterations

Sentence 676:
0 Initial errors
0 on fringe, 0 iterations

Sentence 677:
7 Initial errors
0 on fringe, 4 iterations
3 Error:Clause Attachment
2 Error:Modifier Attachment
1 Error:UNSET add
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM sehr gut)
		(SIMPX [01;33m(SIMPX[00m
			(VF ich)
			(LK wurde)
			[01;31m(MF[00m
				[01;36m(MF[00m
					(NX sie)
					(ADVX dann) [01;33mSIMPX)[00m[01;36m)[00m
				[01;31m(SIMPX[00m [01;33m(SIMPX[00m
					(VF ich)
					(LK sage)
					[01;31m(MF[00m [01;33m(MF[00m
						(ADVX
							(ADV mal))[01;31m)[00m[01;31m)[00m
				(ADVX morgen)[01;31m)[00m [01;33mMF)[00m
			(VC zuruckrufen)
			(NF das wir alles festmachen)))) [01;33mSIMPX)[00m
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'SIMPX', 'ADVX', 'VC', 'NF'], 'mover info': [('SIMPX', (6, 9)), ('ADVX', (9, 10))], 'old_family': ['NX', 'ADVX', 'SIMPX', 'ADVX'], 'start left siblings': ['NX', 'ADVX'], 'auto preterminals': ('PPER', 'VAFIN', 'PPER', 'ADV', 'PPER', 'VVFIN', 'ADV', 'ADV', 'VVINF', 'KOUS', 'PPER', 'PIS', 'VVFIN'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (2, 15), 'adding node already present': False, 'movers': ['SIMPX', 'ADVX'], 'old_parent': 'MF', 'added and moved': True, 'end right siblings': ['VC', 'NF'], 'classified_type': 'Clause Attachment', 'type': 'move', 'added label': 'SIMPX'}
(TOP
	(TURN
		(DM sehr gut)
		(SIMPX
			[01;36m(SIMPX[00m
				(VF ich)
				(LK wurde)
				(MF sie dann)[01;36m)[00m
			(SIMPX
				[01;31m(SIMPX[00m
					(VF ich)
					(LK sage)
					[01;31m(MF[00m [01;33m(MF[00m
						(ADVX
							(ADV mal))[01;31m)[00m[01;31m)[00m
				(ADVX morgen) [01;33mMF)[00m
				(VC zuruckrufen)
				(NF das wir alles festmachen)))))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['ADVX', 'ADVX'], 'mover info': [('ADVX', (9, 10))], 'old_family': ['SIMPX', 'ADVX', 'VC', 'NF'], 'start left siblings': ['SIMPX'], 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'ADV', 'VVINF', 'KOUS', 'PPER', 'PIS', 'VVFIN'), 'start right siblings': ['VC', 'NF'], 'end left siblings': ['ADVX'], 'auto preterminal span': (6, 15), 'movers': ['ADVX'], 'old_parent': 'SIMPX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM sehr gut)
		(SIMPX
			[01;36m(SIMPX[00m
				(VF ich)
				(LK wurde)
				(MF sie dann)[01;36m)[00m
			(SIMPX
				[01;31m(SIMPX[00m
					(VF ich)
					(LK sage)
					(MF mal morgen)[01;31m)[00m
				(VC zuruckrufen)
				(NF das wir alles festmachen)))))
Step:UNSET add
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'PPER', 'ADV'), 'right siblings': [(SIMPX (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN sage))) (MF (ADVX (ADV mal)) (ADVX (ADV morgen)))) (VC (VXINF (VVINF zuruckrufen))) (NF (SIMPX (C (KOUS das)) (MF (NX (PPER wir)) (NX (PIS alles))) (VC (VXFIN (VVFIN festmachen))))))], 'left siblings': [], 'auto preterminal span': (2, 6), 'span': (2, 6), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM sehr gut)
		(SIMPX
			(SIMPX ich wurde sie dann)
			(SIMPX
				[01;31m(SIMPX[00m
					(VF ich)
					(LK sage)
					(MF mal morgen)[01;31m)[00m
				(VC zuruckrufen)
				(NF das wir alles festmachen)))))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['SIMPX', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'ADV', 'VVINF', 'KOUS', 'PPER', 'PIS', 'VVFIN'), 'right siblings': ['VC', 'NF'], 'parent': 'SIMPX', 'auto preterminal span': (6, 15), 'span': (6, 10), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP sehr gut ich wurde sie dann ich sage mal morgen zuruckrufen das wir alles festmachen)

Sentence 678:
0 Initial errors
0 on fringe, 0 iterations

Sentence 679:
0 Initial errors
0 on fringe, 0 iterations

Sentence 680:
16 Initial errors
0 on fringe, 9 iterations
3 Error:Co-ordination
2 Error:Single Word Phrase
2 Error:Different label
2 Error:Single Word Phrase
2 Error:VP Attachment
2 Error:UNSET move
1 Error:Unary
1 Error:UNSET add
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX und zugfahren dauert mir vielleicht auch ein bischen zu lange)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF ich)
			(LK habe)
			(MF jetzt hier den plan vor mir)[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;36m(VXINF[00m [01;36m(VC[00m [01;31m(VF[00m
				[01;31m(NX[00m
					(NN zugdauer)[01;31m)[00m[01;31m)[00m [01;33mSIMPX)[00m[01;36m)[00m[01;36m)[00m
			[01;33m(SIMPX[00m (LK dauert)
			[01;33m(NX (MF[00m (MF drei stunden zwanzig minuten)[01;31m)[00m
		[01;31m(NX[00m
			(KON und)
			[01;36m(LKM[00m
				[01;36m(LK[00m [01;36m(VXFIN[00m [01;31m(NX[00m
					(NN fliegen)[01;31m)[00m[01;36m)[00m[01;36m)[00m
				[01;36m(MF[00m
					(NX
						(ART eine)
						(NN stunde))[01;36m)[00m[01;36m)[00m[01;31m)[00m)) [01;33mMF) NX) SIMPX)[00m
Step:Co-ordination
{'new_parent': 'NX', 'new_family': ['MF', 'KON', 'NX', 'NX'], 'mover info': [('MF', (20, 24))], 'old_family': ['VF', 'LK', 'MF'], 'start left siblings': ['VF', 'LK'], 'auto preterminals': ('KON', 'NN', 'VVFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'PTKA', 'ADJD', 'PPER', 'VAFIN', 'ADV', 'ADV', 'ART', 'NN', 'APPR', 'PRF', 'NN', 'VVFIN', 'CARD', 'NN', 'CARD', 'NN', 'KON', 'NN', 'ART', 'NN'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 28), 'adding node already present': False, 'movers': ['MF'], 'old_parent': 'SIMPX', 'added and moved': True, 'end right siblings': ['KON', 'NX', 'NX'], 'classified_type': 'Co-ordination', 'type': 'move', 'added label': 'MF'}
(TOP
	(TURN
		(SIMPX und zugfahren dauert mir vielleicht auch ein bischen zu lange)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF ich)
			(LK habe)
			(MF jetzt hier den plan vor mir)[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;36m(VXINF[00m [01;36m(VC[00m [01;31m(VF[00m
				[01;31m(NX[00m
					(NN zugdauer)[01;31m)[00m[01;31m)[00m [01;33mSIMPX)[00m[01;36m)[00m[01;36m)[00m
			[01;33m(SIMPX[00m (LK dauert)[01;31m)[00m
		(MF
			(NX
				(MF drei stunden zwanzig minuten)
				(KON und)
				[01;36m(LKM[00m
					[01;36m(LK[00m [01;36m(VXFIN[00m [01;31m(NX[00m
						(NN fliegen)[01;31m)[00m[01;36m)[00m[01;36m)[00m
					[01;36m(MF[00m
						(NX
							(ART eine)
							(NN stunde))[01;36m)[00m[01;36m)[00m)))) [01;33mSIMPX)[00m
Step:Single Word Phrase
{'family': ['VC'], 'auto preterminal span': (18, 19), 'span': (18, 19), 'subtrees': ['NN'], 'parent': 'VF', 'over_word': True, 'auto preterminals': ('NN',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('NX', 'VC')}
(TOP
	(TURN
		(SIMPX und zugfahren dauert mir vielleicht auch ein bischen zu lange)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF ich)
			(LK habe)
			(MF jetzt hier den plan vor mir)[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;36m(VXINF[00m [01;31m(VF[00m
				(VC
					(NN zugdauer))[01;31m)[00m [01;33mSIMPX)[00m[01;36m)[00m
			[01;33m(SIMPX[00m (LK dauert)[01;31m)[00m
		(MF
			(NX
				(MF drei stunden zwanzig minuten)
				(KON und)
				[01;36m(LKM[00m
					[01;36m(LK[00m [01;36m(VXFIN[00m [01;31m(NX[00m
						(NN fliegen)[01;31m)[00m[01;36m)[00m[01;36m)[00m
					[01;36m(MF[00m
						(NX
							(ART eine)
							(NN stunde))[01;36m)[00m[01;36m)[00m)))) [01;33mSIMPX)[00m
Step:Different label
{'family': ['VXINF', 'LK'], 'auto preterminal span': (18, 19), 'span': (18, 19), 'subtrees': ['VC'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('NN',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('VF', 'VXINF')}
(TOP
	(TURN
		(SIMPX und zugfahren dauert mir vielleicht auch ein bischen zu lange)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF ich)
			(LK habe)
			(MF jetzt hier den plan vor mir)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VXINF zugdauer) [01;33mSIMPX)[00m
			[01;33m(SIMPX[00m (LK dauert)[01;31m)[00m
		(MF
			(NX
				(MF drei stunden zwanzig minuten)
				(KON und)
				[01;36m(LKM[00m
					[01;36m(LK[00m [01;36m(VXFIN[00m [01;31m(NX[00m
						(NN fliegen)[01;31m)[00m[01;36m)[00m[01;36m)[00m
					[01;36m(MF[00m
						(NX
							(ART eine)
							(NN stunde))[01;36m)[00m[01;36m)[00m)))) [01;33mSIMPX)[00m
Step:Single Word Phrase
{'family': ['MF', 'KON', 'VXFIN', 'NX'], 'auto preterminal span': (25, 26), 'span': (25, 26), 'subtrees': ['NN'], 'parent': 'NX', 'over_word': True, 'auto preterminals': ('NN',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('NX', 'VXFIN')}
(TOP
	(TURN
		(SIMPX und zugfahren dauert mir vielleicht auch ein bischen zu lange)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF ich)
			(LK habe)
			(MF jetzt hier den plan vor mir)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VXINF zugdauer) [01;33mSIMPX)[00m
			[01;33m(SIMPX[00m (LK dauert)[01;31m)[00m
		(MF
			(NX
				(MF drei stunden zwanzig minuten)
				(KON und)
				[01;36m(LKM[00m
					[01;36m(LK[00m
						(VXFIN
							(NN fliegen))[01;36m)[00m
					[01;36m(MF[00m
						(NX
							(ART eine)
							(NN stunde))[01;36m)[00m[01;36m)[00m)))) [01;33mSIMPX)[00m
Step:VP Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'VXINF'], 'mover info': [('VXINF', (18, 19))], 'old_family': ['VXINF', 'LK'], 'start left siblings': [], 'auto preterminals': ('KON', 'NN', 'VVFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'PTKA', 'ADJD', 'PPER', 'VAFIN', 'ADV', 'ADV', 'ART', 'NN', 'APPR', 'PRF', 'NN', 'VVFIN', 'CARD', 'NN', 'CARD', 'NN', 'KON', 'NN', 'ART', 'NN'), 'start right siblings': ['LK'], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (0, 28), 'movers': ['VXINF'], 'old_parent': 'SIMPX', 'POS confusion': ('NN', 'NN'), 'end right siblings': [], 'classified_type': 'VP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SIMPX und zugfahren dauert mir vielleicht auch ein bischen zu lange)
		(SIMPX ich habe jetzt hier den plan vor mir zugdauer)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(LK
					(VXFIN
						(VVFIN dauert)))[01;31m)[00m
			(MF
				(NX
					(MF drei stunden zwanzig minuten)
					(KON und)
					[01;36m(LKM[00m
						[01;36m(LK[00m
							(VXFIN
								(NN fliegen))[01;36m)[00m
						[01;36m(MF[00m
							(NX
								(ART eine)
								(NN stunde))[01;36m)[00m[01;36m)[00m))[01;36m)[00m))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['LK', 'MF'], 'mover info': [('MF', (20, 28))], 'old_family': ['SIMPX', 'SIMPX', 'SIMPX', 'MF'], 'start left siblings': ['SIMPX', 'SIMPX', 'SIMPX'], 'auto preterminals': ('KON', 'NN', 'VVFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'PTKA', 'ADJD', 'PPER', 'VAFIN', 'ADV', 'ADV', 'ART', 'NN', 'APPR', 'PRF', 'NN', 'VVFIN', 'CARD', 'NN', 'CARD', 'NN', 'KON', 'NN', 'ART', 'NN'), 'start right siblings': [], 'end left siblings': ['LK'], 'auto preterminal span': (0, 28), 'movers': ['MF'], 'old_parent': 'TURN', 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SIMPX und zugfahren dauert mir vielleicht auch ein bischen zu lange)
		(SIMPX ich habe jetzt hier den plan vor mir zugdauer)
		(SIMPX
			(LK dauert)
			(MF
				(NX
					(MF drei stunden zwanzig minuten)
					(KON und)
					[01;36m(LKM[00m
						[01;36m(LK[00m
							(VXFIN
								(NN fliegen))[01;36m)[00m
						[01;36m(MF[00m
							(NX
								(ART eine)
								(NN stunde))[01;36m)[00m[01;36m)[00m)))))
Step:Unary
{'subtrees': ['VXFIN'], 'family': ['MF', 'KON', 'LK', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN',), 'right siblings': [(NX (ART eine) (NN stunde))], 'left siblings': [(MF (NX (NX (ADJX (CARD drei)) (NN stunden)) (NX (ADJX (CARD zwanzig)) (NN minuten)))), (KON und)], 'auto preterminal span': (25, 26), 'span': (25, 26), 'parent': 'NX', 'label': 'LK', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SIMPX und zugfahren dauert mir vielleicht auch ein bischen zu lange)
		(SIMPX ich habe jetzt hier den plan vor mir zugdauer)
		(SIMPX
			(LK dauert)
			(MF
				(NX
					(MF drei stunden zwanzig minuten)
					(KON und)
					[01;36m(LKM[00m
						(LK fliegen)
						[01;36m(MF[00m
							(NX
								(ART eine)
								(NN stunde))[01;36m)[00m[01;36m)[00m)))))
Step:UNSET add
{'subtrees': ['LK', 'NX'], 'family': ['MF', 'KON', 'LKM'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'ART', 'NN'), 'right siblings': [], 'left siblings': [(MF (NX (NX (ADJX (CARD drei)) (NN stunden)) (NX (ADJX (CARD zwanzig)) (NN minuten)))), (KON und)], 'auto preterminal span': (25, 28), 'span': (25, 28), 'parent': 'NX', 'label': 'LKM', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SIMPX und zugfahren dauert mir vielleicht auch ein bischen zu lange)
		(SIMPX ich habe jetzt hier den plan vor mir zugdauer)
		(SIMPX
			(LK dauert)
			(MF
				(NX
					(MF drei stunden zwanzig minuten)
					(KON und)
					(LKM
						(LK fliegen)
						[01;36m(MF[00m
							(NX
								(ART eine)
								(NN stunde))[01;36m)[00m))))))
Step:Unary
{'subtrees': ['NX'], 'family': ['LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN'), 'right siblings': [], 'left siblings': [(LK (VXFIN (NN fliegen)))], 'auto preterminal span': (26, 28), 'span': (26, 28), 'parent': 'LKM', 'label': 'MF', 'classified_type': 'Unary', 'type': 'add'}
(TOP und zugfahren dauert mir vielleicht auch ein bischen zu lange ich habe jetzt hier den plan vor mir zugdauer dauert drei stunden zwanzig minuten und fliegen eine stunde)

Sentence 681:
0 Initial errors
0 on fringe, 0 iterations

Sentence 682:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Different label
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM also)
		(SIMPX
			[01;36m(VF[00m [01;31m(LV[00m
				(SIMPX
					(C wenn)
					(MF es ihnen da nicht)
					(VC past))[01;31m)[00m[01;36m)[00m
			(LK konnen)
			(MF wir auch am zweiten juliwochenende)
			(VC fahren))
		(SIMPX ich bin da flexibler)))
Step:Different label
{'family': ['VF', 'LK', 'MF', 'VC'], 'auto preterminal span': (2, 8), 'span': (2, 8), 'subtrees': ['SIMPX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('KOUS', 'PPER', 'PPER', 'ADV', 'PTKNEG', 'VVFIN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('LV', 'VF')}
(TOP ja also wenn es ihnen da nicht past konnen wir auch am zweiten juliwochenende fahren ich bin da flexibler)

Sentence 683:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX mussen wir uns auf das hotel einigen)
		(SIMPX
			(VF ich)
			(LK wurde)
			(VC sagen)
			(NF
				(ADJX
					(ADJX am besten)
					[01;36m(NX[00m
						(ADJD zentral)[01;36m)[00m)))))
Step:Single Word Phrase
{'subtrees': ['ADJD'], 'family': ['ADJX', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADJD',), 'right siblings': [], 'left siblings': [(ADJX (PTKA am) (ADJD besten))], 'auto preterminal span': (13, 14), 'span': (13, 14), 'parent': 'ADJX', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP ja mussen wir uns auf das hotel einigen ich wurde sagen am besten zentral)

Sentence 684:
0 Initial errors
0 on fringe, 0 iterations

Sentence 685:
6 Initial errors
0 on fringe, 5 iterations
2 Error:Single Word Phrase
1 Error:PP Attachment
1 Error:Unary
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX machen sie)
		(SIMPX
			(VF ich)
			(LK weis)
			(MF nicht)
			(NF
				(SIMPX
					(C ob)
					(MF
						[01;36m(MF[00m
							(NX es)
							(ADVX vielleicht)
							(ADVX auch)
							(PX uber das reiseburo)[01;36m)[00m
						[01;36m(VXINF[00m [01;31m(ADJX[00m
							(ADJD moglich)[01;31m)[00m[01;36m)[00m)
					[01;31m(VC[00m
						(VXFIN
							(VAFIN ware))[01;31m)[00m)))
		(SIMPX ich konnte ja mal nachfragen)
		(SIMPX
			[01;31m(VF[00m
				[01;31m(SIMPX[00m
					(KOORD und)
					(C wenn)
					(MF nicht)[01;31m)[00m[01;31m)[00m
			(LK konnen)
			(MF wir ja)
			(VC weitersehen))
		(DM ja)
		(SIMPX das ware vielleicht das beste)))
Step:Single Word Phrase
{'family': ['NX', 'ADVX', 'ADVX', 'PX', 'VXINF'], 'auto preterminal span': (12, 13), 'span': (12, 13), 'subtrees': ['ADJD'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('ADJD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'VXINF')}
(TOP
	(TURN
		(SIMPX machen sie)
		(SIMPX
			(VF ich)
			(LK weis)
			(MF nicht)
			(NF
				(SIMPX
					(C ob)
					(MF
						[01;36m(MF[00m
							(NX es)
							(ADVX vielleicht)
							(ADVX auch)
							(PX uber das reiseburo)[01;36m)[00m
						(VXINF moglich))
					[01;31m(VC[00m
						(VXFIN
							(VAFIN ware))[01;31m)[00m)))
		(SIMPX ich konnte ja mal nachfragen)
		(SIMPX
			[01;31m(VF[00m
				[01;31m(SIMPX[00m
					(KOORD und)
					(C wenn)
					(MF nicht)[01;31m)[00m[01;31m)[00m
			(LK konnen)
			(MF wir ja)
			(VC weitersehen))
		(DM ja)
		(SIMPX das ware vielleicht das beste)))
Step:PP Attachment
{'subtrees': ['NX', 'ADVX', 'ADVX', 'PX'], 'family': ['MF', 'VXINF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV', 'ADV', 'APPR', 'ART', 'NN'), 'right siblings': [(VXINF (ADJD moglich))], 'left siblings': [], 'auto preterminal span': (6, 12), 'span': (6, 12), 'parent': 'MF', 'label': 'MF', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(SIMPX machen sie)
		(SIMPX
			(VF ich)
			(LK weis)
			(MF nicht)
			(NF
				(SIMPX
					(C ob)
					(MF es vielleicht auch uber das reiseburo moglich)
					[01;31m(VC[00m
						(VXFIN
							(VAFIN ware))[01;31m)[00m)))
		(SIMPX ich konnte ja mal nachfragen)
		(SIMPX
			[01;31m(VF[00m
				[01;31m(SIMPX[00m
					(KOORD und)
					(C wenn)
					(MF nicht)[01;31m)[00m[01;31m)[00m
			(LK konnen)
			(MF wir ja)
			(VC weitersehen))
		(DM ja)
		(SIMPX das ware vielleicht das beste)))
Step:Unary
{'subtrees': ['VXFIN'], 'family': ['C', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'ADJD', 'VAFIN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (5, 14), 'span': (13, 14), 'left siblings': ['C', 'MF'], 'label': 'VC', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX machen sie)
		(SIMPX ich weis nicht ob es vielleicht auch uber das reiseburo moglich ware)
		(SIMPX ich konnte ja mal nachfragen)
		(SIMPX
			[01;31m(VF[00m
				[01;31m(SIMPX[00m
					(KOORD und)
					(C wenn)
					(MF nicht)[01;31m)[00m[01;31m)[00m
			(LK konnen)
			(MF wir ja)
			(VC weitersehen))
		(DM ja)
		(SIMPX das ware vielleicht das beste)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['VF', 'LK', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'KOUS', 'PTKNEG', 'VMFIN', 'PPER', 'ADV', 'VVINF'), 'right siblings': ['LK', 'MF', 'VC'], 'parent': 'SIMPX', 'auto preterminal span': (19, 26), 'span': (19, 22), 'left siblings': [], 'label': 'VF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX machen sie)
		(SIMPX ich weis nicht ob es vielleicht auch uber das reiseburo moglich ware)
		(SIMPX ich konnte ja mal nachfragen)
		(SIMPX
			[01;31m(SIMPX[00m
				(KOORD und)
				(C wenn)
				(MF nicht)[01;31m)[00m
			(LK konnen)
			(MF wir ja)
			(VC weitersehen))
		(DM ja)
		(SIMPX das ware vielleicht das beste)))
Step:UNSET remove
{'subtrees': ['KOORD', 'C', 'MF'], 'family': ['SIMPX', 'LK', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'KOUS', 'PTKNEG', 'VMFIN', 'PPER', 'ADV', 'VVINF'), 'right siblings': ['LK', 'MF', 'VC'], 'parent': 'SIMPX', 'auto preterminal span': (19, 26), 'span': (19, 22), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP machen sie ich weis nicht ob es vielleicht auch uber das reiseburo moglich ware ich konnte ja mal nachfragen und wenn nicht konnen wir ja weitersehen ja das ware vielleicht das beste)

Sentence 686:
12 Initial errors
0 on fringe, 8 iterations
4 Error:PP Attachment
2 Error:Modifier Attachment
1 Error:UNSET remove
1 Error:Unary
1 Error:Unary
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(PX mit den veranstaltungen)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK sehe)
			[01;31m(MF[00m [01;33m(MF[00m
				(ADVX
					(ADV gerade))[01;31m)[00m
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					[01;31m(VF[00m
						[01;31m(PX[00m
							[01;31m(PX[00m
								(ADVX genau)
								[01;36m(PX[00m
									(APPR in)
									(NX der woche)[01;36m)[00m[01;31m)[00m [01;33mMF)[00m
							[01;36m(PX[00m [01;31m(R[00m
								(C in der)
								(MF wir da)
								(VC sein werden)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
					(LK ist)
					(MF das schutzenfest)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX
			(VF das)
			(LK wird)
			(MF
				(NX
					(KOKOM als)
					[01;31m(NX[00m
						(ADJX grostes)
						(NN schutzenfest)[01;31m)[00m
					(NX der welt)))
			(VC deklariert))
		(SIMPX da konnten wir mal vorbeischauen)))
Step:PP Attachment
{'new_parent': 'MF', 'new_family': ['ADVX', 'PX'], 'mover info': [('PX', (7, 11))], 'old_family': ['PX', 'R'], 'start left siblings': [], 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'APPR', 'PRELS', 'PPER', 'ADV', 'VAINF', 'VAFIN', 'VAFIN', 'ART', 'NN'), 'start right siblings': ['R'], 'end left siblings': ['ADVX'], 'auto preterminal span': (4, 20), 'movers': ['PX'], 'old_parent': 'PX', 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(PX mit den veranstaltungen)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK sehe)
			(MF
				(ADVX gerade)
				[01;31m(PX[00m
					(ADVX genau)
					[01;36m(PX[00m
						(APPR in)
						(NX der woche)[01;36m)[00m[01;31m)[00m)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					[01;31m(VF[00m
						(PX
							[01;31m(R[00m
								(C in der)
								(MF wir da)
								(VC sein werden)[01;31m)[00m)[01;31m)[00m
					(LK ist)
					(MF das schutzenfest)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX
			(VF das)
			(LK wird)
			(MF
				(NX
					(KOKOM als)
					[01;31m(NX[00m
						(ADJX grostes)
						(NN schutzenfest)[01;31m)[00m
					(NX der welt)))
			(VC deklariert))
		(SIMPX da konnten wir mal vorbeischauen)))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['ADVX', 'ADVX', 'PX'], 'mover info': [('ADVX', (7, 8))], 'old_family': ['ADVX', 'APPR', 'NX'], 'start left siblings': [], 'auto preterminals': ('ADV', 'ADV', 'APPR', 'ART', 'NN'), 'start right siblings': ['APPR', 'NX'], 'end left siblings': ['ADVX'], 'auto preterminal span': (6, 11), 'movers': ['ADVX'], 'old_parent': 'PX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['PX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(PX mit den veranstaltungen)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK sehe)
			(MF gerade genau in der woche)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					[01;31m(VF[00m
						(PX
							[01;31m(R[00m
								(C in der)
								(MF wir da)
								(VC sein werden)[01;31m)[00m)[01;31m)[00m
					(LK ist)
					(MF das schutzenfest)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX
			(VF das)
			(LK wird)
			(MF
				(NX
					(KOKOM als)
					[01;31m(NX[00m
						(ADJX grostes)
						(NN schutzenfest)[01;31m)[00m
					(NX der welt)))
			(VC deklariert))
		(SIMPX da konnten wir mal vorbeischauen)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'NF'], 'family': ['DM', 'PX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'APPR', 'ART', 'NN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'APPR', 'PRELS', 'PPER', 'ADV', 'VAINF', 'VAFIN', 'VAFIN', 'ART', 'NN', 'PDS', 'VAFIN', 'KOKOM', 'ADJA', 'NN', 'ART', 'NN', 'VVPP', 'ADV', 'VMFIN', 'PPER', 'ADV', 'VVINF'), 'right siblings': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 33), 'span': (4, 20), 'left siblings': ['DM', 'PX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(PX mit den veranstaltungen)
		(VF ich)
		(LK sehe)
		(MF gerade genau in der woche)
		[01;31m(NF[00m
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(PX
						[01;31m(R[00m
							(C in der)
							(MF wir da)
							(VC sein werden)[01;31m)[00m)[01;31m)[00m
				(LK ist)
				(MF das schutzenfest)[01;31m)[00m[01;31m)[00m
		(SIMPX
			(VF das)
			(LK wird)
			(MF
				(NX
					(KOKOM als)
					[01;31m(NX[00m
						(ADJX grostes)
						(NN schutzenfest)[01;31m)[00m
					(NX der welt)))
			(VC deklariert))
		(SIMPX da konnten wir mal vorbeischauen)))
Step:Unary
{'subtrees': ['PX'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'PRELS', 'PPER', 'ADV', 'VAINF', 'VAFIN', 'VAFIN', 'ART', 'NN'), 'right siblings': ['LK', 'MF'], 'parent': 'SIMPX', 'auto preterminal span': (11, 20), 'span': (11, 17), 'left siblings': [], 'label': 'VF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(PX mit den veranstaltungen)
		(VF ich)
		(LK sehe)
		(MF gerade genau in der woche)
		[01;31m(NF[00m
			[01;31m(SIMPX[00m
				(PX
					[01;31m(R[00m
						(C in der)
						(MF wir da)
						(VC sein werden)[01;31m)[00m)
				(LK ist)
				(MF das schutzenfest)[01;31m)[00m[01;31m)[00m
		(SIMPX
			(VF das)
			(LK wird)
			(MF
				(NX
					(KOKOM als)
					[01;31m(NX[00m
						(ADJX grostes)
						(NN schutzenfest)[01;31m)[00m
					(NX der welt)))
			(VC deklariert))
		(SIMPX da konnten wir mal vorbeischauen)))
Step:Unary
{'subtrees': ['C', 'MF', 'VC'], 'family': ['R'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'PRELS', 'PPER', 'ADV', 'VAINF', 'VAFIN'), 'right siblings': [], 'parent': 'PX', 'auto preterminal span': (11, 17), 'span': (11, 17), 'left siblings': [], 'label': 'R', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(PX mit den veranstaltungen)
		(VF ich)
		(LK sehe)
		(MF gerade genau in der woche)
		[01;31m(NF[00m
			[01;31m(SIMPX[00m
				(PX in der wir da sein werden)
				(LK ist)
				(MF das schutzenfest)[01;31m)[00m[01;31m)[00m
		(SIMPX
			(VF das)
			(LK wird)
			(MF
				(NX
					(KOKOM als)
					[01;31m(NX[00m
						(ADJX grostes)
						(NN schutzenfest)[01;31m)[00m
					(NX der welt)))
			(VC deklariert))
		(SIMPX da konnten wir mal vorbeischauen)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['DM', 'PX', 'VF', 'LK', 'MF', 'NF', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'APPR', 'ART', 'NN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'APPR', 'PRELS', 'PPER', 'ADV', 'VAINF', 'VAFIN', 'VAFIN', 'ART', 'NN', 'PDS', 'VAFIN', 'KOKOM', 'ADJA', 'NN', 'ART', 'NN', 'VVPP', 'ADV', 'VMFIN', 'PPER', 'ADV', 'VVINF'), 'right siblings': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 33), 'span': (11, 20), 'left siblings': ['DM', 'PX', 'VF', 'LK', 'MF'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(PX mit den veranstaltungen)
		(VF ich)
		(LK sehe)
		(MF gerade genau in der woche)
		[01;31m(SIMPX[00m
			(PX in der wir da sein werden)
			(LK ist)
			(MF das schutzenfest)[01;31m)[00m
		(SIMPX
			(VF das)
			(LK wird)
			(MF
				(NX
					(KOKOM als)
					[01;31m(NX[00m
						(ADJX grostes)
						(NN schutzenfest)[01;31m)[00m
					(NX der welt)))
			(VC deklariert))
		(SIMPX da konnten wir mal vorbeischauen)))
Step:UNSET remove
{'subtrees': ['PX', 'LK', 'MF'], 'family': ['DM', 'PX', 'VF', 'LK', 'MF', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'APPR', 'ART', 'NN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'APPR', 'PRELS', 'PPER', 'ADV', 'VAINF', 'VAFIN', 'VAFIN', 'ART', 'NN', 'PDS', 'VAFIN', 'KOKOM', 'ADJA', 'NN', 'ART', 'NN', 'VVPP', 'ADV', 'VMFIN', 'PPER', 'ADV', 'VVINF'), 'right siblings': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 33), 'span': (11, 20), 'left siblings': ['DM', 'PX', 'VF', 'LK', 'MF'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(PX mit den veranstaltungen)
		(VF ich)
		(LK sehe)
		(MF gerade genau in der woche)
		(PX in der wir da sein werden)
		(LK ist)
		(MF das schutzenfest)
		(SIMPX
			(VF das)
			(LK wird)
			(MF
				(NX
					(KOKOM als)
					[01;31m(NX[00m
						(ADJX grostes)
						(NN schutzenfest)[01;31m)[00m
					(NX der welt)))
			(VC deklariert))
		(SIMPX da konnten wir mal vorbeischauen)))
Step:UNSET remove
{'subtrees': ['ADJX', 'NN'], 'family': ['KOKOM', 'NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOKOM', 'ADJA', 'NN', 'ART', 'NN'), 'right siblings': ['NX'], 'parent': 'NX', 'auto preterminal span': (22, 27), 'span': (23, 25), 'left siblings': ['KOKOM'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ja mit den veranstaltungen ich sehe gerade genau in der woche in der wir da sein werden ist das schutzenfest das wird als grostes schutzenfest der welt deklariert da konnten wir mal vorbeischauen)

Sentence 687:
0 Initial errors
0 on fringe, 0 iterations

Sentence 688:
0 Initial errors
0 on fringe, 0 iterations

Sentence 689:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF da)
			(LK geht)
			(MF uns auch nicht soviel zeit)
			[01;36m(VXINF[00m
				(VC
					(PTKVZ verloren))[01;36m)[00m)
		(DM ja)
		(SIMPX wie machen wir das)
		(SIMPX rufen sie beim reiseburo an oder soll ich es machen)
		(PX wegen der flugverbindung)))
Step:Unary
{'subtrees': ['VC'], 'family': ['VF', 'LK', 'MF', 'VXINF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKVZ',), 'right siblings': [], 'left siblings': [(VF (ADVX (ADV da))), (LK (VXFIN (VVFIN geht))), (MF (NX (PPER uns)) (ADVX (ADV auch)) (ADVX (PTKNEG nicht)) (NX (PIAT soviel) (NN zeit)))], 'auto preterminal span': (8, 9), 'span': (8, 9), 'parent': 'SIMPX', 'label': 'VXINF', 'classified_type': 'Unary', 'type': 'add'}
(TOP ja da geht uns auch nicht soviel zeit verloren ja wie machen wir das rufen sie beim reiseburo an oder soll ich es machen wegen der flugverbindung)

Sentence 690:
12 Initial errors
0 on fringe, 8 iterations
4 Error:Clause Attachment
2 Error:NP Attachment
1 Error:Unary
1 Error:UNSET add
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK meine)
			[01;36m(NF[00m
				[01;36m(SIMPX[00m
					[01;31m(SIMPX[00m
						(VF wir)
						(LK hatten)[01;31m)[00m
					[01;31m(NF[00m
						[01;31m(SIMPX[00m
							[01;31m(VF[00m
								[01;31m(NX[00m
									[01;36m(MF[00m
										(NX
											(ADJX letztes)
											(NN mal))[01;36m)[00m
									[01;36m(VF[00m
										(PX [01;33m(SIMPX[00m
											(APPR bei)
											(NX der expo))[01;36m)[00m[01;31m)[00m[01;31m)[00m
							(LK hatten)
							(MF
								(NX wir)
								(NX
									(NX flugmoglichkeiten)
									[01;31m(PX[00m
										(APPR um)
										(NX sieben uhr zehn und acht uhr zehn)[01;31m)[00m))
							(VC gehabt)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;31m)[00m)) [01;33mSIMPX)[00m
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['SIMPX', 'VF', 'LK', 'MF', 'VC'], 'mover info': [('SIMPX', (3, 5))], 'old_family': ['VF', 'LK', 'SIMPX', 'NF'], 'start left siblings': ['VF', 'LK'], 'auto preterminals': ('PPER', 'VVFIN', 'PPER', 'VAFIN', 'ADJA', 'NN', 'APPR', 'ART', 'NE', 'VAFIN', 'PPER', 'NN', 'APPR', 'CARD', 'NN', 'CARD', 'KON', 'CARD', 'NN', 'CARD', 'VAPP'), 'start right siblings': ['NF'], 'end left siblings': [], 'auto preterminal span': (1, 22), 'movers': ['SIMPX'], 'old_parent': 'SIMPX', 'end right siblings': ['VF', 'LK', 'MF', 'VC'], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK meine)
			(NF
				(SIMPX
					[01;31m(SIMPX[00m
						(VF wir)
						(LK hatten)[01;31m)[00m
					[01;31m(VF[00m
						[01;31m(NX[00m
							[01;36m(MF[00m
								(NX
									(ADJX letztes)
									(NN mal))[01;36m)[00m
							[01;36m(VF[00m
								(PX [01;33m(SIMPX[00m
									(APPR bei)
									(NX der expo))[01;36m)[00m[01;31m)[00m[01;31m)[00m
					(LK hatten)
					(MF
						(NX wir)
						(NX
							(NX flugmoglichkeiten)
							[01;31m(PX[00m
								(APPR um)
								(NX sieben uhr zehn und acht uhr zehn)[01;31m)[00m))
					(VC gehabt)))[01;31m)[00m)) [01;33mSIMPX)[00m
Step:NP Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'NX'], 'mover info': [('NX', (5, 7))], 'old_family': ['NX', 'PX'], 'start left siblings': [], 'auto preterminals': ('PPER', 'VAFIN', 'ADJA', 'NN', 'APPR', 'ART', 'NE', 'VAFIN', 'PPER', 'NN', 'APPR', 'CARD', 'NN', 'CARD', 'KON', 'CARD', 'NN', 'CARD', 'VAPP'), 'start right siblings': ['PX'], 'end left siblings': ['VF', 'LK'], 'auto preterminal span': (3, 22), 'movers': ['NX'], 'old_parent': 'NX', 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK meine)
			(NF
				(SIMPX
					[01;31m(SIMPX[00m
						(VF wir)
						(LK hatten)
						[01;36m(MF[00m
							(NX
								(ADJX letztes)
								(NN mal))[01;36m)[00m[01;31m)[00m
					[01;36m(SIMPX[00m
						(VF
							[01;31m(NX[00m
								(PX
									(APPR bei)
									(NX der expo))[01;31m)[00m)
						(LK hatten)
						(MF
							(NX wir)
							(NX
								(NX flugmoglichkeiten)
								[01;31m(PX[00m
									(APPR um)
									(NX sieben uhr zehn und acht uhr zehn)[01;31m)[00m))
						(VC gehabt)[01;36m)[00m))[01;31m)[00m))
Step:Unary
{'subtrees': ['NX'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJA', 'NN'), 'right siblings': [], 'left siblings': [(VF (NX (PPER wir))), (LK (VXFIN (VAFIN hatten)))], 'auto preterminal span': (5, 7), 'span': (5, 7), 'parent': 'SIMPX', 'label': 'MF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK meine)
			(NF
				(SIMPX
					[01;31m(SIMPX[00m
						(VF wir)
						(LK hatten)
						(MF letztes mal)[01;31m)[00m
					[01;36m(SIMPX[00m
						(VF
							[01;31m(NX[00m
								(PX
									(APPR bei)
									(NX der expo))[01;31m)[00m)
						(LK hatten)
						(MF
							(NX wir)
							(NX
								(NX flugmoglichkeiten)
								[01;31m(PX[00m
									(APPR um)
									(NX sieben uhr zehn und acht uhr zehn)[01;31m)[00m))
						(VC gehabt)[01;36m)[00m))[01;31m)[00m))
Step:UNSET add
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NE', 'VAFIN', 'PPER', 'NN', 'APPR', 'CARD', 'NN', 'CARD', 'KON', 'CARD', 'NN', 'CARD', 'VAPP'), 'right siblings': [], 'left siblings': [(SIMPX (VF (NX (PPER wir))) (LK (VXFIN (VAFIN hatten))) (MF (NX (ADJX (ADJA letztes)) (NN mal))))], 'auto preterminal span': (7, 22), 'span': (7, 22), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK meine)
			(NF
				(SIMPX
					[01;31m(SIMPX[00m
						(VF wir)
						(LK hatten)
						(MF letztes mal)[01;31m)[00m
					(SIMPX
						(VF
							[01;31m(NX[00m
								(PX
									(APPR bei)
									(NX der expo))[01;31m)[00m)
						(LK hatten)
						(MF
							(NX wir)
							(NX
								(NX flugmoglichkeiten)
								[01;31m(PX[00m
									(APPR um)
									(NX sieben uhr zehn und acht uhr zehn)[01;31m)[00m))
						(VC gehabt))))[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'NF'], 'family': ['DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VVFIN', 'PPER', 'VAFIN', 'ADJA', 'NN', 'APPR', 'ART', 'NE', 'VAFIN', 'PPER', 'NN', 'APPR', 'CARD', 'NN', 'CARD', 'KON', 'CARD', 'NN', 'CARD', 'VAPP'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 22), 'span': (1, 22), 'left siblings': ['DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(VF ich)
		(LK meine)
		(NF
			(SIMPX
				[01;31m(SIMPX[00m
					(VF wir)
					(LK hatten)
					(MF letztes mal)[01;31m)[00m
				(SIMPX
					(VF
						[01;31m(NX[00m
							(PX
								(APPR bei)
								(NX der expo))[01;31m)[00m)
					(LK hatten)
					(MF
						(NX wir)
						(NX
							(NX flugmoglichkeiten)
							[01;31m(PX[00m
								(APPR um)
								(NX sieben uhr zehn und acht uhr zehn)[01;31m)[00m))
					(VC gehabt))))))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'ADJA', 'NN', 'APPR', 'ART', 'NE', 'VAFIN', 'PPER', 'NN', 'APPR', 'CARD', 'NN', 'CARD', 'KON', 'CARD', 'NN', 'CARD', 'VAPP'), 'right siblings': ['SIMPX'], 'parent': 'SIMPX', 'auto preterminal span': (3, 22), 'span': (3, 7), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(VF ich)
		(LK meine)
		(NF
			(SIMPX
				(VF wir)
				(LK hatten)
				(MF letztes mal)
				(SIMPX
					(VF
						[01;31m(NX[00m
							(PX
								(APPR bei)
								(NX der expo))[01;31m)[00m)
					(LK hatten)
					(MF
						(NX wir)
						(NX
							(NX flugmoglichkeiten)
							[01;31m(PX[00m
								(APPR um)
								(NX sieben uhr zehn und acht uhr zehn)[01;31m)[00m))
					(VC gehabt))))))
Step:Unary
{'subtrees': ['PX'], 'family': ['NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NE'), 'right siblings': [], 'parent': 'VF', 'auto preterminal span': (7, 10), 'span': (7, 10), 'left siblings': [], 'label': 'NX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(VF ich)
		(LK meine)
		(NF
			(SIMPX
				(VF wir)
				(LK hatten)
				(MF letztes mal)
				(SIMPX
					(VF bei der expo)
					(LK hatten)
					(MF
						(NX wir)
						(NX
							(NX flugmoglichkeiten)
							[01;31m(PX[00m
								(APPR um)
								(NX sieben uhr zehn und acht uhr zehn)[01;31m)[00m))
					(VC gehabt))))))
Step:UNSET remove
{'subtrees': ['APPR', 'NX'], 'family': ['NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'APPR', 'CARD', 'NN', 'CARD', 'KON', 'CARD', 'NN', 'CARD'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (12, 21), 'span': (13, 21), 'left siblings': ['NX'], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ja ich meine wir hatten letztes mal bei der expo hatten wir flugmoglichkeiten um sieben uhr zehn und acht uhr zehn gehabt)

Sentence 691:
0 Initial errors
0 on fringe, 0 iterations

Sentence 692:
0 Initial errors
0 on fringe, 0 iterations

Sentence 693:
4 Initial errors
0 on fringe, 3 iterations
2 Error:UNSET move
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM nee)
		(SIMPX das ware okay)
		(DM also)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF das wochenende)
			(LK ware)
			(MF der funfte sechste)[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(LV[00m
				(SIMPX
					(C wenn)
					(MF wir dann am montag)
					(VC starten))[01;31m)[00m [01;33mSIMPX)[00m
			(DM genau)
			(LK ware)
			(MF das der siebte juli)[01;31m)[00m))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'LV'], 'mover info': [('LV', (11, 17))], 'old_family': ['LV', 'DM', 'LK', 'MF'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'PDS', 'VAFIN', 'ADJD', 'ADV', 'ART', 'NN', 'VAFIN', 'ART', 'NN', 'NN', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'VVFIN', 'ITJ', 'VAFIN', 'PDS', 'ART', 'ADJA', 'NN'), 'start right siblings': ['DM', 'LK', 'MF'], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (0, 23), 'movers': ['LV'], 'old_parent': 'SIMPX', 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM nee)
		(SIMPX das ware okay)
		(DM also)
		(SIMPX
			(VF das wochenende)
			(LK ware)
			(MF der funfte sechste)
			[01;31m(LV[00m
				(SIMPX
					(C wenn)
					(MF wir dann am montag)
					(VC starten))[01;31m)[00m)
		[01;31m(SIMPX[00m
			(DM genau)
			(LK ware)
			(MF das der siebte juli)[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['VF', 'LK', 'MF', 'LV'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'VAFIN', 'ART', 'NN', 'NN', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'VVFIN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (5, 17), 'span': (11, 17), 'left siblings': ['VF', 'LK', 'MF'], 'label': 'LV', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM nee)
		(SIMPX das ware okay)
		(DM also)
		(SIMPX das wochenende ware der funfte sechste wenn wir dann am montag starten)
		[01;31m(SIMPX[00m
			(DM genau)
			(LK ware)
			(MF das der siebte juli)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['DM', 'LK', 'MF'], 'family': ['DM', 'SIMPX', 'DM', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PDS', 'VAFIN', 'ADJD', 'ADV', 'ART', 'NN', 'VAFIN', 'ART', 'NN', 'NN', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'VVFIN', 'ITJ', 'VAFIN', 'PDS', 'ART', 'ADJA', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 23), 'span': (17, 23), 'left siblings': ['DM', 'SIMPX', 'DM', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP nee das ware okay also das wochenende ware der funfte sechste wenn wir dann am montag starten genau ware das der siebte juli)

Sentence 694:
9 Initial errors
0 on fringe, 4 iterations
4 Error:Modifier Attachment
3 Error:UNSET move
1 Error:PP Attachment
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM auf jeden fall)
		[01;31m(SIMPX[00m [01;33m(VF (SIMPX[00m
			(LK mochte)
			(MF
				(ADVX auch)
				[01;36m(NX[00m
					[01;33m(NX[00m (ADVX so)
					[01;31m(NX[00m
						[01;31m(NX[00m
							(ART ein)
							(ADJX bischen)
							(PIS was)[01;31m)[00m [01;33mNX)[00m
						(PX von hannover)[01;31m)[00m[01;36m)[00m)
			(VC sehen)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF das wir vielleicht auch ein paar sehenswurdigkeiten uns anschauen) [01;33mSIMPX) VF)[00m
			(LK wurde)
			(MF ich)
			(VC sagen)[01;31m)[00m
		(SIMPX
			(C wenn)
			(MF
				(NX sie)
				(ADVX da)
				[01;36m(NX[00m
					(NX interesse)
					(PX dran)[01;36m)[00m)
			(VC haben))))
Step:Modifier Attachment
{'new_parent': 'NX', 'new_family': ['ADVX', 'ART', 'ADJX', 'PIS'], 'mover info': [('ADVX', (6, 7))], 'old_family': ['ADVX', 'ADVX', 'NX'], 'start left siblings': ['ADVX'], 'auto preterminals': ('ADV', 'ADV', 'ART', 'PIDAT', 'PIS', 'APPR', 'NE'), 'start right siblings': ['NX'], 'end left siblings': [], 'auto preterminal span': (5, 12), 'movers': ['ADVX'], 'old_parent': 'MF', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['ART', 'ADJX', 'PIS'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(DM auf jeden fall)
		[01;31m(SIMPX[00m [01;33m(VF (SIMPX[00m
			(LK mochte)
			(MF auch so ein bischen was von hannover)
			(VC sehen)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF das wir vielleicht auch ein paar sehenswurdigkeiten uns anschauen) [01;33mSIMPX) VF)[00m
			(LK wurde)
			(MF ich)
			(VC sagen)[01;31m)[00m
		(SIMPX
			(C wenn)
			(MF
				(NX sie)
				(ADVX da)
				[01;36m(NX[00m
					(NX interesse)
					(PX dran)[01;36m)[00m)
			(VC haben))))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['LK', 'MF', 'VC', 'VF'], 'mover info': [('VF', (13, 22))], 'old_family': ['VF', 'LK', 'MF', 'VC'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'APPR', 'PIDAT', 'NN', 'VMFIN', 'ADV', 'ADV', 'ART', 'PIDAT', 'PIS', 'APPR', 'NE', 'VVINF', 'KOUS', 'PPER', 'ADV', 'ADV', 'ART', 'PIDAT', 'NN', 'PRF', 'VVFIN', 'VAFIN', 'PPER', 'VVINF', 'KOUS', 'PPER', 'ADV', 'NN', 'PROP', 'VAFIN'), 'start right siblings': ['LK', 'MF', 'VC'], 'end left siblings': ['LK', 'MF', 'VC'], 'auto preterminal span': (0, 31), 'adding node already present': False, 'movers': ['VF'], 'old_parent': 'SIMPX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(DM ja)
		(DM auf jeden fall)
		(VF mochte auch so ein bischen was von hannover sehen das wir vielleicht auch ein paar sehenswurdigkeiten uns anschauen)
		[01;31m(SIMPX[00m
			(LK wurde)
			(MF ich)
			(VC sagen)[01;31m)[00m
		(SIMPX
			(C wenn)
			(MF
				(NX sie)
				(ADVX da)
				[01;36m(NX[00m
					(NX interesse)
					(PX dran)[01;36m)[00m)
			(VC haben))))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['NX', 'ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'PROP'), 'right siblings': [], 'left siblings': [(NX (PPER sie)), (ADVX (ADV da))], 'auto preterminal span': (28, 30), 'span': (28, 30), 'parent': 'MF', 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM auf jeden fall)
		(VF mochte auch so ein bischen was von hannover sehen das wir vielleicht auch ein paar sehenswurdigkeiten uns anschauen)
		[01;31m(SIMPX[00m
			(LK wurde)
			(MF ich)
			(VC sagen)[01;31m)[00m
		(SIMPX wenn sie da interesse dran haben)))
Step:UNSET remove
{'subtrees': ['LK', 'MF', 'VC'], 'family': ['DM', 'DM', 'VF', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'APPR', 'PIDAT', 'NN', 'VMFIN', 'ADV', 'ADV', 'ART', 'PIDAT', 'PIS', 'APPR', 'NE', 'VVINF', 'KOUS', 'PPER', 'ADV', 'ADV', 'ART', 'PIDAT', 'NN', 'PRF', 'VVFIN', 'VAFIN', 'PPER', 'VVINF', 'KOUS', 'PPER', 'ADV', 'NN', 'PROP', 'VAFIN'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 31), 'span': (22, 25), 'left siblings': ['DM', 'DM', 'VF'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ja auf jeden fall mochte auch so ein bischen was von hannover sehen das wir vielleicht auch ein paar sehenswurdigkeiten uns anschauen wurde ich sagen wenn sie da interesse dran haben)

Sentence 695:
7 Initial errors
0 on fringe, 6 iterations
2 Error:Clause Attachment
1 Error:Modifier Attachment
1 Error:Single Word Phrase
1 Error:UNSET add
1 Error:Single Word Phrase
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich kenne von einem fruheren aufenthalt noch das maritimstadthotel)
		(SIMPX das fand ich also sehr angenehm)
		(SIMPX es liegt sehr zentral hat einen konferenzraum)
		[01;36m(SIMPX[00m
			(SIMPX da konnen wir vielleicht noch nach der messe ein bischen was besprechen)
			[01;31m(ADVX[00m
				(ADVX auch)
				(SIMPX
					(C wenn)
					(MF
						(NX wir)
						(ADVX noch)
						(NX
							[01;36m(NX[00m
								(ART ein)
								[01;31m(ADJX[00m
									(PIDAT paar)[01;31m)[00m[01;36m)[00m
							[01;36m(PX[00m
								[01;36m(ADVX[00m
									(APPR mit)[01;36m)[00m
								(NX
									[01;36m(NX[00m
										(NN teilnehmer)[01;36m)[00m
									(NX der messe))[01;36m)[00m)
						(ADVX mit))
					(VC einladen))[01;31m)[00m[01;36m)[00m))
Step:Clause Attachment
{'new_parent': 'TURN', 'new_family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'ADVX', 'SIMPX'], 'mover info': [('SIMPX', (36, 47))], 'old_family': ['ADVX', 'SIMPX'], 'start left siblings': ['ADVX'], 'auto preterminals': ('PTKANT', 'PPER', 'VVFIN', 'APPR', 'ART', 'ADJA', 'NN', 'ADV', 'ART', 'NE', 'PDS', 'VVFIN', 'PPER', 'ADV', 'ADV', 'ADJD', 'PPER', 'VVFIN', 'ADV', 'ADJD', 'VAFIN', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'ART', 'PIDAT', 'PIS', 'VVINF', 'ADV', 'KOUS', 'PPER', 'ADV', 'ART', 'PIDAT', 'APPR', 'NN', 'ART', 'NN', 'ADV', 'VVFIN'), 'start right siblings': [], 'end left siblings': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'ADVX'], 'auto preterminal span': (0, 47), 'adding node already present': False, 'movers': ['SIMPX'], 'old_parent': 'ADVX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'Clause Attachment', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich kenne von einem fruheren aufenthalt noch das maritimstadthotel)
		(SIMPX das fand ich also sehr angenehm)
		(SIMPX es liegt sehr zentral hat einen konferenzraum)
		(SIMPX
			(SIMPX da konnen wir vielleicht noch nach der messe ein bischen was besprechen)
			(ADVX auch)
			(SIMPX
				(C wenn)
				(MF
					(NX wir)
					(ADVX noch)
					(NX
						[01;36m(NX[00m
							(ART ein)
							[01;31m(ADJX[00m
								(PIDAT paar)[01;31m)[00m[01;36m)[00m
						[01;36m(PX[00m
							[01;36m(ADVX[00m
								(APPR mit)[01;36m)[00m
							(NX
								[01;36m(NX[00m
									(NN teilnehmer)[01;36m)[00m
								(NX der messe))[01;36m)[00m)
					(ADVX mit))
				(VC einladen)))))
Step:Modifier Attachment
{'subtrees': ['ART', 'ADJX'], 'family': ['NX', 'APPR', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'PIDAT'), 'right siblings': [(APPR mit), (NX (NN teilnehmer) (NX (ART der) (NN messe)))], 'left siblings': [], 'auto preterminal span': (39, 41), 'span': (39, 41), 'parent': 'NX', 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich kenne von einem fruheren aufenthalt noch das maritimstadthotel)
		(SIMPX das fand ich also sehr angenehm)
		(SIMPX es liegt sehr zentral hat einen konferenzraum)
		(SIMPX
			(SIMPX da konnen wir vielleicht noch nach der messe ein bischen was besprechen)
			(ADVX auch)
			(SIMPX
				(C wenn)
				(MF
					(NX wir)
					(ADVX noch)
					(NX
						(NX
							(ART ein)
							[01;31m(ADJX[00m
								(PIDAT paar)[01;31m)[00m)
						[01;36m(PX[00m
							[01;36m(ADVX[00m
								(APPR mit)[01;36m)[00m
							(NX
								[01;36m(NX[00m
									(NN teilnehmer)[01;36m)[00m
								(NX der messe))[01;36m)[00m)
					(ADVX mit))
				(VC einladen)))))
Step:Single Word Phrase
{'subtrees': ['APPR'], 'family': ['NX', 'ADVX', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('APPR',), 'right siblings': [(NX (NN teilnehmer) (NX (ART der) (NN messe)))], 'left siblings': [(NX (ART ein) (ADJX (PIDAT paar)))], 'auto preterminal span': (41, 42), 'span': (41, 42), 'parent': 'NX', 'label': 'ADVX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich kenne von einem fruheren aufenthalt noch das maritimstadthotel)
		(SIMPX das fand ich also sehr angenehm)
		(SIMPX es liegt sehr zentral hat einen konferenzraum)
		(SIMPX
			(SIMPX da konnen wir vielleicht noch nach der messe ein bischen was besprechen)
			(ADVX auch)
			(SIMPX
				(C wenn)
				(MF
					(NX wir)
					(ADVX noch)
					(NX
						(NX
							(ART ein)
							[01;31m(ADJX[00m
								(PIDAT paar)[01;31m)[00m)
						[01;36m(PX[00m
							(ADVX mit)
							(NX
								[01;36m(NX[00m
									(NN teilnehmer)[01;36m)[00m
								(NX der messe))[01;36m)[00m)
					(ADVX mit))
				(VC einladen)))))
Step:UNSET add
{'subtrees': ['ADVX', 'NX'], 'family': ['NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'NN', 'ART', 'NN'), 'right siblings': [], 'left siblings': [(NX (ART ein) (ADJX (PIDAT paar)))], 'auto preterminal span': (41, 45), 'span': (41, 45), 'parent': 'NX', 'label': 'PX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich kenne von einem fruheren aufenthalt noch das maritimstadthotel)
		(SIMPX das fand ich also sehr angenehm)
		(SIMPX es liegt sehr zentral hat einen konferenzraum)
		(SIMPX
			(SIMPX da konnen wir vielleicht noch nach der messe ein bischen was besprechen)
			(ADVX auch)
			(SIMPX
				(C wenn)
				(MF
					(NX wir)
					(ADVX noch)
					(NX
						(NX
							(ART ein)
							[01;31m(ADJX[00m
								(PIDAT paar)[01;31m)[00m)
						(PX
							(ADVX mit)
							(NX
								[01;36m(NX[00m
									(NN teilnehmer)[01;36m)[00m
								(NX der messe))))
					(ADVX mit))
				(VC einladen)))))
Step:Single Word Phrase
{'subtrees': ['NN'], 'family': ['NX', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('NN',), 'right siblings': [(NX (ART der) (NN messe))], 'left siblings': [], 'auto preterminal span': (42, 43), 'span': (42, 43), 'parent': 'NX', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich kenne von einem fruheren aufenthalt noch das maritimstadthotel)
		(SIMPX das fand ich also sehr angenehm)
		(SIMPX es liegt sehr zentral hat einen konferenzraum)
		(SIMPX
			(SIMPX da konnen wir vielleicht noch nach der messe ein bischen was besprechen)
			(ADVX auch)
			(SIMPX
				(C wenn)
				(MF
					(NX wir)
					(ADVX noch)
					(NX
						(NX
							(ART ein)
							[01;31m(ADJX[00m
								(PIDAT paar)[01;31m)[00m)
						(PX mit teilnehmer der messe))
					(ADVX mit))
				(VC einladen)))))
Step:Single Word Phrase
{'subtrees': ['PIDAT'], 'family': ['ART', 'ADJX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ART', 'PIDAT'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (39, 41), 'span': (40, 41), 'left siblings': ['ART'], 'label': 'ADJX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP ja ich kenne von einem fruheren aufenthalt noch das maritimstadthotel das fand ich also sehr angenehm es liegt sehr zentral hat einen konferenzraum da konnen wir vielleicht noch nach der messe ein bischen was besprechen auch wenn wir noch ein paar mit teilnehmer der messe mit einladen)

Sentence 696:
13 Initial errors
0 on fringe, 12 iterations
2 Error:Different label
1 Error:Single Word Phrase
1 Error:Unary
1 Error:Single Word Phrase
1 Error:Unary
1 Error:Unary
1 Error:Unary
1 Error:Unary
1 Error:UNSET remove
1 Error:Unary
1 Error:Clause Attachment
1 Error:Clause Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		[01;31m(NX[00m
			(ART die)
			[01;36m(LK[00m
				[01;36m(VXFIN[00m
					(NN kosten)[01;36m)[00m[01;36m)[00m[01;31m)[00m
		[01;36m(C[00m
			[01;36m(NX[00m
				(ART der)[01;36m)[00m[01;36m)[00m
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				[01;31m(NX[00m
					[01;36m(MF[00m
						(NX
							(ART die)
							(NN frage))[01;36m)[00m
					[01;36m(SIMPX[00m [01;31m(NX[00m
						(ART der)
						(NN kosten)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
			(SIMPX
				(LK konnen)
				(MF
					[01;36m(MF[00m
						(NX
							(PPER wir))[01;36m)[00m
					[01;36m(VF[00m
						(ADVX
							(ADV dann))[01;36m)[00m))
			(LK kann)
			(MF ich mit unserem vorgesetzten)
			(VC abchecken)[01;31m)[00m))
Step:Different label
{'family': ['NX', 'SIMPX'], 'auto preterminal span': (6, 8), 'span': (6, 8), 'subtrees': ['ART', 'NN'], 'parent': 'NX', 'over_word': False, 'auto preterminals': ('ART', 'NN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('NX', 'SIMPX')}
(TOP
	(TURN
		(DM ja)
		[01;31m(NX[00m
			(ART die)
			[01;36m(LK[00m
				[01;36m(VXFIN[00m
					(NN kosten)[01;36m)[00m[01;36m)[00m[01;31m)[00m
		[01;36m(C[00m
			[01;36m(NX[00m
				(ART der)[01;36m)[00m[01;36m)[00m
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				[01;31m(NX[00m
					[01;36m(MF[00m
						(NX
							(ART die)
							(NN frage))[01;36m)[00m
					(SIMPX der kosten)[01;31m)[00m[01;31m)[00m
			(SIMPX
				(LK konnen)
				(MF
					[01;36m(MF[00m
						(NX
							(PPER wir))[01;36m)[00m
					[01;36m(VF[00m
						(ADVX
							(ADV dann))[01;36m)[00m))
			(LK kann)
			(MF ich mit unserem vorgesetzten)
			(VC abchecken)[01;31m)[00m))
Step:Single Word Phrase
{'subtrees': ['NN'], 'family': ['ART', 'VXFIN'], 'over_word': True, 'over words': True, 'auto preterminals': ('NN',), 'right siblings': [], 'left siblings': [(ART die)], 'auto preterminal span': (2, 3), 'span': (2, 3), 'parent': 'NX', 'label': 'VXFIN', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		[01;31m(NX[00m
			(ART die)
			[01;36m(LK[00m
				(VXFIN
					(NN kosten))[01;36m)[00m[01;31m)[00m
		[01;36m(C[00m
			[01;36m(NX[00m
				(ART der)[01;36m)[00m[01;36m)[00m
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				[01;31m(NX[00m
					[01;36m(MF[00m
						(NX
							(ART die)
							(NN frage))[01;36m)[00m
					(SIMPX der kosten)[01;31m)[00m[01;31m)[00m
			(SIMPX
				(LK konnen)
				(MF
					[01;36m(MF[00m
						(NX
							(PPER wir))[01;36m)[00m
					[01;36m(VF[00m
						(ADVX
							(ADV dann))[01;36m)[00m))
			(LK kann)
			(MF ich mit unserem vorgesetzten)
			(VC abchecken)[01;31m)[00m))
Step:Unary
{'subtrees': ['VXFIN'], 'family': ['ART', 'LK'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN',), 'right siblings': [], 'left siblings': [(ART die)], 'auto preterminal span': (2, 3), 'span': (2, 3), 'parent': 'NX', 'label': 'LK', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		[01;31m(NX[00m
			(ART die)
			(LK kosten)[01;31m)[00m
		[01;36m(C[00m
			[01;36m(NX[00m
				(ART der)[01;36m)[00m[01;36m)[00m
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				[01;31m(NX[00m
					[01;36m(MF[00m
						(NX
							(ART die)
							(NN frage))[01;36m)[00m
					(SIMPX der kosten)[01;31m)[00m[01;31m)[00m
			(SIMPX
				(LK konnen)
				(MF
					[01;36m(MF[00m
						(NX
							(PPER wir))[01;36m)[00m
					[01;36m(VF[00m
						(ADVX
							(ADV dann))[01;36m)[00m))
			(LK kann)
			(MF ich mit unserem vorgesetzten)
			(VC abchecken)[01;31m)[00m))
Step:Single Word Phrase
{'subtrees': ['ART'], 'family': ['DM', 'NX', 'NX', 'SIMPX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ART',), 'right siblings': [(SIMPX (VF (NX (NX (ART die) (NN frage)) (SIMPX (ART der) (NN kosten)))) (SIMPX (LK (VXFIN (VMFIN konnen))) (MF (NX (PPER wir)) (ADVX (ADV dann)))) (LK (VXFIN (VMFIN kann))) (MF (NX (PPER ich)) (PX (APPR mit) (NX (PPOSAT unserem) (NN vorgesetzten)))) (VC (VXINF (VVINF abchecken))))], 'left siblings': [(DM (PTKANT ja)), (NX (ART die) (LK (VXFIN (NN kosten))))], 'auto preterminal span': (3, 4), 'span': (3, 4), 'parent': 'TURN', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		[01;31m(NX[00m
			(ART die)
			(LK kosten)[01;31m)[00m
		[01;36m(C[00m
			(NX
				(ART der))[01;36m)[00m
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				[01;31m(NX[00m
					[01;36m(MF[00m
						(NX
							(ART die)
							(NN frage))[01;36m)[00m
					(SIMPX der kosten)[01;31m)[00m[01;31m)[00m
			(SIMPX
				(LK konnen)
				(MF
					[01;36m(MF[00m
						(NX
							(PPER wir))[01;36m)[00m
					[01;36m(VF[00m
						(ADVX
							(ADV dann))[01;36m)[00m))
			(LK kann)
			(MF ich mit unserem vorgesetzten)
			(VC abchecken)[01;31m)[00m))
Step:Unary
{'subtrees': ['NX'], 'family': ['DM', 'NX', 'C', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART',), 'right siblings': [(SIMPX (VF (NX (NX (ART die) (NN frage)) (SIMPX (ART der) (NN kosten)))) (SIMPX (LK (VXFIN (VMFIN konnen))) (MF (NX (PPER wir)) (ADVX (ADV dann)))) (LK (VXFIN (VMFIN kann))) (MF (NX (PPER ich)) (PX (APPR mit) (NX (PPOSAT unserem) (NN vorgesetzten)))) (VC (VXINF (VVINF abchecken))))], 'left siblings': [(DM (PTKANT ja)), (NX (ART die) (LK (VXFIN (NN kosten))))], 'auto preterminal span': (3, 4), 'span': (3, 4), 'parent': 'TURN', 'label': 'C', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		[01;31m(NX[00m
			(ART die)
			(LK kosten)[01;31m)[00m
		(C der)
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				[01;31m(NX[00m
					[01;36m(MF[00m
						(NX
							(ART die)
							(NN frage))[01;36m)[00m
					(SIMPX der kosten)[01;31m)[00m[01;31m)[00m
			(SIMPX
				(LK konnen)
				(MF
					[01;36m(MF[00m
						(NX
							(PPER wir))[01;36m)[00m
					[01;36m(VF[00m
						(ADVX
							(ADV dann))[01;36m)[00m))
			(LK kann)
			(MF ich mit unserem vorgesetzten)
			(VC abchecken)[01;31m)[00m))
Step:Unary
{'subtrees': ['NX'], 'family': ['MF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN'), 'right siblings': [(SIMPX (ART der) (NN kosten))], 'left siblings': [], 'auto preterminal span': (4, 6), 'span': (4, 6), 'parent': 'NX', 'label': 'MF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		[01;31m(NX[00m
			(ART die)
			(LK kosten)[01;31m)[00m
		(C der)
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				[01;31m(NX[00m
					(MF die frage)
					(SIMPX der kosten)[01;31m)[00m[01;31m)[00m
			(SIMPX
				(LK konnen)
				(MF
					[01;36m(MF[00m
						(NX
							(PPER wir))[01;36m)[00m
					[01;36m(VF[00m
						(ADVX
							(ADV dann))[01;36m)[00m))
			(LK kann)
			(MF ich mit unserem vorgesetzten)
			(VC abchecken)[01;31m)[00m))
Step:Unary
{'subtrees': ['NX'], 'family': ['MF', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER',), 'right siblings': [(ADVX (ADV dann))], 'left siblings': [], 'auto preterminal span': (9, 10), 'span': (9, 10), 'parent': 'MF', 'label': 'MF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		[01;31m(NX[00m
			(ART die)
			(LK kosten)[01;31m)[00m
		(C der)
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				[01;31m(NX[00m
					(MF die frage)
					(SIMPX der kosten)[01;31m)[00m[01;31m)[00m
			(SIMPX
				(LK konnen)
				(MF
					(MF wir)
					[01;36m(VF[00m
						(ADVX
							(ADV dann))[01;36m)[00m))
			(LK kann)
			(MF ich mit unserem vorgesetzten)
			(VC abchecken)[01;31m)[00m))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['MF', 'VF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV',), 'right siblings': [], 'left siblings': [(MF (NX (PPER wir)))], 'auto preterminal span': (10, 11), 'span': (10, 11), 'parent': 'MF', 'label': 'VF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		[01;31m(NX[00m
			(ART die)
			(LK kosten)[01;31m)[00m
		(C der)
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				[01;31m(NX[00m
					(MF die frage)
					(SIMPX der kosten)[01;31m)[00m[01;31m)[00m
			(SIMPX konnen wir dann)
			(LK kann)
			(MF ich mit unserem vorgesetzten)
			(VC abchecken)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['ART', 'LK'], 'family': ['DM', 'NX', 'C', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ART', 'NN', 'ART', 'ART', 'NN', 'ART', 'NN', 'VMFIN', 'PPER', 'ADV', 'VMFIN', 'PPER', 'APPR', 'PPOSAT', 'NN', 'VVINF'), 'right siblings': ['C', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 17), 'span': (1, 3), 'left siblings': ['DM'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(ART die)
		(LK kosten)
		(C der)
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				[01;31m(NX[00m
					(MF die frage)
					(SIMPX der kosten)[01;31m)[00m[01;31m)[00m
			(SIMPX konnen wir dann)
			(LK kann)
			(MF ich mit unserem vorgesetzten)
			(VC abchecken)[01;31m)[00m))
Step:Unary
{'subtrees': ['NX'], 'family': ['VF', 'SIMPX', 'LK', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'ART', 'NN', 'VMFIN', 'PPER', 'ADV', 'VMFIN', 'PPER', 'APPR', 'PPOSAT', 'NN', 'VVINF'), 'right siblings': ['SIMPX', 'LK', 'MF', 'VC'], 'parent': 'SIMPX', 'auto preterminal span': (4, 17), 'span': (4, 8), 'left siblings': [], 'label': 'VF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(ART die)
		(LK kosten)
		(C der)
		[01;31m(SIMPX[00m
			[01;31m(NX[00m
				(MF die frage)
				(SIMPX der kosten)[01;31m)[00m
			(SIMPX konnen wir dann)
			(LK kann)
			(MF ich mit unserem vorgesetzten)
			(VC abchecken)[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['MF', 'SIMPX'], 'family': ['NX', 'SIMPX', 'LK', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'ART', 'NN', 'VMFIN', 'PPER', 'ADV', 'VMFIN', 'PPER', 'APPR', 'PPOSAT', 'NN', 'VVINF'), 'right siblings': ['SIMPX', 'LK', 'MF', 'VC'], 'parent': 'SIMPX', 'auto preterminal span': (4, 17), 'span': (4, 8), 'left siblings': [], 'label': 'NX', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(ART die)
		(LK kosten)
		(C der)
		[01;31m(SIMPX[00m
			(MF die frage)
			(SIMPX der kosten)
			(SIMPX konnen wir dann)
			(LK kann)
			(MF ich mit unserem vorgesetzten)
			(VC abchecken)[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['MF', 'SIMPX', 'SIMPX', 'LK', 'MF', 'VC'], 'family': ['DM', 'ART', 'LK', 'C', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ART', 'NN', 'ART', 'ART', 'NN', 'ART', 'NN', 'VMFIN', 'PPER', 'ADV', 'VMFIN', 'PPER', 'APPR', 'PPOSAT', 'NN', 'VVINF'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 17), 'span': (4, 17), 'left siblings': ['DM', 'ART', 'LK', 'C'], 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP ja die kosten der die frage der kosten konnen wir dann kann ich mit unserem vorgesetzten abchecken)

Sentence 697:
0 Initial errors
0 on fringe, 0 iterations


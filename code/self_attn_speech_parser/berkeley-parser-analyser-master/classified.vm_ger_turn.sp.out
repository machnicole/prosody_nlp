# Time of run:
# Mon Jul  5 19:34:03 2021
# Command:
# ./berkeley_parse_analyser/classify_german_vm.py sample_data/turn_vm_ger_sp_output_dev.txt sample_data/turn_dev_ger.trees classified.vm_ger_turn.sp
#
Printing tree transformations
Sentence 1:
0 Initial errors
0 on fringe, 0 iterations

Sentence 2:
0 Initial errors
0 on fringe, 0 iterations

Sentence 3:
7 Initial errors
0 on fringe, 5 iterations
2 Error:UNSET move
2 Error:NP Attachment
1 Error:UNSET remove
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX ich mache ihnen das jetzt fertig)
		[01;31m(SIMPX[00m
			(LK konnen)
			[01;31m(MF[00m [01;33m(MF[00m
				(NX
					(PPER sie))[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				(ADVX
					(ADV morgen))[01;31m)[00m [01;33mMF)[00m
			(LK kommt)
			(MF die bestatigung)[01;31m)[00m
		(SIMPX
			(LK konnen)
			[01;36m(MF[00m
				[01;31m(MF[00m
					(NX sie)
					(NX es)[01;31m)[00m
				(NX ticket)[01;36m)[00m
			(VC abholen))))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['NX', 'VF'], 'mover info': [('VF', (8, 9))], 'old_family': ['VF', 'LK', 'MF'], 'start left siblings': [], 'auto preterminals': ('PPER', 'VVFIN', 'PPER', 'PDS', 'ADV', 'PTKVZ', 'VMFIN', 'PPER', 'ADV', 'VVFIN', 'ART', 'NN', 'VMFIN', 'PPER', 'PPER', 'NN', 'VVINF'), 'start right siblings': ['LK', 'MF'], 'end left siblings': ['NX'], 'auto preterminal span': (0, 17), 'movers': ['VF'], 'old_parent': 'SIMPX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SIMPX ich mache ihnen das jetzt fertig)
		[01;31m(SIMPX[00m
			(LK konnen)
			(MF
				(NX sie)
				[01;31m(VF[00m
					(ADVX
						(ADV morgen))[01;31m)[00m)[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK kommt)
			(MF die bestatigung)[01;31m)[00m
		(SIMPX
			(LK konnen)
			[01;36m(MF[00m
				[01;31m(MF[00m
					(NX sie)
					(NX es)[01;31m)[00m
				(NX ticket)[01;36m)[00m
			(VC abholen))))
Step:NP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'NX', 'NX'], 'mover info': [('NX', (15, 16))], 'old_family': ['LK', 'MF', 'NX', 'VC'], 'start left siblings': ['LK', 'MF'], 'auto preterminals': ('VMFIN', 'PPER', 'PPER', 'NN', 'VVINF'), 'start right siblings': ['VC'], 'end left siblings': ['NX', 'NX'], 'auto preterminal span': (12, 17), 'movers': ['NX'], 'old_parent': 'SIMPX', 'POS confusion': ('NN', 'NN'), 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SIMPX ich mache ihnen das jetzt fertig)
		[01;31m(SIMPX[00m
			(LK konnen)
			(MF
				(NX sie)
				[01;31m(VF[00m
					(ADVX
						(ADV morgen))[01;31m)[00m)[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK kommt)
			(MF die bestatigung)[01;31m)[00m
		(SIMPX konnen sie es ticket abholen)))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'PPER', 'PDS', 'ADV', 'PTKVZ', 'VMFIN', 'PPER', 'ADV', 'VVFIN', 'ART', 'NN', 'VMFIN', 'PPER', 'PPER', 'NN', 'VVINF'), 'right siblings': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 17), 'span': (6, 9), 'left siblings': ['SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX ich mache ihnen das jetzt fertig)
		(LK konnen)
		(MF
			(NX sie)
			[01;31m(VF[00m
				(ADVX
					(ADV morgen))[01;31m)[00m)
		[01;31m(SIMPX[00m
			(LK kommt)
			(MF die bestatigung)[01;31m)[00m
		(SIMPX konnen sie es ticket abholen)))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['NX', 'VF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (7, 9), 'span': (8, 9), 'left siblings': ['NX'], 'label': 'VF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX ich mache ihnen das jetzt fertig)
		(LK konnen)
		(MF sie morgen)
		[01;31m(SIMPX[00m
			(LK kommt)
			(MF die bestatigung)[01;31m)[00m
		(SIMPX konnen sie es ticket abholen)))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['SIMPX', 'LK', 'MF', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'PPER', 'PDS', 'ADV', 'PTKVZ', 'VMFIN', 'PPER', 'ADV', 'VVFIN', 'ART', 'NN', 'VMFIN', 'PPER', 'PPER', 'NN', 'VVINF'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 17), 'span': (9, 12), 'left siblings': ['SIMPX', 'LK', 'MF'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ich mache ihnen das jetzt fertig konnen sie morgen kommt die bestatigung konnen sie es ticket abholen)

Sentence 4:
0 Initial errors
0 on fringe, 0 iterations

Sentence 5:
0 Initial errors
0 on fringe, 0 iterations

Sentence 6:
0 Initial errors
0 on fringe, 0 iterations

Sentence 7:
0 Initial errors
0 on fringe, 0 iterations

Sentence 8:
0 Initial errors
0 on fringe, 0 iterations

Sentence 9:
0 Initial errors
0 on fringe, 0 iterations

Sentence 10:
0 Initial errors
0 on fringe, 0 iterations

Sentence 11:
0 Initial errors
0 on fringe, 0 iterations

Sentence 12:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX
			[01;31m(LV[00m
				(PX
					(APPR in)
					(NX zwei wochen))[01;31m)[00m
			(VF das)
			(LK ware)
			(MF der wievielte))))
Step:Unary
{'subtrees': ['PX'], 'family': ['LV', 'VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'CARD', 'NN', 'PDS', 'VAFIN', 'ART', 'NN'), 'right siblings': ['VF', 'LK', 'MF'], 'parent': 'SIMPX', 'auto preterminal span': (0, 7), 'span': (0, 3), 'left siblings': [], 'label': 'LV', 'classified_type': 'Unary', 'type': 'remove'}
(TOP in zwei wochen das ware der wievielte)

Sentence 13:
0 Initial errors
0 on fringe, 0 iterations

Sentence 14:
0 Initial errors
0 on fringe, 0 iterations

Sentence 15:
0 Initial errors
0 on fringe, 0 iterations

Sentence 16:
3 Initial errors
0 on fringe, 3 iterations
1 Error:Unary
1 Error:Unary
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;36m(TURN[00m
			[01;36m(TOP[00m
				(SIMPX
					(KOORD und)
					(C wenn)
					(FKOORD
						(MVC wir sonntags fahren)
						(KON und)
						(MVC
							(MF
								(ADVX noch)
								[01;31m(ADVX[00m
									(ADV vorher)[01;31m)[00m
								(PX ins theater))
							(VC gehen))))[01;36m)[00m[01;36m)[00m
		(ADVX oder so)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['TOP', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'KOUS', 'PPER', 'ADV', 'VVFIN', 'KON', 'ADV', 'ADV', 'APPRART', 'NN', 'VVFIN'), 'right siblings': [(ADVX (KON oder) (ADVX (ADV so)))], 'left siblings': [], 'auto preterminal span': (0, 11), 'span': (0, 11), 'parent': 'TURN', 'label': 'TOP', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		[01;36m(TURN[00m
			(TOP
				(SIMPX
					(KOORD und)
					(C wenn)
					(FKOORD
						(MVC wir sonntags fahren)
						(KON und)
						(MVC
							(MF
								(ADVX noch)
								[01;31m(ADVX[00m
									(ADV vorher)[01;31m)[00m
								(PX ins theater))
							(VC gehen)))))[01;36m)[00m
		(ADVX oder so)))
Step:Unary
{'subtrees': ['TOP'], 'family': ['TURN', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'KOUS', 'PPER', 'ADV', 'VVFIN', 'KON', 'ADV', 'ADV', 'APPRART', 'NN', 'VVFIN'), 'right siblings': [(ADVX (KON oder) (ADVX (ADV so)))], 'left siblings': [], 'auto preterminal span': (0, 11), 'span': (0, 11), 'parent': 'TURN', 'label': 'TURN', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(TURN
			(TOP
				(SIMPX
					(KOORD und)
					(C wenn)
					(FKOORD
						(MVC wir sonntags fahren)
						(KON und)
						(MVC
							(MF
								(ADVX noch)
								[01;31m(ADVX[00m
									(ADV vorher)[01;31m)[00m
								(PX ins theater))
							(VC gehen))))))
		(ADVX oder so)))
Step:Single Word Phrase
{'subtrees': ['ADV'], 'family': ['ADVX', 'ADVX', 'PX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADV', 'ADV', 'APPRART', 'NN'), 'right siblings': ['PX'], 'parent': 'MF', 'auto preterminal span': (6, 10), 'span': (7, 8), 'left siblings': ['ADVX'], 'label': 'ADVX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP und wenn wir sonntags fahren und noch vorher ins theater gehen oder so)

Sentence 17:
0 Initial errors
0 on fringe, 0 iterations

Sentence 18:
0 Initial errors
0 on fringe, 0 iterations

Sentence 19:
0 Initial errors
0 on fringe, 0 iterations

Sentence 20:
0 Initial errors
0 on fringe, 0 iterations

Sentence 21:
0 Initial errors
0 on fringe, 0 iterations

Sentence 22:
0 Initial errors
0 on fringe, 0 iterations

Sentence 23:
0 Initial errors
0 on fringe, 0 iterations

Sentence 24:
0 Initial errors
0 on fringe, 0 iterations

Sentence 25:
0 Initial errors
0 on fringe, 0 iterations

Sentence 26:
0 Initial errors
0 on fringe, 0 iterations

Sentence 27:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF vielleicht)
			(LK konnen)
			(MF
				(NX sie)
				(ADVX dann)
				(ADVX auch)
				[01;36m(PX[00m
					(ADVX direkt)
					[01;31m(PX[00m
						(APPR nach)
						(NX dem intercityhotel)[01;31m)[00m[01;36m)[00m)
			(VC fragen))))
Step:Modifier Attachment
{'new_parent': 'PX', 'new_family': ['ADVX', 'APPR', 'NX'], 'mover info': [('ADVX', (6, 7))], 'old_family': ['NX', 'ADVX', 'ADVX', 'ADVX', 'PX'], 'start left siblings': ['NX', 'ADVX', 'ADVX'], 'auto preterminals': ('PPER', 'ADV', 'ADV', 'ADV', 'APPR', 'ART', 'NE'), 'start right siblings': ['PX'], 'end left siblings': [], 'auto preterminal span': (3, 10), 'movers': ['ADVX'], 'old_parent': 'MF', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['APPR', 'NX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP ja vielleicht konnen sie dann auch direkt nach dem intercityhotel fragen)

Sentence 28:
0 Initial errors
0 on fringe, 0 iterations

Sentence 29:
0 Initial errors
0 on fringe, 0 iterations

Sentence 30:
8 Initial errors
0 on fringe, 5 iterations
3 Error:UNSET move
2 Error:Different label
1 Error:Unary
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX
			(LK wissen)
			(MF
				[01;36m(MF[00m
					(NX
						(PPER sie))[01;36m)[00m
				[01;36m(C[00m
					(NX
						(PIS was))[01;36m)[00m))
		(SIMPX
			(VF ich)
			(FKOORD
				(LKMVC rufe im reiseburo an)
				(KON und)
				[01;36m(LKM[00m
					[01;31m(LKM[00m
						(LK klare)
						[01;36m(VF[00m [01;31m(MF[00m [01;33m(SIMPX[00m
							(NX
								(NX das)
								(NX alles))[01;31m)[00m[01;36m)[00m[01;31m)[00m
					[01;31m(LKM[00m
						(LK kaufe)
						(MF die tickets)[01;31m)[00m[01;36m)[00m)) [01;33mSIMPX)[00m
		(SIMPX und dann rufe ich sie noch mal an wegen dem programm im ballhaus)))
Step:UNSET move
{'new_parent': 'LKM', 'new_family': ['LK', 'MF', 'LKM'], 'mover info': [('LKM', (12, 15))], 'old_family': ['LKMVC', 'KON', 'LKM', 'LKM'], 'start left siblings': ['LKMVC', 'KON', 'LKM'], 'auto preterminals': ('VVFIN', 'APPRART', 'NN', 'PTKVZ', 'KON', 'VVFIN', 'PDS', 'PIS', 'VVFIN', 'ART', 'NN'), 'start right siblings': [], 'end left siblings': ['LK', 'MF'], 'auto preterminal span': (4, 15), 'adding node already present': False, 'movers': ['LKM'], 'old_parent': 'FKOORD', 'added and moved': True, 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'SIMPX'}
(TOP
	(TURN
		(SIMPX
			(LK wissen)
			(MF
				[01;36m(MF[00m
					(NX
						(PPER sie))[01;36m)[00m
				[01;36m(C[00m
					(NX
						(PIS was))[01;36m)[00m))
		(SIMPX
			(VF ich)
			(FKOORD
				(LKMVC rufe im reiseburo an)
				(KON und)
				(LKM
					(LK klare)
					(SIMPX
						[01;36m(VF[00m [01;31m(MF[00m
							(NX
								(NX das)
								(NX alles))[01;31m)[00m[01;36m)[00m
						[01;31m(LKM[00m
							(LK kaufe)
							(MF die tickets)[01;31m)[00m))))
		(SIMPX und dann rufe ich sie noch mal an wegen dem programm im ballhaus)))
Step:Different label
{'family': ['VF', 'LKM'], 'auto preterminal span': (10, 12), 'span': (10, 12), 'subtrees': ['NX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('PDS', 'PIS'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('MF', 'VF')}
(TOP
	(TURN
		(SIMPX
			(LK wissen)
			(MF
				[01;36m(MF[00m
					(NX
						(PPER sie))[01;36m)[00m
				[01;36m(C[00m
					(NX
						(PIS was))[01;36m)[00m))
		(SIMPX
			(VF ich)
			(FKOORD
				(LKMVC rufe im reiseburo an)
				(KON und)
				(LKM
					(LK klare)
					(SIMPX
						(VF das alles)
						[01;31m(LKM[00m
							(LK kaufe)
							(MF die tickets)[01;31m)[00m))))
		(SIMPX und dann rufe ich sie noch mal an wegen dem programm im ballhaus)))
Step:Unary
{'subtrees': ['NX'], 'family': ['MF', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER',), 'right siblings': [(NX (PIS was))], 'left siblings': [], 'auto preterminal span': (1, 2), 'span': (1, 2), 'parent': 'MF', 'label': 'MF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SIMPX
			(LK wissen)
			(MF
				(MF sie)
				[01;36m(C[00m
					(NX
						(PIS was))[01;36m)[00m))
		(SIMPX
			(VF ich)
			(FKOORD
				(LKMVC rufe im reiseburo an)
				(KON und)
				(LKM
					(LK klare)
					(SIMPX
						(VF das alles)
						[01;31m(LKM[00m
							(LK kaufe)
							(MF die tickets)[01;31m)[00m))))
		(SIMPX und dann rufe ich sie noch mal an wegen dem programm im ballhaus)))
Step:Unary
{'subtrees': ['NX'], 'family': ['MF', 'C'], 'over_word': False, 'over words': False, 'auto preterminals': ('PIS',), 'right siblings': [], 'left siblings': [(MF (NX (PPER sie)))], 'auto preterminal span': (2, 3), 'span': (2, 3), 'parent': 'MF', 'label': 'C', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SIMPX wissen sie was)
		(SIMPX
			(VF ich)
			(FKOORD
				(LKMVC rufe im reiseburo an)
				(KON und)
				(LKM
					(LK klare)
					(SIMPX
						(VF das alles)
						[01;31m(LKM[00m
							(LK kaufe)
							(MF die tickets)[01;31m)[00m))))
		(SIMPX und dann rufe ich sie noch mal an wegen dem programm im ballhaus)))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['VF', 'LKM'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'PIS', 'VVFIN', 'ART', 'NN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (10, 15), 'span': (12, 15), 'left siblings': ['VF'], 'label': 'LKM', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP wissen sie was ich rufe im reiseburo an und klare das alles kaufe die tickets und dann rufe ich sie noch mal an wegen dem programm im ballhaus)

Sentence 31:
5 Initial errors
0 on fringe, 4 iterations
2 Error:Modifier Attachment
1 Error:Unary
1 Error:PP Attachment
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(P[00m
			(SIMPX
				(VF wir)
				(LK brauchten)
				(MF
					(ADVX vielleicht)
					(ADVX vorher)
					(ADVX noch)
					[01;31m(NX[00m
						(ADVX ungefahr)
						[01;36m(NX[00m
							(ART einen)
							(NN zug)[01;36m)[00m[01;31m)[00m)
				(NF mit dem wir zuruckfahren))
			(KOUS weil)
			(SIMPX
				(VF ich)
				(LK mus)
				(APPRART am)
				(DM nee)
				(DM nee)
				[01;31m(MF[00m
					[01;31m(PX[00m
						(PX am vierundzwanzigsten)
						(PX ungefahr um vier uhr)[01;31m)[00m
					(ADVX wieder)
					(ADVX hier)[01;31m)[00m
				(VC sein)
				(NF weil ich einen termin habe))[01;31m)[00m))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['ADVX', 'ADVX', 'ADVX', 'ADVX', 'NX'], 'mover info': [('ADVX', (5, 6))], 'old_family': ['ADVX', 'ART', 'NN'], 'start left siblings': [], 'auto preterminals': ('ADV', 'ADV', 'ADV', 'ADV', 'ART', 'NN'), 'start right siblings': ['ART', 'NN'], 'end left siblings': ['ADVX', 'ADVX', 'ADVX'], 'auto preterminal span': (2, 8), 'movers': ['ADVX'], 'old_parent': 'NX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['NX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;31m(P[00m
			(SIMPX wir brauchten vielleicht vorher noch ungefahr einen zug mit dem wir zuruckfahren)
			(KOUS weil)
			(SIMPX
				(VF ich)
				(LK mus)
				(APPRART am)
				(DM nee)
				(DM nee)
				[01;31m(MF[00m
					[01;31m(PX[00m
						(PX am vierundzwanzigsten)
						(PX ungefahr um vier uhr)[01;31m)[00m
					(ADVX wieder)
					(ADVX hier)[01;31m)[00m
				(VC sein)
				(NF weil ich einen termin habe))[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX', 'KOUS', 'SIMPX'], 'family': ['P'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'ADV', 'ADV', 'ADV', 'ART', 'NN', 'APPR', 'PRELS', 'PPER', 'VVFIN', 'KOUS', 'PPER', 'VMFIN', 'APPRART', 'PTKANT', 'PTKANT', 'APPRART', 'NN', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'ADV', 'VAINF', 'KOUS', 'PPER', 'ART', 'NN', 'VAFIN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 32), 'span': (0, 32), 'left siblings': [], 'label': 'P', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX wir brauchten vielleicht vorher noch ungefahr einen zug mit dem wir zuruckfahren)
		(KOUS weil)
		(SIMPX
			(VF ich)
			(LK mus)
			(APPRART am)
			(DM nee)
			(DM nee)
			[01;31m(MF[00m
				[01;31m(PX[00m
					(PX am vierundzwanzigsten)
					(PX ungefahr um vier uhr)[01;31m)[00m
				(ADVX wieder)
				(ADVX hier)[01;31m)[00m
			(VC sein)
			(NF weil ich einen termin habe))))
Step:PP Attachment
{'subtrees': ['PX', 'PX'], 'family': ['PX', 'ADVX', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'NN', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'ADV'), 'right siblings': ['ADVX', 'ADVX'], 'parent': 'MF', 'auto preterminal span': (18, 26), 'span': (18, 24), 'left siblings': [], 'label': 'PX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX wir brauchten vielleicht vorher noch ungefahr einen zug mit dem wir zuruckfahren)
		(KOUS weil)
		(SIMPX
			(VF ich)
			(LK mus)
			(APPRART am)
			(DM nee)
			(DM nee)
			[01;31m(MF[00m
				(PX am vierundzwanzigsten)
				(PX ungefahr um vier uhr)
				(ADVX wieder)
				(ADVX hier)[01;31m)[00m
			(VC sein)
			(NF weil ich einen termin habe))))
Step:PP Attachment
{'subtrees': ['PX', 'PX', 'ADVX', 'ADVX'], 'family': ['VF', 'LK', 'APPRART', 'DM', 'DM', 'MF', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VMFIN', 'APPRART', 'PTKANT', 'PTKANT', 'APPRART', 'NN', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'ADV', 'VAINF', 'KOUS', 'PPER', 'ART', 'NN', 'VAFIN'), 'right siblings': ['VC', 'NF'], 'parent': 'SIMPX', 'auto preterminal span': (13, 32), 'span': (18, 26), 'left siblings': ['VF', 'LK', 'APPRART', 'DM', 'DM'], 'label': 'MF', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP wir brauchten vielleicht vorher noch ungefahr einen zug mit dem wir zuruckfahren weil ich mus am nee nee am vierundzwanzigsten ungefahr um vier uhr wieder hier sein weil ich einen termin habe)

Sentence 32:
9 Initial errors
0 on fringe, 5 iterations
2 Error:Single Word Phrase
2 Error:PP Attachment
3 Error:Modifier Attachment
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			(VF ich)
			(LK sehe)
			(MF grade)
			(NF
				(SIMPX
					(VF ab hannover)
					(LK geht)
					[01;31m(MF[00m
						[01;36m(MF[00m
							(ADJX stundlich)
							(NX ein zug)[01;36m)[00m
						[01;36m(VC[00m [01;31m(ADVX[00m
							(ADV zuruck)[01;31m)[00m[01;36m)[00m
						[01;33m(NF[00m (PX von bonn)[01;31m)[00m
					[01;31m(NF[00m
						[01;31m(PX[00m
							(ADVX immer)
							[01;36m(PX[00m
								(APPR um)
								(NX achtundfunfzig)[01;36m)[00m[01;31m)[00m[01;31m)[00m))[01;31m)[00m)) [01;33mNF)[00m
Step:Single Word Phrase
{'family': ['ADJX', 'NX', 'VC', 'PX'], 'auto preterminal span': (9, 10), 'span': (9, 10), 'subtrees': ['ADV'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'VC')}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			(VF ich)
			(LK sehe)
			(MF grade)
			(NF
				(SIMPX
					(VF ab hannover)
					(LK geht)
					[01;31m(MF[00m
						[01;36m(MF[00m
							(ADJX stundlich)
							(NX ein zug)[01;36m)[00m
						(VC zuruck)
						[01;33m(NF[00m (PX von bonn)[01;31m)[00m
					[01;31m(NF[00m
						[01;31m(PX[00m
							(ADVX immer)
							[01;36m(PX[00m
								(APPR um)
								(NX achtundfunfzig)[01;36m)[00m[01;31m)[00m[01;31m)[00m))[01;31m)[00m)) [01;33mNF)[00m
Step:PP Attachment
{'new_parent': 'NF', 'new_family': ['VC', 'PX', 'PX'], 'mover info': [('VC', (9, 10)), ('PX', (10, 12))], 'old_family': ['ADJX', 'NX', 'VC', 'PX'], 'start left siblings': ['ADJX', 'NX'], 'auto preterminals': ('APPR', 'NE', 'VVFIN', 'ADJD', 'ART', 'NN', 'ADV', 'APPR', 'NE', 'ADV', 'APPR', 'CARD'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (3, 15), 'movers': ['VC', 'PX'], 'old_parent': 'MF', 'end right siblings': ['PX'], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			(VF ich)
			(LK sehe)
			(MF grade)
			(NF
				(SIMPX
					(VF ab hannover)
					(LK geht)
					(MF stundlich ein zug)
					[01;31m(NF[00m
						(VC zuruck)
						[01;36m(NF[00m
							(PX von bonn)
							[01;31m(PX[00m
								(ADVX immer)
								[01;36m(PX[00m
									(APPR um)
									(NX achtundfunfzig)[01;36m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m))[01;31m)[00m))
Step:Modifier Attachment
{'new_parent': 'NF', 'new_family': ['VC', 'PX', 'ADVX', 'PX'], 'mover info': [('ADVX', (12, 13))], 'old_family': ['ADVX', 'APPR', 'NX'], 'start left siblings': [], 'auto preterminals': ('ADV', 'APPR', 'NE', 'ADV', 'APPR', 'CARD'), 'start right siblings': ['APPR', 'NX'], 'end left siblings': ['VC', 'PX'], 'auto preterminal span': (9, 15), 'adding node already present': False, 'movers': ['ADVX'], 'old_parent': 'PX', 'POS confusion': ('ADV', 'ADV'), 'added and moved': True, 'end right siblings': ['PX'], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'NF'}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			(VF ich)
			(LK sehe)
			(MF grade)
			(NF
				(SIMPX
					(VF ab hannover)
					(LK geht)
					(MF stundlich ein zug)
					[01;31m(NF[00m
						(VC zuruck)
						(NF von bonn immer um achtundfunfzig)[01;31m)[00m))[01;31m)[00m))
Step:Unary
{'subtrees': ['VF', 'LK', 'MF', 'NF'], 'family': ['SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'APPR', 'NE', 'VVFIN', 'ADJD', 'ART', 'NN', 'ADV', 'APPR', 'NE', 'ADV', 'APPR', 'CARD'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 15), 'span': (0, 15), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(VF ich)
		(LK sehe)
		(MF grade)
		(NF
			(SIMPX
				(VF ab hannover)
				(LK geht)
				(MF stundlich ein zug)
				[01;31m(NF[00m
					(VC zuruck)
					(NF von bonn immer um achtundfunfzig)[01;31m)[00m))))
Step:UNSET remove
{'subtrees': ['VC', 'NF'], 'family': ['VF', 'LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'NE', 'VVFIN', 'ADJD', 'ART', 'NN', 'ADV', 'APPR', 'NE', 'ADV', 'APPR', 'CARD'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (3, 15), 'span': (9, 15), 'left siblings': ['VF', 'LK', 'MF'], 'label': 'NF', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ich sehe grade ab hannover geht stundlich ein zug zuruck von bonn immer um achtundfunfzig)

Sentence 33:
2 Initial errors
0 on fringe, 1 iterations
2 Error:UNSET move
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(LK konnen)
				(MF sie ja gleich ein doppelzimmer)
				(VC nehmen)[01;36m)[00m
			(NF frau schmidt)[01;31m)[00m
		(DM oder)))
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['DM', 'SIMPX', 'NF', 'DM'], 'mover info': [('NF', (8, 10))], 'old_family': ['LK', 'MF', 'VC', 'NF'], 'start left siblings': ['LK', 'MF', 'VC'], 'auto preterminals': ('PTKANT', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'NN', 'VVINF', 'NN', 'NE', 'ITJ'), 'start right siblings': [], 'end left siblings': ['DM', 'SIMPX'], 'auto preterminal span': (0, 11), 'movers': ['NF'], 'old_parent': 'SIMPX', 'end right siblings': ['DM'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP ja konnen sie ja gleich ein doppelzimmer nehmen frau schmidt oder)

Sentence 34:
0 Initial errors
0 on fringe, 0 iterations

Sentence 35:
0 Initial errors
0 on fringe, 0 iterations

Sentence 36:
0 Initial errors
0 on fringe, 0 iterations

Sentence 37:
0 Initial errors
0 on fringe, 0 iterations

Sentence 38:
0 Initial errors
0 on fringe, 0 iterations

Sentence 39:
0 Initial errors
0 on fringe, 0 iterations

Sentence 40:
0 Initial errors
0 on fringe, 0 iterations

Sentence 41:
0 Initial errors
0 on fringe, 0 iterations

Sentence 42:
0 Initial errors
0 on fringe, 0 iterations

Sentence 43:
0 Initial errors
0 on fringe, 0 iterations

Sentence 44:
0 Initial errors
0 on fringe, 0 iterations

Sentence 45:
0 Initial errors
0 on fringe, 0 iterations

Sentence 46:
6 Initial errors
0 on fringe, 5 iterations
2 Error:Different label
1 Error:Unary
1 Error:Modifier Attachment
1 Error:PP Attachment
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP [01;33m(PX[00m
	(TURN
		[01;36m(VF[00m [01;36m(PX[00m [01;31m(ADJX[00m
			(PX am zehnten juli)
			[01;31m(ADJX[00m
				(PX von hannover) [01;33mPX)[00m
				(ADVX zuruck)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m
		[01;31m(SIMPX[00m
			(LK ginge)
			(MF das denn dann ab achtzehn uhr)[01;31m)[00m))
Step:Different label
{'family': ['PX', 'SIMPX'], 'auto preterminal span': (0, 6), 'span': (0, 6), 'subtrees': ['PX', 'ADJX'], 'parent': 'TURN', 'over_word': False, 'auto preterminals': ('APPRART', 'ADJA', 'NN', 'APPR', 'NE', 'ADV'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('ADJX', 'PX')}
(TOP [01;33m(PX[00m
	(TURN
		[01;36m(VF[00m
			(PX
				(PX am zehnten juli)
				[01;31m(ADJX[00m
					(PX von hannover) [01;33mPX)[00m
					(ADVX zuruck)[01;31m)[00m)[01;36m)[00m
		[01;31m(SIMPX[00m
			(LK ginge)
			(MF das denn dann ab achtzehn uhr)[01;31m)[00m))
Step:Unary
{'subtrees': ['PX'], 'family': ['VF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'ADJA', 'NN', 'APPR', 'NE', 'ADV'), 'right siblings': [(SIMPX (LK (VXFIN (VVFIN ginge))) (MF (NX (PDS das)) (ADVX (ADV denn)) (ADVX (ADV dann)) (PX (APPR ab) (NX (ADJX (CARD achtzehn)) (NN uhr)))))], 'left siblings': [], 'auto preterminal span': (0, 6), 'span': (0, 6), 'parent': 'TURN', 'label': 'VF', 'classified_type': 'Unary', 'type': 'add'}
(TOP [01;33m(PX[00m
	(TURN
		(VF
			(PX
				(PX am zehnten juli)
				[01;31m(ADJX[00m
					(PX von hannover) [01;33mPX)[00m
					(ADVX zuruck)[01;31m)[00m))
		[01;31m(SIMPX[00m
			(LK ginge)
			(MF das denn dann ab achtzehn uhr)[01;31m)[00m))
Step:Modifier Attachment
{'subtrees': ['PX', 'ADVX'], 'family': ['PX', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'ADJA', 'NN', 'APPR', 'NE', 'ADV'), 'right siblings': [], 'parent': 'PX', 'auto preterminal span': (0, 6), 'span': (3, 6), 'left siblings': ['PX'], 'label': 'ADJX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(VF
			(PX
				[01;36m(PX[00m
					(PX am zehnten juli)
					(PX von hannover)[01;36m)[00m
				(ADVX zuruck)))
		[01;31m(SIMPX[00m
			(LK ginge)
			(MF das denn dann ab achtzehn uhr)[01;31m)[00m))
Step:PP Attachment
{'subtrees': ['PX', 'PX'], 'family': ['PX', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'ADJA', 'NN', 'APPR', 'NE'), 'right siblings': [(ADVX (ADV zuruck))], 'left siblings': [], 'auto preterminal span': (0, 5), 'span': (0, 5), 'parent': 'PX', 'label': 'PX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(VF am zehnten juli von hannover zuruck)
		[01;31m(SIMPX[00m
			(LK ginge)
			(MF das denn dann ab achtzehn uhr)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['VF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'ADJA', 'NN', 'APPR', 'NE', 'ADV', 'VVFIN', 'PDS', 'ADV', 'ADV', 'APPR', 'CARD', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 13), 'span': (6, 13), 'left siblings': ['VF'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP am zehnten juli von hannover zuruck ginge das denn dann ab achtzehn uhr)

Sentence 47:
0 Initial errors
0 on fringe, 0 iterations

Sentence 48:
0 Initial errors
0 on fringe, 0 iterations

Sentence 49:
0 Initial errors
0 on fringe, 0 iterations

Sentence 50:
0 Initial errors
0 on fringe, 0 iterations

Sentence 51:
8 Initial errors
0 on fringe, 4 iterations
3 Error:NP Attachment
2 Error:Different label
2 Error:Modifier Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM also)
		(SIMPX
			(VF es)
			(LK ware)
			[01;31m(MF[00m [01;33m(MF[00m
				(ADVX ja)
				[01;31m(ADJX[00m
					[01;31m(ADJX[00m
						(ADVX dreimal)
						[01;36m(ADJX[00m
							(ADVX so)
							(ADJD lang)[01;36m)[00m[01;31m)[00m [01;33mMF)[00m
					[01;36m(SIMPX[00m [01;36m(NF[00m [01;31m(NX[00m
						(KOKOM wie)
						(NN fliegen)[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m)))
Step:NP Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'NX'], 'mover info': [('NX', (7, 9))], 'old_family': ['ADJX', 'NX'], 'start left siblings': ['ADJX'], 'auto preterminals': ('PPER', 'VAFIN', 'ADV', 'ADV', 'ADV', 'ADJD', 'KOKOM', 'NN'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (1, 9), 'movers': ['NX'], 'old_parent': 'ADJX', 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM also)
		(SIMPX
			(VF es)
			(LK ware)
			(MF
				(ADVX ja)
				[01;31m(ADJX[00m
					(ADVX dreimal)
					[01;36m(ADJX[00m
						(ADVX so)
						(ADJD lang)[01;36m)[00m[01;31m)[00m)
			[01;36m(SIMPX[00m [01;36m(NF[00m [01;31m(NX[00m
				(KOKOM wie)
				(NN fliegen)[01;31m)[00m[01;36m)[00m[01;36m)[00m)))
Step:Different label
{'family': ['VF', 'LK', 'MF', 'NF'], 'auto preterminal span': (7, 9), 'span': (7, 9), 'subtrees': ['KOKOM', 'NN'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('KOKOM', 'NN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('NX', 'NF')}
(TOP
	(TURN
		(DM also)
		(SIMPX
			(VF es)
			(LK ware)
			(MF
				(ADVX ja)
				[01;31m(ADJX[00m
					(ADVX dreimal)
					[01;36m(ADJX[00m
						(ADVX so)
						(ADJD lang)[01;36m)[00m[01;31m)[00m)
			[01;36m(SIMPX[00m
				(NF
					(KOKOM wie)
					(NN fliegen))[01;36m)[00m)))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['ADVX', 'ADVX', 'ADJX'], 'mover info': [('ADVX', (4, 5))], 'old_family': ['ADVX', 'ADVX', 'ADJD'], 'start left siblings': [], 'auto preterminals': ('ADV', 'ADV', 'ADV', 'ADJD'), 'start right siblings': ['ADVX', 'ADJD'], 'end left siblings': ['ADVX'], 'auto preterminal span': (3, 7), 'movers': ['ADVX'], 'old_parent': 'ADJX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['ADJX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM also)
		(SIMPX
			(VF es)
			(LK ware)
			(MF ja dreimal so lang)
			[01;36m(SIMPX[00m
				(NF
					(KOKOM wie)
					(NN fliegen))[01;36m)[00m)))
Step:Unary
{'subtrees': ['NF'], 'family': ['VF', 'LK', 'MF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOKOM', 'NN'), 'right siblings': [], 'left siblings': [(VF (NX (PPER es))), (LK (VXFIN (VAFIN ware))), (MF (ADVX (ADV ja)) (ADVX (ADV dreimal)) (ADJX (ADVX (ADV so)) (ADJD lang)))], 'auto preterminal span': (7, 9), 'span': (7, 9), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'add'}
(TOP also es ware ja dreimal so lang wie fliegen)

Sentence 52:
2 Initial errors
0 on fringe, 2 iterations
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM also)
		[01;36m(VF[00m
			(SIMPX
				(VF ich)
				(LK werde)
				(MF jetzt gleich noch mal)
				(VC nachgucken))[01;36m)[00m
		[01;31m(SIMPX[00m
			(LK konnte)
			(MF sie dann)
			(VC zuruckrufen)[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['DM', 'VF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'ADV', 'ADV', 'ADV', 'ADV', 'VVINF'), 'right siblings': [(SIMPX (LK (VXFIN (VMFIN konnte))) (MF (NX (PPER sie)) (ADVX (ADV dann))) (VC (VXINF (VVINF zuruckrufen))))], 'left siblings': [(DM (ADVX (ADV also)))], 'auto preterminal span': (1, 8), 'span': (1, 8), 'parent': 'TURN', 'label': 'VF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		(VF ich werde jetzt gleich noch mal nachgucken)
		[01;31m(SIMPX[00m
			(LK konnte)
			(MF sie dann)
			(VC zuruckrufen)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['LK', 'MF', 'VC'], 'family': ['DM', 'VF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPER', 'VAFIN', 'ADV', 'ADV', 'ADV', 'ADV', 'VVINF', 'VMFIN', 'PPER', 'ADV', 'VVINF'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 12), 'span': (8, 12), 'left siblings': ['DM', 'VF'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP also ich werde jetzt gleich noch mal nachgucken konnte sie dann zuruckrufen)

Sentence 53:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(PX[00m
	(TOP
		(TURN
			(PX in zehn minuten)
			(ADVX oder so)))[01;36m)[00m
Step:Unary
{'subtrees': ['TURN'], 'family': ['PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'CARD', 'NN', 'KON', 'ADV'), 'right siblings': [], 'left siblings': [], 'auto preterminal span': (0, 5), 'span': (0, 5), 'parent': 'TOP', 'label': 'PX', 'classified_type': 'Unary', 'type': 'add'}
(TOP in zehn minuten oder so)

Sentence 54:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SIMPX[00m
	(TOP
		(TURN
			(SIMPX sieht das mit dem hotel aus)
			(SIMPX konnen sie das auch buchen fur mich)))[01;36m)[00m
Step:Unary
{'subtrees': ['TURN'], 'family': ['SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PDS', 'APPR', 'ART', 'NN', 'PTKVZ', 'VMFIN', 'PPER', 'PDS', 'ADV', 'VVINF', 'APPR', 'PPER'), 'right siblings': [], 'left siblings': [], 'auto preterminal span': (0, 13), 'span': (0, 13), 'parent': 'TOP', 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'add'}
(TOP sieht das mit dem hotel aus konnen sie das auch buchen fur mich)

Sentence 55:
0 Initial errors
0 on fringe, 0 iterations

Sentence 56:
0 Initial errors
0 on fringe, 0 iterations

Sentence 57:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Co-ordination
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP [01;33m(ADJX[00m
	(TURN
		(ADJX
			(ADJX zentral)
			[01;31m(PX[00m
				(PX zum stadtzentrum) [01;33mADJX)[00m
				(KON oder)
				(PX zu ihrem kongresort)[01;31m)[00m)))
Step:Co-ordination
{'new_parent': 'TURN', 'new_family': ['ADJX', 'KON', 'PX'], 'mover info': [('KON', (3, 4)), ('PX', (4, 7))], 'old_family': ['PX', 'KON', 'PX'], 'start left siblings': ['PX'], 'auto preterminals': ('ADJD', 'APPRART', 'NN', 'KON', 'APPR', 'PPOSAT', 'NN'), 'start right siblings': [], 'end left siblings': ['ADJX'], 'auto preterminal span': (0, 7), 'adding node already present': False, 'movers': ['KON', 'PX'], 'old_parent': 'PX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'Co-ordination', 'type': 'move', 'added label': 'ADJX'}
(TOP zentral zum stadtzentrum oder zu ihrem kongresort)

Sentence 58:
0 Initial errors
0 on fringe, 0 iterations

Sentence 59:
3 Initial errors
0 on fringe, 2 iterations
2 Error:PP Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(KOORD und)
			(LK wissen)
			(MF sie schon)
			(NF
				(SIMPX
					[01;31m(MF[00m
						[01;36m(C[00m
							(PX
								(APPR in)
								(NX welcher preiskategorie))[01;36m)[00m
						[01;36m(MF[00m
							(NX
								(PDS das))[01;36m)[00m[01;31m)[00m
					(VC liegen sollte))))))
Step:PP Attachment
{'new_parent': 'SIMPX', 'new_family': ['PX', 'MF', 'VC'], 'mover info': [('PX', (5, 8))], 'old_family': ['PX', 'NX'], 'start left siblings': [], 'auto preterminals': ('APPR', 'PWAT', 'NN', 'PDS', 'VVINF', 'VMFIN'), 'start right siblings': ['NX'], 'end left siblings': [], 'auto preterminal span': (5, 11), 'movers': ['PX'], 'old_parent': 'MF', 'end right siblings': ['MF', 'VC'], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(KOORD und)
			(LK wissen)
			(MF sie schon)
			(NF
				(SIMPX
					[01;36m(C[00m
						(PX
							(APPR in)
							(NX welcher preiskategorie))[01;36m)[00m
					(MF das)
					(VC liegen sollte))))))
Step:Unary
{'subtrees': ['PX'], 'family': ['C', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'PWAT', 'NN'), 'right siblings': [(MF (NX (PDS das))), (VC (VXINF (VVINF liegen)) (VXFIN (VMFIN sollte)))], 'left siblings': [], 'auto preterminal span': (5, 8), 'span': (5, 8), 'parent': 'SIMPX', 'label': 'C', 'classified_type': 'Unary', 'type': 'add'}
(TOP ja und wissen sie schon in welcher preiskategorie das liegen sollte)

Sentence 60:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM also)
		(SIMPX
			(VF es)
			(LK sollte)
			(MF
				(NX
					(NX
						[01;31m(ADVX[00m
							(ADVX so)
							(ADV ungefahr)[01;31m)[00m
						(ADJX hundert)
						(NN mark))
					(PX pro ubernachtung mit fruhstuck))))))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'ADV'], 'family': ['ADVX', 'ADJX', 'NN'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'CARD', 'NN'), 'right siblings': ['ADJX', 'NN'], 'parent': 'NX', 'auto preterminal span': (4, 8), 'span': (4, 6), 'left siblings': [], 'label': 'ADVX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP ja also es sollte so ungefahr hundert mark pro ubernachtung mit fruhstuck)

Sentence 61:
0 Initial errors
0 on fringe, 0 iterations

Sentence 62:
0 Initial errors
0 on fringe, 0 iterations

Sentence 63:
6 Initial errors
0 on fringe, 3 iterations
2 Error:Single Word Phrase
2 Error:UNSET move
2 Error:UNSET move
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP [01;33m(SIMPX[00m
	(TURN
		[01;31m(SIMPX[00m
			(VF das)
			(LK ware)
			[01;31m(MF[00m
				[01;36m(MF[00m
					(ADVX
						(ADV jetzt)) [01;33mSIMPX)[00m[01;36m)[00m
				[01;36m(DM[00m [01;31m(ADVX[00m
					(ADV ja)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX das ist das billigste was ich ihnen jetzt gerade im moment anbieten konnte)))
Step:Single Word Phrase
{'family': ['ADVX', 'DM'], 'auto preterminal span': (3, 4), 'span': (3, 4), 'subtrees': ['ADV'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'DM')}
(TOP [01;33m(SIMPX[00m
	(TURN
		[01;31m(SIMPX[00m
			(VF das)
			(LK ware)
			[01;31m(MF[00m
				[01;36m(MF[00m
					(ADVX
						(ADV jetzt)) [01;33mSIMPX)[00m[01;36m)[00m
				(DM ja)[01;31m)[00m[01;31m)[00m
		(SIMPX das ist das billigste was ich ihnen jetzt gerade im moment anbieten konnte)))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'DM'], 'mover info': [('DM', (3, 4))], 'old_family': ['ADVX', 'DM'], 'start left siblings': ['ADVX'], 'auto preterminals': ('PDS', 'VAFIN', 'ADV', 'ADV'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (0, 4), 'movers': ['DM'], 'old_parent': 'MF', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(VF das)
				(LK ware)
				(MF jetzt)[01;36m)[00m
			(DM ja)[01;31m)[00m
		(SIMPX das ist das billigste was ich ihnen jetzt gerade im moment anbieten konnte)))
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['SIMPX', 'DM', 'SIMPX'], 'mover info': [('DM', (3, 4))], 'old_family': ['VF', 'LK', 'MF', 'DM'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('PDS', 'VAFIN', 'ADV', 'ADV', 'PDS', 'VAFIN', 'ART', 'NN', 'PRELS', 'PPER', 'PPER', 'ADV', 'ADV', 'APPRART', 'NN', 'VVINF', 'VMFIN'), 'start right siblings': [], 'end left siblings': ['SIMPX'], 'auto preterminal span': (0, 17), 'movers': ['DM'], 'old_parent': 'SIMPX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP das ware jetzt ja das ist das billigste was ich ihnen jetzt gerade im moment anbieten konnte)

Sentence 64:
13 Initial errors
0 on fringe, 7 iterations
6 Error:NP Internal Structure
2 Error:NP Internal Structure
1 Error:Single Word Phrase
1 Error:Single Word Phrase
1 Error:Unary
1 Error:Unary
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX
			(VF das hotel)
			(LK heist)
			[01;31m(MF[00m
				[01;31m(NX[00m
					(NX hotel am thielenplatz)
					[01;31m(PX[00m [01;33m(PX[00m
						(APPR mit)
						[01;31m(NX[00m [01;33m(NX[00m
							[01;31m(NX[00m
								[01;36m(ADJX[00m
									(BS t)[01;36m)[00m
								[01;36m(NX[00m
									(BS h)[01;36m)[00m[01;31m)[00m
							(KON und)
							[01;31m(NX[00m
								[01;36m(NX[00m
									(BS i) [01;33mNX) PX)[00m[01;36m)[00m
								[01;36m(VC[00m
									[01;36m(VXINF[00m
										(BS e)[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m)))
Step:NP Internal Structure
{'new_parent': 'NX', 'new_family': ['NX', 'PX', 'BS'], 'mover info': [('BS', (11, 12))], 'old_family': ['BS', 'BS'], 'start left siblings': ['BS'], 'auto preterminals': ('NN', 'APPRART', 'NE', 'APPR', 'BS', 'BS', 'KON', 'BS', 'BS'), 'start right siblings': [], 'end left siblings': ['NX', 'PX'], 'auto preterminal span': (3, 12), 'movers': ['BS'], 'old_parent': 'NX', 'POS confusion': ('BS', 'BS'), 'end right siblings': [], 'classified_type': 'NP Internal Structure', 'type': 'move'}
(TOP
	(TURN
		(SIMPX
			(VF das hotel)
			(LK heist)
			[01;31m(MF[00m
				[01;31m(NX[00m
					(NX hotel am thielenplatz)
					(PX
						(APPR mit)
						(NX
							[01;31m(NX[00m
								[01;36m(ADJX[00m
									(BS t)[01;36m)[00m
								[01;36m(NX[00m
									(BS h)[01;36m)[00m[01;31m)[00m
							(KON und)
							(NX i)))
					[01;36m(VC[00m
						[01;36m(VXINF[00m
							(BS e)[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m)))
Step:NP Internal Structure
{'new_parent': 'NX', 'new_family': ['BS', 'NX', 'KON', 'NX'], 'mover info': [('BS', (7, 8))], 'old_family': ['BS', 'BS'], 'start left siblings': [], 'auto preterminals': ('BS', 'BS', 'KON', 'BS'), 'start right siblings': ['BS'], 'end left siblings': [], 'auto preterminal span': (7, 11), 'movers': ['BS'], 'old_parent': 'NX', 'POS confusion': ('BS', 'BS'), 'end right siblings': ['NX', 'KON', 'NX'], 'classified_type': 'NP Internal Structure', 'type': 'move'}
(TOP
	(TURN
		(SIMPX
			(VF das hotel)
			(LK heist)
			[01;31m(MF[00m
				[01;31m(NX[00m
					(NX hotel am thielenplatz)
					(PX
						(APPR mit)
						(NX
							[01;36m(ADJX[00m
								(BS t)[01;36m)[00m
							(NX h)
							(KON und)
							(NX i)))
					[01;36m(VC[00m
						[01;36m(VXINF[00m
							(BS e)[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m)))
Step:Single Word Phrase
{'subtrees': ['BS'], 'family': ['ADJX', 'NX', 'KON', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('BS',), 'right siblings': [(NX (BS h)), (KON und), (NX (BS i))], 'left siblings': [], 'auto preterminal span': (7, 8), 'span': (7, 8), 'parent': 'NX', 'label': 'ADJX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SIMPX
			(VF das hotel)
			(LK heist)
			[01;31m(MF[00m
				[01;31m(NX[00m
					(NX hotel am thielenplatz)
					(PX mit t h und i)
					[01;36m(VC[00m
						[01;36m(VXINF[00m
							(BS e)[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m)))
Step:Single Word Phrase
{'subtrees': ['BS'], 'family': ['NX', 'PX', 'VXINF'], 'over_word': True, 'over words': True, 'auto preterminals': ('BS',), 'right siblings': [], 'left siblings': [(NX (NX (NN hotel)) (PX (APPRART am) (NX (NE thielenplatz)))), (PX (APPR mit) (NX (ADJX (BS t)) (NX (BS h)) (KON und) (NX (BS i))))], 'auto preterminal span': (11, 12), 'span': (11, 12), 'parent': 'NX', 'label': 'VXINF', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SIMPX
			(VF das hotel)
			(LK heist)
			[01;31m(MF[00m
				[01;31m(NX[00m
					(NX hotel am thielenplatz)
					(PX mit t h und i)
					[01;36m(VC[00m
						(VXINF
							(BS e))[01;36m)[00m[01;31m)[00m[01;31m)[00m)))
Step:Unary
{'subtrees': ['VXINF'], 'family': ['NX', 'PX', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('BS',), 'right siblings': [], 'left siblings': [(NX (NX (NN hotel)) (PX (APPRART am) (NX (NE thielenplatz)))), (PX (APPR mit) (NX (ADJX (BS t)) (NX (BS h)) (KON und) (NX (BS i))))], 'auto preterminal span': (11, 12), 'span': (11, 12), 'parent': 'NX', 'label': 'VC', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SIMPX
			(VF das hotel)
			(LK heist)
			[01;31m(MF[00m
				[01;31m(NX[00m
					(NX hotel am thielenplatz)
					(PX mit t h und i)
					(VC e)[01;31m)[00m[01;31m)[00m)))
Step:Unary
{'subtrees': ['NX'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'VVFIN', 'NN', 'APPRART', 'NE', 'APPR', 'BS', 'BS', 'KON', 'BS', 'BS'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (0, 12), 'span': (3, 12), 'left siblings': ['VF', 'LK'], 'label': 'MF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX
			(VF das hotel)
			(LK heist)
			[01;31m(NX[00m
				(NX hotel am thielenplatz)
				(PX mit t h und i)
				(VC e)[01;31m)[00m)))
Step:PP Attachment
{'subtrees': ['NX', 'PX', 'VC'], 'family': ['VF', 'LK', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'VVFIN', 'NN', 'APPRART', 'NE', 'APPR', 'BS', 'BS', 'KON', 'BS', 'BS'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (0, 12), 'span': (3, 12), 'left siblings': ['VF', 'LK'], 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP das hotel heist hotel am thielenplatz mit t h und i e)

Sentence 65:
6 Initial errors
0 on fringe, 3 iterations
3 Error:PP Attachment
2 Error:Modifier Attachment
1 Error:Clause Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM also)
		[01;36m(SIMPX[00m
			(SIMPX
				(LK soll)
				(MF
					(NX ich)
					(ADVX jetzt)
					(PX fur sie)
					[01;36m(NX[00m
						[01;31m(NX[00m
							(NX den flug)
							[01;33m(PX[00m (PX vom kolnbonner flughafen)[01;31m)[00m
						(PX am siebten juli)[01;36m)[00m) [01;33mPX)[00m
				(VC buchen)
				(NF um sieben uhr zehn))
			(SIMPX sie sind dann um acht uhr zehn in hannover)[01;36m)[00m
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK informiere)
			(MF ich mich noch)
			(NF
				(SIMPX
					(C ob)
					(MF
						(NX sie)
						[01;31m(PX[00m
							(ADVX abends)
							[01;36m(PX[00m
								(APPRART am)
								(NX zehnten juli)[01;36m)[00m[01;31m)[00m)
					(VC zuruckfliegen konnten))))))
Step:PP Attachment
{'new_parent': 'NX', 'new_family': ['NX', 'PX', 'PX'], 'mover info': [('PX', (11, 14))], 'old_family': ['NX', 'ADVX', 'PX', 'NX', 'PX'], 'start left siblings': ['NX', 'ADVX', 'PX', 'NX'], 'auto preterminals': ('PPER', 'ADV', 'APPR', 'PPER', 'ART', 'NN', 'APPRART', 'ADJA', 'NN', 'APPRART', 'ADJA', 'NN'), 'start right siblings': [], 'end left siblings': ['NX', 'PX'], 'auto preterminal span': (2, 14), 'adding node already present': False, 'movers': ['PX'], 'old_parent': 'MF', 'added and moved': True, 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'PX'}
(TOP
	(TURN
		(DM also)
		[01;36m(SIMPX[00m
			(SIMPX soll ich jetzt fur sie den flug vom kolnbonner flughafen am siebten juli buchen um sieben uhr zehn)
			(SIMPX sie sind dann um acht uhr zehn in hannover)[01;36m)[00m
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK informiere)
			(MF ich mich noch)
			(NF
				(SIMPX
					(C ob)
					(MF
						(NX sie)
						[01;31m(PX[00m
							(ADVX abends)
							[01;36m(PX[00m
								(APPRART am)
								(NX zehnten juli)[01;36m)[00m[01;31m)[00m)
					(VC zuruckfliegen konnten))))))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'ADVX', 'PX'], 'mover info': [('ADVX', (36, 37))], 'old_family': ['ADVX', 'APPRART', 'NX'], 'start left siblings': [], 'auto preterminals': ('PPER', 'ADV', 'APPRART', 'ADJA', 'NN'), 'start right siblings': ['APPRART', 'NX'], 'end left siblings': ['NX'], 'auto preterminal span': (35, 40), 'movers': ['ADVX'], 'old_parent': 'PX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['PX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM also)
		[01;36m(SIMPX[00m
			(SIMPX soll ich jetzt fur sie den flug vom kolnbonner flughafen am siebten juli buchen um sieben uhr zehn)
			(SIMPX sie sind dann um acht uhr zehn in hannover)[01;36m)[00m
		(SIMPX und dann informiere ich mich noch ob sie abends am zehnten juli zuruckfliegen konnten)))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['DM', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VMFIN', 'PPER', 'ADV', 'APPR', 'PPER', 'ART', 'NN', 'APPRART', 'ADJA', 'NN', 'APPRART', 'ADJA', 'NN', 'VVINF', 'APPR', 'CARD', 'NN', 'CARD', 'PPER', 'VAFIN', 'ADV', 'APPR', 'CARD', 'NN', 'CARD', 'APPR', 'NE'), 'right siblings': [(SIMPX (KOORD (KON und)) (VF (ADVX (ADV dann))) (LK (VXFIN (VVFIN informiere))) (MF (NX (PPER ich)) (NX (PRF mich)) (ADVX (ADV noch))) (NF (SIMPX (C (KOUS ob)) (MF (NX (PPER sie)) (ADVX (ADV abends)) (PX (APPRART am) (NX (ADJX (ADJA zehnten)) (NN juli)))) (VC (VXINF (VVINF zuruckfliegen)) (VXFIN (VMFIN konnten))))))], 'left siblings': [(DM (ADVX (ADV also)))], 'auto preterminal span': (1, 28), 'span': (1, 28), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP also soll ich jetzt fur sie den flug vom kolnbonner flughafen am siebten juli buchen um sieben uhr zehn sie sind dann um acht uhr zehn in hannover und dann informiere ich mich noch ob sie abends am zehnten juli zuruckfliegen konnten)

Sentence 66:
0 Initial errors
0 on fringe, 0 iterations

Sentence 67:
3 Initial errors
0 on fringe, 1 iterations
3 Error:Clause Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX
			(LK gucke)
			(MF ich dann)
			(NF
				(SIMPX
					[01;31m(SIMPX[00m
						(C wie)
						(MF das)
						(VC funktioniert)
						[01;31m(NF[00m [01;33m(NF[00m
							(PX
								(APPR mit)
								(NX dem hotel))[01;31m)[00m[01;31m)[00m
					(SIMPX ob noch was frei ist)))))) [01;33mNF)[00m
Step:Clause Attachment
{'new_parent': 'NF', 'new_family': ['PX', 'SIMPX'], 'mover info': [('SIMPX', (9, 14))], 'old_family': ['SIMPX', 'SIMPX'], 'start left siblings': ['SIMPX'], 'auto preterminals': ('KOUS', 'PDS', 'VVFIN', 'APPR', 'ART', 'NN', 'KOUS', 'ADV', 'PIS', 'ADJD', 'VAFIN'), 'start right siblings': [], 'end left siblings': ['PX'], 'auto preterminal span': (3, 14), 'movers': ['SIMPX'], 'old_parent': 'SIMPX', 'end right siblings': [], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP gucke ich dann wie das funktioniert mit dem hotel ob noch was frei ist)

Sentence 68:
0 Initial errors
0 on fringe, 0 iterations

Sentence 69:
0 Initial errors
0 on fringe, 0 iterations

Sentence 70:
0 Initial errors
0 on fringe, 0 iterations

Sentence 71:
0 Initial errors
0 on fringe, 0 iterations

Sentence 72:
1 Initial errors
0 on fringe, 1 iterations
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM hallo)
		(DM frau offergeld)
		(SIMPX
			(VF wie)
			(LK machen)
			(MF wir das denn jetzt)
			(NF
				(SIMPX
					(C wenn)
					[01;31m(FKOORD[00m
						(MVC wir im am ersten juliwochenende nach hannover fliegen wollen)
						(KON oder)
						(MVC nach hannover fahren wollen)[01;31m)[00m)))))
Step:UNSET remove
{'subtrees': ['MVC', 'KON', 'MVC'], 'family': ['C', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'APPRART', 'APPRART', 'ADJA', 'NN', 'APPR', 'NE', 'VVINF', 'VMFIN', 'KON', 'APPR', 'NE', 'VVINF', 'VMFIN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (9, 24), 'span': (10, 24), 'left siblings': ['C'], 'label': 'FKOORD', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP hallo frau offergeld wie machen wir das denn jetzt wenn wir im am ersten juliwochenende nach hannover fliegen wollen oder nach hannover fahren wollen)

Sentence 73:
4 Initial errors
0 on fringe, 2 iterations
2 Error:UNSET move
2 Error:Clause Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(VF dann)
				[01;31m(SIMPX[00m
					(LK lassen)
					(MF wir)[01;31m)[00m[01;36m)[00m
			[01;36m(SIMPX[00m
				(LK konnen)
				(MF wir uns besser)
				(VC unterhalten)[01;36m)[00m[01;31m)[00m
		(DM ja)))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF'], 'mover info': [('VF', (2, 3))], 'old_family': ['VF', 'SIMPX', 'LK', 'MF', 'VC'], 'start left siblings': [], 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'VMFIN', 'PPER', 'PRF', 'ADJD', 'VVINF'), 'start right siblings': ['SIMPX', 'LK', 'MF', 'VC'], 'end left siblings': [], 'auto preterminal span': (2, 10), 'movers': ['VF'], 'old_parent': 'SIMPX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['LK', 'MF'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		[01;31m(SIMPX[00m
			(SIMPX dann lassen wir)
			[01;36m(SIMPX[00m
				(LK konnen)
				(MF wir uns besser)
				(VC unterhalten)[01;36m)[00m[01;31m)[00m
		(DM ja)))
Step:Clause Attachment
{'new_parent': 'TURN', 'new_family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'DM'], 'mover info': [('SIMPX', (2, 5))], 'old_family': ['SIMPX', 'LK', 'MF', 'VC'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'ITJ', 'ADV', 'VVFIN', 'PPER', 'VMFIN', 'PPER', 'PRF', 'ADJD', 'VVINF', 'PTKANT'), 'start right siblings': ['LK', 'MF', 'VC'], 'end left siblings': ['DM', 'DM'], 'auto preterminal span': (0, 11), 'movers': ['SIMPX'], 'old_parent': 'SIMPX', 'end right siblings': ['SIMPX', 'DM'], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP ja gut dann lassen wir konnen wir uns besser unterhalten ja)

Sentence 74:
4 Initial errors
0 on fringe, 3 iterations
2 Error:PP Attachment
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(LK ware)
				(MF vielleicht gar nicht so schlecht)[01;31m)[00m
			[01;36m(NF[00m
				(PX
					[01;36m(NF[00m
						(PX
							(APPR wegen)
							(NX der expo))[01;36m)[00m
					(ADVX dann))[01;36m)[00m[01;36m)[00m))
Step:PP Attachment
{'new_parent': 'SIMPX', 'new_family': ['LK', 'MF', 'PX'], 'mover info': [('PX', (7, 11))], 'old_family': ['DM', 'SIMPX', 'PX'], 'start left siblings': ['DM', 'SIMPX'], 'auto preterminals': ('PTKANT', 'VAFIN', 'ADV', 'ADV', 'PTKNEG', 'ADV', 'ADJD', 'APPR', 'ART', 'NE', 'ADV'), 'start right siblings': [], 'end left siblings': ['LK', 'MF'], 'auto preterminal span': (0, 11), 'movers': ['PX'], 'old_parent': 'TURN', 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(LK ware)
			(MF vielleicht gar nicht so schlecht)
			[01;36m(NF[00m
				(PX
					[01;36m(NF[00m
						(PX
							(APPR wegen)
							(NX der expo))[01;36m)[00m
					(ADVX dann))[01;36m)[00m)))
Step:Unary
{'subtrees': ['PX'], 'family': ['NF', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NE'), 'right siblings': [(ADVX (ADV dann))], 'left siblings': [], 'auto preterminal span': (7, 10), 'span': (7, 10), 'parent': 'PX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(LK ware)
			(MF vielleicht gar nicht so schlecht)
			[01;36m(NF[00m
				(PX
					(NF wegen der expo)
					(ADVX dann))[01;36m)[00m)))
Step:Unary
{'subtrees': ['PX'], 'family': ['LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NE', 'ADV'), 'right siblings': [], 'left siblings': [(LK (VXFIN (VAFIN ware))), (MF (ADVX (ADV vielleicht)) (ADVX (ADVX (ADV gar)) (PTKNEG nicht)) (ADJX (ADVX (ADV so)) (ADJD schlecht)))], 'auto preterminal span': (7, 11), 'span': (7, 11), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP ja ware vielleicht gar nicht so schlecht wegen der expo dann)

Sentence 75:
0 Initial errors
0 on fringe, 0 iterations

Sentence 76:
0 Initial errors
0 on fringe, 0 iterations

Sentence 77:
0 Initial errors
0 on fringe, 0 iterations

Sentence 78:
0 Initial errors
0 on fringe, 0 iterations

Sentence 79:
13 Initial errors
0 on fringe, 8 iterations
3 Error:NP Attachment
2 Error:Different label
2 Error:UNSET move
2 Error:NP Attachment
1 Error:Single Word Phrase
1 Error:UNSET add
1 Error:Clause Attachment
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM also)
		(SIMPX ich kann beim reiseburo anrufen)
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(VF dann)
				(SIMPX gucke ich)[01;36m)[00m
			[01;31m(FKOORD[00m
				[01;36m(LKMVCN[00m [01;31m(LKMN[00m
					(LK erkundige)
					[01;36m(MF[00m
						[01;31m(MF[00m
							(NX ich)
							(NX mich)[01;31m)[00m
						(DM ah)
						[01;31m(NX[00m
							(ADVX hier)
							(NX die fluge)[01;31m)[00m[01;36m)[00m
					(NF wann die fluge stattfinden)[01;31m)[00m[01;36m)[00m
				[01;36m(SIMPX[00m
					[01;36m(KOORD[00m
						(KON und)[01;36m)[00m
					(LKM
						(LK buche)
						(MF
							(ADVX dann)
							[01;31m(PX[00m [01;33m(PX[00m
								(APPR fur)
								[01;31m(NX[00m
									(NX uns) [01;33mPX)[00m
									(NX beiden)[01;31m)[00m[01;31m)[00m))[01;36m)[00m[01;31m)[00m[01;31m)[00m))
Step:NP Attachment
{'new_parent': 'MF', 'new_family': ['ADVX', 'PX', 'NX'], 'mover info': [('NX', (26, 27))], 'old_family': ['NX', 'NX'], 'start left siblings': ['NX'], 'auto preterminals': ('ADV', 'APPR', 'PPER', 'PIS'), 'start right siblings': [], 'end left siblings': ['ADVX', 'PX'], 'auto preterminal span': (23, 27), 'movers': ['NX'], 'old_parent': 'NX', 'POS confusion': ('PIS', 'PIS'), 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(DM also)
		(SIMPX ich kann beim reiseburo anrufen)
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(VF dann)
				(SIMPX gucke ich)[01;36m)[00m
			[01;31m(FKOORD[00m
				[01;36m(LKMVCN[00m [01;31m(LKMN[00m
					(LK erkundige)
					[01;36m(MF[00m
						[01;31m(MF[00m
							(NX ich)
							(NX mich)[01;31m)[00m
						(DM ah)
						[01;31m(NX[00m
							(ADVX hier)
							(NX die fluge)[01;31m)[00m[01;36m)[00m
					(NF wann die fluge stattfinden)[01;31m)[00m[01;36m)[00m
				[01;36m(SIMPX[00m
					[01;36m(KOORD[00m
						(KON und)[01;36m)[00m
					(LKM buche dann fur uns beiden)[01;36m)[00m[01;31m)[00m[01;31m)[00m))
Step:Different label
{'family': ['LKMVCN', 'KON', 'LKM'], 'auto preterminal span': (10, 21), 'span': (10, 21), 'subtrees': ['LK', 'MF', 'DM', 'NX', 'NF'], 'parent': 'FKOORD', 'over_word': False, 'auto preterminals': ('VVFIN', 'PPER', 'PRF', 'ITJ', 'ADV', 'ART', 'NN', 'PWAV', 'ART', 'NN', 'VVFIN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('LKMN', 'LKMVCN')}
(TOP
	(TURN
		(DM ja)
		(DM also)
		(SIMPX ich kann beim reiseburo anrufen)
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(VF dann)
				(SIMPX gucke ich)[01;36m)[00m
			[01;31m(FKOORD[00m
				(LKMVCN
					(LK erkundige)
					[01;36m(MF[00m
						[01;31m(MF[00m
							(NX ich)
							(NX mich)[01;31m)[00m
						(DM ah)
						[01;31m(NX[00m
							(ADVX hier)
							(NX die fluge)[01;31m)[00m[01;36m)[00m
					(NF wann die fluge stattfinden))
				[01;36m(SIMPX[00m
					[01;36m(KOORD[00m
						(KON und)[01;36m)[00m
					(LKM buche dann fur uns beiden)[01;36m)[00m[01;31m)[00m[01;31m)[00m))
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'FKOORD'], 'mover info': [('FKOORD', (10, 27))], 'old_family': ['VF', 'SIMPX', 'FKOORD'], 'start left siblings': ['VF', 'SIMPX'], 'auto preterminals': ('PTKANT', 'ADV', 'PPER', 'VMFIN', 'APPRART', 'NN', 'VVINF', 'ADV', 'VVFIN', 'PPER', 'VVFIN', 'PPER', 'PRF', 'ITJ', 'ADV', 'ART', 'NN', 'PWAV', 'ART', 'NN', 'VVFIN', 'KON', 'VVFIN', 'ADV', 'APPR', 'PPER', 'PIS'), 'start right siblings': [], 'end left siblings': ['DM', 'DM', 'SIMPX', 'SIMPX'], 'auto preterminal span': (0, 27), 'movers': ['FKOORD'], 'old_parent': 'SIMPX', 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(DM also)
		(SIMPX ich kann beim reiseburo anrufen)
		(SIMPX dann gucke ich)
		[01;31m(FKOORD[00m
			(LKMVCN
				(LK erkundige)
				[01;36m(MF[00m
					[01;31m(MF[00m
						(NX ich)
						(NX mich)[01;31m)[00m
					(DM ah)
					[01;31m(NX[00m
						(ADVX hier)
						(NX die fluge)[01;31m)[00m[01;36m)[00m
				(NF wann die fluge stattfinden))
			[01;36m(SIMPX[00m
				[01;36m(KOORD[00m
					(KON und)[01;36m)[00m
				(LKM buche dann fur uns beiden)[01;36m)[00m[01;31m)[00m))
Step:NP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'NX', 'DM', 'NX'], 'mover info': [('DM', (13, 14)), ('NX', (14, 17))], 'old_family': ['LK', 'MF', 'DM', 'NX', 'NF'], 'start left siblings': ['LK', 'MF'], 'auto preterminals': ('VVFIN', 'PPER', 'PRF', 'ITJ', 'ADV', 'ART', 'NN', 'PWAV', 'ART', 'NN', 'VVFIN'), 'start right siblings': ['NF'], 'end left siblings': ['NX', 'NX'], 'auto preterminal span': (10, 21), 'movers': ['DM', 'NX'], 'old_parent': 'LKMVCN', 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(DM also)
		(SIMPX ich kann beim reiseburo anrufen)
		(SIMPX dann gucke ich)
		[01;31m(FKOORD[00m
			(LKMVCN
				(LK erkundige)
				(MF
					(NX ich)
					(NX mich)
					(DM ah)
					[01;31m(NX[00m
						(ADVX hier)
						(NX die fluge)[01;31m)[00m)
				(NF wann die fluge stattfinden))
			[01;36m(SIMPX[00m
				[01;36m(KOORD[00m
					(KON und)[01;36m)[00m
				(LKM buche dann fur uns beiden)[01;36m)[00m[01;31m)[00m))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['LKMVCN', 'KOORD', 'LKM'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON',), 'right siblings': [(LKM (LK (VXFIN (VVFIN buche))) (MF (ADVX (ADV dann)) (PX (APPR fur) (NX (PPER uns))) (NX (PIS beiden))))], 'left siblings': [(LKMVCN (LK (VXFIN (VVFIN erkundige))) (MF (NX (PPER ich)) (NX (PRF mich)) (DM (ITJ ah)) (NX (ADVX (ADV hier)) (NX (ART die) (NN fluge)))) (NF (SIMPX (C (PX (PWAV wann))) (MF (NX (ART die) (NN fluge))) (VC (VXFIN (VVFIN stattfinden))))))], 'auto preterminal span': (21, 22), 'span': (21, 22), 'parent': 'FKOORD', 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM also)
		(SIMPX ich kann beim reiseburo anrufen)
		(SIMPX dann gucke ich)
		[01;31m(FKOORD[00m
			(LKMVCN
				(LK erkundige)
				(MF
					(NX ich)
					(NX mich)
					(DM ah)
					[01;31m(NX[00m
						(ADVX hier)
						(NX die fluge)[01;31m)[00m)
				(NF wann die fluge stattfinden))
			[01;36m(SIMPX[00m
				(KOORD und)
				(LKM buche dann fur uns beiden)[01;36m)[00m[01;31m)[00m))
Step:UNSET add
{'subtrees': ['KOORD', 'LKM'], 'family': ['LKMVCN', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'VVFIN', 'ADV', 'APPR', 'PPER', 'PIS'), 'right siblings': [], 'left siblings': [(LKMVCN (LK (VXFIN (VVFIN erkundige))) (MF (NX (PPER ich)) (NX (PRF mich)) (DM (ITJ ah)) (NX (ADVX (ADV hier)) (NX (ART die) (NN fluge)))) (NF (SIMPX (C (PX (PWAV wann))) (MF (NX (ART die) (NN fluge))) (VC (VXFIN (VVFIN stattfinden))))))], 'auto preterminal span': (21, 27), 'span': (21, 27), 'parent': 'FKOORD', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM also)
		(SIMPX ich kann beim reiseburo anrufen)
		(SIMPX dann gucke ich)
		[01;31m(FKOORD[00m
			(LKMVCN
				(LK erkundige)
				(MF
					(NX ich)
					(NX mich)
					(DM ah)
					[01;31m(NX[00m
						(ADVX hier)
						(NX die fluge)[01;31m)[00m)
				(NF wann die fluge stattfinden))
			(SIMPX und buche dann fur uns beiden)[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['LKMVCN', 'SIMPX'], 'family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADV', 'PPER', 'VMFIN', 'APPRART', 'NN', 'VVINF', 'ADV', 'VVFIN', 'PPER', 'VVFIN', 'PPER', 'PRF', 'ITJ', 'ADV', 'ART', 'NN', 'PWAV', 'ART', 'NN', 'VVFIN', 'KON', 'VVFIN', 'ADV', 'APPR', 'PPER', 'PIS'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 27), 'span': (10, 27), 'left siblings': ['DM', 'DM', 'SIMPX', 'SIMPX'], 'label': 'FKOORD', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM also)
		(SIMPX ich kann beim reiseburo anrufen)
		(SIMPX dann gucke ich)
		(LKMVCN
			(LK erkundige)
			(MF
				(NX ich)
				(NX mich)
				(DM ah)
				[01;31m(NX[00m
					(ADVX hier)
					(NX die fluge)[01;31m)[00m)
			(NF wann die fluge stattfinden))
		(SIMPX und buche dann fur uns beiden)))
Step:UNSET remove
{'subtrees': ['ADVX', 'NX'], 'family': ['NX', 'NX', 'DM', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'PRF', 'ITJ', 'ADV', 'ART', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (11, 17), 'span': (14, 17), 'left siblings': ['NX', 'NX', 'DM'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ja also ich kann beim reiseburo anrufen dann gucke ich erkundige ich mich ah hier die fluge wann die fluge stattfinden und buche dann fur uns beiden)

Sentence 80:
7 Initial errors
0 on fringe, 6 iterations
2 Error:Modifier Attachment
1 Error:Single Word Phrase
1 Error:Clause Attachment
1 Error:UNSET remove
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(NX wir)
		[01;31m(SIMPX[00m
			(SIMPX ich hatte mich auch informiert)
			[01;36m(KOORD[00m
				(KON und)[01;36m)[00m
			[01;31m(SIMPX[00m
				(VF das)
				(LK ist)
				[01;36m(MF[00m
					(MF immer noch so)
					[01;31m(NF[00m
						[01;31m(PX[00m
							[01;31m(PX[00m
								(ADVX nur)
								(APPRART am)
								(NX wochenende)[01;31m)[00m
							(ADVX nicht)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX aber wir mussen ja auch sowieso nicht am wochenende fliegen)))
Step:Modifier Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'NF', 'ADVX'], 'mover info': [('ADVX', (16, 17))], 'old_family': ['PX', 'ADVX'], 'start left siblings': ['PX'], 'auto preterminals': ('PDS', 'VAFIN', 'ADV', 'ADV', 'ADV', 'ADV', 'APPRART', 'NN', 'PTKNEG'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'MF', 'NF'], 'auto preterminal span': (8, 17), 'adding node already present': False, 'movers': ['ADVX'], 'old_parent': 'PX', 'POS confusion': ('PTKNEG', 'PTKNEG'), 'added and moved': True, 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'MF'}
(TOP
	(TURN
		(DM ja)
		(NX wir)
		[01;31m(SIMPX[00m
			(SIMPX ich hatte mich auch informiert)
			[01;36m(KOORD[00m
				(KON und)[01;36m)[00m
			[01;31m(SIMPX[00m
				(VF das)
				(LK ist)
				(MF
					(MF immer noch so)
					[01;31m(NF[00m
						[01;31m(PX[00m
							(ADVX nur)
							(APPRART am)
							(NX wochenende)[01;31m)[00m[01;31m)[00m
					(ADVX nicht))[01;31m)[00m[01;31m)[00m
		(SIMPX aber wir mussen ja auch sowieso nicht am wochenende fliegen)))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['SIMPX', 'KOORD', 'SIMPX'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON',), 'right siblings': [(SIMPX (VF (NX (PDS das))) (LK (VXFIN (VAFIN ist))) (MF (MF (ADVX (ADV immer)) (ADVX (ADV noch)) (ADVX (ADV so))) (NF (PX (ADVX (ADV nur)) (APPRART am) (NX (NN wochenende)))) (ADVX (PTKNEG nicht))))], 'left siblings': [(SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VAFIN hatte))) (MF (NX (PRF mich)) (ADVX (ADV auch))) (VC (VXINF (VVPP informiert))))], 'auto preterminal span': (7, 8), 'span': (7, 8), 'parent': 'SIMPX', 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(NX wir)
		[01;31m(SIMPX[00m
			(SIMPX ich hatte mich auch informiert)
			(KOORD und)
			[01;31m(SIMPX[00m
				(VF das)
				(LK ist)
				(MF
					(MF immer noch so)
					[01;31m(NF[00m
						[01;31m(PX[00m
							(ADVX nur)
							(APPRART am)
							(NX wochenende)[01;31m)[00m[01;31m)[00m
					(ADVX nicht))[01;31m)[00m[01;31m)[00m
		(SIMPX aber wir mussen ja auch sowieso nicht am wochenende fliegen)))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'KOORD', 'SIMPX'], 'family': ['DM', 'NX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'PPER', 'VAFIN', 'PRF', 'ADV', 'VVPP', 'KON', 'PDS', 'VAFIN', 'ADV', 'ADV', 'ADV', 'ADV', 'APPRART', 'NN', 'PTKNEG', 'KON', 'PPER', 'VMFIN', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'APPRART', 'NN', 'VVINF'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 27), 'span': (2, 17), 'left siblings': ['DM', 'NX'], 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(NX wir)
		(SIMPX ich hatte mich auch informiert)
		(KOORD und)
		[01;31m(SIMPX[00m
			(VF das)
			(LK ist)
			(MF
				(MF immer noch so)
				[01;31m(NF[00m
					[01;31m(PX[00m
						(ADVX nur)
						(APPRART am)
						(NX wochenende)[01;31m)[00m[01;31m)[00m
				(ADVX nicht))[01;31m)[00m
		(SIMPX aber wir mussen ja auch sowieso nicht am wochenende fliegen)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['DM', 'NX', 'SIMPX', 'KOORD', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'PPER', 'VAFIN', 'PRF', 'ADV', 'VVPP', 'KON', 'PDS', 'VAFIN', 'ADV', 'ADV', 'ADV', 'ADV', 'APPRART', 'NN', 'PTKNEG', 'KON', 'PPER', 'VMFIN', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'APPRART', 'NN', 'VVINF'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 27), 'span': (8, 17), 'left siblings': ['DM', 'NX', 'SIMPX', 'KOORD'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(NX wir)
		(SIMPX ich hatte mich auch informiert)
		(KOORD und)
		(VF das)
		(LK ist)
		(MF
			(MF immer noch so)
			[01;31m(NF[00m
				[01;31m(PX[00m
					(ADVX nur)
					(APPRART am)
					(NX wochenende)[01;31m)[00m[01;31m)[00m
			(ADVX nicht))
		(SIMPX aber wir mussen ja auch sowieso nicht am wochenende fliegen)))
Step:Unary
{'subtrees': ['PX'], 'family': ['MF', 'NF', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'ADV', 'ADV', 'APPRART', 'NN', 'PTKNEG'), 'right siblings': ['ADVX'], 'parent': 'MF', 'auto preterminal span': (10, 17), 'span': (13, 16), 'left siblings': ['MF'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(NX wir)
		(SIMPX ich hatte mich auch informiert)
		(KOORD und)
		(VF das)
		(LK ist)
		(MF
			(MF immer noch so)
			[01;31m(PX[00m
				(ADVX nur)
				(APPRART am)
				(NX wochenende)[01;31m)[00m
			(ADVX nicht))
		(SIMPX aber wir mussen ja auch sowieso nicht am wochenende fliegen)))
Step:UNSET remove
{'subtrees': ['ADVX', 'APPRART', 'NX'], 'family': ['MF', 'PX', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'ADV', 'ADV', 'APPRART', 'NN', 'PTKNEG'), 'right siblings': ['ADVX'], 'parent': 'MF', 'auto preterminal span': (10, 17), 'span': (13, 16), 'left siblings': ['MF'], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ja wir ich hatte mich auch informiert und das ist immer noch so nur am wochenende nicht aber wir mussen ja auch sowieso nicht am wochenende fliegen)

Sentence 81:
0 Initial errors
0 on fringe, 0 iterations

Sentence 82:
0 Initial errors
0 on fringe, 0 iterations

Sentence 83:
0 Initial errors
0 on fringe, 0 iterations

Sentence 84:
0 Initial errors
0 on fringe, 0 iterations

Sentence 85:
3 Initial errors
0 on fringe, 2 iterations
2 Error:UNSET move
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			[01;31m(LV[00m
				(SIMPX
					(KOORD und)
					(C was)
					(MF naturlich auch sehr komfortabel)
					(VC ist))[01;31m)[00m
			[01;36m(SIMPX[00m
				(VF es)
				(LK hat)
				(MF eine eigene sauna)[01;36m)[00m[01;31m)[00m))
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['LV', 'SIMPX'], 'mover info': [('LV', (0, 7))], 'old_family': ['LV', 'VF', 'LK', 'MF'], 'start left siblings': [], 'auto preterminals': ('KON', 'PWS', 'ADV', 'ADV', 'ADV', 'ADJD', 'VAFIN', 'PPER', 'VAFIN', 'ART', 'ADJA', 'NN'), 'start right siblings': ['VF', 'LK', 'MF'], 'end left siblings': [], 'auto preterminal span': (0, 12), 'movers': ['LV'], 'old_parent': 'SIMPX', 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		[01;31m(LV[00m
			(SIMPX
				(KOORD und)
				(C was)
				(MF naturlich auch sehr komfortabel)
				(VC ist))[01;31m)[00m
		(SIMPX es hat eine eigene sauna)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['LV', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'PWS', 'ADV', 'ADV', 'ADV', 'ADJD', 'VAFIN', 'PPER', 'VAFIN', 'ART', 'ADJA', 'NN'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 12), 'span': (0, 7), 'left siblings': [], 'label': 'LV', 'classified_type': 'Unary', 'type': 'remove'}
(TOP und was naturlich auch sehr komfortabel ist es hat eine eigene sauna)

Sentence 86:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(NX[00m
	(TOP
		(TURN
			(NX und ein hallenbad)
			(SIMPX wie ich grade sehe)))[01;36m)[00m
Step:Unary
{'subtrees': ['TURN'], 'family': ['NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'ART', 'NN', 'KOUS', 'PPER', 'ADV', 'VVFIN'), 'right siblings': [], 'left siblings': [], 'auto preterminal span': (0, 7), 'span': (0, 7), 'parent': 'TOP', 'label': 'NX', 'classified_type': 'Unary', 'type': 'add'}
(TOP und ein hallenbad wie ich grade sehe)

Sentence 87:
0 Initial errors
0 on fringe, 0 iterations

Sentence 88:
0 Initial errors
0 on fringe, 0 iterations

Sentence 89:
0 Initial errors
0 on fringe, 0 iterations

Sentence 90:
0 Initial errors
0 on fringe, 0 iterations

Sentence 91:
0 Initial errors
0 on fringe, 0 iterations

Sentence 92:
0 Initial errors
0 on fringe, 0 iterations

Sentence 93:
0 Initial errors
0 on fringe, 0 iterations

Sentence 94:
1 Initial errors
0 on fringe, 1 iterations
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK denke)
			(NF in anbetracht der knappen zeit konnte man die tage sicherlich durch fliegen am effektivsten nutzen)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'NF'], 'family': ['DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VVFIN', 'APPR', 'NN', 'ART', 'ADJA', 'NN', 'VMFIN', 'PIS', 'ART', 'NN', 'ADV', 'APPR', 'NN', 'PTKA', 'ADJD', 'VVINF'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 18), 'span': (1, 18), 'left siblings': ['DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ja ich denke in anbetracht der knappen zeit konnte man die tage sicherlich durch fliegen am effektivsten nutzen)

Sentence 95:
1 Initial errors
0 on fringe, 1 iterations
1 Error:NP Internal Structure
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX
			(LK denken)
			(MF
				(NX sie)
				(NX sich)
				(ADVX doch)
				(ADVX mal)
				[01;31m(NX[00m
					(NX was)
					(NX schones)[01;31m)[00m)
			(VC aus))))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['NX', 'NX', 'ADVX', 'ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'PRF', 'ADV', 'ADV', 'PIS', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (1, 7), 'span': (5, 7), 'left siblings': ['NX', 'NX', 'ADVX', 'ADVX'], 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'remove'}
(TOP denken sie sich doch mal was schones aus)

Sentence 96:
2 Initial errors
0 on fringe, 2 iterations
1 Error:Single Word Phrase
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM auf wiedersehen)
		(DM
			(NX
				[01;36m(DM[00m
					(NN fraulein)[01;36m)[00m
				[01;36m(NX[00m
					(NE schmidt)[01;36m)[00m))))
Step:Single Word Phrase
{'subtrees': ['NN'], 'family': ['DM', 'NE'], 'over_word': True, 'over words': True, 'auto preterminals': ('NN',), 'right siblings': [(NE schmidt)], 'left siblings': [], 'auto preterminal span': (2, 3), 'span': (2, 3), 'parent': 'NX', 'label': 'DM', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM auf wiedersehen)
		(DM
			(NX
				(DM fraulein)
				[01;36m(NX[00m
					(NE schmidt)[01;36m)[00m))))
Step:Single Word Phrase
{'subtrees': ['NE'], 'family': ['DM', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('NE',), 'right siblings': [], 'left siblings': [(DM (NN fraulein))], 'auto preterminal span': (3, 4), 'span': (3, 4), 'parent': 'NX', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP auf wiedersehen fraulein schmidt)

Sentence 97:
0 Initial errors
0 on fringe, 0 iterations

Sentence 98:
0 Initial errors
0 on fringe, 0 iterations

Sentence 99:
1 Initial errors
0 on fringe, 1 iterations
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM also)
		(SIMPX bei mir sieht es etwas eng aus)
		(SIMPX
			(VF ich)
			(LK konnte)
			(MF
				(PX
					(PX in der zweiten juniwoche)
					[01;36m(PX[00m
						(PX in der letzten juliwoche)
						(KON oder)
						(PX in der ersten augustwoche)[01;36m)[00m)))))
Step:PP Attachment
{'subtrees': ['PX', 'KON', 'PX'], 'family': ['PX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'ADJA', 'NN', 'KON', 'APPR', 'ART', 'ADJA', 'NN'), 'right siblings': [], 'left siblings': [(PX (APPR in) (NX (ART der) (ADJX (ADJA zweiten)) (NN juniwoche)))], 'auto preterminal span': (15, 24), 'span': (15, 24), 'parent': 'PX', 'label': 'PX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP ja also bei mir sieht es etwas eng aus ich konnte in der zweiten juniwoche in der letzten juliwoche oder in der ersten augustwoche)

Sentence 100:
0 Initial errors
0 on fringe, 0 iterations

Sentence 101:
0 Initial errors
0 on fringe, 0 iterations

Sentence 102:
0 Initial errors
0 on fringe, 0 iterations

Sentence 103:
0 Initial errors
0 on fringe, 0 iterations

Sentence 104:
0 Initial errors
0 on fringe, 0 iterations

Sentence 105:
0 Initial errors
0 on fringe, 0 iterations

Sentence 106:
15 Initial errors
0 on fringe, 13 iterations
2 Error:Single Word Phrase
2 Error:PP Attachment
1 Error:Single Word Phrase
1 Error:Single Word Phrase
1 Error:UNSET add
1 Error:UNSET remove
1 Error:Unary
1 Error:UNSET remove
1 Error:Unary
1 Error:PP Attachment
1 Error:UNSET remove
1 Error:Modifier Attachment
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		[01;31m(SIMPX[00m
			(LK fahren)
			[01;36m(MF[00m
				(MF wir wieder mit dem zug)
				[01;31m(NF[00m
					[01;31m(ADVX[00m
						(ADVX vielleicht)
						(ADVX abends)
						(PX so um achtzehn uhr so zirka)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK muste)
			(MF ich dann noch mal)
			(VC nachkucken)
			[01;36m(DM[00m [01;31m(NF[00m
				[01;31m(ADJX[00m
					(ADJD genau)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m
		[01;31m(PX[00m
			[01;36m(ADVX[00m
				(KON aber)[01;36m)[00m
			(ADVX so)
			[01;36m(ADVX[00m
				(ADV so)[01;36m)[00m
			[01;31m(PX[00m
				[01;31m(PX[00m
					(APPR um)
					[01;33m(NX[00m (NX den dreh)[01;31m)[00m
				(ADVX rum)[01;31m)[00m[01;31m)[00m [01;33mNX)[00m
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK waren)
			(MF
				(NX wir)
				(PX
					(ADVX so)
					(APPR um)
					[01;36m(PX[00m
						(APPR um)
						(NX halb elf)[01;36m)[00m)
				(PX in hannover)))
		(SIMPX da konnten wir noch was unternehmen)))
Step:Single Word Phrase
{'family': ['DM'], 'auto preterminal span': (21, 22), 'span': (21, 22), 'subtrees': ['ADJD'], 'parent': 'NF', 'over_word': True, 'auto preterminals': ('ADJD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'DM')}
(TOP
	(TURN
		(DM ja)
		[01;31m(SIMPX[00m
			(LK fahren)
			[01;36m(MF[00m
				(MF wir wieder mit dem zug)
				[01;31m(NF[00m
					[01;31m(ADVX[00m
						(ADVX vielleicht)
						(ADVX abends)
						(PX so um achtzehn uhr so zirka)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK muste)
			(MF ich dann noch mal)
			(VC nachkucken)
			[01;31m(NF[00m
				(DM
					(ADJD genau))[01;31m)[00m[01;31m)[00m
		[01;31m(PX[00m
			[01;36m(ADVX[00m
				(KON aber)[01;36m)[00m
			(ADVX so)
			[01;36m(ADVX[00m
				(ADV so)[01;36m)[00m
			[01;31m(PX[00m
				[01;31m(PX[00m
					(APPR um)
					[01;33m(NX[00m (NX den dreh)[01;31m)[00m
				(ADVX rum)[01;31m)[00m[01;31m)[00m [01;33mNX)[00m
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK waren)
			(MF
				(NX wir)
				(PX
					(ADVX so)
					(APPR um)
					[01;36m(PX[00m
						(APPR um)
						(NX halb elf)[01;36m)[00m)
				(PX in hannover)))
		(SIMPX da konnten wir noch was unternehmen)))
Step:PP Attachment
{'new_parent': 'SIMPX', 'new_family': ['LK', 'MF', 'NF', 'ADVX', 'PX'], 'mover info': [('ADVX', (8, 9)), ('PX', (9, 15))], 'old_family': ['ADVX', 'ADVX', 'PX'], 'start left siblings': ['ADVX'], 'auto preterminals': ('VVFIN', 'PPER', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'ADV', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'ADV'), 'start right siblings': [], 'end left siblings': ['LK', 'MF', 'NF'], 'auto preterminal span': (1, 15), 'adding node already present': False, 'movers': ['ADVX', 'PX'], 'old_parent': 'ADVX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'PX'}
(TOP
	(TURN
		(DM ja)
		[01;31m(SIMPX[00m
			(LK fahren)
			(MF
				(MF wir wieder mit dem zug)
				[01;31m(NF[00m
					(ADVX
						(ADV vielleicht))[01;31m)[00m
				(ADVX abends)
				(PX so um achtzehn uhr so zirka))[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK muste)
			(MF ich dann noch mal)
			(VC nachkucken)
			[01;31m(NF[00m
				(DM
					(ADJD genau))[01;31m)[00m[01;31m)[00m
		[01;31m(PX[00m
			[01;36m(ADVX[00m
				(KON aber)[01;36m)[00m
			(ADVX so)
			[01;36m(ADVX[00m
				(ADV so)[01;36m)[00m
			[01;31m(PX[00m
				[01;31m(PX[00m
					(APPR um)
					[01;33m(NX[00m (NX den dreh)[01;31m)[00m
				(ADVX rum)[01;31m)[00m[01;31m)[00m [01;33mNX)[00m
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK waren)
			(MF
				(NX wir)
				(PX
					(ADVX so)
					(APPR um)
					[01;36m(PX[00m
						(APPR um)
						(NX halb elf)[01;36m)[00m)
				(PX in hannover)))
		(SIMPX da konnten wir noch was unternehmen)))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['ADVX', 'ADVX', 'ADV', 'PX'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON',), 'right siblings': [(ADVX (ADV so)), (ADV so), (PX (PX (APPR um) (NX (ART den) (NN dreh))) (ADVX (ADV rum)))], 'left siblings': [], 'auto preterminal span': (22, 23), 'span': (22, 23), 'parent': 'PX', 'label': 'ADVX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		[01;31m(SIMPX[00m
			(LK fahren)
			(MF
				(MF wir wieder mit dem zug)
				[01;31m(NF[00m
					(ADVX
						(ADV vielleicht))[01;31m)[00m
				(ADVX abends)
				(PX so um achtzehn uhr so zirka))[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK muste)
			(MF ich dann noch mal)
			(VC nachkucken)
			[01;31m(NF[00m
				(DM
					(ADJD genau))[01;31m)[00m[01;31m)[00m
		[01;31m(PX[00m
			(ADVX aber)
			(ADVX so)
			[01;36m(ADVX[00m
				(ADV so)[01;36m)[00m
			[01;31m(PX[00m
				[01;31m(PX[00m
					(APPR um)
					[01;33m(NX[00m (NX den dreh)[01;31m)[00m
				(ADVX rum)[01;31m)[00m[01;31m)[00m [01;33mNX)[00m
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK waren)
			(MF
				(NX wir)
				(PX
					(ADVX so)
					(APPR um)
					[01;36m(PX[00m
						(APPR um)
						(NX halb elf)[01;36m)[00m)
				(PX in hannover)))
		(SIMPX da konnten wir noch was unternehmen)))
Step:Single Word Phrase
{'subtrees': ['ADV'], 'family': ['ADVX', 'ADVX', 'ADVX', 'PX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADV',), 'right siblings': [(PX (PX (APPR um) (NX (ART den) (NN dreh))) (ADVX (ADV rum)))], 'left siblings': [(ADVX (KON aber)), (ADVX (ADV so))], 'auto preterminal span': (24, 25), 'span': (24, 25), 'parent': 'PX', 'label': 'ADVX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		[01;31m(SIMPX[00m
			(LK fahren)
			(MF
				(MF wir wieder mit dem zug)
				[01;31m(NF[00m
					(ADVX
						(ADV vielleicht))[01;31m)[00m
				(ADVX abends)
				(PX so um achtzehn uhr so zirka))[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK muste)
			(MF ich dann noch mal)
			(VC nachkucken)
			[01;31m(NF[00m
				(DM
					(ADJD genau))[01;31m)[00m[01;31m)[00m
		[01;31m(PX[00m
			(ADVX aber)
			(ADVX so)
			(ADVX so)
			[01;31m(PX[00m
				[01;31m(PX[00m
					(APPR um)
					[01;33m(NX[00m (NX den dreh)[01;31m)[00m
				(ADVX rum)[01;31m)[00m[01;31m)[00m [01;33mNX)[00m
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK waren)
			(MF
				(NX wir)
				(PX
					(ADVX so)
					(APPR um)
					[01;36m(PX[00m
						(APPR um)
						(NX halb elf)[01;36m)[00m)
				(PX in hannover)))
		(SIMPX da konnten wir noch was unternehmen)))
Step:UNSET add
{'subtrees': ['APPR', 'NX'], 'family': ['ADVX', 'APPR', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ADJD', 'CARD'), 'right siblings': [], 'left siblings': [(ADVX (ADV so)), (APPR um)], 'auto preterminal span': (35, 38), 'span': (35, 38), 'parent': 'PX', 'label': 'PX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		[01;31m(SIMPX[00m
			(LK fahren)
			(MF
				(MF wir wieder mit dem zug)
				[01;31m(NF[00m
					(ADVX
						(ADV vielleicht))[01;31m)[00m
				(ADVX abends)
				(PX so um achtzehn uhr so zirka))[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK muste)
			(MF ich dann noch mal)
			(VC nachkucken)
			[01;31m(NF[00m
				(DM
					(ADJD genau))[01;31m)[00m[01;31m)[00m
		[01;31m(PX[00m
			(ADVX aber)
			(ADVX so)
			(ADVX so)
			[01;31m(PX[00m
				[01;31m(PX[00m
					(APPR um)
					[01;33m(NX[00m (NX den dreh)[01;31m)[00m
				(ADVX rum)[01;31m)[00m[01;31m)[00m [01;33mNX)[00m
		(SIMPX und dann waren wir so um um halb elf in hannover)
		(SIMPX da konnten wir noch was unternehmen)))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['DM', 'SIMPX', 'SIMPX', 'PX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'VVFIN', 'PPER', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'ADV', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'VVINF', 'ADJD', 'KON', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'KON', 'ADV', 'VAFIN', 'PPER', 'ADV', 'APPR', 'APPR', 'ADJD', 'CARD', 'APPR', 'NE', 'ADV', 'VMFIN', 'PPER', 'ADV', 'PIS', 'VVINF'), 'right siblings': ['SIMPX', 'PX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 46), 'span': (1, 15), 'left siblings': ['DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(LK fahren)
		(MF
			(MF wir wieder mit dem zug)
			[01;31m(NF[00m
				(ADVX
					(ADV vielleicht))[01;31m)[00m
			(ADVX abends)
			(PX so um achtzehn uhr so zirka))
		[01;31m(SIMPX[00m
			(LK muste)
			(MF ich dann noch mal)
			(VC nachkucken)
			[01;31m(NF[00m
				(DM
					(ADJD genau))[01;31m)[00m[01;31m)[00m
		[01;31m(PX[00m
			(ADVX aber)
			(ADVX so)
			(ADVX so)
			[01;31m(PX[00m
				[01;31m(PX[00m
					(APPR um)
					[01;33m(NX[00m (NX den dreh)[01;31m)[00m
				(ADVX rum)[01;31m)[00m[01;31m)[00m [01;33mNX)[00m
		(SIMPX und dann waren wir so um um halb elf in hannover)
		(SIMPX da konnten wir noch was unternehmen)))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['MF', 'NF', 'ADVX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'ADV', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'ADV'), 'right siblings': ['ADVX', 'PX'], 'parent': 'MF', 'auto preterminal span': (2, 15), 'span': (7, 8), 'left siblings': ['MF'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(LK fahren)
		(MF wir wieder mit dem zug vielleicht abends so um achtzehn uhr so zirka)
		[01;31m(SIMPX[00m
			(LK muste)
			(MF ich dann noch mal)
			(VC nachkucken)
			[01;31m(NF[00m
				(DM
					(ADJD genau))[01;31m)[00m[01;31m)[00m
		[01;31m(PX[00m
			(ADVX aber)
			(ADVX so)
			(ADVX so)
			[01;31m(PX[00m
				[01;31m(PX[00m
					(APPR um)
					[01;33m(NX[00m (NX den dreh)[01;31m)[00m
				(ADVX rum)[01;31m)[00m[01;31m)[00m [01;33mNX)[00m
		(SIMPX und dann waren wir so um um halb elf in hannover)
		(SIMPX da konnten wir noch was unternehmen)))
Step:UNSET remove
{'subtrees': ['LK', 'MF', 'VC', 'NF'], 'family': ['DM', 'LK', 'MF', 'SIMPX', 'PX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'VVFIN', 'PPER', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'ADV', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'VVINF', 'ADJD', 'KON', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'KON', 'ADV', 'VAFIN', 'PPER', 'ADV', 'APPR', 'APPR', 'ADJD', 'CARD', 'APPR', 'NE', 'ADV', 'VMFIN', 'PPER', 'ADV', 'PIS', 'VVINF'), 'right siblings': ['PX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 46), 'span': (15, 22), 'left siblings': ['DM', 'LK', 'MF'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(LK fahren)
		(MF wir wieder mit dem zug vielleicht abends so um achtzehn uhr so zirka)
		(LK muste)
		(MF ich dann noch mal)
		(VC nachkucken)
		[01;31m(NF[00m
			(DM
				(ADJD genau))[01;31m)[00m
		[01;31m(PX[00m
			(ADVX aber)
			(ADVX so)
			(ADVX so)
			[01;31m(PX[00m
				[01;31m(PX[00m
					(APPR um)
					[01;33m(NX[00m (NX den dreh)[01;31m)[00m
				(ADVX rum)[01;31m)[00m[01;31m)[00m [01;33mNX)[00m
		(SIMPX und dann waren wir so um um halb elf in hannover)
		(SIMPX da konnten wir noch was unternehmen)))
Step:Unary
{'subtrees': ['DM'], 'family': ['DM', 'LK', 'MF', 'LK', 'MF', 'VC', 'NF', 'PX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'VVFIN', 'PPER', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'ADV', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'VVINF', 'ADJD', 'KON', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'KON', 'ADV', 'VAFIN', 'PPER', 'ADV', 'APPR', 'APPR', 'ADJD', 'CARD', 'APPR', 'NE', 'ADV', 'VMFIN', 'PPER', 'ADV', 'PIS', 'VVINF'), 'right siblings': ['PX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 46), 'span': (21, 22), 'left siblings': ['DM', 'LK', 'MF', 'LK', 'MF', 'VC'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(LK fahren)
		(MF wir wieder mit dem zug vielleicht abends so um achtzehn uhr so zirka)
		(LK muste)
		(MF ich dann noch mal)
		(VC nachkucken)
		(DM genau)
		[01;31m(PX[00m
			(ADVX aber)
			(ADVX so)
			(ADVX so)
			[01;31m(PX[00m
				[01;31m(PX[00m
					(APPR um)
					[01;33m(NX[00m (NX den dreh)[01;31m)[00m
				(ADVX rum)[01;31m)[00m[01;31m)[00m [01;33mNX)[00m
		(SIMPX und dann waren wir so um um halb elf in hannover)
		(SIMPX da konnten wir noch was unternehmen)))
Step:PP Attachment
{'subtrees': ['ADVX', 'ADVX', 'ADVX', 'PX'], 'family': ['DM', 'LK', 'MF', 'LK', 'MF', 'VC', 'DM', 'PX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'VVFIN', 'PPER', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'ADV', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'VVINF', 'ADJD', 'KON', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'KON', 'ADV', 'VAFIN', 'PPER', 'ADV', 'APPR', 'APPR', 'ADJD', 'CARD', 'APPR', 'NE', 'ADV', 'VMFIN', 'PPER', 'ADV', 'PIS', 'VVINF'), 'right siblings': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 46), 'span': (22, 29), 'left siblings': ['DM', 'LK', 'MF', 'LK', 'MF', 'VC', 'DM'], 'label': 'PX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(LK fahren)
		(MF wir wieder mit dem zug vielleicht abends so um achtzehn uhr so zirka)
		(LK muste)
		(MF ich dann noch mal)
		(VC nachkucken)
		(DM genau)
		(ADVX aber)
		(ADVX so)
		(ADVX so)
		[01;31m(PX[00m
			[01;31m(PX[00m
				(APPR um)
				[01;33m(NX[00m (NX den dreh)[01;31m)[00m
			(ADVX rum)[01;31m)[00m [01;33mNX)[00m
		(SIMPX und dann waren wir so um um halb elf in hannover)
		(SIMPX da konnten wir noch was unternehmen)))
Step:UNSET remove
{'subtrees': ['APPR', 'NX'], 'family': ['PX', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NN', 'ADV'), 'right siblings': ['ADVX'], 'parent': 'PX', 'auto preterminal span': (25, 29), 'span': (25, 28), 'left siblings': [], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(LK fahren)
		(MF wir wieder mit dem zug vielleicht abends so um achtzehn uhr so zirka)
		(LK muste)
		(MF ich dann noch mal)
		(VC nachkucken)
		(DM genau)
		(ADVX aber)
		(ADVX so)
		(ADVX so)
		[01;31m(PX[00m
			(APPR um)
			[01;36m(NX[00m
				(NX den dreh)
				(ADVX rum)[01;36m)[00m[01;31m)[00m
		(SIMPX und dann waren wir so um um halb elf in hannover)
		(SIMPX da konnten wir noch was unternehmen)))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADVX'], 'family': ['APPR', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'ADV'), 'right siblings': [], 'left siblings': [(APPR um)], 'auto preterminal span': (26, 29), 'span': (26, 29), 'parent': 'PX', 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(LK fahren)
		(MF wir wieder mit dem zug vielleicht abends so um achtzehn uhr so zirka)
		(LK muste)
		(MF ich dann noch mal)
		(VC nachkucken)
		(DM genau)
		(ADVX aber)
		(ADVX so)
		(ADVX so)
		[01;31m(PX[00m
			(APPR um)
			(NX den dreh rum)[01;31m)[00m
		(SIMPX und dann waren wir so um um halb elf in hannover)
		(SIMPX da konnten wir noch was unternehmen)))
Step:UNSET remove
{'subtrees': ['APPR', 'NX'], 'family': ['DM', 'LK', 'MF', 'LK', 'MF', 'VC', 'DM', 'ADVX', 'ADVX', 'ADVX', 'PX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'VVFIN', 'PPER', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'ADV', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'VVINF', 'ADJD', 'KON', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'KON', 'ADV', 'VAFIN', 'PPER', 'ADV', 'APPR', 'APPR', 'ADJD', 'CARD', 'APPR', 'NE', 'ADV', 'VMFIN', 'PPER', 'ADV', 'PIS', 'VVINF'), 'right siblings': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 46), 'span': (25, 29), 'left siblings': ['DM', 'LK', 'MF', 'LK', 'MF', 'VC', 'DM', 'ADVX', 'ADVX', 'ADVX'], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ja fahren wir wieder mit dem zug vielleicht abends so um achtzehn uhr so zirka muste ich dann noch mal nachkucken genau aber so so um den dreh rum und dann waren wir so um um halb elf in hannover da konnten wir noch was unternehmen)

Sentence 107:
0 Initial errors
0 on fringe, 0 iterations

Sentence 108:
0 Initial errors
0 on fringe, 0 iterations

Sentence 109:
0 Initial errors
0 on fringe, 0 iterations

Sentence 110:
0 Initial errors
0 on fringe, 0 iterations

Sentence 111:
0 Initial errors
0 on fringe, 0 iterations

Sentence 112:
0 Initial errors
0 on fringe, 0 iterations

Sentence 113:
0 Initial errors
0 on fringe, 0 iterations

Sentence 114:
0 Initial errors
0 on fringe, 0 iterations

Sentence 115:
0 Initial errors
0 on fringe, 0 iterations

Sentence 116:
0 Initial errors
0 on fringe, 0 iterations

Sentence 117:
0 Initial errors
0 on fringe, 0 iterations

Sentence 118:
0 Initial errors
0 on fringe, 0 iterations

Sentence 119:
0 Initial errors
0 on fringe, 0 iterations

Sentence 120:
1 Initial errors
0 on fringe, 1 iterations
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(NX[00m
			(NX anderthalb tage)
			(PX nach hannover)[01;31m)[00m
		(DM genau)))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['NX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'NN', 'APPR', 'NE', 'ITJ'), 'right siblings': ['DM'], 'parent': 'TURN', 'auto preterminal span': (0, 5), 'span': (0, 4), 'left siblings': [], 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP anderthalb tage nach hannover genau)

Sentence 121:
12 Initial errors
0 on fringe, 7 iterations
5 Error:NP Attachment
2 Error:PP Attachment
1 Error:UNSET remove
1 Error:Unary
1 Error:PP Attachment
1 Error:Single Word Phrase
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM also)
		(SIMPX ich denke wir sollten es einfach mal ausprobieren)
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF wir)
			(LK hatten)
			(VC gesagt)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					(VF anderthalb tage)
					(LK fahren)
					[01;31m(MF[00m
						[01;36m(MF[00m
							(NX wir)
							(PX nach hannover)[01;36m)[00m
						[01;31m(PX[00m [01;33m(PX[00m
							(APPRART im)
							[01;31m(NX[00m [01;33m(NX[00m
								(NX zeitraum)
								[01;31m(NX[00m
									[01;31m(NX[00m
										[01;31m(NX[00m
											(NN januar)[01;31m)[00m
										(NX februar)
										(NX marz)[01;31m)[00m [01;33mNX) PX)[00m
									(NX achtundneunzig)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:NP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'PX', 'PX', 'NX'], 'mover info': [('NX', (24, 25))], 'old_family': ['NX', 'NX'], 'start left siblings': ['NX'], 'auto preterminals': ('PPER', 'APPR', 'NE', 'APPRART', 'NN', 'NN', 'NN', 'NN', 'CARD'), 'start right siblings': [], 'end left siblings': ['NX', 'PX', 'PX'], 'auto preterminal span': (16, 25), 'movers': ['NX'], 'old_parent': 'NX', 'POS confusion': ('CARD', 'CARD'), 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM also)
		(SIMPX ich denke wir sollten es einfach mal ausprobieren)
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF wir)
			(LK hatten)
			(VC gesagt)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					(VF anderthalb tage)
					(LK fahren)
					[01;31m(MF[00m
						[01;36m(MF[00m
							(NX wir)
							(PX nach hannover)[01;36m)[00m
						(PX
							(APPRART im)
							(NX
								(NX zeitraum)
								[01;31m(NX[00m
									[01;31m(NX[00m
										(NN januar)[01;31m)[00m
									(NX februar)
									(NX marz)[01;31m)[00m))
						(NX achtundneunzig)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:PP Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'PX', 'NX'], 'mover info': [('PX', (19, 24)), ('NX', (24, 25))], 'old_family': ['NX', 'PX', 'PX', 'NX'], 'start left siblings': ['NX', 'PX'], 'auto preterminals': ('CARD', 'NN', 'VVFIN', 'PPER', 'APPR', 'NE', 'APPRART', 'NN', 'NN', 'NN', 'NN', 'CARD'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (13, 25), 'movers': ['PX', 'NX'], 'old_parent': 'MF', 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM also)
		(SIMPX ich denke wir sollten es einfach mal ausprobieren)
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF wir)
			(LK hatten)
			(VC gesagt)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					(VF anderthalb tage)
					(LK fahren)
					(MF wir nach hannover)
					(PX
						(APPRART im)
						(NX
							(NX zeitraum)
							[01;31m(NX[00m
								[01;31m(NX[00m
									(NN januar)[01;31m)[00m
								(NX februar)
								(NX marz)[01;31m)[00m))
					(NX achtundneunzig)[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['KOORD', 'VF', 'LK', 'VC', 'NF'], 'family': ['DM', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPER', 'VVFIN', 'PPER', 'VMFIN', 'PPER', 'ADV', 'ADV', 'VVINF', 'KON', 'PPER', 'VAFIN', 'VVPP', 'CARD', 'NN', 'VVFIN', 'PPER', 'APPR', 'NE', 'APPRART', 'NN', 'NN', 'NN', 'NN', 'CARD'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 25), 'span': (9, 25), 'left siblings': ['DM', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX ich denke wir sollten es einfach mal ausprobieren)
		(KOORD und)
		(VF wir)
		(LK hatten)
		(VC gesagt)
		[01;31m(NF[00m
			[01;31m(SIMPX[00m
				(VF anderthalb tage)
				(LK fahren)
				(MF wir nach hannover)
				(PX
					(APPRART im)
					(NX
						(NX zeitraum)
						[01;31m(NX[00m
							[01;31m(NX[00m
								(NN januar)[01;31m)[00m
							(NX februar)
							(NX marz)[01;31m)[00m))
				(NX achtundneunzig)[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['VF', 'LK', 'MF', 'PX', 'NX'], 'family': ['SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'NN', 'VVFIN', 'PPER', 'APPR', 'NE', 'APPRART', 'NN', 'NN', 'NN', 'NN', 'CARD'), 'right siblings': [], 'parent': 'NF', 'auto preterminal span': (13, 25), 'span': (13, 25), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX ich denke wir sollten es einfach mal ausprobieren)
		(KOORD und)
		(VF wir)
		(LK hatten)
		(VC gesagt)
		[01;31m(NF[00m
			(VF anderthalb tage)
			(LK fahren)
			(MF wir nach hannover)
			(PX
				(APPRART im)
				(NX
					(NX zeitraum)
					[01;31m(NX[00m
						[01;31m(NX[00m
							(NN januar)[01;31m)[00m
						(NX februar)
						(NX marz)[01;31m)[00m))
			(NX achtundneunzig)[01;31m)[00m))
Step:PP Attachment
{'subtrees': ['VF', 'LK', 'MF', 'PX', 'NX'], 'family': ['DM', 'SIMPX', 'KOORD', 'VF', 'LK', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPER', 'VVFIN', 'PPER', 'VMFIN', 'PPER', 'ADV', 'ADV', 'VVINF', 'KON', 'PPER', 'VAFIN', 'VVPP', 'CARD', 'NN', 'VVFIN', 'PPER', 'APPR', 'NE', 'APPRART', 'NN', 'NN', 'NN', 'NN', 'CARD'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 25), 'span': (13, 25), 'left siblings': ['DM', 'SIMPX', 'KOORD', 'VF', 'LK', 'VC'], 'label': 'NF', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX ich denke wir sollten es einfach mal ausprobieren)
		(KOORD und)
		(VF wir)
		(LK hatten)
		(VC gesagt)
		(VF anderthalb tage)
		(LK fahren)
		(MF wir nach hannover)
		(PX
			(APPRART im)
			(NX
				(NX zeitraum)
				[01;31m(NX[00m
					[01;31m(NX[00m
						(NN januar)[01;31m)[00m
					(NX februar)
					(NX marz)[01;31m)[00m))
		(NX achtundneunzig)))
Step:Single Word Phrase
{'subtrees': ['NN'], 'family': ['NX', 'NX', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('NN', 'NN', 'NN'), 'right siblings': ['NX', 'NX'], 'parent': 'NX', 'auto preterminal span': (21, 24), 'span': (21, 22), 'left siblings': [], 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX ich denke wir sollten es einfach mal ausprobieren)
		(KOORD und)
		(VF wir)
		(LK hatten)
		(VC gesagt)
		(VF anderthalb tage)
		(LK fahren)
		(MF wir nach hannover)
		(PX
			(APPRART im)
			(NX
				(NX zeitraum)
				[01;31m(NX[00m
					(NN januar)
					(NX februar)
					(NX marz)[01;31m)[00m))
		(NX achtundneunzig)))
Step:UNSET remove
{'subtrees': ['NN', 'NX', 'NX'], 'family': ['NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'NN', 'NN', 'NN'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (20, 24), 'span': (21, 24), 'left siblings': ['NX'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP also ich denke wir sollten es einfach mal ausprobieren und wir hatten gesagt anderthalb tage fahren wir nach hannover im zeitraum januar februar marz achtundneunzig)

Sentence 122:
0 Initial errors
0 on fringe, 0 iterations

Sentence 123:
0 Initial errors
0 on fringe, 0 iterations

Sentence 124:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX
			(VF wir)
			(LK konnten)
			(MF
				[01;31m(PX[00m
					(ADVX gleich)
					[01;36m(PX[00m
						(APPR zu)
						(NX beginn des januar)[01;36m)[00m[01;31m)[00m)
			(VC versuchen)
			(NF einen termin zu finden))))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['ADVX', 'PX'], 'mover info': [('ADVX', (2, 3))], 'old_family': ['ADVX', 'APPR', 'NX'], 'start left siblings': [], 'auto preterminals': ('ADV', 'APPR', 'NN', 'ART', 'NN'), 'start right siblings': ['APPR', 'NX'], 'end left siblings': [], 'auto preterminal span': (2, 7), 'movers': ['ADVX'], 'old_parent': 'PX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['PX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP wir konnten gleich zu beginn des januar versuchen einen termin zu finden)

Sentence 125:
0 Initial errors
0 on fringe, 0 iterations

Sentence 126:
0 Initial errors
0 on fringe, 0 iterations

Sentence 127:
0 Initial errors
0 on fringe, 0 iterations

Sentence 128:
0 Initial errors
0 on fringe, 0 iterations

Sentence 129:
12 Initial errors
0 on fringe, 6 iterations
2 Error:Single Word Phrase
2 Error:Single Word Phrase
1 Error:PP Attachment
3 Error:Modifier Attachment
3 Error:UNSET move
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX
			[01;36m(ADVX[00m
				(VF
					[01;31m(NX[00m
						(NN siebenundzwanzigster)[01;31m)[00m)[01;36m)[00m
			(LK konnte)
			[01;31m(MF[00m [01;33m(MF[00m
				(NX ich)
				(ADVX naturlich)
				[01;31m(PX[00m [01;33m(PX[00m
					(APPR nach)
					[01;31m(NX[00m
						(NX meinem zahnarzttermin) [01;33mPX) MF)[00m
						[01;31m(R[00m [01;33m(R (NF[00m
							(C der)
							(MF um acht uhr)
							(VC stattfindet)[01;31m)[00m[01;31m)[00m[01;31m)[00m
				(ADVX dann)[01;31m)[00m
			[01;36m(ADVX[00m [01;31m(VC[00m
				(PTKVZ weg)[01;31m)[00m[01;36m)[00m))) [01;33mNF) R)[00m
Step:Single Word Phrase
{'family': ['ADVX'], 'auto preterminal span': (0, 1), 'span': (0, 1), 'subtrees': ['NN'], 'parent': 'VF', 'over_word': True, 'auto preterminals': ('NN',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('NX', 'ADVX')}
(TOP
	(TURN
		(SIMPX
			(VF siebenundzwanzigster)
			(LK konnte)
			[01;31m(MF[00m [01;33m(MF[00m
				(NX ich)
				(ADVX naturlich)
				[01;31m(PX[00m [01;33m(PX[00m
					(APPR nach)
					[01;31m(NX[00m
						(NX meinem zahnarzttermin) [01;33mPX) MF)[00m
						[01;31m(R[00m [01;33m(R (NF[00m
							(C der)
							(MF um acht uhr)
							(VC stattfindet)[01;31m)[00m[01;31m)[00m[01;31m)[00m
				(ADVX dann)[01;31m)[00m
			[01;36m(ADVX[00m [01;31m(VC[00m
				(PTKVZ weg)[01;31m)[00m[01;36m)[00m))) [01;33mNF) R)[00m
Step:Single Word Phrase
{'family': ['VF', 'LK', 'MF', 'ADVX'], 'auto preterminal span': (13, 14), 'span': (13, 14), 'subtrees': ['PTKVZ'], 'parent': 'SIMPX', 'over_word': True, 'auto preterminals': ('PTKVZ',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VC', 'ADVX')}
(TOP
	(TURN
		(SIMPX
			(VF siebenundzwanzigster)
			(LK konnte)
			[01;31m(MF[00m [01;33m(MF[00m
				(NX ich)
				(ADVX naturlich)
				[01;31m(PX[00m [01;33m(PX[00m
					(APPR nach)
					[01;31m(NX[00m
						(NX meinem zahnarzttermin) [01;33mPX) MF)[00m
						[01;31m(R[00m [01;33m(R (NF[00m
							(C der)
							(MF um acht uhr)
							(VC stattfindet)[01;31m)[00m[01;31m)[00m[01;31m)[00m
				(ADVX dann)[01;31m)[00m
			(ADVX weg)))) [01;33mNF) R)[00m
Step:PP Attachment
{'subtrees': ['NX', 'ADVX', 'PX', 'ADVX'], 'family': ['VF', 'LK', 'MF', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'VVFIN', 'PPER', 'ADV', 'APPR', 'PPOSAT', 'NN', 'PRELS', 'APPR', 'CARD', 'NN', 'VVFIN', 'ADV', 'PTKVZ'), 'right siblings': ['ADVX'], 'parent': 'SIMPX', 'auto preterminal span': (0, 14), 'span': (2, 13), 'left siblings': ['VF', 'LK'], 'label': 'MF', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX
			(VF siebenundzwanzigster)
			(LK konnte)
			[01;33m(MF[00m (NX ich)
			(ADVX naturlich)
			[01;31m(PX[00m [01;33m(PX[00m
				(APPR nach)
				[01;31m(NX[00m
					(NX meinem zahnarzttermin) [01;33mPX) MF)[00m
					[01;31m(R[00m [01;33m(R (NF[00m
						(C der)
						(MF um acht uhr)
						(VC stattfindet)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			(ADVX dann)
			(ADVX weg)))) [01;33mNF) R)[00m
Step:Modifier Attachment
{'new_parent': 'R', 'new_family': ['C', 'MF', 'VC', 'ADVX', 'ADVX'], 'mover info': [('ADVX', (12, 13)), ('ADVX', (13, 14))], 'old_family': ['VF', 'LK', 'NX', 'ADVX', 'PX', 'ADVX', 'ADVX'], 'start left siblings': ['VF', 'LK', 'NX', 'ADVX', 'PX'], 'auto preterminals': ('NN', 'VVFIN', 'PPER', 'ADV', 'APPR', 'PPOSAT', 'NN', 'PRELS', 'APPR', 'CARD', 'NN', 'VVFIN', 'ADV', 'PTKVZ'), 'start right siblings': [], 'end left siblings': ['C', 'MF', 'VC'], 'auto preterminal span': (0, 14), 'adding node already present': False, 'movers': ['ADVX', 'ADVX'], 'old_parent': 'SIMPX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'NF'}
(TOP
	(TURN
		(SIMPX
			(VF siebenundzwanzigster)
			(LK konnte)
			[01;33m(MF[00m (NX ich)
			(ADVX naturlich)
			[01;31m(PX[00m [01;33m(PX[00m
				(APPR nach)
				[01;31m(NX[00m
					(NX meinem zahnarzttermin) [01;33mPX) MF)[00m
					(NF der um acht uhr stattfindet dann weg)[01;31m)[00m[01;31m)[00m)))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'NX', 'ADVX', 'PX', 'NF'], 'mover info': [('NF', (7, 14))], 'old_family': ['NX', 'NF'], 'start left siblings': ['NX'], 'auto preterminals': ('NN', 'VVFIN', 'PPER', 'ADV', 'APPR', 'PPOSAT', 'NN', 'PRELS', 'APPR', 'CARD', 'NN', 'VVFIN', 'ADV', 'PTKVZ'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'NX', 'ADVX', 'PX'], 'auto preterminal span': (0, 14), 'movers': ['NF'], 'old_parent': 'NX', 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SIMPX
			(VF siebenundzwanzigster)
			(LK konnte)
			[01;36m(MF[00m
				(NX ich)
				(ADVX naturlich)
				(PX nach meinem zahnarzttermin)[01;36m)[00m
			(NF der um acht uhr stattfindet dann weg))))
Step:PP Attachment
{'subtrees': ['NX', 'ADVX', 'PX'], 'family': ['VF', 'LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV', 'APPR', 'PPOSAT', 'NN'), 'right siblings': [(NF (R (C (NX (PRELS der))) (MF (PX (APPR um) (NX (ADJX (CARD acht)) (NN uhr)))) (VC (VXFIN (VVFIN stattfindet))) (ADVX (ADV dann)) (ADVX (PTKVZ weg))))], 'left siblings': [(VF (ADVX (NN siebenundzwanzigster))), (LK (VXFIN (VVFIN konnte)))], 'auto preterminal span': (2, 7), 'span': (2, 7), 'parent': 'SIMPX', 'label': 'MF', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP siebenundzwanzigster konnte ich naturlich nach meinem zahnarzttermin der um acht uhr stattfindet dann weg)

Sentence 130:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Different label
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(NX[00m
	(TOP
		(TURN
			[01;31m(PX[00m
				(NX acht uhr morgens)
				(PX zum zahnarzt)[01;31m)[00m))[01;36m)[00m
Step:Different label
{'family': ['NX'], 'auto preterminal span': (0, 5), 'span': (0, 5), 'subtrees': ['NX', 'PX'], 'parent': 'TURN', 'over_word': False, 'auto preterminals': ('CARD', 'NN', 'ADV', 'APPRART', 'NN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('PX', 'NX')}
(TOP acht uhr morgens zum zahnarzt)

Sentence 131:
0 Initial errors
0 on fringe, 0 iterations

Sentence 132:
0 Initial errors
0 on fringe, 0 iterations

Sentence 133:
0 Initial errors
0 on fringe, 0 iterations

Sentence 134:
5 Initial errors
0 on fringe, 3 iterations
3 Error:UNSET move
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX
			(LK wird)
			[01;36m(MF[00m
				[01;36m(PX[00m
					[01;31m(MF[00m
						(ADJX
							(ADJD knapp))[01;31m)[00m
					[01;31m(NF[00m
						[01;31m(PX[00m
							(APPR ab)
							(NX zehn uhr)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m)))
Step:UNSET move
{'new_parent': 'PX', 'new_family': ['MF', 'APPR', 'NX'], 'mover info': [('MF', (1, 2))], 'old_family': ['LK', 'MF', 'NF'], 'start left siblings': ['LK'], 'auto preterminals': ('VAFIN', 'ADJD', 'APPR', 'CARD', 'NN'), 'start right siblings': ['NF'], 'end left siblings': [], 'auto preterminal span': (0, 5), 'adding node already present': False, 'movers': ['MF'], 'old_parent': 'SIMPX', 'POS confusion': ('ADJD', 'ADJD'), 'added and moved': True, 'end right siblings': ['APPR', 'NX'], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'MF'}
(TOP
	(TURN
		(SIMPX
			(LK wird)
			(MF
				[01;31m(NF[00m
					(PX
						[01;31m(MF[00m
							(ADJX
								(ADJD knapp))[01;31m)[00m
						(APPR ab)
						(NX zehn uhr))[01;31m)[00m))))
Step:Unary
{'subtrees': ['ADJX'], 'family': ['MF', 'APPR', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJD', 'APPR', 'CARD', 'NN'), 'right siblings': ['APPR', 'NX'], 'parent': 'PX', 'auto preterminal span': (1, 5), 'span': (1, 2), 'left siblings': [], 'label': 'MF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX
			(LK wird)
			(MF
				[01;31m(NF[00m
					(PX
						(ADJX knapp)
						(APPR ab)
						(NX zehn uhr))[01;31m)[00m))))
Step:Unary
{'subtrees': ['PX'], 'family': ['NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJD', 'APPR', 'CARD', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (1, 5), 'span': (1, 5), 'left siblings': [], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP wird knapp ab zehn uhr)

Sentence 135:
5 Initial errors
0 on fringe, 4 iterations
2 Error:Single Word Phrase
1 Error:Modifier Attachment
1 Error:Modifier Attachment
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(NX[00m
			(ADVX knapp)
			(ADJX zehn)
			(NN uhr)[01;31m)[00m
		[01;31m(NX[00m
			(NX elf)
			[01;36m(ADJX[00m [01;31m(NX[00m
				(CARD zwolf)[01;31m)[00m[01;36m)[00m
			(NX eins)
			(NX zwei)[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK sind)
			(MF wir um drei uhr da)[01;31m)[00m))
Step:Single Word Phrase
{'family': ['NX', 'ADJX', 'NX', 'NX'], 'auto preterminal span': (4, 5), 'span': (4, 5), 'subtrees': ['CARD'], 'parent': 'NX', 'over_word': True, 'auto preterminals': ('CARD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('NX', 'ADJX')}
(TOP
	(TURN
		[01;31m(NX[00m
			(ADVX knapp)
			(ADJX zehn)
			(NN uhr)[01;31m)[00m
		[01;31m(NX[00m
			(NX elf)
			(ADJX zwolf)
			(NX eins)
			(NX zwei)[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK sind)
			(MF wir um drei uhr da)[01;31m)[00m))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'ADJX', 'NN'], 'family': ['NX', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'CARD', 'NN', 'CARD', 'CARD', 'CARD', 'CARD', 'VAFIN', 'PPER', 'APPR', 'CARD', 'NN', 'ADV'), 'right siblings': ['NX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 13), 'span': (0, 3), 'left siblings': [], 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(ADVX knapp)
		(ADJX zehn)
		(NN uhr)
		[01;31m(NX[00m
			(NX elf)
			(ADJX zwolf)
			(NX eins)
			(NX zwei)[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK sind)
			(MF wir um drei uhr da)[01;31m)[00m))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADJX', 'NX', 'NX'], 'family': ['ADVX', 'ADJX', 'NN', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'CARD', 'NN', 'CARD', 'CARD', 'CARD', 'CARD', 'VAFIN', 'PPER', 'APPR', 'CARD', 'NN', 'ADV'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 13), 'span': (3, 7), 'left siblings': ['ADVX', 'ADJX', 'NN'], 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(ADVX knapp)
		(ADJX zehn)
		(NN uhr)
		(NX elf)
		(ADJX zwolf)
		(NX eins)
		(NX zwei)
		[01;31m(SIMPX[00m
			(LK sind)
			(MF wir um drei uhr da)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['ADVX', 'ADJX', 'NN', 'NX', 'ADJX', 'NX', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'CARD', 'NN', 'CARD', 'CARD', 'CARD', 'CARD', 'VAFIN', 'PPER', 'APPR', 'CARD', 'NN', 'ADV'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 13), 'span': (7, 13), 'left siblings': ['ADVX', 'ADJX', 'NN', 'NX', 'ADJX', 'NX', 'NX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP knapp zehn uhr elf zwolf eins zwei sind wir um drei uhr da)

Sentence 136:
4 Initial errors
0 on fringe, 4 iterations
1 Error:UNSET remove
1 Error:Unary
1 Error:Modifier Attachment
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			(LK genugt)
			[01;31m(MF[00m
				(NX
					(PDS das))[01;31m)[00m[01;31m)[00m
		[01;31m(NX[00m
			[01;31m(NX[00m
				(ART ein)
				(ADJX halber)
				(NN tag)[01;31m)[00m
			(ADVX dann)
			(ADVX noch)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['SIMPX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PDS', 'ART', 'ADJA', 'NN', 'ADV', 'ADV'), 'right siblings': ['NX'], 'parent': 'TURN', 'auto preterminal span': (0, 7), 'span': (0, 2), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(LK genugt)
		[01;31m(MF[00m
			(NX
				(PDS das))[01;31m)[00m
		[01;31m(NX[00m
			[01;31m(NX[00m
				(ART ein)
				(ADJX halber)
				(NN tag)[01;31m)[00m
			(ADVX dann)
			(ADVX noch)[01;31m)[00m))
Step:Unary
{'subtrees': ['NX'], 'family': ['LK', 'MF', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PDS', 'ART', 'ADJA', 'NN', 'ADV', 'ADV'), 'right siblings': ['NX'], 'parent': 'TURN', 'auto preterminal span': (0, 7), 'span': (1, 2), 'left siblings': ['LK'], 'label': 'MF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(LK genugt)
		(NX das)
		[01;31m(NX[00m
			[01;31m(NX[00m
				(ART ein)
				(ADJX halber)
				(NN tag)[01;31m)[00m
			(ADVX dann)
			(ADVX noch)[01;31m)[00m))
Step:Modifier Attachment
{'subtrees': ['ART', 'ADJX', 'NN'], 'family': ['NX', 'ADVX', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'ADJA', 'NN', 'ADV', 'ADV'), 'right siblings': ['ADVX', 'ADVX'], 'parent': 'NX', 'auto preterminal span': (2, 7), 'span': (2, 5), 'left siblings': [], 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(LK genugt)
		(NX das)
		[01;31m(NX[00m
			(ART ein)
			(ADJX halber)
			(NN tag)
			(ADVX dann)
			(ADVX noch)[01;31m)[00m))
Step:Modifier Attachment
{'subtrees': ['ART', 'ADJX', 'NN', 'ADVX', 'ADVX'], 'family': ['LK', 'NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PDS', 'ART', 'ADJA', 'NN', 'ADV', 'ADV'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 7), 'span': (2, 7), 'left siblings': ['LK', 'NX'], 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP genugt das ein halber tag dann noch)

Sentence 137:
4 Initial errors
0 on fringe, 4 iterations
1 Error:Clause Attachment
1 Error:Clause Attachment
1 Error:Clause Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX das muste also)
		[01;36m(SIMPX[00m
			(SIMPX fur den ersten halben tag muste das eigentlich reichen)
			[01;36m(SIMPX[00m
				(DM also)
				(NX die)
				(SIMPX dann quetschen wir die termine ein bischen zusammen)[01;36m)[00m[01;36m)[00m
		(DM also)
		[01;36m(SIMPX[00m
			(SIMPX da mussen die leute jetzt auch mal etwas variabel sein)
			(SIMPX
				(VF ich)
				(LK meine)
				[01;31m(MF[00m
					(ADJX
						(ADJD flexibel))[01;31m)[00m)[01;36m)[00m))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'DM', 'NX', 'SIMPX'], 'family': ['SIMPX', 'SIMPX', 'DM', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'ADJA', 'ADJA', 'NN', 'VMFIN', 'PDS', 'ADV', 'VVINF', 'ADV', 'PDS', 'ADV', 'VVFIN', 'PPER', 'ART', 'NN', 'ART', 'PIS', 'PTKVZ'), 'right siblings': [(DM (ADVX (ADV also))), (SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VMFIN mussen))) (MF (NX (ART die) (NN leute)) (ADVX (ADV jetzt)) (ADVX (ADV auch)) (ADVX (ADV mal)) (ADJX (ADVX (ADV etwas)) (ADJD variabel))) (VC (VXINF (VAINF sein)))), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN meine))) (MF (ADJX (ADJD flexibel))))], 'left siblings': [(SIMPX (VF (NX (PDS das))) (LK (VXFIN (VMFIN muste))) (MF (ADVX (ADV also))))], 'auto preterminal span': (3, 22), 'span': (3, 22), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(SIMPX das muste also)
		(SIMPX
			(SIMPX fur den ersten halben tag muste das eigentlich reichen)
			[01;36m(SIMPX[00m
				(DM also)
				(NX die)
				(SIMPX dann quetschen wir die termine ein bischen zusammen)[01;36m)[00m)
		(DM also)
		[01;36m(SIMPX[00m
			(SIMPX da mussen die leute jetzt auch mal etwas variabel sein)
			(SIMPX
				(VF ich)
				(LK meine)
				[01;31m(MF[00m
					(ADJX
						(ADJD flexibel))[01;31m)[00m)[01;36m)[00m))
Step:Clause Attachment
{'subtrees': ['DM', 'NX', 'SIMPX'], 'family': ['SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PDS', 'ADV', 'VVFIN', 'PPER', 'ART', 'NN', 'ART', 'PIS', 'PTKVZ'), 'right siblings': [], 'left siblings': [(SIMPX (VF (PX (APPR fur) (NX (ART den) (ADJX (ADJA ersten)) (ADJX (ADJA halben)) (NN tag)))) (LK (VXFIN (VMFIN muste))) (MF (NX (PDS das)) (ADVX (ADV eigentlich))) (VC (VXINF (VVINF reichen))))], 'auto preterminal span': (12, 22), 'span': (12, 22), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(SIMPX das muste also)
		(SIMPX fur den ersten halben tag muste das eigentlich reichen also die dann quetschen wir die termine ein bischen zusammen)
		(DM also)
		[01;36m(SIMPX[00m
			(SIMPX da mussen die leute jetzt auch mal etwas variabel sein)
			(SIMPX
				(VF ich)
				(LK meine)
				[01;31m(MF[00m
					(ADJX
						(ADJD flexibel))[01;31m)[00m)[01;36m)[00m))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['SIMPX', 'SIMPX', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VMFIN', 'ART', 'NN', 'ADV', 'ADV', 'ADV', 'ADV', 'ADJD', 'VAINF', 'PPER', 'VVFIN', 'ADJD'), 'right siblings': [], 'left siblings': [(SIMPX (VF (NX (PDS das))) (LK (VXFIN (VMFIN muste))) (MF (ADVX (ADV also)))), (SIMPX (SIMPX (VF (PX (APPR fur) (NX (ART den) (ADJX (ADJA ersten)) (ADJX (ADJA halben)) (NN tag)))) (LK (VXFIN (VMFIN muste))) (MF (NX (PDS das)) (ADVX (ADV eigentlich))) (VC (VXINF (VVINF reichen)))) (SIMPX (DM (ADVX (ADV also))) (NX (PDS die)) (SIMPX (VF (ADVX (ADV dann))) (LK (VXFIN (VVFIN quetschen))) (MF (NX (PPER wir)) (NX (ART die) (NN termine)) (NX (ART ein) (PIS bischen))) (VC (PTKVZ zusammen))))), (DM (ADVX (ADV also)))], 'auto preterminal span': (23, 36), 'span': (23, 36), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(SIMPX das muste also)
		(SIMPX fur den ersten halben tag muste das eigentlich reichen also die dann quetschen wir die termine ein bischen zusammen)
		(DM also)
		(SIMPX
			(SIMPX da mussen die leute jetzt auch mal etwas variabel sein)
			(SIMPX
				(VF ich)
				(LK meine)
				[01;31m(MF[00m
					(ADJX
						(ADJD flexibel))[01;31m)[00m))))
Step:Unary
{'subtrees': ['ADJX'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ADJD'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (33, 36), 'span': (35, 36), 'left siblings': ['VF', 'LK'], 'label': 'MF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP das muste also fur den ersten halben tag muste das eigentlich reichen also die dann quetschen wir die termine ein bischen zusammen also da mussen die leute jetzt auch mal etwas variabel sein ich meine flexibel)

Sentence 138:
0 Initial errors
0 on fringe, 0 iterations

Sentence 139:
0 Initial errors
0 on fringe, 0 iterations

Sentence 140:
0 Initial errors
0 on fringe, 0 iterations

Sentence 141:
0 Initial errors
0 on fringe, 0 iterations

Sentence 142:
5 Initial errors
0 on fringe, 3 iterations
2 Error:Single Word Phrase
2 Error:NP Attachment
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP [01;33m(PX[00m
	(TURN
		(APPR mit)
		[01;31m(PX[00m
			[01;36m(NX[00m [01;31m(ADVX[00m
				(ADV naturlich)[01;31m)[00m [01;33mPX)[00m[01;36m)[00m
			[01;33m(PX[00m (PX mit schwimm und dampfbad)[01;31m)[00m
		(PX direkt am hauptbahnhof) [01;33mPX)[00m
		(SIMPX das hort sich gut an)))
Step:Single Word Phrase
{'family': ['NX', 'PX'], 'auto preterminal span': (1, 2), 'span': (1, 2), 'subtrees': ['ADV'], 'parent': 'PX', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'NX')}
(TOP [01;33m(PX[00m
	(TURN
		(APPR mit)
		[01;31m(PX[00m
			(NX naturlich) [01;33mPX)[00m
			[01;33m(PX[00m (PX mit schwimm und dampfbad)[01;31m)[00m
		(PX direkt am hauptbahnhof) [01;33mPX)[00m
		(SIMPX das hort sich gut an)))
Step:NP Attachment
{'new_parent': 'TURN', 'new_family': ['APPR', 'NX', 'PX', 'PX', 'SIMPX'], 'mover info': [('NX', (1, 2))], 'old_family': ['NX', 'PX'], 'start left siblings': [], 'auto preterminals': ('APPR', 'ADV', 'APPR', 'TRUNC', 'KON', 'NN', 'ADV', 'APPRART', 'NN', 'PDS', 'VVFIN', 'PRF', 'ADJD', 'PTKVZ'), 'start right siblings': ['PX'], 'end left siblings': ['APPR'], 'auto preterminal span': (0, 14), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'PX', 'POS confusion': ('ADV', 'ADV'), 'added and moved': True, 'end right siblings': ['PX', 'PX', 'SIMPX'], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'PX'}
(TOP
	(TURN
		(PX mit naturlich)
		[01;36m(PX[00m
			(PX mit schwimm und dampfbad)
			(PX direkt am hauptbahnhof)[01;36m)[00m
		(SIMPX das hort sich gut an)))
Step:PP Attachment
{'subtrees': ['PX', 'PX'], 'family': ['PX', 'PX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'TRUNC', 'KON', 'NN', 'ADV', 'APPRART', 'NN'), 'right siblings': [(SIMPX (VF (NX (PDS das))) (LK (VXFIN (VVFIN hort))) (MF (NX (PRF sich)) (ADJX (ADJD gut))) (VC (PTKVZ an)))], 'left siblings': [(PX (APPR mit) (NX (ADV naturlich)))], 'auto preterminal span': (2, 9), 'span': (2, 9), 'parent': 'TURN', 'label': 'PX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP mit naturlich mit schwimm und dampfbad direkt am hauptbahnhof das hort sich gut an)

Sentence 143:
3 Initial errors
0 on fringe, 2 iterations
2 Error:Modifier Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM also)
		(SIMPX dann wurde ich lieber das einzelzimmer mal vorschlagen)
		(SIMPX und da wir es nicht selber bezahlen und wir schon dann lange im zug gesessen haben)
		(DM also)
		(SIMPX
			(VF ich)
			(LK wurde)
			[01;31m(MF[00m
				[01;36m(MF[00m
					(NX
						(PPER es))[01;36m)[00m
				[01;36m(DM[00m
					(ADVX
						(ADV also))[01;36m)[00m[01;31m)[00m)
		(SIMPX ich wurde es dann mal machen)))
Step:Modifier Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'ADVX'], 'mover info': [('ADVX', (29, 30))], 'old_family': ['NX', 'ADVX'], 'start left siblings': ['NX'], 'auto preterminals': ('PPER', 'VAFIN', 'PPER', 'ADV'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (26, 30), 'movers': ['ADVX'], 'old_parent': 'MF', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM also)
		(SIMPX dann wurde ich lieber das einzelzimmer mal vorschlagen)
		(SIMPX und da wir es nicht selber bezahlen und wir schon dann lange im zug gesessen haben)
		(DM also)
		(SIMPX
			(VF ich)
			(LK wurde)
			(MF es)
			[01;36m(DM[00m
				(ADVX
					(ADV also))[01;36m)[00m)
		(SIMPX ich wurde es dann mal machen)))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['VF', 'LK', 'MF', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV',), 'right siblings': [], 'left siblings': [(VF (NX (PPER ich))), (LK (VXFIN (VAFIN wurde))), (MF (NX (PPER es)))], 'auto preterminal span': (29, 30), 'span': (29, 30), 'parent': 'SIMPX', 'label': 'DM', 'classified_type': 'Unary', 'type': 'add'}
(TOP also dann wurde ich lieber das einzelzimmer mal vorschlagen und da wir es nicht selber bezahlen und wir schon dann lange im zug gesessen haben also ich wurde es also ich wurde es dann mal machen)

Sentence 144:
5 Initial errors
0 on fringe, 4 iterations
2 Error:Clause Attachment
1 Error:UNSET remove
1 Error:Modifier Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SIMPX[00m
	(TOP
		(TURN
			[01;31m(SIMPX[00m
				(VF ich)
				(LK denke)
				[01;33m(MF (ADVX[00m (MF auch)[01;31m)[00m
			(DM mein gott) [01;33mADVX) MF)[00m
			[01;31m(SIMPX[00m
				(C wer)
				(MF hier schon wieder eine nacht)
				(VC opfert)[01;31m)[00m))[01;36m)[00m
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['SIMPX', 'DM', 'C', 'MF', 'VC'], 'mover info': [('SIMPX', (0, 3)), ('DM', (3, 5))], 'old_family': ['SIMPX', 'DM', 'SIMPX'], 'start left siblings': [], 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'PPOSAT', 'NE', 'PWS', 'ADV', 'ADV', 'ADV', 'ART', 'NN', 'VVFIN'), 'start right siblings': ['SIMPX'], 'end left siblings': [], 'auto preterminal span': (0, 12), 'movers': ['SIMPX', 'DM'], 'old_parent': 'TURN', 'end right siblings': ['C', 'MF', 'VC'], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(SIMPX
			[01;31m(SIMPX[00m
				(VF ich)
				(LK denke)
				[01;33m(MF (ADVX[00m (MF auch)[01;31m)[00m
			(DM mein gott) [01;33mADVX) MF)[00m
			(C wer)
			(MF hier schon wieder eine nacht)
			(VC opfert))))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['SIMPX', 'DM', 'C', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'PPOSAT', 'NE', 'PWS', 'ADV', 'ADV', 'ADV', 'ART', 'NN', 'VVFIN'), 'right siblings': ['DM', 'C', 'MF', 'VC'], 'parent': 'SIMPX', 'auto preterminal span': (0, 12), 'span': (0, 3), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX
			(VF ich)
			(LK denke)
			[01;36m(MF[00m
				[01;36m(ADVX[00m
					(MF auch)
					(DM mein gott)[01;36m)[00m[01;36m)[00m
			(C wer)
			(MF hier schon wieder eine nacht)
			(VC opfert))))
Step:Modifier Attachment
{'subtrees': ['MF', 'DM'], 'family': ['VF', 'LK', 'ADVX', 'C', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPOSAT', 'NE'), 'right siblings': [(C (NX (PWS wer))), (MF (ADVX (ADV hier)) (ADVX (ADV schon)) (ADVX (ADV wieder)) (NX (ART eine) (NN nacht))), (VC (VXFIN (VVFIN opfert)))], 'left siblings': [(VF (NX (PPER ich))), (LK (VXFIN (VVFIN denke)))], 'auto preterminal span': (2, 5), 'span': (2, 5), 'parent': 'SIMPX', 'label': 'ADVX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		(SIMPX
			(VF ich)
			(LK denke)
			[01;36m(MF[00m
				(ADVX
					(MF auch)
					(DM mein gott))[01;36m)[00m
			(C wer)
			(MF hier schon wieder eine nacht)
			(VC opfert))))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['VF', 'LK', 'MF', 'C', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPOSAT', 'NE'), 'right siblings': [(C (NX (PWS wer))), (MF (ADVX (ADV hier)) (ADVX (ADV schon)) (ADVX (ADV wieder)) (NX (ART eine) (NN nacht))), (VC (VXFIN (VVFIN opfert)))], 'left siblings': [(VF (NX (PPER ich))), (LK (VXFIN (VVFIN denke)))], 'auto preterminal span': (2, 5), 'span': (2, 5), 'parent': 'SIMPX', 'label': 'MF', 'classified_type': 'Unary', 'type': 'add'}
(TOP ich denke auch mein gott wer hier schon wieder eine nacht opfert)

Sentence 145:
0 Initial errors
0 on fringe, 0 iterations

Sentence 146:
15 Initial errors
0 on fringe, 9 iterations
3 Error:PP Attachment
2 Error:Single Word Phrase
2 Error:Co-ordination
2 Error:UNSET move
2 Error:Modifier Attachment
1 Error:NP Internal Structure
1 Error:Unary
1 Error:Single Word Phrase
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM also)
		[01;33m(NX[00m (NX kino nicht)
		[01;31m(NX[00m
			(NX theater) [01;33mNX)[00m
			[01;33m(ADVX[00m (ADVX nicht)[01;31m)[00m
		(ADVX dann)
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				(ADVX
					(ADV vielleicht))[01;31m)[00m [01;33mADVX)[00m
			[01;36m(SIMPX[00m
				[01;36m(VF[00m
					(NX
						(PPER wir))[01;36m)[00m
				(LK gehen)
				(MF
					(NX wir)
					(ADVX einfach)
					[01;36m(PX[00m
						[01;31m(PX[00m
							(APPR in)
							[01;33m(NX[00m (NX eine kneipe)[01;31m)[00m
						(APPR nach)
						(ART der)
						(PX nach dem meeting)[01;36m)[00m)[01;36m)[00m[01;31m)[00m [01;33mNX)[00m
		[01;36m(SIMPX[00m
			[01;36m(KOORD[00m
				(KON und)[01;36m)[00m
			(DM ja)
			[01;31m(SIMPX[00m
				(VF dann)
				(LK brauchen)
				(MF
					(NX wir)
					(ADVX nicht)
					(ADVX weiter)
					[01;36m(NX[00m [01;31m(ADJX[00m
						(ADJD grosartig)[01;31m)[00m[01;36m)[00m)
				(VC planen)[01;31m)[00m[01;36m)[00m))
Step:PP Attachment
{'new_parent': 'PX', 'new_family': ['APPR', 'NX', 'APPR', 'ART', 'PX'], 'mover info': [('APPR', (14, 15)), ('ART', (15, 16)), ('PX', (16, 19))], 'old_family': ['NX', 'ADVX', 'PX', 'APPR', 'ART', 'PX'], 'start left siblings': ['NX', 'ADVX', 'PX'], 'auto preterminals': ('PPER', 'ADV', 'APPR', 'ART', 'NN', 'APPR', 'ART', 'APPR', 'ART', 'NN'), 'start right siblings': [], 'end left siblings': ['APPR', 'NX'], 'auto preterminal span': (9, 19), 'adding node already present': False, 'movers': ['APPR', 'ART', 'PX'], 'old_parent': 'MF', 'added and moved': True, 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(DM also)
		[01;33m(NX[00m (NX kino nicht)
		[01;31m(NX[00m
			(NX theater) [01;33mNX)[00m
			[01;33m(ADVX[00m (ADVX nicht)[01;31m)[00m
		(ADVX dann)
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				(ADVX
					(ADV vielleicht))[01;31m)[00m [01;33mADVX)[00m
			[01;36m(SIMPX[00m
				[01;36m(VF[00m
					(NX
						(PPER wir))[01;36m)[00m
				(LK gehen)
				(MF wir einfach in eine kneipe nach der nach dem meeting)[01;36m)[00m[01;31m)[00m
		[01;36m(SIMPX[00m
			[01;36m(KOORD[00m
				(KON und)[01;36m)[00m
			(DM ja)
			[01;31m(SIMPX[00m
				(VF dann)
				(LK brauchen)
				(MF
					(NX wir)
					(ADVX nicht)
					(ADVX weiter)
					[01;36m(NX[00m [01;31m(ADJX[00m
						(ADJD grosartig)[01;31m)[00m[01;36m)[00m)
				(VC planen)[01;31m)[00m[01;36m)[00m))
Step:Single Word Phrase
{'family': ['NX', 'ADVX', 'ADVX', 'NX'], 'auto preterminal span': (26, 27), 'span': (26, 27), 'subtrees': ['ADJD'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('ADJD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'NX')}
(TOP
	(TURN
		(DM also)
		[01;33m(NX[00m (NX kino nicht)
		[01;31m(NX[00m
			(NX theater) [01;33mNX)[00m
			[01;33m(ADVX[00m (ADVX nicht)[01;31m)[00m
		(ADVX dann)
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				(ADVX
					(ADV vielleicht))[01;31m)[00m [01;33mADVX)[00m
			[01;36m(SIMPX[00m
				[01;36m(VF[00m
					(NX
						(PPER wir))[01;36m)[00m
				(LK gehen)
				(MF wir einfach in eine kneipe nach der nach dem meeting)[01;36m)[00m[01;31m)[00m
		[01;36m(SIMPX[00m
			[01;36m(KOORD[00m
				(KON und)[01;36m)[00m
			(DM ja)
			[01;31m(SIMPX[00m
				(VF dann)
				(LK brauchen)
				(MF wir nicht weiter grosartig)
				(VC planen)[01;31m)[00m[01;36m)[00m))
Step:Co-ordination
{'new_parent': 'SIMPX', 'new_family': ['KON', 'DM', 'VF', 'LK', 'MF', 'VC'], 'mover info': [('KON', (19, 20)), ('DM', (20, 21))], 'old_family': ['DM', 'NX', 'NX', 'ADVX', 'SIMPX', 'KON', 'DM', 'SIMPX'], 'start left siblings': ['DM', 'NX', 'NX', 'ADVX', 'SIMPX'], 'auto preterminals': ('ADV', 'NN', 'PTKNEG', 'NN', 'PTKNEG', 'ADV', 'ADV', 'PPER', 'VVFIN', 'PPER', 'ADV', 'APPR', 'ART', 'NN', 'APPR', 'ART', 'APPR', 'ART', 'NN', 'KON', 'PTKANT', 'ADV', 'VVFIN', 'PPER', 'PTKNEG', 'ADV', 'ADJD', 'VVINF'), 'start right siblings': ['SIMPX'], 'end left siblings': [], 'auto preterminal span': (0, 28), 'movers': ['KON', 'DM'], 'old_parent': 'TURN', 'end right siblings': ['VF', 'LK', 'MF', 'VC'], 'classified_type': 'Co-ordination', 'type': 'move'}
(TOP
	(TURN
		(DM also)
		[01;33m(NX[00m (NX kino nicht)
		[01;31m(NX[00m
			(NX theater) [01;33mNX)[00m
			[01;33m(ADVX[00m (ADVX nicht)[01;31m)[00m
		(ADVX dann)
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				(ADVX
					(ADV vielleicht))[01;31m)[00m [01;33mADVX)[00m
			[01;36m(SIMPX[00m
				[01;36m(VF[00m
					(NX
						(PPER wir))[01;36m)[00m
				(LK gehen)
				(MF wir einfach in eine kneipe nach der nach dem meeting)[01;36m)[00m[01;31m)[00m
		(SIMPX
			[01;36m(KOORD[00m
				(KON und)[01;36m)[00m
			(DM ja)
			(VF dann)
			(LK brauchen)
			(MF wir nicht weiter grosartig)
			(VC planen))))
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['DM', 'NX', 'NX', 'ADVX', 'VF', 'SIMPX', 'SIMPX'], 'mover info': [('VF', (6, 7))], 'old_family': ['VF', 'NX', 'LK', 'MF'], 'start left siblings': [], 'auto preterminals': ('ADV', 'NN', 'PTKNEG', 'NN', 'PTKNEG', 'ADV', 'ADV', 'PPER', 'VVFIN', 'PPER', 'ADV', 'APPR', 'ART', 'NN', 'APPR', 'ART', 'APPR', 'ART', 'NN', 'KON', 'PTKANT', 'ADV', 'VVFIN', 'PPER', 'PTKNEG', 'ADV', 'ADJD', 'VVINF'), 'start right siblings': ['NX', 'LK', 'MF'], 'end left siblings': ['DM', 'NX', 'NX', 'ADVX'], 'auto preterminal span': (0, 28), 'movers': ['VF'], 'old_parent': 'SIMPX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['SIMPX', 'SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM also)
		[01;33m(NX[00m (NX kino nicht)
		[01;31m(NX[00m
			(NX theater) [01;33mNX)[00m
			[01;33m(ADVX[00m (ADVX nicht)[01;31m)[00m
		(ADVX dann)
		[01;31m(VF[00m
			(ADVX
				(ADV vielleicht))[01;31m)[00m [01;33mADVX)[00m
		(SIMPX
			[01;36m(VF[00m
				(NX
					(PPER wir))[01;36m)[00m
			(LK gehen)
			(MF wir einfach in eine kneipe nach der nach dem meeting))
		(SIMPX
			[01;36m(KOORD[00m
				(KON und)[01;36m)[00m
			(DM ja)
			(VF dann)
			(LK brauchen)
			(MF wir nicht weiter grosartig)
			(VC planen))))
Step:Modifier Attachment
{'new_parent': 'TURN', 'new_family': ['DM', 'NX', 'NX', 'ADVX', 'ADVX', 'VF', 'SIMPX', 'SIMPX'], 'mover info': [('ADVX', (4, 5))], 'old_family': ['NX', 'ADVX'], 'start left siblings': ['NX'], 'auto preterminals': ('ADV', 'NN', 'PTKNEG', 'NN', 'PTKNEG', 'ADV', 'ADV', 'PPER', 'VVFIN', 'PPER', 'ADV', 'APPR', 'ART', 'NN', 'APPR', 'ART', 'APPR', 'ART', 'NN', 'KON', 'PTKANT', 'ADV', 'VVFIN', 'PPER', 'PTKNEG', 'ADV', 'ADJD', 'VVINF'), 'start right siblings': [], 'end left siblings': ['DM', 'NX', 'NX'], 'auto preterminal span': (0, 28), 'adding node already present': True, 'movers': ['ADVX'], 'old_parent': 'NX', 'POS confusion': ('PTKNEG', 'PTKNEG'), 'added and moved': True, 'end right siblings': ['ADVX', 'VF', 'SIMPX', 'SIMPX'], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'KOORD'}
(TOP
	(TURN
		(DM also)
		[01;36m(NX[00m
			(NX kino nicht)
			(NX theater)[01;36m)[00m
		(ADVX
			(ADVX nicht)
			(ADVX dann)
			[01;31m(VF[00m
				(ADVX
					(ADV vielleicht))[01;31m)[00m)
		(SIMPX
			[01;36m(VF[00m
				(NX
					(PPER wir))[01;36m)[00m
			(LK gehen)
			(MF wir einfach in eine kneipe nach der nach dem meeting))
		(SIMPX
			[01;36m(KOORD[00m
				(KON und)[01;36m)[00m
			(DM ja)
			(VF dann)
			(LK brauchen)
			(MF wir nicht weiter grosartig)
			(VC planen))))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['DM', 'NX', 'ADVX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'PTKNEG', 'NN'), 'right siblings': [(ADVX (ADVX (PTKNEG nicht)) (ADVX (ADV dann)) (VF (ADVX (ADV vielleicht)))), (SIMPX (NX (PPER wir)) (LK (VXFIN (VVFIN gehen))) (MF (NX (PPER wir)) (ADVX (ADV einfach)) (PX (APPR in) (NX (NX (ART eine) (NN kneipe)) (APPR nach) (ART der) (PX (APPR nach) (NX (ART dem) (NN meeting))))))), (SIMPX (KON und) (DM (PTKANT ja)) (VF (ADVX (ADV dann))) (LK (VXFIN (VVFIN brauchen))) (MF (NX (PPER wir)) (ADVX (PTKNEG nicht)) (ADVX (ADV weiter)) (NX (ADJD grosartig))) (VC (VXINF (VVINF planen))))], 'left siblings': [(DM (ADVX (ADV also)))], 'auto preterminal span': (1, 4), 'span': (1, 4), 'parent': 'TURN', 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		(NX kino nicht theater)
		(ADVX
			(ADVX nicht)
			(ADVX dann)
			[01;31m(VF[00m
				(ADVX
					(ADV vielleicht))[01;31m)[00m)
		(SIMPX
			[01;36m(VF[00m
				(NX
					(PPER wir))[01;36m)[00m
			(LK gehen)
			(MF wir einfach in eine kneipe nach der nach dem meeting))
		(SIMPX
			[01;36m(KOORD[00m
				(KON und)[01;36m)[00m
			(DM ja)
			(VF dann)
			(LK brauchen)
			(MF wir nicht weiter grosartig)
			(VC planen))))
Step:Unary
{'subtrees': ['NX'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER',), 'right siblings': [(LK (VXFIN (VVFIN gehen))), (MF (NX (PPER wir)) (ADVX (ADV einfach)) (PX (APPR in) (NX (NX (ART eine) (NN kneipe)) (APPR nach) (ART der) (PX (APPR nach) (NX (ART dem) (NN meeting))))))], 'left siblings': [], 'auto preterminal span': (7, 8), 'span': (7, 8), 'parent': 'SIMPX', 'label': 'VF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		(NX kino nicht theater)
		(ADVX
			(ADVX nicht)
			(ADVX dann)
			[01;31m(VF[00m
				(ADVX
					(ADV vielleicht))[01;31m)[00m)
		(SIMPX wir gehen wir einfach in eine kneipe nach der nach dem meeting)
		(SIMPX
			[01;36m(KOORD[00m
				(KON und)[01;36m)[00m
			(DM ja)
			(VF dann)
			(LK brauchen)
			(MF wir nicht weiter grosartig)
			(VC planen))))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['KOORD', 'DM', 'VF', 'LK', 'MF', 'VC'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON',), 'right siblings': [(DM (PTKANT ja)), (VF (ADVX (ADV dann))), (LK (VXFIN (VVFIN brauchen))), (MF (NX (PPER wir)) (ADVX (PTKNEG nicht)) (ADVX (ADV weiter)) (NX (ADJD grosartig))), (VC (VXINF (VVINF planen)))], 'left siblings': [], 'auto preterminal span': (19, 20), 'span': (19, 20), 'parent': 'SIMPX', 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		(NX kino nicht theater)
		(ADVX
			(ADVX nicht)
			(ADVX dann)
			[01;31m(VF[00m
				(ADVX
					(ADV vielleicht))[01;31m)[00m)
		(SIMPX wir gehen wir einfach in eine kneipe nach der nach dem meeting)
		(SIMPX und ja dann brauchen wir nicht weiter grosartig planen)))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['ADVX', 'ADVX', 'VF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKNEG', 'ADV', 'ADV'), 'right siblings': [], 'parent': 'ADVX', 'auto preterminal span': (4, 7), 'span': (6, 7), 'left siblings': ['ADVX', 'ADVX'], 'label': 'VF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP also kino nicht theater nicht dann vielleicht wir gehen wir einfach in eine kneipe nach der nach dem meeting und ja dann brauchen wir nicht weiter grosartig planen)

Sentence 147:
0 Initial errors
0 on fringe, 0 iterations

Sentence 148:
0 Initial errors
0 on fringe, 0 iterations

Sentence 149:
0 Initial errors
0 on fringe, 0 iterations

Sentence 150:
0 Initial errors
0 on fringe, 0 iterations

Sentence 151:
0 Initial errors
0 on fringe, 0 iterations

Sentence 152:
0 Initial errors
0 on fringe, 0 iterations

Sentence 153:
0 Initial errors
0 on fringe, 0 iterations

Sentence 154:
0 Initial errors
0 on fringe, 0 iterations

Sentence 155:
0 Initial errors
0 on fringe, 0 iterations

Sentence 156:
0 Initial errors
0 on fringe, 0 iterations

Sentence 157:
4 Initial errors
0 on fringe, 2 iterations
3 Error:PP Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX
			(VF ice)
			(LK ist)
			[01;31m(MF[00m [01;33m(MF[00m
				(ADVX ja)
				[01;33m(ADJX[00m (ADJX relativ zugig)[01;31m)[00m
			[01;31m(NF[00m
				(PX ab munchen) [01;33mADJX) MF)[00m
				(ADVX dann)[01;31m)[00m)))
Step:PP Attachment
{'new_parent': 'MF', 'new_family': ['ADVX', 'ADJX', 'PX'], 'mover info': [('PX', (5, 7))], 'old_family': ['PX', 'ADVX'], 'start left siblings': [], 'auto preterminals': ('NE', 'VAFIN', 'ADV', 'ADV', 'ADJD', 'APPR', 'NE', 'ADV'), 'start right siblings': ['ADVX'], 'end left siblings': ['ADVX', 'ADJX'], 'auto preterminal span': (0, 8), 'adding node already present': False, 'movers': ['PX'], 'old_parent': 'NF', 'added and moved': True, 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'ADJX'}
(TOP
	(TURN
		(SIMPX
			(VF ice)
			(LK ist)
			(MF ja relativ zugig ab munchen)
			[01;31m(NF[00m
				(ADVX
					(ADV dann))[01;31m)[00m)))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['VF', 'LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('NE', 'VAFIN', 'ADV', 'ADV', 'ADJD', 'APPR', 'NE', 'ADV'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (0, 8), 'span': (7, 8), 'left siblings': ['VF', 'LK', 'MF'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ice ist ja relativ zugig ab munchen dann)

Sentence 158:
0 Initial errors
0 on fringe, 0 iterations

Sentence 159:
0 Initial errors
0 on fringe, 0 iterations

Sentence 160:
0 Initial errors
0 on fringe, 0 iterations

Sentence 161:
1 Initial errors
0 on fringe, 1 iterations
1 Error:UNSET add
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM also)
		(SIMPX
			(LV ein hotel in hannover fur hundert neunzehn mark)
			[01;36m(SIMPX[00m
				(VF das)
				(LK mus)
				(MF schon eine absteige)
				(VC sein)[01;36m)[00m)
		(DM oder)))
Step:UNSET add
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['LV', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VMFIN', 'ADV', 'ART', 'NN', 'VAINF'), 'right siblings': [], 'left siblings': [(LV (NX (NX (NX (ART ein) (NN hotel)) (PX (APPR in) (NX (NE hannover)))) (PX (APPR fur) (NX (ADJX (CARD hundert) (CARD neunzehn)) (NN mark)))))], 'auto preterminal span': (9, 15), 'span': (9, 15), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP also ein hotel in hannover fur hundert neunzehn mark das mus schon eine absteige sein oder)

Sentence 162:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Different label
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;36m(NX[00m [01;31m(DM[00m
			(ADVX immer)
			(ADVX doch)[01;31m)[00m[01;36m)[00m
		(DM oder)))
Step:Different label
{'family': ['NX', 'DM'], 'auto preterminal span': (0, 2), 'span': (0, 2), 'subtrees': ['ADVX', 'ADVX'], 'parent': 'TURN', 'over_word': False, 'auto preterminals': ('ADV', 'ADV'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('DM', 'NX')}
(TOP immer doch oder)

Sentence 163:
6 Initial errors
0 on fringe, 2 iterations
5 Error:PP Attachment
1 Error:UNSET add
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SIMPX[00m
	(TOP [01;33m(VF (PX[00m
		(TURN
			(PX vor allem)
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(PX
						(APPR in)
						(NX munchen))[01;31m)[00m [01;33mPX) VF)[00m
				[01;36m(SIMPX[00m
					(LK haben)
					(MF wir eh alles)[01;36m)[00m[01;31m)[00m))[01;36m)[00m
Step:PP Attachment
{'new_parent': 'VF', 'new_family': ['PX', 'PX'], 'mover info': [('PX', (0, 2))], 'old_family': ['PX', 'SIMPX'], 'start left siblings': [], 'auto preterminals': ('APPR', 'PIS', 'APPR', 'NE', 'VAFIN', 'PPER', 'ADV', 'PIS'), 'start right siblings': ['SIMPX'], 'end left siblings': [], 'auto preterminal span': (0, 8), 'adding node already present': False, 'movers': ['PX'], 'old_parent': 'TURN', 'added and moved': True, 'end right siblings': ['PX'], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'SIMPX'}
(TOP
	(TURN
		(SIMPX
			(PX vor allem in munchen)
			[01;36m(SIMPX[00m
				(LK haben)
				(MF wir eh alles)[01;36m)[00m)))
Step:UNSET add
{'subtrees': ['LK', 'MF'], 'family': ['PX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'PPER', 'ADV', 'PIS'), 'right siblings': [], 'left siblings': [(PX (VF (PX (APPR vor) (NX (PIS allem))) (PX (APPR in) (NX (NE munchen)))))], 'auto preterminal span': (4, 8), 'span': (4, 8), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP vor allem in munchen haben wir eh alles)

Sentence 164:
0 Initial errors
0 on fringe, 0 iterations

Sentence 165:
0 Initial errors
0 on fringe, 0 iterations

Sentence 166:
0 Initial errors
0 on fringe, 0 iterations

Sentence 167:
0 Initial errors
0 on fringe, 0 iterations

Sentence 168:
0 Initial errors
0 on fringe, 0 iterations

Sentence 169:
0 Initial errors
0 on fringe, 0 iterations

Sentence 170:
0 Initial errors
0 on fringe, 0 iterations

Sentence 171:
0 Initial errors
0 on fringe, 0 iterations

Sentence 172:
8 Initial errors
0 on fringe, 8 iterations
1 Error:Single Word Phrase
1 Error:Single Word Phrase
1 Error:Unary
1 Error:Modifier Attachment
1 Error:Clause Attachment
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(P[00m
			(SIMPX konnen wir ruhig machen)
			[01;36m(ADVX[00m
				(KON denn)[01;36m)[00m
			[01;31m(SIMPX[00m
				(VF
					(SIMPX
						(C bis)
						(MF [01;33m(MF[00m
							(NX du)
							(ADVX immer)
							[01;31m(PX[00m
								(PX am flughafen) [01;33mMF)[00m
								[01;36m(VXINF[00m
									[01;36m(VC[00m
										(PROP drausen)[01;36m)[00m[01;36m)[00m[01;31m)[00m)
						(VC bist)))
				(LK ist)
				(MF
					(ADVX schon)
					[01;36m(ADVX[00m
						(NX die erste stunde)
						(ADVX vorbei)[01;36m)[00m)[01;31m)[00m[01;31m)[00m
		(SIMPX und mit dem ice ist es bequem)))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['SIMPX', 'ADVX', 'SIMPX'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON',), 'right siblings': [(SIMPX (VF (SIMPX (C (KOUS bis)) (MF (NX (PPER du)) (ADVX (ADV immer)) (PX (PX (APPRART am) (NX (NN flughafen))) (PROP drausen))) (VC (VXFIN (VAFIN bist))))) (LK (VXFIN (VAFIN ist))) (MF (ADVX (ADV schon)) (NX (ART die) (ADJX (ADJA erste)) (NN stunde)) (ADVX (ADV vorbei))))], 'left siblings': [(SIMPX (LK (VXFIN (VMFIN konnen))) (MF (NX (PPER wir)) (ADVX (ADV ruhig))) (VC (VXINF (VVINF machen))))], 'auto preterminal span': (4, 5), 'span': (4, 5), 'parent': 'P', 'label': 'ADVX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		[01;31m(P[00m
			(SIMPX konnen wir ruhig machen)
			(ADVX denn)
			[01;31m(SIMPX[00m
				(VF
					(SIMPX
						(C bis)
						(MF [01;33m(MF[00m
							(NX du)
							(ADVX immer)
							[01;31m(PX[00m
								(PX am flughafen) [01;33mMF)[00m
								[01;36m(VXINF[00m
									[01;36m(VC[00m
										(PROP drausen)[01;36m)[00m[01;36m)[00m[01;31m)[00m)
						(VC bist)))
				(LK ist)
				(MF
					(ADVX schon)
					[01;36m(ADVX[00m
						(NX die erste stunde)
						(ADVX vorbei)[01;36m)[00m)[01;31m)[00m[01;31m)[00m
		(SIMPX und mit dem ice ist es bequem)))
Step:Single Word Phrase
{'subtrees': ['PROP'], 'family': ['PX', 'VC'], 'over_word': True, 'over words': True, 'auto preterminals': ('PROP',), 'right siblings': [], 'left siblings': [(PX (APPRART am) (NX (NN flughafen)))], 'auto preterminal span': (10, 11), 'span': (10, 11), 'parent': 'PX', 'label': 'VC', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		[01;31m(P[00m
			(SIMPX konnen wir ruhig machen)
			(ADVX denn)
			[01;31m(SIMPX[00m
				(VF
					(SIMPX
						(C bis)
						(MF [01;33m(MF[00m
							(NX du)
							(ADVX immer)
							[01;31m(PX[00m
								(PX am flughafen) [01;33mMF)[00m
								[01;36m(VXINF[00m
									(VC
										(PROP drausen))[01;36m)[00m[01;31m)[00m)
						(VC bist)))
				(LK ist)
				(MF
					(ADVX schon)
					[01;36m(ADVX[00m
						(NX die erste stunde)
						(ADVX vorbei)[01;36m)[00m)[01;31m)[00m[01;31m)[00m
		(SIMPX und mit dem ice ist es bequem)))
Step:Unary
{'subtrees': ['VC'], 'family': ['PX', 'VXINF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PROP',), 'right siblings': [], 'left siblings': [(PX (APPRART am) (NX (NN flughafen)))], 'auto preterminal span': (10, 11), 'span': (10, 11), 'parent': 'PX', 'label': 'VXINF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		[01;31m(P[00m
			(SIMPX konnen wir ruhig machen)
			(ADVX denn)
			[01;31m(SIMPX[00m
				(VF
					(SIMPX
						(C bis)
						(MF [01;33m(MF[00m
							(NX du)
							(ADVX immer)
							[01;31m(PX[00m
								(PX am flughafen) [01;33mMF)[00m
								(VXINF drausen)[01;31m)[00m)
						(VC bist)))
				(LK ist)
				(MF
					(ADVX schon)
					[01;36m(ADVX[00m
						(NX die erste stunde)
						(ADVX vorbei)[01;36m)[00m)[01;31m)[00m[01;31m)[00m
		(SIMPX und mit dem ice ist es bequem)))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADVX'], 'family': ['ADVX', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'ADJA', 'NN', 'ADV'), 'right siblings': [], 'left siblings': [(ADVX (ADV schon))], 'auto preterminal span': (14, 18), 'span': (14, 18), 'parent': 'MF', 'label': 'ADVX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		[01;31m(P[00m
			(SIMPX konnen wir ruhig machen)
			(ADVX denn)
			[01;31m(SIMPX[00m
				(VF
					(SIMPX
						(C bis)
						(MF [01;33m(MF[00m
							(NX du)
							(ADVX immer)
							[01;31m(PX[00m
								(PX am flughafen) [01;33mMF)[00m
								(VXINF drausen)[01;31m)[00m)
						(VC bist)))
				(LK ist)
				(MF schon die erste stunde vorbei)[01;31m)[00m[01;31m)[00m
		(SIMPX und mit dem ice ist es bequem)))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'ADVX', 'SIMPX'], 'family': ['P', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VMFIN', 'PPER', 'ADV', 'VVINF', 'KON', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'PROP', 'VAFIN', 'VAFIN', 'ADV', 'ART', 'ADJA', 'NN', 'ADV', 'KON', 'APPR', 'ART', 'NE', 'VAFIN', 'PPER', 'ADJD'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 25), 'span': (0, 18), 'left siblings': [], 'label': 'P', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX konnen wir ruhig machen)
		(ADVX denn)
		[01;31m(SIMPX[00m
			(VF
				(SIMPX
					(C bis)
					(MF [01;33m(MF[00m
						(NX du)
						(ADVX immer)
						[01;31m(PX[00m
							(PX am flughafen) [01;33mMF)[00m
							(VXINF drausen)[01;31m)[00m)
					(VC bist)))
			(LK ist)
			(MF schon die erste stunde vorbei)[01;31m)[00m
		(SIMPX und mit dem ice ist es bequem)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['SIMPX', 'ADVX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VMFIN', 'PPER', 'ADV', 'VVINF', 'KON', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'PROP', 'VAFIN', 'VAFIN', 'ADV', 'ART', 'ADJA', 'NN', 'ADV', 'KON', 'APPR', 'ART', 'NE', 'VAFIN', 'PPER', 'ADJD'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 25), 'span': (5, 18), 'left siblings': ['SIMPX', 'ADVX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX konnen wir ruhig machen)
		(ADVX denn)
		(VF
			(SIMPX
				(C bis)
				(MF [01;33m(MF[00m
					(NX du)
					(ADVX immer)
					[01;31m(PX[00m
						(PX am flughafen) [01;33mMF)[00m
						(VXINF drausen)[01;31m)[00m)
				(VC bist)))
		(LK ist)
		(MF schon die erste stunde vorbei)
		(SIMPX und mit dem ice ist es bequem)))
Step:UNSET remove
{'subtrees': ['PX', 'VXINF'], 'family': ['NX', 'ADVX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV', 'APPRART', 'NN', 'PROP'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (6, 11), 'span': (8, 11), 'left siblings': ['NX', 'ADVX'], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX konnen wir ruhig machen)
		(ADVX denn)
		(VF
			(SIMPX
				(C bis)
				(MF
					[01;36m(MF[00m
						(NX du)
						(ADVX immer)
						(PX am flughafen)[01;36m)[00m
					(VXINF drausen))
				(VC bist)))
		(LK ist)
		(MF schon die erste stunde vorbei)
		(SIMPX und mit dem ice ist es bequem)))
Step:PP Attachment
{'subtrees': ['NX', 'ADVX', 'PX'], 'family': ['MF', 'VXINF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV', 'APPRART', 'NN'), 'right siblings': [(VXINF (VC (PROP drausen)))], 'left siblings': [], 'auto preterminal span': (6, 10), 'span': (6, 10), 'parent': 'MF', 'label': 'MF', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP konnen wir ruhig machen denn bis du immer am flughafen drausen bist ist schon die erste stunde vorbei und mit dem ice ist es bequem)

Sentence 173:
10 Initial errors
0 on fringe, 6 iterations
2 Error:Different label
2 Error:Single Word Phrase
2 Error:Different label
2 Error:UNSET move
1 Error:Single Word Phrase
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM
			[01;31m(ADVX[00m
				(ADV also)[01;31m)[00m)
		[01;31m(SIMPX[00m
			[01;36m(DM[00m [01;31m(VF[00m
				(ADVX
					(ADV also))[01;31m)[00m[01;36m)[00m
			[01;36m(SIMPX[00m
				(LK wurden)
				(MF wir)
				(VC sagen)
				(NF
					(SIMPX
						(VF wir)
						(LK konnten)
						[01;36m(NX[00m
							(MF
								[01;31m(ADJX[00m
									[01;36m(ADVX[00m [01;31m(ADJX[00m
										(ADJD stundlich)[01;31m)[00m[01;36m)[00m
									[01;31m(NX[00m
										(NX vier uhr)
										(ADJX dreiundvierzig)[01;31m)[00m[01;31m)[00m)[01;36m)[00m))[01;36m)[00m[01;31m)[00m
		(SIMPX ich wurde sagen acht uhr dreiundvierzig)))
Step:Different label
{'family': ['DM', 'LK', 'MF', 'VC', 'NF'], 'auto preterminal span': (1, 2), 'span': (1, 2), 'subtrees': ['ADVX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('ADV',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('VF', 'DM')}
(TOP
	(TURN
		(DM
			[01;31m(ADVX[00m
				(ADV also)[01;31m)[00m)
		[01;31m(SIMPX[00m
			(DM also)
			[01;36m(SIMPX[00m
				(LK wurden)
				(MF wir)
				(VC sagen)
				(NF
					(SIMPX
						(VF wir)
						(LK konnten)
						[01;36m(NX[00m
							(MF
								[01;31m(ADJX[00m
									[01;36m(ADVX[00m [01;31m(ADJX[00m
										(ADJD stundlich)[01;31m)[00m[01;36m)[00m
									[01;31m(NX[00m
										(NX vier uhr)
										(ADJX dreiundvierzig)[01;31m)[00m[01;31m)[00m)[01;36m)[00m))[01;36m)[00m[01;31m)[00m
		(SIMPX ich wurde sagen acht uhr dreiundvierzig)))
Step:Single Word Phrase
{'family': ['ADVX', 'NX'], 'auto preterminal span': (7, 8), 'span': (7, 8), 'subtrees': ['ADJD'], 'parent': 'ADJX', 'over_word': True, 'auto preterminals': ('ADJD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'ADVX')}
(TOP
	(TURN
		(DM
			[01;31m(ADVX[00m
				(ADV also)[01;31m)[00m)
		[01;31m(SIMPX[00m
			(DM also)
			[01;36m(SIMPX[00m
				(LK wurden)
				(MF wir)
				(VC sagen)
				(NF
					(SIMPX
						(VF wir)
						(LK konnten)
						[01;36m(NX[00m
							(MF
								[01;31m(ADJX[00m
									(ADVX stundlich)
									[01;31m(NX[00m
										(NX vier uhr)
										(ADJX dreiundvierzig)[01;31m)[00m[01;31m)[00m)[01;36m)[00m))[01;36m)[00m[01;31m)[00m
		(SIMPX ich wurde sagen acht uhr dreiundvierzig)))
Step:Different label
{'family': ['NX'], 'auto preterminal span': (7, 11), 'span': (7, 11), 'subtrees': ['ADVX', 'NX'], 'parent': 'MF', 'over_word': False, 'auto preterminals': ('ADJD', 'CARD', 'NN', 'CARD'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('ADJX', 'NX')}
(TOP
	(TURN
		(DM
			[01;31m(ADVX[00m
				(ADV also)[01;31m)[00m)
		[01;31m(SIMPX[00m
			(DM also)
			[01;36m(SIMPX[00m
				(LK wurden)
				(MF wir)
				(VC sagen)
				(NF
					(SIMPX
						(VF wir)
						(LK konnten)
						(MF
							(NX
								(ADVX stundlich)
								[01;31m(NX[00m
									(NX vier uhr)
									(ADJX dreiundvierzig)[01;31m)[00m))))[01;36m)[00m[01;31m)[00m
		(SIMPX ich wurde sagen acht uhr dreiundvierzig)))
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['DM', 'DM', 'SIMPX', 'SIMPX'], 'mover info': [('DM', (1, 2))], 'old_family': ['DM', 'LK', 'MF', 'VC', 'NF'], 'start left siblings': [], 'auto preterminals': ('ADV', 'ADV', 'VAFIN', 'PPER', 'VVINF', 'PPER', 'VMFIN', 'ADJD', 'CARD', 'NN', 'CARD', 'PPER', 'VAFIN', 'VVINF', 'CARD', 'NN', 'CARD'), 'start right siblings': ['LK', 'MF', 'VC', 'NF'], 'end left siblings': ['DM'], 'auto preterminal span': (0, 17), 'movers': ['DM'], 'old_parent': 'SIMPX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['SIMPX', 'SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM
			[01;31m(ADVX[00m
				(ADV also)[01;31m)[00m)
		(DM also)
		(SIMPX
			(LK wurden)
			(MF wir)
			(VC sagen)
			(NF
				(SIMPX
					(VF wir)
					(LK konnten)
					(MF
						(NX
							(ADVX stundlich)
							[01;31m(NX[00m
								(NX vier uhr)
								(ADJX dreiundvierzig)[01;31m)[00m)))))
		(SIMPX ich wurde sagen acht uhr dreiundvierzig)))
Step:Single Word Phrase
{'subtrees': ['ADV'], 'family': ['ADVX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADV',), 'right siblings': [], 'parent': 'DM', 'auto preterminal span': (0, 1), 'span': (0, 1), 'left siblings': [], 'label': 'ADVX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(DM also)
		(SIMPX
			(LK wurden)
			(MF wir)
			(VC sagen)
			(NF
				(SIMPX
					(VF wir)
					(LK konnten)
					(MF
						(NX
							(ADVX stundlich)
							[01;31m(NX[00m
								(NX vier uhr)
								(ADJX dreiundvierzig)[01;31m)[00m)))))
		(SIMPX ich wurde sagen acht uhr dreiundvierzig)))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADJX'], 'family': ['ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJD', 'CARD', 'NN', 'CARD'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (7, 11), 'span': (8, 11), 'left siblings': ['ADVX'], 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP also also wurden wir sagen wir konnten stundlich vier uhr dreiundvierzig ich wurde sagen acht uhr dreiundvierzig)

Sentence 174:
0 Initial errors
0 on fringe, 0 iterations

Sentence 175:
0 Initial errors
0 on fringe, 0 iterations

Sentence 176:
0 Initial errors
0 on fringe, 0 iterations

Sentence 177:
0 Initial errors
0 on fringe, 0 iterations

Sentence 178:
1 Initial errors
0 on fringe, 1 iterations
1 Error:UNSET add
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(NX
			(NX hotel royal)
			[01;36m(NX[00m
				(NX schloshotel)
				(KON und)
				(NX hotel amgeorgengarten)[01;36m)[00m)))
Step:UNSET add
{'subtrees': ['NX', 'KON', 'NX'], 'family': ['NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NE', 'KON', 'NN', 'NE'), 'right siblings': [], 'left siblings': [(NX (NX (NN hotel)) (NX (NE royal)))], 'auto preterminal span': (2, 6), 'span': (2, 6), 'parent': 'NX', 'label': 'NX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP hotel royal schloshotel und hotel amgeorgengarten)

Sentence 179:
0 Initial errors
0 on fringe, 0 iterations

Sentence 180:
0 Initial errors
0 on fringe, 0 iterations

Sentence 181:
0 Initial errors
0 on fringe, 0 iterations

Sentence 182:
8 Initial errors
0 on fringe, 6 iterations
2 Error:Different label
2 Error:Clause Attachment
1 Error:UNSET remove
1 Error:Clause Attachment
1 Error:UNSET remove
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX wir konnten mal kucken ob irgendwas im theater lauft)
		[01;31m(SIMPX[00m
			(KOORD aber)
			(VF eigentlich)
			(LK ist)
			[01;31m(MF[00m [01;33m(MF[00m
				(NX das)
				(ADVX doch)[01;31m)[00m
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					[01;36m(NX[00m [01;31m(MF[00m
						(NX eulen)
						(PX nach athen)[01;31m)[00m [01;33mMF)[00m[01;36m)[00m
					(VC tragen)[01;31m)[00m
				[01;36m(NF[00m
					(SIMPX
						(C wenn)
						(FKOORD wir in hannover ins theater gehen und in munchen alles vor der haustur haben))[01;36m)[00m[01;31m)[00m[01;31m)[00m
		(DM oder)))
Step:Different label
{'family': ['NX', 'VC'], 'auto preterminal span': (14, 17), 'span': (14, 17), 'subtrees': ['NX', 'PX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('NN', 'APPR', 'NE'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('MF', 'NX')}
(TOP
	(TURN
		(SIMPX wir konnten mal kucken ob irgendwas im theater lauft)
		[01;31m(SIMPX[00m
			(KOORD aber)
			(VF eigentlich)
			(LK ist)
			[01;31m(MF[00m [01;33m(MF[00m
				(NX das)
				(ADVX doch)[01;31m)[00m
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					(NX eulen nach athen) [01;33mMF)[00m
					(VC tragen)[01;31m)[00m
				[01;36m(NF[00m
					(SIMPX
						(C wenn)
						(FKOORD wir in hannover ins theater gehen und in munchen alles vor der haustur haben))[01;36m)[00m[01;31m)[00m[01;31m)[00m
		(DM oder)))
Step:Clause Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'ADVX', 'SIMPX'], 'mover info': [('SIMPX', (14, 18))], 'old_family': ['SIMPX', 'SIMPX'], 'start left siblings': [], 'auto preterminals': ('KON', 'ADV', 'VAFIN', 'PDS', 'ADV', 'NN', 'APPR', 'NE', 'VVINF', 'KOUS', 'PPER', 'APPR', 'NE', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPR', 'NE', 'PIS', 'APPR', 'ART', 'NN', 'VAFIN'), 'start right siblings': ['SIMPX'], 'end left siblings': ['NX', 'ADVX'], 'auto preterminal span': (9, 33), 'movers': ['SIMPX'], 'old_parent': 'NF', 'end right siblings': [], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(SIMPX wir konnten mal kucken ob irgendwas im theater lauft)
		[01;31m(SIMPX[00m
			(KOORD aber)
			(VF eigentlich)
			(LK ist)
			[01;31m(MF[00m [01;33m(MF[00m
				(NX das)
				(ADVX doch)
				[01;31m(SIMPX[00m
					(NX eulen nach athen) [01;33mMF)[00m
					(VC tragen)[01;31m)[00m[01;31m)[00m
			(NF wenn wir in hannover ins theater gehen und in munchen alles vor der haustur haben)[01;31m)[00m
		(DM oder)))
Step:UNSET remove
{'subtrees': ['KOORD', 'VF', 'LK', 'MF', 'NF'], 'family': ['SIMPX', 'SIMPX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VMFIN', 'ADV', 'VVINF', 'KOUS', 'PIS', 'APPRART', 'NN', 'VVFIN', 'KON', 'ADV', 'VAFIN', 'PDS', 'ADV', 'NN', 'APPR', 'NE', 'VVINF', 'KOUS', 'PPER', 'APPR', 'NE', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPR', 'NE', 'PIS', 'APPR', 'ART', 'NN', 'VAFIN', 'ITJ'), 'right siblings': ['DM'], 'parent': 'TURN', 'auto preterminal span': (0, 34), 'span': (9, 33), 'left siblings': ['SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX wir konnten mal kucken ob irgendwas im theater lauft)
		(KOORD aber)
		(VF eigentlich)
		(LK ist)
		[01;31m(MF[00m [01;33m(MF[00m
			(NX das)
			(ADVX doch)
			[01;31m(SIMPX[00m
				(NX eulen nach athen) [01;33mMF)[00m
				(VC tragen)[01;31m)[00m[01;31m)[00m
		(NF wenn wir in hannover ins theater gehen und in munchen alles vor der haustur haben)
		(DM oder)))
Step:Clause Attachment
{'subtrees': ['NX', 'ADVX', 'SIMPX'], 'family': ['SIMPX', 'KOORD', 'VF', 'LK', 'MF', 'NF', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VMFIN', 'ADV', 'VVINF', 'KOUS', 'PIS', 'APPRART', 'NN', 'VVFIN', 'KON', 'ADV', 'VAFIN', 'PDS', 'ADV', 'NN', 'APPR', 'NE', 'VVINF', 'KOUS', 'PPER', 'APPR', 'NE', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPR', 'NE', 'PIS', 'APPR', 'ART', 'NN', 'VAFIN', 'ITJ'), 'right siblings': ['NF', 'DM'], 'parent': 'TURN', 'auto preterminal span': (0, 34), 'span': (12, 18), 'left siblings': ['SIMPX', 'KOORD', 'VF', 'LK'], 'label': 'MF', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX wir konnten mal kucken ob irgendwas im theater lauft)
		(KOORD aber)
		(VF eigentlich)
		(LK ist)
		[01;33m(MF[00m (NX das)
		(ADVX doch)
		[01;31m(SIMPX[00m
			(NX eulen nach athen) [01;33mMF)[00m
			(VC tragen)[01;31m)[00m
		(NF wenn wir in hannover ins theater gehen und in munchen alles vor der haustur haben)
		(DM oder)))
Step:UNSET remove
{'subtrees': ['NX', 'VC'], 'family': ['SIMPX', 'KOORD', 'VF', 'LK', 'NX', 'ADVX', 'SIMPX', 'NF', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VMFIN', 'ADV', 'VVINF', 'KOUS', 'PIS', 'APPRART', 'NN', 'VVFIN', 'KON', 'ADV', 'VAFIN', 'PDS', 'ADV', 'NN', 'APPR', 'NE', 'VVINF', 'KOUS', 'PPER', 'APPR', 'NE', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPR', 'NE', 'PIS', 'APPR', 'ART', 'NN', 'VAFIN', 'ITJ'), 'right siblings': ['NF', 'DM'], 'parent': 'TURN', 'auto preterminal span': (0, 34), 'span': (14, 18), 'left siblings': ['SIMPX', 'KOORD', 'VF', 'LK', 'NX', 'ADVX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX wir konnten mal kucken ob irgendwas im theater lauft)
		(KOORD aber)
		(VF eigentlich)
		(LK ist)
		[01;36m(MF[00m
			(NX das)
			(ADVX doch)
			(NX eulen nach athen)[01;36m)[00m
		(VC tragen)
		(NF wenn wir in hannover ins theater gehen und in munchen alles vor der haustur haben)
		(DM oder)))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADVX', 'NX'], 'family': ['SIMPX', 'KOORD', 'VF', 'LK', 'MF', 'VC', 'NF', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'ADV', 'NN', 'APPR', 'NE'), 'right siblings': [(VC (VXINF (VVINF tragen))), (NF (SIMPX (C (KOUS wenn)) (FKOORD (MVC (MF (NX (PPER wir)) (PX (APPR in) (NX (NE hannover))) (PX (APPRART ins) (NX (NN theater)))) (VC (VXFIN (VVFIN gehen)))) (KON und) (MVC (MF (PX (APPR in) (NX (NE munchen))) (NX (PIS alles)) (PX (APPR vor) (NX (ART der) (NN haustur)))) (VC (VXFIN (VAFIN haben))))))), (DM (ITJ oder))], 'left siblings': [(SIMPX (VF (NX (PPER wir))) (LK (VXFIN (VMFIN konnten))) (MF (ADVX (ADV mal))) (VC (VXINF (VVINF kucken))) (NF (SIMPX (C (KOUS ob)) (MF (NX (PIS irgendwas)) (PX (APPRART im) (NX (NN theater)))) (VC (VXFIN (VVFIN lauft)))))), (KOORD (KON aber)), (VF (ADVX (ADV eigentlich))), (LK (VXFIN (VAFIN ist)))], 'auto preterminal span': (12, 17), 'span': (12, 17), 'parent': 'TURN', 'label': 'MF', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP wir konnten mal kucken ob irgendwas im theater lauft aber eigentlich ist das doch eulen nach athen tragen wenn wir in hannover ins theater gehen und in munchen alles vor der haustur haben oder)

Sentence 183:
0 Initial errors
0 on fringe, 0 iterations

Sentence 184:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Different label
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(ADJX[00m
	(TOP
		(TURN
			[01;31m(ADVX[00m
				(ADVX nicht)
				(SIMPX das ich wuste)[01;31m)[00m))[01;36m)[00m
Step:Different label
{'family': ['ADJX'], 'auto preterminal span': (0, 4), 'span': (0, 4), 'subtrees': ['ADVX', 'SIMPX'], 'parent': 'TURN', 'over_word': False, 'auto preterminals': ('PTKNEG', 'KOUS', 'PPER', 'VVFIN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('ADVX', 'ADJX')}
(TOP nicht das ich wuste)

Sentence 185:
4 Initial errors
0 on fringe, 4 iterations
1 Error:Single Word Phrase
1 Error:Single Word Phrase
1 Error:Modifier Attachment
1 Error:UNSET add
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(MF
				(ADVX dann)
				(ADVX eben)
				(NX
					[01;31m(ADJX[00m
						[01;31m(ADJX[00m
							(CARD ein)[01;31m)[00m
						(KON oder)
						[01;33m(NX[00m (ADJX zwei)[01;31m)[00m
					(NN nachte))) [01;33mNX)[00m
			(VC buchen))))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['KOORD', 'MF', 'VC'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON', 'ADV', 'ADV', 'CARD', 'KON', 'CARD', 'NN', 'VVINF'), 'right siblings': ['MF', 'VC'], 'parent': 'SIMPX', 'auto preterminal span': (0, 8), 'span': (0, 1), 'left siblings': [], 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX
			(KON und)
			(MF
				(ADVX dann)
				(ADVX eben)
				(NX
					[01;31m(ADJX[00m
						[01;31m(ADJX[00m
							(CARD ein)[01;31m)[00m
						(KON oder)
						[01;33m(NX[00m (ADJX zwei)[01;31m)[00m
					(NN nachte))) [01;33mNX)[00m
			(VC buchen))))
Step:Single Word Phrase
{'subtrees': ['CARD'], 'family': ['ADJX', 'KON', 'ADJX'], 'over_word': True, 'over words': True, 'auto preterminals': ('CARD', 'KON', 'CARD'), 'right siblings': ['KON', 'ADJX'], 'parent': 'ADJX', 'auto preterminal span': (3, 6), 'span': (3, 4), 'left siblings': [], 'label': 'ADJX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX
			(KON und)
			(MF
				(ADVX dann)
				(ADVX eben)
				(NX
					[01;31m(ADJX[00m
						(CARD ein)
						(KON oder)
						[01;33m(NX[00m (ADJX zwei)[01;31m)[00m
					(NN nachte))) [01;33mNX)[00m
			(VC buchen))))
Step:Modifier Attachment
{'subtrees': ['CARD', 'KON', 'ADJX'], 'family': ['ADJX', 'NN'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'KON', 'CARD', 'NN'), 'right siblings': ['NN'], 'parent': 'NX', 'auto preterminal span': (3, 7), 'span': (3, 6), 'left siblings': [], 'label': 'ADJX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX
			(KON und)
			(MF
				(ADVX dann)
				(ADVX eben)
				(NX
					(CARD ein)
					(KON oder)
					[01;36m(NX[00m
						(ADJX zwei)
						(NN nachte)[01;36m)[00m))
			(VC buchen))))
Step:UNSET add
{'subtrees': ['ADJX', 'NN'], 'family': ['CARD', 'KON', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'NN'), 'right siblings': [], 'left siblings': [(CARD ein), (KON oder)], 'auto preterminal span': (5, 7), 'span': (5, 7), 'parent': 'NX', 'label': 'NX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP und dann eben ein oder zwei nachte buchen)

Sentence 186:
0 Initial errors
0 on fringe, 0 iterations

Sentence 187:
0 Initial errors
0 on fringe, 0 iterations

Sentence 188:
13 Initial errors
0 on fringe, 4 iterations
7 Error:NP Attachment
3 Error:UNSET move
2 Error:Single Word Phrase
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM gut)
		(ADVX dann)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK schlage)
			(MF ich)
			(VC vor)
			[01;36m(SIMPX[00m
				[01;36m(NF[00m
					[01;33m(VF (NX[00m (NX mitte)
					(APPR [01;33m(PX (PX[00m bis)
					[01;31m(NF[00m
						[01;31m(SIMPX[00m
							[01;31m(VF[00m
								[01;31m(PX[00m
									[01;36m(NX[00m [01;31m(ADVX[00m
										(ADV spatestens)[01;31m)[00m [01;33mPX)[00m[01;36m)[00m
									(APPR bis)
									(NX mitte nachster woche)[01;31m)[00m[01;31m)[00m [01;33mPX) NX) VF)[00m
							(LK haben)
							(MF wir sie)
							(VC informiert)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;31m)[00m
		(SIMPX das muste ja dann auch noch reichen wenn wir erst im august)))
Step:NP Attachment
{'new_parent': 'VF', 'new_family': ['NX', 'APPR', 'PX'], 'mover info': [('NX', (6, 7)), ('APPR', (7, 8))], 'old_family': ['VF', 'LK', 'MF', 'VC', 'NX', 'APPR', 'NF'], 'start left siblings': ['VF', 'LK', 'MF', 'VC'], 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'PTKVZ', 'NN', 'APPR', 'ADV', 'APPR', 'NN', 'ADJA', 'NN', 'VAFIN', 'PPER', 'PPER', 'VVPP'), 'start right siblings': ['NF'], 'end left siblings': [], 'auto preterminal span': (2, 17), 'adding node already present': False, 'movers': ['NX', 'APPR'], 'old_parent': 'SIMPX', 'added and moved': True, 'end right siblings': ['PX'], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(DM gut)
		(ADVX dann)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK schlage)
			(MF ich)
			(VC vor)
			(NF
				(SIMPX
					(NX
						(VF
							(NX mitte)
							[01;36m(PX[00m
								(APPR [01;33m(PX[00m bis)
								[01;31m(PX[00m
									[01;36m(NX[00m [01;31m(ADVX[00m
										(ADV spatestens)[01;31m)[00m [01;33mPX)[00m[01;36m)[00m
									(APPR bis)
									(NX mitte nachster woche)[01;31m)[00m[01;36m)[00m))
					(LK haben)
					(MF wir sie)
					(VC informiert)))[01;31m)[00m
		(SIMPX das muste ja dann auch noch reichen wenn wir erst im august)))
Step:UNSET move
{'new_parent': 'PX', 'new_family': ['APPR', 'ADVX', 'APPR', 'NX'], 'mover info': [('APPR', (7, 8))], 'old_family': ['NX', 'APPR', 'PX'], 'start left siblings': ['NX'], 'auto preterminals': ('NN', 'APPR', 'ADV', 'APPR', 'NN', 'ADJA', 'NN'), 'start right siblings': ['PX'], 'end left siblings': [], 'auto preterminal span': (6, 13), 'adding node already present': False, 'movers': ['APPR'], 'old_parent': 'VF', 'POS confusion': ('APPR', 'APPR'), 'added and moved': True, 'end right siblings': ['ADVX', 'APPR', 'NX'], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(DM gut)
		(ADVX dann)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK schlage)
			(MF ich)
			(VC vor)
			(NF
				(SIMPX
					(NX
						(VF
							(NX mitte)
							(PX
								(PX
									(APPR bis)
									[01;36m(NX[00m [01;31m(ADVX[00m
										(ADV spatestens)[01;31m)[00m[01;36m)[00m)
								(APPR bis)
								(NX mitte nachster woche))))
					(LK haben)
					(MF wir sie)
					(VC informiert)))[01;31m)[00m
		(SIMPX das muste ja dann auch noch reichen wenn wir erst im august)))
Step:Single Word Phrase
{'family': ['APPR', 'NX'], 'auto preterminal span': (8, 9), 'span': (8, 9), 'subtrees': ['ADV'], 'parent': 'PX', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'NX')}
(TOP
	(TURN
		(DM gut)
		(ADVX dann)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK schlage)
			(MF ich)
			(VC vor)
			(NF mitte bis spatestens bis mitte nachster woche haben wir sie informiert)[01;31m)[00m
		(SIMPX das muste ja dann auch noch reichen wenn wir erst im august)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'VC', 'NF'], 'family': ['DM', 'ADVX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'ADV', 'VVFIN', 'PPER', 'PTKVZ', 'NN', 'APPR', 'ADV', 'APPR', 'NN', 'ADJA', 'NN', 'VAFIN', 'PPER', 'PPER', 'VVPP', 'PDS', 'VMFIN', 'ADV', 'ADV', 'ADV', 'ADV', 'VVINF', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 29), 'span': (2, 17), 'left siblings': ['DM', 'ADVX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP gut dann dann schlage ich vor mitte bis spatestens bis mitte nachster woche haben wir sie informiert das muste ja dann auch noch reichen wenn wir erst im august)

Sentence 189:
0 Initial errors
0 on fringe, 0 iterations

Sentence 190:
0 Initial errors
0 on fringe, 0 iterations

Sentence 191:
0 Initial errors
0 on fringe, 0 iterations

Sentence 192:
0 Initial errors
0 on fringe, 0 iterations

Sentence 193:
0 Initial errors
0 on fringe, 0 iterations

Sentence 194:
0 Initial errors
0 on fringe, 0 iterations

Sentence 195:
0 Initial errors
0 on fringe, 0 iterations

Sentence 196:
0 Initial errors
0 on fringe, 0 iterations

Sentence 197:
0 Initial errors
0 on fringe, 0 iterations

Sentence 198:
7 Initial errors
0 on fringe, 6 iterations
1 Error:Co-ordination
1 Error:Clause Attachment
1 Error:Unary
2 Error:UNSET move
1 Error:Single Word Phrase
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM gut)
		[01;31m(P[00m [01;33m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF dann)
				(LK gibt)
				(MF es auch hervorragende zugverbindungen)
				[01;31m(NF[00m
					[01;31m(R[00m
						(C die)
						(MF
							(ADJX
								[01;31m(ADJX[00m
									(ADJD stundlich)[01;31m)[00m
								(PX ab vier uhr dreiundvierzig)))
						(VC bestehen) [01;33mSIMPX)[00m
						[01;31m(NF[00m
							(SIMPX
								(C wie)
								(MF ich hier grade)
								(VC lese))[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
			(KON denn)
			(SIMPX ich habe den fahrplan vor mir liegen)[01;31m)[00m))
Step:Co-ordination
{'subtrees': ['VF', 'LK', 'MF', 'NF'], 'family': ['SIMPX', 'KON', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'ADV', 'ADJA', 'NN', 'PRELS', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'VVFIN', 'KOUS', 'PPER', 'ADV', 'ADV', 'VVFIN', 'KON', 'PPER', 'VAFIN', 'ART', 'NN', 'APPR', 'PRF', 'VVINF'), 'right siblings': ['KON', 'SIMPX'], 'parent': 'P', 'auto preterminal span': (1, 27), 'span': (1, 19), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'Co-ordination', 'type': 'remove'}
(TOP
	(TURN
		(DM gut)
		[01;31m(P[00m [01;33m(SIMPX[00m
			(VF dann)
			(LK gibt)
			(MF es auch hervorragende zugverbindungen)
			[01;31m(NF[00m
				[01;31m(R[00m
					(C die)
					(MF
						(ADJX
							[01;31m(ADJX[00m
								(ADJD stundlich)[01;31m)[00m
							(PX ab vier uhr dreiundvierzig)))
					(VC bestehen) [01;33mSIMPX)[00m
					[01;31m(NF[00m
						(SIMPX
							(C wie)
							(MF ich hier grade)
							(VC lese))[01;31m)[00m[01;31m)[00m[01;31m)[00m
			(KON denn)
			(SIMPX ich habe den fahrplan vor mir liegen)[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['VF', 'LK', 'MF', 'NF', 'KON', 'SIMPX'], 'family': ['DM', 'P'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'VVFIN', 'PPER', 'ADV', 'ADJA', 'NN', 'PRELS', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'VVFIN', 'KOUS', 'PPER', 'ADV', 'ADV', 'VVFIN', 'KON', 'PPER', 'VAFIN', 'ART', 'NN', 'APPR', 'PRF', 'VVINF'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 27), 'span': (1, 27), 'left siblings': ['DM'], 'label': 'P', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM gut)
		[01;33m(SIMPX[00m (VF dann)
		(LK gibt)
		(MF es auch hervorragende zugverbindungen)
		[01;31m(NF[00m
			[01;31m(R[00m
				(C die)
				(MF
					(ADJX
						[01;31m(ADJX[00m
							(ADJD stundlich)[01;31m)[00m
						(PX ab vier uhr dreiundvierzig)))
				(VC bestehen) [01;33mSIMPX)[00m
				[01;31m(NF[00m
					(SIMPX
						(C wie)
						(MF ich hier grade)
						(VC lese))[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(KON denn)
		(SIMPX ich habe den fahrplan vor mir liegen)))
Step:Unary
{'subtrees': ['C', 'MF', 'VC', 'NF'], 'family': ['R'], 'over_word': False, 'over words': False, 'auto preterminals': ('PRELS', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'VVFIN', 'KOUS', 'PPER', 'ADV', 'ADV', 'VVFIN'), 'right siblings': [], 'parent': 'NF', 'auto preterminal span': (7, 19), 'span': (7, 19), 'left siblings': [], 'label': 'R', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM gut)
		[01;33m(SIMPX[00m (VF dann)
		(LK gibt)
		(MF es auch hervorragende zugverbindungen)
		[01;31m(NF[00m
			(C die)
			(MF
				(ADJX
					[01;31m(ADJX[00m
						(ADJD stundlich)[01;31m)[00m
					(PX ab vier uhr dreiundvierzig)))
			(VC bestehen) [01;33mSIMPX)[00m
			[01;31m(NF[00m
				(SIMPX
					(C wie)
					(MF ich hier grade)
					(VC lese))[01;31m)[00m[01;31m)[00m
		(KON denn)
		(SIMPX ich habe den fahrplan vor mir liegen)))
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['DM', 'VF', 'LK', 'MF', 'C', 'MF', 'VC', 'NF', 'KON', 'SIMPX'], 'mover info': [('C', (7, 8)), ('MF', (8, 13)), ('VC', (13, 14))], 'old_family': ['C', 'MF', 'VC', 'NF'], 'start left siblings': [], 'auto preterminals': ('ITJ', 'ADV', 'VVFIN', 'PPER', 'ADV', 'ADJA', 'NN', 'PRELS', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'VVFIN', 'KOUS', 'PPER', 'ADV', 'ADV', 'VVFIN', 'KON', 'PPER', 'VAFIN', 'ART', 'NN', 'APPR', 'PRF', 'VVINF'), 'start right siblings': ['NF'], 'end left siblings': ['DM', 'VF', 'LK', 'MF'], 'auto preterminal span': (0, 27), 'adding node already present': False, 'movers': ['C', 'MF', 'VC'], 'old_parent': 'NF', 'added and moved': True, 'end right siblings': ['NF', 'KON', 'SIMPX'], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'SIMPX'}
(TOP
	(TURN
		(DM gut)
		(SIMPX
			(VF dann)
			(LK gibt)
			(MF es auch hervorragende zugverbindungen)
			(C die)
			(MF
				(ADJX
					[01;31m(ADJX[00m
						(ADJD stundlich)[01;31m)[00m
					(PX ab vier uhr dreiundvierzig)))
			(VC bestehen))
		[01;31m(NF[00m
			(SIMPX
				(C wie)
				(MF ich hier grade)
				(VC lese))[01;31m)[00m
		(KON denn)
		(SIMPX ich habe den fahrplan vor mir liegen)))
Step:Single Word Phrase
{'subtrees': ['ADJD'], 'family': ['ADJX', 'PX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADJD', 'APPR', 'CARD', 'NN', 'CARD'), 'right siblings': ['PX'], 'parent': 'ADJX', 'auto preterminal span': (8, 13), 'span': (8, 9), 'left siblings': [], 'label': 'ADJX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(DM gut)
		(SIMPX dann gibt es auch hervorragende zugverbindungen die stundlich ab vier uhr dreiundvierzig bestehen)
		[01;31m(NF[00m
			(SIMPX
				(C wie)
				(MF ich hier grade)
				(VC lese))[01;31m)[00m
		(KON denn)
		(SIMPX ich habe den fahrplan vor mir liegen)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['DM', 'SIMPX', 'NF', 'KON', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'VVFIN', 'PPER', 'ADV', 'ADJA', 'NN', 'PRELS', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'VVFIN', 'KOUS', 'PPER', 'ADV', 'ADV', 'VVFIN', 'KON', 'PPER', 'VAFIN', 'ART', 'NN', 'APPR', 'PRF', 'VVINF'), 'right siblings': ['KON', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 27), 'span': (14, 19), 'left siblings': ['DM', 'SIMPX'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP gut dann gibt es auch hervorragende zugverbindungen die stundlich ab vier uhr dreiundvierzig bestehen wie ich hier grade lese denn ich habe den fahrplan vor mir liegen)

Sentence 199:
0 Initial errors
0 on fringe, 0 iterations

Sentence 200:
0 Initial errors
0 on fringe, 0 iterations

Sentence 201:
0 Initial errors
0 on fringe, 0 iterations

Sentence 202:
0 Initial errors
0 on fringe, 0 iterations

Sentence 203:
0 Initial errors
0 on fringe, 0 iterations

Sentence 204:
0 Initial errors
0 on fringe, 0 iterations

Sentence 205:
0 Initial errors
0 on fringe, 0 iterations

Sentence 206:
0 Initial errors
0 on fringe, 0 iterations

Sentence 207:
0 Initial errors
0 on fringe, 0 iterations

Sentence 208:
0 Initial errors
0 on fringe, 0 iterations

Sentence 209:
0 Initial errors
0 on fringe, 0 iterations

Sentence 210:
0 Initial errors
0 on fringe, 0 iterations

Sentence 211:
0 Initial errors
0 on fringe, 0 iterations

Sentence 212:
0 Initial errors
0 on fringe, 0 iterations

Sentence 213:
0 Initial errors
0 on fringe, 0 iterations

Sentence 214:
0 Initial errors
0 on fringe, 0 iterations

Sentence 215:
3 Initial errors
0 on fringe, 2 iterations
2 Error:Clause Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		[01;36m(SIMPX[00m
			[01;36m(LV[00m
				(SIMPX
					(C wenn)
					(MF ihnen oktober nicht so gut)
					(VC past))[01;36m)[00m
			[01;31m(SIMPX[00m
				(VF da)
				(LK habe)
				(MF ich auch urlaub)
				(NF ende oktober)[01;31m)[00m[01;36m)[00m
		(DM also)))
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['SIMPX', 'VF', 'LK', 'MF', 'NF'], 'mover info': [('SIMPX', (1, 8))], 'old_family': ['DM', 'SIMPX', 'SIMPX', 'DM'], 'start left siblings': ['DM'], 'auto preterminals': ('PTKANT', 'KOUS', 'PPER', 'NN', 'PTKNEG', 'ADV', 'ADJD', 'VVFIN', 'ADV', 'VAFIN', 'PPER', 'ADV', 'NN', 'NN', 'NN', 'ADV'), 'start right siblings': ['SIMPX', 'DM'], 'end left siblings': [], 'auto preterminal span': (0, 16), 'movers': ['SIMPX'], 'old_parent': 'TURN', 'end right siblings': ['VF', 'LK', 'MF', 'NF'], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			[01;36m(LV[00m
				(SIMPX
					(C wenn)
					(MF ihnen oktober nicht so gut)
					(VC past))[01;36m)[00m
			(VF da)
			(LK habe)
			(MF ich auch urlaub)
			(NF ende oktober))
		(DM also)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['LV', 'VF', 'LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'NN', 'PTKNEG', 'ADV', 'ADJD', 'VVFIN'), 'right siblings': [(VF (ADVX (ADV da))), (LK (VXFIN (VAFIN habe))), (MF (NX (PPER ich)) (ADVX (ADV auch)) (NX (NN urlaub))), (NF (NX (NX (NN ende)) (NX (NN oktober))))], 'left siblings': [], 'auto preterminal span': (1, 8), 'span': (1, 8), 'parent': 'SIMPX', 'label': 'LV', 'classified_type': 'Unary', 'type': 'add'}
(TOP ja wenn ihnen oktober nicht so gut past da habe ich auch urlaub ende oktober also)

Sentence 216:
1 Initial errors
0 on fringe, 1 iterations
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX
			(LK kommt)
			(MF
				(ADVX erst)
				[01;31m(NX[00m
					(ART der)
					(NN november)[01;31m)[00m
				(PX in frage)))))
Step:UNSET remove
{'subtrees': ['ART', 'NN'], 'family': ['ADVX', 'NX', 'PX'], 'over_word': False, 'over words': True, 'auto preterminals': ('ADV', 'ART', 'NN', 'APPR', 'NN'), 'right siblings': ['PX'], 'parent': 'MF', 'auto preterminal span': (1, 6), 'span': (2, 4), 'left siblings': ['ADVX'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP kommt erst der november in frage)

Sentence 217:
0 Initial errors
0 on fringe, 0 iterations

Sentence 218:
0 Initial errors
0 on fringe, 0 iterations

Sentence 219:
0 Initial errors
0 on fringe, 0 iterations

Sentence 220:
0 Initial errors
0 on fringe, 0 iterations

Sentence 221:
10 Initial errors
0 on fringe, 6 iterations
2 Error:Different label
2 Error:Single Word Phrase
2 Error:UNSET move
2 Error:PP Attachment
1 Error:Unary
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX
			(VF ab munchen)
			(LK dauert)
			(MF
				(NX es)
				[01;36m(NX[00m [01;31m(PX[00m
					(ADVX nur)
					[01;36m(NX[00m [01;31m(ADVX[00m
						(ADV etwas)[01;31m)[00m[01;36m)[00m
					(APPR uber)
					(NX vier stunden)[01;31m)[00m[01;36m)[00m))
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			[01;36m(SIMPX[00m
				(VF wir)
				(LK konnten)
				(MF ab halb sechs schon)
				(VC losfahren)
				[01;36m(SIMPX[00m
					(NF
						[01;31m(SIMPX[00m
							(C so das)
							(MF wir mittags die geschaftspartner)
							(VC treffen)[01;31m)[00m
						[01;36m(NF[00m
							(PX
								(KON oder)
								(PX am fruhen nachmittag))[01;36m)[00m)[01;36m)[00m[01;36m)[00m[01;31m)[00m))
Step:Different label
{'family': ['NX', 'NX'], 'auto preterminal span': (4, 9), 'span': (4, 9), 'subtrees': ['ADVX', 'ADVX', 'APPR', 'NX'], 'parent': 'MF', 'over_word': False, 'auto preterminals': ('ADV', 'ADV', 'APPR', 'CARD', 'NN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('PX', 'NX')}
(TOP
	(TURN
		(SIMPX
			(VF ab munchen)
			(LK dauert)
			(MF
				(NX es)
				(NX
					(ADVX nur)
					[01;36m(NX[00m [01;31m(ADVX[00m
						(ADV etwas)[01;31m)[00m[01;36m)[00m
					(APPR uber)
					(NX vier stunden))))
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			[01;36m(SIMPX[00m
				(VF wir)
				(LK konnten)
				(MF ab halb sechs schon)
				(VC losfahren)
				[01;36m(SIMPX[00m
					(NF
						[01;31m(SIMPX[00m
							(C so das)
							(MF wir mittags die geschaftspartner)
							(VC treffen)[01;31m)[00m
						[01;36m(NF[00m
							(PX
								(KON oder)
								(PX am fruhen nachmittag))[01;36m)[00m)[01;36m)[00m[01;36m)[00m[01;31m)[00m))
Step:Single Word Phrase
{'family': ['ADVX', 'NX', 'APPR', 'NX'], 'auto preterminal span': (5, 6), 'span': (5, 6), 'subtrees': ['ADV'], 'parent': 'NX', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'NX')}
(TOP
	(TURN
		(SIMPX ab munchen dauert es nur etwas uber vier stunden)
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			[01;36m(SIMPX[00m
				(VF wir)
				(LK konnten)
				(MF ab halb sechs schon)
				(VC losfahren)
				[01;36m(SIMPX[00m
					(NF
						[01;31m(SIMPX[00m
							(C so das)
							(MF wir mittags die geschaftspartner)
							(VC treffen)[01;31m)[00m
						[01;36m(NF[00m
							(PX
								(KON oder)
								(PX am fruhen nachmittag))[01;36m)[00m)[01;36m)[00m[01;36m)[00m[01;31m)[00m))
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['SIMPX', 'KOORD', 'SIMPX'], 'mover info': [('KOORD', (9, 10))], 'old_family': ['KOORD', 'VF', 'LK', 'MF', 'VC', 'NF'], 'start left siblings': [], 'auto preterminals': ('APPR', 'NE', 'VVFIN', 'PPER', 'ADV', 'ADV', 'APPR', 'CARD', 'NN', 'KON', 'PPER', 'VMFIN', 'APPR', 'ADJD', 'CARD', 'ADV', 'VVINF', 'KOUS', 'KOUS', 'PPER', 'ADV', 'ART', 'NN', 'VVFIN', 'KON', 'APPRART', 'ADJA', 'NN'), 'start right siblings': ['VF', 'LK', 'MF', 'VC', 'NF'], 'end left siblings': ['SIMPX'], 'auto preterminal span': (0, 28), 'movers': ['KOORD'], 'old_parent': 'SIMPX', 'POS confusion': ('KON', 'KON'), 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SIMPX ab munchen dauert es nur etwas uber vier stunden)
		[01;31m(KOORD[00m
			(KON und)[01;31m)[00m
		(SIMPX
			(VF wir)
			(LK konnten)
			(MF ab halb sechs schon)
			(VC losfahren)
			[01;36m(SIMPX[00m
				(NF
					[01;31m(SIMPX[00m
						(C so das)
						(MF wir mittags die geschaftspartner)
						(VC treffen)[01;31m)[00m
					[01;36m(NF[00m
						(PX
							(KON oder)
							(PX am fruhen nachmittag))[01;36m)[00m)[01;36m)[00m)))
Step:PP Attachment
{'new_parent': 'SIMPX', 'new_family': ['C', 'MF', 'VC', 'PX'], 'mover info': [('PX', (24, 28))], 'old_family': ['SIMPX', 'PX'], 'start left siblings': ['SIMPX'], 'auto preterminals': ('KOUS', 'KOUS', 'PPER', 'ADV', 'ART', 'NN', 'VVFIN', 'KON', 'APPRART', 'ADJA', 'NN'), 'start right siblings': [], 'end left siblings': ['C', 'MF', 'VC'], 'auto preterminal span': (17, 28), 'movers': ['PX'], 'old_parent': 'NF', 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SIMPX ab munchen dauert es nur etwas uber vier stunden)
		[01;31m(KOORD[00m
			(KON und)[01;31m)[00m
		(SIMPX
			(VF wir)
			(LK konnten)
			(MF ab halb sechs schon)
			(VC losfahren)
			(NF
				(SIMPX
					(C so das)
					(MF wir mittags die geschaftspartner)
					(VC treffen)
					[01;36m(NF[00m
						(PX
							(KON oder)
							(PX am fruhen nachmittag))[01;36m)[00m)))))
Step:Unary
{'subtrees': ['PX'], 'family': ['C', 'MF', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'APPRART', 'ADJA', 'NN'), 'right siblings': [], 'left siblings': [(C (KOUS so) (KOUS das)), (MF (NX (PPER wir)) (ADVX (ADV mittags)) (NX (ART die) (NN geschaftspartner))), (VC (VXFIN (VVFIN treffen)))], 'auto preterminal span': (24, 28), 'span': (24, 28), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SIMPX ab munchen dauert es nur etwas uber vier stunden)
		[01;31m(KOORD[00m
			(KON und)[01;31m)[00m
		(SIMPX wir konnten ab halb sechs schon losfahren so das wir mittags die geschaftspartner treffen oder am fruhen nachmittag)))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['SIMPX', 'KOORD', 'SIMPX'], 'over_word': True, 'over words': True, 'auto preterminals': ('APPR', 'NE', 'VVFIN', 'PPER', 'ADV', 'ADV', 'APPR', 'CARD', 'NN', 'KON', 'PPER', 'VMFIN', 'APPR', 'ADJD', 'CARD', 'ADV', 'VVINF', 'KOUS', 'KOUS', 'PPER', 'ADV', 'ART', 'NN', 'VVFIN', 'KON', 'APPRART', 'ADJA', 'NN'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 28), 'span': (9, 10), 'left siblings': ['SIMPX'], 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP ab munchen dauert es nur etwas uber vier stunden und wir konnten ab halb sechs schon losfahren so das wir mittags die geschaftspartner treffen oder am fruhen nachmittag)

Sentence 222:
0 Initial errors
0 on fringe, 0 iterations

Sentence 223:
0 Initial errors
0 on fringe, 0 iterations

Sentence 224:
0 Initial errors
0 on fringe, 0 iterations

Sentence 225:
7 Initial errors
0 on fringe, 6 iterations
2 Error:Modifier Attachment
1 Error:Unary
1 Error:Single Word Phrase
1 Error:Single Word Phrase
1 Error:UNSET remove
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			(LK nehmen)
			[01;31m(MF[00m
				[01;36m(MF[00m
					(NX wir)
					(ADVX dann)
					(ADVX doch)
					[01;31m(NX[00m
						(NX das)
						(PX in der mitte)[01;31m)[00m[01;36m)[00m
				[01;36m(NF[00m
					(ADVX
						(ADV vielleicht))[01;36m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX
			(VF das)
			(LK ware)
			(MF
				(NX
					[01;36m(NX[00m
						(ART das)[01;36m)[00m
					[01;36m(ADJX[00m
						(NE zentralhotel)[01;36m)[00m)))))
Step:Modifier Attachment
{'new_parent': 'SIMPX', 'new_family': ['LK', 'MF', 'ADVX'], 'mover info': [('ADVX', (8, 9))], 'old_family': ['NX', 'ADVX', 'ADVX', 'NX', 'ADVX'], 'start left siblings': ['NX', 'ADVX', 'ADVX', 'NX'], 'auto preterminals': ('VVFIN', 'PPER', 'ADV', 'ADV', 'PDS', 'APPR', 'ART', 'NN', 'ADV'), 'start right siblings': [], 'end left siblings': ['LK', 'MF'], 'auto preterminal span': (0, 9), 'movers': ['ADVX'], 'old_parent': 'MF', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			(LK nehmen)
			(MF
				(NX wir)
				(ADVX dann)
				(ADVX doch)
				[01;31m(NX[00m
					(NX das)
					(PX in der mitte)[01;31m)[00m)
			[01;36m(NF[00m
				(ADVX
					(ADV vielleicht))[01;36m)[00m[01;31m)[00m
		(SIMPX
			(VF das)
			(LK ware)
			(MF
				(NX
					[01;36m(NX[00m
						(ART das)[01;36m)[00m
					[01;36m(ADJX[00m
						(NE zentralhotel)[01;36m)[00m)))))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV',), 'right siblings': [], 'left siblings': [(LK (VXFIN (VVFIN nehmen))), (MF (NX (PPER wir)) (ADVX (ADV dann)) (ADVX (ADV doch)) (NX (NX (PDS das)) (PX (APPR in) (NX (ART der) (NN mitte)))))], 'auto preterminal span': (8, 9), 'span': (8, 9), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			(LK nehmen)
			(MF
				(NX wir)
				(ADVX dann)
				(ADVX doch)
				[01;31m(NX[00m
					(NX das)
					(PX in der mitte)[01;31m)[00m)
			(NF vielleicht)[01;31m)[00m
		(SIMPX
			(VF das)
			(LK ware)
			(MF
				(NX
					[01;36m(NX[00m
						(ART das)[01;36m)[00m
					[01;36m(ADJX[00m
						(NE zentralhotel)[01;36m)[00m)))))
Step:Single Word Phrase
{'subtrees': ['ART'], 'family': ['NX', 'NE'], 'over_word': True, 'over words': True, 'auto preterminals': ('ART',), 'right siblings': [(NE zentralhotel)], 'left siblings': [], 'auto preterminal span': (11, 12), 'span': (11, 12), 'parent': 'NX', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			(LK nehmen)
			(MF
				(NX wir)
				(ADVX dann)
				(ADVX doch)
				[01;31m(NX[00m
					(NX das)
					(PX in der mitte)[01;31m)[00m)
			(NF vielleicht)[01;31m)[00m
		(SIMPX
			(VF das)
			(LK ware)
			(MF
				(NX
					(NX das)
					[01;36m(ADJX[00m
						(NE zentralhotel)[01;36m)[00m)))))
Step:Single Word Phrase
{'subtrees': ['NE'], 'family': ['NX', 'ADJX'], 'over_word': True, 'over words': True, 'auto preterminals': ('NE',), 'right siblings': [], 'left siblings': [(NX (ART das))], 'auto preterminal span': (12, 13), 'span': (12, 13), 'parent': 'NX', 'label': 'ADJX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			(LK nehmen)
			(MF
				(NX wir)
				(ADVX dann)
				(ADVX doch)
				[01;31m(NX[00m
					(NX das)
					(PX in der mitte)[01;31m)[00m)
			(NF vielleicht)[01;31m)[00m
		(SIMPX das ware das zentralhotel)))
Step:UNSET remove
{'subtrees': ['LK', 'MF', 'NF'], 'family': ['SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'ADV', 'ADV', 'PDS', 'APPR', 'ART', 'NN', 'ADV', 'PDS', 'VAFIN', 'ART', 'NE'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 13), 'span': (0, 9), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(LK nehmen)
		(MF
			(NX wir)
			(ADVX dann)
			(ADVX doch)
			[01;31m(NX[00m
				(NX das)
				(PX in der mitte)[01;31m)[00m)
		(NF vielleicht)
		(SIMPX das ware das zentralhotel)))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['NX', 'ADVX', 'ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV', 'ADV', 'PDS', 'APPR', 'ART', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (1, 8), 'span': (4, 8), 'left siblings': ['NX', 'ADVX', 'ADVX'], 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP nehmen wir dann doch das in der mitte vielleicht das ware das zentralhotel)

Sentence 226:
0 Initial errors
0 on fringe, 0 iterations

Sentence 227:
1 Initial errors
0 on fringe, 1 iterations
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX und ob wir am abend noch was unternehmen)
		[01;31m(SIMPX[00m
			(VF das)
			(LK konnen)
			(MF wir ja dort)
			(VC absprechen)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'KOUS', 'PPER', 'APPRART', 'NN', 'ADV', 'PIS', 'VVFIN', 'PDS', 'VMFIN', 'PPER', 'ADV', 'ADV', 'VVINF'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 14), 'span': (8, 14), 'left siblings': ['SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP und ob wir am abend noch was unternehmen das konnen wir ja dort absprechen)

Sentence 228:
0 Initial errors
0 on fringe, 0 iterations

Sentence 229:
0 Initial errors
0 on fringe, 0 iterations

Sentence 230:
0 Initial errors
0 on fringe, 0 iterations

Sentence 231:
0 Initial errors
0 on fringe, 0 iterations

Sentence 232:
0 Initial errors
0 on fringe, 0 iterations

Sentence 233:
0 Initial errors
0 on fringe, 0 iterations

Sentence 234:
0 Initial errors
0 on fringe, 0 iterations

Sentence 235:
0 Initial errors
0 on fringe, 0 iterations

Sentence 236:
0 Initial errors
0 on fringe, 0 iterations

Sentence 237:
0 Initial errors
0 on fringe, 0 iterations

Sentence 238:
0 Initial errors
0 on fringe, 0 iterations

Sentence 239:
0 Initial errors
0 on fringe, 0 iterations

Sentence 240:
0 Initial errors
0 on fringe, 0 iterations

Sentence 241:
0 Initial errors
0 on fringe, 0 iterations

Sentence 242:
0 Initial errors
0 on fringe, 0 iterations

Sentence 243:
0 Initial errors
0 on fringe, 0 iterations

Sentence 244:
7 Initial errors
0 on fringe, 3 iterations
3 Error:UNSET move
2 Error:Different label
2 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM also)
		[01;36m(SIMPX[00m
			(SIMPX
				(VF es)
				(LK fahrt)
				(MF
					[01;36m(ADJX[00m [01;31m(PX[00m
						(PX ab vier uhr dreiundvierzig)
						(ADJX stundlich)[01;31m)[00m[01;36m)[00m
					(NX ein zug)))
			[01;31m(SIMPX[00m
				(KOORD und)
				[01;36m(SIMPX[00m
					(VF die fahrtdauer)
					(LK betragt)
					[01;36m(NX[00m
						(MF
							(ADVX ubrigens)
							[01;31m(NX[00m
								(ADJX viereinhalb)
								(NN stunden)[01;31m)[00m)[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;36m)[00m))
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['DM', 'SIMPX', 'KOORD', 'SIMPX'], 'mover info': [('KOORD', (10, 11))], 'old_family': ['KOORD', 'VF', 'LK', 'MF'], 'start left siblings': [], 'auto preterminals': ('ADV', 'PPER', 'VVFIN', 'APPR', 'CARD', 'NN', 'CARD', 'ADJD', 'ART', 'NN', 'KON', 'ART', 'NN', 'VVFIN', 'ADV', 'CARD', 'NN'), 'start right siblings': ['VF', 'LK', 'MF'], 'end left siblings': ['DM', 'SIMPX'], 'auto preterminal span': (0, 17), 'adding node already present': False, 'movers': ['KOORD'], 'old_parent': 'SIMPX', 'POS confusion': ('KON', 'KON'), 'added and moved': True, 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(DM also)
		(SIMPX
			(SIMPX
				(VF es)
				(LK fahrt)
				(MF
					[01;36m(ADJX[00m [01;31m(PX[00m
						(PX ab vier uhr dreiundvierzig)
						(ADJX stundlich)[01;31m)[00m[01;36m)[00m
					(NX ein zug)))
			(KOORD und)
			(SIMPX
				(VF die fahrtdauer)
				(LK betragt)
				[01;36m(NX[00m
					(MF
						(ADVX ubrigens)
						[01;31m(NX[00m
							(ADJX viereinhalb)
							(NN stunden)[01;31m)[00m)[01;36m)[00m))))
Step:Different label
{'family': ['ADJX', 'NX'], 'auto preterminal span': (3, 8), 'span': (3, 8), 'subtrees': ['PX', 'ADJX'], 'parent': 'MF', 'over_word': False, 'auto preterminals': ('APPR', 'CARD', 'NN', 'CARD', 'ADJD'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('PX', 'ADJX')}
(TOP
	(TURN
		(DM also)
		(SIMPX
			(SIMPX es fahrt ab vier uhr dreiundvierzig stundlich ein zug)
			(KOORD und)
			(SIMPX
				(VF die fahrtdauer)
				(LK betragt)
				[01;36m(NX[00m
					(MF
						(ADVX ubrigens)
						[01;31m(NX[00m
							(ADJX viereinhalb)
							(NN stunden)[01;31m)[00m)[01;36m)[00m))))
Step:Modifier Attachment
{'new_parent': 'NX', 'new_family': ['ADVX', 'ADJX', 'NN'], 'mover info': [('ADVX', (14, 15))], 'old_family': ['ADVX', 'NX'], 'start left siblings': [], 'auto preterminals': ('ADV', 'CARD', 'NN'), 'start right siblings': ['NX'], 'end left siblings': [], 'auto preterminal span': (14, 17), 'movers': ['ADVX'], 'old_parent': 'MF', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['ADJX', 'NN'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP also es fahrt ab vier uhr dreiundvierzig stundlich ein zug und die fahrtdauer betragt ubrigens viereinhalb stunden)

Sentence 245:
0 Initial errors
0 on fringe, 0 iterations

Sentence 246:
0 Initial errors
0 on fringe, 0 iterations

Sentence 247:
10 Initial errors
0 on fringe, 9 iterations
2 Error:UNSET move
1 Error:UNSET remove
1 Error:Co-ordination
1 Error:UNSET add
1 Error:Clause Attachment
1 Error:UNSET add
1 Error:Unary
1 Error:Co-ordination
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF die anderen beiden)
			[01;31m(FKOORD[00m
				[01;31m(LKMN[00m
					(LK sind)
					(MF zwar beide zentral) [01;33mSIMPX)[00m
					[01;31m(NF[00m [01;33m(SIMPX[00m
						[01;31m(PX[00m
							(ADVX aber)
							(ADVX nicht)
							(PX in der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m[01;31m)[00m
				(KON und)
				(LKM liegen auch etwas hoher)[01;31m)[00m[01;31m)[00m [01;33mSIMPX)[00m
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			[01;36m(SIMPX[00m
				(VF ich)
				(LK weis)
				(MF nicht)
				(NF wie ihr budget aussieht)[01;36m)[00m[01;31m)[00m
		(SIMPX aber mir wurde eigentlich dieses schloshotel hannover am besten passen)))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['VF', 'FKOORD', 'KOORD'], 'mover info': [('KOORD', (20, 21))], 'old_family': ['KOORD', 'VF', 'LK', 'MF', 'NF'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'ART', 'ADJA', 'PIS', 'VAFIN', 'ADV', 'PIS', 'ADJD', 'ADV', 'PTKNEG', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'KON', 'VVFIN', 'ADV', 'ADV', 'ADJD', 'KON', 'PPER', 'VVFIN', 'PTKNEG', 'KOUS', 'PPOSAT', 'NN', 'VVFIN', 'KON', 'PPER', 'VAFIN', 'ADV', 'PDAT', 'NE', 'NE', 'PTKA', 'ADJD', 'VVINF'), 'start right siblings': ['VF', 'LK', 'MF', 'NF'], 'end left siblings': ['VF', 'FKOORD'], 'auto preterminal span': (0, 38), 'movers': ['KOORD'], 'old_parent': 'SIMPX', 'POS confusion': ('KON', 'KON'), 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF die anderen beiden)
			[01;31m(FKOORD[00m
				[01;31m(LKMN[00m
					(LK sind)
					(MF zwar beide zentral) [01;33mSIMPX)[00m
					[01;31m(NF[00m [01;33m(SIMPX[00m
						[01;31m(PX[00m
							(ADVX aber)
							(ADVX nicht)
							(PX in der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m[01;31m)[00m
				(KON und)
				(LKM liegen auch etwas hoher)[01;31m)[00m [01;33mSIMPX)[00m
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m[01;31m)[00m
		(SIMPX ich weis nicht wie ihr budget aussieht)
		(SIMPX aber mir wurde eigentlich dieses schloshotel hannover am besten passen)))
Step:UNSET remove
{'subtrees': ['VF', 'FKOORD', 'KOORD'], 'family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ART', 'ADJA', 'PIS', 'VAFIN', 'ADV', 'PIS', 'ADJD', 'ADV', 'PTKNEG', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'KON', 'VVFIN', 'ADV', 'ADV', 'ADJD', 'KON', 'PPER', 'VVFIN', 'PTKNEG', 'KOUS', 'PPOSAT', 'NN', 'VVFIN', 'KON', 'PPER', 'VAFIN', 'ADV', 'PDAT', 'NE', 'NE', 'PTKA', 'ADJD', 'VVINF'), 'right siblings': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 38), 'span': (1, 21), 'left siblings': ['DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		[01;33m(SIMPX[00m (VF die anderen beiden)
		[01;31m(FKOORD[00m
			[01;31m(LKMN[00m
				(LK sind)
				(MF zwar beide zentral) [01;33mSIMPX)[00m
				[01;31m(NF[00m [01;33m(SIMPX[00m
					[01;31m(PX[00m
						(ADVX aber)
						(ADVX nicht)
						(PX in der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			(KON und)
			(LKM liegen auch etwas hoher)[01;31m)[00m [01;33mSIMPX)[00m
		[01;31m(KOORD[00m
			(KON und)[01;31m)[00m
		(SIMPX ich weis nicht wie ihr budget aussieht)
		(SIMPX aber mir wurde eigentlich dieses schloshotel hannover am besten passen)))
Step:Co-ordination
{'subtrees': ['LK', 'MF', 'NF'], 'family': ['LKMN', 'KON', 'LKM'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'ADV', 'PIS', 'ADJD', 'ADV', 'PTKNEG', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'KON', 'VVFIN', 'ADV', 'ADV', 'ADJD'), 'right siblings': ['KON', 'LKM'], 'parent': 'FKOORD', 'auto preterminal span': (4, 20), 'span': (4, 15), 'left siblings': [], 'label': 'LKMN', 'classified_type': 'Co-ordination', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		[01;33m(SIMPX[00m (VF die anderen beiden)
		[01;31m(FKOORD[00m
			(LK sind)
			(MF zwar beide zentral) [01;33mSIMPX)[00m
			[01;36m(SIMPX[00m
				[01;31m(NF[00m
					[01;31m(PX[00m
						(ADVX aber)
						(ADVX nicht)
						(PX in der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m
				(KON und)
				(LKM liegen auch etwas hoher)[01;36m)[00m[01;31m)[00m
		[01;31m(KOORD[00m
			(KON und)[01;31m)[00m
		(SIMPX ich weis nicht wie ihr budget aussieht)
		(SIMPX aber mir wurde eigentlich dieses schloshotel hannover am besten passen)))
Step:UNSET add
{'subtrees': ['NF', 'KON', 'LKM'], 'family': ['LK', 'MF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PTKNEG', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'KON', 'VVFIN', 'ADV', 'ADV', 'ADJD'), 'right siblings': [], 'left siblings': [(LK (VXFIN (VAFIN sind))), (MF (ADVX (ADV zwar)) (NX (PIS beide)) (ADJX (ADJD zentral)))], 'auto preterminal span': (8, 20), 'span': (8, 20), 'parent': 'FKOORD', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		[01;33m(SIMPX[00m (VF die anderen beiden)
		[01;31m(FKOORD[00m
			(LK sind)
			(MF zwar beide zentral) [01;33mSIMPX)[00m
			(SIMPX
				[01;31m(NF[00m
					[01;31m(PX[00m
						(ADVX aber)
						(ADVX nicht)
						(PX in der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m
				(KON und)
				(LKM liegen auch etwas hoher))[01;31m)[00m
		[01;31m(KOORD[00m
			(KON und)[01;31m)[00m
		(SIMPX ich weis nicht wie ihr budget aussieht)
		(SIMPX aber mir wurde eigentlich dieses schloshotel hannover am besten passen)))
Step:Clause Attachment
{'subtrees': ['LK', 'MF', 'SIMPX'], 'family': ['DM', 'VF', 'FKOORD', 'KOORD', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ART', 'ADJA', 'PIS', 'VAFIN', 'ADV', 'PIS', 'ADJD', 'ADV', 'PTKNEG', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'KON', 'VVFIN', 'ADV', 'ADV', 'ADJD', 'KON', 'PPER', 'VVFIN', 'PTKNEG', 'KOUS', 'PPOSAT', 'NN', 'VVFIN', 'KON', 'PPER', 'VAFIN', 'ADV', 'PDAT', 'NE', 'NE', 'PTKA', 'ADJD', 'VVINF'), 'right siblings': ['KOORD', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 38), 'span': (4, 20), 'left siblings': ['DM', 'VF'], 'label': 'FKOORD', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		[01;36m(SIMPX[00m
			(VF die anderen beiden)
			(LK sind)
			(MF zwar beide zentral)[01;36m)[00m
		(SIMPX
			[01;31m(NF[00m
				[01;31m(PX[00m
					(ADVX aber)
					(ADVX nicht)
					(PX in der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m
			(KON und)
			(LKM liegen auch etwas hoher))
		[01;31m(KOORD[00m
			(KON und)[01;31m)[00m
		(SIMPX ich weis nicht wie ihr budget aussieht)
		(SIMPX aber mir wurde eigentlich dieses schloshotel hannover am besten passen)))
Step:UNSET add
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['DM', 'SIMPX', 'SIMPX', 'KOORD', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'ADJA', 'PIS', 'VAFIN', 'ADV', 'PIS', 'ADJD'), 'right siblings': [(SIMPX (NF (PX (ADVX (ADV aber)) (ADVX (PTKNEG nicht)) (PX (APPR in) (NX (NX (ART der) (NN nahe)) (PX (APPRART vom) (NX (NN hauptbahnhof))))))) (KON und) (LKM (LK (VXFIN (VVFIN liegen))) (MF (ADVX (ADV auch)) (ADJX (ADVX (ADV etwas)) (ADJD hoher))))), (KOORD (KON und)), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN weis))) (MF (ADVX (PTKNEG nicht))) (NF (SIMPX (C (KOUS wie)) (MF (NX (PPOSAT ihr) (NN budget))) (VC (VXFIN (VVFIN aussieht)))))), (SIMPX (KOORD (KON aber)) (VF (NX (PPER mir))) (LK (VXFIN (VAFIN wurde))) (MF (ADVX (ADV eigentlich)) (NX (PDAT dieses) (NX (NX (NE schloshotel)) (NX (NE hannover)))) (ADJX (PTKA am) (ADJD besten))) (VC (VXINF (VVINF passen))))], 'left siblings': [(DM (PTKANT ja))], 'auto preterminal span': (1, 8), 'span': (1, 8), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX die anderen beiden sind zwar beide zentral)
		(SIMPX
			[01;31m(NF[00m
				[01;31m(PX[00m
					(ADVX aber)
					(ADVX nicht)
					(PX in der nahe vom hauptbahnhof)[01;31m)[00m[01;31m)[00m
			(KON und)
			(LKM liegen auch etwas hoher))
		[01;31m(KOORD[00m
			(KON und)[01;31m)[00m
		(SIMPX ich weis nicht wie ihr budget aussieht)
		(SIMPX aber mir wurde eigentlich dieses schloshotel hannover am besten passen)))
Step:Unary
{'subtrees': ['ADVX', 'ADVX', 'PX'], 'family': ['PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PTKNEG', 'APPR', 'ART', 'NN', 'APPRART', 'NN'), 'right siblings': [], 'parent': 'NF', 'auto preterminal span': (8, 15), 'span': (8, 15), 'left siblings': [], 'label': 'PX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX die anderen beiden sind zwar beide zentral)
		(SIMPX
			[01;31m(NF[00m
				(ADVX aber)
				(ADVX nicht)
				(PX in der nahe vom hauptbahnhof)[01;31m)[00m
			(KON und)
			(LKM liegen auch etwas hoher))
		[01;31m(KOORD[00m
			(KON und)[01;31m)[00m
		(SIMPX ich weis nicht wie ihr budget aussieht)
		(SIMPX aber mir wurde eigentlich dieses schloshotel hannover am besten passen)))
Step:Co-ordination
{'subtrees': ['ADVX', 'ADVX', 'PX'], 'family': ['NF', 'KON', 'LKM'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PTKNEG', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'KON', 'VVFIN', 'ADV', 'ADV', 'ADJD'), 'right siblings': ['KON', 'LKM'], 'parent': 'SIMPX', 'auto preterminal span': (8, 20), 'span': (8, 15), 'left siblings': [], 'label': 'NF', 'classified_type': 'Co-ordination', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX die anderen beiden sind zwar beide zentral)
		(SIMPX aber nicht in der nahe vom hauptbahnhof und liegen auch etwas hoher)
		[01;31m(KOORD[00m
			(KON und)[01;31m)[00m
		(SIMPX ich weis nicht wie ihr budget aussieht)
		(SIMPX aber mir wurde eigentlich dieses schloshotel hannover am besten passen)))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['DM', 'SIMPX', 'SIMPX', 'KOORD', 'SIMPX', 'SIMPX'], 'over_word': True, 'over words': True, 'auto preterminals': ('PTKANT', 'ART', 'ADJA', 'PIS', 'VAFIN', 'ADV', 'PIS', 'ADJD', 'ADV', 'PTKNEG', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'KON', 'VVFIN', 'ADV', 'ADV', 'ADJD', 'KON', 'PPER', 'VVFIN', 'PTKNEG', 'KOUS', 'PPOSAT', 'NN', 'VVFIN', 'KON', 'PPER', 'VAFIN', 'ADV', 'PDAT', 'NE', 'NE', 'PTKA', 'ADJD', 'VVINF'), 'right siblings': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 38), 'span': (20, 21), 'left siblings': ['DM', 'SIMPX', 'SIMPX'], 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP ja die anderen beiden sind zwar beide zentral aber nicht in der nahe vom hauptbahnhof und liegen auch etwas hoher und ich weis nicht wie ihr budget aussieht aber mir wurde eigentlich dieses schloshotel hannover am besten passen)

Sentence 248:
0 Initial errors
0 on fringe, 0 iterations

Sentence 249:
6 Initial errors
0 on fringe, 2 iterations
4 Error:Modifier Attachment
2 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF da)
			(LK musten)
			(MF wir uns)
			(VC erkundigen)
			(NF
				(SIMPX
					(C ob)
					[01;31m(MF[00m
						[01;36m(MF[00m
							(NX die)
							(ADVX abends)[01;36m)[00m
						[01;36m(VXINF[00m [01;31m(ADJX[00m [01;33m(VC[00m
							(ADJD geoffnet)[01;31m)[00m[01;36m)[00m[01;31m)[00m
					[01;31m(VC[00m
						(VXFIN
							(VAFIN haben))[01;31m)[00m))) [01;33mVC)[00m
		(SIMPX aber museumsbesuche finde ich auch sehr reizvoll)))
Step:Modifier Attachment
{'new_parent': 'VC', 'new_family': ['ADJX', 'VXFIN'], 'mover info': [('ADJX', (9, 10))], 'old_family': ['NX', 'ADVX', 'ADJX'], 'start left siblings': ['NX', 'ADVX'], 'auto preterminals': ('KOUS', 'PDS', 'ADV', 'ADJD', 'VAFIN'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (6, 11), 'movers': ['ADJX'], 'old_parent': 'MF', 'POS confusion': ('ADJD', 'ADJD'), 'end right siblings': ['VXFIN'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF da)
			(LK musten)
			(MF wir uns)
			(VC erkundigen)
			(NF
				(SIMPX
					(C ob)
					(MF die abends)
					(VC
						[01;36m(VXINF[00m [01;31m(ADJX[00m
							(ADJD geoffnet)[01;31m)[00m[01;36m)[00m
						(VXFIN haben)))))
		(SIMPX aber museumsbesuche finde ich auch sehr reizvoll)))
Step:Single Word Phrase
{'family': ['VXINF', 'VXFIN'], 'auto preterminal span': (9, 10), 'span': (9, 10), 'subtrees': ['ADJD'], 'parent': 'VC', 'over_word': True, 'auto preterminals': ('ADJD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'VXINF')}
(TOP ja da musten wir uns erkundigen ob die abends geoffnet haben aber museumsbesuche finde ich auch sehr reizvoll)

Sentence 250:
0 Initial errors
0 on fringe, 0 iterations

Sentence 251:
0 Initial errors
0 on fringe, 0 iterations

Sentence 252:
0 Initial errors
0 on fringe, 0 iterations

Sentence 253:
0 Initial errors
0 on fringe, 0 iterations

Sentence 254:
0 Initial errors
0 on fringe, 0 iterations

Sentence 255:
0 Initial errors
0 on fringe, 0 iterations

Sentence 256:
0 Initial errors
0 on fringe, 0 iterations

Sentence 257:
0 Initial errors
0 on fringe, 0 iterations

Sentence 258:
0 Initial errors
0 on fringe, 0 iterations

Sentence 259:
0 Initial errors
0 on fringe, 0 iterations

Sentence 260:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;36m(ADJX[00m [01;31m(VXINF[00m
			(VVPP abgedeckt)[01;31m)[00m[01;36m)[00m
		(DM ja)))
Step:Single Word Phrase
{'family': ['ADJX', 'DM'], 'auto preterminal span': (0, 1), 'span': (0, 1), 'subtrees': ['VVPP'], 'parent': 'TURN', 'over_word': True, 'auto preterminals': ('VVPP',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VXINF', 'ADJX')}
(TOP abgedeckt ja)

Sentence 261:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;36m(ADJX[00m [01;31m(VXINF[00m
			(VVPP abgedeckt)[01;31m)[00m[01;36m)[00m
		(DM ja)))
Step:Single Word Phrase
{'family': ['ADJX', 'DM'], 'auto preterminal span': (0, 1), 'span': (0, 1), 'subtrees': ['VVPP'], 'parent': 'TURN', 'over_word': True, 'auto preterminals': ('VVPP',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VXINF', 'ADJX')}
(TOP abgedeckt ja)

Sentence 262:
3 Initial errors
0 on fringe, 2 iterations
2 Error:Modifier Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		[01;36m(NX[00m
			(ADVX dann)
			[01;31m(DM[00m
				(NX
					(PIDAT vielen)
					(NN dank))[01;31m)[00m
			[01;31m(ADVX[00m
				(ADVX erst)
				(ADVX mal)[01;31m)[00m[01;36m)[00m
		(DM und auf wiedersehen)))
Step:Modifier Attachment
{'new_parent': 'TURN', 'new_family': ['DM', 'DM', 'ADVX', 'DM', 'ADVX', 'ADVX', 'DM'], 'mover info': [('ADVX', (5, 6))], 'old_family': ['ADVX', 'ADVX'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'ITJ', 'ADV', 'PIDAT', 'NN', 'ADV', 'ADV', 'KON', 'APPR', 'NN'), 'start right siblings': ['ADVX'], 'end left siblings': ['DM', 'DM', 'ADVX', 'DM'], 'auto preterminal span': (0, 10), 'adding node already present': False, 'movers': ['ADVX'], 'old_parent': 'ADVX', 'POS confusion': ('ADV', 'ADV'), 'added and moved': True, 'end right siblings': ['ADVX', 'DM'], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		(NX
			(ADVX dann)
			[01;31m(DM[00m
				(NX
					(PIDAT vielen)
					(NN dank))[01;31m)[00m
			(ADVX erst)
			(ADVX mal))
		(DM und auf wiedersehen)))
Step:Unary
{'subtrees': ['NX'], 'family': ['ADVX', 'DM', 'ADVX', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PIDAT', 'NN', 'ADV', 'ADV'), 'right siblings': ['ADVX', 'ADVX'], 'parent': 'NX', 'auto preterminal span': (2, 7), 'span': (3, 5), 'left siblings': ['ADVX'], 'label': 'DM', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja gut dann vielen dank erst mal und auf wiedersehen)

Sentence 263:
0 Initial errors
0 on fringe, 0 iterations

Sentence 264:
0 Initial errors
0 on fringe, 0 iterations

Sentence 265:
0 Initial errors
0 on fringe, 0 iterations

Sentence 266:
0 Initial errors
0 on fringe, 0 iterations

Sentence 267:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM
			(NX
				[01;36m(DM[00m
					(NX
						(NN reiseburo))[01;36m)[00m
				(NX bonn)))
		(DM flammersfeld)
		(DM guten tag)))
Step:Unary
{'subtrees': ['NX'], 'family': ['DM', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN',), 'right siblings': [(NX (NE bonn))], 'left siblings': [], 'auto preterminal span': (0, 1), 'span': (0, 1), 'parent': 'NX', 'label': 'DM', 'classified_type': 'Unary', 'type': 'add'}
(TOP reiseburo bonn flammersfeld guten tag)

Sentence 268:
0 Initial errors
0 on fringe, 0 iterations

Sentence 269:
0 Initial errors
0 on fringe, 0 iterations

Sentence 270:
0 Initial errors
0 on fringe, 0 iterations

Sentence 271:
0 Initial errors
0 on fringe, 0 iterations

Sentence 272:
0 Initial errors
0 on fringe, 0 iterations

Sentence 273:
3 Initial errors
0 on fringe, 1 iterations
3 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX
			(VF die reiseunterlagen)
			(LK kann)
			(MF
				(NX ich)
				(ADVX dann)
				[01;36m(PX[00m [01;31m(ADVX[00m
					(PX am tag)
					[01;36m(ADVX[00m
						(ADV vorher)[01;36m)[00m[01;31m)[00m[01;36m)[00m
				(PX im buro))
			(VC abholen))))
Step:PP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'ADVX', 'PX', 'ADVX', 'PX'], 'mover info': [('PX', (5, 7))], 'old_family': ['PX', 'ADV'], 'start left siblings': [], 'auto preterminals': ('PPER', 'ADV', 'APPRART', 'NN', 'ADV', 'APPRART', 'NN'), 'start right siblings': ['ADV'], 'end left siblings': ['NX', 'ADVX'], 'auto preterminal span': (3, 10), 'adding node already present': False, 'movers': ['PX'], 'old_parent': 'ADVX', 'added and moved': True, 'end right siblings': ['ADVX', 'PX'], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'PX'}
(TOP die reiseunterlagen kann ich dann am tag vorher im buro abholen)

Sentence 274:
0 Initial errors
0 on fringe, 0 iterations

Sentence 275:
0 Initial errors
0 on fringe, 0 iterations

Sentence 276:
5 Initial errors
0 on fringe, 2 iterations
3 Error:NP Attachment
2 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM schonen guten tag)
		[01;31m(DM[00m
			[01;31m(NX[00m
				[01;36m(DM[00m
					(NX
						(NN reiseburo))[01;36m)[00m
				[01;36m(DM[00m [01;31m(NX[00m
					(NE okpue)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m))
Step:NP Attachment
{'new_parent': 'TURN', 'new_family': ['DM', 'DM', 'NX'], 'mover info': [('NX', (4, 5))], 'old_family': ['NX', 'NX'], 'start left siblings': ['NX'], 'auto preterminals': ('ADJA', 'ADJA', 'NN', 'NN', 'NE'), 'start right siblings': [], 'end left siblings': ['DM', 'DM'], 'auto preterminal span': (0, 5), 'movers': ['NX'], 'old_parent': 'NX', 'POS confusion': ('NE', 'NE'), 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM schonen guten tag)
		(DM reiseburo)
		[01;36m(DM[00m [01;31m(NX[00m
			(NE okpue)[01;31m)[00m[01;36m)[00m))
Step:Single Word Phrase
{'family': ['DM', 'DM', 'DM'], 'auto preterminal span': (4, 5), 'span': (4, 5), 'subtrees': ['NE'], 'parent': 'TURN', 'over_word': True, 'auto preterminals': ('NE',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('NX', 'DM')}
(TOP schonen guten tag reiseburo okpue)

Sentence 277:
0 Initial errors
0 on fringe, 0 iterations

Sentence 278:
6 Initial errors
0 on fringe, 5 iterations
2 Error:Different label
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM also)
		(SIMPX die termin der ware am samstag den funften juli)
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF ich)
			(LK dachte)
			(MF
				(ADVX da)
				(PX
					(PX an eine anreise)
					[01;36m(PX[00m [01;31m(ADVX[00m
						(ADVX freitags)
						(NX den vierten juli)[01;31m)[00m[01;36m)[00m))[01;31m)[00m
		[01;31m(NX[00m
			(KON und)
			(NX die abreise)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF das)
			(LK weis)
			(MF ich noch nicht so genau)
			(NF
				(SIMPX
					(C da)
					(MF ich eventuell ein paar tage noch in hannover)
					(VC verbringen will)
					[01;31m(NF[00m
						(PX
							(ADVX so)
							(APPR um)
							(NX den siebten achten juli))[01;31m)[00m))[01;31m)[00m))
Step:Different label
{'family': ['PX', 'PX'], 'auto preterminal span': (17, 21), 'span': (17, 21), 'subtrees': ['ADVX', 'NX'], 'parent': 'PX', 'over_word': False, 'auto preterminals': ('ADV', 'ART', 'ADJA', 'NN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('ADVX', 'PX')}
(TOP
	(TURN
		(DM also)
		(SIMPX die termin der ware am samstag den funften juli)
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF ich)
			(LK dachte)
			(MF da an eine anreise freitags den vierten juli)[01;31m)[00m
		[01;31m(NX[00m
			(KON und)
			(NX die abreise)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF das)
			(LK weis)
			(MF ich noch nicht so genau)
			(NF
				(SIMPX
					(C da)
					(MF ich eventuell ein paar tage noch in hannover)
					(VC verbringen will)
					[01;31m(NF[00m
						(PX
							(ADVX so)
							(APPR um)
							(NX den siebten achten juli))[01;31m)[00m))[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['KOORD', 'VF', 'LK', 'MF'], 'family': ['DM', 'SIMPX', 'SIMPX', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ART', 'NN', 'PDS', 'VAFIN', 'APPRART', 'NN', 'ART', 'ADJA', 'NN', 'KON', 'PPER', 'VVFIN', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'ART', 'ADJA', 'NN', 'KON', 'ART', 'NN', 'PDS', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'ART', 'PIDAT', 'NN', 'ADV', 'APPR', 'NE', 'VVINF', 'VMFIN', 'ADV', 'APPR', 'ART', 'ADJA', 'ADJA', 'NN'), 'right siblings': ['NX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 48), 'span': (10, 21), 'left siblings': ['DM', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX die termin der ware am samstag den funften juli)
		(KOORD und)
		(VF ich)
		(LK dachte)
		(MF da an eine anreise freitags den vierten juli)
		[01;31m(NX[00m
			(KON und)
			(NX die abreise)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF das)
			(LK weis)
			(MF ich noch nicht so genau)
			(NF
				(SIMPX
					(C da)
					(MF ich eventuell ein paar tage noch in hannover)
					(VC verbringen will)
					[01;31m(NF[00m
						(PX
							(ADVX so)
							(APPR um)
							(NX den siebten achten juli))[01;31m)[00m))[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['KON', 'NX'], 'family': ['DM', 'SIMPX', 'KOORD', 'VF', 'LK', 'MF', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ART', 'NN', 'PDS', 'VAFIN', 'APPRART', 'NN', 'ART', 'ADJA', 'NN', 'KON', 'PPER', 'VVFIN', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'ART', 'ADJA', 'NN', 'KON', 'ART', 'NN', 'PDS', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'ART', 'PIDAT', 'NN', 'ADV', 'APPR', 'NE', 'VVINF', 'VMFIN', 'ADV', 'APPR', 'ART', 'ADJA', 'ADJA', 'NN'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 48), 'span': (21, 24), 'left siblings': ['DM', 'SIMPX', 'KOORD', 'VF', 'LK', 'MF'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX die termin der ware am samstag den funften juli)
		(KOORD und)
		(VF ich)
		(LK dachte)
		(MF da an eine anreise freitags den vierten juli)
		(KON und)
		(NX die abreise)
		[01;31m(SIMPX[00m
			(VF das)
			(LK weis)
			(MF ich noch nicht so genau)
			(NF
				(SIMPX
					(C da)
					(MF ich eventuell ein paar tage noch in hannover)
					(VC verbringen will)
					[01;31m(NF[00m
						(PX
							(ADVX so)
							(APPR um)
							(NX den siebten achten juli))[01;31m)[00m))[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'NF'], 'family': ['DM', 'SIMPX', 'KOORD', 'VF', 'LK', 'MF', 'KON', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ART', 'NN', 'PDS', 'VAFIN', 'APPRART', 'NN', 'ART', 'ADJA', 'NN', 'KON', 'PPER', 'VVFIN', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'ART', 'ADJA', 'NN', 'KON', 'ART', 'NN', 'PDS', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'ART', 'PIDAT', 'NN', 'ADV', 'APPR', 'NE', 'VVINF', 'VMFIN', 'ADV', 'APPR', 'ART', 'ADJA', 'ADJA', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 48), 'span': (24, 48), 'left siblings': ['DM', 'SIMPX', 'KOORD', 'VF', 'LK', 'MF', 'KON', 'NX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX die termin der ware am samstag den funften juli)
		(KOORD und)
		(VF ich)
		(LK dachte)
		(MF da an eine anreise freitags den vierten juli)
		(KON und)
		(NX die abreise)
		(VF das)
		(LK weis)
		(MF ich noch nicht so genau)
		(NF
			(SIMPX
				(C da)
				(MF ich eventuell ein paar tage noch in hannover)
				(VC verbringen will)
				[01;31m(NF[00m
					(PX
						(ADVX so)
						(APPR um)
						(NX den siebten achten juli))[01;31m)[00m))))
Step:Unary
{'subtrees': ['PX'], 'family': ['C', 'MF', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'ART', 'PIDAT', 'NN', 'ADV', 'APPR', 'NE', 'VVINF', 'VMFIN', 'ADV', 'APPR', 'ART', 'ADJA', 'ADJA', 'NN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (31, 48), 'span': (42, 48), 'left siblings': ['C', 'MF', 'VC'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP also die termin der ware am samstag den funften juli und ich dachte da an eine anreise freitags den vierten juli und die abreise das weis ich noch nicht so genau da ich eventuell ein paar tage noch in hannover verbringen will so um den siebten achten juli)

Sentence 279:
0 Initial errors
0 on fringe, 0 iterations

Sentence 280:
0 Initial errors
0 on fringe, 0 iterations

Sentence 281:
0 Initial errors
0 on fringe, 0 iterations

Sentence 282:
21 Initial errors
0 on fringe, 10 iterations
4 Error:Modifier Attachment
4 Error:Co-ordination
2 Error:Different label
2 Error:Single Word Phrase
2 Error:PP Attachment
2 Error:Co-ordination
2 Error:Modifier Attachment
1 Error:UNSET add
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM also)
		(SIMPX wir haben hier jetzt drei hotels die wir wieder gerne empfehlen)
		[01;31m(SIMPX[00m
			[01;36m(PX[00m [01;31m(LV[00m
				[01;31m(NX[00m
					(PX zum einen)
					(NX das hotel am thielenplatz)[01;31m)[00m[01;31m)[00m[01;36m)[00m
			[01;36m(SIMPX[00m
				(VF das)
				(LK liegt)
				[01;36m(PX[00m
					(MF [01;33m(PX[00m
						(ADVX so)
						[01;31m(PX[00m
							[01;31m(PX[00m
								(APPR bis)
								(NX hundert dreisig mark)[01;31m)[00m [01;33mPX)[00m
							(PX pro zimmer)[01;31m)[00m)[01;36m)[00m[01;36m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF dann)
			(LK gibt)
			(MF es ein zentralhotel)[01;31m)[00m
		(SIMPX das ist wirklich auch sehr zentral)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(VF das)
				(LK geht)
				[01;36m(PX[00m
					(MF [01;33m(PX (MF[00m
						(ADVX so)
						[01;31m(PX[00m
							(APPR bis)
							(NX zweihundert zwanzig)[01;31m)[00m)[01;36m)[00m[01;31m)[00m
			[01;31m(NX[00m
				(KON und)
				[01;31m(PX[00m
					(ADVX naturlich)
					(ADVX jetzt)
					(PX fur gehobene anspruche)[01;31m)[00m [01;33mMF) PX) SIMPX)[00m
				(NX das grandhotel)[01;31m)[00m[01;36m)[00m
		(SIMPX da musten sie allerdings schon funfhundert mark hinlegen)
		[01;36m(C[00m [01;31m(DM[00m
			(PWAV wobei)[01;31m)[00m[01;36m)[00m
		(SIMPX ich weis ja nicht ob das)))
Step:Modifier Attachment
{'new_parent': 'PX', 'new_family': ['ADVX', 'APPR', 'NX'], 'mover info': [('ADVX', (21, 22))], 'old_family': ['ADVX', 'PX'], 'start left siblings': [], 'auto preterminals': ('ADV', 'APPR', 'CARD', 'CARD', 'NN', 'APPR', 'NN'), 'start right siblings': ['PX'], 'end left siblings': [], 'auto preterminal span': (21, 28), 'movers': ['ADVX'], 'old_parent': 'MF', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['APPR', 'NX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(DM also)
		(SIMPX wir haben hier jetzt drei hotels die wir wieder gerne empfehlen)
		[01;31m(SIMPX[00m
			[01;36m(PX[00m [01;31m(LV[00m
				[01;31m(NX[00m
					(PX zum einen)
					(NX das hotel am thielenplatz)[01;31m)[00m[01;31m)[00m[01;36m)[00m
			[01;36m(SIMPX[00m
				(VF das)
				(LK liegt)
				(MF so bis hundert dreisig mark pro zimmer)[01;36m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF dann)
			(LK gibt)
			(MF es ein zentralhotel)[01;31m)[00m
		(SIMPX das ist wirklich auch sehr zentral)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(VF das)
				(LK geht)
				[01;36m(PX[00m
					(MF [01;33m(PX (MF[00m
						(ADVX so)
						[01;31m(PX[00m
							(APPR bis)
							(NX zweihundert zwanzig)[01;31m)[00m)[01;36m)[00m[01;31m)[00m
			[01;31m(NX[00m
				(KON und)
				[01;31m(PX[00m
					(ADVX naturlich)
					(ADVX jetzt)
					(PX fur gehobene anspruche)[01;31m)[00m [01;33mMF) PX) SIMPX)[00m
				(NX das grandhotel)[01;31m)[00m[01;36m)[00m
		(SIMPX da musten sie allerdings schon funfhundert mark hinlegen)
		[01;36m(C[00m [01;31m(DM[00m
			(PWAV wobei)[01;31m)[00m[01;36m)[00m
		(SIMPX ich weis ja nicht ob das)))
Step:Co-ordination
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'KON', 'PX'], 'mover info': [('KON', (46, 47)), ('PX', (47, 52))], 'old_family': ['KON', 'PX', 'NX'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'ADV', 'PPER', 'VAFIN', 'ADV', 'ADV', 'CARD', 'NN', 'PRELS', 'PPER', 'ADV', 'ADV', 'VVFIN', 'APPRART', 'PIS', 'ART', 'NN', 'APPRART', 'NE', 'PDS', 'VVFIN', 'ADV', 'APPR', 'CARD', 'CARD', 'NN', 'APPR', 'NN', 'KON', 'ADV', 'VVFIN', 'PPER', 'ART', 'NE', 'PDS', 'VAFIN', 'ADV', 'ADV', 'ADV', 'ADJD', 'PDS', 'VVFIN', 'ADV', 'APPR', 'CARD', 'CARD', 'KON', 'ADV', 'ADV', 'APPR', 'ADJA', 'NN', 'ART', 'NE', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'CARD', 'NN', 'VVINF', 'PWAV', 'PPER', 'VVFIN', 'ADV', 'PTKNEG', 'KOUS', 'PDS'), 'start right siblings': ['NX'], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (0, 69), 'adding node already present': False, 'movers': ['KON', 'PX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'Co-ordination', 'type': 'move', 'added label': 'C'}
(TOP
	(TURN
		(DM ja)
		(DM also)
		(SIMPX wir haben hier jetzt drei hotels die wir wieder gerne empfehlen)
		[01;31m(SIMPX[00m
			[01;36m(PX[00m [01;31m(LV[00m
				[01;31m(NX[00m
					(PX zum einen)
					(NX das hotel am thielenplatz)[01;31m)[00m[01;31m)[00m[01;36m)[00m
			[01;36m(SIMPX[00m
				(VF das)
				(LK liegt)
				(MF so bis hundert dreisig mark pro zimmer)[01;36m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF dann)
			(LK gibt)
			(MF es ein zentralhotel)[01;31m)[00m
		(SIMPX das ist wirklich auch sehr zentral)
		[01;36m(SIMPX[00m
			(SIMPX
				(VF das)
				(LK geht)
				[01;36m(PX[00m
					(MF
						[01;36m(PX[00m
							(MF
								(ADVX so)
								[01;31m(PX[00m
									(APPR bis)
									(NX zweihundert zwanzig)[01;31m)[00m)[01;36m)[00m
						(KON und)
						[01;31m(PX[00m
							(ADVX naturlich)
							(ADVX jetzt)
							(PX fur gehobene anspruche)[01;31m)[00m)[01;36m)[00m)
			(NX das grandhotel)[01;36m)[00m
		(SIMPX da musten sie allerdings schon funfhundert mark hinlegen)
		[01;36m(C[00m [01;31m(DM[00m
			(PWAV wobei)[01;31m)[00m[01;36m)[00m
		(SIMPX ich weis ja nicht ob das)))
Step:Different label
{'family': ['PX', 'VF', 'LK', 'MF'], 'auto preterminal span': (13, 19), 'span': (13, 19), 'subtrees': ['NX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('APPRART', 'PIS', 'ART', 'NN', 'APPRART', 'NE'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('LV', 'PX')}
(TOP
	(TURN
		(DM ja)
		(DM also)
		(SIMPX wir haben hier jetzt drei hotels die wir wieder gerne empfehlen)
		[01;31m(SIMPX[00m
			(PX
				[01;31m(NX[00m
					(PX zum einen)
					(NX das hotel am thielenplatz)[01;31m)[00m)
			[01;36m(SIMPX[00m
				(VF das)
				(LK liegt)
				(MF so bis hundert dreisig mark pro zimmer)[01;36m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF dann)
			(LK gibt)
			(MF es ein zentralhotel)[01;31m)[00m
		(SIMPX das ist wirklich auch sehr zentral)
		[01;36m(SIMPX[00m
			(SIMPX
				(VF das)
				(LK geht)
				[01;36m(PX[00m
					(MF
						[01;36m(PX[00m
							(MF
								(ADVX so)
								[01;31m(PX[00m
									(APPR bis)
									(NX zweihundert zwanzig)[01;31m)[00m)[01;36m)[00m
						(KON und)
						[01;31m(PX[00m
							(ADVX naturlich)
							(ADVX jetzt)
							(PX fur gehobene anspruche)[01;31m)[00m)[01;36m)[00m)
			(NX das grandhotel)[01;36m)[00m
		(SIMPX da musten sie allerdings schon funfhundert mark hinlegen)
		[01;36m(C[00m [01;31m(DM[00m
			(PWAV wobei)[01;31m)[00m[01;36m)[00m
		(SIMPX ich weis ja nicht ob das)))
Step:Single Word Phrase
{'family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX', 'C', 'SIMPX'], 'auto preterminal span': (62, 63), 'span': (62, 63), 'subtrees': ['PWAV'], 'parent': 'TURN', 'over_word': True, 'auto preterminals': ('PWAV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('DM', 'C')}
(TOP
	(TURN
		(DM ja)
		(DM also)
		(SIMPX wir haben hier jetzt drei hotels die wir wieder gerne empfehlen)
		[01;31m(SIMPX[00m
			(PX
				[01;31m(NX[00m
					(PX zum einen)
					(NX das hotel am thielenplatz)[01;31m)[00m)
			[01;36m(SIMPX[00m
				(VF das)
				(LK liegt)
				(MF so bis hundert dreisig mark pro zimmer)[01;36m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF dann)
			(LK gibt)
			(MF es ein zentralhotel)[01;31m)[00m
		(SIMPX das ist wirklich auch sehr zentral)
		[01;36m(SIMPX[00m
			(SIMPX
				(VF das)
				(LK geht)
				[01;36m(PX[00m
					(MF
						[01;36m(PX[00m
							(MF
								(ADVX so)
								[01;31m(PX[00m
									(APPR bis)
									(NX zweihundert zwanzig)[01;31m)[00m)[01;36m)[00m
						(KON und)
						[01;31m(PX[00m
							(ADVX naturlich)
							(ADVX jetzt)
							(PX fur gehobene anspruche)[01;31m)[00m)[01;36m)[00m)
			(NX das grandhotel)[01;36m)[00m
		(SIMPX da musten sie allerdings schon funfhundert mark hinlegen)
		(C wobei)
		(SIMPX ich weis ja nicht ob das)))
Step:PP Attachment
{'new_parent': 'TURN', 'new_family': ['DM', 'DM', 'SIMPX', 'PX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX', 'C', 'SIMPX'], 'mover info': [('PX', (13, 19))], 'old_family': ['PX', 'VF', 'LK', 'MF'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'ADV', 'PPER', 'VAFIN', 'ADV', 'ADV', 'CARD', 'NN', 'PRELS', 'PPER', 'ADV', 'ADV', 'VVFIN', 'APPRART', 'PIS', 'ART', 'NN', 'APPRART', 'NE', 'PDS', 'VVFIN', 'ADV', 'APPR', 'CARD', 'CARD', 'NN', 'APPR', 'NN', 'KON', 'ADV', 'VVFIN', 'PPER', 'ART', 'NE', 'PDS', 'VAFIN', 'ADV', 'ADV', 'ADV', 'ADJD', 'PDS', 'VVFIN', 'ADV', 'APPR', 'CARD', 'CARD', 'KON', 'ADV', 'ADV', 'APPR', 'ADJA', 'NN', 'ART', 'NE', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'CARD', 'NN', 'VVINF', 'PWAV', 'PPER', 'VVFIN', 'ADV', 'PTKNEG', 'KOUS', 'PDS'), 'start right siblings': ['VF', 'LK', 'MF'], 'end left siblings': ['DM', 'DM', 'SIMPX'], 'auto preterminal span': (0, 69), 'movers': ['PX'], 'old_parent': 'SIMPX', 'end right siblings': ['SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX', 'C', 'SIMPX'], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(DM also)
		(SIMPX wir haben hier jetzt drei hotels die wir wieder gerne empfehlen)
		(PX
			[01;31m(NX[00m
				(PX zum einen)
				(NX das hotel am thielenplatz)[01;31m)[00m)
		(SIMPX das liegt so bis hundert dreisig mark pro zimmer)
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF dann)
			(LK gibt)
			(MF es ein zentralhotel)[01;31m)[00m
		(SIMPX das ist wirklich auch sehr zentral)
		[01;36m(SIMPX[00m
			(SIMPX
				(VF das)
				(LK geht)
				[01;36m(PX[00m
					(MF
						[01;36m(PX[00m
							(MF
								(ADVX so)
								[01;31m(PX[00m
									(APPR bis)
									(NX zweihundert zwanzig)[01;31m)[00m)[01;36m)[00m
						(KON und)
						[01;31m(PX[00m
							(ADVX naturlich)
							(ADVX jetzt)
							(PX fur gehobene anspruche)[01;31m)[00m)[01;36m)[00m)
			(NX das grandhotel)[01;36m)[00m
		(SIMPX da musten sie allerdings schon funfhundert mark hinlegen)
		(C wobei)
		(SIMPX ich weis ja nicht ob das)))
Step:Co-ordination
{'new_parent': 'PX', 'new_family': ['MF', 'KON', 'ADVX', 'ADVX', 'PX'], 'mover info': [('MF', (42, 46)), ('KON', (46, 47))], 'old_family': ['MF', 'KON', 'PX'], 'start left siblings': [], 'auto preterminals': ('ADV', 'APPR', 'CARD', 'CARD', 'KON', 'ADV', 'ADV', 'APPR', 'ADJA', 'NN'), 'start right siblings': ['PX'], 'end left siblings': [], 'auto preterminal span': (42, 52), 'movers': ['MF', 'KON'], 'old_parent': 'MF', 'end right siblings': ['ADVX', 'ADVX', 'PX'], 'classified_type': 'Co-ordination', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(DM also)
		(SIMPX wir haben hier jetzt drei hotels die wir wieder gerne empfehlen)
		(PX
			[01;31m(NX[00m
				(PX zum einen)
				(NX das hotel am thielenplatz)[01;31m)[00m)
		(SIMPX das liegt so bis hundert dreisig mark pro zimmer)
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF dann)
			(LK gibt)
			(MF es ein zentralhotel)[01;31m)[00m
		(SIMPX das ist wirklich auch sehr zentral)
		[01;36m(SIMPX[00m
			(SIMPX
				(VF das)
				(LK geht)
				(MF
					(PX
						[01;36m(PX[00m
							(MF
								(ADVX so)
								[01;31m(PX[00m
									(APPR bis)
									(NX zweihundert zwanzig)[01;31m)[00m)[01;36m)[00m
						(KON und)
						(ADVX naturlich)
						(ADVX jetzt)
						(PX fur gehobene anspruche))))
			(NX das grandhotel)[01;36m)[00m
		(SIMPX da musten sie allerdings schon funfhundert mark hinlegen)
		(C wobei)
		(SIMPX ich weis ja nicht ob das)))
Step:Modifier Attachment
{'new_parent': 'PX', 'new_family': ['ADVX', 'APPR', 'NX'], 'mover info': [('ADVX', (42, 43))], 'old_family': ['ADVX', 'PX'], 'start left siblings': [], 'auto preterminals': ('ADV', 'APPR', 'CARD', 'CARD'), 'start right siblings': ['PX'], 'end left siblings': [], 'auto preterminal span': (42, 46), 'movers': ['ADVX'], 'old_parent': 'MF', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['APPR', 'NX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(DM also)
		(SIMPX wir haben hier jetzt drei hotels die wir wieder gerne empfehlen)
		(PX
			[01;31m(NX[00m
				(PX zum einen)
				(NX das hotel am thielenplatz)[01;31m)[00m)
		(SIMPX das liegt so bis hundert dreisig mark pro zimmer)
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF dann)
			(LK gibt)
			(MF es ein zentralhotel)[01;31m)[00m
		(SIMPX das ist wirklich auch sehr zentral)
		[01;36m(SIMPX[00m
			(SIMPX das geht so bis zweihundert zwanzig und naturlich jetzt fur gehobene anspruche)
			(NX das grandhotel)[01;36m)[00m
		(SIMPX da musten sie allerdings schon funfhundert mark hinlegen)
		(C wobei)
		(SIMPX ich weis ja nicht ob das)))
Step:UNSET add
{'subtrees': ['SIMPX', 'NX'], 'family': ['DM', 'DM', 'SIMPX', 'PX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'C', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VVFIN', 'ADV', 'APPR', 'CARD', 'CARD', 'KON', 'ADV', 'ADV', 'APPR', 'ADJA', 'NN', 'ART', 'NE'), 'right siblings': [(SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VMFIN musten))) (MF (NX (PPER sie)) (ADVX (ADV allerdings)) (ADVX (ADV schon)) (NX (ADJX (CARD funfhundert)) (NN mark))) (VC (VXINF (VVINF hinlegen)))), (C (PWAV wobei)), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN weis))) (MF (ADVX (ADV ja)) (ADVX (PTKNEG nicht))) (NF (SIMPX (C (KOUS ob)) (MF (NX (PDS das))))))], 'left siblings': [(DM (PTKANT ja)), (DM (ADVX (ADV also))), (SIMPX (VF (NX (PPER wir))) (LK (VXFIN (VAFIN haben))) (MF (ADVX (ADV hier)) (ADVX (ADV jetzt)) (NX (ADJX (CARD drei)) (NN hotels))) (NF (R (C (NX (PRELS die))) (MF (NX (PPER wir)) (ADVX (ADV wieder)) (ADVX (ADV gerne))) (VC (VXFIN (VVFIN empfehlen)))))), (PX (NX (PX (APPRART zum) (NX (PIS einen))) (NX (NX (ART das) (NN hotel)) (PX (APPRART am) (NX (NE thielenplatz)))))), (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VVFIN liegt))) (MF (PX (PX (ADVX (ADV so)) (APPR bis) (NX (ADJX (CARD hundert) (CARD dreisig)) (NN mark))) (PX (APPR pro) (NX (NN zimmer)))))), (SIMPX (KOORD (KON und)) (VF (ADVX (ADV dann))) (LK (VXFIN (VVFIN gibt))) (MF (NX (PPER es)) (NX (ART ein) (NE zentralhotel)))), (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VAFIN ist))) (MF (ADVX (ADV wirklich)) (ADVX (ADV auch)) (ADJX (ADVX (ADV sehr)) (ADJD zentral))))], 'auto preterminal span': (40, 54), 'span': (40, 54), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM also)
		(SIMPX wir haben hier jetzt drei hotels die wir wieder gerne empfehlen)
		(PX
			[01;31m(NX[00m
				(PX zum einen)
				(NX das hotel am thielenplatz)[01;31m)[00m)
		(SIMPX das liegt so bis hundert dreisig mark pro zimmer)
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF dann)
			(LK gibt)
			(MF es ein zentralhotel)[01;31m)[00m
		(SIMPX das ist wirklich auch sehr zentral)
		(SIMPX das geht so bis zweihundert zwanzig und naturlich jetzt fur gehobene anspruche das grandhotel)
		(SIMPX da musten sie allerdings schon funfhundert mark hinlegen)
		(C wobei)
		(SIMPX ich weis ja nicht ob das)))
Step:Unary
{'subtrees': ['PX', 'NX'], 'family': ['NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'PIS', 'ART', 'NN', 'APPRART', 'NE'), 'right siblings': [], 'parent': 'PX', 'auto preterminal span': (13, 19), 'span': (13, 19), 'left siblings': [], 'label': 'NX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM also)
		(SIMPX wir haben hier jetzt drei hotels die wir wieder gerne empfehlen)
		(PX zum einen das hotel am thielenplatz)
		(SIMPX das liegt so bis hundert dreisig mark pro zimmer)
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF dann)
			(LK gibt)
			(MF es ein zentralhotel)[01;31m)[00m
		(SIMPX das ist wirklich auch sehr zentral)
		(SIMPX das geht so bis zweihundert zwanzig und naturlich jetzt fur gehobene anspruche das grandhotel)
		(SIMPX da musten sie allerdings schon funfhundert mark hinlegen)
		(C wobei)
		(SIMPX ich weis ja nicht ob das)))
Step:UNSET remove
{'subtrees': ['KOORD', 'VF', 'LK', 'MF'], 'family': ['DM', 'DM', 'SIMPX', 'PX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'C', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADV', 'PPER', 'VAFIN', 'ADV', 'ADV', 'CARD', 'NN', 'PRELS', 'PPER', 'ADV', 'ADV', 'VVFIN', 'APPRART', 'PIS', 'ART', 'NN', 'APPRART', 'NE', 'PDS', 'VVFIN', 'ADV', 'APPR', 'CARD', 'CARD', 'NN', 'APPR', 'NN', 'KON', 'ADV', 'VVFIN', 'PPER', 'ART', 'NE', 'PDS', 'VAFIN', 'ADV', 'ADV', 'ADV', 'ADJD', 'PDS', 'VVFIN', 'ADV', 'APPR', 'CARD', 'CARD', 'KON', 'ADV', 'ADV', 'APPR', 'ADJA', 'NN', 'ART', 'NE', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'CARD', 'NN', 'VVINF', 'PWAV', 'PPER', 'VVFIN', 'ADV', 'PTKNEG', 'KOUS', 'PDS'), 'right siblings': ['SIMPX', 'SIMPX', 'SIMPX', 'C', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 69), 'span': (28, 34), 'left siblings': ['DM', 'DM', 'SIMPX', 'PX', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ja also wir haben hier jetzt drei hotels die wir wieder gerne empfehlen zum einen das hotel am thielenplatz das liegt so bis hundert dreisig mark pro zimmer und dann gibt es ein zentralhotel das ist wirklich auch sehr zentral das geht so bis zweihundert zwanzig und naturlich jetzt fur gehobene anspruche das grandhotel da musten sie allerdings schon funfhundert mark hinlegen wobei ich weis ja nicht ob das)

Sentence 283:
0 Initial errors
0 on fringe, 0 iterations

Sentence 284:
0 Initial errors
0 on fringe, 0 iterations

Sentence 285:
0 Initial errors
0 on fringe, 0 iterations

Sentence 286:
3 Initial errors
0 on fringe, 1 iterations
3 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		[01;31m(ADVX[00m
			(ADVX naturlich)
			[01;33m(PX[00m (ADVX da)[01;31m)[00m
		[01;31m(PX[00m
			(ADVX grade)
			(PX am wochenende)[01;31m)[00m)) [01;33mPX)[00m
Step:Modifier Attachment
{'new_parent': 'PX', 'new_family': ['ADVX', 'ADVX', 'PX'], 'mover info': [('ADVX', (2, 3))], 'old_family': ['ADVX', 'ADVX'], 'start left siblings': ['ADVX'], 'auto preterminals': ('PTKANT', 'ADV', 'ADV', 'ADV', 'APPRART', 'NN'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 6), 'movers': ['ADVX'], 'old_parent': 'ADVX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['ADVX', 'PX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP ja naturlich da grade am wochenende)

Sentence 287:
0 Initial errors
0 on fringe, 0 iterations

Sentence 288:
0 Initial errors
0 on fringe, 0 iterations

Sentence 289:
0 Initial errors
0 on fringe, 0 iterations

Sentence 290:
0 Initial errors
0 on fringe, 0 iterations

Sentence 291:
0 Initial errors
0 on fringe, 0 iterations

Sentence 292:
0 Initial errors
0 on fringe, 0 iterations

Sentence 293:
8 Initial errors
0 on fringe, 6 iterations
3 Error:Co-ordination
1 Error:UNSET add
1 Error:Modifier Attachment
1 Error:Modifier Attachment
1 Error:NP Internal Structure
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX
			(VF da)
			(LK fahren)
			[01;36m(NX[00m
				[01;31m(MF[00m
					(ADVX erst)
					(ADVX mal)
					[01;33m(NX[00m (NX verschiedene zuge)[01;31m)[00m
				[01;36m(NX[00m [01;31m(NF[00m [01;33m(NX[00m
					(NX drei)
					[01;31m(ADVX[00m
						[01;36m(ADVX[00m
							(ADVX morgens)
							(ADVX mittags) [01;33mNX)[00m[01;36m)[00m
						(KON und)
						(ADVX abends)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m) [01;33mNX)[00m
		(SIMPX da konnten sie sich schon mal auswahlen)))
Step:Co-ordination
{'new_parent': 'NF', 'new_family': ['NX', 'ADVX', 'KON', 'ADVX'], 'mover info': [('KON', (9, 10)), ('ADVX', (10, 11))], 'old_family': ['ADVX', 'ADVX', 'KON', 'ADVX'], 'start left siblings': ['ADVX', 'ADVX'], 'auto preterminals': ('CARD', 'ADV', 'ADV', 'KON', 'ADV'), 'start right siblings': [], 'end left siblings': ['NX', 'ADVX'], 'auto preterminal span': (6, 11), 'adding node already present': False, 'movers': ['KON', 'ADVX'], 'old_parent': 'ADVX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'Co-ordination', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(SIMPX
			(VF da)
			(LK fahren)
			[01;36m(NX[00m
				[01;31m(MF[00m
					(ADVX erst)
					(ADVX mal)
					[01;33m(NX[00m (NX verschiedene zuge)[01;31m)[00m
				(NX
					[01;31m(NF[00m
						[01;36m(NX[00m
							(NX drei)
							(ADVX morgens mittags)[01;36m)[00m
						(KON und)
						(ADVX abends)[01;31m)[00m)[01;36m)[00m) [01;33mNX)[00m
		(SIMPX da konnten sie sich schon mal auswahlen)))
Step:UNSET add
{'subtrees': ['MF', 'NX'], 'family': ['VF', 'LK', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'ADJA', 'NN', 'CARD', 'ADV', 'ADV', 'KON', 'ADV'), 'right siblings': [], 'left siblings': [(VF (ADVX (ADV da))), (LK (VXFIN (VVFIN fahren)))], 'auto preterminal span': (2, 11), 'span': (2, 11), 'parent': 'SIMPX', 'label': 'NX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SIMPX
			(VF da)
			(LK fahren)
			(NX
				[01;31m(MF[00m
					(ADVX erst)
					(ADVX mal)
					[01;33m(NX[00m (NX verschiedene zuge)[01;31m)[00m
				(NX
					[01;31m(NF[00m
						[01;36m(NX[00m
							(NX drei)
							(ADVX morgens mittags)[01;36m)[00m
						(KON und)
						(ADVX abends)[01;31m)[00m))) [01;33mNX)[00m
		(SIMPX da konnten sie sich schon mal auswahlen)))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADVX'], 'family': ['NX', 'KON', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'ADV', 'ADV'), 'right siblings': [(KON und), (ADVX (ADV abends))], 'left siblings': [], 'auto preterminal span': (6, 9), 'span': (6, 9), 'parent': 'NF', 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		(SIMPX
			(VF da)
			(LK fahren)
			(NX
				[01;31m(MF[00m
					(ADVX erst)
					(ADVX mal)
					[01;33m(NX[00m (NX verschiedene zuge)[01;31m)[00m
				(NX
					[01;31m(NF[00m
						(NX drei morgens mittags)
						(KON und)
						(ADVX abends)[01;31m)[00m))) [01;33mNX)[00m
		(SIMPX da konnten sie sich schon mal auswahlen)))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'ADVX', 'NX'], 'family': ['MF', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'ADJA', 'NN', 'CARD', 'ADV', 'ADV', 'KON', 'ADV'), 'right siblings': ['NX'], 'parent': 'NX', 'auto preterminal span': (2, 11), 'span': (2, 6), 'left siblings': [], 'label': 'MF', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX
			(VF da)
			(LK fahren)
			(NX
				(ADVX erst)
				(ADVX mal)
				[01;36m(NX[00m
					(NX verschiedene zuge)
					(NX
						[01;31m(NF[00m
							(NX drei morgens mittags)
							(KON und)
							(ADVX abends)[01;31m)[00m)[01;36m)[00m))
		(SIMPX da konnten sie sich schon mal auswahlen)))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['ADVX', 'ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJA', 'NN', 'CARD', 'ADV', 'ADV', 'KON', 'ADV'), 'right siblings': [], 'left siblings': [(ADVX (ADV erst)), (ADVX (ADV mal))], 'auto preterminal span': (4, 11), 'span': (4, 11), 'parent': 'NX', 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'add'}
(TOP
	(TURN
		(SIMPX
			(VF da)
			(LK fahren)
			(NX
				(ADVX erst)
				(ADVX mal)
				(NX
					(NX verschiedene zuge)
					(NX
						[01;31m(NF[00m
							(NX drei morgens mittags)
							(KON und)
							(ADVX abends)[01;31m)[00m))))
		(SIMPX da konnten sie sich schon mal auswahlen)))
Step:Unary
{'subtrees': ['NX', 'KON', 'ADVX'], 'family': ['NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'ADV', 'ADV', 'KON', 'ADV'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (6, 11), 'span': (6, 11), 'left siblings': [], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP da fahren erst mal verschiedene zuge drei morgens mittags und abends da konnten sie sich schon mal auswahlen)

Sentence 294:
0 Initial errors
0 on fringe, 0 iterations

Sentence 295:
7 Initial errors
0 on fringe, 5 iterations
3 Error:Modifier Attachment
1 Error:Single Word Phrase
1 Error:Modifier Attachment
1 Error:UNSET remove
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(NX[00m
			(KON und)
			(ADVX dann)
			[01;31m(NX[00m
				(NX diese zwei nachte)
				(R die sie da bleiben mochten)[01;31m)[00m[01;31m)[00m
		(SIMPX da wurde ich mal nachschauen)
		(SIMPX da haben wir verschiedene preisklassen)
		(SIMPX
			(VF und zwar)
			(LK gibt)
			(MF
				(NX es)
				(APPR zwischen)
				(PX
					(PX von funfundachtzig)
					(PX
						[01;31m(PX[00m
							(APPR bis)
							[01;36m(ADVX[00m [01;31m(NX[00m [01;33m(NX[00m
								(CARD funfhundert)[01;31m)[00m[01;36m)[00m[01;31m)[00m
						[01;31m(ADVX[00m
							(ADV aufwarts)[01;31m)[00m)))))) [01;33mNX)[00m
Step:Modifier Attachment
{'new_parent': 'NX', 'new_family': ['CARD', 'ADVX'], 'mover info': [('ADVX', (29, 30))], 'old_family': ['PX', 'ADVX'], 'start left siblings': ['PX'], 'auto preterminals': ('APPR', 'CARD', 'ADV'), 'start right siblings': [], 'end left siblings': ['CARD'], 'auto preterminal span': (27, 30), 'movers': ['ADVX'], 'old_parent': 'PX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;31m(NX[00m
			(KON und)
			(ADVX dann)
			[01;31m(NX[00m
				(NX diese zwei nachte)
				(R die sie da bleiben mochten)[01;31m)[00m[01;31m)[00m
		(SIMPX da wurde ich mal nachschauen)
		(SIMPX da haben wir verschiedene preisklassen)
		(SIMPX
			(VF und zwar)
			(LK gibt)
			(MF
				(NX es)
				(APPR zwischen)
				(PX
					(PX von funfundachtzig)
					(PX
						(APPR bis)
						(NX
							[01;36m(ADVX[00m
								(CARD funfhundert)[01;36m)[00m
							[01;31m(ADVX[00m
								(ADV aufwarts)[01;31m)[00m)))))))
Step:Single Word Phrase
{'subtrees': ['CARD'], 'family': ['ADVX', 'ADVX'], 'over_word': True, 'over words': True, 'auto preterminals': ('CARD',), 'right siblings': [(ADVX (ADV aufwarts))], 'left siblings': [], 'auto preterminal span': (28, 29), 'span': (28, 29), 'parent': 'NX', 'label': 'ADVX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		[01;31m(NX[00m
			(KON und)
			(ADVX dann)
			[01;31m(NX[00m
				(NX diese zwei nachte)
				(R die sie da bleiben mochten)[01;31m)[00m[01;31m)[00m
		(SIMPX da wurde ich mal nachschauen)
		(SIMPX da haben wir verschiedene preisklassen)
		(SIMPX
			(VF und zwar)
			(LK gibt)
			(MF
				(NX es)
				(APPR zwischen)
				(PX
					(PX von funfundachtzig)
					(PX
						(APPR bis)
						(NX
							(ADVX funfhundert)
							[01;31m(ADVX[00m
								(ADV aufwarts)[01;31m)[00m)))))))
Step:Modifier Attachment
{'subtrees': ['KON', 'ADVX', 'NX'], 'family': ['NX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'ADV', 'PDAT', 'CARD', 'NN', 'PRELS', 'PPER', 'ADV', 'VVINF', 'VMFIN', 'ADV', 'VAFIN', 'PPER', 'ADV', 'VVINF', 'ADV', 'VAFIN', 'PPER', 'ADJA', 'NN', 'KON', 'ADV', 'VVFIN', 'PPER', 'APPR', 'APPR', 'CARD', 'APPR', 'CARD', 'ADV'), 'right siblings': ['SIMPX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 30), 'span': (0, 10), 'left siblings': [], 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(KON und)
		(ADVX dann)
		[01;31m(NX[00m
			(NX diese zwei nachte)
			(R die sie da bleiben mochten)[01;31m)[00m
		(SIMPX da wurde ich mal nachschauen)
		(SIMPX da haben wir verschiedene preisklassen)
		(SIMPX
			(VF und zwar)
			(LK gibt)
			(MF
				(NX es)
				(APPR zwischen)
				(PX
					(PX von funfundachtzig)
					(PX
						(APPR bis)
						(NX
							(ADVX funfhundert)
							[01;31m(ADVX[00m
								(ADV aufwarts)[01;31m)[00m)))))))
Step:UNSET remove
{'subtrees': ['NX', 'R'], 'family': ['KON', 'ADVX', 'NX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'ADV', 'PDAT', 'CARD', 'NN', 'PRELS', 'PPER', 'ADV', 'VVINF', 'VMFIN', 'ADV', 'VAFIN', 'PPER', 'ADV', 'VVINF', 'ADV', 'VAFIN', 'PPER', 'ADJA', 'NN', 'KON', 'ADV', 'VVFIN', 'PPER', 'APPR', 'APPR', 'CARD', 'APPR', 'CARD', 'ADV'), 'right siblings': ['SIMPX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 30), 'span': (2, 10), 'left siblings': ['KON', 'ADVX'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(KON und)
		(ADVX dann)
		(NX diese zwei nachte)
		(R die sie da bleiben mochten)
		(SIMPX da wurde ich mal nachschauen)
		(SIMPX da haben wir verschiedene preisklassen)
		(SIMPX
			(VF und zwar)
			(LK gibt)
			(MF
				(NX es)
				(APPR zwischen)
				(PX
					(PX von funfundachtzig)
					(PX
						(APPR bis)
						(NX
							(ADVX funfhundert)
							[01;31m(ADVX[00m
								(ADV aufwarts)[01;31m)[00m)))))))
Step:Single Word Phrase
{'subtrees': ['ADV'], 'family': ['ADVX', 'ADVX'], 'over_word': True, 'over words': True, 'auto preterminals': ('CARD', 'ADV'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (28, 30), 'span': (29, 30), 'left siblings': ['ADVX'], 'label': 'ADVX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP und dann diese zwei nachte die sie da bleiben mochten da wurde ich mal nachschauen da haben wir verschiedene preisklassen und zwar gibt es zwischen von funfundachtzig bis funfhundert aufwarts)

Sentence 296:
10 Initial errors
0 on fringe, 6 iterations
3 Error:Modifier Attachment
2 Error:Different label
2 Error:Single Word Phrase
1 Error:Unary
1 Error:Single Word Phrase
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SIMPX[00m
	(TOP
		(TURN
			(SIMPX es kann schon eine gehobene preisklasse sein)
			(SIMPX
				(KOORD und)
				(VF hauptsache)
				(LK ist)
				[01;36m(R[00m
					(NF
						[01;31m(SIMPX[00m
							[01;31m(C[00m
								(KOUS das)[01;31m)[00m
							[01;36m(NX[00m
								(MF
									[01;31m(NX[00m
										(ART das)
										[01;36m(NX[00m
											(NN [01;33m(NX[00m hotel)[01;36m)[00m[01;31m)[00m
									[01;36m(NX[00m [01;31m(ADJX[00m
										(ADJD zentral)[01;31m)[00m[01;36m)[00m) [01;33mNX)[00m[01;36m)[00m
							(VC liegt)[01;31m)[00m)[01;36m)[00m)))[01;36m)[00m
Step:Modifier Attachment
{'new_parent': 'NX', 'new_family': ['ART', 'NN', 'ADJX'], 'mover info': [('ADJX', (13, 14))], 'old_family': ['NX', 'ADJX'], 'start left siblings': ['NX'], 'auto preterminals': ('ART', 'NN', 'ADJD'), 'start right siblings': [], 'end left siblings': ['ART', 'NN'], 'auto preterminal span': (11, 14), 'adding node already present': False, 'movers': ['ADJX'], 'old_parent': 'MF', 'POS confusion': ('ADJD', 'ADJD'), 'added and moved': True, 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'NX'}
[01;36m(SIMPX[00m
	(TOP
		(TURN
			(SIMPX es kann schon eine gehobene preisklasse sein)
			(SIMPX
				(KOORD und)
				(VF hauptsache)
				(LK ist)
				[01;36m(R[00m
					(NF
						[01;31m(SIMPX[00m
							[01;31m(C[00m
								(KOUS das)[01;31m)[00m
							(MF
								(NX
									(ART das)
									(NX
										[01;36m(NX[00m
											(NN hotel)[01;36m)[00m
										[01;36m(NX[00m [01;31m(ADJX[00m
											(ADJD zentral)[01;31m)[00m[01;36m)[00m)))
							(VC liegt)[01;31m)[00m)[01;36m)[00m)))[01;36m)[00m
Step:Different label
{'family': ['R'], 'auto preterminal span': (10, 15), 'span': (10, 15), 'subtrees': ['C', 'MF', 'VC'], 'parent': 'NF', 'over_word': False, 'auto preterminals': ('KOUS', 'ART', 'NN', 'ADJD', 'VVFIN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('SIMPX', 'R')}
[01;36m(SIMPX[00m
	(TOP
		(TURN
			(SIMPX es kann schon eine gehobene preisklasse sein)
			(SIMPX
				(KOORD und)
				(VF hauptsache)
				(LK ist)
				(NF
					(R
						[01;31m(C[00m
							(KOUS das)[01;31m)[00m
						(MF
							(NX
								(ART das)
								(NX
									[01;36m(NX[00m
										(NN hotel)[01;36m)[00m
									[01;36m(NX[00m [01;31m(ADJX[00m
										(ADJD zentral)[01;31m)[00m[01;36m)[00m)))
						(VC liegt))))))[01;36m)[00m
Step:Single Word Phrase
{'family': ['NN', 'NX'], 'auto preterminal span': (13, 14), 'span': (13, 14), 'subtrees': ['ADJD'], 'parent': 'NX', 'over_word': True, 'auto preterminals': ('ADJD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'NX')}
[01;36m(SIMPX[00m
	(TOP
		(TURN
			(SIMPX es kann schon eine gehobene preisklasse sein)
			(SIMPX
				(KOORD und)
				(VF hauptsache)
				(LK ist)
				(NF
					(R
						[01;31m(C[00m
							(KOUS das)[01;31m)[00m
						(MF
							(NX
								(ART das)
								(NX
									[01;36m(NX[00m
										(NN hotel)[01;36m)[00m
									(NX zentral))))
						(VC liegt))))))[01;36m)[00m
Step:Unary
{'subtrees': ['TURN'], 'family': ['SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VMFIN', 'ADV', 'ART', 'ADJA', 'NN', 'VAINF', 'KON', 'NN', 'VAFIN', 'KOUS', 'ART', 'NN', 'ADJD', 'VVFIN'), 'right siblings': [], 'left siblings': [], 'auto preterminal span': (0, 15), 'span': (0, 15), 'parent': 'TOP', 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(SIMPX
		(TURN
			(SIMPX es kann schon eine gehobene preisklasse sein)
			(SIMPX
				(KOORD und)
				(VF hauptsache)
				(LK ist)
				(NF
					(R
						[01;31m(C[00m
							(KOUS das)[01;31m)[00m
						(MF
							(NX
								(ART das)
								(NX
									[01;36m(NX[00m
										(NN hotel)[01;36m)[00m
									(NX zentral))))
						(VC liegt)))))))
Step:Single Word Phrase
{'subtrees': ['NN'], 'family': ['NX', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('NN',), 'right siblings': [(NX (ADJD zentral))], 'left siblings': [], 'auto preterminal span': (12, 13), 'span': (12, 13), 'parent': 'NX', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(SIMPX
		(TURN
			(SIMPX es kann schon eine gehobene preisklasse sein)
			(SIMPX
				(KOORD und)
				(VF hauptsache)
				(LK ist)
				(NF
					(R
						[01;31m(C[00m
							(KOUS das)[01;31m)[00m
						(MF das hotel zentral)
						(VC liegt)))))))
Step:Single Word Phrase
{'subtrees': ['KOUS'], 'family': ['C', 'MF', 'VC'], 'over_word': True, 'over words': True, 'auto preterminals': ('KOUS', 'ART', 'NN', 'ADJD', 'VVFIN'), 'right siblings': ['MF', 'VC'], 'parent': 'R', 'auto preterminal span': (10, 15), 'span': (10, 11), 'left siblings': [], 'label': 'C', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP es kann schon eine gehobene preisklasse sein und hauptsache ist das das hotel zentral liegt)

Sentence 297:
0 Initial errors
0 on fringe, 0 iterations

Sentence 298:
0 Initial errors
0 on fringe, 0 iterations

Sentence 299:
3 Initial errors
0 on fringe, 2 iterations
2 Error:UNSET move
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(DM[00m
			[01;36m(DM[00m
				(ITJ ach)[01;36m)[00m
			[01;36m(DM[00m
				(ITJ gut)[01;36m)[00m[01;31m)[00m
		(DM herr doll)))
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['ITJ', 'DM', 'DM'], 'mover info': [('ITJ', (0, 1))], 'old_family': ['ITJ', 'ITJ'], 'start left siblings': [], 'auto preterminals': ('ITJ', 'ITJ', 'NN', 'NE'), 'start right siblings': ['ITJ'], 'end left siblings': [], 'auto preterminal span': (0, 4), 'movers': ['ITJ'], 'old_parent': 'DM', 'POS confusion': ('ITJ', 'ITJ'), 'end right siblings': ['DM', 'DM'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		[01;36m(DM[00m
			(ITJ ach)[01;36m)[00m
		(DM gut)
		(DM herr doll)))
Step:Single Word Phrase
{'subtrees': ['ITJ'], 'family': ['DM', 'DM', 'DM'], 'over_word': True, 'over words': True, 'auto preterminals': ('ITJ',), 'right siblings': [(DM (ITJ gut)), (DM (NX (NN herr) (NE doll)))], 'left siblings': [], 'auto preterminal span': (0, 1), 'span': (0, 1), 'parent': 'TURN', 'label': 'DM', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP ach gut herr doll)

Sentence 300:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM
			[01;31m(NX[00m
				(NE oborski)[01;31m)[00m)))
Step:Single Word Phrase
{'subtrees': ['NE'], 'family': ['NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('NE',), 'right siblings': [], 'parent': 'DM', 'auto preterminal span': (0, 1), 'span': (0, 1), 'left siblings': [], 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP oborski)

Sentence 301:
0 Initial errors
0 on fringe, 0 iterations

Sentence 302:
0 Initial errors
0 on fringe, 0 iterations

Sentence 303:
0 Initial errors
0 on fringe, 0 iterations

Sentence 304:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX
			(KOORD und)
			(LV die bank)
			(VF das)
			(LK ist)
			(MF
				(NX
					(NX die raiffeisenbank)
					[01;36m(NF[00m
						(PX
							(APPR in)
							(NX bonn))[01;36m)[00m)))))
Step:Unary
{'subtrees': ['PX'], 'family': ['NX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'NE'), 'right siblings': [], 'left siblings': [(NX (ART die) (NE raiffeisenbank))], 'auto preterminal span': (7, 9), 'span': (7, 9), 'parent': 'NX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP und die bank das ist die raiffeisenbank in bonn)

Sentence 305:
3 Initial errors
0 on fringe, 2 iterations
2 Error:Different label
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		[01;36m(PX[00m [01;31m(NX[00m
			[01;31m(NX[00m
				(NE raiffeisenbank)[01;31m)[00m
			(NX bonn)[01;31m)[00m[01;36m)[00m))
Step:Different label
{'family': ['DM', 'PX'], 'auto preterminal span': (1, 3), 'span': (1, 3), 'subtrees': ['NX', 'NX'], 'parent': 'TURN', 'over_word': False, 'auto preterminals': ('NE', 'NE'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('NX', 'PX')}
(TOP
	(TURN
		(DM ja)
		(PX
			[01;31m(NX[00m
				(NE raiffeisenbank)[01;31m)[00m
			(NX bonn))))
Step:Single Word Phrase
{'subtrees': ['NE'], 'family': ['NX', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('NE', 'NE'), 'right siblings': ['NX'], 'parent': 'PX', 'auto preterminal span': (1, 3), 'span': (1, 2), 'left siblings': [], 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP ja raiffeisenbank bonn)

Sentence 306:
0 Initial errors
0 on fringe, 0 iterations

Sentence 307:
8 Initial errors
0 on fringe, 5 iterations
2 Error:UNSET move
2 Error:UNSET move
2 Error:Co-ordination
1 Error:Single Word Phrase
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM aha)
		[01;31m(DM[00m
			[01;36m(DM[00m
				(ITJ ach)[01;36m)[00m
			[01;36m(DM[00m
				(ITJ gut)[01;36m)[00m[01;31m)[00m
		(SIMPX
			(VF das)
			(LK hort)
			(MF sich immer so)
			(VC an)
			(NF
				(SIMPX
					[01;31m(C[00m
						(KOUS als)
						[01;36m(C[00m
							(KOUS ob)[01;36m)[00m[01;31m)[00m
					(MF
						(NX das)
						(NX
							[01;31m(NX[00m
								(NX nix)
								[01;33m(NX[00m (NX halbes)[01;31m)[00m
							(KON und)
							(NX nix ganzes))) [01;33mNX)[00m
					(VC ist))))
		[01;31m(SIMPX[00m
			(KOORD oder)
			(VF wie)
			(LK sehe)
			(MF ich das)[01;31m)[00m))
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['DM', 'ITJ', 'DM', 'SIMPX', 'SIMPX'], 'mover info': [('ITJ', (1, 2))], 'old_family': ['ITJ', 'ITJ'], 'start left siblings': [], 'auto preterminals': ('ITJ', 'ITJ', 'ITJ', 'PDS', 'VVFIN', 'PRF', 'ADV', 'ADV', 'PTKVZ', 'KOUS', 'KOUS', 'PDS', 'PIS', 'NN', 'KON', 'PIS', 'NN', 'VAFIN', 'KON', 'PWAV', 'VVFIN', 'PPER', 'PDS'), 'start right siblings': ['ITJ'], 'end left siblings': ['DM'], 'auto preterminal span': (0, 23), 'movers': ['ITJ'], 'old_parent': 'DM', 'POS confusion': ('ITJ', 'ITJ'), 'end right siblings': ['DM', 'SIMPX', 'SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM aha)
		[01;36m(DM[00m
			(ITJ ach)[01;36m)[00m
		(DM gut)
		(SIMPX
			(VF das)
			(LK hort)
			(MF sich immer so)
			(VC an)
			(NF
				(SIMPX
					[01;31m(C[00m
						(KOUS als)
						[01;36m(C[00m
							(KOUS ob)[01;36m)[00m[01;31m)[00m
					(MF
						(NX das)
						(NX
							[01;31m(NX[00m
								(NX nix)
								[01;33m(NX[00m (NX halbes)[01;31m)[00m
							(KON und)
							(NX nix ganzes))) [01;33mNX)[00m
					(VC ist))))
		[01;31m(SIMPX[00m
			(KOORD oder)
			(VF wie)
			(LK sehe)
			(MF ich das)[01;31m)[00m))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['KOUS', 'C', 'MF', 'VC'], 'mover info': [('KOUS', (9, 10))], 'old_family': ['KOUS', 'KOUS'], 'start left siblings': [], 'auto preterminals': ('KOUS', 'KOUS', 'PDS', 'PIS', 'NN', 'KON', 'PIS', 'NN', 'VAFIN'), 'start right siblings': ['KOUS'], 'end left siblings': [], 'auto preterminal span': (9, 18), 'movers': ['KOUS'], 'old_parent': 'C', 'POS confusion': ('KOUS', 'KOUS'), 'end right siblings': ['C', 'MF', 'VC'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM aha)
		[01;36m(DM[00m
			(ITJ ach)[01;36m)[00m
		(DM gut)
		(SIMPX
			(VF das)
			(LK hort)
			(MF sich immer so)
			(VC an)
			(NF
				(SIMPX
					(KOUS als)
					(C ob)
					(MF
						(NX das)
						(NX
							[01;31m(NX[00m
								(NX nix)
								[01;33m(NX[00m (NX halbes)[01;31m)[00m
							(KON und)
							(NX nix ganzes))) [01;33mNX)[00m
					(VC ist))))
		[01;31m(SIMPX[00m
			(KOORD oder)
			(VF wie)
			(LK sehe)
			(MF ich das)[01;31m)[00m))
Step:Co-ordination
{'new_parent': 'NX', 'new_family': ['NX', 'NX', 'KON', 'NX'], 'mover info': [('NX', (13, 14))], 'old_family': ['NX', 'NX'], 'start left siblings': ['NX'], 'auto preterminals': ('PIS', 'NN', 'KON', 'PIS', 'NN'), 'start right siblings': [], 'end left siblings': ['NX'], 'auto preterminal span': (12, 17), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'NX', 'POS confusion': ('NN', 'NN'), 'added and moved': True, 'end right siblings': ['KON', 'NX'], 'classified_type': 'Co-ordination', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(DM aha)
		[01;36m(DM[00m
			(ITJ ach)[01;36m)[00m
		(DM gut)
		(SIMPX das hort sich immer so an als ob das nix halbes und nix ganzes ist)
		[01;31m(SIMPX[00m
			(KOORD oder)
			(VF wie)
			(LK sehe)
			(MF ich das)[01;31m)[00m))
Step:Single Word Phrase
{'subtrees': ['ITJ'], 'family': ['DM', 'DM', 'DM', 'SIMPX', 'SIMPX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ITJ',), 'right siblings': [(DM (ITJ gut)), (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VVFIN hort))) (MF (NX (PRF sich)) (ADVX (ADV immer)) (ADVX (ADV so))) (VC (PTKVZ an)) (NF (SIMPX (KOUS als) (C (KOUS ob)) (MF (NX (PDS das)) (NX (NX (PIS nix)) (NX (NX (NN halbes)) (KON und) (NX (NX (PIS nix)) (NX (NN ganzes)))))) (VC (VXFIN (VAFIN ist)))))), (SIMPX (KOORD (KON oder)) (VF (ADJX (PWAV wie))) (LK (VXFIN (VVFIN sehe))) (MF (NX (PPER ich)) (NX (PDS das))))], 'left siblings': [(DM (ITJ aha))], 'auto preterminal span': (1, 2), 'span': (1, 2), 'parent': 'TURN', 'label': 'DM', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM aha)
		(DM ach)
		(DM gut)
		(SIMPX das hort sich immer so an als ob das nix halbes und nix ganzes ist)
		[01;31m(SIMPX[00m
			(KOORD oder)
			(VF wie)
			(LK sehe)
			(MF ich das)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['KOORD', 'VF', 'LK', 'MF'], 'family': ['DM', 'DM', 'DM', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ITJ', 'ITJ', 'PDS', 'VVFIN', 'PRF', 'ADV', 'ADV', 'PTKVZ', 'KOUS', 'KOUS', 'PDS', 'PIS', 'NN', 'KON', 'PIS', 'NN', 'VAFIN', 'KON', 'PWAV', 'VVFIN', 'PPER', 'PDS'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 23), 'span': (18, 23), 'left siblings': ['DM', 'DM', 'DM', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP aha ach gut das hort sich immer so an als ob das nix halbes und nix ganzes ist oder wie sehe ich das)

Sentence 308:
7 Initial errors
0 on fringe, 6 iterations
2 Error:NP Attachment
1 Error:Unary
1 Error:UNSET add
1 Error:Unary
1 Error:Single Word Phrase
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM nein)
		(SIMPX
			(VF jetzt)
			(LK habe)
			(MF ich das)
			[01;31m(VC[00m
				[01;31m(VXINF[00m
					(VVPP vermerkt)[01;31m)[00m[01;31m)[00m)
		(SIMPX
			(KOORD und)
			(VF ich)
			(LK schicke)
			[01;31m(MF[00m
				[01;36m(MF[00m
					(NX ihnen)
					(ADVX dann)[01;36m)[00m
				[01;36m(NF[00m
					[01;36m(SIMPX[00m
						[01;36m(NF[00m
							(SIMPX
								(C wenn)
								(MF sie mir ihre adresse grade noch)
								(VC geben wurden))[01;36m)[00m
						(NX das)[01;36m)[00m[01;36m)[00m[01;31m)[00m)))
Step:NP Attachment
{'new_parent': 'SIMPX', 'new_family': ['KOORD', 'VF', 'LK', 'MF', 'SIMPX', 'NX'], 'mover info': [('SIMPX', (11, 20)), ('NX', (20, 21))], 'old_family': ['NX', 'ADVX', 'SIMPX', 'NX'], 'start left siblings': ['NX', 'ADVX'], 'auto preterminals': ('KON', 'PPER', 'VVFIN', 'PPER', 'ADV', 'KOUS', 'PPER', 'PPER', 'PPOSAT', 'NN', 'ADV', 'ADV', 'VVINF', 'VAFIN', 'PDS'), 'start right siblings': [], 'end left siblings': ['KOORD', 'VF', 'LK', 'MF'], 'auto preterminal span': (6, 21), 'movers': ['SIMPX', 'NX'], 'old_parent': 'MF', 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM nein)
		(SIMPX
			(VF jetzt)
			(LK habe)
			(MF ich das)
			[01;31m(VC[00m
				[01;31m(VXINF[00m
					(VVPP vermerkt)[01;31m)[00m[01;31m)[00m)
		(SIMPX
			(KOORD und)
			(VF ich)
			(LK schicke)
			(MF ihnen dann)
			[01;36m(NF[00m
				[01;36m(SIMPX[00m
					[01;36m(NF[00m
						(SIMPX
							(C wenn)
							(MF sie mir ihre adresse grade noch)
							(VC geben wurden))[01;36m)[00m
					(NX das)[01;36m)[00m[01;36m)[00m)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['KOORD', 'VF', 'LK', 'MF', 'NF', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'PPER', 'PPOSAT', 'NN', 'ADV', 'ADV', 'VVINF', 'VAFIN'), 'right siblings': [(NX (PDS das))], 'left siblings': [(KOORD (KON und)), (VF (NX (PPER ich))), (LK (VXFIN (VVFIN schicke))), (MF (NX (PPER ihnen)) (ADVX (ADV dann)))], 'auto preterminal span': (11, 20), 'span': (11, 20), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM nein)
		(SIMPX
			(VF jetzt)
			(LK habe)
			(MF ich das)
			[01;31m(VC[00m
				[01;31m(VXINF[00m
					(VVPP vermerkt)[01;31m)[00m[01;31m)[00m)
		(SIMPX
			(KOORD und)
			(VF ich)
			(LK schicke)
			(MF ihnen dann)
			[01;36m(NF[00m
				[01;36m(SIMPX[00m
					(NF wenn sie mir ihre adresse grade noch geben wurden)
					(NX das)[01;36m)[00m[01;36m)[00m)))
Step:UNSET add
{'subtrees': ['NF', 'NX'], 'family': ['KOORD', 'VF', 'LK', 'MF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'PPER', 'PPOSAT', 'NN', 'ADV', 'ADV', 'VVINF', 'VAFIN', 'PDS'), 'right siblings': [], 'left siblings': [(KOORD (KON und)), (VF (NX (PPER ich))), (LK (VXFIN (VVFIN schicke))), (MF (NX (PPER ihnen)) (ADVX (ADV dann)))], 'auto preterminal span': (11, 21), 'span': (11, 21), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM nein)
		(SIMPX
			(VF jetzt)
			(LK habe)
			(MF ich das)
			[01;31m(VC[00m
				[01;31m(VXINF[00m
					(VVPP vermerkt)[01;31m)[00m[01;31m)[00m)
		(SIMPX
			(KOORD und)
			(VF ich)
			(LK schicke)
			(MF ihnen dann)
			[01;36m(NF[00m
				(SIMPX
					(NF wenn sie mir ihre adresse grade noch geben wurden)
					(NX das))[01;36m)[00m)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['KOORD', 'VF', 'LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'PPER', 'PPOSAT', 'NN', 'ADV', 'ADV', 'VVINF', 'VAFIN', 'PDS'), 'right siblings': [], 'left siblings': [(KOORD (KON und)), (VF (NX (PPER ich))), (LK (VXFIN (VVFIN schicke))), (MF (NX (PPER ihnen)) (ADVX (ADV dann)))], 'auto preterminal span': (11, 21), 'span': (11, 21), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM nein)
		(SIMPX
			(VF jetzt)
			(LK habe)
			(MF ich das)
			[01;31m(VC[00m
				[01;31m(VXINF[00m
					(VVPP vermerkt)[01;31m)[00m[01;31m)[00m)
		(SIMPX und ich schicke ihnen dann wenn sie mir ihre adresse grade noch geben wurden das)))
Step:Single Word Phrase
{'subtrees': ['VVPP'], 'family': ['VXINF'], 'over_word': True, 'over words': True, 'auto preterminals': ('VVPP',), 'right siblings': [], 'parent': 'VC', 'auto preterminal span': (5, 6), 'span': (5, 6), 'left siblings': [], 'label': 'VXINF', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(DM nein)
		(SIMPX
			(VF jetzt)
			(LK habe)
			(MF ich das)
			[01;31m(VC[00m
				(VVPP vermerkt)[01;31m)[00m)
		(SIMPX und ich schicke ihnen dann wenn sie mir ihre adresse grade noch geben wurden das)))
Step:Single Word Phrase
{'subtrees': ['VVPP'], 'family': ['VF', 'LK', 'MF', 'VC'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'PDS', 'VVPP'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (1, 6), 'span': (5, 6), 'left siblings': ['VF', 'LK', 'MF'], 'label': 'VC', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP nein jetzt habe ich das vermerkt und ich schicke ihnen dann wenn sie mir ihre adresse grade noch geben wurden das)

Sentence 309:
8 Initial errors
0 on fringe, 7 iterations
2 Error:Single Word Phrase
1 Error:Single Word Phrase
1 Error:Modifier Attachment
1 Error:Modifier Attachment
1 Error:Unary
1 Error:NP Internal Structure
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF da)
			(LK ist)
			(MF
				[01;31m(NX[00m
					[01;31m(NX[00m
						[01;31m(NX[00m
							[01;36m(ADVX[00m [01;31m(ADJX[00m
								(ADJA hirschberger)[01;31m)[00m[01;36m)[00m
							[01;36m(ADVX[00m
								(NN strase)[01;36m)[00m[01;31m)[00m
						(NX vierundsechzig)[01;31m)[00m
					(PX
						(APPR in)
						(NX
							[01;31m(NX[00m
								(NX funf)
								(NX drei)
								(NX eins)
								[01;31m(NX[00m
									(CARD eins)[01;31m)[00m
								(NX neun)[01;31m)[00m
							(NE bonn)))[01;31m)[00m))))
Step:Single Word Phrase
{'family': ['ADVX', 'NN'], 'auto preterminal span': (3, 4), 'span': (3, 4), 'subtrees': ['ADJA'], 'parent': 'NX', 'over_word': True, 'auto preterminals': ('ADJA',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'ADVX')}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF da)
			(LK ist)
			(MF
				[01;31m(NX[00m
					[01;31m(NX[00m
						[01;31m(NX[00m
							(ADVX hirschberger)
							[01;36m(ADVX[00m
								(NN strase)[01;36m)[00m[01;31m)[00m
						(NX vierundsechzig)[01;31m)[00m
					(PX
						(APPR in)
						(NX
							[01;31m(NX[00m
								(NX funf)
								(NX drei)
								(NX eins)
								[01;31m(NX[00m
									(CARD eins)[01;31m)[00m
								(NX neun)[01;31m)[00m
							(NE bonn)))[01;31m)[00m))))
Step:Single Word Phrase
{'subtrees': ['NN'], 'family': ['ADVX', 'ADVX'], 'over_word': True, 'over words': True, 'auto preterminals': ('NN',), 'right siblings': [], 'left siblings': [(ADVX (ADJA hirschberger))], 'auto preterminal span': (4, 5), 'span': (4, 5), 'parent': 'NX', 'label': 'ADVX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF da)
			(LK ist)
			(MF
				[01;31m(NX[00m
					[01;31m(NX[00m
						[01;31m(NX[00m
							(ADVX hirschberger)
							(ADVX strase)[01;31m)[00m
						(NX vierundsechzig)[01;31m)[00m
					(PX
						(APPR in)
						(NX
							[01;31m(NX[00m
								(NX funf)
								(NX drei)
								(NX eins)
								[01;31m(NX[00m
									(CARD eins)[01;31m)[00m
								(NX neun)[01;31m)[00m
							(NE bonn)))[01;31m)[00m))))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'ADVX'], 'family': ['NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJA', 'NN', 'CARD'), 'right siblings': ['NX'], 'parent': 'NX', 'auto preterminal span': (3, 6), 'span': (3, 5), 'left siblings': [], 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF da)
			(LK ist)
			(MF
				[01;31m(NX[00m
					[01;31m(NX[00m
						(ADVX hirschberger)
						(ADVX strase)
						(NX vierundsechzig)[01;31m)[00m
					(PX
						(APPR in)
						(NX
							[01;31m(NX[00m
								(NX funf)
								(NX drei)
								(NX eins)
								[01;31m(NX[00m
									(CARD eins)[01;31m)[00m
								(NX neun)[01;31m)[00m
							(NE bonn)))[01;31m)[00m))))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'ADVX', 'NX'], 'family': ['NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJA', 'NN', 'CARD', 'APPR', 'CARD', 'CARD', 'CARD', 'CARD', 'CARD', 'NE'), 'right siblings': ['PX'], 'parent': 'NX', 'auto preterminal span': (3, 13), 'span': (3, 6), 'left siblings': [], 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF da)
			(LK ist)
			(MF
				[01;31m(NX[00m
					(ADVX hirschberger)
					(ADVX strase)
					(NX vierundsechzig)
					(PX
						(APPR in)
						(NX
							[01;31m(NX[00m
								(NX funf)
								(NX drei)
								(NX eins)
								[01;31m(NX[00m
									(CARD eins)[01;31m)[00m
								(NX neun)[01;31m)[00m
							(NE bonn)))[01;31m)[00m))))
Step:Unary
{'subtrees': ['ADVX', 'ADVX', 'NX', 'PX'], 'family': ['NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJA', 'NN', 'CARD', 'APPR', 'CARD', 'CARD', 'CARD', 'CARD', 'CARD', 'NE'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (3, 13), 'span': (3, 13), 'left siblings': [], 'label': 'NX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF da)
			(LK ist)
			(MF
				(ADVX hirschberger)
				(ADVX strase)
				(NX vierundsechzig)
				(PX
					(APPR in)
					(NX
						[01;31m(NX[00m
							(NX funf)
							(NX drei)
							(NX eins)
							[01;31m(NX[00m
								(CARD eins)[01;31m)[00m
							(NX neun)[01;31m)[00m
						(NE bonn)))))))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX', 'NX', 'NX', 'NX'], 'family': ['NX', 'NE'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'CARD', 'CARD', 'CARD', 'CARD', 'NE'), 'right siblings': ['NE'], 'parent': 'NX', 'auto preterminal span': (7, 13), 'span': (7, 12), 'left siblings': [], 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF da)
			(LK ist)
			(MF
				(ADVX hirschberger)
				(ADVX strase)
				(NX vierundsechzig)
				(PX
					(APPR in)
					(NX
						(NX funf)
						(NX drei)
						(NX eins)
						[01;31m(NX[00m
							(CARD eins)[01;31m)[00m
						(NX neun)
						(NE bonn)))))))
Step:Single Word Phrase
{'subtrees': ['CARD'], 'family': ['NX', 'NX', 'NX', 'NX', 'NX', 'NE'], 'over_word': True, 'over words': True, 'auto preterminals': ('CARD', 'CARD', 'CARD', 'CARD', 'CARD', 'NE'), 'right siblings': ['NX', 'NE'], 'parent': 'NX', 'auto preterminal span': (7, 13), 'span': (10, 11), 'left siblings': ['NX', 'NX', 'NX'], 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP ja da ist hirschberger strase vierundsechzig in funf drei eins eins neun bonn)

Sentence 310:
0 Initial errors
0 on fringe, 0 iterations

Sentence 311:
0 Initial errors
0 on fringe, 0 iterations

Sentence 312:
12 Initial errors
0 on fringe, 5 iterations
6 Error:Co-ordination
3 Error:Clause Attachment
1 Error:Unary
1 Error:Unary
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(NX[00m
			[01;36m(NX[00m
				(ADVX erst)
				(ADVX mal)
				(NX die frage)[01;36m)[00m
			[01;36m(NF[00m
				(SIMPX [01;33m(SIMPX (NF[00m
					(C wie)
					(MF sie)
					(VC anreisen mochten))[01;36m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(C ob)
			(MF sie mit der bahn)
			(VC fahren)
			[01;31m(NF[00m
				[01;31m(PX[00m
					[01;36m(PX[00m
						[01;36m(NF[00m
							(KON oder)
							(PX mit dem bus) [01;33mSIMPX) NF) SIMPX)[00m[01;36m)[00m[01;36m)[00m
					[01;36m(DM[00m
						(KON oder)[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m))
Step:Co-ordination
{'new_parent': 'TURN', 'new_family': ['NX', 'SIMPX', 'KON'], 'mover info': [('KON', (18, 19))], 'old_family': ['KON', 'PX', 'KON'], 'start left siblings': ['KON', 'PX'], 'auto preterminals': ('ADV', 'ADV', 'ART', 'NN', 'KOUS', 'PPER', 'VVINF', 'VMFIN', 'KOUS', 'PPER', 'APPR', 'ART', 'NN', 'VVFIN', 'KON', 'APPR', 'ART', 'NN', 'KON'), 'start right siblings': [], 'end left siblings': ['NX', 'SIMPX'], 'auto preterminal span': (0, 19), 'movers': ['KON'], 'old_parent': 'PX', 'POS confusion': ('KON', 'KON'), 'end right siblings': [], 'classified_type': 'Co-ordination', 'type': 'move'}
(TOP
	(TURN
		[01;31m(NX[00m
			[01;36m(NX[00m
				(ADVX erst)
				(ADVX mal)
				(NX die frage)[01;36m)[00m
			[01;36m(NF[00m
				(SIMPX [01;33m(SIMPX (NF[00m
					(C wie)
					(MF sie)
					(VC anreisen mochten))[01;36m)[00m[01;31m)[00m
		(SIMPX ob sie mit der bahn fahren oder mit dem bus) [01;33mNF) SIMPX)[00m
		[01;36m(DM[00m
			(KON oder)[01;36m)[00m))
Step:Clause Attachment
{'new_parent': 'TURN', 'new_family': ['NX', 'SIMPX', 'SIMPX', 'KON'], 'mover info': [('SIMPX', (4, 8))], 'old_family': ['ADVX', 'ADVX', 'NX', 'SIMPX'], 'start left siblings': ['ADVX', 'ADVX', 'NX'], 'auto preterminals': ('ADV', 'ADV', 'ART', 'NN', 'KOUS', 'PPER', 'VVINF', 'VMFIN', 'KOUS', 'PPER', 'APPR', 'ART', 'NN', 'VVFIN', 'KON', 'APPR', 'ART', 'NN', 'KON'), 'start right siblings': [], 'end left siblings': ['NX'], 'auto preterminal span': (0, 19), 'adding node already present': False, 'movers': ['SIMPX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': ['SIMPX', 'KON'], 'classified_type': 'Clause Attachment', 'type': 'move', 'added label': 'DM'}
(TOP
	(TURN
		(NX erst mal die frage)
		[01;36m(NF[00m
			(SIMPX
				[01;36m(NF[00m
					(SIMPX
						(C wie)
						(MF sie)
						(VC anreisen mochten))[01;36m)[00m
				(SIMPX ob sie mit der bahn fahren oder mit dem bus))[01;36m)[00m
		[01;36m(DM[00m
			(KON oder)[01;36m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['NF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'VVINF', 'VMFIN'), 'right siblings': [(SIMPX (C (KOUS ob)) (MF (NX (PPER sie)) (PX (APPR mit) (NX (ART der) (NN bahn)))) (VC (VXFIN (VVFIN fahren))) (NF (PX (KON oder) (PX (APPR mit) (NX (ART dem) (NN bus))))))], 'left siblings': [], 'auto preterminal span': (4, 8), 'span': (4, 8), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(NX erst mal die frage)
		[01;36m(NF[00m
			(SIMPX
				(NF wie sie anreisen mochten)
				(SIMPX ob sie mit der bahn fahren oder mit dem bus))[01;36m)[00m
		[01;36m(DM[00m
			(KON oder)[01;36m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['NX', 'NF', 'KON'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'VVINF', 'VMFIN', 'KOUS', 'PPER', 'APPR', 'ART', 'NN', 'VVFIN', 'KON', 'APPR', 'ART', 'NN'), 'right siblings': [(KON oder)], 'left siblings': [(NX (ADVX (ADV erst)) (ADVX (ADV mal)) (NX (ART die) (NN frage)))], 'auto preterminal span': (4, 18), 'span': (4, 18), 'parent': 'TURN', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(NX erst mal die frage)
		(NF wie sie anreisen mochten ob sie mit der bahn fahren oder mit dem bus)
		[01;36m(DM[00m
			(KON oder)[01;36m)[00m))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['NX', 'NF', 'DM'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON',), 'right siblings': [], 'left siblings': [(NX (ADVX (ADV erst)) (ADVX (ADV mal)) (NX (ART die) (NN frage))), (NF (SIMPX (NF (SIMPX (C (KOUS wie)) (MF (NX (PPER sie))) (VC (VXINF (VVINF anreisen)) (VXFIN (VMFIN mochten))))) (SIMPX (C (KOUS ob)) (MF (NX (PPER sie)) (PX (APPR mit) (NX (ART der) (NN bahn)))) (VC (VXFIN (VVFIN fahren))) (NF (PX (KON oder) (PX (APPR mit) (NX (ART dem) (NN bus))))))))], 'auto preterminal span': (18, 19), 'span': (18, 19), 'parent': 'TURN', 'label': 'DM', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP erst mal die frage wie sie anreisen mochten ob sie mit der bahn fahren oder mit dem bus oder)

Sentence 313:
3 Initial errors
0 on fringe, 2 iterations
2 Error:Modifier Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF ich)
			(LK dachte)
			(MF
				(NX mir)
				[01;31m(PX[00m
					(ADVX moglichst)
					[01;36m(NF[00m
						[01;36m(PX[00m
							(APPR mit)
							(NX der bahn)[01;36m)[00m[01;36m)[00m[01;31m)[00m))))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'ADVX', 'PX'], 'mover info': [('ADVX', (4, 5))], 'old_family': ['ADVX', 'APPR', 'NX'], 'start left siblings': [], 'auto preterminals': ('PRF', 'ADV', 'APPR', 'ART', 'NN'), 'start right siblings': ['APPR', 'NX'], 'end left siblings': ['NX'], 'auto preterminal span': (3, 8), 'movers': ['ADVX'], 'old_parent': 'PX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['PX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF ich)
			(LK dachte)
			(MF
				(NX mir)
				(ADVX moglichst)
				[01;36m(NF[00m
					(PX
						(APPR mit)
						(NX der bahn))[01;36m)[00m))))
Step:Unary
{'subtrees': ['PX'], 'family': ['NX', 'ADVX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NN'), 'right siblings': [], 'left siblings': [(NX (PRF mir)), (ADVX (ADV moglichst))], 'auto preterminal span': (5, 8), 'span': (5, 8), 'parent': 'MF', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP ja ich dachte mir moglichst mit der bahn)

Sentence 314:
0 Initial errors
0 on fringe, 0 iterations

Sentence 315:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(ADVX
			[01;36m(ADVX[00m [01;31m(ADJX[00m
				(ADJD lieber)[01;31m)[00m[01;36m)[00m
			(ADVX gern)
			(ADVX morgens))))
Step:Single Word Phrase
{'family': ['ADVX', 'ADVX', 'ADVX'], 'auto preterminal span': (0, 1), 'span': (0, 1), 'subtrees': ['ADJD'], 'parent': 'ADVX', 'over_word': True, 'auto preterminals': ('ADJD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'ADVX')}
(TOP lieber gern morgens)

Sentence 316:
0 Initial errors
0 on fringe, 0 iterations

Sentence 317:
0 Initial errors
0 on fringe, 0 iterations

Sentence 318:
0 Initial errors
0 on fringe, 0 iterations

Sentence 319:
0 Initial errors
0 on fringe, 0 iterations

Sentence 320:
0 Initial errors
0 on fringe, 0 iterations

Sentence 321:
0 Initial errors
0 on fringe, 0 iterations

Sentence 322:
0 Initial errors
0 on fringe, 0 iterations

Sentence 323:
0 Initial errors
0 on fringe, 0 iterations

Sentence 324:
0 Initial errors
0 on fringe, 0 iterations

Sentence 325:
0 Initial errors
0 on fringe, 0 iterations

Sentence 326:
2 Initial errors
0 on fringe, 2 iterations
1 Error:UNSET remove
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM nee)
		(SIMPX das musten sie)
		(SIMPX
			(VF das)
			(LK musten)
			[01;31m(FKOORD[00m
				(MVC sie schon selber zum zum bahnhof bringen)
				(KON und)
				(MVCN
					[01;31m(MF[00m
						(PX von da aus)
						(ADVX dann)
						(ADVX halt)[01;31m)[00m
					(VC transportieren lassen)
					(NF vielleicht))[01;31m)[00m)))
Step:UNSET remove
{'subtrees': ['MVC', 'KON', 'MVCN'], 'family': ['VF', 'LK', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VMFIN', 'PPER', 'ADV', 'ADV', 'APPRART', 'APPRART', 'NN', 'VVINF', 'KON', 'APPR', 'ADV', 'APZR', 'ADV', 'ADV', 'VVINF', 'VVINF', 'ADV'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (4, 22), 'span': (6, 22), 'left siblings': ['VF', 'LK'], 'label': 'FKOORD', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM nee)
		(SIMPX das musten sie)
		(SIMPX
			(VF das)
			(LK musten)
			(MVC sie schon selber zum zum bahnhof bringen)
			(KON und)
			(MVCN
				[01;31m(MF[00m
					(PX von da aus)
					(ADVX dann)
					(ADVX halt)[01;31m)[00m
				(VC transportieren lassen)
				(NF vielleicht)))))
Step:Modifier Attachment
{'subtrees': ['PX', 'ADVX', 'ADVX'], 'family': ['MF', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ADV', 'APZR', 'ADV', 'ADV', 'VVINF', 'VVINF', 'ADV'), 'right siblings': ['VC', 'NF'], 'parent': 'MVCN', 'auto preterminal span': (14, 22), 'span': (14, 19), 'left siblings': [], 'label': 'MF', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP nee das musten sie das musten sie schon selber zum zum bahnhof bringen und von da aus dann halt transportieren lassen vielleicht)

Sentence 327:
0 Initial errors
0 on fringe, 0 iterations

Sentence 328:
1 Initial errors
0 on fringe, 1 iterations
1 Error:UNSET add
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM sicher)
		(DM herr klein)
		(SIMPX ich mache das fertig)
		(SIMPX
			(KOORD und)
			[01;36m(SIMPX[00m
				(VF dann)
				(LK werde)
				(MF ich sie noch mal)
				(VC anrufen)[01;36m)[00m)))
Step:UNSET add
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['KOORD', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'PPER', 'ADV', 'ADV', 'VVINF'), 'right siblings': [], 'left siblings': [(KOORD (KON und))], 'auto preterminal span': (9, 16), 'span': (9, 16), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP ja sicher herr klein ich mache das fertig und dann werde ich sie noch mal anrufen)

Sentence 329:
0 Initial errors
0 on fringe, 0 iterations

Sentence 330:
0 Initial errors
0 on fringe, 0 iterations

Sentence 331:
0 Initial errors
0 on fringe, 0 iterations

Sentence 332:
0 Initial errors
0 on fringe, 0 iterations

Sentence 333:
0 Initial errors
0 on fringe, 0 iterations

Sentence 334:
0 Initial errors
0 on fringe, 0 iterations

Sentence 335:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF ich)
			(LK wurde)
			(VC sagen)
			(NF
				(SIMPX
					(VF wir)
					(LK wurden)
					(MF
						[01;36m(ADVX[00m [01;31m(ADJX[00m
							(ADJD besser)[01;31m)[00m[01;36m)[00m
						(ADJX ziemlich fruh))
					(VC fahren)
					(NF damit wir morgens direkt da sind und dann direkt auf die messe losgehen konnen))))))
Step:Single Word Phrase
{'family': ['ADVX', 'ADJX'], 'auto preterminal span': (6, 7), 'span': (6, 7), 'subtrees': ['ADJD'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('ADJD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'ADVX')}
(TOP ja ich wurde sagen wir wurden besser ziemlich fruh fahren damit wir morgens direkt da sind und dann direkt auf die messe losgehen konnen)

Sentence 336:
0 Initial errors
0 on fringe, 0 iterations

Sentence 337:
0 Initial errors
0 on fringe, 0 iterations

Sentence 338:
0 Initial errors
0 on fringe, 0 iterations

Sentence 339:
0 Initial errors
0 on fringe, 0 iterations

Sentence 340:
0 Initial errors
0 on fringe, 0 iterations

Sentence 341:
0 Initial errors
0 on fringe, 0 iterations

Sentence 342:
0 Initial errors
0 on fringe, 0 iterations

Sentence 343:
0 Initial errors
0 on fringe, 0 iterations

Sentence 344:
0 Initial errors
0 on fringe, 0 iterations

Sentence 345:
0 Initial errors
0 on fringe, 0 iterations

Sentence 346:
0 Initial errors
0 on fringe, 0 iterations

Sentence 347:
0 Initial errors
0 on fringe, 0 iterations

Sentence 348:
0 Initial errors
0 on fringe, 0 iterations

Sentence 349:
0 Initial errors
0 on fringe, 0 iterations

Sentence 350:
0 Initial errors
0 on fringe, 0 iterations

Sentence 351:
0 Initial errors
0 on fringe, 0 iterations

Sentence 352:
0 Initial errors
0 on fringe, 0 iterations

Sentence 353:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		[01;31m(DM[00m
			[01;36m(DM[00m
				(ITJ tschus)[01;36m)[00m
			(ADVX dann)[01;31m)[00m))
Step:Modifier Attachment
{'new_parent': 'TURN', 'new_family': ['DM', 'DM', 'ADVX'], 'mover info': [('ADVX', (2, 3))], 'old_family': ['ITJ', 'ADVX'], 'start left siblings': ['ITJ'], 'auto preterminals': ('PTKANT', 'ITJ', 'ADV'), 'start right siblings': [], 'end left siblings': ['DM', 'DM'], 'auto preterminal span': (0, 3), 'movers': ['ADVX'], 'old_parent': 'DM', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP ja tschus dann)

Sentence 354:
0 Initial errors
0 on fringe, 0 iterations

Sentence 355:
6 Initial errors
0 on fringe, 3 iterations
4 Error:NP Attachment
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(DM[00m
			[01;31m(NX[00m
				(NX reiseagentur)
				[01;33m(NX (NX[00m (NX maritim)[01;31m)[00m[01;31m)[00m
		[01;31m(DM[00m
			[01;31m(NX[00m
				(NX fischenbeck) [01;33mNX)[00m
				(PX am apparat)[01;31m)[00m[01;31m)[00m [01;33mNX)[00m
		(DM guten tag)))
Step:NP Attachment
{'new_parent': 'NX', 'new_family': ['NX', 'NX', 'PX'], 'mover info': [('NX', (1, 2))], 'old_family': ['NX', 'NX'], 'start left siblings': ['NX'], 'auto preterminals': ('NN', 'NE', 'NE', 'APPRART', 'NN', 'ADJA', 'NN'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 7), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'NX', 'POS confusion': ('NE', 'NE'), 'added and moved': True, 'end right siblings': ['NX', 'PX'], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		[01;31m(DM[00m
			(NX
				(NN reiseagentur))[01;31m)[00m
		[01;31m(DM[00m
			(NX
				(NX maritim fischenbeck)
				(PX am apparat))[01;31m)[00m
		(DM guten tag)))
Step:Unary
{'subtrees': ['NX'], 'family': ['DM', 'DM', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'NE', 'NE', 'APPRART', 'NN', 'ADJA', 'NN'), 'right siblings': ['DM', 'DM'], 'parent': 'TURN', 'auto preterminal span': (0, 7), 'span': (0, 1), 'left siblings': [], 'label': 'DM', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(NX reiseagentur)
		[01;31m(DM[00m
			(NX
				(NX maritim fischenbeck)
				(PX am apparat))[01;31m)[00m
		(DM guten tag)))
Step:Unary
{'subtrees': ['NX'], 'family': ['NX', 'DM', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'NE', 'NE', 'APPRART', 'NN', 'ADJA', 'NN'), 'right siblings': ['DM'], 'parent': 'TURN', 'auto preterminal span': (0, 7), 'span': (1, 5), 'left siblings': ['NX'], 'label': 'DM', 'classified_type': 'Unary', 'type': 'remove'}
(TOP reiseagentur maritim fischenbeck am apparat guten tag)

Sentence 356:
0 Initial errors
0 on fringe, 0 iterations

Sentence 357:
0 Initial errors
0 on fringe, 0 iterations

Sentence 358:
0 Initial errors
0 on fringe, 0 iterations

Sentence 359:
5 Initial errors
0 on fringe, 1 iterations
5 Error:NP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SIMPX[00m
	(TOP [01;33m(VF (NX[00m
		(TURN
			(NX geschaft)
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(NX
						(NN geschaft))[01;31m)[00m [01;33mNX) VF)[00m
				(LK ist)
				(MF geschaft)[01;31m)[00m))[01;36m)[00m
Step:NP Attachment
{'new_parent': 'VF', 'new_family': ['NX', 'NX'], 'mover info': [('NX', (0, 1))], 'old_family': ['NX', 'SIMPX'], 'start left siblings': [], 'auto preterminals': ('NN', 'NN', 'VAFIN', 'NN'), 'start right siblings': ['SIMPX'], 'end left siblings': [], 'auto preterminal span': (0, 4), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'TURN', 'POS confusion': ('NN', 'NN'), 'added and moved': True, 'end right siblings': ['NX'], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'NX'}
(TOP geschaft geschaft ist geschaft)

Sentence 360:
3 Initial errors
0 on fringe, 2 iterations
2 Error:Single Word Phrase
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(NX
			[01;36m(ADJX[00m
				[01;36m(ADJX[00m [01;31m(ADVX[00m
					(ADV ungefahr)[01;31m)[00m[01;36m)[00m
				(ADJX zweihundert dreisig)[01;36m)[00m
			(NN mark))))
Step:Single Word Phrase
{'family': ['ADJX', 'ADJX', 'NN'], 'auto preterminal span': (0, 1), 'span': (0, 1), 'subtrees': ['ADV'], 'parent': 'NX', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'ADJX')}
(TOP
	(TURN
		(NX
			[01;36m(ADJX[00m
				(ADJX ungefahr)
				(ADJX zweihundert dreisig)[01;36m)[00m
			(NN mark))))
Step:Modifier Attachment
{'subtrees': ['ADJX', 'ADJX'], 'family': ['ADJX', 'NN'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'CARD', 'CARD'), 'right siblings': [(NN mark)], 'left siblings': [], 'auto preterminal span': (0, 3), 'span': (0, 3), 'parent': 'NX', 'label': 'ADJX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP ungefahr zweihundert dreisig mark)

Sentence 361:
0 Initial errors
0 on fringe, 0 iterations

Sentence 362:
0 Initial errors
0 on fringe, 0 iterations

Sentence 363:
0 Initial errors
0 on fringe, 0 iterations

Sentence 364:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX
			(VF das)
			(LK macht)
			(MF [01;33m(MF[00m
				(ADVX dann)
				[01;31m(NX[00m
					(NX achtundsiebzig mark) [01;33mMF)[00m
					(ADVX einfach)[01;31m)[00m))))
Step:Modifier Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'ADVX'], 'mover info': [('ADVX', (5, 6))], 'old_family': ['NX', 'ADVX'], 'start left siblings': ['NX'], 'auto preterminals': ('PDS', 'VVFIN', 'ADV', 'CARD', 'NN', 'ADV'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (0, 6), 'adding node already present': False, 'movers': ['ADVX'], 'old_parent': 'NX', 'POS confusion': ('ADV', 'ADV'), 'added and moved': True, 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'MF'}
(TOP das macht dann achtundsiebzig mark einfach)

Sentence 365:
0 Initial errors
0 on fringe, 0 iterations

Sentence 366:
14 Initial errors
0 on fringe, 7 iterations
4 Error:UNSET move
3 Error:NP Internal Structure
2 Error:NP Attachment
2 Error:PP Attachment
1 Error:Unary
1 Error:UNSET remove
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF da)
				(LK kann)
				(MF
					(NX ich)
					(NX ihnen)
					(NX [01;33m(NX[00m
						(ART das)
						[01;31m(NX[00m
							[01;31m(NX[00m
								(NE grandhotel)[01;31m)[00m [01;33mNX)[00m
							(NX musmann)[01;31m)[00m))
				(VC anbieten)[01;31m)[00m
			[01;36m(NX[00m
				[01;36m(NF[00m
					(ART [01;33m(NX[00m das)
					[01;31m(NX[00m
						[01;31m(NX[00m
							(ADJX zentrale)
							(NN lage)[01;31m)[00m [01;33mNX)[00m
						(PX mit garage)[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;36m)[00m
		(SIMPX die brauchen sie zwar nicht)
		(SIMPX
			(VF da)
			(LK liegt)
			(MF
				[01;31m(NX[00m
					(NX die preiskategorie)
					[01;33m(PX[00m (PX fur ein einzelzimmer)[01;31m)[00m
				(PX
					(APPR bei)
					(NX [01;33m(ADJX[00m
						(NX hundert achtundsiebzig mark)
						(APPR bis)
						[01;31m(NX[00m
							(ADJX funfhundert achtzehn) [01;33mADJX)[00m
							(NN mark)[01;31m)[00m)))))) [01;33mPX)[00m
Step:UNSET move
{'new_parent': 'NX', 'new_family': ['ART', 'ADJX', 'NN'], 'mover info': [('ART', (8, 9))], 'old_family': ['SIMPX', 'ART', 'NX', 'SIMPX', 'SIMPX'], 'start left siblings': ['SIMPX'], 'auto preterminals': ('ADV', 'VMFIN', 'PPER', 'PPER', 'ART', 'NE', 'NE', 'VVINF', 'ART', 'ADJA', 'NN', 'APPR', 'NN', 'PDS', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADV', 'VVFIN', 'ART', 'NN', 'APPR', 'ART', 'NN', 'APPR', 'CARD', 'CARD', 'NN', 'APPR', 'CARD', 'CARD', 'NN'), 'start right siblings': ['NX', 'SIMPX', 'SIMPX'], 'end left siblings': [], 'auto preterminal span': (0, 33), 'movers': ['ART'], 'old_parent': 'TURN', 'POS confusion': ('ART', 'ART'), 'end right siblings': ['ADJX', 'NN'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF da)
				(LK kann)
				(MF
					(NX ich)
					(NX ihnen)
					(NX [01;33m(NX[00m
						(ART das)
						[01;31m(NX[00m
							[01;31m(NX[00m
								(NE grandhotel)[01;31m)[00m [01;33mNX)[00m
							(NX musmann)[01;31m)[00m))
				(VC anbieten)[01;31m)[00m
			[01;36m(NF[00m
				(NX
					(NX das zentrale lage)
					(PX mit garage))[01;36m)[00m[01;36m)[00m
		(SIMPX die brauchen sie zwar nicht)
		(SIMPX
			(VF da)
			(LK liegt)
			(MF
				[01;31m(NX[00m
					(NX die preiskategorie)
					[01;33m(PX[00m (PX fur ein einzelzimmer)[01;31m)[00m
				(PX
					(APPR bei)
					(NX [01;33m(ADJX[00m
						(NX hundert achtundsiebzig mark)
						(APPR bis)
						[01;31m(NX[00m
							(ADJX funfhundert achtzehn) [01;33mADJX)[00m
							(NN mark)[01;31m)[00m)))))) [01;33mPX)[00m
Step:NP Internal Structure
{'new_parent': 'NX', 'new_family': ['ART', 'NE'], 'mover info': [('ART', (4, 5))], 'old_family': ['ART', 'NX'], 'start left siblings': [], 'auto preterminals': ('ART', 'NE', 'NE'), 'start right siblings': ['NX'], 'end left siblings': [], 'auto preterminal span': (4, 7), 'movers': ['ART'], 'old_parent': 'NX', 'POS confusion': ('ART', 'ART'), 'end right siblings': ['NE'], 'classified_type': 'NP Internal Structure', 'type': 'move'}
(TOP
	(TURN
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF da)
				(LK kann)
				(MF ich ihnen das grandhotel musmann)
				(VC anbieten)[01;31m)[00m
			[01;36m(NF[00m
				(NX
					(NX das zentrale lage)
					(PX mit garage))[01;36m)[00m[01;36m)[00m
		(SIMPX die brauchen sie zwar nicht)
		(SIMPX
			(VF da)
			(LK liegt)
			(MF
				[01;31m(NX[00m
					(NX die preiskategorie)
					[01;33m(PX[00m (PX fur ein einzelzimmer)[01;31m)[00m
				(PX
					(APPR bei)
					(NX [01;33m(ADJX[00m
						(NX hundert achtundsiebzig mark)
						(APPR bis)
						[01;31m(NX[00m
							(ADJX funfhundert achtzehn) [01;33mADJX)[00m
							(NN mark)[01;31m)[00m)))))) [01;33mPX)[00m
Step:NP Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'VC', 'NX'], 'mover info': [('NX', (8, 13))], 'old_family': ['SIMPX', 'NX', 'SIMPX', 'SIMPX'], 'start left siblings': ['SIMPX'], 'auto preterminals': ('ADV', 'VMFIN', 'PPER', 'PPER', 'ART', 'NE', 'NE', 'VVINF', 'ART', 'ADJA', 'NN', 'APPR', 'NN', 'PDS', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADV', 'VVFIN', 'ART', 'NN', 'APPR', 'ART', 'NN', 'APPR', 'CARD', 'CARD', 'NN', 'APPR', 'CARD', 'CARD', 'NN'), 'start right siblings': ['SIMPX', 'SIMPX'], 'end left siblings': ['VF', 'LK', 'MF', 'VC'], 'auto preterminal span': (0, 33), 'movers': ['NX'], 'old_parent': 'TURN', 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SIMPX
			(VF da)
			(LK kann)
			(MF ich ihnen das grandhotel musmann)
			(VC anbieten)
			[01;36m(NF[00m
				(NX
					(NX das zentrale lage)
					(PX mit garage))[01;36m)[00m)
		(SIMPX die brauchen sie zwar nicht)
		(SIMPX
			(VF da)
			(LK liegt)
			(MF
				[01;31m(NX[00m
					(NX die preiskategorie)
					[01;33m(PX[00m (PX fur ein einzelzimmer)[01;31m)[00m
				(PX
					(APPR bei)
					(NX [01;33m(ADJX[00m
						(NX hundert achtundsiebzig mark)
						(APPR bis)
						[01;31m(NX[00m
							(ADJX funfhundert achtzehn) [01;33mADJX)[00m
							(NN mark)[01;31m)[00m)))))) [01;33mPX)[00m
Step:PP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'PX', 'PX'], 'mover info': [('PX', (22, 25))], 'old_family': ['NX', 'PX'], 'start left siblings': ['NX'], 'auto preterminals': ('ART', 'NN', 'APPR', 'ART', 'NN', 'APPR', 'CARD', 'CARD', 'NN', 'APPR', 'CARD', 'CARD', 'NN'), 'start right siblings': [], 'end left siblings': ['NX'], 'auto preterminal span': (20, 33), 'adding node already present': False, 'movers': ['PX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': ['PX'], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'PX'}
(TOP
	(TURN
		(SIMPX
			(VF da)
			(LK kann)
			(MF ich ihnen das grandhotel musmann)
			(VC anbieten)
			[01;36m(NF[00m
				(NX
					(NX das zentrale lage)
					(PX mit garage))[01;36m)[00m)
		(SIMPX die brauchen sie zwar nicht)
		(SIMPX
			(VF da)
			(LK liegt)
			(MF
				(NX die preiskategorie)
				(PX
					(PX fur ein einzelzimmer)
					(PX
						(APPR bei)
						(NX [01;33m(ADJX[00m
							(NX hundert achtundsiebzig mark)
							(APPR bis)
							[01;31m(NX[00m
								(ADJX funfhundert achtzehn) [01;33mADJX)[00m
								(NN mark)[01;31m)[00m)))))))
Step:Unary
{'subtrees': ['NX'], 'family': ['VF', 'LK', 'MF', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'ADJA', 'NN', 'APPR', 'NN'), 'right siblings': [], 'left siblings': [(VF (ADVX (ADV da))), (LK (VXFIN (VMFIN kann))), (MF (NX (PPER ich)) (NX (PPER ihnen)) (NX (NX (ART das) (NE grandhotel)) (NX (NE musmann)))), (VC (VXINF (VVINF anbieten)))], 'auto preterminal span': (8, 13), 'span': (8, 13), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SIMPX da kann ich ihnen das grandhotel musmann anbieten das zentrale lage mit garage)
		(SIMPX die brauchen sie zwar nicht)
		(SIMPX
			(VF da)
			(LK liegt)
			(MF
				(NX die preiskategorie)
				(PX
					(PX fur ein einzelzimmer)
					(PX
						(APPR bei)
						(NX [01;33m(ADJX[00m
							(NX hundert achtundsiebzig mark)
							(APPR bis)
							[01;31m(NX[00m
								(ADJX funfhundert achtzehn) [01;33mADJX)[00m
								(NN mark)[01;31m)[00m)))))))
Step:UNSET remove
{'subtrees': ['ADJX', 'NN'], 'family': ['NX', 'APPR', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'CARD', 'NN', 'APPR', 'CARD', 'CARD', 'NN'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (26, 33), 'span': (30, 33), 'left siblings': ['NX', 'APPR'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX da kann ich ihnen das grandhotel musmann anbieten das zentrale lage mit garage)
		(SIMPX die brauchen sie zwar nicht)
		(SIMPX
			(VF da)
			(LK liegt)
			(MF
				(NX die preiskategorie)
				(PX
					(PX fur ein einzelzimmer)
					(PX
						(APPR bei)
						(NX
							[01;36m(ADJX[00m
								(NX hundert achtundsiebzig mark)
								(APPR bis)
								(ADJX funfhundert achtzehn)[01;36m)[00m
							(NN mark))))))))
Step:Modifier Attachment
{'subtrees': ['NX', 'APPR', 'ADJX'], 'family': ['ADJX', 'NN'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'CARD', 'NN', 'APPR', 'CARD', 'CARD'), 'right siblings': [(NN mark)], 'left siblings': [], 'auto preterminal span': (26, 32), 'span': (26, 32), 'parent': 'NX', 'label': 'ADJX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP da kann ich ihnen das grandhotel musmann anbieten das zentrale lage mit garage die brauchen sie zwar nicht da liegt die preiskategorie fur ein einzelzimmer bei hundert achtundsiebzig mark bis funfhundert achtzehn mark)

Sentence 367:
0 Initial errors
0 on fringe, 0 iterations

Sentence 368:
0 Initial errors
0 on fringe, 0 iterations

Sentence 369:
0 Initial errors
0 on fringe, 0 iterations

Sentence 370:
0 Initial errors
0 on fringe, 0 iterations

Sentence 371:
11 Initial errors
0 on fringe, 6 iterations
4 Error:NP Attachment
2 Error:UNSET move
2 Error:Clause Attachment
1 Error:Unary
1 Error:Clause Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM ja)
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(VF dann)
				(LK wurde)
				(MF ich aber)
				(VC sagen)[01;36m)[00m
			[01;31m(NF[00m
				(SIMPX
					(VF ich)
					(LK nehme)
					(MF auf jeden fall mal den hinflug)
					[01;31m(NF[00m
						(ADVX
							(ADV einfach))[01;31m)[00m)[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF das)
			(LK waren)
			[01;31m(MF[00m
				[01;36m(MF[00m
					(ADVX
						(ADV dann))[01;36m)[00m
				[01;36m(SIMPX[00m
					[01;31m(SIMPX[00m
						(VF wieviel)
						(LK sagten)
						[01;31m(MF[00m [01;33m(MF[00m
							(NX
								(PPER sie))[01;31m)[00m[01;31m)[00m
					(NX zweihundert)[01;36m)[00m[01;31m)[00m[01;31m)[00m)) [01;33mMF)[00m
Step:NP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'NX'], 'mover info': [('NX', (22, 23))], 'old_family': ['ADVX', 'SIMPX', 'NX'], 'start left siblings': ['ADVX', 'SIMPX'], 'auto preterminals': ('ADV', 'PWS', 'VVFIN', 'PPER', 'CARD'), 'start right siblings': [], 'end left siblings': ['NX'], 'auto preterminal span': (18, 23), 'movers': ['NX'], 'old_parent': 'MF', 'POS confusion': ('CARD', 'CARD'), 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(DM ja)
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(VF dann)
				(LK wurde)
				(MF ich aber)
				(VC sagen)[01;36m)[00m
			[01;31m(NF[00m
				(SIMPX
					(VF ich)
					(LK nehme)
					(MF auf jeden fall mal den hinflug)
					[01;31m(NF[00m
						(ADVX
							(ADV einfach))[01;31m)[00m)[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF das)
			(LK waren)
			[01;31m(MF[00m
				[01;36m(MF[00m
					(ADVX
						(ADV dann))[01;36m)[00m
				(SIMPX wieviel sagten sie zweihundert)[01;31m)[00m[01;31m)[00m))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['NF', 'VF', 'LK', 'MF'], 'mover info': [('NF', (7, 16))], 'old_family': ['VF', 'LK', 'MF', 'VC', 'NF'], 'start left siblings': ['VF', 'LK', 'MF', 'VC'], 'auto preterminals': ('PTKANT', 'PTKANT', 'ADV', 'VAFIN', 'PPER', 'ADV', 'VVINF', 'PPER', 'VVFIN', 'APPR', 'PIDAT', 'NN', 'ADV', 'ART', 'NN', 'ADV', 'PDS', 'VAFIN', 'ADV', 'PWS', 'VVFIN', 'PPER', 'CARD'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 23), 'movers': ['NF'], 'old_parent': 'SIMPX', 'end right siblings': ['VF', 'LK', 'MF'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(DM ja)
		(SIMPX dann wurde ich aber sagen)
		[01;31m(SIMPX[00m
			[01;31m(NF[00m
				(SIMPX
					(VF ich)
					(LK nehme)
					(MF auf jeden fall mal den hinflug)
					[01;31m(NF[00m
						(ADVX
							(ADV einfach))[01;31m)[00m)[01;31m)[00m
			(VF das)
			(LK waren)
			[01;31m(MF[00m
				[01;36m(MF[00m
					(ADVX
						(ADV dann))[01;36m)[00m
				(SIMPX wieviel sagten sie zweihundert)[01;31m)[00m[01;31m)[00m))
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['NF', 'VF', 'LK', 'MF', 'SIMPX'], 'mover info': [('SIMPX', (19, 23))], 'old_family': ['ADVX', 'SIMPX'], 'start left siblings': ['ADVX'], 'auto preterminals': ('PPER', 'VVFIN', 'APPR', 'PIDAT', 'NN', 'ADV', 'ART', 'NN', 'ADV', 'PDS', 'VAFIN', 'ADV', 'PWS', 'VVFIN', 'PPER', 'CARD'), 'start right siblings': [], 'end left siblings': ['NF', 'VF', 'LK', 'MF'], 'auto preterminal span': (7, 23), 'movers': ['SIMPX'], 'old_parent': 'MF', 'end right siblings': [], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(DM ja)
		(SIMPX dann wurde ich aber sagen)
		[01;31m(SIMPX[00m
			[01;31m(NF[00m
				(SIMPX
					(VF ich)
					(LK nehme)
					(MF auf jeden fall mal den hinflug)
					[01;31m(NF[00m
						(ADVX
							(ADV einfach))[01;31m)[00m)[01;31m)[00m
			(VF das)
			(LK waren)
			(MF dann)
			(SIMPX wieviel sagten sie zweihundert)[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['NF', 'VF', 'LK', 'MF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'APPR', 'PIDAT', 'NN', 'ADV', 'ART', 'NN', 'ADV', 'PDS', 'VAFIN', 'ADV', 'PWS', 'VVFIN', 'PPER', 'CARD'), 'right siblings': ['VF', 'LK', 'MF', 'SIMPX'], 'parent': 'SIMPX', 'auto preterminal span': (7, 23), 'span': (7, 16), 'left siblings': [], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM ja)
		(SIMPX dann wurde ich aber sagen)
		[01;31m(SIMPX[00m
			(SIMPX
				(VF ich)
				(LK nehme)
				(MF auf jeden fall mal den hinflug)
				[01;31m(NF[00m
					(ADVX
						(ADV einfach))[01;31m)[00m)
			(VF das)
			(LK waren)
			(MF dann)
			(SIMPX wieviel sagten sie zweihundert)[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'VF', 'LK', 'MF', 'SIMPX'], 'family': ['DM', 'DM', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PTKANT', 'ADV', 'VAFIN', 'PPER', 'ADV', 'VVINF', 'PPER', 'VVFIN', 'APPR', 'PIDAT', 'NN', 'ADV', 'ART', 'NN', 'ADV', 'PDS', 'VAFIN', 'ADV', 'PWS', 'VVFIN', 'PPER', 'CARD'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 23), 'span': (7, 23), 'left siblings': ['DM', 'DM', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM ja)
		(SIMPX dann wurde ich aber sagen)
		(SIMPX
			(VF ich)
			(LK nehme)
			(MF auf jeden fall mal den hinflug)
			[01;31m(NF[00m
				(ADVX
					(ADV einfach))[01;31m)[00m)
		(VF das)
		(LK waren)
		(MF dann)
		(SIMPX wieviel sagten sie zweihundert)))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['VF', 'LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'APPR', 'PIDAT', 'NN', 'ADV', 'ART', 'NN', 'ADV'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (7, 16), 'span': (15, 16), 'left siblings': ['VF', 'LK', 'MF'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja ja dann wurde ich aber sagen ich nehme auf jeden fall mal den hinflug einfach das waren dann wieviel sagten sie zweihundert)

Sentence 372:
0 Initial errors
0 on fringe, 0 iterations

Sentence 373:
4 Initial errors
0 on fringe, 3 iterations
2 Error:Co-ordination
1 Error:Modifier Attachment
1 Error:UNSET add
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP [01;33m(NX[00m
	(TURN
		[01;36m(ADVX[00m
			(NX zweihundert dreisig mark)
			[01;31m(NX[00m
				(KON und)
				[01;31m(NX[00m
					(NX eine einfache fahrt) [01;33mNX)[00m
					(ADVX zuruck)[01;31m)[00m[01;31m)[00m[01;36m)[00m
		(DM ja)))
Step:Co-ordination
{'new_parent': 'TURN', 'new_family': ['NX', 'KON', 'NX', 'DM'], 'mover info': [('KON', (3, 4))], 'old_family': ['KON', 'NX'], 'start left siblings': [], 'auto preterminals': ('CARD', 'CARD', 'NN', 'KON', 'ART', 'ADJA', 'NN', 'ADV', 'PTKANT'), 'start right siblings': ['NX'], 'end left siblings': ['NX'], 'auto preterminal span': (0, 9), 'adding node already present': False, 'movers': ['KON'], 'old_parent': 'NX', 'POS confusion': ('KON', 'KON'), 'added and moved': True, 'end right siblings': ['NX', 'DM'], 'classified_type': 'Co-ordination', 'type': 'move', 'added label': 'ADVX'}
(TOP [01;33m(NX[00m
	(TURN
		(ADVX
			(NX zweihundert dreisig mark)
			(KON und)
			[01;31m(NX[00m
				(NX eine einfache fahrt) [01;33mNX)[00m
				(ADVX zuruck)[01;31m)[00m)
		(DM ja)))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADVX'], 'family': ['NX', 'KON', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'CARD', 'NN', 'KON', 'ART', 'ADJA', 'NN', 'ADV'), 'right siblings': [], 'parent': 'ADVX', 'auto preterminal span': (0, 8), 'span': (4, 8), 'left siblings': ['NX', 'KON'], 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(ADVX
			[01;36m(NX[00m
				(NX zweihundert dreisig mark)
				(KON und)
				(NX eine einfache fahrt)[01;36m)[00m
			(ADVX zuruck))
		(DM ja)))
Step:UNSET add
{'subtrees': ['NX', 'KON', 'NX'], 'family': ['NX', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'CARD', 'NN', 'KON', 'ART', 'ADJA', 'NN'), 'right siblings': [(ADVX (ADV zuruck))], 'left siblings': [], 'auto preterminal span': (0, 7), 'span': (0, 7), 'parent': 'ADVX', 'label': 'NX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP zweihundert dreisig mark und eine einfache fahrt zuruck ja)

Sentence 374:
0 Initial errors
0 on fringe, 0 iterations

Sentence 375:
0 Initial errors
0 on fringe, 0 iterations

Sentence 376:
0 Initial errors
0 on fringe, 0 iterations

Sentence 377:
0 Initial errors
0 on fringe, 0 iterations

Sentence 378:
0 Initial errors
0 on fringe, 0 iterations

Sentence 379:
0 Initial errors
0 on fringe, 0 iterations

Sentence 380:
0 Initial errors
0 on fringe, 0 iterations

Sentence 381:
0 Initial errors
0 on fringe, 0 iterations

Sentence 382:
0 Initial errors
0 on fringe, 0 iterations

Sentence 383:
6 Initial errors
0 on fringe, 2 iterations
4 Error:UNSET move
2 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SIMPX[00m
	(TOP
		(TURN
			[01;31m(SIMPX[00m
				(LK sagen)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX sie)
					(NX mir)
					(NX ihren namen)
					(ADVX noch)
					(ADVX mal)[01;31m)[00m[01;31m)[00m
			[01;36m(ADVX[00m [01;31m(DM[00m
				(PTKANT bitte)[01;31m)[00m[01;36m)[00m)) [01;33mMF)[00m[01;36m)[00m
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['NX', 'NX', 'NX', 'ADVX', 'ADVX', 'DM'], 'mover info': [('DM', (7, 8))], 'old_family': ['SIMPX', 'DM'], 'start left siblings': ['SIMPX'], 'auto preterminals': ('VVIMP', 'PPER', 'PPER', 'PPOSAT', 'NN', 'ADV', 'ADV', 'PTKANT'), 'start right siblings': [], 'end left siblings': ['NX', 'NX', 'NX', 'ADVX', 'ADVX'], 'auto preterminal span': (0, 8), 'movers': ['DM'], 'old_parent': 'TURN', 'POS confusion': ('PTKANT', 'PTKANT'), 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SIMPX
			(LK sagen)
			(MF
				(NX sie)
				(NX mir)
				(NX ihren namen)
				(ADVX noch)
				(ADVX mal)
				[01;36m(ADVX[00m [01;31m(DM[00m
					(PTKANT bitte)[01;31m)[00m[01;36m)[00m))))
Step:Single Word Phrase
{'family': ['NX', 'NX', 'NX', 'ADVX', 'ADVX', 'ADVX'], 'auto preterminal span': (7, 8), 'span': (7, 8), 'subtrees': ['PTKANT'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('PTKANT',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('DM', 'ADVX')}
(TOP sagen sie mir ihren namen noch mal bitte)

Sentence 384:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM
			[01;31m(NX[00m
				(NE meurer)[01;31m)[00m)))
Step:Single Word Phrase
{'subtrees': ['NE'], 'family': ['NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('NE',), 'right siblings': [], 'parent': 'DM', 'auto preterminal span': (0, 1), 'span': (0, 1), 'left siblings': [], 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP meurer)

Sentence 385:
0 Initial errors
0 on fringe, 0 iterations

Sentence 386:
4 Initial errors
0 on fringe, 3 iterations
2 Error:PP Attachment
1 Error:Unary
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
[01;36m(SIMPX[00m
	(TOP
		(TURN
			[01;36m(VF[00m
				(PX
					(APPRART im)
					(NX august))[01;36m)[00m
			(DM ja)
			[01;31m(SIMPX[00m
				(LK gibt)
				(MF
					(NX es)
					(ADVX da)
					[01;36m(NX[00m
						(NX einen romantischen termin)
						(PX im august)[01;36m)[00m)[01;31m)[00m))[01;36m)[00m
Step:PP Attachment
{'new_parent': 'SIMPX', 'new_family': ['PX', 'DM', 'LK', 'MF'], 'mover info': [('PX', (0, 2)), ('DM', (2, 3))], 'old_family': ['PX', 'DM', 'SIMPX'], 'start left siblings': [], 'auto preterminals': ('APPRART', 'NN', 'PTKANT', 'VVFIN', 'PPER', 'ADV', 'ART', 'ADJA', 'NN', 'APPRART', 'NN'), 'start right siblings': ['SIMPX'], 'end left siblings': [], 'auto preterminal span': (0, 11), 'movers': ['PX', 'DM'], 'old_parent': 'TURN', 'end right siblings': ['LK', 'MF'], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SIMPX
			[01;36m(VF[00m
				(PX
					(APPRART im)
					(NX august))[01;36m)[00m
			(DM ja)
			(LK gibt)
			(MF
				(NX es)
				(ADVX da)
				[01;36m(NX[00m
					(NX einen romantischen termin)
					(PX im august)[01;36m)[00m))))
Step:Unary
{'subtrees': ['PX'], 'family': ['VF', 'DM', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'NN'), 'right siblings': [(DM (PTKANT ja)), (LK (VXFIN (VVFIN gibt))), (MF (NX (PPER es)) (ADVX (ADV da)) (NX (ART einen) (ADJX (ADJA romantischen)) (NN termin)) (PX (APPRART im) (NX (NN august))))], 'left siblings': [], 'auto preterminal span': (0, 2), 'span': (0, 2), 'parent': 'SIMPX', 'label': 'VF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SIMPX
			(VF im august)
			(DM ja)
			(LK gibt)
			(MF
				(NX es)
				(ADVX da)
				[01;36m(NX[00m
					(NX einen romantischen termin)
					(PX im august)[01;36m)[00m))))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['NX', 'ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'ADJA', 'NN', 'APPRART', 'NN'), 'right siblings': [], 'left siblings': [(NX (PPER es)), (ADVX (ADV da))], 'auto preterminal span': (6, 11), 'span': (6, 11), 'parent': 'MF', 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP im august ja gibt es da einen romantischen termin im august)

Sentence 387:
3 Initial errors
0 on fringe, 3 iterations
1 Error:UNSET add
1 Error:UNSET remove
1 Error:UNSET add
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX
			(KOORD und)
			(LK wurden)
			(MF
				(NX sie)
				(NX mir)
				(ADVX bitte)
				(ADVX noch)
				(PX [01;33m(PX[00m
					(APPR fur)
					[01;31m(NX[00m
						(NX die nachte) [01;33mPX)[00m
						(APPRART vom)
						(DM also)
						(NX
							(NX dienstag nacht)
							[01;36m(PX[00m
								(APPR bis)
								(NX freitag nacht)[01;36m)[00m)[01;31m)[00m)
				(ADVX noch)
				(NX das hotel))
			(VC buchen))))
Step:UNSET add
{'subtrees': ['APPR', 'NX'], 'family': ['NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'NN', 'ADV'), 'right siblings': [], 'left siblings': [(NX (NX (NN dienstag)) (ADVX (ADV nacht)))], 'auto preterminal span': (13, 16), 'span': (13, 16), 'parent': 'NX', 'label': 'PX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SIMPX
			(KOORD und)
			(LK wurden)
			(MF
				(NX sie)
				(NX mir)
				(ADVX bitte)
				(ADVX noch)
				(PX [01;33m(PX[00m
					(APPR fur)
					[01;31m(NX[00m
						(NX die nachte) [01;33mPX)[00m
						(APPRART vom)
						(DM also)
						(NX dienstag nacht bis freitag nacht)[01;31m)[00m)
				(ADVX noch)
				(NX das hotel))
			(VC buchen))))
Step:UNSET remove
{'subtrees': ['NX', 'APPRART', 'DM', 'NX'], 'family': ['APPR', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NN', 'APPRART', 'ADV', 'NN', 'ADV', 'APPR', 'NN', 'ADV'), 'right siblings': [], 'parent': 'PX', 'auto preterminal span': (6, 16), 'span': (7, 16), 'left siblings': ['APPR'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX
			(KOORD und)
			(LK wurden)
			(MF
				(NX sie)
				(NX mir)
				(ADVX bitte)
				(ADVX noch)
				(PX
					[01;36m(PX[00m
						(APPR fur)
						(NX die nachte)[01;36m)[00m
					(APPRART vom)
					(DM also)
					(NX dienstag nacht bis freitag nacht))
				(ADVX noch)
				(NX das hotel))
			(VC buchen))))
Step:UNSET add
{'subtrees': ['APPR', 'NX'], 'family': ['PX', 'APPRART', 'DM', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NN'), 'right siblings': [(APPRART vom), (DM (ADVX (ADV also))), (NX (NX (NX (NN dienstag)) (ADVX (ADV nacht))) (PX (APPR bis) (NX (NX (NN freitag)) (ADVX (ADV nacht)))))], 'left siblings': [], 'auto preterminal span': (6, 9), 'span': (6, 9), 'parent': 'PX', 'label': 'PX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP und wurden sie mir bitte noch fur die nachte vom also dienstag nacht bis freitag nacht noch das hotel buchen)

Sentence 388:
0 Initial errors
0 on fringe, 0 iterations

Sentence 389:
2 Initial errors
0 on fringe, 1 iterations
2 Error:NP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP [01;33m(PX[00m
	(TURN
		(PX
			(APPR fur)
			[01;31m(NX[00m
				(NX hundert funfundvierzig mark) [01;33mPX)[00m
				(NX das einzelzimmer)[01;31m)[00m)))
Step:NP Attachment
{'new_parent': 'PX', 'new_family': ['APPR', 'NX', 'NX'], 'mover info': [('NX', (1, 4))], 'old_family': ['NX', 'NX'], 'start left siblings': [], 'auto preterminals': ('APPR', 'CARD', 'CARD', 'NN', 'ART', 'NN'), 'start right siblings': ['NX'], 'end left siblings': ['APPR'], 'auto preterminal span': (0, 6), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': ['NX'], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'PX'}
(TOP fur hundert funfundvierzig mark das einzelzimmer)

Sentence 390:
3 Initial errors
0 on fringe, 2 iterations
2 Error:NP Attachment
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM gut)
		[01;31m(SIMPX[00m
			(VF das)
			(LK ist)
			[01;31m(MF[00m [01;33m(MF[00m
				(ADVX dann)
				(PX vom vierzehnten juli bis zum siebzehnten juli)[01;31m)[00m[01;31m)[00m
		(NX einzelzimmer hotel loccumerhof))) [01;33mMF)[00m
Step:NP Attachment
{'new_parent': 'MF', 'new_family': ['ADVX', 'PX', 'NX'], 'mover info': [('NX', (11, 14))], 'old_family': ['DM', 'SIMPX', 'NX'], 'start left siblings': ['DM', 'SIMPX'], 'auto preterminals': ('ITJ', 'PDS', 'VAFIN', 'ADV', 'APPRART', 'ADJA', 'NN', 'APPR', 'APPRART', 'ADJA', 'NN', 'NN', 'NN', 'NE'), 'start right siblings': [], 'end left siblings': ['ADVX', 'PX'], 'auto preterminal span': (0, 14), 'movers': ['NX'], 'old_parent': 'TURN', 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM gut)
		[01;31m(SIMPX[00m
			(VF das)
			(LK ist)
			(MF dann vom vierzehnten juli bis zum siebzehnten juli einzelzimmer hotel loccumerhof)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PDS', 'VAFIN', 'ADV', 'APPRART', 'ADJA', 'NN', 'APPR', 'APPRART', 'ADJA', 'NN', 'NN', 'NN', 'NE'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 14), 'span': (1, 14), 'left siblings': ['DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP gut das ist dann vom vierzehnten juli bis zum siebzehnten juli einzelzimmer hotel loccumerhof)

Sentence 391:
7 Initial errors
0 on fringe, 4 iterations
4 Error:UNSET move
1 Error:Unary
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM grus gott)
		(DM frau johann)
		(SIMPX
			(VF
				(SIMPX
					(C wenn)
					[01;31m(MF[00m [01;33m(MF[00m
						(NX ich)
						[01;31m(ADJX[00m
							(ADVX richtig) [01;33mMF)[00m
							(ADJD [01;33m(VC[00m informiert)[01;31m)[00m[01;31m)[00m
					[01;31m(VC[00m
						(VXFIN
							(VAFIN bin))[01;31m)[00m)) [01;33mVC)[00m
			(LK musten)
			(MF wir unbedingt eine termin fur eine geschaftsreise nach hannover)
			(VC vereinbaren))
		(DM ja)
		(SIMPX
			(VF die frage)
			(LK ist)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					(LK haben)
					(MF sie irgendwelche praferierten termine von sich aus)[01;31m)[00m[01;31m)[00m)))
Step:UNSET move
{'new_parent': 'VC', 'new_family': ['ADJD', 'VXFIN'], 'mover info': [('ADJD', (7, 8))], 'old_family': ['ADVX', 'ADJD'], 'start left siblings': ['ADVX'], 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'ADJD', 'VAFIN'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (4, 9), 'movers': ['ADJD'], 'old_parent': 'ADJX', 'POS confusion': ('ADJD', 'ADJD'), 'end right siblings': ['VXFIN'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM grus gott)
		(DM frau johann)
		(SIMPX
			(VF
				(SIMPX
					(C wenn)
					(MF
						(NX ich)
						[01;31m(ADJX[00m
							(ADVX
								(ADV richtig))[01;31m)[00m)
					(VC informiert bin)))
			(LK musten)
			(MF wir unbedingt eine termin fur eine geschaftsreise nach hannover)
			(VC vereinbaren))
		(DM ja)
		(SIMPX
			(VF die frage)
			(LK ist)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					(LK haben)
					(MF sie irgendwelche praferierten termine von sich aus)[01;31m)[00m[01;31m)[00m)))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['NX', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (5, 7), 'span': (6, 7), 'left siblings': ['NX'], 'label': 'ADJX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM grus gott)
		(DM frau johann)
		(SIMPX wenn ich richtig informiert bin musten wir unbedingt eine termin fur eine geschaftsreise nach hannover vereinbaren)
		(DM ja)
		(SIMPX
			(VF die frage)
			(LK ist)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					(LK haben)
					(MF sie irgendwelche praferierten termine von sich aus)[01;31m)[00m[01;31m)[00m)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['VF', 'LK', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'VAFIN', 'VAFIN', 'PPER', 'PIAT', 'ADJA', 'NN', 'APPR', 'PRF', 'APZR'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (21, 32), 'span': (24, 32), 'left siblings': ['VF', 'LK'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM grus gott)
		(DM frau johann)
		(SIMPX wenn ich richtig informiert bin musten wir unbedingt eine termin fur eine geschaftsreise nach hannover vereinbaren)
		(DM ja)
		(SIMPX
			(VF die frage)
			(LK ist)
			[01;31m(SIMPX[00m
				(LK haben)
				(MF sie irgendwelche praferierten termine von sich aus)[01;31m)[00m)))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['VF', 'LK', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'VAFIN', 'VAFIN', 'PPER', 'PIAT', 'ADJA', 'NN', 'APPR', 'PRF', 'APZR'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (21, 32), 'span': (24, 32), 'left siblings': ['VF', 'LK'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP grus gott frau johann wenn ich richtig informiert bin musten wir unbedingt eine termin fur eine geschaftsreise nach hannover vereinbaren ja die frage ist haben sie irgendwelche praferierten termine von sich aus)

Sentence 392:
0 Initial errors
0 on fringe, 0 iterations

Sentence 393:
14 Initial errors
0 on fringe, 7 iterations
5 Error:UNSET move
4 Error:UNSET move
1 Error:Unary
1 Error:PP Attachment
1 Error:UNSET remove
1 Error:PP Attachment
1 Error:UNSET add
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX das ware mir recht)
		[01;31m(SIMPX[00m
			(VF das)
			(LK wurde)
			(MF ja)
			(VC bedeuten)
			[01;31m(NF[00m [01;33m(SIMPX (NF (SIMPX (NF[00m
				[01;31m(SIMPX[00m
					(C das)
					(MF
						(NX wir)
						(APPRART [01;33m(PX[00m am)
						[01;31m(NX[00m
							(NX eine ubernachtung) [01;33mPX)[00m
							(PX in hannover)[01;31m)[00m)
					[01;33m(VXFIN (VC[00m (VC brauchten)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VC vorausgesetzt) [01;33mVC) VXFIN) NF) SIMPX)[00m
			[01;31m(NF[00m
				(SIMPX
					(VF wir)
					(LK kriegen)
					(MF dann am dienstag abend noch den flug nach berlin))[01;31m)[00m[01;31m)[00m [01;33mNF) SIMPX)[00m
		(SIMPX meine sekretarin hat mir hier schon drei hotels rausgesucht)
		(SIMPX
			(LK haben)
			(MF
				(NX sie)
				[01;36m(NX[00m
					(NX irgendwelche vorstellungen)
					(PX davon)[01;36m)[00m)
			(NF wie das hotel aussehen sollte))
		(DM oder)))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['C', 'MF', 'VC', 'VC'], 'mover info': [('VC', (17, 18))], 'old_family': ['VC', 'NF'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'PDS', 'VAFIN', 'PPER', 'ADJD', 'PDS', 'VAFIN', 'ADV', 'VVINF', 'KOUS', 'PPER', 'APPRART', 'ART', 'NN', 'APPR', 'NE', 'VVFIN', 'VVPP', 'PPER', 'VVFIN', 'ADV', 'APPRART', 'NN', 'ADV', 'ADV', 'ART', 'NN', 'APPR', 'NE', 'PPOSAT', 'NN', 'VAFIN', 'PPER', 'ADV', 'ADV', 'CARD', 'NN', 'VVPP', 'VAFIN', 'PPER', 'PIAT', 'NN', 'PROP', 'KOUS', 'ART', 'NN', 'VVINF', 'VMFIN', 'ITJ'), 'start right siblings': ['NF'], 'end left siblings': ['C', 'MF', 'VC'], 'auto preterminal span': (0, 49), 'adding node already present': False, 'movers': ['VC'], 'old_parent': 'SIMPX', 'POS confusion': ('VVPP', 'VVPP'), 'added and moved': True, 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(DM ja)
		(SIMPX das ware mir recht)
		[01;31m(SIMPX[00m
			(VF das)
			(LK wurde)
			(MF ja)
			(VC bedeuten)
			(NF [01;33m(SIMPX (NF[00m
				(SIMPX
					(C das)
					(MF
						(NX wir)
						(APPRART [01;33m(PX[00m am)
						[01;31m(NX[00m
							(NX eine ubernachtung) [01;33mPX)[00m
							(PX in hannover)[01;31m)[00m)
					[01;36m(VXFIN[00m
						(VC
							(VC brauchten)
							(VC vorausgesetzt))[01;36m)[00m))[01;31m)[00m
		(SIMPX
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					(VF wir)
					(LK kriegen)
					(MF dann am dienstag abend noch den flug nach berlin)[01;31m)[00m[01;31m)[00m) [01;33mNF) SIMPX)[00m
		(SIMPX meine sekretarin hat mir hier schon drei hotels rausgesucht)
		(SIMPX
			(LK haben)
			(MF
				(NX sie)
				[01;36m(NX[00m
					(NX irgendwelche vorstellungen)
					(PX davon)[01;36m)[00m)
			(NF wie das hotel aussehen sollte))
		(DM oder)))
Step:UNSET move
{'new_parent': 'NF', 'new_family': ['NF', 'SIMPX'], 'mover info': [('NF', (9, 18))], 'old_family': ['VF', 'LK', 'MF', 'VC', 'NF'], 'start left siblings': ['VF', 'LK', 'MF', 'VC'], 'auto preterminals': ('PTKANT', 'PDS', 'VAFIN', 'PPER', 'ADJD', 'PDS', 'VAFIN', 'ADV', 'VVINF', 'KOUS', 'PPER', 'APPRART', 'ART', 'NN', 'APPR', 'NE', 'VVFIN', 'VVPP', 'PPER', 'VVFIN', 'ADV', 'APPRART', 'NN', 'ADV', 'ADV', 'ART', 'NN', 'APPR', 'NE', 'PPOSAT', 'NN', 'VAFIN', 'PPER', 'ADV', 'ADV', 'CARD', 'NN', 'VVPP', 'VAFIN', 'PPER', 'PIAT', 'NN', 'PROP', 'KOUS', 'ART', 'NN', 'VVINF', 'VMFIN', 'ITJ'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 49), 'movers': ['NF'], 'old_parent': 'SIMPX', 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(SIMPX das ware mir recht)
		[01;31m(SIMPX[00m
			(VF das)
			(LK wurde)
			(MF ja)
			(VC bedeuten)[01;31m)[00m
		(SIMPX
			(NF
				(NF
					(SIMPX
						(C das)
						(MF
							(NX wir)
							(APPRART [01;33m(PX[00m am)
							[01;31m(NX[00m
								(NX eine ubernachtung) [01;33mPX)[00m
								(PX in hannover)[01;31m)[00m)
						[01;36m(VXFIN[00m
							(VC
								(VC brauchten)
								(VC vorausgesetzt))[01;36m)[00m))
				(SIMPX wir kriegen dann am dienstag abend noch den flug nach berlin)))
		(SIMPX meine sekretarin hat mir hier schon drei hotels rausgesucht)
		(SIMPX
			(LK haben)
			(MF
				(NX sie)
				[01;36m(NX[00m
					(NX irgendwelche vorstellungen)
					(PX davon)[01;36m)[00m)
			(NF wie das hotel aussehen sollte))
		(DM oder)))
Step:Unary
{'subtrees': ['VC'], 'family': ['C', 'MF', 'VXFIN'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'VVPP'), 'right siblings': [], 'left siblings': [(C (KOUS das)), (MF (NX (PPER wir)) (APPRART am) (NX (NX (ART eine) (NN ubernachtung)) (PX (APPR in) (NX (NE hannover)))))], 'auto preterminal span': (16, 18), 'span': (16, 18), 'parent': 'SIMPX', 'label': 'VXFIN', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX das ware mir recht)
		[01;31m(SIMPX[00m
			(VF das)
			(LK wurde)
			(MF ja)
			(VC bedeuten)[01;31m)[00m
		(SIMPX
			(NF
				(NF
					(SIMPX
						(C das)
						(MF
							(NX wir)
							(APPRART [01;33m(PX[00m am)
							[01;31m(NX[00m
								(NX eine ubernachtung) [01;33mPX)[00m
								(PX in hannover)[01;31m)[00m)
						(VXFIN brauchten vorausgesetzt)))
				(SIMPX wir kriegen dann am dienstag abend noch den flug nach berlin)))
		(SIMPX meine sekretarin hat mir hier schon drei hotels rausgesucht)
		(SIMPX
			(LK haben)
			(MF
				(NX sie)
				[01;36m(NX[00m
					(NX irgendwelche vorstellungen)
					(PX davon)[01;36m)[00m)
			(NF wie das hotel aussehen sollte))
		(DM oder)))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PIAT', 'NN', 'PROP'), 'right siblings': [], 'left siblings': [(NX (PPER sie))], 'auto preterminal span': (40, 43), 'span': (40, 43), 'parent': 'MF', 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX das ware mir recht)
		[01;31m(SIMPX[00m
			(VF das)
			(LK wurde)
			(MF ja)
			(VC bedeuten)[01;31m)[00m
		(SIMPX
			(NF
				(NF
					(SIMPX
						(C das)
						(MF
							(NX wir)
							(APPRART [01;33m(PX[00m am)
							[01;31m(NX[00m
								(NX eine ubernachtung) [01;33mPX)[00m
								(PX in hannover)[01;31m)[00m)
						(VXFIN brauchten vorausgesetzt)))
				(SIMPX wir kriegen dann am dienstag abend noch den flug nach berlin)))
		(SIMPX meine sekretarin hat mir hier schon drei hotels rausgesucht)
		(SIMPX haben sie irgendwelche vorstellungen davon wie das hotel aussehen sollte)
		(DM oder)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PDS', 'VAFIN', 'PPER', 'ADJD', 'PDS', 'VAFIN', 'ADV', 'VVINF', 'KOUS', 'PPER', 'APPRART', 'ART', 'NN', 'APPR', 'NE', 'VVFIN', 'VVPP', 'PPER', 'VVFIN', 'ADV', 'APPRART', 'NN', 'ADV', 'ADV', 'ART', 'NN', 'APPR', 'NE', 'PPOSAT', 'NN', 'VAFIN', 'PPER', 'ADV', 'ADV', 'CARD', 'NN', 'VVPP', 'VAFIN', 'PPER', 'PIAT', 'NN', 'PROP', 'KOUS', 'ART', 'NN', 'VVINF', 'VMFIN', 'ITJ'), 'right siblings': ['SIMPX', 'SIMPX', 'SIMPX', 'DM'], 'parent': 'TURN', 'auto preterminal span': (0, 49), 'span': (5, 9), 'left siblings': ['DM', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX das ware mir recht)
		(VF das)
		(LK wurde)
		(MF ja)
		(VC bedeuten)
		(SIMPX
			(NF
				(NF
					(SIMPX
						(C das)
						(MF
							(NX wir)
							(APPRART [01;33m(PX[00m am)
							[01;31m(NX[00m
								(NX eine ubernachtung) [01;33mPX)[00m
								(PX in hannover)[01;31m)[00m)
						(VXFIN brauchten vorausgesetzt)))
				(SIMPX wir kriegen dann am dienstag abend noch den flug nach berlin)))
		(SIMPX meine sekretarin hat mir hier schon drei hotels rausgesucht)
		(SIMPX haben sie irgendwelche vorstellungen davon wie das hotel aussehen sollte)
		(DM oder)))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['NX', 'APPRART', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'APPRART', 'ART', 'NN', 'APPR', 'NE'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (10, 16), 'span': (12, 16), 'left siblings': ['NX', 'APPRART'], 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX das ware mir recht)
		(VF das)
		(LK wurde)
		(MF ja)
		(VC bedeuten)
		(SIMPX
			(NF
				(NF
					(SIMPX
						(C das)
						(MF
							(NX wir)
							[01;36m(PX[00m
								(APPRART am)
								(NX eine ubernachtung)[01;36m)[00m
							(PX in hannover))
						(VXFIN brauchten vorausgesetzt)))
				(SIMPX wir kriegen dann am dienstag abend noch den flug nach berlin)))
		(SIMPX meine sekretarin hat mir hier schon drei hotels rausgesucht)
		(SIMPX haben sie irgendwelche vorstellungen davon wie das hotel aussehen sollte)
		(DM oder)))
Step:UNSET add
{'subtrees': ['APPRART', 'NX'], 'family': ['NX', 'PX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'ART', 'NN'), 'right siblings': [(PX (APPR in) (NX (NE hannover)))], 'left siblings': [(NX (PPER wir))], 'auto preterminal span': (11, 14), 'span': (11, 14), 'parent': 'MF', 'label': 'PX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP ja das ware mir recht das wurde ja bedeuten das wir am eine ubernachtung in hannover brauchten vorausgesetzt wir kriegen dann am dienstag abend noch den flug nach berlin meine sekretarin hat mir hier schon drei hotels rausgesucht haben sie irgendwelche vorstellungen davon wie das hotel aussehen sollte oder)

Sentence 394:
3 Initial errors
0 on fringe, 3 iterations
1 Error:Unary
1 Error:Modifier Attachment
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM also)
		(SIMPX
			(VF es)
			(LK gabe)
			(MF
				(NX
					[01;36m(MF[00m
						(NX
							(NX eines)
							(PX mit sauna))[01;36m)[00m
					(NX ein anderes mit hallenbad))))
		[01;31m(NX[00m
			(ADVX scheinbar)
			(ADVX nicht)
			[01;31m(NX[00m
				(NX beides)
				(ADVX zusammen)[01;31m)[00m[01;31m)[00m
		(SIMPX sie wurden dann die sauna vorziehen)))
Step:Unary
{'subtrees': ['NX'], 'family': ['MF', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PIS', 'APPR', 'NN'), 'right siblings': [(NX (NX (ART ein) (PIS anderes)) (PX (APPR mit) (NX (NN hallenbad))))], 'left siblings': [], 'auto preterminal span': (3, 6), 'span': (3, 6), 'parent': 'NX', 'label': 'MF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		(SIMPX es gabe eines mit sauna ein anderes mit hallenbad)
		[01;31m(NX[00m
			(ADVX scheinbar)
			(ADVX nicht)
			[01;31m(NX[00m
				(NX beides)
				(ADVX zusammen)[01;31m)[00m[01;31m)[00m
		(SIMPX sie wurden dann die sauna vorziehen)))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'ADVX', 'NX'], 'family': ['DM', 'SIMPX', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPER', 'VVFIN', 'PIS', 'APPR', 'NN', 'ART', 'PIS', 'APPR', 'NN', 'ADV', 'PTKNEG', 'PIS', 'ADV', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'VVINF'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 20), 'span': (10, 14), 'left siblings': ['DM', 'SIMPX'], 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX es gabe eines mit sauna ein anderes mit hallenbad)
		(ADVX scheinbar)
		(ADVX nicht)
		[01;31m(NX[00m
			(NX beides)
			(ADVX zusammen)[01;31m)[00m
		(SIMPX sie wurden dann die sauna vorziehen)))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADVX'], 'family': ['DM', 'SIMPX', 'ADVX', 'ADVX', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPER', 'VVFIN', 'PIS', 'APPR', 'NN', 'ART', 'PIS', 'APPR', 'NN', 'ADV', 'PTKNEG', 'PIS', 'ADV', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'VVINF'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 20), 'span': (12, 14), 'left siblings': ['DM', 'SIMPX', 'ADVX', 'ADVX'], 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP also es gabe eines mit sauna ein anderes mit hallenbad scheinbar nicht beides zusammen sie wurden dann die sauna vorziehen)

Sentence 395:
6 Initial errors
0 on fringe, 4 iterations
2 Error:Single Word Phrase
2 Error:Clause Attachment
1 Error:UNSET add
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM gut)
		(P
			(SIMPX es scheint mir sowieso gunstig)
			(KOUS weil)
			(SIMPX
				(VF ich)
				(LK sehe)
				(MF grade)
				(NF
					(SIMPX
						(C das)
						(MF
							(NX es)
							(ADVX auch)
							(PX
								(APPR in)
								(NX
									(NX der nahe)
									[01;36m(PX[00m
										(APPRART beim)
										(NX des hauptbahnhofs)[01;36m)[00m)))
						(VC ist)
						(NF
							(SIMPX
								(C was)
								(MF
									(ADVX dann)
									(ADVX sicherlich)
									(ADVX ja)
									(ADVX auch)
									[01;36m(NX[00m [01;31m(ADJX[00m
										(ADJD verkehrsgunstig)[01;31m)[00m[01;36m)[00m)
								(VC ist)))))))
		(DM ja)
		(SIMPX dann werde ich die buchen)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(LK kummern)
				(MF sie sich um die fluge)[01;31m)[00m
			[01;31m(SIMPX[00m
				(LK ginge)
				(MF das)[01;31m)[00m[01;36m)[00m))
Step:Single Word Phrase
{'family': ['ADVX', 'ADVX', 'ADVX', 'ADVX', 'NX'], 'auto preterminal span': (25, 26), 'span': (25, 26), 'subtrees': ['ADJD'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('ADJD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'NX')}
(TOP
	(TURN
		(DM gut)
		(P
			(SIMPX es scheint mir sowieso gunstig)
			(KOUS weil)
			(SIMPX
				(VF ich)
				(LK sehe)
				(MF grade)
				(NF
					(SIMPX
						(C das)
						(MF
							(NX es)
							(ADVX auch)
							(PX
								(APPR in)
								(NX
									(NX der nahe)
									[01;36m(PX[00m
										(APPRART beim)
										(NX des hauptbahnhofs)[01;36m)[00m)))
						(VC ist)
						(NF was dann sicherlich ja auch verkehrsgunstig ist)))))
		(DM ja)
		(SIMPX dann werde ich die buchen)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(LK kummern)
				(MF sie sich um die fluge)[01;31m)[00m
			[01;31m(SIMPX[00m
				(LK ginge)
				(MF das)[01;31m)[00m[01;36m)[00m))
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['SIMPX', 'LK', 'MF'], 'mover info': [('SIMPX', (33, 39))], 'old_family': ['DM', 'P', 'DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'start left siblings': ['DM', 'P', 'DM', 'SIMPX'], 'auto preterminals': ('ITJ', 'PPER', 'VVFIN', 'PPER', 'ADV', 'ADJD', 'KOUS', 'PPER', 'VVFIN', 'ADV', 'KOUS', 'PPER', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'ART', 'NN', 'VAFIN', 'PWS', 'ADV', 'ADV', 'ADV', 'ADV', 'ADJD', 'VAFIN', 'PTKANT', 'ADV', 'VAFIN', 'PPER', 'PDS', 'VVINF', 'VVFIN', 'PPER', 'PRF', 'APPR', 'ART', 'NN', 'VVFIN', 'PDS'), 'start right siblings': ['SIMPX'], 'end left siblings': [], 'auto preterminal span': (0, 41), 'movers': ['SIMPX'], 'old_parent': 'TURN', 'end right siblings': ['LK', 'MF'], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM gut)
		(P
			(SIMPX es scheint mir sowieso gunstig)
			(KOUS weil)
			(SIMPX
				(VF ich)
				(LK sehe)
				(MF grade)
				(NF
					(SIMPX
						(C das)
						(MF
							(NX es)
							(ADVX auch)
							(PX
								(APPR in)
								(NX
									(NX der nahe)
									[01;36m(PX[00m
										(APPRART beim)
										(NX des hauptbahnhofs)[01;36m)[00m)))
						(VC ist)
						(NF was dann sicherlich ja auch verkehrsgunstig ist)))))
		(DM ja)
		(SIMPX dann werde ich die buchen)
		(SIMPX
			[01;31m(SIMPX[00m
				(LK kummern)
				(MF sie sich um die fluge)[01;31m)[00m
			(LK ginge)
			(MF das))))
Step:UNSET add
{'subtrees': ['APPRART', 'NX'], 'family': ['NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'ART', 'NN'), 'right siblings': [], 'left siblings': [(NX (ART der) (NN nahe))], 'auto preterminal span': (16, 19), 'span': (16, 19), 'parent': 'NX', 'label': 'PX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM gut)
		(P es scheint mir sowieso gunstig weil ich sehe grade das es auch in der nahe beim des hauptbahnhofs ist was dann sicherlich ja auch verkehrsgunstig ist)
		(DM ja)
		(SIMPX dann werde ich die buchen)
		(SIMPX
			[01;31m(SIMPX[00m
				(LK kummern)
				(MF sie sich um die fluge)[01;31m)[00m
			(LK ginge)
			(MF das))))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['SIMPX', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'PRF', 'APPR', 'ART', 'NN', 'VVFIN', 'PDS'), 'right siblings': ['LK', 'MF'], 'parent': 'SIMPX', 'auto preterminal span': (33, 41), 'span': (33, 39), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP gut es scheint mir sowieso gunstig weil ich sehe grade das es auch in der nahe beim des hauptbahnhofs ist was dann sicherlich ja auch verkehrsgunstig ist ja dann werde ich die buchen kummern sie sich um die fluge ginge das)

Sentence 396:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX mir ware beides recht)
		(DM also)
		(SIMPX dienstag abend oder mittwoch morgen muste man ja dann sagen)
		(DM genau)
		(SIMPX
			(VF dann)
			(LK wurde)
			(MF ich mit dem hotelbuchen einfach noch)
			(VC warten)
			(NF
				(SIMPX
					(C bis)
					(MF
						(NX das)
						[01;36m(MF[00m
							(ADJX
								(ADJD geklart))[01;36m)[00m)
					(VC ist))))))
Step:Unary
{'subtrees': ['ADJX'], 'family': ['NX', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJD',), 'right siblings': [], 'left siblings': [(NX (PDS das))], 'auto preterminal span': (27, 28), 'span': (27, 28), 'parent': 'MF', 'label': 'MF', 'classified_type': 'Unary', 'type': 'add'}
(TOP mir ware beides recht also dienstag abend oder mittwoch morgen muste man ja dann sagen genau dann wurde ich mit dem hotelbuchen einfach noch warten bis das geklart ist)

Sentence 397:
7 Initial errors
0 on fringe, 5 iterations
2 Error:Clause Attachment
2 Error:Modifier Attachment
1 Error:Unary
1 Error:Unary
1 Error:Clause Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX
			(VF das)
			(LK sollte)
			(MF dann)
			[01;36m(VXINF[00m
				(VC
					(VXINF zu machen)
					(VXINF sein))[01;36m)[00m)
		(DM ja)
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(VF die frage)
				(LK ist)
				(MF jetzt noch)[01;36m)[00m
			(SIMPX
				(VF man)
				(LK hat)
				(MF
					(NX mir)
					[01;31m(PX[00m
						(ADVX hier)
						[01;36m(PX[00m
							(APPR bei)
							(NX der mappe)[01;36m)[00m[01;31m)[00m
					(ADVX auch)
					(NX einige informationen uber sehenswurdigkeiten und veranstaltungen))
				(VC hingelegt))
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					(SIMPX haben sie da auch interesse)
					(SIMPX soll ich da irgendwas buchen)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(DM oder)))
Step:Clause Attachment
{'new_parent': 'TURN', 'new_family': ['SIMPX', 'DM', 'SIMPX', 'SIMPX', 'NF', 'DM'], 'mover info': [('SIMPX', (12, 27)), ('NF', (27, 37))], 'old_family': ['VF', 'LK', 'MF', 'SIMPX', 'NF'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('PDS', 'VMFIN', 'ADV', 'PTKZU', 'VVINF', 'VAINF', 'PTKANT', 'ART', 'NN', 'VAFIN', 'ADV', 'ADV', 'PIS', 'VAFIN', 'PPER', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'PIAT', 'NN', 'APPR', 'NN', 'KON', 'NN', 'VVPP', 'VAFIN', 'PPER', 'ADV', 'ADV', 'NN', 'VMFIN', 'PPER', 'ADV', 'PIS', 'VVINF', 'ITJ'), 'start right siblings': [], 'end left siblings': ['SIMPX', 'DM', 'SIMPX'], 'auto preterminal span': (0, 38), 'movers': ['SIMPX', 'NF'], 'old_parent': 'SIMPX', 'end right siblings': ['DM'], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(SIMPX
			(VF das)
			(LK sollte)
			(MF dann)
			[01;36m(VXINF[00m
				(VC
					(VXINF zu machen)
					(VXINF sein))[01;36m)[00m)
		(DM ja)
		(SIMPX die frage ist jetzt noch)
		(SIMPX
			(VF man)
			(LK hat)
			(MF
				(NX mir)
				[01;31m(PX[00m
					(ADVX hier)
					[01;36m(PX[00m
						(APPR bei)
						(NX der mappe)[01;36m)[00m[01;31m)[00m
				(ADVX auch)
				(NX einige informationen uber sehenswurdigkeiten und veranstaltungen))
			(VC hingelegt))
		[01;31m(NF[00m
			[01;31m(SIMPX[00m
				(SIMPX haben sie da auch interesse)
				(SIMPX soll ich da irgendwas buchen)[01;31m)[00m[01;31m)[00m
		(DM oder)))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'ADVX', 'PX', 'ADVX', 'NX'], 'mover info': [('ADVX', (15, 16))], 'old_family': ['ADVX', 'APPR', 'NX'], 'start left siblings': [], 'auto preterminals': ('PPER', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'PIAT', 'NN', 'APPR', 'NN', 'KON', 'NN'), 'start right siblings': ['APPR', 'NX'], 'end left siblings': ['NX'], 'auto preterminal span': (14, 26), 'movers': ['ADVX'], 'old_parent': 'PX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['PX', 'ADVX', 'NX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SIMPX
			(VF das)
			(LK sollte)
			(MF dann)
			[01;36m(VXINF[00m
				(VC
					(VXINF zu machen)
					(VXINF sein))[01;36m)[00m)
		(DM ja)
		(SIMPX die frage ist jetzt noch)
		(SIMPX man hat mir hier bei der mappe auch einige informationen uber sehenswurdigkeiten und veranstaltungen hingelegt)
		[01;31m(NF[00m
			[01;31m(SIMPX[00m
				(SIMPX haben sie da auch interesse)
				(SIMPX soll ich da irgendwas buchen)[01;31m)[00m[01;31m)[00m
		(DM oder)))
Step:Unary
{'subtrees': ['VC'], 'family': ['VF', 'LK', 'MF', 'VXINF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKZU', 'VVINF', 'VAINF'), 'right siblings': [], 'left siblings': [(VF (NX (PDS das))), (LK (VXFIN (VMFIN sollte))), (MF (ADVX (ADV dann)))], 'auto preterminal span': (3, 6), 'span': (3, 6), 'parent': 'SIMPX', 'label': 'VXINF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SIMPX das sollte dann zu machen sein)
		(DM ja)
		(SIMPX die frage ist jetzt noch)
		(SIMPX man hat mir hier bei der mappe auch einige informationen uber sehenswurdigkeiten und veranstaltungen hingelegt)
		[01;31m(NF[00m
			[01;31m(SIMPX[00m
				(SIMPX haben sie da auch interesse)
				(SIMPX soll ich da irgendwas buchen)[01;31m)[00m[01;31m)[00m
		(DM oder)))
Step:Unary
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'PPER', 'ADV', 'ADV', 'NN', 'VMFIN', 'PPER', 'ADV', 'PIS', 'VVINF'), 'right siblings': [], 'parent': 'NF', 'auto preterminal span': (27, 37), 'span': (27, 37), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX das sollte dann zu machen sein)
		(DM ja)
		(SIMPX die frage ist jetzt noch)
		(SIMPX man hat mir hier bei der mappe auch einige informationen uber sehenswurdigkeiten und veranstaltungen hingelegt)
		[01;31m(NF[00m
			(SIMPX haben sie da auch interesse)
			(SIMPX soll ich da irgendwas buchen)[01;31m)[00m
		(DM oder)))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['SIMPX', 'DM', 'SIMPX', 'SIMPX', 'NF', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VMFIN', 'ADV', 'PTKZU', 'VVINF', 'VAINF', 'PTKANT', 'ART', 'NN', 'VAFIN', 'ADV', 'ADV', 'PIS', 'VAFIN', 'PPER', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'PIAT', 'NN', 'APPR', 'NN', 'KON', 'NN', 'VVPP', 'VAFIN', 'PPER', 'ADV', 'ADV', 'NN', 'VMFIN', 'PPER', 'ADV', 'PIS', 'VVINF', 'ITJ'), 'right siblings': ['DM'], 'parent': 'TURN', 'auto preterminal span': (0, 38), 'span': (27, 37), 'left siblings': ['SIMPX', 'DM', 'SIMPX', 'SIMPX'], 'label': 'NF', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP das sollte dann zu machen sein ja die frage ist jetzt noch man hat mir hier bei der mappe auch einige informationen uber sehenswurdigkeiten und veranstaltungen hingelegt haben sie da auch interesse soll ich da irgendwas buchen oder)

Sentence 398:
11 Initial errors
0 on fringe, 9 iterations
2 Error:NP Attachment
2 Error:UNSET move
1 Error:UNSET remove
1 Error:PP Attachment
1 Error:UNSET add
1 Error:Unary
1 Error:Modifier Attachment
1 Error:UNSET remove
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM also)
		(SIMPX
			(VF unter den angeboten)
			(LK sind)
			[01;31m(MF[00m
				[01;31m(PX[00m
					(APPR in)
					[01;31m(NX[00m [01;33m(NX[00m
						(NX diese richtung)
						[01;31m(NX[00m
							(ART der)
							[01;36m(ADJX[00m
								[01;31m(ADJX[00m
									(ADJA darstellenden)[01;31m)[00m
								(NN kunste)[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(ADJX zwei)
						(NN kategorien)[01;31m)[00m
					(NX opernbesuche und gospelkonzert)[01;31m)[00m [01;33mNX)[00m
				[01;33m(SIMPX (NF[00m (PX an dem abend)[01;31m)[00m
			(VC zu buchen)) [01;33mNF) SIMPX)[00m
		(SIMPX sollen wir dann das gospelkonzert nehmen)
		(SIMPX das ist sicherlich leichter als ein wagner)))
Step:NP Attachment
{'new_parent': 'NX', 'new_family': ['NX', 'NX', 'NX'], 'mover info': [('NX', (11, 16))], 'old_family': ['PX', 'NX', 'PX'], 'start left siblings': ['PX'], 'auto preterminals': ('APPR', 'PDAT', 'NN', 'ART', 'ADJA', 'NN', 'CARD', 'NN', 'NN', 'KON', 'NN', 'APPR', 'ART', 'NN'), 'start right siblings': ['PX'], 'end left siblings': ['NX', 'NX'], 'auto preterminal span': (5, 19), 'movers': ['NX'], 'old_parent': 'MF', 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM also)
		(SIMPX
			(VF unter den angeboten)
			(LK sind)
			[01;31m(MF[00m
				[01;31m(PX[00m
					(APPR in)
					(NX
						(NX diese richtung)
						[01;31m(NX[00m
							(ART der)
							[01;36m(ADJX[00m
								[01;31m(ADJX[00m
									(ADJA darstellenden)[01;31m)[00m
								(NN kunste)[01;36m)[00m[01;31m)[00m
						[01;31m(NX[00m
							[01;31m(NX[00m
								(ADJX zwei)
								(NN kategorien)[01;31m)[00m
							(NX opernbesuche und gospelkonzert)[01;31m)[00m)[01;31m)[00m
				[01;33m(SIMPX (NF[00m (PX an dem abend)[01;31m)[00m
			(VC zu buchen)) [01;33mNF) SIMPX)[00m
		(SIMPX sollen wir dann das gospelkonzert nehmen)
		(SIMPX das ist sicherlich leichter als ein wagner)))
Step:UNSET move
{'new_parent': 'ADJX', 'new_family': ['ADJA', 'NN'], 'mover info': [('NN', (10, 11))], 'old_family': ['ART', 'ADJX', 'NN'], 'start left siblings': ['ART', 'ADJX'], 'auto preterminals': ('ART', 'ADJA', 'NN'), 'start right siblings': [], 'end left siblings': ['ADJA'], 'auto preterminal span': (8, 11), 'movers': ['NN'], 'old_parent': 'NX', 'POS confusion': ('NN', 'NN'), 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM also)
		(SIMPX
			(VF unter den angeboten)
			(LK sind)
			[01;31m(MF[00m
				[01;31m(PX[00m
					(APPR in)
					(NX
						(NX diese richtung)
						[01;31m(NX[00m
							(ART der)
							(ADJX darstellenden kunste)[01;31m)[00m
						[01;31m(NX[00m
							[01;31m(NX[00m
								(ADJX zwei)
								(NN kategorien)[01;31m)[00m
							(NX opernbesuche und gospelkonzert)[01;31m)[00m)[01;31m)[00m
				[01;33m(SIMPX (NF[00m (PX an dem abend)[01;31m)[00m
			(VC zu buchen)) [01;33mNF) SIMPX)[00m
		(SIMPX sollen wir dann das gospelkonzert nehmen)
		(SIMPX das ist sicherlich leichter als ein wagner)))
Step:UNSET remove
{'subtrees': ['APPR', 'NX'], 'family': ['PX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'PDAT', 'NN', 'ART', 'ADJA', 'NN', 'CARD', 'NN', 'NN', 'KON', 'NN', 'APPR', 'ART', 'NN'), 'right siblings': ['PX'], 'parent': 'MF', 'auto preterminal span': (5, 19), 'span': (5, 16), 'left siblings': [], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX
			(VF unter den angeboten)
			(LK sind)
			[01;31m(MF[00m
				(APPR in)
				(NX
					(NX diese richtung)
					[01;31m(NX[00m
						(ART der)
						(ADJX darstellenden kunste)[01;31m)[00m
					[01;31m(NX[00m
						[01;31m(NX[00m
							(ADJX zwei)
							(NN kategorien)[01;31m)[00m
						(NX opernbesuche und gospelkonzert)[01;31m)[00m)
				[01;33m(SIMPX (NF[00m (PX an dem abend)[01;31m)[00m
			(VC zu buchen)) [01;33mNF) SIMPX)[00m
		(SIMPX sollen wir dann das gospelkonzert nehmen)
		(SIMPX das ist sicherlich leichter als ein wagner)))
Step:PP Attachment
{'subtrees': ['APPR', 'NX', 'PX'], 'family': ['VF', 'LK', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NN', 'VAFIN', 'APPR', 'PDAT', 'NN', 'ART', 'ADJA', 'NN', 'CARD', 'NN', 'NN', 'KON', 'NN', 'APPR', 'ART', 'NN', 'PTKZU', 'VVINF'), 'right siblings': ['VC'], 'parent': 'SIMPX', 'auto preterminal span': (1, 21), 'span': (5, 19), 'left siblings': ['VF', 'LK'], 'label': 'MF', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX
			(VF unter den angeboten)
			(LK sind)
			(APPR in)
			(NX
				(NX diese richtung)
				[01;31m(NX[00m
					(ART der)
					(ADJX darstellenden kunste)[01;31m)[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(ADJX zwei)
						(NN kategorien)[01;31m)[00m
					(NX opernbesuche und gospelkonzert)[01;31m)[00m)
			[01;36m(SIMPX[00m
				[01;36m(NF[00m
					(PX an dem abend)
					(VC zu buchen)[01;36m)[00m[01;36m)[00m)
		(SIMPX sollen wir dann das gospelkonzert nehmen)
		(SIMPX das ist sicherlich leichter als ein wagner)))
Step:UNSET add
{'subtrees': ['PX', 'VC'], 'family': ['VF', 'LK', 'APPR', 'NX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NN', 'PTKZU', 'VVINF'), 'right siblings': [], 'left siblings': [(VF (PX (APPR unter) (NX (ART den) (NN angeboten)))), (LK (VXFIN (VAFIN sind))), (APPR in), (NX (NX (PDAT diese) (NN richtung)) (NX (ART der) (ADJX (ADJA darstellenden) (NN kunste))) (NX (NX (ADJX (CARD zwei)) (NN kategorien)) (NX (NX (NN opernbesuche)) (KON und) (NX (NN gospelkonzert)))))], 'auto preterminal span': (16, 21), 'span': (16, 21), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		(SIMPX
			(VF unter den angeboten)
			(LK sind)
			(APPR in)
			(NX
				(NX diese richtung)
				[01;31m(NX[00m
					(ART der)
					(ADJX darstellenden kunste)[01;31m)[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(ADJX zwei)
						(NN kategorien)[01;31m)[00m
					(NX opernbesuche und gospelkonzert)[01;31m)[00m)
			[01;36m(SIMPX[00m
				(NF
					(PX an dem abend)
					(VC zu buchen))[01;36m)[00m)
		(SIMPX sollen wir dann das gospelkonzert nehmen)
		(SIMPX das ist sicherlich leichter als ein wagner)))
Step:Unary
{'subtrees': ['NF'], 'family': ['VF', 'LK', 'APPR', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NN', 'PTKZU', 'VVINF'), 'right siblings': [], 'left siblings': [(VF (PX (APPR unter) (NX (ART den) (NN angeboten)))), (LK (VXFIN (VAFIN sind))), (APPR in), (NX (NX (PDAT diese) (NN richtung)) (NX (ART der) (ADJX (ADJA darstellenden) (NN kunste))) (NX (NX (ADJX (CARD zwei)) (NN kategorien)) (NX (NX (NN opernbesuche)) (KON und) (NX (NN gospelkonzert)))))], 'auto preterminal span': (16, 21), 'span': (16, 21), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		(SIMPX
			(VF unter den angeboten)
			(LK sind)
			(APPR in)
			(NX
				(NX diese richtung)
				[01;31m(NX[00m
					(ART der)
					(ADJX darstellenden kunste)[01;31m)[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(ADJX zwei)
						(NN kategorien)[01;31m)[00m
					(NX opernbesuche und gospelkonzert)[01;31m)[00m)
			(SIMPX an dem abend zu buchen))
		(SIMPX sollen wir dann das gospelkonzert nehmen)
		(SIMPX das ist sicherlich leichter als ein wagner)))
Step:Modifier Attachment
{'subtrees': ['ART', 'ADJX'], 'family': ['NX', 'NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDAT', 'NN', 'ART', 'ADJA', 'NN', 'CARD', 'NN', 'NN', 'KON', 'NN'), 'right siblings': ['NX'], 'parent': 'NX', 'auto preterminal span': (6, 16), 'span': (8, 11), 'left siblings': ['NX'], 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX
			(VF unter den angeboten)
			(LK sind)
			(APPR in)
			(NX
				(NX diese richtung)
				(ART der)
				(ADJX darstellenden kunste)
				[01;31m(NX[00m
					[01;31m(NX[00m
						(ADJX zwei)
						(NN kategorien)[01;31m)[00m
					(NX opernbesuche und gospelkonzert)[01;31m)[00m)
			(SIMPX an dem abend zu buchen))
		(SIMPX sollen wir dann das gospelkonzert nehmen)
		(SIMPX das ist sicherlich leichter als ein wagner)))
Step:UNSET remove
{'subtrees': ['ADJX', 'NN'], 'family': ['NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'NN', 'NN', 'KON', 'NN'), 'right siblings': ['NX'], 'parent': 'NX', 'auto preterminal span': (11, 16), 'span': (11, 13), 'left siblings': [], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX
			(VF unter den angeboten)
			(LK sind)
			(APPR in)
			(NX
				(NX diese richtung)
				(ART der)
				(ADJX darstellenden kunste)
				[01;31m(NX[00m
					(ADJX zwei)
					(NN kategorien)
					(NX opernbesuche und gospelkonzert)[01;31m)[00m)
			(SIMPX an dem abend zu buchen))
		(SIMPX sollen wir dann das gospelkonzert nehmen)
		(SIMPX das ist sicherlich leichter als ein wagner)))
Step:UNSET remove
{'subtrees': ['ADJX', 'NN', 'NX'], 'family': ['NX', 'ART', 'ADJX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDAT', 'NN', 'ART', 'ADJA', 'NN', 'CARD', 'NN', 'NN', 'KON', 'NN'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (6, 16), 'span': (11, 16), 'left siblings': ['NX', 'ART', 'ADJX'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP also unter den angeboten sind in diese richtung der darstellenden kunste zwei kategorien opernbesuche und gospelkonzert an dem abend zu buchen sollen wir dann das gospelkonzert nehmen das ist sicherlich leichter als ein wagner)

Sentence 399:
7 Initial errors
0 on fringe, 6 iterations
2 Error:Co-ordination
1 Error:UNSET remove
1 Error:Unary
1 Error:UNSET remove
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		(SIMPX dann organisiere ich das auch)
		(DM ja)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK denke)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					(VF dann)
					(LK ist)
					(MF es am sinnvollsten)
					[01;31m(NF[00m
						(SIMPX
							(C wenn)
							(MF wir die restlichen dinge)
							(VC vertagen)
							(NF bis zu unserem nachsten telefonat))[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(C das)
			(MF wir dann)
			(VC fixieren)
			(NF
				(SIMPX
					(C wie)
					(MF
						(NX das)
						(PX [01;33m(PX[00m
							(APPR mit)
							[01;31m(NX[00m
								(NX den buchungen der hotels) [01;33mPX)[00m
								(KON und)
								(ADVX so weiter)[01;31m)[00m))
					(VC aussehen sollte)))[01;31m)[00m
		(ADVX dann)))
Step:Co-ordination
{'new_parent': 'MF', 'new_family': ['NX', 'PX', 'KON', 'ADVX'], 'mover info': [('KON', (37, 38)), ('ADVX', (38, 40))], 'old_family': ['NX', 'KON', 'ADVX'], 'start left siblings': ['NX'], 'auto preterminals': ('PDS', 'APPR', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ADV'), 'start right siblings': [], 'end left siblings': ['NX', 'PX'], 'auto preterminal span': (31, 40), 'adding node already present': False, 'movers': ['KON', 'ADVX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'Co-ordination', 'type': 'move', 'added label': 'PX'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		(SIMPX dann organisiere ich das auch)
		(DM ja)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK denke)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					(VF dann)
					(LK ist)
					(MF es am sinnvollsten)
					[01;31m(NF[00m
						(SIMPX
							(C wenn)
							(MF wir die restlichen dinge)
							(VC vertagen)
							(NF bis zu unserem nachsten telefonat))[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(C das)
			(MF wir dann)
			(VC fixieren)
			(NF wie das mit den buchungen der hotels und so weiter aussehen sollte)[01;31m)[00m
		(ADVX dann)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'NF'], 'family': ['DM', 'DM', 'SIMPX', 'DM', 'SIMPX', 'SIMPX', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'ADV', 'VVFIN', 'PPER', 'PDS', 'ADV', 'PTKANT', 'PPER', 'VVFIN', 'ADV', 'VAFIN', 'PPER', 'PTKA', 'ADJD', 'KOUS', 'PPER', 'ART', 'ADJA', 'NN', 'VVFIN', 'APPR', 'APPR', 'PPOSAT', 'ADJA', 'NN', 'KOUS', 'PPER', 'ADV', 'VVFIN', 'KOUS', 'PDS', 'APPR', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ADV', 'VVINF', 'VMFIN', 'ADV'), 'right siblings': ['SIMPX', 'ADVX'], 'parent': 'TURN', 'auto preterminal span': (0, 43), 'span': (8, 26), 'left siblings': ['DM', 'DM', 'SIMPX', 'DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		(SIMPX dann organisiere ich das auch)
		(DM ja)
		(VF ich)
		(LK denke)
		[01;31m(NF[00m
			[01;31m(SIMPX[00m
				(VF dann)
				(LK ist)
				(MF es am sinnvollsten)
				[01;31m(NF[00m
					(SIMPX
						(C wenn)
						(MF wir die restlichen dinge)
						(VC vertagen)
						(NF bis zu unserem nachsten telefonat))[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(C das)
			(MF wir dann)
			(VC fixieren)
			(NF wie das mit den buchungen der hotels und so weiter aussehen sollte)[01;31m)[00m
		(ADVX dann)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['DM', 'DM', 'SIMPX', 'DM', 'VF', 'LK', 'NF', 'SIMPX', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'ADV', 'VVFIN', 'PPER', 'PDS', 'ADV', 'PTKANT', 'PPER', 'VVFIN', 'ADV', 'VAFIN', 'PPER', 'PTKA', 'ADJD', 'KOUS', 'PPER', 'ART', 'ADJA', 'NN', 'VVFIN', 'APPR', 'APPR', 'PPOSAT', 'ADJA', 'NN', 'KOUS', 'PPER', 'ADV', 'VVFIN', 'KOUS', 'PDS', 'APPR', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ADV', 'VVINF', 'VMFIN', 'ADV'), 'right siblings': ['SIMPX', 'ADVX'], 'parent': 'TURN', 'auto preterminal span': (0, 43), 'span': (10, 26), 'left siblings': ['DM', 'DM', 'SIMPX', 'DM', 'VF', 'LK'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		(SIMPX dann organisiere ich das auch)
		(DM ja)
		(VF ich)
		(LK denke)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK ist)
			(MF es am sinnvollsten)
			[01;31m(NF[00m
				(SIMPX
					(C wenn)
					(MF wir die restlichen dinge)
					(VC vertagen)
					(NF bis zu unserem nachsten telefonat))[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(C das)
			(MF wir dann)
			(VC fixieren)
			(NF wie das mit den buchungen der hotels und so weiter aussehen sollte)[01;31m)[00m
		(ADVX dann)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'NF'], 'family': ['DM', 'DM', 'SIMPX', 'DM', 'VF', 'LK', 'SIMPX', 'SIMPX', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'ADV', 'VVFIN', 'PPER', 'PDS', 'ADV', 'PTKANT', 'PPER', 'VVFIN', 'ADV', 'VAFIN', 'PPER', 'PTKA', 'ADJD', 'KOUS', 'PPER', 'ART', 'ADJA', 'NN', 'VVFIN', 'APPR', 'APPR', 'PPOSAT', 'ADJA', 'NN', 'KOUS', 'PPER', 'ADV', 'VVFIN', 'KOUS', 'PDS', 'APPR', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ADV', 'VVINF', 'VMFIN', 'ADV'), 'right siblings': ['SIMPX', 'ADVX'], 'parent': 'TURN', 'auto preterminal span': (0, 43), 'span': (10, 26), 'left siblings': ['DM', 'DM', 'SIMPX', 'DM', 'VF', 'LK'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		(SIMPX dann organisiere ich das auch)
		(DM ja)
		(VF ich)
		(LK denke)
		(VF dann)
		(LK ist)
		(MF es am sinnvollsten)
		[01;31m(NF[00m
			(SIMPX
				(C wenn)
				(MF wir die restlichen dinge)
				(VC vertagen)
				(NF bis zu unserem nachsten telefonat))[01;31m)[00m
		[01;31m(SIMPX[00m
			(C das)
			(MF wir dann)
			(VC fixieren)
			(NF wie das mit den buchungen der hotels und so weiter aussehen sollte)[01;31m)[00m
		(ADVX dann)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['DM', 'DM', 'SIMPX', 'DM', 'VF', 'LK', 'VF', 'LK', 'MF', 'NF', 'SIMPX', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'ADV', 'VVFIN', 'PPER', 'PDS', 'ADV', 'PTKANT', 'PPER', 'VVFIN', 'ADV', 'VAFIN', 'PPER', 'PTKA', 'ADJD', 'KOUS', 'PPER', 'ART', 'ADJA', 'NN', 'VVFIN', 'APPR', 'APPR', 'PPOSAT', 'ADJA', 'NN', 'KOUS', 'PPER', 'ADV', 'VVFIN', 'KOUS', 'PDS', 'APPR', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ADV', 'VVINF', 'VMFIN', 'ADV'), 'right siblings': ['SIMPX', 'ADVX'], 'parent': 'TURN', 'auto preterminal span': (0, 43), 'span': (15, 26), 'left siblings': ['DM', 'DM', 'SIMPX', 'DM', 'VF', 'LK', 'VF', 'LK', 'MF'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		(SIMPX dann organisiere ich das auch)
		(DM ja)
		(VF ich)
		(LK denke)
		(VF dann)
		(LK ist)
		(MF es am sinnvollsten)
		(SIMPX wenn wir die restlichen dinge vertagen bis zu unserem nachsten telefonat)
		[01;31m(SIMPX[00m
			(C das)
			(MF wir dann)
			(VC fixieren)
			(NF wie das mit den buchungen der hotels und so weiter aussehen sollte)[01;31m)[00m
		(ADVX dann)))
Step:UNSET remove
{'subtrees': ['C', 'MF', 'VC', 'NF'], 'family': ['DM', 'DM', 'SIMPX', 'DM', 'VF', 'LK', 'VF', 'LK', 'MF', 'SIMPX', 'SIMPX', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'ADV', 'VVFIN', 'PPER', 'PDS', 'ADV', 'PTKANT', 'PPER', 'VVFIN', 'ADV', 'VAFIN', 'PPER', 'PTKA', 'ADJD', 'KOUS', 'PPER', 'ART', 'ADJA', 'NN', 'VVFIN', 'APPR', 'APPR', 'PPOSAT', 'ADJA', 'NN', 'KOUS', 'PPER', 'ADV', 'VVFIN', 'KOUS', 'PDS', 'APPR', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ADV', 'VVINF', 'VMFIN', 'ADV'), 'right siblings': ['ADVX'], 'parent': 'TURN', 'auto preterminal span': (0, 43), 'span': (26, 42), 'left siblings': ['DM', 'DM', 'SIMPX', 'DM', 'VF', 'LK', 'VF', 'LK', 'MF', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ja gut dann organisiere ich das auch ja ich denke dann ist es am sinnvollsten wenn wir die restlichen dinge vertagen bis zu unserem nachsten telefonat das wir dann fixieren wie das mit den buchungen der hotels und so weiter aussehen sollte dann)

Sentence 400:
0 Initial errors
0 on fringe, 0 iterations

Sentence 401:
5 Initial errors
0 on fringe, 3 iterations
3 Error:PP Attachment
1 Error:Modifier Attachment
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(NX schonen tag noch)
		[01;31m(PX[00m [01;33m(VF (PX[00m
			(PX bis zum wiederhoren)
			(ADVX dann)[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				(PX
					(APPRART am)
					(NX telefon))[01;31m)[00m [01;33mPX) VF)[00m
			(LK nehme)
			(MF ich)
			(VC an)[01;31m)[00m
		(DM ja)))
Step:PP Attachment
{'new_parent': 'VF', 'new_family': ['PX', 'PX'], 'mover info': [('PX', (4, 8))], 'old_family': ['DM', 'NX', 'PX', 'SIMPX', 'DM'], 'start left siblings': ['DM', 'NX'], 'auto preterminals': ('PTKANT', 'ADJA', 'NN', 'ADV', 'APPR', 'APPRART', 'NN', 'ADV', 'APPRART', 'NN', 'VVFIN', 'PPER', 'PTKVZ', 'PTKANT'), 'start right siblings': ['SIMPX', 'DM'], 'end left siblings': [], 'auto preterminal span': (0, 14), 'adding node already present': False, 'movers': ['PX'], 'old_parent': 'TURN', 'added and moved': True, 'end right siblings': ['PX'], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'PX'}
(TOP
	(TURN
		(DM ja)
		(NX schonen tag noch)
		[01;31m(SIMPX[00m
			(PX
				(VF
					[01;31m(PX[00m
						(PX bis zum wiederhoren)
						(ADVX dann)[01;31m)[00m
					(PX am telefon)))
			(LK nehme)
			(MF ich)
			(VC an)[01;31m)[00m
		(DM ja)))
Step:Modifier Attachment
{'subtrees': ['PX', 'ADVX'], 'family': ['PX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'APPRART', 'NN', 'ADV', 'APPRART', 'NN'), 'right siblings': ['PX'], 'parent': 'VF', 'auto preterminal span': (4, 10), 'span': (4, 8), 'left siblings': [], 'label': 'PX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(NX schonen tag noch)
		[01;31m(SIMPX[00m
			(PX bis zum wiederhoren dann am telefon)
			(LK nehme)
			(MF ich)
			(VC an)[01;31m)[00m
		(DM ja)))
Step:UNSET remove
{'subtrees': ['PX', 'LK', 'MF', 'VC'], 'family': ['DM', 'NX', 'SIMPX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADJA', 'NN', 'ADV', 'APPR', 'APPRART', 'NN', 'ADV', 'APPRART', 'NN', 'VVFIN', 'PPER', 'PTKVZ', 'PTKANT'), 'right siblings': ['DM'], 'parent': 'TURN', 'auto preterminal span': (0, 14), 'span': (4, 13), 'left siblings': ['DM', 'NX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ja schonen tag noch bis zum wiederhoren dann am telefon nehme ich an ja)

Sentence 402:
3 Initial errors
0 on fringe, 1 iterations
3 Error:NP Internal Structure
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM also)
		(SIMPX es sieht so aus das der juli eigentlich schon ziemlich voll ist)
		(SIMPX da hatte ich eigentlich nur noch den elften und zwolften freitag und samstag anzubieten)
		(NX
			(KON oder)
			(NX [01;33m(NX[00m
				(ART den)
				[01;31m(NX[00m
					[01;31m(NX[00m
						(NN einundzwanzigsten)[01;31m)[00m [01;33mNX)[00m
					(NX zweiundzwanzigsten)[01;31m)[00m))))
Step:NP Internal Structure
{'new_parent': 'NX', 'new_family': ['ART', 'NN'], 'mover info': [('ART', (28, 29))], 'old_family': ['ART', 'NX'], 'start left siblings': [], 'auto preterminals': ('ART', 'NN', 'NN'), 'start right siblings': ['NX'], 'end left siblings': [], 'auto preterminal span': (28, 31), 'movers': ['ART'], 'old_parent': 'NX', 'POS confusion': ('ART', 'ART'), 'end right siblings': ['NN'], 'classified_type': 'NP Internal Structure', 'type': 'move'}
(TOP also es sieht so aus das der juli eigentlich schon ziemlich voll ist da hatte ich eigentlich nur noch den elften und zwolften freitag und samstag anzubieten oder den einundzwanzigsten zweiundzwanzigsten)

Sentence 403:
0 Initial errors
0 on fringe, 0 iterations

Sentence 404:
32 Initial errors
0 on fringe, 21 iterations
5 Error:Modifier Attachment
2 Error:Different label
2 Error:Different label
2 Error:Single Word Phrase
2 Error:UNSET move
2 Error:Clause Attachment
2 Error:UNSET move
2 Error:UNSET move
1 Error:UNSET add
1 Error:Unary
1 Error:UNSET add
1 Error:Unary
1 Error:Single Word Phrase
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:UNSET add
1 Error:Unary
1 Error:Unary
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM ja)
		(SIMPX
			(VF dann)
			(LK wurde)
			(MF ich ja)
			(VC vorschlagen)
			[01;36m(NF[00m
				[01;36m(SIMPX[00m
					(SIMPX
						(VF es)
						(LK gibt)
						[01;36m(MF[00m
							[01;31m(MF[00m
								(NX
									(NN fluge))[01;31m)[00m
							[01;31m(NF[00m
								(PX
									(ADVX schon)
									[01;36m(PX[00m
										(APPR ab)
										(NX sechs uhr morgens)[01;36m)[00m)[01;31m)[00m[01;36m)[00m)
					(NF das wir wirklich um sechs uhr losfliegen)[01;36m)[00m[01;36m)[00m)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF dann)
				(LK sind)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX wir)
					[01;33m(ADJX[00m (PX in zwei stunden)[01;31m)[00m[01;31m)[00m
			[01;31m(ADVX[00m
				(ADV spater)[01;31m)[00m [01;33mADJX) MF)[00m[01;36m)[00m
		[01;36m(SIMPX[00m
			[01;36m(VF[00m [01;31m(DM[00m
				(ADVX
					(ADV also))[01;31m)[00m[01;36m)[00m
			[01;31m(SIMPX[00m
				(LK sind)
				(MF wir um acht in hannover)[01;31m)[00m[01;36m)[00m
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(C bis)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX
						(PPER wir))[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				(VF dann) [01;33mMF)[00m
				(FKOORD [01;33m(FKOORD[00m
					(LKM trinken wir noch einen kaffee)
					(KON und)
					[01;31m(FKOORD[00m
						(LK konnen)
						[01;31m(FKOORD[00m
							(MVC dann gleich zu unsrer filiale fahren) [01;33mFKOORD)[00m
							(KON und)
							[01;36m(MVC[00m [01;31m(MVCN[00m
								(MF dort)
								[01;36m(VXFIN[00m [01;31m(VC[00m
									[01;31m(VXINF[00m
										(VVINF anfangen)[01;31m)[00m[01;31m)[00m[01;36m)[00m
								[01;31m(NF[00m
									[01;31m(SIMPX[00m
										[01;31m(VC[00m
											(VXINF
												(PTKZU zu)
												(VVINF arbeiten))[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m)[01;31m)[00m[01;36m)[00m))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'PX', 'ADVX'], 'mover info': [('ADVX', (28, 29))], 'old_family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'ADVX', 'DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'start left siblings': ['DM', 'DM', 'SIMPX', 'SIMPX'], 'auto preterminals': ('PTKANT', 'PTKANT', 'ADV', 'VAFIN', 'PPER', 'ADV', 'VVINF', 'PPER', 'VVFIN', 'NN', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'KOUS', 'PPER', 'ADV', 'APPR', 'CARD', 'NN', 'VVFIN', 'ADV', 'VAFIN', 'PPER', 'APPR', 'CARD', 'NN', 'ADV', 'ADV', 'VAFIN', 'PPER', 'APPR', 'CARD', 'APPR', 'NE', 'KOUS', 'PPER', 'ADV', 'VVFIN', 'PPER', 'ADV', 'ART', 'NN', 'KON', 'VMFIN', 'ADV', 'ADV', 'APPR', 'PPOSAT', 'NN', 'VVINF', 'KON', 'ADV', 'VVINF', 'PTKZU', 'VVINF'), 'start right siblings': ['DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'end left siblings': ['NX', 'PX'], 'auto preterminal span': (0, 57), 'adding node already present': False, 'movers': ['ADVX'], 'old_parent': 'TURN', 'POS confusion': ('ADV', 'ADV'), 'added and moved': True, 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'VXFIN'}
(TOP
	(TURN
		(DM ja)
		(DM ja)
		(SIMPX
			(VF dann)
			(LK wurde)
			(MF ich ja)
			(VC vorschlagen)
			[01;36m(NF[00m
				[01;36m(SIMPX[00m
					(SIMPX
						(VF es)
						(LK gibt)
						[01;36m(MF[00m
							[01;31m(MF[00m
								(NX
									(NN fluge))[01;31m)[00m
							[01;31m(NF[00m
								(PX
									(ADVX schon)
									[01;36m(PX[00m
										(APPR ab)
										(NX sechs uhr morgens)[01;36m)[00m)[01;31m)[00m[01;36m)[00m)
					(NF das wir wirklich um sechs uhr losfliegen)[01;36m)[00m[01;36m)[00m)
		(SIMPX
			(VF dann)
			(LK sind)
			(MF
				(NX wir)
				(ADJX
					(PX in zwei stunden)
					[01;31m(ADVX[00m
						(ADV spater)[01;31m)[00m)))
		[01;36m(SIMPX[00m
			[01;36m(VF[00m [01;31m(DM[00m
				(ADVX
					(ADV also))[01;31m)[00m[01;36m)[00m
			[01;31m(SIMPX[00m
				(LK sind)
				(MF wir um acht in hannover)[01;31m)[00m[01;36m)[00m
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(C bis)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX
						(PPER wir))[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				(VF dann) [01;33mMF)[00m
				(FKOORD [01;33m(FKOORD[00m
					(LKM trinken wir noch einen kaffee)
					(KON und)
					[01;31m(FKOORD[00m
						(LK konnen)
						[01;31m(FKOORD[00m
							(MVC dann gleich zu unsrer filiale fahren) [01;33mFKOORD)[00m
							(KON und)
							[01;36m(MVC[00m [01;31m(MVCN[00m
								(MF dort)
								[01;36m(VXFIN[00m [01;31m(VC[00m
									[01;31m(VXINF[00m
										(VVINF anfangen)[01;31m)[00m[01;31m)[00m[01;36m)[00m
								[01;31m(NF[00m
									[01;31m(SIMPX[00m
										[01;31m(VC[00m
											(VXINF
												(PTKZU zu)
												(VVINF arbeiten))[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m)[01;31m)[00m[01;36m)[00m))
Step:Different label
{'family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'VF', 'SIMPX', 'SIMPX', 'SIMPX'], 'auto preterminal span': (29, 30), 'span': (29, 30), 'subtrees': ['ADVX'], 'parent': 'TURN', 'over_word': False, 'auto preterminals': ('ADV',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('DM', 'VF')}
(TOP
	(TURN
		(DM ja)
		(DM ja)
		(SIMPX
			(VF dann)
			(LK wurde)
			(MF ich ja)
			(VC vorschlagen)
			[01;36m(NF[00m
				[01;36m(SIMPX[00m
					(SIMPX
						(VF es)
						(LK gibt)
						[01;36m(MF[00m
							[01;31m(MF[00m
								(NX
									(NN fluge))[01;31m)[00m
							[01;31m(NF[00m
								(PX
									(ADVX schon)
									[01;36m(PX[00m
										(APPR ab)
										(NX sechs uhr morgens)[01;36m)[00m)[01;31m)[00m[01;36m)[00m)
					(NF das wir wirklich um sechs uhr losfliegen)[01;36m)[00m[01;36m)[00m)
		(SIMPX
			(VF dann)
			(LK sind)
			(MF
				(NX wir)
				(ADJX
					(PX in zwei stunden)
					[01;31m(ADVX[00m
						(ADV spater)[01;31m)[00m)))
		[01;36m(SIMPX[00m
			(VF also)
			[01;31m(SIMPX[00m
				(LK sind)
				(MF wir um acht in hannover)[01;31m)[00m[01;36m)[00m
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(C bis)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX
						(PPER wir))[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				(VF dann) [01;33mMF)[00m
				(FKOORD [01;33m(FKOORD[00m
					(LKM trinken wir noch einen kaffee)
					(KON und)
					[01;31m(FKOORD[00m
						(LK konnen)
						[01;31m(FKOORD[00m
							(MVC dann gleich zu unsrer filiale fahren) [01;33mFKOORD)[00m
							(KON und)
							[01;36m(MVC[00m [01;31m(MVCN[00m
								(MF dort)
								[01;36m(VXFIN[00m [01;31m(VC[00m
									[01;31m(VXINF[00m
										(VVINF anfangen)[01;31m)[00m[01;31m)[00m[01;36m)[00m
								[01;31m(NF[00m
									[01;31m(SIMPX[00m
										[01;31m(VC[00m
											(VXINF
												(PTKZU zu)
												(VVINF arbeiten))[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m)[01;31m)[00m[01;36m)[00m))
Step:Different label
{'family': ['MVC', 'KON', 'MVC'], 'auto preterminal span': (53, 57), 'span': (53, 57), 'subtrees': ['MF', 'VC', 'NF'], 'parent': 'FKOORD', 'over_word': False, 'auto preterminals': ('ADV', 'VVINF', 'PTKZU', 'VVINF'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('MVCN', 'MVC')}
(TOP
	(TURN
		(DM ja)
		(DM ja)
		(SIMPX
			(VF dann)
			(LK wurde)
			(MF ich ja)
			(VC vorschlagen)
			[01;36m(NF[00m
				[01;36m(SIMPX[00m
					(SIMPX
						(VF es)
						(LK gibt)
						[01;36m(MF[00m
							[01;31m(MF[00m
								(NX
									(NN fluge))[01;31m)[00m
							[01;31m(NF[00m
								(PX
									(ADVX schon)
									[01;36m(PX[00m
										(APPR ab)
										(NX sechs uhr morgens)[01;36m)[00m)[01;31m)[00m[01;36m)[00m)
					(NF das wir wirklich um sechs uhr losfliegen)[01;36m)[00m[01;36m)[00m)
		(SIMPX
			(VF dann)
			(LK sind)
			(MF
				(NX wir)
				(ADJX
					(PX in zwei stunden)
					[01;31m(ADVX[00m
						(ADV spater)[01;31m)[00m)))
		[01;36m(SIMPX[00m
			(VF also)
			[01;31m(SIMPX[00m
				(LK sind)
				(MF wir um acht in hannover)[01;31m)[00m[01;36m)[00m
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(C bis)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX
						(PPER wir))[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				(VF dann) [01;33mMF)[00m
				(FKOORD [01;33m(FKOORD[00m
					(LKM trinken wir noch einen kaffee)
					(KON und)
					[01;31m(FKOORD[00m
						(LK konnen)
						[01;31m(FKOORD[00m
							(MVC dann gleich zu unsrer filiale fahren) [01;33mFKOORD)[00m
							(KON und)
							(MVC
								(MF dort)
								[01;36m(VXFIN[00m [01;31m(VC[00m
									[01;31m(VXINF[00m
										(VVINF anfangen)[01;31m)[00m[01;31m)[00m[01;36m)[00m
								[01;31m(NF[00m
									[01;31m(SIMPX[00m
										[01;31m(VC[00m
											(VXINF
												(PTKZU zu)
												(VVINF arbeiten))[01;31m)[00m[01;31m)[00m[01;31m)[00m)[01;31m)[00m[01;31m)[00m)[01;31m)[00m[01;36m)[00m))
Step:Single Word Phrase
{'family': ['VXFIN'], 'auto preterminal span': (54, 55), 'span': (54, 55), 'subtrees': ['VVINF'], 'parent': 'VC', 'over_word': True, 'auto preterminals': ('VVINF',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VXINF', 'VXFIN')}
(TOP
	(TURN
		(DM ja)
		(DM ja)
		(SIMPX
			(VF dann)
			(LK wurde)
			(MF ich ja)
			(VC vorschlagen)
			[01;36m(NF[00m
				[01;36m(SIMPX[00m
					(SIMPX
						(VF es)
						(LK gibt)
						[01;36m(MF[00m
							[01;31m(MF[00m
								(NX
									(NN fluge))[01;31m)[00m
							[01;31m(NF[00m
								(PX
									(ADVX schon)
									[01;36m(PX[00m
										(APPR ab)
										(NX sechs uhr morgens)[01;36m)[00m)[01;31m)[00m[01;36m)[00m)
					(NF das wir wirklich um sechs uhr losfliegen)[01;36m)[00m[01;36m)[00m)
		(SIMPX
			(VF dann)
			(LK sind)
			(MF
				(NX wir)
				(ADJX
					(PX in zwei stunden)
					[01;31m(ADVX[00m
						(ADV spater)[01;31m)[00m)))
		[01;36m(SIMPX[00m
			(VF also)
			[01;31m(SIMPX[00m
				(LK sind)
				(MF wir um acht in hannover)[01;31m)[00m[01;36m)[00m
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(C bis)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX
						(PPER wir))[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				(VF dann) [01;33mMF)[00m
				(FKOORD [01;33m(FKOORD[00m
					(LKM trinken wir noch einen kaffee)
					(KON und)
					[01;31m(FKOORD[00m
						(LK konnen)
						[01;31m(FKOORD[00m
							(MVC dann gleich zu unsrer filiale fahren) [01;33mFKOORD)[00m
							(KON und)
							(MVC
								(MF dort)
								[01;31m(VC[00m
									(VXFIN
										(VVINF anfangen))[01;31m)[00m
								[01;31m(NF[00m
									[01;31m(SIMPX[00m
										[01;31m(VC[00m
											(VXINF
												(PTKZU zu)
												(VVINF arbeiten))[01;31m)[00m[01;31m)[00m[01;31m)[00m)[01;31m)[00m[01;31m)[00m)[01;31m)[00m[01;36m)[00m))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF'], 'mover info': [('VF', (29, 30))], 'old_family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'VF', 'SIMPX', 'SIMPX', 'SIMPX'], 'start left siblings': ['DM', 'DM', 'SIMPX', 'SIMPX'], 'auto preterminals': ('PTKANT', 'PTKANT', 'ADV', 'VAFIN', 'PPER', 'ADV', 'VVINF', 'PPER', 'VVFIN', 'NN', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'KOUS', 'PPER', 'ADV', 'APPR', 'CARD', 'NN', 'VVFIN', 'ADV', 'VAFIN', 'PPER', 'APPR', 'CARD', 'NN', 'ADV', 'ADV', 'VAFIN', 'PPER', 'APPR', 'CARD', 'APPR', 'NE', 'KOUS', 'PPER', 'ADV', 'VVFIN', 'PPER', 'ADV', 'ART', 'NN', 'KON', 'VMFIN', 'ADV', 'ADV', 'APPR', 'PPOSAT', 'NN', 'VVINF', 'KON', 'ADV', 'VVINF', 'PTKZU', 'VVINF'), 'start right siblings': ['SIMPX', 'SIMPX', 'SIMPX'], 'end left siblings': [], 'auto preterminal span': (0, 57), 'movers': ['VF'], 'old_parent': 'TURN', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['LK', 'MF'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(DM ja)
		(SIMPX
			(VF dann)
			(LK wurde)
			(MF ich ja)
			(VC vorschlagen)
			[01;36m(NF[00m
				[01;36m(SIMPX[00m
					(SIMPX
						(VF es)
						(LK gibt)
						[01;36m(MF[00m
							[01;31m(MF[00m
								(NX
									(NN fluge))[01;31m)[00m
							[01;31m(NF[00m
								(PX
									(ADVX schon)
									[01;36m(PX[00m
										(APPR ab)
										(NX sechs uhr morgens)[01;36m)[00m)[01;31m)[00m[01;36m)[00m)
					(NF das wir wirklich um sechs uhr losfliegen)[01;36m)[00m[01;36m)[00m)
		(SIMPX
			(VF dann)
			(LK sind)
			(MF
				(NX wir)
				(ADJX
					(PX in zwei stunden)
					[01;31m(ADVX[00m
						(ADV spater)[01;31m)[00m)))
		(SIMPX also sind wir um acht in hannover)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(C bis)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX
						(PPER wir))[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				(VF dann) [01;33mMF)[00m
				(FKOORD [01;33m(FKOORD[00m
					(LKM trinken wir noch einen kaffee)
					(KON und)
					[01;31m(FKOORD[00m
						(LK konnen)
						[01;31m(FKOORD[00m
							(MVC dann gleich zu unsrer filiale fahren) [01;33mFKOORD)[00m
							(KON und)
							(MVC
								(MF dort)
								[01;31m(VC[00m
									(VXFIN
										(VVINF anfangen))[01;31m)[00m
								[01;31m(NF[00m
									[01;31m(SIMPX[00m
										[01;31m(VC[00m
											(VXINF
												(PTKZU zu)
												(VVINF arbeiten))[01;31m)[00m[01;31m)[00m[01;31m)[00m)[01;31m)[00m[01;31m)[00m)[01;31m)[00m[01;36m)[00m))
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['SIMPX', 'VF', 'FKOORD'], 'mover info': [('SIMPX', (36, 38))], 'old_family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'start left siblings': ['DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'auto preterminals': ('PTKANT', 'PTKANT', 'ADV', 'VAFIN', 'PPER', 'ADV', 'VVINF', 'PPER', 'VVFIN', 'NN', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'KOUS', 'PPER', 'ADV', 'APPR', 'CARD', 'NN', 'VVFIN', 'ADV', 'VAFIN', 'PPER', 'APPR', 'CARD', 'NN', 'ADV', 'ADV', 'VAFIN', 'PPER', 'APPR', 'CARD', 'APPR', 'NE', 'KOUS', 'PPER', 'ADV', 'VVFIN', 'PPER', 'ADV', 'ART', 'NN', 'KON', 'VMFIN', 'ADV', 'ADV', 'APPR', 'PPOSAT', 'NN', 'VVINF', 'KON', 'ADV', 'VVINF', 'PTKZU', 'VVINF'), 'start right siblings': ['SIMPX'], 'end left siblings': [], 'auto preterminal span': (0, 57), 'movers': ['SIMPX'], 'old_parent': 'TURN', 'end right siblings': ['VF', 'FKOORD'], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(DM ja)
		(SIMPX
			(VF dann)
			(LK wurde)
			(MF ich ja)
			(VC vorschlagen)
			[01;36m(NF[00m
				[01;36m(SIMPX[00m
					(SIMPX
						(VF es)
						(LK gibt)
						[01;36m(MF[00m
							[01;31m(MF[00m
								(NX
									(NN fluge))[01;31m)[00m
							[01;31m(NF[00m
								(PX
									(ADVX schon)
									[01;36m(PX[00m
										(APPR ab)
										(NX sechs uhr morgens)[01;36m)[00m)[01;31m)[00m[01;36m)[00m)
					(NF das wir wirklich um sechs uhr losfliegen)[01;36m)[00m[01;36m)[00m)
		(SIMPX
			(VF dann)
			(LK sind)
			(MF
				(NX wir)
				(ADJX
					(PX in zwei stunden)
					[01;31m(ADVX[00m
						(ADV spater)[01;31m)[00m)))
		(SIMPX also sind wir um acht in hannover)
		(SIMPX
			[01;31m(SIMPX[00m
				(C bis)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX
						(PPER wir))[01;31m)[00m[01;31m)[00m
			(VF dann) [01;33mMF)[00m
			(FKOORD [01;33m(FKOORD[00m
				(LKM trinken wir noch einen kaffee)
				(KON und)
				[01;31m(FKOORD[00m
					(LK konnen)
					[01;31m(FKOORD[00m
						(MVC dann gleich zu unsrer filiale fahren) [01;33mFKOORD)[00m
						(KON und)
						(MVC
							(MF dort)
							[01;31m(VC[00m
								(VXFIN
									(VVINF anfangen))[01;31m)[00m
							[01;31m(NF[00m
								[01;31m(SIMPX[00m
									[01;31m(VC[00m
										(VXINF
											(PTKZU zu)
											(VVINF arbeiten))[01;31m)[00m[01;31m)[00m[01;31m)[00m)[01;31m)[00m[01;31m)[00m))))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['NX', 'NF'], 'mover info': [('NF', (10, 15))], 'old_family': ['VF', 'LK', 'MF', 'NF'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('PPER', 'VVFIN', 'NN', 'ADV', 'APPR', 'CARD', 'NN', 'ADV'), 'start right siblings': [], 'end left siblings': ['NX'], 'auto preterminal span': (7, 15), 'movers': ['NF'], 'old_parent': 'SIMPX', 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(DM ja)
		(SIMPX
			(VF dann)
			(LK wurde)
			(MF ich ja)
			(VC vorschlagen)
			[01;36m(NF[00m
				[01;36m(SIMPX[00m
					(SIMPX
						(VF es)
						(LK gibt)
						(MF
							(NX fluge)
							[01;31m(NF[00m
								(PX
									(ADVX schon)
									[01;36m(PX[00m
										(APPR ab)
										(NX sechs uhr morgens)[01;36m)[00m)[01;31m)[00m))
					(NF das wir wirklich um sechs uhr losfliegen)[01;36m)[00m[01;36m)[00m)
		(SIMPX
			(VF dann)
			(LK sind)
			(MF
				(NX wir)
				(ADJX
					(PX in zwei stunden)
					[01;31m(ADVX[00m
						(ADV spater)[01;31m)[00m)))
		(SIMPX also sind wir um acht in hannover)
		(SIMPX
			[01;31m(SIMPX[00m
				(C bis)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX
						(PPER wir))[01;31m)[00m[01;31m)[00m
			(VF dann) [01;33mMF)[00m
			(FKOORD [01;33m(FKOORD[00m
				(LKM trinken wir noch einen kaffee)
				(KON und)
				[01;31m(FKOORD[00m
					(LK konnen)
					[01;31m(FKOORD[00m
						(MVC dann gleich zu unsrer filiale fahren) [01;33mFKOORD)[00m
						(KON und)
						(MVC
							(MF dort)
							[01;31m(VC[00m
								(VXFIN
									(VVINF anfangen))[01;31m)[00m
							[01;31m(NF[00m
								[01;31m(SIMPX[00m
									[01;31m(VC[00m
										(VXINF
											(PTKZU zu)
											(VVINF arbeiten))[01;31m)[00m[01;31m)[00m[01;31m)[00m)[01;31m)[00m[01;31m)[00m))))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['NX', 'VF'], 'mover info': [('VF', (38, 39))], 'old_family': ['SIMPX', 'VF', 'FKOORD'], 'start left siblings': ['SIMPX'], 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'VVFIN', 'PPER', 'ADV', 'ART', 'NN', 'KON', 'VMFIN', 'ADV', 'ADV', 'APPR', 'PPOSAT', 'NN', 'VVINF', 'KON', 'ADV', 'VVINF', 'PTKZU', 'VVINF'), 'start right siblings': ['FKOORD'], 'end left siblings': ['NX'], 'auto preterminal span': (36, 57), 'movers': ['VF'], 'old_parent': 'SIMPX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(DM ja)
		(SIMPX
			(VF dann)
			(LK wurde)
			(MF ich ja)
			(VC vorschlagen)
			[01;36m(NF[00m
				[01;36m(SIMPX[00m
					(SIMPX
						(VF es)
						(LK gibt)
						(MF
							(NX fluge)
							[01;31m(NF[00m
								(PX
									(ADVX schon)
									[01;36m(PX[00m
										(APPR ab)
										(NX sechs uhr morgens)[01;36m)[00m)[01;31m)[00m))
					(NF das wir wirklich um sechs uhr losfliegen)[01;36m)[00m[01;36m)[00m)
		(SIMPX
			(VF dann)
			(LK sind)
			(MF
				(NX wir)
				(ADJX
					(PX in zwei stunden)
					[01;31m(ADVX[00m
						(ADV spater)[01;31m)[00m)))
		(SIMPX also sind wir um acht in hannover)
		(SIMPX
			[01;31m(SIMPX[00m
				(C bis)
				(MF wir dann)[01;31m)[00m
			(FKOORD [01;33m(FKOORD[00m
				(LKM trinken wir noch einen kaffee)
				(KON und)
				[01;31m(FKOORD[00m
					(LK konnen)
					[01;31m(FKOORD[00m
						(MVC dann gleich zu unsrer filiale fahren) [01;33mFKOORD)[00m
						(KON und)
						(MVC
							(MF dort)
							[01;31m(VC[00m
								(VXFIN
									(VVINF anfangen))[01;31m)[00m
							[01;31m(NF[00m
								[01;31m(SIMPX[00m
									[01;31m(VC[00m
										(VXINF
											(PTKZU zu)
											(VVINF arbeiten))[01;31m)[00m[01;31m)[00m[01;31m)[00m)[01;31m)[00m[01;31m)[00m))))
Step:UNSET add
{'subtrees': ['SIMPX', 'NF'], 'family': ['VF', 'LK', 'MF', 'VC', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'NN', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'KOUS', 'PPER', 'ADV', 'APPR', 'CARD', 'NN', 'VVFIN'), 'right siblings': [], 'left siblings': [(VF (ADVX (ADV dann))), (LK (VXFIN (VAFIN wurde))), (MF (NX (PPER ich)) (ADVX (ADV ja))), (VC (VXINF (VVINF vorschlagen)))], 'auto preterminal span': (7, 22), 'span': (7, 22), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM ja)
		(SIMPX
			(VF dann)
			(LK wurde)
			(MF ich ja)
			(VC vorschlagen)
			[01;36m(NF[00m
				(SIMPX
					(SIMPX
						(VF es)
						(LK gibt)
						(MF
							(NX fluge)
							[01;31m(NF[00m
								(PX
									(ADVX schon)
									[01;36m(PX[00m
										(APPR ab)
										(NX sechs uhr morgens)[01;36m)[00m)[01;31m)[00m))
					(NF das wir wirklich um sechs uhr losfliegen))[01;36m)[00m)
		(SIMPX
			(VF dann)
			(LK sind)
			(MF
				(NX wir)
				(ADJX
					(PX in zwei stunden)
					[01;31m(ADVX[00m
						(ADV spater)[01;31m)[00m)))
		(SIMPX also sind wir um acht in hannover)
		(SIMPX
			[01;31m(SIMPX[00m
				(C bis)
				(MF wir dann)[01;31m)[00m
			(FKOORD [01;33m(FKOORD[00m
				(LKM trinken wir noch einen kaffee)
				(KON und)
				[01;31m(FKOORD[00m
					(LK konnen)
					[01;31m(FKOORD[00m
						(MVC dann gleich zu unsrer filiale fahren) [01;33mFKOORD)[00m
						(KON und)
						(MVC
							(MF dort)
							[01;31m(VC[00m
								(VXFIN
									(VVINF anfangen))[01;31m)[00m
							[01;31m(NF[00m
								[01;31m(SIMPX[00m
									[01;31m(VC[00m
										(VXINF
											(PTKZU zu)
											(VVINF arbeiten))[01;31m)[00m[01;31m)[00m[01;31m)[00m)[01;31m)[00m[01;31m)[00m))))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['VF', 'LK', 'MF', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'NN', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'KOUS', 'PPER', 'ADV', 'APPR', 'CARD', 'NN', 'VVFIN'), 'right siblings': [], 'left siblings': [(VF (ADVX (ADV dann))), (LK (VXFIN (VAFIN wurde))), (MF (NX (PPER ich)) (ADVX (ADV ja))), (VC (VXINF (VVINF vorschlagen)))], 'auto preterminal span': (7, 22), 'span': (7, 22), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM ja)
		(SIMPX
			(VF dann)
			(LK wurde)
			(MF ich ja)
			(VC vorschlagen)
			(NF
				(SIMPX
					(SIMPX
						(VF es)
						(LK gibt)
						(MF
							(NX fluge)
							[01;31m(NF[00m
								(PX
									(ADVX schon)
									[01;36m(PX[00m
										(APPR ab)
										(NX sechs uhr morgens)[01;36m)[00m)[01;31m)[00m))
					(NF das wir wirklich um sechs uhr losfliegen))))
		(SIMPX
			(VF dann)
			(LK sind)
			(MF
				(NX wir)
				(ADJX
					(PX in zwei stunden)
					[01;31m(ADVX[00m
						(ADV spater)[01;31m)[00m)))
		(SIMPX also sind wir um acht in hannover)
		(SIMPX
			[01;31m(SIMPX[00m
				(C bis)
				(MF wir dann)[01;31m)[00m
			(FKOORD [01;33m(FKOORD[00m
				(LKM trinken wir noch einen kaffee)
				(KON und)
				[01;31m(FKOORD[00m
					(LK konnen)
					[01;31m(FKOORD[00m
						(MVC dann gleich zu unsrer filiale fahren) [01;33mFKOORD)[00m
						(KON und)
						(MVC
							(MF dort)
							[01;31m(VC[00m
								(VXFIN
									(VVINF anfangen))[01;31m)[00m
							[01;31m(NF[00m
								[01;31m(SIMPX[00m
									[01;31m(VC[00m
										(VXINF
											(PTKZU zu)
											(VVINF arbeiten))[01;31m)[00m[01;31m)[00m[01;31m)[00m)[01;31m)[00m[01;31m)[00m))))
Step:UNSET add
{'subtrees': ['APPR', 'NX'], 'family': ['ADVX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'CARD', 'NN', 'ADV'), 'right siblings': [], 'left siblings': [(ADVX (ADV schon))], 'auto preterminal span': (11, 15), 'span': (11, 15), 'parent': 'PX', 'label': 'PX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM ja)
		(SIMPX
			(VF dann)
			(LK wurde)
			(MF ich ja)
			(VC vorschlagen)
			(NF
				(SIMPX
					(SIMPX
						(VF es)
						(LK gibt)
						(MF
							(NX fluge)
							[01;31m(NF[00m
								(PX
									(ADVX schon)
									(PX ab sechs uhr morgens))[01;31m)[00m))
					(NF das wir wirklich um sechs uhr losfliegen))))
		(SIMPX
			(VF dann)
			(LK sind)
			(MF
				(NX wir)
				(ADJX
					(PX in zwei stunden)
					[01;31m(ADVX[00m
						(ADV spater)[01;31m)[00m)))
		(SIMPX also sind wir um acht in hannover)
		(SIMPX
			[01;31m(SIMPX[00m
				(C bis)
				(MF wir dann)[01;31m)[00m
			(FKOORD [01;33m(FKOORD[00m
				(LKM trinken wir noch einen kaffee)
				(KON und)
				[01;31m(FKOORD[00m
					(LK konnen)
					[01;31m(FKOORD[00m
						(MVC dann gleich zu unsrer filiale fahren) [01;33mFKOORD)[00m
						(KON und)
						(MVC
							(MF dort)
							[01;31m(VC[00m
								(VXFIN
									(VVINF anfangen))[01;31m)[00m
							[01;31m(NF[00m
								[01;31m(SIMPX[00m
									[01;31m(VC[00m
										(VXINF
											(PTKZU zu)
											(VVINF arbeiten))[01;31m)[00m[01;31m)[00m[01;31m)[00m)[01;31m)[00m[01;31m)[00m))))
Step:Unary
{'subtrees': ['PX'], 'family': ['NX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'ADV', 'APPR', 'CARD', 'NN', 'ADV'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (9, 15), 'span': (10, 15), 'left siblings': ['NX'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM ja)
		(SIMPX dann wurde ich ja vorschlagen es gibt fluge schon ab sechs uhr morgens das wir wirklich um sechs uhr losfliegen)
		(SIMPX
			(VF dann)
			(LK sind)
			(MF
				(NX wir)
				(ADJX
					(PX in zwei stunden)
					[01;31m(ADVX[00m
						(ADV spater)[01;31m)[00m)))
		(SIMPX also sind wir um acht in hannover)
		(SIMPX
			[01;31m(SIMPX[00m
				(C bis)
				(MF wir dann)[01;31m)[00m
			(FKOORD [01;33m(FKOORD[00m
				(LKM trinken wir noch einen kaffee)
				(KON und)
				[01;31m(FKOORD[00m
					(LK konnen)
					[01;31m(FKOORD[00m
						(MVC dann gleich zu unsrer filiale fahren) [01;33mFKOORD)[00m
						(KON und)
						(MVC
							(MF dort)
							[01;31m(VC[00m
								(VXFIN
									(VVINF anfangen))[01;31m)[00m
							[01;31m(NF[00m
								[01;31m(SIMPX[00m
									[01;31m(VC[00m
										(VXINF
											(PTKZU zu)
											(VVINF arbeiten))[01;31m)[00m[01;31m)[00m[01;31m)[00m)[01;31m)[00m[01;31m)[00m))))
Step:Single Word Phrase
{'subtrees': ['ADV'], 'family': ['PX', 'ADVX'], 'over_word': True, 'over words': True, 'auto preterminals': ('APPR', 'CARD', 'NN', 'ADV'), 'right siblings': [], 'parent': 'ADJX', 'auto preterminal span': (25, 29), 'span': (28, 29), 'left siblings': ['PX'], 'label': 'ADVX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM ja)
		(SIMPX dann wurde ich ja vorschlagen es gibt fluge schon ab sechs uhr morgens das wir wirklich um sechs uhr losfliegen)
		(SIMPX dann sind wir in zwei stunden spater)
		(SIMPX also sind wir um acht in hannover)
		(SIMPX
			[01;31m(SIMPX[00m
				(C bis)
				(MF wir dann)[01;31m)[00m
			(FKOORD [01;33m(FKOORD[00m
				(LKM trinken wir noch einen kaffee)
				(KON und)
				[01;31m(FKOORD[00m
					(LK konnen)
					[01;31m(FKOORD[00m
						(MVC dann gleich zu unsrer filiale fahren) [01;33mFKOORD)[00m
						(KON und)
						(MVC
							(MF dort)
							[01;31m(VC[00m
								(VXFIN
									(VVINF anfangen))[01;31m)[00m
							[01;31m(NF[00m
								[01;31m(SIMPX[00m
									[01;31m(VC[00m
										(VXINF
											(PTKZU zu)
											(VVINF arbeiten))[01;31m)[00m[01;31m)[00m[01;31m)[00m)[01;31m)[00m[01;31m)[00m))))
Step:UNSET remove
{'subtrees': ['C', 'MF'], 'family': ['SIMPX', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'VVFIN', 'PPER', 'ADV', 'ART', 'NN', 'KON', 'VMFIN', 'ADV', 'ADV', 'APPR', 'PPOSAT', 'NN', 'VVINF', 'KON', 'ADV', 'VVINF', 'PTKZU', 'VVINF'), 'right siblings': ['FKOORD'], 'parent': 'SIMPX', 'auto preterminal span': (36, 57), 'span': (36, 39), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM ja)
		(SIMPX dann wurde ich ja vorschlagen es gibt fluge schon ab sechs uhr morgens das wir wirklich um sechs uhr losfliegen)
		(SIMPX dann sind wir in zwei stunden spater)
		(SIMPX also sind wir um acht in hannover)
		(SIMPX
			(C bis)
			(MF wir dann)
			(FKOORD [01;33m(FKOORD[00m
				(LKM trinken wir noch einen kaffee)
				(KON und)
				[01;31m(FKOORD[00m
					(LK konnen)
					[01;31m(FKOORD[00m
						(MVC dann gleich zu unsrer filiale fahren) [01;33mFKOORD)[00m
						(KON und)
						(MVC
							(MF dort)
							[01;31m(VC[00m
								(VXFIN
									(VVINF anfangen))[01;31m)[00m
							[01;31m(NF[00m
								[01;31m(SIMPX[00m
									[01;31m(VC[00m
										(VXINF
											(PTKZU zu)
											(VVINF arbeiten))[01;31m)[00m[01;31m)[00m[01;31m)[00m)[01;31m)[00m[01;31m)[00m))))
Step:UNSET remove
{'subtrees': ['LK', 'FKOORD'], 'family': ['LKM', 'KON', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'ADV', 'ART', 'NN', 'KON', 'VMFIN', 'ADV', 'ADV', 'APPR', 'PPOSAT', 'NN', 'VVINF', 'KON', 'ADV', 'VVINF', 'PTKZU', 'VVINF'), 'right siblings': [], 'parent': 'FKOORD', 'auto preterminal span': (39, 57), 'span': (45, 57), 'left siblings': ['LKM', 'KON'], 'label': 'FKOORD', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM ja)
		(SIMPX dann wurde ich ja vorschlagen es gibt fluge schon ab sechs uhr morgens das wir wirklich um sechs uhr losfliegen)
		(SIMPX dann sind wir in zwei stunden spater)
		(SIMPX also sind wir um acht in hannover)
		(SIMPX
			(C bis)
			(MF wir dann)
			(FKOORD [01;33m(FKOORD[00m
				(LKM trinken wir noch einen kaffee)
				(KON und)
				(LK konnen)
				[01;31m(FKOORD[00m
					(MVC dann gleich zu unsrer filiale fahren) [01;33mFKOORD)[00m
					(KON und)
					(MVC
						(MF dort)
						[01;31m(VC[00m
							(VXFIN
								(VVINF anfangen))[01;31m)[00m
						[01;31m(NF[00m
							[01;31m(SIMPX[00m
								[01;31m(VC[00m
									(VXINF
										(PTKZU zu)
										(VVINF arbeiten))[01;31m)[00m[01;31m)[00m[01;31m)[00m)[01;31m)[00m))))
Step:UNSET remove
{'subtrees': ['MVC', 'KON', 'MVC'], 'family': ['LKM', 'KON', 'LK', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'ADV', 'ART', 'NN', 'KON', 'VMFIN', 'ADV', 'ADV', 'APPR', 'PPOSAT', 'NN', 'VVINF', 'KON', 'ADV', 'VVINF', 'PTKZU', 'VVINF'), 'right siblings': [], 'parent': 'FKOORD', 'auto preterminal span': (39, 57), 'span': (46, 57), 'left siblings': ['LKM', 'KON', 'LK'], 'label': 'FKOORD', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM ja)
		(SIMPX dann wurde ich ja vorschlagen es gibt fluge schon ab sechs uhr morgens das wir wirklich um sechs uhr losfliegen)
		(SIMPX dann sind wir in zwei stunden spater)
		(SIMPX also sind wir um acht in hannover)
		(SIMPX
			(C bis)
			(MF wir dann)
			(FKOORD
				[01;36m(FKOORD[00m
					(LKM trinken wir noch einen kaffee)
					(KON und)
					(LK konnen)
					(MVC dann gleich zu unsrer filiale fahren)[01;36m)[00m
				(KON und)
				(MVC
					(MF dort)
					[01;31m(VC[00m
						(VXFIN
							(VVINF anfangen))[01;31m)[00m
					[01;31m(NF[00m
						[01;31m(SIMPX[00m
							[01;31m(VC[00m
								(VXINF
									(PTKZU zu)
									(VVINF arbeiten))[01;31m)[00m[01;31m)[00m[01;31m)[00m)))))
Step:UNSET add
{'subtrees': ['LKM', 'KON', 'LK', 'MVC'], 'family': ['FKOORD', 'KON', 'MVC'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'ADV', 'ART', 'NN', 'KON', 'VMFIN', 'ADV', 'ADV', 'APPR', 'PPOSAT', 'NN', 'VVINF'), 'right siblings': [(KON und), (MVC (MF (ADVX (ADV dort))) (VC (VXFIN (VVINF anfangen))) (NF (SIMPX (VC (VXINF (PTKZU zu) (VVINF arbeiten))))))], 'left siblings': [], 'auto preterminal span': (39, 52), 'span': (39, 52), 'parent': 'FKOORD', 'label': 'FKOORD', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM ja)
		(SIMPX dann wurde ich ja vorschlagen es gibt fluge schon ab sechs uhr morgens das wir wirklich um sechs uhr losfliegen)
		(SIMPX dann sind wir in zwei stunden spater)
		(SIMPX also sind wir um acht in hannover)
		(SIMPX
			(C bis)
			(MF wir dann)
			(FKOORD
				(FKOORD trinken wir noch einen kaffee und konnen dann gleich zu unsrer filiale fahren)
				(KON und)
				(MVC
					(MF dort)
					[01;31m(VC[00m
						(VXFIN
							(VVINF anfangen))[01;31m)[00m
					[01;31m(NF[00m
						[01;31m(SIMPX[00m
							[01;31m(VC[00m
								(VXINF
									(PTKZU zu)
									(VVINF arbeiten))[01;31m)[00m[01;31m)[00m[01;31m)[00m)))))
Step:Unary
{'subtrees': ['VXFIN'], 'family': ['MF', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVINF', 'PTKZU', 'VVINF'), 'right siblings': ['NF'], 'parent': 'MVC', 'auto preterminal span': (53, 57), 'span': (54, 55), 'left siblings': ['MF'], 'label': 'VC', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM ja)
		(SIMPX dann wurde ich ja vorschlagen es gibt fluge schon ab sechs uhr morgens das wir wirklich um sechs uhr losfliegen)
		(SIMPX dann sind wir in zwei stunden spater)
		(SIMPX also sind wir um acht in hannover)
		(SIMPX
			(C bis)
			(MF wir dann)
			(FKOORD
				(FKOORD trinken wir noch einen kaffee und konnen dann gleich zu unsrer filiale fahren)
				(KON und)
				(MVC
					(MF dort)
					(VXFIN anfangen)
					[01;31m(NF[00m
						[01;31m(SIMPX[00m
							[01;31m(VC[00m
								(VXINF
									(PTKZU zu)
									(VVINF arbeiten))[01;31m)[00m[01;31m)[00m[01;31m)[00m)))))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['MF', 'VXFIN', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVINF', 'PTKZU', 'VVINF'), 'right siblings': [], 'parent': 'MVC', 'auto preterminal span': (53, 57), 'span': (55, 57), 'left siblings': ['MF', 'VXFIN'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM ja)
		(SIMPX dann wurde ich ja vorschlagen es gibt fluge schon ab sechs uhr morgens das wir wirklich um sechs uhr losfliegen)
		(SIMPX dann sind wir in zwei stunden spater)
		(SIMPX also sind wir um acht in hannover)
		(SIMPX
			(C bis)
			(MF wir dann)
			(FKOORD
				(FKOORD trinken wir noch einen kaffee und konnen dann gleich zu unsrer filiale fahren)
				(KON und)
				(MVC
					(MF dort)
					(VXFIN anfangen)
					[01;31m(SIMPX[00m
						[01;31m(VC[00m
							(VXINF
								(PTKZU zu)
								(VVINF arbeiten))[01;31m)[00m[01;31m)[00m)))))
Step:Unary
{'subtrees': ['VC'], 'family': ['MF', 'VXFIN', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVINF', 'PTKZU', 'VVINF'), 'right siblings': [], 'parent': 'MVC', 'auto preterminal span': (53, 57), 'span': (55, 57), 'left siblings': ['MF', 'VXFIN'], 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM ja)
		(SIMPX dann wurde ich ja vorschlagen es gibt fluge schon ab sechs uhr morgens das wir wirklich um sechs uhr losfliegen)
		(SIMPX dann sind wir in zwei stunden spater)
		(SIMPX also sind wir um acht in hannover)
		(SIMPX
			(C bis)
			(MF wir dann)
			(FKOORD
				(FKOORD trinken wir noch einen kaffee und konnen dann gleich zu unsrer filiale fahren)
				(KON und)
				(MVC
					(MF dort)
					(VXFIN anfangen)
					[01;31m(VC[00m
						(VXINF
							(PTKZU zu)
							(VVINF arbeiten))[01;31m)[00m)))))
Step:Unary
{'subtrees': ['VXINF'], 'family': ['MF', 'VXFIN', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVINF', 'PTKZU', 'VVINF'), 'right siblings': [], 'parent': 'MVC', 'auto preterminal span': (53, 57), 'span': (55, 57), 'left siblings': ['MF', 'VXFIN'], 'label': 'VC', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja ja dann wurde ich ja vorschlagen es gibt fluge schon ab sechs uhr morgens das wir wirklich um sechs uhr losfliegen dann sind wir in zwei stunden spater also sind wir um acht in hannover bis wir dann trinken wir noch einen kaffee und konnen dann gleich zu unsrer filiale fahren und dort anfangen zu arbeiten)

Sentence 405:
10 Initial errors
0 on fringe, 8 iterations
3 Error:UNSET move
1 Error:Unary
1 Error:UNSET remove
1 Error:Unary
1 Error:Single Word Phrase
1 Error:UNSET remove
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM also)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF ich)
			(LK wurde)
			[01;31m(MF[00m
				(ADVX
					(ADVX ganz)
					(ADV gerne))[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(C[00m
				(KOUS wenn)[01;31m)[00m
			[01;31m(MF[00m
				(PX
					(APPR nach)
					(NX so einem harten arbeitstag))[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(LV[00m
				(SIMPX
					(C wenn)
					(MF es da eine sauna)
					(VC gabe))[01;31m)[00m [01;33mSIMPX)[00m
			[01;36m(SIMPX[00m
				(VF ich)
				(LK wurde)
				(MF ganz gern in die sauna)
				(VC gehen)
				[01;36m(ADVX[00m
					(NF
						(ADVX dann)
						(ADVX kurz))[01;36m)[00m[01;36m)[00m[01;31m)[00m
		(SIMPX das ich mich ein bischen erholen kann)))
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['DM', 'SIMPX', 'SIMPX', 'LV', 'SIMPX', 'SIMPX'], 'mover info': [('LV', (11, 17))], 'old_family': ['LV', 'VF', 'LK', 'MF', 'VC', 'NF'], 'start left siblings': [], 'auto preterminals': ('ADV', 'PPER', 'VAFIN', 'ADV', 'ADV', 'KOUS', 'APPR', 'ADV', 'ART', 'ADJA', 'NN', 'KOUS', 'PPER', 'ADV', 'ART', 'NN', 'VVFIN', 'PPER', 'VAFIN', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'VVINF', 'ADV', 'ADV', 'KOUS', 'PPER', 'PRF', 'ART', 'PIS', 'VVINF', 'VMFIN'), 'start right siblings': ['VF', 'LK', 'MF', 'VC', 'NF'], 'end left siblings': ['DM', 'SIMPX', 'SIMPX'], 'auto preterminal span': (0, 34), 'adding node already present': True, 'movers': ['LV'], 'old_parent': 'SIMPX', 'added and moved': True, 'end right siblings': ['SIMPX', 'SIMPX'], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'ADVX'}
(TOP
	(TURN
		(DM also)
		(SIMPX
			[01;31m(SIMPX[00m
				(VF ich)
				(LK wurde)
				[01;31m(MF[00m
					(ADVX
						(ADVX ganz)
						(ADV gerne))[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				[01;31m(C[00m
					(KOUS wenn)[01;31m)[00m
				[01;31m(MF[00m
					(PX
						(APPR nach)
						(NX so einem harten arbeitstag))[01;31m)[00m[01;31m)[00m
			[01;31m(LV[00m
				(SIMPX
					(C wenn)
					(MF es da eine sauna)
					(VC gabe))[01;31m)[00m)
		(SIMPX
			(VF ich)
			(LK wurde)
			(MF ganz gern in die sauna)
			(VC gehen)
			[01;36m(ADVX[00m
				(NF
					(ADVX dann)
					(ADVX kurz))[01;36m)[00m)
		(SIMPX das ich mich ein bischen erholen kann)))
Step:Unary
{'subtrees': ['NF'], 'family': ['VF', 'LK', 'MF', 'VC', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV'), 'right siblings': [], 'left siblings': [(VF (NX (PPER ich))), (LK (VXFIN (VAFIN wurde))), (MF (ADVX (ADVX (ADV ganz)) (ADV gern)) (PX (APPR in) (NX (ART die) (NN sauna)))), (VC (VXINF (VVINF gehen)))], 'auto preterminal span': (25, 27), 'span': (25, 27), 'parent': 'SIMPX', 'label': 'ADVX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		(SIMPX
			[01;31m(SIMPX[00m
				(VF ich)
				(LK wurde)
				[01;31m(MF[00m
					(ADVX
						(ADVX ganz)
						(ADV gerne))[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				[01;31m(C[00m
					(KOUS wenn)[01;31m)[00m
				[01;31m(MF[00m
					(PX
						(APPR nach)
						(NX so einem harten arbeitstag))[01;31m)[00m[01;31m)[00m
			[01;31m(LV[00m
				(SIMPX
					(C wenn)
					(MF es da eine sauna)
					(VC gabe))[01;31m)[00m)
		(SIMPX ich wurde ganz gern in die sauna gehen dann kurz)
		(SIMPX das ich mich ein bischen erholen kann)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['SIMPX', 'SIMPX', 'LV'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'ADV', 'ADV', 'KOUS', 'APPR', 'ADV', 'ART', 'ADJA', 'NN', 'KOUS', 'PPER', 'ADV', 'ART', 'NN', 'VVFIN'), 'right siblings': ['SIMPX', 'LV'], 'parent': 'SIMPX', 'auto preterminal span': (1, 17), 'span': (1, 5), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX
			(VF ich)
			(LK wurde)
			[01;31m(MF[00m
				(ADVX
					(ADVX ganz)
					(ADV gerne))[01;31m)[00m
			[01;31m(SIMPX[00m
				[01;31m(C[00m
					(KOUS wenn)[01;31m)[00m
				[01;31m(MF[00m
					(PX
						(APPR nach)
						(NX so einem harten arbeitstag))[01;31m)[00m[01;31m)[00m
			[01;31m(LV[00m
				(SIMPX
					(C wenn)
					(MF es da eine sauna)
					(VC gabe))[01;31m)[00m)
		(SIMPX ich wurde ganz gern in die sauna gehen dann kurz)
		(SIMPX das ich mich ein bischen erholen kann)))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['VF', 'LK', 'MF', 'SIMPX', 'LV'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'ADV', 'ADV', 'KOUS', 'APPR', 'ADV', 'ART', 'ADJA', 'NN', 'KOUS', 'PPER', 'ADV', 'ART', 'NN', 'VVFIN'), 'right siblings': ['SIMPX', 'LV'], 'parent': 'SIMPX', 'auto preterminal span': (1, 17), 'span': (3, 5), 'left siblings': ['VF', 'LK'], 'label': 'MF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX
			(VF ich)
			(LK wurde)
			(ADVX ganz gerne)
			[01;31m(SIMPX[00m
				[01;31m(C[00m
					(KOUS wenn)[01;31m)[00m
				[01;31m(MF[00m
					(PX
						(APPR nach)
						(NX so einem harten arbeitstag))[01;31m)[00m[01;31m)[00m
			[01;31m(LV[00m
				(SIMPX
					(C wenn)
					(MF es da eine sauna)
					(VC gabe))[01;31m)[00m)
		(SIMPX ich wurde ganz gern in die sauna gehen dann kurz)
		(SIMPX das ich mich ein bischen erholen kann)))
Step:Single Word Phrase
{'subtrees': ['KOUS'], 'family': ['C', 'MF'], 'over_word': True, 'over words': True, 'auto preterminals': ('KOUS', 'APPR', 'ADV', 'ART', 'ADJA', 'NN'), 'right siblings': ['MF'], 'parent': 'SIMPX', 'auto preterminal span': (5, 11), 'span': (5, 6), 'left siblings': [], 'label': 'C', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX
			(VF ich)
			(LK wurde)
			(ADVX ganz gerne)
			[01;31m(SIMPX[00m
				(KOUS wenn)
				[01;31m(MF[00m
					(PX
						(APPR nach)
						(NX so einem harten arbeitstag))[01;31m)[00m[01;31m)[00m
			[01;31m(LV[00m
				(SIMPX
					(C wenn)
					(MF es da eine sauna)
					(VC gabe))[01;31m)[00m)
		(SIMPX ich wurde ganz gern in die sauna gehen dann kurz)
		(SIMPX das ich mich ein bischen erholen kann)))
Step:UNSET remove
{'subtrees': ['KOUS', 'MF'], 'family': ['VF', 'LK', 'ADVX', 'SIMPX', 'LV'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'ADV', 'ADV', 'KOUS', 'APPR', 'ADV', 'ART', 'ADJA', 'NN', 'KOUS', 'PPER', 'ADV', 'ART', 'NN', 'VVFIN'), 'right siblings': ['LV'], 'parent': 'SIMPX', 'auto preterminal span': (1, 17), 'span': (5, 11), 'left siblings': ['VF', 'LK', 'ADVX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX
			(VF ich)
			(LK wurde)
			(ADVX ganz gerne)
			(KOUS wenn)
			[01;31m(MF[00m
				(PX
					(APPR nach)
					(NX so einem harten arbeitstag))[01;31m)[00m
			[01;31m(LV[00m
				(SIMPX
					(C wenn)
					(MF es da eine sauna)
					(VC gabe))[01;31m)[00m)
		(SIMPX ich wurde ganz gern in die sauna gehen dann kurz)
		(SIMPX das ich mich ein bischen erholen kann)))
Step:Unary
{'subtrees': ['PX'], 'family': ['VF', 'LK', 'ADVX', 'KOUS', 'MF', 'LV'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'ADV', 'ADV', 'KOUS', 'APPR', 'ADV', 'ART', 'ADJA', 'NN', 'KOUS', 'PPER', 'ADV', 'ART', 'NN', 'VVFIN'), 'right siblings': ['LV'], 'parent': 'SIMPX', 'auto preterminal span': (1, 17), 'span': (6, 11), 'left siblings': ['VF', 'LK', 'ADVX', 'KOUS'], 'label': 'MF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX
			(VF ich)
			(LK wurde)
			(ADVX ganz gerne)
			(KOUS wenn)
			(PX nach so einem harten arbeitstag)
			[01;31m(LV[00m
				(SIMPX
					(C wenn)
					(MF es da eine sauna)
					(VC gabe))[01;31m)[00m)
		(SIMPX ich wurde ganz gern in die sauna gehen dann kurz)
		(SIMPX das ich mich ein bischen erholen kann)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['VF', 'LK', 'ADVX', 'KOUS', 'PX', 'LV'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'ADV', 'ADV', 'KOUS', 'APPR', 'ADV', 'ART', 'ADJA', 'NN', 'KOUS', 'PPER', 'ADV', 'ART', 'NN', 'VVFIN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (1, 17), 'span': (11, 17), 'left siblings': ['VF', 'LK', 'ADVX', 'KOUS', 'PX'], 'label': 'LV', 'classified_type': 'Unary', 'type': 'remove'}
(TOP also ich wurde ganz gerne wenn nach so einem harten arbeitstag wenn es da eine sauna gabe ich wurde ganz gern in die sauna gehen dann kurz das ich mich ein bischen erholen kann)

Sentence 406:
4 Initial errors
0 on fringe, 4 iterations
1 Error:Unary
1 Error:Clause Attachment
1 Error:UNSET remove
1 Error:UNSET add
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM na ja)
		(DM gut)
		(SIMPX
			(KOORD aber)
			[01;31m(VF[00m
				[01;31m(PX[00m
					(PX dafur)
					[01;31m(SIMPX[00m
						(C das)
						(MF wir die woche dann so)
						(VC vollpacken)
						[01;33m(SIMPX[00m (NF mit terminen)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			(LK ware)
			(MF das sicherlich okay)))) [01;33mSIMPX)[00m
Step:Unary
{'subtrees': ['PX'], 'family': ['KOORD', 'VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'PROP', 'KOUS', 'PPER', 'ART', 'NN', 'ADV', 'ADV', 'VVFIN', 'APPR', 'NN', 'VAFIN', 'PDS', 'ADV', 'ADJD'), 'right siblings': ['LK', 'MF'], 'parent': 'SIMPX', 'auto preterminal span': (3, 18), 'span': (4, 14), 'left siblings': ['KOORD'], 'label': 'VF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM na ja)
		(DM gut)
		(SIMPX
			(KOORD aber)
			[01;31m(PX[00m
				(PX dafur)
				[01;31m(SIMPX[00m
					(C das)
					(MF wir die woche dann so)
					(VC vollpacken)
					[01;33m(SIMPX[00m (NF mit terminen)[01;31m)[00m[01;31m)[00m
			(LK ware)
			(MF das sicherlich okay)))) [01;33mSIMPX)[00m
Step:Clause Attachment
{'subtrees': ['PX', 'SIMPX'], 'family': ['KOORD', 'PX', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'PROP', 'KOUS', 'PPER', 'ART', 'NN', 'ADV', 'ADV', 'VVFIN', 'APPR', 'NN', 'VAFIN', 'PDS', 'ADV', 'ADJD'), 'right siblings': ['LK', 'MF'], 'parent': 'SIMPX', 'auto preterminal span': (3, 18), 'span': (4, 14), 'left siblings': ['KOORD'], 'label': 'PX', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM na ja)
		(DM gut)
		(SIMPX
			(KOORD aber)
			(PX dafur)
			[01;31m(SIMPX[00m
				(C das)
				(MF wir die woche dann so)
				(VC vollpacken)
				[01;33m(SIMPX[00m (NF mit terminen)[01;31m)[00m
			(LK ware)
			(MF das sicherlich okay)))) [01;33mSIMPX)[00m
Step:UNSET remove
{'subtrees': ['C', 'MF', 'VC', 'NF'], 'family': ['KOORD', 'PX', 'SIMPX', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'PROP', 'KOUS', 'PPER', 'ART', 'NN', 'ADV', 'ADV', 'VVFIN', 'APPR', 'NN', 'VAFIN', 'PDS', 'ADV', 'ADJD'), 'right siblings': ['LK', 'MF'], 'parent': 'SIMPX', 'auto preterminal span': (3, 18), 'span': (5, 14), 'left siblings': ['KOORD', 'PX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM na ja)
		(DM gut)
		(SIMPX
			(KOORD aber)
			(PX dafur)
			(C das)
			(MF wir die woche dann so)
			(VC vollpacken)
			[01;36m(SIMPX[00m
				(NF mit terminen)
				(LK ware)
				(MF das sicherlich okay)[01;36m)[00m)))
Step:UNSET add
{'subtrees': ['NF', 'LK', 'MF'], 'family': ['KOORD', 'PX', 'C', 'MF', 'VC', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'NN', 'VAFIN', 'PDS', 'ADV', 'ADJD'), 'right siblings': [], 'left siblings': [(KOORD (KON aber)), (PX (PROP dafur)), (C (KOUS das)), (MF (NX (PPER wir)) (NX (ART die) (NN woche)) (ADVX (ADV dann)) (ADVX (ADV so))), (VC (VXFIN (VVFIN vollpacken)))], 'auto preterminal span': (12, 18), 'span': (12, 18), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP na ja gut aber dafur das wir die woche dann so vollpacken mit terminen ware das sicherlich okay)

Sentence 407:
4 Initial errors
0 on fringe, 2 iterations
3 Error:UNSET move
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		[01;36m(SIMPX[00m
			(SIMPX ich kummere mich um die fluge)
			[01;31m(SIMPX[00m
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				[01;36m(SIMPX[00m
					(VF wir)
					(LK checken)
					(MF mal)
					(NF ob wir dienstag abend oder mittwoch morgen nach berlin fliegen konnen)[01;36m)[00m[01;31m)[00m[01;36m)[00m
		(SIMPX und ich gebe ihnen dann noch bescheid)
		(SIMPX ware ihnen beides recht)))
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['DM', 'SIMPX', 'KOORD', 'SIMPX', 'SIMPX', 'SIMPX'], 'mover info': [('KOORD', (7, 8))], 'old_family': ['KOORD', 'VF', 'LK', 'MF', 'NF'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'PPER', 'VVFIN', 'PRF', 'APPR', 'ART', 'NN', 'KON', 'PPER', 'VVFIN', 'ADV', 'KOUS', 'PPER', 'NN', 'ADV', 'KON', 'NN', 'ADV', 'APPR', 'NE', 'VVINF', 'VMFIN', 'KON', 'PPER', 'VVFIN', 'PPER', 'ADV', 'ADV', 'NN', 'VAFIN', 'PPER', 'PIS', 'ADJD'), 'start right siblings': ['VF', 'LK', 'MF', 'NF'], 'end left siblings': ['DM', 'SIMPX'], 'auto preterminal span': (0, 33), 'adding node already present': False, 'movers': ['KOORD'], 'old_parent': 'SIMPX', 'POS confusion': ('KON', 'KON'), 'added and moved': True, 'end right siblings': ['SIMPX', 'SIMPX', 'SIMPX'], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'SIMPX'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(SIMPX ich kummere mich um die fluge)
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(SIMPX wir checken mal ob wir dienstag abend oder mittwoch morgen nach berlin fliegen konnen))
		(SIMPX und ich gebe ihnen dann noch bescheid)
		(SIMPX ware ihnen beides recht)))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['SIMPX', 'KOORD', 'SIMPX'], 'over_word': True, 'over words': True, 'auto preterminals': ('PPER', 'VVFIN', 'PRF', 'APPR', 'ART', 'NN', 'KON', 'PPER', 'VVFIN', 'ADV', 'KOUS', 'PPER', 'NN', 'ADV', 'KON', 'NN', 'ADV', 'APPR', 'NE', 'VVINF', 'VMFIN'), 'right siblings': ['SIMPX'], 'parent': 'SIMPX', 'auto preterminal span': (1, 22), 'span': (7, 8), 'left siblings': ['SIMPX'], 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP ja ich kummere mich um die fluge und wir checken mal ob wir dienstag abend oder mittwoch morgen nach berlin fliegen konnen und ich gebe ihnen dann noch bescheid ware ihnen beides recht)

Sentence 408:
0 Initial errors
0 on fringe, 0 iterations

Sentence 409:
12 Initial errors
0 on fringe, 9 iterations
2 Error:Different label
2 Error:Single Word Phrase
1 Error:UNSET add
1 Error:UNSET remove
2 Error:Modifier Attachment
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM also)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK hatte)
			(MF grose lust)
			[01;33m(SIMPX (NF[00m (NF ins theater zu gehen)[01;31m)[00m
		[01;31m(NX[00m
			(ADVX aber)
			(ADVX nicht)
			(NX
				(NX so was)
				[01;36m(ADJX[00m [01;31m(NX[00m
					(ADVX ganz)
					(NN schweres)[01;31m)[00m[01;36m)[00m)[01;31m)[00m [01;33mNF) SIMPX)[00m
		(DM also)
		(SIMPX
			(VF ich)
			(LK weis)
			(MF zufallig)
			(NF
				(SIMPX
					[01;36m(NX[00m [01;31m(C[00m
						(KOUS das)[01;31m)[00m[01;36m)[00m
					(MF
						[01;36m(PX[00m
							(PX im letzten monat)
							(NX woyzek)[01;36m)[00m
						(ADVX da))
					(VC gegeben wurde))))
		(SIMPX das ware mir ein bischen zu anstrengend)
		[01;31m(SIMPX[00m
			(VF vielleicht)
			(LK finden)
			[01;31m(MF[00m
				(NX wir)
				(NX
					(NX so was)
					(PX
						(APPR in)
						(NX
							(NX richtung)
							[01;31m(NX[00m
								(NX musical)
								(KON oder)
								(NX variete)[01;31m)[00m)))[01;31m)[00m[01;31m)[00m))
Step:Different label
{'family': ['NX', 'ADJX'], 'auto preterminal span': (13, 15), 'span': (13, 15), 'subtrees': ['ADVX', 'NN'], 'parent': 'NX', 'over_word': False, 'auto preterminals': ('ADV', 'NN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('NX', 'ADJX')}
(TOP
	(TURN
		(DM also)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK hatte)
			(MF grose lust)
			[01;33m(SIMPX (NF[00m (NF ins theater zu gehen)[01;31m)[00m
		[01;31m(NX[00m
			(ADVX aber)
			(ADVX nicht)
			(NX so was ganz schweres)[01;31m)[00m [01;33mNF) SIMPX)[00m
		(DM also)
		(SIMPX
			(VF ich)
			(LK weis)
			(MF zufallig)
			(NF
				(SIMPX
					[01;36m(NX[00m [01;31m(C[00m
						(KOUS das)[01;31m)[00m[01;36m)[00m
					(MF
						[01;36m(PX[00m
							(PX im letzten monat)
							(NX woyzek)[01;36m)[00m
						(ADVX da))
					(VC gegeben wurde))))
		(SIMPX das ware mir ein bischen zu anstrengend)
		[01;31m(SIMPX[00m
			(VF vielleicht)
			(LK finden)
			[01;31m(MF[00m
				(NX wir)
				(NX
					(NX so was)
					(PX
						(APPR in)
						(NX
							(NX richtung)
							[01;31m(NX[00m
								(NX musical)
								(KON oder)
								(NX variete)[01;31m)[00m)))[01;31m)[00m[01;31m)[00m))
Step:Single Word Phrase
{'family': ['NX', 'MF', 'VC'], 'auto preterminal span': (19, 20), 'span': (19, 20), 'subtrees': ['KOUS'], 'parent': 'SIMPX', 'over_word': True, 'auto preterminals': ('KOUS',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('C', 'NX')}
(TOP
	(TURN
		(DM also)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK hatte)
			(MF grose lust)
			[01;33m(SIMPX (NF[00m (NF ins theater zu gehen)[01;31m)[00m
		[01;31m(NX[00m
			(ADVX aber)
			(ADVX nicht)
			(NX so was ganz schweres)[01;31m)[00m [01;33mNF) SIMPX)[00m
		(DM also)
		(SIMPX
			(VF ich)
			(LK weis)
			(MF zufallig)
			(NF
				(SIMPX
					(NX das)
					(MF
						[01;36m(PX[00m
							(PX im letzten monat)
							(NX woyzek)[01;36m)[00m
						(ADVX da))
					(VC gegeben wurde))))
		(SIMPX das ware mir ein bischen zu anstrengend)
		[01;31m(SIMPX[00m
			(VF vielleicht)
			(LK finden)
			[01;31m(MF[00m
				(NX wir)
				(NX
					(NX so was)
					(PX
						(APPR in)
						(NX
							(NX richtung)
							[01;31m(NX[00m
								(NX musical)
								(KON oder)
								(NX variete)[01;31m)[00m)))[01;31m)[00m[01;31m)[00m))
Step:UNSET add
{'subtrees': ['PX', 'NX'], 'family': ['PX', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'ADJA', 'NN', 'NE'), 'right siblings': [(ADVX (ADV da))], 'left siblings': [], 'auto preterminal span': (20, 24), 'span': (20, 24), 'parent': 'MF', 'label': 'PX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK hatte)
			(MF grose lust)
			[01;33m(SIMPX (NF[00m (NF ins theater zu gehen)[01;31m)[00m
		[01;31m(NX[00m
			(ADVX aber)
			(ADVX nicht)
			(NX so was ganz schweres)[01;31m)[00m [01;33mNF) SIMPX)[00m
		(DM also)
		(SIMPX ich weis zufallig das im letzten monat woyzek da gegeben wurde)
		(SIMPX das ware mir ein bischen zu anstrengend)
		[01;31m(SIMPX[00m
			(VF vielleicht)
			(LK finden)
			[01;31m(MF[00m
				(NX wir)
				(NX
					(NX so was)
					(PX
						(APPR in)
						(NX
							(NX richtung)
							[01;31m(NX[00m
								(NX musical)
								(KON oder)
								(NX variete)[01;31m)[00m)))[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'NF'], 'family': ['DM', 'SIMPX', 'NX', 'DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPER', 'VAFIN', 'ADJA', 'NN', 'APPRART', 'NN', 'PTKZU', 'VVINF', 'ADV', 'PTKNEG', 'ADV', 'PIS', 'ADV', 'NN', 'ADV', 'PPER', 'VVFIN', 'ADV', 'KOUS', 'APPRART', 'ADJA', 'NN', 'NE', 'ADV', 'VVPP', 'VAFIN', 'PDS', 'VAFIN', 'PPER', 'ART', 'PIS', 'PTKA', 'ADJD', 'ADV', 'VVFIN', 'PPER', 'ADV', 'PIS', 'APPR', 'NN', 'NN', 'KON', 'NN'), 'right siblings': ['NX', 'DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 44), 'span': (1, 9), 'left siblings': ['DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(VF ich)
		(LK hatte)
		(MF grose lust)
		[01;36m(SIMPX[00m
			[01;36m(NF[00m
				(NF ins theater zu gehen)
				[01;31m(NX[00m
					(ADVX aber)
					(ADVX nicht)
					(NX so was ganz schweres)[01;31m)[00m[01;36m)[00m[01;36m)[00m
		(DM also)
		(SIMPX ich weis zufallig das im letzten monat woyzek da gegeben wurde)
		(SIMPX das ware mir ein bischen zu anstrengend)
		[01;31m(SIMPX[00m
			(VF vielleicht)
			(LK finden)
			[01;31m(MF[00m
				(NX wir)
				(NX
					(NX so was)
					(PX
						(APPR in)
						(NX
							(NX richtung)
							[01;31m(NX[00m
								(NX musical)
								(KON oder)
								(NX variete)[01;31m)[00m)))[01;31m)[00m[01;31m)[00m))
Step:Modifier Attachment
{'new_parent': 'TURN', 'new_family': ['DM', 'VF', 'LK', 'MF', 'NF', 'ADVX', 'ADVX', 'NX', 'DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'mover info': [('ADVX', (9, 10)), ('ADVX', (10, 11))], 'old_family': ['ADVX', 'ADVX', 'NX'], 'start left siblings': [], 'auto preterminals': ('ADV', 'PPER', 'VAFIN', 'ADJA', 'NN', 'APPRART', 'NN', 'PTKZU', 'VVINF', 'ADV', 'PTKNEG', 'ADV', 'PIS', 'ADV', 'NN', 'ADV', 'PPER', 'VVFIN', 'ADV', 'KOUS', 'APPRART', 'ADJA', 'NN', 'NE', 'ADV', 'VVPP', 'VAFIN', 'PDS', 'VAFIN', 'PPER', 'ART', 'PIS', 'PTKA', 'ADJD', 'ADV', 'VVFIN', 'PPER', 'ADV', 'PIS', 'APPR', 'NN', 'NN', 'KON', 'NN'), 'start right siblings': ['NX'], 'end left siblings': ['DM', 'VF', 'LK', 'MF', 'NF'], 'auto preterminal span': (0, 44), 'adding node already present': False, 'movers': ['ADVX', 'ADVX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': ['NX', 'DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'SIMPX'}
(TOP
	(TURN
		(DM also)
		(VF ich)
		(LK hatte)
		(MF grose lust)
		[01;36m(SIMPX[00m
			(NF
				(NF ins theater zu gehen)
				(ADVX aber)
				(ADVX nicht)
				(NX so was ganz schweres))[01;36m)[00m
		(DM also)
		(SIMPX ich weis zufallig das im letzten monat woyzek da gegeben wurde)
		(SIMPX das ware mir ein bischen zu anstrengend)
		[01;31m(SIMPX[00m
			(VF vielleicht)
			(LK finden)
			[01;31m(MF[00m
				(NX wir)
				(NX
					(NX so was)
					(PX
						(APPR in)
						(NX
							(NX richtung)
							[01;31m(NX[00m
								(NX musical)
								(KON oder)
								(NX variete)[01;31m)[00m)))[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['NF'], 'family': ['DM', 'VF', 'LK', 'MF', 'SIMPX', 'DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'NN', 'PTKZU', 'VVINF', 'ADV', 'PTKNEG', 'ADV', 'PIS', 'ADV', 'NN'), 'right siblings': [(DM (ADVX (ADV also))), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN weis))) (MF (ADVX (ADV zufallig))) (NF (SIMPX (NX (KOUS das)) (MF (PX (PX (APPRART im) (NX (ADJX (ADJA letzten)) (NN monat))) (NX (NE woyzek))) (ADVX (ADV da))) (VC (VXINF (VVPP gegeben)) (VXFIN (VAFIN wurde)))))), (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VAFIN ware))) (MF (NX (PPER mir)) (ADJX (NX (ART ein) (PIS bischen)) (PTKA zu) (ADJD anstrengend)))), (SIMPX (VF (ADVX (ADV vielleicht))) (LK (VXFIN (VVFIN finden))) (MF (NX (PPER wir)) (NX (NX (ADVX (ADV so)) (PIS was)) (PX (APPR in) (NX (NX (NN richtung)) (NX (NX (NN musical)) (KON oder) (NX (NN variete))))))))], 'left siblings': [(DM (ADVX (ADV also))), (VF (NX (PPER ich))), (LK (VXFIN (VAFIN hatte))), (MF (NX (ADJX (ADJA grose)) (NN lust)))], 'auto preterminal span': (5, 15), 'span': (5, 15), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		(VF ich)
		(LK hatte)
		(MF grose lust)
		(SIMPX ins theater zu gehen aber nicht so was ganz schweres)
		(DM also)
		(SIMPX ich weis zufallig das im letzten monat woyzek da gegeben wurde)
		(SIMPX das ware mir ein bischen zu anstrengend)
		[01;31m(SIMPX[00m
			(VF vielleicht)
			(LK finden)
			[01;31m(MF[00m
				(NX wir)
				(NX
					(NX so was)
					(PX
						(APPR in)
						(NX
							(NX richtung)
							[01;31m(NX[00m
								(NX musical)
								(KON oder)
								(NX variete)[01;31m)[00m)))[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['DM', 'VF', 'LK', 'MF', 'SIMPX', 'DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPER', 'VAFIN', 'ADJA', 'NN', 'APPRART', 'NN', 'PTKZU', 'VVINF', 'ADV', 'PTKNEG', 'ADV', 'PIS', 'ADV', 'NN', 'ADV', 'PPER', 'VVFIN', 'ADV', 'KOUS', 'APPRART', 'ADJA', 'NN', 'NE', 'ADV', 'VVPP', 'VAFIN', 'PDS', 'VAFIN', 'PPER', 'ART', 'PIS', 'PTKA', 'ADJD', 'ADV', 'VVFIN', 'PPER', 'ADV', 'PIS', 'APPR', 'NN', 'NN', 'KON', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 44), 'span': (34, 44), 'left siblings': ['DM', 'VF', 'LK', 'MF', 'SIMPX', 'DM', 'SIMPX', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(VF ich)
		(LK hatte)
		(MF grose lust)
		(SIMPX ins theater zu gehen aber nicht so was ganz schweres)
		(DM also)
		(SIMPX ich weis zufallig das im letzten monat woyzek da gegeben wurde)
		(SIMPX das ware mir ein bischen zu anstrengend)
		(VF vielleicht)
		(LK finden)
		[01;31m(MF[00m
			(NX wir)
			(NX
				(NX so was)
				(PX
					(APPR in)
					(NX
						(NX richtung)
						[01;31m(NX[00m
							(NX musical)
							(KON oder)
							(NX variete)[01;31m)[00m)))[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['NX', 'NX'], 'family': ['DM', 'VF', 'LK', 'MF', 'SIMPX', 'DM', 'SIMPX', 'SIMPX', 'VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPER', 'VAFIN', 'ADJA', 'NN', 'APPRART', 'NN', 'PTKZU', 'VVINF', 'ADV', 'PTKNEG', 'ADV', 'PIS', 'ADV', 'NN', 'ADV', 'PPER', 'VVFIN', 'ADV', 'KOUS', 'APPRART', 'ADJA', 'NN', 'NE', 'ADV', 'VVPP', 'VAFIN', 'PDS', 'VAFIN', 'PPER', 'ART', 'PIS', 'PTKA', 'ADJD', 'ADV', 'VVFIN', 'PPER', 'ADV', 'PIS', 'APPR', 'NN', 'NN', 'KON', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 44), 'span': (36, 44), 'left siblings': ['DM', 'VF', 'LK', 'MF', 'SIMPX', 'DM', 'SIMPX', 'SIMPX', 'VF', 'LK'], 'label': 'MF', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(VF ich)
		(LK hatte)
		(MF grose lust)
		(SIMPX ins theater zu gehen aber nicht so was ganz schweres)
		(DM also)
		(SIMPX ich weis zufallig das im letzten monat woyzek da gegeben wurde)
		(SIMPX das ware mir ein bischen zu anstrengend)
		(VF vielleicht)
		(LK finden)
		(NX wir)
		(NX
			(NX so was)
			(PX
				(APPR in)
				(NX
					(NX richtung)
					[01;31m(NX[00m
						(NX musical)
						(KON oder)
						(NX variete)[01;31m)[00m)))))
Step:UNSET remove
{'subtrees': ['NX', 'KON', 'NX'], 'family': ['NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'NN', 'KON', 'NN'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (40, 44), 'span': (41, 44), 'left siblings': ['NX'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP also ich hatte grose lust ins theater zu gehen aber nicht so was ganz schweres also ich weis zufallig das im letzten monat woyzek da gegeben wurde das ware mir ein bischen zu anstrengend vielleicht finden wir so was in richtung musical oder variete)

Sentence 410:
0 Initial errors
0 on fringe, 0 iterations

Sentence 411:
4 Initial errors
0 on fringe, 3 iterations
2 Error:UNSET move
1 Error:NP Internal Structure
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM okay)
		(SIMPX
			(VF ich)
			(LK setze)
			(MF
				(NX mich)
				(ADVX also)
				(NX
					(ADVX spatestens)
					[01;36m(NX[00m
						(NX mitte)
						(NX nachste woche)[01;36m)[00m)
				(PX mit ihnen)
				(PX in verbindung)))
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			[01;36m(SIMPX[00m
				(VF dann)
				(LK machen)
				(MF wir alles weitere so)
				(NF wie besprochen)[01;36m)[00m[01;31m)[00m))
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['DM', 'SIMPX', 'KOORD', 'SIMPX'], 'mover info': [('KOORD', (13, 14))], 'old_family': ['KOORD', 'VF', 'LK', 'MF', 'NF'], 'start left siblings': [], 'auto preterminals': ('ITJ', 'PPER', 'VVFIN', 'PRF', 'ADV', 'ADV', 'NN', 'ADJA', 'NN', 'APPR', 'PPER', 'APPR', 'NN', 'KON', 'ADV', 'VVFIN', 'PPER', 'PIS', 'NN', 'ADV', 'KOUS', 'VVPP'), 'start right siblings': ['VF', 'LK', 'MF', 'NF'], 'end left siblings': ['DM', 'SIMPX'], 'auto preterminal span': (0, 22), 'movers': ['KOORD'], 'old_parent': 'SIMPX', 'POS confusion': ('KON', 'KON'), 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM okay)
		(SIMPX
			(VF ich)
			(LK setze)
			(MF
				(NX mich)
				(ADVX also)
				(NX
					(ADVX spatestens)
					[01;36m(NX[00m
						(NX mitte)
						(NX nachste woche)[01;36m)[00m)
				(PX mit ihnen)
				(PX in verbindung)))
		[01;31m(KOORD[00m
			(KON und)[01;31m)[00m
		(SIMPX dann machen wir alles weitere so wie besprochen)))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'ADJA', 'NN'), 'right siblings': [], 'left siblings': [(ADVX (ADV spatestens))], 'auto preterminal span': (6, 9), 'span': (6, 9), 'parent': 'NX', 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'add'}
(TOP
	(TURN
		(DM okay)
		(SIMPX ich setze mich also spatestens mitte nachste woche mit ihnen in verbindung)
		[01;31m(KOORD[00m
			(KON und)[01;31m)[00m
		(SIMPX dann machen wir alles weitere so wie besprochen)))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['DM', 'SIMPX', 'KOORD', 'SIMPX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ITJ', 'PPER', 'VVFIN', 'PRF', 'ADV', 'ADV', 'NN', 'ADJA', 'NN', 'APPR', 'PPER', 'APPR', 'NN', 'KON', 'ADV', 'VVFIN', 'PPER', 'PIS', 'NN', 'ADV', 'KOUS', 'VVPP'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 22), 'span': (13, 14), 'left siblings': ['DM', 'SIMPX'], 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP okay ich setze mich also spatestens mitte nachste woche mit ihnen in verbindung und dann machen wir alles weitere so wie besprochen)

Sentence 412:
4 Initial errors
0 on fringe, 2 iterations
2 Error:Single Word Phrase
2 Error:Different label
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(ADVX da)
		(SIMPX da horen sie ganz richtig)
		(SIMPX
			(VF ich)
			(LK finde)
			(NF
				(SIMPX
					(VF wir)
					(LK sollten)
					(MF
						(NX uns)
						(ADJX dringend)
						[01;36m(ADVX[00m [01;31m(PX[00m
							(PROP druber)[01;31m)[00m[01;36m)[00m)
					(VC einigen)
					[01;36m(R[00m
						(NF
							[01;31m(SIMPX[00m
								(C wann)
								(MF denn die geschaftsreise)
								(VC losgehen soll)[01;31m)[00m)[01;36m)[00m)))))
Step:Single Word Phrase
{'family': ['NX', 'ADJX', 'ADVX'], 'auto preterminal span': (12, 13), 'span': (12, 13), 'subtrees': ['PROP'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('PROP',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('PX', 'ADVX')}
(TOP
	(TURN
		(ADVX da)
		(SIMPX da horen sie ganz richtig)
		(SIMPX
			(VF ich)
			(LK finde)
			(NF
				(SIMPX
					(VF wir)
					(LK sollten)
					(MF uns dringend druber)
					(VC einigen)
					[01;36m(R[00m
						(NF
							[01;31m(SIMPX[00m
								(C wann)
								(MF denn die geschaftsreise)
								(VC losgehen soll)[01;31m)[00m)[01;36m)[00m)))))
Step:Different label
{'family': ['R'], 'auto preterminal span': (14, 20), 'span': (14, 20), 'subtrees': ['C', 'MF', 'VC'], 'parent': 'NF', 'over_word': False, 'auto preterminals': ('PWAV', 'ADV', 'ART', 'NN', 'VVINF', 'VMFIN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('SIMPX', 'R')}
(TOP da da horen sie ganz richtig ich finde wir sollten uns dringend druber einigen wann denn die geschaftsreise losgehen soll)

Sentence 413:
0 Initial errors
0 on fringe, 0 iterations

Sentence 414:
3 Initial errors
0 on fringe, 2 iterations
2 Error:Clause Attachment
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM nein)
		(DM nein)
		(SIMPX das past schon)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(LK wissen)
				(MF sie)[01;31m)[00m
			[01;31m(SIMPX[00m
				(LK kommen)
				(MF sie doch lieber)
				(VC mit)[01;31m)[00m[01;36m)[00m
		(SIMPX unternehmen abends noch was)))
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['SIMPX', 'LK', 'MF', 'VC'], 'mover info': [('SIMPX', (5, 7))], 'old_family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'start left siblings': ['DM', 'DM', 'SIMPX'], 'auto preterminals': ('PTKANT', 'PTKANT', 'PDS', 'VVFIN', 'ADV', 'VVFIN', 'PPER', 'VVIMP', 'PPER', 'ADV', 'ADV', 'PTKVZ', 'VVFIN', 'ADV', 'ADV', 'PIS'), 'start right siblings': ['SIMPX', 'SIMPX'], 'end left siblings': [], 'auto preterminal span': (0, 16), 'movers': ['SIMPX'], 'old_parent': 'TURN', 'end right siblings': ['LK', 'MF', 'VC'], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM nein)
		(DM nein)
		(SIMPX das past schon)
		(SIMPX
			[01;31m(SIMPX[00m
				(LK wissen)
				(MF sie)[01;31m)[00m
			(LK kommen)
			(MF sie doch lieber)
			(VC mit))
		(SIMPX unternehmen abends noch was)))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['SIMPX', 'LK', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'VVIMP', 'PPER', 'ADV', 'ADV', 'PTKVZ'), 'right siblings': ['LK', 'MF', 'VC'], 'parent': 'SIMPX', 'auto preterminal span': (5, 12), 'span': (5, 7), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP nein nein das past schon wissen sie kommen sie doch lieber mit unternehmen abends noch was)

Sentence 415:
2 Initial errors
0 on fringe, 2 iterations
1 Error:UNSET add
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX das past mir sehr gut)
		(DM also)
		(SIMPX ich freue mich)
		[01;36m(DM[00m
			[01;36m(PX[00m
				(PX bis august)
				(DM auf wiedersehen)[01;36m)[00m[01;36m)[00m
		(DM herr doll)))
Step:UNSET add
{'subtrees': ['PX', 'DM'], 'family': ['DM', 'SIMPX', 'DM', 'SIMPX', 'PX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'NN', 'APPR', 'NN'), 'right siblings': [(DM (NX (NN herr) (NE doll)))], 'left siblings': [(DM (PTKANT ja)), (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VVFIN past))) (MF (NX (PPER mir)) (ADJX (ADVX (ADV sehr)) (ADJD gut)))), (DM (ADVX (ADV also))), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN freue))) (MF (NX (PRF mich))))], 'auto preterminal span': (10, 14), 'span': (10, 14), 'parent': 'TURN', 'label': 'PX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX das past mir sehr gut)
		(DM also)
		(SIMPX ich freue mich)
		[01;36m(DM[00m
			(PX
				(PX bis august)
				(DM auf wiedersehen))[01;36m)[00m
		(DM herr doll)))
Step:Unary
{'subtrees': ['PX'], 'family': ['DM', 'SIMPX', 'DM', 'SIMPX', 'DM', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'NN', 'APPR', 'NN'), 'right siblings': [(DM (NX (NN herr) (NE doll)))], 'left siblings': [(DM (PTKANT ja)), (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VVFIN past))) (MF (NX (PPER mir)) (ADJX (ADVX (ADV sehr)) (ADJD gut)))), (DM (ADVX (ADV also))), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN freue))) (MF (NX (PRF mich))))], 'auto preterminal span': (10, 14), 'span': (10, 14), 'parent': 'TURN', 'label': 'DM', 'classified_type': 'Unary', 'type': 'add'}
(TOP ja das past mir sehr gut also ich freue mich bis august auf wiedersehen herr doll)

Sentence 416:
0 Initial errors
0 on fringe, 0 iterations

Sentence 417:
8 Initial errors
0 on fringe, 6 iterations
2 Error:Single Word Phrase
2 Error:UNSET move
1 Error:UNSET add
1 Error:Unary
1 Error:Clause Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM aha)
		(DM ja)
		(SIMPX schauen wir mal ob wir irgendeinen termin finden)
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(VF dann)
				(LK ware)
				(MF es ja am besten)[01;36m)[00m
			[01;31m(NF[00m
				(SIMPX
					(VF wir)
					(LK nahmen)
					(MF das wochenende))[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(VF vielleicht)
				(LK konnen)
				(MF wir ja noch ein bischen)
				(VC verlangern)[01;36m)[00m
			[01;31m(NF[00m
				(NX
					(ADJX eineinhalb)
					(NN tage))[01;31m)[00m[01;31m)[00m
		[01;36m(DM[00m [01;31m(NX[00m
			(PIS nix)[01;31m)[00m[01;36m)[00m))
Step:Single Word Phrase
{'family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'DM'], 'auto preterminal span': (30, 31), 'span': (30, 31), 'subtrees': ['PIS'], 'parent': 'TURN', 'over_word': True, 'auto preterminals': ('PIS',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('NX', 'DM')}
(TOP
	(TURN
		(DM aha)
		(DM ja)
		(SIMPX schauen wir mal ob wir irgendeinen termin finden)
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(VF dann)
				(LK ware)
				(MF es ja am besten)[01;36m)[00m
			[01;31m(NF[00m
				(SIMPX
					(VF wir)
					(LK nahmen)
					(MF das wochenende))[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(VF vielleicht)
				(LK konnen)
				(MF wir ja noch ein bischen)
				(VC verlangern)[01;36m)[00m
			[01;31m(NF[00m
				(NX
					(ADJX eineinhalb)
					(NN tage))[01;31m)[00m[01;31m)[00m
		(DM nix)))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['NF', 'VF', 'LK', 'MF', 'VC', 'NF'], 'mover info': [('NF', (16, 20))], 'old_family': ['VF', 'LK', 'MF', 'NF'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('ITJ', 'PTKANT', 'VVFIN', 'PPER', 'ADV', 'KOUS', 'PPER', 'PIAT', 'NN', 'VVFIN', 'ADV', 'VAFIN', 'PPER', 'ADV', 'PTKA', 'ADJD', 'PPER', 'VVFIN', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'VVINF', 'CARD', 'NN', 'PIS'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 31), 'movers': ['NF'], 'old_parent': 'SIMPX', 'end right siblings': ['VF', 'LK', 'MF', 'VC', 'NF'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM aha)
		(DM ja)
		(SIMPX schauen wir mal ob wir irgendeinen termin finden)
		(SIMPX dann ware es ja am besten)
		[01;31m(SIMPX[00m
			[01;31m(NF[00m
				(SIMPX
					(VF wir)
					(LK nahmen)
					(MF das wochenende))[01;31m)[00m
			[01;36m(SIMPX[00m
				(VF vielleicht)
				(LK konnen)
				(MF wir ja noch ein bischen)
				(VC verlangern)[01;36m)[00m
			[01;31m(NF[00m
				(NX
					(ADJX eineinhalb)
					(NN tage))[01;31m)[00m[01;31m)[00m
		(DM nix)))
Step:UNSET add
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['NF', 'SIMPX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'VVINF'), 'right siblings': [(NF (NX (ADJX (CARD eineinhalb)) (NN tage)))], 'left siblings': [(NF (SIMPX (VF (NX (PPER wir))) (LK (VXFIN (VVFIN nahmen))) (MF (NX (ART das) (NN wochenende)))))], 'auto preterminal span': (20, 28), 'span': (20, 28), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM aha)
		(DM ja)
		(SIMPX schauen wir mal ob wir irgendeinen termin finden)
		(SIMPX dann ware es ja am besten)
		[01;31m(SIMPX[00m
			[01;31m(NF[00m
				(SIMPX
					(VF wir)
					(LK nahmen)
					(MF das wochenende))[01;31m)[00m
			(SIMPX vielleicht konnen wir ja noch ein bischen verlangern)
			[01;31m(NF[00m
				(NX
					(ADJX eineinhalb)
					(NN tage))[01;31m)[00m[01;31m)[00m
		(DM nix)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['NF', 'SIMPX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'VVINF', 'CARD', 'NN'), 'right siblings': ['SIMPX', 'NF'], 'parent': 'SIMPX', 'auto preterminal span': (16, 30), 'span': (16, 20), 'left siblings': [], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM aha)
		(DM ja)
		(SIMPX schauen wir mal ob wir irgendeinen termin finden)
		(SIMPX dann ware es ja am besten)
		[01;31m(SIMPX[00m
			(SIMPX wir nahmen das wochenende)
			(SIMPX vielleicht konnen wir ja noch ein bischen verlangern)
			[01;31m(NF[00m
				(NX
					(ADJX eineinhalb)
					(NN tage))[01;31m)[00m[01;31m)[00m
		(DM nix)))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX', 'NF'], 'family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PTKANT', 'VVFIN', 'PPER', 'ADV', 'KOUS', 'PPER', 'PIAT', 'NN', 'VVFIN', 'ADV', 'VAFIN', 'PPER', 'ADV', 'PTKA', 'ADJD', 'PPER', 'VVFIN', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'VVINF', 'CARD', 'NN', 'PIS'), 'right siblings': ['DM'], 'parent': 'TURN', 'auto preterminal span': (0, 31), 'span': (16, 30), 'left siblings': ['DM', 'DM', 'SIMPX', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM aha)
		(DM ja)
		(SIMPX schauen wir mal ob wir irgendeinen termin finden)
		(SIMPX dann ware es ja am besten)
		(SIMPX wir nahmen das wochenende)
		(SIMPX vielleicht konnen wir ja noch ein bischen verlangern)
		[01;31m(NF[00m
			(NX
				(ADJX eineinhalb)
				(NN tage))[01;31m)[00m
		(DM nix)))
Step:Unary
{'subtrees': ['NX'], 'family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'NF', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PTKANT', 'VVFIN', 'PPER', 'ADV', 'KOUS', 'PPER', 'PIAT', 'NN', 'VVFIN', 'ADV', 'VAFIN', 'PPER', 'ADV', 'PTKA', 'ADJD', 'PPER', 'VVFIN', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'VVINF', 'CARD', 'NN', 'PIS'), 'right siblings': ['DM'], 'parent': 'TURN', 'auto preterminal span': (0, 31), 'span': (28, 30), 'left siblings': ['DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP aha ja schauen wir mal ob wir irgendeinen termin finden dann ware es ja am besten wir nahmen das wochenende vielleicht konnen wir ja noch ein bischen verlangern eineinhalb tage nix)

Sentence 418:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ah)
		(DM frau schmidt)
		(SIMPX das ist ja wirklich schade)
		(SIMPX
			(VF sie)
			(LK wissen)
			(MF doch)
			[01;31m(NF[00m
				(SIMPX
					(VF mit ihnen)
					(LK fahre)
					(MF ich so gern immer)
					(VC weg))[01;31m)[00m)
		(SIMPX und sie bestehen immer auf diese eineinhalb tage)
		(SIMPX finde ich wirklich schade)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['VF', 'LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'APPR', 'PPER', 'VVFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'PTKVZ'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (8, 19), 'span': (11, 19), 'left siblings': ['VF', 'LK', 'MF'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ah frau schmidt das ist ja wirklich schade sie wissen doch mit ihnen fahre ich so gern immer weg und sie bestehen immer auf diese eineinhalb tage finde ich wirklich schade)

Sentence 419:
3 Initial errors
0 on fringe, 1 iterations
3 Error:NP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM schade)
		(DM frau schmidt)
		(DM ja)
		[01;36m(DM[00m
			[01;36m(NX[00m
				[01;31m(DM[00m
					(ADVX
						(ADV nun))[01;31m)[00m
				(NX ein wochenende)[01;36m)[00m[01;36m)[00m
		(SIMPX wann haben sie denn zeit)))
Step:NP Attachment
{'new_parent': 'DM', 'new_family': ['ADVX', 'NX'], 'mover info': [('NX', (5, 7))], 'old_family': ['DM', 'DM', 'DM', 'DM', 'NX', 'SIMPX'], 'start left siblings': ['DM', 'DM', 'DM', 'DM'], 'auto preterminals': ('ITJ', 'NN', 'NE', 'PTKANT', 'ADV', 'ART', 'NN', 'PWAV', 'VAFIN', 'PPER', 'ADV', 'NN'), 'start right siblings': ['SIMPX'], 'end left siblings': ['ADVX'], 'auto preterminal span': (0, 12), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'TURN', 'added and moved': True, 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'NX'}
(TOP schade frau schmidt ja nun ein wochenende wann haben sie denn zeit)

Sentence 420:
0 Initial errors
0 on fringe, 0 iterations

Sentence 421:
0 Initial errors
0 on fringe, 0 iterations

Sentence 422:
9 Initial errors
0 on fringe, 7 iterations
2 Error:Clause Attachment
2 Error:Clause Attachment
1 Error:Unary
1 Error:PP Attachment
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM gut)
		[01;31m(NX[00m
			[01;36m(DM[00m
				(ADVX
					(ADV also))[01;36m)[00m
			(NX den zug)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF wir)
			(LK brauchen)
			(MF von munchen nach hannover viereinhalb stunden)[01;31m)[00m
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF ich)
			(LK wurde)
			(VC sagen)
			[01;31m(NF[00m
				[01;31m(P[00m
					[01;36m(NF[00m
						(SIMPX
							(VF
								(SIMPX
									(C damit)
									(MF
										(NX wir)
										(ADVX auch)
										[01;36m(NX[00m
											(NX was)
											(PX von der zugfahrt)[01;36m)[00m)
									(VC haben)))
							(LK fahren)
							(MF wir nicht zu fruh)
							(VC los)) [01;33mSIMPX)[00m[01;36m)[00m
					(KOUS weil)
					(SIMPX sonst bin ich unausgeschlafen)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX da haben sie dann von mir nix)
		(SIMPX wurde ich sagen so elf uhr mit dem zug)))
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'VC', 'NF', 'KOUS', 'SIMPX'], 'mover info': [('KOUS', (29, 30)), ('SIMPX', (30, 34))], 'old_family': ['SIMPX', 'KOUS', 'SIMPX'], 'start left siblings': ['SIMPX'], 'auto preterminals': ('PPER', 'VAFIN', 'VVINF', 'KOUS', 'PPER', 'ADV', 'PIS', 'APPR', 'ART', 'NN', 'VAFIN', 'VVFIN', 'PPER', 'PTKNEG', 'PTKA', 'ADJD', 'PTKVZ', 'KOUS', 'ADV', 'VAFIN', 'PPER', 'ADJD'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'VC', 'NF'], 'auto preterminal span': (12, 34), 'movers': ['KOUS', 'SIMPX'], 'old_parent': 'P', 'end right siblings': [], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM gut)
		[01;31m(NX[00m
			[01;36m(DM[00m
				(ADVX
					(ADV also))[01;36m)[00m
			(NX den zug)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF wir)
			(LK brauchen)
			(MF von munchen nach hannover viereinhalb stunden)[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(VF ich)
				(LK wurde)
				(VC sagen)
				(NF
					[01;31m(P[00m
						(SIMPX
							(VF
								(SIMPX
									(C damit)
									(MF
										(NX wir)
										(ADVX auch)
										[01;36m(NX[00m
											(NX was)
											(PX von der zugfahrt)[01;36m)[00m)
									(VC haben)))
							(LK fahren)
							(MF wir nicht zu fruh)
							(VC los))[01;31m)[00m)[01;36m)[00m
			(KOUS weil)
			(SIMPX sonst bin ich unausgeschlafen)[01;31m)[00m
		(SIMPX da haben sie dann von mir nix)
		(SIMPX wurde ich sagen so elf uhr mit dem zug)))
Step:Clause Attachment
{'new_parent': 'TURN', 'new_family': ['DM', 'NX', 'SIMPX', 'SIMPX', 'KOUS', 'SIMPX', 'SIMPX', 'SIMPX'], 'mover info': [('KOUS', (29, 30)), ('SIMPX', (30, 34))], 'old_family': ['VF', 'LK', 'VC', 'NF', 'KOUS', 'SIMPX'], 'start left siblings': ['VF', 'LK', 'VC', 'NF'], 'auto preterminals': ('ITJ', 'ADV', 'ART', 'NN', 'PPER', 'VVFIN', 'APPR', 'NE', 'APPR', 'NE', 'CARD', 'NN', 'PPER', 'VAFIN', 'VVINF', 'KOUS', 'PPER', 'ADV', 'PIS', 'APPR', 'ART', 'NN', 'VAFIN', 'VVFIN', 'PPER', 'PTKNEG', 'PTKA', 'ADJD', 'PTKVZ', 'KOUS', 'ADV', 'VAFIN', 'PPER', 'ADJD', 'ADV', 'VAFIN', 'PPER', 'ADV', 'APPR', 'PPER', 'PIS', 'VAFIN', 'PPER', 'VVINF', 'ADV', 'CARD', 'NN', 'APPR', 'ART', 'NN'), 'start right siblings': [], 'end left siblings': ['DM', 'NX', 'SIMPX', 'SIMPX'], 'auto preterminal span': (0, 50), 'movers': ['KOUS', 'SIMPX'], 'old_parent': 'SIMPX', 'end right siblings': ['SIMPX', 'SIMPX'], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM gut)
		[01;31m(NX[00m
			[01;36m(DM[00m
				(ADVX
					(ADV also))[01;36m)[00m
			(NX den zug)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF wir)
			(LK brauchen)
			(MF von munchen nach hannover viereinhalb stunden)[01;31m)[00m
		(SIMPX
			(VF ich)
			(LK wurde)
			(VC sagen)
			(NF
				[01;31m(P[00m
					(SIMPX
						(VF
							(SIMPX
								(C damit)
								(MF
									(NX wir)
									(ADVX auch)
									[01;36m(NX[00m
										(NX was)
										(PX von der zugfahrt)[01;36m)[00m)
								(VC haben)))
						(LK fahren)
						(MF wir nicht zu fruh)
						(VC los))[01;31m)[00m))
		(KOUS weil)
		(SIMPX sonst bin ich unausgeschlafen)
		(SIMPX da haben sie dann von mir nix)
		(SIMPX wurde ich sagen so elf uhr mit dem zug)))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['DM', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV',), 'right siblings': [(NX (ART den) (NN zug))], 'left siblings': [], 'auto preterminal span': (1, 2), 'span': (1, 2), 'parent': 'NX', 'label': 'DM', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM gut)
		[01;31m(NX[00m
			(DM also)
			(NX den zug)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF wir)
			(LK brauchen)
			(MF von munchen nach hannover viereinhalb stunden)[01;31m)[00m
		(SIMPX
			(VF ich)
			(LK wurde)
			(VC sagen)
			(NF
				[01;31m(P[00m
					(SIMPX
						(VF
							(SIMPX
								(C damit)
								(MF
									(NX wir)
									(ADVX auch)
									[01;36m(NX[00m
										(NX was)
										(PX von der zugfahrt)[01;36m)[00m)
								(VC haben)))
						(LK fahren)
						(MF wir nicht zu fruh)
						(VC los))[01;31m)[00m))
		(KOUS weil)
		(SIMPX sonst bin ich unausgeschlafen)
		(SIMPX da haben sie dann von mir nix)
		(SIMPX wurde ich sagen so elf uhr mit dem zug)))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['NX', 'ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PIS', 'APPR', 'ART', 'NN'), 'right siblings': [], 'left siblings': [(NX (PPER wir)), (ADVX (ADV auch))], 'auto preterminal span': (18, 22), 'span': (18, 22), 'parent': 'MF', 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM gut)
		[01;31m(NX[00m
			(DM also)
			(NX den zug)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF wir)
			(LK brauchen)
			(MF von munchen nach hannover viereinhalb stunden)[01;31m)[00m
		(SIMPX
			(VF ich)
			(LK wurde)
			(VC sagen)
			(NF
				[01;31m(P[00m
					(SIMPX
						(VF damit wir auch was von der zugfahrt haben)
						(LK fahren)
						(MF wir nicht zu fruh)
						(VC los))[01;31m)[00m))
		(KOUS weil)
		(SIMPX sonst bin ich unausgeschlafen)
		(SIMPX da haben sie dann von mir nix)
		(SIMPX wurde ich sagen so elf uhr mit dem zug)))
Step:UNSET remove
{'subtrees': ['DM', 'NX'], 'family': ['DM', 'NX', 'SIMPX', 'SIMPX', 'KOUS', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'ART', 'NN', 'PPER', 'VVFIN', 'APPR', 'NE', 'APPR', 'NE', 'CARD', 'NN', 'PPER', 'VAFIN', 'VVINF', 'KOUS', 'PPER', 'ADV', 'PIS', 'APPR', 'ART', 'NN', 'VAFIN', 'VVFIN', 'PPER', 'PTKNEG', 'PTKA', 'ADJD', 'PTKVZ', 'KOUS', 'ADV', 'VAFIN', 'PPER', 'ADJD', 'ADV', 'VAFIN', 'PPER', 'ADV', 'APPR', 'PPER', 'PIS', 'VAFIN', 'PPER', 'VVINF', 'ADV', 'CARD', 'NN', 'APPR', 'ART', 'NN'), 'right siblings': ['SIMPX', 'SIMPX', 'KOUS', 'SIMPX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 50), 'span': (1, 4), 'left siblings': ['DM'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM gut)
		(DM also)
		(NX den zug)
		[01;31m(SIMPX[00m
			(VF wir)
			(LK brauchen)
			(MF von munchen nach hannover viereinhalb stunden)[01;31m)[00m
		(SIMPX
			(VF ich)
			(LK wurde)
			(VC sagen)
			(NF
				[01;31m(P[00m
					(SIMPX
						(VF damit wir auch was von der zugfahrt haben)
						(LK fahren)
						(MF wir nicht zu fruh)
						(VC los))[01;31m)[00m))
		(KOUS weil)
		(SIMPX sonst bin ich unausgeschlafen)
		(SIMPX da haben sie dann von mir nix)
		(SIMPX wurde ich sagen so elf uhr mit dem zug)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['DM', 'DM', 'NX', 'SIMPX', 'SIMPX', 'KOUS', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'ART', 'NN', 'PPER', 'VVFIN', 'APPR', 'NE', 'APPR', 'NE', 'CARD', 'NN', 'PPER', 'VAFIN', 'VVINF', 'KOUS', 'PPER', 'ADV', 'PIS', 'APPR', 'ART', 'NN', 'VAFIN', 'VVFIN', 'PPER', 'PTKNEG', 'PTKA', 'ADJD', 'PTKVZ', 'KOUS', 'ADV', 'VAFIN', 'PPER', 'ADJD', 'ADV', 'VAFIN', 'PPER', 'ADV', 'APPR', 'PPER', 'PIS', 'VAFIN', 'PPER', 'VVINF', 'ADV', 'CARD', 'NN', 'APPR', 'ART', 'NN'), 'right siblings': ['SIMPX', 'KOUS', 'SIMPX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 50), 'span': (4, 12), 'left siblings': ['DM', 'DM', 'NX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM gut)
		(DM also)
		(NX den zug)
		(VF wir)
		(LK brauchen)
		(MF von munchen nach hannover viereinhalb stunden)
		(SIMPX
			(VF ich)
			(LK wurde)
			(VC sagen)
			(NF
				[01;31m(P[00m
					(SIMPX
						(VF damit wir auch was von der zugfahrt haben)
						(LK fahren)
						(MF wir nicht zu fruh)
						(VC los))[01;31m)[00m))
		(KOUS weil)
		(SIMPX sonst bin ich unausgeschlafen)
		(SIMPX da haben sie dann von mir nix)
		(SIMPX wurde ich sagen so elf uhr mit dem zug)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['P'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'PIS', 'APPR', 'ART', 'NN', 'VAFIN', 'VVFIN', 'PPER', 'PTKNEG', 'PTKA', 'ADJD', 'PTKVZ'), 'right siblings': [], 'parent': 'NF', 'auto preterminal span': (15, 29), 'span': (15, 29), 'left siblings': [], 'label': 'P', 'classified_type': 'Unary', 'type': 'remove'}
(TOP gut also den zug wir brauchen von munchen nach hannover viereinhalb stunden ich wurde sagen damit wir auch was von der zugfahrt haben fahren wir nicht zu fruh los weil sonst bin ich unausgeschlafen da haben sie dann von mir nix wurde ich sagen so elf uhr mit dem zug)

Sentence 423:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX dann schaue ich mal wann ein zug geht)
		(DM ja)
		(SIMPX
			(VF das)
			(LK ware)
			(MF
				(ADVX dann)
				(NX
					(NX
						(ADJX elf)
						[01;36m(NX[00m
							(NN uhr)[01;36m)[00m)
					(KON und)
					(NX funfundzwanzig minuten))))
		(SIMPX past das)))
Step:Single Word Phrase
{'subtrees': ['NN'], 'family': ['ADJX', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('NN',), 'right siblings': [], 'left siblings': [(ADJX (CARD elf))], 'auto preterminal span': (13, 14), 'span': (13, 14), 'parent': 'NX', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP dann schaue ich mal wann ein zug geht ja das ware dann elf uhr und funfundzwanzig minuten past das)

Sentence 424:
2 Initial errors
0 on fringe, 2 iterations
1 Error:UNSET add
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX sie horen sich heute so formlich an frau schmidt)
		(SIMPX
			(LK ist)
			[01;36m(MF[00m
				(MF
					(NX ihnen)
					(NX eine laus)
					(PX
						(APPR uber)
						[01;31m(NX[00m
							(ART die)
							(NN leber)[01;31m)[00m))
				(VC gelaufen)[01;36m)[00m)
		(SIMPX oder wie sehe ich das)))
Step:UNSET add
{'subtrees': ['MF', 'VC'], 'family': ['LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ART', 'NN', 'APPR', 'ART', 'NN', 'VVPP'), 'right siblings': [], 'left siblings': [(LK (VXFIN (VAFIN ist)))], 'auto preterminal span': (10, 17), 'span': (10, 17), 'parent': 'SIMPX', 'label': 'MF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SIMPX sie horen sich heute so formlich an frau schmidt)
		(SIMPX
			(LK ist)
			(MF
				(MF
					(NX ihnen)
					(NX eine laus)
					(PX
						(APPR uber)
						[01;31m(NX[00m
							(ART die)
							(NN leber)[01;31m)[00m))
				(VC gelaufen)))
		(SIMPX oder wie sehe ich das)))
Step:UNSET remove
{'subtrees': ['ART', 'NN'], 'family': ['APPR', 'NX'], 'over_word': False, 'over words': True, 'auto preterminals': ('APPR', 'ART', 'NN'), 'right siblings': [], 'parent': 'PX', 'auto preterminal span': (13, 16), 'span': (14, 16), 'left siblings': ['APPR'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP sie horen sich heute so formlich an frau schmidt ist ihnen eine laus uber die leber gelaufen oder wie sehe ich das)

Sentence 425:
4 Initial errors
0 on fringe, 2 iterations
2 Error:Different label
2 Error:UNSET move
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(VF sie)
				(LK wollen)
				(MF abends noch was)
				(VC unternehmen)[01;36m)[00m
			[01;36m(DM[00m [01;31m(NF[00m
				(NX
					(NN frau)
					(NE schmidt))[01;31m)[00m[01;36m)[00m[01;31m)[00m
		(SIMPX sie springen ja uber ihren schatten)
		(SIMPX das ist mir ja ganz neu)
		(SIMPX bisher haben sie immer abgelehnt)
		(SIMPX sie machen mich noch ganz schwach)))
Step:Different label
{'family': ['VF', 'LK', 'MF', 'VC', 'DM'], 'auto preterminal span': (6, 8), 'span': (6, 8), 'subtrees': ['NX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('NN', 'NE'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('NF', 'DM')}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(VF sie)
				(LK wollen)
				(MF abends noch was)
				(VC unternehmen)[01;36m)[00m
			(DM frau schmidt)[01;31m)[00m
		(SIMPX sie springen ja uber ihren schatten)
		(SIMPX das ist mir ja ganz neu)
		(SIMPX bisher haben sie immer abgelehnt)
		(SIMPX sie machen mich noch ganz schwach)))
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['SIMPX', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'mover info': [('DM', (6, 8))], 'old_family': ['VF', 'LK', 'MF', 'VC', 'DM'], 'start left siblings': ['VF', 'LK', 'MF', 'VC'], 'auto preterminals': ('PPER', 'VMFIN', 'ADV', 'ADV', 'PIS', 'VVINF', 'NN', 'NE', 'PPER', 'VVFIN', 'ADV', 'APPR', 'PPOSAT', 'NN', 'PDS', 'VAFIN', 'PPER', 'ADV', 'ADV', 'ADJD', 'ADV', 'VAFIN', 'PPER', 'ADV', 'VVPP', 'PPER', 'VVFIN', 'PPER', 'ADV', 'ADV', 'ADJD'), 'start right siblings': [], 'end left siblings': ['SIMPX'], 'auto preterminal span': (0, 31), 'movers': ['DM'], 'old_parent': 'SIMPX', 'end right siblings': ['SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP sie wollen abends noch was unternehmen frau schmidt sie springen ja uber ihren schatten das ist mir ja ganz neu bisher haben sie immer abgelehnt sie machen mich noch ganz schwach)

Sentence 426:
12 Initial errors
0 on fringe, 7 iterations
3 Error:UNSET move
2 Error:Different label
2 Error:Single Word Phrase
2 Error:NP Attachment
1 Error:UNSET remove
1 Error:Modifier Attachment
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;36m(SIMPX[00m [01;31m(NX[00m
			(NX was)
			[01;36m(ADVX[00m [01;31m(NX[00m
				(NN schones)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;36m)[00m
		(DM ach)
		(DM frau schmidt)
		(SIMPX ich denke ich kenne da ganz eine schone bar)
		(SIMPX da gehen wir dann hin)
		(SIMPX vor allem gibt es da ganz schone musik)
		(SIMPX die gefallt mir immer sehr gut)
		[01;31m(SIMPX[00m
			(VF letzte mal)
			(LK muste)
			(MF ich immer alleine)
			(VC weggehen)[01;31m)[00m
		(SIMPX da waren sie ja dann nie dabei)
		[01;36m(SIMPX[00m
			(SIMPX
				(KOORD und)
				(VF jetzt)
				(LK kann)
				[01;31m(MF[00m
					(NX ich)
					(NX ihnen)
					(NX das)
					(ADVX gleich)
					(ADVX schon)[01;31m)[00m)
			[01;31m(SIMPX[00m
				(KOORD oder)
				[01;36m(SIMPX[00m
					(LK habe)
					[01;36m(MF[00m
						[01;31m(MF[00m
							(NX ich)
							(NX das)
							(ADVX schon)[01;31m)[00m
						(NX erfahrung)[01;36m)[00m
					(VC gebracht)[01;36m)[00m[01;31m)[00m[01;36m)[00m
		(SIMPX
			(VF ich)
			(LK reserviere)
			(MF
				(ADVX dann)
				(ADVX dort)
				[01;31m(NX[00m
					(NX zwei platze)
					(PX zum essen)[01;31m)[00m))
		(SIMPX past ihnen das so)))
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['NX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'KOORD', 'SIMPX', 'SIMPX', 'SIMPX'], 'mover info': [('KOORD', (55, 56))], 'old_family': ['KOORD', 'LK', 'MF', 'NX', 'VC'], 'start left siblings': [], 'auto preterminals': ('PIS', 'NN', 'ITJ', 'NN', 'NE', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'ART', 'ADJA', 'NN', 'ADV', 'VVFIN', 'PPER', 'ADV', 'PTKVZ', 'APPR', 'PIS', 'VVFIN', 'PPER', 'ADV', 'ADV', 'ADJA', 'NN', 'PDS', 'VVFIN', 'PPER', 'ADV', 'ADV', 'ADJD', 'ADJA', 'NN', 'VMFIN', 'PPER', 'ADV', 'ADV', 'VVINF', 'ADV', 'VAFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'PROP', 'KON', 'ADV', 'VMFIN', 'PPER', 'PPER', 'PDS', 'ADV', 'ADV', 'KON', 'VAFIN', 'PPER', 'PDS', 'ADV', 'NN', 'VVPP', 'PPER', 'VVFIN', 'ADV', 'ADV', 'CARD', 'NN', 'APPRART', 'NN', 'VVFIN', 'PPER', 'PDS', 'ADV'), 'start right siblings': ['LK', 'MF', 'NX', 'VC'], 'end left siblings': ['NX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'auto preterminal span': (0, 74), 'adding node already present': False, 'movers': ['KOORD'], 'old_parent': 'SIMPX', 'POS confusion': ('KON', 'KON'), 'added and moved': True, 'end right siblings': ['SIMPX', 'SIMPX', 'SIMPX'], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'MF'}
(TOP
	(TURN
		[01;36m(SIMPX[00m [01;31m(NX[00m
			(NX was)
			[01;36m(ADVX[00m [01;31m(NX[00m
				(NN schones)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;36m)[00m
		(DM ach)
		(DM frau schmidt)
		(SIMPX ich denke ich kenne da ganz eine schone bar)
		(SIMPX da gehen wir dann hin)
		(SIMPX vor allem gibt es da ganz schone musik)
		(SIMPX die gefallt mir immer sehr gut)
		[01;31m(SIMPX[00m
			(VF letzte mal)
			(LK muste)
			(MF ich immer alleine)
			(VC weggehen)[01;31m)[00m
		(SIMPX da waren sie ja dann nie dabei)
		(SIMPX
			(SIMPX
				(KOORD und)
				(VF jetzt)
				(LK kann)
				[01;31m(MF[00m
					(NX ich)
					(NX ihnen)
					(NX das)
					(ADVX gleich)
					(ADVX schon)[01;31m)[00m)
			(KOORD oder)
			(SIMPX
				(LK habe)
				[01;36m(MF[00m
					[01;31m(MF[00m
						(NX ich)
						(NX das)
						(ADVX schon)[01;31m)[00m
					(NX erfahrung)[01;36m)[00m
				(VC gebracht)))
		(SIMPX
			(VF ich)
			(LK reserviere)
			(MF
				(ADVX dann)
				(ADVX dort)
				[01;31m(NX[00m
					(NX zwei platze)
					(PX zum essen)[01;31m)[00m))
		(SIMPX past ihnen das so)))
Step:Different label
{'family': ['SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'auto preterminal span': (0, 2), 'span': (0, 2), 'subtrees': ['NX', 'NX'], 'parent': 'TURN', 'over_word': False, 'auto preterminals': ('PIS', 'NN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('NX', 'SIMPX')}
(TOP
	(TURN
		(SIMPX
			(NX was)
			[01;36m(ADVX[00m [01;31m(NX[00m
				(NN schones)[01;31m)[00m[01;36m)[00m)
		(DM ach)
		(DM frau schmidt)
		(SIMPX ich denke ich kenne da ganz eine schone bar)
		(SIMPX da gehen wir dann hin)
		(SIMPX vor allem gibt es da ganz schone musik)
		(SIMPX die gefallt mir immer sehr gut)
		[01;31m(SIMPX[00m
			(VF letzte mal)
			(LK muste)
			(MF ich immer alleine)
			(VC weggehen)[01;31m)[00m
		(SIMPX da waren sie ja dann nie dabei)
		(SIMPX
			(SIMPX
				(KOORD und)
				(VF jetzt)
				(LK kann)
				[01;31m(MF[00m
					(NX ich)
					(NX ihnen)
					(NX das)
					(ADVX gleich)
					(ADVX schon)[01;31m)[00m)
			(KOORD oder)
			(SIMPX
				(LK habe)
				[01;36m(MF[00m
					[01;31m(MF[00m
						(NX ich)
						(NX das)
						(ADVX schon)[01;31m)[00m
					(NX erfahrung)[01;36m)[00m
				(VC gebracht)))
		(SIMPX
			(VF ich)
			(LK reserviere)
			(MF
				(ADVX dann)
				(ADVX dort)
				[01;31m(NX[00m
					(NX zwei platze)
					(PX zum essen)[01;31m)[00m))
		(SIMPX past ihnen das so)))
Step:Single Word Phrase
{'family': ['NX', 'ADVX'], 'auto preterminal span': (1, 2), 'span': (1, 2), 'subtrees': ['NN'], 'parent': 'SIMPX', 'over_word': True, 'auto preterminals': ('NN',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('NX', 'ADVX')}
(TOP
	(TURN
		(SIMPX was schones)
		(DM ach)
		(DM frau schmidt)
		(SIMPX ich denke ich kenne da ganz eine schone bar)
		(SIMPX da gehen wir dann hin)
		(SIMPX vor allem gibt es da ganz schone musik)
		(SIMPX die gefallt mir immer sehr gut)
		[01;31m(SIMPX[00m
			(VF letzte mal)
			(LK muste)
			(MF ich immer alleine)
			(VC weggehen)[01;31m)[00m
		(SIMPX da waren sie ja dann nie dabei)
		(SIMPX
			(SIMPX
				(KOORD und)
				(VF jetzt)
				(LK kann)
				[01;31m(MF[00m
					(NX ich)
					(NX ihnen)
					(NX das)
					(ADVX gleich)
					(ADVX schon)[01;31m)[00m)
			(KOORD oder)
			(SIMPX
				(LK habe)
				[01;36m(MF[00m
					[01;31m(MF[00m
						(NX ich)
						(NX das)
						(ADVX schon)[01;31m)[00m
					(NX erfahrung)[01;36m)[00m
				(VC gebracht)))
		(SIMPX
			(VF ich)
			(LK reserviere)
			(MF
				(ADVX dann)
				(ADVX dort)
				[01;31m(NX[00m
					(NX zwei platze)
					(PX zum essen)[01;31m)[00m))
		(SIMPX past ihnen das so)))
Step:NP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'NX', 'ADVX', 'NX'], 'mover info': [('NX', (60, 61))], 'old_family': ['LK', 'MF', 'NX', 'VC'], 'start left siblings': ['LK', 'MF'], 'auto preterminals': ('VAFIN', 'PPER', 'PDS', 'ADV', 'NN', 'VVPP'), 'start right siblings': ['VC'], 'end left siblings': ['NX', 'NX', 'ADVX'], 'auto preterminal span': (56, 62), 'movers': ['NX'], 'old_parent': 'SIMPX', 'POS confusion': ('NN', 'NN'), 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SIMPX was schones)
		(DM ach)
		(DM frau schmidt)
		(SIMPX ich denke ich kenne da ganz eine schone bar)
		(SIMPX da gehen wir dann hin)
		(SIMPX vor allem gibt es da ganz schone musik)
		(SIMPX die gefallt mir immer sehr gut)
		[01;31m(SIMPX[00m
			(VF letzte mal)
			(LK muste)
			(MF ich immer alleine)
			(VC weggehen)[01;31m)[00m
		(SIMPX da waren sie ja dann nie dabei)
		(SIMPX
			(SIMPX
				(KOORD und)
				(VF jetzt)
				(LK kann)
				[01;31m(MF[00m
					(NX ich)
					(NX ihnen)
					(NX das)
					(ADVX gleich)
					(ADVX schon)[01;31m)[00m)
			(KOORD oder)
			(SIMPX habe ich das schon erfahrung gebracht))
		(SIMPX
			(VF ich)
			(LK reserviere)
			(MF
				(ADVX dann)
				(ADVX dort)
				[01;31m(NX[00m
					(NX zwei platze)
					(PX zum essen)[01;31m)[00m))
		(SIMPX past ihnen das so)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PIS', 'NN', 'ITJ', 'NN', 'NE', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'ART', 'ADJA', 'NN', 'ADV', 'VVFIN', 'PPER', 'ADV', 'PTKVZ', 'APPR', 'PIS', 'VVFIN', 'PPER', 'ADV', 'ADV', 'ADJA', 'NN', 'PDS', 'VVFIN', 'PPER', 'ADV', 'ADV', 'ADJD', 'ADJA', 'NN', 'VMFIN', 'PPER', 'ADV', 'ADV', 'VVINF', 'ADV', 'VAFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'PROP', 'KON', 'ADV', 'VMFIN', 'PPER', 'PPER', 'PDS', 'ADV', 'ADV', 'KON', 'VAFIN', 'PPER', 'PDS', 'ADV', 'NN', 'VVPP', 'PPER', 'VVFIN', 'ADV', 'ADV', 'CARD', 'NN', 'APPRART', 'NN', 'VVFIN', 'PPER', 'PDS', 'ADV'), 'right siblings': ['SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 74), 'span': (33, 40), 'left siblings': ['SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX was schones)
		(DM ach)
		(DM frau schmidt)
		(SIMPX ich denke ich kenne da ganz eine schone bar)
		(SIMPX da gehen wir dann hin)
		(SIMPX vor allem gibt es da ganz schone musik)
		(SIMPX die gefallt mir immer sehr gut)
		(VF letzte mal)
		(LK muste)
		(MF ich immer alleine)
		(VC weggehen)
		(SIMPX da waren sie ja dann nie dabei)
		(SIMPX
			(SIMPX
				(KOORD und)
				(VF jetzt)
				(LK kann)
				[01;31m(MF[00m
					(NX ich)
					(NX ihnen)
					(NX das)
					(ADVX gleich)
					(ADVX schon)[01;31m)[00m)
			(KOORD oder)
			(SIMPX habe ich das schon erfahrung gebracht))
		(SIMPX
			(VF ich)
			(LK reserviere)
			(MF
				(ADVX dann)
				(ADVX dort)
				[01;31m(NX[00m
					(NX zwei platze)
					(PX zum essen)[01;31m)[00m))
		(SIMPX past ihnen das so)))
Step:Modifier Attachment
{'subtrees': ['NX', 'NX', 'NX', 'ADVX', 'ADVX'], 'family': ['KOORD', 'VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'ADV', 'VMFIN', 'PPER', 'PPER', 'PDS', 'ADV', 'ADV'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (47, 55), 'span': (50, 55), 'left siblings': ['KOORD', 'VF', 'LK'], 'label': 'MF', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX was schones)
		(DM ach)
		(DM frau schmidt)
		(SIMPX ich denke ich kenne da ganz eine schone bar)
		(SIMPX da gehen wir dann hin)
		(SIMPX vor allem gibt es da ganz schone musik)
		(SIMPX die gefallt mir immer sehr gut)
		(VF letzte mal)
		(LK muste)
		(MF ich immer alleine)
		(VC weggehen)
		(SIMPX da waren sie ja dann nie dabei)
		(SIMPX und jetzt kann ich ihnen das gleich schon oder habe ich das schon erfahrung gebracht)
		(SIMPX
			(VF ich)
			(LK reserviere)
			(MF
				(ADVX dann)
				(ADVX dort)
				[01;31m(NX[00m
					(NX zwei platze)
					(PX zum essen)[01;31m)[00m))
		(SIMPX past ihnen das so)))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['ADVX', 'ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'CARD', 'NN', 'APPRART', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (64, 70), 'span': (66, 70), 'left siblings': ['ADVX', 'ADVX'], 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP was schones ach frau schmidt ich denke ich kenne da ganz eine schone bar da gehen wir dann hin vor allem gibt es da ganz schone musik die gefallt mir immer sehr gut letzte mal muste ich immer alleine weggehen da waren sie ja dann nie dabei und jetzt kann ich ihnen das gleich schon oder habe ich das schon erfahrung gebracht ich reserviere dann dort zwei platze zum essen past ihnen das so)

Sentence 427:
0 Initial errors
0 on fringe, 0 iterations

Sentence 428:
0 Initial errors
0 on fringe, 0 iterations

Sentence 429:
0 Initial errors
0 on fringe, 0 iterations

Sentence 430:
6 Initial errors
0 on fringe, 2 iterations
4 Error:UNSET move
2 Error:Different label
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM ja)
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(VF das)
				(LK war)
				(MF sehr nett)[01;36m)[00m
			[01;36m(VF[00m [01;31m(NF[00m [01;33m(SIMPX[00m
				(NX
					(ADJX letztes)
					(NN mal))[01;31m)[00m[01;36m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK mochte)
			(MF ich ganz gerne wieder)
			(VC hingehen)[01;31m)[00m [01;33mSIMPX)[00m
		(SIMPX nehmen wir wieder zwei einzelzimmer)))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['NF', 'LK', 'MF', 'VC'], 'mover info': [('NF', (6, 8))], 'old_family': ['VF', 'LK', 'MF', 'NF'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('PTKANT', 'PTKANT', 'PDS', 'VAFIN', 'ADV', 'ADJD', 'ADJA', 'NN', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'VVINF', 'VVFIN', 'PPER', 'ADV', 'CARD', 'NN'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 19), 'movers': ['NF'], 'old_parent': 'SIMPX', 'end right siblings': ['LK', 'MF', 'VC'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(DM ja)
		(SIMPX das war sehr nett)
		(SIMPX
			[01;36m(VF[00m [01;31m(NF[00m
				(NX
					(ADJX letztes)
					(NN mal))[01;31m)[00m[01;36m)[00m
			(LK mochte)
			(MF ich ganz gerne wieder)
			(VC hingehen))
		(SIMPX nehmen wir wieder zwei einzelzimmer)))
Step:Different label
{'family': ['VF', 'LK', 'MF', 'VC'], 'auto preterminal span': (6, 8), 'span': (6, 8), 'subtrees': ['NX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('ADJA', 'NN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('NF', 'VF')}
(TOP ja ja das war sehr nett letztes mal mochte ich ganz gerne wieder hingehen nehmen wir wieder zwei einzelzimmer)

Sentence 431:
5 Initial errors
0 on fringe, 4 iterations
2 Error:Different label
1 Error:UNSET remove
1 Error:Single Word Phrase
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			[01;36m(ADVX[00m [01;31m(MF[00m
				[01;31m(PX[00m
					(APPR seit)
					[01;31m(NX[00m
						[01;31m(ADJX[00m
							(ADJA langerer)[01;31m)[00m
						(NN zeit)[01;31m)[00m[01;31m)[00m
				(ADVX nicht mehr)[01;31m)[00m[01;36m)[00m
			(VC gesehen))
		(ADVX jetzt)
		(SIMPX ich wollte sie treffen um mit ihnen die geschaftsreise nach hannover zu planen)))
Step:Different label
{'family': ['ADVX', 'VC'], 'auto preterminal span': (1, 6), 'span': (1, 6), 'subtrees': ['PX', 'ADVX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('APPR', 'ADJA', 'NN', 'PTKNEG', 'ADV'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('MF', 'ADVX')}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(ADVX
				[01;31m(PX[00m
					(APPR seit)
					[01;31m(NX[00m
						[01;31m(ADJX[00m
							(ADJA langerer)[01;31m)[00m
						(NN zeit)[01;31m)[00m[01;31m)[00m
				(ADVX nicht mehr))
			(VC gesehen))
		(ADVX jetzt)
		(SIMPX ich wollte sie treffen um mit ihnen die geschaftsreise nach hannover zu planen)))
Step:UNSET remove
{'subtrees': ['APPR', 'NX'], 'family': ['PX', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ADJA', 'NN', 'PTKNEG', 'ADV'), 'right siblings': ['ADVX'], 'parent': 'ADVX', 'auto preterminal span': (1, 6), 'span': (1, 4), 'left siblings': [], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(ADVX
				(APPR seit)
				[01;31m(NX[00m
					[01;31m(ADJX[00m
						(ADJA langerer)[01;31m)[00m
					(NN zeit)[01;31m)[00m
				(ADVX nicht mehr))
			(VC gesehen))
		(ADVX jetzt)
		(SIMPX ich wollte sie treffen um mit ihnen die geschaftsreise nach hannover zu planen)))
Step:Single Word Phrase
{'subtrees': ['ADJA'], 'family': ['ADJX', 'NN'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADJA', 'NN'), 'right siblings': ['NN'], 'parent': 'NX', 'auto preterminal span': (2, 4), 'span': (2, 3), 'left siblings': [], 'label': 'ADJX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(ADVX
				(APPR seit)
				[01;31m(NX[00m
					(ADJA langerer)
					(NN zeit)[01;31m)[00m
				(ADVX nicht mehr))
			(VC gesehen))
		(ADVX jetzt)
		(SIMPX ich wollte sie treffen um mit ihnen die geschaftsreise nach hannover zu planen)))
Step:UNSET remove
{'subtrees': ['ADJA', 'NN'], 'family': ['APPR', 'NX', 'ADVX'], 'over_word': False, 'over words': True, 'auto preterminals': ('APPR', 'ADJA', 'NN', 'PTKNEG', 'ADV'), 'right siblings': ['ADVX'], 'parent': 'ADVX', 'auto preterminal span': (1, 6), 'span': (2, 4), 'left siblings': ['APPR'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ja seit langerer zeit nicht mehr gesehen jetzt ich wollte sie treffen um mit ihnen die geschaftsreise nach hannover zu planen)

Sentence 432:
0 Initial errors
0 on fringe, 0 iterations

Sentence 433:
1 Initial errors
0 on fringe, 1 iterations
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		[01;31m(SIMPX[00m
			(MF irgendwie was)
			(VC essen)[01;31m)[00m
		(ADVX oder so)))
Step:UNSET remove
{'subtrees': ['MF', 'VC'], 'family': ['DM', 'SIMPX', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADV', 'PIS', 'VVINF', 'KON', 'ADV'), 'right siblings': ['ADVX'], 'parent': 'TURN', 'auto preterminal span': (0, 6), 'span': (1, 4), 'left siblings': ['DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ja irgendwie was essen oder so)

Sentence 434:
0 Initial errors
0 on fringe, 0 iterations

Sentence 435:
0 Initial errors
0 on fringe, 0 iterations

Sentence 436:
5 Initial errors
0 on fringe, 5 iterations
1 Error:Unary
1 Error:Unary
1 Error:UNSET remove
1 Error:PP Attachment
1 Error:NP Internal Structure
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM okay)
		(NX januar)
		[01;31m(SIMPX[00m
			[01;31m(LV[00m
				(SIMPX
					(C wenn)
					(MF ich in meinen terminkalender)
					(VC schaue))[01;31m)[00m
			(VF da)
			(LK habe)
			(MF
				(NX ich)
				(ADVX absurderweise)
				[01;36m(MF[00m
					(NX
						(NX freitag)
						(KON und)
						(NX samstag))[01;36m)[00m)[01;31m)[00m
		(SIMPX
			(KOORD aber)
			(VF ich)
			(LK denke)
			(NF
				(SIMPX
					(VF unsre geschaftspartner)
					(LK haben)
					(MF [01;33m(NX[00m
						(NX samstag)
						[01;31m(NX[00m
							(NX kein interesse) [01;33mNX)[00m
							(PX an unserm besuch)[01;31m)[00m))))
		(SIMPX dann ware hatte ich die erste moglichkeit wieder zwolfter dreizehnter januar)))
Step:Unary
{'subtrees': ['NX'], 'family': ['NX', 'ADVX', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'KON', 'NN'), 'right siblings': [], 'left siblings': [(NX (PPER ich)), (ADVX (ADV absurderweise))], 'auto preterminal span': (12, 15), 'span': (12, 15), 'parent': 'MF', 'label': 'MF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM okay)
		(NX januar)
		[01;31m(SIMPX[00m
			[01;31m(LV[00m
				(SIMPX
					(C wenn)
					(MF ich in meinen terminkalender)
					(VC schaue))[01;31m)[00m
			(VF da)
			(LK habe)
			(MF ich absurderweise freitag und samstag)[01;31m)[00m
		(SIMPX
			(KOORD aber)
			(VF ich)
			(LK denke)
			(NF
				(SIMPX
					(VF unsre geschaftspartner)
					(LK haben)
					(MF [01;33m(NX[00m
						(NX samstag)
						[01;31m(NX[00m
							(NX kein interesse) [01;33mNX)[00m
							(PX an unserm besuch)[01;31m)[00m))))
		(SIMPX dann ware hatte ich die erste moglichkeit wieder zwolfter dreizehnter januar)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['LV', 'VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'APPR', 'PPOSAT', 'NN', 'VVFIN', 'ADV', 'VAFIN', 'PPER', 'ADV', 'NN', 'KON', 'NN'), 'right siblings': ['VF', 'LK', 'MF'], 'parent': 'SIMPX', 'auto preterminal span': (2, 15), 'span': (2, 8), 'left siblings': [], 'label': 'LV', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(NX januar)
		[01;31m(SIMPX[00m
			(SIMPX wenn ich in meinen terminkalender schaue)
			(VF da)
			(LK habe)
			(MF ich absurderweise freitag und samstag)[01;31m)[00m
		(SIMPX
			(KOORD aber)
			(VF ich)
			(LK denke)
			(NF
				(SIMPX
					(VF unsre geschaftspartner)
					(LK haben)
					(MF [01;33m(NX[00m
						(NX samstag)
						[01;31m(NX[00m
							(NX kein interesse) [01;33mNX)[00m
							(PX an unserm besuch)[01;31m)[00m))))
		(SIMPX dann ware hatte ich die erste moglichkeit wieder zwolfter dreizehnter januar)))
Step:UNSET remove
{'subtrees': ['SIMPX', 'VF', 'LK', 'MF'], 'family': ['DM', 'NX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'NN', 'KOUS', 'PPER', 'APPR', 'PPOSAT', 'NN', 'VVFIN', 'ADV', 'VAFIN', 'PPER', 'ADV', 'NN', 'KON', 'NN', 'KON', 'PPER', 'VVFIN', 'PPOSAT', 'NN', 'VAFIN', 'NN', 'PIAT', 'NN', 'APPR', 'PPOSAT', 'NN', 'ADV', 'VAFIN', 'VAFIN', 'PPER', 'ART', 'ADJA', 'NN', 'ADV', 'ADJA', 'ADJA', 'NN'), 'right siblings': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 38), 'span': (2, 15), 'left siblings': ['DM', 'NX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(NX januar)
		(SIMPX wenn ich in meinen terminkalender schaue)
		(VF da)
		(LK habe)
		(MF ich absurderweise freitag und samstag)
		(SIMPX
			(KOORD aber)
			(VF ich)
			(LK denke)
			(NF
				(SIMPX
					(VF unsre geschaftspartner)
					(LK haben)
					(MF [01;33m(NX[00m
						(NX samstag)
						[01;31m(NX[00m
							(NX kein interesse) [01;33mNX)[00m
							(PX an unserm besuch)[01;31m)[00m))))
		(SIMPX dann ware hatte ich die erste moglichkeit wieder zwolfter dreizehnter januar)))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'PIAT', 'NN', 'APPR', 'PPOSAT', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (21, 27), 'span': (22, 27), 'left siblings': ['NX'], 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(NX januar)
		(SIMPX wenn ich in meinen terminkalender schaue)
		(VF da)
		(LK habe)
		(MF ich absurderweise freitag und samstag)
		(SIMPX
			(KOORD aber)
			(VF ich)
			(LK denke)
			(NF
				(SIMPX
					(VF unsre geschaftspartner)
					(LK haben)
					(MF
						[01;36m(NX[00m
							(NX samstag)
							(NX kein interesse)[01;36m)[00m
						(PX an unserm besuch)))))
		(SIMPX dann ware hatte ich die erste moglichkeit wieder zwolfter dreizehnter januar)))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'PIAT', 'NN'), 'right siblings': [(PX (APPR an) (NX (PPOSAT unserm) (NN besuch)))], 'left siblings': [], 'auto preterminal span': (21, 24), 'span': (21, 24), 'parent': 'MF', 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'add'}
(TOP okay januar wenn ich in meinen terminkalender schaue da habe ich absurderweise freitag und samstag aber ich denke unsre geschaftspartner haben samstag kein interesse an unserm besuch dann ware hatte ich die erste moglichkeit wieder zwolfter dreizehnter januar)

Sentence 437:
0 Initial errors
0 on fringe, 0 iterations

Sentence 438:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM aha)
		(DM okay)
		(ADVX dann)
		(DM ja)
		(DM nee)
		(SIMPX
			(VF dann)
			(LK nehmen)
			(MF
				(NX wir)
				(ADVX doch)
				(NX
					(NX
						(NX siebenundzwanzigsten)
						(KON und)
						[01;31m(NX[00m
							(NN achtundzwanzigsten)[01;31m)[00m)
					(NX dienstag mittwoch))))))
Step:Single Word Phrase
{'subtrees': ['NN'], 'family': ['NX', 'KON', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('NN', 'KON', 'NN'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (9, 12), 'span': (11, 12), 'left siblings': ['NX', 'KON'], 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP aha okay dann ja nee dann nehmen wir doch siebenundzwanzigsten und achtundzwanzigsten dienstag mittwoch)

Sentence 439:
10 Initial errors
0 on fringe, 7 iterations
2 Error:Clause Attachment
2 Error:Modifier Attachment
2 Error:Modifier Attachment
1 Error:UNSET add
1 Error:Unary
1 Error:UNSET add
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP [01;33m(SIMPX[00m
	(TURN
		(SIMPX
			(LK konnen)
			[01;31m(MF[00m
				[01;36m(MF[00m
					(NX
						(PPER wir)) [01;33mSIMPX)[00m[01;36m)[00m
				[01;36m(DM[00m
					(ADVX
						(ADV also))[01;36m)[00m[01;31m)[00m)
		(SIMPX konnen wir probieren)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(C wenn)
				[01;31m(MF[00m
					[01;36m(MF[00m
						(NX ich)
						(NX die verbindung) [01;33mSIMPX)[00m[01;36m)[00m
					[01;36m(DM[00m
						(ADVX
							(ADV also))[01;36m)[00m[01;31m)[00m[01;31m)[00m
			(SIMPX wir konnen zug oder flugzeug nehmen)[01;36m)[00m
		(NX was)
		(SIMPX was ist dir lieber)))
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['C', 'MF', 'SIMPX'], 'mover info': [('SIMPX', (11, 17))], 'old_family': ['SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX'], 'start left siblings': ['SIMPX', 'SIMPX', 'SIMPX'], 'auto preterminals': ('VMFIN', 'PPER', 'ADV', 'VMFIN', 'PPER', 'VVINF', 'KOUS', 'PPER', 'ART', 'NN', 'ADV', 'PPER', 'VMFIN', 'NN', 'KON', 'NN', 'VVINF', 'PWS', 'PWS', 'VAFIN', 'PPER', 'ADJD'), 'start right siblings': ['NX', 'SIMPX'], 'end left siblings': ['C', 'MF'], 'auto preterminal span': (0, 22), 'movers': ['SIMPX'], 'old_parent': 'TURN', 'end right siblings': [], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP [01;33m(SIMPX[00m
	(TURN
		(SIMPX
			(LK konnen)
			[01;31m(MF[00m
				[01;36m(MF[00m
					(NX
						(PPER wir)) [01;33mSIMPX)[00m[01;36m)[00m
				[01;36m(DM[00m
					(ADVX
						(ADV also))[01;36m)[00m[01;31m)[00m)
		(SIMPX konnen wir probieren)
		(SIMPX [01;33m(SIMPX[00m
			(C wenn)
			[01;31m(MF[00m
				[01;36m(MF[00m
					(NX ich)
					(NX die verbindung) [01;33mSIMPX)[00m[01;36m)[00m
				[01;36m(DM[00m
					(ADVX
						(ADV also))[01;36m)[00m[01;31m)[00m
			(SIMPX wir konnen zug oder flugzeug nehmen))
		(NX was)
		(SIMPX was ist dir lieber)))
Step:Modifier Attachment
{'new_parent': 'SIMPX', 'new_family': ['LK', 'MF', 'ADVX'], 'mover info': [('ADVX', (2, 3))], 'old_family': ['NX', 'ADVX'], 'start left siblings': ['NX'], 'auto preterminals': ('VMFIN', 'PPER', 'ADV'), 'start right siblings': [], 'end left siblings': ['LK', 'MF'], 'auto preterminal span': (0, 3), 'movers': ['ADVX'], 'old_parent': 'MF', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SIMPX
			[01;36m(SIMPX[00m
				(LK konnen)
				(MF wir)[01;36m)[00m
			[01;36m(DM[00m
				(ADVX
					(ADV also))[01;36m)[00m)
		(SIMPX konnen wir probieren)
		(SIMPX [01;33m(SIMPX[00m
			(C wenn)
			[01;31m(MF[00m
				[01;36m(MF[00m
					(NX ich)
					(NX die verbindung) [01;33mSIMPX)[00m[01;36m)[00m
				[01;36m(DM[00m
					(ADVX
						(ADV also))[01;36m)[00m[01;31m)[00m
			(SIMPX wir konnen zug oder flugzeug nehmen))
		(NX was)
		(SIMPX was ist dir lieber)))
Step:Modifier Attachment
{'new_parent': 'SIMPX', 'new_family': ['C', 'MF', 'ADVX', 'SIMPX'], 'mover info': [('ADVX', (10, 11))], 'old_family': ['NX', 'NX', 'ADVX'], 'start left siblings': ['NX', 'NX'], 'auto preterminals': ('KOUS', 'PPER', 'ART', 'NN', 'ADV', 'PPER', 'VMFIN', 'NN', 'KON', 'NN', 'VVINF'), 'start right siblings': [], 'end left siblings': ['C', 'MF'], 'auto preterminal span': (6, 17), 'movers': ['ADVX'], 'old_parent': 'MF', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['SIMPX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SIMPX
			[01;36m(SIMPX[00m
				(LK konnen)
				(MF wir)[01;36m)[00m
			[01;36m(DM[00m
				(ADVX
					(ADV also))[01;36m)[00m)
		(SIMPX konnen wir probieren)
		(SIMPX
			[01;36m(SIMPX[00m
				(C wenn)
				(MF ich die verbindung)[01;36m)[00m
			[01;36m(DM[00m
				(ADVX
					(ADV also))[01;36m)[00m
			(SIMPX wir konnen zug oder flugzeug nehmen))
		(NX was)
		(SIMPX was ist dir lieber)))
Step:UNSET add
{'subtrees': ['LK', 'MF'], 'family': ['SIMPX', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VMFIN', 'PPER'), 'right siblings': [(ADVX (ADV also))], 'left siblings': [], 'auto preterminal span': (0, 2), 'span': (0, 2), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SIMPX
			(SIMPX konnen wir)
			[01;36m(DM[00m
				(ADVX
					(ADV also))[01;36m)[00m)
		(SIMPX konnen wir probieren)
		(SIMPX
			[01;36m(SIMPX[00m
				(C wenn)
				(MF ich die verbindung)[01;36m)[00m
			[01;36m(DM[00m
				(ADVX
					(ADV also))[01;36m)[00m
			(SIMPX wir konnen zug oder flugzeug nehmen))
		(NX was)
		(SIMPX was ist dir lieber)))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['SIMPX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV',), 'right siblings': [], 'left siblings': [(SIMPX (LK (VXFIN (VMFIN konnen))) (MF (NX (PPER wir))))], 'auto preterminal span': (2, 3), 'span': (2, 3), 'parent': 'SIMPX', 'label': 'DM', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SIMPX konnen wir also)
		(SIMPX konnen wir probieren)
		(SIMPX
			[01;36m(SIMPX[00m
				(C wenn)
				(MF ich die verbindung)[01;36m)[00m
			[01;36m(DM[00m
				(ADVX
					(ADV also))[01;36m)[00m
			(SIMPX wir konnen zug oder flugzeug nehmen))
		(NX was)
		(SIMPX was ist dir lieber)))
Step:UNSET add
{'subtrees': ['C', 'MF'], 'family': ['SIMPX', 'ADVX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ART', 'NN'), 'right siblings': [(ADVX (ADV also)), (SIMPX (VF (NX (PPER wir))) (LK (VXFIN (VMFIN konnen))) (MF (NX (NX (NN zug)) (KON oder) (NX (NN flugzeug)))) (VC (VXINF (VVINF nehmen))))], 'left siblings': [], 'auto preterminal span': (6, 10), 'span': (6, 10), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SIMPX konnen wir also)
		(SIMPX konnen wir probieren)
		(SIMPX
			(SIMPX wenn ich die verbindung)
			[01;36m(DM[00m
				(ADVX
					(ADV also))[01;36m)[00m
			(SIMPX wir konnen zug oder flugzeug nehmen))
		(NX was)
		(SIMPX was ist dir lieber)))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['SIMPX', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV',), 'right siblings': [(SIMPX (VF (NX (PPER wir))) (LK (VXFIN (VMFIN konnen))) (MF (NX (NX (NN zug)) (KON oder) (NX (NN flugzeug)))) (VC (VXINF (VVINF nehmen))))], 'left siblings': [(SIMPX (C (KOUS wenn)) (MF (NX (PPER ich)) (NX (ART die) (NN verbindung))))], 'auto preterminal span': (10, 11), 'span': (10, 11), 'parent': 'SIMPX', 'label': 'DM', 'classified_type': 'Unary', 'type': 'add'}
(TOP konnen wir also konnen wir probieren wenn ich die verbindung also wir konnen zug oder flugzeug nehmen was was ist dir lieber)

Sentence 440:
11 Initial errors
0 on fringe, 5 iterations
5 Error:Modifier Attachment
2 Error:Modifier Attachment
2 Error:NP Attachment
1 Error:Co-ordination
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX der muste ja)
		(SIMPX der muste eigentlich reichen)
		(DM also)
		(SIMPX munchen hannover das sind knapp funf stunden)
		(DM ja)
		[01;36m(ADVX[00m
			[01;36m(DM[00m
				(DM also)
				(DM also)[01;36m)[00m[01;36m)[00m
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				[01;31m(NX[00m
					[01;31m(ADJX[00m
						(ADJX vier)
						[01;33m(SIMPX (VF (NX[00m (ADJX viereinhalb)[01;31m)[00m
					(NN stunden)[01;31m)[00m[01;31m)[00m [01;33mNX) VF)[00m
			(LK sehe)
			(MF ich)[01;31m)[00m [01;33mSIMPX)[00m
		(NX
			[01;31m(NX[00m
				(NX viereinhalb stunden)
				[01;33m(NX[00m (NX fahrzeit)[01;31m)[00m
			(PX nach hannover)))) [01;33mNX)[00m
Step:Modifier Attachment
{'new_parent': 'SIMPX', 'new_family': ['ADJX', 'VF', 'LK', 'MF'], 'mover info': [('ADJX', (18, 19))], 'old_family': ['ADJX', 'ADJX'], 'start left siblings': [], 'auto preterminals': ('CARD', 'CARD', 'NN', 'VVFIN', 'PPER'), 'start right siblings': ['ADJX'], 'end left siblings': [], 'auto preterminal span': (18, 23), 'movers': ['ADJX'], 'old_parent': 'ADJX', 'POS confusion': ('CARD', 'CARD'), 'end right siblings': ['VF', 'LK', 'MF'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SIMPX der muste ja)
		(SIMPX der muste eigentlich reichen)
		(DM also)
		(SIMPX munchen hannover das sind knapp funf stunden)
		(DM ja)
		[01;36m(ADVX[00m
			[01;36m(DM[00m
				(DM also)
				(DM also)[01;36m)[00m[01;36m)[00m
		[01;31m(SIMPX[00m
			(ADJX vier)
			[01;36m(SIMPX[00m
				(VF viereinhalb stunden)
				(LK sehe)
				(MF ich)[01;36m)[00m[01;31m)[00m
		(NX
			[01;31m(NX[00m
				(NX viereinhalb stunden)
				[01;33m(NX[00m (NX fahrzeit)[01;31m)[00m
			(PX nach hannover)))) [01;33mNX)[00m
Step:Modifier Attachment
{'new_parent': 'TURN', 'new_family': ['SIMPX', 'SIMPX', 'DM', 'SIMPX', 'DM', 'DM', 'DM', 'ADJX', 'SIMPX', 'NX'], 'mover info': [('ADJX', (18, 19))], 'old_family': ['ADJX', 'VF', 'LK', 'MF'], 'start left siblings': [], 'auto preterminals': ('PDS', 'VMFIN', 'ADV', 'PDS', 'VMFIN', 'ADV', 'VVINF', 'ADV', 'NE', 'NE', 'PDS', 'VAFIN', 'ADV', 'CARD', 'NN', 'PTKANT', 'ADV', 'ADV', 'CARD', 'CARD', 'NN', 'VVFIN', 'PPER', 'CARD', 'NN', 'NN', 'APPR', 'NE'), 'start right siblings': ['VF', 'LK', 'MF'], 'end left siblings': ['SIMPX', 'SIMPX', 'DM', 'SIMPX', 'DM', 'DM', 'DM'], 'auto preterminal span': (0, 28), 'movers': ['ADJX'], 'old_parent': 'SIMPX', 'POS confusion': ('CARD', 'CARD'), 'end right siblings': ['SIMPX', 'NX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SIMPX der muste ja)
		(SIMPX der muste eigentlich reichen)
		(DM also)
		(SIMPX munchen hannover das sind knapp funf stunden)
		(DM ja)
		[01;36m(ADVX[00m
			[01;36m(DM[00m
				(DM also)
				(DM also)[01;36m)[00m[01;36m)[00m
		(ADJX vier)
		(SIMPX viereinhalb stunden sehe ich)
		(NX
			[01;31m(NX[00m
				(NX viereinhalb stunden)
				[01;33m(NX[00m (NX fahrzeit)[01;31m)[00m
			(PX nach hannover)))) [01;33mNX)[00m
Step:NP Attachment
{'new_parent': 'NX', 'new_family': ['NX', 'NX', 'PX'], 'mover info': [('NX', (25, 26))], 'old_family': ['NX', 'NX'], 'start left siblings': ['NX'], 'auto preterminals': ('CARD', 'NN', 'NN', 'APPR', 'NE'), 'start right siblings': [], 'end left siblings': ['NX'], 'auto preterminal span': (23, 28), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'NX', 'POS confusion': ('NN', 'NN'), 'added and moved': True, 'end right siblings': ['PX'], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(SIMPX der muste ja)
		(SIMPX der muste eigentlich reichen)
		(DM also)
		(SIMPX munchen hannover das sind knapp funf stunden)
		(DM ja)
		[01;36m(ADVX[00m
			[01;36m(DM[00m
				(DM also)
				(DM also)[01;36m)[00m[01;36m)[00m
		(ADJX vier)
		(SIMPX viereinhalb stunden sehe ich)
		(NX viereinhalb stunden fahrzeit nach hannover)))
Step:Co-ordination
{'subtrees': ['DM', 'DM'], 'family': ['SIMPX', 'SIMPX', 'DM', 'SIMPX', 'DM', 'DM', 'ADJX', 'SIMPX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV'), 'right siblings': [(ADJX (CARD vier)), (SIMPX (VF (NX (ADJX (CARD viereinhalb)) (NN stunden))) (LK (VXFIN (VVFIN sehe))) (MF (NX (PPER ich)))), (NX (NX (ADJX (CARD viereinhalb)) (NN stunden)) (NX (NX (NN fahrzeit)) (PX (APPR nach) (NX (NE hannover)))))], 'left siblings': [(SIMPX (VF (NX (PDS der))) (LK (VXFIN (VMFIN muste))) (MF (ADVX (ADV ja)))), (SIMPX (VF (NX (PDS der))) (LK (VXFIN (VMFIN muste))) (MF (ADVX (ADV eigentlich))) (VC (VXINF (VVINF reichen)))), (DM (ADVX (ADV also))), (SIMPX (LV (NX (NX (NE munchen)) (NX (NE hannover)))) (VF (NX (PDS das))) (LK (VXFIN (VAFIN sind))) (MF (NX (ADVX (ADV knapp)) (ADJX (CARD funf)) (NN stunden)))), (DM (PTKANT ja))], 'auto preterminal span': (16, 18), 'span': (16, 18), 'parent': 'TURN', 'label': 'DM', 'classified_type': 'Co-ordination', 'type': 'add'}
(TOP
	(TURN
		(SIMPX der muste ja)
		(SIMPX der muste eigentlich reichen)
		(DM also)
		(SIMPX munchen hannover das sind knapp funf stunden)
		(DM ja)
		[01;36m(ADVX[00m
			(DM
				(DM also)
				(DM also))[01;36m)[00m
		(ADJX vier)
		(SIMPX viereinhalb stunden sehe ich)
		(NX viereinhalb stunden fahrzeit nach hannover)))
Step:Unary
{'subtrees': ['DM'], 'family': ['SIMPX', 'SIMPX', 'DM', 'SIMPX', 'DM', 'ADVX', 'ADJX', 'SIMPX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV'), 'right siblings': [(ADJX (CARD vier)), (SIMPX (VF (NX (ADJX (CARD viereinhalb)) (NN stunden))) (LK (VXFIN (VVFIN sehe))) (MF (NX (PPER ich)))), (NX (NX (ADJX (CARD viereinhalb)) (NN stunden)) (NX (NX (NN fahrzeit)) (PX (APPR nach) (NX (NE hannover)))))], 'left siblings': [(SIMPX (VF (NX (PDS der))) (LK (VXFIN (VMFIN muste))) (MF (ADVX (ADV ja)))), (SIMPX (VF (NX (PDS der))) (LK (VXFIN (VMFIN muste))) (MF (ADVX (ADV eigentlich))) (VC (VXINF (VVINF reichen)))), (DM (ADVX (ADV also))), (SIMPX (LV (NX (NX (NE munchen)) (NX (NE hannover)))) (VF (NX (PDS das))) (LK (VXFIN (VAFIN sind))) (MF (NX (ADVX (ADV knapp)) (ADJX (CARD funf)) (NN stunden)))), (DM (PTKANT ja))], 'auto preterminal span': (16, 18), 'span': (16, 18), 'parent': 'TURN', 'label': 'ADVX', 'classified_type': 'Unary', 'type': 'add'}
(TOP der muste ja der muste eigentlich reichen also munchen hannover das sind knapp funf stunden ja also also vier viereinhalb stunden sehe ich viereinhalb stunden fahrzeit nach hannover)

Sentence 441:
29 Initial errors
0 on fringe, 23 iterations
3 Error:Modifier Attachment
2 Error:Different label
2 Error:Different label
2 Error:Different label
2 Error:PP Attachment
1 Error:Unary
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:Clause Attachment
1 Error:UNSET add
1 Error:UNSET remove
1 Error:Clause Attachment
1 Error:UNSET remove
1 Error:PP Attachment
1 Error:UNSET add
1 Error:Modifier Attachment
1 Error:PP Attachment
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:Clause Attachment
1 Error:UNSET add
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM okay)
		[01;31m(SIMPX[00m
			[01;31m(LV[00m
				(NX
					(ADJX siebenundzwanzigster)
					(NN januar))[01;31m)[00m
			[01;33m(SIMPX[00m (VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK fahren)
					(MF wir)
					(VC los)[01;31m)[00m [01;33mSIMPX)[00m
				(APPR um)
				[01;31m(LKM[00m
					(LK nehmen)
					[01;33m(MF[00m (MF den ice um zehn uhr)[01;31m)[00m
				[01;36m(SIMPX[00m [01;31m(LKM[00m
					(LK sind)
					(MF um funfzehn uhr in hannover)[01;31m)[00m [01;33mMF)[00m[01;36m)[00m
				[01;36m(SIMPX[00m [01;31m(LKM[00m
					(LK nehmen)
					(MF da ein taxi)[01;31m)[00m[01;36m)[00m
				(KON und)
				(KON und)
				(KON und)
				(LKMVC kommen rechtzeitig an)[01;31m)[00m[01;31m)[00m
		(SIMPX und dann wurden wir am achtundzwanzigsten abends einfach wieder zuruckfahren)
		[01;31m(SIMPX[00m
			(VF da)
			(LK wurde)
			(MF ich vielleicht)
			(VC sagen)
			(NF wir nehmen das flugzeug)[01;31m)[00m
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(VF da)
				(LK gibt)
				[01;31m(MF[00m
					(NX es)
					(NX einen flug) [01;33mSIMPX)[00m
					[01;33m(PX[00m (NX siebzehn uhr zwanzig)[01;31m)[00m[01;31m)[00m
			[01;31m(ADJX[00m
				(ADVX sogar)
				[01;31m(ADJX[00m
					(ADJX stundlich)
					(PX bis einundzwanzig uhr zwanzig)[01;31m)[00m[01;31m)[00m [01;33mPX)[00m[01;36m)[00m
		[01;31m(SIMPX[00m
			(VF das)
			(LK heist)
			(NF
				(SIMPX
					(VF wir)
					[01;31m(FKOORD[00m
						(LKMVC
							(LK konnen)
							[01;31m(MF[00m
								(ADVX auch)
								(ADVX noch)
								[01;36m(VF[00m
									(PX
										(APPR um)
										(NX zwanzig nach acht))[01;36m)[00m
								[01;31m(SIMPX[00m [01;33m(LKMVC[00m
									(LK konnen)
									[01;31m(MF[00m [01;33m(MF[00m
										(NX
											(PPER wir))[01;31m)[00m[01;31m)[00m
								(PX in hannover)[01;31m)[00m [01;33mMF)[00m
							(VC abfliegen)) [01;33mLKMVC)[00m
						(KON und)
						(LKM
							(LK sind)
							(MF
								[01;36m(NX[00m [01;31m(PX[00m
									(APPR in)
									(NX siebzig minuten)[01;31m)[00m[01;36m)[00m
								(PX in munchen)))[01;31m)[00m))[01;31m)[00m))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'NX', 'NX', 'ADJX'], 'mover info': [('ADJX', (57, 63))], 'old_family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'ADJX', 'SIMPX'], 'start left siblings': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'auto preterminals': ('ITJ', 'ADJA', 'NN', 'ADV', 'VVFIN', 'PPER', 'PTKVZ', 'APPR', 'VVFIN', 'ART', 'NE', 'APPR', 'CARD', 'NN', 'VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE', 'VVFIN', 'ADV', 'ART', 'NN', 'KON', 'KON', 'KON', 'VVFIN', 'ADJD', 'PTKVZ', 'KON', 'ADV', 'VAFIN', 'PPER', 'APPRART', 'NN', 'ADV', 'ADV', 'ADV', 'VVINF', 'ADV', 'VAFIN', 'PPER', 'ADV', 'VVINF', 'PPER', 'VVFIN', 'ART', 'NN', 'ADV', 'VVFIN', 'PPER', 'ART', 'NN', 'CARD', 'NN', 'CARD', 'ADV', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'PDS', 'VVFIN', 'PPER', 'VMFIN', 'ADV', 'ADV', 'APPR', 'CARD', 'APPR', 'CARD', 'VMFIN', 'PPER', 'APPR', 'NE', 'VVINF', 'KON', 'VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE'), 'start right siblings': ['SIMPX'], 'end left siblings': ['NX', 'NX', 'NX'], 'auto preterminal span': (0, 85), 'adding node already present': False, 'movers': ['ADJX'], 'old_parent': 'TURN', 'added and moved': True, 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(DM okay)
		[01;31m(SIMPX[00m
			[01;31m(LV[00m
				(NX
					(ADJX siebenundzwanzigster)
					(NN januar))[01;31m)[00m
			[01;33m(SIMPX[00m (VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK fahren)
					(MF wir)
					(VC los)[01;31m)[00m [01;33mSIMPX)[00m
				(APPR um)
				[01;31m(LKM[00m
					(LK nehmen)
					[01;33m(MF[00m (MF den ice um zehn uhr)[01;31m)[00m
				[01;36m(SIMPX[00m [01;31m(LKM[00m
					(LK sind)
					(MF um funfzehn uhr in hannover)[01;31m)[00m [01;33mMF)[00m[01;36m)[00m
				[01;36m(SIMPX[00m [01;31m(LKM[00m
					(LK nehmen)
					(MF da ein taxi)[01;31m)[00m[01;36m)[00m
				(KON und)
				(KON und)
				(KON und)
				(LKMVC kommen rechtzeitig an)[01;31m)[00m[01;31m)[00m
		(SIMPX und dann wurden wir am achtundzwanzigsten abends einfach wieder zuruckfahren)
		[01;31m(SIMPX[00m
			(VF da)
			(LK wurde)
			(MF ich vielleicht)
			(VC sagen)
			(NF wir nehmen das flugzeug)[01;31m)[00m
		(SIMPX [01;33m(SIMPX[00m
			(VF da)
			(LK gibt)
			[01;31m(MF[00m
				(NX es)
				(NX einen flug) [01;33mSIMPX)[00m
				(PX
					(NX siebzehn uhr zwanzig)
					[01;31m(ADJX[00m
						(ADVX sogar)
						[01;31m(ADJX[00m
							(ADJX stundlich)
							(PX bis einundzwanzig uhr zwanzig)[01;31m)[00m[01;31m)[00m)[01;31m)[00m)
		[01;31m(SIMPX[00m
			(VF das)
			(LK heist)
			(NF
				(SIMPX
					(VF wir)
					[01;31m(FKOORD[00m
						(LKMVC
							(LK konnen)
							[01;31m(MF[00m
								(ADVX auch)
								(ADVX noch)
								[01;36m(VF[00m
									(PX
										(APPR um)
										(NX zwanzig nach acht))[01;36m)[00m
								[01;31m(SIMPX[00m [01;33m(LKMVC[00m
									(LK konnen)
									[01;31m(MF[00m [01;33m(MF[00m
										(NX
											(PPER wir))[01;31m)[00m[01;31m)[00m
								(PX in hannover)[01;31m)[00m [01;33mMF)[00m
							(VC abfliegen)) [01;33mLKMVC)[00m
						(KON und)
						(LKM
							(LK sind)
							(MF
								[01;36m(NX[00m [01;31m(PX[00m
									(APPR in)
									(NX siebzig minuten)[01;31m)[00m[01;36m)[00m
								(PX in munchen)))[01;31m)[00m))[01;31m)[00m))
Step:Different label
{'family': ['LKMVC', 'APPR', 'LKM', 'SIMPX', 'LKM', 'KON', 'KON', 'KON', 'LKMVC'], 'auto preterminal span': (14, 20), 'span': (14, 20), 'subtrees': ['LK', 'MF'], 'parent': 'FKOORD', 'over_word': False, 'auto preterminals': ('VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('LKM', 'SIMPX')}
(TOP
	(TURN
		(DM okay)
		[01;31m(SIMPX[00m
			[01;31m(LV[00m
				(NX
					(ADJX siebenundzwanzigster)
					(NN januar))[01;31m)[00m
			[01;33m(SIMPX[00m (VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK fahren)
					(MF wir)
					(VC los)[01;31m)[00m [01;33mSIMPX)[00m
				(APPR um)
				[01;31m(LKM[00m
					(LK nehmen)
					[01;33m(MF[00m (MF den ice um zehn uhr)[01;31m)[00m
				(SIMPX sind um funfzehn uhr in hannover) [01;33mMF)[00m
				[01;36m(SIMPX[00m [01;31m(LKM[00m
					(LK nehmen)
					(MF da ein taxi)[01;31m)[00m[01;36m)[00m
				(KON und)
				(KON und)
				(KON und)
				(LKMVC kommen rechtzeitig an)[01;31m)[00m[01;31m)[00m
		(SIMPX und dann wurden wir am achtundzwanzigsten abends einfach wieder zuruckfahren)
		[01;31m(SIMPX[00m
			(VF da)
			(LK wurde)
			(MF ich vielleicht)
			(VC sagen)
			(NF wir nehmen das flugzeug)[01;31m)[00m
		(SIMPX [01;33m(SIMPX[00m
			(VF da)
			(LK gibt)
			[01;31m(MF[00m
				(NX es)
				(NX einen flug) [01;33mSIMPX)[00m
				(PX
					(NX siebzehn uhr zwanzig)
					[01;31m(ADJX[00m
						(ADVX sogar)
						[01;31m(ADJX[00m
							(ADJX stundlich)
							(PX bis einundzwanzig uhr zwanzig)[01;31m)[00m[01;31m)[00m)[01;31m)[00m)
		[01;31m(SIMPX[00m
			(VF das)
			(LK heist)
			(NF
				(SIMPX
					(VF wir)
					[01;31m(FKOORD[00m
						(LKMVC
							(LK konnen)
							[01;31m(MF[00m
								(ADVX auch)
								(ADVX noch)
								[01;36m(VF[00m
									(PX
										(APPR um)
										(NX zwanzig nach acht))[01;36m)[00m
								[01;31m(SIMPX[00m [01;33m(LKMVC[00m
									(LK konnen)
									[01;31m(MF[00m [01;33m(MF[00m
										(NX
											(PPER wir))[01;31m)[00m[01;31m)[00m
								(PX in hannover)[01;31m)[00m [01;33mMF)[00m
							(VC abfliegen)) [01;33mLKMVC)[00m
						(KON und)
						(LKM
							(LK sind)
							(MF
								[01;36m(NX[00m [01;31m(PX[00m
									(APPR in)
									(NX siebzig minuten)[01;31m)[00m[01;36m)[00m
								(PX in munchen)))[01;31m)[00m))[01;31m)[00m))
Step:Different label
{'family': ['LKMVC', 'APPR', 'LKM', 'SIMPX', 'SIMPX', 'KON', 'KON', 'KON', 'LKMVC'], 'auto preterminal span': (20, 24), 'span': (20, 24), 'subtrees': ['LK', 'MF'], 'parent': 'FKOORD', 'over_word': False, 'auto preterminals': ('VVFIN', 'ADV', 'ART', 'NN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('LKM', 'SIMPX')}
(TOP
	(TURN
		(DM okay)
		[01;31m(SIMPX[00m
			[01;31m(LV[00m
				(NX
					(ADJX siebenundzwanzigster)
					(NN januar))[01;31m)[00m
			[01;33m(SIMPX[00m (VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK fahren)
					(MF wir)
					(VC los)[01;31m)[00m [01;33mSIMPX)[00m
				(APPR um)
				[01;31m(LKM[00m
					(LK nehmen)
					[01;33m(MF[00m (MF den ice um zehn uhr)[01;31m)[00m
				(SIMPX sind um funfzehn uhr in hannover) [01;33mMF)[00m
				(SIMPX nehmen da ein taxi)
				(KON und)
				(KON und)
				(KON und)
				(LKMVC kommen rechtzeitig an)[01;31m)[00m[01;31m)[00m
		(SIMPX und dann wurden wir am achtundzwanzigsten abends einfach wieder zuruckfahren)
		[01;31m(SIMPX[00m
			(VF da)
			(LK wurde)
			(MF ich vielleicht)
			(VC sagen)
			(NF wir nehmen das flugzeug)[01;31m)[00m
		(SIMPX [01;33m(SIMPX[00m
			(VF da)
			(LK gibt)
			[01;31m(MF[00m
				(NX es)
				(NX einen flug) [01;33mSIMPX)[00m
				(PX
					(NX siebzehn uhr zwanzig)
					[01;31m(ADJX[00m
						(ADVX sogar)
						[01;31m(ADJX[00m
							(ADJX stundlich)
							(PX bis einundzwanzig uhr zwanzig)[01;31m)[00m[01;31m)[00m)[01;31m)[00m)
		[01;31m(SIMPX[00m
			(VF das)
			(LK heist)
			(NF
				(SIMPX
					(VF wir)
					[01;31m(FKOORD[00m
						(LKMVC
							(LK konnen)
							[01;31m(MF[00m
								(ADVX auch)
								(ADVX noch)
								[01;36m(VF[00m
									(PX
										(APPR um)
										(NX zwanzig nach acht))[01;36m)[00m
								[01;31m(SIMPX[00m [01;33m(LKMVC[00m
									(LK konnen)
									[01;31m(MF[00m [01;33m(MF[00m
										(NX
											(PPER wir))[01;31m)[00m[01;31m)[00m
								(PX in hannover)[01;31m)[00m [01;33mMF)[00m
							(VC abfliegen)) [01;33mLKMVC)[00m
						(KON und)
						(LKM
							(LK sind)
							(MF
								[01;36m(NX[00m [01;31m(PX[00m
									(APPR in)
									(NX siebzig minuten)[01;31m)[00m[01;36m)[00m
								(PX in munchen)))[01;31m)[00m))[01;31m)[00m))
Step:Different label
{'family': ['NX', 'PX'], 'auto preterminal span': (80, 83), 'span': (80, 83), 'subtrees': ['APPR', 'NX'], 'parent': 'MF', 'over_word': False, 'auto preterminals': ('APPR', 'CARD', 'NN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('PX', 'NX')}
(TOP
	(TURN
		(DM okay)
		[01;31m(SIMPX[00m
			[01;31m(LV[00m
				(NX
					(ADJX siebenundzwanzigster)
					(NN januar))[01;31m)[00m
			[01;33m(SIMPX[00m (VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK fahren)
					(MF wir)
					(VC los)[01;31m)[00m [01;33mSIMPX)[00m
				(APPR um)
				[01;31m(LKM[00m
					(LK nehmen)
					[01;33m(MF[00m (MF den ice um zehn uhr)[01;31m)[00m
				(SIMPX sind um funfzehn uhr in hannover) [01;33mMF)[00m
				(SIMPX nehmen da ein taxi)
				(KON und)
				(KON und)
				(KON und)
				(LKMVC kommen rechtzeitig an)[01;31m)[00m[01;31m)[00m
		(SIMPX und dann wurden wir am achtundzwanzigsten abends einfach wieder zuruckfahren)
		[01;31m(SIMPX[00m
			(VF da)
			(LK wurde)
			(MF ich vielleicht)
			(VC sagen)
			(NF wir nehmen das flugzeug)[01;31m)[00m
		(SIMPX [01;33m(SIMPX[00m
			(VF da)
			(LK gibt)
			[01;31m(MF[00m
				(NX es)
				(NX einen flug) [01;33mSIMPX)[00m
				(PX
					(NX siebzehn uhr zwanzig)
					[01;31m(ADJX[00m
						(ADVX sogar)
						[01;31m(ADJX[00m
							(ADJX stundlich)
							(PX bis einundzwanzig uhr zwanzig)[01;31m)[00m[01;31m)[00m)[01;31m)[00m)
		[01;31m(SIMPX[00m
			(VF das)
			(LK heist)
			(NF
				(SIMPX
					(VF wir)
					[01;31m(FKOORD[00m
						(LKMVC
							(LK konnen)
							[01;31m(MF[00m
								(ADVX auch)
								(ADVX noch)
								[01;36m(VF[00m
									(PX
										(APPR um)
										(NX zwanzig nach acht))[01;36m)[00m
								[01;31m(SIMPX[00m [01;33m(LKMVC[00m
									(LK konnen)
									[01;31m(MF[00m [01;33m(MF[00m
										(NX
											(PPER wir))[01;31m)[00m[01;31m)[00m
								(PX in hannover)[01;31m)[00m [01;33mMF)[00m
							(VC abfliegen)) [01;33mLKMVC)[00m
						(KON und)
						(LKM sind in siebzig minuten in munchen)[01;31m)[00m))[01;31m)[00m))
Step:PP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'PX'], 'mover info': [('PX', (75, 77))], 'old_family': ['ADVX', 'ADVX', 'PX', 'SIMPX', 'PX'], 'start left siblings': ['ADVX', 'ADVX', 'PX', 'SIMPX'], 'auto preterminals': ('ADV', 'ADV', 'APPR', 'CARD', 'APPR', 'CARD', 'VMFIN', 'PPER', 'APPR', 'NE'), 'start right siblings': [], 'end left siblings': ['NX'], 'auto preterminal span': (67, 77), 'movers': ['PX'], 'old_parent': 'MF', 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM okay)
		[01;31m(SIMPX[00m
			[01;31m(LV[00m
				(NX
					(ADJX siebenundzwanzigster)
					(NN januar))[01;31m)[00m
			[01;33m(SIMPX[00m (VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK fahren)
					(MF wir)
					(VC los)[01;31m)[00m [01;33mSIMPX)[00m
				(APPR um)
				[01;31m(LKM[00m
					(LK nehmen)
					[01;33m(MF[00m (MF den ice um zehn uhr)[01;31m)[00m
				(SIMPX sind um funfzehn uhr in hannover) [01;33mMF)[00m
				(SIMPX nehmen da ein taxi)
				(KON und)
				(KON und)
				(KON und)
				(LKMVC kommen rechtzeitig an)[01;31m)[00m[01;31m)[00m
		(SIMPX und dann wurden wir am achtundzwanzigsten abends einfach wieder zuruckfahren)
		[01;31m(SIMPX[00m
			(VF da)
			(LK wurde)
			(MF ich vielleicht)
			(VC sagen)
			(NF wir nehmen das flugzeug)[01;31m)[00m
		(SIMPX [01;33m(SIMPX[00m
			(VF da)
			(LK gibt)
			[01;31m(MF[00m
				(NX es)
				(NX einen flug) [01;33mSIMPX)[00m
				(PX
					(NX siebzehn uhr zwanzig)
					[01;31m(ADJX[00m
						(ADVX sogar)
						[01;31m(ADJX[00m
							(ADJX stundlich)
							(PX bis einundzwanzig uhr zwanzig)[01;31m)[00m[01;31m)[00m)[01;31m)[00m)
		[01;31m(SIMPX[00m
			(VF das)
			(LK heist)
			(NF
				(SIMPX
					(VF wir)
					[01;31m(FKOORD[00m
						(LKMVC
							(LK konnen)
							[01;31m(MF[00m
								(ADVX auch)
								(ADVX noch)
								[01;36m(VF[00m
									(PX
										(APPR um)
										(NX zwanzig nach acht))[01;36m)[00m
								[01;31m(SIMPX[00m [01;33m(LKMVC[00m
									(LK konnen)
									(MF wir in hannover)[01;31m)[00m[01;31m)[00m
							(VC abfliegen)) [01;33mLKMVC)[00m
						(KON und)
						(LKM sind in siebzig minuten in munchen)[01;31m)[00m))[01;31m)[00m))
Step:Unary
{'subtrees': ['PX'], 'family': ['ADVX', 'ADVX', 'VF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'CARD', 'APPR', 'CARD'), 'right siblings': [(SIMPX (LK (VXFIN (VMFIN konnen))) (MF (NX (PPER wir)) (PX (APPR in) (NX (NE hannover)))))], 'left siblings': [(ADVX (ADV auch)), (ADVX (ADV noch))], 'auto preterminal span': (69, 73), 'span': (69, 73), 'parent': 'MF', 'label': 'VF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM okay)
		[01;31m(SIMPX[00m
			[01;31m(LV[00m
				(NX
					(ADJX siebenundzwanzigster)
					(NN januar))[01;31m)[00m
			[01;33m(SIMPX[00m (VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK fahren)
					(MF wir)
					(VC los)[01;31m)[00m [01;33mSIMPX)[00m
				(APPR um)
				[01;31m(LKM[00m
					(LK nehmen)
					[01;33m(MF[00m (MF den ice um zehn uhr)[01;31m)[00m
				(SIMPX sind um funfzehn uhr in hannover) [01;33mMF)[00m
				(SIMPX nehmen da ein taxi)
				(KON und)
				(KON und)
				(KON und)
				(LKMVC kommen rechtzeitig an)[01;31m)[00m[01;31m)[00m
		(SIMPX und dann wurden wir am achtundzwanzigsten abends einfach wieder zuruckfahren)
		[01;31m(SIMPX[00m
			(VF da)
			(LK wurde)
			(MF ich vielleicht)
			(VC sagen)
			(NF wir nehmen das flugzeug)[01;31m)[00m
		(SIMPX [01;33m(SIMPX[00m
			(VF da)
			(LK gibt)
			[01;31m(MF[00m
				(NX es)
				(NX einen flug) [01;33mSIMPX)[00m
				(PX
					(NX siebzehn uhr zwanzig)
					[01;31m(ADJX[00m
						(ADVX sogar)
						[01;31m(ADJX[00m
							(ADJX stundlich)
							(PX bis einundzwanzig uhr zwanzig)[01;31m)[00m[01;31m)[00m)[01;31m)[00m)
		[01;31m(SIMPX[00m
			(VF das)
			(LK heist)
			(NF
				(SIMPX
					(VF wir)
					[01;31m(FKOORD[00m
						(LKMVC
							(LK konnen)
							[01;31m(MF[00m
								(ADVX auch)
								(ADVX noch)
								(VF um zwanzig nach acht)
								[01;31m(SIMPX[00m [01;33m(LKMVC[00m
									(LK konnen)
									(MF wir in hannover)[01;31m)[00m[01;31m)[00m
							(VC abfliegen)) [01;33mLKMVC)[00m
						(KON und)
						(LKM sind in siebzig minuten in munchen)[01;31m)[00m))[01;31m)[00m))
Step:Unary
{'subtrees': ['NX'], 'family': ['LV', 'VF', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJA', 'NN', 'ADV', 'VVFIN', 'PPER', 'PTKVZ', 'APPR', 'VVFIN', 'ART', 'NE', 'APPR', 'CARD', 'NN', 'VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE', 'VVFIN', 'ADV', 'ART', 'NN', 'KON', 'KON', 'KON', 'VVFIN', 'ADJD', 'PTKVZ'), 'right siblings': ['VF', 'FKOORD'], 'parent': 'SIMPX', 'auto preterminal span': (1, 30), 'span': (1, 3), 'left siblings': [], 'label': 'LV', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		[01;31m(SIMPX[00m
			(NX siebenundzwanzigster januar)
			[01;33m(SIMPX[00m (VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK fahren)
					(MF wir)
					(VC los)[01;31m)[00m [01;33mSIMPX)[00m
				(APPR um)
				[01;31m(LKM[00m
					(LK nehmen)
					[01;33m(MF[00m (MF den ice um zehn uhr)[01;31m)[00m
				(SIMPX sind um funfzehn uhr in hannover) [01;33mMF)[00m
				(SIMPX nehmen da ein taxi)
				(KON und)
				(KON und)
				(KON und)
				(LKMVC kommen rechtzeitig an)[01;31m)[00m[01;31m)[00m
		(SIMPX und dann wurden wir am achtundzwanzigsten abends einfach wieder zuruckfahren)
		[01;31m(SIMPX[00m
			(VF da)
			(LK wurde)
			(MF ich vielleicht)
			(VC sagen)
			(NF wir nehmen das flugzeug)[01;31m)[00m
		(SIMPX [01;33m(SIMPX[00m
			(VF da)
			(LK gibt)
			[01;31m(MF[00m
				(NX es)
				(NX einen flug) [01;33mSIMPX)[00m
				(PX
					(NX siebzehn uhr zwanzig)
					[01;31m(ADJX[00m
						(ADVX sogar)
						[01;31m(ADJX[00m
							(ADJX stundlich)
							(PX bis einundzwanzig uhr zwanzig)[01;31m)[00m[01;31m)[00m)[01;31m)[00m)
		[01;31m(SIMPX[00m
			(VF das)
			(LK heist)
			(NF
				(SIMPX
					(VF wir)
					[01;31m(FKOORD[00m
						(LKMVC
							(LK konnen)
							[01;31m(MF[00m
								(ADVX auch)
								(ADVX noch)
								(VF um zwanzig nach acht)
								[01;31m(SIMPX[00m [01;33m(LKMVC[00m
									(LK konnen)
									(MF wir in hannover)[01;31m)[00m[01;31m)[00m
							(VC abfliegen)) [01;33mLKMVC)[00m
						(KON und)
						(LKM sind in siebzig minuten in munchen)[01;31m)[00m))[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['NX', 'VF', 'FKOORD'], 'family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADJA', 'NN', 'ADV', 'VVFIN', 'PPER', 'PTKVZ', 'APPR', 'VVFIN', 'ART', 'NE', 'APPR', 'CARD', 'NN', 'VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE', 'VVFIN', 'ADV', 'ART', 'NN', 'KON', 'KON', 'KON', 'VVFIN', 'ADJD', 'PTKVZ', 'KON', 'ADV', 'VAFIN', 'PPER', 'APPRART', 'NN', 'ADV', 'ADV', 'ADV', 'VVINF', 'ADV', 'VAFIN', 'PPER', 'ADV', 'VVINF', 'PPER', 'VVFIN', 'ART', 'NN', 'ADV', 'VVFIN', 'PPER', 'ART', 'NN', 'CARD', 'NN', 'CARD', 'ADV', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'PDS', 'VVFIN', 'PPER', 'VMFIN', 'ADV', 'ADV', 'APPR', 'CARD', 'APPR', 'CARD', 'VMFIN', 'PPER', 'APPR', 'NE', 'VVINF', 'KON', 'VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE'), 'right siblings': ['SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 85), 'span': (1, 30), 'left siblings': ['DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(NX siebenundzwanzigster januar)
		[01;33m(SIMPX[00m (VF dann)
		[01;31m(FKOORD[00m
			[01;31m(LKMVC[00m
				(LK fahren)
				(MF wir)
				(VC los)[01;31m)[00m [01;33mSIMPX)[00m
			(APPR um)
			[01;31m(LKM[00m
				(LK nehmen)
				[01;33m(MF[00m (MF den ice um zehn uhr)[01;31m)[00m
			(SIMPX sind um funfzehn uhr in hannover) [01;33mMF)[00m
			(SIMPX nehmen da ein taxi)
			(KON und)
			(KON und)
			(KON und)
			(LKMVC kommen rechtzeitig an)[01;31m)[00m
		(SIMPX und dann wurden wir am achtundzwanzigsten abends einfach wieder zuruckfahren)
		[01;31m(SIMPX[00m
			(VF da)
			(LK wurde)
			(MF ich vielleicht)
			(VC sagen)
			(NF wir nehmen das flugzeug)[01;31m)[00m
		(SIMPX [01;33m(SIMPX[00m
			(VF da)
			(LK gibt)
			[01;31m(MF[00m
				(NX es)
				(NX einen flug) [01;33mSIMPX)[00m
				(PX
					(NX siebzehn uhr zwanzig)
					[01;31m(ADJX[00m
						(ADVX sogar)
						[01;31m(ADJX[00m
							(ADJX stundlich)
							(PX bis einundzwanzig uhr zwanzig)[01;31m)[00m[01;31m)[00m)[01;31m)[00m)
		[01;31m(SIMPX[00m
			(VF das)
			(LK heist)
			(NF
				(SIMPX
					(VF wir)
					[01;31m(FKOORD[00m
						(LKMVC
							(LK konnen)
							[01;31m(MF[00m
								(ADVX auch)
								(ADVX noch)
								(VF um zwanzig nach acht)
								[01;31m(SIMPX[00m [01;33m(LKMVC[00m
									(LK konnen)
									(MF wir in hannover)[01;31m)[00m[01;31m)[00m
							(VC abfliegen)) [01;33mLKMVC)[00m
						(KON und)
						(LKM sind in siebzig minuten in munchen)[01;31m)[00m))[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['LK', 'MF', 'VC'], 'family': ['LKMVC', 'APPR', 'LKM', 'SIMPX', 'SIMPX', 'KON', 'KON', 'KON', 'LKMVC'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'PTKVZ', 'APPR', 'VVFIN', 'ART', 'NE', 'APPR', 'CARD', 'NN', 'VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE', 'VVFIN', 'ADV', 'ART', 'NN', 'KON', 'KON', 'KON', 'VVFIN', 'ADJD', 'PTKVZ'), 'right siblings': ['APPR', 'LKM', 'SIMPX', 'SIMPX', 'KON', 'KON', 'KON', 'LKMVC'], 'parent': 'FKOORD', 'auto preterminal span': (4, 30), 'span': (4, 7), 'left siblings': [], 'label': 'LKMVC', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(NX siebenundzwanzigster januar)
		[01;33m(SIMPX[00m (VF dann)
		[01;31m(FKOORD[00m
			(LK fahren)
			(MF wir)
			(VC los) [01;33mSIMPX)[00m
			(APPR um)
			[01;31m(LKM[00m
				(LK nehmen)
				[01;33m(MF[00m (MF den ice um zehn uhr)[01;31m)[00m
			(SIMPX sind um funfzehn uhr in hannover) [01;33mMF)[00m
			(SIMPX nehmen da ein taxi)
			(KON und)
			(KON und)
			(KON und)
			(LKMVC kommen rechtzeitig an)[01;31m)[00m
		(SIMPX und dann wurden wir am achtundzwanzigsten abends einfach wieder zuruckfahren)
		[01;31m(SIMPX[00m
			(VF da)
			(LK wurde)
			(MF ich vielleicht)
			(VC sagen)
			(NF wir nehmen das flugzeug)[01;31m)[00m
		(SIMPX [01;33m(SIMPX[00m
			(VF da)
			(LK gibt)
			[01;31m(MF[00m
				(NX es)
				(NX einen flug) [01;33mSIMPX)[00m
				(PX
					(NX siebzehn uhr zwanzig)
					[01;31m(ADJX[00m
						(ADVX sogar)
						[01;31m(ADJX[00m
							(ADJX stundlich)
							(PX bis einundzwanzig uhr zwanzig)[01;31m)[00m[01;31m)[00m)[01;31m)[00m)
		[01;31m(SIMPX[00m
			(VF das)
			(LK heist)
			(NF
				(SIMPX
					(VF wir)
					[01;31m(FKOORD[00m
						(LKMVC
							(LK konnen)
							[01;31m(MF[00m
								(ADVX auch)
								(ADVX noch)
								(VF um zwanzig nach acht)
								[01;31m(SIMPX[00m [01;33m(LKMVC[00m
									(LK konnen)
									(MF wir in hannover)[01;31m)[00m[01;31m)[00m
							(VC abfliegen)) [01;33mLKMVC)[00m
						(KON und)
						(LKM sind in siebzig minuten in munchen)[01;31m)[00m))[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['LK', 'MF', 'VC', 'APPR', 'LKM', 'SIMPX', 'SIMPX', 'KON', 'KON', 'KON', 'LKMVC'], 'family': ['DM', 'NX', 'VF', 'FKOORD', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADJA', 'NN', 'ADV', 'VVFIN', 'PPER', 'PTKVZ', 'APPR', 'VVFIN', 'ART', 'NE', 'APPR', 'CARD', 'NN', 'VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE', 'VVFIN', 'ADV', 'ART', 'NN', 'KON', 'KON', 'KON', 'VVFIN', 'ADJD', 'PTKVZ', 'KON', 'ADV', 'VAFIN', 'PPER', 'APPRART', 'NN', 'ADV', 'ADV', 'ADV', 'VVINF', 'ADV', 'VAFIN', 'PPER', 'ADV', 'VVINF', 'PPER', 'VVFIN', 'ART', 'NN', 'ADV', 'VVFIN', 'PPER', 'ART', 'NN', 'CARD', 'NN', 'CARD', 'ADV', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'PDS', 'VVFIN', 'PPER', 'VMFIN', 'ADV', 'ADV', 'APPR', 'CARD', 'APPR', 'CARD', 'VMFIN', 'PPER', 'APPR', 'NE', 'VVINF', 'KON', 'VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE'), 'right siblings': ['SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 85), 'span': (4, 30), 'left siblings': ['DM', 'NX', 'VF'], 'label': 'FKOORD', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(NX siebenundzwanzigster januar)
		[01;36m(SIMPX[00m
			(VF dann)
			(LK fahren)
			(MF wir)
			(VC los)[01;36m)[00m
		(APPR um)
		[01;31m(LKM[00m
			(LK nehmen)
			[01;33m(MF[00m (MF den ice um zehn uhr)[01;31m)[00m
		(SIMPX sind um funfzehn uhr in hannover) [01;33mMF)[00m
		(SIMPX nehmen da ein taxi)
		(KON und)
		(KON und)
		(KON und)
		(LKMVC kommen rechtzeitig an)
		(SIMPX und dann wurden wir am achtundzwanzigsten abends einfach wieder zuruckfahren)
		[01;31m(SIMPX[00m
			(VF da)
			(LK wurde)
			(MF ich vielleicht)
			(VC sagen)
			(NF wir nehmen das flugzeug)[01;31m)[00m
		(SIMPX [01;33m(SIMPX[00m
			(VF da)
			(LK gibt)
			[01;31m(MF[00m
				(NX es)
				(NX einen flug) [01;33mSIMPX)[00m
				(PX
					(NX siebzehn uhr zwanzig)
					[01;31m(ADJX[00m
						(ADVX sogar)
						[01;31m(ADJX[00m
							(ADJX stundlich)
							(PX bis einundzwanzig uhr zwanzig)[01;31m)[00m[01;31m)[00m)[01;31m)[00m)
		[01;31m(SIMPX[00m
			(VF das)
			(LK heist)
			(NF
				(SIMPX
					(VF wir)
					[01;31m(FKOORD[00m
						(LKMVC
							(LK konnen)
							[01;31m(MF[00m
								(ADVX auch)
								(ADVX noch)
								(VF um zwanzig nach acht)
								[01;31m(SIMPX[00m [01;33m(LKMVC[00m
									(LK konnen)
									(MF wir in hannover)[01;31m)[00m[01;31m)[00m
							(VC abfliegen)) [01;33mLKMVC)[00m
						(KON und)
						(LKM sind in siebzig minuten in munchen)[01;31m)[00m))[01;31m)[00m))
Step:UNSET add
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['DM', 'NX', 'SIMPX', 'APPR', 'LKM', 'SIMPX', 'SIMPX', 'KON', 'KON', 'KON', 'LKMVC', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'PTKVZ'), 'right siblings': [(APPR um), (LKM (LK (VXFIN (VVFIN nehmen))) (MF (NX (ART den) (NE ice)) (PX (APPR um) (NX (ADJX (CARD zehn)) (NN uhr))))), (SIMPX (LK (VXFIN (VAFIN sind))) (MF (PX (APPR um) (NX (ADJX (CARD funfzehn)) (NN uhr))) (PX (APPR in) (NX (NE hannover))))), (SIMPX (LK (VXFIN (VVFIN nehmen))) (MF (ADVX (ADV da)) (NX (ART ein) (NN taxi)))), (KON und), (KON und), (KON und), (LKMVC (LK (VXFIN (VVFIN kommen))) (MF (ADJX (ADJD rechtzeitig))) (VC (PTKVZ an))), (SIMPX (KOORD (KON und)) (VF (ADVX (ADV dann))) (LK (VXFIN (VAFIN wurden))) (MF (NX (PPER wir)) (PX (PX (APPRART am) (NX (NN achtundzwanzigsten))) (ADVX (ADV abends))) (ADVX (ADV einfach)) (ADVX (ADV wieder))) (VC (VXINF (VVINF zuruckfahren)))), (SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VAFIN wurde))) (MF (NX (PPER ich)) (ADVX (ADV vielleicht))) (VC (VXINF (VVINF sagen))) (NF (SIMPX (VF (NX (PPER wir))) (LK (VXFIN (VVFIN nehmen))) (MF (NX (ART das) (NN flugzeug)))))), (SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VVFIN gibt))) (MF (NX (PPER es)) (NX (ART einen) (NN flug)) (PX (NX (NX (ADJX (CARD siebzehn)) (NN uhr)) (ADJX (CARD zwanzig))) (ADJX (ADVX (ADV sogar)) (ADJX (ADJX (ADJD stundlich)) (PX (APPR bis) (NX (NX (ADJX (CARD einundzwanzig)) (NN uhr)) (ADJX (CARD zwanzig))))))))), (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VVFIN heist))) (NF (SIMPX (VF (NX (PPER wir))) (FKOORD (LKMVC (LK (VXFIN (VMFIN konnen))) (MF (ADVX (ADV auch)) (ADVX (ADV noch)) (VF (PX (APPR um) (NX (NX (CARD zwanzig)) (PX (APPR nach) (NX (CARD acht)))))) (SIMPX (LK (VXFIN (VMFIN konnen))) (MF (NX (PPER wir)) (PX (APPR in) (NX (NE hannover)))))) (VC (VXINF (VVINF abfliegen)))) (KON und) (LKM (LK (VXFIN (VAFIN sind))) (MF (NX (APPR in) (NX (ADJX (CARD siebzig)) (NN minuten))) (PX (APPR in) (NX (NE munchen)))))))))], 'left siblings': [(DM (ITJ okay)), (NX (ADJX (ADJA siebenundzwanzigster)) (NN januar))], 'auto preterminal span': (3, 7), 'span': (3, 7), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM okay)
		(NX siebenundzwanzigster januar)
		(SIMPX dann fahren wir los)
		(APPR um)
		[01;31m(LKM[00m
			(LK nehmen)
			[01;33m(MF[00m (MF den ice um zehn uhr)[01;31m)[00m
		(SIMPX sind um funfzehn uhr in hannover) [01;33mMF)[00m
		(SIMPX nehmen da ein taxi)
		(KON und)
		(KON und)
		(KON und)
		(LKMVC kommen rechtzeitig an)
		(SIMPX und dann wurden wir am achtundzwanzigsten abends einfach wieder zuruckfahren)
		[01;31m(SIMPX[00m
			(VF da)
			(LK wurde)
			(MF ich vielleicht)
			(VC sagen)
			(NF wir nehmen das flugzeug)[01;31m)[00m
		(SIMPX [01;33m(SIMPX[00m
			(VF da)
			(LK gibt)
			[01;31m(MF[00m
				(NX es)
				(NX einen flug) [01;33mSIMPX)[00m
				(PX
					(NX siebzehn uhr zwanzig)
					[01;31m(ADJX[00m
						(ADVX sogar)
						[01;31m(ADJX[00m
							(ADJX stundlich)
							(PX bis einundzwanzig uhr zwanzig)[01;31m)[00m[01;31m)[00m)[01;31m)[00m)
		[01;31m(SIMPX[00m
			(VF das)
			(LK heist)
			(NF
				(SIMPX
					(VF wir)
					[01;31m(FKOORD[00m
						(LKMVC
							(LK konnen)
							[01;31m(MF[00m
								(ADVX auch)
								(ADVX noch)
								(VF um zwanzig nach acht)
								[01;31m(SIMPX[00m [01;33m(LKMVC[00m
									(LK konnen)
									(MF wir in hannover)[01;31m)[00m[01;31m)[00m
							(VC abfliegen)) [01;33mLKMVC)[00m
						(KON und)
						(LKM sind in siebzig minuten in munchen)[01;31m)[00m))[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['DM', 'NX', 'SIMPX', 'APPR', 'LKM', 'SIMPX', 'SIMPX', 'KON', 'KON', 'KON', 'LKMVC', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADJA', 'NN', 'ADV', 'VVFIN', 'PPER', 'PTKVZ', 'APPR', 'VVFIN', 'ART', 'NE', 'APPR', 'CARD', 'NN', 'VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE', 'VVFIN', 'ADV', 'ART', 'NN', 'KON', 'KON', 'KON', 'VVFIN', 'ADJD', 'PTKVZ', 'KON', 'ADV', 'VAFIN', 'PPER', 'APPRART', 'NN', 'ADV', 'ADV', 'ADV', 'VVINF', 'ADV', 'VAFIN', 'PPER', 'ADV', 'VVINF', 'PPER', 'VVFIN', 'ART', 'NN', 'ADV', 'VVFIN', 'PPER', 'ART', 'NN', 'CARD', 'NN', 'CARD', 'ADV', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'PDS', 'VVFIN', 'PPER', 'VMFIN', 'ADV', 'ADV', 'APPR', 'CARD', 'APPR', 'CARD', 'VMFIN', 'PPER', 'APPR', 'NE', 'VVINF', 'KON', 'VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE'), 'right siblings': ['SIMPX', 'SIMPX', 'KON', 'KON', 'KON', 'LKMVC', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 85), 'span': (8, 14), 'left siblings': ['DM', 'NX', 'SIMPX', 'APPR'], 'label': 'LKM', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(NX siebenundzwanzigster januar)
		(SIMPX dann fahren wir los)
		(APPR um)
		(LK nehmen)
		[01;36m(MF[00m
			(MF den ice um zehn uhr)
			(SIMPX sind um funfzehn uhr in hannover)[01;36m)[00m
		(SIMPX nehmen da ein taxi)
		(KON und)
		(KON und)
		(KON und)
		(LKMVC kommen rechtzeitig an)
		(SIMPX und dann wurden wir am achtundzwanzigsten abends einfach wieder zuruckfahren)
		[01;31m(SIMPX[00m
			(VF da)
			(LK wurde)
			(MF ich vielleicht)
			(VC sagen)
			(NF wir nehmen das flugzeug)[01;31m)[00m
		(SIMPX [01;33m(SIMPX[00m
			(VF da)
			(LK gibt)
			[01;31m(MF[00m
				(NX es)
				(NX einen flug) [01;33mSIMPX)[00m
				(PX
					(NX siebzehn uhr zwanzig)
					[01;31m(ADJX[00m
						(ADVX sogar)
						[01;31m(ADJX[00m
							(ADJX stundlich)
							(PX bis einundzwanzig uhr zwanzig)[01;31m)[00m[01;31m)[00m)[01;31m)[00m)
		[01;31m(SIMPX[00m
			(VF das)
			(LK heist)
			(NF
				(SIMPX
					(VF wir)
					[01;31m(FKOORD[00m
						(LKMVC
							(LK konnen)
							[01;31m(MF[00m
								(ADVX auch)
								(ADVX noch)
								(VF um zwanzig nach acht)
								[01;31m(SIMPX[00m [01;33m(LKMVC[00m
									(LK konnen)
									(MF wir in hannover)[01;31m)[00m[01;31m)[00m
							(VC abfliegen)) [01;33mLKMVC)[00m
						(KON und)
						(LKM sind in siebzig minuten in munchen)[01;31m)[00m))[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['MF', 'SIMPX'], 'family': ['DM', 'NX', 'SIMPX', 'APPR', 'LK', 'MF', 'SIMPX', 'KON', 'KON', 'KON', 'LKMVC', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NE', 'APPR', 'CARD', 'NN', 'VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE'), 'right siblings': [(SIMPX (LK (VXFIN (VVFIN nehmen))) (MF (ADVX (ADV da)) (NX (ART ein) (NN taxi)))), (KON und), (KON und), (KON und), (LKMVC (LK (VXFIN (VVFIN kommen))) (MF (ADJX (ADJD rechtzeitig))) (VC (PTKVZ an))), (SIMPX (KOORD (KON und)) (VF (ADVX (ADV dann))) (LK (VXFIN (VAFIN wurden))) (MF (NX (PPER wir)) (PX (PX (APPRART am) (NX (NN achtundzwanzigsten))) (ADVX (ADV abends))) (ADVX (ADV einfach)) (ADVX (ADV wieder))) (VC (VXINF (VVINF zuruckfahren)))), (SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VAFIN wurde))) (MF (NX (PPER ich)) (ADVX (ADV vielleicht))) (VC (VXINF (VVINF sagen))) (NF (SIMPX (VF (NX (PPER wir))) (LK (VXFIN (VVFIN nehmen))) (MF (NX (ART das) (NN flugzeug)))))), (SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VVFIN gibt))) (MF (NX (PPER es)) (NX (ART einen) (NN flug)) (PX (NX (NX (ADJX (CARD siebzehn)) (NN uhr)) (ADJX (CARD zwanzig))) (ADJX (ADVX (ADV sogar)) (ADJX (ADJX (ADJD stundlich)) (PX (APPR bis) (NX (NX (ADJX (CARD einundzwanzig)) (NN uhr)) (ADJX (CARD zwanzig))))))))), (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VVFIN heist))) (NF (SIMPX (VF (NX (PPER wir))) (FKOORD (LKMVC (LK (VXFIN (VMFIN konnen))) (MF (ADVX (ADV auch)) (ADVX (ADV noch)) (VF (PX (APPR um) (NX (NX (CARD zwanzig)) (PX (APPR nach) (NX (CARD acht)))))) (SIMPX (LK (VXFIN (VMFIN konnen))) (MF (NX (PPER wir)) (PX (APPR in) (NX (NE hannover)))))) (VC (VXINF (VVINF abfliegen)))) (KON und) (LKM (LK (VXFIN (VAFIN sind))) (MF (NX (APPR in) (NX (ADJX (CARD siebzig)) (NN minuten))) (PX (APPR in) (NX (NE munchen)))))))))], 'left siblings': [(DM (ITJ okay)), (NX (ADJX (ADJA siebenundzwanzigster)) (NN januar)), (SIMPX (VF (ADVX (ADV dann))) (LK (VXFIN (VVFIN fahren))) (MF (NX (PPER wir))) (VC (PTKVZ los))), (APPR um), (LK (VXFIN (VVFIN nehmen)))], 'auto preterminal span': (9, 20), 'span': (9, 20), 'parent': 'TURN', 'label': 'MF', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM okay)
		(NX siebenundzwanzigster januar)
		(SIMPX dann fahren wir los)
		(APPR um)
		(LK nehmen)
		(MF den ice um zehn uhr sind um funfzehn uhr in hannover)
		(SIMPX nehmen da ein taxi)
		(KON und)
		(KON und)
		(KON und)
		(LKMVC kommen rechtzeitig an)
		(SIMPX und dann wurden wir am achtundzwanzigsten abends einfach wieder zuruckfahren)
		[01;31m(SIMPX[00m
			(VF da)
			(LK wurde)
			(MF ich vielleicht)
			(VC sagen)
			(NF wir nehmen das flugzeug)[01;31m)[00m
		(SIMPX [01;33m(SIMPX[00m
			(VF da)
			(LK gibt)
			[01;31m(MF[00m
				(NX es)
				(NX einen flug) [01;33mSIMPX)[00m
				(PX
					(NX siebzehn uhr zwanzig)
					[01;31m(ADJX[00m
						(ADVX sogar)
						[01;31m(ADJX[00m
							(ADJX stundlich)
							(PX bis einundzwanzig uhr zwanzig)[01;31m)[00m[01;31m)[00m)[01;31m)[00m)
		[01;31m(SIMPX[00m
			(VF das)
			(LK heist)
			(NF
				(SIMPX
					(VF wir)
					[01;31m(FKOORD[00m
						(LKMVC
							(LK konnen)
							[01;31m(MF[00m
								(ADVX auch)
								(ADVX noch)
								(VF um zwanzig nach acht)
								[01;31m(SIMPX[00m [01;33m(LKMVC[00m
									(LK konnen)
									(MF wir in hannover)[01;31m)[00m[01;31m)[00m
							(VC abfliegen)) [01;33mLKMVC)[00m
						(KON und)
						(LKM sind in siebzig minuten in munchen)[01;31m)[00m))[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'VC', 'NF'], 'family': ['DM', 'NX', 'SIMPX', 'APPR', 'LK', 'MF', 'SIMPX', 'KON', 'KON', 'KON', 'LKMVC', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADJA', 'NN', 'ADV', 'VVFIN', 'PPER', 'PTKVZ', 'APPR', 'VVFIN', 'ART', 'NE', 'APPR', 'CARD', 'NN', 'VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE', 'VVFIN', 'ADV', 'ART', 'NN', 'KON', 'KON', 'KON', 'VVFIN', 'ADJD', 'PTKVZ', 'KON', 'ADV', 'VAFIN', 'PPER', 'APPRART', 'NN', 'ADV', 'ADV', 'ADV', 'VVINF', 'ADV', 'VAFIN', 'PPER', 'ADV', 'VVINF', 'PPER', 'VVFIN', 'ART', 'NN', 'ADV', 'VVFIN', 'PPER', 'ART', 'NN', 'CARD', 'NN', 'CARD', 'ADV', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'PDS', 'VVFIN', 'PPER', 'VMFIN', 'ADV', 'ADV', 'APPR', 'CARD', 'APPR', 'CARD', 'VMFIN', 'PPER', 'APPR', 'NE', 'VVINF', 'KON', 'VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE'), 'right siblings': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 85), 'span': (40, 49), 'left siblings': ['DM', 'NX', 'SIMPX', 'APPR', 'LK', 'MF', 'SIMPX', 'KON', 'KON', 'KON', 'LKMVC', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(NX siebenundzwanzigster januar)
		(SIMPX dann fahren wir los)
		(APPR um)
		(LK nehmen)
		(MF den ice um zehn uhr sind um funfzehn uhr in hannover)
		(SIMPX nehmen da ein taxi)
		(KON und)
		(KON und)
		(KON und)
		(LKMVC kommen rechtzeitig an)
		(SIMPX und dann wurden wir am achtundzwanzigsten abends einfach wieder zuruckfahren)
		(VF da)
		(LK wurde)
		(MF ich vielleicht)
		(VC sagen)
		(NF wir nehmen das flugzeug)
		(SIMPX [01;33m(SIMPX[00m
			(VF da)
			(LK gibt)
			[01;31m(MF[00m
				(NX es)
				(NX einen flug) [01;33mSIMPX)[00m
				(PX
					(NX siebzehn uhr zwanzig)
					[01;31m(ADJX[00m
						(ADVX sogar)
						[01;31m(ADJX[00m
							(ADJX stundlich)
							(PX bis einundzwanzig uhr zwanzig)[01;31m)[00m[01;31m)[00m)[01;31m)[00m)
		[01;31m(SIMPX[00m
			(VF das)
			(LK heist)
			(NF
				(SIMPX
					(VF wir)
					[01;31m(FKOORD[00m
						(LKMVC
							(LK konnen)
							[01;31m(MF[00m
								(ADVX auch)
								(ADVX noch)
								(VF um zwanzig nach acht)
								[01;31m(SIMPX[00m [01;33m(LKMVC[00m
									(LK konnen)
									(MF wir in hannover)[01;31m)[00m[01;31m)[00m
							(VC abfliegen)) [01;33mLKMVC)[00m
						(KON und)
						(LKM sind in siebzig minuten in munchen)[01;31m)[00m))[01;31m)[00m))
Step:PP Attachment
{'subtrees': ['NX', 'NX', 'PX'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'ART', 'NN', 'CARD', 'NN', 'CARD', 'ADV', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (49, 63), 'span': (51, 63), 'left siblings': ['VF', 'LK'], 'label': 'MF', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(NX siebenundzwanzigster januar)
		(SIMPX dann fahren wir los)
		(APPR um)
		(LK nehmen)
		(MF den ice um zehn uhr sind um funfzehn uhr in hannover)
		(SIMPX nehmen da ein taxi)
		(KON und)
		(KON und)
		(KON und)
		(LKMVC kommen rechtzeitig an)
		(SIMPX und dann wurden wir am achtundzwanzigsten abends einfach wieder zuruckfahren)
		(VF da)
		(LK wurde)
		(MF ich vielleicht)
		(VC sagen)
		(NF wir nehmen das flugzeug)
		(SIMPX
			[01;36m(SIMPX[00m
				(VF da)
				(LK gibt)
				(NX es)
				(NX einen flug)[01;36m)[00m
			(PX
				(NX siebzehn uhr zwanzig)
				[01;31m(ADJX[00m
					(ADVX sogar)
					[01;31m(ADJX[00m
						(ADJX stundlich)
						(PX bis einundzwanzig uhr zwanzig)[01;31m)[00m[01;31m)[00m))
		[01;31m(SIMPX[00m
			(VF das)
			(LK heist)
			(NF
				(SIMPX
					(VF wir)
					[01;31m(FKOORD[00m
						(LKMVC
							(LK konnen)
							[01;31m(MF[00m
								(ADVX auch)
								(ADVX noch)
								(VF um zwanzig nach acht)
								[01;31m(SIMPX[00m [01;33m(LKMVC[00m
									(LK konnen)
									(MF wir in hannover)[01;31m)[00m[01;31m)[00m
							(VC abfliegen)) [01;33mLKMVC)[00m
						(KON und)
						(LKM sind in siebzig minuten in munchen)[01;31m)[00m))[01;31m)[00m))
Step:UNSET add
{'subtrees': ['VF', 'LK', 'NX', 'NX'], 'family': ['SIMPX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'ART', 'NN'), 'right siblings': [(PX (NX (NX (ADJX (CARD siebzehn)) (NN uhr)) (ADJX (CARD zwanzig))) (ADJX (ADVX (ADV sogar)) (ADJX (ADJX (ADJD stundlich)) (PX (APPR bis) (NX (NX (ADJX (CARD einundzwanzig)) (NN uhr)) (ADJX (CARD zwanzig)))))))], 'left siblings': [], 'auto preterminal span': (49, 54), 'span': (49, 54), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM okay)
		(NX siebenundzwanzigster januar)
		(SIMPX dann fahren wir los)
		(APPR um)
		(LK nehmen)
		(MF den ice um zehn uhr sind um funfzehn uhr in hannover)
		(SIMPX nehmen da ein taxi)
		(KON und)
		(KON und)
		(KON und)
		(LKMVC kommen rechtzeitig an)
		(SIMPX und dann wurden wir am achtundzwanzigsten abends einfach wieder zuruckfahren)
		(VF da)
		(LK wurde)
		(MF ich vielleicht)
		(VC sagen)
		(NF wir nehmen das flugzeug)
		(SIMPX
			(SIMPX da gibt es einen flug)
			(PX
				(NX siebzehn uhr zwanzig)
				[01;31m(ADJX[00m
					(ADVX sogar)
					[01;31m(ADJX[00m
						(ADJX stundlich)
						(PX bis einundzwanzig uhr zwanzig)[01;31m)[00m[01;31m)[00m))
		[01;31m(SIMPX[00m
			(VF das)
			(LK heist)
			(NF
				(SIMPX
					(VF wir)
					[01;31m(FKOORD[00m
						(LKMVC
							(LK konnen)
							[01;31m(MF[00m
								(ADVX auch)
								(ADVX noch)
								(VF um zwanzig nach acht)
								[01;31m(SIMPX[00m [01;33m(LKMVC[00m
									(LK konnen)
									(MF wir in hannover)[01;31m)[00m[01;31m)[00m
							(VC abfliegen)) [01;33mLKMVC)[00m
						(KON und)
						(LKM sind in siebzig minuten in munchen)[01;31m)[00m))[01;31m)[00m))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'ADJX'], 'family': ['NX', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'NN', 'CARD', 'ADV', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD'), 'right siblings': [], 'parent': 'PX', 'auto preterminal span': (54, 63), 'span': (57, 63), 'left siblings': ['NX'], 'label': 'ADJX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(NX siebenundzwanzigster januar)
		(SIMPX dann fahren wir los)
		(APPR um)
		(LK nehmen)
		(MF den ice um zehn uhr sind um funfzehn uhr in hannover)
		(SIMPX nehmen da ein taxi)
		(KON und)
		(KON und)
		(KON und)
		(LKMVC kommen rechtzeitig an)
		(SIMPX und dann wurden wir am achtundzwanzigsten abends einfach wieder zuruckfahren)
		(VF da)
		(LK wurde)
		(MF ich vielleicht)
		(VC sagen)
		(NF wir nehmen das flugzeug)
		(SIMPX
			(SIMPX da gibt es einen flug)
			(PX
				(NX siebzehn uhr zwanzig)
				(ADVX sogar)
				[01;31m(ADJX[00m
					(ADJX stundlich)
					(PX bis einundzwanzig uhr zwanzig)[01;31m)[00m))
		[01;31m(SIMPX[00m
			(VF das)
			(LK heist)
			(NF
				(SIMPX
					(VF wir)
					[01;31m(FKOORD[00m
						(LKMVC
							(LK konnen)
							[01;31m(MF[00m
								(ADVX auch)
								(ADVX noch)
								(VF um zwanzig nach acht)
								[01;31m(SIMPX[00m [01;33m(LKMVC[00m
									(LK konnen)
									(MF wir in hannover)[01;31m)[00m[01;31m)[00m
							(VC abfliegen)) [01;33mLKMVC)[00m
						(KON und)
						(LKM sind in siebzig minuten in munchen)[01;31m)[00m))[01;31m)[00m))
Step:PP Attachment
{'subtrees': ['ADJX', 'PX'], 'family': ['NX', 'ADVX', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'NN', 'CARD', 'ADV', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD'), 'right siblings': [], 'parent': 'PX', 'auto preterminal span': (54, 63), 'span': (58, 63), 'left siblings': ['NX', 'ADVX'], 'label': 'ADJX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(NX siebenundzwanzigster januar)
		(SIMPX dann fahren wir los)
		(APPR um)
		(LK nehmen)
		(MF den ice um zehn uhr sind um funfzehn uhr in hannover)
		(SIMPX nehmen da ein taxi)
		(KON und)
		(KON und)
		(KON und)
		(LKMVC kommen rechtzeitig an)
		(SIMPX und dann wurden wir am achtundzwanzigsten abends einfach wieder zuruckfahren)
		(VF da)
		(LK wurde)
		(MF ich vielleicht)
		(VC sagen)
		(NF wir nehmen das flugzeug)
		(SIMPX da gibt es einen flug siebzehn uhr zwanzig sogar stundlich bis einundzwanzig uhr zwanzig)
		[01;31m(SIMPX[00m
			(VF das)
			(LK heist)
			(NF
				(SIMPX
					(VF wir)
					[01;31m(FKOORD[00m
						(LKMVC
							(LK konnen)
							[01;31m(MF[00m
								(ADVX auch)
								(ADVX noch)
								(VF um zwanzig nach acht)
								[01;31m(SIMPX[00m [01;33m(LKMVC[00m
									(LK konnen)
									(MF wir in hannover)[01;31m)[00m[01;31m)[00m
							(VC abfliegen)) [01;33mLKMVC)[00m
						(KON und)
						(LKM sind in siebzig minuten in munchen)[01;31m)[00m))[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'NF'], 'family': ['DM', 'NX', 'SIMPX', 'APPR', 'LK', 'MF', 'SIMPX', 'KON', 'KON', 'KON', 'LKMVC', 'SIMPX', 'VF', 'LK', 'MF', 'VC', 'NF', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADJA', 'NN', 'ADV', 'VVFIN', 'PPER', 'PTKVZ', 'APPR', 'VVFIN', 'ART', 'NE', 'APPR', 'CARD', 'NN', 'VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE', 'VVFIN', 'ADV', 'ART', 'NN', 'KON', 'KON', 'KON', 'VVFIN', 'ADJD', 'PTKVZ', 'KON', 'ADV', 'VAFIN', 'PPER', 'APPRART', 'NN', 'ADV', 'ADV', 'ADV', 'VVINF', 'ADV', 'VAFIN', 'PPER', 'ADV', 'VVINF', 'PPER', 'VVFIN', 'ART', 'NN', 'ADV', 'VVFIN', 'PPER', 'ART', 'NN', 'CARD', 'NN', 'CARD', 'ADV', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'PDS', 'VVFIN', 'PPER', 'VMFIN', 'ADV', 'ADV', 'APPR', 'CARD', 'APPR', 'CARD', 'VMFIN', 'PPER', 'APPR', 'NE', 'VVINF', 'KON', 'VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 85), 'span': (63, 85), 'left siblings': ['DM', 'NX', 'SIMPX', 'APPR', 'LK', 'MF', 'SIMPX', 'KON', 'KON', 'KON', 'LKMVC', 'SIMPX', 'VF', 'LK', 'MF', 'VC', 'NF', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(NX siebenundzwanzigster januar)
		(SIMPX dann fahren wir los)
		(APPR um)
		(LK nehmen)
		(MF den ice um zehn uhr sind um funfzehn uhr in hannover)
		(SIMPX nehmen da ein taxi)
		(KON und)
		(KON und)
		(KON und)
		(LKMVC kommen rechtzeitig an)
		(SIMPX und dann wurden wir am achtundzwanzigsten abends einfach wieder zuruckfahren)
		(VF da)
		(LK wurde)
		(MF ich vielleicht)
		(VC sagen)
		(NF wir nehmen das flugzeug)
		(SIMPX da gibt es einen flug siebzehn uhr zwanzig sogar stundlich bis einundzwanzig uhr zwanzig)
		(VF das)
		(LK heist)
		(NF
			(SIMPX
				(VF wir)
				[01;31m(FKOORD[00m
					(LKMVC
						(LK konnen)
						[01;31m(MF[00m
							(ADVX auch)
							(ADVX noch)
							(VF um zwanzig nach acht)
							[01;31m(SIMPX[00m [01;33m(LKMVC[00m
								(LK konnen)
								(MF wir in hannover)[01;31m)[00m[01;31m)[00m
						(VC abfliegen)) [01;33mLKMVC)[00m
					(KON und)
					(LKM sind in siebzig minuten in munchen)[01;31m)[00m))))
Step:UNSET remove
{'subtrees': ['LKMVC', 'KON', 'LKM'], 'family': ['VF', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VMFIN', 'ADV', 'ADV', 'APPR', 'CARD', 'APPR', 'CARD', 'VMFIN', 'PPER', 'APPR', 'NE', 'VVINF', 'KON', 'VAFIN', 'APPR', 'CARD', 'NN', 'APPR', 'NE'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (65, 85), 'span': (66, 85), 'left siblings': ['VF'], 'label': 'FKOORD', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(NX siebenundzwanzigster januar)
		(SIMPX dann fahren wir los)
		(APPR um)
		(LK nehmen)
		(MF den ice um zehn uhr sind um funfzehn uhr in hannover)
		(SIMPX nehmen da ein taxi)
		(KON und)
		(KON und)
		(KON und)
		(LKMVC kommen rechtzeitig an)
		(SIMPX und dann wurden wir am achtundzwanzigsten abends einfach wieder zuruckfahren)
		(VF da)
		(LK wurde)
		(MF ich vielleicht)
		(VC sagen)
		(NF wir nehmen das flugzeug)
		(SIMPX da gibt es einen flug siebzehn uhr zwanzig sogar stundlich bis einundzwanzig uhr zwanzig)
		(VF das)
		(LK heist)
		(NF
			(SIMPX
				(VF wir)
				(LKMVC
					(LK konnen)
					[01;31m(MF[00m
						(ADVX auch)
						(ADVX noch)
						(VF um zwanzig nach acht)
						[01;31m(SIMPX[00m [01;33m(LKMVC[00m
							(LK konnen)
							(MF wir in hannover)[01;31m)[00m[01;31m)[00m
					(VC abfliegen)) [01;33mLKMVC)[00m
				(KON und)
				(LKM sind in siebzig minuten in munchen)))))
Step:Clause Attachment
{'subtrees': ['ADVX', 'ADVX', 'VF', 'SIMPX'], 'family': ['LK', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('VMFIN', 'ADV', 'ADV', 'APPR', 'CARD', 'APPR', 'CARD', 'VMFIN', 'PPER', 'APPR', 'NE', 'VVINF'), 'right siblings': ['VC'], 'parent': 'LKMVC', 'auto preterminal span': (66, 78), 'span': (67, 77), 'left siblings': ['LK'], 'label': 'MF', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(NX siebenundzwanzigster januar)
		(SIMPX dann fahren wir los)
		(APPR um)
		(LK nehmen)
		(MF den ice um zehn uhr sind um funfzehn uhr in hannover)
		(SIMPX nehmen da ein taxi)
		(KON und)
		(KON und)
		(KON und)
		(LKMVC kommen rechtzeitig an)
		(SIMPX und dann wurden wir am achtundzwanzigsten abends einfach wieder zuruckfahren)
		(VF da)
		(LK wurde)
		(MF ich vielleicht)
		(VC sagen)
		(NF wir nehmen das flugzeug)
		(SIMPX da gibt es einen flug siebzehn uhr zwanzig sogar stundlich bis einundzwanzig uhr zwanzig)
		(VF das)
		(LK heist)
		(NF
			(SIMPX
				(VF wir)
				(LKMVC
					(LK konnen)
					(ADVX auch)
					(ADVX noch)
					(VF um zwanzig nach acht)
					[01;36m(LKMVC[00m
						[01;31m(SIMPX[00m
							(LK konnen)
							(MF wir in hannover)[01;31m)[00m
						(VC abfliegen)[01;36m)[00m)
				(KON und)
				(LKM sind in siebzig minuten in munchen)))))
Step:UNSET add
{'subtrees': ['SIMPX', 'VC'], 'family': ['LK', 'ADVX', 'ADVX', 'VF', 'LKMVC'], 'over_word': False, 'over words': False, 'auto preterminals': ('VMFIN', 'PPER', 'APPR', 'NE', 'VVINF'), 'right siblings': [], 'left siblings': [(LK (VXFIN (VMFIN konnen))), (ADVX (ADV auch)), (ADVX (ADV noch)), (VF (PX (APPR um) (NX (NX (CARD zwanzig)) (PX (APPR nach) (NX (CARD acht))))))], 'auto preterminal span': (73, 78), 'span': (73, 78), 'parent': 'LKMVC', 'label': 'LKMVC', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM okay)
		(NX siebenundzwanzigster januar)
		(SIMPX dann fahren wir los)
		(APPR um)
		(LK nehmen)
		(MF den ice um zehn uhr sind um funfzehn uhr in hannover)
		(SIMPX nehmen da ein taxi)
		(KON und)
		(KON und)
		(KON und)
		(LKMVC kommen rechtzeitig an)
		(SIMPX und dann wurden wir am achtundzwanzigsten abends einfach wieder zuruckfahren)
		(VF da)
		(LK wurde)
		(MF ich vielleicht)
		(VC sagen)
		(NF wir nehmen das flugzeug)
		(SIMPX da gibt es einen flug siebzehn uhr zwanzig sogar stundlich bis einundzwanzig uhr zwanzig)
		(VF das)
		(LK heist)
		(NF
			(SIMPX
				(VF wir)
				(LKMVC
					(LK konnen)
					(ADVX auch)
					(ADVX noch)
					(VF um zwanzig nach acht)
					(LKMVC
						[01;31m(SIMPX[00m
							(LK konnen)
							(MF wir in hannover)[01;31m)[00m
						(VC abfliegen)))
				(KON und)
				(LKM sind in siebzig minuten in munchen)))))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['SIMPX', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('VMFIN', 'PPER', 'APPR', 'NE', 'VVINF'), 'right siblings': ['VC'], 'parent': 'LKMVC', 'auto preterminal span': (73, 78), 'span': (73, 77), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP okay siebenundzwanzigster januar dann fahren wir los um nehmen den ice um zehn uhr sind um funfzehn uhr in hannover nehmen da ein taxi und und und kommen rechtzeitig an und dann wurden wir am achtundzwanzigsten abends einfach wieder zuruckfahren da wurde ich vielleicht sagen wir nehmen das flugzeug da gibt es einen flug siebzehn uhr zwanzig sogar stundlich bis einundzwanzig uhr zwanzig das heist wir konnen auch noch um zwanzig nach acht konnen wir in hannover abfliegen und sind in siebzig minuten in munchen)

Sentence 442:
0 Initial errors
0 on fringe, 0 iterations

Sentence 443:
1 Initial errors
0 on fringe, 1 iterations
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM genau)
		(DM also)
		(SIMPX dann haben wir einen termin)
		[01;31m(SIMPX[00m
			(VF wir)
			(LK haben)
			(MF einen zug)[01;31m)[00m
		(SIMPX wir haben einen flug fur die ruckfahrt)
		(SIMPX wir haben ein hotel fur die nacht)
		(SIMPX wir haben ein treffen)
		(SIMPX dann konnen wir uns jetzt noch uberlegen ob wir abends irgendwas machen wollen)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'ADV', 'VAFIN', 'PPER', 'ART', 'NN', 'PPER', 'VAFIN', 'ART', 'NN', 'PPER', 'VAFIN', 'ART', 'NN', 'APPR', 'ART', 'NN', 'PPER', 'VAFIN', 'ART', 'NN', 'APPR', 'ART', 'NN', 'PPER', 'VAFIN', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'VVINF', 'KOUS', 'PPER', 'ADV', 'PIS', 'VVINF', 'VMFIN'), 'right siblings': ['SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 42), 'span': (7, 11), 'left siblings': ['DM', 'DM', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP genau also dann haben wir einen termin wir haben einen zug wir haben einen flug fur die ruckfahrt wir haben ein hotel fur die nacht wir haben ein treffen dann konnen wir uns jetzt noch uberlegen ob wir abends irgendwas machen wollen)

Sentence 444:
0 Initial errors
0 on fringe, 0 iterations

Sentence 445:
0 Initial errors
0 on fringe, 0 iterations

Sentence 446:
0 Initial errors
0 on fringe, 0 iterations

Sentence 447:
5 Initial errors
0 on fringe, 5 iterations
1 Error:Unary
1 Error:UNSET remove
1 Error:Modifier Attachment
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM okay)
		(SIMPX
			(LK konnen)
			(MF
				(NX wir)
				(PX
					[01;31m(PX[00m
						(APPR um)
						[01;33m(NX[00m (NX zehn uhr)[01;31m)[00m
					(ADVX etwa))) [01;33mNX)[00m
			[01;31m(VC[00m
				[01;31m(VXINF[00m
					(VXINF wegfahren)
					[01;36m(VC[00m
						(VXINF
							(VVINF wegfliegen))[01;36m)[00m[01;31m)[00m[01;31m)[00m)
		(PX je nachdem)))
Step:Unary
{'subtrees': ['VXINF'], 'family': ['VXINF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVINF',), 'right siblings': [], 'left siblings': [(VXINF (VVINF wegfahren))], 'auto preterminal span': (8, 9), 'span': (8, 9), 'parent': 'VXINF', 'label': 'VC', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM okay)
		(SIMPX
			(LK konnen)
			(MF
				(NX wir)
				(PX
					[01;31m(PX[00m
						(APPR um)
						[01;33m(NX[00m (NX zehn uhr)[01;31m)[00m
					(ADVX etwa))) [01;33mNX)[00m
			[01;31m(VC[00m
				[01;31m(VXINF[00m
					(VXINF wegfahren)
					(VC wegfliegen)[01;31m)[00m[01;31m)[00m)
		(PX je nachdem)))
Step:UNSET remove
{'subtrees': ['APPR', 'NX'], 'family': ['PX', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'CARD', 'NN', 'ADV'), 'right siblings': ['ADVX'], 'parent': 'PX', 'auto preterminal span': (3, 7), 'span': (3, 6), 'left siblings': [], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(SIMPX
			(LK konnen)
			(MF
				(NX wir)
				(PX
					(APPR um)
					[01;36m(NX[00m
						(NX zehn uhr)
						(ADVX etwa)[01;36m)[00m))
			[01;31m(VC[00m
				[01;31m(VXINF[00m
					(VXINF wegfahren)
					(VC wegfliegen)[01;31m)[00m[01;31m)[00m)
		(PX je nachdem)))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADVX'], 'family': ['APPR', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'NN', 'ADV'), 'right siblings': [], 'left siblings': [(APPR um)], 'auto preterminal span': (4, 7), 'span': (4, 7), 'parent': 'PX', 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM okay)
		(SIMPX
			(LK konnen)
			(MF wir um zehn uhr etwa)
			[01;31m(VC[00m
				[01;31m(VXINF[00m
					(VXINF wegfahren)
					(VC wegfliegen)[01;31m)[00m[01;31m)[00m)
		(PX je nachdem)))
Step:Unary
{'subtrees': ['VXINF'], 'family': ['LK', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('VMFIN', 'PPER', 'APPR', 'CARD', 'NN', 'ADV', 'VVINF', 'VVINF'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (1, 9), 'span': (7, 9), 'left siblings': ['LK', 'MF'], 'label': 'VC', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(SIMPX
			(LK konnen)
			(MF wir um zehn uhr etwa)
			[01;31m(VXINF[00m
				(VXINF wegfahren)
				(VC wegfliegen)[01;31m)[00m)
		(PX je nachdem)))
Step:UNSET remove
{'subtrees': ['VXINF', 'VC'], 'family': ['LK', 'MF', 'VXINF'], 'over_word': False, 'over words': False, 'auto preterminals': ('VMFIN', 'PPER', 'APPR', 'CARD', 'NN', 'ADV', 'VVINF', 'VVINF'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (1, 9), 'span': (7, 9), 'left siblings': ['LK', 'MF'], 'label': 'VXINF', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP okay konnen wir um zehn uhr etwa wegfahren wegfliegen je nachdem)

Sentence 448:
0 Initial errors
0 on fringe, 0 iterations

Sentence 449:
23 Initial errors
0 on fringe, 17 iterations
3 Error:NP Attachment
2 Error:Different label
2 Error:Single Word Phrase
2 Error:Different label
2 Error:Single Word Phrase
1 Error:Clause Attachment
1 Error:Modifier Attachment
1 Error:NP Internal Structure
1 Error:UNSET remove
1 Error:PP Attachment
1 Error:PP Attachment
1 Error:PP Attachment
1 Error:PP Attachment
1 Error:UNSET add
1 Error:UNSET remove
1 Error:Modifier Attachment
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(NX hotels)
		(DM ja)
		(SIMPX mussen wir mal kucken)
		[01;36m(SIMPX[00m
			(SIMPX
				(VF ich)
				(LK habe)
				[01;31m(MF[00m
					(ADVX hier)
					(NX eine liste von meiner sekretarin)[01;31m)[00m)
			[01;36m(SIMPX[00m [01;31m(NX[00m
				(ADJX drei)
				(NN moglichkeiten)[01;31m)[00m[01;36m)[00m[01;36m)[00m
		[01;31m(NX[00m
			[01;31m(NX[00m
				[01;31m(NX[00m
					[01;36m(ADJX[00m [01;31m(NX[00m
						(NE maritimhotel)[01;31m)[00m[01;36m)[00m
					[01;33m(NX[00m (PX am hauptbahnhof)[01;31m)[00m
				[01;31m(NX[00m
					(NX funfzehn minuten) [01;33mNX)[00m
					(PX zum zentrum)[01;31m)[00m[01;31m)[00m
			(DM na ja)
			[01;31m(SIMPX[00m
				(VF garage)
				(LK brauchen)
				[01;31m(MF[00m [01;33m(MF (MF[00m
					(NX wir)
					(ADVX ja)
					(ADVX nicht)[01;31m)[00m[01;31m)[00m
			[01;31m(NX[00m
				(NX ein hotel luisenhof) [01;33mMF)[00m
				(NX funf minuten vom bahnhof) [01;33mMF)[00m
				(NX
					[01;36m(NX[00m
						(NX bar)
						(NX restaurant)[01;36m)[00m
					(NX garage))[01;31m)[00m
			[01;36m(NX[00m [01;31m(ADJX[00m
				(NX alles)
				[01;36m(NX[00m [01;31m(ADJX[00m
					(ADJD uberflussig)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;36m)[00m
			(KON [01;33m(PX[00m und)
			[01;31m(NX[00m
				(PX direkt beim hauptbahnhof) [01;33mPX)[00m
				(ADVX noch)
				(NX ein hotel mit schwimm und dampfbad)[01;31m)[00m[01;31m)[00m
		(SIMPX brauchen wir es)))
Step:NP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'ADVX', 'ADVX', 'NX', 'NX'], 'mover info': [('NX', (30, 33)), ('NX', (33, 37))], 'old_family': ['NX', 'NX', 'NX'], 'start left siblings': [], 'auto preterminals': ('NE', 'APPRART', 'NN', 'CARD', 'NN', 'APPRART', 'NN', 'ITJ', 'PTKANT', 'NN', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'NN', 'NN', 'NN', 'PIS', 'ADJD', 'KON', 'ADV', 'APPRART', 'NN', 'ADV', 'ART', 'NN', 'APPR', 'TRUNC', 'KON', 'NN'), 'start right siblings': ['NX'], 'end left siblings': ['NX', 'ADVX', 'ADVX'], 'auto preterminal span': (16, 53), 'movers': ['NX', 'NX'], 'old_parent': 'NX', 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(NX hotels)
		(DM ja)
		(SIMPX mussen wir mal kucken)
		[01;36m(SIMPX[00m
			(SIMPX
				(VF ich)
				(LK habe)
				[01;31m(MF[00m
					(ADVX hier)
					(NX eine liste von meiner sekretarin)[01;31m)[00m)
			[01;36m(SIMPX[00m [01;31m(NX[00m
				(ADJX drei)
				(NN moglichkeiten)[01;31m)[00m[01;36m)[00m[01;36m)[00m
		[01;31m(NX[00m
			[01;31m(NX[00m
				[01;31m(NX[00m
					[01;36m(ADJX[00m [01;31m(NX[00m
						(NE maritimhotel)[01;31m)[00m[01;36m)[00m
					[01;33m(NX[00m (PX am hauptbahnhof)[01;31m)[00m
				[01;31m(NX[00m
					(NX funfzehn minuten) [01;33mNX)[00m
					(PX zum zentrum)[01;31m)[00m[01;31m)[00m
			(DM na ja)
			[01;31m(SIMPX[00m
				(VF garage)
				(LK brauchen)
				(MF
					[01;36m(MF[00m
						(NX wir)
						(ADVX ja)
						(ADVX nicht)
						(NX ein hotel luisenhof)[01;36m)[00m
					(NX funf minuten vom bahnhof))[01;31m)[00m
			(NX
				[01;36m(NX[00m
					(NX bar)
					(NX restaurant)[01;36m)[00m
				(NX garage))
			[01;36m(NX[00m [01;31m(ADJX[00m
				(NX alles)
				[01;36m(NX[00m [01;31m(ADJX[00m
					(ADJD uberflussig)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;36m)[00m
			(KON [01;33m(PX[00m und)
			[01;31m(NX[00m
				(PX direkt beim hauptbahnhof) [01;33mPX)[00m
				(ADVX noch)
				(NX ein hotel mit schwimm und dampfbad)[01;31m)[00m[01;31m)[00m
		(SIMPX brauchen wir es)))
Step:Different label
{'family': ['NX', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX'], 'auto preterminal span': (14, 16), 'span': (14, 16), 'subtrees': ['ADJX', 'NN'], 'parent': 'TURN', 'over_word': False, 'auto preterminals': ('CARD', 'NN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('NX', 'SIMPX')}
(TOP
	(TURN
		(NX hotels)
		(DM ja)
		(SIMPX mussen wir mal kucken)
		[01;36m(SIMPX[00m
			(SIMPX
				(VF ich)
				(LK habe)
				[01;31m(MF[00m
					(ADVX hier)
					(NX eine liste von meiner sekretarin)[01;31m)[00m)
			(SIMPX drei moglichkeiten)[01;36m)[00m
		[01;31m(NX[00m
			[01;31m(NX[00m
				[01;31m(NX[00m
					[01;36m(ADJX[00m [01;31m(NX[00m
						(NE maritimhotel)[01;31m)[00m[01;36m)[00m
					[01;33m(NX[00m (PX am hauptbahnhof)[01;31m)[00m
				[01;31m(NX[00m
					(NX funfzehn minuten) [01;33mNX)[00m
					(PX zum zentrum)[01;31m)[00m[01;31m)[00m
			(DM na ja)
			[01;31m(SIMPX[00m
				(VF garage)
				(LK brauchen)
				(MF
					[01;36m(MF[00m
						(NX wir)
						(ADVX ja)
						(ADVX nicht)
						(NX ein hotel luisenhof)[01;36m)[00m
					(NX funf minuten vom bahnhof))[01;31m)[00m
			(NX
				[01;36m(NX[00m
					(NX bar)
					(NX restaurant)[01;36m)[00m
				(NX garage))
			[01;36m(NX[00m [01;31m(ADJX[00m
				(NX alles)
				[01;36m(NX[00m [01;31m(ADJX[00m
					(ADJD uberflussig)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;36m)[00m
			(KON [01;33m(PX[00m und)
			[01;31m(NX[00m
				(PX direkt beim hauptbahnhof) [01;33mPX)[00m
				(ADVX noch)
				(NX ein hotel mit schwimm und dampfbad)[01;31m)[00m[01;31m)[00m
		(SIMPX brauchen wir es)))
Step:Single Word Phrase
{'family': ['ADJX', 'PX'], 'auto preterminal span': (16, 17), 'span': (16, 17), 'subtrees': ['NE'], 'parent': 'NX', 'over_word': True, 'auto preterminals': ('NE',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('NX', 'ADJX')}
(TOP
	(TURN
		(NX hotels)
		(DM ja)
		(SIMPX mussen wir mal kucken)
		[01;36m(SIMPX[00m
			(SIMPX
				(VF ich)
				(LK habe)
				[01;31m(MF[00m
					(ADVX hier)
					(NX eine liste von meiner sekretarin)[01;31m)[00m)
			(SIMPX drei moglichkeiten)[01;36m)[00m
		[01;31m(NX[00m
			[01;31m(NX[00m
				[01;31m(NX[00m
					(ADJX maritimhotel)
					[01;33m(NX[00m (PX am hauptbahnhof)[01;31m)[00m
				[01;31m(NX[00m
					(NX funfzehn minuten) [01;33mNX)[00m
					(PX zum zentrum)[01;31m)[00m[01;31m)[00m
			(DM na ja)
			[01;31m(SIMPX[00m
				(VF garage)
				(LK brauchen)
				(MF
					[01;36m(MF[00m
						(NX wir)
						(ADVX ja)
						(ADVX nicht)
						(NX ein hotel luisenhof)[01;36m)[00m
					(NX funf minuten vom bahnhof))[01;31m)[00m
			(NX
				[01;36m(NX[00m
					(NX bar)
					(NX restaurant)[01;36m)[00m
				(NX garage))
			[01;36m(NX[00m [01;31m(ADJX[00m
				(NX alles)
				[01;36m(NX[00m [01;31m(ADJX[00m
					(ADJD uberflussig)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;36m)[00m
			(KON [01;33m(PX[00m und)
			[01;31m(NX[00m
				(PX direkt beim hauptbahnhof) [01;33mPX)[00m
				(ADVX noch)
				(NX ein hotel mit schwimm und dampfbad)[01;31m)[00m[01;31m)[00m
		(SIMPX brauchen wir es)))
Step:Different label
{'family': ['NX', 'DM', 'SIMPX', 'NX', 'NX', 'KON', 'NX'], 'auto preterminal span': (40, 42), 'span': (40, 42), 'subtrees': ['NX', 'ADJX'], 'parent': 'NX', 'over_word': False, 'auto preterminals': ('PIS', 'ADJD'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('ADJX', 'NX')}
(TOP
	(TURN
		(NX hotels)
		(DM ja)
		(SIMPX mussen wir mal kucken)
		[01;36m(SIMPX[00m
			(SIMPX
				(VF ich)
				(LK habe)
				[01;31m(MF[00m
					(ADVX hier)
					(NX eine liste von meiner sekretarin)[01;31m)[00m)
			(SIMPX drei moglichkeiten)[01;36m)[00m
		[01;31m(NX[00m
			[01;31m(NX[00m
				[01;31m(NX[00m
					(ADJX maritimhotel)
					[01;33m(NX[00m (PX am hauptbahnhof)[01;31m)[00m
				[01;31m(NX[00m
					(NX funfzehn minuten) [01;33mNX)[00m
					(PX zum zentrum)[01;31m)[00m[01;31m)[00m
			(DM na ja)
			[01;31m(SIMPX[00m
				(VF garage)
				(LK brauchen)
				(MF
					[01;36m(MF[00m
						(NX wir)
						(ADVX ja)
						(ADVX nicht)
						(NX ein hotel luisenhof)[01;36m)[00m
					(NX funf minuten vom bahnhof))[01;31m)[00m
			(NX
				[01;36m(NX[00m
					(NX bar)
					(NX restaurant)[01;36m)[00m
				(NX garage))
			(NX
				(NX alles)
				[01;36m(NX[00m [01;31m(ADJX[00m
					(ADJD uberflussig)[01;31m)[00m[01;36m)[00m)
			(KON [01;33m(PX[00m und)
			[01;31m(NX[00m
				(PX direkt beim hauptbahnhof) [01;33mPX)[00m
				(ADVX noch)
				(NX ein hotel mit schwimm und dampfbad)[01;31m)[00m[01;31m)[00m
		(SIMPX brauchen wir es)))
Step:Single Word Phrase
{'family': ['NX', 'NX'], 'auto preterminal span': (41, 42), 'span': (41, 42), 'subtrees': ['ADJD'], 'parent': 'NX', 'over_word': True, 'auto preterminals': ('ADJD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'NX')}
(TOP
	(TURN
		(NX hotels)
		(DM ja)
		(SIMPX mussen wir mal kucken)
		[01;36m(SIMPX[00m
			(SIMPX
				(VF ich)
				(LK habe)
				[01;31m(MF[00m
					(ADVX hier)
					(NX eine liste von meiner sekretarin)[01;31m)[00m)
			(SIMPX drei moglichkeiten)[01;36m)[00m
		[01;31m(NX[00m
			[01;31m(NX[00m
				[01;31m(NX[00m
					(ADJX maritimhotel)
					[01;33m(NX[00m (PX am hauptbahnhof)[01;31m)[00m
				[01;31m(NX[00m
					(NX funfzehn minuten) [01;33mNX)[00m
					(PX zum zentrum)[01;31m)[00m[01;31m)[00m
			(DM na ja)
			[01;31m(SIMPX[00m
				(VF garage)
				(LK brauchen)
				(MF
					[01;36m(MF[00m
						(NX wir)
						(ADVX ja)
						(ADVX nicht)
						(NX ein hotel luisenhof)[01;36m)[00m
					(NX funf minuten vom bahnhof))[01;31m)[00m
			(NX
				[01;36m(NX[00m
					(NX bar)
					(NX restaurant)[01;36m)[00m
				(NX garage))
			(NX alles uberflussig)
			(KON [01;33m(PX[00m und)
			[01;31m(NX[00m
				(PX direkt beim hauptbahnhof) [01;33mPX)[00m
				(ADVX noch)
				(NX ein hotel mit schwimm und dampfbad)[01;31m)[00m[01;31m)[00m
		(SIMPX brauchen wir es)))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['NX', 'DM', 'SIMPX', 'SIMPX', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'APPR', 'PPOSAT', 'NN', 'CARD', 'NN'), 'right siblings': [(NX (NX (NX (ADJX (NE maritimhotel)) (PX (APPRART am) (NX (NN hauptbahnhof)))) (NX (NX (ADJX (CARD funfzehn)) (NN minuten)) (PX (APPRART zum) (NX (NN zentrum))))) (DM (ITJ na) (PTKANT ja)) (SIMPX (VF (NX (NN garage))) (LK (VXFIN (VVFIN brauchen))) (MF (NX (PPER wir)) (ADVX (ADV ja)) (ADVX (PTKNEG nicht)) (NX (ART ein) (NX (NX (NN hotel)) (NX (NE luisenhof)))) (NX (NX (ADJX (CARD funf)) (NN minuten)) (PX (APPRART vom) (NX (NN bahnhof)))))) (NX (NX (NN bar)) (NX (NN restaurant)) (NX (NN garage))) (NX (NX (PIS alles)) (NX (ADJD uberflussig))) (KON und) (NX (PX (ADVX (ADV direkt)) (APPRART beim) (NX (NN hauptbahnhof))) (ADVX (ADV noch)) (NX (NX (ART ein) (NN hotel)) (PX (APPR mit) (NX (TRUNC schwimm) (KON und) (NN dampfbad)))))), (SIMPX (LK (VXFIN (VVFIN brauchen))) (MF (NX (PPER wir)) (NX (PPER es))))], 'left siblings': [(NX (NN hotels)), (DM (PTKANT ja)), (SIMPX (LK (VXFIN (VMFIN mussen))) (MF (NX (PPER wir)) (ADVX (ADV mal))) (VC (VXINF (VVINF kucken))))], 'auto preterminal span': (6, 16), 'span': (6, 16), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(NX hotels)
		(DM ja)
		(SIMPX mussen wir mal kucken)
		(SIMPX
			(SIMPX
				(VF ich)
				(LK habe)
				[01;31m(MF[00m
					(ADVX hier)
					(NX eine liste von meiner sekretarin)[01;31m)[00m)
			(SIMPX drei moglichkeiten))
		[01;31m(NX[00m
			[01;31m(NX[00m
				[01;31m(NX[00m
					(ADJX maritimhotel)
					[01;33m(NX[00m (PX am hauptbahnhof)[01;31m)[00m
				[01;31m(NX[00m
					(NX funfzehn minuten) [01;33mNX)[00m
					(PX zum zentrum)[01;31m)[00m[01;31m)[00m
			(DM na ja)
			[01;31m(SIMPX[00m
				(VF garage)
				(LK brauchen)
				(MF
					[01;36m(MF[00m
						(NX wir)
						(ADVX ja)
						(ADVX nicht)
						(NX ein hotel luisenhof)[01;36m)[00m
					(NX funf minuten vom bahnhof))[01;31m)[00m
			(NX
				[01;36m(NX[00m
					(NX bar)
					(NX restaurant)[01;36m)[00m
				(NX garage))
			(NX alles uberflussig)
			(KON [01;33m(PX[00m und)
			[01;31m(NX[00m
				(PX direkt beim hauptbahnhof) [01;33mPX)[00m
				(ADVX noch)
				(NX ein hotel mit schwimm und dampfbad)[01;31m)[00m[01;31m)[00m
		(SIMPX brauchen wir es)))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADVX', 'ADVX', 'NX'], 'family': ['MF', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV', 'PTKNEG', 'ART', 'NN', 'NE'), 'right siblings': [(NX (NX (ADJX (CARD funf)) (NN minuten)) (PX (APPRART vom) (NX (NN bahnhof))))], 'left siblings': [], 'auto preterminal span': (27, 33), 'span': (27, 33), 'parent': 'MF', 'label': 'MF', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		(NX hotels)
		(DM ja)
		(SIMPX mussen wir mal kucken)
		(SIMPX
			(SIMPX
				(VF ich)
				(LK habe)
				[01;31m(MF[00m
					(ADVX hier)
					(NX eine liste von meiner sekretarin)[01;31m)[00m)
			(SIMPX drei moglichkeiten))
		[01;31m(NX[00m
			[01;31m(NX[00m
				[01;31m(NX[00m
					(ADJX maritimhotel)
					[01;33m(NX[00m (PX am hauptbahnhof)[01;31m)[00m
				[01;31m(NX[00m
					(NX funfzehn minuten) [01;33mNX)[00m
					(PX zum zentrum)[01;31m)[00m[01;31m)[00m
			(DM na ja)
			[01;31m(SIMPX[00m
				(VF garage)
				(LK brauchen)
				(MF wir ja nicht ein hotel luisenhof funf minuten vom bahnhof)[01;31m)[00m
			(NX
				[01;36m(NX[00m
					(NX bar)
					(NX restaurant)[01;36m)[00m
				(NX garage))
			(NX alles uberflussig)
			(KON [01;33m(PX[00m und)
			[01;31m(NX[00m
				(PX direkt beim hauptbahnhof) [01;33mPX)[00m
				(ADVX noch)
				(NX ein hotel mit schwimm und dampfbad)[01;31m)[00m[01;31m)[00m
		(SIMPX brauchen wir es)))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'NN'), 'right siblings': [(NX (NN garage))], 'left siblings': [], 'auto preterminal span': (37, 39), 'span': (37, 39), 'parent': 'NX', 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'add'}
(TOP
	(TURN
		(NX hotels)
		(DM ja)
		(SIMPX mussen wir mal kucken)
		(SIMPX
			(SIMPX
				(VF ich)
				(LK habe)
				[01;31m(MF[00m
					(ADVX hier)
					(NX eine liste von meiner sekretarin)[01;31m)[00m)
			(SIMPX drei moglichkeiten))
		[01;31m(NX[00m
			[01;31m(NX[00m
				[01;31m(NX[00m
					(ADJX maritimhotel)
					[01;33m(NX[00m (PX am hauptbahnhof)[01;31m)[00m
				[01;31m(NX[00m
					(NX funfzehn minuten) [01;33mNX)[00m
					(PX zum zentrum)[01;31m)[00m[01;31m)[00m
			(DM na ja)
			[01;31m(SIMPX[00m
				(VF garage)
				(LK brauchen)
				(MF wir ja nicht ein hotel luisenhof funf minuten vom bahnhof)[01;31m)[00m
			(NX bar restaurant garage)
			(NX alles uberflussig)
			(KON [01;33m(PX[00m und)
			[01;31m(NX[00m
				(PX direkt beim hauptbahnhof) [01;33mPX)[00m
				(ADVX noch)
				(NX ein hotel mit schwimm und dampfbad)[01;31m)[00m[01;31m)[00m
		(SIMPX brauchen wir es)))
Step:UNSET remove
{'subtrees': ['ADVX', 'NX'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'APPR', 'PPOSAT', 'NN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (6, 14), 'span': (8, 14), 'left siblings': ['VF', 'LK'], 'label': 'MF', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(NX hotels)
		(DM ja)
		(SIMPX mussen wir mal kucken)
		(SIMPX ich habe hier eine liste von meiner sekretarin drei moglichkeiten)
		[01;31m(NX[00m
			[01;31m(NX[00m
				[01;31m(NX[00m
					(ADJX maritimhotel)
					[01;33m(NX[00m (PX am hauptbahnhof)[01;31m)[00m
				[01;31m(NX[00m
					(NX funfzehn minuten) [01;33mNX)[00m
					(PX zum zentrum)[01;31m)[00m[01;31m)[00m
			(DM na ja)
			[01;31m(SIMPX[00m
				(VF garage)
				(LK brauchen)
				(MF wir ja nicht ein hotel luisenhof funf minuten vom bahnhof)[01;31m)[00m
			(NX bar restaurant garage)
			(NX alles uberflussig)
			(KON [01;33m(PX[00m und)
			[01;31m(NX[00m
				(PX direkt beim hauptbahnhof) [01;33mPX)[00m
				(ADVX noch)
				(NX ein hotel mit schwimm und dampfbad)[01;31m)[00m[01;31m)[00m
		(SIMPX brauchen wir es)))
Step:PP Attachment
{'subtrees': ['ADJX', 'PX'], 'family': ['NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NE', 'APPRART', 'NN', 'CARD', 'NN', 'APPRART', 'NN'), 'right siblings': ['NX'], 'parent': 'NX', 'auto preterminal span': (16, 23), 'span': (16, 19), 'left siblings': [], 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(NX hotels)
		(DM ja)
		(SIMPX mussen wir mal kucken)
		(SIMPX ich habe hier eine liste von meiner sekretarin drei moglichkeiten)
		[01;31m(NX[00m
			[01;31m(NX[00m
				(ADJX maritimhotel)
				[01;33m(NX[00m (PX am hauptbahnhof)
				[01;31m(NX[00m
					(NX funfzehn minuten) [01;33mNX)[00m
					(PX zum zentrum)[01;31m)[00m[01;31m)[00m
			(DM na ja)
			[01;31m(SIMPX[00m
				(VF garage)
				(LK brauchen)
				(MF wir ja nicht ein hotel luisenhof funf minuten vom bahnhof)[01;31m)[00m
			(NX bar restaurant garage)
			(NX alles uberflussig)
			(KON [01;33m(PX[00m und)
			[01;31m(NX[00m
				(PX direkt beim hauptbahnhof) [01;33mPX)[00m
				(ADVX noch)
				(NX ein hotel mit schwimm und dampfbad)[01;31m)[00m[01;31m)[00m
		(SIMPX brauchen wir es)))
Step:PP Attachment
{'subtrees': ['ADJX', 'PX', 'NX'], 'family': ['NX', 'DM', 'SIMPX', 'NX', 'NX', 'KON', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NE', 'APPRART', 'NN', 'CARD', 'NN', 'APPRART', 'NN', 'ITJ', 'PTKANT', 'NN', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'NN', 'NN', 'NN', 'PIS', 'ADJD', 'KON', 'ADV', 'APPRART', 'NN', 'ADV', 'ART', 'NN', 'APPR', 'TRUNC', 'KON', 'NN'), 'right siblings': ['DM', 'SIMPX', 'NX', 'NX', 'KON', 'NX'], 'parent': 'NX', 'auto preterminal span': (16, 53), 'span': (16, 23), 'left siblings': [], 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(NX hotels)
		(DM ja)
		(SIMPX mussen wir mal kucken)
		(SIMPX ich habe hier eine liste von meiner sekretarin drei moglichkeiten)
		[01;31m(NX[00m
			(ADJX maritimhotel)
			[01;33m(NX[00m (PX am hauptbahnhof)
			[01;31m(NX[00m
				(NX funfzehn minuten) [01;33mNX)[00m
				(PX zum zentrum)[01;31m)[00m
			(DM na ja)
			[01;31m(SIMPX[00m
				(VF garage)
				(LK brauchen)
				(MF wir ja nicht ein hotel luisenhof funf minuten vom bahnhof)[01;31m)[00m
			(NX bar restaurant garage)
			(NX alles uberflussig)
			(KON [01;33m(PX[00m und)
			[01;31m(NX[00m
				(PX direkt beim hauptbahnhof) [01;33mPX)[00m
				(ADVX noch)
				(NX ein hotel mit schwimm und dampfbad)[01;31m)[00m[01;31m)[00m
		(SIMPX brauchen wir es)))
Step:PP Attachment
{'subtrees': ['ADJX', 'PX', 'NX', 'DM', 'SIMPX', 'NX', 'NX', 'KON', 'NX'], 'family': ['NX', 'DM', 'SIMPX', 'SIMPX', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'PTKANT', 'VMFIN', 'PPER', 'ADV', 'VVINF', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'APPR', 'PPOSAT', 'NN', 'CARD', 'NN', 'NE', 'APPRART', 'NN', 'CARD', 'NN', 'APPRART', 'NN', 'ITJ', 'PTKANT', 'NN', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'NN', 'NN', 'NN', 'PIS', 'ADJD', 'KON', 'ADV', 'APPRART', 'NN', 'ADV', 'ART', 'NN', 'APPR', 'TRUNC', 'KON', 'NN', 'VVFIN', 'PPER', 'PPER'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 56), 'span': (16, 53), 'left siblings': ['NX', 'DM', 'SIMPX', 'SIMPX'], 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(NX hotels)
		(DM ja)
		(SIMPX mussen wir mal kucken)
		(SIMPX ich habe hier eine liste von meiner sekretarin drei moglichkeiten)
		(ADJX maritimhotel)
		[01;33m(NX[00m (PX am hauptbahnhof)
		[01;31m(NX[00m
			(NX funfzehn minuten) [01;33mNX)[00m
			(PX zum zentrum)[01;31m)[00m
		(DM na ja)
		[01;31m(SIMPX[00m
			(VF garage)
			(LK brauchen)
			(MF wir ja nicht ein hotel luisenhof funf minuten vom bahnhof)[01;31m)[00m
		(NX bar restaurant garage)
		(NX alles uberflussig)
		(KON [01;33m(PX[00m und)
		[01;31m(NX[00m
			(PX direkt beim hauptbahnhof) [01;33mPX)[00m
			(ADVX noch)
			(NX ein hotel mit schwimm und dampfbad)[01;31m)[00m
		(SIMPX brauchen wir es)))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['NX', 'DM', 'SIMPX', 'SIMPX', 'ADJX', 'PX', 'NX', 'DM', 'SIMPX', 'NX', 'NX', 'KON', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'PTKANT', 'VMFIN', 'PPER', 'ADV', 'VVINF', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'APPR', 'PPOSAT', 'NN', 'CARD', 'NN', 'NE', 'APPRART', 'NN', 'CARD', 'NN', 'APPRART', 'NN', 'ITJ', 'PTKANT', 'NN', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'NN', 'NN', 'NN', 'PIS', 'ADJD', 'KON', 'ADV', 'APPRART', 'NN', 'ADV', 'ART', 'NN', 'APPR', 'TRUNC', 'KON', 'NN', 'VVFIN', 'PPER', 'PPER'), 'right siblings': ['DM', 'SIMPX', 'NX', 'NX', 'KON', 'NX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 56), 'span': (19, 23), 'left siblings': ['NX', 'DM', 'SIMPX', 'SIMPX', 'ADJX', 'PX'], 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(NX hotels)
		(DM ja)
		(SIMPX mussen wir mal kucken)
		(SIMPX ich habe hier eine liste von meiner sekretarin drei moglichkeiten)
		(ADJX maritimhotel)
		[01;36m(NX[00m
			(PX am hauptbahnhof)
			(NX funfzehn minuten)[01;36m)[00m
		(PX zum zentrum)
		(DM na ja)
		[01;31m(SIMPX[00m
			(VF garage)
			(LK brauchen)
			(MF wir ja nicht ein hotel luisenhof funf minuten vom bahnhof)[01;31m)[00m
		(NX bar restaurant garage)
		(NX alles uberflussig)
		(KON [01;33m(PX[00m und)
		[01;31m(NX[00m
			(PX direkt beim hauptbahnhof) [01;33mPX)[00m
			(ADVX noch)
			(NX ein hotel mit schwimm und dampfbad)[01;31m)[00m
		(SIMPX brauchen wir es)))
Step:UNSET add
{'subtrees': ['PX', 'NX'], 'family': ['NX', 'DM', 'SIMPX', 'SIMPX', 'ADJX', 'NX', 'PX', 'DM', 'SIMPX', 'NX', 'NX', 'KON', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'NN', 'CARD', 'NN'), 'right siblings': [(PX (APPRART zum) (NX (NN zentrum))), (DM (ITJ na) (PTKANT ja)), (SIMPX (VF (NX (NN garage))) (LK (VXFIN (VVFIN brauchen))) (MF (MF (NX (PPER wir)) (ADVX (ADV ja)) (ADVX (PTKNEG nicht)) (NX (ART ein) (NX (NX (NN hotel)) (NX (NE luisenhof))))) (NX (NX (ADJX (CARD funf)) (NN minuten)) (PX (APPRART vom) (NX (NN bahnhof)))))), (NX (NX (NX (NN bar)) (NX (NN restaurant))) (NX (NN garage))), (NX (NX (PIS alles)) (NX (ADJD uberflussig))), (KON und), (NX (PX (ADVX (ADV direkt)) (APPRART beim) (NX (NN hauptbahnhof))) (ADVX (ADV noch)) (NX (NX (ART ein) (NN hotel)) (PX (APPR mit) (NX (TRUNC schwimm) (KON und) (NN dampfbad))))), (SIMPX (LK (VXFIN (VVFIN brauchen))) (MF (NX (PPER wir)) (NX (PPER es))))], 'left siblings': [(NX (NN hotels)), (DM (PTKANT ja)), (SIMPX (LK (VXFIN (VMFIN mussen))) (MF (NX (PPER wir)) (ADVX (ADV mal))) (VC (VXINF (VVINF kucken)))), (SIMPX (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VAFIN habe))) (ADVX (ADV hier)) (NX (NX (ART eine) (NN liste)) (PX (APPR von) (NX (PPOSAT meiner) (NN sekretarin))))) (SIMPX (ADJX (CARD drei)) (NN moglichkeiten))), (ADJX (NE maritimhotel))], 'auto preterminal span': (17, 21), 'span': (17, 21), 'parent': 'TURN', 'label': 'NX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(NX hotels)
		(DM ja)
		(SIMPX mussen wir mal kucken)
		(SIMPX ich habe hier eine liste von meiner sekretarin drei moglichkeiten)
		(ADJX maritimhotel)
		(NX am hauptbahnhof funfzehn minuten)
		(PX zum zentrum)
		(DM na ja)
		[01;31m(SIMPX[00m
			(VF garage)
			(LK brauchen)
			(MF wir ja nicht ein hotel luisenhof funf minuten vom bahnhof)[01;31m)[00m
		(NX bar restaurant garage)
		(NX alles uberflussig)
		(KON [01;33m(PX[00m und)
		[01;31m(NX[00m
			(PX direkt beim hauptbahnhof) [01;33mPX)[00m
			(ADVX noch)
			(NX ein hotel mit schwimm und dampfbad)[01;31m)[00m
		(SIMPX brauchen wir es)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['NX', 'DM', 'SIMPX', 'SIMPX', 'ADJX', 'NX', 'PX', 'DM', 'SIMPX', 'NX', 'NX', 'KON', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'PTKANT', 'VMFIN', 'PPER', 'ADV', 'VVINF', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'APPR', 'PPOSAT', 'NN', 'CARD', 'NN', 'NE', 'APPRART', 'NN', 'CARD', 'NN', 'APPRART', 'NN', 'ITJ', 'PTKANT', 'NN', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'NN', 'NN', 'NN', 'PIS', 'ADJD', 'KON', 'ADV', 'APPRART', 'NN', 'ADV', 'ART', 'NN', 'APPR', 'TRUNC', 'KON', 'NN', 'VVFIN', 'PPER', 'PPER'), 'right siblings': ['NX', 'NX', 'KON', 'NX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 56), 'span': (25, 37), 'left siblings': ['NX', 'DM', 'SIMPX', 'SIMPX', 'ADJX', 'NX', 'PX', 'DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(NX hotels)
		(DM ja)
		(SIMPX mussen wir mal kucken)
		(SIMPX ich habe hier eine liste von meiner sekretarin drei moglichkeiten)
		(ADJX maritimhotel)
		(NX am hauptbahnhof funfzehn minuten)
		(PX zum zentrum)
		(DM na ja)
		(VF garage)
		(LK brauchen)
		(MF wir ja nicht ein hotel luisenhof funf minuten vom bahnhof)
		(NX bar restaurant garage)
		(NX alles uberflussig)
		(KON [01;33m(PX[00m und)
		[01;31m(NX[00m
			(PX direkt beim hauptbahnhof) [01;33mPX)[00m
			(ADVX noch)
			(NX ein hotel mit schwimm und dampfbad)[01;31m)[00m
		(SIMPX brauchen wir es)))
Step:Modifier Attachment
{'subtrees': ['PX', 'ADVX', 'NX'], 'family': ['NX', 'DM', 'SIMPX', 'SIMPX', 'ADJX', 'NX', 'PX', 'DM', 'VF', 'LK', 'MF', 'NX', 'NX', 'KON', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'PTKANT', 'VMFIN', 'PPER', 'ADV', 'VVINF', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'APPR', 'PPOSAT', 'NN', 'CARD', 'NN', 'NE', 'APPRART', 'NN', 'CARD', 'NN', 'APPRART', 'NN', 'ITJ', 'PTKANT', 'NN', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'NN', 'NN', 'NN', 'PIS', 'ADJD', 'KON', 'ADV', 'APPRART', 'NN', 'ADV', 'ART', 'NN', 'APPR', 'TRUNC', 'KON', 'NN', 'VVFIN', 'PPER', 'PPER'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 56), 'span': (43, 53), 'left siblings': ['NX', 'DM', 'SIMPX', 'SIMPX', 'ADJX', 'NX', 'PX', 'DM', 'VF', 'LK', 'MF', 'NX', 'NX', 'KON'], 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(NX hotels)
		(DM ja)
		(SIMPX mussen wir mal kucken)
		(SIMPX ich habe hier eine liste von meiner sekretarin drei moglichkeiten)
		(ADJX maritimhotel)
		(NX am hauptbahnhof funfzehn minuten)
		(PX zum zentrum)
		(DM na ja)
		(VF garage)
		(LK brauchen)
		(MF wir ja nicht ein hotel luisenhof funf minuten vom bahnhof)
		(NX bar restaurant garage)
		(NX alles uberflussig)
		[01;36m(PX[00m
			(KON und)
			(PX direkt beim hauptbahnhof)[01;36m)[00m
		(ADVX noch)
		(NX ein hotel mit schwimm und dampfbad)
		(SIMPX brauchen wir es)))
Step:PP Attachment
{'subtrees': ['KON', 'PX'], 'family': ['NX', 'DM', 'SIMPX', 'SIMPX', 'ADJX', 'NX', 'PX', 'DM', 'VF', 'LK', 'MF', 'NX', 'NX', 'PX', 'ADVX', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'ADV', 'APPRART', 'NN'), 'right siblings': [(ADVX (ADV noch)), (NX (NX (ART ein) (NN hotel)) (PX (APPR mit) (NX (TRUNC schwimm) (KON und) (NN dampfbad)))), (SIMPX (LK (VXFIN (VVFIN brauchen))) (MF (NX (PPER wir)) (NX (PPER es))))], 'left siblings': [(NX (NN hotels)), (DM (PTKANT ja)), (SIMPX (LK (VXFIN (VMFIN mussen))) (MF (NX (PPER wir)) (ADVX (ADV mal))) (VC (VXINF (VVINF kucken)))), (SIMPX (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VAFIN habe))) (ADVX (ADV hier)) (NX (NX (ART eine) (NN liste)) (PX (APPR von) (NX (PPOSAT meiner) (NN sekretarin))))) (SIMPX (ADJX (CARD drei)) (NN moglichkeiten))), (ADJX (NE maritimhotel)), (NX (PX (APPRART am) (NX (NN hauptbahnhof))) (NX (ADJX (CARD funfzehn)) (NN minuten))), (PX (APPRART zum) (NX (NN zentrum))), (DM (ITJ na) (PTKANT ja)), (VF (NX (NN garage))), (LK (VXFIN (VVFIN brauchen))), (MF (MF (NX (PPER wir)) (ADVX (ADV ja)) (ADVX (PTKNEG nicht)) (NX (ART ein) (NX (NX (NN hotel)) (NX (NE luisenhof))))) (NX (NX (ADJX (CARD funf)) (NN minuten)) (PX (APPRART vom) (NX (NN bahnhof))))), (NX (NX (NX (NN bar)) (NX (NN restaurant))) (NX (NN garage))), (NX (NX (PIS alles)) (NX (ADJD uberflussig)))], 'auto preterminal span': (42, 46), 'span': (42, 46), 'parent': 'TURN', 'label': 'PX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP hotels ja mussen wir mal kucken ich habe hier eine liste von meiner sekretarin drei moglichkeiten maritimhotel am hauptbahnhof funfzehn minuten zum zentrum na ja garage brauchen wir ja nicht ein hotel luisenhof funf minuten vom bahnhof bar restaurant garage alles uberflussig und direkt beim hauptbahnhof noch ein hotel mit schwimm und dampfbad brauchen wir es)

Sentence 450:
5 Initial errors
0 on fringe, 3 iterations
3 Error:NP Attachment
1 Error:Single Word Phrase
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX ist ein bischen teurer)
		(NX
			(NX
				(NX einzelzimmer)
				(NX
					(ADJX
						(CARD zwohundert)
						[01;36m(NX[00m
							(CARD achtundvierzig)[01;36m)[00m)
					(NN mark)))
			(KON und)
			[01;33m(NX[00m (NX doppelzimmer)
			[01;31m(PX[00m [01;33m(PX[00m
				(APPRART im)
				[01;31m(NX[00m
					(NX doppelzimmer) [01;33mPX) NX)[00m
					(NX hundert dreiundvierzig)[01;31m)[00m[01;31m)[00m)))
Step:NP Attachment
{'new_parent': 'NX', 'new_family': ['NX', 'KON', 'NX', 'PX', 'NX'], 'mover info': [('NX', (12, 14))], 'old_family': ['NX', 'NX'], 'start left siblings': ['NX'], 'auto preterminals': ('NN', 'CARD', 'CARD', 'NN', 'KON', 'NN', 'APPRART', 'NN', 'CARD', 'CARD'), 'start right siblings': [], 'end left siblings': ['NX', 'KON', 'NX', 'PX'], 'auto preterminal span': (4, 14), 'movers': ['NX'], 'old_parent': 'NX', 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SIMPX ist ein bischen teurer)
		(NX
			(NX
				(NX einzelzimmer)
				(NX
					(ADJX
						(CARD zwohundert)
						[01;36m(NX[00m
							(CARD achtundvierzig)[01;36m)[00m)
					(NN mark)))
			(KON und)
			[01;36m(NX[00m
				(NX doppelzimmer)
				(PX im doppelzimmer)[01;36m)[00m
			(NX hundert dreiundvierzig))))
Step:Single Word Phrase
{'subtrees': ['CARD'], 'family': ['CARD', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('CARD',), 'right siblings': [], 'left siblings': [(CARD zwohundert)], 'auto preterminal span': (6, 7), 'span': (6, 7), 'parent': 'ADJX', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SIMPX ist ein bischen teurer)
		(NX
			(NX einzelzimmer zwohundert achtundvierzig mark)
			(KON und)
			[01;36m(NX[00m
				(NX doppelzimmer)
				(PX im doppelzimmer)[01;36m)[00m
			(NX hundert dreiundvierzig))))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['NX', 'KON', 'NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'APPRART', 'NN'), 'right siblings': [(NX (CARD hundert) (CARD dreiundvierzig))], 'left siblings': [(NX (NX (NN einzelzimmer)) (NX (ADJX (CARD zwohundert) (NX (CARD achtundvierzig))) (NN mark))), (KON und)], 'auto preterminal span': (9, 12), 'span': (9, 12), 'parent': 'NX', 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP ist ein bischen teurer einzelzimmer zwohundert achtundvierzig mark und doppelzimmer im doppelzimmer hundert dreiundvierzig)

Sentence 451:
16 Initial errors
0 on fringe, 13 iterations
2 Error:Single Word Phrase
2 Error:Different label
2 Error:Co-ordination
1 Error:Single Word Phrase
1 Error:UNSET add
1 Error:Unary
1 Error:Modifier Attachment
1 Error:Modifier Attachment
1 Error:Unary
1 Error:PP Attachment
1 Error:Unary
1 Error:Unary
1 Error:Clause Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(ADVX
			(ADVX prinzipiell)
			[01;36m(ADVX[00m
				(ADV immer)[01;36m)[00m)
		[01;31m(SIMPX[00m
			[01;36m(ADVX[00m
				[01;36m(VF[00m
					[01;31m(PARORD[00m
						(ADVX
							(ADV nur))[01;31m)[00m
					(VF wahrscheinlich)[01;36m)[00m[01;36m)[00m
			(LK wird)
			(MF
				(NX es)
				[01;36m(ADJX[00m
					(PX am dienstag)
					(ADJX etwas spater)[01;36m)[00m)
			(DM ja)
			(PX am dienstag)
			[01;33m(ADJX[00m (ADJX etwas spater)
			[01;31m(NF[00m [01;33m(SIMPX[00m
				[01;31m(SIMPX[00m
					(C bis)
					[01;31m(FKOORD[00m
						(MVC
							(MF
								(NX wir)
								[01;36m(ADJX[00m [01;31m(ADVX[00m
									(ADV uberhaupt)[01;31m)[00m[01;36m)[00m)
							(VC loskommen)) [01;33mSIMPX) ADJX)[00m
						(KON und)
						[01;36m(SIMPX[00m [01;31m(MVC[00m
							(MF was)
							(VC unternehmen konnen)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(DM[00m
			(ADVX
				(ADV also))[01;31m)[00m
		(SIMPX fur viele veranstaltungen wird es eher zu spat werden)))
Step:Single Word Phrase
{'family': ['NX', 'ADJX'], 'auto preterminal span': (17, 18), 'span': (17, 18), 'subtrees': ['ADV'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'ADJX')}
(TOP
	(TURN
		(ADVX
			(ADVX prinzipiell)
			[01;36m(ADVX[00m
				(ADV immer)[01;36m)[00m)
		[01;31m(SIMPX[00m
			[01;36m(ADVX[00m
				[01;36m(VF[00m
					[01;31m(PARORD[00m
						(ADVX
							(ADV nur))[01;31m)[00m
					(VF wahrscheinlich)[01;36m)[00m[01;36m)[00m
			(LK wird)
			(MF
				(NX es)
				[01;36m(ADJX[00m
					(PX am dienstag)
					(ADJX etwas spater)[01;36m)[00m)
			(DM ja)
			(PX am dienstag)
			[01;33m(ADJX[00m (ADJX etwas spater)
			[01;31m(NF[00m [01;33m(SIMPX[00m
				[01;31m(SIMPX[00m
					(C bis)
					[01;31m(FKOORD[00m
						(MVC wir uberhaupt loskommen) [01;33mSIMPX) ADJX)[00m
						(KON und)
						[01;36m(SIMPX[00m [01;31m(MVC[00m
							(MF was)
							(VC unternehmen konnen)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(DM[00m
			(ADVX
				(ADV also))[01;31m)[00m
		(SIMPX fur viele veranstaltungen wird es eher zu spat werden)))
Step:Different label
{'family': ['MVC', 'KON', 'SIMPX'], 'auto preterminal span': (20, 23), 'span': (20, 23), 'subtrees': ['MF', 'VC'], 'parent': 'FKOORD', 'over_word': False, 'auto preterminals': ('PIS', 'VVINF', 'VMFIN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('MVC', 'SIMPX')}
(TOP
	(TURN
		(ADVX
			(ADVX prinzipiell)
			[01;36m(ADVX[00m
				(ADV immer)[01;36m)[00m)
		[01;31m(SIMPX[00m
			[01;36m(ADVX[00m
				[01;36m(VF[00m
					[01;31m(PARORD[00m
						(ADVX
							(ADV nur))[01;31m)[00m
					(VF wahrscheinlich)[01;36m)[00m[01;36m)[00m
			(LK wird)
			(MF
				(NX es)
				[01;36m(ADJX[00m
					(PX am dienstag)
					(ADJX etwas spater)[01;36m)[00m)
			(DM ja)
			(PX am dienstag)
			[01;33m(ADJX[00m (ADJX etwas spater)
			[01;31m(NF[00m [01;33m(SIMPX[00m
				[01;31m(SIMPX[00m
					(C bis)
					[01;31m(FKOORD[00m
						(MVC wir uberhaupt loskommen) [01;33mSIMPX) ADJX)[00m
						(KON und)
						(SIMPX was unternehmen konnen)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(DM[00m
			(ADVX
				(ADV also))[01;31m)[00m
		(SIMPX fur viele veranstaltungen wird es eher zu spat werden)))
Step:Co-ordination
{'new_parent': 'DM', 'new_family': ['KON', 'SIMPX', 'ADVX'], 'mover info': [('KON', (19, 20)), ('SIMPX', (20, 23))], 'old_family': ['MVC', 'KON', 'SIMPX'], 'start left siblings': ['MVC'], 'auto preterminals': ('ADV', 'ADV', 'ADV', 'ADV', 'VAFIN', 'PPER', 'APPRART', 'NN', 'ADV', 'ADJD', 'PTKANT', 'APPRART', 'NN', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'VVFIN', 'KON', 'PIS', 'VVINF', 'VMFIN', 'ADV', 'APPR', 'PIDAT', 'NN', 'VAFIN', 'PPER', 'ADV', 'PTKA', 'ADJD', 'VAINF'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 33), 'movers': ['KON', 'SIMPX'], 'old_parent': 'FKOORD', 'end right siblings': ['ADVX'], 'classified_type': 'Co-ordination', 'type': 'move'}
(TOP
	(TURN
		(ADVX
			(ADVX prinzipiell)
			[01;36m(ADVX[00m
				(ADV immer)[01;36m)[00m)
		[01;31m(SIMPX[00m
			[01;36m(ADVX[00m
				[01;36m(VF[00m
					[01;31m(PARORD[00m
						(ADVX
							(ADV nur))[01;31m)[00m
					(VF wahrscheinlich)[01;36m)[00m[01;36m)[00m
			(LK wird)
			(MF
				(NX es)
				[01;36m(ADJX[00m
					(PX am dienstag)
					(ADJX etwas spater)[01;36m)[00m)
			(DM ja)
			(PX am dienstag)
			[01;36m(ADJX[00m
				(ADJX etwas spater)
				[01;31m(NF[00m
					(SIMPX
						(C bis)
						[01;31m(FKOORD[00m
							(MVC
								(MF wir uberhaupt)
								(VC loskommen))[01;31m)[00m)[01;31m)[00m[01;36m)[00m[01;31m)[00m
		[01;31m(DM[00m
			(KON und)
			(SIMPX was unternehmen konnen)
			(ADVX also)[01;31m)[00m
		(SIMPX fur viele veranstaltungen wird es eher zu spat werden)))
Step:Single Word Phrase
{'subtrees': ['ADV'], 'family': ['ADVX', 'ADVX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADV',), 'right siblings': [], 'left siblings': [(ADVX (ADV prinzipiell))], 'auto preterminal span': (1, 2), 'span': (1, 2), 'parent': 'ADVX', 'label': 'ADVX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(ADVX prinzipiell immer)
		[01;31m(SIMPX[00m
			[01;36m(ADVX[00m
				[01;36m(VF[00m
					[01;31m(PARORD[00m
						(ADVX
							(ADV nur))[01;31m)[00m
					(VF wahrscheinlich)[01;36m)[00m[01;36m)[00m
			(LK wird)
			(MF
				(NX es)
				[01;36m(ADJX[00m
					(PX am dienstag)
					(ADJX etwas spater)[01;36m)[00m)
			(DM ja)
			(PX am dienstag)
			[01;36m(ADJX[00m
				(ADJX etwas spater)
				[01;31m(NF[00m
					(SIMPX
						(C bis)
						[01;31m(FKOORD[00m
							(MVC
								(MF wir uberhaupt)
								(VC loskommen))[01;31m)[00m)[01;31m)[00m[01;36m)[00m[01;31m)[00m
		[01;31m(DM[00m
			(KON und)
			(SIMPX was unternehmen konnen)
			(ADVX also)[01;31m)[00m
		(SIMPX fur viele veranstaltungen wird es eher zu spat werden)))
Step:UNSET add
{'subtrees': ['PARORD', 'VF'], 'family': ['VF', 'LK', 'MF', 'DM', 'PX', 'ADJX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV'), 'right siblings': [(LK (VXFIN (VAFIN wird))), (MF (NX (PPER es)) (PX (APPRART am) (NX (NN dienstag))) (ADJX (ADVX (ADV etwas)) (ADJD spater))), (DM (PTKANT ja)), (PX (APPRART am) (NX (NN dienstag))), (ADJX (ADVX (ADV etwas)) (ADJD spater)), (NF (SIMPX (C (KOUS bis)) (FKOORD (MVC (MF (NX (PPER wir)) (ADJX (ADV uberhaupt))) (VC (VXFIN (VVFIN loskommen)))))))], 'left siblings': [], 'auto preterminal span': (2, 4), 'span': (2, 4), 'parent': 'SIMPX', 'label': 'VF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(ADVX prinzipiell immer)
		[01;31m(SIMPX[00m
			[01;36m(ADVX[00m
				(VF
					[01;31m(PARORD[00m
						(ADVX
							(ADV nur))[01;31m)[00m
					(VF wahrscheinlich))[01;36m)[00m
			(LK wird)
			(MF
				(NX es)
				[01;36m(ADJX[00m
					(PX am dienstag)
					(ADJX etwas spater)[01;36m)[00m)
			(DM ja)
			(PX am dienstag)
			[01;36m(ADJX[00m
				(ADJX etwas spater)
				[01;31m(NF[00m
					(SIMPX
						(C bis)
						[01;31m(FKOORD[00m
							(MVC
								(MF wir uberhaupt)
								(VC loskommen))[01;31m)[00m)[01;31m)[00m[01;36m)[00m[01;31m)[00m
		[01;31m(DM[00m
			(KON und)
			(SIMPX was unternehmen konnen)
			(ADVX also)[01;31m)[00m
		(SIMPX fur viele veranstaltungen wird es eher zu spat werden)))
Step:Unary
{'subtrees': ['VF'], 'family': ['ADVX', 'LK', 'MF', 'DM', 'PX', 'ADJX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV'), 'right siblings': [(LK (VXFIN (VAFIN wird))), (MF (NX (PPER es)) (PX (APPRART am) (NX (NN dienstag))) (ADJX (ADVX (ADV etwas)) (ADJD spater))), (DM (PTKANT ja)), (PX (APPRART am) (NX (NN dienstag))), (ADJX (ADVX (ADV etwas)) (ADJD spater)), (NF (SIMPX (C (KOUS bis)) (FKOORD (MVC (MF (NX (PPER wir)) (ADJX (ADV uberhaupt))) (VC (VXFIN (VVFIN loskommen)))))))], 'left siblings': [], 'auto preterminal span': (2, 4), 'span': (2, 4), 'parent': 'SIMPX', 'label': 'ADVX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(ADVX prinzipiell immer)
		[01;31m(SIMPX[00m
			(ADVX
				(VF
					[01;31m(PARORD[00m
						(ADVX
							(ADV nur))[01;31m)[00m
					(VF wahrscheinlich)))
			(LK wird)
			(MF
				(NX es)
				[01;36m(ADJX[00m
					(PX am dienstag)
					(ADJX etwas spater)[01;36m)[00m)
			(DM ja)
			(PX am dienstag)
			[01;36m(ADJX[00m
				(ADJX etwas spater)
				[01;31m(NF[00m
					(SIMPX
						(C bis)
						[01;31m(FKOORD[00m
							(MVC
								(MF wir uberhaupt)
								(VC loskommen))[01;31m)[00m)[01;31m)[00m[01;36m)[00m[01;31m)[00m
		[01;31m(DM[00m
			(KON und)
			(SIMPX was unternehmen konnen)
			(ADVX also)[01;31m)[00m
		(SIMPX fur viele veranstaltungen wird es eher zu spat werden)))
Step:Modifier Attachment
{'subtrees': ['PX', 'ADJX'], 'family': ['NX', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'NN', 'ADV', 'ADJD'), 'right siblings': [], 'left siblings': [(NX (PPER es))], 'auto preterminal span': (6, 10), 'span': (6, 10), 'parent': 'MF', 'label': 'ADJX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		(ADVX prinzipiell immer)
		[01;31m(SIMPX[00m
			(ADVX
				(VF
					[01;31m(PARORD[00m
						(ADVX
							(ADV nur))[01;31m)[00m
					(VF wahrscheinlich)))
			(LK wird)
			(MF es am dienstag etwas spater)
			(DM ja)
			(PX am dienstag)
			[01;36m(ADJX[00m
				(ADJX etwas spater)
				[01;31m(NF[00m
					(SIMPX
						(C bis)
						[01;31m(FKOORD[00m
							(MVC
								(MF wir uberhaupt)
								(VC loskommen))[01;31m)[00m)[01;31m)[00m[01;36m)[00m[01;31m)[00m
		[01;31m(DM[00m
			(KON und)
			(SIMPX was unternehmen konnen)
			(ADVX also)[01;31m)[00m
		(SIMPX fur viele veranstaltungen wird es eher zu spat werden)))
Step:Modifier Attachment
{'subtrees': ['ADJX', 'NF'], 'family': ['ADVX', 'LK', 'MF', 'DM', 'PX', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'VVFIN'), 'right siblings': [], 'left siblings': [(ADVX (VF (PARORD (ADVX (ADV nur))) (VF (ADVX (ADV wahrscheinlich))))), (LK (VXFIN (VAFIN wird))), (MF (NX (PPER es)) (ADJX (PX (APPRART am) (NX (NN dienstag))) (ADJX (ADVX (ADV etwas)) (ADJD spater)))), (DM (PTKANT ja)), (PX (APPRART am) (NX (NN dienstag)))], 'auto preterminal span': (13, 19), 'span': (13, 19), 'parent': 'SIMPX', 'label': 'ADJX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		(ADVX prinzipiell immer)
		[01;31m(SIMPX[00m
			(ADVX
				(VF
					[01;31m(PARORD[00m
						(ADVX
							(ADV nur))[01;31m)[00m
					(VF wahrscheinlich)))
			(LK wird)
			(MF es am dienstag etwas spater)
			(DM ja)
			(PX am dienstag)
			(ADJX
				(ADJX etwas spater)
				[01;31m(NF[00m
					(SIMPX
						(C bis)
						[01;31m(FKOORD[00m
							(MVC
								(MF wir uberhaupt)
								(VC loskommen))[01;31m)[00m)[01;31m)[00m)[01;31m)[00m
		[01;31m(DM[00m
			(KON und)
			(SIMPX was unternehmen konnen)
			(ADVX also)[01;31m)[00m
		(SIMPX fur viele veranstaltungen wird es eher zu spat werden)))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['PARORD', 'VF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV'), 'right siblings': ['VF'], 'parent': 'VF', 'auto preterminal span': (2, 4), 'span': (2, 3), 'left siblings': [], 'label': 'PARORD', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(ADVX prinzipiell immer)
		[01;31m(SIMPX[00m
			(ADVX nur wahrscheinlich)
			(LK wird)
			(MF es am dienstag etwas spater)
			(DM ja)
			(PX am dienstag)
			(ADJX
				(ADJX etwas spater)
				[01;31m(NF[00m
					(SIMPX
						(C bis)
						[01;31m(FKOORD[00m
							(MVC
								(MF wir uberhaupt)
								(VC loskommen))[01;31m)[00m)[01;31m)[00m)[01;31m)[00m
		[01;31m(DM[00m
			(KON und)
			(SIMPX was unternehmen konnen)
			(ADVX also)[01;31m)[00m
		(SIMPX fur viele veranstaltungen wird es eher zu spat werden)))
Step:PP Attachment
{'subtrees': ['ADVX', 'LK', 'MF', 'DM', 'PX', 'ADJX'], 'family': ['ADVX', 'SIMPX', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'ADV', 'ADV', 'VAFIN', 'PPER', 'APPRART', 'NN', 'ADV', 'ADJD', 'PTKANT', 'APPRART', 'NN', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'VVFIN', 'KON', 'PIS', 'VVINF', 'VMFIN', 'ADV', 'APPR', 'PIDAT', 'NN', 'VAFIN', 'PPER', 'ADV', 'PTKA', 'ADJD', 'VAINF'), 'right siblings': ['DM', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 33), 'span': (2, 19), 'left siblings': ['ADVX'], 'label': 'SIMPX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(ADVX prinzipiell immer)
		(ADVX nur wahrscheinlich)
		(LK wird)
		(MF es am dienstag etwas spater)
		(DM ja)
		(PX am dienstag)
		(ADJX
			(ADJX etwas spater)
			[01;31m(NF[00m
				(SIMPX
					(C bis)
					[01;31m(FKOORD[00m
						(MVC
							(MF wir uberhaupt)
							(VC loskommen))[01;31m)[00m)[01;31m)[00m)
		[01;31m(DM[00m
			(KON und)
			(SIMPX was unternehmen konnen)
			(ADVX also)[01;31m)[00m
		(SIMPX fur viele veranstaltungen wird es eher zu spat werden)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['ADJX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'VVFIN'), 'right siblings': [], 'parent': 'ADJX', 'auto preterminal span': (13, 19), 'span': (15, 19), 'left siblings': ['ADJX'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(ADVX prinzipiell immer)
		(ADVX nur wahrscheinlich)
		(LK wird)
		(MF es am dienstag etwas spater)
		(DM ja)
		(PX am dienstag)
		(ADJX
			(ADJX etwas spater)
			(SIMPX
				(C bis)
				[01;31m(FKOORD[00m
					(MVC
						(MF wir uberhaupt)
						(VC loskommen))[01;31m)[00m))
		[01;31m(DM[00m
			(KON und)
			(SIMPX was unternehmen konnen)
			(ADVX also)[01;31m)[00m
		(SIMPX fur viele veranstaltungen wird es eher zu spat werden)))
Step:Unary
{'subtrees': ['MVC'], 'family': ['C', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'VVFIN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (15, 19), 'span': (16, 19), 'left siblings': ['C'], 'label': 'FKOORD', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(ADVX prinzipiell immer)
		(ADVX nur wahrscheinlich)
		(LK wird)
		(MF es am dienstag etwas spater)
		(DM ja)
		(PX am dienstag)
		(ADJX etwas spater bis wir uberhaupt loskommen)
		[01;31m(DM[00m
			(KON und)
			(SIMPX was unternehmen konnen)
			(ADVX also)[01;31m)[00m
		(SIMPX fur viele veranstaltungen wird es eher zu spat werden)))
Step:Clause Attachment
{'subtrees': ['KON', 'SIMPX', 'ADVX'], 'family': ['ADVX', 'ADVX', 'LK', 'MF', 'DM', 'PX', 'ADJX', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'ADV', 'ADV', 'VAFIN', 'PPER', 'APPRART', 'NN', 'ADV', 'ADJD', 'PTKANT', 'APPRART', 'NN', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'VVFIN', 'KON', 'PIS', 'VVINF', 'VMFIN', 'ADV', 'APPR', 'PIDAT', 'NN', 'VAFIN', 'PPER', 'ADV', 'PTKA', 'ADJD', 'VAINF'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 33), 'span': (19, 24), 'left siblings': ['ADVX', 'ADVX', 'LK', 'MF', 'DM', 'PX', 'ADJX'], 'label': 'DM', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP prinzipiell immer nur wahrscheinlich wird es am dienstag etwas spater ja am dienstag etwas spater bis wir uberhaupt loskommen und was unternehmen konnen also fur viele veranstaltungen wird es eher zu spat werden)

Sentence 452:
0 Initial errors
0 on fringe, 0 iterations

Sentence 453:
15 Initial errors
0 on fringe, 11 iterations
3 Error:Clause Attachment
2 Error:Single Word Phrase
2 Error:Modifier Attachment
1 Error:Unary
1 Error:Unary
1 Error:UNSET add
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:PP Attachment
1 Error:UNSET remove
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM also)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK wurde)
			(MF mal)
			(VC sagen)
			(NF im april ist es ein bischen schlecht)[01;31m)[00m
		(SIMPX
			(VF ich)
			(LK habe)
			(MF
				(PX
					[01;31m(PX[00m
						(APPR in)
						[01;33m(NX[00m (NX der mitte)[01;31m)[00m
					(PX vom april)) [01;33mNX)[00m
				(NX urlaub)))
		[01;31m(PX[00m
			[01;36m(DM[00m
				(ADVX
					(ADV also))[01;36m)[00m
			[01;36m(LV[00m
				(PX
					(APPR uber)
					(NX ostern))[01;36m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF wir)
			(LK fahren)
			(MF uber ostern)
			(VC weg)[01;31m)[00m
		(SIMPX
			(VF ich)
			(LK wurde)
			(MF
				(ADJX am liebsten)
				[01;36m(PX[00m
					(ADVX direkt)
					[01;31m(PX[00m
						(APPR in)
						(NX den mai)[01;31m)[00m[01;36m)[00m)
			(VC gehen))
		(SIMPX und da ware bei mir die erste maiwoche)
		(DM also)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF dienstag funfter mai)
				(LK konnte)
				[01;33m(MF (MF[00m (MF ich)[01;31m)[00m
			(DM also) [01;33mMF)[00m
			(SIMPX
				(VF
					(NX
						(ADJX
							[01;36m(ADVX[00m [01;31m(ADJX[00m
								(ADJA funfter)[01;31m)[00m[01;36m)[00m
							(ADJX sechster))
						(NN mai)))
				(LK hatte)
				(MF ich zeit))[01;36m)[00m)) [01;33mMF)[00m
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'DM', 'SIMPX'], 'mover info': [('DM', (51, 52)), ('SIMPX', (52, 58))], 'old_family': ['DM', 'SIMPX', 'SIMPX', 'PX', 'SIMPX', 'SIMPX', 'SIMPX', 'DM', 'SIMPX', 'DM', 'SIMPX'], 'start left siblings': ['DM', 'SIMPX', 'SIMPX', 'PX', 'SIMPX', 'SIMPX', 'SIMPX', 'DM', 'SIMPX'], 'auto preterminals': ('ADV', 'PPER', 'VAFIN', 'ADV', 'VVINF', 'APPRART', 'NN', 'VAFIN', 'PPER', 'ART', 'PIS', 'ADJD', 'PPER', 'VAFIN', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'NN', 'ADV', 'APPR', 'NE', 'PPER', 'VVFIN', 'APPR', 'NE', 'PTKVZ', 'PPER', 'VAFIN', 'PTKA', 'ADJD', 'ADV', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'ADV', 'VAFIN', 'APPR', 'PPER', 'ART', 'ADJA', 'NN', 'ADV', 'NN', 'ADJA', 'NN', 'VMFIN', 'PPER', 'ADV', 'ADJA', 'ADJA', 'NN', 'VAFIN', 'PPER', 'NN'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (0, 58), 'adding node already present': False, 'movers': ['DM', 'SIMPX'], 'old_parent': 'TURN', 'added and moved': True, 'end right siblings': [], 'classified_type': 'Clause Attachment', 'type': 'move', 'added label': 'ADVX'}
(TOP
	(TURN
		(DM also)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK wurde)
			(MF mal)
			(VC sagen)
			(NF im april ist es ein bischen schlecht)[01;31m)[00m
		(SIMPX
			(VF ich)
			(LK habe)
			(MF
				(PX
					[01;31m(PX[00m
						(APPR in)
						[01;33m(NX[00m (NX der mitte)[01;31m)[00m
					(PX vom april)) [01;33mNX)[00m
				(NX urlaub)))
		[01;31m(PX[00m
			[01;36m(DM[00m
				(ADVX
					(ADV also))[01;36m)[00m
			[01;36m(LV[00m
				(PX
					(APPR uber)
					(NX ostern))[01;36m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF wir)
			(LK fahren)
			(MF uber ostern)
			(VC weg)[01;31m)[00m
		(SIMPX
			(VF ich)
			(LK wurde)
			(MF
				(ADJX am liebsten)
				[01;36m(PX[00m
					(ADVX direkt)
					[01;31m(PX[00m
						(APPR in)
						(NX den mai)[01;31m)[00m[01;36m)[00m)
			(VC gehen))
		(SIMPX und da ware bei mir die erste maiwoche)
		(DM also)
		(SIMPX
			(VF dienstag funfter mai)
			(LK konnte)
			(MF
				[01;36m(MF[00m
					(MF ich)
					(DM also)[01;36m)[00m
				(SIMPX
					(VF
						(NX
							(ADJX
								[01;36m(ADVX[00m [01;31m(ADJX[00m
									(ADJA funfter)[01;31m)[00m[01;36m)[00m
								(ADJX sechster))
							(NN mai)))
					(LK hatte)
					(MF ich zeit))))))
Step:Single Word Phrase
{'family': ['ADVX', 'ADJX'], 'auto preterminal span': (52, 53), 'span': (52, 53), 'subtrees': ['ADJA'], 'parent': 'ADJX', 'over_word': True, 'auto preterminals': ('ADJA',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'ADVX')}
(TOP
	(TURN
		(DM also)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK wurde)
			(MF mal)
			(VC sagen)
			(NF im april ist es ein bischen schlecht)[01;31m)[00m
		(SIMPX
			(VF ich)
			(LK habe)
			(MF
				(PX
					[01;31m(PX[00m
						(APPR in)
						[01;33m(NX[00m (NX der mitte)[01;31m)[00m
					(PX vom april)) [01;33mNX)[00m
				(NX urlaub)))
		[01;31m(PX[00m
			[01;36m(DM[00m
				(ADVX
					(ADV also))[01;36m)[00m
			[01;36m(LV[00m
				(PX
					(APPR uber)
					(NX ostern))[01;36m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF wir)
			(LK fahren)
			(MF uber ostern)
			(VC weg)[01;31m)[00m
		(SIMPX
			(VF ich)
			(LK wurde)
			(MF
				(ADJX am liebsten)
				[01;36m(PX[00m
					(ADVX direkt)
					[01;31m(PX[00m
						(APPR in)
						(NX den mai)[01;31m)[00m[01;36m)[00m)
			(VC gehen))
		(SIMPX und da ware bei mir die erste maiwoche)
		(DM also)
		(SIMPX
			(VF dienstag funfter mai)
			(LK konnte)
			(MF
				[01;36m(MF[00m
					(MF ich)
					(DM also)[01;36m)[00m
				(SIMPX funfter sechster mai hatte ich zeit)))))
Step:Modifier Attachment
{'new_parent': 'PX', 'new_family': ['ADVX', 'APPR', 'NX'], 'mover info': [('ADVX', (32, 33))], 'old_family': ['ADJX', 'ADVX', 'PX'], 'start left siblings': ['ADJX'], 'auto preterminals': ('PTKA', 'ADJD', 'ADV', 'APPR', 'ART', 'NN'), 'start right siblings': ['PX'], 'end left siblings': [], 'auto preterminal span': (30, 36), 'movers': ['ADVX'], 'old_parent': 'MF', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['APPR', 'NX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM also)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK wurde)
			(MF mal)
			(VC sagen)
			(NF im april ist es ein bischen schlecht)[01;31m)[00m
		(SIMPX
			(VF ich)
			(LK habe)
			(MF
				(PX
					[01;31m(PX[00m
						(APPR in)
						[01;33m(NX[00m (NX der mitte)[01;31m)[00m
					(PX vom april)) [01;33mNX)[00m
				(NX urlaub)))
		[01;31m(PX[00m
			[01;36m(DM[00m
				(ADVX
					(ADV also))[01;36m)[00m
			[01;36m(LV[00m
				(PX
					(APPR uber)
					(NX ostern))[01;36m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF wir)
			(LK fahren)
			(MF uber ostern)
			(VC weg)[01;31m)[00m
		(SIMPX ich wurde am liebsten direkt in den mai gehen)
		(SIMPX und da ware bei mir die erste maiwoche)
		(DM also)
		(SIMPX
			(VF dienstag funfter mai)
			(LK konnte)
			(MF
				[01;36m(MF[00m
					(MF ich)
					(DM also)[01;36m)[00m
				(SIMPX funfter sechster mai hatte ich zeit)))))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['DM', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV',), 'right siblings': [(PX (APPR uber) (NX (NE ostern)))], 'left siblings': [], 'auto preterminal span': (20, 21), 'span': (20, 21), 'parent': 'PX', 'label': 'DM', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK wurde)
			(MF mal)
			(VC sagen)
			(NF im april ist es ein bischen schlecht)[01;31m)[00m
		(SIMPX
			(VF ich)
			(LK habe)
			(MF
				(PX
					[01;31m(PX[00m
						(APPR in)
						[01;33m(NX[00m (NX der mitte)[01;31m)[00m
					(PX vom april)) [01;33mNX)[00m
				(NX urlaub)))
		[01;31m(PX[00m
			(DM also)
			[01;36m(LV[00m
				(PX
					(APPR uber)
					(NX ostern))[01;36m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF wir)
			(LK fahren)
			(MF uber ostern)
			(VC weg)[01;31m)[00m
		(SIMPX ich wurde am liebsten direkt in den mai gehen)
		(SIMPX und da ware bei mir die erste maiwoche)
		(DM also)
		(SIMPX
			(VF dienstag funfter mai)
			(LK konnte)
			(MF
				[01;36m(MF[00m
					(MF ich)
					(DM also)[01;36m)[00m
				(SIMPX funfter sechster mai hatte ich zeit)))))
Step:Unary
{'subtrees': ['PX'], 'family': ['DM', 'LV'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'NE'), 'right siblings': [], 'left siblings': [(DM (ADVX (ADV also)))], 'auto preterminal span': (21, 23), 'span': (21, 23), 'parent': 'PX', 'label': 'LV', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK wurde)
			(MF mal)
			(VC sagen)
			(NF im april ist es ein bischen schlecht)[01;31m)[00m
		(SIMPX
			(VF ich)
			(LK habe)
			(MF
				(PX
					[01;31m(PX[00m
						(APPR in)
						[01;33m(NX[00m (NX der mitte)[01;31m)[00m
					(PX vom april)) [01;33mNX)[00m
				(NX urlaub)))
		[01;31m(PX[00m
			(DM also)
			(LV uber ostern)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF wir)
			(LK fahren)
			(MF uber ostern)
			(VC weg)[01;31m)[00m
		(SIMPX ich wurde am liebsten direkt in den mai gehen)
		(SIMPX und da ware bei mir die erste maiwoche)
		(DM also)
		(SIMPX
			(VF dienstag funfter mai)
			(LK konnte)
			(MF
				[01;36m(MF[00m
					(MF ich)
					(DM also)[01;36m)[00m
				(SIMPX funfter sechster mai hatte ich zeit)))))
Step:UNSET add
{'subtrees': ['MF', 'DM'], 'family': ['MF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV'), 'right siblings': [(SIMPX (VF (NX (ADJX (ADVX (ADJA funfter)) (ADJX (ADJA sechster))) (NN mai))) (LK (VXFIN (VAFIN hatte))) (MF (NX (PPER ich)) (NX (NN zeit))))], 'left siblings': [], 'auto preterminal span': (50, 52), 'span': (50, 52), 'parent': 'MF', 'label': 'MF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK wurde)
			(MF mal)
			(VC sagen)
			(NF im april ist es ein bischen schlecht)[01;31m)[00m
		(SIMPX
			(VF ich)
			(LK habe)
			(MF
				(PX
					[01;31m(PX[00m
						(APPR in)
						[01;33m(NX[00m (NX der mitte)[01;31m)[00m
					(PX vom april)) [01;33mNX)[00m
				(NX urlaub)))
		[01;31m(PX[00m
			(DM also)
			(LV uber ostern)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF wir)
			(LK fahren)
			(MF uber ostern)
			(VC weg)[01;31m)[00m
		(SIMPX ich wurde am liebsten direkt in den mai gehen)
		(SIMPX und da ware bei mir die erste maiwoche)
		(DM also)
		(SIMPX dienstag funfter mai konnte ich also funfter sechster mai hatte ich zeit)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'VC', 'NF'], 'family': ['DM', 'SIMPX', 'SIMPX', 'PX', 'SIMPX', 'SIMPX', 'SIMPX', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPER', 'VAFIN', 'ADV', 'VVINF', 'APPRART', 'NN', 'VAFIN', 'PPER', 'ART', 'PIS', 'ADJD', 'PPER', 'VAFIN', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'NN', 'ADV', 'APPR', 'NE', 'PPER', 'VVFIN', 'APPR', 'NE', 'PTKVZ', 'PPER', 'VAFIN', 'PTKA', 'ADJD', 'ADV', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'ADV', 'VAFIN', 'APPR', 'PPER', 'ART', 'ADJA', 'NN', 'ADV', 'NN', 'ADJA', 'NN', 'VMFIN', 'PPER', 'ADV', 'ADJA', 'ADJA', 'NN', 'VAFIN', 'PPER', 'NN'), 'right siblings': ['SIMPX', 'PX', 'SIMPX', 'SIMPX', 'SIMPX', 'DM', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 58), 'span': (1, 12), 'left siblings': ['DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(VF ich)
		(LK wurde)
		(MF mal)
		(VC sagen)
		(NF im april ist es ein bischen schlecht)
		(SIMPX
			(VF ich)
			(LK habe)
			(MF
				(PX
					[01;31m(PX[00m
						(APPR in)
						[01;33m(NX[00m (NX der mitte)[01;31m)[00m
					(PX vom april)) [01;33mNX)[00m
				(NX urlaub)))
		[01;31m(PX[00m
			(DM also)
			(LV uber ostern)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF wir)
			(LK fahren)
			(MF uber ostern)
			(VC weg)[01;31m)[00m
		(SIMPX ich wurde am liebsten direkt in den mai gehen)
		(SIMPX und da ware bei mir die erste maiwoche)
		(DM also)
		(SIMPX dienstag funfter mai konnte ich also funfter sechster mai hatte ich zeit)))
Step:UNSET remove
{'subtrees': ['APPR', 'NX'], 'family': ['PX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NN', 'APPRART', 'NN'), 'right siblings': ['PX'], 'parent': 'PX', 'auto preterminal span': (14, 19), 'span': (14, 17), 'left siblings': [], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(VF ich)
		(LK wurde)
		(MF mal)
		(VC sagen)
		(NF im april ist es ein bischen schlecht)
		(SIMPX
			(VF ich)
			(LK habe)
			(MF
				(PX
					(APPR in)
					[01;36m(NX[00m
						(NX der mitte)
						(PX vom april)[01;36m)[00m)
				(NX urlaub)))
		[01;31m(PX[00m
			(DM also)
			(LV uber ostern)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF wir)
			(LK fahren)
			(MF uber ostern)
			(VC weg)[01;31m)[00m
		(SIMPX ich wurde am liebsten direkt in den mai gehen)
		(SIMPX und da ware bei mir die erste maiwoche)
		(DM also)
		(SIMPX dienstag funfter mai konnte ich also funfter sechster mai hatte ich zeit)))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['APPR', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'APPRART', 'NN'), 'right siblings': [], 'left siblings': [(APPR in)], 'auto preterminal span': (15, 19), 'span': (15, 19), 'parent': 'PX', 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		(VF ich)
		(LK wurde)
		(MF mal)
		(VC sagen)
		(NF im april ist es ein bischen schlecht)
		(SIMPX ich habe in der mitte vom april urlaub)
		[01;31m(PX[00m
			(DM also)
			(LV uber ostern)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF wir)
			(LK fahren)
			(MF uber ostern)
			(VC weg)[01;31m)[00m
		(SIMPX ich wurde am liebsten direkt in den mai gehen)
		(SIMPX und da ware bei mir die erste maiwoche)
		(DM also)
		(SIMPX dienstag funfter mai konnte ich also funfter sechster mai hatte ich zeit)))
Step:UNSET remove
{'subtrees': ['DM', 'LV'], 'family': ['DM', 'VF', 'LK', 'MF', 'VC', 'NF', 'SIMPX', 'PX', 'SIMPX', 'SIMPX', 'SIMPX', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPER', 'VAFIN', 'ADV', 'VVINF', 'APPRART', 'NN', 'VAFIN', 'PPER', 'ART', 'PIS', 'ADJD', 'PPER', 'VAFIN', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'NN', 'ADV', 'APPR', 'NE', 'PPER', 'VVFIN', 'APPR', 'NE', 'PTKVZ', 'PPER', 'VAFIN', 'PTKA', 'ADJD', 'ADV', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'ADV', 'VAFIN', 'APPR', 'PPER', 'ART', 'ADJA', 'NN', 'ADV', 'NN', 'ADJA', 'NN', 'VMFIN', 'PPER', 'ADV', 'ADJA', 'ADJA', 'NN', 'VAFIN', 'PPER', 'NN'), 'right siblings': ['SIMPX', 'SIMPX', 'SIMPX', 'DM', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 58), 'span': (20, 23), 'left siblings': ['DM', 'VF', 'LK', 'MF', 'VC', 'NF', 'SIMPX'], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(VF ich)
		(LK wurde)
		(MF mal)
		(VC sagen)
		(NF im april ist es ein bischen schlecht)
		(SIMPX ich habe in der mitte vom april urlaub)
		(DM also)
		(LV uber ostern)
		[01;31m(SIMPX[00m
			(VF wir)
			(LK fahren)
			(MF uber ostern)
			(VC weg)[01;31m)[00m
		(SIMPX ich wurde am liebsten direkt in den mai gehen)
		(SIMPX und da ware bei mir die erste maiwoche)
		(DM also)
		(SIMPX dienstag funfter mai konnte ich also funfter sechster mai hatte ich zeit)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['DM', 'VF', 'LK', 'MF', 'VC', 'NF', 'SIMPX', 'DM', 'LV', 'SIMPX', 'SIMPX', 'SIMPX', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPER', 'VAFIN', 'ADV', 'VVINF', 'APPRART', 'NN', 'VAFIN', 'PPER', 'ART', 'PIS', 'ADJD', 'PPER', 'VAFIN', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'NN', 'ADV', 'APPR', 'NE', 'PPER', 'VVFIN', 'APPR', 'NE', 'PTKVZ', 'PPER', 'VAFIN', 'PTKA', 'ADJD', 'ADV', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'ADV', 'VAFIN', 'APPR', 'PPER', 'ART', 'ADJA', 'NN', 'ADV', 'NN', 'ADJA', 'NN', 'VMFIN', 'PPER', 'ADV', 'ADJA', 'ADJA', 'NN', 'VAFIN', 'PPER', 'NN'), 'right siblings': ['SIMPX', 'SIMPX', 'DM', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 58), 'span': (23, 28), 'left siblings': ['DM', 'VF', 'LK', 'MF', 'VC', 'NF', 'SIMPX', 'DM', 'LV'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP also ich wurde mal sagen im april ist es ein bischen schlecht ich habe in der mitte vom april urlaub also uber ostern wir fahren uber ostern weg ich wurde am liebsten direkt in den mai gehen und da ware bei mir die erste maiwoche also dienstag funfter mai konnte ich also funfter sechster mai hatte ich zeit)

Sentence 454:
2 Initial errors
0 on fringe, 1 iterations
2 Error:NP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM okay)
		(SIMPX dann haben wir da keine chance)
		(SIMPX
			(VF wie)
			(LK ware)
			(MF [01;33m(MF[00m
				(NX es)
				[01;31m(PX[00m
					(PX in der nachsten woche) [01;33mMF)[00m
					(NX montag dienstag)[01;31m)[00m))
		(SIMPX das ist der elfte und zwolfte mai)))
Step:NP Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'NX'], 'mover info': [('NX', (14, 16))], 'old_family': ['PX', 'NX'], 'start left siblings': ['PX'], 'auto preterminals': ('PWAV', 'VAFIN', 'PPER', 'APPR', 'ART', 'ADJA', 'NN', 'NN', 'NN'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (7, 16), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'PX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'MF'}
(TOP okay dann haben wir da keine chance wie ware es in der nachsten woche montag dienstag das ist der elfte und zwolfte mai)

Sentence 455:
0 Initial errors
0 on fringe, 0 iterations

Sentence 456:
22 Initial errors
0 on fringe, 15 iterations
3 Error:UNSET move
2 Error:Different label
2 Error:Different label
2 Error:Clause Attachment
2 Error:PP Attachment
2 Error:UNSET move
1 Error:Unary
1 Error:UNSET add
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:UNSET add
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM also)
		(SIMPX
			(VF ich)
			(LK denke)
			[01;36m(NF[00m
				[01;36m(SIMPX[00m
					[01;31m(SIMPX[00m
						(LK sagen)
						[01;33m(MF[00m (MF wir mal)[01;31m)[00m
					[01;31m(MF[00m
						[01;31m(NX[00m
							(PX mit dem ice)
							[01;36m(NX[00m
								(NX funf stunden)
								(PX nach hannover)[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m) [01;33mMF)[00m
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF wir)
				(LK mussen)[01;31m)[00m
			(DM na ja)
			(SIMPX funfzehn uhr mussen wir vielleicht da sein)[01;36m)[00m
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				[01;36m(VF[00m [01;31m(LV[00m
					(SIMPX
						(C wenn)
						(MF wir dann um neun oder zehn)
						(VC fahren))[01;31m)[00m[01;36m)[00m
				[01;31m(SIMPX[00m
					(LK sagen)
					(MF wir)
					[01;31m(NF[00m
						(SIMPX
							(VF wir)
							(LK konnten)
							(MF um neun)
							(VC fahren))[01;31m)[00m[01;31m)[00m[01;36m)[00m
			[01;33m(SIMPX[00m (VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK nehmen)
					(MF wir ein zweites fruhstuck im ice)[01;31m)[00m [01;33mSIMPX)[00m
				[01;36m(LKMVC[00m
					[01;36m(SIMPX[00m [01;31m(LKM[00m
						(LK lesen)
						[01;36m(MF[00m
							(NX
								(ART ein)
								(ADJX bischen)
								(NN zeitung))[01;36m)[00m[01;31m)[00m[01;36m)[00m
					(LKMVC haben das meeting vorbereitet)[01;36m)[00m
				(KON und)
				(LKMVC kommen dann um zwei oder drei in hannover an)[01;31m)[00m[01;31m)[00m
		(SIMPX das ware doch)
		(SIMPX das konnten wir noch machen)))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['LK', 'MF', 'MF'], 'mover info': [('MF', (6, 13))], 'old_family': ['VF', 'LK', 'SIMPX', 'MF'], 'start left siblings': ['VF', 'LK', 'SIMPX'], 'auto preterminals': ('PPER', 'VVFIN', 'VVFIN', 'PPER', 'ADV', 'APPR', 'ART', 'NE', 'CARD', 'NN', 'APPR', 'NE'), 'start right siblings': [], 'end left siblings': ['LK', 'MF'], 'auto preterminal span': (1, 13), 'adding node already present': False, 'movers': ['MF'], 'old_parent': 'SIMPX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'MF'}
(TOP
	(TURN
		(DM also)
		(SIMPX
			(VF ich)
			(LK denke)
			[01;36m(NF[00m
				(SIMPX
					(LK sagen)
					(MF
						(MF wir mal)
						[01;31m(MF[00m
							[01;31m(NX[00m
								(PX mit dem ice)
								[01;36m(NX[00m
									(NX funf stunden)
									(PX nach hannover)[01;36m)[00m[01;31m)[00m[01;31m)[00m))[01;36m)[00m)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF wir)
				(LK mussen)[01;31m)[00m
			(DM na ja)
			(SIMPX funfzehn uhr mussen wir vielleicht da sein)[01;36m)[00m
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				[01;36m(VF[00m [01;31m(LV[00m
					(SIMPX
						(C wenn)
						(MF wir dann um neun oder zehn)
						(VC fahren))[01;31m)[00m[01;36m)[00m
				[01;31m(SIMPX[00m
					(LK sagen)
					(MF wir)
					[01;31m(NF[00m
						(SIMPX
							(VF wir)
							(LK konnten)
							(MF um neun)
							(VC fahren))[01;31m)[00m[01;31m)[00m[01;36m)[00m
			[01;33m(SIMPX[00m (VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK nehmen)
					(MF wir ein zweites fruhstuck im ice)[01;31m)[00m [01;33mSIMPX)[00m
				[01;36m(LKMVC[00m
					[01;36m(SIMPX[00m [01;31m(LKM[00m
						(LK lesen)
						[01;36m(MF[00m
							(NX
								(ART ein)
								(ADJX bischen)
								(NN zeitung))[01;36m)[00m[01;31m)[00m[01;36m)[00m
					(LKMVC haben das meeting vorbereitet)[01;36m)[00m
				(KON und)
				(LKMVC kommen dann um zwei oder drei in hannover an)[01;31m)[00m[01;31m)[00m
		(SIMPX das ware doch)
		(SIMPX das konnten wir noch machen)))
Step:Different label
{'family': ['VF', 'SIMPX', 'VF', 'FKOORD'], 'auto preterminal span': (25, 33), 'span': (25, 33), 'subtrees': ['SIMPX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'APPR', 'CARD', 'KON', 'CARD', 'VVFIN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('LV', 'VF')}
(TOP
	(TURN
		(DM also)
		(SIMPX
			(VF ich)
			(LK denke)
			[01;36m(NF[00m
				(SIMPX
					(LK sagen)
					(MF
						(MF wir mal)
						[01;31m(MF[00m
							[01;31m(NX[00m
								(PX mit dem ice)
								[01;36m(NX[00m
									(NX funf stunden)
									(PX nach hannover)[01;36m)[00m[01;31m)[00m[01;31m)[00m))[01;36m)[00m)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF wir)
				(LK mussen)[01;31m)[00m
			(DM na ja)
			(SIMPX funfzehn uhr mussen wir vielleicht da sein)[01;36m)[00m
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(VF wenn wir dann um neun oder zehn fahren)
				[01;31m(SIMPX[00m
					(LK sagen)
					(MF wir)
					[01;31m(NF[00m
						(SIMPX
							(VF wir)
							(LK konnten)
							(MF um neun)
							(VC fahren))[01;31m)[00m[01;31m)[00m[01;36m)[00m
			[01;33m(SIMPX[00m (VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK nehmen)
					(MF wir ein zweites fruhstuck im ice)[01;31m)[00m [01;33mSIMPX)[00m
				[01;36m(LKMVC[00m
					[01;36m(SIMPX[00m [01;31m(LKM[00m
						(LK lesen)
						[01;36m(MF[00m
							(NX
								(ART ein)
								(ADJX bischen)
								(NN zeitung))[01;36m)[00m[01;31m)[00m[01;36m)[00m
					(LKMVC haben das meeting vorbereitet)[01;36m)[00m
				(KON und)
				(LKMVC kommen dann um zwei oder drei in hannover an)[01;31m)[00m[01;31m)[00m
		(SIMPX das ware doch)
		(SIMPX das konnten wir noch machen)))
Step:Different label
{'family': ['LKM', 'SIMPX', 'LKMVC', 'KON', 'LKMVC'], 'auto preterminal span': (48, 52), 'span': (48, 52), 'subtrees': ['LK', 'NX'], 'parent': 'FKOORD', 'over_word': False, 'auto preterminals': ('VVFIN', 'ART', 'PIDAT', 'NN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('LKM', 'SIMPX')}
(TOP
	(TURN
		(DM also)
		(SIMPX
			(VF ich)
			(LK denke)
			[01;36m(NF[00m
				(SIMPX
					(LK sagen)
					(MF
						(MF wir mal)
						[01;31m(MF[00m
							[01;31m(NX[00m
								(PX mit dem ice)
								[01;36m(NX[00m
									(NX funf stunden)
									(PX nach hannover)[01;36m)[00m[01;31m)[00m[01;31m)[00m))[01;36m)[00m)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF wir)
				(LK mussen)[01;31m)[00m
			(DM na ja)
			(SIMPX funfzehn uhr mussen wir vielleicht da sein)[01;36m)[00m
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(VF wenn wir dann um neun oder zehn fahren)
				[01;31m(SIMPX[00m
					(LK sagen)
					(MF wir)
					[01;31m(NF[00m
						(SIMPX
							(VF wir)
							(LK konnten)
							(MF um neun)
							(VC fahren))[01;31m)[00m[01;31m)[00m[01;36m)[00m
			[01;33m(SIMPX[00m (VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK nehmen)
					(MF wir ein zweites fruhstuck im ice)[01;31m)[00m [01;33mSIMPX)[00m
				[01;36m(LKMVC[00m
					(SIMPX
						(LK lesen)
						[01;36m(MF[00m
							(NX
								(ART ein)
								(ADJX bischen)
								(NN zeitung))[01;36m)[00m)
					(LKMVC haben das meeting vorbereitet)[01;36m)[00m
				(KON und)
				(LKMVC kommen dann um zwei oder drei in hannover an)[01;31m)[00m[01;31m)[00m
		(SIMPX das ware doch)
		(SIMPX das konnten wir noch machen)))
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['KOORD', 'VF', 'LK', 'DM', 'SIMPX'], 'mover info': [('DM', (16, 18)), ('SIMPX', (18, 25))], 'old_family': ['DM', 'SIMPX', 'SIMPX', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'start left siblings': ['DM', 'SIMPX', 'SIMPX'], 'auto preterminals': ('ADV', 'PPER', 'VVFIN', 'VVFIN', 'PPER', 'ADV', 'APPR', 'ART', 'NE', 'CARD', 'NN', 'APPR', 'NE', 'KON', 'PPER', 'VMFIN', 'ITJ', 'PTKANT', 'CARD', 'NN', 'VMFIN', 'PPER', 'ADV', 'ADV', 'VAINF', 'KOUS', 'PPER', 'ADV', 'APPR', 'CARD', 'KON', 'CARD', 'VVFIN', 'VVFIN', 'PPER', 'PPER', 'VMFIN', 'APPR', 'CARD', 'VVINF', 'ADV', 'VVFIN', 'PPER', 'ART', 'ADJA', 'NN', 'APPRART', 'NE', 'VVFIN', 'ART', 'PIDAT', 'NN', 'VAFIN', 'ART', 'NN', 'VVPP', 'KON', 'VVFIN', 'ADV', 'APPR', 'CARD', 'KON', 'CARD', 'APPR', 'NE', 'PTKVZ', 'PDS', 'VAFIN', 'ADV', 'PDS', 'VMFIN', 'PPER', 'ADV', 'VVINF'), 'start right siblings': ['SIMPX', 'SIMPX', 'SIMPX'], 'end left siblings': ['KOORD', 'VF', 'LK'], 'auto preterminal span': (0, 74), 'movers': ['DM', 'SIMPX'], 'old_parent': 'TURN', 'end right siblings': [], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM also)
		(SIMPX
			(VF ich)
			(LK denke)
			[01;36m(NF[00m
				(SIMPX
					(LK sagen)
					(MF
						(MF wir mal)
						[01;31m(MF[00m
							[01;31m(NX[00m
								(PX mit dem ice)
								[01;36m(NX[00m
									(NX funf stunden)
									(PX nach hannover)[01;36m)[00m[01;31m)[00m[01;31m)[00m))[01;36m)[00m)
		(SIMPX und wir mussen na ja funfzehn uhr mussen wir vielleicht da sein)
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(VF wenn wir dann um neun oder zehn fahren)
				[01;31m(SIMPX[00m
					(LK sagen)
					(MF wir)
					[01;31m(NF[00m
						(SIMPX
							(VF wir)
							(LK konnten)
							(MF um neun)
							(VC fahren))[01;31m)[00m[01;31m)[00m[01;36m)[00m
			[01;33m(SIMPX[00m (VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK nehmen)
					(MF wir ein zweites fruhstuck im ice)[01;31m)[00m [01;33mSIMPX)[00m
				[01;36m(LKMVC[00m
					(SIMPX
						(LK lesen)
						[01;36m(MF[00m
							(NX
								(ART ein)
								(ADJX bischen)
								(NN zeitung))[01;36m)[00m)
					(LKMVC haben das meeting vorbereitet)[01;36m)[00m
				(KON und)
				(LKMVC kommen dann um zwei oder drei in hannover an)[01;31m)[00m[01;31m)[00m
		(SIMPX das ware doch)
		(SIMPX das konnten wir noch machen)))
Step:PP Attachment
{'new_parent': 'MF', 'new_family': ['PX', 'NX'], 'mover info': [('PX', (6, 9))], 'old_family': ['PX', 'NX', 'PX'], 'start left siblings': [], 'auto preterminals': ('APPR', 'ART', 'NE', 'CARD', 'NN', 'APPR', 'NE'), 'start right siblings': ['NX', 'PX'], 'end left siblings': [], 'auto preterminal span': (6, 13), 'movers': ['PX'], 'old_parent': 'NX', 'end right siblings': ['NX'], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM also)
		(SIMPX
			(VF ich)
			(LK denke)
			[01;36m(NF[00m
				(SIMPX
					(LK sagen)
					(MF
						(MF wir mal)
						[01;31m(MF[00m
							(PX mit dem ice)
							(NX funf stunden nach hannover)[01;31m)[00m))[01;36m)[00m)
		(SIMPX und wir mussen na ja funfzehn uhr mussen wir vielleicht da sein)
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(VF wenn wir dann um neun oder zehn fahren)
				[01;31m(SIMPX[00m
					(LK sagen)
					(MF wir)
					[01;31m(NF[00m
						(SIMPX
							(VF wir)
							(LK konnten)
							(MF um neun)
							(VC fahren))[01;31m)[00m[01;31m)[00m[01;36m)[00m
			[01;33m(SIMPX[00m (VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK nehmen)
					(MF wir ein zweites fruhstuck im ice)[01;31m)[00m [01;33mSIMPX)[00m
				[01;36m(LKMVC[00m
					(SIMPX
						(LK lesen)
						[01;36m(MF[00m
							(NX
								(ART ein)
								(ADJX bischen)
								(NN zeitung))[01;36m)[00m)
					(LKMVC haben das meeting vorbereitet)[01;36m)[00m
				(KON und)
				(LKMVC kommen dann um zwei oder drei in hannover an)[01;31m)[00m[01;31m)[00m
		(SIMPX das ware doch)
		(SIMPX das konnten wir noch machen)))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'NF'], 'mover info': [('VF', (25, 33))], 'old_family': ['VF', 'SIMPX', 'VF', 'FKOORD'], 'start left siblings': [], 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'APPR', 'CARD', 'KON', 'CARD', 'VVFIN', 'VVFIN', 'PPER', 'PPER', 'VMFIN', 'APPR', 'CARD', 'VVINF', 'ADV', 'VVFIN', 'PPER', 'ART', 'ADJA', 'NN', 'APPRART', 'NE', 'VVFIN', 'ART', 'PIDAT', 'NN', 'VAFIN', 'ART', 'NN', 'VVPP', 'KON', 'VVFIN', 'ADV', 'APPR', 'CARD', 'KON', 'CARD', 'APPR', 'NE', 'PTKVZ'), 'start right siblings': ['SIMPX', 'VF', 'FKOORD'], 'end left siblings': [], 'auto preterminal span': (25, 66), 'movers': ['VF'], 'old_parent': 'SIMPX', 'end right siblings': ['LK', 'MF', 'NF'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM also)
		(SIMPX
			(VF ich)
			(LK denke)
			[01;36m(NF[00m
				(SIMPX
					(LK sagen)
					(MF
						(MF wir mal)
						[01;31m(MF[00m
							(PX mit dem ice)
							(NX funf stunden nach hannover)[01;31m)[00m))[01;36m)[00m)
		(SIMPX und wir mussen na ja funfzehn uhr mussen wir vielleicht da sein)
		[01;31m(SIMPX[00m
			(SIMPX
				(VF wenn wir dann um neun oder zehn fahren)
				(LK sagen)
				(MF wir)
				[01;31m(NF[00m
					(SIMPX
						(VF wir)
						(LK konnten)
						(MF um neun)
						(VC fahren))[01;31m)[00m)
			[01;33m(SIMPX[00m (VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK nehmen)
					(MF wir ein zweites fruhstuck im ice)[01;31m)[00m [01;33mSIMPX)[00m
				[01;36m(LKMVC[00m
					(SIMPX
						(LK lesen)
						[01;36m(MF[00m
							(NX
								(ART ein)
								(ADJX bischen)
								(NN zeitung))[01;36m)[00m)
					(LKMVC haben das meeting vorbereitet)[01;36m)[00m
				(KON und)
				(LKMVC kommen dann um zwei oder drei in hannover an)[01;31m)[00m[01;31m)[00m
		(SIMPX das ware doch)
		(SIMPX das konnten wir noch machen)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['VF', 'LK', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'ADV', 'APPR', 'ART', 'NE', 'CARD', 'NN', 'APPR', 'NE'), 'right siblings': [], 'left siblings': [(VF (NX (PPER ich))), (LK (VXFIN (VVFIN denke)))], 'auto preterminal span': (3, 13), 'span': (3, 13), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		(SIMPX
			(VF ich)
			(LK denke)
			(NF
				(SIMPX
					(LK sagen)
					(MF
						(MF wir mal)
						[01;31m(MF[00m
							(PX mit dem ice)
							(NX funf stunden nach hannover)[01;31m)[00m))))
		(SIMPX und wir mussen na ja funfzehn uhr mussen wir vielleicht da sein)
		[01;31m(SIMPX[00m
			(SIMPX
				(VF wenn wir dann um neun oder zehn fahren)
				(LK sagen)
				(MF wir)
				[01;31m(NF[00m
					(SIMPX
						(VF wir)
						(LK konnten)
						(MF um neun)
						(VC fahren))[01;31m)[00m)
			[01;33m(SIMPX[00m (VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK nehmen)
					(MF wir ein zweites fruhstuck im ice)[01;31m)[00m [01;33mSIMPX)[00m
				[01;36m(LKMVC[00m
					(SIMPX
						(LK lesen)
						[01;36m(MF[00m
							(NX
								(ART ein)
								(ADJX bischen)
								(NN zeitung))[01;36m)[00m)
					(LKMVC haben das meeting vorbereitet)[01;36m)[00m
				(KON und)
				(LKMVC kommen dann um zwei oder drei in hannover an)[01;31m)[00m[01;31m)[00m
		(SIMPX das ware doch)
		(SIMPX das konnten wir noch machen)))
Step:UNSET add
{'subtrees': ['SIMPX', 'LKMVC'], 'family': ['LKM', 'LKMVC', 'KON', 'LKMVC'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'ART', 'PIDAT', 'NN', 'VAFIN', 'ART', 'NN', 'VVPP'), 'right siblings': [(KON und), (LKMVC (LK (VXFIN (VVFIN kommen))) (MF (ADVX (ADV dann)) (PX (APPR um) (NX (NX (CARD zwei)) (KON oder) (NX (CARD drei)))) (PX (APPR in) (NX (NE hannover)))) (VC (PTKVZ an)))], 'left siblings': [(LKM (LK (VXFIN (VVFIN nehmen))) (MF (NX (PPER wir)) (NX (ART ein) (ADJX (ADJA zweites)) (NN fruhstuck)) (PX (APPRART im) (NX (NE ice)))))], 'auto preterminal span': (48, 56), 'span': (48, 56), 'parent': 'FKOORD', 'label': 'LKMVC', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		(SIMPX
			(VF ich)
			(LK denke)
			(NF
				(SIMPX
					(LK sagen)
					(MF
						(MF wir mal)
						[01;31m(MF[00m
							(PX mit dem ice)
							(NX funf stunden nach hannover)[01;31m)[00m))))
		(SIMPX und wir mussen na ja funfzehn uhr mussen wir vielleicht da sein)
		[01;31m(SIMPX[00m
			(SIMPX
				(VF wenn wir dann um neun oder zehn fahren)
				(LK sagen)
				(MF wir)
				[01;31m(NF[00m
					(SIMPX
						(VF wir)
						(LK konnten)
						(MF um neun)
						(VC fahren))[01;31m)[00m)
			[01;33m(SIMPX[00m (VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK nehmen)
					(MF wir ein zweites fruhstuck im ice)[01;31m)[00m [01;33mSIMPX)[00m
				(LKMVC
					(SIMPX
						(LK lesen)
						[01;36m(MF[00m
							(NX
								(ART ein)
								(ADJX bischen)
								(NN zeitung))[01;36m)[00m)
					(LKMVC haben das meeting vorbereitet))
				(KON und)
				(LKMVC kommen dann um zwei oder drei in hannover an)[01;31m)[00m[01;31m)[00m
		(SIMPX das ware doch)
		(SIMPX das konnten wir noch machen)))
Step:Unary
{'subtrees': ['NX'], 'family': ['LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'PIDAT', 'NN'), 'right siblings': [], 'left siblings': [(LK (VXFIN (VVFIN lesen)))], 'auto preterminal span': (49, 52), 'span': (49, 52), 'parent': 'SIMPX', 'label': 'MF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		(SIMPX
			(VF ich)
			(LK denke)
			(NF
				(SIMPX
					(LK sagen)
					(MF
						(MF wir mal)
						[01;31m(MF[00m
							(PX mit dem ice)
							(NX funf stunden nach hannover)[01;31m)[00m))))
		(SIMPX und wir mussen na ja funfzehn uhr mussen wir vielleicht da sein)
		[01;31m(SIMPX[00m
			(SIMPX
				(VF wenn wir dann um neun oder zehn fahren)
				(LK sagen)
				(MF wir)
				[01;31m(NF[00m
					(SIMPX
						(VF wir)
						(LK konnten)
						(MF um neun)
						(VC fahren))[01;31m)[00m)
			[01;33m(SIMPX[00m (VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK nehmen)
					(MF wir ein zweites fruhstuck im ice)[01;31m)[00m [01;33mSIMPX)[00m
				(LKMVC lesen ein bischen zeitung haben das meeting vorbereitet)
				(KON und)
				(LKMVC kommen dann um zwei oder drei in hannover an)[01;31m)[00m[01;31m)[00m
		(SIMPX das ware doch)
		(SIMPX das konnten wir noch machen)))
Step:UNSET remove
{'subtrees': ['PX', 'NX'], 'family': ['MF', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV', 'APPR', 'ART', 'NE', 'CARD', 'NN', 'APPR', 'NE'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (4, 13), 'span': (6, 13), 'left siblings': ['MF'], 'label': 'MF', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX ich denke sagen wir mal mit dem ice funf stunden nach hannover)
		(SIMPX und wir mussen na ja funfzehn uhr mussen wir vielleicht da sein)
		[01;31m(SIMPX[00m
			(SIMPX
				(VF wenn wir dann um neun oder zehn fahren)
				(LK sagen)
				(MF wir)
				[01;31m(NF[00m
					(SIMPX
						(VF wir)
						(LK konnten)
						(MF um neun)
						(VC fahren))[01;31m)[00m)
			[01;33m(SIMPX[00m (VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK nehmen)
					(MF wir ein zweites fruhstuck im ice)[01;31m)[00m [01;33mSIMPX)[00m
				(LKMVC lesen ein bischen zeitung haben das meeting vorbereitet)
				(KON und)
				(LKMVC kommen dann um zwei oder drei in hannover an)[01;31m)[00m[01;31m)[00m
		(SIMPX das ware doch)
		(SIMPX das konnten wir noch machen)))
Step:UNSET remove
{'subtrees': ['SIMPX', 'VF', 'FKOORD'], 'family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPER', 'VVFIN', 'VVFIN', 'PPER', 'ADV', 'APPR', 'ART', 'NE', 'CARD', 'NN', 'APPR', 'NE', 'KON', 'PPER', 'VMFIN', 'ITJ', 'PTKANT', 'CARD', 'NN', 'VMFIN', 'PPER', 'ADV', 'ADV', 'VAINF', 'KOUS', 'PPER', 'ADV', 'APPR', 'CARD', 'KON', 'CARD', 'VVFIN', 'VVFIN', 'PPER', 'PPER', 'VMFIN', 'APPR', 'CARD', 'VVINF', 'ADV', 'VVFIN', 'PPER', 'ART', 'ADJA', 'NN', 'APPRART', 'NE', 'VVFIN', 'ART', 'PIDAT', 'NN', 'VAFIN', 'ART', 'NN', 'VVPP', 'KON', 'VVFIN', 'ADV', 'APPR', 'CARD', 'KON', 'CARD', 'APPR', 'NE', 'PTKVZ', 'PDS', 'VAFIN', 'ADV', 'PDS', 'VMFIN', 'PPER', 'ADV', 'VVINF'), 'right siblings': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 74), 'span': (25, 66), 'left siblings': ['DM', 'SIMPX', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX ich denke sagen wir mal mit dem ice funf stunden nach hannover)
		(SIMPX und wir mussen na ja funfzehn uhr mussen wir vielleicht da sein)
		(SIMPX
			(VF wenn wir dann um neun oder zehn fahren)
			(LK sagen)
			(MF wir)
			[01;31m(NF[00m
				(SIMPX
					(VF wir)
					(LK konnten)
					(MF um neun)
					(VC fahren))[01;31m)[00m)
		[01;33m(SIMPX[00m (VF dann)
		[01;31m(FKOORD[00m
			[01;31m(LKM[00m
				(LK nehmen)
				(MF wir ein zweites fruhstuck im ice)[01;31m)[00m [01;33mSIMPX)[00m
			(LKMVC lesen ein bischen zeitung haben das meeting vorbereitet)
			(KON und)
			(LKMVC kommen dann um zwei oder drei in hannover an)[01;31m)[00m
		(SIMPX das ware doch)
		(SIMPX das konnten wir noch machen)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['VF', 'LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'APPR', 'CARD', 'KON', 'CARD', 'VVFIN', 'VVFIN', 'PPER', 'PPER', 'VMFIN', 'APPR', 'CARD', 'VVINF'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (25, 40), 'span': (35, 40), 'left siblings': ['VF', 'LK', 'MF'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX ich denke sagen wir mal mit dem ice funf stunden nach hannover)
		(SIMPX und wir mussen na ja funfzehn uhr mussen wir vielleicht da sein)
		(SIMPX wenn wir dann um neun oder zehn fahren sagen wir wir konnten um neun fahren)
		[01;33m(SIMPX[00m (VF dann)
		[01;31m(FKOORD[00m
			[01;31m(LKM[00m
				(LK nehmen)
				(MF wir ein zweites fruhstuck im ice)[01;31m)[00m [01;33mSIMPX)[00m
			(LKMVC lesen ein bischen zeitung haben das meeting vorbereitet)
			(KON und)
			(LKMVC kommen dann um zwei oder drei in hannover an)[01;31m)[00m
		(SIMPX das ware doch)
		(SIMPX das konnten wir noch machen)))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['LKM', 'LKMVC', 'KON', 'LKMVC'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'ART', 'ADJA', 'NN', 'APPRART', 'NE', 'VVFIN', 'ART', 'PIDAT', 'NN', 'VAFIN', 'ART', 'NN', 'VVPP', 'KON', 'VVFIN', 'ADV', 'APPR', 'CARD', 'KON', 'CARD', 'APPR', 'NE', 'PTKVZ'), 'right siblings': ['LKMVC', 'KON', 'LKMVC'], 'parent': 'FKOORD', 'auto preterminal span': (41, 66), 'span': (41, 48), 'left siblings': [], 'label': 'LKM', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX ich denke sagen wir mal mit dem ice funf stunden nach hannover)
		(SIMPX und wir mussen na ja funfzehn uhr mussen wir vielleicht da sein)
		(SIMPX wenn wir dann um neun oder zehn fahren sagen wir wir konnten um neun fahren)
		[01;33m(SIMPX[00m (VF dann)
		[01;31m(FKOORD[00m
			(LK nehmen)
			(MF wir ein zweites fruhstuck im ice) [01;33mSIMPX)[00m
			(LKMVC lesen ein bischen zeitung haben das meeting vorbereitet)
			(KON und)
			(LKMVC kommen dann um zwei oder drei in hannover an)[01;31m)[00m
		(SIMPX das ware doch)
		(SIMPX das konnten wir noch machen)))
Step:UNSET remove
{'subtrees': ['LK', 'MF', 'LKMVC', 'KON', 'LKMVC'], 'family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'VF', 'FKOORD', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPER', 'VVFIN', 'VVFIN', 'PPER', 'ADV', 'APPR', 'ART', 'NE', 'CARD', 'NN', 'APPR', 'NE', 'KON', 'PPER', 'VMFIN', 'ITJ', 'PTKANT', 'CARD', 'NN', 'VMFIN', 'PPER', 'ADV', 'ADV', 'VAINF', 'KOUS', 'PPER', 'ADV', 'APPR', 'CARD', 'KON', 'CARD', 'VVFIN', 'VVFIN', 'PPER', 'PPER', 'VMFIN', 'APPR', 'CARD', 'VVINF', 'ADV', 'VVFIN', 'PPER', 'ART', 'ADJA', 'NN', 'APPRART', 'NE', 'VVFIN', 'ART', 'PIDAT', 'NN', 'VAFIN', 'ART', 'NN', 'VVPP', 'KON', 'VVFIN', 'ADV', 'APPR', 'CARD', 'KON', 'CARD', 'APPR', 'NE', 'PTKVZ', 'PDS', 'VAFIN', 'ADV', 'PDS', 'VMFIN', 'PPER', 'ADV', 'VVINF'), 'right siblings': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 74), 'span': (41, 66), 'left siblings': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'VF'], 'label': 'FKOORD', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX ich denke sagen wir mal mit dem ice funf stunden nach hannover)
		(SIMPX und wir mussen na ja funfzehn uhr mussen wir vielleicht da sein)
		(SIMPX wenn wir dann um neun oder zehn fahren sagen wir wir konnten um neun fahren)
		[01;36m(SIMPX[00m
			(VF dann)
			(LK nehmen)
			(MF wir ein zweites fruhstuck im ice)[01;36m)[00m
		(LKMVC lesen ein bischen zeitung haben das meeting vorbereitet)
		(KON und)
		(LKMVC kommen dann um zwei oder drei in hannover an)
		(SIMPX das ware doch)
		(SIMPX das konnten wir noch machen)))
Step:UNSET add
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'LKMVC', 'KON', 'LKMVC', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'ART', 'ADJA', 'NN', 'APPRART', 'NE'), 'right siblings': [(LKMVC (SIMPX (LK (VXFIN (VVFIN lesen))) (MF (NX (ART ein) (ADJX (PIDAT bischen)) (NN zeitung)))) (LKMVC (LK (VXFIN (VAFIN haben))) (MF (NX (ART das) (NN meeting))) (VC (VXINF (VVPP vorbereitet))))), (KON und), (LKMVC (LK (VXFIN (VVFIN kommen))) (MF (ADVX (ADV dann)) (PX (APPR um) (NX (NX (CARD zwei)) (KON oder) (NX (CARD drei)))) (PX (APPR in) (NX (NE hannover)))) (VC (PTKVZ an))), (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VAFIN ware))) (MF (ADVX (ADV doch)))), (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VMFIN konnten))) (MF (NX (PPER wir)) (ADVX (ADV noch))) (VC (VXINF (VVINF machen))))], 'left siblings': [(DM (ADVX (ADV also))), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN denke))) (NF (SIMPX (LK (VXFIN (VVFIN sagen))) (MF (MF (NX (PPER wir)) (ADVX (ADV mal))) (PX (APPR mit) (NX (ART dem) (NE ice))) (NX (NX (ADJX (CARD funf)) (NN stunden)) (PX (APPR nach) (NX (NE hannover)))))))), (SIMPX (KOORD (KON und)) (VF (NX (PPER wir))) (LK (VXFIN (VMFIN mussen))) (DM (ITJ na) (PTKANT ja)) (SIMPX (VF (NX (ADJX (CARD funfzehn)) (NN uhr))) (LK (VXFIN (VMFIN mussen))) (MF (NX (PPER wir)) (ADVX (ADV vielleicht)) (ADVX (ADV da))) (VC (VXINF (VAINF sein))))), (SIMPX (VF (SIMPX (C (KOUS wenn)) (MF (NX (PPER wir)) (ADVX (ADV dann)) (PX (APPR um) (NX (NX (CARD neun)) (KON oder) (NX (CARD zehn))))) (VC (VXFIN (VVFIN fahren))))) (LK (VXFIN (VVFIN sagen))) (MF (NX (PPER wir))) (SIMPX (VF (NX (PPER wir))) (LK (VXFIN (VMFIN konnten))) (MF (PX (APPR um) (NX (CARD neun)))) (VC (VXINF (VVINF fahren)))))], 'auto preterminal span': (40, 48), 'span': (40, 48), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP also ich denke sagen wir mal mit dem ice funf stunden nach hannover und wir mussen na ja funfzehn uhr mussen wir vielleicht da sein wenn wir dann um neun oder zehn fahren sagen wir wir konnten um neun fahren dann nehmen wir ein zweites fruhstuck im ice lesen ein bischen zeitung haben das meeting vorbereitet und kommen dann um zwei oder drei in hannover an das ware doch das konnten wir noch machen)

Sentence 457:
7 Initial errors
0 on fringe, 5 iterations
1 Error:Single Word Phrase
1 Error:Clause Attachment
3 Error:UNSET move
1 Error:Clause Attachment
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(PX grade am montag)
		[01;36m(SIMPX[00m
			[01;36m(SIMPX[00m
				[01;31m(DM[00m
					[01;31m(NX[00m
						[01;36m(KOORD[00m
							(KON und)[01;36m)[00m
						[01;36m(DM[00m
							(NX
								(NN moment))[01;36m)[00m[01;31m)[00m[01;31m)[00m
				(SIMPX wir hatten)[01;36m)[00m
			(SIMPX wir haben ein datum)[01;36m)[00m
		(SIMPX wir haben einen zug)
		(SIMPX wie kommen wir denn zuruck)
		(SIMPX
			(LK hast)
			(MF
				(NX du)
				[01;31m(NX[00m
					(NX informationen)
					(PX uber eine ruckreise)[01;31m)[00m))))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['KOORD', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON',), 'right siblings': [(NX (NN moment))], 'left siblings': [], 'auto preterminal span': (3, 4), 'span': (3, 4), 'parent': 'NX', 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(PX grade am montag)
		[01;36m(SIMPX[00m
			[01;36m(SIMPX[00m
				[01;31m(DM[00m
					[01;31m(NX[00m
						(KOORD und)
						[01;36m(DM[00m
							(NX
								(NN moment))[01;36m)[00m[01;31m)[00m[01;31m)[00m
				(SIMPX wir hatten)[01;36m)[00m
			(SIMPX wir haben ein datum)[01;36m)[00m
		(SIMPX wir haben einen zug)
		(SIMPX wie kommen wir denn zuruck)
		(SIMPX
			(LK hast)
			(MF
				(NX du)
				[01;31m(NX[00m
					(NX informationen)
					(PX uber eine ruckreise)[01;31m)[00m))))
Step:Clause Attachment
{'subtrees': ['DM', 'SIMPX'], 'family': ['PX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'NN', 'PPER', 'VAFIN'), 'right siblings': [(SIMPX (VF (NX (PPER wir))) (LK (VXFIN (VAFIN haben))) (MF (NX (ART ein) (NN datum)))), (SIMPX (VF (NX (PPER wir))) (LK (VXFIN (VAFIN haben))) (MF (NX (ART einen) (NN zug)))), (SIMPX (VF (ADJX (PWAV wie))) (LK (VXFIN (VVFIN kommen))) (MF (NX (PPER wir)) (ADVX (ADV denn))) (VC (PTKVZ zuruck))), (SIMPX (LK (VXFIN (VAFIN hast))) (MF (NX (PPER du)) (NX (NX (NN informationen)) (PX (APPR uber) (NX (ART eine) (NN ruckreise))))))], 'left siblings': [(PX (ADVX (ADV grade)) (PX (APPRART am) (NX (NN montag))))], 'auto preterminal span': (3, 7), 'span': (3, 7), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(PX grade am montag)
		[01;36m(SIMPX[00m
			(SIMPX
				[01;31m(DM[00m
					[01;31m(NX[00m
						(KOORD und)
						[01;36m(DM[00m
							(NX
								(NN moment))[01;36m)[00m[01;31m)[00m[01;31m)[00m
				(SIMPX wir hatten))
			(SIMPX wir haben ein datum)[01;36m)[00m
		(SIMPX wir haben einen zug)
		(SIMPX wie kommen wir denn zuruck)
		(SIMPX
			(LK hast)
			(MF
				(NX du)
				[01;31m(NX[00m
					(NX informationen)
					(PX uber eine ruckreise)[01;31m)[00m))))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['KOORD', 'DM', 'SIMPX'], 'mover info': [('KOORD', (3, 4))], 'old_family': ['KOORD', 'NX'], 'start left siblings': [], 'auto preterminals': ('KON', 'NN', 'PPER', 'VAFIN'), 'start right siblings': ['NX'], 'end left siblings': [], 'auto preterminal span': (3, 7), 'movers': ['KOORD'], 'old_parent': 'NX', 'POS confusion': ('KON', 'KON'), 'end right siblings': ['DM', 'SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(PX grade am montag)
		[01;36m(SIMPX[00m
			(SIMPX und moment wir hatten)
			(SIMPX wir haben ein datum)[01;36m)[00m
		(SIMPX wir haben einen zug)
		(SIMPX wie kommen wir denn zuruck)
		(SIMPX
			(LK hast)
			(MF
				(NX du)
				[01;31m(NX[00m
					(NX informationen)
					(PX uber eine ruckreise)[01;31m)[00m))))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['PX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'NN', 'PPER', 'VAFIN', 'PPER', 'VAFIN', 'ART', 'NN'), 'right siblings': [(SIMPX (VF (NX (PPER wir))) (LK (VXFIN (VAFIN haben))) (MF (NX (ART einen) (NN zug)))), (SIMPX (VF (ADJX (PWAV wie))) (LK (VXFIN (VVFIN kommen))) (MF (NX (PPER wir)) (ADVX (ADV denn))) (VC (PTKVZ zuruck))), (SIMPX (LK (VXFIN (VAFIN hast))) (MF (NX (PPER du)) (NX (NX (NN informationen)) (PX (APPR uber) (NX (ART eine) (NN ruckreise))))))], 'left siblings': [(PX (ADVX (ADV grade)) (PX (APPRART am) (NX (NN montag))))], 'auto preterminal span': (3, 11), 'span': (3, 11), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(PX grade am montag)
		(SIMPX und moment wir hatten wir haben ein datum)
		(SIMPX wir haben einen zug)
		(SIMPX wie kommen wir denn zuruck)
		(SIMPX
			(LK hast)
			(MF
				(NX du)
				[01;31m(NX[00m
					(NX informationen)
					(PX uber eine ruckreise)[01;31m)[00m))))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'NN', 'APPR', 'ART', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (21, 26), 'span': (22, 26), 'left siblings': ['NX'], 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP grade am montag und moment wir hatten wir haben ein datum wir haben einen zug wie kommen wir denn zuruck hast du informationen uber eine ruckreise)

Sentence 458:
51 Initial errors
0 on fringe, 38 iterations
4 Error:UNSET move
4 Error:PP Attachment
3 Error:NP Attachment
2 Error:Single Word Phrase
2 Error:Different label
2 Error:Single Word Phrase
2 Error:Single Word Phrase
2 Error:UNSET move
1 Error:Single Word Phrase
1 Error:Unary
1 Error:Single Word Phrase
1 Error:Unary
1 Error:Unary
1 Error:Unary
1 Error:Co-ordination
1 Error:UNSET remove
1 Error:UNSET add
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:Single Word Phrase
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:Unary
1 Error:Clause Attachment
1 Error:NP Internal Structure
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:Modifier Attachment
1 Error:PP Attachment
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:Modifier Attachment
1 Error:Modifier Attachment
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF dann)
				(LK konnen)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX wir)
					(ADVX einfach)[01;31m)[00m[01;31m)[00m
			[01;36m(NX[00m
				(ART den) [01;33mMF)[00m[01;36m)[00m[01;36m)[00m
		(SIMPX [01;33m(SIMPX[00m
			(VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK brauchen)
					(MF wir uns jetzt vielleicht gar nicht)
					(VC festlegen)[01;31m)[00m [01;33mSIMPX)[00m
				(KON und)
				[01;31m(LKMN[00m
					(LK sagen)
					(MF einfach)
					(NF
						(SIMPX
							(VF wir)
							(LK fliegen)
							[01;36m(MF[00m [01;36m(ADVX[00m [01;31m(VC[00m
								(PTKVZ zuruck)[01;31m)[00m[01;36m)[00m[01;36m)[00m))[01;31m)[00m[01;31m)[00m)
		(DM gut)
		(ADVX dann)
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(VF dann)
				(LK denke)
				(MF ich)[01;36m)[00m
			[01;31m(NF[00m [01;33m(SIMPX (NF[00m
				[01;31m(SIMPX[00m
					(VF dann)
					(LK haben)
					(MF wir alles)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(PX[00m
			[01;36m(VC[00m
				(APPR auser)[01;36m)[00m
			[01;36m(NF[00m
				(SIMPX
					(C das)
					(MF wir immer noch nicht)
					(VC wissen)
					(NF wo wir ubernachten konnen))[01;36m)[00m[01;31m)[00m [01;33mNF) SIMPX)[00m
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK konnen)
			(MF wir abends noch ein bischen in der bar)
			(VC sitzen)[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON oder)[01;31m)[00m
			(VF auf alle falle)
			(LK treffen)
			(MF wir uns dann da)[01;31m)[00m
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		[01;31m(SIMPX[00m
			(VF das)
			(LK ist)
			[01;31m(MF[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(ART das)
						[01;31m(NX[00m
							(NX marriotthotel)
							(NX hannover)[01;31m)[00m[01;31m)[00m
					[01;36m(SIMPX[00m [01;31m(NX[00m
						(ART das)
						(NX parkhotel hannover)[01;31m)[00m[01;36m)[00m
					[01;31m(NX[00m
						(ART das)
						(NX hotel cristal hannover)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF die)
			(LK sind)
			(MF
				(NX alle)
				[01;31m(ADVX[00m
					(ADVX mehr)
					(KON oder)
					[01;33m(PX[00m (ADVX minder)[01;31m)[00m
				(PX in der nahe vom hauptbahnhof))[01;31m)[00m [01;33mPX)[00m
		[01;31m(SIMPX[00m
			(VF ich)
			(LK kucke)
			(MF mir mal die preise)
			(VC an)[01;31m)[00m
		(DM also)
		[01;31m(SIMPX[00m
			(VF
				(NX
					(ART das)
					(NX
						(NX hotel)
						(NX
							(NX cristal)
							[01;36m(VF[00m
								(NX
									(NE hannover))[01;36m)[00m))))
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF
						(ADVX vielleicht)
						[01;31m(ADJX[00m
							(NX ein bischen)
							(ADJD teuer)[01;31m)[00m)[01;31m)[00m
				(LKM [01;33m(LKM[00m
					(LK hat)
					[01;31m(MF[00m
						[01;36m(NX[00m [01;36m(MF[00m [01;31m(PX[00m
							(PROP dafur)[01;31m)[00m[01;36m)[00m[01;36m)[00m
						[01;31m(ADVX[00m
							(ADV aber)[01;31m)[00m
						[01;31m(NX[00m
							[01;36m(NX[00m
								(NX sauna)
								(NX solarium) [01;33mLKM)[00m[01;36m)[00m
							[01;36m(DM[00m [01;31m(NX[00m
								(NN bar)[01;31m)[00m[01;36m)[00m
							(KON und)
							(NX bistro)[01;31m)[00m[01;31m)[00m)[01;31m)[00m[01;31m)[00m))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['NX', 'ADVX', 'ART'], 'mover info': [('ART', (11, 12))], 'old_family': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'ART', 'SIMPX', 'DM', 'ADVX', 'SIMPX', 'PX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'DM', 'SIMPX'], 'start left siblings': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX'], 'auto preterminals': ('ITJ', 'PTKANT', 'PDS', 'VVFIN', 'PTKANT', 'ADV', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ART', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'VVFIN', 'ADV', 'PPER', 'VVFIN', 'PTKVZ', 'ITJ', 'ADV', 'ADV', 'VVFIN', 'PPER', 'ADV', 'VAFIN', 'PPER', 'PIS', 'APPR', 'KOUS', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'VVFIN', 'PWAV', 'PPER', 'VVINF', 'VMFIN', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'APPR', 'PIDAT', 'NN', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'KON', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'VVPP', 'APPR', 'NN', 'PDS', 'VAFIN', 'ART', 'NE', 'NE', 'ART', 'NE', 'NE', 'ART', 'NN', 'NE', 'NE', 'PDS', 'VAFIN', 'PIS', 'ADV', 'KON', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'PPER', 'VVFIN', 'PRF', 'ADV', 'ART', 'NN', 'PTKVZ', 'ADV', 'ART', 'NN', 'NE', 'NE', 'VAFIN', 'ADV', 'ART', 'PIS', 'ADJD', 'VAFIN', 'PROP', 'ADV', 'NN', 'NN', 'NN', 'KON', 'NN'), 'start right siblings': ['SIMPX', 'DM', 'ADVX', 'SIMPX', 'PX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'DM', 'SIMPX'], 'end left siblings': ['NX', 'ADVX'], 'auto preterminal span': (0, 132), 'movers': ['ART'], 'old_parent': 'TURN', 'POS confusion': ('ART', 'ART'), 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK konnen)
			(MF
				(NX wir)
				(ADVX einfach)
				[01;36m(NX[00m
					(ART den)[01;36m)[00m))
		(SIMPX [01;33m(SIMPX[00m
			(VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK brauchen)
					(MF wir uns jetzt vielleicht gar nicht)
					(VC festlegen)[01;31m)[00m [01;33mSIMPX)[00m
				(KON und)
				[01;31m(LKMN[00m
					(LK sagen)
					(MF einfach)
					(NF
						(SIMPX
							(VF wir)
							(LK fliegen)
							[01;36m(MF[00m [01;36m(ADVX[00m [01;31m(VC[00m
								(PTKVZ zuruck)[01;31m)[00m[01;36m)[00m[01;36m)[00m))[01;31m)[00m[01;31m)[00m)
		(DM gut)
		(ADVX dann)
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(VF dann)
				(LK denke)
				(MF ich)[01;36m)[00m
			[01;31m(NF[00m [01;33m(SIMPX (NF[00m
				[01;31m(SIMPX[00m
					(VF dann)
					(LK haben)
					(MF wir alles)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(PX[00m
			[01;36m(VC[00m
				(APPR auser)[01;36m)[00m
			[01;36m(NF[00m
				(SIMPX
					(C das)
					(MF wir immer noch nicht)
					(VC wissen)
					(NF wo wir ubernachten konnen))[01;36m)[00m[01;31m)[00m [01;33mNF) SIMPX)[00m
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK konnen)
			(MF wir abends noch ein bischen in der bar)
			(VC sitzen)[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON oder)[01;31m)[00m
			(VF auf alle falle)
			(LK treffen)
			(MF wir uns dann da)[01;31m)[00m
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		[01;31m(SIMPX[00m
			(VF das)
			(LK ist)
			[01;31m(MF[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(ART das)
						[01;31m(NX[00m
							(NX marriotthotel)
							(NX hannover)[01;31m)[00m[01;31m)[00m
					[01;36m(SIMPX[00m [01;31m(NX[00m
						(ART das)
						(NX parkhotel hannover)[01;31m)[00m[01;36m)[00m
					[01;31m(NX[00m
						(ART das)
						(NX hotel cristal hannover)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF die)
			(LK sind)
			(MF
				(NX alle)
				[01;31m(ADVX[00m
					(ADVX mehr)
					(KON oder)
					[01;33m(PX[00m (ADVX minder)[01;31m)[00m
				(PX in der nahe vom hauptbahnhof))[01;31m)[00m [01;33mPX)[00m
		[01;31m(SIMPX[00m
			(VF ich)
			(LK kucke)
			(MF mir mal die preise)
			(VC an)[01;31m)[00m
		(DM also)
		[01;31m(SIMPX[00m
			(VF
				(NX
					(ART das)
					(NX
						(NX hotel)
						(NX
							(NX cristal)
							[01;36m(VF[00m
								(NX
									(NE hannover))[01;36m)[00m))))
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF
						(ADVX vielleicht)
						[01;31m(ADJX[00m
							(NX ein bischen)
							(ADJD teuer)[01;31m)[00m)[01;31m)[00m
				(LKM [01;33m(LKM[00m
					(LK hat)
					[01;31m(MF[00m
						[01;36m(NX[00m [01;36m(MF[00m [01;31m(PX[00m
							(PROP dafur)[01;31m)[00m[01;36m)[00m[01;36m)[00m
						[01;31m(ADVX[00m
							(ADV aber)[01;31m)[00m
						[01;31m(NX[00m
							[01;36m(NX[00m
								(NX sauna)
								(NX solarium) [01;33mLKM)[00m[01;36m)[00m
							[01;36m(DM[00m [01;31m(NX[00m
								(NN bar)[01;31m)[00m[01;36m)[00m
							(KON und)
							(NX bistro)[01;31m)[00m[01;31m)[00m)[01;31m)[00m[01;31m)[00m))
Step:PP Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'PX'], 'mover info': [('PX', (36, 47))], 'old_family': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'SIMPX', 'PX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'DM', 'SIMPX'], 'start left siblings': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'SIMPX'], 'auto preterminals': ('ITJ', 'PTKANT', 'PDS', 'VVFIN', 'PTKANT', 'ADV', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ART', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'VVFIN', 'ADV', 'PPER', 'VVFIN', 'PTKVZ', 'ITJ', 'ADV', 'ADV', 'VVFIN', 'PPER', 'ADV', 'VAFIN', 'PPER', 'PIS', 'APPR', 'KOUS', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'VVFIN', 'PWAV', 'PPER', 'VVINF', 'VMFIN', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'APPR', 'PIDAT', 'NN', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'KON', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'VVPP', 'APPR', 'NN', 'PDS', 'VAFIN', 'ART', 'NE', 'NE', 'ART', 'NE', 'NE', 'ART', 'NN', 'NE', 'NE', 'PDS', 'VAFIN', 'PIS', 'ADV', 'KON', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'PPER', 'VVFIN', 'PRF', 'ADV', 'ART', 'NN', 'PTKVZ', 'ADV', 'ART', 'NN', 'NE', 'NE', 'VAFIN', 'ADV', 'ART', 'PIS', 'ADJD', 'VAFIN', 'PROP', 'ADV', 'NN', 'NN', 'NN', 'KON', 'NN'), 'start right siblings': ['SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'DM', 'SIMPX'], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (0, 132), 'movers': ['PX'], 'old_parent': 'TURN', 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK konnen)
			(MF
				(NX wir)
				(ADVX einfach)
				[01;36m(NX[00m
					(ART den)[01;36m)[00m))
		(SIMPX [01;33m(SIMPX[00m
			(VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK brauchen)
					(MF wir uns jetzt vielleicht gar nicht)
					(VC festlegen)[01;31m)[00m [01;33mSIMPX)[00m
				(KON und)
				[01;31m(LKMN[00m
					(LK sagen)
					(MF einfach)
					(NF
						(SIMPX
							(VF wir)
							(LK fliegen)
							[01;36m(MF[00m [01;36m(ADVX[00m [01;31m(VC[00m
								(PTKVZ zuruck)[01;31m)[00m[01;36m)[00m[01;36m)[00m))[01;31m)[00m[01;31m)[00m)
		(DM gut)
		(ADVX dann)
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(VF dann)
				(LK denke)
				(MF ich)[01;36m)[00m
			(NF
				(SIMPX
					(VF dann)
					(LK haben)
					(MF wir alles)
					[01;31m(PX[00m
						[01;36m(VC[00m
							(APPR auser)[01;36m)[00m
						[01;36m(NF[00m
							(SIMPX
								(C das)
								(MF wir immer noch nicht)
								(VC wissen)
								(NF wo wir ubernachten konnen))[01;36m)[00m[01;31m)[00m))[01;31m)[00m
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK konnen)
			(MF wir abends noch ein bischen in der bar)
			(VC sitzen)[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON oder)[01;31m)[00m
			(VF auf alle falle)
			(LK treffen)
			(MF wir uns dann da)[01;31m)[00m
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		[01;31m(SIMPX[00m
			(VF das)
			(LK ist)
			[01;31m(MF[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(ART das)
						[01;31m(NX[00m
							(NX marriotthotel)
							(NX hannover)[01;31m)[00m[01;31m)[00m
					[01;36m(SIMPX[00m [01;31m(NX[00m
						(ART das)
						(NX parkhotel hannover)[01;31m)[00m[01;36m)[00m
					[01;31m(NX[00m
						(ART das)
						(NX hotel cristal hannover)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF die)
			(LK sind)
			(MF
				(NX alle)
				[01;31m(ADVX[00m
					(ADVX mehr)
					(KON oder)
					[01;33m(PX[00m (ADVX minder)[01;31m)[00m
				(PX in der nahe vom hauptbahnhof))[01;31m)[00m [01;33mPX)[00m
		[01;31m(SIMPX[00m
			(VF ich)
			(LK kucke)
			(MF mir mal die preise)
			(VC an)[01;31m)[00m
		(DM also)
		[01;31m(SIMPX[00m
			(VF
				(NX
					(ART das)
					(NX
						(NX hotel)
						(NX
							(NX cristal)
							[01;36m(VF[00m
								(NX
									(NE hannover))[01;36m)[00m))))
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF
						(ADVX vielleicht)
						[01;31m(ADJX[00m
							(NX ein bischen)
							(ADJD teuer)[01;31m)[00m)[01;31m)[00m
				(LKM [01;33m(LKM[00m
					(LK hat)
					[01;31m(MF[00m
						[01;36m(NX[00m [01;36m(MF[00m [01;31m(PX[00m
							(PROP dafur)[01;31m)[00m[01;36m)[00m[01;36m)[00m
						[01;31m(ADVX[00m
							(ADV aber)[01;31m)[00m
						[01;31m(NX[00m
							[01;36m(NX[00m
								(NX sauna)
								(NX solarium) [01;33mLKM)[00m[01;36m)[00m
							[01;36m(DM[00m [01;31m(NX[00m
								(NN bar)[01;31m)[00m[01;36m)[00m
							(KON und)
							(NX bistro)[01;31m)[00m[01;31m)[00m)[01;31m)[00m[01;31m)[00m))
Step:NP Attachment
{'new_parent': 'FKOORD', 'new_family': ['LKM', 'LKM', 'NX', 'KON', 'NX'], 'mover info': [('NX', (129, 130)), ('KON', (130, 131)), ('NX', (131, 132))], 'old_family': ['NX', 'NX', 'NX', 'KON', 'NX'], 'start left siblings': ['NX', 'NX'], 'auto preterminals': ('VAFIN', 'ADV', 'ART', 'PIS', 'ADJD', 'VAFIN', 'PROP', 'ADV', 'NN', 'NN', 'NN', 'KON', 'NN'), 'start right siblings': [], 'end left siblings': ['LKM', 'LKM'], 'auto preterminal span': (119, 132), 'adding node already present': False, 'movers': ['NX', 'KON', 'NX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'DM'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK konnen)
			(MF
				(NX wir)
				(ADVX einfach)
				[01;36m(NX[00m
					(ART den)[01;36m)[00m))
		(SIMPX [01;33m(SIMPX[00m
			(VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK brauchen)
					(MF wir uns jetzt vielleicht gar nicht)
					(VC festlegen)[01;31m)[00m [01;33mSIMPX)[00m
				(KON und)
				[01;31m(LKMN[00m
					(LK sagen)
					(MF einfach)
					(NF
						(SIMPX
							(VF wir)
							(LK fliegen)
							[01;36m(MF[00m [01;36m(ADVX[00m [01;31m(VC[00m
								(PTKVZ zuruck)[01;31m)[00m[01;36m)[00m[01;36m)[00m))[01;31m)[00m[01;31m)[00m)
		(DM gut)
		(ADVX dann)
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(VF dann)
				(LK denke)
				(MF ich)[01;36m)[00m
			(NF
				(SIMPX
					(VF dann)
					(LK haben)
					(MF wir alles)
					[01;31m(PX[00m
						[01;36m(VC[00m
							(APPR auser)[01;36m)[00m
						[01;36m(NF[00m
							(SIMPX
								(C das)
								(MF wir immer noch nicht)
								(VC wissen)
								(NF wo wir ubernachten konnen))[01;36m)[00m[01;31m)[00m))[01;31m)[00m
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK konnen)
			(MF wir abends noch ein bischen in der bar)
			(VC sitzen)[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON oder)[01;31m)[00m
			(VF auf alle falle)
			(LK treffen)
			(MF wir uns dann da)[01;31m)[00m
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		[01;31m(SIMPX[00m
			(VF das)
			(LK ist)
			[01;31m(MF[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(ART das)
						[01;31m(NX[00m
							(NX marriotthotel)
							(NX hannover)[01;31m)[00m[01;31m)[00m
					[01;36m(SIMPX[00m [01;31m(NX[00m
						(ART das)
						(NX parkhotel hannover)[01;31m)[00m[01;36m)[00m
					[01;31m(NX[00m
						(ART das)
						(NX hotel cristal hannover)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF die)
			(LK sind)
			(MF
				(NX alle)
				[01;31m(ADVX[00m
					(ADVX mehr)
					(KON oder)
					[01;33m(PX[00m (ADVX minder)[01;31m)[00m
				(PX in der nahe vom hauptbahnhof))[01;31m)[00m [01;33mPX)[00m
		[01;31m(SIMPX[00m
			(VF ich)
			(LK kucke)
			(MF mir mal die preise)
			(VC an)[01;31m)[00m
		(DM also)
		[01;31m(SIMPX[00m
			(VF
				(NX
					(ART das)
					(NX
						(NX hotel)
						(NX
							(NX cristal)
							[01;36m(VF[00m
								(NX
									(NE hannover))[01;36m)[00m))))
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF
						(ADVX vielleicht)
						[01;31m(ADJX[00m
							(NX ein bischen)
							(ADJD teuer)[01;31m)[00m)[01;31m)[00m
				(LKM
					(LKM
						(LK hat)
						[01;31m(MF[00m
							[01;36m(NX[00m [01;36m(MF[00m [01;31m(PX[00m
								(PROP dafur)[01;31m)[00m[01;36m)[00m[01;36m)[00m
							[01;31m(ADVX[00m
								(ADV aber)[01;31m)[00m
							(NX sauna solarium)[01;31m)[00m)
					[01;36m(DM[00m [01;31m(NX[00m
						(NN bar)[01;31m)[00m[01;36m)[00m
					(KON und)
					(NX bistro))[01;31m)[00m[01;31m)[00m))
Step:Single Word Phrase
{'family': ['VF', 'LK', 'ADVX'], 'auto preterminal span': (26, 27), 'span': (26, 27), 'subtrees': ['PTKVZ'], 'parent': 'SIMPX', 'over_word': True, 'auto preterminals': ('PTKVZ',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VC', 'ADVX')}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK konnen)
			(MF
				(NX wir)
				(ADVX einfach)
				[01;36m(NX[00m
					(ART den)[01;36m)[00m))
		(SIMPX [01;33m(SIMPX[00m
			(VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK brauchen)
					(MF wir uns jetzt vielleicht gar nicht)
					(VC festlegen)[01;31m)[00m [01;33mSIMPX)[00m
				(KON und)
				[01;31m(LKMN[00m
					(LK sagen)
					(MF einfach)
					(NF
						(SIMPX
							(VF wir)
							(LK fliegen)
							[01;36m(MF[00m
								(ADVX
									(PTKVZ zuruck))[01;36m)[00m))[01;31m)[00m[01;31m)[00m)
		(DM gut)
		(ADVX dann)
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(VF dann)
				(LK denke)
				(MF ich)[01;36m)[00m
			(NF
				(SIMPX
					(VF dann)
					(LK haben)
					(MF wir alles)
					[01;31m(PX[00m
						[01;36m(VC[00m
							(APPR auser)[01;36m)[00m
						[01;36m(NF[00m
							(SIMPX
								(C das)
								(MF wir immer noch nicht)
								(VC wissen)
								(NF wo wir ubernachten konnen))[01;36m)[00m[01;31m)[00m))[01;31m)[00m
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK konnen)
			(MF wir abends noch ein bischen in der bar)
			(VC sitzen)[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON oder)[01;31m)[00m
			(VF auf alle falle)
			(LK treffen)
			(MF wir uns dann da)[01;31m)[00m
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		[01;31m(SIMPX[00m
			(VF das)
			(LK ist)
			[01;31m(MF[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(ART das)
						[01;31m(NX[00m
							(NX marriotthotel)
							(NX hannover)[01;31m)[00m[01;31m)[00m
					[01;36m(SIMPX[00m [01;31m(NX[00m
						(ART das)
						(NX parkhotel hannover)[01;31m)[00m[01;36m)[00m
					[01;31m(NX[00m
						(ART das)
						(NX hotel cristal hannover)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF die)
			(LK sind)
			(MF
				(NX alle)
				[01;31m(ADVX[00m
					(ADVX mehr)
					(KON oder)
					[01;33m(PX[00m (ADVX minder)[01;31m)[00m
				(PX in der nahe vom hauptbahnhof))[01;31m)[00m [01;33mPX)[00m
		[01;31m(SIMPX[00m
			(VF ich)
			(LK kucke)
			(MF mir mal die preise)
			(VC an)[01;31m)[00m
		(DM also)
		[01;31m(SIMPX[00m
			(VF
				(NX
					(ART das)
					(NX
						(NX hotel)
						(NX
							(NX cristal)
							[01;36m(VF[00m
								(NX
									(NE hannover))[01;36m)[00m))))
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF
						(ADVX vielleicht)
						[01;31m(ADJX[00m
							(NX ein bischen)
							(ADJD teuer)[01;31m)[00m)[01;31m)[00m
				(LKM
					(LKM
						(LK hat)
						[01;31m(MF[00m
							[01;36m(NX[00m [01;36m(MF[00m [01;31m(PX[00m
								(PROP dafur)[01;31m)[00m[01;36m)[00m[01;36m)[00m
							[01;31m(ADVX[00m
								(ADV aber)[01;31m)[00m
							(NX sauna solarium)[01;31m)[00m)
					[01;36m(DM[00m [01;31m(NX[00m
						(NN bar)[01;31m)[00m[01;36m)[00m
					(KON und)
					(NX bistro))[01;31m)[00m[01;31m)[00m))
Step:Different label
{'family': ['NX', 'SIMPX', 'NX'], 'auto preterminal span': (89, 92), 'span': (89, 92), 'subtrees': ['ART', 'NX'], 'parent': 'NX', 'over_word': False, 'auto preterminals': ('ART', 'NE', 'NE'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('NX', 'SIMPX')}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK konnen)
			(MF
				(NX wir)
				(ADVX einfach)
				[01;36m(NX[00m
					(ART den)[01;36m)[00m))
		(SIMPX [01;33m(SIMPX[00m
			(VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK brauchen)
					(MF wir uns jetzt vielleicht gar nicht)
					(VC festlegen)[01;31m)[00m [01;33mSIMPX)[00m
				(KON und)
				[01;31m(LKMN[00m
					(LK sagen)
					(MF einfach)
					(NF
						(SIMPX
							(VF wir)
							(LK fliegen)
							[01;36m(MF[00m
								(ADVX
									(PTKVZ zuruck))[01;36m)[00m))[01;31m)[00m[01;31m)[00m)
		(DM gut)
		(ADVX dann)
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(VF dann)
				(LK denke)
				(MF ich)[01;36m)[00m
			(NF
				(SIMPX
					(VF dann)
					(LK haben)
					(MF wir alles)
					[01;31m(PX[00m
						[01;36m(VC[00m
							(APPR auser)[01;36m)[00m
						[01;36m(NF[00m
							(SIMPX
								(C das)
								(MF wir immer noch nicht)
								(VC wissen)
								(NF wo wir ubernachten konnen))[01;36m)[00m[01;31m)[00m))[01;31m)[00m
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK konnen)
			(MF wir abends noch ein bischen in der bar)
			(VC sitzen)[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON oder)[01;31m)[00m
			(VF auf alle falle)
			(LK treffen)
			(MF wir uns dann da)[01;31m)[00m
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		[01;31m(SIMPX[00m
			(VF das)
			(LK ist)
			[01;31m(MF[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(ART das)
						[01;31m(NX[00m
							(NX marriotthotel)
							(NX hannover)[01;31m)[00m[01;31m)[00m
					(SIMPX das parkhotel hannover)
					[01;31m(NX[00m
						(ART das)
						(NX hotel cristal hannover)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF die)
			(LK sind)
			(MF
				(NX alle)
				[01;31m(ADVX[00m
					(ADVX mehr)
					(KON oder)
					[01;33m(PX[00m (ADVX minder)[01;31m)[00m
				(PX in der nahe vom hauptbahnhof))[01;31m)[00m [01;33mPX)[00m
		[01;31m(SIMPX[00m
			(VF ich)
			(LK kucke)
			(MF mir mal die preise)
			(VC an)[01;31m)[00m
		(DM also)
		[01;31m(SIMPX[00m
			(VF
				(NX
					(ART das)
					(NX
						(NX hotel)
						(NX
							(NX cristal)
							[01;36m(VF[00m
								(NX
									(NE hannover))[01;36m)[00m))))
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF
						(ADVX vielleicht)
						[01;31m(ADJX[00m
							(NX ein bischen)
							(ADJD teuer)[01;31m)[00m)[01;31m)[00m
				(LKM
					(LKM
						(LK hat)
						[01;31m(MF[00m
							[01;36m(NX[00m [01;36m(MF[00m [01;31m(PX[00m
								(PROP dafur)[01;31m)[00m[01;36m)[00m[01;36m)[00m
							[01;31m(ADVX[00m
								(ADV aber)[01;31m)[00m
							(NX sauna solarium)[01;31m)[00m)
					[01;36m(DM[00m [01;31m(NX[00m
						(NN bar)[01;31m)[00m[01;36m)[00m
					(KON und)
					(NX bistro))[01;31m)[00m[01;31m)[00m))
Step:Single Word Phrase
{'family': ['MF', 'ADVX', 'NX'], 'auto preterminal span': (125, 126), 'span': (125, 126), 'subtrees': ['PROP'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('PROP',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('PX', 'MF')}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK konnen)
			(MF
				(NX wir)
				(ADVX einfach)
				[01;36m(NX[00m
					(ART den)[01;36m)[00m))
		(SIMPX [01;33m(SIMPX[00m
			(VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK brauchen)
					(MF wir uns jetzt vielleicht gar nicht)
					(VC festlegen)[01;31m)[00m [01;33mSIMPX)[00m
				(KON und)
				[01;31m(LKMN[00m
					(LK sagen)
					(MF einfach)
					(NF
						(SIMPX
							(VF wir)
							(LK fliegen)
							[01;36m(MF[00m
								(ADVX
									(PTKVZ zuruck))[01;36m)[00m))[01;31m)[00m[01;31m)[00m)
		(DM gut)
		(ADVX dann)
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(VF dann)
				(LK denke)
				(MF ich)[01;36m)[00m
			(NF
				(SIMPX
					(VF dann)
					(LK haben)
					(MF wir alles)
					[01;31m(PX[00m
						[01;36m(VC[00m
							(APPR auser)[01;36m)[00m
						[01;36m(NF[00m
							(SIMPX
								(C das)
								(MF wir immer noch nicht)
								(VC wissen)
								(NF wo wir ubernachten konnen))[01;36m)[00m[01;31m)[00m))[01;31m)[00m
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK konnen)
			(MF wir abends noch ein bischen in der bar)
			(VC sitzen)[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON oder)[01;31m)[00m
			(VF auf alle falle)
			(LK treffen)
			(MF wir uns dann da)[01;31m)[00m
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		[01;31m(SIMPX[00m
			(VF das)
			(LK ist)
			[01;31m(MF[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(ART das)
						[01;31m(NX[00m
							(NX marriotthotel)
							(NX hannover)[01;31m)[00m[01;31m)[00m
					(SIMPX das parkhotel hannover)
					[01;31m(NX[00m
						(ART das)
						(NX hotel cristal hannover)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF die)
			(LK sind)
			(MF
				(NX alle)
				[01;31m(ADVX[00m
					(ADVX mehr)
					(KON oder)
					[01;33m(PX[00m (ADVX minder)[01;31m)[00m
				(PX in der nahe vom hauptbahnhof))[01;31m)[00m [01;33mPX)[00m
		[01;31m(SIMPX[00m
			(VF ich)
			(LK kucke)
			(MF mir mal die preise)
			(VC an)[01;31m)[00m
		(DM also)
		[01;31m(SIMPX[00m
			(VF
				(NX
					(ART das)
					(NX
						(NX hotel)
						(NX
							(NX cristal)
							[01;36m(VF[00m
								(NX
									(NE hannover))[01;36m)[00m))))
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF
						(ADVX vielleicht)
						[01;31m(ADJX[00m
							(NX ein bischen)
							(ADJD teuer)[01;31m)[00m)[01;31m)[00m
				(LKM
					(LKM
						(LK hat)
						[01;31m(MF[00m
							[01;36m(NX[00m
								(MF
									(PROP dafur))[01;36m)[00m
							[01;31m(ADVX[00m
								(ADV aber)[01;31m)[00m
							(NX sauna solarium)[01;31m)[00m)
					[01;36m(DM[00m [01;31m(NX[00m
						(NN bar)[01;31m)[00m[01;36m)[00m
					(KON und)
					(NX bistro))[01;31m)[00m[01;31m)[00m))
Step:Single Word Phrase
{'family': ['LKM', 'DM', 'KON', 'NX'], 'auto preterminal span': (129, 130), 'span': (129, 130), 'subtrees': ['NN'], 'parent': 'LKM', 'over_word': True, 'auto preterminals': ('NN',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('NX', 'DM')}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK konnen)
			(MF
				(NX wir)
				(ADVX einfach)
				[01;36m(NX[00m
					(ART den)[01;36m)[00m))
		(SIMPX [01;33m(SIMPX[00m
			(VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK brauchen)
					(MF wir uns jetzt vielleicht gar nicht)
					(VC festlegen)[01;31m)[00m [01;33mSIMPX)[00m
				(KON und)
				[01;31m(LKMN[00m
					(LK sagen)
					(MF einfach)
					(NF
						(SIMPX
							(VF wir)
							(LK fliegen)
							[01;36m(MF[00m
								(ADVX
									(PTKVZ zuruck))[01;36m)[00m))[01;31m)[00m[01;31m)[00m)
		(DM gut)
		(ADVX dann)
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(VF dann)
				(LK denke)
				(MF ich)[01;36m)[00m
			(NF
				(SIMPX
					(VF dann)
					(LK haben)
					(MF wir alles)
					[01;31m(PX[00m
						[01;36m(VC[00m
							(APPR auser)[01;36m)[00m
						[01;36m(NF[00m
							(SIMPX
								(C das)
								(MF wir immer noch nicht)
								(VC wissen)
								(NF wo wir ubernachten konnen))[01;36m)[00m[01;31m)[00m))[01;31m)[00m
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK konnen)
			(MF wir abends noch ein bischen in der bar)
			(VC sitzen)[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON oder)[01;31m)[00m
			(VF auf alle falle)
			(LK treffen)
			(MF wir uns dann da)[01;31m)[00m
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		[01;31m(SIMPX[00m
			(VF das)
			(LK ist)
			[01;31m(MF[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(ART das)
						[01;31m(NX[00m
							(NX marriotthotel)
							(NX hannover)[01;31m)[00m[01;31m)[00m
					(SIMPX das parkhotel hannover)
					[01;31m(NX[00m
						(ART das)
						(NX hotel cristal hannover)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF die)
			(LK sind)
			(MF
				(NX alle)
				[01;31m(ADVX[00m
					(ADVX mehr)
					(KON oder)
					[01;33m(PX[00m (ADVX minder)[01;31m)[00m
				(PX in der nahe vom hauptbahnhof))[01;31m)[00m [01;33mPX)[00m
		[01;31m(SIMPX[00m
			(VF ich)
			(LK kucke)
			(MF mir mal die preise)
			(VC an)[01;31m)[00m
		(DM also)
		[01;31m(SIMPX[00m
			(VF
				(NX
					(ART das)
					(NX
						(NX hotel)
						(NX
							(NX cristal)
							[01;36m(VF[00m
								(NX
									(NE hannover))[01;36m)[00m))))
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF
						(ADVX vielleicht)
						[01;31m(ADJX[00m
							(NX ein bischen)
							(ADJD teuer)[01;31m)[00m)[01;31m)[00m
				(LKM
					(LKM
						(LK hat)
						[01;31m(MF[00m
							[01;36m(NX[00m
								(MF
									(PROP dafur))[01;36m)[00m
							[01;31m(ADVX[00m
								(ADV aber)[01;31m)[00m
							(NX sauna solarium)[01;31m)[00m)
					(DM bar)
					(KON und)
					(NX bistro))[01;31m)[00m[01;31m)[00m))
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'SIMPX', 'NF', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'DM', 'SIMPX'], 'mover info': [('NF', (32, 47))], 'old_family': ['VF', 'LK', 'MF', 'NF'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('ITJ', 'PTKANT', 'PDS', 'VVFIN', 'PTKANT', 'ADV', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ART', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'VVFIN', 'ADV', 'PPER', 'VVFIN', 'PTKVZ', 'ITJ', 'ADV', 'ADV', 'VVFIN', 'PPER', 'ADV', 'VAFIN', 'PPER', 'PIS', 'APPR', 'KOUS', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'VVFIN', 'PWAV', 'PPER', 'VVINF', 'VMFIN', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'APPR', 'PIDAT', 'NN', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'KON', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'VVPP', 'APPR', 'NN', 'PDS', 'VAFIN', 'ART', 'NE', 'NE', 'ART', 'NE', 'NE', 'ART', 'NN', 'NE', 'NE', 'PDS', 'VAFIN', 'PIS', 'ADV', 'KON', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'PPER', 'VVFIN', 'PRF', 'ADV', 'ART', 'NN', 'PTKVZ', 'ADV', 'ART', 'NN', 'NE', 'NE', 'VAFIN', 'ADV', 'ART', 'PIS', 'ADJD', 'VAFIN', 'PROP', 'ADV', 'NN', 'NN', 'NN', 'KON', 'NN'), 'start right siblings': [], 'end left siblings': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'SIMPX'], 'auto preterminal span': (0, 132), 'movers': ['NF'], 'old_parent': 'SIMPX', 'end right siblings': ['SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'DM', 'SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK konnen)
			(MF
				(NX wir)
				(ADVX einfach)
				[01;36m(NX[00m
					(ART den)[01;36m)[00m))
		(SIMPX [01;33m(SIMPX[00m
			(VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK brauchen)
					(MF wir uns jetzt vielleicht gar nicht)
					(VC festlegen)[01;31m)[00m [01;33mSIMPX)[00m
				(KON und)
				[01;31m(LKMN[00m
					(LK sagen)
					(MF einfach)
					(NF
						(SIMPX
							(VF wir)
							(LK fliegen)
							[01;36m(MF[00m
								(ADVX
									(PTKVZ zuruck))[01;36m)[00m))[01;31m)[00m[01;31m)[00m)
		(DM gut)
		(ADVX dann)
		(SIMPX dann denke ich)
		(NF
			(SIMPX
				(VF dann)
				(LK haben)
				(MF wir alles)
				[01;31m(PX[00m
					[01;36m(VC[00m
						(APPR auser)[01;36m)[00m
					[01;36m(NF[00m
						(SIMPX
							(C das)
							(MF wir immer noch nicht)
							(VC wissen)
							(NF wo wir ubernachten konnen))[01;36m)[00m[01;31m)[00m))
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK konnen)
			(MF wir abends noch ein bischen in der bar)
			(VC sitzen)[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON oder)[01;31m)[00m
			(VF auf alle falle)
			(LK treffen)
			(MF wir uns dann da)[01;31m)[00m
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		[01;31m(SIMPX[00m
			(VF das)
			(LK ist)
			[01;31m(MF[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(ART das)
						[01;31m(NX[00m
							(NX marriotthotel)
							(NX hannover)[01;31m)[00m[01;31m)[00m
					(SIMPX das parkhotel hannover)
					[01;31m(NX[00m
						(ART das)
						(NX hotel cristal hannover)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF die)
			(LK sind)
			(MF
				(NX alle)
				[01;31m(ADVX[00m
					(ADVX mehr)
					(KON oder)
					[01;33m(PX[00m (ADVX minder)[01;31m)[00m
				(PX in der nahe vom hauptbahnhof))[01;31m)[00m [01;33mPX)[00m
		[01;31m(SIMPX[00m
			(VF ich)
			(LK kucke)
			(MF mir mal die preise)
			(VC an)[01;31m)[00m
		(DM also)
		[01;31m(SIMPX[00m
			(VF
				(NX
					(ART das)
					(NX
						(NX hotel)
						(NX
							(NX cristal)
							[01;36m(VF[00m
								(NX
									(NE hannover))[01;36m)[00m))))
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF
						(ADVX vielleicht)
						[01;31m(ADJX[00m
							(NX ein bischen)
							(ADJD teuer)[01;31m)[00m)[01;31m)[00m
				(LKM
					(LKM
						(LK hat)
						[01;31m(MF[00m
							[01;36m(NX[00m
								(MF
									(PROP dafur))[01;36m)[00m
							[01;31m(ADVX[00m
								(ADV aber)[01;31m)[00m
							(NX sauna solarium)[01;31m)[00m)
					(DM bar)
					(KON und)
					(NX bistro))[01;31m)[00m[01;31m)[00m))
Step:Single Word Phrase
{'subtrees': ['ART'], 'family': ['NX', 'ADVX', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ART',), 'right siblings': [], 'left siblings': [(NX (PPER wir)), (ADVX (ADV einfach))], 'auto preterminal span': (11, 12), 'span': (11, 12), 'parent': 'MF', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX [01;33m(SIMPX[00m
			(VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK brauchen)
					(MF wir uns jetzt vielleicht gar nicht)
					(VC festlegen)[01;31m)[00m [01;33mSIMPX)[00m
				(KON und)
				[01;31m(LKMN[00m
					(LK sagen)
					(MF einfach)
					(NF
						(SIMPX
							(VF wir)
							(LK fliegen)
							[01;36m(MF[00m
								(ADVX
									(PTKVZ zuruck))[01;36m)[00m))[01;31m)[00m[01;31m)[00m)
		(DM gut)
		(ADVX dann)
		(SIMPX dann denke ich)
		(NF
			(SIMPX
				(VF dann)
				(LK haben)
				(MF wir alles)
				[01;31m(PX[00m
					[01;36m(VC[00m
						(APPR auser)[01;36m)[00m
					[01;36m(NF[00m
						(SIMPX
							(C das)
							(MF wir immer noch nicht)
							(VC wissen)
							(NF wo wir ubernachten konnen))[01;36m)[00m[01;31m)[00m))
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK konnen)
			(MF wir abends noch ein bischen in der bar)
			(VC sitzen)[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON oder)[01;31m)[00m
			(VF auf alle falle)
			(LK treffen)
			(MF wir uns dann da)[01;31m)[00m
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		[01;31m(SIMPX[00m
			(VF das)
			(LK ist)
			[01;31m(MF[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(ART das)
						[01;31m(NX[00m
							(NX marriotthotel)
							(NX hannover)[01;31m)[00m[01;31m)[00m
					(SIMPX das parkhotel hannover)
					[01;31m(NX[00m
						(ART das)
						(NX hotel cristal hannover)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF die)
			(LK sind)
			(MF
				(NX alle)
				[01;31m(ADVX[00m
					(ADVX mehr)
					(KON oder)
					[01;33m(PX[00m (ADVX minder)[01;31m)[00m
				(PX in der nahe vom hauptbahnhof))[01;31m)[00m [01;33mPX)[00m
		[01;31m(SIMPX[00m
			(VF ich)
			(LK kucke)
			(MF mir mal die preise)
			(VC an)[01;31m)[00m
		(DM also)
		[01;31m(SIMPX[00m
			(VF
				(NX
					(ART das)
					(NX
						(NX hotel)
						(NX
							(NX cristal)
							[01;36m(VF[00m
								(NX
									(NE hannover))[01;36m)[00m))))
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF
						(ADVX vielleicht)
						[01;31m(ADJX[00m
							(NX ein bischen)
							(ADJD teuer)[01;31m)[00m)[01;31m)[00m
				(LKM
					(LKM
						(LK hat)
						[01;31m(MF[00m
							[01;36m(NX[00m
								(MF
									(PROP dafur))[01;36m)[00m
							[01;31m(ADVX[00m
								(ADV aber)[01;31m)[00m
							(NX sauna solarium)[01;31m)[00m)
					(DM bar)
					(KON und)
					(NX bistro))[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKVZ',), 'right siblings': [], 'left siblings': [(VF (NX (PPER wir))), (LK (VXFIN (VVFIN fliegen)))], 'auto preterminal span': (26, 27), 'span': (26, 27), 'parent': 'SIMPX', 'label': 'MF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX [01;33m(SIMPX[00m
			(VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK brauchen)
					(MF wir uns jetzt vielleicht gar nicht)
					(VC festlegen)[01;31m)[00m [01;33mSIMPX)[00m
				(KON und)
				[01;31m(LKMN[00m
					(LK sagen)
					(MF einfach)
					(NF wir fliegen zuruck)[01;31m)[00m[01;31m)[00m)
		(DM gut)
		(ADVX dann)
		(SIMPX dann denke ich)
		(NF
			(SIMPX
				(VF dann)
				(LK haben)
				(MF wir alles)
				[01;31m(PX[00m
					[01;36m(VC[00m
						(APPR auser)[01;36m)[00m
					[01;36m(NF[00m
						(SIMPX
							(C das)
							(MF wir immer noch nicht)
							(VC wissen)
							(NF wo wir ubernachten konnen))[01;36m)[00m[01;31m)[00m))
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK konnen)
			(MF wir abends noch ein bischen in der bar)
			(VC sitzen)[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON oder)[01;31m)[00m
			(VF auf alle falle)
			(LK treffen)
			(MF wir uns dann da)[01;31m)[00m
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		[01;31m(SIMPX[00m
			(VF das)
			(LK ist)
			[01;31m(MF[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(ART das)
						[01;31m(NX[00m
							(NX marriotthotel)
							(NX hannover)[01;31m)[00m[01;31m)[00m
					(SIMPX das parkhotel hannover)
					[01;31m(NX[00m
						(ART das)
						(NX hotel cristal hannover)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF die)
			(LK sind)
			(MF
				(NX alle)
				[01;31m(ADVX[00m
					(ADVX mehr)
					(KON oder)
					[01;33m(PX[00m (ADVX minder)[01;31m)[00m
				(PX in der nahe vom hauptbahnhof))[01;31m)[00m [01;33mPX)[00m
		[01;31m(SIMPX[00m
			(VF ich)
			(LK kucke)
			(MF mir mal die preise)
			(VC an)[01;31m)[00m
		(DM also)
		[01;31m(SIMPX[00m
			(VF
				(NX
					(ART das)
					(NX
						(NX hotel)
						(NX
							(NX cristal)
							[01;36m(VF[00m
								(NX
									(NE hannover))[01;36m)[00m))))
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF
						(ADVX vielleicht)
						[01;31m(ADJX[00m
							(NX ein bischen)
							(ADJD teuer)[01;31m)[00m)[01;31m)[00m
				(LKM
					(LKM
						(LK hat)
						[01;31m(MF[00m
							[01;36m(NX[00m
								(MF
									(PROP dafur))[01;36m)[00m
							[01;31m(ADVX[00m
								(ADV aber)[01;31m)[00m
							(NX sauna solarium)[01;31m)[00m)
					(DM bar)
					(KON und)
					(NX bistro))[01;31m)[00m[01;31m)[00m))
Step:Single Word Phrase
{'subtrees': ['APPR'], 'family': ['VC', 'SIMPX'], 'over_word': True, 'over words': True, 'auto preterminals': ('APPR',), 'right siblings': [(SIMPX (C (KOUS das)) (MF (NX (PPER wir)) (ADVX (ADV immer)) (ADVX (ADVX (ADV noch)) (PTKNEG nicht))) (VC (VXFIN (VVFIN wissen))) (NF (SIMPX (C (PX (PWAV wo))) (MF (NX (PPER wir))) (VC (VXINF (VVINF ubernachten)) (VXFIN (VMFIN konnen))))))], 'left siblings': [], 'auto preterminal span': (36, 37), 'span': (36, 37), 'parent': 'PX', 'label': 'VC', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX [01;33m(SIMPX[00m
			(VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK brauchen)
					(MF wir uns jetzt vielleicht gar nicht)
					(VC festlegen)[01;31m)[00m [01;33mSIMPX)[00m
				(KON und)
				[01;31m(LKMN[00m
					(LK sagen)
					(MF einfach)
					(NF wir fliegen zuruck)[01;31m)[00m[01;31m)[00m)
		(DM gut)
		(ADVX dann)
		(SIMPX dann denke ich)
		(NF
			(SIMPX
				(VF dann)
				(LK haben)
				(MF wir alles)
				[01;31m(PX[00m
					(VC auser)
					[01;36m(NF[00m
						(SIMPX
							(C das)
							(MF wir immer noch nicht)
							(VC wissen)
							(NF wo wir ubernachten konnen))[01;36m)[00m[01;31m)[00m))
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK konnen)
			(MF wir abends noch ein bischen in der bar)
			(VC sitzen)[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON oder)[01;31m)[00m
			(VF auf alle falle)
			(LK treffen)
			(MF wir uns dann da)[01;31m)[00m
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		[01;31m(SIMPX[00m
			(VF das)
			(LK ist)
			[01;31m(MF[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(ART das)
						[01;31m(NX[00m
							(NX marriotthotel)
							(NX hannover)[01;31m)[00m[01;31m)[00m
					(SIMPX das parkhotel hannover)
					[01;31m(NX[00m
						(ART das)
						(NX hotel cristal hannover)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF die)
			(LK sind)
			(MF
				(NX alle)
				[01;31m(ADVX[00m
					(ADVX mehr)
					(KON oder)
					[01;33m(PX[00m (ADVX minder)[01;31m)[00m
				(PX in der nahe vom hauptbahnhof))[01;31m)[00m [01;33mPX)[00m
		[01;31m(SIMPX[00m
			(VF ich)
			(LK kucke)
			(MF mir mal die preise)
			(VC an)[01;31m)[00m
		(DM also)
		[01;31m(SIMPX[00m
			(VF
				(NX
					(ART das)
					(NX
						(NX hotel)
						(NX
							(NX cristal)
							[01;36m(VF[00m
								(NX
									(NE hannover))[01;36m)[00m))))
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF
						(ADVX vielleicht)
						[01;31m(ADJX[00m
							(NX ein bischen)
							(ADJD teuer)[01;31m)[00m)[01;31m)[00m
				(LKM
					(LKM
						(LK hat)
						[01;31m(MF[00m
							[01;36m(NX[00m
								(MF
									(PROP dafur))[01;36m)[00m
							[01;31m(ADVX[00m
								(ADV aber)[01;31m)[00m
							(NX sauna solarium)[01;31m)[00m)
					(DM bar)
					(KON und)
					(NX bistro))[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'VVFIN', 'PWAV', 'PPER', 'VVINF', 'VMFIN'), 'right siblings': [], 'left siblings': [(VC (APPR auser))], 'auto preterminal span': (37, 47), 'span': (37, 47), 'parent': 'PX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX [01;33m(SIMPX[00m
			(VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK brauchen)
					(MF wir uns jetzt vielleicht gar nicht)
					(VC festlegen)[01;31m)[00m [01;33mSIMPX)[00m
				(KON und)
				[01;31m(LKMN[00m
					(LK sagen)
					(MF einfach)
					(NF wir fliegen zuruck)[01;31m)[00m[01;31m)[00m)
		(DM gut)
		(ADVX dann)
		(SIMPX dann denke ich)
		(NF
			(SIMPX
				(VF dann)
				(LK haben)
				(MF wir alles)
				[01;31m(PX[00m
					(VC auser)
					(NF das wir immer noch nicht wissen wo wir ubernachten konnen)[01;31m)[00m))
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK konnen)
			(MF wir abends noch ein bischen in der bar)
			(VC sitzen)[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON oder)[01;31m)[00m
			(VF auf alle falle)
			(LK treffen)
			(MF wir uns dann da)[01;31m)[00m
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		[01;31m(SIMPX[00m
			(VF das)
			(LK ist)
			[01;31m(MF[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(ART das)
						[01;31m(NX[00m
							(NX marriotthotel)
							(NX hannover)[01;31m)[00m[01;31m)[00m
					(SIMPX das parkhotel hannover)
					[01;31m(NX[00m
						(ART das)
						(NX hotel cristal hannover)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF die)
			(LK sind)
			(MF
				(NX alle)
				[01;31m(ADVX[00m
					(ADVX mehr)
					(KON oder)
					[01;33m(PX[00m (ADVX minder)[01;31m)[00m
				(PX in der nahe vom hauptbahnhof))[01;31m)[00m [01;33mPX)[00m
		[01;31m(SIMPX[00m
			(VF ich)
			(LK kucke)
			(MF mir mal die preise)
			(VC an)[01;31m)[00m
		(DM also)
		[01;31m(SIMPX[00m
			(VF
				(NX
					(ART das)
					(NX
						(NX hotel)
						(NX
							(NX cristal)
							[01;36m(VF[00m
								(NX
									(NE hannover))[01;36m)[00m))))
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF
						(ADVX vielleicht)
						[01;31m(ADJX[00m
							(NX ein bischen)
							(ADJD teuer)[01;31m)[00m)[01;31m)[00m
				(LKM
					(LKM
						(LK hat)
						[01;31m(MF[00m
							[01;36m(NX[00m
								(MF
									(PROP dafur))[01;36m)[00m
							[01;31m(ADVX[00m
								(ADV aber)[01;31m)[00m
							(NX sauna solarium)[01;31m)[00m)
					(DM bar)
					(KON und)
					(NX bistro))[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['NX'], 'family': ['NX', 'VF'], 'over_word': False, 'over words': False, 'auto preterminals': ('NE',), 'right siblings': [], 'left siblings': [(NX (NE cristal))], 'auto preterminal span': (118, 119), 'span': (118, 119), 'parent': 'NX', 'label': 'VF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX [01;33m(SIMPX[00m
			(VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK brauchen)
					(MF wir uns jetzt vielleicht gar nicht)
					(VC festlegen)[01;31m)[00m [01;33mSIMPX)[00m
				(KON und)
				[01;31m(LKMN[00m
					(LK sagen)
					(MF einfach)
					(NF wir fliegen zuruck)[01;31m)[00m[01;31m)[00m)
		(DM gut)
		(ADVX dann)
		(SIMPX dann denke ich)
		(NF
			(SIMPX
				(VF dann)
				(LK haben)
				(MF wir alles)
				[01;31m(PX[00m
					(VC auser)
					(NF das wir immer noch nicht wissen wo wir ubernachten konnen)[01;31m)[00m))
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK konnen)
			(MF wir abends noch ein bischen in der bar)
			(VC sitzen)[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON oder)[01;31m)[00m
			(VF auf alle falle)
			(LK treffen)
			(MF wir uns dann da)[01;31m)[00m
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		[01;31m(SIMPX[00m
			(VF das)
			(LK ist)
			[01;31m(MF[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(ART das)
						[01;31m(NX[00m
							(NX marriotthotel)
							(NX hannover)[01;31m)[00m[01;31m)[00m
					(SIMPX das parkhotel hannover)
					[01;31m(NX[00m
						(ART das)
						(NX hotel cristal hannover)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF die)
			(LK sind)
			(MF
				(NX alle)
				[01;31m(ADVX[00m
					(ADVX mehr)
					(KON oder)
					[01;33m(PX[00m (ADVX minder)[01;31m)[00m
				(PX in der nahe vom hauptbahnhof))[01;31m)[00m [01;33mPX)[00m
		[01;31m(SIMPX[00m
			(VF ich)
			(LK kucke)
			(MF mir mal die preise)
			(VC an)[01;31m)[00m
		(DM also)
		[01;31m(SIMPX[00m
			(VF das hotel cristal hannover)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF
						(ADVX vielleicht)
						[01;31m(ADJX[00m
							(NX ein bischen)
							(ADJD teuer)[01;31m)[00m)[01;31m)[00m
				(LKM
					(LKM
						(LK hat)
						[01;31m(MF[00m
							[01;36m(NX[00m
								(MF
									(PROP dafur))[01;36m)[00m
							[01;31m(ADVX[00m
								(ADV aber)[01;31m)[00m
							(NX sauna solarium)[01;31m)[00m)
					(DM bar)
					(KON und)
					(NX bistro))[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['MF'], 'family': ['NX', 'ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PROP',), 'right siblings': [(ADVX (ADV aber)), (NX (NX (NN sauna)) (NX (NN solarium)))], 'left siblings': [], 'auto preterminal span': (125, 126), 'span': (125, 126), 'parent': 'MF', 'label': 'NX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX [01;33m(SIMPX[00m
			(VF dann)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK brauchen)
					(MF wir uns jetzt vielleicht gar nicht)
					(VC festlegen)[01;31m)[00m [01;33mSIMPX)[00m
				(KON und)
				[01;31m(LKMN[00m
					(LK sagen)
					(MF einfach)
					(NF wir fliegen zuruck)[01;31m)[00m[01;31m)[00m)
		(DM gut)
		(ADVX dann)
		(SIMPX dann denke ich)
		(NF
			(SIMPX
				(VF dann)
				(LK haben)
				(MF wir alles)
				[01;31m(PX[00m
					(VC auser)
					(NF das wir immer noch nicht wissen wo wir ubernachten konnen)[01;31m)[00m))
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK konnen)
			(MF wir abends noch ein bischen in der bar)
			(VC sitzen)[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON oder)[01;31m)[00m
			(VF auf alle falle)
			(LK treffen)
			(MF wir uns dann da)[01;31m)[00m
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		[01;31m(SIMPX[00m
			(VF das)
			(LK ist)
			[01;31m(MF[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(ART das)
						[01;31m(NX[00m
							(NX marriotthotel)
							(NX hannover)[01;31m)[00m[01;31m)[00m
					(SIMPX das parkhotel hannover)
					[01;31m(NX[00m
						(ART das)
						(NX hotel cristal hannover)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF die)
			(LK sind)
			(MF
				(NX alle)
				[01;31m(ADVX[00m
					(ADVX mehr)
					(KON oder)
					[01;33m(PX[00m (ADVX minder)[01;31m)[00m
				(PX in der nahe vom hauptbahnhof))[01;31m)[00m [01;33mPX)[00m
		[01;31m(SIMPX[00m
			(VF ich)
			(LK kucke)
			(MF mir mal die preise)
			(VC an)[01;31m)[00m
		(DM also)
		[01;31m(SIMPX[00m
			(VF das hotel cristal hannover)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF
						(ADVX vielleicht)
						[01;31m(ADJX[00m
							(NX ein bischen)
							(ADJD teuer)[01;31m)[00m)[01;31m)[00m
				(LKM
					(LKM
						(LK hat)
						[01;31m(MF[00m
							(NX dafur)
							[01;31m(ADVX[00m
								(ADV aber)[01;31m)[00m
							(NX sauna solarium)[01;31m)[00m)
					(DM bar)
					(KON und)
					(NX bistro))[01;31m)[00m[01;31m)[00m))
Step:Co-ordination
{'subtrees': ['LK', 'MF', 'VC'], 'family': ['LKMVC', 'KON', 'LKMN'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'VVFIN', 'ADV', 'PPER', 'VVFIN', 'PTKVZ'), 'right siblings': ['KON', 'LKMN'], 'parent': 'FKOORD', 'auto preterminal span': (13, 27), 'span': (13, 21), 'left siblings': [], 'label': 'LKMVC', 'classified_type': 'Co-ordination', 'type': 'remove'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX [01;33m(SIMPX[00m
			(VF dann)
			[01;31m(FKOORD[00m
				(LK brauchen)
				(MF wir uns jetzt vielleicht gar nicht)
				(VC festlegen) [01;33mSIMPX)[00m
				(KON und)
				[01;31m(LKMN[00m
					(LK sagen)
					(MF einfach)
					(NF wir fliegen zuruck)[01;31m)[00m[01;31m)[00m)
		(DM gut)
		(ADVX dann)
		(SIMPX dann denke ich)
		(NF
			(SIMPX
				(VF dann)
				(LK haben)
				(MF wir alles)
				[01;31m(PX[00m
					(VC auser)
					(NF das wir immer noch nicht wissen wo wir ubernachten konnen)[01;31m)[00m))
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK konnen)
			(MF wir abends noch ein bischen in der bar)
			(VC sitzen)[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON oder)[01;31m)[00m
			(VF auf alle falle)
			(LK treffen)
			(MF wir uns dann da)[01;31m)[00m
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		[01;31m(SIMPX[00m
			(VF das)
			(LK ist)
			[01;31m(MF[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(ART das)
						[01;31m(NX[00m
							(NX marriotthotel)
							(NX hannover)[01;31m)[00m[01;31m)[00m
					(SIMPX das parkhotel hannover)
					[01;31m(NX[00m
						(ART das)
						(NX hotel cristal hannover)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF die)
			(LK sind)
			(MF
				(NX alle)
				[01;31m(ADVX[00m
					(ADVX mehr)
					(KON oder)
					[01;33m(PX[00m (ADVX minder)[01;31m)[00m
				(PX in der nahe vom hauptbahnhof))[01;31m)[00m [01;33mPX)[00m
		[01;31m(SIMPX[00m
			(VF ich)
			(LK kucke)
			(MF mir mal die preise)
			(VC an)[01;31m)[00m
		(DM also)
		[01;31m(SIMPX[00m
			(VF das hotel cristal hannover)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF
						(ADVX vielleicht)
						[01;31m(ADJX[00m
							(NX ein bischen)
							(ADJD teuer)[01;31m)[00m)[01;31m)[00m
				(LKM
					(LKM
						(LK hat)
						[01;31m(MF[00m
							(NX dafur)
							[01;31m(ADVX[00m
								(ADV aber)[01;31m)[00m
							(NX sauna solarium)[01;31m)[00m)
					(DM bar)
					(KON und)
					(NX bistro))[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['LK', 'MF', 'VC', 'KON', 'LKMN'], 'family': ['VF', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'VVFIN', 'ADV', 'PPER', 'VVFIN', 'PTKVZ'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (12, 27), 'span': (13, 27), 'left siblings': ['VF'], 'label': 'FKOORD', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX
			[01;36m(SIMPX[00m
				(VF dann)
				(LK brauchen)
				(MF wir uns jetzt vielleicht gar nicht)
				(VC festlegen)[01;36m)[00m
			(KON und)
			[01;31m(LKMN[00m
				(LK sagen)
				(MF einfach)
				(NF wir fliegen zuruck)[01;31m)[00m)
		(DM gut)
		(ADVX dann)
		(SIMPX dann denke ich)
		(NF
			(SIMPX
				(VF dann)
				(LK haben)
				(MF wir alles)
				[01;31m(PX[00m
					(VC auser)
					(NF das wir immer noch nicht wissen wo wir ubernachten konnen)[01;31m)[00m))
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK konnen)
			(MF wir abends noch ein bischen in der bar)
			(VC sitzen)[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON oder)[01;31m)[00m
			(VF auf alle falle)
			(LK treffen)
			(MF wir uns dann da)[01;31m)[00m
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		[01;31m(SIMPX[00m
			(VF das)
			(LK ist)
			[01;31m(MF[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(ART das)
						[01;31m(NX[00m
							(NX marriotthotel)
							(NX hannover)[01;31m)[00m[01;31m)[00m
					(SIMPX das parkhotel hannover)
					[01;31m(NX[00m
						(ART das)
						(NX hotel cristal hannover)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF die)
			(LK sind)
			(MF
				(NX alle)
				[01;31m(ADVX[00m
					(ADVX mehr)
					(KON oder)
					[01;33m(PX[00m (ADVX minder)[01;31m)[00m
				(PX in der nahe vom hauptbahnhof))[01;31m)[00m [01;33mPX)[00m
		[01;31m(SIMPX[00m
			(VF ich)
			(LK kucke)
			(MF mir mal die preise)
			(VC an)[01;31m)[00m
		(DM also)
		[01;31m(SIMPX[00m
			(VF das hotel cristal hannover)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF
						(ADVX vielleicht)
						[01;31m(ADJX[00m
							(NX ein bischen)
							(ADJD teuer)[01;31m)[00m)[01;31m)[00m
				(LKM
					(LKM
						(LK hat)
						[01;31m(MF[00m
							(NX dafur)
							[01;31m(ADVX[00m
								(ADV aber)[01;31m)[00m
							(NX sauna solarium)[01;31m)[00m)
					(DM bar)
					(KON und)
					(NX bistro))[01;31m)[00m[01;31m)[00m))
Step:UNSET add
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['SIMPX', 'KON', 'LKMN'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'VVINF'), 'right siblings': [(KON und), (LKMN (LK (VXFIN (VVFIN sagen))) (MF (ADVX (ADV einfach))) (NF (SIMPX (VF (NX (PPER wir))) (LK (VXFIN (VVFIN fliegen))) (MF (ADVX (PTKVZ zuruck))))))], 'left siblings': [], 'auto preterminal span': (12, 21), 'span': (12, 21), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX
			(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen)
			(KON und)
			[01;31m(LKMN[00m
				(LK sagen)
				(MF einfach)
				(NF wir fliegen zuruck)[01;31m)[00m)
		(DM gut)
		(ADVX dann)
		(SIMPX dann denke ich)
		(NF
			(SIMPX
				(VF dann)
				(LK haben)
				(MF wir alles)
				[01;31m(PX[00m
					(VC auser)
					(NF das wir immer noch nicht wissen wo wir ubernachten konnen)[01;31m)[00m))
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK konnen)
			(MF wir abends noch ein bischen in der bar)
			(VC sitzen)[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON oder)[01;31m)[00m
			(VF auf alle falle)
			(LK treffen)
			(MF wir uns dann da)[01;31m)[00m
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		[01;31m(SIMPX[00m
			(VF das)
			(LK ist)
			[01;31m(MF[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(ART das)
						[01;31m(NX[00m
							(NX marriotthotel)
							(NX hannover)[01;31m)[00m[01;31m)[00m
					(SIMPX das parkhotel hannover)
					[01;31m(NX[00m
						(ART das)
						(NX hotel cristal hannover)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF die)
			(LK sind)
			(MF
				(NX alle)
				[01;31m(ADVX[00m
					(ADVX mehr)
					(KON oder)
					[01;33m(PX[00m (ADVX minder)[01;31m)[00m
				(PX in der nahe vom hauptbahnhof))[01;31m)[00m [01;33mPX)[00m
		[01;31m(SIMPX[00m
			(VF ich)
			(LK kucke)
			(MF mir mal die preise)
			(VC an)[01;31m)[00m
		(DM also)
		[01;31m(SIMPX[00m
			(VF das hotel cristal hannover)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF
						(ADVX vielleicht)
						[01;31m(ADJX[00m
							(NX ein bischen)
							(ADJD teuer)[01;31m)[00m)[01;31m)[00m
				(LKM
					(LKM
						(LK hat)
						[01;31m(MF[00m
							(NX dafur)
							[01;31m(ADVX[00m
								(ADV aber)[01;31m)[00m
							(NX sauna solarium)[01;31m)[00m)
					(DM bar)
					(KON und)
					(NX bistro))[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['LK', 'MF', 'NF'], 'family': ['SIMPX', 'KON', 'LKMN'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'VVFIN', 'ADV', 'PPER', 'VVFIN', 'PTKVZ'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (12, 27), 'span': (22, 27), 'left siblings': ['SIMPX', 'KON'], 'label': 'LKMN', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen und sagen einfach wir fliegen zuruck)
		(DM gut)
		(ADVX dann)
		(SIMPX dann denke ich)
		(NF
			(SIMPX
				(VF dann)
				(LK haben)
				(MF wir alles)
				[01;31m(PX[00m
					(VC auser)
					(NF das wir immer noch nicht wissen wo wir ubernachten konnen)[01;31m)[00m))
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK konnen)
			(MF wir abends noch ein bischen in der bar)
			(VC sitzen)[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON oder)[01;31m)[00m
			(VF auf alle falle)
			(LK treffen)
			(MF wir uns dann da)[01;31m)[00m
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		[01;31m(SIMPX[00m
			(VF das)
			(LK ist)
			[01;31m(MF[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(ART das)
						[01;31m(NX[00m
							(NX marriotthotel)
							(NX hannover)[01;31m)[00m[01;31m)[00m
					(SIMPX das parkhotel hannover)
					[01;31m(NX[00m
						(ART das)
						(NX hotel cristal hannover)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF die)
			(LK sind)
			(MF
				(NX alle)
				[01;31m(ADVX[00m
					(ADVX mehr)
					(KON oder)
					[01;33m(PX[00m (ADVX minder)[01;31m)[00m
				(PX in der nahe vom hauptbahnhof))[01;31m)[00m [01;33mPX)[00m
		[01;31m(SIMPX[00m
			(VF ich)
			(LK kucke)
			(MF mir mal die preise)
			(VC an)[01;31m)[00m
		(DM also)
		[01;31m(SIMPX[00m
			(VF das hotel cristal hannover)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF
						(ADVX vielleicht)
						[01;31m(ADJX[00m
							(NX ein bischen)
							(ADJD teuer)[01;31m)[00m)[01;31m)[00m
				(LKM
					(LKM
						(LK hat)
						[01;31m(MF[00m
							(NX dafur)
							[01;31m(ADVX[00m
								(ADV aber)[01;31m)[00m
							(NX sauna solarium)[01;31m)[00m)
					(DM bar)
					(KON und)
					(NX bistro))[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VC', 'NF'], 'family': ['VF', 'LK', 'MF', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'PIS', 'APPR', 'KOUS', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'VVFIN', 'PWAV', 'PPER', 'VVINF', 'VMFIN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (32, 47), 'span': (36, 47), 'left siblings': ['VF', 'LK', 'MF'], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen und sagen einfach wir fliegen zuruck)
		(DM gut)
		(ADVX dann)
		(SIMPX dann denke ich)
		(NF dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK konnen)
			(MF wir abends noch ein bischen in der bar)
			(VC sitzen)[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON oder)[01;31m)[00m
			(VF auf alle falle)
			(LK treffen)
			(MF wir uns dann da)[01;31m)[00m
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		[01;31m(SIMPX[00m
			(VF das)
			(LK ist)
			[01;31m(MF[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(ART das)
						[01;31m(NX[00m
							(NX marriotthotel)
							(NX hannover)[01;31m)[00m[01;31m)[00m
					(SIMPX das parkhotel hannover)
					[01;31m(NX[00m
						(ART das)
						(NX hotel cristal hannover)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF die)
			(LK sind)
			(MF
				(NX alle)
				[01;31m(ADVX[00m
					(ADVX mehr)
					(KON oder)
					[01;33m(PX[00m (ADVX minder)[01;31m)[00m
				(PX in der nahe vom hauptbahnhof))[01;31m)[00m [01;33mPX)[00m
		[01;31m(SIMPX[00m
			(VF ich)
			(LK kucke)
			(MF mir mal die preise)
			(VC an)[01;31m)[00m
		(DM also)
		[01;31m(SIMPX[00m
			(VF das hotel cristal hannover)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF
						(ADVX vielleicht)
						[01;31m(ADJX[00m
							(NX ein bischen)
							(ADJD teuer)[01;31m)[00m)[01;31m)[00m
				(LKM
					(LKM
						(LK hat)
						[01;31m(MF[00m
							(NX dafur)
							[01;31m(ADVX[00m
								(ADV aber)[01;31m)[00m
							(NX sauna solarium)[01;31m)[00m)
					(DM bar)
					(KON und)
					(NX bistro))[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'SIMPX', 'NF', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PTKANT', 'PDS', 'VVFIN', 'PTKANT', 'ADV', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ART', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'VVFIN', 'ADV', 'PPER', 'VVFIN', 'PTKVZ', 'ITJ', 'ADV', 'ADV', 'VVFIN', 'PPER', 'ADV', 'VAFIN', 'PPER', 'PIS', 'APPR', 'KOUS', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'VVFIN', 'PWAV', 'PPER', 'VVINF', 'VMFIN', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'APPR', 'PIDAT', 'NN', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'KON', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'VVPP', 'APPR', 'NN', 'PDS', 'VAFIN', 'ART', 'NE', 'NE', 'ART', 'NE', 'NE', 'ART', 'NN', 'NE', 'NE', 'PDS', 'VAFIN', 'PIS', 'ADV', 'KON', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'PPER', 'VVFIN', 'PRF', 'ADV', 'ART', 'NN', 'PTKVZ', 'ADV', 'ART', 'NN', 'NE', 'NE', 'VAFIN', 'ADV', 'ART', 'PIS', 'ADJD', 'VAFIN', 'PROP', 'ADV', 'NN', 'NN', 'NN', 'KON', 'NN'), 'right siblings': ['SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'DM', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 132), 'span': (55, 66), 'left siblings': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'SIMPX', 'NF', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen und sagen einfach wir fliegen zuruck)
		(DM gut)
		(ADVX dann)
		(SIMPX dann denke ich)
		(NF dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		(VF dann)
		(LK konnen)
		(MF wir abends noch ein bischen in der bar)
		(VC sitzen)
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON oder)[01;31m)[00m
			(VF auf alle falle)
			(LK treffen)
			(MF wir uns dann da)[01;31m)[00m
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		[01;31m(SIMPX[00m
			(VF das)
			(LK ist)
			[01;31m(MF[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(ART das)
						[01;31m(NX[00m
							(NX marriotthotel)
							(NX hannover)[01;31m)[00m[01;31m)[00m
					(SIMPX das parkhotel hannover)
					[01;31m(NX[00m
						(ART das)
						(NX hotel cristal hannover)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF die)
			(LK sind)
			(MF
				(NX alle)
				[01;31m(ADVX[00m
					(ADVX mehr)
					(KON oder)
					[01;33m(PX[00m (ADVX minder)[01;31m)[00m
				(PX in der nahe vom hauptbahnhof))[01;31m)[00m [01;33mPX)[00m
		[01;31m(SIMPX[00m
			(VF ich)
			(LK kucke)
			(MF mir mal die preise)
			(VC an)[01;31m)[00m
		(DM also)
		[01;31m(SIMPX[00m
			(VF das hotel cristal hannover)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF
						(ADVX vielleicht)
						[01;31m(ADJX[00m
							(NX ein bischen)
							(ADJD teuer)[01;31m)[00m)[01;31m)[00m
				(LKM
					(LKM
						(LK hat)
						[01;31m(MF[00m
							(NX dafur)
							[01;31m(ADVX[00m
								(ADV aber)[01;31m)[00m
							(NX sauna solarium)[01;31m)[00m)
					(DM bar)
					(KON und)
					(NX bistro))[01;31m)[00m[01;31m)[00m))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['KOORD', 'VF', 'LK', 'MF'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON', 'APPR', 'PIDAT', 'NN', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV'), 'right siblings': ['VF', 'LK', 'MF'], 'parent': 'SIMPX', 'auto preterminal span': (66, 75), 'span': (66, 67), 'left siblings': [], 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen und sagen einfach wir fliegen zuruck)
		(DM gut)
		(ADVX dann)
		(SIMPX dann denke ich)
		(NF dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		(VF dann)
		(LK konnen)
		(MF wir abends noch ein bischen in der bar)
		(VC sitzen)
		[01;31m(SIMPX[00m
			(KON oder)
			(VF auf alle falle)
			(LK treffen)
			(MF wir uns dann da)[01;31m)[00m
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		[01;31m(SIMPX[00m
			(VF das)
			(LK ist)
			[01;31m(MF[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(ART das)
						[01;31m(NX[00m
							(NX marriotthotel)
							(NX hannover)[01;31m)[00m[01;31m)[00m
					(SIMPX das parkhotel hannover)
					[01;31m(NX[00m
						(ART das)
						(NX hotel cristal hannover)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF die)
			(LK sind)
			(MF
				(NX alle)
				[01;31m(ADVX[00m
					(ADVX mehr)
					(KON oder)
					[01;33m(PX[00m (ADVX minder)[01;31m)[00m
				(PX in der nahe vom hauptbahnhof))[01;31m)[00m [01;33mPX)[00m
		[01;31m(SIMPX[00m
			(VF ich)
			(LK kucke)
			(MF mir mal die preise)
			(VC an)[01;31m)[00m
		(DM also)
		[01;31m(SIMPX[00m
			(VF das hotel cristal hannover)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF
						(ADVX vielleicht)
						[01;31m(ADJX[00m
							(NX ein bischen)
							(ADJD teuer)[01;31m)[00m)[01;31m)[00m
				(LKM
					(LKM
						(LK hat)
						[01;31m(MF[00m
							(NX dafur)
							[01;31m(ADVX[00m
								(ADV aber)[01;31m)[00m
							(NX sauna solarium)[01;31m)[00m)
					(DM bar)
					(KON und)
					(NX bistro))[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['KON', 'VF', 'LK', 'MF'], 'family': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'SIMPX', 'NF', 'SIMPX', 'VF', 'LK', 'MF', 'VC', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PTKANT', 'PDS', 'VVFIN', 'PTKANT', 'ADV', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ART', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'VVFIN', 'ADV', 'PPER', 'VVFIN', 'PTKVZ', 'ITJ', 'ADV', 'ADV', 'VVFIN', 'PPER', 'ADV', 'VAFIN', 'PPER', 'PIS', 'APPR', 'KOUS', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'VVFIN', 'PWAV', 'PPER', 'VVINF', 'VMFIN', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'APPR', 'PIDAT', 'NN', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'KON', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'VVPP', 'APPR', 'NN', 'PDS', 'VAFIN', 'ART', 'NE', 'NE', 'ART', 'NE', 'NE', 'ART', 'NN', 'NE', 'NE', 'PDS', 'VAFIN', 'PIS', 'ADV', 'KON', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'PPER', 'VVFIN', 'PRF', 'ADV', 'ART', 'NN', 'PTKVZ', 'ADV', 'ART', 'NN', 'NE', 'NE', 'VAFIN', 'ADV', 'ART', 'PIS', 'ADJD', 'VAFIN', 'PROP', 'ADV', 'NN', 'NN', 'NN', 'KON', 'NN'), 'right siblings': ['SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'DM', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 132), 'span': (66, 75), 'left siblings': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'SIMPX', 'NF', 'SIMPX', 'VF', 'LK', 'MF', 'VC'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen und sagen einfach wir fliegen zuruck)
		(DM gut)
		(ADVX dann)
		(SIMPX dann denke ich)
		(NF dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		(VF dann)
		(LK konnen)
		(MF wir abends noch ein bischen in der bar)
		(VC sitzen)
		(KON oder)
		(VF auf alle falle)
		(LK treffen)
		(MF wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		[01;31m(SIMPX[00m
			(VF das)
			(LK ist)
			[01;31m(MF[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(ART das)
						[01;31m(NX[00m
							(NX marriotthotel)
							(NX hannover)[01;31m)[00m[01;31m)[00m
					(SIMPX das parkhotel hannover)
					[01;31m(NX[00m
						(ART das)
						(NX hotel cristal hannover)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF die)
			(LK sind)
			(MF
				(NX alle)
				[01;31m(ADVX[00m
					(ADVX mehr)
					(KON oder)
					[01;33m(PX[00m (ADVX minder)[01;31m)[00m
				(PX in der nahe vom hauptbahnhof))[01;31m)[00m [01;33mPX)[00m
		[01;31m(SIMPX[00m
			(VF ich)
			(LK kucke)
			(MF mir mal die preise)
			(VC an)[01;31m)[00m
		(DM also)
		[01;31m(SIMPX[00m
			(VF das hotel cristal hannover)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF
						(ADVX vielleicht)
						[01;31m(ADJX[00m
							(NX ein bischen)
							(ADJD teuer)[01;31m)[00m)[01;31m)[00m
				(LKM
					(LKM
						(LK hat)
						[01;31m(MF[00m
							(NX dafur)
							[01;31m(ADVX[00m
								(ADV aber)[01;31m)[00m
							(NX sauna solarium)[01;31m)[00m)
					(DM bar)
					(KON und)
					(NX bistro))[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'SIMPX', 'NF', 'SIMPX', 'VF', 'LK', 'MF', 'VC', 'KON', 'VF', 'LK', 'MF', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PTKANT', 'PDS', 'VVFIN', 'PTKANT', 'ADV', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ART', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'VVFIN', 'ADV', 'PPER', 'VVFIN', 'PTKVZ', 'ITJ', 'ADV', 'ADV', 'VVFIN', 'PPER', 'ADV', 'VAFIN', 'PPER', 'PIS', 'APPR', 'KOUS', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'VVFIN', 'PWAV', 'PPER', 'VVINF', 'VMFIN', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'APPR', 'PIDAT', 'NN', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'KON', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'VVPP', 'APPR', 'NN', 'PDS', 'VAFIN', 'ART', 'NE', 'NE', 'ART', 'NE', 'NE', 'ART', 'NN', 'NE', 'NE', 'PDS', 'VAFIN', 'PIS', 'ADV', 'KON', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'PPER', 'VVFIN', 'PRF', 'ADV', 'ART', 'NN', 'PTKVZ', 'ADV', 'ART', 'NN', 'NE', 'NE', 'VAFIN', 'ADV', 'ART', 'PIS', 'ADJD', 'VAFIN', 'PROP', 'ADV', 'NN', 'NN', 'NN', 'KON', 'NN'), 'right siblings': ['SIMPX', 'SIMPX', 'DM', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 132), 'span': (84, 96), 'left siblings': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'SIMPX', 'NF', 'SIMPX', 'VF', 'LK', 'MF', 'VC', 'KON', 'VF', 'LK', 'MF', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen und sagen einfach wir fliegen zuruck)
		(DM gut)
		(ADVX dann)
		(SIMPX dann denke ich)
		(NF dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		(VF dann)
		(LK konnen)
		(MF wir abends noch ein bischen in der bar)
		(VC sitzen)
		(KON oder)
		(VF auf alle falle)
		(LK treffen)
		(MF wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		(VF das)
		(LK ist)
		[01;31m(MF[00m
			[01;31m(NX[00m
				[01;31m(NX[00m
					(ART das)
					[01;31m(NX[00m
						(NX marriotthotel)
						(NX hannover)[01;31m)[00m[01;31m)[00m
				(SIMPX das parkhotel hannover)
				[01;31m(NX[00m
					(ART das)
					(NX hotel cristal hannover)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF die)
			(LK sind)
			(MF
				(NX alle)
				[01;31m(ADVX[00m
					(ADVX mehr)
					(KON oder)
					[01;33m(PX[00m (ADVX minder)[01;31m)[00m
				(PX in der nahe vom hauptbahnhof))[01;31m)[00m [01;33mPX)[00m
		[01;31m(SIMPX[00m
			(VF ich)
			(LK kucke)
			(MF mir mal die preise)
			(VC an)[01;31m)[00m
		(DM also)
		[01;31m(SIMPX[00m
			(VF das hotel cristal hannover)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF
						(ADVX vielleicht)
						[01;31m(ADJX[00m
							(NX ein bischen)
							(ADJD teuer)[01;31m)[00m)[01;31m)[00m
				(LKM
					(LKM
						(LK hat)
						[01;31m(MF[00m
							(NX dafur)
							[01;31m(ADVX[00m
								(ADV aber)[01;31m)[00m
							(NX sauna solarium)[01;31m)[00m)
					(DM bar)
					(KON und)
					(NX bistro))[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['ART', 'NX'], 'family': ['NX', 'SIMPX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NE', 'NE', 'ART', 'NE', 'NE', 'ART', 'NN', 'NE', 'NE'), 'right siblings': ['SIMPX', 'NX'], 'parent': 'NX', 'auto preterminal span': (86, 96), 'span': (86, 89), 'left siblings': [], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen und sagen einfach wir fliegen zuruck)
		(DM gut)
		(ADVX dann)
		(SIMPX dann denke ich)
		(NF dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		(VF dann)
		(LK konnen)
		(MF wir abends noch ein bischen in der bar)
		(VC sitzen)
		(KON oder)
		(VF auf alle falle)
		(LK treffen)
		(MF wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		(VF das)
		(LK ist)
		[01;31m(MF[00m
			[01;31m(NX[00m
				(ART das)
				[01;31m(NX[00m
					(NX marriotthotel)
					(NX hannover)[01;31m)[00m
				(SIMPX das parkhotel hannover)
				[01;31m(NX[00m
					(ART das)
					(NX hotel cristal hannover)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF die)
			(LK sind)
			(MF
				(NX alle)
				[01;31m(ADVX[00m
					(ADVX mehr)
					(KON oder)
					[01;33m(PX[00m (ADVX minder)[01;31m)[00m
				(PX in der nahe vom hauptbahnhof))[01;31m)[00m [01;33mPX)[00m
		[01;31m(SIMPX[00m
			(VF ich)
			(LK kucke)
			(MF mir mal die preise)
			(VC an)[01;31m)[00m
		(DM also)
		[01;31m(SIMPX[00m
			(VF das hotel cristal hannover)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF
						(ADVX vielleicht)
						[01;31m(ADJX[00m
							(NX ein bischen)
							(ADJD teuer)[01;31m)[00m)[01;31m)[00m
				(LKM
					(LKM
						(LK hat)
						[01;31m(MF[00m
							(NX dafur)
							[01;31m(ADVX[00m
								(ADV aber)[01;31m)[00m
							(NX sauna solarium)[01;31m)[00m)
					(DM bar)
					(KON und)
					(NX bistro))[01;31m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['ART', 'NX', 'SIMPX', 'NX'], 'family': ['NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NE', 'NE', 'ART', 'NE', 'NE', 'ART', 'NN', 'NE', 'NE'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (86, 96), 'span': (86, 96), 'left siblings': [], 'label': 'NX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen und sagen einfach wir fliegen zuruck)
		(DM gut)
		(ADVX dann)
		(SIMPX dann denke ich)
		(NF dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		(VF dann)
		(LK konnen)
		(MF wir abends noch ein bischen in der bar)
		(VC sitzen)
		(KON oder)
		(VF auf alle falle)
		(LK treffen)
		(MF wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		(VF das)
		(LK ist)
		[01;31m(MF[00m
			(ART das)
			[01;31m(NX[00m
				(NX marriotthotel)
				(NX hannover)[01;31m)[00m
			(SIMPX das parkhotel hannover)
			[01;31m(NX[00m
				(ART das)
				(NX hotel cristal hannover)[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF die)
			(LK sind)
			(MF
				(NX alle)
				[01;31m(ADVX[00m
					(ADVX mehr)
					(KON oder)
					[01;33m(PX[00m (ADVX minder)[01;31m)[00m
				(PX in der nahe vom hauptbahnhof))[01;31m)[00m [01;33mPX)[00m
		[01;31m(SIMPX[00m
			(VF ich)
			(LK kucke)
			(MF mir mal die preise)
			(VC an)[01;31m)[00m
		(DM also)
		[01;31m(SIMPX[00m
			(VF das hotel cristal hannover)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF
						(ADVX vielleicht)
						[01;31m(ADJX[00m
							(NX ein bischen)
							(ADJD teuer)[01;31m)[00m)[01;31m)[00m
				(LKM
					(LKM
						(LK hat)
						[01;31m(MF[00m
							(NX dafur)
							[01;31m(ADVX[00m
								(ADV aber)[01;31m)[00m
							(NX sauna solarium)[01;31m)[00m)
					(DM bar)
					(KON und)
					(NX bistro))[01;31m)[00m[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['ART', 'NX', 'SIMPX', 'NX'], 'family': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'SIMPX', 'NF', 'SIMPX', 'VF', 'LK', 'MF', 'VC', 'KON', 'VF', 'LK', 'MF', 'SIMPX', 'VF', 'LK', 'MF', 'SIMPX', 'SIMPX', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PTKANT', 'PDS', 'VVFIN', 'PTKANT', 'ADV', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ART', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'VVFIN', 'ADV', 'PPER', 'VVFIN', 'PTKVZ', 'ITJ', 'ADV', 'ADV', 'VVFIN', 'PPER', 'ADV', 'VAFIN', 'PPER', 'PIS', 'APPR', 'KOUS', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'VVFIN', 'PWAV', 'PPER', 'VVINF', 'VMFIN', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'APPR', 'PIDAT', 'NN', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'KON', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'VVPP', 'APPR', 'NN', 'PDS', 'VAFIN', 'ART', 'NE', 'NE', 'ART', 'NE', 'NE', 'ART', 'NN', 'NE', 'NE', 'PDS', 'VAFIN', 'PIS', 'ADV', 'KON', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'PPER', 'VVFIN', 'PRF', 'ADV', 'ART', 'NN', 'PTKVZ', 'ADV', 'ART', 'NN', 'NE', 'NE', 'VAFIN', 'ADV', 'ART', 'PIS', 'ADJD', 'VAFIN', 'PROP', 'ADV', 'NN', 'NN', 'NN', 'KON', 'NN'), 'right siblings': ['SIMPX', 'SIMPX', 'DM', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 132), 'span': (86, 96), 'left siblings': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'SIMPX', 'NF', 'SIMPX', 'VF', 'LK', 'MF', 'VC', 'KON', 'VF', 'LK', 'MF', 'SIMPX', 'VF', 'LK'], 'label': 'MF', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen und sagen einfach wir fliegen zuruck)
		(DM gut)
		(ADVX dann)
		(SIMPX dann denke ich)
		(NF dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		(VF dann)
		(LK konnen)
		(MF wir abends noch ein bischen in der bar)
		(VC sitzen)
		(KON oder)
		(VF auf alle falle)
		(LK treffen)
		(MF wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		(VF das)
		(LK ist)
		(ART das)
		[01;31m(NX[00m
			(NX marriotthotel)
			(NX hannover)[01;31m)[00m
		(SIMPX das parkhotel hannover)
		[01;31m(NX[00m
			(ART das)
			(NX hotel cristal hannover)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF die)
			(LK sind)
			(MF
				(NX alle)
				[01;31m(ADVX[00m
					(ADVX mehr)
					(KON oder)
					[01;33m(PX[00m (ADVX minder)[01;31m)[00m
				(PX in der nahe vom hauptbahnhof))[01;31m)[00m [01;33mPX)[00m
		[01;31m(SIMPX[00m
			(VF ich)
			(LK kucke)
			(MF mir mal die preise)
			(VC an)[01;31m)[00m
		(DM also)
		[01;31m(SIMPX[00m
			(VF das hotel cristal hannover)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF
						(ADVX vielleicht)
						[01;31m(ADJX[00m
							(NX ein bischen)
							(ADJD teuer)[01;31m)[00m)[01;31m)[00m
				(LKM
					(LKM
						(LK hat)
						[01;31m(MF[00m
							(NX dafur)
							[01;31m(ADVX[00m
								(ADV aber)[01;31m)[00m
							(NX sauna solarium)[01;31m)[00m)
					(DM bar)
					(KON und)
					(NX bistro))[01;31m)[00m[01;31m)[00m))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'SIMPX', 'NF', 'SIMPX', 'VF', 'LK', 'MF', 'VC', 'KON', 'VF', 'LK', 'MF', 'SIMPX', 'VF', 'LK', 'ART', 'NX', 'SIMPX', 'NX', 'SIMPX', 'SIMPX', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PTKANT', 'PDS', 'VVFIN', 'PTKANT', 'ADV', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ART', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'VVFIN', 'ADV', 'PPER', 'VVFIN', 'PTKVZ', 'ITJ', 'ADV', 'ADV', 'VVFIN', 'PPER', 'ADV', 'VAFIN', 'PPER', 'PIS', 'APPR', 'KOUS', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'VVFIN', 'PWAV', 'PPER', 'VVINF', 'VMFIN', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'APPR', 'PIDAT', 'NN', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'KON', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'VVPP', 'APPR', 'NN', 'PDS', 'VAFIN', 'ART', 'NE', 'NE', 'ART', 'NE', 'NE', 'ART', 'NN', 'NE', 'NE', 'PDS', 'VAFIN', 'PIS', 'ADV', 'KON', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'PPER', 'VVFIN', 'PRF', 'ADV', 'ART', 'NN', 'PTKVZ', 'ADV', 'ART', 'NN', 'NE', 'NE', 'VAFIN', 'ADV', 'ART', 'PIS', 'ADJD', 'VAFIN', 'PROP', 'ADV', 'NN', 'NN', 'NN', 'KON', 'NN'), 'right siblings': ['SIMPX', 'NX', 'SIMPX', 'SIMPX', 'DM', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 132), 'span': (87, 89), 'left siblings': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'SIMPX', 'NF', 'SIMPX', 'VF', 'LK', 'MF', 'VC', 'KON', 'VF', 'LK', 'MF', 'SIMPX', 'VF', 'LK', 'ART'], 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'remove'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen und sagen einfach wir fliegen zuruck)
		(DM gut)
		(ADVX dann)
		(SIMPX dann denke ich)
		(NF dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		(VF dann)
		(LK konnen)
		(MF wir abends noch ein bischen in der bar)
		(VC sitzen)
		(KON oder)
		(VF auf alle falle)
		(LK treffen)
		(MF wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		(VF das)
		(LK ist)
		(ART das)
		(NX marriotthotel)
		(NX hannover)
		(SIMPX das parkhotel hannover)
		[01;31m(NX[00m
			(ART das)
			(NX hotel cristal hannover)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF die)
			(LK sind)
			(MF
				(NX alle)
				[01;31m(ADVX[00m
					(ADVX mehr)
					(KON oder)
					[01;33m(PX[00m (ADVX minder)[01;31m)[00m
				(PX in der nahe vom hauptbahnhof))[01;31m)[00m [01;33mPX)[00m
		[01;31m(SIMPX[00m
			(VF ich)
			(LK kucke)
			(MF mir mal die preise)
			(VC an)[01;31m)[00m
		(DM also)
		[01;31m(SIMPX[00m
			(VF das hotel cristal hannover)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF
						(ADVX vielleicht)
						[01;31m(ADJX[00m
							(NX ein bischen)
							(ADJD teuer)[01;31m)[00m)[01;31m)[00m
				(LKM
					(LKM
						(LK hat)
						[01;31m(MF[00m
							(NX dafur)
							[01;31m(ADVX[00m
								(ADV aber)[01;31m)[00m
							(NX sauna solarium)[01;31m)[00m)
					(DM bar)
					(KON und)
					(NX bistro))[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['ART', 'NX'], 'family': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'SIMPX', 'NF', 'SIMPX', 'VF', 'LK', 'MF', 'VC', 'KON', 'VF', 'LK', 'MF', 'SIMPX', 'VF', 'LK', 'ART', 'NX', 'NX', 'SIMPX', 'NX', 'SIMPX', 'SIMPX', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PTKANT', 'PDS', 'VVFIN', 'PTKANT', 'ADV', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ART', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'VVFIN', 'ADV', 'PPER', 'VVFIN', 'PTKVZ', 'ITJ', 'ADV', 'ADV', 'VVFIN', 'PPER', 'ADV', 'VAFIN', 'PPER', 'PIS', 'APPR', 'KOUS', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'VVFIN', 'PWAV', 'PPER', 'VVINF', 'VMFIN', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'APPR', 'PIDAT', 'NN', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'KON', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'VVPP', 'APPR', 'NN', 'PDS', 'VAFIN', 'ART', 'NE', 'NE', 'ART', 'NE', 'NE', 'ART', 'NN', 'NE', 'NE', 'PDS', 'VAFIN', 'PIS', 'ADV', 'KON', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'PPER', 'VVFIN', 'PRF', 'ADV', 'ART', 'NN', 'PTKVZ', 'ADV', 'ART', 'NN', 'NE', 'NE', 'VAFIN', 'ADV', 'ART', 'PIS', 'ADJD', 'VAFIN', 'PROP', 'ADV', 'NN', 'NN', 'NN', 'KON', 'NN'), 'right siblings': ['SIMPX', 'SIMPX', 'DM', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 132), 'span': (92, 96), 'left siblings': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'SIMPX', 'NF', 'SIMPX', 'VF', 'LK', 'MF', 'VC', 'KON', 'VF', 'LK', 'MF', 'SIMPX', 'VF', 'LK', 'ART', 'NX', 'NX', 'SIMPX'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen und sagen einfach wir fliegen zuruck)
		(DM gut)
		(ADVX dann)
		(SIMPX dann denke ich)
		(NF dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		(VF dann)
		(LK konnen)
		(MF wir abends noch ein bischen in der bar)
		(VC sitzen)
		(KON oder)
		(VF auf alle falle)
		(LK treffen)
		(MF wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		(VF das)
		(LK ist)
		(ART das)
		(NX marriotthotel)
		(NX hannover)
		(SIMPX das parkhotel hannover)
		(ART das)
		(NX hotel cristal hannover)
		[01;31m(SIMPX[00m
			(VF die)
			(LK sind)
			(MF
				(NX alle)
				[01;31m(ADVX[00m
					(ADVX mehr)
					(KON oder)
					[01;33m(PX[00m (ADVX minder)[01;31m)[00m
				(PX in der nahe vom hauptbahnhof))[01;31m)[00m [01;33mPX)[00m
		[01;31m(SIMPX[00m
			(VF ich)
			(LK kucke)
			(MF mir mal die preise)
			(VC an)[01;31m)[00m
		(DM also)
		[01;31m(SIMPX[00m
			(VF das hotel cristal hannover)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF
						(ADVX vielleicht)
						[01;31m(ADJX[00m
							(NX ein bischen)
							(ADJD teuer)[01;31m)[00m)[01;31m)[00m
				(LKM
					(LKM
						(LK hat)
						[01;31m(MF[00m
							(NX dafur)
							[01;31m(ADVX[00m
								(ADV aber)[01;31m)[00m
							(NX sauna solarium)[01;31m)[00m)
					(DM bar)
					(KON und)
					(NX bistro))[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'SIMPX', 'NF', 'SIMPX', 'VF', 'LK', 'MF', 'VC', 'KON', 'VF', 'LK', 'MF', 'SIMPX', 'VF', 'LK', 'ART', 'NX', 'NX', 'SIMPX', 'ART', 'NX', 'SIMPX', 'SIMPX', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PTKANT', 'PDS', 'VVFIN', 'PTKANT', 'ADV', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ART', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'VVFIN', 'ADV', 'PPER', 'VVFIN', 'PTKVZ', 'ITJ', 'ADV', 'ADV', 'VVFIN', 'PPER', 'ADV', 'VAFIN', 'PPER', 'PIS', 'APPR', 'KOUS', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'VVFIN', 'PWAV', 'PPER', 'VVINF', 'VMFIN', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'APPR', 'PIDAT', 'NN', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'KON', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'VVPP', 'APPR', 'NN', 'PDS', 'VAFIN', 'ART', 'NE', 'NE', 'ART', 'NE', 'NE', 'ART', 'NN', 'NE', 'NE', 'PDS', 'VAFIN', 'PIS', 'ADV', 'KON', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'PPER', 'VVFIN', 'PRF', 'ADV', 'ART', 'NN', 'PTKVZ', 'ADV', 'ART', 'NN', 'NE', 'NE', 'VAFIN', 'ADV', 'ART', 'PIS', 'ADJD', 'VAFIN', 'PROP', 'ADV', 'NN', 'NN', 'NN', 'KON', 'NN'), 'right siblings': ['SIMPX', 'DM', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 132), 'span': (96, 107), 'left siblings': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'SIMPX', 'NF', 'SIMPX', 'VF', 'LK', 'MF', 'VC', 'KON', 'VF', 'LK', 'MF', 'SIMPX', 'VF', 'LK', 'ART', 'NX', 'NX', 'SIMPX', 'ART', 'NX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen und sagen einfach wir fliegen zuruck)
		(DM gut)
		(ADVX dann)
		(SIMPX dann denke ich)
		(NF dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		(VF dann)
		(LK konnen)
		(MF wir abends noch ein bischen in der bar)
		(VC sitzen)
		(KON oder)
		(VF auf alle falle)
		(LK treffen)
		(MF wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		(VF das)
		(LK ist)
		(ART das)
		(NX marriotthotel)
		(NX hannover)
		(SIMPX das parkhotel hannover)
		(ART das)
		(NX hotel cristal hannover)
		(VF die)
		(LK sind)
		(MF
			(NX alle)
			[01;31m(ADVX[00m
				(ADVX mehr)
				(KON oder)
				[01;33m(PX[00m (ADVX minder)[01;31m)[00m
			(PX in der nahe vom hauptbahnhof)) [01;33mPX)[00m
		[01;31m(SIMPX[00m
			(VF ich)
			(LK kucke)
			(MF mir mal die preise)
			(VC an)[01;31m)[00m
		(DM also)
		[01;31m(SIMPX[00m
			(VF das hotel cristal hannover)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF
						(ADVX vielleicht)
						[01;31m(ADJX[00m
							(NX ein bischen)
							(ADJD teuer)[01;31m)[00m)[01;31m)[00m
				(LKM
					(LKM
						(LK hat)
						[01;31m(MF[00m
							(NX dafur)
							[01;31m(ADVX[00m
								(ADV aber)[01;31m)[00m
							(NX sauna solarium)[01;31m)[00m)
					(DM bar)
					(KON und)
					(NX bistro))[01;31m)[00m[01;31m)[00m))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'KON', 'ADVX'], 'family': ['NX', 'ADVX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PIS', 'ADV', 'KON', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'NN'), 'right siblings': ['PX'], 'parent': 'MF', 'auto preterminal span': (98, 107), 'span': (99, 102), 'left siblings': ['NX'], 'label': 'ADVX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen und sagen einfach wir fliegen zuruck)
		(DM gut)
		(ADVX dann)
		(SIMPX dann denke ich)
		(NF dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		(VF dann)
		(LK konnen)
		(MF wir abends noch ein bischen in der bar)
		(VC sitzen)
		(KON oder)
		(VF auf alle falle)
		(LK treffen)
		(MF wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		(VF das)
		(LK ist)
		(ART das)
		(NX marriotthotel)
		(NX hannover)
		(SIMPX das parkhotel hannover)
		(ART das)
		(NX hotel cristal hannover)
		(VF die)
		(LK sind)
		(MF
			(NX alle)
			(ADVX mehr)
			(KON oder)
			[01;36m(PX[00m
				(ADVX minder)
				(PX in der nahe vom hauptbahnhof)[01;36m)[00m)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK kucke)
			(MF mir mal die preise)
			(VC an)[01;31m)[00m
		(DM also)
		[01;31m(SIMPX[00m
			(VF das hotel cristal hannover)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF
						(ADVX vielleicht)
						[01;31m(ADJX[00m
							(NX ein bischen)
							(ADJD teuer)[01;31m)[00m)[01;31m)[00m
				(LKM
					(LKM
						(LK hat)
						[01;31m(MF[00m
							(NX dafur)
							[01;31m(ADVX[00m
								(ADV aber)[01;31m)[00m
							(NX sauna solarium)[01;31m)[00m)
					(DM bar)
					(KON und)
					(NX bistro))[01;31m)[00m[01;31m)[00m))
Step:PP Attachment
{'subtrees': ['ADVX', 'PX'], 'family': ['NX', 'ADVX', 'KON', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'APPR', 'ART', 'NN', 'APPRART', 'NN'), 'right siblings': [], 'left siblings': [(NX (PIS alle)), (ADVX (ADV mehr)), (KON oder)], 'auto preterminal span': (101, 107), 'span': (101, 107), 'parent': 'MF', 'label': 'PX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen und sagen einfach wir fliegen zuruck)
		(DM gut)
		(ADVX dann)
		(SIMPX dann denke ich)
		(NF dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		(VF dann)
		(LK konnen)
		(MF wir abends noch ein bischen in der bar)
		(VC sitzen)
		(KON oder)
		(VF auf alle falle)
		(LK treffen)
		(MF wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		(VF das)
		(LK ist)
		(ART das)
		(NX marriotthotel)
		(NX hannover)
		(SIMPX das parkhotel hannover)
		(ART das)
		(NX hotel cristal hannover)
		(VF die)
		(LK sind)
		(MF alle mehr oder minder in der nahe vom hauptbahnhof)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK kucke)
			(MF mir mal die preise)
			(VC an)[01;31m)[00m
		(DM also)
		[01;31m(SIMPX[00m
			(VF das hotel cristal hannover)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF
						(ADVX vielleicht)
						[01;31m(ADJX[00m
							(NX ein bischen)
							(ADJD teuer)[01;31m)[00m)[01;31m)[00m
				(LKM
					(LKM
						(LK hat)
						[01;31m(MF[00m
							(NX dafur)
							[01;31m(ADVX[00m
								(ADV aber)[01;31m)[00m
							(NX sauna solarium)[01;31m)[00m)
					(DM bar)
					(KON und)
					(NX bistro))[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'SIMPX', 'NF', 'SIMPX', 'VF', 'LK', 'MF', 'VC', 'KON', 'VF', 'LK', 'MF', 'SIMPX', 'VF', 'LK', 'ART', 'NX', 'NX', 'SIMPX', 'ART', 'NX', 'VF', 'LK', 'MF', 'SIMPX', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PTKANT', 'PDS', 'VVFIN', 'PTKANT', 'ADV', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ART', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'VVFIN', 'ADV', 'PPER', 'VVFIN', 'PTKVZ', 'ITJ', 'ADV', 'ADV', 'VVFIN', 'PPER', 'ADV', 'VAFIN', 'PPER', 'PIS', 'APPR', 'KOUS', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'VVFIN', 'PWAV', 'PPER', 'VVINF', 'VMFIN', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'APPR', 'PIDAT', 'NN', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'KON', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'VVPP', 'APPR', 'NN', 'PDS', 'VAFIN', 'ART', 'NE', 'NE', 'ART', 'NE', 'NE', 'ART', 'NN', 'NE', 'NE', 'PDS', 'VAFIN', 'PIS', 'ADV', 'KON', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'PPER', 'VVFIN', 'PRF', 'ADV', 'ART', 'NN', 'PTKVZ', 'ADV', 'ART', 'NN', 'NE', 'NE', 'VAFIN', 'ADV', 'ART', 'PIS', 'ADJD', 'VAFIN', 'PROP', 'ADV', 'NN', 'NN', 'NN', 'KON', 'NN'), 'right siblings': ['DM', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 132), 'span': (107, 114), 'left siblings': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'SIMPX', 'NF', 'SIMPX', 'VF', 'LK', 'MF', 'VC', 'KON', 'VF', 'LK', 'MF', 'SIMPX', 'VF', 'LK', 'ART', 'NX', 'NX', 'SIMPX', 'ART', 'NX', 'VF', 'LK', 'MF'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen und sagen einfach wir fliegen zuruck)
		(DM gut)
		(ADVX dann)
		(SIMPX dann denke ich)
		(NF dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		(VF dann)
		(LK konnen)
		(MF wir abends noch ein bischen in der bar)
		(VC sitzen)
		(KON oder)
		(VF auf alle falle)
		(LK treffen)
		(MF wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		(VF das)
		(LK ist)
		(ART das)
		(NX marriotthotel)
		(NX hannover)
		(SIMPX das parkhotel hannover)
		(ART das)
		(NX hotel cristal hannover)
		(VF die)
		(LK sind)
		(MF alle mehr oder minder in der nahe vom hauptbahnhof)
		(VF ich)
		(LK kucke)
		(MF mir mal die preise)
		(VC an)
		(DM also)
		[01;31m(SIMPX[00m
			(VF das hotel cristal hannover)
			[01;31m(FKOORD[00m
				[01;31m(LKM[00m
					(LK ist)
					(MF
						(ADVX vielleicht)
						[01;31m(ADJX[00m
							(NX ein bischen)
							(ADJD teuer)[01;31m)[00m)[01;31m)[00m
				(LKM
					(LKM
						(LK hat)
						[01;31m(MF[00m
							(NX dafur)
							[01;31m(ADVX[00m
								(ADV aber)[01;31m)[00m
							(NX sauna solarium)[01;31m)[00m)
					(DM bar)
					(KON und)
					(NX bistro))[01;31m)[00m[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VF', 'FKOORD'], 'family': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'SIMPX', 'NF', 'SIMPX', 'VF', 'LK', 'MF', 'VC', 'KON', 'VF', 'LK', 'MF', 'SIMPX', 'VF', 'LK', 'ART', 'NX', 'NX', 'SIMPX', 'ART', 'NX', 'VF', 'LK', 'MF', 'VF', 'LK', 'MF', 'VC', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PTKANT', 'PDS', 'VVFIN', 'PTKANT', 'ADV', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ART', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'VVFIN', 'ADV', 'PPER', 'VVFIN', 'PTKVZ', 'ITJ', 'ADV', 'ADV', 'VVFIN', 'PPER', 'ADV', 'VAFIN', 'PPER', 'PIS', 'APPR', 'KOUS', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'VVFIN', 'PWAV', 'PPER', 'VVINF', 'VMFIN', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'APPR', 'PIDAT', 'NN', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'KON', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'VVPP', 'APPR', 'NN', 'PDS', 'VAFIN', 'ART', 'NE', 'NE', 'ART', 'NE', 'NE', 'ART', 'NN', 'NE', 'NE', 'PDS', 'VAFIN', 'PIS', 'ADV', 'KON', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'PPER', 'VVFIN', 'PRF', 'ADV', 'ART', 'NN', 'PTKVZ', 'ADV', 'ART', 'NN', 'NE', 'NE', 'VAFIN', 'ADV', 'ART', 'PIS', 'ADJD', 'VAFIN', 'PROP', 'ADV', 'NN', 'NN', 'NN', 'KON', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 132), 'span': (115, 132), 'left siblings': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'SIMPX', 'NF', 'SIMPX', 'VF', 'LK', 'MF', 'VC', 'KON', 'VF', 'LK', 'MF', 'SIMPX', 'VF', 'LK', 'ART', 'NX', 'NX', 'SIMPX', 'ART', 'NX', 'VF', 'LK', 'MF', 'VF', 'LK', 'MF', 'VC', 'DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen und sagen einfach wir fliegen zuruck)
		(DM gut)
		(ADVX dann)
		(SIMPX dann denke ich)
		(NF dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		(VF dann)
		(LK konnen)
		(MF wir abends noch ein bischen in der bar)
		(VC sitzen)
		(KON oder)
		(VF auf alle falle)
		(LK treffen)
		(MF wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		(VF das)
		(LK ist)
		(ART das)
		(NX marriotthotel)
		(NX hannover)
		(SIMPX das parkhotel hannover)
		(ART das)
		(NX hotel cristal hannover)
		(VF die)
		(LK sind)
		(MF alle mehr oder minder in der nahe vom hauptbahnhof)
		(VF ich)
		(LK kucke)
		(MF mir mal die preise)
		(VC an)
		(DM also)
		(VF das hotel cristal hannover)
		[01;31m(FKOORD[00m
			[01;31m(LKM[00m
				(LK ist)
				(MF
					(ADVX vielleicht)
					[01;31m(ADJX[00m
						(NX ein bischen)
						(ADJD teuer)[01;31m)[00m)[01;31m)[00m
			(LKM
				(LKM
					(LK hat)
					[01;31m(MF[00m
						(NX dafur)
						[01;31m(ADVX[00m
							(ADV aber)[01;31m)[00m
						(NX sauna solarium)[01;31m)[00m)
				(DM bar)
				(KON und)
				(NX bistro))[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['LKM', 'LKM'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'ADV', 'ART', 'PIS', 'ADJD', 'VAFIN', 'PROP', 'ADV', 'NN', 'NN', 'NN', 'KON', 'NN'), 'right siblings': ['LKM'], 'parent': 'FKOORD', 'auto preterminal span': (119, 132), 'span': (119, 124), 'left siblings': [], 'label': 'LKM', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen und sagen einfach wir fliegen zuruck)
		(DM gut)
		(ADVX dann)
		(SIMPX dann denke ich)
		(NF dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		(VF dann)
		(LK konnen)
		(MF wir abends noch ein bischen in der bar)
		(VC sitzen)
		(KON oder)
		(VF auf alle falle)
		(LK treffen)
		(MF wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		(VF das)
		(LK ist)
		(ART das)
		(NX marriotthotel)
		(NX hannover)
		(SIMPX das parkhotel hannover)
		(ART das)
		(NX hotel cristal hannover)
		(VF die)
		(LK sind)
		(MF alle mehr oder minder in der nahe vom hauptbahnhof)
		(VF ich)
		(LK kucke)
		(MF mir mal die preise)
		(VC an)
		(DM also)
		(VF das hotel cristal hannover)
		[01;31m(FKOORD[00m
			(LK ist)
			(MF
				(ADVX vielleicht)
				[01;31m(ADJX[00m
					(NX ein bischen)
					(ADJD teuer)[01;31m)[00m)
			(LKM
				(LKM
					(LK hat)
					[01;31m(MF[00m
						(NX dafur)
						[01;31m(ADVX[00m
							(ADV aber)[01;31m)[00m
						(NX sauna solarium)[01;31m)[00m)
				(DM bar)
				(KON und)
				(NX bistro))[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['LK', 'MF', 'LKM'], 'family': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'SIMPX', 'NF', 'SIMPX', 'VF', 'LK', 'MF', 'VC', 'KON', 'VF', 'LK', 'MF', 'SIMPX', 'VF', 'LK', 'ART', 'NX', 'NX', 'SIMPX', 'ART', 'NX', 'VF', 'LK', 'MF', 'VF', 'LK', 'MF', 'VC', 'DM', 'VF', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PTKANT', 'PDS', 'VVFIN', 'PTKANT', 'ADV', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ART', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'VVFIN', 'ADV', 'PPER', 'VVFIN', 'PTKVZ', 'ITJ', 'ADV', 'ADV', 'VVFIN', 'PPER', 'ADV', 'VAFIN', 'PPER', 'PIS', 'APPR', 'KOUS', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'VVFIN', 'PWAV', 'PPER', 'VVINF', 'VMFIN', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'APPR', 'PIDAT', 'NN', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'KON', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'VVPP', 'APPR', 'NN', 'PDS', 'VAFIN', 'ART', 'NE', 'NE', 'ART', 'NE', 'NE', 'ART', 'NN', 'NE', 'NE', 'PDS', 'VAFIN', 'PIS', 'ADV', 'KON', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'PPER', 'VVFIN', 'PRF', 'ADV', 'ART', 'NN', 'PTKVZ', 'ADV', 'ART', 'NN', 'NE', 'NE', 'VAFIN', 'ADV', 'ART', 'PIS', 'ADJD', 'VAFIN', 'PROP', 'ADV', 'NN', 'NN', 'NN', 'KON', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 132), 'span': (119, 132), 'left siblings': ['DM', 'SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'ADVX', 'SIMPX', 'NF', 'SIMPX', 'VF', 'LK', 'MF', 'VC', 'KON', 'VF', 'LK', 'MF', 'SIMPX', 'VF', 'LK', 'ART', 'NX', 'NX', 'SIMPX', 'ART', 'NX', 'VF', 'LK', 'MF', 'VF', 'LK', 'MF', 'VC', 'DM', 'VF'], 'label': 'FKOORD', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen und sagen einfach wir fliegen zuruck)
		(DM gut)
		(ADVX dann)
		(SIMPX dann denke ich)
		(NF dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		(VF dann)
		(LK konnen)
		(MF wir abends noch ein bischen in der bar)
		(VC sitzen)
		(KON oder)
		(VF auf alle falle)
		(LK treffen)
		(MF wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		(VF das)
		(LK ist)
		(ART das)
		(NX marriotthotel)
		(NX hannover)
		(SIMPX das parkhotel hannover)
		(ART das)
		(NX hotel cristal hannover)
		(VF die)
		(LK sind)
		(MF alle mehr oder minder in der nahe vom hauptbahnhof)
		(VF ich)
		(LK kucke)
		(MF mir mal die preise)
		(VC an)
		(DM also)
		(VF das hotel cristal hannover)
		(LK ist)
		(MF
			(ADVX vielleicht)
			[01;31m(ADJX[00m
				(NX ein bischen)
				(ADJD teuer)[01;31m)[00m)
		(LKM
			(LKM
				(LK hat)
				[01;31m(MF[00m
					(NX dafur)
					[01;31m(ADVX[00m
						(ADV aber)[01;31m)[00m
					(NX sauna solarium)[01;31m)[00m)
			(DM bar)
			(KON und)
			(NX bistro))))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADJD'], 'family': ['ADVX', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ART', 'PIS', 'ADJD'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (120, 124), 'span': (121, 124), 'left siblings': ['ADVX'], 'label': 'ADJX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen und sagen einfach wir fliegen zuruck)
		(DM gut)
		(ADVX dann)
		(SIMPX dann denke ich)
		(NF dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		(VF dann)
		(LK konnen)
		(MF wir abends noch ein bischen in der bar)
		(VC sitzen)
		(KON oder)
		(VF auf alle falle)
		(LK treffen)
		(MF wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		(VF das)
		(LK ist)
		(ART das)
		(NX marriotthotel)
		(NX hannover)
		(SIMPX das parkhotel hannover)
		(ART das)
		(NX hotel cristal hannover)
		(VF die)
		(LK sind)
		(MF alle mehr oder minder in der nahe vom hauptbahnhof)
		(VF ich)
		(LK kucke)
		(MF mir mal die preise)
		(VC an)
		(DM also)
		(VF das hotel cristal hannover)
		(LK ist)
		(MF vielleicht ein bischen teuer)
		(LKM
			(LKM
				(LK hat)
				[01;31m(MF[00m
					(NX dafur)
					[01;31m(ADVX[00m
						(ADV aber)[01;31m)[00m
					(NX sauna solarium)[01;31m)[00m)
			(DM bar)
			(KON und)
			(NX bistro))))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADVX', 'NX'], 'family': ['LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'PROP', 'ADV', 'NN', 'NN'), 'right siblings': [], 'parent': 'LKM', 'auto preterminal span': (124, 129), 'span': (125, 129), 'left siblings': ['LK'], 'label': 'MF', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM na ja)
		(SIMPX das stimmt)
		(DM ja)
		(DM also)
		(SIMPX und dann konnen wir einfach den)
		(SIMPX dann brauchen wir uns jetzt vielleicht gar nicht festlegen und sagen einfach wir fliegen zuruck)
		(DM gut)
		(ADVX dann)
		(SIMPX dann denke ich)
		(NF dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen)
		(SIMPX ich denke wir nehmen zusammen einfach ein hotel)
		(VF dann)
		(LK konnen)
		(MF wir abends noch ein bischen in der bar)
		(VC sitzen)
		(KON oder)
		(VF auf alle falle)
		(LK treffen)
		(MF wir uns dann da)
		(SIMPX und ich habe hier eine liste vorbereitet mit hotels)
		(VF das)
		(LK ist)
		(ART das)
		(NX marriotthotel)
		(NX hannover)
		(SIMPX das parkhotel hannover)
		(ART das)
		(NX hotel cristal hannover)
		(VF die)
		(LK sind)
		(MF alle mehr oder minder in der nahe vom hauptbahnhof)
		(VF ich)
		(LK kucke)
		(MF mir mal die preise)
		(VC an)
		(DM also)
		(VF das hotel cristal hannover)
		(LK ist)
		(MF vielleicht ein bischen teuer)
		(LKM
			(LKM
				(LK hat)
				(NX dafur)
				[01;31m(ADVX[00m
					(ADV aber)[01;31m)[00m
				(NX sauna solarium))
			(DM bar)
			(KON und)
			(NX bistro))))
Step:Single Word Phrase
{'subtrees': ['ADV'], 'family': ['LK', 'NX', 'ADVX', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('VAFIN', 'PROP', 'ADV', 'NN', 'NN'), 'right siblings': ['NX'], 'parent': 'LKM', 'auto preterminal span': (124, 129), 'span': (126, 127), 'left siblings': ['LK', 'NX'], 'label': 'ADVX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP na ja das stimmt ja also und dann konnen wir einfach den dann brauchen wir uns jetzt vielleicht gar nicht festlegen und sagen einfach wir fliegen zuruck gut dann dann denke ich dann haben wir alles auser das wir immer noch nicht wissen wo wir ubernachten konnen ich denke wir nehmen zusammen einfach ein hotel dann konnen wir abends noch ein bischen in der bar sitzen oder auf alle falle treffen wir uns dann da und ich habe hier eine liste vorbereitet mit hotels das ist das marriotthotel hannover das parkhotel hannover das hotel cristal hannover die sind alle mehr oder minder in der nahe vom hauptbahnhof ich kucke mir mal die preise an also das hotel cristal hannover ist vielleicht ein bischen teuer hat dafur aber sauna solarium bar und bistro)

Sentence 459:
10 Initial errors
0 on fringe, 7 iterations
3 Error:UNSET move
2 Error:Different label
1 Error:UNSET remove
1 Error:PP Attachment
1 Error:PP Attachment
1 Error:UNSET add
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM stimmt)
		(SIMPX wir haben wahrscheinlich keine zeit in die sauna zu gehen)
		[01;31m(SIMPX[00m
			[01;36m(DM[00m [01;31m(VF[00m
				(ADVX
					(ADV also))[01;31m)[00m[01;36m)[00m
			(LK konnten)
			(MF wir auch das parkhotel hannover)
			(VC nehmen)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF das)
			(LK ist)
			[01;36m(MF[00m
				[01;36m(PX[00m
					(APPR [01;33m(PX[00m mit)
					[01;31m(MF[00m
						[01;31m(NX[00m
							(NX das einzelzimmer) [01;33mPX)[00m
							(PX mit einhundert neunzehn mark)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK ware)
			(MF das doch das doch annehmbar)[01;31m)[00m))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['APPR', 'NX'], 'mover info': [('APPR', (21, 22))], 'old_family': ['VF', 'LK', 'APPR', 'MF'], 'start left siblings': ['VF', 'LK'], 'auto preterminals': ('PDS', 'VAFIN', 'APPR', 'ART', 'NN', 'APPR', 'CARD', 'CARD', 'NN'), 'start right siblings': ['MF'], 'end left siblings': [], 'auto preterminal span': (19, 28), 'adding node already present': False, 'movers': ['APPR'], 'old_parent': 'SIMPX', 'POS confusion': ('APPR', 'APPR'), 'added and moved': True, 'end right siblings': ['NX'], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'PX'}
(TOP
	(TURN
		(DM stimmt)
		(SIMPX wir haben wahrscheinlich keine zeit in die sauna zu gehen)
		[01;31m(SIMPX[00m
			[01;36m(DM[00m [01;31m(VF[00m
				(ADVX
					(ADV also))[01;31m)[00m[01;36m)[00m
			(LK konnten)
			(MF wir auch das parkhotel hannover)
			(VC nehmen)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF das)
			(LK ist)
			(PX [01;33m(PX[00m
				(MF
					(APPR mit)
					[01;31m(NX[00m
						(NX das einzelzimmer) [01;33mPX)[00m
						(PX mit einhundert neunzehn mark)[01;31m)[00m))[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK ware)
			(MF das doch das doch annehmbar)[01;31m)[00m))
Step:Different label
{'family': ['DM', 'LK', 'MF', 'VC'], 'auto preterminal span': (11, 12), 'span': (11, 12), 'subtrees': ['ADVX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('ADV',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('VF', 'DM')}
(TOP
	(TURN
		(DM stimmt)
		(SIMPX wir haben wahrscheinlich keine zeit in die sauna zu gehen)
		[01;31m(SIMPX[00m
			(DM also)
			(LK konnten)
			(MF wir auch das parkhotel hannover)
			(VC nehmen)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF das)
			(LK ist)
			(PX [01;33m(PX[00m
				(MF
					(APPR mit)
					[01;31m(NX[00m
						(NX das einzelzimmer) [01;33mPX)[00m
						(PX mit einhundert neunzehn mark)[01;31m)[00m))[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK ware)
			(MF das doch das doch annehmbar)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['DM', 'LK', 'MF', 'VC'], 'family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PPER', 'VAFIN', 'ADV', 'PIAT', 'NN', 'APPR', 'ART', 'NN', 'PTKZU', 'VVINF', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ART', 'NE', 'NE', 'VVINF', 'PDS', 'VAFIN', 'APPR', 'ART', 'NN', 'APPR', 'CARD', 'CARD', 'NN', 'VAFIN', 'PDS', 'ADV', 'PDS', 'ADV', 'ADJD'), 'right siblings': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 34), 'span': (11, 19), 'left siblings': ['DM', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM stimmt)
		(SIMPX wir haben wahrscheinlich keine zeit in die sauna zu gehen)
		(DM also)
		(LK konnten)
		(MF wir auch das parkhotel hannover)
		(VC nehmen)
		[01;31m(SIMPX[00m
			(VF das)
			(LK ist)
			(PX [01;33m(PX[00m
				(MF
					(APPR mit)
					[01;31m(NX[00m
						(NX das einzelzimmer) [01;33mPX)[00m
						(PX mit einhundert neunzehn mark)[01;31m)[00m))[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK ware)
			(MF das doch das doch annehmbar)[01;31m)[00m))
Step:PP Attachment
{'subtrees': ['VF', 'LK', 'PX'], 'family': ['DM', 'SIMPX', 'DM', 'LK', 'MF', 'VC', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PPER', 'VAFIN', 'ADV', 'PIAT', 'NN', 'APPR', 'ART', 'NN', 'PTKZU', 'VVINF', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ART', 'NE', 'NE', 'VVINF', 'PDS', 'VAFIN', 'APPR', 'ART', 'NN', 'APPR', 'CARD', 'CARD', 'NN', 'VAFIN', 'PDS', 'ADV', 'PDS', 'ADV', 'ADJD'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 34), 'span': (19, 28), 'left siblings': ['DM', 'SIMPX', 'DM', 'LK', 'MF', 'VC'], 'label': 'SIMPX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM stimmt)
		(SIMPX wir haben wahrscheinlich keine zeit in die sauna zu gehen)
		(DM also)
		(LK konnten)
		(MF wir auch das parkhotel hannover)
		(VC nehmen)
		(VF das)
		(LK ist)
		(PX [01;33m(PX[00m
			(MF
				(APPR mit)
				[01;31m(NX[00m
					(NX das einzelzimmer) [01;33mPX)[00m
					(PX mit einhundert neunzehn mark)[01;31m)[00m))
		[01;31m(SIMPX[00m
			(LK ware)
			(MF das doch das doch annehmbar)[01;31m)[00m))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['APPR', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NN', 'APPR', 'CARD', 'CARD', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (21, 28), 'span': (22, 28), 'left siblings': ['APPR'], 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM stimmt)
		(SIMPX wir haben wahrscheinlich keine zeit in die sauna zu gehen)
		(DM also)
		(LK konnten)
		(MF wir auch das parkhotel hannover)
		(VC nehmen)
		(VF das)
		(LK ist)
		(PX
			(MF
				[01;36m(PX[00m
					(APPR mit)
					(NX das einzelzimmer)[01;36m)[00m
				(PX mit einhundert neunzehn mark)))
		[01;31m(SIMPX[00m
			(LK ware)
			(MF das doch das doch annehmbar)[01;31m)[00m))
Step:UNSET add
{'subtrees': ['APPR', 'NX'], 'family': ['PX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NN'), 'right siblings': [(PX (APPR mit) (NX (ADJX (CARD einhundert) (CARD neunzehn)) (NN mark)))], 'left siblings': [], 'auto preterminal span': (21, 24), 'span': (21, 24), 'parent': 'MF', 'label': 'PX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM stimmt)
		(SIMPX wir haben wahrscheinlich keine zeit in die sauna zu gehen)
		(DM also)
		(LK konnten)
		(MF wir auch das parkhotel hannover)
		(VC nehmen)
		(VF das)
		(LK ist)
		(PX mit das einzelzimmer mit einhundert neunzehn mark)
		[01;31m(SIMPX[00m
			(LK ware)
			(MF das doch das doch annehmbar)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['DM', 'SIMPX', 'DM', 'LK', 'MF', 'VC', 'VF', 'LK', 'PX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PPER', 'VAFIN', 'ADV', 'PIAT', 'NN', 'APPR', 'ART', 'NN', 'PTKZU', 'VVINF', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ART', 'NE', 'NE', 'VVINF', 'PDS', 'VAFIN', 'APPR', 'ART', 'NN', 'APPR', 'CARD', 'CARD', 'NN', 'VAFIN', 'PDS', 'ADV', 'PDS', 'ADV', 'ADJD'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 34), 'span': (28, 34), 'left siblings': ['DM', 'SIMPX', 'DM', 'LK', 'MF', 'VC', 'VF', 'LK', 'PX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP stimmt wir haben wahrscheinlich keine zeit in die sauna zu gehen also konnten wir auch das parkhotel hannover nehmen das ist mit das einzelzimmer mit einhundert neunzehn mark ware das doch das doch annehmbar)

Sentence 460:
5 Initial errors
0 on fringe, 5 iterations
1 Error:UNSET add
1 Error:Single Word Phrase
1 Error:UNSET remove
1 Error:UNSET add
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM okay)
		(SIMPX [01;33m(SIMPX[00m
			(VF parkhotel)
			[01;31m(SIMPX[00m
				(LK sehe)
				(MF ich) [01;33mSIMPX)[00m
				[01;31m(VC[00m
					(PTKVZ ein)[01;31m)[00m[01;31m)[00m
			[01;36m(SIMPX[00m
				(LK ist)
				(MF zu riskant)[01;36m)[00m)
		(SIMPX nehmen wir das marriotthotel)
		(DM also)
		(SIMPX die konnen sich)
		[01;36m(NX[00m
			(ART die)[01;36m)[00m
		(SIMPX die konnen sich da auch in hannover keinen durchhanger erlauben)
		(DM also)
		(SIMPX nehmen wir marriott)))
Step:UNSET add
{'subtrees': ['LK', 'MF'], 'family': ['VF', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'PTKA', 'ADJD'), 'right siblings': [], 'left siblings': [(VF (NX (NE parkhotel))), (SIMPX (LK (VXFIN (VVFIN sehe))) (MF (NX (PPER ich))) (VC (PTKVZ ein)))], 'auto preterminal span': (5, 8), 'span': (5, 8), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM okay)
		(SIMPX [01;33m(SIMPX[00m
			(VF parkhotel)
			[01;31m(SIMPX[00m
				(LK sehe)
				(MF ich) [01;33mSIMPX)[00m
				[01;31m(VC[00m
					(PTKVZ ein)[01;31m)[00m[01;31m)[00m
			(SIMPX ist zu riskant))
		(SIMPX nehmen wir das marriotthotel)
		(DM also)
		(SIMPX die konnen sich)
		[01;36m(NX[00m
			(ART die)[01;36m)[00m
		(SIMPX die konnen sich da auch in hannover keinen durchhanger erlauben)
		(DM also)
		(SIMPX nehmen wir marriott)))
Step:Single Word Phrase
{'subtrees': ['ART'], 'family': ['DM', 'SIMPX', 'SIMPX', 'DM', 'SIMPX', 'NX', 'SIMPX', 'DM', 'SIMPX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ART',), 'right siblings': [(SIMPX (VF (NX (PDS die))) (LK (VXFIN (VMFIN konnen))) (MF (NX (PRF sich)) (ADVX (ADV da)) (ADVX (ADV auch)) (PX (APPR in) (NX (NE hannover))) (NX (PIAT keinen) (NN durchhanger))) (VC (VXINF (VVINF erlauben)))), (DM (ADVX (ADV also))), (SIMPX (LK (VXFIN (VVFIN nehmen))) (MF (NX (PPER wir)) (NX (NE marriott))))], 'left siblings': [(DM (ITJ okay)), (SIMPX (VF (NX (NE parkhotel))) (SIMPX (LK (VXFIN (VVFIN sehe))) (MF (NX (PPER ich))) (VC (PTKVZ ein))) (SIMPX (LK (VXFIN (VAFIN ist))) (MF (ADJX (PTKA zu) (ADJD riskant))))), (SIMPX (LK (VXFIN (VVFIN nehmen))) (MF (NX (PPER wir)) (NX (ART das) (NE marriotthotel)))), (DM (ADVX (ADV also))), (SIMPX (VF (NX (PDS die))) (LK (VXFIN (VMFIN konnen))) (MF (NX (PRF sich))))], 'auto preterminal span': (16, 17), 'span': (16, 17), 'parent': 'TURN', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM okay)
		(SIMPX [01;33m(SIMPX[00m
			(VF parkhotel)
			[01;31m(SIMPX[00m
				(LK sehe)
				(MF ich) [01;33mSIMPX)[00m
				[01;31m(VC[00m
					(PTKVZ ein)[01;31m)[00m[01;31m)[00m
			(SIMPX ist zu riskant))
		(SIMPX nehmen wir das marriotthotel)
		(DM also)
		(SIMPX die konnen sich)
		(NX die)
		(SIMPX die konnen sich da auch in hannover keinen durchhanger erlauben)
		(DM also)
		(SIMPX nehmen wir marriott)))
Step:UNSET remove
{'subtrees': ['LK', 'MF', 'VC'], 'family': ['VF', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NE', 'VVFIN', 'PPER', 'PTKVZ', 'VAFIN', 'PTKA', 'ADJD'), 'right siblings': ['SIMPX'], 'parent': 'SIMPX', 'auto preterminal span': (1, 8), 'span': (2, 5), 'left siblings': ['VF'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(SIMPX
			[01;36m(SIMPX[00m
				(VF parkhotel)
				(LK sehe)
				(MF ich)[01;36m)[00m
			[01;31m(VC[00m
				(PTKVZ ein)[01;31m)[00m
			(SIMPX ist zu riskant))
		(SIMPX nehmen wir das marriotthotel)
		(DM also)
		(SIMPX die konnen sich)
		(NX die)
		(SIMPX die konnen sich da auch in hannover keinen durchhanger erlauben)
		(DM also)
		(SIMPX nehmen wir marriott)))
Step:UNSET add
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['SIMPX', 'VC', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NE', 'VVFIN', 'PPER'), 'right siblings': [(VC (PTKVZ ein)), (SIMPX (LK (VXFIN (VAFIN ist))) (MF (ADJX (PTKA zu) (ADJD riskant))))], 'left siblings': [], 'auto preterminal span': (1, 4), 'span': (1, 4), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM okay)
		(SIMPX
			(SIMPX parkhotel sehe ich)
			[01;31m(VC[00m
				(PTKVZ ein)[01;31m)[00m
			(SIMPX ist zu riskant))
		(SIMPX nehmen wir das marriotthotel)
		(DM also)
		(SIMPX die konnen sich)
		(NX die)
		(SIMPX die konnen sich da auch in hannover keinen durchhanger erlauben)
		(DM also)
		(SIMPX nehmen wir marriott)))
Step:Single Word Phrase
{'subtrees': ['PTKVZ'], 'family': ['SIMPX', 'VC', 'SIMPX'], 'over_word': True, 'over words': True, 'auto preterminals': ('NE', 'VVFIN', 'PPER', 'PTKVZ', 'VAFIN', 'PTKA', 'ADJD'), 'right siblings': ['SIMPX'], 'parent': 'SIMPX', 'auto preterminal span': (1, 8), 'span': (4, 5), 'left siblings': ['SIMPX'], 'label': 'VC', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP okay parkhotel sehe ich ein ist zu riskant nehmen wir das marriotthotel also die konnen sich die die konnen sich da auch in hannover keinen durchhanger erlauben also nehmen wir marriott)

Sentence 461:
0 Initial errors
0 on fringe, 0 iterations

Sentence 462:
6 Initial errors
0 on fringe, 4 iterations
2 Error:Single Word Phrase
2 Error:Clause Attachment
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM na ja)
		(DM gut)
		(SIMPX ich gehe auch nicht so oft ins fitnesstudio)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				[01;36m(KOORD[00m [01;31m(VF[00m
					[01;31m(ADVX[00m
						(ADV aber)[01;31m)[00m[01;31m)[00m[01;36m)[00m
				(LK meine)[01;31m)[00m
			[01;36m(NF[00m
				(SIMPX
					(VF ich)
					(LK wollte)
					(MF es jetzt nur mal)
					(VC sagen)
					(NF falls du da lust dazu hast))[01;36m)[00m[01;36m)[00m
		(DM ja)
		(SIMPX dann konnen wir uns noch uberlegen)
		(SIMPX machen wir abends was)))
Step:Single Word Phrase
{'family': ['KOORD'], 'auto preterminal span': (11, 12), 'span': (11, 12), 'subtrees': ['ADV'], 'parent': 'VF', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'KOORD')}
(TOP
	(TURN
		(DM na ja)
		(DM gut)
		(SIMPX ich gehe auch nicht so oft ins fitnesstudio)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(KOORD
						(ADV aber))[01;31m)[00m
				(LK meine)[01;31m)[00m
			[01;36m(NF[00m
				(SIMPX
					(VF ich)
					(LK wollte)
					(MF es jetzt nur mal)
					(VC sagen)
					(NF falls du da lust dazu hast))[01;36m)[00m[01;36m)[00m
		(DM ja)
		(SIMPX dann konnen wir uns noch uberlegen)
		(SIMPX machen wir abends was)))
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'SIMPX'], 'mover info': [('SIMPX', (13, 26))], 'old_family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'DM', 'SIMPX', 'SIMPX'], 'start left siblings': ['DM', 'DM', 'SIMPX', 'SIMPX'], 'auto preterminals': ('ITJ', 'PTKANT', 'ITJ', 'PPER', 'VVFIN', 'ADV', 'PTKNEG', 'ADV', 'ADV', 'APPRART', 'NN', 'ADV', 'VVFIN', 'PPER', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'VVINF', 'KOUS', 'PPER', 'ADV', 'NN', 'PROP', 'VAFIN', 'PTKANT', 'ADV', 'VMFIN', 'PPER', 'PRF', 'ADV', 'VVINF', 'VVFIN', 'PPER', 'ADV', 'PIS'), 'start right siblings': ['DM', 'SIMPX', 'SIMPX'], 'end left siblings': ['VF', 'LK'], 'auto preterminal span': (0, 37), 'movers': ['SIMPX'], 'old_parent': 'TURN', 'end right siblings': [], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM na ja)
		(DM gut)
		(SIMPX ich gehe auch nicht so oft ins fitnesstudio)
		(SIMPX
			[01;31m(VF[00m
				(KOORD
					(ADV aber))[01;31m)[00m
			(LK meine)
			[01;36m(NF[00m
				(SIMPX
					(VF ich)
					(LK wollte)
					(MF es jetzt nur mal)
					(VC sagen)
					(NF falls du da lust dazu hast))[01;36m)[00m)
		(DM ja)
		(SIMPX dann konnen wir uns noch uberlegen)
		(SIMPX machen wir abends was)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['VF', 'LK', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'VVINF', 'KOUS', 'PPER', 'ADV', 'NN', 'PROP', 'VAFIN'), 'right siblings': [], 'left siblings': [(VF (KOORD (ADV aber))), (LK (VXFIN (VVFIN meine)))], 'auto preterminal span': (13, 26), 'span': (13, 26), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM na ja)
		(DM gut)
		(SIMPX ich gehe auch nicht so oft ins fitnesstudio)
		(SIMPX
			[01;31m(VF[00m
				(KOORD
					(ADV aber))[01;31m)[00m
			(LK meine)
			(NF ich wollte es jetzt nur mal sagen falls du da lust dazu hast))
		(DM ja)
		(SIMPX dann konnen wir uns noch uberlegen)
		(SIMPX machen wir abends was)))
Step:Unary
{'subtrees': ['KOORD'], 'family': ['VF', 'LK', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'VVINF', 'KOUS', 'PPER', 'ADV', 'NN', 'PROP', 'VAFIN'), 'right siblings': ['LK', 'NF'], 'parent': 'SIMPX', 'auto preterminal span': (11, 26), 'span': (11, 12), 'left siblings': [], 'label': 'VF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP na ja gut ich gehe auch nicht so oft ins fitnesstudio aber meine ich wollte es jetzt nur mal sagen falls du da lust dazu hast ja dann konnen wir uns noch uberlegen machen wir abends was)

Sentence 463:
8 Initial errors
0 on fringe, 5 iterations
3 Error:Modifier Attachment
2 Error:Modifier Attachment
1 Error:Single Word Phrase
1 Error:Single Word Phrase
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;36m(ADVX[00m [01;31m(DM[00m
			(ADVX immer)
			[01;36m(DM[00m [01;31m(ADVX[00m
				(ADV doch)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;36m)[00m
		(NX kino theater restaurant)
		(DM also)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(NX
						(NN theater))[01;31m)[00m
				(LK denke)
				(MF ich)[01;31m)[00m
			[01;36m(NX[00m
				(KOUS das)[01;36m)[00m
			(ADVX da)[01;36m)[00m
		(SIMPX da kriegen wir keine karten mehr)
		(SIMPX und auserdem mussen wir uns kummern)))
Step:Modifier Attachment
{'new_parent': 'TURN', 'new_family': ['ADVX', 'DM', 'NX', 'DM', 'SIMPX', 'KOUS', 'ADVX', 'SIMPX', 'SIMPX'], 'mover info': [('ADVX', (0, 1))], 'old_family': ['ADVX', 'ADVX'], 'start left siblings': [], 'auto preterminals': ('ADV', 'ADV', 'NN', 'NN', 'NN', 'ADV', 'NN', 'VVFIN', 'PPER', 'KOUS', 'ADV', 'ADV', 'VVFIN', 'PPER', 'PIAT', 'NN', 'ADV', 'KON', 'PROP', 'VMFIN', 'PPER', 'PRF', 'VVINF'), 'start right siblings': ['ADVX'], 'end left siblings': [], 'auto preterminal span': (0, 23), 'adding node already present': False, 'movers': ['ADVX'], 'old_parent': 'DM', 'POS confusion': ('ADV', 'ADV'), 'added and moved': True, 'end right siblings': ['DM', 'NX', 'DM', 'SIMPX', 'KOUS', 'ADVX', 'SIMPX', 'SIMPX'], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(ADVX
			(ADVX immer)
			(DM
				[01;31m(ADVX[00m
					(ADV doch)[01;31m)[00m))
		(NX kino theater restaurant)
		(DM also)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(NX
						(NN theater))[01;31m)[00m
				(LK denke)
				(MF ich)[01;31m)[00m
			[01;36m(NX[00m
				(KOUS das)[01;36m)[00m
			(ADVX da)[01;36m)[00m
		(SIMPX da kriegen wir keine karten mehr)
		(SIMPX und auserdem mussen wir uns kummern)))
Step:Modifier Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'KOUS', 'ADVX'], 'mover info': [('KOUS', (9, 10)), ('ADVX', (10, 11))], 'old_family': ['ADVX', 'NX', 'DM', 'SIMPX', 'KOUS', 'ADVX', 'SIMPX', 'SIMPX'], 'start left siblings': ['ADVX', 'NX', 'DM', 'SIMPX'], 'auto preterminals': ('ADV', 'ADV', 'NN', 'NN', 'NN', 'ADV', 'NN', 'VVFIN', 'PPER', 'KOUS', 'ADV', 'ADV', 'VVFIN', 'PPER', 'PIAT', 'NN', 'ADV', 'KON', 'PROP', 'VMFIN', 'PPER', 'PRF', 'VVINF'), 'start right siblings': ['SIMPX', 'SIMPX'], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (0, 23), 'movers': ['KOUS', 'ADVX'], 'old_parent': 'TURN', 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(ADVX
			(ADVX immer)
			(DM
				[01;31m(ADVX[00m
					(ADV doch)[01;31m)[00m))
		(NX kino theater restaurant)
		(DM also)
		(SIMPX
			[01;31m(VF[00m
				(NX
					(NN theater))[01;31m)[00m
			(LK denke)
			(MF ich)
			[01;36m(NX[00m
				(KOUS das)[01;36m)[00m
			(ADVX da))
		(SIMPX da kriegen wir keine karten mehr)
		(SIMPX und auserdem mussen wir uns kummern)))
Step:Single Word Phrase
{'subtrees': ['KOUS'], 'family': ['VF', 'LK', 'MF', 'NX', 'ADVX'], 'over_word': True, 'over words': True, 'auto preterminals': ('KOUS',), 'right siblings': [(ADVX (ADV da))], 'left siblings': [(VF (NX (NN theater))), (LK (VXFIN (VVFIN denke))), (MF (NX (PPER ich)))], 'auto preterminal span': (9, 10), 'span': (9, 10), 'parent': 'SIMPX', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(ADVX
			(ADVX immer)
			(DM
				[01;31m(ADVX[00m
					(ADV doch)[01;31m)[00m))
		(NX kino theater restaurant)
		(DM also)
		(SIMPX
			[01;31m(VF[00m
				(NX
					(NN theater))[01;31m)[00m
			(LK denke)
			(MF ich)
			(NX das)
			(ADVX da))
		(SIMPX da kriegen wir keine karten mehr)
		(SIMPX und auserdem mussen wir uns kummern)))
Step:Single Word Phrase
{'subtrees': ['ADV'], 'family': ['ADVX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADV',), 'right siblings': [], 'parent': 'DM', 'auto preterminal span': (1, 2), 'span': (1, 2), 'left siblings': [], 'label': 'ADVX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(ADVX immer doch)
		(NX kino theater restaurant)
		(DM also)
		(SIMPX
			[01;31m(VF[00m
				(NX
					(NN theater))[01;31m)[00m
			(LK denke)
			(MF ich)
			(NX das)
			(ADVX da))
		(SIMPX da kriegen wir keine karten mehr)
		(SIMPX und auserdem mussen wir uns kummern)))
Step:Unary
{'subtrees': ['NX'], 'family': ['VF', 'LK', 'MF', 'NX', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'VVFIN', 'PPER', 'KOUS', 'ADV'), 'right siblings': ['LK', 'MF', 'NX', 'ADVX'], 'parent': 'SIMPX', 'auto preterminal span': (6, 11), 'span': (6, 7), 'left siblings': [], 'label': 'VF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP immer doch kino theater restaurant also theater denke ich das da da kriegen wir keine karten mehr und auserdem mussen wir uns kummern)

Sentence 464:
9 Initial errors
0 on fringe, 7 iterations
2 Error:Single Word Phrase
2 Error:PP Attachment
1 Error:Unary
1 Error:Unary
1 Error:UNSET add
1 Error:UNSET remove
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM okay)
		(DM gut)
		(DM klar)
		(DM ja)
		(DM nee)
		(ADVX dann)
		(NX das)
		(NX das)
		(SIMPX
			(VF das)
			(LK ware)
			[01;31m(MF[00m
				[01;36m(MF[00m
					(NX es)
					[01;36m(ADJX[00m [01;31m(ADVX[00m
						(ADV vorerst)[01;31m)[00m[01;36m)[00m[01;36m)[00m
				[01;36m(NF[00m
					(PX
						(APPR von)
						(NX mir)
						(APZR aus))[01;36m)[00m[01;31m)[00m)
		[01;36m(SIMPX[00m
			[01;31m(DM[00m
				[01;36m(VF[00m
					(ADVX
						(ADV dann))[01;36m)[00m
				(PTKANT danke)[01;31m)[00m
			[01;31m(DM[00m
				(NX
					(NE peter))[01;31m)[00m[01;36m)[00m
		(SIMPX und wir sehen uns)))
Step:Single Word Phrase
{'family': ['NX', 'ADJX', 'PX'], 'auto preterminal span': (12, 13), 'span': (12, 13), 'subtrees': ['ADV'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'ADJX')}
(TOP
	(TURN
		(DM ja)
		(DM okay)
		(DM gut)
		(DM klar)
		(DM ja)
		(DM nee)
		(ADVX dann)
		(NX das)
		(NX das)
		(SIMPX
			(VF das)
			(LK ware)
			[01;31m(MF[00m
				[01;36m(MF[00m
					(NX es)
					(ADJX vorerst)[01;36m)[00m
				[01;36m(NF[00m
					(PX
						(APPR von)
						(NX mir)
						(APZR aus))[01;36m)[00m[01;31m)[00m)
		[01;36m(SIMPX[00m
			[01;31m(DM[00m
				[01;36m(VF[00m
					(ADVX
						(ADV dann))[01;36m)[00m
				(PTKANT danke)[01;31m)[00m
			[01;31m(DM[00m
				(NX
					(NE peter))[01;31m)[00m[01;36m)[00m
		(SIMPX und wir sehen uns)))
Step:PP Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'PX'], 'mover info': [('PX', (13, 16))], 'old_family': ['NX', 'ADJX', 'PX'], 'start left siblings': ['NX', 'ADJX'], 'auto preterminals': ('PDS', 'VAFIN', 'PPER', 'ADV', 'APPR', 'PPER', 'APZR'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (9, 16), 'movers': ['PX'], 'old_parent': 'MF', 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(DM okay)
		(DM gut)
		(DM klar)
		(DM ja)
		(DM nee)
		(ADVX dann)
		(NX das)
		(NX das)
		(SIMPX
			(VF das)
			(LK ware)
			(MF es vorerst)
			[01;36m(NF[00m
				(PX
					(APPR von)
					(NX mir)
					(APZR aus))[01;36m)[00m)
		[01;36m(SIMPX[00m
			[01;31m(DM[00m
				[01;36m(VF[00m
					(ADVX
						(ADV dann))[01;36m)[00m
				(PTKANT danke)[01;31m)[00m
			[01;31m(DM[00m
				(NX
					(NE peter))[01;31m)[00m[01;36m)[00m
		(SIMPX und wir sehen uns)))
Step:Unary
{'subtrees': ['PX'], 'family': ['VF', 'LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'PPER', 'APZR'), 'right siblings': [], 'left siblings': [(VF (NX (PDS das))), (LK (VXFIN (VAFIN ware))), (MF (NX (PPER es)) (ADJX (ADV vorerst)))], 'auto preterminal span': (13, 16), 'span': (13, 16), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM okay)
		(DM gut)
		(DM klar)
		(DM ja)
		(DM nee)
		(ADVX dann)
		(NX das)
		(NX das)
		(SIMPX das ware es vorerst von mir aus)
		[01;36m(SIMPX[00m
			[01;31m(DM[00m
				[01;36m(VF[00m
					(ADVX
						(ADV dann))[01;36m)[00m
				(PTKANT danke)[01;31m)[00m
			[01;31m(DM[00m
				(NX
					(NE peter))[01;31m)[00m[01;36m)[00m
		(SIMPX und wir sehen uns)))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['VF', 'PTKANT'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV',), 'right siblings': [(PTKANT danke)], 'left siblings': [], 'auto preterminal span': (16, 17), 'span': (16, 17), 'parent': 'DM', 'label': 'VF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM okay)
		(DM gut)
		(DM klar)
		(DM ja)
		(DM nee)
		(ADVX dann)
		(NX das)
		(NX das)
		(SIMPX das ware es vorerst von mir aus)
		[01;36m(SIMPX[00m
			[01;31m(DM[00m
				(VF dann)
				(PTKANT danke)[01;31m)[00m
			[01;31m(DM[00m
				(NX
					(NE peter))[01;31m)[00m[01;36m)[00m
		(SIMPX und wir sehen uns)))
Step:UNSET add
{'subtrees': ['DM', 'DM'], 'family': ['DM', 'DM', 'DM', 'DM', 'DM', 'DM', 'ADVX', 'NX', 'NX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PTKANT', 'NE'), 'right siblings': [(SIMPX (KOORD (KON und)) (VF (NX (PPER wir))) (LK (VXFIN (VVFIN sehen))) (MF (NX (PRF uns))))], 'left siblings': [(DM (PTKANT ja)), (DM (ITJ okay)), (DM (ITJ gut)), (DM (ITJ klar)), (DM (PTKANT ja)), (DM (PTKANT nee)), (ADVX (ADV dann)), (NX (PDS das)), (NX (PDS das)), (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VAFIN ware))) (MF (NX (PPER es)) (ADJX (ADV vorerst))) (NF (PX (APPR von) (NX (PPER mir)) (APZR aus))))], 'auto preterminal span': (16, 19), 'span': (16, 19), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM okay)
		(DM gut)
		(DM klar)
		(DM ja)
		(DM nee)
		(ADVX dann)
		(NX das)
		(NX das)
		(SIMPX das ware es vorerst von mir aus)
		(SIMPX
			[01;31m(DM[00m
				(VF dann)
				(PTKANT danke)[01;31m)[00m
			[01;31m(DM[00m
				(NX
					(NE peter))[01;31m)[00m)
		(SIMPX und wir sehen uns)))
Step:UNSET remove
{'subtrees': ['VF', 'PTKANT'], 'family': ['DM', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PTKANT', 'NE'), 'right siblings': ['DM'], 'parent': 'SIMPX', 'auto preterminal span': (16, 19), 'span': (16, 18), 'left siblings': [], 'label': 'DM', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM okay)
		(DM gut)
		(DM klar)
		(DM ja)
		(DM nee)
		(ADVX dann)
		(NX das)
		(NX das)
		(SIMPX das ware es vorerst von mir aus)
		(SIMPX
			(VF dann)
			(PTKANT danke)
			[01;31m(DM[00m
				(NX
					(NE peter))[01;31m)[00m)
		(SIMPX und wir sehen uns)))
Step:Unary
{'subtrees': ['NX'], 'family': ['VF', 'PTKANT', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PTKANT', 'NE'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (16, 19), 'span': (18, 19), 'left siblings': ['VF', 'PTKANT'], 'label': 'DM', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja okay gut klar ja nee dann das das das ware es vorerst von mir aus dann danke peter und wir sehen uns)

Sentence 465:
10 Initial errors
0 on fringe, 6 iterations
3 Error:VP Attachment
2 Error:Single Word Phrase
2 Error:Single Word Phrase
1 Error:Unary
1 Error:UNSET remove
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM hallo)
		(DM reinhard)
		[01;31m(SIMPX[00m
			[01;36m(DM[00m [01;31m(LK[00m
				[01;31m(VXFIN[00m
					(VVFIN danke)[01;31m)[00m[01;31m)[00m[01;36m)[00m
			[01;31m(NF[00m
				(SIMPX
					(C das)
					[01;33m(MF[00m (MF du so kurzfristig hier)
					[01;31m(VC[00m
						[01;36m(ADVX[00m [01;31m(VXINF[00m
							(VVPP runtergeschaut)[01;31m)[00m [01;33mMF)[00m[01;36m)[00m
						[01;36m(VC[00m
							(VXFIN
								(VAFIN hast))[01;36m)[00m[01;31m)[00m)[01;31m)[00m[01;31m)[00m
		(SIMPX wir mussen ja noch ein termin vereinbaren)))
Step:VP Attachment
{'new_parent': 'SIMPX', 'new_family': ['C', 'MF', 'VXINF', 'VC'], 'mover info': [('VXINF', (8, 9))], 'old_family': ['VXINF', 'VXFIN'], 'start left siblings': [], 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'ADJD', 'ADV', 'VVPP', 'VAFIN'), 'start right siblings': ['VXFIN'], 'end left siblings': ['C', 'MF'], 'auto preterminal span': (3, 10), 'adding node already present': False, 'movers': ['VXINF'], 'old_parent': 'VC', 'POS confusion': ('VVPP', 'VVPP'), 'added and moved': True, 'end right siblings': ['VC'], 'classified_type': 'VP Attachment', 'type': 'move', 'added label': 'ADVX'}
(TOP
	(TURN
		(DM hallo)
		(DM reinhard)
		[01;31m(SIMPX[00m
			[01;36m(DM[00m [01;31m(LK[00m
				[01;31m(VXFIN[00m
					(VVFIN danke)[01;31m)[00m[01;31m)[00m[01;36m)[00m
			[01;31m(NF[00m
				(SIMPX
					(C das)
					(MF
						(MF du so kurzfristig hier)
						[01;36m(ADVX[00m [01;31m(VXINF[00m
							(VVPP runtergeschaut)[01;31m)[00m[01;36m)[00m)
					(VC hast))[01;31m)[00m[01;31m)[00m
		(SIMPX wir mussen ja noch ein termin vereinbaren)))
Step:Single Word Phrase
{'family': ['DM'], 'auto preterminal span': (2, 3), 'span': (2, 3), 'subtrees': ['VVFIN'], 'parent': 'LK', 'over_word': True, 'auto preterminals': ('VVFIN',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VXFIN', 'DM')}
(TOP
	(TURN
		(DM hallo)
		(DM reinhard)
		[01;31m(SIMPX[00m
			[01;31m(LK[00m
				(DM
					(VVFIN danke))[01;31m)[00m
			[01;31m(NF[00m
				(SIMPX
					(C das)
					(MF
						(MF du so kurzfristig hier)
						[01;36m(ADVX[00m [01;31m(VXINF[00m
							(VVPP runtergeschaut)[01;31m)[00m[01;36m)[00m)
					(VC hast))[01;31m)[00m[01;31m)[00m
		(SIMPX wir mussen ja noch ein termin vereinbaren)))
Step:Single Word Phrase
{'family': ['MF', 'ADVX'], 'auto preterminal span': (8, 9), 'span': (8, 9), 'subtrees': ['VVPP'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('VVPP',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VXINF', 'ADVX')}
(TOP
	(TURN
		(DM hallo)
		(DM reinhard)
		[01;31m(SIMPX[00m
			[01;31m(LK[00m
				(DM
					(VVFIN danke))[01;31m)[00m
			[01;31m(NF[00m
				(SIMPX
					(C das)
					(MF du so kurzfristig hier runtergeschaut)
					(VC hast))[01;31m)[00m[01;31m)[00m
		(SIMPX wir mussen ja noch ein termin vereinbaren)))
Step:Unary
{'subtrees': ['DM'], 'family': ['LK', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'KOUS', 'PPER', 'ADV', 'ADJD', 'ADV', 'VVPP', 'VAFIN'), 'right siblings': ['NF'], 'parent': 'SIMPX', 'auto preterminal span': (2, 10), 'span': (2, 3), 'left siblings': [], 'label': 'LK', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM hallo)
		(DM reinhard)
		[01;31m(SIMPX[00m
			(DM danke)
			[01;31m(NF[00m
				(SIMPX
					(C das)
					(MF du so kurzfristig hier runtergeschaut)
					(VC hast))[01;31m)[00m[01;31m)[00m
		(SIMPX wir mussen ja noch ein termin vereinbaren)))
Step:UNSET remove
{'subtrees': ['DM', 'NF'], 'family': ['DM', 'DM', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'NE', 'VVFIN', 'KOUS', 'PPER', 'ADV', 'ADJD', 'ADV', 'VVPP', 'VAFIN', 'PPER', 'VMFIN', 'ADV', 'ADV', 'ART', 'NN', 'VVINF'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 17), 'span': (2, 10), 'left siblings': ['DM', 'DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM hallo)
		(DM reinhard)
		(DM danke)
		[01;31m(NF[00m
			(SIMPX
				(C das)
				(MF du so kurzfristig hier runtergeschaut)
				(VC hast))[01;31m)[00m
		(SIMPX wir mussen ja noch ein termin vereinbaren)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['DM', 'DM', 'DM', 'NF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'NE', 'VVFIN', 'KOUS', 'PPER', 'ADV', 'ADJD', 'ADV', 'VVPP', 'VAFIN', 'PPER', 'VMFIN', 'ADV', 'ADV', 'ART', 'NN', 'VVINF'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 17), 'span': (3, 10), 'left siblings': ['DM', 'DM', 'DM'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP hallo reinhard danke das du so kurzfristig hier runtergeschaut hast wir mussen ja noch ein termin vereinbaren)

Sentence 466:
6 Initial errors
0 on fringe, 4 iterations
3 Error:NP Attachment
1 Error:UNSET add
1 Error:UNSET remove
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;36m(SIMPX[00m
			(SIMPX hannover ist das ziel)
			(NX anderthalb tage)[01;36m)[00m
		[01;31m(SIMPX[00m
			(VF in den nachsten drei monaten)
			(LK gibt)
			[01;31m(MF[00m [01;33m(MF[00m
				(NX es)
				(ADVX ja)
				(ADVX ofter)
				[01;33m(NX[00m (NX diese ganzen feiertage)[01;31m)[00m[01;31m)[00m
		[01;31m(NX[00m
			(NX ostern)
			(NX pfingsten)
			(KON und)
			(ADVX so weiter)[01;31m)[00m [01;33mNX) MF)[00m
		(SIMPX mal kucken wie wir da in die gange kommen)
		(SIMPX wie schaut es denn bei dir aus)))
Step:NP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'ADVX', 'ADVX', 'NX', 'NX'], 'mover info': [('NX', (18, 23))], 'old_family': ['SIMPX', 'NX', 'SIMPX', 'NX', 'SIMPX', 'SIMPX'], 'start left siblings': ['SIMPX', 'NX', 'SIMPX'], 'auto preterminals': ('NE', 'VAFIN', 'ART', 'NN', 'CARD', 'NN', 'APPR', 'ART', 'ADJA', 'CARD', 'NN', 'VVFIN', 'PPER', 'ADV', 'ADV', 'PDAT', 'ADJA', 'NN', 'NE', 'NE', 'KON', 'ADV', 'ADV', 'ADV', 'VVINF', 'KOUS', 'PPER', 'ADV', 'APPR', 'ART', 'NN', 'VVFIN', 'PWAV', 'VVFIN', 'PPER', 'ADV', 'APPR', 'PPER', 'PTKVZ'), 'start right siblings': ['SIMPX', 'SIMPX'], 'end left siblings': ['NX', 'ADVX', 'ADVX', 'NX'], 'auto preterminal span': (0, 39), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'TURN', 'added and moved': True, 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		[01;36m(SIMPX[00m
			(SIMPX hannover ist das ziel)
			(NX anderthalb tage)[01;36m)[00m
		[01;31m(SIMPX[00m
			(VF in den nachsten drei monaten)
			(LK gibt)
			(MF
				(NX es)
				(ADVX ja)
				(ADVX ofter)
				(NX
					(NX diese ganzen feiertage)
					[01;31m(NX[00m
						(NX ostern)
						(NX pfingsten)
						(KON und)
						(ADVX so weiter)[01;31m)[00m))[01;31m)[00m
		(SIMPX mal kucken wie wir da in die gange kommen)
		(SIMPX wie schaut es denn bei dir aus)))
Step:UNSET add
{'subtrees': ['SIMPX', 'NX'], 'family': ['SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NE', 'VAFIN', 'ART', 'NN', 'CARD', 'NN'), 'right siblings': [(SIMPX (VF (PX (APPR in) (NX (ART den) (ADJX (ADJA nachsten)) (ADJX (CARD drei)) (NN monaten)))) (LK (VXFIN (VVFIN gibt))) (MF (NX (PPER es)) (ADVX (ADV ja)) (ADVX (ADV ofter)) (NX (NX (PDAT diese) (ADJX (ADJA ganzen)) (NN feiertage)) (NX (NX (NE ostern)) (NX (NE pfingsten)) (KON und) (ADVX (ADVX (ADV so)) (ADV weiter)))))), (SIMPX (MF (ADVX (ADV mal))) (VC (VXINF (VVINF kucken))) (NF (SIMPX (C (KOUS wie)) (MF (NX (PPER wir)) (ADVX (ADV da)) (PX (APPR in) (NX (ART die) (NN gange)))) (VC (VXFIN (VVFIN kommen)))))), (SIMPX (VF (ADJX (PWAV wie))) (LK (VXFIN (VVFIN schaut))) (MF (NX (PPER es)) (ADVX (ADV denn)) (PX (APPR bei) (NX (PPER dir)))) (VC (PTKVZ aus)))], 'left siblings': [], 'auto preterminal span': (0, 6), 'span': (0, 6), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SIMPX hannover ist das ziel anderthalb tage)
		[01;31m(SIMPX[00m
			(VF in den nachsten drei monaten)
			(LK gibt)
			(MF
				(NX es)
				(ADVX ja)
				(ADVX ofter)
				(NX
					(NX diese ganzen feiertage)
					[01;31m(NX[00m
						(NX ostern)
						(NX pfingsten)
						(KON und)
						(ADVX so weiter)[01;31m)[00m))[01;31m)[00m
		(SIMPX mal kucken wie wir da in die gange kommen)
		(SIMPX wie schaut es denn bei dir aus)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NE', 'VAFIN', 'ART', 'NN', 'CARD', 'NN', 'APPR', 'ART', 'ADJA', 'CARD', 'NN', 'VVFIN', 'PPER', 'ADV', 'ADV', 'PDAT', 'ADJA', 'NN', 'NE', 'NE', 'KON', 'ADV', 'ADV', 'ADV', 'VVINF', 'KOUS', 'PPER', 'ADV', 'APPR', 'ART', 'NN', 'VVFIN', 'PWAV', 'VVFIN', 'PPER', 'ADV', 'APPR', 'PPER', 'PTKVZ'), 'right siblings': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 39), 'span': (6, 23), 'left siblings': ['SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX hannover ist das ziel anderthalb tage)
		(VF in den nachsten drei monaten)
		(LK gibt)
		(MF
			(NX es)
			(ADVX ja)
			(ADVX ofter)
			(NX
				(NX diese ganzen feiertage)
				[01;31m(NX[00m
					(NX ostern)
					(NX pfingsten)
					(KON und)
					(ADVX so weiter)[01;31m)[00m))
		(SIMPX mal kucken wie wir da in die gange kommen)
		(SIMPX wie schaut es denn bei dir aus)))
Step:Modifier Attachment
{'subtrees': ['NX', 'NX', 'KON', 'ADVX'], 'family': ['NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDAT', 'ADJA', 'NN', 'NE', 'NE', 'KON', 'ADV', 'ADV'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (15, 23), 'span': (18, 23), 'left siblings': ['NX'], 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP hannover ist das ziel anderthalb tage in den nachsten drei monaten gibt es ja ofter diese ganzen feiertage ostern pfingsten und so weiter mal kucken wie wir da in die gange kommen wie schaut es denn bei dir aus)

Sentence 467:
0 Initial errors
0 on fringe, 0 iterations

Sentence 468:
0 Initial errors
0 on fringe, 0 iterations

Sentence 469:
5 Initial errors
0 on fringe, 4 iterations
2 Error:NP Attachment
1 Error:Single Word Phrase
1 Error:Single Word Phrase
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX wurde ich auch vorschlagen das wir montag fruh losfahren)
		(ADJX vielleicht nicht allzu fruh)
		(SIMPX ab funf uhr drei konnte man abfahren)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(KOORD aber)
				(LK ist)
				(MF
					(ADVX nicht)
					(NX
						[01;31m(NX[00m
							(NN ziel)[01;31m)[00m
						(NX der sache)))[01;31m)[00m
			[01;31m(NX[00m
				(KON sondern)
				(ADVX lieber)
				(NX
					(ADVX so)
					[01;36m(NX[00m
						(CARD sieben)[01;36m)[00m)[01;31m)[00m[01;36m)[00m))
Step:NP Attachment
{'new_parent': 'SIMPX', 'new_family': ['KOORD', 'LK', 'MF', 'NX'], 'mover info': [('NX', (26, 30))], 'old_family': ['SIMPX', 'ADJX', 'SIMPX', 'SIMPX', 'NX'], 'start left siblings': ['SIMPX', 'ADJX', 'SIMPX', 'SIMPX'], 'auto preterminals': ('VAFIN', 'PPER', 'ADV', 'VVINF', 'KOUS', 'PPER', 'NN', 'ADV', 'VVFIN', 'ADV', 'PTKNEG', 'PTKA', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'VMFIN', 'PIS', 'VVINF', 'KON', 'VAFIN', 'PTKNEG', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ADV', 'CARD'), 'start right siblings': [], 'end left siblings': ['KOORD', 'LK', 'MF'], 'auto preterminal span': (0, 30), 'movers': ['NX'], 'old_parent': 'TURN', 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SIMPX wurde ich auch vorschlagen das wir montag fruh losfahren)
		(ADJX vielleicht nicht allzu fruh)
		(SIMPX ab funf uhr drei konnte man abfahren)
		(SIMPX
			(KOORD aber)
			(LK ist)
			(MF
				(ADVX nicht)
				(NX
					[01;31m(NX[00m
						(NN ziel)[01;31m)[00m
					(NX der sache)))
			[01;31m(NX[00m
				(KON sondern)
				(ADVX lieber)
				(NX
					(ADVX so)
					[01;36m(NX[00m
						(CARD sieben)[01;36m)[00m)[01;31m)[00m)))
Step:Single Word Phrase
{'subtrees': ['CARD'], 'family': ['ADVX', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('CARD',), 'right siblings': [], 'left siblings': [(ADVX (ADV so))], 'auto preterminal span': (29, 30), 'span': (29, 30), 'parent': 'NX', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SIMPX wurde ich auch vorschlagen das wir montag fruh losfahren)
		(ADJX vielleicht nicht allzu fruh)
		(SIMPX ab funf uhr drei konnte man abfahren)
		(SIMPX
			(KOORD aber)
			(LK ist)
			(MF
				(ADVX nicht)
				(NX
					[01;31m(NX[00m
						(NN ziel)[01;31m)[00m
					(NX der sache)))
			[01;31m(NX[00m
				(KON sondern)
				(ADVX lieber)
				(NX so sieben)[01;31m)[00m)))
Step:Single Word Phrase
{'subtrees': ['NN'], 'family': ['NX', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('NN', 'ART', 'NN'), 'right siblings': ['NX'], 'parent': 'NX', 'auto preterminal span': (23, 26), 'span': (23, 24), 'left siblings': [], 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX wurde ich auch vorschlagen das wir montag fruh losfahren)
		(ADJX vielleicht nicht allzu fruh)
		(SIMPX ab funf uhr drei konnte man abfahren)
		(SIMPX
			(KOORD aber)
			(LK ist)
			(MF nicht ziel der sache)
			[01;31m(NX[00m
				(KON sondern)
				(ADVX lieber)
				(NX so sieben)[01;31m)[00m)))
Step:Modifier Attachment
{'subtrees': ['KON', 'ADVX', 'NX'], 'family': ['KOORD', 'LK', 'MF', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'VAFIN', 'PTKNEG', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ADV', 'CARD'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (20, 30), 'span': (26, 30), 'left siblings': ['KOORD', 'LK', 'MF'], 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP wurde ich auch vorschlagen das wir montag fruh losfahren vielleicht nicht allzu fruh ab funf uhr drei konnte man abfahren aber ist nicht ziel der sache sondern lieber so sieben)

Sentence 470:
0 Initial errors
0 on fringe, 0 iterations

Sentence 471:
17 Initial errors
0 on fringe, 14 iterations
2 Error:Different label
2 Error:Single Word Phrase
2 Error:PP Attachment
1 Error:PP Attachment
1 Error:Single Word Phrase
1 Error:UNSET add
1 Error:UNSET remove
1 Error:UNSET add
1 Error:UNSET remove
1 Error:PP Attachment
1 Error:Clause Attachment
1 Error:Unary
1 Error:PP Attachment
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM also)
		(SIMPX es ist vollkommen wahlfrei)
		(SIMPX
			(VF fluge)
			(LK gibt)
			[01;36m(MF[00m
				(MF es immer am abend)
				[01;36m(PX[00m [01;31m(NF[00m
					(ADVX allerdings)
					(PX erst ab achtzehn uhr funfunddreisig)[01;31m)[00m[01;36m)[00m[01;36m)[00m)
		(SIMPX
			(KOORD und)
			(VF zuge)
			(LK gehen)
			(MF [01;33m(MF[00m
				(ADVX sowieso)
				[01;31m(PX[00m
					(NX den ganzen tag) [01;33mMF)[00m
					(APPO uber)[01;31m)[00m))
		[01;31m(SIMPX[00m
			(VF wir)
			[01;31m(FKOORD[00m
				[01;31m(LKMN[00m
					(LK waren)
					[01;31m(MF[00m
						[01;36m(MF[00m
							(ADVX naturlich)
							(PX mit dem flugzeug)
							(ADJX etwas flexibler)[01;36m)[00m
						[01;31m(PX[00m
							(PX zum abend)
							[01;36m(VC[00m [01;31m(ADVX[00m
								(ADV hin)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
					[01;33m(SIMPX (NF[00m (NF weil wir den letzten flug sogar um neun uhr noch nehmen konnten)[01;31m)[00m
				[01;36m(SIMPX[00m
					[01;36m(KOORD[00m
						(KON und)[01;36m)[00m
					(LKM waren dann trotzdem noch vor elf zu hause)[01;36m)[00m[01;31m)[00m[01;31m)[00m)) [01;33mNF) SIMPX)[00m
Step:Different label
{'family': ['VF', 'LK', 'MF', 'PX'], 'auto preterminal span': (11, 17), 'span': (11, 17), 'subtrees': ['ADVX', 'PX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('ADV', 'ADV', 'APPR', 'CARD', 'NN', 'CARD'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('NF', 'PX')}
(TOP
	(TURN
		(DM also)
		(SIMPX es ist vollkommen wahlfrei)
		(SIMPX
			(VF fluge)
			(LK gibt)
			[01;36m(MF[00m
				(MF es immer am abend)
				(PX allerdings erst ab achtzehn uhr funfunddreisig)[01;36m)[00m)
		(SIMPX
			(KOORD und)
			(VF zuge)
			(LK gehen)
			(MF [01;33m(MF[00m
				(ADVX sowieso)
				[01;31m(PX[00m
					(NX den ganzen tag) [01;33mMF)[00m
					(APPO uber)[01;31m)[00m))
		[01;31m(SIMPX[00m
			(VF wir)
			[01;31m(FKOORD[00m
				[01;31m(LKMN[00m
					(LK waren)
					[01;31m(MF[00m
						[01;36m(MF[00m
							(ADVX naturlich)
							(PX mit dem flugzeug)
							(ADJX etwas flexibler)[01;36m)[00m
						[01;31m(PX[00m
							(PX zum abend)
							[01;36m(VC[00m [01;31m(ADVX[00m
								(ADV hin)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
					[01;33m(SIMPX (NF[00m (NF weil wir den letzten flug sogar um neun uhr noch nehmen konnten)[01;31m)[00m
				[01;36m(SIMPX[00m
					[01;36m(KOORD[00m
						(KON und)[01;36m)[00m
					(LKM waren dann trotzdem noch vor elf zu hause)[01;36m)[00m[01;31m)[00m[01;31m)[00m)) [01;33mNF) SIMPX)[00m
Step:Single Word Phrase
{'family': ['PX', 'VC'], 'auto preterminal span': (35, 36), 'span': (35, 36), 'subtrees': ['ADV'], 'parent': 'PX', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'VC')}
(TOP
	(TURN
		(DM also)
		(SIMPX es ist vollkommen wahlfrei)
		(SIMPX
			(VF fluge)
			(LK gibt)
			[01;36m(MF[00m
				(MF es immer am abend)
				(PX allerdings erst ab achtzehn uhr funfunddreisig)[01;36m)[00m)
		(SIMPX
			(KOORD und)
			(VF zuge)
			(LK gehen)
			(MF [01;33m(MF[00m
				(ADVX sowieso)
				[01;31m(PX[00m
					(NX den ganzen tag) [01;33mMF)[00m
					(APPO uber)[01;31m)[00m))
		[01;31m(SIMPX[00m
			(VF wir)
			[01;31m(FKOORD[00m
				[01;31m(LKMN[00m
					(LK waren)
					[01;31m(MF[00m
						[01;36m(MF[00m
							(ADVX naturlich)
							(PX mit dem flugzeug)
							(ADJX etwas flexibler)[01;36m)[00m
						[01;31m(PX[00m
							(PX zum abend)
							(VC hin)[01;31m)[00m[01;31m)[00m
					[01;33m(SIMPX (NF[00m (NF weil wir den letzten flug sogar um neun uhr noch nehmen konnten)[01;31m)[00m
				[01;36m(SIMPX[00m
					[01;36m(KOORD[00m
						(KON und)[01;36m)[00m
					(LKM waren dann trotzdem noch vor elf zu hause)[01;36m)[00m[01;31m)[00m[01;31m)[00m)) [01;33mNF) SIMPX)[00m
Step:PP Attachment
{'new_parent': 'LKMN', 'new_family': ['LK', 'MF', 'PX', 'NF'], 'mover info': [('PX', (33, 36))], 'old_family': ['ADVX', 'PX', 'ADJX', 'PX'], 'start left siblings': ['ADVX', 'PX', 'ADJX'], 'auto preterminals': ('VAFIN', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'ADJD', 'APPRART', 'NN', 'ADV', 'KOUS', 'PPER', 'ART', 'ADJA', 'NN', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'VVINF', 'VMFIN'), 'start right siblings': [], 'end left siblings': ['LK', 'MF'], 'auto preterminal span': (26, 48), 'movers': ['PX'], 'old_parent': 'MF', 'end right siblings': ['NF'], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM also)
		(SIMPX es ist vollkommen wahlfrei)
		(SIMPX
			(VF fluge)
			(LK gibt)
			[01;36m(MF[00m
				(MF es immer am abend)
				(PX allerdings erst ab achtzehn uhr funfunddreisig)[01;36m)[00m)
		(SIMPX
			(KOORD und)
			(VF zuge)
			(LK gehen)
			(MF [01;33m(MF[00m
				(ADVX sowieso)
				[01;31m(PX[00m
					(NX den ganzen tag) [01;33mMF)[00m
					(APPO uber)[01;31m)[00m))
		[01;31m(SIMPX[00m
			(VF wir)
			[01;31m(FKOORD[00m
				[01;31m(LKMN[00m
					(LK waren)
					(MF naturlich mit dem flugzeug etwas flexibler)
					[01;31m(PX[00m
						(PX zum abend)
						(VC hin)[01;31m)[00m
					[01;33m(SIMPX (NF[00m (NF weil wir den letzten flug sogar um neun uhr noch nehmen konnten)[01;31m)[00m
				[01;36m(SIMPX[00m
					[01;36m(KOORD[00m
						(KON und)[01;36m)[00m
					(LKM waren dann trotzdem noch vor elf zu hause)[01;36m)[00m[01;31m)[00m[01;31m)[00m)) [01;33mNF) SIMPX)[00m
Step:PP Attachment
{'subtrees': ['MF', 'PX'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV', 'APPRART', 'NN', 'ADV', 'ADV', 'APPR', 'CARD', 'NN', 'CARD'), 'right siblings': [], 'left siblings': [(VF (NX (NN fluge))), (LK (VXFIN (VVFIN gibt)))], 'auto preterminal span': (7, 17), 'span': (7, 17), 'parent': 'SIMPX', 'label': 'MF', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		(SIMPX es ist vollkommen wahlfrei)
		(SIMPX fluge gibt es immer am abend allerdings erst ab achtzehn uhr funfunddreisig)
		(SIMPX
			(KOORD und)
			(VF zuge)
			(LK gehen)
			(MF [01;33m(MF[00m
				(ADVX sowieso)
				[01;31m(PX[00m
					(NX den ganzen tag) [01;33mMF)[00m
					(APPO uber)[01;31m)[00m))
		[01;31m(SIMPX[00m
			(VF wir)
			[01;31m(FKOORD[00m
				[01;31m(LKMN[00m
					(LK waren)
					(MF naturlich mit dem flugzeug etwas flexibler)
					[01;31m(PX[00m
						(PX zum abend)
						(VC hin)[01;31m)[00m
					[01;33m(SIMPX (NF[00m (NF weil wir den letzten flug sogar um neun uhr noch nehmen konnten)[01;31m)[00m
				[01;36m(SIMPX[00m
					[01;36m(KOORD[00m
						(KON und)[01;36m)[00m
					(LKM waren dann trotzdem noch vor elf zu hause)[01;36m)[00m[01;31m)[00m[01;31m)[00m)) [01;33mNF) SIMPX)[00m
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['LKMN', 'KOORD', 'LKM'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON',), 'right siblings': [(LKM (LK (VXFIN (VAFIN waren))) (MF (ADVX (ADV dann)) (PX (PROP trotzdem)) (ADVX (ADV noch)) (PX (APPR vor) (NX (CARD elf))) (PX (APPR zu) (NX (NN hause)))))], 'left siblings': [(LKMN (LK (VXFIN (VAFIN waren))) (MF (ADVX (ADV naturlich)) (PX (APPR mit) (NX (ART dem) (NN flugzeug))) (ADJX (ADVX (ADV etwas)) (ADJD flexibler))) (PX (PX (APPRART zum) (NX (NN abend))) (VC (ADV hin))) (NF (SIMPX (C (KOUS weil)) (MF (NX (PPER wir)) (NX (ART den) (ADJX (ADJA letzten)) (NN flug)) (ADVX (ADV sogar)) (PX (APPR um) (NX (ADJX (CARD neun)) (NN uhr))) (ADVX (ADV noch))) (VC (VXINF (VVINF nehmen)) (VXFIN (VMFIN konnten))))))], 'auto preterminal span': (48, 49), 'span': (48, 49), 'parent': 'FKOORD', 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		(SIMPX es ist vollkommen wahlfrei)
		(SIMPX fluge gibt es immer am abend allerdings erst ab achtzehn uhr funfunddreisig)
		(SIMPX
			(KOORD und)
			(VF zuge)
			(LK gehen)
			(MF [01;33m(MF[00m
				(ADVX sowieso)
				[01;31m(PX[00m
					(NX den ganzen tag) [01;33mMF)[00m
					(APPO uber)[01;31m)[00m))
		[01;31m(SIMPX[00m
			(VF wir)
			[01;31m(FKOORD[00m
				[01;31m(LKMN[00m
					(LK waren)
					(MF naturlich mit dem flugzeug etwas flexibler)
					[01;31m(PX[00m
						(PX zum abend)
						(VC hin)[01;31m)[00m
					[01;33m(SIMPX (NF[00m (NF weil wir den letzten flug sogar um neun uhr noch nehmen konnten)[01;31m)[00m
				[01;36m(SIMPX[00m
					(KOORD und)
					(LKM waren dann trotzdem noch vor elf zu hause)[01;36m)[00m[01;31m)[00m[01;31m)[00m)) [01;33mNF) SIMPX)[00m
Step:UNSET add
{'subtrees': ['KOORD', 'LKM'], 'family': ['LKMN', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'VAFIN', 'ADV', 'PROP', 'ADV', 'APPR', 'CARD', 'APPR', 'NN'), 'right siblings': [], 'left siblings': [(LKMN (LK (VXFIN (VAFIN waren))) (MF (ADVX (ADV naturlich)) (PX (APPR mit) (NX (ART dem) (NN flugzeug))) (ADJX (ADVX (ADV etwas)) (ADJD flexibler))) (PX (PX (APPRART zum) (NX (NN abend))) (VC (ADV hin))) (NF (SIMPX (C (KOUS weil)) (MF (NX (PPER wir)) (NX (ART den) (ADJX (ADJA letzten)) (NN flug)) (ADVX (ADV sogar)) (PX (APPR um) (NX (ADJX (CARD neun)) (NN uhr))) (ADVX (ADV noch))) (VC (VXINF (VVINF nehmen)) (VXFIN (VMFIN konnten))))))], 'auto preterminal span': (48, 57), 'span': (48, 57), 'parent': 'FKOORD', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		(SIMPX es ist vollkommen wahlfrei)
		(SIMPX fluge gibt es immer am abend allerdings erst ab achtzehn uhr funfunddreisig)
		(SIMPX
			(KOORD und)
			(VF zuge)
			(LK gehen)
			(MF [01;33m(MF[00m
				(ADVX sowieso)
				[01;31m(PX[00m
					(NX den ganzen tag) [01;33mMF)[00m
					(APPO uber)[01;31m)[00m))
		[01;31m(SIMPX[00m
			(VF wir)
			[01;31m(FKOORD[00m
				[01;31m(LKMN[00m
					(LK waren)
					(MF naturlich mit dem flugzeug etwas flexibler)
					[01;31m(PX[00m
						(PX zum abend)
						(VC hin)[01;31m)[00m
					[01;33m(SIMPX (NF[00m (NF weil wir den letzten flug sogar um neun uhr noch nehmen konnten)[01;31m)[00m
				(SIMPX und waren dann trotzdem noch vor elf zu hause)[01;31m)[00m[01;31m)[00m)) [01;33mNF) SIMPX)[00m
Step:UNSET remove
{'subtrees': ['NX', 'APPO'], 'family': ['ADVX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ART', 'ADJA', 'NN', 'APPO'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (20, 25), 'span': (21, 25), 'left siblings': ['ADVX'], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX es ist vollkommen wahlfrei)
		(SIMPX fluge gibt es immer am abend allerdings erst ab achtzehn uhr funfunddreisig)
		(SIMPX
			(KOORD und)
			(VF zuge)
			(LK gehen)
			(MF
				[01;36m(MF[00m
					(ADVX sowieso)
					(NX den ganzen tag)[01;36m)[00m
				(APPO uber)))
		[01;31m(SIMPX[00m
			(VF wir)
			[01;31m(FKOORD[00m
				[01;31m(LKMN[00m
					(LK waren)
					(MF naturlich mit dem flugzeug etwas flexibler)
					[01;31m(PX[00m
						(PX zum abend)
						(VC hin)[01;31m)[00m
					[01;33m(SIMPX (NF[00m (NF weil wir den letzten flug sogar um neun uhr noch nehmen konnten)[01;31m)[00m
				(SIMPX und waren dann trotzdem noch vor elf zu hause)[01;31m)[00m[01;31m)[00m)) [01;33mNF) SIMPX)[00m
Step:UNSET add
{'subtrees': ['ADVX', 'NX'], 'family': ['MF', 'APPO'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ART', 'ADJA', 'NN'), 'right siblings': [(APPO uber)], 'left siblings': [], 'auto preterminal span': (20, 24), 'span': (20, 24), 'parent': 'MF', 'label': 'MF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		(SIMPX es ist vollkommen wahlfrei)
		(SIMPX fluge gibt es immer am abend allerdings erst ab achtzehn uhr funfunddreisig)
		(SIMPX und zuge gehen sowieso den ganzen tag uber)
		[01;31m(SIMPX[00m
			(VF wir)
			[01;31m(FKOORD[00m
				[01;31m(LKMN[00m
					(LK waren)
					(MF naturlich mit dem flugzeug etwas flexibler)
					[01;31m(PX[00m
						(PX zum abend)
						(VC hin)[01;31m)[00m
					[01;33m(SIMPX (NF[00m (NF weil wir den letzten flug sogar um neun uhr noch nehmen konnten)[01;31m)[00m
				(SIMPX und waren dann trotzdem noch vor elf zu hause)[01;31m)[00m[01;31m)[00m)) [01;33mNF) SIMPX)[00m
Step:UNSET remove
{'subtrees': ['VF', 'FKOORD'], 'family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPER', 'VAFIN', 'ADV', 'ADJD', 'NN', 'VVFIN', 'PPER', 'ADV', 'APPRART', 'NN', 'ADV', 'ADV', 'APPR', 'CARD', 'NN', 'CARD', 'KON', 'NN', 'VVFIN', 'ADV', 'ART', 'ADJA', 'NN', 'APPO', 'PPER', 'VAFIN', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'ADJD', 'APPRART', 'NN', 'ADV', 'KOUS', 'PPER', 'ART', 'ADJA', 'NN', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'VVINF', 'VMFIN', 'KON', 'VAFIN', 'ADV', 'PROP', 'ADV', 'APPR', 'CARD', 'APPR', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 57), 'span': (25, 57), 'left siblings': ['DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX es ist vollkommen wahlfrei)
		(SIMPX fluge gibt es immer am abend allerdings erst ab achtzehn uhr funfunddreisig)
		(SIMPX und zuge gehen sowieso den ganzen tag uber)
		(VF wir)
		[01;31m(FKOORD[00m
			[01;31m(LKMN[00m
				(LK waren)
				(MF naturlich mit dem flugzeug etwas flexibler)
				[01;31m(PX[00m
					(PX zum abend)
					(VC hin)[01;31m)[00m
				[01;33m(SIMPX (NF[00m (NF weil wir den letzten flug sogar um neun uhr noch nehmen konnten)[01;31m)[00m
			(SIMPX und waren dann trotzdem noch vor elf zu hause)[01;31m)[00m)) [01;33mNF) SIMPX)[00m
Step:PP Attachment
{'subtrees': ['LK', 'MF', 'PX', 'NF'], 'family': ['LKMN', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'ADJD', 'APPRART', 'NN', 'ADV', 'KOUS', 'PPER', 'ART', 'ADJA', 'NN', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'VVINF', 'VMFIN', 'KON', 'VAFIN', 'ADV', 'PROP', 'ADV', 'APPR', 'CARD', 'APPR', 'NN'), 'right siblings': ['SIMPX'], 'parent': 'FKOORD', 'auto preterminal span': (26, 57), 'span': (26, 48), 'left siblings': [], 'label': 'LKMN', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX es ist vollkommen wahlfrei)
		(SIMPX fluge gibt es immer am abend allerdings erst ab achtzehn uhr funfunddreisig)
		(SIMPX und zuge gehen sowieso den ganzen tag uber)
		(VF wir)
		[01;31m(FKOORD[00m
			(LK waren)
			(MF naturlich mit dem flugzeug etwas flexibler)
			[01;31m(PX[00m
				(PX zum abend)
				(VC hin)[01;31m)[00m
			[01;36m(NF[00m
				[01;36m(SIMPX[00m
					(NF weil wir den letzten flug sogar um neun uhr noch nehmen konnten)
					(SIMPX und waren dann trotzdem noch vor elf zu hause)[01;36m)[00m[01;36m)[00m[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['NF', 'SIMPX'], 'family': ['LK', 'MF', 'PX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ART', 'ADJA', 'NN', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'VVINF', 'VMFIN', 'KON', 'VAFIN', 'ADV', 'PROP', 'ADV', 'APPR', 'CARD', 'APPR', 'NN'), 'right siblings': [], 'left siblings': [(LK (VXFIN (VAFIN waren))), (MF (ADVX (ADV naturlich)) (PX (APPR mit) (NX (ART dem) (NN flugzeug))) (ADJX (ADVX (ADV etwas)) (ADJD flexibler))), (PX (PX (APPRART zum) (NX (NN abend))) (VC (ADV hin)))], 'auto preterminal span': (36, 57), 'span': (36, 57), 'parent': 'FKOORD', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		(SIMPX es ist vollkommen wahlfrei)
		(SIMPX fluge gibt es immer am abend allerdings erst ab achtzehn uhr funfunddreisig)
		(SIMPX und zuge gehen sowieso den ganzen tag uber)
		(VF wir)
		[01;31m(FKOORD[00m
			(LK waren)
			(MF naturlich mit dem flugzeug etwas flexibler)
			[01;31m(PX[00m
				(PX zum abend)
				(VC hin)[01;31m)[00m
			[01;36m(NF[00m
				(SIMPX
					(NF weil wir den letzten flug sogar um neun uhr noch nehmen konnten)
					(SIMPX und waren dann trotzdem noch vor elf zu hause))[01;36m)[00m[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['LK', 'MF', 'PX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ART', 'ADJA', 'NN', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'VVINF', 'VMFIN', 'KON', 'VAFIN', 'ADV', 'PROP', 'ADV', 'APPR', 'CARD', 'APPR', 'NN'), 'right siblings': [], 'left siblings': [(LK (VXFIN (VAFIN waren))), (MF (ADVX (ADV naturlich)) (PX (APPR mit) (NX (ART dem) (NN flugzeug))) (ADJX (ADVX (ADV etwas)) (ADJD flexibler))), (PX (PX (APPRART zum) (NX (NN abend))) (VC (ADV hin)))], 'auto preterminal span': (36, 57), 'span': (36, 57), 'parent': 'FKOORD', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM also)
		(SIMPX es ist vollkommen wahlfrei)
		(SIMPX fluge gibt es immer am abend allerdings erst ab achtzehn uhr funfunddreisig)
		(SIMPX und zuge gehen sowieso den ganzen tag uber)
		(VF wir)
		[01;31m(FKOORD[00m
			(LK waren)
			(MF naturlich mit dem flugzeug etwas flexibler)
			[01;31m(PX[00m
				(PX zum abend)
				(VC hin)[01;31m)[00m
			(NF weil wir den letzten flug sogar um neun uhr noch nehmen konnten und waren dann trotzdem noch vor elf zu hause)[01;31m)[00m))
Step:PP Attachment
{'subtrees': ['LK', 'MF', 'PX', 'NF'], 'family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'VF', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPER', 'VAFIN', 'ADV', 'ADJD', 'NN', 'VVFIN', 'PPER', 'ADV', 'APPRART', 'NN', 'ADV', 'ADV', 'APPR', 'CARD', 'NN', 'CARD', 'KON', 'NN', 'VVFIN', 'ADV', 'ART', 'ADJA', 'NN', 'APPO', 'PPER', 'VAFIN', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'ADJD', 'APPRART', 'NN', 'ADV', 'KOUS', 'PPER', 'ART', 'ADJA', 'NN', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'VVINF', 'VMFIN', 'KON', 'VAFIN', 'ADV', 'PROP', 'ADV', 'APPR', 'CARD', 'APPR', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 57), 'span': (26, 57), 'left siblings': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'VF'], 'label': 'FKOORD', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM also)
		(SIMPX es ist vollkommen wahlfrei)
		(SIMPX fluge gibt es immer am abend allerdings erst ab achtzehn uhr funfunddreisig)
		(SIMPX und zuge gehen sowieso den ganzen tag uber)
		(VF wir)
		(LK waren)
		(MF naturlich mit dem flugzeug etwas flexibler)
		[01;31m(PX[00m
			(PX zum abend)
			(VC hin)[01;31m)[00m
		(NF weil wir den letzten flug sogar um neun uhr noch nehmen konnten und waren dann trotzdem noch vor elf zu hause)))
Step:UNSET remove
{'subtrees': ['PX', 'VC'], 'family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'VF', 'LK', 'MF', 'PX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PPER', 'VAFIN', 'ADV', 'ADJD', 'NN', 'VVFIN', 'PPER', 'ADV', 'APPRART', 'NN', 'ADV', 'ADV', 'APPR', 'CARD', 'NN', 'CARD', 'KON', 'NN', 'VVFIN', 'ADV', 'ART', 'ADJA', 'NN', 'APPO', 'PPER', 'VAFIN', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'ADJD', 'APPRART', 'NN', 'ADV', 'KOUS', 'PPER', 'ART', 'ADJA', 'NN', 'ADV', 'APPR', 'CARD', 'NN', 'ADV', 'VVINF', 'VMFIN', 'KON', 'VAFIN', 'ADV', 'PROP', 'ADV', 'APPR', 'CARD', 'APPR', 'NN'), 'right siblings': ['NF'], 'parent': 'TURN', 'auto preterminal span': (0, 57), 'span': (33, 36), 'left siblings': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'VF', 'LK', 'MF'], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP also es ist vollkommen wahlfrei fluge gibt es immer am abend allerdings erst ab achtzehn uhr funfunddreisig und zuge gehen sowieso den ganzen tag uber wir waren naturlich mit dem flugzeug etwas flexibler zum abend hin weil wir den letzten flug sogar um neun uhr noch nehmen konnten und waren dann trotzdem noch vor elf zu hause)

Sentence 472:
0 Initial errors
0 on fringe, 0 iterations

Sentence 473:
4 Initial errors
0 on fringe, 1 iterations
4 Error:UNSET move
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX wir kucken einfach was dann gespielt wird)
		(SIMPX
			[01;31m(VF[00m
				[01;31m(SIMPX[00m
					(KOORD und)
					[01;36m(SIMPX[00m
						[01;36m(VF[00m
							(C wenn)
							(MF nix gescheites)
							(VC kommt)[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
			(LK konnen)
			(MF wir immer noch einfach nur eine kneipentour)
			(VC machen))))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['KOORD', 'VF', 'LK', 'MF', 'VC'], 'mover info': [('KOORD', (8, 9))], 'old_family': ['KOORD', 'C', 'MF', 'VC'], 'start left siblings': [], 'auto preterminals': ('KON', 'KOUS', 'PIS', 'NN', 'VVFIN', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'ADV', 'ART', 'NN', 'VVINF'), 'start right siblings': ['C', 'MF', 'VC'], 'end left siblings': [], 'auto preterminal span': (8, 22), 'movers': ['KOORD'], 'old_parent': 'SIMPX', 'POS confusion': ('KON', 'KON'), 'end right siblings': ['VF', 'LK', 'MF', 'VC'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP ja wir kucken einfach was dann gespielt wird und wenn nix gescheites kommt konnen wir immer noch einfach nur eine kneipentour machen)

Sentence 474:
3 Initial errors
0 on fringe, 2 iterations
2 Error:Single Word Phrase
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX
			(LK ging)
			[01;31m(MF[00m
				[01;36m(DM[00m [01;31m(ADVX[00m
					(ADV ja)[01;31m)[00m[01;36m)[00m
				(ADJX ganz schnell)[01;31m)[00m)
		(DM danke auch)
		(DM und bis dann)
		(DM tschus)))
Step:Single Word Phrase
{'family': ['DM', 'ADJX'], 'auto preterminal span': (1, 2), 'span': (1, 2), 'subtrees': ['ADV'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'DM')}
(TOP
	(TURN
		(SIMPX
			(LK ging)
			[01;31m(MF[00m
				(DM ja)
				(ADJX ganz schnell)[01;31m)[00m)
		(DM danke auch)
		(DM und bis dann)
		(DM tschus)))
Step:Modifier Attachment
{'subtrees': ['DM', 'ADJX'], 'family': ['LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'ADV', 'ADV', 'ADJD'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (0, 4), 'span': (1, 4), 'left siblings': ['LK'], 'label': 'MF', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP ging ja ganz schnell danke auch und bis dann tschus)

Sentence 475:
6 Initial errors
0 on fringe, 5 iterations
2 Error:PP Attachment
1 Error:Unary
1 Error:UNSET remove
1 Error:NP Internal Structure
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM hallo)
		(DM peter)
		(ADJX gut das wir uns treffen)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF es)
				(LK geht)
				[01;31m(MF[00m
					(PX
						(APPR um)
						(NX termin))[01;31m)[00m[01;31m)[00m
			[01;31m(NX[00m
				(ART eine)
				(NN reise)[01;31m)[00m
			[01;31m(NX[00m
				[01;31m(NX[00m
					(NX wir)
					(NX beide)[01;31m)[00m
				(ADVX zusammen)[01;31m)[00m
			(PX von munchen nach hannover)[01;36m)[00m
		(NX anderthalb tage in den nachsten drei monaten)
		(SIMPX wann hast du zeit)))
Step:PP Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'NX', 'NX', 'PX'], 'mover info': [('NX', (11, 13)), ('NX', (13, 16)), ('PX', (16, 20))], 'old_family': ['DM', 'DM', 'ADJX', 'SIMPX', 'NX', 'NX', 'PX', 'NX', 'SIMPX'], 'start left siblings': ['DM', 'DM', 'ADJX', 'SIMPX'], 'auto preterminals': ('ITJ', 'NE', 'ADJD', 'KOUS', 'PPER', 'PRF', 'VVFIN', 'PPER', 'VVFIN', 'APPR', 'NN', 'ART', 'NN', 'PPER', 'PIS', 'ADV', 'APPR', 'NE', 'APPR', 'NE', 'CARD', 'NN', 'APPR', 'ART', 'ADJA', 'CARD', 'NN', 'PWAV', 'VAFIN', 'PPER', 'NN'), 'start right siblings': ['NX', 'SIMPX'], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (0, 31), 'movers': ['NX', 'NX', 'PX'], 'old_parent': 'TURN', 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM hallo)
		(DM peter)
		(ADJX gut das wir uns treffen)
		(SIMPX
			(VF es)
			(LK geht)
			[01;31m(MF[00m
				(PX
					(APPR um)
					(NX termin))[01;31m)[00m
			[01;31m(NX[00m
				(ART eine)
				(NN reise)[01;31m)[00m
			[01;31m(NX[00m
				[01;31m(NX[00m
					(NX wir)
					(NX beide)[01;31m)[00m
				(ADVX zusammen)[01;31m)[00m
			(PX von munchen nach hannover))
		(NX anderthalb tage in den nachsten drei monaten)
		(SIMPX wann hast du zeit)))
Step:Unary
{'subtrees': ['PX'], 'family': ['VF', 'LK', 'MF', 'NX', 'NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'APPR', 'NN', 'ART', 'NN', 'PPER', 'PIS', 'ADV', 'APPR', 'NE', 'APPR', 'NE'), 'right siblings': ['NX', 'NX', 'PX'], 'parent': 'SIMPX', 'auto preterminal span': (7, 20), 'span': (9, 11), 'left siblings': ['VF', 'LK'], 'label': 'MF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM hallo)
		(DM peter)
		(ADJX gut das wir uns treffen)
		(SIMPX
			(VF es)
			(LK geht)
			(PX um termin)
			[01;31m(NX[00m
				(ART eine)
				(NN reise)[01;31m)[00m
			[01;31m(NX[00m
				[01;31m(NX[00m
					(NX wir)
					(NX beide)[01;31m)[00m
				(ADVX zusammen)[01;31m)[00m
			(PX von munchen nach hannover))
		(NX anderthalb tage in den nachsten drei monaten)
		(SIMPX wann hast du zeit)))
Step:UNSET remove
{'subtrees': ['ART', 'NN'], 'family': ['VF', 'LK', 'PX', 'NX', 'NX', 'PX'], 'over_word': False, 'over words': True, 'auto preterminals': ('PPER', 'VVFIN', 'APPR', 'NN', 'ART', 'NN', 'PPER', 'PIS', 'ADV', 'APPR', 'NE', 'APPR', 'NE'), 'right siblings': ['NX', 'PX'], 'parent': 'SIMPX', 'auto preterminal span': (7, 20), 'span': (11, 13), 'left siblings': ['VF', 'LK', 'PX'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM hallo)
		(DM peter)
		(ADJX gut das wir uns treffen)
		(SIMPX
			(VF es)
			(LK geht)
			(PX um termin)
			(ART eine)
			(NN reise)
			[01;31m(NX[00m
				[01;31m(NX[00m
					(NX wir)
					(NX beide)[01;31m)[00m
				(ADVX zusammen)[01;31m)[00m
			(PX von munchen nach hannover))
		(NX anderthalb tage in den nachsten drei monaten)
		(SIMPX wann hast du zeit)))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['NX', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'PIS', 'ADV'), 'right siblings': ['ADVX'], 'parent': 'NX', 'auto preterminal span': (13, 16), 'span': (13, 15), 'left siblings': [], 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'remove'}
(TOP
	(TURN
		(DM hallo)
		(DM peter)
		(ADJX gut das wir uns treffen)
		(SIMPX
			(VF es)
			(LK geht)
			(PX um termin)
			(ART eine)
			(NN reise)
			[01;31m(NX[00m
				(NX wir)
				(NX beide)
				(ADVX zusammen)[01;31m)[00m
			(PX von munchen nach hannover))
		(NX anderthalb tage in den nachsten drei monaten)
		(SIMPX wann hast du zeit)))
Step:Modifier Attachment
{'subtrees': ['NX', 'NX', 'ADVX'], 'family': ['VF', 'LK', 'PX', 'ART', 'NN', 'NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'APPR', 'NN', 'ART', 'NN', 'PPER', 'PIS', 'ADV', 'APPR', 'NE', 'APPR', 'NE'), 'right siblings': ['PX'], 'parent': 'SIMPX', 'auto preterminal span': (7, 20), 'span': (13, 16), 'left siblings': ['VF', 'LK', 'PX', 'ART', 'NN'], 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP hallo peter gut das wir uns treffen es geht um termin eine reise wir beide zusammen von munchen nach hannover anderthalb tage in den nachsten drei monaten wann hast du zeit)

Sentence 476:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM moment)
		[01;36m(DM[00m [01;31m(VXFIN[00m
			(VVIMP warte)[01;31m)[00m[01;36m)[00m
		(SIMPX das war der neunzehnte juli)))
Step:Single Word Phrase
{'family': ['DM', 'DM', 'SIMPX'], 'auto preterminal span': (1, 2), 'span': (1, 2), 'subtrees': ['VVIMP'], 'parent': 'TURN', 'over_word': True, 'auto preterminals': ('VVIMP',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VXFIN', 'DM')}
(TOP moment warte das war der neunzehnte juli)

Sentence 477:
3 Initial errors
0 on fringe, 1 iterations
3 Error:VP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(PX bis funfzehnter august)
		(DM aha)
		(SIMPX
			(VF mein urlaub)
			[01;36m(FKOORD[00m
				[01;33m(LKMVC[00m (VXFIN ist)
				[01;31m(FKOORD[00m
					(LKMVC fangt am neunten august an) [01;33mLKMVC)[00m
					(KON und)
					(LKM geht bis zum einunddreisigsten august)[01;31m)[00m[01;36m)[00m)))
Step:VP Attachment
{'new_parent': 'FKOORD', 'new_family': ['VXFIN', 'LKMVC', 'KON', 'LKM'], 'mover info': [('VXFIN', (6, 7))], 'old_family': ['VF', 'VXFIN', 'FKOORD'], 'start left siblings': ['VF'], 'auto preterminals': ('PPOSAT', 'NN', 'VAFIN', 'VVFIN', 'APPRART', 'ADJA', 'NN', 'PTKVZ', 'KON', 'VVFIN', 'APPR', 'APPRART', 'ADJA', 'NN'), 'start right siblings': ['FKOORD'], 'end left siblings': [], 'auto preterminal span': (4, 18), 'adding node already present': False, 'movers': ['VXFIN'], 'old_parent': 'SIMPX', 'POS confusion': ('VAFIN', 'VAFIN'), 'added and moved': True, 'end right siblings': ['LKMVC', 'KON', 'LKM'], 'classified_type': 'VP Attachment', 'type': 'move', 'added label': 'LKMVC'}
(TOP bis funfzehnter august aha mein urlaub ist fangt am neunten august an und geht bis zum einunddreisigsten august)

Sentence 478:
0 Initial errors
0 on fringe, 0 iterations

Sentence 479:
0 Initial errors
0 on fringe, 0 iterations

Sentence 480:
6 Initial errors
0 on fringe, 6 iterations
1 Error:Single Word Phrase
1 Error:UNSET remove
1 Error:Clause Attachment
1 Error:Clause Attachment
1 Error:Unary
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM okay)
		(SIMPX dann fahren wir zusammen dahin)
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(DM also)
			[01;33m(SIMPX[00m (VF ich)
			(LK meine)
			[01;33m(SIMPX (NF[00m (NF wir haben jetzt die)[01;31m)[00m
		(SIMPX
			(VF wir)
			(LK brauchen)
			[01;31m(MF[00m
				(NX anderthalb tage)
				(PX fur das treffen)[01;31m)[00m) [01;33mNF) SIMPX) SIMPX)[00m
		(SIMPX wir haben zwei tage zeit)
		(SIMPX also konnten wir mit dem zug hinfahren zum beispiel)))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['KOORD', 'DM', 'VF', 'LK', 'NF'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON', 'ADV', 'PPER', 'VVFIN', 'PPER', 'VAFIN', 'ADV', 'PDS'), 'right siblings': ['DM', 'VF', 'LK', 'NF'], 'parent': 'SIMPX', 'auto preterminal span': (6, 14), 'span': (6, 7), 'left siblings': [], 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(SIMPX dann fahren wir zusammen dahin)
		[01;31m(SIMPX[00m
			(KON und)
			(DM also)
			[01;33m(SIMPX[00m (VF ich)
			(LK meine)
			[01;33m(SIMPX (NF[00m (NF wir haben jetzt die)[01;31m)[00m
		(SIMPX
			(VF wir)
			(LK brauchen)
			[01;31m(MF[00m
				(NX anderthalb tage)
				(PX fur das treffen)[01;31m)[00m) [01;33mNF) SIMPX) SIMPX)[00m
		(SIMPX wir haben zwei tage zeit)
		(SIMPX also konnten wir mit dem zug hinfahren zum beispiel)))
Step:UNSET remove
{'subtrees': ['KON', 'DM', 'VF', 'LK', 'NF'], 'family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'VVFIN', 'PPER', 'ADV', 'PROP', 'KON', 'ADV', 'PPER', 'VVFIN', 'PPER', 'VAFIN', 'ADV', 'PDS', 'PPER', 'VVFIN', 'CARD', 'NN', 'APPR', 'ART', 'NN', 'PPER', 'VAFIN', 'CARD', 'NN', 'NN', 'ADV', 'VMFIN', 'PPER', 'APPR', 'ART', 'NN', 'VVINF', 'APPRART', 'NN'), 'right siblings': ['SIMPX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 35), 'span': (6, 14), 'left siblings': ['DM', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(SIMPX dann fahren wir zusammen dahin)
		(KON und)
		(DM also)
		[01;36m(SIMPX[00m
			(VF ich)
			(LK meine)
			[01;36m(SIMPX[00m
				[01;36m(NF[00m
					(NF wir haben jetzt die)
					(SIMPX
						(VF wir)
						(LK brauchen)
						[01;31m(MF[00m
							(NX anderthalb tage)
							(PX fur das treffen)[01;31m)[00m)[01;36m)[00m[01;36m)[00m[01;36m)[00m
		(SIMPX wir haben zwei tage zeit)
		(SIMPX also konnten wir mit dem zug hinfahren zum beispiel)))
Step:Clause Attachment
{'subtrees': ['VF', 'LK', 'NF', 'SIMPX'], 'family': ['DM', 'SIMPX', 'KON', 'DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'PPER', 'VAFIN', 'ADV', 'PDS', 'PPER', 'VVFIN', 'CARD', 'NN', 'APPR', 'ART', 'NN'), 'right siblings': [(SIMPX (VF (NX (PPER wir))) (LK (VXFIN (VAFIN haben))) (MF (NX (ADJX (CARD zwei)) (NN tage)) (NX (NN zeit)))), (SIMPX (VF (ADVX (ADV also))) (LK (VXFIN (VMFIN konnten))) (MF (NX (PPER wir)) (PX (APPR mit) (NX (ART dem) (NN zug)))) (VC (VXINF (VVINF hinfahren))) (NF (PX (APPRART zum) (NX (NN beispiel)))))], 'left siblings': [(DM (ITJ okay)), (SIMPX (VF (ADVX (ADV dann))) (LK (VXFIN (VVFIN fahren))) (MF (NX (PPER wir)) (ADVX (ADV zusammen)) (PX (PROP dahin)))), (KON und), (DM (ADVX (ADV also)))], 'auto preterminal span': (8, 21), 'span': (8, 21), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM okay)
		(SIMPX dann fahren wir zusammen dahin)
		(KON und)
		(DM also)
		(SIMPX
			(VF ich)
			(LK meine)
			[01;36m(SIMPX[00m
				[01;36m(NF[00m
					(NF wir haben jetzt die)
					(SIMPX
						(VF wir)
						(LK brauchen)
						[01;31m(MF[00m
							(NX anderthalb tage)
							(PX fur das treffen)[01;31m)[00m)[01;36m)[00m[01;36m)[00m)
		(SIMPX wir haben zwei tage zeit)
		(SIMPX also konnten wir mit dem zug hinfahren zum beispiel)))
Step:Clause Attachment
{'subtrees': ['NF', 'SIMPX'], 'family': ['VF', 'LK', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'ADV', 'PDS', 'PPER', 'VVFIN', 'CARD', 'NN', 'APPR', 'ART', 'NN'), 'right siblings': [], 'left siblings': [(VF (NX (PPER ich))), (LK (VXFIN (VVFIN meine)))], 'auto preterminal span': (10, 21), 'span': (10, 21), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM okay)
		(SIMPX dann fahren wir zusammen dahin)
		(KON und)
		(DM also)
		(SIMPX
			(VF ich)
			(LK meine)
			[01;36m(SIMPX[00m
				(NF
					(NF wir haben jetzt die)
					(SIMPX
						(VF wir)
						(LK brauchen)
						[01;31m(MF[00m
							(NX anderthalb tage)
							(PX fur das treffen)[01;31m)[00m))[01;36m)[00m)
		(SIMPX wir haben zwei tage zeit)
		(SIMPX also konnten wir mit dem zug hinfahren zum beispiel)))
Step:Unary
{'subtrees': ['NF'], 'family': ['VF', 'LK', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'ADV', 'PDS', 'PPER', 'VVFIN', 'CARD', 'NN', 'APPR', 'ART', 'NN'), 'right siblings': [], 'left siblings': [(VF (NX (PPER ich))), (LK (VXFIN (VVFIN meine)))], 'auto preterminal span': (10, 21), 'span': (10, 21), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM okay)
		(SIMPX dann fahren wir zusammen dahin)
		(KON und)
		(DM also)
		(SIMPX
			(VF ich)
			(LK meine)
			(SIMPX
				(NF
					(NF wir haben jetzt die)
					(SIMPX
						(VF wir)
						(LK brauchen)
						[01;31m(MF[00m
							(NX anderthalb tage)
							(PX fur das treffen)[01;31m)[00m))))
		(SIMPX wir haben zwei tage zeit)
		(SIMPX also konnten wir mit dem zug hinfahren zum beispiel)))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'CARD', 'NN', 'APPR', 'ART', 'NN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (14, 21), 'span': (16, 21), 'left siblings': ['VF', 'LK'], 'label': 'MF', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP okay dann fahren wir zusammen dahin und also ich meine wir haben jetzt die wir brauchen anderthalb tage fur das treffen wir haben zwei tage zeit also konnten wir mit dem zug hinfahren zum beispiel)

Sentence 481:
9 Initial errors
0 on fringe, 8 iterations
2 Error:Different label
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:Clause Attachment
1 Error:Unary
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM genau)
		(DM also)
		(SIMPX ich kucke kurz mal nach)
		[01;31m(SIMPX[00m
			[01;31m(LV[00m
				[01;31m(PX[00m
					(APPR bei)
					(NX den zugverbindungen die ich hier habe)[01;31m)[00m[01;31m)[00m
			(VF das)
			(LK sind)
			[01;31m(MF[00m
				(NX
					(NX munchen)
					(NX hannover))[01;31m)[00m
			[01;31m(NF[00m [01;33m(PX[00m
				(PX
					(APPR mit)
					(NX dem ice))[01;31m)[00m[01;31m)[00m
		(SIMPX
			(VF das)
			(LK sind)
			(MF
				[01;31m(NX[00m
					(NX stundliche verbindungen)
					(PX
						(APPR ab)
						[01;36m(NX[00m [01;31m(PX[00m
							(ADVX morgens)
							(NX vier uhr dreiundvierzig)[01;31m)[00m[01;36m)[00m)[01;31m)[00m)) [01;33mPX)[00m
		(DM also)
		(SIMPX ich mein das ist mir zu fruh)))
Step:Different label
{'family': ['APPR', 'NX'], 'auto preterminal span': (26, 30), 'span': (26, 30), 'subtrees': ['ADVX', 'NX'], 'parent': 'PX', 'over_word': False, 'auto preterminals': ('ADV', 'CARD', 'NN', 'CARD'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('PX', 'NX')}
(TOP
	(TURN
		(DM genau)
		(DM also)
		(SIMPX ich kucke kurz mal nach)
		[01;31m(SIMPX[00m
			[01;31m(LV[00m
				[01;31m(PX[00m
					(APPR bei)
					(NX den zugverbindungen die ich hier habe)[01;31m)[00m[01;31m)[00m
			(VF das)
			(LK sind)
			[01;31m(MF[00m
				(NX
					(NX munchen)
					(NX hannover))[01;31m)[00m
			[01;31m(NF[00m [01;33m(PX[00m
				(PX
					(APPR mit)
					(NX dem ice))[01;31m)[00m[01;31m)[00m
		(SIMPX
			(VF das)
			(LK sind)
			(MF
				[01;31m(NX[00m
					(NX stundliche verbindungen)
					(PX ab morgens vier uhr dreiundvierzig)[01;31m)[00m)) [01;33mPX)[00m
		(DM also)
		(SIMPX ich mein das ist mir zu fruh)))
Step:Unary
{'subtrees': ['PX'], 'family': ['LV', 'VF', 'LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NN', 'PRELS', 'PPER', 'ADV', 'VAFIN', 'PDS', 'VAFIN', 'NE', 'NE', 'APPR', 'ART', 'NE'), 'right siblings': ['VF', 'LK', 'MF', 'NF'], 'parent': 'SIMPX', 'auto preterminal span': (7, 21), 'span': (7, 14), 'left siblings': [], 'label': 'LV', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM genau)
		(DM also)
		(SIMPX ich kucke kurz mal nach)
		[01;31m(SIMPX[00m
			[01;31m(PX[00m
				(APPR bei)
				(NX den zugverbindungen die ich hier habe)[01;31m)[00m
			(VF das)
			(LK sind)
			[01;31m(MF[00m
				(NX
					(NX munchen)
					(NX hannover))[01;31m)[00m
			[01;31m(NF[00m [01;33m(PX[00m
				(PX
					(APPR mit)
					(NX dem ice))[01;31m)[00m[01;31m)[00m
		(SIMPX
			(VF das)
			(LK sind)
			(MF
				[01;31m(NX[00m
					(NX stundliche verbindungen)
					(PX ab morgens vier uhr dreiundvierzig)[01;31m)[00m)) [01;33mPX)[00m
		(DM also)
		(SIMPX ich mein das ist mir zu fruh)))
Step:UNSET remove
{'subtrees': ['APPR', 'NX'], 'family': ['PX', 'VF', 'LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NN', 'PRELS', 'PPER', 'ADV', 'VAFIN', 'PDS', 'VAFIN', 'NE', 'NE', 'APPR', 'ART', 'NE'), 'right siblings': ['VF', 'LK', 'MF', 'NF'], 'parent': 'SIMPX', 'auto preterminal span': (7, 21), 'span': (7, 14), 'left siblings': [], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM genau)
		(DM also)
		(SIMPX ich kucke kurz mal nach)
		[01;31m(SIMPX[00m
			(APPR bei)
			(NX den zugverbindungen die ich hier habe)
			(VF das)
			(LK sind)
			[01;31m(MF[00m
				(NX
					(NX munchen)
					(NX hannover))[01;31m)[00m
			[01;31m(NF[00m [01;33m(PX[00m
				(PX
					(APPR mit)
					(NX dem ice))[01;31m)[00m[01;31m)[00m
		(SIMPX
			(VF das)
			(LK sind)
			(MF
				[01;31m(NX[00m
					(NX stundliche verbindungen)
					(PX ab morgens vier uhr dreiundvierzig)[01;31m)[00m)) [01;33mPX)[00m
		(DM also)
		(SIMPX ich mein das ist mir zu fruh)))
Step:UNSET remove
{'subtrees': ['APPR', 'NX', 'VF', 'LK', 'MF', 'NF'], 'family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'PPER', 'VVFIN', 'ADV', 'ADV', 'PTKVZ', 'APPR', 'ART', 'NN', 'PRELS', 'PPER', 'ADV', 'VAFIN', 'PDS', 'VAFIN', 'NE', 'NE', 'APPR', 'ART', 'NE', 'PDS', 'VAFIN', 'ADJA', 'NN', 'APPR', 'ADV', 'CARD', 'NN', 'CARD', 'ADV', 'PPER', 'VVFIN', 'PDS', 'VAFIN', 'PPER', 'PTKA', 'ADJD'), 'right siblings': ['SIMPX', 'DM', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 38), 'span': (7, 21), 'left siblings': ['DM', 'DM', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM genau)
		(DM also)
		(SIMPX ich kucke kurz mal nach)
		(APPR bei)
		(NX den zugverbindungen die ich hier habe)
		(VF das)
		(LK sind)
		[01;31m(MF[00m
			(NX
				(NX munchen)
				(NX hannover))[01;31m)[00m
		[01;36m(PX[00m
			[01;31m(NF[00m
				(PX
					(APPR mit)
					(NX dem ice))[01;31m)[00m
			(SIMPX
				(VF das)
				(LK sind)
				(MF
					[01;31m(NX[00m
						(NX stundliche verbindungen)
						(PX ab morgens vier uhr dreiundvierzig)[01;31m)[00m))[01;36m)[00m
		(DM also)
		(SIMPX ich mein das ist mir zu fruh)))
Step:Clause Attachment
{'subtrees': ['NF', 'SIMPX'], 'family': ['DM', 'DM', 'SIMPX', 'APPR', 'NX', 'VF', 'LK', 'MF', 'PX', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NE', 'PDS', 'VAFIN', 'ADJA', 'NN', 'APPR', 'ADV', 'CARD', 'NN', 'CARD'), 'right siblings': [(DM (ADVX (ADV also))), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN mein))) (NF (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VAFIN ist))) (MF (NX (PPER mir)) (ADJX (PTKA zu) (ADJD fruh))))))], 'left siblings': [(DM (ITJ genau)), (DM (ADVX (ADV also))), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN kucke))) (MF (ADVX (ADV kurz)) (ADVX (ADV mal))) (VC (PTKVZ nach))), (APPR bei), (NX (NX (ART den) (NN zugverbindungen)) (R (C (NX (PRELS die))) (MF (NX (PPER ich)) (ADVX (ADV hier))) (VC (VXFIN (VAFIN habe))))), (VF (NX (PDS das))), (LK (VXFIN (VAFIN sind))), (MF (NX (NX (NE munchen)) (NX (NE hannover))))], 'auto preterminal span': (18, 30), 'span': (18, 30), 'parent': 'TURN', 'label': 'PX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM genau)
		(DM also)
		(SIMPX ich kucke kurz mal nach)
		(APPR bei)
		(NX den zugverbindungen die ich hier habe)
		(VF das)
		(LK sind)
		[01;31m(MF[00m
			(NX
				(NX munchen)
				(NX hannover))[01;31m)[00m
		(PX
			[01;31m(NF[00m
				(PX
					(APPR mit)
					(NX dem ice))[01;31m)[00m
			(SIMPX
				(VF das)
				(LK sind)
				(MF
					[01;31m(NX[00m
						(NX stundliche verbindungen)
						(PX ab morgens vier uhr dreiundvierzig)[01;31m)[00m)))
		(DM also)
		(SIMPX ich mein das ist mir zu fruh)))
Step:Unary
{'subtrees': ['NX'], 'family': ['DM', 'DM', 'SIMPX', 'APPR', 'NX', 'VF', 'LK', 'MF', 'PX', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'PPER', 'VVFIN', 'ADV', 'ADV', 'PTKVZ', 'APPR', 'ART', 'NN', 'PRELS', 'PPER', 'ADV', 'VAFIN', 'PDS', 'VAFIN', 'NE', 'NE', 'APPR', 'ART', 'NE', 'PDS', 'VAFIN', 'ADJA', 'NN', 'APPR', 'ADV', 'CARD', 'NN', 'CARD', 'ADV', 'PPER', 'VVFIN', 'PDS', 'VAFIN', 'PPER', 'PTKA', 'ADJD'), 'right siblings': ['PX', 'DM', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 38), 'span': (16, 18), 'left siblings': ['DM', 'DM', 'SIMPX', 'APPR', 'NX', 'VF', 'LK'], 'label': 'MF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM genau)
		(DM also)
		(SIMPX ich kucke kurz mal nach)
		(APPR bei)
		(NX den zugverbindungen die ich hier habe)
		(VF das)
		(LK sind)
		(NX munchen hannover)
		(PX
			[01;31m(NF[00m
				(PX
					(APPR mit)
					(NX dem ice))[01;31m)[00m
			(SIMPX
				(VF das)
				(LK sind)
				(MF
					[01;31m(NX[00m
						(NX stundliche verbindungen)
						(PX ab morgens vier uhr dreiundvierzig)[01;31m)[00m)))
		(DM also)
		(SIMPX ich mein das ist mir zu fruh)))
Step:Unary
{'subtrees': ['PX'], 'family': ['NF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NE', 'PDS', 'VAFIN', 'ADJA', 'NN', 'APPR', 'ADV', 'CARD', 'NN', 'CARD'), 'right siblings': ['SIMPX'], 'parent': 'PX', 'auto preterminal span': (18, 30), 'span': (18, 21), 'left siblings': [], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM genau)
		(DM also)
		(SIMPX ich kucke kurz mal nach)
		(APPR bei)
		(NX den zugverbindungen die ich hier habe)
		(VF das)
		(LK sind)
		(NX munchen hannover)
		(PX
			(PX mit dem ice)
			(SIMPX
				(VF das)
				(LK sind)
				(MF
					[01;31m(NX[00m
						(NX stundliche verbindungen)
						(PX ab morgens vier uhr dreiundvierzig)[01;31m)[00m)))
		(DM also)
		(SIMPX ich mein das ist mir zu fruh)))
Step:Unary
{'subtrees': ['NX', 'PX'], 'family': ['NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJA', 'NN', 'APPR', 'ADV', 'CARD', 'NN', 'CARD'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (23, 30), 'span': (23, 30), 'left siblings': [], 'label': 'NX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP genau also ich kucke kurz mal nach bei den zugverbindungen die ich hier habe das sind munchen hannover mit dem ice das sind stundliche verbindungen ab morgens vier uhr dreiundvierzig also ich mein das ist mir zu fruh)

Sentence 482:
0 Initial errors
0 on fringe, 0 iterations

Sentence 483:
17 Initial errors
0 on fringe, 11 iterations
4 Error:Clause Attachment
2 Error:Different label
2 Error:Different label
2 Error:Different label
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:UNSET add
1 Error:UNSET add
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM okay)
		(SIMPX den ice nehmen wir)
		(SIMPX
			(VF wir)
			(LK wissen)
			[01;31m(NF[00m
				(SIMPX
					(C wann)
					(MF wir)
					(VC fahren))[01;31m)[00m)
		[01;31m(SIMPX[00m
			(VF wir)
			(LK wissen)
			[01;31m(NF[00m [01;33m(SIMPX (NF (SIMPX[00m
				[01;31m(SIMPX[00m
					(C wohin)
					[01;33m(NX (MF[00m (MF wir)
					[01;36m(LK[00m [01;31m(VC[00m
						(VXFIN
							(VVFIN fahren))[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;36m(MF[00m [01;31m(VF[00m
				(NX
					(PPER wir))[01;31m)[00m [01;33mMF) NX)[00m[01;36m)[00m
			[01;36m(VC[00m [01;31m(LK[00m
				(VXFIN
					(VVFIN wissen))[01;31m)[00m [01;33mSIMPX)[00m[01;36m)[00m
			[01;31m(NF[00m
				(SIMPX
					(C wo)
					(MF wir)
					(VC schlafen))[01;31m)[00m[01;31m)[00m [01;33mNF) SIMPX)[00m
		(SIMPX wir wissen aber noch nicht was wir abends machen)))
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['C', 'MF', 'VC', 'SIMPX'], 'mover info': [('SIMPX', (15, 20))], 'old_family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'start left siblings': ['DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'auto preterminals': ('ITJ', 'ART', 'NE', 'VVFIN', 'PPER', 'PPER', 'VVFIN', 'PWAV', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'PWAV', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'PWAV', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'PTKNEG', 'PWS', 'PPER', 'ADV', 'VVFIN'), 'start right siblings': ['SIMPX'], 'end left siblings': ['C', 'MF', 'VC'], 'auto preterminal span': (0, 29), 'movers': ['SIMPX'], 'old_parent': 'TURN', 'end right siblings': [], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM okay)
		(SIMPX den ice nehmen wir)
		(SIMPX
			(VF wir)
			(LK wissen)
			[01;31m(NF[00m
				(SIMPX
					(C wann)
					(MF wir)
					(VC fahren))[01;31m)[00m)
		[01;31m(SIMPX[00m
			(VF wir)
			(LK wissen)
			(NF [01;33m(SIMPX[00m
				(SIMPX
					(C wohin)
					[01;33m(NX (MF[00m (MF wir)
					[01;36m(LK[00m [01;31m(VC[00m
						(VXFIN
							(VVFIN fahren))[01;31m)[00m[01;36m)[00m
					[01;31m(SIMPX[00m
						[01;36m(MF[00m [01;31m(VF[00m
							(NX
								(PPER wir))[01;31m)[00m [01;33mMF) NX)[00m[01;36m)[00m
						[01;36m(VC[00m [01;31m(LK[00m
							(VXFIN
								(VVFIN wissen))[01;31m)[00m [01;33mSIMPX)[00m[01;36m)[00m
						[01;31m(NF[00m
							(SIMPX
								(C wo)
								(MF wir)
								(VC schlafen))[01;31m)[00m[01;31m)[00m))[01;31m)[00m
		(SIMPX wir wissen aber noch nicht was wir abends machen)))
Step:Different label
{'family': ['C', 'MF', 'LK', 'SIMPX'], 'auto preterminal span': (14, 15), 'span': (14, 15), 'subtrees': ['VXFIN'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('VVFIN',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('VC', 'LK')}
(TOP
	(TURN
		(DM okay)
		(SIMPX den ice nehmen wir)
		(SIMPX
			(VF wir)
			(LK wissen)
			[01;31m(NF[00m
				(SIMPX
					(C wann)
					(MF wir)
					(VC fahren))[01;31m)[00m)
		[01;31m(SIMPX[00m
			(VF wir)
			(LK wissen)
			(NF [01;33m(SIMPX[00m
				(SIMPX
					(C wohin)
					[01;33m(NX (MF[00m (MF wir)
					(LK fahren)
					[01;31m(SIMPX[00m
						[01;36m(MF[00m [01;31m(VF[00m
							(NX
								(PPER wir))[01;31m)[00m [01;33mMF) NX)[00m[01;36m)[00m
						[01;36m(VC[00m [01;31m(LK[00m
							(VXFIN
								(VVFIN wissen))[01;31m)[00m [01;33mSIMPX)[00m[01;36m)[00m
						[01;31m(NF[00m
							(SIMPX
								(C wo)
								(MF wir)
								(VC schlafen))[01;31m)[00m[01;31m)[00m))[01;31m)[00m
		(SIMPX wir wissen aber noch nicht was wir abends machen)))
Step:Different label
{'family': ['MF', 'LK', 'NF'], 'auto preterminal span': (15, 16), 'span': (15, 16), 'subtrees': ['NX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('PPER',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('VF', 'MF')}
(TOP
	(TURN
		(DM okay)
		(SIMPX den ice nehmen wir)
		(SIMPX
			(VF wir)
			(LK wissen)
			[01;31m(NF[00m
				(SIMPX
					(C wann)
					(MF wir)
					(VC fahren))[01;31m)[00m)
		[01;31m(SIMPX[00m
			(VF wir)
			(LK wissen)
			(NF [01;33m(SIMPX[00m
				(SIMPX
					(C wohin)
					[01;33m(NX (MF[00m (MF wir)
					(LK fahren)
					[01;31m(SIMPX[00m
						(MF wir) [01;33mMF) NX)[00m
						[01;36m(VC[00m [01;31m(LK[00m
							(VXFIN
								(VVFIN wissen))[01;31m)[00m [01;33mSIMPX)[00m[01;36m)[00m
						[01;31m(NF[00m
							(SIMPX
								(C wo)
								(MF wir)
								(VC schlafen))[01;31m)[00m[01;31m)[00m))[01;31m)[00m
		(SIMPX wir wissen aber noch nicht was wir abends machen)))
Step:Different label
{'family': ['MF', 'VC', 'NF'], 'auto preterminal span': (16, 17), 'span': (16, 17), 'subtrees': ['VXFIN'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('VVFIN',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('LK', 'VC')}
(TOP
	(TURN
		(DM okay)
		(SIMPX den ice nehmen wir)
		(SIMPX
			(VF wir)
			(LK wissen)
			[01;31m(NF[00m
				(SIMPX
					(C wann)
					(MF wir)
					(VC fahren))[01;31m)[00m)
		[01;31m(SIMPX[00m
			(VF wir)
			(LK wissen)
			(NF [01;33m(SIMPX[00m
				(SIMPX
					(C wohin)
					[01;33m(NX (MF[00m (MF wir)
					(LK fahren)
					[01;31m(SIMPX[00m
						(MF wir) [01;33mMF) NX)[00m
						(VC wissen) [01;33mSIMPX)[00m
						[01;31m(NF[00m
							(SIMPX
								(C wo)
								(MF wir)
								(VC schlafen))[01;31m)[00m[01;31m)[00m))[01;31m)[00m
		(SIMPX wir wissen aber noch nicht was wir abends machen)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['VF', 'LK', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'PWAV', 'PPER', 'VVFIN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (5, 10), 'span': (7, 10), 'left siblings': ['VF', 'LK'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(SIMPX den ice nehmen wir)
		(SIMPX wir wissen wann wir fahren)
		[01;31m(SIMPX[00m
			(VF wir)
			(LK wissen)
			(NF [01;33m(SIMPX[00m
				(SIMPX
					(C wohin)
					[01;33m(NX (MF[00m (MF wir)
					(LK fahren)
					[01;31m(SIMPX[00m
						(MF wir) [01;33mMF) NX)[00m
						(VC wissen) [01;33mSIMPX)[00m
						[01;31m(NF[00m
							(SIMPX
								(C wo)
								(MF wir)
								(VC schlafen))[01;31m)[00m[01;31m)[00m))[01;31m)[00m
		(SIMPX wir wissen aber noch nicht was wir abends machen)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'NF'], 'family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ART', 'NE', 'VVFIN', 'PPER', 'PPER', 'VVFIN', 'PWAV', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'PWAV', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'PWAV', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'PTKNEG', 'PWS', 'PPER', 'ADV', 'VVFIN'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 29), 'span': (10, 20), 'left siblings': ['DM', 'SIMPX', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(SIMPX den ice nehmen wir)
		(SIMPX wir wissen wann wir fahren)
		(VF wir)
		(LK wissen)
		(NF [01;33m(SIMPX[00m
			(SIMPX
				(C wohin)
				[01;33m(NX (MF[00m (MF wir)
				(LK fahren)
				[01;31m(SIMPX[00m
					(MF wir) [01;33mMF) NX)[00m
					(VC wissen) [01;33mSIMPX)[00m
					[01;31m(NF[00m
						(SIMPX
							(C wo)
							(MF wir)
							(VC schlafen))[01;31m)[00m[01;31m)[00m))
		(SIMPX wir wissen aber noch nicht was wir abends machen)))
Step:UNSET remove
{'subtrees': ['MF', 'VC', 'NF'], 'family': ['C', 'MF', 'LK', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PWAV', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'PWAV', 'PPER', 'VVFIN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (12, 20), 'span': (15, 20), 'left siblings': ['C', 'MF', 'LK'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(SIMPX den ice nehmen wir)
		(SIMPX wir wissen wann wir fahren)
		(VF wir)
		(LK wissen)
		(NF
			(SIMPX
				[01;36m(SIMPX[00m
					(C wohin)
					[01;36m(MF[00m
						[01;36m(NX[00m
							(MF wir)
							(LK fahren)
							(MF wir)[01;36m)[00m[01;36m)[00m
					(VC wissen)[01;36m)[00m
				[01;31m(NF[00m
					(SIMPX
						(C wo)
						(MF wir)
						(VC schlafen))[01;31m)[00m))
		(SIMPX wir wissen aber noch nicht was wir abends machen)))
Step:UNSET add
{'subtrees': ['C', 'MF', 'LK', 'MF', 'VC'], 'family': ['SIMPX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PWAV', 'PPER', 'VVFIN', 'PPER', 'VVFIN'), 'right siblings': [(NF (SIMPX (C (PX (PWAV wo))) (MF (NX (PPER wir))) (VC (VXFIN (VVFIN schlafen)))))], 'left siblings': [], 'auto preterminal span': (12, 17), 'span': (12, 17), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM okay)
		(SIMPX den ice nehmen wir)
		(SIMPX wir wissen wann wir fahren)
		(VF wir)
		(LK wissen)
		(NF
			(SIMPX
				(SIMPX
					(C wohin)
					[01;36m(MF[00m
						[01;36m(NX[00m
							(MF wir)
							(LK fahren)
							(MF wir)[01;36m)[00m[01;36m)[00m
					(VC wissen))
				[01;31m(NF[00m
					(SIMPX
						(C wo)
						(MF wir)
						(VC schlafen))[01;31m)[00m))
		(SIMPX wir wissen aber noch nicht was wir abends machen)))
Step:UNSET add
{'subtrees': ['MF', 'LK', 'MF'], 'family': ['C', 'NX', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'PPER'), 'right siblings': [(VC (VXFIN (VVFIN wissen)))], 'left siblings': [(C (PX (PWAV wohin)))], 'auto preterminal span': (13, 16), 'span': (13, 16), 'parent': 'SIMPX', 'label': 'NX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM okay)
		(SIMPX den ice nehmen wir)
		(SIMPX wir wissen wann wir fahren)
		(VF wir)
		(LK wissen)
		(NF
			(SIMPX
				(SIMPX
					(C wohin)
					[01;36m(MF[00m
						(NX
							(MF wir)
							(LK fahren)
							(MF wir))[01;36m)[00m
					(VC wissen))
				[01;31m(NF[00m
					(SIMPX
						(C wo)
						(MF wir)
						(VC schlafen))[01;31m)[00m))
		(SIMPX wir wissen aber noch nicht was wir abends machen)))
Step:Unary
{'subtrees': ['NX'], 'family': ['C', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'PPER'), 'right siblings': [(VC (VXFIN (VVFIN wissen)))], 'left siblings': [(C (PX (PWAV wohin)))], 'auto preterminal span': (13, 16), 'span': (13, 16), 'parent': 'SIMPX', 'label': 'MF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM okay)
		(SIMPX den ice nehmen wir)
		(SIMPX wir wissen wann wir fahren)
		(VF wir)
		(LK wissen)
		(NF
			(SIMPX
				(SIMPX wohin wir fahren wir wissen)
				[01;31m(NF[00m
					(SIMPX
						(C wo)
						(MF wir)
						(VC schlafen))[01;31m)[00m))
		(SIMPX wir wissen aber noch nicht was wir abends machen)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SIMPX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PWAV', 'PPER', 'VVFIN', 'PPER', 'VVFIN', 'PWAV', 'PPER', 'VVFIN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (12, 20), 'span': (17, 20), 'left siblings': ['SIMPX'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP okay den ice nehmen wir wir wissen wann wir fahren wir wissen wohin wir fahren wir wissen wo wir schlafen wir wissen aber noch nicht was wir abends machen)

Sentence 484:
12 Initial errors
0 on fringe, 7 iterations
2 Error:Different label
2 Error:Single Word Phrase
2 Error:Different label
2 Error:UNSET move
2 Error:UNSET move
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(PX am neunten juli)
		(SIMPX
			(VF ich)
			(LK mus)
			[01;36m(MF[00m [01;36m(ADJX[00m [01;31m(VC[00m
				[01;31m(VXINF[00m
					(VVINF uberlegen)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m)
		[01;31m(SIMPX[00m
			(LK ist)
			[01;36m(VF[00m [01;31m(MF[00m [01;33m(SIMPX[00m
				(NX
					(PDS das))[01;31m)[00m[01;36m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK gibt)
			[01;36m(MF[00m
				[01;31m(MF[00m
					(NX es)
					(ADVX da)
					(ADVX irgendwie)
					(NX was)[01;31m)[00m
				[01;31m(NF[00m
					(NX
						(ART einen)
						(ADJX interessanten)
						(NN feiertag))[01;31m)[00m[01;36m)[00m[01;31m)[00m [01;33mSIMPX)[00m
		(DM nein)))
Step:Different label
{'family': ['VF', 'LK', 'ADJX'], 'auto preterminal span': (5, 6), 'span': (5, 6), 'subtrees': ['VXINF'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('VVINF',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('VC', 'ADJX')}
(TOP
	(TURN
		(PX am neunten juli)
		(SIMPX
			(VF ich)
			(LK mus)
			[01;36m(MF[00m
				(ADJX
					[01;31m(VXINF[00m
						(VVINF uberlegen)[01;31m)[00m)[01;36m)[00m)
		[01;31m(SIMPX[00m
			(LK ist)
			[01;36m(VF[00m [01;31m(MF[00m [01;33m(SIMPX[00m
				(NX
					(PDS das))[01;31m)[00m[01;36m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK gibt)
			[01;36m(MF[00m
				[01;31m(MF[00m
					(NX es)
					(ADVX da)
					(ADVX irgendwie)
					(NX was)[01;31m)[00m
				[01;31m(NF[00m
					(NX
						(ART einen)
						(ADJX interessanten)
						(NN feiertag))[01;31m)[00m[01;36m)[00m[01;31m)[00m [01;33mSIMPX)[00m
		(DM nein)))
Step:Single Word Phrase
{'family': ['MF'], 'auto preterminal span': (5, 6), 'span': (5, 6), 'subtrees': ['VVINF'], 'parent': 'ADJX', 'over_word': True, 'auto preterminals': ('VVINF',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VXINF', 'MF')}
(TOP
	(TURN
		(PX am neunten juli)
		(SIMPX ich mus uberlegen)
		[01;31m(SIMPX[00m
			(LK ist)
			[01;36m(VF[00m [01;31m(MF[00m [01;33m(SIMPX[00m
				(NX
					(PDS das))[01;31m)[00m[01;36m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK gibt)
			[01;36m(MF[00m
				[01;31m(MF[00m
					(NX es)
					(ADVX da)
					(ADVX irgendwie)
					(NX was)[01;31m)[00m
				[01;31m(NF[00m
					(NX
						(ART einen)
						(ADJX interessanten)
						(NN feiertag))[01;31m)[00m[01;36m)[00m[01;31m)[00m [01;33mSIMPX)[00m
		(DM nein)))
Step:Different label
{'family': ['LK', 'VF'], 'auto preterminal span': (7, 8), 'span': (7, 8), 'subtrees': ['NX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('PDS',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('MF', 'VF')}
(TOP
	(TURN
		(PX am neunten juli)
		(SIMPX ich mus uberlegen)
		[01;31m(SIMPX[00m
			(LK ist)
			[01;33m(SIMPX[00m (VF das)[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK gibt)
			[01;36m(MF[00m
				[01;31m(MF[00m
					(NX es)
					(ADVX da)
					(ADVX irgendwie)
					(NX was)[01;31m)[00m
				[01;31m(NF[00m
					(NX
						(ART einen)
						(ADJX interessanten)
						(NN feiertag))[01;31m)[00m[01;36m)[00m[01;31m)[00m [01;33mSIMPX)[00m
		(DM nein)))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'NF'], 'mover info': [('VF', (7, 8))], 'old_family': ['LK', 'VF'], 'start left siblings': ['LK'], 'auto preterminals': ('APPRART', 'ADJA', 'NN', 'PPER', 'VMFIN', 'VVINF', 'VAFIN', 'PDS', 'VVFIN', 'PPER', 'ADV', 'ADV', 'PIS', 'ART', 'ADJA', 'NN', 'PTKANT'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 17), 'movers': ['VF'], 'old_parent': 'SIMPX', 'POS confusion': ('PDS', 'PDS'), 'end right siblings': ['LK', 'MF', 'NF'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(PX am neunten juli)
		(SIMPX ich mus uberlegen)
		[01;31m(SIMPX[00m
			(LK
				(VXFIN
					(VAFIN ist)))[01;31m)[00m
		(SIMPX
			(VF das)
			(LK gibt)
			[01;36m(MF[00m
				[01;31m(MF[00m
					(NX es)
					(ADVX da)
					(ADVX irgendwie)
					(NX was)[01;31m)[00m
				[01;31m(NF[00m
					(NX
						(ART einen)
						(ADJX interessanten)
						(NN feiertag))[01;31m)[00m[01;36m)[00m)
		(DM nein)))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['NX', 'ADVX', 'ADVX', 'NX', 'NF'], 'mover info': [('NF', (13, 16))], 'old_family': ['VF', 'LK', 'MF', 'NF'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('PDS', 'VVFIN', 'PPER', 'ADV', 'ADV', 'PIS', 'ART', 'ADJA', 'NN'), 'start right siblings': [], 'end left siblings': ['NX', 'ADVX', 'ADVX', 'NX'], 'auto preterminal span': (7, 16), 'movers': ['NF'], 'old_parent': 'SIMPX', 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(PX am neunten juli)
		(SIMPX ich mus uberlegen)
		[01;31m(SIMPX[00m
			(LK
				(VXFIN
					(VAFIN ist)))[01;31m)[00m
		(SIMPX
			(VF das)
			(LK gibt)
			(MF
				(NX es)
				(ADVX da)
				(ADVX irgendwie)
				(NX was)
				[01;31m(NF[00m
					(NX
						(ART einen)
						(ADJX interessanten)
						(NN feiertag))[01;31m)[00m))
		(DM nein)))
Step:Unary
{'subtrees': ['LK'], 'family': ['PX', 'SIMPX', 'SIMPX', 'SIMPX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'ADJA', 'NN', 'PPER', 'VMFIN', 'VVINF', 'VAFIN', 'PDS', 'VVFIN', 'PPER', 'ADV', 'ADV', 'PIS', 'ART', 'ADJA', 'NN', 'PTKANT'), 'right siblings': ['SIMPX', 'DM'], 'parent': 'TURN', 'auto preterminal span': (0, 17), 'span': (6, 7), 'left siblings': ['PX', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(PX am neunten juli)
		(SIMPX ich mus uberlegen)
		(LK ist)
		(SIMPX
			(VF das)
			(LK gibt)
			(MF
				(NX es)
				(ADVX da)
				(ADVX irgendwie)
				(NX was)
				[01;31m(NF[00m
					(NX
						(ART einen)
						(ADJX interessanten)
						(NN feiertag))[01;31m)[00m))
		(DM nein)))
Step:Unary
{'subtrees': ['NX'], 'family': ['NX', 'ADVX', 'ADVX', 'NX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV', 'ADV', 'PIS', 'ART', 'ADJA', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (9, 16), 'span': (13, 16), 'left siblings': ['NX', 'ADVX', 'ADVX', 'NX'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP am neunten juli ich mus uberlegen ist das gibt es da irgendwie was einen interessanten feiertag nein)

Sentence 485:
11 Initial errors
0 on fringe, 7 iterations
5 Error:Co-ordination
1 Error:Modifier Attachment
1 Error:Unary
1 Error:UNSET remove
1 Error:Unary
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM okay)
		(SIMPX
			(VF dann)
			(LK sage)
			(MF ich einfach mal)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					(VF von mir aus)
					(LK gehen)
					(MF wir ins kino)
					(KOUS wenn)
					(APPR bei)
					(KOUS wenn)
					[01;31m(NF[00m
						(SIMPX
							(C wenn)
							(MF die was)
							(VC anbieten))[01;31m)[00m[01;31m)[00m[01;31m)[00m)
		(SIMPX oder wir gehen in eine kneipe)
		(DM also)
		(SIMPX
			(VF ich)
			(LK wurde)
			(VC sagen)
			(NF
				(SIMPX
					(VF wir)
					(LK brauchen)
					(MF
						(NX das)
						[01;36m(ADVX[00m
							(ADVX gar nicht)
							(ADVX weiter)[01;36m)[00m)
					(VC planen))))
		(SIMPX
			(VF wir)
			(FKOORD
				[01;31m(LKMN[00m
					(LK kucken)
					(MF einfach)
					[01;31m(NF[00m [01;33m(SIMPX (NF[00m
						[01;31m(SIMPX[00m
							(C wie)
							[01;33m(FKOORD[00m (MF die sache)
							(VC lauft)
							[01;31m(NF[00m
								(ADVX
									(ADV da))[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
				(KON und)
				(LKMVC gehen dann abends aus))))) [01;33mFKOORD) NF) SIMPX)[00m
Step:Co-ordination
{'new_parent': 'SIMPX', 'new_family': ['C', 'MF', 'VC', 'NF', 'KON', 'LKMVC'], 'mover info': [('KON', (45, 46)), ('LKMVC', (46, 50))], 'old_family': ['LKMN', 'KON', 'LKMVC'], 'start left siblings': ['LKMN'], 'auto preterminals': ('VVFIN', 'ADV', 'KOUS', 'ART', 'NN', 'VVFIN', 'ADV', 'KON', 'VVFIN', 'ADV', 'ADV', 'PTKVZ'), 'start right siblings': [], 'end left siblings': ['C', 'MF', 'VC', 'NF'], 'auto preterminal span': (38, 50), 'adding node already present': False, 'movers': ['KON', 'LKMVC'], 'old_parent': 'FKOORD', 'added and moved': True, 'end right siblings': [], 'classified_type': 'Co-ordination', 'type': 'move', 'added label': 'FKOORD'}
(TOP
	(TURN
		(DM okay)
		(SIMPX
			(VF dann)
			(LK sage)
			(MF ich einfach mal)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					(VF von mir aus)
					(LK gehen)
					(MF wir ins kino)
					(KOUS wenn)
					(APPR bei)
					(KOUS wenn)
					[01;31m(NF[00m
						(SIMPX
							(C wenn)
							(MF die was)
							(VC anbieten))[01;31m)[00m[01;31m)[00m[01;31m)[00m)
		(SIMPX oder wir gehen in eine kneipe)
		(DM also)
		(SIMPX
			(VF ich)
			(LK wurde)
			(VC sagen)
			(NF
				(SIMPX
					(VF wir)
					(LK brauchen)
					(MF
						(NX das)
						[01;36m(ADVX[00m
							(ADVX gar nicht)
							(ADVX weiter)[01;36m)[00m)
					(VC planen))))
		(SIMPX
			(VF wir)
			(FKOORD
				[01;31m(LKMN[00m
					(LK kucken)
					(MF einfach)
					(NF
						(SIMPX
							(C wie)
							(FKOORD
								(MF die sache)
								(VC lauft)
								[01;31m(NF[00m
									(ADVX
										(ADV da))[01;31m)[00m
								(KON und)
								(LKMVC gehen dann abends aus))))[01;31m)[00m))))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'ADVX'], 'family': ['NX', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PTKNEG', 'ADV'), 'right siblings': [], 'left siblings': [(NX (PDS das))], 'auto preterminal span': (33, 36), 'span': (33, 36), 'parent': 'MF', 'label': 'ADVX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM okay)
		(SIMPX
			(VF dann)
			(LK sage)
			(MF ich einfach mal)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					(VF von mir aus)
					(LK gehen)
					(MF wir ins kino)
					(KOUS wenn)
					(APPR bei)
					(KOUS wenn)
					[01;31m(NF[00m
						(SIMPX
							(C wenn)
							(MF die was)
							(VC anbieten))[01;31m)[00m[01;31m)[00m[01;31m)[00m)
		(SIMPX oder wir gehen in eine kneipe)
		(DM also)
		(SIMPX ich wurde sagen wir brauchen das gar nicht weiter planen)
		(SIMPX
			(VF wir)
			(FKOORD
				[01;31m(LKMN[00m
					(LK kucken)
					(MF einfach)
					(NF
						(SIMPX
							(C wie)
							(FKOORD
								(MF die sache)
								(VC lauft)
								[01;31m(NF[00m
									(ADVX
										(ADV da))[01;31m)[00m
								(KON und)
								(LKMVC gehen dann abends aus))))[01;31m)[00m))))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['VF', 'LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'ADV', 'ADV', 'APPR', 'PPER', 'APZR', 'VVFIN', 'PPER', 'APPRART', 'NN', 'KOUS', 'APPR', 'KOUS', 'KOUS', 'PDS', 'PIS', 'VVFIN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (1, 20), 'span': (6, 20), 'left siblings': ['VF', 'LK', 'MF'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(SIMPX
			(VF dann)
			(LK sage)
			(MF ich einfach mal)
			[01;31m(SIMPX[00m
				(VF von mir aus)
				(LK gehen)
				(MF wir ins kino)
				(KOUS wenn)
				(APPR bei)
				(KOUS wenn)
				[01;31m(NF[00m
					(SIMPX
						(C wenn)
						(MF die was)
						(VC anbieten))[01;31m)[00m[01;31m)[00m)
		(SIMPX oder wir gehen in eine kneipe)
		(DM also)
		(SIMPX ich wurde sagen wir brauchen das gar nicht weiter planen)
		(SIMPX
			(VF wir)
			(FKOORD
				[01;31m(LKMN[00m
					(LK kucken)
					(MF einfach)
					(NF
						(SIMPX
							(C wie)
							(FKOORD
								(MF die sache)
								(VC lauft)
								[01;31m(NF[00m
									(ADVX
										(ADV da))[01;31m)[00m
								(KON und)
								(LKMVC gehen dann abends aus))))[01;31m)[00m))))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'KOUS', 'APPR', 'KOUS', 'NF'], 'family': ['VF', 'LK', 'MF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'ADV', 'ADV', 'APPR', 'PPER', 'APZR', 'VVFIN', 'PPER', 'APPRART', 'NN', 'KOUS', 'APPR', 'KOUS', 'KOUS', 'PDS', 'PIS', 'VVFIN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (1, 20), 'span': (6, 20), 'left siblings': ['VF', 'LK', 'MF'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(SIMPX
			(VF dann)
			(LK sage)
			(MF ich einfach mal)
			(VF von mir aus)
			(LK gehen)
			(MF wir ins kino)
			(KOUS wenn)
			(APPR bei)
			(KOUS wenn)
			[01;31m(NF[00m
				(SIMPX
					(C wenn)
					(MF die was)
					(VC anbieten))[01;31m)[00m)
		(SIMPX oder wir gehen in eine kneipe)
		(DM also)
		(SIMPX ich wurde sagen wir brauchen das gar nicht weiter planen)
		(SIMPX
			(VF wir)
			(FKOORD
				[01;31m(LKMN[00m
					(LK kucken)
					(MF einfach)
					(NF
						(SIMPX
							(C wie)
							(FKOORD
								(MF die sache)
								(VC lauft)
								[01;31m(NF[00m
									(ADVX
										(ADV da))[01;31m)[00m
								(KON und)
								(LKMVC gehen dann abends aus))))[01;31m)[00m))))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['VF', 'LK', 'MF', 'VF', 'LK', 'MF', 'KOUS', 'APPR', 'KOUS', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'ADV', 'ADV', 'APPR', 'PPER', 'APZR', 'VVFIN', 'PPER', 'APPRART', 'NN', 'KOUS', 'APPR', 'KOUS', 'KOUS', 'PDS', 'PIS', 'VVFIN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (1, 20), 'span': (16, 20), 'left siblings': ['VF', 'LK', 'MF', 'VF', 'LK', 'MF', 'KOUS', 'APPR', 'KOUS'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(SIMPX dann sage ich einfach mal von mir aus gehen wir ins kino wenn bei wenn wenn die was anbieten)
		(SIMPX oder wir gehen in eine kneipe)
		(DM also)
		(SIMPX ich wurde sagen wir brauchen das gar nicht weiter planen)
		(SIMPX
			(VF wir)
			(FKOORD
				[01;31m(LKMN[00m
					(LK kucken)
					(MF einfach)
					(NF
						(SIMPX
							(C wie)
							(FKOORD
								(MF die sache)
								(VC lauft)
								[01;31m(NF[00m
									(ADVX
										(ADV da))[01;31m)[00m
								(KON und)
								(LKMVC gehen dann abends aus))))[01;31m)[00m))))
Step:Unary
{'subtrees': ['LK', 'MF', 'NF'], 'family': ['LKMN'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'ADV', 'KOUS', 'ART', 'NN', 'VVFIN', 'ADV', 'KON', 'VVFIN', 'ADV', 'ADV', 'PTKVZ'), 'right siblings': [], 'parent': 'FKOORD', 'auto preterminal span': (38, 50), 'span': (38, 50), 'left siblings': [], 'label': 'LKMN', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(SIMPX dann sage ich einfach mal von mir aus gehen wir ins kino wenn bei wenn wenn die was anbieten)
		(SIMPX oder wir gehen in eine kneipe)
		(DM also)
		(SIMPX ich wurde sagen wir brauchen das gar nicht weiter planen)
		(SIMPX
			(VF wir)
			(FKOORD
				(LK kucken)
				(MF einfach)
				(NF
					(SIMPX
						(C wie)
						(FKOORD
							(MF die sache)
							(VC lauft)
							[01;31m(NF[00m
								(ADVX
									(ADV da))[01;31m)[00m
							(KON und)
							(LKMVC gehen dann abends aus))))))))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['MF', 'VC', 'NF', 'KON', 'LKMVC'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'VVFIN', 'ADV', 'KON', 'VVFIN', 'ADV', 'ADV', 'PTKVZ'), 'right siblings': ['KON', 'LKMVC'], 'parent': 'FKOORD', 'auto preterminal span': (41, 50), 'span': (44, 45), 'left siblings': ['MF', 'VC'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP okay dann sage ich einfach mal von mir aus gehen wir ins kino wenn bei wenn wenn die was anbieten oder wir gehen in eine kneipe also ich wurde sagen wir brauchen das gar nicht weiter planen wir kucken einfach wie die sache lauft da und gehen dann abends aus)

Sentence 486:
5 Initial errors
0 on fringe, 5 iterations
1 Error:Unary
1 Error:UNSET add
1 Error:Unary
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM okay)
		[01;31m(DM[00m
			(NX
				(NE peter))[01;31m)[00m
		(SIMPX
			(VF von mir aus)
			(LK hatte)
			(MF ich alles)
			[01;36m(R[00m
				[01;36m(NF[00m
					[01;36m(C[00m
						(NX
							(PRELS was))[01;36m)[00m
					[01;36m(MF[00m
						(NX
							(PPER ich))[01;36m)[00m
					(NF was ich brauchte)[01;36m)[00m[01;36m)[00m)
		(KON und)))
Step:Unary
{'subtrees': ['NX'], 'family': ['VF', 'LK', 'MF', 'C', 'NX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PRELS',), 'right siblings': [(NX (PPER ich)), (NF (R (C (NX (PRELS was))) (MF (NX (PPER ich))) (VC (VXFIN (VVFIN brauchte)))))], 'left siblings': [(VF (PX (APPR von) (NX (PPER mir)) (APZR aus))), (LK (VXFIN (VAFIN hatte))), (MF (NX (PPER ich)) (NX (PIS alles)))], 'auto preterminal span': (8, 9), 'span': (8, 9), 'parent': 'SIMPX', 'label': 'C', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM okay)
		[01;31m(DM[00m
			(NX
				(NE peter))[01;31m)[00m
		(SIMPX
			(VF von mir aus)
			(LK hatte)
			(MF ich alles)
			[01;36m(R[00m
				[01;36m(NF[00m
					(C was)
					[01;36m(MF[00m
						(NX
							(PPER ich))[01;36m)[00m
					(NF was ich brauchte)[01;36m)[00m[01;36m)[00m)
		(KON und)))
Step:UNSET add
{'subtrees': ['C', 'NX', 'NF'], 'family': ['VF', 'LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PRELS', 'PPER', 'PRELS', 'PPER', 'VVFIN'), 'right siblings': [], 'left siblings': [(VF (PX (APPR von) (NX (PPER mir)) (APZR aus))), (LK (VXFIN (VAFIN hatte))), (MF (NX (PPER ich)) (NX (PIS alles)))], 'auto preterminal span': (8, 13), 'span': (8, 13), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM okay)
		[01;31m(DM[00m
			(NX
				(NE peter))[01;31m)[00m
		(SIMPX
			(VF von mir aus)
			(LK hatte)
			(MF ich alles)
			[01;36m(R[00m
				(NF
					(C was)
					[01;36m(MF[00m
						(NX
							(PPER ich))[01;36m)[00m
					(NF was ich brauchte))[01;36m)[00m)
		(KON und)))
Step:Unary
{'subtrees': ['NF'], 'family': ['VF', 'LK', 'MF', 'R'], 'over_word': False, 'over words': False, 'auto preterminals': ('PRELS', 'PPER', 'PRELS', 'PPER', 'VVFIN'), 'right siblings': [], 'left siblings': [(VF (PX (APPR von) (NX (PPER mir)) (APZR aus))), (LK (VXFIN (VAFIN hatte))), (MF (NX (PPER ich)) (NX (PIS alles)))], 'auto preterminal span': (8, 13), 'span': (8, 13), 'parent': 'SIMPX', 'label': 'R', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM okay)
		[01;31m(DM[00m
			(NX
				(NE peter))[01;31m)[00m
		(SIMPX
			(VF von mir aus)
			(LK hatte)
			(MF ich alles)
			(R
				(NF
					(C was)
					[01;36m(MF[00m
						(NX
							(PPER ich))[01;36m)[00m
					(NF was ich brauchte))))
		(KON und)))
Step:Unary
{'subtrees': ['NX'], 'family': ['C', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER',), 'right siblings': [(NF (R (C (NX (PRELS was))) (MF (NX (PPER ich))) (VC (VXFIN (VVFIN brauchte)))))], 'left siblings': [(C (NX (PRELS was)))], 'auto preterminal span': (9, 10), 'span': (9, 10), 'parent': 'NF', 'label': 'MF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM okay)
		[01;31m(DM[00m
			(NX
				(NE peter))[01;31m)[00m
		(SIMPX von mir aus hatte ich alles was ich was ich brauchte)
		(KON und)))
Step:Unary
{'subtrees': ['NX'], 'family': ['DM', 'DM', 'SIMPX', 'KON'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'NE', 'APPR', 'PPER', 'APZR', 'VAFIN', 'PPER', 'PIS', 'PRELS', 'PPER', 'PRELS', 'PPER', 'VVFIN', 'KON'), 'right siblings': ['SIMPX', 'KON'], 'parent': 'TURN', 'auto preterminal span': (0, 14), 'span': (1, 2), 'left siblings': ['DM'], 'label': 'DM', 'classified_type': 'Unary', 'type': 'remove'}
(TOP okay peter von mir aus hatte ich alles was ich was ich brauchte und)

Sentence 487:
0 Initial errors
0 on fringe, 0 iterations

Sentence 488:
5 Initial errors
0 on fringe, 4 iterations
2 Error:UNSET move
1 Error:UNSET remove
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX das klingt so euphorisch)
		(NX hannover)
		(DM na gut)
		(SIMPX wenn es denn sein mus)
		(DM ja)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK sage)
			[01;31m(MF[00m [01;33m(MF[00m
				(NX es)
				(NX dir)
				(ADVX gleich)[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				(NX
					(NN urlaub))[01;31m)[00m [01;33mMF)[00m
			(LK habe)
			(MF ich vom neunzehnten juli bis mitte august)[01;31m)[00m))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['NX', 'NX', 'ADVX', 'VF'], 'mover info': [('VF', (18, 19))], 'old_family': ['VF', 'LK', 'MF'], 'start left siblings': [], 'auto preterminals': ('PDS', 'VVFIN', 'ADV', 'ADJD', 'NE', 'ITJ', 'ITJ', 'KOUS', 'PPER', 'ADV', 'VAINF', 'VMFIN', 'PTKANT', 'PPER', 'VVFIN', 'PPER', 'PPER', 'ADV', 'NN', 'VAFIN', 'PPER', 'APPRART', 'ADJA', 'NN', 'APPR', 'NN', 'NN'), 'start right siblings': ['LK', 'MF'], 'end left siblings': ['NX', 'NX', 'ADVX'], 'auto preterminal span': (0, 27), 'movers': ['VF'], 'old_parent': 'SIMPX', 'POS confusion': ('NN', 'NN'), 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SIMPX das klingt so euphorisch)
		(NX hannover)
		(DM na gut)
		(SIMPX wenn es denn sein mus)
		(DM ja)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK sage)
			(MF
				(NX es)
				(NX dir)
				(ADVX gleich)
				[01;31m(VF[00m
					(NX
						(NN urlaub))[01;31m)[00m)[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK habe)
			(MF ich vom neunzehnten juli bis mitte august)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['SIMPX', 'NX', 'DM', 'SIMPX', 'DM', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VVFIN', 'ADV', 'ADJD', 'NE', 'ITJ', 'ITJ', 'KOUS', 'PPER', 'ADV', 'VAINF', 'VMFIN', 'PTKANT', 'PPER', 'VVFIN', 'PPER', 'PPER', 'ADV', 'NN', 'VAFIN', 'PPER', 'APPRART', 'ADJA', 'NN', 'APPR', 'NN', 'NN'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 27), 'span': (13, 19), 'left siblings': ['SIMPX', 'NX', 'DM', 'SIMPX', 'DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX das klingt so euphorisch)
		(NX hannover)
		(DM na gut)
		(SIMPX wenn es denn sein mus)
		(DM ja)
		(VF ich)
		(LK sage)
		(MF
			(NX es)
			(NX dir)
			(ADVX gleich)
			[01;31m(VF[00m
				(NX
					(NN urlaub))[01;31m)[00m)
		[01;31m(SIMPX[00m
			(LK habe)
			(MF ich vom neunzehnten juli bis mitte august)[01;31m)[00m))
Step:Unary
{'subtrees': ['NX'], 'family': ['NX', 'NX', 'ADVX', 'VF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'PPER', 'ADV', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (15, 19), 'span': (18, 19), 'left siblings': ['NX', 'NX', 'ADVX'], 'label': 'VF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX das klingt so euphorisch)
		(NX hannover)
		(DM na gut)
		(SIMPX wenn es denn sein mus)
		(DM ja)
		(VF ich)
		(LK sage)
		(MF es dir gleich urlaub)
		[01;31m(SIMPX[00m
			(LK habe)
			(MF ich vom neunzehnten juli bis mitte august)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['SIMPX', 'NX', 'DM', 'SIMPX', 'DM', 'VF', 'LK', 'MF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VVFIN', 'ADV', 'ADJD', 'NE', 'ITJ', 'ITJ', 'KOUS', 'PPER', 'ADV', 'VAINF', 'VMFIN', 'PTKANT', 'PPER', 'VVFIN', 'PPER', 'PPER', 'ADV', 'NN', 'VAFIN', 'PPER', 'APPRART', 'ADJA', 'NN', 'APPR', 'NN', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 27), 'span': (19, 27), 'left siblings': ['SIMPX', 'NX', 'DM', 'SIMPX', 'DM', 'VF', 'LK', 'MF'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP das klingt so euphorisch hannover na gut wenn es denn sein mus ja ich sage es dir gleich urlaub habe ich vom neunzehnten juli bis mitte august)

Sentence 489:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Clause Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;36m(SIMPX[00m
			(SIMPX und ich sage es dir gleich)
			(SIMPX im juli wird es etwas knapp)[01;36m)[00m
		(SIMPX da ginge nur noch der neunte zehnte)))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'PPER', 'VVFIN', 'PPER', 'PPER', 'ADV', 'APPRART', 'NN', 'VAFIN', 'PPER', 'ADV', 'ADJD'), 'right siblings': [(SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VVFIN ginge))) (MF (ADVX (ADV nur)) (ADVX (ADV noch)) (NX (ART der) (NX (NX (NN neunte)) (NX (NN zehnte))))))], 'left siblings': [], 'auto preterminal span': (0, 12), 'span': (0, 12), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP und ich sage es dir gleich im juli wird es etwas knapp da ginge nur noch der neunte zehnte)

Sentence 490:
0 Initial errors
0 on fringe, 0 iterations

Sentence 491:
0 Initial errors
0 on fringe, 0 iterations

Sentence 492:
20 Initial errors
0 on fringe, 12 iterations
4 Error:NP Attachment
2 Error:Different label
2 Error:Different label
2 Error:Single Word Phrase
2 Error:PP Attachment
2 Error:Co-ordination
1 Error:PP Attachment
1 Error:NP Internal Structure
1 Error:NP Internal Structure
1 Error:UNSET remove
1 Error:PP Attachment
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX brauchen wir nur noch ein hotel)
		(DM ach)
		(SIMPX hotels habe ich)
		(DM ja)
		[01;33m(NX[00m (NX zwei moglichkeiten)
		[01;31m(NX[00m
			(NX hundert zweiundvierzig mark) [01;33mNX)[00m
			(PX im zentrum)[01;31m)[00m
		[01;31m(NX[00m
			[01;36m(NX[00m
				(NX hundert funfunddreisig mark)
				[01;36m(NX[00m [01;31m(PX[00m
					(NX funf minuten)
					(PX vom bahnhof)[01;31m)[00m[01;36m)[00m[01;36m)[00m
			(PX mit garage)[01;31m)[00m
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(LK brauchen)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX wir)
					(ADVX eh)
					(ADVX nicht)[01;31m)[00m[01;31m)[00m
			(NX
				(ADVX so)
				[01;31m(NX[00m
					(ART ein)
					(NN quatsch)[01;31m)[00m) [01;33mMF)[00m[01;36m)[00m
		[01;31m(NX[00m
			(KON und)
			[01;36m(NX[00m
				(ADVX einmal)
				[01;31m(NX[00m
					[01;31m(NX[00m
						(ADJX hundert sechsundachtzig)
						(NN mark)[01;31m)[00m
					(PX mit schwimmbad)[01;31m)[00m[01;36m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK hast)
			(MF du aber eh keine zeit)
			[01;36m(VXINF[00m [01;36m(VC[00m [01;31m(NF[00m
				[01;31m(PX[00m
					(PROP dafur)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;31m)[00m
		(SIMPX was steckt)))
Step:NP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'ADVX', 'ADVX', 'NX'], 'mover info': [('NX', (31, 34))], 'old_family': ['SIMPX', 'DM', 'SIMPX', 'DM', 'NX', 'NX', 'NX', 'SIMPX', 'NX', 'NX', 'SIMPX', 'SIMPX'], 'start left siblings': ['SIMPX', 'DM', 'SIMPX', 'DM', 'NX', 'NX', 'NX', 'SIMPX'], 'auto preterminals': ('VVFIN', 'PPER', 'ADV', 'ADV', 'ART', 'NN', 'ITJ', 'NN', 'VAFIN', 'PPER', 'PTKANT', 'CARD', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'CARD', 'CARD', 'NN', 'CARD', 'NN', 'APPRART', 'NN', 'APPR', 'NN', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADV', 'ART', 'NN', 'KON', 'ADV', 'CARD', 'CARD', 'NN', 'APPR', 'NN', 'VAFIN', 'PPER', 'ADV', 'ADV', 'PIAT', 'NN', 'PROP', 'PWS', 'VVFIN'), 'start right siblings': ['NX', 'SIMPX', 'SIMPX'], 'end left siblings': ['NX', 'ADVX', 'ADVX'], 'auto preterminal span': (0, 50), 'movers': ['NX'], 'old_parent': 'TURN', 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SIMPX brauchen wir nur noch ein hotel)
		(DM ach)
		(SIMPX hotels habe ich)
		(DM ja)
		[01;33m(NX[00m (NX zwei moglichkeiten)
		[01;31m(NX[00m
			(NX hundert zweiundvierzig mark) [01;33mNX)[00m
			(PX im zentrum)[01;31m)[00m
		[01;31m(NX[00m
			[01;36m(NX[00m
				(NX hundert funfunddreisig mark)
				[01;36m(NX[00m [01;31m(PX[00m
					(NX funf minuten)
					(PX vom bahnhof)[01;31m)[00m[01;36m)[00m[01;36m)[00m
			(PX mit garage)[01;31m)[00m
		(SIMPX
			(LK brauchen)
			(MF
				(NX wir)
				(ADVX eh)
				(ADVX nicht)
				(NX
					(ADVX so)
					[01;31m(NX[00m
						(ART ein)
						(NN quatsch)[01;31m)[00m)))
		[01;31m(NX[00m
			(KON und)
			[01;36m(NX[00m
				(ADVX einmal)
				[01;31m(NX[00m
					[01;31m(NX[00m
						(ADJX hundert sechsundachtzig)
						(NN mark)[01;31m)[00m
					(PX mit schwimmbad)[01;31m)[00m[01;36m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK hast)
			(MF du aber eh keine zeit)
			[01;36m(VXINF[00m [01;36m(VC[00m [01;31m(NF[00m
				[01;31m(PX[00m
					(PROP dafur)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;31m)[00m
		(SIMPX was steckt)))
Step:Different label
{'family': ['NX', 'NX', 'PX'], 'auto preterminal span': (21, 25), 'span': (21, 25), 'subtrees': ['NX', 'PX'], 'parent': 'NX', 'over_word': False, 'auto preterminals': ('CARD', 'NN', 'APPRART', 'NN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('PX', 'NX')}
(TOP
	(TURN
		(SIMPX brauchen wir nur noch ein hotel)
		(DM ach)
		(SIMPX hotels habe ich)
		(DM ja)
		[01;33m(NX[00m (NX zwei moglichkeiten)
		[01;31m(NX[00m
			(NX hundert zweiundvierzig mark) [01;33mNX)[00m
			(PX im zentrum)[01;31m)[00m
		[01;31m(NX[00m
			[01;36m(NX[00m
				(NX hundert funfunddreisig mark)
				(NX funf minuten vom bahnhof)[01;36m)[00m
			(PX mit garage)[01;31m)[00m
		(SIMPX
			(LK brauchen)
			(MF
				(NX wir)
				(ADVX eh)
				(ADVX nicht)
				(NX
					(ADVX so)
					[01;31m(NX[00m
						(ART ein)
						(NN quatsch)[01;31m)[00m)))
		[01;31m(NX[00m
			(KON und)
			[01;36m(NX[00m
				(ADVX einmal)
				[01;31m(NX[00m
					[01;31m(NX[00m
						(ADJX hundert sechsundachtzig)
						(NN mark)[01;31m)[00m
					(PX mit schwimmbad)[01;31m)[00m[01;36m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK hast)
			(MF du aber eh keine zeit)
			[01;36m(VXINF[00m [01;36m(VC[00m [01;31m(NF[00m
				[01;31m(PX[00m
					(PROP dafur)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;31m)[00m
		(SIMPX was steckt)))
Step:Different label
{'family': ['LK', 'MF', 'VC'], 'auto preterminal span': (47, 48), 'span': (47, 48), 'subtrees': ['PX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('PROP',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('NF', 'VC')}
(TOP
	(TURN
		(SIMPX brauchen wir nur noch ein hotel)
		(DM ach)
		(SIMPX hotels habe ich)
		(DM ja)
		[01;33m(NX[00m (NX zwei moglichkeiten)
		[01;31m(NX[00m
			(NX hundert zweiundvierzig mark) [01;33mNX)[00m
			(PX im zentrum)[01;31m)[00m
		[01;31m(NX[00m
			[01;36m(NX[00m
				(NX hundert funfunddreisig mark)
				(NX funf minuten vom bahnhof)[01;36m)[00m
			(PX mit garage)[01;31m)[00m
		(SIMPX
			(LK brauchen)
			(MF
				(NX wir)
				(ADVX eh)
				(ADVX nicht)
				(NX
					(ADVX so)
					[01;31m(NX[00m
						(ART ein)
						(NN quatsch)[01;31m)[00m)))
		[01;31m(NX[00m
			(KON und)
			[01;36m(NX[00m
				(ADVX einmal)
				[01;31m(NX[00m
					[01;31m(NX[00m
						(ADJX hundert sechsundachtzig)
						(NN mark)[01;31m)[00m
					(PX mit schwimmbad)[01;31m)[00m[01;36m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK hast)
			(MF du aber eh keine zeit)
			[01;36m(VXINF[00m
				(VC
					[01;31m(PX[00m
						(PROP dafur)[01;31m)[00m)[01;36m)[00m[01;31m)[00m
		(SIMPX was steckt)))
Step:Single Word Phrase
{'family': ['VXINF'], 'auto preterminal span': (47, 48), 'span': (47, 48), 'subtrees': ['PROP'], 'parent': 'VC', 'over_word': True, 'auto preterminals': ('PROP',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('PX', 'VXINF')}
(TOP
	(TURN
		(SIMPX brauchen wir nur noch ein hotel)
		(DM ach)
		(SIMPX hotels habe ich)
		(DM ja)
		[01;33m(NX[00m (NX zwei moglichkeiten)
		[01;31m(NX[00m
			(NX hundert zweiundvierzig mark) [01;33mNX)[00m
			(PX im zentrum)[01;31m)[00m
		[01;31m(NX[00m
			[01;36m(NX[00m
				(NX hundert funfunddreisig mark)
				(NX funf minuten vom bahnhof)[01;36m)[00m
			(PX mit garage)[01;31m)[00m
		(SIMPX
			(LK brauchen)
			(MF
				(NX wir)
				(ADVX eh)
				(ADVX nicht)
				(NX
					(ADVX so)
					[01;31m(NX[00m
						(ART ein)
						(NN quatsch)[01;31m)[00m)))
		[01;31m(NX[00m
			(KON und)
			[01;36m(NX[00m
				(ADVX einmal)
				[01;31m(NX[00m
					[01;31m(NX[00m
						(ADJX hundert sechsundachtzig)
						(NN mark)[01;31m)[00m
					(PX mit schwimmbad)[01;31m)[00m[01;36m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK hast)
			(MF du aber eh keine zeit)
			(VC dafur)[01;31m)[00m
		(SIMPX was steckt)))
Step:PP Attachment
{'new_parent': 'TURN', 'new_family': ['SIMPX', 'DM', 'SIMPX', 'DM', 'NX', 'NX', 'NX', 'PX', 'SIMPX', 'NX', 'SIMPX', 'SIMPX'], 'mover info': [('PX', (25, 27))], 'old_family': ['NX', 'NX', 'PX'], 'start left siblings': ['NX', 'NX'], 'auto preterminals': ('VVFIN', 'PPER', 'ADV', 'ADV', 'ART', 'NN', 'ITJ', 'NN', 'VAFIN', 'PPER', 'PTKANT', 'CARD', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'CARD', 'CARD', 'NN', 'CARD', 'NN', 'APPRART', 'NN', 'APPR', 'NN', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADV', 'ART', 'NN', 'KON', 'ADV', 'CARD', 'CARD', 'NN', 'APPR', 'NN', 'VAFIN', 'PPER', 'ADV', 'ADV', 'PIAT', 'NN', 'PROP', 'PWS', 'VVFIN'), 'start right siblings': [], 'end left siblings': ['SIMPX', 'DM', 'SIMPX', 'DM', 'NX', 'NX', 'NX'], 'auto preterminal span': (0, 50), 'movers': ['PX'], 'old_parent': 'NX', 'end right siblings': ['SIMPX', 'NX', 'SIMPX', 'SIMPX'], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SIMPX brauchen wir nur noch ein hotel)
		(DM ach)
		(SIMPX hotels habe ich)
		(DM ja)
		[01;33m(NX[00m (NX zwei moglichkeiten)
		[01;31m(NX[00m
			(NX hundert zweiundvierzig mark) [01;33mNX)[00m
			(PX im zentrum)[01;31m)[00m
		(NX hundert funfunddreisig mark funf minuten vom bahnhof)
		(PX mit garage)
		(SIMPX
			(LK brauchen)
			(MF
				(NX wir)
				(ADVX eh)
				(ADVX nicht)
				(NX
					(ADVX so)
					[01;31m(NX[00m
						(ART ein)
						(NN quatsch)[01;31m)[00m)))
		[01;31m(NX[00m
			(KON und)
			[01;36m(NX[00m
				(ADVX einmal)
				[01;31m(NX[00m
					[01;31m(NX[00m
						(ADJX hundert sechsundachtzig)
						(NN mark)[01;31m)[00m
					(PX mit schwimmbad)[01;31m)[00m[01;36m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(LK hast)
			(MF du aber eh keine zeit)
			(VC dafur)[01;31m)[00m
		(SIMPX was steckt)))
Step:Co-ordination
{'new_parent': 'TURN', 'new_family': ['SIMPX', 'DM', 'SIMPX', 'DM', 'NX', 'NX', 'NX', 'PX', 'SIMPX', 'KON', 'NX', 'SIMPX', 'SIMPX'], 'mover info': [('KON', (34, 35))], 'old_family': ['KON', 'ADVX', 'NX'], 'start left siblings': [], 'auto preterminals': ('VVFIN', 'PPER', 'ADV', 'ADV', 'ART', 'NN', 'ITJ', 'NN', 'VAFIN', 'PPER', 'PTKANT', 'CARD', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'CARD', 'CARD', 'NN', 'CARD', 'NN', 'APPRART', 'NN', 'APPR', 'NN', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADV', 'ART', 'NN', 'KON', 'ADV', 'CARD', 'CARD', 'NN', 'APPR', 'NN', 'VAFIN', 'PPER', 'ADV', 'ADV', 'PIAT', 'NN', 'PROP', 'PWS', 'VVFIN'), 'start right siblings': ['ADVX', 'NX'], 'end left siblings': ['SIMPX', 'DM', 'SIMPX', 'DM', 'NX', 'NX', 'NX', 'PX', 'SIMPX'], 'auto preterminal span': (0, 50), 'movers': ['KON'], 'old_parent': 'NX', 'POS confusion': ('KON', 'KON'), 'end right siblings': ['NX', 'SIMPX', 'SIMPX'], 'classified_type': 'Co-ordination', 'type': 'move'}
(TOP
	(TURN
		(SIMPX brauchen wir nur noch ein hotel)
		(DM ach)
		(SIMPX hotels habe ich)
		(DM ja)
		[01;33m(NX[00m (NX zwei moglichkeiten)
		[01;31m(NX[00m
			(NX hundert zweiundvierzig mark) [01;33mNX)[00m
			(PX im zentrum)[01;31m)[00m
		(NX hundert funfunddreisig mark funf minuten vom bahnhof)
		(PX mit garage)
		(SIMPX
			(LK brauchen)
			(MF
				(NX wir)
				(ADVX eh)
				(ADVX nicht)
				(NX
					(ADVX so)
					[01;31m(NX[00m
						(ART ein)
						(NN quatsch)[01;31m)[00m)))
		(KON und)
		(NX
			(ADVX einmal)
			[01;31m(NX[00m
				[01;31m(NX[00m
					(ADJX hundert sechsundachtzig)
					(NN mark)[01;31m)[00m
				(PX mit schwimmbad)[01;31m)[00m)
		[01;31m(SIMPX[00m
			(LK hast)
			(MF du aber eh keine zeit)
			(VC dafur)[01;31m)[00m
		(SIMPX was steckt)))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['SIMPX', 'DM', 'SIMPX', 'DM', 'NX', 'NX', 'NX', 'PX', 'SIMPX', 'KON', 'NX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'ADV', 'ADV', 'ART', 'NN', 'ITJ', 'NN', 'VAFIN', 'PPER', 'PTKANT', 'CARD', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'CARD', 'CARD', 'NN', 'CARD', 'NN', 'APPRART', 'NN', 'APPR', 'NN', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADV', 'ART', 'NN', 'KON', 'ADV', 'CARD', 'CARD', 'NN', 'APPR', 'NN', 'VAFIN', 'PPER', 'ADV', 'ADV', 'PIAT', 'NN', 'PROP', 'PWS', 'VVFIN'), 'right siblings': ['NX', 'PX', 'SIMPX', 'KON', 'NX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 50), 'span': (13, 18), 'left siblings': ['SIMPX', 'DM', 'SIMPX', 'DM', 'NX'], 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX brauchen wir nur noch ein hotel)
		(DM ach)
		(SIMPX hotels habe ich)
		(DM ja)
		[01;36m(NX[00m
			(NX zwei moglichkeiten)
			(NX hundert zweiundvierzig mark)[01;36m)[00m
		(PX im zentrum)
		(NX hundert funfunddreisig mark funf minuten vom bahnhof)
		(PX mit garage)
		(SIMPX
			(LK brauchen)
			(MF
				(NX wir)
				(ADVX eh)
				(ADVX nicht)
				(NX
					(ADVX so)
					[01;31m(NX[00m
						(ART ein)
						(NN quatsch)[01;31m)[00m)))
		(KON und)
		(NX
			(ADVX einmal)
			[01;31m(NX[00m
				[01;31m(NX[00m
					(ADJX hundert sechsundachtzig)
					(NN mark)[01;31m)[00m
				(PX mit schwimmbad)[01;31m)[00m)
		[01;31m(SIMPX[00m
			(LK hast)
			(MF du aber eh keine zeit)
			(VC dafur)[01;31m)[00m
		(SIMPX was steckt)))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['SIMPX', 'DM', 'SIMPX', 'DM', 'NX', 'PX', 'NX', 'PX', 'SIMPX', 'KON', 'NX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'NN', 'CARD', 'CARD', 'NN'), 'right siblings': [(PX (APPRART im) (NX (NN zentrum))), (NX (NX (ADJX (CARD hundert) (CARD funfunddreisig)) (NN mark)) (NX (NX (ADJX (CARD funf)) (NN minuten)) (PX (APPRART vom) (NX (NN bahnhof))))), (PX (APPR mit) (NX (NN garage))), (SIMPX (LK (VXFIN (VVFIN brauchen))) (MF (NX (PPER wir)) (ADVX (ADV eh)) (ADVX (PTKNEG nicht)) (NX (ADVX (ADV so)) (NX (ART ein) (NN quatsch))))), (KON und), (NX (ADVX (ADV einmal)) (NX (NX (ADJX (CARD hundert) (CARD sechsundachtzig)) (NN mark)) (PX (APPR mit) (NX (NN schwimmbad))))), (SIMPX (LK (VXFIN (VAFIN hast))) (MF (NX (PPER du)) (ADVX (ADV aber)) (ADVX (ADV eh)) (NX (PIAT keine) (NN zeit))) (VC (VXINF (PROP dafur)))), (SIMPX (VF (NX (PWS was))) (LK (VXFIN (VVFIN steckt))))], 'left siblings': [(SIMPX (LK (VXFIN (VVFIN brauchen))) (MF (NX (PPER wir)) (ADVX (ADV nur)) (ADVX (ADV noch)) (NX (ART ein) (NN hotel)))), (DM (ITJ ach)), (SIMPX (VF (NX (NN hotels))) (LK (VXFIN (VAFIN habe))) (MF (NX (PPER ich)))), (DM (PTKANT ja))], 'auto preterminal span': (11, 16), 'span': (11, 16), 'parent': 'TURN', 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'add'}
(TOP
	(TURN
		(SIMPX brauchen wir nur noch ein hotel)
		(DM ach)
		(SIMPX hotels habe ich)
		(DM ja)
		(NX zwei moglichkeiten hundert zweiundvierzig mark)
		(PX im zentrum)
		(NX hundert funfunddreisig mark funf minuten vom bahnhof)
		(PX mit garage)
		(SIMPX
			(LK brauchen)
			(MF
				(NX wir)
				(ADVX eh)
				(ADVX nicht)
				(NX
					(ADVX so)
					[01;31m(NX[00m
						(ART ein)
						(NN quatsch)[01;31m)[00m)))
		(KON und)
		(NX
			(ADVX einmal)
			[01;31m(NX[00m
				[01;31m(NX[00m
					(ADJX hundert sechsundachtzig)
					(NN mark)[01;31m)[00m
				(PX mit schwimmbad)[01;31m)[00m)
		[01;31m(SIMPX[00m
			(LK hast)
			(MF du aber eh keine zeit)
			(VC dafur)[01;31m)[00m
		(SIMPX was steckt)))
Step:NP Internal Structure
{'subtrees': ['ART', 'NN'], 'family': ['ADVX', 'NX'], 'over_word': False, 'over words': True, 'auto preterminals': ('ADV', 'ART', 'NN'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (31, 34), 'span': (32, 34), 'left siblings': ['ADVX'], 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX brauchen wir nur noch ein hotel)
		(DM ach)
		(SIMPX hotels habe ich)
		(DM ja)
		(NX zwei moglichkeiten hundert zweiundvierzig mark)
		(PX im zentrum)
		(NX hundert funfunddreisig mark funf minuten vom bahnhof)
		(PX mit garage)
		(SIMPX brauchen wir eh nicht so ein quatsch)
		(KON und)
		(NX
			(ADVX einmal)
			[01;31m(NX[00m
				[01;31m(NX[00m
					(ADJX hundert sechsundachtzig)
					(NN mark)[01;31m)[00m
				(PX mit schwimmbad)[01;31m)[00m)
		[01;31m(SIMPX[00m
			(LK hast)
			(MF du aber eh keine zeit)
			(VC dafur)[01;31m)[00m
		(SIMPX was steckt)))
Step:UNSET remove
{'subtrees': ['ADJX', 'NN'], 'family': ['NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'CARD', 'NN', 'APPR', 'NN'), 'right siblings': ['PX'], 'parent': 'NX', 'auto preterminal span': (36, 41), 'span': (36, 39), 'left siblings': [], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX brauchen wir nur noch ein hotel)
		(DM ach)
		(SIMPX hotels habe ich)
		(DM ja)
		(NX zwei moglichkeiten hundert zweiundvierzig mark)
		(PX im zentrum)
		(NX hundert funfunddreisig mark funf minuten vom bahnhof)
		(PX mit garage)
		(SIMPX brauchen wir eh nicht so ein quatsch)
		(KON und)
		(NX
			(ADVX einmal)
			[01;31m(NX[00m
				(ADJX hundert sechsundachtzig)
				(NN mark)
				(PX mit schwimmbad)[01;31m)[00m)
		[01;31m(SIMPX[00m
			(LK hast)
			(MF du aber eh keine zeit)
			(VC dafur)[01;31m)[00m
		(SIMPX was steckt)))
Step:PP Attachment
{'subtrees': ['ADJX', 'NN', 'PX'], 'family': ['ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'CARD', 'CARD', 'NN', 'APPR', 'NN'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (35, 41), 'span': (36, 41), 'left siblings': ['ADVX'], 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX brauchen wir nur noch ein hotel)
		(DM ach)
		(SIMPX hotels habe ich)
		(DM ja)
		(NX zwei moglichkeiten hundert zweiundvierzig mark)
		(PX im zentrum)
		(NX hundert funfunddreisig mark funf minuten vom bahnhof)
		(PX mit garage)
		(SIMPX brauchen wir eh nicht so ein quatsch)
		(KON und)
		(NX einmal hundert sechsundachtzig mark mit schwimmbad)
		[01;31m(SIMPX[00m
			(LK hast)
			(MF du aber eh keine zeit)
			(VC dafur)[01;31m)[00m
		(SIMPX was steckt)))
Step:UNSET remove
{'subtrees': ['LK', 'MF', 'VC'], 'family': ['SIMPX', 'DM', 'SIMPX', 'DM', 'NX', 'PX', 'NX', 'PX', 'SIMPX', 'KON', 'NX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'ADV', 'ADV', 'ART', 'NN', 'ITJ', 'NN', 'VAFIN', 'PPER', 'PTKANT', 'CARD', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'CARD', 'CARD', 'NN', 'CARD', 'NN', 'APPRART', 'NN', 'APPR', 'NN', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADV', 'ART', 'NN', 'KON', 'ADV', 'CARD', 'CARD', 'NN', 'APPR', 'NN', 'VAFIN', 'PPER', 'ADV', 'ADV', 'PIAT', 'NN', 'PROP', 'PWS', 'VVFIN'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 50), 'span': (41, 48), 'left siblings': ['SIMPX', 'DM', 'SIMPX', 'DM', 'NX', 'PX', 'NX', 'PX', 'SIMPX', 'KON', 'NX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP brauchen wir nur noch ein hotel ach hotels habe ich ja zwei moglichkeiten hundert zweiundvierzig mark im zentrum hundert funfunddreisig mark funf minuten vom bahnhof mit garage brauchen wir eh nicht so ein quatsch und einmal hundert sechsundachtzig mark mit schwimmbad hast du aber eh keine zeit dafur was steckt)

Sentence 493:
4 Initial errors
0 on fringe, 3 iterations
2 Error:Different label
1 Error:UNSET add
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			(VF
				(SIMPX
					(VF schloshotel)
					(LK ist)
					[01;36m(MF[00m
						(DM ja)
						[01;36m(VF[00m [01;31m(MF[00m
							(ADJX
								(ADJD standesgemas))[01;31m)[00m[01;36m)[00m[01;36m)[00m))
			(LK wurde)
			(MF ich)
			(VC sagen)[01;31m)[00m
		(DM also)
		(SIMPX schloshotel wird gebucht)))
Step:Different label
{'family': ['VF', 'LK', 'DM', 'VF'], 'auto preterminal span': (3, 4), 'span': (3, 4), 'subtrees': ['ADJX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('ADJD',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('MF', 'VF')}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			(VF
				(SIMPX
					(VF schloshotel)
					(LK ist)
					[01;36m(MF[00m
						(DM ja)
						(VF standesgemas)[01;36m)[00m))
			(LK wurde)
			(MF ich)
			(VC sagen)[01;31m)[00m
		(DM also)
		(SIMPX schloshotel wird gebucht)))
Step:UNSET add
{'subtrees': ['DM', 'VF'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADJD'), 'right siblings': [], 'left siblings': [(VF (NX (NE schloshotel))), (LK (VXFIN (VAFIN ist)))], 'auto preterminal span': (2, 4), 'span': (2, 4), 'parent': 'SIMPX', 'label': 'MF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			(VF schloshotel ist ja standesgemas)
			(LK wurde)
			(MF ich)
			(VC sagen)[01;31m)[00m
		(DM also)
		(SIMPX schloshotel wird gebucht)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['SIMPX', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NE', 'VAFIN', 'PTKANT', 'ADJD', 'VAFIN', 'PPER', 'VVINF', 'ADV', 'NE', 'VAFIN', 'VVPP'), 'right siblings': ['DM', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 11), 'span': (0, 7), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP schloshotel ist ja standesgemas wurde ich sagen also schloshotel wird gebucht)

Sentence 494:
0 Initial errors
0 on fringe, 0 iterations

Sentence 495:
0 Initial errors
0 on fringe, 0 iterations

Sentence 496:
0 Initial errors
0 on fringe, 0 iterations

Sentence 497:
0 Initial errors
0 on fringe, 0 iterations

Sentence 498:
5 Initial errors
0 on fringe, 4 iterations
2 Error:Different label
1 Error:Unary
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF grundsatzlich)
			(LK gabe)
			(MF es naturlich die moglichkeit)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					[01;31m(SIMPX[00m
						(VC
							(VXINF
								(PTKZU zu)
								(VVINF fliegen)))[01;31m)[00m
					(KON beziehungsweise)
					[01;36m(MVC[00m [01;31m(SIMPX[00m
						(MF den zug)
						(VC zu nehmen)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m)
		(SIMPX ich wurde vorschlagen wir fliegen da wir nur begrenzte zeit zur verfugung haben)
		(SIMPX ich weis nicht ob ihnen das recht ist)))
Step:Different label
{'family': ['SIMPX', 'KON', 'MVC'], 'auto preterminal span': (10, 14), 'span': (10, 14), 'subtrees': ['MF', 'VC'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('ART', 'NN', 'PTKZU', 'VVINF'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('SIMPX', 'MVC')}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF grundsatzlich)
			(LK gabe)
			(MF es naturlich die moglichkeit)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					[01;31m(SIMPX[00m
						(VC
							(VXINF
								(PTKZU zu)
								(VVINF fliegen)))[01;31m)[00m
					(KON beziehungsweise)
					(MVC den zug zu nehmen)[01;31m)[00m[01;31m)[00m)
		(SIMPX ich wurde vorschlagen wir fliegen da wir nur begrenzte zeit zur verfugung haben)
		(SIMPX ich weis nicht ob ihnen das recht ist)))
Step:Unary
{'subtrees': ['VC'], 'family': ['SIMPX', 'KON', 'MVC'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKZU', 'VVINF', 'KON', 'ART', 'NN', 'PTKZU', 'VVINF'), 'right siblings': ['KON', 'MVC'], 'parent': 'SIMPX', 'auto preterminal span': (7, 14), 'span': (7, 9), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF grundsatzlich)
			(LK gabe)
			(MF es naturlich die moglichkeit)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					(VC zu fliegen)
					(KON beziehungsweise)
					(MVC den zug zu nehmen)[01;31m)[00m[01;31m)[00m)
		(SIMPX ich wurde vorschlagen wir fliegen da wir nur begrenzte zeit zur verfugung haben)
		(SIMPX ich weis nicht ob ihnen das recht ist)))
Step:Unary
{'subtrees': ['VC', 'KON', 'MVC'], 'family': ['SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKZU', 'VVINF', 'KON', 'ART', 'NN', 'PTKZU', 'VVINF'), 'right siblings': [], 'parent': 'NF', 'auto preterminal span': (7, 14), 'span': (7, 14), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF grundsatzlich)
			(LK gabe)
			(MF es naturlich die moglichkeit)
			[01;31m(NF[00m
				(VC zu fliegen)
				(KON beziehungsweise)
				(MVC den zug zu nehmen)[01;31m)[00m)
		(SIMPX ich wurde vorschlagen wir fliegen da wir nur begrenzte zeit zur verfugung haben)
		(SIMPX ich weis nicht ob ihnen das recht ist)))
Step:UNSET remove
{'subtrees': ['VC', 'KON', 'MVC'], 'family': ['VF', 'LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'ADV', 'ART', 'NN', 'PTKZU', 'VVINF', 'KON', 'ART', 'NN', 'PTKZU', 'VVINF'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (1, 14), 'span': (7, 14), 'left siblings': ['VF', 'LK', 'MF'], 'label': 'NF', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ja grundsatzlich gabe es naturlich die moglichkeit zu fliegen beziehungsweise den zug zu nehmen ich wurde vorschlagen wir fliegen da wir nur begrenzte zeit zur verfugung haben ich weis nicht ob ihnen das recht ist)

Sentence 499:
2 Initial errors
0 on fringe, 2 iterations
1 Error:PP Attachment
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM na ja)
		(ADJX etwas spater)
		(DM also)
		(SIMPX man mus schon so funf stunden rechnen fur die fahrt)
		[01;31m(PX[00m
			(PX deswegen)
			(ADVX vielleicht)
			[01;31m(PX[00m
				(ADVX so)
				(APPR um)
				(NX sieben uhr dreiundvierzig)[01;31m)[00m[01;31m)[00m))
Step:PP Attachment
{'subtrees': ['PX', 'ADVX', 'PX'], 'family': ['DM', 'ADJX', 'DM', 'SIMPX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PTKANT', 'ADV', 'ADJD', 'ADV', 'PIS', 'VMFIN', 'ADV', 'ADV', 'CARD', 'NN', 'VVINF', 'APPR', 'ART', 'NN', 'PROP', 'ADV', 'ADV', 'APPR', 'CARD', 'NN', 'CARD'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 22), 'span': (15, 22), 'left siblings': ['DM', 'ADJX', 'DM', 'SIMPX'], 'label': 'PX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM na ja)
		(ADJX etwas spater)
		(DM also)
		(SIMPX man mus schon so funf stunden rechnen fur die fahrt)
		(PX deswegen)
		(ADVX vielleicht)
		[01;31m(PX[00m
			(ADVX so)
			(APPR um)
			(NX sieben uhr dreiundvierzig)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['ADVX', 'APPR', 'NX'], 'family': ['DM', 'ADJX', 'DM', 'SIMPX', 'PX', 'ADVX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PTKANT', 'ADV', 'ADJD', 'ADV', 'PIS', 'VMFIN', 'ADV', 'ADV', 'CARD', 'NN', 'VVINF', 'APPR', 'ART', 'NN', 'PROP', 'ADV', 'ADV', 'APPR', 'CARD', 'NN', 'CARD'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 22), 'span': (17, 22), 'left siblings': ['DM', 'ADJX', 'DM', 'SIMPX', 'PX', 'ADVX'], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP na ja etwas spater also man mus schon so funf stunden rechnen fur die fahrt deswegen vielleicht so um sieben uhr dreiundvierzig)

Sentence 500:
5 Initial errors
0 on fringe, 4 iterations
2 Error:Single Word Phrase
1 Error:UNSET add
1 Error:NP Internal Structure
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX es mus nicht das teuerste sein)
		(SIMPX zentrale lage ware naturlich ganz gunstig)
		(SIMPX
			(VF deswegen)
			(LK ware)
			[01;36m(MF[00m
				(MF
					(ADVX vielleicht)
					[01;31m(NX[00m
						(NX das zweite)
						[01;31m(NX[00m
							(PX von ihnen)
							[01;36m(ADVX[00m [01;31m(NX[00m
								(NN genannte)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m)
				(VC vorzuziehen)[01;36m)[00m)))
Step:Single Word Phrase
{'family': ['PX', 'ADVX'], 'auto preterminal span': (19, 20), 'span': (19, 20), 'subtrees': ['NN'], 'parent': 'NX', 'over_word': True, 'auto preterminals': ('NN',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('NX', 'ADVX')}
(TOP
	(TURN
		(SIMPX es mus nicht das teuerste sein)
		(SIMPX zentrale lage ware naturlich ganz gunstig)
		(SIMPX
			(VF deswegen)
			(LK ware)
			[01;36m(MF[00m
				(MF
					(ADVX vielleicht)
					[01;31m(NX[00m
						(NX das zweite)
						[01;31m(NX[00m
							(PX von ihnen)
							(ADVX genannte)[01;31m)[00m[01;31m)[00m)
				(VC vorzuziehen)[01;36m)[00m)))
Step:UNSET add
{'subtrees': ['MF', 'VC'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ART', 'NN', 'APPR', 'PPER', 'NN', 'VVIZU'), 'right siblings': [], 'left siblings': [(VF (PX (PROP deswegen))), (LK (VXFIN (VAFIN ware)))], 'auto preterminal span': (14, 21), 'span': (14, 21), 'parent': 'SIMPX', 'label': 'MF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SIMPX es mus nicht das teuerste sein)
		(SIMPX zentrale lage ware naturlich ganz gunstig)
		(SIMPX
			(VF deswegen)
			(LK ware)
			(MF
				(MF
					(ADVX vielleicht)
					[01;31m(NX[00m
						(NX das zweite)
						[01;31m(NX[00m
							(PX von ihnen)
							(ADVX genannte)[01;31m)[00m[01;31m)[00m)
				(VC vorzuziehen)))))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ART', 'NN', 'APPR', 'PPER', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (14, 20), 'span': (15, 20), 'left siblings': ['ADVX'], 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX es mus nicht das teuerste sein)
		(SIMPX zentrale lage ware naturlich ganz gunstig)
		(SIMPX
			(VF deswegen)
			(LK ware)
			(MF
				(MF
					(ADVX vielleicht)
					(NX das zweite)
					[01;31m(NX[00m
						(PX von ihnen)
						(ADVX genannte)[01;31m)[00m)
				(VC vorzuziehen)))))
Step:Modifier Attachment
{'subtrees': ['PX', 'ADVX'], 'family': ['ADVX', 'NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ART', 'NN', 'APPR', 'PPER', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (14, 20), 'span': (17, 20), 'left siblings': ['ADVX', 'NX'], 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP es mus nicht das teuerste sein zentrale lage ware naturlich ganz gunstig deswegen ware vielleicht das zweite von ihnen genannte vorzuziehen)

Sentence 501:
0 Initial errors
0 on fringe, 0 iterations

Sentence 502:
0 Initial errors
0 on fringe, 0 iterations

Sentence 503:
2 Initial errors
0 on fringe, 2 iterations
1 Error:UNSET remove
1 Error:NP Internal Structure
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX ich kann ihnen gleich mal einen vorschlag machen fur einen termin)
		[01;31m(NX[00m
			(ADVX zwar)
			[01;33m(NX[00m (NX die zweite juliwoche)[01;31m)[00m
		(NX die zweite halfte))) [01;33mNX)[00m
Step:UNSET remove
{'subtrees': ['ADVX', 'NX'], 'family': ['SIMPX', 'NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'NN', 'VVINF', 'APPR', 'ART', 'NN', 'ADV', 'ART', 'ADJA', 'NN', 'ART', 'ADJA', 'NN'), 'right siblings': ['NX'], 'parent': 'TURN', 'auto preterminal span': (0, 18), 'span': (11, 15), 'left siblings': ['SIMPX'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX ich kann ihnen gleich mal einen vorschlag machen fur einen termin)
		(ADVX zwar)
		[01;36m(NX[00m
			(NX die zweite juliwoche)
			(NX die zweite halfte)[01;36m)[00m))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['SIMPX', 'ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'ADJA', 'NN', 'ART', 'ADJA', 'NN'), 'right siblings': [], 'left siblings': [(SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VMFIN kann))) (MF (NX (PPER ihnen)) (ADVX (ADV gleich)) (ADVX (ADV mal)) (NX (ART einen) (NN vorschlag))) (VC (VXINF (VVINF machen))) (NF (PX (APPR fur) (NX (ART einen) (NN termin))))), (ADVX (ADV zwar))], 'auto preterminal span': (12, 18), 'span': (12, 18), 'parent': 'TURN', 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'add'}
(TOP ich kann ihnen gleich mal einen vorschlag machen fur einen termin zwar die zweite juliwoche die zweite halfte)

Sentence 504:
0 Initial errors
0 on fringe, 0 iterations

Sentence 505:
0 Initial errors
0 on fringe, 0 iterations

Sentence 506:
0 Initial errors
0 on fringe, 0 iterations

Sentence 507:
1 Initial errors
0 on fringe, 1 iterations
1 Error:UNSET add
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(PX
			(ADVX gleich)
			[01;36m(PX[00m
				(APPR in)
				(NX der fruh)[01;36m)[00m)
		(SIMPX dann konnten wir die partner schon am nachmittag treffen)
		(DM ja)
		(SIMPX das ware mir recht)))
Step:UNSET add
{'subtrees': ['APPR', 'NX'], 'family': ['ADVX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NN'), 'right siblings': [], 'left siblings': [(ADVX (ADV gleich))], 'auto preterminal span': (2, 5), 'span': (2, 5), 'parent': 'PX', 'label': 'PX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP ja gleich in der fruh dann konnten wir die partner schon am nachmittag treffen ja das ware mir recht)

Sentence 508:
22 Initial errors
0 on fringe, 17 iterations
3 Error:Modifier Attachment
2 Error:Different label
2 Error:Modifier Attachment
2 Error:NP Internal Structure
1 Error:UNSET add
1 Error:UNSET add
1 Error:UNSET add
1 Error:Single Word Phrase
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:Clause Attachment
1 Error:UNSET add
1 Error:Unary
1 Error:Unary
1 Error:UNSET remove
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX zur unterkunft hatte ich vorschlage zu machen)
		(SIMPX es gabe hier drei moglichkeiten)
		(DM also)
		[01;31m(NX[00m
			(NX ein hotel)
			[01;36m(R[00m
				(R
					[01;36m(R[00m
						(C was)
						(MF in der nahe des zentrums)[01;36m)[00m
					(VC liegt))
				[01;36m(MF[00m
					[01;31m(PX[00m
						(ADVX auch)
						(PX mit cafeteria und terrasse)[01;31m)[00m
					(ADJX etwas gunstiger)[01;36m)[00m[01;36m)[00m[01;31m)[00m
		(DM nee)
		(SIMPX ich sehe grade das ist in der mittleren preislage)
		[01;31m(NX[00m [01;33m(NX[00m
			(ADVX dann)
			[01;31m(NX[00m
				(NX das schloshotel) [01;33mNX)[00m
				[01;36m(SIMPX[00m [01;31m(R[00m
					[01;31m(C[00m
						(NX
							(PRELS das))[01;31m)[00m
					[01;31m(MF[00m
						(PX
							(APPR in)
							(NX der nahe vom bahnhof))[01;31m)[00m
					(VC ist)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX das fande ich auch nicht schlecht)
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF
				(NX
					[01;31m(NX[00m
						(ART das)
						[01;31m(ADJX[00m
							(ADJA teuerste)[01;31m)[00m
						[01;36m(NX[00m
							(NN [01;33m(NX[00m hotel)[01;36m)[00m[01;31m)[00m
					(NX amgeorgengarten))) [01;33mNX)[00m
			(LK bietet)
			(MF [01;33m(MF[00m
				(NX
					(NX den luxus)
					[01;31m(NX[00m
						[01;36m(NX[00m
							(ART eines) [01;33mMF)[00m[01;36m)[00m
						[01;36m(VC[00m
							[01;36m(VXINF[00m
								(NN schwimmbads)[01;36m)[00m[01;36m)[00m[01;31m)[00m))
			(NF was naturlich auch nicht zu verachten ist)[01;31m)[00m))
Step:Modifier Attachment
{'new_parent': 'VF', 'new_family': ['ART', 'ADJX', 'NX'], 'mover info': [('ART', (57, 58)), ('ADJX', (58, 59))], 'old_family': ['ART', 'ADJX', 'NN'], 'start left siblings': [], 'auto preterminals': ('ART', 'ADJA', 'NN', 'NE'), 'start right siblings': ['NN'], 'end left siblings': [], 'auto preterminal span': (57, 61), 'adding node already present': False, 'movers': ['ART', 'ADJX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': ['NX'], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'VC'}
(TOP
	(TURN
		(DM ja)
		(SIMPX zur unterkunft hatte ich vorschlage zu machen)
		(SIMPX es gabe hier drei moglichkeiten)
		(DM also)
		[01;31m(NX[00m
			(NX ein hotel)
			[01;36m(R[00m
				(R
					[01;36m(R[00m
						(C was)
						(MF in der nahe des zentrums)[01;36m)[00m
					(VC liegt))
				[01;36m(MF[00m
					[01;31m(PX[00m
						(ADVX auch)
						(PX mit cafeteria und terrasse)[01;31m)[00m
					(ADJX etwas gunstiger)[01;36m)[00m[01;36m)[00m[01;31m)[00m
		(DM nee)
		(SIMPX ich sehe grade das ist in der mittleren preislage)
		[01;31m(NX[00m [01;33m(NX[00m
			(ADVX dann)
			[01;31m(NX[00m
				(NX das schloshotel) [01;33mNX)[00m
				[01;36m(SIMPX[00m [01;31m(R[00m
					[01;31m(C[00m
						(NX
							(PRELS das))[01;31m)[00m
					[01;31m(MF[00m
						(PX
							(APPR in)
							(NX der nahe vom bahnhof))[01;31m)[00m
					(VC ist)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX das fande ich auch nicht schlecht)
		[01;31m(SIMPX[00m
			(KOORD und)
			(NX
				(VF
					(ART das)
					[01;31m(ADJX[00m
						(ADJA teuerste)[01;31m)[00m
					(NX hotel amgeorgengarten)))
			(LK bietet)
			(MF [01;33m(MF[00m
				(NX
					(NX den luxus)
					[01;31m(NX[00m
						[01;36m(NX[00m
							(ART eines) [01;33mMF)[00m[01;36m)[00m
						[01;36m(VC[00m
							[01;36m(VXINF[00m
								(NN schwimmbads)[01;36m)[00m[01;36m)[00m[01;31m)[00m))
			(NF was naturlich auch nicht zu verachten ist)[01;31m)[00m))
Step:Different label
{'family': ['NX', 'SIMPX'], 'auto preterminal span': (43, 50), 'span': (43, 50), 'subtrees': ['C', 'MF', 'VC'], 'parent': 'NX', 'over_word': False, 'auto preterminals': ('PRELS', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'VAFIN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('R', 'SIMPX')}
(TOP
	(TURN
		(DM ja)
		(SIMPX zur unterkunft hatte ich vorschlage zu machen)
		(SIMPX es gabe hier drei moglichkeiten)
		(DM also)
		[01;31m(NX[00m
			(NX ein hotel)
			[01;36m(R[00m
				(R
					[01;36m(R[00m
						(C was)
						(MF in der nahe des zentrums)[01;36m)[00m
					(VC liegt))
				[01;36m(MF[00m
					[01;31m(PX[00m
						(ADVX auch)
						(PX mit cafeteria und terrasse)[01;31m)[00m
					(ADJX etwas gunstiger)[01;36m)[00m[01;36m)[00m[01;31m)[00m
		(DM nee)
		(SIMPX ich sehe grade das ist in der mittleren preislage)
		[01;31m(NX[00m [01;33m(NX[00m
			(ADVX dann)
			[01;31m(NX[00m
				(NX das schloshotel) [01;33mNX)[00m
				(SIMPX
					[01;31m(C[00m
						(NX
							(PRELS das))[01;31m)[00m
					[01;31m(MF[00m
						(PX
							(APPR in)
							(NX der nahe vom bahnhof))[01;31m)[00m
					(VC ist))[01;31m)[00m[01;31m)[00m
		(SIMPX das fande ich auch nicht schlecht)
		[01;31m(SIMPX[00m
			(KOORD und)
			(NX
				(VF
					(ART das)
					[01;31m(ADJX[00m
						(ADJA teuerste)[01;31m)[00m
					(NX hotel amgeorgengarten)))
			(LK bietet)
			(MF [01;33m(MF[00m
				(NX
					(NX den luxus)
					[01;31m(NX[00m
						[01;36m(NX[00m
							(ART eines) [01;33mMF)[00m[01;36m)[00m
						[01;36m(VC[00m
							[01;36m(VXINF[00m
								(NN schwimmbads)[01;36m)[00m[01;36m)[00m[01;31m)[00m))
			(NF was naturlich auch nicht zu verachten ist)[01;31m)[00m))
Step:Modifier Attachment
{'new_parent': 'NX', 'new_family': ['NX', 'R', 'ADVX', 'PX', 'ADJX'], 'mover info': [('ADVX', (23, 24))], 'old_family': ['ADVX', 'PX'], 'start left siblings': [], 'auto preterminals': ('ART', 'NN', 'PRELS', 'APPR', 'ART', 'NN', 'ART', 'NN', 'VVFIN', 'ADV', 'APPR', 'NN', 'KON', 'NN', 'ADV', 'ADJD'), 'start right siblings': ['PX'], 'end left siblings': ['NX', 'R'], 'auto preterminal span': (14, 30), 'adding node already present': False, 'movers': ['ADVX'], 'old_parent': 'PX', 'POS confusion': ('ADV', 'ADV'), 'added and moved': True, 'end right siblings': ['PX', 'ADJX'], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'VC'}
(TOP
	(TURN
		(DM ja)
		(SIMPX zur unterkunft hatte ich vorschlage zu machen)
		(SIMPX es gabe hier drei moglichkeiten)
		(DM also)
		[01;31m(NX[00m
			(NX ein hotel)
			[01;36m(R[00m
				(R
					[01;36m(R[00m
						(C was)
						(MF in der nahe des zentrums)[01;36m)[00m
					(VC liegt))
				(MF auch mit cafeteria und terrasse etwas gunstiger)[01;36m)[00m[01;31m)[00m
		(DM nee)
		(SIMPX ich sehe grade das ist in der mittleren preislage)
		[01;31m(NX[00m [01;33m(NX[00m
			(ADVX dann)
			[01;31m(NX[00m
				(NX das schloshotel) [01;33mNX)[00m
				(SIMPX
					[01;31m(C[00m
						(NX
							(PRELS das))[01;31m)[00m
					[01;31m(MF[00m
						(PX
							(APPR in)
							(NX der nahe vom bahnhof))[01;31m)[00m
					(VC ist))[01;31m)[00m[01;31m)[00m
		(SIMPX das fande ich auch nicht schlecht)
		[01;31m(SIMPX[00m
			(KOORD und)
			(NX
				(VF
					(ART das)
					[01;31m(ADJX[00m
						(ADJA teuerste)[01;31m)[00m
					(NX hotel amgeorgengarten)))
			(LK bietet)
			(MF [01;33m(MF[00m
				(NX
					(NX den luxus)
					[01;31m(NX[00m
						[01;36m(NX[00m
							(ART eines) [01;33mMF)[00m[01;36m)[00m
						[01;36m(VC[00m
							[01;36m(VXINF[00m
								(NN schwimmbads)[01;36m)[00m[01;36m)[00m[01;31m)[00m))
			(NF was naturlich auch nicht zu verachten ist)[01;31m)[00m))
Step:NP Internal Structure
{'new_parent': 'NX', 'new_family': ['NX', 'NX', 'NN'], 'mover info': [('NN', (65, 66))], 'old_family': ['ART', 'NN'], 'start left siblings': ['ART'], 'auto preterminals': ('ART', 'NN', 'ART', 'NN'), 'start right siblings': [], 'end left siblings': ['NX', 'NX'], 'auto preterminal span': (62, 66), 'movers': ['NN'], 'old_parent': 'NX', 'POS confusion': ('NN', 'NN'), 'end right siblings': [], 'classified_type': 'NP Internal Structure', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(SIMPX zur unterkunft hatte ich vorschlage zu machen)
		(SIMPX es gabe hier drei moglichkeiten)
		(DM also)
		[01;31m(NX[00m
			(NX ein hotel)
			[01;36m(R[00m
				(R
					[01;36m(R[00m
						(C was)
						(MF in der nahe des zentrums)[01;36m)[00m
					(VC liegt))
				(MF auch mit cafeteria und terrasse etwas gunstiger)[01;36m)[00m[01;31m)[00m
		(DM nee)
		(SIMPX ich sehe grade das ist in der mittleren preislage)
		[01;31m(NX[00m [01;33m(NX[00m
			(ADVX dann)
			[01;31m(NX[00m
				(NX das schloshotel) [01;33mNX)[00m
				(SIMPX
					[01;31m(C[00m
						(NX
							(PRELS das))[01;31m)[00m
					[01;31m(MF[00m
						(PX
							(APPR in)
							(NX der nahe vom bahnhof))[01;31m)[00m
					(VC ist))[01;31m)[00m[01;31m)[00m
		(SIMPX das fande ich auch nicht schlecht)
		[01;31m(SIMPX[00m
			(KOORD und)
			(NX
				(VF
					(ART das)
					[01;31m(ADJX[00m
						(ADJA teuerste)[01;31m)[00m
					(NX hotel amgeorgengarten)))
			(LK bietet)
			(MF
				(NX
					[01;36m(MF[00m
						(NX den luxus)
						(NX eines)[01;36m)[00m
					[01;36m(VC[00m
						[01;36m(VXINF[00m
							(NN schwimmbads)[01;36m)[00m[01;36m)[00m))
			(NF was naturlich auch nicht zu verachten ist)[01;31m)[00m))
Step:UNSET add
{'subtrees': ['C', 'MF'], 'family': ['R', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('PRELS', 'APPR', 'ART', 'NN', 'ART', 'NN'), 'right siblings': [(VC (VXFIN (VVFIN liegt)))], 'left siblings': [], 'auto preterminal span': (16, 22), 'span': (16, 22), 'parent': 'R', 'label': 'R', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX zur unterkunft hatte ich vorschlage zu machen)
		(SIMPX es gabe hier drei moglichkeiten)
		(DM also)
		[01;31m(NX[00m
			(NX ein hotel)
			[01;36m(R[00m
				(R was in der nahe des zentrums liegt)
				(MF auch mit cafeteria und terrasse etwas gunstiger)[01;36m)[00m[01;31m)[00m
		(DM nee)
		(SIMPX ich sehe grade das ist in der mittleren preislage)
		[01;31m(NX[00m [01;33m(NX[00m
			(ADVX dann)
			[01;31m(NX[00m
				(NX das schloshotel) [01;33mNX)[00m
				(SIMPX
					[01;31m(C[00m
						(NX
							(PRELS das))[01;31m)[00m
					[01;31m(MF[00m
						(PX
							(APPR in)
							(NX der nahe vom bahnhof))[01;31m)[00m
					(VC ist))[01;31m)[00m[01;31m)[00m
		(SIMPX das fande ich auch nicht schlecht)
		[01;31m(SIMPX[00m
			(KOORD und)
			(NX
				(VF
					(ART das)
					[01;31m(ADJX[00m
						(ADJA teuerste)[01;31m)[00m
					(NX hotel amgeorgengarten)))
			(LK bietet)
			(MF
				(NX
					[01;36m(MF[00m
						(NX den luxus)
						(NX eines)[01;36m)[00m
					[01;36m(VC[00m
						[01;36m(VXINF[00m
							(NN schwimmbads)[01;36m)[00m[01;36m)[00m))
			(NF was naturlich auch nicht zu verachten ist)[01;31m)[00m))
Step:UNSET add
{'subtrees': ['R', 'MF'], 'family': ['NX', 'R'], 'over_word': False, 'over words': False, 'auto preterminals': ('PRELS', 'APPR', 'ART', 'NN', 'ART', 'NN', 'VVFIN', 'ADV', 'APPR', 'NN', 'KON', 'NN', 'ADV', 'ADJD'), 'right siblings': [], 'left siblings': [(NX (ART ein) (NN hotel))], 'auto preterminal span': (16, 30), 'span': (16, 30), 'parent': 'NX', 'label': 'R', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX zur unterkunft hatte ich vorschlage zu machen)
		(SIMPX es gabe hier drei moglichkeiten)
		(DM also)
		[01;31m(NX[00m
			(NX ein hotel)
			(R was in der nahe des zentrums liegt auch mit cafeteria und terrasse etwas gunstiger)[01;31m)[00m
		(DM nee)
		(SIMPX ich sehe grade das ist in der mittleren preislage)
		[01;31m(NX[00m [01;33m(NX[00m
			(ADVX dann)
			[01;31m(NX[00m
				(NX das schloshotel) [01;33mNX)[00m
				(SIMPX
					[01;31m(C[00m
						(NX
							(PRELS das))[01;31m)[00m
					[01;31m(MF[00m
						(PX
							(APPR in)
							(NX der nahe vom bahnhof))[01;31m)[00m
					(VC ist))[01;31m)[00m[01;31m)[00m
		(SIMPX das fande ich auch nicht schlecht)
		[01;31m(SIMPX[00m
			(KOORD und)
			(NX
				(VF
					(ART das)
					[01;31m(ADJX[00m
						(ADJA teuerste)[01;31m)[00m
					(NX hotel amgeorgengarten)))
			(LK bietet)
			(MF
				(NX
					[01;36m(MF[00m
						(NX den luxus)
						(NX eines)[01;36m)[00m
					[01;36m(VC[00m
						[01;36m(VXINF[00m
							(NN schwimmbads)[01;36m)[00m[01;36m)[00m))
			(NF was naturlich auch nicht zu verachten ist)[01;31m)[00m))
Step:UNSET add
{'subtrees': ['NX', 'NX'], 'family': ['MF', 'NN'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'ART'), 'right siblings': [(NN schwimmbads)], 'left siblings': [], 'auto preterminal span': (62, 65), 'span': (62, 65), 'parent': 'NX', 'label': 'MF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX zur unterkunft hatte ich vorschlage zu machen)
		(SIMPX es gabe hier drei moglichkeiten)
		(DM also)
		[01;31m(NX[00m
			(NX ein hotel)
			(R was in der nahe des zentrums liegt auch mit cafeteria und terrasse etwas gunstiger)[01;31m)[00m
		(DM nee)
		(SIMPX ich sehe grade das ist in der mittleren preislage)
		[01;31m(NX[00m [01;33m(NX[00m
			(ADVX dann)
			[01;31m(NX[00m
				(NX das schloshotel) [01;33mNX)[00m
				(SIMPX
					[01;31m(C[00m
						(NX
							(PRELS das))[01;31m)[00m
					[01;31m(MF[00m
						(PX
							(APPR in)
							(NX der nahe vom bahnhof))[01;31m)[00m
					(VC ist))[01;31m)[00m[01;31m)[00m
		(SIMPX das fande ich auch nicht schlecht)
		[01;31m(SIMPX[00m
			(KOORD und)
			(NX
				(VF
					(ART das)
					[01;31m(ADJX[00m
						(ADJA teuerste)[01;31m)[00m
					(NX hotel amgeorgengarten)))
			(LK bietet)
			(MF
				(NX
					(MF den luxus eines)
					[01;36m(VC[00m
						[01;36m(VXINF[00m
							(NN schwimmbads)[01;36m)[00m[01;36m)[00m))
			(NF was naturlich auch nicht zu verachten ist)[01;31m)[00m))
Step:Single Word Phrase
{'subtrees': ['NN'], 'family': ['MF', 'VXINF'], 'over_word': True, 'over words': True, 'auto preterminals': ('NN',), 'right siblings': [], 'left siblings': [(MF (NX (ART den) (NN luxus)) (NX (ART eines)))], 'auto preterminal span': (65, 66), 'span': (65, 66), 'parent': 'NX', 'label': 'VXINF', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX zur unterkunft hatte ich vorschlage zu machen)
		(SIMPX es gabe hier drei moglichkeiten)
		(DM also)
		[01;31m(NX[00m
			(NX ein hotel)
			(R was in der nahe des zentrums liegt auch mit cafeteria und terrasse etwas gunstiger)[01;31m)[00m
		(DM nee)
		(SIMPX ich sehe grade das ist in der mittleren preislage)
		[01;31m(NX[00m [01;33m(NX[00m
			(ADVX dann)
			[01;31m(NX[00m
				(NX das schloshotel) [01;33mNX)[00m
				(SIMPX
					[01;31m(C[00m
						(NX
							(PRELS das))[01;31m)[00m
					[01;31m(MF[00m
						(PX
							(APPR in)
							(NX der nahe vom bahnhof))[01;31m)[00m
					(VC ist))[01;31m)[00m[01;31m)[00m
		(SIMPX das fande ich auch nicht schlecht)
		[01;31m(SIMPX[00m
			(KOORD und)
			(NX
				(VF
					(ART das)
					[01;31m(ADJX[00m
						(ADJA teuerste)[01;31m)[00m
					(NX hotel amgeorgengarten)))
			(LK bietet)
			(MF
				(NX
					(MF den luxus eines)
					[01;36m(VC[00m
						(VXINF
							(NN schwimmbads))[01;36m)[00m))
			(NF was naturlich auch nicht zu verachten ist)[01;31m)[00m))
Step:Unary
{'subtrees': ['VXINF'], 'family': ['MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN',), 'right siblings': [], 'left siblings': [(MF (NX (ART den) (NN luxus)) (NX (ART eines)))], 'auto preterminal span': (65, 66), 'span': (65, 66), 'parent': 'NX', 'label': 'VC', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX zur unterkunft hatte ich vorschlage zu machen)
		(SIMPX es gabe hier drei moglichkeiten)
		(DM also)
		[01;31m(NX[00m
			(NX ein hotel)
			(R was in der nahe des zentrums liegt auch mit cafeteria und terrasse etwas gunstiger)[01;31m)[00m
		(DM nee)
		(SIMPX ich sehe grade das ist in der mittleren preislage)
		[01;31m(NX[00m [01;33m(NX[00m
			(ADVX dann)
			[01;31m(NX[00m
				(NX das schloshotel) [01;33mNX)[00m
				(SIMPX
					[01;31m(C[00m
						(NX
							(PRELS das))[01;31m)[00m
					[01;31m(MF[00m
						(PX
							(APPR in)
							(NX der nahe vom bahnhof))[01;31m)[00m
					(VC ist))[01;31m)[00m[01;31m)[00m
		(SIMPX das fande ich auch nicht schlecht)
		[01;31m(SIMPX[00m
			(KOORD und)
			(NX
				(VF
					(ART das)
					[01;31m(ADJX[00m
						(ADJA teuerste)[01;31m)[00m
					(NX hotel amgeorgengarten)))
			(LK bietet)
			(MF den luxus eines schwimmbads)
			(NF was naturlich auch nicht zu verachten ist)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['NX', 'R'], 'family': ['DM', 'SIMPX', 'SIMPX', 'DM', 'NX', 'DM', 'SIMPX', 'NX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'APPRART', 'NN', 'VAFIN', 'PPER', 'NN', 'PTKZU', 'VVINF', 'PPER', 'VVFIN', 'ADV', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'PRELS', 'APPR', 'ART', 'NN', 'ART', 'NN', 'VVFIN', 'ADV', 'APPR', 'NN', 'KON', 'NN', 'ADV', 'ADJD', 'PTKANT', 'PPER', 'VVFIN', 'ADV', 'PDS', 'VAFIN', 'APPR', 'ART', 'ADJA', 'NN', 'ADV', 'ART', 'NE', 'PRELS', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'VAFIN', 'PDS', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADJD', 'KON', 'ART', 'ADJA', 'NN', 'NE', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'PRELS', 'ADV', 'ADV', 'PTKNEG', 'PTKZU', 'VVINF', 'VAFIN'), 'right siblings': ['DM', 'SIMPX', 'NX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 73), 'span': (14, 30), 'left siblings': ['DM', 'SIMPX', 'SIMPX', 'DM'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX zur unterkunft hatte ich vorschlage zu machen)
		(SIMPX es gabe hier drei moglichkeiten)
		(DM also)
		(NX ein hotel)
		(R was in der nahe des zentrums liegt auch mit cafeteria und terrasse etwas gunstiger)
		(DM nee)
		(SIMPX ich sehe grade das ist in der mittleren preislage)
		[01;31m(NX[00m [01;33m(NX[00m
			(ADVX dann)
			[01;31m(NX[00m
				(NX das schloshotel) [01;33mNX)[00m
				(SIMPX
					[01;31m(C[00m
						(NX
							(PRELS das))[01;31m)[00m
					[01;31m(MF[00m
						(PX
							(APPR in)
							(NX der nahe vom bahnhof))[01;31m)[00m
					(VC ist))[01;31m)[00m[01;31m)[00m
		(SIMPX das fande ich auch nicht schlecht)
		[01;31m(SIMPX[00m
			(KOORD und)
			(NX
				(VF
					(ART das)
					[01;31m(ADJX[00m
						(ADJA teuerste)[01;31m)[00m
					(NX hotel amgeorgengarten)))
			(LK bietet)
			(MF den luxus eines schwimmbads)
			(NF was naturlich auch nicht zu verachten ist)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['ADVX', 'NX'], 'family': ['DM', 'SIMPX', 'SIMPX', 'DM', 'NX', 'R', 'DM', 'SIMPX', 'NX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'APPRART', 'NN', 'VAFIN', 'PPER', 'NN', 'PTKZU', 'VVINF', 'PPER', 'VVFIN', 'ADV', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'PRELS', 'APPR', 'ART', 'NN', 'ART', 'NN', 'VVFIN', 'ADV', 'APPR', 'NN', 'KON', 'NN', 'ADV', 'ADJD', 'PTKANT', 'PPER', 'VVFIN', 'ADV', 'PDS', 'VAFIN', 'APPR', 'ART', 'ADJA', 'NN', 'ADV', 'ART', 'NE', 'PRELS', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'VAFIN', 'PDS', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADJD', 'KON', 'ART', 'ADJA', 'NN', 'NE', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'PRELS', 'ADV', 'ADV', 'PTKNEG', 'PTKZU', 'VVINF', 'VAFIN'), 'right siblings': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 73), 'span': (40, 50), 'left siblings': ['DM', 'SIMPX', 'SIMPX', 'DM', 'NX', 'R', 'DM', 'SIMPX'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX zur unterkunft hatte ich vorschlage zu machen)
		(SIMPX es gabe hier drei moglichkeiten)
		(DM also)
		(NX ein hotel)
		(R was in der nahe des zentrums liegt auch mit cafeteria und terrasse etwas gunstiger)
		(DM nee)
		(SIMPX ich sehe grade das ist in der mittleren preislage)
		[01;33m(NX[00m (ADVX dann)
		[01;31m(NX[00m
			(NX das schloshotel) [01;33mNX)[00m
			(SIMPX
				[01;31m(C[00m
					(NX
						(PRELS das))[01;31m)[00m
				[01;31m(MF[00m
					(PX
						(APPR in)
						(NX der nahe vom bahnhof))[01;31m)[00m
				(VC ist))[01;31m)[00m
		(SIMPX das fande ich auch nicht schlecht)
		[01;31m(SIMPX[00m
			(KOORD und)
			(NX
				(VF
					(ART das)
					[01;31m(ADJX[00m
						(ADJA teuerste)[01;31m)[00m
					(NX hotel amgeorgengarten)))
			(LK bietet)
			(MF den luxus eines schwimmbads)
			(NF was naturlich auch nicht zu verachten ist)[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['NX', 'SIMPX'], 'family': ['DM', 'SIMPX', 'SIMPX', 'DM', 'NX', 'R', 'DM', 'SIMPX', 'ADVX', 'NX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'APPRART', 'NN', 'VAFIN', 'PPER', 'NN', 'PTKZU', 'VVINF', 'PPER', 'VVFIN', 'ADV', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'PRELS', 'APPR', 'ART', 'NN', 'ART', 'NN', 'VVFIN', 'ADV', 'APPR', 'NN', 'KON', 'NN', 'ADV', 'ADJD', 'PTKANT', 'PPER', 'VVFIN', 'ADV', 'PDS', 'VAFIN', 'APPR', 'ART', 'ADJA', 'NN', 'ADV', 'ART', 'NE', 'PRELS', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'VAFIN', 'PDS', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADJD', 'KON', 'ART', 'ADJA', 'NN', 'NE', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'PRELS', 'ADV', 'ADV', 'PTKNEG', 'PTKZU', 'VVINF', 'VAFIN'), 'right siblings': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 73), 'span': (41, 50), 'left siblings': ['DM', 'SIMPX', 'SIMPX', 'DM', 'NX', 'R', 'DM', 'SIMPX', 'ADVX'], 'label': 'NX', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX zur unterkunft hatte ich vorschlage zu machen)
		(SIMPX es gabe hier drei moglichkeiten)
		(DM also)
		(NX ein hotel)
		(R was in der nahe des zentrums liegt auch mit cafeteria und terrasse etwas gunstiger)
		(DM nee)
		(SIMPX ich sehe grade das ist in der mittleren preislage)
		[01;36m(NX[00m
			(ADVX dann)
			(NX das schloshotel)[01;36m)[00m
		(SIMPX
			[01;31m(C[00m
				(NX
					(PRELS das))[01;31m)[00m
			[01;31m(MF[00m
				(PX
					(APPR in)
					(NX der nahe vom bahnhof))[01;31m)[00m
			(VC ist))
		(SIMPX das fande ich auch nicht schlecht)
		[01;31m(SIMPX[00m
			(KOORD und)
			(NX
				(VF
					(ART das)
					[01;31m(ADJX[00m
						(ADJA teuerste)[01;31m)[00m
					(NX hotel amgeorgengarten)))
			(LK bietet)
			(MF den luxus eines schwimmbads)
			(NF was naturlich auch nicht zu verachten ist)[01;31m)[00m))
Step:UNSET add
{'subtrees': ['ADVX', 'NX'], 'family': ['DM', 'SIMPX', 'SIMPX', 'DM', 'NX', 'R', 'DM', 'SIMPX', 'NX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ART', 'NE'), 'right siblings': [(SIMPX (C (NX (PRELS das))) (MF (PX (APPR in) (NX (NX (ART der) (NN nahe)) (PX (APPRART vom) (NX (NN bahnhof)))))) (VC (VXFIN (VAFIN ist)))), (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VVFIN fande))) (MF (NX (PPER ich)) (ADVX (ADV auch)) (ADVX (PTKNEG nicht)) (ADJX (ADJD schlecht)))), (SIMPX (KOORD (KON und)) (NX (VF (ART das) (ADJX (ADJA teuerste)) (NX (NX (NN hotel)) (NX (NE amgeorgengarten))))) (LK (VXFIN (VVFIN bietet))) (MF (NX (MF (NX (ART den) (NN luxus)) (NX (ART eines))) (VC (VXINF (NN schwimmbads))))) (NF (R (C (NX (PRELS was))) (MF (ADVX (ADV naturlich)) (ADVX (ADV auch)) (ADVX (PTKNEG nicht))) (VC (VXINF (PTKZU zu) (VVINF verachten)) (VXFIN (VAFIN ist))))))], 'left siblings': [(DM (PTKANT ja)), (SIMPX (VF (PX (APPRART zur) (NX (NN unterkunft)))) (LK (VXFIN (VAFIN hatte))) (MF (NX (PPER ich)) (NX (NN vorschlage))) (VC (VXINF (PTKZU zu) (VVINF machen)))), (SIMPX (VF (NX (PPER es))) (LK (VXFIN (VVFIN gabe))) (MF (ADVX (ADV hier)) (NX (ADJX (CARD drei)) (NN moglichkeiten)))), (DM (ADVX (ADV also))), (NX (ART ein) (NN hotel)), (R (R (R (C (NX (PRELS was))) (MF (PX (APPR in) (NX (NX (ART der) (NN nahe)) (NX (ART des) (NN zentrums)))))) (VC (VXFIN (VVFIN liegt)))) (MF (ADVX (ADV auch)) (PX (APPR mit) (NX (NX (NN cafeteria)) (KON und) (NX (NN terrasse)))) (ADJX (ADVX (ADV etwas)) (ADJD gunstiger)))), (DM (PTKANT nee)), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN sehe))) (MF (ADVX (ADV grade))) (NF (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VAFIN ist))) (MF (PX (APPR in) (NX (ART der) (ADJX (ADJA mittleren)) (NN preislage)))))))], 'auto preterminal span': (40, 43), 'span': (40, 43), 'parent': 'TURN', 'label': 'NX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX zur unterkunft hatte ich vorschlage zu machen)
		(SIMPX es gabe hier drei moglichkeiten)
		(DM also)
		(NX ein hotel)
		(R was in der nahe des zentrums liegt auch mit cafeteria und terrasse etwas gunstiger)
		(DM nee)
		(SIMPX ich sehe grade das ist in der mittleren preislage)
		(NX dann das schloshotel)
		(SIMPX
			[01;31m(C[00m
				(NX
					(PRELS das))[01;31m)[00m
			[01;31m(MF[00m
				(PX
					(APPR in)
					(NX der nahe vom bahnhof))[01;31m)[00m
			(VC ist))
		(SIMPX das fande ich auch nicht schlecht)
		[01;31m(SIMPX[00m
			(KOORD und)
			(NX
				(VF
					(ART das)
					[01;31m(ADJX[00m
						(ADJA teuerste)[01;31m)[00m
					(NX hotel amgeorgengarten)))
			(LK bietet)
			(MF den luxus eines schwimmbads)
			(NF was naturlich auch nicht zu verachten ist)[01;31m)[00m))
Step:Unary
{'subtrees': ['NX'], 'family': ['C', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('PRELS', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'VAFIN'), 'right siblings': ['MF', 'VC'], 'parent': 'SIMPX', 'auto preterminal span': (43, 50), 'span': (43, 44), 'left siblings': [], 'label': 'C', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX zur unterkunft hatte ich vorschlage zu machen)
		(SIMPX es gabe hier drei moglichkeiten)
		(DM also)
		(NX ein hotel)
		(R was in der nahe des zentrums liegt auch mit cafeteria und terrasse etwas gunstiger)
		(DM nee)
		(SIMPX ich sehe grade das ist in der mittleren preislage)
		(NX dann das schloshotel)
		(SIMPX
			(NX das)
			[01;31m(MF[00m
				(PX
					(APPR in)
					(NX der nahe vom bahnhof))[01;31m)[00m
			(VC ist))
		(SIMPX das fande ich auch nicht schlecht)
		[01;31m(SIMPX[00m
			(KOORD und)
			(NX
				(VF
					(ART das)
					[01;31m(ADJX[00m
						(ADJA teuerste)[01;31m)[00m
					(NX hotel amgeorgengarten)))
			(LK bietet)
			(MF den luxus eines schwimmbads)
			(NF was naturlich auch nicht zu verachten ist)[01;31m)[00m))
Step:Unary
{'subtrees': ['PX'], 'family': ['NX', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('PRELS', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'VAFIN'), 'right siblings': ['VC'], 'parent': 'SIMPX', 'auto preterminal span': (43, 50), 'span': (44, 49), 'left siblings': ['NX'], 'label': 'MF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX zur unterkunft hatte ich vorschlage zu machen)
		(SIMPX es gabe hier drei moglichkeiten)
		(DM also)
		(NX ein hotel)
		(R was in der nahe des zentrums liegt auch mit cafeteria und terrasse etwas gunstiger)
		(DM nee)
		(SIMPX ich sehe grade das ist in der mittleren preislage)
		(NX dann das schloshotel)
		(SIMPX das in der nahe vom bahnhof ist)
		(SIMPX das fande ich auch nicht schlecht)
		[01;31m(SIMPX[00m
			(KOORD und)
			(NX
				(VF
					(ART das)
					[01;31m(ADJX[00m
						(ADJA teuerste)[01;31m)[00m
					(NX hotel amgeorgengarten)))
			(LK bietet)
			(MF den luxus eines schwimmbads)
			(NF was naturlich auch nicht zu verachten ist)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['KOORD', 'NX', 'LK', 'MF', 'NF'], 'family': ['DM', 'SIMPX', 'SIMPX', 'DM', 'NX', 'R', 'DM', 'SIMPX', 'NX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'APPRART', 'NN', 'VAFIN', 'PPER', 'NN', 'PTKZU', 'VVINF', 'PPER', 'VVFIN', 'ADV', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'PRELS', 'APPR', 'ART', 'NN', 'ART', 'NN', 'VVFIN', 'ADV', 'APPR', 'NN', 'KON', 'NN', 'ADV', 'ADJD', 'PTKANT', 'PPER', 'VVFIN', 'ADV', 'PDS', 'VAFIN', 'APPR', 'ART', 'ADJA', 'NN', 'ADV', 'ART', 'NE', 'PRELS', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'VAFIN', 'PDS', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADJD', 'KON', 'ART', 'ADJA', 'NN', 'NE', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'PRELS', 'ADV', 'ADV', 'PTKNEG', 'PTKZU', 'VVINF', 'VAFIN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 73), 'span': (56, 73), 'left siblings': ['DM', 'SIMPX', 'SIMPX', 'DM', 'NX', 'R', 'DM', 'SIMPX', 'NX', 'SIMPX', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX zur unterkunft hatte ich vorschlage zu machen)
		(SIMPX es gabe hier drei moglichkeiten)
		(DM also)
		(NX ein hotel)
		(R was in der nahe des zentrums liegt auch mit cafeteria und terrasse etwas gunstiger)
		(DM nee)
		(SIMPX ich sehe grade das ist in der mittleren preislage)
		(NX dann das schloshotel)
		(SIMPX das in der nahe vom bahnhof ist)
		(SIMPX das fande ich auch nicht schlecht)
		(KOORD und)
		(NX
			(VF
				(ART das)
				[01;31m(ADJX[00m
					(ADJA teuerste)[01;31m)[00m
				(NX hotel amgeorgengarten)))
		(LK bietet)
		(MF den luxus eines schwimmbads)
		(NF was naturlich auch nicht zu verachten ist)))
Step:Single Word Phrase
{'subtrees': ['ADJA'], 'family': ['ART', 'ADJX', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ART', 'ADJA', 'NN', 'NE'), 'right siblings': ['NX'], 'parent': 'VF', 'auto preterminal span': (57, 61), 'span': (58, 59), 'left siblings': ['ART'], 'label': 'ADJX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP ja zur unterkunft hatte ich vorschlage zu machen es gabe hier drei moglichkeiten also ein hotel was in der nahe des zentrums liegt auch mit cafeteria und terrasse etwas gunstiger nee ich sehe grade das ist in der mittleren preislage dann das schloshotel das in der nahe vom bahnhof ist das fande ich auch nicht schlecht und das teuerste hotel amgeorgengarten bietet den luxus eines schwimmbads was naturlich auch nicht zu verachten ist)

Sentence 509:
0 Initial errors
0 on fringe, 0 iterations

Sentence 510:
3 Initial errors
0 on fringe, 1 iterations
3 Error:UNSET move
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM nee)
		(SIMPX
			(VF ich)
			(LK hatte)
			[01;36m(MF[00m
				[01;36m(PX[00m
					(APPR in)
					[01;31m(MF[00m
						(NX
							(DP so wenig)
							(NN zeit))[01;31m)[00m[01;36m)[00m[01;36m)[00m
			(NF das ich mich darum nicht gekummert habe))
		(SIMPX aber es ware ein guter anlas)
		(NX das)))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['APPR', 'NX'], 'mover info': [('APPR', (3, 4))], 'old_family': ['VF', 'LK', 'APPR', 'MF', 'NF'], 'start left siblings': ['VF', 'LK'], 'auto preterminals': ('PPER', 'VAFIN', 'APPR', 'ADV', 'PIAT', 'NN', 'KOUS', 'PPER', 'PRF', 'PROP', 'PTKNEG', 'VVPP', 'VAFIN'), 'start right siblings': ['MF', 'NF'], 'end left siblings': [], 'auto preterminal span': (1, 14), 'adding node already present': False, 'movers': ['APPR'], 'old_parent': 'SIMPX', 'POS confusion': ('APPR', 'APPR'), 'added and moved': True, 'end right siblings': ['NX'], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'PX'}
(TOP nee ich hatte in so wenig zeit das ich mich darum nicht gekummert habe aber es ware ein guter anlas das)

Sentence 511:
0 Initial errors
0 on fringe, 0 iterations

Sentence 512:
0 Initial errors
0 on fringe, 0 iterations

Sentence 513:
24 Initial errors
0 on fringe, 18 iterations
4 Error:VP Attachment
2 Error:Single Word Phrase
2 Error:Single Word Phrase
2 Error:Clause Attachment
1 Error:Modifier Attachment
1 Error:Single Word Phrase
1 Error:UNSET remove
1 Error:UNSET add
1 Error:UNSET remove
1 Error:Clause Attachment
1 Error:Clause Attachment
1 Error:PP Attachment
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET add
1 Error:UNSET add
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX
			(VF wir)
			(LK wollten)
			[01;31m(FKOORD[00m
				(MVC uns ja fur ein meeting treffen)
				(KON beziehungsweise)
				[01;31m(MVC[00m [01;33m(MVCN (MVCN[00m
					(MF eines)
					(VC ausmachen)[01;31m)[00m[01;31m)[00m
			[01;31m(NF[00m
				[01;31m(PX[00m
					(PX in hannover) [01;33mMVCN)[00m
					(SIMPX
						(C wenn)
						(MF
							(NX ich)
							(NX mich)
							[01;36m(ADVX[00m [01;31m(ADJX[00m
								(ADJD recht)[01;31m)[00m[01;36m)[00m)
						(VC entsinne))[01;31m)[00m
				[01;31m(SIMPX[00m
					(C weil)
					[01;31m(MF[00m [01;33m(MF[00m
						(ADVX da)
						[01;36m(NX[00m
							(NX die geschaftspartner)
							(ADVX auch)
							(NX eine filiale)[01;36m)[00m
						(ADVX jetzt)[01;31m)[00m
					[01;31m(VC[00m
						[01;36m(PX[00m [01;31m(VXINF[00m
							(VVPP eroffnet)[01;31m)[00m [01;33mMF)[00m[01;36m)[00m
						[01;36m(VC[00m
							(VXFIN
								(VAFIN haben))[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m) [01;33mMVCN)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(DM ja)
			[01;31m(SIMPX[00m
				(VF ich)
				(LK weis)
				(MF nicht)[01;31m)[00m
			[01;36m(SIMPX[00m
				(VF es)
				(LK sollte)
				[01;33m(MF[00m (MF auf alle falle noch in den nachsten drei monaten)
				[01;33m(SIMPX[00m (VC geschehen)
				[01;31m(NF[00m
					[01;31m(PX[00m
						(NX meiner ansicht) [01;33mSIMPX) MF)[00m
						[01;36m(VC[00m
							(APPO nach)[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m
		(SIMPX wie sehen sie das)))
Step:VP Attachment
{'new_parent': 'MF', 'new_family': ['ADVX', 'NX', 'ADVX', 'NX', 'ADVX', 'VXINF'], 'mover info': [('VXINF', (26, 27))], 'old_family': ['VXINF', 'VXFIN'], 'start left siblings': [], 'auto preterminals': ('KOUS', 'ADV', 'ART', 'NN', 'ADV', 'ART', 'NN', 'ADV', 'VVPP', 'VAFIN'), 'start right siblings': ['VXFIN'], 'end left siblings': ['ADVX', 'NX', 'ADVX', 'NX', 'ADVX'], 'auto preterminal span': (18, 28), 'movers': ['VXINF'], 'old_parent': 'VC', 'POS confusion': ('VVPP', 'VVPP'), 'end right siblings': [], 'classified_type': 'VP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SIMPX
			(VF wir)
			(LK wollten)
			[01;31m(FKOORD[00m
				(MVC uns ja fur ein meeting treffen)
				(KON beziehungsweise)
				[01;31m(MVC[00m [01;33m(MVCN (MVCN[00m
					(MF eines)
					(VC ausmachen)[01;31m)[00m[01;31m)[00m
			[01;31m(NF[00m
				[01;31m(PX[00m
					(PX in hannover) [01;33mMVCN)[00m
					(SIMPX
						(C wenn)
						(MF
							(NX ich)
							(NX mich)
							[01;36m(ADVX[00m [01;31m(ADJX[00m
								(ADJD recht)[01;31m)[00m[01;36m)[00m)
						(VC entsinne))[01;31m)[00m
				[01;31m(SIMPX[00m
					(C weil)
					(MF
						(ADVX da)
						[01;36m(NX[00m
							(NX die geschaftspartner)
							(ADVX auch)
							(NX eine filiale)[01;36m)[00m
						(ADVX jetzt)
						[01;36m(PX[00m [01;31m(VXINF[00m
							(VVPP eroffnet)[01;31m)[00m[01;36m)[00m)
					(VC haben)[01;31m)[00m[01;31m)[00m) [01;33mMVCN)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(DM ja)
			[01;31m(SIMPX[00m
				(VF ich)
				(LK weis)
				(MF nicht)[01;31m)[00m
			[01;36m(SIMPX[00m
				(VF es)
				(LK sollte)
				[01;33m(MF[00m (MF auf alle falle noch in den nachsten drei monaten)
				[01;33m(SIMPX[00m (VC geschehen)
				[01;31m(NF[00m
					[01;31m(PX[00m
						(NX meiner ansicht) [01;33mSIMPX) MF)[00m
						[01;36m(VC[00m
							(APPO nach)[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m
		(SIMPX wie sehen sie das)))
Step:Single Word Phrase
{'family': ['NX', 'NX', 'ADVX'], 'auto preterminal span': (16, 17), 'span': (16, 17), 'subtrees': ['ADJD'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('ADJD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'ADVX')}
(TOP
	(TURN
		(SIMPX
			(VF wir)
			(LK wollten)
			[01;31m(FKOORD[00m
				(MVC uns ja fur ein meeting treffen)
				(KON beziehungsweise)
				[01;31m(MVC[00m [01;33m(MVCN (MVCN[00m
					(MF eines)
					(VC ausmachen)[01;31m)[00m[01;31m)[00m
			[01;31m(NF[00m
				[01;31m(PX[00m
					(PX in hannover) [01;33mMVCN)[00m
					(SIMPX wenn ich mich recht entsinne)[01;31m)[00m
				[01;31m(SIMPX[00m
					(C weil)
					(MF
						(ADVX da)
						[01;36m(NX[00m
							(NX die geschaftspartner)
							(ADVX auch)
							(NX eine filiale)[01;36m)[00m
						(ADVX jetzt)
						[01;36m(PX[00m [01;31m(VXINF[00m
							(VVPP eroffnet)[01;31m)[00m[01;36m)[00m)
					(VC haben)[01;31m)[00m[01;31m)[00m) [01;33mMVCN)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(DM ja)
			[01;31m(SIMPX[00m
				(VF ich)
				(LK weis)
				(MF nicht)[01;31m)[00m
			[01;36m(SIMPX[00m
				(VF es)
				(LK sollte)
				[01;33m(MF[00m (MF auf alle falle noch in den nachsten drei monaten)
				[01;33m(SIMPX[00m (VC geschehen)
				[01;31m(NF[00m
					[01;31m(PX[00m
						(NX meiner ansicht) [01;33mSIMPX) MF)[00m
						[01;36m(VC[00m
							(APPO nach)[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m
		(SIMPX wie sehen sie das)))
Step:Single Word Phrase
{'family': ['ADVX', 'NX', 'ADVX', 'NX', 'ADVX', 'PX'], 'auto preterminal span': (26, 27), 'span': (26, 27), 'subtrees': ['VVPP'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('VVPP',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VXINF', 'PX')}
(TOP
	(TURN
		(SIMPX
			(VF wir)
			(LK wollten)
			[01;31m(FKOORD[00m
				(MVC uns ja fur ein meeting treffen)
				(KON beziehungsweise)
				[01;31m(MVC[00m [01;33m(MVCN (MVCN[00m
					(MF eines)
					(VC ausmachen)[01;31m)[00m[01;31m)[00m
			[01;31m(NF[00m
				[01;31m(PX[00m
					(PX in hannover) [01;33mMVCN)[00m
					(SIMPX wenn ich mich recht entsinne)[01;31m)[00m
				[01;31m(SIMPX[00m
					(C weil)
					(MF
						(ADVX da)
						[01;36m(NX[00m
							(NX die geschaftspartner)
							(ADVX auch)
							(NX eine filiale)[01;36m)[00m
						(ADVX jetzt)
						(PX eroffnet))
					(VC haben)[01;31m)[00m[01;31m)[00m) [01;33mMVCN)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(DM ja)
			[01;31m(SIMPX[00m
				(VF ich)
				(LK weis)
				(MF nicht)[01;31m)[00m
			[01;36m(SIMPX[00m
				(VF es)
				(LK sollte)
				[01;33m(MF[00m (MF auf alle falle noch in den nachsten drei monaten)
				[01;33m(SIMPX[00m (VC geschehen)
				[01;31m(NF[00m
					[01;31m(PX[00m
						(NX meiner ansicht) [01;33mSIMPX) MF)[00m
						[01;36m(VC[00m
							(APPO nach)[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m
		(SIMPX wie sehen sie das)))
Step:Clause Attachment
{'new_parent': 'TURN', 'new_family': ['SIMPX', 'KOORD', 'DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'mover info': [('KOORD', (28, 29)), ('DM', (29, 30)), ('SIMPX', (30, 33))], 'old_family': ['KOORD', 'DM', 'SIMPX', 'VF', 'LK', 'MF', 'VC', 'NF'], 'start left siblings': [], 'auto preterminals': ('PPER', 'VMFIN', 'PRF', 'ADV', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'PIS', 'VVINF', 'APPR', 'NE', 'KOUS', 'PPER', 'PRF', 'ADJD', 'VVFIN', 'KOUS', 'ADV', 'ART', 'NN', 'ADV', 'ART', 'NN', 'ADV', 'VVPP', 'VAFIN', 'KON', 'PTKANT', 'PPER', 'VVFIN', 'PTKNEG', 'PPER', 'VMFIN', 'APPR', 'PIDAT', 'NN', 'ADV', 'APPR', 'ART', 'ADJA', 'CARD', 'NN', 'VVINF', 'PPOSAT', 'NN', 'APPO', 'PWAV', 'VVFIN', 'PPER', 'PDS'), 'start right siblings': ['VF', 'LK', 'MF', 'VC', 'NF'], 'end left siblings': ['SIMPX'], 'auto preterminal span': (0, 52), 'movers': ['KOORD', 'DM', 'SIMPX'], 'old_parent': 'SIMPX', 'end right siblings': ['SIMPX', 'SIMPX'], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(SIMPX
			(VF wir)
			(LK wollten)
			[01;31m(FKOORD[00m
				(MVC uns ja fur ein meeting treffen)
				(KON beziehungsweise)
				[01;31m(MVC[00m [01;33m(MVCN (MVCN[00m
					(MF eines)
					(VC ausmachen)[01;31m)[00m[01;31m)[00m
			[01;31m(NF[00m
				[01;31m(PX[00m
					(PX in hannover) [01;33mMVCN)[00m
					(SIMPX wenn ich mich recht entsinne)[01;31m)[00m
				[01;31m(SIMPX[00m
					(C weil)
					(MF
						(ADVX da)
						[01;36m(NX[00m
							(NX die geschaftspartner)
							(ADVX auch)
							(NX eine filiale)[01;36m)[00m
						(ADVX jetzt)
						(PX eroffnet))
					(VC haben)[01;31m)[00m[01;31m)[00m) [01;33mMVCN)[00m
		(KOORD und)
		(DM ja)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK weis)
			(MF nicht)[01;31m)[00m
		(SIMPX
			(VF es)
			(LK sollte)
			[01;33m(MF[00m (MF auf alle falle noch in den nachsten drei monaten)
			[01;33m(SIMPX[00m (VC geschehen)
			[01;31m(NF[00m
				[01;31m(PX[00m
					(NX meiner ansicht) [01;33mSIMPX) MF)[00m
					[01;36m(VC[00m
						(APPO nach)[01;36m)[00m[01;31m)[00m[01;31m)[00m)
		(SIMPX wie sehen sie das)))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADVX', 'NX'], 'family': ['ADVX', 'NX', 'ADVX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'ADV', 'ART', 'NN'), 'right siblings': [(ADVX (ADV jetzt)), (PX (VVPP eroffnet))], 'left siblings': [(ADVX (ADV da))], 'auto preterminal span': (20, 25), 'span': (20, 25), 'parent': 'MF', 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		(SIMPX
			(VF wir)
			(LK wollten)
			[01;31m(FKOORD[00m
				(MVC uns ja fur ein meeting treffen)
				(KON beziehungsweise)
				[01;31m(MVC[00m [01;33m(MVCN (MVCN[00m
					(MF eines)
					(VC ausmachen)[01;31m)[00m[01;31m)[00m
			[01;31m(NF[00m
				[01;31m(PX[00m
					(PX in hannover) [01;33mMVCN)[00m
					(SIMPX wenn ich mich recht entsinne)[01;31m)[00m
				[01;31m(SIMPX[00m
					(C weil)
					(MF da die geschaftspartner auch eine filiale jetzt eroffnet)
					(VC haben)[01;31m)[00m[01;31m)[00m) [01;33mMVCN)[00m
		(KOORD und)
		(DM ja)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK weis)
			(MF nicht)[01;31m)[00m
		(SIMPX
			(VF es)
			(LK sollte)
			[01;33m(MF[00m (MF auf alle falle noch in den nachsten drei monaten)
			[01;33m(SIMPX[00m (VC geschehen)
			[01;31m(NF[00m
				[01;31m(PX[00m
					(NX meiner ansicht) [01;33mSIMPX) MF)[00m
					[01;36m(VC[00m
						(APPO nach)[01;36m)[00m[01;31m)[00m[01;31m)[00m)
		(SIMPX wie sehen sie das)))
Step:Single Word Phrase
{'subtrees': ['APPO'], 'family': ['NX', 'VC'], 'over_word': True, 'over words': True, 'auto preterminals': ('APPO',), 'right siblings': [], 'left siblings': [(NX (PPOSAT meiner) (NN ansicht))], 'auto preterminal span': (47, 48), 'span': (47, 48), 'parent': 'PX', 'label': 'VC', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SIMPX
			(VF wir)
			(LK wollten)
			[01;31m(FKOORD[00m
				(MVC uns ja fur ein meeting treffen)
				(KON beziehungsweise)
				[01;31m(MVC[00m [01;33m(MVCN (MVCN[00m
					(MF eines)
					(VC ausmachen)[01;31m)[00m[01;31m)[00m
			[01;31m(NF[00m
				[01;31m(PX[00m
					(PX in hannover) [01;33mMVCN)[00m
					(SIMPX wenn ich mich recht entsinne)[01;31m)[00m
				[01;31m(SIMPX[00m
					(C weil)
					(MF da die geschaftspartner auch eine filiale jetzt eroffnet)
					(VC haben)[01;31m)[00m[01;31m)[00m) [01;33mMVCN)[00m
		(KOORD und)
		(DM ja)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK weis)
			(MF nicht)[01;31m)[00m
		(SIMPX
			(VF es)
			(LK sollte)
			[01;33m(MF[00m (MF auf alle falle noch in den nachsten drei monaten)
			[01;33m(SIMPX[00m (VC geschehen)
			[01;31m(NF[00m
				[01;31m(PX[00m
					(NX meiner ansicht) [01;33mSIMPX) MF)[00m
					(VC nach)[01;31m)[00m[01;31m)[00m)
		(SIMPX wie sehen sie das)))
Step:UNSET remove
{'subtrees': ['MVC', 'KON', 'MVC'], 'family': ['VF', 'LK', 'FKOORD', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VMFIN', 'PRF', 'ADV', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'PIS', 'VVINF', 'APPR', 'NE', 'KOUS', 'PPER', 'PRF', 'ADJD', 'VVFIN', 'KOUS', 'ADV', 'ART', 'NN', 'ADV', 'ART', 'NN', 'ADV', 'VVPP', 'VAFIN'), 'right siblings': ['NF'], 'parent': 'SIMPX', 'auto preterminal span': (0, 28), 'span': (2, 11), 'left siblings': ['VF', 'LK'], 'label': 'FKOORD', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX
			(VF wir)
			(LK wollten)
			(MVC uns ja fur ein meeting treffen)
			(KON beziehungsweise)
			[01;36m(MVCN[00m
				[01;31m(MVC[00m [01;33m(MVCN[00m
					(MF eines)
					(VC ausmachen)[01;31m)[00m
				[01;31m(NF[00m
					[01;31m(PX[00m
						(PX in hannover) [01;33mMVCN)[00m
						(SIMPX wenn ich mich recht entsinne)[01;31m)[00m
					[01;31m(SIMPX[00m
						(C weil)
						(MF da die geschaftspartner auch eine filiale jetzt eroffnet)
						(VC haben)[01;31m)[00m[01;31m)[00m[01;36m)[00m)
		(KOORD und)
		(DM ja)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK weis)
			(MF nicht)[01;31m)[00m
		(SIMPX
			(VF es)
			(LK sollte)
			[01;33m(MF[00m (MF auf alle falle noch in den nachsten drei monaten)
			[01;33m(SIMPX[00m (VC geschehen)
			[01;31m(NF[00m
				[01;31m(PX[00m
					(NX meiner ansicht) [01;33mSIMPX) MF)[00m
					(VC nach)[01;31m)[00m[01;31m)[00m)
		(SIMPX wie sehen sie das)))
Step:UNSET add
{'subtrees': ['MVC', 'NF'], 'family': ['VF', 'LK', 'MVC', 'KON', 'MVCN'], 'over_word': False, 'over words': False, 'auto preterminals': ('PIS', 'VVINF', 'APPR', 'NE', 'KOUS', 'PPER', 'PRF', 'ADJD', 'VVFIN', 'KOUS', 'ADV', 'ART', 'NN', 'ADV', 'ART', 'NN', 'ADV', 'VVPP', 'VAFIN'), 'right siblings': [], 'left siblings': [(VF (NX (PPER wir))), (LK (VXFIN (VMFIN wollten))), (MVC (MF (NX (PRF uns)) (ADVX (ADV ja)) (PX (APPR fur) (NX (ART ein) (NN meeting)))) (VC (VXINF (VVINF treffen)))), (KON beziehungsweise)], 'auto preterminal span': (9, 28), 'span': (9, 28), 'parent': 'SIMPX', 'label': 'MVCN', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SIMPX
			(VF wir)
			(LK wollten)
			(MVC uns ja fur ein meeting treffen)
			(KON beziehungsweise)
			(MVCN [01;33m(MVCN[00m
				[01;31m(MVC[00m
					(MF eines)
					(VC ausmachen)[01;31m)[00m
				[01;31m(NF[00m
					[01;31m(PX[00m
						(PX in hannover) [01;33mMVCN)[00m
						(SIMPX wenn ich mich recht entsinne)[01;31m)[00m
					[01;31m(SIMPX[00m
						(C weil)
						(MF da die geschaftspartner auch eine filiale jetzt eroffnet)
						(VC haben)[01;31m)[00m[01;31m)[00m))
		(KOORD und)
		(DM ja)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK weis)
			(MF nicht)[01;31m)[00m
		(SIMPX
			(VF es)
			(LK sollte)
			[01;33m(MF[00m (MF auf alle falle noch in den nachsten drei monaten)
			[01;33m(SIMPX[00m (VC geschehen)
			[01;31m(NF[00m
				[01;31m(PX[00m
					(NX meiner ansicht) [01;33mSIMPX) MF)[00m
					(VC nach)[01;31m)[00m[01;31m)[00m)
		(SIMPX wie sehen sie das)))
Step:UNSET remove
{'subtrees': ['MF', 'VC'], 'family': ['MVC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PIS', 'VVINF', 'APPR', 'NE', 'KOUS', 'PPER', 'PRF', 'ADJD', 'VVFIN', 'KOUS', 'ADV', 'ART', 'NN', 'ADV', 'ART', 'NN', 'ADV', 'VVPP', 'VAFIN'), 'right siblings': ['NF'], 'parent': 'MVCN', 'auto preterminal span': (9, 28), 'span': (9, 11), 'left siblings': [], 'label': 'MVC', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX
			(VF wir)
			(LK wollten)
			(MVC uns ja fur ein meeting treffen)
			(KON beziehungsweise)
			(MVCN [01;33m(MVCN[00m
				(MF eines)
				(VC ausmachen)
				[01;31m(NF[00m
					[01;31m(PX[00m
						(PX in hannover) [01;33mMVCN)[00m
						(SIMPX wenn ich mich recht entsinne)[01;31m)[00m
					[01;31m(SIMPX[00m
						(C weil)
						(MF da die geschaftspartner auch eine filiale jetzt eroffnet)
						(VC haben)[01;31m)[00m[01;31m)[00m))
		(KOORD und)
		(DM ja)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK weis)
			(MF nicht)[01;31m)[00m
		(SIMPX
			(VF es)
			(LK sollte)
			[01;33m(MF[00m (MF auf alle falle noch in den nachsten drei monaten)
			[01;33m(SIMPX[00m (VC geschehen)
			[01;31m(NF[00m
				[01;31m(PX[00m
					(NX meiner ansicht) [01;33mSIMPX) MF)[00m
					(VC nach)[01;31m)[00m[01;31m)[00m)
		(SIMPX wie sehen sie das)))
Step:Clause Attachment
{'subtrees': ['PX', 'SIMPX'], 'family': ['PX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'NE', 'KOUS', 'PPER', 'PRF', 'ADJD', 'VVFIN', 'KOUS', 'ADV', 'ART', 'NN', 'ADV', 'ART', 'NN', 'ADV', 'VVPP', 'VAFIN'), 'right siblings': ['SIMPX'], 'parent': 'NF', 'auto preterminal span': (11, 28), 'span': (11, 18), 'left siblings': [], 'label': 'PX', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX
			(VF wir)
			(LK wollten)
			(MVC uns ja fur ein meeting treffen)
			(KON beziehungsweise)
			(MVCN [01;33m(MVCN[00m
				(MF eines)
				(VC ausmachen)
				[01;31m(NF[00m
					(PX in hannover) [01;33mMVCN)[00m
					(SIMPX wenn ich mich recht entsinne)
					[01;31m(SIMPX[00m
						(C weil)
						(MF da die geschaftspartner auch eine filiale jetzt eroffnet)
						(VC haben)[01;31m)[00m[01;31m)[00m))
		(KOORD und)
		(DM ja)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK weis)
			(MF nicht)[01;31m)[00m
		(SIMPX
			(VF es)
			(LK sollte)
			[01;33m(MF[00m (MF auf alle falle noch in den nachsten drei monaten)
			[01;33m(SIMPX[00m (VC geschehen)
			[01;31m(NF[00m
				[01;31m(PX[00m
					(NX meiner ansicht) [01;33mSIMPX) MF)[00m
					(VC nach)[01;31m)[00m[01;31m)[00m)
		(SIMPX wie sehen sie das)))
Step:Clause Attachment
{'subtrees': ['PX', 'SIMPX', 'SIMPX'], 'family': ['MF', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PIS', 'VVINF', 'APPR', 'NE', 'KOUS', 'PPER', 'PRF', 'ADJD', 'VVFIN', 'KOUS', 'ADV', 'ART', 'NN', 'ADV', 'ART', 'NN', 'ADV', 'VVPP', 'VAFIN'), 'right siblings': [], 'parent': 'MVCN', 'auto preterminal span': (9, 28), 'span': (11, 28), 'left siblings': ['MF', 'VC'], 'label': 'NF', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX
			(VF wir)
			(LK wollten)
			(MVC uns ja fur ein meeting treffen)
			(KON beziehungsweise)
			(MVCN
				[01;36m(MVCN[00m
					(MF eines)
					(VC ausmachen)
					(PX in hannover)[01;36m)[00m
				(SIMPX wenn ich mich recht entsinne)
				[01;31m(SIMPX[00m
					(C weil)
					(MF da die geschaftspartner auch eine filiale jetzt eroffnet)
					(VC haben)[01;31m)[00m))
		(KOORD und)
		(DM ja)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK weis)
			(MF nicht)[01;31m)[00m
		(SIMPX
			(VF es)
			(LK sollte)
			[01;33m(MF[00m (MF auf alle falle noch in den nachsten drei monaten)
			[01;33m(SIMPX[00m (VC geschehen)
			[01;31m(NF[00m
				[01;31m(PX[00m
					(NX meiner ansicht) [01;33mSIMPX) MF)[00m
					(VC nach)[01;31m)[00m[01;31m)[00m)
		(SIMPX wie sehen sie das)))
Step:PP Attachment
{'subtrees': ['MF', 'VC', 'PX'], 'family': ['MVCN', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PIS', 'VVINF', 'APPR', 'NE'), 'right siblings': [(SIMPX (C (KOUS wenn)) (MF (NX (PPER ich)) (NX (PRF mich)) (ADVX (ADJD recht))) (VC (VXFIN (VVFIN entsinne)))), (SIMPX (C (KOUS weil)) (MF (ADVX (ADV da)) (NX (NX (ART die) (NN geschaftspartner)) (ADVX (ADV auch)) (NX (ART eine) (NN filiale))) (ADVX (ADV jetzt)) (PX (VVPP eroffnet))) (VC (VXFIN (VAFIN haben))))], 'left siblings': [], 'auto preterminal span': (9, 13), 'span': (9, 13), 'parent': 'MVCN', 'label': 'MVCN', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(SIMPX
			(VF wir)
			(LK wollten)
			(MVC uns ja fur ein meeting treffen)
			(KON beziehungsweise)
			(MVCN
				(MVCN eines ausmachen in hannover)
				(SIMPX wenn ich mich recht entsinne)
				[01;31m(SIMPX[00m
					(C weil)
					(MF da die geschaftspartner auch eine filiale jetzt eroffnet)
					(VC haben)[01;31m)[00m))
		(KOORD und)
		(DM ja)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK weis)
			(MF nicht)[01;31m)[00m
		(SIMPX
			(VF es)
			(LK sollte)
			[01;33m(MF[00m (MF auf alle falle noch in den nachsten drei monaten)
			[01;33m(SIMPX[00m (VC geschehen)
			[01;31m(NF[00m
				[01;31m(PX[00m
					(NX meiner ansicht) [01;33mSIMPX) MF)[00m
					(VC nach)[01;31m)[00m[01;31m)[00m)
		(SIMPX wie sehen sie das)))
Step:UNSET remove
{'subtrees': ['C', 'MF', 'VC'], 'family': ['MVCN', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PIS', 'VVINF', 'APPR', 'NE', 'KOUS', 'PPER', 'PRF', 'ADJD', 'VVFIN', 'KOUS', 'ADV', 'ART', 'NN', 'ADV', 'ART', 'NN', 'ADV', 'VVPP', 'VAFIN'), 'right siblings': [], 'parent': 'MVCN', 'auto preterminal span': (9, 28), 'span': (18, 28), 'left siblings': ['MVCN', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX wir wollten uns ja fur ein meeting treffen beziehungsweise eines ausmachen in hannover wenn ich mich recht entsinne weil da die geschaftspartner auch eine filiale jetzt eroffnet haben)
		(KOORD und)
		(DM ja)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK weis)
			(MF nicht)[01;31m)[00m
		(SIMPX
			(VF es)
			(LK sollte)
			[01;33m(MF[00m (MF auf alle falle noch in den nachsten drei monaten)
			[01;33m(SIMPX[00m (VC geschehen)
			[01;31m(NF[00m
				[01;31m(PX[00m
					(NX meiner ansicht) [01;33mSIMPX) MF)[00m
					(VC nach)[01;31m)[00m[01;31m)[00m)
		(SIMPX wie sehen sie das)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['SIMPX', 'KOORD', 'DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VMFIN', 'PRF', 'ADV', 'APPR', 'ART', 'NN', 'VVINF', 'KON', 'PIS', 'VVINF', 'APPR', 'NE', 'KOUS', 'PPER', 'PRF', 'ADJD', 'VVFIN', 'KOUS', 'ADV', 'ART', 'NN', 'ADV', 'ART', 'NN', 'ADV', 'VVPP', 'VAFIN', 'KON', 'PTKANT', 'PPER', 'VVFIN', 'PTKNEG', 'PPER', 'VMFIN', 'APPR', 'PIDAT', 'NN', 'ADV', 'APPR', 'ART', 'ADJA', 'CARD', 'NN', 'VVINF', 'PPOSAT', 'NN', 'APPO', 'PWAV', 'VVFIN', 'PPER', 'PDS'), 'right siblings': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 52), 'span': (30, 33), 'left siblings': ['SIMPX', 'KOORD', 'DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX wir wollten uns ja fur ein meeting treffen beziehungsweise eines ausmachen in hannover wenn ich mich recht entsinne weil da die geschaftspartner auch eine filiale jetzt eroffnet haben)
		(KOORD und)
		(DM ja)
		(VF ich)
		(LK weis)
		(MF nicht)
		(SIMPX
			(VF es)
			(LK sollte)
			[01;33m(MF[00m (MF auf alle falle noch in den nachsten drei monaten)
			[01;33m(SIMPX[00m (VC geschehen)
			[01;31m(NF[00m
				[01;31m(PX[00m
					(NX meiner ansicht) [01;33mSIMPX) MF)[00m
					(VC nach)[01;31m)[00m[01;31m)[00m)
		(SIMPX wie sehen sie das)))
Step:Unary
{'subtrees': ['NX', 'VC'], 'family': ['PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPOSAT', 'NN', 'APPO'), 'right siblings': [], 'parent': 'NF', 'auto preterminal span': (45, 48), 'span': (45, 48), 'left siblings': [], 'label': 'PX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX wir wollten uns ja fur ein meeting treffen beziehungsweise eines ausmachen in hannover wenn ich mich recht entsinne weil da die geschaftspartner auch eine filiale jetzt eroffnet haben)
		(KOORD und)
		(DM ja)
		(VF ich)
		(LK weis)
		(MF nicht)
		(SIMPX
			(VF es)
			(LK sollte)
			[01;33m(MF[00m (MF auf alle falle noch in den nachsten drei monaten)
			[01;33m(SIMPX[00m (VC geschehen)
			[01;31m(NF[00m
				(NX meiner ansicht) [01;33mSIMPX) MF)[00m
				(VC nach)[01;31m)[00m)
		(SIMPX wie sehen sie das)))
Step:UNSET remove
{'subtrees': ['NX', 'VC'], 'family': ['VF', 'LK', 'MF', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VMFIN', 'APPR', 'PIDAT', 'NN', 'ADV', 'APPR', 'ART', 'ADJA', 'CARD', 'NN', 'VVINF', 'PPOSAT', 'NN', 'APPO'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (33, 48), 'span': (45, 48), 'left siblings': ['VF', 'LK', 'MF', 'VC'], 'label': 'NF', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX wir wollten uns ja fur ein meeting treffen beziehungsweise eines ausmachen in hannover wenn ich mich recht entsinne weil da die geschaftspartner auch eine filiale jetzt eroffnet haben)
		(KOORD und)
		(DM ja)
		(VF ich)
		(LK weis)
		(MF nicht)
		(SIMPX
			(VF es)
			(LK sollte)
			[01;36m(MF[00m
				(MF auf alle falle noch in den nachsten drei monaten)
				[01;36m(SIMPX[00m
					(VC geschehen)
					(NX meiner ansicht)[01;36m)[00m[01;36m)[00m
			(VC nach))
		(SIMPX wie sehen sie das)))
Step:UNSET add
{'subtrees': ['MF', 'VC', 'NX'], 'family': ['VF', 'LK', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'PIDAT', 'NN', 'ADV', 'APPR', 'ART', 'ADJA', 'CARD', 'NN', 'VVINF', 'PPOSAT', 'NN'), 'right siblings': [(VC (APPO nach))], 'left siblings': [(VF (NX (PPER es))), (LK (VXFIN (VMFIN sollte)))], 'auto preterminal span': (35, 47), 'span': (35, 47), 'parent': 'SIMPX', 'label': 'MF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SIMPX wir wollten uns ja fur ein meeting treffen beziehungsweise eines ausmachen in hannover wenn ich mich recht entsinne weil da die geschaftspartner auch eine filiale jetzt eroffnet haben)
		(KOORD und)
		(DM ja)
		(VF ich)
		(LK weis)
		(MF nicht)
		(SIMPX
			(VF es)
			(LK sollte)
			(MF
				(MF auf alle falle noch in den nachsten drei monaten)
				[01;36m(SIMPX[00m
					(VC geschehen)
					(NX meiner ansicht)[01;36m)[00m)
			(VC nach))
		(SIMPX wie sehen sie das)))
Step:UNSET add
{'subtrees': ['VC', 'NX'], 'family': ['MF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVINF', 'PPOSAT', 'NN'), 'right siblings': [], 'left siblings': [(MF (PX (APPR auf) (NX (PIDAT alle) (NN falle))) (ADVX (ADV noch)) (PX (APPR in) (NX (ART den) (ADJX (ADJA nachsten)) (ADJX (CARD drei)) (NN monaten))))], 'auto preterminal span': (44, 47), 'span': (44, 47), 'parent': 'MF', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP wir wollten uns ja fur ein meeting treffen beziehungsweise eines ausmachen in hannover wenn ich mich recht entsinne weil da die geschaftspartner auch eine filiale jetzt eroffnet haben und ja ich weis nicht es sollte auf alle falle noch in den nachsten drei monaten geschehen meiner ansicht nach wie sehen sie das)

Sentence 514:
7 Initial errors
0 on fringe, 4 iterations
2 Error:Different label
2 Error:Modifier Attachment
2 Error:Modifier Attachment
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX november kame dann in frage)
		[01;31m(SIMPX[00m
			(C wenn)
			(MF
				(ADVX dann)
				[01;31m(NX[00m
					(ADVX so)
					[01;36m(NX[00m
						(ART die)
						(ADJX zweite)
						(NN woche)[01;36m)[00m[01;31m)[00m)[01;31m)[00m
		(SIMPX
			(VF ich)
			(LK glaube)
			(NF
				(SIMPX
					(VF die zweite woche)
					(LK ware)
					[01;36m(ADJX[00m
						(MF
							[01;36m(ADVX[00m [01;31m(ADJX[00m
								(ADVX ganz)
								(ADJD gut)[01;31m)[00m[01;36m)[00m
							[01;31m(ADJX[00m
								(ADJD machbar)[01;31m)[00m)[01;36m)[00m)))
		(SIMPX wie sieht es da)
		(APPR bei)))
Step:Different label
{'family': ['ADVX', 'ADJX'], 'auto preterminal span': (18, 20), 'span': (18, 20), 'subtrees': ['ADVX', 'ADJD'], 'parent': 'MF', 'over_word': False, 'auto preterminals': ('ADV', 'ADJD'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('ADJX', 'ADVX')}
(TOP
	(TURN
		(DM ja)
		(SIMPX november kame dann in frage)
		[01;31m(SIMPX[00m
			(C wenn)
			(MF
				(ADVX dann)
				[01;31m(NX[00m
					(ADVX so)
					[01;36m(NX[00m
						(ART die)
						(ADJX zweite)
						(NN woche)[01;36m)[00m[01;31m)[00m)[01;31m)[00m
		(SIMPX
			(VF ich)
			(LK glaube)
			(NF
				(SIMPX
					(VF die zweite woche)
					(LK ware)
					[01;36m(ADJX[00m
						(MF
							(ADVX ganz gut)
							[01;31m(ADJX[00m
								(ADJD machbar)[01;31m)[00m)[01;36m)[00m)))
		(SIMPX wie sieht es da)
		(APPR bei)))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['ADVX', 'ADVX', 'NX'], 'mover info': [('ADVX', (8, 9))], 'old_family': ['ADVX', 'ART', 'ADJX', 'NN'], 'start left siblings': [], 'auto preterminals': ('ADV', 'ADV', 'ART', 'ADJA', 'NN'), 'start right siblings': ['ART', 'ADJX', 'NN'], 'end left siblings': ['ADVX'], 'auto preterminal span': (7, 12), 'movers': ['ADVX'], 'old_parent': 'NX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['NX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(SIMPX november kame dann in frage)
		[01;31m(SIMPX[00m
			(C wenn)
			(MF dann so die zweite woche)[01;31m)[00m
		(SIMPX
			(VF ich)
			(LK glaube)
			(NF
				(SIMPX
					(VF die zweite woche)
					(LK ware)
					[01;36m(ADJX[00m
						(MF
							(ADVX ganz gut)
							[01;31m(ADJX[00m
								(ADJD machbar)[01;31m)[00m)[01;36m)[00m)))
		(SIMPX wie sieht es da)
		(APPR bei)))
Step:Modifier Attachment
{'new_parent': 'ADJX', 'new_family': ['ADVX', 'ADJD'], 'mover info': [('ADVX', (18, 20))], 'old_family': ['ADVX', 'ADJX'], 'start left siblings': [], 'auto preterminals': ('ADV', 'ADJD', 'ADJD'), 'start right siblings': ['ADJX'], 'end left siblings': [], 'auto preterminal span': (18, 21), 'movers': ['ADVX'], 'old_parent': 'MF', 'end right siblings': ['ADJD'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(SIMPX november kame dann in frage)
		[01;31m(SIMPX[00m
			(C wenn)
			(MF dann so die zweite woche)[01;31m)[00m
		(SIMPX ich glaube die zweite woche ware ganz gut machbar)
		(SIMPX wie sieht es da)
		(APPR bei)))
Step:UNSET remove
{'subtrees': ['C', 'MF'], 'family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'APPR'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'NN', 'VVFIN', 'ADV', 'APPR', 'NN', 'KOUS', 'ADV', 'ADV', 'ART', 'ADJA', 'NN', 'PPER', 'VVFIN', 'ART', 'ADJA', 'NN', 'VAFIN', 'ADV', 'ADJD', 'ADJD', 'PWAV', 'VVFIN', 'PPER', 'ADV', 'APPR'), 'right siblings': ['SIMPX', 'SIMPX', 'APPR'], 'parent': 'TURN', 'auto preterminal span': (0, 26), 'span': (6, 12), 'left siblings': ['DM', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ja november kame dann in frage wenn dann so die zweite woche ich glaube die zweite woche ware ganz gut machbar wie sieht es da bei)

Sentence 515:
4 Initial errors
0 on fringe, 2 iterations
3 Error:UNSET move
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX erste halfte ist in ordnung)
		(PX blos nicht am montag)
		(SIMPX montag ist ausgeschlossen)
		[01;36m(SIMPX[00m
			(SIMPX da ist namlich eine dienstbesprechung)
			[01;31m(SIMPX[00m
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				[01;36m(SIMPX[00m
					(VF die)
					(LK ist)
					(MF sehr wichtig)[01;36m)[00m[01;31m)[00m[01;36m)[00m))
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['SIMPX', 'PX', 'SIMPX', 'SIMPX', 'KOORD', 'SIMPX'], 'mover info': [('KOORD', (17, 18))], 'old_family': ['KOORD', 'VF', 'LK', 'MF'], 'start left siblings': [], 'auto preterminals': ('ADJA', 'NN', 'VAFIN', 'APPR', 'NN', 'ADV', 'PTKNEG', 'APPRART', 'NN', 'NN', 'VAFIN', 'ADJD', 'ADV', 'VAFIN', 'ADV', 'ART', 'NN', 'KON', 'PDS', 'VAFIN', 'ADV', 'ADJD'), 'start right siblings': ['VF', 'LK', 'MF'], 'end left siblings': ['SIMPX', 'PX', 'SIMPX', 'SIMPX'], 'auto preterminal span': (0, 22), 'adding node already present': False, 'movers': ['KOORD'], 'old_parent': 'SIMPX', 'POS confusion': ('KON', 'KON'), 'added and moved': True, 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'SIMPX'}
(TOP
	(TURN
		(SIMPX erste halfte ist in ordnung)
		(PX blos nicht am montag)
		(SIMPX montag ist ausgeschlossen)
		(SIMPX
			(SIMPX da ist namlich eine dienstbesprechung)
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(SIMPX die ist sehr wichtig))))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['SIMPX', 'KOORD', 'SIMPX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADV', 'VAFIN', 'ADV', 'ART', 'NN', 'KON', 'PDS', 'VAFIN', 'ADV', 'ADJD'), 'right siblings': ['SIMPX'], 'parent': 'SIMPX', 'auto preterminal span': (12, 22), 'span': (17, 18), 'left siblings': ['SIMPX'], 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP erste halfte ist in ordnung blos nicht am montag montag ist ausgeschlossen da ist namlich eine dienstbesprechung und die ist sehr wichtig)

Sentence 516:
0 Initial errors
0 on fringe, 0 iterations

Sentence 517:
5 Initial errors
0 on fringe, 4 iterations
2 Error:Different label
1 Error:Clause Attachment
1 Error:NP Internal Structure
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;36m(SIMPX[00m
			(APPR ab)
			(SIMPX ab halb sechs ist in ordnung)[01;36m)[00m
		[01;31m(NX[00m
			(ADVX nur)
			(ADVX nicht)
			(ADVX gleich)
			(NX halb sechs)[01;31m)[00m
		(SIMPX das ware mir etwas zu fruh)
		[01;36m(NX[00m [01;31m(ADJX[00m
			(NX
				(ADVX fruhestens)
				[01;36m(NX[00m
					(ART eine)
					(NN stunde)[01;36m)[00m)
			(ADJD spater)[01;31m)[00m[01;36m)[00m))
Step:Different label
{'family': ['APPR', 'SIMPX', 'NX', 'SIMPX', 'NX'], 'auto preterminal span': (18, 22), 'span': (18, 22), 'subtrees': ['NX', 'ADJD'], 'parent': 'TURN', 'over_word': False, 'auto preterminals': ('ADV', 'ART', 'NN', 'ADJD'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('ADJX', 'NX')}
(TOP
	(TURN
		[01;36m(SIMPX[00m
			(APPR ab)
			(SIMPX ab halb sechs ist in ordnung)[01;36m)[00m
		[01;31m(NX[00m
			(ADVX nur)
			(ADVX nicht)
			(ADVX gleich)
			(NX halb sechs)[01;31m)[00m
		(SIMPX das ware mir etwas zu fruh)
		(NX
			(NX
				(ADVX fruhestens)
				[01;36m(NX[00m
					(ART eine)
					(NN stunde)[01;36m)[00m)
			(ADJD spater))))
Step:Clause Attachment
{'subtrees': ['APPR', 'SIMPX'], 'family': ['SIMPX', 'NX', 'SIMPX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'APPR', 'ADJD', 'CARD', 'VAFIN', 'APPR', 'NN'), 'right siblings': [(NX (ADVX (ADV nur)) (ADVX (PTKNEG nicht)) (ADVX (ADV gleich)) (NX (ADJX (ADJD halb)) (CARD sechs))), (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VAFIN ware))) (MF (NX (PPER mir)) (ADJX (ADVX (ADV etwas)) (PTKA zu) (ADJD fruh)))), (NX (NX (ADVX (ADV fruhestens)) (ART eine) (NN stunde)) (ADJD spater))], 'left siblings': [], 'auto preterminal span': (0, 7), 'span': (0, 7), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(SIMPX ab ab halb sechs ist in ordnung)
		[01;31m(NX[00m
			(ADVX nur)
			(ADVX nicht)
			(ADVX gleich)
			(NX halb sechs)[01;31m)[00m
		(SIMPX das ware mir etwas zu fruh)
		(NX
			(NX
				(ADVX fruhestens)
				[01;36m(NX[00m
					(ART eine)
					(NN stunde)[01;36m)[00m)
			(ADJD spater))))
Step:NP Internal Structure
{'subtrees': ['ART', 'NN'], 'family': ['ADVX', 'NX'], 'over_word': False, 'over words': True, 'auto preterminals': ('ART', 'NN'), 'right siblings': [], 'left siblings': [(ADVX (ADV fruhestens))], 'auto preterminal span': (19, 21), 'span': (19, 21), 'parent': 'NX', 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'add'}
(TOP
	(TURN
		(SIMPX ab ab halb sechs ist in ordnung)
		[01;31m(NX[00m
			(ADVX nur)
			(ADVX nicht)
			(ADVX gleich)
			(NX halb sechs)[01;31m)[00m
		(SIMPX das ware mir etwas zu fruh)
		(NX fruhestens eine stunde spater)))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'ADVX', 'ADVX', 'NX'], 'family': ['SIMPX', 'NX', 'SIMPX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'APPR', 'ADJD', 'CARD', 'VAFIN', 'APPR', 'NN', 'ADV', 'PTKNEG', 'ADV', 'ADJD', 'CARD', 'PDS', 'VAFIN', 'PPER', 'ADV', 'PTKA', 'ADJD', 'ADV', 'ART', 'NN', 'ADJD'), 'right siblings': ['SIMPX', 'NX'], 'parent': 'TURN', 'auto preterminal span': (0, 22), 'span': (7, 12), 'left siblings': ['SIMPX'], 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP ab ab halb sechs ist in ordnung nur nicht gleich halb sechs das ware mir etwas zu fruh fruhestens eine stunde spater)

Sentence 518:
0 Initial errors
0 on fringe, 0 iterations

Sentence 519:
20 Initial errors
0 on fringe, 17 iterations
3 Error:NP Attachment
2 Error:Co-ordination
1 Error:Unary
1 Error:PP Attachment
1 Error:Unary
1 Error:PP Attachment
1 Error:UNSET remove
1 Error:Modifier Attachment
1 Error:UNSET add
1 Error:PP Attachment
1 Error:UNSET remove
1 Error:Unary
1 Error:UNSET remove
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF ich)
			(LK weis)
			(MF nicht)
			(NF
				(SIMPX
					(C ob)
					[01;31m(MF[00m
						(NX sie)
						(NX sich)
						(PX um die unterkunft)
						(ADVX schon)[01;31m)[00m
					(VC
						(VXINF gekummert)
						[01;36m(VC[00m
							(VXFIN
								(VAFIN haben))[01;36m)[00m))))
		(SIMPX
			[01;31m(VF[00m
				(SIMPX
					(C wenn)
					(MF nicht))[01;31m)[00m
			(LK hatte)
			(MF ich hier drei vorschlage))
		(SIMPX [01;33m(SIMPX[00m
			(VF es)
			(LK gabe)
			[01;31m(MF[00m [01;33m(MF[00m
				(ADVX da)
				[01;31m(NX[00m
					(NX das hotel zentral) [01;33mMF) SIMPX)[00m
					(NX das hotel nohre)
					(KON und)
					[01;33m(NX[00m (NX das hotel prinzenhof)[01;31m)[00m
				(PX in hannover)[01;31m)[00m) [01;33mNX)[00m
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				[01;31m(NX[00m
					(NX beides sehr gute unterkunfte)
					(KON und)
					[01;36m(VF[00m
						(ADJX
							(ADVX auch)
							(ADJX ziemlich zentral gelegen))[01;36m)[00m[01;31m)[00m[01;31m)[00m
			(LK glaube)
			(MF ich)[01;31m)[00m
		(SIMPX die unterscheiden sich dann wohl nur im preis)
		[01;31m(SIMPX[00m
			(VF das eine)
			(LK liegt)
			[01;31m(MF[00m
				[01;31m(PX[00m
					(ADVX etwas)
					(APPR uber)
					[01;33m(NX (NX[00m (NX zweihundert mark)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(NX[00m
			(NX die anderen) [01;33mNX)[00m
			(PX
				(ADVX so)
				(APPR um)
				(NX [01;33m(ADJX[00m
					(NX hundert vierzig mark)
					[01;31m(NX[00m
						(ADJX hundert zwanzig) [01;33mADJX)[00m
						(NN mark)[01;31m)[00m))[01;31m)[00m [01;33mNX)[00m
		(SIMPX ich weis)))
Step:NP Attachment
{'new_parent': 'NX', 'new_family': ['NX', 'NX', 'PX'], 'mover info': [('NX', (59, 61))], 'old_family': ['ADVX', 'APPR', 'NX'], 'start left siblings': ['ADVX', 'APPR'], 'auto preterminals': ('PTKANT', 'PPER', 'VVFIN', 'PTKNEG', 'KOUS', 'PPER', 'PRF', 'APPR', 'ART', 'NN', 'ADV', 'VVPP', 'VAFIN', 'KOUS', 'PTKNEG', 'VAFIN', 'PPER', 'ADV', 'CARD', 'NN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NE', 'ART', 'NN', 'NE', 'KON', 'ART', 'NN', 'NE', 'APPR', 'NE', 'PIS', 'ADV', 'ADJA', 'NN', 'KON', 'ADV', 'ADV', 'ADV', 'ADJD', 'VVFIN', 'PPER', 'PDS', 'VVFIN', 'PRF', 'ADV', 'ADV', 'ADV', 'APPRART', 'NN', 'ART', 'PIS', 'VVFIN', 'ADV', 'APPR', 'CARD', 'NN', 'ART', 'PIS', 'ADV', 'APPR', 'CARD', 'CARD', 'NN', 'CARD', 'CARD', 'NN', 'PPER', 'VVFIN'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 73), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'PX', 'added and moved': True, 'end right siblings': ['NX', 'PX'], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF ich)
			(LK weis)
			(MF nicht)
			(NF
				(SIMPX
					(C ob)
					[01;31m(MF[00m
						(NX sie)
						(NX sich)
						(PX um die unterkunft)
						(ADVX schon)[01;31m)[00m
					(VC
						(VXINF gekummert)
						[01;36m(VC[00m
							(VXFIN
								(VAFIN haben))[01;36m)[00m))))
		(SIMPX
			[01;31m(VF[00m
				(SIMPX
					(C wenn)
					(MF nicht))[01;31m)[00m
			(LK hatte)
			(MF ich hier drei vorschlage))
		(SIMPX [01;33m(SIMPX[00m
			(VF es)
			(LK gabe)
			[01;31m(MF[00m [01;33m(MF[00m
				(ADVX da)
				[01;31m(NX[00m
					(NX das hotel zentral) [01;33mMF) SIMPX)[00m
					(NX das hotel nohre)
					(KON und)
					[01;33m(NX[00m (NX das hotel prinzenhof)[01;31m)[00m
				(PX in hannover)[01;31m)[00m) [01;33mNX)[00m
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				[01;31m(NX[00m
					(NX beides sehr gute unterkunfte)
					(KON und)
					[01;36m(VF[00m
						(ADJX
							(ADVX auch)
							(ADJX ziemlich zentral gelegen))[01;36m)[00m[01;31m)[00m[01;31m)[00m
			(LK glaube)
			(MF ich)[01;31m)[00m
		(SIMPX die unterscheiden sich dann wohl nur im preis)
		[01;31m(SIMPX[00m
			(VF das eine)
			(LK liegt)
			[01;31m(MF[00m
				[01;31m(PX[00m
					(ADVX etwas)
					(APPR uber)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(NX
			(NX zweihundert mark die anderen)
			(PX
				(ADVX so)
				(APPR um)
				(NX [01;33m(ADJX[00m
					(NX hundert vierzig mark)
					[01;31m(NX[00m
						(ADJX hundert zwanzig) [01;33mADJX)[00m
						(NN mark)[01;31m)[00m)))
		(SIMPX ich weis)))
Step:Co-ordination
{'new_parent': 'SIMPX', 'new_family': ['NX', 'KON', 'VF', 'LK', 'MF'], 'mover info': [('NX', (35, 39)), ('KON', (39, 40))], 'old_family': ['NX', 'KON', 'ADJX'], 'start left siblings': [], 'auto preterminals': ('PIS', 'ADV', 'ADJA', 'NN', 'KON', 'ADV', 'ADV', 'ADV', 'ADJD', 'VVFIN', 'PPER'), 'start right siblings': ['ADJX'], 'end left siblings': [], 'auto preterminal span': (35, 46), 'movers': ['NX', 'KON'], 'old_parent': 'NX', 'end right siblings': ['VF', 'LK', 'MF'], 'classified_type': 'Co-ordination', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF ich)
			(LK weis)
			(MF nicht)
			(NF
				(SIMPX
					(C ob)
					[01;31m(MF[00m
						(NX sie)
						(NX sich)
						(PX um die unterkunft)
						(ADVX schon)[01;31m)[00m
					(VC
						(VXINF gekummert)
						[01;36m(VC[00m
							(VXFIN
								(VAFIN haben))[01;36m)[00m))))
		(SIMPX
			[01;31m(VF[00m
				(SIMPX
					(C wenn)
					(MF nicht))[01;31m)[00m
			(LK hatte)
			(MF ich hier drei vorschlage))
		(SIMPX [01;33m(SIMPX[00m
			(VF es)
			(LK gabe)
			[01;31m(MF[00m [01;33m(MF[00m
				(ADVX da)
				[01;31m(NX[00m
					(NX das hotel zentral) [01;33mMF) SIMPX)[00m
					(NX das hotel nohre)
					(KON und)
					[01;33m(NX[00m (NX das hotel prinzenhof)[01;31m)[00m
				(PX in hannover)[01;31m)[00m) [01;33mNX)[00m
		[01;31m(SIMPX[00m
			(NX beides sehr gute unterkunfte)
			(KON und)
			(VF
				[01;31m(NX[00m
					(ADJX
						(ADVX auch)
						(ADJX ziemlich zentral gelegen))[01;31m)[00m)
			(LK glaube)
			(MF ich)[01;31m)[00m
		(SIMPX die unterscheiden sich dann wohl nur im preis)
		[01;31m(SIMPX[00m
			(VF das eine)
			(LK liegt)
			[01;31m(MF[00m
				[01;31m(PX[00m
					(ADVX etwas)
					(APPR uber)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(NX
			(NX zweihundert mark die anderen)
			(PX
				(ADVX so)
				(APPR um)
				(NX [01;33m(ADJX[00m
					(NX hundert vierzig mark)
					[01;31m(NX[00m
						(ADJX hundert zwanzig) [01;33mADJX)[00m
						(NN mark)[01;31m)[00m)))
		(SIMPX ich weis)))
Step:Unary
{'subtrees': ['VXFIN'], 'family': ['VXINF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN',), 'right siblings': [], 'left siblings': [(VXINF (VVPP gekummert))], 'auto preterminal span': (12, 13), 'span': (12, 13), 'parent': 'VC', 'label': 'VC', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF ich)
			(LK weis)
			(MF nicht)
			(NF
				(SIMPX
					(C ob)
					[01;31m(MF[00m
						(NX sie)
						(NX sich)
						(PX um die unterkunft)
						(ADVX schon)[01;31m)[00m
					(VC gekummert haben))))
		(SIMPX
			[01;31m(VF[00m
				(SIMPX
					(C wenn)
					(MF nicht))[01;31m)[00m
			(LK hatte)
			(MF ich hier drei vorschlage))
		(SIMPX [01;33m(SIMPX[00m
			(VF es)
			(LK gabe)
			[01;31m(MF[00m [01;33m(MF[00m
				(ADVX da)
				[01;31m(NX[00m
					(NX das hotel zentral) [01;33mMF) SIMPX)[00m
					(NX das hotel nohre)
					(KON und)
					[01;33m(NX[00m (NX das hotel prinzenhof)[01;31m)[00m
				(PX in hannover)[01;31m)[00m) [01;33mNX)[00m
		[01;31m(SIMPX[00m
			(NX beides sehr gute unterkunfte)
			(KON und)
			(VF
				[01;31m(NX[00m
					(ADJX
						(ADVX auch)
						(ADJX ziemlich zentral gelegen))[01;31m)[00m)
			(LK glaube)
			(MF ich)[01;31m)[00m
		(SIMPX die unterscheiden sich dann wohl nur im preis)
		[01;31m(SIMPX[00m
			(VF das eine)
			(LK liegt)
			[01;31m(MF[00m
				[01;31m(PX[00m
					(ADVX etwas)
					(APPR uber)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(NX
			(NX zweihundert mark die anderen)
			(PX
				(ADVX so)
				(APPR um)
				(NX [01;33m(ADJX[00m
					(NX hundert vierzig mark)
					[01;31m(NX[00m
						(ADJX hundert zwanzig) [01;33mADJX)[00m
						(NN mark)[01;31m)[00m)))
		(SIMPX ich weis)))
Step:PP Attachment
{'subtrees': ['NX', 'NX', 'PX', 'ADVX'], 'family': ['C', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'PRF', 'APPR', 'ART', 'NN', 'ADV', 'VVPP', 'VAFIN'), 'right siblings': ['VC'], 'parent': 'SIMPX', 'auto preterminal span': (4, 13), 'span': (5, 11), 'left siblings': ['C'], 'label': 'MF', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich weis nicht ob sie sich um die unterkunft schon gekummert haben)
		(SIMPX
			[01;31m(VF[00m
				(SIMPX
					(C wenn)
					(MF nicht))[01;31m)[00m
			(LK hatte)
			(MF ich hier drei vorschlage))
		(SIMPX [01;33m(SIMPX[00m
			(VF es)
			(LK gabe)
			[01;31m(MF[00m [01;33m(MF[00m
				(ADVX da)
				[01;31m(NX[00m
					(NX das hotel zentral) [01;33mMF) SIMPX)[00m
					(NX das hotel nohre)
					(KON und)
					[01;33m(NX[00m (NX das hotel prinzenhof)[01;31m)[00m
				(PX in hannover)[01;31m)[00m) [01;33mNX)[00m
		[01;31m(SIMPX[00m
			(NX beides sehr gute unterkunfte)
			(KON und)
			(VF
				[01;31m(NX[00m
					(ADJX
						(ADVX auch)
						(ADJX ziemlich zentral gelegen))[01;31m)[00m)
			(LK glaube)
			(MF ich)[01;31m)[00m
		(SIMPX die unterscheiden sich dann wohl nur im preis)
		[01;31m(SIMPX[00m
			(VF das eine)
			(LK liegt)
			[01;31m(MF[00m
				[01;31m(PX[00m
					(ADVX etwas)
					(APPR uber)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(NX
			(NX zweihundert mark die anderen)
			(PX
				(ADVX so)
				(APPR um)
				(NX [01;33m(ADJX[00m
					(NX hundert vierzig mark)
					[01;31m(NX[00m
						(ADJX hundert zwanzig) [01;33mADJX)[00m
						(NN mark)[01;31m)[00m)))
		(SIMPX ich weis)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PTKNEG', 'VAFIN', 'PPER', 'ADV', 'CARD', 'NN'), 'right siblings': ['LK', 'MF'], 'parent': 'SIMPX', 'auto preterminal span': (13, 20), 'span': (13, 15), 'left siblings': [], 'label': 'VF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich weis nicht ob sie sich um die unterkunft schon gekummert haben)
		(SIMPX wenn nicht hatte ich hier drei vorschlage)
		(SIMPX [01;33m(SIMPX[00m
			(VF es)
			(LK gabe)
			[01;31m(MF[00m [01;33m(MF[00m
				(ADVX da)
				[01;31m(NX[00m
					(NX das hotel zentral) [01;33mMF) SIMPX)[00m
					(NX das hotel nohre)
					(KON und)
					[01;33m(NX[00m (NX das hotel prinzenhof)[01;31m)[00m
				(PX in hannover)[01;31m)[00m) [01;33mNX)[00m
		[01;31m(SIMPX[00m
			(NX beides sehr gute unterkunfte)
			(KON und)
			(VF
				[01;31m(NX[00m
					(ADJX
						(ADVX auch)
						(ADJX ziemlich zentral gelegen))[01;31m)[00m)
			(LK glaube)
			(MF ich)[01;31m)[00m
		(SIMPX die unterscheiden sich dann wohl nur im preis)
		[01;31m(SIMPX[00m
			(VF das eine)
			(LK liegt)
			[01;31m(MF[00m
				[01;31m(PX[00m
					(ADVX etwas)
					(APPR uber)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(NX
			(NX zweihundert mark die anderen)
			(PX
				(ADVX so)
				(APPR um)
				(NX [01;33m(ADJX[00m
					(NX hundert vierzig mark)
					[01;31m(NX[00m
						(ADJX hundert zwanzig) [01;33mADJX)[00m
						(NN mark)[01;31m)[00m)))
		(SIMPX ich weis)))
Step:PP Attachment
{'subtrees': ['ADVX', 'NX', 'PX'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NE', 'ART', 'NN', 'NE', 'KON', 'ART', 'NN', 'NE', 'APPR', 'NE'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (20, 35), 'span': (22, 35), 'left siblings': ['VF', 'LK'], 'label': 'MF', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich weis nicht ob sie sich um die unterkunft schon gekummert haben)
		(SIMPX wenn nicht hatte ich hier drei vorschlage)
		(SIMPX [01;33m(SIMPX[00m
			(VF es)
			(LK gabe)
			[01;33m(MF[00m (ADVX da)
			[01;31m(NX[00m
				(NX das hotel zentral) [01;33mMF) SIMPX)[00m
				(NX das hotel nohre)
				(KON und)
				[01;33m(NX[00m (NX das hotel prinzenhof)[01;31m)[00m
			(PX in hannover)) [01;33mNX)[00m
		[01;31m(SIMPX[00m
			(NX beides sehr gute unterkunfte)
			(KON und)
			(VF
				[01;31m(NX[00m
					(ADJX
						(ADVX auch)
						(ADJX ziemlich zentral gelegen))[01;31m)[00m)
			(LK glaube)
			(MF ich)[01;31m)[00m
		(SIMPX die unterscheiden sich dann wohl nur im preis)
		[01;31m(SIMPX[00m
			(VF das eine)
			(LK liegt)
			[01;31m(MF[00m
				[01;31m(PX[00m
					(ADVX etwas)
					(APPR uber)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(NX
			(NX zweihundert mark die anderen)
			(PX
				(ADVX so)
				(APPR um)
				(NX [01;33m(ADJX[00m
					(NX hundert vierzig mark)
					[01;31m(NX[00m
						(ADJX hundert zwanzig) [01;33mADJX)[00m
						(NN mark)[01;31m)[00m)))
		(SIMPX ich weis)))
Step:UNSET remove
{'subtrees': ['NX', 'NX', 'KON', 'NX'], 'family': ['VF', 'LK', 'ADVX', 'NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NE', 'ART', 'NN', 'NE', 'KON', 'ART', 'NN', 'NE', 'APPR', 'NE'), 'right siblings': ['PX'], 'parent': 'SIMPX', 'auto preterminal span': (20, 35), 'span': (23, 33), 'left siblings': ['VF', 'LK', 'ADVX'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich weis nicht ob sie sich um die unterkunft schon gekummert haben)
		(SIMPX wenn nicht hatte ich hier drei vorschlage)
		(SIMPX
			[01;36m(SIMPX[00m
				(VF es)
				(LK gabe)
				[01;36m(MF[00m
					(ADVX da)
					(NX das hotel zentral)[01;36m)[00m[01;36m)[00m
			(NX das hotel nohre)
			(KON und)
			[01;36m(NX[00m
				(NX das hotel prinzenhof)
				(PX in hannover)[01;36m)[00m)
		[01;31m(SIMPX[00m
			(NX beides sehr gute unterkunfte)
			(KON und)
			(VF
				[01;31m(NX[00m
					(ADJX
						(ADVX auch)
						(ADJX ziemlich zentral gelegen))[01;31m)[00m)
			(LK glaube)
			(MF ich)[01;31m)[00m
		(SIMPX die unterscheiden sich dann wohl nur im preis)
		[01;31m(SIMPX[00m
			(VF das eine)
			(LK liegt)
			[01;31m(MF[00m
				[01;31m(PX[00m
					(ADVX etwas)
					(APPR uber)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(NX
			(NX zweihundert mark die anderen)
			(PX
				(ADVX so)
				(APPR um)
				(NX [01;33m(ADJX[00m
					(NX hundert vierzig mark)
					[01;31m(NX[00m
						(ADJX hundert zwanzig) [01;33mADJX)[00m
						(NN mark)[01;31m)[00m)))
		(SIMPX ich weis)))
Step:Modifier Attachment
{'subtrees': ['VF', 'LK', 'ADVX', 'NX'], 'family': ['SIMPX', 'NX', 'KON', 'NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NE'), 'right siblings': [(NX (ART das) (NX (NX (NN hotel)) (NX (NE nohre)))), (KON und), (NX (ART das) (NX (NX (NN hotel)) (NX (NE prinzenhof)))), (PX (APPR in) (NX (NE hannover)))], 'left siblings': [], 'auto preterminal span': (20, 26), 'span': (20, 26), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich weis nicht ob sie sich um die unterkunft schon gekummert haben)
		(SIMPX wenn nicht hatte ich hier drei vorschlage)
		(SIMPX
			(SIMPX
				(VF es)
				(LK gabe)
				[01;36m(MF[00m
					(ADVX da)
					(NX das hotel zentral)[01;36m)[00m)
			(NX das hotel nohre)
			(KON und)
			[01;36m(NX[00m
				(NX das hotel prinzenhof)
				(PX in hannover)[01;36m)[00m)
		[01;31m(SIMPX[00m
			(NX beides sehr gute unterkunfte)
			(KON und)
			(VF
				[01;31m(NX[00m
					(ADJX
						(ADVX auch)
						(ADJX ziemlich zentral gelegen))[01;31m)[00m)
			(LK glaube)
			(MF ich)[01;31m)[00m
		(SIMPX die unterscheiden sich dann wohl nur im preis)
		[01;31m(SIMPX[00m
			(VF das eine)
			(LK liegt)
			[01;31m(MF[00m
				[01;31m(PX[00m
					(ADVX etwas)
					(APPR uber)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(NX
			(NX zweihundert mark die anderen)
			(PX
				(ADVX so)
				(APPR um)
				(NX [01;33m(ADJX[00m
					(NX hundert vierzig mark)
					[01;31m(NX[00m
						(ADJX hundert zwanzig) [01;33mADJX)[00m
						(NN mark)[01;31m)[00m)))
		(SIMPX ich weis)))
Step:UNSET add
{'subtrees': ['ADVX', 'NX'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ART', 'NN', 'NE'), 'right siblings': [], 'left siblings': [(VF (NX (PPER es))), (LK (VXFIN (VVFIN gabe)))], 'auto preterminal span': (22, 26), 'span': (22, 26), 'parent': 'SIMPX', 'label': 'MF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich weis nicht ob sie sich um die unterkunft schon gekummert haben)
		(SIMPX wenn nicht hatte ich hier drei vorschlage)
		(SIMPX
			(SIMPX es gabe da das hotel zentral)
			(NX das hotel nohre)
			(KON und)
			[01;36m(NX[00m
				(NX das hotel prinzenhof)
				(PX in hannover)[01;36m)[00m)
		[01;31m(SIMPX[00m
			(NX beides sehr gute unterkunfte)
			(KON und)
			(VF
				[01;31m(NX[00m
					(ADJX
						(ADVX auch)
						(ADJX ziemlich zentral gelegen))[01;31m)[00m)
			(LK glaube)
			(MF ich)[01;31m)[00m
		(SIMPX die unterscheiden sich dann wohl nur im preis)
		[01;31m(SIMPX[00m
			(VF das eine)
			(LK liegt)
			[01;31m(MF[00m
				[01;31m(PX[00m
					(ADVX etwas)
					(APPR uber)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(NX
			(NX zweihundert mark die anderen)
			(PX
				(ADVX so)
				(APPR um)
				(NX [01;33m(ADJX[00m
					(NX hundert vierzig mark)
					[01;31m(NX[00m
						(ADJX hundert zwanzig) [01;33mADJX)[00m
						(NN mark)[01;31m)[00m)))
		(SIMPX ich weis)))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['SIMPX', 'NX', 'KON', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'NE', 'APPR', 'NE'), 'right siblings': [], 'left siblings': [(SIMPX (VF (NX (PPER es))) (LK (VXFIN (VVFIN gabe))) (MF (ADVX (ADV da)) (NX (ART das) (NX (NX (NN hotel)) (NX (NE zentral)))))), (NX (ART das) (NX (NX (NN hotel)) (NX (NE nohre)))), (KON und)], 'auto preterminal span': (30, 35), 'span': (30, 35), 'parent': 'SIMPX', 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich weis nicht ob sie sich um die unterkunft schon gekummert haben)
		(SIMPX wenn nicht hatte ich hier drei vorschlage)
		(SIMPX es gabe da das hotel zentral das hotel nohre und das hotel prinzenhof in hannover)
		[01;31m(SIMPX[00m
			(NX beides sehr gute unterkunfte)
			(KON und)
			(VF
				[01;31m(NX[00m
					(ADJX
						(ADVX auch)
						(ADJX ziemlich zentral gelegen))[01;31m)[00m)
			(LK glaube)
			(MF ich)[01;31m)[00m
		(SIMPX die unterscheiden sich dann wohl nur im preis)
		[01;31m(SIMPX[00m
			(VF das eine)
			(LK liegt)
			[01;31m(MF[00m
				[01;31m(PX[00m
					(ADVX etwas)
					(APPR uber)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(NX
			(NX zweihundert mark die anderen)
			(PX
				(ADVX so)
				(APPR um)
				(NX [01;33m(ADJX[00m
					(NX hundert vierzig mark)
					[01;31m(NX[00m
						(ADJX hundert zwanzig) [01;33mADJX)[00m
						(NN mark)[01;31m)[00m)))
		(SIMPX ich weis)))
Step:UNSET remove
{'subtrees': ['NX', 'KON', 'VF', 'LK', 'MF'], 'family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VVFIN', 'PTKNEG', 'KOUS', 'PPER', 'PRF', 'APPR', 'ART', 'NN', 'ADV', 'VVPP', 'VAFIN', 'KOUS', 'PTKNEG', 'VAFIN', 'PPER', 'ADV', 'CARD', 'NN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NE', 'ART', 'NN', 'NE', 'KON', 'ART', 'NN', 'NE', 'APPR', 'NE', 'PIS', 'ADV', 'ADJA', 'NN', 'KON', 'ADV', 'ADV', 'ADV', 'ADJD', 'VVFIN', 'PPER', 'PDS', 'VVFIN', 'PRF', 'ADV', 'ADV', 'ADV', 'APPRART', 'NN', 'ART', 'PIS', 'VVFIN', 'ADV', 'APPR', 'CARD', 'NN', 'ART', 'PIS', 'ADV', 'APPR', 'CARD', 'CARD', 'NN', 'CARD', 'CARD', 'NN', 'PPER', 'VVFIN'), 'right siblings': ['SIMPX', 'SIMPX', 'NX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 73), 'span': (35, 46), 'left siblings': ['DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich weis nicht ob sie sich um die unterkunft schon gekummert haben)
		(SIMPX wenn nicht hatte ich hier drei vorschlage)
		(SIMPX es gabe da das hotel zentral das hotel nohre und das hotel prinzenhof in hannover)
		(NX beides sehr gute unterkunfte)
		(KON und)
		(VF
			[01;31m(NX[00m
				(ADJX
					(ADVX auch)
					(ADJX ziemlich zentral gelegen))[01;31m)[00m)
		(LK glaube)
		(MF ich)
		(SIMPX die unterscheiden sich dann wohl nur im preis)
		[01;31m(SIMPX[00m
			(VF das eine)
			(LK liegt)
			[01;31m(MF[00m
				[01;31m(PX[00m
					(ADVX etwas)
					(APPR uber)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(NX
			(NX zweihundert mark die anderen)
			(PX
				(ADVX so)
				(APPR um)
				(NX [01;33m(ADJX[00m
					(NX hundert vierzig mark)
					[01;31m(NX[00m
						(ADJX hundert zwanzig) [01;33mADJX)[00m
						(NN mark)[01;31m)[00m)))
		(SIMPX ich weis)))
Step:Unary
{'subtrees': ['ADJX'], 'family': ['NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'ADV', 'ADJD'), 'right siblings': [], 'parent': 'VF', 'auto preterminal span': (40, 44), 'span': (40, 44), 'left siblings': [], 'label': 'NX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich weis nicht ob sie sich um die unterkunft schon gekummert haben)
		(SIMPX wenn nicht hatte ich hier drei vorschlage)
		(SIMPX es gabe da das hotel zentral das hotel nohre und das hotel prinzenhof in hannover)
		(NX beides sehr gute unterkunfte)
		(KON und)
		(VF auch ziemlich zentral gelegen)
		(LK glaube)
		(MF ich)
		(SIMPX die unterscheiden sich dann wohl nur im preis)
		[01;31m(SIMPX[00m
			(VF das eine)
			(LK liegt)
			[01;31m(MF[00m
				[01;31m(PX[00m
					(ADVX etwas)
					(APPR uber)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(NX
			(NX zweihundert mark die anderen)
			(PX
				(ADVX so)
				(APPR um)
				(NX [01;33m(ADJX[00m
					(NX hundert vierzig mark)
					[01;31m(NX[00m
						(ADJX hundert zwanzig) [01;33mADJX)[00m
						(NN mark)[01;31m)[00m)))
		(SIMPX ich weis)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'KON', 'VF', 'LK', 'MF', 'SIMPX', 'SIMPX', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VVFIN', 'PTKNEG', 'KOUS', 'PPER', 'PRF', 'APPR', 'ART', 'NN', 'ADV', 'VVPP', 'VAFIN', 'KOUS', 'PTKNEG', 'VAFIN', 'PPER', 'ADV', 'CARD', 'NN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NE', 'ART', 'NN', 'NE', 'KON', 'ART', 'NN', 'NE', 'APPR', 'NE', 'PIS', 'ADV', 'ADJA', 'NN', 'KON', 'ADV', 'ADV', 'ADV', 'ADJD', 'VVFIN', 'PPER', 'PDS', 'VVFIN', 'PRF', 'ADV', 'ADV', 'ADV', 'APPRART', 'NN', 'ART', 'PIS', 'VVFIN', 'ADV', 'APPR', 'CARD', 'NN', 'ART', 'PIS', 'ADV', 'APPR', 'CARD', 'CARD', 'NN', 'CARD', 'CARD', 'NN', 'PPER', 'VVFIN'), 'right siblings': ['NX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 73), 'span': (54, 59), 'left siblings': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'KON', 'VF', 'LK', 'MF', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich weis nicht ob sie sich um die unterkunft schon gekummert haben)
		(SIMPX wenn nicht hatte ich hier drei vorschlage)
		(SIMPX es gabe da das hotel zentral das hotel nohre und das hotel prinzenhof in hannover)
		(NX beides sehr gute unterkunfte)
		(KON und)
		(VF auch ziemlich zentral gelegen)
		(LK glaube)
		(MF ich)
		(SIMPX die unterscheiden sich dann wohl nur im preis)
		(VF das eine)
		(LK liegt)
		[01;31m(MF[00m
			[01;31m(PX[00m
				(ADVX etwas)
				(APPR uber)[01;31m)[00m[01;31m)[00m
		(NX
			(NX zweihundert mark die anderen)
			(PX
				(ADVX so)
				(APPR um)
				(NX [01;33m(ADJX[00m
					(NX hundert vierzig mark)
					[01;31m(NX[00m
						(ADJX hundert zwanzig) [01;33mADJX)[00m
						(NN mark)[01;31m)[00m)))
		(SIMPX ich weis)))
Step:Unary
{'subtrees': ['PX'], 'family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'KON', 'VF', 'LK', 'MF', 'SIMPX', 'VF', 'LK', 'MF', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VVFIN', 'PTKNEG', 'KOUS', 'PPER', 'PRF', 'APPR', 'ART', 'NN', 'ADV', 'VVPP', 'VAFIN', 'KOUS', 'PTKNEG', 'VAFIN', 'PPER', 'ADV', 'CARD', 'NN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NE', 'ART', 'NN', 'NE', 'KON', 'ART', 'NN', 'NE', 'APPR', 'NE', 'PIS', 'ADV', 'ADJA', 'NN', 'KON', 'ADV', 'ADV', 'ADV', 'ADJD', 'VVFIN', 'PPER', 'PDS', 'VVFIN', 'PRF', 'ADV', 'ADV', 'ADV', 'APPRART', 'NN', 'ART', 'PIS', 'VVFIN', 'ADV', 'APPR', 'CARD', 'NN', 'ART', 'PIS', 'ADV', 'APPR', 'CARD', 'CARD', 'NN', 'CARD', 'CARD', 'NN', 'PPER', 'VVFIN'), 'right siblings': ['NX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 73), 'span': (57, 59), 'left siblings': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'KON', 'VF', 'LK', 'MF', 'SIMPX', 'VF', 'LK'], 'label': 'MF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich weis nicht ob sie sich um die unterkunft schon gekummert haben)
		(SIMPX wenn nicht hatte ich hier drei vorschlage)
		(SIMPX es gabe da das hotel zentral das hotel nohre und das hotel prinzenhof in hannover)
		(NX beides sehr gute unterkunfte)
		(KON und)
		(VF auch ziemlich zentral gelegen)
		(LK glaube)
		(MF ich)
		(SIMPX die unterscheiden sich dann wohl nur im preis)
		(VF das eine)
		(LK liegt)
		[01;31m(PX[00m
			(ADVX etwas)
			(APPR uber)[01;31m)[00m
		(NX
			(NX zweihundert mark die anderen)
			(PX
				(ADVX so)
				(APPR um)
				(NX [01;33m(ADJX[00m
					(NX hundert vierzig mark)
					[01;31m(NX[00m
						(ADJX hundert zwanzig) [01;33mADJX)[00m
						(NN mark)[01;31m)[00m)))
		(SIMPX ich weis)))
Step:UNSET remove
{'subtrees': ['ADVX', 'APPR'], 'family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'KON', 'VF', 'LK', 'MF', 'SIMPX', 'VF', 'LK', 'PX', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VVFIN', 'PTKNEG', 'KOUS', 'PPER', 'PRF', 'APPR', 'ART', 'NN', 'ADV', 'VVPP', 'VAFIN', 'KOUS', 'PTKNEG', 'VAFIN', 'PPER', 'ADV', 'CARD', 'NN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NE', 'ART', 'NN', 'NE', 'KON', 'ART', 'NN', 'NE', 'APPR', 'NE', 'PIS', 'ADV', 'ADJA', 'NN', 'KON', 'ADV', 'ADV', 'ADV', 'ADJD', 'VVFIN', 'PPER', 'PDS', 'VVFIN', 'PRF', 'ADV', 'ADV', 'ADV', 'APPRART', 'NN', 'ART', 'PIS', 'VVFIN', 'ADV', 'APPR', 'CARD', 'NN', 'ART', 'PIS', 'ADV', 'APPR', 'CARD', 'CARD', 'NN', 'CARD', 'CARD', 'NN', 'PPER', 'VVFIN'), 'right siblings': ['NX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 73), 'span': (57, 59), 'left siblings': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'KON', 'VF', 'LK', 'MF', 'SIMPX', 'VF', 'LK'], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich weis nicht ob sie sich um die unterkunft schon gekummert haben)
		(SIMPX wenn nicht hatte ich hier drei vorschlage)
		(SIMPX es gabe da das hotel zentral das hotel nohre und das hotel prinzenhof in hannover)
		(NX beides sehr gute unterkunfte)
		(KON und)
		(VF auch ziemlich zentral gelegen)
		(LK glaube)
		(MF ich)
		(SIMPX die unterscheiden sich dann wohl nur im preis)
		(VF das eine)
		(LK liegt)
		(ADVX etwas)
		(APPR uber)
		(NX
			(NX zweihundert mark die anderen)
			(PX
				(ADVX so)
				(APPR um)
				(NX [01;33m(ADJX[00m
					(NX hundert vierzig mark)
					[01;31m(NX[00m
						(ADJX hundert zwanzig) [01;33mADJX)[00m
						(NN mark)[01;31m)[00m)))
		(SIMPX ich weis)))
Step:UNSET remove
{'subtrees': ['ADJX', 'NN'], 'family': ['NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'CARD', 'NN', 'CARD', 'CARD', 'NN'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (65, 71), 'span': (68, 71), 'left siblings': ['NX'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich weis nicht ob sie sich um die unterkunft schon gekummert haben)
		(SIMPX wenn nicht hatte ich hier drei vorschlage)
		(SIMPX es gabe da das hotel zentral das hotel nohre und das hotel prinzenhof in hannover)
		(NX beides sehr gute unterkunfte)
		(KON und)
		(VF auch ziemlich zentral gelegen)
		(LK glaube)
		(MF ich)
		(SIMPX die unterscheiden sich dann wohl nur im preis)
		(VF das eine)
		(LK liegt)
		(ADVX etwas)
		(APPR uber)
		(NX
			(NX zweihundert mark die anderen)
			(PX
				(ADVX so)
				(APPR um)
				(NX
					[01;36m(ADJX[00m
						(NX hundert vierzig mark)
						(ADJX hundert zwanzig)[01;36m)[00m
					(NN mark))))
		(SIMPX ich weis)))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADJX'], 'family': ['ADJX', 'NN'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'CARD', 'NN', 'CARD', 'CARD'), 'right siblings': [(NN mark)], 'left siblings': [], 'auto preterminal span': (65, 70), 'span': (65, 70), 'parent': 'NX', 'label': 'ADJX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP ja ich weis nicht ob sie sich um die unterkunft schon gekummert haben wenn nicht hatte ich hier drei vorschlage es gabe da das hotel zentral das hotel nohre und das hotel prinzenhof in hannover beides sehr gute unterkunfte und auch ziemlich zentral gelegen glaube ich die unterscheiden sich dann wohl nur im preis das eine liegt etwas uber zweihundert mark die anderen so um hundert vierzig mark hundert zwanzig mark ich weis)

Sentence 520:
0 Initial errors
0 on fringe, 0 iterations

Sentence 521:
0 Initial errors
0 on fringe, 0 iterations

Sentence 522:
10 Initial errors
0 on fringe, 8 iterations
2 Error:Single Word Phrase
2 Error:Modifier Attachment
1 Error:Clause Attachment
1 Error:Modifier Attachment
1 Error:Single Word Phrase
1 Error:Unary
1 Error:Single Word Phrase
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX haben sie schon irgendwelche vorschlage)
		(SIMPX ich weis nicht)
		[01;36m(SIMPX[00m
			(SIMPX in die oper mochte ich grade nicht gehen oder ins konzert)
			[01;36m(SIMPX[00m
				[01;31m(NX[00m
					[01;36m(KOORD[00m [01;31m(ADVX[00m
						(ADV aber)[01;31m)[00m[01;36m)[00m
					(ADVX vielleicht)
					(NX irgendwas)[01;31m)[00m
				(NX
					[01;36m(NX[00m
						[01;31m(ADJX[00m
							(ADJA kleines)[01;31m)[00m
						[01;31m(ADJX[00m
							(ADJA gemutliches)[01;31m)[00m[01;36m)[00m
					[01;36m(VXINF[00m
						[01;36m(VC[00m
							(NN treffen)[01;36m)[00m[01;36m)[00m)[01;36m)[00m[01;36m)[00m))
Step:Single Word Phrase
{'family': ['KOORD', 'ADVX', 'NX'], 'auto preterminal span': (19, 20), 'span': (19, 20), 'subtrees': ['ADV'], 'parent': 'NX', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'KOORD')}
(TOP
	(TURN
		(SIMPX haben sie schon irgendwelche vorschlage)
		(SIMPX ich weis nicht)
		[01;36m(SIMPX[00m
			(SIMPX in die oper mochte ich grade nicht gehen oder ins konzert)
			[01;36m(SIMPX[00m
				[01;31m(NX[00m
					(KOORD aber)
					(ADVX vielleicht)
					(NX irgendwas)[01;31m)[00m
				(NX
					[01;36m(NX[00m
						[01;31m(ADJX[00m
							(ADJA kleines)[01;31m)[00m
						[01;31m(ADJX[00m
							(ADJA gemutliches)[01;31m)[00m[01;36m)[00m
					[01;36m(VXINF[00m
						[01;36m(VC[00m
							(NN treffen)[01;36m)[00m[01;36m)[00m)[01;36m)[00m[01;36m)[00m))
Step:Modifier Attachment
{'new_parent': 'TURN', 'new_family': ['SIMPX', 'SIMPX', 'SIMPX', 'KOORD', 'ADVX', 'NX', 'NX'], 'mover info': [('KOORD', (19, 20)), ('ADVX', (20, 21))], 'old_family': ['KOORD', 'ADVX', 'NX'], 'start left siblings': [], 'auto preterminals': ('VAFIN', 'PPER', 'ADV', 'PIAT', 'NN', 'PPER', 'VVFIN', 'PTKNEG', 'APPR', 'ART', 'NN', 'VMFIN', 'PPER', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'APPRART', 'NN', 'ADV', 'ADV', 'PIS', 'ADJA', 'ADJA', 'NN'), 'start right siblings': ['NX'], 'end left siblings': ['SIMPX', 'SIMPX', 'SIMPX'], 'auto preterminal span': (0, 25), 'adding node already present': False, 'movers': ['KOORD', 'ADVX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': ['NX', 'NX'], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'VXINF'}
(TOP
	(TURN
		(SIMPX haben sie schon irgendwelche vorschlage)
		(SIMPX ich weis nicht)
		[01;36m(SIMPX[00m
			(SIMPX in die oper mochte ich grade nicht gehen oder ins konzert)
			(SIMPX
				(KOORD aber)
				(ADVX vielleicht)
				(NX irgendwas)
				(NX
					[01;36m(NX[00m
						[01;31m(ADJX[00m
							(ADJA kleines)[01;31m)[00m
						[01;31m(ADJX[00m
							(ADJA gemutliches)[01;31m)[00m[01;36m)[00m
					[01;36m(VXINF[00m
						[01;36m(VC[00m
							(NN treffen)[01;36m)[00m[01;36m)[00m))[01;36m)[00m))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NN', 'VMFIN', 'PPER', 'ADV', 'PTKNEG', 'VVINF', 'KON', 'APPRART', 'NN', 'ADV', 'ADV', 'PIS', 'ADJA', 'ADJA', 'NN'), 'right siblings': [], 'left siblings': [(SIMPX (LK (VXFIN (VAFIN haben))) (MF (NX (PPER sie)) (ADVX (ADV schon)) (NX (PIAT irgendwelche) (NN vorschlage)))), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN weis))) (MF (ADVX (PTKNEG nicht))))], 'auto preterminal span': (8, 25), 'span': (8, 25), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(SIMPX haben sie schon irgendwelche vorschlage)
		(SIMPX ich weis nicht)
		(SIMPX
			(SIMPX in die oper mochte ich grade nicht gehen oder ins konzert)
			(SIMPX
				(KOORD aber)
				(ADVX vielleicht)
				(NX irgendwas)
				(NX
					[01;36m(NX[00m
						[01;31m(ADJX[00m
							(ADJA kleines)[01;31m)[00m
						[01;31m(ADJX[00m
							(ADJA gemutliches)[01;31m)[00m[01;36m)[00m
					[01;36m(VXINF[00m
						[01;36m(VC[00m
							(NN treffen)[01;36m)[00m[01;36m)[00m)))))
Step:Modifier Attachment
{'subtrees': ['ADJX', 'ADJX'], 'family': ['NX', 'NN'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJA', 'ADJA'), 'right siblings': [(NN treffen)], 'left siblings': [], 'auto preterminal span': (22, 24), 'span': (22, 24), 'parent': 'NX', 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		(SIMPX haben sie schon irgendwelche vorschlage)
		(SIMPX ich weis nicht)
		(SIMPX
			(SIMPX in die oper mochte ich grade nicht gehen oder ins konzert)
			(SIMPX
				(KOORD aber)
				(ADVX vielleicht)
				(NX irgendwas)
				(NX
					(NX
						[01;31m(ADJX[00m
							(ADJA kleines)[01;31m)[00m
						[01;31m(ADJX[00m
							(ADJA gemutliches)[01;31m)[00m)
					[01;36m(VXINF[00m
						[01;36m(VC[00m
							(NN treffen)[01;36m)[00m[01;36m)[00m)))))
Step:Single Word Phrase
{'subtrees': ['NN'], 'family': ['NX', 'VC'], 'over_word': True, 'over words': True, 'auto preterminals': ('NN',), 'right siblings': [], 'left siblings': [(NX (ADJX (ADJA kleines)) (ADJX (ADJA gemutliches)))], 'auto preterminal span': (24, 25), 'span': (24, 25), 'parent': 'NX', 'label': 'VC', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SIMPX haben sie schon irgendwelche vorschlage)
		(SIMPX ich weis nicht)
		(SIMPX
			(SIMPX in die oper mochte ich grade nicht gehen oder ins konzert)
			(SIMPX
				(KOORD aber)
				(ADVX vielleicht)
				(NX irgendwas)
				(NX
					(NX
						[01;31m(ADJX[00m
							(ADJA kleines)[01;31m)[00m
						[01;31m(ADJX[00m
							(ADJA gemutliches)[01;31m)[00m)
					[01;36m(VXINF[00m
						(VC
							(NN treffen))[01;36m)[00m)))))
Step:Unary
{'subtrees': ['VC'], 'family': ['NX', 'VXINF'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN',), 'right siblings': [], 'left siblings': [(NX (ADJX (ADJA kleines)) (ADJX (ADJA gemutliches)))], 'auto preterminal span': (24, 25), 'span': (24, 25), 'parent': 'NX', 'label': 'VXINF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SIMPX haben sie schon irgendwelche vorschlage)
		(SIMPX ich weis nicht)
		(SIMPX
			(SIMPX in die oper mochte ich grade nicht gehen oder ins konzert)
			(SIMPX
				(KOORD aber)
				(ADVX vielleicht)
				(NX irgendwas)
				(NX
					(NX
						[01;31m(ADJX[00m
							(ADJA kleines)[01;31m)[00m
						[01;31m(ADJX[00m
							(ADJA gemutliches)[01;31m)[00m)
					(VXINF treffen))))))
Step:Single Word Phrase
{'subtrees': ['ADJA'], 'family': ['ADJX', 'ADJX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADJA', 'ADJA'), 'right siblings': ['ADJX'], 'parent': 'NX', 'auto preterminal span': (22, 24), 'span': (22, 23), 'left siblings': [], 'label': 'ADJX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX haben sie schon irgendwelche vorschlage)
		(SIMPX ich weis nicht)
		(SIMPX
			(SIMPX in die oper mochte ich grade nicht gehen oder ins konzert)
			(SIMPX
				(KOORD aber)
				(ADVX vielleicht)
				(NX irgendwas)
				(NX
					(NX
						(ADJA kleines)
						[01;31m(ADJX[00m
							(ADJA gemutliches)[01;31m)[00m)
					(VXINF treffen))))))
Step:Single Word Phrase
{'subtrees': ['ADJA'], 'family': ['ADJA', 'ADJX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADJA', 'ADJA'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (22, 24), 'span': (23, 24), 'left siblings': ['ADJA'], 'label': 'ADJX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP haben sie schon irgendwelche vorschlage ich weis nicht in die oper mochte ich grade nicht gehen oder ins konzert aber vielleicht irgendwas kleines gemutliches treffen)

Sentence 523:
0 Initial errors
0 on fringe, 0 iterations

Sentence 524:
0 Initial errors
0 on fringe, 0 iterations

Sentence 525:
0 Initial errors
0 on fringe, 0 iterations

Sentence 526:
2 Initial errors
0 on fringe, 2 iterations
1 Error:UNSET remove
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		[01;31m(SIMPX[00m
			(VF wir)
			(LK konnen)
			(MF auch gleich halb acht)
			(VC sagen)
			[01;31m(NF[00m
				(NX
					(NX sieben uhr)
					(NX sieben uhr funfundzwanzig))[01;31m)[00m[01;31m)[00m
		(DM gut)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'VC', 'NF'], 'family': ['DM', 'SIMPX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VMFIN', 'ADV', 'ADV', 'ADJD', 'CARD', 'VVINF', 'CARD', 'NN', 'CARD', 'NN', 'CARD', 'ITJ'), 'right siblings': ['DM'], 'parent': 'TURN', 'auto preterminal span': (0, 14), 'span': (1, 13), 'left siblings': ['DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(VF wir)
		(LK konnen)
		(MF auch gleich halb acht)
		(VC sagen)
		[01;31m(NF[00m
			(NX
				(NX sieben uhr)
				(NX sieben uhr funfundzwanzig))[01;31m)[00m
		(DM gut)))
Step:Unary
{'subtrees': ['NX'], 'family': ['DM', 'VF', 'LK', 'MF', 'VC', 'NF', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VMFIN', 'ADV', 'ADV', 'ADJD', 'CARD', 'VVINF', 'CARD', 'NN', 'CARD', 'NN', 'CARD', 'ITJ'), 'right siblings': ['DM'], 'parent': 'TURN', 'auto preterminal span': (0, 14), 'span': (8, 13), 'left siblings': ['DM', 'VF', 'LK', 'MF', 'VC'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja wir konnen auch gleich halb acht sagen sieben uhr sieben uhr funfundzwanzig gut)

Sentence 527:
0 Initial errors
0 on fringe, 0 iterations

Sentence 528:
0 Initial errors
0 on fringe, 0 iterations

Sentence 529:
0 Initial errors
0 on fringe, 0 iterations

Sentence 530:
0 Initial errors
0 on fringe, 0 iterations

Sentence 531:
0 Initial errors
0 on fringe, 0 iterations

Sentence 532:
0 Initial errors
0 on fringe, 0 iterations

Sentence 533:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Co-ordination
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX [01;33m(NX[00m
			(VF
				(NX
					(ART der)
					[01;31m(NX[00m
						(NX dienstag) [01;33mNX)[00m
						(KON und)
						(NX mittwoch)[01;31m)[00m))
			(LK wurde)
			(MF bei mir sehr gut)
			(VC passen))))
Step:Co-ordination
{'new_parent': 'VF', 'new_family': ['NX', 'KON', 'NX'], 'mover info': [('KON', (3, 4)), ('NX', (4, 5))], 'old_family': ['NX', 'KON', 'NX'], 'start left siblings': ['NX'], 'auto preterminals': ('ART', 'NN', 'KON', 'NN'), 'start right siblings': [], 'end left siblings': ['NX'], 'auto preterminal span': (1, 5), 'adding node already present': False, 'movers': ['KON', 'NX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'Co-ordination', 'type': 'move', 'added label': 'NX'}
(TOP ja der dienstag und mittwoch wurde bei mir sehr gut passen)

Sentence 534:
0 Initial errors
0 on fringe, 0 iterations

Sentence 535:
3 Initial errors
0 on fringe, 2 iterations
2 Error:Modifier Attachment
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ach)
		(SIMPX
			(VF das)
			(LK ist)
			(MF
				(ADVX doch)
				[01;36m(ADJX[00m
					(ADVX etwas)
					[01;31m(ADJX[00m
						(ADVX sehr)
						(ADJD fruh)[01;31m)[00m[01;36m)[00m))
		(DM oder)
		(SIMPX
			(VF wann)
			(LK geht)
			(MF
				(ADVX denn)
				[01;36m(NX[00m
					(NX der zweite zug)
					(PX in der fruh)[01;36m)[00m))))
Step:Modifier Attachment
{'new_parent': 'ADJX', 'new_family': ['ADVX', 'ADVX', 'ADJD'], 'mover info': [('ADVX', (4, 5))], 'old_family': ['ADVX', 'ADVX', 'ADJX'], 'start left siblings': ['ADVX'], 'auto preterminals': ('ADV', 'ADV', 'ADV', 'ADJD'), 'start right siblings': ['ADJX'], 'end left siblings': [], 'auto preterminal span': (3, 7), 'movers': ['ADVX'], 'old_parent': 'MF', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['ADVX', 'ADJD'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ach)
		(SIMPX das ist doch etwas sehr fruh)
		(DM oder)
		(SIMPX
			(VF wann)
			(LK geht)
			(MF
				(ADVX denn)
				[01;36m(NX[00m
					(NX der zweite zug)
					(PX in der fruh)[01;36m)[00m))))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'ADJA', 'NN', 'APPR', 'ART', 'NN'), 'right siblings': [], 'left siblings': [(ADVX (ADV denn))], 'auto preterminal span': (11, 17), 'span': (11, 17), 'parent': 'MF', 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP ach das ist doch etwas sehr fruh oder wann geht denn der zweite zug in der fruh)

Sentence 536:
0 Initial errors
0 on fringe, 0 iterations

Sentence 537:
10 Initial errors
0 on fringe, 9 iterations
2 Error:Single Word Phrase
1 Error:Modifier Attachment
1 Error:UNSET remove
1 Error:Unary
1 Error:PP Attachment
1 Error:Unary
1 Error:Unary
1 Error:UNSET remove
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM sehr schon)
		(SIMPX dann sollten wir auch gleich ein hotel in der nahe vom hauptbahnhof nehmen)
		[01;31m(SIMPX[00m
			(VF was)
			(LK wurden)
			(MF sie denn vom schloshotel hannover)
			(VC halten)[01;31m)[00m
		(SIMPX
			(VF es)
			(LK ist)
			(MF
				(ADJX
					(NX
						(NX
							[01;36m(ADVX[00m
								(ADVX etwa)
								(ADVX nur)[01;36m)[00m
							(ADJX funf)
							(NN minuten))
						(PX vom hauptbahnhof))
					(ADJD entfernt))))
		(SIMPX
			(KOORD und)
			[01;31m(VF[00m
				[01;31m(NX[00m
					(NX der preis)
					(PX fur das einzelzimmer)[01;31m)[00m[01;31m)[00m
			[01;36m(ADVX[00m [01;31m(LK[00m [01;33m(ADJX[00m
				[01;31m(VXFIN[00m
					(VVFIN betragt)[01;31m)[00m[01;31m)[00m[01;36m)[00m
			[01;31m(MF[00m
				[01;31m(NX[00m
					(ADJX hundert funfunddreisig) [01;33mADJX)[00m
					(NN mark)[01;31m)[00m[01;31m)[00m)))
Step:Single Word Phrase
{'family': ['ADVX'], 'auto preterminal span': (38, 39), 'span': (38, 39), 'subtrees': ['VVFIN'], 'parent': 'LK', 'over_word': True, 'auto preterminals': ('VVFIN',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VXFIN', 'ADVX')}
(TOP
	(TURN
		(DM sehr schon)
		(SIMPX dann sollten wir auch gleich ein hotel in der nahe vom hauptbahnhof nehmen)
		[01;31m(SIMPX[00m
			(VF was)
			(LK wurden)
			(MF sie denn vom schloshotel hannover)
			(VC halten)[01;31m)[00m
		(SIMPX
			(VF es)
			(LK ist)
			(MF
				(ADJX
					(NX
						(NX
							[01;36m(ADVX[00m
								(ADVX etwa)
								(ADVX nur)[01;36m)[00m
							(ADJX funf)
							(NN minuten))
						(PX vom hauptbahnhof))
					(ADJD entfernt))))
		(SIMPX
			(KOORD und)
			[01;31m(VF[00m
				[01;31m(NX[00m
					(NX der preis)
					(PX fur das einzelzimmer)[01;31m)[00m[01;31m)[00m
			[01;31m(LK[00m [01;33m(ADJX[00m
				(ADVX
					(VVFIN betragt))[01;31m)[00m
			[01;31m(MF[00m
				[01;31m(NX[00m
					(ADJX hundert funfunddreisig) [01;33mADJX)[00m
					(NN mark)[01;31m)[00m[01;31m)[00m)))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'ADVX'], 'family': ['ADVX', 'ADJX', 'NN'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV'), 'right siblings': [(ADJX (CARD funf)), (NN minuten)], 'left siblings': [], 'auto preterminal span': (25, 27), 'span': (25, 27), 'parent': 'NX', 'label': 'ADVX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM sehr schon)
		(SIMPX dann sollten wir auch gleich ein hotel in der nahe vom hauptbahnhof nehmen)
		[01;31m(SIMPX[00m
			(VF was)
			(LK wurden)
			(MF sie denn vom schloshotel hannover)
			(VC halten)[01;31m)[00m
		(SIMPX es ist etwa nur funf minuten vom hauptbahnhof entfernt)
		(SIMPX
			(KOORD und)
			[01;31m(VF[00m
				[01;31m(NX[00m
					(NX der preis)
					(PX fur das einzelzimmer)[01;31m)[00m[01;31m)[00m
			[01;31m(LK[00m [01;33m(ADJX[00m
				(ADVX
					(VVFIN betragt))[01;31m)[00m
			[01;31m(MF[00m
				[01;31m(NX[00m
					(ADJX hundert funfunddreisig) [01;33mADJX)[00m
					(NN mark)[01;31m)[00m[01;31m)[00m)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADJD', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'NN', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'VVINF', 'PWS', 'VAFIN', 'PPER', 'ADV', 'APPRART', 'NE', 'NE', 'VVINF', 'PPER', 'VAFIN', 'ADV', 'ADV', 'CARD', 'NN', 'APPRART', 'NN', 'ADJD', 'KON', 'ART', 'NN', 'APPR', 'ART', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN'), 'right siblings': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 42), 'span': (15, 23), 'left siblings': ['DM', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM sehr schon)
		(SIMPX dann sollten wir auch gleich ein hotel in der nahe vom hauptbahnhof nehmen)
		(VF was)
		(LK wurden)
		(MF sie denn vom schloshotel hannover)
		(VC halten)
		(SIMPX es ist etwa nur funf minuten vom hauptbahnhof entfernt)
		(SIMPX
			(KOORD und)
			[01;31m(VF[00m
				[01;31m(NX[00m
					(NX der preis)
					(PX fur das einzelzimmer)[01;31m)[00m[01;31m)[00m
			[01;31m(LK[00m [01;33m(ADJX[00m
				(ADVX
					(VVFIN betragt))[01;31m)[00m
			[01;31m(MF[00m
				[01;31m(NX[00m
					(ADJX hundert funfunddreisig) [01;33mADJX)[00m
					(NN mark)[01;31m)[00m[01;31m)[00m)))
Step:Unary
{'subtrees': ['NX'], 'family': ['KOORD', 'VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'ART', 'NN', 'APPR', 'ART', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN'), 'right siblings': ['LK', 'MF'], 'parent': 'SIMPX', 'auto preterminal span': (32, 42), 'span': (33, 38), 'left siblings': ['KOORD'], 'label': 'VF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM sehr schon)
		(SIMPX dann sollten wir auch gleich ein hotel in der nahe vom hauptbahnhof nehmen)
		(VF was)
		(LK wurden)
		(MF sie denn vom schloshotel hannover)
		(VC halten)
		(SIMPX es ist etwa nur funf minuten vom hauptbahnhof entfernt)
		(SIMPX
			(KOORD und)
			[01;31m(NX[00m
				(NX der preis)
				(PX fur das einzelzimmer)[01;31m)[00m
			[01;31m(LK[00m [01;33m(ADJX[00m
				(ADVX
					(VVFIN betragt))[01;31m)[00m
			[01;31m(MF[00m
				[01;31m(NX[00m
					(ADJX hundert funfunddreisig) [01;33mADJX)[00m
					(NN mark)[01;31m)[00m[01;31m)[00m)))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['KOORD', 'NX', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'ART', 'NN', 'APPR', 'ART', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN'), 'right siblings': ['LK', 'MF'], 'parent': 'SIMPX', 'auto preterminal span': (32, 42), 'span': (33, 38), 'left siblings': ['KOORD'], 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM sehr schon)
		(SIMPX dann sollten wir auch gleich ein hotel in der nahe vom hauptbahnhof nehmen)
		(VF was)
		(LK wurden)
		(MF sie denn vom schloshotel hannover)
		(VC halten)
		(SIMPX es ist etwa nur funf minuten vom hauptbahnhof entfernt)
		(SIMPX
			(KOORD und)
			(NX der preis)
			(PX fur das einzelzimmer)
			[01;31m(LK[00m [01;33m(ADJX[00m
				(ADVX
					(VVFIN betragt))[01;31m)[00m
			[01;31m(MF[00m
				[01;31m(NX[00m
					(ADJX hundert funfunddreisig) [01;33mADJX)[00m
					(NN mark)[01;31m)[00m[01;31m)[00m)))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['KOORD', 'NX', 'PX', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'ART', 'NN', 'APPR', 'ART', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN'), 'right siblings': ['MF'], 'parent': 'SIMPX', 'auto preterminal span': (32, 42), 'span': (38, 39), 'left siblings': ['KOORD', 'NX', 'PX'], 'label': 'LK', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM sehr schon)
		(SIMPX dann sollten wir auch gleich ein hotel in der nahe vom hauptbahnhof nehmen)
		(VF was)
		(LK wurden)
		(MF sie denn vom schloshotel hannover)
		(VC halten)
		(SIMPX es ist etwa nur funf minuten vom hauptbahnhof entfernt)
		(SIMPX
			(KOORD und)
			(NX der preis)
			(PX fur das einzelzimmer)
			[01;33m(ADJX[00m (ADVX betragt)
			[01;31m(MF[00m
				[01;31m(NX[00m
					(ADJX hundert funfunddreisig) [01;33mADJX)[00m
					(NN mark)[01;31m)[00m[01;31m)[00m)))
Step:Unary
{'subtrees': ['NX'], 'family': ['KOORD', 'NX', 'PX', 'ADVX', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'ART', 'NN', 'APPR', 'ART', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (32, 42), 'span': (39, 42), 'left siblings': ['KOORD', 'NX', 'PX', 'ADVX'], 'label': 'MF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM sehr schon)
		(SIMPX dann sollten wir auch gleich ein hotel in der nahe vom hauptbahnhof nehmen)
		(VF was)
		(LK wurden)
		(MF sie denn vom schloshotel hannover)
		(VC halten)
		(SIMPX es ist etwa nur funf minuten vom hauptbahnhof entfernt)
		(SIMPX
			(KOORD und)
			(NX der preis)
			(PX fur das einzelzimmer)
			[01;33m(ADJX[00m (ADVX betragt)
			[01;31m(NX[00m
				(ADJX hundert funfunddreisig) [01;33mADJX)[00m
				(NN mark)[01;31m)[00m)))
Step:UNSET remove
{'subtrees': ['ADJX', 'NN'], 'family': ['KOORD', 'NX', 'PX', 'ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'ART', 'NN', 'APPR', 'ART', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (32, 42), 'span': (39, 42), 'left siblings': ['KOORD', 'NX', 'PX', 'ADVX'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM sehr schon)
		(SIMPX dann sollten wir auch gleich ein hotel in der nahe vom hauptbahnhof nehmen)
		(VF was)
		(LK wurden)
		(MF sie denn vom schloshotel hannover)
		(VC halten)
		(SIMPX es ist etwa nur funf minuten vom hauptbahnhof entfernt)
		(SIMPX
			(KOORD und)
			(NX der preis)
			(PX fur das einzelzimmer)
			[01;36m(ADJX[00m
				(ADVX betragt)
				(ADJX hundert funfunddreisig)[01;36m)[00m
			(NN mark))))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'ADJX'], 'family': ['KOORD', 'NX', 'PX', 'ADJX', 'NN'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'CARD', 'CARD'), 'right siblings': [(NN mark)], 'left siblings': [(KOORD (KON und)), (NX (ART der) (NN preis)), (PX (APPR fur) (NX (ART das) (NN einzelzimmer)))], 'auto preterminal span': (38, 41), 'span': (38, 41), 'parent': 'SIMPX', 'label': 'ADJX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP sehr schon dann sollten wir auch gleich ein hotel in der nahe vom hauptbahnhof nehmen was wurden sie denn vom schloshotel hannover halten es ist etwa nur funf minuten vom hauptbahnhof entfernt und der preis fur das einzelzimmer betragt hundert funfunddreisig mark)

Sentence 538:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM sehr schon)
		(SIMPX und wie sieht es dann aus)
		(SIMPX
			(LK sollen)
			(MF wir uns vielleicht irgendwelche theaterkarten)
			(VC besorgen)
			(NF
				(SIMPX
					(SIMPX wenn wir schon dort sind)
					[01;36m(NF[00m
						(SIMPX
							(C das)
							(MF wir bischen kultur)
							(VC mitnehmen))[01;36m)[00m)))))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SIMPX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'PIDAT', 'NN', 'VVFIN'), 'right siblings': [], 'left siblings': [(SIMPX (C (KOUS wenn)) (MF (NX (PPER wir)) (ADVX (ADV schon)) (ADVX (ADV dort))) (VC (VXFIN (VAFIN sind))))], 'auto preterminal span': (20, 25), 'span': (20, 25), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP sehr schon und wie sieht es dann aus sollen wir uns vielleicht irgendwelche theaterkarten besorgen wenn wir schon dort sind das wir bischen kultur mitnehmen)

Sentence 539:
0 Initial errors
0 on fringe, 0 iterations

Sentence 540:
13 Initial errors
0 on fringe, 11 iterations
2 Error:Different label
2 Error:Single Word Phrase
1 Error:UNSET add
1 Error:Single Word Phrase
1 Error:Single Word Phrase
1 Error:UNSET remove
1 Error:Unary
1 Error:Clause Attachment
1 Error:Single Word Phrase
1 Error:UNSET remove
1 Error:UNSET add
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX finde ich auch)
		(SIMPX
			(KOORD und)
			[01;31m(LV[00m
				[01;31m(SIMPX[00m
					[01;31m(SIMPX[00m
						(C falls)
						[01;36m(MF[00m
							[01;33m(MF[00m (MF sich irgendwas)
							[01;36m(NX[00m [01;31m(VC[00m
								[01;31m(VXFIN[00m
									(VVFIN andert)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;31m)[00m
					[01;36m(KOORD[00m
						(KON oder)[01;36m)[00m
					[01;31m(SIMPX[00m
						(C wenn)
						(MF
							(NX wir)
							(NX
								[01;36m(ADVX[00m [01;31m(ADJX[00m
									(ADJA nahere)[01;31m)[00m[01;36m)[00m
								[01;36m(NX[00m
									(NN einzelheiten)[01;36m)[00m)) [01;33mMF)[00m
						(VC wissen)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			(VF dann)
			(LK kontaktieren)
			(MF wir uns einfach noch mal))))
Step:Different label
{'family': ['C', 'MF', 'NX'], 'auto preterminal span': (8, 9), 'span': (8, 9), 'subtrees': ['VXFIN'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('VVFIN',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('VC', 'NX')}
(TOP
	(TURN
		(DM ja)
		(SIMPX finde ich auch)
		(SIMPX
			(KOORD und)
			[01;31m(LV[00m
				[01;31m(SIMPX[00m
					[01;31m(SIMPX[00m
						(C falls)
						[01;36m(MF[00m
							[01;33m(MF[00m (MF sich irgendwas)
							(NX
								[01;31m(VXFIN[00m
									(VVFIN andert)[01;31m)[00m)[01;36m)[00m[01;31m)[00m
					[01;36m(KOORD[00m
						(KON oder)[01;36m)[00m
					[01;31m(SIMPX[00m
						(C wenn)
						(MF
							(NX wir)
							(NX
								[01;36m(ADVX[00m [01;31m(ADJX[00m
									(ADJA nahere)[01;31m)[00m[01;36m)[00m
								[01;36m(NX[00m
									(NN einzelheiten)[01;36m)[00m)) [01;33mMF)[00m
						(VC wissen)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			(VF dann)
			(LK kontaktieren)
			(MF wir uns einfach noch mal))))
Step:Single Word Phrase
{'family': ['ADVX', 'NN'], 'auto preterminal span': (12, 13), 'span': (12, 13), 'subtrees': ['ADJA'], 'parent': 'NX', 'over_word': True, 'auto preterminals': ('ADJA',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'ADVX')}
(TOP
	(TURN
		(DM ja)
		(SIMPX finde ich auch)
		(SIMPX
			(KOORD und)
			[01;31m(LV[00m
				[01;31m(SIMPX[00m
					[01;31m(SIMPX[00m
						(C falls)
						[01;36m(MF[00m
							[01;33m(MF[00m (MF sich irgendwas)
							(NX
								[01;31m(VXFIN[00m
									(VVFIN andert)[01;31m)[00m)[01;36m)[00m[01;31m)[00m
					[01;36m(KOORD[00m
						(KON oder)[01;36m)[00m
					[01;31m(SIMPX[00m
						(C wenn)
						(MF
							(NX wir)
							(NX
								(ADVX nahere)
								[01;36m(NX[00m
									(NN einzelheiten)[01;36m)[00m)) [01;33mMF)[00m
						(VC wissen)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			(VF dann)
			(LK kontaktieren)
			(MF wir uns einfach noch mal))))
Step:UNSET add
{'subtrees': ['MF', 'NX'], 'family': ['C', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PRF', 'PIS', 'VVFIN'), 'right siblings': [], 'left siblings': [(C (KOUS falls))], 'auto preterminal span': (6, 9), 'span': (6, 9), 'parent': 'SIMPX', 'label': 'MF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX finde ich auch)
		(SIMPX
			(KOORD und)
			[01;31m(LV[00m
				[01;31m(SIMPX[00m
					[01;31m(SIMPX[00m
						(C falls)
						(MF [01;33m(MF[00m
							(MF sich irgendwas)
							(NX
								[01;31m(VXFIN[00m
									(VVFIN andert)[01;31m)[00m))[01;31m)[00m
					[01;36m(KOORD[00m
						(KON oder)[01;36m)[00m
					[01;31m(SIMPX[00m
						(C wenn)
						(MF
							(NX wir)
							(NX
								(ADVX nahere)
								[01;36m(NX[00m
									(NN einzelheiten)[01;36m)[00m)) [01;33mMF)[00m
						(VC wissen)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			(VF dann)
			(LK kontaktieren)
			(MF wir uns einfach noch mal))))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['SIMPX', 'KOORD', 'SIMPX'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON',), 'right siblings': [(SIMPX (C (KOUS wenn)) (MF (NX (PPER wir)) (NX (ADVX (ADJA nahere)) (NN einzelheiten))) (VC (VXFIN (VVFIN wissen))))], 'left siblings': [(SIMPX (C (KOUS falls)) (MF (MF (NX (PRF sich)) (NX (PIS irgendwas))) (NX (VXFIN (VVFIN andert)))))], 'auto preterminal span': (9, 10), 'span': (9, 10), 'parent': 'SIMPX', 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX finde ich auch)
		(SIMPX
			(KOORD und)
			[01;31m(LV[00m
				[01;31m(SIMPX[00m
					[01;31m(SIMPX[00m
						(C falls)
						(MF [01;33m(MF[00m
							(MF sich irgendwas)
							(NX
								[01;31m(VXFIN[00m
									(VVFIN andert)[01;31m)[00m))[01;31m)[00m
					(KOORD oder)
					[01;31m(SIMPX[00m
						(C wenn)
						(MF
							(NX wir)
							(NX
								(ADVX nahere)
								[01;36m(NX[00m
									(NN einzelheiten)[01;36m)[00m)) [01;33mMF)[00m
						(VC wissen)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			(VF dann)
			(LK kontaktieren)
			(MF wir uns einfach noch mal))))
Step:Single Word Phrase
{'subtrees': ['NN'], 'family': ['ADVX', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('NN',), 'right siblings': [], 'left siblings': [(ADVX (ADJA nahere))], 'auto preterminal span': (13, 14), 'span': (13, 14), 'parent': 'NX', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX finde ich auch)
		(SIMPX
			(KOORD und)
			[01;31m(LV[00m
				[01;31m(SIMPX[00m
					[01;31m(SIMPX[00m
						(C falls)
						(MF [01;33m(MF[00m
							(MF sich irgendwas)
							(NX
								[01;31m(VXFIN[00m
									(VVFIN andert)[01;31m)[00m))[01;31m)[00m
					(KOORD oder)
					[01;31m(SIMPX[00m
						(C wenn)
						(MF wir nahere einzelheiten) [01;33mMF)[00m
						(VC wissen)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			(VF dann)
			(LK kontaktieren)
			(MF wir uns einfach noch mal))))
Step:UNSET remove
{'subtrees': ['C', 'MF'], 'family': ['SIMPX', 'KOORD', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PRF', 'PIS', 'VVFIN', 'KON', 'KOUS', 'PPER', 'ADJA', 'NN', 'VVFIN'), 'right siblings': ['KOORD', 'SIMPX'], 'parent': 'SIMPX', 'auto preterminal span': (5, 15), 'span': (5, 9), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX finde ich auch)
		(SIMPX
			(KOORD und)
			[01;31m(LV[00m
				[01;31m(SIMPX[00m
					(C falls)
					(MF [01;33m(MF[00m
						(MF sich irgendwas)
						(NX
							[01;31m(VXFIN[00m
								(VVFIN andert)[01;31m)[00m))
					(KOORD oder)
					[01;31m(SIMPX[00m
						(C wenn)
						(MF wir nahere einzelheiten) [01;33mMF)[00m
						(VC wissen)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			(VF dann)
			(LK kontaktieren)
			(MF wir uns einfach noch mal))))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['KOORD', 'LV', 'VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'KOUS', 'PRF', 'PIS', 'VVFIN', 'KON', 'KOUS', 'PPER', 'ADJA', 'NN', 'VVFIN', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV'), 'right siblings': ['VF', 'LK', 'MF'], 'parent': 'SIMPX', 'auto preterminal span': (4, 22), 'span': (5, 15), 'left siblings': ['KOORD'], 'label': 'LV', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX finde ich auch)
		(SIMPX
			(KOORD und)
			[01;31m(SIMPX[00m
				(C falls)
				(MF [01;33m(MF[00m
					(MF sich irgendwas)
					(NX
						[01;31m(VXFIN[00m
							(VVFIN andert)[01;31m)[00m))
				(KOORD oder)
				[01;31m(SIMPX[00m
					(C wenn)
					(MF wir nahere einzelheiten) [01;33mMF)[00m
					(VC wissen)[01;31m)[00m[01;31m)[00m
			(VF dann)
			(LK kontaktieren)
			(MF wir uns einfach noch mal))))
Step:Clause Attachment
{'subtrees': ['C', 'MF', 'KOORD', 'SIMPX'], 'family': ['KOORD', 'SIMPX', 'VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'KOUS', 'PRF', 'PIS', 'VVFIN', 'KON', 'KOUS', 'PPER', 'ADJA', 'NN', 'VVFIN', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV'), 'right siblings': ['VF', 'LK', 'MF'], 'parent': 'SIMPX', 'auto preterminal span': (4, 22), 'span': (5, 15), 'left siblings': ['KOORD'], 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX finde ich auch)
		(SIMPX
			(KOORD und)
			(C falls)
			(MF [01;33m(MF[00m
				(MF sich irgendwas)
				(NX
					[01;31m(VXFIN[00m
						(VVFIN andert)[01;31m)[00m))
			(KOORD oder)
			[01;31m(SIMPX[00m
				(C wenn)
				(MF wir nahere einzelheiten) [01;33mMF)[00m
				(VC wissen)[01;31m)[00m
			(VF dann)
			(LK kontaktieren)
			(MF wir uns einfach noch mal))))
Step:Single Word Phrase
{'subtrees': ['VVFIN'], 'family': ['VXFIN'], 'over_word': True, 'over words': True, 'auto preterminals': ('VVFIN',), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (8, 9), 'span': (8, 9), 'left siblings': [], 'label': 'VXFIN', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX finde ich auch)
		(SIMPX
			(KOORD und)
			(C falls)
			[01;33m(MF[00m (MF sich irgendwas andert)
			(KOORD oder)
			[01;31m(SIMPX[00m
				(C wenn)
				(MF wir nahere einzelheiten) [01;33mMF)[00m
				(VC wissen)[01;31m)[00m
			(VF dann)
			(LK kontaktieren)
			(MF wir uns einfach noch mal))))
Step:UNSET remove
{'subtrees': ['C', 'MF', 'VC'], 'family': ['KOORD', 'C', 'MF', 'KOORD', 'SIMPX', 'VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'KOUS', 'PRF', 'PIS', 'VVFIN', 'KON', 'KOUS', 'PPER', 'ADJA', 'NN', 'VVFIN', 'ADV', 'VVFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV'), 'right siblings': ['VF', 'LK', 'MF'], 'parent': 'SIMPX', 'auto preterminal span': (4, 22), 'span': (10, 15), 'left siblings': ['KOORD', 'C', 'MF', 'KOORD'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX finde ich auch)
		(SIMPX
			(KOORD und)
			(C falls)
			[01;36m(MF[00m
				(MF sich irgendwas andert)
				(KOORD oder)
				(C wenn)
				(MF wir nahere einzelheiten)[01;36m)[00m
			(VC wissen)
			(VF dann)
			(LK kontaktieren)
			(MF wir uns einfach noch mal))))
Step:UNSET add
{'subtrees': ['MF', 'KOORD', 'C', 'MF'], 'family': ['KOORD', 'C', 'MF', 'VC', 'VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PRF', 'PIS', 'VVFIN', 'KON', 'KOUS', 'PPER', 'ADJA', 'NN'), 'right siblings': [(VC (VXFIN (VVFIN wissen))), (VF (ADVX (ADV dann))), (LK (VXFIN (VVFIN kontaktieren))), (MF (NX (PPER wir)) (NX (PRF uns)) (ADVX (ADV einfach)) (ADVX (ADV noch)) (ADVX (ADV mal)))], 'left siblings': [(KOORD (KON und)), (C (KOUS falls))], 'auto preterminal span': (6, 14), 'span': (6, 14), 'parent': 'SIMPX', 'label': 'MF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP ja finde ich auch und falls sich irgendwas andert oder wenn wir nahere einzelheiten wissen dann kontaktieren wir uns einfach noch mal)

Sentence 541:
0 Initial errors
0 on fringe, 0 iterations

Sentence 542:
0 Initial errors
0 on fringe, 0 iterations

Sentence 543:
2 Initial errors
0 on fringe, 2 iterations
1 Error:UNSET add
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM hervorragend)
		[01;36m(SIMPX[00m
			(DM
				[01;31m(VXFIN[00m
					(VVIMP sprich)[01;31m)[00m)
			(NX der erste und zweite september)[01;36m)[00m))
Step:UNSET add
{'subtrees': ['DM', 'NX'], 'family': ['DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVIMP', 'ART', 'ADJA', 'KON', 'ADJA', 'NN'), 'right siblings': [], 'left siblings': [(DM (ITJ hervorragend))], 'auto preterminal span': (1, 7), 'span': (1, 7), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM hervorragend)
		(SIMPX
			(DM
				[01;31m(VXFIN[00m
					(VVIMP sprich)[01;31m)[00m)
			(NX der erste und zweite september))))
Step:Single Word Phrase
{'subtrees': ['VVIMP'], 'family': ['VXFIN'], 'over_word': True, 'over words': True, 'auto preterminals': ('VVIMP',), 'right siblings': [], 'parent': 'DM', 'auto preterminal span': (1, 2), 'span': (1, 2), 'left siblings': [], 'label': 'VXFIN', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP hervorragend sprich der erste und zweite september)

Sentence 544:
0 Initial errors
0 on fringe, 0 iterations

Sentence 545:
1 Initial errors
0 on fringe, 1 iterations
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM gut)
		(SIMPX ist in ordnung)
		[01;31m(SIMPX[00m
			(VF nachdem wir ja im zug auch schon arbeiten konnen)
			(LK durfte)
			(MF das kein problem)
			(VC sein)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['DM', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'VAFIN', 'APPR', 'NN', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'ADV', 'ADV', 'VVINF', 'VMFIN', 'VMFIN', 'PDS', 'PIAT', 'NN', 'VAINF'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 18), 'span': (4, 18), 'left siblings': ['DM', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP gut ist in ordnung nachdem wir ja im zug auch schon arbeiten konnen durfte das kein problem sein)

Sentence 546:
0 Initial errors
0 on fringe, 0 iterations

Sentence 547:
0 Initial errors
0 on fringe, 0 iterations

Sentence 548:
17 Initial errors
0 on fringe, 11 iterations
4 Error:PP Attachment
2 Error:Single Word Phrase
2 Error:Clause Attachment
2 Error:Modifier Attachment
1 Error:Unary
1 Error:Modifier Attachment
1 Error:UNSET add
1 Error:UNSET add
1 Error:Unary
1 Error:Single Word Phrase
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF ich)
				(LK werde)
				(MF meiner sekretarin bescheid)
				(VC sagen)[01;31m)[00m
			[01;36m(NF[00m
				(SIMPX
					(VF die)
					(LK soll)
					(MF sich da drum)
					(VC kummern))[01;36m)[00m[01;36m)[00m
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK werde)
			[01;36m(MF[00m
				[01;31m(MF[00m
					(NX ich)
					(NX ihnen)
					[01;36m(ADJX[00m [01;31m(NX[00m [01;33m(NX (NX[00m
						(NN neues)[01;31m)[00m[01;36m)[00m[01;31m)[00m
				[01;31m(VC[00m
					[01;31m(VXINF[00m
						(VVINF erzahlen)[01;31m)[00m[01;31m)[00m [01;33mNX)[00m
				[01;31m(NF[00m [01;33m(PX[00m
					[01;31m(PX[00m
						(APPRART vom)
						[01;31m(NX[00m
							(NX kulturleben) [01;33mPX) NX)[00m
							(PX in hannover)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m)
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK konnen)
			(MF
				(NX wir)
				(NX uns)
				(ADVX ja)
				[01;31m(ADVX[00m
					(ADVX immer)
					[01;36m(ADVX[00m
						(ADV noch)[01;36m)[00m[01;31m)[00m)
			(VC einigen))
		(SIMPX was halten sie davon)))
Step:PP Attachment
{'new_parent': 'SIMPX', 'new_family': ['KOORD', 'VF', 'LK', 'MF', 'VC', 'NF', 'PX'], 'mover info': [('PX', (21, 23))], 'old_family': ['NX', 'PX'], 'start left siblings': ['NX'], 'auto preterminals': ('KON', 'ADV', 'VAFIN', 'PPER', 'PPER', 'NN', 'VVINF', 'APPRART', 'NN', 'APPR', 'NE'), 'start right siblings': [], 'end left siblings': ['KOORD', 'VF', 'LK', 'MF', 'VC', 'NF'], 'auto preterminal span': (12, 23), 'adding node already present': False, 'movers': ['PX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'ADVX'}
(TOP
	(TURN
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF ich)
				(LK werde)
				(MF meiner sekretarin bescheid)
				(VC sagen)[01;31m)[00m
			[01;36m(NF[00m
				(SIMPX
					(VF die)
					(LK soll)
					(MF sich da drum)
					(VC kummern))[01;36m)[00m[01;36m)[00m
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK werde)
			(MF
				[01;31m(MF[00m
					(NX ich)
					(NX ihnen)
					[01;36m(ADJX[00m [01;31m(NX[00m [01;33m(NX (NX[00m
						(NN neues)[01;31m)[00m[01;36m)[00m[01;31m)[00m
				[01;31m(VC[00m
					[01;31m(VXINF[00m
						(VVINF erzahlen)[01;31m)[00m[01;31m)[00m [01;33mNX)[00m
				[01;31m(NF[00m
					(PX
						(APPRART vom)
						(NX kulturleben))[01;31m)[00m [01;33mNX)[00m
				(PX in hannover)))
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK konnen)
			(MF
				(NX wir)
				(NX uns)
				(ADVX ja)
				[01;31m(ADVX[00m
					(ADVX immer)
					[01;36m(ADVX[00m
						(ADV noch)[01;36m)[00m[01;31m)[00m)
			(VC einigen))
		(SIMPX was halten sie davon)))
Step:Single Word Phrase
{'family': ['NX', 'NX', 'ADJX'], 'auto preterminal span': (17, 18), 'span': (17, 18), 'subtrees': ['NN'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('NN',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('NX', 'ADJX')}
(TOP
	(TURN
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF ich)
				(LK werde)
				(MF meiner sekretarin bescheid)
				(VC sagen)[01;31m)[00m
			[01;36m(NF[00m
				(SIMPX
					(VF die)
					(LK soll)
					(MF sich da drum)
					(VC kummern))[01;36m)[00m[01;36m)[00m
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK werde)
			(MF
				[01;31m(MF[00m
					(NX ich)
					(NX ihnen)
					[01;33m(NX (NX[00m (ADJX neues)[01;31m)[00m
				[01;31m(VC[00m
					[01;31m(VXINF[00m
						(VVINF erzahlen)[01;31m)[00m[01;31m)[00m [01;33mNX)[00m
				[01;31m(NF[00m
					(PX
						(APPRART vom)
						(NX kulturleben))[01;31m)[00m [01;33mNX)[00m
				(PX in hannover)))
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK konnen)
			(MF
				(NX wir)
				(NX uns)
				(ADVX ja)
				[01;31m(ADVX[00m
					(ADVX immer)
					[01;36m(ADVX[00m
						(ADV noch)[01;36m)[00m[01;31m)[00m)
			(VC einigen))
		(SIMPX was halten sie davon)))
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'VC', 'SIMPX'], 'mover info': [('SIMPX', (6, 12))], 'old_family': ['SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'start left siblings': ['SIMPX'], 'auto preterminals': ('PPER', 'VAFIN', 'PPOSAT', 'NN', 'NN', 'VVINF', 'PDS', 'VMFIN', 'PRF', 'ADV', 'PROP', 'VVINF', 'KON', 'ADV', 'VAFIN', 'PPER', 'PPER', 'NN', 'VVINF', 'APPRART', 'NN', 'APPR', 'NE', 'KON', 'ADV', 'VMFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'ADV', 'VVINF', 'PWS', 'VVFIN', 'PPER', 'PROP'), 'start right siblings': ['SIMPX', 'SIMPX', 'SIMPX'], 'end left siblings': ['VF', 'LK', 'MF', 'VC'], 'auto preterminal span': (0, 36), 'movers': ['SIMPX'], 'old_parent': 'TURN', 'end right siblings': [], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(SIMPX
			(VF ich)
			(LK werde)
			(MF meiner sekretarin bescheid)
			(VC sagen)
			[01;36m(NF[00m
				(SIMPX
					(VF die)
					(LK soll)
					(MF sich da drum)
					(VC kummern))[01;36m)[00m)
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK werde)
			(MF
				[01;31m(MF[00m
					(NX ich)
					(NX ihnen)
					[01;33m(NX (NX[00m (ADJX neues)[01;31m)[00m
				[01;31m(VC[00m
					[01;31m(VXINF[00m
						(VVINF erzahlen)[01;31m)[00m[01;31m)[00m [01;33mNX)[00m
				[01;31m(NF[00m
					(PX
						(APPRART vom)
						(NX kulturleben))[01;31m)[00m [01;33mNX)[00m
				(PX in hannover)))
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK konnen)
			(MF
				(NX wir)
				(NX uns)
				(ADVX ja)
				[01;31m(ADVX[00m
					(ADVX immer)
					[01;36m(ADVX[00m
						(ADV noch)[01;36m)[00m[01;31m)[00m)
			(VC einigen))
		(SIMPX was halten sie davon)))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'NX', 'ADVX', 'ADVX', 'ADVX'], 'mover info': [('ADVX', (29, 30))], 'old_family': ['ADVX', 'ADV'], 'start left siblings': [], 'auto preterminals': ('PPER', 'PRF', 'ADV', 'ADV', 'ADV'), 'start right siblings': ['ADV'], 'end left siblings': ['NX', 'NX', 'ADVX'], 'auto preterminal span': (26, 31), 'movers': ['ADVX'], 'old_parent': 'ADVX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['ADVX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SIMPX
			(VF ich)
			(LK werde)
			(MF meiner sekretarin bescheid)
			(VC sagen)
			[01;36m(NF[00m
				(SIMPX
					(VF die)
					(LK soll)
					(MF sich da drum)
					(VC kummern))[01;36m)[00m)
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK werde)
			(MF
				[01;31m(MF[00m
					(NX ich)
					(NX ihnen)
					[01;33m(NX (NX[00m (ADJX neues)[01;31m)[00m
				[01;31m(VC[00m
					[01;31m(VXINF[00m
						(VVINF erzahlen)[01;31m)[00m[01;31m)[00m [01;33mNX)[00m
				[01;31m(NF[00m
					(PX
						(APPRART vom)
						(NX kulturleben))[01;31m)[00m [01;33mNX)[00m
				(PX in hannover)))
		(SIMPX und dann konnen wir uns ja immer noch einigen)
		(SIMPX was halten sie davon)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['VF', 'LK', 'MF', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VMFIN', 'PRF', 'ADV', 'PROP', 'VVINF'), 'right siblings': [], 'left siblings': [(VF (NX (PPER ich))), (LK (VXFIN (VAFIN werde))), (MF (NX (PPOSAT meiner) (NN sekretarin)) (NX (NN bescheid))), (VC (VXINF (VVINF sagen)))], 'auto preterminal span': (6, 12), 'span': (6, 12), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SIMPX ich werde meiner sekretarin bescheid sagen die soll sich da drum kummern)
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK werde)
			(MF
				[01;31m(MF[00m
					(NX ich)
					(NX ihnen)
					[01;33m(NX (NX[00m (ADJX neues)[01;31m)[00m
				[01;31m(VC[00m
					[01;31m(VXINF[00m
						(VVINF erzahlen)[01;31m)[00m[01;31m)[00m [01;33mNX)[00m
				[01;31m(NF[00m
					(PX
						(APPRART vom)
						(NX kulturleben))[01;31m)[00m [01;33mNX)[00m
				(PX in hannover)))
		(SIMPX und dann konnen wir uns ja immer noch einigen)
		(SIMPX was halten sie davon)))
Step:Modifier Attachment
{'subtrees': ['NX', 'NX', 'ADJX'], 'family': ['MF', 'VC', 'NF', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'PPER', 'NN', 'VVINF', 'APPRART', 'NN', 'APPR', 'NE'), 'right siblings': ['VC', 'NF', 'PX'], 'parent': 'MF', 'auto preterminal span': (15, 23), 'span': (15, 18), 'left siblings': [], 'label': 'MF', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX ich werde meiner sekretarin bescheid sagen die soll sich da drum kummern)
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK werde)
			(MF
				(NX ich)
				(NX ihnen)
				[01;36m(NX[00m
					[01;36m(NX[00m
						(ADJX neues)
						[01;31m(VC[00m
							[01;31m(VXINF[00m
								(VVINF erzahlen)[01;31m)[00m[01;31m)[00m[01;36m)[00m
					[01;31m(NF[00m
						(PX
							(APPRART vom)
							(NX kulturleben))[01;31m)[00m[01;36m)[00m
				(PX in hannover)))
		(SIMPX und dann konnen wir uns ja immer noch einigen)
		(SIMPX was halten sie davon)))
Step:UNSET add
{'subtrees': ['ADJX', 'VC'], 'family': ['NX', 'NX', 'NX', 'NF', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'VVINF'), 'right siblings': [(NF (PX (APPRART vom) (NX (NN kulturleben)))), (PX (APPR in) (NX (NE hannover)))], 'left siblings': [(NX (PPER ich)), (NX (PPER ihnen))], 'auto preterminal span': (17, 19), 'span': (17, 19), 'parent': 'MF', 'label': 'NX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SIMPX ich werde meiner sekretarin bescheid sagen die soll sich da drum kummern)
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK werde)
			(MF
				(NX ich)
				(NX ihnen)
				[01;36m(NX[00m
					(NX
						(ADJX neues)
						[01;31m(VC[00m
							[01;31m(VXINF[00m
								(VVINF erzahlen)[01;31m)[00m[01;31m)[00m)
					[01;31m(NF[00m
						(PX
							(APPRART vom)
							(NX kulturleben))[01;31m)[00m[01;36m)[00m
				(PX in hannover)))
		(SIMPX und dann konnen wir uns ja immer noch einigen)
		(SIMPX was halten sie davon)))
Step:UNSET add
{'subtrees': ['NX', 'NF'], 'family': ['NX', 'NX', 'NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'VVINF', 'APPRART', 'NN'), 'right siblings': [(PX (APPR in) (NX (NE hannover)))], 'left siblings': [(NX (PPER ich)), (NX (PPER ihnen))], 'auto preterminal span': (17, 21), 'span': (17, 21), 'parent': 'MF', 'label': 'NX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SIMPX ich werde meiner sekretarin bescheid sagen die soll sich da drum kummern)
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK werde)
			(MF
				(NX ich)
				(NX ihnen)
				(NX
					(NX
						(ADJX neues)
						[01;31m(VC[00m
							[01;31m(VXINF[00m
								(VVINF erzahlen)[01;31m)[00m[01;31m)[00m)
					[01;31m(NF[00m
						(PX
							(APPRART vom)
							(NX kulturleben))[01;31m)[00m)
				(PX in hannover)))
		(SIMPX und dann konnen wir uns ja immer noch einigen)
		(SIMPX was halten sie davon)))
Step:Unary
{'subtrees': ['VXINF'], 'family': ['ADJX', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'VVINF'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (17, 19), 'span': (18, 19), 'left siblings': ['ADJX'], 'label': 'VC', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX ich werde meiner sekretarin bescheid sagen die soll sich da drum kummern)
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK werde)
			(MF
				(NX ich)
				(NX ihnen)
				(NX
					(NX
						(ADJX neues)
						[01;31m(VXINF[00m
							(VVINF erzahlen)[01;31m)[00m)
					[01;31m(NF[00m
						(PX
							(APPRART vom)
							(NX kulturleben))[01;31m)[00m)
				(PX in hannover)))
		(SIMPX und dann konnen wir uns ja immer noch einigen)
		(SIMPX was halten sie davon)))
Step:Single Word Phrase
{'subtrees': ['VVINF'], 'family': ['ADJX', 'VXINF'], 'over_word': True, 'over words': True, 'auto preterminals': ('NN', 'VVINF'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (17, 19), 'span': (18, 19), 'left siblings': ['ADJX'], 'label': 'VXINF', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX ich werde meiner sekretarin bescheid sagen die soll sich da drum kummern)
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK werde)
			(MF
				(NX ich)
				(NX ihnen)
				(NX
					(NX neues erzahlen)
					[01;31m(NF[00m
						(PX
							(APPRART vom)
							(NX kulturleben))[01;31m)[00m)
				(PX in hannover)))
		(SIMPX und dann konnen wir uns ja immer noch einigen)
		(SIMPX was halten sie davon)))
Step:Unary
{'subtrees': ['PX'], 'family': ['NX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'VVINF', 'APPRART', 'NN'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (17, 21), 'span': (19, 21), 'left siblings': ['NX'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ich werde meiner sekretarin bescheid sagen die soll sich da drum kummern und dann werde ich ihnen neues erzahlen vom kulturleben in hannover und dann konnen wir uns ja immer noch einigen was halten sie davon)

Sentence 549:
0 Initial errors
0 on fringe, 0 iterations

Sentence 550:
0 Initial errors
0 on fringe, 0 iterations

Sentence 551:
0 Initial errors
0 on fringe, 0 iterations

Sentence 552:
6 Initial errors
0 on fringe, 3 iterations
3 Error:NP Attachment
2 Error:Different label
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF ich)
			(LK hatte)
			(MF jetzt am vierzehnten und funfzehnten januar zeit)
			[01;36m(NX[00m
				(NF
					[01;31m(PX[00m
						(KON oder)
						[01;36m(NX[00m [01;31m(PX[00m
							[01;36m(PX[00m
								(ADVX auch)
								(PX am wochenende)[01;36m)[00m
							(NX siebzehnter achtzehnter januar)[01;31m)[00m[01;36m)[00m[01;31m)[00m)[01;36m)[00m)
		[01;31m(PX[00m
			(KON und)
			(PX zwischen dem dreiundzwanzigsten und sechsundzwanzigsten januar und dem achtundzwanzigsten und neunundzwanzigsten januar)[01;31m)[00m))
Step:NP Attachment
{'new_parent': 'PX', 'new_family': ['KON', 'PX', 'NX'], 'mover info': [('NX', (14, 17))], 'old_family': ['ADVX', 'PX', 'NX'], 'start left siblings': ['ADVX', 'PX'], 'auto preterminals': ('KON', 'ADV', 'APPRART', 'NN', 'ADJA', 'ADJA', 'NN'), 'start right siblings': [], 'end left siblings': ['KON', 'PX'], 'auto preterminal span': (10, 17), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'PX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF ich)
			(LK hatte)
			(MF jetzt am vierzehnten und funfzehnten januar zeit)
			[01;36m(NX[00m
				(NF
					[01;31m(PX[00m
						(KON oder)
						(NX auch am wochenende siebzehnter achtzehnter januar)[01;31m)[00m)[01;36m)[00m)
		[01;31m(PX[00m
			(KON und)
			(PX zwischen dem dreiundzwanzigsten und sechsundzwanzigsten januar und dem achtundzwanzigsten und neunundzwanzigsten januar)[01;31m)[00m))
Step:Different label
{'family': ['NX'], 'auto preterminal span': (10, 17), 'span': (10, 17), 'subtrees': ['KON', 'NX'], 'parent': 'NF', 'over_word': False, 'auto preterminals': ('KON', 'ADV', 'APPRART', 'NN', 'ADJA', 'ADJA', 'NN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('PX', 'NX')}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich hatte jetzt am vierzehnten und funfzehnten januar zeit oder auch am wochenende siebzehnter achtzehnter januar)
		[01;31m(PX[00m
			(KON und)
			(PX zwischen dem dreiundzwanzigsten und sechsundzwanzigsten januar und dem achtundzwanzigsten und neunundzwanzigsten januar)[01;31m)[00m))
Step:PP Attachment
{'subtrees': ['KON', 'PX'], 'family': ['DM', 'SIMPX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VAFIN', 'ADV', 'APPRART', 'ADJA', 'KON', 'ADJA', 'NN', 'NN', 'KON', 'ADV', 'APPRART', 'NN', 'ADJA', 'ADJA', 'NN', 'KON', 'APPR', 'ART', 'ADJA', 'KON', 'ADJA', 'NN', 'KON', 'ART', 'ADJA', 'KON', 'ADJA', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 30), 'span': (17, 30), 'left siblings': ['DM', 'SIMPX'], 'label': 'PX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP ja ich hatte jetzt am vierzehnten und funfzehnten januar zeit oder auch am wochenende siebzehnter achtzehnter januar und zwischen dem dreiundzwanzigsten und sechsundzwanzigsten januar und dem achtundzwanzigsten und neunundzwanzigsten januar)

Sentence 553:
3 Initial errors
0 on fringe, 2 iterations
2 Error:UNSET move
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM gut)
		(SIMPX verbleiben wir beim achtundzwanzigsten und neunundzwanzigsten januar)
		[01;31m(SIMPX[00m
			[01;31m(LV[00m
				(PX
					(APPR bezuglich)
					(NX des verkehrsmittels))[01;31m)[00m
			[01;36m(SIMPX[00m
				(VF was)
				(LK haben)
				(MF sie sich da)
				(VC vorgestellt)[01;36m)[00m[01;31m)[00m))
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['DM', 'SIMPX', 'LV', 'SIMPX'], 'mover info': [('LV', (8, 11))], 'old_family': ['LV', 'VF', 'LK', 'MF', 'VC'], 'start left siblings': [], 'auto preterminals': ('ITJ', 'VVFIN', 'PPER', 'APPRART', 'ADJA', 'KON', 'ADJA', 'NN', 'APPR', 'ART', 'NN', 'PWS', 'VAFIN', 'PPER', 'PRF', 'ADV', 'VVPP'), 'start right siblings': ['VF', 'LK', 'MF', 'VC'], 'end left siblings': ['DM', 'SIMPX'], 'auto preterminal span': (0, 17), 'movers': ['LV'], 'old_parent': 'SIMPX', 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM gut)
		(SIMPX verbleiben wir beim achtundzwanzigsten und neunundzwanzigsten januar)
		[01;31m(LV[00m
			(PX
				(APPR bezuglich)
				(NX des verkehrsmittels))[01;31m)[00m
		(SIMPX was haben sie sich da vorgestellt)))
Step:Unary
{'subtrees': ['PX'], 'family': ['DM', 'SIMPX', 'LV', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'VVFIN', 'PPER', 'APPRART', 'ADJA', 'KON', 'ADJA', 'NN', 'APPR', 'ART', 'NN', 'PWS', 'VAFIN', 'PPER', 'PRF', 'ADV', 'VVPP'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 17), 'span': (8, 11), 'left siblings': ['DM', 'SIMPX'], 'label': 'LV', 'classified_type': 'Unary', 'type': 'remove'}
(TOP gut verbleiben wir beim achtundzwanzigsten und neunundzwanzigsten januar bezuglich des verkehrsmittels was haben sie sich da vorgestellt)

Sentence 554:
1 Initial errors
0 on fringe, 1 iterations
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(NX ich ebenso)
		[01;31m(PX[00m
			(ADVX eben)
			(PX aus zeitgrunden)[01;31m)[00m))
Step:PP Attachment
{'subtrees': ['ADVX', 'PX'], 'family': ['DM', 'NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'ADV', 'ADV', 'APPR', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 6), 'span': (3, 6), 'left siblings': ['DM', 'NX'], 'label': 'PX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP ja ich ebenso eben aus zeitgrunden)

Sentence 555:
39 Initial errors
0 on fringe, 29 iterations
5 Error:NP Attachment
2 Error:Single Word Phrase
2 Error:Different label
2 Error:Different label
2 Error:Modifier Attachment
2 Error:NP Attachment
1 Error:Unary
1 Error:Unary
1 Error:NP Internal Structure
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:Co-ordination
1 Error:UNSET remove
1 Error:UNSET add
1 Error:UNSET remove
2 Error:PP Attachment
1 Error:UNSET add
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:PP Attachment
1 Error:Single Word Phrase
1 Error:UNSET remove
1 Error:NP Internal Structure
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen)
		[01;31m(NX[00m
			(PX zum einen)
			[01;31m(NX[00m
				(NX das maritimhotel in hannover)
				[01;36m(NF[00m
					(R [01;33m(R[00m
						(C welches)
						[01;31m(FKOORD[00m
							[01;31m(MVC[00m
								(MF am bahnhof)
								(VC liegt)[01;31m)[00m [01;33mR)[00m
							(KON und)
							(MVC
								[01;31m(MF[00m
									(PX zum zentrum)
									[01;31m(NX[00m [01;33m(SIMPX[00m
										(NX funfzehn minuten)
										[01;36m(PX[00m [01;31m(NX[00m [01;33m(VC[00m
											(NN laufzeit)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
								(VC hat))[01;31m)[00m)[01;36m)[00m[01;31m)[00m[01;31m)[00m [01;33mVC) SIMPX)[00m
		(SIMPX es gibt dort eine cafeteria)
		[01;31m(SIMPX[00m
			(VF garage)
			(LK ist)
			(MF naturlich dann nicht nicht unbedingt so wichtig)[01;31m)[00m
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF einzelzimmer)
				(LK kostet)
				[01;31m(MF[00m [01;33m(NX (MF (NX[00m
					(NX
						(ADJX hundert einundfunfzig)
						(NN mark))[01;31m)[00m[01;31m)[00m
			[01;31m(NX[00m
				(NX doppelzimmer) [01;33mNX)[00m
				(NX hundert funf mark)[01;31m)[00m [01;33mMF) NX)[00m[01;36m)[00m
		(NX dann das hotel luisenhof)
		[01;36m(ADJX[00m
			(ADJX funf minuten vom bahnhof entfernt)
			[01;31m(ADJX[00m
				[01;36m(DM[00m
					(ADVX
						(ADV also))[01;36m)[00m
				(ADJX etwas schneller)[01;31m)[00m[01;36m)[00m
		[01;31m(SIMPX[00m
			(VF es)
			(LK gibt)
			(MF
				(NX
					(NX eine bar)
					(NX ein restaurant)
					(KON und)
					(NX
						(ADVX ebenfalls)
						[01;36m(NX[00m
							(ART eine)
							(NN garage)[01;36m)[00m)))[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das hotel loccumerhof)
			(LK ist)
			[01;31m(MF[00m
				(ADVX gleich)
				(PX beim bahnhof)[01;31m)[00m
			(NF anscheinend)[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(VF es)
			(LK gibt)
			(MF
				(NX
					(NX
						(ART ein)
						[01;31m(NX[00m
							(TRUNC schwimm)
							(KON und)
							(NN dampfbad)[01;31m)[00m)
					(KON und)
					(NX eine pianobar)))[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das einzelzimmer)
			(LK kostet)
			(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m
		[01;31m(NX[00m
			(KON und)
			[01;36m(MF[00m [01;31m(NX[00m
				(NX das doppelzimmer)
				[01;31m(NX[00m
					(ADJX hundert dreiundvierzig)
					(NN mark)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF vom zeitangebot)
			(LK ware)
			[01;36m(NX[00m
				(MF
					(NX das hotel loccumerhof)
					(ADVX anscheinend)
					(ADJX besonders gunstig))[01;36m)[00m
			(NF
				(SIMPX
					(C weil)
					(MF
						(NX es)
						(ADVX gleich)
						[01;36m(NX[00m [01;31m(PX[00m
							(APPRART beim)
							(NX bahnhof)[01;31m)[00m[01;36m)[00m)
					(VC liegt)))[01;31m)[00m))
Step:NP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'NX'], 'mover info': [('NX', (53, 57))], 'old_family': ['SIMPX', 'SIMPX', 'NX', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'NX', 'ADJX', 'ADJX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX'], 'start left siblings': ['SIMPX', 'SIMPX', 'NX', 'SIMPX', 'SIMPX', 'SIMPX'], 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'PIAT', 'NN', 'VVPP', 'PDS', 'VMFIN', 'PPER', 'APPR', 'PPER', 'ADV', 'ADV', 'VVINF', 'APPRART', 'PIS', 'ART', 'NE', 'APPR', 'NE', 'PRELS', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPRART', 'NN', 'CARD', 'NN', 'NN', 'VAFIN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NN', 'VAFIN', 'ADV', 'ADV', 'PTKNEG', 'PTKNEG', 'ADV', 'ADV', 'ADJD', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN', 'NN', 'CARD', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'ADJD', 'ADV', 'ADV', 'ADJD', 'PPER', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ART', 'NN', 'KON', 'ART', 'NN', 'NE', 'VAFIN', 'ADV', 'APPRART', 'NN', 'ADV', 'KON', 'PPER', 'VVFIN', 'ART', 'TRUNC', 'KON', 'NN', 'KON', 'ART', 'NN', 'KON', 'ART', 'NN', 'VVFIN', 'ADV', 'CARD', 'CARD', 'NN', 'KON', 'ART', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'VAFIN', 'ART', 'NN', 'NE', 'ADV', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'VVFIN'), 'start right siblings': ['NX', 'ADJX', 'ADJX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX'], 'end left siblings': ['NX'], 'auto preterminal span': (0, 127), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'TURN', 'added and moved': True, 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(SIMPX jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen)
		[01;31m(NX[00m
			(PX zum einen)
			[01;31m(NX[00m
				(NX das maritimhotel in hannover)
				[01;36m(NF[00m
					(R [01;33m(R[00m
						(C welches)
						[01;31m(FKOORD[00m
							[01;31m(MVC[00m
								(MF am bahnhof)
								(VC liegt)[01;31m)[00m [01;33mR)[00m
							(KON und)
							(MVC
								[01;31m(MF[00m
									(PX zum zentrum)
									[01;31m(NX[00m [01;33m(SIMPX[00m
										(NX funfzehn minuten)
										[01;36m(PX[00m [01;31m(NX[00m [01;33m(VC[00m
											(NN laufzeit)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
								(VC hat))[01;31m)[00m)[01;36m)[00m[01;31m)[00m[01;31m)[00m [01;33mVC) SIMPX)[00m
		(SIMPX es gibt dort eine cafeteria)
		[01;31m(SIMPX[00m
			(VF garage)
			(LK ist)
			(MF naturlich dann nicht nicht unbedingt so wichtig)[01;31m)[00m
		(SIMPX
			(VF einzelzimmer)
			(LK kostet)
			(NX [01;33m(NX[00m
				(MF
					(NX hundert einundfunfzig mark)
					[01;31m(NX[00m
						(NX doppelzimmer) [01;33mNX)[00m
						(NX hundert funf mark)[01;31m)[00m)))
		(NX dann das hotel luisenhof)
		[01;36m(ADJX[00m
			(ADJX funf minuten vom bahnhof entfernt)
			[01;31m(ADJX[00m
				[01;36m(DM[00m
					(ADVX
						(ADV also))[01;36m)[00m
				(ADJX etwas schneller)[01;31m)[00m[01;36m)[00m
		[01;31m(SIMPX[00m
			(VF es)
			(LK gibt)
			(MF
				(NX
					(NX eine bar)
					(NX ein restaurant)
					(KON und)
					(NX
						(ADVX ebenfalls)
						[01;36m(NX[00m
							(ART eine)
							(NN garage)[01;36m)[00m)))[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das hotel loccumerhof)
			(LK ist)
			[01;31m(MF[00m
				(ADVX gleich)
				(PX beim bahnhof)[01;31m)[00m
			(NF anscheinend)[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(VF es)
			(LK gibt)
			(MF
				(NX
					(NX
						(ART ein)
						[01;31m(NX[00m
							(TRUNC schwimm)
							(KON und)
							(NN dampfbad)[01;31m)[00m)
					(KON und)
					(NX eine pianobar)))[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das einzelzimmer)
			(LK kostet)
			(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m
		[01;31m(NX[00m
			(KON und)
			[01;36m(MF[00m [01;31m(NX[00m
				(NX das doppelzimmer)
				[01;31m(NX[00m
					(ADJX hundert dreiundvierzig)
					(NN mark)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF vom zeitangebot)
			(LK ware)
			[01;36m(NX[00m
				(MF
					(NX das hotel loccumerhof)
					(ADVX anscheinend)
					(ADJX besonders gunstig))[01;36m)[00m
			(NF
				(SIMPX
					(C weil)
					(MF
						(NX es)
						(ADVX gleich)
						[01;36m(NX[00m [01;31m(PX[00m
							(APPRART beim)
							(NX bahnhof)[01;31m)[00m[01;36m)[00m)
					(VC liegt)))[01;31m)[00m))
Step:Single Word Phrase
{'family': ['NX', 'PX'], 'auto preterminal span': (32, 33), 'span': (32, 33), 'subtrees': ['NN'], 'parent': 'NX', 'over_word': True, 'auto preterminals': ('NN',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('NX', 'PX')}
(TOP
	(TURN
		(SIMPX jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen)
		[01;31m(NX[00m
			(PX zum einen)
			[01;31m(NX[00m
				(NX das maritimhotel in hannover)
				[01;36m(NF[00m
					(R [01;33m(R[00m
						(C welches)
						[01;31m(FKOORD[00m
							[01;31m(MVC[00m
								(MF am bahnhof)
								(VC liegt)[01;31m)[00m [01;33mR)[00m
							(KON und)
							(MVC
								[01;31m(MF[00m
									(PX zum zentrum)
									[01;31m(NX[00m [01;33m(SIMPX[00m
										(NX funfzehn minuten)
										[01;33m(VC[00m (PX laufzeit)[01;31m)[00m[01;31m)[00m
								(VC hat))[01;31m)[00m)[01;36m)[00m[01;31m)[00m[01;31m)[00m [01;33mVC) SIMPX)[00m
		(SIMPX es gibt dort eine cafeteria)
		[01;31m(SIMPX[00m
			(VF garage)
			(LK ist)
			(MF naturlich dann nicht nicht unbedingt so wichtig)[01;31m)[00m
		(SIMPX
			(VF einzelzimmer)
			(LK kostet)
			(NX [01;33m(NX[00m
				(MF
					(NX hundert einundfunfzig mark)
					[01;31m(NX[00m
						(NX doppelzimmer) [01;33mNX)[00m
						(NX hundert funf mark)[01;31m)[00m)))
		(NX dann das hotel luisenhof)
		[01;36m(ADJX[00m
			(ADJX funf minuten vom bahnhof entfernt)
			[01;31m(ADJX[00m
				[01;36m(DM[00m
					(ADVX
						(ADV also))[01;36m)[00m
				(ADJX etwas schneller)[01;31m)[00m[01;36m)[00m
		[01;31m(SIMPX[00m
			(VF es)
			(LK gibt)
			(MF
				(NX
					(NX eine bar)
					(NX ein restaurant)
					(KON und)
					(NX
						(ADVX ebenfalls)
						[01;36m(NX[00m
							(ART eine)
							(NN garage)[01;36m)[00m)))[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das hotel loccumerhof)
			(LK ist)
			[01;31m(MF[00m
				(ADVX gleich)
				(PX beim bahnhof)[01;31m)[00m
			(NF anscheinend)[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(VF es)
			(LK gibt)
			(MF
				(NX
					(NX
						(ART ein)
						[01;31m(NX[00m
							(TRUNC schwimm)
							(KON und)
							(NN dampfbad)[01;31m)[00m)
					(KON und)
					(NX eine pianobar)))[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das einzelzimmer)
			(LK kostet)
			(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m
		[01;31m(NX[00m
			(KON und)
			[01;36m(MF[00m [01;31m(NX[00m
				(NX das doppelzimmer)
				[01;31m(NX[00m
					(ADJX hundert dreiundvierzig)
					(NN mark)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF vom zeitangebot)
			(LK ware)
			[01;36m(NX[00m
				(MF
					(NX das hotel loccumerhof)
					(ADVX anscheinend)
					(ADJX besonders gunstig))[01;36m)[00m
			(NF
				(SIMPX
					(C weil)
					(MF
						(NX es)
						(ADVX gleich)
						[01;36m(NX[00m [01;31m(PX[00m
							(APPRART beim)
							(NX bahnhof)[01;31m)[00m[01;36m)[00m)
					(VC liegt)))[01;31m)[00m))
Step:Different label
{'family': ['KON', 'MF'], 'auto preterminal span': (107, 112), 'span': (107, 112), 'subtrees': ['NX', 'NX'], 'parent': 'NX', 'over_word': False, 'auto preterminals': ('ART', 'NN', 'CARD', 'CARD', 'NN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('NX', 'MF')}
(TOP
	(TURN
		(SIMPX jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen)
		[01;31m(NX[00m
			(PX zum einen)
			[01;31m(NX[00m
				(NX das maritimhotel in hannover)
				[01;36m(NF[00m
					(R [01;33m(R[00m
						(C welches)
						[01;31m(FKOORD[00m
							[01;31m(MVC[00m
								(MF am bahnhof)
								(VC liegt)[01;31m)[00m [01;33mR)[00m
							(KON und)
							(MVC
								[01;31m(MF[00m
									(PX zum zentrum)
									[01;31m(NX[00m [01;33m(SIMPX[00m
										(NX funfzehn minuten)
										[01;33m(VC[00m (PX laufzeit)[01;31m)[00m[01;31m)[00m
								(VC hat))[01;31m)[00m)[01;36m)[00m[01;31m)[00m[01;31m)[00m [01;33mVC) SIMPX)[00m
		(SIMPX es gibt dort eine cafeteria)
		[01;31m(SIMPX[00m
			(VF garage)
			(LK ist)
			(MF naturlich dann nicht nicht unbedingt so wichtig)[01;31m)[00m
		(SIMPX
			(VF einzelzimmer)
			(LK kostet)
			(NX [01;33m(NX[00m
				(MF
					(NX hundert einundfunfzig mark)
					[01;31m(NX[00m
						(NX doppelzimmer) [01;33mNX)[00m
						(NX hundert funf mark)[01;31m)[00m)))
		(NX dann das hotel luisenhof)
		[01;36m(ADJX[00m
			(ADJX funf minuten vom bahnhof entfernt)
			[01;31m(ADJX[00m
				[01;36m(DM[00m
					(ADVX
						(ADV also))[01;36m)[00m
				(ADJX etwas schneller)[01;31m)[00m[01;36m)[00m
		[01;31m(SIMPX[00m
			(VF es)
			(LK gibt)
			(MF
				(NX
					(NX eine bar)
					(NX ein restaurant)
					(KON und)
					(NX
						(ADVX ebenfalls)
						[01;36m(NX[00m
							(ART eine)
							(NN garage)[01;36m)[00m)))[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das hotel loccumerhof)
			(LK ist)
			[01;31m(MF[00m
				(ADVX gleich)
				(PX beim bahnhof)[01;31m)[00m
			(NF anscheinend)[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(VF es)
			(LK gibt)
			(MF
				(NX
					(NX
						(ART ein)
						[01;31m(NX[00m
							(TRUNC schwimm)
							(KON und)
							(NN dampfbad)[01;31m)[00m)
					(KON und)
					(NX eine pianobar)))[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das einzelzimmer)
			(LK kostet)
			(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m
		[01;31m(NX[00m
			(KON und)
			(MF
				(NX das doppelzimmer)
				[01;31m(NX[00m
					(ADJX hundert dreiundvierzig)
					(NN mark)[01;31m)[00m)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF vom zeitangebot)
			(LK ware)
			[01;36m(NX[00m
				(MF
					(NX das hotel loccumerhof)
					(ADVX anscheinend)
					(ADJX besonders gunstig))[01;36m)[00m
			(NF
				(SIMPX
					(C weil)
					(MF
						(NX es)
						(ADVX gleich)
						[01;36m(NX[00m [01;31m(PX[00m
							(APPRART beim)
							(NX bahnhof)[01;31m)[00m[01;36m)[00m)
					(VC liegt)))[01;31m)[00m))
Step:Different label
{'family': ['NX', 'ADVX', 'NX'], 'auto preterminal span': (124, 126), 'span': (124, 126), 'subtrees': ['APPRART', 'NX'], 'parent': 'MF', 'over_word': False, 'auto preterminals': ('APPRART', 'NN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('PX', 'NX')}
(TOP
	(TURN
		(SIMPX jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen)
		[01;31m(NX[00m
			(PX zum einen)
			[01;31m(NX[00m
				(NX das maritimhotel in hannover)
				[01;36m(NF[00m
					(R [01;33m(R[00m
						(C welches)
						[01;31m(FKOORD[00m
							[01;31m(MVC[00m
								(MF am bahnhof)
								(VC liegt)[01;31m)[00m [01;33mR)[00m
							(KON und)
							(MVC
								[01;31m(MF[00m
									(PX zum zentrum)
									[01;31m(NX[00m [01;33m(SIMPX[00m
										(NX funfzehn minuten)
										[01;33m(VC[00m (PX laufzeit)[01;31m)[00m[01;31m)[00m
								(VC hat))[01;31m)[00m)[01;36m)[00m[01;31m)[00m[01;31m)[00m [01;33mVC) SIMPX)[00m
		(SIMPX es gibt dort eine cafeteria)
		[01;31m(SIMPX[00m
			(VF garage)
			(LK ist)
			(MF naturlich dann nicht nicht unbedingt so wichtig)[01;31m)[00m
		(SIMPX
			(VF einzelzimmer)
			(LK kostet)
			(NX [01;33m(NX[00m
				(MF
					(NX hundert einundfunfzig mark)
					[01;31m(NX[00m
						(NX doppelzimmer) [01;33mNX)[00m
						(NX hundert funf mark)[01;31m)[00m)))
		(NX dann das hotel luisenhof)
		[01;36m(ADJX[00m
			(ADJX funf minuten vom bahnhof entfernt)
			[01;31m(ADJX[00m
				[01;36m(DM[00m
					(ADVX
						(ADV also))[01;36m)[00m
				(ADJX etwas schneller)[01;31m)[00m[01;36m)[00m
		[01;31m(SIMPX[00m
			(VF es)
			(LK gibt)
			(MF
				(NX
					(NX eine bar)
					(NX ein restaurant)
					(KON und)
					(NX
						(ADVX ebenfalls)
						[01;36m(NX[00m
							(ART eine)
							(NN garage)[01;36m)[00m)))[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das hotel loccumerhof)
			(LK ist)
			[01;31m(MF[00m
				(ADVX gleich)
				(PX beim bahnhof)[01;31m)[00m
			(NF anscheinend)[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(VF es)
			(LK gibt)
			(MF
				(NX
					(NX
						(ART ein)
						[01;31m(NX[00m
							(TRUNC schwimm)
							(KON und)
							(NN dampfbad)[01;31m)[00m)
					(KON und)
					(NX eine pianobar)))[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das einzelzimmer)
			(LK kostet)
			(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m
		[01;31m(NX[00m
			(KON und)
			(MF
				(NX das doppelzimmer)
				[01;31m(NX[00m
					(ADJX hundert dreiundvierzig)
					(NN mark)[01;31m)[00m)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF vom zeitangebot)
			(LK ware)
			[01;36m(NX[00m
				(MF
					(NX das hotel loccumerhof)
					(ADVX anscheinend)
					(ADJX besonders gunstig))[01;36m)[00m
			(NF weil es gleich beim bahnhof liegt)[01;31m)[00m))
Step:Modifier Attachment
{'new_parent': 'ADJX', 'new_family': ['ADJX', 'ADVX', 'ADJX'], 'mover info': [('ADJX', (61, 66))], 'old_family': ['SIMPX', 'SIMPX', 'NX', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'ADJX', 'ADJX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX'], 'start left siblings': ['SIMPX', 'SIMPX', 'NX', 'SIMPX', 'SIMPX', 'SIMPX', 'NX'], 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'PIAT', 'NN', 'VVPP', 'PDS', 'VMFIN', 'PPER', 'APPR', 'PPER', 'ADV', 'ADV', 'VVINF', 'APPRART', 'PIS', 'ART', 'NE', 'APPR', 'NE', 'PRELS', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPRART', 'NN', 'CARD', 'NN', 'NN', 'VAFIN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NN', 'VAFIN', 'ADV', 'ADV', 'PTKNEG', 'PTKNEG', 'ADV', 'ADV', 'ADJD', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN', 'NN', 'CARD', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'ADJD', 'ADV', 'ADV', 'ADJD', 'PPER', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ART', 'NN', 'KON', 'ART', 'NN', 'NE', 'VAFIN', 'ADV', 'APPRART', 'NN', 'ADV', 'KON', 'PPER', 'VVFIN', 'ART', 'TRUNC', 'KON', 'NN', 'KON', 'ART', 'NN', 'KON', 'ART', 'NN', 'VVFIN', 'ADV', 'CARD', 'CARD', 'NN', 'KON', 'ART', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'VAFIN', 'ART', 'NN', 'NE', 'ADV', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'VVFIN'), 'start right siblings': ['ADJX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX'], 'end left siblings': [], 'auto preterminal span': (0, 127), 'movers': ['ADJX'], 'old_parent': 'TURN', 'end right siblings': ['ADVX', 'ADJX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SIMPX jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen)
		[01;31m(NX[00m
			(PX zum einen)
			[01;31m(NX[00m
				(NX das maritimhotel in hannover)
				[01;36m(NF[00m
					(R [01;33m(R[00m
						(C welches)
						[01;31m(FKOORD[00m
							[01;31m(MVC[00m
								(MF am bahnhof)
								(VC liegt)[01;31m)[00m [01;33mR)[00m
							(KON und)
							(MVC
								[01;31m(MF[00m
									(PX zum zentrum)
									[01;31m(NX[00m [01;33m(SIMPX[00m
										(NX funfzehn minuten)
										[01;33m(VC[00m (PX laufzeit)[01;31m)[00m[01;31m)[00m
								(VC hat))[01;31m)[00m)[01;36m)[00m[01;31m)[00m[01;31m)[00m [01;33mVC) SIMPX)[00m
		(SIMPX es gibt dort eine cafeteria)
		[01;31m(SIMPX[00m
			(VF garage)
			(LK ist)
			(MF naturlich dann nicht nicht unbedingt so wichtig)[01;31m)[00m
		(SIMPX
			(VF einzelzimmer)
			(LK kostet)
			(NX [01;33m(NX[00m
				(MF
					(NX hundert einundfunfzig mark)
					[01;31m(NX[00m
						(NX doppelzimmer) [01;33mNX)[00m
						(NX hundert funf mark)[01;31m)[00m)))
		(NX dann das hotel luisenhof)
		(ADJX
			(ADJX funf minuten vom bahnhof entfernt)
			[01;36m(DM[00m
				(ADVX
					(ADV also))[01;36m)[00m
			(ADJX etwas schneller))
		[01;31m(SIMPX[00m
			(VF es)
			(LK gibt)
			(MF
				(NX
					(NX eine bar)
					(NX ein restaurant)
					(KON und)
					(NX
						(ADVX ebenfalls)
						[01;36m(NX[00m
							(ART eine)
							(NN garage)[01;36m)[00m)))[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das hotel loccumerhof)
			(LK ist)
			[01;31m(MF[00m
				(ADVX gleich)
				(PX beim bahnhof)[01;31m)[00m
			(NF anscheinend)[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(VF es)
			(LK gibt)
			(MF
				(NX
					(NX
						(ART ein)
						[01;31m(NX[00m
							(TRUNC schwimm)
							(KON und)
							(NN dampfbad)[01;31m)[00m)
					(KON und)
					(NX eine pianobar)))[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das einzelzimmer)
			(LK kostet)
			(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m
		[01;31m(NX[00m
			(KON und)
			(MF
				(NX das doppelzimmer)
				[01;31m(NX[00m
					(ADJX hundert dreiundvierzig)
					(NN mark)[01;31m)[00m)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF vom zeitangebot)
			(LK ware)
			[01;36m(NX[00m
				(MF
					(NX das hotel loccumerhof)
					(ADVX anscheinend)
					(ADJX besonders gunstig))[01;36m)[00m
			(NF weil es gleich beim bahnhof liegt)[01;31m)[00m))
Step:NP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'NX', 'NX'], 'mover info': [('NX', (53, 54))], 'old_family': ['NX', 'NX'], 'start left siblings': [], 'auto preterminals': ('CARD', 'CARD', 'NN', 'NN', 'CARD', 'CARD', 'NN'), 'start right siblings': ['NX'], 'end left siblings': ['NX'], 'auto preterminal span': (50, 57), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'NX', 'POS confusion': ('NN', 'NN'), 'added and moved': True, 'end right siblings': ['NX'], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(SIMPX jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen)
		[01;31m(NX[00m
			(PX zum einen)
			[01;31m(NX[00m
				(NX das maritimhotel in hannover)
				[01;36m(NF[00m
					(R [01;33m(R[00m
						(C welches)
						[01;31m(FKOORD[00m
							[01;31m(MVC[00m
								(MF am bahnhof)
								(VC liegt)[01;31m)[00m [01;33mR)[00m
							(KON und)
							(MVC
								[01;31m(MF[00m
									(PX zum zentrum)
									[01;31m(NX[00m [01;33m(SIMPX[00m
										(NX funfzehn minuten)
										[01;33m(VC[00m (PX laufzeit)[01;31m)[00m[01;31m)[00m
								(VC hat))[01;31m)[00m)[01;36m)[00m[01;31m)[00m[01;31m)[00m [01;33mVC) SIMPX)[00m
		(SIMPX es gibt dort eine cafeteria)
		[01;31m(SIMPX[00m
			(VF garage)
			(LK ist)
			(MF naturlich dann nicht nicht unbedingt so wichtig)[01;31m)[00m
		(SIMPX einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(NX dann das hotel luisenhof)
		(ADJX
			(ADJX funf minuten vom bahnhof entfernt)
			[01;36m(DM[00m
				(ADVX
					(ADV also))[01;36m)[00m
			(ADJX etwas schneller))
		[01;31m(SIMPX[00m
			(VF es)
			(LK gibt)
			(MF
				(NX
					(NX eine bar)
					(NX ein restaurant)
					(KON und)
					(NX
						(ADVX ebenfalls)
						[01;36m(NX[00m
							(ART eine)
							(NN garage)[01;36m)[00m)))[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das hotel loccumerhof)
			(LK ist)
			[01;31m(MF[00m
				(ADVX gleich)
				(PX beim bahnhof)[01;31m)[00m
			(NF anscheinend)[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(VF es)
			(LK gibt)
			(MF
				(NX
					(NX
						(ART ein)
						[01;31m(NX[00m
							(TRUNC schwimm)
							(KON und)
							(NN dampfbad)[01;31m)[00m)
					(KON und)
					(NX eine pianobar)))[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das einzelzimmer)
			(LK kostet)
			(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m
		[01;31m(NX[00m
			(KON und)
			(MF
				(NX das doppelzimmer)
				[01;31m(NX[00m
					(ADJX hundert dreiundvierzig)
					(NN mark)[01;31m)[00m)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF vom zeitangebot)
			(LK ware)
			[01;36m(NX[00m
				(MF
					(NX das hotel loccumerhof)
					(ADVX anscheinend)
					(ADJX besonders gunstig))[01;36m)[00m
			(NF weil es gleich beim bahnhof liegt)[01;31m)[00m))
Step:Unary
{'subtrees': ['R'], 'family': ['NX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PRELS', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPRART', 'NN', 'CARD', 'NN', 'NN', 'VAFIN'), 'right siblings': [], 'left siblings': [(NX (NX (ART das) (NE maritimhotel)) (PX (APPR in) (NX (NE hannover))))], 'auto preterminal span': (23, 34), 'span': (23, 34), 'parent': 'NX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SIMPX jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen)
		[01;31m(NX[00m
			(PX zum einen)
			[01;31m(NX[00m
				(NX das maritimhotel in hannover)
				(NF [01;33m(R[00m
					(R
						(C welches)
						[01;31m(FKOORD[00m
							[01;31m(MVC[00m
								(MF am bahnhof)
								(VC liegt)[01;31m)[00m [01;33mR)[00m
							(KON und)
							(MVC
								[01;31m(MF[00m
									(PX zum zentrum)
									[01;31m(NX[00m [01;33m(SIMPX[00m
										(NX funfzehn minuten)
										[01;33m(VC[00m (PX laufzeit)[01;31m)[00m[01;31m)[00m
								(VC hat))[01;31m)[00m))[01;31m)[00m[01;31m)[00m [01;33mVC) SIMPX)[00m
		(SIMPX es gibt dort eine cafeteria)
		[01;31m(SIMPX[00m
			(VF garage)
			(LK ist)
			(MF naturlich dann nicht nicht unbedingt so wichtig)[01;31m)[00m
		(SIMPX einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(NX dann das hotel luisenhof)
		(ADJX
			(ADJX funf minuten vom bahnhof entfernt)
			[01;36m(DM[00m
				(ADVX
					(ADV also))[01;36m)[00m
			(ADJX etwas schneller))
		[01;31m(SIMPX[00m
			(VF es)
			(LK gibt)
			(MF
				(NX
					(NX eine bar)
					(NX ein restaurant)
					(KON und)
					(NX
						(ADVX ebenfalls)
						[01;36m(NX[00m
							(ART eine)
							(NN garage)[01;36m)[00m)))[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das hotel loccumerhof)
			(LK ist)
			[01;31m(MF[00m
				(ADVX gleich)
				(PX beim bahnhof)[01;31m)[00m
			(NF anscheinend)[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(VF es)
			(LK gibt)
			(MF
				(NX
					(NX
						(ART ein)
						[01;31m(NX[00m
							(TRUNC schwimm)
							(KON und)
							(NN dampfbad)[01;31m)[00m)
					(KON und)
					(NX eine pianobar)))[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das einzelzimmer)
			(LK kostet)
			(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m
		[01;31m(NX[00m
			(KON und)
			(MF
				(NX das doppelzimmer)
				[01;31m(NX[00m
					(ADJX hundert dreiundvierzig)
					(NN mark)[01;31m)[00m)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF vom zeitangebot)
			(LK ware)
			[01;36m(NX[00m
				(MF
					(NX das hotel loccumerhof)
					(ADVX anscheinend)
					(ADJX besonders gunstig))[01;36m)[00m
			(NF weil es gleich beim bahnhof liegt)[01;31m)[00m))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['ADJX', 'DM', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV',), 'right siblings': [(ADJX (ADVX (ADV etwas)) (ADJD schneller))], 'left siblings': [(ADJX (NX (NX (ADJX (CARD funf)) (NN minuten)) (PX (APPRART vom) (NX (NN bahnhof)))) (ADJD entfernt))], 'auto preterminal span': (66, 67), 'span': (66, 67), 'parent': 'ADJX', 'label': 'DM', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SIMPX jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen)
		[01;31m(NX[00m
			(PX zum einen)
			[01;31m(NX[00m
				(NX das maritimhotel in hannover)
				(NF [01;33m(R[00m
					(R
						(C welches)
						[01;31m(FKOORD[00m
							[01;31m(MVC[00m
								(MF am bahnhof)
								(VC liegt)[01;31m)[00m [01;33mR)[00m
							(KON und)
							(MVC
								[01;31m(MF[00m
									(PX zum zentrum)
									[01;31m(NX[00m [01;33m(SIMPX[00m
										(NX funfzehn minuten)
										[01;33m(VC[00m (PX laufzeit)[01;31m)[00m[01;31m)[00m
								(VC hat))[01;31m)[00m))[01;31m)[00m[01;31m)[00m [01;33mVC) SIMPX)[00m
		(SIMPX es gibt dort eine cafeteria)
		[01;31m(SIMPX[00m
			(VF garage)
			(LK ist)
			(MF naturlich dann nicht nicht unbedingt so wichtig)[01;31m)[00m
		(SIMPX einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(NX dann das hotel luisenhof)
		(ADJX funf minuten vom bahnhof entfernt also etwas schneller)
		[01;31m(SIMPX[00m
			(VF es)
			(LK gibt)
			(MF
				(NX
					(NX eine bar)
					(NX ein restaurant)
					(KON und)
					(NX
						(ADVX ebenfalls)
						[01;36m(NX[00m
							(ART eine)
							(NN garage)[01;36m)[00m)))[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das hotel loccumerhof)
			(LK ist)
			[01;31m(MF[00m
				(ADVX gleich)
				(PX beim bahnhof)[01;31m)[00m
			(NF anscheinend)[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(VF es)
			(LK gibt)
			(MF
				(NX
					(NX
						(ART ein)
						[01;31m(NX[00m
							(TRUNC schwimm)
							(KON und)
							(NN dampfbad)[01;31m)[00m)
					(KON und)
					(NX eine pianobar)))[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das einzelzimmer)
			(LK kostet)
			(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m
		[01;31m(NX[00m
			(KON und)
			(MF
				(NX das doppelzimmer)
				[01;31m(NX[00m
					(ADJX hundert dreiundvierzig)
					(NN mark)[01;31m)[00m)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF vom zeitangebot)
			(LK ware)
			[01;36m(NX[00m
				(MF
					(NX das hotel loccumerhof)
					(ADVX anscheinend)
					(ADJX besonders gunstig))[01;36m)[00m
			(NF weil es gleich beim bahnhof liegt)[01;31m)[00m))
Step:NP Internal Structure
{'subtrees': ['ART', 'NN'], 'family': ['ADVX', 'NX'], 'over_word': False, 'over words': True, 'auto preterminals': ('ART', 'NN'), 'right siblings': [], 'left siblings': [(ADVX (ADV ebenfalls))], 'auto preterminal span': (77, 79), 'span': (77, 79), 'parent': 'NX', 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'add'}
(TOP
	(TURN
		(SIMPX jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen)
		[01;31m(NX[00m
			(PX zum einen)
			[01;31m(NX[00m
				(NX das maritimhotel in hannover)
				(NF [01;33m(R[00m
					(R
						(C welches)
						[01;31m(FKOORD[00m
							[01;31m(MVC[00m
								(MF am bahnhof)
								(VC liegt)[01;31m)[00m [01;33mR)[00m
							(KON und)
							(MVC
								[01;31m(MF[00m
									(PX zum zentrum)
									[01;31m(NX[00m [01;33m(SIMPX[00m
										(NX funfzehn minuten)
										[01;33m(VC[00m (PX laufzeit)[01;31m)[00m[01;31m)[00m
								(VC hat))[01;31m)[00m))[01;31m)[00m[01;31m)[00m [01;33mVC) SIMPX)[00m
		(SIMPX es gibt dort eine cafeteria)
		[01;31m(SIMPX[00m
			(VF garage)
			(LK ist)
			(MF naturlich dann nicht nicht unbedingt so wichtig)[01;31m)[00m
		(SIMPX einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(NX dann das hotel luisenhof)
		(ADJX funf minuten vom bahnhof entfernt also etwas schneller)
		[01;31m(SIMPX[00m
			(VF es)
			(LK gibt)
			(MF eine bar ein restaurant und ebenfalls eine garage)[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das hotel loccumerhof)
			(LK ist)
			[01;31m(MF[00m
				(ADVX gleich)
				(PX beim bahnhof)[01;31m)[00m
			(NF anscheinend)[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(VF es)
			(LK gibt)
			(MF
				(NX
					(NX
						(ART ein)
						[01;31m(NX[00m
							(TRUNC schwimm)
							(KON und)
							(NN dampfbad)[01;31m)[00m)
					(KON und)
					(NX eine pianobar)))[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das einzelzimmer)
			(LK kostet)
			(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m
		[01;31m(NX[00m
			(KON und)
			(MF
				(NX das doppelzimmer)
				[01;31m(NX[00m
					(ADJX hundert dreiundvierzig)
					(NN mark)[01;31m)[00m)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF vom zeitangebot)
			(LK ware)
			[01;36m(NX[00m
				(MF
					(NX das hotel loccumerhof)
					(ADVX anscheinend)
					(ADJX besonders gunstig))[01;36m)[00m
			(NF weil es gleich beim bahnhof liegt)[01;31m)[00m))
Step:Unary
{'subtrees': ['MF'], 'family': ['VF', 'LK', 'NX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'NE', 'ADV', 'ADV', 'ADJD'), 'right siblings': [(NF (SIMPX (C (KOUS weil)) (MF (NX (PPER es)) (ADVX (ADV gleich)) (NX (APPRART beim) (NX (NN bahnhof)))) (VC (VXFIN (VVFIN liegt)))))], 'left siblings': [(VF (PX (APPRART vom) (NX (NN zeitangebot)))), (LK (VXFIN (VAFIN ware)))], 'auto preterminal span': (115, 121), 'span': (115, 121), 'parent': 'SIMPX', 'label': 'NX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SIMPX jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen)
		[01;31m(NX[00m
			(PX zum einen)
			[01;31m(NX[00m
				(NX das maritimhotel in hannover)
				(NF [01;33m(R[00m
					(R
						(C welches)
						[01;31m(FKOORD[00m
							[01;31m(MVC[00m
								(MF am bahnhof)
								(VC liegt)[01;31m)[00m [01;33mR)[00m
							(KON und)
							(MVC
								[01;31m(MF[00m
									(PX zum zentrum)
									[01;31m(NX[00m [01;33m(SIMPX[00m
										(NX funfzehn minuten)
										[01;33m(VC[00m (PX laufzeit)[01;31m)[00m[01;31m)[00m
								(VC hat))[01;31m)[00m))[01;31m)[00m[01;31m)[00m [01;33mVC) SIMPX)[00m
		(SIMPX es gibt dort eine cafeteria)
		[01;31m(SIMPX[00m
			(VF garage)
			(LK ist)
			(MF naturlich dann nicht nicht unbedingt so wichtig)[01;31m)[00m
		(SIMPX einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(NX dann das hotel luisenhof)
		(ADJX funf minuten vom bahnhof entfernt also etwas schneller)
		[01;31m(SIMPX[00m
			(VF es)
			(LK gibt)
			(MF eine bar ein restaurant und ebenfalls eine garage)[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das hotel loccumerhof)
			(LK ist)
			[01;31m(MF[00m
				(ADVX gleich)
				(PX beim bahnhof)[01;31m)[00m
			(NF anscheinend)[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(VF es)
			(LK gibt)
			(MF
				(NX
					(NX
						(ART ein)
						[01;31m(NX[00m
							(TRUNC schwimm)
							(KON und)
							(NN dampfbad)[01;31m)[00m)
					(KON und)
					(NX eine pianobar)))[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das einzelzimmer)
			(LK kostet)
			(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m
		[01;31m(NX[00m
			(KON und)
			(MF
				(NX das doppelzimmer)
				[01;31m(NX[00m
					(ADJX hundert dreiundvierzig)
					(NN mark)[01;31m)[00m)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF vom zeitangebot)
			(LK ware)
			(NX das hotel loccumerhof anscheinend besonders gunstig)
			(NF weil es gleich beim bahnhof liegt)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['PX', 'NX'], 'family': ['SIMPX', 'SIMPX', 'NX', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'ADJX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'PIAT', 'NN', 'VVPP', 'PDS', 'VMFIN', 'PPER', 'APPR', 'PPER', 'ADV', 'ADV', 'VVINF', 'APPRART', 'PIS', 'ART', 'NE', 'APPR', 'NE', 'PRELS', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPRART', 'NN', 'CARD', 'NN', 'NN', 'VAFIN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NN', 'VAFIN', 'ADV', 'ADV', 'PTKNEG', 'PTKNEG', 'ADV', 'ADV', 'ADJD', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN', 'NN', 'CARD', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'ADJD', 'ADV', 'ADV', 'ADJD', 'PPER', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ART', 'NN', 'KON', 'ART', 'NN', 'NE', 'VAFIN', 'ADV', 'APPRART', 'NN', 'ADV', 'KON', 'PPER', 'VVFIN', 'ART', 'TRUNC', 'KON', 'NN', 'KON', 'ART', 'NN', 'KON', 'ART', 'NN', 'VVFIN', 'ADV', 'CARD', 'CARD', 'NN', 'KON', 'ART', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'VAFIN', 'ART', 'NN', 'NE', 'ADV', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'VVFIN'), 'right siblings': ['SIMPX', 'SIMPX', 'SIMPX', 'NX', 'ADJX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 127), 'span': (17, 34), 'left siblings': ['SIMPX', 'SIMPX'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen)
		(PX zum einen)
		[01;31m(NX[00m
			(NX das maritimhotel in hannover)
			(NF [01;33m(R[00m
				(R
					(C welches)
					[01;31m(FKOORD[00m
						[01;31m(MVC[00m
							(MF am bahnhof)
							(VC liegt)[01;31m)[00m [01;33mR)[00m
						(KON und)
						(MVC
							[01;31m(MF[00m
								(PX zum zentrum)
								[01;31m(NX[00m [01;33m(SIMPX[00m
									(NX funfzehn minuten)
									[01;33m(VC[00m (PX laufzeit)[01;31m)[00m[01;31m)[00m
							(VC hat))[01;31m)[00m))[01;31m)[00m [01;33mVC) SIMPX)[00m
		(SIMPX es gibt dort eine cafeteria)
		[01;31m(SIMPX[00m
			(VF garage)
			(LK ist)
			(MF naturlich dann nicht nicht unbedingt so wichtig)[01;31m)[00m
		(SIMPX einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(NX dann das hotel luisenhof)
		(ADJX funf minuten vom bahnhof entfernt also etwas schneller)
		[01;31m(SIMPX[00m
			(VF es)
			(LK gibt)
			(MF eine bar ein restaurant und ebenfalls eine garage)[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das hotel loccumerhof)
			(LK ist)
			[01;31m(MF[00m
				(ADVX gleich)
				(PX beim bahnhof)[01;31m)[00m
			(NF anscheinend)[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(VF es)
			(LK gibt)
			(MF
				(NX
					(NX
						(ART ein)
						[01;31m(NX[00m
							(TRUNC schwimm)
							(KON und)
							(NN dampfbad)[01;31m)[00m)
					(KON und)
					(NX eine pianobar)))[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das einzelzimmer)
			(LK kostet)
			(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m
		[01;31m(NX[00m
			(KON und)
			(MF
				(NX das doppelzimmer)
				[01;31m(NX[00m
					(ADJX hundert dreiundvierzig)
					(NN mark)[01;31m)[00m)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF vom zeitangebot)
			(LK ware)
			(NX das hotel loccumerhof anscheinend besonders gunstig)
			(NF weil es gleich beim bahnhof liegt)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['NX', 'NF'], 'family': ['SIMPX', 'SIMPX', 'PX', 'NX', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'ADJX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'PIAT', 'NN', 'VVPP', 'PDS', 'VMFIN', 'PPER', 'APPR', 'PPER', 'ADV', 'ADV', 'VVINF', 'APPRART', 'PIS', 'ART', 'NE', 'APPR', 'NE', 'PRELS', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPRART', 'NN', 'CARD', 'NN', 'NN', 'VAFIN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NN', 'VAFIN', 'ADV', 'ADV', 'PTKNEG', 'PTKNEG', 'ADV', 'ADV', 'ADJD', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN', 'NN', 'CARD', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'ADJD', 'ADV', 'ADV', 'ADJD', 'PPER', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ART', 'NN', 'KON', 'ART', 'NN', 'NE', 'VAFIN', 'ADV', 'APPRART', 'NN', 'ADV', 'KON', 'PPER', 'VVFIN', 'ART', 'TRUNC', 'KON', 'NN', 'KON', 'ART', 'NN', 'KON', 'ART', 'NN', 'VVFIN', 'ADV', 'CARD', 'CARD', 'NN', 'KON', 'ART', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'VAFIN', 'ART', 'NN', 'NE', 'ADV', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'VVFIN'), 'right siblings': ['SIMPX', 'SIMPX', 'SIMPX', 'NX', 'ADJX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 127), 'span': (19, 34), 'left siblings': ['SIMPX', 'SIMPX', 'PX'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen)
		(PX zum einen)
		(NX das maritimhotel in hannover)
		(NF [01;33m(R[00m
			(R
				(C welches)
				[01;31m(FKOORD[00m
					[01;31m(MVC[00m
						(MF am bahnhof)
						(VC liegt)[01;31m)[00m [01;33mR)[00m
					(KON und)
					(MVC
						[01;31m(MF[00m
							(PX zum zentrum)
							[01;31m(NX[00m [01;33m(SIMPX[00m
								(NX funfzehn minuten)
								[01;33m(VC[00m (PX laufzeit)[01;31m)[00m[01;31m)[00m
						(VC hat))[01;31m)[00m)) [01;33mVC) SIMPX)[00m
		(SIMPX es gibt dort eine cafeteria)
		[01;31m(SIMPX[00m
			(VF garage)
			(LK ist)
			(MF naturlich dann nicht nicht unbedingt so wichtig)[01;31m)[00m
		(SIMPX einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(NX dann das hotel luisenhof)
		(ADJX funf minuten vom bahnhof entfernt also etwas schneller)
		[01;31m(SIMPX[00m
			(VF es)
			(LK gibt)
			(MF eine bar ein restaurant und ebenfalls eine garage)[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das hotel loccumerhof)
			(LK ist)
			[01;31m(MF[00m
				(ADVX gleich)
				(PX beim bahnhof)[01;31m)[00m
			(NF anscheinend)[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(VF es)
			(LK gibt)
			(MF
				(NX
					(NX
						(ART ein)
						[01;31m(NX[00m
							(TRUNC schwimm)
							(KON und)
							(NN dampfbad)[01;31m)[00m)
					(KON und)
					(NX eine pianobar)))[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das einzelzimmer)
			(LK kostet)
			(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m
		[01;31m(NX[00m
			(KON und)
			(MF
				(NX das doppelzimmer)
				[01;31m(NX[00m
					(ADJX hundert dreiundvierzig)
					(NN mark)[01;31m)[00m)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF vom zeitangebot)
			(LK ware)
			(NX das hotel loccumerhof anscheinend besonders gunstig)
			(NF weil es gleich beim bahnhof liegt)[01;31m)[00m))
Step:Co-ordination
{'subtrees': ['MF', 'VC'], 'family': ['MVC', 'KON', 'MVC'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'NN', 'VVFIN', 'KON', 'APPRART', 'NN', 'CARD', 'NN', 'NN', 'VAFIN'), 'right siblings': ['KON', 'MVC'], 'parent': 'FKOORD', 'auto preterminal span': (24, 34), 'span': (24, 27), 'left siblings': [], 'label': 'MVC', 'classified_type': 'Co-ordination', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen)
		(PX zum einen)
		(NX das maritimhotel in hannover)
		(NF [01;33m(R[00m
			(R
				(C welches)
				[01;31m(FKOORD[00m
					(MF am bahnhof)
					(VC liegt) [01;33mR)[00m
					(KON und)
					(MVC
						[01;31m(MF[00m
							(PX zum zentrum)
							[01;31m(NX[00m [01;33m(SIMPX[00m
								(NX funfzehn minuten)
								[01;33m(VC[00m (PX laufzeit)[01;31m)[00m[01;31m)[00m
						(VC hat))[01;31m)[00m)) [01;33mVC) SIMPX)[00m
		(SIMPX es gibt dort eine cafeteria)
		[01;31m(SIMPX[00m
			(VF garage)
			(LK ist)
			(MF naturlich dann nicht nicht unbedingt so wichtig)[01;31m)[00m
		(SIMPX einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(NX dann das hotel luisenhof)
		(ADJX funf minuten vom bahnhof entfernt also etwas schneller)
		[01;31m(SIMPX[00m
			(VF es)
			(LK gibt)
			(MF eine bar ein restaurant und ebenfalls eine garage)[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das hotel loccumerhof)
			(LK ist)
			[01;31m(MF[00m
				(ADVX gleich)
				(PX beim bahnhof)[01;31m)[00m
			(NF anscheinend)[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(VF es)
			(LK gibt)
			(MF
				(NX
					(NX
						(ART ein)
						[01;31m(NX[00m
							(TRUNC schwimm)
							(KON und)
							(NN dampfbad)[01;31m)[00m)
					(KON und)
					(NX eine pianobar)))[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das einzelzimmer)
			(LK kostet)
			(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m
		[01;31m(NX[00m
			(KON und)
			(MF
				(NX das doppelzimmer)
				[01;31m(NX[00m
					(ADJX hundert dreiundvierzig)
					(NN mark)[01;31m)[00m)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF vom zeitangebot)
			(LK ware)
			(NX das hotel loccumerhof anscheinend besonders gunstig)
			(NF weil es gleich beim bahnhof liegt)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['MF', 'VC', 'KON', 'MVC'], 'family': ['C', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('PRELS', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPRART', 'NN', 'CARD', 'NN', 'NN', 'VAFIN'), 'right siblings': [], 'parent': 'R', 'auto preterminal span': (23, 34), 'span': (24, 34), 'left siblings': ['C'], 'label': 'FKOORD', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen)
		(PX zum einen)
		(NX das maritimhotel in hannover)
		(NF
			(R
				[01;36m(R[00m
					(C welches)
					(MF am bahnhof)
					(VC liegt)[01;36m)[00m
				(KON und)
				(MVC
					[01;31m(MF[00m
						(PX zum zentrum)
						[01;31m(NX[00m [01;33m(SIMPX[00m
							(NX funfzehn minuten)
							[01;33m(VC[00m (PX laufzeit)[01;31m)[00m[01;31m)[00m
					(VC hat)))) [01;33mVC) SIMPX)[00m
		(SIMPX es gibt dort eine cafeteria)
		[01;31m(SIMPX[00m
			(VF garage)
			(LK ist)
			(MF naturlich dann nicht nicht unbedingt so wichtig)[01;31m)[00m
		(SIMPX einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(NX dann das hotel luisenhof)
		(ADJX funf minuten vom bahnhof entfernt also etwas schneller)
		[01;31m(SIMPX[00m
			(VF es)
			(LK gibt)
			(MF eine bar ein restaurant und ebenfalls eine garage)[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das hotel loccumerhof)
			(LK ist)
			[01;31m(MF[00m
				(ADVX gleich)
				(PX beim bahnhof)[01;31m)[00m
			(NF anscheinend)[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(VF es)
			(LK gibt)
			(MF
				(NX
					(NX
						(ART ein)
						[01;31m(NX[00m
							(TRUNC schwimm)
							(KON und)
							(NN dampfbad)[01;31m)[00m)
					(KON und)
					(NX eine pianobar)))[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das einzelzimmer)
			(LK kostet)
			(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m
		[01;31m(NX[00m
			(KON und)
			(MF
				(NX das doppelzimmer)
				[01;31m(NX[00m
					(ADJX hundert dreiundvierzig)
					(NN mark)[01;31m)[00m)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF vom zeitangebot)
			(LK ware)
			(NX das hotel loccumerhof anscheinend besonders gunstig)
			(NF weil es gleich beim bahnhof liegt)[01;31m)[00m))
Step:UNSET add
{'subtrees': ['C', 'MF', 'VC'], 'family': ['R', 'KON', 'MVC'], 'over_word': False, 'over words': False, 'auto preterminals': ('PRELS', 'APPRART', 'NN', 'VVFIN'), 'right siblings': [(KON und), (MVC (MF (PX (APPRART zum) (NX (NN zentrum))) (NX (NX (ADJX (CARD funfzehn)) (NN minuten)) (PX (NN laufzeit)))) (VC (VXFIN (VAFIN hat))))], 'left siblings': [], 'auto preterminal span': (23, 27), 'span': (23, 27), 'parent': 'R', 'label': 'R', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SIMPX jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen)
		(PX zum einen)
		(NX das maritimhotel in hannover)
		(NF
			(R
				(R welches am bahnhof liegt)
				(KON und)
				(MVC
					[01;31m(MF[00m
						(PX zum zentrum)
						[01;31m(NX[00m [01;33m(SIMPX[00m
							(NX funfzehn minuten)
							[01;33m(VC[00m (PX laufzeit)[01;31m)[00m[01;31m)[00m
					(VC hat)))) [01;33mVC) SIMPX)[00m
		(SIMPX es gibt dort eine cafeteria)
		[01;31m(SIMPX[00m
			(VF garage)
			(LK ist)
			(MF naturlich dann nicht nicht unbedingt so wichtig)[01;31m)[00m
		(SIMPX einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(NX dann das hotel luisenhof)
		(ADJX funf minuten vom bahnhof entfernt also etwas schneller)
		[01;31m(SIMPX[00m
			(VF es)
			(LK gibt)
			(MF eine bar ein restaurant und ebenfalls eine garage)[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das hotel loccumerhof)
			(LK ist)
			[01;31m(MF[00m
				(ADVX gleich)
				(PX beim bahnhof)[01;31m)[00m
			(NF anscheinend)[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(VF es)
			(LK gibt)
			(MF
				(NX
					(NX
						(ART ein)
						[01;31m(NX[00m
							(TRUNC schwimm)
							(KON und)
							(NN dampfbad)[01;31m)[00m)
					(KON und)
					(NX eine pianobar)))[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das einzelzimmer)
			(LK kostet)
			(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m
		[01;31m(NX[00m
			(KON und)
			(MF
				(NX das doppelzimmer)
				[01;31m(NX[00m
					(ADJX hundert dreiundvierzig)
					(NN mark)[01;31m)[00m)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF vom zeitangebot)
			(LK ware)
			(NX das hotel loccumerhof anscheinend besonders gunstig)
			(NF weil es gleich beim bahnhof liegt)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['PX', 'NX'], 'family': ['MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'NN', 'CARD', 'NN', 'NN', 'VAFIN'), 'right siblings': ['VC'], 'parent': 'MVC', 'auto preterminal span': (28, 34), 'span': (28, 33), 'left siblings': [], 'label': 'MF', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen)
		(PX zum einen)
		(NX das maritimhotel in hannover)
		(NF
			(R
				(R welches am bahnhof liegt)
				(KON und)
				(MVC
					(PX zum zentrum)
					[01;36m(SIMPX[00m
						[01;31m(NX[00m
							(NX funfzehn minuten)
							[01;33m(VC[00m (PX laufzeit)[01;31m)[00m
						(VC hat)[01;36m)[00m))) [01;33mVC)[00m
		(SIMPX es gibt dort eine cafeteria)
		[01;31m(SIMPX[00m
			(VF garage)
			(LK ist)
			(MF naturlich dann nicht nicht unbedingt so wichtig)[01;31m)[00m
		(SIMPX einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(NX dann das hotel luisenhof)
		(ADJX funf minuten vom bahnhof entfernt also etwas schneller)
		[01;31m(SIMPX[00m
			(VF es)
			(LK gibt)
			(MF eine bar ein restaurant und ebenfalls eine garage)[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das hotel loccumerhof)
			(LK ist)
			[01;31m(MF[00m
				(ADVX gleich)
				(PX beim bahnhof)[01;31m)[00m
			(NF anscheinend)[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(VF es)
			(LK gibt)
			(MF
				(NX
					(NX
						(ART ein)
						[01;31m(NX[00m
							(TRUNC schwimm)
							(KON und)
							(NN dampfbad)[01;31m)[00m)
					(KON und)
					(NX eine pianobar)))[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das einzelzimmer)
			(LK kostet)
			(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m
		[01;31m(NX[00m
			(KON und)
			(MF
				(NX das doppelzimmer)
				[01;31m(NX[00m
					(ADJX hundert dreiundvierzig)
					(NN mark)[01;31m)[00m)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF vom zeitangebot)
			(LK ware)
			(NX das hotel loccumerhof anscheinend besonders gunstig)
			(NF weil es gleich beim bahnhof liegt)[01;31m)[00m))
Step:PP Attachment
{'new_parent': 'MVC', 'new_family': ['PX', 'NX', 'PX', 'VC'], 'mover info': [('PX', (32, 33))], 'old_family': ['NX', 'PX'], 'start left siblings': ['NX'], 'auto preterminals': ('APPRART', 'NN', 'CARD', 'NN', 'NN', 'VAFIN'), 'start right siblings': [], 'end left siblings': ['PX', 'NX'], 'auto preterminal span': (28, 34), 'adding node already present': False, 'movers': ['PX'], 'old_parent': 'NX', 'POS confusion': ('NN', 'NN'), 'added and moved': True, 'end right siblings': ['VC'], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'VC'}
(TOP
	(TURN
		(SIMPX jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen)
		(PX zum einen)
		(NX das maritimhotel in hannover)
		(NF
			(R
				(R welches am bahnhof liegt)
				(KON und)
				(MVC
					(PX zum zentrum)
					[01;36m(SIMPX[00m
						(NX funfzehn minuten)
						(VC laufzeit hat)[01;36m)[00m)))
		(SIMPX es gibt dort eine cafeteria)
		[01;31m(SIMPX[00m
			(VF garage)
			(LK ist)
			(MF naturlich dann nicht nicht unbedingt so wichtig)[01;31m)[00m
		(SIMPX einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(NX dann das hotel luisenhof)
		(ADJX funf minuten vom bahnhof entfernt also etwas schneller)
		[01;31m(SIMPX[00m
			(VF es)
			(LK gibt)
			(MF eine bar ein restaurant und ebenfalls eine garage)[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das hotel loccumerhof)
			(LK ist)
			[01;31m(MF[00m
				(ADVX gleich)
				(PX beim bahnhof)[01;31m)[00m
			(NF anscheinend)[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(VF es)
			(LK gibt)
			(MF
				(NX
					(NX
						(ART ein)
						[01;31m(NX[00m
							(TRUNC schwimm)
							(KON und)
							(NN dampfbad)[01;31m)[00m)
					(KON und)
					(NX eine pianobar)))[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das einzelzimmer)
			(LK kostet)
			(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m
		[01;31m(NX[00m
			(KON und)
			(MF
				(NX das doppelzimmer)
				[01;31m(NX[00m
					(ADJX hundert dreiundvierzig)
					(NN mark)[01;31m)[00m)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF vom zeitangebot)
			(LK ware)
			(NX das hotel loccumerhof anscheinend besonders gunstig)
			(NF weil es gleich beim bahnhof liegt)[01;31m)[00m))
Step:UNSET add
{'subtrees': ['NX', 'VC'], 'family': ['PX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'NN', 'NN', 'VAFIN'), 'right siblings': [], 'left siblings': [(PX (APPRART zum) (NX (NN zentrum)))], 'auto preterminal span': (30, 34), 'span': (30, 34), 'parent': 'MVC', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SIMPX jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen)
		(PX zum einen)
		(NX das maritimhotel in hannover)
		(NF welches am bahnhof liegt und zum zentrum funfzehn minuten laufzeit hat)
		(SIMPX es gibt dort eine cafeteria)
		[01;31m(SIMPX[00m
			(VF garage)
			(LK ist)
			(MF naturlich dann nicht nicht unbedingt so wichtig)[01;31m)[00m
		(SIMPX einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(NX dann das hotel luisenhof)
		(ADJX funf minuten vom bahnhof entfernt also etwas schneller)
		[01;31m(SIMPX[00m
			(VF es)
			(LK gibt)
			(MF eine bar ein restaurant und ebenfalls eine garage)[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das hotel loccumerhof)
			(LK ist)
			[01;31m(MF[00m
				(ADVX gleich)
				(PX beim bahnhof)[01;31m)[00m
			(NF anscheinend)[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(VF es)
			(LK gibt)
			(MF
				(NX
					(NX
						(ART ein)
						[01;31m(NX[00m
							(TRUNC schwimm)
							(KON und)
							(NN dampfbad)[01;31m)[00m)
					(KON und)
					(NX eine pianobar)))[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das einzelzimmer)
			(LK kostet)
			(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m
		[01;31m(NX[00m
			(KON und)
			(MF
				(NX das doppelzimmer)
				[01;31m(NX[00m
					(ADJX hundert dreiundvierzig)
					(NN mark)[01;31m)[00m)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF vom zeitangebot)
			(LK ware)
			(NX das hotel loccumerhof anscheinend besonders gunstig)
			(NF weil es gleich beim bahnhof liegt)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['SIMPX', 'SIMPX', 'PX', 'NX', 'NF', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'ADJX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'PIAT', 'NN', 'VVPP', 'PDS', 'VMFIN', 'PPER', 'APPR', 'PPER', 'ADV', 'ADV', 'VVINF', 'APPRART', 'PIS', 'ART', 'NE', 'APPR', 'NE', 'PRELS', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPRART', 'NN', 'CARD', 'NN', 'NN', 'VAFIN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NN', 'VAFIN', 'ADV', 'ADV', 'PTKNEG', 'PTKNEG', 'ADV', 'ADV', 'ADJD', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN', 'NN', 'CARD', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'ADJD', 'ADV', 'ADV', 'ADJD', 'PPER', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ART', 'NN', 'KON', 'ART', 'NN', 'NE', 'VAFIN', 'ADV', 'APPRART', 'NN', 'ADV', 'KON', 'PPER', 'VVFIN', 'ART', 'TRUNC', 'KON', 'NN', 'KON', 'ART', 'NN', 'KON', 'ART', 'NN', 'VVFIN', 'ADV', 'CARD', 'CARD', 'NN', 'KON', 'ART', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'VAFIN', 'ART', 'NN', 'NE', 'ADV', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'VVFIN'), 'right siblings': ['SIMPX', 'NX', 'ADJX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 127), 'span': (39, 48), 'left siblings': ['SIMPX', 'SIMPX', 'PX', 'NX', 'NF', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen)
		(PX zum einen)
		(NX das maritimhotel in hannover)
		(NF welches am bahnhof liegt und zum zentrum funfzehn minuten laufzeit hat)
		(SIMPX es gibt dort eine cafeteria)
		(VF garage)
		(LK ist)
		(MF naturlich dann nicht nicht unbedingt so wichtig)
		(SIMPX einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(NX dann das hotel luisenhof)
		(ADJX funf minuten vom bahnhof entfernt also etwas schneller)
		[01;31m(SIMPX[00m
			(VF es)
			(LK gibt)
			(MF eine bar ein restaurant und ebenfalls eine garage)[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das hotel loccumerhof)
			(LK ist)
			[01;31m(MF[00m
				(ADVX gleich)
				(PX beim bahnhof)[01;31m)[00m
			(NF anscheinend)[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(VF es)
			(LK gibt)
			(MF
				(NX
					(NX
						(ART ein)
						[01;31m(NX[00m
							(TRUNC schwimm)
							(KON und)
							(NN dampfbad)[01;31m)[00m)
					(KON und)
					(NX eine pianobar)))[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das einzelzimmer)
			(LK kostet)
			(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m
		[01;31m(NX[00m
			(KON und)
			(MF
				(NX das doppelzimmer)
				[01;31m(NX[00m
					(ADJX hundert dreiundvierzig)
					(NN mark)[01;31m)[00m)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF vom zeitangebot)
			(LK ware)
			(NX das hotel loccumerhof anscheinend besonders gunstig)
			(NF weil es gleich beim bahnhof liegt)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['SIMPX', 'SIMPX', 'PX', 'NX', 'NF', 'SIMPX', 'VF', 'LK', 'MF', 'SIMPX', 'NX', 'ADJX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'PIAT', 'NN', 'VVPP', 'PDS', 'VMFIN', 'PPER', 'APPR', 'PPER', 'ADV', 'ADV', 'VVINF', 'APPRART', 'PIS', 'ART', 'NE', 'APPR', 'NE', 'PRELS', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPRART', 'NN', 'CARD', 'NN', 'NN', 'VAFIN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NN', 'VAFIN', 'ADV', 'ADV', 'PTKNEG', 'PTKNEG', 'ADV', 'ADV', 'ADJD', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN', 'NN', 'CARD', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'ADJD', 'ADV', 'ADV', 'ADJD', 'PPER', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ART', 'NN', 'KON', 'ART', 'NN', 'NE', 'VAFIN', 'ADV', 'APPRART', 'NN', 'ADV', 'KON', 'PPER', 'VVFIN', 'ART', 'TRUNC', 'KON', 'NN', 'KON', 'ART', 'NN', 'KON', 'ART', 'NN', 'VVFIN', 'ADV', 'CARD', 'CARD', 'NN', 'KON', 'ART', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'VAFIN', 'ART', 'NN', 'NE', 'ADV', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'VVFIN'), 'right siblings': ['SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 127), 'span': (69, 79), 'left siblings': ['SIMPX', 'SIMPX', 'PX', 'NX', 'NF', 'SIMPX', 'VF', 'LK', 'MF', 'SIMPX', 'NX', 'ADJX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen)
		(PX zum einen)
		(NX das maritimhotel in hannover)
		(NF welches am bahnhof liegt und zum zentrum funfzehn minuten laufzeit hat)
		(SIMPX es gibt dort eine cafeteria)
		(VF garage)
		(LK ist)
		(MF naturlich dann nicht nicht unbedingt so wichtig)
		(SIMPX einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(NX dann das hotel luisenhof)
		(ADJX funf minuten vom bahnhof entfernt also etwas schneller)
		(VF es)
		(LK gibt)
		(MF eine bar ein restaurant und ebenfalls eine garage)
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das hotel loccumerhof)
			(LK ist)
			[01;31m(MF[00m
				(ADVX gleich)
				(PX beim bahnhof)[01;31m)[00m
			(NF anscheinend)[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(VF es)
			(LK gibt)
			(MF
				(NX
					(NX
						(ART ein)
						[01;31m(NX[00m
							(TRUNC schwimm)
							(KON und)
							(NN dampfbad)[01;31m)[00m)
					(KON und)
					(NX eine pianobar)))[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das einzelzimmer)
			(LK kostet)
			(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m
		[01;31m(NX[00m
			(KON und)
			(MF
				(NX das doppelzimmer)
				[01;31m(NX[00m
					(ADJX hundert dreiundvierzig)
					(NN mark)[01;31m)[00m)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF vom zeitangebot)
			(LK ware)
			(NX das hotel loccumerhof anscheinend besonders gunstig)
			(NF weil es gleich beim bahnhof liegt)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['KOORD', 'VF', 'LK', 'MF', 'NF'], 'family': ['SIMPX', 'SIMPX', 'PX', 'NX', 'NF', 'SIMPX', 'VF', 'LK', 'MF', 'SIMPX', 'NX', 'ADJX', 'VF', 'LK', 'MF', 'SIMPX', 'SIMPX', 'SIMPX', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'PIAT', 'NN', 'VVPP', 'PDS', 'VMFIN', 'PPER', 'APPR', 'PPER', 'ADV', 'ADV', 'VVINF', 'APPRART', 'PIS', 'ART', 'NE', 'APPR', 'NE', 'PRELS', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPRART', 'NN', 'CARD', 'NN', 'NN', 'VAFIN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NN', 'VAFIN', 'ADV', 'ADV', 'PTKNEG', 'PTKNEG', 'ADV', 'ADV', 'ADJD', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN', 'NN', 'CARD', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'ADJD', 'ADV', 'ADV', 'ADJD', 'PPER', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ART', 'NN', 'KON', 'ART', 'NN', 'NE', 'VAFIN', 'ADV', 'APPRART', 'NN', 'ADV', 'KON', 'PPER', 'VVFIN', 'ART', 'TRUNC', 'KON', 'NN', 'KON', 'ART', 'NN', 'KON', 'ART', 'NN', 'VVFIN', 'ADV', 'CARD', 'CARD', 'NN', 'KON', 'ART', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'VAFIN', 'ART', 'NN', 'NE', 'ADV', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'VVFIN'), 'right siblings': ['SIMPX', 'SIMPX', 'NX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 127), 'span': (79, 88), 'left siblings': ['SIMPX', 'SIMPX', 'PX', 'NX', 'NF', 'SIMPX', 'VF', 'LK', 'MF', 'SIMPX', 'NX', 'ADJX', 'VF', 'LK', 'MF'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen)
		(PX zum einen)
		(NX das maritimhotel in hannover)
		(NF welches am bahnhof liegt und zum zentrum funfzehn minuten laufzeit hat)
		(SIMPX es gibt dort eine cafeteria)
		(VF garage)
		(LK ist)
		(MF naturlich dann nicht nicht unbedingt so wichtig)
		(SIMPX einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(NX dann das hotel luisenhof)
		(ADJX funf minuten vom bahnhof entfernt also etwas schneller)
		(VF es)
		(LK gibt)
		(MF eine bar ein restaurant und ebenfalls eine garage)
		(KOORD und)
		(VF das hotel loccumerhof)
		(LK ist)
		[01;31m(MF[00m
			(ADVX gleich)
			(PX beim bahnhof)[01;31m)[00m
		(NF anscheinend)
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(VF es)
			(LK gibt)
			(MF
				(NX
					(NX
						(ART ein)
						[01;31m(NX[00m
							(TRUNC schwimm)
							(KON und)
							(NN dampfbad)[01;31m)[00m)
					(KON und)
					(NX eine pianobar)))[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das einzelzimmer)
			(LK kostet)
			(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m
		[01;31m(NX[00m
			(KON und)
			(MF
				(NX das doppelzimmer)
				[01;31m(NX[00m
					(ADJX hundert dreiundvierzig)
					(NN mark)[01;31m)[00m)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF vom zeitangebot)
			(LK ware)
			(NX das hotel loccumerhof anscheinend besonders gunstig)
			(NF weil es gleich beim bahnhof liegt)[01;31m)[00m))
Step:PP Attachment
{'subtrees': ['ADVX', 'PX'], 'family': ['SIMPX', 'SIMPX', 'PX', 'NX', 'NF', 'SIMPX', 'VF', 'LK', 'MF', 'SIMPX', 'NX', 'ADJX', 'VF', 'LK', 'MF', 'KOORD', 'VF', 'LK', 'MF', 'NF', 'SIMPX', 'SIMPX', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'PIAT', 'NN', 'VVPP', 'PDS', 'VMFIN', 'PPER', 'APPR', 'PPER', 'ADV', 'ADV', 'VVINF', 'APPRART', 'PIS', 'ART', 'NE', 'APPR', 'NE', 'PRELS', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPRART', 'NN', 'CARD', 'NN', 'NN', 'VAFIN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NN', 'VAFIN', 'ADV', 'ADV', 'PTKNEG', 'PTKNEG', 'ADV', 'ADV', 'ADJD', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN', 'NN', 'CARD', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'ADJD', 'ADV', 'ADV', 'ADJD', 'PPER', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ART', 'NN', 'KON', 'ART', 'NN', 'NE', 'VAFIN', 'ADV', 'APPRART', 'NN', 'ADV', 'KON', 'PPER', 'VVFIN', 'ART', 'TRUNC', 'KON', 'NN', 'KON', 'ART', 'NN', 'KON', 'ART', 'NN', 'VVFIN', 'ADV', 'CARD', 'CARD', 'NN', 'KON', 'ART', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'VAFIN', 'ART', 'NN', 'NE', 'ADV', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'VVFIN'), 'right siblings': ['NF', 'SIMPX', 'SIMPX', 'NX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 127), 'span': (84, 87), 'left siblings': ['SIMPX', 'SIMPX', 'PX', 'NX', 'NF', 'SIMPX', 'VF', 'LK', 'MF', 'SIMPX', 'NX', 'ADJX', 'VF', 'LK', 'MF', 'KOORD', 'VF', 'LK'], 'label': 'MF', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen)
		(PX zum einen)
		(NX das maritimhotel in hannover)
		(NF welches am bahnhof liegt und zum zentrum funfzehn minuten laufzeit hat)
		(SIMPX es gibt dort eine cafeteria)
		(VF garage)
		(LK ist)
		(MF naturlich dann nicht nicht unbedingt so wichtig)
		(SIMPX einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(NX dann das hotel luisenhof)
		(ADJX funf minuten vom bahnhof entfernt also etwas schneller)
		(VF es)
		(LK gibt)
		(MF eine bar ein restaurant und ebenfalls eine garage)
		(KOORD und)
		(VF das hotel loccumerhof)
		(LK ist)
		(ADVX gleich)
		(PX beim bahnhof)
		(NF anscheinend)
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(VF es)
			(LK gibt)
			(MF
				(NX
					(NX
						(ART ein)
						[01;31m(NX[00m
							(TRUNC schwimm)
							(KON und)
							(NN dampfbad)[01;31m)[00m)
					(KON und)
					(NX eine pianobar)))[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das einzelzimmer)
			(LK kostet)
			(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m
		[01;31m(NX[00m
			(KON und)
			(MF
				(NX das doppelzimmer)
				[01;31m(NX[00m
					(ADJX hundert dreiundvierzig)
					(NN mark)[01;31m)[00m)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF vom zeitangebot)
			(LK ware)
			(NX das hotel loccumerhof anscheinend besonders gunstig)
			(NF weil es gleich beim bahnhof liegt)[01;31m)[00m))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['KOORD', 'VF', 'LK', 'MF'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON', 'PPER', 'VVFIN', 'ART', 'TRUNC', 'KON', 'NN', 'KON', 'ART', 'NN'), 'right siblings': ['VF', 'LK', 'MF'], 'parent': 'SIMPX', 'auto preterminal span': (88, 98), 'span': (88, 89), 'left siblings': [], 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen)
		(PX zum einen)
		(NX das maritimhotel in hannover)
		(NF welches am bahnhof liegt und zum zentrum funfzehn minuten laufzeit hat)
		(SIMPX es gibt dort eine cafeteria)
		(VF garage)
		(LK ist)
		(MF naturlich dann nicht nicht unbedingt so wichtig)
		(SIMPX einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(NX dann das hotel luisenhof)
		(ADJX funf minuten vom bahnhof entfernt also etwas schneller)
		(VF es)
		(LK gibt)
		(MF eine bar ein restaurant und ebenfalls eine garage)
		(KOORD und)
		(VF das hotel loccumerhof)
		(LK ist)
		(ADVX gleich)
		(PX beim bahnhof)
		(NF anscheinend)
		[01;31m(SIMPX[00m
			(KON und)
			(VF es)
			(LK gibt)
			(MF
				(NX
					(NX
						(ART ein)
						[01;31m(NX[00m
							(TRUNC schwimm)
							(KON und)
							(NN dampfbad)[01;31m)[00m)
					(KON und)
					(NX eine pianobar)))[01;31m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das einzelzimmer)
			(LK kostet)
			(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m
		[01;31m(NX[00m
			(KON und)
			(MF
				(NX das doppelzimmer)
				[01;31m(NX[00m
					(ADJX hundert dreiundvierzig)
					(NN mark)[01;31m)[00m)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF vom zeitangebot)
			(LK ware)
			(NX das hotel loccumerhof anscheinend besonders gunstig)
			(NF weil es gleich beim bahnhof liegt)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['KON', 'VF', 'LK', 'MF'], 'family': ['SIMPX', 'SIMPX', 'PX', 'NX', 'NF', 'SIMPX', 'VF', 'LK', 'MF', 'SIMPX', 'NX', 'ADJX', 'VF', 'LK', 'MF', 'KOORD', 'VF', 'LK', 'ADVX', 'PX', 'NF', 'SIMPX', 'SIMPX', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'PIAT', 'NN', 'VVPP', 'PDS', 'VMFIN', 'PPER', 'APPR', 'PPER', 'ADV', 'ADV', 'VVINF', 'APPRART', 'PIS', 'ART', 'NE', 'APPR', 'NE', 'PRELS', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPRART', 'NN', 'CARD', 'NN', 'NN', 'VAFIN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NN', 'VAFIN', 'ADV', 'ADV', 'PTKNEG', 'PTKNEG', 'ADV', 'ADV', 'ADJD', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN', 'NN', 'CARD', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'ADJD', 'ADV', 'ADV', 'ADJD', 'PPER', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ART', 'NN', 'KON', 'ART', 'NN', 'NE', 'VAFIN', 'ADV', 'APPRART', 'NN', 'ADV', 'KON', 'PPER', 'VVFIN', 'ART', 'TRUNC', 'KON', 'NN', 'KON', 'ART', 'NN', 'KON', 'ART', 'NN', 'VVFIN', 'ADV', 'CARD', 'CARD', 'NN', 'KON', 'ART', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'VAFIN', 'ART', 'NN', 'NE', 'ADV', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'VVFIN'), 'right siblings': ['SIMPX', 'NX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 127), 'span': (88, 98), 'left siblings': ['SIMPX', 'SIMPX', 'PX', 'NX', 'NF', 'SIMPX', 'VF', 'LK', 'MF', 'SIMPX', 'NX', 'ADJX', 'VF', 'LK', 'MF', 'KOORD', 'VF', 'LK', 'ADVX', 'PX', 'NF'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen)
		(PX zum einen)
		(NX das maritimhotel in hannover)
		(NF welches am bahnhof liegt und zum zentrum funfzehn minuten laufzeit hat)
		(SIMPX es gibt dort eine cafeteria)
		(VF garage)
		(LK ist)
		(MF naturlich dann nicht nicht unbedingt so wichtig)
		(SIMPX einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(NX dann das hotel luisenhof)
		(ADJX funf minuten vom bahnhof entfernt also etwas schneller)
		(VF es)
		(LK gibt)
		(MF eine bar ein restaurant und ebenfalls eine garage)
		(KOORD und)
		(VF das hotel loccumerhof)
		(LK ist)
		(ADVX gleich)
		(PX beim bahnhof)
		(NF anscheinend)
		(KON und)
		(VF es)
		(LK gibt)
		(MF
			(NX
				(NX
					(ART ein)
					[01;31m(NX[00m
						(TRUNC schwimm)
						(KON und)
						(NN dampfbad)[01;31m)[00m)
				(KON und)
				(NX eine pianobar)))
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das einzelzimmer)
			(LK kostet)
			(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m
		[01;31m(NX[00m
			(KON und)
			(MF
				(NX das doppelzimmer)
				[01;31m(NX[00m
					(ADJX hundert dreiundvierzig)
					(NN mark)[01;31m)[00m)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF vom zeitangebot)
			(LK ware)
			(NX das hotel loccumerhof anscheinend besonders gunstig)
			(NF weil es gleich beim bahnhof liegt)[01;31m)[00m))
Step:NP Internal Structure
{'subtrees': ['TRUNC', 'KON', 'NN'], 'family': ['ART', 'NX'], 'over_word': False, 'over words': True, 'auto preterminals': ('ART', 'TRUNC', 'KON', 'NN'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (91, 95), 'span': (92, 95), 'left siblings': ['ART'], 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen)
		(PX zum einen)
		(NX das maritimhotel in hannover)
		(NF welches am bahnhof liegt und zum zentrum funfzehn minuten laufzeit hat)
		(SIMPX es gibt dort eine cafeteria)
		(VF garage)
		(LK ist)
		(MF naturlich dann nicht nicht unbedingt so wichtig)
		(SIMPX einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(NX dann das hotel luisenhof)
		(ADJX funf minuten vom bahnhof entfernt also etwas schneller)
		(VF es)
		(LK gibt)
		(MF eine bar ein restaurant und ebenfalls eine garage)
		(KOORD und)
		(VF das hotel loccumerhof)
		(LK ist)
		(ADVX gleich)
		(PX beim bahnhof)
		(NF anscheinend)
		(KON und)
		(VF es)
		(LK gibt)
		(MF ein schwimm und dampfbad und eine pianobar)
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das einzelzimmer)
			(LK kostet)
			(MF allerdings zweihundert achtundvierzig mark)[01;31m)[00m
		[01;31m(NX[00m
			(KON und)
			(MF
				(NX das doppelzimmer)
				[01;31m(NX[00m
					(ADJX hundert dreiundvierzig)
					(NN mark)[01;31m)[00m)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF vom zeitangebot)
			(LK ware)
			(NX das hotel loccumerhof anscheinend besonders gunstig)
			(NF weil es gleich beim bahnhof liegt)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['KOORD', 'VF', 'LK', 'MF'], 'family': ['SIMPX', 'SIMPX', 'PX', 'NX', 'NF', 'SIMPX', 'VF', 'LK', 'MF', 'SIMPX', 'NX', 'ADJX', 'VF', 'LK', 'MF', 'KOORD', 'VF', 'LK', 'ADVX', 'PX', 'NF', 'KON', 'VF', 'LK', 'MF', 'SIMPX', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'PIAT', 'NN', 'VVPP', 'PDS', 'VMFIN', 'PPER', 'APPR', 'PPER', 'ADV', 'ADV', 'VVINF', 'APPRART', 'PIS', 'ART', 'NE', 'APPR', 'NE', 'PRELS', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPRART', 'NN', 'CARD', 'NN', 'NN', 'VAFIN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NN', 'VAFIN', 'ADV', 'ADV', 'PTKNEG', 'PTKNEG', 'ADV', 'ADV', 'ADJD', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN', 'NN', 'CARD', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'ADJD', 'ADV', 'ADV', 'ADJD', 'PPER', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ART', 'NN', 'KON', 'ART', 'NN', 'NE', 'VAFIN', 'ADV', 'APPRART', 'NN', 'ADV', 'KON', 'PPER', 'VVFIN', 'ART', 'TRUNC', 'KON', 'NN', 'KON', 'ART', 'NN', 'KON', 'ART', 'NN', 'VVFIN', 'ADV', 'CARD', 'CARD', 'NN', 'KON', 'ART', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'VAFIN', 'ART', 'NN', 'NE', 'ADV', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'VVFIN'), 'right siblings': ['NX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 127), 'span': (98, 106), 'left siblings': ['SIMPX', 'SIMPX', 'PX', 'NX', 'NF', 'SIMPX', 'VF', 'LK', 'MF', 'SIMPX', 'NX', 'ADJX', 'VF', 'LK', 'MF', 'KOORD', 'VF', 'LK', 'ADVX', 'PX', 'NF', 'KON', 'VF', 'LK', 'MF'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen)
		(PX zum einen)
		(NX das maritimhotel in hannover)
		(NF welches am bahnhof liegt und zum zentrum funfzehn minuten laufzeit hat)
		(SIMPX es gibt dort eine cafeteria)
		(VF garage)
		(LK ist)
		(MF naturlich dann nicht nicht unbedingt so wichtig)
		(SIMPX einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(NX dann das hotel luisenhof)
		(ADJX funf minuten vom bahnhof entfernt also etwas schneller)
		(VF es)
		(LK gibt)
		(MF eine bar ein restaurant und ebenfalls eine garage)
		(KOORD und)
		(VF das hotel loccumerhof)
		(LK ist)
		(ADVX gleich)
		(PX beim bahnhof)
		(NF anscheinend)
		(KON und)
		(VF es)
		(LK gibt)
		(MF ein schwimm und dampfbad und eine pianobar)
		(KOORD und)
		(VF das einzelzimmer)
		(LK kostet)
		(MF allerdings zweihundert achtundvierzig mark)
		[01;31m(NX[00m
			(KON und)
			(MF
				(NX das doppelzimmer)
				[01;31m(NX[00m
					(ADJX hundert dreiundvierzig)
					(NN mark)[01;31m)[00m)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF vom zeitangebot)
			(LK ware)
			(NX das hotel loccumerhof anscheinend besonders gunstig)
			(NF weil es gleich beim bahnhof liegt)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['KON', 'MF'], 'family': ['SIMPX', 'SIMPX', 'PX', 'NX', 'NF', 'SIMPX', 'VF', 'LK', 'MF', 'SIMPX', 'NX', 'ADJX', 'VF', 'LK', 'MF', 'KOORD', 'VF', 'LK', 'ADVX', 'PX', 'NF', 'KON', 'VF', 'LK', 'MF', 'KOORD', 'VF', 'LK', 'MF', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'PIAT', 'NN', 'VVPP', 'PDS', 'VMFIN', 'PPER', 'APPR', 'PPER', 'ADV', 'ADV', 'VVINF', 'APPRART', 'PIS', 'ART', 'NE', 'APPR', 'NE', 'PRELS', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPRART', 'NN', 'CARD', 'NN', 'NN', 'VAFIN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NN', 'VAFIN', 'ADV', 'ADV', 'PTKNEG', 'PTKNEG', 'ADV', 'ADV', 'ADJD', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN', 'NN', 'CARD', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'ADJD', 'ADV', 'ADV', 'ADJD', 'PPER', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ART', 'NN', 'KON', 'ART', 'NN', 'NE', 'VAFIN', 'ADV', 'APPRART', 'NN', 'ADV', 'KON', 'PPER', 'VVFIN', 'ART', 'TRUNC', 'KON', 'NN', 'KON', 'ART', 'NN', 'KON', 'ART', 'NN', 'VVFIN', 'ADV', 'CARD', 'CARD', 'NN', 'KON', 'ART', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'VAFIN', 'ART', 'NN', 'NE', 'ADV', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'VVFIN'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 127), 'span': (106, 112), 'left siblings': ['SIMPX', 'SIMPX', 'PX', 'NX', 'NF', 'SIMPX', 'VF', 'LK', 'MF', 'SIMPX', 'NX', 'ADJX', 'VF', 'LK', 'MF', 'KOORD', 'VF', 'LK', 'ADVX', 'PX', 'NF', 'KON', 'VF', 'LK', 'MF', 'KOORD', 'VF', 'LK', 'MF'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen)
		(PX zum einen)
		(NX das maritimhotel in hannover)
		(NF welches am bahnhof liegt und zum zentrum funfzehn minuten laufzeit hat)
		(SIMPX es gibt dort eine cafeteria)
		(VF garage)
		(LK ist)
		(MF naturlich dann nicht nicht unbedingt so wichtig)
		(SIMPX einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(NX dann das hotel luisenhof)
		(ADJX funf minuten vom bahnhof entfernt also etwas schneller)
		(VF es)
		(LK gibt)
		(MF eine bar ein restaurant und ebenfalls eine garage)
		(KOORD und)
		(VF das hotel loccumerhof)
		(LK ist)
		(ADVX gleich)
		(PX beim bahnhof)
		(NF anscheinend)
		(KON und)
		(VF es)
		(LK gibt)
		(MF ein schwimm und dampfbad und eine pianobar)
		(KOORD und)
		(VF das einzelzimmer)
		(LK kostet)
		(MF allerdings zweihundert achtundvierzig mark)
		(KON und)
		(MF
			(NX das doppelzimmer)
			[01;31m(NX[00m
				(ADJX hundert dreiundvierzig)
				(NN mark)[01;31m)[00m)
		[01;31m(SIMPX[00m
			(VF vom zeitangebot)
			(LK ware)
			(NX das hotel loccumerhof anscheinend besonders gunstig)
			(NF weil es gleich beim bahnhof liegt)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['ADJX', 'NN'], 'family': ['NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'CARD', 'CARD', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (107, 112), 'span': (109, 112), 'left siblings': ['NX'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX jetzt habe ich mir auch schon einige hotelangebote herausgesucht)
		(SIMPX die mus ich mit ihnen jetzt noch absprechen)
		(PX zum einen)
		(NX das maritimhotel in hannover)
		(NF welches am bahnhof liegt und zum zentrum funfzehn minuten laufzeit hat)
		(SIMPX es gibt dort eine cafeteria)
		(VF garage)
		(LK ist)
		(MF naturlich dann nicht nicht unbedingt so wichtig)
		(SIMPX einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark)
		(NX dann das hotel luisenhof)
		(ADJX funf minuten vom bahnhof entfernt also etwas schneller)
		(VF es)
		(LK gibt)
		(MF eine bar ein restaurant und ebenfalls eine garage)
		(KOORD und)
		(VF das hotel loccumerhof)
		(LK ist)
		(ADVX gleich)
		(PX beim bahnhof)
		(NF anscheinend)
		(KON und)
		(VF es)
		(LK gibt)
		(MF ein schwimm und dampfbad und eine pianobar)
		(KOORD und)
		(VF das einzelzimmer)
		(LK kostet)
		(MF allerdings zweihundert achtundvierzig mark)
		(KON und)
		(MF das doppelzimmer hundert dreiundvierzig mark)
		[01;31m(SIMPX[00m
			(VF vom zeitangebot)
			(LK ware)
			(NX das hotel loccumerhof anscheinend besonders gunstig)
			(NF weil es gleich beim bahnhof liegt)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'NX', 'NF'], 'family': ['SIMPX', 'SIMPX', 'PX', 'NX', 'NF', 'SIMPX', 'VF', 'LK', 'MF', 'SIMPX', 'NX', 'ADJX', 'VF', 'LK', 'MF', 'KOORD', 'VF', 'LK', 'ADVX', 'PX', 'NF', 'KON', 'VF', 'LK', 'MF', 'KOORD', 'VF', 'LK', 'MF', 'KON', 'MF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'PRF', 'ADV', 'ADV', 'PIAT', 'NN', 'VVPP', 'PDS', 'VMFIN', 'PPER', 'APPR', 'PPER', 'ADV', 'ADV', 'VVINF', 'APPRART', 'PIS', 'ART', 'NE', 'APPR', 'NE', 'PRELS', 'APPRART', 'NN', 'VVFIN', 'KON', 'APPRART', 'NN', 'CARD', 'NN', 'NN', 'VAFIN', 'PPER', 'VVFIN', 'ADV', 'ART', 'NN', 'NN', 'VAFIN', 'ADV', 'ADV', 'PTKNEG', 'PTKNEG', 'ADV', 'ADV', 'ADJD', 'NN', 'VVFIN', 'CARD', 'CARD', 'NN', 'NN', 'CARD', 'CARD', 'NN', 'ADV', 'ART', 'NN', 'NE', 'CARD', 'NN', 'APPRART', 'NN', 'ADJD', 'ADV', 'ADV', 'ADJD', 'PPER', 'VVFIN', 'ART', 'NN', 'ART', 'NN', 'KON', 'ADV', 'ART', 'NN', 'KON', 'ART', 'NN', 'NE', 'VAFIN', 'ADV', 'APPRART', 'NN', 'ADV', 'KON', 'PPER', 'VVFIN', 'ART', 'TRUNC', 'KON', 'NN', 'KON', 'ART', 'NN', 'KON', 'ART', 'NN', 'VVFIN', 'ADV', 'CARD', 'CARD', 'NN', 'KON', 'ART', 'NN', 'CARD', 'CARD', 'NN', 'APPRART', 'NN', 'VAFIN', 'ART', 'NN', 'NE', 'ADV', 'ADV', 'ADJD', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'VVFIN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 127), 'span': (112, 127), 'left siblings': ['SIMPX', 'SIMPX', 'PX', 'NX', 'NF', 'SIMPX', 'VF', 'LK', 'MF', 'SIMPX', 'NX', 'ADJX', 'VF', 'LK', 'MF', 'KOORD', 'VF', 'LK', 'ADVX', 'PX', 'NF', 'KON', 'VF', 'LK', 'MF', 'KOORD', 'VF', 'LK', 'MF', 'KON', 'MF'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP jetzt habe ich mir auch schon einige hotelangebote herausgesucht die mus ich mit ihnen jetzt noch absprechen zum einen das maritimhotel in hannover welches am bahnhof liegt und zum zentrum funfzehn minuten laufzeit hat es gibt dort eine cafeteria garage ist naturlich dann nicht nicht unbedingt so wichtig einzelzimmer kostet hundert einundfunfzig mark doppelzimmer hundert funf mark dann das hotel luisenhof funf minuten vom bahnhof entfernt also etwas schneller es gibt eine bar ein restaurant und ebenfalls eine garage und das hotel loccumerhof ist gleich beim bahnhof anscheinend und es gibt ein schwimm und dampfbad und eine pianobar und das einzelzimmer kostet allerdings zweihundert achtundvierzig mark und das doppelzimmer hundert dreiundvierzig mark vom zeitangebot ware das hotel loccumerhof anscheinend besonders gunstig weil es gleich beim bahnhof liegt)

Sentence 556:
0 Initial errors
0 on fringe, 0 iterations

Sentence 557:
0 Initial errors
0 on fringe, 0 iterations

Sentence 558:
3 Initial errors
0 on fringe, 1 iterations
3 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM guten tag)
		(DM frau heinicke)
		(SIMPX
			(VF wie wir bereits ausgemacht haben)
			(LK wollten)
			(MF
				(NX wir)
				[01;36m(PX[00m
					[01;31m(PX[00m
						(APPR auf)
						[01;33m(NX[00m (NX eine eineinhalbtagige geschaftsreise)[01;31m)[00m
					(PX nach hamburg)[01;36m)[00m) [01;33mNX)[00m
			(VC fahren))))
Step:PP Attachment
{'new_parent': 'PX', 'new_family': ['APPR', 'NX', 'PX'], 'mover info': [('PX', (15, 17))], 'old_family': ['NX', 'PX', 'PX'], 'start left siblings': ['NX', 'PX'], 'auto preterminals': ('PPER', 'APPR', 'ART', 'ADJA', 'NN', 'APPR', 'NE'), 'start right siblings': [], 'end left siblings': ['APPR', 'NX'], 'auto preterminal span': (10, 17), 'adding node already present': False, 'movers': ['PX'], 'old_parent': 'MF', 'added and moved': True, 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'NX'}
(TOP guten tag frau heinicke wie wir bereits ausgemacht haben wollten wir auf eine eineinhalbtagige geschaftsreise nach hamburg fahren)

Sentence 559:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Clause Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(P
			(SIMPX da wurde mir der letzte termin am besten passen)
			(KOUS weil)
			[01;31m(SIMPX[00m
				(SIMPX am vierzehnten und funfzehnten ist eine messe)
				(KON und)
				(SIMPX in der letzten januarwoche ist bei mir bis auf montag eigentlich alles frei)[01;31m)[00m)
		(DM also)
		(SIMPX da wurde ich doch sagen das wir am mittwoch und donnerstag nach hannover fahren)))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'KON', 'SIMPX'], 'family': ['SIMPX', 'KOUS', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'ART', 'ADJA', 'NN', 'PTKA', 'ADJD', 'VVINF', 'KOUS', 'APPRART', 'NN', 'KON', 'NN', 'VAFIN', 'ART', 'NN', 'KON', 'APPR', 'ART', 'ADJA', 'NN', 'VAFIN', 'APPR', 'PPER', 'APPR', 'APPR', 'NN', 'ADV', 'PIS', 'ADJD'), 'right siblings': [], 'parent': 'P', 'auto preterminal span': (1, 32), 'span': (11, 32), 'left siblings': ['SIMPX', 'KOUS'], 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP ja da wurde mir der letzte termin am besten passen weil am vierzehnten und funfzehnten ist eine messe und in der letzten januarwoche ist bei mir bis auf montag eigentlich alles frei also da wurde ich doch sagen das wir am mittwoch und donnerstag nach hannover fahren)

Sentence 560:
15 Initial errors
0 on fringe, 13 iterations
2 Error:Single Word Phrase
2 Error:Different label
1 Error:Single Word Phrase
1 Error:PP Attachment
1 Error:Unary
1 Error:Unary
1 Error:NP Internal Structure
1 Error:Clause Attachment
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:Co-ordination
1 Error:Clause Attachment
1 Error:UNSET add
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich habe mir da einige zugverbindungen und fluge geben lassen)
		[01;31m(SIMPX[00m
			(SIMPX und der zug fahrt stundlich ab vier uhr sechsundfunfzig am morgen)
			[01;36m(KOORD[00m
				(KON und)[01;36m)[00m
			[01;31m(SIMPX[00m
				(VF er)
				(LK braucht)
				(MF
					[01;36m(MF[00m
						(NX viereinhalb stunden)
						(PX bis hannover)[01;36m)[00m
					[01;36m(NF[00m
						(PX
							(APPR von)
							(NX munchen)
							(APZR aus))[01;36m)[00m)[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(KOORD und)
			(VF das flugzeug)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK wurde)
					(MF stundlich ab sieben uhr bis achtzehn uhr)
					[01;36m(VXFIN[00m [01;36m(VC[00m [01;31m(VXINF[00m
						(VVINF fahren)[01;31m)[00m[01;36m)[00m[01;36m)[00m
					(VC fliegen)[01;31m)[00m [01;33mSIMPX)[00m
				(KON und)
				[01;36m(SIMPX[00m [01;31m(LKM[00m
					(LK braucht)
					(MF siebzig minuten)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX
			(VF ich)
			(LK weis)
			(MF nicht)
			(NF
				(SIMPX
					(C wie)
					(MF
						[01;36m(NX[00m
							(NX sie)
							(NX es)[01;36m)[00m
						(NX sich)
						(NX das))
					(VC vorgestellt haben))))
		(SIMPX aber ich wurde doch eher fur einen flug pladieren)))
Step:Single Word Phrase
{'family': ['LK', 'MF', 'VC', 'VC'], 'auto preterminal span': (43, 44), 'span': (43, 44), 'subtrees': ['VVINF'], 'parent': 'LKMVC', 'over_word': True, 'auto preterminals': ('VVINF',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VXINF', 'VC')}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich habe mir da einige zugverbindungen und fluge geben lassen)
		[01;31m(SIMPX[00m
			(SIMPX und der zug fahrt stundlich ab vier uhr sechsundfunfzig am morgen)
			[01;36m(KOORD[00m
				(KON und)[01;36m)[00m
			[01;31m(SIMPX[00m
				(VF er)
				(LK braucht)
				(MF
					[01;36m(MF[00m
						(NX viereinhalb stunden)
						(PX bis hannover)[01;36m)[00m
					[01;36m(NF[00m
						(PX
							(APPR von)
							(NX munchen)
							(APZR aus))[01;36m)[00m)[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(KOORD und)
			(VF das flugzeug)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK wurde)
					(MF stundlich ab sieben uhr bis achtzehn uhr)
					[01;36m(VXFIN[00m
						(VC
							(VVINF fahren))[01;36m)[00m
					(VC fliegen)[01;31m)[00m [01;33mSIMPX)[00m
				(KON und)
				[01;36m(SIMPX[00m [01;31m(LKM[00m
					(LK braucht)
					(MF siebzig minuten)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX
			(VF ich)
			(LK weis)
			(MF nicht)
			(NF
				(SIMPX
					(C wie)
					(MF
						[01;36m(NX[00m
							(NX sie)
							(NX es)[01;36m)[00m
						(NX sich)
						(NX das))
					(VC vorgestellt haben))))
		(SIMPX aber ich wurde doch eher fur einen flug pladieren)))
Step:Different label
{'family': ['LKMVC', 'KON', 'SIMPX'], 'auto preterminal span': (46, 49), 'span': (46, 49), 'subtrees': ['LK', 'MF'], 'parent': 'FKOORD', 'over_word': False, 'auto preterminals': ('VVFIN', 'CARD', 'NN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('LKM', 'SIMPX')}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich habe mir da einige zugverbindungen und fluge geben lassen)
		[01;31m(SIMPX[00m
			(SIMPX und der zug fahrt stundlich ab vier uhr sechsundfunfzig am morgen)
			[01;36m(KOORD[00m
				(KON und)[01;36m)[00m
			[01;31m(SIMPX[00m
				(VF er)
				(LK braucht)
				(MF
					[01;36m(MF[00m
						(NX viereinhalb stunden)
						(PX bis hannover)[01;36m)[00m
					[01;36m(NF[00m
						(PX
							(APPR von)
							(NX munchen)
							(APZR aus))[01;36m)[00m)[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(KOORD und)
			(VF das flugzeug)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK wurde)
					(MF stundlich ab sieben uhr bis achtzehn uhr)
					[01;36m(VXFIN[00m
						(VC
							(VVINF fahren))[01;36m)[00m
					(VC fliegen)[01;31m)[00m [01;33mSIMPX)[00m
				(KON und)
				(SIMPX braucht siebzig minuten)[01;31m)[00m[01;31m)[00m
		(SIMPX
			(VF ich)
			(LK weis)
			(MF nicht)
			(NF
				(SIMPX
					(C wie)
					(MF
						[01;36m(NX[00m
							(NX sie)
							(NX es)[01;36m)[00m
						(NX sich)
						(NX das))
					(VC vorgestellt haben))))
		(SIMPX aber ich wurde doch eher fur einen flug pladieren)))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['SIMPX', 'KOORD', 'SIMPX'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON',), 'right siblings': [(SIMPX (VF (NX (PPER er))) (LK (VXFIN (VVFIN braucht))) (MF (NX (ADJX (CARD viereinhalb)) (NN stunden)) (PX (APPR bis) (NX (NE hannover))) (PX (APPR von) (NX (NE munchen)) (APZR aus))))], 'left siblings': [(SIMPX (KOORD (KON und)) (VF (NX (ART der) (NN zug))) (LK (VXFIN (VVFIN fahrt))) (MF (ADJX (ADJX (ADJD stundlich)) (PX (PX (APPR ab) (NX (NX (ADJX (CARD vier)) (NN uhr)) (ADJX (CARD sechsundfunfzig)))) (PX (APPRART am) (NX (NN morgen)))))))], 'auto preterminal span': (22, 23), 'span': (22, 23), 'parent': 'SIMPX', 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich habe mir da einige zugverbindungen und fluge geben lassen)
		[01;31m(SIMPX[00m
			(SIMPX und der zug fahrt stundlich ab vier uhr sechsundfunfzig am morgen)
			(KOORD und)
			[01;31m(SIMPX[00m
				(VF er)
				(LK braucht)
				(MF
					[01;36m(MF[00m
						(NX viereinhalb stunden)
						(PX bis hannover)[01;36m)[00m
					[01;36m(NF[00m
						(PX
							(APPR von)
							(NX munchen)
							(APZR aus))[01;36m)[00m)[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(KOORD und)
			(VF das flugzeug)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK wurde)
					(MF stundlich ab sieben uhr bis achtzehn uhr)
					[01;36m(VXFIN[00m
						(VC
							(VVINF fahren))[01;36m)[00m
					(VC fliegen)[01;31m)[00m [01;33mSIMPX)[00m
				(KON und)
				(SIMPX braucht siebzig minuten)[01;31m)[00m[01;31m)[00m
		(SIMPX
			(VF ich)
			(LK weis)
			(MF nicht)
			(NF
				(SIMPX
					(C wie)
					(MF
						[01;36m(NX[00m
							(NX sie)
							(NX es)[01;36m)[00m
						(NX sich)
						(NX das))
					(VC vorgestellt haben))))
		(SIMPX aber ich wurde doch eher fur einen flug pladieren)))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['MF', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'NN', 'APPR', 'NE'), 'right siblings': [(PX (APPR von) (NX (NE munchen)) (APZR aus))], 'left siblings': [], 'auto preterminal span': (25, 29), 'span': (25, 29), 'parent': 'MF', 'label': 'MF', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich habe mir da einige zugverbindungen und fluge geben lassen)
		[01;31m(SIMPX[00m
			(SIMPX und der zug fahrt stundlich ab vier uhr sechsundfunfzig am morgen)
			(KOORD und)
			[01;31m(SIMPX[00m
				(VF er)
				(LK braucht)
				(MF
					(MF viereinhalb stunden bis hannover)
					[01;36m(NF[00m
						(PX
							(APPR von)
							(NX munchen)
							(APZR aus))[01;36m)[00m)[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(KOORD und)
			(VF das flugzeug)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK wurde)
					(MF stundlich ab sieben uhr bis achtzehn uhr)
					[01;36m(VXFIN[00m
						(VC
							(VVINF fahren))[01;36m)[00m
					(VC fliegen)[01;31m)[00m [01;33mSIMPX)[00m
				(KON und)
				(SIMPX braucht siebzig minuten)[01;31m)[00m[01;31m)[00m
		(SIMPX
			(VF ich)
			(LK weis)
			(MF nicht)
			(NF
				(SIMPX
					(C wie)
					(MF
						[01;36m(NX[00m
							(NX sie)
							(NX es)[01;36m)[00m
						(NX sich)
						(NX das))
					(VC vorgestellt haben))))
		(SIMPX aber ich wurde doch eher fur einen flug pladieren)))
Step:Unary
{'subtrees': ['PX'], 'family': ['MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'NE', 'APZR'), 'right siblings': [], 'left siblings': [(MF (NX (ADJX (CARD viereinhalb)) (NN stunden)) (PX (APPR bis) (NX (NE hannover))))], 'auto preterminal span': (29, 32), 'span': (29, 32), 'parent': 'MF', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich habe mir da einige zugverbindungen und fluge geben lassen)
		[01;31m(SIMPX[00m
			(SIMPX und der zug fahrt stundlich ab vier uhr sechsundfunfzig am morgen)
			(KOORD und)
			[01;31m(SIMPX[00m
				(VF er)
				(LK braucht)
				(MF viereinhalb stunden bis hannover von munchen aus)[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(KOORD und)
			(VF das flugzeug)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK wurde)
					(MF stundlich ab sieben uhr bis achtzehn uhr)
					[01;36m(VXFIN[00m
						(VC
							(VVINF fahren))[01;36m)[00m
					(VC fliegen)[01;31m)[00m [01;33mSIMPX)[00m
				(KON und)
				(SIMPX braucht siebzig minuten)[01;31m)[00m[01;31m)[00m
		(SIMPX
			(VF ich)
			(LK weis)
			(MF nicht)
			(NF
				(SIMPX
					(C wie)
					(MF
						[01;36m(NX[00m
							(NX sie)
							(NX es)[01;36m)[00m
						(NX sich)
						(NX das))
					(VC vorgestellt haben))))
		(SIMPX aber ich wurde doch eher fur einen flug pladieren)))
Step:Unary
{'subtrees': ['VC'], 'family': ['LK', 'MF', 'VXFIN', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVINF',), 'right siblings': [(VC (VXINF (VVINF fliegen)))], 'left siblings': [(LK (VXFIN (VAFIN wurde))), (MF (ADJX (ADJX (ADJD stundlich)) (PX (PX (APPR ab) (NX (ADJX (CARD sieben)) (NN uhr))) (PX (APPR bis) (NX (ADJX (CARD achtzehn)) (NN uhr))))))], 'auto preterminal span': (43, 44), 'span': (43, 44), 'parent': 'LKMVC', 'label': 'VXFIN', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich habe mir da einige zugverbindungen und fluge geben lassen)
		[01;31m(SIMPX[00m
			(SIMPX und der zug fahrt stundlich ab vier uhr sechsundfunfzig am morgen)
			(KOORD und)
			[01;31m(SIMPX[00m
				(VF er)
				(LK braucht)
				(MF viereinhalb stunden bis hannover von munchen aus)[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(KOORD und)
			(VF das flugzeug)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK wurde)
					(MF stundlich ab sieben uhr bis achtzehn uhr)
					(VXFIN fahren)
					(VC fliegen)[01;31m)[00m [01;33mSIMPX)[00m
				(KON und)
				(SIMPX braucht siebzig minuten)[01;31m)[00m[01;31m)[00m
		(SIMPX
			(VF ich)
			(LK weis)
			(MF nicht)
			(NF
				(SIMPX
					(C wie)
					(MF
						[01;36m(NX[00m
							(NX sie)
							(NX es)[01;36m)[00m
						(NX sich)
						(NX das))
					(VC vorgestellt haben))))
		(SIMPX aber ich wurde doch eher fur einen flug pladieren)))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['NX', 'NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'PPER'), 'right siblings': [(NX (PRF sich)), (NX (PDS das))], 'left siblings': [], 'auto preterminal span': (53, 55), 'span': (53, 55), 'parent': 'MF', 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich habe mir da einige zugverbindungen und fluge geben lassen)
		[01;31m(SIMPX[00m
			(SIMPX und der zug fahrt stundlich ab vier uhr sechsundfunfzig am morgen)
			(KOORD und)
			[01;31m(SIMPX[00m
				(VF er)
				(LK braucht)
				(MF viereinhalb stunden bis hannover von munchen aus)[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(KOORD und)
			(VF das flugzeug)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK wurde)
					(MF stundlich ab sieben uhr bis achtzehn uhr)
					(VXFIN fahren)
					(VC fliegen)[01;31m)[00m [01;33mSIMPX)[00m
				(KON und)
				(SIMPX braucht siebzig minuten)[01;31m)[00m[01;31m)[00m
		(SIMPX ich weis nicht wie sie es sich das vorgestellt haben)
		(SIMPX aber ich wurde doch eher fur einen flug pladieren)))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'KOORD', 'SIMPX'], 'family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VAFIN', 'PRF', 'ADV', 'PIAT', 'NN', 'KON', 'NN', 'VVINF', 'VVINF', 'KON', 'ART', 'NN', 'VVFIN', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'APPRART', 'NN', 'KON', 'PPER', 'VVFIN', 'CARD', 'NN', 'APPR', 'NE', 'APPR', 'NE', 'APZR', 'KON', 'ART', 'NN', 'VAFIN', 'ADJD', 'APPR', 'CARD', 'NN', 'APPR', 'CARD', 'NN', 'VVINF', 'VVINF', 'KON', 'VVFIN', 'CARD', 'NN', 'PPER', 'VVFIN', 'PTKNEG', 'KOUS', 'PPER', 'PPER', 'PRF', 'PDS', 'VVPP', 'VAFIN', 'KON', 'PPER', 'VAFIN', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'VVINF'), 'right siblings': ['SIMPX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 68), 'span': (11, 32), 'left siblings': ['DM', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich habe mir da einige zugverbindungen und fluge geben lassen)
		(SIMPX und der zug fahrt stundlich ab vier uhr sechsundfunfzig am morgen)
		(KOORD und)
		[01;31m(SIMPX[00m
			(VF er)
			(LK braucht)
			(MF viereinhalb stunden bis hannover von munchen aus)[01;31m)[00m
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(KOORD und)
			(VF das flugzeug)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK wurde)
					(MF stundlich ab sieben uhr bis achtzehn uhr)
					(VXFIN fahren)
					(VC fliegen)[01;31m)[00m [01;33mSIMPX)[00m
				(KON und)
				(SIMPX braucht siebzig minuten)[01;31m)[00m[01;31m)[00m
		(SIMPX ich weis nicht wie sie es sich das vorgestellt haben)
		(SIMPX aber ich wurde doch eher fur einen flug pladieren)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['DM', 'SIMPX', 'SIMPX', 'KOORD', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VAFIN', 'PRF', 'ADV', 'PIAT', 'NN', 'KON', 'NN', 'VVINF', 'VVINF', 'KON', 'ART', 'NN', 'VVFIN', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'APPRART', 'NN', 'KON', 'PPER', 'VVFIN', 'CARD', 'NN', 'APPR', 'NE', 'APPR', 'NE', 'APZR', 'KON', 'ART', 'NN', 'VAFIN', 'ADJD', 'APPR', 'CARD', 'NN', 'APPR', 'CARD', 'NN', 'VVINF', 'VVINF', 'KON', 'VVFIN', 'CARD', 'NN', 'PPER', 'VVFIN', 'PTKNEG', 'KOUS', 'PPER', 'PPER', 'PRF', 'PDS', 'VVPP', 'VAFIN', 'KON', 'PPER', 'VAFIN', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'VVINF'), 'right siblings': ['SIMPX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 68), 'span': (23, 32), 'left siblings': ['DM', 'SIMPX', 'SIMPX', 'KOORD'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich habe mir da einige zugverbindungen und fluge geben lassen)
		(SIMPX und der zug fahrt stundlich ab vier uhr sechsundfunfzig am morgen)
		(KOORD und)
		(VF er)
		(LK braucht)
		(MF viereinhalb stunden bis hannover von munchen aus)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(KOORD und)
			(VF das flugzeug)
			[01;31m(FKOORD[00m
				[01;31m(LKMVC[00m
					(LK wurde)
					(MF stundlich ab sieben uhr bis achtzehn uhr)
					(VXFIN fahren)
					(VC fliegen)[01;31m)[00m [01;33mSIMPX)[00m
				(KON und)
				(SIMPX braucht siebzig minuten)[01;31m)[00m[01;31m)[00m
		(SIMPX ich weis nicht wie sie es sich das vorgestellt haben)
		(SIMPX aber ich wurde doch eher fur einen flug pladieren)))
Step:UNSET remove
{'subtrees': ['KOORD', 'VF', 'FKOORD'], 'family': ['DM', 'SIMPX', 'SIMPX', 'KOORD', 'VF', 'LK', 'MF', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VAFIN', 'PRF', 'ADV', 'PIAT', 'NN', 'KON', 'NN', 'VVINF', 'VVINF', 'KON', 'ART', 'NN', 'VVFIN', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'APPRART', 'NN', 'KON', 'PPER', 'VVFIN', 'CARD', 'NN', 'APPR', 'NE', 'APPR', 'NE', 'APZR', 'KON', 'ART', 'NN', 'VAFIN', 'ADJD', 'APPR', 'CARD', 'NN', 'APPR', 'CARD', 'NN', 'VVINF', 'VVINF', 'KON', 'VVFIN', 'CARD', 'NN', 'PPER', 'VVFIN', 'PTKNEG', 'KOUS', 'PPER', 'PPER', 'PRF', 'PDS', 'VVPP', 'VAFIN', 'KON', 'PPER', 'VAFIN', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'VVINF'), 'right siblings': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 68), 'span': (32, 49), 'left siblings': ['DM', 'SIMPX', 'SIMPX', 'KOORD', 'VF', 'LK', 'MF'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich habe mir da einige zugverbindungen und fluge geben lassen)
		(SIMPX und der zug fahrt stundlich ab vier uhr sechsundfunfzig am morgen)
		(KOORD und)
		(VF er)
		(LK braucht)
		(MF viereinhalb stunden bis hannover von munchen aus)
		[01;33m(SIMPX[00m (KOORD und)
		(VF das flugzeug)
		[01;31m(FKOORD[00m
			[01;31m(LKMVC[00m
				(LK wurde)
				(MF stundlich ab sieben uhr bis achtzehn uhr)
				(VXFIN fahren)
				(VC fliegen)[01;31m)[00m [01;33mSIMPX)[00m
			(KON und)
			(SIMPX braucht siebzig minuten)[01;31m)[00m
		(SIMPX ich weis nicht wie sie es sich das vorgestellt haben)
		(SIMPX aber ich wurde doch eher fur einen flug pladieren)))
Step:Co-ordination
{'subtrees': ['LK', 'MF', 'VXFIN', 'VC'], 'family': ['LKMVC', 'KON', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'ADJD', 'APPR', 'CARD', 'NN', 'APPR', 'CARD', 'NN', 'VVINF', 'VVINF', 'KON', 'VVFIN', 'CARD', 'NN'), 'right siblings': ['KON', 'SIMPX'], 'parent': 'FKOORD', 'auto preterminal span': (35, 49), 'span': (35, 45), 'left siblings': [], 'label': 'LKMVC', 'classified_type': 'Co-ordination', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich habe mir da einige zugverbindungen und fluge geben lassen)
		(SIMPX und der zug fahrt stundlich ab vier uhr sechsundfunfzig am morgen)
		(KOORD und)
		(VF er)
		(LK braucht)
		(MF viereinhalb stunden bis hannover von munchen aus)
		[01;33m(SIMPX[00m (KOORD und)
		(VF das flugzeug)
		[01;31m(FKOORD[00m
			(LK wurde)
			(MF stundlich ab sieben uhr bis achtzehn uhr)
			(VXFIN fahren)
			(VC fliegen) [01;33mSIMPX)[00m
			(KON und)
			(SIMPX braucht siebzig minuten)[01;31m)[00m
		(SIMPX ich weis nicht wie sie es sich das vorgestellt haben)
		(SIMPX aber ich wurde doch eher fur einen flug pladieren)))
Step:Clause Attachment
{'subtrees': ['LK', 'MF', 'VXFIN', 'VC', 'KON', 'SIMPX'], 'family': ['DM', 'SIMPX', 'SIMPX', 'KOORD', 'VF', 'LK', 'MF', 'KOORD', 'VF', 'FKOORD', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VAFIN', 'PRF', 'ADV', 'PIAT', 'NN', 'KON', 'NN', 'VVINF', 'VVINF', 'KON', 'ART', 'NN', 'VVFIN', 'ADJD', 'APPR', 'CARD', 'NN', 'CARD', 'APPRART', 'NN', 'KON', 'PPER', 'VVFIN', 'CARD', 'NN', 'APPR', 'NE', 'APPR', 'NE', 'APZR', 'KON', 'ART', 'NN', 'VAFIN', 'ADJD', 'APPR', 'CARD', 'NN', 'APPR', 'CARD', 'NN', 'VVINF', 'VVINF', 'KON', 'VVFIN', 'CARD', 'NN', 'PPER', 'VVFIN', 'PTKNEG', 'KOUS', 'PPER', 'PPER', 'PRF', 'PDS', 'VVPP', 'VAFIN', 'KON', 'PPER', 'VAFIN', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'VVINF'), 'right siblings': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 68), 'span': (35, 49), 'left siblings': ['DM', 'SIMPX', 'SIMPX', 'KOORD', 'VF', 'LK', 'MF', 'KOORD', 'VF'], 'label': 'FKOORD', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich habe mir da einige zugverbindungen und fluge geben lassen)
		(SIMPX und der zug fahrt stundlich ab vier uhr sechsundfunfzig am morgen)
		(KOORD und)
		(VF er)
		(LK braucht)
		(MF viereinhalb stunden bis hannover von munchen aus)
		[01;36m(SIMPX[00m
			(KOORD und)
			(VF das flugzeug)
			(LK wurde)
			(MF stundlich ab sieben uhr bis achtzehn uhr)
			(VXFIN fahren)
			(VC fliegen)[01;36m)[00m
		(KON und)
		(SIMPX braucht siebzig minuten)
		(SIMPX ich weis nicht wie sie es sich das vorgestellt haben)
		(SIMPX aber ich wurde doch eher fur einen flug pladieren)))
Step:UNSET add
{'subtrees': ['KOORD', 'VF', 'LK', 'MF', 'VXFIN', 'VC'], 'family': ['DM', 'SIMPX', 'SIMPX', 'KOORD', 'VF', 'LK', 'MF', 'SIMPX', 'KON', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'ART', 'NN', 'VAFIN', 'ADJD', 'APPR', 'CARD', 'NN', 'APPR', 'CARD', 'NN', 'VVINF', 'VVINF'), 'right siblings': [(KON und), (SIMPX (LK (VXFIN (VVFIN braucht))) (MF (NX (ADJX (CARD siebzig)) (NN minuten)))), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN weis))) (MF (ADVX (PTKNEG nicht))) (NF (SIMPX (C (KOUS wie)) (MF (NX (NX (PPER sie)) (NX (PPER es))) (NX (PRF sich)) (NX (PDS das))) (VC (VXINF (VVPP vorgestellt)) (VXFIN (VAFIN haben)))))), (SIMPX (KOORD (KON aber)) (VF (NX (PPER ich))) (LK (VXFIN (VAFIN wurde))) (MF (ADVX (ADV doch)) (ADVX (ADV eher)) (PX (APPR fur) (NX (ART einen) (NN flug)))) (VC (VXINF (VVINF pladieren))))], 'left siblings': [(DM (PTKANT ja)), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VAFIN habe))) (MF (NX (PRF mir)) (ADVX (ADV da)) (NX (PIAT einige) (NX (NX (NN zugverbindungen)) (KON und) (NX (NN fluge))))) (VC (VXINF (VVINF geben)) (VXINF (VVINF lassen)))), (SIMPX (KOORD (KON und)) (VF (NX (ART der) (NN zug))) (LK (VXFIN (VVFIN fahrt))) (MF (ADJX (ADJX (ADJD stundlich)) (PX (PX (APPR ab) (NX (NX (ADJX (CARD vier)) (NN uhr)) (ADJX (CARD sechsundfunfzig)))) (PX (APPRART am) (NX (NN morgen))))))), (KOORD (KON und)), (VF (NX (PPER er))), (LK (VXFIN (VVFIN braucht))), (MF (MF (NX (ADJX (CARD viereinhalb)) (NN stunden)) (PX (APPR bis) (NX (NE hannover)))) (NF (PX (APPR von) (NX (NE munchen)) (APZR aus))))], 'auto preterminal span': (32, 45), 'span': (32, 45), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP ja ich habe mir da einige zugverbindungen und fluge geben lassen und der zug fahrt stundlich ab vier uhr sechsundfunfzig am morgen und er braucht viereinhalb stunden bis hannover von munchen aus und das flugzeug wurde stundlich ab sieben uhr bis achtzehn uhr fahren fliegen und braucht siebzig minuten ich weis nicht wie sie es sich das vorgestellt haben aber ich wurde doch eher fur einen flug pladieren)

Sentence 561:
5 Initial errors
0 on fringe, 4 iterations
2 Error:Different label
1 Error:Single Word Phrase
1 Error:UNSET add
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM also)
		(SIMPX
			(LV dieses letzte hotel)
			(VF das)
			(LK hat)
			(MF
				(NX mich)
				(ADVX auch)
				[01;36m(PX[00m [01;31m(ADJX[00m
					(PTKA am)
					[01;36m(NX[00m
						(ADJD meisten)[01;36m)[00m[01;31m)[00m[01;36m)[00m)
			(VC interessiert))
		(SIMPX
			[01;36m(SIMPX[00m
				[01;36m(VF[00m
					(KOORD und)
					(VF da wir sowieso auf firmenkosten reisen werden)[01;36m)[00m[01;36m)[00m
			(LK denke)
			(MF ich schon)
			(NF das wir uns dort ein einzelzimmer auch nehmen konnen))))
Step:Different label
{'family': ['NX', 'ADVX', 'PX'], 'auto preterminal span': (9, 11), 'span': (9, 11), 'subtrees': ['PTKA', 'ADJD'], 'parent': 'MF', 'over_word': False, 'auto preterminals': ('PTKA', 'ADJD'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('ADJX', 'PX')}
(TOP
	(TURN
		(DM ja)
		(DM also)
		(SIMPX
			(LV dieses letzte hotel)
			(VF das)
			(LK hat)
			(MF
				(NX mich)
				(ADVX auch)
				(PX
					(PTKA am)
					[01;36m(NX[00m
						(ADJD meisten)[01;36m)[00m))
			(VC interessiert))
		(SIMPX
			[01;36m(SIMPX[00m
				[01;36m(VF[00m
					(KOORD und)
					(VF da wir sowieso auf firmenkosten reisen werden)[01;36m)[00m[01;36m)[00m
			(LK denke)
			(MF ich schon)
			(NF das wir uns dort ein einzelzimmer auch nehmen konnen))))
Step:Single Word Phrase
{'subtrees': ['ADJD'], 'family': ['PTKA', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADJD',), 'right siblings': [], 'left siblings': [(PTKA am)], 'auto preterminal span': (10, 11), 'span': (10, 11), 'parent': 'PX', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM also)
		(SIMPX dieses letzte hotel das hat mich auch am meisten interessiert)
		(SIMPX
			[01;36m(SIMPX[00m
				[01;36m(VF[00m
					(KOORD und)
					(VF da wir sowieso auf firmenkosten reisen werden)[01;36m)[00m[01;36m)[00m
			(LK denke)
			(MF ich schon)
			(NF das wir uns dort ein einzelzimmer auch nehmen konnen))))
Step:UNSET add
{'subtrees': ['KOORD', 'VF'], 'family': ['VF', 'LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'KOUS', 'PPER', 'ADV', 'APPR', 'NN', 'VVINF', 'VAFIN'), 'right siblings': [(LK (VXFIN (VVFIN denke))), (MF (NX (PPER ich)) (ADVX (ADV schon))), (NF (SIMPX (C (KOUS das)) (MF (NX (PPER wir)) (NX (PRF uns)) (ADVX (ADV dort)) (NX (ART ein) (NN einzelzimmer)) (ADVX (ADV auch))) (VC (VXINF (VVINF nehmen)) (VXFIN (VMFIN konnen)))))], 'left siblings': [], 'auto preterminal span': (12, 20), 'span': (12, 20), 'parent': 'SIMPX', 'label': 'VF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM also)
		(SIMPX dieses letzte hotel das hat mich auch am meisten interessiert)
		(SIMPX
			[01;36m(SIMPX[00m
				(VF
					(KOORD und)
					(VF da wir sowieso auf firmenkosten reisen werden))[01;36m)[00m
			(LK denke)
			(MF ich schon)
			(NF das wir uns dort ein einzelzimmer auch nehmen konnen))))
Step:Unary
{'subtrees': ['VF'], 'family': ['SIMPX', 'LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'KOUS', 'PPER', 'ADV', 'APPR', 'NN', 'VVINF', 'VAFIN'), 'right siblings': [(LK (VXFIN (VVFIN denke))), (MF (NX (PPER ich)) (ADVX (ADV schon))), (NF (SIMPX (C (KOUS das)) (MF (NX (PPER wir)) (NX (PRF uns)) (ADVX (ADV dort)) (NX (ART ein) (NN einzelzimmer)) (ADVX (ADV auch))) (VC (VXINF (VVINF nehmen)) (VXFIN (VMFIN konnen)))))], 'left siblings': [], 'auto preterminal span': (12, 20), 'span': (12, 20), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'add'}
(TOP ja also dieses letzte hotel das hat mich auch am meisten interessiert und da wir sowieso auf firmenkosten reisen werden denke ich schon das wir uns dort ein einzelzimmer auch nehmen konnen)

Sentence 562:
0 Initial errors
0 on fringe, 0 iterations

Sentence 563:
3 Initial errors
0 on fringe, 2 iterations
2 Error:PP Attachment
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM guten tag)
		(DM krings hier)
		(SIMPX ich habe eine frage)
		(SIMPX
			(VF vom vierundzwanzigsten bis zum funfundzwanzigsten juni)
			(LK bin)
			(MF
				(NX ich)
				(PX [01;33m(PX[00m
					(APPR auf)
					[01;31m(NX[00m
						(NX einem kongres) [01;33mPX)[00m
						(PX in hannover)[01;31m)[00m)))
		(SIMPX
			(KOORD und)
			(VF ich)
			(LK wurde)
			(MF
				(ADVX gern)
				[01;31m(NX[00m
					(ADVX einen tag vorher)
					(PX am dreiundzwanzigsten)[01;31m)[00m)
			(VC anreisen))))
Step:PP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'PX', 'PX'], 'mover info': [('PX', (19, 21))], 'old_family': ['NX', 'PX'], 'start left siblings': ['NX'], 'auto preterminals': ('PPER', 'APPR', 'ART', 'NN', 'APPR', 'NE'), 'start right siblings': [], 'end left siblings': ['NX', 'PX'], 'auto preterminal span': (15, 21), 'adding node already present': False, 'movers': ['PX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'PX'}
(TOP
	(TURN
		(DM guten tag)
		(DM krings hier)
		(SIMPX ich habe eine frage)
		(SIMPX vom vierundzwanzigsten bis zum funfundzwanzigsten juni bin ich auf einem kongres in hannover)
		(SIMPX
			(KOORD und)
			(VF ich)
			(LK wurde)
			(MF
				(ADVX gern)
				[01;31m(NX[00m
					(ADVX einen tag vorher)
					(PX am dreiundzwanzigsten)[01;31m)[00m)
			(VC anreisen))))
Step:PP Attachment
{'subtrees': ['ADVX', 'PX'], 'family': ['ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ART', 'NN', 'ADV', 'APPRART', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (24, 30), 'span': (25, 30), 'left siblings': ['ADVX'], 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP guten tag krings hier ich habe eine frage vom vierundzwanzigsten bis zum funfundzwanzigsten juni bin ich auf einem kongres in hannover und ich wurde gern einen tag vorher am dreiundzwanzigsten anreisen)

Sentence 564:
0 Initial errors
0 on fringe, 0 iterations

Sentence 565:
0 Initial errors
0 on fringe, 0 iterations

Sentence 566:
0 Initial errors
0 on fringe, 0 iterations

Sentence 567:
0 Initial errors
0 on fringe, 0 iterations

Sentence 568:
5 Initial errors
0 on fringe, 4 iterations
2 Error:Single Word Phrase
1 Error:Modifier Attachment
1 Error:PP Attachment
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM gut)
		(SIMPX dann ware zu empfehlen um acht uhr dreisig)
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF sie)
			(LK kamen)
			[01;36m(ADVX[00m [01;31m(VC[00m
				(PTKVZ an)[01;31m)[00m[01;36m)[00m
			[01;31m(NF[00m
				(PX in hannover)
				[01;33m(PX[00m (PX um ein uhr)[01;31m)[00m[01;31m)[00m
		(ADVX etwa))) [01;33mPX)[00m
Step:Single Word Phrase
{'family': ['KOORD', 'VF', 'LK', 'ADVX', 'NF'], 'auto preterminal span': (12, 13), 'span': (12, 13), 'subtrees': ['PTKVZ'], 'parent': 'SIMPX', 'over_word': True, 'auto preterminals': ('PTKVZ',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VC', 'ADVX')}
(TOP
	(TURN
		(DM gut)
		(SIMPX dann ware zu empfehlen um acht uhr dreisig)
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF sie)
			(LK kamen)
			(ADVX an)
			[01;31m(NF[00m
				(PX in hannover)
				[01;33m(PX[00m (PX um ein uhr)[01;31m)[00m[01;31m)[00m
		(ADVX etwa))) [01;33mPX)[00m
Step:Modifier Attachment
{'subtrees': ['KOORD', 'VF', 'LK', 'ADVX', 'NF'], 'family': ['DM', 'SIMPX', 'SIMPX', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'VAFIN', 'PTKZU', 'VVINF', 'APPR', 'CARD', 'NN', 'CARD', 'KON', 'PPER', 'VVFIN', 'PTKVZ', 'APPR', 'NE', 'APPR', 'CARD', 'NN', 'ADV'), 'right siblings': ['ADVX'], 'parent': 'TURN', 'auto preterminal span': (0, 19), 'span': (9, 18), 'left siblings': ['DM', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM gut)
		(SIMPX dann ware zu empfehlen um acht uhr dreisig)
		(KOORD und)
		(VF sie)
		(LK kamen)
		(ADVX an)
		[01;31m(NF[00m
			(PX in hannover)
			[01;33m(PX[00m (PX um ein uhr)[01;31m)[00m
		(ADVX etwa))) [01;33mPX)[00m
Step:PP Attachment
{'subtrees': ['PX', 'PX'], 'family': ['DM', 'SIMPX', 'KOORD', 'VF', 'LK', 'ADVX', 'NF', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'VAFIN', 'PTKZU', 'VVINF', 'APPR', 'CARD', 'NN', 'CARD', 'KON', 'PPER', 'VVFIN', 'PTKVZ', 'APPR', 'NE', 'APPR', 'CARD', 'NN', 'ADV'), 'right siblings': ['ADVX'], 'parent': 'TURN', 'auto preterminal span': (0, 19), 'span': (13, 18), 'left siblings': ['DM', 'SIMPX', 'KOORD', 'VF', 'LK', 'ADVX'], 'label': 'NF', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM gut)
		(SIMPX dann ware zu empfehlen um acht uhr dreisig)
		(KOORD und)
		(VF sie)
		(LK kamen)
		(ADVX an)
		(PX in hannover)
		[01;36m(PX[00m
			(PX um ein uhr)
			(ADVX etwa)[01;36m)[00m))
Step:Modifier Attachment
{'subtrees': ['PX', 'ADVX'], 'family': ['DM', 'SIMPX', 'KOORD', 'VF', 'LK', 'ADVX', 'PX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'CARD', 'NN', 'ADV'), 'right siblings': [], 'left siblings': [(DM (ITJ gut)), (SIMPX (VF (ADVX (ADV dann))) (LK (VXFIN (VAFIN ware))) (VC (VXINF (PTKZU zu) (VVINF empfehlen))) (NF (PX (APPR um) (NX (NX (ADJX (CARD acht)) (NN uhr)) (ADJX (CARD dreisig)))))), (KOORD (KON und)), (VF (NX (PPER sie))), (LK (VXFIN (VVFIN kamen))), (ADVX (PTKVZ an)), (PX (APPR in) (NX (NE hannover)))], 'auto preterminal span': (15, 19), 'span': (15, 19), 'parent': 'TURN', 'label': 'PX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP gut dann ware zu empfehlen um acht uhr dreisig und sie kamen an in hannover um ein uhr etwa)

Sentence 569:
0 Initial errors
0 on fringe, 0 iterations

Sentence 570:
3 Initial errors
0 on fringe, 2 iterations
2 Error:Modifier Attachment
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX da gibt es das hotel am thielenplatz)
		[01;31m(SIMPX[00m
			(VF das)
			(LK ist)
			(MF ganz in der nahe vom bahnhof)[01;31m)[00m
		(SIMPX das ist wohl am angenehmsten)
		(SIMPX
			(VF das)
			(VXFIN ist)
			(LK liegt)
			[01;36m(PX[00m
				(MF
					(ADVX so)
					[01;31m(PX[00m
						(APPR zwischen)
						(NX funfundachtzig und einhundert dreisig mark)[01;31m)[00m)[01;36m)[00m)))
Step:Modifier Attachment
{'new_parent': 'PX', 'new_family': ['ADVX', 'APPR', 'NX'], 'mover info': [('ADVX', (23, 24))], 'old_family': ['ADVX', 'PX'], 'start left siblings': [], 'auto preterminals': ('ADV', 'APPR', 'CARD', 'KON', 'CARD', 'CARD', 'NN'), 'start right siblings': ['PX'], 'end left siblings': [], 'auto preterminal span': (23, 30), 'movers': ['ADVX'], 'old_parent': 'MF', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['APPR', 'NX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SIMPX da gibt es das hotel am thielenplatz)
		[01;31m(SIMPX[00m
			(VF das)
			(LK ist)
			(MF ganz in der nahe vom bahnhof)[01;31m)[00m
		(SIMPX das ist wohl am angenehmsten)
		(SIMPX das ist liegt so zwischen funfundachtzig und einhundert dreisig mark)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'ART', 'NN', 'APPRART', 'NE', 'PDS', 'VAFIN', 'ADV', 'APPR', 'ART', 'NN', 'APPRART', 'NN', 'PDS', 'VAFIN', 'ADV', 'PTKA', 'ADJD', 'PDS', 'VAFIN', 'VVFIN', 'ADV', 'APPR', 'CARD', 'KON', 'CARD', 'CARD', 'NN'), 'right siblings': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 30), 'span': (7, 15), 'left siblings': ['SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP da gibt es das hotel am thielenplatz das ist ganz in der nahe vom bahnhof das ist wohl am angenehmsten das ist liegt so zwischen funfundachtzig und einhundert dreisig mark)

Sentence 571:
0 Initial errors
0 on fringe, 0 iterations

Sentence 572:
12 Initial errors
0 on fringe, 9 iterations
2 Error:NP Internal Structure
2 Error:PP Attachment
2 Error:NP Attachment
1 Error:UNSET add
1 Error:Unary
1 Error:PP Attachment
1 Error:Co-ordination
1 Error:UNSET add
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM guten tag)
		(SIMPX
			(VF hier)
			(LK ist)
			[01;31m(MF[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						[01;36m(NX[00m
							(NE gero)[01;36m)[00m
						[01;36m(NX[00m
							(NE muller)[01;36m)[00m[01;31m)[00m
					(PX aus koln)[01;31m)[00m[01;31m)[00m)
		(SIMPX
			(VF ich)
			(FKOORD
				[01;31m(LKM[00m
					(LK plane)
					[01;31m(MF[00m
						[01;36m(MF[00m
							(NX
								(NX eine geschaftsreise)
								(PX nach hannover))[01;36m)[00m
						[01;33m(SIMPX[00m (NX anfang juli)[01;31m)[00m[01;31m)[00m
				(KON und)
				[01;31m(LKMVCN[00m
					[01;36m(VXFIN[00m
						[01;36m(LK[00m
							(LK wurde)
							(MF sie)
							(VC bitten)[01;36m)[00m[01;36m)[00m
					(NF mir dort ein entsprechendes hotel und ein verkehrsmittel zu buchen)[01;31m)[00m)))) [01;33mSIMPX)[00m
Step:NP Internal Structure
{'new_parent': 'NX', 'new_family': ['NE', 'NX', 'PX'], 'mover info': [('NE', (5, 6))], 'old_family': ['NE', 'NE'], 'start left siblings': [], 'auto preterminals': ('NE', 'NE', 'APPR', 'NE'), 'start right siblings': ['NE'], 'end left siblings': [], 'auto preterminal span': (5, 9), 'movers': ['NE'], 'old_parent': 'NX', 'POS confusion': ('NE', 'NE'), 'end right siblings': ['NX', 'PX'], 'classified_type': 'NP Internal Structure', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(DM guten tag)
		(SIMPX
			(VF hier)
			(LK ist)
			[01;31m(MF[00m
				[01;31m(NX[00m
					[01;36m(NX[00m
						(NE gero)[01;36m)[00m
					(NX muller)
					(PX aus koln)[01;31m)[00m[01;31m)[00m)
		(SIMPX
			(VF ich)
			(FKOORD
				[01;31m(LKM[00m
					(LK plane)
					[01;31m(MF[00m
						[01;36m(MF[00m
							(NX
								(NX eine geschaftsreise)
								(PX nach hannover))[01;36m)[00m
						[01;33m(SIMPX[00m (NX anfang juli)[01;31m)[00m[01;31m)[00m
				(KON und)
				[01;31m(LKMVCN[00m
					[01;36m(VXFIN[00m
						[01;36m(LK[00m
							(LK wurde)
							(MF sie)
							(VC bitten)[01;36m)[00m[01;36m)[00m
					(NF mir dort ein entsprechendes hotel und ein verkehrsmittel zu buchen)[01;31m)[00m)))) [01;33mSIMPX)[00m
Step:PP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'NX', 'PX'], 'mover info': [('NX', (6, 7)), ('PX', (7, 9))], 'old_family': ['NE', 'NX', 'PX'], 'start left siblings': ['NE'], 'auto preterminals': ('NE', 'NE', 'APPR', 'NE'), 'start right siblings': [], 'end left siblings': ['NX'], 'auto preterminal span': (5, 9), 'movers': ['NX', 'PX'], 'old_parent': 'NX', 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(DM guten tag)
		(SIMPX
			(VF hier)
			(LK ist)
			[01;31m(MF[00m
				(NX gero)
				(NX muller)
				(PX aus koln)[01;31m)[00m)
		(SIMPX
			(VF ich)
			(FKOORD
				[01;31m(LKM[00m
					(LK plane)
					[01;31m(MF[00m
						[01;36m(MF[00m
							(NX
								(NX eine geschaftsreise)
								(PX nach hannover))[01;36m)[00m
						[01;33m(SIMPX[00m (NX anfang juli)[01;31m)[00m[01;31m)[00m
				(KON und)
				[01;31m(LKMVCN[00m
					[01;36m(VXFIN[00m
						[01;36m(LK[00m
							(LK wurde)
							(MF sie)
							(VC bitten)[01;36m)[00m[01;36m)[00m
					(NF mir dort ein entsprechendes hotel und ein verkehrsmittel zu buchen)[01;31m)[00m)))) [01;33mSIMPX)[00m
Step:NP Attachment
{'new_parent': 'LKM', 'new_family': ['LK', 'MF', 'NX'], 'mover info': [('NX', (15, 17))], 'old_family': ['NX', 'NX'], 'start left siblings': ['NX'], 'auto preterminals': ('VVFIN', 'ART', 'NN', 'APPR', 'NE', 'NN', 'NN'), 'start right siblings': [], 'end left siblings': ['LK', 'MF'], 'auto preterminal span': (10, 17), 'movers': ['NX'], 'old_parent': 'MF', 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(DM guten tag)
		(SIMPX
			(VF hier)
			(LK ist)
			[01;31m(MF[00m
				(NX gero)
				(NX muller)
				(PX aus koln)[01;31m)[00m)
		(SIMPX
			(VF ich)
			(FKOORD
				[01;31m(LKM[00m
					(LK plane)
					(MF eine geschaftsreise nach hannover)
					[01;33m(SIMPX[00m (NX anfang juli)[01;31m)[00m
				(KON und)
				[01;31m(LKMVCN[00m
					[01;36m(VXFIN[00m
						[01;36m(LK[00m
							(LK wurde)
							(MF sie)
							(VC bitten)[01;36m)[00m[01;36m)[00m
					(NF mir dort ein entsprechendes hotel und ein verkehrsmittel zu buchen)[01;31m)[00m)))) [01;33mSIMPX)[00m
Step:UNSET add
{'subtrees': ['LK', 'MF', 'VC'], 'family': ['LK', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'PPER', 'VVINF'), 'right siblings': [(NF (SIMPX (MF (NX (PPER mir)) (ADVX (ADV dort)) (NX (NX (ART ein) (ADJX (ADJA entsprechendes)) (NN hotel)) (KON und) (NX (ART ein) (NN verkehrsmittel)))) (VC (VXINF (PTKZU zu) (VVINF buchen)))))], 'left siblings': [], 'auto preterminal span': (18, 21), 'span': (18, 21), 'parent': 'LKMVCN', 'label': 'LK', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM guten tag)
		(SIMPX
			(VF hier)
			(LK ist)
			[01;31m(MF[00m
				(NX gero)
				(NX muller)
				(PX aus koln)[01;31m)[00m)
		(SIMPX
			(VF ich)
			(FKOORD
				[01;31m(LKM[00m
					(LK plane)
					(MF eine geschaftsreise nach hannover)
					[01;33m(SIMPX[00m (NX anfang juli)[01;31m)[00m
				(KON und)
				[01;31m(LKMVCN[00m
					[01;36m(VXFIN[00m
						(LK
							(LK wurde)
							(MF sie)
							(VC bitten))[01;36m)[00m
					(NF mir dort ein entsprechendes hotel und ein verkehrsmittel zu buchen)[01;31m)[00m)))) [01;33mSIMPX)[00m
Step:Unary
{'subtrees': ['LK'], 'family': ['VXFIN', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'PPER', 'VVINF'), 'right siblings': [(NF (SIMPX (MF (NX (PPER mir)) (ADVX (ADV dort)) (NX (NX (ART ein) (ADJX (ADJA entsprechendes)) (NN hotel)) (KON und) (NX (ART ein) (NN verkehrsmittel)))) (VC (VXINF (PTKZU zu) (VVINF buchen)))))], 'left siblings': [], 'auto preterminal span': (18, 21), 'span': (18, 21), 'parent': 'LKMVCN', 'label': 'VXFIN', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM guten tag)
		(SIMPX
			(VF hier)
			(LK ist)
			[01;31m(MF[00m
				(NX gero)
				(NX muller)
				(PX aus koln)[01;31m)[00m)
		(SIMPX
			(VF ich)
			(FKOORD
				[01;31m(LKM[00m
					(LK plane)
					(MF eine geschaftsreise nach hannover)
					[01;33m(SIMPX[00m (NX anfang juli)[01;31m)[00m
				(KON und)
				[01;31m(LKMVCN[00m
					(VXFIN wurde sie bitten)
					(NF mir dort ein entsprechendes hotel und ein verkehrsmittel zu buchen)[01;31m)[00m)))) [01;33mSIMPX)[00m
Step:PP Attachment
{'subtrees': ['NX', 'NX', 'PX'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'NE', 'NE', 'APPR', 'NE'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (3, 9), 'span': (5, 9), 'left siblings': ['VF', 'LK'], 'label': 'MF', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM guten tag)
		(SIMPX hier ist gero muller aus koln)
		(SIMPX
			(VF ich)
			(FKOORD
				[01;31m(LKM[00m
					(LK plane)
					(MF eine geschaftsreise nach hannover)
					[01;33m(SIMPX[00m (NX anfang juli)[01;31m)[00m
				(KON und)
				[01;31m(LKMVCN[00m
					(VXFIN wurde sie bitten)
					(NF mir dort ein entsprechendes hotel und ein verkehrsmittel zu buchen)[01;31m)[00m)))) [01;33mSIMPX)[00m
Step:Co-ordination
{'subtrees': ['LK', 'MF', 'NX'], 'family': ['LKM', 'KON', 'LKMVCN'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'ART', 'NN', 'APPR', 'NE', 'NN', 'NN', 'KON', 'VAFIN', 'PPER', 'VVINF', 'PPER', 'ADV', 'ART', 'ADJA', 'NN', 'KON', 'ART', 'NN', 'PTKZU', 'VVINF'), 'right siblings': ['KON', 'LKMVCN'], 'parent': 'FKOORD', 'auto preterminal span': (10, 31), 'span': (10, 17), 'left siblings': [], 'label': 'LKM', 'classified_type': 'Co-ordination', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM guten tag)
		(SIMPX hier ist gero muller aus koln)
		(SIMPX
			(VF ich)
			(FKOORD
				(LK plane)
				(MF eine geschaftsreise nach hannover)
				[01;36m(SIMPX[00m
					(NX anfang juli)
					(KON und)
					[01;31m(LKMVCN[00m
						(VXFIN wurde sie bitten)
						(NF mir dort ein entsprechendes hotel und ein verkehrsmittel zu buchen)[01;31m)[00m[01;36m)[00m))))
Step:UNSET add
{'subtrees': ['NX', 'KON', 'LKMVCN'], 'family': ['LK', 'MF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'NN', 'KON', 'VAFIN', 'PPER', 'VVINF', 'PPER', 'ADV', 'ART', 'ADJA', 'NN', 'KON', 'ART', 'NN', 'PTKZU', 'VVINF'), 'right siblings': [], 'left siblings': [(LK (VXFIN (VVFIN plane))), (MF (NX (NX (ART eine) (NN geschaftsreise)) (PX (APPR nach) (NX (NE hannover)))))], 'auto preterminal span': (15, 31), 'span': (15, 31), 'parent': 'FKOORD', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM guten tag)
		(SIMPX hier ist gero muller aus koln)
		(SIMPX
			(VF ich)
			(FKOORD
				(LK plane)
				(MF eine geschaftsreise nach hannover)
				(SIMPX
					(NX anfang juli)
					(KON und)
					[01;31m(LKMVCN[00m
						(VXFIN wurde sie bitten)
						(NF mir dort ein entsprechendes hotel und ein verkehrsmittel zu buchen)[01;31m)[00m)))))
Step:UNSET remove
{'subtrees': ['VXFIN', 'NF'], 'family': ['NX', 'KON', 'LKMVCN'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'NN', 'KON', 'VAFIN', 'PPER', 'VVINF', 'PPER', 'ADV', 'ART', 'ADJA', 'NN', 'KON', 'ART', 'NN', 'PTKZU', 'VVINF'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (15, 31), 'span': (18, 31), 'left siblings': ['NX', 'KON'], 'label': 'LKMVCN', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ja guten tag hier ist gero muller aus koln ich plane eine geschaftsreise nach hannover anfang juli und wurde sie bitten mir dort ein entsprechendes hotel und ein verkehrsmittel zu buchen)

Sentence 573:
9 Initial errors
0 on fringe, 5 iterations
2 Error:Single Word Phrase
2 Error:Different label
2 Error:UNSET move
2 Error:UNSET move
1 Error:UNSET add
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF ich)
			(LK habe)
			[01;31m(MF[00m
				[01;36m(MF[00m
					(NX
						(PRF mich)) [01;33mSIMPX)[00m[01;36m)[00m
				[01;36m(DM[00m [01;31m(ADVX[00m
					(ADV ja)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX ich habe mich da auch schon erkundigt)
		(SIMPX
			(LV
				(NX
					(NX der zug)
					[01;36m(ADVX[00m [01;31m(PX[00m
						(ADVX hier)
						(PX in bonn)[01;31m)[00m[01;36m)[00m))
			[01;36m(SIMPX[00m
				(VF der)
				(LK fahrt)
				(MF um acht uhr neununddreisig)
				(VC ab)[01;36m)[00m)
		(SIMPX und das habe ich mir schon zurechtgelegt)
		(SIMPX den wurde ich eigentlich ganz gerne nehmen)
		(SIMPX konnten sie mir da was reservieren)))
Step:Single Word Phrase
{'family': ['NX', 'DM'], 'auto preterminal span': (4, 5), 'span': (4, 5), 'subtrees': ['ADV'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'DM')}
(TOP
	(TURN
		(DM ja)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF ich)
			(LK habe)
			[01;31m(MF[00m
				[01;36m(MF[00m
					(NX
						(PRF mich)) [01;33mSIMPX)[00m[01;36m)[00m
				(DM ja)[01;31m)[00m[01;31m)[00m
		(SIMPX ich habe mich da auch schon erkundigt)
		(SIMPX
			(LV
				(NX
					(NX der zug)
					[01;36m(ADVX[00m [01;31m(PX[00m
						(ADVX hier)
						(PX in bonn)[01;31m)[00m[01;36m)[00m))
			[01;36m(SIMPX[00m
				(VF der)
				(LK fahrt)
				(MF um acht uhr neununddreisig)
				(VC ab)[01;36m)[00m)
		(SIMPX und das habe ich mir schon zurechtgelegt)
		(SIMPX den wurde ich eigentlich ganz gerne nehmen)
		(SIMPX konnten sie mir da was reservieren)))
Step:Different label
{'family': ['NX', 'ADVX'], 'auto preterminal span': (14, 17), 'span': (14, 17), 'subtrees': ['ADVX', 'PX'], 'parent': 'NX', 'over_word': False, 'auto preterminals': ('ADV', 'APPR', 'NE'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('PX', 'ADVX')}
(TOP
	(TURN
		(DM ja)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF ich)
			(LK habe)
			[01;31m(MF[00m
				[01;36m(MF[00m
					(NX
						(PRF mich)) [01;33mSIMPX)[00m[01;36m)[00m
				(DM ja)[01;31m)[00m[01;31m)[00m
		(SIMPX ich habe mich da auch schon erkundigt)
		(SIMPX
			(LV der zug hier in bonn)
			[01;36m(SIMPX[00m
				(VF der)
				(LK fahrt)
				(MF um acht uhr neununddreisig)
				(VC ab)[01;36m)[00m)
		(SIMPX und das habe ich mir schon zurechtgelegt)
		(SIMPX den wurde ich eigentlich ganz gerne nehmen)
		(SIMPX konnten sie mir da was reservieren)))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'DM'], 'mover info': [('DM', (4, 5))], 'old_family': ['NX', 'DM'], 'start left siblings': ['NX'], 'auto preterminals': ('PPER', 'VAFIN', 'PRF', 'ADV'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (1, 5), 'movers': ['DM'], 'old_parent': 'MF', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(VF ich)
				(LK habe)
				(MF mich)[01;36m)[00m
			(DM ja)[01;31m)[00m
		(SIMPX ich habe mich da auch schon erkundigt)
		(SIMPX
			(LV der zug hier in bonn)
			[01;36m(SIMPX[00m
				(VF der)
				(LK fahrt)
				(MF um acht uhr neununddreisig)
				(VC ab)[01;36m)[00m)
		(SIMPX und das habe ich mir schon zurechtgelegt)
		(SIMPX den wurde ich eigentlich ganz gerne nehmen)
		(SIMPX konnten sie mir da was reservieren)))
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['DM', 'SIMPX', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'mover info': [('DM', (4, 5))], 'old_family': ['VF', 'LK', 'MF', 'DM'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('PTKANT', 'PPER', 'VAFIN', 'PRF', 'ADV', 'PPER', 'VAFIN', 'PRF', 'ADV', 'ADV', 'ADV', 'VVPP', 'ART', 'NN', 'ADV', 'APPR', 'NE', 'PDS', 'VVFIN', 'APPR', 'CARD', 'NN', 'CARD', 'PTKVZ', 'KON', 'PDS', 'VAFIN', 'PPER', 'PRF', 'ADV', 'VVPP', 'PDS', 'VAFIN', 'PPER', 'ADV', 'ADV', 'ADV', 'VVINF', 'VMFIN', 'PPER', 'PPER', 'ADV', 'PIS', 'VVINF'), 'start right siblings': [], 'end left siblings': ['DM', 'SIMPX'], 'auto preterminal span': (0, 44), 'movers': ['DM'], 'old_parent': 'SIMPX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich habe mich)
		(DM ja)
		(SIMPX ich habe mich da auch schon erkundigt)
		(SIMPX
			(LV der zug hier in bonn)
			[01;36m(SIMPX[00m
				(VF der)
				(LK fahrt)
				(MF um acht uhr neununddreisig)
				(VC ab)[01;36m)[00m)
		(SIMPX und das habe ich mir schon zurechtgelegt)
		(SIMPX den wurde ich eigentlich ganz gerne nehmen)
		(SIMPX konnten sie mir da was reservieren)))
Step:UNSET add
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['LV', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VVFIN', 'APPR', 'CARD', 'NN', 'CARD', 'PTKVZ'), 'right siblings': [], 'left siblings': [(LV (NX (NX (ART der) (NN zug)) (ADVX (ADVX (ADV hier)) (PX (APPR in) (NX (NE bonn))))))], 'auto preterminal span': (17, 24), 'span': (17, 24), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP ja ich habe mich ja ich habe mich da auch schon erkundigt der zug hier in bonn der fahrt um acht uhr neununddreisig ab und das habe ich mir schon zurechtgelegt den wurde ich eigentlich ganz gerne nehmen konnten sie mir da was reservieren)

Sentence 574:
23 Initial errors
0 on fringe, 19 iterations
4 Error:UNSET move
2 Error:NP Attachment
1 Error:UNSET add
1 Error:Single Word Phrase
1 Error:Single Word Phrase
1 Error:Unary
1 Error:Single Word Phrase
1 Error:Unary
1 Error:UNSET remove
1 Error:Single Word Phrase
1 Error:UNSET remove
1 Error:Unary
1 Error:Unary
1 Error:UNSET remove
1 Error:Unary
1 Error:Clause Attachment
1 Error:UNSET add
1 Error:UNSET add
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK wurde)
			(MF ich)
			(VC sagen)
			(NF
				(SIMPX
					(VF dann)
					[01;36m(LKM[00m
						(LK nehme)
						(MF ich das)[01;36m)[00m))[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(LK kann)
			[01;31m(MF[00m
				(NX
					(PPER ich))[01;31m)[00m[01;31m)[00m
		[01;31m(DM[00m
			(ADVX
				(ADV also))[01;31m)[00m
		(DM wie gesagt)
		[01;31m(SIMPX[00m [01;33m(SIMPX (SIMPX[00m
			(VF ich)
			(LK war)
			(MF noch nicht ganz sicher)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					[01;31m(C[00m
						(NX
							(PWS was))[01;31m)[00m [01;33mSIMPX)[00m
					(ART den) [01;33mSIMPX)[00m
					[01;31m(NX[00m
						(NN ende)[01;31m)[00m
					[01;36m(NX[00m
						(ART der)[01;36m)[00m
					[01;36m(SIMPX[00m
						[01;36m(C[00m
							[01;36m(NX[00m
								(PWS was)[01;36m)[00m[01;36m)[00m
						(MF
							[01;31m(NX[00m
								[01;31m(NX[00m
									[01;36m(NX[00m
										(ART das)[01;36m)[00m
									[01;36m(NX[00m
										(NN [01;33m(NX[00m ende)[01;36m)[00m[01;31m)[00m
								(NX der abreise)[01;31m)[00m) [01;33mNX)[00m
						(VC anging)[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;36m(NF[00m
			(SIMPX
				(C das)
				(MF ich mich im laufe der woche noch mal)
				(VC melde)
				(NF bei ihnen))[01;36m)[00m
		(ADVX und dann)))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['ART', 'NX'], 'mover info': [('ART', (27, 28))], 'old_family': ['ART', 'NN'], 'start left siblings': [], 'auto preterminals': ('ART', 'NN', 'ART', 'NN'), 'start right siblings': ['NN'], 'end left siblings': [], 'auto preterminal span': (27, 31), 'movers': ['ART'], 'old_parent': 'NX', 'POS confusion': ('ART', 'ART'), 'end right siblings': ['NX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK wurde)
			(MF ich)
			(VC sagen)
			(NF
				(SIMPX
					(VF dann)
					[01;36m(LKM[00m
						(LK nehme)
						(MF ich das)[01;36m)[00m))[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(LK kann)
			[01;31m(MF[00m
				(NX
					(PPER ich))[01;31m)[00m[01;31m)[00m
		[01;31m(DM[00m
			(ADVX
				(ADV also))[01;31m)[00m
		(DM wie gesagt)
		[01;31m(SIMPX[00m [01;33m(SIMPX (SIMPX[00m
			(VF ich)
			(LK war)
			(MF noch nicht ganz sicher)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					[01;31m(C[00m
						(NX
							(PWS was))[01;31m)[00m [01;33mSIMPX)[00m
					(ART den) [01;33mSIMPX)[00m
					[01;31m(NX[00m
						(NN ende)[01;31m)[00m
					[01;36m(NX[00m
						(ART der)[01;36m)[00m
					[01;36m(SIMPX[00m
						[01;36m(C[00m
							[01;36m(NX[00m
								(PWS was)[01;36m)[00m[01;36m)[00m
						(MF
							[01;36m(NX[00m
								(ART das)[01;36m)[00m
							(NX ende der abreise))
						(VC anging)[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;36m(NF[00m
			(SIMPX
				(C das)
				(MF ich mich im laufe der woche noch mal)
				(VC melde)
				(NF bei ihnen))[01;36m)[00m
		(ADVX und dann)))
Step:NP Attachment
{'new_parent': 'NF', 'new_family': ['C', 'ART', 'NX', 'ART', 'SIMPX'], 'mover info': [('C', (22, 23)), ('ART', (23, 24)), ('NX', (24, 25)), ('ART', (25, 26))], 'old_family': ['C', 'ART', 'NX', 'ART', 'PWS', 'MF', 'VC'], 'start left siblings': [], 'auto preterminals': ('PWS', 'ART', 'NN', 'ART', 'PWS', 'ART', 'NN', 'ART', 'NN', 'VVFIN'), 'start right siblings': ['PWS', 'MF', 'VC'], 'end left siblings': [], 'auto preterminal span': (22, 32), 'movers': ['C', 'ART', 'NX', 'ART'], 'old_parent': 'SIMPX', 'end right siblings': ['SIMPX'], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK wurde)
			(MF ich)
			(VC sagen)
			(NF
				(SIMPX
					(VF dann)
					[01;36m(LKM[00m
						(LK nehme)
						(MF ich das)[01;36m)[00m))[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(LK kann)
			[01;31m(MF[00m
				(NX
					(PPER ich))[01;31m)[00m[01;31m)[00m
		[01;31m(DM[00m
			(ADVX
				(ADV also))[01;31m)[00m
		(DM wie gesagt)
		[01;31m(SIMPX[00m [01;33m(SIMPX (SIMPX[00m
			(VF ich)
			(LK war)
			(MF noch nicht ganz sicher)
			[01;31m(NF[00m
				[01;31m(C[00m
					(NX
						(PWS was))[01;31m)[00m [01;33mSIMPX)[00m
				(ART den) [01;33mSIMPX)[00m
				[01;31m(NX[00m
					(NN ende)[01;31m)[00m
				[01;36m(NX[00m
					(ART der)[01;36m)[00m
				(SIMPX
					[01;36m(C[00m
						[01;36m(NX[00m
							(PWS was)[01;36m)[00m[01;36m)[00m
					(MF
						[01;36m(NX[00m
							(ART das)[01;36m)[00m
						(NX ende der abreise))
					(VC anging))[01;31m)[00m[01;31m)[00m
		[01;36m(NF[00m
			(SIMPX
				(C das)
				(MF ich mich im laufe der woche noch mal)
				(VC melde)
				(NF bei ihnen))[01;36m)[00m
		(ADVX und dann)))
Step:UNSET add
{'subtrees': ['LK', 'MF'], 'family': ['VF', 'LKM'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'PDS'), 'right siblings': [], 'left siblings': [(VF (ADVX (ADV dann)))], 'auto preterminal span': (7, 10), 'span': (7, 10), 'parent': 'SIMPX', 'label': 'LKM', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK wurde)
			(MF ich)
			(VC sagen)
			(NF dann nehme ich das)[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(LK kann)
			[01;31m(MF[00m
				(NX
					(PPER ich))[01;31m)[00m[01;31m)[00m
		[01;31m(DM[00m
			(ADVX
				(ADV also))[01;31m)[00m
		(DM wie gesagt)
		[01;31m(SIMPX[00m [01;33m(SIMPX (SIMPX[00m
			(VF ich)
			(LK war)
			(MF noch nicht ganz sicher)
			[01;31m(NF[00m
				[01;31m(C[00m
					(NX
						(PWS was))[01;31m)[00m [01;33mSIMPX)[00m
				(ART den) [01;33mSIMPX)[00m
				[01;31m(NX[00m
					(NN ende)[01;31m)[00m
				[01;36m(NX[00m
					(ART der)[01;36m)[00m
				(SIMPX
					[01;36m(C[00m
						[01;36m(NX[00m
							(PWS was)[01;36m)[00m[01;36m)[00m
					(MF
						[01;36m(NX[00m
							(ART das)[01;36m)[00m
						(NX ende der abreise))
					(VC anging))[01;31m)[00m[01;31m)[00m
		[01;36m(NF[00m
			(SIMPX
				(C das)
				(MF ich mich im laufe der woche noch mal)
				(VC melde)
				(NF bei ihnen))[01;36m)[00m
		(ADVX und dann)))
Step:Single Word Phrase
{'subtrees': ['ART'], 'family': ['C', 'ART', 'NX', 'NX', 'SIMPX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ART',), 'right siblings': [(SIMPX (PWS was) (MF (ART das) (NX (NX (NN ende)) (NX (ART der) (NN abreise)))) (VC (VXFIN (VVFIN anging))))], 'left siblings': [(C (NX (PWS was))), (ART den), (NX (NN ende))], 'auto preterminal span': (25, 26), 'span': (25, 26), 'parent': 'NF', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK wurde)
			(MF ich)
			(VC sagen)
			(NF dann nehme ich das)[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(LK kann)
			[01;31m(MF[00m
				(NX
					(PPER ich))[01;31m)[00m[01;31m)[00m
		[01;31m(DM[00m
			(ADVX
				(ADV also))[01;31m)[00m
		(DM wie gesagt)
		[01;31m(SIMPX[00m [01;33m(SIMPX (SIMPX[00m
			(VF ich)
			(LK war)
			(MF noch nicht ganz sicher)
			[01;31m(NF[00m
				[01;31m(C[00m
					(NX
						(PWS was))[01;31m)[00m [01;33mSIMPX)[00m
				(ART den) [01;33mSIMPX)[00m
				[01;31m(NX[00m
					(NN ende)[01;31m)[00m
				(NX der)
				(SIMPX
					[01;36m(C[00m
						[01;36m(NX[00m
							(PWS was)[01;36m)[00m[01;36m)[00m
					(MF
						[01;36m(NX[00m
							(ART das)[01;36m)[00m
						(NX ende der abreise))
					(VC anging))[01;31m)[00m[01;31m)[00m
		[01;36m(NF[00m
			(SIMPX
				(C das)
				(MF ich mich im laufe der woche noch mal)
				(VC melde)
				(NF bei ihnen))[01;36m)[00m
		(ADVX und dann)))
Step:Single Word Phrase
{'subtrees': ['PWS'], 'family': ['NX', 'MF', 'VC'], 'over_word': True, 'over words': True, 'auto preterminals': ('PWS',), 'right siblings': [(MF (ART das) (NX (NX (NN ende)) (NX (ART der) (NN abreise)))), (VC (VXFIN (VVFIN anging)))], 'left siblings': [], 'auto preterminal span': (26, 27), 'span': (26, 27), 'parent': 'SIMPX', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK wurde)
			(MF ich)
			(VC sagen)
			(NF dann nehme ich das)[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(LK kann)
			[01;31m(MF[00m
				(NX
					(PPER ich))[01;31m)[00m[01;31m)[00m
		[01;31m(DM[00m
			(ADVX
				(ADV also))[01;31m)[00m
		(DM wie gesagt)
		[01;31m(SIMPX[00m [01;33m(SIMPX (SIMPX[00m
			(VF ich)
			(LK war)
			(MF noch nicht ganz sicher)
			[01;31m(NF[00m
				[01;31m(C[00m
					(NX
						(PWS was))[01;31m)[00m [01;33mSIMPX)[00m
				(ART den) [01;33mSIMPX)[00m
				[01;31m(NX[00m
					(NN ende)[01;31m)[00m
				(NX der)
				(SIMPX
					[01;36m(C[00m
						(NX
							(PWS was))[01;36m)[00m
					(MF
						[01;36m(NX[00m
							(ART das)[01;36m)[00m
						(NX ende der abreise))
					(VC anging))[01;31m)[00m[01;31m)[00m
		[01;36m(NF[00m
			(SIMPX
				(C das)
				(MF ich mich im laufe der woche noch mal)
				(VC melde)
				(NF bei ihnen))[01;36m)[00m
		(ADVX und dann)))
Step:Unary
{'subtrees': ['NX'], 'family': ['C', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('PWS',), 'right siblings': [(MF (ART das) (NX (NX (NN ende)) (NX (ART der) (NN abreise)))), (VC (VXFIN (VVFIN anging)))], 'left siblings': [], 'auto preterminal span': (26, 27), 'span': (26, 27), 'parent': 'SIMPX', 'label': 'C', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK wurde)
			(MF ich)
			(VC sagen)
			(NF dann nehme ich das)[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(LK kann)
			[01;31m(MF[00m
				(NX
					(PPER ich))[01;31m)[00m[01;31m)[00m
		[01;31m(DM[00m
			(ADVX
				(ADV also))[01;31m)[00m
		(DM wie gesagt)
		[01;31m(SIMPX[00m [01;33m(SIMPX (SIMPX[00m
			(VF ich)
			(LK war)
			(MF noch nicht ganz sicher)
			[01;31m(NF[00m
				[01;31m(C[00m
					(NX
						(PWS was))[01;31m)[00m [01;33mSIMPX)[00m
				(ART den) [01;33mSIMPX)[00m
				[01;31m(NX[00m
					(NN ende)[01;31m)[00m
				(NX der)
				(SIMPX
					(C was)
					(MF
						[01;36m(NX[00m
							(ART das)[01;36m)[00m
						(NX ende der abreise))
					(VC anging))[01;31m)[00m[01;31m)[00m
		[01;36m(NF[00m
			(SIMPX
				(C das)
				(MF ich mich im laufe der woche noch mal)
				(VC melde)
				(NF bei ihnen))[01;36m)[00m
		(ADVX und dann)))
Step:Single Word Phrase
{'subtrees': ['ART'], 'family': ['NX', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ART',), 'right siblings': [(NX (NX (NN ende)) (NX (ART der) (NN abreise)))], 'left siblings': [], 'auto preterminal span': (27, 28), 'span': (27, 28), 'parent': 'MF', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK wurde)
			(MF ich)
			(VC sagen)
			(NF dann nehme ich das)[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(LK kann)
			[01;31m(MF[00m
				(NX
					(PPER ich))[01;31m)[00m[01;31m)[00m
		[01;31m(DM[00m
			(ADVX
				(ADV also))[01;31m)[00m
		(DM wie gesagt)
		[01;31m(SIMPX[00m [01;33m(SIMPX (SIMPX[00m
			(VF ich)
			(LK war)
			(MF noch nicht ganz sicher)
			[01;31m(NF[00m
				[01;31m(C[00m
					(NX
						(PWS was))[01;31m)[00m [01;33mSIMPX)[00m
				(ART den) [01;33mSIMPX)[00m
				[01;31m(NX[00m
					(NN ende)[01;31m)[00m
				(NX der)
				(SIMPX was das ende der abreise anging)[01;31m)[00m[01;31m)[00m
		[01;36m(NF[00m
			(SIMPX
				(C das)
				(MF ich mich im laufe der woche noch mal)
				(VC melde)
				(NF bei ihnen))[01;36m)[00m
		(ADVX und dann)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'DM', 'SIMPX', 'NF', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'PRF', 'APPRART', 'NN', 'ART', 'NN', 'ADV', 'ADV', 'VVFIN', 'APPR', 'PPER'), 'right siblings': [(ADVX (KON und) (ADVX (ADV dann)))], 'left siblings': [(DM (PTKANT ja)), (DM (ITJ gut)), (SIMPX (VF (ADVX (ADV dann))) (LK (VXFIN (VAFIN wurde))) (MF (NX (PPER ich))) (VC (VXINF (VVINF sagen))) (NF (SIMPX (VF (ADVX (ADV dann))) (LKM (LK (VXFIN (VVFIN nehme))) (MF (NX (PPER ich)) (NX (PDS das))))))), (SIMPX (KOORD (KON und)) (LK (VXFIN (VMFIN kann))) (MF (NX (PPER ich)))), (DM (ADVX (ADV also))), (DM (SIMPX (C (KOUS wie)) (VC (VXINF (VVPP gesagt))))), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VAFIN war))) (MF (ADVX (ADVX (ADV noch)) (PTKNEG nicht)) (ADJX (ADVX (ADV ganz)) (ADJD sicher))) (NF (C (NX (PWS was))) (ART den) (NX (NN ende)) (NX (ART der)) (SIMPX (C (NX (PWS was))) (MF (NX (ART das)) (NX (NX (NN ende)) (NX (ART der) (NN abreise)))) (VC (VXFIN (VVFIN anging))))))], 'auto preterminal span': (32, 44), 'span': (32, 44), 'parent': 'TURN', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		[01;31m(SIMPX[00m
			(VF dann)
			(LK wurde)
			(MF ich)
			(VC sagen)
			(NF dann nehme ich das)[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(LK kann)
			[01;31m(MF[00m
				(NX
					(PPER ich))[01;31m)[00m[01;31m)[00m
		[01;31m(DM[00m
			(ADVX
				(ADV also))[01;31m)[00m
		(DM wie gesagt)
		[01;31m(SIMPX[00m [01;33m(SIMPX (SIMPX[00m
			(VF ich)
			(LK war)
			(MF noch nicht ganz sicher)
			[01;31m(NF[00m
				[01;31m(C[00m
					(NX
						(PWS was))[01;31m)[00m [01;33mSIMPX)[00m
				(ART den) [01;33mSIMPX)[00m
				[01;31m(NX[00m
					(NN ende)[01;31m)[00m
				(NX der)
				(SIMPX was das ende der abreise anging)[01;31m)[00m[01;31m)[00m
		(NF das ich mich im laufe der woche noch mal melde bei ihnen)
		(ADVX und dann)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'VC', 'NF'], 'family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'DM', 'DM', 'SIMPX', 'NF', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'ADV', 'VAFIN', 'PPER', 'VVINF', 'ADV', 'VVFIN', 'PPER', 'PDS', 'KON', 'VMFIN', 'PPER', 'ADV', 'KOUS', 'VVPP', 'PPER', 'VAFIN', 'ADV', 'PTKNEG', 'ADV', 'ADJD', 'PWS', 'ART', 'NN', 'ART', 'PWS', 'ART', 'NN', 'ART', 'NN', 'VVFIN', 'KOUS', 'PPER', 'PRF', 'APPRART', 'NN', 'ART', 'NN', 'ADV', 'ADV', 'VVFIN', 'APPR', 'PPER', 'KON', 'ADV'), 'right siblings': ['SIMPX', 'DM', 'DM', 'SIMPX', 'NF', 'ADVX'], 'parent': 'TURN', 'auto preterminal span': (0, 46), 'span': (2, 10), 'left siblings': ['DM', 'DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		(VF dann)
		(LK wurde)
		(MF ich)
		(VC sagen)
		(NF dann nehme ich das)
		[01;31m(SIMPX[00m
			[01;31m(KOORD[00m
				(KON und)[01;31m)[00m
			(LK kann)
			[01;31m(MF[00m
				(NX
					(PPER ich))[01;31m)[00m[01;31m)[00m
		[01;31m(DM[00m
			(ADVX
				(ADV also))[01;31m)[00m
		(DM wie gesagt)
		[01;31m(SIMPX[00m [01;33m(SIMPX (SIMPX[00m
			(VF ich)
			(LK war)
			(MF noch nicht ganz sicher)
			[01;31m(NF[00m
				[01;31m(C[00m
					(NX
						(PWS was))[01;31m)[00m [01;33mSIMPX)[00m
				(ART den) [01;33mSIMPX)[00m
				[01;31m(NX[00m
					(NN ende)[01;31m)[00m
				(NX der)
				(SIMPX was das ende der abreise anging)[01;31m)[00m[01;31m)[00m
		(NF das ich mich im laufe der woche noch mal melde bei ihnen)
		(ADVX und dann)))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['KOORD', 'LK', 'MF'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON', 'VMFIN', 'PPER'), 'right siblings': ['LK', 'MF'], 'parent': 'SIMPX', 'auto preterminal span': (10, 13), 'span': (10, 11), 'left siblings': [], 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		(VF dann)
		(LK wurde)
		(MF ich)
		(VC sagen)
		(NF dann nehme ich das)
		[01;31m(SIMPX[00m
			(KON und)
			(LK kann)
			[01;31m(MF[00m
				(NX
					(PPER ich))[01;31m)[00m[01;31m)[00m
		[01;31m(DM[00m
			(ADVX
				(ADV also))[01;31m)[00m
		(DM wie gesagt)
		[01;31m(SIMPX[00m [01;33m(SIMPX (SIMPX[00m
			(VF ich)
			(LK war)
			(MF noch nicht ganz sicher)
			[01;31m(NF[00m
				[01;31m(C[00m
					(NX
						(PWS was))[01;31m)[00m [01;33mSIMPX)[00m
				(ART den) [01;33mSIMPX)[00m
				[01;31m(NX[00m
					(NN ende)[01;31m)[00m
				(NX der)
				(SIMPX was das ende der abreise anging)[01;31m)[00m[01;31m)[00m
		(NF das ich mich im laufe der woche noch mal melde bei ihnen)
		(ADVX und dann)))
Step:UNSET remove
{'subtrees': ['KON', 'LK', 'MF'], 'family': ['DM', 'DM', 'VF', 'LK', 'MF', 'VC', 'NF', 'SIMPX', 'DM', 'DM', 'SIMPX', 'NF', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'ADV', 'VAFIN', 'PPER', 'VVINF', 'ADV', 'VVFIN', 'PPER', 'PDS', 'KON', 'VMFIN', 'PPER', 'ADV', 'KOUS', 'VVPP', 'PPER', 'VAFIN', 'ADV', 'PTKNEG', 'ADV', 'ADJD', 'PWS', 'ART', 'NN', 'ART', 'PWS', 'ART', 'NN', 'ART', 'NN', 'VVFIN', 'KOUS', 'PPER', 'PRF', 'APPRART', 'NN', 'ART', 'NN', 'ADV', 'ADV', 'VVFIN', 'APPR', 'PPER', 'KON', 'ADV'), 'right siblings': ['DM', 'DM', 'SIMPX', 'NF', 'ADVX'], 'parent': 'TURN', 'auto preterminal span': (0, 46), 'span': (10, 13), 'left siblings': ['DM', 'DM', 'VF', 'LK', 'MF', 'VC', 'NF'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		(VF dann)
		(LK wurde)
		(MF ich)
		(VC sagen)
		(NF dann nehme ich das)
		(KON und)
		(LK kann)
		[01;31m(MF[00m
			(NX
				(PPER ich))[01;31m)[00m
		[01;31m(DM[00m
			(ADVX
				(ADV also))[01;31m)[00m
		(DM wie gesagt)
		[01;31m(SIMPX[00m [01;33m(SIMPX (SIMPX[00m
			(VF ich)
			(LK war)
			(MF noch nicht ganz sicher)
			[01;31m(NF[00m
				[01;31m(C[00m
					(NX
						(PWS was))[01;31m)[00m [01;33mSIMPX)[00m
				(ART den) [01;33mSIMPX)[00m
				[01;31m(NX[00m
					(NN ende)[01;31m)[00m
				(NX der)
				(SIMPX was das ende der abreise anging)[01;31m)[00m[01;31m)[00m
		(NF das ich mich im laufe der woche noch mal melde bei ihnen)
		(ADVX und dann)))
Step:Unary
{'subtrees': ['NX'], 'family': ['DM', 'DM', 'VF', 'LK', 'MF', 'VC', 'NF', 'KON', 'LK', 'MF', 'DM', 'DM', 'SIMPX', 'NF', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'ADV', 'VAFIN', 'PPER', 'VVINF', 'ADV', 'VVFIN', 'PPER', 'PDS', 'KON', 'VMFIN', 'PPER', 'ADV', 'KOUS', 'VVPP', 'PPER', 'VAFIN', 'ADV', 'PTKNEG', 'ADV', 'ADJD', 'PWS', 'ART', 'NN', 'ART', 'PWS', 'ART', 'NN', 'ART', 'NN', 'VVFIN', 'KOUS', 'PPER', 'PRF', 'APPRART', 'NN', 'ART', 'NN', 'ADV', 'ADV', 'VVFIN', 'APPR', 'PPER', 'KON', 'ADV'), 'right siblings': ['DM', 'DM', 'SIMPX', 'NF', 'ADVX'], 'parent': 'TURN', 'auto preterminal span': (0, 46), 'span': (12, 13), 'left siblings': ['DM', 'DM', 'VF', 'LK', 'MF', 'VC', 'NF', 'KON', 'LK'], 'label': 'MF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		(VF dann)
		(LK wurde)
		(MF ich)
		(VC sagen)
		(NF dann nehme ich das)
		(KON und)
		(LK kann)
		(NX ich)
		[01;31m(DM[00m
			(ADVX
				(ADV also))[01;31m)[00m
		(DM wie gesagt)
		[01;31m(SIMPX[00m [01;33m(SIMPX (SIMPX[00m
			(VF ich)
			(LK war)
			(MF noch nicht ganz sicher)
			[01;31m(NF[00m
				[01;31m(C[00m
					(NX
						(PWS was))[01;31m)[00m [01;33mSIMPX)[00m
				(ART den) [01;33mSIMPX)[00m
				[01;31m(NX[00m
					(NN ende)[01;31m)[00m
				(NX der)
				(SIMPX was das ende der abreise anging)[01;31m)[00m[01;31m)[00m
		(NF das ich mich im laufe der woche noch mal melde bei ihnen)
		(ADVX und dann)))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['DM', 'DM', 'VF', 'LK', 'MF', 'VC', 'NF', 'KON', 'LK', 'NX', 'DM', 'DM', 'SIMPX', 'NF', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'ADV', 'VAFIN', 'PPER', 'VVINF', 'ADV', 'VVFIN', 'PPER', 'PDS', 'KON', 'VMFIN', 'PPER', 'ADV', 'KOUS', 'VVPP', 'PPER', 'VAFIN', 'ADV', 'PTKNEG', 'ADV', 'ADJD', 'PWS', 'ART', 'NN', 'ART', 'PWS', 'ART', 'NN', 'ART', 'NN', 'VVFIN', 'KOUS', 'PPER', 'PRF', 'APPRART', 'NN', 'ART', 'NN', 'ADV', 'ADV', 'VVFIN', 'APPR', 'PPER', 'KON', 'ADV'), 'right siblings': ['DM', 'SIMPX', 'NF', 'ADVX'], 'parent': 'TURN', 'auto preterminal span': (0, 46), 'span': (13, 14), 'left siblings': ['DM', 'DM', 'VF', 'LK', 'MF', 'VC', 'NF', 'KON', 'LK', 'NX'], 'label': 'DM', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		(VF dann)
		(LK wurde)
		(MF ich)
		(VC sagen)
		(NF dann nehme ich das)
		(KON und)
		(LK kann)
		(NX ich)
		(ADVX also)
		(DM wie gesagt)
		[01;31m(SIMPX[00m [01;33m(SIMPX (SIMPX[00m
			(VF ich)
			(LK war)
			(MF noch nicht ganz sicher)
			[01;31m(NF[00m
				[01;31m(C[00m
					(NX
						(PWS was))[01;31m)[00m [01;33mSIMPX)[00m
				(ART den) [01;33mSIMPX)[00m
				[01;31m(NX[00m
					(NN ende)[01;31m)[00m
				(NX der)
				(SIMPX was das ende der abreise anging)[01;31m)[00m[01;31m)[00m
		(NF das ich mich im laufe der woche noch mal melde bei ihnen)
		(ADVX und dann)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'NF'], 'family': ['DM', 'DM', 'VF', 'LK', 'MF', 'VC', 'NF', 'KON', 'LK', 'NX', 'ADVX', 'DM', 'SIMPX', 'NF', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'ADV', 'VAFIN', 'PPER', 'VVINF', 'ADV', 'VVFIN', 'PPER', 'PDS', 'KON', 'VMFIN', 'PPER', 'ADV', 'KOUS', 'VVPP', 'PPER', 'VAFIN', 'ADV', 'PTKNEG', 'ADV', 'ADJD', 'PWS', 'ART', 'NN', 'ART', 'PWS', 'ART', 'NN', 'ART', 'NN', 'VVFIN', 'KOUS', 'PPER', 'PRF', 'APPRART', 'NN', 'ART', 'NN', 'ADV', 'ADV', 'VVFIN', 'APPR', 'PPER', 'KON', 'ADV'), 'right siblings': ['NF', 'ADVX'], 'parent': 'TURN', 'auto preterminal span': (0, 46), 'span': (16, 32), 'left siblings': ['DM', 'DM', 'VF', 'LK', 'MF', 'VC', 'NF', 'KON', 'LK', 'NX', 'ADVX', 'DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		(VF dann)
		(LK wurde)
		(MF ich)
		(VC sagen)
		(NF dann nehme ich das)
		(KON und)
		(LK kann)
		(NX ich)
		(ADVX also)
		(DM wie gesagt)
		[01;33m(SIMPX (SIMPX[00m (VF ich)
		(LK war)
		(MF noch nicht ganz sicher)
		[01;31m(NF[00m
			[01;31m(C[00m
				(NX
					(PWS was))[01;31m)[00m [01;33mSIMPX)[00m
			(ART den) [01;33mSIMPX)[00m
			[01;31m(NX[00m
				(NN ende)[01;31m)[00m
			(NX der)
			(SIMPX was das ende der abreise anging)[01;31m)[00m
		(NF das ich mich im laufe der woche noch mal melde bei ihnen)
		(ADVX und dann)))
Step:Unary
{'subtrees': ['NX'], 'family': ['C', 'ART', 'NX', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PWS', 'ART', 'NN', 'ART', 'PWS', 'ART', 'NN', 'ART', 'NN', 'VVFIN'), 'right siblings': ['ART', 'NX', 'NX', 'SIMPX'], 'parent': 'NF', 'auto preterminal span': (22, 32), 'span': (22, 23), 'left siblings': [], 'label': 'C', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		(VF dann)
		(LK wurde)
		(MF ich)
		(VC sagen)
		(NF dann nehme ich das)
		(KON und)
		(LK kann)
		(NX ich)
		(ADVX also)
		(DM wie gesagt)
		[01;33m(SIMPX (SIMPX[00m (VF ich)
		(LK war)
		(MF noch nicht ganz sicher)
		[01;31m(NF[00m
			(NX was) [01;33mSIMPX)[00m
			(ART den) [01;33mSIMPX)[00m
			[01;31m(NX[00m
				(NN ende)[01;31m)[00m
			(NX der)
			(SIMPX was das ende der abreise anging)[01;31m)[00m
		(NF das ich mich im laufe der woche noch mal melde bei ihnen)
		(ADVX und dann)))
Step:Clause Attachment
{'subtrees': ['NX', 'ART', 'NX', 'NX', 'SIMPX'], 'family': ['DM', 'DM', 'VF', 'LK', 'MF', 'VC', 'NF', 'KON', 'LK', 'NX', 'ADVX', 'DM', 'VF', 'LK', 'MF', 'NF', 'NF', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'ADV', 'VAFIN', 'PPER', 'VVINF', 'ADV', 'VVFIN', 'PPER', 'PDS', 'KON', 'VMFIN', 'PPER', 'ADV', 'KOUS', 'VVPP', 'PPER', 'VAFIN', 'ADV', 'PTKNEG', 'ADV', 'ADJD', 'PWS', 'ART', 'NN', 'ART', 'PWS', 'ART', 'NN', 'ART', 'NN', 'VVFIN', 'KOUS', 'PPER', 'PRF', 'APPRART', 'NN', 'ART', 'NN', 'ADV', 'ADV', 'VVFIN', 'APPR', 'PPER', 'KON', 'ADV'), 'right siblings': ['NF', 'ADVX'], 'parent': 'TURN', 'auto preterminal span': (0, 46), 'span': (22, 32), 'left siblings': ['DM', 'DM', 'VF', 'LK', 'MF', 'VC', 'NF', 'KON', 'LK', 'NX', 'ADVX', 'DM', 'VF', 'LK', 'MF'], 'label': 'NF', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		(VF dann)
		(LK wurde)
		(MF ich)
		(VC sagen)
		(NF dann nehme ich das)
		(KON und)
		(LK kann)
		(NX ich)
		(ADVX also)
		(DM wie gesagt)
		[01;36m(SIMPX[00m
			[01;36m(SIMPX[00m
				(VF ich)
				(LK war)
				(MF noch nicht ganz sicher)
				(NX was)[01;36m)[00m
			(ART den)[01;36m)[00m
		[01;31m(NX[00m
			(NN ende)[01;31m)[00m
		(NX der)
		(SIMPX was das ende der abreise anging)
		(NF das ich mich im laufe der woche noch mal melde bei ihnen)
		(ADVX und dann)))
Step:UNSET add
{'subtrees': ['VF', 'LK', 'MF', 'NX'], 'family': ['DM', 'DM', 'VF', 'LK', 'MF', 'VC', 'NF', 'KON', 'LK', 'NX', 'ADVX', 'DM', 'SIMPX', 'ART', 'NX', 'NX', 'SIMPX', 'NF', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'ADV', 'PTKNEG', 'ADV', 'ADJD', 'PWS'), 'right siblings': [(ART den), (NX (NN ende)), (NX (ART der)), (SIMPX (C (NX (PWS was))) (MF (NX (ART das)) (NX (NX (NN ende)) (NX (ART der) (NN abreise)))) (VC (VXFIN (VVFIN anging)))), (NF (SIMPX (C (KOUS das)) (MF (NX (PPER ich)) (NX (PRF mich)) (PX (APPRART im) (NX (NX (NN laufe)) (NX (ART der) (NN woche)))) (ADVX (ADV noch)) (ADVX (ADV mal))) (VC (VXFIN (VVFIN melde))) (NF (PX (APPR bei) (NX (PPER ihnen)))))), (ADVX (KON und) (ADVX (ADV dann)))], 'left siblings': [(DM (PTKANT ja)), (DM (ITJ gut)), (VF (ADVX (ADV dann))), (LK (VXFIN (VAFIN wurde))), (MF (NX (PPER ich))), (VC (VXINF (VVINF sagen))), (NF (SIMPX (VF (ADVX (ADV dann))) (LKM (LK (VXFIN (VVFIN nehme))) (MF (NX (PPER ich)) (NX (PDS das)))))), (KON und), (LK (VXFIN (VMFIN kann))), (NX (PPER ich)), (ADVX (ADV also)), (DM (SIMPX (C (KOUS wie)) (VC (VXINF (VVPP gesagt)))))], 'auto preterminal span': (16, 23), 'span': (16, 23), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		(VF dann)
		(LK wurde)
		(MF ich)
		(VC sagen)
		(NF dann nehme ich das)
		(KON und)
		(LK kann)
		(NX ich)
		(ADVX also)
		(DM wie gesagt)
		[01;36m(SIMPX[00m
			(SIMPX ich war noch nicht ganz sicher was)
			(ART den)[01;36m)[00m
		[01;31m(NX[00m
			(NN ende)[01;31m)[00m
		(NX der)
		(SIMPX was das ende der abreise anging)
		(NF das ich mich im laufe der woche noch mal melde bei ihnen)
		(ADVX und dann)))
Step:UNSET add
{'subtrees': ['SIMPX', 'ART'], 'family': ['DM', 'DM', 'VF', 'LK', 'MF', 'VC', 'NF', 'KON', 'LK', 'NX', 'ADVX', 'DM', 'SIMPX', 'NX', 'NX', 'SIMPX', 'NF', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'ADV', 'PTKNEG', 'ADV', 'ADJD', 'PWS', 'ART'), 'right siblings': [(NX (NN ende)), (NX (ART der)), (SIMPX (C (NX (PWS was))) (MF (NX (ART das)) (NX (NX (NN ende)) (NX (ART der) (NN abreise)))) (VC (VXFIN (VVFIN anging)))), (NF (SIMPX (C (KOUS das)) (MF (NX (PPER ich)) (NX (PRF mich)) (PX (APPRART im) (NX (NX (NN laufe)) (NX (ART der) (NN woche)))) (ADVX (ADV noch)) (ADVX (ADV mal))) (VC (VXFIN (VVFIN melde))) (NF (PX (APPR bei) (NX (PPER ihnen)))))), (ADVX (KON und) (ADVX (ADV dann)))], 'left siblings': [(DM (PTKANT ja)), (DM (ITJ gut)), (VF (ADVX (ADV dann))), (LK (VXFIN (VAFIN wurde))), (MF (NX (PPER ich))), (VC (VXINF (VVINF sagen))), (NF (SIMPX (VF (ADVX (ADV dann))) (LKM (LK (VXFIN (VVFIN nehme))) (MF (NX (PPER ich)) (NX (PDS das)))))), (KON und), (LK (VXFIN (VMFIN kann))), (NX (PPER ich)), (ADVX (ADV also)), (DM (SIMPX (C (KOUS wie)) (VC (VXINF (VVPP gesagt)))))], 'auto preterminal span': (16, 24), 'span': (16, 24), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM gut)
		(VF dann)
		(LK wurde)
		(MF ich)
		(VC sagen)
		(NF dann nehme ich das)
		(KON und)
		(LK kann)
		(NX ich)
		(ADVX also)
		(DM wie gesagt)
		(SIMPX ich war noch nicht ganz sicher was den)
		[01;31m(NX[00m
			(NN ende)[01;31m)[00m
		(NX der)
		(SIMPX was das ende der abreise anging)
		(NF das ich mich im laufe der woche noch mal melde bei ihnen)
		(ADVX und dann)))
Step:Single Word Phrase
{'subtrees': ['NN'], 'family': ['DM', 'DM', 'VF', 'LK', 'MF', 'VC', 'NF', 'KON', 'LK', 'NX', 'ADVX', 'DM', 'SIMPX', 'NX', 'NX', 'SIMPX', 'NF', 'ADVX'], 'over_word': True, 'over words': True, 'auto preterminals': ('PTKANT', 'ITJ', 'ADV', 'VAFIN', 'PPER', 'VVINF', 'ADV', 'VVFIN', 'PPER', 'PDS', 'KON', 'VMFIN', 'PPER', 'ADV', 'KOUS', 'VVPP', 'PPER', 'VAFIN', 'ADV', 'PTKNEG', 'ADV', 'ADJD', 'PWS', 'ART', 'NN', 'ART', 'PWS', 'ART', 'NN', 'ART', 'NN', 'VVFIN', 'KOUS', 'PPER', 'PRF', 'APPRART', 'NN', 'ART', 'NN', 'ADV', 'ADV', 'VVFIN', 'APPR', 'PPER', 'KON', 'ADV'), 'right siblings': ['NX', 'SIMPX', 'NF', 'ADVX'], 'parent': 'TURN', 'auto preterminal span': (0, 46), 'span': (24, 25), 'left siblings': ['DM', 'DM', 'VF', 'LK', 'MF', 'VC', 'NF', 'KON', 'LK', 'NX', 'ADVX', 'DM', 'SIMPX'], 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP ja gut dann wurde ich sagen dann nehme ich das und kann ich also wie gesagt ich war noch nicht ganz sicher was den ende der was das ende der abreise anging das ich mich im laufe der woche noch mal melde bei ihnen und dann)

Sentence 575:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM wunderbar)
		(DM wunderbar)
		(DM ja)
		[01;31m(DM[00m
			(NX
				(ADVX dann)
				(NX alles gute))[01;31m)[00m
		(SIMPX und ich melde mich dann in den nachsten wochen noch mal)))
Step:Unary
{'subtrees': ['NX'], 'family': ['DM', 'DM', 'DM', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ITJ', 'PTKANT', 'ADV', 'PIS', 'NN', 'KON', 'PPER', 'VVFIN', 'PRF', 'ADV', 'APPR', 'ART', 'ADJA', 'NN', 'ADV', 'ADV'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 17), 'span': (3, 6), 'left siblings': ['DM', 'DM', 'DM'], 'label': 'DM', 'classified_type': 'Unary', 'type': 'remove'}
(TOP wunderbar wunderbar ja dann alles gute und ich melde mich dann in den nachsten wochen noch mal)

Sentence 576:
0 Initial errors
0 on fringe, 0 iterations

Sentence 577:
8 Initial errors
0 on fringe, 4 iterations
3 Error:UNSET move
2 Error:Single Word Phrase
2 Error:Single Word Phrase
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX das durfte kein problem sein)
		(DM also)
		(SIMPX die zugverbindungen sind wunderbar)
		(SIMPX
			[01;36m(PX[00m
				(VF
					[01;31m(ADVX[00m
						(ADV naturlich)[01;31m)[00m)[01;36m)[00m
			(LK konnen)
			(MF sie auch)
			(VC fliegen))
		[01;36m(PX[00m [01;31m(DM[00m
			(PWAV wobei)[01;31m)[00m[01;36m)[00m
		(SIMPX da wurde ich ihnen von abraten)
		[01;36m(SIMPX[00m
			(SIMPX das lohnt sich nicht bis hannover)
			[01;31m(SIMPX[00m
				[01;31m(KOORD[00m
					(KON oder)[01;31m)[00m
				[01;36m(SIMPX[00m
					(LK mochten)
					(MF sie das)[01;36m)[00m[01;31m)[00m[01;36m)[00m))
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['DM', 'SIMPX', 'DM', 'SIMPX', 'SIMPX', 'DM', 'SIMPX', 'SIMPX', 'KOORD', 'SIMPX'], 'mover info': [('KOORD', (29, 30))], 'old_family': ['KOORD', 'LK', 'MF'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'PDS', 'VMFIN', 'PIAT', 'NN', 'VAINF', 'ADV', 'ART', 'NN', 'VAFIN', 'ADJD', 'ADV', 'VMFIN', 'PPER', 'ADV', 'VVINF', 'PWAV', 'ADV', 'VAFIN', 'PPER', 'PPER', 'PROP', 'VVINF', 'PDS', 'VVFIN', 'PRF', 'PTKNEG', 'APPR', 'NE', 'KON', 'VMFIN', 'PPER', 'PDS'), 'start right siblings': ['LK', 'MF'], 'end left siblings': ['DM', 'SIMPX', 'DM', 'SIMPX', 'SIMPX', 'DM', 'SIMPX', 'SIMPX'], 'auto preterminal span': (0, 33), 'adding node already present': False, 'movers': ['KOORD'], 'old_parent': 'SIMPX', 'POS confusion': ('KON', 'KON'), 'added and moved': True, 'end right siblings': ['SIMPX'], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'SIMPX'}
(TOP
	(TURN
		(DM ja)
		(SIMPX das durfte kein problem sein)
		(DM also)
		(SIMPX die zugverbindungen sind wunderbar)
		(SIMPX
			[01;36m(PX[00m
				(VF
					[01;31m(ADVX[00m
						(ADV naturlich)[01;31m)[00m)[01;36m)[00m
			(LK konnen)
			(MF sie auch)
			(VC fliegen))
		[01;36m(PX[00m [01;31m(DM[00m
			(PWAV wobei)[01;31m)[00m[01;36m)[00m
		(SIMPX da wurde ich ihnen von abraten)
		(SIMPX
			(SIMPX das lohnt sich nicht bis hannover)
			[01;31m(KOORD[00m
				(KON oder)[01;31m)[00m
			(SIMPX mochten sie das))))
Step:Single Word Phrase
{'family': ['PX'], 'auto preterminal span': (11, 12), 'span': (11, 12), 'subtrees': ['ADV'], 'parent': 'VF', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'PX')}
(TOP
	(TURN
		(DM ja)
		(SIMPX das durfte kein problem sein)
		(DM also)
		(SIMPX die zugverbindungen sind wunderbar)
		(SIMPX naturlich konnen sie auch fliegen)
		[01;36m(PX[00m [01;31m(DM[00m
			(PWAV wobei)[01;31m)[00m[01;36m)[00m
		(SIMPX da wurde ich ihnen von abraten)
		(SIMPX
			(SIMPX das lohnt sich nicht bis hannover)
			[01;31m(KOORD[00m
				(KON oder)[01;31m)[00m
			(SIMPX mochten sie das))))
Step:Single Word Phrase
{'family': ['DM', 'SIMPX', 'DM', 'SIMPX', 'SIMPX', 'PX', 'SIMPX', 'SIMPX'], 'auto preterminal span': (16, 17), 'span': (16, 17), 'subtrees': ['PWAV'], 'parent': 'TURN', 'over_word': True, 'auto preterminals': ('PWAV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('DM', 'PX')}
(TOP
	(TURN
		(DM ja)
		(SIMPX das durfte kein problem sein)
		(DM also)
		(SIMPX die zugverbindungen sind wunderbar)
		(SIMPX naturlich konnen sie auch fliegen)
		(PX wobei)
		(SIMPX da wurde ich ihnen von abraten)
		(SIMPX
			(SIMPX das lohnt sich nicht bis hannover)
			[01;31m(KOORD[00m
				(KON oder)[01;31m)[00m
			(SIMPX mochten sie das))))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['SIMPX', 'KOORD', 'SIMPX'], 'over_word': True, 'over words': True, 'auto preterminals': ('PDS', 'VVFIN', 'PRF', 'PTKNEG', 'APPR', 'NE', 'KON', 'VMFIN', 'PPER', 'PDS'), 'right siblings': ['SIMPX'], 'parent': 'SIMPX', 'auto preterminal span': (23, 33), 'span': (29, 30), 'left siblings': ['SIMPX'], 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP ja das durfte kein problem sein also die zugverbindungen sind wunderbar naturlich konnen sie auch fliegen wobei da wurde ich ihnen von abraten das lohnt sich nicht bis hannover oder mochten sie das)

Sentence 578:
12 Initial errors
0 on fringe, 9 iterations
2 Error:Single Word Phrase
2 Error:Single Word Phrase
2 Error:Modifier Attachment
1 Error:Modifier Attachment
1 Error:Unary
1 Error:Unary
1 Error:UNSET remove
1 Error:PP Attachment
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM naturlich)
		(SIMPX den kann ich ihnen buchen)
		(SIMPX ich schaue mal nach)
		(SIMPX da ist auch noch was frei)
		(SIMPX und wo mochten sie denn wohnen)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(LK haben)
				[01;31m(MF[00m
					(NX sie)
					(ADVX da)
					(ADVX schon)[01;31m)[00m
				[01;36m(ADVX[00m [01;31m(VC[00m
					[01;31m(VXINF[00m
						(VVPP uberlegt)[01;31m)[00m[01;31m)[00m[01;36m)[00m
				[01;31m(NF[00m
					[01;31m(PX[00m
						(APPR in)
						[01;31m(NX[00m
							(NX was)
							(PX fur eine art von hotel)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
			[01;31m(ADJX[00m
				(ADJX teuer)
				[01;36m(ADVX[00m [01;31m(ADJX[00m
					(ADJD billig)[01;31m)[00m[01;36m)[00m
				(ADJX zentral)[01;31m)[00m[01;36m)[00m))
Step:Single Word Phrase
{'family': ['ADVX'], 'auto preterminal span': (27, 28), 'span': (27, 28), 'subtrees': ['VVPP'], 'parent': 'VC', 'over_word': True, 'auto preterminals': ('VVPP',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VXINF', 'ADVX')}
(TOP
	(TURN
		(DM ja)
		(DM naturlich)
		(SIMPX den kann ich ihnen buchen)
		(SIMPX ich schaue mal nach)
		(SIMPX da ist auch noch was frei)
		(SIMPX und wo mochten sie denn wohnen)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(LK haben)
				[01;31m(MF[00m
					(NX sie)
					(ADVX da)
					(ADVX schon)[01;31m)[00m
				[01;31m(VC[00m
					(ADVX
						(VVPP uberlegt))[01;31m)[00m
				[01;31m(NF[00m
					[01;31m(PX[00m
						(APPR in)
						[01;31m(NX[00m
							(NX was)
							(PX fur eine art von hotel)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
			[01;31m(ADJX[00m
				(ADJX teuer)
				[01;36m(ADVX[00m [01;31m(ADJX[00m
					(ADJD billig)[01;31m)[00m[01;36m)[00m
				(ADJX zentral)[01;31m)[00m[01;36m)[00m))
Step:Single Word Phrase
{'family': ['ADJX', 'ADVX', 'ADJX'], 'auto preterminal span': (36, 37), 'span': (36, 37), 'subtrees': ['ADJD'], 'parent': 'ADJX', 'over_word': True, 'auto preterminals': ('ADJD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'ADVX')}
(TOP
	(TURN
		(DM ja)
		(DM naturlich)
		(SIMPX den kann ich ihnen buchen)
		(SIMPX ich schaue mal nach)
		(SIMPX da ist auch noch was frei)
		(SIMPX und wo mochten sie denn wohnen)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(LK haben)
				[01;31m(MF[00m
					(NX sie)
					(ADVX da)
					(ADVX schon)[01;31m)[00m
				[01;31m(VC[00m
					(ADVX
						(VVPP uberlegt))[01;31m)[00m
				[01;31m(NF[00m
					[01;31m(PX[00m
						(APPR in)
						[01;31m(NX[00m
							(NX was)
							(PX fur eine art von hotel)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
			[01;31m(ADJX[00m
				(ADJX teuer)
				(ADVX billig)
				(ADJX zentral)[01;31m)[00m[01;36m)[00m))
Step:Modifier Attachment
{'new_parent': 'SIMPX', 'new_family': ['LK', 'MF', 'VC', 'NF', 'ADJX'], 'mover info': [('ADJX', (35, 38))], 'old_family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'ADJX'], 'start left siblings': ['DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'auto preterminals': ('PTKANT', 'ITJ', 'PDS', 'VMFIN', 'PPER', 'PPER', 'VVINF', 'PPER', 'VVFIN', 'ADV', 'PTKVZ', 'ADV', 'VAFIN', 'ADV', 'ADV', 'PIS', 'ADJD', 'KON', 'PWAV', 'VMFIN', 'PPER', 'ADV', 'VVINF', 'VAFIN', 'PPER', 'ADV', 'ADV', 'VVPP', 'APPR', 'PWS', 'APPR', 'ART', 'NN', 'APPR', 'NN', 'ADJD', 'ADJD', 'ADJD'), 'start right siblings': [], 'end left siblings': ['LK', 'MF', 'VC', 'NF'], 'auto preterminal span': (0, 38), 'movers': ['ADJX'], 'old_parent': 'TURN', 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(DM naturlich)
		(SIMPX den kann ich ihnen buchen)
		(SIMPX ich schaue mal nach)
		(SIMPX da ist auch noch was frei)
		(SIMPX und wo mochten sie denn wohnen)
		(SIMPX
			(LK haben)
			[01;31m(MF[00m
				(NX sie)
				(ADVX da)
				(ADVX schon)[01;31m)[00m
			[01;31m(VC[00m
				(ADVX
					(VVPP uberlegt))[01;31m)[00m
			[01;31m(NF[00m
				[01;31m(PX[00m
					(APPR in)
					[01;31m(NX[00m
						(NX was)
						(PX fur eine art von hotel)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			[01;31m(ADJX[00m
				(ADJX teuer)
				(ADVX billig)
				(ADJX zentral)[01;31m)[00m)))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADVX', 'ADVX'], 'family': ['LK', 'MF', 'VC', 'NF', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'PPER', 'ADV', 'ADV', 'VVPP', 'APPR', 'PWS', 'APPR', 'ART', 'NN', 'APPR', 'NN', 'ADJD', 'ADJD', 'ADJD'), 'right siblings': ['VC', 'NF', 'ADJX'], 'parent': 'SIMPX', 'auto preterminal span': (23, 38), 'span': (24, 27), 'left siblings': ['LK'], 'label': 'MF', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM naturlich)
		(SIMPX den kann ich ihnen buchen)
		(SIMPX ich schaue mal nach)
		(SIMPX da ist auch noch was frei)
		(SIMPX und wo mochten sie denn wohnen)
		(SIMPX
			(LK haben)
			(NX sie)
			(ADVX da)
			(ADVX schon)
			[01;31m(VC[00m
				(ADVX
					(VVPP uberlegt))[01;31m)[00m
			[01;31m(NF[00m
				[01;31m(PX[00m
					(APPR in)
					[01;31m(NX[00m
						(NX was)
						(PX fur eine art von hotel)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			[01;31m(ADJX[00m
				(ADJX teuer)
				(ADVX billig)
				(ADJX zentral)[01;31m)[00m)))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['LK', 'NX', 'ADVX', 'ADVX', 'VC', 'NF', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'PPER', 'ADV', 'ADV', 'VVPP', 'APPR', 'PWS', 'APPR', 'ART', 'NN', 'APPR', 'NN', 'ADJD', 'ADJD', 'ADJD'), 'right siblings': ['NF', 'ADJX'], 'parent': 'SIMPX', 'auto preterminal span': (23, 38), 'span': (27, 28), 'left siblings': ['LK', 'NX', 'ADVX', 'ADVX'], 'label': 'VC', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM naturlich)
		(SIMPX den kann ich ihnen buchen)
		(SIMPX ich schaue mal nach)
		(SIMPX da ist auch noch was frei)
		(SIMPX und wo mochten sie denn wohnen)
		(SIMPX
			(LK haben)
			(NX sie)
			(ADVX da)
			(ADVX schon)
			(ADVX uberlegt)
			[01;31m(NF[00m
				[01;31m(PX[00m
					(APPR in)
					[01;31m(NX[00m
						(NX was)
						(PX fur eine art von hotel)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			[01;31m(ADJX[00m
				(ADJX teuer)
				(ADVX billig)
				(ADJX zentral)[01;31m)[00m)))
Step:Unary
{'subtrees': ['PX'], 'family': ['LK', 'NX', 'ADVX', 'ADVX', 'ADVX', 'NF', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'PPER', 'ADV', 'ADV', 'VVPP', 'APPR', 'PWS', 'APPR', 'ART', 'NN', 'APPR', 'NN', 'ADJD', 'ADJD', 'ADJD'), 'right siblings': ['ADJX'], 'parent': 'SIMPX', 'auto preterminal span': (23, 38), 'span': (28, 35), 'left siblings': ['LK', 'NX', 'ADVX', 'ADVX', 'ADVX'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM naturlich)
		(SIMPX den kann ich ihnen buchen)
		(SIMPX ich schaue mal nach)
		(SIMPX da ist auch noch was frei)
		(SIMPX und wo mochten sie denn wohnen)
		(SIMPX
			(LK haben)
			(NX sie)
			(ADVX da)
			(ADVX schon)
			(ADVX uberlegt)
			[01;31m(PX[00m
				(APPR in)
				[01;31m(NX[00m
					(NX was)
					(PX fur eine art von hotel)[01;31m)[00m[01;31m)[00m
			[01;31m(ADJX[00m
				(ADJX teuer)
				(ADVX billig)
				(ADJX zentral)[01;31m)[00m)))
Step:UNSET remove
{'subtrees': ['APPR', 'NX'], 'family': ['LK', 'NX', 'ADVX', 'ADVX', 'ADVX', 'PX', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'PPER', 'ADV', 'ADV', 'VVPP', 'APPR', 'PWS', 'APPR', 'ART', 'NN', 'APPR', 'NN', 'ADJD', 'ADJD', 'ADJD'), 'right siblings': ['ADJX'], 'parent': 'SIMPX', 'auto preterminal span': (23, 38), 'span': (28, 35), 'left siblings': ['LK', 'NX', 'ADVX', 'ADVX', 'ADVX'], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM naturlich)
		(SIMPX den kann ich ihnen buchen)
		(SIMPX ich schaue mal nach)
		(SIMPX da ist auch noch was frei)
		(SIMPX und wo mochten sie denn wohnen)
		(SIMPX
			(LK haben)
			(NX sie)
			(ADVX da)
			(ADVX schon)
			(ADVX uberlegt)
			(APPR in)
			[01;31m(NX[00m
				(NX was)
				(PX fur eine art von hotel)[01;31m)[00m
			[01;31m(ADJX[00m
				(ADJX teuer)
				(ADVX billig)
				(ADJX zentral)[01;31m)[00m)))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['LK', 'NX', 'ADVX', 'ADVX', 'ADVX', 'APPR', 'NX', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'PPER', 'ADV', 'ADV', 'VVPP', 'APPR', 'PWS', 'APPR', 'ART', 'NN', 'APPR', 'NN', 'ADJD', 'ADJD', 'ADJD'), 'right siblings': ['ADJX'], 'parent': 'SIMPX', 'auto preterminal span': (23, 38), 'span': (29, 35), 'left siblings': ['LK', 'NX', 'ADVX', 'ADVX', 'ADVX', 'APPR'], 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM naturlich)
		(SIMPX den kann ich ihnen buchen)
		(SIMPX ich schaue mal nach)
		(SIMPX da ist auch noch was frei)
		(SIMPX und wo mochten sie denn wohnen)
		(SIMPX
			(LK haben)
			(NX sie)
			(ADVX da)
			(ADVX schon)
			(ADVX uberlegt)
			(APPR in)
			(NX was)
			(PX fur eine art von hotel)
			[01;31m(ADJX[00m
				(ADJX teuer)
				(ADVX billig)
				(ADJX zentral)[01;31m)[00m)))
Step:Modifier Attachment
{'subtrees': ['ADJX', 'ADVX', 'ADJX'], 'family': ['LK', 'NX', 'ADVX', 'ADVX', 'ADVX', 'APPR', 'NX', 'PX', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'PPER', 'ADV', 'ADV', 'VVPP', 'APPR', 'PWS', 'APPR', 'ART', 'NN', 'APPR', 'NN', 'ADJD', 'ADJD', 'ADJD'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (23, 38), 'span': (35, 38), 'left siblings': ['LK', 'NX', 'ADVX', 'ADVX', 'ADVX', 'APPR', 'NX', 'PX'], 'label': 'ADJX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP ja naturlich den kann ich ihnen buchen ich schaue mal nach da ist auch noch was frei und wo mochten sie denn wohnen haben sie da schon uberlegt in was fur eine art von hotel teuer billig zentral)

Sentence 579:
7 Initial errors
0 on fringe, 4 iterations
2 Error:Single Word Phrase
2 Error:Single Word Phrase
2 Error:Modifier Attachment
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(NX
			(ART das)
			(NX
				[01;36m(ADJX[00m [01;31m(NX[00m
					(NE zentralhotel)[01;31m)[00m[01;36m)[00m
				[01;31m(NX[00m
					(NE kaiserhof)[01;31m)[00m))
		(DM ja)
		(SIMPX das ist auch ein sehr schones hotel)
		(DM also)
		(SIMPX
			(LK ist)
			(MF auch mit aufenthaltsraumen und konferenzraumen)
			(NF
				(SIMPX
					(C wenn)
					(MF
						(NX sie)
						[01;31m(ADVX[00m
							[01;36m(ADVX[00m [01;31m(ADJX[00m
								(ADJD geschaftlich)[01;31m)[00m[01;36m)[00m
							[01;36m(ADVX[00m
								(ADV unterwegs)[01;36m)[00m[01;31m)[00m)
					(VC sind))))))
Step:Single Word Phrase
{'family': ['ADJX', 'NX'], 'auto preterminal span': (1, 2), 'span': (1, 2), 'subtrees': ['NE'], 'parent': 'NX', 'over_word': True, 'auto preterminals': ('NE',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('NX', 'ADJX')}
(TOP
	(TURN
		(NX
			(ART das)
			(NX
				(ADJX zentralhotel)
				[01;31m(NX[00m
					(NE kaiserhof)[01;31m)[00m))
		(DM ja)
		(SIMPX das ist auch ein sehr schones hotel)
		(DM also)
		(SIMPX
			(LK ist)
			(MF auch mit aufenthaltsraumen und konferenzraumen)
			(NF
				(SIMPX
					(C wenn)
					(MF
						(NX sie)
						[01;31m(ADVX[00m
							[01;36m(ADVX[00m [01;31m(ADJX[00m
								(ADJD geschaftlich)[01;31m)[00m[01;36m)[00m
							[01;36m(ADVX[00m
								(ADV unterwegs)[01;36m)[00m[01;31m)[00m)
					(VC sind))))))
Step:Single Word Phrase
{'family': ['ADVX', 'ADV'], 'auto preterminal span': (20, 21), 'span': (20, 21), 'subtrees': ['ADJD'], 'parent': 'ADVX', 'over_word': True, 'auto preterminals': ('ADJD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'ADVX')}
(TOP
	(TURN
		(NX
			(ART das)
			(NX
				(ADJX zentralhotel)
				[01;31m(NX[00m
					(NE kaiserhof)[01;31m)[00m))
		(DM ja)
		(SIMPX das ist auch ein sehr schones hotel)
		(DM also)
		(SIMPX
			(LK ist)
			(MF auch mit aufenthaltsraumen und konferenzraumen)
			(NF
				(SIMPX
					(C wenn)
					(MF
						(NX sie)
						[01;31m(ADVX[00m
							(ADVX geschaftlich)
							[01;36m(ADVX[00m
								(ADV unterwegs)[01;36m)[00m[01;31m)[00m)
					(VC sind))))))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'ADVX', 'ADVX'], 'mover info': [('ADVX', (20, 21))], 'old_family': ['ADVX', 'ADV'], 'start left siblings': [], 'auto preterminals': ('PPER', 'ADJD', 'ADV'), 'start right siblings': ['ADV'], 'end left siblings': ['NX'], 'auto preterminal span': (19, 22), 'movers': ['ADVX'], 'old_parent': 'ADVX', 'POS confusion': ('ADJD', 'ADJD'), 'end right siblings': ['ADVX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(NX
			(ART das)
			(NX
				(ADJX zentralhotel)
				[01;31m(NX[00m
					(NE kaiserhof)[01;31m)[00m))
		(DM ja)
		(SIMPX das ist auch ein sehr schones hotel)
		(DM also)
		(SIMPX ist auch mit aufenthaltsraumen und konferenzraumen wenn sie geschaftlich unterwegs sind)))
Step:Single Word Phrase
{'subtrees': ['NE'], 'family': ['ADJX', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('NE', 'NE'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (1, 3), 'span': (2, 3), 'left siblings': ['ADJX'], 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP das zentralhotel kaiserhof ja das ist auch ein sehr schones hotel also ist auch mit aufenthaltsraumen und konferenzraumen wenn sie geschaftlich unterwegs sind)

Sentence 580:
0 Initial errors
0 on fringe, 0 iterations

Sentence 581:
8 Initial errors
0 on fringe, 4 iterations
3 Error:PP Attachment
2 Error:Single Word Phrase
2 Error:Modifier Attachment
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM guten tag)
		(SIMPX
			(VF ich)
			(LK bin)
			[01;31m(MF[00m
				[01;31m(NX[00m
					[01;36m(MF[00m
						(NX
							(NN frau)
							(NE bartels))[01;36m)[00m
					(PX
						(APPRART vom)
						[01;31m(NX[00m
							[01;31m(NX[00m
								(NX reiseburo)
								[01;36m(ADJX[00m [01;31m(NX[00m [01;33m(PX[00m
									(NE zentral)[01;31m)[00m[01;36m)[00m[01;31m)[00m
							(PX in hannover)[01;31m)[00m)[01;31m)[00m[01;31m)[00m))) [01;33mPX)[00m
Step:PP Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'PX'], 'mover info': [('PX', (6, 11))], 'old_family': ['NX', 'PX'], 'start left siblings': ['NX'], 'auto preterminals': ('PPER', 'VAFIN', 'NN', 'NE', 'APPRART', 'NN', 'NE', 'APPR', 'NE'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (2, 11), 'movers': ['PX'], 'old_parent': 'NX', 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM guten tag)
		(SIMPX
			(VF ich)
			(LK bin)
			(MF frau bartels)
			(PX
				(APPRART vom)
				[01;31m(NX[00m
					[01;31m(NX[00m
						(NX reiseburo)
						[01;36m(ADJX[00m [01;31m(NX[00m [01;33m(PX[00m
							(NE zentral)[01;31m)[00m[01;36m)[00m[01;31m)[00m
					(PX in hannover)[01;31m)[00m)))) [01;33mPX)[00m
Step:Single Word Phrase
{'family': ['NX', 'ADJX'], 'auto preterminal span': (8, 9), 'span': (8, 9), 'subtrees': ['NE'], 'parent': 'NX', 'over_word': True, 'auto preterminals': ('NE',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('NX', 'ADJX')}
(TOP
	(TURN
		(DM guten tag)
		(SIMPX
			(VF ich)
			(LK bin)
			(MF frau bartels)
			(PX
				(APPRART vom)
				[01;31m(NX[00m
					[01;31m(NX[00m
						(NX reiseburo)
						[01;33m(PX[00m (ADJX zentral)[01;31m)[00m
					(PX in hannover)[01;31m)[00m)))) [01;33mPX)[00m
Step:Modifier Attachment
{'new_parent': 'NX', 'new_family': ['NX', 'ADJX', 'PX'], 'mover info': [('ADJX', (8, 9))], 'old_family': ['NX', 'ADJX'], 'start left siblings': ['NX'], 'auto preterminals': ('NN', 'NE', 'APPR', 'NE'), 'start right siblings': [], 'end left siblings': ['NX'], 'auto preterminal span': (7, 11), 'adding node already present': False, 'movers': ['ADJX'], 'old_parent': 'NX', 'POS confusion': ('NE', 'NE'), 'added and moved': True, 'end right siblings': ['PX'], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'PX'}
(TOP
	(TURN
		(DM guten tag)
		(SIMPX
			(VF ich)
			(LK bin)
			(MF frau bartels)
			(PX
				(APPRART vom)
				[01;31m(NX[00m
					(NX reiseburo)
					(PX zentral in hannover)[01;31m)[00m))))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['APPRART', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'NN', 'NE', 'APPR', 'NE'), 'right siblings': [], 'parent': 'PX', 'auto preterminal span': (6, 11), 'span': (7, 11), 'left siblings': ['APPRART'], 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP guten tag ich bin frau bartels vom reiseburo zentral in hannover)

Sentence 582:
9 Initial errors
0 on fringe, 7 iterations
2 Error:NP Attachment
2 Error:NP Attachment
1 Error:UNSET add
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF eines der hotels)
			(LK ist)
			(MF [01;33m(NX[00m
				(NX
					(ART das)
					[01;31m(NX[00m
						(NX grandhotel) [01;33mNX)[00m
						(NX musmann)[01;31m)[00m)))
		(SIMPX das liegt sehr zentral)
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				[01;31m(SIMPX[00m
					(KOORD und)
					(VF platze)
					(LK haben)
					(MF die auch noch)[01;31m)[00m[01;31m)[00m
			(LK sehe)
			(MF ich)[01;31m)[00m
		(DM ja)
		[01;31m(SIMPX[00m
			(LK kostet)
			(MF [01;33m(MF[00m
				(ADVX dann)
				[01;33m(NX[00m (NX einzelzimmer)
				[01;31m(NX[00m
					(NX dreihundert funfzig) [01;33mNX) MF)[00m
					(NX die nacht)[01;31m)[00m)[01;31m)[00m))
Step:NP Attachment
{'new_parent': 'NX', 'new_family': ['ART', 'NX', 'NX'], 'mover info': [('NX', (6, 7))], 'old_family': ['NX', 'NX'], 'start left siblings': [], 'auto preterminals': ('ART', 'NE', 'NE'), 'start right siblings': ['NX'], 'end left siblings': ['ART'], 'auto preterminal span': (5, 8), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'NX', 'POS confusion': ('NE', 'NE'), 'added and moved': True, 'end right siblings': ['NX'], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(DM ja)
		(SIMPX eines der hotels ist das grandhotel musmann)
		(SIMPX das liegt sehr zentral)
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				[01;31m(SIMPX[00m
					(KOORD und)
					(VF platze)
					(LK haben)
					(MF die auch noch)[01;31m)[00m[01;31m)[00m
			(LK sehe)
			(MF ich)[01;31m)[00m
		(DM ja)
		[01;31m(SIMPX[00m
			(LK kostet)
			(MF [01;33m(MF[00m
				(ADVX dann)
				[01;33m(NX[00m (NX einzelzimmer)
				[01;31m(NX[00m
					(NX dreihundert funfzig) [01;33mNX) MF)[00m
					(NX die nacht)[01;31m)[00m)[01;31m)[00m))
Step:NP Attachment
{'new_parent': 'MF', 'new_family': ['ADVX', 'NX', 'NX', 'NX'], 'mover info': [('NX', (24, 26))], 'old_family': ['NX', 'NX'], 'start left siblings': [], 'auto preterminals': ('ADV', 'NN', 'CARD', 'CARD', 'ART', 'NN'), 'start right siblings': ['NX'], 'end left siblings': ['ADVX', 'NX'], 'auto preterminal span': (22, 28), 'adding node already present': False, 'movers': ['NX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': ['NX'], 'classified_type': 'NP Attachment', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(DM ja)
		(SIMPX eines der hotels ist das grandhotel musmann)
		(SIMPX das liegt sehr zentral)
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				[01;31m(SIMPX[00m
					(KOORD und)
					(VF platze)
					(LK haben)
					(MF die auch noch)[01;31m)[00m[01;31m)[00m
			(LK sehe)
			(MF ich)[01;31m)[00m
		(DM ja)
		[01;31m(SIMPX[00m
			(LK kostet)
			(MF
				[01;36m(MF[00m
					(ADVX dann)
					(NX einzelzimmer dreihundert funfzig)[01;36m)[00m
				(NX die nacht))[01;31m)[00m))
Step:UNSET add
{'subtrees': ['ADVX', 'NX'], 'family': ['MF', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'NN', 'CARD', 'CARD'), 'right siblings': [(NX (ART die) (NN nacht))], 'left siblings': [], 'auto preterminal span': (22, 26), 'span': (22, 26), 'parent': 'MF', 'label': 'MF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX eines der hotels ist das grandhotel musmann)
		(SIMPX das liegt sehr zentral)
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				[01;31m(SIMPX[00m
					(KOORD und)
					(VF platze)
					(LK haben)
					(MF die auch noch)[01;31m)[00m[01;31m)[00m
			(LK sehe)
			(MF ich)[01;31m)[00m
		(DM ja)
		[01;31m(SIMPX[00m
			(LK kostet)
			(MF dann einzelzimmer dreihundert funfzig die nacht)[01;31m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'NN', 'VAFIN', 'PDS', 'ADV', 'ADV', 'VVFIN', 'PPER'), 'right siblings': ['LK', 'MF'], 'parent': 'SIMPX', 'auto preterminal span': (12, 20), 'span': (12, 18), 'left siblings': [], 'label': 'VF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX eines der hotels ist das grandhotel musmann)
		(SIMPX das liegt sehr zentral)
		[01;31m(SIMPX[00m
			[01;31m(SIMPX[00m
				(KOORD und)
				(VF platze)
				(LK haben)
				(MF die auch noch)[01;31m)[00m
			(LK sehe)
			(MF ich)[01;31m)[00m
		(DM ja)
		[01;31m(SIMPX[00m
			(LK kostet)
			(MF dann einzelzimmer dreihundert funfzig die nacht)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['KOORD', 'VF', 'LK', 'MF'], 'family': ['SIMPX', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'NN', 'VAFIN', 'PDS', 'ADV', 'ADV', 'VVFIN', 'PPER'), 'right siblings': ['LK', 'MF'], 'parent': 'SIMPX', 'auto preterminal span': (12, 20), 'span': (12, 18), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX eines der hotels ist das grandhotel musmann)
		(SIMPX das liegt sehr zentral)
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF platze)
			(LK haben)
			(MF die auch noch)
			(LK sehe)
			(MF ich)[01;31m)[00m
		(DM ja)
		[01;31m(SIMPX[00m
			(LK kostet)
			(MF dann einzelzimmer dreihundert funfzig die nacht)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['KOORD', 'VF', 'LK', 'MF', 'LK', 'MF'], 'family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PIS', 'ART', 'NN', 'VAFIN', 'ART', 'NE', 'NE', 'PDS', 'VVFIN', 'ADV', 'ADJD', 'KON', 'NN', 'VAFIN', 'PDS', 'ADV', 'ADV', 'VVFIN', 'PPER', 'PTKANT', 'VVFIN', 'ADV', 'NN', 'CARD', 'CARD', 'ART', 'NN'), 'right siblings': ['DM', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 28), 'span': (12, 20), 'left siblings': ['DM', 'SIMPX', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX eines der hotels ist das grandhotel musmann)
		(SIMPX das liegt sehr zentral)
		(KOORD und)
		(VF platze)
		(LK haben)
		(MF die auch noch)
		(LK sehe)
		(MF ich)
		(DM ja)
		[01;31m(SIMPX[00m
			(LK kostet)
			(MF dann einzelzimmer dreihundert funfzig die nacht)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['LK', 'MF'], 'family': ['DM', 'SIMPX', 'SIMPX', 'KOORD', 'VF', 'LK', 'MF', 'LK', 'MF', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PIS', 'ART', 'NN', 'VAFIN', 'ART', 'NE', 'NE', 'PDS', 'VVFIN', 'ADV', 'ADJD', 'KON', 'NN', 'VAFIN', 'PDS', 'ADV', 'ADV', 'VVFIN', 'PPER', 'PTKANT', 'VVFIN', 'ADV', 'NN', 'CARD', 'CARD', 'ART', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 28), 'span': (21, 28), 'left siblings': ['DM', 'SIMPX', 'SIMPX', 'KOORD', 'VF', 'LK', 'MF', 'LK', 'MF', 'DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ja eines der hotels ist das grandhotel musmann das liegt sehr zentral und platze haben die auch noch sehe ich ja kostet dann einzelzimmer dreihundert funfzig die nacht)

Sentence 583:
0 Initial errors
0 on fringe, 0 iterations

Sentence 584:
18 Initial errors
0 on fringe, 11 iterations
3 Error:Co-ordination
2 Error:Different label
2 Error:Different label
2 Error:UNSET move
2 Error:Co-ordination
2 Error:Modifier Attachment
1 Error:UNSET add
1 Error:PP Attachment
1 Error:UNSET remove
1 Error:Single Word Phrase
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX dreieinhalb stunden fahren sie)
		(SIMPX
			[01;36m(SIMPX[00m
				[01;31m(SIMPX[00m
					(LK kommen)
					(MF dann am hauptbahnhof)
					(VC an)[01;31m)[00m
				[01;36m(SIMPX[00m
					(KON und)
					[01;36m(LKMVC[00m [01;31m(SIMPX[00m
						(LK konnen)
						(MF ja dann ein taxi)
						(VC nehmen)[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;36m)[00m
			(KON und)
			[01;36m(LKM[00m [01;31m(SIMPX[00m
				(LK kommen)
				(MF
					[01;31m(PX[00m
						(ADVX direkt)
						[01;36m(PX[00m
							(APPRART zum)
							(NX hotel)[01;36m)[00m[01;31m)[00m)[01;31m)[00m[01;36m)[00m)
		(DM ja)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF dann)
				(LK buche)
				(MF
					(NX ich)
					(NX das)
					[01;31m(PX[00m
						(APPR fur)
						[01;31m(NX[00m
							(PPER sie)[01;31m)[00m[01;31m)[00m)[01;31m)[00m
			[01;36m(NF[00m [01;31m(DM[00m
				(NX
					(NN herr)
					[01;31m(NX[00m
						(NE obrowski)
						(KON und)
						[01;36m(NX[00m
							(NE oborski)[01;36m)[00m[01;31m)[00m)[01;31m)[00m[01;36m)[00m[01;36m)[00m
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK muste)
			(MF
				(NX ich)
				[01;36m(PX[00m
					(ADVX nur)
					(PX von ihnen)[01;36m)[00m
				(ADVX noch)
				(NX die kontonummer))
			(VC haben)
			(NF und die formalitaten))))
Step:Co-ordination
{'new_parent': 'NX', 'new_family': ['NN', 'NE', 'KON', 'NX'], 'mover info': [('NE', (29, 30)), ('KON', (30, 31))], 'old_family': ['NE', 'KON', 'NE'], 'start left siblings': [], 'auto preterminals': ('NN', 'NE', 'KON', 'NE'), 'start right siblings': ['NE'], 'end left siblings': ['NN'], 'auto preterminal span': (28, 32), 'adding node already present': False, 'movers': ['NE', 'KON'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': ['NX'], 'classified_type': 'Co-ordination', 'type': 'move', 'added label': 'PX'}
(TOP
	(TURN
		(SIMPX dreieinhalb stunden fahren sie)
		(SIMPX
			[01;36m(SIMPX[00m
				[01;31m(SIMPX[00m
					(LK kommen)
					(MF dann am hauptbahnhof)
					(VC an)[01;31m)[00m
				[01;36m(SIMPX[00m
					(KON und)
					[01;36m(LKMVC[00m [01;31m(SIMPX[00m
						(LK konnen)
						(MF ja dann ein taxi)
						(VC nehmen)[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;36m)[00m
			(KON und)
			[01;36m(LKM[00m [01;31m(SIMPX[00m
				(LK kommen)
				(MF
					[01;31m(PX[00m
						(ADVX direkt)
						[01;36m(PX[00m
							(APPRART zum)
							(NX hotel)[01;36m)[00m[01;31m)[00m)[01;31m)[00m[01;36m)[00m)
		(DM ja)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF dann)
				(LK buche)
				(MF
					(NX ich)
					(NX das)
					[01;31m(PX[00m
						(APPR fur)
						[01;31m(NX[00m
							(PPER sie)[01;31m)[00m[01;31m)[00m)[01;31m)[00m
			(NF
				[01;31m(DM[00m
					(NX
						(NN herr)
						(NE obrowski)
						(KON und)
						(NX oborski))[01;31m)[00m)[01;36m)[00m
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK muste)
			(MF
				(NX ich)
				[01;36m(PX[00m
					(ADVX nur)
					(PX von ihnen)[01;36m)[00m
				(ADVX noch)
				(NX die kontonummer))
			(VC haben)
			(NF und die formalitaten))))
Step:Different label
{'family': ['SIMPX', 'KON', 'LKMVC', 'KON', 'SIMPX'], 'auto preterminal span': (10, 16), 'span': (10, 16), 'subtrees': ['LK', 'MF', 'VC'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('VMFIN', 'ADV', 'ADV', 'ART', 'NN', 'VVINF'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('SIMPX', 'LKMVC')}
(TOP
	(TURN
		(SIMPX dreieinhalb stunden fahren sie)
		(SIMPX
			[01;36m(SIMPX[00m
				[01;31m(SIMPX[00m
					(LK kommen)
					(MF dann am hauptbahnhof)
					(VC an)[01;31m)[00m
				[01;36m(SIMPX[00m
					(KON und)
					(LKMVC konnen ja dann ein taxi nehmen)[01;36m)[00m[01;36m)[00m
			(KON und)
			[01;36m(LKM[00m [01;31m(SIMPX[00m
				(LK kommen)
				(MF
					[01;31m(PX[00m
						(ADVX direkt)
						[01;36m(PX[00m
							(APPRART zum)
							(NX hotel)[01;36m)[00m[01;31m)[00m)[01;31m)[00m[01;36m)[00m)
		(DM ja)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF dann)
				(LK buche)
				(MF
					(NX ich)
					(NX das)
					[01;31m(PX[00m
						(APPR fur)
						[01;31m(NX[00m
							(PPER sie)[01;31m)[00m[01;31m)[00m)[01;31m)[00m
			(NF
				[01;31m(DM[00m
					(NX
						(NN herr)
						(NE obrowski)
						(KON und)
						(NX oborski))[01;31m)[00m)[01;36m)[00m
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK muste)
			(MF
				(NX ich)
				[01;36m(PX[00m
					(ADVX nur)
					(PX von ihnen)[01;36m)[00m
				(ADVX noch)
				(NX die kontonummer))
			(VC haben)
			(NF und die formalitaten))))
Step:Different label
{'family': ['SIMPX', 'KON', 'LKMVC', 'KON', 'LKM'], 'auto preterminal span': (17, 21), 'span': (17, 21), 'subtrees': ['LK', 'MF'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('VVFIN', 'ADV', 'APPRART', 'NN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('SIMPX', 'LKM')}
(TOP
	(TURN
		(SIMPX dreieinhalb stunden fahren sie)
		(SIMPX
			[01;36m(SIMPX[00m
				[01;31m(SIMPX[00m
					(LK kommen)
					(MF dann am hauptbahnhof)
					(VC an)[01;31m)[00m
				[01;36m(SIMPX[00m
					(KON und)
					(LKMVC konnen ja dann ein taxi nehmen)[01;36m)[00m[01;36m)[00m
			(KON und)
			(LKM
				(LK kommen)
				(MF
					[01;31m(PX[00m
						(ADVX direkt)
						[01;36m(PX[00m
							(APPRART zum)
							(NX hotel)[01;36m)[00m[01;31m)[00m)))
		(DM ja)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF dann)
				(LK buche)
				(MF
					(NX ich)
					(NX das)
					[01;31m(PX[00m
						(APPR fur)
						[01;31m(NX[00m
							(PPER sie)[01;31m)[00m[01;31m)[00m)[01;31m)[00m
			(NF
				[01;31m(DM[00m
					(NX
						(NN herr)
						(NE obrowski)
						(KON und)
						(NX oborski))[01;31m)[00m)[01;36m)[00m
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK muste)
			(MF
				(NX ich)
				[01;36m(PX[00m
					(ADVX nur)
					(PX von ihnen)[01;36m)[00m
				(ADVX noch)
				(NX die kontonummer))
			(VC haben)
			(NF und die formalitaten))))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'NF'], 'mover info': [('NF', (28, 32))], 'old_family': ['SIMPX', 'SIMPX', 'DM', 'SIMPX', 'NF', 'SIMPX'], 'start left siblings': ['SIMPX', 'SIMPX', 'DM', 'SIMPX'], 'auto preterminals': ('CARD', 'NN', 'VVFIN', 'PPER', 'VVFIN', 'ADV', 'APPRART', 'NN', 'PTKVZ', 'KON', 'VMFIN', 'ADV', 'ADV', 'ART', 'NN', 'VVINF', 'KON', 'VVFIN', 'ADV', 'APPRART', 'NN', 'PTKANT', 'ADV', 'VVFIN', 'PPER', 'PDS', 'APPR', 'PPER', 'NN', 'NE', 'KON', 'NE', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'APPR', 'PPER', 'ADV', 'ART', 'NN', 'VAINF', 'KON', 'ART', 'NN'), 'start right siblings': ['SIMPX'], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (0, 46), 'movers': ['NF'], 'old_parent': 'TURN', 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SIMPX dreieinhalb stunden fahren sie)
		(SIMPX
			[01;36m(SIMPX[00m
				[01;31m(SIMPX[00m
					(LK kommen)
					(MF dann am hauptbahnhof)
					(VC an)[01;31m)[00m
				[01;36m(SIMPX[00m
					(KON und)
					(LKMVC konnen ja dann ein taxi nehmen)[01;36m)[00m[01;36m)[00m
			(KON und)
			(LKM
				(LK kommen)
				(MF
					[01;31m(PX[00m
						(ADVX direkt)
						[01;36m(PX[00m
							(APPRART zum)
							(NX hotel)[01;36m)[00m[01;31m)[00m)))
		(DM ja)
		(SIMPX
			(VF dann)
			(LK buche)
			(MF
				(NX ich)
				(NX das)
				[01;31m(PX[00m
					(APPR fur)
					[01;31m(NX[00m
						(PPER sie)[01;31m)[00m[01;31m)[00m)
			(NF
				[01;31m(DM[00m
					(NX
						(NN herr)
						(NE obrowski)
						(KON und)
						(NX oborski))[01;31m)[00m))
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK muste)
			(MF
				(NX ich)
				[01;36m(PX[00m
					(ADVX nur)
					(PX von ihnen)[01;36m)[00m
				(ADVX noch)
				(NX die kontonummer))
			(VC haben)
			(NF und die formalitaten))))
Step:Co-ordination
{'new_parent': 'SIMPX', 'new_family': ['LK', 'MF', 'VC', 'KON', 'LKMVC'], 'mover info': [('KON', (9, 10)), ('LKMVC', (10, 16))], 'old_family': ['SIMPX', 'KON', 'LKMVC', 'KON', 'LKM'], 'start left siblings': ['SIMPX'], 'auto preterminals': ('VVFIN', 'ADV', 'APPRART', 'NN', 'PTKVZ', 'KON', 'VMFIN', 'ADV', 'ADV', 'ART', 'NN', 'VVINF', 'KON', 'VVFIN', 'ADV', 'APPRART', 'NN'), 'start right siblings': ['KON', 'LKM'], 'end left siblings': ['LK', 'MF', 'VC'], 'auto preterminal span': (4, 21), 'movers': ['KON', 'LKMVC'], 'old_parent': 'SIMPX', 'end right siblings': [], 'classified_type': 'Co-ordination', 'type': 'move'}
(TOP
	(TURN
		(SIMPX dreieinhalb stunden fahren sie)
		(SIMPX
			(SIMPX
				(LK kommen)
				(MF dann am hauptbahnhof)
				(VC an)
				[01;36m(SIMPX[00m
					(KON und)
					(LKMVC konnen ja dann ein taxi nehmen)[01;36m)[00m)
			(KON und)
			(LKM
				(LK kommen)
				(MF
					[01;31m(PX[00m
						(ADVX direkt)
						[01;36m(PX[00m
							(APPRART zum)
							(NX hotel)[01;36m)[00m[01;31m)[00m)))
		(DM ja)
		(SIMPX
			(VF dann)
			(LK buche)
			(MF
				(NX ich)
				(NX das)
				[01;31m(PX[00m
					(APPR fur)
					[01;31m(NX[00m
						(PPER sie)[01;31m)[00m[01;31m)[00m)
			(NF
				[01;31m(DM[00m
					(NX
						(NN herr)
						(NE obrowski)
						(KON und)
						(NX oborski))[01;31m)[00m))
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK muste)
			(MF
				(NX ich)
				[01;36m(PX[00m
					(ADVX nur)
					(PX von ihnen)[01;36m)[00m
				(ADVX noch)
				(NX die kontonummer))
			(VC haben)
			(NF und die formalitaten))))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['ADVX', 'PX'], 'mover info': [('ADVX', (18, 19))], 'old_family': ['ADVX', 'APPRART', 'NX'], 'start left siblings': [], 'auto preterminals': ('ADV', 'APPRART', 'NN'), 'start right siblings': ['APPRART', 'NX'], 'end left siblings': [], 'auto preterminal span': (18, 21), 'movers': ['ADVX'], 'old_parent': 'PX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['PX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SIMPX dreieinhalb stunden fahren sie)
		(SIMPX
			(SIMPX
				(LK kommen)
				(MF dann am hauptbahnhof)
				(VC an)
				[01;36m(SIMPX[00m
					(KON und)
					(LKMVC konnen ja dann ein taxi nehmen)[01;36m)[00m)
			(KON und)
			(LKM kommen direkt zum hotel))
		(DM ja)
		(SIMPX
			(VF dann)
			(LK buche)
			(MF
				(NX ich)
				(NX das)
				[01;31m(PX[00m
					(APPR fur)
					[01;31m(NX[00m
						(PPER sie)[01;31m)[00m[01;31m)[00m)
			(NF
				[01;31m(DM[00m
					(NX
						(NN herr)
						(NE obrowski)
						(KON und)
						(NX oborski))[01;31m)[00m))
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK muste)
			(MF
				(NX ich)
				[01;36m(PX[00m
					(ADVX nur)
					(PX von ihnen)[01;36m)[00m
				(ADVX noch)
				(NX die kontonummer))
			(VC haben)
			(NF und die formalitaten))))
Step:UNSET add
{'subtrees': ['KON', 'LKMVC'], 'family': ['LK', 'MF', 'VC', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'VMFIN', 'ADV', 'ADV', 'ART', 'NN', 'VVINF'), 'right siblings': [], 'left siblings': [(LK (VXFIN (VVFIN kommen))), (MF (ADVX (ADV dann)) (PX (APPRART am) (NX (NN hauptbahnhof)))), (VC (PTKVZ an))], 'auto preterminal span': (9, 16), 'span': (9, 16), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SIMPX dreieinhalb stunden fahren sie)
		(SIMPX kommen dann am hauptbahnhof an und konnen ja dann ein taxi nehmen und kommen direkt zum hotel)
		(DM ja)
		(SIMPX
			(VF dann)
			(LK buche)
			(MF
				(NX ich)
				(NX das)
				[01;31m(PX[00m
					(APPR fur)
					[01;31m(NX[00m
						(PPER sie)[01;31m)[00m[01;31m)[00m)
			(NF
				[01;31m(DM[00m
					(NX
						(NN herr)
						(NE obrowski)
						(KON und)
						(NX oborski))[01;31m)[00m))
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK muste)
			(MF
				(NX ich)
				[01;36m(PX[00m
					(ADVX nur)
					(PX von ihnen)[01;36m)[00m
				(ADVX noch)
				(NX die kontonummer))
			(VC haben)
			(NF und die formalitaten))))
Step:PP Attachment
{'subtrees': ['ADVX', 'PX'], 'family': ['NX', 'PX', 'ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'APPR', 'PPER'), 'right siblings': [(ADVX (ADV noch)), (NX (ART die) (NN kontonummer))], 'left siblings': [(NX (PPER ich))], 'auto preterminal span': (36, 39), 'span': (36, 39), 'parent': 'MF', 'label': 'PX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(SIMPX dreieinhalb stunden fahren sie)
		(SIMPX kommen dann am hauptbahnhof an und konnen ja dann ein taxi nehmen und kommen direkt zum hotel)
		(DM ja)
		(SIMPX
			(VF dann)
			(LK buche)
			(MF
				(NX ich)
				(NX das)
				[01;31m(PX[00m
					(APPR fur)
					[01;31m(NX[00m
						(PPER sie)[01;31m)[00m[01;31m)[00m)
			(NF
				[01;31m(DM[00m
					(NX
						(NN herr)
						(NE obrowski)
						(KON und)
						(NX oborski))[01;31m)[00m))
		(SIMPX und dann muste ich nur von ihnen noch die kontonummer haben und die formalitaten)))
Step:UNSET remove
{'subtrees': ['APPR', 'NX'], 'family': ['NX', 'NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'PDS', 'APPR', 'PPER'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (24, 28), 'span': (26, 28), 'left siblings': ['NX', 'NX'], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX dreieinhalb stunden fahren sie)
		(SIMPX kommen dann am hauptbahnhof an und konnen ja dann ein taxi nehmen und kommen direkt zum hotel)
		(DM ja)
		(SIMPX
			(VF dann)
			(LK buche)
			(MF
				(NX ich)
				(NX das)
				(APPR fur)
				[01;31m(NX[00m
					(PPER sie)[01;31m)[00m)
			(NF
				[01;31m(DM[00m
					(NX
						(NN herr)
						(NE obrowski)
						(KON und)
						(NX oborski))[01;31m)[00m))
		(SIMPX und dann muste ich nur von ihnen noch die kontonummer haben und die formalitaten)))
Step:Single Word Phrase
{'subtrees': ['PPER'], 'family': ['NX', 'NX', 'APPR', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('PPER', 'PDS', 'APPR', 'PPER'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (24, 28), 'span': (27, 28), 'left siblings': ['NX', 'NX', 'APPR'], 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX dreieinhalb stunden fahren sie)
		(SIMPX kommen dann am hauptbahnhof an und konnen ja dann ein taxi nehmen und kommen direkt zum hotel)
		(DM ja)
		(SIMPX
			(VF dann)
			(LK buche)
			(MF ich das fur sie)
			(NF
				[01;31m(DM[00m
					(NX
						(NN herr)
						(NE obrowski)
						(KON und)
						(NX oborski))[01;31m)[00m))
		(SIMPX und dann muste ich nur von ihnen noch die kontonummer haben und die formalitaten)))
Step:Unary
{'subtrees': ['NX'], 'family': ['DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'NE', 'KON', 'NE'), 'right siblings': [], 'parent': 'NF', 'auto preterminal span': (28, 32), 'span': (28, 32), 'left siblings': [], 'label': 'DM', 'classified_type': 'Unary', 'type': 'remove'}
(TOP dreieinhalb stunden fahren sie kommen dann am hauptbahnhof an und konnen ja dann ein taxi nehmen und kommen direkt zum hotel ja dann buche ich das fur sie herr obrowski und oborski und dann muste ich nur von ihnen noch die kontonummer haben und die formalitaten)

Sentence 585:
9 Initial errors
0 on fringe, 5 iterations
3 Error:Co-ordination
3 Error:Co-ordination
1 Error:Single Word Phrase
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX dann schicke ich ihnen die quittung zu)
		[01;36m(SIMPX[00m
			[01;31m(DM[00m
				[01;36m(KOORD[00m
					(KON und)[01;36m)[00m
				[01;36m(DM[00m
					(PTKANT ja)[01;36m)[00m[01;31m)[00m
			(SIMPX dann verbleibe ich so)[01;36m)[00m
		[01;31m(DM[00m
			[01;31m(NX[00m
				(NX vielen dank)
				[01;33m(PX[00m (PX fur die buchung)[01;31m)[00m[01;31m)[00m
		[01;31m(DM[00m
			[01;31m(PX[00m
				(KON und)
				(PX auf wiederhoren)[01;31m)[00m[01;31m)[00m)) [01;33mPX)[00m
Step:Co-ordination
{'new_parent': 'TURN', 'new_family': ['SIMPX', 'KON', 'DM', 'SIMPX', 'DM', 'DM'], 'mover info': [('KON', (7, 8))], 'old_family': ['KON', 'PTKANT'], 'start left siblings': [], 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'PPER', 'ART', 'NN', 'PTKVZ', 'KON', 'PTKANT', 'ADV', 'VVFIN', 'PPER', 'ADV', 'PIDAT', 'NN', 'APPR', 'ART', 'NN', 'KON', 'APPR', 'NN'), 'start right siblings': ['PTKANT'], 'end left siblings': ['SIMPX'], 'auto preterminal span': (0, 21), 'adding node already present': False, 'movers': ['KON'], 'old_parent': 'DM', 'POS confusion': ('KON', 'KON'), 'added and moved': True, 'end right siblings': ['DM', 'SIMPX', 'DM', 'DM'], 'classified_type': 'Co-ordination', 'type': 'move', 'added label': 'SIMPX'}
(TOP
	(TURN
		(SIMPX dann schicke ich ihnen die quittung zu)
		(SIMPX
			[01;36m(KOORD[00m
				(KON und)[01;36m)[00m
			(DM ja)
			(SIMPX dann verbleibe ich so))
		[01;31m(DM[00m
			[01;31m(NX[00m
				(NX vielen dank)
				[01;33m(PX[00m (PX fur die buchung)[01;31m)[00m[01;31m)[00m
		[01;31m(DM[00m
			[01;31m(PX[00m
				(KON und)
				(PX auf wiederhoren)[01;31m)[00m[01;31m)[00m)) [01;33mPX)[00m
Step:Co-ordination
{'new_parent': 'PX', 'new_family': ['PX', 'KON', 'PX'], 'mover info': [('PX', (15, 18))], 'old_family': ['NX', 'PX'], 'start left siblings': ['NX'], 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'PPER', 'ART', 'NN', 'PTKVZ', 'KON', 'PTKANT', 'ADV', 'VVFIN', 'PPER', 'ADV', 'PIDAT', 'NN', 'APPR', 'ART', 'NN', 'KON', 'APPR', 'NN'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 21), 'movers': ['PX'], 'old_parent': 'NX', 'end right siblings': ['KON', 'PX'], 'classified_type': 'Co-ordination', 'type': 'move'}
(TOP
	(TURN
		(SIMPX dann schicke ich ihnen die quittung zu)
		(SIMPX
			[01;36m(KOORD[00m
				(KON und)[01;36m)[00m
			(DM ja)
			(SIMPX dann verbleibe ich so))
		[01;31m(DM[00m
			(NX
				(PIDAT vielen)
				(NN dank))[01;31m)[00m
		[01;31m(DM[00m
			(PX
				(PX fur die buchung)
				(KON und)
				(PX auf wiederhoren))[01;31m)[00m))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['KOORD', 'DM', 'SIMPX'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON',), 'right siblings': [(DM (PTKANT ja)), (SIMPX (VF (ADVX (ADV dann))) (LK (VXFIN (VVFIN verbleibe))) (MF (NX (PPER ich)) (ADVX (ADV so))))], 'left siblings': [], 'auto preterminal span': (7, 8), 'span': (7, 8), 'parent': 'SIMPX', 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(SIMPX dann schicke ich ihnen die quittung zu)
		(SIMPX und ja dann verbleibe ich so)
		[01;31m(DM[00m
			(NX
				(PIDAT vielen)
				(NN dank))[01;31m)[00m
		[01;31m(DM[00m
			(PX
				(PX fur die buchung)
				(KON und)
				(PX auf wiederhoren))[01;31m)[00m))
Step:Unary
{'subtrees': ['NX'], 'family': ['SIMPX', 'SIMPX', 'DM', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'PPER', 'ART', 'NN', 'PTKVZ', 'KON', 'PTKANT', 'ADV', 'VVFIN', 'PPER', 'ADV', 'PIDAT', 'NN', 'APPR', 'ART', 'NN', 'KON', 'APPR', 'NN'), 'right siblings': ['DM'], 'parent': 'TURN', 'auto preterminal span': (0, 21), 'span': (13, 15), 'left siblings': ['SIMPX', 'SIMPX'], 'label': 'DM', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX dann schicke ich ihnen die quittung zu)
		(SIMPX und ja dann verbleibe ich so)
		(NX vielen dank)
		[01;31m(DM[00m
			(PX
				(PX fur die buchung)
				(KON und)
				(PX auf wiederhoren))[01;31m)[00m))
Step:Unary
{'subtrees': ['PX'], 'family': ['SIMPX', 'SIMPX', 'NX', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'PPER', 'ART', 'NN', 'PTKVZ', 'KON', 'PTKANT', 'ADV', 'VVFIN', 'PPER', 'ADV', 'PIDAT', 'NN', 'APPR', 'ART', 'NN', 'KON', 'APPR', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 21), 'span': (15, 21), 'left siblings': ['SIMPX', 'SIMPX', 'NX'], 'label': 'DM', 'classified_type': 'Unary', 'type': 'remove'}
(TOP dann schicke ich ihnen die quittung zu und ja dann verbleibe ich so vielen dank fur die buchung und auf wiederhoren)

Sentence 586:
4 Initial errors
0 on fringe, 4 iterations
1 Error:Clause Attachment
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:NP Internal Structure
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM schonen guten tag)
		[01;31m(SIMPX[00m
			(VF hier)
			(LK spricht)
			(MF matthias oborski)[01;31m)[00m
		(SIMPX ich wollte sie fragen wegen einer geschaftsreise nach hannover)
		[01;36m(SIMPX[00m
			(SIMPX und zwar muste ich im august vom funfzehnten bis zum siebzehnten in hannover sein)
			(SIMPX
				(KOORD und)
				(VF ich)
				(LK hatte)
				(VC vor)
				(NF
					(SIMPX
						(MF
							(PX mit dem zug)
							(PX
								[01;31m(PX[00m
									(APPR ab)
									[01;33m(NX[00m (NX bonn)[01;31m)[00m
								(NX hannover))) [01;33mNX)[00m
						(VC zu fahren))))[01;36m)[00m))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'ADV', 'VMFIN', 'PPER', 'APPRART', 'NN', 'APPRART', 'NN', 'APPR', 'APPRART', 'NN', 'APPR', 'NE', 'VAINF', 'KON', 'PPER', 'VAFIN', 'PTKVZ', 'APPR', 'ART', 'NN', 'APPR', 'NE', 'NE', 'PTKZU', 'VVINF'), 'right siblings': [], 'left siblings': [(DM (PTKANT ja)), (DM (NX (ADJX (ADJA schonen)) (ADJX (ADJA guten)) (NN tag))), (SIMPX (VF (ADVX (ADV hier))) (LK (VXFIN (VVFIN spricht))) (MF (NX (NE matthias) (NE oborski)))), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VMFIN wollte))) (MF (NX (PPER sie))) (VC (VXINF (VVINF fragen))) (NF (PX (APPR wegen) (NX (NX (ART einer) (NN geschaftsreise)) (PX (APPR nach) (NX (NE hannover)))))))], 'auto preterminal span': (17, 43), 'span': (17, 43), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM schonen guten tag)
		[01;31m(SIMPX[00m
			(VF hier)
			(LK spricht)
			(MF matthias oborski)[01;31m)[00m
		(SIMPX ich wollte sie fragen wegen einer geschaftsreise nach hannover)
		(SIMPX
			(SIMPX und zwar muste ich im august vom funfzehnten bis zum siebzehnten in hannover sein)
			(SIMPX
				(KOORD und)
				(VF ich)
				(LK hatte)
				(VC vor)
				(NF
					(SIMPX
						(MF
							(PX mit dem zug)
							(PX
								[01;31m(PX[00m
									(APPR ab)
									[01;33m(NX[00m (NX bonn)[01;31m)[00m
								(NX hannover))) [01;33mNX)[00m
						(VC zu fahren)))))))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADJA', 'ADJA', 'NN', 'ADV', 'VVFIN', 'NE', 'NE', 'PPER', 'VMFIN', 'PPER', 'VVINF', 'APPR', 'ART', 'NN', 'APPR', 'NE', 'KON', 'ADV', 'VMFIN', 'PPER', 'APPRART', 'NN', 'APPRART', 'NN', 'APPR', 'APPRART', 'NN', 'APPR', 'NE', 'VAINF', 'KON', 'PPER', 'VAFIN', 'PTKVZ', 'APPR', 'ART', 'NN', 'APPR', 'NE', 'NE', 'PTKZU', 'VVINF'), 'right siblings': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 43), 'span': (4, 8), 'left siblings': ['DM', 'DM'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM schonen guten tag)
		(VF hier)
		(LK spricht)
		(MF matthias oborski)
		(SIMPX ich wollte sie fragen wegen einer geschaftsreise nach hannover)
		(SIMPX
			(SIMPX und zwar muste ich im august vom funfzehnten bis zum siebzehnten in hannover sein)
			(SIMPX
				(KOORD und)
				(VF ich)
				(LK hatte)
				(VC vor)
				(NF
					(SIMPX
						(MF
							(PX mit dem zug)
							(PX
								[01;31m(PX[00m
									(APPR ab)
									[01;33m(NX[00m (NX bonn)[01;31m)[00m
								(NX hannover))) [01;33mNX)[00m
						(VC zu fahren)))))))
Step:UNSET remove
{'subtrees': ['APPR', 'NX'], 'family': ['PX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'NE', 'NE'), 'right siblings': ['NX'], 'parent': 'PX', 'auto preterminal span': (38, 41), 'span': (38, 40), 'left siblings': [], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM schonen guten tag)
		(VF hier)
		(LK spricht)
		(MF matthias oborski)
		(SIMPX ich wollte sie fragen wegen einer geschaftsreise nach hannover)
		(SIMPX
			(SIMPX und zwar muste ich im august vom funfzehnten bis zum siebzehnten in hannover sein)
			(SIMPX
				(KOORD und)
				(VF ich)
				(LK hatte)
				(VC vor)
				(NF
					(SIMPX
						(MF
							(PX mit dem zug)
							(PX
								(APPR ab)
								[01;36m(NX[00m
									(NX bonn)
									(NX hannover)[01;36m)[00m))
						(VC zu fahren)))))))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['APPR', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NE', 'NE'), 'right siblings': [], 'left siblings': [(APPR ab)], 'auto preterminal span': (39, 41), 'span': (39, 41), 'parent': 'PX', 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'add'}
(TOP ja schonen guten tag hier spricht matthias oborski ich wollte sie fragen wegen einer geschaftsreise nach hannover und zwar muste ich im august vom funfzehnten bis zum siebzehnten in hannover sein und ich hatte vor mit dem zug ab bonn hannover zu fahren)

Sentence 587:
2 Initial errors
0 on fringe, 2 iterations
1 Error:UNSET add
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			[01;36m(PX[00m
				(KOORD und)
				[01;31m(LV[00m
					(PX
						(APPR mit)
						(NX der zugverbindung))[01;31m)[00m[01;36m)[00m
			(VF wie lange)
			(LK wird)
			(MF das)
			(VC dauern))))
Step:UNSET add
{'subtrees': ['KOORD', 'LV'], 'family': ['PX', 'VF', 'LK', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'APPR', 'ART', 'NN'), 'right siblings': [(VF (ADJX (ADVX (PWAV wie)) (ADJD lange))), (LK (VXFIN (VAFIN wird))), (MF (NX (PDS das))), (VC (VXINF (VVINF dauern)))], 'left siblings': [], 'auto preterminal span': (1, 5), 'span': (1, 5), 'parent': 'SIMPX', 'label': 'PX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(PX
				(KOORD und)
				[01;31m(LV[00m
					(PX
						(APPR mit)
						(NX der zugverbindung))[01;31m)[00m)
			(VF wie lange)
			(LK wird)
			(MF das)
			(VC dauern))))
Step:Unary
{'subtrees': ['PX'], 'family': ['KOORD', 'LV'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'APPR', 'ART', 'NN'), 'right siblings': [], 'parent': 'PX', 'auto preterminal span': (1, 5), 'span': (2, 5), 'left siblings': ['KOORD'], 'label': 'LV', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja und mit der zugverbindung wie lange wird das dauern)

Sentence 588:
6 Initial errors
0 on fringe, 3 iterations
4 Error:NP Attachment
1 Error:Modifier Attachment
1 Error:NP Internal Structure
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		[01;31m(NX[00m
			(KON und)
			(NX der name)
			(ADVX noch)
			(ADVX mal)[01;31m)[00m
		[01;36m(NX[00m
			[01;31m(NX[00m [01;33m(NX[00m
				(BS o)
				(BS b)
				(BS o)
				(BS r)
				(BS s)
				(BS k)
				(BS i)[01;31m)[00m
			[01;31m(NX[00m
				[01;31m(NX[00m
					(NE matthias)[01;31m)[00m [01;33mNX)[00m
				(PX mit t t h)[01;31m)[00m[01;36m)[00m
		(SIMPX brauchen sie sonst noch etwas)))
Step:NP Attachment
{'new_parent': 'NX', 'new_family': ['NX', 'NE'], 'mover info': [('NX', (6, 13))], 'old_family': ['DM', 'NX', 'NX', 'NX', 'SIMPX'], 'start left siblings': ['DM', 'NX'], 'auto preterminals': ('PTKANT', 'KON', 'ART', 'NN', 'ADV', 'ADV', 'BS', 'BS', 'BS', 'BS', 'BS', 'BS', 'BS', 'NE', 'APPR', 'BS', 'BS', 'BS', 'VVFIN', 'PPER', 'ADV', 'ADV', 'PIS'), 'start right siblings': ['NX', 'SIMPX'], 'end left siblings': [], 'auto preterminal span': (0, 23), 'movers': ['NX'], 'old_parent': 'TURN', 'end right siblings': ['NE'], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		[01;31m(NX[00m
			(KON und)
			(NX der name)
			(ADVX noch)
			(ADVX mal)[01;31m)[00m
		(NX
			(NX
				[01;31m(NX[00m
					(BS o)
					(BS b)
					(BS o)
					(BS r)
					(BS s)
					(BS k)
					(BS i)[01;31m)[00m
				(NE matthias))
			(PX mit t t h))
		(SIMPX brauchen sie sonst noch etwas)))
Step:Modifier Attachment
{'subtrees': ['KON', 'NX', 'ADVX', 'ADVX'], 'family': ['DM', 'NX', 'NX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'KON', 'ART', 'NN', 'ADV', 'ADV', 'BS', 'BS', 'BS', 'BS', 'BS', 'BS', 'BS', 'NE', 'APPR', 'BS', 'BS', 'BS', 'VVFIN', 'PPER', 'ADV', 'ADV', 'PIS'), 'right siblings': ['NX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 23), 'span': (1, 6), 'left siblings': ['DM'], 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(KON und)
		(NX der name)
		(ADVX noch)
		(ADVX mal)
		(NX
			(NX
				[01;31m(NX[00m
					(BS o)
					(BS b)
					(BS o)
					(BS r)
					(BS s)
					(BS k)
					(BS i)[01;31m)[00m
				(NE matthias))
			(PX mit t t h))
		(SIMPX brauchen sie sonst noch etwas)))
Step:NP Internal Structure
{'subtrees': ['BS', 'BS', 'BS', 'BS', 'BS', 'BS', 'BS'], 'family': ['NX', 'NE'], 'over_word': False, 'over words': True, 'auto preterminals': ('BS', 'BS', 'BS', 'BS', 'BS', 'BS', 'BS', 'NE'), 'right siblings': ['NE'], 'parent': 'NX', 'auto preterminal span': (6, 14), 'span': (6, 13), 'left siblings': [], 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'remove'}
(TOP ja und der name noch mal o b o r s k i matthias mit t t h brauchen sie sonst noch etwas)

Sentence 589:
5 Initial errors
0 on fringe, 4 iterations
2 Error:NP Attachment
1 Error:Single Word Phrase
1 Error:UNSET remove
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(NX[00m
			[01;31m(NX[00m
				[01;31m(ADJX[00m
					(FM first)[01;31m)[00m
				(FM class)[01;31m)[00m
			[01;36m(NX[00m
				(NN reiseburo)[01;36m)[00m[01;31m)[00m
		[01;31m(DM[00m
			(NX
				(NE schmidt))[01;31m)[00m
		(DM guten tag)
		(SIMPX womit kann ich ihnen helfen)))
Step:NP Attachment
{'new_parent': 'TURN', 'new_family': ['NX', 'NX', 'DM', 'DM', 'SIMPX'], 'mover info': [('NX', (0, 2))], 'old_family': ['NX', 'NN'], 'start left siblings': [], 'auto preterminals': ('FM', 'FM', 'NN', 'NE', 'ADJA', 'NN', 'PWAV', 'VMFIN', 'PPER', 'PPER', 'VVINF'), 'start right siblings': ['NN'], 'end left siblings': [], 'auto preterminal span': (0, 11), 'movers': ['NX'], 'old_parent': 'NX', 'end right siblings': ['NX', 'DM', 'DM', 'SIMPX'], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;31m(NX[00m
			[01;31m(ADJX[00m
				(FM first)[01;31m)[00m
			(FM class)[01;31m)[00m
		(NX reiseburo)
		[01;31m(DM[00m
			(NX
				(NE schmidt))[01;31m)[00m
		(DM guten tag)
		(SIMPX womit kann ich ihnen helfen)))
Step:Single Word Phrase
{'subtrees': ['FM'], 'family': ['ADJX', 'FM'], 'over_word': True, 'over words': True, 'auto preterminals': ('FM', 'FM'), 'right siblings': ['FM'], 'parent': 'NX', 'auto preterminal span': (0, 2), 'span': (0, 1), 'left siblings': [], 'label': 'ADJX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		[01;31m(NX[00m
			(FM first)
			(FM class)[01;31m)[00m
		(NX reiseburo)
		[01;31m(DM[00m
			(NX
				(NE schmidt))[01;31m)[00m
		(DM guten tag)
		(SIMPX womit kann ich ihnen helfen)))
Step:UNSET remove
{'subtrees': ['FM', 'FM'], 'family': ['NX', 'NX', 'DM', 'DM', 'SIMPX'], 'over_word': False, 'over words': True, 'auto preterminals': ('FM', 'FM', 'NN', 'NE', 'ADJA', 'NN', 'PWAV', 'VMFIN', 'PPER', 'PPER', 'VVINF'), 'right siblings': ['NX', 'DM', 'DM', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 11), 'span': (0, 2), 'left siblings': [], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(FM first)
		(FM class)
		(NX reiseburo)
		[01;31m(DM[00m
			(NX
				(NE schmidt))[01;31m)[00m
		(DM guten tag)
		(SIMPX womit kann ich ihnen helfen)))
Step:Unary
{'subtrees': ['NX'], 'family': ['FM', 'FM', 'NX', 'DM', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('FM', 'FM', 'NN', 'NE', 'ADJA', 'NN', 'PWAV', 'VMFIN', 'PPER', 'PPER', 'VVINF'), 'right siblings': ['DM', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 11), 'span': (3, 4), 'left siblings': ['FM', 'FM', 'NX'], 'label': 'DM', 'classified_type': 'Unary', 'type': 'remove'}
(TOP first class reiseburo schmidt guten tag womit kann ich ihnen helfen)

Sentence 590:
25 Initial errors
0 on fringe, 15 iterations
4 Error:Co-ordination
3 Error:Co-ordination
2 Error:Different label
2 Error:Clause Attachment
2 Error:UNSET move
2 Error:PP Attachment
2 Error:Modifier Attachment
1 Error:PP Attachment
1 Error:PP Attachment
1 Error:UNSET add
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF da)
				(LK ware)
				[01;31m(MF[00m
					(ADVX noch)
					[01;36m(NX[00m
						(NX die frage)
						[01;36m(PX[00m
							(ADVX naturlich)
							(PX nach dem hotel)[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				(C ob)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX sie)
					[01;33m(NX[00m (NX was)[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				[01;31m(C[00m
					[01;31m(NX[00m
						(NX was) [01;33mNX)[00m
						[01;33m(PX[00m (PX fur einen hotelwunsch)[01;31m)[00m[01;31m)[00m
				[01;31m(MF[00m
					(NX
						(PPER sie))[01;31m)[00m [01;33mPX) MF)[00m
				(VC haben)[01;31m)[00m[01;36m)[00m
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(C ob)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX sie)
					[01;31m(ADJX[00m
						[01;36m(ADJX[00m
							(ADJX zentral)
							(KON oder)
							(PX am flughafen) [01;33mMF) SIMPX)[00m[01;36m)[00m
						(KON oder)[01;31m)[00m[01;31m)[00m[01;31m)[00m
			(DM ja)
			(SIMPX wenn sie mit der bahn kommen)
			[01;36m(NF[00m [01;31m(PX[00m
				(ADVX dann)
				[01;36m(ADVX[00m
					(ADVX naturlich)
					[01;31m(ADVX[00m
						(PTKNEG nicht)[01;31m)[00m[01;36m)[00m
				(PX am flughafen)[01;31m)[00m[01;36m)[00m[01;36m)[00m))
Step:Co-ordination
{'new_parent': 'SIMPX', 'new_family': ['C', 'MF', 'KON'], 'mover info': [('KON', (25, 26))], 'old_family': ['ADJX', 'KON', 'PX', 'KON'], 'start left siblings': ['ADJX', 'KON', 'PX'], 'auto preterminals': ('KOUS', 'PPER', 'ADJD', 'KON', 'APPRART', 'NN', 'KON'), 'start right siblings': [], 'end left siblings': ['C', 'MF'], 'auto preterminal span': (19, 26), 'movers': ['KON'], 'old_parent': 'ADJX', 'POS confusion': ('KON', 'KON'), 'end right siblings': [], 'classified_type': 'Co-ordination', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF da)
				(LK ware)
				[01;31m(MF[00m
					(ADVX noch)
					[01;36m(NX[00m
						(NX die frage)
						[01;36m(PX[00m
							(ADVX naturlich)
							(PX nach dem hotel)[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				(C ob)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX sie)
					[01;33m(NX[00m (NX was)[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				[01;31m(C[00m
					[01;31m(NX[00m
						(NX was) [01;33mNX)[00m
						[01;33m(PX[00m (PX fur einen hotelwunsch)[01;31m)[00m[01;31m)[00m
				[01;31m(MF[00m
					(NX
						(PPER sie))[01;31m)[00m [01;33mPX) MF)[00m
				(VC haben)[01;31m)[00m[01;36m)[00m
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				[01;36m(SIMPX[00m
					(C ob)
					(MF sie zentral oder am flughafen)[01;36m)[00m
				(KON oder)[01;31m)[00m
			(DM ja)
			(SIMPX wenn sie mit der bahn kommen)
			[01;36m(NF[00m [01;31m(PX[00m
				(ADVX dann)
				[01;36m(ADVX[00m
					(ADVX naturlich)
					[01;31m(ADVX[00m
						(PTKNEG nicht)[01;31m)[00m[01;36m)[00m
				(PX am flughafen)[01;31m)[00m[01;36m)[00m[01;36m)[00m))
Step:Co-ordination
{'new_parent': 'TURN', 'new_family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'KON', 'DM', 'SIMPX', 'PX'], 'mover info': [('KON', (25, 26))], 'old_family': ['C', 'MF', 'KON'], 'start left siblings': ['C', 'MF'], 'auto preterminals': ('PTKANT', 'ADV', 'VAFIN', 'ADV', 'ART', 'NN', 'ADV', 'APPR', 'ART', 'NN', 'KOUS', 'PPER', 'PIS', 'PWS', 'APPR', 'ART', 'NN', 'PPER', 'VAFIN', 'KOUS', 'PPER', 'ADJD', 'KON', 'APPRART', 'NN', 'KON', 'PTKANT', 'KOUS', 'PPER', 'APPR', 'ART', 'NN', 'VVFIN', 'ADV', 'ADV', 'PTKNEG', 'APPRART', 'NN'), 'start right siblings': [], 'end left siblings': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'auto preterminal span': (0, 38), 'adding node already present': False, 'movers': ['KON'], 'old_parent': 'SIMPX', 'POS confusion': ('KON', 'KON'), 'added and moved': True, 'end right siblings': ['DM', 'SIMPX', 'PX'], 'classified_type': 'Co-ordination', 'type': 'move', 'added label': 'ADVX'}
(TOP
	(TURN
		(DM ja)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF da)
				(LK ware)
				[01;31m(MF[00m
					(ADVX noch)
					[01;36m(NX[00m
						(NX die frage)
						[01;36m(PX[00m
							(ADVX naturlich)
							(PX nach dem hotel)[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				(C ob)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX sie)
					[01;33m(NX[00m (NX was)[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				[01;31m(C[00m
					[01;31m(NX[00m
						(NX was) [01;33mNX)[00m
						[01;33m(PX[00m (PX fur einen hotelwunsch)[01;31m)[00m[01;31m)[00m
				[01;31m(MF[00m
					(NX
						(PPER sie))[01;31m)[00m [01;33mPX) MF)[00m
				(VC haben)[01;31m)[00m[01;36m)[00m
		(SIMPX
			(SIMPX ob sie zentral oder am flughafen)
			(KON oder)
			(DM ja)
			(SIMPX wenn sie mit der bahn kommen)
			[01;36m(NF[00m [01;31m(PX[00m
				(ADVX dann)
				[01;36m(ADVX[00m
					(ADVX naturlich)
					[01;31m(ADVX[00m
						(PTKNEG nicht)[01;31m)[00m[01;36m)[00m
				(PX am flughafen)[01;31m)[00m[01;36m)[00m)))
Step:Different label
{'family': ['SIMPX', 'KON', 'DM', 'SIMPX', 'NF'], 'auto preterminal span': (33, 38), 'span': (33, 38), 'subtrees': ['ADVX', 'ADVX', 'ADVX', 'PX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('ADV', 'ADV', 'PTKNEG', 'APPRART', 'NN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('PX', 'NF')}
(TOP
	(TURN
		(DM ja)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF da)
				(LK ware)
				[01;31m(MF[00m
					(ADVX noch)
					[01;36m(NX[00m
						(NX die frage)
						[01;36m(PX[00m
							(ADVX naturlich)
							(PX nach dem hotel)[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				(C ob)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX sie)
					[01;33m(NX[00m (NX was)[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				[01;31m(C[00m
					[01;31m(NX[00m
						(NX was) [01;33mNX)[00m
						[01;33m(PX[00m (PX fur einen hotelwunsch)[01;31m)[00m[01;31m)[00m
				[01;31m(MF[00m
					(NX
						(PPER sie))[01;31m)[00m [01;33mPX) MF)[00m
				(VC haben)[01;31m)[00m[01;36m)[00m
		(SIMPX
			(SIMPX ob sie zentral oder am flughafen)
			(KON oder)
			(DM ja)
			(SIMPX wenn sie mit der bahn kommen)
			(NF
				(ADVX dann)
				[01;36m(ADVX[00m
					(ADVX naturlich)
					[01;31m(ADVX[00m
						(PTKNEG nicht)[01;31m)[00m[01;36m)[00m
				(PX am flughafen)))))
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['SIMPX', 'SIMPX', 'C', 'MF', 'VC'], 'mover info': [('SIMPX', (1, 10)), ('SIMPX', (10, 13))], 'old_family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'start left siblings': ['DM'], 'auto preterminals': ('PTKANT', 'ADV', 'VAFIN', 'ADV', 'ART', 'NN', 'ADV', 'APPR', 'ART', 'NN', 'KOUS', 'PPER', 'PIS', 'PWS', 'APPR', 'ART', 'NN', 'PPER', 'VAFIN', 'KOUS', 'PPER', 'ADJD', 'KON', 'APPRART', 'NN', 'KON', 'PTKANT', 'KOUS', 'PPER', 'APPR', 'ART', 'NN', 'VVFIN', 'ADV', 'ADV', 'PTKNEG', 'APPRART', 'NN'), 'start right siblings': ['SIMPX', 'SIMPX'], 'end left siblings': [], 'auto preterminal span': (0, 38), 'movers': ['SIMPX', 'SIMPX'], 'old_parent': 'TURN', 'end right siblings': ['C', 'MF', 'VC'], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			[01;31m(SIMPX[00m
				(VF da)
				(LK ware)
				[01;31m(MF[00m
					(ADVX noch)
					[01;36m(NX[00m
						(NX die frage)
						[01;36m(PX[00m
							(ADVX naturlich)
							(PX nach dem hotel)[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				(C ob)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX sie)
					[01;33m(NX[00m (NX was)[01;31m)[00m[01;31m)[00m
			[01;31m(C[00m
				[01;31m(NX[00m
					(NX was) [01;33mNX)[00m
					[01;33m(PX[00m (PX fur einen hotelwunsch)[01;31m)[00m[01;31m)[00m
			[01;31m(MF[00m
				(NX
					(PPER sie))[01;31m)[00m [01;33mPX) MF)[00m
			(VC haben))
		(SIMPX
			(SIMPX ob sie zentral oder am flughafen)
			(KON oder)
			(DM ja)
			(SIMPX wenn sie mit der bahn kommen)
			(NF
				(ADVX dann)
				[01;36m(ADVX[00m
					(ADVX naturlich)
					[01;31m(ADVX[00m
						(PTKNEG nicht)[01;31m)[00m[01;36m)[00m
				(PX am flughafen)))))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['NX', 'NX', 'C', 'MF'], 'mover info': [('C', (13, 17)), ('MF', (17, 18))], 'old_family': ['SIMPX', 'SIMPX', 'C', 'MF', 'VC'], 'start left siblings': ['SIMPX', 'SIMPX'], 'auto preterminals': ('ADV', 'VAFIN', 'ADV', 'ART', 'NN', 'ADV', 'APPR', 'ART', 'NN', 'KOUS', 'PPER', 'PIS', 'PWS', 'APPR', 'ART', 'NN', 'PPER', 'VAFIN'), 'start right siblings': ['VC'], 'end left siblings': ['NX', 'NX'], 'auto preterminal span': (1, 19), 'movers': ['C', 'MF'], 'old_parent': 'SIMPX', 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			[01;31m(SIMPX[00m
				(VF da)
				(LK ware)
				[01;31m(MF[00m
					(ADVX noch)
					[01;36m(NX[00m
						(NX die frage)
						[01;36m(PX[00m
							(ADVX naturlich)
							(PX nach dem hotel)[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				(C ob)
				(MF
					(NX sie)
					[01;33m(NX[00m (NX was)
					[01;31m(C[00m
						[01;31m(NX[00m
							(NX was) [01;33mNX)[00m
							[01;33m(PX[00m (PX fur einen hotelwunsch)[01;31m)[00m[01;31m)[00m
					[01;31m(MF[00m
						(NX
							(PPER sie))[01;31m)[00m)[01;31m)[00m [01;33mPX)[00m
			(VC haben))
		(SIMPX
			(SIMPX ob sie zentral oder am flughafen)
			(KON oder)
			(DM ja)
			(SIMPX wenn sie mit der bahn kommen)
			(NF
				(ADVX dann)
				[01;36m(ADVX[00m
					(ADVX naturlich)
					[01;31m(ADVX[00m
						(PTKNEG nicht)[01;31m)[00m[01;36m)[00m
				(PX am flughafen)))))
Step:PP Attachment
{'new_parent': 'MF', 'new_family': ['PX', 'NX'], 'mover info': [('PX', (14, 17))], 'old_family': ['NX', 'PX'], 'start left siblings': ['NX'], 'auto preterminals': ('PPER', 'PIS', 'PWS', 'APPR', 'ART', 'NN', 'PPER'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (11, 18), 'adding node already present': False, 'movers': ['PX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': ['NX'], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'ADVX'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			[01;31m(SIMPX[00m
				(VF da)
				(LK ware)
				[01;31m(MF[00m
					(ADVX noch)
					[01;36m(NX[00m
						(NX die frage)
						[01;36m(PX[00m
							(ADVX naturlich)
							(PX nach dem hotel)[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				(C ob)
				(MF
					(NX sie)
					[01;36m(NX[00m
						(NX was)
						[01;31m(C[00m
							(NX
								(PWS was))[01;31m)[00m[01;36m)[00m
					(PX
						[01;31m(MF[00m
							(PX fur einen hotelwunsch)
							(NX sie)[01;31m)[00m))[01;31m)[00m
			(VC haben))
		(SIMPX
			(SIMPX ob sie zentral oder am flughafen)
			(KON oder)
			(DM ja)
			(SIMPX wenn sie mit der bahn kommen)
			(NF
				(ADVX dann)
				[01;36m(ADVX[00m
					(ADVX naturlich)
					[01;31m(ADVX[00m
						(PTKNEG nicht)[01;31m)[00m[01;36m)[00m
				(PX am flughafen)))))
Step:Modifier Attachment
{'new_parent': 'ADVX', 'new_family': ['ADVX', 'PTKNEG'], 'mover info': [('ADVX', (34, 35))], 'old_family': ['ADVX', 'ADVX', 'ADVX', 'PX'], 'start left siblings': ['ADVX'], 'auto preterminals': ('ADV', 'ADV', 'PTKNEG', 'APPRART', 'NN'), 'start right siblings': ['ADVX', 'PX'], 'end left siblings': [], 'auto preterminal span': (33, 38), 'movers': ['ADVX'], 'old_parent': 'NF', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['PTKNEG'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			[01;31m(SIMPX[00m
				(VF da)
				(LK ware)
				[01;31m(MF[00m
					(ADVX noch)
					[01;36m(NX[00m
						(NX die frage)
						[01;36m(PX[00m
							(ADVX naturlich)
							(PX nach dem hotel)[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				(C ob)
				(MF
					(NX sie)
					[01;36m(NX[00m
						(NX was)
						[01;31m(C[00m
							(NX
								(PWS was))[01;31m)[00m[01;36m)[00m
					(PX
						[01;31m(MF[00m
							(PX fur einen hotelwunsch)
							(NX sie)[01;31m)[00m))[01;31m)[00m
			(VC haben))
		(SIMPX ob sie zentral oder am flughafen oder ja wenn sie mit der bahn kommen dann naturlich nicht am flughafen)))
Step:PP Attachment
{'subtrees': ['NX', 'ADVX', 'PX'], 'family': ['ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'ADV', 'APPR', 'ART', 'NN'), 'right siblings': [], 'left siblings': [(ADVX (ADV noch))], 'auto preterminal span': (4, 10), 'span': (4, 10), 'parent': 'MF', 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			[01;31m(SIMPX[00m
				(VF da)
				(LK ware)
				[01;31m(MF[00m
					(ADVX noch)
					(NX
						(NX die frage)
						[01;36m(PX[00m
							(ADVX naturlich)
							(PX nach dem hotel)[01;36m)[00m)[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				(C ob)
				(MF
					(NX sie)
					[01;36m(NX[00m
						(NX was)
						[01;31m(C[00m
							(NX
								(PWS was))[01;31m)[00m[01;36m)[00m
					(PX
						[01;31m(MF[00m
							(PX fur einen hotelwunsch)
							(NX sie)[01;31m)[00m))[01;31m)[00m
			(VC haben))
		(SIMPX ob sie zentral oder am flughafen oder ja wenn sie mit der bahn kommen dann naturlich nicht am flughafen)))
Step:PP Attachment
{'subtrees': ['ADVX', 'PX'], 'family': ['NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'APPR', 'ART', 'NN'), 'right siblings': [], 'left siblings': [(NX (ART die) (NN frage))], 'auto preterminal span': (6, 10), 'span': (6, 10), 'parent': 'NX', 'label': 'PX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			[01;31m(SIMPX[00m
				(VF da)
				(LK ware)
				[01;31m(MF[00m
					(ADVX noch)
					(NX die frage naturlich nach dem hotel)[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				(C ob)
				(MF
					(NX sie)
					[01;36m(NX[00m
						(NX was)
						[01;31m(C[00m
							(NX
								(PWS was))[01;31m)[00m[01;36m)[00m
					(PX
						[01;31m(MF[00m
							(PX fur einen hotelwunsch)
							(NX sie)[01;31m)[00m))[01;31m)[00m
			(VC haben))
		(SIMPX ob sie zentral oder am flughafen oder ja wenn sie mit der bahn kommen dann naturlich nicht am flughafen)))
Step:UNSET add
{'subtrees': ['NX', 'C'], 'family': ['NX', 'NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PIS', 'PWS'), 'right siblings': [(PX (MF (PX (APPR fur) (NX (ART einen) (NN hotelwunsch))) (NX (PPER sie))))], 'left siblings': [(NX (PPER sie))], 'auto preterminal span': (12, 14), 'span': (12, 14), 'parent': 'MF', 'label': 'NX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			[01;31m(SIMPX[00m
				(VF da)
				(LK ware)
				[01;31m(MF[00m
					(ADVX noch)
					(NX die frage naturlich nach dem hotel)[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				(C ob)
				(MF
					(NX sie)
					(NX
						(NX was)
						[01;31m(C[00m
							(NX
								(PWS was))[01;31m)[00m)
					(PX
						[01;31m(MF[00m
							(PX fur einen hotelwunsch)
							(NX sie)[01;31m)[00m))[01;31m)[00m
			(VC haben))
		(SIMPX ob sie zentral oder am flughafen oder ja wenn sie mit der bahn kommen dann naturlich nicht am flughafen)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['SIMPX', 'SIMPX', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'ADV', 'ART', 'NN', 'ADV', 'APPR', 'ART', 'NN', 'KOUS', 'PPER', 'PIS', 'PWS', 'APPR', 'ART', 'NN', 'PPER', 'VAFIN'), 'right siblings': ['SIMPX', 'VC'], 'parent': 'SIMPX', 'auto preterminal span': (1, 19), 'span': (1, 10), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF da)
			(LK ware)
			[01;31m(MF[00m
				(ADVX noch)
				(NX die frage naturlich nach dem hotel)[01;31m)[00m
			[01;31m(SIMPX[00m
				(C ob)
				(MF
					(NX sie)
					(NX
						(NX was)
						[01;31m(C[00m
							(NX
								(PWS was))[01;31m)[00m)
					(PX
						[01;31m(MF[00m
							(PX fur einen hotelwunsch)
							(NX sie)[01;31m)[00m))[01;31m)[00m
			(VC haben))
		(SIMPX ob sie zentral oder am flughafen oder ja wenn sie mit der bahn kommen dann naturlich nicht am flughafen)))
Step:UNSET remove
{'subtrees': ['ADVX', 'NX'], 'family': ['VF', 'LK', 'MF', 'SIMPX', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'ADV', 'ART', 'NN', 'ADV', 'APPR', 'ART', 'NN', 'KOUS', 'PPER', 'PIS', 'PWS', 'APPR', 'ART', 'NN', 'PPER', 'VAFIN'), 'right siblings': ['SIMPX', 'VC'], 'parent': 'SIMPX', 'auto preterminal span': (1, 19), 'span': (3, 10), 'left siblings': ['VF', 'LK'], 'label': 'MF', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF da)
			(LK ware)
			(ADVX noch)
			(NX die frage naturlich nach dem hotel)
			[01;31m(SIMPX[00m
				(C ob)
				(MF
					(NX sie)
					(NX
						(NX was)
						[01;31m(C[00m
							(NX
								(PWS was))[01;31m)[00m)
					(PX
						[01;31m(MF[00m
							(PX fur einen hotelwunsch)
							(NX sie)[01;31m)[00m))[01;31m)[00m
			(VC haben))
		(SIMPX ob sie zentral oder am flughafen oder ja wenn sie mit der bahn kommen dann naturlich nicht am flughafen)))
Step:UNSET remove
{'subtrees': ['C', 'MF'], 'family': ['VF', 'LK', 'ADVX', 'NX', 'SIMPX', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'ADV', 'ART', 'NN', 'ADV', 'APPR', 'ART', 'NN', 'KOUS', 'PPER', 'PIS', 'PWS', 'APPR', 'ART', 'NN', 'PPER', 'VAFIN'), 'right siblings': ['VC'], 'parent': 'SIMPX', 'auto preterminal span': (1, 19), 'span': (10, 18), 'left siblings': ['VF', 'LK', 'ADVX', 'NX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF da)
			(LK ware)
			(ADVX noch)
			(NX die frage naturlich nach dem hotel)
			(C ob)
			(MF
				(NX sie)
				(NX
					(NX was)
					[01;31m(C[00m
						(NX
							(PWS was))[01;31m)[00m)
				(PX
					[01;31m(MF[00m
						(PX fur einen hotelwunsch)
						(NX sie)[01;31m)[00m))
			(VC haben))
		(SIMPX ob sie zentral oder am flughafen oder ja wenn sie mit der bahn kommen dann naturlich nicht am flughafen)))
Step:Unary
{'subtrees': ['NX'], 'family': ['NX', 'C'], 'over_word': False, 'over words': False, 'auto preterminals': ('PIS', 'PWS'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (12, 14), 'span': (13, 14), 'left siblings': ['NX'], 'label': 'C', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF da)
			(LK ware)
			(ADVX noch)
			(NX die frage naturlich nach dem hotel)
			(C ob)
			(MF
				(NX sie)
				(NX was was)
				(PX
					[01;31m(MF[00m
						(PX fur einen hotelwunsch)
						(NX sie)[01;31m)[00m))
			(VC haben))
		(SIMPX ob sie zentral oder am flughafen oder ja wenn sie mit der bahn kommen dann naturlich nicht am flughafen)))
Step:Unary
{'subtrees': ['PX', 'NX'], 'family': ['MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NN', 'PPER'), 'right siblings': [], 'parent': 'PX', 'auto preterminal span': (14, 18), 'span': (14, 18), 'left siblings': [], 'label': 'MF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja da ware noch die frage naturlich nach dem hotel ob sie was was fur einen hotelwunsch sie haben ob sie zentral oder am flughafen oder ja wenn sie mit der bahn kommen dann naturlich nicht am flughafen)

Sentence 591:
12 Initial errors
0 on fringe, 7 iterations
5 Error:PP Attachment
2 Error:Modifier Attachment
1 Error:PP Attachment
1 Error:Unary
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:NP Internal Structure
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM sicher)
		(SIMPX
			(VF sie)
			(LK sagten)
			(MF
				(ADVX gerade)
				[01;31m(NX[00m
					(ADVX nicht)
					(ADVX gerade)
					[01;36m(NX[00m
						(ART das)
						(NN billigste)[01;36m)[00m[01;31m)[00m))
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF dann)
				(LK wurde)
				(MF ich vielleicht das hotel schweizerhof)
				(VC empfehlen)
				[01;31m(NF[00m [01;33m(R (NF (R (NF[00m
					(R
						(C was)
						(MF ziemlich zentral)
						(VC ist))[01;31m)[00m[01;31m)[00m
			(PX mit konferenzraum und garage) [01;33mNF) R)[00m
			(SIMPX falls sie vielleicht doch mit dem wagen kommen wollen) [01;33mNF) R)[00m[01;36m)[00m
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das)
			(LK hatte)
			(MF
				(ADVX halt)
				(NX
					(NX eine preisklasse)
					[01;31m(PX[00m
						(APPR von)
						(NX
							(PX pro ubernachtung)
							[01;31m(NX[00m
								(NX einzelzimmer)
								(NX zweihundert funfundvierzig bis zweihundert funfundneunzig mark)[01;31m)[00m)[01;31m)[00m))[01;31m)[00m
		(PX je nachdem)))
Step:PP Attachment
{'new_parent': 'NF', 'new_family': ['R', 'PX', 'SIMPX'], 'mover info': [('PX', (21, 25)), ('SIMPX', (25, 34))], 'old_family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'PX', 'SIMPX', 'SIMPX', 'PX'], 'start left siblings': ['DM', 'DM', 'SIMPX', 'SIMPX'], 'auto preterminals': ('PTKANT', 'ITJ', 'PPER', 'VVFIN', 'ADV', 'PTKNEG', 'ADV', 'ART', 'NN', 'ADV', 'VAFIN', 'PPER', 'ADV', 'ART', 'NN', 'NE', 'VVINF', 'PRELS', 'ADV', 'ADJD', 'VAFIN', 'APPR', 'NN', 'KON', 'NN', 'KOUS', 'PPER', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'VVINF', 'VMFIN', 'KON', 'PDS', 'VAFIN', 'ADV', 'ART', 'NN', 'APPR', 'APPR', 'NN', 'NN', 'CARD', 'CARD', 'APPR', 'CARD', 'CARD', 'NN', 'ADV', 'PROP'), 'start right siblings': ['SIMPX', 'PX'], 'end left siblings': ['R'], 'auto preterminal span': (0, 52), 'adding node already present': False, 'movers': ['PX', 'SIMPX'], 'old_parent': 'TURN', 'added and moved': True, 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'R'}
(TOP
	(TURN
		(DM ja)
		(DM sicher)
		(SIMPX
			(VF sie)
			(LK sagten)
			(MF
				(ADVX gerade)
				[01;31m(NX[00m
					(ADVX nicht)
					(ADVX gerade)
					[01;36m(NX[00m
						(ART das)
						(NN billigste)[01;36m)[00m[01;31m)[00m))
		(SIMPX
			(VF dann)
			(LK wurde)
			(MF ich vielleicht das hotel schweizerhof)
			(VC empfehlen)
			(R
				(NF
					[01;36m(NF[00m
						[01;36m(R[00m
							(R was ziemlich zentral ist)
							(PX mit konferenzraum und garage)[01;36m)[00m[01;36m)[00m
					(SIMPX falls sie vielleicht doch mit dem wagen kommen wollen))))
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das)
			(LK hatte)
			(MF
				(ADVX halt)
				(NX
					(NX eine preisklasse)
					[01;31m(PX[00m
						(APPR von)
						(NX
							(PX pro ubernachtung)
							[01;31m(NX[00m
								(NX einzelzimmer)
								(NX zweihundert funfundvierzig bis zweihundert funfundneunzig mark)[01;31m)[00m)[01;31m)[00m))[01;31m)[00m
		(PX je nachdem)))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['ADVX', 'ADVX', 'ADVX', 'NX'], 'mover info': [('ADVX', (5, 6)), ('ADVX', (6, 7))], 'old_family': ['ADVX', 'ADVX', 'ART', 'NN'], 'start left siblings': [], 'auto preterminals': ('ADV', 'PTKNEG', 'ADV', 'ART', 'NN'), 'start right siblings': ['ART', 'NN'], 'end left siblings': ['ADVX'], 'auto preterminal span': (4, 9), 'movers': ['ADVX', 'ADVX'], 'old_parent': 'NX', 'end right siblings': ['NX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(DM sicher)
		(SIMPX sie sagten gerade nicht gerade das billigste)
		(SIMPX
			(VF dann)
			(LK wurde)
			(MF ich vielleicht das hotel schweizerhof)
			(VC empfehlen)
			(R
				(NF
					[01;36m(NF[00m
						[01;36m(R[00m
							(R was ziemlich zentral ist)
							(PX mit konferenzraum und garage)[01;36m)[00m[01;36m)[00m
					(SIMPX falls sie vielleicht doch mit dem wagen kommen wollen))))
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das)
			(LK hatte)
			(MF
				(ADVX halt)
				(NX
					(NX eine preisklasse)
					[01;31m(PX[00m
						(APPR von)
						(NX
							(PX pro ubernachtung)
							[01;31m(NX[00m
								(NX einzelzimmer)
								(NX zweihundert funfundvierzig bis zweihundert funfundneunzig mark)[01;31m)[00m)[01;31m)[00m))[01;31m)[00m
		(PX je nachdem)))
Step:PP Attachment
{'subtrees': ['R', 'PX'], 'family': ['R', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PRELS', 'ADV', 'ADJD', 'VAFIN', 'APPR', 'NN', 'KON', 'NN'), 'right siblings': [(SIMPX (C (KOUS falls)) (MF (NX (PPER sie)) (ADVX (ADV vielleicht)) (ADVX (ADV doch)) (PX (APPR mit) (NX (ART dem) (NN wagen)))) (VC (VXINF (VVINF kommen)) (VXFIN (VMFIN wollen))))], 'left siblings': [], 'auto preterminal span': (17, 25), 'span': (17, 25), 'parent': 'NF', 'label': 'R', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM sicher)
		(SIMPX sie sagten gerade nicht gerade das billigste)
		(SIMPX
			(VF dann)
			(LK wurde)
			(MF ich vielleicht das hotel schweizerhof)
			(VC empfehlen)
			(R
				(NF
					[01;36m(NF[00m
						(R
							(R was ziemlich zentral ist)
							(PX mit konferenzraum und garage))[01;36m)[00m
					(SIMPX falls sie vielleicht doch mit dem wagen kommen wollen))))
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das)
			(LK hatte)
			(MF
				(ADVX halt)
				(NX
					(NX eine preisklasse)
					[01;31m(PX[00m
						(APPR von)
						(NX
							(PX pro ubernachtung)
							[01;31m(NX[00m
								(NX einzelzimmer)
								(NX zweihundert funfundvierzig bis zweihundert funfundneunzig mark)[01;31m)[00m)[01;31m)[00m))[01;31m)[00m
		(PX je nachdem)))
Step:Unary
{'subtrees': ['R'], 'family': ['NF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PRELS', 'ADV', 'ADJD', 'VAFIN', 'APPR', 'NN', 'KON', 'NN'), 'right siblings': [(SIMPX (C (KOUS falls)) (MF (NX (PPER sie)) (ADVX (ADV vielleicht)) (ADVX (ADV doch)) (PX (APPR mit) (NX (ART dem) (NN wagen)))) (VC (VXINF (VVINF kommen)) (VXFIN (VMFIN wollen))))], 'left siblings': [], 'auto preterminal span': (17, 25), 'span': (17, 25), 'parent': 'NF', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM sicher)
		(SIMPX sie sagten gerade nicht gerade das billigste)
		(SIMPX dann wurde ich vielleicht das hotel schweizerhof empfehlen was ziemlich zentral ist mit konferenzraum und garage falls sie vielleicht doch mit dem wagen kommen wollen)
		[01;31m(SIMPX[00m
			(KOORD und)
			(VF das)
			(LK hatte)
			(MF
				(ADVX halt)
				(NX
					(NX eine preisklasse)
					[01;31m(PX[00m
						(APPR von)
						(NX
							(PX pro ubernachtung)
							[01;31m(NX[00m
								(NX einzelzimmer)
								(NX zweihundert funfundvierzig bis zweihundert funfundneunzig mark)[01;31m)[00m)[01;31m)[00m))[01;31m)[00m
		(PX je nachdem)))
Step:UNSET remove
{'subtrees': ['KOORD', 'VF', 'LK', 'MF'], 'family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ITJ', 'PPER', 'VVFIN', 'ADV', 'PTKNEG', 'ADV', 'ART', 'NN', 'ADV', 'VAFIN', 'PPER', 'ADV', 'ART', 'NN', 'NE', 'VVINF', 'PRELS', 'ADV', 'ADJD', 'VAFIN', 'APPR', 'NN', 'KON', 'NN', 'KOUS', 'PPER', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'VVINF', 'VMFIN', 'KON', 'PDS', 'VAFIN', 'ADV', 'ART', 'NN', 'APPR', 'APPR', 'NN', 'NN', 'CARD', 'CARD', 'APPR', 'CARD', 'CARD', 'NN', 'ADV', 'PROP'), 'right siblings': ['PX'], 'parent': 'TURN', 'auto preterminal span': (0, 52), 'span': (34, 50), 'left siblings': ['DM', 'DM', 'SIMPX', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM sicher)
		(SIMPX sie sagten gerade nicht gerade das billigste)
		(SIMPX dann wurde ich vielleicht das hotel schweizerhof empfehlen was ziemlich zentral ist mit konferenzraum und garage falls sie vielleicht doch mit dem wagen kommen wollen)
		(KOORD und)
		(VF das)
		(LK hatte)
		(MF
			(ADVX halt)
			(NX
				(NX eine preisklasse)
				[01;31m(PX[00m
					(APPR von)
					(NX
						(PX pro ubernachtung)
						[01;31m(NX[00m
							(NX einzelzimmer)
							(NX zweihundert funfundvierzig bis zweihundert funfundneunzig mark)[01;31m)[00m)[01;31m)[00m))
		(PX je nachdem)))
Step:UNSET remove
{'subtrees': ['APPR', 'NX'], 'family': ['NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'APPR', 'APPR', 'NN', 'NN', 'CARD', 'CARD', 'APPR', 'CARD', 'CARD', 'NN'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (38, 50), 'span': (40, 50), 'left siblings': ['NX'], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM sicher)
		(SIMPX sie sagten gerade nicht gerade das billigste)
		(SIMPX dann wurde ich vielleicht das hotel schweizerhof empfehlen was ziemlich zentral ist mit konferenzraum und garage falls sie vielleicht doch mit dem wagen kommen wollen)
		(KOORD und)
		(VF das)
		(LK hatte)
		(MF
			(ADVX halt)
			(NX
				(NX eine preisklasse)
				(APPR von)
				(NX
					(PX pro ubernachtung)
					[01;31m(NX[00m
						(NX einzelzimmer)
						(NX zweihundert funfundvierzig bis zweihundert funfundneunzig mark)[01;31m)[00m)))
		(PX je nachdem)))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['PX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'NN', 'NN', 'CARD', 'CARD', 'APPR', 'CARD', 'CARD', 'NN'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (41, 50), 'span': (43, 50), 'left siblings': ['PX'], 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'remove'}
(TOP ja sicher sie sagten gerade nicht gerade das billigste dann wurde ich vielleicht das hotel schweizerhof empfehlen was ziemlich zentral ist mit konferenzraum und garage falls sie vielleicht doch mit dem wagen kommen wollen und das hatte halt eine preisklasse von pro ubernachtung einzelzimmer zweihundert funfundvierzig bis zweihundert funfundneunzig mark je nachdem)

Sentence 592:
0 Initial errors
0 on fringe, 0 iterations

Sentence 593:
0 Initial errors
0 on fringe, 0 iterations

Sentence 594:
0 Initial errors
0 on fringe, 0 iterations

Sentence 595:
0 Initial errors
0 on fringe, 0 iterations

Sentence 596:
2 Initial errors
0 on fringe, 2 iterations
1 Error:Clause Attachment
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		[01;36m(SIMPX[00m
			(SIMPX ich wurde ganz gern eine reise buchen bei ihnen)
			(SIMPX
				(VF und zwar)
				(LK mochte)
				(MF
					(NX ich)
					[01;36m(PX[00m
						(PX im august)
						(PX fur ein paar tage)[01;36m)[00m)
				(VC wegfahren)
				(NF nach hannover))[01;36m)[00m
		(SIMPX und zwar wurde das am montag dienstag sein)
		(SIMPX das ist der vierte funfte august)
		(SIMPX was konnen sie mir da anbieten)))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'ADV', 'ADV', 'ART', 'NN', 'VVINF', 'APPR', 'PPER', 'KON', 'ADV', 'VMFIN', 'PPER', 'APPRART', 'NN', 'APPR', 'ART', 'PIDAT', 'NN', 'VVINF', 'APPR', 'NE'), 'right siblings': [(SIMPX (VF (ADVX (KON und) (ADV zwar))) (LK (VXFIN (VAFIN wurde))) (MF (NX (PDS das)) (PX (APPRART am) (NX (NX (NN montag)) (NX (NN dienstag))))) (VC (VXINF (VAINF sein)))), (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VAFIN ist))) (MF (NX (ART der) (ADJX (ADJX (ADJA vierte)) (ADJX (ADJA funfte))) (NN august)))), (SIMPX (VF (NX (PWS was))) (LK (VXFIN (VMFIN konnen))) (MF (NX (PPER sie)) (NX (PPER mir)) (ADVX (ADV da))) (VC (VXINF (VVINF anbieten))))], 'left siblings': [(DM (PTKANT ja))], 'auto preterminal span': (1, 23), 'span': (1, 23), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(SIMPX ich wurde ganz gern eine reise buchen bei ihnen)
			(SIMPX
				(VF und zwar)
				(LK mochte)
				(MF
					(NX ich)
					[01;36m(PX[00m
						(PX im august)
						(PX fur ein paar tage)[01;36m)[00m)
				(VC wegfahren)
				(NF nach hannover)))
		(SIMPX und zwar wurde das am montag dienstag sein)
		(SIMPX das ist der vierte funfte august)
		(SIMPX was konnen sie mir da anbieten)))
Step:PP Attachment
{'subtrees': ['PX', 'PX'], 'family': ['NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'NN', 'APPR', 'ART', 'PIDAT', 'NN'), 'right siblings': [], 'left siblings': [(NX (PPER ich))], 'auto preterminal span': (14, 20), 'span': (14, 20), 'parent': 'MF', 'label': 'PX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP ja ich wurde ganz gern eine reise buchen bei ihnen und zwar mochte ich im august fur ein paar tage wegfahren nach hannover und zwar wurde das am montag dienstag sein das ist der vierte funfte august was konnen sie mir da anbieten)

Sentence 597:
8 Initial errors
0 on fringe, 4 iterations
4 Error:UNSET move
2 Error:Different label
1 Error:Single Word Phrase
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ach so)
		(DM stimmt)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(LK habe)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX ich)
					(NX mir)
					(ADVX noch)[01;31m)[00m[01;31m)[00m
			[01;36m(NX[00m
				(PIAT keine) [01;33mMF)[00m[01;36m)[00m[01;36m)[00m
		(DM ja)
		(SIMPX habe ich mir noch keine gedanken drum gemacht)
		(DM ja)
		(SIMPX es sollte schon relativ zentral gelegen sein denke ich)
		(SIMPX es mus auch nicht eines der schlechteren sein)
		(SIMPX
			(LK hatten)
			(MF sie da eines)
			[01;36m(SIMPX[00m
				(NF
					[01;31m(R[00m
						(C
							[01;31m(NX[00m
								(PRELS das)[01;31m)[00m)
						(MF sie mir)
						(VC empfehlen konnten)[01;31m)[00m)[01;36m)[00m)))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['NX', 'NX', 'ADVX', 'PIAT'], 'mover info': [('PIAT', (7, 8))], 'old_family': ['DM', 'DM', 'SIMPX', 'PIAT', 'DM', 'SIMPX', 'DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'start left siblings': ['DM', 'DM', 'SIMPX'], 'auto preterminals': ('ITJ', 'ADV', 'ITJ', 'VAFIN', 'PPER', 'PRF', 'ADV', 'PIAT', 'PTKANT', 'VAFIN', 'PPER', 'PRF', 'ADV', 'PIAT', 'NN', 'PROP', 'VVPP', 'PTKANT', 'PPER', 'VMFIN', 'ADV', 'ADV', 'ADV', 'ADJD', 'VAINF', 'VVFIN', 'PPER', 'PPER', 'VMFIN', 'ADV', 'PTKNEG', 'PIS', 'ART', 'NN', 'VAINF', 'VAFIN', 'PPER', 'ADV', 'PIS', 'PRELS', 'PPER', 'PPER', 'VVINF', 'VMFIN'), 'start right siblings': ['DM', 'SIMPX', 'DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'end left siblings': ['NX', 'NX', 'ADVX'], 'auto preterminal span': (0, 44), 'movers': ['PIAT'], 'old_parent': 'TURN', 'POS confusion': ('PIAT', 'PIAT'), 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM ach so)
		(DM stimmt)
		(SIMPX
			(LK habe)
			(MF
				(NX ich)
				(NX mir)
				(ADVX noch)
				[01;36m(NX[00m
					(PIAT keine)[01;36m)[00m))
		(DM ja)
		(SIMPX habe ich mir noch keine gedanken drum gemacht)
		(DM ja)
		(SIMPX es sollte schon relativ zentral gelegen sein denke ich)
		(SIMPX es mus auch nicht eines der schlechteren sein)
		(SIMPX
			(LK hatten)
			(MF sie da eines)
			[01;36m(SIMPX[00m
				(NF
					[01;31m(R[00m
						(C
							[01;31m(NX[00m
								(PRELS das)[01;31m)[00m)
						(MF sie mir)
						(VC empfehlen konnten)[01;31m)[00m)[01;36m)[00m)))
Step:Different label
{'family': ['SIMPX'], 'auto preterminal span': (39, 44), 'span': (39, 44), 'subtrees': ['C', 'MF', 'VC'], 'parent': 'NF', 'over_word': False, 'auto preterminals': ('PRELS', 'PPER', 'PPER', 'VVINF', 'VMFIN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('R', 'SIMPX')}
(TOP
	(TURN
		(DM ach so)
		(DM stimmt)
		(SIMPX
			(LK habe)
			(MF
				(NX ich)
				(NX mir)
				(ADVX noch)
				[01;36m(NX[00m
					(PIAT keine)[01;36m)[00m))
		(DM ja)
		(SIMPX habe ich mir noch keine gedanken drum gemacht)
		(DM ja)
		(SIMPX es sollte schon relativ zentral gelegen sein denke ich)
		(SIMPX es mus auch nicht eines der schlechteren sein)
		(SIMPX
			(LK hatten)
			(MF sie da eines)
			(NF
				(SIMPX
					(C
						[01;31m(NX[00m
							(PRELS das)[01;31m)[00m)
					(MF sie mir)
					(VC empfehlen konnten))))))
Step:Single Word Phrase
{'subtrees': ['PIAT'], 'family': ['NX', 'NX', 'ADVX', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('PIAT',), 'right siblings': [], 'left siblings': [(NX (PPER ich)), (NX (PRF mir)), (ADVX (ADV noch))], 'auto preterminal span': (7, 8), 'span': (7, 8), 'parent': 'MF', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM ach so)
		(DM stimmt)
		(SIMPX habe ich mir noch keine)
		(DM ja)
		(SIMPX habe ich mir noch keine gedanken drum gemacht)
		(DM ja)
		(SIMPX es sollte schon relativ zentral gelegen sein denke ich)
		(SIMPX es mus auch nicht eines der schlechteren sein)
		(SIMPX
			(LK hatten)
			(MF sie da eines)
			(NF
				(SIMPX
					(C
						[01;31m(NX[00m
							(PRELS das)[01;31m)[00m)
					(MF sie mir)
					(VC empfehlen konnten))))))
Step:Single Word Phrase
{'subtrees': ['PRELS'], 'family': ['NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('PRELS',), 'right siblings': [], 'parent': 'C', 'auto preterminal span': (39, 40), 'span': (39, 40), 'left siblings': [], 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP ach so stimmt habe ich mir noch keine ja habe ich mir noch keine gedanken drum gemacht ja es sollte schon relativ zentral gelegen sein denke ich es mus auch nicht eines der schlechteren sein hatten sie da eines das sie mir empfehlen konnten)

Sentence 598:
0 Initial errors
0 on fringe, 0 iterations

Sentence 599:
8 Initial errors
0 on fringe, 5 iterations
2 Error:Co-ordination
2 Error:Modifier Attachment
2 Error:UNSET move
1 Error:Single Word Phrase
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM wie gesagt)
		(SIMPX was war das jetzt)
		(SIMPX montag der vierte august wollte ich dann los)
		[01;31m(PX[00m
			(KON und)
			(ADVX dann)
			[01;31m(ADJX[00m
				(NX
					[01;31m(ADJX[00m
						(ADJX drei)
						[01;33m(NX[00m (ADJX vier)[01;31m)[00m
					(NN tage)) [01;33mNX)[00m
				(ADJD spater)[01;31m)[00m
			[01;36m(PX[00m
				(ADVX wieder)
				(PX nach hause)[01;36m)[00m[01;31m)[00m
		(SIMPX
			(VF dann)
			(LK ist)
			[01;36m(MF[00m
				[01;36m(NX[00m
					(ART das)[01;36m)[00m
				[01;31m(MF[00m
					(NX die ausstellung)
					(ADVX vorbei)[01;31m)[00m[01;36m)[00m)
		(SIMPX das ware also dann spatestens am achten august)))
Step:Co-ordination
{'new_parent': 'TURN', 'new_family': ['DM', 'SIMPX', 'SIMPX', 'KON', 'ADVX', 'ADJX', 'PX', 'SIMPX', 'SIMPX'], 'mover info': [('KON', (14, 15)), ('ADVX', (15, 16)), ('ADJX', (16, 20))], 'old_family': ['KON', 'ADVX', 'ADJX', 'ADVX', 'PX'], 'start left siblings': [], 'auto preterminals': ('KOUS', 'VVPP', 'PWS', 'VAFIN', 'PDS', 'ADV', 'NN', 'ART', 'ADJA', 'NN', 'VVFIN', 'PPER', 'ADV', 'PTKVZ', 'KON', 'ADV', 'CARD', 'CARD', 'NN', 'ADJD', 'ADV', 'APPR', 'NN', 'ADV', 'VAFIN', 'ART', 'ART', 'NN', 'ADV', 'PDS', 'VAFIN', 'ADV', 'ADV', 'ADV', 'APPRART', 'ADJA', 'NN'), 'start right siblings': ['ADVX', 'PX'], 'end left siblings': ['DM', 'SIMPX', 'SIMPX'], 'auto preterminal span': (0, 37), 'movers': ['KON', 'ADVX', 'ADJX'], 'old_parent': 'PX', 'end right siblings': ['PX', 'SIMPX', 'SIMPX'], 'classified_type': 'Co-ordination', 'type': 'move'}
(TOP
	(TURN
		(DM wie gesagt)
		(SIMPX was war das jetzt)
		(SIMPX montag der vierte august wollte ich dann los)
		(KON und)
		(ADVX dann)
		[01;31m(ADJX[00m
			(NX
				[01;31m(ADJX[00m
					(ADJX drei)
					[01;33m(NX[00m (ADJX vier)[01;31m)[00m
				(NN tage)) [01;33mNX)[00m
			(ADJD spater)[01;31m)[00m
		(PX wieder nach hause)
		(SIMPX
			(VF dann)
			(LK ist)
			[01;36m(MF[00m
				[01;36m(NX[00m
					(ART das)[01;36m)[00m
				[01;31m(MF[00m
					(NX die ausstellung)
					(ADVX vorbei)[01;31m)[00m[01;36m)[00m)
		(SIMPX das ware also dann spatestens am achten august)))
Step:Modifier Attachment
{'new_parent': 'ADJX', 'new_family': ['ADJX', 'NX', 'ADJD'], 'mover info': [('ADJX', (16, 17))], 'old_family': ['ADJX', 'ADJX'], 'start left siblings': [], 'auto preterminals': ('CARD', 'CARD', 'NN', 'ADJD'), 'start right siblings': ['ADJX'], 'end left siblings': [], 'auto preterminal span': (16, 20), 'adding node already present': False, 'movers': ['ADJX'], 'old_parent': 'ADJX', 'POS confusion': ('CARD', 'CARD'), 'added and moved': True, 'end right siblings': ['NX', 'ADJD'], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'MF'}
(TOP
	(TURN
		(DM wie gesagt)
		(SIMPX was war das jetzt)
		(SIMPX montag der vierte august wollte ich dann los)
		(KON und)
		(ADVX dann)
		[01;31m(ADJX[00m
			(NX drei vier tage)
			(ADJD spater)[01;31m)[00m
		(PX wieder nach hause)
		(SIMPX
			(VF dann)
			(LK ist)
			[01;36m(MF[00m
				[01;36m(NX[00m
					(ART das)[01;36m)[00m
				[01;31m(MF[00m
					(NX die ausstellung)
					(ADVX vorbei)[01;31m)[00m[01;36m)[00m)
		(SIMPX das ware also dann spatestens am achten august)))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['ART', 'NX', 'ADVX'], 'mover info': [('ART', (25, 26))], 'old_family': ['VF', 'LK', 'ART', 'MF'], 'start left siblings': ['VF', 'LK'], 'auto preterminals': ('ADV', 'VAFIN', 'ART', 'ART', 'NN', 'ADV'), 'start right siblings': ['MF'], 'end left siblings': [], 'auto preterminal span': (23, 29), 'movers': ['ART'], 'old_parent': 'SIMPX', 'POS confusion': ('ART', 'ART'), 'end right siblings': ['NX', 'ADVX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM wie gesagt)
		(SIMPX was war das jetzt)
		(SIMPX montag der vierte august wollte ich dann los)
		(KON und)
		(ADVX dann)
		[01;31m(ADJX[00m
			(NX drei vier tage)
			(ADJD spater)[01;31m)[00m
		(PX wieder nach hause)
		(SIMPX
			(VF dann)
			(LK ist)
			(MF
				[01;36m(NX[00m
					(ART das)[01;36m)[00m
				(NX die ausstellung)
				(ADVX vorbei)))
		(SIMPX das ware also dann spatestens am achten august)))
Step:Single Word Phrase
{'subtrees': ['ART'], 'family': ['NX', 'NX', 'ADVX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ART',), 'right siblings': [(NX (ART die) (NN ausstellung)), (ADVX (ADV vorbei))], 'left siblings': [], 'auto preterminal span': (25, 26), 'span': (25, 26), 'parent': 'MF', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM wie gesagt)
		(SIMPX was war das jetzt)
		(SIMPX montag der vierte august wollte ich dann los)
		(KON und)
		(ADVX dann)
		[01;31m(ADJX[00m
			(NX drei vier tage)
			(ADJD spater)[01;31m)[00m
		(PX wieder nach hause)
		(SIMPX dann ist das die ausstellung vorbei)
		(SIMPX das ware also dann spatestens am achten august)))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADJD'], 'family': ['DM', 'SIMPX', 'SIMPX', 'KON', 'ADVX', 'ADJX', 'PX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'VVPP', 'PWS', 'VAFIN', 'PDS', 'ADV', 'NN', 'ART', 'ADJA', 'NN', 'VVFIN', 'PPER', 'ADV', 'PTKVZ', 'KON', 'ADV', 'CARD', 'CARD', 'NN', 'ADJD', 'ADV', 'APPR', 'NN', 'ADV', 'VAFIN', 'ART', 'ART', 'NN', 'ADV', 'PDS', 'VAFIN', 'ADV', 'ADV', 'ADV', 'APPRART', 'ADJA', 'NN'), 'right siblings': ['PX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 37), 'span': (16, 20), 'left siblings': ['DM', 'SIMPX', 'SIMPX', 'KON', 'ADVX'], 'label': 'ADJX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP wie gesagt was war das jetzt montag der vierte august wollte ich dann los und dann drei vier tage spater wieder nach hause dann ist das die ausstellung vorbei das ware also dann spatestens am achten august)

Sentence 600:
0 Initial errors
0 on fringe, 0 iterations

Sentence 601:
6 Initial errors
0 on fringe, 4 iterations
2 Error:Clause Attachment
2 Error:UNSET move
1 Error:Unary
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM okay)
		(SIMPX wie ist das mit dem gepack)
		[01;36m(SIMPX[00m
			(SIMPX
				(LK wird)
				(MF
					[01;31m(NX[00m
						[01;36m(NX[00m
							(ART das)[01;36m)[00m
						(NN gepack)[01;31m)[00m)
				[01;31m(VC[00m
					[01;31m(VXINF[00m
						(VVPP nachgesendet)[01;31m)[00m[01;31m)[00m)
			[01;31m(SIMPX[00m
				(LK mus)
				(MF ich das selber)
				(VC schleppen)[01;31m)[00m[01;36m)[00m
		(SIMPX ich habe so ein ruckenleiden)
		(PX deswegen)))
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['SIMPX', 'LK', 'MF', 'VC'], 'mover info': [('SIMPX', (8, 12))], 'old_family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'PX'], 'start left siblings': ['DM', 'DM', 'SIMPX'], 'auto preterminals': ('PTKANT', 'ITJ', 'PWAV', 'VAFIN', 'PDS', 'APPR', 'ART', 'NN', 'VAFIN', 'ART', 'NN', 'VVPP', 'VMFIN', 'PPER', 'PDS', 'ADV', 'VVINF', 'PPER', 'VAFIN', 'ADV', 'ART', 'NN', 'PROP'), 'start right siblings': ['SIMPX', 'SIMPX', 'PX'], 'end left siblings': [], 'auto preterminal span': (0, 23), 'movers': ['SIMPX'], 'old_parent': 'TURN', 'end right siblings': ['LK', 'MF', 'VC'], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(DM okay)
		(SIMPX wie ist das mit dem gepack)
		(SIMPX
			(SIMPX
				(LK wird)
				(MF
					[01;31m(NX[00m
						[01;36m(NX[00m
							(ART das)[01;36m)[00m
						(NN gepack)[01;31m)[00m)
				[01;31m(VC[00m
					[01;31m(VXINF[00m
						(VVPP nachgesendet)[01;31m)[00m[01;31m)[00m)
			(LK mus)
			(MF ich das selber)
			(VC schleppen))
		(SIMPX ich habe so ein ruckenleiden)
		(PX deswegen)))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['NX', 'NN'], 'mover info': [('NN', (10, 11))], 'old_family': ['ART', 'NN'], 'start left siblings': ['ART'], 'auto preterminals': ('ART', 'NN'), 'start right siblings': [], 'end left siblings': ['NX'], 'auto preterminal span': (9, 11), 'movers': ['NN'], 'old_parent': 'NX', 'POS confusion': ('NN', 'NN'), 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(DM okay)
		(SIMPX wie ist das mit dem gepack)
		(SIMPX
			(SIMPX
				(LK wird)
				(MF das gepack)
				[01;31m(VC[00m
					[01;31m(VXINF[00m
						(VVPP nachgesendet)[01;31m)[00m[01;31m)[00m)
			(LK mus)
			(MF ich das selber)
			(VC schleppen))
		(SIMPX ich habe so ein ruckenleiden)
		(PX deswegen)))
Step:Unary
{'subtrees': ['VXINF'], 'family': ['LK', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'ART', 'NN', 'VVPP'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (8, 12), 'span': (11, 12), 'left siblings': ['LK', 'MF'], 'label': 'VC', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM okay)
		(SIMPX wie ist das mit dem gepack)
		(SIMPX
			(SIMPX
				(LK wird)
				(MF das gepack)
				[01;31m(VXINF[00m
					(VVPP nachgesendet)[01;31m)[00m)
			(LK mus)
			(MF ich das selber)
			(VC schleppen))
		(SIMPX ich habe so ein ruckenleiden)
		(PX deswegen)))
Step:Single Word Phrase
{'subtrees': ['VVPP'], 'family': ['LK', 'MF', 'VXINF'], 'over_word': True, 'over words': True, 'auto preterminals': ('VAFIN', 'ART', 'NN', 'VVPP'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (8, 12), 'span': (11, 12), 'left siblings': ['LK', 'MF'], 'label': 'VXINF', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP ja okay wie ist das mit dem gepack wird das gepack nachgesendet mus ich das selber schleppen ich habe so ein ruckenleiden deswegen)

Sentence 602:
2 Initial errors
0 on fringe, 2 iterations
1 Error:Modifier Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM okay)
		(DM ja)
		(DM okay)
		(SIMPX werde ich mich drum kummern)
		(DM ja)
		(DM prima)
		(SIMPX
			(VF dann)
			(LK bitte)
			[01;31m(MF[00m
				(NX ich)
				(NX sie)
				(ADVX doch)[01;31m)[00m
			(NF
				(SIMPX
					[01;31m(MF[00m
						(NX
							(PDS das))[01;31m)[00m
					(VC zu buchen))))
		(DM ja)))
Step:Modifier Attachment
{'subtrees': ['NX', 'NX', 'ADVX'], 'family': ['VF', 'LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VVFIN', 'PPER', 'PPER', 'ADV', 'PDS', 'PTKZU', 'VVINF'), 'right siblings': ['NF'], 'parent': 'SIMPX', 'auto preterminal span': (11, 19), 'span': (13, 16), 'left siblings': ['VF', 'LK'], 'label': 'MF', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM okay)
		(DM ja)
		(DM okay)
		(SIMPX werde ich mich drum kummern)
		(DM ja)
		(DM prima)
		(SIMPX
			(VF dann)
			(LK bitte)
			(NX ich)
			(NX sie)
			(ADVX doch)
			(NF
				(SIMPX
					[01;31m(MF[00m
						(NX
							(PDS das))[01;31m)[00m
					(VC zu buchen))))
		(DM ja)))
Step:Unary
{'subtrees': ['NX'], 'family': ['MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'PTKZU', 'VVINF'), 'right siblings': ['VC'], 'parent': 'SIMPX', 'auto preterminal span': (16, 19), 'span': (16, 17), 'left siblings': [], 'label': 'MF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja okay ja okay werde ich mich drum kummern ja prima dann bitte ich sie doch das zu buchen ja)

Sentence 603:
0 Initial errors
0 on fringe, 0 iterations

Sentence 604:
0 Initial errors
0 on fringe, 0 iterations

Sentence 605:
18 Initial errors
0 on fringe, 11 iterations
7 Error:Clause Attachment
2 Error:Single Word Phrase
1 Error:UNSET add
1 Error:UNSET add
1 Error:Unary
1 Error:Unary
1 Error:UNSET add
1 Error:Single Word Phrase
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM hallo)
		(DM herr klein)
		(ADJX gut das wir uns treffen)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF ich)
				[01;33m(FKOORD[00m (LK habe)
				(VC gehort)
				[01;31m(NF[00m [01;33m(SIMPX (NF[00m
					[01;31m(SIMPX[00m
						(VF wir)
						[01;36m(LKMVC[00m
							[01;33m(FKOORD[00m (LK sollen)
							(MF zusammen)
							(VC verreisen)
							[01;36m(PX[00m
								(NF
									(PX nach hannover)
									[01;36m(VC[00m [01;36m(VXINF[00m [01;31m(ADJX[00m
										(ADJD geschaftlich)[01;31m)[00m[01;36m)[00m[01;36m)[00m)[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
			[01;31m(SIMPX[00m
				[01;31m(KOORD[00m
					(KON und)[01;31m)[00m
				[01;36m(LKMVCN[00m
					(LK ware)
					(MF doch gut)
					(NF
						(SIMPX
							(C wenn)
							[01;31m(FKOORD[00m
								(MVC wir uns eben zusammensetzen)
								(KON und)
								(MVC
									[01;31m(MF[00m
										(NX
											(ART die)
											(NN sache))[01;31m)[00m
									(VC klaren))[01;31m)[00m))[01;36m)[00m[01;31m)[00m[01;36m)[00m)) [01;33mFKOORD) NF) SIMPX) FKOORD)[00m
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'VC', 'NF', 'SIMPX'], 'mover info': [('SIMPX', (18, 31))], 'old_family': ['DM', 'DM', 'ADJX', 'SIMPX', 'SIMPX'], 'start left siblings': ['DM', 'DM', 'ADJX', 'SIMPX'], 'auto preterminals': ('ITJ', 'NN', 'NE', 'ADJD', 'KOUS', 'PPER', 'PRF', 'VVFIN', 'PPER', 'VAFIN', 'VVPP', 'PPER', 'VMFIN', 'ADV', 'VVINF', 'APPR', 'NE', 'ADJD', 'KON', 'VAFIN', 'ADV', 'ADJD', 'KOUS', 'PPER', 'PRF', 'ADV', 'VVFIN', 'KON', 'ART', 'NN', 'VVFIN'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'MF', 'VC', 'NF'], 'auto preterminal span': (0, 31), 'adding node already present': False, 'movers': ['SIMPX'], 'old_parent': 'TURN', 'added and moved': True, 'end right siblings': [], 'classified_type': 'Clause Attachment', 'type': 'move', 'added label': 'LKMVCN'}
(TOP
	(TURN
		(DM hallo)
		(DM herr klein)
		(ADJX gut das wir uns treffen)
		(SIMPX
			(VF ich)
			[01;36m(FKOORD[00m
				(LK habe)
				(VC gehort)
				(NF
					(SIMPX
						(VF wir)
						(FKOORD
							[01;36m(LKMVC[00m
								(LK sollen)
								(MF zusammen)
								(VC verreisen)
								[01;36m(PX[00m
									(NF
										(PX nach hannover)
										[01;36m(VC[00m [01;36m(VXINF[00m [01;31m(ADJX[00m
											(ADJD geschaftlich)[01;31m)[00m[01;36m)[00m[01;36m)[00m)[01;36m)[00m[01;36m)[00m
							[01;31m(SIMPX[00m
								[01;31m(KOORD[00m
									(KON und)[01;31m)[00m
								[01;36m(LKMVCN[00m
									(LK ware)
									(MF doch gut)
									(NF
										(SIMPX
											(C wenn)
											[01;31m(FKOORD[00m
												(MVC wir uns eben zusammensetzen)
												(KON und)
												(MVC
													[01;31m(MF[00m
														(NX
															(ART die)
															(NN sache))[01;31m)[00m
													(VC klaren))[01;31m)[00m))[01;36m)[00m[01;31m)[00m)))[01;36m)[00m)))
Step:Single Word Phrase
{'family': ['PX', 'VXINF'], 'auto preterminal span': (17, 18), 'span': (17, 18), 'subtrees': ['ADJD'], 'parent': 'NF', 'over_word': True, 'auto preterminals': ('ADJD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'VXINF')}
(TOP
	(TURN
		(DM hallo)
		(DM herr klein)
		(ADJX gut das wir uns treffen)
		(SIMPX
			(VF ich)
			[01;36m(FKOORD[00m
				(LK habe)
				(VC gehort)
				(NF
					(SIMPX
						(VF wir)
						(FKOORD
							[01;36m(LKMVC[00m
								(LK sollen)
								(MF zusammen)
								(VC verreisen)
								[01;36m(PX[00m
									(NF
										(PX nach hannover)
										[01;36m(VC[00m
											(VXINF
												(ADJD geschaftlich))[01;36m)[00m)[01;36m)[00m[01;36m)[00m
							[01;31m(SIMPX[00m
								[01;31m(KOORD[00m
									(KON und)[01;31m)[00m
								[01;36m(LKMVCN[00m
									(LK ware)
									(MF doch gut)
									(NF
										(SIMPX
											(C wenn)
											[01;31m(FKOORD[00m
												(MVC wir uns eben zusammensetzen)
												(KON und)
												(MVC
													[01;31m(MF[00m
														(NX
															(ART die)
															(NN sache))[01;31m)[00m
													(VC klaren))[01;31m)[00m))[01;36m)[00m[01;31m)[00m)))[01;36m)[00m)))
Step:UNSET add
{'subtrees': ['LK', 'VC', 'NF'], 'family': ['VF', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'VVPP', 'PPER', 'VMFIN', 'ADV', 'VVINF', 'APPR', 'NE', 'ADJD', 'KON', 'VAFIN', 'ADV', 'ADJD', 'KOUS', 'PPER', 'PRF', 'ADV', 'VVFIN', 'KON', 'ART', 'NN', 'VVFIN'), 'right siblings': [], 'left siblings': [(VF (NX (PPER ich)))], 'auto preterminal span': (9, 31), 'span': (9, 31), 'parent': 'SIMPX', 'label': 'FKOORD', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM hallo)
		(DM herr klein)
		(ADJX gut das wir uns treffen)
		(SIMPX
			(VF ich)
			(FKOORD
				(LK habe)
				(VC gehort)
				(NF
					(SIMPX
						(VF wir)
						(FKOORD
							[01;36m(LKMVC[00m
								(LK sollen)
								(MF zusammen)
								(VC verreisen)
								[01;36m(PX[00m
									(NF
										(PX nach hannover)
										[01;36m(VC[00m
											(VXINF
												(ADJD geschaftlich))[01;36m)[00m)[01;36m)[00m[01;36m)[00m
							[01;31m(SIMPX[00m
								[01;31m(KOORD[00m
									(KON und)[01;31m)[00m
								[01;36m(LKMVCN[00m
									(LK ware)
									(MF doch gut)
									(NF
										(SIMPX
											(C wenn)
											[01;31m(FKOORD[00m
												(MVC wir uns eben zusammensetzen)
												(KON und)
												(MVC
													[01;31m(MF[00m
														(NX
															(ART die)
															(NN sache))[01;31m)[00m
													(VC klaren))[01;31m)[00m))[01;36m)[00m[01;31m)[00m)))))))
Step:UNSET add
{'subtrees': ['LK', 'MF', 'VC', 'NF'], 'family': ['LKMVC', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VMFIN', 'ADV', 'VVINF', 'APPR', 'NE', 'ADJD'), 'right siblings': [(SIMPX (KOORD (KON und)) (LK (VXFIN (VAFIN ware))) (MF (ADVX (ADV doch)) (ADJX (ADJD gut))) (NF (SIMPX (C (KOUS wenn)) (FKOORD (MVC (MF (NX (PPER wir)) (NX (PRF uns)) (ADVX (ADV eben))) (VC (VXFIN (VVFIN zusammensetzen)))) (KON und) (MVC (MF (NX (ART die) (NN sache))) (VC (VXFIN (VVFIN klaren))))))))], 'left siblings': [], 'auto preterminal span': (12, 18), 'span': (12, 18), 'parent': 'FKOORD', 'label': 'LKMVC', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM hallo)
		(DM herr klein)
		(ADJX gut das wir uns treffen)
		(SIMPX
			(VF ich)
			(FKOORD
				(LK habe)
				(VC gehort)
				(NF
					(SIMPX
						(VF wir)
						(FKOORD
							(LKMVC
								(LK sollen)
								(MF zusammen)
								(VC verreisen)
								[01;36m(PX[00m
									(NF
										(PX nach hannover)
										[01;36m(VC[00m
											(VXINF
												(ADJD geschaftlich))[01;36m)[00m)[01;36m)[00m)
							[01;31m(SIMPX[00m
								[01;31m(KOORD[00m
									(KON und)[01;31m)[00m
								[01;36m(LKMVCN[00m
									(LK ware)
									(MF doch gut)
									(NF
										(SIMPX
											(C wenn)
											[01;31m(FKOORD[00m
												(MVC wir uns eben zusammensetzen)
												(KON und)
												(MVC
													[01;31m(MF[00m
														(NX
															(ART die)
															(NN sache))[01;31m)[00m
													(VC klaren))[01;31m)[00m))[01;36m)[00m[01;31m)[00m)))))))
Step:Unary
{'subtrees': ['NF'], 'family': ['LK', 'MF', 'VC', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'NE', 'ADJD'), 'right siblings': [], 'left siblings': [(LK (VXFIN (VMFIN sollen))), (MF (ADVX (ADV zusammen))), (VC (VXINF (VVINF verreisen)))], 'auto preterminal span': (15, 18), 'span': (15, 18), 'parent': 'LKMVC', 'label': 'PX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM hallo)
		(DM herr klein)
		(ADJX gut das wir uns treffen)
		(SIMPX
			(VF ich)
			(FKOORD
				(LK habe)
				(VC gehort)
				(NF
					(SIMPX
						(VF wir)
						(FKOORD
							(LKMVC
								(LK sollen)
								(MF zusammen)
								(VC verreisen)
								(PX
									(NF
										(PX nach hannover)
										[01;36m(VC[00m
											(VXINF
												(ADJD geschaftlich))[01;36m)[00m)))
							[01;31m(SIMPX[00m
								[01;31m(KOORD[00m
									(KON und)[01;31m)[00m
								[01;36m(LKMVCN[00m
									(LK ware)
									(MF doch gut)
									(NF
										(SIMPX
											(C wenn)
											[01;31m(FKOORD[00m
												(MVC wir uns eben zusammensetzen)
												(KON und)
												(MVC
													[01;31m(MF[00m
														(NX
															(ART die)
															(NN sache))[01;31m)[00m
													(VC klaren))[01;31m)[00m))[01;36m)[00m[01;31m)[00m)))))))
Step:Unary
{'subtrees': ['VXINF'], 'family': ['PX', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJD',), 'right siblings': [], 'left siblings': [(PX (APPR nach) (NX (NE hannover)))], 'auto preterminal span': (17, 18), 'span': (17, 18), 'parent': 'NF', 'label': 'VC', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM hallo)
		(DM herr klein)
		(ADJX gut das wir uns treffen)
		(SIMPX
			(VF ich)
			(FKOORD
				(LK habe)
				(VC gehort)
				(NF
					(SIMPX
						(VF wir)
						(FKOORD
							(LKMVC sollen zusammen verreisen nach hannover geschaftlich)
							[01;31m(SIMPX[00m
								[01;31m(KOORD[00m
									(KON und)[01;31m)[00m
								[01;36m(LKMVCN[00m
									(LK ware)
									(MF doch gut)
									(NF
										(SIMPX
											(C wenn)
											[01;31m(FKOORD[00m
												(MVC wir uns eben zusammensetzen)
												(KON und)
												(MVC
													[01;31m(MF[00m
														(NX
															(ART die)
															(NN sache))[01;31m)[00m
													(VC klaren))[01;31m)[00m))[01;36m)[00m[01;31m)[00m)))))))
Step:UNSET add
{'subtrees': ['LK', 'MF', 'NF'], 'family': ['KOORD', 'LKMVCN'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'ADV', 'ADJD', 'KOUS', 'PPER', 'PRF', 'ADV', 'VVFIN', 'KON', 'ART', 'NN', 'VVFIN'), 'right siblings': [], 'left siblings': [(KOORD (KON und))], 'auto preterminal span': (19, 31), 'span': (19, 31), 'parent': 'SIMPX', 'label': 'LKMVCN', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM hallo)
		(DM herr klein)
		(ADJX gut das wir uns treffen)
		(SIMPX
			(VF ich)
			(FKOORD
				(LK habe)
				(VC gehort)
				(NF
					(SIMPX
						(VF wir)
						(FKOORD
							(LKMVC sollen zusammen verreisen nach hannover geschaftlich)
							[01;31m(SIMPX[00m
								[01;31m(KOORD[00m
									(KON und)[01;31m)[00m
								(LKMVCN
									(LK ware)
									(MF doch gut)
									(NF
										(SIMPX
											(C wenn)
											[01;31m(FKOORD[00m
												(MVC wir uns eben zusammensetzen)
												(KON und)
												(MVC
													[01;31m(MF[00m
														(NX
															(ART die)
															(NN sache))[01;31m)[00m
													(VC klaren))[01;31m)[00m)))[01;31m)[00m)))))))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['KOORD', 'LKMVCN'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON', 'VAFIN', 'ADV', 'ADJD', 'KOUS', 'PPER', 'PRF', 'ADV', 'VVFIN', 'KON', 'ART', 'NN', 'VVFIN'), 'right siblings': ['LKMVCN'], 'parent': 'SIMPX', 'auto preterminal span': (18, 31), 'span': (18, 19), 'left siblings': [], 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(DM hallo)
		(DM herr klein)
		(ADJX gut das wir uns treffen)
		(SIMPX
			(VF ich)
			(FKOORD
				(LK habe)
				(VC gehort)
				(NF
					(SIMPX
						(VF wir)
						(FKOORD
							(LKMVC sollen zusammen verreisen nach hannover geschaftlich)
							[01;31m(SIMPX[00m
								(KON und)
								(LKMVCN
									(LK ware)
									(MF doch gut)
									(NF
										(SIMPX
											(C wenn)
											[01;31m(FKOORD[00m
												(MVC wir uns eben zusammensetzen)
												(KON und)
												(MVC
													[01;31m(MF[00m
														(NX
															(ART die)
															(NN sache))[01;31m)[00m
													(VC klaren))[01;31m)[00m)))[01;31m)[00m)))))))
Step:UNSET remove
{'subtrees': ['KON', 'LKMVCN'], 'family': ['LKMVC', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VMFIN', 'ADV', 'VVINF', 'APPR', 'NE', 'ADJD', 'KON', 'VAFIN', 'ADV', 'ADJD', 'KOUS', 'PPER', 'PRF', 'ADV', 'VVFIN', 'KON', 'ART', 'NN', 'VVFIN'), 'right siblings': [], 'parent': 'FKOORD', 'auto preterminal span': (12, 31), 'span': (18, 31), 'left siblings': ['LKMVC'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM hallo)
		(DM herr klein)
		(ADJX gut das wir uns treffen)
		(SIMPX
			(VF ich)
			(FKOORD
				(LK habe)
				(VC gehort)
				(NF
					(SIMPX
						(VF wir)
						(FKOORD
							(LKMVC sollen zusammen verreisen nach hannover geschaftlich)
							(KON und)
							(LKMVCN
								(LK ware)
								(MF doch gut)
								(NF
									(SIMPX
										(C wenn)
										[01;31m(FKOORD[00m
											(MVC wir uns eben zusammensetzen)
											(KON und)
											(MVC
												[01;31m(MF[00m
													(NX
														(ART die)
														(NN sache))[01;31m)[00m
												(VC klaren))[01;31m)[00m))))))))))
Step:UNSET remove
{'subtrees': ['MVC', 'KON', 'MVC'], 'family': ['C', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'PRF', 'ADV', 'VVFIN', 'KON', 'ART', 'NN', 'VVFIN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (22, 31), 'span': (23, 31), 'left siblings': ['C'], 'label': 'FKOORD', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM hallo)
		(DM herr klein)
		(ADJX gut das wir uns treffen)
		(SIMPX
			(VF ich)
			(FKOORD
				(LK habe)
				(VC gehort)
				(NF
					(SIMPX
						(VF wir)
						(FKOORD
							(LKMVC sollen zusammen verreisen nach hannover geschaftlich)
							(KON und)
							(LKMVCN
								(LK ware)
								(MF doch gut)
								(NF
									(SIMPX
										(C wenn)
										(MVC wir uns eben zusammensetzen)
										(KON und)
										(MVC
											[01;31m(MF[00m
												(NX
													(ART die)
													(NN sache))[01;31m)[00m
											(VC klaren))))))))))))
Step:Unary
{'subtrees': ['NX'], 'family': ['MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'VVFIN'), 'right siblings': ['VC'], 'parent': 'MVC', 'auto preterminal span': (28, 31), 'span': (28, 30), 'left siblings': [], 'label': 'MF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP hallo herr klein gut das wir uns treffen ich habe gehort wir sollen zusammen verreisen nach hannover geschaftlich und ware doch gut wenn wir uns eben zusammensetzen und die sache klaren)

Sentence 606:
0 Initial errors
0 on fringe, 0 iterations

Sentence 607:
0 Initial errors
0 on fringe, 0 iterations

Sentence 608:
0 Initial errors
0 on fringe, 0 iterations

Sentence 609:
4 Initial errors
0 on fringe, 2 iterations
2 Error:Single Word Phrase
2 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX habe ich)
		(SIMPX
			(LK habe)
			[01;36m(MF[00m
				[01;31m(MF[00m
					(NX
						(PPER ich))[01;31m)[00m
				[01;36m(PX[00m [01;31m(VC[00m
					(PTKVZ dabei)[01;31m)[00m[01;36m)[00m[01;36m)[00m)
		(DM ja)))
Step:Single Word Phrase
{'family': ['LK', 'MF', 'PX'], 'auto preterminal span': (5, 6), 'span': (5, 6), 'subtrees': ['PTKVZ'], 'parent': 'SIMPX', 'over_word': True, 'auto preterminals': ('PTKVZ',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VC', 'PX')}
(TOP
	(TURN
		(DM ja)
		(SIMPX habe ich)
		(SIMPX
			(LK habe)
			[01;36m(MF[00m
				[01;31m(MF[00m
					(NX
						(PPER ich))[01;31m)[00m
				(PX dabei)[01;36m)[00m)
		(DM ja)))
Step:PP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'PX'], 'mover info': [('PX', (5, 6))], 'old_family': ['LK', 'MF', 'PX'], 'start left siblings': ['LK', 'MF'], 'auto preterminals': ('VAFIN', 'PPER', 'PTKVZ'), 'start right siblings': [], 'end left siblings': ['NX'], 'auto preterminal span': (3, 6), 'movers': ['PX'], 'old_parent': 'SIMPX', 'POS confusion': ('PTKVZ', 'PTKVZ'), 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP ja habe ich habe ich dabei ja)

Sentence 610:
0 Initial errors
0 on fringe, 0 iterations

Sentence 611:
0 Initial errors
0 on fringe, 0 iterations

Sentence 612:
2 Initial errors
0 on fringe, 2 iterations
1 Error:UNSET add
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM okay)
		(DM frau schmidt)
		(SIMPX musten uns das zu machen)
		(DM also)
		(SIMPX
			[01;36m(SIMPX[00m
				(VF ich)
				(LK habe)
				(MF hier schon eine liste)
				(VC liegen)[01;36m)[00m
			(DM und zwar)
			[01;31m(NF[00m
				(NX
					(NX der zugverbindungen)
					(PX von bonn nach hannover))[01;31m)[00m)
		(SIMPX was meinen sie denn)
		(SIMPX wann sollten wir fahren)))
Step:UNSET add
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['SIMPX', 'DM', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'ADV', 'ADV', 'ART', 'NN', 'VVINF'), 'right siblings': [(DM (KON und) (ADVX (ADV zwar))), (NF (NX (NX (ART der) (NN zugverbindungen)) (PX (PX (APPR von) (NX (NE bonn))) (PX (APPR nach) (NX (NE hannover))))))], 'left siblings': [], 'auto preterminal span': (10, 17), 'span': (10, 17), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM okay)
		(DM frau schmidt)
		(SIMPX musten uns das zu machen)
		(DM also)
		(SIMPX
			(SIMPX ich habe hier schon eine liste liegen)
			(DM und zwar)
			[01;31m(NF[00m
				(NX
					(NX der zugverbindungen)
					(PX von bonn nach hannover))[01;31m)[00m)
		(SIMPX was meinen sie denn)
		(SIMPX wann sollten wir fahren)))
Step:Unary
{'subtrees': ['NX'], 'family': ['SIMPX', 'DM', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'ADV', 'ADV', 'ART', 'NN', 'VVINF', 'KON', 'ADV', 'ART', 'NN', 'APPR', 'NE', 'APPR', 'NE'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (10, 25), 'span': (19, 25), 'left siblings': ['SIMPX', 'DM'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja okay frau schmidt musten uns das zu machen also ich habe hier schon eine liste liegen und zwar der zugverbindungen von bonn nach hannover was meinen sie denn wann sollten wir fahren)

Sentence 613:
3 Initial errors
0 on fringe, 1 iterations
3 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(LK denke)
				[01;33m(MF[00m (MF ich auch)[01;31m)[00m
			(ADJX aber nicht zu fruh) [01;33mMF)[00m[01;36m)[00m
		(SIMPX ich schaue mal gerade)
		(DM ja)
		(SIMPX acht uhr zwanzig ist mir ganz recht)))
Step:Modifier Attachment
{'new_parent': 'SIMPX', 'new_family': ['LK', 'MF', 'ADJX'], 'mover info': [('ADJX', (4, 8))], 'old_family': ['DM', 'SIMPX', 'ADJX', 'SIMPX', 'DM', 'SIMPX'], 'start left siblings': ['DM', 'SIMPX'], 'auto preterminals': ('PTKANT', 'VVFIN', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'PTKA', 'ADJD', 'PPER', 'VVFIN', 'ADV', 'ADV', 'PTKANT', 'CARD', 'NN', 'CARD', 'VAFIN', 'PPER', 'ADV', 'ADJD'), 'start right siblings': ['SIMPX', 'DM', 'SIMPX'], 'end left siblings': ['LK', 'MF'], 'auto preterminal span': (0, 20), 'adding node already present': False, 'movers': ['ADJX'], 'old_parent': 'TURN', 'added and moved': True, 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'MF'}
(TOP ja denke ich auch aber nicht zu fruh ich schaue mal gerade ja acht uhr zwanzig ist mir ganz recht)

Sentence 614:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM okay)
		(DM ja)
		(SIMPX und dann habe ich mir da mich da auch noch so ein bischen schlau gemacht)
		(SIMPX konnte ja auch nach der veranstaltung noch was unternehmen)
		(SIMPX was halten sie davon)
		(SIMPX
			(VF ich)
			(LK dachte)
			(MF
				[01;36m(NX[00m [01;31m(ADVX[00m
					(ADV mehr)[01;31m)[00m[01;36m)[00m
				(PX an theaterbesuch im ballhof)))
		(SIMPX da kommen auch die andern kollegen mit)))
Step:Single Word Phrase
{'family': ['NX', 'PX'], 'auto preterminal span': (33, 34), 'span': (33, 34), 'subtrees': ['ADV'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'NX')}
(TOP ja okay ja und dann habe ich mir da mich da auch noch so ein bischen schlau gemacht konnte ja auch nach der veranstaltung noch was unternehmen was halten sie davon ich dachte mehr an theaterbesuch im ballhof da kommen auch die andern kollegen mit)

Sentence 615:
1 Initial errors
0 on fringe, 1 iterations
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ach so)
		[01;31m(DM[00m
			(ITJ ach)
			(NX gott)[01;31m)[00m
		(SIMPX haben sie eine liste da)
		(SIMPX konnen sie mir die eben reichen)))
Step:UNSET remove
{'subtrees': ['ITJ', 'NX'], 'family': ['DM', 'DM', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'ITJ', 'NE', 'VAFIN', 'PPER', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'PPER', 'PDS', 'ADV', 'VVINF'), 'right siblings': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 15), 'span': (2, 4), 'left siblings': ['DM'], 'label': 'DM', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ach so ach gott haben sie eine liste da konnen sie mir die eben reichen)

Sentence 616:
0 Initial errors
0 on fringe, 0 iterations

Sentence 617:
5 Initial errors
0 on fringe, 3 iterations
2 Error:Single Word Phrase
2 Error:Modifier Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM okay)
		(SIMPX dann kummern sie sich drum)
		(DM ne)
		[01;31m(DM[00m
			(ADVX dann)
			[01;36m(DM[00m
				(PTKANT ja)[01;36m)[00m[01;31m)[00m
		(SIMPX ich habe ja noch eine telefonnummer von dem hotel)
		(SIMPX ich denke mal da konnte ich das dann festmachen)
		(SIMPX
			[01;36m(C[00m [01;31m(PARORD[00m
				(KOUS weil)[01;31m)[00m[01;36m)[00m
			(LV
				(NX
					(NX das)
					[01;36m(LV[00m
						(PX
							(APPR mit)
							(NX dem reiseburo))[01;36m)[00m))
			(VF das)
			(LK ist)
			(MF immer so ein hinundher so ein hickhack))
		(SIMPX das mus nicht sein)
		(DM ja)))
Step:Single Word Phrase
{'family': ['C', 'LV', 'VF', 'LK', 'MF'], 'auto preterminal span': (27, 28), 'span': (27, 28), 'subtrees': ['KOUS'], 'parent': 'SIMPX', 'over_word': True, 'auto preterminals': ('KOUS',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('PARORD', 'C')}
(TOP
	(TURN
		(DM okay)
		(SIMPX dann kummern sie sich drum)
		(DM ne)
		[01;31m(DM[00m
			(ADVX dann)
			[01;36m(DM[00m
				(PTKANT ja)[01;36m)[00m[01;31m)[00m
		(SIMPX ich habe ja noch eine telefonnummer von dem hotel)
		(SIMPX ich denke mal da konnte ich das dann festmachen)
		(SIMPX
			(C weil)
			(LV
				(NX
					(NX das)
					[01;36m(LV[00m
						(PX
							(APPR mit)
							(NX dem reiseburo))[01;36m)[00m))
			(VF das)
			(LK ist)
			(MF immer so ein hinundher so ein hickhack))
		(SIMPX das mus nicht sein)
		(DM ja)))
Step:Modifier Attachment
{'new_parent': 'TURN', 'new_family': ['DM', 'SIMPX', 'DM', 'ADVX', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'DM'], 'mover info': [('ADVX', (7, 8))], 'old_family': ['ADVX', 'PTKANT'], 'start left siblings': [], 'auto preterminals': ('ITJ', 'ADV', 'VVFIN', 'PPER', 'PRF', 'PROP', 'ITJ', 'ADV', 'PTKANT', 'PPER', 'VAFIN', 'ADV', 'ADV', 'ART', 'NN', 'APPR', 'ART', 'NN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'VMFIN', 'PPER', 'PDS', 'ADV', 'VVINF', 'KOUS', 'PDS', 'APPR', 'ART', 'NN', 'PDS', 'VAFIN', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'ART', 'NN', 'PDS', 'VMFIN', 'PTKNEG', 'VAINF', 'PTKANT'), 'start right siblings': ['PTKANT'], 'end left siblings': ['DM', 'SIMPX', 'DM'], 'auto preterminal span': (0, 46), 'movers': ['ADVX'], 'old_parent': 'DM', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'DM'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM okay)
		(SIMPX dann kummern sie sich drum)
		(DM ne)
		(ADVX dann)
		(DM ja)
		(SIMPX ich habe ja noch eine telefonnummer von dem hotel)
		(SIMPX ich denke mal da konnte ich das dann festmachen)
		(SIMPX
			(C weil)
			(LV
				(NX
					(NX das)
					[01;36m(LV[00m
						(PX
							(APPR mit)
							(NX dem reiseburo))[01;36m)[00m))
			(VF das)
			(LK ist)
			(MF immer so ein hinundher so ein hickhack))
		(SIMPX das mus nicht sein)
		(DM ja)))
Step:Unary
{'subtrees': ['PX'], 'family': ['NX', 'LV'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NN'), 'right siblings': [], 'left siblings': [(NX (PDS das))], 'auto preterminal span': (29, 32), 'span': (29, 32), 'parent': 'NX', 'label': 'LV', 'classified_type': 'Unary', 'type': 'add'}
(TOP okay dann kummern sie sich drum ne dann ja ich habe ja noch eine telefonnummer von dem hotel ich denke mal da konnte ich das dann festmachen weil das mit dem reiseburo das ist immer so ein hinundher so ein hickhack das mus nicht sein ja)

Sentence 618:
2 Initial errors
0 on fringe, 2 iterations
1 Error:Unary
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM guten tag)
		(SIMPX
			(VF hier)
			(LK ist)
			[01;31m(MF[00m
				[01;31m(NX[00m
					(NX meurer)
					(PX aus bonn)[01;31m)[00m[01;31m)[00m)
		(SIMPX ich brauche eine verbindung nach hannover)
		(DM und zwar)
		(PX fur den funfzehnten juli)
		(SIMPX und ich muste um neun uhr morgens ungefahr da sein)))
Step:Unary
{'subtrees': ['NX', 'PX'], 'family': ['NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NE', 'APPR', 'NE'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (4, 7), 'span': (4, 7), 'left siblings': [], 'label': 'NX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM guten tag)
		(SIMPX
			(VF hier)
			(LK ist)
			[01;31m(MF[00m
				(NX meurer)
				(PX aus bonn)[01;31m)[00m)
		(SIMPX ich brauche eine verbindung nach hannover)
		(DM und zwar)
		(PX fur den funfzehnten juli)
		(SIMPX und ich muste um neun uhr morgens ungefahr da sein)))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'NE', 'APPR', 'NE'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (2, 7), 'span': (4, 7), 'left siblings': ['VF', 'LK'], 'label': 'MF', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP guten tag hier ist meurer aus bonn ich brauche eine verbindung nach hannover und zwar fur den funfzehnten juli und ich muste um neun uhr morgens ungefahr da sein)

Sentence 619:
3 Initial errors
0 on fringe, 2 iterations
2 Error:PP Attachment
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX das kommt drauf an wann ich ankomme)
		(DM also)
		(SIMPX
			(VF
				(SIMPX
					(C wenn)
					(MF
						(NX ich)
						[01;31m(NX[00m
							(PX mit dem flug)
							[01;36m(NX[00m
								(PDS [01;33m(NX[00m das)[01;36m)[00m[01;31m)[00m
						(PX an demselben tag)) [01;33mNX)[00m
					(VC packe)))
			(LK ginge)
			(MF das eigentlich auch))))
Step:PP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'PX', 'NX', 'PX'], 'mover info': [('PX', (10, 13))], 'old_family': ['PX', 'PDS'], 'start left siblings': [], 'auto preterminals': ('PPER', 'APPR', 'ART', 'NN', 'PDS', 'APPR', 'PDAT', 'NN'), 'start right siblings': ['PDS'], 'end left siblings': ['NX'], 'auto preterminal span': (9, 17), 'movers': ['PX'], 'old_parent': 'NX', 'end right siblings': ['NX', 'PX'], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SIMPX das kommt drauf an wann ich ankomme)
		(DM also)
		(SIMPX
			(VF
				(SIMPX
					(C wenn)
					(MF
						(NX ich)
						(PX mit dem flug)
						[01;36m(NX[00m
							(NX das)
							(PX an demselben tag)[01;36m)[00m)
					(VC packe)))
			(LK ginge)
			(MF das eigentlich auch))))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['NX', 'PX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'APPR', 'PDAT', 'NN'), 'right siblings': [], 'left siblings': [(NX (PPER ich)), (PX (APPR mit) (NX (ART dem) (NN flug)))], 'auto preterminal span': (13, 17), 'span': (13, 17), 'parent': 'MF', 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP das kommt drauf an wann ich ankomme also wenn ich mit dem flug das an demselben tag packe ginge das eigentlich auch)

Sentence 620:
4 Initial errors
0 on fringe, 2 iterations
3 Error:PP Attachment
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX das ware knapp)
		(SIMPX aber es muste eigentlich auch)
		(SIMPX
			(LK geht)
			(MF
				(ADVX auch)
				(ADVX irgendwie)
				(ADVX noch)
				[01;36m(NX[00m
					[01;31m(NX[00m
						(NX ein nachtexpres)
						(KON oder)
						[01;33m(PX[00m (ADVX so)[01;31m)[00m
					[01;31m(PX[00m
						(PROP dahin)[01;31m)[00m[01;36m)[00m)))) [01;33mPX)[00m
Step:PP Attachment
{'new_parent': 'NX', 'new_family': ['NX', 'KON', 'ADVX', 'PX'], 'mover info': [('PX', (16, 17))], 'old_family': ['ADVX', 'ADVX', 'ADVX', 'NX', 'PX'], 'start left siblings': ['ADVX', 'ADVX', 'ADVX', 'NX'], 'auto preterminals': ('ADV', 'ADV', 'ADV', 'ART', 'NN', 'KON', 'ADV', 'PROP'), 'start right siblings': [], 'end left siblings': ['NX', 'KON', 'ADVX'], 'auto preterminal span': (9, 17), 'adding node already present': False, 'movers': ['PX'], 'old_parent': 'MF', 'POS confusion': ('PROP', 'PROP'), 'added and moved': True, 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'PX'}
(TOP
	(TURN
		(SIMPX das ware knapp)
		(SIMPX aber es muste eigentlich auch)
		(SIMPX
			(LK geht)
			(MF
				(ADVX auch)
				(ADVX irgendwie)
				(ADVX noch)
				(NX
					(NX ein nachtexpres)
					(KON oder)
					(PX
						(ADVX so)
						[01;31m(PX[00m
							(PROP dahin)[01;31m)[00m))))))
Step:Single Word Phrase
{'subtrees': ['PROP'], 'family': ['ADVX', 'PX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADV', 'PROP'), 'right siblings': [], 'parent': 'PX', 'auto preterminal span': (15, 17), 'span': (16, 17), 'left siblings': ['ADVX'], 'label': 'PX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP das ware knapp aber es muste eigentlich auch geht auch irgendwie noch ein nachtexpres oder so dahin)

Sentence 621:
0 Initial errors
0 on fringe, 0 iterations

Sentence 622:
9 Initial errors
0 on fringe, 5 iterations
2 Error:Single Word Phrase
2 Error:Single Word Phrase
2 Error:Modifier Attachment
2 Error:Modifier Attachment
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM also)
		(SIMPX
			(VF ich)
			(LK bleibe)
			[01;36m(MF[00m
				[01;31m(MF[00m
					(ADVX sowieso)
					(NX einige tage)[01;31m)[00m
				[01;36m(ADVX[00m [01;31m(VC[00m
					(PTKVZ da)[01;31m)[00m[01;36m)[00m[01;36m)[00m)
		(SIMPX
			(VF ich)
			(LK bleibe)
			[01;36m(MF[00m
				[01;31m(MF[00m
					(NX
						(ADJX drei)
						(NN tage))[01;31m)[00m
				[01;36m(ADVX[00m [01;31m(VC[00m
					(PTKVZ da)[01;31m)[00m[01;36m)[00m[01;36m)[00m)
		(SIMPX das waren auf jeden fall dann mal drei nachte)
		(SIMPX
			(VF wieviel)
			(LK kostet)
			(MF
				(ADVX denn)
				[01;36m(NX[00m
					(NX ein hotel)
					(PX in hannover)[01;36m)[00m))
		(NX so mittelklasse)))
Step:Single Word Phrase
{'family': ['VF', 'LK', 'MF', 'ADVX'], 'auto preterminal span': (6, 7), 'span': (6, 7), 'subtrees': ['PTKVZ'], 'parent': 'SIMPX', 'over_word': True, 'auto preterminals': ('PTKVZ',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VC', 'ADVX')}
(TOP
	(TURN
		(DM also)
		(SIMPX
			(VF ich)
			(LK bleibe)
			[01;36m(MF[00m
				[01;31m(MF[00m
					(ADVX sowieso)
					(NX einige tage)[01;31m)[00m
				(ADVX da)[01;36m)[00m)
		(SIMPX
			(VF ich)
			(LK bleibe)
			[01;36m(MF[00m
				[01;31m(MF[00m
					(NX
						(ADJX drei)
						(NN tage))[01;31m)[00m
				[01;36m(ADVX[00m [01;31m(VC[00m
					(PTKVZ da)[01;31m)[00m[01;36m)[00m[01;36m)[00m)
		(SIMPX das waren auf jeden fall dann mal drei nachte)
		(SIMPX
			(VF wieviel)
			(LK kostet)
			(MF
				(ADVX denn)
				[01;36m(NX[00m
					(NX ein hotel)
					(PX in hannover)[01;36m)[00m))
		(NX so mittelklasse)))
Step:Single Word Phrase
{'family': ['VF', 'LK', 'MF', 'ADVX'], 'auto preterminal span': (11, 12), 'span': (11, 12), 'subtrees': ['PTKVZ'], 'parent': 'SIMPX', 'over_word': True, 'auto preterminals': ('PTKVZ',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VC', 'ADVX')}
(TOP
	(TURN
		(DM also)
		(SIMPX
			(VF ich)
			(LK bleibe)
			[01;36m(MF[00m
				[01;31m(MF[00m
					(ADVX sowieso)
					(NX einige tage)[01;31m)[00m
				(ADVX da)[01;36m)[00m)
		(SIMPX
			(VF ich)
			(LK bleibe)
			[01;36m(MF[00m
				[01;31m(MF[00m
					(NX
						(ADJX drei)
						(NN tage))[01;31m)[00m
				(ADVX da)[01;36m)[00m)
		(SIMPX das waren auf jeden fall dann mal drei nachte)
		(SIMPX
			(VF wieviel)
			(LK kostet)
			(MF
				(ADVX denn)
				[01;36m(NX[00m
					(NX ein hotel)
					(PX in hannover)[01;36m)[00m))
		(NX so mittelklasse)))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['ADVX', 'NX', 'ADVX'], 'mover info': [('ADVX', (6, 7))], 'old_family': ['VF', 'LK', 'MF', 'ADVX'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'PIAT', 'NN', 'PTKVZ'), 'start right siblings': [], 'end left siblings': ['ADVX', 'NX'], 'auto preterminal span': (1, 7), 'movers': ['ADVX'], 'old_parent': 'SIMPX', 'POS confusion': ('PTKVZ', 'PTKVZ'), 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM also)
		(SIMPX ich bleibe sowieso einige tage da)
		(SIMPX
			(VF ich)
			(LK bleibe)
			[01;36m(MF[00m
				[01;31m(MF[00m
					(NX
						(ADJX drei)
						(NN tage))[01;31m)[00m
				(ADVX da)[01;36m)[00m)
		(SIMPX das waren auf jeden fall dann mal drei nachte)
		(SIMPX
			(VF wieviel)
			(LK kostet)
			(MF
				(ADVX denn)
				[01;36m(NX[00m
					(NX ein hotel)
					(PX in hannover)[01;36m)[00m))
		(NX so mittelklasse)))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'ADVX'], 'mover info': [('ADVX', (11, 12))], 'old_family': ['VF', 'LK', 'MF', 'ADVX'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('PPER', 'VVFIN', 'CARD', 'NN', 'PTKVZ'), 'start right siblings': [], 'end left siblings': ['NX'], 'auto preterminal span': (7, 12), 'movers': ['ADVX'], 'old_parent': 'SIMPX', 'POS confusion': ('PTKVZ', 'PTKVZ'), 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM also)
		(SIMPX ich bleibe sowieso einige tage da)
		(SIMPX ich bleibe drei tage da)
		(SIMPX das waren auf jeden fall dann mal drei nachte)
		(SIMPX
			(VF wieviel)
			(LK kostet)
			(MF
				(ADVX denn)
				[01;36m(NX[00m
					(NX ein hotel)
					(PX in hannover)[01;36m)[00m))
		(NX so mittelklasse)))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['ADVX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'APPR', 'NE'), 'right siblings': [], 'left siblings': [(ADVX (ADV denn))], 'auto preterminal span': (24, 28), 'span': (24, 28), 'parent': 'MF', 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP also ich bleibe sowieso einige tage da ich bleibe drei tage da das waren auf jeden fall dann mal drei nachte wieviel kostet denn ein hotel in hannover so mittelklasse)

Sentence 623:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX was ware denn das nachstbilligere hotel)
		(NX
			(ADVX auch)
			[01;36m(NX[00m
				(ADVX so)
				[01;31m(NX[00m
					(ADJX zentrale)
					(NN lage)[01;31m)[00m[01;36m)[00m
			(ADVX eher))))
Step:Modifier Attachment
{'new_parent': 'NX', 'new_family': ['ADVX', 'ADJX', 'NN'], 'mover info': [('ADVX', (7, 8))], 'old_family': ['ADVX', 'ADVX', 'NX', 'ADVX'], 'start left siblings': ['ADVX'], 'auto preterminals': ('ADV', 'ADV', 'ADJA', 'NN', 'ADV'), 'start right siblings': ['NX', 'ADVX'], 'end left siblings': [], 'auto preterminal span': (6, 11), 'movers': ['ADVX'], 'old_parent': 'NX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['ADJX', 'NN'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP was ware denn das nachstbilligere hotel auch so zentrale lage eher)

Sentence 624:
4 Initial errors
0 on fringe, 1 iterations
4 Error:UNSET move
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX
			[01;31m(VF[00m
				[01;31m(SIMPX[00m
					(KOORD aber)
					[01;36m(VF[00m
						[01;36m(SIMPX[00m
							(C wenn)
							(MF man es)
							(VC zusammenrechnet)[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m
			(LK ware)
			(MF ja eigentlich der flug doch noch gunstiger))
		(SIMPX wenn ich einfach am selben tag fliegen wurde)))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['KOORD', 'VF', 'LK', 'MF'], 'mover info': [('KOORD', (0, 1))], 'old_family': ['KOORD', 'C', 'MF', 'VC'], 'start left siblings': [], 'auto preterminals': ('KON', 'KOUS', 'PIS', 'PPER', 'VVFIN', 'VAFIN', 'ADV', 'ADV', 'ART', 'NN', 'ADV', 'ADV', 'ADJD'), 'start right siblings': ['C', 'MF', 'VC'], 'end left siblings': [], 'auto preterminal span': (0, 13), 'movers': ['KOORD'], 'old_parent': 'SIMPX', 'POS confusion': ('KON', 'KON'), 'end right siblings': ['VF', 'LK', 'MF'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP aber wenn man es zusammenrechnet ware ja eigentlich der flug doch noch gunstiger wenn ich einfach am selben tag fliegen wurde)

Sentence 625:
0 Initial errors
0 on fringe, 0 iterations

Sentence 626:
0 Initial errors
0 on fringe, 0 iterations

Sentence 627:
3 Initial errors
0 on fringe, 2 iterations
2 Error:Different label
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM genau)
		(DM ja)
		(SIMPX
			(VF wann)
			(LK kann)
			(MF
				(NX ich)
				(PX bei ihnen)
				(NX
					(NX das flugticket)
					(KON und)
					[01;36m(NX[00m
						(NX die hotelbuchung)
						(KON und)
						[01;36m(ADJX[00m [01;31m(ADVX[00m
							(ADVX so)
							(ADV weiter)[01;31m)[00m[01;36m)[00m[01;36m)[00m))
			(VC abholen))))
Step:Different label
{'family': ['NX', 'KON', 'NX', 'KON', 'ADJX'], 'auto preterminal span': (14, 16), 'span': (14, 16), 'subtrees': ['ADVX', 'ADV'], 'parent': 'NX', 'over_word': False, 'auto preterminals': ('ADV', 'ADV'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('ADVX', 'ADJX')}
(TOP
	(TURN
		(DM ja)
		(DM genau)
		(DM ja)
		(SIMPX
			(VF wann)
			(LK kann)
			(MF
				(NX ich)
				(PX bei ihnen)
				(NX
					(NX das flugticket)
					(KON und)
					[01;36m(NX[00m
						(NX die hotelbuchung)
						(KON und)
						(ADJX so weiter)[01;36m)[00m))
			(VC abholen))))
Step:Modifier Attachment
{'subtrees': ['NX', 'KON', 'ADJX'], 'family': ['NX', 'KON', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'KON', 'ADV', 'ADV'), 'right siblings': [], 'left siblings': [(NX (ART das) (NN flugticket)), (KON und)], 'auto preterminal span': (11, 16), 'span': (11, 16), 'parent': 'NX', 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP ja genau ja wann kann ich bei ihnen das flugticket und die hotelbuchung und so weiter abholen)

Sentence 628:
0 Initial errors
0 on fringe, 0 iterations

Sentence 629:
8 Initial errors
0 on fringe, 2 iterations
7 Error:UNSET move
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX
			(LK ist)
			[01;36m(MF[00m
				[01;31m(MF[00m
					(NX es)
					(ADVX denn)
					[01;31m(NX[00m [01;33m(NX[00m
						(NX ein termin)
						[01;31m(PX[00m [01;33m(PX[00m
							(APPR unter)
							[01;33m(NX[00m (NX der woche)[01;31m)[00m[01;31m)[00m[01;31m)[00m
				[01;31m(NF[00m
					(NX
						(ART der)
						(ADJX funfzehnte)
						(NN juli))[01;31m)[00m[01;36m)[00m) [01;33mNX) PX) NX)[00m
		(SIMPX lassen sie mich mal gucken)))
Step:UNSET move
{'new_parent': 'PX', 'new_family': ['APPR', 'NX', 'NF'], 'mover info': [('NF', (8, 11))], 'old_family': ['LK', 'MF', 'NF'], 'start left siblings': ['LK', 'MF'], 'auto preterminals': ('VAFIN', 'PPER', 'ADV', 'ART', 'NN', 'APPR', 'ART', 'NN', 'ART', 'ADJA', 'NN'), 'start right siblings': [], 'end left siblings': ['APPR', 'NX'], 'auto preterminal span': (0, 11), 'adding node already present': False, 'movers': ['NF'], 'old_parent': 'SIMPX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(SIMPX
			(LK ist)
			(MF
				(NX es)
				(ADVX denn)
				(NX
					(NX ein termin)
					(PX
						(APPR unter)
						(NX
							(NX der woche)
							[01;31m(NF[00m
								(NX
									(ART der)
									(ADJX funfzehnte)
									(NN juli))[01;31m)[00m)))))
		(SIMPX lassen sie mich mal gucken)))
Step:Unary
{'subtrees': ['NX'], 'family': ['NX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'ART', 'ADJA', 'NN'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (6, 11), 'span': (8, 11), 'left siblings': ['NX'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ist es denn ein termin unter der woche der funfzehnte juli lassen sie mich mal gucken)

Sentence 630:
8 Initial errors
0 on fringe, 3 iterations
4 Error:PP Attachment
3 Error:PP Attachment
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM also)
		(SIMPX
			(LV wenn sie fliegen mochten)
			(VF es)
			(LK gibt)
			[01;31m(MF[00m
				(NX einen flug)
				[01;36m(NX[00m
					[01;31m(NX[00m
						[01;31m(NX[00m
							(NX jeden tag)
							[01;31m(PX[00m [01;33m(PX (PX[00m
								(PX von montag)
								[01;33m(PX[00m (PX bis freitag)[01;31m)[00m[01;31m)[00m
						(PX um sieben uhr zehn)[01;31m)[00m [01;33mPX) PX)[00m
					(PX von kolnbonn)[01;36m)[00m[01;31m)[00m) [01;33mPX)[00m
		(SIMPX und dann kommen sie in hannover um acht uhr zehn an)
		(SIMPX wurde ihnen das reichen)))
Step:PP Attachment
{'new_parent': 'PX', 'new_family': ['PX', 'PX', 'PX'], 'mover info': [('PX', (16, 20))], 'old_family': ['NX', 'PX'], 'start left siblings': ['NX'], 'auto preterminals': ('PIDAT', 'NN', 'APPR', 'NN', 'APPR', 'NN', 'APPR', 'CARD', 'NN', 'CARD'), 'start right siblings': [], 'end left siblings': ['PX', 'PX'], 'auto preterminal span': (10, 20), 'adding node already present': False, 'movers': ['PX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'PX'}
(TOP
	(TURN
		(DM ja)
		(DM also)
		(SIMPX
			(LV wenn sie fliegen mochten)
			(VF es)
			(LK gibt)
			[01;31m(MF[00m
				(NX einen flug)
				[01;36m(NX[00m
					[01;31m(NX[00m
						(NX jeden tag)
						[01;33m(PX[00m (PX von montag bis freitag um sieben uhr zehn)[01;31m)[00m
					(PX von kolnbonn)[01;36m)[00m[01;31m)[00m) [01;33mPX)[00m
		(SIMPX und dann kommen sie in hannover um acht uhr zehn an)
		(SIMPX wurde ihnen das reichen)))
Step:PP Attachment
{'new_parent': 'NX', 'new_family': ['NX', 'PX', 'PX'], 'mover info': [('PX', (20, 22))], 'old_family': ['NX', 'NX', 'PX'], 'start left siblings': ['NX', 'NX'], 'auto preterminals': ('ART', 'NN', 'PIDAT', 'NN', 'APPR', 'NN', 'APPR', 'NN', 'APPR', 'CARD', 'NN', 'CARD', 'APPR', 'NE'), 'start right siblings': [], 'end left siblings': ['NX', 'PX'], 'auto preterminal span': (8, 22), 'adding node already present': False, 'movers': ['PX'], 'old_parent': 'MF', 'added and moved': True, 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'PX'}
(TOP
	(TURN
		(DM ja)
		(DM also)
		(SIMPX
			(LV wenn sie fliegen mochten)
			(VF es)
			(LK gibt)
			[01;31m(MF[00m
				(NX einen flug)
				(NX jeden tag von montag bis freitag um sieben uhr zehn von kolnbonn)[01;31m)[00m)
		(SIMPX und dann kommen sie in hannover um acht uhr zehn an)
		(SIMPX wurde ihnen das reichen)))
Step:UNSET remove
{'subtrees': ['NX', 'NX'], 'family': ['LV', 'VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'VVINF', 'VMFIN', 'PPER', 'VVFIN', 'ART', 'NN', 'PIDAT', 'NN', 'APPR', 'NN', 'APPR', 'NN', 'APPR', 'CARD', 'NN', 'CARD', 'APPR', 'NE'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (2, 22), 'span': (8, 22), 'left siblings': ['LV', 'VF', 'LK'], 'label': 'MF', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ja also wenn sie fliegen mochten es gibt einen flug jeden tag von montag bis freitag um sieben uhr zehn von kolnbonn und dann kommen sie in hannover um acht uhr zehn an wurde ihnen das reichen)

Sentence 631:
27 Initial errors
0 on fringe, 21 iterations
3 Error:UNSET move
2 Error:Different label
2 Error:Different label
2 Error:Co-ordination
2 Error:UNSET move
1 Error:Unary
1 Error:Unary
1 Error:Single Word Phrase
1 Error:Unary
1 Error:UNSET remove
1 Error:Co-ordination
1 Error:UNSET add
1 Error:UNSET add
1 Error:Unary
1 Error:Single Word Phrase
1 Error:PP Attachment
1 Error:Single Word Phrase
1 Error:Modifier Attachment
1 Error:UNSET remove
1 Error:UNSET add
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM moment)
		(SIMPX ich gucke mal nach)
		(SIMPX nachts konnen sie nicht fahren)
		(DM also)
		(SIMPX
			(VF sie)
			(LK konnen)
			[01;36m(ADJX[00m
				(MF
					[01;31m(ADVX[00m
						(ADVX nur)
						(ADV tagsuber)[01;31m)[00m)[01;36m)[00m
			(VC fahren))
		(SIMPX
			(VF der erste zug)
			(LK geht)
			[01;36m(MF[00m
				[01;36m(PX[00m
					[01;31m(MF[00m
						(PX
							(APPR um)
							(NX funf uhr zehn))[01;31m)[00m
					[01;31m(VC[00m
						(PTKVZ ab)[01;31m)[00m
					[01;31m(NF[00m
						(PX
							(APPR von)
							(NX bonn))[01;31m)[00m[01;36m)[00m[01;36m)[00m)
		[01;31m(SIMPX[00m
			(VF da)
			(FKOORD
				[01;31m(LKMVCN[00m
					(LK musten)
					[01;33m(FKOORD[00m (MF sie allerdings)
					(VC umsteigen)
					[01;33m(PX (NF[00m (NF in dusseldorf hauptbahnhof)[01;31m)[00m
				(KON und)
				[01;36m(LKM[00m [01;31m(LKVCN[00m
					(LK kamen)
					[01;31m(VC[00m
						(PTKVZ an)[01;31m)[00m
					[01;31m(NF[00m
						(PX um sechs uhr zehn)
						(PX in hannover)[01;31m)[00m[01;31m)[00m[01;36m)[00m)[01;31m)[00m [01;33mNF) PX) FKOORD)[00m
		(SIMPX das ist ein ic)
		[01;31m(DM[00m
			(ITJ oh)[01;31m)[00m
		[01;31m(DM[00m
			(NX moment)
			(ADVX mal)[01;31m)[00m
		[01;36m(NF[00m
			(SIMPX
				(VF sie)
				(FKOORD
					(LKMVC
						(LK kommen)
						[01;36m(PX[00m
							(MF
								(PX in dusseldorf)
								(PX um sechs uhr sechs))[01;36m)[00m
						(VC an))
					(KON und)
					[01;36m(LKMVCN[00m
						[01;31m(LKMVC[00m
							(LK mussen)
							(MF da)
							[01;31m(VC[00m [01;33m(VC (VC[00m
								(VXINF
									(VVINF umsteigen))[01;31m)[00m[01;31m)[00m
						[01;31m(LKMVCN[00m
							(LK kommen) [01;33mVC)[00m
							(MF in hannover)
							(VC an) [01;33mVC)[00m
							[01;31m(NF[00m
								(PX
									(APPR um)
									(NX neun uhr zwei))[01;31m)[00m[01;31m)[00m[01;36m)[00m))[01;36m)[00m))
Step:UNSET move
{'new_parent': 'MF', 'new_family': ['PX', 'VC', 'NF'], 'mover info': [('VC', (24, 25)), ('NF', (25, 27))], 'old_family': ['VF', 'LK', 'MF', 'VC', 'NF'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('ART', 'ADJA', 'NN', 'VVFIN', 'APPR', 'CARD', 'NN', 'CARD', 'PTKVZ', 'APPR', 'NE'), 'start right siblings': [], 'end left siblings': ['PX'], 'auto preterminal span': (16, 27), 'adding node already present': False, 'movers': ['VC', 'NF'], 'old_parent': 'SIMPX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'LKMVCN'}
(TOP
	(TURN
		(DM moment)
		(SIMPX ich gucke mal nach)
		(SIMPX nachts konnen sie nicht fahren)
		(DM also)
		(SIMPX
			(VF sie)
			(LK konnen)
			[01;36m(ADJX[00m
				(MF
					[01;31m(ADVX[00m
						(ADVX nur)
						(ADV tagsuber)[01;31m)[00m)[01;36m)[00m
			(VC fahren))
		(SIMPX
			(VF der erste zug)
			(LK geht)
			(PX
				(MF
					(PX um funf uhr zehn)
					[01;31m(VC[00m
						(PTKVZ ab)[01;31m)[00m
					[01;31m(NF[00m
						(PX
							(APPR von)
							(NX bonn))[01;31m)[00m)))
		[01;31m(SIMPX[00m
			(VF da)
			(FKOORD
				[01;31m(LKMVCN[00m
					(LK musten)
					[01;33m(FKOORD[00m (MF sie allerdings)
					(VC umsteigen)
					[01;33m(PX (NF[00m (NF in dusseldorf hauptbahnhof)[01;31m)[00m
				(KON und)
				[01;36m(LKM[00m [01;31m(LKVCN[00m
					(LK kamen)
					[01;31m(VC[00m
						(PTKVZ an)[01;31m)[00m
					[01;31m(NF[00m
						(PX um sechs uhr zehn)
						(PX in hannover)[01;31m)[00m[01;31m)[00m[01;36m)[00m)[01;31m)[00m [01;33mNF) PX) FKOORD)[00m
		(SIMPX das ist ein ic)
		[01;31m(DM[00m
			(ITJ oh)[01;31m)[00m
		[01;31m(DM[00m
			(NX moment)
			(ADVX mal)[01;31m)[00m
		[01;36m(NF[00m
			(SIMPX
				(VF sie)
				(FKOORD
					(LKMVC
						(LK kommen)
						[01;36m(PX[00m
							(MF
								(PX in dusseldorf)
								(PX um sechs uhr sechs))[01;36m)[00m
						(VC an))
					(KON und)
					[01;36m(LKMVCN[00m
						[01;31m(LKMVC[00m
							(LK mussen)
							(MF da)
							[01;31m(VC[00m [01;33m(VC (VC[00m
								(VXINF
									(VVINF umsteigen))[01;31m)[00m[01;31m)[00m
						[01;31m(LKMVCN[00m
							(LK kommen) [01;33mVC)[00m
							(MF in hannover)
							(VC an) [01;33mVC)[00m
							[01;31m(NF[00m
								(PX
									(APPR um)
									(NX neun uhr zwei))[01;31m)[00m[01;31m)[00m[01;36m)[00m))[01;36m)[00m))
Step:Different label
{'family': ['ADJX'], 'auto preterminal span': (13, 15), 'span': (13, 15), 'subtrees': ['ADVX', 'ADV'], 'parent': 'MF', 'over_word': False, 'auto preterminals': ('ADV', 'ADV'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('ADVX', 'ADJX')}
(TOP
	(TURN
		(DM moment)
		(SIMPX ich gucke mal nach)
		(SIMPX nachts konnen sie nicht fahren)
		(DM also)
		(SIMPX sie konnen nur tagsuber fahren)
		(SIMPX
			(VF der erste zug)
			(LK geht)
			(PX
				(MF
					(PX um funf uhr zehn)
					[01;31m(VC[00m
						(PTKVZ ab)[01;31m)[00m
					[01;31m(NF[00m
						(PX
							(APPR von)
							(NX bonn))[01;31m)[00m)))
		[01;31m(SIMPX[00m
			(VF da)
			(FKOORD
				[01;31m(LKMVCN[00m
					(LK musten)
					[01;33m(FKOORD[00m (MF sie allerdings)
					(VC umsteigen)
					[01;33m(PX (NF[00m (NF in dusseldorf hauptbahnhof)[01;31m)[00m
				(KON und)
				[01;36m(LKM[00m [01;31m(LKVCN[00m
					(LK kamen)
					[01;31m(VC[00m
						(PTKVZ an)[01;31m)[00m
					[01;31m(NF[00m
						(PX um sechs uhr zehn)
						(PX in hannover)[01;31m)[00m[01;31m)[00m[01;36m)[00m)[01;31m)[00m [01;33mNF) PX) FKOORD)[00m
		(SIMPX das ist ein ic)
		[01;31m(DM[00m
			(ITJ oh)[01;31m)[00m
		[01;31m(DM[00m
			(NX moment)
			(ADVX mal)[01;31m)[00m
		[01;36m(NF[00m
			(SIMPX
				(VF sie)
				(FKOORD
					(LKMVC
						(LK kommen)
						[01;36m(PX[00m
							(MF
								(PX in dusseldorf)
								(PX um sechs uhr sechs))[01;36m)[00m
						(VC an))
					(KON und)
					[01;36m(LKMVCN[00m
						[01;31m(LKMVC[00m
							(LK mussen)
							(MF da)
							[01;31m(VC[00m [01;33m(VC (VC[00m
								(VXINF
									(VVINF umsteigen))[01;31m)[00m[01;31m)[00m
						[01;31m(LKMVCN[00m
							(LK kommen) [01;33mVC)[00m
							(MF in hannover)
							(VC an) [01;33mVC)[00m
							[01;31m(NF[00m
								(PX
									(APPR um)
									(NX neun uhr zwei))[01;31m)[00m[01;31m)[00m[01;36m)[00m))[01;36m)[00m))
Step:Different label
{'family': ['LKMVCN', 'KON', 'LKM'], 'auto preterminal span': (36, 44), 'span': (36, 44), 'subtrees': ['LK', 'VC', 'NF'], 'parent': 'FKOORD', 'over_word': False, 'auto preterminals': ('VVFIN', 'PTKVZ', 'APPR', 'CARD', 'NN', 'CARD', 'APPR', 'NE'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('LKVCN', 'LKM')}
(TOP
	(TURN
		(DM moment)
		(SIMPX ich gucke mal nach)
		(SIMPX nachts konnen sie nicht fahren)
		(DM also)
		(SIMPX sie konnen nur tagsuber fahren)
		(SIMPX
			(VF der erste zug)
			(LK geht)
			(PX
				(MF
					(PX um funf uhr zehn)
					[01;31m(VC[00m
						(PTKVZ ab)[01;31m)[00m
					[01;31m(NF[00m
						(PX
							(APPR von)
							(NX bonn))[01;31m)[00m)))
		[01;31m(SIMPX[00m
			(VF da)
			(FKOORD
				[01;31m(LKMVCN[00m
					(LK musten)
					[01;33m(FKOORD[00m (MF sie allerdings)
					(VC umsteigen)
					[01;33m(PX (NF[00m (NF in dusseldorf hauptbahnhof)[01;31m)[00m
				(KON und)
				(LKM
					(LK kamen)
					[01;31m(VC[00m
						(PTKVZ an)[01;31m)[00m
					[01;31m(NF[00m
						(PX um sechs uhr zehn)
						(PX in hannover)[01;31m)[00m))[01;31m)[00m [01;33mNF) PX) FKOORD)[00m
		(SIMPX das ist ein ic)
		[01;31m(DM[00m
			(ITJ oh)[01;31m)[00m
		[01;31m(DM[00m
			(NX moment)
			(ADVX mal)[01;31m)[00m
		[01;36m(NF[00m
			(SIMPX
				(VF sie)
				(FKOORD
					(LKMVC
						(LK kommen)
						[01;36m(PX[00m
							(MF
								(PX in dusseldorf)
								(PX um sechs uhr sechs))[01;36m)[00m
						(VC an))
					(KON und)
					[01;36m(LKMVCN[00m
						[01;31m(LKMVC[00m
							(LK mussen)
							(MF da)
							[01;31m(VC[00m [01;33m(VC (VC[00m
								(VXINF
									(VVINF umsteigen))[01;31m)[00m[01;31m)[00m
						[01;31m(LKMVCN[00m
							(LK kommen) [01;33mVC)[00m
							(MF in hannover)
							(VC an) [01;33mVC)[00m
							[01;31m(NF[00m
								(PX
									(APPR um)
									(NX neun uhr zwei))[01;31m)[00m[01;31m)[00m[01;36m)[00m))[01;36m)[00m))
Step:Co-ordination
{'new_parent': 'LKMVCN', 'new_family': ['LKMVC', 'LK', 'MF', 'VC', 'NF'], 'mover info': [('LKMVC', (61, 64))], 'old_family': ['LKMVC', 'KON', 'LKMVC', 'LKMVCN'], 'start left siblings': ['LKMVC', 'KON'], 'auto preterminals': ('VVFIN', 'APPR', 'NE', 'APPR', 'CARD', 'NN', 'CARD', 'PTKVZ', 'KON', 'VMFIN', 'ADV', 'VVINF', 'VVFIN', 'APPR', 'NE', 'PTKVZ', 'APPR', 'CARD', 'NN', 'CARD'), 'start right siblings': ['LKMVCN'], 'end left siblings': [], 'auto preterminal span': (52, 72), 'movers': ['LKMVC'], 'old_parent': 'FKOORD', 'end right siblings': ['LK', 'MF', 'VC', 'NF'], 'classified_type': 'Co-ordination', 'type': 'move'}
(TOP
	(TURN
		(DM moment)
		(SIMPX ich gucke mal nach)
		(SIMPX nachts konnen sie nicht fahren)
		(DM also)
		(SIMPX sie konnen nur tagsuber fahren)
		(SIMPX
			(VF der erste zug)
			(LK geht)
			(PX
				(MF
					(PX um funf uhr zehn)
					[01;31m(VC[00m
						(PTKVZ ab)[01;31m)[00m
					[01;31m(NF[00m
						(PX
							(APPR von)
							(NX bonn))[01;31m)[00m)))
		[01;31m(SIMPX[00m
			(VF da)
			(FKOORD
				[01;31m(LKMVCN[00m
					(LK musten)
					[01;33m(FKOORD[00m (MF sie allerdings)
					(VC umsteigen)
					[01;33m(PX (NF[00m (NF in dusseldorf hauptbahnhof)[01;31m)[00m
				(KON und)
				(LKM
					(LK kamen)
					[01;31m(VC[00m
						(PTKVZ an)[01;31m)[00m
					[01;31m(NF[00m
						(PX um sechs uhr zehn)
						(PX in hannover)[01;31m)[00m))[01;31m)[00m [01;33mNF) PX) FKOORD)[00m
		(SIMPX das ist ein ic)
		[01;31m(DM[00m
			(ITJ oh)[01;31m)[00m
		[01;31m(DM[00m
			(NX moment)
			(ADVX mal)[01;31m)[00m
		[01;36m(NF[00m
			(SIMPX
				(VF sie)
				(FKOORD
					(LKMVC
						(LK kommen)
						[01;36m(PX[00m
							(MF
								(PX in dusseldorf)
								(PX um sechs uhr sechs))[01;36m)[00m
						(VC an))
					(KON und)
					(LKMVCN
						[01;31m(LKMVC[00m
							(LK mussen)
							(MF da)
							[01;31m(VC[00m [01;33m(VC (VC[00m
								(VXINF
									(VVINF umsteigen))[01;31m)[00m[01;31m)[00m
						(LK kommen) [01;33mVC)[00m
						(MF in hannover)
						(VC an) [01;33mVC)[00m
						[01;31m(NF[00m
							(PX
								(APPR um)
								(NX neun uhr zwei))[01;31m)[00m)))[01;36m)[00m))
Step:UNSET move
{'new_parent': 'VC', 'new_family': ['VXINF', 'LK'], 'mover info': [('LK', (64, 65))], 'old_family': ['LKMVC', 'LK', 'MF', 'VC', 'NF'], 'start left siblings': ['LKMVC'], 'auto preterminals': ('VMFIN', 'ADV', 'VVINF', 'VVFIN', 'APPR', 'NE', 'PTKVZ', 'APPR', 'CARD', 'NN', 'CARD'), 'start right siblings': ['MF', 'VC', 'NF'], 'end left siblings': ['VXINF'], 'auto preterminal span': (61, 72), 'movers': ['LK'], 'old_parent': 'LKMVCN', 'POS confusion': ('VVFIN', 'VVFIN'), 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM moment)
		(SIMPX ich gucke mal nach)
		(SIMPX nachts konnen sie nicht fahren)
		(DM also)
		(SIMPX sie konnen nur tagsuber fahren)
		(SIMPX
			(VF der erste zug)
			(LK geht)
			(PX
				(MF
					(PX um funf uhr zehn)
					[01;31m(VC[00m
						(PTKVZ ab)[01;31m)[00m
					[01;31m(NF[00m
						(PX
							(APPR von)
							(NX bonn))[01;31m)[00m)))
		[01;31m(SIMPX[00m
			(VF da)
			(FKOORD
				[01;31m(LKMVCN[00m
					(LK musten)
					[01;33m(FKOORD[00m (MF sie allerdings)
					(VC umsteigen)
					[01;33m(PX (NF[00m (NF in dusseldorf hauptbahnhof)[01;31m)[00m
				(KON und)
				(LKM
					(LK kamen)
					[01;31m(VC[00m
						(PTKVZ an)[01;31m)[00m
					[01;31m(NF[00m
						(PX um sechs uhr zehn)
						(PX in hannover)[01;31m)[00m))[01;31m)[00m [01;33mNF) PX) FKOORD)[00m
		(SIMPX das ist ein ic)
		[01;31m(DM[00m
			(ITJ oh)[01;31m)[00m
		[01;31m(DM[00m
			(NX moment)
			(ADVX mal)[01;31m)[00m
		[01;36m(NF[00m
			(SIMPX
				(VF sie)
				(FKOORD
					(LKMVC
						(LK kommen)
						[01;36m(PX[00m
							(MF
								(PX in dusseldorf)
								(PX um sechs uhr sechs))[01;36m)[00m
						(VC an))
					(KON und)
					(LKMVCN
						[01;31m(LKMVC[00m
							(LK mussen)
							(MF da)
							[01;33m(VC[00m (VC umsteigen kommen)[01;31m)[00m
						(MF in hannover)
						(VC an) [01;33mVC)[00m
						[01;31m(NF[00m
							(PX
								(APPR um)
								(NX neun uhr zwei))[01;31m)[00m)))[01;36m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['DM', 'SIMPX', 'SIMPX', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'DM', 'DM', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'APPR', 'NE', 'APPR', 'CARD', 'NN', 'CARD', 'PTKVZ', 'KON', 'VMFIN', 'ADV', 'VVINF', 'VVFIN', 'APPR', 'NE', 'PTKVZ', 'APPR', 'CARD', 'NN', 'CARD'), 'right siblings': [], 'left siblings': [(DM (NX (NN moment))), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN gucke))) (MF (ADVX (ADV mal))) (VC (PTKVZ nach))), (SIMPX (VF (ADVX (ADV nachts))) (LK (VXFIN (VMFIN konnen))) (MF (NX (PPER sie)) (ADVX (PTKNEG nicht))) (VC (VXINF (VVINF fahren)))), (DM (ADVX (ADV also))), (SIMPX (VF (NX (PPER sie))) (LK (VXFIN (VMFIN konnen))) (MF (ADJX (ADVX (ADV nur)) (ADV tagsuber))) (VC (VXINF (VVINF fahren)))), (SIMPX (VF (NX (ART der) (ADJX (ADJA erste)) (NN zug))) (LK (VXFIN (VVFIN geht))) (PX (MF (PX (APPR um) (NX (NX (ADJX (CARD funf)) (NN uhr)) (ADJX (CARD zehn)))) (VC (PTKVZ ab)) (NF (PX (APPR von) (NX (NE bonn))))))), (SIMPX (VF (ADVX (ADV da))) (FKOORD (LKMVCN (LK (VXFIN (VMFIN musten))) (MF (NX (PPER sie)) (ADVX (ADV allerdings))) (VC (VXINF (VVINF umsteigen))) (NF (PX (APPR in) (NX (NX (NE dusseldorf)) (NX (NN hauptbahnhof)))))) (KON und) (LKM (LK (VXFIN (VVFIN kamen))) (VC (PTKVZ an)) (NF (PX (APPR um) (NX (NX (ADJX (CARD sechs)) (NN uhr)) (ADJX (CARD zehn)))) (PX (APPR in) (NX (NE hannover))))))), (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VAFIN ist))) (MF (NX (ART ein) (NE ic)))), (DM (ITJ oh)), (DM (NX (NN moment)) (ADVX (ADV mal)))], 'auto preterminal span': (51, 72), 'span': (51, 72), 'parent': 'TURN', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM moment)
		(SIMPX ich gucke mal nach)
		(SIMPX nachts konnen sie nicht fahren)
		(DM also)
		(SIMPX sie konnen nur tagsuber fahren)
		(SIMPX
			(VF der erste zug)
			(LK geht)
			(PX
				(MF
					(PX um funf uhr zehn)
					[01;31m(VC[00m
						(PTKVZ ab)[01;31m)[00m
					[01;31m(NF[00m
						(PX
							(APPR von)
							(NX bonn))[01;31m)[00m)))
		[01;31m(SIMPX[00m
			(VF da)
			(FKOORD
				[01;31m(LKMVCN[00m
					(LK musten)
					[01;33m(FKOORD[00m (MF sie allerdings)
					(VC umsteigen)
					[01;33m(PX (NF[00m (NF in dusseldorf hauptbahnhof)[01;31m)[00m
				(KON und)
				(LKM
					(LK kamen)
					[01;31m(VC[00m
						(PTKVZ an)[01;31m)[00m
					[01;31m(NF[00m
						(PX um sechs uhr zehn)
						(PX in hannover)[01;31m)[00m))[01;31m)[00m [01;33mNF) PX) FKOORD)[00m
		(SIMPX das ist ein ic)
		[01;31m(DM[00m
			(ITJ oh)[01;31m)[00m
		[01;31m(DM[00m
			(NX moment)
			(ADVX mal)[01;31m)[00m
		(NF
			(SIMPX
				(VF sie)
				(FKOORD
					(LKMVC
						(LK kommen)
						[01;36m(PX[00m
							(MF
								(PX in dusseldorf)
								(PX um sechs uhr sechs))[01;36m)[00m
						(VC an))
					(KON und)
					(LKMVCN
						[01;31m(LKMVC[00m
							(LK mussen)
							(MF da)
							[01;33m(VC[00m (VC umsteigen kommen)[01;31m)[00m
						(MF in hannover)
						(VC an) [01;33mVC)[00m
						[01;31m(NF[00m
							(PX
								(APPR um)
								(NX neun uhr zwei))[01;31m)[00m))))))
Step:Unary
{'subtrees': ['MF'], 'family': ['LK', 'PX', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'NE', 'APPR', 'CARD', 'NN', 'CARD'), 'right siblings': [(VC (PTKVZ an))], 'left siblings': [(LK (VXFIN (VVFIN kommen)))], 'auto preterminal span': (53, 59), 'span': (53, 59), 'parent': 'LKMVC', 'label': 'PX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM moment)
		(SIMPX ich gucke mal nach)
		(SIMPX nachts konnen sie nicht fahren)
		(DM also)
		(SIMPX sie konnen nur tagsuber fahren)
		(SIMPX
			(VF der erste zug)
			(LK geht)
			(PX
				(MF
					(PX um funf uhr zehn)
					[01;31m(VC[00m
						(PTKVZ ab)[01;31m)[00m
					[01;31m(NF[00m
						(PX
							(APPR von)
							(NX bonn))[01;31m)[00m)))
		[01;31m(SIMPX[00m
			(VF da)
			(FKOORD
				[01;31m(LKMVCN[00m
					(LK musten)
					[01;33m(FKOORD[00m (MF sie allerdings)
					(VC umsteigen)
					[01;33m(PX (NF[00m (NF in dusseldorf hauptbahnhof)[01;31m)[00m
				(KON und)
				(LKM
					(LK kamen)
					[01;31m(VC[00m
						(PTKVZ an)[01;31m)[00m
					[01;31m(NF[00m
						(PX um sechs uhr zehn)
						(PX in hannover)[01;31m)[00m))[01;31m)[00m [01;33mNF) PX) FKOORD)[00m
		(SIMPX das ist ein ic)
		[01;31m(DM[00m
			(ITJ oh)[01;31m)[00m
		[01;31m(DM[00m
			(NX moment)
			(ADVX mal)[01;31m)[00m
		(NF
			(SIMPX
				(VF sie)
				(FKOORD
					(LKMVC kommen in dusseldorf um sechs uhr sechs an)
					(KON und)
					(LKMVCN
						[01;31m(LKMVC[00m
							(LK mussen)
							(MF da)
							[01;33m(VC[00m (VC umsteigen kommen)[01;31m)[00m
						(MF in hannover)
						(VC an) [01;33mVC)[00m
						[01;31m(NF[00m
							(PX
								(APPR um)
								(NX neun uhr zwei))[01;31m)[00m))))))
Step:Single Word Phrase
{'subtrees': ['PTKVZ'], 'family': ['PX', 'VC', 'NF'], 'over_word': True, 'over words': True, 'auto preterminals': ('APPR', 'CARD', 'NN', 'CARD', 'PTKVZ', 'APPR', 'NE'), 'right siblings': ['NF'], 'parent': 'MF', 'auto preterminal span': (20, 27), 'span': (24, 25), 'left siblings': ['PX'], 'label': 'VC', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(DM moment)
		(SIMPX ich gucke mal nach)
		(SIMPX nachts konnen sie nicht fahren)
		(DM also)
		(SIMPX sie konnen nur tagsuber fahren)
		(SIMPX
			(VF der erste zug)
			(LK geht)
			(PX
				(MF
					(PX um funf uhr zehn)
					(PTKVZ ab)
					[01;31m(NF[00m
						(PX
							(APPR von)
							(NX bonn))[01;31m)[00m)))
		[01;31m(SIMPX[00m
			(VF da)
			(FKOORD
				[01;31m(LKMVCN[00m
					(LK musten)
					[01;33m(FKOORD[00m (MF sie allerdings)
					(VC umsteigen)
					[01;33m(PX (NF[00m (NF in dusseldorf hauptbahnhof)[01;31m)[00m
				(KON und)
				(LKM
					(LK kamen)
					[01;31m(VC[00m
						(PTKVZ an)[01;31m)[00m
					[01;31m(NF[00m
						(PX um sechs uhr zehn)
						(PX in hannover)[01;31m)[00m))[01;31m)[00m [01;33mNF) PX) FKOORD)[00m
		(SIMPX das ist ein ic)
		[01;31m(DM[00m
			(ITJ oh)[01;31m)[00m
		[01;31m(DM[00m
			(NX moment)
			(ADVX mal)[01;31m)[00m
		(NF
			(SIMPX
				(VF sie)
				(FKOORD
					(LKMVC kommen in dusseldorf um sechs uhr sechs an)
					(KON und)
					(LKMVCN
						[01;31m(LKMVC[00m
							(LK mussen)
							(MF da)
							[01;33m(VC[00m (VC umsteigen kommen)[01;31m)[00m
						(MF in hannover)
						(VC an) [01;33mVC)[00m
						[01;31m(NF[00m
							(PX
								(APPR um)
								(NX neun uhr zwei))[01;31m)[00m))))))
Step:Unary
{'subtrees': ['PX'], 'family': ['PX', 'PTKVZ', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'CARD', 'NN', 'CARD', 'PTKVZ', 'APPR', 'NE'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (20, 27), 'span': (25, 27), 'left siblings': ['PX', 'PTKVZ'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM moment)
		(SIMPX ich gucke mal nach)
		(SIMPX nachts konnen sie nicht fahren)
		(DM also)
		(SIMPX sie konnen nur tagsuber fahren)
		(SIMPX der erste zug geht um funf uhr zehn ab von bonn)
		[01;31m(SIMPX[00m
			(VF da)
			(FKOORD
				[01;31m(LKMVCN[00m
					(LK musten)
					[01;33m(FKOORD[00m (MF sie allerdings)
					(VC umsteigen)
					[01;33m(PX (NF[00m (NF in dusseldorf hauptbahnhof)[01;31m)[00m
				(KON und)
				(LKM
					(LK kamen)
					[01;31m(VC[00m
						(PTKVZ an)[01;31m)[00m
					[01;31m(NF[00m
						(PX um sechs uhr zehn)
						(PX in hannover)[01;31m)[00m))[01;31m)[00m [01;33mNF) PX) FKOORD)[00m
		(SIMPX das ist ein ic)
		[01;31m(DM[00m
			(ITJ oh)[01;31m)[00m
		[01;31m(DM[00m
			(NX moment)
			(ADVX mal)[01;31m)[00m
		(NF
			(SIMPX
				(VF sie)
				(FKOORD
					(LKMVC kommen in dusseldorf um sechs uhr sechs an)
					(KON und)
					(LKMVCN
						[01;31m(LKMVC[00m
							(LK mussen)
							(MF da)
							[01;33m(VC[00m (VC umsteigen kommen)[01;31m)[00m
						(MF in hannover)
						(VC an) [01;33mVC)[00m
						[01;31m(NF[00m
							(PX
								(APPR um)
								(NX neun uhr zwei))[01;31m)[00m))))))
Step:UNSET remove
{'subtrees': ['VF', 'FKOORD'], 'family': ['DM', 'SIMPX', 'SIMPX', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'DM', 'DM', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'PPER', 'VVFIN', 'ADV', 'PTKVZ', 'ADV', 'VMFIN', 'PPER', 'PTKNEG', 'VVINF', 'ADV', 'PPER', 'VMFIN', 'ADV', 'ADV', 'VVINF', 'ART', 'ADJA', 'NN', 'VVFIN', 'APPR', 'CARD', 'NN', 'CARD', 'PTKVZ', 'APPR', 'NE', 'ADV', 'VMFIN', 'PPER', 'ADV', 'VVINF', 'APPR', 'NE', 'NN', 'KON', 'VVFIN', 'PTKVZ', 'APPR', 'CARD', 'NN', 'CARD', 'APPR', 'NE', 'PDS', 'VAFIN', 'ART', 'NE', 'ITJ', 'NN', 'ADV', 'PPER', 'VVFIN', 'APPR', 'NE', 'APPR', 'CARD', 'NN', 'CARD', 'PTKVZ', 'KON', 'VMFIN', 'ADV', 'VVINF', 'VVFIN', 'APPR', 'NE', 'PTKVZ', 'APPR', 'CARD', 'NN', 'CARD'), 'right siblings': ['SIMPX', 'DM', 'DM', 'NF'], 'parent': 'TURN', 'auto preterminal span': (0, 72), 'span': (27, 44), 'left siblings': ['DM', 'SIMPX', 'SIMPX', 'DM', 'SIMPX', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM moment)
		(SIMPX ich gucke mal nach)
		(SIMPX nachts konnen sie nicht fahren)
		(DM also)
		(SIMPX sie konnen nur tagsuber fahren)
		(SIMPX der erste zug geht um funf uhr zehn ab von bonn)
		(VF da)
		(FKOORD
			[01;31m(LKMVCN[00m
				(LK musten)
				[01;33m(FKOORD[00m (MF sie allerdings)
				(VC umsteigen)
				[01;33m(PX (NF[00m (NF in dusseldorf hauptbahnhof)[01;31m)[00m
			(KON und)
			(LKM
				(LK kamen)
				[01;31m(VC[00m
					(PTKVZ an)[01;31m)[00m
				[01;31m(NF[00m
					(PX um sechs uhr zehn)
					(PX in hannover)[01;31m)[00m)) [01;33mNF) PX) FKOORD)[00m
		(SIMPX das ist ein ic)
		[01;31m(DM[00m
			(ITJ oh)[01;31m)[00m
		[01;31m(DM[00m
			(NX moment)
			(ADVX mal)[01;31m)[00m
		(NF
			(SIMPX
				(VF sie)
				(FKOORD
					(LKMVC kommen in dusseldorf um sechs uhr sechs an)
					(KON und)
					(LKMVCN
						[01;31m(LKMVC[00m
							(LK mussen)
							(MF da)
							[01;33m(VC[00m (VC umsteigen kommen)[01;31m)[00m
						(MF in hannover)
						(VC an) [01;33mVC)[00m
						[01;31m(NF[00m
							(PX
								(APPR um)
								(NX neun uhr zwei))[01;31m)[00m))))))
Step:Co-ordination
{'subtrees': ['LK', 'MF', 'VC', 'NF'], 'family': ['LKMVCN', 'KON', 'LKM'], 'over_word': False, 'over words': False, 'auto preterminals': ('VMFIN', 'PPER', 'ADV', 'VVINF', 'APPR', 'NE', 'NN', 'KON', 'VVFIN', 'PTKVZ', 'APPR', 'CARD', 'NN', 'CARD', 'APPR', 'NE'), 'right siblings': ['KON', 'LKM'], 'parent': 'FKOORD', 'auto preterminal span': (28, 44), 'span': (28, 35), 'left siblings': [], 'label': 'LKMVCN', 'classified_type': 'Co-ordination', 'type': 'remove'}
(TOP
	(TURN
		(DM moment)
		(SIMPX ich gucke mal nach)
		(SIMPX nachts konnen sie nicht fahren)
		(DM also)
		(SIMPX sie konnen nur tagsuber fahren)
		(SIMPX der erste zug geht um funf uhr zehn ab von bonn)
		(VF da)
		(FKOORD
			(LK musten)
			[01;36m(FKOORD[00m
				(MF sie allerdings)
				(VC umsteigen)
				[01;36m(NF[00m
					[01;36m(PX[00m
						(NF in dusseldorf hauptbahnhof)
						(KON und)
						(LKM
							(LK kamen)
							[01;31m(VC[00m
								(PTKVZ an)[01;31m)[00m
							[01;31m(NF[00m
								(PX um sechs uhr zehn)
								(PX in hannover)[01;31m)[00m)[01;36m)[00m[01;36m)[00m[01;36m)[00m)
		(SIMPX das ist ein ic)
		[01;31m(DM[00m
			(ITJ oh)[01;31m)[00m
		[01;31m(DM[00m
			(NX moment)
			(ADVX mal)[01;31m)[00m
		(NF
			(SIMPX
				(VF sie)
				(FKOORD
					(LKMVC kommen in dusseldorf um sechs uhr sechs an)
					(KON und)
					(LKMVCN
						[01;31m(LKMVC[00m
							(LK mussen)
							(MF da)
							[01;33m(VC[00m (VC umsteigen kommen)[01;31m)[00m
						(MF in hannover)
						(VC an) [01;33mVC)[00m
						[01;31m(NF[00m
							(PX
								(APPR um)
								(NX neun uhr zwei))[01;31m)[00m))))))
Step:UNSET add
{'subtrees': ['MF', 'VC', 'NF', 'KON', 'LKM'], 'family': ['LK', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV', 'VVINF', 'APPR', 'NE', 'NN', 'KON', 'VVFIN', 'PTKVZ', 'APPR', 'CARD', 'NN', 'CARD', 'APPR', 'NE'), 'right siblings': [], 'left siblings': [(LK (VXFIN (VMFIN musten)))], 'auto preterminal span': (29, 44), 'span': (29, 44), 'parent': 'FKOORD', 'label': 'FKOORD', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM moment)
		(SIMPX ich gucke mal nach)
		(SIMPX nachts konnen sie nicht fahren)
		(DM also)
		(SIMPX sie konnen nur tagsuber fahren)
		(SIMPX der erste zug geht um funf uhr zehn ab von bonn)
		(VF da)
		(FKOORD
			(LK musten)
			(FKOORD
				(MF sie allerdings)
				(VC umsteigen)
				[01;36m(NF[00m
					[01;36m(PX[00m
						(NF in dusseldorf hauptbahnhof)
						(KON und)
						(LKM
							(LK kamen)
							[01;31m(VC[00m
								(PTKVZ an)[01;31m)[00m
							[01;31m(NF[00m
								(PX um sechs uhr zehn)
								(PX in hannover)[01;31m)[00m)[01;36m)[00m[01;36m)[00m))
		(SIMPX das ist ein ic)
		[01;31m(DM[00m
			(ITJ oh)[01;31m)[00m
		[01;31m(DM[00m
			(NX moment)
			(ADVX mal)[01;31m)[00m
		(NF
			(SIMPX
				(VF sie)
				(FKOORD
					(LKMVC kommen in dusseldorf um sechs uhr sechs an)
					(KON und)
					(LKMVCN
						[01;31m(LKMVC[00m
							(LK mussen)
							(MF da)
							[01;33m(VC[00m (VC umsteigen kommen)[01;31m)[00m
						(MF in hannover)
						(VC an) [01;33mVC)[00m
						[01;31m(NF[00m
							(PX
								(APPR um)
								(NX neun uhr zwei))[01;31m)[00m))))))
Step:UNSET add
{'subtrees': ['NF', 'KON', 'LKM'], 'family': ['MF', 'VC', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'NE', 'NN', 'KON', 'VVFIN', 'PTKVZ', 'APPR', 'CARD', 'NN', 'CARD', 'APPR', 'NE'), 'right siblings': [], 'left siblings': [(MF (NX (PPER sie)) (ADVX (ADV allerdings))), (VC (VXINF (VVINF umsteigen)))], 'auto preterminal span': (32, 44), 'span': (32, 44), 'parent': 'FKOORD', 'label': 'PX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM moment)
		(SIMPX ich gucke mal nach)
		(SIMPX nachts konnen sie nicht fahren)
		(DM also)
		(SIMPX sie konnen nur tagsuber fahren)
		(SIMPX der erste zug geht um funf uhr zehn ab von bonn)
		(VF da)
		(FKOORD
			(LK musten)
			(FKOORD
				(MF sie allerdings)
				(VC umsteigen)
				[01;36m(NF[00m
					(PX
						(NF in dusseldorf hauptbahnhof)
						(KON und)
						(LKM
							(LK kamen)
							[01;31m(VC[00m
								(PTKVZ an)[01;31m)[00m
							[01;31m(NF[00m
								(PX um sechs uhr zehn)
								(PX in hannover)[01;31m)[00m))[01;36m)[00m))
		(SIMPX das ist ein ic)
		[01;31m(DM[00m
			(ITJ oh)[01;31m)[00m
		[01;31m(DM[00m
			(NX moment)
			(ADVX mal)[01;31m)[00m
		(NF
			(SIMPX
				(VF sie)
				(FKOORD
					(LKMVC kommen in dusseldorf um sechs uhr sechs an)
					(KON und)
					(LKMVCN
						[01;31m(LKMVC[00m
							(LK mussen)
							(MF da)
							[01;33m(VC[00m (VC umsteigen kommen)[01;31m)[00m
						(MF in hannover)
						(VC an) [01;33mVC)[00m
						[01;31m(NF[00m
							(PX
								(APPR um)
								(NX neun uhr zwei))[01;31m)[00m))))))
Step:Unary
{'subtrees': ['PX'], 'family': ['MF', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'NE', 'NN', 'KON', 'VVFIN', 'PTKVZ', 'APPR', 'CARD', 'NN', 'CARD', 'APPR', 'NE'), 'right siblings': [], 'left siblings': [(MF (NX (PPER sie)) (ADVX (ADV allerdings))), (VC (VXINF (VVINF umsteigen)))], 'auto preterminal span': (32, 44), 'span': (32, 44), 'parent': 'FKOORD', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM moment)
		(SIMPX ich gucke mal nach)
		(SIMPX nachts konnen sie nicht fahren)
		(DM also)
		(SIMPX sie konnen nur tagsuber fahren)
		(SIMPX der erste zug geht um funf uhr zehn ab von bonn)
		(VF da)
		(FKOORD
			(LK musten)
			(FKOORD
				(MF sie allerdings)
				(VC umsteigen)
				(NF
					(PX
						(NF in dusseldorf hauptbahnhof)
						(KON und)
						(LKM
							(LK kamen)
							[01;31m(VC[00m
								(PTKVZ an)[01;31m)[00m
							[01;31m(NF[00m
								(PX um sechs uhr zehn)
								(PX in hannover)[01;31m)[00m)))))
		(SIMPX das ist ein ic)
		[01;31m(DM[00m
			(ITJ oh)[01;31m)[00m
		[01;31m(DM[00m
			(NX moment)
			(ADVX mal)[01;31m)[00m
		(NF
			(SIMPX
				(VF sie)
				(FKOORD
					(LKMVC kommen in dusseldorf um sechs uhr sechs an)
					(KON und)
					(LKMVCN
						[01;31m(LKMVC[00m
							(LK mussen)
							(MF da)
							[01;33m(VC[00m (VC umsteigen kommen)[01;31m)[00m
						(MF in hannover)
						(VC an) [01;33mVC)[00m
						[01;31m(NF[00m
							(PX
								(APPR um)
								(NX neun uhr zwei))[01;31m)[00m))))))
Step:Single Word Phrase
{'subtrees': ['PTKVZ'], 'family': ['LK', 'VC', 'NF'], 'over_word': True, 'over words': True, 'auto preterminals': ('VVFIN', 'PTKVZ', 'APPR', 'CARD', 'NN', 'CARD', 'APPR', 'NE'), 'right siblings': ['NF'], 'parent': 'LKM', 'auto preterminal span': (36, 44), 'span': (37, 38), 'left siblings': ['LK'], 'label': 'VC', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(DM moment)
		(SIMPX ich gucke mal nach)
		(SIMPX nachts konnen sie nicht fahren)
		(DM also)
		(SIMPX sie konnen nur tagsuber fahren)
		(SIMPX der erste zug geht um funf uhr zehn ab von bonn)
		(VF da)
		(FKOORD
			(LK musten)
			(FKOORD
				(MF sie allerdings)
				(VC umsteigen)
				(NF
					(PX
						(NF in dusseldorf hauptbahnhof)
						(KON und)
						(LKM
							(LK kamen)
							(PTKVZ an)
							[01;31m(NF[00m
								(PX um sechs uhr zehn)
								(PX in hannover)[01;31m)[00m)))))
		(SIMPX das ist ein ic)
		[01;31m(DM[00m
			(ITJ oh)[01;31m)[00m
		[01;31m(DM[00m
			(NX moment)
			(ADVX mal)[01;31m)[00m
		(NF
			(SIMPX
				(VF sie)
				(FKOORD
					(LKMVC kommen in dusseldorf um sechs uhr sechs an)
					(KON und)
					(LKMVCN
						[01;31m(LKMVC[00m
							(LK mussen)
							(MF da)
							[01;33m(VC[00m (VC umsteigen kommen)[01;31m)[00m
						(MF in hannover)
						(VC an) [01;33mVC)[00m
						[01;31m(NF[00m
							(PX
								(APPR um)
								(NX neun uhr zwei))[01;31m)[00m))))))
Step:PP Attachment
{'subtrees': ['PX', 'PX'], 'family': ['LK', 'PTKVZ', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PTKVZ', 'APPR', 'CARD', 'NN', 'CARD', 'APPR', 'NE'), 'right siblings': [], 'parent': 'LKM', 'auto preterminal span': (36, 44), 'span': (38, 44), 'left siblings': ['LK', 'PTKVZ'], 'label': 'NF', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM moment)
		(SIMPX ich gucke mal nach)
		(SIMPX nachts konnen sie nicht fahren)
		(DM also)
		(SIMPX sie konnen nur tagsuber fahren)
		(SIMPX der erste zug geht um funf uhr zehn ab von bonn)
		(VF da)
		(FKOORD musten sie allerdings umsteigen in dusseldorf hauptbahnhof und kamen an um sechs uhr zehn in hannover)
		(SIMPX das ist ein ic)
		[01;31m(DM[00m
			(ITJ oh)[01;31m)[00m
		[01;31m(DM[00m
			(NX moment)
			(ADVX mal)[01;31m)[00m
		(NF
			(SIMPX
				(VF sie)
				(FKOORD
					(LKMVC kommen in dusseldorf um sechs uhr sechs an)
					(KON und)
					(LKMVCN
						[01;31m(LKMVC[00m
							(LK mussen)
							(MF da)
							[01;33m(VC[00m (VC umsteigen kommen)[01;31m)[00m
						(MF in hannover)
						(VC an) [01;33mVC)[00m
						[01;31m(NF[00m
							(PX
								(APPR um)
								(NX neun uhr zwei))[01;31m)[00m))))))
Step:Single Word Phrase
{'subtrees': ['ITJ'], 'family': ['DM', 'SIMPX', 'SIMPX', 'DM', 'SIMPX', 'SIMPX', 'VF', 'FKOORD', 'SIMPX', 'DM', 'DM', 'NF'], 'over_word': True, 'over words': True, 'auto preterminals': ('NN', 'PPER', 'VVFIN', 'ADV', 'PTKVZ', 'ADV', 'VMFIN', 'PPER', 'PTKNEG', 'VVINF', 'ADV', 'PPER', 'VMFIN', 'ADV', 'ADV', 'VVINF', 'ART', 'ADJA', 'NN', 'VVFIN', 'APPR', 'CARD', 'NN', 'CARD', 'PTKVZ', 'APPR', 'NE', 'ADV', 'VMFIN', 'PPER', 'ADV', 'VVINF', 'APPR', 'NE', 'NN', 'KON', 'VVFIN', 'PTKVZ', 'APPR', 'CARD', 'NN', 'CARD', 'APPR', 'NE', 'PDS', 'VAFIN', 'ART', 'NE', 'ITJ', 'NN', 'ADV', 'PPER', 'VVFIN', 'APPR', 'NE', 'APPR', 'CARD', 'NN', 'CARD', 'PTKVZ', 'KON', 'VMFIN', 'ADV', 'VVINF', 'VVFIN', 'APPR', 'NE', 'PTKVZ', 'APPR', 'CARD', 'NN', 'CARD'), 'right siblings': ['DM', 'NF'], 'parent': 'TURN', 'auto preterminal span': (0, 72), 'span': (48, 49), 'left siblings': ['DM', 'SIMPX', 'SIMPX', 'DM', 'SIMPX', 'SIMPX', 'VF', 'FKOORD', 'SIMPX'], 'label': 'DM', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(DM moment)
		(SIMPX ich gucke mal nach)
		(SIMPX nachts konnen sie nicht fahren)
		(DM also)
		(SIMPX sie konnen nur tagsuber fahren)
		(SIMPX der erste zug geht um funf uhr zehn ab von bonn)
		(VF da)
		(FKOORD musten sie allerdings umsteigen in dusseldorf hauptbahnhof und kamen an um sechs uhr zehn in hannover)
		(SIMPX das ist ein ic)
		(ITJ oh)
		[01;31m(DM[00m
			(NX moment)
			(ADVX mal)[01;31m)[00m
		(NF
			(SIMPX
				(VF sie)
				(FKOORD
					(LKMVC kommen in dusseldorf um sechs uhr sechs an)
					(KON und)
					(LKMVCN
						[01;31m(LKMVC[00m
							(LK mussen)
							(MF da)
							[01;33m(VC[00m (VC umsteigen kommen)[01;31m)[00m
						(MF in hannover)
						(VC an) [01;33mVC)[00m
						[01;31m(NF[00m
							(PX
								(APPR um)
								(NX neun uhr zwei))[01;31m)[00m))))))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADVX'], 'family': ['DM', 'SIMPX', 'SIMPX', 'DM', 'SIMPX', 'SIMPX', 'VF', 'FKOORD', 'SIMPX', 'ITJ', 'DM', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'PPER', 'VVFIN', 'ADV', 'PTKVZ', 'ADV', 'VMFIN', 'PPER', 'PTKNEG', 'VVINF', 'ADV', 'PPER', 'VMFIN', 'ADV', 'ADV', 'VVINF', 'ART', 'ADJA', 'NN', 'VVFIN', 'APPR', 'CARD', 'NN', 'CARD', 'PTKVZ', 'APPR', 'NE', 'ADV', 'VMFIN', 'PPER', 'ADV', 'VVINF', 'APPR', 'NE', 'NN', 'KON', 'VVFIN', 'PTKVZ', 'APPR', 'CARD', 'NN', 'CARD', 'APPR', 'NE', 'PDS', 'VAFIN', 'ART', 'NE', 'ITJ', 'NN', 'ADV', 'PPER', 'VVFIN', 'APPR', 'NE', 'APPR', 'CARD', 'NN', 'CARD', 'PTKVZ', 'KON', 'VMFIN', 'ADV', 'VVINF', 'VVFIN', 'APPR', 'NE', 'PTKVZ', 'APPR', 'CARD', 'NN', 'CARD'), 'right siblings': ['NF'], 'parent': 'TURN', 'auto preterminal span': (0, 72), 'span': (49, 51), 'left siblings': ['DM', 'SIMPX', 'SIMPX', 'DM', 'SIMPX', 'SIMPX', 'VF', 'FKOORD', 'SIMPX', 'ITJ'], 'label': 'DM', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM moment)
		(SIMPX ich gucke mal nach)
		(SIMPX nachts konnen sie nicht fahren)
		(DM also)
		(SIMPX sie konnen nur tagsuber fahren)
		(SIMPX der erste zug geht um funf uhr zehn ab von bonn)
		(VF da)
		(FKOORD musten sie allerdings umsteigen in dusseldorf hauptbahnhof und kamen an um sechs uhr zehn in hannover)
		(SIMPX das ist ein ic)
		(ITJ oh)
		(NX moment)
		(ADVX mal)
		(NF
			(SIMPX
				(VF sie)
				(FKOORD
					(LKMVC kommen in dusseldorf um sechs uhr sechs an)
					(KON und)
					(LKMVCN
						[01;31m(LKMVC[00m
							(LK mussen)
							(MF da)
							[01;33m(VC[00m (VC umsteigen kommen)[01;31m)[00m
						(MF in hannover)
						(VC an) [01;33mVC)[00m
						[01;31m(NF[00m
							(PX
								(APPR um)
								(NX neun uhr zwei))[01;31m)[00m))))))
Step:UNSET remove
{'subtrees': ['LK', 'MF', 'VC'], 'family': ['LKMVC', 'MF', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('VMFIN', 'ADV', 'VVINF', 'VVFIN', 'APPR', 'NE', 'PTKVZ', 'APPR', 'CARD', 'NN', 'CARD'), 'right siblings': ['MF', 'VC', 'NF'], 'parent': 'LKMVCN', 'auto preterminal span': (61, 72), 'span': (61, 65), 'left siblings': [], 'label': 'LKMVC', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM moment)
		(SIMPX ich gucke mal nach)
		(SIMPX nachts konnen sie nicht fahren)
		(DM also)
		(SIMPX sie konnen nur tagsuber fahren)
		(SIMPX der erste zug geht um funf uhr zehn ab von bonn)
		(VF da)
		(FKOORD musten sie allerdings umsteigen in dusseldorf hauptbahnhof und kamen an um sechs uhr zehn in hannover)
		(SIMPX das ist ein ic)
		(ITJ oh)
		(NX moment)
		(ADVX mal)
		(NF
			(SIMPX
				(VF sie)
				(FKOORD
					(LKMVC kommen in dusseldorf um sechs uhr sechs an)
					(KON und)
					(LKMVCN
						(LK mussen)
						(MF da)
						[01;36m(VC[00m
							(VC umsteigen kommen)
							(MF in hannover)
							(VC an)[01;36m)[00m
						[01;31m(NF[00m
							(PX
								(APPR um)
								(NX neun uhr zwei))[01;31m)[00m))))))
Step:UNSET add
{'subtrees': ['VC', 'MF', 'VC'], 'family': ['LK', 'MF', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVINF', 'VVFIN', 'APPR', 'NE', 'PTKVZ'), 'right siblings': [(NF (PX (APPR um) (NX (NX (ADJX (CARD neun)) (NN uhr)) (ADJX (CARD zwei)))))], 'left siblings': [(LK (VXFIN (VMFIN mussen))), (MF (ADVX (ADV da)))], 'auto preterminal span': (63, 68), 'span': (63, 68), 'parent': 'LKMVCN', 'label': 'VC', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM moment)
		(SIMPX ich gucke mal nach)
		(SIMPX nachts konnen sie nicht fahren)
		(DM also)
		(SIMPX sie konnen nur tagsuber fahren)
		(SIMPX der erste zug geht um funf uhr zehn ab von bonn)
		(VF da)
		(FKOORD musten sie allerdings umsteigen in dusseldorf hauptbahnhof und kamen an um sechs uhr zehn in hannover)
		(SIMPX das ist ein ic)
		(ITJ oh)
		(NX moment)
		(ADVX mal)
		(NF
			(SIMPX
				(VF sie)
				(FKOORD
					(LKMVC kommen in dusseldorf um sechs uhr sechs an)
					(KON und)
					(LKMVCN
						(LK mussen)
						(MF da)
						(VC umsteigen kommen in hannover an)
						[01;31m(NF[00m
							(PX
								(APPR um)
								(NX neun uhr zwei))[01;31m)[00m))))))
Step:Unary
{'subtrees': ['PX'], 'family': ['LK', 'MF', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('VMFIN', 'ADV', 'VVINF', 'VVFIN', 'APPR', 'NE', 'PTKVZ', 'APPR', 'CARD', 'NN', 'CARD'), 'right siblings': [], 'parent': 'LKMVCN', 'auto preterminal span': (61, 72), 'span': (68, 72), 'left siblings': ['LK', 'MF', 'VC'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP moment ich gucke mal nach nachts konnen sie nicht fahren also sie konnen nur tagsuber fahren der erste zug geht um funf uhr zehn ab von bonn da musten sie allerdings umsteigen in dusseldorf hauptbahnhof und kamen an um sechs uhr zehn in hannover das ist ein ic oh moment mal sie kommen in dusseldorf um sechs uhr sechs an und mussen da umsteigen kommen in hannover an um neun uhr zwei)

Sentence 632:
3 Initial errors
0 on fringe, 3 iterations
1 Error:PP Attachment
1 Error:Unary
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX der fahrt)
		(DM ah)
		(DM entschuldigung)
		(SIMPX der fahrt nur samstag sonntag)
		(SIMPX
			(VF taglich)
			(LK fahrt)
			(MF
				[01;36m(MF[00m
					(ADVX dann)
					(PX um sechs uhr funf)[01;36m)[00m
				(NX der erste zug)))
		(SIMPX kommen sie an um zehn uhr neunzehn)
		[01;31m(ADJX[00m
			[01;36m(DM[00m
				(ADVX
					(ADV also))[01;36m)[00m
			(ADVX auch)
			(ADJX zu spat)[01;31m)[00m))
Step:PP Attachment
{'subtrees': ['ADVX', 'PX'], 'family': ['MF', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'APPR', 'CARD', 'NN', 'CARD'), 'right siblings': [(NX (ART der) (ADJX (ADJA erste)) (NN zug))], 'left siblings': [], 'auto preterminal span': (11, 16), 'span': (11, 16), 'parent': 'MF', 'label': 'MF', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(SIMPX der fahrt)
		(DM ah)
		(DM entschuldigung)
		(SIMPX der fahrt nur samstag sonntag)
		(SIMPX taglich fahrt dann um sechs uhr funf der erste zug)
		(SIMPX kommen sie an um zehn uhr neunzehn)
		[01;31m(ADJX[00m
			[01;36m(DM[00m
				(ADVX
					(ADV also))[01;36m)[00m
			(ADVX auch)
			(ADJX zu spat)[01;31m)[00m))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['DM', 'ADVX', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV',), 'right siblings': [(ADVX (ADV auch)), (ADJX (PTKA zu) (ADJD spat))], 'left siblings': [], 'auto preterminal span': (26, 27), 'span': (26, 27), 'parent': 'ADJX', 'label': 'DM', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SIMPX der fahrt)
		(DM ah)
		(DM entschuldigung)
		(SIMPX der fahrt nur samstag sonntag)
		(SIMPX taglich fahrt dann um sechs uhr funf der erste zug)
		(SIMPX kommen sie an um zehn uhr neunzehn)
		[01;31m(ADJX[00m
			(DM also)
			(ADVX auch)
			(ADJX zu spat)[01;31m)[00m))
Step:Modifier Attachment
{'subtrees': ['DM', 'ADVX', 'ADJX'], 'family': ['SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VVFIN', 'ITJ', 'NN', 'PDS', 'VVFIN', 'ADV', 'NN', 'NN', 'ADJD', 'VVFIN', 'ADV', 'APPR', 'CARD', 'NN', 'CARD', 'ART', 'ADJA', 'NN', 'VVFIN', 'PPER', 'PTKVZ', 'APPR', 'CARD', 'NN', 'CARD', 'ADV', 'ADV', 'PTKA', 'ADJD'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 30), 'span': (26, 30), 'left siblings': ['SIMPX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'label': 'ADJX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP der fahrt ah entschuldigung der fahrt nur samstag sonntag taglich fahrt dann um sechs uhr funf der erste zug kommen sie an um zehn uhr neunzehn also auch zu spat)

Sentence 633:
20 Initial errors
0 on fringe, 12 iterations
5 Error:UNSET move
3 Error:Modifier Attachment
2 Error:Co-ordination
2 Error:UNSET move
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:Modifier Attachment
1 Error:Unary
1 Error:PP Attachment
1 Error:UNSET add
1 Error:UNSET remove
1 Error:NP Internal Structure
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(NX mittelklasse)
		(SIMPX wollen sie denn eher eine zentrale lage)
		[01;31m(SIMPX[00m
			(VF
				(PX
					[01;31m(PX[00m
						(PX am bahnhof)
						(KON oder)
						[01;33m(PX[00m (PX am flughafen)[01;31m)[00m
					(ADVX direkt))) [01;33mPX)[00m
			(LK kann)
			(MF ich ihnen eines)
			(VC anbieten)[01;31m)[00m
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF das)
			(LK ist)
			[01;31m(MF[00m [01;33m(NX (MF[00m
				[01;31m(ADVX[00m
					(ADVX so)
					(ADV ungefahr)[01;31m)[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(ADJX mittlere)
						(NN preisklasse)[01;31m)[00m [01;33mMF) NX) SIMPX)[00m
					(PX mit restaurant konferenzraum garage und sauna)[01;31m)[00m[01;31m)[00m
			[01;31m(NF[00m [01;33m(SIMPX (VF (NX[00m
				[01;31m(NX[00m
					(ART das)
					[01;36m(NX[00m
						(NN [01;33m(NX[00m hotel)[01;36m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(VF[00m
				(NX
					(NE forahotel))[01;31m)[00m [01;33mNX) NX) VF)[00m
			(LK heist)
			(MF das)[01;31m)[00m [01;33mSIMPX)[00m
		(SIMPX die kategorie fur ein einzelzimmer liegt bei hundert dreisig bis zweihundert funfunddreisig mark)))
Step:UNSET move
{'new_parent': 'VF', 'new_family': ['NF', 'NX'], 'mover info': [('NF', (31, 33))], 'old_family': ['VF', 'LK', 'MF', 'NF'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('NN', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'ADJA', 'NN', 'APPRART', 'NN', 'KON', 'APPRART', 'NN', 'ADV', 'VMFIN', 'PPER', 'PPER', 'PIS', 'VVINF', 'PDS', 'VAFIN', 'ADV', 'ADV', 'ADJA', 'NN', 'APPR', 'NN', 'NN', 'NN', 'KON', 'NN', 'ART', 'NN', 'NE', 'VVFIN', 'PDS', 'ART', 'NN', 'APPR', 'ART', 'NN', 'VVFIN', 'APPR', 'CARD', 'CARD', 'APPR', 'CARD', 'CARD', 'NN'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 49), 'adding node already present': False, 'movers': ['NF'], 'old_parent': 'SIMPX', 'added and moved': True, 'end right siblings': ['NX'], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(NX mittelklasse)
		(SIMPX wollen sie denn eher eine zentrale lage)
		[01;31m(SIMPX[00m
			(VF
				(PX
					[01;31m(PX[00m
						(PX am bahnhof)
						(KON oder)
						[01;33m(PX[00m (PX am flughafen)[01;31m)[00m
					(ADVX direkt))) [01;33mPX)[00m
			(LK kann)
			(MF ich ihnen eines)
			(VC anbieten)[01;31m)[00m
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF das)
			(LK ist)
			[01;31m(MF[00m [01;33m(NX (MF[00m
				[01;31m(ADVX[00m
					(ADVX so)
					(ADV ungefahr)[01;31m)[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(ADJX mittlere)
						(NN preisklasse)[01;31m)[00m [01;33mMF) NX) SIMPX)[00m
					(PX mit restaurant konferenzraum garage und sauna)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX
			(NX
				(VF
					[01;31m(NF[00m
						[01;31m(NX[00m
							(ART das)
							[01;36m(NX[00m
								(NN [01;33m(NX[00m hotel)[01;36m)[00m[01;31m)[00m[01;31m)[00m
					(NX forahotel))) [01;33mNX)[00m
			(LK heist)
			(MF das))
		(SIMPX die kategorie fur ein einzelzimmer liegt bei hundert dreisig bis zweihundert funfunddreisig mark)))
Step:Modifier Attachment
{'new_parent': 'NX', 'new_family': ['ADVX', 'ADJX', 'NN'], 'mover info': [('ADVX', (21, 23))], 'old_family': ['ADVX', 'NX'], 'start left siblings': [], 'auto preterminals': ('ADV', 'ADV', 'ADJA', 'NN', 'APPR', 'NN', 'NN', 'NN', 'KON', 'NN'), 'start right siblings': ['NX'], 'end left siblings': [], 'auto preterminal span': (21, 31), 'adding node already present': False, 'movers': ['ADVX'], 'old_parent': 'MF', 'added and moved': True, 'end right siblings': ['ADJX', 'NN'], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(NX mittelklasse)
		(SIMPX wollen sie denn eher eine zentrale lage)
		[01;31m(SIMPX[00m
			(VF
				(PX
					[01;31m(PX[00m
						(PX am bahnhof)
						(KON oder)
						[01;33m(PX[00m (PX am flughafen)[01;31m)[00m
					(ADVX direkt))) [01;33mPX)[00m
			(LK kann)
			(MF ich ihnen eines)
			(VC anbieten)[01;31m)[00m
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF das)
			(LK ist)
			[01;31m(MF[00m
				[01;31m(NX[00m
					(MF
						(NX
							[01;31m(ADVX[00m
								(ADVX so)
								(ADV ungefahr)[01;31m)[00m
							(ADJX mittlere)
							(NN preisklasse))) [01;33mSIMPX)[00m
					(PX mit restaurant konferenzraum garage und sauna)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX
			(NX
				(VF
					[01;31m(NF[00m
						[01;31m(NX[00m
							(ART das)
							[01;36m(NX[00m
								(NN [01;33m(NX[00m hotel)[01;36m)[00m[01;31m)[00m[01;31m)[00m
					(NX forahotel))) [01;33mNX)[00m
			(LK heist)
			(MF das))
		(SIMPX die kategorie fur ein einzelzimmer liegt bei hundert dreisig bis zweihundert funfunddreisig mark)))
Step:Co-ordination
{'new_parent': 'VF', 'new_family': ['PX', 'KON', 'PX'], 'mover info': [('PX', (8, 10)), ('KON', (10, 11))], 'old_family': ['PX', 'KON', 'PX'], 'start left siblings': [], 'auto preterminals': ('APPRART', 'NN', 'KON', 'APPRART', 'NN', 'ADV'), 'start right siblings': ['PX'], 'end left siblings': [], 'auto preterminal span': (8, 14), 'adding node already present': False, 'movers': ['PX', 'KON'], 'old_parent': 'PX', 'added and moved': True, 'end right siblings': ['PX'], 'classified_type': 'Co-ordination', 'type': 'move', 'added label': 'NX'}
(TOP
	(TURN
		(NX mittelklasse)
		(SIMPX wollen sie denn eher eine zentrale lage)
		[01;31m(SIMPX[00m
			(PX am bahnhof oder am flughafen direkt)
			(LK kann)
			(MF ich ihnen eines)
			(VC anbieten)[01;31m)[00m
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF das)
			(LK ist)
			[01;31m(MF[00m
				[01;31m(NX[00m
					(MF
						(NX
							[01;31m(ADVX[00m
								(ADVX so)
								(ADV ungefahr)[01;31m)[00m
							(ADJX mittlere)
							(NN preisklasse))) [01;33mSIMPX)[00m
					(PX mit restaurant konferenzraum garage und sauna)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX
			(NX
				(VF
					[01;31m(NF[00m
						[01;31m(NX[00m
							(ART das)
							[01;36m(NX[00m
								(NN [01;33m(NX[00m hotel)[01;36m)[00m[01;31m)[00m[01;31m)[00m
					(NX forahotel))) [01;33mNX)[00m
			(LK heist)
			(MF das))
		(SIMPX die kategorie fur ein einzelzimmer liegt bei hundert dreisig bis zweihundert funfunddreisig mark)))
Step:UNSET move
{'new_parent': 'NF', 'new_family': ['ART', 'NX'], 'mover info': [('ART', (31, 32))], 'old_family': ['ART', 'NN'], 'start left siblings': [], 'auto preterminals': ('ART', 'NN'), 'start right siblings': ['NN'], 'end left siblings': [], 'auto preterminal span': (31, 33), 'movers': ['ART'], 'old_parent': 'NX', 'POS confusion': ('ART', 'ART'), 'end right siblings': ['NX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(NX mittelklasse)
		(SIMPX wollen sie denn eher eine zentrale lage)
		[01;31m(SIMPX[00m
			(PX am bahnhof oder am flughafen direkt)
			(LK kann)
			(MF ich ihnen eines)
			(VC anbieten)[01;31m)[00m
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF das)
			(LK ist)
			[01;31m(MF[00m
				[01;31m(NX[00m
					(MF
						(NX
							[01;31m(ADVX[00m
								(ADVX so)
								(ADV ungefahr)[01;31m)[00m
							(ADJX mittlere)
							(NN preisklasse))) [01;33mSIMPX)[00m
					(PX mit restaurant konferenzraum garage und sauna)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX
			(NX
				(VF
					[01;31m(NF[00m
						(ART das)
						[01;33m(NX[00m (NX hotel)[01;31m)[00m
					(NX forahotel))) [01;33mNX)[00m
			(LK heist)
			(MF das))
		(SIMPX die kategorie fur ein einzelzimmer liegt bei hundert dreisig bis zweihundert funfunddreisig mark)))
Step:UNSET remove
{'subtrees': ['PX', 'LK', 'MF', 'VC'], 'family': ['NX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'ADJA', 'NN', 'APPRART', 'NN', 'KON', 'APPRART', 'NN', 'ADV', 'VMFIN', 'PPER', 'PPER', 'PIS', 'VVINF', 'PDS', 'VAFIN', 'ADV', 'ADV', 'ADJA', 'NN', 'APPR', 'NN', 'NN', 'NN', 'KON', 'NN', 'ART', 'NN', 'NE', 'VVFIN', 'PDS', 'ART', 'NN', 'APPR', 'ART', 'NN', 'VVFIN', 'APPR', 'CARD', 'CARD', 'APPR', 'CARD', 'CARD', 'NN'), 'right siblings': ['SIMPX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 49), 'span': (8, 19), 'left siblings': ['NX', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(NX mittelklasse)
		(SIMPX wollen sie denn eher eine zentrale lage)
		(PX am bahnhof oder am flughafen direkt)
		(LK kann)
		(MF ich ihnen eines)
		(VC anbieten)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF das)
			(LK ist)
			[01;31m(MF[00m
				[01;31m(NX[00m
					(MF
						(NX
							[01;31m(ADVX[00m
								(ADVX so)
								(ADV ungefahr)[01;31m)[00m
							(ADJX mittlere)
							(NN preisklasse))) [01;33mSIMPX)[00m
					(PX mit restaurant konferenzraum garage und sauna)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX
			(NX
				(VF
					[01;31m(NF[00m
						(ART das)
						[01;33m(NX[00m (NX hotel)[01;31m)[00m
					(NX forahotel))) [01;33mNX)[00m
			(LK heist)
			(MF das))
		(SIMPX die kategorie fur ein einzelzimmer liegt bei hundert dreisig bis zweihundert funfunddreisig mark)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['NX', 'SIMPX', 'PX', 'LK', 'MF', 'VC', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'ADJA', 'NN', 'APPRART', 'NN', 'KON', 'APPRART', 'NN', 'ADV', 'VMFIN', 'PPER', 'PPER', 'PIS', 'VVINF', 'PDS', 'VAFIN', 'ADV', 'ADV', 'ADJA', 'NN', 'APPR', 'NN', 'NN', 'NN', 'KON', 'NN', 'ART', 'NN', 'NE', 'VVFIN', 'PDS', 'ART', 'NN', 'APPR', 'ART', 'NN', 'VVFIN', 'APPR', 'CARD', 'CARD', 'APPR', 'CARD', 'CARD', 'NN'), 'right siblings': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 49), 'span': (19, 31), 'left siblings': ['NX', 'SIMPX', 'PX', 'LK', 'MF', 'VC'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(NX mittelklasse)
		(SIMPX wollen sie denn eher eine zentrale lage)
		(PX am bahnhof oder am flughafen direkt)
		(LK kann)
		(MF ich ihnen eines)
		(VC anbieten)
		[01;33m(SIMPX[00m (VF das)
		(LK ist)
		[01;31m(MF[00m
			[01;31m(NX[00m
				(MF
					(NX
						[01;31m(ADVX[00m
							(ADVX so)
							(ADV ungefahr)[01;31m)[00m
						(ADJX mittlere)
						(NN preisklasse))) [01;33mSIMPX)[00m
				(PX mit restaurant konferenzraum garage und sauna)[01;31m)[00m[01;31m)[00m
		(SIMPX
			(NX
				(VF
					[01;31m(NF[00m
						(ART das)
						[01;33m(NX[00m (NX hotel)[01;31m)[00m
					(NX forahotel))) [01;33mNX)[00m
			(LK heist)
			(MF das))
		(SIMPX die kategorie fur ein einzelzimmer liegt bei hundert dreisig bis zweihundert funfunddreisig mark)))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'ADV'], 'family': ['ADVX', 'ADJX', 'NN'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV', 'ADJA', 'NN'), 'right siblings': ['ADJX', 'NN'], 'parent': 'NX', 'auto preterminal span': (21, 25), 'span': (21, 23), 'left siblings': [], 'label': 'ADVX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP
	(TURN
		(NX mittelklasse)
		(SIMPX wollen sie denn eher eine zentrale lage)
		(PX am bahnhof oder am flughafen direkt)
		(LK kann)
		(MF ich ihnen eines)
		(VC anbieten)
		[01;33m(SIMPX[00m (VF das)
		(LK ist)
		[01;31m(MF[00m
			[01;31m(NX[00m
				(MF so ungefahr mittlere preisklasse) [01;33mSIMPX)[00m
				(PX mit restaurant konferenzraum garage und sauna)[01;31m)[00m[01;31m)[00m
		(SIMPX
			(NX
				(VF
					[01;31m(NF[00m
						(ART das)
						[01;33m(NX[00m (NX hotel)[01;31m)[00m
					(NX forahotel))) [01;33mNX)[00m
			(LK heist)
			(MF das))
		(SIMPX die kategorie fur ein einzelzimmer liegt bei hundert dreisig bis zweihundert funfunddreisig mark)))
Step:Unary
{'subtrees': ['NX'], 'family': ['NX', 'SIMPX', 'PX', 'LK', 'MF', 'VC', 'VF', 'LK', 'MF', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'ADJA', 'NN', 'APPRART', 'NN', 'KON', 'APPRART', 'NN', 'ADV', 'VMFIN', 'PPER', 'PPER', 'PIS', 'VVINF', 'PDS', 'VAFIN', 'ADV', 'ADV', 'ADJA', 'NN', 'APPR', 'NN', 'NN', 'NN', 'KON', 'NN', 'ART', 'NN', 'NE', 'VVFIN', 'PDS', 'ART', 'NN', 'APPR', 'ART', 'NN', 'VVFIN', 'APPR', 'CARD', 'CARD', 'APPR', 'CARD', 'CARD', 'NN'), 'right siblings': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 49), 'span': (21, 31), 'left siblings': ['NX', 'SIMPX', 'PX', 'LK', 'MF', 'VC', 'VF', 'LK'], 'label': 'MF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(NX mittelklasse)
		(SIMPX wollen sie denn eher eine zentrale lage)
		(PX am bahnhof oder am flughafen direkt)
		(LK kann)
		(MF ich ihnen eines)
		(VC anbieten)
		[01;33m(SIMPX[00m (VF das)
		(LK ist)
		[01;31m(NX[00m
			(MF so ungefahr mittlere preisklasse) [01;33mSIMPX)[00m
			(PX mit restaurant konferenzraum garage und sauna)[01;31m)[00m
		(SIMPX
			(NX
				(VF
					[01;31m(NF[00m
						(ART das)
						[01;33m(NX[00m (NX hotel)[01;31m)[00m
					(NX forahotel))) [01;33mNX)[00m
			(LK heist)
			(MF das))
		(SIMPX die kategorie fur ein einzelzimmer liegt bei hundert dreisig bis zweihundert funfunddreisig mark)))
Step:PP Attachment
{'subtrees': ['MF', 'PX'], 'family': ['NX', 'SIMPX', 'PX', 'LK', 'MF', 'VC', 'VF', 'LK', 'NX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'VMFIN', 'PPER', 'ADV', 'ADV', 'ART', 'ADJA', 'NN', 'APPRART', 'NN', 'KON', 'APPRART', 'NN', 'ADV', 'VMFIN', 'PPER', 'PPER', 'PIS', 'VVINF', 'PDS', 'VAFIN', 'ADV', 'ADV', 'ADJA', 'NN', 'APPR', 'NN', 'NN', 'NN', 'KON', 'NN', 'ART', 'NN', 'NE', 'VVFIN', 'PDS', 'ART', 'NN', 'APPR', 'ART', 'NN', 'VVFIN', 'APPR', 'CARD', 'CARD', 'APPR', 'CARD', 'CARD', 'NN'), 'right siblings': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 49), 'span': (21, 31), 'left siblings': ['NX', 'SIMPX', 'PX', 'LK', 'MF', 'VC', 'VF', 'LK'], 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(NX mittelklasse)
		(SIMPX wollen sie denn eher eine zentrale lage)
		(PX am bahnhof oder am flughafen direkt)
		(LK kann)
		(MF ich ihnen eines)
		(VC anbieten)
		[01;36m(SIMPX[00m
			(VF das)
			(LK ist)
			(MF so ungefahr mittlere preisklasse)[01;36m)[00m
		(PX mit restaurant konferenzraum garage und sauna)
		(SIMPX
			(NX
				(VF
					[01;31m(NF[00m
						(ART das)
						[01;33m(NX[00m (NX hotel)[01;31m)[00m
					(NX forahotel))) [01;33mNX)[00m
			(LK heist)
			(MF das))
		(SIMPX die kategorie fur ein einzelzimmer liegt bei hundert dreisig bis zweihundert funfunddreisig mark)))
Step:UNSET add
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['NX', 'SIMPX', 'PX', 'LK', 'MF', 'VC', 'SIMPX', 'PX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VAFIN', 'ADV', 'ADV', 'ADJA', 'NN'), 'right siblings': [(PX (APPR mit) (NX (NX (NN restaurant)) (NX (NN konferenzraum)) (NX (NN garage)) (KON und) (NX (NN sauna)))), (SIMPX (NX (VF (NF (ART das) (NX (NN hotel))) (NX (NE forahotel)))) (LK (VXFIN (VVFIN heist))) (MF (NX (PDS das)))), (SIMPX (VF (NX (NX (ART die) (NN kategorie)) (PX (APPR fur) (NX (ART ein) (NN einzelzimmer))))) (LK (VXFIN (VVFIN liegt))) (MF (PX (APPR bei) (NX (ADJX (ADJX (CARD hundert) (CARD dreisig)) (APPR bis) (ADJX (CARD zweihundert) (CARD funfunddreisig))) (NN mark)))))], 'left siblings': [(NX (NN mittelklasse)), (SIMPX (LK (VXFIN (VMFIN wollen))) (MF (NX (PPER sie)) (ADVX (ADV denn)) (ADVX (ADV eher)) (NX (ART eine) (ADJX (ADJA zentrale)) (NN lage)))), (PX (VF (PX (APPRART am) (NX (NN bahnhof))) (KON oder) (PX (PX (APPRART am) (NX (NN flughafen))) (ADVX (ADV direkt))))), (LK (VXFIN (VMFIN kann))), (MF (NX (PPER ich)) (NX (PPER ihnen)) (NX (PIS eines))), (VC (VXINF (VVINF anbieten)))], 'auto preterminal span': (19, 25), 'span': (19, 25), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(NX mittelklasse)
		(SIMPX wollen sie denn eher eine zentrale lage)
		(PX am bahnhof oder am flughafen direkt)
		(LK kann)
		(MF ich ihnen eines)
		(VC anbieten)
		(SIMPX das ist so ungefahr mittlere preisklasse)
		(PX mit restaurant konferenzraum garage und sauna)
		(SIMPX
			(NX
				(VF
					[01;31m(NF[00m
						(ART das)
						[01;33m(NX[00m (NX hotel)[01;31m)[00m
					(NX forahotel))) [01;33mNX)[00m
			(LK heist)
			(MF das))
		(SIMPX die kategorie fur ein einzelzimmer liegt bei hundert dreisig bis zweihundert funfunddreisig mark)))
Step:UNSET remove
{'subtrees': ['ART', 'NX'], 'family': ['NF', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'NE'), 'right siblings': ['NX'], 'parent': 'VF', 'auto preterminal span': (31, 34), 'span': (31, 33), 'left siblings': [], 'label': 'NF', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(NX mittelklasse)
		(SIMPX wollen sie denn eher eine zentrale lage)
		(PX am bahnhof oder am flughafen direkt)
		(LK kann)
		(MF ich ihnen eines)
		(VC anbieten)
		(SIMPX das ist so ungefahr mittlere preisklasse)
		(PX mit restaurant konferenzraum garage und sauna)
		(SIMPX
			(NX
				(VF
					(ART das)
					[01;36m(NX[00m
						(NX hotel)
						(NX forahotel)[01;36m)[00m))
			(LK heist)
			(MF das))
		(SIMPX die kategorie fur ein einzelzimmer liegt bei hundert dreisig bis zweihundert funfunddreisig mark)))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['ART', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'NE'), 'right siblings': [], 'left siblings': [(ART das)], 'auto preterminal span': (32, 34), 'span': (32, 34), 'parent': 'VF', 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'add'}
(TOP mittelklasse wollen sie denn eher eine zentrale lage am bahnhof oder am flughafen direkt kann ich ihnen eines anbieten das ist so ungefahr mittlere preisklasse mit restaurant konferenzraum garage und sauna das hotel forahotel heist das die kategorie fur ein einzelzimmer liegt bei hundert dreisig bis zweihundert funfunddreisig mark)

Sentence 634:
0 Initial errors
0 on fringe, 0 iterations

Sentence 635:
14 Initial errors
0 on fringe, 10 iterations
4 Error:Modifier Attachment
2 Error:Different label
1 Error:UNSET add
1 Error:Unary
1 Error:Modifier Attachment
1 Error:UNSET remove
1 Error:PP Attachment
1 Error:Modifier Attachment
1 Error:UNSET remove
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			(VF
				(SIMPX
					(KOORD oder)
					[01;36m(SIMPX[00m
						[01;36m(VF[00m
							(C was)
							(MF
								[01;31m(ADJX[00m
									[01;31m(ADVX[00m
										(ADVX noch)
										[01;36m(ADVX[00m
											(ADV [01;33m(ADJX[00m etwas)[01;36m)[00m[01;31m)[00m
									(ADJD preiswerter)[01;31m)[00m) [01;33mADJX)[00m
							(VC ware)[01;36m)[00m[01;36m)[00m))
			(LK ware)
			[01;33m(MF[00m (MF hotel loccumerhof)[01;31m)[00m
		[01;31m(ADJX[00m
			(ADJX
				(ADVX auch)
				[01;36m(ADJX[00m
					(ADVX zentral)
					(ADJD gelegen)[01;36m)[00m) [01;33mMF)[00m
			(PX mit konferenzraum)[01;31m)[00m
		[01;36m(SIMPX[00m [01;31m(NX[00m
			(NX die preislage)
			(NX [01;33m(ADJX[00m
				(NX hundert funfundvierzig mark)
				(APPR bis)
				[01;31m(NX[00m
					(ADJX hundert achtzig) [01;33mADJX)[00m
					(NN mark)[01;31m)[00m)[01;31m)[00m[01;36m)[00m))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['ADVX', 'ADJX'], 'mover info': [('ADVX', (2, 3))], 'old_family': ['ADVX', 'ADV'], 'start left siblings': [], 'auto preterminals': ('ADV', 'ADV', 'ADJD'), 'start right siblings': ['ADV'], 'end left siblings': [], 'auto preterminal span': (2, 5), 'movers': ['ADVX'], 'old_parent': 'ADVX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['ADJX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			(VF
				(SIMPX
					(KOORD oder)
					[01;36m(SIMPX[00m
						[01;36m(VF[00m
							(C was)
							(MF noch etwas preiswerter)
							(VC ware)[01;36m)[00m[01;36m)[00m))
			(LK ware)
			[01;33m(MF[00m (MF hotel loccumerhof)[01;31m)[00m
		[01;31m(ADJX[00m
			(ADJX
				(ADVX auch)
				[01;36m(ADJX[00m
					(ADVX zentral)
					(ADJD gelegen)[01;36m)[00m) [01;33mMF)[00m
			(PX mit konferenzraum)[01;31m)[00m
		[01;36m(SIMPX[00m [01;31m(NX[00m
			(NX die preislage)
			(NX [01;33m(ADJX[00m
				(NX hundert funfundvierzig mark)
				(APPR bis)
				[01;31m(NX[00m
					(ADJX hundert achtzig) [01;33mADJX)[00m
					(NN mark)[01;31m)[00m)[01;31m)[00m[01;36m)[00m))
Step:Different label
{'family': ['SIMPX', 'ADJX', 'SIMPX'], 'auto preterminal span': (14, 23), 'span': (14, 23), 'subtrees': ['NX', 'NX'], 'parent': 'TURN', 'over_word': False, 'auto preterminals': ('ART', 'NN', 'CARD', 'CARD', 'NN', 'APPR', 'CARD', 'CARD', 'NN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('NX', 'SIMPX')}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			(VF
				(SIMPX
					(KOORD oder)
					[01;36m(SIMPX[00m
						[01;36m(VF[00m
							(C was)
							(MF noch etwas preiswerter)
							(VC ware)[01;36m)[00m[01;36m)[00m))
			(LK ware)
			[01;33m(MF[00m (MF hotel loccumerhof)[01;31m)[00m
		[01;31m(ADJX[00m
			(ADJX
				(ADVX auch)
				[01;36m(ADJX[00m
					(ADVX zentral)
					(ADJD gelegen)[01;36m)[00m) [01;33mMF)[00m
			(PX mit konferenzraum)[01;31m)[00m
		(SIMPX
			(NX die preislage)
			(NX [01;33m(ADJX[00m
				(NX hundert funfundvierzig mark)
				(APPR bis)
				[01;31m(NX[00m
					(ADJX hundert achtzig) [01;33mADJX)[00m
					(NN mark)[01;31m)[00m))))
Step:UNSET add
{'subtrees': ['C', 'MF', 'VC'], 'family': ['KOORD', 'VF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PWS', 'ADV', 'ADV', 'ADJD', 'VAFIN'), 'right siblings': [], 'left siblings': [(KOORD (KON oder))], 'auto preterminal span': (1, 6), 'span': (1, 6), 'parent': 'SIMPX', 'label': 'VF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			(VF
				(SIMPX
					(KOORD oder)
					[01;36m(SIMPX[00m
						(VF
							(C was)
							(MF noch etwas preiswerter)
							(VC ware))[01;36m)[00m))
			(LK ware)
			[01;33m(MF[00m (MF hotel loccumerhof)[01;31m)[00m
		[01;31m(ADJX[00m
			(ADJX
				(ADVX auch)
				[01;36m(ADJX[00m
					(ADVX zentral)
					(ADJD gelegen)[01;36m)[00m) [01;33mMF)[00m
			(PX mit konferenzraum)[01;31m)[00m
		(SIMPX
			(NX die preislage)
			(NX [01;33m(ADJX[00m
				(NX hundert funfundvierzig mark)
				(APPR bis)
				[01;31m(NX[00m
					(ADJX hundert achtzig) [01;33mADJX)[00m
					(NN mark)[01;31m)[00m))))
Step:Unary
{'subtrees': ['VF'], 'family': ['KOORD', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PWS', 'ADV', 'ADV', 'ADJD', 'VAFIN'), 'right siblings': [], 'left siblings': [(KOORD (KON oder))], 'auto preterminal span': (1, 6), 'span': (1, 6), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			(VF oder was noch etwas preiswerter ware)
			(LK ware)
			[01;33m(MF[00m (MF hotel loccumerhof)[01;31m)[00m
		[01;31m(ADJX[00m
			(ADJX
				(ADVX auch)
				[01;36m(ADJX[00m
					(ADVX zentral)
					(ADJD gelegen)[01;36m)[00m) [01;33mMF)[00m
			(PX mit konferenzraum)[01;31m)[00m
		(SIMPX
			(NX die preislage)
			(NX [01;33m(ADJX[00m
				(NX hundert funfundvierzig mark)
				(APPR bis)
				[01;31m(NX[00m
					(ADJX hundert achtzig) [01;33mADJX)[00m
					(NN mark)[01;31m)[00m))))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'ADJD'], 'family': ['ADVX', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADJD'), 'right siblings': [], 'left siblings': [(ADVX (ADV auch))], 'auto preterminal span': (10, 12), 'span': (10, 12), 'parent': 'ADJX', 'label': 'ADJX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			(VF oder was noch etwas preiswerter ware)
			(LK ware)
			[01;33m(MF[00m (MF hotel loccumerhof)[01;31m)[00m
		[01;31m(ADJX[00m
			(ADJX auch zentral gelegen) [01;33mMF)[00m
			(PX mit konferenzraum)[01;31m)[00m
		(SIMPX
			(NX die preislage)
			(NX [01;33m(ADJX[00m
				(NX hundert funfundvierzig mark)
				(APPR bis)
				[01;31m(NX[00m
					(ADJX hundert achtzig) [01;33mADJX)[00m
					(NN mark)[01;31m)[00m))))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['SIMPX', 'ADJX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'PWS', 'ADV', 'ADV', 'ADJD', 'VAFIN', 'VAFIN', 'NN', 'NE', 'ADV', 'ADV', 'ADJD', 'APPR', 'NN', 'ART', 'NN', 'CARD', 'CARD', 'NN', 'APPR', 'CARD', 'CARD', 'NN'), 'right siblings': ['ADJX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 23), 'span': (0, 9), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(VF oder was noch etwas preiswerter ware)
		(LK ware)
		[01;33m(MF[00m (MF hotel loccumerhof)
		[01;31m(ADJX[00m
			(ADJX auch zentral gelegen) [01;33mMF)[00m
			(PX mit konferenzraum)[01;31m)[00m
		(SIMPX
			(NX die preislage)
			(NX [01;33m(ADJX[00m
				(NX hundert funfundvierzig mark)
				(APPR bis)
				[01;31m(NX[00m
					(ADJX hundert achtzig) [01;33mADJX)[00m
					(NN mark)[01;31m)[00m))))
Step:PP Attachment
{'subtrees': ['ADJX', 'PX'], 'family': ['VF', 'LK', 'MF', 'ADJX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'PWS', 'ADV', 'ADV', 'ADJD', 'VAFIN', 'VAFIN', 'NN', 'NE', 'ADV', 'ADV', 'ADJD', 'APPR', 'NN', 'ART', 'NN', 'CARD', 'CARD', 'NN', 'APPR', 'CARD', 'CARD', 'NN'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 23), 'span': (9, 14), 'left siblings': ['VF', 'LK', 'MF'], 'label': 'ADJX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(VF oder was noch etwas preiswerter ware)
		(LK ware)
		[01;36m(MF[00m
			(MF hotel loccumerhof)
			(ADJX auch zentral gelegen)[01;36m)[00m
		(PX mit konferenzraum)
		(SIMPX
			(NX die preislage)
			(NX [01;33m(ADJX[00m
				(NX hundert funfundvierzig mark)
				(APPR bis)
				[01;31m(NX[00m
					(ADJX hundert achtzig) [01;33mADJX)[00m
					(NN mark)[01;31m)[00m))))
Step:Modifier Attachment
{'subtrees': ['MF', 'ADJX'], 'family': ['VF', 'LK', 'MF', 'PX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'NE', 'ADV', 'ADV', 'ADJD'), 'right siblings': [(PX (APPR mit) (NX (NN konferenzraum))), (SIMPX (NX (ART die) (NN preislage)) (NX (NX (ADJX (CARD hundert) (CARD funfundvierzig)) (NN mark)) (APPR bis) (NX (ADJX (CARD hundert) (CARD achtzig)) (NN mark))))], 'left siblings': [(VF (SIMPX (KOORD (KON oder)) (SIMPX (VF (C (NX (PWS was))) (MF (ADVX (ADV noch)) (ADJX (ADVX (ADV etwas)) (ADJD preiswerter))) (VC (VXFIN (VAFIN ware))))))), (LK (VXFIN (VAFIN ware)))], 'auto preterminal span': (7, 12), 'span': (7, 12), 'parent': 'TURN', 'label': 'MF', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		(VF oder was noch etwas preiswerter ware)
		(LK ware)
		(MF hotel loccumerhof auch zentral gelegen)
		(PX mit konferenzraum)
		(SIMPX
			(NX die preislage)
			(NX [01;33m(ADJX[00m
				(NX hundert funfundvierzig mark)
				(APPR bis)
				[01;31m(NX[00m
					(ADJX hundert achtzig) [01;33mADJX)[00m
					(NN mark)[01;31m)[00m))))
Step:UNSET remove
{'subtrees': ['ADJX', 'NN'], 'family': ['NX', 'APPR', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'CARD', 'NN', 'APPR', 'CARD', 'CARD', 'NN'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (16, 23), 'span': (20, 23), 'left siblings': ['NX', 'APPR'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(VF oder was noch etwas preiswerter ware)
		(LK ware)
		(MF hotel loccumerhof auch zentral gelegen)
		(PX mit konferenzraum)
		(SIMPX
			(NX die preislage)
			(NX
				[01;36m(ADJX[00m
					(NX hundert funfundvierzig mark)
					(APPR bis)
					(ADJX hundert achtzig)[01;36m)[00m
				(NN mark)))))
Step:Modifier Attachment
{'subtrees': ['NX', 'APPR', 'ADJX'], 'family': ['ADJX', 'NN'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'CARD', 'NN', 'APPR', 'CARD', 'CARD'), 'right siblings': [(NN mark)], 'left siblings': [], 'auto preterminal span': (16, 22), 'span': (16, 22), 'parent': 'NX', 'label': 'ADJX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP oder was noch etwas preiswerter ware ware hotel loccumerhof auch zentral gelegen mit konferenzraum die preislage hundert funfundvierzig mark bis hundert achtzig mark)

Sentence 636:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX fur welches hatten sie sich jetzt entschieden)
		(PX
			(APPR fur)
			(NX
				[01;31m(NX[00m
					(PDS das)[01;31m)[00m
				(PX mit konferenzraum)))
		(NX hotel loccumerhof)))
Step:Single Word Phrase
{'subtrees': ['PDS'], 'family': ['NX', 'PX'], 'over_word': True, 'over words': True, 'auto preterminals': ('PDS', 'APPR', 'NN'), 'right siblings': ['PX'], 'parent': 'NX', 'auto preterminal span': (8, 11), 'span': (8, 9), 'left siblings': [], 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP fur welches hatten sie sich jetzt entschieden fur das mit konferenzraum hotel loccumerhof)

Sentence 637:
1 Initial errors
0 on fringe, 1 iterations
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM guten tag)
		(SIMPX
			(VF wir)
			(LK wollten)
			(MF
				(PX in den nachsten drei monaten)
				(ADVX doch)
				(ADVX noch)
				(ADVX mal)
				(APPR nach)
				[01;31m(PX[00m
					(PX nach hannover)
					(PX zu unserer filiale)[01;31m)[00m)
			(VC fahren))
		(SIMPX haben sie jetzt einen freien termin gefunden)))
Step:PP Attachment
{'subtrees': ['PX', 'PX'], 'family': ['PX', 'ADVX', 'ADVX', 'ADVX', 'APPR', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'ADJA', 'CARD', 'NN', 'ADV', 'ADV', 'ADV', 'APPR', 'APPR', 'NE', 'APPR', 'PPOSAT', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (4, 18), 'span': (13, 18), 'left siblings': ['PX', 'ADVX', 'ADVX', 'ADVX', 'APPR'], 'label': 'PX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP guten tag wir wollten in den nachsten drei monaten doch noch mal nach nach hannover zu unserer filiale fahren haben sie jetzt einen freien termin gefunden)

Sentence 638:
7 Initial errors
0 on fringe, 4 iterations
4 Error:NP Attachment
1 Error:Unary
1 Error:PP Attachment
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM okay)
		[01;31m(PX[00m
			[01;36m(DM[00m
				(ADVX
					(ADV also))[01;36m)[00m
			(PX am zwanzigsten)[01;31m)[00m
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF was)
				(LK meinen)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX
						(PPER sie))[01;31m)[00m[01;31m)[00m
			[01;31m(NX[00m
				(ADVX eher)
				(NX flug)[01;31m)[00m[01;36m)[00m)) [01;33mMF)[00m
Step:NP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'NX'], 'mover info': [('NX', (7, 9))], 'old_family': ['DM', 'PX', 'SIMPX', 'NX'], 'start left siblings': ['DM', 'PX', 'SIMPX'], 'auto preterminals': ('ITJ', 'ADV', 'APPRART', 'NN', 'PWS', 'VVFIN', 'PPER', 'ADV', 'NN'), 'start right siblings': [], 'end left siblings': ['NX'], 'auto preterminal span': (0, 9), 'movers': ['NX'], 'old_parent': 'TURN', 'end right siblings': [], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM okay)
		[01;31m(PX[00m
			[01;36m(DM[00m
				(ADVX
					(ADV also))[01;36m)[00m
			(PX am zwanzigsten)[01;31m)[00m
		(SIMPX
			(VF was)
			(LK meinen)
			(MF
				(NX sie)
				[01;31m(NX[00m
					(ADVX eher)
					(NX flug)[01;31m)[00m))))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['DM', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV',), 'right siblings': [(PX (APPRART am) (NX (NN zwanzigsten)))], 'left siblings': [], 'auto preterminal span': (1, 2), 'span': (1, 2), 'parent': 'PX', 'label': 'DM', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM okay)
		[01;31m(PX[00m
			(DM also)
			(PX am zwanzigsten)[01;31m)[00m
		(SIMPX
			(VF was)
			(LK meinen)
			(MF
				(NX sie)
				[01;31m(NX[00m
					(ADVX eher)
					(NX flug)[01;31m)[00m))))
Step:PP Attachment
{'subtrees': ['DM', 'PX'], 'family': ['DM', 'PX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'APPRART', 'NN', 'PWS', 'VVFIN', 'PPER', 'ADV', 'NN'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 9), 'span': (1, 4), 'left siblings': ['DM'], 'label': 'PX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM okay)
		(DM also)
		(PX am zwanzigsten)
		(SIMPX
			(VF was)
			(LK meinen)
			(MF
				(NX sie)
				[01;31m(NX[00m
					(ADVX eher)
					(NX flug)[01;31m)[00m))))
Step:UNSET remove
{'subtrees': ['ADVX', 'NX'], 'family': ['NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (6, 9), 'span': (7, 9), 'left siblings': ['NX'], 'label': 'NX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP okay also am zwanzigsten was meinen sie eher flug)

Sentence 639:
0 Initial errors
0 on fringe, 0 iterations

Sentence 640:
0 Initial errors
0 on fringe, 0 iterations

Sentence 641:
3 Initial errors
0 on fringe, 2 iterations
2 Error:Different label
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM gut)
		(DM ja)
		(SIMPX
			[01;36m(KOORD[00m [01;31m(VF[00m
				[01;31m(ADVX[00m
					(ADV aber)[01;31m)[00m[01;31m)[00m[01;36m)[00m
			(LK gehen)
			(MF wir doch dann sonntag abend noch ins theater))))
Step:Different label
{'family': ['KOORD', 'LK', 'MF'], 'auto preterminal span': (2, 3), 'span': (2, 3), 'subtrees': ['ADVX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('ADV',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('VF', 'KOORD')}
(TOP
	(TURN
		(DM gut)
		(DM ja)
		(SIMPX
			(KOORD
				[01;31m(ADVX[00m
					(ADV aber)[01;31m)[00m)
			(LK gehen)
			(MF wir doch dann sonntag abend noch ins theater))))
Step:Single Word Phrase
{'subtrees': ['ADV'], 'family': ['ADVX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADV',), 'right siblings': [], 'parent': 'KOORD', 'auto preterminal span': (2, 3), 'span': (2, 3), 'left siblings': [], 'label': 'ADVX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP gut ja aber gehen wir doch dann sonntag abend noch ins theater)

Sentence 642:
8 Initial errors
0 on fringe, 6 iterations
2 Error:Different label
2 Error:Clause Attachment
1 Error:Clause Attachment
1 Error:Clause Attachment
1 Error:Clause Attachment
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		[01;36m(SIMPX[00m
			(SIMPX ich war)
			(SIMPX das letzte mal war ich im intercityhotel)[01;36m)[00m
		[01;31m(SIMPX[00m
			(SIMPX das ist ziemlich zentral)
			(KON und)
			(DM ja)
			(DM okay)
			[01;33m(SIMPX[00m (SIMPX es hat einen konferenzraum)[01;31m)[00m
		(SIMPX aber das brauchen wir eigentlich nicht) [01;33mSIMPX)[00m
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF da)
				(LK war)[01;31m)[00m
			[01;31m(SIMPX[00m
				[01;36m(MF[00m [01;31m(VF[00m
					(NX
						(ART das)
						(NN einzelzimmer))[01;31m)[00m[01;36m)[00m
				(LK hat)
				(MF ungefahr zweihundert mark)
				(VC gekostet)[01;31m)[00m[01;36m)[00m))
Step:Different label
{'family': ['MF', 'LK', 'MF', 'VC'], 'auto preterminal span': (29, 31), 'span': (29, 31), 'subtrees': ['NX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('ART', 'NN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('VF', 'MF')}
(TOP
	(TURN
		(DM ja)
		[01;36m(SIMPX[00m
			(SIMPX ich war)
			(SIMPX das letzte mal war ich im intercityhotel)[01;36m)[00m
		[01;31m(SIMPX[00m
			(SIMPX das ist ziemlich zentral)
			(KON und)
			(DM ja)
			(DM okay)
			[01;33m(SIMPX[00m (SIMPX es hat einen konferenzraum)[01;31m)[00m
		(SIMPX aber das brauchen wir eigentlich nicht) [01;33mSIMPX)[00m
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(VF da)
				(LK war)[01;31m)[00m
			[01;31m(SIMPX[00m
				(MF das einzelzimmer)
				(LK hat)
				(MF ungefahr zweihundert mark)
				(VC gekostet)[01;31m)[00m[01;36m)[00m))
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['SIMPX', 'MF', 'LK', 'MF', 'VC'], 'mover info': [('SIMPX', (27, 29))], 'old_family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'start left siblings': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'auto preterminals': ('PTKANT', 'PPER', 'VAFIN', 'ART', 'ADJA', 'NN', 'VAFIN', 'PPER', 'APPRART', 'NE', 'PDS', 'VAFIN', 'ADV', 'ADJD', 'KON', 'PTKANT', 'ITJ', 'PPER', 'VAFIN', 'ART', 'NN', 'KON', 'PDS', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADV', 'VAFIN', 'ART', 'NN', 'VAFIN', 'ADV', 'CARD', 'NN', 'VVPP'), 'start right siblings': ['SIMPX'], 'end left siblings': [], 'auto preterminal span': (0, 36), 'movers': ['SIMPX'], 'old_parent': 'TURN', 'end right siblings': ['MF', 'LK', 'MF', 'VC'], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		[01;36m(SIMPX[00m
			(SIMPX ich war)
			(SIMPX das letzte mal war ich im intercityhotel)[01;36m)[00m
		[01;31m(SIMPX[00m
			(SIMPX das ist ziemlich zentral)
			(KON und)
			(DM ja)
			(DM okay)
			[01;33m(SIMPX[00m (SIMPX es hat einen konferenzraum)[01;31m)[00m
		(SIMPX aber das brauchen wir eigentlich nicht) [01;33mSIMPX)[00m
		(SIMPX
			[01;31m(SIMPX[00m
				(VF da)
				(LK war)[01;31m)[00m
			(MF das einzelzimmer)
			(LK hat)
			(MF ungefahr zweihundert mark)
			(VC gekostet))))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'ART', 'ADJA', 'NN', 'VAFIN', 'PPER', 'APPRART', 'NE'), 'right siblings': [(SIMPX (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VAFIN ist))) (MF (ADJX (ADVX (ADV ziemlich)) (ADJD zentral)))) (KON und) (DM (PTKANT ja)) (DM (ITJ okay)) (SIMPX (VF (NX (PPER es))) (LK (VXFIN (VAFIN hat))) (MF (NX (ART einen) (NN konferenzraum))))), (SIMPX (KOORD (KON aber)) (VF (NX (PDS das))) (LK (VXFIN (VVFIN brauchen))) (MF (NX (PPER wir)) (ADVX (ADV eigentlich)) (ADVX (PTKNEG nicht)))), (SIMPX (SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VAFIN war)))) (MF (NX (ART das) (NN einzelzimmer))) (LK (VXFIN (VAFIN hat))) (MF (NX (ADVX (ADV ungefahr)) (ADJX (CARD zweihundert)) (NN mark))) (VC (VXINF (VVPP gekostet))))], 'left siblings': [(DM (PTKANT ja))], 'auto preterminal span': (1, 10), 'span': (1, 10), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich war das letzte mal war ich im intercityhotel)
		[01;31m(SIMPX[00m
			(SIMPX das ist ziemlich zentral)
			(KON und)
			(DM ja)
			(DM okay)
			[01;33m(SIMPX[00m (SIMPX es hat einen konferenzraum)[01;31m)[00m
		(SIMPX aber das brauchen wir eigentlich nicht) [01;33mSIMPX)[00m
		(SIMPX
			[01;31m(SIMPX[00m
				(VF da)
				(LK war)[01;31m)[00m
			(MF das einzelzimmer)
			(LK hat)
			(MF ungefahr zweihundert mark)
			(VC gekostet))))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'KON', 'DM', 'DM', 'SIMPX'], 'family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VAFIN', 'ART', 'ADJA', 'NN', 'VAFIN', 'PPER', 'APPRART', 'NE', 'PDS', 'VAFIN', 'ADV', 'ADJD', 'KON', 'PTKANT', 'ITJ', 'PPER', 'VAFIN', 'ART', 'NN', 'KON', 'PDS', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'ADV', 'VAFIN', 'ART', 'NN', 'VAFIN', 'ADV', 'CARD', 'NN', 'VVPP'), 'right siblings': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 36), 'span': (10, 21), 'left siblings': ['DM', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich war das letzte mal war ich im intercityhotel)
		(SIMPX das ist ziemlich zentral)
		(KON und)
		(DM ja)
		(DM okay)
		[01;36m(SIMPX[00m
			(SIMPX es hat einen konferenzraum)
			(SIMPX aber das brauchen wir eigentlich nicht)[01;36m)[00m
		(SIMPX
			[01;31m(SIMPX[00m
				(VF da)
				(LK war)[01;31m)[00m
			(MF das einzelzimmer)
			(LK hat)
			(MF ungefahr zweihundert mark)
			(VC gekostet))))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['DM', 'SIMPX', 'SIMPX', 'KON', 'DM', 'DM', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'ART', 'NN', 'KON', 'PDS', 'VVFIN', 'PPER', 'ADV', 'PTKNEG'), 'right siblings': [(SIMPX (SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VAFIN war)))) (MF (NX (ART das) (NN einzelzimmer))) (LK (VXFIN (VAFIN hat))) (MF (NX (ADVX (ADV ungefahr)) (ADJX (CARD zweihundert)) (NN mark))) (VC (VXINF (VVPP gekostet))))], 'left siblings': [(DM (PTKANT ja)), (SIMPX (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VAFIN war)))) (SIMPX (VF (NX (ART das) (ADJX (ADJA letzte)) (NN mal))) (LK (VXFIN (VAFIN war))) (MF (NX (PPER ich)) (PX (APPRART im) (NX (NE intercityhotel)))))), (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VAFIN ist))) (MF (ADJX (ADVX (ADV ziemlich)) (ADJD zentral)))), (KON und), (DM (PTKANT ja)), (DM (ITJ okay))], 'auto preterminal span': (17, 27), 'span': (17, 27), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich war das letzte mal war ich im intercityhotel)
		(SIMPX das ist ziemlich zentral)
		(KON und)
		(DM ja)
		(DM okay)
		(SIMPX es hat einen konferenzraum aber das brauchen wir eigentlich nicht)
		(SIMPX
			[01;31m(SIMPX[00m
				(VF da)
				(LK war)[01;31m)[00m
			(MF das einzelzimmer)
			(LK hat)
			(MF ungefahr zweihundert mark)
			(VC gekostet))))
Step:UNSET remove
{'subtrees': ['VF', 'LK'], 'family': ['SIMPX', 'MF', 'LK', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'ART', 'NN', 'VAFIN', 'ADV', 'CARD', 'NN', 'VVPP'), 'right siblings': ['MF', 'LK', 'MF', 'VC'], 'parent': 'SIMPX', 'auto preterminal span': (27, 36), 'span': (27, 29), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ja ich war das letzte mal war ich im intercityhotel das ist ziemlich zentral und ja okay es hat einen konferenzraum aber das brauchen wir eigentlich nicht da war das einzelzimmer hat ungefahr zweihundert mark gekostet)

Sentence 643:
8 Initial errors
0 on fringe, 6 iterations
2 Error:Different label
2 Error:Modifier Attachment
1 Error:Modifier Attachment
1 Error:Clause Attachment
1 Error:PP Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX das ist bestimmt nicht schlecht)
		(SIMPX ich kenne ein theater in hannover)
		(SIMPX
			(VF das)
			(LK heist)
			(MF
				[01;31m(NX[00m
					(NX ballhof)
					[01;36m(ADVX[00m
						(KON oder)
						(ADVX so)[01;36m)[00m[01;31m)[00m))
		[01;36m(SIMPX[00m
			[01;36m(SIMPX[00m [01;31m(P[00m
				(SIMPX vielleicht haben die auch eine gute inszenierung)
				(KOUS weil)
				(SIMPX
					(VF das letzte mal)
					(LK haben)
					(MF
						(NX die)
						[01;31m(ADJX[00m
							(ADVX wirklich)
							[01;36m(ADJX[00m
								(ADJD gut)[01;36m)[00m[01;31m)[00m)
					(VC gespielt))[01;31m)[00m[01;36m)[00m
			(SIMPX
				(VF ansonsten)
				(LK weis)
				(MF ich gar nicht)
				(NF
					(SIMPX
						(C was)
						(MF
							[01;36m(PX[00m
								(PX im moment)
								(PX in hannover)[01;36m)[00m
							(ADVX so)
							(ADVX los))
						(VC ist))))[01;36m)[00m))
Step:Different label
{'family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'auto preterminal span': (17, 33), 'span': (17, 33), 'subtrees': ['SIMPX', 'KOUS', 'SIMPX'], 'parent': 'TURN', 'over_word': False, 'auto preterminals': ('ADV', 'VAFIN', 'PDS', 'ADV', 'ART', 'ADJA', 'NN', 'KOUS', 'ART', 'ADJA', 'NN', 'VAFIN', 'PDS', 'ADV', 'ADJD', 'VVPP'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('P', 'SIMPX')}
(TOP
	(TURN
		(DM ja)
		(SIMPX das ist bestimmt nicht schlecht)
		(SIMPX ich kenne ein theater in hannover)
		(SIMPX
			(VF das)
			(LK heist)
			(MF
				[01;31m(NX[00m
					(NX ballhof)
					[01;36m(ADVX[00m
						(KON oder)
						(ADVX so)[01;36m)[00m[01;31m)[00m))
		[01;36m(SIMPX[00m
			(SIMPX
				(SIMPX vielleicht haben die auch eine gute inszenierung)
				(KOUS weil)
				(SIMPX
					(VF das letzte mal)
					(LK haben)
					(MF
						(NX die)
						[01;31m(ADJX[00m
							(ADVX wirklich)
							[01;36m(ADJX[00m
								(ADJD gut)[01;36m)[00m[01;31m)[00m)
					(VC gespielt)))
			(SIMPX
				(VF ansonsten)
				(LK weis)
				(MF ich gar nicht)
				(NF
					(SIMPX
						(C was)
						(MF
							[01;36m(PX[00m
								(PX im moment)
								(PX in hannover)[01;36m)[00m
							(ADVX so)
							(ADVX los))
						(VC ist))))[01;36m)[00m))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'ADVX', 'ADJX'], 'mover info': [('ADVX', (30, 31))], 'old_family': ['ADVX', 'ADJD'], 'start left siblings': [], 'auto preterminals': ('PDS', 'ADV', 'ADJD'), 'start right siblings': ['ADJD'], 'end left siblings': ['NX'], 'auto preterminal span': (29, 32), 'movers': ['ADVX'], 'old_parent': 'ADJX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['ADJX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(SIMPX das ist bestimmt nicht schlecht)
		(SIMPX ich kenne ein theater in hannover)
		(SIMPX
			(VF das)
			(LK heist)
			(MF
				[01;31m(NX[00m
					(NX ballhof)
					[01;36m(ADVX[00m
						(KON oder)
						(ADVX so)[01;36m)[00m[01;31m)[00m))
		[01;36m(SIMPX[00m
			(SIMPX vielleicht haben die auch eine gute inszenierung weil das letzte mal haben die wirklich gut gespielt)
			(SIMPX
				(VF ansonsten)
				(LK weis)
				(MF ich gar nicht)
				(NF
					(SIMPX
						(C was)
						(MF
							[01;36m(PX[00m
								(PX im moment)
								(PX in hannover)[01;36m)[00m
							(ADVX so)
							(ADVX los))
						(VC ist))))[01;36m)[00m))
Step:Modifier Attachment
{'subtrees': ['KON', 'ADVX'], 'family': ['NX', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'ADV'), 'right siblings': [], 'left siblings': [(NX (NE ballhof))], 'auto preterminal span': (15, 17), 'span': (15, 17), 'parent': 'NX', 'label': 'ADVX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX das ist bestimmt nicht schlecht)
		(SIMPX ich kenne ein theater in hannover)
		(SIMPX
			(VF das)
			(LK heist)
			(MF
				[01;31m(NX[00m
					(NX ballhof)
					(ADVX oder so)[01;31m)[00m))
		[01;36m(SIMPX[00m
			(SIMPX vielleicht haben die auch eine gute inszenierung weil das letzte mal haben die wirklich gut gespielt)
			(SIMPX
				(VF ansonsten)
				(LK weis)
				(MF ich gar nicht)
				(NF
					(SIMPX
						(C was)
						(MF
							[01;36m(PX[00m
								(PX im moment)
								(PX in hannover)[01;36m)[00m
							(ADVX so)
							(ADVX los))
						(VC ist))))[01;36m)[00m))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PDS', 'ADV', 'ART', 'ADJA', 'NN', 'KOUS', 'ART', 'ADJA', 'NN', 'VAFIN', 'PDS', 'ADV', 'ADJD', 'VVPP', 'ADV', 'VVFIN', 'PPER', 'ADV', 'PTKNEG', 'PWS', 'APPRART', 'NN', 'APPR', 'NE', 'ADV', 'ADV', 'VAFIN'), 'right siblings': [], 'left siblings': [(DM (PTKANT ja)), (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VAFIN ist))) (MF (ADVX (ADV bestimmt)) (ADVX (PTKNEG nicht)) (ADJX (ADJD schlecht)))), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN kenne))) (MF (NX (NX (ART ein) (NN theater)) (PX (APPR in) (NX (NE hannover)))))), (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VVFIN heist))) (MF (NX (NX (NE ballhof)) (ADVX (KON oder) (ADVX (ADV so))))))], 'auto preterminal span': (17, 46), 'span': (17, 46), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX das ist bestimmt nicht schlecht)
		(SIMPX ich kenne ein theater in hannover)
		(SIMPX
			(VF das)
			(LK heist)
			(MF
				[01;31m(NX[00m
					(NX ballhof)
					(ADVX oder so)[01;31m)[00m))
		(SIMPX
			(SIMPX vielleicht haben die auch eine gute inszenierung weil das letzte mal haben die wirklich gut gespielt)
			(SIMPX
				(VF ansonsten)
				(LK weis)
				(MF ich gar nicht)
				(NF
					(SIMPX
						(C was)
						(MF
							[01;36m(PX[00m
								(PX im moment)
								(PX in hannover)[01;36m)[00m
							(ADVX so)
							(ADVX los))
						(VC ist)))))))
Step:PP Attachment
{'subtrees': ['PX', 'PX'], 'family': ['PX', 'ADVX', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPRART', 'NN', 'APPR', 'NE'), 'right siblings': [(ADVX (ADV so)), (ADVX (ADV los))], 'left siblings': [], 'auto preterminal span': (39, 43), 'span': (39, 43), 'parent': 'MF', 'label': 'PX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX das ist bestimmt nicht schlecht)
		(SIMPX ich kenne ein theater in hannover)
		(SIMPX
			(VF das)
			(LK heist)
			(MF
				[01;31m(NX[00m
					(NX ballhof)
					(ADVX oder so)[01;31m)[00m))
		(SIMPX vielleicht haben die auch eine gute inszenierung weil das letzte mal haben die wirklich gut gespielt ansonsten weis ich gar nicht was im moment in hannover so los ist)))
Step:Unary
{'subtrees': ['NX', 'ADVX'], 'family': ['NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NE', 'KON', 'ADV'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (14, 17), 'span': (14, 17), 'left siblings': [], 'label': 'NX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja das ist bestimmt nicht schlecht ich kenne ein theater in hannover das heist ballhof oder so vielleicht haben die auch eine gute inszenierung weil das letzte mal haben die wirklich gut gespielt ansonsten weis ich gar nicht was im moment in hannover so los ist)

Sentence 644:
0 Initial errors
0 on fringe, 0 iterations

Sentence 645:
1 Initial errors
0 on fringe, 1 iterations
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ach)
		(SIMPX ich finde mit dem zug konnen wir auch fahren)
		(SIMPX so weit ist das ja nicht bis hannover)
		[01;31m(SIMPX[00m
			(VF da)
			(LK fahren)
			(MF wir mit dem zug ja nur zwei drei stunden)[01;31m)[00m))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'PPER', 'VVFIN', 'APPR', 'ART', 'NN', 'VMFIN', 'PPER', 'ADV', 'VVINF', 'ADV', 'ADJD', 'VAFIN', 'PDS', 'ADV', 'PTKNEG', 'APPR', 'NE', 'ADV', 'VVFIN', 'PPER', 'APPR', 'ART', 'NN', 'ADV', 'ADV', 'CARD', 'CARD', 'NN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 29), 'span': (18, 29), 'left siblings': ['DM', 'SIMPX', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ach ich finde mit dem zug konnen wir auch fahren so weit ist das ja nicht bis hannover da fahren wir mit dem zug ja nur zwei drei stunden)

Sentence 646:
0 Initial errors
0 on fringe, 0 iterations

Sentence 647:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX ich mus mal gucken was samstag sonntag fahrt)
		(SIMPX
			(VF wann)
			(LK wollen)
			(MF
				(NX sie)
				(ADVX denn)
				[01;36m(ADJX[00m [01;31m(ADVX[00m
					(ADV ungefahr)[01;31m)[00m[01;36m)[00m)
			(VC fahren))
		(SIMPX mittags reicht eigentlich)))
Step:Single Word Phrase
{'family': ['NX', 'ADVX', 'ADJX'], 'auto preterminal span': (12, 13), 'span': (12, 13), 'subtrees': ['ADV'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'ADJX')}
(TOP ich mus mal gucken was samstag sonntag fahrt wann wollen sie denn ungefahr fahren mittags reicht eigentlich)

Sentence 648:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX wenn wir mittags fahren)
		(SIMPX
			(VF da)
			(LK konnten)
			(MF wir den)
			(VC nehmen)
			[01;36m(PX[00m
				(NF
					(PX um zwolf uhr funfundvierzig)
					(PX zum beispiel))[01;36m)[00m)
		(SIMPX dann sind wir um sechzehn uhr vier in hannover)))
Step:Unary
{'subtrees': ['NF'], 'family': ['VF', 'LK', 'MF', 'VC', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'CARD', 'NN', 'CARD', 'APPRART', 'NN'), 'right siblings': [], 'left siblings': [(VF (ADVX (ADV da))), (LK (VXFIN (VMFIN konnten))), (MF (NX (PPER wir)) (NX (PDS den))), (VC (VXINF (VVINF nehmen)))], 'auto preterminal span': (9, 15), 'span': (9, 15), 'parent': 'SIMPX', 'label': 'PX', 'classified_type': 'Unary', 'type': 'add'}
(TOP wenn wir mittags fahren da konnten wir den nehmen um zwolf uhr funfundvierzig zum beispiel dann sind wir um sechzehn uhr vier in hannover)

Sentence 649:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM ja)
		(SIMPX ich kann ja schon mal zwei platze reservieren lassen)
		(SIMPX
			(VF sie)
			(LK rauchen)
			(SIMPX glaube ich)
			[01;31m(MF[00m
				(ADVX auch)
				(ADVX nicht)[01;31m)[00m)
		(DM frau meurer)))
Step:Modifier Attachment
{'subtrees': ['ADVX', 'ADVX'], 'family': ['VF', 'LK', 'SIMPX', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'VVFIN', 'PPER', 'ADV', 'PTKNEG'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (11, 17), 'span': (15, 17), 'left siblings': ['VF', 'LK', 'SIMPX'], 'label': 'MF', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP ja ja ich kann ja schon mal zwei platze reservieren lassen sie rauchen glaube ich auch nicht frau meurer)

Sentence 650:
0 Initial errors
0 on fringe, 0 iterations

Sentence 651:
9 Initial errors
0 on fringe, 9 iterations
1 Error:Co-ordination
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:UNSET add
1 Error:UNSET add
1 Error:UNSET remove
1 Error:UNSET remove
1 Error:UNSET add
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK kann)
			(MF ja mal im reiseburo)
			(VC anrufen)[01;31m)[00m
		(KON oder)
		(APPRART im)
		(SIMPX
			(VF wir)
			(LK mussen)
			(MF uns eh noch)
			(VC uberlegen)
			(NF
				(SIMPX
					[01;31m(SIMPX[00m
						(C wo)
						[01;33m(MF[00m (MF wir)
						[01;33m(SIMPX[00m (VC schlafen wollen)[01;31m)[00m
					[01;31m(SIMPX[00m
						(C ob)
						(MF wir ein hotel) [01;33mSIMPX) MF)[00m
						(VC nehmen)
						(NF oder pension)[01;31m)[00m)))
		(SIMPX
			(VF da)
			(LK kann)
			(MF ich ja mal)
			[01;31m(FKOORD[00m [01;33m(VXINF (VC[00m
				(VC anrufen)
				(KON und)
				[01;31m(VCN[00m
					(VC fragen) [01;33mVC) VXINF)[00m
					(NF ob die ein programm haben fur theater)[01;31m)[00m[01;31m)[00m)))
Step:Co-ordination
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['DM', 'SIMPX', 'KON', 'APPRART', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VMFIN', 'ADV', 'ADV', 'APPRART', 'NN', 'VVINF', 'KON', 'APPRART', 'PPER', 'VMFIN', 'PRF', 'ADV', 'ADV', 'VVINF', 'PWAV', 'PPER', 'VVINF', 'VMFIN', 'KOUS', 'PPER', 'ART', 'NN', 'VVFIN', 'KON', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'VVINF', 'KON', 'VVINF', 'KOUS', 'PDS', 'ART', 'NN', 'VAFIN', 'APPR', 'NN'), 'right siblings': ['KON', 'APPRART', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 42), 'span': (1, 8), 'left siblings': ['DM'], 'label': 'SIMPX', 'classified_type': 'Co-ordination', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(VF ich)
		(LK kann)
		(MF ja mal im reiseburo)
		(VC anrufen)
		(KON oder)
		(APPRART im)
		(SIMPX
			(VF wir)
			(LK mussen)
			(MF uns eh noch)
			(VC uberlegen)
			(NF
				(SIMPX
					[01;31m(SIMPX[00m
						(C wo)
						[01;33m(MF[00m (MF wir)
						[01;33m(SIMPX[00m (VC schlafen wollen)[01;31m)[00m
					[01;31m(SIMPX[00m
						(C ob)
						(MF wir ein hotel) [01;33mSIMPX) MF)[00m
						(VC nehmen)
						(NF oder pension)[01;31m)[00m)))
		(SIMPX
			(VF da)
			(LK kann)
			(MF ich ja mal)
			[01;31m(FKOORD[00m [01;33m(VXINF (VC[00m
				(VC anrufen)
				(KON und)
				[01;31m(VCN[00m
					(VC fragen) [01;33mVC) VXINF)[00m
					(NF ob die ein programm haben fur theater)[01;31m)[00m[01;31m)[00m)))
Step:UNSET remove
{'subtrees': ['C', 'MF', 'VC'], 'family': ['SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PWAV', 'PPER', 'VVINF', 'VMFIN', 'KOUS', 'PPER', 'ART', 'NN', 'VVFIN', 'KON', 'NN'), 'right siblings': ['SIMPX'], 'parent': 'SIMPX', 'auto preterminal span': (16, 27), 'span': (16, 20), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(VF ich)
		(LK kann)
		(MF ja mal im reiseburo)
		(VC anrufen)
		(KON oder)
		(APPRART im)
		(SIMPX
			(VF wir)
			(LK mussen)
			(MF uns eh noch)
			(VC uberlegen)
			(NF
				(SIMPX
					(C wo)
					[01;33m(MF[00m (MF wir)
					[01;33m(SIMPX[00m (VC schlafen wollen)
					[01;31m(SIMPX[00m
						(C ob)
						(MF wir ein hotel) [01;33mSIMPX) MF)[00m
						(VC nehmen)
						(NF oder pension)[01;31m)[00m)))
		(SIMPX
			(VF da)
			(LK kann)
			(MF ich ja mal)
			[01;31m(FKOORD[00m [01;33m(VXINF (VC[00m
				(VC anrufen)
				(KON und)
				[01;31m(VCN[00m
					(VC fragen) [01;33mVC) VXINF)[00m
					(NF ob die ein programm haben fur theater)[01;31m)[00m[01;31m)[00m)))
Step:UNSET remove
{'subtrees': ['C', 'MF', 'VC', 'NF'], 'family': ['C', 'MF', 'VC', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PWAV', 'PPER', 'VVINF', 'VMFIN', 'KOUS', 'PPER', 'ART', 'NN', 'VVFIN', 'KON', 'NN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (16, 27), 'span': (20, 27), 'left siblings': ['C', 'MF', 'VC'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(VF ich)
		(LK kann)
		(MF ja mal im reiseburo)
		(VC anrufen)
		(KON oder)
		(APPRART im)
		(SIMPX
			(VF wir)
			(LK mussen)
			(MF uns eh noch)
			(VC uberlegen)
			(NF
				(SIMPX
					(C wo)
					[01;36m(MF[00m
						(MF wir)
						[01;36m(SIMPX[00m
							(VC schlafen wollen)
							(C ob)
							(MF wir ein hotel)[01;36m)[00m[01;36m)[00m
					(VC nehmen)
					(NF oder pension))))
		(SIMPX
			(VF da)
			(LK kann)
			(MF ich ja mal)
			[01;31m(FKOORD[00m [01;33m(VXINF (VC[00m
				(VC anrufen)
				(KON und)
				[01;31m(VCN[00m
					(VC fragen) [01;33mVC) VXINF)[00m
					(NF ob die ein programm haben fur theater)[01;31m)[00m[01;31m)[00m)))
Step:UNSET add
{'subtrees': ['MF', 'VC', 'C', 'MF'], 'family': ['C', 'MF', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVINF', 'VMFIN', 'KOUS', 'PPER', 'ART', 'NN'), 'right siblings': [(VC (VXFIN (VVFIN nehmen))), (NF (NX (KON oder) (NX (NN pension))))], 'left siblings': [(C (PX (PWAV wo)))], 'auto preterminal span': (17, 24), 'span': (17, 24), 'parent': 'SIMPX', 'label': 'MF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(VF ich)
		(LK kann)
		(MF ja mal im reiseburo)
		(VC anrufen)
		(KON oder)
		(APPRART im)
		(SIMPX
			(VF wir)
			(LK mussen)
			(MF uns eh noch)
			(VC uberlegen)
			(NF
				(SIMPX
					(C wo)
					(MF
						(MF wir)
						[01;36m(SIMPX[00m
							(VC schlafen wollen)
							(C ob)
							(MF wir ein hotel)[01;36m)[00m)
					(VC nehmen)
					(NF oder pension))))
		(SIMPX
			(VF da)
			(LK kann)
			(MF ich ja mal)
			[01;31m(FKOORD[00m [01;33m(VXINF (VC[00m
				(VC anrufen)
				(KON und)
				[01;31m(VCN[00m
					(VC fragen) [01;33mVC) VXINF)[00m
					(NF ob die ein programm haben fur theater)[01;31m)[00m[01;31m)[00m)))
Step:UNSET add
{'subtrees': ['VC', 'C', 'MF'], 'family': ['MF', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVINF', 'VMFIN', 'KOUS', 'PPER', 'ART', 'NN'), 'right siblings': [], 'left siblings': [(MF (NX (PPER wir)))], 'auto preterminal span': (18, 24), 'span': (18, 24), 'parent': 'MF', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(VF ich)
		(LK kann)
		(MF ja mal im reiseburo)
		(VC anrufen)
		(KON oder)
		(APPRART im)
		(SIMPX wir mussen uns eh noch uberlegen wo wir schlafen wollen ob wir ein hotel nehmen oder pension)
		(SIMPX
			(VF da)
			(LK kann)
			(MF ich ja mal)
			[01;31m(FKOORD[00m [01;33m(VXINF (VC[00m
				(VC anrufen)
				(KON und)
				[01;31m(VCN[00m
					(VC fragen) [01;33mVC) VXINF)[00m
					(NF ob die ein programm haben fur theater)[01;31m)[00m[01;31m)[00m)))
Step:UNSET remove
{'subtrees': ['VC', 'KON', 'VCN'], 'family': ['VF', 'LK', 'MF', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'VVINF', 'KON', 'VVINF', 'KOUS', 'PDS', 'ART', 'NN', 'VAFIN', 'APPR', 'NN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (27, 42), 'span': (32, 42), 'left siblings': ['VF', 'LK', 'MF'], 'label': 'FKOORD', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(VF ich)
		(LK kann)
		(MF ja mal im reiseburo)
		(VC anrufen)
		(KON oder)
		(APPRART im)
		(SIMPX wir mussen uns eh noch uberlegen wo wir schlafen wollen ob wir ein hotel nehmen oder pension)
		(SIMPX
			(VF da)
			(LK kann)
			(MF ich ja mal)
			[01;33m(VXINF (VC[00m (VC anrufen)
			(KON und)
			[01;31m(VCN[00m
				(VC fragen) [01;33mVC) VXINF)[00m
				(NF ob die ein programm haben fur theater)[01;31m)[00m)))
Step:UNSET remove
{'subtrees': ['VC', 'NF'], 'family': ['VF', 'LK', 'MF', 'VC', 'KON', 'VCN'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'VVINF', 'KON', 'VVINF', 'KOUS', 'PDS', 'ART', 'NN', 'VAFIN', 'APPR', 'NN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (27, 42), 'span': (34, 42), 'left siblings': ['VF', 'LK', 'MF', 'VC', 'KON'], 'label': 'VCN', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(VF ich)
		(LK kann)
		(MF ja mal im reiseburo)
		(VC anrufen)
		(KON oder)
		(APPRART im)
		(SIMPX wir mussen uns eh noch uberlegen wo wir schlafen wollen ob wir ein hotel nehmen oder pension)
		(SIMPX
			(VF da)
			(LK kann)
			(MF ich ja mal)
			[01;36m(VXINF[00m
				[01;36m(VC[00m
					(VC anrufen)
					(KON und)
					(VC fragen)[01;36m)[00m[01;36m)[00m
			(NF ob die ein programm haben fur theater))))
Step:UNSET add
{'subtrees': ['VC', 'KON', 'VC'], 'family': ['VF', 'LK', 'MF', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVINF', 'KON', 'VVINF'), 'right siblings': [(NF (SIMPX (C (KOUS ob)) (MF (NX (PDS die)) (NX (ART ein) (NN programm))) (VC (VXFIN (VAFIN haben))) (NF (PX (APPR fur) (NX (NN theater))))))], 'left siblings': [(VF (ADVX (ADV da))), (LK (VXFIN (VMFIN kann))), (MF (NX (PPER ich)) (ADVX (ADV ja)) (ADVX (ADV mal)))], 'auto preterminal span': (32, 35), 'span': (32, 35), 'parent': 'SIMPX', 'label': 'VC', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(VF ich)
		(LK kann)
		(MF ja mal im reiseburo)
		(VC anrufen)
		(KON oder)
		(APPRART im)
		(SIMPX wir mussen uns eh noch uberlegen wo wir schlafen wollen ob wir ein hotel nehmen oder pension)
		(SIMPX
			(VF da)
			(LK kann)
			(MF ich ja mal)
			[01;36m(VXINF[00m
				(VC
					(VC anrufen)
					(KON und)
					(VC fragen))[01;36m)[00m
			(NF ob die ein programm haben fur theater))))
Step:Unary
{'subtrees': ['VC'], 'family': ['VF', 'LK', 'MF', 'VXINF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVINF', 'KON', 'VVINF'), 'right siblings': [(NF (SIMPX (C (KOUS ob)) (MF (NX (PDS die)) (NX (ART ein) (NN programm))) (VC (VXFIN (VAFIN haben))) (NF (PX (APPR fur) (NX (NN theater))))))], 'left siblings': [(VF (ADVX (ADV da))), (LK (VXFIN (VMFIN kann))), (MF (NX (PPER ich)) (ADVX (ADV ja)) (ADVX (ADV mal)))], 'auto preterminal span': (32, 35), 'span': (32, 35), 'parent': 'SIMPX', 'label': 'VXINF', 'classified_type': 'Unary', 'type': 'add'}
(TOP ja ich kann ja mal im reiseburo anrufen oder im wir mussen uns eh noch uberlegen wo wir schlafen wollen ob wir ein hotel nehmen oder pension da kann ich ja mal anrufen und fragen ob die ein programm haben fur theater)

Sentence 652:
17 Initial errors
0 on fringe, 13 iterations
3 Error:Clause Attachment
2 Error:Clause Attachment
2 Error:UNSET move
1 Error:Unary
1 Error:UNSET add
1 Error:Unary
1 Error:Unary
1 Error:UNSET remove
1 Error:Single Word Phrase
1 Error:Co-ordination
1 Error:UNSET remove
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(LK meinen)
				(MF sie)[01;36m)[00m
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					(VF die)
					(LK wissen)
					(MF das bei der bahn)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		[01;36m(SIMPX[00m
			[01;36m(NF[00m
				[01;36m(NF[00m
					(SIMPX
						(C wenn)
						(MF ich da))[01;36m)[00m
				[01;31m(SIMPX[00m
					[01;31m(KOORD[00m
						(KON oder)[01;31m)[00m
					[01;36m(SIMPX[00m
						(VF ich)
						(LK gehe)
						(MF ins reiseburo)[01;36m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m
		(SIMPX und da kann ich ja auch bahntickets kaufen)
		(SIMPX und dann frage ich da gleich wegen der hotelbuchung)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(C das)
				(MF die mir da)[01;31m)[00m
			[01;36m(NF[00m
				(SIMPX
					(C das)
					[01;31m(FKOORD[00m
						[01;31m(MVCN[00m
							(MF die da)
							(VC anrufen)
							[01;31m(NF[00m
								(ADVX
									(ADV vielleicht))[01;31m)[00m[01;31m)[00m
						(KON und)
						(MVCN
							[01;31m(MF[00m
								(NX
									(ADJX zwei)
									(NN zimmer))[01;31m)[00m
							(VC reservieren)
							(NF fur eine termine))[01;31m)[00m)[01;36m)[00m[01;36m)[00m))
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['SIMPX', 'KOORD', 'VF', 'LK', 'MF'], 'mover info': [('SIMPX', (8, 11))], 'old_family': ['SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'start left siblings': ['SIMPX'], 'auto preterminals': ('VVFIN', 'PPER', 'PDS', 'VVFIN', 'PDS', 'APPR', 'ART', 'NN', 'KOUS', 'PPER', 'ADV', 'KON', 'PPER', 'VVFIN', 'APPRART', 'NN', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'NN', 'VVINF', 'KON', 'ADV', 'VVFIN', 'PPER', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'KOUS', 'PDS', 'PPER', 'ADV', 'KOUS', 'PDS', 'ADV', 'VVFIN', 'ADV', 'KON', 'CARD', 'NN', 'VVFIN', 'APPR', 'ART', 'NN'), 'start right siblings': ['SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'end left siblings': [], 'auto preterminal span': (0, 49), 'adding node already present': False, 'movers': ['SIMPX'], 'old_parent': 'TURN', 'added and moved': True, 'end right siblings': ['KOORD', 'VF', 'LK', 'MF'], 'classified_type': 'Clause Attachment', 'type': 'move', 'added label': 'NF'}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(LK meinen)
				(MF sie)[01;36m)[00m
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					(VF die)
					(LK wissen)
					(MF das bei der bahn)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(NF
			(SIMPX
				[01;36m(NF[00m
					(SIMPX
						(C wenn)
						(MF ich da))[01;36m)[00m
				[01;31m(KOORD[00m
					(KON oder)[01;31m)[00m
				[01;36m(SIMPX[00m
					(VF ich)
					(LK gehe)
					(MF ins reiseburo)[01;36m)[00m))
		(SIMPX und da kann ich ja auch bahntickets kaufen)
		(SIMPX und dann frage ich da gleich wegen der hotelbuchung)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(C das)
				(MF die mir da)[01;31m)[00m
			[01;36m(NF[00m
				(SIMPX
					(C das)
					[01;31m(FKOORD[00m
						[01;31m(MVCN[00m
							(MF die da)
							(VC anrufen)
							[01;31m(NF[00m
								(ADVX
									(ADV vielleicht))[01;31m)[00m[01;31m)[00m
						(KON und)
						(MVCN
							[01;31m(MF[00m
								(NX
									(ADJX zwei)
									(NN zimmer))[01;31m)[00m
							(VC reservieren)
							(NF fur eine termine))[01;31m)[00m)[01;36m)[00m[01;36m)[00m))
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['C', 'MF', 'SIMPX'], 'mover info': [('SIMPX', (37, 49))], 'old_family': ['SIMPX', 'NF', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'start left siblings': ['SIMPX', 'NF', 'SIMPX', 'SIMPX', 'SIMPX'], 'auto preterminals': ('VVFIN', 'PPER', 'PDS', 'VVFIN', 'PDS', 'APPR', 'ART', 'NN', 'KOUS', 'PPER', 'ADV', 'KON', 'PPER', 'VVFIN', 'APPRART', 'NN', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'NN', 'VVINF', 'KON', 'ADV', 'VVFIN', 'PPER', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'KOUS', 'PDS', 'PPER', 'ADV', 'KOUS', 'PDS', 'ADV', 'VVFIN', 'ADV', 'KON', 'CARD', 'NN', 'VVFIN', 'APPR', 'ART', 'NN'), 'start right siblings': [], 'end left siblings': ['C', 'MF'], 'auto preterminal span': (0, 49), 'movers': ['SIMPX'], 'old_parent': 'TURN', 'end right siblings': [], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;31m(SIMPX[00m
			[01;36m(SIMPX[00m
				(LK meinen)
				(MF sie)[01;36m)[00m
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					(VF die)
					(LK wissen)
					(MF das bei der bahn)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(NF
			(SIMPX
				[01;36m(NF[00m
					(SIMPX
						(C wenn)
						(MF ich da))[01;36m)[00m
				[01;31m(KOORD[00m
					(KON oder)[01;31m)[00m
				[01;36m(SIMPX[00m
					(VF ich)
					(LK gehe)
					(MF ins reiseburo)[01;36m)[00m))
		(SIMPX und da kann ich ja auch bahntickets kaufen)
		(SIMPX und dann frage ich da gleich wegen der hotelbuchung)
		(SIMPX
			(C das)
			(MF die mir da)
			[01;36m(NF[00m
				(SIMPX
					(C das)
					[01;31m(FKOORD[00m
						[01;31m(MVCN[00m
							(MF die da)
							(VC anrufen)
							[01;31m(NF[00m
								(ADVX
									(ADV vielleicht))[01;31m)[00m[01;31m)[00m
						(KON und)
						(MVCN
							[01;31m(MF[00m
								(NX
									(ADJX zwei)
									(NN zimmer))[01;31m)[00m
							(VC reservieren)
							(NF fur eine termine))[01;31m)[00m)[01;36m)[00m)))
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['SIMPX', 'NF', 'NF', 'SIMPX', 'SIMPX', 'SIMPX'], 'mover info': [('NF', (2, 8))], 'old_family': ['LK', 'MF', 'NF'], 'start left siblings': ['LK', 'MF'], 'auto preterminals': ('VVFIN', 'PPER', 'PDS', 'VVFIN', 'PDS', 'APPR', 'ART', 'NN', 'KOUS', 'PPER', 'ADV', 'KON', 'PPER', 'VVFIN', 'APPRART', 'NN', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'NN', 'VVINF', 'KON', 'ADV', 'VVFIN', 'PPER', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'KOUS', 'PDS', 'PPER', 'ADV', 'KOUS', 'PDS', 'ADV', 'VVFIN', 'ADV', 'KON', 'CARD', 'NN', 'VVFIN', 'APPR', 'ART', 'NN'), 'start right siblings': [], 'end left siblings': ['SIMPX'], 'auto preterminal span': (0, 49), 'movers': ['NF'], 'old_parent': 'SIMPX', 'end right siblings': ['NF', 'SIMPX', 'SIMPX', 'SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SIMPX meinen sie)
		[01;31m(NF[00m
			[01;31m(SIMPX[00m
				(VF die)
				(LK wissen)
				(MF das bei der bahn)[01;31m)[00m[01;31m)[00m
		(NF
			(SIMPX
				[01;36m(NF[00m
					(SIMPX
						(C wenn)
						(MF ich da))[01;36m)[00m
				[01;31m(KOORD[00m
					(KON oder)[01;31m)[00m
				[01;36m(SIMPX[00m
					(VF ich)
					(LK gehe)
					(MF ins reiseburo)[01;36m)[00m))
		(SIMPX und da kann ich ja auch bahntickets kaufen)
		(SIMPX und dann frage ich da gleich wegen der hotelbuchung)
		(SIMPX
			(C das)
			(MF die mir da)
			[01;36m(NF[00m
				(SIMPX
					(C das)
					[01;31m(FKOORD[00m
						[01;31m(MVCN[00m
							(MF die da)
							(VC anrufen)
							[01;31m(NF[00m
								(ADVX
									(ADV vielleicht))[01;31m)[00m[01;31m)[00m
						(KON und)
						(MVCN
							[01;31m(MF[00m
								(NX
									(ADJX zwei)
									(NN zimmer))[01;31m)[00m
							(VC reservieren)
							(NF fur eine termine))[01;31m)[00m)[01;36m)[00m)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['NF', 'KOORD', 'VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ADV'), 'right siblings': [(KOORD (KON oder)), (VF (NX (PPER ich))), (LK (VXFIN (VVFIN gehe))), (MF (PX (APPRART ins) (NX (NN reiseburo))))], 'left siblings': [], 'auto preterminal span': (8, 11), 'span': (8, 11), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SIMPX meinen sie)
		[01;31m(NF[00m
			[01;31m(SIMPX[00m
				(VF die)
				(LK wissen)
				(MF das bei der bahn)[01;31m)[00m[01;31m)[00m
		(NF
			(SIMPX
				(NF wenn ich da)
				[01;31m(KOORD[00m
					(KON oder)[01;31m)[00m
				[01;36m(SIMPX[00m
					(VF ich)
					(LK gehe)
					(MF ins reiseburo)[01;36m)[00m))
		(SIMPX und da kann ich ja auch bahntickets kaufen)
		(SIMPX und dann frage ich da gleich wegen der hotelbuchung)
		(SIMPX
			(C das)
			(MF die mir da)
			[01;36m(NF[00m
				(SIMPX
					(C das)
					[01;31m(FKOORD[00m
						[01;31m(MVCN[00m
							(MF die da)
							(VC anrufen)
							[01;31m(NF[00m
								(ADVX
									(ADV vielleicht))[01;31m)[00m[01;31m)[00m
						(KON und)
						(MVCN
							[01;31m(MF[00m
								(NX
									(ADJX zwei)
									(NN zimmer))[01;31m)[00m
							(VC reservieren)
							(NF fur eine termine))[01;31m)[00m)[01;36m)[00m)))
Step:UNSET add
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['NF', 'KOORD', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'APPRART', 'NN'), 'right siblings': [], 'left siblings': [(NF (SIMPX (C (KOUS wenn)) (MF (NX (PPER ich)) (ADVX (ADV da))))), (KOORD (KON oder))], 'auto preterminal span': (12, 16), 'span': (12, 16), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SIMPX meinen sie)
		[01;31m(NF[00m
			[01;31m(SIMPX[00m
				(VF die)
				(LK wissen)
				(MF das bei der bahn)[01;31m)[00m[01;31m)[00m
		(NF
			(SIMPX
				(NF wenn ich da)
				[01;31m(KOORD[00m
					(KON oder)[01;31m)[00m
				(SIMPX ich gehe ins reiseburo)))
		(SIMPX und da kann ich ja auch bahntickets kaufen)
		(SIMPX und dann frage ich da gleich wegen der hotelbuchung)
		(SIMPX
			(C das)
			(MF die mir da)
			[01;36m(NF[00m
				(SIMPX
					(C das)
					[01;31m(FKOORD[00m
						[01;31m(MVCN[00m
							(MF die da)
							(VC anrufen)
							[01;31m(NF[00m
								(ADVX
									(ADV vielleicht))[01;31m)[00m[01;31m)[00m
						(KON und)
						(MVCN
							[01;31m(MF[00m
								(NX
									(ADJX zwei)
									(NN zimmer))[01;31m)[00m
							(VC reservieren)
							(NF fur eine termine))[01;31m)[00m)[01;36m)[00m)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['C', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PDS', 'ADV', 'VVFIN', 'ADV', 'KON', 'CARD', 'NN', 'VVFIN', 'APPR', 'ART', 'NN'), 'right siblings': [], 'left siblings': [(C (KOUS das)), (MF (NX (PDS die)) (NX (PPER mir)) (ADVX (ADV da)))], 'auto preterminal span': (37, 49), 'span': (37, 49), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SIMPX meinen sie)
		[01;31m(NF[00m
			[01;31m(SIMPX[00m
				(VF die)
				(LK wissen)
				(MF das bei der bahn)[01;31m)[00m[01;31m)[00m
		(NF
			(SIMPX
				(NF wenn ich da)
				[01;31m(KOORD[00m
					(KON oder)[01;31m)[00m
				(SIMPX ich gehe ins reiseburo)))
		(SIMPX und da kann ich ja auch bahntickets kaufen)
		(SIMPX und dann frage ich da gleich wegen der hotelbuchung)
		(SIMPX
			(C das)
			(MF die mir da)
			(NF
				(SIMPX
					(C das)
					[01;31m(FKOORD[00m
						[01;31m(MVCN[00m
							(MF die da)
							(VC anrufen)
							[01;31m(NF[00m
								(ADVX
									(ADV vielleicht))[01;31m)[00m[01;31m)[00m
						(KON und)
						(MVCN
							[01;31m(MF[00m
								(NX
									(ADJX zwei)
									(NN zimmer))[01;31m)[00m
							(VC reservieren)
							(NF fur eine termine))[01;31m)[00m)))))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SIMPX', 'NF', 'NF', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'PDS', 'VVFIN', 'PDS', 'APPR', 'ART', 'NN', 'KOUS', 'PPER', 'ADV', 'KON', 'PPER', 'VVFIN', 'APPRART', 'NN', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'NN', 'VVINF', 'KON', 'ADV', 'VVFIN', 'PPER', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'KOUS', 'PDS', 'PPER', 'ADV', 'KOUS', 'PDS', 'ADV', 'VVFIN', 'ADV', 'KON', 'CARD', 'NN', 'VVFIN', 'APPR', 'ART', 'NN'), 'right siblings': ['NF', 'SIMPX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 49), 'span': (2, 8), 'left siblings': ['SIMPX'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX meinen sie)
		[01;31m(SIMPX[00m
			(VF die)
			(LK wissen)
			(MF das bei der bahn)[01;31m)[00m
		(NF
			(SIMPX
				(NF wenn ich da)
				[01;31m(KOORD[00m
					(KON oder)[01;31m)[00m
				(SIMPX ich gehe ins reiseburo)))
		(SIMPX und da kann ich ja auch bahntickets kaufen)
		(SIMPX und dann frage ich da gleich wegen der hotelbuchung)
		(SIMPX
			(C das)
			(MF die mir da)
			(NF
				(SIMPX
					(C das)
					[01;31m(FKOORD[00m
						[01;31m(MVCN[00m
							(MF die da)
							(VC anrufen)
							[01;31m(NF[00m
								(ADVX
									(ADV vielleicht))[01;31m)[00m[01;31m)[00m
						(KON und)
						(MVCN
							[01;31m(MF[00m
								(NX
									(ADJX zwei)
									(NN zimmer))[01;31m)[00m
							(VC reservieren)
							(NF fur eine termine))[01;31m)[00m)))))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['SIMPX', 'SIMPX', 'NF', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VVFIN', 'PPER', 'PDS', 'VVFIN', 'PDS', 'APPR', 'ART', 'NN', 'KOUS', 'PPER', 'ADV', 'KON', 'PPER', 'VVFIN', 'APPRART', 'NN', 'KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'NN', 'VVINF', 'KON', 'ADV', 'VVFIN', 'PPER', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'KOUS', 'PDS', 'PPER', 'ADV', 'KOUS', 'PDS', 'ADV', 'VVFIN', 'ADV', 'KON', 'CARD', 'NN', 'VVFIN', 'APPR', 'ART', 'NN'), 'right siblings': ['NF', 'SIMPX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 49), 'span': (2, 8), 'left siblings': ['SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX meinen sie)
		(VF die)
		(LK wissen)
		(MF das bei der bahn)
		(NF
			(SIMPX
				(NF wenn ich da)
				[01;31m(KOORD[00m
					(KON oder)[01;31m)[00m
				(SIMPX ich gehe ins reiseburo)))
		(SIMPX und da kann ich ja auch bahntickets kaufen)
		(SIMPX und dann frage ich da gleich wegen der hotelbuchung)
		(SIMPX
			(C das)
			(MF die mir da)
			(NF
				(SIMPX
					(C das)
					[01;31m(FKOORD[00m
						[01;31m(MVCN[00m
							(MF die da)
							(VC anrufen)
							[01;31m(NF[00m
								(ADVX
									(ADV vielleicht))[01;31m)[00m[01;31m)[00m
						(KON und)
						(MVCN
							[01;31m(MF[00m
								(NX
									(ADJX zwei)
									(NN zimmer))[01;31m)[00m
							(VC reservieren)
							(NF fur eine termine))[01;31m)[00m)))))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['NF', 'KOORD', 'SIMPX'], 'over_word': True, 'over words': True, 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'KON', 'PPER', 'VVFIN', 'APPRART', 'NN'), 'right siblings': ['SIMPX'], 'parent': 'SIMPX', 'auto preterminal span': (8, 16), 'span': (11, 12), 'left siblings': ['NF'], 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX meinen sie)
		(VF die)
		(LK wissen)
		(MF das bei der bahn)
		(NF wenn ich da oder ich gehe ins reiseburo)
		(SIMPX und da kann ich ja auch bahntickets kaufen)
		(SIMPX und dann frage ich da gleich wegen der hotelbuchung)
		(SIMPX
			(C das)
			(MF die mir da)
			(NF
				(SIMPX
					(C das)
					[01;31m(FKOORD[00m
						[01;31m(MVCN[00m
							(MF die da)
							(VC anrufen)
							[01;31m(NF[00m
								(ADVX
									(ADV vielleicht))[01;31m)[00m[01;31m)[00m
						(KON und)
						(MVCN
							[01;31m(MF[00m
								(NX
									(ADJX zwei)
									(NN zimmer))[01;31m)[00m
							(VC reservieren)
							(NF fur eine termine))[01;31m)[00m)))))
Step:Co-ordination
{'subtrees': ['MF', 'VC', 'NF'], 'family': ['MVCN', 'KON', 'MVCN'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'ADV', 'VVFIN', 'ADV', 'KON', 'CARD', 'NN', 'VVFIN', 'APPR', 'ART', 'NN'), 'right siblings': ['KON', 'MVCN'], 'parent': 'FKOORD', 'auto preterminal span': (38, 49), 'span': (38, 42), 'left siblings': [], 'label': 'MVCN', 'classified_type': 'Co-ordination', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX meinen sie)
		(VF die)
		(LK wissen)
		(MF das bei der bahn)
		(NF wenn ich da oder ich gehe ins reiseburo)
		(SIMPX und da kann ich ja auch bahntickets kaufen)
		(SIMPX und dann frage ich da gleich wegen der hotelbuchung)
		(SIMPX
			(C das)
			(MF die mir da)
			(NF
				(SIMPX
					(C das)
					[01;31m(FKOORD[00m
						(MF die da)
						(VC anrufen)
						[01;31m(NF[00m
							(ADVX
								(ADV vielleicht))[01;31m)[00m
						(KON und)
						(MVCN
							[01;31m(MF[00m
								(NX
									(ADJX zwei)
									(NN zimmer))[01;31m)[00m
							(VC reservieren)
							(NF fur eine termine))[01;31m)[00m)))))
Step:UNSET remove
{'subtrees': ['MF', 'VC', 'NF', 'KON', 'MVCN'], 'family': ['C', 'FKOORD'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PDS', 'ADV', 'VVFIN', 'ADV', 'KON', 'CARD', 'NN', 'VVFIN', 'APPR', 'ART', 'NN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (37, 49), 'span': (38, 49), 'left siblings': ['C'], 'label': 'FKOORD', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX meinen sie)
		(VF die)
		(LK wissen)
		(MF das bei der bahn)
		(NF wenn ich da oder ich gehe ins reiseburo)
		(SIMPX und da kann ich ja auch bahntickets kaufen)
		(SIMPX und dann frage ich da gleich wegen der hotelbuchung)
		(SIMPX
			(C das)
			(MF die mir da)
			(NF
				(SIMPX
					(C das)
					(MF die da)
					(VC anrufen)
					[01;31m(NF[00m
						(ADVX
							(ADV vielleicht))[01;31m)[00m
					(KON und)
					(MVCN
						[01;31m(MF[00m
							(NX
								(ADJX zwei)
								(NN zimmer))[01;31m)[00m
						(VC reservieren)
						(NF fur eine termine)))))))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['C', 'MF', 'VC', 'NF', 'KON', 'MVCN'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PDS', 'ADV', 'VVFIN', 'ADV', 'KON', 'CARD', 'NN', 'VVFIN', 'APPR', 'ART', 'NN'), 'right siblings': ['KON', 'MVCN'], 'parent': 'SIMPX', 'auto preterminal span': (37, 49), 'span': (41, 42), 'left siblings': ['C', 'MF', 'VC'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX meinen sie)
		(VF die)
		(LK wissen)
		(MF das bei der bahn)
		(NF wenn ich da oder ich gehe ins reiseburo)
		(SIMPX und da kann ich ja auch bahntickets kaufen)
		(SIMPX und dann frage ich da gleich wegen der hotelbuchung)
		(SIMPX
			(C das)
			(MF die mir da)
			(NF
				(SIMPX
					(C das)
					(MF die da)
					(VC anrufen)
					(ADVX vielleicht)
					(KON und)
					(MVCN
						[01;31m(MF[00m
							(NX
								(ADJX zwei)
								(NN zimmer))[01;31m)[00m
						(VC reservieren)
						(NF fur eine termine)))))))
Step:Unary
{'subtrees': ['NX'], 'family': ['MF', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD', 'NN', 'VVFIN', 'APPR', 'ART', 'NN'), 'right siblings': ['VC', 'NF'], 'parent': 'MVCN', 'auto preterminal span': (43, 49), 'span': (43, 45), 'left siblings': [], 'label': 'MF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP meinen sie die wissen das bei der bahn wenn ich da oder ich gehe ins reiseburo und da kann ich ja auch bahntickets kaufen und dann frage ich da gleich wegen der hotelbuchung das die mir da das die da anrufen vielleicht und zwei zimmer reservieren fur eine termine)

Sentence 653:
2 Initial errors
0 on fringe, 1 iterations
2 Error:NP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX sollen wir so verbleiben)
		(SIMPX
			(VF da)
			(LK rufe)
			(MF
				(NX ich)
				(NX sie)
				[01;31m(ADVX[00m
					(NX ein paar tage)
					[01;36m(ADVX[00m
						(ADV vorher)[01;36m)[00m[01;31m)[00m
				(ADVX noch)
				(ADVX mal))
			(VC an))
		(SIMPX ansonsten sehen wir uns ja vielleicht im in der firma)))
Step:NP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'NX', 'NX', 'ADVX', 'ADVX', 'ADVX'], 'mover info': [('NX', (8, 11))], 'old_family': ['NX', 'ADV'], 'start left siblings': [], 'auto preterminals': ('PPER', 'PPER', 'ART', 'PIDAT', 'NN', 'ADV', 'ADV', 'ADV'), 'start right siblings': ['ADV'], 'end left siblings': ['NX', 'NX'], 'auto preterminal span': (6, 14), 'movers': ['NX'], 'old_parent': 'ADVX', 'end right siblings': ['ADVX', 'ADVX', 'ADVX'], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP sollen wir so verbleiben da rufe ich sie ein paar tage vorher noch mal an ansonsten sehen wir uns ja vielleicht im in der firma)

Sentence 654:
7 Initial errors
0 on fringe, 5 iterations
2 Error:Single Word Phrase
2 Error:PP Attachment
1 Error:UNSET add
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX das heist wir konnten jede stunde fahren)
		(SIMPX ich weis gar nicht ob wir da unbedingt reservieren sollen)
		(SIMPX
			(VF das)
			(LK konnen)
			(MF
				(NX wir)
				(NX uns)
				(ADVX dann)
				[01;31m(PX[00m
					(ADVX ganz)
					(APPR nach)
					(NX lust und laune)[01;31m)[00m))
		(SIMPX vielleicht haben wir noch lust irgendwie vormittags zu bummeln)
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK konnen)
			[01;31m(MF[00m
				(NX wir)
				[01;36m(PX[00m
					(PX ganz nach lust und laune)
					[01;36m(VXFIN[00m [01;36m(LK[00m [01;31m(ADJX[00m
						(ADJD stundlich)[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;36m)[00m
				[01;36m(MF[00m
					(NX uns)
					(NX einen zug)[01;36m)[00m[01;31m)[00m
			(VC aussuchen)
			(NF fur die ruckfahrt))))
Step:Single Word Phrase
{'family': ['NX', 'PX', 'LK', 'NX', 'NX'], 'auto preterminal span': (45, 46), 'span': (45, 46), 'subtrees': ['ADJD'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('ADJD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'LK')}
(TOP
	(TURN
		(SIMPX das heist wir konnten jede stunde fahren)
		(SIMPX ich weis gar nicht ob wir da unbedingt reservieren sollen)
		(SIMPX
			(VF das)
			(LK konnen)
			(MF
				(NX wir)
				(NX uns)
				(ADVX dann)
				[01;31m(PX[00m
					(ADVX ganz)
					(APPR nach)
					(NX lust und laune)[01;31m)[00m))
		(SIMPX vielleicht haben wir noch lust irgendwie vormittags zu bummeln)
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK konnen)
			[01;31m(MF[00m
				(NX wir)
				[01;36m(PX[00m
					(PX ganz nach lust und laune)
					[01;36m(VXFIN[00m
						(LK
							(ADJD stundlich))[01;36m)[00m[01;36m)[00m
				[01;36m(MF[00m
					(NX uns)
					(NX einen zug)[01;36m)[00m[01;31m)[00m
			(VC aussuchen)
			(NF fur die ruckfahrt))))
Step:PP Attachment
{'new_parent': 'SIMPX', 'new_family': ['KOORD', 'VF', 'LK', 'NX', 'PX', 'LK', 'MF', 'VC', 'NF'], 'mover info': [('NX', (39, 40)), ('PX', (40, 45)), ('LK', (45, 46))], 'old_family': ['NX', 'PX', 'LK', 'NX', 'NX'], 'start left siblings': [], 'auto preterminals': ('KON', 'ADV', 'VMFIN', 'PPER', 'ADV', 'APPR', 'NN', 'KON', 'NN', 'ADJD', 'PRF', 'ART', 'NN', 'VVINF', 'APPR', 'ART', 'NN'), 'start right siblings': ['NX', 'NX'], 'end left siblings': ['KOORD', 'VF', 'LK'], 'auto preterminal span': (36, 53), 'movers': ['NX', 'PX', 'LK'], 'old_parent': 'MF', 'end right siblings': ['MF', 'VC', 'NF'], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		(SIMPX das heist wir konnten jede stunde fahren)
		(SIMPX ich weis gar nicht ob wir da unbedingt reservieren sollen)
		(SIMPX
			(VF das)
			(LK konnen)
			(MF
				(NX wir)
				(NX uns)
				(ADVX dann)
				[01;31m(PX[00m
					(ADVX ganz)
					(APPR nach)
					(NX lust und laune)[01;31m)[00m))
		(SIMPX vielleicht haben wir noch lust irgendwie vormittags zu bummeln)
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK konnen)
			(NX wir)
			[01;36m(PX[00m
				(PX ganz nach lust und laune)
				[01;36m(VXFIN[00m
					(LK
						(ADJD stundlich))[01;36m)[00m[01;36m)[00m
			(MF uns einen zug)
			(VC aussuchen)
			(NF fur die ruckfahrt))))
Step:UNSET add
{'subtrees': ['PX', 'LK'], 'family': ['KOORD', 'VF', 'LK', 'NX', 'PX', 'MF', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'APPR', 'NN', 'KON', 'NN', 'ADJD'), 'right siblings': [(MF (NX (PRF uns)) (NX (ART einen) (NN zug))), (VC (VXINF (VVINF aussuchen))), (NF (PX (APPR fur) (NX (ART die) (NN ruckfahrt))))], 'left siblings': [(KOORD (KON und)), (VF (ADVX (ADV dann))), (LK (VXFIN (VMFIN konnen))), (NX (PPER wir))], 'auto preterminal span': (40, 46), 'span': (40, 46), 'parent': 'SIMPX', 'label': 'PX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SIMPX das heist wir konnten jede stunde fahren)
		(SIMPX ich weis gar nicht ob wir da unbedingt reservieren sollen)
		(SIMPX
			(VF das)
			(LK konnen)
			(MF
				(NX wir)
				(NX uns)
				(ADVX dann)
				[01;31m(PX[00m
					(ADVX ganz)
					(APPR nach)
					(NX lust und laune)[01;31m)[00m))
		(SIMPX vielleicht haben wir noch lust irgendwie vormittags zu bummeln)
		(SIMPX
			(KOORD und)
			(VF dann)
			(LK konnen)
			(NX wir)
			(PX
				(PX ganz nach lust und laune)
				[01;36m(VXFIN[00m
					(LK
						(ADJD stundlich))[01;36m)[00m)
			(MF uns einen zug)
			(VC aussuchen)
			(NF fur die ruckfahrt))))
Step:Unary
{'subtrees': ['LK'], 'family': ['PX', 'VXFIN'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJD',), 'right siblings': [], 'left siblings': [(PX (ADVX (ADV ganz)) (APPR nach) (NX (NX (NN lust)) (KON und) (NX (NN laune))))], 'auto preterminal span': (45, 46), 'span': (45, 46), 'parent': 'PX', 'label': 'VXFIN', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SIMPX das heist wir konnten jede stunde fahren)
		(SIMPX ich weis gar nicht ob wir da unbedingt reservieren sollen)
		(SIMPX
			(VF das)
			(LK konnen)
			(MF
				(NX wir)
				(NX uns)
				(ADVX dann)
				[01;31m(PX[00m
					(ADVX ganz)
					(APPR nach)
					(NX lust und laune)[01;31m)[00m))
		(SIMPX vielleicht haben wir noch lust irgendwie vormittags zu bummeln)
		(SIMPX und dann konnen wir ganz nach lust und laune stundlich uns einen zug aussuchen fur die ruckfahrt)))
Step:UNSET remove
{'subtrees': ['ADVX', 'APPR', 'NX'], 'family': ['NX', 'NX', 'ADVX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'PRF', 'ADV', 'ADV', 'APPR', 'NN', 'KON', 'NN'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (19, 27), 'span': (22, 27), 'left siblings': ['NX', 'NX', 'ADVX'], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP das heist wir konnten jede stunde fahren ich weis gar nicht ob wir da unbedingt reservieren sollen das konnen wir uns dann ganz nach lust und laune vielleicht haben wir noch lust irgendwie vormittags zu bummeln und dann konnen wir ganz nach lust und laune stundlich uns einen zug aussuchen fur die ruckfahrt)

Sentence 655:
0 Initial errors
0 on fringe, 0 iterations

Sentence 656:
5 Initial errors
0 on fringe, 4 iterations
2 Error:Single Word Phrase
1 Error:UNSET add
1 Error:Unary
1 Error:NP Internal Structure
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		[01;31m(DM[00m
			(ADVX
				(ADV so))[01;31m)[00m
		(DM guten tag)
		(SIMPX
			(VF hier)
			(LK ist)
			(MF
				(NX
					[01;36m(NX[00m
						(ART das)
						[01;36m(NX[00m [01;31m(ADJX[00m
							(ADJA stadtische)[01;31m)[00m[01;36m)[00m[01;36m)[00m
					[01;31m(NX[00m
						(NX reiseburo)
						(NX bonn)[01;31m)[00m)))
		(DM bergmann apparat)
		(SIMPX wie kann ich ihnen helfen)))
Step:Single Word Phrase
{'family': ['ART', 'NX', 'NX'], 'auto preterminal span': (7, 8), 'span': (7, 8), 'subtrees': ['ADJA'], 'parent': 'NX', 'over_word': True, 'auto preterminals': ('ADJA',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'NX')}
(TOP
	(TURN
		(DM ja)
		[01;31m(DM[00m
			(ADVX
				(ADV so))[01;31m)[00m
		(DM guten tag)
		(SIMPX
			(VF hier)
			(LK ist)
			(MF
				(NX
					[01;36m(NX[00m
						(ART das)
						(NX stadtische)[01;36m)[00m
					[01;31m(NX[00m
						(NX reiseburo)
						(NX bonn)[01;31m)[00m)))
		(DM bergmann apparat)
		(SIMPX wie kann ich ihnen helfen)))
Step:UNSET add
{'subtrees': ['ART', 'NX'], 'family': ['NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'ADJA'), 'right siblings': [(NX (NX (NN reiseburo)) (NX (NE bonn)))], 'left siblings': [], 'auto preterminal span': (6, 8), 'span': (6, 8), 'parent': 'NX', 'label': 'NX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		[01;31m(DM[00m
			(ADVX
				(ADV so))[01;31m)[00m
		(DM guten tag)
		(SIMPX
			(VF hier)
			(LK ist)
			(MF
				(NX
					(NX das stadtische)
					[01;31m(NX[00m
						(NX reiseburo)
						(NX bonn)[01;31m)[00m)))
		(DM bergmann apparat)
		(SIMPX wie kann ich ihnen helfen)))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['DM', 'DM', 'DM', 'SIMPX', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ADV', 'ADJA', 'NN', 'ADV', 'VAFIN', 'ART', 'ADJA', 'NN', 'NE', 'NE', 'NN', 'PWAV', 'VMFIN', 'PPER', 'PPER', 'VVINF'), 'right siblings': ['DM', 'SIMPX', 'DM', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 17), 'span': (1, 2), 'left siblings': ['DM'], 'label': 'DM', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(ADVX so)
		(DM guten tag)
		(SIMPX
			(VF hier)
			(LK ist)
			(MF
				(NX
					(NX das stadtische)
					[01;31m(NX[00m
						(NX reiseburo)
						(NX bonn)[01;31m)[00m)))
		(DM bergmann apparat)
		(SIMPX wie kann ich ihnen helfen)))
Step:NP Internal Structure
{'subtrees': ['NX', 'NX'], 'family': ['NX', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'ADJA', 'NN', 'NE'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (6, 10), 'span': (8, 10), 'left siblings': ['NX'], 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'remove'}
(TOP ja so guten tag hier ist das stadtische reiseburo bonn bergmann apparat wie kann ich ihnen helfen)

Sentence 657:
11 Initial errors
0 on fringe, 8 iterations
3 Error:Clause Attachment
2 Error:Modifier Attachment
1 Error:UNSET add
1 Error:Unary
1 Error:Unary
1 Error:Clause Attachment
1 Error:PP Attachment
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM selbstverstandlich)
		(SIMPX
			(VF ich)
			(LK mus)
			(MF nur dazu)
			(VC sagen)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					(C das)
					[01;31m(MF[00m
						[01;36m(MF[00m
							(NX das)
							(PX von kolnbonn)[01;36m)[00m
						[01;33m(SIMPX[00m (SIMPX wenn sie von kolnbonn fliegen wollen)
						[01;31m(ADVX[00m
							[01;31m(ADVX[00m
								(ADVX nur)
								[01;36m(ADVX[00m
									(ADV einmal)[01;36m)[00m[01;31m)[00m
							(PX am tag)[01;31m)[00m
						[01;33m(VXFIN (VC[00m (ADJX moglich)[01;31m)[00m
					(VC ist)[01;31m)[00m[01;31m)[00m) [01;33mVC) VXFIN) SIMPX)[00m
		(DM und zwar)
		(PX
			(PX um sieben uhr zehn)
			(KON und)
			[01;31m(PX[00m
				(PX am wochenende)
				(ADVX leider)
				(ADVX gar nicht)[01;31m)[00m)))
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['C', 'MF', 'SIMPX', 'ADVX', 'ADJX', 'VC'], 'mover info': [('SIMPX', (11, 17)), ('ADVX', (17, 21)), ('ADJX', (21, 22))], 'old_family': ['NX', 'PX', 'SIMPX', 'ADVX', 'ADJX'], 'start left siblings': ['NX', 'PX'], 'auto preterminals': ('KOUS', 'PDS', 'APPR', 'NE', 'KOUS', 'PPER', 'APPR', 'NE', 'VVINF', 'VMFIN', 'ADV', 'ADV', 'APPRART', 'NN', 'ADJD', 'VAFIN'), 'start right siblings': [], 'end left siblings': ['C', 'MF'], 'auto preterminal span': (7, 23), 'adding node already present': False, 'movers': ['SIMPX', 'ADVX', 'ADJX'], 'old_parent': 'MF', 'added and moved': True, 'end right siblings': ['VC'], 'classified_type': 'Clause Attachment', 'type': 'move', 'added label': 'VC'}
(TOP
	(TURN
		(DM ja)
		(DM selbstverstandlich)
		(SIMPX
			(VF ich)
			(LK mus)
			(MF nur dazu)
			(VC sagen)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					(C das)
					(MF das von kolnbonn)
					(SIMPX
						(SIMPX wenn sie von kolnbonn fliegen wollen)
						[01;31m(ADVX[00m
							[01;31m(ADVX[00m
								(ADVX nur)
								[01;36m(ADVX[00m
									(ADV einmal)[01;36m)[00m[01;31m)[00m
							(PX am tag)[01;31m)[00m
						[01;36m(VC[00m
							[01;36m(VXFIN[00m
								(ADJX moglich)
								(VC ist)[01;36m)[00m[01;36m)[00m)[01;31m)[00m[01;31m)[00m)
		(DM und zwar)
		(PX
			(PX um sieben uhr zehn)
			(KON und)
			[01;31m(PX[00m
				(PX am wochenende)
				(ADVX leider)
				(ADVX gar nicht)[01;31m)[00m)))
Step:Modifier Attachment
{'new_parent': 'ADVX', 'new_family': ['ADVX', 'ADVX', 'PX'], 'mover info': [('ADVX', (17, 18))], 'old_family': ['ADVX', 'ADV'], 'start left siblings': [], 'auto preterminals': ('ADV', 'ADV', 'APPRART', 'NN'), 'start right siblings': ['ADV'], 'end left siblings': [], 'auto preterminal span': (17, 21), 'movers': ['ADVX'], 'old_parent': 'ADVX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['ADVX', 'PX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(DM selbstverstandlich)
		(SIMPX
			(VF ich)
			(LK mus)
			(MF nur dazu)
			(VC sagen)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					(C das)
					(MF das von kolnbonn)
					(SIMPX
						(SIMPX wenn sie von kolnbonn fliegen wollen)
						[01;31m(ADVX[00m
							(ADVX nur)
							(ADVX einmal)
							(PX am tag)[01;31m)[00m
						[01;36m(VC[00m
							[01;36m(VXFIN[00m
								(ADJX moglich)
								(VC ist)[01;36m)[00m[01;36m)[00m)[01;31m)[00m[01;31m)[00m)
		(DM und zwar)
		(PX
			(PX um sieben uhr zehn)
			(KON und)
			[01;31m(PX[00m
				(PX am wochenende)
				(ADVX leider)
				(ADVX gar nicht)[01;31m)[00m)))
Step:UNSET add
{'subtrees': ['ADJX', 'VC'], 'family': ['SIMPX', 'ADVX', 'VXFIN'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJD', 'VAFIN'), 'right siblings': [], 'left siblings': [(SIMPX (C (KOUS wenn)) (MF (NX (PPER sie)) (PX (APPR von) (NX (NE kolnbonn)))) (VC (VXINF (VVINF fliegen)) (VXFIN (VMFIN wollen)))), (ADVX (ADVX (ADV nur)) (ADVX (ADV einmal)) (PX (APPRART am) (NX (NN tag))))], 'auto preterminal span': (21, 23), 'span': (21, 23), 'parent': 'SIMPX', 'label': 'VXFIN', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM selbstverstandlich)
		(SIMPX
			(VF ich)
			(LK mus)
			(MF nur dazu)
			(VC sagen)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					(C das)
					(MF das von kolnbonn)
					(SIMPX
						(SIMPX wenn sie von kolnbonn fliegen wollen)
						[01;31m(ADVX[00m
							(ADVX nur)
							(ADVX einmal)
							(PX am tag)[01;31m)[00m
						[01;36m(VC[00m
							(VXFIN
								(ADJX moglich)
								(VC ist))[01;36m)[00m)[01;31m)[00m[01;31m)[00m)
		(DM und zwar)
		(PX
			(PX um sieben uhr zehn)
			(KON und)
			[01;31m(PX[00m
				(PX am wochenende)
				(ADVX leider)
				(ADVX gar nicht)[01;31m)[00m)))
Step:Unary
{'subtrees': ['VXFIN'], 'family': ['SIMPX', 'ADVX', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJD', 'VAFIN'), 'right siblings': [], 'left siblings': [(SIMPX (C (KOUS wenn)) (MF (NX (PPER sie)) (PX (APPR von) (NX (NE kolnbonn)))) (VC (VXINF (VVINF fliegen)) (VXFIN (VMFIN wollen)))), (ADVX (ADVX (ADV nur)) (ADVX (ADV einmal)) (PX (APPRART am) (NX (NN tag))))], 'auto preterminal span': (21, 23), 'span': (21, 23), 'parent': 'SIMPX', 'label': 'VC', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(DM selbstverstandlich)
		(SIMPX
			(VF ich)
			(LK mus)
			(MF nur dazu)
			(VC sagen)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					(C das)
					(MF das von kolnbonn)
					(SIMPX
						(SIMPX wenn sie von kolnbonn fliegen wollen)
						[01;31m(ADVX[00m
							(ADVX nur)
							(ADVX einmal)
							(PX am tag)[01;31m)[00m
						(VC moglich ist))[01;31m)[00m[01;31m)[00m)
		(DM und zwar)
		(PX
			(PX um sieben uhr zehn)
			(KON und)
			[01;31m(PX[00m
				(PX am wochenende)
				(ADVX leider)
				(ADVX gar nicht)[01;31m)[00m)))
Step:Unary
{'subtrees': ['C', 'MF', 'SIMPX'], 'family': ['SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PDS', 'APPR', 'NE', 'KOUS', 'PPER', 'APPR', 'NE', 'VVINF', 'VMFIN', 'ADV', 'ADV', 'APPRART', 'NN', 'ADJD', 'VAFIN'), 'right siblings': [], 'parent': 'NF', 'auto preterminal span': (7, 23), 'span': (7, 23), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM selbstverstandlich)
		(SIMPX
			(VF ich)
			(LK mus)
			(MF nur dazu)
			(VC sagen)
			[01;31m(NF[00m
				(C das)
				(MF das von kolnbonn)
				(SIMPX
					(SIMPX wenn sie von kolnbonn fliegen wollen)
					[01;31m(ADVX[00m
						(ADVX nur)
						(ADVX einmal)
						(PX am tag)[01;31m)[00m
					(VC moglich ist))[01;31m)[00m)
		(DM und zwar)
		(PX
			(PX um sieben uhr zehn)
			(KON und)
			[01;31m(PX[00m
				(PX am wochenende)
				(ADVX leider)
				(ADVX gar nicht)[01;31m)[00m)))
Step:Clause Attachment
{'subtrees': ['C', 'MF', 'SIMPX'], 'family': ['VF', 'LK', 'MF', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VMFIN', 'ADV', 'PROP', 'VVINF', 'KOUS', 'PDS', 'APPR', 'NE', 'KOUS', 'PPER', 'APPR', 'NE', 'VVINF', 'VMFIN', 'ADV', 'ADV', 'APPRART', 'NN', 'ADJD', 'VAFIN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (2, 23), 'span': (7, 23), 'left siblings': ['VF', 'LK', 'MF', 'VC'], 'label': 'NF', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM selbstverstandlich)
		(SIMPX
			(VF ich)
			(LK mus)
			(MF nur dazu)
			(VC sagen)
			(C das)
			(MF das von kolnbonn)
			(SIMPX
				(SIMPX wenn sie von kolnbonn fliegen wollen)
				[01;31m(ADVX[00m
					(ADVX nur)
					(ADVX einmal)
					(PX am tag)[01;31m)[00m
				(VC moglich ist)))
		(DM und zwar)
		(PX
			(PX um sieben uhr zehn)
			(KON und)
			[01;31m(PX[00m
				(PX am wochenende)
				(ADVX leider)
				(ADVX gar nicht)[01;31m)[00m)))
Step:PP Attachment
{'subtrees': ['ADVX', 'ADVX', 'PX'], 'family': ['SIMPX', 'ADVX', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'APPR', 'NE', 'VVINF', 'VMFIN', 'ADV', 'ADV', 'APPRART', 'NN', 'ADJD', 'VAFIN'), 'right siblings': ['VC'], 'parent': 'SIMPX', 'auto preterminal span': (11, 23), 'span': (17, 21), 'left siblings': ['SIMPX'], 'label': 'ADVX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(DM selbstverstandlich)
		(SIMPX ich mus nur dazu sagen das das von kolnbonn wenn sie von kolnbonn fliegen wollen nur einmal am tag moglich ist)
		(DM und zwar)
		(PX
			(PX um sieben uhr zehn)
			(KON und)
			[01;31m(PX[00m
				(PX am wochenende)
				(ADVX leider)
				(ADVX gar nicht)[01;31m)[00m)))
Step:Modifier Attachment
{'subtrees': ['PX', 'ADVX', 'ADVX'], 'family': ['PX', 'KON', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'CARD', 'NN', 'CARD', 'KON', 'APPRART', 'NN', 'ADV', 'ADV', 'PTKNEG'), 'right siblings': [], 'parent': 'PX', 'auto preterminal span': (25, 35), 'span': (30, 35), 'left siblings': ['PX', 'KON'], 'label': 'PX', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP ja selbstverstandlich ich mus nur dazu sagen das das von kolnbonn wenn sie von kolnbonn fliegen wollen nur einmal am tag moglich ist und zwar um sieben uhr zehn und am wochenende leider gar nicht)

Sentence 658:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM also)
		(SIMPX
			(VF eigentlich)
			(LK ist)
			(MF
				(ADVX da)
				(ADVX immer)
				[01;36m(ADJX[00m
					(NX relativ viel)
					(ADJX frei)[01;36m)[00m))
		(SIMPX ich konnte sie da mal vormerken)
		(SIMPX ich mus im computer gucken ob das geht)))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADJX'], 'family': ['ADVX', 'ADVX', 'ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'PIS', 'ADJD'), 'right siblings': [], 'left siblings': [(ADVX (ADV da)), (ADVX (ADV immer))], 'auto preterminal span': (6, 9), 'span': (6, 9), 'parent': 'MF', 'label': 'ADJX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP ja also eigentlich ist da immer relativ viel frei ich konnte sie da mal vormerken ich mus im computer gucken ob das geht)

Sentence 659:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Different label
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM also)
		(SIMPX es ist aber eigentlich immer moglich)
		(SIMPX
			[01;36m(ADVX[00m
				(VF
					[01;31m(ADJX[00m
						(ADVX so)
						(ADJD uberfullt)[01;31m)[00m)[01;36m)[00m
			(LK sind)
			(MF die fluge nicht))))
Step:Different label
{'family': ['ADVX'], 'auto preterminal span': (7, 9), 'span': (7, 9), 'subtrees': ['ADVX', 'ADJD'], 'parent': 'VF', 'over_word': False, 'auto preterminals': ('ADV', 'ADJD'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('ADJX', 'ADVX')}
(TOP also es ist aber eigentlich immer moglich so uberfullt sind die fluge nicht)

Sentence 660:
4 Initial errors
0 on fringe, 2 iterations
2 Error:Single Word Phrase
2 Error:NP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(NX
			[01;31m(NX[00m
				[01;36m(NX[00m [01;31m(ADJX[00m
					(ADJA siebten)[01;31m)[00m[01;36m)[00m
				[01;36m(NX[00m
					(NN siebten)[01;36m)[00m[01;31m)[00m
			(APPR bis)
			(PX zum zehnten juli))
		(DM ja)
		(SIMPX das kann ich machen)))
Step:Single Word Phrase
{'family': ['NX', 'NN'], 'auto preterminal span': (0, 1), 'span': (0, 1), 'subtrees': ['ADJA'], 'parent': 'NX', 'over_word': True, 'auto preterminals': ('ADJA',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'NX')}
(TOP
	(TURN
		(NX
			[01;31m(NX[00m
				(NX siebten)
				[01;36m(NX[00m
					(NN siebten)[01;36m)[00m[01;31m)[00m
			(APPR bis)
			(PX zum zehnten juli))
		(DM ja)
		(SIMPX das kann ich machen)))
Step:NP Attachment
{'new_parent': 'NX', 'new_family': ['NX', 'NX', 'APPR', 'PX'], 'mover info': [('NX', (0, 1))], 'old_family': ['NX', 'NN'], 'start left siblings': [], 'auto preterminals': ('ADJA', 'NN', 'APPR', 'APPRART', 'ADJA', 'NN'), 'start right siblings': ['NN'], 'end left siblings': [], 'auto preterminal span': (0, 6), 'movers': ['NX'], 'old_parent': 'NX', 'POS confusion': ('ADJA', 'ADJA'), 'end right siblings': ['NX', 'APPR', 'PX'], 'classified_type': 'NP Attachment', 'type': 'move'}
(TOP siebten siebten bis zum zehnten juli ja das kann ich machen)

Sentence 661:
5 Initial errors
0 on fringe, 5 iterations
1 Error:Single Word Phrase
1 Error:Unary
1 Error:Single Word Phrase
1 Error:Clause Attachment
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM tja)
		[01;31m(P[00m
			(SIMPX
				(VF da)
				(LK bin)
				(MF
					(NX ich)
					(ADVX gerade)
					(ADVX ja)
					(ADVX nicht)
					(ADJX
						(ADJX so gut)
						[01;36m(VXINF[00m
							[01;36m(VC[00m
								(ADJD informiert)[01;36m)[00m[01;36m)[00m)))
			[01;36m(KOORD[00m
				(KON aber)[01;36m)[00m
			[01;31m(SIMPX[00m
				(VF da)
				(LK wird)
				(MF es einen flug)
				(VC geben)[01;31m)[00m[01;31m)[00m
		(SIMPX und ich denke auch das der vielleicht abends ist)
		(SIMPX werde ich noch nachgucken)))
Step:Single Word Phrase
{'subtrees': ['ADJD'], 'family': ['ADJX', 'VC'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADJD',), 'right siblings': [], 'left siblings': [(ADJX (ADVX (ADV so)) (ADJD gut))], 'auto preterminal span': (9, 10), 'span': (9, 10), 'parent': 'ADJX', 'label': 'VC', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM tja)
		[01;31m(P[00m
			(SIMPX
				(VF da)
				(LK bin)
				(MF
					(NX ich)
					(ADVX gerade)
					(ADVX ja)
					(ADVX nicht)
					(ADJX
						(ADJX so gut)
						[01;36m(VXINF[00m
							(VC
								(ADJD informiert))[01;36m)[00m)))
			[01;36m(KOORD[00m
				(KON aber)[01;36m)[00m
			[01;31m(SIMPX[00m
				(VF da)
				(LK wird)
				(MF es einen flug)
				(VC geben)[01;31m)[00m[01;31m)[00m
		(SIMPX und ich denke auch das der vielleicht abends ist)
		(SIMPX werde ich noch nachgucken)))
Step:Unary
{'subtrees': ['VC'], 'family': ['ADJX', 'VXINF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADJD',), 'right siblings': [], 'left siblings': [(ADJX (ADVX (ADV so)) (ADJD gut))], 'auto preterminal span': (9, 10), 'span': (9, 10), 'parent': 'ADJX', 'label': 'VXINF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM tja)
		[01;31m(P[00m
			(SIMPX da bin ich gerade ja nicht so gut informiert)
			[01;36m(KOORD[00m
				(KON aber)[01;36m)[00m
			[01;31m(SIMPX[00m
				(VF da)
				(LK wird)
				(MF es einen flug)
				(VC geben)[01;31m)[00m[01;31m)[00m
		(SIMPX und ich denke auch das der vielleicht abends ist)
		(SIMPX werde ich noch nachgucken)))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['SIMPX', 'KOORD', 'SIMPX'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON',), 'right siblings': [(SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VAFIN wird))) (MF (NX (PPER es)) (NX (ART einen) (NN flug))) (VC (VXINF (VVINF geben))))], 'left siblings': [(SIMPX (VF (ADVX (ADV da))) (LK (VXFIN (VAFIN bin))) (MF (NX (PPER ich)) (ADVX (ADV gerade)) (ADVX (ADV ja)) (ADVX (PTKNEG nicht)) (ADJX (ADJX (ADVX (ADV so)) (ADJD gut)) (VXINF (VC (ADJD informiert))))))], 'auto preterminal span': (10, 11), 'span': (10, 11), 'parent': 'P', 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM tja)
		[01;31m(P[00m
			(SIMPX da bin ich gerade ja nicht so gut informiert)
			(KOORD aber)
			[01;31m(SIMPX[00m
				(VF da)
				(LK wird)
				(MF es einen flug)
				(VC geben)[01;31m)[00m[01;31m)[00m
		(SIMPX und ich denke auch das der vielleicht abends ist)
		(SIMPX werde ich noch nachgucken)))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'KOORD', 'SIMPX'], 'family': ['DM', 'P', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'VAFIN', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'ADV', 'ADJD', 'ADJD', 'KON', 'ADV', 'VAFIN', 'PPER', 'ART', 'NN', 'VVINF', 'KON', 'PPER', 'VVFIN', 'ADV', 'KOUS', 'PDS', 'ADV', 'ADV', 'VAFIN', 'VAFIN', 'PPER', 'ADV', 'VVINF'), 'right siblings': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 30), 'span': (1, 17), 'left siblings': ['DM'], 'label': 'P', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM tja)
		(SIMPX da bin ich gerade ja nicht so gut informiert)
		(KOORD aber)
		[01;31m(SIMPX[00m
			(VF da)
			(LK wird)
			(MF es einen flug)
			(VC geben)[01;31m)[00m
		(SIMPX und ich denke auch das der vielleicht abends ist)
		(SIMPX werde ich noch nachgucken)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['DM', 'SIMPX', 'KOORD', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ITJ', 'ADV', 'VAFIN', 'PPER', 'ADV', 'ADV', 'PTKNEG', 'ADV', 'ADJD', 'ADJD', 'KON', 'ADV', 'VAFIN', 'PPER', 'ART', 'NN', 'VVINF', 'KON', 'PPER', 'VVFIN', 'ADV', 'KOUS', 'PDS', 'ADV', 'ADV', 'VAFIN', 'VAFIN', 'PPER', 'ADV', 'VVINF'), 'right siblings': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 30), 'span': (11, 17), 'left siblings': ['DM', 'SIMPX', 'KOORD'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP tja da bin ich gerade ja nicht so gut informiert aber da wird es einen flug geben und ich denke auch das der vielleicht abends ist werde ich noch nachgucken)

Sentence 662:
10 Initial errors
0 on fringe, 6 iterations
2 Error:Different label
2 Error:Different label
2 Error:Single Word Phrase
2 Error:Modifier Attachment
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX mit dem zug ist es moglich)
		(SIMPX das ist)
		[01;31m(SIMPX[00m
			[01;36m(MF[00m [01;31m(VF[00m
				(ADJX
					(ADJD stundlich))[01;31m)[00m[01;36m)[00m
			(LK fahrt)
			(MF ein zug um achtundfunfzig)[01;31m)[00m
		[01;36m(NF[00m [01;36m(R[00m [01;31m(NX[00m
			[01;31m(NX[00m
				(NX die volle stunde)
				(ADVX immer)[01;31m)[00m
			[01;36m(VXFIN[00m [01;36m(VC[00m [01;31m(NX[00m
				(CARD achtundfunfzig)[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m
		(SIMPX der dauert dann drei stunden und zwanzig)
		(SIMPX man mus da aber bedenken das man in dortmund umsteigen muste)))
Step:Different label
{'family': ['MF', 'LK', 'MF'], 'auto preterminal span': (9, 10), 'span': (9, 10), 'subtrees': ['ADJX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('ADJD',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('VF', 'MF')}
(TOP
	(TURN
		(DM ja)
		(SIMPX mit dem zug ist es moglich)
		(SIMPX das ist)
		[01;31m(SIMPX[00m
			(MF stundlich)
			(LK fahrt)
			(MF ein zug um achtundfunfzig)[01;31m)[00m
		[01;36m(NF[00m [01;36m(R[00m [01;31m(NX[00m
			[01;31m(NX[00m
				(NX die volle stunde)
				(ADVX immer)[01;31m)[00m
			[01;36m(VXFIN[00m [01;36m(VC[00m [01;31m(NX[00m
				(CARD achtundfunfzig)[01;31m)[00m[01;36m)[00m[01;36m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m
		(SIMPX der dauert dann drei stunden und zwanzig)
		(SIMPX man mus da aber bedenken das man in dortmund umsteigen muste)))
Step:Different label
{'family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'R', 'SIMPX', 'SIMPX'], 'auto preterminal span': (15, 20), 'span': (15, 20), 'subtrees': ['NX', 'NX'], 'parent': 'TURN', 'over_word': False, 'auto preterminals': ('ART', 'ADJA', 'NN', 'ADV', 'CARD'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('NX', 'R')}
(TOP
	(TURN
		(DM ja)
		(SIMPX mit dem zug ist es moglich)
		(SIMPX das ist)
		[01;31m(SIMPX[00m
			(MF stundlich)
			(LK fahrt)
			(MF ein zug um achtundfunfzig)[01;31m)[00m
		[01;36m(NF[00m
			(R
				[01;31m(NX[00m
					(NX die volle stunde)
					(ADVX immer)[01;31m)[00m
				[01;36m(VXFIN[00m [01;36m(VC[00m [01;31m(NX[00m
					(CARD achtundfunfzig)[01;31m)[00m[01;36m)[00m[01;36m)[00m)[01;36m)[00m
		(SIMPX der dauert dann drei stunden und zwanzig)
		(SIMPX man mus da aber bedenken das man in dortmund umsteigen muste)))
Step:Single Word Phrase
{'family': ['NX', 'VC'], 'auto preterminal span': (19, 20), 'span': (19, 20), 'subtrees': ['CARD'], 'parent': 'R', 'over_word': True, 'auto preterminals': ('CARD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('NX', 'VC')}
(TOP
	(TURN
		(DM ja)
		(SIMPX mit dem zug ist es moglich)
		(SIMPX das ist)
		[01;31m(SIMPX[00m
			(MF stundlich)
			(LK fahrt)
			(MF ein zug um achtundfunfzig)[01;31m)[00m
		[01;36m(NF[00m
			(R
				[01;31m(NX[00m
					(NX die volle stunde)
					(ADVX immer)[01;31m)[00m
				[01;36m(VXFIN[00m
					(VC
						(CARD achtundfunfzig))[01;36m)[00m)[01;36m)[00m
		(SIMPX der dauert dann drei stunden und zwanzig)
		(SIMPX man mus da aber bedenken das man in dortmund umsteigen muste)))
Step:Modifier Attachment
{'new_parent': 'R', 'new_family': ['NX', 'ADVX', 'VC'], 'mover info': [('ADVX', (18, 19))], 'old_family': ['NX', 'ADVX'], 'start left siblings': ['NX'], 'auto preterminals': ('ART', 'ADJA', 'NN', 'ADV', 'CARD'), 'start right siblings': [], 'end left siblings': ['NX'], 'auto preterminal span': (15, 20), 'adding node already present': False, 'movers': ['ADVX'], 'old_parent': 'NX', 'POS confusion': ('ADV', 'ADV'), 'added and moved': True, 'end right siblings': ['VC'], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'VXFIN'}
(TOP
	(TURN
		(DM ja)
		(SIMPX mit dem zug ist es moglich)
		(SIMPX das ist)
		[01;31m(SIMPX[00m
			(MF stundlich)
			(LK fahrt)
			(MF ein zug um achtundfunfzig)[01;31m)[00m
		(NF
			(R
				(NX die volle stunde)
				(ADVX immer)
				[01;36m(VXFIN[00m
					(VC
						(CARD achtundfunfzig))[01;36m)[00m))
		(SIMPX der dauert dann drei stunden und zwanzig)
		(SIMPX man mus da aber bedenken das man in dortmund umsteigen muste)))
Step:Unary
{'subtrees': ['VC'], 'family': ['NX', 'ADVX', 'VXFIN'], 'over_word': False, 'over words': False, 'auto preterminals': ('CARD',), 'right siblings': [], 'left siblings': [(NX (ART die) (ADJX (ADJA volle)) (NN stunde)), (ADVX (ADV immer))], 'auto preterminal span': (19, 20), 'span': (19, 20), 'parent': 'R', 'label': 'VXFIN', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX mit dem zug ist es moglich)
		(SIMPX das ist)
		[01;31m(SIMPX[00m
			(MF stundlich)
			(LK fahrt)
			(MF ein zug um achtundfunfzig)[01;31m)[00m
		(NF die volle stunde immer achtundfunfzig)
		(SIMPX der dauert dann drei stunden und zwanzig)
		(SIMPX man mus da aber bedenken das man in dortmund umsteigen muste)))
Step:UNSET remove
{'subtrees': ['MF', 'LK', 'MF'], 'family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'NF', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'APPR', 'ART', 'NN', 'VAFIN', 'PPER', 'ADJD', 'PDS', 'VAFIN', 'ADJD', 'VVFIN', 'ART', 'NN', 'APPR', 'CARD', 'ART', 'ADJA', 'NN', 'ADV', 'CARD', 'PDS', 'VVFIN', 'ADV', 'CARD', 'NN', 'KON', 'CARD', 'PIS', 'VMFIN', 'ADV', 'ADV', 'VVINF', 'KOUS', 'PIS', 'APPR', 'NE', 'VVINF', 'VMFIN'), 'right siblings': ['NF', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 38), 'span': (9, 15), 'left siblings': ['DM', 'SIMPX', 'SIMPX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ja mit dem zug ist es moglich das ist stundlich fahrt ein zug um achtundfunfzig die volle stunde immer achtundfunfzig der dauert dann drei stunden und zwanzig man mus da aber bedenken das man in dortmund umsteigen muste)

Sentence 663:
0 Initial errors
0 on fringe, 0 iterations

Sentence 664:
8 Initial errors
0 on fringe, 6 iterations
2 Error:Different label
2 Error:PP Attachment
1 Error:Clause Attachment
1 Error:Clause Attachment
1 Error:NP Internal Structure
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(NX hundert mark)
		(DM also)
		[01;36m(SIMPX[00m
			(SIMPX ich sehe jetzt hier gerade)
			(SIMPX
				(LK habe)
				(MF
					(NX ich)
					(ADVX einmal)
					(NX
						[01;31m(NX[00m
							(ART das)
							(NN [01;33m(NX[00m hotel)[01;31m)[00m
						(PX am thielenplatz)))) [01;33mNX)[00m[01;36m)[00m
		[01;36m(SIMPX[00m
			(SIMPX
				(VF das)
				[01;36m(FKOORD[00m [01;31m(LKMN[00m
					(LKM liegt sehr zentral)
					(KON und)
					(LKM hat auch einen konferenzraum)[01;31m)[00m[01;36m)[00m)
			(SIMPX
				(KOORD und)
				(VF da)
				(LK ware)
				(MF
					[01;31m(NX[00m
						(NX die preiskategorie)
						[01;33m(PX[00m (PX fur ein einzelzimmer)[01;31m)[00m
					(PX zwischen funfundachtzig und hundert dreisig mark)))[01;36m)[00m)) [01;33mPX)[00m
Step:Different label
{'family': ['VF', 'FKOORD'], 'auto preterminal span': (16, 24), 'span': (16, 24), 'subtrees': ['LKM', 'KON', 'LKM'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('VVFIN', 'ADV', 'ADJD', 'KON', 'VAFIN', 'ADV', 'ART', 'NN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('LKMN', 'FKOORD')}
(TOP
	(TURN
		(NX hundert mark)
		(DM also)
		[01;36m(SIMPX[00m
			(SIMPX ich sehe jetzt hier gerade)
			(SIMPX
				(LK habe)
				(MF
					(NX ich)
					(ADVX einmal)
					(NX
						[01;31m(NX[00m
							(ART das)
							(NN [01;33m(NX[00m hotel)[01;31m)[00m
						(PX am thielenplatz)))) [01;33mNX)[00m[01;36m)[00m
		[01;36m(SIMPX[00m
			(SIMPX das liegt sehr zentral und hat auch einen konferenzraum)
			(SIMPX
				(KOORD und)
				(VF da)
				(LK ware)
				(MF
					[01;31m(NX[00m
						(NX die preiskategorie)
						[01;33m(PX[00m (PX fur ein einzelzimmer)[01;31m)[00m
					(PX zwischen funfundachtzig und hundert dreisig mark)))[01;36m)[00m)) [01;33mPX)[00m
Step:PP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'PX', 'PX'], 'mover info': [('PX', (29, 32))], 'old_family': ['NX', 'PX'], 'start left siblings': ['NX'], 'auto preterminals': ('ART', 'NN', 'APPR', 'ART', 'NN', 'APPR', 'CARD', 'KON', 'CARD', 'CARD', 'NN'), 'start right siblings': [], 'end left siblings': ['NX'], 'auto preterminal span': (27, 38), 'adding node already present': False, 'movers': ['PX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': ['PX'], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'PX'}
(TOP
	(TURN
		(NX hundert mark)
		(DM also)
		[01;36m(SIMPX[00m
			(SIMPX ich sehe jetzt hier gerade)
			(SIMPX
				(LK habe)
				(MF
					(NX ich)
					(ADVX einmal)
					(NX
						[01;31m(NX[00m
							(ART das)
							(NN [01;33m(NX[00m hotel)[01;31m)[00m
						(PX am thielenplatz)))) [01;33mNX)[00m[01;36m)[00m
		[01;36m(SIMPX[00m
			(SIMPX das liegt sehr zentral und hat auch einen konferenzraum)
			(SIMPX und da ware die preiskategorie fur ein einzelzimmer zwischen funfundachtzig und hundert dreisig mark)[01;36m)[00m))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['NX', 'DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'ADV', 'ADV', 'VAFIN', 'PPER', 'ADV', 'ART', 'NN', 'APPRART', 'NE'), 'right siblings': [(SIMPX (VF (NX (PDS das))) (FKOORD (LKM (LK (VXFIN (VVFIN liegt))) (MF (ADJX (ADVX (ADV sehr)) (ADJD zentral)))) (KON und) (LKM (LK (VXFIN (VAFIN hat))) (MF (ADVX (ADV auch)) (NX (ART einen) (NN konferenzraum)))))), (SIMPX (KOORD (KON und)) (VF (ADVX (ADV da))) (LK (VXFIN (VAFIN ware))) (MF (NX (ART die) (NN preiskategorie)) (PX (PX (APPR fur) (NX (ART ein) (NN einzelzimmer))) (PX (APPR zwischen) (NX (ADJX (ADJX (CARD funfundachtzig)) (KON und) (ADJX (CARD hundert) (CARD dreisig))) (NN mark))))))], 'left siblings': [(NX (ADJX (CARD hundert)) (NN mark)), (DM (ADVX (ADV also)))], 'auto preterminal span': (3, 15), 'span': (3, 15), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(NX hundert mark)
		(DM also)
		(SIMPX
			(SIMPX ich sehe jetzt hier gerade)
			(SIMPX
				(LK habe)
				(MF
					(NX ich)
					(ADVX einmal)
					(NX
						[01;31m(NX[00m
							(ART das)
							(NN [01;33m(NX[00m hotel)[01;31m)[00m
						(PX am thielenplatz))))) [01;33mNX)[00m
		[01;36m(SIMPX[00m
			(SIMPX das liegt sehr zentral und hat auch einen konferenzraum)
			(SIMPX und da ware die preiskategorie fur ein einzelzimmer zwischen funfundachtzig und hundert dreisig mark)[01;36m)[00m))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['NX', 'DM', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PDS', 'VVFIN', 'ADV', 'ADJD', 'KON', 'VAFIN', 'ADV', 'ART', 'NN', 'KON', 'ADV', 'VAFIN', 'ART', 'NN', 'APPR', 'ART', 'NN', 'APPR', 'CARD', 'KON', 'CARD', 'CARD', 'NN'), 'right siblings': [], 'left siblings': [(NX (ADJX (CARD hundert)) (NN mark)), (DM (ADVX (ADV also))), (SIMPX (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN sehe))) (MF (ADVX (ADV jetzt)) (ADVX (ADV hier)) (ADVX (ADV gerade)))) (SIMPX (LK (VXFIN (VAFIN habe))) (MF (NX (PPER ich)) (ADVX (ADV einmal)) (NX (NX (ART das) (NN hotel)) (PX (APPRART am) (NX (NE thielenplatz)))))))], 'auto preterminal span': (15, 38), 'span': (15, 38), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(NX hundert mark)
		(DM also)
		(SIMPX
			(SIMPX ich sehe jetzt hier gerade)
			(SIMPX
				(LK habe)
				(MF
					(NX ich)
					(ADVX einmal)
					(NX
						[01;31m(NX[00m
							(ART das)
							(NN [01;33m(NX[00m hotel)[01;31m)[00m
						(PX am thielenplatz))))) [01;33mNX)[00m
		(SIMPX das liegt sehr zentral und hat auch einen konferenzraum und da ware die preiskategorie fur ein einzelzimmer zwischen funfundachtzig und hundert dreisig mark)))
Step:NP Internal Structure
{'subtrees': ['ART', 'NN'], 'family': ['NX', 'PX'], 'over_word': False, 'over words': True, 'auto preterminals': ('ART', 'NN', 'APPRART', 'NE'), 'right siblings': ['PX'], 'parent': 'NX', 'auto preterminal span': (11, 15), 'span': (11, 13), 'left siblings': [], 'label': 'NX', 'classified_type': 'NP Internal Structure', 'type': 'remove'}
(TOP
	(TURN
		(NX hundert mark)
		(DM also)
		(SIMPX
			(SIMPX ich sehe jetzt hier gerade)
			(SIMPX
				(LK habe)
				(MF
					(NX ich)
					(ADVX einmal)
					(NX
						(ART das)
						[01;36m(NX[00m
							(NN hotel)
							(PX am thielenplatz)[01;36m)[00m))))
		(SIMPX das liegt sehr zentral und hat auch einen konferenzraum und da ware die preiskategorie fur ein einzelzimmer zwischen funfundachtzig und hundert dreisig mark)))
Step:PP Attachment
{'subtrees': ['NN', 'PX'], 'family': ['ART', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'APPRART', 'NE'), 'right siblings': [], 'left siblings': [(ART das)], 'auto preterminal span': (12, 15), 'span': (12, 15), 'parent': 'NX', 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP hundert mark also ich sehe jetzt hier gerade habe ich einmal das hotel am thielenplatz das liegt sehr zentral und hat auch einen konferenzraum und da ware die preiskategorie fur ein einzelzimmer zwischen funfundachtzig und hundert dreisig mark)

Sentence 665:
0 Initial errors
0 on fringe, 0 iterations

Sentence 666:
0 Initial errors
0 on fringe, 0 iterations

Sentence 667:
14 Initial errors
0 on fringe, 11 iterations
2 Error:Single Word Phrase
2 Error:Modifier Attachment
2 Error:Modifier Attachment
1 Error:Single Word Phrase
1 Error:Unary
1 Error:Modifier Attachment
1 Error:PP Attachment
1 Error:Unary
1 Error:PP Attachment
1 Error:UNSET remove
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM guten tag)
		(DM frau bergmann)
		(DM offergeld)
		(NX mein name)
		(SIMPX
			(VF ich)
			(LK habe)
			[01;31m(MF[00m [01;33m(NX[00m
				[01;31m(NX[00m
					(ART ein)
					(ADJX paar)
					[01;31m(NX[00m
						[01;31m(NX[00m
							(NN fragen) [01;33mNX)[00m
							[01;31m(PX[00m
								(APPR an)
								(NX sie)[01;31m)[00m[01;31m)[00m
						[01;31m(PX[00m
							[01;36m(ADVX[00m
								(APPR bezuglich)[01;36m)[00m
							(NX einer geschaftsreise nach hannover)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m)
		[01;36m(SIMPX[00m
			[01;36m(VF[00m
				(ADVX
					(ADVX erst)
					(ADVX mal))[01;36m)[00m
			[01;31m(SIMPX[00m
				(LK ist)
				(MF
					[01;36m(MF[00m
						(NX es)
						(ADVX grundsatzlich)[01;36m)[00m
					[01;36m(NX[00m [01;31m(ADJX[00m
						(ADJD moglich)[01;31m)[00m[01;36m)[00m)
				(NF mit dem flugzeug nach hannover zu fliegen)[01;31m)[00m[01;36m)[00m))
Step:Single Word Phrase
{'family': ['NX', 'ADVX', 'NX'], 'auto preterminal span': (24, 25), 'span': (24, 25), 'subtrees': ['ADJD'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('ADJD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'NX')}
(TOP
	(TURN
		(DM guten tag)
		(DM frau bergmann)
		(DM offergeld)
		(NX mein name)
		(SIMPX
			(VF ich)
			(LK habe)
			[01;31m(MF[00m [01;33m(NX[00m
				[01;31m(NX[00m
					(ART ein)
					(ADJX paar)
					[01;31m(NX[00m
						[01;31m(NX[00m
							(NN fragen) [01;33mNX)[00m
							[01;31m(PX[00m
								(APPR an)
								(NX sie)[01;31m)[00m[01;31m)[00m
						[01;31m(PX[00m
							[01;36m(ADVX[00m
								(APPR bezuglich)[01;36m)[00m
							(NX einer geschaftsreise nach hannover)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m)
		[01;36m(SIMPX[00m
			[01;36m(VF[00m
				(ADVX
					(ADVX erst)
					(ADVX mal))[01;36m)[00m
			[01;31m(SIMPX[00m
				(LK ist)
				(MF
					[01;36m(MF[00m
						(NX es)
						(ADVX grundsatzlich)[01;36m)[00m
					(NX moglich))
				(NF mit dem flugzeug nach hannover zu fliegen)[01;31m)[00m[01;36m)[00m))
Step:Modifier Attachment
{'new_parent': 'SIMPX', 'new_family': ['ADVX', 'LK', 'MF', 'NF'], 'mover info': [('ADVX', (19, 21))], 'old_family': ['DM', 'DM', 'DM', 'NX', 'SIMPX', 'ADVX', 'SIMPX'], 'start left siblings': ['DM', 'DM', 'DM', 'NX', 'SIMPX'], 'auto preterminals': ('ADJA', 'NN', 'NN', 'NE', 'NE', 'PPOSAT', 'NN', 'PPER', 'VAFIN', 'ART', 'PIDAT', 'NN', 'APPR', 'PPER', 'APPR', 'ART', 'NN', 'APPR', 'NE', 'ADV', 'ADV', 'VAFIN', 'PPER', 'ADV', 'ADJD', 'APPR', 'ART', 'NN', 'APPR', 'NE', 'PTKZU', 'VVINF'), 'start right siblings': ['SIMPX'], 'end left siblings': [], 'auto preterminal span': (0, 32), 'movers': ['ADVX'], 'old_parent': 'TURN', 'end right siblings': ['LK', 'MF', 'NF'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM guten tag)
		(DM frau bergmann)
		(DM offergeld)
		(NX mein name)
		(SIMPX
			(VF ich)
			(LK habe)
			[01;31m(MF[00m [01;33m(NX[00m
				[01;31m(NX[00m
					(ART ein)
					(ADJX paar)
					[01;31m(NX[00m
						[01;31m(NX[00m
							(NN fragen) [01;33mNX)[00m
							[01;31m(PX[00m
								(APPR an)
								(NX sie)[01;31m)[00m[01;31m)[00m
						[01;31m(PX[00m
							[01;36m(ADVX[00m
								(APPR bezuglich)[01;36m)[00m
							(NX einer geschaftsreise nach hannover)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;31m)[00m)
		(SIMPX
			[01;36m(VF[00m
				(ADVX
					(ADVX erst)
					(ADVX mal))[01;36m)[00m
			(LK ist)
			(MF
				[01;36m(MF[00m
					(NX es)
					(ADVX grundsatzlich)[01;36m)[00m
				(NX moglich))
			(NF mit dem flugzeug nach hannover zu fliegen))))
Step:Modifier Attachment
{'new_parent': 'NX', 'new_family': ['ART', 'ADJX', 'NN', 'PX'], 'mover info': [('ART', (9, 10)), ('ADJX', (10, 11))], 'old_family': ['ART', 'ADJX', 'NX'], 'start left siblings': [], 'auto preterminals': ('ART', 'PIDAT', 'NN', 'APPR', 'PPER', 'APPR', 'ART', 'NN', 'APPR', 'NE'), 'start right siblings': ['NX'], 'end left siblings': [], 'auto preterminal span': (9, 19), 'adding node already present': False, 'movers': ['ART', 'ADJX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': ['NN', 'PX'], 'classified_type': 'Modifier Attachment', 'type': 'move', 'added label': 'MF'}
(TOP
	(TURN
		(DM guten tag)
		(DM frau bergmann)
		(DM offergeld)
		(NX mein name)
		(SIMPX
			(VF ich)
			(LK habe)
			[01;31m(MF[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(NX ein paar fragen)
						[01;31m(PX[00m
							(APPR an)
							(NX sie)[01;31m)[00m[01;31m)[00m
					[01;31m(PX[00m
						[01;36m(ADVX[00m
							(APPR bezuglich)[01;36m)[00m
						(NX einer geschaftsreise nach hannover)[01;31m)[00m[01;31m)[00m[01;31m)[00m)
		(SIMPX
			[01;36m(VF[00m
				(ADVX
					(ADVX erst)
					(ADVX mal))[01;36m)[00m
			(LK ist)
			(MF
				[01;36m(MF[00m
					(NX es)
					(ADVX grundsatzlich)[01;36m)[00m
				(NX moglich))
			(NF mit dem flugzeug nach hannover zu fliegen))))
Step:Single Word Phrase
{'subtrees': ['APPR'], 'family': ['ADVX', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('APPR',), 'right siblings': [(NX (NX (ART einer) (NN geschaftsreise)) (PX (APPR nach) (NX (NE hannover))))], 'left siblings': [], 'auto preterminal span': (14, 15), 'span': (14, 15), 'parent': 'PX', 'label': 'ADVX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM guten tag)
		(DM frau bergmann)
		(DM offergeld)
		(NX mein name)
		(SIMPX
			(VF ich)
			(LK habe)
			[01;31m(MF[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(NX ein paar fragen)
						[01;31m(PX[00m
							(APPR an)
							(NX sie)[01;31m)[00m[01;31m)[00m
					[01;31m(PX[00m
						(ADVX bezuglich)
						(NX einer geschaftsreise nach hannover)[01;31m)[00m[01;31m)[00m[01;31m)[00m)
		(SIMPX
			[01;36m(VF[00m
				(ADVX
					(ADVX erst)
					(ADVX mal))[01;36m)[00m
			(LK ist)
			(MF
				[01;36m(MF[00m
					(NX es)
					(ADVX grundsatzlich)[01;36m)[00m
				(NX moglich))
			(NF mit dem flugzeug nach hannover zu fliegen))))
Step:Unary
{'subtrees': ['ADVX'], 'family': ['VF', 'LK', 'MF', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADV'), 'right siblings': [(LK (VXFIN (VAFIN ist))), (MF (NX (PPER es)) (ADVX (ADV grundsatzlich)) (NX (ADJD moglich))), (NF (SIMPX (MF (PX (APPR mit) (NX (ART dem) (NN flugzeug))) (PX (APPR nach) (NX (NE hannover)))) (VC (VXINF (PTKZU zu) (VVINF fliegen)))))], 'left siblings': [], 'auto preterminal span': (19, 21), 'span': (19, 21), 'parent': 'SIMPX', 'label': 'VF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM guten tag)
		(DM frau bergmann)
		(DM offergeld)
		(NX mein name)
		(SIMPX
			(VF ich)
			(LK habe)
			[01;31m(MF[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(NX ein paar fragen)
						[01;31m(PX[00m
							(APPR an)
							(NX sie)[01;31m)[00m[01;31m)[00m
					[01;31m(PX[00m
						(ADVX bezuglich)
						(NX einer geschaftsreise nach hannover)[01;31m)[00m[01;31m)[00m[01;31m)[00m)
		(SIMPX
			(VF erst mal)
			(LK ist)
			(MF
				[01;36m(MF[00m
					(NX es)
					(ADVX grundsatzlich)[01;36m)[00m
				(NX moglich))
			(NF mit dem flugzeug nach hannover zu fliegen))))
Step:Modifier Attachment
{'subtrees': ['NX', 'ADVX'], 'family': ['MF', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV'), 'right siblings': [(NX (ADJD moglich))], 'left siblings': [], 'auto preterminal span': (22, 24), 'span': (22, 24), 'parent': 'MF', 'label': 'MF', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM guten tag)
		(DM frau bergmann)
		(DM offergeld)
		(NX mein name)
		(SIMPX
			(VF ich)
			(LK habe)
			[01;31m(MF[00m
				[01;31m(NX[00m
					[01;31m(NX[00m
						(NX ein paar fragen)
						[01;31m(PX[00m
							(APPR an)
							(NX sie)[01;31m)[00m[01;31m)[00m
					[01;31m(PX[00m
						(ADVX bezuglich)
						(NX einer geschaftsreise nach hannover)[01;31m)[00m[01;31m)[00m[01;31m)[00m)
		(SIMPX erst mal ist es grundsatzlich moglich mit dem flugzeug nach hannover zu fliegen)))
Step:PP Attachment
{'subtrees': ['NX', 'PX'], 'family': ['NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'PIDAT', 'NN', 'APPR', 'PPER', 'APPR', 'ART', 'NN', 'APPR', 'NE'), 'right siblings': ['PX'], 'parent': 'NX', 'auto preterminal span': (9, 19), 'span': (9, 14), 'left siblings': [], 'label': 'NX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM guten tag)
		(DM frau bergmann)
		(DM offergeld)
		(NX mein name)
		(SIMPX
			(VF ich)
			(LK habe)
			[01;31m(MF[00m
				[01;31m(NX[00m
					(NX ein paar fragen)
					[01;31m(PX[00m
						(APPR an)
						(NX sie)[01;31m)[00m
					[01;31m(PX[00m
						(ADVX bezuglich)
						(NX einer geschaftsreise nach hannover)[01;31m)[00m[01;31m)[00m[01;31m)[00m)
		(SIMPX erst mal ist es grundsatzlich moglich mit dem flugzeug nach hannover zu fliegen)))
Step:Unary
{'subtrees': ['NX', 'PX', 'PX'], 'family': ['NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'PIDAT', 'NN', 'APPR', 'PPER', 'APPR', 'ART', 'NN', 'APPR', 'NE'), 'right siblings': [], 'parent': 'MF', 'auto preterminal span': (9, 19), 'span': (9, 19), 'left siblings': [], 'label': 'NX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM guten tag)
		(DM frau bergmann)
		(DM offergeld)
		(NX mein name)
		(SIMPX
			(VF ich)
			(LK habe)
			[01;31m(MF[00m
				(NX ein paar fragen)
				[01;31m(PX[00m
					(APPR an)
					(NX sie)[01;31m)[00m
				[01;31m(PX[00m
					(ADVX bezuglich)
					(NX einer geschaftsreise nach hannover)[01;31m)[00m[01;31m)[00m)
		(SIMPX erst mal ist es grundsatzlich moglich mit dem flugzeug nach hannover zu fliegen)))
Step:PP Attachment
{'subtrees': ['NX', 'PX', 'PX'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'ART', 'PIDAT', 'NN', 'APPR', 'PPER', 'APPR', 'ART', 'NN', 'APPR', 'NE'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (7, 19), 'span': (9, 19), 'left siblings': ['VF', 'LK'], 'label': 'MF', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM guten tag)
		(DM frau bergmann)
		(DM offergeld)
		(NX mein name)
		(SIMPX
			(VF ich)
			(LK habe)
			(NX ein paar fragen)
			[01;31m(PX[00m
				(APPR an)
				(NX sie)[01;31m)[00m
			[01;31m(PX[00m
				(ADVX bezuglich)
				(NX einer geschaftsreise nach hannover)[01;31m)[00m)
		(SIMPX erst mal ist es grundsatzlich moglich mit dem flugzeug nach hannover zu fliegen)))
Step:UNSET remove
{'subtrees': ['APPR', 'NX'], 'family': ['VF', 'LK', 'NX', 'PX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'ART', 'PIDAT', 'NN', 'APPR', 'PPER', 'APPR', 'ART', 'NN', 'APPR', 'NE'), 'right siblings': ['PX'], 'parent': 'SIMPX', 'auto preterminal span': (7, 19), 'span': (12, 14), 'left siblings': ['VF', 'LK', 'NX'], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM guten tag)
		(DM frau bergmann)
		(DM offergeld)
		(NX mein name)
		(SIMPX
			(VF ich)
			(LK habe)
			(NX ein paar fragen)
			(APPR an)
			(NX sie)
			[01;31m(PX[00m
				(ADVX bezuglich)
				(NX einer geschaftsreise nach hannover)[01;31m)[00m)
		(SIMPX erst mal ist es grundsatzlich moglich mit dem flugzeug nach hannover zu fliegen)))
Step:UNSET remove
{'subtrees': ['ADVX', 'NX'], 'family': ['VF', 'LK', 'NX', 'APPR', 'NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'ART', 'PIDAT', 'NN', 'APPR', 'PPER', 'APPR', 'ART', 'NN', 'APPR', 'NE'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (7, 19), 'span': (14, 19), 'left siblings': ['VF', 'LK', 'NX', 'APPR', 'NX'], 'label': 'PX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP guten tag frau bergmann offergeld mein name ich habe ein paar fragen an sie bezuglich einer geschaftsreise nach hannover erst mal ist es grundsatzlich moglich mit dem flugzeug nach hannover zu fliegen)

Sentence 668:
8 Initial errors
0 on fringe, 4 iterations
4 Error:Modifier Attachment
2 Error:Different label
1 Error:Clause Attachment
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;36m(ADVX[00m [01;31m(PX[00m
			(PX am wochenende)
			(ADVX gar nicht)[01;31m)[00m[01;36m)[00m
		(DM ja)
		(DM nee)
		(SIMPX ich mochte montags fliegen)
		(SIMPX sieben uhr zehn past mir auch sehr gut)
		(SIMPX ich mus um zehn uhr bei einer konferenz sein)
		[01;36m(SIMPX[00m
			(SIMPX ware die frage)
			[01;36m(NF[00m
				(SIMPX
					(VF ich)
					(LK brauchte)
					(MF ein hotel)
					(NF
						(R
							(C was)
							(MF
								[01;31m(ADJX[00m
									[01;31m(ADVX[00m
										(ADVX moglichst)
										[01;36m(ADVX[00m
											(ADV [01;33m(ADJX[00m zentral)[01;36m)[00m[01;31m)[00m
									(ADJD gelegen)[01;31m)[00m) [01;33mADJX)[00m
							(VC ist))))[01;36m)[00m[01;36m)[00m
		(SIMPX wie lange ware ungefahr die transferzeit vom flughafen zum hotel)))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['ADVX', 'ADJX'], 'mover info': [('ADVX', (35, 36))], 'old_family': ['ADVX', 'ADV'], 'start left siblings': [], 'auto preterminals': ('ADV', 'ADV', 'ADJD'), 'start right siblings': ['ADV'], 'end left siblings': [], 'auto preterminal span': (35, 38), 'movers': ['ADVX'], 'old_parent': 'ADVX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['ADJX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		[01;36m(ADVX[00m [01;31m(PX[00m
			(PX am wochenende)
			(ADVX gar nicht)[01;31m)[00m[01;36m)[00m
		(DM ja)
		(DM nee)
		(SIMPX ich mochte montags fliegen)
		(SIMPX sieben uhr zehn past mir auch sehr gut)
		(SIMPX ich mus um zehn uhr bei einer konferenz sein)
		[01;36m(SIMPX[00m
			(SIMPX ware die frage)
			[01;36m(NF[00m
				(SIMPX
					(VF ich)
					(LK brauchte)
					(MF ein hotel)
					(NF was moglichst zentral gelegen ist))[01;36m)[00m[01;36m)[00m
		(SIMPX wie lange ware ungefahr die transferzeit vom flughafen zum hotel)))
Step:Different label
{'family': ['ADVX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'auto preterminal span': (0, 4), 'span': (0, 4), 'subtrees': ['PX', 'ADVX'], 'parent': 'TURN', 'over_word': False, 'auto preterminals': ('APPRART', 'NN', 'ADV', 'PTKNEG'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('PX', 'ADVX')}
(TOP
	(TURN
		(ADVX am wochenende gar nicht)
		(DM ja)
		(DM nee)
		(SIMPX ich mochte montags fliegen)
		(SIMPX sieben uhr zehn past mir auch sehr gut)
		(SIMPX ich mus um zehn uhr bei einer konferenz sein)
		[01;36m(SIMPX[00m
			(SIMPX ware die frage)
			[01;36m(NF[00m
				(SIMPX
					(VF ich)
					(LK brauchte)
					(MF ein hotel)
					(NF was moglichst zentral gelegen ist))[01;36m)[00m[01;36m)[00m
		(SIMPX wie lange ware ungefahr die transferzeit vom flughafen zum hotel)))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['ADVX', 'DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VAFIN', 'ART', 'NN', 'PPER', 'VVFIN', 'ART', 'NN', 'PRELS', 'ADV', 'ADV', 'ADJD', 'VAFIN'), 'right siblings': [(SIMPX (VF (ADJX (ADVX (PWAV wie)) (ADJD lange))) (LK (VXFIN (VAFIN ware))) (MF (ADVX (ADV ungefahr)) (NX (NX (ART die) (NN transferzeit)) (PX (PX (APPRART vom) (NX (NN flughafen))) (PX (APPRART zum) (NX (NN hotel)))))))], 'left siblings': [(ADVX (PX (APPRART am) (NX (NN wochenende))) (ADVX (ADVX (ADV gar)) (PTKNEG nicht))), (DM (PTKANT ja)), (DM (PTKANT nee)), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VMFIN mochte))) (MF (ADVX (ADV montags))) (VC (VXINF (VVINF fliegen)))), (SIMPX (VF (NX (NX (ADJX (CARD sieben)) (NN uhr)) (ADJX (CARD zehn)))) (LK (VXFIN (VVFIN past))) (MF (NX (PPER mir)) (ADVX (ADV auch)) (ADJX (ADVX (ADV sehr)) (ADJD gut)))), (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VMFIN mus))) (MF (PX (APPR um) (NX (ADJX (CARD zehn)) (NN uhr))) (PX (APPR bei) (NX (ART einer) (NN konferenz)))) (VC (VXINF (VAINF sein))))], 'auto preterminal span': (27, 39), 'span': (27, 39), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(ADVX am wochenende gar nicht)
		(DM ja)
		(DM nee)
		(SIMPX ich mochte montags fliegen)
		(SIMPX sieben uhr zehn past mir auch sehr gut)
		(SIMPX ich mus um zehn uhr bei einer konferenz sein)
		(SIMPX
			(SIMPX ware die frage)
			[01;36m(NF[00m
				(SIMPX
					(VF ich)
					(LK brauchte)
					(MF ein hotel)
					(NF was moglichst zentral gelegen ist))[01;36m)[00m)
		(SIMPX wie lange ware ungefahr die transferzeit vom flughafen zum hotel)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SIMPX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ART', 'NN', 'PRELS', 'ADV', 'ADV', 'ADJD', 'VAFIN'), 'right siblings': [], 'left siblings': [(SIMPX (LK (VXFIN (VAFIN ware))) (MF (NX (ART die) (NN frage))))], 'auto preterminal span': (30, 39), 'span': (30, 39), 'parent': 'SIMPX', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP am wochenende gar nicht ja nee ich mochte montags fliegen sieben uhr zehn past mir auch sehr gut ich mus um zehn uhr bei einer konferenz sein ware die frage ich brauchte ein hotel was moglichst zentral gelegen ist wie lange ware ungefahr die transferzeit vom flughafen zum hotel)

Sentence 669:
14 Initial errors
0 on fringe, 7 iterations
4 Error:Co-ordination
3 Error:PP Attachment
2 Error:UNSET move
2 Error:PP Attachment
1 Error:Single Word Phrase
1 Error:Unary
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(NX halbe stunde)
		(DM ja)
		(DM sehr gut)
		[01;31m(SIMPX[00m [01;33m(SIMPX (SIMPX[00m
			(VF dann)
			(LK ware)
			[01;31m(MF[00m [01;33m(MF[00m
				(NX
					(PPER ich))[01;31m)[00m[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(PX
						(APPR um)
						(NX sieben uhr zehn))[01;31m)[00m [01;33mMF) SIMPX)[00m
				(LK wurde)
				(MF ich)
				(VC losfliegen)[01;31m)[00m [01;33mSIMPX)[00m
			[01;36m(SIMPX[00m
				[01;36m(KOORD[00m
					(KON und)[01;36m)[00m
				[01;31m(SIMPX[00m
					(VF acht uhr zehn)
					(LK ware)
					[01;31m(MF[00m [01;33m(MF[00m
						(NX ich)
						(ADVX dann)
						[01;31m(PX[00m
							(PX in hannover) [01;33mMF)[00m
							(PX am flughafen)[01;31m)[00m[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;31m)[00m
		(DM richtig)))
Step:Co-ordination
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'SIMPX'], 'mover info': [('SIMPX', (8, 15))], 'old_family': ['SIMPX', 'KON', 'SIMPX'], 'start left siblings': [], 'auto preterminals': ('ADJA', 'NN', 'PTKANT', 'ADV', 'ADJD', 'ADV', 'VAFIN', 'PPER', 'APPR', 'CARD', 'NN', 'CARD', 'VAFIN', 'PPER', 'VVINF', 'KON', 'CARD', 'NN', 'CARD', 'VAFIN', 'PPER', 'ADV', 'APPR', 'NE', 'APPRART', 'NN', 'ITJ'), 'start right siblings': ['KON', 'SIMPX'], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (0, 27), 'movers': ['SIMPX'], 'old_parent': 'SIMPX', 'end right siblings': [], 'classified_type': 'Co-ordination', 'type': 'move'}
(TOP
	(TURN
		(NX halbe stunde)
		(DM ja)
		(DM sehr gut)
		(SIMPX [01;33m(SIMPX[00m
			(VF dann)
			(LK ware)
			[01;31m(MF[00m [01;33m(MF[00m
				(NX
					(PPER ich))[01;31m)[00m
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(PX
						(APPR um)
						(NX sieben uhr zehn))[01;31m)[00m [01;33mMF) SIMPX)[00m
				(LK wurde)
				(MF ich)
				(VC losfliegen)[01;31m)[00m)
		(SIMPX
			[01;36m(KOORD[00m
				(KON und)[01;36m)[00m
			[01;31m(SIMPX[00m
				(VF acht uhr zehn)
				(LK ware)
				[01;31m(MF[00m [01;33m(MF[00m
					(NX ich)
					(ADVX dann)
					[01;31m(PX[00m
						(PX in hannover) [01;33mMF)[00m
						(PX am flughafen)[01;31m)[00m[01;31m)[00m[01;31m)[00m)
		(DM richtig)))
Step:PP Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'PX'], 'mover info': [('PX', (24, 26))], 'old_family': ['PX', 'PX'], 'start left siblings': ['PX'], 'auto preterminals': ('CARD', 'NN', 'CARD', 'VAFIN', 'PPER', 'ADV', 'APPR', 'NE', 'APPRART', 'NN'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (16, 26), 'movers': ['PX'], 'old_parent': 'PX', 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		(NX halbe stunde)
		(DM ja)
		(DM sehr gut)
		(SIMPX [01;33m(SIMPX[00m
			(VF dann)
			(LK ware)
			[01;31m(MF[00m [01;33m(MF[00m
				(NX
					(PPER ich))[01;31m)[00m
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(PX
						(APPR um)
						(NX sieben uhr zehn))[01;31m)[00m [01;33mMF) SIMPX)[00m
				(LK wurde)
				(MF ich)
				(VC losfliegen)[01;31m)[00m)
		(SIMPX
			[01;36m(KOORD[00m
				(KON und)[01;36m)[00m
			[01;31m(SIMPX[00m
				(VF acht uhr zehn)
				(LK ware)
				(MF ich dann in hannover)
				(PX am flughafen)[01;31m)[00m)
		(DM richtig)))
Step:UNSET move
{'new_parent': 'VF', 'new_family': ['VF', 'LK', 'MF', 'PX'], 'mover info': [('VF', (5, 6)), ('LK', (6, 7)), ('MF', (7, 8))], 'old_family': ['VF', 'LK', 'MF', 'SIMPX'], 'start left siblings': [], 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'APPR', 'CARD', 'NN', 'CARD', 'VAFIN', 'PPER', 'VVINF'), 'start right siblings': ['SIMPX'], 'end left siblings': [], 'auto preterminal span': (5, 15), 'adding node already present': False, 'movers': ['VF', 'LK', 'MF'], 'old_parent': 'SIMPX', 'added and moved': True, 'end right siblings': ['PX'], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'KOORD'}
(TOP
	(TURN
		(NX halbe stunde)
		(DM ja)
		(DM sehr gut)
		(SIMPX
			(SIMPX
				[01;31m(VF[00m
					(VF dann)
					(LK ware)
					[01;36m(MF[00m
						[01;31m(MF[00m
							(NX
								(PPER ich))[01;31m)[00m
						(PX um sieben uhr zehn)[01;36m)[00m[01;31m)[00m)
			(LK wurde)
			(MF ich)
			(VC losfliegen))
		(SIMPX
			[01;36m(KOORD[00m
				(KON und)[01;36m)[00m
			[01;31m(SIMPX[00m
				(VF acht uhr zehn)
				(LK ware)
				(MF ich dann in hannover)
				(PX am flughafen)[01;31m)[00m)
		(DM richtig)))
Step:PP Attachment
{'new_parent': 'MF', 'new_family': ['NX', 'PX'], 'mover info': [('PX', (8, 12))], 'old_family': ['VF', 'LK', 'MF', 'PX'], 'start left siblings': ['VF', 'LK', 'MF'], 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'APPR', 'CARD', 'NN', 'CARD'), 'start right siblings': [], 'end left siblings': ['NX'], 'auto preterminal span': (5, 12), 'movers': ['PX'], 'old_parent': 'VF', 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		(NX halbe stunde)
		(DM ja)
		(DM sehr gut)
		(SIMPX
			(SIMPX
				[01;31m(VF[00m
					(VF dann)
					(LK ware)
					(MF ich um sieben uhr zehn)[01;31m)[00m)
			(LK wurde)
			(MF ich)
			(VC losfliegen))
		(SIMPX
			[01;36m(KOORD[00m
				(KON und)[01;36m)[00m
			[01;31m(SIMPX[00m
				(VF acht uhr zehn)
				(LK ware)
				(MF ich dann in hannover)
				(PX am flughafen)[01;31m)[00m)
		(DM richtig)))
Step:Single Word Phrase
{'subtrees': ['KON'], 'family': ['KOORD', 'SIMPX'], 'over_word': True, 'over words': True, 'auto preterminals': ('KON',), 'right siblings': [(SIMPX (VF (NX (NX (ADJX (CARD acht)) (NN uhr)) (ADJX (CARD zehn)))) (LK (VXFIN (VAFIN ware))) (MF (NX (PPER ich)) (ADVX (ADV dann)) (PX (APPR in) (NX (NE hannover)))) (PX (APPRART am) (NX (NN flughafen))))], 'left siblings': [], 'auto preterminal span': (15, 16), 'span': (15, 16), 'parent': 'SIMPX', 'label': 'KOORD', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(NX halbe stunde)
		(DM ja)
		(DM sehr gut)
		(SIMPX
			(SIMPX
				[01;31m(VF[00m
					(VF dann)
					(LK ware)
					(MF ich um sieben uhr zehn)[01;31m)[00m)
			(LK wurde)
			(MF ich)
			(VC losfliegen))
		(SIMPX
			(KOORD und)
			[01;31m(SIMPX[00m
				(VF acht uhr zehn)
				(LK ware)
				(MF ich dann in hannover)
				(PX am flughafen)[01;31m)[00m)
		(DM richtig)))
Step:Unary
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['VF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VAFIN', 'PPER', 'APPR', 'CARD', 'NN', 'CARD'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (5, 12), 'span': (5, 12), 'left siblings': [], 'label': 'VF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(NX halbe stunde)
		(DM ja)
		(DM sehr gut)
		(SIMPX dann ware ich um sieben uhr zehn wurde ich losfliegen)
		(SIMPX
			(KOORD und)
			[01;31m(SIMPX[00m
				(VF acht uhr zehn)
				(LK ware)
				(MF ich dann in hannover)
				(PX am flughafen)[01;31m)[00m)
		(DM richtig)))
Step:PP Attachment
{'subtrees': ['VF', 'LK', 'MF', 'PX'], 'family': ['KOORD', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'CARD', 'NN', 'CARD', 'VAFIN', 'PPER', 'ADV', 'APPR', 'NE', 'APPRART', 'NN'), 'right siblings': [], 'parent': 'SIMPX', 'auto preterminal span': (15, 26), 'span': (16, 26), 'left siblings': ['KOORD'], 'label': 'SIMPX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP halbe stunde ja sehr gut dann ware ich um sieben uhr zehn wurde ich losfliegen und acht uhr zehn ware ich dann in hannover am flughafen richtig)

Sentence 670:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Clause Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM gut)
		(SIMPX wie sieht das mit den buchungsterminen aus)
		(SIMPX ist das generell moglich)
		[01;36m(SIMPX[00m
			(SIMPX das ich am siebten juli)
			[01;31m(SIMPX[00m
				(VF das)
				(LK ist)
				(MF montags)[01;31m)[00m[01;36m)[00m))
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['SIMPX', 'VF', 'LK', 'MF'], 'mover info': [('SIMPX', (12, 17))], 'old_family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'start left siblings': ['DM', 'SIMPX', 'SIMPX'], 'auto preterminals': ('ITJ', 'PWAV', 'VVFIN', 'PDS', 'APPR', 'ART', 'NN', 'PTKVZ', 'VAFIN', 'PDS', 'ADV', 'ADJD', 'KOUS', 'PPER', 'APPRART', 'ADJA', 'NN', 'PDS', 'VAFIN', 'ADV'), 'start right siblings': ['SIMPX'], 'end left siblings': [], 'auto preterminal span': (0, 20), 'movers': ['SIMPX'], 'old_parent': 'TURN', 'end right siblings': ['VF', 'LK', 'MF'], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP gut wie sieht das mit den buchungsterminen aus ist das generell moglich das ich am siebten juli das ist montags)

Sentence 671:
2 Initial errors
0 on fringe, 2 iterations
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		[01;31m(DM[00m
			[01;31m(ADJX[00m
				(ADVX sehr)
				(ADJD gut)[01;31m)[00m[01;31m)[00m
		(DM sehr gut)
		(SIMPX vier tage mochte ich bleiben)
		(SIMPX das ware dann bis zum zehnten juli)
		(SIMPX konnen sie da fur mich eine buchung vornehmen)))
Step:Unary
{'subtrees': ['ADVX', 'ADJD'], 'family': ['ADJX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADJD'), 'right siblings': [], 'parent': 'DM', 'auto preterminal span': (0, 2), 'span': (0, 2), 'left siblings': [], 'label': 'ADJX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		[01;31m(DM[00m
			(ADVX sehr)
			(ADJD gut)[01;31m)[00m
		(DM sehr gut)
		(SIMPX vier tage mochte ich bleiben)
		(SIMPX das ware dann bis zum zehnten juli)
		(SIMPX konnen sie da fur mich eine buchung vornehmen)))
Step:UNSET remove
{'subtrees': ['ADVX', 'ADJD'], 'family': ['DM', 'DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'ADJD', 'ADV', 'ADJD', 'CARD', 'NN', 'VMFIN', 'PPER', 'VVINF', 'PDS', 'VAFIN', 'ADV', 'APPR', 'APPRART', 'ADJA', 'NN', 'VMFIN', 'PPER', 'ADV', 'APPR', 'PPER', 'ART', 'NN', 'VVINF'), 'right siblings': ['DM', 'SIMPX', 'SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 24), 'span': (0, 2), 'left siblings': [], 'label': 'DM', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP sehr gut sehr gut vier tage mochte ich bleiben das ware dann bis zum zehnten juli konnen sie da fur mich eine buchung vornehmen)

Sentence 672:
5 Initial errors
0 on fringe, 4 iterations
2 Error:Single Word Phrase
1 Error:Modifier Attachment
1 Error:Unary
1 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX das ich dann abends wieder zuruckfliegen kann)
		[01;31m(ADVX[00m
			(ADVX ansonsten)
			(ADVX vielleicht)
			(ADVX auch)
			[01;36m(PX[00m
				(PX mit dem zug)
				(ADVX abends)[01;36m)[00m
			[01;36m(VC[00m [01;31m(ADVX[00m
				(ADV zuruck)[01;31m)[00m[01;36m)[00m[01;31m)[00m
		[01;36m(NF[00m
			(SIMPX
				(C wenn)
				(MF das mit dem flugzeug))[01;36m)[00m))
Step:Single Word Phrase
{'family': ['ADVX', 'ADVX', 'ADVX', 'PX', 'ADVX', 'VC'], 'auto preterminal span': (14, 15), 'span': (14, 15), 'subtrees': ['ADV'], 'parent': 'ADVX', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'VC')}
(TOP
	(TURN
		(SIMPX das ich dann abends wieder zuruckfliegen kann)
		[01;31m(ADVX[00m
			(ADVX ansonsten)
			(ADVX vielleicht)
			(ADVX auch)
			[01;36m(PX[00m
				(PX mit dem zug)
				(ADVX abends)[01;36m)[00m
			(VC zuruck)[01;31m)[00m
		[01;36m(NF[00m
			(SIMPX
				(C wenn)
				(MF das mit dem flugzeug))[01;36m)[00m))
Step:Modifier Attachment
{'subtrees': ['PX', 'ADVX'], 'family': ['ADVX', 'ADVX', 'ADVX', 'PX', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'ART', 'NN', 'ADV'), 'right siblings': [(VC (ADV zuruck))], 'left siblings': [(ADVX (ADV ansonsten)), (ADVX (ADV vielleicht)), (ADVX (ADV auch))], 'auto preterminal span': (10, 14), 'span': (10, 14), 'parent': 'ADVX', 'label': 'PX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		(SIMPX das ich dann abends wieder zuruckfliegen kann)
		[01;31m(ADVX[00m
			(ADVX ansonsten)
			(ADVX vielleicht)
			(ADVX auch)
			(PX mit dem zug abends)
			(VC zuruck)[01;31m)[00m
		[01;36m(NF[00m
			(SIMPX
				(C wenn)
				(MF das mit dem flugzeug))[01;36m)[00m))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['SIMPX', 'ADVX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PDS', 'APPR', 'ART', 'NN'), 'right siblings': [], 'left siblings': [(SIMPX (C (KOUS das)) (MF (NX (PPER ich)) (ADVX (ADV dann)) (ADVX (ADV abends)) (ADVX (ADV wieder))) (VC (VXINF (VVINF zuruckfliegen)) (VXFIN (VMFIN kann)))), (ADVX (ADVX (ADV ansonsten)) (ADVX (ADV vielleicht)) (ADVX (ADV auch)) (PX (PX (APPR mit) (NX (ART dem) (NN zug))) (ADVX (ADV abends))) (VC (ADV zuruck)))], 'auto preterminal span': (15, 20), 'span': (15, 20), 'parent': 'TURN', 'label': 'NF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SIMPX das ich dann abends wieder zuruckfliegen kann)
		[01;31m(ADVX[00m
			(ADVX ansonsten)
			(ADVX vielleicht)
			(ADVX auch)
			(PX mit dem zug abends)
			(VC zuruck)[01;31m)[00m
		(NF wenn das mit dem flugzeug)))
Step:PP Attachment
{'subtrees': ['ADVX', 'ADVX', 'ADVX', 'PX', 'VC'], 'family': ['SIMPX', 'ADVX', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'ADV', 'ADV', 'VVINF', 'VMFIN', 'ADV', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'ADV', 'ADV', 'KOUS', 'PDS', 'APPR', 'ART', 'NN'), 'right siblings': ['NF'], 'parent': 'TURN', 'auto preterminal span': (0, 20), 'span': (7, 15), 'left siblings': ['SIMPX'], 'label': 'ADVX', 'classified_type': 'PP Attachment', 'type': 'remove'}
(TOP das ich dann abends wieder zuruckfliegen kann ansonsten vielleicht auch mit dem zug abends zuruck wenn das mit dem flugzeug)

Sentence 673:
4 Initial errors
0 on fringe, 2 iterations
2 Error:Single Word Phrase
2 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ah)
		(SIMPX ist naturlich sehr kompliziert)
		(SIMPX
			(VF wann)
			(LK konnten)
			(MF sie denn genau)
			(VC sagen)
			(NF
				(SIMPX
					(C ob)
					(MF
						(NX ich)
						(PX an dem abend)
						[01;36m(ADVX[00m [01;31m(ADJX[00m
							(ADJD exakt)[01;31m)[00m[01;36m)[00m
						(PX nach hause))
					(VC fahren kann))))
		[01;36m(NX[00m [01;31m(VXINF[00m
			(VVINF fliegen)[01;31m)[00m[01;36m)[00m))
Step:Single Word Phrase
{'family': ['NX', 'PX', 'ADVX', 'PX'], 'auto preterminal span': (16, 17), 'span': (16, 17), 'subtrees': ['ADJD'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('ADJD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'ADVX')}
(TOP
	(TURN
		(DM ah)
		(SIMPX ist naturlich sehr kompliziert)
		(SIMPX wann konnten sie denn genau sagen ob ich an dem abend exakt nach hause fahren kann)
		[01;36m(NX[00m [01;31m(VXINF[00m
			(VVINF fliegen)[01;31m)[00m[01;36m)[00m))
Step:Single Word Phrase
{'family': ['DM', 'SIMPX', 'SIMPX', 'NX'], 'auto preterminal span': (21, 22), 'span': (21, 22), 'subtrees': ['VVINF'], 'parent': 'TURN', 'over_word': True, 'auto preterminals': ('VVINF',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('VXINF', 'NX')}
(TOP ah ist naturlich sehr kompliziert wann konnten sie denn genau sagen ob ich an dem abend exakt nach hause fahren kann fliegen)

Sentence 674:
0 Initial errors
0 on fringe, 0 iterations

Sentence 675:
0 Initial errors
0 on fringe, 0 iterations

Sentence 676:
0 Initial errors
0 on fringe, 0 iterations

Sentence 677:
7 Initial errors
0 on fringe, 4 iterations
3 Error:Clause Attachment
2 Error:Modifier Attachment
1 Error:UNSET add
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM sehr gut)
		(SIMPX [01;33m(SIMPX[00m
			(VF ich)
			(LK wurde)
			[01;31m(MF[00m
				[01;36m(MF[00m
					(NX sie)
					(ADVX dann) [01;33mSIMPX)[00m[01;36m)[00m
				[01;31m(SIMPX[00m [01;33m(SIMPX[00m
					(VF ich)
					(LK sage)
					[01;31m(MF[00m [01;33m(MF[00m
						(ADVX
							(ADV mal))[01;31m)[00m[01;31m)[00m
				(ADVX morgen)[01;31m)[00m [01;33mMF)[00m
			(VC zuruckrufen)
			(NF das wir alles festmachen)))) [01;33mSIMPX)[00m
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'SIMPX', 'ADVX', 'VC', 'NF'], 'mover info': [('SIMPX', (6, 9)), ('ADVX', (9, 10))], 'old_family': ['NX', 'ADVX', 'SIMPX', 'ADVX'], 'start left siblings': ['NX', 'ADVX'], 'auto preterminals': ('PPER', 'VAFIN', 'PPER', 'ADV', 'PPER', 'VVFIN', 'ADV', 'ADV', 'VVINF', 'KOUS', 'PPER', 'PIS', 'VVFIN'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (2, 15), 'adding node already present': False, 'movers': ['SIMPX', 'ADVX'], 'old_parent': 'MF', 'added and moved': True, 'end right siblings': ['VC', 'NF'], 'classified_type': 'Clause Attachment', 'type': 'move', 'added label': 'SIMPX'}
(TOP
	(TURN
		(DM sehr gut)
		(SIMPX
			[01;36m(SIMPX[00m
				(VF ich)
				(LK wurde)
				(MF sie dann)[01;36m)[00m
			(SIMPX
				[01;31m(SIMPX[00m
					(VF ich)
					(LK sage)
					[01;31m(MF[00m [01;33m(MF[00m
						(ADVX
							(ADV mal))[01;31m)[00m[01;31m)[00m
				(ADVX morgen) [01;33mMF)[00m
				(VC zuruckrufen)
				(NF das wir alles festmachen)))))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['ADVX', 'ADVX'], 'mover info': [('ADVX', (9, 10))], 'old_family': ['SIMPX', 'ADVX', 'VC', 'NF'], 'start left siblings': ['SIMPX'], 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'ADV', 'VVINF', 'KOUS', 'PPER', 'PIS', 'VVFIN'), 'start right siblings': ['VC', 'NF'], 'end left siblings': ['ADVX'], 'auto preterminal span': (6, 15), 'movers': ['ADVX'], 'old_parent': 'SIMPX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM sehr gut)
		(SIMPX
			[01;36m(SIMPX[00m
				(VF ich)
				(LK wurde)
				(MF sie dann)[01;36m)[00m
			(SIMPX
				[01;31m(SIMPX[00m
					(VF ich)
					(LK sage)
					(MF mal morgen)[01;31m)[00m
				(VC zuruckrufen)
				(NF das wir alles festmachen)))))
Step:UNSET add
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'PPER', 'ADV'), 'right siblings': [(SIMPX (SIMPX (VF (NX (PPER ich))) (LK (VXFIN (VVFIN sage))) (MF (ADVX (ADV mal)) (ADVX (ADV morgen)))) (VC (VXINF (VVINF zuruckrufen))) (NF (SIMPX (C (KOUS das)) (MF (NX (PPER wir)) (NX (PIS alles))) (VC (VXFIN (VVFIN festmachen))))))], 'left siblings': [], 'auto preterminal span': (2, 6), 'span': (2, 6), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM sehr gut)
		(SIMPX
			(SIMPX ich wurde sie dann)
			(SIMPX
				[01;31m(SIMPX[00m
					(VF ich)
					(LK sage)
					(MF mal morgen)[01;31m)[00m
				(VC zuruckrufen)
				(NF das wir alles festmachen)))))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF'], 'family': ['SIMPX', 'VC', 'NF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'ADV', 'VVINF', 'KOUS', 'PPER', 'PIS', 'VVFIN'), 'right siblings': ['VC', 'NF'], 'parent': 'SIMPX', 'auto preterminal span': (6, 15), 'span': (6, 10), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP sehr gut ich wurde sie dann ich sage mal morgen zuruckrufen das wir alles festmachen)

Sentence 678:
0 Initial errors
0 on fringe, 0 iterations

Sentence 679:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Modifier Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM alles klar)
		[01;31m(DM[00m
			(PTKANT danke)
			(ADJX schon)[01;31m)[00m
		(DM frau berit)))
Step:Modifier Attachment
{'subtrees': ['PTKANT', 'ADJX'], 'family': ['DM', 'DM', 'DM'], 'over_word': False, 'over words': False, 'auto preterminals': ('PIS', 'ADJD', 'PTKANT', 'ADJD', 'NN', 'NE'), 'right siblings': ['DM'], 'parent': 'TURN', 'auto preterminal span': (0, 6), 'span': (2, 4), 'left siblings': ['DM'], 'label': 'DM', 'classified_type': 'Modifier Attachment', 'type': 'remove'}
(TOP alles klar danke schon frau berit)

Sentence 680:
17 Initial errors
0 on fringe, 10 iterations
3 Error:Co-ordination
2 Error:Single Word Phrase
2 Error:Different label
2 Error:Single Word Phrase
2 Error:Modifier Attachment
2 Error:UNSET move
1 Error:Unary
1 Error:UNSET add
1 Error:Unary
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX
			(KOORD und)
			[01;36m(PX[00m
				(VF
					[01;31m(NX[00m
						(NN zugfahren)[01;31m)[00m)[01;36m)[00m
			(LK dauert)
			(MF mir vielleicht auch ein bischen zu lange))
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF ich)
			(LK habe)
			(MF jetzt hier den plan vor mir)[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;36m(ADVX[00m [01;31m(VF[00m
				[01;31m(NX[00m
					(NN zugdauer)[01;31m)[00m[01;31m)[00m [01;33mSIMPX)[00m[01;36m)[00m
			[01;33m(SIMPX[00m (LK dauert)
			[01;33m(NX (MF[00m (MF drei stunden zwanzig minuten)[01;31m)[00m
		[01;31m(NX[00m
			(KON und)
			[01;36m(LKM[00m
				[01;36m(VXFIN[00m [01;36m(LK[00m [01;31m(NX[00m
					(NN fliegen)[01;31m)[00m[01;36m)[00m[01;36m)[00m
				[01;36m(MF[00m
					(NX
						(ART eine)
						(NN stunde))[01;36m)[00m[01;36m)[00m[01;31m)[00m)) [01;33mMF) NX) SIMPX)[00m
Step:Co-ordination
{'new_parent': 'NX', 'new_family': ['MF', 'KON', 'NX', 'NX'], 'mover info': [('MF', (20, 24))], 'old_family': ['VF', 'LK', 'MF'], 'start left siblings': ['VF', 'LK'], 'auto preterminals': ('KON', 'NN', 'VVFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'PTKA', 'ADJD', 'PPER', 'VAFIN', 'ADV', 'ADV', 'ART', 'NN', 'APPR', 'PRF', 'NN', 'VVFIN', 'CARD', 'NN', 'CARD', 'NN', 'KON', 'NN', 'ART', 'NN'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (0, 28), 'adding node already present': False, 'movers': ['MF'], 'old_parent': 'SIMPX', 'added and moved': True, 'end right siblings': ['KON', 'NX', 'NX'], 'classified_type': 'Co-ordination', 'type': 'move', 'added label': 'MF'}
(TOP
	(TURN
		(SIMPX
			(KOORD und)
			[01;36m(PX[00m
				(VF
					[01;31m(NX[00m
						(NN zugfahren)[01;31m)[00m)[01;36m)[00m
			(LK dauert)
			(MF mir vielleicht auch ein bischen zu lange))
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF ich)
			(LK habe)
			(MF jetzt hier den plan vor mir)[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;36m(ADVX[00m [01;31m(VF[00m
				[01;31m(NX[00m
					(NN zugdauer)[01;31m)[00m[01;31m)[00m [01;33mSIMPX)[00m[01;36m)[00m
			[01;33m(SIMPX[00m (LK dauert)[01;31m)[00m
		(MF
			(NX
				(MF drei stunden zwanzig minuten)
				(KON und)
				[01;36m(LKM[00m
					[01;36m(VXFIN[00m [01;36m(LK[00m [01;31m(NX[00m
						(NN fliegen)[01;31m)[00m[01;36m)[00m[01;36m)[00m
					[01;36m(MF[00m
						(NX
							(ART eine)
							(NN stunde))[01;36m)[00m[01;36m)[00m)))) [01;33mSIMPX)[00m
Step:Single Word Phrase
{'family': ['PX'], 'auto preterminal span': (1, 2), 'span': (1, 2), 'subtrees': ['NN'], 'parent': 'VF', 'over_word': True, 'auto preterminals': ('NN',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('NX', 'PX')}
(TOP
	(TURN
		(SIMPX und zugfahren dauert mir vielleicht auch ein bischen zu lange)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF ich)
			(LK habe)
			(MF jetzt hier den plan vor mir)[01;31m)[00m
		[01;31m(SIMPX[00m
			[01;36m(ADVX[00m [01;31m(VF[00m
				[01;31m(NX[00m
					(NN zugdauer)[01;31m)[00m[01;31m)[00m [01;33mSIMPX)[00m[01;36m)[00m
			[01;33m(SIMPX[00m (LK dauert)[01;31m)[00m
		(MF
			(NX
				(MF drei stunden zwanzig minuten)
				(KON und)
				[01;36m(LKM[00m
					[01;36m(VXFIN[00m [01;36m(LK[00m [01;31m(NX[00m
						(NN fliegen)[01;31m)[00m[01;36m)[00m[01;36m)[00m
					[01;36m(MF[00m
						(NX
							(ART eine)
							(NN stunde))[01;36m)[00m[01;36m)[00m)))) [01;33mSIMPX)[00m
Step:Different label
{'family': ['ADVX', 'LK'], 'auto preterminal span': (18, 19), 'span': (18, 19), 'subtrees': ['NX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('NN',), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('VF', 'ADVX')}
(TOP
	(TURN
		(SIMPX und zugfahren dauert mir vielleicht auch ein bischen zu lange)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF ich)
			(LK habe)
			(MF jetzt hier den plan vor mir)[01;31m)[00m
		[01;31m(SIMPX[00m
			(ADVX
				[01;31m(NX[00m
					(NN zugdauer)[01;31m)[00m) [01;33mSIMPX)[00m
			[01;33m(SIMPX[00m (LK dauert)[01;31m)[00m
		(MF
			(NX
				(MF drei stunden zwanzig minuten)
				(KON und)
				[01;36m(LKM[00m
					[01;36m(VXFIN[00m [01;36m(LK[00m [01;31m(NX[00m
						(NN fliegen)[01;31m)[00m[01;36m)[00m[01;36m)[00m
					[01;36m(MF[00m
						(NX
							(ART eine)
							(NN stunde))[01;36m)[00m[01;36m)[00m)))) [01;33mSIMPX)[00m
Step:Single Word Phrase
{'family': ['MF', 'KON', 'LK', 'NX'], 'auto preterminal span': (25, 26), 'span': (25, 26), 'subtrees': ['NN'], 'parent': 'NX', 'over_word': True, 'auto preterminals': ('NN',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('NX', 'LK')}
(TOP
	(TURN
		(SIMPX und zugfahren dauert mir vielleicht auch ein bischen zu lange)
		[01;31m(SIMPX[00m [01;33m(SIMPX[00m
			(VF ich)
			(LK habe)
			(MF jetzt hier den plan vor mir)[01;31m)[00m
		[01;31m(SIMPX[00m
			(ADVX
				[01;31m(NX[00m
					(NN zugdauer)[01;31m)[00m) [01;33mSIMPX)[00m
			[01;33m(SIMPX[00m (LK dauert)[01;31m)[00m
		(MF
			(NX
				(MF drei stunden zwanzig minuten)
				(KON und)
				[01;36m(LKM[00m
					[01;36m(VXFIN[00m
						(LK
							(NN fliegen))[01;36m)[00m
					[01;36m(MF[00m
						(NX
							(ART eine)
							(NN stunde))[01;36m)[00m[01;36m)[00m)))) [01;33mSIMPX)[00m
Step:Modifier Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'ADVX'], 'mover info': [('ADVX', (18, 19))], 'old_family': ['ADVX', 'LK'], 'start left siblings': [], 'auto preterminals': ('KON', 'NN', 'VVFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'PTKA', 'ADJD', 'PPER', 'VAFIN', 'ADV', 'ADV', 'ART', 'NN', 'APPR', 'PRF', 'NN', 'VVFIN', 'CARD', 'NN', 'CARD', 'NN', 'KON', 'NN', 'ART', 'NN'), 'start right siblings': ['LK'], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (0, 28), 'movers': ['ADVX'], 'old_parent': 'SIMPX', 'POS confusion': ('NN', 'NN'), 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(SIMPX und zugfahren dauert mir vielleicht auch ein bischen zu lange)
		(SIMPX
			(VF ich)
			(LK habe)
			(MF jetzt hier den plan vor mir)
			(ADVX
				[01;31m(NX[00m
					(NN zugdauer)[01;31m)[00m))
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m
				(LK
					(VXFIN
						(VVFIN dauert)))[01;31m)[00m
			(MF
				(NX
					(MF drei stunden zwanzig minuten)
					(KON und)
					[01;36m(LKM[00m
						[01;36m(VXFIN[00m
							(LK
								(NN fliegen))[01;36m)[00m
						[01;36m(MF[00m
							(NX
								(ART eine)
								(NN stunde))[01;36m)[00m[01;36m)[00m))[01;36m)[00m))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['LK', 'MF'], 'mover info': [('MF', (20, 28))], 'old_family': ['SIMPX', 'SIMPX', 'SIMPX', 'MF'], 'start left siblings': ['SIMPX', 'SIMPX', 'SIMPX'], 'auto preterminals': ('KON', 'NN', 'VVFIN', 'PPER', 'ADV', 'ADV', 'ART', 'PIS', 'PTKA', 'ADJD', 'PPER', 'VAFIN', 'ADV', 'ADV', 'ART', 'NN', 'APPR', 'PRF', 'NN', 'VVFIN', 'CARD', 'NN', 'CARD', 'NN', 'KON', 'NN', 'ART', 'NN'), 'start right siblings': [], 'end left siblings': ['LK'], 'auto preterminal span': (0, 28), 'movers': ['MF'], 'old_parent': 'TURN', 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(SIMPX und zugfahren dauert mir vielleicht auch ein bischen zu lange)
		(SIMPX
			(VF ich)
			(LK habe)
			(MF jetzt hier den plan vor mir)
			(ADVX
				[01;31m(NX[00m
					(NN zugdauer)[01;31m)[00m))
		(SIMPX
			(LK dauert)
			(MF
				(NX
					(MF drei stunden zwanzig minuten)
					(KON und)
					[01;36m(LKM[00m
						[01;36m(VXFIN[00m
							(LK
								(NN fliegen))[01;36m)[00m
						[01;36m(MF[00m
							(NX
								(ART eine)
								(NN stunde))[01;36m)[00m[01;36m)[00m)))))
Step:Unary
{'subtrees': ['LK'], 'family': ['MF', 'KON', 'VXFIN', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN',), 'right siblings': [(NX (ART eine) (NN stunde))], 'left siblings': [(MF (NX (NX (ADJX (CARD drei)) (NN stunden)) (NX (ADJX (CARD zwanzig)) (NN minuten)))), (KON und)], 'auto preterminal span': (25, 26), 'span': (25, 26), 'parent': 'NX', 'label': 'VXFIN', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SIMPX und zugfahren dauert mir vielleicht auch ein bischen zu lange)
		(SIMPX
			(VF ich)
			(LK habe)
			(MF jetzt hier den plan vor mir)
			(ADVX
				[01;31m(NX[00m
					(NN zugdauer)[01;31m)[00m))
		(SIMPX
			(LK dauert)
			(MF
				(NX
					(MF drei stunden zwanzig minuten)
					(KON und)
					[01;36m(LKM[00m
						(VXFIN fliegen)
						[01;36m(MF[00m
							(NX
								(ART eine)
								(NN stunde))[01;36m)[00m[01;36m)[00m)))))
Step:UNSET add
{'subtrees': ['VXFIN', 'NX'], 'family': ['MF', 'KON', 'LKM'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN', 'ART', 'NN'), 'right siblings': [], 'left siblings': [(MF (NX (NX (ADJX (CARD drei)) (NN stunden)) (NX (ADJX (CARD zwanzig)) (NN minuten)))), (KON und)], 'auto preterminal span': (25, 28), 'span': (25, 28), 'parent': 'NX', 'label': 'LKM', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(SIMPX und zugfahren dauert mir vielleicht auch ein bischen zu lange)
		(SIMPX
			(VF ich)
			(LK habe)
			(MF jetzt hier den plan vor mir)
			(ADVX
				[01;31m(NX[00m
					(NN zugdauer)[01;31m)[00m))
		(SIMPX
			(LK dauert)
			(MF
				(NX
					(MF drei stunden zwanzig minuten)
					(KON und)
					(LKM
						(VXFIN fliegen)
						[01;36m(MF[00m
							(NX
								(ART eine)
								(NN stunde))[01;36m)[00m))))))
Step:Unary
{'subtrees': ['NX'], 'family': ['VXFIN', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN'), 'right siblings': [], 'left siblings': [(VXFIN (LK (NN fliegen)))], 'auto preterminal span': (26, 28), 'span': (26, 28), 'parent': 'LKM', 'label': 'MF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(SIMPX und zugfahren dauert mir vielleicht auch ein bischen zu lange)
		(SIMPX
			(VF ich)
			(LK habe)
			(MF jetzt hier den plan vor mir)
			(ADVX
				[01;31m(NX[00m
					(NN zugdauer)[01;31m)[00m))
		(SIMPX dauert drei stunden zwanzig minuten und fliegen eine stunde)))
Step:Single Word Phrase
{'subtrees': ['NN'], 'family': ['NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('NN',), 'right siblings': [], 'parent': 'ADVX', 'auto preterminal span': (18, 19), 'span': (18, 19), 'left siblings': [], 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP und zugfahren dauert mir vielleicht auch ein bischen zu lange ich habe jetzt hier den plan vor mir zugdauer dauert drei stunden zwanzig minuten und fliegen eine stunde)

Sentence 681:
0 Initial errors
0 on fringe, 0 iterations

Sentence 682:
2 Initial errors
0 on fringe, 1 iterations
2 Error:Different label
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM also)
		(SIMPX
			[01;36m(VF[00m [01;31m(LV[00m
				(SIMPX
					(C wenn)
					(MF es ihnen da nicht)
					(VC past))[01;31m)[00m[01;36m)[00m
			(LK konnen)
			(MF wir auch am zweiten juliwochenende)
			(VC fahren))
		(SIMPX ich bin da flexibler)))
Step:Different label
{'family': ['VF', 'LK', 'MF', 'VC'], 'auto preterminal span': (2, 8), 'span': (2, 8), 'subtrees': ['SIMPX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('KOUS', 'PPER', 'PPER', 'ADV', 'PTKNEG', 'VVFIN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('LV', 'VF')}
(TOP ja also wenn es ihnen da nicht past konnen wir auch am zweiten juliwochenende fahren ich bin da flexibler)

Sentence 683:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX mussen wir uns auf das hotel einigen)
		(SIMPX
			(VF ich)
			(LK wurde)
			(VC sagen)
			(NF
				(ADJX
					(ADJX am besten)
					[01;36m(NX[00m
						(ADJD zentral)[01;36m)[00m)))))
Step:Single Word Phrase
{'subtrees': ['ADJD'], 'family': ['ADJX', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ADJD',), 'right siblings': [], 'left siblings': [(ADJX (PTKA am) (ADJD besten))], 'auto preterminal span': (13, 14), 'span': (13, 14), 'parent': 'ADJX', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP ja mussen wir uns auf das hotel einigen ich wurde sagen am besten zentral)

Sentence 684:
0 Initial errors
0 on fringe, 0 iterations

Sentence 685:
5 Initial errors
0 on fringe, 4 iterations
2 Error:Single Word Phrase
1 Error:PP Attachment
1 Error:Unary
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(SIMPX machen sie)
		(SIMPX
			(VF ich)
			(LK weis)
			(MF nicht)
			(NF
				(SIMPX
					(C ob)
					(MF
						[01;36m(MF[00m
							(NX es)
							(ADVX vielleicht)
							(ADVX auch)
							(PX uber das reiseburo)[01;36m)[00m
						[01;36m(VXINF[00m [01;31m(ADJX[00m
							(ADJD moglich)[01;31m)[00m[01;36m)[00m)
					(VC ware))))
		(SIMPX ich konnte ja mal nachfragen)
		(SIMPX
			[01;31m(VF[00m
				[01;31m(SIMPX[00m
					(KOORD und)
					(C wenn)
					(MF nicht)[01;31m)[00m[01;31m)[00m
			(LK konnen)
			(MF wir ja)
			(VC weitersehen))
		(DM ja)
		(SIMPX das ware vielleicht das beste)))
Step:Single Word Phrase
{'family': ['NX', 'ADVX', 'ADVX', 'PX', 'VXINF'], 'auto preterminal span': (12, 13), 'span': (12, 13), 'subtrees': ['ADJD'], 'parent': 'MF', 'over_word': True, 'auto preterminals': ('ADJD',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADJX', 'VXINF')}
(TOP
	(TURN
		(SIMPX machen sie)
		(SIMPX
			(VF ich)
			(LK weis)
			(MF nicht)
			(NF
				(SIMPX
					(C ob)
					(MF
						[01;36m(MF[00m
							(NX es)
							(ADVX vielleicht)
							(ADVX auch)
							(PX uber das reiseburo)[01;36m)[00m
						(VXINF moglich))
					(VC ware))))
		(SIMPX ich konnte ja mal nachfragen)
		(SIMPX
			[01;31m(VF[00m
				[01;31m(SIMPX[00m
					(KOORD und)
					(C wenn)
					(MF nicht)[01;31m)[00m[01;31m)[00m
			(LK konnen)
			(MF wir ja)
			(VC weitersehen))
		(DM ja)
		(SIMPX das ware vielleicht das beste)))
Step:PP Attachment
{'subtrees': ['NX', 'ADVX', 'ADVX', 'PX'], 'family': ['MF', 'VXINF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'ADV', 'ADV', 'APPR', 'ART', 'NN'), 'right siblings': [(VXINF (ADJD moglich))], 'left siblings': [], 'auto preterminal span': (6, 12), 'span': (6, 12), 'parent': 'MF', 'label': 'MF', 'classified_type': 'PP Attachment', 'type': 'add'}
(TOP
	(TURN
		(SIMPX machen sie)
		(SIMPX ich weis nicht ob es vielleicht auch uber das reiseburo moglich ware)
		(SIMPX ich konnte ja mal nachfragen)
		(SIMPX
			[01;31m(VF[00m
				[01;31m(SIMPX[00m
					(KOORD und)
					(C wenn)
					(MF nicht)[01;31m)[00m[01;31m)[00m
			(LK konnen)
			(MF wir ja)
			(VC weitersehen))
		(DM ja)
		(SIMPX das ware vielleicht das beste)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['VF', 'LK', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'KOUS', 'PTKNEG', 'VMFIN', 'PPER', 'ADV', 'VVINF'), 'right siblings': ['LK', 'MF', 'VC'], 'parent': 'SIMPX', 'auto preterminal span': (19, 26), 'span': (19, 22), 'left siblings': [], 'label': 'VF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(SIMPX machen sie)
		(SIMPX ich weis nicht ob es vielleicht auch uber das reiseburo moglich ware)
		(SIMPX ich konnte ja mal nachfragen)
		(SIMPX
			[01;31m(SIMPX[00m
				(KOORD und)
				(C wenn)
				(MF nicht)[01;31m)[00m
			(LK konnen)
			(MF wir ja)
			(VC weitersehen))
		(DM ja)
		(SIMPX das ware vielleicht das beste)))
Step:UNSET remove
{'subtrees': ['KOORD', 'C', 'MF'], 'family': ['SIMPX', 'LK', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('KON', 'KOUS', 'PTKNEG', 'VMFIN', 'PPER', 'ADV', 'VVINF'), 'right siblings': ['LK', 'MF', 'VC'], 'parent': 'SIMPX', 'auto preterminal span': (19, 26), 'span': (19, 22), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP machen sie ich weis nicht ob es vielleicht auch uber das reiseburo moglich ware ich konnte ja mal nachfragen und wenn nicht konnen wir ja weitersehen ja das ware vielleicht das beste)

Sentence 686:
18 Initial errors
0 on fringe, 11 iterations
4 Error:PP Attachment
2 Error:Single Word Phrase
2 Error:Modifier Attachment
2 Error:UNSET move
2 Error:NP Internal Structure
1 Error:UNSET remove
1 Error:Unary
1 Error:Unary
1 Error:UNSET remove
1 Error:Unary
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(PX mit den veranstaltungen)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK sehe)
			[01;31m(MF[00m [01;33m(MF[00m
				(ADVX
					(ADV gerade))[01;31m)[00m
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					[01;31m(VF[00m
						[01;31m(PX[00m
							[01;31m(PX[00m
								[01;36m(ADJX[00m [01;31m(ADVX[00m
									(ADV genau)[01;31m)[00m[01;36m)[00m
								[01;36m(PX[00m
									(APPR in)
									(NX der woche)[01;36m)[00m[01;31m)[00m [01;33mMF)[00m
							[01;36m(PX[00m [01;31m(R[00m
								[01;31m(C[00m
									[01;31m(PX[00m
										(APPR in)
										[01;33m(R[00m (NX der)[01;31m)[00m[01;31m)[00m
								(MF wir da)
								(VC sein werden)[01;31m)[00m[01;36m)[00m[01;31m)[00m[01;31m)[00m [01;33mR)[00m
					(LK ist)
					(MF das schutzenfest)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX
			(VF das)
			(LK wird)
			(MF
				(NX
					[01;36m(NX[00m
						(KOKOM als)
						[01;31m(NX[00m
							(ADJX grostes)
							(NN schutzenfest)[01;31m)[00m[01;36m)[00m
					(NX der welt)))
			(VC deklariert))
		(SIMPX da konnten wir mal vorbeischauen)))
Step:PP Attachment
{'new_parent': 'MF', 'new_family': ['ADVX', 'PX'], 'mover info': [('PX', (7, 11))], 'old_family': ['PX', 'R'], 'start left siblings': [], 'auto preterminals': ('PPER', 'VVFIN', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'APPR', 'PRELS', 'PPER', 'ADV', 'VAINF', 'VAFIN', 'VAFIN', 'ART', 'NN'), 'start right siblings': ['R'], 'end left siblings': ['ADVX'], 'auto preterminal span': (4, 20), 'movers': ['PX'], 'old_parent': 'PX', 'end right siblings': [], 'classified_type': 'PP Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(PX mit den veranstaltungen)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK sehe)
			(MF
				(ADVX gerade)
				[01;31m(PX[00m
					[01;36m(ADJX[00m [01;31m(ADVX[00m
						(ADV genau)[01;31m)[00m[01;36m)[00m
					[01;36m(PX[00m
						(APPR in)
						(NX der woche)[01;36m)[00m[01;31m)[00m)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					[01;31m(VF[00m
						(PX
							[01;31m(R[00m
								[01;31m(C[00m
									[01;31m(PX[00m
										(APPR in)
										[01;33m(R[00m (NX der)[01;31m)[00m[01;31m)[00m
								(MF wir da)
								(VC sein werden)[01;31m)[00m)[01;31m)[00m [01;33mR)[00m
					(LK ist)
					(MF das schutzenfest)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX
			(VF das)
			(LK wird)
			(MF
				(NX
					[01;36m(NX[00m
						(KOKOM als)
						[01;31m(NX[00m
							(ADJX grostes)
							(NN schutzenfest)[01;31m)[00m[01;36m)[00m
					(NX der welt)))
			(VC deklariert))
		(SIMPX da konnten wir mal vorbeischauen)))
Step:Single Word Phrase
{'family': ['ADJX', 'APPR', 'NX'], 'auto preterminal span': (7, 8), 'span': (7, 8), 'subtrees': ['ADV'], 'parent': 'PX', 'over_word': True, 'auto preterminals': ('ADV',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('ADVX', 'ADJX')}
(TOP
	(TURN
		(DM ja)
		(PX mit den veranstaltungen)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK sehe)
			(MF
				(ADVX gerade)
				[01;31m(PX[00m
					(ADJX genau)
					[01;36m(PX[00m
						(APPR in)
						(NX der woche)[01;36m)[00m[01;31m)[00m)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					[01;31m(VF[00m
						(PX
							[01;31m(R[00m
								[01;31m(C[00m
									[01;31m(PX[00m
										(APPR in)
										[01;33m(R[00m (NX der)[01;31m)[00m[01;31m)[00m
								(MF wir da)
								(VC sein werden)[01;31m)[00m)[01;31m)[00m [01;33mR)[00m
					(LK ist)
					(MF das schutzenfest)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX
			(VF das)
			(LK wird)
			(MF
				(NX
					[01;36m(NX[00m
						(KOKOM als)
						[01;31m(NX[00m
							(ADJX grostes)
							(NN schutzenfest)[01;31m)[00m[01;36m)[00m
					(NX der welt)))
			(VC deklariert))
		(SIMPX da konnten wir mal vorbeischauen)))
Step:Modifier Attachment
{'new_parent': 'MF', 'new_family': ['ADVX', 'ADJX', 'PX'], 'mover info': [('ADJX', (7, 8))], 'old_family': ['ADJX', 'APPR', 'NX'], 'start left siblings': [], 'auto preterminals': ('ADV', 'ADV', 'APPR', 'ART', 'NN'), 'start right siblings': ['APPR', 'NX'], 'end left siblings': ['ADVX'], 'auto preterminal span': (6, 11), 'movers': ['ADJX'], 'old_parent': 'PX', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['PX'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(PX mit den veranstaltungen)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK sehe)
			(MF gerade genau in der woche)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					[01;31m(VF[00m
						(PX
							[01;31m(R[00m
								[01;31m(C[00m
									[01;31m(PX[00m
										(APPR in)
										[01;33m(R[00m (NX der)[01;31m)[00m[01;31m)[00m
								(MF wir da)
								(VC sein werden)[01;31m)[00m)[01;31m)[00m [01;33mR)[00m
					(LK ist)
					(MF das schutzenfest)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX
			(VF das)
			(LK wird)
			(MF
				(NX
					[01;36m(NX[00m
						(KOKOM als)
						[01;31m(NX[00m
							(ADJX grostes)
							(NN schutzenfest)[01;31m)[00m[01;36m)[00m
					(NX der welt)))
			(VC deklariert))
		(SIMPX da konnten wir mal vorbeischauen)))
Step:UNSET move
{'new_parent': 'PX', 'new_family': ['APPR', 'R'], 'mover info': [('APPR', (11, 12))], 'old_family': ['APPR', 'NX'], 'start left siblings': [], 'auto preterminals': ('APPR', 'PRELS', 'PPER', 'ADV', 'VAINF', 'VAFIN'), 'start right siblings': ['NX'], 'end left siblings': [], 'auto preterminal span': (11, 17), 'movers': ['APPR'], 'old_parent': 'PX', 'POS confusion': ('APPR', 'APPR'), 'end right siblings': ['R'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(PX mit den veranstaltungen)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK sehe)
			(MF gerade genau in der woche)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					[01;31m(VF[00m
						(PX
							(APPR in)
							(R
								[01;31m(C[00m
									[01;31m(PX[00m
										(NX
											(PRELS der))[01;31m)[00m[01;31m)[00m
								(MF wir da)
								(VC sein werden)))[01;31m)[00m
					(LK ist)
					(MF das schutzenfest)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX
			(VF das)
			(LK wird)
			(MF
				(NX
					[01;36m(NX[00m
						(KOKOM als)
						[01;31m(NX[00m
							(ADJX grostes)
							(NN schutzenfest)[01;31m)[00m[01;36m)[00m
					(NX der welt)))
			(VC deklariert))
		(SIMPX da konnten wir mal vorbeischauen)))
Step:NP Internal Structure
{'new_parent': 'NX', 'new_family': ['KOKOM', 'ADJX', 'NN'], 'mover info': [('KOKOM', (22, 23))], 'old_family': ['KOKOM', 'NX', 'NX'], 'start left siblings': [], 'auto preterminals': ('KOKOM', 'ADJA', 'NN', 'ART', 'NN'), 'start right siblings': ['NX', 'NX'], 'end left siblings': [], 'auto preterminal span': (22, 27), 'movers': ['KOKOM'], 'old_parent': 'NX', 'POS confusion': ('KOKOM', 'KOKOM'), 'end right siblings': ['ADJX', 'NN'], 'classified_type': 'NP Internal Structure', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(PX mit den veranstaltungen)
		[01;31m(SIMPX[00m
			(VF ich)
			(LK sehe)
			(MF gerade genau in der woche)
			[01;31m(NF[00m
				[01;31m(SIMPX[00m
					[01;31m(VF[00m
						(PX
							(APPR in)
							(R
								[01;31m(C[00m
									[01;31m(PX[00m
										(NX
											(PRELS der))[01;31m)[00m[01;31m)[00m
								(MF wir da)
								(VC sein werden)))[01;31m)[00m
					(LK ist)
					(MF das schutzenfest)[01;31m)[00m[01;31m)[00m[01;31m)[00m
		(SIMPX das wird als grostes schutzenfest der welt deklariert)
		(SIMPX da konnten wir mal vorbeischauen)))
Step:UNSET remove
{'subtrees': ['VF', 'LK', 'MF', 'NF'], 'family': ['DM', 'PX', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'APPR', 'ART', 'NN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'APPR', 'PRELS', 'PPER', 'ADV', 'VAINF', 'VAFIN', 'VAFIN', 'ART', 'NN', 'PDS', 'VAFIN', 'KOKOM', 'ADJA', 'NN', 'ART', 'NN', 'VVPP', 'ADV', 'VMFIN', 'PPER', 'ADV', 'VVINF'), 'right siblings': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 33), 'span': (4, 20), 'left siblings': ['DM', 'PX'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(PX mit den veranstaltungen)
		(VF ich)
		(LK sehe)
		(MF gerade genau in der woche)
		[01;31m(NF[00m
			[01;31m(SIMPX[00m
				[01;31m(VF[00m
					(PX
						(APPR in)
						(R
							[01;31m(C[00m
								[01;31m(PX[00m
									(NX
										(PRELS der))[01;31m)[00m[01;31m)[00m
							(MF wir da)
							(VC sein werden)))[01;31m)[00m
				(LK ist)
				(MF das schutzenfest)[01;31m)[00m[01;31m)[00m
		(SIMPX das wird als grostes schutzenfest der welt deklariert)
		(SIMPX da konnten wir mal vorbeischauen)))
Step:Unary
{'subtrees': ['PX'], 'family': ['VF', 'LK', 'MF'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'PRELS', 'PPER', 'ADV', 'VAINF', 'VAFIN', 'VAFIN', 'ART', 'NN'), 'right siblings': ['LK', 'MF'], 'parent': 'SIMPX', 'auto preterminal span': (11, 20), 'span': (11, 17), 'left siblings': [], 'label': 'VF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(PX mit den veranstaltungen)
		(VF ich)
		(LK sehe)
		(MF gerade genau in der woche)
		[01;31m(NF[00m
			[01;31m(SIMPX[00m
				(PX
					(APPR in)
					(R
						[01;31m(C[00m
							[01;31m(PX[00m
								(NX
									(PRELS der))[01;31m)[00m[01;31m)[00m
						(MF wir da)
						(VC sein werden)))
				(LK ist)
				(MF das schutzenfest)[01;31m)[00m[01;31m)[00m
		(SIMPX das wird als grostes schutzenfest der welt deklariert)
		(SIMPX da konnten wir mal vorbeischauen)))
Step:Unary
{'subtrees': ['SIMPX'], 'family': ['DM', 'PX', 'VF', 'LK', 'MF', 'NF', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'APPR', 'ART', 'NN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'APPR', 'PRELS', 'PPER', 'ADV', 'VAINF', 'VAFIN', 'VAFIN', 'ART', 'NN', 'PDS', 'VAFIN', 'KOKOM', 'ADJA', 'NN', 'ART', 'NN', 'VVPP', 'ADV', 'VMFIN', 'PPER', 'ADV', 'VVINF'), 'right siblings': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 33), 'span': (11, 20), 'left siblings': ['DM', 'PX', 'VF', 'LK', 'MF'], 'label': 'NF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(PX mit den veranstaltungen)
		(VF ich)
		(LK sehe)
		(MF gerade genau in der woche)
		[01;31m(SIMPX[00m
			(PX
				(APPR in)
				(R
					[01;31m(C[00m
						[01;31m(PX[00m
							(NX
								(PRELS der))[01;31m)[00m[01;31m)[00m
					(MF wir da)
					(VC sein werden)))
			(LK ist)
			(MF das schutzenfest)[01;31m)[00m
		(SIMPX das wird als grostes schutzenfest der welt deklariert)
		(SIMPX da konnten wir mal vorbeischauen)))
Step:UNSET remove
{'subtrees': ['PX', 'LK', 'MF'], 'family': ['DM', 'PX', 'VF', 'LK', 'MF', 'SIMPX', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'APPR', 'ART', 'NN', 'PPER', 'VVFIN', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'APPR', 'PRELS', 'PPER', 'ADV', 'VAINF', 'VAFIN', 'VAFIN', 'ART', 'NN', 'PDS', 'VAFIN', 'KOKOM', 'ADJA', 'NN', 'ART', 'NN', 'VVPP', 'ADV', 'VMFIN', 'PPER', 'ADV', 'VVINF'), 'right siblings': ['SIMPX', 'SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 33), 'span': (11, 20), 'left siblings': ['DM', 'PX', 'VF', 'LK', 'MF'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(PX mit den veranstaltungen)
		(VF ich)
		(LK sehe)
		(MF gerade genau in der woche)
		(PX
			(APPR in)
			(R
				[01;31m(C[00m
					[01;31m(PX[00m
						(NX
							(PRELS der))[01;31m)[00m[01;31m)[00m
				(MF wir da)
				(VC sein werden)))
		(LK ist)
		(MF das schutzenfest)
		(SIMPX das wird als grostes schutzenfest der welt deklariert)
		(SIMPX da konnten wir mal vorbeischauen)))
Step:Unary
{'subtrees': ['NX'], 'family': ['PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PRELS',), 'right siblings': [], 'parent': 'C', 'auto preterminal span': (12, 13), 'span': (12, 13), 'left siblings': [], 'label': 'PX', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(PX mit den veranstaltungen)
		(VF ich)
		(LK sehe)
		(MF gerade genau in der woche)
		(PX
			(APPR in)
			(R
				[01;31m(C[00m
					(NX
						(PRELS der))[01;31m)[00m
				(MF wir da)
				(VC sein werden)))
		(LK ist)
		(MF das schutzenfest)
		(SIMPX das wird als grostes schutzenfest der welt deklariert)
		(SIMPX da konnten wir mal vorbeischauen)))
Step:Unary
{'subtrees': ['NX'], 'family': ['C', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('PRELS', 'PPER', 'ADV', 'VAINF', 'VAFIN'), 'right siblings': ['MF', 'VC'], 'parent': 'R', 'auto preterminal span': (12, 17), 'span': (12, 13), 'left siblings': [], 'label': 'C', 'classified_type': 'Unary', 'type': 'remove'}
(TOP ja mit den veranstaltungen ich sehe gerade genau in der woche in der wir da sein werden ist das schutzenfest das wird als grostes schutzenfest der welt deklariert da konnten wir mal vorbeischauen)

Sentence 687:
0 Initial errors
0 on fringe, 0 iterations

Sentence 688:
0 Initial errors
0 on fringe, 0 iterations

Sentence 689:
1 Initial errors
0 on fringe, 1 iterations
1 Error:Unary
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF da)
			(LK geht)
			(MF uns auch nicht soviel zeit)
			[01;36m(VXINF[00m
				(VC
					(PTKVZ verloren))[01;36m)[00m)
		(DM ja)
		(SIMPX wie machen wir das)
		(SIMPX rufen sie beim reiseburo an oder soll ich es machen)
		(PX wegen der flugverbindung)))
Step:Unary
{'subtrees': ['VC'], 'family': ['VF', 'LK', 'MF', 'VXINF'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKVZ',), 'right siblings': [], 'left siblings': [(VF (ADVX (ADV da))), (LK (VXFIN (VVFIN geht))), (MF (NX (PPER uns)) (ADVX (ADV auch)) (ADVX (PTKNEG nicht)) (NX (PIAT soviel) (NN zeit)))], 'auto preterminal span': (8, 9), 'span': (8, 9), 'parent': 'SIMPX', 'label': 'VXINF', 'classified_type': 'Unary', 'type': 'add'}
(TOP ja da geht uns auch nicht soviel zeit verloren ja wie machen wir das rufen sie beim reiseburo an oder soll ich es machen wegen der flugverbindung)

Sentence 690:
12 Initial errors
0 on fringe, 6 iterations
4 Error:Clause Attachment
2 Error:Single Word Phrase
2 Error:Different label
1 Error:UNSET remove
1 Error:Unary
2 Error:PP Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF ich)
			(LK meine)
			[01;36m(NF[00m
				[01;36m(SIMPX[00m
					[01;31m(SIMPX[00m
						(VF wir)
						(LK hatten)[01;31m)[00m
					[01;31m(NF[00m
						[01;31m(SIMPX[00m
							[01;31m(VF[00m
								[01;31m(NX[00m
									(NX letztes mal)
									[01;33m(SIMPX[00m (PX bei der expo)[01;31m)[00m[01;31m)[00m
							(LK hatten)
							(MF
								(NX wir)
								[01;36m(ADJX[00m [01;31m(NX[00m
									[01;36m(ADJX[00m [01;31m(NX[00m
										(NN flugmoglichkeiten)[01;31m)[00m[01;36m)[00m
									(PX um sieben uhr zehn und acht uhr zehn)[01;31m)[00m[01;36m)[00m)
							(VC gehabt)[01;31m)[00m[01;31m)[00m[01;36m)[00m[01;36m)[00m))) [01;33mSIMPX)[00m
Step:Clause Attachment
{'new_parent': 'SIMPX', 'new_family': ['SIMPX', 'VF', 'LK', 'MF', 'VC'], 'mover info': [('SIMPX', (3, 5))], 'old_family': ['VF', 'LK', 'SIMPX', 'NF'], 'start left siblings': ['VF', 'LK'], 'auto preterminals': ('PPER', 'VVFIN', 'PPER', 'VAFIN', 'ADJA', 'NN', 'APPR', 'ART', 'NE', 'VAFIN', 'PPER', 'NN', 'APPR', 'CARD', 'NN', 'CARD', 'KON', 'CARD', 'NN', 'CARD', 'VAPP'), 'start right siblings': ['NF'], 'end left siblings': [], 'auto preterminal span': (1, 22), 'movers': ['SIMPX'], 'old_parent': 'SIMPX', 'end right siblings': ['VF', 'LK', 'MF', 'VC'], 'classified_type': 'Clause Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF ich)
			(LK meine)
			(NF
				(SIMPX
					[01;31m(SIMPX[00m
						(VF wir)
						(LK hatten)[01;31m)[00m
					[01;31m(VF[00m
						[01;31m(NX[00m
							(NX letztes mal)
							[01;33m(SIMPX[00m (PX bei der expo)[01;31m)[00m[01;31m)[00m
					(LK hatten)
					(MF
						(NX wir)
						[01;36m(ADJX[00m [01;31m(NX[00m
							[01;36m(ADJX[00m [01;31m(NX[00m
								(NN flugmoglichkeiten)[01;31m)[00m[01;36m)[00m
							(PX um sieben uhr zehn und acht uhr zehn)[01;31m)[00m[01;36m)[00m)
					(VC gehabt)))))) [01;33mSIMPX)[00m
Step:Single Word Phrase
{'family': ['ADJX', 'PX'], 'auto preterminal span': (12, 13), 'span': (12, 13), 'subtrees': ['NN'], 'parent': 'NX', 'over_word': True, 'auto preterminals': ('NN',), 'classified_type': 'Single Word Phrase', 'type': 'relabel', 'change': ('NX', 'ADJX')}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF ich)
			(LK meine)
			(NF
				(SIMPX
					[01;31m(SIMPX[00m
						(VF wir)
						(LK hatten)[01;31m)[00m
					[01;31m(VF[00m
						[01;31m(NX[00m
							(NX letztes mal)
							[01;33m(SIMPX[00m (PX bei der expo)[01;31m)[00m[01;31m)[00m
					(LK hatten)
					(MF
						(NX wir)
						[01;36m(ADJX[00m [01;31m(NX[00m
							(ADJX flugmoglichkeiten)
							(PX um sieben uhr zehn und acht uhr zehn)[01;31m)[00m[01;36m)[00m)
					(VC gehabt)))))) [01;33mSIMPX)[00m
Step:Different label
{'family': ['NX', 'ADJX'], 'auto preterminal span': (12, 21), 'span': (12, 21), 'subtrees': ['ADJX', 'PX'], 'parent': 'MF', 'over_word': False, 'auto preterminals': ('NN', 'APPR', 'CARD', 'NN', 'CARD', 'KON', 'CARD', 'NN', 'CARD'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('NX', 'ADJX')}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF ich)
			(LK meine)
			(NF
				(SIMPX
					[01;31m(SIMPX[00m
						(VF wir)
						(LK hatten)[01;31m)[00m
					[01;31m(VF[00m
						[01;31m(NX[00m
							(NX letztes mal)
							[01;33m(SIMPX[00m (PX bei der expo)[01;31m)[00m[01;31m)[00m
					(LK hatten)
					(MF wir flugmoglichkeiten um sieben uhr zehn und acht uhr zehn)
					(VC gehabt)))))) [01;33mSIMPX)[00m
Step:UNSET remove
{'subtrees': ['VF', 'LK'], 'family': ['SIMPX', 'VF', 'LK', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'ADJA', 'NN', 'APPR', 'ART', 'NE', 'VAFIN', 'PPER', 'NN', 'APPR', 'CARD', 'NN', 'CARD', 'KON', 'CARD', 'NN', 'CARD', 'VAPP'), 'right siblings': ['VF', 'LK', 'MF', 'VC'], 'parent': 'SIMPX', 'auto preterminal span': (3, 22), 'span': (3, 5), 'left siblings': [], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF ich)
			(LK meine)
			(NF
				(SIMPX
					(VF wir)
					(LK hatten)
					[01;31m(VF[00m
						[01;31m(NX[00m
							(NX letztes mal)
							[01;33m(SIMPX[00m (PX bei der expo)[01;31m)[00m[01;31m)[00m
					(LK hatten)
					(MF wir flugmoglichkeiten um sieben uhr zehn und acht uhr zehn)
					(VC gehabt)))))) [01;33mSIMPX)[00m
Step:Unary
{'subtrees': ['NX'], 'family': ['VF', 'LK', 'VF', 'LK', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('PPER', 'VAFIN', 'ADJA', 'NN', 'APPR', 'ART', 'NE', 'VAFIN', 'PPER', 'NN', 'APPR', 'CARD', 'NN', 'CARD', 'KON', 'CARD', 'NN', 'CARD', 'VAPP'), 'right siblings': ['LK', 'MF', 'VC'], 'parent': 'SIMPX', 'auto preterminal span': (3, 22), 'span': (5, 10), 'left siblings': ['VF', 'LK'], 'label': 'VF', 'classified_type': 'Unary', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX
			(VF ich)
			(LK meine)
			(NF
				(SIMPX
					(VF wir)
					(LK hatten)
					[01;31m(NX[00m
						(NX letztes mal)
						[01;33m(SIMPX[00m (PX bei der expo)[01;31m)[00m
					(LK hatten)
					(MF wir flugmoglichkeiten um sieben uhr zehn und acht uhr zehn)
					(VC gehabt)))))) [01;33mSIMPX)[00m
Step:PP Attachment
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'NX', 'PX', 'LK', 'MF', 'VC'], 'mover info': [('PX', (7, 10))], 'old_family': ['NX', 'PX'], 'start left siblings': ['NX'], 'auto preterminals': ('PPER', 'VAFIN', 'ADJA', 'NN', 'APPR', 'ART', 'NE', 'VAFIN', 'PPER', 'NN', 'APPR', 'CARD', 'NN', 'CARD', 'KON', 'CARD', 'NN', 'CARD', 'VAPP'), 'start right siblings': [], 'end left siblings': ['VF', 'LK', 'NX'], 'auto preterminal span': (3, 22), 'adding node already present': False, 'movers': ['PX'], 'old_parent': 'NX', 'added and moved': True, 'end right siblings': ['LK', 'MF', 'VC'], 'classified_type': 'PP Attachment', 'type': 'move', 'added label': 'SIMPX'}
(TOP ja ich meine wir hatten letztes mal bei der expo hatten wir flugmoglichkeiten um sieben uhr zehn und acht uhr zehn gehabt)

Sentence 691:
0 Initial errors
0 on fringe, 0 iterations

Sentence 692:
0 Initial errors
0 on fringe, 0 iterations

Sentence 693:
7 Initial errors
0 on fringe, 3 iterations
4 Error:UNSET move
2 Error:Different label
1 Error:Clause Attachment
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM nee)
		(SIMPX das ware okay)
		(DM also)
		[01;36m(SIMPX[00m
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(VF das wochenende)
				(LK ware)
				(MF der funfte sechste)[01;31m)[00m
			[01;31m(SIMPX[00m
				[01;36m(NF[00m [01;31m(LV[00m
					(SIMPX
						(C wenn)
						(MF wir dann am montag)
						(VC starten))[01;31m)[00m [01;33mSIMPX)[00m[01;36m)[00m
				[01;36m(SIMPX[00m
					(DM genau)
					(LK ware)
					(MF das der siebte juli)[01;36m)[00m[01;31m)[00m[01;36m)[00m))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['VF', 'LK', 'MF', 'LV'], 'mover info': [('LV', (11, 17))], 'old_family': ['LV', 'DM', 'LK', 'MF'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'PDS', 'VAFIN', 'ADJD', 'ADV', 'ART', 'NN', 'VAFIN', 'ART', 'NN', 'NN', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'VVFIN', 'ITJ', 'VAFIN', 'PDS', 'ART', 'ADJA', 'NN'), 'start right siblings': ['DM', 'LK', 'MF'], 'end left siblings': ['VF', 'LK', 'MF'], 'auto preterminal span': (0, 23), 'movers': ['LV'], 'old_parent': 'SIMPX', 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM nee)
		(SIMPX das ware okay)
		(DM also)
		[01;36m(SIMPX[00m
			(SIMPX
				(VF das wochenende)
				(LK ware)
				(MF der funfte sechste)
				[01;36m(NF[00m [01;31m(LV[00m
					(SIMPX
						(C wenn)
						(MF wir dann am montag)
						(VC starten))[01;31m)[00m[01;36m)[00m)
			(SIMPX genau ware das der siebte juli)[01;36m)[00m))
Step:Different label
{'family': ['VF', 'LK', 'MF', 'NF'], 'auto preterminal span': (11, 17), 'span': (11, 17), 'subtrees': ['SIMPX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'VVFIN'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('LV', 'NF')}
(TOP
	(TURN
		(DM nee)
		(SIMPX das ware okay)
		(DM also)
		[01;36m(SIMPX[00m
			(SIMPX das wochenende ware der funfte sechste wenn wir dann am montag starten)
			(SIMPX genau ware das der siebte juli)[01;36m)[00m))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['DM', 'SIMPX', 'DM', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'VAFIN', 'ART', 'NN', 'NN', 'KOUS', 'PPER', 'ADV', 'APPRART', 'NN', 'VVFIN', 'ITJ', 'VAFIN', 'PDS', 'ART', 'ADJA', 'NN'), 'right siblings': [], 'left siblings': [(DM (PTKANT nee)), (SIMPX (VF (NX (PDS das))) (LK (VXFIN (VAFIN ware))) (MF (ADJX (ADJD okay)))), (DM (ADVX (ADV also)))], 'auto preterminal span': (5, 23), 'span': (5, 23), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP nee das ware okay also das wochenende ware der funfte sechste wenn wir dann am montag starten genau ware das der siebte juli)

Sentence 694:
8 Initial errors
0 on fringe, 3 iterations
4 Error:Modifier Attachment
3 Error:UNSET move
1 Error:UNSET remove
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(DM auf jeden fall)
		[01;31m(SIMPX[00m [01;33m(VF (SIMPX[00m
			(LK mochte)
			(MF
				(ADVX auch)
				[01;36m(NX[00m
					[01;33m(NX[00m (ADVX so)
					[01;31m(NX[00m
						[01;31m(NX[00m
							(ART ein)
							(ADJX bischen)
							(PIS was)[01;31m)[00m [01;33mNX)[00m
						(PX von hannover)[01;31m)[00m[01;36m)[00m)
			(VC sehen)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF das wir vielleicht auch ein paar sehenswurdigkeiten uns anschauen) [01;33mSIMPX) VF)[00m
			(LK wurde)
			(MF ich)
			(VC sagen)[01;31m)[00m
		(SIMPX wenn sie da interesse dran haben)))
Step:Modifier Attachment
{'new_parent': 'NX', 'new_family': ['ADVX', 'ART', 'ADJX', 'PIS'], 'mover info': [('ADVX', (6, 7))], 'old_family': ['ADVX', 'ADVX', 'NX'], 'start left siblings': ['ADVX'], 'auto preterminals': ('ADV', 'ADV', 'ART', 'PIDAT', 'PIS', 'APPR', 'NE'), 'start right siblings': ['NX'], 'end left siblings': [], 'auto preterminal span': (5, 12), 'movers': ['ADVX'], 'old_parent': 'MF', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': ['ART', 'ADJX', 'PIS'], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		(DM auf jeden fall)
		[01;31m(SIMPX[00m [01;33m(VF (SIMPX[00m
			(LK mochte)
			(MF auch so ein bischen was von hannover)
			(VC sehen)[01;31m)[00m
		[01;31m(SIMPX[00m
			(VF das wir vielleicht auch ein paar sehenswurdigkeiten uns anschauen) [01;33mSIMPX) VF)[00m
			(LK wurde)
			(MF ich)
			(VC sagen)[01;31m)[00m
		(SIMPX wenn sie da interesse dran haben)))
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['LK', 'MF', 'VC', 'VF'], 'mover info': [('VF', (13, 22))], 'old_family': ['VF', 'LK', 'MF', 'VC'], 'start left siblings': [], 'auto preterminals': ('PTKANT', 'APPR', 'PIDAT', 'NN', 'VMFIN', 'ADV', 'ADV', 'ART', 'PIDAT', 'PIS', 'APPR', 'NE', 'VVINF', 'KOUS', 'PPER', 'ADV', 'ADV', 'ART', 'PIDAT', 'NN', 'PRF', 'VVFIN', 'VAFIN', 'PPER', 'VVINF', 'KOUS', 'PPER', 'ADV', 'NN', 'PROP', 'VAFIN'), 'start right siblings': ['LK', 'MF', 'VC'], 'end left siblings': ['LK', 'MF', 'VC'], 'auto preterminal span': (0, 31), 'adding node already present': False, 'movers': ['VF'], 'old_parent': 'SIMPX', 'added and moved': True, 'end right siblings': [], 'classified_type': 'UNSET move', 'type': 'move', 'added label': 'VF'}
(TOP
	(TURN
		(DM ja)
		(DM auf jeden fall)
		(VF mochte auch so ein bischen was von hannover sehen das wir vielleicht auch ein paar sehenswurdigkeiten uns anschauen)
		[01;31m(SIMPX[00m
			(LK wurde)
			(MF ich)
			(VC sagen)[01;31m)[00m
		(SIMPX wenn sie da interesse dran haben)))
Step:UNSET remove
{'subtrees': ['LK', 'MF', 'VC'], 'family': ['DM', 'DM', 'VF', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'APPR', 'PIDAT', 'NN', 'VMFIN', 'ADV', 'ADV', 'ART', 'PIDAT', 'PIS', 'APPR', 'NE', 'VVINF', 'KOUS', 'PPER', 'ADV', 'ADV', 'ART', 'PIDAT', 'NN', 'PRF', 'VVFIN', 'VAFIN', 'PPER', 'VVINF', 'KOUS', 'PPER', 'ADV', 'NN', 'PROP', 'VAFIN'), 'right siblings': ['SIMPX'], 'parent': 'TURN', 'auto preterminal span': (0, 31), 'span': (22, 25), 'left siblings': ['DM', 'DM', 'VF'], 'label': 'SIMPX', 'classified_type': 'UNSET remove', 'type': 'remove'}
(TOP ja auf jeden fall mochte auch so ein bischen was von hannover sehen das wir vielleicht auch ein paar sehenswurdigkeiten uns anschauen wurde ich sagen wenn sie da interesse dran haben)

Sentence 695:
5 Initial errors
0 on fringe, 5 iterations
1 Error:Modifier Attachment
1 Error:UNSET add
1 Error:Single Word Phrase
1 Error:Clause Attachment
1 Error:Single Word Phrase
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich kenne von einem fruheren aufenthalt noch das maritimstadthotel)
		(SIMPX das fand ich also sehr angenehm)
		(SIMPX es liegt sehr zentral hat einen konferenzraum)
		(SIMPX da konnen wir vielleicht noch nach der messe ein bischen was besprechen)
		[01;31m(ADVX[00m
			(ADVX auch)
			(SIMPX
				(C wenn)
				(MF
					(NX wir)
					(ADVX noch)
					(NX
						[01;36m(NX[00m
							(ART ein)
							[01;31m(ADJX[00m
								(PIDAT paar)[01;31m)[00m[01;36m)[00m
						[01;36m(PX[00m
							(APPR mit)
							(NX
								[01;36m(NX[00m
									(NN teilnehmer)[01;36m)[00m
								(NX der messe))[01;36m)[00m)
					(ADVX mit))
				(VC einladen))[01;31m)[00m))
Step:Modifier Attachment
{'subtrees': ['ART', 'ADJX'], 'family': ['NX', 'APPR', 'NX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'PIDAT'), 'right siblings': [(APPR mit), (NX (NN teilnehmer) (NX (ART der) (NN messe)))], 'left siblings': [], 'auto preterminal span': (39, 41), 'span': (39, 41), 'parent': 'NX', 'label': 'NX', 'classified_type': 'Modifier Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich kenne von einem fruheren aufenthalt noch das maritimstadthotel)
		(SIMPX das fand ich also sehr angenehm)
		(SIMPX es liegt sehr zentral hat einen konferenzraum)
		(SIMPX da konnen wir vielleicht noch nach der messe ein bischen was besprechen)
		[01;31m(ADVX[00m
			(ADVX auch)
			(SIMPX
				(C wenn)
				(MF
					(NX wir)
					(ADVX noch)
					(NX
						(NX
							(ART ein)
							[01;31m(ADJX[00m
								(PIDAT paar)[01;31m)[00m)
						[01;36m(PX[00m
							(APPR mit)
							(NX
								[01;36m(NX[00m
									(NN teilnehmer)[01;36m)[00m
								(NX der messe))[01;36m)[00m)
					(ADVX mit))
				(VC einladen))[01;31m)[00m))
Step:UNSET add
{'subtrees': ['APPR', 'NX'], 'family': ['NX', 'PX'], 'over_word': False, 'over words': False, 'auto preterminals': ('APPR', 'NN', 'ART', 'NN'), 'right siblings': [], 'left siblings': [(NX (ART ein) (ADJX (PIDAT paar)))], 'auto preterminal span': (41, 45), 'span': (41, 45), 'parent': 'NX', 'label': 'PX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich kenne von einem fruheren aufenthalt noch das maritimstadthotel)
		(SIMPX das fand ich also sehr angenehm)
		(SIMPX es liegt sehr zentral hat einen konferenzraum)
		(SIMPX da konnen wir vielleicht noch nach der messe ein bischen was besprechen)
		[01;31m(ADVX[00m
			(ADVX auch)
			(SIMPX
				(C wenn)
				(MF
					(NX wir)
					(ADVX noch)
					(NX
						(NX
							(ART ein)
							[01;31m(ADJX[00m
								(PIDAT paar)[01;31m)[00m)
						(PX
							(APPR mit)
							(NX
								[01;36m(NX[00m
									(NN teilnehmer)[01;36m)[00m
								(NX der messe))))
					(ADVX mit))
				(VC einladen))[01;31m)[00m))
Step:Single Word Phrase
{'subtrees': ['NN'], 'family': ['NX', 'NX'], 'over_word': True, 'over words': True, 'auto preterminals': ('NN',), 'right siblings': [(NX (ART der) (NN messe))], 'left siblings': [], 'auto preterminal span': (42, 43), 'span': (42, 43), 'parent': 'NX', 'label': 'NX', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich kenne von einem fruheren aufenthalt noch das maritimstadthotel)
		(SIMPX das fand ich also sehr angenehm)
		(SIMPX es liegt sehr zentral hat einen konferenzraum)
		(SIMPX da konnen wir vielleicht noch nach der messe ein bischen was besprechen)
		[01;31m(ADVX[00m
			(ADVX auch)
			(SIMPX
				(C wenn)
				(MF
					(NX wir)
					(ADVX noch)
					(NX
						(NX
							(ART ein)
							[01;31m(ADJX[00m
								(PIDAT paar)[01;31m)[00m)
						(PX mit teilnehmer der messe))
					(ADVX mit))
				(VC einladen))[01;31m)[00m))
Step:Clause Attachment
{'subtrees': ['ADVX', 'SIMPX'], 'family': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'PPER', 'VVFIN', 'APPR', 'ART', 'ADJA', 'NN', 'ADV', 'ART', 'NE', 'PDS', 'VVFIN', 'PPER', 'ADV', 'ADV', 'ADJD', 'PPER', 'VVFIN', 'ADV', 'ADJD', 'VAFIN', 'ART', 'NN', 'ADV', 'VMFIN', 'PPER', 'ADV', 'ADV', 'APPR', 'ART', 'NN', 'ART', 'PIDAT', 'PIS', 'VVINF', 'ADV', 'KOUS', 'PPER', 'ADV', 'ART', 'PIDAT', 'APPR', 'NN', 'ART', 'NN', 'ADV', 'VVFIN'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 47), 'span': (35, 47), 'left siblings': ['DM', 'SIMPX', 'SIMPX', 'SIMPX', 'SIMPX'], 'label': 'ADVX', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		(SIMPX ich kenne von einem fruheren aufenthalt noch das maritimstadthotel)
		(SIMPX das fand ich also sehr angenehm)
		(SIMPX es liegt sehr zentral hat einen konferenzraum)
		(SIMPX da konnen wir vielleicht noch nach der messe ein bischen was besprechen)
		(ADVX auch)
		(SIMPX
			(C wenn)
			(MF
				(NX wir)
				(ADVX noch)
				(NX
					(NX
						(ART ein)
						[01;31m(ADJX[00m
							(PIDAT paar)[01;31m)[00m)
					(PX mit teilnehmer der messe))
				(ADVX mit))
			(VC einladen))))
Step:Single Word Phrase
{'subtrees': ['PIDAT'], 'family': ['ART', 'ADJX'], 'over_word': True, 'over words': True, 'auto preterminals': ('ART', 'PIDAT'), 'right siblings': [], 'parent': 'NX', 'auto preterminal span': (39, 41), 'span': (40, 41), 'left siblings': ['ART'], 'label': 'ADJX', 'classified_type': 'Single Word Phrase', 'type': 'remove'}
(TOP ja ich kenne von einem fruheren aufenthalt noch das maritimstadthotel das fand ich also sehr angenehm es liegt sehr zentral hat einen konferenzraum da konnen wir vielleicht noch nach der messe ein bischen was besprechen auch wenn wir noch ein paar mit teilnehmer der messe mit einladen)

Sentence 696:
21 Initial errors
0 on fringe, 15 iterations
4 Error:UNSET move
2 Error:Different label
2 Error:UNSET move
2 Error:Modifier Attachment
1 Error:Unary
1 Error:Single Word Phrase
1 Error:Unary
1 Error:UNSET add
1 Error:Unary
1 Error:Clause Attachment
1 Error:Clause Attachment
1 Error:UNSET add
1 Error:Unary
1 Error:Clause Attachment
1 Error:UNSET add
Step:UNSET init
{'classified_type': 'UNSET init', 'type': 'init'}
(TOP
	(TURN
		(DM ja)
		[01;31m(NX[00m [01;33m(SIMPX (VF (SIMPX[00m
			[01;36m(NX[00m
				[01;36m(VF[00m
					(ART die)[01;36m)[00m[01;36m)[00m
			[01;36m(LK[00m
				[01;36m(VXFIN[00m
					(NN kosten)[01;36m)[00m[01;36m)[00m[01;31m)[00m
		(ART der)
		[01;31m(SIMPX[00m [01;33m(NX (MF[00m
			[01;31m(VF[00m
				[01;31m(NX[00m
					(NX die frage)
					[01;31m(NX[00m
						[01;36m(NX[00m
							(ART der) [01;33mMF) NX)[00m[01;36m)[00m
						(NN kosten)[01;31m)[00m[01;31m)[00m[01;31m)[00m [01;33mSIMPX) VF)[00m
			[01;31m(SIMPX[00m [01;33m(SIMPX[00m
				(LK konnen)
				[01;31m(MF[00m
					[01;36m(MF[00m
						(NX
							(PPER wir)) [01;33mSIMPX) SIMPX)[00m[01;36m)[00m
					[01;36m(VF[00m
						(ADVX [01;33m(SIMPX[00m
							(ADV dann))[01;36m)[00m[01;31m)[00m[01;31m)[00m
			(LK kann)
			(MF ich mit unserem vorgesetzten)
			(VC abchecken)[01;31m)[00m)) [01;33mSIMPX)[00m
Step:UNSET move
{'new_parent': 'SIMPX', 'new_family': ['NN', 'LK', 'MF'], 'mover info': [('NN', (7, 8))], 'old_family': ['ART', 'NN'], 'start left siblings': ['ART'], 'auto preterminals': ('ART', 'NN', 'ART', 'NN', 'VMFIN', 'PPER', 'ADV', 'VMFIN', 'PPER', 'APPR', 'PPOSAT', 'NN', 'VVINF'), 'start right siblings': [], 'end left siblings': [], 'auto preterminal span': (4, 17), 'movers': ['NN'], 'old_parent': 'NX', 'POS confusion': ('NN', 'NN'), 'end right siblings': ['LK', 'MF'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		[01;31m(NX[00m [01;33m(SIMPX (VF (SIMPX[00m
			[01;36m(NX[00m
				[01;36m(VF[00m
					(ART die)[01;36m)[00m[01;36m)[00m
			[01;36m(LK[00m
				[01;36m(VXFIN[00m
					(NN kosten)[01;36m)[00m[01;36m)[00m[01;31m)[00m
		(ART der)
		[01;31m(SIMPX[00m
			[01;36m(MF[00m [01;31m(VF[00m
				(NX
					(NX die frage)
					(NX der))[01;31m)[00m[01;36m)[00m
			[01;31m(SIMPX[00m
				(NN kosten) [01;33mSIMPX) VF)[00m
				[01;33m(SIMPX[00m (LK konnen)
				[01;31m(MF[00m
					[01;36m(MF[00m
						(NX
							(PPER wir)) [01;33mSIMPX) SIMPX)[00m[01;36m)[00m
					[01;36m(VF[00m
						(ADVX [01;33m(SIMPX[00m
							(ADV dann))[01;36m)[00m[01;31m)[00m[01;31m)[00m
			(LK kann)
			(MF ich mit unserem vorgesetzten)
			(VC abchecken)[01;31m)[00m)) [01;33mSIMPX)[00m
Step:Different label
{'family': ['MF', 'SIMPX', 'LK', 'MF', 'VC'], 'auto preterminal span': (4, 7), 'span': (4, 7), 'subtrees': ['NX'], 'parent': 'SIMPX', 'over_word': False, 'auto preterminals': ('ART', 'NN', 'ART'), 'classified_type': 'Different label', 'type': 'relabel', 'change': ('VF', 'MF')}
(TOP
	(TURN
		(DM ja)
		[01;31m(NX[00m [01;33m(SIMPX (VF (SIMPX[00m
			[01;36m(NX[00m
				[01;36m(VF[00m
					(ART die)[01;36m)[00m[01;36m)[00m
			[01;36m(LK[00m
				[01;36m(VXFIN[00m
					(NN kosten)[01;36m)[00m[01;36m)[00m[01;31m)[00m
		(ART der)
		[01;31m(SIMPX[00m
			(MF die frage der)
			[01;31m(SIMPX[00m
				(NN kosten) [01;33mSIMPX) VF)[00m
				[01;33m(SIMPX[00m (LK konnen)
				[01;31m(MF[00m
					[01;36m(MF[00m
						(NX
							(PPER wir)) [01;33mSIMPX) SIMPX)[00m[01;36m)[00m
					[01;36m(VF[00m
						(ADVX [01;33m(SIMPX[00m
							(ADV dann))[01;36m)[00m[01;31m)[00m[01;31m)[00m
			(LK kann)
			(MF ich mit unserem vorgesetzten)
			(VC abchecken)[01;31m)[00m)) [01;33mSIMPX)[00m
Step:UNSET move
{'new_parent': 'TURN', 'new_family': ['DM', 'NX', 'NN', 'ART', 'SIMPX'], 'mover info': [('NN', (2, 3))], 'old_family': ['ART', 'NN'], 'start left siblings': ['ART'], 'auto preterminals': ('PTKANT', 'ART', 'NN', 'ART', 'ART', 'NN', 'ART', 'NN', 'VMFIN', 'PPER', 'ADV', 'VMFIN', 'PPER', 'APPR', 'PPOSAT', 'NN', 'VVINF'), 'start right siblings': [], 'end left siblings': ['DM', 'NX'], 'auto preterminal span': (0, 17), 'movers': ['NN'], 'old_parent': 'NX', 'POS confusion': ('NN', 'NN'), 'end right siblings': ['ART', 'SIMPX'], 'classified_type': 'UNSET move', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		[01;36m(VF[00m
			(NX [01;33m(SIMPX (VF (SIMPX[00m
				(ART die))[01;36m)[00m
		[01;36m(LK[00m
			[01;36m(VXFIN[00m
				(NN kosten)[01;36m)[00m[01;36m)[00m
		(ART der)
		[01;31m(SIMPX[00m
			(MF die frage der)
			[01;31m(SIMPX[00m
				(NN kosten) [01;33mSIMPX) VF)[00m
				[01;33m(SIMPX[00m (LK konnen)
				[01;31m(MF[00m
					[01;36m(MF[00m
						(NX
							(PPER wir)) [01;33mSIMPX) SIMPX)[00m[01;36m)[00m
					[01;36m(VF[00m
						(ADVX [01;33m(SIMPX[00m
							(ADV dann))[01;36m)[00m[01;31m)[00m[01;31m)[00m
			(LK kann)
			(MF ich mit unserem vorgesetzten)
			(VC abchecken)[01;31m)[00m)) [01;33mSIMPX)[00m
Step:Modifier Attachment
{'new_parent': 'SIMPX', 'new_family': ['NN', 'LK', 'MF', 'ADVX'], 'mover info': [('ADVX', (10, 11))], 'old_family': ['NX', 'ADVX'], 'start left siblings': ['NX'], 'auto preterminals': ('NN', 'VMFIN', 'PPER', 'ADV'), 'start right siblings': [], 'end left siblings': ['NN', 'LK', 'MF'], 'auto preterminal span': (7, 11), 'movers': ['ADVX'], 'old_parent': 'MF', 'POS confusion': ('ADV', 'ADV'), 'end right siblings': [], 'classified_type': 'Modifier Attachment', 'type': 'move'}
(TOP
	(TURN
		(DM ja)
		[01;36m(VF[00m
			(NX [01;33m(SIMPX (VF (SIMPX[00m
				(ART die))[01;36m)[00m
		[01;36m(LK[00m
			[01;36m(VXFIN[00m
				(NN kosten)[01;36m)[00m[01;36m)[00m
		(ART der)
		[01;31m(SIMPX[00m
			(MF die frage der)
			[01;31m(SIMPX[00m
				(NN kosten) [01;33mSIMPX) VF)[00m
				[01;36m(SIMPX[00m
					(LK konnen)
					(MF wir) [01;33mSIMPX)[00m[01;36m)[00m
				[01;36m(VF[00m
					(ADVX [01;33m(SIMPX[00m
						(ADV dann))[01;36m)[00m[01;31m)[00m
			(LK kann)
			(MF ich mit unserem vorgesetzten)
			(VC abchecken)[01;31m)[00m)) [01;33mSIMPX)[00m
Step:Unary
{'subtrees': ['NX'], 'family': ['DM', 'VF', 'NN', 'ART', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART',), 'right siblings': [(NN kosten), (ART der), (SIMPX (MF (NX (NX (ART die) (NN frage)) (NX (ART der)))) (SIMPX (NN kosten) (LK (VXFIN (VMFIN konnen))) (MF (NX (PPER wir))) (ADVX (ADV dann))) (LK (VXFIN (VMFIN kann))) (MF (NX (PPER ich)) (PX (APPR mit) (NX (PPOSAT unserem) (NN vorgesetzten)))) (VC (VXINF (VVINF abchecken))))], 'left siblings': [(DM (PTKANT ja))], 'auto preterminal span': (1, 2), 'span': (1, 2), 'parent': 'TURN', 'label': 'VF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		[01;33m(SIMPX (VF (SIMPX[00m (VF die)
		[01;36m(LK[00m
			[01;36m(VXFIN[00m
				(NN kosten)[01;36m)[00m[01;36m)[00m
		(ART der)
		[01;31m(SIMPX[00m
			(MF die frage der)
			[01;31m(SIMPX[00m
				(NN kosten) [01;33mSIMPX) VF)[00m
				[01;36m(SIMPX[00m
					(LK konnen)
					(MF wir) [01;33mSIMPX)[00m[01;36m)[00m
				[01;36m(VF[00m
					(ADVX [01;33m(SIMPX[00m
						(ADV dann))[01;36m)[00m[01;31m)[00m
			(LK kann)
			(MF ich mit unserem vorgesetzten)
			(VC abchecken)[01;31m)[00m)) [01;33mSIMPX)[00m
Step:Single Word Phrase
{'subtrees': ['NN'], 'family': ['DM', 'VF', 'VXFIN', 'ART', 'SIMPX'], 'over_word': True, 'over words': True, 'auto preterminals': ('NN',), 'right siblings': [(ART der), (SIMPX (MF (NX (NX (ART die) (NN frage)) (NX (ART der)))) (SIMPX (NN kosten) (LK (VXFIN (VMFIN konnen))) (MF (NX (PPER wir))) (ADVX (ADV dann))) (LK (VXFIN (VMFIN kann))) (MF (NX (PPER ich)) (PX (APPR mit) (NX (PPOSAT unserem) (NN vorgesetzten)))) (VC (VXINF (VVINF abchecken))))], 'left siblings': [(DM (PTKANT ja)), (VF (NX (ART die)))], 'auto preterminal span': (2, 3), 'span': (2, 3), 'parent': 'TURN', 'label': 'VXFIN', 'classified_type': 'Single Word Phrase', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		[01;33m(SIMPX (VF (SIMPX[00m (VF die)
		[01;36m(LK[00m
			(VXFIN
				(NN kosten))[01;36m)[00m
		(ART der)
		[01;31m(SIMPX[00m
			(MF die frage der)
			[01;31m(SIMPX[00m
				(NN kosten) [01;33mSIMPX) VF)[00m
				[01;36m(SIMPX[00m
					(LK konnen)
					(MF wir) [01;33mSIMPX)[00m[01;36m)[00m
				[01;36m(VF[00m
					(ADVX [01;33m(SIMPX[00m
						(ADV dann))[01;36m)[00m[01;31m)[00m
			(LK kann)
			(MF ich mit unserem vorgesetzten)
			(VC abchecken)[01;31m)[00m)) [01;33mSIMPX)[00m
Step:Unary
{'subtrees': ['VXFIN'], 'family': ['DM', 'VF', 'LK', 'ART', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('NN',), 'right siblings': [(ART der), (SIMPX (MF (NX (NX (ART die) (NN frage)) (NX (ART der)))) (SIMPX (NN kosten) (LK (VXFIN (VMFIN konnen))) (MF (NX (PPER wir))) (ADVX (ADV dann))) (LK (VXFIN (VMFIN kann))) (MF (NX (PPER ich)) (PX (APPR mit) (NX (PPOSAT unserem) (NN vorgesetzten)))) (VC (VXINF (VVINF abchecken))))], 'left siblings': [(DM (PTKANT ja)), (VF (NX (ART die)))], 'auto preterminal span': (2, 3), 'span': (2, 3), 'parent': 'TURN', 'label': 'LK', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		[01;33m(SIMPX (VF (SIMPX[00m (VF die)
		(LK kosten)
		(ART der)
		[01;31m(SIMPX[00m
			(MF die frage der)
			[01;31m(SIMPX[00m
				(NN kosten) [01;33mSIMPX) VF)[00m
				[01;36m(SIMPX[00m
					(LK konnen)
					(MF wir) [01;33mSIMPX)[00m[01;36m)[00m
				[01;36m(VF[00m
					(ADVX [01;33m(SIMPX[00m
						(ADV dann))[01;36m)[00m[01;31m)[00m
			(LK kann)
			(MF ich mit unserem vorgesetzten)
			(VC abchecken)[01;31m)[00m)) [01;33mSIMPX)[00m
Step:UNSET add
{'subtrees': ['LK', 'MF'], 'family': ['NN', 'SIMPX', 'ADVX'], 'over_word': False, 'over words': False, 'auto preterminals': ('VMFIN', 'PPER'), 'right siblings': [(ADVX (ADV dann))], 'left siblings': [(NN kosten)], 'auto preterminal span': (8, 10), 'span': (8, 10), 'parent': 'SIMPX', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		[01;33m(SIMPX (VF (SIMPX[00m (VF die)
		(LK kosten)
		(ART der)
		[01;31m(SIMPX[00m
			(MF die frage der)
			[01;31m(SIMPX[00m
				(NN kosten) [01;33mSIMPX) VF)[00m
				(SIMPX konnen wir) [01;33mSIMPX)[00m
				[01;36m(VF[00m
					(ADVX [01;33m(SIMPX[00m
						(ADV dann))[01;36m)[00m[01;31m)[00m
			(LK kann)
			(MF ich mit unserem vorgesetzten)
			(VC abchecken)[01;31m)[00m)) [01;33mSIMPX)[00m
Step:Unary
{'subtrees': ['ADVX'], 'family': ['NN', 'SIMPX', 'VF'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV',), 'right siblings': [], 'left siblings': [(NN kosten), (SIMPX (LK (VXFIN (VMFIN konnen))) (MF (NX (PPER wir))))], 'auto preterminal span': (10, 11), 'span': (10, 11), 'parent': 'SIMPX', 'label': 'VF', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		[01;33m(SIMPX (VF (SIMPX[00m (VF die)
		(LK kosten)
		(ART der)
		[01;31m(SIMPX[00m
			(MF die frage der)
			[01;31m(SIMPX[00m
				(NN kosten) [01;33mSIMPX) VF)[00m
				(SIMPX konnen wir) [01;33mSIMPX)[00m
				[01;33m(SIMPX[00m (VF dann)[01;31m)[00m
			(LK kann)
			(MF ich mit unserem vorgesetzten)
			(VC abchecken)[01;31m)[00m)) [01;33mSIMPX)[00m
Step:Clause Attachment
{'subtrees': ['MF', 'SIMPX', 'LK', 'MF', 'VC'], 'family': ['DM', 'VF', 'LK', 'ART', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ART', 'NN', 'ART', 'ART', 'NN', 'ART', 'NN', 'VMFIN', 'PPER', 'ADV', 'VMFIN', 'PPER', 'APPR', 'PPOSAT', 'NN', 'VVINF'), 'right siblings': [], 'parent': 'TURN', 'auto preterminal span': (0, 17), 'span': (4, 17), 'left siblings': ['DM', 'VF', 'LK', 'ART'], 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		[01;33m(SIMPX (VF (SIMPX[00m (VF die)
		(LK kosten)
		(ART der)
		(MF die frage der)
		[01;31m(SIMPX[00m
			(NN kosten) [01;33mSIMPX) VF)[00m
			(SIMPX konnen wir) [01;33mSIMPX)[00m
			[01;33m(SIMPX[00m (VF dann)[01;31m)[00m
		(LK kann)
		(MF ich mit unserem vorgesetzten)
		(VC abchecken))) [01;33mSIMPX)[00m
Step:Clause Attachment
{'subtrees': ['NN', 'SIMPX', 'VF'], 'family': ['DM', 'VF', 'LK', 'ART', 'MF', 'SIMPX', 'LK', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('PTKANT', 'ART', 'NN', 'ART', 'ART', 'NN', 'ART', 'NN', 'VMFIN', 'PPER', 'ADV', 'VMFIN', 'PPER', 'APPR', 'PPOSAT', 'NN', 'VVINF'), 'right siblings': ['LK', 'MF', 'VC'], 'parent': 'TURN', 'auto preterminal span': (0, 17), 'span': (7, 11), 'left siblings': ['DM', 'VF', 'LK', 'ART', 'MF'], 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'remove'}
(TOP
	(TURN
		(DM ja)
		[01;36m(SIMPX[00m
			[01;36m(SIMPX[00m
				[01;36m(VF[00m
					(VF die)
					(LK kosten)
					(ART der)
					(MF die frage der)
					(NN kosten)[01;36m)[00m[01;36m)[00m
			(SIMPX konnen wir)[01;36m)[00m
		[01;36m(SIMPX[00m
			(VF dann)
			(LK kann)
			(MF ich mit unserem vorgesetzten)
			(VC abchecken)[01;36m)[00m))
Step:UNSET add
{'subtrees': ['VF', 'LK', 'ART', 'MF', 'NN'], 'family': ['DM', 'VF', 'SIMPX', 'VF', 'LK', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'ART', 'ART', 'NN', 'ART', 'NN'), 'right siblings': [(SIMPX (LK (VXFIN (VMFIN konnen))) (MF (NX (PPER wir)))), (VF (ADVX (ADV dann))), (LK (VXFIN (VMFIN kann))), (MF (NX (PPER ich)) (PX (APPR mit) (NX (PPOSAT unserem) (NN vorgesetzten)))), (VC (VXINF (VVINF abchecken)))], 'left siblings': [(DM (PTKANT ja))], 'auto preterminal span': (1, 8), 'span': (1, 8), 'parent': 'TURN', 'label': 'VF', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		[01;36m(SIMPX[00m
			[01;36m(SIMPX[00m
				(VF
					(VF die)
					(LK kosten)
					(ART der)
					(MF die frage der)
					(NN kosten))[01;36m)[00m
			(SIMPX konnen wir)[01;36m)[00m
		[01;36m(SIMPX[00m
			(VF dann)
			(LK kann)
			(MF ich mit unserem vorgesetzten)
			(VC abchecken)[01;36m)[00m))
Step:Unary
{'subtrees': ['VF'], 'family': ['DM', 'SIMPX', 'SIMPX', 'VF', 'LK', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'ART', 'ART', 'NN', 'ART', 'NN'), 'right siblings': [(SIMPX (LK (VXFIN (VMFIN konnen))) (MF (NX (PPER wir)))), (VF (ADVX (ADV dann))), (LK (VXFIN (VMFIN kann))), (MF (NX (PPER ich)) (PX (APPR mit) (NX (PPOSAT unserem) (NN vorgesetzten)))), (VC (VXINF (VVINF abchecken)))], 'left siblings': [(DM (PTKANT ja))], 'auto preterminal span': (1, 8), 'span': (1, 8), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Unary', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		[01;36m(SIMPX[00m
			(SIMPX die kosten der die frage der kosten)
			(SIMPX konnen wir)[01;36m)[00m
		[01;36m(SIMPX[00m
			(VF dann)
			(LK kann)
			(MF ich mit unserem vorgesetzten)
			(VC abchecken)[01;36m)[00m))
Step:Clause Attachment
{'subtrees': ['SIMPX', 'SIMPX'], 'family': ['DM', 'SIMPX', 'VF', 'LK', 'MF', 'VC'], 'over_word': False, 'over words': False, 'auto preterminals': ('ART', 'NN', 'ART', 'ART', 'NN', 'ART', 'NN', 'VMFIN', 'PPER'), 'right siblings': [(VF (ADVX (ADV dann))), (LK (VXFIN (VMFIN kann))), (MF (NX (PPER ich)) (PX (APPR mit) (NX (PPOSAT unserem) (NN vorgesetzten)))), (VC (VXINF (VVINF abchecken)))], 'left siblings': [(DM (PTKANT ja))], 'auto preterminal span': (1, 10), 'span': (1, 10), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'Clause Attachment', 'type': 'add'}
(TOP
	(TURN
		(DM ja)
		(SIMPX die kosten der die frage der kosten konnen wir)
		[01;36m(SIMPX[00m
			(VF dann)
			(LK kann)
			(MF ich mit unserem vorgesetzten)
			(VC abchecken)[01;36m)[00m))
Step:UNSET add
{'subtrees': ['VF', 'LK', 'MF', 'VC'], 'family': ['DM', 'SIMPX', 'SIMPX'], 'over_word': False, 'over words': False, 'auto preterminals': ('ADV', 'VMFIN', 'PPER', 'APPR', 'PPOSAT', 'NN', 'VVINF'), 'right siblings': [], 'left siblings': [(DM (PTKANT ja)), (SIMPX (SIMPX (VF (VF (NX (ART die))) (LK (VXFIN (NN kosten))) (ART der) (MF (NX (NX (ART die) (NN frage)) (NX (ART der)))) (NN kosten))) (SIMPX (LK (VXFIN (VMFIN konnen))) (MF (NX (PPER wir)))))], 'auto preterminal span': (10, 17), 'span': (10, 17), 'parent': 'TURN', 'label': 'SIMPX', 'classified_type': 'UNSET add', 'type': 'add'}
(TOP ja die kosten der die frage der kosten konnen wir dann kann ich mit unserem vorgesetzten abchecken)

Sentence 697:
0 Initial errors
0 on fringe, 0 iterations

